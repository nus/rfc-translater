{
  "title": {
    "text": "RFC 4256 - Generic Message Exchange Authentication for the Secure Shell Protocol (SSH)",
    "ja": "RFC 4256 - セキュアシェルプロトコル（SSH）のための一般的なメッセージ交換の認証"
  },
  "number": 4256,
  "created_at": "2019-10-22 14:59:54.420271+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                          F. Cusack\nRequest for Comments: 4256                                  savecore.net\nCategory: Standards Track                                     M. Forssen\n                                             AppGate Network Security AB\n                                                            January 2006",
      "raw": true
    },
    {
      "indent": 14,
      "text": "Generic Message Exchange Authentication for\n      the Secure Shell Protocol (SSH)",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "ja": "この文書は、インターネットコミュニティのためのインターネット標準トラックプロトコルを指定し、改善のための議論と提案を要求します。このプロトコルの標準化状態と状態への「インターネット公式プロトコル標準」（STD 1）の最新版を参照してください。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2006).",
      "ja": "著作権（C）インターネット協会（2006）。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "The Secure Shell Protocol (SSH) is a protocol for secure remote login and other secure network services over an insecure network. This document describes a general purpose authentication method for the SSH protocol, suitable for interactive authentications where the authentication data should be entered via a keyboard (or equivalent alphanumeric input device). The major goal of this method is to allow the SSH client to support a whole class of authentication mechanism(s) without knowing the specifics of the actual authentication mechanism(s).",
      "ja": "セキュアシェルプロトコル（SSH）は、安全でないネットワーク上の安全なリモートログインおよびその他のセキュアなネットワークサービスのためのプロトコルです。この文書では、認証データは、キーボード（または同等の英数字入力装置）を介して入力されなければならないインタラクティブ認証に適したSSHプロトコル用の汎用認証方法が記載されています。この方法の主な目標は、SSHクライアントが実際の認証機構（S）の詳細を知らなくても、認​​証機構（複数可）のクラス全体をサポートできるようにすることです。"
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "The SSH authentication protocol [SSH-USERAUTH] is a general-purpose user authentication protocol. It is intended to be run over the SSH transport layer protocol [SSH-TRANS]. The authentication protocol assumes that the underlying protocols provide integrity and confidentiality protection.",
      "ja": "SSH認証プロトコル[SSH-USERAUTH]は汎用のユーザー認証プロトコルです。 SSHトランスポート層プロトコル[SSH-TRANS]上で実行されることを意図しています。認証プロトコルは、基礎となるプロトコルが完全性と機密性の保護を提供することを前提としています。"
    },
    {
      "indent": 3,
      "text": "This document describes a general purpose authentication method for the SSH authentication protocol. This method is suitable for interactive authentication methods that do not need any special software support on the client side. Instead, all authentication data should be entered via the keyboard. The major goal of this method is to allow the SSH client to have little or no knowledge of the specifics of the underlying authentication mechanism(s) used by the SSH server. This will allow the server to arbitrarily select or change the underlying authentication mechanism(s) without having to update client code.",
      "ja": "この文書では、SSH認証プロトコルのための汎用的な認証方法を説明します。このメソッドは、クライアント側に特別なソフトウェアのサポートを必要としないインタラクティブな認証方法に適しています。代わりに、すべての認証データは、キーボードから入力する必要があります。この方法の主な目標は、SSHクライアントがSSHサーバが使用する基本的な認証メカニズム（複数可）の仕様のほとんど、あるいはまったく知識を持つことができるようにすることです。これは、サーバーが任意に選択するか、またはクライアントコードを更新することなく、基本的な認証メカニズム（複数可）を変更することができます。"
    },
    {
      "indent": 3,
      "text": "The name for this authentication method is \"keyboard-interactive\".",
      "ja": "この認証方法の名称は、「キーボードインタラクティブ」です。"
    },
    {
      "indent": 3,
      "text": "This document should be read only after reading the SSH architecture document [SSH-ARCH] and the SSH authentication document [SSH-USERAUTH]. This document freely uses terminology and notation from both documents without reference or further explanation.",
      "ja": "この文書では、唯一のSSHアーキテクチャドキュメント[SSH-ARCH]とSSH認証文書[SSH-USERAUTH]を読んだ後に読まれるべきです。この文書は、自由に参照または更なる説明なしに両方の文書からの用語および表記法を使用します。"
    },
    {
      "indent": 3,
      "text": "This document also describes some of the client interaction with the user in obtaining the authentication information. While this is somewhat out of the scope of a protocol specification, it is described here anyway because some aspects of the protocol are specifically designed based on user interface issues, and omitting this information may lead to incompatible or awkward implementations.",
      "ja": "また、このドキュメントでは、認証情報を得る上でユーザーとクライアントの相互作用のいくつかを説明しています。これは幾分プロトコル仕様の範囲外であるが、プロトコルのいくつかの局面は、特にユーザーインターフェースの問題に基づいて設計されており、この情報を省略すると、互換性のない、または厄介な実装につながる可能性があるので、それはいずれにせよ、ここで説明されています。"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC-2119].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はあります[RFC-2119]に記載されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "2. Rationale",
      "section_title": true,
      "ja": "2.理由"
    },
    {
      "indent": 3,
      "text": "Currently defined authentication methods for SSH are tightly coupled with the underlying authentication mechanism. This makes it difficult to add new mechanisms for authentication as all clients must be updated to support the new mechanism. With the generic method defined here, clients will not require code changes to support new authentication mechanisms, and if a separate authentication layer is used, such as [PAM], then the server may not need any code changes either.",
      "ja": "SSHのための現在定義されている認証方式は、しっかりと基礎となる認証機構に連結されています。これは、すべてのクライアントが新しいメカニズムをサポートするように更新されなければならないので、それは難しい認証のための新しいメカニズムを追加することができます。別の認証層が使用されている場合は、ここで定義された一般的な方法では、クライアントは、このような[PAM]として、新たな認証メカニズムをサポートするために、コードの変更を必要としないであろう、そして、サーバはどちらか任意のコードの変更を必要としない場合があります。"
    },
    {
      "indent": 3,
      "text": "This presents a significant advantage to other methods, such as the \"password\" method (defined in [SSH-USERAUTH]), as new (presumably stronger) methods may be added \"at will\" and system security can be transparently enhanced.",
      "ja": "新しい（おそらくはより強い）メソッドは「意のままに」を添加してもよいし、システムのセキュリティが透過的に向上させることができるので、これは、そのような（[SSH-USERAUTH]で定義）「パスワード」法のような他の方法、に大きな利点を提示します。"
    },
    {
      "indent": 3,
      "text": "Challenge-response and One Time Password mechanisms are also easily supported with this authentication method.",
      "ja": "チャレンジ・レスポンスとワンタイムパスワードの仕組みも簡単にこの認証方法でサポートされています。"
    },
    {
      "indent": 3,
      "text": "However, this authentication method is limited to authentication mechanisms that do not require any special code, such as hardware drivers or password mangling, on the client.",
      "ja": "ただし、この認証方法は、クライアント上で、このようなハードウェアドライバまたはパスワードマングリングなどの特別なコードを必要としない認証メカニズムに制限されています。"
    },
    {
      "indent": 0,
      "text": "3. Protocol Exchanges",
      "section_title": true,
      "ja": "3.プロトコル交換"
    },
    {
      "indent": 3,
      "text": "The client initiates the authentication with an SSH_MSG_USERAUTH_REQUEST message. The server then requests authentication information from the client with an SSH_MSG_USERAUTH_INFO_REQUEST message. The client obtains the information from the user and then responds with an SSM_MSG_USERAUTH_INFO_RESPONSE message. The server MUST NOT send another SSH_MSG_USERAUTH_INFO_REQUEST before it has received the answer from the client.",
      "ja": "クライアントはSSH_MSG_USERAUTH_REQUESTメッセージで認証を開始します。その後、サーバーはSSH_MSG_USERAUTH_INFO_REQUESTメッセージでクライアントから認証情報を要求します。クライアントは、ユーザーからの情報を取得し、SSM_MSG_USERAUTH_INFO_RESPONSEメッセージで応答します。それは、クライアントからの回答を受け取った前に、サーバーは、別のSSH_MSG_USERAUTH_INFO_REQUESTを送ってはいけません。"
    },
    {
      "indent": 0,
      "text": "3.1. Initial Exchange",
      "section_title": true,
      "ja": "3.1。初期交換"
    },
    {
      "indent": 3,
      "text": "The authentication starts with the client sending the following packet:",
      "ja": "認証は、次のパケットを送信するクライアントを開始します。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_USERAUTH_REQUEST string user name (ISO-10646 UTF-8, as defined in [RFC-3629]) string service name (US-ASCII) string \"keyboard-interactive\" (US-ASCII) string language tag (as defined in [RFC-3066]) string submethods (ISO-10646 UTF-8)",
      "ja": "[RFCで定義されているバイトSSH_MSG_USERAUTH_REQUEST文字列のユーザー名（ISO-10646 UTF-8、[RFC-3629]で定義された）文字列のサービス名（US-ASCII）文字列 \"キーボードインタラクティブ\"（US-ASCII）文字列言語タグ（ -3066]）文字列のサブメソッド（ISO-10646 UTF-8）"
    },
    {
      "indent": 3,
      "text": "The language tag is deprecated and SHOULD be the empty string. It may be removed in a future revision of this specification. Instead, the server SHOULD select the language to be used based on the tags communicated during key exchange [SSH-TRANS].",
      "ja": "言語タグは廃止され、空の文字列でなければなりません。これは、この仕様の今後の改定に除去することができます。代わりに、サーバーは、鍵交換[SSH-TRANS]中に通信タグに基づいて、使用する言語を選択してください。"
    },
    {
      "indent": 3,
      "text": "If the language tag is not the empty string, the server SHOULD use the specified language for any messages sent to the client as part of this protocol. The language tag SHOULD NOT be used for language selection for messages outside of this protocol. If the server does not support the requested language, the language to be used is implementation-dependent.",
      "ja": "言語タグが空の文字列でない場合は、サーバーは、このプロトコルの一部としてクライアントに送信されたすべてのメッセージに対して指定された言語を使用すべきです。言語タグは、このプロトコルの外でメッセージの言語の選択には使用しないでください。サーバは要求された言語をサポートしていない場合は、使用する言語は、実装依存です。"
    },
    {
      "indent": 3,
      "text": "The submethods field is included so the user can give a hint of which actual methods he wants to use. It is a comma-separated list of authentication submethods (software or hardware) that the user prefers. If the client has knowledge of the submethods preferred by the user, presumably through a configuration setting, it MAY use the submethods field to pass this information to the server. Otherwise, it MUST send the empty string.",
      "ja": "ユーザーは実際の方法は、彼が使用したいのヒントを与えることができるようにサブメソッド・フィールドが含まれています。これは、ユーザが好む認証サブメソッド（ソフトウェアまたはハードウェア）のカンマ区切りのリストです。クライアントは、ユーザの好みサブメソッドの知識を持っている場合は、おそらく構成設定によって、それがサーバーにこの情報を渡すためにサブメソッドのフィールドを使用するかもしれません。それ以外の場合は、空の文字列を送らなければなりません。"
    },
    {
      "indent": 3,
      "text": "The actual names of the submethods is something the user and the server need to agree upon.",
      "ja": "サブメソッドの実際の名前は、ユーザーとサーバーが合意する必要があるものです。"
    },
    {
      "indent": 3,
      "text": "Server interpretation of the submethods field is implementation-dependent.",
      "ja": "サブメソッドフィールドのサーバの解釈は実装依存です。"
    },
    {
      "indent": 3,
      "text": "One possible implementation strategy of the submethods field on the server is that, unless the user may use multiple different submethods, the server ignores this field. If the user may authenticate using one of several different submethods, the server should treat the submethods field as a hint on which submethod the user wants to use this time.",
      "ja": "サーバー上のサブメソッドフィールドの一つの可能​​な実装戦略は、ユーザーが複数の異なるサブメソッドを使用していない限り、サーバはこのフィールドを無視する、ということです。ユーザーは、いくつかの異なるサブメソッドのいずれかを使用して認証する場合は、サーバは、ユーザがこの時間を使用したいサブメソッドれているヒントとしてサブメソッドフィールドを扱う必要があります。"
    },
    {
      "indent": 3,
      "text": "Note that when this message is sent to the server, the client has not yet prompted the user for a password, and so that information is NOT included with this initial message (unlike the \"password\" method).",
      "ja": "このメッセージがサーバーに送信されたとき、クライアントはまだパスワードの入力を求めるメッセージが表示されていない、ので、その情報を（「パスワード」の方法とは違って）この最初のメッセージに含まれていないことに注意してください。"
    },
    {
      "indent": 3,
      "text": "The server MUST reply with an SSH_MSG_USERAUTH_SUCCESS, SSH_MSG_USERAUTH_FAILURE, or SSH_MSG_USERAUTH_INFO_REQUEST message.",
      "ja": "サーバはSSH_MSG_USERAUTH_SUCCESS、SSH_MSG_USERAUTH_FAILURE、またはSSH_MSG_USERAUTH_INFO_REQUESTメッセージで返答しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The server SHOULD NOT reply with the SSH_MSG_USERAUTH_FAILURE message if the failure is based on the user name or service name; instead, it SHOULD send SSH_MSG_USERAUTH_INFO_REQUEST message(s), which look just like the one(s) that would have been sent in cases where authentication should proceed, and then send the failure message (after a suitable delay, as described below). The goal is to make it impossible to find valid usernames by comparing the results when authenticating as different users.",
      "ja": "障害がユーザー名やサービス名に基づいている場合、サーバーはSSH_MSG_USERAUTH_FAILUREメッセージで応答すべきではありません。代わりに、それだけで認証が進み、（後述のように、適した遅延の後に）、その後失敗メッセージを送信しなければならない場合に送信されたであろう1（S）のように見えるSSH_MSG_USERAUTH_INFO_REQUESTメッセージ（複数可）、送信すべきです。目標は、それは不可能のように異なるユーザを認証するときの結果を比較することで、有効なユーザ名を見つけるためにすることです。"
    },
    {
      "indent": 3,
      "text": "The server MAY reply with an SSH_MSG_USERAUTH_SUCCESS message if no authentication is required for the user in question. However, a better approach, for reasons discussed above, might be to reply with an SSH_MSG_USERAUTH_INFO_REQUEST message and ignore (don't validate) the response.",
      "ja": "認証が問題になっているユーザーのために必要とされない場合、サーバーはSSH_MSG_USERAUTH_SUCCESSメッセージで応答することができます。しかし、より良いアプローチは、上述の理由により、応答をSSH_MSG_USERAUTH_INFO_REQUESTメッセージで応答し、（検証しない）を無視するかもしれません。"
    },
    {
      "indent": 0,
      "text": "3.2. Information Requests",
      "section_title": true,
      "ja": "3.2。情報の要求"
    },
    {
      "indent": 3,
      "text": "Requests are generated from the server using the SSH_MSG_USERAUTH_INFO_REQUEST message.",
      "ja": "要求はSSH_MSG_USERAUTH_INFO_REQUESTメッセージを使用してサーバから生成されています。"
    },
    {
      "indent": 3,
      "text": "The server may send as many requests as are necessary to authenticate the client; the client MUST be prepared to handle multiple exchanges. However, the server MUST NOT ever have more than one SSH_MSG_USERAUTH_INFO_REQUEST message outstanding. That is, it may not send another request before the client has answered.",
      "ja": "クライアントを認証するために必要な、サーバは、できるだけ多くのリクエストを送信することができ、クライアントは、複数の交換を処理するために準備しなければなりません。ただし、サーバーはこれまで優れた複数のSSH_MSG_USERAUTH_INFO_REQUESTメッセージを持ってはいけません。これは、クライアントが応答した前に、それは別の要求を送信しないこと、です。"
    },
    {
      "indent": 3,
      "text": "The SSH_MSG_USERAUTH_INFO_REQUEST message is defined as follows:",
      "ja": "次のようにSSH_MSG_USERAUTH_INFO_REQUESTメッセージが定義されます。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_USERAUTH_INFO_REQUEST string name (ISO-10646 UTF-8) string instruction (ISO-10646 UTF-8) string language tag (as defined in [RFC-3066]) int num-prompts string prompt[1] (ISO-10646 UTF-8) boolean echo[1] ... string prompt[num-prompts] (ISO-10646 UTF-8) boolean echo[num-prompts]",
      "ja": "バイトSSH_MSG_USERAUTH_INFO_REQUEST文字列名（ISO-10646 UTF-8）文字列命令（ISO-10646 UTF-8）文字列言語タグ（[RFC-3066]で定義されるように）、INT NUM-プロンプト文字列プロンプト[1]（ISO-10646 UTF- 8）ブールエコー[1] ...文字列プロンプト[NUM-プロンプト]（ISO-10646 UTF-8）ブールエコー[NUM-プロンプト]"
    },
    {
      "indent": 3,
      "text": "The language tag is deprecated and SHOULD be the empty string. It may be removed in a future revision of this specification. Instead, the server SHOULD select the language used based on the tags communicated during key exchange [SSH-TRANS].",
      "ja": "言語タグは廃止され、空の文字列でなければなりません。これは、この仕様の今後の改定に除去することができます。代わりに、サーバーは、鍵交換[SSH-TRANS]中に通信タグに基づいて使用する言語を選択する必要があります。"
    },
    {
      "indent": 3,
      "text": "If the language tag is not the empty string, the server SHOULD use the specified language for any messages sent to the client as part of this protocol. The language tag SHOULD NOT be used for language selection for messages outside of this protocol. If the server does not support the requested language, the language to be used is implementation-dependent.",
      "ja": "言語タグが空の文字列でない場合は、サーバーは、このプロトコルの一部としてクライアントに送信されたすべてのメッセージに対して指定された言語を使用すべきです。言語タグは、このプロトコルの外でメッセージの言語の選択には使用しないでください。サーバは要求された言語をサポートしていない場合は、使用する言語は、実装依存です。"
    },
    {
      "indent": 3,
      "text": "The server SHOULD take into consideration that some clients may not be able to properly display a long name or prompt field (see next section), and limit the lengths of those fields if possible. For example, instead of an instruction field of \"Enter Password\" and a prompt field of \"Password for user23@host.domain: \", a better choice might be an instruction field of \"Password authentication for user23@host.domain\" and a prompt field of \"Password: \". It is expected that this authentication method would typically be backended by [PAM] and so such choices would not be possible.",
      "ja": "サーバは、いくつかのクライアントが適切に長い名前やプロンプトフィールド（次のセクションを参照）を表示することができない可能性が考慮、およびそれらのフィールド可能であればの長さを制限する必要があります。たとえば、代わりに「パスワードを入力」の命令フィールドと「user23@host.domainのパスワード：」のプロンプトフィールドの、より良い選択は、命令「user23@host.domainのパスワード認証」のフィールドとあるかもしれませんプロンプトフィールド「パスワード：」。この認証方法は、一般的に[PAM]によってbackendedことになるので、そのような選択が可能ではないであろうことが期待されます。"
    },
    {
      "indent": 3,
      "text": "The name and instruction fields MAY be empty strings; the client MUST be prepared to handle this correctly. The prompt field(s) MUST NOT be empty strings.",
      "ja": "名前と命令フィールドは空の文字列になる場合がありますクライアントはこれを正しく処理するために準備しなければなりません。プロンプトフィールド（複数可）空の文字列にすることはできません。"
    },
    {
      "indent": 3,
      "text": "The num-prompts field may be `0', in which case there will be no prompt/echo fields in the message, but the client SHOULD still display the name and instruction fields (as described below).",
      "ja": "NUM-プロンプトフィールドがメッセージには、プロンプト/エコーフィールドないであろうが、（後述のように）クライアントがまだ名前と指示フィールドを表示する必要があり、その場合、 '0' であってもよいです。"
    },
    {
      "indent": 0,
      "text": "3.3. User Interface",
      "section_title": true,
      "ja": "3.3。ユーザーインターフェース"
    },
    {
      "indent": 3,
      "text": "Upon receiving a request message, the client SHOULD prompt the user as follows:",
      "ja": "次のように要求メッセージを受信すると、クライアントはユーザーにプロンプ​​トを表示する必要があります。"
    },
    {
      "indent": 3,
      "text": "A command line interface (CLI) client SHOULD print the name and instruction (if non-empty), adding newlines. Then, for each prompt in turn, the client SHOULD display the prompt and read the user input.",
      "ja": "コマンドラインインタフェース（CLI）クライアントは、改行を追加し、（空でない場合）の名前と指示を印刷する必要があります。その後、順番に各プロンプトのために、クライアントはプロンプトを表示し、ユーザーの入力をお読みください。"
    },
    {
      "indent": 3,
      "text": "A graphical user interface (GUI) client has many choices on how to prompt the user. One possibility is to use the name field (possibly prefixed with the application's name) as the title of a dialog window in which the prompt(s) are presented. In that dialog window, the instruction field would be a text message, and the prompts would be labels for text entry fields. All fields SHOULD be presented to the user. For example, an implementation SHOULD NOT discard the name field because its windows lack titles; instead, it SHOULD find another way to display this information. If prompts are presented in a dialog window, then the client SHOULD NOT present each prompt in a separate window.",
      "ja": "グラフィカル・ユーザー・インターフェース（GUI）クライアントがユーザにプロンプ​​トを表示する方法について多くの選択肢を持っています。一つの可能​​性は、プロンプト（複数可）提示されるダイアログウィンドウのタイトルとして（おそらく、アプリケーションの名前を接頭辞）名フィールドを使用することです。そのダイアログウィンドウで、命令フィールドは、テキストメッセージになり、そしてプロンプトは、テキスト入力フィールドのラベルになります。すべてのフィールドは、ユーザに提示されるべきです。そのウィンドウはタイトルを欠いているため例えば、実装は名前のフィールドを捨ててはいけません。その代わり、それは、この情報を表示する別の方法を見つける必要があります。プロンプトがダイアログウィンドウに提示されている場合、クライアントは別のウィンドウで各プロンプトを提示すべきではありません。"
    },
    {
      "indent": 3,
      "text": "All clients MUST properly handle an instruction field with embedded newlines. They SHOULD also be able to display at least 30 characters for the name and prompts. If the server presents names or prompts longer than 30 characters, the client MAY truncate these fields to the length it can display. If the client does truncate any fields, there MUST be an obvious indication that such truncation has occurred. The instruction field SHOULD NOT be truncated.",
      "ja": "すべてのクライアントが適切に埋め込まれた改行と命令フィールドを処理する必要があります。彼らはまた、名およびプロンプトのために少なくとも30個の文字を表示することができべきです。サーバが名前を提示以上30文字より求められた場合、クライアントはそれを表示することができます長さにこれらのフィールドが切り捨てられる場合があります。クライアントは、任意のフィールドを切り捨てるない場合は、そのような切り捨てが発生したことを明らかに兆候があるに違いありません。命令フィールドは切り捨てされるべきではありません。"
    },
    {
      "indent": 3,
      "text": "Clients SHOULD use control character filtering, as discussed in [SSH-ARCH], to avoid attacks by including terminal control characters in the fields to be displayed.",
      "ja": "[SSH-ARCH]で説明したようにクライアントが表示される分野で、端末制御文字を含めることによって、攻撃を避けるために、制御文字のフィルタリングを使用すべきです。"
    },
    {
      "indent": 3,
      "text": "For each prompt, the corresponding echo field indicates whether the\nuser input should be echoed as characters are typed.  Clients SHOULD\ncorrectly echo/mask user input for each prompt independently of other\nprompts in the request message.  If a client does not honor the echo\nfield for whatever reason, then the client MUST err on the side of\nmasking input.  A GUI client might like to have a checkbox toggling\necho/mask.  Clients SHOULD NOT add any additional characters to the\nprompt, such as \": \" (colon-space); the server is responsible for\nsupplying all text to be displayed to the user.  Clients MUST also\naccept empty responses from the user and pass them on as empty\nstrings.",
      "raw": true
    },
    {
      "indent": 0,
      "text": "3.4. Information Responses",
      "section_title": true,
      "ja": "3.4。情報応答"
    },
    {
      "indent": 3,
      "text": "After obtaining the requested information from the user, the client MUST respond with an SSH_MSG_USERAUTH_INFO_RESPONSE message.",
      "ja": "ユーザーから要求された情報を取得した後、クライアントはSSH_MSG_USERAUTH_INFO_RESPONSEメッセージで応じなければなりません。"
    },
    {
      "indent": 3,
      "text": "The format of the SSH_MSG_USERAUTH_INFO_RESPONSE message is as follows:",
      "ja": "次のようにSSH_MSG_USERAUTH_INFO_RESPONSEメッセージの形式は次のとおりです。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_USERAUTH_INFO_RESPONSE int num-responses string response[1] (ISO-10646 UTF-8) ... string response[num-responses] (ISO-10646 UTF-8)",
      "ja": "バイトSSH_MSG_USERAUTH_INFO_RESPONSEはint NUM-応答文字列の応答[1]（ISO-10646 UTF-8）...文字列の応答[NUM-応答]（ISO-10646 UTF-8）"
    },
    {
      "indent": 3,
      "text": "Note that the responses are encoded in ISO-10646 UTF-8. It is up to the server how it interprets the responses and validates them. However, if the client reads the responses in some other encoding (e.g., ISO 8859-1), it MUST convert the responses to ISO-10646 UTF-8 before transmitting.",
      "ja": "応答はISO-10646 UTF-8でエンコードされていることに注意してください。それは応答を解釈し、それらを検証する方法サーバー次第です。クライアントは、いくつかの他のエンコーディングでの応答を読み込む場合は、（例えば、ISO 8859-1）は、送信する前にISO-10646 UTF-8への応答を変換する必要があります。"
    },
    {
      "indent": 3,
      "text": "From an internationalization standpoint, it is desired that if a user enters responses, the authentication process will work regardless of what OS and client software they are using. Doing so requires normalization. Systems supporting non-ASCII passwords SHOULD always normalize passwords and usernames whenever they are added to the database, or compare them (with or without hashing) to existing entries in the database. SSH implementations that both store the passwords and compare them SHOULD use [SASLPREP] for normalization.",
      "ja": "国際化の観点から、ユーザが回答を入力した場合、認証プロセスに関係なく、彼らが使用しているOSおよびクライアントソフトウェアの動作することが望まれます。そうすることで正規化を必要とします。非ASCIIのパスワードをサポートしているシステムは、常に、それらがデータベースに追加されるたびにパスワードとユーザ名を正規化する、またはデータベース内の既存のエントリに（またはハッシングなし）、それらを比較する必要があります。パスワードを保存し、それらを比較し、両方のSSHの実装では、正規化[SASLPREP]を使用すべきです。"
    },
    {
      "indent": 3,
      "text": "If the num-responses field does not match the num-prompts field in the request message, the server MUST send a failure message.",
      "ja": "NUM-応答フィールドは要求メッセージにNUM-プロンプトのフィールドと一致しない場合、サーバはエラーメッセージを送らなければなりません。"
    },
    {
      "indent": 3,
      "text": "In the case that the server sends a `0' num-prompts field in the request message, the client MUST send a response message with a `0' num-responses field to complete the exchange.",
      "ja": "サーバが `0送る場合は交換を完了するためにNUM-応答フィールドの要求メッセージにNUM-プロンプトフィールドを、クライアントは` 0' で応答メッセージを送らなければなりません。"
    },
    {
      "indent": 3,
      "text": "The responses MUST be ordered as the prompts were ordered. That is, response[n] MUST be the answer to prompt[n].",
      "ja": "プロンプトが命じられたとして回答を注文する必要があります。すなわち、レスポンス[N] [n]を促す答えなければなりませんです。"
    },
    {
      "indent": 3,
      "text": "After receiving the response, the server MUST send either an SSH_MSG_USERAUTH_SUCCESS, SSH_MSG_USERAUTH_FAILURE, or another SSH_MSG_USERAUTH_INFO_REQUEST message.",
      "ja": "応答を受信した後、サーバはSSH_MSG_USERAUTH_SUCCESS、SSH_MSG_USERAUTH_FAILURE、または別のSSH_MSG_USERAUTH_INFO_REQUESTメッセージのいずれかを送信しなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the server fails to authenticate the user (through the underlying authentication mechanism(s)), it SHOULD NOT send another request message(s) in an attempt to obtain new authentication data; instead, it SHOULD send a failure message. The only time the server should send multiple request messages is if additional authentication data is needed (i.e., because there are multiple underlying authentication mechanisms that must be used to authenticate the user).",
      "ja": "サーバは（基本的な認証メカニズム（複数可）を介して）ユーザを認証するために失敗した場合は、新しい認証データを取得しようとする試みには、別の要求メッセージ（複数可）を送るべきではありません。その代わり、それは失敗メッセージを送るべきです。サーバーが複数の要求メッセージを送信しなければならない唯一の時間は、追加の認証データが必要な場合である（つまり、ユーザーを認証するために使用されている必要があり、複数の基本的な認証メカニズムがあるため）。"
    },
    {
      "indent": 3,
      "text": "If the server intends to respond with a failure message, it MAY delay for an implementation-dependent time before sending it to the client. It is suspected that implementations are likely to make the time delay configurable; a suggested default is 2 seconds.",
      "ja": "サーバーが障害メッセージで応答するつもりなら、それはクライアントに送信する前に、実装依存時間遅らせる可能。実装は、時間遅延が設定可能にする可能性があることが疑われています。推奨のデフォルトは2秒です。"
    },
    {
      "indent": 0,
      "text": "4. Authentication Examples",
      "section_title": true,
      "ja": "4.認証例"
    },
    {
      "indent": 3,
      "text": "Here are two example exchanges between a client and server. The first is an example of challenge/response with a handheld token. This is an authentication that is not otherwise possible with other authentication methods.",
      "ja": "ここでは、クライアントとサーバの間に2つの例の交流があります。最初は、ハンドヘルドトークンによるチャレンジ/レスポンスの例です。これは、他の認証方法とそれ以外のことはできません認証です。"
    },
    {
      "indent": 6,
      "text": "C: byte SSH_MSG_USERAUTH_REQUEST C: string \"user23\" C: string \"ssh-userauth\" C: string \"keyboard-interactive\" C: string \"\" C: string \"\"",
      "ja": "C：バイトSSH_MSG_USERAUTH_REQUEST C：文字列 \"user23\" C：文字列 \"のssh-USERAUTH\" C：文字列 \"キーボードインタラクティブ\" C：文字列 \"\" C：文字列 \"\""
    },
    {
      "indent": 6,
      "text": "S: byte SSH_MSG_USERAUTH_INFO_REQUEST S: string \"CRYPTOCard Authentication\" S: string \"The challenge is '14315716'\" S: string \"en-US\" S: int 1 S: string \"Response: \" S: boolean TRUE",
      "ja": "S：バイトSSH_MSG_USERAUTH_INFO_REQUEST S：文字列 \"のCRYPTOCard認証\" S：文字列 \"EN-US\" S：文字列：1つのS int型 \"レスポンス：\" S：ブール値TRUE文字列S \"の課題は '14315716' です\""
    },
    {
      "indent": 6,
      "text": "[Client prompts user for password]",
      "ja": "[クライアントはパスワードをユーザーに要求します]"
    },
    {
      "indent": 6,
      "text": "C: byte SSH_MSG_USERAUTH_INFO_RESPONSE C: int 1 C: string \"6d757575\"",
      "ja": "C：バイトSSH_MSG_USERAUTH_INFO_RESPONSEのC：INT 1 C：文字列 \"6d757575\""
    },
    {
      "indent": 6,
      "text": "S: byte SSH_MSG_USERAUTH_SUCCESS",
      "ja": "S：バイトSSH_MSG_USERAUTH_SUCCESS"
    },
    {
      "indent": 3,
      "text": "The second example is a standard password authentication; in this case, the user's password is expired.",
      "ja": "第二の例は、標準のパスワード認証です。この場合には、ユーザーのパスワードの有効期限が切れています。"
    },
    {
      "indent": 6,
      "text": "C: byte SSH_MSG_USERAUTH_REQUEST C: string \"user23\" C: string \"ssh-userauth\" C: string \"keyboard-interactive\" C: string \"en-US\" C: string \"\"",
      "ja": "C：バイトSSH_MSG_USERAUTH_REQUEST C：文字列 \"user23\" C：文字列 \"のssh-USERAUTH\" C：文字列 \"キーボードインタラクティブ\" C：文字列 \"EN-US\" C：文字列 \"\""
    },
    {
      "indent": 6,
      "text": "S: byte SSH_MSG_USERAUTH_INFO_REQUEST S: string \"Password Authentication\" S: string \"\" S: string \"en-US\" S: int 1 S: string \"Password: \" S: boolean FALSE",
      "ja": "S：バイトSSH_MSG_USERAUTH_INFO_REQUEST S：文字列 \"パスワード認証\" S：文字列 \"\" S：文字列 \"EN-US\" S：INT 1 S：文字列 \"パスワード：\" S：ブール値FALSE"
    },
    {
      "indent": 6,
      "text": "[Client prompts user for password]",
      "ja": "[クライアントはパスワードをユーザーに要求します]"
    },
    {
      "indent": 6,
      "text": "C: byte SSH_MSG_USERAUTH_INFO_RESPONSE C: int 1 C: string \"password\"",
      "ja": "C：バイトSSH_MSG_USERAUTH_INFO_RESPONSEのC：1つのCのint型：文字列 \"パスワード\""
    },
    {
      "indent": 6,
      "text": "S: byte SSH_MSG_USERAUTH_INFO_REQUEST S: string \"Password Expired\" S: string \"Your password has expired.\" S: string \"en-US\" S: int 2 S: string \"Enter new password: \" S: boolean FALSE S: string \"Enter it again: \" S: boolean FALSE",
      "ja": "S：バイトSSH_MSG_USERAUTH_INFO_REQUEST S：文字列：文字列S「パスワードの有効期限が切れ」「あなたのパスワードの有効期限が切れています。」 S：文字列 \"EN-US\" S：文字列 \"新しいパスワードを入力します：\" S：ブールFALSE S：文字列は \"もう一度それを入力してください：\" S：ブールFALSE 2つのSをint型"
    },
    {
      "indent": 6,
      "text": "[Client prompts user for new password]",
      "ja": "[クライアントは、新しいパスワードをユーザーに要求します]"
    },
    {
      "indent": 6,
      "text": "C: byte SSH_MSG_USERAUTH_INFO_RESPONSE C: int 2 C: string \"newpass\" C: string \"newpass\"",
      "ja": "C：バイトSSH_MSG_USERAUTH_INFO_RESPONSEのC：INT 2 C：文字列 \"NEWPASS\" C：文字列 \"NEWPASS\""
    },
    {
      "indent": 6,
      "text": "S: byte SSH_MSG_USERAUTH_INFO_REQUEST S: string \"Password changed\" S: string \"Password successfully changed for user23.\" S: string \"en-US\" S: int 0",
      "ja": "S：バイトSSH_MSG_USERAUTH_INFO_REQUEST S：文字列「パスワードに成功user23のために変更しました。」：文字列Sは、「パスワードを変更しました」 S：文字列 \"EN-US\" S：INT 0"
    },
    {
      "indent": 6,
      "text": "[Client displays message to user]",
      "ja": "[クライアントは、ユーザにメッセージを表示します]"
    },
    {
      "indent": 6,
      "text": "C: byte SSH_MSG_USERAUTH_INFO_RESPONSE C: int 0",
      "ja": "C：バイトSSH_MSG_USERAUTH_INFO_RESPONSEのC：INT 0"
    },
    {
      "indent": 6,
      "text": "S: byte SSH_MSG_USERAUTH_SUCCESS",
      "ja": "S：バイトSSH_MSG_USERAUTH_SUCCESS"
    },
    {
      "indent": 0,
      "text": "5. IANA Considerations",
      "section_title": true,
      "ja": "5. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "The userauth type \"keyboard-interactive\" is used for this authentication method.",
      "ja": "USERAUTHタイプ「キーボードインタラクティブは、」この認証方法のために使用されています。"
    },
    {
      "indent": 3,
      "text": "The following method-specific constants are used with this authentication method:",
      "ja": "以下のメソッド固有の定数は、この認証方法で使用されています。"
    },
    {
      "indent": 6,
      "text": "SSH_MSG_USERAUTH_INFO_REQUEST 60 SSH_MSG_USERAUTH_INFO_RESPONSE 61",
      "ja": "SSH_MSG_USERAUTH_INFO_REQUEST 60 SSH_MSG_USERAUTH_INFO_RESPONSE 61"
    },
    {
      "indent": 0,
      "text": "6. Security Considerations",
      "section_title": true,
      "ja": "6.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "The authentication protocol and this authentication method depend on the security of the underlying SSH transport layer. Without the confidentiality provided therein, any authentication data passed with this method is subject to interception.",
      "ja": "認証プロトコルとこの認証方法は、基礎となるSSHトランスポート層のセキュリティに依存します。内部に設けられた機密性なしに、この方法で渡された認証データが傍受対象です。"
    },
    {
      "indent": 3,
      "text": "The number of client-server exchanges required to complete an authentication using this method may be variable. It is possible that an observer may gain valuable information simply by counting that number. For example, an observer may guess that a user's password has expired, and with further observation may be able to determine the password lifetime imposed by a site's password expiration policy.",
      "ja": "この方法を使用して認証を完了するために必要なクライアント・サーバ・交換の数が可変であってもよいです。観察者は、単純にその数をカウントすることで、貴重な情報を得ることが可能です。例えば、観察者は、ユーザーのパスワードの有効期限が切れていることを推測することができ、さらに観察して、サイトのパスワードの有効期限ポリシーによって課されたパスワードの有効期間を決定することができます。"
    },
    {
      "indent": 0,
      "text": "7. References",
      "section_title": true,
      "ja": "7.参考"
    },
    {
      "indent": 0,
      "text": "7.1. Normative References",
      "section_title": true,
      "ja": "7.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC-2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC-2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC-3629] Yergeau, F., \"UTF-8, a transformation format of ISO 10646\", STD 63, RFC 3629, November 2003.",
      "ja": "[RFC-3629] Yergeau、F.、 \"UTF-8、ISO 10646の変換フォーマット\"、STD 63、RFC 3629、2003年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC-3066] Alvestrand, H., \"Tags for the Identification of Languages\", BCP 47, RFC 3066, January 2001.",
      "ja": "[RFC-3066] Alvestrand、H.、 \"言語識別のためのタグ\"、BCP 47、RFC 3066、2001年1月。"
    },
    {
      "indent": 3,
      "text": "[SSH-ARCH] Ylonen, T. and C. Lonvick, Ed., \"The Secure Shell (SSH) Protocol Architecture\", RFC 4251, January 2006.",
      "ja": "[SSH-ARCH] Ylonenと、T.とC. Lonvick、エド。、 \"セキュアシェル（SSH）プロトコルアーキテクチャ\"、RFC 4251、2006年1月。"
    },
    {
      "indent": 3,
      "text": "[SSH-USERAUTH] Ylonen, T. and C. Lonvick, Ed., \"The Secure Shell (SSH) Authentication Protocol\", RFC 4252, January 2006.",
      "ja": "[SSH-USERAUTH] Ylonenと、T.とC. Lonvick、エド。、 \"セキュアシェル（SSH）認証プロトコル\"、RFC 4252、2006年1月。"
    },
    {
      "indent": 3,
      "text": "[SSH-TRANS] Ylonen, T. and C. Lonvick, Ed., \"The Secure Shell (SSH) Transport Layer Protocol\", RFC 4253, January 2006.",
      "ja": "[SSH-TRANS] Ylonenと、T.とC. Lonvick、エド。、 \"セキュアシェル（SSH）トランスポート層プロトコル\"、RFC 4253、2006年1月。"
    },
    {
      "indent": 3,
      "text": "[SASLPREP] Zeilenga, K., \"SASLprep: Stringprep Profile for User Names and Passwords\", RFC 4013, February 2005.",
      "ja": "[SASLPREP] Zeilenga、K.、：、RFC 4013、2005年2月 \"SASLprepユーザ名とパスワードのためのstringprepプロフィール\"。"
    },
    {
      "indent": 0,
      "text": "7.2. Informative References",
      "section_title": true,
      "ja": "7.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[PAM] Samar, V., Schemers, R., \"Unified Login With Pluggable Authentication Modules (PAM)\", OSF RFC 86.0, October 1995.",
      "ja": "[PAM]サマール、V.、Schemers、R.、 \"のPAM（Pluggable Authentication Modules）と一体化ログイン\"、OSF RFC 86.0、1995年10月。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Frank Cusack savecore.net",
      "ja": "フランク・キューザックsavecore.net"
    },
    {
      "indent": 3,
      "text": "EMail: frank@savecore.net",
      "ja": "メールアドレス：frank@savecore.net"
    },
    {
      "indent": 3,
      "text": "Martin Forssen AppGate Network Security AB Otterhallegatan 2 SE-411 18 Gothenburg SWEDEN",
      "ja": "マーティンForssen AppGateネットワークセキュリティAB Otterhallegatan 2 SE-411 18ヨーテボリスウェーデン"
    },
    {
      "indent": 3,
      "text": "EMail: maf@appgate.com",
      "ja": "メールアドレス：maf@appgate.com"
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2006).",
      "ja": "著作権（C）インターネット協会（2006）。"
    },
    {
      "indent": 3,
      "text": "This document is subject to the rights, licenses and restrictions contained in BCP 78, and except as set forth therein, the authors retain all their rights.",
      "ja": "この文書では、BCP 78に含まれる権利と許可と制限の適用を受けており、その中の記載を除いて、作者は彼らのすべての権利を保有します。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein are provided on an \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書とここに含まれている情報は、基礎とCONTRIBUTOR「そのまま」、ORGANIZATION HE / SHEが表すまたはインターネットソサエティおよびインターネット・エンジニアリング・タスク・フォース放棄すべての保証、明示または、（もしあれば）後援ISに設けられています。黙示、情報の利用は、特定の目的に対する権利または商品性または適合性の黙示の保証を侵害しない任意の保証含むがこれらに限定されません。"
    },
    {
      "indent": 0,
      "text": "Intellectual Property",
      "ja": "知的財産"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any Intellectual Property Rights or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; nor does it represent that it has made any independent effort to identify any such rights. Information on the procedures with respect to rights in RFC documents can be found in BCP 78 and BCP 79.",
      "ja": "IETFは、本書またはそのような権限下で、ライセンスがたりないかもしれない程度に記載された技術の実装や使用に関係すると主張される可能性があります任意の知的財産権やその他の権利の有効性または範囲に関していかなる位置を取りません利用可能です。またそれは、それがどのような権利を確認する独自の取り組みを行ったことを示すものでもありません。 RFC文書の権利に関する手続きの情報は、BCP 78およびBCP 79に記載されています。"
    },
    {
      "indent": 3,
      "text": "Copies of IPR disclosures made to the IETF Secretariat and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the IETF on-line IPR repository at http://www.ietf.org/ipr.",
      "ja": "IPRの開示のコピーが利用できるようにIETF事務局とライセンスの保証に行われた、または本仕様の実装者または利用者がそのような所有権の使用のための一般的なライセンスまたは許可を取得するために作られた試みの結果を得ることができますhttp://www.ietf.org/iprのIETFのオンラインIPRリポジトリから。"
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights that may cover technology that may be required to implement this standard. Please address the information to the IETF at ietf-ipr@ietf.org.",
      "ja": "IETFは、その注意にこの標準を実装するために必要とされる技術をカバーすることができる任意の著作権、特許または特許出願、またはその他の所有権を持ってすべての利害関係者を招待します。 ietf-ipr@ietf.orgのIETFに情報を記述してください。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "了承"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is provided by the IETF Administrative Support Activity (IASA).",
      "ja": "RFCエディタ機能のための資金は、IETF管理サポート活動（IASA）によって提供されます。"
    }
  ]
}