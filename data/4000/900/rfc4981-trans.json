{
  "title": {
    "text": "RFC 4981 - Survey of Research towards Robust Peer-to-Peer Networks: Search Methods",
    "ja": "RFC 4981 - 検索方法：堅牢なピアツーピアネットワークに向けた研究の調査"
  },
  "number": 4981,
  "created_at": "2019-10-30 10:15:16.878132+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                          J. Risson\nRequest for Comments: 4981                                      T. Moors\nCategory: Informational                    University of New South Wales\n                                                          September 2007",
      "raw": true
    },
    {
      "indent": 7,
      "text": "Survey of Research towards Robust Peer-to-Peer Networks:\n                     Search Methods",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This memo provides information for the Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited.",
      "ja": "このメモはインターネットコミュニティのための情報を提供します。それはどんな種類のインターネット標準を指定しません。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "IESG Note",
      "ja": "IESG注意"
    },
    {
      "indent": 3,
      "text": "This RFC is not a candidate for any level of Internet Standard. The IETF disclaims any knowledge of the fitness of this RFC for any purpose and notes that the decision to publish is not based on IETF review apart from IESG review for conflict with IETF work. The RFC Editor has chosen to publish this document at its discretion. See RFC 3932 for more information.",
      "ja": "このRFCはインターネットStandardのどんなレベルの候補ではありません。 IETFは、いかなる目的のために、このRFCのフィットネスの知識を否認し、公開する決定がIETF仕事との競合のためのIESGレビューとは別にIETFレビューに基づいていないことを指摘しています。 RFC Editorはその裁量でこの文書を公開することを選択しました。詳細については、RFC 3932を参照してください。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "The pace of research on peer-to-peer (P2P) networking in the last five years warrants a critical survey. P2P has the makings of a disruptive technology -- it can aggregate enormous storage and processing resources while minimizing entry and scaling costs.",
      "ja": "過去5年間で、ピア・ツー・ピア（P2P）ネットワーク上の研究のペースは重要な調査を保証します。 P2Pは、破壊的な技術の素質を持っている - エントリとスケーリングのコストを最小限に抑えながら、それは巨大なストレージと処理リソースを集約することができます。"
    },
    {
      "indent": 3,
      "text": "Failures are common amongst massive numbers of distributed peers, though the impact of individual failures may be less than in conventional architectures. Thus, the key to realizing P2P's potential in applications other than casual file sharing is robustness.",
      "ja": "個々の障害の影響は、従来のアーキテクチャに比べて小さくてもよいものの障害は、分散ピアの膨大な数の間で共通です。このように、カジュアルなファイル共有以外のアプリケーションでP2Pの可能性を実現するための鍵は、堅牢です。"
    },
    {
      "indent": 3,
      "text": "P2P search methods are first couched within an overall P2P taxonomy. P2P indexes for simple key lookup are assessed, including those based on Plaxton trees, rings, tori, butterflies, de Bruijn graphs, and skip graphs. Similarly, P2P indexes for keyword lookup, information retrieval and data management are explored. Finally, early efforts to optimize range, multi-attribute, join, and aggregation queries over P2P indexes are reviewed. Insofar as they are available in the primary literature, robustness mechanisms and metrics are highlighted throughout. However, the low-level mechanisms that most affect robustness are not well isolated in the literature. Recommendations are given for future research.",
      "ja": "P2Pの検索方法は、まず、全体的なP2Pの分類の中に表現されています。 P2Pの簡単なキー検索のインデックスPlaxton木に基づくもの、指輪を含め、評価され、トーラス、蝶、デBruijnグラフのグラフ、グラフをスキップします。同様に、キーワード検索、情報検索およびデータ管理のためのP2Pインデックスが検討されています。最後に、P2Pインデックスの上に、範囲、マルチ属性の最適化に参加し、集約クエリへの早期取り組みが検討されています。それらは、一次文献で入手可能である限り、ロバスト性メカニズムとメトリックは全体にわたって強調されています。しかし、ほとんどは堅牢性に影響を与える低レベルのメカニズムは、文献に十分に絶縁されていません。勧告は、将来の研究のために与えられています。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................3\n   1.1. Related Disciplines ........................................6\n   1.2. Structured and Unstructured Routing ........................7\n   1.3. Indexes and Queries ........................................9\n2. Index Types ....................................................10\n   2.1. Local Index (Gnutella) ....................................10\n   2.2. Central Index (Napster) ...................................12\n   2.3. Distributed Index (Freenet) ...............................13\n3. Semantic Free Index ............................................15\n   3.1. Origins ...................................................15\n        3.1.1. Plaxton, Rajaraman, and Richa (PRR) ................15\n        3.1.2. Consistent Hashing .................................16\n        3.1.3. Scalable Distributed Data Structures (LH*) .........16\n   3.2. Dependability .............................................17\n        3.2.1. Static Dependability ...............................17\n        3.2.2. Dynamic Dependability ..............................18\n        3.2.3. Ephemeral or Stable Nodes -- O(log n) or\n               O(1) Hops ..........................................19\n        3.2.4. Simulation and Proof ...............................20\n   3.3. Latency ...................................................21\n        3.3.1. Hop Count and the O(1)-Hop DHTs ....................21\n        3.3.2. Proximity and the O(log n)-Hop DHTs ................22\n   3.4. Multicasting ..............................................23\n        3.4.1. Multicasting vs. Broadcasting ......................23\n        3.4.2. Motivation for DHT-based Multicasting ..............23\n        3.4.3. Design Issues ......................................24\n   3.5. Routing Geometries ........................................25\n        3.5.1. Plaxton Trees (Pastry, Tapestry) ...................25\n        3.5.2. Rings (Chord, DKS) .................................27\n        3.5.3. Tori (CAN) .........................................28\n        3.5.4. Butterflies (Viceroy) ..............................29\n        3.5.5. de Bruijn (D2B, Koorde, Distance Halving, ODRI) ....30\n        3.5.6. Skip Graphs ........................................32\n4. Semantic Index .................................................33\n   4.1. Keyword Lookup ............................................34\n        4.1.1. Gnutella Enhancements ..............................36\n        4.1.2. Partition-by-Document, Partition-by-Keyword ........38\n        4.1.3. Partial Search, Exhaustive Search ..................39\n   4.2. Information Retrieval .....................................39\n        4.2.1. Vector Model (PlanetP, FASD, eSearch) ..............41\n        4.2.2. Latent Semantic Indexing (pSearch) .................43\n        4.2.3. Small Worlds .......................................43\n5. Queries ........................................................44\n   5.1. Range Queries .............................................45\n   5.2. Multi-Attribute Queries ...................................48\n   5.3. Join Queries ..............................................50",
      "raw": true
    },
    {
      "indent": 3,
      "text": "   5.4. Aggregation Queries .......................................50\n6. Security Considerations ........................................52\n7. Conclusions ....................................................52\n8. Acknowledgments ................................................53\n9. References .....................................................54\n   9.1. Informative References ....................................54",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "Peer-to-peer (P2P) networks are those that exhibit three characteristics: self-organization, symmetric communication, and distributed control [1]. A self-organizing P2P network \"automatically adapts to the arrival, departure and failure of nodes\" [2]. Communication is symmetric in that peers act as both clients and servers. It has no centralized directory or control point. USENET servers and BGP peers have these traits [3] but the emphasis here is on the flurry of research since 2000. Leading examples include Gnutella [4], Freenet [5], Pastry [2], Tapestry [6], Chord [7], the Content Addressable Network (CAN) [8], pSearch [9], and Edutella [10]. Some have suggested that peers are inherently unreliable [11]. Others have assumed well-connected, stable peers [12].",
      "ja": "[1]自己組織化、対称通信、および分散制御：ピアツーピア（P2P）ネットワークは三つの特徴を示すものです。自己組織化P2Pネットワークは、「自動的にノードの到着、出発障害に適応する」[2]。通信は、クライアントとサーバの両方としてそのピアの行為で対称です。それは何の一元化されたディレクトリやコントロールポイントを持っていません。 USENETサーバおよびBGPピアは、これらの特性[3]を持っていますが、2000年主要な例はグヌーテラ[4]、Freenetの[5]、ペストリー[2]、タペストリー[6]、コード[7が含まれるので、ここでの重点は、研究の突風にあります]、連想ネットワーク（CAN）[8]、[9] pSearch、及びEdutella [10]。いくつかは、ピアが[11]、本質的に信頼できないことを示唆しています。他の人が適切に接続された、安定したピア[12]を想定しています。"
    },
    {
      "indent": 3,
      "text": "This critical survey of P2P academic literature is warranted, given the intensity of recent research. At the time of writing, one research database lists over 5,800 P2P publications [13]. One vendor surveyed P2P products and deployments [14]. There is also a tutorial survey of leading P2P systems [15]. DePaoli and Mariani recently reviewed the dependability of some early P2P systems at a high level [16]. The need for a critical survey was flagged in the peer-to-peer research group of the Internet Research Task Force (IRTF) [17].",
      "ja": "P2P学術文献のこの重要な調査では、最近の研究の強さを考えると、保証されています。執筆の時点で、1つの研究データベースリスト5800を超えるP2Pの出版物[13]。ワンベンダー調査P2P製品と展開[14]。主要なP2Pシステムのチュートリアル調査では、[15]もあります。 DePaoliとマリアーニは最近、ハイレベル[16]でいくつかの初期のP2Pシステムの信頼性を検討しました。重要な調査の必要性はインターネットResearch Task Force（IRTF）[17]のピア・ツー・ピアの研究グループでフラグが立てられました。"
    },
    {
      "indent": 3,
      "text": "P2P is potentially a disruptive technology with numerous applications, but this potential will not be realized unless it is demonstrated to be robust. A massively distributed search technique may yield numerous practical benefits for applications [18]. A P2P system has potential to be more dependable than architectures relying on a small number of centralized servers. It has potential to evolve better from small configurations -- the capital outlays for high performance servers can be reduced and spread over time if a P2P assembly of general purpose nodes is used. A similar argument motivated the deployment of distributed databases -- one thousand, off-the-shelf PC processors are more powerful and much less expensive than a large mainframe computer [19]. Storage and processing can be aggregated to achieve massive scale. Wasteful partitioning between servers or clusters can be avoided. As Gedik and Liu put it, if P2P is to find its way into applications other than casual file sharing, then reliability needs to be addressed [20].",
      "ja": "P2Pは、潜在的に多数のアプリケーションとの破壊的な技術であるが、堅牢であることが実証されていない限り、この可能性が実現されることはありません。大規模な分散型検索技術は、アプリケーション[18]のための多数の実際的な利益をもたらすことができます。 P2Pシステムは、中央サーバの少数に頼るのアーキテクチャよりも頼りになる可能性を秘めています。これは、小規模な構成からより良い進化する可能性を秘めている - 汎用ノードのP2Pアセンブリが使用されている場合には高性能サーバの資本支出を削減し、時間をかけて分散させることができます。同様の分散データベースの展開を動機引数 - 千、既製のPCプロセッサより強力かつ大型メインフレーム・コンピュータよりもはるかに安価である[19]。保管および処理は、大規模なスケールを達成するために集約することができます。サーバーまたはクラスタ間の無駄な分割を回避することができます。 Gedikと劉はそれを置くとして、P2Pはカジュアルなファイル共有以外のアプリケーションにその方法を見つけることであるならば、そして信頼性は、[20]対処する必要があります。"
    },
    {
      "indent": 3,
      "text": "The taxonomy of Figure 1 divides the entire body of P2P research literature along four lines: search, storage, security, and applications. This survey concentrates on search aspects. A P2P search network consists of an underlying index (Sections 2 to 4) and queries that propagate over that index (Section 5).",
      "ja": "検索、格納、セキュリティ、およびアプリケーション：図1の分類は、4本の線に沿ってP2P研究文献の全身を分割します。この調査では、検索側面に集中します。 P2P検索ネットワークは、基礎となる指標（セクション2〜4）とそのインデックス（セクション5）を介して伝播するクエリで構成されています。"
    },
    {
      "indent": 3,
      "text": "Search [18, 21-29] Semantic-Free Indexes [2, 6, 7, 30-52] Plaxton Trees Rings Tori Butterflies de Bruijn Graphs Skip Graphs Semantic Indexes [4, 53-71] Keyword Lookup Peer Information Retrieval Peer Data Management Queries [20, 22, 23, 25, 32, 38, 41, 56, 72-100] Range Queries Multi-Attribute Queries Join Queries Aggregation Queries Continuous Queries Recursive Queries Adaptive Queries",
      "ja": "検索[18、21-29]セマンティックフリーインデックス[2、6、7、30-52] Plaxton木リングトーリ・蝶・デ・Bruijnグラフグラフをスキップグラフセマンティックインデックス[4、53-71]キーワード検索は情報検索のピアデータ管理ピアクエリ[20、22、23、25、32、38、41、56、72から100]範囲クエリマルチ属性クエリがクエリ集約クエリ連続クエリ再帰クエリ適応クエリに参加"
    },
    {
      "indent": 3,
      "text": "Storage Consistency & Replication [101-112] Eventual consistency Trade-offs Distribution [39, 42, 90, 92, 113-131] Epidemics, Bloom Filters Fault Tolerance [40, 105, 132-139] Erasure Coding Byzantine Agreement Locality [24, 43, 47, 140-160] Load Balancing [37, 86, 100, 107, 151, 161-171]",
      "ja": "ストレージ整合＆レプリケーション[101-112]最終的な一貫性のトレードオフの分布[39、42、90、92、113から131]流行、ブルームは、フォールトトレランスをフィルタリング[40、105、132-139]ビザンチン契約地域コーディング消去[24 、43、47、140-160]ロードバランシング[37、86、100、107、151、161-171]"
    },
    {
      "indent": 3,
      "text": "Security Character [172-182] Identity Reputation and Trust Incentives Goals [25, 27, 71, 183-197] Availability Authenticity Anonymity Access Control Fair Trading",
      "ja": "セキュリティキャラクター[172から182]アイデンティティ評判と信頼のインセンティブ目標[25、27、71、183から197]可用性真正匿名アクセスコントロールフェアトレーディング"
    },
    {
      "indent": 3,
      "text": "Applications [1, 198-200] Memory [32, 90, 142, 201-222] File Systems Web Content Delivery Networks Directories Service Discovery Publish / Subscribe ... Intelligence [223-228] GRID Security... Communication [12, 92, 119, 229-247] Multicasting Streaming Media Mobility Sensors...",
      "ja": "用途[1、198-200]メモリ[32、90、142、201から222]システムズのWebコンテンツデリバリーネットワークディレクトリサービス発見は、パブリッシュ/サブスクライブファイル...インテリジェンス[223から228] GRIDセキュリティ...コミュニケーション[12、 92、119、229から247]マルチキャストストリーミングメディアモビリティセンサー..."
    },
    {
      "indent": 12,
      "text": "Figure 1: Classification of P2P Research Literature",
      "ja": "図1：P2P研究文学の分類"
    },
    {
      "indent": 3,
      "text": "This survey is concerned with two questions. The first, \"How do P2P search networks work?\" This foundation is important given the pace and breadth of P2P research in the last five years. In Section 2, we classify indexes as local, centralized and distributed. Since distributed indexes are becoming dominant, they are given closer attention in Sections 3 and 4. Section 3 compares distributed P2P indexes for simple key lookup; in particular, their origins (Section 3.1), dependability (Section 3.2), latency (Section 3.3), and their support for multicast (Section 3.4). It classifies those indexes according to their routing geometry (Section 3.5) -- Plaxton trees, rings, tori, butterflies, de Bruijn graphs and skip graphs. Section 4 reviews distributed P2P indexes supporting keyword lookup (Section 4.1) and information retrieval (Section 4.2). Section 5 probes the embryonic research on P2P queries; in particular, range queries (Section 5.1), multi-attribute queries (Section 5.2), join queries (Section 5.3), and aggregation queries (Section 5.4).",
      "ja": "この調査は二つの質問に関係しています。まず、「どのようにP2P検索ネットワークの仕事を？」この財団は、過去5年間でP2P研究のペースと幅与えられた重要です。第2節では、我々は、地元の集中と分散などのインデックスを分類します。分散インデックスが支配的になっているので、彼らは、セクション3に近い注意を与えていると4第3節では、簡単なキーのルックアップのための分散型P2Pインデックスを比較し、具体的には、それらの起源（セクション3.1）、信頼性（セクション3.2）、待ち時間（セクション3.3）、およびマルチキャストのための支援（3.4節）。 Plaxtonツリー、リング、鳥、蝶、デBruijnグラフグラフとスキップグラフ - それは、そのルーティングジオメトリ（3.5節）に従って、これらのインデックスを分類します。セクション4件、キーワード検索（セクション4.1）と情報検索（セクション4.2）をサポートするP2Pインデックスを分散します。第5節では、P2Pクエリの胚研究を探査します。特に、範囲クエリ（セクション5.1）、多属性クエリ（セクション5.2）、クエリ（セクション5.3）、および集約クエリ（セクション5.4）に参加。"
    },
    {
      "indent": 3,
      "text": "The second question, \"How robust are P2P search networks?\" Insofar as it is available in the research literature, we tease out the robustness mechanisms and metrics throughout Sections 2 to 5. Unfortunately, robustness is often more sensitive to low-level design choices than it is to the broad P2P index structure, yet these underlying design choices are seldom isolated in the primary literature [248]. Furthermore, there has been little consensus on P2P robustness metrics (Section 3.2). Section 8 gives recommendations to address these important gaps.",
      "ja": "2番目の質問、「P2P検索ネットワークでどのように堅牢です？」それは研究文献で利用可能になる限り、我々は残念ながら、堅牢性は、多くの場合、それは広範なP2Pインデックス構造にあるよりも、低レベルのデザインの選択に対してより敏感で、まだこれらの基礎となる5への第2条全体で堅牢性のメカニズムと測定基準を引き出します設計上の選択肢はほとんど一次文献[248]で単離されていません。さらに、P2Pの堅牢性指標（3.2節）にはほとんど合意がありました。第8章では、これらの重要なギャップに対処するための推奨事項を示します。"
    },
    {
      "indent": 0,
      "text": "1.1. Related Disciplines",
      "section_title": true,
      "ja": "1.1。関連分野"
    },
    {
      "indent": 3,
      "text": "Peer-to-peer research draws upon numerous distributed systems disciplines. Networking researchers will recognize familiar issues of naming, routing, and congestion control. P2P designs need to address routing and security issues across network region boundaries [152]. Networking research has traditionally been host-centric. The Web's Universal Resource Identifiers are naturally tied to specific hosts, making object mobility a challenge [216].",
      "ja": "ピア・ツー・ピアの研究では、多くの分散システム分野に描画します。ネットワークの研究者は、ネーミング、ルーティング、および輻輳制御の身近な問題を認識します。 P2Pのデザインは、ネットワーク領域の境界を越えて[152]ルーティングとセキュリティの問題に対処する必要があります。ネットワークの研究では、伝統的にホスト中心となっています。ウェブのユニバーサルリソース識別子自然オブジェクトモビリティの挑戦[216]作り、特定のホストに関連付けられています。"
    },
    {
      "indent": 3,
      "text": "P2P work is data-centric [249]. P2P systems for dynamic object location and routing have borrowed heavily from the distributed systems corpus. Some have used replication, erasure codes, and Byzantine agreement [111]. Others have used epidemics for durable peer group communication [39].",
      "ja": "P2Pの仕事は、データ中心[249]です。動的オブジェクトの位置およびルーティングのためのP2Pシステムは、分散システムのコーパスから重く借りました。いくつかは、複製、消去符号、およびビザンチン合意[111]を使用していました。他のものは、耐久性のあるピアグループ通信[39]のための流行を使用しています。"
    },
    {
      "indent": 3,
      "text": "Similarly, P2P research is set to benefit from database research [250]. Database researchers will recognize the need to reapply Codd's principle of physical data independence, that is, to decouple data indexes from the applications that use the data [23]. It was the invention of appropriate indexing mechanisms and query optimizations that enabled data independence. Database indexes like B+ trees have an analog in P2P's distributed hash tables (DHTs). Wide-area, P2P query optimization is a ripe, but challenging, area for innovation.",
      "ja": "同様に、P2P研究は、データベース研究[250]から利益を得るように設定されています。データベースの研究者がデータ[23]を使用するアプリケーションからのデータのインデックスを分離するために、つまり、物理データの独立性のコッドの原則を再適用する必要性を認識します。これは、データの独立性を可能にし、適切なインデックスメカニズムとクエリ最適化の発明でした。データベースBのようなインデックス+木は、P2Pの分散ハッシュテーブル（のDHT）に類似しています。広域、P2Pのクエリの最適化は、技術革新の機が熟しますが、やりがい、領域です。"
    },
    {
      "indent": 3,
      "text": "More flexible distribution of objects comes with increased security risks. There are opportunities for security researchers to deliver new methods for availability, file authenticity, anonymity, and access control [25]. Proactive and reactive mechanisms are needed to deal with large numbers of autonomous, distributed peers. To build robust systems from cooperating but self-interested peers, issues of identity, reputation, trust, and incentives need to be tackled. Although it is beyond the scope of this paper, robustness against malicious attacks also ought to be addressed [195].",
      "ja": "オブジェクトのより柔軟な分布が強化されたセキュリティ上のリスクが付属しています。セキュリティ研究者は、可用性、ファイルの信憑性、匿名性、およびアクセス制御[25]のための新しい方法を提供する機会があります。プロアクティブと反応メカニズムは自律、分散ピアの多数に対処するために必要とされています。協力から堅牢なシステムを構築したが、自己興味を持って仲間にするには、アイデンティティ、評判、信頼、およびインセンティブの問題が取り組まれる必要があります。それは本稿の範囲を超えているものの、悪意のある攻撃に対するロバスト性も[195]取り組まれるべきです。"
    },
    {
      "indent": 3,
      "text": "Possibly the largest portion of P2P research has majored on basic routing structures [18], where research on algorithms comes to the",
      "ja": "おそらくP2P研究の大部分は、アルゴリズムの研究は、となる基本的なルーティング構造[18]に専攻しています"
    },
    {
      "indent": 3,
      "text": "fore. Should the overlay be \"structured\" or \"unstructured\"? Are the two approaches competing or complementary? Comparisons of the \"structured\" approaches (hypercubes, rings, toroids, butterflies, de Bruijn, and skip graphs) have weighed the amount of routing state per peer and the number of links per peer against overlay hop counts. While \"unstructured\" overlays initially used blind flooding and random walks, overheads usually trigger some structure, for example, super-peers and clusters.",
      "ja": "前部。オーバーレイは、「構造化」または「非構造化」すべきですか？競合または補完的な2つの方法がありますか？ 「構造化」アプローチ（ハイパーキューブ、リング、トロイド、蝶、デBruijnグラフ、およびスキップグラフ）の比較は、ピアあたりの状態をルーティング量とオーバーレイホップ数に対するピア当たりのリンクの数を秤量しました。 「非構造化」オーバーレイが最初に盲目の氾濫とランダムウォークを使用しますが、オーバーヘッドは通常、いくつかの構造、例えば、スーパーピアとクラスタをトリガーします。"
    },
    {
      "indent": 3,
      "text": "P2P applications rely on cooperation between these disciplines. Applications have included file sharing, directories, content delivery networks, email, distributed computation, publish-subscribe middleware, multicasting, and distributed authentication. Which applications will be suited to which structures? Are there adaptable mechanisms that can decouple applications from the underlying data structures? What are the criteria for selection of applications amenable to a P2P design [1]?",
      "ja": "P2Pアプリケーションは、これらの学問分野間の協力に依存しています。アプリケーションは、ファイル共有、ディレクトリ、コンテンツ配信ネットワーク、電子メール、分散計算、パブリッシュ・サブスクライブ・ミドルウェア、マルチキャスト、および分散認証が含まれています。どのアプリケーションがどの構造に適しているのでしょうか？基礎となるデータ構造からアプリケーションを切り離すことができます適応メカニズムがありますか？ P2Pデザイン[1]の影響を受けやすいアプリケーションの選択の基準は何ですか？"
    },
    {
      "indent": 3,
      "text": "Robustness is emphasized throughout the survey. We are particularly interested in two aspects. The first, dependability, was a leading design goal for the original Internet [251]. It deserves the same status in P2P. The measures of dependability are well established: reliability, a measure of the mean-time-to-failure (MTTF); availability, a measure of both the MTTF and the mean-time-to-repair (MTTR); maintainability; and safety [252]. The second aspect is the ability to accommodate variation in outcome, which one could call adaptability. Its measures have yet to be defined. In the context of the Internet, it was only recently acknowledged as a first-class requirement [253]. In P2P, it means planning for the tussles over resources and identity. It means handling different kinds of queries and accommodating changeable application requirements with minimal intervention. It means \"organic scaling\" [22], whereby the system grows gracefully, without a priori data center costs or architectural breakpoints.",
      "ja": "堅牢性は、調査全体で強調されています。我々は2つの面で特に興味を持っています。まず、信頼性は、[251]、元のインターネットのための主要な設計目標でした。これは、P2Pで同じステータスに値します。信頼性の対策が十分に確立されている：信頼性、平均故障までの時間（MTTF）の尺度を、可用性、MTTFと平均修復時間（MTTR）の両方の尺度。保守;そして安全性[252]。第二の態様は、1つの適応性を呼び出すことができ、結果の変動に適応する能力です。その対策が定義されていません。インターネットの文脈では、ごく最近、ファーストクラスの要件[253]として認められました。 P2Pでは、それは資源とアイデンティティを超える乱闘のための計画を意味します。これは、クエリの種類を扱う、最小限の介入で変更可能なアプリケーション要件を収容意味します。これは、システムが先験的データセンターのコストや建築ブレークポイントせず、正常に成長することにより、[22]「有機スケーリング」を意味します。"
    },
    {
      "indent": 3,
      "text": "In the following section, we discuss one notable omission from the taxonomy of P2P networking in Figure 1 -- routing.",
      "ja": "次のセクションでは、我々は、図1にP2Pネットワークの分類から1つの顕著な不作為を議論 - ルーティングを。"
    },
    {
      "indent": 0,
      "text": "1.2. Structured and Unstructured Routing",
      "section_title": true,
      "ja": "1.2。構造化および非構造化ルーティング"
    },
    {
      "indent": 3,
      "text": "P2P routing algorithms have been classified as \"structured\" or \"unstructured\". Peers in unstructured overlay networks join by connecting to any existing peers [254]. In structured overlays, the identifier of the joining peer determines the set of peers that it connects to [254]. Early instantiations of Gnutella were unstructured -- keyword queries were flooded widely [255]. Napster [256] had decentralized content and a centralized index, so it only partially satisfies the distributed control criteria for P2P systems.",
      "ja": "P2Pルーティングアルゴリズムは、「構造化」または「非構造化」として分類されています。非構造化オーバレイネットワーク内のピアは、既存のピア[254]に接続して加入します。構造化オーバレイにおいて、参加ピアの識別子は、[254]に接続するピアのセットを決定します。グヌーテラの初期のインスタンス化は、非構造化した - キーワードクエリが広く[255]浸水しました。ナップスター[256]は分散コンテンツと集中インデックスを持っていたので、部分的にのみP2Pシステムのための分散制御基準を満たします。"
    },
    {
      "indent": 3,
      "text": "Early structured algorithms included Plaxton, Rajaraman and Richa (PRR) [30], Pastry [2], Tapestry [31], Chord [7], and the Content Addressable Network [8]. Mishchke and Stiller recently classified P2P systems by the presence or absence of structure in routing tables and network topology [257].",
      "ja": "初期の構成アルゴリズムは、[8] Plaxton、Rajaraman共著とRicha（PRR）[30]、ペストリー[2]、タペストリー[31]、コード[7]、及び連想ネットワークを含んでいました。 Mishchkeとスティラールーティングテーブルとネットワークトポロジーにおける構造の存在または不在によって最近分類P2Pシステム[257]。"
    },
    {
      "indent": 3,
      "text": "Some have cast unstructured and structured algorithms as competing alternatives. Unstructured approaches have been called \"first generation\", implicitly inferior to the \"second generation\" structured algorithms [2, 31]. When generic key lookups are required, these structured, key-based routing schemes can guarantee location of a target within a bounded number of hops [23]. The broadcasting unstructured approaches, however, may have large routing costs, or fail to find available content [22]. Despite the apparent advantages of structured P2P, several research groups are still pursuing unstructured P2P.",
      "ja": "いくつかは、競合する代替案として、非構造化および構造化されたアルゴリズムを投げかけてきました。非構造化アプローチは、「第二世代」の構造化アルゴリズム[2、31]に暗黙的に劣って、「第一世代」と呼ばれてきました。汎用キールックアップが要求される場合、これらの構造は、キーベースのルーティングスキームは、ホップ[23]の有界数内の標的の位置を保証することができます。放送非構造化アプローチは、しかし、大規模なルーティングコストを持っている、または利用可能なコンテンツ[22]を見つけるために失敗することがあります。構造化P2Pの見かけ上の利点にもかかわらず、いくつかの研究グループは、まだ非構造化P2Pを追求しています。"
    },
    {
      "indent": 3,
      "text": "There have been two main criticisms of structured systems [61]. The first relates to peer transience, which in turn, affects robustness. Chawathe, et al. opined that highly transient peers are not well supported by DHTs [61]. P2P systems often exhibit \"churn\", with peers continually arriving and departing. One objection to concerns about highly transient peers is that many applications use peers in well-connected parts of the network. The Tapestry authors analyzed the impact of churn in a network of 1000 nodes [31]. Others opined that it is possible to maintain a robust DHT at relatively low cost [258]. Very few papers have quantitatively compared the resilience of structured systems. Loguinov, Kumar, et al. claimed that there were only two such works [24, 36].",
      "ja": "[61]構造化されたシステムには2つの主な批判がありました。最初は、順番に、ロバスト性に影響を与える過渡を、ピアに関する。 Chawatheら。高い過渡ピアがよくのDHTs [61]によってサポートされていないこと意見を述べ。 P2Pシステムは、多くの場合、ピアは継続的に発着して、「解約」を示します。非常に過渡ピアに関する懸念に一つの異議は、多くのアプリケーションがネットワークの適切に接続された部品内のピアを使用することです。タペストリー著者1000個のノード[31]のネットワーク内の解約の影響を分析しました。他の人は比較的低コスト[258]で堅牢なDHTを維持することが可能であることを意見を述べました。非常に少数の論文を定量的に構造化されたシステムの回復力を比較しました。 Loguinov、クマーら。 2つだけのような作品[24、36]があったと主張しました。"
    },
    {
      "indent": 3,
      "text": "The second criticism of structured systems is that they do not support keyword searches and complex queries as well as unstructured systems. Given the current file-sharing deployments, keyword searches seem more important than exact-match key searches in the short term. Paraphrased, \"most queries are for hay, not needles\" [61].",
      "ja": "構造化されたシステムの第二の批判は、彼らはキーワード検索や複雑なクエリだけでなく、構造化されていないシステムをサポートしていないということです。現在のファイル共有の展開を考えると、キーワード検索が短期的には完全一致検索キーよりも重要なようです。言い換え、[61]「ほとんどのクエリは、ない針干し草のためのものです」。"
    },
    {
      "indent": 3,
      "text": "More recently, some have justifiably seen unstructured and structured proposals as complementary, and have devised hybrid models [259]. Their starting point was the observation that unstructured flooding or random walks are inefficient for data that is not highly replicated across the P2P network. Structured graphs can find keys efficiently, irrespective of replication. Castro, et al. proposed Structella, a hybrid of Gnutella built on top of Pastry [259]. Another design used structured search for rare items and unstructured search for massively replicated items [54].",
      "ja": "さらに最近では、いくつかは、正当補完などの非構造化および構造化された提案を見てきましたし、ハイブリッドモデル[259]を考案しました。彼らの出発点は、非構造化、洪水やランダムウォークは非常にP2Pネットワークを介して複製されていないデータのために非効率的であることを観察しました。構造化されたグラフは関係なく、複製、効率的に鍵を見つけることができます。カストロら。提案Structella、グヌーテラのハイブリッドは、ペストリー、[259]の上に構築されました。別の設計ではレアアイテムと大量に複製された項目[54]のための非構造化検索のための構造化された検索を使用します。"
    },
    {
      "indent": 3,
      "text": "However, the \"structured versus unstructured routing\" taxonomy is becoming less useful, for two reasons, Firstly, most \"unstructured\" proposals have evolved and incorporated structure. Consider the classic \"unstructured\" system, Gnutella [4]. For scalability, its peers are either ultrapeers or leaf nodes. This hierarchy is augmented with a query routing protocol whereby ultrapeers receive a hashed summary of the resource names available at leaf nodes. Between ultrapeers, simple query broadcast is still used, though methods to reduce the query load here have been considered [260]. Secondly, there are emerging schema-based P2P designs [59], with super-node hierarchies and structure within documents. These are quite distinct from the structured DHT proposals.",
      "ja": "しかし、「構造化された非構造化ルーティング対」分類学の2つの理由から、あまり有用になってきて、まず、最も「非構造化」の提案は、進化と構造が組み込まれています。古典的な「非構造化」システムを考える、グヌーテラ[4]。スケーラビリティのために、そのピアはウルトラまたはリーフノードのどちらかです。この階層は、ウルトラがリーフノードで利用可能なリソース名のハッシュ化された要約を受信することにより、クエリのルーティングプロトコルで増強されます。ここでは、クエリの負荷を軽減する方法は、[260]と考えられてきたもののウルトラの間に、単純なクエリ放送はまだ、使用されています。第二に、文書内のスーパーノードの階層構造を持つ新興スキーマベースのP2Pデザイン[59]は、あります。これらは、構造化DHTの提案とは全く異なっています。"
    },
    {
      "indent": 0,
      "text": "1.3. Indexes and Queries",
      "section_title": true,
      "ja": "1.3。インデックスとクエリ"
    },
    {
      "indent": 3,
      "text": "Given that most, if not all, P2P designs today assume some structure, a more instructive taxonomy would describe the structure. In this survey, we use a database taxonomy in lieu of the networking taxonomy, as suggested by Hellerstein, Cooper, and Garcia-Molina [23, 261]. The structure is determined by the type of index (Sections 2 , 3, and 4). Queries feature in lieu of routing (Section 5). The DHT algorithms implement a \"semantic-free index\" [216]. They are oblivious of whether keys represent document titles, meta-data, or text. Gnutella-like and schema-based proposals have a \"semantic index\".",
      "ja": "すべてではないが、P2Pのデザイン今日はいくつかの構造を仮定ほとんどは、より多くの有益な分類は、構造を記述することを考えます。 Hellerstein、クーパー、およびガルシア - モリーナ[23、261]により示唆されるように、この調査では、我々は、ネットワーキングの分類の代わりに、データベースの分類を使用しています。構造は、インデックスの種類によって決定される（セクション2、3、及び4）。クエリ（セクション5）ルーティングの代わりに備えています。 DHTアルゴリズムは「意味のないインデックス」[216]を実装します。彼らは、キーは、文書のタイトル、メタデータ、またはテキストを表すかどうか気にしません。グヌーテラ様およびスキーマベースの提案は、「セマンティックインデックス」を持っています。"
    },
    {
      "indent": 3,
      "text": "Index engineering is at the heart of P2P search methods. It captures a broad range of P2P issues, as demonstrated by the Search/Index Links model [261]. As Manber put it, \"the most important of the tools for information retrieval is the index -- a collection of terms with pointers to places where information about documents can be found\" [262]. Sen and Wang noted that a \"P2P network\" usually consists of connections between hosts for application-layer signaling, rather than for the data transfer itself [263]. Similarly, we concentrate on the \"signaled\" indexes and queries.",
      "ja": "インデックス工学はP2Pの検索方法の心臓部です。これは、検索/インデックスリンクスモデル[261]によって示されるように、P2Pの問題の広い範囲をキャプチャします。 Manberがそれを置くように、「情報検索のためのツールの中で最も重要なのは、インデックスである - ドキュメントに関する情報を見つけることができる場所へのポインタを持つ用語のコレクション」[262]。 SENと王「は、P2Pネットワーク」は、通常、アプリケーション層シグナリングのためではなく、データ転送自体[263]のためのホスト間の接続で構成されていることに留意しました。同様に、私たちは「合図」インデックスとクエリに集中します。"
    },
    {
      "indent": 3,
      "text": "Our focus here is the dependability and adaptability of the search network. Static dependability is a measure of how well queries route around failures in a network that is normally fault-free. Dynamic dependability gives an indication of query success when nodes and data are continually joining and leaving the P2P system. An adaptable index accommodates change in the data and query distribution. It enables data independence, in that it facilitates changes to the data layout without requiring changes to the applications that use the data [23]. An adaptable P2P system can support rich queries for a wide range of applications. Some applications benefit from simple, semantic-free key lookups [264]. Others require more complex, Structured Query Language (SQL)-like queries to find documents with multiple keywords, or to aggregate or join query results from distributed relations [22].",
      "ja": "ここでの我々の焦点は、検索ネットワークの信頼性と適応性です。静的な信頼性は、通常、障害のないあるネットワークの障害のまわりのルートを照会どれだけの尺度です。ダイナミックな信頼性は、ノードとデータを継続的に参加し、P2Pシステムを残しているクエリの成功の指標を与えます。適応インデックスは、データとクエリ分布の変化に適応します。それは[23]のデータを使用するアプリケーションに対する変更を必要とせずに、データ・レイアウトの変更を容易にするという点で、それは、データの独立性を可能にします。適応P2Pシステムは、アプリケーションの広い範囲のための豊富なクエリをサポートすることができます。一部のアプリケーションでは、単純な、意味のないキー検索[264]の恩恵を受ける。その他には、複数のキーワードを含む文書を検索するために、または集約または分散関係[22]からクエリ結果を結合するために、より複雑な、構造化照会言語（SQL）様のクエリを必要としています。"
    },
    {
      "indent": 0,
      "text": "2. Index Types",
      "section_title": true,
      "ja": "2.インデックスのタイプ"
    },
    {
      "indent": 3,
      "text": "A P2P index can be local, centralized, or distributed. With a local index, a peer only keeps the references to its own data, and does not receive references for data at other nodes. The very early Gnutella design epitomized the local index (Section 2.1). In a centralized index, a single server keeps references to data on many peers. The classic example is Napster (Section 2.2). With distributed indexes, pointers towards the target reside at several nodes. One very early example is Freenet (Section 2.3). Distributed indexes are used in most P2P designs nowadays -- they dominate this survey.",
      "ja": "P2Pインデックスは、局所集中型、または分散することができます。ローカル索引を使用すると、ピアは自身のデータのみへの参照を保持し、他のノードでデータの参照を受信しません。非常に早いグヌーテラデザインは、ローカル索引（2.1節）を象徴しました。集中型のインデックスでは、単一のサーバが多数のピア上のデータへの参照を保持します。古典的な例は、ナップスター（セクション2.2）です。分散インデックスでは、ターゲットへのポインタが複数のノードに存在します。 1つの非常に初期の例は、フリーネット（2.3節）です。分散インデックスは、今日、ほとんどのP2Pのデザインに使用されている - 彼らはこの調査を支配します。"
    },
    {
      "indent": 3,
      "text": "P2P indexes can also be classified as non-forwarding and forwarding. When queries are guided by a non-forwarding index, they jump to the node containing the target data in a single hop. There have been semantic and semantic-free one-hop schemes [138, 265, 266]. Where scalability to a massive number of peers is required, these schemes have been extended to two hops [267, 268]. More common are the forwarding P2Ps, where the number of hops varies with the total number of peers, often logarithmically. The related trade-offs between routing state, lookup latency, update bandwidth, and peer churn are critical to total system dependability.",
      "ja": "P2Pインデックスは、非転送と転送に分類することができます。クエリが非フォワーディングインデックスによって案内されるとき、それらは単一ホップ内のターゲットデータを含むノードにジャンプ。セマンティックと意味のない1ホップスキーム[138、265、266]がありました。ピアの膨大な数のスケーラビリティが必要とされる場合、これらのスキームは、2つのホップ[267、268]に拡張されてきました。より一般的なホップ数は、しばしば対数、ピアの総数に応じて変化する転送P2Psは、です。ルーティング状態、ルックアップ待ち時間、更新帯域幅、及びピア・チャーンの間に関連するトレードオフは、システム全体の信頼性に重​​要です。"
    },
    {
      "indent": 0,
      "text": "2.1. Local Index (Gnutella)",
      "section_title": true,
      "ja": "2.1。ローカルインデックス（グヌーテラ）"
    },
    {
      "indent": 3,
      "text": "P2Ps with a purely local data index are becoming rare. In such designs, peers flood queries widely and only index their own content. They enable rich queries - the search is not limited to a simple key lookup. However, they also generate a large volume of query traffic with no guarantee that a match will be found, even if it does exist on the network. For example, to find potential peers on the early instantiations of Gnutella, 'ping' messages were broadcast over the P2P network and the 'pong' responses were used to build the node index. Then, small 'query' messages, each with a list of keywords, are broadcast to peers that respond with matching filenames [4].",
      "ja": "純粋にローカルのデータインデックスとP2Psはまれになっています。このような設計では、洪水広くクエリとインデックスのみ、独自のコンテンツをピア。彼らは豊かなクエリを有効にする - 検索では、簡単なキーのルックアップに限定されるものではありません。しかし、彼らはまた、ネットワーク上に存在しない場合でも、一致が発見される保証なしクエリトラフィックを大量に生成します。例えば、グヌーテラの早期具体化に潜在的な仲間を見つけるために、「ピング」メッセージは、P2Pネットワーク上で放送されたと 'ピンポンの回答は、ノードのインデックスを構築するために使用されました。その後、小さな「クエリ」メッセージ、キーワードのリストとそれぞれが、一致するファイル名[4]で応答ピアに放送されています。"
    },
    {
      "indent": 3,
      "text": "There have been numerous attempts to improve the scalability of local-index P2P networks. Gnutella uses fixed time-to-live (TTL) rings, where the query's TTL is set less than 7-10 hops [4]. Small TTLs reduce the network traffic and the load on peers, but also reduce the chances of a successful query hit. One paper reported, perhaps a little too bluntly, that the fixed \"TTL-based mechanism does not work\" [67]. To address this TTL selection problem, they proposed an expanding ring, known elsewhere as iterative deepening [29]. It uses successively larger TTL counters until there is a",
      "ja": "ローカル・インデックスP2Pネットワークのスケーラビリティを向上させるために数多くの試みがなされてきました。グヌーテラは、固定された生存時間クエリのTTL未満7-10ホップ[4]を設定する（TTL）リングを使用します。小型のTTLは、ネットワークトラフィックやピアの負荷を軽減するだけでなく、成功したクエリヒットの可能性を減らします。一つの論文は、固定された[67]「TTLベースのメカニズムが機能しない」ということは、おそらく少しもぶっきらぼうに、報告されました。このTTL選択問題に対処するために、それらが深化反復として他所知ら拡張リング、[29]を提案しました。あるまでは、順次、より大きなTTLカウンタを使用しています"
    },
    {
      "indent": 3,
      "text": "match. The flooding, ring, and expanding ring methods all increase network load with duplicated query messages. A random walk, whereby an unduplicated query wanders about the network, does indeed reduce the network load but massively increases the search latency. One solution is to replicate the query k times at each peer. Called random k-walkers, this technique can be coupled with TTL limits, or periodic checks with the query originator, to cap the query load [67]. Adamic, Lukose, et al. suggested that the random walk searches be directed to nodes with a higher degree, that is, with larger numbers of inter-peer connections [269]. They assumed that higher-degree peers are also capable of higher query throughputs. However, without some balancing design rule, such peers would be swamped with the entire P2P signaling traffic. In addition to the above approaches, there is the 'directed breadth-first' algorithm [29]. It forwards queries within a subset of peers selected according to heuristics on previous performance, like the number of successful query results. Another algorithm, called probabilistic flooding, has been modeled using percolation theory [270].",
      "ja": "一致。重複クエリーメッセージと洪水、リング、および拡張リング方法はすべて増加のネットワーク負荷。重複しないクエリがネットワークについてさまようことにより、ランダムウォークは、実際にネットワークの負荷を低減するが、大規模な検索の待ち時間が増加ありません。一つの解決策は、各ピアでクエリk回を複製することです。ランダムK-歩行と呼ばれる、この技術は、[67]クエリ負荷をキャップするために、照会元とTTLの制限、または定期的にチェックして結合することができます。アダミック、Lukoseら。ランダムウォーク検索は、より高い程度を有するノードに向けられることを示唆し、それは、インターピア接続の多数[269]です。彼らは、高次ピアはまた、より高いクエリのスループットが可能であると仮定しました。しかし、いくつかのバランス設計ルールなしで、そのようなピアはシグナリングトラフィック全体のP2Pが殺到することだろう。上記の方法に加えて、「有向幅優先」のアルゴリズム[29]があります。それは成功したクエリ結果の数のように、以前のパフォーマンス上の経験則に基づいて選択されたピアのサブセット内のクエリを転送します。確率的洪水と呼ばれる別のアルゴリズムは、パーコレーション理論[270]を使用してモデル化されています。"
    },
    {
      "indent": 3,
      "text": "Several measurement studies have investigated locally indexed P2Ps. Jovanovic noted Gnutella's power law behaviour [70]. Sen and Wang compared the performance of Gnutella, Fasttrack [271], and Direct Connect [263, 272, 273]. At the time, only Gnutella used local data indexes. All three schemes now use distributed data indexes, with hierarchy in the form of Ultrapeers (Gnutella), Super-Nodes FastTrack), and Hubs (Direct Connect). It was found that a very small percentage of peers have a very high degree and that the total system dependability is at the mercy of such peers. While peer up-time and bandwidth were heavy-tailed, they did not fit well with the Zipf distribution. Fortunately for Internet Service Providers, measures aggregated by IP prefix and Autonomous System (AS) were more stable than for individual IP addresses. A study of University of Washington traffic found that Gnutella and Kazaa together contributed 43% of the university's total TCP traffic [274]. They also reported a heavy-tailed distribution, with 600 external peers (out of 281,026) delivering 26% of Kazaa bytes to internal peers. Furthermore, objects retrieved from the P2P network were typically three orders of magnitude larger than Web objects -- 300 objects contributed to almost half the total outbound Kazaa bandwidth. Others reported Gnutella's topology mismatch, whereby only 2-5% of P2P connections link peers in the same Autonomous System (AS), despite over 40% of peers being in the top 10 ASs [65]. Together these studies underscore the significance of multimedia sharing applications. They motivate interesting caching and locality solutions to the topology mismatch problem.",
      "ja": "いくつかの測定研究では、ローカルにインデックスさP2Psを調査しました。ヨバノビッチはグヌーテラの法則の挙動[70]を指摘しました。 SENと王はグヌーテラ、FastTrackの[271]、およびダイレクトコネクト[263、272、273]の性能を比較しました。当時、唯一のグヌーテラは、ローカルデータのインデックスを使用していました。すべての3つの方式は現在、ウルトラ（グヌーテラ）の形で階層と、スーパーノードFastTrackの分散データ・インデックスを使用）、およびハブ（直接接続）。これは、ピアの非常に小さな割合が非常に高い学位を持っていると、システム全体の信頼性は、このようなピアの慈悲であることをことが判明しました。ピアがアップ時間と帯域幅ヘビーテイルたが、彼らはジップ分布とよく合いませんでした。幸いなことに、インターネットサービスプロバイダのため、IPプレフィックスと自律システム（AS）によって集約さ対策は個々のIPアドレスの場合よりも安定していました。ワシントン大学のトラフィックの研究は、Gnutellaとカザーが一緒に[274]大学の総TCPトラフィックの43％を寄付することを発見しました。彼らはまた、内部ピアにKazaaのバイトの26％を送達する（281026のうち）600の外部のピアと、ヘビーテイル分布を報告しました。また、P2Pネットワークから取り出されたオブジェクトは、典型的には、ウェブ・オブジェクトよりも大きい大きさの3桁た -  300のオブジェクトは、ほぼ半分の総アウトバウンドKazaaの帯域幅に寄与しました。その他は、P2P接続の唯一の2から5パーセントがトップ10のAS [65]にいる仲間の40％以上にもかかわらず、同じ自律システム（AS）内のピアをリンクすることにより、グヌーテラのトポロジーの不一致を、報告しました。一緒にこれらの研究では、マルチメディア共有アプリケーションの重要性を強調する。彼らは、トポロジのミスマッチの問題に興味深いキャッシングや地域ソリューションのやる気を引き出します。"
    },
    {
      "indent": 3,
      "text": "These same studies bear out one main dependability lesson: total system dependability may be sensitive to the dependability of high- degree peers. The designers of Scamp translated this observation to the design heuristic, \"have the degree of each node be of nearly equal size\" [153]. They analyzed a system of N peers, with mean degree c.log(n), where link failures occur independently with probability e. If d>0 is fixed and c>(1+d)/(-log(e)), then the probability of graph disconnection goes to zero as N->infinity. Otherwise, if c<(1-d)/(-log(e)), then the probability of disconnection goes to one as N->infinity. They presented a localizer, which finds approximate minima to a global function of peer degree and arbitrary link costs using only local information. The Scamp overlay construction algorithms could support any of the flooding and walking routing schemes above, or other epidemic and multicasting schemes for that matter. Resilience to high churn rates was identified for future study.",
      "ja": "これらの同じ研究では、一つのメイン信頼性のレッスンを負担：システム全体の信頼性は、高度のピアの信頼性に敏感であることがあります。 SCAMPの設計者は設計ヒューリスティックにこの観察を翻訳し、[153]「各ノードの次数がほぼ同じ大きさのものとすることが持っています」。彼らは、リンク障害確率eで独立に生じる平均次数c.log（N）と、N個のピアのシステムを分析しました。 D> 0（1 + D）/固定およびc>である場合（ - ログ（E））、次いで、グラフ切断の確率は、N>無限としてゼロになります。 Cあればそうでない場合は、 - 無限<（1-D）/（ログ（E））、次いで、断線の確率はN-として一つに進みます>。彼らは、ピア度とローカル情報のみを使用して、任意のリンクコストのグローバル関数に近似最小値を見つけるローカライザーを、発表しました。 SCAMPオーバレイ構築アルゴリズムは、そのことについては、洪水のいずれかと上記のルーティングのスキームを歩いて、または他の流行とマルチキャストのスキームをサポートすることができました。高い解約率の回復力は、今後の研究のために同定されました。"
    },
    {
      "indent": 0,
      "text": "2.2. Central Index (Napster)",
      "section_title": true,
      "ja": "2.2。中央インデックス（ナップスター）"
    },
    {
      "indent": 3,
      "text": "Centralized schemes like Napster [256] are significant because they were the first to demonstrate the P2P scalability that comes from separating the data index from the data itself. Ultimately, 36 million Napster users lost their service not because of technical failure, but because the single administration was vulnerable to the legal challenges of record companies [275].",
      "ja": "彼らは、データ自体からのデータのインデックスを分離することから来ているP2Pのスケーラビリティを発揮することで初めて実証したので、ナップスター[256]のような中央集中型スキームが重要です。最終的には、3600万Napsterユーザーがいないため、技術的な失敗の彼らのサービスを失ったが、単回投与は、レコード会社[275]の法的課題に対して脆弱であったため。"
    },
    {
      "indent": 3,
      "text": "There has since been little research on P2P systems with central data indexes. Such systems have also been called 'hybrid' since the index is centralized but the data is distributed. Yang and Garcia-Molina devised a four-way classification of hybrid systems [276]: unchained servers, where users whose index is on one server do not see other servers' indexes; chained servers, where the server that receives a query forwards it to a list of servers if it does not own the index itself; full replication, where all centralized servers keep a complete index of all available metadata; and hashing, where keywords are hashed to the server where the associated inverted list is kept. The unchained architecture was used by Napster, but it has the disadvantage that users do not see all indexed data in the system. Strictly speaking, the other three options illustrate the distributed data index, not the central index. The chained architecture was recommended as the optimum for the music-swapping application at the time. The methods by which clients update the central index were classified as batch or incremental, with the optimum determined by the query-to-login ratio. Measurements were derived from a clone of Napster called OpenNap[277]. Another study of live Napster data reported wide variation in the availability of peers, a general unwillingness to share files (20-40% of peers share few or no files), and a common understatement of available bandwidth so as to discourage other peers from sharing one's link [202].",
      "ja": "以来、中央のデータのインデックスを持つP2Pシステム上で少し研究がなされてきました。インデックスが集中あるが、データが配布されるので、そのようなシステムはまた、「ハイブリッド」と呼ばれてきました。ヤンとガルシア - モリーナハイブリッドシステムの4ウェイの分類を考案した[276]：インデックス1台のサーバー上で、ユーザーが他のサーバーのインデックスが表示されない非連鎖サーバ、;それは、インデックス自体を所有していない場合は、クエリを受信したサーバは、サーバのリストに転送チェーンのサーバ、。すべての中央サーバが利用可能なすべてのメタデータの完全なインデックスを維持する完全なレプリケーション、。キーワードが関連する反転リストが保存されているサーバーにハッシュ化されている場合や、ハッシング。非連鎖アーキテクチャは、ナップスターで使用されるが、それは、ユーザーがシステム内のすべてのインデックス付きのデータが表示されないという欠点がありました。厳密に言えば、他の3つのオプションは、分散データインデックスではなく、中央インデックスを示します。チェーンアーキテクチャは、一度に音楽スワップアプリケーションに最適なよう推奨されていました。クライアントは、中央インデックスを更新れる方法は、クエリにログイン比によって決定された最適と、バッチまたは増分として分類しました。測定は、[277] OpenNap系と呼ばナップスターのクローンに由来しました。共有から他のピアを阻止するように、ライブナップスターデータの別の研究では、ピアの利用可能性で幅広いバリエーション、ファイルを共有するための一般的な不本意（ピアの20から40パーセントは少数共有していないか、どのファイル）、および利用可能な帯域幅の一般的な控えめな表現を報告しました1のリンク[202]。"
    },
    {
      "indent": 3,
      "text": "Influenced by Napster's early demise, the P2P research community may have prematurely turned its back on centralized architectures. Chawathe, Ratnasamy, et al. opined that Google and Yahoo demonstrate the viability of a centralized index. They argued that \"the real barriers to Napster-like designs are not technical but legal and financial\" [61]. Even this view may be a little too harsh on the centralized architectures -- it implies that they always have an up-front capital hurdle that is steeper than for distributed architectures. The closer one looks at scalable 'centralized' architectures, the less the distinction with 'distributed' architectures seems to matter. For example, it is clear that Google's designers consider Google a distributed, not centralized, file system [278]. Google demonstrates the scale and performance possible on commodity hardware, but still has a centralized master that is critical to the operation of each Google cluster. Time may prove that the value of emerging P2P networks, regardless of the centralized-versus-distributed classification, is that they smooth the capital outlays and remove the single points of failure across the spectra of scale and geographic distribution.",
      "ja": "Napsterの早期崩壊の影響を受け、P2Pの研究コミュニティは、途中で集中管理アーキテクチャに背を向けている可能性があります。 Chawathe、Ratnasamyら。 GoogleとYahooは、集中インデックスの生存可能性を示すことが意見を述べ。彼らは、[61]「ナップスターのようなデザインに本当の障壁は、技術が、法的、財政的ではない」と主張しました。でも、このビューは、集中アーキテクチャ上で少し厳しすぎるかもしれ - それは、彼らが常に分散アーキテクチャよりも急であるアップフロント資本ハードルを持っていることを意味します。近い一つが少ない「分散型」のアーキテクチャとの区別は重要でているようだ、スケーラブルな「集中管理」のアーキテクチャで検索します。例えば、GoogleのデザイナーがGoogleの分散型、集中型のない、ファイルシステム[278]考えることは明らかです。 Googleはコモディティハードウェア上で可能な規模とパフォーマンスを実証し、それでも各Googleサービスクラスタの動作にとって重要であるの集中マスターを持っています。時間は、新興P2Pネットワークの値は、かかわらず、集中対分散型分類の、彼らは資本支出を滑らかにし、規模や地理的分布のスペクトル全体で単一障害点を取り除くことであることを証明することがあります。"
    },
    {
      "indent": 0,
      "text": "2.3. Distributed Index (Freenet)",
      "section_title": true,
      "ja": "2.3。分散指数（フリーネット）"
    },
    {
      "indent": 3,
      "text": "An important early P2P proposal for a distributed index was Freenet [5, 71, 279]. While its primary emphasis was the anonymity of peers, it did introduce a novel indexing scheme. Files are identified by low-level \"content-hash\" keys and by \"secure signed-subspace\" keys, which ensure that only a file owner can write to a file while anyone can read from it. To find a file, the requesting peer first checks its local table for the node with keys closest to the target. When that node receives the query, it too checks for either a match or another node with keys close to the target. Eventually, the query either finds the target or exceeds time-to-live (TTL) limits. The query response traverses the successful query path in reverse, depositing a new routing table entry (the requested key and the data holder) at each peer. The insert message similarly steps towards the target node, updating routing table entries as it goes, and finally stores the file there. Whereas early versions of Gnutella used breadth-first flooding, Freenet uses a more economic depth-first search [280].",
      "ja": "屈折率分布のための重要な初期のP2P提案はフリーネット[5、71、279でした。その主な重点は、ピアの匿名だったが、それは新しいインデックス・スキームを導入しました。ファイルは低レベルの「コンテンツ・ハッシュ」キーで、誰でもそれから読み取ることができますしながら、ファイル所有者だけがファイルに書き込むことができることを確認してください「に署名し、部分空間を確保する」キーによって識別されます。ファイルを見つけるために、要求側ピアは、最初のターゲットに最も近いキーを持つノードに対して、そのローカルテーブルをチェックします。そのノードがクエリを受信すると、それはあまりにも一致又はターゲットに近いキーを持つ別のノードのいずれかをチェックします。最終的に、クエリは、ターゲットを見つけ、または生存時間（TTL）の制限を超えてのいずれか。クエリ応答は、各ピアに、新しいルーティングテーブルエントリ（要求されたキーとデータ保持部）を堆積させる、逆に成功したクエリパスを横切ります。挿入メッセージは、それが行くと同様にルーティングテーブルエントリを更新し、ターゲット・ノードに向けて段階的に説明し、最終的にはそこにファイルを格納します。グヌーテラの初期のバージョンは、幅優先フラッディングを使用に対し、フリーネットは、より経済的な深さ優先探索[280]を使用しています。"
    },
    {
      "indent": 3,
      "text": "An initial assessment has been done of Freenet's robustness. It was shown that in a network of 1000 nodes, the median query path length stayed under 20 hops for a failure of 30% of nodes. While the Freenet designers considered this as evidence that the system is \"surprisingly robust against quite large failures\" [71], the same datapoint may well be outside meaningful operating bounds. How many applications are useful when the first quartile of queries have path lengths of several hundred hops in a network of only 1000 nodes, per",
      "ja": "最初の評価は、フリーネットの堅牢性の行われています。なお、1000個のノードのネットワークにおいて、メディアンクエリ経路長は、ノードの30％の失敗を20のホップ下にとどまったことが示されました。フリーネットの設計者は、システムが[71]「非常に大きい障害に対する驚くほど堅牢」であることの証拠としてこれを考えながら、同じデータポイントはよく外部に意味のある動作範囲であってもよいです。クエリの最初の四分位しか千ノードのネットワークに数百ホップの経路長を持っている場合どのように多くのアプリケーションがあたりに有用であり、"
    },
    {
      "indent": 3,
      "text": "Figure 4 of [71]? To date, there has been no analysis of Freenet's dynamic robustness. For example, how does it perform when nodes are continually arriving and departing?",
      "ja": "[71]の図4？現在までに、フリーネットのダイナミックな堅牢性のない分析はなされていません。例えば、それはどのようにノードが継続的に発着しているときに実行しますか？"
    },
    {
      "indent": 3,
      "text": "There have been both criticisms and extensions of the early Freenet work. Gnutella proponents acknowledged the merit in Freenet's avoidance of query broadcasting [281]. However, they are critical on two counts: the exact file name is needed to construct a query; and exactly one match is returned for each query. P2P designs using DHTs, per Section 3, share similar characteristics -- a precise query yields a precise response. The similarity is not surprising since Freenet also uses a hash function to generate keys. However, the query routing used in the DHTs has firmer theoretical foundations. Another difference with DHTs is that Freenet will take time, when a new node joins the network, to build an index that facilitates efficient query routing. By the inventor's own admission, this is damaging for a user's first impressions [282]. It was proposed to download a copy of routing tables from seed nodes at startup, even though the new node might be far from the seed node. Freenet's slow startup motivated Mache, Gilbert, et al. to amend the overlay after failed requests and to place additional index entries on successful requests -- they claim almost an order of magnitude reduction in average query path length [280]. Clarke also highlighted the lack of locality or bandwidth information available for efficient query routing decisions [282]. He proposed that each node gather response times, connection times, and proportion of successful requests for each entry in the query routing table. When searching for a key that is not in its own routing table, it was proposed to estimate response times from the routing metrics for the nearest known keys and consequently choose the node that can retrieve the data fastest. The response time heuristic assumed that nodes close in the key space have similar response times. This assumption stemmed from early deployment observations that Freenet peers seemed to specialize in parts of the keyspace -- it has not been justified analytically. Kronfol drew attention to Freenet's inability to do keyword searches [283]. He suggested that peers cache lists of weighted keywords in order to route queries to documents, using Term Frequency Inverse Document Frequency (TFIDF) measures and inverted indexes (Section 4.2.1). With these methods, a peer can route queries for simple keyword lists or more complicated conjunctions and disjunctions of keywords. Robustness analysis and simulation of Kronfol's proposal remain open.",
      "ja": "批判や初期のフリーネットワークの拡張の両方がありました。グヌーテラ提案者は、[281]クエリ放送のフリーネットの回避にメリットを認めました。しかし、彼らは2つのカウントに不可欠です：正確なファイル名は、クエリを構築するために必要とされます。そして正確に一つの試合は、クエリごとに返されます。 DHTを使用してP2Pの設計は、第3節ごとに、同様の特性を共有する - 正確なクエリでは、正確なレスポンスが得られます。フリーネットでも鍵を生成するためにハッシュ関数を使用していますので、類似性は驚くべきことではありません。しかし、DHTsのに使用されるクエリのルーティングは、より強固な理論的基礎を持っています。 DHTのもう一つの違いは、フリーネットは、効率的なクエリのルーティングを容易にインデックスを構築するために、新しいノードがネットワークに参加したときに、時間がかかるということです。発明者自身の入場では、これはユーザーの第一印象[282]のために損傷を与えています。これは、新しいノードがシードノードから遠くない場合でも、起動時にシードノードからのルーティングテーブルのコピーをダウンロードすることが提案されました。らマッヘ、ギルバートが、やる気フリーネットの起動が遅く。失敗した要求の後にオーバーレイを修正すると、成功した要求に関する追加のインデックスエントリを配置する - 彼らは平均的なクエリ路長の大きさの減少[280]のほぼ順番を主張します。クラークはまた、地域や効率的なクエリのルーティング決定[282]のために利用可能な帯域幅情報の不足を強調しました。彼は、各ノードが応答時間、接続時間、およびクエリのルーティングテーブルの各エントリのための成功した要求の割合を収集することを提案しました。独自のルーティングテーブルに存在しないキーを検索する場合は、それが最も近い既知のキーのためのルーティングメトリックからの応答時間を推定し、その結果、最速のデータを取得できたノードを選択することが提案されました。応答時間ヒューリスティックは、鍵空間的に近いノードが同様の応答時間を持っていると仮定しました。それは解析的に正当化されていない - この仮定は、フリーネットピアが鍵空間の部分に特化するように見えた早い展開の観測から茎。 Kronfolはキーワード検索[283]を行うにはFreenetのできないことに注意を喚起しました。彼は、ピアが用語頻度逆文書頻度（TFIDF）対策や転置インデックス（セクション4.2.1）を使用して、ルートのクエリに文書化するために重み付けされたキーワードのリストをキャッシュすることが示唆されました。これらの方法では、ピアは単純なキーワードリストやより複雑な接続詞やキーワードの選言のルートクエリすることができます。 Kronfolの提案のロバスト性解析とシミュレーションが開いたままになります。"
    },
    {
      "indent": 3,
      "text": "The vast majority of P2P proposals in following sections rely on a distributed index.",
      "ja": "次のセクションでのP2P提案の大半は、屈折率分布に依存しています。"
    },
    {
      "indent": 0,
      "text": "3. Semantic Free Index",
      "section_title": true,
      "ja": "3.セマンティック無料インデックス"
    },
    {
      "indent": 3,
      "text": "Many of today's distributed network indexes are semantic. The semantic index is human-readable. For example, it might associate information with other keywords, a document, a database key, or even an administrative domain. It makes it easy to associate objects with particular network providers, companies, or organizations, as evidenced in the Domain Name System (DNS). However, it can also trigger legal tussles and frustrate content replication and migration [216].",
      "ja": "今日の分散型ネットワーク指標の多くは、セマンティックです。セマンティックインデックスは、人間が読めるです。例えば、それは他のキーワード、文書、データベースキー、あるいは管理ドメインとの情報を関連付けることがあります。これは、ドメインネームシステム（DNS）で明らかなように、特定のネットワークプロバイダ、企業、または組織とオブジェクトを関連付けることが容易になります。しかし、それはまた、法的な乱闘の引き金とコンテンツの複製や移動[216]をくじくことができます。"
    },
    {
      "indent": 3,
      "text": "Distributed Hash Tables (DHTs) have been proposed to provide semantic-free, data-centric references. DHTs enable one to find an object's persistent key in a very large, changing set of hosts. They are typically designed for [23]:",
      "ja": "分散ハッシュテーブル（のDHT）は、セマンティック・フリー、データ中心の参照を提供することが提案されています。 DHTは、ホストの非常に大きな、変更セット内のオブジェクトの永続的なキーを見つけるために、1を有効にします。彼らは通常のために設計されている[23]："
    },
    {
      "indent": 3,
      "text": "a) low degree. If each node keeps routing information for only a small number of other nodes, the impact of high node arrival and departure rates is contained;",
      "ja": "a）の程度が低いです。各ノードは他のノードの少数のルーティング情報を保持している場合、高いノードの到着と出発速度の影響が含まれています。"
    },
    {
      "indent": 3,
      "text": "b) low hop count. The hops and delay introduced by the extra indirection are minimized;",
      "ja": "b）は、低いホップ・カウント。余分な間接によって導入されたホップと遅延が最小限に抑えられます。"
    },
    {
      "indent": 3,
      "text": "c) greedy routing. Nodes independently calculate a short path to the target. At each hop, the query moves closer to the target; and",
      "ja": "C）貪欲なルーティング。ノードは独立して、ターゲットへのショートパスを計算します。各ホップでは、クエリがターゲットに近づきます。そして"
    },
    {
      "indent": 3,
      "text": "d) robustness. A path to the target can be found even when links or nodes fail.",
      "ja": "d）の堅牢性。ターゲットへのパスは、リンクまたはノードに障害が発生した場合にも見つけることができます。"
    },
    {
      "indent": 0,
      "text": "3.1. Origins",
      "section_title": true,
      "ja": "3.1。オリジンズ"
    },
    {
      "indent": 3,
      "text": "To understand the origins of recent DHTs, one needs to look to three contributions from the 1990s. The first two -- Plaxton, Rajaraman, and Richa (PRR) [30] and Consistent Hashing [49] -- were published within one month of each other. The third, the Scalable Distributed Data Structure (SDDS) [52], was curiously ignored in significant structured P2P designs despite having some similar goals [2, 6, 7]. It has been briefly referenced in other P2P papers [46, 284-287].",
      "ja": "最近のDHTの起源を理解するためには、1990年代から3人の貢献に目を向ける必要があります。最初の二つ -  Plaxton、Rajaraman共著、およびRicha（PRR）[30]と一致ハッシュ[49]  - 互いの一ヶ月以内に出版されました。第三の、スケーラブルな分散データ構造（SDDS）[52]は、不思議ないくつかの同様の目標を持つにもかかわらず、有意な構造化P2P設計では無視した2、6、7]。これは、簡単に他のP2Pの論文[46、284-287]で参照されています。"
    },
    {
      "indent": 0,
      "text": "3.1.1. Plaxton, Rajaraman, and Richa (PRR)",
      "section_title": true,
      "ja": "3.1.1。 Plaxton、Rajaraman共著、およびRicha（PRR）"
    },
    {
      "indent": 3,
      "text": "PRR is the most recent of the three. It influenced the designs of Pastry [2], Tapestry [6], and Chord [7]. The value of PRR is that it can locate objects using fixed-length routing tables [6]. Objects and nodes are assigned a semantic-free address, for example a 160-bit key. Every node is effectively the root of a spanning tree. A message routes toward an object by matching longer address suffixes, until it encounters either the object's root node or another node with a 'nearby' copy. It can route around link and node failure by matching nodes with a related suffix. The scheme has several disadvantages [6]: global knowledge is needed to construct the overlay; an object's root node is a single point of failure; nodes cannot be inserted and deleted; and there is no mechanism for queries to avoid congestion hot spots.",
      "ja": "PRRは3の最も最近のものです。これは、[6]、[2]タペストリーをペストリーのデザインに影響を与え、そしてコード[7]。 PRRの値は、固定長のルーティングテーブルを使用してオブジェクトを見つけることができるということである[6]。オブジェクトノードは、例えば、160ビットの鍵をセマンティックフリーアドレスが割り当てられます。すべてのノードが効果的にスパニングツリーのルートです。それは、オブジェクトのルートノードまたは「近くの」コピーを持つ別のノードのいずれかに遭遇するまで、より長いアドレスのサフィックスを照合することによって物体に向かってメッセージをルーティング。これは、関連するサフィックスのノードを照合することによって、リンクとノードの障害を迂回することができます。スキームは、いくつかの欠点がある[6]：グローバルな知識がオーバーレイを構築するために必要とされます。オブジェクトのルート・ノードは、単一障害点です。ノードを挿入、削除することができません。輻輳のホットスポットを回避するためのクエリのためのメカニズムはありません。"
    },
    {
      "indent": 0,
      "text": "3.1.2. Consistent Hashing",
      "section_title": true,
      "ja": "3.1.2。一貫性のあるハッシュ"
    },
    {
      "indent": 3,
      "text": "Consistent Hashing [288] strongly influenced the designs of Chord [7] and Koorde [37]. Karger, et al. introduced Consistent Hashing in the context of the Web-caching problem [49]. Web servers could conceivably use standard hashing to place objects across a network of caches. Clients could use the approach to find the objects. For normal hashing, most object references would be moved when caches are added or deleted. On the other hand, Consistent Hashing is \"smooth\" -- when caches are added or deleted, the minimum number of object references move so as to maintain load balancing. Consistent Hashing also ensures that the total number of caches responsible for a particular object is limited. Whereas Litwin's Linear Hashing (LH*) scheme requires 'buckets' to be added one at a time in sequence [50], Consistent Hashing allows them to be added in any order [49]. There is an open Consistent Hashing problem pertaining to the fraction of items moved when a node is inserted [165]. Extended Consistent Hashing was recently proposed to randomize queries over the spread of caches to significantly reduce the load variance [289]. Interestingly, Karger [49] referred to an older DHT algorithm by Devine that used \"a novel autonomous location discovery algorithm that learns the buckets' locations instead of using a centralized directory\" [51].",
      "ja": "一貫したハッシング[288]強く和音のデザインに影響を与えた[7]とKoorde [37]。カーガーら。 [49]のWebキャッシング問題のコンテキスト内で一貫したハッシュを導入しました。 Webサーバーは、おそらくキャッシュのネットワークを介してオブジェクトを配置するための標準的なハッシュを使用することができます。クライアントは、オブジェクトを見つけるためにアプローチを使用することができます。通常のハッシュのために、ほとんどのオブジェクト参照は、キャッシュが追加されたときに移動または削除されるだろう。一方、一貫したハッシングは「滑らか」である - キャッシュが追加または削除された場合、オブジェクト参照の最小数はそれほどロードバランシングを維持するように移動します。一貫したハッシングは、特定のオブジェクトに責任キャッシュの合計数が制限されることを保証します。リトウィンの線形ハッシュ（LH *）方式がシーケンス内の時間に1つ[50]を追加する「バケット」必要とするのに対し、一貫したハッシングは、それらを任意の順序[49]に追加することを可能にします。ノードは、[165]挿入されたときにアイテムの画分に係るオープン一貫したハッシングするという問題が動かされます。拡張コンシステント・ハッシュ法は、最近大幅に負荷分散[289]を減らすために、キャッシュの普及上のクエリをランダム化することが提案されました。興味深いことに、カーガー[49] [51]「の代わりに集中ディレクトリを使用することのバケツの位置を学習する新規自律的位置検出アルゴリズム」を使用ディバインによって古いDHTアルゴリズムと呼ばれます。"
    },
    {
      "indent": 0,
      "text": "3.1.3. Scalable Distributed Data Structures (LH*)",
      "section_title": true,
      "ja": "3.1.3。スケーラブルな分散データ構造（LHの*）"
    },
    {
      "indent": 3,
      "text": "In turn, Devine's primary point of reference was Litwin's work on SDDSs and the associated LH* algorithm [52]. An SDDS satisfies three design requirements: files grow to new servers only when existing servers are well loaded; there is no centralized directory; and the basic operations like insert, search, and split never require atomic updates to multiple clients. Honicky and Miller suggested the first requirement could be considered a limitation since expansion to new servers is not under administrative control [286]. Litwin recently noted numerous similarities and differences between LH* and Chord [290]. He found that both implement key search. Although LH* refers to clients and servers, nodes can operate as peers in both. Chord 'splits' nodes when a new node is inserted, while LH* schedules 'splits' to avoid overload. Chord requests travel O(log n) hops, while LH* client requests need, at most, two hops to find the target. Chord stores a small number of 'fingers' at each node. LH* servers store N/2 to N addresses while LH* clients store 1 to N addresses. This trade-off between hop count and the size of the index affects system robustness, and bears striking similarity to recent one- and two-hop P2P schemes in Section 2. The arrival and departure of LH* clients does not disrupt LH* server metadata at all. Given the size of the index, the arrival and departure of LH* servers are likely to cause more churn than that of Chord nodes. Unlike Chord, LH* has a single point of failure, the split coordinator. It can be replicated. Alternatively, it can be removed in later LH* variants, though details have not been progressed for lack of practical need [290].",
      "ja": "次に、参照のディバインの主なポイントは、リトウィンのSDDSsの作業と関連LHの*アルゴリズム[52]でした。 SDDSは、3つの設計要件を満たす：ファイルは、既存のサーバーがうまくロードされている場合にのみ、新しいサーバに成長します。何の一元化されたディレクトリはありません。そして、挿入、検索、および分割などの基本的な操作は、複数のクライアントの原子更新が必要なことはありません。 HonickyとMiller氏は、新しいサーバーへの展開が管理制御[286]の下ではありませんので、最初の要件は、制限と考えることができる提案しました。リトウィンは最近、多くの類似点とLH *とコード[290]との違いを指摘しました。彼は、両方のキー検索を実装することがわかりました。 LH *は、クライアントとサーバーに言及しているが、ノードが両方におけるピアとして動作させることができます。 LH *スケジュール「分割」は過負荷を避けるためながら、新しいノードを、挿入されたコード「分割」ノード。 LH *クライアントの要求は、ターゲットを見つけるために、最大で、2つのホップを必要としながら、和音要求はO（n個のログ）ホップを、旅行します。コードは、各ノードに「指」の小さな数を記憶します。 NアドレスにLH *サーバストアN / 2 LH *クライアントは、N個のアドレスに1を格納している間。ホップ数とインデックスのサイズとの間のこのトレードオフは、システムの堅牢性に影響を与え、第2節では、最近の1次元および2ホップP2Pスキームに到着し、LH *クライアントの出発を類似性を打つクマはLHの*サーバーのメタデータを破壊しませんまったく。インデックス、LH *サーバの到着と出発の大きさを考えると和音ノードのそれより解約を引き起こす可能性があります。コードとは異なり、LH *は、単一障害点、分割調整されています。これは、複製することができます。詳細は実用的な必要性[290]の欠如のために進行されていないものの代わりに、それは、後にLH *変種で削除することができます。"
    },
    {
      "indent": 0,
      "text": "3.2. Dependability",
      "section_title": true,
      "ja": "3.2。ディペンダ"
    },
    {
      "indent": 3,
      "text": "We make four overall observations about their dependability. Dependability metrics fall into two categories: static dependability, a measure of performance before recovery mechanisms take over; and dynamic dependability, for the most likely case in massive networks where there is continual failure and recovery (\"churn\").",
      "ja": "私たちは、彼らの信頼約4つの全体的な観測を行います。回復メカニズムが引き継ぐ前に、静的な信頼性、パフォーマンスの指標;：ディペンダメトリックは、2つのカテゴリに分類されそしてダイナミックな信頼性、継続的な障害と回復（「チャーン」）があり、大規模なネットワークの中で最も可能性の高いケースについて。"
    },
    {
      "indent": 0,
      "text": "3.2.1. Static Dependability",
      "section_title": true,
      "ja": "3.2.1。静的なディペンダ"
    },
    {
      "indent": 3,
      "text": "Observation A: Static dependability comparisons show that no O(log n) DHT geometry is significantly more dependable than the other O(log n) geometries.",
      "ja": "観察Aは：静的な信頼性比較は（n個のログ）というOを示さないDHTの形状は、他のO（n個のログ）ジオメトリよりもかなり頼りです。"
    },
    {
      "indent": 3,
      "text": "Gummadi, et al. compared the tree, hypercube, butterfly, ring, XOR, and hybrid geometries. In such geometries, nodes generally know about O(log n) neighbors and route to a destination in O(log n) hops, where N is the number of nodes in the overlay. Gummadi, et al. asked \"Why not the ring?\" They concluded that only the ring and XOR geometries permit flexible choice of both neighbors and alternative routes [24]. Loguinov, et al. added the de Bruijn graph to their comparison [36]. They concluded that the classical analyses, for example the probability that a particular node becomes disconnected, yield no major differences between the resilience of Chord, CAN, and de Bruijn graphs. Using bisection width (the minimum edge count between two equal partitions) and path overlap (the likelihood that backup paths will encounter the same failed nodes or links as the primary path), they argued for the superior resilience of the de Bruijn graph. In short, ring, XOR, and de Bruijn graphs all permit flexible choice of alternative paths, but only in de Bruijn are the alternate paths independent of each other [36].",
      "ja": "Gummadiら。ツリー、ハイパーキューブ、蝶、リング、XOR、及びハイブリッドの形状を比較しました。そのような幾何学的形状では、ノードは、一般に、Nは、オーバーレイ内のノードの数がOで先にO（ログn）隣人とルート（ログn）ホップ、知っています。 Gummadiら。 「リングなぜいけないのでしょうか？」尋ねました彼らは、リングとXOR形状が隣人と代替経路[24]の両方の柔軟な選択を可能にすると結論付けました。 Loguinovら。それらの比較[36]にデBruijnグラフのグラフを追加しました。彼らは、特定のノードが切断状態になる古典的な分析、例えば確率は、コード、CAN、及びデBruijnグラフグラフの回復力との間に大きな違いを生じないと結論付けました。二等分幅（二つの等しいパーティション間の最小エッジ数）とパスオーバーラップ（バックアップパスは一次パスと同じ失敗したノードやリンクに遭遇する可能性）を使用して、それらがデBruijnグラフグラフの優れた弾力性を主張しました。要するに、リング、XOR、及びBruijnグラフは、代替パスのすべての許可柔軟な選択をグラフだけデBruijnグラフでDEは、[36]互いに独立代替パスです。"
    },
    {
      "indent": 0,
      "text": "3.2.2. Dynamic Dependability",
      "section_title": true,
      "ja": "3.2.2。ダイナミックディペンダ"
    },
    {
      "indent": 3,
      "text": "Observation B: Dynamic dependability comparisons show that DHT dependability is sensitive to the underlying topology maintenance algorithms.",
      "ja": "観測B：動的信頼性の比較は、DHTの信頼性は、基礎となるトポロジのメンテナンスアルゴリズムに敏感であることを示しています。"
    },
    {
      "indent": 3,
      "text": "Li, et al. give the best comparison to date of several leading DHTs during churn [291]. They relate the disparate configuration parameters of Tapestry, Chord, Kademlia, Kelips, and OneHop to fundamental design choices. For each of these DHTs, they plotted the optimal performance in terms of lookup latency (milliseconds) and fraction of failed lookups. The results led to several important insights about the underlying algorithms, for example: increasing routing table size is more cost-effective than increasing the rate of periodic stabilization; learning about new nodes during the lookup process sometimes eliminates the need for stabilization; and parallel lookups reduce latency due to timeouts more effectively than faster stabilization. Similarly, Zhuang, et al. compared keep-alive algorithms for DHT failure detection [292]. Such algorithmic comparisons can significantly improve the dependability of DHT designs.",
      "ja": "リーら。チャーン[291]の間にいくつかの主要のDHTの日に最高の比較を与えます。彼らは基本的な設計上の選択にタペストリー、和音、Kademlia、Kelips、およびOneHopの異種の設定パラメータを関連付けます。これらのDHTのそれぞれのために、彼らは、ルックアップの待ち時間（ミリ秒）と失敗したルックアップの割合の観点で最適なパフォーマンスをプロットしました。結果は、例えば、基礎となるアルゴリズムに関するいくつかの重要な洞察につながった：ルーティングテーブルのサイズは、定期的な安定化の速度を増加させるよりも費用対効果で増加します。ルックアップ処理中に新しいノードについて学習することは、時には安定化の必要性を排除し、並列検索が速く安定化よりも効果的にタイムアウトになるために待ち時間を短縮します。同様に、荘ら。比較キープアライブDHT障害検出のためのアルゴリズム[292]。このようなアルゴリズムの比較は大幅DHTデザインの信頼性を向上させることができます。"
    },
    {
      "indent": 3,
      "text": "In Figure 2, we propose a taxonomy for the topology maintenance algorithms that influence dependability. The algorithms can be classified by how nodes join and leave, how they first detect failures, how they share information about topology updates, and how they react when they receive information about topology updates.",
      "ja": "図2では、我々は信頼性に影響を与えるトポロジメンテナンスアルゴリズムの分類法を提案します。アルゴリズムは、ノードが参加し、それらが、トポロジの更新に関する情報を共有する方法、彼らが最初に障害を検出する方法、残し、それらが、トポロジの更新に関する情報を受信したときにどのように反応する方法によって分類することができます。"
    },
    {
      "indent": 3,
      "text": "Normal Updates Joins (passive; active) [293] Leaves (passive; active) [293]",
      "ja": "[293] [293]葉（アクティブ、パッシブ）、通常の更新（アクティブ、パッシブ）に参加します"
    },
    {
      "indent": 3,
      "text": "Fault Detection [292] Maintenance Proactive (periodic or keep-alive probes) Reactive (correction-on-use, correction-on-failure) [294] Report Negative (all dead nodes, nodes recently failed) Positive (all live nodes; nodes recently recovered) [292]",
      "ja": "障害検出[292]メンテナンスプロアクティブ（周期的またはキープアライブプローブ）反応（訂正・オン・ユース、補正オンの失敗）[294]レポートのマイナス（すべての死者のノードが、最近失敗したノード）正（すべてのライブのノード、ノード最近回復）[292]"
    },
    {
      "indent": 3,
      "text": "Topology Sharing: yes/ no [292] Multicast Tree (explicit, implicit) [267, 295] Gossip (timeouts; number of contacts) [39]",
      "ja": "トポロジ共有：はい/いいえ[292]マルチキャストツリー（明示的、暗黙的な）[267、295]ゴシップ（タイムアウト、連絡先の数）[39]"
    },
    {
      "indent": 3,
      "text": "Corrective Action Routing Rerouting actions (reroute once; route in parallel [291]; reject) Routing timeouts (TCP-style, virtual coordinates) [296] Topology Update action (evict/ replace/ tag node) Update timeliness (immediate, periodic[296], delayed [297])",
      "ja": "対処方法ルーティング再ルーティングアクション（一度リルート;ルートパラレル[291];拒否）ルーティング（TCP-スタイル、仮想座標）[296]トポロジの更新アクション（追い出し/ /タグノードを置き換える）更新適時（即時、定期的に[296タイムアウト]、遅延[297]）"
    },
    {
      "indent": 8,
      "text": "Figure 2: Topology Maintenance in Distributed Hash Tables",
      "ja": "図2：分散ハッシュテーブルにおいてトポロジメンテナンス"
    },
    {
      "indent": 0,
      "text": "3.2.3. Ephemeral or Stable Nodes -- O(log n) or O(1) Hops",
      "section_title": true,
      "ja": "3.2.3。エフェメラルまたは安定なノード -  O（Nログ）またはO（1）ホップ"
    },
    {
      "indent": 3,
      "text": "Observation C: Most DHTs use O(log n) geometries to suit ephemeral nodes. The O(1) hop DHTs suit stable nodes and deserve more research attention.",
      "ja": "観測C：ほとんどのDHTははかないノードに合うようにO（ログn）のジオメトリを使用しています。 O（1）ホップDHTsのスーツ安定したノードとは、より多くの研究の注目に値します。"
    },
    {
      "indent": 3,
      "text": "Most of the DHTs in Section 3.5 assume that nodes are ephemeral, with expected lifetimes of one to two hours. Therefore, they mostly use an O(log n) geometry. The common assumption is that maintenance of full routing tables in the O(1) hop DHTs will consume excessive bandwidth when nodes are continually joining and leaving. The corollary is that, when they run on stable infrastructure servers [298], most of the DHTs in Section 3.5 are less than optimal -- lookups take many more hops than necessary, wasting latency and bandwidth budgets. The O(1) hop DHTs suit stable deployments and high lookup rates. For a churning 1024-node network, Li, et al. concluded that OneHop is superior to Chord, Tapestry, Kademlia, and Kelips in terms of latency and lookup success rate [291]. For a 3000-node network, they concluded that \"OneHop is only preferable to Chord when the deployment scenario allows a communication cost greater than 20 bytes per node per second\" [291]. This apparent limitation needs to be put in context. They assumed that each node issues only one lookup every 10 minutes and has a lifetime of only 60 minutes. It seems reasonable to expect that in some deployments, nodes will have a lifetime of weeks or more, a maintenance bandwidth of tens of kilobits per second, and a load of hundreds of lookups per second. O(1) hop DHTs are superior in such situations. OneHop can scale at least to many tens of thousands of nodes [267]. The recent O(1) hop designs [267, 295] are vastly outnumbered by the O(log n) DHTs in Section 3.5. Research on the algorithms of Figure 2 will also yield improvements in the dependability of the O(1) hop DHTs.",
      "ja": "3.5節でのDHTのほとんどは、ノードは1〜2時間の期待寿命で、短命であることを前提としています。したがって、それらは主にO（ログn）は幾何学を使用しています。一般的な仮定は、ノードが継続的に参加し、離脱されたときにOで完全なルーティングテーブルのメンテナンス（1）ホップのDHTは、過度の帯域幅を消費することです。ルックアップは、遅延と帯域幅の予算を浪費し、必要なよりも多くのホップを取る - 当然の結果は、彼らが安定したインフラストラクチャサーバー[298]で実行した場合、3.5節でのDHTのほとんどが最適に満たない、ということです。 O（1）ホップDHTsのスーツ安定した展開と高い検索率。かき回す1024ノードのネットワークのために、リーら。 [291] OneHopが潜伏して検索成功率の面で和音、タペストリー、Kademliaの、そしてKelipsに優れていると結論付けました。 3000ノードのネットワークのために、彼らは[291]「OneHopが展開シナリオは、通信は、毎秒ノードあたり超える20のバイトを要することができたときにコードすることのみが望ましい」と結論づけました。この明らかな制限は、文脈に置かれる必要があります。彼らは、各ノードの問題が一つだけ10分ごとに検索し、わずか60分の寿命を持っていると仮定しました。いくつかの展開で、ノードは週間以上の寿命、キロビット毎秒数十のメンテナンス帯域幅、および毎秒検索の数百の負荷を持っていることを期待するのが妥当と思われます。 O（1）ホップのDHTは、このような状況に優れています。 OneHopは、[267]少なくとも数十のノードの数千の​​に拡張することができます。最近O（1）ホップ設計[267、295]は大幅（ログn）Oにより3.5節でのDHTを上回っています。図2のアルゴリズムの研究はまた、O（1）ホップのDHTsの信頼性の向上をもたらします。"
    },
    {
      "indent": 0,
      "text": "3.2.4. Simulation and Proof",
      "section_title": true,
      "ja": "3.2.4。シミュレーションと証明"
    },
    {
      "indent": 3,
      "text": "Observation D: Although not yet a mature science, the study of DHT dependability is helped by recent simulation and formal development tools.",
      "ja": "観測D：まだ成熟科学、DHTの信頼性の研究は、最近のシミュレーションと正式な開発ツールによって助けられませんが。"
    },
    {
      "indent": 3,
      "text": "While there are recent reference architectures [294, 298], much of the DHT literature in Section 3.5 does not lend itself to repeatable, comparative studies. The best comparative work to date [291] relies on the Peer-to-Peer Simulator (P2PSIM) [299]. At the time of writing, it supports more DHT geometries than any other simulator. As the study of DHTs matures, we can expect to see the simulation emphasis shift from geometric comparison to a comparison of the algorithms of Figure 2.",
      "ja": "最近のリファレンス・アーキテクチャー[294、298]がありますが、3.5節でDHTの文献の多くは、繰り返し、比較研究に向いていません。これまでの最高の比較作業[291]ピア・ツー・ピアシミュレータ（P2PSIM）[299]に依存しています。これを書いている時点で、それは他のシミュレータよりも多くのDHTのジオメトリをサポートしています。 DHTの研究が成熟するにつれて、我々は、図2のアルゴリズムの比較に幾何学的な比較からシミュレーション重点シフトを見ることを期待することができます。"
    },
    {
      "indent": 3,
      "text": "P2P correctness proofs generally rely on less-than-complete formal specifications of system invariants and events [7, 45, 300]. Li and Plaxton expressed concern that \"when many joins and leaves happen concurrently, it is not clear whether the neighbor tables will remain in a 'good' state\" [47]. While acknowledging that guaranteeing consistency in a failure-prone network is impossible, Lynch, Malkhi, et al. sketched amendments to the Chord algorithm to guarantee atomicity [301]. More recently, Gilbert, Lynch, et al. gave a new algorithm for atomic read/write memory in a churning distributed network, suggesting it to be a good match for P2P [302]. Lynch and Stoica show in an enhancement to Chord that lookups are provably correct when there is a limited rate of joins and failures [303]. Fault Tolerant Active Rings is a protocol for active joins and leaves that was formally specified and proven using B-method tools [304]. A good starting point for a formal DHT development would be the numerous informal API specifications [22, 305, 306]. Such work could be informed by other efforts to formally specify routing invariants [307, 308].",
      "ja": "P2Pの正当性証明は、一般に、システム不変量とイベントのより少なくより完全な形式仕様[7、45、300]に依存しています。 LiとPlaxtonは、[47]「多くの人が参加すると葉が同時に発生したとき、ネイバーテーブルが 『良い』状態のままになりますかどうかは明らかではない」との懸念を表明しました。故障が発生しやすいネットワークの一貫性を保証することは不可能であること、リンチ、Malkhiらを認めています。 [301]原子性を保証するためにコード化アルゴリズムに修正をスケッチ。さらに最近では、ギルバート、リンチら。それはP2P [302]のための良好な一致であることを示唆し、かき回す分散ネットワークにおける原子読取り/書込みメモリのための新しいアルゴリズムを示しました。リンチとStoicaのは、[303]結合および障害の限定された割合があるときルックアップが証明可能正しいことをコードするエンハンスメントに示します。トレラントアクティブリングフォールトがアクティブ参加正式B法ツールを使用して、指定されたと証明された葉のためのプロトコル[304]です。正式なDHT開発のための良い出発点は、多くの非公式API仕様[22、305、306]になります。このような作業は、正式にルーティング不変[307、308]を指定するための他の努力によって通知することができます。"
    },
    {
      "indent": 0,
      "text": "3.3. Latency",
      "section_title": true,
      "ja": "3.3。潜在"
    },
    {
      "indent": 3,
      "text": "The key metrics for DHT latency are:",
      "ja": "DHTの待ち時間のための重要な指標は以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "1) Shortest-Path Distance and Diameter. In graph theory, the shortest-path distance is the minimum number of edges in any path between two vertices of the graph. Diameter is the largest of all shortest-path distances in a graph [309]. Networking synonyms for distance on a DHT are \"hop count\" and \"lookup length\".",
      "ja": "1）最短パスの距離と直径。グラフ理論では、最短パスの距離は、グラフの2つの頂点の間の任意のパス内のエッジの最小数です。直径がグラフ[309]内のすべての最短経路距離の最大です。 DHT上の距離のためのネットワーク同義語は「ホップ数」と「ルックアップ長さ」です。"
    },
    {
      "indent": 3,
      "text": "2) Latency and Latency Stretch. Two types of latency are relevant here -- network-layer latency and overlay latency. Network-layer latency has been referred to as \"proximity\" or \"locality\" [24]. Stretch is the cost of an overlay path between two nodes, divided by the cost of the direct network path between those nodes [310]. Latency stretch is also known as the \"relative delay penalty\" [311].",
      "ja": "2）遅延及び遅延ストレッチ。レイテンシーの二つのタイプがここに関連しています - ネットワーク層の待ち時間とオーバーレイの待ち時間。ネットワーク層の待ち時間は「近接」または「地域」[24]と呼ばれています。ストレッチは、それらのノード（310）との間の直接的なネットワークパスのコストで割った2つのノード間のオーバレイ経路のコストです。レイテンシストレッチは、「相対遅延ペナルティ」[311]として知られています。"
    },
    {
      "indent": 0,
      "text": "3.3.1. Hop Count and the O(1)-Hop DHTs",
      "section_title": true,
      "ja": "3.3.1。ホップカウントとO（1）-HopのDHT"
    },
    {
      "indent": 3,
      "text": "Hop count gives an approximate indication of path latency. O(1)-hop DHTs have path latencies lower than the O(log n)-hop DHTs [291]. This significant advantage is often overlooked on account of concern about the messaging costs to maintain large routing tables (Section 3.2.3). Such concern is justified when the mean node lifetime is only a few hours and the mean lookup interval per node is more than a few seconds (the classic profile of a P2P file-sharing node). However, for a large, practical operating range (node lifetimes of days or more, lookup rates of over tens of lookups per second per node, up to ~100,000 nodes), the total messaging cost in O(1) hop DHTs is lower than in O(log n) DHTs [312]. Lookups and routing table maintenance contribute to the total messaging cost. If a deployment fits this operating range, then O(1)-hop DHTs will give lower path latencies and lower total messaging costs. An additional merit of the O(1)-hop DHTs is that they yield lower lookup failure rates than their O(log N)-hop counterparts [291].",
      "ja": "ホップカウントは、パスの待ち時間のおおよその目安となります。 O（1）-hopのDHTパスがO（ログn）-hopのDHTs [291]よりも低いレイテンシ有します。この重要な利点は、多くの場合、大規模なルーティングテーブル（セクション3.2.3）を維持するために、メッセージングコストに関する懸念のために見過ごされています。平均ノード寿命はわずか数時間で、ノードあたりの平均検索間隔は数秒（P2Pファイル共有ノードの古典的なプロファイル）を超えているとき、そのような懸念は正当化されます。しかし、大規模な、実用的な動作範囲（〜10万ノードまでの日以上のノード寿命、ノード当たり毎秒検索数十上のルックアップレート）のために、O（1）ホップのDHTの総メッセージングコストがより低いですO中の（ログn）のDHTs [312]。ルックアップとルーティングテーブルのメンテナンスは、総メッセージングコストに貢献します。展開は、この動作範囲に収まる場合には、O（1）-hopのDHTが低く、パスの待ち時間と低い総メッセージングコストを与えます。 Oの追加のメリット（1）-hopのDHTは、それらが（Nログ）対応物[291] -hopそのOよりも低いルックアップ故障率をもたらすことです。"
    },
    {
      "indent": 3,
      "text": "Low hop count can be achieved in two ways: each node has a large O(N) index of nodes; or the object references can be replicated on many nodes. Beehive [313], Kelips [39], LAND [310], and Tulip [314] are examples of the latter category. Beehive achieves O(1) hops on average and O(log n) hops in the worst case, by proactive replication of popular objects. Kelips replicates the 'file index'. It incurs O(sqrt(N)) storage costs for both the node index and the file index. LAND uses O(log n) reference pointers for each stored object and an O(log n) index to achieve a worst-case 1+e stretch, where 0<e. The Kelips-like Tulip [314] requires 2 hops per lookup. Each node",
      "ja": "低いホップ・カウントは、2つの方法で達成することができる：各ノードは、ノードの大O（N）のインデックスを有します。またはオブジェクト参照は、多くのノードに複製することができます。蜂の巣[313]、Kelips [39]、LAND [310]、およびチューリップ[314]は後者のカテゴリーの一例です。蜂の巣はO（1）人気のあるオブジェクトの積極的な複製により、最悪の場合にはホップ（n個のログ）の平均とOにホップ実現しています。 Kelipsは、「ファイルのインデックス」を複製します。これは、ノードインデックスとファイルインデックスの両方のためのO（SQRT（N））ストレージコストを招きます。 LANDはO（Nログ）各記憶されたオブジェクトとOのための参照ポインタ（ログn）0 <Eワーストケース1 + Eストレッチを達成するためにインデックスを使用します。 Kelipsのようなチューリップ[314]は、ルックアップごとに2つのホップを必要とします。各ノード"
    },
    {
      "indent": 3,
      "text": "maintains 2sqrt(N)log(N) links to other nodes and objects are replicated on O(sqrt(N)) nodes.",
      "ja": "2sqrt（N）ログ（N）を維持し、他のノードとオブジェクトへのリンクは、O（SQRT（N））で複製されたノード。"
    },
    {
      "indent": 3,
      "text": "The DHTs with a large O(N) node index can be divided into two groups: those for which the index is always O(N); and those for which the index opportunistically ranges from O(log n) to O(N). Linear Hashing (LH*) servers [52], OneHop [267], and 1h-Calot [295] fall into the former category. EpiChord [315] and Accordion [316] are examples of the latter.",
      "ja": "大O（N）ノードインデックスとのDHTは、2つのグループに分けることができる：インデックスは常にO（N）であるものいます。インデックスは、日和見O（ログn）からO（N）の範囲にあるものいます。線形ハッシュ（LH *）サーバ[52]、OneHop [267]、およびH-Calot [295]は前者のカテゴリに分類されます。 EpiChord [315]及びアコーディオン[316]は後者の例です。"
    },
    {
      "indent": 0,
      "text": "3.3.2. Proximity and the O(log n)-Hop DHTs",
      "section_title": true,
      "ja": "3.3.2。近接及びO（ログn）-HopのDHT"
    },
    {
      "indent": 3,
      "text": "If one chooses not to use single-hop DHTs, hop count is a weak indicator of end-to-end path latency. Some hops may incur large delays because of intercontinental or satellite links. Consequently, numerous DHT designs minimize path latency by considering the proximity of nodes. Gummadi, et al. classified the proximity methods as follows [24]:",
      "ja": "一つは単一ホップのDHTを使用しないことを選択した場合、ホップカウントは、エンドツーエンドのパス遅延の弱い指標です。いくつかのホップは理由大陸間または衛星リンクの大きな遅延が発生する場合があります。その結果、数多くのDHTの設計は、ノードの近接性を考慮して、パスの遅延を最小限に抑えます。 Gummadiら。次のように接近法を分類[24]。"
    },
    {
      "indent": 3,
      "text": "1) Proximity Neighbor Selection (PNS). The nodes in the routing table are chosen based on the latency of the direct hop to those nodes. The latency may be explicitly measured [317], or it may be estimated using one of several synthetic coordinate systems [150, 154, 318]. As a lower bound on PNS performance, Dabek, et al. showed that lookups on O(log n) DHTs take at least 1.5 times the average roundtrip time of the underlying network [154].",
      "ja": "1）近接近隣の選択（PNS）。ルーティングテーブル内のノードは、それらのノードに直接ホップの待ち時間に基づいて選択されます。待ち時間は、明示的に[317]を測定してもよいし、いくつかの合成座標系の[150、154、318]を用いて推定することができます。らPNS性能、Dabek、上下限として。 O上のルックアップ（ログn）のDHTは、基礎となるネットワーク[154]の少なくとも1.5倍の平均往復時間を要することを示しました。"
    },
    {
      "indent": 3,
      "text": "2) Proximity Route Selection (PRS). At lookup time, the choice of the next-hop node relies on the latency of the direct hop to that node. PRS is less effective than PNS, though it may complement it [24]. Some of the routing geometries in Section 3.5 do not support PNS and/or PRS [24].",
      "ja": "2）近接ルート選択（PRS）。検索時には、次ホップノードの選択は、そのノードへの直接のホップの待ち時間に依存しています。それは[24]、それを補完することができるもののPRSは、PNSよりも効果的です。 3.5節でのルーティングジオメトリの一部は、PNSおよび/またはPRS [24]をサポートしていません。"
    },
    {
      "indent": 3,
      "text": "3) Proximity Identifier Selection (PIS). Node identifiers indicate geographic position. PIS frustrates load balancing, increases the risk of correlated failures, and is not often used [24].",
      "ja": "3）近接識別子選択（PIS）。ノード識別子は、地理的な位置を示しています。 PISは、負荷分散を失望相関する障害のリスクを増加させ、しばしば使用されていない[24]。"
    },
    {
      "indent": 3,
      "text": "The proximity study by Gummadi, et al. assumed recursive routing, though they suggested that PNS would also be superior to PRS with iterative routing [24]. Dabek, et al. found that recursive lookups take 0.6 times as long as iterative lookups [150].",
      "ja": "らGummadiによる近接研究。それらはPNSも反復ルーティング[24]とのPRSに優れたであろうことを示唆しているが、再帰的なルーティングを仮定しました。 Dabek、ら。再帰的な検索が反復検索[150]限り、0.6倍を取ることがわかりました。"
    },
    {
      "indent": 3,
      "text": "Beyond the explicit use of proximity information, redundancy can help to avoid slow paths and servers. One may increase the number of replicas [150], use parallel lookups [291, 316], use alternate routes on failure [150], or use multiple gateway nodes to enter the DHT [317].",
      "ja": "近接情報を明示的に使用を超えて、冗長性が遅いパスとサーバーを回避するのに役立ちます。一つは、[150]レプリカの数を増やす並列ルックアップ[291、316]を使用して、故障[150]に代替経路を使用するか、またはDHT [317]を入力する複数のゲートウェイ・ノードを使用してもよいです。"
    },
    {
      "indent": 0,
      "text": "3.4. Multicasting",
      "section_title": true,
      "ja": "3.4。マルチキャスト"
    },
    {
      "indent": 0,
      "text": "3.4.1. Multicasting vs. Broadcasting",
      "section_title": true,
      "ja": "3.4.1。マルチキャスト対放送"
    },
    {
      "indent": 3,
      "text": "\"Multicasting\" here means sending a message to a subset of an overlay's nodes. Nodes explicitly join and leave this subset, called a \"multicast group\". \"Broadcasting\" here is a special case of multicasting in which a message is sent to all nodes in the overlay. Broadcasting relies on overlay membership messages -- it does not need extra group membership messaging. Castro, et al. said multicasting on structured overlays is either \"flooding\" (one overlay per group) or \"tree-based\" (one tree per group) [319]. These are synonyms for broadcasting and multicasting respectively.",
      "ja": "「マルチキャストは、」ここにオーバーレイのノードのサブセットにメッセージを送ることを意味します。ノードは、明示的に参加して、「マルチキャストグループ」と呼ばれるこのサブセットを、残します。 「放送は、」ここにメッセージがオーバーレイ内のすべてのノードに送信されたマルチキャストの特殊なケースです。放送は、オーバーレイ会員メッセージに依存している - それは余分なグループメンバーシップのメッセージングを必要としません。カストロら。構造化オーバレイ上のマルチキャストは、いずれかの「氾濫」（グループごとに1つのオーバーレイ）または「ツリーベース」（グループごとに1本の木）[319]であることを特徴とします。これらは、それぞれ放送とマルチキャストの同義語です。"
    },
    {
      "indent": 3,
      "text": "The first DHT-based designs for multicasting were CAN multicast [320], Scribe [241], Bayeux [242], and i3 [231]. They were based on CAN [8], Pastry [2], Tapestry [31], and Chord [7] respectively. El-Ansary, et al. devised the first DHT-based broadcasting scheme [321]. It was based on Chord.",
      "ja": "マルチキャストのための最初のDHTベースの設計は、スクライブ[241]、バイユー[242]、およびI3 [231] [320]をマルチキャストできました。これらは、[8]、ペストリー[2]、タペストリー[31]、およびコード[7]は、それぞれCANに基づくものでした。 EL-Ansary、ら。最初のDHTベースの放送方式[321]を考案しました。これは、コードに基づいていました。"
    },
    {
      "indent": 3,
      "text": "Multicast trees can be constructed using reverse-path forwarding or forward-path forwarding. Scribe uses reverse-path forwarding [241]. Bayeux uses forward-path forwarding [242]. Borg, a multicast design based on Pastry, uses a combination of forward-path and reverse-path forwarding to minimize latency [237].",
      "ja": "マルチキャストツリーは、逆経路転送またはフォワードパス転送を使用して構築することができます。スクライブは、逆経路転送[241]を使用します。バイユーは、順方向パス転送[242]を使用します。ボルグ、ペストリーに基づくマルチキャスト設計は、[237]フォワードパス及び待ち時間を最小化するために転送するリバースパスの組み合わせを使用します。"
    },
    {
      "indent": 0,
      "text": "3.4.2. Motivation for DHT-based Multicasting",
      "section_title": true,
      "ja": "3.4.2。 DHTベースのマルチキャスティングのための動機"
    },
    {
      "indent": 3,
      "text": "Multicasting complements DHT search capability. DHTs naturally support exact match queries. With multicasting, they can support more complex queries. Multicasting also enables the dissemination and collection of global information.",
      "ja": "マルチキャストは、DHT検索機能を補完します。 DHTは、自然に完全一致クエリをサポート。マルチキャストを使用すると、彼らはより複雑なクエリをサポートすることができます。マルチキャストはまた、グローバルな情報の普及と収集を可能にします。"
    },
    {
      "indent": 3,
      "text": "Consider, for example, aggregation queries like minimum, maximum, count, sum, and average (Section 5.4). A node at the root of a dissemination tree might multicast such a query [322]. The leaf nodes return local results towards the root node. Successive parents aggregate the result so that eventually the root node can compute the global result. Such queries may help to monitor the capacity and health of the overlay itself.",
      "ja": "例えば、最小値、最大値、カウント、合計、平均（5.4）のような集約クエリを考えます。配布ツリーのルートノードは、クエリ[322]をマルチキャストするかもしれません。リーフノードはルートノードに向けた地元の結果を返します。最終的にはルートノードがグローバルな結果を計算できるように、連続した両親は、結果を集約します。このようなクエリは、オーバーレイ自体の容量と健全性を監視するのを助けることができます。"
    },
    {
      "indent": 3,
      "text": "Why bother with structured overlays for multicasting? In Section 2.1, we saw that Gnutella can multicast complex queries without them [4]. Castro, et al. posed the question, \"Should we build Gnutella on a structured overlay?\" [259]. While acknowledging that their study was preliminary, they did conclude that \"we see no reason to build Gnutella on top of an unstructured overlay\" [259]. The supposedly high maintenance costs of structured overlays were outweighed by query cost savings. The structured overlay ensured that nodes were only visited once during a complex query. It also helped to accurately limit the total number of nodes visited. Pai, et al. acknowledged that multicast trees based on structured overlays contribute to simple routing rules, low delay and low delay variation [323]. However, they opted for unstructured, gossip-based multicasting for reliability reasons: data loss near the tree root affects all subtended nodes; interior node failures must be repaired quickly; interior nodes are obliged to disseminate more than their fair share of traffic, giving leaf nodes a \"free ride\". The most promising research direction is to improve on the Bimodal Multicasting approach [324]. It combines the bandwidth efficiency and low latency of structured, best-effort multicasting trees with the reliability of unstructured gossip protocols.",
      "ja": "なぜマルチキャスティングのための構造化オーバーレイでわざわざ？ 2.1節では、我々は、グヌーテラ[4]それらなしで複雑なクエリをマルチキャストできることがわかりました。カストロら。 「我々は構造化オーバーレイでグヌーテラを作成すべきでしょうか？」、疑問を提起[259]。彼らの研究は予備的だったことを認めている間、彼らは[259]「私たちは非構造化オーバーレイの上にグヌーテラを構築する理由を見ていない」と結論付けました。構造化オーバレイのおそらく高いメンテナンスコストは、クエリのコスト削減を上回るました。構造化オーバーレイノードだけ複雑なクエリの間に一度訪問したことを確実にしました。また、正確に訪問したノードの合計数を制限するのに役立ちました。 PAIら。 [323]構造化オーバーレイに基づくマルチキャストツリーは、単純なルーティングルール、低遅延及び低遅延変動に寄与することを認めました。しかし、彼らは信頼性の理由のために構造化されていない、ゴシップベースのマルチキャスティングのために選んだ：ツリーのルートに近いデータの損失は、すべての範囲が定められたノードに影響します。内部ノードの障害を迅速に修復する必要があります。内部ノードはリーフノードに「ただ乗り」を与えて、トラフィックの公正な取り分より多くを広めることが義務付けられています。最も有望な研究の方向は、バイモーダルマルチキャストアプローチ[324]に改善することです。これは、帯域幅の効率化および非構造化ゴシッププロトコルの信頼性を持つ構造、ベストエフォート型マルチキャストツリーの低レイテンシーを兼ね備えています。"
    },
    {
      "indent": 0,
      "text": "3.4.3. Design Issues",
      "section_title": true,
      "ja": "3.4.3。設計上の問題"
    },
    {
      "indent": 3,
      "text": "None of the early structured overlay multicast designs addressed all of the following issues [325]:",
      "ja": "初期の構造化オーバーレイマルチキャストのデザインはどれも、次の問題[325]のすべてに対処していません。"
    },
    {
      "indent": 3,
      "text": "1) Heterogeneous Node Capacity. Nodes differ in their processing, memory, and network capacity. Multicast throughput is largely determined by the node with smallest throughput [325]. To limit the multicasting load on a node, one might cap its out-degree. If the same node receives further join requests, it refers them to its children (\"pushdown\") [240]. Bharambe, et al. explored several pushdown strategies but found them inadequate to deal with heterogeneity [326]. They concluded that the heterogeneity issue remains open, and should be addressed before deploying DHTs for high-bandwidth multicasting applications. Independently, Zhang et al. partially tackled heterogeneity by allowing nodes in their CAM-Chord and CAM-Koorde designs to vary out-degree according to the node's capacity [325]. However, they made no mention of the \"pushdown\" issue -- they did not describe topology maintenance when the out-degree limit is reached.",
      "ja": "1）異種ノード容量。ノードはその処理、メモリ、およびネットワーク容量が異なります。マルチキャストスループットを大幅に最小スループット[325]とノードによって決定されます。ノード上のマルチキャストの負荷を制限するためには、そのうち-度をキャップすることがあります。同じノードがさらに参加要求を受信した場合、それは[240]（「プッシュダウン」）その子にそれらを参照します。 Bharambeら。いくつかのプッシュダウン戦略を探ったが異質[326]に対処するために、それらが不十分で発見しました。彼らは異質の問題が開いたまま、高帯域幅のマルチキャストアプリケーションのためのDHTを展開する前に対処すべきであると結論付けました。独立して、Zhangら。部分的に、ノードの容量[325]に従って度変化させるために、それらのCAM-コード及びCAM-Koorde設計内のノードを可能にすることによって、不均一に取り組みました。しかし、彼らは「プッシュダウン」問題の言及をしなかった - アウト度の制限に達したとき、彼らはトポロジーのメンテナンスについて説明していませんでした。"
    },
    {
      "indent": 3,
      "text": "2) Reliability (Dynamic Membership). If a multicast tree is to be resilient, it must survive dynamic membership. There are several ways to deal with dynamic membership: ensure that the root node of the multicasting tree does not handle all requests to join or leave the multicast group [242]; use multiple interior-node-disjoint trees to avoid single points of failure in tree structures [322]; and split the root node into several replicas and partition members across them [241]. For example, Bayeux requires the root node to track all group membership changes whereas Scribe does not [241]. CAN-multicast uses a single, well-known host to bootstrap the join operations [320]. The earliest DHT-based broadcasting work by El-Ansary, et al. did not address the issue of dynamic membership [321]. Ghodsi, et al. addressed it in a subsequent paper, though, giving two broadcast algorithms that accommodate routing table inconsistencies [327]. One algorithm achieves a more optimal multicasting network at the expense of greater correction overhead. Splitstream, based on Scribe and Pastry, redundantly striped content across multiple interior-node-disjoint multicast trees -- if one interior node fails, then only one stripe is lost [240].",
      "ja": "2）信頼性（ダイナミックメンバーシップ）。マルチキャストツリーは弾力があるのであれば、それは動的なメンバーシップを生き残る必要があります。ダイナミック会員に対処する方法はいくつかあります。マルチキャストツリーのルートノードは、マルチキャストグループに参加したり、残してすべての要求を処理しないことを保証する[242]。ツリー構造の[322]単一障害点を回避するために、複数の内部ノードディスジョイントツリーを使用します。それら[241]を横切っていくつかのレプリカと仕切り部材にルートノードを分割します。例えば、バイユースクライブが[241]しないのに対し、すべてのグループメンバーシップの変更を追跡するために、ルートノードを必要とします。 CAN-マルチキャスト参加操作[320]をブートストラップするために単一の、よく知られたホストを使用します。エル・Ansaryらによって早いDHTベースの放送作品。 [321]ダイナミック会員の問題に対応していませんでした。 Ghodsiら。ルーティングテーブルの不整合を収容2つの放送アルゴリズム[327]を与える、しかし、後続紙でそれを対処。一つのアルゴリズムは、より大きな補正オーバーヘッドを犠牲にして、より最適なマルチキャストネットワークを実現します。スクライブとペストリー、複数の内部ノードディスジョイントマルチキャストツリーを横切る重複ストライプ内容に基づいSplitstream、 - つの内部ノードに障害が発生した場合、1つだけのストライプが失われた[240]。"
    },
    {
      "indent": 3,
      "text": "3) Large Any-Source Multicast Groups. Any group member should be allowed to send multicast messages. The group should scale to a very large number of hosts. CAN-based multicast was the first application-level multicast scheme to scale to groups of several thousands of nodes without restricting the service model to a single source [320]. Bayeux scales to large groups but has a single root node for each multicast group. It supports the any-source model only by having the root node operate as a reflector for multiple senders [242].",
      "ja": "3）大どれ-ソースマルチキャストグループ。任意のグループのメンバーは、マルチキャストメッセージを送信することを許可する必要があります。グループは、ホストの非常に大きな数に拡大すべきです。 CANベースのマルチキャストは、単一のソース（320）にサービスモデルを制限することなく、ノードの数千の​​グループに拡張する最初のアプリケーションレベルマルチキャスト方式でした。バイユーは、大規模なグループにスケールが、各マルチキャストグループのための単一のルートノードを有しています。それだけで複数の送信者[242]のための反射器として動作するルート・ノードを有することによって、任意のソースモデルをサポートします。"
    },
    {
      "indent": 0,
      "text": "3.5. Routing Geometries",
      "section_title": true,
      "ja": "3.5。ルーティングジオメトリ"
    },
    {
      "indent": 3,
      "text": "In Sections 3.5.1 to 3.5.6, we introduce the main geometries for simple key lookup and survey their robustness mechanisms.",
      "ja": "3.5.1 3.5.6へのセクションでは、我々は簡単なキーのルックアップのための主なジオメトリを紹介し、その堅牢性のメカニズムを調査します。"
    },
    {
      "indent": 0,
      "text": "3.5.1. Plaxton Trees (Pastry, Tapestry)",
      "section_title": true,
      "ja": "3.5.1。 Plaxton木（ペストリー、タペストリー）"
    },
    {
      "indent": 3,
      "text": "Work began in March 2000 on a structured, fault-tolerant, wide-area Dynamic Object Location and Routing (DOLR) system called Tapestry [6, 155]. While DHTs fix replica locations, a DOLR API enables applications to control object placement [31]. Tapestry's basic location and routing scheme follows Plaxton, Rajaraman, and Richa (PRR) [30], but it remedies PRR's robustness shortcomings described in Section 3.1. Whereas each object has one root node in PRR, Tapestry uses several to avoid a single point of failure. Unlike PRR, it allows nodes to be inserted and deleted. Whereas PRR required a total ordering of nodes, Tapestry uses 'surrogate routing' to incrementally choose root nodes. The PRR algorithm does not address congestion, but Tapestry can put object copies close to nodes generating high query loads. PRR nodes only know of the nearest replica, whereas Tapestry nodes enable selection from a set of replicas (for example, to retrieve the most up to date). To detect routing faults, Tapestry uses TCP timeouts and UDP heartbeats for detection, sequential secondary neighbours for rerouting, and a 'second chance' window so that recovery can occur without the overhead of a full node insertion. Tapestry's dependability has been measured on a testbed of about 100 machines and on simulations of about 1000 nodes. Successful routing rates and maintenance bandwidths were measured during instantaneous failures and ongoing churn [31].",
      "ja": "仕事は構造化された、フォールトトレラント、広域ダイナミックオブジェクトの場所やタペストリー[6、155]と呼ばれるルーティング（DOLR）システム上で2000年3月に始まりました。 DHTは、レプリカの位置を固定しつつ、DOLR APIは、オブジェクトの配置[31]を制御するためのアプリケーションを可能にします。タペストリーの基本的な位置及びルーティング方式がPlaxton、Rajaraman共著、およびRicha（PRR）[30]以下、それ救済PRRのロバスト性の欠点は、セクション3.1で説明します。各オブジェクトは、PRRに1つのルートノードを有しているのに対し、タペストリーは、単一障害点を回避するために、いくつかの使用します。 PRRとは異なり、ノードを挿入、削除されることを可能にします。 PRRは、ノードの全順序を必要なのに対し、Tapestryはインクリメンタルルートノードを選択する「代理ルーティング」を使用しています。 PRRアルゴリズムは混雑に対応していませんが、タペストリーは、高いクエリの負荷を生成するノードに近いオブジェクトのコピーを置くことができます。タペストリーノードはレプリカのセットからの選択を可能にするのに対し、PRRノードのみが、最寄りのレプリカを知っている（例えば、最も最新で取得します）。その回復が完全なノード挿入のオーバーヘッドなしに発生する可能性がありますので、配線の故障を検出するために、タペストリーは、再ルーティングのための検出、シーケンシャル二隣人、および「第二のチャンス」のウィンドウのためのTCPのタイムアウトとUDPハートビートを使用しています。タペストリーの信頼性は、約100機のテストベッド上と約1000ノードのシミュレーションに測定されています。成功したルーティング・レート及び維持帯域幅を瞬時障害および進行中の解約[31]中に測定しました。"
    },
    {
      "indent": 3,
      "text": "Pastry, like Tapestry, uses Plaxton-like prefix routing [2]. As in Tapestry, Pastry nodes maintain O(log n) neighbours and route to a target in O(log n) hops. Pastry differs from Tapestry only in the method by which it handles network locality and replication [2]. Each Pastry node maintains a 'leaf set' and a 'routing table'. The leaf set contains l/2 node IDs on either side of the local node ID in the node ID space. The routing table, in row r, column c, points to the node ID with the same r-digit prefix as the local node, but with an r+1 digit of c. A Pastry node periodically probes leaf set and routing table nodes, with periodicity of Tls and Trt and a timeout Tout. Mahajan, Castry, et al. analyzed the reliability versus maintenance cost trade-offs in terms of the parameters l, Tls, Trt, and Tout [328]. They concluded that earlier concerns about excessive maintenance cost in a churning P2P network were unfounded, but suggested follow-up work for a wider range of reliability targets, maintenance costs, and probe periods. Rhea Geels, et al. concluded that existing DHTs fail at high churn rates [329]. Building on a Pastry implementation from Rice University, they found that most lookups fail to complete when there is excessive churn. They conjectured that short-lived nodes often leave the network with lookups that have not yet timed out, but no evidence was provided to confirm the theory. They identified three design issues that affect DHT performance under churn: reactive versus periodic recovery of peers; lookup timeouts; and choice of nearby neighbours. Since reactive recovery was found to add traffic to already congested links, the authors used periodic recovery in their design. For lookup timeouts, they advocated an exponentially weighted moving average of each neighbour's response time, over alternative fixed timeout or 'virtual coordinate' schemes. For selection of nearby neighbours, they found that 'global sampling' was more effective than simply sampling a 'neighbour's neighbours' or 'inverse neighbours'. Castro, Costa, et al. have refuted the suggestion that DHTs cannot cope with high churn rates [330]. By implementing methods for continuous detection and repair, their MSPastry implementation achieved shorter routing paths and a maintenance overhead of less than half a message per second per node.",
      "ja": "ペストリーは、タペストリーのように、Plaxton状プレフィックスルーティングを使用する[2]。タペストリーのように、ペストリーノードは、ホップ（ログn）Oで標的にO（ログn）隣人とルートを維持します。菓子は、それがネットワークの局所性および複製を処理する方法[2]にタペストリーは異なります。各ペストリーノードは「リーフセット」と「ルーティングテーブル」を維持します。リーフセットは、ノードID空間内のローカルノードのIDのいずれかの側にL / 2ノードIDを含んでいます。ルーティングテーブルは、行r、列cに、ローカルノードと同じR-桁のプレフィックスを持つノードIDを指すが、CのR + 1桁を有します。ペストリーノードは、定期的にTLSとはTrtの周期とタイムアウトToutを用いて、リーフセットとルーティングテーブルノードをプローブ。マハジャン、Castryら。パラメータL、TLS、Trtの、及びToutと[328]の点で、メンテナンスコストのトレードオフに対する信頼性を分析しました。彼らは、かき回すP2Pネットワークにおける過度の維持費について以前の懸念は根拠のないと結論したが、信頼性の目標、メンテナンスコスト、およびプローブ期間の広い範囲のためのフォローアップ作業を示唆しました。レアGeels、ら。既存のDHTが高い解約率[329]で失敗すると結論づけました。ライス大学から洋菓子の実装を踏まえ、彼らはほとんどの検索が過度に解約があった場合に完了しないことがわかりました。彼らは短命ノードは、多くの場合、まだタイムアウトしていないが、証拠は理論を確認するために提供されていない検索でネットワークを離れると推測しました。彼らは、チャーンの下でDHTのパフォーマンスに影響を与える3つの設計上の問題識別：ピアの定期的な回復に対する反応性を、ルックアップタイムアウト。そして、近くの隣人の選択。反応性の回復がトラフィックにすでに混雑リンクを追加することがわかったので、著者は、その設計に定期的に回復を使用しました。ルックアップタイムアウトのために、彼らは代わりの固定タイムアウトまたは「仮想」座標体系の上に、各近隣の応答時間の指数加重移動平均を提唱しました。近くの隣人の選択のために、彼らは「世界的なサンプリング」は単に「隣人の隣人」または「逆隣人」をサンプリングよりも有効であったことがわかりました。カストロ、コスタら。 DHTが高い解約率[330]に対応できない提案を反論しています。連続的な検出および修復するための方法を実装することによって、それらのMSPastry実装は、より短いルーティングパス及びノードあたり毎秒半分未満メッセージのメンテナンスオーバーヘッドを達成しました。"
    },
    {
      "indent": 3,
      "text": "There have been more recent proposals based on these early Plaxton-like schemes. Kademlia uses a bit-wise exclusive or (XOR) metric for the 'distance' between 160-bit node identifiers [45]. Each node keeps a list of contact nodes for each section of the node space that is between 2^i and 2^(i+1) from itself (0.i<160). Longer-lived nodes are deliberately given preference on this list -- it has been found in Gnutella that the longer a node has been active, the more likely it is to remain active. Like Kademlia, Willow uses the XOR metric [32]. It implements a Tree Maintenance Protocol to 'zipper' together broken segments of a tree. Where other schemes use DHT routing to inefficiently add new peers, Willow can merge disjoint or broken trees in O(log n) parallel operations.",
      "ja": "これらの初期Plaxtonのようなスキームに基づいて、より最近の提案がなされています。 Kademliaの160ビットのノード識別子[45]との間の「距離」のために、ビット単位の排他的論理和（XOR）メトリックを使用します。各ノードは、自身から2 ^ iと2 ^（i + 1）の間にあるノードの空間の各セクション（0.i <160）のためのコンタクトノードのリストを保持します。長い寿命のノードが故意にこのリスト上の優先順位を与えられている - 長いが、ノードが活動している、より多くの可能性が高いそれはアクティブのままであることをグヌーテラで発見されています。 Kademliaのように、ウィローは、[32] XORメトリックを使用します。これは、ツリーの「ジッパー」一緒に壊れたセグメントにツリーのメンテナンスプロトコルを実装しています。他の方式は非効率的に新しいピアを追加するDHTルーティングを使用する場合、ウィローはO（ログn）並列操作でばらばら又は破壊ツリーをマージすることができます。"
    },
    {
      "indent": 0,
      "text": "3.5.2. Rings (Chord, DKS)",
      "section_title": true,
      "ja": "3.5.2。リング（和音、DKS）"
    },
    {
      "indent": 3,
      "text": "Chord is the prototypical DHT ring, so we first sketch its operation. Chord maps nodes and keys to an identifier ring [7, 34]. Chord supports one main operation: find a node with the given key. It uses Consistent Hashing (Section 3.1) to minimize disruption of keys when nodes join and leave the network. However, Chord peers need only track O(log n) other peers, not all peers as in the original consistent hashing proposal [49]. It enables concurrent node insertions and deletions, improving on PRR. Compared to Pastry, it has a simpler join protocol. Each Chord peer tracks its predecessor, a list of successors, and a finger table. Using the finger table, each hop is at least half the remaining distance around the ring to the target node, giving an average lookup hop count of (1/2)log n(base 2). Each Chord node runs a periodic stabilization routine that updates predecessor and successor pointers to cater to newly added nodes. All successors of a given node need to fail for the ring to fail. Although a node departure could be treated the same as a failure, a departing Chord node first notifies the predecessor and successors, so as to improve performance.",
      "ja": "和音は、プロトタイプのDHTリングであるので、我々は最初にその動作をスケッチ。コードは、識別子リングにノード及びキーをマッピング[7、34]。指定したキーを持つノードを検索：コードは、一つのメインの操作をサポートしています。これは、ノードが参加し、ネットワークを離れるときに、キーの混乱を最小限にするために一貫性のあるハッシュ（3.1節）を使用しています。しかし、コード・ピアはO（Nログ）他のピアではなく、元の一貫したハッシング提案のように、すべてのピア[49]を追跡するだけでよいです。これは、PRRに改善し、同時ノードの挿入および欠失を可能にします。ペストリーと比較すると、それは単純に参加プロトコルを持っています。それぞれのコード・ピアは、その前任者、後継者のリスト、およびフィンガーテーブルを追跡します。フィンガーテーブルを用いて、各ホップは、（ベース2）Nログ（1/2）の平均ルックアップホップカウントを与え、ターゲットノードにリングの周りに少なくとも半分の残りの距離です。各コードノードは、新しく追加されたノードに対応するために先行および後続ポインタを更新周期安定化ルーチンを実行します。リングが失敗するために与えられたノードのすべての後継者は失敗する必要があります。ノード逸脱が障害と同じように扱うことができるが、性能を向上させるために、逸脱コードノードは最初、先行および後継者に通知します。"
    },
    {
      "indent": 3,
      "text": "In their definitive paper, Chord's inventors critiqued its dependability under churn [34]. They provided proofs on the behaviour of the Chord network when nodes in a stable network fail, stressing that such proofs are inadequate in the general case of a perpetually churning network. An earlier paper had posed the question, \"For lookups to be successful during churn, how regularly do the Chord stabilization routines need to run?\" [331]. Stoica, Morris, et al. modeled a range of node join/departure rates and stabilization periods for a Chord network of 1000 nodes. They measured the number of timeouts (caused by a finger pointing to a departed node) and lookup failures (caused by nodes that temporarily point to the wrong successor during churn). They also modeled the 'lookup stretch', the ratio of the Chord lookup time to optimal lookup time on the underlying network. They demonstrated the latency advantage of recursive lookups over iterative lookups, but there remains room for delay reduction. For further work, the authors proposed to improve resilience to network partitions, using a small set of known nodes or 'remembered' random nodes. To reduce the number of messages per lookup, they suggested an increase in the size of each step around the ring, accomplished via a larger number of fingers at each node. Much of the paper assumed independent, equally likely node failures. Analysis of correlated node failures, caused by massive site or backbone failures, will be more important in some deployments. The paper did not attempt to recommend a fixed optimal stabilization rate. Liben-Nowell, Balakrishnan, et al. had suggested that optimum stabilization rate might evolve according to measurements of peers' behaviour [331] -- such a mechanism has yet to be devised.",
      "ja": "彼らの決定的な論文では、和音の発明者は、解約[34]の下でその信頼性を批判しました。彼らは、そのような証拠は永久かき回すネットワークの一般的な場合には不十分であることを強調し、安定したネットワーク内のノードが失敗コード・ネットワークの動作に証拠を提供しました。以前の紙は、疑問を提起していた「解約時に成功するためのルックアップのために、どのように行う定期的にコードの安定化ルーチンを実行する必要がありますか？」 [331]。 Stoicaの、モリスら。 1000個のノードのコードネットワークのノードの参加/離脱速度と安定化期間の範囲をモデル化しました。彼らは、（一時的に解約時に間違った後継者を指すノードによって引き起こされる）（出発ノードを指し示すフィンガーによって引き起こされる）タイムアウトの数とルックアップの失敗を測定しました。彼らはまた、基盤となるネットワーク上の最適な検索時間に「ルックアップストレッチ」、和音の検索時間の比率をモデル化しました。彼らは、反復検索を超える再帰的な検索の待ち時間の利点を実証しますが、遅延低減の余地が残されています。さらなる作業のために、著者らは、既知のノードまたは「思い出した」ランダムノードの小さなセットを使用して、ネットワークパーティションの回復力を向上させるために提案しました。ルックアップあたりのメッセージの数を減らすために、彼らは、各ノードにおける指の多数を介して達成リングの周りに各ステップのサイズの増加を示唆しました。紙の多くは独立して、均等に可能性の高いノード障害を仮定しました。大規模なサイトやバックボーンの障害によって引き起こされる相関ノードの障害の分析は、いくつかの展開でより重要になります。紙は、固定され、最適な安定化率をお勧めしようとしませんでした。リベニ-Nowell、バラクリシュナン、ら。最適な安定化速度がピアの挙動の測定値に応じて進化するかもしれないことを示唆していた[331]  - そのようなメカニズムはまだ考案されなければなりません。"
    },
    {
      "indent": 3,
      "text": "Alima, El-Ansary, et al. considered the communication costs of Chord's stabilization routines, referred to as 'active correction', to be excessive [332]. Two other robustness issues also motivated their Distributed K-ary Search (DKS) design, which is similar to Chord. Firstly, the total system should evolve for an optimum balance between the number of peers, the lookup hop count, and the size of the routing table. Secondly, lookups should be reliable -- P2P algorithms should be able to guarantee a successful lookup for key/value pairs that have been inserted into the system. A similar lookup-correctness issue was raised elsewhere by one of Chord's authors; \"Is it possible to augment the data structure to work even when nodes (and their associated finger lists) just disappear?\" [333] Alima, El-Ansary, et al. asserted that P2Ps using active correction, like Chord, Pastry, and Tapestry, are unable to give such a guarantee. They propose an alternate 'correction-on-use' scheme, whereby expired routing entries are corrected by information piggybacking lookups and insertions. A prerequisite is that lookup and insertion rates are significantly higher than node arrival, departure, and failure rates. Correct lookups are guaranteed in the presence of simultaneous node arrivals or up to f concurrent node departures, where f is configurable.",
      "ja": "アリマ、エルAnsary、ら。コードの安定化ルーチンの通信コストを検討し、[332]過大であることを、「アクティブ補正」と呼ばれます。他の二つの堅牢性の問題もコードに似ている彼らの分散K-aryの検索（DKS）のデザインを、動機。まず、システム全体は、ピアの数、ルックアップ・ホップカウント、およびルーティングテーブルのサイズとの間の最適なバランスのために進化するべきです。第二に、ルックアップは信頼できるものでなければならない -  P2Pアルゴリズムは、システムに挿入されているキー/値ペアのために成功したルックアップを保証することができるはずです。同様のルックアップ正しさの問題は、コードの著者の一人で他の場所で育てられました。 「それは、ノード（およびそれに関連する指のリストが）ちょうど消えた場合でも動作するようにデータ構造を補強することは可能ですか？」 [333]アリマ、エルAnsary、ら。和音、ペストリー、およびタペストリーのように、アクティブな補正を使用してP2Psは、そのような保証を与えることができないと主張しました。彼らは、期限切れのルーティングエントリが情報ピギーバック検索および挿入することによって補正される代替「補正オン使用」方式を提案します。前提条件は、検索と挿入率はノード到着、出発、および故障率よりも有意に高いことです。正しい検索が同時ノード到着の存在下で、またはfが設定可能であるF同時ノード離脱、まで保証されています。"
    },
    {
      "indent": 0,
      "text": "3.5.3. Tori (CAN)",
      "section_title": true,
      "ja": "3.5.3。トーリ（CAN）"
    },
    {
      "indent": 3,
      "text": "Ratnasamy, Francis, et al. developed the Content-Addressable Network (CAN), another early DHT widely referenced alongside Tapestry, Pastry, and Chord [8, 334]. It is arranged as a virtual d-dimensional Cartesian coordinate space on a d-torus. Each node is responsible for a zone in this coordinate space. The designers used a heuristic thought to be important for large, churning P2P networks: keep the number of neighbours independent of system size. Consequently, its design differs significantly from Pastry, Tapestry, and Chord. Whereas they have O(log n) neighbours per node and O(log n) hops per lookup, CAN has O(d) neighbours and O(dn^(1/d)) hop count. When CAN's system-wide parameter d is set to log(n), CAN converges to their profile. If the number of nodes grows, a major rearrangement of the CAN network may be required [151]. The CAN designers considered building on PRR, but opted for the simple, low-state-per-node CAN algorithm instead. They had reasoned that a PRR-based design would not perform well under churn, given node departures and arrivals would affect a logarithmic number of nodes [8].",
      "ja": "Ratnasamy、フランシスら。連想ネットワーク（CAN）、広くタペストリー、ペストリー、およびコード[8、334]と一緒に参照別の早いDHTを開発しました。これは、D-トーラス上の仮想d次元デカルト座標空間として配置されています。各ノードは、この座標空間のゾーンを担当しています。設計者は、P2Pネットワークをかき回す、大型のために重要であると考えられるヒューリスティックを使用します。システムのサイズとは無関係の隣人の数を保ちます。したがって、そのデザインは、ペストリー、タペストリー、およびコードとは大きく異なります。彼らはO（n個のログ）ノードとOあたりの隣人は、（n個のログを記録）、ルックアップごとにホップ持っているのに対し、CANはO（d）の隣人やO（DN ^（1 / d））は、ホップ数を持っています。 CANのシステム全体のパラメータdは、（n）をログに記録するように設定されている場合は、自分のプロフィールに収束することができます。ノードの数が増える場合は、CANネットワークの主要な転位は、[151]必要とされ得ます。 CANの設計者は、PRRの建物を検討し、その代わりに、アルゴリズムことができる簡単な、低状態あたりのノードを選択しました。それらはPRRベースの設計は、解約の下でうまく機能しないであろうと推論した、所与のノードの出発と到着ノード[8]の対数の数に影響を与えます。"
    },
    {
      "indent": 3,
      "text": "There have been preliminary assessments of CAN's resilience. When a node leaves the CAN in an orderly fashion, it passes its own Virtual ID (VID), its neighbours' VIDs and IP addresses, and its key/value pairs to a takeover node. If a node leaves abruptly, its neighbours send recovery messages towards the designated takeover node. CAN ensures the recovery messages reach the takeover node, even if nodes die simultaneously, by maintaining a VID chain with Chord's stabilization algorithm. Some initial 'proof of concept' resilience simulations were run using the Network Simulator (NS) [335] for up to a few hundred nodes. Average hop counts and lookup failure probabilities were plotted against the total number of nodes for various node failure rates [8]. The CAN team documented several open research questions pertaining to state/hop count trade-offs, resilience, load, locality, and heterogeneous peers [44, 334].",
      "ja": "CANの回復力の予備的な評価が行われています。ノードが整然とCANを離れたとき、それは自身のバーチャルID（VID）、その隣人のVIDとIPアドレス、および買収ノ​​ードへのキー/値のペアを渡します。ノードが突然離れた場合、その隣人は、指定された買収ノードに向けて回復メッセージを送信します。コードの安定化アルゴリズムとVIDチェーンを維持することによって、ノードは、同時に死ぬ場合でも、メッセージは買収ノードに到達回復を確実にすることができます。反発シミュレーションいくつかの初期の「概念実証」は最大数百のノードのネットワークシミュレータ（NS）[335]を使用して実行しました。平均ホップ数とルックアップ故障確率は、様々なノード故障率[8]のためのノードの合計数に対してプロットしました。 CANチームは状態/ホップ数のトレードオフ、回復力、負荷、地域、および異種ピア[44、334]に関連するいくつかのオープンな研究の質問に文書化。"
    },
    {
      "indent": 0,
      "text": "3.5.4. Butterflies (Viceroy)",
      "section_title": true,
      "ja": "3.5.4。蝶（総督）"
    },
    {
      "indent": 3,
      "text": "Viceroy approximates a butterfly network [46]. It generally has constant degree like CAN. Like Chord, Tapestry, and Pastry, it has logarithmic diameter. It improves on these systems, inasmuch as its diameter is better than CAN and its degree is better than Chord, Tapestry, and Pastry. As with most DHTs, it utilizes Consistent Hashing. When a peer joins the Viceroy network, it takes a random but permanent 'identity' and selects its 'level' within the network. Each peer maintains general ring pointers ('predecessor' and 'successor'), level ring pointers ('nextonlevel' and 'prevonlevel'), and butterfly pointers ('left', 'right', and 'up'). When a peer departs, it normally passes its key pairs to a successor, and notifies other peers to find a replacement peer.",
      "ja": "総督は、バタフライネットワーク[46]を近似します。これは、一般的にCANのような一定の学位を取得しています。和音、タペストリー、およびペストリーのように、それは対数直径を有しています。それは、その直径がCANよりも優れているし、その程度は和音、タペストリー、そして洋菓子よりも優れている限り、これらのシステムを改良します。ほとんどのDHTと同様に、一貫性のハッシュを利用しています。ピアが総督のネットワークに参加すると、それはランダムしかし永久的な「アイデンティティ」を受け取り、ネットワーク内での「レベル」を選択します。各ピアは、一般的なリングポインタ（「前任者」と「後継者」）、レベルリングポインタ（「nextonlevel」と「prevonlevel」）、及びバタフライ・ポインタ（「左」、「右」、および「アップ」）を維持します。ピアが出発するとき、それは通常、後継者にその鍵ペアを通過して、交換用のピアを見つけるために、他のピアに通知します。"
    },
    {
      "indent": 3,
      "text": "The Viceroy paper scoped out the issue of robustness. It explicitly assumed that peers do not fail [46]. It assumed that join and leave operations do not overlap, so as to avoid the complication of concurrency mechanisms like locking. Kaashoek and Karger were somewhat critical of Viceroy's complexity [37]. They also pointed to its fault-tolerance blind spot. Li and Plaxton suggested that such constant-degree algorithms deserve further consideration [47]. They offered several pros and cons. The limited degree may increase the risk of a network partition, or inhibit use of local neighbours (for the simple reason that there are less of them). On the other hand, it may be easier to reason about the correctness of fixed-degree networks. One of the Viceroy authors has since proposed constant-degree peers in a two-tier, locality-aware DHT [310] -- the lower degree maintained by each lower-tier peer purportedly improves network adaptability. Another Viceroy author has since explored an alternative bounded-degree graph for P2P, namely the de Bruijn graph [336].",
      "ja": "ヴァイスロイ・ペーパーは、堅牢性の問題をスコープ。これは、明示的にピアが[46]失敗しないことを想定しました。これは、ロックのような並行処理機構の複雑化を避けるようにその参加し去る操作は、重複していないと仮定する。 Kaashoekとカーガーは、[37]総督の複雑さのやや批判的でした。彼らはまた、そのフォールトトレランス盲点を指摘しました。 LiとPlaxtonは、一定程度のアルゴリズムがさらに考慮[47]値することを示唆しました。彼らはいくつかの長所と短所を提供しました。限られた程度は、ネットワークパーティションのリスクを増加させる、または（それらのあまりがあるという単純な理由のために）地元の隣人の使用を阻害することができます。一方、固定度ネットワークの正しさを推論する方が簡単かもしれません。ヴィセロイ著者の1つは、2つの層、局所性認識DHT [310]で提案されているので、一定度のピアを有し、 - 各下位階層ピアによって維持低い程度では称するところによれば、ネットワークの適応性を向上させることができます。別のヴィセロイ作成者は以降P2Pための代替的な境界度のグラフ、すなわちデBruijnグラフグラフ[336]を探索しました。"
    },
    {
      "indent": 0,
      "text": "3.5.5. de Bruijn (D2B, Koorde, Distance Halving, ODRI)",
      "section_title": true,
      "ja": "3.5.5。デBruijnグラフ（D2B、和音、距離半減、Odri）"
    },
    {
      "indent": 3,
      "text": "De Bruijn graphs have had numerous refinements since their inception [337, 338]. Schlumberger was the first to use them for networking [339]. Two research teams independently devised the 'generalized' de Bruijn graph that accommodates a flexible number of nodes in the system [340, 341]. Rowley and Bose studied fault-tolerant rings overlaid on the de Bruijn graph [342]. Lee, Liu, et al. devised a two-level de Bruijn hierarchy, whereby clusters of local nodes are interconnected by a second-tier ring [343].",
      "ja": "デBruijnグラフのグラフは、その発端[337、338]以来、数多くの改良がありました。シュルンベルジェは、[339]ネットワーキングのためにそれらを使用した最初の。 2つの研究チームは、独立して、システム内のノードの柔軟番号[340、341]を収容「一般」化de Bruijnグラフを考案しました。ローリーとボーズデBruijnグラフグラフ[342]に重ねフォールトトレラントリングを検討しました。リー、劉、ら。 [343]ローカルノードのクラスタが第二層リングによって相互接続されることにより、二レベル・ドBruijnグラフ階層を考案しました。"
    },
    {
      "indent": 3,
      "text": "Many of the algorithms discussed previously are 'greedy' in that each time a query is forwarded, it moves closer to the destination. Unfortunately, greedy algorithms are generally suboptimal -- for a given degree, the routing distance is longer than necessary [344]. Unlike these earlier P2P designs, de Bruijn graphs of degree k achieve an asymptotically optimal diameter log n, where n is the number of nodes in the system and k can be varied to improve resilience. If there are O(log n) neighbours per node, the de Bruijn hop count is O(log n/log log n). To illustrate de Bruijn's practical advantage, consider a network with one million nodes of degree 20: Chord has a diameter of 20, while de Bruijn has a diameter of 5 [36]. In 2003, there were a quick succession of de Bruijn proposals -- D2B [345], Koorde [37], Distance Halving [132, 336], and the Optimal Diameter Routing Infrastructure (ODRI) [36].",
      "ja": "クエリが転送されるたびに、それは先に近づいていることを前に述べたアルゴリズムの多くは、「貪欲」です。残念ながら、貪欲法は、一般的に準最適である - 所与の程度について、ルーティング距離が必要以上に長くなる[344]。これらの以前のP2P設計とは異なり、次数kのデBruijnグラフグラフは、漸近的に最適な直径のログを達成N、ここでNは、システム及びk内のノードの数は、回復力を改善するために変化させることができるされています。ノードあたりO（ログn）隣人がある場合、デBruijnグラフホップカウントはO（ログN / Nログログ）です。 Bruijnグラフの実用上の利点デ説明するために、20度100万個のノードを有するネットワークを考える：デBruijnグラフは5 [36]の直径を有しているコードは、20の直径を有しています。 D2B [345]の、Koorde [37]、距離半減[132、336]、及び最適な直径ルーティングインフラストラクチャ（ODRI）[36]  -  2003年、デBruijnグラフ提案の立て続けがありました。"
    },
    {
      "indent": 3,
      "text": "Fraigniaud and Gauron began the D2B design by laying out an informal problem statement: keys should be evenly distributed; lookup latency should be small; traffic load should be evenly distributed; updates of routing tables and redistribution of keys should be fast when nodes join or leave the network. They defined a node's \"congestion\" to be the probability that a lookup will traverse it. Apart from its optimal de Bruijn diameter, they highlighted D2B's merits: a constant expected update time when nodes join and leave (O(log n) with high probability (w.h.p.)); the expected node congestion is O((log n)/n) (O(((log n)^2)/n) w.h.p.) [345]. D2B's resilience was discussed only in passing.",
      "ja": "FraigniaudとGauronは非公式の問題文をレイアウトすることにより、D2Bの設計を開始しました：キーが均等に分配されなければなりません。ルックアップの待ち時間は小さいはずです。トラフィック負荷が均等に分散する必要があります。ノードが参加するか、ネットワークを離れるとき、ルーティングテーブルとキーの再分配のアップデートは、高速である必要があります。彼らは、ルックアップは、それを通過する確率であることをノードの「渋滞」を定義しました。別にその最適化de Bruijn直径から、それらは、D2Bの利点を強調：ノードが参加し、（高い確率（w.h.p.）とOを（ログn））のまま一定予想更新時間を、予想されるノードの輻輳がO（（ログn）/ N）（O（（（ログn）^ 2）/ N）w.h.p.）[345]です。 D2Bの回復力は、唯一の通過で説明しました。"
    },
    {
      "indent": 3,
      "text": "Koorde extends Chord to attain the optimal de Bruijn degree/diameter trade-off above [37]. Unlike D2B, Koorde does not constrain the selection of node identifiers. Also unlike D2B, it caters to concurrent joins, by extension of Chord's functionality. Kaashoek and Karger investigated Koorde's resilience to a rather harsh failure scenario: \"in order for a network to stay connected when all nodes fail with probability of 1/2, some nodes must have degree omega(log n)\" [37]. They sketched a mechanism to increase Koorde's degree for this more stringent fault tolerance, losing de Bruijn's constant degree advantage. Similarly, to achieve a constant-factor load balance, Koorde would have to sacrifice its degree optimality. They suggested that the ability to trade the degree, and hence the maintenance overhead, against the expected hop count may be important for churning systems. They also identified an open problem: find a load-balanced, degree optimal DHT. Datta, Girdzijauskas, et al. showed that for arbitrary key distributions, de Bruijn graphs fail to meet the dual goals of load balancing and search efficiency [346]. They posed the question, \"(Is there) a constant routing table sized DHT which meets the conflicting goals of storage load balancing and search efficiency for an arbitrary and changing key distribution?\"",
      "ja": "Koordeは、[37]上記の最適化de Bruijn度/直径のトレードオフを達成するためにコードを拡張します。 D2Bとは違っての、Koordeは、ノード識別子の選択を制約しません。またD2Bとは異なり、それはコードの機能の拡張により、加入併存する食料調達します。 Kaashoekとカーガーはかなり過酷な障害シナリオにKoordeの回復力を調査した：[37]「すべてのノードが1/2の確率で失敗したときに、ネットワークが接続を維持するためには、いくつかのノードは、（n個のログ）度のオメガを持っていなければなりません」。彼らは、デBruijnグラフの一定の程度の優位性を失って、このより厳しいフォールトトレランス用Koordeの度合いを高めるためのメカニズムをスケッチ。同様に、一定の因子負荷バランスを達成するための、Koordeは、その程度の最適性を犠牲にしなければなりません。彼らは、予想されるホップ数に対して、度、ひいてはメンテナンスのオーバーヘッドを取引する能力は、システムをかき回すために重要であり得ることを示唆しました。彼らはまた、オープンな問題を識別：負荷バランス、学位最適なDHTを見つけます。ダッタ、Girdzijauskasら。 [346]任意のキー配布のために、デBruijnグラフのグラフは、負荷分散の二重の目標を達成し、効率を検索するために失敗したことを示しました。彼らは、「ストレージの負荷分散の相反する目標を満たしており、任意と変更鍵配布のための効率化を検索する一定のルーティングテーブルサイズのDHT（あり）？」、疑問を提起しました"
    },
    {
      "indent": 3,
      "text": "Distance Halving was also inspired by de Bruijn [336] and shares its optimal diameter. Naor and Wieder argued for a two-step \"continuous-discrete\" approach for its design. The correctness of its algorithms is proven in a continuous setting. The algorithms are then mapped to a discrete space. The source x and target y are points on the continuous interval [0,1). Data items are hashed to this same interval. <str> is a string that determines how messages leave any point on the ring: if bit t of the string is 0, the left leg is taken; if it is 1, the right leg is taken. <str> increases by one bit each hop, giving a sequence by which to step around the ring. A lookup has two phases. In the first, the lookup message containing the source, target, and the random string hops toward the midpoint of the source and target. On each hop, the distance between <str>(x) and <str>(y) is halved, by virtue of the specific 'left' and 'right' functions. In the second phase, the message steps 'backward' from the midpoint to the target, removing the last bit in <str> at each hop. 'Join' and 'leave' algorithms were outlined but there was no consideration of recovery times or message load on churn. Using the Distance Halving properties, the authors devised a caching scheme to relieve congestion in a large P2P network. They have also modified the algorithm to be more robust in the presence of random faults [132].",
      "ja": "距離半減もデBruijnグラフ[336]に触発され、その最適な直径を共有しました。 NaorとWIEDERは、その設計のための二段階「連続離散」のアプローチを主張しました。そのアルゴリズムの正しさは、連続的な設定で証明されています。アルゴリズムはその後、離散空間にマッピングされます。ソースXおよびYを標的連続区間[0,1）上の点です。データ項目は、この同じ間隔にハッシュされます。 <STR>は、メッセージがリング上の任意の点を残す方法を決定する文字列です：文字列のビットtが0であれば、左脚が取られます。それが1であれば、右足が取られています。 <STR>リングの周りのステップにしてシーケンスを与え、1ビット各ホップを増加させます。ルックアップは2つのフェーズを有しています。最初に、ソース、ターゲット、およびランダムな文字列を含むルックアップ・メッセージは、ソースとターゲットの中心点に向かってホップ。各ホップで、<STR>（x）及び<STR>（Y）との間の距離は、特定のおかげで、半分に「左」と「右」機能。第二フェーズでは、メッセージ手順「後方」中点からターゲットに、各ホップで<STR>の最後のビットを除去します。 「参加」と「休暇」のアルゴリズムを概説されたが、解約の回復時間やメッセージの負荷は考慮はありませんでした。距離半減プロパティを使用して、著者は、大規模なP2Pネットワークの輻輳を軽減するために、キャッシング・スキームを考案しました。彼らはまた、ランダム故障[132]の存在下でより堅牢であることが、アルゴリズムを変更しました。"
    },
    {
      "indent": 3,
      "text": "Solid comparisons of DHT resilience are scarce, but Loguinov, Kumar, et al. give just that in their ODRI paper [36]. They compare Chord, CAN, and de Bruijn in terms of routing performance, graph expansion and clustering. At the outset, they give the optimal diameter (the maximum hop count between any two nodes in the graph) and average hop count for graphs of fixed degree. De Bruijn graphs converge to both optima, and outperform Chord and CAN on both counts. These optima impact both delay and aggregate lookup load. They present two clustering measures (edge expansion and node expansion), which are interesting for resilience. Unfortunately, after decades of de Bruijn research, they have no exact solution. De Bruijn was shown to be superior in terms of path overlap - \"de Bruijn automatically selects backup paths that do not overlap with the best shortest path or with each other\" [36].",
      "ja": "DHT弾性の固体比較はLoguinov、クマーら不足しているが、。そのODRI論文[36]でちょうどそれを与えます。彼らは、性能、グラフの拡大とクラスタリングルーティングの観点から、コードを比較することができ、及びデBruijnグラフ。最初に、彼らは、固定度のグラフの最適な直径（グラフ中の任意の2つのノード間の最大ホップ数）と平均ホップカウントを与えます。デBruijnグラフのグラフは、両方のカウントに両方の最適に収束し、コードをアウトパフォームすることができます。これらの最適条件は、遅延や集約ルックアップ負荷の両方に影響を与えます。それらは反発のための興味深い二つクラスタリング測定（エッジ膨張及びノード展開）を、提示します。残念ながら、デBruijnグラフ研究の数十年後、彼らは厳密解を持っていません。デBruijnグラフは、パスオーバーラップの点で優れていることが示された - 「脱Bruijnグラフを自動的に最適最短経路又は重ならない予備パスを選択する」[36]。"
    },
    {
      "indent": 0,
      "text": "3.5.6. Skip Graphs",
      "section_title": true,
      "ja": "3.5.6。グラフをスキップ"
    },
    {
      "indent": 3,
      "text": "Skip Graphs have been pursued by two research camps [38, 41]. They augment the earlier Skip Lists [347, 348]. Unlike earlier balanced trees, the Skip List is probabilistic -- its insert and delete operations do not require tree rearrangements and so are faster by a constant factor. The Skip List consists of layers of ordered linked lists. All nodes participate in the bottom layer 0 list. Some of these nodes participate in the layer 1 list with some fixed probability. A subset of layer 1 nodes participate in the layer 2 list, and so on. A lookup can proceed quickly through the list by traversing the sparse upper layers until it is close to, or at, the target. Unfortunately, nodes in the upper layers of a Skip List are potential hot spots and single points of failure. Unlike Skip Lists, Skip Graphs provide multiple lists at each level for redundancy, and every node participates in one of the lists at each level.",
      "ja": "スキップグラフは、2つの研究キャンプ[38、41]によって追求されてきました。彼らは、以前のスキップリスト[347、348]を強化します。以前のバランスの取れた木とは違って、スキップリストは確率的である - その挿入や削除の操作は、ツリーの再構成を必要としそう速く一定の係数だけですしないでください。スキップリストは、注文したリンクリストの層で構成されています。すべてのノードが最下層0リストに参加しています。これらのノードのいくつかは、いくつかの固定確率でレイヤ1のリストに参加しています。層のサブセットは、1つのノードがそうでレイヤ2のリストに参加し、そして。ルックアップは、それがターゲットに近い、またはになるまで、まばらな上位層を通過することにより、リストを速やかに進行することができます。残念ながら、スキップリストの上位層のノードは、潜在的なホットスポット及び単一障害点です。スキップリストとは異なり、スキップグラフは、冗長性のために、各レベルで複数のリストを提供し、すべてのノードが各レベルでリストのいずれかに関与します。"
    },
    {
      "indent": 3,
      "text": "Each node in a Skip Graph has theta(log n) neighbours on average, like some of the preceding DHTs. The Skip Graph's primary edge over the DHTs is its support for prefix and proximity search. DHTs hash objects to a random point in the graph. Consequently, they give no guarantees over where the data is stored. Nor do they guarantee that the path to the data will stay within the one administration as far as possible [38]. Skip graphs, on the other hand, provide for location-sensitive name searches. For example, to find the document docname on the node user.company.com, the Skip Graph might step through its ordered lists for the prefix com.company.user [38]. Alternatively, to find an object with a numeric identifier, an algorithm might search the lowest layer of the Skip Graph for the first digit, the next layer for the next digit, in the same vein until all digits are resolved. Being ordered, Skip Graphs also facilitate range searches. In each of these examples, the Skip Graph can be arranged such that the path to the target, as far as possible, stays within an administrative boundary. If one administration is detached from the rest of the Skip Graph, routing can continue within each of the partitions. Mechanisms have been devised to merge disconnected segments [157], though at this stage, segments are re-merged one at a time. A parallel merge algorithm has been flagged for future work.",
      "ja": "スキップグラフの各ノードは、前のDHTsの一部のように、平均シータ（ログn）隣人を有します。 DHTスキップグラフのプライマリエッジは、接頭辞と近接検索のサポートです。グラフ内のランダム点へのDHTハッシュオブジェクト。その結果、彼らはデータが格納されている場所の上に保証を与えません。また彼らは、データへのパスは限り[38]可能な限り1つの政権内にとどまることを保証します。一方、グラフをスキップし、位置に敏感な名前検索を提供します。例えば、ノードuser.company.com上のドキュメントDOCNAMEを見つけるために、スキップグラフは、プレフィックスcom.company.user [38]のためにその注文リストをステップ実行することがあります。また、数値識別子を持つオブジェクトを検索し、最初の数字のためにスキップグラフの最下層を検索するかもしれないアルゴリズムは、次の桁のための次の層は、同じ静脈内のすべての桁が解決されるまで。注文され、スキップグラフはまた、範囲検索を容易にします。これらの例の各々において、スキップグラフは、ターゲットへのパスが、可能な限り、行政境界内に留まるように配置することができます。 1回の投与でスキップグラフの残りの部分から切り離されている場合、ルーティングは、各パーティション内続けることができます。機構は、この段階では、セグメントは、一度に1つの再併合されるが、切断されたセグメント[157]をマージするために考案されてきました。並列マージアルゴリズムは、将来の仕事のためにフラグが付けられています。"
    },
    {
      "indent": 3,
      "text": "The advantages of Skip Graphs come at a cost. To be able to provide range queries and data placement flexibility, Skip Graph nodes require many more pointers than their DHT counterparts. An increased number of pointers implies increased maintenance traffic. Another shortcoming of at least one of the early proposals was that no algorithm was given to assign keys to machines. Consequently, there are no guarantees on system-wide load balancing or on the distance between adjacent keys [100]. Aspnes, Kirsch, et al. have recently devised a scheme to reduce the inter-machine pointer count from O(mlogm), where m is the number of data elements, to O(nlog n), where n is the number of nodes [100]. They proposed a two-layer scheme -- one layer for the Skip Graph itself and the second 'bucket layer'. Each machine is responsible for a number of buckets and each bucket elects a representative key. Nodes locally adjust their load. They accept additional keys if they are below their threshold or disperse keys to nearby nodes if they are above threshold. There appear to be numerous open issues: simulations have been done but analysis is outstanding; mechanisms are required to handle the arrival and departure of nodes; there were only brief hints as to how to handle nodes with different capacities.",
      "ja": "スキップグラフの利点はコストで来ます。範囲クエリとデータ配置の柔軟性を提供できるようにするために、スキップグラフのノードはDHTの対応よりも多くのポインタが必要です。ポインタの増加数が増加保守トラフィックを意味します。初期の提案の少なくとも一つの他の欠点は、何のアルゴリズムがマシンにキーを割り当てるために与えられなかったということでした。これにより、システム全体の負荷バランシングの又は隣接するキー[100]との間の距離に保証はありません。 Aspnes、キルシュ、ら。最近、mは、nがノード[100]の数であり、O（nlog n）は、に、データ要素の数であり、O（mlogm）から相互マシンポインタカウントを低減する方式を考案しました。 1つのスキップグラフ自体の層と2番目の「バケツ層」 - 彼らは、二層スキームを提案しました。各マシンはバケット数を担当し、各バケットは、代表キーを選出します。ノードはローカルに自分の負荷を調整します。彼らは彼らのしきい値を下回っているか、彼らが閾値を超えている場合は近くのノードに鍵を分散させるなら、彼らは追加のキーを受け入れます。数多くの未解決の問題があるように思われる：シミュレーションが行われているが、解析が顕著です。メカニズムは、ノードの到着と出発を処理するために必要とされています。容量の異なるノードを処理する方法にとしてだけの簡単なヒントがありました。"
    },
    {
      "indent": 0,
      "text": "4. Semantic Index",
      "section_title": true,
      "ja": "4.セマンティックインデックス"
    },
    {
      "indent": 3,
      "text": "Semantic indexes capture object relationships. While the semantic-free methods (DHTs) have firmer theoretic foundations and guarantee that a key can be found if it exists, they do not capture the relationships between the document name and its content or metadata on their own. Semantic P2P designs do. However, since their design is often driven by heuristics, they may not guarantee that scarce items will be found.",
      "ja": "セマンティックインデックスは、オブジェクトの関係を捉えます。セマンティックフリーメソッド（のDHT）は、より強固な理論的基盤を持っており、キーが存在する場合見つけることができることを保証しながら、彼らは自分のドキュメント名とその内容やメタデータ間の関係をキャプチャしません。セマンティックP2P設計が行います。彼らのデザインは、多くの場合、ヒューリスティックによって駆動されるためしかし、彼らは希少なアイテムが発見されることを保証するものではないことがあります。"
    },
    {
      "indent": 3,
      "text": "So what might the semantically indexed P2Ps add to an already crowded field of distributed information architectures? At one extreme, there are the distributed relational database management systems (RDBMSs), with their strong consistency guarantees [284]. They provide strong data independence, the flexibility of SQL queries, and strong transactional semantics -- Atomicity, Consistency, Isolation and Durability (ACID) [349]. They guarantee that the query response is complete -- all matching results are returned. The price is performance. They scale to perhaps 1000 nodes, as evidenced in Mariposa [350, 351], or require query caching front ends to constrain the load [284]. Database research has \"arguably been cornered into traditional, high-end, transactional applications\" [72]. Then there are distributed file systems, like the Network File System (NFS) or the Serverless Network File Systems (xFS), with little data independence, low-level file retrieval interfaces, and varied consistency [284]. Today's eclectic mix of Content Distribution Networks (CDNs) generally deload primary servers by redirecting Web requests to a nearby replica. Some intercept the HTTP requests at the DNS level and then use consistent hashing to find a replica [23]. Since this same consistent hashing was a forerunner to the DHT approaches above, CDNs are generally constrained to the same simple key lookups.",
      "ja": "だから、意味的にインデックスさP2Psは、分散情報アーキテクチャの既に混雑したフィールドに何を追加するのでしょうか？極端一方に、それらの強い整合性保証[284]と分散リレーショナル・データベース管理システム（RDBMS）は、存在します。原子性、一貫性、独立性および耐久性（ACID）[349]  - 彼らは強いデータ独立、SQLクエリの柔軟性、そして強力なトランザクション・セマンティクスを提供しています。彼らは、クエリの応答が完了していることを保証する - 一致するすべての結果が返されます。価格はパフォーマンスです。彼らはマリポーサ[350、351]で証明されるように、おそらく千のノードまで拡張、またはクエリキャッシュフロントロード[284]を制約するために終了する必要があります。データベースの研究は、[72]「間違いなく、伝統的な、ハイエンド、トランザクションのアプリケーションに追い詰められて」います。次に、ネットワークファイルシステム（NFS）又は少ないデータ独立性、低レベルのファイル検索インタフェースを持つサーバレスネットワークファイルシステム（XFS）、および多様な一貫性[284]のように、ファイルシステムが分散されています。コンテンツ配信ネットワーク（CDNの）今日の折衷的な組み合わせは、一般的に近くのレプリカにWeb要求をリダイレクトすることによって、プライマリサーバをdeload。その後、いくつかの切片DNSレベルでのHTTPリクエストとレプリカを見つけるために、一貫性のあるハッシュを使用して[23]。この同じ一貫したハッシングは、上記DHTアプローチに先駆けたので、のCDNは、一般的に同じ簡単なキー検索に制限されています。"
    },
    {
      "indent": 3,
      "text": "The opportunity for semantically indexed P2Ps, then, is to provide:",
      "ja": "意味的にインデックスさP2Psの機会は、その後、提供することです："
    },
    {
      "indent": 3,
      "text": "a) graduated data independence, consistency, and query flexibility, and",
      "ja": "a）は、データの独立性、一貫性、およびクエリの柔軟性を卒業し、"
    },
    {
      "indent": 3,
      "text": "b) probabilistically complete query responses, across",
      "ja": "b）は確率的に完全なクエリ応答、全体で"
    },
    {
      "indent": 3,
      "text": "c) very large numbers of low-cost, geographically distributed, dynamic nodes.",
      "ja": "C）低コスト、地理的に分散し、動的ノードの非常に大きな数。"
    },
    {
      "indent": 0,
      "text": "4.1. Keyword Lookup",
      "section_title": true,
      "ja": "4.1。キーワード検索"
    },
    {
      "indent": 3,
      "text": "P2P keyword lookup is best understood by considering the structure of the underlying index and the algorithms by which queries are routed over that index. Figure 3 summarizes the following paragraphs by classifying the keyword query algorithms, index structures, and metrics. The research has largely focused on scalability, not dependability. There have been very few studies that quantify the impact of network churn. One exception is the work by Chawathe, et al. on the Gia system [61]. Gia's combination of algorithms from Figure 3 (receiver-based flow control, biased random walk, and one-hop replication) gave 2-4 orders of magnitude improvement in query success rates in churning networks.",
      "ja": "P2Pキーワード検索は最良のクエリはそのインデックスを介してルーティングされることにより、基盤となるインデックスの構造とアルゴリズムを考慮することによって理解されています。図3は、キーワードクエリアルゴリズム、索引構造、およびメトリックを分類することによって、次の段落をまとめたもの。研究は、主に、スケーラビリティ、信頼性ではないに焦点を当てています。ネットワークチャーンの影響を定量化する非常に少数の研究が行われています。一つの例外がらChawathe、作品です。ジアシステム上の[61]。図3（受信機ベースのフロー制御、偏ったランダムウォーク、および1ホップの複製）からのアルゴリズムのジアの組み合わせは、ネットワークをかき回すに、クエリの成功率の大きさの改善の2-4の受注を与えました。"
    },
    {
      "indent": 3,
      "text": "QUERY Query routing Flooding: Peers only index local files so queries must propagate widely [4] Policy-based: Choice of the next hop node: random; most/least recently used; most files shared; most results [265, 352] Random walks: Parallel [67] or biased random walks [61, 66] Query forwarding Iterative: Nodes perform iterative unicast searches of ultrapeers, until the desired number of results is achieved. See Gnutella UDP Extension for Scalable Searches (GUESS) [265, 353] Recursive Query flow control Receiver-controlled: Receivers grant query tokens to senders, so as to avoid overload [61] Reactive: sender throttles queries when it notices receivers are discarding packets [61, 66] Dynamic Time To Live: In the Dynamic Query Protocol, the sender adjusts the time-to-live on each iteration based on the number of results received, the number of connections left, and the number of nodes already theoretically reached by the search [354]",
      "ja": "QUERYクエリルーティング洪水：ピアインデックスのみローカルファイルのクエリが広く[4]ポリシーベース伝搬しなければならないので：次ホップノードの選択：ランダム。最も/最低使用。ほとんどのファイル共有しました。ほとんどの結果[265、352]ランダムウォーク：クエリ反復を転送する[67]又は偏ったランダムウォーク[61、66]パラレル：結果の所望の数が達成されるまで、ノードは、ウルトラの反復ユニキャスト検索を行います。スケーラブルな検索のグヌーテラUDP拡張（GUESS）を参照[265、353]再帰クエリフロー制御受信制御：送信者にレシーバ許可クエリトークン、過負荷を回避するように[61]反応：それは受信機がパケットを廃棄している気づいたときに、送信者は、クエリを絞ります[61、66]動的時間が生きるために：動的クエリプロトコルでは、送信者は受信結果の数、左の接続数に基づいて、各反復で生存時間を調整し、ノードの数はすでに理論的に到達検索によって[354]"
    },
    {
      "indent": 3,
      "text": "INDEX Distribution Compression: Leaf nodes periodically send ultrapeers compressed query routing tables, as in the Query Routing Protocol [260] One hop replication: Nodes maintain an index of content on their nearest neighbors [61, 352] Partitioning By document [210] By keyword: Use an inverted list to find a matching document, either locally or at another peer [21]. Partition by keyword sets [355] By document and keyword: Also called Multi-Level Partitioning [21]",
      "ja": "屈折率分布圧縮：キーワードにより文書[210]でのノードが最近傍のコンテンツのインデックスを維持する[61、352]パーティショニング：葉は、定期的クエリルーティングプロトコル[260]一のホップ複製のように、ウルトラに圧縮問合せルーティングテーブルを送信ノード：ローカルまたは別のピア[21]において、マッチング文書を見つけるために、反転リストを使用。文書やキーワードでキーワードセット[355]によってパーティション：マルチレベルとも呼ばれるパーティショニング[21]"
    },
    {
      "indent": 3,
      "text": "METRIC Query load: Queries per second per node/link [65, 265] Degree: The number of links per node [66, 352]. Early P2P networks approximated power-law networks, where the number of nodes with L links is proportional to L^(-k), where k is a constant [65] Query delay: Reported in terms of time and hop count [61, 66] Query success rate: The \"Collapse Point\" is the per-node query rate at which the query success rate drops below 90% [61]. See also [61, 265, 352].",
      "ja": "METRICクエリ負荷：ノード/リンクあたり毎秒クエリ[65、265]度：ノードごとのリンクの数[66、352]。時間及びホップ数の観点で報告している[61、66  - （k）は、kは定数[65]クエリ遅延であり、Lリンクとノードの数はL ^に比例する初期のP2Pネットワークは、べき乗則ネットワークを近似しました]クエリ成功率：「崩壊点」クエリ成功率が90％を下回った時にノードごとの照会率である[61]。 [61、265、352]も参照。"
    },
    {
      "indent": 18,
      "text": "Figure 3: Keyword Lookup in P2P Systems",
      "ja": "図3：P2Pシステムにおけるキーワード検索"
    },
    {
      "indent": 0,
      "text": "4.1.1. Gnutella Enhancements",
      "section_title": true,
      "ja": "4.1.1。グヌーテラの機能強化"
    },
    {
      "indent": 3,
      "text": "Perhaps the most widely referenced P2P system for simple keyword match is Gnutella [4]. Gnutella queries contain a string of keywords. Gnutella peers answer when they have files whose names contain all the keywords. As discussed in Section 2.1, early versions of Gnutella did not forward the document index. Queries were flooded and peers searched their own local indexes for filename matches. An early review highlighted numerous areas for improvement [65]. It was estimated that the query traffic alone from 50,000 early-generation Gnutella nodes would amount to 1.7% of the total U.S. Internet backbone traffic at December 2000 levels. It was speculated that high-degree Gnutella nodes would impede dependability. An unnecessarily high percentage of Gnutella traffic crossed Autonomous System (AS) boundaries -- a locality mechanism may have found suitable nearby peers.",
      "ja": "おそらく、単純なキーワードマッチのために最も広く参照さP2Pシステムはグヌーテラである[4]。グヌーテラクエリは、キーワードの文字列が含まれています。彼らは名前がすべてのキーワードを含むファイルを持っているときグヌーテラピアが答えます。 2.1節で述べたように、グヌーテラの初期のバージョンでは、ドキュメントのインデックスを転送しませんでした。クエリが浸水し、ピアは、ファイル名の一致のために、独自のローカル索引を検索しました。早期審査は改善[65]のための多数の領域を強調しました。それは、一人で50,000早期世代のグヌーテラノードからのクエリトラフィックは2000年12月のレベルで、総米国のインターネットバックボーントラフィックの1.7％に達するだろうと推定されました。これは、高度のグヌーテラノードが信頼性を妨げることが推測されました。グヌーテラトラフィックの不必要に高い割合は、自律システム（AS）の境界を越えて - 地域メカニズムは、適切な近くのピアを発見したことがあります。"
    },
    {
      "indent": 3,
      "text": "Fortunately, there have since been numerous enhancements within the Gnutella Developer Forum. At the time of writing, it has been reported that Gnutella has almost 350,000 unique hosts, of which nearly 90,000 accept incoming connections [356]. One of the main improvements is that an index of filename keywords, called the Query Routing Table (QRT), can now be forwarded from 'leaf peers' to its 'ultrapeers' [260]. Ultrapeers can then ensure that the leaves only receive queries for which they have a match, dramatically reducing the query traffic at the leaves. Ultrapeers can have connections to many leaf nodes (~10-100) and a small number of other ultrapeers (<10) [260]. Originally, a leaf node's QRT was not forwarded by the parent ultrapeer to other ultrapeers. More recently, there has been a proposal to distribute aggregated QRTs amongst ultrapeers [357]. To further limit traffic, QRTs are compressed by hashing, according to the Query Routing Protocol (QRP) specification [281]. This same specification claims QRP may reduce Gnutella traffic by orders of magnitude, but cautions that simulation is required before mass deployment. A known shortcoming of QRP was that the extent of query propagation was independent of the popularity of the search terms. The Dynamic Query Protocol addressed this [358]. It required leaf nodes to send single queries to high-degree ultrapeers that adjust the queries' time-to-live (TTL) bounds according to the number of received query results. An earlier proposal, called the Gnutella UDP Extension for Scalable Searches (GUESS) [353], similarly aimed to reduce the number of queries for widely distributed files. GUESS reuses the non-forwarding idea (Section 2). A GUESS peer repeatedly queries single ultrapeers with a TTL of 1, with a small timeout on each query to limit load. It chooses the number of iterations and selects ultrapeers so as to satisfy its search needs. For adaptability, a small number of experimental Gnutella nodes have implemented eXtensible Markup Language (XML) schemas for richer queries [359, 360]. None of the above Gnutella proposals explicitly assess robustness.",
      "ja": "幸い、以来、グヌーテラデベロッパ・フォーラム内の多数の機能強化が行われています。執筆の時点では、グヌーテラはほぼ90,000着信接続[356]を受け入れているのはほとんど35万ユニークなホストを、持っていることが報告されています。主な改良点の一つは、クエリのルーティングテーブル（QRT）と呼ばれるファイル名キーワードのインデックスは、現在、「ウルトラ」[260]に「リーフピア」から転送することができることです。ウルトラピアは、葉が唯一の劇的葉でクエリトラフィックを軽減、彼らは試合を持っているクエリを受け取ることを保証することができます。ウルトラは、多くのリーフノード（〜10-100）および他のウルトラ少数（<10）[260]への接続を有することができます。もともと、リーフノードのQRTは、他のウルトラに親ultrapeerによって転送されませんでした。より最近では、ウルトラ[357]の間で凝集QRTsを分配する提案がなされています。さらに制限トラフィックに、QRTsは、クエリルーティングプロトコル（QRP）仕様[281]によれば、ハッシュすることによって圧縮されます。これと同じ仕様では、QRPは桁違いにグヌーテラトラフィックを減らすことができると主張しますが、シミュレーションが大規模展開する前に必要であることを警告しています。 QRPの既知の欠点は、クエリの伝播の程度は検索語の人気とは無関係であったということでした。動的なクエリプロトコルは[358]これを取り上げました。それは、受信されたクエリ結果の数に応じてクエリ生存時間（TTL）境界を調整する高度のウルトラに単一のクエリを送信するリーフノードを必要としました。以前の提案は、同様に広く分布しているファイルのためのクエリの数を削減することを目的とした、[353]スケーラブル検索（GUESS）のためにグヌーテラUDP拡張と呼ばれます。 GUESSは非転送考え方（第2節）を再利用します。 GUESSピア繰り返し負荷を制限するために、各クエリに小さなタイムアウトで、1のTTLと共に単一ウルトラに問い合わせます。これは、反復回数を選択し、その検索のニーズを満たすようにウルトラを選択します。適応性のために、実験グヌーテラノードの数が少ない豊かなクエリの拡張マークアップ言語（XML）スキーマを[359、360]を実装しています。上記グヌーテラ提案のいずれも、明示的に堅牢性を評価しません。"
    },
    {
      "indent": 3,
      "text": "The broader research community has recently been leveraging aspects of the Gnutella design. Lv, Ratnasamy, et al. exposed one assumption implicit in some of the early DHT work -- that designs \"such as Gnutella are inherently not scalable, and therefore should be abandoned\" [66]. They argued that by making better use of the more powerful peers, Gnutella's scalability issues could be alleviated. Instead of its flooding mechanism, they used random walks. Their preliminary design to bias random walks towards high capacity nodes did not go as far as the ultrapeer proposals in that the indexes did not move to the high-capacity nodes. Chawathe, Ratnasamy, et al. chose to extend the Gnutella design with their Gia system, in response to the perceived shortcomings of DHTs in Section 1.2 [61]. Compared to the early Gnutella designs, they incorporated several novel features. They devise a topology adaptation algorithm so that most peers are attached to high-degree peers. They use a random walk search algorithm, in lieu of flooding, and bias the query load towards higher-degree peers. For 'one-hop replication', they require all nodes to keep pointers to content on adjacent peers. To implement a receiver-controlled token-based flow control, a peer must have a token from its neighbouring peer before it sends a query to it. Chawathe, Ratnasamy, et al. show by simulations that the combination of these features provides a scalability improvement of three to five orders of magnitude over Gnutella \"while retaining significant robustness\". The main robustness metrics they used were the 'collapse point' query rate (the per-node query rate at which the successful query rate falls below 90%) and the average hop count immediately prior to collapse. Their comparison with Gnutella did not take into account the Gnutella enhancements above -- this was left as future work. Castro, Costa, and Rowstron argued that if Gnutella were built on top of a structured overlay, then both the query and overlay maintenance traffic could be reduced [259]. Yang, Vinograd, et al. explore various policies for peer selection in the GUESS protocol, since the issue is left open in the original proposal [265]. For example, the peer initiating the query could choose peers that have been \"most recently used\" or that have the \"most files shared\". Various policy pitfalls are identified. For example, good peers could be overloaded, victims of their own success. Alternatively, malicious peers could encourage the querying peer to try inactive peers. They conclude that a \"most results\" policy gives the best balance of robustness and efficiency. Like Castro, Costa, and Rowstron, they concentrated on the static network scenario. Cholvi, Felber, et al. very briefly describe how similar \"least recently used\" and \"most often used\" heuristics can be used by a peer to select peer 'acquaintances' [352]. They were motivated by the",
      "ja": "より広範な研究コミュニティは、最近グヌーテラデザインの側面を活用されています。 LV、Ratnasamyら。初期のDHTの作品のいくつかの内の1つの仮定の暗黙的な暴露 - デザイン「などグヌーテラなどは本質的にスケーラブルではありませんので、放棄されるべきである」という[66]。彼らはより強力なピアをより良く利用することによって、グヌーテラのスケーラビリティの問題を軽減することができることを主張しました。代わりに、その氾濫機構から、彼らはランダムウォークを使用しました。大容量ノードがインデックスは、大容量のノードに移動しなかったことでultrapeer提案限り行かなかった方に、ランダムなバイアスに彼らの予備設計を歩きます。 Chawathe、Ratnasamyら。第1.2節でのDHTの知覚欠点[61]に応答して、それらのジアシステムとグヌーテラ設計を拡張することを選択しました。早期グヌーテラの設計に比べて、彼らはいくつかの新規な特徴を組み込みます。ほとんどのピアが高度のピアに接続されているように、彼らは、トポロジ適応アルゴリズムを考案します。彼らは、洪水、および高次のピアへのバイアスクエリ負荷の代わりに、ランダムウォーク検索アルゴリズムを使用します。 「1ホップの複製」のために、彼らは隣接ピアにコンテンツへのポインタを維持するために、すべてのノードが必要です。それはそれにクエリを送信する前に受信機制御トークンベースのフロー制御を実装するには、ピアは、その隣接ピアからトークンを持っている必要があります。 Chawathe、Ratnasamyら。 「重要な堅牢性を維持しながら、」これらの機能の組み合わせは、グヌーテラを超える大きさの3〜5オーダーのスケーラビリティの向上を提供シミュレーションによって示しました。それらが使用される主なロバスト性メトリックは、崩壊直前に「崩壊点」クエリレート（成功した照会率が90％を下回った時にノードごとのクエリーレート）と平均ホップ数でした。これは、将来の仕事として残された - グヌーテラとの比較はグヌーテラは、上記の機能強化考慮されていませんでした。カストロ、コスタ、およびRowstronはグヌーテラは、構造化オーバーレイの上に構築された場合は、クエリとオーバーレイ保守トラフィックの両方を減少させることができると主張し、[259]。ヤン、Vinogradら。問題は、元の提案[265]で開いたままにしているので、GUESSプロトコルにおけるピア選択のためのさまざまな政策を探ります。たとえば、クエリを開始するピアは、「最近使用」されているか、それは「ほとんどのファイルを共有」しているピアを選択することができます。様々な政策落とし穴が特定されます。例えば、良いピアは、自らの成功の犠牲者を過負荷状態にすることができます。また、悪意のあるピアが非アクティブなピアをしようとする照会ピアを奨励することができます。彼らは、「ほとんどの結果」政策は、堅牢性と効率性の最適なバランスを与えると結論付けています。カストロ、コスタ、およびRowstronのように、彼らは、静的なネットワークシナリオに集中しました。 Cholvi、Felberら。非常に簡単に「最低使用」と「最も頻繁に使用される」ヒューリスティックは、ピアの知人 '[352]を選択するためにピアが使用する方法と同様の説明。彼らはによって動機づけられました"
    },
    {
      "indent": 3,
      "text": "congestion associated with Gnutella's TTL-limited flooding. Recognizing that the busiest peers can quickly become overloaded central hubs for the entire network, they limit the number of acquaintances for any given peer to 25. They sketch a mechanism to decrement a query's TTL multiple times when it traverses \"interested peers\". In summary, these Gnutella-related investigations are characterized by a bias for high-degree peers and very short directed query paths, a disdain for flooding, and concern about excessive load on the 'better' peers. Generally, the robustness analysis for dynamic networks (content updates and node arrivals/departures) remains open.",
      "ja": "グヌーテラのTTL限定の洪水に関連した渋滞。忙しい同僚はすぐにネットワーク全体の中央ハブを過負荷になることができますことを認識し、彼らはそれが「興味ピア」を横断するとき、クエリのTTL複数回デクリメントするメカニズムをスケッチ25に任意のピアの知人の数を制限します。要約すると、これらのグヌーテラ関連の調査は高度ピアと非常に短い向けクエリパスのバイアス、フラッディングのための軽蔑、そして「良好」ピアに過度の負荷が懸念によって特徴付けられます。一般に、動的ネットワークのロバスト性解析は、（コンテンツ更新とノード到着/出発）開いたままです。"
    },
    {
      "indent": 0,
      "text": "4.1.2. Partition-by-Document, Partition-by-Keyword",
      "section_title": true,
      "ja": "4.1.2。パーティションごとのドキュメント、パーティションごとのキーワード"
    },
    {
      "indent": 3,
      "text": "One aspect of P2P keyword search systems has received particular attention: should the index be partitioned by document or by keyword? The issue affects scalability. To be partitioned by document, each node has a local index of documents for which it is responsible. Gnutella is a prime example. Queries are generally flooded in systems partitioned by document. On the other hand, a peer may assume responsibility for a set of keywords. The peer uses an inverted list to find a matching document, either locally or at another peer. If the query contains several keywords, inverted lists may need to be retrieved from several different peers to find the intersection [21]. The initial assessment by Li, Loo, et al. was that the partition-by-document approach was superior [210]. For one scenario of a full-text Web search, they estimated the communications costs to be about six times higher than the feasible budget. However, wanting to exploit prior work on inverted list intersection, they studied the partition-by-keyword strategy. They proposed several optimizations that put the communication costs for a partition-by-keyword system within an order of magnitude of feasibility. There had been a couple of prior papers that suggested partitioned-by-keyword designs incorporate DHTs to map keywords to peers [355, 361]. In Gnawali's Keyword-set Search System (KSS), the index is partitioned by sets of keywords [355]. Terpstra, Behnel, et al. point out that by keeping keyword pairs or triples, the number of lists per document in KSS is squared or tripled [362]. Shi, Guangwen, et al. interpreted the approximations of Li, Loo, et al. to mean that neither approach is feasible on its own [21]. Their Multi-Level Partitioning (MLP) scheme incorporates both partitioning approaches. They arrange nodes into a group hierarchy, with all nodes in the single 'level 0' group, and with the same nodes sub-divided into k logical subgroups on 'level 1'. The subgroups are again divided, level by level, until level l. The inverted index is partitioned by document between groups and by keyword within groups. MLP avoids the query flooding normally associated with systems partitioned by document, since a small number of nodes in each group process the query. It reduces the bandwidth overheads associated with inverted list intersection in systems partitioned solely by keyword, since groups can calculate the intersection independently over the documents for which they are responsible. MLP was overlaid on SkipNet, per Section 3.5.6 [38]. Some initial analyses of communications costs and query latencies were provided.",
      "ja": "P2Pキーワード検索システムの一の態様は、特に注意を受けている：インデックスは、ドキュメントまたはキーワードで仕切らすべきですか？問題は、スケーラビリティに影響を与えます。文書によって仕切られるためには、各ノードは、それが担当するドキュメントのローカル索引を持っています。グヌーテラは一例です。クエリは、一般的に、文書によって仕切らシステムに殺到しています。一方、ピアは、キーワードのセットのために責任をとることができます。ピアは、ローカルまたは他のピアに、マッチング文書を見つけるために、反転リストを使用します。クエリは、いくつかのキーワードが含まれている場合は、反転リストは、[21]の交差点を見つけるために、いくつかの異なるピアから取得する必要があるかもしれません。ら李、ルーによる初期評価。パーティションごとの文書のアプローチは、[210]よりも優れていたということでした。全文ウェブ検索の1つのシナリオのために、彼らは通信コストが実現可能な予算より約6倍高いと推定さ。しかし、反転リストの交差点の前の仕事を活用したい、彼らは、パーティションごとのキーワード戦略を研究しました。彼らは、実現可能性の大きさのオーダー内のパーティションごとのキーワードシステムのための通信コストを置くいくつかの最適化を提案しました。パーティションごとのキーワードのデザインは、ピア[355、361]にキーワードをマップするためのDHTを組み込むことを提案前の論文のカップルがありました。 Gnawaliのキーワード設定検索システム（KSS）では、インデックスは、キーワード[355]のセットによって仕切られています。テルプストラ、Behnelら。キーワードペアまたはトリプルを保つことによって、KSS内の文書ごとのリストの数が二乗されたり[362]三倍と指摘しています。市Guangwenら。らのLi、ルー、の近似を解釈します。どちらのアプローチが[21]、独自に実現可能であることを意味します。彼らのマルチレベル・パーティション（MLP）方式は、両方のパーティションのアプローチを採用しています。彼らは、単一の「レベル0」、グループ内のすべてのノードと、グループ階層にノードを配置し、同じノードで「レベル1」にk個の論理サブグループに細分化。サブグループは、再度Lレベルになるまで、レベルによってレベルに分割されます。転置インデックスは、グループ間やグループ内のキーワードによって文書によって仕切られています。 MLPは、通常、各グループのプロセス内のノードの数が少ないクエリため、ドキュメントによって仕切らシステムに関連するクエリのフラッディングを回避します。グループは、彼らが担当している文書の上に独立して交差点を計算することができますので、それは、単にキーワードで仕切られたシステムで、反転リスト交差点に関連する帯域幅のオーバーヘッドを低減します。 MLPは、セクション3.5.6 [38]ごとに、SkipNetの上に重ねました。通信コストとクエリの待ち時間のいくつかの初期分析が提供されました。"
    },
    {
      "indent": 0,
      "text": "4.1.3. Partial Search, Exhaustive Search",
      "section_title": true,
      "ja": "4.1.3。部分的な検索、徹底的な検索"
    },
    {
      "indent": 3,
      "text": "Much of the research above addresses partial keyword search. Daswani, et al. highlighted the open problem of efficient, comprehensive keyword search [25]. How can exhaustive searches be achieved without flooding queries to every peer in the network? Terpstra, Behnel et al. couched the keyword search problem in rendezvous terms: dynamic keyword queries need to 'meet' with static document lists [362]. Their Bitzipper scheme is partitioned by document. They improved on full flooding by putting document metadata on 2sqrt(n) nodes and forwarding queries through only 6sqrt(n) nodes. They reported that Bitzipper nodes need only 1/166th of the bandwidth of full-flooding Gnutella nodes for an exhaustive search. An initial comparison of query load was given. There was little consideration of either static or dynamic resilience; that is, of nodes failing, of documents continually changing, or of nodes continually joining and leaving the network.",
      "ja": "研究の多くは、上記の部分的なキーワード検索に対応しています。 Daswaniら。効率的、包括的なキーワード検索[25]のオープン問題を強調しました。どのように徹底的な検索は、ネットワーク内のすべてのピアにフラッディングクエリーなしに達成することができますか？テルプストラ、Behnelら。ランデブー用語でキーワード検索の問題を表現さは：動的なキーワードクエリは、静的な文書一覧[362]との「出会い」にする必要があります。彼らBitzipperスキームは、ドキュメントによって仕切られています。彼らは6sqrt（n）はノードを介し2sqrt（n）はノードと転送クエリに文書メタデータを置くことによって、完全なフラッディングに改善しました。彼らはBitzipperノードが徹底的な検索のためのフルフラッディンググヌーテラノードの帯域幅のわずか1 /第166が必要であることを報告しました。クエリ負荷の初期の比較を与えました。静的または動的な回復力をほとんど考慮がありました。それは継続的にネットワークに参加して残して連続的に変化する文書の、またはノードの、失敗したノードで、あります。"
    },
    {
      "indent": 0,
      "text": "4.2. Information Retrieval",
      "section_title": true,
      "ja": "4.2。情報検索"
    },
    {
      "indent": 3,
      "text": "The field of Information Retrieval (IR) has matured considerably since its inception in the 1950s [363]. A taxonomy for IR models has been formalized [262]. It consists of four elements: a representation of documents in a collection; a representation of user queries; a framework describing relationships between document representations and queries; and a ranking function that quantifies an ordering amongst documents for a particular query. Three main issues motivate current IR research -- information relevance, query response time, and user interaction with IR systems. The dominant IR trends for searching large text collections are also threefold [262]. The size of collections is increasing dramatically. More complicated search mechanisms are being found to exploit document structure, to accommodate heterogeneous document collections, and to deal with document errors. Compression is in favour -- it may be quicker to search compact text or retrieve it from external devices. In a distributed IR system, query processing has four parts. Firstly, particular collections are targeted for the search. Secondly, queries are sent to the targeted collections. Queries are then evaluated at the individual collections. Finally, results from the collections are collated.",
      "ja": "情報検索（IR）の分野は、1950 [363]の創業以来、かなり成熟しています。 IRモデルの分類は、形式化されている[262]。これは、4つの要素で構成されています。コレクション内のドキュメントの表現。ユーザクエリの表現。文書表現とクエリとの間の関係を説明するフレームワーク。そして、特定のクエリのための文書の中で順序を定量化し、ランキング機能。 IRシステムと情報の関連性、クエリの応答時間、およびユーザーとの対話 - 三つの主な問題は、現在のIRの研究を動機づける。大きなテキストのコレクションを検索するための主要なIR傾向も3倍されている[262]。コレクションのサイズは劇的に増加しています。より複雑な検索メカニズムは、文書構造を利用するために異種の文書コレクションに対応するために、ドキュメントのエラーに対処することが判明しています。圧縮は賛成である - コンパクトなテキストを検索したり、外部機器からそれを取得するために迅速かもしれません。分散IRシステムでは、クエリ処理は、4つの部分を有しています。まず、特定のコレクションを検索対象としています。第二に、クエリは、ターゲットコレクションに送信されます。その後、問合せは、個々のコレクションで評価されています。最後に、コレクションからの結果が照合されます。"
    },
    {
      "indent": 3,
      "text": "So how do P2P networks differ from distributed IR systems? Bawa, Manku, et al. presented four differences [62]. They suggested that a P2P network is typically larger, with tens or hundreds of thousands of nodes. It is usually more dynamic, with node lifetimes measured in hours. They suggested that a P2P network is usually homogeneous, with a common resource description language. It lacks the centralized \"mediators\" found in many IR systems that assume responsibility for selecting collections, for rewriting queries, and for merging ranked results. These distinctions are generally aligned with the peer characteristics in Section 1. One might add that P2P nodes display more symmetry -- peers are often both information consumers and producers. Daswani, Garcia-Molina, et al. pointed out that, while there are IR techniques for ranked keyword search at moderate scale, research is required so that ranking mechanisms are efficient at the larger scale targeted by P2P designs [25]. Joseph and Hoshiai surveyed several P2P systems using metadata techniques from the IR toolkit [60]. They described an assortment of IR techniques and P2P systems, including various metadata formats, retrieval models, bloom filters, DHTs, and trust issues.",
      "ja": "それでは、どのP2Pネットワークは分散IRシステムと異なっていますか？バワ、Mankuら。 4つの違い[62]を発表しました。彼らは、P2Pネットワークは数十またはノードの数十万人と、一般的に大きいことを示唆しました。それは時間で測定されたノードの寿命と、通常よりダイナミックです。彼らは、P2Pネットワークは、共通のリソース記述言語で、通常は均質であることが示唆されました。これは、コレクションを選択するため、クエリを書き換えるため、とランク付けされた結果をマージするための責任を負う多くのIRシステムに見られる中央集権「メディエーター」を欠いています。これらの区別は、一般的にそのP2Pノードは、より対称性を表示する追加される場合がありますセクション1つでピアの特性に合わせている - ピアが、多くの場合、情報の消費者と生産者の両方です。 Daswani、ガルシア・モリーナら。適度なスケールでランク付けし、キーワード検索のためのIR技術がある一方でランキングメカニズムがP2Pデザイン[25]の対象となる大規模で効率的になるように、研究が必要である、と指摘しました。ジョセフと星合はIRツールキット[60]からメタデータ技術を使用して、いくつかのP2Pシステムを調査しました。彼らは、IR技術とP2Pシステムでは、様々なメタデータフォーマットを含む、検索モデル、ブルームフィルタ、DHTsの、そして信頼の問題の品揃えを説明しました。"
    },
    {
      "indent": 3,
      "text": "In the ensuing paragraphs, we survey P2P work that has incorporated information retrieval models, particularly the Vector Model and the Latent Semantic Indexing Model. We omit the P2P work based on Bayesian models. Some have pointed to such work [60], but made no explicit mention of the model [364]. One early paper on P2P content-based image retrieval also leveraged the Bayesian model [365]. For the former two models, we briefly describe the design, then try to highlight robustness aspects. On robustness, we are again stymied for lack of prior work. Indeed, a search across all proceedings of the Annual ACM Conference on Research and Development in Information Retrieval for the words \"reliable\", \"available\", \"dependable\", or \"adaptable\" did not return any results at the time of writing. In contrast, a standard text on distributed database management systems [366] contains a whole chapter on reliability. IR research concentrates on performance measures. Common performance measures include recall, the fraction of the relevant documents that has been retrieved and precision, the fraction of the retrieved documents that is relevant [262]. Ideally, an IR system would have high recall and high precision. Unfortunately techniques favouring one often disadvantage the other [363].",
      "ja": "その後の段落では、我々は、情報検索モデルを取り入れたP2Pの仕事、特にベクトルモデルおよび潜在的意味インデキシングモデルを調査します。私たちは、ベイズモデルに基づくP2P作業を省略します。いくつかは、そのような仕事[60]を指摘したが、モデル[364]の明示的な言及がなされていません。 P2Pコンテンツベースの画像検索に1つの初期の論文はまた、ベイズモデル[365]を活用しました。前の二つのモデルでは、我々は簡単に設計を記述し、堅牢性の側面を強調してみてください。堅牢で、我々は再び前に仕事の不足のために窮地に立たされています。確かに、言​​葉のための情報検索における研究及び開発に関する年次ACM会議のすべての議事全体の検索は、「信頼性」、「利用可能」「信頼できる」、または「適応」執筆の時点で結果を返しませんでした。対照的に、分散型データベース管理システム上の標準テキスト[366]は、信頼性上の全章を含んでいます。 IRの研究は、パフォーマンス測定に集中します。一般的なパフォーマンス対策がリコール、取得して精度された関連文書の一部、関連する検索されたドキュメントの一部が含まれる[262]。理想的には、IRシステムは、高い再現と高精度を持っているでしょう。残念ながら、技術は1つのしばしば不利その他の[363]を好みます。"
    },
    {
      "indent": 0,
      "text": "4.2.1. Vector Model (PlanetP, FASD, eSearch)",
      "section_title": true,
      "ja": "4.2.1。ベクトルモデル（PlanetP、FASD、eSearch）"
    },
    {
      "indent": 3,
      "text": "The vector model [367] represents both documents and queries as term vectors, where a term could be a word or a phrase. If a document or query has a term, the weight of the corresponding dimension of the vector is non-zero. The similarity of the document and query vectors gives an indication of how well a document matches a particular query.",
      "ja": "ベクトルモデル[367]用語は単語またはフレーズかもしれない用語ベクトル、などの文書とクエリの両方を表します。文書又はクエリが用語を持っている場合、ベクトルの対応する寸法の重量が非ゼロです。文書及びクエリベクトルの類似性は、文書が特定のクエリに一致するどれだけの指標を与えます。"
    },
    {
      "indent": 3,
      "text": "The weighting calculation is critical across the retrieval models. Amongst the numerous proposals for the probabilistic and vector models, there are some commonly recurring weighting factors [363]. One is term frequency. The more a term is repeated in a document, the more important the term is. Another is inverse document frequency. Terms common to many documents give less information about the content of a document. Then there is document length. Larger documents can bias term frequencies, so weightings are sometimes normalized against document length. The expression \"TFIDF weighting\" refers to the collection of weighting calculations that incorporate term frequency and inverse document frequency, not just to one. Two weighting calculations have been particularly dominant -- Okapi [368] and pivoted normalization [369]. A distributed version of Google's Pagerank algorithm has also been devised for a P2P environment [370]. It allows incremental, ongoing Pagerank calculations while documents are inserted and deleted.",
      "ja": "重み付け演算は、検索モデルを横切る重要です。確率とベクトルモデルのための多数の提案の中で、いくつかの一般的に定期的な重み係数は、[363]があります。一つは、用語頻度です。より多くの用語が文書で繰り返される、より重要な用語です。もう一つは、逆文書頻度です。多くの文書に共通する用語は、文書の内容についてはあまり情報を提供します。そして、文書の長さがあります。大規模な文書は、バイアス項の周波数をすることができますので、重み付けは時々、文書の長さに対して正規化されています。表現「TFIDF重みは、」1つだけでなくに、用語頻度と逆文書頻度を組み込んだ重み付け計算の集まりを指します。オカピ[368]と[369]の正規化を回動 - 二つの重み付けの計算が特に支配的でした。 GoogleのPageRankのアルゴリズムの分散型バージョンもP2P環境[370]のために考案されています。文書が挿入され、削除されている間は、増分、現在進行中のPageRankの計算を可能にします。"
    },
    {
      "indent": 3,
      "text": "A couple of early P2P systems leveraged the vector model. Building on the vector model, PlanetP divided the ranking problem into two steps [215]. In the first, peers are ranked for the probability that they have matching documents. In the second, higher-priority peers are contacted and the matching documents are ranked. An Inverse Peer Frequency, analogous to the Inverse Document Frequency, is used to rank relevant peers. To further constrain the query traffic, PlanetP contacts only the first group of m peers to retrieve a relevant set of documents. In this way, it repeatedly contacts groups of m peers until the top k document rankings are stable. While the PlanetP designers first quantified recall and precision, they also considered reliability. Each PlanetP peer has a global index with a list of all other peers, their IP addresses, and their Bloom filters. This large volume of shared information needs to be maintained. Klampanos and Jose saw this as PlanetP's primary shortcoming [371]. Each Bloom filter summarized the set of terms in the local index of each peer. The time to propagate changes, be they new documents or peer arrivals/departures, was studied by simulation for up to 1000 peers. The reported propagation times were in the hundreds of seconds. Design workarounds were required for PlanetP to be viable across slower dial-up modem connections. For future work, the authors were considering some sort of hierarchy to scale to larger numbers of peers.",
      "ja": "初期のP2Pシステムのカップルは、ベクトルモデルを活用しました。ベクトルモデルを踏まえ、PlanetPは、2つのステップ[215]にランク付け問題を分割しました。最初に、ピアは、それらが一致する文書を持っている可能性のためにランク付けされています。第二に、より高い優先度のピアを接触させ、一致する文書がランク付けされます。逆文書頻度に類似した逆ピア頻度は、関連するピアをランク付けするために使用されます。さらにクエリトラフィックを制限するには、PlanetP接点メートルピアの唯一の最初のグループは、文書の関連するセットを取得します。このようにして、繰り返しトップk個の文書のランキングまでのm個のピアのコンタクトグループが安定しています。 PlanetP設計者は最初のリコールと精度を定量化している間、彼らはまた、信頼性を考慮しました。各PlanetPピアは、他のすべてのピアのリスト、それらのIPアドレス、およびそのブルームフィルタを持つグローバルインデックスがあります。共有情報のこの大容量を維持する必要があります。 KlampanosとホセはPlanetPの主な欠点[371]としてこれを見ました。各ブルームフィルタは、各ピアのローカル索引内の用語の集合をまとめました。変更を伝達するための時間は、彼らの新しいドキュメントまたはピア到着/出発は、最大1000のピアのシミュレーションにより検討したこと。報告された伝搬時間は秒数百人にありました。デザインの回避策は低速のダイヤルアップモデム接続全体で実行可能であることをPlanetPのために必要でした。将来の仕事のために、著者は、ピアの多数に拡張する階層のいくつかの並べ替えを検討していました。"
    },
    {
      "indent": 3,
      "text": "A second early system using the vector model is the Fault-tolerant, Adaptive, Scalable Distributed (FASD) search engine [283], which extended the Freenet design (Section 2.3) for richer queries. The original Freenet design could find a document based on a globally unique identifier. Kronfol's design added the ability to search, for example, for documents about \"apples AND oranges NOT bananas\". It uses a TFIDF weighting scheme to build a document's term vector. Each peer calculates the similarity of the query vector and local documents and forwards the query to the best downstream peer. Once the best downstream peer returns a result, the second-best peer is tried, and so on. Simulations with 1000 nodes gave an indication of the query path lengths in various situations -- when routing queries in a network with constant rates of node and document insertion, when bootstrapping the network in a \"worst-case\" ring topology, or when failing randomly and specifically selected peers. Kronfol claimed excellent average-case performance -- less than 20 hops to retrieve the same top n results as a centralized search engine. There were, however, numerous cases where the worst-case path length was several hundred hops in a network of only 1000 nodes.",
      "ja": "ベクトルモデルを使用して第2の初期のシステムは、より豊かなクエリのフリーネットの設計（セクション2.3）拡張フォールトトレラント、アダプティブ、スケーラブルな分散（FASD）検索エンジン[283]です。オリジナルのフリーネットのデザインは、グローバル一意識別子に基づいてドキュメントを見つけることができます。 Kronfolのデザインは、「リンゴとオレンジ、NOTバナナ」に関する文書のために、例えば、検索する機能を追加しました。これは、文書の用語ベクトルを構築するためにTFIDFの重み付け方式を使用しています。各ピアは、クエリベクトルとローカルの文書の類似度を計算し、最高の下流のピアにクエリを転送します。最良下流ピアが結果を返した後、次善のピアように試み、そしてれます。定数ノードの速度と文書挿入してネットワークにクエリをルーティングするとき、「最悪の場合」リングトポロジでネットワークをブートストラップするとき、またはランダムに失敗した場合 -  900のノードとシミュレーションは、様々な状況で長クエリパスの指示を与え特にピアを選択しました。 Kronfolは、優れた平均の場合の性能を主張 -  20の未満ホップ集中型検索エンジンと同じ上位N個の結果を取得します。最悪の場合のパスの長さが唯一の千ノードのネットワークで数百ホップた数多くの例では、しかし、ありました。"
    },
    {
      "indent": 3,
      "text": "In parallel, there have been some P2P designs based on the vector model from the University of Rochester -- pSearch [9, 372] and eSearch [373]. The early pSearch paper suggested a couple of retrieval models, one of which was the Vector Space Model, to search only the nodes likely to have matching documents. To obtain approximate global statistics for the TFIDF calculation, a spanning tree was constructed across a subset of the peers. For the m top terms, the term-to-document index was inserted into a Content-Addressable Network [334]. A variant that mapped terms to document clusters was also suggested. eSearch is a hybrid of the partition-by-document and partition-by-term approaches (Section 4.1.2) eSearch nodes are primarily partitioned by term. Each is responsible for the inverted lists for some top terms. For each document in the inverted list, the node stores the complete term list. To reduce the size of the index, the complete term lists for a document are only kept on nodes that are responsible for top terms in the document. eSearch uses the Okapi term weighting to select top terms. It relies on the Chord DHT [34] to associate terms with nodes storing the inverted lists. It also uses automatic query expansion. This takes the significant terms from the top document matches and automatically adds them to the user's query to find additional relevant documents. The eSearch performance was quantified in terms of search precision, the number of retrieved documents, and various load-balancing metrics. Compared to the more common proposals for partitioning by keywords, eSearch consumed 6.8 times the storage space to achieve faster search times.",
      "ja": "pSearch [9、372]とeSearch [373]  - 並行して、ロチェスター大学からのベクトルモデルに基づいて、いくつかのP2P設計が行われています。早期pSearch紙は、一致する文書を持っている可能性が唯一のノードを検索するために、ベクトル空間モデルだったそのうちの一つ検索モデルのカップルを、示唆しました。 TFIDF計算のためのおおよそのグローバルな統計情報を取得するには、スパニングツリーは、ピアのサブセット間で構築しました。 Mトップ用語については、用語ツー文書インデックスが連想ネットワーク[334]に挿入しました。クラスタを文書化する用語をマッピングされた変異体はまた示唆されました。 eSearchは、パーティションごとに文書及びパーティションごと用語アプローチ（セクション4.1.2）eSearchノードは主に用語によって仕切られているのハイブリッドです。それぞれは、いくつかのトップ用語の反転リストに責任があります。倒立リストの各文書について、ノードは完全な用語リストを格納します。インデックスのサイズを小さくするために、文書の完全な用語リストは、文書内の最上位語を担当しているノード上に保持されています。 eSearchはトップ用語を選択するために、オカピの用語の重みを使用しています。これは、反転リストを格納するノードとタームを関連付けるためにコードDHT [34]に依存しています。また、自動クエリ拡張を使用しています。これは、トップドキュメントマッチから重要な用語を取り、自動的に追加の関連する文書を見つけるために、ユーザーのクエリに追加します。 eSearch性能は、検索精度、検索されたドキュメントの数、および様々なロード・バランシング・メトリックの観点から定量化しました。キーワードによってパーティショニングのための、より一般的な提案と比較すると、eSearchは、より高速な検索時間を達成するために6.8倍のストレージ容量を消費します。"
    },
    {
      "indent": 0,
      "text": "4.2.2. Latent Semantic Indexing (pSearch)",
      "section_title": true,
      "ja": "4.2.2。潜在的意味インデキシング（pSearch）"
    },
    {
      "indent": 3,
      "text": "Another retrieval model used in P2P proposals is Latent Semantic Indexing (LSI) [374]. Its key idea is to map both the document and query vectors to a concept space with lower dimensions. The starting point is a t*N weighting matrix, where t is the total number of indexed terms, N is the total number of documents, and the matrix elements could be TFIDF rankings. Using singular value decomposition, this matrix is reduced to a smaller number of dimensions, while retaining the more significant term-to-document mappings. Baeza-Yates and Ribeiro-Neto suggested that LSI's value is a novel theoretic framework, but that its practical performance advantage for real document collections had yet to be proven [262]. pSearch incorporated LSI [9]. By placing the indices for semantically similar documents close in the network, Tang, Xu, et al. touted significant bandwidth savings relative to the early full-flooding variant of Gnutella [372]. They plotted the number of nodes visited by a query. They also explored the trade-off with accuracy, the percentage match between the documents returned by the distributed pSearch algorithm and those from a centralized LSI baseline. In a more recent update to the pSearch work, Tang, Dwarkadas, et al. summarized LSI's shortcomings [375]. Firstly, for large document collections, its retrieval quality is inherently inferior to Okapi. Secondly, singular value decomposition consumes excessive memory and computation time. Consequently, the authors used Okapi for searching while retaining LSI for indexing. With Okapi, they selected the next node to be searched and selected documents on searched nodes. With LSI, they ensured that similar documents are clustered near each other, thereby optimizing the network search costs. When retrieving a small number of top documents, the precision of LSI+Okapi approached that of Okapi. However, if retrieving a large number of documents, the LSI+Okapi precision is inferior. The authors want to improve this in future work.",
      "ja": "P2P提案に使用される別の検索モデルは、潜在的意味インデキシング（LSI）[374]です。そのキーアイデアは、下寸法の概念空間に文書とクエリベクトルの両方をマッピングすることです。出発点は、tは、インデックス付きの用語の総数であり、T * N個の重み行列であり、Nは、ドキュメントの総数であり、そして行列要素がTFIDFランキングとすることができます。より重要な用語ツー文書のマッピングを保持しながら、特異値分解を用いて、このマトリックスは、寸法の小さい数まで低減されます。バエサ - イェイツと[262]リベイロ・ネトは、LSIの値は、新規の理論的枠組みであることが示唆されたが、実際の文書コレクションのための実用的なパフォーマンス上の利点は、まだ証明されていたこと。 pSearchはLSIに組み込まれた[9]。ネットワーク、唐、徐らに近い意味的に類似した文書のインデックスを確定します。 [372]グヌーテラの早期フル洪水バリアントに対する大幅な帯域幅の節約を売り込みました。彼らは、クエリによって訪れたノードの数をプロットしました。彼らはまた、精度のトレードオフを検討し、分散pSearchアルゴリズムと集中LSIベースラインからのものによって返された文書間のパーセント一致。 pSearch作業、唐、Dwarkadas、らに、より最近のアップデートで。 LSIの短所[375]をまとめました。まず、大規模な文書コレクションのために、その検索品質はオカピに、本質的に劣っています。第二に、特異値分解は、過剰なメモリと計算時間を消費します。その結果、著者は、インデックスのためにLSIを保持したまま検索するためオカピを使用しました。オカピで、彼らは検索と検索ノード上のドキュメントを選択するために次のノードを選択しました。 LSIでは、彼らは同様の文書が、それによってネットワーク探索コストを最適化し、互いの近くにクラスタ化されていることを確実にしました。トップ書類の小さな数を取得する際、LSI +オカピの精度は、オカピのそれに近づきました。しかし、大量の文書を検索した場合、LSI +オカピ精度が劣ります。著者は、今後の作業でこれを改善したいです。"
    },
    {
      "indent": 0,
      "text": "4.2.3. Small Worlds",
      "section_title": true,
      "ja": "4.2.3。小さな世界"
    },
    {
      "indent": 3,
      "text": "The \"small world\" concept originally described how people are interconnected by short chains of acquaintances [376]. Kleinberg was struck by the algorithmic lesson of the small world, namely \"that individuals using local information are collectively very effective at constructing short paths between two points in a social network\" [377]. Small world networks have a small diameter and a large clustering coefficient (a large number of connections amongst relevant nodes) [378].",
      "ja": "「小さな世界」という概念は、もともと[376]人は知人の短い鎖によって相互接続されている方法を説明しました。 Kleinbergは、[377]「ローカル情報を使用して個人がソーシャルネットワーク内の2点間の短いパスの構築を総称して非常に有効であること」、すなわち、小さな世界のアルゴリズムレッスンに打たれました。小さな世界ネットワークは、小さな直径および大きなクラスタリング係数（関連ノード間で多数の接続）[378]を有しています。"
    },
    {
      "indent": 3,
      "text": "The small world idea has had a limited impact on peer-to-peer algorithms. It has influenced only a few unstructured [62, 378-380] and structured [344, 381] algorithms. The most promising work on \"small worlds\" in P2P networks are those concerned with the information retrieval metrics, precision and recall [62, 378, 380].",
      "ja": "小さな世界のアイデアは、ピア・ツー・ピアのアルゴリズムに限定された影響を与えています。これは、ほんの数構造化されていない[62、378から380]と構造[344、381]のアルゴリズムに影響を与えました。 P2Pネットワークにおける「小さな世界」の最も有望な仕事は、情報検索メトリック、精度の関係者とリコール[62、378、380]です。"
    },
    {
      "indent": 0,
      "text": "5. Queries",
      "section_title": true,
      "ja": "5.クエリ"
    },
    {
      "indent": 3,
      "text": "Database research suggests directions for P2P research. Hellerstein observed that, while work on fast P2P indexes is well underway, P2P query optimization remains a promising topic for future research [23]. Kossman reviewed the state of the art of distributed query processing, highlighting areas for future research: simulation and query optimization for networks of tens of thousands of servers and millions of clients; non-relational data types (e.g., XML, text, and images); and partial query responses since on the Internet, \"failure is the rule rather than the exception\" [19]. A primary motivation for the P2P system, PIER, was to scale from the largest database systems of a few hundred nodes to an Internet environment in which there are over 160 million nodes [22]. Litwin and Sahri have also considered ways to combine distributed hashing, more specifically the Scalable Distributed Data Structures, with SQL databases, claiming to be first to implement scalable distributed database partitioning [382]. Motivated by the lack of transparent distribution in current distributed databases, they measure query execution times for Microsoft SQL servers aggregated by means of an SDDS layer. One of their starting assumptions was that it is too challenging to change the SQL query optimizer.",
      "ja": "データベース研究はP2P研究のための方向性を示唆しています。 Hellersteinは、高速のP2Pインデックスに関する作業が順調に進んでいる間、P2Pのクエリの最適化は、将来の研究[23]のための有望な話題のまま、ということを観察しました。 Kossmanは、今後の研究のための領域を強調し、分散クエリ処理の技術の現状をレビュー：クライアントのサーバと何百万もの数万人のネットワークのためのシミュレーションとクエリの最適化を、非リレーショナル・データ・タイプ（例えば、XML、テキスト、画像）。インターネット上から部分的なクエリ応答、[19]「失敗はルールではなく、例外があります」。 P2Pシステムのための主要な動機は、桟橋、百万160以上のノード[22]が存在するインターネット環境に数百ノードの最大データベース・システムから拡張することでした。リトウィンとSahriもスケーラブルな分散データベース・パーティショニング[382]を実装する最初であると主張する、SQLデータベースと、分散ハッシュ、より具体的にスケーラブルな分散データ構造を結合する方法を検討しています。現在の分散データベースにおける透明分布の欠如によって動機づけ、彼らはSDDS層によって集約のMicrosoft SQLサーバのクエリ実行時間を計測します。その出発仮定の一つは、SQLクエリオプティマイザを変更するにはあまりにも困難であるということでした。"
    },
    {
      "indent": 3,
      "text": "Database research also suggests the approach to P2P research. Researchers of database query optimization were divided between those looking for optimal solutions in special cases and those using heuristics to answer all queries [383]. Gribble, et al. cast query optimization in terms of the data placement problem, which is to \"distribute data and work so the full query workload is answered with lowest cost under the existing bandwidth and resource constraints\" [250]. They pointed out that even the static version of this problem is NP-complete in P2P networks. Consequently, research on massive, dynamic P2P networks will likely progress using both strategies of early database research - heuristics and special-case optimizations.",
      "ja": "データベースの研究はまた、P2Pの研究へのアプローチを示唆しています。データベースクエリの最適化の研究者は、特別な場合に最適なソリューションをお探しの方、すべてのクエリに答えるために、ヒューリスティックを使用して、それらの[383]の間で分けました。 Gribbleら。 「データを配布するので、完全なクエリのワークロードは、既存の帯域幅およびリソースの制約の下で、最も低いコストで答えている仕事」にあるデータ配置の問題、という点で、クエリの最適化をキャスト[250]。彼らは、この問題のさえ静的バージョンは、P2PネットワークにおけるNP完全であることを指摘しました。ヒューリスティックと特殊なケースの最適化 - その結果、大規模な、動的なP2Pネットワーク上の研究は、おそらく初期のデータベース研究の両方の戦略を使用して進行します。"
    },
    {
      "indent": 3,
      "text": "If P2P networks are going to be adaptable, if they are to support a wide range of applications, then they need to accommodate many query types [72]. Up to this point, we have reviewed queries for keys (Section 3) and keywords (Sections 4.1. and 4.2). Unfortunately, a major shortcoming of the DHTs in Section 3.5 is that they primarily support exact-match, single-key queries. Skip Graphs support range and prefix queries, but not aggregation queries. Here we probe below the language syntax to identify the open research issues associated with more expressive P2P queries [25]. Triantafillou and Pitoura observed the disparate P2P designs for different types of queries and so outlined a unifying framework [76]. To classify queries, they considered the number of relations (single or multiple), the number of attributes (single or multiple), and the type of query operator. They described numerous operators: equality, range, join, and \"special functions\". The latter referred to aggregation (like sum, count, average, minimum, and maximum), grouping and ordering. The following sections approximately fit their taxonomy -- range queries, multi-attribute queries, join queries and aggregation queries. There has been some initial P2P work on other query types -- continuous queries [20, 22, 73], recursive queries [22, 74], and adaptive queries [23, 75]. For these, we defer to the primary references.",
      "ja": "P2Pネットワークは、彼らがアプリケーションの広い範囲をサポートしている場合は、適応になるだろうしている場合、それらは、多くのクエリの種類[72]に対応する必要があります。これまで、我々は、キー（第3節）とキーワード（セクション4.1。及び4.2）のためのクエリを検討しました。残念ながら、3.5節でのDHTの主要な欠点は、主に、完全一致、単一キーのクエリをサポートしていることです。グラフのサポート範囲とプレフィックスクエリーをスキップしますが、クエリを凝集ありません。ここでは、[25]より表現P2Pクエリに関連付けられているオープンな研究の問題を識別するために、言語構文の下に探ります。 TriantafillouとPitouraクエリの異なる種類の異なるP2Pデザインを観察し、そう統一フレームワーク[76]に概説しました。クエリを分類するために、彼らは、関係（単一または複数）の数、属性（単一または複数）、およびクエリ演算子の種類の数を検討しました。平等、範囲、参加、および「特殊機能」：彼らは、多くの演算子を説明しました。後者は、グループ化の順序、（合計、カウント、平均、最小値、および最大値など）の凝集と呼ばれます。次のセクションでは、約彼らの分類をフィット - レンジクエリ、マルチ属性のクエリは、クエリおよび集計クエリを結合します。連続クエリ[20、22、73]、再帰クエリ[22、74]、および適応クエリ[23、75]  - 他のクエリの種類のいくつかの初期のP2P作業が行われています。これらのために、私たちは、主参照に延期します。"
    },
    {
      "indent": 0,
      "text": "5.1. Range Queries",
      "section_title": true,
      "ja": "5.1。範囲クエリ"
    },
    {
      "indent": 3,
      "text": "The support of efficient range predicates in P2P networks was identified as an important open research issue by Huebsch, et al. [22]. Range partitioning has been important in parallel databases to improve performance, so that a transaction commonly needs data from only one disk or node [22]. One type of range search, longest prefix match, is important because of its prevalence in routing schemes for voice and data networks alike. In other applications, users may pose broad, inexact queries, even though they require only a small number of responses. Consequently, techniques to locate similar ranges are also important [77]. Various proposals for range searches over P2P networks are summarized in Figure 4. Since the Scalable Distributed Data Structure (SDDS) has been an important influence on contemporary Distributed Hash Tables (DHTs) [49-51], we also include ongoing work on SDDS range searches.",
      "ja": "P2Pネットワークにおける効率的な範囲述部のサポートがらHuebschすることにより、重要なオープンな研究課題として同定されました。 [22]。トランザクションは、一般的に一つだけのディスクまたはノードからのデータを必要とするように、レンジ・パーティション化は、[22]、パフォーマンスを向上させるために、並列データベースで重要でした。範囲検索、最長プレフィックス一致の一つのタイプは、理由を問わず、音声ネットワークとデータネットワークのルーティングのスキームでの有病率が重要です。他のアプリケーションでは、ユーザーが応答のほんの数を必要としていても、広範な、不正確なクエリをもたらす可能性があります。したがって、同様の範囲を検索する技術はまた、[77]に重要です。スケーラブルな分散データ構造（SDDS）が[49-51]現代の分散ハッシュテーブル（のDHT）に重要な影響を与えているので、P2Pネットワーク上で範囲検索のための様々な提案を図4に要約されている、我々はまた、SDDS範囲で進行中の作業が含まれます検索します。"
    },
    {
      "indent": 3,
      "text": "PEER-TO-PEER (P2P) Locality Sensitive Hashing (Chord) [77] Prefix Hash Trees (unspecified DHT) [78, 79] Space Filling Curves (CAN) [80] Space Filling Curves (Chord) [81] Quadtrees (Chord) [82] Skip Graphs [38, 41, 83, 100] Mercury [84] P-Grid [85, 86]",
      "ja": "ピア・ツー・ピア（P2P）局所性鋭敏型ハッシュ（コード）[77]プレフィックスハッシュ木（不特定のDHT）[78、79]空間充填曲線（CAN）[80]空間充填曲線（コード）[81]四分木（コード）[82]をスキップグラフ[38、41、83、100]水銀[84] P-格子[85、86]"
    },
    {
      "indent": 3,
      "text": "SCALABLE DISTRIBUTED DATA STRUCTURES (SDDS) RP* [87, 88]",
      "ja": "スケーラブルな分散データ構造（SDDS）のRP * [87、88]"
    },
    {
      "indent": 7,
      "text": "Figure 4: Solutions for Range Queries on P2P and SDDS Indexes",
      "ja": "図4：P2PとSDDSインデックスの範囲クエリのためのソリューション"
    },
    {
      "indent": 3,
      "text": "The papers on P2P range search can be divided into those that rely on an underlying DHT (the first five entries in Figure 4) and those that do not (the subsequent three entries). Bharambe, Agrawal, et al. argued that DHTs are inherently ill-suited to range queries [84]. The very feature that makes for their good load balancing properties, randomized hash functions, works against range queries. One possible solution would be to hash ranges, but this can require a priori partitioning. If the partitions are too large, partitions risk overload. If they are too small, there may be too many hops.",
      "ja": "P2P範囲探索に関する論文は、基礎となるDHT（図4の最初の5個のエントリ）に依存しているものと（その後の3個のエントリ）、そうでないものに分けることができます。 Bharambe、アグラワルら。 DHTは、本質的にクエリ[84]範囲に不適当であることを主張しました。その良好な負荷分散のプロパティになり非常に機能、ランダム化されたハッシュ関数は、範囲クエリに対して動作します。一つの可能​​な解決策は、範囲をハッシュするだろうが、これは先験的分割を必要とすることができます。パーティションが大きすぎる場合には、リスクの過負荷を分割します。彼らが小さすぎると、あまりにも多くのホップがあるかもしれません。"
    },
    {
      "indent": 3,
      "text": "Despite these potential shortcomings, there have been several range query proposals based on DHTs. If hashing ranges to nodes, it is entirely possible that overlapping ranges map to different nodes. Gupta, Agrawal, et al. rely on locality sensitive hashing to ensure that, with high probability, similar ranges are mapped to the same node [77]. They propose one particular family of locality sensitive hash functions, called min-wise independent permutations. The number of partitions per node and the path length were plotted against the total numbers of peers in the system. For a network with 1000 nodes, the hop count distribution was very similar to that of the exact-matching Chord scheme. Was it load-balanced? For the same network with 50,000 partitions, there were over two orders of magnitude variation in the number of partitions at each node (first and ninety-ninth percentiles). The Prefix Hash Tree is a trie in which prefixes are hashed onto any DHT. The preliminary analysis suggests efficient doubly logarithmic lookup, balanced load, and fault resilience [78, 79]. Andrzejak and Xu were perhaps the first to propose a mapping from ranges to DHTs [80]. They use one particular Space Filling Curve, the Hilbert curve, over a Content Addressable Network (CAN) construction (Section 3.5.3). They maintain two properties: nearby ranges map to nearby CAN zones; if a range is split into two sub-ranges, then the zones of the sub-ranges partition the zone of the primary range. They plot path length and load proxy measures (the total number of messages and nodes visited) for three algorithms to propagate range queries: brute force, controlled flooding, and directed controlled flooding. Schmidt and Parashar also advocated Space Filling Curves to achieve range queries over a DHT [81]. However, they point out that, while Andrzejak and Xu use an inverse Space Filling Curve to map a one-dimensional space to d-dimensional zones, they map a d-dimensional space back to a one-dimensional index. Such a construction gives the ability to search across multiple attributes (Section 5.2). Tanin, Harwood, et al. suggested quadtrees over Chord [82], and gave preliminary simulation results for query response times.",
      "ja": "これらの潜在的な欠点にもかかわらず、のDHTに基づいていくつかの範囲クエリの提案がなされています。ハッシュは、ノードの範囲にある場合、重複範囲が異なるノードにマッピングすることを完全に可能です。グプタ、アグラワルら。 [77]高い確率で、同様の範囲が同じノードにマッピングされる、ことを保証するために、局所性鋭敏型ハッシュに依存しています。彼らは、分単位で独立した順列と呼ばれる地域に敏感なハッシュ関数の一つの特定の家族を提案します。ノードおよび経路長さ当たりのパーティション数は、システム内のピアの総数に対してプロットしました。千個のノードを有するネットワークでは、ホップ数分布が正確なマッチングコード方式のものと非常に類似していました。それはロードバランスましたか？ 50,000パーティションと同じネットワークでは、各ノード（第一及び第九十九パーセンタイル）でのパーティションの数の大きさの変化の二桁上にありました。プレフィックスハッシュツリーは、接頭辞がどのDHTにハッシュ化されているトライです。予備的分析は、効率的な二重対数ルックアップ、平衡負荷、および障害回復力[78、79]を示唆しています。 Andrzejakと徐は、おそらくのDHTs [80]の範囲からマッピングを提案した最初。彼らは連想ネットワーク（CAN）建設（3.5.3）上で、ある特定の空間充填曲線、ヒルベルト曲線を使用しています。彼らは2つのプロパティを維持する：近くの範囲は近くCANゾーンにマッピング。範囲は、二つのサブ範囲に分割される場合、サブレンジのゾーンは、プライマリ範囲のゾーンを分割します。彼ら範囲クエリを伝播する3つのアルゴリズムのためのプロット経路長と負荷プロキシ対策（メッセージノードの総数は訪問）：フラッディングを制御ブルートフォース、及び制御されたフラッディングを指示しました。シュミットとParasharもDHT [81]上に範囲クエリを達成するために、曲線を空間充填を提唱しました。しかし、彼らはAndrzejakと徐はd次元ゾーンへの1次元空間をマッピングするために逆空間充填曲線を使用しながら、彼らが戻って一次元のインデックスへのd次元空間にマッピングする、と指摘しています。このような構造は複数の属性（5.2節）全体で検索する機能を提供します。 Tanin、ハーウッド、ら。コード[82]の上に四分木を提案し、クエリの応答時間のための予備的なシミュレーション結果を与えました。"
    },
    {
      "indent": 3,
      "text": "Because DHTs are naturally constrained to exact-match, single-key queries, researchers have considered other P2P indexes for range searches. Several were based on Skip Graphs [38, 41], which, unlike",
      "ja": "DHTが自然に完全一致、単一キークエリに拘束されているので、研究者は、範囲検索のための他のP2Pインデックスを検討しています。いくつかは、これとは異なり、スキップグラフ[38、41]、に基づいていました"
    },
    {
      "indent": 3,
      "text": "the DHTs, do not necessitate randomizing hash functions and are therefore capable of range searches. Unfortunately, they are not load balanced [83]. For example, in SkipNet [48], hashing was added to balance the load -- the Skip Graph could support range searches or load balancing, but not both. One solution for load-balancing relies on an increased number of 'virtual' servers [168] but, in their search for a system that can both search for ranges and balance loads, Bharambe, Agrawal, et al. rejected the idea [84]. The virtual servers work assumed load imbalance stems from hashing; that is, by skewed data insertions and deletions. In some situations, the imbalance is triggered by a skewed query load. In such circumstances, additional virtual servers can increase the number of routing hops and increase the number of pointers that a Skip Graph needs to maintain. Ganesan, Bawa, et al. devised an alternate method to balance load [83]. They proposed two Skip Graphs, one to index the data itself and the other to track load at each node in the system. Each node is able to determine the load on its neighbours and the most (least) loaded nodes in the system. They devise two algorithms: NBRADJUST balances load on neighbouring nodes; using REORDER, empty nodes can take over some of the tuples on heavily loaded nodes. Their simulations focus on skewed storage load, rather than on skewed query loads, but they surmise that the same approach could be used for the latter.",
      "ja": "DHTは、ハッシュ関数をランダム化する必要ので、範囲検索が可能ではありません。残念ながら、彼らはバランス負荷されていない[83]。両方ではなく、スキップグラフは、範囲検索またはロードバランシングをサポートすることができる - 例えば、SkipNetに[48]、負荷のバランスをとるために添加したハッシング。負荷分散のための一つの解決策は、増加した「仮想」サーバ[168]の数はなく、両方の範囲とバランス負荷を検索することができ、システムのための彼らの検索で、Bharambe、アグラワルらに依存しています。 [84]アイデアを拒否しました。仮想サーバの作業を想定負荷の不均衡は、ハッシュから茎。それは、歪んだデータの挿入や削除によって、です。いくつかの状況では、不均衡がスキュークエリ負荷によってトリガーされます。このような状況では、追加の仮想サーバーは、ルーティングホップ数を増やし、スキップグラフを維持する必要があるポインタの数を増やすことができます。ガネサン、バワ、ら。 [83]負荷を分散するための代替方法を考案しました。これらは、システム内の各ノードの負荷を追跡するためにインデックスにデータ自体および他の2つのスキップグラフ、いずれかを提案しました。各ノードは、その近隣とシステムで最も（少なくとも）ロードされたノードの負荷を決定することができます。彼らは、2つのアルゴリズムを考案：NBRADJUSTは、隣接ノードの負荷をバランス; REORDERを使用して、空のノードは、負荷の高いノード上のタプルの一部を引き継ぐことができます。彼らのシミュレーションは、スキューストレージ負荷ではなく、斜めにクエリ負荷に焦点を当て、彼らは同じアプローチは、後者のために使用することができることを推測します。"
    },
    {
      "indent": 3,
      "text": "Other proposals for range queries avoid both the DHT and the Skip Graph. Bharambe, Agrawal, et al. distinguish their Mercury design by its support for multi-attribute range queries and its explicit load balancing [84]. In Mercury, nodes are grouped into routing hubs, each of which is responsible for various query attributes. While it does not use hashing, Mercury is loosely similar to the DHT approaches: nodes within hubs are arranged into rings, like Chord [34]; for efficient routing within hubs, k long-distance links are used, like Symphony [381]. Range lookups require O(((log n)^2)/k) hops. Random sampling is used to estimate the average load on nodes and to find the parts of the overlay that are lightly loaded. Whereas Symphony assumed that nodes are responsible for ranges of approximately equal size, Mercury's random sampling can determine the location of the start of the range, even for non-uniform ranges [84]. P-Grid [42] does provide for range queries, by virtue of the key ordering in its tree structures. Ganesan, Bawa, et al. critiqued its capabilities [83]: P-Grid assumes fixed-capacity nodes; there was no formal characterization of imbalance ratios or balancing costs; every P-Grid periodically contacts other nodes for load information.",
      "ja": "範囲クエリの他の提案はDHTおよびスキップグラフの両方を避けます。 Bharambe、アグラワルら。 [84]マルチ属性範囲クエリとその明示的なロードバランシングのサポートにより、その水星のデザインを区別する。水銀において、ノードは、様々なクエリの属性を担当してそれぞれがハブを、ルーティングにグループ化されます。それはハッシュを使用していないが、水銀はDHTアプローチに緩く類似している：ハブ内のノードは、コードように、リングに配置されている[34]。ハブ内の効率的なルーティングのために、K長距離リンクは、交響曲のような[381]使用されています。範囲検索はO（（（ログn）^ 2）/ k）はホップが必要。ランダムサンプリングは、ノード上の平均負荷を推定するために、軽くロードされているオーバーレイの部品を見つけるために使用されます。シンフォニーはノードがほぼ等しい大きさの範囲に関与していると仮定し、一方、マーキュリーのランダムサンプリングであっても、不均一な範囲について、[84]の範囲の開始位置を決定することができます。 P-グリッド[42]は、そのツリー構造内のキーの順序によって、範囲クエリを提供しません。ガネサン、バワ、ら。 [83]その機能を批評：P-グリッドは、固定容量のノードを前提。不均衡比またはバランス費の正式な特性がありませんでした。すべてのP-グリッド定期的に負荷情報の連絡先の他のノードを。"
    },
    {
      "indent": 3,
      "text": "The work on Scalable Distributed Data Structures (SDDSs) has progressed in parallel with P2P work and has addressed range queries. Like the DHTs above, the early SDDS Linear Hashing (LH*) schemes were not order-preserving [52]. To facilitate range queries, Litwin,",
      "ja": "スケーラブルな分散データ構造（SDDSs）の作業は、P2P作業と並行して進行していると範囲クエリに対処しています。上記のDHTs、初期SDDS線形ハッシュ（LH *）方式のような順序保存[52]なかったです。範囲クエリを容易にするために、リトウィン、"
    },
    {
      "indent": 3,
      "text": "Niemat, et al. devised a Range Parititioning variant, RP* [87]. There are options to dispense with the index, to add indexes to clients, and to add them to servers. In the variant without an index, every query is issued via multicasting. The other variants also use some multicasting. The initial RP* paper suggested scalability to thousands of sites, but a more recent RP* simulation was capped at 140 servers [88]. In that work, Tsangou, Ndiaye, et al. investigated TCP and UDP mechanisms by which servers could return range query results to clients. The primary metrics were search and response times. Amongst the commercial parallel database management systems, they reported that the largest seems only to scale to 32 servers (SQL Server 2000). For future work, they planned to explore aggregation of query results, rather than establishing a connection between the client and every single server with a response.",
      "ja": "Niematら。 [87]範囲Parititioningバリアント、RP *を考案しました。クライアントにインデックスを追加するために、インデックスを省略すると、サーバにそれらを追加するオプションがあります。インデックスなしの変形例では、すべてのクエリは、マルチキャストを経由して発行されます。他の変異体はまた、いくつかのマルチキャストを使用しています。初期RP *紙は、数千のサイトに拡張性を示唆したが、より最近のRP *シミュレーションは、140台のサーバ[88]で蓋をしました。その研究では、Tsangou、Ndiayeら。サーバはクライアントに範囲クエリの結果を返すことができたことにより、TCPとUDPのメカニズムを調べました。主な指標は、検索および応答時間でした。商用並列データベース管理システムの中で、彼らは最大32台のサーバ（SQL Server 2000の）にのみスケールに思えることを報告しました。将来の仕事のために、彼らはむしろ、クライアントと応答を持つすべての単一のサーバー間の接続を確立するよりも、クエリ結果の集約を模索する計画しました。"
    },
    {
      "indent": 3,
      "text": "All in all, it seems there are numerous open research questions on P2P range queries. How realistic is the maintenance of global load statistics considering the scale and dynamism of P2P networks? Simulations at larger scales are required. Proposals should take into account both the storage load (insert and delete messages) and the query load (lookup messages). Simplifying assumptions need to be attacked. For example, how well do the above solutions work in networks with heterogeneous nodes, where the maximum message loads and index sizes are node-dependent?",
      "ja": "すべてのすべてで、P2Pの範囲クエリに多数のオープン研究課題があるようです。 P2Pネットワークの規模やダイナミズムを考慮グローバルな負荷統計のメンテナンスはどのように現実的でしょうか？より大きなスケールでのシミュレーションが必要とされています。提案は考慮にストレージ負荷（挿入して、メッセージを削除）し、クエリ負荷（ルックアップメッセージ）の両方を取る必要があります。簡素化の仮定を攻撃する必要があります。例えば、どれだけのメッセージの最大負荷およびインデックスサイズはノード依存する異種ノードとネットワーク内の上記溶液の作業を行いますか？"
    },
    {
      "indent": 0,
      "text": "5.2. Multi-Attribute Queries",
      "section_title": true,
      "ja": "5.2。マルチ属性クエリ"
    },
    {
      "indent": 3,
      "text": "There has been some work on multi-attribute P2P queries. As late as September 2003, it was suggested that there has not been an efficient solution [76].",
      "ja": "多属性P2Pクエリ上のいくつかの作業がありました。 2003年9月下旬のように、それは効率的なソリューション[76]がなかったことが示唆されました。"
    },
    {
      "indent": 3,
      "text": "Again, an early significant work on multi-attribute queries over aggregated commodity nodes germinated amongst SDDSs. k-RP* [89] uses the multi-dimensional binary search tree (or k-d tree, where k indicates the number of dimensions of the search index) [384]. It builds on the RP* work from the previous section and inherits their capabilities for range search and partial match. Like the other SDDSs, k-RP* indexes can fit into RAM for very fast lookup. For future work, Litwin and Neimat suggested a) a formal analysis of the range search termination algorithm and the k-d paging algorithm, b) a comparison with other multi-attribute data structures (quad-trees and R-trees) and c) exploration of query processing, concurrency control, and transaction management for k-RP* files [89]. On the latter point, others have considered transactions to be inconsequential to the core problem of supporting more complex queries in P2P networks [72].",
      "ja": "SDDSsの中で発芽集約コモディティ・ノードを超える多属性クエリで再度、初期の重要な仕事。 K-RPの* [89]多次元バイナリ検索ツリー（又はkが検索インデックスの次元数を示すkd木）[384]を使用します。これは、前のセクションからのRP *ワーク上に構築し、範囲検索や部分一致のために彼らの能力を継承します。他のSDDSsと同様に、K-RPの*インデックスは非常に高速な検索のためにRAMに収まることができます。将来の作業のために、リトウィンとNeimatが提案a）の範囲検索終了アルゴリズムの形式的分析及びKDページングアルゴリズム、B）他のマルチ属性データ構造（クワッドツリー及びR木）およびc）の探査との比較K-RPの*ファイルのためのクエリ処理、同時実行制御、およびトランザクション管理[89]。後者の点については、他のものは、P2Pネットワークにおける、より複雑なクエリをサポートするコア問題に取るに足らないすべき取引[72]と考えています。"
    },
    {
      "indent": 3,
      "text": "In architecting their secure wide-area Service Discovery Service (SDS), Hodes, Czerwinski, et al. considered three possible designs for multi-criteria search -- Centralization, Mapping and Flooding [90]. These correlate to the index classifications of Section 2 -- Central, Distributed, and Local. They discounted the centralized, Napster-like index for its risk of a single point of failure. They considered the hash-based mappings of Section 3, but concluded that it would not be possible to adequately partition data. A document satisfying many criteria would be wastefully stored in many partitions. They rejected full flooding for its lack of scalability. Instead, they devised a query filtering technique, reminiscent of Gnutella's query routing protocol (Section 4.1). Nodes push proactive summaries of their data rather than waiting for a query. Summaries are aggregated and stored throughout a server hierarchy, to guide subsequent queries. Some initial prototype measurements were provided for total load on the system, but not for load distribution. They put several issues forward for future work. The indexing needs to be flexible to change according to query and storage workloads. A mesh topology might improve on their hierarchic topology since query misses would not propagate to root servers. The choice is analogous to BGP meshes and DNS trees.",
      "ja": "その安全な広域サービスディスカバリサービス（SDS）、Hodes、Czerwinskiらを設計しました。集中、マッピングおよび湛水[90]  - 多基準検索のための3つの可能な設計を検討しました。これらは、第2のインデックス分類に相関 - 中央、分散、およびローカル。彼らは、単一障害点のリスクに対して集中、ナップスターのようなインデックスを割り引い。彼らは、第3節のハッシュベースのマッピングを検討し、適切にデータを分割することはできないと結論付けました。多くの基準を満たす文書が無駄に多くのパーティションに格納されます。彼らは、拡張性の欠如のための完全な氾濫を拒否しました。その代わりに、彼らはグヌーテラの質問ルーティングプロトコル（セクション4.1）を彷彿とさせるクエリフィルタリング技術を、考案しました。ノードではなく、クエリを待っているよりも、そのデータの積極的な要約を押してください。要約は、凝集およびその後のクエリを導くために、サーバの階層全体にわたって保存されています。いくつかの初期のプロトタイプの測定はなく、負荷分散のために、システムの全負荷のために提供されました。彼らは、将来の仕事のために前方にいくつかの問題を置きます。インデックスは、クエリおよびストレージのワークロードに応じて変更することが柔軟である必要があります。クエリミスがルートサーバに伝播されませんので、メッシュトポロジーは、その階層的トポロジに改善される場合があります。選択はBGPメッシュとDNSの木に似ています。"
    },
    {
      "indent": 3,
      "text": "More recently, Cai, Frank, et al. devised the Multi-Attribute Addressable Network (MAAN) [91]. They built on Chord to provide both multi-attribute and range queries, claiming to be the first to service both query types in a structured P2P system. Each MAAN node has O(log n) neighbours, where N is the number of nodes. MAAN multi-attribute range queries require O(log n+N*Smin) hops, where Smin is the minimum range selectivity across all attributes. Selectivity is the ratio of the query range to the entire identifier range. The paper assumed that a locality preserving hash function would ensure balanced load. Per Section 5.1, the arguments by Bharambe, Agrawal, et al. have highlighted the shortcomings of this assumption [84]. MAAN required that the schema must be fixed and known in advance -- adaptable schemas were recommended for subsequent attention. The authors also acknowledged that there is a selectivity breakpoint at which full flooding becomes more efficient than their scheme. This begs for a query resolution algorithm that adapts to the profile of queries. Cai and Frank followed up with RDFPeers [55]. They differentiate their work from other RDF proposals by a) guaranteeing to find query results if they exist and b) removing the requirement of prior definition of a fixed schema. They hashed <subject, predicate, object> triples onto the MAAN and reported routing hop metrics for their implementation. Load imbalance across nodes was reduced to less than one order of magnitude, but the specific measure was the number of triples stored per node - skewed query loads were not considered. They plan to improve load balancing with the virtual servers of Section 5.1 [168].",
      "ja": "さらに最近では、カイ、フランクら。マルチアトリビュートアドレス可能ネットワーク（MAAN）[91]を考案しました。彼らは、構造化P2Pシステムの両方でクエリの種類にサービスを提供する最初であると主張、マルチ属性と範囲の両方のクエリを提供するために、コードの上に構築されました。各MAANノードNはノードの数であり、O（ログn）隣人を有します。 MAANマルチ属性範囲クエリはSminのすべての属性を横切る最小の範囲選択でO（N + N * Sminのログ）ホップを必要とします。選択性は、全体の識別子範囲にクエリ範囲の比率です。紙は、局所保存ハッシュ関数はロードバランスを確保すると仮定しました。セクション5.1あたり、らBharambe、Agrawalさん、によって引数。この仮定[84]の欠点を強調しています。 MAANは、スキーマが固定され、事前に知っていなければならないという必要 - 適応スキーマが、その後の注意を引くために推奨されました。著者はまた、完全な洪水が彼らの方式よりも効率的になるで選択性のブレークポイントがあることを認めました。これは、クエリのプロファイルに適応したクエリの解決アルゴリズムのために頼みます。カイとフランクはRDFPeers [55]とのフォローアップ。彼らは、彼らが存在する場合、クエリ結果を見つけるために保証する）ことにより、他のRDFの提案から自分の仕事を差別化し、b）は、固定スキーマの事前定義の必要性を取り除きます。彼らはMAANにトリプル<主語、述語、目的>をハッシュし、その実施のためのホップのメトリックをルーティング報告しました。ノード間で負荷の不均衡は1桁未満に減少したが、具体的な対策は、ノードごとに記憶されたトリプルの数であった - クエリ負荷が考慮されなかったスキュー。彼らは、セクション5.1 [168]の仮想サーバーで負荷分散を改善していく予定です。"
    },
    {
      "indent": 0,
      "text": "5.3. Join Queries",
      "section_title": true,
      "ja": "5.3。クエリに参加"
    },
    {
      "indent": 3,
      "text": "Two research teams have done some initial work on P2P join operations. Harren, Hellerstein, et al. initially described a three-layer architecture -- storage, DHT and query processing. They implemented the join operation by modifying an existing Content Addressable Network (CAN) simulator, reporting \"significant hot-spots in all dimensions: storage, processing, and routing\" [72]. They progressed their design more recently in the context of PIER, a distributed query engine based on CAN [22, 385]. They implemented two equi-join algorithms. In their design, a key is constructed from the \"namespace\" and the \"resource ID\". There is a namespace for each relation and the resource ID is the primary key for base tuples in that relation. Queries are multicast to all nodes in the two namespaces (relations) to be joined. Their first algorithm is a DHT version of the symmetric hash join. Each node in the two namespaces finds the relevant tuples and hashes them to a new query namespace. The resource ID in the new namespace is the concatenation of join attributes. In the second algorithm, called \"fetch matches\", one of the relations is already hashed on the join attributes. Each node in the second namespace finds tuples matching the query and retrieves the corresponding tuples from the first relation. They leveraged two other techniques, namely the symmetric semi-join rewrite and the Bloom filter rewrite, to reduce the high bandwidth overheads of the symmetric hash join. For an overlay of 10,000 nodes, they simulated the delay to retrieve tuples and the aggregate network bandwidth for these four schemes. The initial prototype was on a cluster of 64 PCs, but it has more recently been expanded to PlanetLab.",
      "ja": "2つの研究チームがP2P上のいくつかの初期の作品は、結合操作を行っています。 Harren、Hellerstein、ら。ストレージ、DHTおよびクエリ処理 - 最初の三層のアーキテクチャが記載されています。 [72]：彼らは、既存のコンテンツアドレス可能ネットワーク（CAN）シミュレータ、報告「記憶、処理、およびルーティングすべての次元において有意なホットスポット」を変更することにより、結合操作を実施しました。彼らはPIER、CAN [22、385]に基づいて、分散クエリエンジンの文脈で、より最近彼らの設計を進行しました。彼らは、2等結合アルゴリズムを実装しました。その設計では、キーは、「名前空間」と「リソースID」から構成されています。そこ各関係の名前空間があると、リソースIDは、その関係で基本タプルの主キーです。クエリは、接合すべき2つの名前空間（関係）内のすべてのノードにマルチキャストされます。彼らの最初のアルゴリズムは、参加対称ハッシュのDHTバージョンです。 2つの名前空間内の各ノードは、関連するタプルを見つけて、新しいクエリの名前空間にそれらをハッシュ。新しい名前空間内のリソースIDは、結合属性を連結したものです。 「マッチをフェッチ」と呼ばれる第2のアルゴリズムでは、関係の一つは、すでに結合属性でハッシュされます。第二の名前空間内の各ノードは、クエリに一致するタプルを見つけ、第1の関係から対応するタプルを検索します。彼らは、結合の対称ハッシュの高帯域幅のオーバーヘッドを低減するために、2つの他の技術、すなわち、対称半結合リライトおよびブルームフィルタ書き換えを活用しました。万個のノードのオーバーレイのために、彼らはタプルを取得するために遅延し、これら4つのスキームの集約ネットワーク帯域幅をシミュレートしました。最初のプロトタイプは64のPCクラスタ上だったが、それは最近になっプラネットに拡張されました。"
    },
    {
      "indent": 3,
      "text": "Triantafillou and Pitoura considered multicasting to large numbers of peers to be inefficient [76]. They therefore allocated a limited number of special peers, called range guards. The domain of the join attributes was divided, one partition per range guard. Join queries were sent only to range guards, where the query was executed. Efficient selection of range guards and a quantitive evaluation of their proposal were left for future work.",
      "ja": "TriantafillouとPitouraは非効率的であるとピアの多数にマルチキャストみなさ[76]。したがって、これらは、レンジガードと呼ばれる特殊なピアの数が限られ、割り当てられました。結合属性のドメインは、レンジガードごとにパーティションを分けました。参加クエリはのみ、クエリが実行された範囲の警備員に送られました。レンジガードとその提案の定量的評価の効率的な選択は、将来の仕事のために残っていました。"
    },
    {
      "indent": 0,
      "text": "5.4. Aggregation Queries",
      "section_title": true,
      "ja": "5.4。集計クエリ"
    },
    {
      "indent": 3,
      "text": "Aggregation queries invariable rely on tree-structures to combine results from a large number of nodes. Examples of aggregation queries are Count, Sum, Maximum, Minimum, Average, Median, and Top-K [92, 386, 387]. Figure 5 summarizes the tree and query characteristics that affect dependability.",
      "ja": "不変の集合質問は、多数のノードから結果を結合するために、ツリー構造に依存しています。集約クエリの例には、カウント、合計、最大値、最小値、平均値、中央値、およびトップK [92、386、387]です。図5は、信頼性に影響を与えるツリーとクエリの特性をまとめました。"
    },
    {
      "indent": 3,
      "text": "Tree type: Doesn't use DHT [92], use internal DHT trees [95], use independent trees on top of DHTs Tree repair: Periodic [93], exceptional [32] Tree count: One per key, one per overlay [56] Tree flexibility: Static [92], dynamic",
      "ja": "木の種類：内部DHTの木を使用し、DHT [92]を使用しない[95]、のDHTツリー修理の上に独立した木を使用します。定期的な[93]、並外れた[32]ツリー回数：キーごとに1つを、オーバーレイごとに1つ[ 56]ツリーの柔軟性：静的[92]、動的"
    },
    {
      "indent": 3,
      "text": "Query interface: install, update, probe [98] Query distribution: multicast [98], gossip [92] Query applications: leader election, voting, resource location, object placement and error recovery [98, 388] Query semantics Consistency: Best-effort, eventual [92], snapshot / interval / single-site validity [99] Timeliness [388] Lifetime: Continuous [97, 99], single-shot No. attributes: Single, multiple Query types: Count, sum, maximum, minimum, average, median, top k [92, 386, 387]",
      "ja": "クエリインターフェイス：インストール、アップデート、プローブ[98]クエリ分布：マルチキャスト[98]、ゴシップ[92]クエリアプリケーション：リーダー選挙、投票、リソースの場所、オブジェクトの配置とエラー回復[98、388]クエリのセマンティック一貫性：ベスト〜努力、最終的に[92]、スナップショット/間隔/単一サイトの妥当性[99]適時[388]寿命：連続[97、99]、シングルショット番号属性：シングル、複数のクエリの種類：カウント、合計、最大、最小値、平均値、中央値、最上位K [92、386、387]"
    },
    {
      "indent": 10,
      "text": "Figure 5: Aggregation Trees and Queries in P2P Networks",
      "ja": "図5：P2Pネットワークにおける集約ツリーとクエリ"
    },
    {
      "indent": 3,
      "text": "Key: Astrolabe [92]; Cone [93]; Distributed Approximative System Information Service (DASIS) [95]; Scalable Distributed Information",
      "ja": "キー：アストロラーベ[92]。コーン[93]。分散近似システム情報サービス（DASIS）[95]。スケーラブルな分散情報"
    },
    {
      "indent": 3,
      "text": "Management System (SDIMS) [98]; Self-Organized Metadata Overlay (SOMO) [56]; Wildfire [99]; Willow [32]; Newscast [97]",
      "ja": "管理システム（SDIMS）[98]。自己組織化メタデータオーバーレイ（SOMO）[56]。山火事[99]。ヤナギ[32]。ニュース放送[97]"
    },
    {
      "indent": 3,
      "text": "The fundamental design choices for aggregation trees relate to how the overlay uses DHTs, how it repairs itself when there are failures, how many aggregation trees there are, and whether the tree is static or dynamic (Figure 5). Astrolabe is one of the most influential P2P designs included in Figure 5, yet it makes no use of DHTs [92]. Other designs make use of the internal trees of Plaxton-like DHTs. Others build independent tree structures on top of DHTs. Most of the designs repair the aggregation tree with periodic mechanisms similar to those used in the DHTs themselves. Willow is an exception [32]. It uses a Tree Maintenance Protocol to \"zip\" disjoint aggregation trees together when there are major failures. Yalagandula and Dahlin found reconfigurations at the aggregation layer to be costly, suggesting more research on techniques to reduce the cost and frequency of such reconfigurations [98]. Many of the designs use multiple aggregation trees, each rooted at the DHT node responsible for the aggregation attribute. On the other hand, the Self-Organized Metadata Overlay [56] uses a single tree and is vulnerable to a single point of failure at its root.",
      "ja": "集約ツリーのための基本的な設計選択は、障害がある場合、どのように多くの集合木があり、そしてツリーは（図5）は、静的または動的であるかどうかをどのように修復自体、オーバーレイのDHTを使用する方法に関する。アストロラーベは、図5に含まれ、最も影響力のあるP2Pのデザインの一つであり、まだそれはのDHTs [92]を使用しません。他のデザインはPlaxtonのようなのDHTの内部の木を使用しています。その他は、のDHTsの上に独立したツリー構造を構築します。デザインのほとんどは、自分自身のDHTで使用されるものと同様の定期的なメカニズムを集約ツリーを修復します。ヤナギは例外[32]です。これは、主要な障害があるときに一緒にツリーメンテナンス議定書に「ジップ」ばらばら集約ツリーを使用しています。 Yalagandulaとダーリンは、集約層で再構成は、再構成[98]のコストおよび頻度を低減する技術に関するさらなる研究を示唆し、高価であることが見出さ。デザインの多くは、複数の集約ツリー、集約属性を担当するDHTノードをルートとそれぞれを使用しています。一方、自己組織化メタデータオーバーレイ[56]は、単一のツリーを使用し、そのルートに単一障害点に脆弱です。"
    },
    {
      "indent": 3,
      "text": "At the time of writing, researchers have just begun exploring the performance of queries in the presence of churn. Most designs are for best-effort queries. Bawa, et al. devised a better consistency model, called Single-Site Validity [99] to qualify the accuracy of results when there is churn. Its price was a five-fold increase in the message load, when compared to an efficient but best-effort Spanning Tree. Gossip mechanisms are resilient to churn, but they delay aggregation results and incur high message cost for aggregation attributes with small read-to-write ratios.",
      "ja": "執筆時点では、研究者たちは、ちょうど解約の存在下でのクエリのパフォーマンスを模索し始めています。ほとんどのデザインは、ベストエフォート型のクエリのためのものです。バワら。解約があった場合、結果の精度を修飾する単一サイトの有効性と呼ばれる優れた一貫性モデル、[99]を考案しました。効率的なしかし、ベストエフォート型のスパニングツリーと比較すると、その価格は、メッセージ負荷の5倍の増加でした。ゴシップメカニズムは解約する弾力性のある、しかし、彼らは、集計結果を遅らせ、集約のための高いメッセージのコストは小さく、読み取りに書き込み比で属性を被ります。"
    },
    {
      "indent": 0,
      "text": "6. Security Considerations",
      "section_title": true,
      "ja": "6.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "An initial list of references to research on P2P security is given in Figure 1, Section 1. This document addresses P2P search. P2P storage, security, and applications are recommended for further investigation in Section 8.",
      "ja": "P2Pのセキュリティ上の研究への参照の最初のリストは、この文書では、P2Pの検索に対処し、図1、セクション1に記載されています。 P2Pストレージ、セキュリティ、およびアプリケーションは、第8章のさらなる調査のために推奨されています。"
    },
    {
      "indent": 0,
      "text": "7. Conclusions",
      "section_title": true,
      "ja": "7、結論"
    },
    {
      "indent": 3,
      "text": "Research on peer-to-peer networks can be divided into four categories -- search, storage, security and applications. This critical survey has focused on search methods. While P2P networks have been classified by the existence of an index (structured or unstructured) or the location of the index (local, centralized, and distributed), this survey has shown that most have evolved to have some structure, whether it is indexes at superpeers or indexes defined by DHT algorithms. As for location, the distributed index is most common. The survey has characterized indexes as semantic and semantic-free. It has also critiqued P2P work on major query types. While much of it addresses work from 2000 or later, we have traced important building blocks from the 1990s.",
      "ja": "検索、ストレージ、セキュリティ、およびアプリケーション - ピアツーピアネットワークに関する研究は、4つのカテゴリに分けることができます。この重要な調査では、検索方法に焦点を当てています。 P2Pネットワークは、インデックス（構造化または非構造化）またはインデックスの場所（ローカル集中及び分散）の存在によって分類されてきたが、この調査では、それは、ATインデックスであるかどうか、ほとんどがいくつかの構造を有するように進化したことが示されていますDHTアルゴリズムによって定義されたスーパーピアまたはインデックス。場所については、屈折率分布が最も一般的です。調査では、セマンティックと意味のないよう、インデックスを特徴づけています。また、主要なクエリの種類にP2Pの作品を批評しています。その多くは2000年以降からの作業に対処しながら、私たちは、1990年代からの重要なビルディング・ブロックをトレースしています。"
    },
    {
      "indent": 3,
      "text": "The initial motivation in this survey was to answer the question, \"How robust are P2P search networks?\" The question is key to the deployment of P2P technology. Balakrishnan, Kaashoek, et al. argued that the P2P architecture is appealing: the startup and growth barriers are low; they can aggregate enormous storage and processing resources; \"the decentralized and distributed nature of P2P systems gives them the potential to be robust to faults or intentional attacks\" [18]. If P2P is to be a disruptive technology in applications other than casual file sharing, then robustness needs to be practically verified [20].",
      "ja": "この調査では、最初の動機は、「P2P検索ネットワークでどのように堅牢な？」、質問に答えることでした質問は、P2P技術の展開の鍵となります。バラクリシュナン、Kaashoek、ら。 P2Pアーキテクチャは魅力的であると主張：スタートアップと成長の障壁が低いです。彼らは巨大なストレージと処理リソースを集約することができます。 [18]「P2Pシステムの分散化と分散性は彼らに故障や意図的な攻撃に対してロバストになる可能性を提供します」。 P2Pは、カジュアルなファイル共有以外のアプリケーションで破壊的な技術にする場合は、その堅牢性は、[20]実質的に検証する必要があります。"
    },
    {
      "indent": 3,
      "text": "The best comparative research on P2P dependability has been done in the context of Distributed Hash Tables (DHTs) [291]. The entire body of DHT research can be distilled to four main observations about dependability (Section 3.2). Firstly, static dependability comparisons show that no O(log n) DHT geometry is significantly more dependable than the other O(log n) geometries. Secondly, dynamic dependability comparisons show that DHT dependability is sensitive to the underlying topology maintenance algorithms (Figure 2). Thirdly, most DHTs use O(log n) geometries to suit ephemeral nodes, whereas the O(1) hop DHTs suit stable nodes - they deserve more research attention. Fourthly, although not yet a mature science, the study of DHT dependability is helped by recent simulation tools that support multiple DHTs [299].",
      "ja": "P2Pの信頼性で最高の比較研究は、分散ハッシュテーブル（のDHTs）[291]の文脈で行われています。 DHT研究の全体の体は、信頼性（3.2節）について、4つの主な観測に蒸留することができます。まず、静的信頼性の比較にはO（ログn）はDHT形状は著しくより信頼性の他の幾何学的形状O（ログn）以下であることを示しています。第二に、動的な信頼性比較は、DHTの信頼性は、基礎となるトポロジー維持アルゴリズム（図2）に敏感であることを示しています。第三に、ほとんどのDHTはOに対し、はかないノードに合うようにO（n個のログ）ジオメトリを使用します（1）ホップDHTsのスーツ安定したノード - 彼らはより多くの研究が注目に値します。第四に、まだ成熟した科学が、DHTの信頼性の研究では、複数のDHTs [299]をサポートする最新のシミュレーションツールによって助けられます。"
    },
    {
      "indent": 3,
      "text": "We make the following four suggestions for future P2P research:",
      "ja": "私たちは、将来のP2P研究のため、次の4つの提案を行います。"
    },
    {
      "indent": 3,
      "text": "1) Complete the companion P2P surveys for storage, security, and applications. A rough outline has been suggested in Figure 1, along with references. The need for such surveys was highlighted within the peer-to-peer research group of the Internet Research Task Force (IRTF) [17].",
      "ja": "1）ストレージ、セキュリティ、およびアプリケーションのためのコンパニオンP2P調査を完了します。ラフなアウトラインはリファレンスと一緒に、図1に示唆されています。そのような調査の必要性はインターネットResearch Task Force（IRTF）[17]のピア・ツー・ピアの研究グループ内で強調されました。"
    },
    {
      "indent": 3,
      "text": "2) P2P indexes are maturing. P2P queries are embryonic. Work on more expressive queries over P2P indexes started to gain momentum in 2003, but remains fraught with efficiency and load issues.",
      "ja": "2）P2Pインデックスは成熟しています。 P2Pクエリは、胚あります。 P2Pインデックスをより表現力豊かなクエリの作業は2003年に勢いを得るために始めたが、効率と負荷の問題をはらんまま。"
    },
    {
      "indent": 3,
      "text": "3) Isolate the low-level mechanisms affecting robustness. There is limited value in comparing robustness of DHT geometries (like rings versus de Bruijn graphs), when robustness is highly sensitive to underlying topology maintenance algorithms (Figure 2).",
      "ja": "3）ロバスト性に影響を与える低レベルの機構を分離。ロバスト性は、基礎となるトポロジー維持アルゴリズム（図2）に非常に敏感であり、（デBruijnグラフグラフ対リング等）DHTジオメトリのロバスト性を比較することに限定された値があります。"
    },
    {
      "indent": 3,
      "text": "4) Build consensus on robustness metrics and their acceptable ranges. This paper has teased out numerous measures that impinge on robustness, for example, the median query path length for a failure of x% of nodes, bisection width, path overlap, the number of alternatives available for the next hop, lookup latency, average live bandwidth (bytes/node/sec), successful routing rates, the number of timeouts (caused by a finger pointing to a departed node), lookup failure rates (caused by nodes that temporarily point to the wrong successor during churn), and clustering measures (edge expansion and node expansion). Application-level robustness metrics need to drive a consistent assessment of the underlying search mechanics.",
      "ja": "4）堅牢性の指標とその許容範囲について合意を構築します。本稿では、例えば、メディアンノードのx％の失敗の照会経路長、二分の幅、経路重なり、次のホップのために利用可能な選択肢の数、ルックアップ待ち時間、平均生をロバストに衝突多数の措置をからかいました帯域幅（バイト/ノード/秒）、成功したルーティングレート、（出発ノードを指し示すフィンガーによって引き起こされる）タイムアウトの数は、（一時的に解約時に間違った後継者を指すノードによって引き起こされる）ルックアップ故障率、及びクラスタリング対策（エッジ膨張及びノード展開）。アプリケーションレベルの堅牢性の指標は、基礎となる検索力学の一貫性の評価を推進する必要があります。"
    },
    {
      "indent": 0,
      "text": "8. Acknowledgments",
      "section_title": true,
      "ja": "8.謝辞"
    },
    {
      "indent": 3,
      "text": "This document was adapted from a paper in Elsevier's Computer Networks:",
      "ja": "この文書は、エルゼビアのコンピュータネットワークにおける紙から適応されました："
    },
    {
      "indent": 6,
      "text": "J. Risson & T. Moors, Survey of Research towards Robust Peer-to-Peer Networks: Search Methods, Computer Networks 51(7)2007.",
      "ja": "J. Risson＆T.ムーアズ、堅牢なピアツーピアネットワークに向けた研究の調査：検索方法、コンピュータネットワーク51（7）2007。"
    },
    {
      "indent": 3,
      "text": "We thank Bill Yeager, Ali Ghodsi, and several anonymous reviewers for thorough comments that significantly improved the quality of earlier versions of this document.",
      "ja": "我々は大幅にこのドキュメントの以前のバージョンの品質を改善徹底コメントをビル・イェーガー、アリGhodsi、およびいくつかの匿名の査読に感謝します。"
    },
    {
      "indent": 0,
      "text": "9. References",
      "section_title": true,
      "ja": "9.参考文献"
    },
    {
      "indent": 0,
      "text": "9.1. Informative References",
      "section_title": true,
      "ja": "9.1。参考文献"
    },
    {
      "indent": 3,
      "text": "[1] M. Roussopoulos, M. Baker, D. Rosenthal, T. Guili, P. Maniatis, and J. Mogul, 2 P2P of Not 2 P2P?, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[1] M. Roussopoulos、M.ベーカー、D.ローゼンタール、T. Guili、P.マニアティス、及びJ.モーグルではなく2 P2Pの2 P2Pを?,ピアツーピアシステムに関する第3回国際ワークショップ2月26-27 2004。"
    },
    {
      "indent": 3,
      "text": "[2] A. Rowstron and P. Druschel, Pastry: Scalable, distributed object location and routing for large-scale peer-to-peer systems, IFIP/ACM Middleware 2001, Nov 2001.",
      "ja": "[2] A. Rowstron及びP. Druschel、ペストリー：大規模なピア・ツー・ピア・システムのためのスケーラブルな、分散オブジェクトの位置とルーティング、IFIP / ACMミドルウェア2001、2001年11月。"
    },
    {
      "indent": 3,
      "text": "[3] B. Yeager and B. Bhattacharjee, Peer-to-Peer Research Group Charter, http://www.irtf.org/charters/p2prg.html (2003)",
      "ja": "[3] B.イェーガー及びB. Bhattacharjee、ピアツーピア研究グループ憲章、http://www.irtf.org/charters/p2prg.html（2003）"
    },
    {
      "indent": 3,
      "text": "[4] T. Klingberg and R. Manfredi, Gnutella 0.6, (2002)",
      "ja": "[4] T. KlingbergおよびR.マンフレディ、グヌーテラ0.6、（2002）"
    },
    {
      "indent": 3,
      "text": "[5] I. Clarke, A Distributed Decentralised Information Storage and Retrieval System, Undergraduate Thesis, 1999.",
      "ja": "[5] I.クラーク、分散分散情報記憶・検索システム、卒業論文、1999。"
    },
    {
      "indent": 3,
      "text": "[6] B. Zhao, J. Kubiatowicz, and A. Joseph, Tapestry: an infrastructure for fault-tolerant wide-area location and routing, Report No. UCB/CSD-01-1141 2001.",
      "ja": "[6] B.趙、J. Kubiatowicz、及びA.ジョゼフ、タペストリー：フォールトトレラント広域位置およびルーティングのためのインフラストラクチャ、レポートNo. UCB / CSD-01から1141 2001。"
    },
    {
      "indent": 3,
      "text": "[7] I. Stoica, R. Morris, D. Liben-Nowell, D. Karger, M. Kaashoek, F. Dabek, and H. Balakrishnan, Chord: A scalable peer-to-peer lookup service for internet applications, Proc. ACM SIGCOMM 2001 2001, pp. 149-160.",
      "ja": "[7] I.ストイカ、R.モリス、D.リベニ-Nowell、D.カーガー、M. Kaashoek、F. Dabek、及びH.バラクリシュナン、コード：インターネットアプリケーションのためのスケーラブルなピアツーピア検索サービス、PROC 。 ACM SIGCOMM 2001 2001、頁149-160。"
    },
    {
      "indent": 3,
      "text": "[8] S. Ratnasamy, P. Francis, M. Handley, R. Karp, and S. Shenker, A scalable content-addressable network, Proc. of the conf. on Applications, technologies, architectures and protocols for computer communications, August 27-31 2001, pp. 161-172.",
      "ja": "[8] S. Ratnasamy、P.フランシス、M.ハンドレー、R.カープ、およびS. Shenker、スケーラブルな連想ネットワーク、PROC。 CONFの。コンピュータ通信のためのアプリケーション、技術、アーキテクチャやプロトコル、頁161-172 2001年8月27-31に。"
    },
    {
      "indent": 3,
      "text": "[9] C. Tang, Z. Xu, and M. Mahalingam, pSearch: information retrieval in structured overlays, First Workshop on Hot Topics in Networks. Also Computer Communication Review, Volume 33, Number 1, January 2003, Oct 28-29 2002.",
      "ja": "[9] C.唐、Z.徐、及びM. Mahalingam、pSearch：ネットワークにおけるホットな話題に構造化オーバレイにおける情報検索、最初のワークショップ。また、コンピュータコミュニケーションレビュー、33巻、ナンバー1、2003年1月、2002年10月28-29。"
    },
    {
      "indent": 3,
      "text": "[10] W. Nejdl, S. Decker, and W. Siberski, Edutella Project, RDF-based Metadata Infrastructure for P2P Applications, http://edutella.jxta.org/ (2003)",
      "ja": "[10] W. Nejdl、S.デッカー、及びW. Siberski、Edutellaプロジェクト、P2PアプリケーションのRDFベースのメタデータ・インフラストラクチャ、http://edutella.jxta.org/（2003）"
    },
    {
      "indent": 3,
      "text": "[11] K. Aberer and M. Hauswirth, Peer-to-peer information systems: concepts and models, state-of-the-art, and future systems, ACM SIGSOFT Software Engineering Notes, Proc. 8th European software engineering conference held jointly with 9th ACM SIGSOFT international symposium on foundations of software engineering 26 (5) (2001)",
      "ja": "[11] K. Aberer及びM. Hauswirth、ピアツーピア情報システム：概念とモデル、最先端の、および将来のシステム、ACM SIGSOFTソフトウェアエンジニアリングノート、PROC。ソフトウェア工学26の基盤の上に第9回ACM SIGSOFT国際シンポジウムと合同で開催された第8回ヨーロッパのソフトウェア工学会議（5）（2001）"
    },
    {
      "indent": 3,
      "text": "[12] L. Zhou and R. van Renesse, P6P: a peer-to-peer approach to internet infrastructure, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[12] L.周とR.バンレネッセ、P6P：インターネットインフラストラクチャ、ピアツーピアシステムに関する第3回国際ワークショップ、2004年2月26-27へのピア・ツー・ピアのアプローチ。"
    },
    {
      "indent": 3,
      "text": "[13] Citeseer, Citeseer Scientific Literature Digital Library, http://citeseer.ist.psu.edu/ (2004)",
      "ja": "[13] Citeseer、Citeseer科学文学電子図書館、http://citeseer.ist.psu.edu/（2004）"
    },
    {
      "indent": 3,
      "text": "[14] D. Milojicic, V. Kalogeraki, R. Lukose, K. Nagaraja, J. Pruyne, B. Richard, S. Rollins, and Z. Xu, Peer-to-Peer Computing, HP Technical Report, HPL-2002-57 2002.",
      "ja": "[14] D. Milojicic、V. Kalogeraki、R. Lukose、K.ナーガラージャ、J. Pruyne、B.リチャード、S.ロリンズ、及びZ.徐、ピア・ツー・ピア・コンピューティング、HPテクニカルレポート、HPL-2002 -57 2002。"
    },
    {
      "indent": 3,
      "text": "[15] K. Aberer and M. Hauswirth, An overview on peer-to-peer information systems, Workshop on Distributed Data and Structures WDAS-2002 2002.",
      "ja": "[15] K. Aberer及びM. Hauswirth、ピア・ツー・ピア・情報システムの概要、分散データ及び構造WDAS-2002 2002年のワークショップ。"
    },
    {
      "indent": 3,
      "text": "[16] F. DePaoli and L. Mariani, Dependability in Peer-to-Peer Systems, IEEE Internet Computing 8 (4) (2004) 54-61.",
      "ja": "[16] F. DePaoli及びL. Marianiの、ピア・ツー・ピアシステムにおけるディペンダビリティ、IEEEインターネットコンピューティング8（4）（2004）54-61。"
    },
    {
      "indent": 3,
      "text": "[17] B. Yeager, Proposed research tracks, Email to the Internet Research Task Force IRTF P2P Research Group, Nov 10 2003.",
      "ja": "[17] B.イェーガー、提案された研究のトラック、インターネットリサーチタスクフォースIRTF P2P研究グループへの電子メール、2003年11月10日。"
    },
    {
      "indent": 3,
      "text": "[18] H. Balakrishnan, M. F. Kaashoek, D. Karger, R. Morris, and I. Stoica, Looking up data in P2P systems, Communications of the ACM 46 (2) (2003) 43-48.",
      "ja": "[18] H.バラクリシュナン、M. F. Kaashoek、D.カーガー、R.モリス、およびI.ストイカ、P2Pシステムにおけるデータを探して、ACM 46（2）（2003）43-48の通信。"
    },
    {
      "indent": 3,
      "text": "[19] D. Kossmann, The state of the art in distributed query processing, ACM Computing Surveys 32 (4) (2000) 422-469.",
      "ja": "[19] D. Kossmann、分散クエリ処理における技術の状態は、ACMコンピューティングは、32（4）（2000）422から469を調査します。"
    },
    {
      "indent": 3,
      "text": "[20] B. Gedik and L. Liu, Reliable peer-to-peer information monitoring through replication, Proc. 22nd Int'l Symp. on Reliable Distributed Systems, 6-8 Oct 2003, pp. 56-65.",
      "ja": "[20] B. GedikとL.リュウ、レプリケーションを介して信頼性のピア・ツー・ピア情報モニタリング、PROC。第22回国際SYMP。信頼性の高い分散システム、6-8 2003年10月、頁56-65。"
    },
    {
      "indent": 3,
      "text": "[21] S.-M. Shi, Y. Guangwen, D. Wang, J. Yu, S. Qu, and M. Chen, Making peer-to-peer keyword searching feasible using multi-level partitioning, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[21] S.-M.市、Y. Guangwen、D.ワング、J.ゆう、S.ク、およびM.チェン、ピア・ツー・ピアで可能用いたマルチレベルのパーティション、第3回国際ワークショップを検索するピア・ツー・ピア・キーワードの作成システムズ、2004年2月26-27。"
    },
    {
      "indent": 3,
      "text": "[22] R. Huebsch, J. M. Hellerstein, N. Lanham, B. T. Loo, S. Shenker, and I. Stoica, Querying the Internet with PIER, Proc. 29th Int'l Conf. on Very Large Databases VLDB'03, September 2003.",
      "ja": "[22] R. Huebsch、J. M. Hellerstein、N.ランハム、B. T.ルー、S. Shenker、およびI.ストイカ、桟橋、PROCとインターネットのクエリ。第29回国際コンファレンス。大規模データベースVLDB'03、2003年9月に。"
    },
    {
      "indent": 3,
      "text": "[23] J. M. Hellerstein, Toward network data independence, ACM SIGMOD Record 32 (3) (2003) 34-40.",
      "ja": "[23] J. M. Hellerstein、ネットワークデータ独立に向けて、ACM SIGMODレコード32（3）（2003）34-40。"
    },
    {
      "indent": 3,
      "text": "[24] K. Gummadi, R. Gummadi, S. Gribble, S. Ratnasamy, S. Shenker, and I. Stoica, The impact of DHT routing geometry on resilience and proximity, Proc. 2003 conference on Applications, Technologies, Architectures and Protocols for Computer Communications 2003, pp. 381-394.",
      "ja": "[24] K. Gummadi、R. Gummadi、S. Gribble、S. Ratnasamy、S. Shenker、およびI.ストイカ、レジリエンスおよび近接、PROCにDHTルーティングジオメトリの影響。コンピュータコミュニケーション2003年、頁381から394のためのアプリケーション、技術、アーキテクチャとプロトコルの2003の会議。"
    },
    {
      "indent": 3,
      "text": "[25] N. Daswani, H. Garcia-Molina, and B. Yang, Open Problems in Data- sharing Peer-to-peer Systems, The 9th Int'l Conf. on Database Theory (ICDT 2003), Siena, Italy, 8-10 January (2003)",
      "ja": "[25] N. Daswani、H.ガルシア - モリーナ、およびB.ヤン、Data-用に開く問題ピア・ツー・ピア・システムを共有し、第9国際カンファレンス。データベース論（ICDT 2003年）に、シエナ、イタリア、8-10 1月（2003年）"
    },
    {
      "indent": 3,
      "text": "[26] B. Cooper and H. Garcia-Molina, Studying search networks with SIL, Second Int'l Workshop on Peer-to-Peer Systems IPTPS 03, 20- 21 February 2003.",
      "ja": "[26] B.クーパーとH.ガルシア - モリーナ、ピア・ツー・ピアシステムIPTPS 03、20- 2003年2月21日にSIL、第二の国際ワークショップで検索ネットワークを学びます。"
    },
    {
      "indent": 3,
      "text": "[27] M. Bawa, Q. Sun, P. Vinograd, B. Yang, B. Cooper, A. Crespo, N. Daswani, P. Ganesan, H. Garcia-Molina, S. Kamvar, S. Marti, and M. Schlossed, Peer-to-peer research at Stanford, ACM SIGMOD Record 32 (3) (2003) 23-28.",
      "ja": "[27] M.バワ、Q.日、P. Vinograd、B.ヤン、B.クーパー、A.クレスポ、N. Daswani、P・ガネサン、H.ガルシア - モリーナ、S. Kamvar、S.マルティ、及びM. Schlossed、スタンフォード大学のピアツーピア研究、ACM SIGMODレコード32（3）（2003）23-28。"
    },
    {
      "indent": 3,
      "text": "[28] B. Yang and H. Garcia-Molina, Improving search in peer-to-peer networks, Proc. 22nd IEEE Int'l Conf. on Distributed Computing Systems, July 2002.",
      "ja": "[28] B. YangとH.ガルシア - モリーナ、ピアツーピアネットワーク、PROCで検索を向上させることができます。第22回IEEE国際コンファレンス。分散コンピューティングシステム、2002年7月に。"
    },
    {
      "indent": 3,
      "text": "[29] B. Yang and H. Garcia-Molina, Efficient search in peer-to-peer networks, Proc. 22nd Int'l Conf. on Distributed Computing Systems, July 2-5 2002.",
      "ja": "[29] B. YangとH.ガルシア - モリーナ、ピア・ツー・ピアネットワークにおける効率的な検索、PROC。第22回国際コンファレンス。分散コンピューティングシステム、7月2-5 2002年。"
    },
    {
      "indent": 3,
      "text": "[30] C. Plaxton, R. Rajaraman, and A. Richa, Accessing nearby copies of replicated objects in a distributed environment, ACM Symp. on Parallel Algorithms and Architectures (1997)",
      "ja": "[30] C. Plaxton、R. Rajaraman共著、及びA. Richa、分散環境、ACM SYMPにレプリケートされたオブジェクトの近くのコピーにアクセスします。並列アルゴリズムとアーキテクチャ（1997）に"
    },
    {
      "indent": 3,
      "text": "[31] B. Zhao, L. Huang, J. Stribling, S. Rhea, A. Joseph, and J. Kubiatowicz, Tapestry: A Resilient Global-Scale overlay for Service Deployment, IEEE Journal on Selected Areas in Communications 22 (1) (2004) 41-53.",
      "ja": "[31] B.趙、L.黄、J. Stribling、S.レア、A.ジョセフ、およびJ. Kubiatowicz、タペストリー：サービス展開のための弾性地球規模のオーバレイ、IEEEジャーナル・コミュニケーションズ22で選択された領域に（1 ）（2004）41-53。"
    },
    {
      "indent": 3,
      "text": "[32] R. van Renesse and A. Bozdog, Willow: DHT, aggregation and publish/subscribe in one protocol, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[32] R.バンレネッセ及びA. Bozdog、ウィロー：DHT、凝集およびつのプロトコル、ピア・ツー・ピアシステムに関する第3回国際ワークショップ2004年2月26-27にパブリッシュ/サブスクライブ。"
    },
    {
      "indent": 3,
      "text": "[33] P. Ganesan, G. Krishna, and H. Garcia-Molina, Canon in G Major: Designing DHTs with Hierarchical Structure, Proc. Int'l Conf. on Distributed Computing Systems ICDCS 2004 2004.",
      "ja": "[33] G主にP・ガネサン、G.クリシュナ、及びH.ガルシア - モリーナ、キヤノン：階層構造、PROCと設計のDHT。国際コンファレンス。分散コンピューティングシステムICDCS 2004 2004に。"
    },
    {
      "indent": 3,
      "text": "[34] I. Stoica, R. Morris, D. Liben-Nowell, D. Karger, M. Kaashoek, F. Dabek, and H. Balakrishnan, Chord: a scalable peer-to-peer lookup protocol for Internet applications, IEEE/ACM Trans. on Networking 11 (1) (2003) 17-32.",
      "ja": "[34] I.ストイカ、R.モリス、D.リベニ-Nowell、D.カーガー、M. Kaashoek、F. Dabek、及びH.バラクリシュナン、コード：インターネットアプリケーションのためのスケーラブルなピア・ツー・ピアルックアッププロトコル、IEEE / ACMトランス。ネットワーク11上の（1）（2003）17-32。"
    },
    {
      "indent": 3,
      "text": "[35] S. Rhea, T. Roscoe, and J. Kubiatowicz, Structured Peer-to-Peer Overlays Need Application-Driven Benchmarks, Proc. 2nd Int'l Workshop on Peer-to-Peer Systems IPTPS'03, February 20-21 2003.",
      "ja": "[35] S.レア、T.ロスコー、およびJ. Kubiatowicz、構造化ピア・ツー・ピアオーバーレイアプリケーションドリブンベンチマーク、PROCを必要とします。ピアツーピアシステムIPTPS'03第2回国際ワークショップ、2003年2月20-21。"
    },
    {
      "indent": 3,
      "text": "[36] D. Loguinov, A. Kumar, and S. Ganesh, Graph-theoretic analysis of structured peer-to-peer systems: routing distances and fault resilience, Proc. 2003 conference on Applications, Technologies, Architectures and Protocols for Computer Communications, August 25-29 2003, pp. 395-406.",
      "ja": "[36] D. Loguinov、A.クマー、およびS.ガネーシュ、構造化ピアツーピアシステムのグラフ理論的解析：ルーティング距離と障害回復力、PROC。コンピュータ通信のためのアプリケーション、技術、アーキテクチャとプロトコルの2003会議、8月25-29 2003年、頁395から406まで。"
    },
    {
      "indent": 3,
      "text": "[37] F. Kaashoek and D. Karger, Koorde: A simple degree-optimal hash table, Second Int'l Workshop on Peer-to-Peer Systems IPTPS'03, 20-21 February 2003.",
      "ja": "[37] F。 Kasoekaと配信。効果的な、phurade：ピア・ツー・ピア・システム、SO-ipatapasah03、20-21 2003年2月のシンプル度、最適なハッシュテーブル、intala第2回ワークショップ。"
    },
    {
      "indent": 3,
      "text": "[38] N. Harvey, M. B. Jones, S. Saroiu, M. Theimer, and A. Wolman, SkipNet: A Scalable Overlay Network with Practical Locality Properties, Proc. Fourth USENIX Symp. on Internet Technologies and Systems USITS'03, March 2003.",
      "ja": "[38] N.ハーベイ、M. B.ジョーンズ、S. Saroiu、M. Theimer、およびA.ウォルマン、SkipNet：実用的な地域特性、PROCとスケーラブルオーバレイネットワーク。第四USENIX SYMP。インターネット技術・システムUSITS'03、2003年3月に。"
    },
    {
      "indent": 3,
      "text": "[39] I. Gupta, K. Birman, P. Linga, A. Demers, and R. Van Renesse, Kelips: Building an efficient and stable P2P DHT through increased memory and background overhead, Second Int'l Workshop on Peer-to-Peer Systems IPTPS 03, Feb 20-21 2003.",
      "ja": "[39] I.グプタ、K.バーマン、P.リンガ、A.デマーズ、及びR.ヴァンレネッセ、Kelips：増加メモリと背景オーバーヘッドを通じて効率的かつ安定的なP2PのDHTを構築する、第二国際ワークショップピア・ツー-PeerシステムIPTPS 03、2003 2月20-21。"
    },
    {
      "indent": 3,
      "text": "[40] J. Cates, Robust and Efficient Data Management for a Distributed Hash Table, Master's Thesis, May 2003.",
      "ja": "[40] J.ケイツ、分散ハッシュテーブルのための堅牢で効率的なデータ管理、修士論文、2003年5月。"
    },
    {
      "indent": 3,
      "text": "[41] J. Aspnes and G. Shah, Skip graphs, Proc. 14th annual ACM-SIAM symposium on discrete algorithms (2003) 384-393.",
      "ja": "[41] J. Aspnes及びG.シャー、スキップグラフ、PROC。離散アルゴリズム（2003）384-393第14回年次ACM-SIAMシンポジウム。"
    },
    {
      "indent": 3,
      "text": "[42] K. Aberer, P. Cudre-Mauroux, A. Datta, Z. Despotovic, M. Hauswirth, M. Punceva, and R. Schmidt, P-Grid: a self-organizing structured P2P system, ACM SIGMOD Record 32 (3) (2003) 29-33.",
      "ja": "[42] K. Aberer、P. Cudre-モルー、A.ダッタ、Z. Despotovic、M. Hauswirth、M. Punceva、及びR.シュミット、P-グリッド：自己組織化構造化P2Pシステム、ACM SIGMODレコード32 （3）（2003）29-33。"
    },
    {
      "indent": 3,
      "text": "[43] B. Zhao, Y. Duan, L. Huang, A. Joseph, and J. Kubiatowicz, Brocade: landmark routing on overlay networks, First Int'l Workshop on Peer-to-Peer Systems IPTPS'02, March 2002.",
      "ja": "[43] B.趙、Y.ドゥアン、L.黄、A.ジョセフ、およびJ. Kubiatowicz、ブロケード：オーバレイネットワーク上のランドマークルーティング、まず国際ワークショップシステムIPTPS'02 2002マーチをピアツーピア。"
    },
    {
      "indent": 3,
      "text": "[44] S. Ratnasamy, S. Shenker, and I. Stoica, Routing algorithms for DHTs: some open questions, Proc. First Int'l Workshop on Peer to Peer Systems, IPTPS 2002, March 2002.",
      "ja": "[44] S. Ratnasamy、S. Shenker、およびI.ストイカ、のDHTのルーティングアルゴリズム：いくつかの未解決の問題、PROC。システムをピアツーピアの最初の国際ワークショップ、IPTPS 2002、2002年3月。"
    },
    {
      "indent": 3,
      "text": "[45] P. Maymounkov and D. Mazieres, Kademlia: A peer-to-peer information system based on the XOR metric, Proc. First Int'l Workshop on Peer to Peer Systems, IPTPS 2002, March 7-8 2002.",
      "ja": "[45] P. Maymounkov及びD. Mazieres、Kademliaの：XORメトリック、PROCに基づくピアツーピア情報システム。システムをピアツーピアの最初の国際ワークショップは、2002月7-8、2002 IPTPS。"
    },
    {
      "indent": 3,
      "text": "[46] D. Malkhi, M. Naor, and D. Ratajczak, Viceroy: a scalable and dynamic emulation of the butterfly, Proc. 21st annual symposium on principles of distributed computing PODC, July 21-24 2002, pp. 183-192.",
      "ja": "[46] D. Malkhi、M. Naor、及びD. Ratajczak、ヴィセロイ：蝶、PROCのスケーラブルかつ動的エミュレーション。分散コンピューティングPODCの原則の第21回年次シンポジウム、2002年7月21-24頁。183-192。"
    },
    {
      "indent": 3,
      "text": "[47] X. Li and C. Plaxton, On name resolution in peer to peer networks, Proc. ACM SIGACT Annual Workshop on Principles of Mobile Computing POMC'02 2002, pp. 82-89.",
      "ja": "ネットワークをピアツーピアで名前解決、PROCについて[47] X. LiおよびC. Plaxton、。モバイルコンピューティングPOMC'02 2002、PP。82-89の原則にACM SIGACT年次ワークショップ。"
    },
    {
      "indent": 3,
      "text": "[48] N. Harvey, J. Dunagan, M. B. Jones, S. Saroiu, M. Theimer, and A. Wolman, SkipNet: A Scalable overlay Network with Practical Locality Properties, Microsoft Research Technical Report MSR-TR- 2002-92 (2002)",
      "ja": "[48] N.ハーベイ、J. Dunagan、MBジョーンズ、S. Saroiu、M. Theimer、およびA.ウォルマン、SkipNet：実用的な地域特性、マイクロソフトリサーチ技術報告MSR-TR-2002から92（持つスケーラブルオーバレイネットワーク2002年）"
    },
    {
      "indent": 3,
      "text": "[49] D. Karger, E. Lehman, T. Leighton, R. Panigraphy, M. Levin, and D. Lewin, Consistent hashing and random trees: distributed caching protocols for relieving hot spots on the World Wide Web, ACM Symp. on Theory of Computing (1997)",
      "ja": "[49] D.カーガー、E.リーマン、T.レイトン、R. Panigraphy、M.レヴィン、およびD.レヴィン、コンシステントハッシュ法とランダム木：ワールド・ワイド・ウェブ、ACM SYMP上のホットスポットを緩和するための分散キャッシュ・プロトコル。コンピューティングの上の理論（1997）"
    },
    {
      "indent": 3,
      "text": "[50] W. Litwin, M. Neimat, and D. Schneider, LH* - a scalable, distributed data structure, ACM Trans. on Database Systems (TODS) 21 (4) (1996) 480-525.",
      "ja": "[50] W.リトウィン、M. Neimat、およびD.シュナイダー、LH *  - スケーラブルな分散データ構造、ACMトランス。データベースシステム（TODS）21（4）（1996）480から525に。"
    },
    {
      "indent": 3,
      "text": "[51] R. Devine, Design and Implementation of DDH: A Distributed Dynamic Hashing Algorithm, Proc. 4th Int'l Conf. on Foundations of Data Organizations and Algorithms 1993.",
      "ja": "[51] R.ディバイン、DDHの設計と実装：分散動的ハッシュアルゴリズム、PROC。第4回国際コンファレンス。データ組織とアルゴリズム1993の基礎に。"
    },
    {
      "indent": 3,
      "text": "[52] W. Litwin, M.-A. Niemat, and D. Schneider, LH* - Linear Hashing for Distributed Files, Proc. ACM Int'l Conf. on Mngt. of Data SIGMOD, May 1993, pp. 327-336.",
      "ja": "[52] W.リトウィン、M.-A. Niemat、およびD.シュナイダー、LH *  - 分散ファイル、PROCための線形ハッシュ。 ACM国際コンファレンス。 MNGTに。データSIGMOD、1993年5月、頁327-336の。"
    },
    {
      "indent": 3,
      "text": "[53] C. Tempich, S. Staab, and A. Wranik, Remindin': semantic query routing in peer-to-peer networks, Proc. 13th conference on World Wide Web, New York, NY, USA, May 17-20 (2004) 640-649.",
      "ja": "[53] C. Tempich、S.スターブ、及びA. Wranik、Remindin'：ピアツーピアネットワークにおける意味論的クエリルーティング、PROC。ワールド・ワイド・ウェブ、ニューヨーク、NY、USA、（2004）640-649月17-20第13回会議。"
    },
    {
      "indent": 3,
      "text": "[54] B. T. Loo, R. Huebsch, I. Stoica, and J. M. Hellerstein, The case for a hybrid P2P search infrastructure, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[54] B. T.ルー、R. Huebsch、I.ストイカ、及びJ. M. Hellerstein、ハイブリッドP2P検索インフラストラクチャの場合、ピア・ツー・ピアシステムに関する第3回国際ワークショップ2004年2月26-27。"
    },
    {
      "indent": 3,
      "text": "[55] M. Cai and M. Frank, RDFPeers: a scalable distributed RDF repository based on a structured peer-to-peer network, Proc. 13th conference on World Wide Web, May 17-20 2004, pp. 650-657.",
      "ja": "[55] M.カイ及びM.フランク、RDFPeers：構造化されたピア・ツー・ピア・ネットワーク、PROCに基づくスケーラブルな分散RDFリポジトリ。 World Wide Web上の第13回会議、月17-20 2004年、頁650から657まで。"
    },
    {
      "indent": 3,
      "text": "[56] Z. Zhang, S.-M. Shi, and J. Zhu, SOMO: Self-organized metadata overlay for resource management in P2P DHTs, Second Int'l Workshop on Peer-to-Peer Systems IPTPS'03, Feb 20-21 2003.",
      "ja": "[56] Z.チャン、S.-M.市、およびJ.朱、SOMO：ピア・ツー・ピアシステムIPTPS'03を上のP2PのDHT、第二の国際ワークショップでのリソース管理のための自己組織化メタデータのオーバーレイ、2003年2月20-21。"
    },
    {
      "indent": 3,
      "text": "[57] B. Yang and H. Garcia-Molina, Designing a super-peer network, Proc. 19th Int'l Conf. on Data Engineering ICDE, March 2003.",
      "ja": "[57] B. YangとH.ガルシア - モリーナ、スーパーピア・ネットワーク、PROCを設計します。第19回国際コンファレンス。データ工学ICDE、2003年3月に。"
    },
    {
      "indent": 3,
      "text": "[58] I. Tatarinov, P. Mork, Z. Ives, J. Madhavan, A. Halevy, D. Suciu, N. Dalvi, X. Dong, Y. Kadiyska, and G. Miklau, The Piazza peer data management project, ACM SIGMOD Record 32 (3) (2003) 47-52.",
      "ja": "[58] I.タタリノフ、P.モルク、Z.アイブス、J. Madhavan、A. HALEVY、D. Suciu、N. Dalvi、X.ドン、Y. Kadiyska、及びG. Miklau、広場ピアデータ管理プロジェクト、ACM SIGMODレコード32（3）（2003）47-52。"
    },
    {
      "indent": 3,
      "text": "[59] W. Nejdl, W. Siberski, and M. Sintek, Design Issues and Challenges for RDF- and schema-based peer-to-peer systems, ACM SIGMOD Record 32 (3) (2003) 41-46.",
      "ja": "[59] W. Nejdl、W. Siberski、及びM. Sintek、設計問題とRDF-の課題とスキーマベースのピア・ツー・ピア・システム、ACM SIGMODレコード32（3）（2003）41-46。"
    },
    {
      "indent": 3,
      "text": "[60] S. Joseph and T. Hoshiai, Decentralized Meta-Data Strategies: Effective Peer-to-Peer Search, IEICE Trans. Commun. E86-B (6 June) (2003) 1740-1753.",
      "ja": "[60] S.ヨセフとT.星合、分散メタデータ戦略：効果的なピア・ツー・ピアの検索、信学論。 COMMUN。 E86-B（6月6日）（2003）1740から1753。"
    },
    {
      "indent": 3,
      "text": "[61] Y. Chawathe, S. Ratnasamy, L. Breslau, N. Lanham, and S. Shenker, Making gnutella-like P2P systems scalable, Proc. 2003 conference on Applications, Technologies, Architectures and Protocols for Computer Communications, August 25-29 2003, pp. 407-418.",
      "ja": "[61] Y. Chawathe、S. Ratnasamy、L.ブレスラウ、N.ランハム、およびS. Shenker、PROC、グヌーテラのようなP2Pシステムは、スケーラブルとなります。コンピュータ通信のためのアプリケーション、技術、アーキテクチャとプロトコルの2003会議、8月25-29 2003年、頁407から418まで。"
    },
    {
      "indent": 3,
      "text": "[62] M. Bawa, G. S. Manku, and P. Raghavan, SETS: search enhanced by topic segmentation, Proc. 26th annual international ACM SIGIR conference on Research and Development in Information Retrieval 2003, pp. 306-313.",
      "ja": "[62] M.バワ、G. S. Manku、及びP.ラガバンは、セット：話題分割、PROCによって増強検索。 2003年、頁306-313情報検索における研究及び開発に関する第26回国際ACM SIGIR会議。"
    },
    {
      "indent": 3,
      "text": "[63] H. Sunaga, M. Takemoto, and T. Iwata, Advanced peer to peer network platform for various services - SIONet Semantic Information Oriented Network, Proc. Second Int'l Conf. on Peer to Peer Computing, Sept 5-7 2002, pp. 169-170.",
      "ja": "[63] H.須永、M.竹本、及びT.磐田、高度な様々なサービスのためのネットワークプラットフォームをピアツーピア -  SIONet意味情報ネットワーク、PROCを指向。第二に国際コンファレンス。ピア上のコンピューティング、9月5-7 2002年、頁169-170をピアに。"
    },
    {
      "indent": 3,
      "text": "[64] M. Schlosser, M. Sintek, S. Decker, and W. Nejdl, HyperCuP - Hypercubes, Ontologies and P2P Networks, Springer Lecture Notes on Computer Science, Agents and Peer-to-Peer Systems Vol. 2530 (2002)",
      "ja": "[64] M. Schlosser、M. Sintek、S.デッカー、およびW. Nejdl、HyperCuP  - ハイパーキューブ、オントロジーとP2Pネットワーク、コンピュータサイエンス、エージェントおよびピアツーピアシステムの巻上スプリンガー講義ノート。 2530（2002）"
    },
    {
      "indent": 3,
      "text": "[65] M. Ripeanu, A. Iamnitchi, and P. Foster, Mapping the Gnutella network, IEEE Internet Computing 6 (1) (2002) 50-57.",
      "ja": "[65] M. Ripeanu、A. Iamnitchi、及びP.フォスター、Gnutellaネットワークのマッピング、IEEEインターネットコンピューティング6（1）（2002）50-57。"
    },
    {
      "indent": 3,
      "text": "[66] Q. Lv, S. Ratnasamy, and S. Shenker, Can Heterogeneity Make Gnutella Scalable?, Proc. 1st Int'l Workshop on Peer-to-Peer Systems IPTPS2002, March 7-8 2002.",
      "ja": "[66] Q. Lvを、S. Ratnasamy、およびS. Shenkerは、不均一性はグヌーテラスケーラブルな？PROCを作ることができます。ピア・ツー・ピアシステムIPTPS2002、月7-8 2002年第1回国際ワークショップ。"
    },
    {
      "indent": 3,
      "text": "[67] Q. Lv, P. Cao, E. Cohen, K. Li, and S. Shenker, Search and replication in unstructured peer to peer networks, Proc. 16th international conference on supercomputing, June 22-26 2002, pp. 84-95.",
      "ja": "[67] Q. Lvを、P.ツァオ、E.コーエン、K.リチウム、およびS. Shenker、ネットワークのピア・ツー・ピア非構造における検索および複製、PROC。スーパーコンピューティングの第16回国際会議、6月22-26 2002年、頁84-95。"
    },
    {
      "indent": 3,
      "text": "[68] V. Kalogaraki, D. Gunopulos, and D. Zeinalipour-Yasti, XML schemas: integration and translation: A local search mechanism for peer to peer networks, Proc. 11th ACM international conference on Information and Knowledge management 2002, pp. 300- 307.",
      "ja": "[68] V. Kalogaraki、D. Gunopulos、及びD. Zeinalipour-Yasti、XMLスキーマ：統合と翻訳：ネットワークピア・ツー・ピアのローカル検索機構、PROC。情報とナレッジマネジメント2002年、頁第11回ACM国際会議。300- 307。"
    },
    {
      "indent": 3,
      "text": "[69] O. Babaoglu, H. Meling, and Montresor, Anthill: a framework for the development of agent-based peer-to-peer systems, Proc. IEEE Int'l Conf. on Distributed Computer systems 2002, pp. 15- 22.",
      "ja": "[69] O. Babaoglu、H. Meling、及びモントレ、蟻塚：エージェントベースのピア・ツー・ピア・システムの開発のためのフレームワーク、PROC。 IEEE国際コンファレンス。分散コンピュータ・システム上で2002年、頁15〜22。"
    },
    {
      "indent": 3,
      "text": "[70] M. Jovanovic, Modeling large-scale peer-to-peer networks and a case study of Gnutella, Master's Thesis 2001.",
      "ja": "[70] M.ヨバノビッチ、モデル大規模なピアツーピアネットワークとグヌーテラ、修士論文、2001年ケーススタディ。"
    },
    {
      "indent": 3,
      "text": "[71] I. Clarke, O. Sandberg, B. Wiley, and T. Hong, Freenet: A Distributed Anonymous Information Storage and Retrieval System. Springer, New York, USA, 2001.",
      "ja": "[71] I.クラーク、O.サンドバーグ、B.ワイリー、およびT.香港、フリーネット：分散匿名情報記憶及び検索システム。スプリンガー、ニューヨーク、USA、2001。"
    },
    {
      "indent": 3,
      "text": "[72] J. Harren, J. Hellerstein, R. Huebsch, B. Loo, S. Shenker, and I. Stoica, Complex queries in DHT-based peer-to-peer networks, Proc. First Int'l Workshop on Peer to Peer Systems IPTPS 2002, March 2002.",
      "ja": "[72] J. Harren、J. Hellerstein、R. Huebsch、B.ルー、S. Shenker、およびI.ストイカ、DHTベースのピア・ツー・ピアネットワークにおける複雑なクエリ、PROC。システムIPTPS 2002、2002年3月ピアツーピアの最初の国際ワークショップ。"
    },
    {
      "indent": 3,
      "text": "[73] B. Gedik and L. Liu, PeerCQ: A Decentralized and Self-Configuring Peer-to-Peer Information Monitoring System, Proc. 23rd Int'l Conf. on Distributed Computing Systems ICDCS2003, May 19-22 2003.",
      "ja": "[73] B. GedikとL.リュウ、PeerCQ：システム、PROC監視分散と自己構成ピアツーピア情報。第23回国際コンファレンス。分散コンピューティングシステムICDCS2003、月19-22 2003年。"
    },
    {
      "indent": 3,
      "text": "[74] B. T. Loo, R. Huebsch, J. M. Hellerstein, T. Roscoe, and I. Stoica, Analyzing P2P Overlays with Recursive Queries, Technical Report, CSD-04-1301, January 14 2004.",
      "ja": "[74] B. T.ルー、R. Huebsch、J. M. Hellerstein、T.ロスコー、およびI.ストイカ、再帰クエリ、技術報告、CSD-04から1301まで、2004年1月14日とのP2Pオーバーレイの分析。"
    },
    {
      "indent": 3,
      "text": "[75] R. Avnur and J. Hellerstein, Eddies: continuously adaptive query processing, Proc. 2000 ACM SIGMOD international conference on Management of Data 2000, pp. 261-272.",
      "ja": "[75] R. Avnur及びJ. Hellerstein、渦：連続的に適応クエリ処理、PROC。データ2000の管理に関する2000年ACM SIGMOD国際会議、頁261から272まで。"
    },
    {
      "indent": 3,
      "text": "[76] P. Triantafillou and T. Pitoura, Towards a unifying framework for complex query processing over structured peer-to-peer data networks, Proc. First Int'l Workshop on Databases, Information Systems and Peer-to-Peer Computing DBISP2P, Sept 7-8 2003, pp. 169-183.",
      "ja": "[76] P. Triantafillou及びT. Pitoura、構造化ピアツーピアデータネットワークを介して複雑なクエリ処理のための統一フレームワーク、PROC寄り。データベース、情報システムおよびピアツーピア・コンピューティングDBISP2Pの最初の国際ワークショップ、9月7-8 2003年、頁169から183まで。"
    },
    {
      "indent": 3,
      "text": "[77] A. Gupta, D. Agrawal, and A. E. Abbadi, Approximate range selection queries in peer-to-peer systems, Proc. First Biennial Conf. on Innovative Data Systems Research CIDR 2003 2003.",
      "ja": "[77] A.グプタ、D. Agrawalさん、およびA. E. Abbadi、ピア・ツー・ピア・システム、PROCでおおよその範囲選択クエリを。まずビエンナーレコンファレンス。革新的なデータシステムズリサーチCIDR 2003 2003に。"
    },
    {
      "indent": 3,
      "text": "[78] S. Ratnasamy, P. Francis, and M. Handley, Range queries in DHTs, Technical Report IRB-TR-03-009, July 2003.",
      "ja": "[78] S. Ratnasamy、P.フランシス、およびM.ハンドレー、のDHTにおける範囲クエリ、技術報告IRB-TR-03から009、2003年7月。"
    },
    {
      "indent": 3,
      "text": "[79] S. Ramabhadran, S. Ratnasamy, J. Hellerstein, and S. Shenker, Brief announcement: prefix hash tree, Proc. 23rd Annual ACM SIGACT-SIGOPS Symp. on Principles of Distributed Computing, PODC 2004, July 25-28 2004, pp. 368-368.",
      "ja": "[79] S. Ramabhadran、S. Ratnasamy、J. Hellerstein、およびS. Shenker、簡単な発表：プレフィックスのハッシュツリー、PROC。第23回ACM SIGACT-SIGOPS SYMP。分散コンピューティングの上の原則、PODC 2004、2004年7月25-28頁368から368まで。"
    },
    {
      "indent": 3,
      "text": "[80] A. Andrzejak and Z. Xu, Scalable, efficient range queries for grid information services, Proc. Second IEEE Int'l Conf. on Peer to Peer Computing, September 2002.",
      "ja": "[80] A. Andrzejak及びZ.徐、グリッド情報サービスの拡張性、効率的な範囲クエリ、PROC。第二にIEEE国際コンファレンス。ピア上のコンピューティング、2002年9月をピアに。"
    },
    {
      "indent": 3,
      "text": "[81] C. Schmidt and M. Parashar, Enabling flexible queries with guarantees in P2P systems, IEEE Internet Computing 8 (3) (2004) 19-26.",
      "ja": "[81] C.シュミット及びM. Parashar、P2Pシステムにおける保証と柔軟クエリを有効に、IEEEインターネットコンピューティング8（3）（2004）19-26。"
    },
    {
      "indent": 3,
      "text": "[82] E. Tanin, A. Harwood, and H. Samet, Indexing distributed complex data for complex queries, Proc. National Conf. on Digital Government Research 2004, pp. 81-90.",
      "ja": "[82] E. Tanin、A.ハーウッド、およびH.サメット、複雑なクエリの分散複雑なデータを索引付け、PROC。ナショナルコンファレンス。 2004年、頁81-90デジタル政府研究に関する。"
    },
    {
      "indent": 3,
      "text": "[83] P. Ganesan, M. Bawa, and H. Garcia-Molina, Online Balancing of Range-Partitioned Data with Applications to Peer-to-Peer Systems, Proc. 30th Int'l Conf. on Very Large Data Bases VLDB 2004, 29 August - 3 September 2004.",
      "ja": "[83] P・ガネサン、M.バワ、およびH.ガルシア - モリーナ、レンジ・パーティションのデータのオンラインバランシングピア・ツー・ピアのためのシステム、PROCをアプリケーションと。 30国際コンファレンス。 2004年9月3日 - 非常に大きなデータベースVLDB 2004年8月29日に。"
    },
    {
      "indent": 3,
      "text": "[84] A. Bharambe, M. Agrawal, and S. Seshan, Mercury: Supporting Scalable Multi-Attribute Range Queries, SIGCOMM'04, Aug 30-Sept 3 2004.",
      "ja": "[84] A. Bharambe、M.アグラワル、及びS. Seshan、水星：サポートするスケーラブルなマルチアトリビュートレンジクエリ、SIGCOMM'04、2004年8月30日から9月3日まで。"
    },
    {
      "indent": 3,
      "text": "[85] K. Aberer, Scalable Data Access in P2P Systems Using Unbalanced Search Trees, Workshop on Distributed Data and Structures WDAS-2002 2002.",
      "ja": "[85]アンバランス探索木を使用してK. Aberer、P2Pシステムにおけるスケーラブルなデータアクセス、分散データと構造WDAS-2002 2002年ワークショップ。"
    },
    {
      "indent": 3,
      "text": "[86] K. Aberer, A. Datta, and M. Hauswirth, The Quest for Balancing Peer Load in Structured Peer-to-Peer Systems, Technical Report IC/2003/32 2003.",
      "ja": "[86] K. Aberer、A.ダッタ、及びM. Hauswirth、構造化ピアツーピアシステム、技術報告IC / 32分の2003 2003年ピア負荷を分散するためのクエスト。"
    },
    {
      "indent": 3,
      "text": "[87] W. Litwin, M.-A. Neimat, and D. Schneider, RP*: a family of order-preserving scalable distributed data structures, Proc. 20th Int'l Conf. on Very Large Data Bases VLDB'94, September 12-15 1994.",
      "ja": "[87] W.リトウィン、M.-A. Neimat、およびD.シュナイダー、RP *：順序保存スケーラブルな分散データ構造の家族、PROC。第20回国際コンファレンス。非常に大きなデータベースVLDB'94、9月12-15 1994年。"
    },
    {
      "indent": 3,
      "text": "[88] M. Tsangou, S. Ndiaye, M. Seck, and W. Litwin, Range queries to scalable distributed data structure RP*, Proc. Fifth Workshop on Distributed Data and Structures, WDAS 2003, June 2003.",
      "ja": "[88] M. Tsangou、S. Ndiaye、M. Seck、及びW.リトウィン、スケーラブルな分散データ構造のRP *、PROCの範囲クエリ。分散データと構造、WDAS 2003、2003年6月に第五ワークショップ。"
    },
    {
      "indent": 3,
      "text": "[89] W. Litwin and M.-A. Neimat, k-RP*s: a scalable distributed data structure for high-performance multi-attributed access, Proc. Fourth Int'l Conf. on Parallel and Distributed Information Systems (1996) 120-131.",
      "ja": "[89] W.リトウィンとM.-A. Neimat、K-RPの*は：高性能マルチ起因アクセス、PROCのためのスケーラブルな分散データ構造。第四に国際コンファレンス。並列分散情報システム（1996）120-131に。"
    },
    {
      "indent": 3,
      "text": "[90] T. Hodes, S. Czerwinski, B. Zhao, A. Joseph, and R. Katz, An architecture for secure wide-area service discovery, Wireless Networks 8 (2/3) (2002) 213-230.",
      "ja": "[90] T. Hodes、S. Czerwinski、B.趙、A.ジョセフ、およびR.カッツ、安全な広域サービス発見のためのアーキテクチャ、ワイヤレスネットワーク8（2/3）（2002）213から230。"
    },
    {
      "indent": 3,
      "text": "[91] M. Cai, M. Frank, J. Chen, and P. Szekely, MAAN: A Multi-Attribute Addressable Network for Grid Information Services, Proc. Int'l Workshop on Grid Computing, November 2003.",
      "ja": "グリッド情報サービス、PROC用マルチアトリビュートアドレス可能ネットワーク：[91] M.カイ、M.フランク、J.チェン、およびP.セーケイ、MAAN。グリッドコンピューティング、2003年11月に国際ワークショップ。"
    },
    {
      "indent": 3,
      "text": "[92] R. van Renesse, K. P. Birman, and W. Vogels, Astrolabe: A robust and scalable technology for distribute system monitoring, management and data mining, ACM Trans. on Computer Systems 21 (2) (2003) 164-206.",
      "ja": "[92] R.バンレネッセ、K. P.バーマン、およびW. VOGELS、アストロラーベ：システム監視、管理、およびデータマイニング、ACMトランスを配布するための堅牢でスケーラブルな技術。コンピュータシステム21（2）（2003）164から206に。"
    },
    {
      "indent": 3,
      "text": "[93] R. Bhagwan, G. Varghese, and G. Voelker, Cone: Augmenting DHTs to support distributed resource discovery, Technical Report, CS2003- 0755, July 2003.",
      "ja": "[93] R. Bhagwan、G. Varghese、およびG. Voelker、コーン：分散リソース発見をサポートするための拡張のDHT、テクニカルレポート、CS2003- 0755、2003年7月。"
    },
    {
      "indent": 3,
      "text": "[94] K. Albrecht, R. Arnold, and R. Wattenhofer, Join and Leave in Peer-to-Peer Systems: The DASIS Approach, Technical Report 427, Department of Computer Science, November 2003.",
      "ja": "[94] K.アルブレヒト、R.アーノルド、およびR. Wattenhofer、ピア・ツー・ピアシステムに参加しておきます：DASISアプローチ、技術報告書427、コンピュータサイエンス、2003年11月の学科。"
    },
    {
      "indent": 3,
      "text": "[95] K. Albrecht, R. Arnold, and R. Wattenhofer, Aggregating information in peer-to-peer systems for improved join and leave, Proc. Fourth IEEE Int'l Conf. on Peer-to-Peer Computing, 25-27 August 2004.",
      "ja": "改善された参加して残す、PROCためのピア・ツー・ピア・システムで情報を集計[95] K.アルブレヒト、R.アーノルド、およびR. Wattenhofer、。第四にIEEE国際コンファレンス。ピアツーピアコンピューティング、25-27 2004年8月。"
    },
    {
      "indent": 3,
      "text": "[96] A. Montresor, M. Jelasity, and O. Babaoglu, Robust aggregation protocol for large-scale overlay networks, Technical Report UBLCS-2003-16, December 2003.",
      "ja": "[96] A.モントレ、M. Jelasity、およびO. Babaoglu、大規模オーバーレイネットワークのためのロバスト集約プロトコル、技術報告UBLCS-2003-16 2003年12月。"
    },
    {
      "indent": 3,
      "text": "[97] M. Jelasity, W. Kowalczyk, and M. van Steen, An Approach to Aggregation in Large and Fully Distributed Peer-to-Peer Overlay Networks, Proc. 12th Euromicro Conf. on Parallel, Distributted and Network based Processing PDP 2004, February 2004.",
      "ja": "[97] M. Jelasity、W. Kowalczyk、及びM.ヴァンスティーン、大きくて完全分散型ピアツーピア・オーバーレイ・ネットワークにおける集約へのアプローチ、PROC。 12日Euromicroコンファレンス。パラレル、Distributtedおよびネットワーク上の処理PDP 2004年、2004年2月に基づきます。"
    },
    {
      "indent": 3,
      "text": "[98] P. Yalagandula and M. Dahlin, A scalable distributed information management system, SIGCOMM'04, Aug 30-Sept 3 2004.",
      "ja": "[98] P. Yalagandula及びM.ダーリン、スケーラブルな分散型情報管理システム、SIGCOMM'04、2004年8月30日から9月3日まで。"
    },
    {
      "indent": 3,
      "text": "[99] M. Bawa, A. Gionis, H. Garcia-Molina, and R. Motwani, The price of validity in dynamic networks, Proc. 2004 ACM SIGMOD Int'l Conf. on the management of data 2004, pp. 515-526.",
      "ja": "[99] M.バワ、A. Gionis、H.ガルシア - モリーナ、およびR. Motwani、動的ネットワークにおける有効性の価格、PROC。 2004年ACM SIGMOD国際コンファレンス。データ2004の管理上、頁515から526まで。"
    },
    {
      "indent": 3,
      "text": "[100] J. Aspnes, J. Kirsch, and A. Krishnamurthy, Load Balancing and Locality in Range-Queriable Data Structures, Proc. 23rd Annual ACM SIGACT-SIGOPS Symp. on Principles of Distributed Computing PODC 2004, July 25-28 2004.",
      "ja": "[100] J. Aspnes、J.キルシュ、及びA. Krishnamurthy、範囲照会可能データ構造、PROCで分散と局所性をロードします。第23回ACM SIGACT-SIGOPS SYMP。分散コンピューティングPODC 2004の原則、2004年7月25-28上。"
    },
    {
      "indent": 3,
      "text": "[101] G. On, J. Schmitt, and R. Steinmetz, The effectiveness of realistic replication strategies on quality of availability for peer-to-peer systems, Proc. Third Int'l IEEE Conf. on Peer-to-Peer Computing, Sept 1-3 2003, pp. 57-64.",
      "ja": "[101] G.で、J.シュミット、およびR.シュタインメッツ、ピア・ツー・ピア・システム、PROCの可用性の品質上の現実的な複製戦略の有効性。第三に国際IEEEコンファレンス。ピアツーピアコンピューティング、9月1-3 2003年、頁57-64。"
    },
    {
      "indent": 3,
      "text": "[102] D. Geels and J. Kubiatowicz, Replica management should be a game, Proc. SIGOPS European Workshop, September 2003.",
      "ja": "[102] D. Geels及びJ. Kubiatowicz、レプリカ管理ゲーム、PROCであるべきです。 SIGOPSヨーロッパのワークショップ、2003年9月。"
    },
    {
      "indent": 3,
      "text": "[103] E. Cohen and S. Shenker, Replication strategies in unstructured peer to peer networks, Proc. 2002 conference on applications, technologies, architectures and protocols for computer communications 2002, pp. 177-190.",
      "ja": "[103] E.コーエンおよびS. Shenker、ネットワークのピア・ツー・ピア非構造における複製戦略、PROC。 2002コンピュータ通信2002年のためのアプリケーション、技術、アーキテクチャおよびプロトコルの会議、PP。177-190。"
    },
    {
      "indent": 3,
      "text": "[104] E. Cohen and S. Shenker, P2P and multicast: replication strategies in unstructured peer to peer networks, Proc. 2002 conference on applications, technologies, architectures and protocols for computer communications 2002, pp. 177-190.",
      "ja": "[104] E.コーエンおよびS. Shenker、P2Pマルチキャスト：ネットワークのピア・ツー・ピア構造化されていない、PROCで複製戦略。 2002コンピュータ通信2002年のためのアプリケーション、技術、アーキテクチャおよびプロトコルの会議、PP。177-190。"
    },
    {
      "indent": 3,
      "text": "[105] H. Weatherspoon and J. Kubiatowicz, Erasure coding vs replication: a quantative comparison, Proc. First Int'l Workshop on Peer to Peer Systems IPTPS'02, March 2002.",
      "ja": "[105] H.ウェザー及びJ. Kubiatowicz、複製VS消去コード：定量的比較、PROC。システムTPS 02、2002年3月ピアツーピアの最初の国際ワークショップ。"
    },
    {
      "indent": 3,
      "text": "[106] D. Lomet, Replicated indexes for distributed data, Proc. Fourth Int'l Conf. on Parallel and Distributed Information Systems, December 18-20 1996, pp. 108-119.",
      "ja": "[106] D. Lomet、分散データの複製インデックス、PROC。第四に国際コンファレンス。並列分散情報システム上、頁108-119 1996年12月18-20。"
    },
    {
      "indent": 3,
      "text": "[107] V. Gopalakrishnan, B. Silaghi, B. Bhattacharjee, and P. Keleher, Adaptive Replication in Peer-to-Peer Systems, Proc. 24th Int'l Conf. on Distributed Computing Systems ICDCS 2004, March 23-26 2004.",
      "ja": "[107] V. Gopalakrishnan、B. Silaghi、B. Bhattacharjee、及びP. Keleher、ピア・ツー・ピアシステムにおける適応型レ​​プリケーション、PROC。第24回国際コンファレンス。分散コンピューティングシステムICDCS 2004年3月23-26 2004。"
    },
    {
      "indent": 3,
      "text": "[108] S.-D. Lin, Q. Lian, M. Chen, and Z. Zhang, A practical distributed mutual exclusion protocol in dynamic peer-to-peer systems, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[108] S.-D. LIN、Q.リアン、M.チェン、およびZ.チャン、動的なピアツーピアシステムにおける実用的分散相互排除プロトコル、ピア・ツー・ピアシステムに関する第3回国際ワークショップ2004年2月26-27。"
    },
    {
      "indent": 3,
      "text": "[109] A. Adya, R. Wattenhofer, W. Bolosky, M. Castro, G. Cermak, R. Chaiken, J. Douceur, J. Howell, J. Lorch, and M. Thiemer, Farsite: federated, available and reliable storage for an incompletely trusted environment, ACM SIGOPS Operating Systems Review, Special issue on Decentralized storage systems (2002) 1- 14.",
      "ja": "[109] A. Adya、R. Wattenhofer、W. Bolosky、M.カストロ、G. Cermak、R. Chaiken、J.ドゥスール、J.ハウエル、J. Lorchの、及びM. Thiemer、Farsite：利用可能な連合、および不完全に信頼できる環境のための信頼性の高いストレージ、ACM SIGOPSオペレーティングシステムレビュー、分散ストレージシステム（2002）の1- 14特集。"
    },
    {
      "indent": 3,
      "text": "[110] A. Rowstron and P. Druschel, Storage management and caching in PAST, a large-scale, persistent peer-to-peer storage utility, Proceedings ACM SOSP'01, October 2001, pp. 188-201.",
      "ja": "[110] A. Rowstron及びP. Druschel、過去のストレージ管理とキャッシング、大規模、持続的なピア・ツー・ピア・ストレージ・ユーティリティ、議事ACM SOSP'01 2001年10月、頁188から201。"
    },
    {
      "indent": 3,
      "text": "[111] S. Rhea, C. Wells, P. Eaton, D. Geels, B. Zhao, H. Weatherspoon, and J. Kubiatowicz, Maintenance-Free Global Data Storage, IEEE Internet Computing 5 (5) (2001) 40-49.",
      "ja": "[111] S.レア、C.ウェルズ、P.イートン、D. Geels、B.趙、H.ウェザー、及びJ. Kubiatowicz、メンテナンスフリーグローバルデータストレージ、IEEEインターネットコンピューティング5（5）（2001）40 -49。"
    },
    {
      "indent": 3,
      "text": "[112] J. Kubiatowicz, D. Bindel, Y. Chen, S. Czerwinski, P. Eaton, D. Geels, R. Gummadi, S. Rhea, H. Weatherspoon, W. Weimer, C. Wells, and B. Zhao, Oceanstore: An Architecture for global-scale persistent storage, Proc. Ninth Int'l Conf. on Architecture Support for Programming Languages and Operating Systems ASPLOS 2000, November 2000, pp. 190-201.",
      "ja": "[112] J. Kubiatowicz、D. Bindel、Y.チェン、S. Czerwinski、P.イートン、D. Geels、R. Gummadi、S.レア、H.ウェザー、W. Weimerさん、C.ウェルズ、及びB.趙、オーシャンストア：地球規模の永続ストレージ、PROCのためのアーキテクチャ。第九国際コンファレンス。プログラミング言語のためのアーキテクチャサポートおよびオペレーティングシステムASPLOS 2000、2000年11月、頁190から201に。"
    },
    {
      "indent": 3,
      "text": "[113] K. Birman, The Surprising Power of Epidemic Communication, Springer-Verlag Heidelberg Lecture Notes in Computer Science Volume 2584/2003 (2003) 97-102.",
      "ja": "[113] K.バーマン、流行通信、コンピュータサイエンスボリューム2003分の2584（2003）97-102でシュプリンガー・フェアラークハイデルベルクの講義ノートの驚くべきパワー。"
    },
    {
      "indent": 3,
      "text": "[114] P. Costa, M. Migliavacca, G. P. Picco, and G. Cugola, Introducing reliability in content-based publish-subscribe through epidemic algorithms, Proc. 2nd international workshop on Distributed event-based systems 2003, pp. 1-8.",
      "ja": "[114] P.コスタ、M. Migliavacca、G. P.ピッコ、及びG. Cugola、パブリッシュ・サブスクライブ流行アルゴリズム、PROCを介してコンテンツベースの信頼性を導入します。分散型イベントベースのシステム上の第2回国際ワークショップ2003、頁1-8。"
    },
    {
      "indent": 3,
      "text": "[115] P. Costa, M. Migliavacca, G. P. Picco, and G. Cugola, Epidemic Algorithms for Reliable Content-Based Publish-Subscribe: An Evaluation, The 24th Int'l Conf. on Distributed Computing Systems (ICDCS-2004), Mar 23-26, Tokyo University of Technology, Hachioji, Tokyo, Japan (2004)",
      "ja": "[115] P.コスタ、M. Migliavacca、G. P.ピッコ、及びG. Cugola、信頼性の高いコンテンツベースのための流行アルゴリズムは、パブリッシュ・サブスクライブ：評価、第24回国際カンファレンス。分散コンピューティングシステム（ICDCS-2004）、月23-26、テクノロジー、八王子市、東京、日本（2004）の東京大学に"
    },
    {
      "indent": 3,
      "text": "[116] A. Demers, D. Greene, C. Hauser, W. Irish, J. Larson, S. Shenker, H. Sturgis, D. Swinehart, and D. Terry, Epidemic algorithms for replicated data management, Proc. Sixth ACM Symp. on Principles of Distributed Computing 1987, pp. 1-12.",
      "ja": "[116] A.デマーズ、D.グリーン、C.ハウザー、W.アイルランド、J.ラーソン、S. Shenker、H.スタージス、D. Swinehart、及びD.テリー、複製データ管理、PROC用流行アルゴリズム。第六ACM SYMP。分散コンピューティング1987、PPの上の原則。1-12。"
    },
    {
      "indent": 3,
      "text": "[117] P. Eugster, R. Guerraoiu, A. Kermarrec, and L. Massoulie, Epidemic information dissemination in distributed systems, IEEE Computer 37 (5) (2004) 60-67.",
      "ja": "[117] P. Eugster、R. Guerraoiu、A. Kermarrec、及びL. Massoulie、分散システムにおける流行情報発信、IEEEコンピュータ37（5）（2004）60-67。"
    },
    {
      "indent": 3,
      "text": "[118] W. Vogels, R. v. Renesse, and K. Birman, The power of epidemics: robust communication for large-scale distributed systems, ACM SIGCOMM Computer Communication Review 33 (1) (2003) 131-135.",
      "ja": "[118] W. VOGELS、R. Vレネッセ、及びK.バーマン、流行のパワー：大規模分散システムのための堅牢な通信、ACM SIGCOMMコンピュータコミュニケーションレビュー33（1）（2003）131-135。"
    },
    {
      "indent": 3,
      "text": "[119] S. Voulgaris and M. van Steen, An epidemic protocol for managing routing tables in very large peer to peer networks, Proc. 14th IFIP/IEEE Workshop on Distributed Systems: Operations and Management, October 2003.",
      "ja": "[119] S. Voulgaris及びM.ヴァンスティーン、ネットワークピア非常に大きなピア、PROCでルーティングテーブルを管理するための流行プロトコル。第14回分散システムIFIP / IEEEワークショップ：運用と管理、2003年10月。"
    },
    {
      "indent": 3,
      "text": "[120] I. Gupta, On the design of distributed protocols from differential equations, Proc. 23rd Annual ACM SIGACT-SIGOPS Symp. on Principles of Distributed Computing PODC 2004, July 25-28 2004, pp. 216-225.",
      "ja": "[120] I.グプタ、微分方程式、PROCから分散プロトコルの設計に関する。第23回ACM SIGACT-SIGOPS SYMP。分散コンピューティングPODC 2004の原則、2004年7月25-28頁216から225に。"
    },
    {
      "indent": 3,
      "text": "[121] I. Gupta, K. Birman, and R. van Renesse, Fighting fire with fire: using randomized gossip to combat stochastic scalability limits, Cornell University Dept of Computer Science Technical Report, March 2001.",
      "ja": "[121] I.グプタ、K.バーマン、およびR.バンレネッセ、火で火を戦う：確率的スケーラビリティの限界に対処するために、無作為化ゴシップを使用して、コンピュータサイエンス技術報告書、2001年3月のコーネル大学学部。"
    },
    {
      "indent": 3,
      "text": "[122] K. Birman and I. Gupta, Building Scalable Solutions to Distributed Computing Problems using Probabilistic Components, Submitted to the Int'l Conf. on Dependable Systems and Networks DSN-2004, Dependable Computing and Computing Symp. DCCS, June 28- July 1 2004.",
      "ja": "国際研究会に提出確率コンポーネントを使用して、分散コンピューティングの問題にスケーラブルなソリューションを構築[122] K.バーマン及びI.グプタ、。ディペンダブルシステムとネットワークDSN-2004、ディペンダブルコンピューティングとコンピューティングSYMPに。 DCCS、6月28- 2004年7月1日。"
    },
    {
      "indent": 3,
      "text": "[123] A. Ganesh, A.-M. Kermarrec, and L. Massoulie, Peer-to-peer membership management for gossip-based protocols, IEEE Trans. on Computers 52 (2) (2003) 139-149.",
      "ja": "[123] A.ガネーシュ、A.-M. Kermarrec、およびL. Massoulie、ゴシップベースのプロトコルのためのピア・ツー・ピア・会員管理、IEEEトランス。コンピュータ52上の（2）（2003）139-149。"
    },
    {
      "indent": 3,
      "text": "[124] N. Bailey, Epidemic Theory of Infectious Diseases and its Applications, Second Edition ed. Hafner Press, 1975.",
      "ja": "[124] N.ベイリー、感染症とその応用の流行理論、第2版編。ハフナープレス、1975。"
    },
    {
      "indent": 3,
      "text": "[125] P. Eugster, R. Guerraoiu, S. Handurukande, P. Kouznetsov, and A.- M. Kermarrec, Lightweight probabilistic broadcast, ACM Trans. on Computer Systems 21 (4) (2003) 341-374.",
      "ja": "[125] P. Eugster、R. Guerraoiu、S. Handurukande、P. Kouznetsov、及びA.- M. Kermarrec、軽量確率放送、ACMトランス。コンピュータシステム21（4）（2003）341から374に。"
    },
    {
      "indent": 3,
      "text": "[126] H. Weatherspoon and J. Kubiatowicz, Efficient heartbeats and repair of softstate in decentralized object location and routing systems, Proc. SIGOPS European Workshop, September 2002.",
      "ja": "[126] H.ウェザー及びJ. Kubiatowicz、効率的な心拍および分散オブジェクトの位置及びルーティングシステムにおけるたsoftstateの修復、PROC。 SIGOPSヨーロッパのワークショップ、2002年9月。"
    },
    {
      "indent": 3,
      "text": "[127] G. Koloniari and E. Pitoura, Content-based Routing of Path Queries in Peer-to-Peer Systems, Proc. 9th Int'l Conf. on Extending DataBase Technology EDBT, March 14-18 2004.",
      "ja": "[127] G. Koloniari及びE. Pitoura、ピア・ツー・ピアシステムにおけるパスクエリーのコンテンツベースルーティング、PROC。第9回国際コンファレンス。データベース技術EDBT、2004月14〜18の拡張に。"
    },
    {
      "indent": 3,
      "text": "[128] A. Mohan and V. Kalogaraki, Speculative routing and update propagation: a kundali centric approach, IEEE Int'l Conf. on Communications ICC'03, May 2002.",
      "ja": "[128] A.モハン及びV. Kalogaraki、投機的ルーティングおよびアップデート伝播：kundali中心のアプローチ、IEEE国際カンファレンス。コミュニケーションICC'03、2002年5月に。"
    },
    {
      "indent": 3,
      "text": "[129] G. Koloniari, Y. Petrakis, and E. Pitoura, Content-Based Overlay Networks for XML Peers Based on Multi-Level Bloom Filters, Proc. First Int'l Workshop on Databases, Information Systems and Peer-to-Peer Computing DBISP2P, Sept 7-8 2003, pp. 232-247.",
      "ja": "[129] G. Koloniari、Y. Petrakis、およびE. Pitoura、コンテンツベースオーバレイネットワークマルチレベルブルームフィルタに基づいてXMLピアのため、PROC。データベース、情報システムおよびピアツーピア・コンピューティングDBISP2Pの最初の国際ワークショップ、9月7-8 2003年、頁232から247まで。"
    },
    {
      "indent": 3,
      "text": "[130] G. Koloniari and E. Pitoura, Bloom-Based Filters for Hierarchical Data, Proc. 5th Workshop on Distributed Data and Structures (WDAS) (2003)",
      "ja": "[130] G. Koloniari及びE. Pitoura、階層データ、PROC用ブルームベースのフィルタ。分散データと構造（WDAS）第5回ワークショップ（2003年）"
    },
    {
      "indent": 3,
      "text": "[131] B. Bloom, Space/time trade-offs in hash coding with allowable errors, Communications of the ACM 13 (7) (1970) 422-426.",
      "ja": "[131] B.ブルーム、許容誤差を持つハッシュ符号化において空間/時間のトレードオフ、ACM 13（7）（1970）422から426までの通信。"
    },
    {
      "indent": 3,
      "text": "[132] M. Naor and U. Wieder, A Simple Fault Tolerant Distributed Hash Table, Second Int'l Workshop on Peer-to-Peer Systems (IPTPS 03), Berkeley, CA, USA, 20-21 February (2003)",
      "ja": "[132] M. NaorとU. WIEDER、シンプルなフォールトトレラント分散ハッシュテーブル、ピアツーピアシステム（IPTPS 03）、バークレー、CA、USA、20-21 2月にセカンド国際ワークショップ（2003年）"
    },
    {
      "indent": 3,
      "text": "[133] P. Maymounkov and D. Mazieres, Rateless codes and big downloads, Second Int'l Workshop on Peer-to-Peer Systems, IPTPS'03, February 20-21 2003.",
      "ja": "[133] P. MaymounkovとD. Mazieres、レートレスコードと大きなダウンロード、ピアツーピアシステムに関する第2回国際ワークショップ、IPTPS'03、2003年2月20-21。"
    },
    {
      "indent": 3,
      "text": "[134] M. Krohn, M. Freedman, and D. Mazieres, On-the-fly verification of rateless erasure codes for efficient content distribution, Proc. IEEE Symp. on Security and Privacy, May 2004.",
      "ja": "[134] M.クルーン、M.フリードマン、及びD. Mazieres、効率的なコンテンツ配信、PROCためのレートレス抹消符号のオンザフライ検証。 IEEE SYMP。 2004年5月、セキュリティとプライバシーに。"
    },
    {
      "indent": 3,
      "text": "[135] J. Byers, J. Considine, M. Mitzenmacher, and S. Rost, Informed content delivery across adaptive overlay networks, Proc. 2002 conference on applications, technologies, architectures and protocols for computer communications 2002, pp. 47-60.",
      "ja": "[135] J.バイヤーズ、J. Considine、M. Mitzenmacher、及びS.ロスト、適応型オーバーレイネットワークを横切っな情報にコンテンツ配信、PROC。 2002コンピュータ通信2002年のためのアプリケーション、技術、アーキテクチャおよびプロトコルの会議、PP。47-60。"
    },
    {
      "indent": 3,
      "text": "[136] J. Plank, S. Atchley, Y. Ding, and M. Beck, Algorithms for High Performance, Wide-Area Distributed File Downloads, Parallel Processing Letters 13 (2) (2003) 207-223.",
      "ja": "[136] J.プランク、S. Atchley、Y.鼎、およびM.ベック、アルゴリズム高性能のために、広域分散ファイルダウンロード、並列処理レター13（2）（2003）207から223。"
    },
    {
      "indent": 3,
      "text": "[137] M. Castro, P. Rodrigues, and B. Liskov, BASE: Using abstraction to improve fault tolerance, ACM Trans. on Computer Systems 21 (3) (2003) 236-269.",
      "ja": "[137] M.カストロ、P.ロドリゲス、及びB.リスコフ、BASE：フォールトトレランスを向上させるために使用して抽象化、ACMトランス。コンピュータシステム21（3）（2003）236から269に。"
    },
    {
      "indent": 3,
      "text": "[138] R. Rodrigues, B. Liskov, and L. Shrira, The design of a robust peer-to-peer system, 10th ACM SIGOPS European Workshop, Sep 2002.",
      "ja": "[138] R.ロドリゲス、B.リスコフ、及びL. Shrira、堅牢なピア・ツー・ピア・システムの設計、第10回ACM SIGOPS欧州ワークショップ、2002年9月。"
    },
    {
      "indent": 3,
      "text": "[139] H. Weatherspoon, T. Moscovitz, and J. Kubiatowicz, Introspective failure analysis: avoiding correlated failures in peer-to-peer systems, Proc. Int'l Workshop on Reliable Peer-to-Peer Distributed Systems, Oct 2002.",
      "ja": "[139] H.ウェザー、T. Moscovitz、及びJ. Kubiatowicz、内省故障解析：PROC、ピア・ツー・ピア・システムにおける相関障害を回避します。信頼性の高いピアツーピア分散システム、2002年10月に国際ワークショップ。"
    },
    {
      "indent": 3,
      "text": "[140] F. Dabek, R. Cox, F. Kaashoek, and R. Morris, Vivaldi: A Decentralized Network Coordinate System, SIGCOMM'04, Aug 30- Sept 3 2004.",
      "ja": "[140] F. Dabek、R.コックス、F. Kaashoek、およびR.モリス、ヴィヴァルディ：分散ネットワークシステム、SIGCOMM'04、8月30〜2004年9月3日を調整します。"
    },
    {
      "indent": 3,
      "text": "[141] E.-K. Lua, J. Crowcroft, and M. Pias, Highways: proximity clustering for massively scaleable peer-to-peer network routing, Proc. Fourth IEEE Int'l Conf. on Peer-to-Peer Computing, August 25-27 2004.",
      "ja": "[141] E.-K. LUA、J.クロウクロフト、およびM.ピアス、道路：超スケーラブルなピアツーピアネットワークルーティング、PROCする近接クラスタリング。第四にIEEE国際コンファレンス。ピアツーピアコンピューティング、2004年8月25-27に。"
    },
    {
      "indent": 3,
      "text": "[142] F. Fessant, S. Handurukande, A.-M. Kermarrec, and L. Massoulie, Clustering in Peer-to-Peer File Sharing Workloads, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[142] F. Fessant、S. Handurukande、A.-M. Kermarrec、およびL. Massoulie、ピアツーピアのファイル共有ワークロード、ピアツーピアシステムに関する第3回国際ワークショップでのクラスタリング、2004年2月26-27。"
    },
    {
      "indent": 3,
      "text": "[143] T. S. E. Ng and H. Zhang, Predicting internet network distance with coordinates-based approaches, IEEE Infocom 2002, The 21st Annual Joint Conf. of the IEEE Computer and Communication Societies, June 23-27 2002.",
      "ja": "[143] T. S. E.ンおよびH.チャン、座標ベースのアプローチと予測インターネットネットワーク距離、IEEEインフォコム2002、第21回合同研究会。 IEEEコンピュータと通信学会、2002年6月23〜27の。"
    },
    {
      "indent": 3,
      "text": "[144] K. Hildrum, R. Krauthgamer, and J. Kubiatowicz, Object Location in Realistic Networks, Proc. Sixteenth ACM Symp. on Parallel Algorithms and Architectures (SPAA 2004), June 2004, pp. 25-35.",
      "ja": "[144] K. Hildrum、R. Krauthgamer、及びJ. Kubiatowicz、リアルネットワークにおけるオブジェクト位置、PROC。十六ACM SYMP。並列アルゴリズムとアーキテクチャ（SPAA 2004）で、2004年6月、頁25-35。"
    },
    {
      "indent": 3,
      "text": "[145] P. Keleher, S. Bhattacharjee, and B. Silaghi, Are Virtualized Overlay Networks Too Much of a Good Thing?, First Int'l Workshop on Peer-to-Peer Systems IPTPS, March 2002.",
      "ja": "[145] P. Keleher、S. Bhattacharjee、およびB. Silaghi、良い事のあまり仮想オーバーレイネットワークで？、まず国際ワークショップピア・ツー・ピアシステムIPTPS、2002年3月に。"
    },
    {
      "indent": 3,
      "text": "[146] A. Mislove and P. Druschel, Providing administrative control and autonomy in structured peer-to-peer overlays, The 3rd Int'l Workshop on Peer-to-Peer Systems, June 9-12 2004.",
      "ja": "[146] A. MisloveとP. Druschel、構造化されたピア・ツー・ピアオーバーレイの行政管理と自律性を提供し、ピア・ツー・ピアシステムに関する第3回国際ワークショップ、2004年6月9-12。"
    },
    {
      "indent": 3,
      "text": "[147] D. Karger and M. Ruhl, Diminished Chord: A Protocol for Heterogeneous SubGroup Formation in Peer-to-Peer Networks, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[147] D.カーガーとコードディミニッシュM.リュール、：ピアツーピアネットワーク、ピアツーピアシステムに関する第3回国際ワークショップ、2004年2月26-27における不均質サブグループの形成のためのプロトコル。"
    },
    {
      "indent": 3,
      "text": "[148] B. Awerbuch and C. Scheideler, Consistent, order-preserving data management in distributed storage systems, Proc. Sixteenth ACM Symp. on Parallel Algorithms and Architectures SPAA 2004, June 27-30 2004, pp. 44-53.",
      "ja": "[148] B. Awerbuch及びC. Scheideler、分散ストレージシステムに一致して、順序保存データ管理、PROC。十六ACM SYMP。並列アルゴリズムとアーキテクチャSPAA 2004年6月27-30 2004年、頁44-53に。"
    },
    {
      "indent": 3,
      "text": "[149] M. Freedman and D. Mazieres, Sloppy Hashing and Self-Organizing Clusters, Proc. 2nd Int'l Workshop on Peer-to-Peer Systems IPTPS",
      "ja": "[149] M.フリードマン及びD. Mazieres、ずさんなハッシングと自己組織化クラスタ、PROC。ピアツーピアシステムに関する第2回国際ワークショップIPTPS"
    },
    {
      "indent": 3,
      "text": "[150] F. Dabek, J. Li, E. Sit, J. Robertson, F. Kaashoek, and R. Morris, Designing a DHT for low latency and high throughput, Proc. First Symp. on Networked Systems Design and Implementation (NSDI'04), San Francisco, California, March 29-31 (2004) 85-98.",
      "ja": "[150] F. Dabek、J.リー、E.シット、J.ロバートソン、F. Kaashoek、およびR.モリス、低遅延かつ高スループットのためにDHTを設計、PROC。まずSYMP。ネットワークシステムの設計と実装（NSDI'04）、サンフランシスコ、カリフォルニア州、（2004）85-98月29-31上。"
    },
    {
      "indent": 3,
      "text": "[151] M. Ruhl, Efficient algorithms for new computational models, Doctoral Dissertation, September 2003.",
      "ja": "[151] M.リュール、新しい計算モデルのための効率的なアルゴリズム、博士論文、2003年9月。"
    },
    {
      "indent": 3,
      "text": "[152] K. Sollins, Designing for scale and differentiation, Proc. ACM SIGCOMM workshop on Future Directions in network architecture, August 25-27 2003.",
      "ja": "[152] K. Sollins、スケールおよび分化、PROCのための設計。ネットワークアーキテクチャの今後の方向性についてのACM SIGCOMMワークショップ、2003年8月25-27。"
    },
    {
      "indent": 3,
      "text": "[153] L. Massoulie, A. Kermarrec, and A. Ganesh, Network awareness and failure resilience in self-organizing overlay networks, Proc. 22nd Int'l Symp. on Reliable Distributed Systems, SRDS'03, Oct 6-8 2003, pp. 47-55.",
      "ja": "[153] L. Massoulie、A. Kermarrec、およびA.ガネーシュ、自己組織化オーバレイネットワークにおけるネットワークの意識や故障回復力、PROC。第22回国際SYMP。信頼性の高い分散システム、SRDS'03、10月6-8 2003年、頁47-55に。"
    },
    {
      "indent": 3,
      "text": "[154] R. Cox, F. Dabek, F. Kaashoek, J. Li, and R. Morris, Practical,distributed network coordinates, ACM SIGCOMM Computer Communication Review 34 (1) (2004) 113-118.",
      "ja": "[154] R.コックス、F. Dabek、F. Kaashoek、J.リー、およびR.モリス、実用的な、分散型ネットワーク座標、ACM SIGCOMMコンピュータコミュニケーションレビュー34（1）（2004）113-118。"
    },
    {
      "indent": 3,
      "text": "[155] K. Hildrum, J. Kubiatowicz, S. Rao, and B. Zhao, Distributed object location in a dynamic network, Proc. 14th annual ACM symposium on parallel algorithms and architectures 2002, pp. 41- 52.",
      "ja": "[155] K. Hildrum、J. Kubiatowicz、S.ラオ、及びB.趙、動的ネットワーク、PROCに分散オブジェクトの場所。並列アルゴリズムとアーキテクチャ2002、頁41〜52に第14回ACMシンポジウム。"
    },
    {
      "indent": 3,
      "text": "[156] X. Zhang, Q. Zhang, G. Song, and W. Zhu, A Construction of Locality-Aware Overlay Network: mOverlay and its Performance, IEEE Journal on Selected Areas in Communications 22 (1) (2004) 18-28.",
      "ja": "[156] X.チャン、チャンQ.、G.歌、およびW.朱、地域-Awareのオーバレイネットワークの構築：コミュニケーション22で選択された領域にmOverlayとその性能、IEEEジャーナル（1）（2004）18〜 28。"
    },
    {
      "indent": 3,
      "text": "[157] N. Harvey, M. B. Jones, M. Theimer, and A. Wolman, Efficient recovery from organization disconnects in Skipnet, Second Int'l Workshop on Peer-to-Peer Systems IPTPS'03, Feb 20-21 2003.",
      "ja": "ピアツーピアシステムIPTPS'03上[157] N.ハーベイ、M. B.ジョーンズ、M. Theimer、およびA.ウォルマン、Skipnetにおける組織の切断からの効率的な回収、第二国際ワークショップ、2003年2月20-21。"
    },
    {
      "indent": 3,
      "text": "[158] M. Pias, J. Crowcroft, S. Wilbur, T. Harris, and S. Bhatti, Lighthouses for scalable distributed location, Second Int'l Workshop on Peer-to-Peer Systems IPTPS'03, February 20-21 2003.",
      "ja": "[158] M.ピアス、J.クロウクロフト、S.ウィルバー、T.ハリス、及びS. Bhattiさん、スケーラブルな分散位置について、第二国際ワークショップピアツーピアシステムIPTPS'03灯台2月20-21 2003。"
    },
    {
      "indent": 3,
      "text": "[159] K. Gummadi, S. Saroui, S. Gribble, and D. King, Estimating latency between arbitrary internet end hosts, Proc. SIGCOMM IMW 2002, November 2002.",
      "ja": "[159] K. Gummadi、S. Saroui、S. Gribble、及びD.キング、任意のインターネットのエンドホスト間の推定待ち時間、PROC。 SIGCOMM IMW 2002、2002年11月。"
    },
    {
      "indent": 3,
      "text": "[160] Y. Liu, X. Liu, L. Xiao, L. Ni, and X. Zhang, Location-aware topology matching in P2P systems, Proc. IEEE Infocomm, Mar 7-11 2004.",
      "ja": "[160] Y.リュウ、X.劉、L.シャオ、L. Ni及びX.張、P2Pシステムにおける位置認識トポロジーマッチング、PROC。 IEEEインフォコム、2004月7-11。"
    },
    {
      "indent": 3,
      "text": "[161] G. S. Manku, Balanced binary trees for ID management and load balance in distributed hash tables, Proc. 23rd Annual ACM SIGACT-SIGOPS Symp. on Principles of Distributed Computing, PODC 2004, July 25-28 2004, pp. 197-205.",
      "ja": "[161] G. S. Manku、分散ハッシュテーブルにおけるID管理と負荷バランスのために平衡二分木、PROC。第23回ACM SIGACT-SIGOPS SYMP。分散コンピューティングの上の原則、PODC 2004、2004年7月25-28頁。197-205。"
    },
    {
      "indent": 3,
      "text": "[162] J. Gao and P. Steenkiste, Design and Evaluation of a Distributed Scalable Content Delivery System, IEEE Journal on Selected Areas in Communications 22 (1) (2004) 54-66.",
      "ja": "[162] J.ガオとP. Steenkiste、分散スケーラブルなコンテンツ配信システム、IEEEジャーナルの設計と評価コミュニケーションズ22で選択された領域上の（1）（2004）54-66。"
    },
    {
      "indent": 3,
      "text": "[163] X. Wang, Y. Zhang, X. Li, and D. Loguinov, On zone-balancing of peer-to-peer networks: analysis of random node join, Proc. joint international conference on measurement and modeling of computer systems, June 2004.",
      "ja": "[163] X.ワング、Y.チャン、X.李、およびD. Loguinov、ピアツーピアネットワークのゾーンバランシングのランダムノードの分析参加、PROC。コンピュータシステム、2004年6月の測定とモデリングに関する共同国際会議。"
    },
    {
      "indent": 3,
      "text": "[164] D. Karger and M. Ruhl, Simple efficient load balancing algorithms for peer-to-peer systems, Proc. Sixteenth ACM Symp. on Parallel Algorithms and Architectures SPAA 2004, June 27-30 2004.",
      "ja": "[164] D.カーガーとM.リュール、ピア・ツー・ピア・システムのための簡単な、効率的な負荷分散アルゴリズム、PROC。十六ACM SYMP。並列アルゴリズムとアーキテクチャSPAA 2004、2004年6月27-30上。"
    },
    {
      "indent": 3,
      "text": "[165] D. Karger and M. Ruhl, Simple efficient load balancing algorithms for peer-to-peer systems, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[165] D.カーガーとM.リュール、ピア・ツー・ピア・システム、ピア・ツー・ピアシステムに関する第3回国際ワークショップのための簡単な、効率的なロード・バランシング・アルゴリズム2004年2月26-27。"
    },
    {
      "indent": 3,
      "text": "[166] M. Adler, E. Halperin, R. Karp, and V. Vazirani, A stochastic process on the hypercube with applications to peer-to-peer networks, Proc. 35th ACM symposium on Theory of Computing 2003, pp. 575-584.",
      "ja": "[166] M.アドラー、E.ハルパリン、R.カープ、およびV. Vazirani、ピアツーピアネットワークを、PROCをアプリケーションとハイパーキューブ上の確率過程。コンピューティング2003の理論、頁上の第35回ACMシンポジウム。575から584まで。"
    },
    {
      "indent": 3,
      "text": "[167] C. Baquero and N. Lopes, Towards peer to peer content indexing, ACM SIGOPS Operating Systems Review 37 (4) (2003) 90-96.",
      "ja": "[167] C. Baquero及びN.ロペス、コンテンツのインデックスをピアツーピア向けて、ACM SIGOPSオペレーティングシステムレビュー37（4）（2003）90-96。"
    },
    {
      "indent": 3,
      "text": "[168] A. Rao, K. Lakshminarayanan, S. Surana, R. Karp, and I. Stoica, Load balancing in structured P2P systems, Proc. 2nd Int'l Workshop on Peer-to-Peer Systems, IPTPS'03, February 20-21 2003.",
      "ja": "[168] A.ラオ、K. Lakshminarayanan、S. Surana、R.カープ、およびI.ストイカ、構造化P2Pシステムにロードバランシング、PROC。ピアツーピアシステムに関する第2回国際ワークショップ、IPTPS'03、2003年2月20-21。"
    },
    {
      "indent": 3,
      "text": "[169] J. Byers, J. Considine, and M. Mitzenmacher, Simple Load Balancing for Distributed Hash Tables, Second Int'l Workshop on Peer-to-Peer Systems IPTPS 03, 20-21 February 2003.",
      "ja": "[169] J.バイヤーズ、J. Considine、及びM. Mitzenmacher、分散ハッシュテーブルの単純なロードバランシング、ピア・ツー・ピアシステム上の第二国際ワークショップ2003 03、20-21 2月IPTPS。"
    },
    {
      "indent": 3,
      "text": "[170] P. Castro, J. Lee, and A. Misra, CLASH: A Protocol for Internet- Scale Utility-Oriented Distributed Computing, Proc. 24th Int'l Conf. on Distributed Computing Systems ICDCS 2004, March 23-26 2004.",
      "ja": "[170] P.カストロ、J.リー、およびA. Misraの、CLASH：Internet-スケールユーティリティ指向分散コンピューティングのためのプロトコル、PROC。第24回国際コンファレンス。分散コンピューティングシステムICDCS 2004年3月23-26 2004。"
    },
    {
      "indent": 3,
      "text": "[171] A. Stavrou, D. Rubenstein, and S. Sahu, A Lightwight, Robust P2P System to Handle Flash Crowds, IEEE Journal on Selected Areas in Communications 22 (1) (2004) 6-17.",
      "ja": "通信22において選択された領域上の[171] A. Stavrou、D.ルーベンスタイン、及びS. Sahu、A Lightwight、フラッシュクラウドを処理するために、堅牢なP2Pシステム、IEEEジャーナル（1）（2004）6-17。"
    },
    {
      "indent": 3,
      "text": "[172] A. Selcuk, E. Uzun, and M. R. Pariente, A reputation-based trust management system for P2P networks, Fourth Int'l Workshop on Global and Peer-to-Peer Computing, April 20-21 2004.",
      "ja": "[172] A.セルチュク、E.ウズン、及びM. R. Pariente、P2Pネットワークのための評判ベースの信用管理システム、グローバル第4回国際ワークショップ及びピア・ツー・ピア・コンピューティング2004年4月20-21。"
    },
    {
      "indent": 3,
      "text": "[173] T. Papaioannou and G. Stamoulis, Effective use of reputation in peer-to-peer environments, Fourth Int'l Workshop on Global and Peer-to-Peer Computing, April 20-21 2004.",
      "ja": "[173] T. PapaioannouとG. Stamoulis、ピア・ツー・ピア環境、グローバル第4回国際ワークショップ及びピア・ツー・ピア・コンピューティングにおける評判の有効活用、2004年4月20-21。"
    },
    {
      "indent": 3,
      "text": "[174] M. Blaze, J. Feigenbaum, and J. Lacy, Trust and Reputation in P2P networks, http://www.neurogrid.net/twiki/bin/view/Main/ReputationAndTrust (2003)",
      "ja": "[174] M.ブレイズ、J.ファイゲンバウム、及びJ.レイシー、信託P2Pネットワークにおける評判、http://www.neurogrid.net/twiki/bin/view/Main/ReputationAndTrust（2003）"
    },
    {
      "indent": 3,
      "text": "[175] E. Damiani, D. C. di Vimercati, S. Paraboschi, P. Samarati, and F. Violante, A reputation-based approach for choosing reliable resources in peer to peer networks, Proc. 9th conference on computer and communications security 2002, pp. 207-216.",
      "ja": "[175] E.ダミアーニ、D. C.ディVimercati、S. Paraboschi、P. Samarati、及びF. Violante、ネットワークピアツーピアで信頼性のあるリソースを選択するための評判ベースのアプローチ、PROC。コンピュータおよび通信セキュリティ2002年第9回会議、PP。207-216。"
    },
    {
      "indent": 3,
      "text": "[176] S. Marti, P. Ganesan, and H. Garcia-Molina, DHT routing using social links, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[176] S.マルティ、P・ガネサン、およびH.ガルシア - モリーナ、社会的なリンクを使用してDHTルーティング、ピアツーピアシステムに関する第3回国際ワークショップ、2004年2月26-27。"
    },
    {
      "indent": 3,
      "text": "[177] G. Caronni and M. Waldvogel, Establishing trust in distributed storage providers, Proc. Third Int'l IEEE Conf. on Peer-to-Peer Computing, 1-3 Sept 2003, pp. 128-133.",
      "ja": "[177] G. Caronni及びM. Waldvogel、PROC、分散ストレージ・プロバイダーの信頼を確立します。第三に国際IEEEコンファレンス。ピアツーピアコンピューティング、1-3 2003年9月、頁128から133に。"
    },
    {
      "indent": 3,
      "text": "[178] B. Sieka, A. Kshemkalyani, and M. Singhal, On the security of polling protocols in peer-to-peer systems, Proc. Fourth IEEE Int'l Conf. on Peer-to-Peer Computing, 25-27 August 2004.",
      "ja": "[178] B. Sieka、A. Kshemkalyani、及びM.シングハル、ピア・ツー・ピア・システムにおけるポーリングプロトコルのセキュリティ上、PROC。第四にIEEE国際コンファレンス。ピアツーピアコンピューティング、25-27 2004年8月。"
    },
    {
      "indent": 3,
      "text": "[179] M. Feldman, K. Lai, I. Stoica, and J. Chuang, Robust Incentive Techniques for Peer-to-Peer Networks, ACM E-Commerce Conf. EC'04, May 2004.",
      "ja": "[179] M.フェルドマン、K.ライ、I.ストイカ、及びJ.荘、ピアツーピアネットワークのロバストインセンティブ技術ACM Eコマースカンファレンス。 EC'04、2004年5月。"
    },
    {
      "indent": 3,
      "text": "[180] K. Anagnostakis and M. Greenwald, Exchange-based Incentive Mechanism for Peer-to-Peer File Sharing, Proc. 24th Int'l Conf. on Distributed Computing Systems ICDCS 2004, March 23-26 2004.",
      "ja": "[180] K. AnagnostakisとM.グリーンワルド、ピアツーピアファイル共有、PROCのExchangeベースのインセンティブメカニズム。第24回国際コンファレンス。分散コンピューティングシステムICDCS 2004年3月23-26 2004。"
    },
    {
      "indent": 3,
      "text": "[181] J. Schneidman and D. Parkes, Rationality and self-Interest in peer to peer networks, Second Int'l Workshop on Peer-to-Peer Systems IPTPS'03, February 20-21 2003.",
      "ja": "[181] J. Schneidman及びD.パークス、合理性とネットワークをピアツーピアで自己の利益、上の第二国際ワークショップピアツーピアシステムIPTPS'03、2003年2月20-21。"
    },
    {
      "indent": 3,
      "text": "[182] C. Buragohain, D. Agrawal, and S. Subhash, A game theoretic framework for incentives in P2P systems, Proc. Third Int'l IEEE Conf. on Peer-to-Peer Computing, 1-3 Sept 2003, pp. 48-56.",
      "ja": "[182] C. Buragohain、D. Agrawalさん、およびS.はSubhash、PROC、P2Pシステムにおけるインセンティブのためのゲーム理論的枠組み。第三に国際IEEEコンファレンス。ピアツーピアコンピューティング、1-3 2003年9月、頁48-56に。"
    },
    {
      "indent": 3,
      "text": "[183] W. Josephson, E. Sirer, and F. Schneider, Peer-to-Peer Authentication with a Distributed Single Sign-On Service, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[183]​​ W.ジョセフソン、E. Sirer、およびF.シュナイダー、分散型シングルサインオンサービス、ピアツーピアシステムに関する第3回国際ワークショップでのピア・ツー・ピアの認証、2004年2月26-27日。"
    },
    {
      "indent": 3,
      "text": "[184] A. Fiat and J. Saia, Censorship resistant peer to peer content addressable networks, Proc. 13th annual ACM-SIAM symposium on discrete algorithms 2002, pp. 94-103.",
      "ja": "[184] A.フィアット及びJ.サイア、連想ネットワークをピア・ツー・ピア検閲耐性、PROC。離散アルゴリズム2002年第13回年次ACM-SIAMシンポジウム、頁94から103まで。"
    },
    {
      "indent": 3,
      "text": "[185] N. Daswani and H. Garcia-Molina, Query-flood DoS attacks in gnutella, Proc. 9th ACM Conf. on Computer and Communications Security 2002, pp. 181-192.",
      "ja": "[185] N. DaswaniとH.ガルシア - モリーナ、グヌーテラ、PROCでクエリ洪水DoS攻撃。第9回ACMコンファレンス。コンピュータおよび通信セキュリティ2002、頁181から192に。"
    },
    {
      "indent": 3,
      "text": "[186] A. Singh and L. Liu, TrustMe: anonymous management of trust relationships in decentralized P2P systems, Proc. Third Int'l IEEE Conf. on Peer-to-Peer Computing, Sept 1-3 2003.",
      "ja": "[186] A.シンとL.リュウ、TrustMe：分散型P2Pシステムにおける信頼関係の匿名管理、PROC。第三に国際IEEEコンファレンス。ピアツーピアコンピューティング、2003年9月1-3に。"
    },
    {
      "indent": 3,
      "text": "[187] A. Serjantov, Anonymizing censorship resistant systems, Proc. Second Int'l Conf. on Peer to Peer Computing, March 2002.",
      "ja": "[187] A. Serjantov、匿名化検閲耐性システム、PROC。第二に国際コンファレンス。ピア上のコンピューティング、2002年3月をピアに。"
    },
    {
      "indent": 3,
      "text": "[188] S. Hazel and B. Wiley, Achord: A Variant of the Chord Lookup Service for Use in Censorship Resistant Peer-to-Peer Publishing Systems, Proc. Second Int'l Conf. on Peer to Peer Computing, March 2002.",
      "ja": "[188] S.ヘーゼルおよびB.ワイリー、Achord：検閲耐性ピアツーピア出版システム、PROCで使用するためのコード検索サービスのバリアント。第二に国際コンファレンス。ピア上のコンピューティング、2002年3月をピアに。"
    },
    {
      "indent": 3,
      "text": "[189] M. Freedman and R. Morris, Tarzan: a peer-to-peer anonymizing network layer, Proc. 9th ACM Conf. on Computer and Communications Security (2002) 193-206.",
      "ja": "[189] M.フリードマンとR.モリス、ターザン：ピアツーピア匿名ネットワーク層、PROC。第9回ACMコンファレンス。コンピュータおよび通信セキュリティ（2002）193-206に。"
    },
    {
      "indent": 3,
      "text": "[190] M. Feldman, C. Papadimitriou, J. Chuang, and I. Stoica, Free-Riding and Whitewashing in Peer-to-Peer Systems, 3rd Annual Workshop on Economics and Information Security WEIS04, May 2004.",
      "ja": "[190] M.フェルドマン、C. Papadimitriou、J.荘、およびI.ストイカ、ピア・ツー・ピアシステムにおけるただ乗りとWhitewashing、経済学と情報セキュリティWEIS04、2004年5月の第3回ワークショップ。"
    },
    {
      "indent": 3,
      "text": "[191] L. Ramaswamy and L. Liu, FreeRiding: a new challenge for peer-to-peer file sharing systems, Proc. 2003 Hawaii Int'l Conf. on System Sciences, P2P Track, HICSS2003, January 6-9 2003.",
      "ja": "[191] L.ラマスワミとL.リュウ、フリーライディング：ピア・ツー・ピアのファイル共有システムのための新たな挑戦、PROC。 2003年ハワイ国際コンファレンス。システム科学、P2Pトラック、HICSS2003、2003年1月6-9に。"
    },
    {
      "indent": 3,
      "text": "[192] T.-W. Ngan, D. Wallach, and P. Druschel, Enforcing fair sharing of peer-to-peer resources, Second Int'l Workshop on Peer-to-Peer Systems, IPTPS'03, 20-21 February 2003.",
      "ja": "[192] T.-W.ンガン、D.ウォーラック、およびP. Druschel、ピア・ツー・ピアシステムでのピア・ツー・ピアのリソース、セカンド国際ワークショップの強制公平な共有、IPTPS'03、20-21 2003年2月。"
    },
    {
      "indent": 3,
      "text": "[193] L. Cox and B. D. Noble, Samsara: honor among thieves in peer-to-peer storage, Proc. nineteenth ACM symposium on Operating System Principles 2003, pp. 120-132.",
      "ja": "[193] L.コックス及びB. D.ノーブル、サムサラ：ピアツーピアストレージ、PROCで泥棒のうち名誉。オペレーティングシステムの原則2003年、頁上の第十九ACMシンポジウム。120-132。"
    },
    {
      "indent": 3,
      "text": "[194] M. Surridge and C. Upstill, Grid security: lessons for peer-to-peer systems, Proc. Third Int'l IEEE Conf. on Peer-to-Peer Computing, Sept 1-3 2003, pp. 2-6.",
      "ja": "[194] M. Surridge及びC. Upstill、グリッド・セキュリティ：ピア・ツー・ピア・システムのためのレッスン、PROC。第三に国際IEEEコンファレンス。ピアツーピアコンピューティング、9月1-3 2003年、頁2-6。"
    },
    {
      "indent": 3,
      "text": "[195] E. Sit and R. Morris, Security considerations for peer-to-peer distributed hash tables, First Int'l Workshop on Peer-to-Peer Systems, March 2002.",
      "ja": "[195] E.座るとR.モリス、ピア・ツー・ピアの分散ハッシュテーブル、ピアツーピアシステムに関する国際ワークショップ第一に、2002年3月のセキュリティ上の考慮事項。"
    },
    {
      "indent": 3,
      "text": "[196] C. O'Donnel and V. Vaikuntanathan, Information leak in the Chord lookup protocol, Proc. Fourth IEEE Int'l Conf. on Peer-to-Peer Computing, 25-27 August 2004.",
      "ja": "[196] C.オドネル及びV. Vaikuntanathan、コード・ルックアッププロトコル、PROCの情報漏洩。第四にIEEE国際コンファレンス。ピアツーピアコンピューティング、25-27 2004年8月。"
    },
    {
      "indent": 3,
      "text": "[197] K. Berket, A. Essiari, and A. Muratas, PKI-Based Security for Peer-to-Peer Information Sharing, Proc. Fourth IEEE Int'l Conf. on Peer-to-Peer Computing, 25-27 August 2004.",
      "ja": "[197] K. Berket、A. Essiari、およびA. Muratas、ピア・ツー・ピアの情報共有、PROCのためのPKIベースのセキュリティ。第四にIEEE国際コンファレンス。ピアツーピアコンピューティング、25-27 2004年8月。"
    },
    {
      "indent": 3,
      "text": "[198] B. Karp, S. Ratnasamy, S. Rhea, and S. Shenker, Spurring adoption of DHTs with OpenHash, a public DHT service, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[198] B.カープ、S. Ratnasamy、S.レア、およびS. Shenker、OpenHashとのDHTsの採用に拍車をかけ、公共DHTサービス、第3回国際ワークショップピアツーピアシステム上で2月26-27 2004。"
    },
    {
      "indent": 3,
      "text": "[199] J. Considine, M. Walfish, and D. G. Andersen, A pragmatic approach to DHT adoption, Technical Report,, December 2003.",
      "ja": "[199] J. Considine、M. Walfish、及びD. G.アンデルセン、DHTの採用、技術報告,, 2003年12月に実際的なアプローチ。"
    },
    {
      "indent": 3,
      "text": "[200] G. Li, Peer to Peer Networks in Action, IEEE Internet Computing 6 (1) (2002) 37-39.",
      "ja": "[200] G. Liが、アクションにネットワーク、IEEEインターネットコンピューティング6（1）（2002）37-39をピアツーピア。"
    },
    {
      "indent": 3,
      "text": "[201] A. Mislove, A. Post, C. Reis, P. Willmann, P. Druschel, D. Wallach, X. Bonnaire, P. Sens, J.-M. Busca, and L. Arantes-Bezerra, POST: A Secure, Resilient, Cooperative Messaging System, 9th Workshop on Hot Topics in Operating Systems, HotOS, May 2003.",
      "ja": "[201] A. Mislove、A.後、C.レイス、P. Willmann、P. Druschel、D.ウォラック、X. Bonnaire、P.サンス、J.-M.バスカ、およびL. Arantes-Bezerra、POST：セキュア、弾力性、協同メッセージングシステム、オペレーティングシステム、HotOS、2003年5月のホットな話題で第9回ワークショップ。"
    },
    {
      "indent": 3,
      "text": "[202] S. Saroiu, P. Gummadi, and S. Gribble, A measurement study of peer-to-peer file sharing systems, Proc. Multimedia Computing and Networking 2002 MMCN'02, January 2002.",
      "ja": "[202] S. Saroiu、P. Gummadi、及びS. Gribble、ピア・ツー・ピアのファイル共有システムの測定研究、PROC。マルチメディアコンピューティングとネットワーキング2002 MMCN'02、2002年1月。"
    },
    {
      "indent": 3,
      "text": "[203] A. Muthitacharoen, R. Morris, T. Gil, and B. Chen, Ivy: a read/write peer-to-peer file system, ACM SIGOPS Operating Systems Review, Special issue on Decentralized storage systems, December 2002, pp. 31-44.",
      "ja": "[203] A. Muthitacharoen、R.モリス、T.ギル、およびB.陳、アイビー：読み取り/書き込みピア・ツー・ピアのファイルシステム、ACM SIGOPSオペレーティングシステムレビュー、分散ストレージシステム特集号、2002年12月、 PP。31-44。"
    },
    {
      "indent": 3,
      "text": "[204] A. Muthitacharoen, R. Morris, T. Gil, and B. Chen, A read/write peer-to-peer file system, Proc. 5th Symp. on Operating System Design and Implementation (OSDI 2002), Boston, MA, December (2002)",
      "ja": "[204] A. Muthitacharoen、R.モリス、T.ギル、及びB.チェン、読み取り/書き込みピア・ツー・ピア・ファイル・システム、PROC。第五SYMP。オペレーティングシステムの設計と実装（2002 OSDI）、ボストン、MA、12月に（2002）"
    },
    {
      "indent": 3,
      "text": "[205] F. Annexstein, K. Berman, M. Jovanovic, and K. Ponnavaikko, Indexing techniques for file sharing in scalable peer to peer networks, 11th IEEE Int'l Conf. on Computer Communications and Networks (2002) 10-15.",
      "ja": "[205] F. Annexstein、K.バーマン、M.ヨバノビッチ、及びK. Ponnavaikko、ネットワークのピア・ツー・ピアスケーラブルにおけるファイル共有のためのインデックス技術、第11回IEEE国際カンファレンス。コンピュータ通信とネットワーク（2002）10-15に。"
    },
    {
      "indent": 3,
      "text": "[206] G. Kan and Y. Faybishenko, Introduction to Gnougat, First Int'l Conf. on Peer-to-Peer Computing 2001 2001, pp. 4-12.",
      "ja": "[206] G.カン及びY. Faybishenko、Gnougat入門、まず国際カンファレンス。ピア・ツー・ピア・コンピューティング2001 2001で、頁4-12。"
    },
    {
      "indent": 3,
      "text": "[207] R. Gold and D. Tidhar, Towards a content-based aggregation network, Proc. First Int'l Conf. on Peer to Peer Compuuting 2001, pp. 62-68.",
      "ja": "[207] R.金及びD. Tidhar、コンテンツベースの集約ネットワーク、PROC寄り。最初の国際コンファレンス。ピアにCompuuting 2001、頁62-68をピアに。"
    },
    {
      "indent": 3,
      "text": "[208] F. Dabek, M. F. Kaashoek, D. Karger, R. Morris, and I. Stoica, Wide-area cooperative storage with CFS, Proc. 18th ACM symposium on Operating System Principles 2001, pp. 202-215.",
      "ja": "[208] F. Dabek、M. F. Kaashoek、D.カーガー、R.モリス、およびI.ストイカ、CFS、PROCと広域協調ストレージ。オペレーティングシステムの原則2001年、頁第18回ACMシンポジウム。202から215まで。"
    },
    {
      "indent": 3,
      "text": "[209] M. Freedman, E. Freudenthal, and D. Mazieres, Democratizing content publication with coral, Proc. First Symp. on Networked Systems Design and Implementation NSDI'04, March 29-31 2004, pp. 239-252.",
      "ja": "珊瑚、PROCとコンテンツ発行を民主化[209] M.フリードマン、E.フロイデンタール、及びD. Mazieres、。まずSYMP。ネットワークシステムの設計と実装NSDI'04 3月29-31 2004年、頁239から252に。"
    },
    {
      "indent": 3,
      "text": "[210] J. Li, B. T. Loo, J. Hellerstein, F. Kaashoek, D. Karger, and R. Morris, On the Feasibility of Peer-to-Peer Web Indexing and Search, Second Int'l Workshop on Peer-to-Peer Systems IPTPS 03, 20-21 February 2003.",
      "ja": "[210] J.李、BTルー、J. Hellerstein、F. Kaashoek、D.カーガー、およびR.モリス、ピアツーピアウェブインデックスと検索の可能性、第2国際ワークショップピア・ツーオン-PeerシステムIPTPS 03、20-21 2003年2月。"
    },
    {
      "indent": 3,
      "text": "[211] S. Iyer, A. Rowstron, and P. Druschel, Squirrel: a decentralized peer-to-peer web cache, Proc. 21st annual symposium on principles of distributed computing 2002, pp. 213-222.",
      "ja": "[211] S.アイヤル、A. Rowstron及びP. Druschel、リス：分散型ピア・ツー・ピア・ウェブ・キャッシュ、PROC。分散コンピューティング2002、PP。213-222の原則の第21回年次シンポジウム。"
    },
    {
      "indent": 3,
      "text": "[212] M. Bawa, R. Bayardo, S. Rajagopalan, and E. Shekita, Make it fresh, make it quick: searching a network of personal webservers, Proc. 12th international conference on World Wide Web 2003, pp. 577-586.",
      "ja": "PROC、個人のWebサーバのネットワークを検索：[212] M.バワ、R. Bayardo、S. Rajagopalan、およびE. Shekita、迅速にそれを作る、それが新鮮ください。ワールド・ワイド・ウェブ（WWW）2003第12回国際会議、頁577から586まで。"
    },
    {
      "indent": 3,
      "text": "[213] B. T. Loo, S. Krishnamurthy, and O. Cooper, Distributed web crawling over DHTs, Technical Report, CSD-04-1305, February 9 2004.",
      "ja": "[213] B. T.ルー、S. Krishnamurthy、およびO.クーパー、DHTsの上でクロール分散型ウェブ、技術報告書、CSD-04から1305まで、2004年2月9日には。"
    },
    {
      "indent": 3,
      "text": "[214] M. Junginger and Y. Lee, A self-organizing publish/subscribe middleware for dynamic peer-to-peer networks, IEEE Network 18 (1) (2004) 38-43.",
      "ja": "[214] M. JungingerおよびY.リー、動的なピア・ツー・ピア・ネットワークの自己組織化パブリッシュ/サブスクライブ・ミドルウェア、IEEEネットワーク18（1）（2004）38-43。"
    },
    {
      "indent": 3,
      "text": "[215] F. Cuenca-Acuna, C. Peery, R. Martin, and T. Nguyen, PlanetP: Using Gossiping to Build Content Addressable Peer-to-Peer Information Sharing Communities, Proc. 12th international symposium on High Performance Distributed Computing (HPDC), June 2002.",
      "ja": "[215] F.クエンカ・アクーニャ、C.ザピーリー、R.マーティン、およびT.グエン、PlanetP：使用して、PROCを連想ピア・ツー・ピアの情報共有コミュニティを構築するためのゴシップ。高性能の第12回国際シンポジウム分散コンピューティング（HPDC）、2002年6月。"
    },
    {
      "indent": 3,
      "text": "[216] M. Walfish, H. Balakrishnan, and S. Shenker, Untangling the web from DNS, Proc. First Symp. on Networked Systems Design and Implementation NSDI'04, March 29-31 2004, pp. 225-238.",
      "ja": "DNS、PROCからウェブをUntangling [216] M. Walfish、H.バラクリシュナン、およびS. Shenker、。まずSYMP。ネットワークシステムの設計と実装NSDI'04 3月29-31 2004年、頁225から238に。"
    },
    {
      "indent": 3,
      "text": "[217] B. Awerbuch and C. Scheideler, Robust distributed name service, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[217] B. AwerbuchとC. Scheideler、堅牢な分散ネームサービス、ピアツーピアシステムに関する第3回国際ワークショップ、2004年2月26-27。"
    },
    {
      "indent": 3,
      "text": "[218] A. Iamnitchi, Resource Discovery in Large Resource-Sharing Environments, Doctoral Dissertation 2003.",
      "ja": "[218] A. Iamnitchi、大型リソース共有環境でのリソースの発見、博士論文2003。"
    },
    {
      "indent": 3,
      "text": "[219] R. Cox, A. Muthitacharoen, and R. Morris, Serving DNS using a Peer-to-Peer Lookup Service, First Int'l Workshop on Peer-to-Peer Systems (IPTPS), March 2002.",
      "ja": "[219] R.コックス、A. Muthitacharoen、およびR.モリス、ピア・ツー・ピアシステム（IPTPS）、2002年3月にピア・ツー・ピアの検索サービス、まず国際ワークショップを使用してDNSサービスを提供しています。"
    },
    {
      "indent": 3,
      "text": "[220] A. Chander, S. Dawson, P. Lincoln, and D. Stringer-Calvert, NEVRLATE: scalable resource discovery, Second IEEE/ACM Int'l Symp. on Cluster Computing and the Grid CCGRID2002 2002, pp. 56-65.",
      "ja": "[220] A.のChander、S.ドーソン、P.リンカーン、及びD.ストリンガー-カルバート、NEVRLATE：スケーラブルリソースディスカバリ、第IEEE / ACM国際SYMP。クラスタコンピューティングとグリッド・CCGRID2002 2002年、頁56-65。"
    },
    {
      "indent": 3,
      "text": "[221] M. Balazinska, H. Balakrishnan, and D. Karger, INS/Twine: A scalable Peer-to-Peer architecture for Intentional Resource Discovery, Proc. First Int'l Conf. on Pervasive Computing (IEEE) (2002)",
      "ja": "[221] M. Balazinska、H.バラクリシュナン、およびD.カーガー、INS /より糸：意図的リソースディスカバリ、PROCのためのスケーラブルなピアツーピアアーキテクチャ。最初の国際コンファレンス。パーベイシブ・コンピューティング上（IEEE）（2002）"
    },
    {
      "indent": 3,
      "text": "[222] J. Kangasharju, K. Ross, and D. Turner, Secure and resilient peer-to-peer E-mail: design and implementation, Proc. Third Int'l IEEE Conf. on Peer-to-Peer Computing, 1-3 Sept 2003.",
      "ja": "[222] J. Kangasharju、K.ロス、及びD.ターナー、安全で弾力ピアツーピアEメール：設計と実装、PROC。第三に国際IEEEコンファレンス。ピアツーピアコンピューティング、1-3 2003年9月。"
    },
    {
      "indent": 3,
      "text": "[223] V. Lo, D. Zappala, D. Zhou, Y. Liu, and S. Zhao, Cluster computing on the fly: P2P scheduling of idle cycles in the internet, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[223] V.ロー、D. Zappala、D.周、Y.劉、およびS.趙、オンザフライクラスタコンピューティング：インターネットでのアイドルサイクルのP2Pスケジューリング、第3回国際ワークショップのピア・ツー・システムズ、2004年2月26-27ピア。"
    },
    {
      "indent": 3,
      "text": "[224] A. Iamnitchi, I. Foster, and D. Nurmi, A peer-to-peer approach to resource discovery in grid environments, IEEE High Performance Distributed Computing 2002.",
      "ja": "[224] A. Iamnitchi、I.フォスター、及びD.ヌルミ、グリッド環境で発見リソースへのピア・ツー・ピアのアプローチ、IEEE高性能分散コンピューティング2002。"
    },
    {
      "indent": 3,
      "text": "[225] I. Foster and A. Iamnitchi, On Death, Taxes and the Convergence of Peer-to-Peer and Grid Computing, Second Int'l Workshop on Peer-to-Peer Systems IPTPS 03, 20-21 February 2003.",
      "ja": "フォスターとA. Iamnitchiは、死、税およびピアツーピアシステム上のピア・ツー・ピアの収束やグリッドコンピューティング、セカンド国際ワークショップでは03 IPTPS [225] I.、2003年2月20-21。"
    },
    {
      "indent": 3,
      "text": "[226] W. Hoschek, Peer-to-Peer Grid Databases for Web Service Discovery, Concurrency - Practice and Experience (2002) 1-7.",
      "ja": "[226] W. Hoschek、Webサービスディスカバリー、並行処理のためのピアツーピアグリッドデータベース - 実践と経験（2002）1-7。"
    },
    {
      "indent": 3,
      "text": "[227] K. Aberer, A. Datta, and M. Hauswirth, A decentralized public key infrastructure for customer-to-customer e-commerce, Int'l Journal of Business Process Integration and Management (2004)",
      "ja": "[227] K. Aberer、A.ダッタ、およびM. Hauswirth、顧客から顧客への電子商取引のための分散化、公開鍵インフラストラクチャ、ビジネスプロセスの統合と管理の国際ジャーナル（2004年）"
    },
    {
      "indent": 3,
      "text": "[228] S. Ajmani, D. Clarke, C.-H. Moh, and S. Richman, ConChord: Cooperative SDSI Certificate Storage and Name Resolution, First Int'l Workshop on Peer-to-Peer Systems IPTPS, March 2002.",
      "ja": "[228] S. Ajmani、D.クラーク、C.-H.モース、およびS.リッチマン、ConChord：共同SDSIの証明書ストレージと名前解決、まず国際ワークショップピア・ツー・ピアシステムIPTPS、2002年3月に。"
    },
    {
      "indent": 3,
      "text": "[229] E. Sit, F. Dabek, and J. Robertson, UsenetDHT: a low overhead Usenet server, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[229] E.シット、F. Dabek、及びJ.ロバートソン、UsenetDHT：低オーバーヘッドのUsenetサーバ、ピアツーピアシステムに関する第3回国際ワークショップ2004年2月26-27。"
    },
    {
      "indent": 3,
      "text": "[230] H.-Y. Hsieh and R. Sivakumar, On transport layer support for peer-to-peer networks, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[230] H.-Y.謝とR.シバクマー、ピア・ツー・ピア・ネットワーク、ピアツーピアシステムに関する第3回国際ワークショップ、2004年2月26-27のためのトランスポート層の支持体上に。"
    },
    {
      "indent": 3,
      "text": "[231] I. Stoica, D. Adkins, S. Zhuang, S. Shenker, and S. Surana, Internet indirection infrastructure, Proc. 2002 conference on applications, technologies, architectures and protocols for computer communications, August 19-23 2002, pp. 73-86.",
      "ja": "[231] I.ストイカ、D.アドキンス、S.荘、S. Shenker、およびS. Surana、インターネット間接基盤、PROC。 2002コンピュータ通信のためのアプリケーション、技術、アーキテクチャおよびプロトコルの会議、8月19-23 2002年、頁73から86。"
    },
    {
      "indent": 3,
      "text": "[232] E. Halepovic and R. Deters, Building a P2P forum system with JXTA, Proc. Second IEEE Int'l Conf. on Peer to Peer Computing P2P'02, September 5-7 2002.",
      "ja": "[232] E. Halepovic及びR.抑止、JXTA、PROCとP2Pフォーラムシステムを構築します。第二にIEEE国際コンファレンス。ピアのコンピューティングP2P'02、2002年9月5-7をピアに。"
    },
    {
      "indent": 3,
      "text": "[233] M. Wawrzoniak, L. Peterson, and T. Roscoe, Sophia: an Information Plane for networked systems, ACM SIGCOMM Computer Communication Review 34 (1) (2004) 15-20.",
      "ja": "[233] M. Wawrzoniak、L.ピーターソン、およびT.ロスコー、ソフィア：ネットワークシステムの情報プレーン、ACM SIGCOMMコンピュータコミュニケーションレビュー34（1）（2004）15-20。"
    },
    {
      "indent": 3,
      "text": "[234] D. Tran, K. Hua, and T. Do, A Peer-to-Peer Architecture for Media Streaming, IEEE Journal on Selected Areas in Communications 22 (1) (2004) 121-133.",
      "ja": "コミュニケーション22（1）（2004）121-133で選択された領域の[234] D. Tranさん、K.華、およびT.髪型、メディアストリーミングのためのピア・ツー・ピア・アーキテクチャ、IEEEジャーナル。"
    },
    {
      "indent": 3,
      "text": "[235] V. Padmanabhan, H. Wang, and P. Chou, Supporting heterogeneity and congestion control in peer-to-peer multicast streaming, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[235] V. Padmanabhan、H.王、およびP.チョウ、ピア・ツー・ピアのマルチキャストストリーミング、ピアツーピアシステムに関する第3回国際ワークショップでの支援異質性と輻輳制御、2004年2月26-27。"
    },
    {
      "indent": 3,
      "text": "[236] A. Nicolosi and D. Mazieres, Secure acknowledgment of multicast messages in open peer-to-peer networks, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[236] A.ニコロージとD. Mazieres、オープンピア・ツー・ピア・ネットワークにおけるマルチキャストメッセージのセキュアな承認、ピアツーピアシステムに関する第3回国際ワークショップ、2004年2月26-27。"
    },
    {
      "indent": 3,
      "text": "[237] R. Zhang and C. Hu, Borg: a hybrid protocol for scalable application-level multicast in peer-to-peer networks, Proc. 13th international workshop on network and operating systems for digital audio and video 2003, pp. 172-179.",
      "ja": "[237] R.張及びC.胡、ボルグ：ピアツーピアネットワークにおけるスケーラブルなアプリケーションレベルのマルチキャストのためのハイブリッドプロトコル、PROC。デジタルオーディオおよびビデオ2003のネットワークおよびオペレーティングシステムで第13回国際ワークショップ、PP。172-179。"
    },
    {
      "indent": 3,
      "text": "[238] M. Sasabe, N. Wakamiya, M. Murata, and H. Miyahara, Scalable and continuous media streaming on peer-to-peer networks, Proc. Third Int'l IEEE Conf. on Peer-to-Peer Computing, Sept 1-3 2003, pp. 92-99.",
      "ja": "[238] M.ササビ、N.若宮、M.村田、及びH.宮原、ピアツーピアネットワーク上でストリーミングスケーラブルと連続媒体、PROC。第三に国際IEEEコンファレンス。ピアツーピアコンピューティング、9月1-3 2003年、頁92から99。"
    },
    {
      "indent": 3,
      "text": "[239] M. Hefeeda, A. Habib, B. Botev, D. Xu, and B. Bhargava, PROMISE: peer-to-peer media streaming using CollectCast, Proc. eleventh ACM international conference on multimedia 2003, pp. 45-54.",
      "ja": "[239] M. Hefeeda、A.ハビブ、B.ボテフ、D.徐、及びB.バルガヴァ、PROMISE：ピアツーピアメディアはCollectCast、PROCを使用してストリーミング。マルチメディア2003年の第十ACM国際会議、PP。45-54。"
    },
    {
      "indent": 3,
      "text": "[240] M. Castro, P. Druschel, A.-M. Kermarrec, A. Nandi, A. Rowstron, and A. Singh, SplitStream: high-bandwidth multicast in cooperative environments, Proc. 19th ACM symposium on operating systems principles 2003, pp. 298-313.",
      "ja": "[240] M.カストロ、P. Druschel、A.-M. Kermarrec、A.ナンディ、A. Rowstron、およびA.シン、SplitStream：協力的な環境での高帯域幅マルチキャスト、PROC。オペレーティング・システムの原則に関する第19回ACMシンポジウム2003、頁298から313まで。"
    },
    {
      "indent": 3,
      "text": "[241] M. Castro, P. Druschel, A.-M. Kermarrec, and A. Rowstron, SCRIBE: a large-scale and decentralized application-level multicast infrastructure, IEEE Journal on Selected Areas in Communications 20 (8) (2002)",
      "ja": "[241] M.カストロ、P. Druschel、A.-M. Kermarrec、およびA. Rowstronスクライブ：大規模かつ分散アプリケーションレベルマルチキャストインフラ、IEEEジャーナル・コミュニケーションズ20で選択された領域に（8）（2002）"
    },
    {
      "indent": 3,
      "text": "[242] S. Zhuang, B. Zhao, A. Joseph, R. Katz, and J. Kubiatowicz, Bayeux: an architecture for scalable and fault-tolerant wide-area data dissemination, Proc. 11th ACM international workshop on network and operating systems support for digital audio and video, Jan 2001.",
      "ja": "[242] S.荘、B.趙、A.ジョゼフ、R.カッツ、およびJ. Kubiatowicz、バイユー：スケーラブルでフォールトトレラント広域データ配布、PROCためのアーキテクチャ。デジタルオーディオおよびビデオ、2001年1月のためのネットワークとオペレーティングシステムのサポート第11回ACM国際ワークショップ。"
    },
    {
      "indent": 3,
      "text": "[243] R. Lienhart, M. Holliman, Y.-K. Chen, I. Kozintsev, and M. Yeung, Improving media services on P2P networks, IEEE Internet Computing 6 (1) (2002) 58-67.",
      "ja": "[243] R. Lienhart、M.ホリマン、Y.-K.陳、I. Kozintsev、およびM.ヨン、P2Pネットワーク上のメディアサービスの改善、IEEEインターネットコンピューティング6（1）（2002）58-67。"
    },
    {
      "indent": 3,
      "text": "[244] S. Ratnasamy, B. Karp, S. Shenker, D. Estrin, R. Govindan, L. Yin, and F. Yu, Data Centric Storage in Sensornets with GHT, a geographic hash table, Mobile Networks and Applications 8 (4) (2003) 427-442.",
      "ja": "[244] GHT、地理ハッシュテーブル、モバイルネットワークとアプリケーション8とSensornetsにおけるS. Ratnasamy、B.カープ、S. Shenker、D. Estrin、R.ゴヴィンダン、L.陰、及びF.ゆう、データセントリックストレージ（4）（2003）427から442。"
    },
    {
      "indent": 3,
      "text": "[245] M. Demirbas and H. Ferhatosmanoglu, Peer-to-peer spatial queries in sensor networks, Proc. Third Int'l IEEE Conf. on Peer-to-Peer Computing, 1-3 Sept 2003, pp. 32-39.",
      "ja": "[245] M. Demirbas及びH. Ferhatosmanoglu、センサネットワークにおけるピアツーピア空間問合せ、PROC。第三に国際IEEEコンファレンス。ピアツーピアコンピューティング、1-3 2003年9月、頁32-39に。"
    },
    {
      "indent": 3,
      "text": "[246] S. Ratnasamy, B. Karp, L. Yin, F. Yu, D. Estrin, R. Govindan, and S. Shenker, GHT: a geographic hash table for data-centric storage, Proc. First ACM Int'l Workshop on Wireless Sensor Networks and Applications (Mobicom) 2002, pp. 78-87.",
      "ja": "[246] S. Ratnasamy、B.カープ、L.陰陽、F.ゆう、D. Estrin、R.ゴヴィンダン、およびS. Shenker、GHT：データ中心の記憶のための地理的なハッシュテーブル、PROC。まずACM国際無線センサネットワークとその応用に関するワークショップ（モビコム）2002年、頁78-87。"
    },
    {
      "indent": 3,
      "text": "[247] J. Hellerstein and W. Wang, Optimization of In-Network Data Reduction, Proc. First Workshop on Data Management for Sensor Networks DMSN 2004, August 30th 2004.",
      "ja": "[247] J. HellersteinおよびW.ワング、ネットワーク内のデータ削減、PROCの最適化。センサネットワークDMSN 2004年8月30日2004年のデータ管理上の最初のワークショップ。"
    },
    {
      "indent": 3,
      "text": "[248] J. Li, J. Stribling, T. Gil, R. Morris, and F. Kaashoek, Comparing the performance of distributed hash tables under churn, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[248] J.李、J. Stribling、T.ギル、R.モリス、およびF. Kaashoek、チャーン下分散ハッシュテーブルの性能を比較すると、ピア・ツー・ピアシステムに関する第3回国際ワークショップ2月26日-27 2004。"
    },
    {
      "indent": 3,
      "text": "[249] S. Shenker, The data-centric revolution in networking, Keynote Speech, 29th Int'l Conf. on Very Large Data Bases, September 9-12 2003.",
      "ja": "[249] S. Shenker、ネットワークにおけるデータセントリック回転、基調講演、第29回国際カンファレンス。非常に大きなデータベースに、9月9-12 2003。"
    },
    {
      "indent": 3,
      "text": "[250] S. Gribble, A. Halevy, Z. Ives, M. Rodrig, and D. Suciu, What can databases do for P2P?, Proc. Fourth Int'l Workshop on Databases and the Web, WebDB2001, May 24-25 2001.",
      "ja": "データベースはP2P？PROCのために何ができる[250] S. Gribble、A. HALEVY、Z.アイヴス、M. Rodrig、およびD. Suciu、。第四インターナショナルのデータベースワークショップやWeb、WebDB2001、2001年5月24-25。"
    },
    {
      "indent": 3,
      "text": "[251] D. Clark, The design philosophy of the DARPA internet protocols, ACM SIGCOMM Computer Communication Review, Symp. proceedings on communications architectures and protocols 18 (4) (1988)",
      "ja": "[251] D.クラーク、DARPAインターネットプロトコルの設計理念、ACM SIGCOMMコンピュータコミュニケーションレビュー、SYMP。通信アーキテクチャ及びプロトコルの手続き18（4）（1988）"
    },
    {
      "indent": 3,
      "text": "[252] J.-C. Laprie, Dependable Computing and Fault Tolerance: Concepts and Terminology, Twenty-Fifth Int'l Symp. on Fault-Tolerant Computing, Highlights from Twenty-Five Years 1995, pp. 2-13.",
      "ja": "[252] J.-C. Laprie、ディペンダブルコンピューティングとフォールトトレランス：概念と用語、第二十五国際SYMP。フォールトトレラントコンピューティング上で、25年1995年、頁2-13からハイライト。"
    },
    {
      "indent": 3,
      "text": "[253] D. Clark, J. Wroclawski, K. Sollins, and R. Braden, Tussle in cyberspace: defining tomorrow's internet, Conf. on Applications, Technologies, Architectures and Protocols for Computer Communications 2002, pp. 347-356.",
      "ja": "サイバースペースでの[253] D.クラーク、J. Wroclawski、K. Sollins、およびR.ブレーデン、取っ組み合い：明日のインターネット、コンファレンスを定義します。コンピュータコミュニケーション2002年、頁347から356のためのアプリケーション、技術、アーキテクチャとプロトコルに。"
    },
    {
      "indent": 3,
      "text": "[254] L. O. Alima, A. Ghodsi, and S. Haridi, \"A framework for structured peer-to-peer overlay networks,\" in Global computing, vol. 3267, Lecture Notes in Computer Science: Springer Berlin / Heidelberg, 2005, pp. 223-249.",
      "ja": "[254] L. O.アリマ、A. Ghodsi、及びS. Haridi、グローバルコンピューティング、VOLの「構造化ピアツーピア・オーバーレイ・ネットワークのためのフレームワーク」。コンピュータサイエンスの3267、講義ノート：スプリンガー、ベルリン/ハイデルベルグ、2005年、頁223から249まで。"
    },
    {
      "indent": 3,
      "text": "[255] Clip2, The Gnutella Protocol Specification, http://www.clip2.com (2000)",
      "ja": "[255] CLIP2、グヌーテラプロトコル仕様、http://www.clip2.com（2000）"
    },
    {
      "indent": 3,
      "text": "[256] Napster, http://www.napster.com (1999)",
      "ja": "[256]ナップスター、http://www.napster.com（1999）"
    },
    {
      "indent": 3,
      "text": "[257] J. Mishchke and B. Stiller, A methodology for the design of distributed search in P2P middleware, IEEE Network 18 (1) (2004) 30-37.",
      "ja": "[257] J. Mishchke及びB.スティラー、P2Pミドルウェアにおける分散検索の設計のための方法、IEEEネットワーク18（1）（2004）30-37。"
    },
    {
      "indent": 3,
      "text": "[258] J. Li and K. Sollins, Implementing aggregation and broadcast over distributed hash tables. Full report, http://krs.lcs.mit.edu/regions/docs.html (November) (2003)",
      "ja": "[258] J. Li及びK. Sollins、分散ハッシュテーブル上に凝集及びブロードキャストを実現することができます。完全なレポート、http://krs.lcs.mit.edu/regions/docs.html（11月）（2003）"
    },
    {
      "indent": 3,
      "text": "[259] M. Castro, M. Costa, and A. Rowstron, Should we build Gnutella on a structured overlay?, ACM SIGCOMM Computer Communication Review 34 (1) (2004) 131-136.",
      "ja": "[259] M.カストロ、M.コスタ、およびA. Rowstron、我々は構造化オーバーレイ？ACM SIGCOMMコンピュータコミュニケーションレビュー34（1）（2004）131-136にグヌーテラを構築する必要があります。"
    },
    {
      "indent": 3,
      "text": "[260] A. Singla and C. Rohrs, Ultrapeers: Another Step Towards Gnutella Scalability, http://groups.yahoo.com/group/the_gdf/files/Proposals/ Working%20Proposals/Ultrapeer/ Version 1.0, 26 November (2002)",
      "ja": "[260] A. SinglaとC. Rohrs、ウルトラ：グヌーテラスケーラビリティ、http://groups.yahoo.com/group/the_gdf/files/Proposals/に向けて新たな一歩％20Proposals / Ultrapeer /バージョン1.0、11月26日の作業（2002 ）"
    },
    {
      "indent": 3,
      "text": "[261] B. Cooper and H. Garcia-Molina, Ad hoc, Self-Supervising Peer-to-Peer Search Networks, Technical Report, http://www.cc.gatech.edu/~cooperb/odin/ 2003.",
      "ja": "[261] B.クーパーとH.ガルシア - モリーナ、アドホック、自己監督ピアツーピア検索ネットワーク、技術報告書、http://www.cc.gatech.edu/~cooperb/odin/ 2003。"
    },
    {
      "indent": 3,
      "text": "[262] R. Baeza-Yates and B. Ribeiro-Neto, Modern Information Retrieval. Addison Wesley, Essex, England, 1999.",
      "ja": "[262] R. Baezaの-イェーツ及びB.リベイロ-ネト、現代の情報検索。アディソンウェズリー、エセックス、イングランド、1999年。"
    },
    {
      "indent": 3,
      "text": "[263] S. Sen and J. Wang, Analyzing peer-to-peer traffic across large networks, IEEE/ACM Trans. on Networking 12 (2) (2004) 219-232.",
      "ja": "[263] S.セン及びJ.王、大規模なネットワーク、IEEE / ACMトランス横切ってピア・ツー・ピア・トラフィックを分析します。ネットワーク12上の（2）（2004）219-232。"
    },
    {
      "indent": 3,
      "text": "[264] H. Balakrishnan, S. Shenker, and M. Walfish, Semantic-Free Referencing in Linked Distributed Systems, Second Int'l Workshop on Peer-to-Peer Systems IPTPS 03, 20-21 February 2003.",
      "ja": "[264] H.バラクリシュナン、S. Shenker、およびM. Walfish、リンクされた分散システムにおけるセマンティックフリーの参照、セカンド国際ワークショップピア・ツー・ピアシステムIPTPS 03、20-21 2003年2月に。"
    },
    {
      "indent": 3,
      "text": "[265] B. Yang, P. Vinograd, and H. Garcia-Molina, Evaluating GUESS and non-forwarding peer-to-peer search, The 24th Int'l Conf. on Distributed Computing Systems ICDCS'04, Mar 23-26 2004.",
      "ja": "[265] B.ヤン、P. Vinograd、及びH.ガルシア - モリーナ、評価GUESS非フォワーディングピア・ツー・ピア探索、24国際カンファレンス。分散コンピューティングシステムICDCS'04、月23-26 2004。"
    },
    {
      "indent": 3,
      "text": "[266] A. Gupta, B. Liskov, and R. Rodrigues, One Hop Lookups for Peer-to-Peer Overlays, 9th Workshop on Hot Topics in Operating Systems (HotOS), 18-21 May 2003.",
      "ja": "[266]ピア・ツー・ピアオーバーレイのA.グプタ、B.リスコフ、及びR.ロドリゲス、ワンホップルックアップを、オペレーティングシステムのホットトピックス（HotOS）第9回ワークショップ、18-21 2003年5月。"
    },
    {
      "indent": 3,
      "text": "[267] A. Gupta, B. Liskov, and R. Rodrigues, Efficient routing for peer-to-peer overlays, First symp. on Networked Systems Design and Implementation (NSDI), Mar 29-31 2004, pp. 113-126.",
      "ja": "[267] A.グプタ、B.リスコフ、及びR.ロドリゲス、ピア・ツー・ピアオーバーレイのための効率的なルーティング、最初SYMP。ネットワークシステムの設計と実装（NSDI）、月29-31 2004年、頁113から126に。"
    },
    {
      "indent": 3,
      "text": "[268] A. Mizrak, Y. Cheng, V. Kumar, and S. Savage, Structured superpeers: leveraging heterogeneity to provide constant-time lookup, IEEE Workshop on Internet Applications, June 23-24 2003.",
      "ja": "[268] A. Mizrak、Y.チェン、V.クマー、およびS.サベージ、構造化されたスーパーピア：インターネットアプリケーション、6月23-24 2003年、一定時間の検索を提供するために、異質、IEEEワークショップを活用します。"
    },
    {
      "indent": 3,
      "text": "[269] L. Adamic, R. Lukose, A. Puniyani, and B. Huberman, Search in power-law networks, Physical review E, The American Physical Society 64 (046135) (2001)",
      "ja": "[269] L.アダム、R. Lukose、A. Puniyani、およびB. Huberman、べき乗則ネットワークの検索、フィジカルレビュー・E、米国物理学会64（046135）（2001）"
    },
    {
      "indent": 3,
      "text": "[270] F. Banaei-Kashani and C. Shahabi, Criticality-based analysis and design of unstructured peer-to-peer networks as \"complex systems\", Proc. 3rd IEEE/ACM Int'l Symp. on Cluster Computing and the Grid 2003, pp. 351-358.",
      "ja": "[270] F. Banaei-Kashani及びC. Shahabi、 \"複雑システム\" として重要度ベースの分析及び非構造化ピアツーピアネットワークの設計、PROC。第3回IEEE / ACM国際SYMP。クラスタコンピューティングとグリッド2003、頁351から358に。"
    },
    {
      "indent": 3,
      "text": "[271] KaZaa, KaZaa Media Desktop, www.kazaa.com (2001)",
      "ja": "[271] KaZaaの、KaZaaのメディアデスクトップ、www.kazaa.com（2001）"
    },
    {
      "indent": 3,
      "text": "[272] S. Sen and J. Wang, Analyzing peer-to-peer traffic across large networks, Proc. second ACM SIGCOMM workshop on Internet measurement, November 06-08 2002, pp. 137-150.",
      "ja": "[272] S.セン及びJ.ワング、PROC、大規模なネットワークを横切ってピア・ツー・ピア・トラフィックを分析します。二ACMインターネット計測上のSIGCOMMワークショップ、11月06-08 2002年、頁137-150。"
    },
    {
      "indent": 3,
      "text": "[273] DirectConnect, http:www.neo-modus.com (2001)",
      "ja": "[273]のDirectConnectは、http：www.neo-modus.com（2001）"
    },
    {
      "indent": 3,
      "text": "[274] S. Saroiu, K. Gummadi, R. Dunn, S. Gribble, and H. Levy, An analysis of Internet content delivery systems, ACM SIGOPS Operating Systems Review 36 (2002) 315-327.",
      "ja": "[274] S. Saroiu、K. Gummadi、R.ダン、S. Gribble、及びH.レヴィ、インターネットコンテンツ配信システムの分析、ACM SIGOPSオペレーティングシステムレビュー36（2002）315から327。"
    },
    {
      "indent": 3,
      "text": "[275] A. Loo, The Future or Peer-to-Peer Computing, Communications of the ACM 46 (9) (2003) 56-61.",
      "ja": "[275] A.ルー、未来またはピアツーピア・コンピューティング、ACM 46の通信（9）（2003）56-61。"
    },
    {
      "indent": 3,
      "text": "[276] B. Yang and H. Garcia-Molina, Comparing Hybrid Peer-to-Peer Systems (extended), 27th Int'l Conf. on Very Large Data Bases, September 11-14 2001.",
      "ja": "ハイブリッドピアツーピアシステム（拡張）、第27回国際研究会を比較すると、[276] B. YangとH.ガルシア - モリーナ、。非常に大きなデータベースに、9月11-14 2001。"
    },
    {
      "indent": 3,
      "text": "[277] D. Scholl, OpenNap Home Page, http://opennap.sourceforge.net/ (2001)",
      "ja": "[277] D。 Skijol、OpenNap系のホームページ、hattup：opennapsaursnaphorjnet（2001）"
    },
    {
      "indent": 3,
      "text": "[278] S. Ghemawat, H. Gobioff, and S.-T. Leung, The Google file system, Proc. 19th ACM symposium on operating systems principles 2003, pp. 29-43.",
      "ja": "[278] S. Ghemawat、H. Gobioff、及びS.-T.レオン、Googleのファイルシステム、PROC。オペレーティング・システムの原則2003年の第19回ACMシンポジウム、PP。29-43。"
    },
    {
      "indent": 3,
      "text": "[279] I. Clarke, S. Miller, T. Hong, O. Sandberg, and B. Wiley, Protecting Free Expression Online with Freenet, IEEE Internet Computing 6 (1) (2002)",
      "ja": "[279] I.クラーク、S. Miller氏、T.香港、O.サンドバーグ、およびB.ワイリー、フリーネットでオンラインで無料の式の保護、IEEEインターネットコンピューティング6（1）（2002）"
    },
    {
      "indent": 3,
      "text": "[280] J. Mache, M. Gilbert, J. Guchereau, J. Lesh, F. Ramli, and M. Wilkinson, Request algorithms in Freenet-style peer-to-peer systems, Proc. Second IEEE Int'l Conf. on Peer to Peer Computing P2P'02, September 5-7 2002.",
      "ja": "[280] J.マッヘ、M.ギルバート、J. Guchereau、J.レッシュ、F.・ラムリ、及びM.ウィルキンソン、PROC、フリーネットスタイルピアツーピアシステム内の要求アルゴリズム。第二にIEEE国際コンファレンス。ピアのコンピューティングP2P'02、2002年9月5-7をピアに。"
    },
    {
      "indent": 3,
      "text": "[281] C. Rohrs, Query Routing for the Gnutella Networks, http://www.limewire.com/developer/query_routing/ keyword%20routing.htm Version 1.0 (2002)",
      "ja": "[281] C. Rohrs、グヌーテラネットワークのクエリのルーティング、http://www.limewire.com/developer/query_routing/キーワード％20routing.htmのバージョン1.0（2002）"
    },
    {
      "indent": 3,
      "text": "[282] I. Clarke, Freenet's Next Generation Routing Protocol, http://freenetproject.org/index.php?page=ngrouting, 20th July 2003.",
      "ja": "[282] I.クラーク、フリーネットの次世代ルーティングプロトコル、http://freenetproject.org/index.php?page=ngrouting、2003年7月20日。"
    },
    {
      "indent": 3,
      "text": "[283] A. Z. Kronfol, FASD: A fault-tolerant, adaptive scalable distributed search engine, Master's Thesis http://www.cs.princeton.edu/~akronfol/fasd/ 2002.",
      "ja": "[283] A. Z. Kronfol、FASD：フォールトトレラント、適応スケーラブルな分散型検索エンジン、修士論文のhttp://www.cs.princeton.edu/~akronfol/fasd/ 2002。"
    },
    {
      "indent": 3,
      "text": "[284] S. Gribble, E. Brewer, J. M. Hellerstein, and D. Culler, Scalable, Distributed Data Structures for Internet Service Construction, Proc. 4th Symp. on Operating Systems Design and Implementation OSDI 2000, October 2000.",
      "ja": "[284] S. Gribble、E.ブリューワー、J. M. Hellerstein、及びD. Culler、インターネットサービス建設、PROCためのスケーラブルな分散データ構造。第四SYMP。オペレーティングシステムの設計と実装OSDI 2000、2000年10月に。"
    },
    {
      "indent": 3,
      "text": "[285] K. Aberer, Efficient Search in Unbalanced, Randomized Peer-to-Peer Search Trees, EPFL Technical Report IC/2002/79 (2002)",
      "ja": "[285] K. Aberer、アンバランス、ランダム化ピアツーピア検索木で効率的な検索、EPFLテクニカルレポートIC / / 79 2002（2002）"
    },
    {
      "indent": 3,
      "text": "[286] R. Honicky and E. Miller, A fast algorithm for online placement and reorganization of replicated data, Proc. 17th Int'l Parallel and Distributed Processing Symp., April 2003.",
      "ja": "[286] R. Honicky及びE.ミラー、オンライン配置及びPROC、複製データの再編成のための高速アルゴリズム。第17回国際並列分散処理SYMP。、2003年4月。"
    },
    {
      "indent": 3,
      "text": "[287] G. S. Manku, Routing networks for distributed hash tables, Proc. 22nd annual ACM Symp. on Principles of Distributed Computing, PODC 2003, July 13-16 2003, pp. 133-142.",
      "ja": "[287] G. S. Manku、分散ハッシュテーブルのルーティングネットワーク、PROC。第22回年次ACM SYMP。分散コンピューティングの上の原則、PODC 2003、2003年7月13-16頁。133-142。"
    },
    {
      "indent": 3,
      "text": "[288] D. Lewin, Consistent hashing and random trees: algorithms for caching in distributed networks, Master's Thesis, Department of Electrical Engineering and Computer Science, Massachusetts Institute of Technology (1998)",
      "ja": "[288] D.レヴィン、コンシステントハッシュ法とランダム木：分散型ネットワークにおけるキャッシングのためのアルゴリズム、修士論文、電気工学およびコンピュータサイエンス学部、マサチューセッツ工科大学（1998）"
    },
    {
      "indent": 3,
      "text": "[289] S. Lei and A. Grama, Extended consistent hashing: a framework for distributed servers, Proc. 24th Int'l Conf. on Distributed Computing Systems ICDCS 2004, March 23-26 2004.",
      "ja": "[289] S.レイとA.グラマ、拡張一貫したハッシング：分散サーバのためのフレームワーク、PROC。第24回国際コンファレンス。分散コンピューティングシステムICDCS 2004年3月23-26 2004。"
    },
    {
      "indent": 3,
      "text": "[290] W. Litwin, Re: Chord & LH*, Email to Ion Stoica, March 23 2004a.",
      "ja": "[290] W.リトウィン、RE：コード＆LH *、イオン・ストイカ、3月23日2004Aにメールします。"
    },
    {
      "indent": 3,
      "text": "[291] J. Li, J. Stribling, R. Morris, F. Kaashoek, and T. Gil, A performance vs. cost framework for evaluating DHT design tradeoffs under churn, Proc. IEEE Infocom, Mar 13-17 2005.",
      "ja": "[291] J.李、J. Stribling、R.モリス、F. Kaashoek、及びT.ギル、チャーン、PROC下DHT設計トレードオフを評価するためのコストフレームワーク対性能。 IEEEインフォコム、2005 3 13-17。"
    },
    {
      "indent": 3,
      "text": "[292] S. Zhuang, D. Geels, I. Stoica, and R. Katz, On failure detection algorithms in overlay networks, Proc. IEEE Infocomm, Mar 13-17 2005.",
      "ja": "[292] S.荘、D. Geels、I.ストイカ、及びR.カッツ、オーバレイネットワークにおける故障検出アルゴリズムに、PROC。 IEEEインフォコム、2005 3 13-17。"
    },
    {
      "indent": 3,
      "text": "[293] X. Li, J. Misra, and C. G. Plaxton, Active and Concurrent Topology Maintenance, The 18th Annual Conf. on Distributed Computing (DISC 2004), Trippenhuis, Amsterdam, the Netherlands, October 4 - October 7 (2004)",
      "ja": "[293] X.李、J. Misraの、およびActive C. G. Plaxton、及び同時トポロジメンテナンス、第18回研究会。分散コンピューティング（DISC 2004）に、Trippenhuis、アムステルダム、オランダ、10月4日から10月7日まで（2004）"
    },
    {
      "indent": 3,
      "text": "[294] K. Aberer, L. O. Alima, A. Ghodsi, S. Girdzijauskas, M. Hauswirth, and S. Haridi, The essence of P2P: a reference architecture for overlay networks, Proc. of the 5th international conference on peer-to-peer computing, Aug 31-Sep 2 2005.",
      "ja": "[294] K. Aberer、L. O.アリマ、A. Ghodsi、S. Girdzijauskas、M. Hauswirth、及びS. Haridi、P2Pの本質：オーバーレイネットワークのための参照アーキテクチャ、PROC。ピア・ツー・ピア・コンピューティング、2005年8月31日から9月2日までの第5回国際会議の。"
    },
    {
      "indent": 3,
      "text": "[295] C. Tang, M. Buco, R. Chang, S. Dwarkadas, L. Luan, E. So, and C. Ward, Low traffic overlay networks with large routing tables, Proc. of ACM Sigmetrics Int'l Conf. on Measurement and Modeling of Comp. Sys., Jun 6-10 2005, pp. 14-25.",
      "ja": "[295] C.唐、M. Bucoの、R.チャン、S. Dwarkadas、L.ルアン、E.だから、及びC.区、大きなルーティングテーブルを有する低トラフィックオーバーレイネットワーク、PROC。 ACM Sigmetrics国際コンファレンスの。測定とコンプのモデル化に関する。 SYS。、6月6-10 2005頁14-25。"
    },
    {
      "indent": 3,
      "text": "[296] S. Rhea, D. Geels, T. Roscoe, and J. Kubiatowicz, Handling churn in a DHT, Proc. of the USENIX Annual Technical Conference, June 2004.",
      "ja": "DHT、PROCでチャーンを処理[296] S.レア、D. Geels、T.ロスコー、およびJ. Kubiatowicz、。 USENIXの年次技術会議、2004年6月の。"
    },
    {
      "indent": 3,
      "text": "[297] C. Blake and R. Rodrigues, High Availability, Scalable Storage, Dynamic Peer Networks: Pick Two, 9th Workshop on Hot Topics in Operating Systems (HotOS), Lihue, Hawaii, 18-21 May (2003)",
      "ja": "[297] C.ブレイクとR.ロドリゲス、高可用性、スケーラブルなストレージ、ダイナミックピアネットワーク：月（2003年）2、オペレーティングシステムのホットな話題（HotOS）第9回ワークショップ、リフエ、ハワイ、18-21を選択"
    },
    {
      "indent": 3,
      "text": "[298] S. Rhea, B. Godfrey, B. Karp, J. Kubiatowicz, S. Ratnasamy, S. Shenker, I. Stoica, and H. Yu, OpenDHT: a public DHT service and its uses, Proc. of the conf. on Applications, technologies, architectures and protocols for computer communications, Aug 22-26 2005, pp. 73-84.",
      "ja": "[298] S.レア、B.ゴドフリー、B.カープ、J. Kubiatowicz、S. Ratnasamy、S. Shenker、I.ストイカ、およびH.ユー、OpenDHT：公共DHTサービスとその使用、PROC。 CONFの。コンピュータ通信のためのアプリケーション、技術、アーキテクチャやプロトコル、2005年8月22〜26頁73-84に。"
    },
    {
      "indent": 3,
      "text": "[299] T. Gil, F. Kaashoek, J. Li, R. Morris, and J. Stribling, p2psim, a simulator for peer-to-peer protocols, http://www.pdos.lcs.mit.edu/p2psim/ (2003)",
      "ja": "[299] T.ギル、F. Kaashoek、J.リー、R.モリス、及びJ. Stribling、p2psim、ピア・ツー・ピア・プロトコルのシミュレータ、http://www.pdos.lcs.mit.edu/ p2psim /（2003）"
    },
    {
      "indent": 3,
      "text": "[300] K. Hildrum, J. D. Kubiatowicz, S. Rao, and B. Y. Zhao, Distributed object location in a dynamic network, Theory of Computing Systems (2004)",
      "ja": "[300] K. Hildrum、J. D. Kubiatowicz、S.ラオ、及びB. Y.趙、動的ネットワークにおける分散オブジェクトの位置、コンピューティングシステムの理論（2004）"
    },
    {
      "indent": 3,
      "text": "[301] N. Lynch, D. Malkhi, and D. Ratajczak, Atomic data access in distributed hash tables, Proc. Int'l Peer-to-Peer Symp., March 7-8 2002.",
      "ja": "[301] N.リンチ、D. Malkhi、及びD. Ratajczak、分散ハッシュテーブルにおけるアトミック・データ・アクセス、PROC。国際ピア・ツー・ピアのSYMP。、2002月7-8。"
    },
    {
      "indent": 3,
      "text": "[302] S. Gilbert, N. Lynch, and A. Shvartsman, RAMBO II: Rapidly Reconfigurable Atomic Memory for Dynamic Networks, Technical Report, MIT-CSAIL-TR-890 2004.",
      "ja": "[302] S.ギルバート、N.リンチ、およびA. Shvartsman、RAMBO II：動的ネットワークの急速再構成可能なアトミックメモリ、テクニカルレポート、MIT-CSAIL-TR-890 2004。"
    },
    {
      "indent": 3,
      "text": "[303] N. Lynch and I. Stoica, MultiChord: A resilient namespace management algorithm, Technical Memo MIT-LCS-TR-936 2004.",
      "ja": "[303] N.リンチおよびI.ストイカ、MultiChord：弾性ネームスペース管理アルゴリズム、テクニカルメモMIT-LCS-TR-936 2004。"
    },
    {
      "indent": 3,
      "text": "[304] J. Risson, K. Robinson, and T. Moors, Fault tolerant active rings for structured peer-to-peer overlays, Proc. of the 30th Annual IEEE Conf. on Local Computer Networks, Nov 15-17 2005, pp. 18-25.",
      "ja": "[304] J. Risson、K.ロビンソン、及びT.ムーア、PROC、構造化ピアツーピア・オーバーレイのフォールトトレラントアクティブリング。第30回IEEEコンファレンスの。ローカルコンピュータネットワーク、11月15-17 2005年、頁18-25に。"
    },
    {
      "indent": 3,
      "text": "[305] B. Awerbuch and C. Scheideler, Peer-to-peer systems for prefix search, Proc. 22nd annual ACM Symp. on Principles of Distributed Computing 2003, pp. 123-132.",
      "ja": "[305] B. Awerbuch及びC. Scheideler、プレフィックス検索、PROCのピア・ツー・ピア・システム。第22回年次ACM SYMP。分散コンピューティング2003、PPの上の原則。123-132。"
    },
    {
      "indent": 3,
      "text": "[306] F. Dabek, B. Zhao, P. Druschel, J. Kubiatowicz, and I. Stoica, Towards a common API for structured P2P overlays, Proc. Second Int'l Workshop on Peer to Peer Systems IPTPS 2003, February 2003.",
      "ja": "構造化P2Pオーバーレイのための共通API、PROC向けて[306] F. Dabek、B.趙、P. Druschel、J. Kubiatowicz、及びI.ストイカ、。システムIPTPS 2003、2003年2月のピアツーピアの第二の国際ワークショップ。"
    },
    {
      "indent": 3,
      "text": "[307] N. Feamster and H. Balakrishnan, Towards a logic for wide-area Internet routing, Proc. ACM SIGCOMM workshop on Future Directions in Network Architecture, August 25-27 2003, pp. 289-300.",
      "ja": "[307] N. Feamster及びH.バラクリシュナン、広域インターネットルーティングのロジックに向けて、PROC。ネットワークアーキテクチャにおける今後の方向性についてのACM SIGCOMMワークショップ、8月25-27 2003年、頁289-300。"
    },
    {
      "indent": 3,
      "text": "[308] B. Ahlgren, M. Brunner, L. Eggert, R. Hancock, and S. Schmid, Invariants: a new design methodology for network architectures, Proc. ACM SIGCOMM workshop on Future Direction in Network Architecture, August 30 2004, pp. 65-70.",
      "ja": "[308] B. Ahlgren、M.ブルンナー、L. Eggertの、R.ハンコック、およびS.シュミット、不変量：ネットワークアーキテクチャのための新しい設計手法、PROC。 ACMネットワークアーキテクチャにおける今後の方向にSIGCOMMワークショップ、2004年8月30日、頁65-70。"
    },
    {
      "indent": 3,
      "text": "[309] T. Cormen, C. Leiserson, R. Rivest, and C. Stein, Introduction to Algorithms, 2nd Edition. MIT Press, McGraw-Hill, Cambridge, London, England, 2003.",
      "ja": "[309] T. Cormen、C。Leiserson、R. Rivest氏、およびC.スタイン、アルゴリズム入門、第2版。 MITプレス、マグロウヒル、ケンブリッジ、ロンドン、イングランド、2003年。"
    },
    {
      "indent": 3,
      "text": "[310] I. Abraham, D. Malkhi, and O. Dubzinski, LAND:Stretch (1+epsilon) Locality Aware Networks for DHTs, Proc. ACM-SIAM Symp. on Discrete Algorithms SODA-04 2004.",
      "ja": "[310] I.アブラハム、D. Malkhi、およびO. Dubzinski、LAND：ストレッチ（1つの+イプシロン）PROC、のDHTのための地域アウェアネットワーク。 ACM-SIAM SYMP。離散アルゴリズムSODA-04 2004年。"
    },
    {
      "indent": 3,
      "text": "[311] S. Jain, R. Mahajan, and D. Wetherall, A study of the performance potential of DHT-based overlays, Proc. of the 4th Usenix symposium on internet technologies and systems (USITS), Mar 2003.",
      "ja": "[311] S. Jainさん、R.マハジャン、及びD. Wetherall、DHTに基づくオーバレイの性能ポテンシャルの研究、PROC。インターネット技術とシステム（USITS）、2003年3月に第4回のUsenixシンポジウムの。"
    },
    {
      "indent": 3,
      "text": "[312] J. Risson, A. Harwood, and T. Moors, Stable high-capacity one-hop distributed hash tables, Proc. of the IEEE Symposium on Computers and Communications (ISCC'06), Jun 26-29 2006.",
      "ja": "[312] J. Risson、A.ハーウッド、およびT.ムーア、安定した高容量のワンホップ分散ハッシュテーブル、PROC。コンピュータとコミュニケーション（ISCC'06）上のIEEEシンポジウム、2006年6月26-29の。"
    },
    {
      "indent": 3,
      "text": "[313] V. Ramasubramanian and E. Sirer, Beehive: O(1) Lookup Performance for Power-Law Query Distributions in Peer-to-Peer Overlays, Proc. First Symp. on Networked Systems Design and Implementation (NSDI'04), San Francisco, California, March 29-31 (2004) 99-112.",
      "ja": "[313] V. Ramasubramanian及びE. Sirer、ビーハイブ：ピア・ツー・ピアオーバーレイにおけるパワー則クエリ分布のためにO（1）ルックアップ性能、PROC。まずSYMP。ネットワークシステムの設計と実装（NSDI'04）、サンフランシスコ、カリフォルニア州、月29-31（2004）99から112に。"
    },
    {
      "indent": 3,
      "text": "[314] I. Abraham, A. Badola, D. Bickson, D. Malkhi, S. Maloo, and S. Ron, Practical locality-awareness for large scale information sharing, Proc. 4th International Workshop on Peer-to-Peer Systems, Feb 24-25 2005.",
      "ja": "[314] I.アブラハム、A. Badola、D. Bickson、D. Malkhi、S. Maloo、及びS.ロン、大規模な情報の共有、PROCのための実用的な局所意識。ピアツーピアシステムに関する第4回国際ワークショップ、2005年2月24-25。"
    },
    {
      "indent": 3,
      "text": "[315] B. Leong, B. Liskov, and E. Demaine, Epichord: parallelizing the Chord lookup algorithm with reactive routing state management, Proc. of the 12th International Conference on Networks, Nov 2004.",
      "ja": "[315] B.リョン、B.リスコフ、及びE. Demaine、Epichord：反応ルーティング状態管理、PROCとコード検索アルゴリズムを並列化。ネットワーク上の第12回国際会議、2004年11月の。"
    },
    {
      "indent": 3,
      "text": "[316] J. Li, J. Stribling, R. Morris, and F. Kaashoek, Bandwidth-efficient management of DHT routing tables, Proc. 2nd Symposium on Networked Systems Design and Implementation, May 2-4 2005.",
      "ja": "[316] J.李、J. Stribling、R.モリス、およびF. Kaashoek、DHTルーティングテーブルの帯域幅効率的な管理、PROC。ネットワークシステムの設計と実装に関する第2回シンポジウム、2005年5月2-4。"
    },
    {
      "indent": 3,
      "text": "[317] S. Rhea, B.-G. Chun, J. Kubiatowicz, and S. Shenker, Fixing the embarrassing slowness of OpenDHT on PlanetLab, Proc. of the Second USENIX Workshop on Real, Large Distributed Systems, Dec 13 2005.",
      "ja": "[317] S.レア、B.-G.チュン、J. Kubiatowicz、およびS. Shenker、プラネット、PROCにOpenDHTの恥ずかしい遅固定されます。実際、大規模な分散システムに関する第2回USENIXワークショップ、2005年12月13日の。"
    },
    {
      "indent": 3,
      "text": "[318] M. Costa, M. Castro, A. Rowstron, and P. Key, PIC: Practical Internet coordinates for distance estimation, Proc. of the 24th international conference on distributed computing systems, Mar 2004.",
      "ja": "[318] M.コスタ、M.カストロ、A. Rowstron、およびP.キー、PIC：実用的なインターネットは距離推定、PROCの座標。分散コンピューティング・システム、2004年3月の第24回国際会議の。"
    },
    {
      "indent": 3,
      "text": "[319] M. Castro, M. B. Jones, A.-M. Kermarrec, A. Rowstron, M. Theimer, H. Wang, and A. Wolman, An evaluation of scalable application- level multicast built using peer-to-peer overlays, Proc. of the 22nd Annual Joint Conf. of the IEEE Comp. and Comm. Soc. (INFOCOM), 30 Mar - 3 Apr 2003, pp. 1510-1520.",
      "ja": "[319] M.カストロ、M. B.ジョーンズ、A.-M. Kermarrec、A. Rowstron、M. Theimer、H.王、およびA.ウォルマン、スケーラブルなアプリケーションレベルマルチキャストの評価は、ピア・ツー・ピアオーバーレイ、PROCを使用して構築されました。第22回合同コンファレンスの。 IEEEコンプの。そしてコム。 SOC。 （インフォコム）、2003年3月30日から4月3日まで、頁1510年から1520年。"
    },
    {
      "indent": 3,
      "text": "[320] S. Ratnasamy, M. Handley, R. Karp, and S. Shenker, Application-level multicast using content-addressable networks, Proc. of the Third International Workshop on Networked Group Communication, Nov 7-9 2001.",
      "ja": "[320] S. Ratnasamy、M.ハンドレー、R.カープ、およびS. Shenker、PROCを連想ネットワークを使用してアプリケーションレベルのマルチキャスト。ネットワークグループコミュニケーションに関する第3回国際ワークショップ、2001年11月7-9の。"
    },
    {
      "indent": 3,
      "text": "[321] S. El-Ansary, L. Alima, P. Brand, and S. Haridi, Efficient broadcast in structured P2P networks, Second Int'l Workshop on Peer-to-Peer Systems (IPTPS 03), Berkeley, CA, USA, 20-21 February (2003)",
      "ja": "ピアツーピアシステム（IPTPS 03）上の[321] S.エルAnsary、L.アリマ、P.ブランド、及びS. Haridi、構造化P2Pネットワークにおける効率的な放送、第二国際ワークショップ、バークレー、CA、 USA、20-21 2月（2003年）"
    },
    {
      "indent": 3,
      "text": "[322] J. Li, K. Sollins, and D.-Y. Lim, Implementing aggregation and broadcast over Distributed Hash Tables, ACM Computer Communication Reviews 35 (1) (2005) 81-92.",
      "ja": "[322] J.李、K. Sollins、及びD.-Y.リムは、分散ハッシュテーブルの上に集約し、放送を実施、ACMコンピュータコミュニケーションは、35（1）（2005）81-92をレビュー。"
    },
    {
      "indent": 3,
      "text": "[323] V. Pai, K. Tamilmani, V. Sambamurthy, K. Kumar, and A. Mohr, Chainsaw: eliminating trees from overlay multicast, Proc. 4th Int'l Workshop on Peer-to-Peer Systems, February 24-25 2005.",
      "ja": "[323] V.パイ、K. Tamilmani、V. Sambamurthy、K.クマール、及びA.モーア、チェーンソー：オーバレイマルチキャスト、PROCから木を除去します。ピアツーピアシステムに関する第4回国際ワークショップ、2005年2月24-25。"
    },
    {
      "indent": 3,
      "text": "[324] K. Birman, M. Hayden, O. Ozkasap, Z. Xiao, and M. Budiu, Bimodal Multicast, ACM Trans. on Computer Systems 17 (2) (1999) 41-88.",
      "ja": "[324] K.バーマン、M.ヘイデン、O. Ozkasap、Z.シャオ、及びM. Budiu、バイモーダルマルチキャスト、ACMトランス。コンピュータシステム17（2）（1999）41から88に。"
    },
    {
      "indent": 3,
      "text": "[325] Z. Zhang, S. Chen, Y. Ling, and R. Chow, Resilient capacity-aware multicasting based on overlay networks, Proc. of the 25th IEEE Int'l Conf. on Distributed Computing Systems, 6-10 June 2005, pp. 565-574.",
      "ja": "[325] Z.チャン、S.チェン、Y.リン、及びR.チョウ、オーバレイネットワーク、PROCに基づく弾力容量対応マルチキャスト。第25回IEEE国際コンファレンスの。分散コンピューティングシステム、2005年6月6-10日、頁565から574に。"
    },
    {
      "indent": 3,
      "text": "[326] A. Bharambe, S. Rao, V. Padmanabhan, S. Seshan, and H. Zhang, The impact of heterogeneous bandwidth constraints on DHT-based multicast protocols, Proc. 4th Int'l Workshop on Peer-to-Peer Systems, February 24-25 2005.",
      "ja": "[326] A. Bharambe、S.ラオ、V. Padmanabhan、S. Seshan、及びH.チャン、DHTベースのマルチキャストプロトコルの異種帯域幅の制約の影響、PROC。ピアツーピアシステムに関する第4回国際ワークショップ、2005年2月24-25。"
    },
    {
      "indent": 3,
      "text": "[327] A. Ghodsi, L. O. Alima, S. El-Ansary, P. Brand, and S. Haridi, Self-correcting broadcast in distributed hash tables, Proc. of the 15th IASTED International Conf. on Parallel and Distributed Computing and Systems, Nov 2003.",
      "ja": "[327] A. Ghodsi、L. O.アリマ、S.エルAnsary、P.ブランド、及びS. Haridi、分散ハッシュテーブルにおける自己修正放送、PROC。第15回IASTED国際コンファレンスの。並列分散コンピューティング・システム、2003年11月に。"
    },
    {
      "indent": 3,
      "text": "[328] R. Mahajan, M. Castro, and A. Rowstron, Controlling the cost of reliability in peer-to-peer overlays, Second Int'l Workshop on Peer-to-Peer Systems IPTPS'03, February 20-21 2003.",
      "ja": "[328] R.マハジャン、M.カストロ、及びA. Rowstron、ピア・ツー・ピアオーバーレイの信頼性のコストを制御する、第二の国際ワークショップピアツーピアシステムIPTPS'03 2月20-21 2003年。"
    },
    {
      "indent": 3,
      "text": "[329] S. Rhea, D. Geels, T. Roscoe, and J. Kubiatowicz, Handling churn in a DHT, Report No. UCB/CSD-03-1299, University of California, also Proc. USENIX Annual Technical Conference, June 2003.",
      "ja": "[329] S.レア、D. Geels、T.ロスコー、およびJ. Kubiatowicz、DHTで処理チャーン、レポートNo. UCB / CSD-03から1299、カリフォルニア大学、また、PROC。 USENIXの年次技術会議、2003年6月。"
    },
    {
      "indent": 3,
      "text": "[330] M. Castro, M. Costa, and A. Rowstron, Performance and dependability of structured peer-to-peer overlays, Microsoft Research Technical Report MSR-TR-2003-94, December. Also 2004 Int'l Conf. on Dependable Systems and Networks, June 28-July 1 2003.",
      "ja": "[330] M.カストロ、M.コスタ、およびA. Rowstron、構造化ピア・ツー・ピアオーバーレイのパフォーマンスと信頼性、マイクロソフトリサーチテクニカルレポートMSR-TR-2003から94年12月。また、2004年国際コンファレンス。ディペンダブルシステムとネットワーク、2003年6月28日から7月1日までに。"
    },
    {
      "indent": 3,
      "text": "[331] D. Liben-Nowell, H. Balakrishnan, and D. Karger, Analysis of the evolution of peer-to-peer systems, Annual ACM Symp. on Principles of Distributed Computing 2002, pp. 233-242.",
      "ja": "[331] D.リベニ-Nowell、H.バラクリシュナン、およびD.カーガー、ピア・ツー・ピア・システムの進化、年次ACM SYMPの分析。分散コンピューティング2002、PPの上の原則。233-242。"
    },
    {
      "indent": 3,
      "text": "[332] L. Alima, S. El-Ansary, P. Brand, and S. Haridi, DKS(N,k,f): a family of low communication, scalable and fault-tolerant infrastructures for P2P applications, Proc. 3rd IEEE/ACM Int'l Symp. on Cluster Computing and the Grid (2003) 344-350.",
      "ja": "[332] L.アリマ、S.エルAnsary、P.ブランド、及びS. Haridi、DKS（N、K、F）低い通信、P2Pアプリケーション、PROCのためのスケーラブルでフォールトトレラントインフラストラクチャのファミリー。第3回IEEE / ACM国際SYMP。クラスタコンピューティングとグリッド（2003）344から350に。"
    },
    {
      "indent": 3,
      "text": "[333] D. Karger and M. Ruhl, Finding nearest neighbours in growth-restricted metrics, Proc. 34th annual ACM symposium on Theory of computing 2002, pp. 741-750.",
      "ja": "[333] D.カーガーとM.リュール、PROC、成長制限指標で最近傍を見つけます。コンピューティング2002の理論、頁上の第34回年次ACMシンポジウム。741から750まで。"
    },
    {
      "indent": 3,
      "text": "[334] S. Ratnasamy, A Scalable Content-Addressable Network, Doctoral Dissertation 2002.",
      "ja": "[334] S. Ratnasamy、スケーラブルな連想ネットワーク、博士論文2002。"
    },
    {
      "indent": 3,
      "text": "[335] S. McCanne and S. Floyd, The LBNL/UCB Network Simulator.",
      "ja": "[335] S. McCanneとS.フロイド、LBNL / UCBネットワークシミュレータ。"
    },
    {
      "indent": 3,
      "text": "[336] M. Naor and U. Wieder, Novel architectures for P2P applications: the continuous-discrete approach, Proc. fifteenth annual ACM Symp. on Parallel Algorithms and Architectures, SPAA 2003, June 7-9 2003, pp. 50-59.",
      "ja": "[336] M. NaorとU. WIEDER、P2Pアプリケーションのための新しいアーキテクチャ：連続離散アプローチ、PROC。第十五年間ACM SYMP。並列アルゴリズムとアーキテクチャ、SPAA 2003年6月7-9 2003年、頁50から59に。"
    },
    {
      "indent": 3,
      "text": "[337] N. D. de Bruijn, A combinatorial problem, Koninklijke Netherlands: Academe Van Wetenschappen 49 (1946) 758-764.",
      "ja": "[337] N. D.デBruijnグラフ、組合せ問題、ロイヤルオランダ：科学49（1946）758から764までの学界。"
    },
    {
      "indent": 3,
      "text": "[338] J.-W. Mao, \"The Coloring and Routing Problems on de Bruijn Interconnection Networks,\" in Doctoral Dissertation, National Sun Yat-sen University, 2003.",
      "ja": "[338] J.-W.博士論文、国立中山大学、2003年に毛沢東、「デ・Bruijnグラフ相互結合網上の着色およびルーティングの問題、」。"
    },
    {
      "indent": 3,
      "text": "[339] M. L. Schlumberger, De Bruijn communication networks, Doctoral Dissertation 1974.",
      "ja": "[339] M. L.シュルンベルジェ、デBruijnグラフ通信ネットワーク1974博士論文。"
    },
    {
      "indent": 3,
      "text": "[340] M. Imase and M. Itoh, Design to minimize diameter on building-block network, IEEE Trans. on Computers C-30 (6) (1981) 439- 442.",
      "ja": "[340] M. Imase及びM.伊藤、デザインビルディングブロックのネットワーク、IEEEトランスの直径を最小にします。コンピュータ上のC-30（6）（1981）439- 442。"
    },
    {
      "indent": 3,
      "text": "[341] S. M. Reddy, D. K. Pradhan, and J. G. Kuhl, Direct graphs with minimal and maximal connectivity, Technical Report, School of Engineering, Oakland University (1980)",
      "ja": "[341] S. M.レディ、D. K.プラダン、及びJ. G. Kuhl、最小および最大の接続で直接グラフ、技術報告、工学部、オークランド大学（1980）"
    },
    {
      "indent": 3,
      "text": "[342] R. A. Rowley and B. Bose, Fault-tolerant ring embedding in de Bruijn networks, IEEE Trans. on Computers 42 (12) (1993) 1480- 1486.",
      "ja": "[342] R. A.ローリーおよびB.ボーズ、デBruijnグラフネットワーク、IEEEトランスに埋め込むフォールトトレラントリング。コンピュータ42（12）（1993）1480- 1486年に。"
    },
    {
      "indent": 3,
      "text": "[343] K. Y. Lee, G. Liu, and H. F. Jordan, Hierarchical networks for optical communications, Journal of Parallel and Distributed Computing 60 (2000) 1-16.",
      "ja": "[343] K. Y.リー、G.劉、およびH. F.ヨルダン、光通信用階層ネットワーク、並列分散コンピューティング60（2000）1-16誌。"
    },
    {
      "indent": 3,
      "text": "[344] M. Naor and U. Wieder, Know thy neighbor's neighbor: better routing for skip-graphs and small worlds, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[344] M. NaorとU. WIEDERは、隣人の隣人を知っている：スキップ・グラフや小さな世界のためのより良いルーティング、ピアツーピアシステムに関する第3回国際ワークショップ、2004年2月26-27。"
    },
    {
      "indent": 3,
      "text": "[345] P. Fraigniaud and P. Gauron, The content-addressable networks D2B, Technical Report 1349, Laboratoire de Recherche en Informatique, January 2003.",
      "ja": "[345] P.およびP. Fraigniaud Gauron、連想ネットワークD2B、コンピュータサイエンスの技術報告書1349研究所、2003年1月。"
    },
    {
      "indent": 3,
      "text": "[346] A. Datta, S. Girdzijauskas, and K. Aberer, On de Bruijn routing in distributed hash tables: there and back again, Proc. Fourth IEEE Int'l Conf. on Peer-to-Peer Computing, , 25-27 August 2004.",
      "ja": "[346] A.ダッタ、S. Girdzijauskas、及びK. Aberer、分散ハッシュテーブルにおけるデBruijnグラフルーティングについて：再び存在と、PROC。第四にIEEE国際コンファレンス。ピアツーピアコンピューティング、25-27 2004年8月。"
    },
    {
      "indent": 3,
      "text": "[347] W. Pugh, Skip lists: a probabilistic alternative to balanced trees, Proc. Workshop on Algorithms and Data Structures, August 17-19 1989, pp. 437-449.",
      "ja": "[347] W.ピュー、スキップリスト：バランスの取れた木、PROCに確率的代わります。アルゴリズムとデータ構造に関するワークショップ、8月17-19 1989年、頁437から449まで。"
    },
    {
      "indent": 3,
      "text": "[348] W. Pugh, Skip lists: a probabilistic alternative to balanced trees, Communications of the ACM 33 (6) (1990) 668-676.",
      "ja": "[348] W.ピュー、リストをスキップ：バランス木の確率の代替、ACM 33（6）（1990）668から676のコミュニケーション。"
    },
    {
      "indent": 3,
      "text": "[349] J. Gray, The transaction concept: Virtues and limitations, Proc. VLDB, September 1981.",
      "ja": "[349] J.グレー、トランザクションの概念：美徳と限界、PROC。 VLDB、1981年9月。"
    },
    {
      "indent": 3,
      "text": "[350] B. T. Loo, J. M. Hellerstein, R. Huebsch, S. Shenker, and I. Stoica, Enhancing P2P file-sharing with internet-scale query processor, Proc. 30th Int'l Conf. on Very Large Data Bases VLDB 2004, 29 August-3 September 2004.",
      "ja": "[350] B. T.ルー、J. M. Hellerstein、R. Huebsch、S. Shenker、およびI.ストイカ、P2Pファイル共有、インターネット規模クエリプロセッサ、PROCとを向上させることができます。 30国際コンファレンス。非常に大きなデータベースVLDB 2004年、2004年8月29日から9月3日までに。"
    },
    {
      "indent": 3,
      "text": "[351] M. Stonebraker, P. Aoki, W. Litwin, A. Pfeffer, A. Sah, J. Sidell, C. Staelin, and A. Yu, Mariposa: a wide-area distributed database system, THE VLDB Journal - The Int'l Journal of Very Large Data Bases (5) (1996) 48-63.",
      "ja": "[351] M.ストーンブレーカー、P.青木、W.リトウィン、A. Pfefferの、A. SAH、J. Sidell、C. Staelin、及びA.ゆう、マリポーサ：広域分散データベースシステム、VLDBジャーナル - 非常に大きなデータ拠点の国際ジャーナル（5）（1996）48-63。"
    },
    {
      "indent": 3,
      "text": "[352] V. Cholvi, P. Felber, and E. Biersack, Efficient Search in Unstructured Peer-to-Peer Networks, Proc. Symp. on Parallel Algorithms and Architectures, July 2004.",
      "ja": "[352] V. Cholvi、P. Felber、及びE. Biersack、非構造化ピアツーピアネットワークにおける効率的な検索、PROC。 SYMP。並列アルゴリズムとアーキテクチャ、2004年7月に。"
    },
    {
      "indent": 3,
      "text": "[353] S. Daswani and A. Fisk, Gnutella UDP Extension for Scalable Searches (GUESS) v0.1, http://www.limewire.org/fisheye/viewrep/~raw,r=1.2/limecvs/ core/guess_01.html (2002)",
      "ja": "[353]スケーラブルな検索のためのS. Daswani及びA.フィスク、グヌーテラUDP拡張（GUESS）v0.1の、http://www.limewire.org/fisheye/viewrep/~raw,r=1.2/limecvs/コア/ guess_01 .htmlを（2002）"
    },
    {
      "indent": 3,
      "text": "[354] A. Fisk, Gnutella Dynamic Query Protocol v0.1, Gnutella Developer Forum (2003)",
      "ja": "[354] A.フィスク、グヌーテラ動的なクエリプロトコルv0.1の、グヌーテラの開発者フォーラム（2003年）"
    },
    {
      "indent": 3,
      "text": "[355] O. Gnawali, A Keyword Set Search System for Peer-to-Peer Networks, Master's Thesis 2002.",
      "ja": "[355] O. Gnawali、ピアツーピアネットワーク、修士論文2002年のキーワードを設定検索システム。"
    },
    {
      "indent": 3,
      "text": "[356] Limewire, Limewire Host Count, http://www.limewire.com/english/content/netsize.shtml (2004)",
      "ja": "[356]ライムワイヤー、ライムワイヤーホストカウント、http://www.limewire.com/english/content/netsize.shtml（2004）"
    },
    {
      "indent": 3,
      "text": "[357] A. Fisk, Gnutella Ultrapeer Query Routing, http://groups.yahoo.com/group/the_gdf/files/Proposals/ Working%20Proposals/search/Ultrapeer%20QRP/ v0.1 (2003)",
      "ja": "[357] A.フィスク、グヌーテラUltrapeerクエリルーティング、http://groups.yahoo.com/group/the_gdf/files/Proposals/作業％20Proposals /検索/ Ultrapeer％以下の20QRP / v0.1の（2003）"
    },
    {
      "indent": 3,
      "text": "[358] A. Fisk, Gnutella Dynamic Query Protocol, http://groups.yahoo.com/group/the_gdf/files/Proposals/ Working%20Proposals/search/Dynamic%20Querying/ v0.1 (2003)",
      "ja": "[358] A.フィスク、グヌーテラダイナミッククエリプロトコル、http://groups.yahoo.com/group/the_gdf/files/Proposals/ワーキング％20Proposals /検索/ダイナミック％20Querying / v0.1の（2003）"
    },
    {
      "indent": 3,
      "text": "[359] S. Thadani, Meta Data searches on the Gnutella Network (addendum), http://www.limewire.com/developer/MetaProposal2.htm (2001)",
      "ja": "[359] S. Thadaniは、メタデータ（2001）のGnutellaネットワーク（補遺）、http://www.limewire.com/developer/MetaProposal2.htmで検索します"
    },
    {
      "indent": 3,
      "text": "[360] S. Thadani, Meta Information Searches on the Gnutella Networks, http://www.limewire.com/developer/metainfo_searches.html (2001)",
      "ja": "メタ情報は、グヌーテラネットワーク上で検索[360] S. Thadani、http://www.limewire.com/developer/metainfo_searches.html（2001）"
    },
    {
      "indent": 3,
      "text": "[361] P. Reynolds and A. Vahdat, Efficient peer-to-peer keyword searching, ACM/IFP/USENIX Int'l Middleware Conference, Middleware 2003, June 16-20 2003.",
      "ja": "[361] P.レイノルズとA. Vahdat、効率的なピア・ツー・ピアのキーワード検索、ACM / IFP / USENIX国際ミドルウェア会議、ミドルウェア2003年、2003年6月16-20。"
    },
    {
      "indent": 3,
      "text": "[362] W. Terpstra, S. Behnel, L. Fiege, J. Kangasharju, and A. Buchmann, Bit Zipper Rendezvous, optimal data placement for general P2P queries, Proc. First Int'l Workshop on Peer-to-Peer Computing and Databases, March 14 2004.",
      "ja": "[362] W.テルプストラ、S. Behnel、L. Fiege、J. Kangasharju、及びA. Buchmann、ビットジッパーランデブー、一般的なP2Pのクエリの最適なデータ配置、PROC。ピア・ツー・ピアコンピューティングとデータベースの最初の国際ワークショップ、2004年3月14日。"
    },
    {
      "indent": 3,
      "text": "[363] A. Singhal, Modern Information Retrieval: A Brief Overview, IEEE Data Engineering Bulletin 24 (4) (2001) 35-43.",
      "ja": "[363] A.シングハル、現代の情報検索：概要、IEEEデータ工学紀要24（4）（2001）35-43。"
    },
    {
      "indent": 3,
      "text": "[364] E. Cohen, A. Fiat, and H. Kaplan, Associative Search in Peer to Peer Networks: Harnessing Latent Semantics, IEEE Infocom 2003, The 22nd Annual Joint Conf. of the IEEE Computer and Communications Societies, March 30-April 3 2003.",
      "ja": "ネットワークをピアツーピアで[364] E.コーエン、A.フィアット、およびH.カプラン、連想検索：活用潜在的意味、IEEEインフォコム2003、第22回合同研究会。 IEEEコンピュータと通信学会、2003年3月30日から4月3日までの。"
    },
    {
      "indent": 3,
      "text": "[365] W. Muller and A. Henrich, Fast retrieval of high-dimensional feature vectors in P2P networks using compact peer data summaries, Proc. 5th ACM SIGMM international workshop on Multimedia Information Retrieval, November 7 2003, pp. 79-86.",
      "ja": "[365] W.ミュラー及びA. Henrich、PROCをコンパクトピアデータ要約を使用してP2Pネットワークにおける高次元の特徴ベクトルの高速検索。マルチメディア情報検索、2003年11月7日、頁79-86第5回ACM SIGMM国際ワークショップ。"
    },
    {
      "indent": 3,
      "text": "[366] M. T. Ozsu and P. Valduriez, Principles of Distributed Database Systems, 2nd edition ed. Prentice Hall, 1999.",
      "ja": "[366] M. T. Ozsu及びP. Valduriez、分散データベースシステム、第2版の版の原則。プレンティス・ホール、1999。"
    },
    {
      "indent": 3,
      "text": "[367] G. Salton, A. Wong, and C. S. Yang, A vector space model for automatic indexing, Communications of the ACM 18 (11) (1975) 613- 620.",
      "ja": "[367] G.ソルトン、A.ウォン、及びC. S.ヤン、自動索引付けのためのベクトル空間モデル、ACM 18（11）の通信（1975）613- 620。"
    },
    {
      "indent": 3,
      "text": "[368] S. E. Robertson, S. Walker, and M. Beaulieu, Okapi at TREC-7: automatic ad hoc, filtering, VLC and filtering tracks, Proc. Seventh Text REtrieval Conference, TREC-7, NIST Special Publication 500-242, July 1999, pp. 253-264.",
      "ja": "TREC-7での[368] S. E.ロバートソン、S.ウォーカー、及びM.ボーリュー、オカピ自動アドホック、フィルタリング、VLC及びフィルタリングト​​ラック、PROC。セブンステキスト検索会議、TREC-7、は、NIST Special Publication 500から242、1999年7月、頁253から264まで。"
    },
    {
      "indent": 3,
      "text": "[369] A. Singhal, J. Choi, D. Hindle, D. Lewis, and F. Pereira, AT&T at TREC-7, Proc. Seventh Text REtrieval Conf. TREC-7, July 1999, pp. 253-264.",
      "ja": "[369] TREC-7、PROCでA.シングハル、J.チェ、D.ヒンドル、D.ルイス、およびF.ペレイラ、AT＆T。セブンステキスト検索コンファレンス。 TREC-7、1999年7月、頁253から264まで。"
    },
    {
      "indent": 3,
      "text": "[370] K. Sankaralingam, S. Sethumadhavan, and J. Browne, Distributed Pagerank for P2P Systems, Proc. 12th international symposium on High Performance Distributed Computing HPDC, June 22-24 2003.",
      "ja": "[370] K. Sankaralingam、S. Sethumadhavan、及びJ.ブラウン、P2Pシステム、PROCための分散のPageRank。高性能第12回国際シンポジウムは、コンピューティングHPDC、2003年6月22〜24を分散します。"
    },
    {
      "indent": 3,
      "text": "[371] I. Klampanos and J. Jose, An architecture for information retrieval over semi-collaborated peer-to-peer networks, Proc. 2004 ACM symposium on applied computing 2004, pp. 1078-1083.",
      "ja": "[371] I. Klampanos及びJ.ホセ、半コラボピアツーピアネットワークを介して情報検索のためのアーキテクチャ、PROC。適用されるコンピューティング2004年2004年ACMシンポジウム、頁。1078年から1083年。"
    },
    {
      "indent": 3,
      "text": "[372] C. Tang, Z. Xu, and S. Dwarkadas, Peer-to-peer information retrieval using self-organizing semantic overlay networks, Proc. 2003 conference on Applications, Technologies, Architectures and Protocols for Computer Communications, August 25-29 2003, pp. 175-186.",
      "ja": "[372] C.唐、Z.徐、及びS. Dwarkadas、PROCを自己組織化セマンティックオーバーレイネットワークを使用してピア・ツー・ピア情報検索。コンピュータ通信のためのアプリケーション、技術、アーキテクチャとプロトコルの2003会議、8月25-29 2003年、頁175-186。"
    },
    {
      "indent": 3,
      "text": "[373] C. Tang and S. Dwarkadas, Hybrid global-local indexing for efficient peer-to-peer information retrieval, Proc. First Symp. on Networked Systems Design and Implementation NSDI'04, March 29-31 2004, pp. 211-224.",
      "ja": "[373] C.タン及びS. Dwarkadas、効率的なピア・ツー・ピア情報検索、PROC用ハイブリッドグローバルローカルインデクシング。まずSYMP。ネットワークシステムの設計と実装NSDI'04 3月29-31 2004年、頁211から224に。"
    },
    {
      "indent": 3,
      "text": "[374] G. W. Furnas, S. Deerwester, S. T. Dumais, T. K. Landauer, R. A. Harshman, L. A. Streeter, and K. E. Lochbaum, Information retrieval using a singular value decomposition model of latent semantic structure, Proc. 11th Annual Int'l ACM SIGIR Conf. on Research and Development in Information Retrieval 1988, pp. 465-480.",
      "ja": "[374] G. W.ファーナス、S. Deerwester、S. T. Dumais、T. K.ランダウアー、R. A. Harshman、L. A.ストリー、及びK. E. Lochbaum、潜在的意味構造、PROCの特異値分解モデルを用いた情報検索。第11回国際ACM SIGIRコンファレンス。 1988年、頁465から480まで情報検索における研究及び開発に関する。"
    },
    {
      "indent": 3,
      "text": "[375] C. Tang, S. Dwarkadas, and Z. Xu, On scaling latent semantic indexing for large peer-to-peer systems, The 27th Annual Int'l ACM SIGIR Conf. SIGIR'04, ACM Special Interest Group on Information Retrieval, July 2004.",
      "ja": "[375] C.唐、S. Dwarkadas、及びZ.徐、大ピア・ツー・ピア・システムのための潜在的意味インデキシングをスケーリングに、第27回国際ACM SIGIRカンファレンス。 SIGIR'04、情報検索のACMスペシャル・インタレスト・グループ、2004年7月。"
    },
    {
      "indent": 3,
      "text": "[376] S. Milgram, The small world problem, Psychology Today 1 (61) (1967)",
      "ja": "[376] S.ミルグラム、小さな世界の問題、心理学今日1（61）（1967）"
    },
    {
      "indent": 3,
      "text": "[377] J. Kleinberg, The small-world phenonemon: An algorithmic perspective, Proc. 32nd ACM Symp. on Theory of Computing (2000)",
      "ja": "[377] J. Kleinberg、小さな世界のphenonemon：アルゴリズムの観点、PROC。第32回ACM SYMP。コンピューティングの理論（2000年）で"
    },
    {
      "indent": 3,
      "text": "[378] Y. Petrakis and E. Pitoura, \"On constructing small worlds in unstructured peer-to-peer systems,\" in Current trends in database technology (Proc. First Int'l Workshop on Peer-to-Peer Computing and Databases, Heraklion, Crete, Greece, March 14), vol. 3268, Lecture Notes in Computer Science: Springer, 2004, pp. 415-424.",
      "ja": "[378] Y. Petrakis及びE. Pitoura、ピア・ツー・ピア・コンピューティングとデータベースのデータベース技術における現在の傾向（PROC。まず国際ワークショップでは「非構造化ピアツーピア・システムにおける小さな世界を構築する上で」、クレタ島、ギリシャ、3月14日）、巻。コンピュータサイエンスの3268、講義ノート：スプリンガー、2004年、頁415-424。"
    },
    {
      "indent": 3,
      "text": "[379] A. Iamnitchi, M. Ripeanu, and I. Foster, Locating Data in (Small World?) P2P Scientific Collaborations, First Int'l Workshop on Peer-to-Peer Systems (IPTPS), Cambridge, MA, March (2002)",
      "ja": "[379] A. Iamnitchi、M. Ripeanu、およびI.フォスター、中ロケデータ（スモールワールド？）P2P科学コラボレーション、まず国際ワークショップピアツーピアシステム上（IPTPS）、ケンブリッジ、MA、マーチ（ 2002年）"
    },
    {
      "indent": 3,
      "text": "[380] Y. Ren, C. Sha, W. Qian, A. Zhou, B. Ooi, and K. Tan, Explore the \"small world phenomena\" in pure P2P information sharing systems, Proc. 3rd IEEE/ACM Int'l Symp. on Cluster Computing and the Grid (2003) 232-239.",
      "ja": "[380] Y.レン、C.沙、W.銭、A.周、B.大井、およびK.タン、ピュアP2P情報共有システムでは \"小さな世界の現象を\" 探検、PROC。第3回IEEE / ACM国際SYMP。クラスタコンピューティングとグリッド（2003）232-239に。"
    },
    {
      "indent": 3,
      "text": "[381] G. S. Manku, M. Bawa, and P. Raghavan, Symphony: Distributed Hashing in a Small World, Proc. 4th USENIX Symp. on Internet Technologies and Systems, March 26-28 2003.",
      "ja": "[381] G. S. Manku、M.バワ、及びP.ラガバン、シンフォニー：スモールワールド、PROCにおける分散ハッシュ。第4回USENIX SYMP。インターネット技術・システム、月26-28 2003年。"
    },
    {
      "indent": 3,
      "text": "[382] W. Litwin and S. Sahri, Implementing SD-SQL Server: a Scalable Distributed Database System, CERIA Research Rerpot 2004-04-02, April 2004.",
      "ja": "[382] W.リトウィンとS. Sahri、実装SD-SQL Serverの：スケーラブルな分散データベースシステム、セリア研究Rerpot 2004-04-02、2004年4月。"
    },
    {
      "indent": 3,
      "text": "[383] M. Jarke and J. Koch, Query Optimization in Database Systems, ACM Computing Surveys 16 (2) (1984) 111-152.",
      "ja": "[383]データベースシステムにおけるM. Jarke及びJ.コッホ、クエリ最適化、ACMコンピューティングは16の調査（2）（1984）111から152。"
    },
    {
      "indent": 3,
      "text": "[384] J. L. Bentley, Multidimensional binary search trees used for associative searching, Communications of the ACM 18 (9) (1975) 509-517.",
      "ja": "[384] J. L.ベントレー、連想検索、ACM 18（9）（1975）509から517までの通信に使用される多次元二分探索木。"
    },
    {
      "indent": 3,
      "text": "[385] B. Chun, I. Stoica, J. Hellerstein, R. Huebsch, S. Jeffery, B. T. Loo, S. Mardanbeigi, T. Roscoe, S. Rhea, and S. Schenker, Querying at Internet Scale, Proc. 2004 ACM SIGMOD international conference on management of data, demonstration session 2004, pp. 935-936.",
      "ja": "インターネットスケール、PROCでクエリ[385] B.チュン、I.ストイカ、J. Hellerstein、R. Huebsch、S.ジェフリー、B. T.ルー、S. Mardanbeigi、T.ロスコー、S.レア、及びS.シェンカー、。データの管理に関する2004年ACM SIGMOD国際会議、デモセッション2004、頁935から936まで。"
    },
    {
      "indent": 3,
      "text": "[386] P. Cao and Z. Wang, Efficient top-K query calculation in distributed networks, Proc. 23rd Annual ACM SIGACT-SIGOPS Symp. on Principles of Distributed Computing PODC 2004, July 25-28 2004, pp. 206-215.",
      "ja": "[386] P. CaOおよびZ.ワング、分散ネットワークにおける効率的なトップ-Kクエリ計算、PROC。第23回ACM SIGACT-SIGOPS SYMP。分散コンピューティングPODC 2004の原則、2004年7月25-28頁206から215に。"
    },
    {
      "indent": 3,
      "text": "[387] D. Psaltoulis, I. Kostoulas, I. Gupta, K. Birman, and A. Demers, Practical algorithms for size estimation in large and dynamic groups, Proc. Twenty-Third Annual ACM SIGACT-SIGOPS Symp. on Principles of Distributed Computing, PODC 2004, July 25-28 2004.",
      "ja": "[387] D. Psaltoulis、I. Kostoulas、I.グプタ、K.バーマン、およびA.デマーズ、大規模で動的グループ内のサイズ推定のための実用的なアルゴリズム、PROC。第二十三回ACM SIGACT-SIGOPS SYMP。分散コンピューティングの上の原則、PODC 2004、2004年7月25-28。"
    },
    {
      "indent": 3,
      "text": "[388] R. van Renesse, The importance of aggregation, Springer-Verlag Lecture Notes in Computer Science \"Future Directions in Distributed Computing\". A. Schiper, A. A. Shvartsman, H. Weatherspoon, and B. Y. Zhao, editors. Springer-Verlag, Heidelberg volume 2584 (2003)",
      "ja": "[388] R.バンレネッセ、凝集の重要性、コンピュータサイエンスのシュプリンガー・フェアラーク講義ノート「分散コンピューティングにおける今後の方向性」。 A. Schiper、A. A. Shvartsman、H.ウェザー、及びB. Y.趙、エディタ。シュプリンガー・フェアラーク、ハイデルベルクのボリューム2584（2003）"
    },
    {
      "indent": 0,
      "text": "Author's Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "John Risson School of Elec Eng and Telecommunications University of New South Wales Sydney NSW 2052 Australia",
      "ja": "エレックENGとニューサウスウェールズ州の電気通信大学シドニーNSW 2052オーストラリアのジョンRisson学校"
    },
    {
      "indent": 3,
      "text": "EMail: jr@tuffit.com",
      "ja": "メールアドレス：jr@tuffit.com"
    },
    {
      "indent": 3,
      "text": "Tim Moors School of Elec Eng and Telecommunications University of New South Wales Sydney NSW 2052 Australia",
      "ja": "エレック工学と電気通信大学ニューサウスウェールズ州のシドニーNSW 2052オーストラリアのティム・ムーア・スクール"
    },
    {
      "indent": 3,
      "text": "EMail: t.moors@unsw.edu.au",
      "ja": "メールアドレス：t.moors@unsw.edu.au"
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The IETF Trust (2007).",
      "ja": "著作権（C）IETFトラスト（2007）。"
    },
    {
      "indent": 3,
      "text": "This document is subject to the rights, licenses and restrictions contained in BCP 78, and except as set forth therein, the authors retain all their rights.",
      "ja": "この文書では、BCP 78に含まれる権利と許可と制限の適用を受けており、その中の記載を除いて、作者は彼らのすべての権利を保有します。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein are provided on an \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書とここに含まれている情報は、基礎とCONTRIBUTOR「そのまま」、ORGANIZATION HE / SHEが表すまたはインターネットSOCIETY、（もしあれば）を後援し、IETF TRUST ANDインターネットエンジニアリングタスクフォース放棄ALLに設けられています。保証は、明示または黙示、この情報の利用および特定目的に対する権利または商品性または適合性の黙示の保証を侵害しない任意の保証がこれらに限定されません。"
    },
    {
      "indent": 0,
      "text": "Intellectual Property",
      "ja": "知的財産"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any Intellectual Property Rights or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; nor does it represent that it has made any independent effort to identify any such rights. Information on the procedures with respect to rights in RFC documents can be found in BCP 78 and BCP 79.",
      "ja": "IETFは、本書またはそのような権限下で、ライセンスがたりないかもしれない程度に記載された技術の実装や使用に関係すると主張される可能性があります任意の知的財産権やその他の権利の有効性または範囲に関していかなる位置を取りません利用可能です。またそれは、それがどのような権利を確認する独自の取り組みを行ったことを示すものでもありません。 RFC文書の権利に関する手続きの情報は、BCP 78およびBCP 79に記載されています。"
    },
    {
      "indent": 3,
      "text": "Copies of IPR disclosures made to the IETF Secretariat and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the IETF on-line IPR repository at http://www.ietf.org/ipr.",
      "ja": "IPRの開示のコピーが利用できるようにIETF事務局とライセンスの保証に行われた、または本仕様の実装者または利用者がそのような所有権の使用のための一般的なライセンスまたは許可を取得するために作られた試みの結果を得ることができますhttp://www.ietf.org/iprのIETFのオンラインIPRリポジトリから。"
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights that may cover technology that may be required to implement this standard. Please address the information to the IETF at ietf-ipr@ietf.org.",
      "ja": "IETFは、その注意にこの標準を実装するために必要とされる技術をカバーすることができる任意の著作権、特許または特許出願、またはその他の所有権を持ってすべての利害関係者を招待します。 ietf-ipr@ietf.orgのIETFに情報を記述してください。"
    }
  ]
}