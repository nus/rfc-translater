{
  "title": {
    "text": "RFC 4627 - The application/json Media Type for JavaScript Object Notation (JSON)",
    "ja": "RFC 4627 - JavaScriptのオブジェクト表記のためのアプリケーション/ JSONのメディアタイプ（JSON）"
  },
  "number": 4627,
  "created_at": "2019-10-24 03:17:54.082107+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                       D. Crockford\nRequest for Comments: 4627                                      JSON.org\nCategory: Informational                                        July 2006",
      "raw": true
    },
    {
      "indent": 1,
      "text": "The application/json Media Type for JavaScript Object Notation (JSON)",
      "ja": "JavaScriptのオブジェクト表記のためのアプリケーション/ JSONのメディアタイプ（JSON）"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This memo provides information for the Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited.",
      "ja": "このメモはインターネットコミュニティのための情報を提供します。それはどんな種類のインターネット標準を指定しません。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2006).",
      "ja": "著作権（C）インターネット協会（2006）。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format. It was derived from the ECMAScript Programming Language Standard. JSON defines a small set of formatting rules for the portable representation of structured data.",
      "ja": "JavaScriptのオブジェクト表記法（JSON）は、軽量、テキストベースの、言語に依存しないデータ交換フォーマットです。これは、ECMAScriptのプログラミング言語の標準から派生しました。 JSONは、構造化データのポータブル表現するための規則の書式の小さなセットを定義します。"
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "JavaScript Object Notation (JSON) is a text format for the serialization of structured data. It is derived from the object literals of JavaScript, as defined in the ECMAScript Programming Language Standard, Third Edition [ECMA].",
      "ja": "JavaScriptのオブジェクト表記（JSON）は、構造化されたデータのシリアル化のためにテキスト形式です。 ECMAScriptのプログラミング言語標準、第三版で定義されるように、それは[ECMA]は、JavaScriptのオブジェクト・リテラルから誘導されます。"
    },
    {
      "indent": 3,
      "text": "JSON can represent four primitive types (strings, numbers, booleans, and null) and two structured types (objects and arrays).",
      "ja": "JSONは、4つの基本型（文字列、数値、ブール値、およびnull）と2つの構造型（オブジェクトや配列）を表すことができます。"
    },
    {
      "indent": 3,
      "text": "A string is a sequence of zero or more Unicode characters [UNICODE].",
      "ja": "文字列は、ゼロ以上のUnicode文字[UNICODE]の配列です。"
    },
    {
      "indent": 3,
      "text": "An object is an unordered collection of zero or more name/value pairs, where a name is a string and a value is a string, number, boolean, null, object, or array.",
      "ja": "オブジェクトは、名前が文字列であり、ゼロ以上の名前/値の組の順序付けられていないコレクションであり、値は、文字列、数値、ブール値、ヌル、オブジェクト、または配列です。"
    },
    {
      "indent": 3,
      "text": "An array is an ordered sequence of zero or more values.",
      "ja": "アレイはゼロ以上の値の順序付きシーケンスです。"
    },
    {
      "indent": 3,
      "text": "The terms \"object\" and \"array\" come from the conventions of JavaScript.",
      "ja": "用語「対象」および「アレイ」はJavaScriptの規則から来ます。"
    },
    {
      "indent": 3,
      "text": "JSON's design goals were for it to be minimal, portable, textual, and a subset of JavaScript.",
      "ja": "それは、最小限のポータブル、テキスト形式、およびJavaScriptのサブセットであるためにJSONの設計目標でした。"
    },
    {
      "indent": 0,
      "text": "1.1. Conventions Used in This Document",
      "section_title": true,
      "ja": "1.1。このドキュメントの表記規則"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はあります[RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 3,
      "text": "The grammatical rules in this document are to be interpreted as described in [RFC4234].",
      "ja": "この文書の文法規則は、[RFC4234]に記載されているように解釈されるべきです。"
    },
    {
      "indent": 0,
      "text": "2. JSON Grammar",
      "section_title": true,
      "ja": "2. JSON文法"
    },
    {
      "indent": 3,
      "text": "A JSON text is a sequence of tokens. The set of tokens includes six structural characters, strings, numbers, and three literal names.",
      "ja": "JSONテキストは、トークンのシーケンスです。トークンのセットは6つの構造の文字、文字列、数値、および3リテラル名が含まれています。"
    },
    {
      "indent": 3,
      "text": "A JSON text is a serialized object or array.",
      "ja": "JSONテキストは、直列化されたオブジェクトまたは配列です。"
    },
    {
      "indent": 6,
      "text": "JSON-text = object / array",
      "ja": "JSONテキスト=オブジェクト/配列"
    },
    {
      "indent": 3,
      "text": "These are the six structural characters:",
      "ja": "これらは、6つの構造文字です。"
    },
    {
      "indent": 6,
      "text": "begin-array = ws %x5B ws ; [ left square bracket",
      "ja": "アレイを開始= WS％のX5BのWS。 [左角括弧"
    },
    {
      "indent": 6,
      "text": "begin-object = ws %x7B ws ; { left curly bracket",
      "ja": "= WS％のx7BのWS-オブジェクトを開始します。 {左中かっこ"
    },
    {
      "indent": 6,
      "text": "end-array = ws %x5D ws ; ] right square bracket",
      "ja": "エンドアレイ= WS％x5D WS。 ]右角カッコ"
    },
    {
      "indent": 6,
      "text": "end-object = ws %x7D ws ; } right curly bracket",
      "ja": "エンド物体= WS％x7D WS。 }右中括弧"
    },
    {
      "indent": 6,
      "text": "name-separator = ws %x3A ws ; : colon",
      "ja": "名前区切り= WS％のX3AのWS。 ：コロン"
    },
    {
      "indent": 6,
      "text": "value-separator = ws %x2C ws ; , comma",
      "ja": "％のX2CのWSとしてvalyeセパレータ=？ 、パーティー"
    },
    {
      "indent": 3,
      "text": "Insignificant whitespace is allowed before or after any of the six structural characters.",
      "ja": "無意味な空白文字は、前または6つの構造のいずれかの文字の後に許可されています。"
    },
    {
      "indent": 6,
      "text": "ws = *( %x20 / ; Space %x09 / ; Horizontal tab %x0A / ; Line feed or New line %x0D ; Carriage return )",
      "ja": "WS = *（％X20 /;スペース％X09 /;水平タブ％のX0A /;ラインフィードや新しい行％x0D;キャリッジリターン）"
    },
    {
      "indent": 0,
      "text": "2.1. Values",
      "section_title": true,
      "ja": "2.1。値"
    },
    {
      "indent": 3,
      "text": "A JSON value MUST be an object, array, number, or string, or one of the following three literal names:",
      "ja": "JSON値は、オブジェクト、配列、数値、文字列、または以下の三つリテラル名のいずれかである必要があります"
    },
    {
      "indent": 6,
      "text": "false null true",
      "ja": "偽ヌル真"
    },
    {
      "indent": 3,
      "text": "The literal names MUST be lowercase. No other literal names are allowed.",
      "ja": "リテラル名は小文字でなければなりません。他のリテラル名は許可されません。"
    },
    {
      "indent": 9,
      "text": "value = false / null / true / object / array / number / string",
      "ja": "値= falseを/ nullを/真/オブジェクト/配列/数/文字列"
    },
    {
      "indent": 9,
      "text": "false = %x66.61.6c.73.65 ; false",
      "ja": "偽=％x66.61.6c.73.65。偽"
    },
    {
      "indent": 9,
      "text": "null = %x6e.75.6c.6c ; null",
      "ja": "ゼロ=％のx6e.75.6c.6c。ヌル"
    },
    {
      "indent": 9,
      "text": "true = %x74.72.75.65 ; true",
      "ja": "真=％のx74.72.75.65。真"
    },
    {
      "indent": 0,
      "text": "2.2. Objects",
      "section_title": true,
      "ja": "2.2。オブジェクト"
    },
    {
      "indent": 3,
      "text": "An object structure is represented as a pair of curly brackets surrounding zero or more name/value pairs (or members). A name is a string. A single colon comes after each name, separating the name from the value. A single comma separates a value from a following name. The names within an object SHOULD be unique.",
      "ja": "オブジェクト構造は、ゼロまたはそれ以上の名前/値のペア（または部材）を囲む中括弧の対として表されます。名前は文字列です。 1つのコロンが値から名前を分離し、それぞれの名前の後に来ます。単一のコンマは、次の名前から値を分離します。オブジェクト内の名前は一意である必要があります。"
    },
    {
      "indent": 6,
      "text": "object = begin-object [ member *( value-separator member ) ] end-object",
      "ja": "物体=始まるオブジェクト[メンバー*（値セパレータ部材）]エンドオブジェクト"
    },
    {
      "indent": 6,
      "text": "member = string name-separator value",
      "ja": "メンバー=列名区切り値"
    },
    {
      "indent": 0,
      "text": "2.3. Arrays",
      "section_title": true,
      "ja": "2.3。配列"
    },
    {
      "indent": 3,
      "text": "An array structure is represented as square brackets surrounding zero or more values (or elements). Elements are separated by commas.",
      "ja": "アレイ構造は、ゼロ以上の値（または要素）を囲む角括弧として表されます。要素は、カンマで区切られています。"
    },
    {
      "indent": 6,
      "text": "array = begin-array [ value *( value-separator value ) ] end-array",
      "ja": "アレイ=始まるアレイ[値*（値区切り値）]エンドアレイ"
    },
    {
      "indent": 0,
      "text": "2.4. Numbers",
      "section_title": true,
      "ja": "2.4。数字"
    },
    {
      "indent": 3,
      "text": "The representation of numbers is similar to that used in most programming languages. A number contains an integer component that may be prefixed with an optional minus sign, which may be followed by a fraction part and/or an exponent part.",
      "ja": "数字の表現は、ほとんどのプログラミング言語で使用されるものと同様です。数が小数部および/または指数部が続いてもよい任意マイナス記号、接頭辞することができる整数成分を含みます。"
    },
    {
      "indent": 3,
      "text": "Octal and hex forms are not allowed. Leading zeros are not allowed.",
      "ja": "オクタルと六角フォームは許可されていません。先行ゼロは許可されていません。"
    },
    {
      "indent": 3,
      "text": "A fraction part is a decimal point followed by one or more digits.",
      "ja": "小数部は、一つ以上の数字が続く小数点です。"
    },
    {
      "indent": 3,
      "text": "An exponent part begins with the letter E in upper or lowercase, which may be followed by a plus or minus sign. The E and optional sign are followed by one or more digits.",
      "ja": "指数部は、プラスまたはマイナス記号を続けることができ、上部または小文字の文字Eで始まります。 Eおよびオプションの符号は、一つ以上の数字が続くされています。"
    },
    {
      "indent": 3,
      "text": "Numeric values that cannot be represented as sequences of digits (such as Infinity and NaN) are not permitted.",
      "ja": "（例えば無限大とNaNのような）数字のシーケンスとして表現できない数値が許可されていません。"
    },
    {
      "indent": 9,
      "text": "number = [ minus ] int [ frac ] [ exp ]",
      "ja": "番号= [マイナス] INT [FRAC] [EXP]"
    },
    {
      "indent": 9,
      "text": "decimal-point = %x2E ; .",
      "ja": "小数点=％のx2E。 。"
    },
    {
      "indent": 9,
      "text": "digit1-9 = %x31-39 ; 1-9",
      "ja": "digit1-9 =％x31-39。 1-9"
    },
    {
      "indent": 9,
      "text": "e = %x65 / %x45 ; e E",
      "ja": "E =％X65 / X45％。そして、E"
    },
    {
      "indent": 9,
      "text": "exp = e [ minus / plus ] 1*DIGIT",
      "ja": "EXP = E [マイナス/プラス] 1 * DIGIT"
    },
    {
      "indent": 9,
      "text": "frac = decimal-point 1*DIGIT",
      "ja": "FRAC =小数点1 * DIGIT"
    },
    {
      "indent": 9,
      "text": "int = zero / ( digit1-9 *DIGIT )",
      "ja": "int型=ゼロ/（digit1-9 * DIGIT）"
    },
    {
      "indent": 9,
      "text": "minus = %x2D ; -",
      "ja": "マイナス= x2D％; - "
    },
    {
      "indent": 9,
      "text": "plus = %x2B ; +",
      "ja": "よりX2B％で、 +"
    },
    {
      "indent": 9,
      "text": "zero = %x30 ; 0",
      "ja": "ゼロ=％のX30。 0"
    },
    {
      "indent": 0,
      "text": "2.5. Strings",
      "section_title": true,
      "ja": "2.5。ストリング"
    },
    {
      "indent": 3,
      "text": "The representation of strings is similar to conventions used in the C family of programming languages. A string begins and ends with quotation marks. All Unicode characters may be placed within the quotation marks except for the characters that must be escaped: quotation mark, reverse solidus, and the control characters (U+0000 through U+001F).",
      "ja": "文字列の表現は、プログラミング言語のCファミリで使用される表記規則と同様です。文字列が始まり、引用符で終わります。引用符、固相を逆転し、制御文字（U + 001Fを介してU + 0000）：すべてのUnicode文字をエスケープする必要が文字以外の二重引用符内に配置されてもよいです。"
    },
    {
      "indent": 3,
      "text": "Any character may be escaped. If the character is in the Basic Multilingual Plane (U+0000 through U+FFFF), then it may be represented as a six-character sequence: a reverse solidus, followed by the lowercase letter u, followed by four hexadecimal digits that encode the character's code point. The hexadecimal letters A though F can be upper or lowercase. So, for example, a string containing only a single reverse solidus character may be represented as \"\\u005C\".",
      "ja": "任意の文字をエスケープすることができます。コードする4桁の16進数が続く、逆固相、小文字U続く：文字は基本多言語面（U + FFFFを介してU + 0000）である場合、それは、6つの文字列として表すことができます。文字のコードポイント。進文字AしかしFは、上部または小文字であることができます。したがって、たとえば、単一の逆ソリダス文字を含む文字列は「\\ u005C」として表すことができます。"
    },
    {
      "indent": 3,
      "text": "Alternatively, there are two-character sequence escape representations of some popular characters. So, for example, a string containing only a single reverse solidus character may be represented more compactly as \"\\\\\".",
      "ja": "あるいは、いくつかの人気キャラクターの2文字列エスケープ表現があります。したがって、たとえば、単一の逆ソリダス文字を含む文字列は「\\\\」として、よりコンパクトに表現することができます。"
    },
    {
      "indent": 3,
      "text": "To escape an extended character that is not in the Basic Multilingual Plane, the character is represented as a twelve-character sequence, encoding the UTF-16 surrogate pair. So, for example, a string containing only the G clef character (U+1D11E) may be represented as \"\\uD834\\uDD1E\".",
      "ja": "基本多言語面にない拡張文字をエスケープするために、文字はUTF-16サロゲートペアをコードする、12文字のシーケンスとして表されます。だから、例えば、唯一のG音部記号（U + 1D11E）を含む文字列が「\\ uD834 \\ uDD1E」として表されてもよいです。"
    },
    {
      "indent": 9,
      "text": "string = quotation-mark *char quotation-mark",
      "ja": "文字列=引用マーク* char型の二重引用符マーク"
    },
    {
      "indent": 9,
      "text": "char = unescaped / escape ( %x22 / ; \" quotation mark U+0022 %x5C / ; \\ reverse solidus U+005C %x2F / ; / solidus U+002F %x62 / ; b backspace U+0008 %x66 / ; f form feed U+000C %x6E / ; n line feed U+000A %x72 / ; r carriage return U+000D %x74 / ; t tab U+0009 %x75 4HEXDIG ) ; uXXXX U+XXXX",
      "ja": "F形;チャー=エスケープ/エスケープ（％X22 /; \"引用符U + 0022パーセントのx5C /; \\逆固相U + 005C％のx2F /; /固相U + 002F％X62 /; X66 /バックスペースB U + 0008パーセントフィードU + 000C％のx6E /; nは改行U + X72 / 000A％; RキャリッジリターンU + 000D％X74 /; tタブU + 0009パーセントのX75 4HEXDIG）; uXXXXというU + XXXX"
    },
    {
      "indent": 9,
      "text": "escape = %x5C ; \\",
      "ja": "=％のx5Cを逃れます。 \\"
    },
    {
      "indent": 9,
      "text": "quotation-mark = %x22 ; \"",
      "ja": "クォーテーションマーク=％のX22。 \""
    },
    {
      "indent": 9,
      "text": "unescaped = %x20-21 / %x23-5B / %x5D-10FFFF",
      "ja": "エスケープ=％x20-21 /％x23-5B /％x5D-10FFFF"
    },
    {
      "indent": 0,
      "text": "3. Encoding",
      "section_title": true,
      "ja": "3.エンコード"
    },
    {
      "indent": 3,
      "text": "JSON text SHALL be encoded in Unicode. The default encoding is UTF-8.",
      "ja": "JSONテキストはUnicodeで符号化されなければなりません。デフォルトのエンコーディングはUTF-8です。"
    },
    {
      "indent": 3,
      "text": "Since the first two characters of a JSON text will always be ASCII characters [RFC0020], it is possible to determine whether an octet stream is UTF-8, UTF-16 (BE or LE), or UTF-32 (BE or LE) by looking at the pattern of nulls in the first four octets.",
      "ja": "JSONテキストの最初の2つの文字は常にASCII文字[RFC0020]であるので、（BEまたはLE）オクテットストリームはUTF-8、UTF-16（BEまたはLE）、またはUTF-32であるか否かを判定することができます最初の4つのオクテットにヌルのパターンを見て。"
    },
    {
      "indent": 11,
      "text": "00 00 00 xx  UTF-32BE\n00 xx 00 xx  UTF-16BE\nxx 00 00 00  UTF-32LE\nxx 00 xx 00  UTF-16LE\nxx xx xx xx  UTF-8",
      "raw": true
    },
    {
      "indent": 0,
      "text": "4. Parsers",
      "section_title": true,
      "ja": "4.パーサ"
    },
    {
      "indent": 3,
      "text": "A JSON parser transforms a JSON text into another representation. A JSON parser MUST accept all texts that conform to the JSON grammar. A JSON parser MAY accept non-JSON forms or extensions.",
      "ja": "JSONパーサーは、別の表現にJSONテキストに変換します。 JSONパーサーはJSON文法に準拠するすべてのテキストを受け入れなければなりません。 JSONパーサーは非JSON形式や拡張子を受け入れることができます。"
    },
    {
      "indent": 3,
      "text": "An implementation may set limits on the size of texts that it accepts. An implementation may set limits on the maximum depth of nesting. An implementation may set limits on the range of numbers. An implementation may set limits on the length and character contents of strings.",
      "ja": "実装は、それが受け入れテキストのサイズに制限を設定することができます。実装は、ネストの最大深さに制限を設定してもよいです。実装は、数値の範囲に制限を設定してもよいです。実装は、文字列の長さと文字の内容に制限を設定することがあります。"
    },
    {
      "indent": 0,
      "text": "5. Generators",
      "section_title": true,
      "ja": "5.ジェネレータ"
    },
    {
      "indent": 3,
      "text": "A JSON generator produces JSON text. The resulting text MUST strictly conform to the JSON grammar.",
      "ja": "JSONジェネレータはJSONテキストを生成します。結果のテキストは、厳密にはJSONの文法に従わなければなりません。"
    },
    {
      "indent": 0,
      "text": "6. IANA Considerations",
      "section_title": true,
      "ja": "6. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "The MIME media type for JSON text is application/json.",
      "ja": "JSONテキストのMIMEメディアタイプは、アプリケーション/ JSONです。"
    },
    {
      "indent": 3,
      "text": "Type name: application",
      "ja": "型名：アプリケーション"
    },
    {
      "indent": 3,
      "text": "Subtype name: json",
      "ja": "サブタイプ名：JSON"
    },
    {
      "indent": 3,
      "text": "Required parameters: n/a",
      "ja": "必須パラメータ：N / A"
    },
    {
      "indent": 3,
      "text": "Optional parameters: n/a",
      "ja": "オプションのパラメータ：N / A"
    },
    {
      "indent": 3,
      "text": "Encoding considerations: 8bit if UTF-8; binary if UTF-16 or UTF-32",
      "ja": "エンコードの考慮事項：8ビットであればUTF-8; UTF-16またはUTF-32の場合はバイナリ"
    },
    {
      "indent": 6,
      "text": "JSON may be represented using UTF-8, UTF-16, or UTF-32. When JSON is written in UTF-8, JSON is 8bit compatible. When JSON is written in UTF-16 or UTF-32, the binary content-transfer-encoding must be used.",
      "ja": "JSONは、UTF-8、UTF-16、またはUTF-32を使用して表すことができます。 JSONはUTF-8で書かれている場合は、JSONは8ビット互換性があります。 JSONは、UTF-16またはUTF-32で書かれている場合、バイナリコンテンツ転送符号化が使用されなければなりません。"
    },
    {
      "indent": 3,
      "text": "Security considerations:",
      "ja": "セキュリティの考慮事項："
    },
    {
      "indent": 3,
      "text": "Generally there are security issues with scripting languages. JSON is a subset of JavaScript, but it is a safe subset that excludes assignment and invocation.",
      "ja": "一般的にスクリプト言語とセキュリティ上の問題があります。 JSONはJavaScriptのサブセットであるが、それは割り当てと呼び出しを排除し安全なサブセットです。"
    },
    {
      "indent": 3,
      "text": "A JSON text can be safely passed into JavaScript's eval() function (which compiles and executes a string) if all the characters not enclosed in strings are in the set of characters that form JSON tokens. This can be quickly determined in JavaScript with two regular expressions and calls to the test and replace methods.",
      "ja": "文字列で囲まれていないすべての文字がJSONトークンを形成する文字の集合である場合、JSONテキストは安全に（文字列をコンパイルして実行）はJavaScriptのeval（）関数に渡すことができます。これはすぐに2つの正規表現をJavaScriptで決定され、テストの呼び出しやメソッドを置き換えることができます。"
    },
    {
      "indent": 6,
      "text": "var my_JSON_object = !(/[^,:{}\\[\\]0-9.\\-+Eaeflnr-u \\n\\r\\t]/.test( text.replace(/\"(\\\\.|[^\"\\\\])*\"/g, ''))) && eval('(' + text + ')');",
      "ja": "！。VARのmy_JSON_object =（/ [^ ,: {} \\ [\\] 0-9 \\  -  + Eaeflnr-Uの\\ Nの\\ rを\\のT] /試験（text.replace（/ \"（\\\\ | [^。 \"\\\\]）*\" / G ''）））&&にeval（ '（' +テキスト+ '）'）。"
    },
    {
      "indent": 3,
      "text": "Interoperability considerations: n/a",
      "ja": "相互運用性に関する注意事項：N / A"
    },
    {
      "indent": 3,
      "text": "Published specification: RFC 4627",
      "ja": "公開された仕様：RFC 4627"
    },
    {
      "indent": 3,
      "text": "Applications that use this media type:",
      "ja": "このメディアタイプを使用するアプリケーション："
    },
    {
      "indent": 6,
      "text": "JSON has been used to exchange data between applications written in all of these programming languages: ActionScript, C, C#, ColdFusion, Common Lisp, E, Erlang, Java, JavaScript, Lua, Objective CAML, Perl, PHP, Python, Rebol, Ruby, and Scheme.",
      "ja": "JSONは、これらのプログラミング言語のすべてで書かれたアプリケーション間でデータを交換するために使用されているバージョン：ActionScript、C、C＃のは、ColdFusion、Common Lispの、E、アーラン、ジャワ、JavaScriptの、Luaの、客観CAMLやPerl、PHP、Pythonの、REBOLの、ルビー、およびスキーム。"
    },
    {
      "indent": 3,
      "text": "Additional information:",
      "ja": "追加情報："
    },
    {
      "indent": 6,
      "text": "Magic number(s): n/a File extension(s): .json Macintosh file type code(s): TEXT",
      "ja": "マジックナンバー（S）：N /ファイルの拡張子（S）：Macintoshファイルタイプコード（S）.json：TEXT"
    },
    {
      "indent": 3,
      "text": "Person & email address to contact for further information: Douglas Crockford douglas@crockford.com",
      "ja": "人とEメールアドレスは、詳細のために連絡する：ダグラス・クロックフォードdouglas@crockford.com"
    },
    {
      "indent": 3,
      "text": "Intended usage: COMMON",
      "ja": "意図している用法：COMMON"
    },
    {
      "indent": 3,
      "text": "Restrictions on usage: none",
      "ja": "使用に関する制限事項：なし"
    },
    {
      "indent": 3,
      "text": "Author: Douglas Crockford douglas@crockford.com",
      "ja": "著者：ダグラス・クロックフォードdouglas@crockford.com"
    },
    {
      "indent": 3,
      "text": "Change controller: Douglas Crockford douglas@crockford.com",
      "ja": "変更コントローラ：ダグラス・クロックフォードdouglas@crockford.com"
    },
    {
      "indent": 0,
      "text": "7. Security Considerations",
      "section_title": true,
      "ja": "7.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "See Security Considerations in Section 6.",
      "ja": "第6節ではセキュリティについての考慮事項を参照してください。"
    },
    {
      "indent": 0,
      "text": "8. Examples",
      "section_title": true,
      "ja": "8.例"
    },
    {
      "indent": 3,
      "text": "This is a JSON object:",
      "ja": "これは、JSONオブジェクトです："
    },
    {
      "indent": 3,
      "text": "{\n   \"Image\": {\n       \"Width\":  800,\n       \"Height\": 600,\n       \"Title\":  \"View from 15th Floor\",\n       \"Thumbnail\": {\n           \"Url\":    \"http://www.example.com/image/481989943\",\n           \"Height\": 125,\n           \"Width\":  \"100\"\n       },\n       \"IDs\": [116, 943, 234, 38793]",
      "raw": true
    },
    {
      "indent": 3,
      "text": " } }",
      "ja": "｝ ｝"
    },
    {
      "indent": 3,
      "text": "Its Image member is an object whose Thumbnail member is an object and whose IDs member is an array of numbers.",
      "ja": "そのイメージのメンバーは、そのサムネイルメンバーとIDメンバー数字の配列であるオブジェクトであるオブジェクトです。"
    },
    {
      "indent": 3,
      "text": "This is a JSON array containing two objects:",
      "ja": "これは、2つのオブジェクトを含むJSON配列であります："
    },
    {
      "indent": 3,
      "text": "[\n   {\n      \"precision\": \"zip\",\n      \"Latitude\":  37.7668,\n      \"Longitude\": -122.3959,\n      \"Address\":   \"\",\n      \"City\":      \"SAN FRANCISCO\",\n      \"State\":     \"CA\",\n      \"Zip\":       \"94107\",\n      \"Country\":   \"US\"\n   },\n   {\n      \"precision\": \"zip\",\n      \"Latitude\":  37.371991,\n      \"Longitude\": -122.026020,\n      \"Address\":   \"\",\n      \"City\":      \"SUNNYVALE\",\n      \"State\":     \"CA\",\n      \"Zip\":       \"94085\",\n      \"Country\":   \"US\"\n   }\n]",
      "raw": true
    },
    {
      "indent": 0,
      "text": "9. References",
      "section_title": true,
      "ja": "9.参考文献"
    },
    {
      "indent": 0,
      "text": "9.1. Normative References",
      "section_title": true,
      "ja": "9.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[ECMA] European Computer Manufacturers Association, \"ECMAScript Language Specification 3rd Edition\", December 1999, <http://www.ecma-international.org/publications/files/ ecma-st/ECMA-262.pdf>.",
      "ja": "[ECMA]ヨーロッパ電子計算機工業会、 \"ECMAScriptの言語仕様第3版\"、1999年12月、<http://www.ecma-international.org/publications/files/ ECMA-ST / ECMA-262.pdf>。"
    },
    {
      "indent": 3,
      "text": "[RFC0020] Cerf, V., \"ASCII format for network interchange\", RFC 20, October 1969.",
      "ja": "[RFC0020]サーフ、V.、 \"ネットワークの交換のためのASCIIフォーマット\"、RFC 20、1969年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC4234] Crocker, D. and P. Overell, \"Augmented BNF for Syntax Specifications: ABNF\", RFC 4234, October 2005.",
      "ja": "[RFC4234]クロッカー、D.、およびP. Overell、 \"構文仕様のための増大しているBNF：ABNF\"、RFC 4234、2005年10月。"
    },
    {
      "indent": 3,
      "text": "[UNICODE] The Unicode Consortium, \"The Unicode Standard Version 4.0\", 2003, <http://www.unicode.org/versions/Unicode4.1.0/>.",
      "ja": "[UNICODE]のUnicodeコンソーシアム、 \"Unicode規格バージョン4.0\"、2003年、<http://www.unicode.org/versions/Unicode4.1.0/>。"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Douglas Crockford JSON.org EMail: douglas@crockford.com",
      "ja": "ダグラス・クロックフォードJSON.org Eメール：douglas@crockford.com"
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2006).",
      "ja": "著作権（C）インターネット協会（2006）。"
    },
    {
      "indent": 3,
      "text": "This document is subject to the rights, licenses and restrictions contained in BCP 78, and except as set forth therein, the authors retain all their rights.",
      "ja": "この文書では、BCP 78に含まれる権利と許可と制限の適用を受けており、その中の記載を除いて、作者は彼らのすべての権利を保有します。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein are provided on an \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書とここに含まれている情報は、基礎とCONTRIBUTOR「そのまま」、ORGANIZATION HE / SHEが表すまたはインターネットソサエティおよびインターネット・エンジニアリング・タスク・フォース放棄すべての保証、明示または、（もしあれば）後援ISに設けられています。黙示、情報の利用は、特定の目的に対する権利または商品性または適合性の黙示の保証を侵害しない任意の保証含むがこれらに限定されません。"
    },
    {
      "indent": 0,
      "text": "Intellectual Property",
      "ja": "知的財産"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any Intellectual Property Rights or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; nor does it represent that it has made any independent effort to identify any such rights. Information on the procedures with respect to rights in RFC documents can be found in BCP 78 and BCP 79.",
      "ja": "IETFは、本書またはそのような権限下で、ライセンスがたりないかもしれない程度に記載された技術の実装や使用に関係すると主張される可能性があります任意の知的財産権やその他の権利の有効性または範囲に関していかなる位置を取りません利用可能です。またそれは、それがどのような権利を確認する独自の取り組みを行ったことを示すものでもありません。 RFC文書の権利に関する手続きの情報は、BCP 78およびBCP 79に記載されています。"
    },
    {
      "indent": 3,
      "text": "Copies of IPR disclosures made to the IETF Secretariat and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the IETF on-line IPR repository at http://www.ietf.org/ipr.",
      "ja": "IPRの開示のコピーが利用できるようにIETF事務局とライセンスの保証に行われた、または本仕様の実装者または利用者がそのような所有権の使用のための一般的なライセンスまたは許可を取得するために作られた試みの結果を得ることができますhttp://www.ietf.org/iprのIETFのオンラインIPRリポジトリから。"
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights that may cover technology that may be required to implement this standard. Please address the information to the IETF at ietf-ipr@ietf.org.",
      "ja": "IETFは、その注意にこの標準を実装するために必要とされる技術をカバーすることができる任意の著作権、特許または特許出願、またはその他の所有権を持ってすべての利害関係者を招待します。 ietf-ipr@ietf.orgのIETFに情報を記述してください。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is provided by the IETF Administrative Support Activity (IASA).",
      "ja": "RFCエディタ機能のための資金は、IETF管理サポート活動（IASA）によって提供されます。"
    }
  ]
}