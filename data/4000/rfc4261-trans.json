{
  "title": {
    "text": "RFC 4261 - Common Open Policy Service (COPS) Over Transport Layer Security (TLS)",
    "ja": "RFC 4261 - トランスポート層セキュリティ（TLS）以上の一般的なオープンポリシーサービス（COPS）"
  },
  "number": 4261,
  "created_at": "2019-10-22 16:58:01.980938+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                          J. Walker\nRequest for Comments: 4261                              A. Kulkarni, Ed.\nUpdates: 2748                                                Intel Corp.\nCategory: Standards Track                                  December 2005",
      "raw": true
    },
    {
      "indent": 18,
      "text": " Common Open Policy Service (COPS)\nOver Transport Layer Security (TLS)",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "ja": "この文書は、インターネットコミュニティのためのインターネット標準トラックプロトコルを指定し、改善のための議論と提案を要求します。このプロトコルの標準化状態と状態への「インターネット公式プロトコル標準」（STD 1）の最新版を参照してください。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2005).",
      "ja": "著作権（C）インターネット協会（2005）。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document describes how to use Transport Layer Security (TLS) to secure Common Open Policy Service (COPS) connections over the Internet.",
      "ja": "この文書は、インターネット上で一般的なオープンポリシーサービス（COPS）接続を確保するためにトランスポート層セキュリティ（TLS）を使用する方法について説明します。"
    },
    {
      "indent": 3,
      "text": "This document also updates RFC 2748 by modifying the contents of the Client-Accept message.",
      "ja": "また、このドキュメントでは、クライアント-Acceptメッセージの内容を変更することによって、RFC 2748を更新します。"
    },
    {
      "indent": 0,
      "text": "Table Of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................2\n2. COPS Over TLS ...................................................3\n3. Separate Ports versus Upward Negotiation ........................3\n4. COPS/TLS Objects and Error codes ................................4\n   4.1. The TLS Message Integrity Object (Integrity-TLS) ...........4\n   4.2. Error Codes ................................................4\n5. COPS/TLS Secure Connection Initiation ...........................5\n   5.1. PEP Initiated Security Negotiation .........................5\n   5.2. PDP Initiated Security Negotiation .........................6\n6. Connection Closure ..............................................7\n   6.1. PEP System Behavior ........................................7\n   6.2. PDP System Behavior ........................................8\n7. Endpoint Identification and Access Control ......................8\n   7.1. PEP Identity ...............................................9\n   7.2. PDP Identity ...............................................9\n8. Cipher Suite Requirements ......................................10\n9. Backward Compatibility .........................................10\n10. IANA Considerations ...........................................10\n11. Security Considerations .......................................11\n12. Acknowledgements ..............................................11\n13. References ....................................................12\n   13.1. Normative References .....................................12\n   13.2. Informative References ...................................12",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "COPS [RFC2748] was designed to distribute clear-text policy information from a centralized Policy Decision Point (PDP) to a set of Policy Enforcement Points (PEP) in the Internet. COPS provides its own security mechanisms to protect the per-hop integrity of the deployed policy. However, the use of COPS for sensitive applications (e.g., some types of security policy distribution) requires additional security measures, such as data confidentiality. This is because some organizations find it necessary to hide some or all of their security policies, e.g., because policy distribution to devices such as mobile platforms can cross domain boundaries.",
      "ja": "COPS [RFC2748]はインターネットにおけるポリシー施行点（PEP）のセットに集中ポリシー決定ポイント（PDP）からクリアテキストのポリシー情報を配布するために設計されました。 COPSは、展開されたポリシーのホップごとの整合性を保護するために、独自のセキュリティメカニズムを提供します。しかし、敏感なアプリケーションのためのCOPSの用途（例えば、セキュリティポリシー分布のいくつかのタイプ）は、データの機密性などの追加のセキュリティ対策を必要とします。一部の組織では、セキュリティポリシーの一部またはすべてを非表示にすることが必要見つけるため、このようなモバイルプラットフォームなどのデバイスへのポリシーの配布は、ドメインの境界を越えることができますので、これは、例えば、あります。"
    },
    {
      "indent": 3,
      "text": "TLS [RFC2246] was designed to provide channel-oriented security. TLS standardizes SSL and may be used with any connection-oriented service. TLS provides mechanisms for both one- and two-way authentication, dynamic session keying, and data stream privacy and integrity.",
      "ja": "TLS [RFC2246]は、チャネル指向のセキュリティを提供するために設計されました。 TLSはSSLを標準化し、すべての接続指向のサービスで使用することができます。 TLSは、1次元および双方向認証、動的なセッションキー、およびデータ・ストリームのプライバシーと整合性の両方のためのメカニズムを提供します。"
    },
    {
      "indent": 3,
      "text": "This document describes how to use COPS over TLS. \"COPS over TLS\" is abbreviated COPS/TLS.",
      "ja": "この文書では、TLS上でCOPSを使用する方法について説明します。 \"TLSオーバーCOPSは、\" COPS / TLSを省略しています。"
    },
    {
      "indent": 0,
      "text": "Glossary",
      "ja": "用語集"
    },
    {
      "indent": 3,
      "text": "COPS - Common Open Policy Service. See [RFC2748].",
      "ja": "COPS  - 共通オープンポリシーサービス。 [RFC2748]を参照してください。"
    },
    {
      "indent": 3,
      "text": "COPS/TCP - A plain-vanilla implementation of COPS.",
      "ja": "COPS / TCP  -  COPSのプレーン・バニラ実装。"
    },
    {
      "indent": 3,
      "text": "COPS/TLS - A secure implementation of COPS using TLS.",
      "ja": "COPS / TLS  -  TLSを使用してCOPSの安全な実装。"
    },
    {
      "indent": 3,
      "text": "PDP - Policy Decision Point. Also referred to as the Policy Server. See [RFC2753].",
      "ja": "PDP  - ポリシー決定ポイント。また、ポリシーサーバと呼ばれます。 [RFC2753]を参照してください。"
    },
    {
      "indent": 3,
      "text": "PEP - Policy Enforcement Point. Also referred to as the Policy Client. See [RFC2753].",
      "ja": "PEP  - ポリシー施行ポイント。また、ポリシークライアントと呼ばれます。 [RFC2753]を参照してください。"
    },
    {
      "indent": 0,
      "text": "Conventions used in this document",
      "ja": "この文書で使用されている表記"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119 [RFC2119].",
      "ja": "この文書のキーワード \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", および \"OPTIONAL\" はRFC 2119 [RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "2. COPS Over TLS",
      "section_title": true,
      "ja": "TLS以上2. COPS"
    },
    {
      "indent": 3,
      "text": "COPS/TLS is very simple: use COPS over TLS similar to how you would use COPS over TCP (COPS/TCP). Apart from a specific procedure used to initialize the connection, there is no difference between COPS/TLS and COPS/TCP.",
      "ja": "COPS / TLSは非常に簡単です：あなたはTCP（COPS / TCP）上でCOPSを使用する方法に類似したTLSオーバーCOPSを使用しています。別に接続を初期化するために使用される特定の手順から、COPS / TLSおよびCOPS / TCPの間に違いはありません。"
    },
    {
      "indent": 0,
      "text": "3. Separate Ports versus Upward Negotiation",
      "section_title": true,
      "ja": "上向きの交渉対3.別々のポート"
    },
    {
      "indent": 3,
      "text": "There are two ways in which insecure and secure versions of the same protocol can be run simultaneously.",
      "ja": "同じプロトコルの安全でないと安全なバージョンを同時に実行することができる2つの方法があります。"
    },
    {
      "indent": 3,
      "text": "In the first method, the secure version of the protocol is also allocated a well-known port. This strategy of having well-known port numbers for both, the secure and insecure versions, is known as 'Separate Ports'. The clients requiring security can simply connect to the well-known secure port. This method is easy to implement, with no modifications needed to existing insecure implementations. The disadvantage, however, is that it doesn't scale well, because a new port is required for each secure implementation. More problems with this approach have been listed in [RFC2595].",
      "ja": "第1の方法では、プロトコルの安全なバージョンはまた、既知のポートが割り当てられます。両方のためのよく知られたポート番号を持つのこの戦略は、安全で、安全でないバージョンでは、「別々のポート」として知られています。セキュリティを必要とするクライアントは、単に、よく知られたセキュアポートに接続することができます。この方法は、既存の安全でない実装に必要な変更なしで、実装が容易です。欠点は、しかし、新しいポートはそれぞれ安全な実装のために必要とされるため、それは、うまくスケールしないということです。このアプローチには多くの問題は、[RFC2595]に記載されています。"
    },
    {
      "indent": 3,
      "text": "The second method is known as 'Upward Negotiation'. In this method, the secure and insecure versions of the protocol run on the same port. The client connects to the server, both discover each others' capabilities, and start security negotiations if desired. This method usually requires some changes to the protocol being secured.",
      "ja": "第二の方法は、「上向きネゴシエーション」として知られています。この方法では、プロトコルの安全かつ安全でないバージョンが同じポート上で実行します。クライアントは、両者が互いの能力を発見し、必要に応じてセキュリティの交渉を開始し、サーバーに接続します。この方法は、通常、固定されているプロトコルにいくつかの変更が必要となります。"
    },
    {
      "indent": 3,
      "text": "In view of the many issues with the Separate Ports approach, the authors have decided to use the Upward Negotiation method for COPS/TLS.",
      "ja": "別々のポート・アプローチと多くの問題を考慮して、著者はCOPS / TLSのための上向きの交渉方法を使用することを決定しました。"
    },
    {
      "indent": 0,
      "text": "4. COPS/TLS Objects and Error codes",
      "section_title": true,
      "ja": "4. COPS / TLSオブジェクトとエラーコード"
    },
    {
      "indent": 3,
      "text": "This section describes the COPS objects and error codes needed to support COPS/TLS.",
      "ja": "このセクションでは、/ TLSをCOPSをサポートするために必要なCOPSオブジェクトおよびエラー・コードを記述します。"
    },
    {
      "indent": 0,
      "text": "4.1. The TLS Message Integrity Object (Integrity-TLS)",
      "section_title": true,
      "ja": "4.1.  TLSメッセージ整合オブジェクト（整合-TLS）"
    },
    {
      "indent": 3,
      "text": "The TLS Integrity object is used by the PDP and the PEP to start the TLS negotiation. This object should be included only in the Client-Open or Client-Accept messages. It MUST NOT be included in any other COPS message.",
      "ja": "TLSのIntegrityオブジェクトは、TLSネゴシエーションを開始するPDPとPEPで使用されています。このオブジェクトはクライアントのオープンまたはClient-受諾メッセージに含まれるべきです。これは、任意の他のCOPSメッセージに含まれてはなりません。"
    },
    {
      "indent": 12,
      "text": "0 1 2 3",
      "ja": "０ １ ２ ３"
    },
    {
      "indent": 6,
      "text": "+----------+----------+----------+----------+\n|   Length (Octets)   | C-Num=16 | C-Type=2 |\n+----------+----------+----------+----------+\n|       ////////      |        Flags        |\n+----------+----------+----------+----------+",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Note: //// implies the field is reserved, set to 0, and should be ignored on receipt.",
      "ja": "注意：////は、フィールドが0に設定され、予約されている意味、および領収書の上で無視されなければなりません。"
    },
    {
      "indent": 6,
      "text": "Flags: 16 bits 0x01 = StartTLS This flag indicates that the sender of the message wishes to initiate a TLS handshake.",
      "ja": "フラグ：0×01 = StartTLSを、このフラグは、メッセージの送信者がTLSハンドシェイクを開始することを望むことを示す16ビット。"
    },
    {
      "indent": 3,
      "text": "The Client-Type of any message containing this object MUST be 0. Client-Type 0 is used to negotiate COPS connection level security and must only be used during the connection establishment phase. Please refer to section 4.1 of [RFC2748] for more details.",
      "ja": "このオブジェクトを含む任意のメッセージのクライアントタイプは、COPS接続レベルのセキュリティをネゴシエートするために使用される0クライアントタイプ0でなければなりませんとのみ接続確立フェーズの間に使用されなければなりません。詳細については、[RFC2748]のセクション4.1を参照してください。"
    },
    {
      "indent": 0,
      "text": "4.2. Error Codes",
      "section_title": true,
      "ja": "4.2. エラーコード"
    },
    {
      "indent": 3,
      "text": "This section uses the error codes described in section 2.2.8 (Error Object) of [RFC2748].",
      "ja": "このセクションでは、[RFC2748]のセクション2.2.8（エラーオブジェクト）に記載されたエラーコードを使用します。"
    },
    {
      "indent": 3,
      "text": "Error Code: 13= Unknown COPS Object:",
      "ja": "エラーコード：13 =不明COPSは、オブジェクト："
    },
    {
      "indent": 3,
      "text": "Sub-code (octet 2) contains the unknown object's C-Num, and (octet 3) contains unknown object's C-Type. If the PEP or PDP does not support TLS, the C-Num specified MUST be 16 and the C-Type MUST be 2. This demonstrates that the TLS version of the Integrity object is not known.",
      "ja": "サブコード（オクテット2）は、未知のオブジェクトのC-民、および（オクテット3）未知のオブジェクトのC-タイプを含むが含まれています。 PEP又はPDPがTLSをサポートしていない場合、指定されたC-numが16なければならず、C型これは、インテグリティオブジェクトのTLSバージョンが知られていないことを実証している2でなければなりません。"
    },
    {
      "indent": 3,
      "text": "This error code MUST be used by either PEP or PDP to indicate a security-related connection closure if it cannot support a TLS connection for the COPS protocol.",
      "ja": "このエラーコードは、COPSプロトコルのTLS接続をサポートできない場合、セキュリティ関連の接続の閉鎖を示すためにPEP又はPDPのいずれかによって使用されなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the PDP wishes to negotiate a different security mechanism than requested by the PEP in the Client-Open, it MUST send the following error code:",
      "ja": "PDPは、Client-オープンにPEPによって要求されたよりも、異なるセキュリティ・メカニズムを交渉することを希望する場合は、次のエラーコードを送らなければなりません。"
    },
    {
      "indent": 3,
      "text": "Error Code: 15= Authentication Required",
      "ja": "エラーコード：15 =認証が必要です"
    },
    {
      "indent": 3,
      "text": "Where the Sub-code (octet 2) contains the C-Num=16 value for the Integrity Object and (octet 3) MUST specify the PDP required/preferred Integrity object C-Type. If the server does not support any form of COPS-Security, it MUST set the Sub-code (octet 2) to 16 and (octet 3) to zero instead, signifying that no type of the Integrity object is supported.",
      "ja": "サブコード（オクテット2）が好ましい整合オブジェクトC型/必要なPDPを指定しなければなりません整合オブジェクトと（オクテット3）のためにC-民= 16の値を含む場合。サーバはCOPS-セキュリティの任意の形式をサポートしていない場合、それは、Integrityオブジェクトのいかなるタイプがサポートされていないことを意味する、代わりにゼロに16のサブコード（オクテット2）及び（オクテット3）を設定しなければなりません。"
    },
    {
      "indent": 0,
      "text": "5. COPS/TLS Secure Connection Initiation",
      "section_title": true,
      "ja": "5. COPS / TLSセキュア接続開始"
    },
    {
      "indent": 3,
      "text": "Security negotiation may be initiated by either the PDP or the PEP. The PEP can initiate a negotiation via a Client-Open message, while a PDP can initiate a negotiation via a Client-Accept message.",
      "ja": "セキュリティネゴシエーションは、PDPやPEPのいずれかによって開始することができます。 PDPは、Client-Acceptメッセージを介してネゴシエーションを開始することができながら、PEPは、クライアントオープンメッセージを介してネゴシエーションを開始することができます。"
    },
    {
      "indent": 3,
      "text": "Once the TLS connection is established, all COPS data MUST be sent as TLS \"application data\".",
      "ja": "TLS接続が確立されると、すべてのCOPSのデータは、TLSの「アプリケーションデータ」として送らなければなりません。"
    },
    {
      "indent": 0,
      "text": "5.1. PEP Initiated Security Negotiation",
      "section_title": true,
      "ja": "5.1.  PEP開始セキュリティネゴシエーション"
    },
    {
      "indent": 3,
      "text": "A PEP MAY initiate a TLS security negotiation with a PDP using the Client-Open message. To do this, the Client-Open message MUST have a Client-Type of 0 and MUST include the Integrity-TLS object.",
      "ja": "PEPは、Client-オープンメッセージを使用してPDPとTLSセキュリティ交渉を開始することができます。これを行うには、クライアント・オープンのメッセージは0のクライアントタイプを持っていなければならないとIntegrity-TLSオブジェクトを含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "Upon receiving the Client-Open message, the PDP SHOULD respond with a Client-Accept message containing the Integrity-TLS object.",
      "ja": "クライアントオープンメッセージを受信すると、PDPは、Integrity-TLSオブジェクトを含むクライアント-Acceptメッセージで応答する必要があります。"
    },
    {
      "indent": 3,
      "text": "Note that in order to carry the Integrity-TLS object, the contents of the Client-Accept message defined in section 3.7 of [RFC2748] need not change, except that the C-Type of the integrity object contained there-in should now be C-Type=2. For Example:",
      "ja": "保全対象のC型がイン含有すること以外は整合-TLSオブジェクトを実行するために、[RFC2748]のセクション3.7で定義されたクライアント-Acceptメッセージの内容は、変更する必要はないことに注意することは今Cでなければなりません-type = 2。例えば："
    },
    {
      "indent": 6,
      "text": "<Client-Accept> ::= <Common Header>\n                    <KA Timer>\n                    [<ACCT Timer>]\n                    [<Integrity (C-Num=16, C-Type=2)>]",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Note also that this new format of the Client-Accept message does not replace or obsolete the existing Client-Accept message format, which can continue to be used for non-secure COPS session negotiations.",
      "ja": "クライアント-Acceptメッセージのこの新しい形式は置き換えられないか、時代遅れ続けることができ、既存のクライアント-Acceptメッセージのフォーマットは、非セキュアCOPSセッションの交渉のために使用されることにも注意してください。"
    },
    {
      "indent": 3,
      "text": "Upon receiving the appropriate Client-Accept message, the PEP SHOULD initiate the TLS handshake.",
      "ja": "適切なクライアント-Acceptメッセージを受信すると、PEPは、TLSハンドシェイクを開始すべきです。"
    },
    {
      "indent": 3,
      "text": "The message exchange is as follows:",
      "ja": "次のようにメッセージの交換は、次のとおりです。"
    },
    {
      "indent": 6,
      "text": "C: Client-Open (Client-Type = 0, Integrity-TLS) S: Client-Accept (Client-Type = 0, Integrity-TLS) <TLS handshake> C/S: <...further messages...>",
      "ja": "C：クライアントのオープン（クライアントタイプ= 0、整合性-TLS）S：クライアント受け入れる（クライアントタイプ= 0、整合性-TLS）<TLSハンドシェイク> C / S：<...さらにメッセージ...>"
    },
    {
      "indent": 3,
      "text": "In case the PDP does not wish to open a secure connection with the PEP, it MUST reply with a Client-Close message and close the connection. The Client-Close message MUST include the error code 15= Authentication required, with the Sub-code (octet 2) set to 16 for the Integrity object's C-Num, and (octet 3) set to the C-Type corresponding to the server's preferred Integrity type, or zero for no security.",
      "ja": "ケースでPDPは、PEPとの安全な接続をオープンしたくない、それは、Client-閉じるメッセージで応答し、接続を閉じる必要があります。クライアント閉じるメッセージは、サブコード（オクテット2）インテグリティオブジェクトのC-numの16に設定し、サーバの対応するC型に設定さ（オクテット3）を用いて、必要なエラー・コード15 =認証を含まなければなりません好適な整合性タイプ、または全くセキュリティのためのゼロ。"
    },
    {
      "indent": 3,
      "text": "A PEP requiring the Integrity-TLS object in a Client-Accept message MUST close the connection if the Integrity-TLS object is missing. The ensuing Client-Close message MUST include the error code 15= Authentication required, with the Sub-code (octet 2) containing the required Integrity object's C-Num=16, and (octet 3) containing the required Integrity object's C-Type=2.",
      "ja": "クライアント受け入れインテグリティ-TLSオブジェクトが欠落している場合、メッセージは接続を閉じなければなりませんで整合-TLSオブジェクトを必要PEP。その後クライアントクローズメッセージが必要なインテグリティオブジェクトのC-民= 16、及び必要なインテグリティオブジェクトのC型を含む（オクテット3）を含むサブコード（オクテット2）と15 =認証が必要なエラーコードを含まなければなりません= 2。"
    },
    {
      "indent": 0,
      "text": "5.2. PDP Initiated Security Negotiation",
      "section_title": true,
      "ja": "5.2.  PDP開始セキュリティネゴシエーション"
    },
    {
      "indent": 3,
      "text": "The PEP initially opens a TCP connection with the PDP on the standard COPS port and sends a Client-Open message. This Client-Open message MUST have a Client-Type of 0.",
      "ja": "PEPは、最初は標準COPSポート上のPDPとのTCP接続をオープンし、クライアントのオープンメッセージを送信します。このクライアント・オープンのメッセージは0のクライアントタイプを持たなければなりません。"
    },
    {
      "indent": 3,
      "text": "The PDP SHOULD then reply with a Client-Accept message. In order to signal the PEP to start the TLS handshake, the PDP MUST include the Integrity-TLS object in the Client-Accept message.",
      "ja": "PDPは、[クライアント-Acceptメッセージで応答すべきです。 TLSハンドシェイクを開始するためにPEPを通知するために、PDPは、Client-Acceptメッセージに整合-TLSのオブジェクトを含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "Upon receiving the Client-Accept message with the Integrity-TLS object, the PEP SHOULD initiate the TLS handshake. If for any reason the PEP cannot initiate the handshake, it MUST close the connection.",
      "ja": "整合-TLSオブジェクトとクライアント-Acceptメッセージを受信すると、PEPは、TLSハンドシェイクを開始すべきです。何らかの理由でPEPがハンドシェイクを開始することができない場合は、接続を閉じる必要があります。"
    },
    {
      "indent": 3,
      "text": "The message exchange is as follows:",
      "ja": "次のようにメッセージの交換は、次のとおりです。"
    },
    {
      "indent": 6,
      "text": "C: Client-Open (Client-Type = 0) S: Client-Accept (Client-Type = 0, Integrity-TLS) <TLS handshake> C/S: <...further messages...>",
      "ja": "C：クライアントのオープン（クライアントタイプ= 0）S：クライアント受け入れる（クライアントタイプ= 0、整合性-TLS）<TLSハンドシェイク> C / S：<...さらにメッセージ...>"
    },
    {
      "indent": 3,
      "text": "After receiving the Client-Accept, the PEP MUST NOT send any messages until the TLS handshake is complete. Upon receiving any message from the PEP before the TLS handshake starts, the PDP MUST issue a Client-Close message with an error code 15= Authentication Required.",
      "ja": "TLSハンドシェイクが完了するまで、クライアント受け入れを受信した後、PEPは、すべてのメッセージを送ってはいけません。 TLSハンドシェイクを開始する前に、PEPから任意のメッセージを受信すると、PDPは、エラーコード15 =認証が必要とクライアント閉じるメッセージを発行しなければなりません。"
    },
    {
      "indent": 3,
      "text": "A PDP wishing to negotiate security with a PEP having an existing non-secure connection MUST send a Client-Close with the error code 15= Authentication required, with the Sub-code (octet 2) containing the required Integrity object's C-Num=16, and (octet 3) containing the required Integrity object's C-Type=2, and then wait for the PEP to reconnect. Upon receiving the Client-Open message, it SHOULD use the Client-Accept message to initiate security negotiation.",
      "ja": "PDPは、クライアントを閉じる必要インテグリティオブジェクトの含むサブコード（オクテット2）と、15 =認証が必要なエラーコードをC-民= 16を送信しなければならない既存の非セキュア接続を有するPEPとセキュリティをネゴシエートすることを望みます、及び（オクテット3）必要なインテグリティオブジェクトのC型= 2を含有し、そしてその後、PEPは、再接続を待ちます。クライアントのオープンメッセージを受信すると、それはセキュリティネゴシエーションを開始するために、クライアント-Acceptメッセージを使用すべきです。"
    },
    {
      "indent": 0,
      "text": "6. Connection Closure",
      "section_title": true,
      "ja": "6.接続クロージャー"
    },
    {
      "indent": 3,
      "text": "TLS provides facilities to securely close its connections. Reception of a valid closure alert assures an implementation that no further data will arrive on that connection. The TLS specification requires TLS implementations to initiate a closure alert exchange before closing a connection. It also permits TLS implementations to close connections without waiting to receive closure alerts from the peer, provided they send their own first. A connection closed in this way is known as an \"incomplete close\". TLS allows implementations to reuse the session in this case, but COPS/TLS makes no use of this capability.",
      "ja": "TLSは、しっかりとその接続をクローズする機能を提供します。有効な終了アラートの受信には、さらにデータがその接続に到着しないだろうな実装を保証します。 TLS仕様では、接続を閉じる前に終了アラートの交換を開始するために、TLSの実装が必要です。また、彼らは自分の最初のを送って、ピアから閉鎖アラートを受信するために待たずに接続を閉じるには、TLSの実装が可能になります。このように、接続を閉じた「不完全近い」として知られています。 TLSは実装が、この場合には、セッションを再利用することができますが、COPS / TLSは、この機能を使用しません。"
    },
    {
      "indent": 3,
      "text": "A connection closed without first sending a closure alert is known as a \"premature close\". Note that a premature close does not call into question the security of the data already received, but simply indicates that subsequent data might have been truncated. Because TLS is oblivious to COPS message boundaries, it is necessary to examine the COPS data itself (specifically the Message header) to determine whether truncation occurred.",
      "ja": "接続は、第1の閉鎖警戒「時期尚早近い」として知られているを送信せずに閉じました。時期尚早近いが質問にすでに受信したデータのセキュリティを呼び出すことはありませんが、単に後続のデータが切り捨てられている可能性があることを示しています。 TLSは、メッセージ境界をCOPSを忘れているので、切り捨てが発生したかどうかを決定するためにCOPSデータ自体（具体的にはメッセージヘッダー）を検討する必要があります。"
    },
    {
      "indent": 0,
      "text": "6.1. PEP System Behavior",
      "section_title": true,
      "ja": "6.1.  PEPシステムの動作"
    },
    {
      "indent": 3,
      "text": "PEP implementations MUST treat premature closes as errors and any data received as potentially truncated. The COPS protocol allows the PEP system to find out whether truncation took place. A PEP system detecting an incomplete close SHOULD recover gracefully.",
      "ja": "PEP実装はエラーとして、早期閉じを扱わなければなりませんし、任意のデータは、潜在的に切り捨てられました。 COPSプロトコルは、PEPシステムは、切り捨てが行われたかどうかを確認することができます。不完全近い検出PEPシステムが正常に回復すべきです。"
    },
    {
      "indent": 3,
      "text": "PEP systems SHOULD send a closure alert before closing the connection. PEPs unprepared to receive any more data MAY choose not to wait for the PDP system's closure alert and simply close the connection, thus generating an incomplete close on the PDP side.",
      "ja": "PEPシステムが接続を閉じる前に終了アラートを送るべきです。任意のより多くのデータを受信する準備ができていないのPEPは、PDPシステムの閉鎖警戒を待って、単にので、PDP側の不完全なクローズを生成し、接続を終了しないこともできます。"
    },
    {
      "indent": 0,
      "text": "6.2. PDP System Behavior",
      "section_title": true,
      "ja": "6.2.  PDPシステムの動作"
    },
    {
      "indent": 3,
      "text": "COPS permits a PEP to close the connection at any time, and requires PDPs to recover gracefully. In particular, PDPs SHOULD be prepared to receive an incomplete close from the PEP, since a PEP often shuts down for operational reasons unrelated to the transfer of policy information between the PEP and PDP.",
      "ja": "COPSは、いつでも接続を閉じるにはPEPを可能にし、優雅に回復するのPDPが必要です。 PEPは、多くの場合、PEPとPDPの間のポリシー情報の転送とは無関係の動作の理由のためにシャットダウンするので、特に、PDPは、PEPから不完全近いを受信するように準備されるべきです。"
    },
    {
      "indent": 6,
      "text": "Implementation note: The PDP ordinarily expects to be able to signal the end of data by closing the connection. However, the PEP may have already sent the closure alert and dropped the connection.",
      "ja": "実装注：PDPは、通常、接続を閉じることにより、データの終わりを合図することができると予想しています。しかし、PEPはすでに終了アラートを送信して接続を切断した可能性があります。"
    },
    {
      "indent": 3,
      "text": "PDP systems MUST attempt to initiate an exchange of closure alerts with the PEP system before closing the connection. PDP systems MAY close the connection after sending the closure alert, thus generating an incomplete close on the PEP side.",
      "ja": "PDPシステムは、接続を閉じる前に、PEPシステムと閉鎖アラートの交換を開始しようとしなければなりません。 PDPシステムは、従って、PEP側の不完全近いを生成閉鎖アラートを送信した後、接続を閉じます。"
    },
    {
      "indent": 0,
      "text": "7. Endpoint Identification and Access Control",
      "section_title": true,
      "ja": "7.エンドポイントの識別とアクセス制御"
    },
    {
      "indent": 3,
      "text": "All PEP implementations of COPS/TLS MUST support an access control mechanism to identify authorized PDPs. This requirement provides a level of assurance that the policy arriving at the PEP is actually valid. PEP deployments SHOULD require the use of this access control mechanism for operation of COPS over TLS. When access control is enabled, the PEP implementation MUST NOT initiate COPS/TLS connections to systems not authorized as PDPs by the access control mechanism.",
      "ja": "COPSの全てPEP実装は/ TLSは、許可のPDPを識別するためのアクセス制御メカニズムをサポートしなければなりません。この要件は、PEPに到着する政策が実際に有効であることを保証レベルを提供します。 PEPの展開は、TLSを超えるCOPSの動作については、このアクセス制御機構を使用することを要求すべきです。アクセス制御が有効になっている場合、PEP実装は、アクセス制御機構によりPDPのよう許可していないシステムにCOPS / TLS接続を開始してはなりません。"
    },
    {
      "indent": 3,
      "text": "Similarly, PDP COPS/TLS implementations MUST support an access control mechanism permitting them to restrict their services to authorized PEP systems only. However, deployments MAY choose not to use an access control mechanism at the PDP, as organizations might not consider the types of policy being deployed as sensitive, and therefore do not need to incur the expense of managing credentials for the PEP systems. If access controls are used, however, the PDP implementation MUST terminate COPS/TLS connections from unauthorized PEP systems and log an error if an auditable logging mechanism is present.",
      "ja": "同様に、PDP COPS / TLSの実装は、認可さPEPシステムにサービスを制限することを可能にするアクセス制御メカニズムをサポートしなければなりません。しかし、展開は、組織が敏感で展開されたポリシーの種類を考慮していない可能性があるため、PDPのアクセス制御機構を使用しないことも選択できますので、PEPシステムの資格情報を管理するための費用を負担する必要はありません。アクセス制御が使用される場合、しかしながら、PDPの実装では、不正なPEPシステムからCOPS / TLS接続を終了しなければならないし、監査可能なログメカニズムが存在する場合、エラーを記録します。"
    },
    {
      "indent": 3,
      "text": "Implementations of COPS/TLS MUST use X.509 v3 certificates conforming to [RFC3280] to identify PDP and PEP systems. COPS/TLS systems MUST perform certificate verification processing conforming to [RFC3280].",
      "ja": "COPSの実装/ TLSは、PDPとPEPシステムを識別するために、[RFC3280]に準拠したX.509 v3証明書を使用しなければなりません。 COPS / TLSシステムは、[RFC3280]に準拠した証明書の検証処理を実行しなければなりません。"
    },
    {
      "indent": 3,
      "text": "If a subjectAltName extension of type dNSName or iPAddress is present in the PDP's certificate, it MUST be used as the PDP identity. If both types are present, dNSName SHOULD be used as the PDP identity. If neither type is present, the most specific Common Name field in the Subject field of the certificate SHOULD be used.",
      "ja": "型のdNSNameまたはIPアドレスのsubjectAltName拡張は、PDPの証明書に存在している場合、それはPDPのアイデンティティとして使用しなければなりません。両方のタイプが存在する場合、のdNSNameは、PDPのIDとして使用する必要があります。どちらのタイプが存在する場合、証明書のSubjectフィールドの中で最も特定のCommon Nameフィールドを使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "Matching is performed using the matching rules specified by [RFC3280]. If more than one identity of a given type is present in the certificate (e.g., more than one dNSName in the subjectAltName certificate extension), a match in any one of the provided identities is acceptable. Generally, the COPS system uses the first name for matching, except as noted below in the IP address checking requirements.",
      "ja": "マッチングは、[RFC3280]で指定されたマッチングルールを使用して実行されます。与えられたタイプの複数のアイデンティティ証明書（のsubjectAltName証明書の拡張で、例えば、複数のdNSName）に存在する場合、提供される識別情報のいずれか1つに一致が許容されます。一般的に、COPSシステムが要件を確認したIPアドレスに下記のよう除き、マッチングのための最初の名前を使用しています。"
    },
    {
      "indent": 0,
      "text": "7.1. PEP Identity",
      "section_title": true,
      "ja": "7.1.  PEPアイデンティティ"
    },
    {
      "indent": 3,
      "text": "When PEP systems are not access controlled, the PDP does not need external knowledge of what the PEP's identity ought to be and so checks are neither possible nor necessary. In this case, there is no requirement for PEP systems to register with a certificate authority, and COPS over TLS uses one-way authentication, of the PDP to the PEP.",
      "ja": "PEPシステムは、アクセス制御されていない場合には、PDPはチェックが可能でも必要でもないものをPEPのアイデンティティがあるべきなどの外部知識を必要としません。この場合には、認証局に登録するためのPEPシステムのための必要はない、とTLS上COPSはPEPにPDPの一方向認証を使用します。"
    },
    {
      "indent": 3,
      "text": "When PEP systems are access controlled, PEPs MUST be the subjects of end entity certificates [RFC3280]. In this case, COPS over TLS uses two-way authentication, and the PDP MUST perform the same identity checks for the PEPs as described above for the PDP.",
      "ja": "PEPシステムは、アクセスが制御されている場合、のPEPは、エンドエンティティ証明書[RFC3280]の対象でなければなりません。この場合には、TLS上COPSは、双方向認証を使用し、そしてPDPはPDPについて上述したのPEPに同じ身元チェックを実行しなければなりません。"
    },
    {
      "indent": 3,
      "text": "When access controls are in effect at the PDP, PDP implementations MUST have a mechanism to securely acquire the trust anchor for each authorized Certification Authority (CA) that issues certificates to supported PEPs.",
      "ja": "アクセス制御は、PDPに有効であるとき、PDPの実装が確実に支持のPEPに証明書を発行する各承認証明機関（CA）の信頼アンカーを取得するメカニズムがなければなりません。"
    },
    {
      "indent": 0,
      "text": "7.2. PDP Identity",
      "section_title": true,
      "ja": "7.2.  PDPアイデンティティ"
    },
    {
      "indent": 3,
      "text": "Generally, COPS/TLS requests are generated by the PEP consulting bootstrap policy information that identifies PDPs that the PEP is authorized to connect to. This policy provides the PEP with the hostname or IP address of the PDP. How this bootstrap policy information arrives at the PEP is outside the scope of this document. However, all PEP implementations MUST provide a mechanism to securely deliver or configure the bootstrap policy.",
      "ja": "一般的に、COPS / TLS要求はPEPが接続を許可されたPDPを特定し、ブートストラップポリシー情報をコンサルティングPEPによって生成されます。このポリシーは、PDPのホスト名またはIPアドレスを使用してPEPを提供します。このブートストラップポリシー情報は、PEPに到着する方法このドキュメントの範囲外です。しかし、全てのPEP実装が確実に送達またはブートストラップ・ポリシーを設定するためのメカニズムを提供しなければなりません。"
    },
    {
      "indent": 3,
      "text": "All PEP implementations MUST be able to securely acquire the trust anchor for each authorized Certification Authority (CA) that issues PDP certificates. Also, the PEPs MUST support a mechanism to securely acquire an access control list (ACL) or filter identifying the set of authorized PDPs associated with each CA. Deployments must take care to avoid circular dependencies in accessing trust anchors and ACLs. At a minimum, trust anchors and ACLs may be installed manually.",
      "ja": "すべてのPEP実装はしっかりPDP証明書を発行する各認可認証局（CA）のためのトラストアンカーを取得できなければなりません。また、のPEPを確実にそれぞれのCAに関連付けられた許可のPDPのセットを識別するアクセス制御リスト（ACL）またはフィルタを取得するためのメカニズムをサポートしなければなりません展開は信頼アンカーとACLへのアクセスに循環依存を避けるように注意する必要があります。最低でも、信頼アンカーとACLは手動でインストールすることができます。"
    },
    {
      "indent": 3,
      "text": "PEP deployments that participate in multiple domains, such as those on mobile platforms, MAY use different CAs and access control lists in each domain.",
      "ja": "そのようなモバイルプラットフォーム上のものなど、複数のドメインに参加PEPの展開は、各ドメインに異なるCAおよびアクセス制御リストを使用するかもしれません。"
    },
    {
      "indent": 3,
      "text": "If the PDP hostname or IP address is available via the bootstrap policy, the PEP MUST check it against the PDP's identity as presented in the PDP's TLS Certificate message.",
      "ja": "PDPのホスト名またはIPアドレスは、ブートストラップポリシーを介して利用可能である場合にはPDPのTLS証明書メッセージに提示され、PEPはPDPのアイデンティティに対してそれをチェックしなければなりません。"
    },
    {
      "indent": 3,
      "text": "In some cases, the bootstrap policy will identify the authorized PDP only by an IP address of the PDP system. In this case, the subjectAltName MUST be present in the certificate, and it MUST include an iPAddress format matching the expected name of the policy server.",
      "ja": "いくつかのケースでは、ブートストラップポリシーは、PDPシステムのIPアドレスによって認可PDPを識別します。この場合、のsubjectAltNameは、証明書内に存在していなければなりません、そして、それは、ポリシーサーバの予想される名前と一致するIPアドレスの形式を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the hostname of the PDP does not match the identity in the certificate, a PEP on a user-oriented system MUST either notify the user (PEP systems MAY afford the user the opportunity to continue with the connection in any case) or terminate the connection with a bad certificate error. PEPs on unattended systems MUST log the error to an appropriate audit log (if available) and MUST terminate the connection with a bad certificate error. Unattended PEP systems MAY provide a configuration setting that disables this check, but then MUST provide a setting that enables it.",
      "ja": "PDPのホスト名が証明書で身元と一致しない場合、ユーザー指向のシステム上のPEPは、ユーザーに通知する（PEPシステムがユーザーにどのような場合でも、接続を続行する機会を与える場合があります）または接続を終えなければなりませんどちらか悪い証明書エラーと。無人システム上のPEPは、適切な監査ログにエラーを記録しなければならない（可能な場合）と悪い証明書エラーとの接続を終了しなければなりません。無人PEPシステムは、このチェックを無効にする構成設定を提供することができるが、それを可能に設定を提供しなければなりません。"
    },
    {
      "indent": 0,
      "text": "8. Cipher Suite Requirements",
      "section_title": true,
      "ja": "8.暗号スイートの要件"
    },
    {
      "indent": 3,
      "text": "Implementations MUST support the TLS_RSA_WITH_3DES_EDE_CBC_SHA cipher suite. All other cipher suites are optional.",
      "ja": "実装はTLS_RSA_WITH_3DES_EDE_CBC_SHA暗号スイートをサポートしなければなりません。他のすべての暗号スイートはオプションです。"
    },
    {
      "indent": 0,
      "text": "9. Backward Compatibility",
      "section_title": true,
      "ja": "9.下位互換性"
    },
    {
      "indent": 3,
      "text": "The PEP and PDP SHOULD be backward compatible with peers that have not been modified to support COPS/TLS. They SHOULD handle errors generated in response to the Integrity-TLS object.",
      "ja": "PEPとPDPはCOPS / TLSをサポートするように変更されていないピアとの下位互換性があるべきです。彼らは、Integrity-TLSオブジェクトに応じて生成されたエラーを処理する必要があります。"
    },
    {
      "indent": 0,
      "text": "10. IANA Considerations",
      "section_title": true,
      "ja": "10. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "The IANA has added the following C-Num, C-Type combination for the Integrity-TLS object to the registry at http://www.iana.org/assignments/cops-parameters:",
      "ja": "IANAはhttp://www.iana.org/assignments/cops-parametersでレジストリに整合-TLSオブジェクトの次のC-numが、C型の組み合わせを追加しました。"
    },
    {
      "indent": 3,
      "text": "0x10 0x02 Message Integrity, Integrity-TLS [RFC4261]",
      "ja": "が0x10 0x02のメッセージ整合性、完全性、TLS [RFC4261]"
    },
    {
      "indent": 3,
      "text": "For Client-Type 0, the IANA has added the following Flags value for the Integrity-TLS object:",
      "ja": "クライアントタイプ0の場合は、IANAは、Integrity-TLSオブジェクトに対して、次のフラグの値を追加しました："
    },
    {
      "indent": 6,
      "text": "0x01 = StartTLS",
      "ja": "0x01の= StartTLSを"
    },
    {
      "indent": 3,
      "text": "Further, for Client-Type 0, the IANA has added the following text for Error Sub-Codes:",
      "ja": "さらに、クライアントタイプ0のために、IANAはエラーサブコードのために次のテキストを追加しました："
    },
    {
      "indent": 6,
      "text": "Error Code: 15 Error Sub-Code: Octet 2: C-Num of the Integrity object Octet 3: C-Type of the supported/preferred Integrity object or Zero.",
      "ja": "エラーコード：15エラーサブコード：オクテット2：サポート/好ましいインテグリティオブジェクトまたはゼロのC型：インテグリティオブジェクトオクテット3のC-民。"
    },
    {
      "indent": 5,
      "text": "Error-Code    Error-SubCode      Description\n            Octet 2  Octet 3\n---------------------------------------------------\n  15          16        0        No security\n  15          16        2        Integrity-TLS supported/preferred",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Further values for the Flags field and the reserved field can only be assigned by IETF Consensus rule, as defined in [RFC2434].",
      "ja": "Flagsフィールドと予備フィールドためのさらなる値は唯一[RFC2434]で定義されるように、IETFコンセンサスルールによって割り当てることができます。"
    },
    {
      "indent": 0,
      "text": "11. Security Considerations",
      "section_title": true,
      "ja": "11.セキュリティについての考慮事項"
    },
    {
      "indent": 3,
      "text": "A COPS PDP and PEP MUST check the results of the TLS negotiation to see whether an acceptable degree of authentication and privacy have been achieved. If the negotiation has resulted in unacceptable algorithms or key lengths, either side MAY choose to terminate the connection.",
      "ja": "COPS PDPとPEPは、認証とプライバシーの許容度が達成されたかどうかを確認するためにTLS交渉の結果をチェックしなければなりません。交渉が容認できないアルゴリズムや鍵長をもたらした場合は、どちらかの側が接続を終了することを選択するかもしれません。"
    },
    {
      "indent": 3,
      "text": "A man-in-the-middle attack can be launched by deleting the Integrity-TLS object or altering the Client-Open or Client-Accept messages. If security is required, the PEP and PDP bootstrap policy must specify this, and PEP and PDP implementations should reject Client-Open or Client-Accept messages that fail to include an Integrity-TLS object.",
      "ja": "man-in-the-middle攻撃は、Integrity-TLSオブジェクトを削除するか、クライアントのオープンまたはClient-受諾メッセージを変更することによって起動することができます。セキュリティが必要な場合は、PEPとPDPブートストラップポリシーは、これを指定しなければならない、とPEPとPDPの実装は、Client-オープン拒絶またはIntegrity-TLSオブジェクトが含まれるように失敗したメッセージをクライアント受け入れなければなりません。"
    },
    {
      "indent": 0,
      "text": "12. Acknowledgements",
      "section_title": true,
      "ja": "12.謝辞"
    },
    {
      "indent": 3,
      "text": "This document freely plagiarizes and adapts Eric Rescorla's similar document [RFC2818] that specifies how HTTP runs over TLS.",
      "ja": "この文書は自由にplagiarizesとHTTPがTLS上でどのように実行するかを指定エリックレスコラの同様の文書[RFC2818]を適応します。"
    },
    {
      "indent": 3,
      "text": "Discussions with David Durham, Scott Hahn, and Ylian Sainte-Hillaire also lead to improvements in this document.",
      "ja": "デビッド・ダーラム、スコット・ハーン、そしてYlianサンティレールとの議論はまた、この文書の改善につながります。"
    },
    {
      "indent": 3,
      "text": "The authors wish to thank Uri Blumenthal for doing a thorough security review of the document.",
      "ja": "著者は、文書の徹底的なセキュリティレビューを行うためのウリブルーメンソールに感謝したいです。"
    },
    {
      "indent": 0,
      "text": "13. References",
      "section_title": true,
      "ja": "13.参考文献"
    },
    {
      "indent": 0,
      "text": "13.1. Normative References",
      "section_title": true,
      "ja": "13.1. 引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC2748] Durham, D., Boyle, J., Cohen, R., Herzog, S., Rajan, R., and A. Sastry, \"The COPS (Common Open Policy Service) Protocol\", RFC 2748, January 2000.",
      "ja": "[RFC2748]ダラム、D.、ボイル、J.、コーエン、R.、ヘルツォーク、S.、ラジャン、R.、およびA. Sastry、 \"COPS（共通オープンポリシーサービス）プロトコル\"、RFC 2748、2000年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC2753] Yavatkar, R., Pendarakis, D., and R. Guerin, \"A Framework for Policy-based Admission Control\", RFC 2753, January 2000.",
      "ja": "[RFC2753] Yavatkar、R.、Pendarakis、D.、およびR.ゲラン、 \"ポリシーベースのアドミッション制御のためのフレームワーク\"、RFC 2753、2000年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC3280] Housley, R., Polk, W., Ford, W., and D. Solo, \"Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile\", RFC 3280, April 2002.",
      "ja": "[RFC3280] Housley氏、R.、ポーク、W.、フォード、W.、およびD.ソロ、 \"インターネットX.509公開鍵暗号基盤証明書と証明書失効リスト（CRL）プロフィール\"、RFC 3280、2002年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC2246] Dierks, T. and C. Allen, \"The TLS Protocol Version 1.0\", RFC 2246, January 1999.",
      "ja": "[RFC2246]ダークス、T.とC.アレン、 \"TLSプロトコルバージョン1.0\"、RFC 2246、1999年1月。"
    },
    {
      "indent": 0,
      "text": "13.2. Informative References",
      "section_title": true,
      "ja": "13.2. 参考文献"
    },
    {
      "indent": 3,
      "text": "[RFC2818] Rescorla, E., \"HTTP Over TLS\", RFC 2818, May 2000.",
      "ja": "[RFC2818]レスコラ、E.、 \"TLSオーバーHTTP\"、RFC 2818、2000年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC2595] Newman, C., \"Using TLS with IMAP, POP3 and ACAP\", RFC 2595, June 1999.",
      "ja": "[RFC2595]ニューマン、C.、 \"IMAP、POP3およびACAPとTLSを使用する\"、RFC 2595、1999年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC2434] Narten, T. and H. Alvestrand, \"Guidelines for Writing an IANA Considerations Section in RFCs\", BCP 26, RFC 2434, October 1998.",
      "ja": "[RFC2434] Narten氏、T.とH. Alvestrand、 \"RFCsにIANA問題部に書くためのガイドライン\"、BCP 26、RFC 2434、1998年10月。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Amol Kulkarni Intel Corporation 2111 N.E. 25th Avenue Hillsboro, OR 97214 USA",
      "ja": "AMOL Kulkarniさんインテルコーポレーション2111 N.E.第25回アベニューヒルズボロ、OR 97214 USA"
    },
    {
      "indent": 3,
      "text": "EMail: amol.kulkarni@intel.com",
      "ja": "メールアドレス：amol.kulkarni@intel.com"
    },
    {
      "indent": 3,
      "text": "Jesse R. Walker Intel Corporation 2111 N.E. 25th Avenue Hillsboro, OR 97214 USA",
      "ja": "ジェシーR.ウォーカーインテルコーポレーション2111 N.E.第25回アベニューヒルズボロ、OR 97214 USA"
    },
    {
      "indent": 3,
      "text": "EMail: jesse.walker@intel.com",
      "ja": "メールアドレス：jesse.walker@intel.com"
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2005).",
      "ja": "著作権（C）インターネット協会（2005）。"
    },
    {
      "indent": 3,
      "text": "This document is subject to the rights, licenses and restrictions contained in BCP 78, and except as set forth therein, the authors retain all their rights.",
      "ja": "この文書では、BCP 78に含まれる権利と許可と制限の適用を受けており、その中の記載を除いて、作者は彼らのすべての権利を保有します。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein are provided on an \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書とここに含まれている情報は、基礎とCONTRIBUTOR「そのまま」、ORGANIZATION HE / SHEが表すまたはインターネットソサエティおよびインターネット・エンジニアリング・タスク・フォース放棄すべての保証、明示または、（もしあれば）後援ISに設けられています。黙示、情報の利用は、特定の目的に対する権利または商品性または適合性の黙示の保証を侵害しない任意の保証含むがこれらに限定されません。"
    },
    {
      "indent": 0,
      "text": "Intellectual Property",
      "ja": "知的財産"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any Intellectual Property Rights or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; nor does it represent that it has made any independent effort to identify any such rights. Information on the procedures with respect to rights in RFC documents can be found in BCP 78 and BCP 79.",
      "ja": "IETFは、本書またはそのような権限下で、ライセンスがたりないかもしれない程度に記載された技術の実装や使用に関係すると主張される可能性があります任意の知的財産権やその他の権利の有効性または範囲に関していかなる位置を取りません利用可能です。またそれは、それがどのような権利を確認する独自の取り組みを行ったことを示すものでもありません。 RFC文書の権利に関する手続きの情報は、BCP 78およびBCP 79に記載されています。"
    },
    {
      "indent": 3,
      "text": "Copies of IPR disclosures made to the IETF Secretariat and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the IETF on-line IPR repository at http://www.ietf.org/ipr.",
      "ja": "IPRの開示のコピーが利用できるようにIETF事務局とライセンスの保証に行われた、または本仕様の実装者または利用者がそのような所有権の使用のための一般的なライセンスまたは許可を取得するために作られた試みの結果を得ることができますhttp://www.ietf.org/iprのIETFのオンラインIPRリポジトリから。"
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights that may cover technology that may be required to implement this standard. Please address the information to the IETF at ietf-ipr@ietf.org.",
      "ja": "IETFは、その注意にこの標準を実装するために必要とされる技術をカバーすることができる任意の著作権、特許または特許出願、またはその他の所有権を持ってすべての利害関係者を招待します。 ietf-ipr@ietf.orgのIETFに情報を記述してください。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "ja": "RFC Editor機能のための基金は現在、インターネット協会によって提供されます。"
    }
  ]
}