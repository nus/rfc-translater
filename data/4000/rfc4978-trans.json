{
  "title": {
    "text": "RFC 4978 - The IMAP COMPRESS Extension",
    "ja": "RFC 4978 - IMAP COMPRESS拡張"
  },
  "number": 4978,
  "created_at": "2019-10-29 20:32:49.336837+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                     A. Gulbrandsen\nRequest for Comments: 4978                        Oryx Mail Systems GmbH\nCategory: Standards Track                                    August 2007",
      "raw": true
    },
    {
      "indent": 22,
      "text": "The IMAP COMPRESS Extension",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "このメモの位置付け"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "ja": "この文書は、インターネットコミュニティのためのインターネット標準トラックプロトコルを指定し、改善のための議論と提案を要求します。このプロトコルの標準化状態と状態への「インターネット公式プロトコル標準」（STD 1）の最新版を参照してください。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "The COMPRESS extension allows an IMAP connection to be effectively and efficiently compressed.",
      "ja": "COMPRESS拡張は、IMAP接続が効果的かつ効率的に圧縮することを可能にします。"
    },
    {
      "indent": 3,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction and Overview .......................................2\n2. Conventions Used in This Document ...............................2\n3. The COMPRESS Command ............................................3\n4. Compression Efficiency ..........................................4\n5. Formal Syntax ...................................................6\n6. Security Considerations .........................................6\n7. IANA Considerations .............................................6\n8. Acknowledgements ................................................7\n9. References ......................................................7\n   9.1. Normative References .......................................7\n   9.2. Informative References .....................................7",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction and Overview",
      "section_title": true,
      "ja": "1.はじめにと概要"
    },
    {
      "indent": 3,
      "text": "A server which supports the COMPRESS extension indicates this with one or more capability names consisting of \"COMPRESS=\" followed by a supported compression algorithm name as described in this document.",
      "ja": "COMPRESS拡張をサポートするサーバは、「COMPRESS =」この文書に記載されているようにサポートされている圧縮アルゴリズム名続いからなる1または複数の機能名でこれを示しています。"
    },
    {
      "indent": 3,
      "text": "The goal of COMPRESS is to reduce the bandwidth usage of IMAP.",
      "ja": "COMPRESSの目標は、IMAPの帯域幅の使用量を減らすことです。"
    },
    {
      "indent": 3,
      "text": "Compared to PPP compression (see [RFC1962]) and modem-based compression (see [MNP] and [V42BIS]), COMPRESS offers much better compression efficiency. COMPRESS can be used together with Transport Security Layer (TLS) [RFC4346], Simple Authentication and Security layer (SASL) encryption, Virtual Private Networks (VPNs), etc. Compared to TLS compression [RFC3749], COMPRESS has the following (dis)advantages:",
      "ja": "PPP圧縮（[RFC1962]を参照）、モデムベースの圧縮（[MNP]参照[V42BIS]）と比較して、COMPRESSは、はるかに優れた圧縮効率を提供します。 COMPRESSトランスポート層セキュリティ（TLS）TLS圧縮に比べなど[RFC4346]、簡易認証セキュリティー層（SASL）暗号化、仮想プライベートネットワーク（VPN）、[RFC3749]と一緒に使用することができ、COMPRESSは、以下の（DIS）を持っています利点："
    },
    {
      "indent": 3,
      "text": "- COMPRESS can be implemented easily both by IMAP servers and clients.",
      "ja": " -  COMPRESSは、IMAPサーバとクライアントによって簡単に両方に実装することができます。"
    },
    {
      "indent": 3,
      "text": "- IMAP COMPRESS benefits from an intimate knowledge of the IMAP protocol's state machine, allowing for dynamic and aggressive optimization of the underlying compression algorithm's parameters.",
      "ja": " -  IMAPは、基礎となる圧縮アルゴリズムのパラメータの動的かつ積極的な最適化を可能に、IMAPプロトコルのステートマシンの親密な知識から利益を圧縮します。"
    },
    {
      "indent": 3,
      "text": "- When the TLS layer implements compression, any protocol using that layer can transparently benefit from that compression (e.g., SMTP and IMAP). COMPRESS is specific to IMAP.",
      "ja": " -  TLS層が圧縮を実装する場合、その層を使用して任意のプロトコルは透過的にその圧縮（例えば、SMTPおよびIMAP）から利益を得ることができます。 COMPRESSはIMAPに固有のものです。"
    },
    {
      "indent": 3,
      "text": "In order to increase interoperation, it is desirable to have as few different compression algorithms as possible, so this document specifies only one. The DEFLATE algorithm (defined in [RFC1951]) is standard, widely available and fairly efficient, so it is the only algorithm defined by this document.",
      "ja": "相互運用を上げるためには、できるだけ少ない異なる圧縮アルゴリズムを有することが望ましいので、この文書は一つだけを指定します。 DEFLATEアルゴリズム（[RFC1951]で定義される）は、標準的な広く利用可能で、かなり効率的であるので、このドキュメントによって定義された唯一のアルゴリズムです。"
    },
    {
      "indent": 3,
      "text": "In order to increase interoperation, IMAP servers that advertise this extension SHOULD also advertise the TLS DEFLATE compression mechanism as defined in [RFC3749]. IMAP clients MAY use either COMPRESS or TLS compression, however, if the client and server support both, it is RECOMMENDED that the client choose TLS compression.",
      "ja": "[RFC3749]で定義されるように相互運用を高めるために、また、TLSを広告するべきでこの拡張機能を広告するIMAPサーバは、圧縮機構を収縮します。 IMAPクライアントが圧縮またはTLS圧縮のいずれかを使用することができるが、しかし、クライアントとサーバーのサポートは両方とも、それは、クライアントがTLS圧縮を選択することをお勧めします。"
    },
    {
      "indent": 3,
      "text": "The extension adds one new command (COMPRESS) and no new responses.",
      "ja": "延長は1つの新しいコマンド（COMPRESS）と新しい回答を追加します。"
    },
    {
      "indent": 0,
      "text": "2. Conventions Used in This Document",
      "section_title": true,
      "ja": "この文書で使用される2.表記"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はあります[RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 3,
      "text": "Formal syntax is defined by [RFC4234] as modified by [RFC3501].",
      "ja": "[RFC3501]によって修正され、正式な構文は[RFC4234]で定義されます。"
    },
    {
      "indent": 3,
      "text": "In the examples, \"C:\" and \"S:\" indicate lines sent by the client and server respectively. \"[...]\" denotes elision.",
      "ja": "実施例において、「C：」および「S：」はそれぞれクライアントとサーバから送信されたラインを示します。 \"[...]\" エリジオンを示しています。"
    },
    {
      "indent": 0,
      "text": "3. The COMPRESS Command",
      "section_title": true,
      "ja": "3. COMPRESSコマンド"
    },
    {
      "indent": 3,
      "text": "Arguments: Name of compression mechanism: \"DEFLATE\".",
      "ja": "引数：圧縮機構の名称：「DEFLATE」。"
    },
    {
      "indent": 3,
      "text": "Responses: None",
      "ja": "回答：なし"
    },
    {
      "indent": 3,
      "text": "Result: OK The server will compress its responses and expects the client to compress its commands. NO Compression is already active via another layer. BAD Command unknown, invalid or unknown argument, or COMPRESS already active.",
      "ja": "結果：OKサーバーが応答を圧縮し、クライアントがそのコマンドを圧縮することを期待します。圧縮は他の層を介してすでにアクティブではありません。 BADコマンド、不明すでにアクティブ無効または不明な引数、またはCOMPRESS。"
    },
    {
      "indent": 3,
      "text": "The COMPRESS command instructs the server to use the named compression mechanism (\"DEFLATE\" is the only one defined) for all commands and/or responses after COMPRESS.",
      "ja": "COMPRESSコマンドは、という名前の圧縮機構を使用するようにサーバーに指示しCOMPRESS後にすべてのコマンドおよび/または応答のため（「DEFLATEは、」定義された唯一のものです）。"
    },
    {
      "indent": 3,
      "text": "The client MUST NOT send any further commands until it has seen the result of COMPRESS. If the response was OK, the client MUST compress starting with the first command after COMPRESS. If the server response was BAD or NO, the client MUST NOT turn on compression.",
      "ja": "それはCOMPRESSの結果を見ているまで、クライアントはそれ以上のコマンドを送ってはいけません。応答がOKだった場合、クライアントは、COMPRESS後の最初のコマンドで始まる圧縮しなければなりません。サーバーの応答がBADまたはNOだった場合、クライアントは、圧縮をオンにしてはなりません。"
    },
    {
      "indent": 3,
      "text": "If the server responds NO because it knows that the same mechanism is active already (e.g., because TLS has negotiated the same mechanism), it MUST send COMPRESSIONACTIVE as resp-text-code (see [RFC3501], Section 7.1), and the resp-text SHOULD say which layer compresses.",
      "ja": "それは同じメカニズムがすでにアクティブであることを知っているため、サーバーはNO応答した場合（例えば、TLSは同じメカニズムを交渉したので）、それはRESP-テキストコードとしてCOMPRESSIONACTIVEを送ってはならない（セクション7.1、[RFC3501]を参照）、およびRESP -textは圧縮する層と言うべきです。"
    },
    {
      "indent": 3,
      "text": "If the server issues an OK response, the server MUST compress starting immediately after the CRLF which ends the tagged OK response. (Responses issued by the server before the OK response will, of course, still be uncompressed.) If the server issues a BAD or NO response, the server MUST NOT turn on compression.",
      "ja": "サーバはOK応答を発行した場合、サーバはタグ付きOK応答を終了CRLF直後に始まる圧縮しなければなりません。 （OK応答の前に、サーバによって発行された応答は、もちろん、まだ圧縮されていないだろう。）サーバはBADまたはNO応答を発行した場合、サーバーは、圧縮をオンにしてはなりません。"
    },
    {
      "indent": 3,
      "text": "For DEFLATE (as for many other compression mechanisms), the compressor can trade speed against quality. When decompressing there isn't much of a tradeoff. Consequently, the client and server are both free to pick the best reasonable rate of compression for the data they send.",
      "ja": "（多くの他の圧縮機構のような）DEFLATEため、圧縮機は、品質に対する速度を交換することができます。解凍するとトレードオフの多くはありません。そのため、クライアントとサーバの両方の彼らが送るデータの圧縮の最高の合理的な速度を選ぶことは自由です。"
    },
    {
      "indent": 3,
      "text": "When COMPRESS is combined with TLS (see [RFC4346]) or SASL (see [RFC4422]) security layers, the sending order of the three extensions MUST be first COMPRESS, then SASL, and finally TLS. That is, before data is transmitted it is first compressed. Second, if a SASL security layer has been negotiated, the compressed data is then signed and/or encrypted accordingly. Third, if a TLS security layer has been negotiated, the data from the previous step is signed and/or encrypted accordingly. When receiving data, the processing order MUST be reversed. This ensures that before sending, data is compressed before it is encrypted, independent of the order in which the client issues COMPRESS, AUTHENTICATE, and STARTTLS.",
      "ja": "COMPRESSは、TLS（[RFC4346]を参照）またはSASL（[RFC4422]を参照）は、セキュリティ層と組み合わせた場合、3つの拡張の送信順序は、まずCOMPRESS、SASL、そして最終的にTLSでなければなりません。データは、それが最初に圧縮されて送信される前に、それは、あります。 SASLセキュリティ層がネゴシエートされた場合に、第2の、圧縮されたデータは、その後、署名され、および/またはそれに応じて暗号化されました。 TLSセキュリティ層がネゴシエートされた場合に第三の、前のステップからのデータが署名され、および/またはそれに応じて暗号化されました。データを受信した場合、処理順序は逆でなければなりません。これは、クライアントがCOMPRESS、認証し、STARTTLSを発行した順序とは無関係に、それが暗号化される前に送信する前に、データが圧縮されることを保証します。"
    },
    {
      "indent": 3,
      "text": "The following example illustrates how commands and responses are compressed during a simple login sequence:",
      "ja": "次の例では、コマンドと応答は、単純なログインシーケンス中に圧縮されている方法を示しています。"
    },
    {
      "indent": 8,
      "text": "S: * OK [CAPABILITY IMAP4REV1 STARTTLS COMPRESS=DEFLATE]\nC: a starttls\nS: a OK TLS active",
      "raw": true
    },
    {
      "indent": 12,
      "text": "From this point on, everything is encrypted.",
      "ja": "この時点以降は、すべてが暗号化されています。"
    },
    {
      "indent": 8,
      "text": "C: b login arnt tnra S: b OK Logged in as arnt C: c compress deflate S: d OK DEFLATE active",
      "ja": "C：BのログインARNT tnra S：OK記録されたがAS ARNT CにB：DEFLATE Sを圧縮するC：OKアクティブDEFLATE dは"
    },
    {
      "indent": 12,
      "text": "From this point on, everything is compressed before being\nencrypted.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The following example demonstrates how a server may refuse to compress twice:",
      "ja": "次の例では、サーバが二倍圧縮する拒否することができる方法を示しています。"
    },
    {
      "indent": 8,
      "text": "S: * OK [CAPABILITY IMAP4REV1 STARTTLS COMPRESS=DEFLATE]\n[...]\nC: c compress deflate\nS: c NO [COMPRESSIONACTIVE] DEFLATE active via TLS",
      "raw": true
    },
    {
      "indent": 0,
      "text": "4. Compression Efficiency",
      "section_title": true,
      "ja": "4.圧縮効率"
    },
    {
      "indent": 3,
      "text": "This section is informative, not normative.",
      "ja": "このセクションでは、規範的、有益ではありません。"
    },
    {
      "indent": 3,
      "text": "IMAP poses some unusual problems for a compression layer.",
      "ja": "IMAPは、圧縮層のためのいくつかの異常な問題があります。"
    },
    {
      "indent": 3,
      "text": "Upstream is fairly simple. Most IMAP clients send the same few commands again and again, so any compression algorithm that can exploit repetition works efficiently. The APPEND command is an exception; clients that send many APPEND commands may want to surround large literals with flushes in the same way as is recommended for servers later in this section.",
      "ja": "上流のは非常に簡単です。ほとんどのIMAPクライアントは、何度も何度も同じいくつかのコマンドを送信するので、繰り返しを利用することができます任意の圧縮アルゴリズムを効率的に動作します。 APPENDコマンドは例外です。多くのAPPENDコマンドを送信するクライアントは、このセクションの後半でサーバに推奨されるのと同じ方法でフラッシュを持つ大規模なリテラルを囲むようにしたいことがあります。"
    },
    {
      "indent": 3,
      "text": "Downstream has the unusual property that several kinds of data are sent, confusing all dictionary-based compression algorithms.",
      "ja": "ダウンストリームデータのいくつかの種類がすべての辞書ベースの圧縮アルゴリズムを混乱させ、送信された異常な性質を持っています。"
    },
    {
      "indent": 3,
      "text": "One type is IMAP responses. These are highly compressible; zlib using its least CPU-intensive setting compresses typical responses to 25-40% of their original size.",
      "ja": "一つのタイプは、IMAP応答です。これらは、高度に圧縮されています。 ZLIBその少なくともCPU集約設定を使用すると、元のサイズの25から40パーセントの典型的な応答を圧縮します。"
    },
    {
      "indent": 3,
      "text": "Another type is email headers. These are equally compressible, and benefit from using the same dictionary as the IMAP responses.",
      "ja": "もう一つのタイプは、電子メールのヘッダです。これらは均等に圧縮され、IMAP反応と同じ辞書を使用することから利益を得ます。"
    },
    {
      "indent": 3,
      "text": "A third type is email body text. Text is usually fairly short and includes much ASCII, so the same compression dictionary will do a good job here, too. When multiple messages in the same thread are read at the same time, quoted lines etc. can often be compressed almost to zero.",
      "ja": "第三のタイプは、電子メールの本文テキストです。テキストは通常​​かなり短く、多くのASCIIを含み、その同じ圧縮辞書は、あまりにも、ここでは良い仕事をします。同じスレッドで複数のメッセージを同時に読まれている場合、などのラインを引用し、多くの場合、ゼロに近い圧縮することができます。"
    },
    {
      "indent": 3,
      "text": "Finally, attachments (non-text email bodies) are transmitted, either in binary form or encoded with base-64.",
      "ja": "最後に、添付ファイル（非テキストメール体）は、いずれかのバイナリ形式で送信又はベース64で符号化されます。"
    },
    {
      "indent": 3,
      "text": "When attachments are retrieved in binary form, DEFLATE may be able to compress them, but the format of the attachment is usually not IMAP-like, so the dictionary built while compressing IMAP does not help. The compressor has to adapt its dictionary from IMAP to the attachment's format, and then back. A few file formats aren't compressible at all using deflate, e.g., .gz, .zip, and .jpg files.",
      "ja": "添付ファイルがバイナリ形式で取得された場合、DEFLATEは、それらを圧縮することができるかもしれないが、IMAPを圧縮しても解決しない一方で辞書が構築されたように、添付ファイルの形式は、通常、IMAPのようではありません。コンプレッサーは、当時の添付ファイルの形式にIMAPからその辞書を適応させる、としています。いくつかのファイル形式は.zipファイル、.gzを、例えば、収縮、および.jpgのファイルを使用して、全く圧縮できません。"
    },
    {
      "indent": 3,
      "text": "When attachments are retrieved in base-64 form, the same problems apply, but the base-64 encoding adds another problem. 8-bit compression algorithms such as deflate work well on 8-bit file formats, however base-64 turns a file into something resembling 6-bit bytes, hiding most of the 8-bit file format from the compressor.",
      "ja": "添付ファイルは、ベース64形式で取得された場合に、同じ問題が当てはまるが、ベース64符号化は、別の問題を追加します。 8ビットのファイル形式でよく、このようなDEFLATE作業として、8ビットの圧縮アルゴリズム、しかしベース64は、圧縮機からの8ビットのファイル形式のほとんどを隠し、6ビットのバイトに似たものにファイルを回します。"
    },
    {
      "indent": 3,
      "text": "When using the zlib library (see [RFC1951]), the functions deflateInit2(), deflate(), inflateInit2(), and inflate() suffice to implement this extension. The windowBits value must be in the range -8 to -15, or else deflateInit2() uses the wrong format. deflateParams() can be used to improve compression rate and resource use. The Z_FULL_FLUSH argument to deflate() can be used to clear the dictionary (the receiving peer does not need to do anything).",
      "ja": "zlibライブラリを使用する場合（[RFC1951]を参照）、機能のdeflateInit2（）、収縮（）、inflateInit2（）、及び膨張（）この拡張を実現するために十分です。 windowBits値は-15 -8の範囲内でなければならない、または他のdeflateInit2は（）間違ったフォーマットを使用しています。 deflateParams（）は圧縮率とリソース使用を改善するために使用することができます。収縮するZ_FULL_FLUSH引数は（）辞書をクリアするために使用することができます（受信ピアは何もする必要はありません）。"
    },
    {
      "indent": 3,
      "text": "A client can improve downstream compression by implementing BINARY (defined in [RFC3516]) and using FETCH BINARY instead of FETCH BODY. In the author's experience, the improvement ranges from 5% to 40% depending on the attachment being downloaded.",
      "ja": "クライアントは、（[RFC3516]で定義される）とBINARYをFETCHの代わりにBODYをFETCH使用してバイナリを実装することにより、下流の圧縮を改善することができます。著者の経験では、改善がダウンロードされている添付ファイルに応じて5％から40％の範囲です。"
    },
    {
      "indent": 3,
      "text": "A server can improve downstream compression if it hints to the compressor that the data type is about to change strongly, e.g., by sending a Z_FULL_FLUSH at the start and end of large non-text literals (before and after '*CHAR8' in the definition of literal in RFC 3501, page 86). Small literals are best left alone. A possible boundary is 5k.",
      "ja": "それはデータ型が定義で（前と「* CHAR8」の後に開始し、大規模な非テキストリテラルの最後にZ_FULL_FLUSHを送信することにより、例えば、強く変更する程度であることを圧縮機にヒント場合、サーバはダウンストリームの圧縮を向上させることができますRFC 3501、86ページ）でのリテラル。小さなリテラルは最高の一人で残っています。可能な境界は5Kです。"
    },
    {
      "indent": 3,
      "text": "A server can improve the CPU efficiency both of the server and the client if it adjusts the compression level (e.g., using the deflateParams() function in zlib) at these points, to avoid trying to compress incompressible attachments. A very simple strategy is to change the level to 0 at the start of a literal provided the first two bytes are either 0x1F 0x8B (as in deflate-compressed files) or 0xFF 0xD8 (JPEG), and to keep it at 1-5 the rest of the time. More complex strategies are possible.",
      "ja": "それは圧縮レベル（ZLIBで例えば、deflateParamsを使用して（）関数）を調整する場合、サーバーは、非圧縮性の添付ファイルを圧縮しようと回避するために、これらの点で、サーバーとクライアントの両方のCPU効率を向上させることができます。非常に単純な戦略は、最初の2つのバイトが0x1Fの0x8B（DEFLATE-圧縮ファイルのように）または0xFFの0xD8（JPEG）のいずれかであり、1-5でそれを維持するために設けられたリテラルの開始時に0にレベルを変更することです残りの時間。より複雑な戦略が可能です。"
    },
    {
      "indent": 0,
      "text": "5. Formal Syntax",
      "section_title": true,
      "ja": "5.正式な構文"
    },
    {
      "indent": 3,
      "text": "The following syntax specification uses the Augmented Backus-Naur Form (ABNF) notation as specified in [RFC4234]. This syntax augments the grammar specified in [RFC3501]. [RFC4234] defines SP and [RFC3501] defines command-auth, capability, and resp-text-code.",
      "ja": "以下の構文仕様は、[RFC4234]で指定された拡張バッカス・ナウアフォーム（ABNF）の表記を使用します。この構文は、[RFC3501]で指定された文法を強化します。 [RFC4234] SPと[RFC3501]を定義するコマンド-AUTH、能力、及びRESPテキストコードを定義します。"
    },
    {
      "indent": 3,
      "text": "Except as noted otherwise, all alphabetic characters are case-insensitive. The use of upper or lower case characters to define token strings is for editorial clarity only. Implementations MUST accept these strings in a case-insensitive fashion.",
      "ja": "特記しないものを除いて、すべての英字は大文字と小文字を区別しません。トークン文字列を定義するための、大・小文字の使用は、編集上明確にするためです。実装は大文字と小文字を区別しないやり方で、これらの文字列を受け入れなければなりません。"
    },
    {
      "indent": 7,
      "text": "command-auth =/ compress",
      "ja": "コマンド-AUTH = /圧縮"
    },
    {
      "indent": 7,
      "text": "compress = \"COMPRESS\" SP algorithm",
      "ja": "= \"COMPRESS\" SPアルゴリズムを圧縮"
    },
    {
      "indent": 7,
      "text": "capability =/ \"COMPRESS=\" algorithm ;; multiple COMPRESS capabilities allowed",
      "ja": "機能= / \"COMPRESS =\" アルゴリズム;;許可複数のCOMPRESS機能"
    },
    {
      "indent": 7,
      "text": "algorithm = \"DEFLATE\"",
      "ja": "このアルゴリズムは、= \"DEFLATE\""
    },
    {
      "indent": 7,
      "text": "resp-text-code =/ \"COMPRESSIONACTIVE\"",
      "ja": "RESP-テキストコード= / \"COMPRESSIONACTIVE\""
    },
    {
      "indent": 3,
      "text": "Note that due the syntax of capability names, future algorithm names must be atoms.",
      "ja": "機能名の構文により、将来のアルゴリズム名は原子でなければならないことに注意してください。"
    },
    {
      "indent": 0,
      "text": "6. Security Considerations",
      "section_title": true,
      "ja": "6.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "As for TLS compression [RFC3749].",
      "ja": "TLS圧縮[RFC3749]として。"
    },
    {
      "indent": 0,
      "text": "7. IANA Considerations",
      "section_title": true,
      "ja": "7. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "The IANA has added COMPRESS=DEFLATE to the list of IMAP capabilities.",
      "ja": "IANAは、IMAP機能のリストにCOMPRESS = DEFLATEを追加しました。"
    },
    {
      "indent": 0,
      "text": "8. Acknowledgements",
      "section_title": true,
      "ja": "8.謝辞"
    },
    {
      "indent": 3,
      "text": "Eric Burger, Dave Cridland, Tony Finch, Ned Freed, Philip Guenther, Randall Gellens, Tony Hansen, Cullen Jennings, Stephane Maes, Alexey Melnikov, Lyndon Nerenberg, and Zoltan Ordogh have all helped with this document.",
      "ja": "エリック・バーガー、デイブCridland、トニー・フィンチ、ネッドフリード、フィリップ・ギュンター、ランドールGellens、トニー・ハンセン、カレン・ジェニングス、ステファン・マース、アレクセイ・メルニコフ、リンドンNerenberg、とゾルタンOrdoghはすべて、この文書に役立っています。"
    },
    {
      "indent": 3,
      "text": "The author would also like to thank various people in the rooms at meetings, whose help is real, but not reflected in the author's mailbox.",
      "ja": "著者はまた、その助け本物である、会議で部屋内のさまざまな人に感謝したい、しかし、著者のメールボックスには反映されません。"
    },
    {
      "indent": 0,
      "text": "9. References",
      "section_title": true,
      "ja": "9.参考文献"
    },
    {
      "indent": 0,
      "text": "9.1. Normative References",
      "section_title": true,
      "ja": "9.1. 引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC1951] Deutsch, P., \"DEFLATE Compressed Data Format Specification version 1.3\", RFC 1951, May 1996.",
      "ja": "[RFC1951]ドイツ、P.、 \"DEFLATE圧縮データフォーマット仕様バージョン1.3\"、RFC 1951、1996年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC3501] Crispin, M., \"INTERNET MESSAGE ACCESS PROTOCOL - VERSION 4rev1\", RFC 3501, March 2003.",
      "ja": "[RFC3501]のCrispin、M.、 \"インターネットメッセージアクセスプロトコル -  VERSION 4rev1\"、RFC 3501、2003年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC4234] Crocker, D. and P. Overell, \"Augmented BNF for Syntax Specifications: ABNF\", RFC 4234, October 2005.",
      "ja": "[RFC4234]クロッカー、D.、およびP. Overell、 \"構文仕様のための増大しているBNF：ABNF\"、RFC 4234、2005年10月。"
    },
    {
      "indent": 0,
      "text": "9.2. Informative References",
      "section_title": true,
      "ja": "9.2. 参考文献"
    },
    {
      "indent": 3,
      "text": "[RFC1962] Rand, D., \"The PPP Compression Control Protocol (CCP)\", RFC 1962, June 1996.",
      "ja": "[RFC1962]ランド、D.、 \"PPP圧縮制御プロトコル（CCP）\"、RFC 1962、1996年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC3516] Nerenberg, L., \"IMAP4 Binary Content Extension\", RFC 3516, April 2003.",
      "ja": "[RFC3516] Nerenberg、L.、 \"IMAP4バイナリコンテンツ拡張\"、RFC 3516、2003年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC3749] Hollenbeck, S., \"Transport Layer Security Protocol Compression Methods\", RFC 3749, May 2004.",
      "ja": "[RFC3749]ホレンベック、S.、 \"トランスポート層セキュリティプロトコル圧縮方法\"、RFC 3749、2004年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC4346] Dierks, T. and E. Rescorla, \"The Transport Layer Security (TLS) Protocol Version 1.1\", RFC 4346, April 2006.",
      "ja": "[RFC4346]ダークス、T.およびE.レスコラ、 \"トランスポート層セキュリティ（TLS）プロトコルバージョン1.1\"、RFC 4346、2006年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC4422] Melnikov, A. and K. Zeilenga, \"Simple Authentication and Security Layer (SASL)\", RFC 4422, June 2006.",
      "ja": "[RFC4422]メルニコフ、A.およびK. Zeilenga、 \"簡易認証セキュリティー層（SASL）\"、RFC 4422、2006年6月。"
    },
    {
      "indent": 3,
      "text": "[V42BIS] ITU, \"V.42bis: Data compression procedures for data circuit-terminating equipment (DCE) using error correction procedures\", http://www.itu.int/rec/T-REC-V.42bis, January 1990.",
      "ja": "【V42BIS] ITU、「V.42bisの：データ回線終端装置（DCE）エラー訂正手順を使用するためのデータ圧縮手順」、http://www.itu.int/rec/T-REC-V.42bis、1990年1月。"
    },
    {
      "indent": 3,
      "text": "[MNP] Gilbert Held, \"The Complete Modem Reference\", Second Edition, Wiley Professional Computing, ISBN 0-471-00852-4, May 1994.",
      "ja": "[MNP]ギルバートは、「完全なモデム・リファレンス」、第2版、ワイリープロフェッショナルコンピューティング、ISBN 0-471-00852-4、1994年5月に開催します。"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "ja": "著者のアドレス"
    },
    {
      "indent": 4,
      "text": "Arnt Gulbrandsen\nOryx Mail Systems GmbH\nSchweppermannstr. 8\nD-81671 Muenchen\nGermany",
      "raw": true
    },
    {
      "indent": 4,
      "text": "Fax: +49 89 4502 9758 EMail: arnt@oryx.com",
      "ja": "ファックス：+49 89 4502 9758 Eメール：arnt@oryx.com"
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The IETF Trust (2007).",
      "ja": "著作権（C）IETFトラスト（2007）。"
    },
    {
      "indent": 3,
      "text": "This document is subject to the rights, licenses and restrictions contained in BCP 78, and except as set forth therein, the authors retain all their rights.",
      "ja": "この文書では、BCP 78に含まれる権利と許可と制限の適用を受けており、その中の記載を除いて、作者は彼らのすべての権利を保有します。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein are provided on an \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書とここに含まれている情報は、基礎とCONTRIBUTOR「そのまま」、ORGANIZATION HE / SHEが表すまたはインターネットSOCIETY、（もしあれば）を後援し、IETF TRUST ANDインターネットエンジニアリングタスクフォース放棄ALLに設けられています。保証は、明示または黙示、この情報の利用および特定目的に対する権利または商品性または適合性の黙示の保証を侵害しない任意の保証がこれらに限定されません。"
    },
    {
      "indent": 0,
      "text": "Intellectual Property",
      "ja": "知的財産"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any Intellectual Property Rights or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; nor does it represent that it has made any independent effort to identify any such rights. Information on the procedures with respect to rights in RFC documents can be found in BCP 78 and BCP 79.",
      "ja": "IETFは、本書またはそのような権限下で、ライセンスがたりないかもしれない程度に記載された技術の実装や使用に関係すると主張される可能性があります任意の知的財産権やその他の権利の有効性または範囲に関していかなる位置を取りません利用可能です。またそれは、それがどのような権利を確認する独自の取り組みを行ったことを示すものでもありません。 RFC文書の権利に関する手続きの情報は、BCP 78およびBCP 79に記載されています。"
    },
    {
      "indent": 3,
      "text": "Copies of IPR disclosures made to the IETF Secretariat and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the IETF on-line IPR repository at http://www.ietf.org/ipr.",
      "ja": "IPRの開示のコピーが利用できるようにIETF事務局とライセンスの保証に行われた、または本仕様の実装者または利用者がそのような所有権の使用のための一般的なライセンスまたは許可を取得するために作られた試みの結果を得ることができますhttp://www.ietf.org/iprのIETFのオンラインIPRリポジトリから。"
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights that may cover technology that may be required to implement this standard. Please address the information to the IETF at ietf-ipr@ietf.org.",
      "ja": "IETFは、その注意にこの標準を実装するために必要とされる技術をカバーすることができる任意の著作権、特許または特許出願、またはその他の所有権を持ってすべての利害関係者を招待します。 ietf-ipr@ietf.orgのIETFに情報を記述してください。"
    }
  ]
}