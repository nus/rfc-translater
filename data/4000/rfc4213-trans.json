{
  "title": {
    "text": "RFC 4213 - Basic Transition Mechanisms for IPv6 Hosts and Routers",
    "ja": "RFC 4213 - IPv6のホストとルータのための基本的な変遷メカニズム"
  },
  "number": 4213,
  "created_at": "2019-10-22 01:48:44.656731+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                        E. Nordmark\nRequest for Comments: 4213                        Sun Microsystems, Inc.\nObsoletes: 2893                                              R. Gilligan\nCategory: Standards Track                                 Intransa, Inc.\n                                                            October 2005",
      "raw": true
    },
    {
      "indent": 9,
      "text": "Basic Transition Mechanisms for IPv6 Hosts and Routers",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "ja": "この文書は、インターネットコミュニティのためのインターネット標準トラックプロトコルを指定し、改善のための議論と提案を要求します。このプロトコルの標準化状態と状態への「インターネット公式プロトコル標準」（STD 1）の最新版を参照してください。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2005).",
      "ja": "著作権（C）インターネット協会（2005）。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document specifies IPv4 compatibility mechanisms that can be implemented by IPv6 hosts and routers. Two mechanisms are specified, dual stack and configured tunneling. Dual stack implies providing complete implementations of both versions of the Internet Protocol (IPv4 and IPv6), and configured tunneling provides a means to carry IPv6 packets over unmodified IPv4 routing infrastructures.",
      "ja": "この文書は、IPv6ホスト及びルータによって実現することができるのIPv4互換性メカニズムを指定します。二つのメカニズムは、デュアルスタックおよび構成されたトンネリングを指定しています。デュアルスタックは、インターネットプロトコル（IPv4とIPv6）の両方のバージョンの完全な実装を提供することを意味し、そして構成トンネリングは、未修飾IPv4ルーティングインフラストラクチャ上でIPv6パケットを運ぶための手段を提供します。"
    },
    {
      "indent": 3,
      "text": "This document obsoletes RFC 2893.",
      "ja": "この文書はRFC 2893を廃止します。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................2\n   1.1. Terminology ................................................3\n2. Dual IP Layer Operation .........................................4\n   2.1. Address Configuration ......................................5\n   2.2. DNS ........................................................5\n3. Configured Tunneling Mechanisms .................................6\n   3.1. Encapsulation ..............................................7\n   3.2. Tunnel MTU and Fragmentation ...............................8\n        3.2.1. Static Tunnel MTU ...................................9\n        3.2.2. Dynamic Tunnel MTU ..................................9\n   3.3. Hop Limit .................................................11\n   3.4. Handling ICMPv4 Errors ....................................11\n   3.5. IPv4 Header Construction ..................................13\n   3.6. Decapsulation .............................................14\n   3.7. Link-Local Addresses ......................................17\n   3.8. Neighbor Discovery over Tunnels ...........................18\n4. Threat Related to Source Address Spoofing ......................18\n5. Security Considerations ........................................19\n6. Acknowledgements ...............................................21\n7. References .....................................................21\n   7.1. Normative References ......................................21\n   7.2. Informative References ....................................21\n8. Changes from RFC 2893 ..........................................23",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "The key to a successful IPv6 transition is compatibility with the large installed base of IPv4 hosts and routers. Maintaining compatibility with IPv4 while deploying IPv6 will streamline the task of transitioning the Internet to IPv6. This specification defines two mechanisms that IPv6 hosts and routers may implement in order to be compatible with IPv4 hosts and routers.",
      "ja": "成功したIPv6への移行の鍵はIPv4ホスト及びルータの大きい設置基盤との互換性です。 IPv6を展開しながら、IPv4の互換性を維持することは、IPv6へのインターネットを移行する作業を合理化します。この仕様は、IPv6ホストやルータは、IPv4ホスト及びルータと互換性を持つようにするために実装することができる2つのメカニズムを定義します。"
    },
    {
      "indent": 3,
      "text": "The mechanisms in this document are designed to be employed by IPv6 hosts and routers that need to interoperate with IPv4 hosts and utilize IPv4 routing infrastructures. We expect that most nodes in the Internet will need such compatibility for a long time to come, and perhaps even indefinitely.",
      "ja": "この文書に記載されているメカニズムはIPv4ホストと相互運用し、IPv4ルーティングインフラストラクチャを利用する必要がIPv6ホストとルータによって使用されるように設計されています。私たちは、インターネットで最もノードが来るのに長い時間のために、このような互換性を必要とする、そしておそらく無限になることを期待しています。"
    },
    {
      "indent": 3,
      "text": "The mechanisms specified here are:",
      "ja": "ここで指定されたメカニズムは、以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "- Dual IP layer (also known as dual stack): A technique for providing complete support for both Internet protocols -- IPv4 and IPv6 -- in hosts and routers.",
      "ja": " - （デュアルスタックとしても知られる）、デュアルIPレイヤ：両方のインターネットプロトコルのための完全なサポートを提供するための技術 -  IPv4とIPv6  - ホストとルータです。"
    },
    {
      "indent": 3,
      "text": "- Configured tunneling of IPv6 over IPv4: A technique for establishing point-to-point tunnels by encapsulating IPv6 packets within IPv4 headers to carry them over IPv4 routing infrastructures.",
      "ja": " -  IPv4の上のIPv6で構成トンネリング：IPv4ルーティングインフラストラクチャ上にそれらを運ぶためのIPv4ヘッダ内のIPv6パケットをカプセル化することによって、ポイントツーポイントトンネルを確立するための技術。"
    },
    {
      "indent": 3,
      "text": "The mechanisms defined here are intended to be the core of a \"transition toolbox\" -- a growing collection of techniques that implementations and users may employ to ease the transition. The tools may be used as needed. Implementations and sites decide which techniques are appropriate to their specific needs.",
      "ja": "実装およびユーザが移行を容易にするために使用することができる技術の成長コレクション - ここで定義されたメカニズムは、「移行ツールボックス」のコアであることを意図しています。必要に応じてツールを使用することができます。実装とサイトは技術は、特定のニーズに適しているかを決定します。"
    },
    {
      "indent": 3,
      "text": "This document defines the basic set of transition mechanisms, but these are not the only tools available. Additional transition and compatibility mechanisms are specified in other documents.",
      "ja": "このドキュメントでは、移行メカニズムの基本セットを定義しますが、これらは、利用可能な唯一のツールではありません。追加の変遷と互換性メカニズムは他の文書で指定されています。"
    },
    {
      "indent": 0,
      "text": "1.1. Terminology",
      "section_title": true,
      "ja": "1.1。用語"
    },
    {
      "indent": 3,
      "text": "The following terms are used in this document:",
      "ja": "次の用語はこの文書で使用されています。"
    },
    {
      "indent": 3,
      "text": "Types of Nodes",
      "ja": "ノードのタイプ"
    },
    {
      "indent": 6,
      "text": "IPv4-only node:",
      "ja": "IPv4のみのノード："
    },
    {
      "indent": 9,
      "text": "A host or router that implements only IPv4. An IPv4-only node does not understand IPv6. The installed base of IPv4 hosts and routers existing before the transition begins are IPv4-only nodes.",
      "ja": "IPv4のみを実装したホストやルータ。 IPv4のみのノードがIPv6を理解していません。遷移が始まる前のIPv4ホスト及びルータのインストールベースは、既存のIPv4専用ノードです。"
    },
    {
      "indent": 6,
      "text": "IPv6/IPv4 node:",
      "ja": "IPv6の/ IPv4ノード："
    },
    {
      "indent": 9,
      "text": "A host or router that implements both IPv4 and IPv6.",
      "ja": "IPv4とIPv6の両方を実装したホストやルータ。"
    },
    {
      "indent": 6,
      "text": "IPv6-only node:",
      "ja": "IPv6のみのノード："
    },
    {
      "indent": 9,
      "text": "A host or router that implements IPv6 and does not implement IPv4. The operation of IPv6-only nodes is not addressed in this memo.",
      "ja": "IPv6を実装し、IPv4を実装していないホストまたはルータ。 IPv6専用ノードの動作は、このメモで扱われていません。"
    },
    {
      "indent": 6,
      "text": "IPv6 node:",
      "ja": "IPv6ノード："
    },
    {
      "indent": 9,
      "text": "Any host or router that implements IPv6. IPv6/IPv4 and IPv6- only nodes are both IPv6 nodes.",
      "ja": "IPv6のを実装するホストまたはルーター。 IPv6 / IPv4およびIPv6-唯一のノードは、両方のIPv6ノードです。"
    },
    {
      "indent": 6,
      "text": "IPv4 node:",
      "ja": "IPv4ノード："
    },
    {
      "indent": 9,
      "text": "Any host or router that implements IPv4. IPv6/IPv4 and IPv4- only nodes are both IPv4 nodes.",
      "ja": "IPv4を実装するホストまたはルーター。 IPv6 / IPv4およびIPv4-唯一のノードは、両方のIPv4ノードです。"
    },
    {
      "indent": 3,
      "text": "Techniques Used in the Transition",
      "ja": "移行に使用される技術"
    },
    {
      "indent": 6,
      "text": "IPv6-over-IPv4 tunneling:",
      "ja": "IPv6のオーバーIPv4トンネリング："
    },
    {
      "indent": 9,
      "text": "The technique of encapsulating IPv6 packets within IPv4 so that they can be carried across IPv4 routing infrastructures.",
      "ja": "これらはIPv4ルーティングインフラストラクチャを横切って行うことができるようにはIPv4内IPv6パケットをカプセル化する技術。"
    },
    {
      "indent": 6,
      "text": "Configured tunneling:",
      "ja": "構成されたトンネリング："
    },
    {
      "indent": 9,
      "text": "IPv6-over-IPv4 tunneling where the IPv4 tunnel endpoint address(es) are determined by configuration information on tunnel endpoints. All tunnels are assumed to be bidirectional. The tunnel provides a (virtual) point-to-point link to the IPv6 layer, using the configured IPv4 addresses as the lower-layer endpoint addresses.",
      "ja": "IPv4のトンネルエンドポイントのアドレス（複数可）は、トンネルエンドポイントの設定情報によって決定されたIPv6オーバーIPv4トンネリング。すべてのトンネルが双方向であると仮定されます。トンネルは、下位層のエンドポイントアドレスとして設定されたIPv4アドレスを使用したIPv6層に（仮想）ポイントツーポイントリンクを提供します。"
    },
    {
      "indent": 3,
      "text": "Other transition mechanisms, including other tunneling mechanisms, are outside the scope of this document.",
      "ja": "他のトンネリングメカニズムを含む他の遷移機構は、この文書の範囲外です。"
    },
    {
      "indent": 3,
      "text": "The key words MUST, MUST NOT, REQUIRED, SHALL, SHALL NOT, SHOULD, SHOULD NOT, RECOMMENDED, MAY, and OPTIONAL, when they appear in this document, are to be interpreted as described in [RFC2119].",
      "ja": "彼らは、この文書に表示される[RFC2119]で説明したように解釈される際のキーワードは、REQUIREDは、、、、、MAY、推奨、およびオプションのすべきでないないものとものとしてはなりませんしなければなりません。"
    },
    {
      "indent": 0,
      "text": "2. Dual IP Layer Operation",
      "section_title": true,
      "ja": "2.デュアルIPレイヤの操作"
    },
    {
      "indent": 3,
      "text": "The most straightforward way for IPv6 nodes to remain compatible with IPv4-only nodes is by providing a complete IPv4 implementation. IPv6 nodes that provide complete IPv4 and IPv6 implementations are called \"IPv6/IPv4 nodes\". IPv6/IPv4 nodes have the ability to send and receive both IPv4 and IPv6 packets. They can directly interoperate with IPv4 nodes using IPv4 packets, and also directly interoperate with IPv6 nodes using IPv6 packets.",
      "ja": "IPv6のための最も簡単な方法は、IPv4専用ノードとの互換性を保つためにノードの完全なIPv4の実装を提供することです。完全なIPv4とIPv6の実装を提供するIPv6ノードは、「IPv6の/ IPv4ノード」と呼ばれています。 IPv6 / IPv4ノードは、IPv4とIPv6パケットの両方を送受信する能力を有します。彼らは、IPv4パケットは、IPv4を使用してノードと直接相互運用、およびIPv6は、IPv6パケットを使用してノードと直接相互運用することができます。"
    },
    {
      "indent": 3,
      "text": "Even though a node may be equipped to support both protocols, one or the other stack may be disabled for operational reasons. Here we use a rather loose notion of \"stack\". A stack being enabled has IP addresses assigned, but whether or not any particular application is available on the stacks is explicitly not defined. Thus, IPv6/IPv4 nodes may be operated in one of three modes:",
      "ja": "ノードが両方のプロトコルをサポートするために装備することができるにもかかわらず、どちらか一方のスタックは、運用上の理由から無効にすることができます。ここでは、「スタック」のではなく緩やかな概念を使用します。有効にされているスタックは、割り当てられたIPアドレスを持っていますが、任意の特定のアプリケーションがスタック上で利用可能であるか否かが明示的に定義されていません。このように、IPv6の/ IPv4ノードは、3つのモードのいずれかで動作することができます。"
    },
    {
      "indent": 3,
      "text": "- With their IPv4 stack enabled and their IPv6 stack disabled.",
      "ja": " - 彼らのIPv4スタックで有効になっており、そのIPv6スタックを無効に。"
    },
    {
      "indent": 3,
      "text": "- With their IPv6 stack enabled and their IPv4 stack disabled.",
      "ja": " - 自分のIPv6スタックでは有効になっており、そのIPv4スタックは無効。"
    },
    {
      "indent": 3,
      "text": "- With both stacks enabled.",
      "ja": " - 両方のスタックが許可されています。"
    },
    {
      "indent": 3,
      "text": "IPv6/IPv4 nodes with their IPv6 stack disabled will operate like IPv4-only nodes. Similarly, IPv6/IPv4 nodes with their IPv4 stacks disabled will operate like IPv6-only nodes. IPv6/IPv4 nodes MAY provide a configuration switch to disable either their IPv4 or IPv6 stack.",
      "ja": "無効になって自分のIPv6スタックとIPv6の/ IPv4ノードは、IPv4専用ノードのように動作します。同様に、自分のIPv4が無効になっスタックとIPv6の/ IPv4ノードは、IPv6専用ノードのように動作します。 IPv6 / IPv4ノードは、それらのIPv4またはIPv6スタックのいずれかを無効にする設定スイッチを提供することができます。"
    },
    {
      "indent": 3,
      "text": "The configured tunneling technique, which is described in Section 3, may or may not be used in addition to the dual IP layer operation.",
      "ja": "セクション3に記載されて構成されたトンネリング技術は、、またはデュアルIPレイヤ操作に加えて使用してもしなくてもよいです。"
    },
    {
      "indent": 0,
      "text": "2.1. Address Configuration",
      "section_title": true,
      "ja": "2.1。アドレス設定"
    },
    {
      "indent": 3,
      "text": "Because the nodes support both protocols, IPv6/IPv4 nodes may be configured with both IPv4 and IPv6 addresses. IPv6/IPv4 nodes use IPv4 mechanisms (e.g., DHCP) to acquire their IPv4 addresses, and IPv6 protocol mechanisms (e.g., stateless address autoconfiguration [RFC2462] and/or DHCPv6) to acquire their IPv6 addresses.",
      "ja": "ノードが両方のプロトコルをサポートしているため、IPv6の/ IPv4ノードは、IPv4およびIPv6アドレスの両方で構成されてもよいです。 IPv6 / IPv4ノードは、そのIPv4アドレスを取得したIPv4機構（例えば、DHCP）を使用し、IPv6プロトコルメカニズム（例えば、ステートレスアドレス自動構成[RFC2462]および/またはDHCPv6の）は、それらのIPv6アドレスを取得します。"
    },
    {
      "indent": 0,
      "text": "2.2. DNS",
      "section_title": true,
      "ja": "2.2。 DNS"
    },
    {
      "indent": 3,
      "text": "The Domain Naming System (DNS) is used in both IPv4 and IPv6 to map between hostnames and IP addresses. A new resource record type named \"AAAA\" has been defined for IPv6 addresses [RFC3596]. Since IPv6/IPv4 nodes must be able to interoperate directly with both IPv4 and IPv6 nodes, they must provide resolver libraries capable of dealing with IPv4 \"A\" records as well as IPv6 \"AAAA\" records. Note that the lookup of A versus AAAA records is independent of whether the DNS packets are carried in IPv4 or IPv6 packets and that there is no assumption that the DNS servers know the IPv4/IPv6 capabilities of the requesting node.",
      "ja": "ドメインネーミングシステム（DNS）は、ホスト名とIPアドレスとの間でマッピングするために、IPv4とIPv6の両方で使用されています。 「AAAA」という名前の新しいリソースレコードタイプはIPv6アドレス[RFC3596]のために定義されています。 IPv6 / IPv4ノードは、IPv4とIPv6の両方のノードと直接相互運用することができなければならないので、彼らは、IPv4に対応できるリゾルバライブラリー「」レコードならびにIPv6の「AAAA」レコードを提供しなければなりません。 AAAAレコード対Aの検索がDNSパケットをIPv4またはIPv6パケットで運ばれているかどうかとは無関係であることと、DNSサーバは、要求ノードののIPv4 / IPv6の機能を知っているという前提が存在しないことに注意してください。"
    },
    {
      "indent": 3,
      "text": "The issues and operational guidelines for using IPv6 with DNS are described at more length in other documents, e.g., [DNSOPV6].",
      "ja": "DNSでIPv6を使用する場合の問題や運用ガイドラインは[DNSOPV6]、例えば、他の文書に複数の長さで説明されています。"
    },
    {
      "indent": 3,
      "text": "DNS resolver libraries on IPv6/IPv4 nodes MUST be capable of handling both AAAA and A records. However, when a query locates an AAAA record holding an IPv6 address, and an A record holding an IPv4 address, the resolver library MAY order the results returned to the application in order to influence the version of IP packets used to communicate with that specific node -- IPv6 first, or IPv4 first.",
      "ja": "IPv6 / IPv4ノードにDNSリゾルバライブラリはAAAAレコードの両方を扱うことができなければなりません。しかし、クエリがIPv6アドレスを保持するAAAAレコード、およびIPv4アドレスを保持するレコードを見つけた場合に、リゾルバライブラリが命ずることができる結果は、その特定のノードと通信するために使用されるIPパケットのバージョンに影響を与えるためにアプリケーションに返さ - まず、第1のIPv6、またはIPv4。"
    },
    {
      "indent": 3,
      "text": "The applications SHOULD be able to specify whether they want IPv4, IPv6, or both records [RFC3493]. That defines which address families the resolver looks up. If there is not an application choice, or if the application has requested both, the resolver library MUST NOT filter out any records.",
      "ja": "アプリケーションは、彼らがIPv4、IPv6の、または両方のレコード[RFC3493]をするかどうかを指定することができるべきです。これは、リゾルバが見上げたアドレスファミリを定義します。アプリケーションの選択がない場合、またはアプリケーションが両方を要求した場合、リゾルバライブラリは、すべてのレコードをフィルタリングしてはなりません。"
    },
    {
      "indent": 3,
      "text": "Since most applications try the addresses in the order they are returned by the resolver, this can affect the IP version \"preference\" of applications.",
      "ja": "ほとんどのアプリケーションは、それらがリゾルバによって返される順序でアドレスをしようとするので、これはアプリケーションのIPバージョン「好み」を影響を与えることができます。"
    },
    {
      "indent": 3,
      "text": "The actual ordering mechanisms are out of scope of this memo. Address selection is described at more length in [RFC3484].",
      "ja": "実際の注文メカニズムは、このメモの範囲外です。アドレス選択は[RFC3484]のその他の長さに記載されています。"
    },
    {
      "indent": 0,
      "text": "3. Configured Tunneling Mechanisms",
      "section_title": true,
      "ja": "3.設定済みのトンネリングメカニズム"
    },
    {
      "indent": 3,
      "text": "In most deployment scenarios, the IPv6 routing infrastructure will be built up over time. While the IPv6 infrastructure is being deployed, the existing IPv4 routing infrastructure can remain functional and can be used to carry IPv6 traffic. Tunneling provides a way to utilize an existing IPv4 routing infrastructure to carry IPv6 traffic.",
      "ja": "ほとんどの展開シナリオでは、IPv6ルーティングインフラストラクチャは時間をかけて構築されます。 IPv6インフラストラクチャが配備されている間に、既存のIPv4ルーティングインフラストラクチャが機能していることができ、IPv6トラフィックを運ぶために使用することができます。トンネリングは、IPv6トラフィックを運ぶために、既存のIPv4ルーティングインフラストラクチャを活用する方法を提供します。"
    },
    {
      "indent": 3,
      "text": "IPv6/IPv4 hosts and routers can tunnel IPv6 datagrams over regions of IPv4 routing topology by encapsulating them within IPv4 packets. Tunneling can be used in a variety of ways:",
      "ja": "IPv6 / IPv4ホスト及びルータは、トンネルIPv6は、IPv4パケット内にそれをカプセル化することによって、IPv4ルーティングトポロジーの領域にわたってデータグラムができます。トンネリングは、さまざまな方法で使用することができます。"
    },
    {
      "indent": 3,
      "text": "- Router-to-Router. IPv6/IPv4 routers interconnected by an IPv4 infrastructure can tunnel IPv6 packets between themselves. In this case, the tunnel spans one segment of the end-to-end path that the IPv6 packet takes.",
      "ja": " - ルータ間。 IPv4インフラストラクチャによって相互接続されたIPv6 / IPv4ルーター自体の間ことができるトンネルIPv6パケットを。この場合、トンネルは、IPv6パケットが取るエンドツーエンドパスの一つのセグメントにまたがります。"
    },
    {
      "indent": 3,
      "text": "- Host-to-Router. IPv6/IPv4 hosts can tunnel IPv6 packets to an intermediary IPv6/IPv4 router that is reachable via an IPv4 infrastructure. This type of tunnel spans the first segment of the packet's end-to-end path.",
      "ja": " - ホスト対ルータ。 IPv6 / IPv4ホストは、IPv4インフラストラクチャを介して到達可能である中間のIPv6 / IPv4ルータにトンネルIPv6パケット缶。トンネルのこのタイプは、パケットのエンドツーエンドパスの最初のセグメントにまたがります。"
    },
    {
      "indent": 3,
      "text": "- Host-to-Host. IPv6/IPv4 hosts that are interconnected by an IPv4 infrastructure can tunnel IPv6 packets between themselves. In this case, the tunnel spans the entire end-to-end path that the packet takes.",
      "ja": " - ホスト間。 IPv4インフラストラクチャ自体の間にできたトンネルIPv6パケットによって相互接続されたIPv6 / IPv4ホスト。この場合、トンネルは、パケットが取る全体のエンドツーエンドパスにまたがります。"
    },
    {
      "indent": 3,
      "text": "- Router-to-Host. IPv6/IPv4 routers can tunnel IPv6 packets to their final destination IPv6/IPv4 host. This tunnel spans only the last segment of the end-to-end path.",
      "ja": " - ルーターツーホスト。 IPv6 / IPv4ルーターそれらの最終宛先のIPv6 / IPv4ホストへのトンネルIPv6パケット缶。このトンネルは、エンドツーエンドのパスの最後のセグメントに及びます。"
    },
    {
      "indent": 3,
      "text": "Configured tunneling can be used in all of the above cases, but it is most likely to be used router-to-router due to the need to explicitly configure the tunneling endpoints.",
      "ja": "構成されたトンネルは、上記の例すべてで使用することができ、原因明示的トンネリングエンドポイントを設定する必要があるため、ルーターを使用される可能性が最も高いです。"
    },
    {
      "indent": 3,
      "text": "The underlying mechanisms for tunneling are:",
      "ja": "トンネリングのための基礎となるメカニズムは、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "- The entry node of the tunnel (the encapsulator) creates an encapsulating IPv4 header and transmits the encapsulated packet.",
      "ja": " - トンネル（カプセル化）のエントリノードは、カプセル化IPv4ヘッダを作成し、カプセル化されたパケットを送信します。"
    },
    {
      "indent": 3,
      "text": "- The exit node of the tunnel (the decapsulator) receives the encapsulated packet, reassembles the packet if needed, removes the IPv4 header, and processes the received IPv6 packet.",
      "ja": " - トンネル（カプセル開放）の出口ノードは、カプセル化されたパケットを受信し、必要に応じてパケットを再構成し、IPv4ヘッダを除去し、受信したIPv6パケットを処理します。"
    },
    {
      "indent": 3,
      "text": "- The encapsulator may need to maintain soft-state information for each tunnel recording such parameters as the MTU of the tunnel in order to process IPv6 packets forwarded into the tunnel.",
      "ja": " - カプセル化はトンネルに転送されたIPv6パケットを処理するために、トンネルのMTUなどのパラメータを記録する各トンネルのためのソフトステート情報を維持する必要があるかもしれません。"
    },
    {
      "indent": 3,
      "text": "In configured tunneling, the tunnel endpoint addresses are determined in the encapsulator from configuration information stored for each tunnel. When an IPv6 packet is transmitted over a tunnel, the destination and source addresses for the encapsulating IPv4 header are set as described in Section 3.5.",
      "ja": "構成トンネリングでは、トンネルエンドポイントアドレスは、各トンネルに記憶された構成情報からカプセル化して決定されます。 IPv6パケットは、トンネルを介して送信される場合、セクション3.5で説明したように、カプセル化IPv4ヘッダーの宛先及び送信元アドレスが設定されています。"
    },
    {
      "indent": 3,
      "text": "The determination of which packets to tunnel is usually made by routing information on the encapsulator. This is usually done via a routing table, which directs packets based on their destination address using the prefix mask and match technique.",
      "ja": "トンネルにパケットその決意は、通常、カプセル化に関する情報をルーティングすることによって行われます。これは通常、接頭辞マスクと一致技術を使用して、宛先アドレスに基づいてパケットを指示するルーティング・テーブルを介して行われます。"
    },
    {
      "indent": 3,
      "text": "The decapsulator matches the received protocol-41 packets to the tunnels it has configured, and allows only the packets in which IPv4 source addresses match the tunnels configured on the decapsulator. Therefore, the operator must ensure that the tunnel's IPv4 address configuration is the same both at the encapsulator and the decapsulator.",
      "ja": "カプセル開放装置は、設定したトンネルに受信されたプロトコル41パケットと一致し、IPv4ソースアドレスはカプセル開放装置で構成されたトンネルに一致するパケットだけを可能にします。したがって、オペレータは、トンネルのIPv4アドレス設定がカプセル化および非カプセル化の両方で同じであることを確認しなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.1. Encapsulation",
      "section_title": true,
      "ja": "3.1。カプセル化"
    },
    {
      "indent": 3,
      "text": "The encapsulation of an IPv6 datagram in IPv4 is shown below:",
      "ja": "IPv4のIPv6データグラムのカプセル化を以下に示します。"
    },
    {
      "indent": 13,
      "text": "                                +-------------+\n                                |    IPv4     |\n                                |   Header    |\n+-------------+                 +-------------+\n|    IPv6     |                 |    IPv6     |\n|   Header    |                 |   Header    |\n+-------------+                 +-------------+\n|  Transport  |                 |  Transport  |\n|   Layer     |      ===>       |   Layer     |\n|   Header    |                 |   Header    |\n+-------------+                 +-------------+\n|             |                 |             |\n~    Data     ~                 ~    Data     ~\n|             |                 |             |\n+-------------+                 +-------------+",
      "raw": true
    },
    {
      "indent": 22,
      "text": "Encapsulating IPv6 in IPv4",
      "ja": "IPv4のIPv6をカプセル化"
    },
    {
      "indent": 3,
      "text": "In addition to adding an IPv4 header, the encapsulator also has to handle some more complex issues:",
      "ja": "IPv4ヘッダを付加することに加えて、カプセル化はまた、いくつかのより複雑な問題を処理しなければなりません。"
    },
    {
      "indent": 3,
      "text": "- Determine when to fragment and when to report an ICMPv6 \"packet too big\" error back to the source.",
      "ja": " - ときフラグメントに決定したときにソースへのICMPv6「パケットが大きすぎる」エラーを報告します。"
    },
    {
      "indent": 3,
      "text": "- How to reflect ICMPv4 errors from routers along the tunnel path back to the source as ICMPv6 errors.",
      "ja": " - どのようにバックのICMPv6エラーとしてソースへのトンネル経路に沿ったルータからICMPv4のエラーを反映します。"
    },
    {
      "indent": 3,
      "text": "Those issues are discussed in the following sections.",
      "ja": "これらの問題は、次のセクションで説明されています。"
    },
    {
      "indent": 0,
      "text": "3.2. Tunnel MTU and Fragmentation",
      "section_title": true,
      "ja": "3.2。トンネルのMTUと断片化"
    },
    {
      "indent": 3,
      "text": "Naively, the encapsulator could view encapsulation as IPv6 using IPv4 as a link layer with a very large MTU (65535-20 bytes at most; 20 bytes \"extra\" are needed for the encapsulating IPv4 header). The encapsulator would only need to report ICMPv6 \"packet too big\" errors back to the source for packets that exceed this MTU. However, such a scheme would be inefficient or non-interoperable for three reasons and therefore MUST NOT be used:",
      "ja": "IPv6は、非常に大きなMTUのリンク層としてIPv4を使用として単純に、カプセル化は、カプセル化を見ることができる（最大で65535から20バイト、20バイトの「余分な」カプセル化IPv4ヘッダのために必要とされます）。カプセル化は裏面のみ、このMTUを超えるパケットのソースにICMPv6の「パケットが大きすぎる」エラーを報告する必要があります。しかし、そのような方式は、3つの理由から非効率的または非相互運用可能になりますので、使用してはいけません。"
    },
    {
      "indent": 3,
      "text": "1) It would result in more fragmentation than needed. IPv4 layer fragmentation should be avoided due to the performance problems caused by the loss unit being smaller than the retransmission unit [KM97].",
      "ja": "1）これは、必要以上の断片化につながります。 IPv4の層フラグメンテーションは、再送ユニット[KM97]よりも小さい損失部による性能上の問題に起因して避けなければなりません。"
    },
    {
      "indent": 3,
      "text": "2) Any IPv4 fragmentation occurring inside the tunnel, i.e., between the encapsulator and the decapsulator, would have to be reassembled at the tunnel endpoint. For tunnels that terminate at a router, this would require additional memory and other resources to reassemble the IPv4 fragments into a complete IPv6 packet before that packet could be forwarded.",
      "ja": "2）トンネル内で発生する任意のIPv4断片化、すなわち、カプセル化およびカプセル開放装置との間で、トンネルエンドポイントで再組み立てしなければなりません。ルータで終端トンネルの場合、これは、そのパケットが転送される前に、完全なIPv6パケットにIPv4のフラグメントを再構成するために追加メモリや他のリソースを必要とします。"
    },
    {
      "indent": 3,
      "text": "3) The encapsulator has no way of knowing that the decapsulator is able to defragment such IPv4 packets (see Section 3.6 for details), and has no way of knowing that the decapsulator is able to handle such a large IPv6 Maximum Receive Unit (MRU).",
      "ja": "3）カプセル化（詳細はセクション3.6を参照）カプセル開放装置は、IPv4パケットを最適化することが可能であることを知る方法がありません、そしてカプセル開放装置は、このような大規模なIPv6の最大受信ユニット（MRU）を扱うことが可能であることを知る方法がありません。"
    },
    {
      "indent": 3,
      "text": "Hence, the encapsulator MUST NOT treat the tunnel as an interface with an MTU of 64 kilobytes, but instead either use the fixed static MTU or OPTIONAL dynamic MTU determination based on the IPv4 path MTU to the tunnel endpoint.",
      "ja": "従って、カプセル化は、64キロバイトMTUとのインターフェースとしてトンネルを治療する、その代わりにいずれかのトンネルエンドポイントへのIPv4経路MTUに基づいて固定された静的MTUまたはオプションの動的MTUの決意を使用してはいけません。"
    },
    {
      "indent": 3,
      "text": "If both the mechanisms are implemented, the decision of which to use SHOULD be configurable on a per-tunnel endpoint basis.",
      "ja": "両方のメカニズムが実装されている場合は、使用するための決定ごとのトンネルエンドポイントに基づいて構成可能であるべきです。"
    },
    {
      "indent": 0,
      "text": "3.2.1. Static Tunnel MTU",
      "section_title": true,
      "ja": "3.2.1。静的トンネルMTU"
    },
    {
      "indent": 3,
      "text": "A node using static tunnel MTU treats the tunnel interface as having a fixed-interface MTU. By default, the MTU MUST be between 1280 and 1480 bytes (inclusive), but it SHOULD be 1280 bytes. If the default is not 1280 bytes, the implementation MUST have a configuration knob that can be used to change the MTU value.",
      "ja": "静的トンネルMTUを使用して、ノードは、固定インターフェイスMTUを有するように、トンネルインタフェースを扱います。デフォルトでは、MTUは1280と1480バイト（両端を含む）の間でなければなりませんが、それは1280バイトである必要があります。デフォルトは1280バイトでない場合、実装は、MTU値を変更するために使用することができる構成ノブを持たなければなりません。"
    },
    {
      "indent": 3,
      "text": "A node must be able to accept a fragmented IPv6 packet that, after reassembly, is as large as 1500 octets [RFC2460]. This memo also includes requirements (see Section 3.6) for the amount of IPv4 reassembly and IPv6 MRU that MUST be supported by all the decapsulators. These ensure correct interoperability with any fixed MTUs between 1280 and 1480 bytes.",
      "ja": "ノードが再組立後に1500オクテット[RFC2460]と同じ大きさである、断片化したIPv6パケットを受け入れることができなければなりません。このメモは、すべてdecapsulatorsによってサポートしなければならないIPv4の再組み立てとIPv6 MRUの量に関する要件（セクション3.6を参照）を含みます。これらは、1280のと1480バイトの間の任意の固定のMTUとの正しい相互運用性を確保します。"
    },
    {
      "indent": 3,
      "text": "A larger fixed MTU than supported by these requirements must not be configured unless it has been administratively ensured that the decapsulator can reassemble or receive packets of that size.",
      "ja": "管理カプセル開放装置が再構築またはそのサイズのパケットを受信することが保証されていなければ、これらの要件によってサポートより大きい固定MTUが設定されてはなりません。"
    },
    {
      "indent": 3,
      "text": "The selection of a good tunnel MTU depends on many factors, at least:",
      "ja": "優れたトンネルMTUの選択は、少なくとも、多くの要因に依存します。"
    },
    {
      "indent": 3,
      "text": "- Whether the IPv4 protocol-41 packets will be transported over media that may have a lower path MTU (e.g., IPv4 Virtual Private Networks); then picking too high a value might lead to IPv4 fragmentation.",
      "ja": " -  IPv4のプロトコル41パケットが下部経路MTU（例えば、IPv4の仮想プライベートネットワーク）を有することができるメディアを介して転送されるかどうか。その後、摘み高すぎる値は、IPv4の断片化につながる可能性があります。"
    },
    {
      "indent": 3,
      "text": "- Whether the tunnel is used to transport IPv6 tunneled packets (e.g., a mobile node with an IPv6-in-IPv4 configured tunnel, and an IPv6-in-IPv6 tunnel interface); then picking too low a value might lead to IPv6 fragmentation.",
      "ja": " - トンネルがIPv6パケットをトンネリング輸送するために使用されているかどうか（例えば、IPv6の型のIPv4設定されたトンネルを有するモバイルノード、およびIPv6インのIPv6トンネルインターフェイス）その後、摘み低すぎる値は、IPv6の断片化につながる可能性があります。"
    },
    {
      "indent": 3,
      "text": "If layered encapsulation is believed to be present, it may be prudent to consider supporting dynamic MTU determination instead as it is able to minimize fragmentation and optimize packet sizes.",
      "ja": "層状カプセル化が存在すると考えられている場合、断片化を最小限に抑え、パケットサイズを最適化することができる代わりに、動的MTUの決意を支持考慮することが賢明であり得ます。"
    },
    {
      "indent": 3,
      "text": "When using the static tunnel MTU, the Don't Fragment bit MUST NOT be set in the encapsulating IPv4 header. As a result, the encapsulator should not receive any ICMPv4 \"packet too big\" messages as a result of the packets it has encapsulated.",
      "ja": "静的トンネルMTUを使用する場合、フラグメントビットをカプセル化IPv4ヘッダに設定してはいけませんしないでください。その結果、カプセル化は、それがカプセル化されたパケットの結果として、任意のICMPv4の「パケットが大きすぎる」のメッセージを受け取るべきではありません。"
    },
    {
      "indent": 0,
      "text": "3.2.2. Dynamic Tunnel MTU",
      "section_title": true,
      "ja": "3.2.2。ダイナミックトンネルのMTU"
    },
    {
      "indent": 3,
      "text": "The dynamic MTU determination is OPTIONAL. However, if it is implemented, it SHOULD have the behavior described in this document.",
      "ja": "動的MTUの決意は任意です。それが実装されている場合しかし、それは、この文書で説明した動作を持っているべきです。"
    },
    {
      "indent": 3,
      "text": "The fragmentation inside the tunnel can be reduced to a minimum by having the encapsulator track the IPv4 path MTU across the tunnel, using the IPv4 Path MTU Discovery Protocol [RFC1191] and recording",
      "ja": "トンネル内部フラグメンテーションは、IPv4パスMTU発見プロトコル[RFC1191]と記録を使用して、カプセル化トンネルを横切ってのIPv4経路MTUを追跡有することによって最小限に抑えることができます"
    },
    {
      "indent": 3,
      "text": "the resulting path MTU. The IPv6 layer in the encapsulator can then view a tunnel as a link layer with an MTU equal to the IPv4 path MTU, minus the size of the encapsulating IPv4 header.",
      "ja": "得られたパスMTU。カプセル化におけるIPv6の層は、その後のIPv4経路MTUに等しいMTUとのリンク層、マイナスカプセル化IPv4ヘッダーのサイズとしてトンネルを見ることができます。"
    },
    {
      "indent": 3,
      "text": "Note that this does not eliminate IPv4 fragmentation in the case when the IPv4 path MTU would result in an IPv6 MTU less than 1280 bytes. (Any link layer used by IPv6 has to have an MTU of at least 1280 bytes [RFC2460].) In this case, the IPv6 layer has to \"see\" a link layer with an MTU of 1280 bytes and the encapsulator has to use IPv4 fragmentation in order to forward the 1280 byte IPv6 packets.",
      "ja": "IPv4の経路MTUは1280バイト以下でよりIPv6のMTUをもたらすときは、この場合におけるIPv4の断片化を排除しないことに留意されたいです。 （IPv6のによって使用される任意のリンク層は、少なくとも1280バイト[RFC2460]のMTUを有していなければならない。）この場合、IPv6の層1280バイトのMTUを持つリンク層を「見る」ことがあり、カプセル化は、IPv4を使用しなければなりません1280個のバイトのIPv6パケットを転送するために、断片化。"
    },
    {
      "indent": 3,
      "text": "The encapsulator SHOULD employ the following algorithm to determine when to forward an IPv6 packet that is larger than the tunnel's path MTU using IPv4 fragmentation, and when to return an ICMPv6 \"packet too big\" message per [RFC1981]:",
      "ja": "カプセル化は、IPv4の断片を使用してトンネルの経路MTUよりも大きくなっているIPv6パケットを転送する時を決定するために、次のアルゴリズムを採用し、そして場合[RFC1981]あたりのICMPv6「パケットが大きすぎる」というメッセージを返すようにする必要があります。"
    },
    {
      "indent": 9,
      "text": "if (IPv4 path MTU - 20) is less than 1280\n        if packet is larger than 1280 bytes\n                Send ICMPv6 \"packet too big\" with MTU = 1280.\n                Drop packet.\n        else\n                Encapsulate but do not set the Don't Fragment\n                flag in the IPv4 header.  The resulting IPv4\n                packet might be fragmented by the IPv4 layer\n                on the encapsulator or by some router along\n                the IPv4 path.\n        endif\nelse\n        if packet is larger than (IPv4 path MTU - 20)\n                Send ICMPv6 \"packet too big\" with\n                MTU = (IPv4 path MTU - 20).\n                Drop packet.\n        else\n                Encapsulate and set the Don't Fragment flag\n                in the IPv4 header.\n        endif\nendif",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Encapsulators that have a large number of tunnels may choose between dynamic versus static tunnel MTUs on a per-tunnel endpoint basis. In cases where the number of tunnels that any one node is using is large, it is helpful to observe that this state information can be cached and discarded when not in use.",
      "ja": "トンネルの数が多いエンカプスレータごとのトンネルエンドポイントに基づいて動的対静的トンネルのMTUの間で選択することができます。いずれかのノードが使用しているトンネルの数が多い場合には、この状態情報がキャッシュされ、使用しないときは廃棄することができることを観察することが有用です。"
    },
    {
      "indent": 3,
      "text": "Note that using dynamic tunnel MTU is subject to IPv4 path MTU blackholes should the ICMPv4 \"packet too big\" messages be dropped by firewalls or not generated by the routers [RFC1435, RFC2923].",
      "ja": "動的トンネルMTUを使用するのIPv4経路MTUブラックホールの対象であることに留意されたいICMPv4の「パケットが大きすぎる」メッセージは、ファイアウォールによってドロップまたはルータ[RFC1435、RFC2923]によって生成されないべきです。"
    },
    {
      "indent": 0,
      "text": "3.3. Hop Limit",
      "section_title": true,
      "ja": "3.3。ホップ制限"
    },
    {
      "indent": 3,
      "text": "IPv6-over-IPv4 tunnels are modeled as \"single-hop\" from the IPv6 perspective. The tunnel is opaque to users of the network, and it is not detectable by network diagnostic tools such as traceroute.",
      "ja": "IPv6のオーバーIPv4トンネルは、IPv6の観点から、「単一ホップ」としてモデル化されます。トンネルは、ネットワークのユーザに対して不透明であり、それは、トレースルートのようなネットワーク診断ツールで検出できません。"
    },
    {
      "indent": 3,
      "text": "The single-hop model is implemented by having the encapsulators and decapsulators process the IPv6 hop limit field as they would if they were forwarding a packet on to any other datalink. That is, they decrement the hop limit by 1 when forwarding an IPv6 packet. (The originating node and final destination do not decrement the hop limit.)",
      "ja": "シングルホップモデルは、カプセル化装置を有することによって実現され、それらは、他のデータリンク上にパケットを転送した場合、彼らは同じようdecapsulatorsは、IPv6ホップ限界フィールドを処理します。 IPv6パケットを転送する際つまり、それらは、1ホップ限度を減少しました。 （発信元ノードと、最終宛先がホップ制限値をデクリメントしていません。）"
    },
    {
      "indent": 3,
      "text": "The TTL of the encapsulating IPv4 header is selected in an implementation-dependent manner. The current suggested value is published in the \"Assigned Numbers\" RFC [RFC3232][ASSIGNED]. Implementations MAY provide a mechanism to allow the administrator to configure the IPv4 TTL as the IP Tunnel MIB [RFC4087].",
      "ja": "カプセル化IPv4ヘッダのTTLは、実装依存的に選択されます。現在提案された値は、「割り当て番号」RFC [RFC3232] [ASSIGNED]で公開されています。実装では、管理者がIPトンネルMIB [RFC4087]としてIPv4のTTLを設定できるようにするメカニズムを提供することができます。"
    },
    {
      "indent": 0,
      "text": "3.4. Handling ICMPv4 Errors",
      "section_title": true,
      "ja": "3.4。 ICMPv4のエラーの処理"
    },
    {
      "indent": 3,
      "text": "In response to encapsulated packets it has sent into the tunnel, the encapsulator might receive ICMPv4 error messages from IPv4 routers inside the tunnel. These packets are addressed to the encapsulator because it is the IPv4 source of the encapsulated packet.",
      "ja": "それはトンネルに送信したカプセル化パケットに応答して、カプセル化は、トンネル内のIPv4ルータからICMPv4のエラーメッセージを受け取るかもしれません。それはカプセル化されたパケットのIPv4ソースであるため、これらのパケットをカプセル化に対処しています。"
    },
    {
      "indent": 3,
      "text": "ICMPv4 error handling is only applicable to dynamic MTU determination, even though the functions could be used with static MTU tunnels as well.",
      "ja": "ICMPv4のエラー処理は、機能は同様に静的MTUトンネルと共に使用することができるにもかかわらず、動的MTUの決意にのみ適用可能です。"
    },
    {
      "indent": 3,
      "text": "The ICMPv4 \"packet too big\" error messages are handled according to IPv4 Path MTU Discovery [RFC1191] and the resulting path MTU is recorded in the IPv4 layer. The recorded path MTU is used by IPv6 to determine if an ICMPv6 \"packet too big\" error has to be generated as described in Section 3.2.2.",
      "ja": "ICMPv4の「パケットが大きすぎる」というエラーメッセージは、IPv4パスMTU探索[RFC1191]とMTUは、IPv4層に記録されて得られた経路に従って処理されます。記録されたパスMTUは、ICMPv6の「パケットが大きすぎる」というエラーが3.2.2項で説明したように生成する必要があるかどうかを判断するためのIPv6で使用されています。"
    },
    {
      "indent": 3,
      "text": "The handling of other types of ICMPv4 error messages depends on how much information is available from the encapsulated packet that caused the error.",
      "ja": "ICMPv4のエラーメッセージの他のタイプの取り扱いは、エラーの原因となったカプセル化されたパケットから提供されていますどのくらいの情報に依存します。"
    },
    {
      "indent": 3,
      "text": "Many older IPv4 routers return only 8 bytes of data beyond the IPv4 header of the packet in error, which is not enough to include the address fields of the IPv6 header. More modern IPv4 routers are likely to return enough data beyond the IPv4 header to include the entire IPv6 header and possibly even the data beyond that. See [RFC1812].",
      "ja": "多くの古いIPv4のルータは、IPv6ヘッダのアドレスフィールドを含むのに十分でないエラーでパケットのIPv4ヘッダを越えてデータのわずか8バイトを返します。より近代的なIPv4ルーターは全体のIPv6ヘッダとそれを超え可能性もデータが含まれるように、IPv4ヘッダーを超えて十分なデータを返す可能性があります。 [RFC1812]を参照してください。"
    },
    {
      "indent": 3,
      "text": "If sufficient data bytes from the offending packet are available, the encapsulator MAY extract the encapsulated IPv6 packet and use it to generate an ICMPv6 message directed back to the originating IPv6 node, as shown below:",
      "ja": "違反パケットから十分なデータバイトが利用可能である場合、カプセル化は、カプセル化されたIPv6パケットを抽出してもよいし、以下に示すように、バック発信元IPv6ノードに向けICMPv6メッセージを生成するためにそれを使用します："
    },
    {
      "indent": 17,
      "text": "        +--------------+\n        | IPv4 Header  |\n        | dst = encaps |\n        |       node   |\n        +--------------+\n        |    ICMPv4    |\n        |    Header    |\n - -    +--------------+\n        | IPv4 Header  |\n        | src = encaps |\nIPv4    |       node   |\n        +--------------+   - -\nPacket  |    IPv6      |\n        |    Header    |   Original IPv6\n in     +--------------+   Packet -\n        |  Transport   |   Can be used to\nError   |    Header    |   generate an\n        +--------------+   ICMPv6\n        |              |   error message\n        ~     Data     ~   back to the source.\n        |              |\n - -    +--------------+   - -",
      "raw": true
    },
    {
      "indent": 13,
      "text": "ICMPv4 Error Message Returned to Encapsulating Node",
      "ja": "カプセル化ノードに返さICMPv4のエラーメッセージ"
    },
    {
      "indent": 3,
      "text": "When receiving ICMPv4 errors as above and the errors are not \"packet too big\", it would be useful to log the error as an error related to the tunnel. Also, if sufficient headers are available, then the originating node MAY send an ICMPv6 error of type \"unreachable\" with code \"address unreachable\" to the IPv6 source. (The \"address unreachable\" code is appropriate since, from the perspective of IPv6, the tunnel is a link and that code is used for link-specific errors [RFC2463]).",
      "ja": "上記のようにICMPv4のエラーを受信し、エラーがない場合、「大きすぎるパケット」、トンネルに関連したエラーなどのエラーをログに記録することが有用であろう。十分ヘッダが利用可能である場合も、その後、発信元ノードは、IPv6ソースにコード「アドレス到達不能」と「到達不能」タイプのICMPv6エラーを送信することができます。 （IPv6の観点から、トンネルリンクであり、そのコードは、リンク固有のエラーのために使用され、以降「アドレス到達不能」コードが適切である[RFC2463]）。"
    },
    {
      "indent": 3,
      "text": "Note that when the IPv4 path MTU is exceeded, and sufficient bytes of payload associated with the ICMPv4 errors are not available, or ICMPv4 errors do not cause the generation of ICMPv6 errors in case there is enough payload, there will be at least two packet drops instead of at least one (the case of a single layer of MTU discovery). Consider a case where an IPv6 host is connected to an IPv4/IPv6 router, which is connected to a network where an ICMPv4 error about too big packet size is generated. First, the router needs to learn the tunnel (IPv4) MTU that causes at least one packet loss, and then the host needs to learn the (IPv6) MTU from the router that causes at least one packet loss. Still, in all cases there can be more than one packet loss if there are multiple large packets in flight at the same time.",
      "ja": "IPv4の経路MTUを超え、およびICMPv4のエラーに関連付けられたペイロードの十分なバイトが利用可能でない、またはICMPv4の誤差が十分にペイロードがある場合に、ICMPv6のエラーの発生を引き起こさない、少なくとも2つのパケット滴が存在するであろうしたときことに注意してください代わりに、少なくとも一つの（MTU探索の単層の場合）の。 IPv6ホストが大きすぎるパケットサイズについてのICMPv4エラーが生成され、ネットワークに接続されたIPv4 / IPv6ルータに接続されている場合を考えてみましょう。まず、ルータは少なくとも1つのパケットの損失を引き起こすトンネル（IPv4）のMTUを学習する必要があり、その後ホストは、少なくとも1つのパケットの損失を引き起こすルータから（IPv6）のMTUを学習する必要があります。飛行中の複数の大きなパケットが同時に存在する場合でも、すべてのケースでは、複数のパケット損失があることができます。"
    },
    {
      "indent": 0,
      "text": "3.5. IPv4 Header Construction",
      "section_title": true,
      "ja": "3.5。 IPv4のヘッダ建設"
    },
    {
      "indent": 3,
      "text": "When encapsulating an IPv6 packet in an IPv4 datagram, the IPv4 header fields are set as follows:",
      "ja": "IPv4データグラムでIPv6パケットをカプセル化する場合、以下のように、IPv4ヘッダフィールドは設定されます。"
    },
    {
      "indent": 6,
      "text": "Version:",
      "ja": "版："
    },
    {
      "indent": 9,
      "text": "4",
      "ja": "４"
    },
    {
      "indent": 6,
      "text": "IP Header Length in 32-bit words:",
      "ja": "32ビット・ワードでIPヘッダ長："
    },
    {
      "indent": 9,
      "text": "5 (There are no IPv4 options in the encapsulating header.)",
      "ja": "5（カプセル化ヘッダにはIPv4オプションがありません。）"
    },
    {
      "indent": 6,
      "text": "Type of Service:",
      "ja": "サービスの種類："
    },
    {
      "indent": 9,
      "text": "0 unless otherwise specified. (See [RFC2983] and [RFC3168] Section 9.1 for issues relating to the Type-of-Service byte and tunneling.)",
      "ja": "特に指定のない限り0。 （[RFC2983]およびサービスタイプバイトとトンネリングに関連する問題については、[RFC3168]セクション9.1を参照してください。）"
    },
    {
      "indent": 6,
      "text": "Total Length:",
      "ja": "全長："
    },
    {
      "indent": 9,
      "text": "Payload length from IPv6 header plus length of IPv6 and IPv4 headers (i.e., IPv6 payload length plus a constant 60 bytes).",
      "ja": "IPv6とIPv4ヘッダ（即ち、IPv6のペイロード長を加えた定数60バイト）のIPv6ヘッダを加えた長さからペイロード長。"
    },
    {
      "indent": 6,
      "text": "Identification:",
      "ja": "識別："
    },
    {
      "indent": 9,
      "text": "Generated uniquely as for any IPv4 packet transmitted by the system.",
      "ja": "システムによって送信されたIPv4パケットの場合と同様に一意に生成されました。"
    },
    {
      "indent": 6,
      "text": "Flags:",
      "ja": "フラグ："
    },
    {
      "indent": 9,
      "text": "Set the Don't Fragment (DF) flag as specified in Section 3.2. Set the More Fragments (MF) bit as necessary if fragmenting.",
      "ja": "3.2節で指定されたフラグメント不可（DF）フラグを設定します。断片化する場合、必要に応じてそれ以上のフラグメント（MF）ビットを設定します。"
    },
    {
      "indent": 6,
      "text": "Fragment Offset:",
      "ja": "フラグメントオフセット："
    },
    {
      "indent": 9,
      "text": "Set as necessary if fragmenting.",
      "ja": "断片化するかのように必要に応じて設定します。"
    },
    {
      "indent": 6,
      "text": "Time to Live:",
      "ja": "有効期間："
    },
    {
      "indent": 9,
      "text": "Set in an implementation-specific manner, as described in Section 3.3.",
      "ja": "セクション3.3で説明したように、実装固有の方法で設定します。"
    },
    {
      "indent": 6,
      "text": "Protocol:",
      "ja": "プロトコル："
    },
    {
      "indent": 9,
      "text": "41 (Assigned payload type number for IPv6).",
      "ja": "41（IPv6のペイロードタイプ番号を割り当てられます）。"
    },
    {
      "indent": 6,
      "text": "Header Checksum:",
      "ja": "ヘッダチェックサム："
    },
    {
      "indent": 9,
      "text": "Calculate the checksum of the IPv4 header [RFC791].",
      "ja": "[RFC791] IPv4ヘッダのチェックサムを計算します。"
    },
    {
      "indent": 6,
      "text": "Source Address:",
      "ja": "送信元アドレス："
    },
    {
      "indent": 9,
      "text": "An IPv4 address of the encapsulator: either configured by the administrator or an address of the outgoing interface.",
      "ja": "カプセル化のIPv4アドレスは：いずれかの管理者または発信インターフェイスのアドレスにより構成される。"
    },
    {
      "indent": 6,
      "text": "Destination Address:",
      "ja": "宛先アドレス："
    },
    {
      "indent": 9,
      "text": "IPv4 address of the tunnel endpoint.",
      "ja": "トンネルエンドポイントのIPv4アドレス。"
    },
    {
      "indent": 3,
      "text": "When encapsulating the packets, the node must ensure that it will use the correct source address so that the packets are acceptable to the decapsulator as described in Section 3.6. Configuring the source address is appropriate particularly in cases in which automatic selection of source address may produce different results in a certain period of time. This is often the case with multiple addresses, and multiple interfaces, or when routes may change frequently. Therefore, it SHOULD be possible to administratively specify the source address of a tunnel.",
      "ja": "パケットをカプセル化するとき、ノードは、セクション3.6に記載されるようにパケットをカプセル開放装置に受け入れられるように、それが正しいソースアドレスを使用することを保証しなければなりません。送信元アドレスを設定すると、特にソースアドレスの自動選択は、一定期間内に異なる結果を生成することができるれる場合に適切です。これは多くの場合、複数のアドレス、および複数のインタフェース、または場合ルートが頻繁に変更することができる場合です。したがって、管理トンネルの送信元アドレスを指定することが可能であるべきです。"
    },
    {
      "indent": 0,
      "text": "3.6. Decapsulation",
      "section_title": true,
      "ja": "3.6。脱カプセル化"
    },
    {
      "indent": 3,
      "text": "When an IPv6/IPv4 host or a router receives an IPv4 datagram that is addressed to one of its own IPv4 addresses or a joined multicast group address, and the value of the protocol field is 41, the packet is potentially a tunnel packet and needs to be verified to belong to one of the configured tunnel interfaces (by checking source/destination addresses), reassembled (if fragmented at the IPv4 level), and have the IPv4 header removed and the resulting IPv6 datagram be submitted to the IPv6 layer code on the node.",
      "ja": "IPv6 / IPv4ホストまたはルータは、自身のIPv4アドレスの一つまたは参加マルチキャストグループアドレスにアドレス指定されたIPv4データグラムを受信し、プロトコルフィールドの値が41である場合、パケットは、潜在的に、トンネルパケットであるとする必要があります上のIPv6レイヤコードに提出する（IPv4のレベルでフラグメント化する場合）再組み立て、（ソース/宛先アドレスをチェックすることによって）構成されるトンネルインターフェイスのいずれかに属することが確認され、除去IPv4ヘッダと、得られたIPv6データグラムを持っていることノード。"
    },
    {
      "indent": 3,
      "text": "The decapsulator MUST verify that the tunnel source address is correct before further processing packets, to mitigate the problems with address spoofing (see Section 4). This check also applies to packets that are delivered to transport protocols on the decapsulator. This is done by verifying that the source address is the IPv4 address of the encapsulator, as configured on the decapsulator. Packets for which the IPv4 source address does not match MUST be discarded and an ICMP message SHOULD NOT be generated; however, if the implementation normally sends an ICMP message when receiving an unknown protocol packet, such an error message MAY be sent (e.g., ICMPv4 Protocol 41 Unreachable).",
      "ja": "カプセル開放装置は、アドレススプーフィング（セクション4を参照）の問題を緩和するために、トンネルの送信元アドレスが、さらなる処理のパケットの前に正しいことを確認しなければなりません。このチェックはまた、カプセル化を解く上でプロトコルを輸送するために配信されたパケットに適用されます。これは、カプセル開放装置上に設定され、送信元アドレスは、カプセル化のIPv4アドレスであることを検証することによって行われます。 IPv4ソースアドレスが一致しないためにパケットが破棄されなければならなくて、ICMPメッセージが生成されるべきではありません。未知のプロトコルのパケットを受信した場合、実装は、通常、ICMPメッセージを送信する場合は、そのようなエラーメッセージが（例えば、ICMPv4のプロトコル到達不能41）送られるかもしれません。"
    },
    {
      "indent": 3,
      "text": "A side effect of this address verification is that the node will silently discard packets with a wrong source address and packets that were received by the node but not directly addressed to it (e.g., broadcast addresses).",
      "ja": "このアドレス検証の副作用は、ノードが静かに間違った送信元アドレスとノードによって受信されるが、直接（例えば、ブロードキャストアドレス）にアドレス指定されなかったパケットを有するパケットを廃棄することです。"
    },
    {
      "indent": 3,
      "text": "Independent of any other forms of IPv4 ingress filtering the administrator of the node may have configured, the implementation MAY perform ingress filtering, i.e., check that the packet is arriving from the interface in the direction of the route toward the tunnel end-point, similar to a Strict Reverse Path Forwarding (RPF) check [RFC3704]. As this may cause problems on tunnels that are routed through multiple links, it is RECOMMENDED that this check, if done, is disabled by default. The packets caught by this check SHOULD be discarded; an ICMP message SHOULD NOT be generated by default.",
      "ja": "ノードの管理者フィルタリングのIPv4入力の任意の他の形式の独立実装が入力フィルタリングを実行することができる、構成されている場合があり、すなわち、パケットがトンネルエンドポイントに向かう経路の方向におけるインターフェースから到来していることを確認し、同様の厳格なリバースパス転送（RPF）に[RFC3704]をご確認ください。これは複数のリンクを介してルーティングされるトンネル上の問題を引き起こす可能性としては、このチェックは、行われた場合、デフォルトで無効にすることをお勧めします。このチェックでキャッチパケットが破棄されるべきです。 ICMPメッセージは、デフォルトで生成されるべきではありません。"
    },
    {
      "indent": 3,
      "text": "The decapsulator MUST be capable of having, on the tunnel interfaces, an IPv6 MRU of at least the maximum of 1500 bytes and the largest (IPv6) interface MTU on the decapsulator.",
      "ja": "カプセル開放装置は、トンネルインターフェイス、少なくとも1500バイトの最大値とカプセル開放装置上の最大（IPv6）のインタフェースMTUのIPv6のMRUに有することができなければなりません。"
    },
    {
      "indent": 3,
      "text": "The decapsulator MUST be capable of reassembling an IPv4 packet that is (after the reassembly) the maximum of 1500 bytes and the largest (IPv4) interface MTU on the decapsulator. The 1500-byte number is a result of encapsulators that use the static MTU scheme in Section 3.2.1, while encapsulators that use the dynamic scheme in Section 3.2.2 can cause up to the largest interface MTU on the decapsulator to be received. (Note that it is strictly the interface MTU on the last IPv4 router *before* the decapsulator that matters, but for most links the MTU is the same between all neighbors.)",
      "ja": "カプセル開放装置は、（再組立後）であるIPv4パケット1500バイトの最大値とカプセル開放装置上の最大（IPv4）のインタフェースMTUを再び組み立てることができなければなりません。 3.2.2動的スキームを使用するカプセル化装置が受信するカプセル開放装置上の最大インターフェイスMTUまで引き起こすことができるが1500バイトの数は、セクション3.2.1に静的MTUスキームを使用エンカプスレータの結果です。 （それは*前*厳密に重要なカプセル化を解く最後のIPv4ルータのインターフェイスMTUですが、ほとんどのリンクのMTUがすべてのネイバーの間で同じであることに注意してください。）"
    },
    {
      "indent": 3,
      "text": "This reassembly limit allows dynamic tunnel MTU determination by the encapsulator to take advantage of larger IPv4 path MTUs. An implementation MAY have a configuration knob that can be used to set a larger value of the tunnel reassembly buffers than the above number, but it MUST NOT be set below the above number.",
      "ja": "この再構成限界は、より大きなのIPv4経路MTUの利点を取るためにカプセル化することによって動的トンネルMTUの決意を可能にします。実装は、上記の数よりもトンネル再組み立てバッファの大きな値を設定するために使用することができる構成ノブを有していてもよく、それは上記の数以下に設定してはいけません。"
    },
    {
      "indent": 3,
      "text": "The decapsulation is shown below:",
      "ja": "カプセル化解除を以下に示します。"
    },
    {
      "indent": 12,
      "text": "+-------------+\n|    IPv4     |\n|   Header    |\n+-------------+                 +-------------+\n|    IPv6     |                 |    IPv6     |\n|   Header    |                 |   Header    |\n+-------------+                 +-------------+\n|  Transport  |                 |  Transport  |\n|   Layer     |      ===>       |   Layer     |\n|   Header    |                 |   Header    |\n+-------------+                 +-------------+\n|             |                 |             |\n~    Data     ~                 ~    Data     ~\n|             |                 |             |\n+-------------+                 +-------------+",
      "raw": true
    },
    {
      "indent": 20,
      "text": "Decapsulating IPv6 from IPv4",
      "ja": "IPv4からIPv6のデカプセル"
    },
    {
      "indent": 3,
      "text": "The decapsulator performs IPv4 reassembly before decapsulating the IPv6 packet.",
      "ja": "カプセル化を解くには、IPv6パケットをデカプセル化する前にIPv4の再構築を行います。"
    },
    {
      "indent": 3,
      "text": "When decapsulating the packet, the IPv6 header is not modified. (However, see [RFC2983] and [RFC3168] section 9.1 for issues relating to the Type of Service byte and tunneling.) If the packet is subsequently forwarded, its hop limit is decremented by one.",
      "ja": "パケットをデカプセル化するとき、IPv6ヘッダーは変更されません。パケットが続いて転送される場合（ただし、[RFC2983]とサービスバイトとトンネリングのタイプに関連する問題のために[RFC3168]セクション9.1を参照。）、そのホップ限界は1だけデクリメントされます。"
    },
    {
      "indent": 3,
      "text": "The encapsulating IPv4 header is discarded, and the resulting packet is checked for validity when submitted to the IPv6 layer. When reconstructing the IPv6 packet, the length MUST be determined from the IPv6 payload length since the IPv4 packet might be padded (thus have a length that is larger than the IPv6 packet plus the IPv4 header being removed).",
      "ja": "カプセル化IPv4ヘッダは廃棄され、およびIPv6層に提出したときに得られたパケットは、妥当性が検査されます。 IPv6パケットを再構成する場合、長さは、IPv4パケットがパディングされるかもしれないので（従って、IPv6パケットプラス除去されたIPv4ヘッダよりも大きい長さを有する）のIPv6ペイロード長から決定されなければなりません。"
    },
    {
      "indent": 3,
      "text": "After the decapsulation, the node MUST silently discard a packet with an invalid IPv6 source address. The list of invalid source addresses SHOULD include at least:",
      "ja": "デカプセル化後、ノードは静かに無効なIPv6ソースアドレスを持つパケットを破棄しなければなりません。無効な送信元アドレスのリストには、少なくとも含める必要があります。"
    },
    {
      "indent": 3,
      "text": "- all multicast addresses (FF00::/8)",
      "ja": " - すべてのマルチキャストアドレス（FF00 :: / 8）"
    },
    {
      "indent": 3,
      "text": "- the loopback address (::1)",
      "ja": " - ループバックアドレス（:: 1）"
    },
    {
      "indent": 3,
      "text": "- all the IPv4-compatible IPv6 addresses [RFC3513] (::/96), excluding the unspecified address for Duplicate Address Detection (::/128)",
      "ja": " - （/ 128 ::）重複アドレス検出のための未指定アドレスを除くすべてのIPv4互換IPv6アドレス[RFC3513]（:: / 96）、"
    },
    {
      "indent": 3,
      "text": "- all the IPv4-mapped IPv6 addresses (::ffff:0:0/96)",
      "ja": " - すべてのIPv4射影IPv6アドレス（:: FFFF：0：0/96）"
    },
    {
      "indent": 3,
      "text": "In addition, the node should be configured to perform ingress filtering [RFC2827][RFC3704] on the IPv6 source address, similar to on any of its interfaces, e.g.:",
      "ja": "加えて、ノードは、そのインターフェイスのいずれかでと同様のIPv6ソースアドレス、例えば上に侵入フィルタ[RFC2827]、[RFC3704]を実行するように構成されるべきです："
    },
    {
      "indent": 3,
      "text": "1) if the tunnel is toward the Internet, the node should be configured to check that the site's IPv6 prefixes are not used as the source addresses, or",
      "ja": "トンネルは、インターネットに向かっている場合1）、ノードは、サイトのIPv6プレフィックスは、送信元アドレスとして使用されていないことを確認するように構成された、またはされなければなりません"
    },
    {
      "indent": 3,
      "text": "2) if the tunnel is toward an edge network, the node should be configured to check that the source address belongs to that edge network.",
      "ja": "トンネルは、エッジネットワークに向かっている場合2）、ノードは送信元アドレスが、そのエッジネットワークに属していることを確認するように構成されるべきです。"
    },
    {
      "indent": 3,
      "text": "The prefix lists in the former typically need to be manually configured; the latter could be verified automatically, e.g., by using a strict unicast RPF check, as long as an interface can be designated to be toward an edge.",
      "ja": "前者ではプレフィクスリストは、一般的に手動で設定する必要があります。後者は、インタフェースが縁に向かってであると指定することができる限り、厳密なユニキャストRPFチェックを使用して、例えば、自動的に検証することができます。"
    },
    {
      "indent": 3,
      "text": "It is RECOMMENDED that the implementations provide a single knob to make it easier to for the administrators to enable strict ingress filtering toward edge networks.",
      "ja": "実装は、管理者がエッジネットワークに向けフィルタリング厳密な進入を可能にするために、それを容易にするために単一のノブを提供することが推奨されます。"
    },
    {
      "indent": 0,
      "text": "3.7. Link-Local Addresses",
      "section_title": true,
      "ja": "3.7。リンクローカルアドレス"
    },
    {
      "indent": 3,
      "text": "The configured tunnels are IPv6 interfaces (over the IPv4 \"link layer\") and thus MUST have link-local addresses. The link-local addresses are used by, e.g., routing protocols operating over the tunnels.",
      "ja": "構成されたトンネルは、（IPv4の「リンク層」上）のIPv6インタフェースであり、したがって、リンクローカルアドレスを持たなければなりません。リンクローカルアドレスは、例えば、ルーティングプロトコルは、トンネル上で動作によって使用されます。"
    },
    {
      "indent": 3,
      "text": "The interface identifier [RFC3513] for such an interface may be based on the 32-bit IPv4 address of an underlying interface, or formed using some other means, as long as it is unique from the other tunnel endpoint with a reasonably high probability.",
      "ja": "そのようなインターフェースのインターフェース識別子[RFC3513]は限り、それが合理的に高い確率で他のトンネルエンドポイントから一意であるように、基礎となるインタフェースの32ビットのIPv4アドレスに基づいて、またはいくつかの他の手段を用いて形成することができます。"
    },
    {
      "indent": 3,
      "text": "Note that it may be desirable to form the link-local address in a fashion that minimizes the probability and the effect of having to renumber the link-local address in the event of a topology or hardware change.",
      "ja": "確率とトポロジー又はハードウェアの変更のイベントにリンクローカルアドレスを再番号付けすることの影響を最小限に抑える方法でリンクローカルアドレスを形成することが望ましい場合があることに留意されたいです。"
    },
    {
      "indent": 3,
      "text": "If an IPv4 address is used for forming the IPv6 link-local address, the interface identifier is the IPv4 address, prepended by zeros. Note that the \"Universal/Local\" bit is zero, indicating that the interface identifier is not globally unique. The link-local address is formed by appending the interface identifier to the prefix FE80::/64.",
      "ja": "IPv4アドレスは、IPv6リンクローカルアドレスを形成するために使用される場合、インタフェース識別子は、ゼロによって付加IPv4アドレスです。 「ユニバーサル/ローカル」ビットは、インターフェース識別子はグローバルに一意でないことを示し、ゼロであることに留意されたいです。リンクローカルアドレスは、プレフィックスFE80 :: / 64とのインタフェース識別子を付加することにより形成されています。"
    },
    {
      "indent": 3,
      "text": "When the host has more than one IPv4 address in use on the physical interface concerned, a choice of one of these IPv4 addresses is made by the administrator or the implementation when forming the link-local address.",
      "ja": "ホストが関係する物理インターフェイス上で使用されている複数のIPv4アドレスを持っている場合は、これらのIPv4アドレスのいずれかの選択は、管理者またはリンクローカルアドレスを形成する実装によって行われます。"
    },
    {
      "indent": 6,
      "text": "+-------+-------+-------+-------+-------+-------+------+------+\n|  FE      80      00      00      00      00      00     00  |\n+-------+-------+-------+-------+-------+-------+------+------+\n|  00      00      00      00   |        IPv4 Address         |\n+-------+-------+-------+-------+-------+-------+------+------+",
      "raw": true
    },
    {
      "indent": 0,
      "text": "3.8. Neighbor Discovery over Tunnels",
      "section_title": true,
      "ja": "3.8。トンネルで近隣探索"
    },
    {
      "indent": 3,
      "text": "Configured tunnel implementations MUST at least accept and respond to the probe packets used by Neighbor Unreachability Detection (NUD) [RFC2461]. The implementations SHOULD also send NUD probe packets to detect when the configured tunnel fails at which point the implementation can use an alternate path to reach the destination. Note that Neighbor Discovery allows that the sending of NUD probes be omitted for router-to-router links if the routing protocol tracks bidirectional reachability.",
      "ja": "設定されたトンネルの実装は、少なくとも受け入れ、近隣到達不能検出（NUD）[RFC2461]で使用されるプローブパケットに応答しなければなりません。実装はまた、設定されたトンネルは、実装が宛先に到達するために代替パスを使用することができ、その時点で失敗したときに検出するNUDプローブパケットを送信すべきです。ディスカバリーは、ルーティングプロトコルが双方向到達可能性を追跡する場合NUDプローブの送信ルーターリンクのために省略されることができ、その近隣に留意されたいです。"
    },
    {
      "indent": 3,
      "text": "For the purposes of Neighbor Discovery, the configured tunnels specified in this document are assumed to NOT have a link-layer address, even though the link-layer (IPv4) does have an address. This means that:",
      "ja": "近隣探索の目的のために、この文書で指定された設定されたトンネルは、リンク層（のIPv4）アドレスを持っているにもかかわらず、リンク層アドレスを有しないことが想定されます。この意味は："
    },
    {
      "indent": 3,
      "text": "- the sender of Neighbor Discovery packets SHOULD NOT include Source Link Layer Address options or Target Link Layer Address options on the tunnel link.",
      "ja": " - 近隣探索パケットの送信者は、ソースリンク層アドレスオプションやトンネルリンク上のターゲットリンク層アドレスオプションを含めるべきではありません。"
    },
    {
      "indent": 3,
      "text": "- the receiver MUST, while otherwise processing the Neighbor Discovery packet, silently ignore the content of any Source Link Layer Address options or Target Link Layer Address options received on the tunnel link.",
      "ja": " - そうでなければ近隣探索パケットを処理している間、受信機は、サイレントトンネルリンク上で受信された任意のソースリンク層アドレス・オプションや目標リンク層アドレス・オプションの内容を無視しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Not using link-layer address options is consistent with how Neighbor Discovery is used on other point-to-point links.",
      "ja": "リンク層アドレスオプションを使用しないと、近隣探索が他のポイントツーポイントリンク上で使用されている方法と一致しています。"
    },
    {
      "indent": 0,
      "text": "4. Threat Related to Source Address Spoofing",
      "section_title": true,
      "ja": "4.脅威ソースアドレススプーフィングに関連します"
    },
    {
      "indent": 3,
      "text": "The specification above contains rules that apply tunnel source address verification in particular and ingress filtering [RFC2827][RFC3704] in general to packets before they are decapsulated. When IP-in-IP tunneling (independent of IP versions) is used, it is important that this not be used to bypass any ingress filtering in use for non-tunneled packets. Thus, the rules in this document are derived based on should ingress filtering be used for IPv4 and IPv6, the use of tunneling should not provide an easy way to circumvent the filtering.",
      "ja": "上記の明細書は、それらがデカプセル化される前にパケットに一般的に特定し、侵入フィルタ[RFC2827]、[RFC3704]にトンネル元アドレスの検証を適用するルールを含んでいます。 IPインIPトンネル（IPバージョンとは無関係に）を使用する場合、非トンネルパケットで使用されている任意のイングレスフィルタリングをバイパスするために使用されないことが重要です。したがって、この文書に記載されているルールは、フィルタリングは、IPv4とIPv6のために使用することが進入すべきであるに基づいて導出され、トンネルの使用は、フィルタリングを回避する簡単な方法を提供してはなりません。"
    },
    {
      "indent": 3,
      "text": "In this case, without specific ingress filtering checks in the decapsulator, it would be possible for an attacker to inject a packet with:",
      "ja": "と、攻撃者がパケットを注入するため、この場合には、カプセル開放装置の特定のイングレスフィルタリングをチェックすることなく、それが可能であろう。"
    },
    {
      "indent": 3,
      "text": "- Outer IPv4 source: real IPv4 address of attacker",
      "ja": " - 外側のIPv4ソース：攻撃者の実際のIPv4アドレス"
    },
    {
      "indent": 3,
      "text": "- Outer IPv4 destination: IPv4 address of decapsulator",
      "ja": " - 外側のIPv4宛先：カプセル化を解くのIPv4アドレス"
    },
    {
      "indent": 3,
      "text": "- Inner IPv6 source: Alice, which is either the decapsulator or a node close to it",
      "ja": " - インナーIPv6ソース：アリス、カプセル開放装置又はそれに近いノードのいずれかであります"
    },
    {
      "indent": 3,
      "text": "- Inner IPv6 destination: Bob",
      "ja": " - インナーIPv6宛先：ボブ"
    },
    {
      "indent": 3,
      "text": "Even if all IPv4 routers between the attacker and the decapsulator implement IPv4 ingress filtering, and all IPv6 routers between the decapsulator and Bob implement IPv6 ingress filtering, the above spoofed packets will not be filtered out. As a result, Bob will receive a packet that looks like it was sent from Alice even though the sender was some unrelated node.",
      "ja": "攻撃者とカプセル開放装置との間のすべてのIPv4ルータは、IPv4イングレスフィルタリングを実装し、そしてカプセル開放装置とボブの間のすべてのIPv6ルータは、IPv6イングレスフィルタリングを実装する場合であっても、上記のスプーフィングされたパケットは除外されません。その結果、ボブは、それが送信者がいくつかの無関係なノードだったにもかかわらず、アリスから送られたように見えるパケットを受信します。"
    },
    {
      "indent": 3,
      "text": "The solution to this is to have the decapsulator accept only encapsulated packets from the explicitly configured source address (i.e., the other end of the tunnel) as specified in Section 3.6. While this does not provide complete protection in the case ingress filtering has not been deployed, it does provide a significant increase in security. The issue and the remainder threats are discussed at more length in Security Considerations.",
      "ja": "これに対する解決策は、カプセル開放装置が明示的に設定されたソースアドレスからのみカプセル化されたパケットを受け入れる有することである（すなわち、トンネルの他端）セクション3.6で指定されるように。これが展開されていない場合のイングレス・フィルタリングで完全な保護を提供していませんが、それはセキュリティの有意な増加を提供しません。問題と残りの脅威は、セキュリティの考慮事項でより詳細に論じています。"
    },
    {
      "indent": 0,
      "text": "5. Security Considerations",
      "section_title": true,
      "ja": "5.セキュリティについての考慮事項"
    },
    {
      "indent": 3,
      "text": "Generic security considerations of using IPv6 are discussed in a separate document [V6SEC].",
      "ja": "IPv6を使用する一般的なセキュリティ問題は、別の文書[V6SEC]に記載されています。"
    },
    {
      "indent": 3,
      "text": "An implementation of tunneling needs to be aware that although a tunnel is a link (as defined in [RFC2460]), the threat model for a tunnel might be rather different than for other links, since the tunnel potentially includes all of the Internet.",
      "ja": "トンネリングの実装は、トンネルがリンク（[RFC2460]で定義されるように）であるが、トンネルが潜在的にインターネットのすべてを含むので、トンネルの脅威モデルは、他のリンクよりもかなり異なるかもしれないことに注意する必要があります。"
    },
    {
      "indent": 3,
      "text": "Several mechanisms (e.g., Neighbor Discovery) depend on Hop Count being 255 and/or the addresses being link local for ensuring that a packet originated on-link, in a semi-trusted environment. Tunnels are more vulnerable to a breach of this assumption than physical links, as an attacker anywhere in the Internet can send an IPv6-in-IPv4 packet to the tunnel decapsulator, causing injection of an encapsulted IPv6 packet to the configured tunnel interface unless the decapsulation checks are able to discard packets injected in such a manner.",
      "ja": "いくつかの機構（例えば、近隣探索）がホップに依存し255であり、かつ/またはアドレスは、パケットが半信頼できる環境では、上リンク発信ことを保証するローカルリンクであるカウント。どこでもインターネットで攻撃者はデカプセル化しない限り、構成されたトンネルインターフェースにencapsulted IPv6パケットの注入を引き起こし、トンネルカプセル開放装置へのIPv6型のIPv4パケットを送信することができるようにトンネルは、物理リンクよりも、この仮定の違反に対してより脆弱ですチェックは、このように注入されたパケットを廃棄することができます。"
    },
    {
      "indent": 3,
      "text": "Therefore, this memo specifies that the decapsulators make these steps (as described in Section 3.6) to mitigate this threat:",
      "ja": "したがって、このメモは（セクション3.6で説明したように）decapsulatorsは、この脅威を緩和するためにこれらのステップを行うことを指定します。"
    },
    {
      "indent": 3,
      "text": "- IPv4 source address of the packet MUST be the same as configured for the tunnel end-point;",
      "ja": " - トンネルのエンドポイント用に構成され、パケットのIPv4ソースアドレスが同じでなければなりません。"
    },
    {
      "indent": 3,
      "text": "- Independent of any IPv4 ingress filtering the administrator may have configured, the implementation MAY perform IPv4 ingress filtering to check that the IPv4 packets are received from an expected interface (but as this may cause some problems, it may be disabled by default);",
      "ja": " - 管理者をフィルタリング任意のIPv4イングレスの独立を構成していることがあり、実装がIPv4パケットを予測したインターフェース（これはいくつかの問題を引き起こす可能性としてではなく、それはデフォルトで無効にすることができる）から受信されていることを確認するためのIPv4イングレスフィルタリングを実行するかもしれ。"
    },
    {
      "indent": 3,
      "text": "- IPv6 packets with several, obviously invalid IPv6 source addresses received from the tunnel MUST be discarded (see Section 3.6 for details); and",
      "ja": " - トンネルから受信したいくつかの、明らかに無効なIPv6ソースアドレスを持つIPv6パケットは、（詳細はセクション3.6を参照）を破棄しなければなりません。そして"
    },
    {
      "indent": 3,
      "text": "- IPv6 ingress filtering should be performed (typically requiring configuration from the operator), to check that the tunneled IPv6 packets are received from an expected interface.",
      "ja": " -  IPv6のイングレスフィルタリングは、トンネルIPv6パケットが期待インターフェースから受信されていることを確認するために、（典型的には、オペレータからの設定を必要とする）が行われるべきです。"
    },
    {
      "indent": 3,
      "text": "Especially the first verification is vital: to avoid this check, the attacker must be able to know the source of the tunnel (ranging from difficult to predictable) and be able to spoof it (easier).",
      "ja": "特に、最初の検証が不可欠である：このチェックを回避するために、攻撃者は（簡単に）（困難から予測可能な範囲）トンネルのソースを知ることができるし、それを偽装することができなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the remainder threats of tunnel source verification are considered to be significant, a tunneling scheme with authentication should be used instead, e.g., IPsec [RFC2401] (preferable) or Generic Routing Encapsulation with a pre-configured secret key [RFC2890]. As the configured tunnels are set up more or less manually, setting up the keying material is probably not a problem. However, setting up secure IPsec IPv6-in-IPv4 tunnels is described in another document [V64IPSEC].",
      "ja": "トンネルの送信元検証の残りの脅威が重要であると考えられる場合には、認証とトンネリング方式が代わりに使用されるべきで、例えば、事前に設定秘密鍵[RFC2890]と（好ましい）または総称ルーティングカプセル化のIPsec [RFC2401]。設定トンネルは、キーイング材料を設定、多かれ少なかれ、手動で設定されているので、おそらく問題ではありません。しかし、安全なIPsecのIPv6の型のIPv4トンネルを設定すると、別の文書[V64IPSEC]に記載されています。"
    },
    {
      "indent": 3,
      "text": "If the tunneling is done inside an administrative domain, proper ingress filtering at the edge of the domain can also eliminate the threat from outside of the domain. Therefore, shorter tunnels are preferable to longer ones, possibly spanning the whole Internet.",
      "ja": "トンネリングは、管理ドメインの内部で行われる場合、ドメインのエッジでフィルタリング適切な入力は、ドメインの外部からの脅威を排除することができます。そのため、短いトンネルは、おそらくインターネット全体にまたがる、長いものに好適です。"
    },
    {
      "indent": 3,
      "text": "In addition, an implementation MUST treat interfaces to different links as separate, e.g., to ensure that Neighbor Discovery packets arriving on one link do not affect other links. This is especially important for tunnel links.",
      "ja": "また、実装は一つのリンクに到着その近隣探索パケットを他のリンクには影響を与えないように、例えば、別個のものとして異なるリンクへのインターフェースを扱わなければなりません。これは、トンネルのリンクのために特に重要です。"
    },
    {
      "indent": 3,
      "text": "When dropping packets due to failing to match the allowed IPv4 source addresses for a tunnel the node should not \"acknowledge\" the existence of a tunnel, otherwise this could be used to probe the acceptable tunnel endpoint addresses. For that reason, the specification says that such packets MUST be discarded, and an ICMP error message SHOULD NOT be generated, unless the implementation normally sends ICMP destination unreachable messages for unknown protocols; in such a case, the same code MAY be sent. As should be obvious, not returning the same ICMP code if an error is returned for other protocols may hint that the IPv6 stack (or the protocol 41 tunneling processing) has been enabled -- the behaviour should be consistent on how the implementation otherwise behaves to be transparent to probing.",
      "ja": "、ノードがトンネルの存在を「認める」べきではないトンネルに許可IPv4ソースアドレスと一致するように失敗によるパケットをドロップするとき、さもなければ、これは許容されるトンネルエンドポイントアドレスをプローブするために使用することができます。そのため、仕様では、実装は、通常、未知のプロトコルのためのICMP宛先到達不能メッセージを送信しない限り、このようなパケットを捨てなければなりませんし、ICMPエラーメッセージが生成されるべきではないと述べています。このような場合には、同じコードが送信されるかもしれません。明白であるべきで、エラーがIPv6スタック（またはプロトコル41トンネル処理）が有効になっていることを暗示してもよい他のプロトコルのために返された場合、同じICMPコードを返さない - 現象は、に実装がそうでなければ動作方法に一貫しているべきですプロービングに対して透明で。"
    },
    {
      "indent": 0,
      "text": "6. Acknowledgements",
      "section_title": true,
      "ja": "6.謝辞"
    },
    {
      "indent": 3,
      "text": "We would like to thank the members of the IPv6 working group, the Next Generation Transition (ngtrans) working group, and the v6ops working group for their many contributions and extensive review of this document. Special thanks are due to (in alphabetical order) Jim Bound, Ross Callon, Tim Chown, Alex Conta, Bob Hinden, Bill Manning, John Moy, Mohan Parthasarathy, Chirayu Patel, Pekka Savola, and Fred Templin for many helpful suggestions. Pekka Savola helped in editing the final revisions of the specification.",
      "ja": "私たちは、彼らの多くの貢献と、この文書の大規模な見直しのためのIPv6ワーキンググループのメンバー、次世代移行（NGTRANS）ワーキンググループ、およびv6opsワーキンググループに感謝したいと思います。特別な感謝は、多くの有用な提案をバウンド（アルファベット順）ジム、ロスCallon、ティムのchown、アレックスコンタ、ボブHindenとビル・マニング、ジョン・モイ、モハンパルタサラティ、Chirayuパテル、ペッカSavola、およびフレッド・テンプリンに起因するものです。ペッカSavolaは、仕様の最終リビジョンを編集するに助けました。"
    },
    {
      "indent": 0,
      "text": "7. References",
      "section_title": true,
      "ja": "7.参考"
    },
    {
      "indent": 0,
      "text": "7.1. Normative References",
      "section_title": true,
      "ja": "7.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC791] Postel, J., \"Internet Protocol\", STD 5, RFC 791, September 1981.",
      "ja": "[RFC791]ポステル、J.、 \"インターネットプロトコル\"、STD 5、RFC 791、1981年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC1191] Mogul, J. and S. Deering, \"Path MTU discovery\", RFC 1191, November 1990.",
      "ja": "[RFC1191]ムガール人、J.とS.デアリング、 \"パスMTUディスカバリ\"、RFC 1191、1990年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC1981] McCann, J., Deering, S., and J. Mogul, \"Path MTU Discovery for IP version 6\", RFC 1981, August 1996.",
      "ja": "[RFC1981]マッキャン、J.、デアリング、S.、およびJ.ムガール人、RFC 1981、1996年8月 \"IPバージョン6のパスMTUディスカバリー\"。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC2460] Deering, S. and R. Hinden, \"Internet Protocol, Version 6 (IPv6) Specification\", RFC 2460, December 1998.",
      "ja": "[RFC2460]デアリング、S.とR. Hindenと、 \"インターネットプロトコルバージョン6（IPv6）の仕様\"、RFC 2460、1998年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC2463] Conta, A. and S. Deering, \"Internet Control Message Protocol (ICMPv6) for the Internet Protocol Version 6 (IPv6) Specification\", RFC 2463, December 1998.",
      "ja": "[RFC2463]コンタ、A.、およびS.デアリング、 \"インターネットプロトコルバージョン6（IPv6）仕様のためのインターネット制御メッセージプロトコル（ICMPv6の）\"、RFC 2463（1998年12月）。"
    },
    {
      "indent": 0,
      "text": "7.2. Informative References",
      "section_title": true,
      "ja": "7.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[ASSIGNED] IANA, \"Assigned numbers online database\", http://www.iana.org/numbers.html",
      "ja": "[ASSIGNED] IANA、http://www.iana.org/numbers.html \"数字オンラインデータベースの割り当て\""
    },
    {
      "indent": 3,
      "text": "[DNSOPV6] Durand, A., Ihren, J., and Savola P., \"Operational Considerations and Issues with IPv6 DNS\", Work in Progress, October 2004.",
      "ja": "[DNSOPV6]デュラン、A.、Ihren、J.、およびSavola P.、 \"IPv6のDNSで運用考慮事項と課題\"、進歩、2004年10月に作業。"
    },
    {
      "indent": 3,
      "text": "[KM97] Kent, C., and J. Mogul, \"Fragmentation Considered Harmful\". In Proc. SIGCOMM '87 Workshop on Frontiers in Computer Communications Technology. August 1987.",
      "ja": "[KM97]ケント、C.、およびJ.モーグル、 \"有害であると考えられた断片化\"。 PROCで。コンピュータ通信技術のフロンティアSIGCOMM '87ワークショップ。 1987年8月。"
    },
    {
      "indent": 3,
      "text": "[V6SEC] Savola, P., \"IPv6 Transition/Co-existence Security Considerations\", Work in Progress, October 2004.",
      "ja": "[V6SEC] Savola、P.、 \"IPv6移行/共存のセキュリティの考慮事項\"、進歩、2004年10月に作業。"
    },
    {
      "indent": 3,
      "text": "[V64IPSEC] Graveman, R., et al., \"Using IPsec to Secure IPv6-over-IPv4 Tunnels\", Work in Progress, December 2004.",
      "ja": "[V64IPSEC] Graveman、R.、ら、進歩、2004年12月に仕事の \"IPv6オーバーIPv4トンネルを保護するためにIPsecを使用しました\"。"
    },
    {
      "indent": 3,
      "text": "[RFC1435] Knowles, S., \"IESG Advice from Experience with Path MTU Discovery\", RFC 1435, March 1993.",
      "ja": "[RFC1435]ノウルズ、S.、 \"パスMTUディスカバリの経験からIESGアドバイス\"、RFC 1435、1993年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC1812] Baker, F., \"Requirements for IP Version 4 Routers\", RFC 1812, June 1995.",
      "ja": "[RFC1812]ベイカー、F.、RFC 1812、1995年6月 \"IPバージョン4つのルータのための要件\"。"
    },
    {
      "indent": 3,
      "text": "[RFC2401] Kent, S. and R. Atkinson, \"Security Architecture for the Internet Protocol\", RFC 2401, November 1998.",
      "ja": "[RFC2401]ケント、S.とR.アトキンソン、 \"インターネットプロトコルのためのセキュリティー体系\"、RFC 2401、1998年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC2461] Narten, T., Nordmark, E., and W. Simpson, \"Neighbor Discovery for IP Version 6 (IPv6)\", RFC 2461, December 1998.",
      "ja": "[RFC2461] Narten氏、T.、Nordmarkと、E.、およびW.シンプソン、 \"IPバージョン6のための近隣探索（IPv6）の\"、RFC 2461、1998年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC2462] Thomson, S. and T. Narten, \"IPv6 Stateless Address Autoconfiguration\", RFC 2462, December 1998.",
      "ja": "[RFC2462]トムソン、S.とT. Narten氏、 \"IPv6のステートレスアドレス自動設定\"、RFC 2462、1998年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC2827] Ferguson, P. and D. Senie, \"Network Ingress Filtering: Defeating Denial of Service Attacks which employ IP Source Address Spoofing\", BCP 38, RFC 2827, May 2000.",
      "ja": "[RFC2827]ファーガソン、P.およびD. Senie、 \"ネットワーク入力フィルタリング：IP Source Address Spoofingを使うサービス攻撃の敗北拒否\"、BCP 38、RFC 2827、2000年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC2890] Dommety, G., \"Key and Sequence Number Extensions to GRE\", RFC 2890, September 2000.",
      "ja": "[RFC2890] Dommety、G.、 \"GREのキーと一連番号拡大\"、RFC 2890、2000年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC2923] Lahey, K., \"TCP Problems with Path MTU Discovery\", RFC 2923, September 2000.",
      "ja": "[RFC2923]レイヒー、K.、 \"パスMTUディスカバリとTCPの問題\"、RFC 2923、2000年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC2983] Black, D., \"Differentiated Services and Tunnels\", RFC 2983, October 2000.",
      "ja": "[RFC2983]ブラック、D.、 \"差別化サービスおよびトンネル\"、RFC 2983、2000年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC3056] Carpenter, B. and K. Moore, \"Connection of IPv6 Domains via IPv4 Clouds\", RFC 3056, February 2001.",
      "ja": "[RFC3056]カーペンター、B.およびK.ムーア、RFC 3056、2001年2月 \"のIPv4クラウドを介したIPv6ドメインの接続\"。"
    },
    {
      "indent": 3,
      "text": "[RFC3168] Ramakrishnan, K., Floyd, S., and D. Black, \"The Addition of Explicit Congestion Notification (ECN) to IP\", RFC 3168, September 2001.",
      "ja": "\"IPに明示的輻輳通知の添加（ECN）\" [RFC3168]ラマクリシュナン、K.、フロイド、S.、およびD.ブラック、RFC 3168、2001年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC3232] Reynolds, J., \"Assigned Numbers: RFC 1700 is Replaced by an On-line Database\", RFC 3232, January 2002.",
      "ja": "[RFC3232]レイノルズ、J.、 \"番号が割り当てられ：RFC 1700は、オンラインデータベースで置き換えられる\"、RFC 3232、2002年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC3484] Draves, R., \"Default Address Selection for Internet Protocol version 6 (IPv6)\", RFC 3484, February 2003.",
      "ja": "[RFC3484] Draves、R.、RFC 3484 \"インターネットプロトコルバージョン6（IPv6）のデフォルトのアドレス選択\"、2003年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC3493] Gilligan, R., Thomson, S., Bound, J., McCann, J., and W. Stevens, \"Basic Socket Interface Extensions for IPv6\", RFC 3493, February 2003.",
      "ja": "[RFC3493]ギリガン、R.、トムソン、S.、バウンド、J.、マッキャン、J.、およびW.スティーブンス、 \"IPv6の基本的なソケットインタフェース拡張\"、RFC 3493、2003年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC3513] Hinden, R. and S. Deering, \"Internet Protocol Version 6 (IPv6) Addressing Architecture\", RFC 3513, April 2003.",
      "ja": "[RFC3513] HindenとR.とS.デアリング、 \"インターネットプロトコルバージョン6（IPv6）のアドレス指定アーキテクチャ\"、RFC 3513、2003年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC3596] Thomson, S., Huitema, C., Ksinant, V., and M. Souissi, \"DNS Extensions to Support IP Version 6\", RFC 3596, October 2003.",
      "ja": "[RFC3596]トムソン、S.、のHuitema、C.、Ksinant、V.、およびM. Souissi、RFC 3596、2003年10月 \"DNSの拡張機能は、IPバージョン6をサポートします\"。"
    },
    {
      "indent": 3,
      "text": "[RFC3704] Baker, F. and P. Savola, \"Ingress Filtering for Multihomed Networks\", BCP 84, RFC 3704, March 2004.",
      "ja": "[RFC3704]ベイカー、F.およびP. Savola、 \"マルチホームネットワークの入力フィルタリング\"、BCP 84、RFC 3704、2004年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC4087] Thaler, D., \"IP Tunnel MIB\", RFC 4087, June 2005.",
      "ja": "[RFC4087]ターラー、D.、 \"IPトンネルMIB\"、RFC 4087、2005年6月。"
    },
    {
      "indent": 1,
      "text": "8. Changes from",
      "section_title": true,
      "ja": "8.変更から"
    },
    {
      "indent": 3,
      "text": "The motivation for the bulk of these changes are to simplify the document to only contain the mechanisms of wide-spread use.",
      "ja": "これらの変化の大部分のための動機は唯一の広範な使用のメカニズムを含むように文書を簡素化することです。"
    },
    {
      "indent": 3,
      "text": "RFC 2893 contains a mechanism called automatic tunneling. But a much more general mechanism is specified in RFC 3056 [RFC3056] which gives each node with a (global) IPv4 address a /48 IPv6 prefix i.e., enough for a whole site.",
      "ja": "RFC 2893は、自動トンネリングと呼ばれるメカニズムが含まれています。しかし、より多くの一般的な機構は、全サイトのための十分/ 48のIPv6プレフィックス、すなわちは、（グローバル）IPv4の各ノードを与えRFC 3056 [RFC3056]にアドレス指定されています。"
    },
    {
      "indent": 3,
      "text": "The following changes have been performed since RFC 2893:",
      "ja": "次の変更は、RFC 2893以来行われてきました。"
    },
    {
      "indent": 3,
      "text": "- Removed references to A6 and retained AAAA.",
      "ja": " -  A6への参照を削除し、AAAAを保持しました。"
    },
    {
      "indent": 3,
      "text": "- Removed automatic tunneling and use of IPv4-compatible addresses.",
      "ja": " -  IPv4互換アドレスの自動トンネリングと使用を削除しました。"
    },
    {
      "indent": 3,
      "text": "- Removed default Configured Tunnel using IPv4 \"Anycast Address\"",
      "ja": " - 削除され、デフォルト設定されたトンネルはIPv4を使用して、「エニーキャストアドレス」"
    },
    {
      "indent": 3,
      "text": "- Removed Source Address Selection section since this is now covered by another document ([RFC3484]).",
      "ja": " - この以降に削除ソースアドレス選択セクションは、現在、別の文書（[RFC3484]）で覆われています。"
    },
    {
      "indent": 3,
      "text": "- Removed brief mention of 6over4.",
      "ja": " -  6over4はの簡単な言及を削除しました。"
    },
    {
      "indent": 3,
      "text": "- Split into normative and non-normative references and other reference cleanup.",
      "ja": " - 規範と非引用規格および他の参照のクリーンアップに分割。"
    },
    {
      "indent": 3,
      "text": "- Dropped \"or equal\" in if (IPv4 path MTU - 20) is less than or equal to 1280.",
      "ja": " - ドロップ「または等しい」（IPv4の経路MTU  -  20）場合よりも少ない又は1280に等しいです。"
    },
    {
      "indent": 3,
      "text": "- Dropped this: However, IPv6 may be used in some environments where interoperability with IPv4 is not required. IPv6 nodes that are designed to be used in such environments need not use or even implement these mechanisms.",
      "ja": " - これをドロップ：ただし、IPv6は、IPv4との相互運用性が必要とされていないいくつかの環境で使用することができます。そのような環境で使用されるように設計されたIPv6ノードは、使用あるいはこれらのメカニズムを実装する必要はありません。"
    },
    {
      "indent": 3,
      "text": "- Described Static MTU and Dynamic MTU cases separately; clarified that the dynamic path MTU mechanism is OPTIONAL but if it is implemented it should follow the rules in section 3.2.2.",
      "ja": " - 個別に静的MTUとダイナミックMTU例を説明。動的パスMTU機構は任意であるが、それが実装されている場合、それはセクション3.2.2の規則に従うべきであることを明らかにしました。"
    },
    {
      "indent": 3,
      "text": "- Specified Static MTU to default to a MTU of 1280 to 1480 bytes, and that this may be configurable. Discussed the issues with using Static MTU at more length.",
      "ja": " -  1480バイトに1280 MTUをデフォルト静的MTUを指定し、これが設定されてもよいこと。以上の長さで静的なMTUを使用して問題を議論しました。"
    },
    {
      "indent": 3,
      "text": "- Specified minimal rules for IPv4 reassembly and IPv6 MRU to enhance interoperability and to minimize blacholes.",
      "ja": " - 相互運用性を強化するとblacholesを最小限に抑えるためにはIPv4とIPv6の再構築MRUのための最低限のルールを指定しました。"
    },
    {
      "indent": 3,
      "text": "- Restated the \"currently underway\" language about Type-of-Service, and loosely point at [RFC2983] and [RFC3168].",
      "ja": " -  [RFC2983]と[RFC3168]での-サービスタイプ、および緩くポイントについて「現在進行中」の言語を修正再表示。"
    },
    {
      "indent": 3,
      "text": "- Fixed reference to Assigned Numbers to be to online version (with proper pointer to \"Assigned Numbers is obsolete\" RFC).",
      "ja": " - オンライン版になるに割り当てられた番号に固定された基準（適切なポインタにするとRFC「割り当て番号は廃止されました」）。"
    },
    {
      "indent": 3,
      "text": "- Clarified text about ingress filtering e.g., that it applies to packet delivered to transport protocols on the decapsulator as well as packets being forwarded by the decapsulator, and how the decapsulator's checks help when IPv4 and IPv6 ingress filtering is in place.",
      "ja": " - 明確化し、それがカプセル化を解く上でのプロトコルと同様にカプセル化を解くことにより、転送されたパケットを転送するために配信パケットに適用されることイングレスフィルタリングについてのテキスト、例えば、そしてどのようにカプセル化を解くのチェックは、IPv4とIPv6イングレスフィルタリングが所定の位置にあるときに役立ちます。"
    },
    {
      "indent": 3,
      "text": "- Removed unidirectional tunneling; assume all tunnels are bidirectional, between endpoint addresses (not nodes).",
      "ja": " - は、単方向のトンネルを削除しました。すべてのトンネルは、エンドポイントアドレス（ないノード）間で、双方向であると仮定します。"
    },
    {
      "indent": 3,
      "text": "- Removed the guidelines for advertising addresses in DNS as slightly out of scope, referring to another document for the details.",
      "ja": " - 詳細については、別のドキュメントを参照して、スコープ外として少しDNSでの広告のアドレスのためのガイドラインを削除しました。"
    },
    {
      "indent": 3,
      "text": "- Removed the SHOULD requirement that the link-local addresses should be formed based on IPv4 addresses.",
      "ja": " - リンクローカルアドレスは、IPv4アドレスに基づいて形成されるべきであるSHOULD要件を削除。"
    },
    {
      "indent": 3,
      "text": "- Added a SHOULD for implementing a knob to be able to set the source address of the tunnel, and add discussion why this is useful.",
      "ja": " - トンネルの送信元アドレスを設定し、これが有用である理由議論を追加できるようにノブを実現するためのSHOULDを追加しました。"
    },
    {
      "indent": 3,
      "text": "- Added stronger wording for source address checks: both IPv4 and IPv6 source addresses MUST be checked, and RPF-like ingress filtering is optional.",
      "ja": "IPv4とIPv6の両方の送信元アドレスをチェックしなければなりませんし、RPFのようなイングレスフィルタリングはオプションです： - 送信元アドレスのチェックのために、より強い文言を追加しました。"
    },
    {
      "indent": 3,
      "text": "- Rewrote security considerations to be more precise about the threats of tunneling.",
      "ja": " - 書き直しセキュリティの考慮事項は、トンネルの脅威についてより正確に。"
    },
    {
      "indent": 3,
      "text": "- Added a note about considering using TTL=255 when encapsulating.",
      "ja": " - カプセル化する際にTTL = 255を使用して検討に関するメモを追加しました。"
    },
    {
      "indent": 3,
      "text": "- Added more discussion in Section 3.2 why using an \"infinite\" IPv6 MTU leads to likely interoperability problems.",
      "ja": " - 「無限」のIPv6 MTUを使用して、なぜ、セクション3.2で追加されより多くの議論がありそうな相互運用性の問題につながります。"
    },
    {
      "indent": 3,
      "text": "- Added an explicit requirement that if both MTU determination methods are used, choosing one should be possible on a per-tunnel basis.",
      "ja": " - 両方のMTUの決意方法を選択、使用される場合は、1つごとのトンネルに基づいて可能であることを明示的な要件を追加しました。"
    },
    {
      "indent": 3,
      "text": "- Clarified that ICMPv4 error handling is only applicable to dynamic MTU determination.",
      "ja": " -  ICMPv4のエラー処理は、動的MTUの決意にのみ適用可能であることを明らかにしました。"
    },
    {
      "indent": 3,
      "text": "- Removed/clarified DNS record filtering; an API is a SHOULD and if it does not exist, MUST NOT filter anything. Decree ordering out of scope, but refer to RFC3484.",
      "ja": " - 削除/ DNSレコードのフィルタリングを明らかにし、 APIはSHOULDであり、それが存在しない場合は、何をフィルタリングしてはなりません。法令の範囲の外に発注するが、RFC3484を参照してください。"
    },
    {
      "indent": 3,
      "text": "- Add a note that the destination IPv4 address could also be a multicast address.",
      "ja": " - 宛先IPv4アドレスは、マルチキャストアドレスとすることができることをメモを追加。"
    },
    {
      "indent": 3,
      "text": "- Make it RECOMMENDED to provide a toggle to perform strict ingress filtering on an interface.",
      "ja": " - それはインタフェースに厳しいイングレスフィルタリングを実行するためのトグルを提供するために推奨してください。"
    },
    {
      "indent": 3,
      "text": "- Generalize the text on the data in ICMPv4 messages.",
      "ja": " -  ICMPv4のメッセージ内のデータのテキストを一般化します。"
    },
    {
      "indent": 3,
      "text": "- Made a lot of miscellaneous editorial cleanups.",
      "ja": " - その他の社説のクリーンアップの多くを作りました。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Erik Nordmark Sun Microsystems 17 Network Circle Menlo Park, CA 94025 USA",
      "ja": "エリックNordmarkとSun Microsystemsの17ネットワークサークルメンロパーク、CA 94025 USA"
    },
    {
      "indent": 3,
      "text": "Phone: +1 650 786 2921 EMail: erik.nordmark@sun.com",
      "ja": "電話：+1 650 786 2921 Eメール：erik.nordmark@sun.com"
    },
    {
      "indent": 3,
      "text": "Robert E. Gilligan Intransa, Inc. 2870 Zanker Rd., Suite 100 San Jose, CA 95134 USA",
      "ja": "ロバートE.ギリガンIntransa、Inc.の2870 Zanker Rdを。、スイート100サンノゼ、CA 95134 USA"
    },
    {
      "indent": 3,
      "text": "Phone : +1 408 678 8600 Fax : +1 408 678 8800 EMail: bob.gilligan@acm.org",
      "ja": "電話：+1 408 678 8600ファックス：+1 408 678 8800 Eメール：bob.gilligan@acm.org"
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2005).",
      "ja": "著作権（C）インターネット協会（2005）。"
    },
    {
      "indent": 3,
      "text": "This document is subject to the rights, licenses and restrictions contained in BCP 78, and except as set forth therein, the authors retain all their rights.",
      "ja": "この文書では、BCP 78に含まれる権利と許可と制限の適用を受けており、その中の記載を除いて、作者は彼らのすべての権利を保有します。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein are provided on an \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書とここに含まれている情報は、基礎とCONTRIBUTOR「そのまま」、ORGANIZATION HE / SHEが表すまたはインターネットソサエティおよびインターネット・エンジニアリング・タスク・フォース放棄すべての保証、明示または、（もしあれば）後援ISに設けられています。黙示、情報の利用は、特定の目的に対する権利または商品性または適合性の黙示の保証を侵害しない任意の保証含むがこれらに限定されません。"
    },
    {
      "indent": 0,
      "text": "Intellectual Property",
      "ja": "知的財産"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any Intellectual Property Rights or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; nor does it represent that it has made any independent effort to identify any such rights. Information on the procedures with respect to rights in RFC documents can be found in BCP 78 and BCP 79.",
      "ja": "IETFは、本書またはそのような権限下で、ライセンスがたりないかもしれない程度に記載された技術の実装や使用に関係すると主張される可能性があります任意の知的財産権やその他の権利の有効性または範囲に関していかなる位置を取りません利用可能です。またそれは、それがどのような権利を確認する独自の取り組みを行ったことを示すものでもありません。 RFC文書の権利に関する手続きの情報は、BCP 78およびBCP 79に記載されています。"
    },
    {
      "indent": 3,
      "text": "Copies of IPR disclosures made to the IETF Secretariat and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the IETF on-line IPR repository at http://www.ietf.org/ipr.",
      "ja": "IPRの開示のコピーが利用できるようにIETF事務局とライセンスの保証に行われた、または本仕様の実装者または利用者がそのような所有権の使用のための一般的なライセンスまたは許可を取得するために作られた試みの結果を得ることができますhttp://www.ietf.org/iprのIETFのオンラインIPRリポジトリから。"
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights that may cover technology that may be required to implement this standard. Please address the information to the IETF at ietf-ipr@ietf.org.",
      "ja": "IETFは、その注意にこの標準を実装するために必要とされる技術をカバーすることができる任意の著作権、特許または特許出願、またはその他の所有権を持ってすべての利害関係者を招待します。 ietf-ipr@ietf.orgのIETFに情報を記述してください。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "ja": "RFC Editor機能のための基金は現在、インターネット協会によって提供されます。"
    }
  ]
}