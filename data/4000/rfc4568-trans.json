{
  "title": {
    "text": "RFC 4568 - Session Description Protocol (SDP) Security Descriptions for Media Streams",
    "ja": "RFC 4568 - セッション記述プロトコル（SDP）メディアストリームのためのセキュリティの説明"
  },
  "number": 4568,
  "created_at": "2019-10-22 18:56:50.485039+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                       F. Andreasen\nRequest for Comments: 4568                                    M. Baugher\nCategory: Standards Track                                        D. Wing\n                                                           Cisco Systems\n                                                               July 2006",
      "raw": true
    },
    {
      "indent": 16,
      "text": "   Session Description Protocol (SDP)\nSecurity Descriptions for Media Streams",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "ja": "この文書は、インターネットコミュニティのためのインターネット標準トラックプロトコルを指定し、改善のための議論と提案を要求します。このプロトコルの標準化状態と状態への「インターネット公式プロトコル標準」（STD 1）の最新版を参照してください。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2006).",
      "ja": "著作権（C）インターネット協会（2006）。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document defines a Session Description Protocol (SDP) cryptographic attribute for unicast media streams. The attribute describes a cryptographic key and other parameters that serve to configure security for a unicast media stream in either a single message or a roundtrip exchange. The attribute can be used with a variety of SDP media transports, and this document defines how to use it for the Secure Real-time Transport Protocol (SRTP) unicast media streams. The SDP crypto attribute requires the services of a data security protocol to secure the SDP message.",
      "ja": "この文書では、セッション記述プロトコル（SDP）ユニキャストメディアストリームの暗号化属性を定義します。属性には、暗号化キーおよび単一のメッセージまたは往復交換のどちらかで、ユニキャストメディアストリームのセキュリティを構成するのに役立つ他のパラメータについて説明します。属性は、SDPメディアトランスポートの様々な使用、および本文書は、セキュアリアルタイム転送プロトコル（SRTP）ユニキャストメディアストリームのためにそれを使用する方法を定義することができます。 SDP暗号属性は、SDPメッセージを確保するために、データのセキュリティプロトコルのサービスを必要とします。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................3\n2. Notational Conventions ..........................................5\n3. Applicability ...................................................5\n4. SDP \"Crypto\" Attribute and Parameters ...........................5\n   4.1. Tag ........................................................6\n   4.2. Crypto-Suite ...............................................6\n   4.3. Key Parameters .............................................7\n   4.4. Session Parameters .........................................8\n   4.5. Example ....................................................8\n5. General Use of the crypto Attribute .............................9\n   5.1. Use with Offer/Answer ......................................9\n        5.1.1. Generating the Initial Offer - Unicast Streams ......9",
      "raw": true
    },
    {
      "indent": 3,
      "text": "        5.1.2. Generating the Initial Answer - Unicast Streams ....10\n        5.1.3. Processing of the Initial Answer - Unicast\n               Streams ............................................11\n        5.1.4. Modifying the Session ..............................11\n   5.2. Use Outside Offer/Answer ..................................11\n   5.3. General Backwards Compatibility Considerations ............12\n6. SRTP Security Descriptions .....................................12\n   6.1. SRTP Key Parameter ........................................13\n   6.2. Crypto-Suites .............................................16\n        6.2.1. AES_CM_128_HMAC_SHA1_80 ............................16\n        6.2.2. AES_CM_128_HMAC_SHA1_32 ............................17\n        6.2.3. F8_128_HMAC_SHA1_80 ................................17\n        6.2.4. Adding New Crypto-Suite Definitions ................17\n   6.3. Session Parameters ........................................17\n        6.3.1. KDR=n ..............................................18\n        6.3.2. UNENCRYPTED_SRTCP and UNENCRYPTED_SRTP .............18\n        6.3.3. UNAUTHENTICATED_SRTP ...............................18\n        6.3.4. FEC_ORDER=order ....................................19\n        6.3.5. FEC_KEY=key-params .................................19\n        6.3.6. Window Size Hint (WSH) .............................19\n        6.3.7. Defining New SRTP Session Parameters ...............20\n   6.4. SRTP Crypto Context Initialization ........................20\n        6.4.1. Late Binding of One or More SSRCs to a\n               Crypto Context .....................................21\n        6.4.2. Sharing Cryptographic Contexts among\n               Sessions or SSRCs ..................................22\n   6.5. Removal of Crypto Contexts ................................23\n7. SRTP-Specific Use of the Crypto Attribute ......................23\n   7.1. Use with Offer/Answer .....................................23\n        7.1.1. Generating the Initial Offer - Unicast Streams .....23\n        7.1.2. Generating the Initial Answer - Unicast Streams ....24\n        7.1.3. Processing of the Initial Answer - Unicast\n               Streams ............................................25\n        7.1.4. Modifying the Session ..............................25\n        7.1.5. Offer/Answer Example ...............................27\n   7.2. SRTP-Specific Use Outside Offer/Answer ....................28\n   7.3. Support for SIP Forking ...................................28\n   7.4. SRTP-Specific Backwards Compatibility Considerations ......29\n   7.5. Operation with KEYMGT= and k= lines .......................29\n8. Security Considerations ........................................29\n   8.1. Authentication of Packets .................................30\n   8.2. Keystream Reuse ...........................................30\n   8.3. Signaling Authentication and Signaling Encryption .........31\n9. Grammar ........................................................32\n   9.1. Generic \"Crypto\" Attribute Grammar ........................32\n   9.2. SRTP \"Crypto\" Attribute Grammar ...........................32\n10. IANA Considerations ...........................................34\n   10.1. Registration of the \"crypto\" Attribute ...................34",
      "raw": true
    },
    {
      "indent": 3,
      "text": "   10.2. New IANA Registries and Registration Procedures ..........34\n        10.2.1. Key Method Registry and Registration ..............34\n        10.2.2. Media Stream Transport Registry and Registration ..35\n   10.3. Initial Registrations ....................................35\n        10.3.1. Key Method ........................................35\n        10.3.2. SRTP Media Stream Transport .......................35\n               10.3.2.1. SRTP Crypto Suite Registry and\n                         Registration .............................35\n               10.3.2.2. SRTP Session Parameter Registration ......36\n11. Acknowledgements ..............................................36\n12. Normative References ..........................................36\n13. Informative References ........................................37\nAppendix A - Rationale for Keying Material Directionality .........40",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "The Session Description Protocol (SDP) [RFC4566] describes multimedia sessions, which can be audio, video, whiteboard, fax, modem, and other media streams. Security services such as data origin authentication, integrity, and confidentiality are often needed for those streams. The Secure Real-time Transport Protocol (SRTP) [RFC3711] provides security services for RTP media and is signaled by use of secure RTP transport (e.g., \"RTP/SAVP\" or \"RTP/SAVPF\") in an SDP media (m=) line. However, there are no means within SDP itself to configure SRTP beyond using default values. This document specifies a new SDP attribute called \"crypto\", which is used to signal and negotiate cryptographic parameters for media streams in general, and for SRTP in particular. The definition of the crypto attribute in this document is limited to two-party unicast media streams where each source has a unique cryptographic key; support for multicast media streams or multipoint unicast streams is for further study.",
      "ja": "セッション記述プロトコル（SDP）[RFC4566]は、オーディオ、ビデオ、ホワイトボード、ファックス、モデム、およびその他のメディアストリームとすることができるマルチメディアセッションを記述する。そのようなデータ送信元認証、完全性、機密性などのセキュリティサービスは、多くの場合、これらのストリームのために必要とされます。セキュアリアルタイムトランスポートプロトコル（SRTP）[RFC3711] RTPメディアのセキュリティサービスを提供し、安全なRTP輸送（例えば、「RTP / SAVP」又は「RTP / SAVPF」）の使用によってシグナリングされるSDPメディアに（M = ）ライン。しかし、デフォルト値を使用して超えSRTPを設定するには、SDP自体内には手段がありません。この文書は、一般的に、特にSRTPのためのメディアストリームの暗号化パラメータを通知し、交渉するために使用される「暗号化」と呼ばれる新しいSDP属性を指定します。この文書の暗号化属性の定義は、それぞれのソースがユニーク暗号鍵を持っている二者のユニキャストメディアストリームに制限されています。マルチキャストメディアストリームまたはマルチユニキャストストリームのサポートは、今後の検討課題です。"
    },
    {
      "indent": 3,
      "text": "The crypto attribute is defined in a generic way to enable its use with SRTP and any other secure transports that can establish cryptographic parameters with only a single message or in a single round-trip exchange using the offer/answer model [RFC3264]. Extensions to transports other than SRTP, however, is beyond the scope of this document. Each type of secure media transport needs its own specification for the crypto-attribute parameter. These definitions are frequently unique to the particular type of transport and must be specified in a Standards-Track RFC and registered with IANA according to the procedures defined in Section 10. This document defines the security parameters and keying material for SRTP only.",
      "ja": "暗号属性は、SRTPとオファー/アンサーモデル[RFC3264]を使用して単一のメッセージのみで、または単一往復の交換で暗号パラメータを確立することができ、他の安全な交通機関での使用を可能にする一般的な方法で定義されています。 SRTP以外の輸送への拡張は、しかし、このドキュメントの範囲を超えています。セキュアなメディア・トランスポートの各タイプには、暗号属性パラメータのための独自の仕様を必要とします。これらの定義は、トランスポートの特定のタイプに頻繁に一意であり、標準トラックRFCで指定された。この文書は、セキュリティパラメータを定義するだけSRTPのための材料を合わせる項10に定義された手順に従って、IANAに登録されなければなりません。"
    },
    {
      "indent": 3,
      "text": "It would be self-defeating not to secure cryptographic keys and other parameters at least as well as the data are secured. Data security protocols such as SRTP rely upon a separate key management system to securely establish encryption and/or authentication keys. Key management protocols provide authenticated key establishment (AKE) procedures to authenticate the identity of each endpoint and protect against man-in-the-middle, reflection/replay, connection hijacking, and some denial-of-service attacks [skeme]. Along with the key, an AKE protocol such as MIKEY [mikey], GDOI [GDOI], KINK [kink], IKE [ike], Secure Multiparts [s/mime, pgp/mime], or TLS [TLS] securely disseminates information describing both the key and the data-security session. AKE is needed because it is pointless to provide a key over a medium where an attacker can snoop the key, alter the definition of the key to render it useless, or change the parameters of the security session to gain unauthorized access to session-related information.",
      "ja": "それは自滅暗号鍵やその他のパラメータに少なくともだけでなく、データが確保されているを確保していないだろう。このようSRTPなどのデータセキュリティプロトコルは安全に暗号化および/または認証鍵を確立するために、別の鍵管理システムに依存しています。鍵管理プロトコルは、各エンドポイントの身元を認証しなman-in-the-middle、反射/再生、接続ハイジャック、およびいくつかのサービス拒否攻撃[SKEME]から保護するために、認証済み鍵確立（AKE）手順を提供します。キー、例えばMIKEY [マイキー]としてAKEプロトコルに沿って、GDOI [GDOI]、KINK [キンク]、IKE [IKE]、セキュアマルチパート[S / MIME、PGP / MIME]、またはTLSは[TLS]安全に情報を広めますキーとデータ・セキュリティセッションの両方を記述する。攻撃者は、キーをスヌープそれは役に立たないレンダリングするために、キーの定義を変更、またはセッション関連情報への不正アクセスを得るために、セキュリティのセッションのパラメータを変更することができ媒体上でキーを提供することは無意味であるため、AKEが必要とされています。"
    },
    {
      "indent": 3,
      "text": "SDP, however, was not designed to provide AKE services, and the media security descriptions defined in this document do not add AKE services to SDP. This specification is no replacement for a key management protocol or for the conveyance of key management messages in SDP [keymgt]. The SDP security descriptions defined here are suitable for restricted cases only where IPsec, TLS, or some other encapsulating data-security protocol (e.g., SIP S/MIME) protects the SDP message. This document adds security descriptions to those encrypted and/or authenticated SDP messages through the new SDP \"crypto\" attribute, which provides the cryptographic parameters of a media stream.",
      "ja": "SDPは、しかし、AKEサービスを提供するように設計されていなかった、そしてこの文書で定義されたメディアセキュリティ記述は、SDPにAKEサービスを追加しないでください。この仕様は、鍵管理プロトコルまたは[keymgt] SDPにおける鍵管理メッセージの搬送には置換されていません。ここで定義されたSDPセキュリティ記述は、IPsec、TLS、またはいくつかの他のカプセル化データセキュリティプロトコル（例えば、SIP S / MIME）がSDPメッセージを保護するのみ限定場合に適しています。この文書では、メディアストリームの暗号化パラメータを提供する新しいSDP「暗号化」属性を介して、それらの暗号化および/または認証されたSDPメッセージにセキュリティ記述を追加します。"
    },
    {
      "indent": 3,
      "text": "The \"crypto\" attribute can be adapted to any media transport, but its precise definition is unique to a particular transport.",
      "ja": "「暗号化」属性は、任意のメディアトランスポートに適合させることができるが、その正確な定義は、特定のトランスポートに固有のものです。"
    },
    {
      "indent": 3,
      "text": "In Section 2, we provide notational conventions followed by an applicability statement for the crypto attribute in Section 3. In Section 4, we introduce the general SDP crypto attribute, and in Section 5, we define how it is used with and without the offer/answer model. In Section 6, we define the crypto attribute details needed for SRTP, and in Section 7, we define SRTP-specific use of the attribute with and without the offer/answer model. Section 8 recites security considerations, and Section 9 gives an Augmented-BNF grammar for the general crypto attribute as well as the SRTP-specific use of the crypto attribute. IANA considerations are provided in Section 10.",
      "ja": "第2節では、我々は第4節では3節でcrypto属性の適用性声明に続いて表記法を提供し、我々は一般的なSDP暗号属性を導入し、第5節では、我々はそれが/とし、提供することなく、どのように使われるかを定義しますアンサーモデル。第6節では、SRTPのために必要な暗号化属性の詳細を定義し、7章では、我々は持つとオファー/アンサーモデルなしの属性のSRTP固有の使用を定義します。第8章では、セキュリティ上の考慮事項を列挙し、そして第9節は、一般的な暗号属性用に拡張-BNF文法だけでなく、暗号化属性のSRTP固有の使用を提供します。 IANAの考慮事項は、セクション10に設けられています。"
    },
    {
      "indent": 0,
      "text": "2. Notational Conventions",
      "section_title": true,
      "ja": "2.表記規則"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119]. The terminology in this document conforms to [RFC2828], \"Internet Security Glossary\".",
      "ja": "キーワード \"MUST\"、 \"NOT MUST\"、 \"必須\"、 \"SHOULD\"、この文書では、 \"推奨\"、 \"べきでない\" \"MAY\"、及び \"OPTIONAL\" は[RFC2119]に記載されているように解釈されるべきです。この文書に記載されている用語は、[RFC2828]、「インターネットセキュリティ用語集」に準拠しています。"
    },
    {
      "indent": 3,
      "text": "n^r is exponentiation, where n is multiplied by itself r times; n and r are integers. 0..k is an integer range of all integers from 0 through k, inclusive.",
      "ja": "N ^ Rは、n自体が時間をRで乗算するべき乗です。 nおよびRは整数です。 0..kがk 0〜すべての整数の整数の範囲、包括的です。"
    },
    {
      "indent": 3,
      "text": "The terms 'transport' and 'media transport' are used to mean 'transport protocol' as defined in RFC 4566.",
      "ja": "用語「輸送」と「媒体搬送」は、RFC 4566で定義されるように「トランスポートプロトコル」を意味するために使用されます。"
    },
    {
      "indent": 3,
      "text": "Explanatory notes are provided in several places throughout the document; these notes are indented three spaces from the surrounding text.",
      "ja": "注釈は、文書全体にいくつかの場所で提供されています。これらのノートは、周囲のテキストから3つのスペースをインデントされています。"
    },
    {
      "indent": 0,
      "text": "3. Applicability",
      "section_title": true,
      "ja": "3.適用性"
    },
    {
      "indent": 3,
      "text": "RFC 4567 provides similar cryptographic key distribution capabilities and is intended for use when the signaling is to be confidential and/or integrity-protected separately from the keying material.",
      "ja": "RFC 4567は、同様の暗号鍵配布機能を提供し、シグナリングは、機密および/または完全性保護鍵材料は別にする際の使用のために意図されています。"
    },
    {
      "indent": 3,
      "text": "In contrast, this specification carries the keying material within the SDP message, and it is intended for use when the keying material is protected along with the signaling. Implementations MUST employ security mechanisms that provide confidentiality and integrity for the keying material. When this specification is used in the context of SIP [RFC3261], the application SHOULD employ either the SIPS URI or S/MIME to provide protection for the SDP message and the keying material that it contains. The use of transport layer or IP layer security in lieu of the SIPS URI or S/MIME protection is NOT RECOMMENDED since the protection of the SDP message and the keying material that it contains cannot be ensured through all intermediate entities such as SIP proxies.",
      "ja": "対照的に、本明細書は、SDPメッセージ内のキーイング材料を搬送し、キーイング材料をシグナリングと共に保護されている場合には、使用のために意図されています。実装は鍵の機密性と完全性を提供し、セキュリティ・メカニズムを採用しなければなりません。この仕様は、SIP [RFC3261]の文脈で使用される場合、アプリケーションは、SDPメッセージとそれに含まれるキーイングマテリアルの保護を提供するために、SIPS URIまたはS / MIMEのいずれかを採用するべきです。 SIPS URIまたはS / MIME保護の代わりに、トランスポート層又はIP層セキュリティの使用は、SDPメッセージの保護と、それはそのようなSIPプロキシとしてすべての中間エンティティを介して確保することができない含まキーイング材料ので推奨されません。"
    },
    {
      "indent": 0,
      "text": "4. SDP \"Crypto\" Attribute and Parameters",
      "section_title": true,
      "ja": "4. SDP「暗号化」属性とパラメータ"
    },
    {
      "indent": 3,
      "text": "A new media-level SDP attribute called \"crypto\" describes the cryptographic suite, key parameters, and session parameters for the preceding unicast media line. The \"crypto\" attribute MUST only appear at the SDP media level (not at the session level). The \"crypto\" attribute follows the format (see Section 9.1 for the formal ABNF grammar):",
      "ja": "「暗号化」と呼ばれる新しいメディアレベルSDP属性は、暗号スイート、主要なパラメータ、および前のユニキャストメディア・ラインのためのセッションパラメータについて説明します。 「暗号化」属性は（ないセッション・レベルで）SDPメディアレベルで現れなければなりません。 「暗号化」属性は、（正式なABNF文法については、セクション9.1を参照）フォーマットに従います。"
    },
    {
      "indent": 6,
      "text": "a=crypto:<tag> <crypto-suite> <key-params> [<session-params>]",
      "ja": "=暗号<タグ> <暗号スイート> <キーparamsは> [<セッション-paramsは>]"
    },
    {
      "indent": 3,
      "text": "The fields tag, crypto-suite, key-params, and session-params are described in the following sub-sections. The values of each of these fields is case-insensitive, unless otherwise noted. However, implementers are encouraged to use the actual case shown in this document and any extensions to it. Note that per normal SDP rules, the \"crypto\" attribute name itself is case-sensitive. Below, we show an example of the crypto attribute for the \"RTP/SAVP\" transport, i.e., the secure RTP extension to the Audio/Video Profile [RFC3711]. In the following, newlines are included for formatting reasons only:",
      "ja": "フィールドタグ、暗号スイート、キーパラメータ、およびセッションのparamsは、以下のサブセクションに記載されています。特に断りのない限り、これらのフィールドのそれぞれの値は、大文字と小文字を区別しないです。しかし、実装者は、この文書とそれに任意の拡張子に示す実際のケースを使用することをお勧めします。通常のSDP規則に従ってなお、「暗号化」属性名自体は、大文字と小文字が区別されます。以下に、私たちは「RTP / SAVP」輸送、すなわち、オーディオ/ビデオのプロファイルへの安全なRTP拡張[RFC3711]のための暗号化属性の例を示しています。以下では、改行は、書式設定のためにのみ含まれています："
    },
    {
      "indent": 6,
      "text": "a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:PS1uQCVeeCFCanVmcjkpPywjNWhcYD0mXXtxaVBR|2^20|1:32",
      "ja": "=暗号：1 AES_CM_128_HMAC_SHA1_80インライン：PS1uQCVeeCFCanVmcjkpPywjNWhcYD0mXXtxaVBR | 2 ^ 20 | 1：32"
    },
    {
      "indent": 3,
      "text": "The crypto-suite is AES_CM_128_HMAC_SHA1_80, key-params is defined by the text starting with \"inline:\", and session-params is omitted.",
      "ja": "暗号スイートはAES_CM_128_HMAC_SHA1_80、キーparamsを「インライン：」で始まるテキストで定義されており、セッションのparams省略されています。"
    },
    {
      "indent": 0,
      "text": "4.1. Tag",
      "section_title": true,
      "ja": "4.1。鬼ごっこ"
    },
    {
      "indent": 3,
      "text": "The tag is a decimal number used as an identifier for a particular crypto attribute (see Section 9.1 for details); leading zeroes MUST NOT be used. The tag MUST be unique among all crypto attributes for a given media line. It is used with the offer/answer model to determine which of several offered crypto attributes were chosen by the answerer (see Section 5.1).",
      "ja": "タグは、特定の暗号化属性の識別子として使用される小数点数（詳細はセクション9.1を参照）です。先行ゼロを使用してはいけません。タグは、特定のメディア・ラインのためのすべての暗号化属性の中で一意でなければなりません。これは、回答によって選ばれたいくつか提供された暗号属性のどれかを決定するためにオファー/アンサーモデルで使用されている（5.1節を参照してください）。"
    },
    {
      "indent": 3,
      "text": "In the offer/answer model, the tag is a negotiated parameter.",
      "ja": "オファー/アンサーモデルでは、タグが交渉されたパラメータです。"
    },
    {
      "indent": 0,
      "text": "4.2. Crypto-Suite",
      "section_title": true,
      "ja": "4.2。暗号スイート"
    },
    {
      "indent": 3,
      "text": "The crypto-suite field is an identifier that describes the encryption and authentication algorithms (e.g., AES_CM_128_HMAC_SHA1_80) for the transport in question (see Section 9.1 for details). The possible values for the crypto-suite parameter are defined within the context of the transport, i.e., each transport defines a separate namespace for the set of crypto-suites. For example, the crypto-suite \"AES_CM_128_HMAC_SHA1_80\" defined within the context \"RTP/SAVP\" transport applies to Secure RTP only; the string may be reused for another transport (e.g., \"RTP/SAVPF\" [srtpf]), but a separate definition would be needed.",
      "ja": "暗号スイートフィールドは、当該トランスポート（詳細はセクション9.1を参照）の暗号化および認証アルゴリズム（例えば、AES_CM_128_HMAC_SHA1_80）を記述する識別子です。暗号スイートパラメータの可能な値は、輸送のコンテキスト内で定義され、すなわち、各転送は暗号スイートのセットのための別の名前空間を定義します。例えば、暗号スイートのコンテキスト内で定義された「AES_CM_128_HMAC_SHA1_80」「RTP / SAVP」輸送のみRTPを確保するために適用されます。文字列は、別の輸送のために再利用することができる（例えば、「RTP / SAVPF」[srtpf]）が、別の定義が必要とされるであろう。"
    },
    {
      "indent": 3,
      "text": "In the offer/answer model, the crypto-suite is a negotiated parameter.",
      "ja": "オファー/アンサーモデルでは、暗号スイートは、ネゴシエートパラメータです。"
    },
    {
      "indent": 0,
      "text": "4.3. Key Parameters",
      "section_title": true,
      "ja": "4.3。主要パラメータ"
    },
    {
      "indent": 3,
      "text": "The key-params field provides one or more sets of keying material for the crypto-suite in question. The field consists of a method indicator followed by a colon, and the actual keying information as shown below (the formal grammar is provided in Section 9.1):",
      "ja": "キーのparamsフィールドは、問題となっている暗号スイートのための材料を鍵の1つ以上のセットを提供します。 （正式な文法をセクション9.1において提供される）以下に示すように、フィールドは、コロン方法指標、及び実際の鍵情報から構成されています。"
    },
    {
      "indent": 6,
      "text": "key-params = <key-method> \":\" <key-info>",
      "ja": "キーのparams = <キー方式>「：」<キー情報>"
    },
    {
      "indent": 3,
      "text": "Keying material might be provided by different means from that for key-params; however, this is out of scope. Only one method is defined in this document, namely, \"inline\", which indicates that the actual keying material is provided in the key-info field itself. There is a single name space for the key-method, i.e., the key-method is transport independent. New key-methods (e.g., use of a URL) may be defined in a Standards-Track RFC in the future. Although the key-method itself may be generic, the accompanying key-info definition is specific not only to the key-method, but also to the transport in question. Key-info encodes keying material for a crypto suite, which defines that keying material. New key methods MUST be registered with the IANA according to the procedures defined in Section 10.2.1.",
      "ja": "材料を合わせるのがキーのparamsとは異なる手段によって提供されているかもしれません。しかし、これは範囲外です。唯一の方法は、この文書で定義され、すなわち、「インライン」、実際のキーイングマテリアルは、キー情報フィールド自体に設けられていることを示しています。すなわち、キー方式、のための単一の名前空間があり、キーの方法は、独立したトランスポートです。新しいキー方法（例えば、URLの使用）将来の標準化過程RFCで定義されていてもよいです。キー・メソッド自体は一般的なことかもしれないが、添付のキー情報の定義は、キー方式にするだけでなく、問題の輸送に限らず、特定のです。キー情報は、その鍵材料を定義する暗号スイートのための材料をキーイング符号化します。新しいキーの方法は、セクション10.2.1で定義された手順に従って、IANAに登録しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Key-info is defined as a general octet string (see Section 9.1 for details); further transport and key-method specific syntax and semantics MUST be provided in a Standards-Track RFC for each combination of transport and key-method that uses it; definitions for SRTP are provided in Section 6. Note that such definitions are provided within the context of both a particular transport (e.g., \"RTP/SAVP\") and a specific key-method (e.g., \"inline\"). IANA will register the list of supported key methods for each transport.",
      "ja": "キー情報は、一般のオクテット文字列（詳細はセクション9.1を参照）のように定義されます。さらに、トランスポートとキー方式固有の構文およびセマンティクスは、輸送し、それを使用して、キー方式の組み合わせごとにスタンダードトラックRFCに提供しなければなりません。 SRTPの定義は、そのような定義は、特定のトランスポート（例えば、「RTP / SAVP」）と特定のキーの方法（例えば、「インライン」）の両方のコンテキスト内に設けられていることを第6注意に設けられています。 IANAは、各トランスポートでサポートされている主要なメソッドのリストを登録します。"
    },
    {
      "indent": 3,
      "text": "When multiple keys are included in the key parameters, it MUST be possible to determine which of the keys is being used in a given media packet by a simple inspection of the media packet received; a trial-and-error approach between the possible keys MUST NOT be performed.",
      "ja": "複数のキーをキーパラメータに含まれている場合には、受信したメディアパケットの単純な検査によって与えられるメディアパケットに使用されているキーのかを決定することが可能でなければなりません。可能なキーの間に試行錯誤を行ってはなりません。"
    },
    {
      "indent": 6,
      "text": "For SRTP, this could be achieved by use of Master Key Identifiers (MKI) [RFC3711]. Use of <\"From, \"To\"> values are not supported in SRTP security descriptions for reasons explained in Section 6.1, below.",
      "ja": "SRTPの場合、これはマスターキー識別子（MKI）[RFC3711]を使用することによって達成することができます。 < 『を\"から、』>の値は理由のためにSRTPセキュリティ記述でサポートされていないの使用は以下のセクション6.1で説明しました。"
    },
    {
      "indent": 3,
      "text": "In the offer/answer model, the key parameter is a declarative parameter.",
      "ja": "オファー/アンサーモデルでは、重要なパラメータは、宣言型のパラメータです。"
    },
    {
      "indent": 0,
      "text": "4.4. Session Parameters",
      "section_title": true,
      "ja": "4.4。セッション・パラメーター"
    },
    {
      "indent": 3,
      "text": "Session parameters are specific to a given transport and use of them is OPTIONAL in the security descriptions framework, where they are just defined as general character strings. If session parameters are to be used for a given transport, then transport-specific syntax and semantics MUST be provided in a Standards-Track RFC; definitions for SRTP are provided in Section 6.",
      "ja": "セッションパラメータは、それらの特定の輸送および使用に固有である彼らはただ、一般的な文字列として定義されたセキュリティ記述フレームワーク、ではオプションです。セッションパラメータが与えられた輸送のために使用される場合には、トランスポート固有の構文およびセマンティクスは、標準トラックRFCに提供しなければなりません。 SRTPの定義は、第6節で提供されています。"
    },
    {
      "indent": 3,
      "text": "In the offer/answer model, session parameters may be either negotiated or declarative; the definition of specific session parameters MUST indicate whether they are negotiated or declarative. Negotiated parameters apply to data sent in both directions, whereas declarative parameters apply only to media sent by the entity that generated the SDP. Thus, a declarative parameter in an offer applies to media sent by the offerer, whereas a declarative parameter in an answer applies to media sent by the answerer.",
      "ja": "オファー/アンサーモデルでは、セッションパラメータは、どちらか交渉したり、宣言することができます。特定のセッションパラメータの定義は、彼らが交渉または宣言されているかどうかを示す必要があります。宣言パラメータはSDPを生成したエンティティによって送信されたメディアにのみ適用され、一方、ネゴシエートパラメータは、両方向に送信されたデータに適用されます。その答えで宣言型のパラメータが回答により送信されたメディアに適用されるのに対し、このように、提供中の宣言型パラメータは、オファー側によって送信されたメディアに適用されます。"
    },
    {
      "indent": 0,
      "text": "4.5. Example",
      "section_title": true,
      "ja": "4.5。例"
    },
    {
      "indent": 3,
      "text": "This example shows use of the crypto attribute for the \"RTP/SAVP\" media transport type (as defined in Section 5). The \"a=crypto\" line is actually one long line; it is shown as two lines due to page formatting.",
      "ja": "この例では「RTP / SAVP」メディアトランスポートタイプ（セクション5で定義されるような）のための暗号化属性の使用を示します。 「A =暗号」の行は、実際には一つの長い行です。それは、ページのフォーマットによる2つのラインとして示されています。"
    },
    {
      "indent": 6,
      "text": "v=0 o=jdoe 2890844526 2890842807 IN IP4 10.47.16.5 s=SDP Seminar i=A Seminar on the session description protocol u=http://www.example.com/seminars/sdp.pdf e=j.doe@example.com (Jane Doe) c=IN IP4 161.44.17.12/127 t=2873397496 2873404696 m=video 51372 RTP/SAVP 31 a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:d0RmdmcmVCspeEc3QGZiNWpVLFJhQX1cfHAwJSoj|2^20|1:32 m=audio 49170 RTP/SAVP 0 a=crypto:1 AES_CM_128_HMAC_SHA1_32 inline:NzB4d1BINUAvLEw6UzF3WSJ+PSdFcGdUJShpX1Zj|2^20|1:32 m=application 32416 udp wb a=orient:portrait",
      "ja": "V = 0 0 = IP4 10.47.16.5 S = SDPセミナーでjdoeの2890844526 2890842807 I =セッション記述プロトコルセミナーU = HTTP：//www.example.com/seminars/sdp.pdf e=j.doe@example .COM（ジェーンドゥ）C = IP4 IN 161.44.17.12/127 T = 2873397496 2873404696メートル=ビデオ51372 RTP / SAVP 31 =暗号：1つのAES_CM_128_HMAC_SHA1_80インライン：d0RmdmcmVCspeEc3QGZiNWpVLFJhQX1cfHAwJSoj | 2 ^ 20 | 1：32メートル=オーディオ49170 RTP / SAVP 0、A =暗号：1 AES_CM_128_HMAC_SHA1_32インライン：NzB4d1BINUAvLEw6UzF3WSJ + PSdFcGdUJShpX1Zj | 2 ^ 20 | 1：32メートル=アプリケーション32416 UDP WB A =オリエント：肖像"
    },
    {
      "indent": 3,
      "text": "This SDP message describes three media streams, two of which use the \"RTP/SAVP\" transport. Each has a crypto attribute for the \"RTP/SAVP\" transport. These secure-RTP specific descriptions are defined in Section 6.",
      "ja": "このSDPメッセージは「RTP / SAVP」トランスポートを使用する2つのうち3つのメディアストリームを、記載されています。それぞれ、「RTP / SAVP」輸送のための暗号化属性を持っています。これらのセキュアRTP具体的な記載は、第6節で定義されています。"
    },
    {
      "indent": 0,
      "text": "5. General Use of the crypto Attribute",
      "section_title": true,
      "ja": "暗号属性の5.一般的な使用"
    },
    {
      "indent": 3,
      "text": "In this section, we describe the general use of the crypto attribute outside of any transport or key-method specific rules.",
      "ja": "このセクションでは、我々はすべての輸送またはキー方式固有のルールの外で暗号属性の一般的な使用を記載しています。"
    },
    {
      "indent": 0,
      "text": "5.1. Use with Offer/Answer",
      "section_title": true,
      "ja": "5.1。オファー/回答を使用します"
    },
    {
      "indent": 3,
      "text": "The general offer/answer rules for the crypto attribute are in addition to the rules specified in RFC 3264, which MUST be followed, unless otherwise noted. RFC 3264 defines operation for both unicast and multicast streams; the sections below describe operation for two-party unicast streams only, since support for multicast streams (and multipoint unicast streams) is for further study.",
      "ja": "暗号属性の一般的なオファー/アンサールールは、特に断りのない限り、続いなければならないRFC 3264で指定されたルールに加えています。 RFC 3264は、ユニキャストとマルチキャストストリームの両方のための操作を定義します。マルチキャストストリーム（及びマルチユニキャストストリーム）のためのサポートは今後の検討課題であるので、以下のセクションでは、2つだけのパーティユニキャストストリームのための動作を説明します。"
    },
    {
      "indent": 0,
      "text": "5.1.1. Generating the Initial Offer - Unicast Streams",
      "section_title": true,
      "ja": "5.1.1。最初のオファーを生成 - ユニキャストストリーム"
    },
    {
      "indent": 3,
      "text": "When generating an initial offer for a unicast stream, there MUST be one or more crypto attributes present for each media stream for which security is desired. Each crypto attribute for a given media stream MUST contain a unique tag.",
      "ja": "ユニキャストストリームの最初のオファーを生成する際に、セキュリティが望まれる各メディアストリームのために存在する1つまたは複数の暗号属性が存在していなければなりません。与えられたメディア・ストリームの各暗号属性は、固有のタグを含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "The ordering of multiple \"a=crypto\" lines is significant: the most preferred crypto line is listed first. Each crypto attribute describes the crypto-suite, key(s), and possibly session parameters offered for the media stream. In general, a \"more preferred\" crypto-suite SHOULD be cryptographically stronger than a \"less preferred\" crypto-suite.",
      "ja": "複数の「A =暗号」の行の順序は重要である。最も好ましい暗号行が最初に表示されます。各暗号属性は、暗号スイートを説明し、キー（複数可）、およびメディアストリームのために提供おそらくセッションパラメータ。一般に、「より好適な」暗号スイートは、「あまり好ましくない」暗号スイートより暗号強くあるべきです。"
    },
    {
      "indent": 3,
      "text": "The crypto-suite always applies to media in the directions supported by the media stream (e.g., send and receive). The key(s), however, apply to data packets (e.g., SRTP and SRTCP packets) that will be sent by the same party that generated the SDP. That is, each endpoint determines its own transmission keys and sends those keys, in SDP, to the other endpoint.",
      "ja": "暗号スイートは、常にメディア・ストリームによってサポートされる方向に媒体に適用される（例えば、送信および受信）。鍵（単数または複数）は、しかしながら、SDPを生成した同一の当事者によって送信されるデータ・パケット（例えば、SRTPとSRTCPパケット）に適用されます。つまり、各エンドポイントは、自身の送信キーを決定し、他のエンドポイントに、SDPに、これらのキーを送信します。"
    },
    {
      "indent": 6,
      "text": "This is done for consistency. Also, in the case of SRTP, for example, secure RTCP will still be flowing in both the send and receive direction for a unidirectional stream.",
      "ja": "これは、一貫性のために行われます。また、SRTPの場合には、例えば、セキュアRTCPは、まだ送信の両方に流れるされ、一方向ストリームの方向を受け取ります。"
    },
    {
      "indent": 3,
      "text": "The inline parameter conveys the keying material used by an endpoint to encrypt the media streams transmitted by that endpoint. The same keying material is used by the recipient to decrypt those streams.",
      "ja": "インラインパラメータは、そのエンドポイントによって送信されたメディアストリームを暗号化するために、エンドポイントによって使用される鍵材料を搬送します。同一の鍵材料は、それらのストリームを復号するために受信者によって使用されます。"
    },
    {
      "indent": 3,
      "text": "The offer may include session parameters. There are no general offer rules for the session parameters; instead, specific rules may be provided as part of the transport-specific definitions of any session parameters.",
      "ja": "オファーはセッションのパラメータを含むことができます。セッションパラメータのための一般的な提供のルールはありません。代わりに、特定の規則は、任意のセッションパラメータのトランスポート固有の定義の一部として提供されてもよいです。"
    },
    {
      "indent": 3,
      "text": "When issuing an offer, the offerer MUST be prepared to support media security in accordance with any of the crypto attributes included in the offer. There are, however, two problems associated with this. First of all, the offerer does not know which key the answerer will be using for media sent to the offerer. Second, the offerer may not be able to deduce which of the offered crypto attributes were accepted. Since media may arrive prior to the answer, delay or clipping can occur. If this is unacceptable to the offerer, the offerer SHOULD use a mechanism outside the scope of this document to prevent the above problem.",
      "ja": "申し出を発行するときは、オファー側が申し出に含まれた暗号の属性のいずれかに従ってメディアセキュリティをサポートするために準備しなければなりません。これに関連した2つの問題は、しかし、があります。まず第一に、オファー側は回答がオファー側に送信されたメディアを使用するどのキーを知りません。第二に、オファー側が受け入れられた提供暗号属性のどれを推測することができないかもしれません。メディアは答えの前に到着する可能性があるため、遅延またはクリッピングが発生する可能性があります。この申し出を受け入れられない場合、提供者は、上記の問題を回避するために、この文書の範囲外の機構を使用すべきです。"
    },
    {
      "indent": 6,
      "text": "For example, in SIP [RFC3261], a \"security\" precondition as defined in [sprecon] could solve the above problem.",
      "ja": "例えば、SIP [RFC3261]で、[sprecon]で定義されるように、「セキュリティ」の前提条件は、上記の問題を解決できます。"
    },
    {
      "indent": 0,
      "text": "5.1.2. Generating the Initial Answer - Unicast Streams",
      "section_title": true,
      "ja": "5.1.2。最初の回答を生成 - ユニキャストストリーム"
    },
    {
      "indent": 3,
      "text": "When the answerer receives the initial offer with one or more crypto attributes for a given unicast media stream, the answerer MUST either accept exactly one of the offered crypto attributes, or the offered stream MUST be rejected.",
      "ja": "回答が与えられたユニキャストメディアストリームのための1つまたは複数の暗号属性を持つ最初のオファーを受信すると、回答が正確に提供された暗号のいずれかの属性を受け入れなければならどちらか、または提供されたストリームを拒絶しなければなりません。"
    },
    {
      "indent": 6,
      "text": "If the answerer wishes to indicate support for other crypto attributes, those can be listed by use of the SDP Simple Capability Declaration [RFC3407] extensions.",
      "ja": "回答は、他の暗号化属性のサポートを示すことを望む場合、それらは、SDPシンプルな能力宣言[RFC3407]の拡張機能を使用してリストできます。"
    },
    {
      "indent": 3,
      "text": "Only crypto attributes that are valid can be accepted; valid attributes do not violate any of the general rules defined for security descriptions, nor any specific rules defined for the transport and key-method in question. When selecting one of the valid crypto attributes, the answerer SHOULD select the most preferred crypto attribute it can support, i.e., the first valid supported crypto attribute in the list, according to the answerer's capabilities and security policies.",
      "ja": "有効な唯一の暗号属性が受け入れることができます。有効な属性は、セキュリティの説明、また該当の輸送とキー法に定義された特定のルールに対して定義された一般的なルールのいずれかに違反していません。有効な暗号化属性のいずれかを選択すると、回答は回答者の能力とセキュリティポリシーに応じて、それがサポートできる最も好ましい暗号化属性は、リストのすなわち、最初の有効なサポート暗号属性を選択する必要があります。"
    },
    {
      "indent": 3,
      "text": "If there are one or more crypto attributes in the offer, but none of them are valid or none of the valid ones are supported, the offered media stream MUST be rejected.",
      "ja": "そこのオファー内の1つまたは複数の暗号化属性は、ですが、それらのどれが有効でないか、有効なもののいずれもサポートされていない場合は、提供されたメディアストリームを拒絶しなければなりません。"
    },
    {
      "indent": 3,
      "text": "When an offered crypto attribute is accepted, the crypto attribute in the answer MUST contain the following:",
      "ja": "提供する暗号属性が受け付けられると、その答えでcrypto属性には、次のものが含まれていなければなりません："
    },
    {
      "indent": 3,
      "text": "* The tag and crypto-suite from the accepted crypto attribute in the offer (the same crypto-suite MUST be used in the send and receive direction).",
      "ja": "*オファーに受け入れ暗号属性からタグおよび暗号スイート（同じ暗号スイートが送信に使用され、受信方向でなければなりません）。"
    },
    {
      "indent": 3,
      "text": "* The key(s) the answerer will be using for media sent to the offerer. Note that a key MUST be provided, irrespective of any direction attributes in the offer or answer.",
      "ja": "*キー（複数可）回答は、オファー側に送信されるメディアのために使用されます。キーは関係なく提供または回答のいずれかの方向属性の、提供しなければならないことに注意してください。"
    },
    {
      "indent": 3,
      "text": "Furthermore, any session parameters that are negotiated MUST be included in the answer. Declarative session parameters provided by the offerer are not included in the answer; however, the answerer may provide its own set of declarative session parameters.",
      "ja": "さらに、交渉されているすべてのセッションパラメータが答えに含まれなければなりません。オファー側が提供する宣言型のセッションパラメータが答えに含まれていません。しかし、回答は、宣言型のセッションパラメータの独自のセットを提供することができます。"
    },
    {
      "indent": 3,
      "text": "Once the answerer has accepted one of the offered crypto attributes, the answerer MAY begin sending media to the offerer in accordance with the selected crypto attribute. Note, however, that the offerer may not be able to process such media packets correctly until the answer has been received.",
      "ja": "回答が提供された暗号属性のいずれかを受け入れた後、回答は選択された暗号化属性に応じて、オファーにメディアを送り始めるかもしれません。答えが受信されるまで、オファーが正しく、このようなメディアパケットを処理できない場合があること、しかし、注意してください。"
    },
    {
      "indent": 0,
      "text": "5.1.3. Processing of the Initial Answer - Unicast Streams",
      "section_title": true,
      "ja": "5.1.3。初期回答の処理 - ユニキャストストリーム"
    },
    {
      "indent": 3,
      "text": "When the offerer receives the answer, the offerer MUST verify that one of the initially offered crypto suites and its accompanying tag were accepted and echoed in the answer. Also, the answer MUST include one or more keys, which will be used for media sent from the answerer to the offerer.",
      "ja": "オファー側が答えを受け取ると、オファー側は、最初に提供された暗号スイートの1とそれに付随するタグが受け入れられ、答えにこだましたことを確かめなければなりません。また、その答えは、オファー側への回答から送信されたメディアに使用される1つ以上のキーを含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the offer contained any mandatory negotiated session parameters (see Section 6.3.7), the offerer MUST verify that said parameters are included in the answer and support them. If the answer contains any mandatory declarative session parameters, the offerer MUST be able to support those.",
      "ja": "オファーはどの必須で交渉セッションパラメータを（6.3.7項を参照）含まれている場合、オファー側は、パラメータが答えに含まれており、それらをサポートしていると述べたことを確認する必要があります。答えは任意の必須宣言型のセッションパラメータが含まれている場合は、オファー側は、これらをサポートすることができなければなりません。"
    },
    {
      "indent": 3,
      "text": "If any of the above fails, the negotiation MUST fail.",
      "ja": "上記のいずれかが失敗した場合、ネゴシエーションは失敗しなければなりません。"
    },
    {
      "indent": 0,
      "text": "5.1.4. Modifying the Session",
      "section_title": true,
      "ja": "5.1.4。セッションの変更"
    },
    {
      "indent": 3,
      "text": "Once a media stream has been established, it MAY be modified at any time, as described in RFC 3264, Section 8. Such a modification MAY be triggered by the security service, e.g., in order to perform a re-keying or change the crypto-suite. If media stream security using the general security descriptions defined here is still desired, the crypto attribute MUST be included in these new offer/answer exchanges. The procedures are similar to those defined in Section 5.1.1, 5.1.2, and 5.1.3 of this document, subject to the considerations provided in RFC 3264, Section 8.",
      "ja": "メディアストリームが確立されると、RFC 3264で説明したように、それは、いつでも変更されるかもしれない、セクション8このような変更は、再キーイングを実行したり、暗号を変更するためには、例えば、セキュリティサービスによってトリガされてもよいです-組。ここで定義された一般的なセキュリティの記述を使用して、メディア・ストリームのセキュリティを希望される場合は、暗号化属性は、これらの新しいオファー/アンサー交換に含めなければなりません。手順は、セクション5.1.1、5.1.2で定義されたものと同様に、この文書の5.1.3、RFC 3264、セクション8に設けられた考慮の対象となっています。"
    },
    {
      "indent": 0,
      "text": "5.2. Use Outside Offer/Answer",
      "section_title": true,
      "ja": "5.2。外オファー/回答を使用します"
    },
    {
      "indent": 3,
      "text": "The crypto attribute can also be used outside the context of offer/answer where there is no negotiation of the crypto suite, cryptographic key, or session parameters. In this case, the sender determines security parameters for the stream. Since there is no negotiation mechanism, the sender MUST include exactly one crypto attribute, and the receiver MUST either accept it or SHOULD NOT receive the associated stream. The sender SHOULD select the security description that it deems most secure for its purposes.",
      "ja": "暗号属性も暗号スイート、暗号キー、またはセッションパラメータのない交渉がないオファー/アンサーの文脈の外で使用することができます。この場合、送信者は、ストリームのためのセキュリティパラメータを決定します。何の交渉メカニズムがないため、送信者は、1つの暗号化属性を含まなければならない、と受信機はそれを受け入れなければならないのいずれかまたは関連するストリームを受信すべきではありません。送信者は、その目的のために最も安全と認めセキュリティの説明を選択する必要があります。"
    },
    {
      "indent": 0,
      "text": "5.3. General Backwards Compatibility Considerations",
      "section_title": true,
      "ja": "5.3。一般的な後方互換性に関する注意事項"
    },
    {
      "indent": 3,
      "text": "In the offer/answer model, it is possible that the answerer supports a given secure transport (e.g., \"RTP/SAVP\") and accepts the offered media stream, but that the answerer does not support the crypto attribute defined in this document and hence ignores it. The offerer can recognize this situation by seeing an accepted media stream in the answer that does not include a crypto line. In that case, the security negotiation defined here MUST fail.",
      "ja": "オファー/アンサーモデルでは、回答が与えられたセキュアなトランスポート（例えば、「RTP / SAVP」）をサポートし、提供されたメディア・ストリームを受け入れますが、回答は、この文書で、したがって、定義された暗号属性をサポートしていないということがありますそれを無視します。オファー側は、暗号行が含まれていない答えで受け入れられたメディア・ストリームを見ることによって、この状況を認識することができます。その場合は、ここで定義されたセキュリティネゴシエーションは失敗しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Similar issues exist when security descriptions are used outside the offer/answer model. But the source of a non-negotiated security description has no indication that the receiver has ignored the crypto attribute.",
      "ja": "セキュリティ記述がオファー/アンサーモデル外で使用されている場合にも、同様の問題が存在します。しかし、非交渉されたセキュリティ記述のソースは、受信機は暗号化属性を無視している兆候がありません。"
    },
    {
      "indent": 0,
      "text": "6. SRTP Security Descriptions",
      "section_title": true,
      "ja": "6. SRTPセキュリティ記述"
    },
    {
      "indent": 3,
      "text": "In this section, we provide definitions for security descriptions for SRTP media streams. In the next section, we define how to use SRTP security descriptions with and without the offer/answer model.",
      "ja": "このセクションでは、SRTPメディアストリームのためのセキュリティの説明のための定義を提供します。次のセクションでは、とし、オファー/アンサーモデルなしSRTPセキュリティ記述を使用する方法を定義します。"
    },
    {
      "indent": 3,
      "text": "SRTP security descriptions MUST only be used with the SRTP transport (e.g., \"RTP/SAVP\" or \"RTP/SAVPF\"). The following specifies security descriptions for the \"RTP/SAVP\" profile, defined in [RFC3711]. However, it is expected that other secure RTP profiles (e.g., \"RTP/SAVPF\") can use the same descriptions, which are in accordance with the SRTP protocol specification [RFC3711].",
      "ja": "SRTPセキュリティ記述は、SRTP輸送（例えば、 \"RTP / SAVP\" 又は \"RTP / SAVPF\"）を使用する必要があります。以下は、[RFC3711]で定義された「RTP / SAVP」プロファイル、セキュリティの説明を指定します。しかし、他のセキュアRTPプロファイル（例えば、「RTP / SAVPF」）はSRTPプロトコル仕様[RFC3711]に従っている同一の説明は、使用することが期待されます。"
    },
    {
      "indent": 3,
      "text": "There is no assurance that an endpoint is capable of configuring its SRTP service with a particular crypto attribute parameter, but SRTP guarantees minimal interoperability among SRTP endpoints through the default SRTP parameters [RFC3711]. More capable SRTP endpoints support a variety of parameter values beyond the SRTP defaults, and these values can be configured by the SRTP security descriptions defined here. An endpoint that does not support the crypto attribute will ignore it according to the SDP. Such an endpoint will not correctly process the particular media stream. By using the Offer/Answer model, the offerer and answerer can negotiate the crypto parameters to be used before commencement of the multimedia session (see Section 7.1).",
      "ja": "そこエンドポイントが特定の暗号属性パラメータとのSRTPサービスを構成することが可能であることを保証はありませんが、SRTPは、デフォルトのSRTPパラメータ[RFC3711]を通じてSRTPエンドポイント間の最小限の相互運用性を保証しています。もっとできるSRTPエンドポイントは、SRTPのデフォルト値を超えたパラメータ値の様々なサポート、そしてこれらの値は、ここで定義されたSRTPセキュリティ記述によって構成することができます。暗号属性をサポートしていないエンドポイントは、SDPに応じてそれを無視します。このようなエンドポイントは正しく特定のメディア・ストリームを処理しません。オファー/アンサーモデルを使用することで、オファー側とアンサーは、マルチメディアセッションの開始前に、使用する暗号化パラメータをネゴシエートすることができます（7.1節を参照してください）。"
    },
    {
      "indent": 3,
      "text": "There are over twenty cryptographic parameters listed in the SRTP specification. Many of these parameters have fixed values for particular cryptographic transforms. At the time of session establishment, however, there is usually no need to provide unique settings for many of the SRTP parameters, such as salt length and pseudo-random function (PRF). Thus, it is possible to simplify the list of parameters by defining \"cryptographic suites\" that fix a set of SRTP parameter values for the security session. This approach is followed by the SRTP security descriptions, which uses the general security description parameters as follows:",
      "ja": "SRTP仕様に記載されている20以上の暗号パラメータがあります。これらのパラメータの多くは、特定の暗号の変換のための値を修正しました。セッション確立時に、しかし、そのような塩の長さと擬似ランダム関数（PRF）としてSRTPパラメータの多くに固有の設定を提供する必要は通常ありません。したがって、セキュリティセッションのSRTPパラメータ値のセットを修正する「暗号スイート」を定義することによって、パラメータのリストを簡素化することができます。このアプローチは、以下のように一般的なセキュリティ記述パラメータを使用SRTPセキュリティ記述が続きます。"
    },
    {
      "indent": 6,
      "text": "* crypto-suite: Identifies the encryption and authentication transforms. * key parameter: SRTP keying material and parameters * session parameters: The following parameters are defined: - KDR: The SRTP Key Derivation Rate is the rate at which a pseudo-random function is applied to a master key. - UNENCRYPTED_SRTP: SRTP messages are not encrypted. - UNENCRYPTED_SRTCP: SRTCP messages are not encrypted. - UNAUTHENTICATED_SRTP: SRTP messages are not authenticated. - FEC_ORDER: Order of forward error correction (FEC) relative to SRTP services. - FEC_KEY: Master Key for FEC when the FEC stream is sent to a separate address and/or port. - WSH: Window Size Hint. - Extensions: Extension parameters can be defined.",
      "ja": "*暗号スイートは：暗号化と認証の変換を識別します。 * keyパラメータ：SRTP用の鍵材料とパラメータ*セッションパラメータ：以下のパラメータが定義されています -  KDR：SRTP鍵導出レートが擬似ランダム関数は、マスターキーに適用される速度です。 -  UNENCRYPTED_SRTP：SRTPメッセージは暗号化されていません。 -  UNENCRYPTED_SRTCP：SRTCPメッセージは暗号化されていません。 -  UNAUTHENTICATED_SRTP：SRTPメッセージは認証されません。 -  FEC_ORDER：SRTPサービスに対する前方誤り訂正（FEC）の順。 -  FEC_KEY：FECストリームは別々のアドレスおよび/またはポートに送信されるFECのマスター鍵。 -  WSH：ウィンドウサイズヒント。 - 機能拡張：拡張パラメータを定義することができます。"
    },
    {
      "indent": 3,
      "text": "Please refer to the SRTP specification for a complete list of parameters and their descriptions [Section 8.2, srtp]. Regarding the UNENCRYPTED_SRTCP parameter, offerers and answerers of SDP security descriptions MUST NOT use the SRTCP E-bit to override UNENCRYPTED_SRTCP or the default, which is to encrypt all SRTCP messages (see Section 6.3.2). The key parameter, the crypto-suite, and the session parameters shown above are described in detail in the following subsections.",
      "ja": "[SRTP、8.2節]のパラメータとその説明の完全なリストについては、SRTP仕様を参照してください。 UNENCRYPTED_SRTCPパラメータに関しては、SDPセキュリティ記述の申し出人と回答は、すべてのSRTCPメッセージ（セクション6.3.2を参照）を暗号化することであるUNENCRYPTED_SRTCPまたはデフォルトを上書きするSRTCP Eビットを使用してはなりません。上に示したキーパラメータ、暗号スイート、およびセッションパラメータは、以下のサブセクションに詳細に記載されています。"
    },
    {
      "indent": 0,
      "text": "6.1. SRTP Key Parameter",
      "section_title": true,
      "ja": "6.1。 SRTPキーパラメータ"
    },
    {
      "indent": 3,
      "text": "SRTP security descriptions define the use of the \"inline\" key method as described in the following. Use of any other keying method (e.g., URL) for SRTP security descriptions is for further study.",
      "ja": "SRTPセキュリティ記述は、以下に記載されるように「インライン」キー方式の使用を定義します。 SRTPのセキュリティの説明については、他のキーイング方法（例えば、URL）を使用することは、今後の検討課題です。"
    },
    {
      "indent": 3,
      "text": "The \"inline\" type of key contains the keying material (master key and salt) and all policy related to that master key, including how long it can be used (lifetime) and whether it uses a master key identifier (MKI) to associate an incoming SRTP packet with a particular master key. Compliant implementations obey the policies associated with a master key and MUST NOT accept incoming packets that violate the policy (e.g., after the master key lifetime has expired).",
      "ja": "キーの「インライン」タイプは、鍵材料（マスターキー及び塩）を含有し、そのマスターキーに関連するすべてのポリシー、それは使用することができる時間の長さを含む（寿命）とそれが会合するマスター鍵識別子（MKI）を使用するかどうか特定のマスターキーの着信SRTPパケット。標準に準拠した実装は、マスターキーに関連付けられたポリシーを遵守し、ポリシーに違反する着信パケットを受け入れてはいけません（例えば、マスターキーの有効期間が満了した後）。"
    },
    {
      "indent": 3,
      "text": "The key parameter contains one or more cryptographic master keys, each of which MUST be a unique cryptographically random [RFC1750]",
      "ja": "重要なパラメータは、一つ以上の暗号化マスターキー、その各々が固有の暗号ランダム[RFC1750]でなければなりませんが含まれています"
    },
    {
      "indent": 3,
      "text": "value with respect to other master keys in the entire SDP message (i.e., including master keys for other streams). Each key follows the format (the formal definition is provided in Section 9.2):",
      "ja": "（すなわち、他のストリームのためのマスターキーを含む）全体のSDPメッセージにおける他のマスターキーに対する値。各キーには、（正式な定義は9.2節で提供される）以下のフォーマットに準拠します。"
    },
    {
      "indent": 6,
      "text": "\"inline:\" <key||salt> [\"|\" lifetime] [\"|\" MKI \":\" length]",
      "ja": "\"インライン：\" <キー||塩> [ \"|\"生涯] [ \"|\" MKI \"：\" 長さ]"
    },
    {
      "indent": 6,
      "text": "key||salt concatenated master key and salt, base64 encoded (see [RFC3548], Section 3) lifetime master key lifetime (max number of SRTP or SRTCP packets using this master key) MKI:length MKI and length of the MKI field in SRTP packets",
      "ja": "キー||塩連結マスター鍵及び塩、base64エンコード（参照[RFC3548]、セクション3）寿命マスターキー寿命（このマスターキーを使用して、SRTPまたはSRTCPパケットの最大数）MKI：SRTPでMKIフィールドの長さMKIと長さパケット"
    },
    {
      "indent": 3,
      "text": "The following definition provides an example for AES_CM_128_HMAC_SHA1_80:",
      "ja": "以下の定義はAES_CM_128_HMAC_SHA1_80のための例を提供します。"
    },
    {
      "indent": 6,
      "text": "inline:d0RmdmcmVCspeEc3QGZiNWpVLFJhQX1cfHAwJSoj|2^20|1:4",
      "ja": "インライン：d0RmdmcmVCspeEc3QGZiNWpVLFJhQX1cfHAwJSoj | 2 ^ 20 | 1：4"
    },
    {
      "indent": 3,
      "text": "The first field (\"d0RmdmcmVCspeEc3QGZiNWpVLFJhQX1cfHAwJSoj\") of the parameter is the cryptographic master key appended with the master salt; the two are first concatenated and then base64 encoded. The length of the concatenated key and salt is determined by the crypto-suite for which the key applies. If the length (after being decoded from base64) does not match that specified for the crypto-suite, the crypto attribute in question MUST be considered invalid. Each master key and salt MUST be a cryptographically random number and MUST be unique to the entire SDP message. When base64 decoding the key and salt, padding characters (i.e., one or two \"=\" at the end of the base64-encoded data) are discarded (see [RFC3548] for details). Base64 encoding assumes that the base64 encoding input is an integral number of octets. If a given crypto-suite requires the use of a concatenated key and salt with a length that is not an integral number of octets, said crypto-suite MUST define a padding scheme that results in the base64 input being an integral number of octets. For example, if the length defined were 250 bits, then 6 padding bits would be needed, which could be defined to be the last 6 bits in a 256 bit input.",
      "ja": "パラメータの最初のフィールド（「d0RmdmcmVCspeEc3QGZiNWpVLFJhQX1cfHAwJSoj」）は、マスター塩を付加暗号マスター鍵です。両者は第一連結し、次いでbase64エンコードされています。連結キーと塩の長さは、キーが適用される暗号スイートによって決定されます。 （base64でからデコードされた後の）長さは暗号スイートに指定されたものと一致しない場合は、問題の暗号属性が無効であると見なされなければなりません。各マスタ鍵及び塩は、暗号乱数なければならず、全体のSDPメッセージに対して一意である必要があります。 BASE64キーと塩を復号する際に、パディング文字（すなわち、一つまたは二つの「=」base64で符号化されたデータの末尾）（詳細については[RFC3548]を参照）が廃棄されます。 Base64エンコードはbase64エンコーディング入力がオクテットの整数倍であると仮定する。与えられた暗号スイートは、オクテットの整数倍ではない長さを有する連結キーと塩の使用を必要とする場合、暗号スイートは、オクテットの整数であるBASE64入力もたらすパディング方式を定義しなければならないと述べました。定義された長さは250ビットであった場合、例えば、次に6つのパディングビットは、256ビットの入力の最後の6ビットになるように定義することができた、必要とされるであろう。"
    },
    {
      "indent": 3,
      "text": "The second field is the OPTIONAL lifetime of the master key as measured in maximum number of SRTP or SRTCP packets using that master key (i.e., the number of SRTP packets and the number of SRTCP packets each have to be less than the lifetime). The lifetime value MAY be written as a non-zero, positive decimal integer or as a power of 2 (see the grammar in Section 9.2 for details); leading zeroes MUST NOT be used. The \"lifetime\" value MUST NOT exceed the maximum packet lifetime for the crypto-suite. If the lifetime is too large or otherwise invalid, then the entire crypto attribute MUST be considered invalid. The default MAY be implicitly signaled by omitting the lifetime (note that the lifetime field never includes a colon, whereas the third field always does). This is convenient when the SRTP cryptographic key lifetime is the default value. As a shortcut to avoid long decimal values, the syntax of the lifetime allows using the literal \"2^\", which indicates \"two to the power of\". The example above shows a case where the lifetime is specified as 2^20. The following example, which is for the AES_CM_128_HMAC_SHA1_80 crypto-suite, has a default for the lifetime field, which means that SRTP's and SRTCP's default values will be used (see [RFC3711]):",
      "ja": "そのマスターキー（すなわち、SRTPパケットの数とSRTCPパケットの数それぞれが寿命未満でなければならない）を用いてSRTPまたはSRTCPパケットの最大数で測定される第2のフィールドは、マスターキーのOPTIONAL寿命です。ライフタイム値は、非ゼロ、正の10進整数として、または2の電源（詳細はセクション9.2で文法を参照）のように書くことができます。先行ゼロを使用してはいけません。 「寿命」の値は、暗号スイートの最大パケット生存期間を超えてはなりません。寿命が大きすぎるか、そうでない場合は無効である場合には、全体の暗号属性が無効であると見なされなければなりません。デフォルトは暗黙のうちに生涯を省略することによって合図されるかもしれない（3番目のフィールドは常にないのに対し、寿命フィールドはコロンが含まれないことに注意してください）。 SRTP暗号化キーの有効期間は、デフォルト値であるときに便利です。長い小数値を回避するためのショートカットとして、寿命の構文を示しており、「2 ^」リテラル「の2つの力」を使用することを可能にします。上記の例では、寿命が2 ^ 20として指定されている場合を示しています。 AES_CM_128_HMAC_SHA1_80暗号スイートのためのものである以下の例は、SRTPのとSRTCPのデフォルト値が使用されることを意味寿命フィールド（[RFC3711]を参照）のためのデフォルトを有します。"
    },
    {
      "indent": 6,
      "text": "inline:YUJDZGVmZ2hpSktMbW9QUXJzVHVWd3l6MTIzNDU2|1066:4",
      "ja": "インライン：YUJDZGVmZ2hpSktMbW9QUXJzVHVWd3l6MTIzNDU2 | 1066：4"
    },
    {
      "indent": 3,
      "text": "The example shows a 30-octet key and concatenated salt that is base64 encoded: The 30-octet key/salt concatenation is expanded to 40 characters (octets) by the three-in-four encoding of base64.",
      "ja": "30オクテットのキー/塩の連結は、base64の三に四符号化によって40文字（オクテット）に拡張される：例では、Base64エンコードされ30オクテットキーと連結される塩を示します。"
    },
    {
      "indent": 3,
      "text": "The third field, which is also OPTIONAL, is the Master Key Identifier (MKI) and its byte length.",
      "ja": "また、オプションである第3のフィールドは、マスターキー識別子（MKI）とそのバイト長です。"
    },
    {
      "indent": 3,
      "text": "\"MKI\" is the master key identifier associated with the SRTP master key. The MKI is here defined as a positive decimal integer that is encoded as a big-endian integer in the actual SRTP packets; leading zeroes MUST NOT be used in the integer representation. If the MKI is given, then the length of the MKI MUST also be given and separated from the MKI by a colon (\":\"). The MKI length is the size of the MKI field in the SRTP packet, specified in bytes as a decimal integer; leading zeroes MUST NOT be used. If the MKI length is not given or its value exceeds 128 (bytes), then the entire crypto attribute MUST be considered invalid. The substring \"1:4\" in the first example assigns to the key a master key identifier of 1 that is 4 bytes long, and the second example assigns a 4-byte master key identifier of 1066 to the key. One or more master keys with their associated MKI can be initially defined, and then later updated, or deleted and new ones defined.",
      "ja": "「MKIは、」SRTPマスターキーに関連付けられているマスターキーの識別子です。 MKIは、ここでは実際のSRTPパケットにビッグエンディアン整数としてエンコードされ、正の10進整数として定義されます。先頭のゼロは整数表現に使用してはいけません。 MKIが与えられた場合、MKIの長さも与えられ、コロンでMKIから分離しなければなりません（「：」）。 MKIの長さは10進整数としてバイト単位で指定されたSRTPパケット内MKIフィールドのサイズです。先行ゼロを使用してはいけません。 MKIの長さが与えられ、またはその値が128（バイト）を超えていない場合は、全体の暗号属性が無効であると見なされなければなりません。サブ：最初の例では「1~4」は、4バイトの長さ1のキーマスターキー識別子に割り当て、第二の例では、キーに1066の4バイトのマスターキー識別子を割り当てます。それらに関連するMKIを有する1つまたは複数のマスターキーが最初に定義し、その後、更新、または削除され、新しいものを定義することができます。"
    },
    {
      "indent": 3,
      "text": "SRTP offers a second feature for specifying the lifetime of a master key in terms of two values, called \"From\" and \"To,\" which are defined on the SRTP sequence number space [RFC3711]. This SRTP Security Descriptions specification, however, does not support the <\"From\", \"To\"> feature since the lifetime of an AES master key is 2^48 SRTP packets, which means that there is no cryptographic reason to replace a master key for practical point-to-point applications. For this reason, there is no need to support two means for signaling key update. The MKI is chosen over <\"From\", \"To\"> by this specification for the very few applications that need it since the MKI feature is simpler (though the MKI adds additional bytes to each packet, whereas <\"From\", \"To\"> does not).",
      "ja": "SRTPは、第二の「差出人」と呼ばれる2つの値の面でマスターキーの有効期間を指定するための機能、およびSRTPのシーケンス番号空間[RFC3711]で定義されています「に、」提供しています。 AESのマスターキーの有効期間は、マスターキーを交換する一切の暗号理由がないことを意味し、2 ^ 48のSRTPパケットであるので、このSRTPセキュリティ記述仕様は、しかし、機能<「を」、「から」>をサポートしていません。実用的なポイント・ツー・ポイントのアプリケーションのため。このため、鍵の更新を知らせるための2つの手段をサポートする必要はありません。 MKIを超える選択されている<「から」、「へ」>この仕様でMKI機能が単純であるため、MKIは、<「から」のに対し、各パケットに追加バイトを追加しても（それを必要とする非常にいくつかのアプリケーションのために、「へ「>）しません。"
    },
    {
      "indent": 3,
      "text": "As mentioned above, the key parameter can contain one or more master keys. When the key parameter contains more than one master key, all the master keys in that key parameter MUST include an MKI value.",
      "ja": "前述したように、重要なパラメータには、1つ以上のマスターキーを含めることができます。キーパラメータは、複数のマスターキーが含まれている場合は、そのキーのパラメータのすべてのマスターキーがMKI値を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "When using the MKI, the MKI length MUST be the same for all keys in a given crypto attribute.",
      "ja": "MKIを使用する場合は、MKIの長さは、与えられた暗号属性内のすべてのキーで同じである必要があります。"
    },
    {
      "indent": 0,
      "text": "6.2. Crypto-Suites",
      "section_title": true,
      "ja": "6.2。暗号スイート"
    },
    {
      "indent": 3,
      "text": "The SRTP crypto-suites define the encryption and authentication transforms to be used for the SRTP media stream. The SRTP specification has defined three crypto-suites, which are described further in the following subsections in the context of the SRTP security descriptions. The table below provides an overview of the crypto-suites and their parameters:",
      "ja": "SRTPの暗号スイートは、暗号化と認証がSRTPメディアストリームのために使用される変換を定義します。 SRTP仕様は、SRTPセキュリティ記述の文脈において、以下のサブセクションにさらに記載されている3つの暗号スイートを定義しています。以下の表は、暗号スイートとそのパラメータの概要を示します。"
    },
    {
      "indent": 3,
      "text": "+---------------------+-------------+--------------+---------------+\n|                     |AES_CM_128_  | AES_CM_128_  | F8_128_       |\n|                     |HMAC_SHA1_80 | HMAC_SHA1_32 |  HMAC_SHA1_80 |\n+---------------------+-------------+--------------+---------------+\n| Master key length   |   128 bits  |   128 bits   |   128 bits    |\n| Master salt length  |   112 bits  |   112 bits   |   112 bits    |\n| SRTP lifetime       | 2^48 packets| 2^48 packets | 2^48 packets  |\n| SRTCP lifetime      | 2^31 packets| 2^31 packets | 2^31 packets  |\n| Cipher              | AES Counter | AES Counter  | AES F8 Mode   |\n|                     | Mode        | Mode         |               |\n| Encryption key      |   128 bits  |   128 bits   |   128 bits    |\n| MAC                 |  HMAC-SHA1  |  HMAC-SHA1   |  HMAC-SHA1    |\n| SRTP auth. tag      |    80 bits  |    32 bits   |    80 bits    |\n| SRTCP auth. tag     |    80 bits  |    80 bits   |    80 bits    |\n| SRTP auth. key len. |   160 bits  |   160 bits   |   160 bits    |\n| SRTCP auth. key len.|   160 bits  |   160 bits   |   160 bits    |\n+---------------------+-------------+--------------+---------------+",
      "raw": true
    },
    {
      "indent": 0,
      "text": "6.2.1. AES_CM_128_HMAC_SHA1_80",
      "section_title": true,
      "ja": "6.2.1。 AES_CM_128_HMAC_SHA1_80"
    },
    {
      "indent": 3,
      "text": "AES_CM_128_HMAC_SHA1_80 is the SRTP default AES Counter Mode cipher and HMAC-SHA1 message authentication with an 80-bit authentication tag. The master-key length is 128 bits and has a default lifetime of a maximum of 2^48 SRTP packets or 2^31 SRTCP packets, whichever comes first [Page 39, srtp].",
      "ja": "AES_CM_128_HMAC_SHA1_80は、80ビットの認証タグとSRTPデフォルトAESカウンタモード暗号とHMAC-SHA1メッセージ認証です。マスター鍵長は128ビットであり、最初の[39ページ、SRTP]のいずれか早い方2 ^ 48 SRTPパケットまたは2 ^ 31のSRTCPパケットの最大のデフォルトの寿命を有します。"
    },
    {
      "indent": 6,
      "text": "SRTP allows 2^48 SRTP packets or 2^31 SRTCP packets, whichever comes first. However, it is RECOMMENDED that automated key management allow easy and efficient rekeying at intervals far smaller than 2^31 packets given today's media rates or even HDTV media rates.",
      "ja": "SRTPは2 ^ 48 SRTPパケットまたはいずれか早い方2 ^ 31個のSRTCPパケットを、可能にします。しかし、自動化された鍵管理は、今日のメディア速度、あるいはHDTVのメディア速度を与えられた2 ^ 31パケットよりもはるかに小さい間隔で、簡単かつ効率的に再入力を許可することが推奨されます。"
    },
    {
      "indent": 3,
      "text": "The SRTP and SRTCP encryption key lengths are 128 bits. The SRTP and SRTCP authentication key lengths are 160 bits (see Security Considerations in Section 8). The master salt value is 112 bits in length and the session salt value is 112 bits in length. The pseudo-random function (PRF) is the default SRTP pseudo-random function that uses AES Counter Mode with a 128-bit key length.",
      "ja": "SRTPとSRTCP暗号鍵長は128ビットです。 SRTPとSRTCP認証キー長は160ビット（第8章のセキュリティの考慮事項を参照）です。マスターソルト値は、長さが112ビットであり、セッションソルト値は、長さが112ビットです。擬似ランダム関数（PRF）は、128ビットの鍵長のAESカウンタモードを使用するデフォルトのSRTP擬似ランダム関数です。"
    },
    {
      "indent": 3,
      "text": "The length of the base64-decoded key and salt value for this crypto-suite MUST be 30 characters (i.e., 240 bits); otherwise, the crypto attribute is considered invalid.",
      "ja": "この暗号スイートのBASE64復号鍵およびソルト値の長さは30文字（すなわち、240ビット）でなければなりません。それ以外の場合は、暗号化属性は無効とみなされます。"
    },
    {
      "indent": 0,
      "text": "6.2.2. AES_CM_128_HMAC_SHA1_32",
      "section_title": true,
      "ja": "6.2.2。 AES_CM_128_HMAC_SHA1_32"
    },
    {
      "indent": 3,
      "text": "This crypto-suite is identical to AES_CM_128_HMAC_SHA1_80 except that the authentication tag is 32 bits.",
      "ja": "この暗号スイートは認証タグが32ビットであることを除いてAES_CM_128_HMAC_SHA1_80と同一です。"
    },
    {
      "indent": 3,
      "text": "The length of the base64-decoded key and salt value for this crypto-suite MUST be 30 octets i.e., 240 bits; otherwise, the crypto attribute is considered invalid.",
      "ja": "この暗号スイートのBASE64復号鍵およびソルト値の長さは30個のオクテット、すなわち、240ビットでなければなりません。それ以外の場合は、暗号化属性は無効とみなされます。"
    },
    {
      "indent": 0,
      "text": "6.2.3. F8_128_HMAC_SHA1_80",
      "section_title": true,
      "ja": "6.2.3。 F8_128_HMAC_SHA1_80"
    },
    {
      "indent": 3,
      "text": "This crypto-suite is identical to AES_CM_128_HMAC_SHA1_80 except that the cipher is F8 [RFC3711].",
      "ja": "この暗号スイートは、暗号がF8 [RFC3711]であることを除いてAES_CM_128_HMAC_SHA1_80と同一です。"
    },
    {
      "indent": 3,
      "text": "The length of the base64-decoded key and salt value for this crypto-suite MUST be 30 octets, i.e., 240 bits; otherwise the crypto attribute is considered invalid.",
      "ja": "この暗号スイートのBASE64復号鍵およびソルト値の長さは30個のオクテット、即ち、240ビットでなければなりません。それ以外の場合は暗号化属性は無効とみなされます。"
    },
    {
      "indent": 0,
      "text": "6.2.4. Adding New Crypto-Suite Definitions",
      "section_title": true,
      "ja": "6.2.4。新しい暗号スイートの定義の追加"
    },
    {
      "indent": 3,
      "text": "If new transforms are added to SRTP, new definitions for those transforms SHOULD be given for the SRTP security descriptions and published in a Standards-Track RFC. Sections 6.2.1 through 6.2.3 illustrate how to define crypto-suite values for particular cryptographic transforms. Any new crypto-suites MUST be registered with IANA following the procedures in Section 10.",
      "ja": "新しい変換がSRTPに追加されている場合は、それらの変換のための新しい定義は、SRTPセキュリティ記述に対して与えられ、標準化過程RFCで公開されるべきです。セクション6.2.1 6.2.3を介して、特定の暗号化変換のために暗号スイート値を定義する方法を示しています。すべての新しい暗号スイートは、セクション10の手順以下のIANAに登録しなければなりません。"
    },
    {
      "indent": 0,
      "text": "6.3. Session Parameters",
      "section_title": true,
      "ja": "6.3。セッション・パラメーター"
    },
    {
      "indent": 3,
      "text": "SRTP security descriptions define a set of \"session\" parameters, which OPTIONALLY may be used to override SRTP session defaults for the SRTP and SRTCP streams. These parameters configure an RTP session for SRTP services. The session parameters provide session-specific information to establish the SRTP cryptographic context.",
      "ja": "SRTPセキュリティ記述は、必要に応じてSRTPとSRTCPストリームのSRTPセッションのデフォルト値を上書きするために使用され得る「セッション」パラメータのセットを定義します。これらのパラメータは、SRTPサービスのためのRTPセッションを設定します。セッションパラメータは、SRTP暗号の文脈を確立するために、セッション固有の情報を提供します。"
    },
    {
      "indent": 0,
      "text": "6.3.1. KDR=n",
      "section_title": true,
      "ja": "6.3.1。訪問= N"
    },
    {
      "indent": 3,
      "text": "KDR specifies the Key Derivation Rate, as described in Section 4.3.1 of [RFC3711].",
      "ja": "[RFC3711]のセクション4.3.1で説明したようにKDRは、鍵導出レートを指定します。"
    },
    {
      "indent": 3,
      "text": "The value n MUST be a decimal integer in the set {1,2,...,24}, which denotes a power of 2 from 2^1 to 2^24, inclusive; leading zeroes MUST NOT be used. The SRTP key derivation rate controls how frequently a new session key is derived from an SRTP master key(s) [RFC3711] given in the declaration. When the key derivation rate is not specified (i.e., the KDR parameter is omitted), a single initial key derivation is performed [RFC3711].",
      "ja": "値nは、包括、2 ^ 24に1 ^ 2から2のべき乗を表す集合{1,2、...、24}に10進整数でなければなりません。先行ゼロを使用してはいけません。新しいセッションキーが宣言で与えられたSRTPマスターキー（S）[RFC3711]から誘導される頻度SRTP鍵導出レート制御。鍵導出率が（すなわち、KDRパラメータが省略された）が指定されていない場合、単一の初期鍵導出は、[RFC3711]を行います。"
    },
    {
      "indent": 3,
      "text": "In the offer/answer model, KDR is a declarative parameter.",
      "ja": "オファー/アンサーモデルでは、KDRは、宣言型のパラメータです。"
    },
    {
      "indent": 0,
      "text": "6.3.2. UNENCRYPTED_SRTCP and UNENCRYPTED_SRTP",
      "section_title": true,
      "ja": "6.3.2。 UNENCRYPTED_SRTCPとUNENCRYPTED_SRTP"
    },
    {
      "indent": 3,
      "text": "SRTP and SRTCP packet payloads are encrypted by default. The UNENCRYPTED_SRTCP and UNENCRYPTED_SRTP session parameters modify the default behavior of the crypto-suites with which they are used:",
      "ja": "SRTPとSRTCPパケットペイロードはデフォルトで暗号化されています。 UNENCRYPTED_SRTCPとUNENCRYPTED_SRTPセッションパラメータは、それらが使用されると暗号スイートのデフォルトの動作を変更します。"
    },
    {
      "indent": 3,
      "text": "* UNENCRYPTED_SRTCP signals that the SRTCP packet payloads are not encrypted.",
      "ja": "SRTCPパケットペイロードが暗号化されていない* UNENCRYPTED_SRTCP信号。"
    },
    {
      "indent": 3,
      "text": "* UNENCRYPTED_SRTP signals that the SRTP packet payloads are not encrypted.",
      "ja": "SRTPパケットのペイロードが暗号化されていない* UNENCRYPTED_SRTP信号。"
    },
    {
      "indent": 3,
      "text": "In the offer/answer model, these parameters are negotiated. If UNENCRYPTED_SRTCP is signaled for the session, then the SRTCP E bit MUST be clear (0) in all SRTCP messages. If the default is used, all SRTCP messages are encrypted, and the E bit MUST be set (1) on all SRTCP messages.",
      "ja": "オファー/アンサーモデルでは、これらのパラメータがネゴシエートされます。 UNENCRYPTED_SRTCPがセッションの合図をしている場合は、SRTCP Eビットは、すべてのSRTCPメッセージで（0）明確でなければなりません。デフォルトが使用されている場合は、すべてのSRTCPメッセージは、すべてのSRTCPメッセージで（1）暗号化されており、Eビットを設定しなければなりません。"
    },
    {
      "indent": 0,
      "text": "6.3.3. UNAUTHENTICATED_SRTP",
      "section_title": true,
      "ja": "6.3.3。 UNAUTHENTICATED_SRTP"
    },
    {
      "indent": 3,
      "text": "SRTP and SRTCP packet payloads are authenticated by default. The UNAUTHENTICATED_SRTP session parameter signals that SRTP messages are not authenticated. Use of UNAUTHENTICATED_SRTP is NOT RECOMMENDED (see Security Considerations).",
      "ja": "SRTPとSRTCPパケットペイロードは、デフォルトで認証されます。 SRTPメッセージが認証されていないUNAUTHENTICATED_SRTPセッションパラメータ信号。 UNAUTHENTICATED_SRTPの使用は、（セキュリティ上の考慮事項を参照してください）推奨されません。"
    },
    {
      "indent": 6,
      "text": "The SRTP specification requires use of message authentication for SRTCP, but not for SRTP [RFC3711].",
      "ja": "SRTP仕様はSRTCPのためのメッセージ認証の使用を必要はなく、SRTP [RFC3711]のために。"
    },
    {
      "indent": 3,
      "text": "In the offer/answer model, this parameter is negotiated.",
      "ja": "オファー/アンサーモデルでは、このパラメータがネゴシエートされます。"
    },
    {
      "indent": 0,
      "text": "6.3.4. FEC_ORDER=order",
      "section_title": true,
      "ja": "6.3.4。 FEC_ORDER =順"
    },
    {
      "indent": 3,
      "text": "FEC_ORDER signals the use of forward error correction for the RTP packets [RFC2733]. The forward error correction values for \"order\" are FEC_SRTP or SRTP_FEC. FEC_SRTP signals that FEC is applied before SRTP processing by the sender of the SRTP media and after SRTP processing by the receiver of the SRTP media; FEC_SRTP is the default. SRTP_FEC is the reverse processing.",
      "ja": "FEC_ORDERは、RTPパケット[RFC2733]のための前方誤り訂正の使用を知らせます。 「順序」のための前方誤り訂正値はFEC_SRTPまたはSRTP_FECです。 FECは、SRTPメディアの送信者とSRTPメディアの受信機によるSRTP処理後のSRTP処理の前に適用されるFEC_SRTP信号。 FEC_SRTPがデフォルトです。 SRTP_FECは逆の処理です。"
    },
    {
      "indent": 3,
      "text": "In the offer/answer model, FEC_ORDER is a declarative parameter.",
      "ja": "オファー/アンサーモデルでは、FEC_ORDERは、宣言型のパラメータです。"
    },
    {
      "indent": 0,
      "text": "6.3.5. FEC_KEY=key-params",
      "section_title": true,
      "ja": "6.3.5。 FEC_KEY =キーのparams"
    },
    {
      "indent": 3,
      "text": "FEC_KEY signals the use of separate master key(s) for a Forward Error Correction (FEC) stream. The master key(s) are specified with the exact same format as the SRTP Key Parameter defined in Section 6.1, and the semantic rules are the same - in particular, the master key(s) MUST be different from all other master key(s) in the SDP. An FEC_KEY MUST be specified when the FEC stream is sent to a different IP-address and/or port than the media stream to which it applies (i.e., the \"m=\" line), e.g., as described in RFC 2733, Section 11.1. When an FEC stream is sent to the same IP-address and port as the media stream to which it applies, an FEC_KEY MUST NOT be specified. If an FEC_KEY is specified in this latter case, the crypto attribute in question MUST be considered invalid.",
      "ja": "FEC_KEYは、前方誤り訂正（FEC）ストリームのための別個のマスター鍵（単数または複数）の使用を知らせます。マスターキー（S）は、セクション6.1で定義されたSRTP鍵パラメータとまったく同じフォーマットで指定され、セマンティックルールは同じでれる - 特に、マスターキー（S）は、他のすべてのマスターキー（S異なっていなければなりません）SDPです。 FECストリームは、それが適用されるメディア・ストリーム（すなわち、「M =」行）、例えば、異なるIPアドレス及び/又はポートに送信されたときにRFC 2733に記載されているようにFEC_KEYは、セクション11.1を指定しなければなりません。 FECストリームは、それが適用されるメディアストリームと同じIPアドレスとポートに送信された場合、FEC_KEYを指定することはできません。 FEC_KEYは、この後者の場合には指定されている場合は、該当の暗号属性が無効であると見なされなければなりません。"
    },
    {
      "indent": 3,
      "text": "In the offer/answer model, FEC_KEY is a declarative parameter.",
      "ja": "オファー/アンサーモデルでは、FEC_KEYは、宣言型のパラメータです。"
    },
    {
      "indent": 0,
      "text": "6.3.6. Window Size Hint (WSH)",
      "section_title": true,
      "ja": "6.3.6。ウィンドウサイズのヒント（WSH）"
    },
    {
      "indent": 3,
      "text": "SRTP defines the SRTP-WINDOW-SIZE [RFC3711, Section 3.3.2] parameter to protect against replay attacks. The minimum value is 64 [RFC3711]; however, this value may be considered too low for some applications (e.g., video).",
      "ja": "SRTPは、SRTP-WINDOW-SIZE [RFC3711、セクション3.3.2]リプレイ攻撃から保護するためのパラメータを定義します。最小値は64 [RFC3711]です。ただし、この値は、いくつかのアプリケーション（例えば、ビデオ）のためには低すぎると考えてもよいです。"
    },
    {
      "indent": 3,
      "text": "The Window Size Hint (WSH) session parameter provides a hint for how big this window should be to work satisfactorily (e.g., based on sender knowledge of the number of packets per second). However, there might be enough information given in SDP attributes like \"a=maxprate\" [maxprate] and the bandwidth modifiers to allow a receiver to derive the parameter satisfactorily. Consequently, this value is only considered a hint to the receiver of the SDP that MAY choose to ignore the value provided. The value is a decimal integer; leading zeroes MUST NOT be used.",
      "ja": "ウィンドウサイズヒント（WSH）セッションパラメータは、このウィンドウが十分に機能することべきか大きいためのヒントを提供する（例えば、1秒あたりのパケット数の送信者の知識に基づいて）。しかしながら、SDP [maxprate「A = maxprate」などの属性と、帯域幅調整剤は、受信機が十分パラメータを導出することを可能にするために与えられる十分な情報があるかもしれません。したがって、この値は、提供された値を無視することを選ぶかもしれSDPの受信機へのヒントであると考えられます。値は10進の整数です。先行ゼロを使用してはいけません。"
    },
    {
      "indent": 3,
      "text": "In the offer/answer model, WSH is a declarative parameter.",
      "ja": "オファー/アンサーモデルでは、WSHは、宣言型のパラメータです。"
    },
    {
      "indent": 0,
      "text": "6.3.7. Defining New SRTP Session Parameters",
      "section_title": true,
      "ja": "6.3.7。新しいSRTPセッションパラメータを定義します"
    },
    {
      "indent": 3,
      "text": "New SRTP session parameters for the SRTP security descriptions can be defined in a Standards-Track RFC and registered with IANA according to the registration procedures defined in Section 10.",
      "ja": "SRTPセキュリティ記述するための新しいSRTPセッションパラメータは標準トラックRFCで定義され、第10節で定義された登録手続きに従ってIANAに登録することができます。"
    },
    {
      "indent": 3,
      "text": "New SRTP session parameters are by default mandatory. A newly defined SRTP session parameter that is prefixed with the dash character (\"-\"), however, is considered optional and MAY be ignored. If an SDP crypto attribute is received with an unknown session parameter that is not prefixed with a \"-\" character, that crypto attribute MUST be considered invalid.",
      "ja": "新しいSRTPセッションパラメータは必須デフォルトです。ダッシュ文字（「 - 」）が付いている新しく定義されたSRTPセッションパラメータでは、しかし、オプションとみなされ、無視されるかもしれません。 「 - 」暗号化属性が無効であると見なさなければならないことを文字、SDP暗号属性が接頭辞されていない未知のセッションパラメータを受信した場合。"
    },
    {
      "indent": 0,
      "text": "6.4. SRTP Crypto Context Initialization",
      "section_title": true,
      "ja": "6.4。 SRTP暗号コンテキストの初期化"
    },
    {
      "indent": 3,
      "text": "In addition to the various SRTP parameters defined above, there are three pieces of information that are critical to the operation of the default SRTP ciphers:",
      "ja": "上記で定義された様々なSRTPパラメータに加えて、デフォルトのSRTP暗号の操作に不可欠な3件の情報があります。"
    },
    {
      "indent": 3,
      "text": "* SSRC: Synchronization source * ROC: Roll-over counter for a given SSRC * SEQ: Sequence number for a given SSRC",
      "ja": "* SSRC：同期ソース* ROC：与えられたSSRC *配列のためのロールオーバーカウンター：与えられたSSRCのシーケンス番号"
    },
    {
      "indent": 3,
      "text": "In a unicast session, as defined here, there are three constraints on these values.",
      "ja": "ユニキャストセッションでは、ここで定義されるように、これらの値の3つの制約があります。"
    },
    {
      "indent": 3,
      "text": "The first constraint is on the SSRC, which makes an SRTP keystream unique from other participants. As explained in SRTP, the keystream MUST NOT be reused on two or more different pieces of plaintext. Keystream reuse makes the ciphertext vulnerable to cryptanalysis. One vulnerability is that known-plaintext fields in one stream can expose portions of the reused keystream, and this could further expose more plaintext in other streams. Since all current SRTP encryption transforms use keystreams, key sharing is a general problem [RFC3711]. SRTP mitigates this problem by including the SSRC of the sender in the keystream. But SRTP does not solve this problem in its entirety because the Real-time Transport Protocol has SSRC collisions, which although very rare [RFC3550] are quite possible. During a collision, two or more SSRCs that share a master key will have identical keystreams for overlapping portions of the RTP sequence number space. SRTP Security Descriptions avoid keystream reuse by making unique master keys REQUIRED for the sender and receiver of the security description. Thus, the first constraint is satisfied.",
      "ja": "第1の制約は、他の参加者からのユニークなSRTPのキーストリームを作るSSRC、上にあります。 SRTPで説明したように、キーストリームが平文の二つ以上の異なる部分に再利用してはいけません。キーストリームの再利用は、暗号解読の暗号文が脆弱になります。一つの脆弱性は、1つのストリームに既知平文フィールドを再利用キーストリームの部分を露出させることができ、これはさらに他のストリームで複数の平文を露出させることができることです。現在のすべてのSRTP暗号化が使用キーストリームを変換しているので、鍵共有は、一般的な問題[RFC3711]です。 SRTPは、キーストリームに送信者のSSRCを含むことにより、この問題を軽減します。リアルタイムトランスポートプロトコルは非常にまれな[RFC3550]が、かなり可能ですSSRC衝突を、持っているので、しかし、SRTPは、その全体でこの問題を解決しません。衝突時には、マスターキーを共有する2つ以上のSSRCsは、RTPシーケンス番号空間の重なり部分に対して同一のキーストリームを持つことになります。 SRTPセキュリティ記述は、セキュリティ記述の送信者と受信者のために必要な固有のマスターキーを作成することにより、キーストリームの再利用を避けます。したがって、第1の制約は満たされます。"
    },
    {
      "indent": 6,
      "text": "Also note that there is a second problem with SSRC collisions: the SSRC is used to identify the crypto context and thereby the cipher, key, ROC, etc. to process incoming packets. In case of",
      "ja": "また、SSRCの衝突に伴う第2の問題があることに注意：SSRCは、着信パケットを処理するなど暗号コンテキストとそれによって暗号鍵、ROCを識別するために使用されます。の場合"
    },
    {
      "indent": 6,
      "text": "SSRC collisions, crypto context identification becomes ambiguous and correct packet processing may not occur. Furthermore, if an RTCP BYE packet is to be sent for a colliding SSRC, that packet may also have to be secured. In a (unicast) point-to-multipoint scenario, this can be problematic for the same reasons, i.e., it is not known which of the possible crypto contexts to use. Note that these problems are not unique to the SDP security descriptions; any use of SRTP needs to consider them.",
      "ja": "SSRC衝突、暗号コンテキストの識別が曖昧と正しいパケット処理が発生しないことになります。 RTCP BYEパケットが衝突SSRCのために送信される場合、さらに、そのパケットも確保しなければならないかもしれません。 （ユニキャスト）ポイント・ツー・マルチポイントシナリオでは、これはすなわち、使用することが可能と暗号コンテキストのが知られていない、同じ理由のために問題となり得ます。これらの問題は、SDPセキュリティ記述に固有のものではないことに注意してください。 SRTPのいずれかの使用は、それらを考慮する必要があります。"
    },
    {
      "indent": 3,
      "text": "The second constraint is that the ROC MUST be zero at the time that each SSRC commences sending packets. Thus, there is no concept of a \"late joiner\" in SRTP security descriptions, which are constrained to be unicast and pairwise. The ROC and SEQ form a \"packet index\" in the default SRTP transforms and the ROC is consistently set to zero at session commencement, according to this document.",
      "ja": "第2の制約は、ROCは、各SSRCがパケットを送信開始時にゼロにしなければならないことです。このように、ユニキャストとペアごとに制限されているSRTPセキュリティ記述における「後半指物師」の概念はありません。 ROCおよび配列は、デフォルトのSRTPの変換における「パケットインデックス」を形成し、ROCは、一貫してこの文書によれば、セッションの開始時にゼロに設定されています。"
    },
    {
      "indent": 3,
      "text": "The third constraint is that the initial value of SEQ SHOULD be chosen to be within the range of 0..2^15-1; this avoids an ambiguity when packets are lost at the start of the session. If it is at the start of a session, an SSRC source might randomly select a high sequence-number value and put the receiver in an ambiguous situation: if initial packets are lost in transit up to the point that the sequence number wraps (i.e., exceeds 2^16-1), then the receiver might not recognize that its ROC needs to be incremented. By restricting the initial SEQ to the range of 0..2^15-1, SRTP packet-index determination will find the correct ROC value, unless all the first 2^15 packets are lost (which seems, if not impossible, rather unlikely). See Section 3.3.1 of the SRTP specification regarding packet-index determination [RFC3711].",
      "ja": "第三の制約は、配列の初期値は0..2 ^ 15-1の範囲内にあるように選択されるべきであるということです。これは、パケットがセッションの開始時に失われた曖昧さを避けることができます。それはセッションの開始時にある場合は、SSRCソースがランダムに高い配列番号値を選択して、あいまいな状況で受信機を置くかもしれません：最初のパケットは、シーケンス番号がラップしていることのポイントに移行するまでに失われた場合（すなわち、 2 ^ 16-1）を超えた場合、受信機は、そのROCをインクリメントする必要があることを認識しない場合があります。すべての最初の2 ^ 15個のパケットが失われない限り^ 15-1 0..2の範囲に初期SEQを制限することにより、SRTPパケットインデックス決意があれば、むしろそう、不可能ではないようである（正しいROC値を検索します）。パケットインデックス決意[RFC3711]に関するSRTP仕様のセクション3.3.1を参照してください。"
    },
    {
      "indent": 0,
      "text": "6.4.1. Late Binding of One or More SSRCs to a Crypto Context",
      "section_title": true,
      "ja": "6.4.1。暗号コンテキストへの1つ以上のSSRCsのレイトバインディング"
    },
    {
      "indent": 3,
      "text": "The packet index, therefore, depends on the SSRC, the SEQ of an incoming packet, and the ROC, which is an SRTP crypto context variable. Thus, SRTP has a big security dependency on SSRC uniqueness.",
      "ja": "パケットインデックスは、従って、SSRC、着信パケットの配列、およびSRTP暗号コンテキスト変数であるROC、に依存します。したがって、SRTPはSSRCの一意性に大きなセキュリティ上の依存関係を持っています。"
    },
    {
      "indent": 3,
      "text": "Given the above constraints, unicast SRTP crypto contexts can be established without the need to negotiate SSRC values in the SRTP security descriptions. Instead, an approach called \"late binding\" is RECOMMENDED by this specification. When a packet arrives, the SSRC that is contained in it can be bound to the crypto context at the time of session commencement (i.e., SRTP packet arrival) rather than at the time of session signaling (i.e., receipt of an SDP). With the arrival of the packet containing the SSRC, all the data items needed for the SRTP crypto context are held by the receiver. (Note that the ROC value by definition is zero; if non-zero values were to be supported, additional signaling would be required.) In other words, the crypto context for a secure RTP session using late binding is initially identified by the SDP as",
      "ja": "上記の制約を考えると、ユニキャストSRTP暗号コンテキストは、SRTPセキュリティ記述でSSRC値を交渉することなく確立することができます。代わりに、「後半に結合」と呼ばれるアプローチは、この仕様で推奨されています。パケットが到着すると、それに含まれるSSRCはむしろセッションシグナリングの時よりも、セッション開始（すなわち、SRTPパケット到着）の時に暗号コンテキストにバインドすることができる（すなわち、SDPを受信します）。 SSRCを含むパケットの到着と、SRTP暗号コンテキストのために必要なすべてのデータ項目は、受信機によって保持されています。 （定義によりROC値がゼロであることに注意してください。非ゼロ値は、追加のシグナリングが必要とされるサポートされるならば）、すなわち、遅延バインディング使用して安全なRTPセッションの暗号コンテキストは、最初としてSDPによって識別されます"
    },
    {
      "indent": 6,
      "text": "<*, address, port>",
      "ja": "<*、アドレス、ポート>"
    },
    {
      "indent": 3,
      "text": "where '*' is a wildcard SSRC, \"address\" is the local receive address from the \"c=\" line, and \"port\" is the local receive port from the \"m=\" line. When the first packet arrives with ssrcX in its SSRC field, the crypto context",
      "ja": "「*」はワイルドカードSSRC、「アドレス」である場合、ローカルに「C =」行、および「ポート」からアドレスを受信された「M =」行からポートを受け取るローカルです。最初のパケットがそのSSRCフィールドにssrcXに到着し、暗号コンテキスト"
    },
    {
      "indent": 6,
      "text": "<ssrcX, address, port>",
      "ja": "<ssrcX、アドレス、ポート>"
    },
    {
      "indent": 3,
      "text": "is instantiated subject to the following constraints:",
      "ja": "次の制約をインスタンス化対象は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "* Media packets are authenticated: authentication MUST succeed; otherwise, the crypto context is not instantiated.",
      "ja": "*メディアパケットが認証されています。認証が成功しなければなりません。それ以外の場合は、暗号コンテキストがインスタンス化されていません。"
    },
    {
      "indent": 3,
      "text": "* Media packets are not authenticated: crypto context is automatically instantiated.",
      "ja": "*メディアパケットが認証されていない：暗号コンテキストが自動的にインスタンス化されます。"
    },
    {
      "indent": 3,
      "text": "Note that use of late binding when there is no authentication of the SRTP media packets is subject to numerous security attacks, and that consequently it is NOT RECOMMENDED (of course, this can be said for unauthenticated SRTP in general).",
      "ja": "SRTPメディアパケットの認証があり、多数のセキュリティ攻撃の対象となりません、その結果、それは（もちろん、これは一般的に認証されていないSRTPのために言うことができる）推奨されていないことをされたときに遅延バインディングの使用に注意してください。"
    },
    {
      "indent": 6,
      "text": "Note that use of late binding without authentication will result in the creation of local state as a result of receiving a packet from any unknown SSRC. UNAUTHENTICATED_SRTP, therefore, is NOT RECOMMENDED because it invites easy denial-of-service attack. In contrast, late binding with authentication does not suffer from this weakness.",
      "ja": "認証なしで遅延バインディングを使用すると、任意の未知のSSRCからのパケットを受信した結果として、局所的な状態の創出につながることに注意してください。 UNAUTHENTICATED_SRTPは、したがって、それが簡単にサービス拒否攻撃を誘うのでお勧めしません。これとは対照的に、後半の認証との結合は、この弱点に悩まされません。"
    },
    {
      "indent": 0,
      "text": "6.4.2. Sharing Cryptographic Contexts among Sessions or SSRCs",
      "section_title": true,
      "ja": "6.4.2。セッションまたはSSRCsの間で暗号化コンテキストを共有"
    },
    {
      "indent": 3,
      "text": "With the constraints and procedures described above, it is not necessary to explicitly signal the SSRC, ROC, and SEQ for a unicast RTP session. So there are no a=crypto parameters for signaling SSRC, ROC, or SEQ. Thus, multiple SSRCs from the same entity will share a=crypto parameters when late binding is used. Multiple SSRCs from the same entity arise due to either multiple sources (microphones, cameras, etc.) or RTP payloads requiring SSRC multiplexing within that same session. SDP also allows multiple RTP sessions to be defined in the same media description (\"m=\"); these RTP sessions will also share the a=crypto parameters. An application that uses a=crypto in this way serially shares a master key among RTP sessions or SSRCs and MUST replace the master key when the aggregate number of packets among all SSRCs approaches 2^31 packets. SSRCs that share a master key MUST be unique from one another.",
      "ja": "上記の制約条件及び手順を用いて、明示的にユニキャストRTPセッションのためにSSRC、ROC、および配列をシグナリングする必要はありません。だから、SSRC、ROC、またはSEQシグナル伝達には、A =暗号パラメータはありません。遅延バインディングを使用した場合従って、同じエンティティから複数SSRCsは=暗号パラメータを共有します。同じエンティティからの複数SSRCsは、複数のソース（マイク、カメラなど）または同じセッション内SSRC多重化を必要とRTPペイロードのいずれかに起因生じます。 SDPは、同じメディア記述（「M =」）で定義される複数のRTPセッションを可能にします。これらのRTPセッションはまた、A =暗号パラメータを共有します。このように=暗号を使用するアプリケーションは、シリアルRTPセッションやSSRCsの間でマスターキーを共有し、すべてのSSRCsの間でのパケットの総数は2 ^ 31パケットに近づくと、マスターキーを交換する必要があります。マスターキーを共有SSRCsは互いにユニークでなければなりません。"
    },
    {
      "indent": 0,
      "text": "6.5. Removal of Crypto Contexts",
      "section_title": true,
      "ja": "6.5。暗号コンテキストの削除"
    },
    {
      "indent": 3,
      "text": "The mechanism defined above addresses the issue of creating crypto contexts. However, in practice, session participants may want to remove crypto contexts prior to session termination. Since a crypto context contains information that cannot automatically be recovered (e.g., ROC), it is important that the sender and receiver agree on when a crypto context can be removed, and perhaps more importantly when it cannot.",
      "ja": "上記で定義されたメカニズムは、暗号コンテキストを作成するための問題を解決します。しかし、実際には、セッション参加者は、セッション終了前に暗号コンテキストを削除することがあります。暗号コンテキストが自動的に（例えば、ROC）を回収することができない情報を含んでいるので、暗号コンテキストを除去し、そしておそらくより重要な場合ができないことができる場合に送信者と受信者が同意することが重要です。"
    },
    {
      "indent": 6,
      "text": "Even when late binding is used for a unicast stream, the ROC is lost and cannot be recovered automatically (unless it is zero) once the crypto context is removed.",
      "ja": "バインディングは、ユニキャストストリームのために使用される場合でも、ROCが失われ、（それがゼロでない場合）、暗号コンテキストが除去されると自動的に回復することはできません。"
    },
    {
      "indent": 3,
      "text": "We resolve this problem as follows. When SRTP security descriptions are being used, crypto-context removal MUST follow the same rules as SSRC removal from the member table [RFC3550]; note that this can happen as the result of an SRTCP BYE packet or a simple time-out due to inactivity. Inactive session participants that wish to ensure their crypto contexts are not timed out MUST thus send SRTCP packets at regular intervals.",
      "ja": "次のように我々はこの問題を解決します。 SRTPセキュリティ記述が使用されている場合、暗号コンテキストの除去は、メンバテーブル[RFC3550]からSSRC除去と同じ規則に従わなければなりません。これはSRTCPのBYEパケットまたは非アクティブが原因の簡単なタイムアウトの結果として起こることができることに注意してください。その暗号コンテキストがタイムアウトしていないことを確認したい非アクティブなセッション参加者は、このように定期的にSRTCPパケットを送らなければなりません。"
    },
    {
      "indent": 0,
      "text": "7. SRTP-Specific Use of the Crypto Attribute",
      "section_title": true,
      "ja": "暗号属性の7 SRTP、具体的な使用"
    },
    {
      "indent": 3,
      "text": "Section 5 describes general use of the crypto attribute, and this section completes it by describing SRTP-specific use.",
      "ja": "第5節では、暗号化属性の一般的な使用について説明し、このセクションでは、SRTP固有の使用を記述することによってそれを完了します。"
    },
    {
      "indent": 0,
      "text": "7.1. Use with Offer/Answer",
      "section_title": true,
      "ja": "7.1。オファー/回答を使用します"
    },
    {
      "indent": 3,
      "text": "In this section, we describe how the SRTP security descriptions are used with the offer/answer model to negotiate cryptographic capabilities and communicate SRTP master keys. The rules defined below complement the general offer/answer rules defined in Section 5.1, which MUST be followed, unless otherwise specified. Note that the rules below define unicast operation only; support for multicast and multipoint unicast streams is for further study.",
      "ja": "このセクションでは、SRTPセキュリティ記述が暗号化機能をネゴシエートし、SRTPマスターキーを通信するためにオファー/アンサーモデルで使用されている方法について説明します。以下に定義されたルールは、特に指定がない限り、続いなければならないセクション5.1で定義された一般的なオファー/アンサールールを、補完します。ルールは以下のユニキャスト動作のみを定義することに注意してください。マルチキャストおよびマルチユニキャストストリームのサポートは、今後の検討課題です。"
    },
    {
      "indent": 0,
      "text": "7.1.1. Generating the Initial Offer - Unicast Streams",
      "section_title": true,
      "ja": "7.1.1。最初のオファーを生成 - ユニキャストストリーム"
    },
    {
      "indent": 3,
      "text": "When the initial offer is generated, the offerer MUST follow the steps in Section 5.1.1, as well as the following steps.",
      "ja": "最初のオファーが生成されると、オファー側は、セクション5.1.1の手順と同様に、次の手順に従わなければなりません。"
    },
    {
      "indent": 3,
      "text": "For each unicast media line (m=) using the secure RTP transport where the offerer wants to specify cryptographic parameters, the offerer MUST provide at least one valid SRTP security description (\"a=crypto\" line), as defined in Section 6. If the media stream includes Forward",
      "ja": "場合項6で定義されるよう申出が暗号化パラメータを指定したいセキュアRTPトランスポートを使用して、各ユニキャストメディア行（M =）のために、提供者は、少なくとも1つの有効なSRTPセキュリティ記述（「A =暗号」行）を提供しなければなりませんメディアストリームはフォワード含み"
    },
    {
      "indent": 3,
      "text": "Error Correction with a different IP-address and/or port from that of the media stream itself, an FEC_KEY parameter MUST be included, as described in Section 6.3.5.",
      "ja": "セクション6.3.5に記載したように、メディア・ストリーム自体とは異なるIPアドレスおよび/またはポートを備えたエラー訂正は、FEC_KEYパラメータは、含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "The inline parameter conveys the SRTP master key used by an endpoint to encrypt the SRTP and SRTCP streams transmitted by that endpoint. The same key is used by the recipient to decrypt those streams. However, the receiver MUST NOT use that same key for the SRTP or SRTCP packets that it sends to the session because the default SRTP cipher and mode is insecure when the master key is reused across distinct SRTP streams.",
      "ja": "インラインパラメータは、そのエンドポイントによって送信されたSRTPとSRTCPストリームを暗号化するために、エンドポイントによって使用されるSRTPマスターキーを伝えます。同じキーがそれらのストリームを復号化するために受信者によって使用されます。しかし、受信機は、マスターキーが異なったSRTPストリームで再利用されている場合、デフォルトのSRTP暗号とモードが安全ではないので、それがセッションに送信SRTPまたはSRTCPパケットに対して、同じキーを使用してはなりません。"
    },
    {
      "indent": 3,
      "text": "The offerer MAY include one or more other SRTP session parameters, as defined in Section 6.3. Note, however, that if any SRTP session parameters are included that are not known to the answerer, but that are nonetheless mandatory (see Section 6.3.6), the negotiation will fail if the answerer does not support them.",
      "ja": "セクション6.3で定義されるようにオファーは、一つ以上の他のSRTPセッションパラメータを含むことができます。任意のSRTPセッションパラメータは、回答に知られているが、それは（6.3.6項を参照）、それにもかかわらず必須ですされていないことが含まれている場合回答がそれらをサポートしていない場合、交渉が失敗すること、しかし、注意してください。"
    },
    {
      "indent": 0,
      "text": "7.1.2. Generating the Initial Answer - Unicast Streams",
      "section_title": true,
      "ja": "7.1.2。最初の回答を生成 - ユニキャストストリーム"
    },
    {
      "indent": 3,
      "text": "When the initial answer is generated, the answerer MUST follow the steps in Section 5.1.2, as well as the following steps.",
      "ja": "最初の答えが生成されると、アンサーは、5.1.2項の手順と同様に、次の手順に従わなければなりません。"
    },
    {
      "indent": 3,
      "text": "For each unicast media line that uses the secure RTP transport and contains one or more \"a=crypto\" lines in the offer, the answerer MUST either accept one (and only one) of the crypto lines for that media stream, or it MUST reject the media stream. Only \"a=crypto\" lines that are considered valid SRTP security descriptions, as defined in Section 6, can be accepted. Furthermore, all parameters (crypto-suite, key parameter, and mandatory session parameters) MUST be acceptable to the answerer in order for the offered media stream to be accepted. Note that if the media stream includes Forward Error Correction with a different IP-address and/or port from that of the media stream itself, an FEC_KEY parameter MUST be included, as described in Section 6.3.5.",
      "ja": "セキュアRTPトランスポートを使用し、提供中の1つ以上の「A =暗号」行を含む各ユニキャスト・メディア・ラインのために、回答者は、いずれかのそのメディア・ストリームの暗号線の一方（そして唯一の）を受け入れなければなりませんか、拒絶しなければなりませんメディアストリーム。有効なSRTPセキュリティ記述とみなされ、「A =暗号」の行だけは、6節で定義されるように、受け入れることができます。さらに、すべてのパラメータ（暗号スイート、キーパラメータ、および必須のセッションパラメータ）が受け入れられるために提供されるメディアストリームのために回答に許容できるものでなければなりません。メディアストリームは、メディアストリーム自体とは異なるIPアドレスおよび/またはポートを備えた前方誤り訂正を含む場合、セクション6.3.5に記載したように、FEC_KEYパラメータは、含まなければならないことに留意されたいです。"
    },
    {
      "indent": 3,
      "text": "When the answerer accepts an SRTP unicast media stream with a crypto line, the answerer MUST include one or more master keys appropriate for the selected crypto algorithm; the master key(s) included in the answer MUST be different from those in the offer.",
      "ja": "回答が暗号線とSRTPユニキャストメディアストリームを受け付けると、回答は、選択された暗号化アルゴリズムに適した1つ以上のマスター・キーを含まなければなりません。答えに含まマスターキー（複数可）提供のものとは異なっている必要があります。"
    },
    {
      "indent": 6,
      "text": "When the master key(s) are not shared between the offerer and answerer, SSRC collisions between the offerer and answerer will not lead to keystream reuse, and hence SSRC collisions do not necessarily have to be prevented.",
      "ja": "マスターキーが（S）申出と回答との間で共有されていない場合、提供者と回答との間のSSRC衝突がキーストリームの再利用をもたらさないであろう、従ってSSRC衝突が必ずしも防止する必要はありません。"
    },
    {
      "indent": 3,
      "text": "If Forward Error Correction to a separate IP-address and/or port is included, the answer MUST include an FEC_KEY parameter, as described in Section 6.3.5.",
      "ja": "別のIPアドレスおよび/またはポートへの転送エラー修正が含まれている場合は、セクション6.3.5で説明したように、その答えは、FEC_KEYパラメータを含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "Declarative session parameters may be added to the answer as usual; however, the answerer SHOULD NOT add any mandatory session parameter (see Section 6.3.6) that might be unknown to the offerer.",
      "ja": "宣言型セッションパラメータは、いつものように答えに添加してもよいです。しかし、回答は、オファー側には未知であるかもしれない任意の必須セッションパラメータを（6.3.6項を参照）を追加しないでください。"
    },
    {
      "indent": 3,
      "text": "If the answerer cannot find any valid crypto line that it supports, or if its configured policy prohibits any cryptographic key parameter (e.g., key length) or cryptographic session parameter (e.g., KDR, FEC_ORDER), it MUST reject the media stream, unless it is able to successfully negotiate use of SRTP by other means outside the scope of this document (e.g., by use of MIKEY [mikey]).",
      "ja": "回答は、それがサポートしている任意の有効な暗号行を見つけることができない、またはその設定されたポリシーは、任意の暗号鍵パラメータ（例えば、キーの長さ）や暗号化セッションパラメータ（例えば、KDR、FEC_ORDER）を禁止している場合、それがない限り、メディアストリームを拒否しなければならない場合正常にこの文書の範囲外の他の手段によってSRTPの使用を交渉することが可能である（MIKEYを使用することによって、例えば、[マイキー]）。"
    },
    {
      "indent": 0,
      "text": "7.1.3. Processing of the Initial Answer - Unicast Streams",
      "section_title": true,
      "ja": "7.1.3。初期回答の処理 - ユニキャストストリーム"
    },
    {
      "indent": 3,
      "text": "When the offerer receives the answer, it MUST perform the steps in Section 5.1.3, as well as the following steps for each SRTP media stream it offered with one or more crypto lines in it.",
      "ja": "オファー側が答えを受け取ると、それは、セクション5.1.3の手順と同様に、それはそれで1つ以上の暗号線で提供され、各SRTPメディアストリームのために、次の手順を実行しなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the media stream was accepted and it contains a crypto line, it MUST be checked that the crypto line is valid according to the constraints specified in Section 6 (including any FEC constraints).",
      "ja": "メディアストリームが受け入れられ、それが暗号行が含まれていた場合、暗号行が（任意のFEC制約を含む）第6節で指定された制約に応じて有効であることをチェックしなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the offerer either does not support or is not willing to honor one or more of the SRTP parameters in the answer, the offerer MUST consider the crypto line invalid.",
      "ja": "オファー側がサポートしていないか、または解答でSRTPパラメータの一つ以上を称えることを望んでいないんいずれかの場合には、オファー側は、暗号ラインが無効に考慮しなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the crypto line is not valid, or the offerer's configured policy prohibits any cryptographic key parameter (e.g., key length) or cryptographic session parameter, the SRTP security negotiation MUST be deemed to have failed.",
      "ja": "暗号ラインが有効でないか、オファー側の設定されたポリシーは、任意の暗号鍵パラメータ（例えば、キーの長さ）や暗号化セッションパラメータを禁止した場合は、SRTPのセキュリティネゴシエーションは失敗したとみなされなければなりません。"
    },
    {
      "indent": 0,
      "text": "7.1.4. Modifying the Session",
      "section_title": true,
      "ja": "7.1.4。セッションの変更"
    },
    {
      "indent": 3,
      "text": "When a media stream using the SRTP security descriptions has been established and a new offer/answer exchange is performed, the offerer and answerer MUST follow the steps in Section 5.1.4, as well as the following steps.",
      "ja": "SRTPセキュリティ記述を使用して、メディアストリームが確立された、新たなオファー/アンサー交換が行われた場合、オファー側とアンサーは、セクション5.1.4の手順と同様に、次の手順に従わなければなりません。"
    },
    {
      "indent": 3,
      "text": "When modifying the session, all negotiated aspects of the SRTP media stream can be modified. For example, a new crypto suite can be used or a new master key can be established. As described in RFC 3264, when a new offer/answer exchange is made, there will be a window of time where the offerer and the answerer must be prepared to receive media according to both the old and new offer/answer exchange.",
      "ja": "セッションを変更する場合、SRTPメディアストリームの全てネゴシエート側面は変更することができます。たとえば、新しい暗号スイートを使用することができ、または新しいマスターキーを確立することができます。新しいオファー/アンサー交換が行われたRFC 3264で説明したように、オファー側とアンサーが新旧両方のオファー/アンサー交換に応じてメディアを受信するために準備しなければならない時間の窓があるでしょう。"
    },
    {
      "indent": 3,
      "text": "This requirement applies here as well; however, the following should be noted:",
      "ja": "この要件はここにも適用されます。ただし、次のように注意する必要があります。"
    },
    {
      "indent": 3,
      "text": "* When authentication is not being used, it may not be possible for either the offerer or answerer to determine if a given packet is encrypted according to the old or new offer/answer exchange. RFC 3264 defines a couple of techniques to address this problem, e.g., changing the payload types used and/or the transport addresses. Note, however, that a change in transport addresses may have an impact on quality of service as well as on firewall and NAT traversal. The SRTP security descriptions use the MKI to deal with this (which adds a few bytes to each SRTP packet), as described in Section 6.1. For further details on the MKI, please refer to [RFC3711].",
      "ja": "認証が使用されていない場合は*、それは与えられたパケットが古いか新しいオファー/アンサー交換に応じて暗号化されているかどうかを判断するために、オファーや回答のいずれかのためにできない場合があります。 RFC 3264が使用され、ペイロードタイプおよび/またはトランスポート・アドレスを変更すること、例えば、この問題に対処するための技術のいくつかを定義します。トランスポートアドレスの変更は、サービスの品質にだけでなく、ファイアウォールやNATトラバーサルに影響を与える可能性があること、しかし、注意してください。 SRTPセキュリティ記述は、セクション6.1で説明したように、（各SRTPパケットに数バイトを追加する）この問題に対処するMKIを使用しています。 MKIの詳細については、[RFC3711]を参照してください。"
    },
    {
      "indent": 3,
      "text": "* If the answerer changes its master key, the offerer will not be able to process packets secured via this master key until the answer is received. This could be addressed by using a security \"precondition\" [sprecon].",
      "ja": "*回答は、そのマスターキーを変更した場合、オファー側は答えが受信されるまで、このマスターキーによって固定パケットを処理することができません。これは、セキュリティ、「前提条件」[sprecon]を使用することによって対処することができます。"
    },
    {
      "indent": 3,
      "text": "If the offerer includes an IP address and/or port that differs from that used previously for a media stream (or FEC stream), the offerer MUST include a new master key with the offer (and in so doing, it will be creating a new crypto context where the ROC is set to zero). Similarly, if the answerer includes an IP address and/or port that differs from that used previously for a media stream (or FEC stream), the answerer MUST include a new master key with the answer (and hence create a new crypto context with the ROC set to zero). The reason for this is that when the answerer receives an offer or the offerer receives an answer with an updated IP address and/or port, it is not possible to determine if the other side has access to the old crypto context parameters (and in particular the ROC). For example, if one side is a decomposed media gateway, or if a SIP back-to-back user agent is involved, it is possible that the media endpoint changed and no longer has access to the old crypto context. By always requiring a new master key in this case, the answerer/offerer will know that the ROC is zero for this offer/answer, and any key lifetime constraints will trivially be satisfied too. Another consideration here applies to media relays; if the relay changes the media endpoint on one side transparently to the other side, the relay cannot operate as a simple packet reflector but will have to actively engage in SRTP packet processing and transformation (i.e., decryption and re-encryption, etc.).",
      "ja": "オファー側は、メディアストリーム（またはFECストリーム）のために以前に使用したものとは異なるIPアドレスおよび/またはポートが含まれている場合は、オファー側が提供した新しいマスターキーを含まなければならない（そうすることで、それは新しい作成されますROCがゼロに設定されている暗号コンテキスト）。回答者がメディア・ストリーム（またはFECストリーム）のために以前に使用されたものとは異なるIPアドレスおよび/またはポートが含まれている場合、同様に、回答は、回答を使用して新しいマスターキーを含まなければならない（従って持つ新しい暗号コンテキストを作成しますROC）はゼロに設定しました。この理由は、回答を提示申し出を受けたり、オファーが更新されたIPアドレスおよび/またはポートとの回答を受けたとき、他の側は、古い暗号コンテキストパラメータへのアクセス（特にを持っているかどうかを判断することは不可能であるということですROC）。例えば、1辺が分解メディアゲートウェイである場合、またはSIPバックツーバックユーザエージェントが関与している場合、メディアエンドポイントが変更され、もはや古い暗号コンテキストへのアクセス権を持っている可能性がありません。常にこの場合、新しいマスターキーを必要とすることによって、回答/オファー側は、ROCは、このオファー/アンサーのためにゼロであることを知っているだろうし、任意のキー寿命の制約が自明すぎて満足するでしょう。ここでもう1つの考慮事項は、メディアリレーに適用されます。リレーは反対側に透過片側にメディアエンドポイントを変更した場合、リレーは、単純なパケットの反射器として動作することができないが、積極的に（等即ち、復号および再暗号化）SRTPパケット処理及び変換に従事しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Finally, note that if the new offer is rejected, the old crypto parameters remain in place.",
      "ja": "最後に、新しいオファーが拒否された場合、古い暗号パラメータが所定の位置に残ることに注意してください。"
    },
    {
      "indent": 0,
      "text": "7.1.5. Offer/Answer Example",
      "section_title": true,
      "ja": "7.1.5。オファー/回答例"
    },
    {
      "indent": 3,
      "text": "In this example, the offerer supports two crypto suites (f8 and AES). The a=crypto line is actually one long line, although it is shown as two lines in this document due to page formatting. The f8 example shows two inline parameters; as explained in Section 6.1, there may be one or more key (i.e., inline) parameters in a crypto attribute. In this way, multiple keys are offered to support key rotation using a Master Key Identifier (MKI).",
      "ja": "この例では、オファー側は、2つの暗号スイート（F8およびAES）をサポートしています。それにより、ページ書式この文書中の2本の線として示されているが、A =暗号ラインは、実際には一つの長いラインです。 F8例では、2つのインラインパラメータを示す図です。セクション6.1で説明したように、暗号化属性内の1つまたは複数の鍵（すなわち、インライン）パラメータが存在してもよいです。このように、複数のキーは、マスターキー識別子（MKI）を使用して、キーローテーションをサポートするために提供されています。"
    },
    {
      "indent": 3,
      "text": "Offerer sends:",
      "ja": "オファー側は送信します。"
    },
    {
      "indent": 6,
      "text": "v=0 o=sam 2890844526 2890842807 IN IP4 10.47.16.5 s=SRTP Discussion i=A discussion of Secure RTP u=http://www.example.com/seminars/srtp.pdf e=marge@example.com (Marge Simpson) c=IN IP4 168.2.17.12 t=2873397496 2873404696 m=audio 49170 RTP/SAVP 0 a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:WVNfX19zZW1jdGwgKCkgewkyMjA7fQp9CnVubGVz|2^20|1:4 FEC_ORDER=FEC_SRTP a=crypto:2 F8_128_HMAC_SHA1_80 inline:MTIzNDU2Nzg5QUJDREUwMTIzNDU2Nzg5QUJjZGVm|2^20|1:4; inline:QUJjZGVmMTIzNDU2Nzg5QUJDREUwMTIzNDU2Nzg5|2^20|2:4 FEC_ORDER=FEC_SRTP",
      "ja": "V = 0 0 = SAM 2890844526 2890842807 IP4 10.47.16.5 S = SRTPの議論では、私は、Secure RTPの議論を= U =のhttp：//www.example.com/seminars/srtp.pdf e=marge@example.com（マージ1 AES_CM_128_HMAC_SHA1_80インライン：IP4 168.2.17.12 T = 2873397496 2873404696メートル=オーディオ49170 RTP / SAVP 0 A =暗号INシンプソン）C = | 2 ^ 20 | WVNfX19zZW1jdGwgKCkgewkyMjA7fQp9CnVubGVz 1：4 FEC_ORDER = FEC_SRTP A =暗号：2 F8_128_HMAC_SHA1_80インライン：MTIzNDU2Nzg5QUJDREUwMTIzNDU2Nzg5QUJjZGVm | 2 ^ 20 | 1：4;インライン：QUJjZGVmMTIzNDU2Nzg5QUJDREUwMTIzNDU2Nzg5 | ^ 20 2 | 2：4 FEC_ORDER = FEC_SRTP"
    },
    {
      "indent": 3,
      "text": "Answerer replies:",
      "ja": "回答の返信："
    },
    {
      "indent": 6,
      "text": "v=0 o=jill 25690844 8070842634 IN IP4 10.47.16.5 s=SRTP Discussion i=A discussion of Secure RTP u=http://www.example.com/seminars/srtp.pdf e=homer@example.com (Homer Simpson) c=IN IP4 168.2.17.11 t=2873397526 2873405696 m=audio 32640 RTP/SAVP 0 a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:PS1uQCVeeCFCanVmcjkpPywjNWhcYD0mXXtxaVBR|2^20|1:4",
      "ja": "//www.example.com/seminars/srtp.pdf e=homer@example.com（ホーマー：V IP4 10.47.16.5 S = SRTPディスカッションIN = 0 0 =ジル25690844 8070842634私は、Secure RTPのu = HTTPの議論を=シンプソン）C = IP4 IN 168.2.17.11 T = 2873397526 2873405696メートル=オーディオ32640 RTP / SAVP 0 A =暗号：1 AES_CM_128_HMAC_SHA1_80インライン：PS1uQCVeeCFCanVmcjkpPywjNWhcYD0mXXtxaVBR | 2 ^ 20 | 1：4"
    },
    {
      "indent": 3,
      "text": "In this case, the session would use the AES_CM_128_HMAC_SHA1_80 crypto suite for the RTP and RTCP traffic. If F8_128_HMAC_SHA1_80 were selected by the answerer, there would be two inline keys associated with the SRTP cryptographic context. One key has an MKI value of 1 and the second has an MKI of 2.",
      "ja": "この場合、セッションはRTPおよびRTCPトラフィックのAES_CM_128_HMAC_SHA1_80暗号スイートを使用します。 F8_128_HMAC_SHA1_80が回答によって選択された場合、SRTP暗号コンテキストに関連付けられた2つのインライン・キーが存在するであろう。一つのキーが1のMKI値を有し、第2のMKIを有します。"
    },
    {
      "indent": 0,
      "text": "7.2. SRTP-Specific Use Outside Offer/Answer",
      "section_title": true,
      "ja": "7.2。オファー/回答外側SRTP、具体的な使用"
    },
    {
      "indent": 3,
      "text": "Use of SRTP security descriptions outside the offer/answer model is not defined.",
      "ja": "オファー/アンサーモデル外SRTPセキュリティ記述の使用は定義されていません。"
    },
    {
      "indent": 6,
      "text": "Use of SRTP security descriptions outside the offer/answer model could have been defined for sendonly media streams; however, there would not be a way to indicate the key to use for SRTCP by the receiver of said media stream.",
      "ja": "オファー/アンサーモデル外SRTPセキュリティ記述の使用はsendonlyのメディアストリームのために定義されている可能性が。しかし、言ったメディアストリームの受信機によってSRTCPのために使用するキーを示すための方法がないだろう。"
    },
    {
      "indent": 0,
      "text": "7.3. Support for SIP Forking",
      "section_title": true,
      "ja": "7.3。 SIPフォークのサポート"
    },
    {
      "indent": 3,
      "text": "As mentioned earlier, the security descriptions defined here do not support multicast media streams or multipoint unicast streams. However, in the SIP protocol, it is possible to receive several answers to a single offer due to the use of forking (see [SIP]). Receiving multiple answers leads to a couple of problems for the SRTP security descriptions:",
      "ja": "先に述べたように、ここで定義されたセキュリティ記述は、マルチキャストメディアストリームをサポートするか、ユニキャストストリームをマルチません。しかしながら、SIPプロトコルで、それが起因フォークの使用に単一の提供するいくつかの回答を受信することが可能である（[SIP]を参照）。複数の回答を受信すると、SRTPセキュリティ記述のための問題のカップルにつながります："
    },
    {
      "indent": 3,
      "text": "* Different answerers may choose different ciphers, keys, etc.; however, there is no way for the offerer to associate a particular incoming media packet with a particular answer.",
      "ja": "*別の回答者は、などさまざまな暗号、鍵を、選択することができ;しかし、オファー側は、特定の答えを特定の着信メディアパケットを関連付けるための方法はありません。"
    },
    {
      "indent": 3,
      "text": "* Two or more answerers may pick the same SSRC, and hence the SSRC collision problems mentioned earlier may arise.",
      "ja": "※複数回答は同じSSRCを選ぶことが、ひいては前述のSSRCの衝突の問題が生じる可能性があります。"
    },
    {
      "indent": 3,
      "text": "As stated earlier, the above point-to-multipoint cases are outside the scope of the SDP security descriptions. However, there are still ways of supporting SIP forking, e.g., by changing the multipoint scenario resulting from SIP forking into multiple two-party unicast cases. This can be done as follows:",
      "ja": "先に述べたように、上記ポイントツーマルチポイントの場合は、SDPセキュリティ記述の範囲外です。しかし、複数の二者のユニキャストの場合にフォークSIP起因するマルチポイントシナリオを変更することにより、例えば、SIPのフォークを支持する方法が依然として存在します。これは以下のように行うことができます。"
    },
    {
      "indent": 3,
      "text": "For each answer received beyond the initial answer, issue a new offer to that particular answerer using a new receive transport address (IP address and port); note that this requires support for the SIP UPDATE method [RFC3311]. Also, to ensure that two media sessions are not inadvertently established prior to the UPDATE being processed by one of them, use security preconditions [sprecon].",
      "ja": "各回答のために新しい受信トランスポート・アドレス（IPアドレスとポート）を使用して、その特定の回答に、最初の答えは、問題新しいプランを超えて受け取りました。これは、SIP UPDATEメソッド[RFC3311]のサポートを必要とすることに注意してください。また、2つのメディアセッションが不注意前にそれらのいずれかによって処理されているUPDATEに確立されていないことを確認するには、[sprecon]セキュリティ前提条件を使用します。"
    },
    {
      "indent": 3,
      "text": "Finally, note that all SIP User Agents that received the offer will know the key(s) being proposed by the initial offer. If the offerer wants to ensure security with respect to all other User Agents that may have received the offer, a new offer/answer exchange with a new key needs to be performed with the answerer as well. Note that the offerer cannot determine whether a single or multiple SIP User Agents received the offer, since intermediate forking proxies may only forward a single answer to the offerer.",
      "ja": "最後に、キーを知っているのオファーを受けたすべてのSIPユーザーエージェントが最初のオファーによって提案されていることに注意してください。オファー側が提案を受けたかもしれない他のすべてのユーザーエージェントに対するセキュリティを確保したい場合は、新しいキーを持つ新しいオファー/アンサー交換にも回答して実行する必要があります。中間フォークプロキシのみ提供者に単一の答えを転送することができるので、提供者は、単一または複数のSIPユーザーエージェントが提供を受けたかどうかを決定することができないことに留意されたいです。"
    },
    {
      "indent": 3,
      "text": "The above description is intended to suggest one possible way of supporting SIP forking. There are many details missing and it should not be considered a normative specification. Alternative approaches may also be possible",
      "ja": "上記の説明は、SIPのフォークをサポートする1​​つの可能な方法を提案することを目的としています。そこ不足している多くの詳細があり、それが規範的な仕様とみなされるべきではありません。別のアプローチも可能です"
    },
    {
      "indent": 0,
      "text": "7.4. SRTP-Specific Backwards Compatibility Considerations",
      "section_title": true,
      "ja": "7.4。 SRTP固有の下位互換性に関する注意事項"
    },
    {
      "indent": 3,
      "text": "It is possible that the answerer supports the SRTP transport and accepts the offered media stream, but that it does not support the crypto attribute defined here. The offerer can recognize this situation by seeing an accepted SRTP media stream in the answer that does not include a crypto line. In that case, the security negotiation defined here MUST be deemed to have failed.",
      "ja": "回答は、SRTPトランスポートをサポートし、提供するメディアストリームを受け入れますが、それはここで定義された暗号属性をサポートしていないということは可能です。オファー側は、暗号行が含まれていない答えで受け入れSRTPメディアストリームを見て、この状況を認識することができます。その場合は、ここで定義されたセキュリティネゴシエーションが失敗したとみなされなければなりません。"
    },
    {
      "indent": 3,
      "text": "Also, if a media stream with a given SRTP transport (e.g., \"RTP/SAVP\") is sent to a device that does not support SRTP, that media stream will be rejected.",
      "ja": "所与SRTP輸送（例えば、「RTP / SAVP」）とメディアストリームがSRTPをサポートしていないデバイスに送信される場合も、そのメディアストリームが拒否されます。"
    },
    {
      "indent": 0,
      "text": "7.5. Operation with KEYMGT= and k= lines",
      "section_title": true,
      "ja": "7.5。 KEYMGT =及びk =行と操作"
    },
    {
      "indent": 3,
      "text": "An offer MAY include both \"a=crypto\" and \"a=keymgt\" lines [keymgt]. Per SDP rules, the answerer will ignore attribute lines that it does not understand. If the answerer supports both \"a=crypto\" and \"a=keymgt\", the answer MUST include either \"a=crypto\" or \"a=keymgt\", but not both, as including both is undefined.",
      "ja": "オファーは \"A =暗号化\" および \"A = keymgt\" 行[keymgt]の両方を含むことができます。 SDP規則に従って、回答は、それが理解できない属性行を無視します。回答が「A =暗号化」と「A = keymgt」の両方をサポートしている場合、両方が定義されていないなどのように、答えは、「A =暗号」または「A = keymgt」のどちらか一方を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "An offer MAY include both \"a=crypto\" and \"k=\" lines [RFC4566]. Per SDP rules, the answerer will ignore attribute lines it does not understand. If the answerer supports both \"a=crypto\" and \"k=\", the answer MUST include either \"a=crypto\" or \"k=\" but not both, as including both is undefined.",
      "ja": "オファーは「A =暗号化」および「K =」行[RFC4566]の両方を含むことができます。 SDP規則に従って、回答は、それが理解できない属性行を無視します。回答が「A =暗号化」と「K =」の両方をサポートしている場合、答えは「A =暗号」または「K =」両方ではなく、未定義の両方を含むなどのいずれかを含まなければなりません。"
    },
    {
      "indent": 0,
      "text": "8. Security Considerations",
      "section_title": true,
      "ja": "8.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "Like all SDP messages, SDP messages containing security descriptions are conveyed in an encapsulating application protocol (e.g., SIP, MGCP). It is the responsibility of the encapsulating protocol to ensure the protection of the SDP security descriptions. Therefore, IT IS REQUIRED that the application invoke its own security mechanisms (e.g., secure multiparts such as S/MIME [smime]) or, alternatively, utilize a lower-layer security service (e.g., TLS or IPsec). IT IS REQUIRED that this security service provide strong message authentication and packet-payload encryption, as well as effective replay protection.",
      "ja": "すべてのSDPメッセージのような、セキュリティ記述を含むSDPメッセージは、カプセル化アプリケーションプロトコル（例えば、SIP、MGCP）に搬送されます。 SDPセキュリティ記述の保護を確実にするためにカプセル化プロトコルの責任です。したがって、アプリケーションが独自のセキュリティメカニズムを呼び出すことが必要である（例えば、S / MIMEなどのセキュアマルチパート[SMIME]）、あるいは、下層セキュリティサービス（例えば、TLSやIPsec）を利用します。 ITは、このセキュリティサービスは、強力なメッセージ認証とパケットのペイロードの暗号化だけでなく、効果的なリプレイ保護を提供することが必要とされます。"
    },
    {
      "indent": 3,
      "text": "\"Replay protection\" is needed against an attacker that has enough access to the communications channel to intercept messages and to deliver copies to the destination. A successful replay attack will cause the recipient to perform duplicate processing on a message; the attack is worse when the duped recipient sends a duplicate reply to the initiator. Replay protections are not found in S/MIME or in the other secure-multiparts standard, PGP/MIME. S/MIME and PGP/MIME, therefore, need to be augmented with some replay-protection mechanism that is appropriate to the encapsulating application protocol (e.g., SIP, MGCP). Three common ways to provide replay protection are to place a sequence number in the message, to use a timestamp, or for the receiver to keep a hash of the message to be compared with incoming messages. There typically needs to be a replay \"window\" and some policy for keeping state information from previous messages in a \"replay table\" or list.",
      "ja": "「リプレイ保護は、」メッセージを傍受し、先にコピーを提供するために、通信チャネルへの十分なアクセス権を持つ攻撃者に対して必要とされています。成功したリプレイ攻撃は、受信者がメッセージに対して重複処理を実行するようになります。だまさ受信者がイニシエータに重複した応答を送信するときに攻撃が悪化しています。リプレイ保護が標準、PGP / MIME S / MIMEやその他のセキュア・マルチパートでは見られません。 S / MIMEおよびPGP / MIMEは、したがって、カプセル化アプリケーションプロトコル（例えば、SIP、MGCP）に適したいくつかのリプレイ保護機構を拡張する必要があります。再生保護を提供するために、3つの一般的な方法は、メッセージにシーケンス番号を配置するためにタイムスタンプを使用する、または受信機が受信したメッセージと比較されるメッセージのハッシュを維持するためのものです。通常リプレイ「ウィンドウ」と「リプレイテーブル」またはリスト内の前のメッセージからの状態情報を維持するためのいくつかの政策が必要です。"
    },
    {
      "indent": 3,
      "text": "The discussion that follows uses \"message authentication\" and \"message confidentiality\" in a manner consistent with SRTP [RFC3711]. \"Message confidentiality\" means that only the holder of the secret decryption key can access the plain-text content of the message. The decryption key is the same key as the encryption key, using SRTP counter mode and f8 encryption transforms, which are vulnerable to message tampering and need SRTP message authentication to detect such tampering. \"Message authentication\" and \"message integrity validation\" generally mean the same thing in IETF security standards: an SRTP message is authenticated following a successful HMAC integrity check [RFC3711], which proves that the message originated from the holder of an SRTP master key and was not altered en route. Such an \"authentic\" message, however, can be captured by an attacker and \"replayed\" when the attacker re-inserts the packet into the channel. A replayed packet can have a variety of bad effects on the session, and SRTP uses the extended sequence number to detect replayed SRTP packets [RFC3711].",
      "ja": "SRTP [RFC3711]と一致する形で使用「メッセージ認証」と「メッセージの機密性」を以下の説明。 「メッセージの機密性は、」秘密の復号鍵の所有者のみがメッセージのプレーンテキストのコンテンツにアクセスできることを意味します。復号鍵は、SRTPカウンタモードと改ざんメッセージに対して脆弱であり、そのような改ざんを検出するために、SRTPメッセージ認証を必要とF8の暗号変換を使用して、暗号化鍵と同じ鍵です。 「メッセージ認証」と「メッセージの完全性の検証」は、一般的にIETFのセキュリティ規格で同じことを意味：SRTPメッセージは、メッセージがSRTPマスターキーの所有者から発信されていることを証明し成功したHMACの整合性チェック[RFC3711]、次のように認証されます途中で変化しませんでした。そのような「本物」のメッセージが、しかし、攻撃者によって捕捉することができ、攻撃者がチャンネルにパケットを再挿入するとき「再生しました」。再生パケットがセッションに悪影響様々な構造を有することができ、およびSRTPが再生SRTPパケット[RFC3711]を検出するための拡張シーケンス番号を使用します。"
    },
    {
      "indent": 3,
      "text": "The SRTP specification identifies which services and features are default values that are normative-to-implement (such as AES_CM_128_80) versus normative-to-use (such as AES_CM_128_32).",
      "ja": "サービスおよび機能は、規範に使用できる（例えばAES_CM_128_32など）に対する（例えばAES_CM_128_80など）規範ツー実装されているデフォルト値であるSRTP仕様を識別する。"
    },
    {
      "indent": 0,
      "text": "8.1. Authentication of Packets",
      "section_title": true,
      "ja": "8.1。パケットの認証"
    },
    {
      "indent": 3,
      "text": "Security descriptions as defined herein signal security services for RTP packets. RTP messages are vulnerable to a variety of attacks, such as replay and forging. To limit these attacks, SRTP message integrity mechanisms SHOULD be used (SRTP replay protection is always enabled).",
      "ja": "本明細書で定義されたセキュリティ記述は、RTPパケットのセキュリティサービスを知らせます。 RTPメッセージは、リプレイや鍛造などの攻撃、各種のに対して脆弱です。これらの攻撃を制限するには、SRTPメッセージ整合性メカニズムは（SRTPリプレイ保護が常に有効になっている）を使用する必要があります。"
    },
    {
      "indent": 0,
      "text": "8.2. Keystream Reuse",
      "section_title": true,
      "ja": "8.2。キーストリーム再利用"
    },
    {
      "indent": 3,
      "text": "SRTP security descriptions signal configuration parameters for SRTP sessions. Misconfigured SRTP sessions are vulnerable to attacks on their encryption services when running the crypto suites defined in",
      "ja": "SRTPセキュリティ記述は、SRTPセッションの設定パラメータを知らせます。で定義された暗号スイートを実行する際に誤って設定SRTPセッションは、その暗号化サービスへの攻撃に対して脆弱です"
    },
    {
      "indent": 3,
      "text": "Sections 6.2.1, 6.2.2, and 6.2.3. An SRTP encryption service is \"misconfigured\" when two or more media streams are encrypted using the same keystream of AES blocks. When senders and receivers share derived session keys, SRTP requires that the SSRCs of session participants serve to make their corresponding keystreams unique, which is violated in the case of SSRC collision: SRTP SSRC collision drastically weakens SRTP or SRTCP payload encryption during the time that identical keystreams are used [RFC3711]. An attacker, for example, might collect SRTP and SRTCP messages and await a collision. This attack on the AES-CM and AES-f8 encryption is avoided entirely when each media stream has its own unique master key in both the send and receive direction. This specification restricts use of SDP security description to unicast point-to-point streams so that keys are not shared between SRTP hosts, and the master keys used in the send and receive direction for a given media stream are unique.",
      "ja": "セクション6.2.1、6.2.2、および6.2.3。 SRTP暗号化サービスでは、二つ以上のメディアストリームは、AESブロックの同じキーストリームを使用して暗号化されたときに「誤って設定」です。セッションキーを導出すると送信者と受信者のシェア、SRTPは、セッション参加者のSSRCsがSSRC衝突の場合には違反している固有のそれに対応するキーストリームを作るのに役立つことが必要です。その同じSRTP SSRC衝突が大幅に時間の間にSRTPまたはSRTCPペイロード暗号化を弱めますキーストリームは、[RFC3711]を使用しています。攻撃者は、例えば、SRTPとSRTCPメッセージを収集し、衝突を待つかもしれません。このAES-CMへの攻撃とAES-F8の暗号化は、各メディアストリームは、送信の両方で独自のマスターキーを持っていると方向を受け取る完全際に回避されます。この仕様は、キーが送信に使用されるSRTPホスト、およびマスターキーの間で共有されないように、ユニキャストのポイントツーポイントストリームにSDPセキュリティ記述の使用を制限し、指定されたメディアストリームの方向を受け取るユニークです。"
    },
    {
      "indent": 0,
      "text": "8.3. Signaling Authentication and Signaling Encryption",
      "section_title": true,
      "ja": "8.3。シグナリングの認証とシグナリング暗号化"
    },
    {
      "indent": 3,
      "text": "There is no reason to incur the complexity and computational expense of SRTP, however, when its key establishment is exposed to unauthorized parties. In most cases, the SRTP crypto attribute and its parameters are vulnerable to denial-of-service attacks when they are carried in an unauthenticated SDP message. In some cases, the integrity or confidentiality of the RTP stream can be compromised. For example, if an attacker sets UNENCRYPTED for the SRTP stream in an offer, this could result in the answerer's not decrypting the encrypted SRTP messages. In the worst case, the answerer might itself send unencrypted SRTP and leave its data exposed to snooping.",
      "ja": "その鍵確立が権限のない者にさらされているがSRTPの複雑さと計算コストを負担する理由は、ありません。それらが認証されていないSDPメッセージで運ばれたときにほとんどの場合、SRTP暗号化属性とそのパラメータは、サービス拒否攻撃に対して脆弱です。いくつかのケースでは、RTPストリームの整合性や機密性が損なわれる可能性があります。攻撃者は、提供中のSRTPストリームの暗号化されていない設定した場合、これは回答が暗号化SRTPメッセージを解読いないにつながる可能性があります。最悪の場合、回答自体が暗号化されていないSRTPを送信し、スヌーピングにさらされ、そのデータを残すことがあります。"
    },
    {
      "indent": 3,
      "text": "Thus, IT IS REQUIRED that MIME secure multiparts, IPsec, TLS, or some other data security service be used to provide message authentication for the encapsulating protocol that carries the SDP messages having a crypto attribute (a=crypto). Furthermore, IT IS REQUIRED that encryption of the encapsulating payload be used whenever a master key parameter (inline) appears in the message. Failure to encrypt the SDP message containing an inline SRTP master key renders the SRTP authentication or encryption service useless in practically all circumstances. Failure to authenticate an SDP message that carries SRTP parameters renders the SRTP authentication or encryption service useless in most practical applications.",
      "ja": "したがって、MIMEセキュアマルチパート、IPsecの、TLS、またはいくつかの他のデータのセキュリティサービスは、暗号化属性（A =クリプト）を有するSDPメッセージを運ぶカプセル化プロトコルのメッセージ認証を提供するために使用されることが必要です。更に、マスターキーパラメータ（インライン）メッセージに表示されるたびにカプセル化ペイロードの暗号化を使用する必要があります。インラインSRTPマスターキーを含むSDPメッセージを暗号化に失敗すると、実質的にすべての状況でSRTP認証や暗号化サービスが役に立たなく。 SRTPパラメータを運ぶSDPメッセージを認証に失敗すると、最も実用的なアプリケーションでは役に立たないSRTP認証や暗号化サービスをレンダリングします。"
    },
    {
      "indent": 3,
      "text": "When the communication path of the SDP message is routed through intermediate systems that inspect parts of the SDP message, security protocols such as [IPsec] or TLS SHOULD NOT be used for encrypting and/or authenticating the security description. In the case of intermediate-system processing of a message containing SDP security descriptions, the \"a=crypto\" attributes SHOULD be protected end-to-end so that the intermediate system can neither modify the security description nor access the keying material. Network or transport security protocols that terminate at each intermediate system, therefore, SHOULD NOT be used for protecting SDP security descriptions. A security protocol SHOULD allow the security descriptions to be encrypted and authenticated end-to-end independently of the portions of the SDP message that any intermediate system modifies or inspects: MIME secure multiparts are RECOMMENDED for the protection of SDP messages that are processed by intermediate systems.",
      "ja": "SDPメッセージの通信経路は、SDPメッセージの部分を検査する中間システムを介してルーティングされる場合、そのような【のIPsec]またはTLSの暗号化および/またはセキュリティ記述を認証するために使用されるべきではないセキュリティプロトコル。中間システムは、セキュリティ記述を変更することも、キーイングマテリアルにアクセスすることもできないように、SDPセキュリティ記述を含むメッセージの中間システム処理の場合には、「A =暗号は、」エンドツーエンドを保護するアトリビュート。各中間システムで終端ネットワークまたはトランスポート・セキュリティ・プロトコルは、従って、SDPセキュリティ記述を保護するために使用すべきではありません。 MIMEセキュアマルチパートは、中間によって処理されるSDPメッセージの保護のために推奨されるセキュリティプロトコルは、セキュリティの説明は、任意の中間システムが変更又は検査すること独立SDPメッセージの部分のエンド・ツー・エンドの暗号化および認証されることを可能にするべきですシステム。"
    },
    {
      "indent": 0,
      "text": "9. Grammar",
      "section_title": true,
      "ja": "9.文法"
    },
    {
      "indent": 3,
      "text": "In this section, we first provide the ABNF grammar for the generic crypto attribute, and then we provide the ABNF grammar for the SRTP-specific use of the crypto attribute.",
      "ja": "このセクションでは、まず、一般的な暗号属性のABNF文法を提供し、その後、我々は暗号属性のSRTP、特定の使用のためのABNF文法を提供しています。"
    },
    {
      "indent": 0,
      "text": "9.1. Generic \"Crypto\" Attribute Grammar",
      "section_title": true,
      "ja": "9.1。一般的な「暗号化」属性文法"
    },
    {
      "indent": 3,
      "text": "The ABNF grammar for the crypto attribute is defined below:",
      "ja": "暗号属性のABNF文法を以下のように定義されています。"
    },
    {
      "indent": 3,
      "text": "\"a=crypto:\" tag 1*WSP crypto-suite 1*WSP key-params *(1*WSP session-param)",
      "ja": "\"A =暗号\" タグ1 * WSPの暗号スイート1 * WSP鍵paramsは×（1 * WSPセッションPARAM）"
    },
    {
      "indent": 3,
      "text": "tag = 1*9DIGIT crypto-suite = 1*(ALPHA / DIGIT / \"_\")",
      "ja": "タグ= 1 * 9DIGIT暗号スイート= 1 *（ALPHA / DIGIT / \"_\"）"
    },
    {
      "indent": 3,
      "text": "key-params = key-param *(\";\" key-param) key-param = key-method \":\" key-info key-method = \"inline\" / key-method-ext key-method-ext = 1*(ALPHA / DIGIT / \"_\") key-info = 1*(%x21-3A / %x3C-7E) ; visible (printing) chars ; except semi-colon session-param = 1*(VCHAR) ; visible (printing) characters",
      "ja": "鍵paramsは=キーPARAM *（ \";\" キーPARAM）キーPARAM =鍵方式 \"：\" キー情報キー方式= \"インライン\" /鍵方式-EXTキー方式-EXT = 1 * （ALPHA / DIGIT / \"_\"）キー情報= 1 *（％x21-3A /％X3C-7E）。可視（印刷）文字。セミコロン以外セッションPARAM = 1 *（VCHAR）。可視（印刷）文字"
    },
    {
      "indent": 3,
      "text": "where WSP, ALPHA, DIGIT, and VCHAR are defined in [RFC4234].",
      "ja": "WSP、ALPHA、DIGIT、及びVCHARは[RFC4234]で定義されます。"
    },
    {
      "indent": 0,
      "text": "9.2. SRTP \"Crypto\" Attribute Grammar",
      "section_title": true,
      "ja": "9.2。 SRTP「暗号化」属性文法"
    },
    {
      "indent": 3,
      "text": "This section provides an Augmented BNF [RFC4234] grammar for the SRTP-specific use of the SDP crypto attribute:",
      "ja": "このセクションでは、SDP暗号属性のSRTP固有の使用のために増大しているBNF [RFC4234]文法を提供します。"
    },
    {
      "indent": 6,
      "text": "crypto-suite = srtp-crypto-suite key-method = srtp-key-method key-info = srtp-key-info session-param = srtp-session-param",
      "ja": "暗号スイート= SRTP-暗号スイートキー方式= SRTP鍵方式の鍵情報= SRTPキー・インフォセッションのparam = SRTPセッション-PARAM"
    },
    {
      "indent": 6,
      "text": "srtp-crypto-suite = \"AES_CM_128_HMAC_SHA1_32\" / \"F8_128_HMAC_SHA1_32\" /",
      "ja": "SRTP-暗号スイート= \"AES_CM_128_HMAC_SHA1_32\" / \"F8_128_HMAC_SHA1_32\" /"
    },
    {
      "indent": 28,
      "text": "\"AES_CM_128_HMAC_SHA1_80\" /\nsrtp-crypto-suite-ext",
      "raw": true
    },
    {
      "indent": 6,
      "text": "srtp-key-method = \"inline\" srtp-key-info = key-salt [\"|\" lifetime] [\"|\" mki]",
      "ja": "SRTP鍵方式=「インライン」SRTP鍵情報=キー塩[「|」生涯] [ \"|\" MKI]"
    },
    {
      "indent": 6,
      "text": "key-salt = 1*(base64) ; binary key and salt values ; concatenated together, and then ; base64 encoded [section 3 of ; RFC3548",
      "ja": "キー塩= 1 *（BASE64）。バイナリキーと塩の値。一緒に連結し、次いで、 BASE64符号化された〔のセクション3。 RFC3548"
    },
    {
      "indent": 6,
      "text": "lifetime = [\"2^\"] 1*(DIGIT) ; see section 6.1 for \"2^\" mki = mki-value \":\" mki-length mki-value = 1*DIGIT mki-length = 1*3DIGIT ; range 1..128.",
      "ja": "寿命= [ \"2 ^\"] 1 *（DIGIT）。 \"2 ^\" MKI = MKI-値はセクション6.1を参照してください \"：\" MKI-長MKI-値= 1 * DIGIT MKI-長= 1 * 3DIGIT。範囲1 128。"
    },
    {
      "indent": 6,
      "text": "srtp-session-param = kdr / \"UNENCRYPTED_SRTP\" / \"UNENCRYPTED_SRTCP\" / \"UNAUTHENTICATED_SRTP\" / fec-order / fec-key / wsh / srtp-session-extension",
      "ja": "SRTPセッション-PARAM = KDR / \"UNENCRYPTED_SRTP\" / \"UNENCRYPTED_SRTCP\" / \"UNAUTHENTICATED_SRTP\" / FEC-オーダー/ FEC-キー/ WSH / SRTPセッション拡張"
    },
    {
      "indent": 6,
      "text": "kdr = \"KDR=\" 1*2(DIGIT) ; range 0..24, ; power of two",
      "ja": "KDR = \"KDR =\" 1 * 2（DIGIT）。範囲0〜24; 2の累乗"
    },
    {
      "indent": 6,
      "text": "fec-order = \"FEC_ORDER=\" fec-type fec-type = \"FEC_SRTP\" / \"SRTP_FEC\" fec-key = \"FEC_KEY=\" key-params",
      "ja": "FEC順= \"FEC_ORDER =\" FEC型FEC型= \"FEC_SRTP\" / \"SRTP_FEC\" FECキー= \"FEC_KEY =\" 鍵paramsは"
    },
    {
      "indent": 6,
      "text": "wsh = \"WSH=\" 2*DIGIT ; minimum value is 64 base64 = ALPHA / DIGIT / \"+\" / \"/\" / \"=\"",
      "ja": "WSH = \"WSH =\" 2 * DIGIT。最小値は64 BASE64 = ALPHA / DIGIT / \"+\" / \"/\" / \"=\" であります"
    },
    {
      "indent": 6,
      "text": "srtp-crypto-suite-ext = 1*(ALPHA / DIGIT / \"_\") srtp-session-extension = [\"-\"] 1*(VCHAR) ;visible chars [RFC4234] ; first character must not be dash (\"-\")",
      "ja": "SRTP-暗号スイート-EXT = 1 *（ALPHA / DIGIT / \"_\"）SRTPセッション延長= [ \" - \"] 1 *（VCHAR）;可視文字[RFC4234]。最初の文字がダッシュであってはなりません（「 - 」）"
    },
    {
      "indent": 0,
      "text": "10. IANA Considerations",
      "section_title": true,
      "ja": "10. IANAの考慮事項"
    },
    {
      "indent": 0,
      "text": "10.1. Registration of the \"crypto\" Attribute",
      "section_title": true,
      "ja": "10.1。 「暗号化」属性の登録"
    },
    {
      "indent": 3,
      "text": "The IANA has registered a new SDP attribute as follows:",
      "ja": "次のようにIANAは新しいSDP属性を登録しています："
    },
    {
      "indent": 3,
      "text": "Attribute name: crypto Long form name: Security description cryptographic attribute for media streams Type of attribute: Media-level Subject to charset: No Purpose: Security descriptions Appropriate values: See Section 4",
      "ja": "属性名：暗号ロングフォーム名を：文字セットに従うことを条件としてメディアレベル：属性のメディアストリームタイプのセキュリティ記述暗号属性はありません目的：セキュリティの説明適切な値は：第4節を参照してください。"
    },
    {
      "indent": 0,
      "text": "10.2. New IANA Registries and Registration Procedures",
      "section_title": true,
      "ja": "10.2。新しいIANAレジストリと登録手順"
    },
    {
      "indent": 3,
      "text": "The following sub-sections define a new IANA registry with associated sub-registries to be used for the SDP security descriptions. The IANA has created an SDP Security Description registry as shown below and further described in the following sections:",
      "ja": "以下のサブセクションでは、SDPセキュリティ記述のために使用される関連するサブレジストリで新しいIANAレジストリを定義します。 IANAは、以下に示すように、SDPセキュリティ説明レジストリを作成し、さらに次のセクションで説明しています。"
    },
    {
      "indent": 3,
      "text": "SDP Security Descriptions | +- Key Methods (described in 10.2.1) | +- Media Stream Transports (described in 10.2.2) | +- Transport1 (e.g., SRTP) | | | +- Supported Key Methods (e.g., inline) | | | +- crypto suites | | | +- session parameters | +- Transport2 : :",
      "ja": "SDPセキュリティの説明| +  - （10.2.1で説明）主要メソッド| +  - （10.2.2で説明した）メディアストリームトランスポート| +  -  Transport1（例えば、SRTP）| | | +  - キー方法（例えば、インライン）サポート| | | +  - 暗号スイート| | | +  - セッションパラメータ| +  -  Transport2：："
    },
    {
      "indent": 0,
      "text": "10.2.1. Key Method Registry and Registration",
      "section_title": true,
      "ja": "10.2.1。鍵方式レジストリと登録"
    },
    {
      "indent": 3,
      "text": "The IANA has created a new subregistry for SDP security description key methods. An IANA key method registration MUST be documented in an RFC in accordance with the [RFC2434] Standards Action, and it MUST provide the name of the key method in accordance with the grammar for key-method-ext defined in Section 9.1.",
      "ja": "IANAはSDPセキュリティ記述キーメソッドのための新しい副登録を作成しました。 IANAキー方式の登録は[RFC2434]標準アクションに従ってRFCで文書化されなければならない、そしてそれは、セクション9.1で定義されたキー方式-EXTのための文法に従ったキーメソッドの名前を指定する必要があります。"
    },
    {
      "indent": 0,
      "text": "10.2.2. Media Stream Transport Registry and Registration",
      "section_title": true,
      "ja": "10.2.2。メディアストリーム転送レジストリと登録"
    },
    {
      "indent": 3,
      "text": "The IANA has created a new subregistry for SDP security description Media Stream Transports. An IANA media stream transport registration MUST be documented in an RFC in accordance with the RFC 2434 Standards Action and the procedures defined in Sections 4 and 5 of this document. The registration MUST provide the name of the transport and a list of supported key methods.",
      "ja": "IANAはSDPセキュリティ記述メディアストリームのトランスポートのための新しい副登録を作成しました。 IANAメディア・ストリーム・トランスポート・登録はRFC 2434標準アクション及びセクション4と、この文書の5で定義された手順に従って、RFCに文書化されなければなりません。登録は、トランスポートの名前およびサポートされている主要なメソッドのリストを提供しなければなりません。"
    },
    {
      "indent": 3,
      "text": "In addition, each new media stream transport registry must contain a crypto-suite registry and a session parameter registry, as well as IANA instructions for how to populate these registries.",
      "ja": "また、それぞれの新しいメディアストリームのトランスポート・レジストリは、暗号スイートのレジストリおよびセッションパラメータレジストリ、ならびにこれらのレジストリを移入する方法については、IANAの指示が含まれている必要があります。"
    },
    {
      "indent": 0,
      "text": "10.3. Initial Registrations",
      "section_title": true,
      "ja": "10.3。初期登録"
    },
    {
      "indent": 0,
      "text": "10.3.1. Key Method",
      "section_title": true,
      "ja": "10.3.1。鍵方式"
    },
    {
      "indent": 3,
      "text": "The following security descriptions key methods are hereby registered:",
      "ja": "次のセキュリティ記述キー方法はここに登録されています。"
    },
    {
      "indent": 6,
      "text": "inline",
      "ja": "列をなして"
    },
    {
      "indent": 0,
      "text": "10.3.2. SRTP Media Stream Transport",
      "section_title": true,
      "ja": "10.3.2。 SRTPメディアストリーム転送"
    },
    {
      "indent": 3,
      "text": "The IANA has created an SDP Security Description Media Stream Transport subregistry for \"SRTP\". The key methods supported is \"inline\". The reference for the SDP security description for SRTP is this document.",
      "ja": "IANAは、「SRTP」のためのSDPセキュリティ記述メディアストリームトランスポート副登録を作成しました。サポートされるキーの方法は、「インライン」です。 SRTPのためのSDPセキュリティ記述の参照は、この文書です。"
    },
    {
      "indent": 0,
      "text": "10.3.2.1. SRTP Crypto Suite Registry and Registration",
      "section_title": true,
      "ja": "10.3.2.1。 SRTP暗号スイートレジストリと登録"
    },
    {
      "indent": 3,
      "text": "The IANA has created a new subregistry for SRTP crypto suites under the SRTP transport of the SDP Security Descriptions. An IANA SRTP crypto suite registration MUST indicate the crypto suite name in accordance with the grammar for srtp-crypto-suite-ext defined in Section 9.2.",
      "ja": "IANAはSDPセキュリティ記述のSRTP輸送の下でSRTP暗号スイートの新しい副登録を作成しました。 IANA SRTP暗号スイート登録はセクション9.2で定義されたSRTP-暗号スイート-EXTのための文法に従った暗号スイート名を指定する必要があります。"
    },
    {
      "indent": 3,
      "text": "The semantics of the SRTP crypto suite MUST be described in an RFC in accordance with the RFC 2434 Standards Action, including the semantics of the \"inline\" key-method and any special semantics of parameters.",
      "ja": "SRTP暗号スイートのセマンティクスは、「インライン」キー法の意味論およびパラメータの特別なセマンティクスを含むRFC 2434規格アクションに従ってRFCに記述されなければなりません。"
    },
    {
      "indent": 3,
      "text": "The following SRTP crypto suites are hereby registered:",
      "ja": "以下のSRTP暗号スイートは、ここに登録されています。"
    },
    {
      "indent": 6,
      "text": "AES_CM_128_HMAC_SHA1_80 AES_CM_128_HMAC_SHA1_32 F8_128_HMAC_SHA1_80",
      "ja": "AES_CM_128_HMAC_SHA1_80 AES_CM_128_HMAC_SHA1_32 F8_128_HMAC_SHA1_80"
    },
    {
      "indent": 3,
      "text": "The reference for these crypto suites is provided in this document.",
      "ja": "これらの暗号スイートの参照は、このドキュメントで提供されています。"
    },
    {
      "indent": 0,
      "text": "10.3.2.2. SRTP Session Parameter Registration",
      "section_title": true,
      "ja": "10.3.2.2。 SRTPセッションパラメータの登録"
    },
    {
      "indent": 3,
      "text": "The IANA has created a new subregistry for SRTP session parameters under the SRTP transport of the SDP Security Descriptions. An IANA SRTP session parameter registration MUST indicate the session parameter name (srtp-session-extension as defined in Section 9.2); the name MUST NOT begin with the dash character (\"-\").",
      "ja": "IANAはSDPセキュリティ記述のSRTP輸送の下でSRTPセッションパラメータのための新しい副登録を作成しました。 （セクション9.2で定義されるように、SRTPセッション延長）IANA SRTPセッションパラメータ登録はセッションパラメータ名を指定しなければなりません。名前はダッシュ文字（「 - 」）で始めることはできません。"
    },
    {
      "indent": 3,
      "text": "The semantics of the parameter MUST be described in an RFC in accordance with the RFC 2434 Standards Action. If values can be assigned to the parameter, then the format and possible values that can be assigned MUST be described in the RFC in accordance with the RFC 2434 Standards Action as well. Also, it MUST be specified whether the parameter is declarative or negotiated in the offer/answer model.",
      "ja": "パラメータの意味は、RFC 2434標準アクションに従ってRFCに記述されなければなりません。値はパラメータに割り当てることができる場合には、割り当て可能なフォーマット及び可能な値は、同様にRFC 2434の規格のアクションに応じて、RFCに記述されなければなりません。また、パラメータは宣言型であるかどうかを指定したり、オファー/アンサーモデルに交渉しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The following SRTP session parameters are hereby registered:",
      "ja": "以下のSRTPセッションパラメータは、ここに登録されています。"
    },
    {
      "indent": 6,
      "text": "KDR UNENCRYPTED_SRTP UNENCRYPTED_SRTCP UNAUTHENTICATED_SRTP FEC_ORDER FEC_KEY WSH",
      "ja": "KDR UNENCRYPTED_SRTP UNENCRYPTED_SRTCP UNAUTHENTICATED_SRTP FEC_ORDER FEC_KEY WSH"
    },
    {
      "indent": 3,
      "text": "The reference for these parameters is this document.",
      "ja": "これらのパラメータの参照は、この文書です。"
    },
    {
      "indent": 0,
      "text": "11. Acknowledgements",
      "section_title": true,
      "ja": "11.謝辞"
    },
    {
      "indent": 3,
      "text": "This document is a product of the IETF MMUSIC working group and has benefited from comments from its participants. This document also benefited from discussions with Elisabetta Cararra, Earl Carter, Per Cederqvist, Bill Foster, Matt Hammer, Cullen Jennings, Paul Kyzivat, David McGrew, Mats Naslund, Dave Oran, Jonathan Rosenberg, Dave Singer, Mike Thomas, Brian Weis, and Magnus Westerlund.",
      "ja": "この文書は、IETF MMUSICワーキンググループの製品であり、その参加者からのコメントの恩恵を受けています。この資料はまたエリザベッタCararra、アール・カーター、パーはCederqvist、ビル・フォスター、マット・ハマー、カレン・ジェニングス、ポールKyzivat、デビッドマグリュー、マッツ・ナズランド、デイブ・オラン、ジョナサン・ローゼンバーグ、デイブ・シンガー、マイク・トーマス、ブライアン・ワイス、およびとの議論の恩恵を受けマグヌスウェスター。"
    },
    {
      "indent": 0,
      "text": "12. Normative References",
      "section_title": true,
      "ja": "12.引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC3550] Schulzrinne, H., Casner, S., Frederick, R., and V. Jacobson, \"RTP: A Transport Protocol for Real-Time Applications\", STD 64, RFC 3550, July 2003.",
      "ja": "[RFC3550] Schulzrinneと、H.、Casner、S.、フレデリック、R.、およびV.ヤコブソン、 \"RTP：リアルタイムアプリケーションのためのトランスポートプロトコル\"、STD 64、RFC 3550、2003年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC4566] Handley, M., Jacobson, V., and C. Perkins, \"SDP: Session Description Protocol\", RFC 4566, July 2006.",
      "ja": "[RFC4566]ハンドリー、M.、ヤコブソン、V.、およびC.パーキンス、 \"SDP：セッション記述プロトコル\"、RFC 4566、2006年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC4234] Crocker, D., Ed. and P. Overell, \"Augmented BNF for Syntax Specifications: ABNF\", RFC 4234, October 2005.",
      "ja": "[RFC4234]クロッカー、D.、エド。そして、P. Overell、 \"構文仕様のための増大しているBNF：ABNF\"、RFC 4234、2005年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC2828] Shirey, R., \"Internet Security Glossary\", FYI 36, RFC 2828, May 2000.",
      "ja": "[RFC2828] Shirey、R.、 \"インターネットセキュリティ用語集\"、FYI 36、RFC 2828、2000年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC3264] Rosenberg, J. and H. Schulzrinne, \"An Offer/Answer Model with Session Description Protocol (SDP)\", RFC 3264, June 2002.",
      "ja": "[RFC3264]ローゼンバーグ、J.とH. Schulzrinneと、RFC 3264、2002年6月 \"セッション記述プロトコル（SDP）とのオファー/アンサーモデル\"。"
    },
    {
      "indent": 3,
      "text": "[RFC3711] Baugher, M., McGrew, D., Naslund, M., Carrara, E., and K. Norrman, \"The Secure Real-time Transport Protocol (SRTP)\", RFC 3711, March 2004.",
      "ja": "[RFC3711] Baugher、M.、マグリュー、D.、Naslund、M.、カララ、E.、およびK. Norrman、 \"セキュアリアルタイム転送プロトコル（SRTP）\"、RFC 3711、2004年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC1750] Eastlake 3rd, D., Crocker, S., and J. Schiller, \"Randomness Recommendations for Security\", RFC 1750, December 1994.",
      "ja": "[RFC1750]イーストレーク第3、D.、クロッカー、S.、およびJ.シラー、 \"セキュリティのためのランダム性に関する推奨事項\"、RFC 1750、1994年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC3548] Josefsson, S., \"The Base16, Base32, and Base64 Data Encodings\", RFC 3548, July 2003.",
      "ja": "[RFC3548] Josefsson氏、S.、 \"Base16、Base32、およびBase64でデータエンコーディング\"、RFC 3548、2003年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC2434] Narten, T. and H. Alvestrand, \"Guidelines for Writing an IANA Considerations Section in RFCs\", BCP 26, RFC 2434, October 1998.",
      "ja": "[RFC2434] Narten氏、T.とH. Alvestrand、 \"RFCsにIANA問題部に書くためのガイドライン\"、BCP 26、RFC 2434、1998年10月。"
    },
    {
      "indent": 0,
      "text": "13. Informative References",
      "section_title": true,
      "ja": "13.参考文献"
    },
    {
      "indent": 3,
      "text": "[sprecon] Andreasen, F. and D. Wing, \"Security Preconditions for Session Description Protocol Media Streams\", Work in Progress, October 2005.",
      "ja": "[sprecon]アンドレア、F.とD.ウィング、「セッション記述プロトコルのメディアストリームのためのセキュリティの前提条件」、進歩、2005年10月に作業。"
    },
    {
      "indent": 3,
      "text": "[RFC3407] Andreasen, F., \"Session Description Protocol (SDP) Simple Capability Declaration\", RFC 3407, October 2002.",
      "ja": "[RFC3407]アンドレア、F.、 \"セッション記述プロトコル（SDP）シンプルな能力宣言\"、RFC 3407、2002年10月。"
    },
    {
      "indent": 3,
      "text": "[Bellovin] Bellovin, S., \"Problem Areas for the IP Security Protocols,\" in Proceedings of the Sixth Usenix Unix Security Symposium, pp. 1-16, San Jose, CA, July 1996.",
      "ja": "第六のUsenix Unixのセキュリティシンポジウム、頁1-16、カリフォルニア州サンノゼ、1996年7月中に[Bellovin氏] Bellovin氏、S.、 \"IPセキュリティプロトコルの問題領域、\"。"
    },
    {
      "indent": 3,
      "text": "[GDOI] Baugher, M., Weis, B., Hardjono, T., and H. Harney, \"The Group Domain of Interpretation\", RFC 3547, July 2003.",
      "ja": "【GDOI] Baugher、M.、ヴァイス、B.、Hardjono、T.、およびH.ハーニー、 \"解釈のグループドメイン\"、RFC 3547、2003年7月。"
    },
    {
      "indent": 3,
      "text": "[kink] Sakane, S., Kamada, K., Thomas, M. and J. Vilhuber, \"Kerberized Internet Negotiation of Keys (KINK)\", RFC 4430, March 2006.",
      "ja": "[キンク]坂根、S.、鎌田、K.、トーマス、M.及びJ. Vilhuber、 \"キーのケルベロスインターネットネゴシエーション（KINK）\"、RFC 4430、2006年3月。"
    },
    {
      "indent": 3,
      "text": "[ike] Kaufman, C., \"Internet Key Exchange (IKEv2) Protocol\", RFC 4306, December 2005.",
      "ja": "[IKE]カウフマン、C.、 \"インターネットキーエクスチェンジ（IKEv2の）プロトコル\"、RFC 4306、2005年12月。"
    },
    {
      "indent": 3,
      "text": "[ipsec] Kent, S. and K. Seo, \"Security Architecture for the Internet Protocol\", RFC 4301, December 2005.",
      "ja": "[IPSecの]ケント、S.とK. Seo、 \"インターネットプロトコルのためのセキュリティアーキテクチャ\"、RFC 4301、2005年12月。"
    },
    {
      "indent": 3,
      "text": "[maxprate] Westerlund, M., \"A Transport Independent Bandwidth Modifier for the Session Description Protocol (SDP)\", RFC 3890, September 2004.",
      "ja": "[maxprate]ウェスター、M.、 \"セッション記述プロトコルのための交通独立した帯域幅修飾子（SDP）\"、RFC 3890、2004年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC2733] Rosenberg, J. and H. Schulzrinne, \"An RTP Payload Format for Generic Forward Error Correction\", RFC 2733, December 1999.",
      "ja": "[RFC2733]ローゼンバーグ、J.とH. Schulzrinne、 \"一般的なフォワードエラー訂正のためのRTPペイロードフォーマット\"、RFC 2733、1999年12月。"
    },
    {
      "indent": 3,
      "text": "[s/mime] Ramsdell, B., \"Secure/Multipurpose Internet Mail Extensions (S/MIME) Version 3.1 Message Specification\", RFC 3851, July 2004.",
      "ja": "[S / MIME] Ramsdell、B.、 \"/セキュア多目的インターネットメール拡張（S / MIME）バージョン3.1メッセージ仕様\"、RFC 3851、2004年7月。"
    },
    {
      "indent": 3,
      "text": "[pgp/mime] Elkins, M., \"MIME Security with Pretty Good Privacy (PGP)\", RFC 2015, October 1996.",
      "ja": "[PGP / MIME]エルキンズ、M.、 \"プリティグッドプライバシーとMIMEセキュリティ（PGP）\"、RFC 2015、1996年10月。"
    },
    {
      "indent": 3,
      "text": "[TLS] Dierks, T. and C. Allen, \"The TLS Protocol Version 1.0\", RFC 2246, January 1999.",
      "ja": "[TLS]ダークス、T.とC.アレン、 \"TLSプロトコルバージョン1.0\"、RFC 2246、1999年1月。"
    },
    {
      "indent": 3,
      "text": "[keymgt] Arkko, J., Carrara, E., Lindholm, F., Naslund, M., and K. Norrman, \"Key Management Extensions for Session Description Protocol (SDP) and Real Time Streaming Protocol (RTSP)\", RFC 4567, July 2006.",
      "ja": "【keymgt] Arkko、J.、カララ、E.、リンドホルム、F.、Naslund、M.、およびK. Norrman、 \"鍵管理拡張セッション記述プロトコル（SDP）、リアルタイムストリーミングプロトコル（RTSP）のための\"、RFC 4567、2006年7月。"
    },
    {
      "indent": 3,
      "text": "[mikey] Arkko, J., Carrara, E., Lindholm, F., Naslund, M., and K. Norrman, \"MIKEY: Multimedia Internet KEYing\", RFC 3830, August 2004.",
      "ja": "【マイキー] Arkko、J.、カララ、E.、リンドホルム、F.、Naslund、M.、およびK. Norrman、 \"MIKEY：マルチメディアインターネットキーイング\"、RFC 3830、2004年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC2104] Krawczyk, H., Bellare, M., and R. Canetti, \"HMAC: Keyed-Hashing for Message Authentication\", RFC 2104, February 1997.",
      "ja": "[RFC2104] Krawczyk、H.、ベラー、M.、およびR.カネッティ、 \"HMAC：メッセージ認証のための鍵付きハッシュ化\"、RFC 2104、1997年2月。"
    },
    {
      "indent": 3,
      "text": "[skeme] Krawczyk, H., \"SKEME: A Versatile Secure Key Exchange Mechanism for the Internet\", ISOC Secure Networks and Distributed Systems Symposium, San Diego, 1996.",
      "ja": "[SKEME] Krawczyk、H.は、「SKEME：多彩なインターネットのための鍵交換メカニズムを固定」、ISOCセキュアネットワークおよびシステムシンポジウム、サンディエゴ、1996年を分散。"
    },
    {
      "indent": 3,
      "text": "[RFC3312] Camarillo, G., Marshall, W., and J. Rosenberg, \"Integration of Resource Management and Session Initiation Protocol (SIP)\", RFC 3312, October 2002.",
      "ja": "[RFC3312]キャマリロ、G.、マーシャル、W.、およびJ.ローゼンバーグ、RFC 3312、2002年10月 \"資源管理とセッション開始プロトコル（SIP）の統合\"。"
    },
    {
      "indent": 3,
      "text": "[RFC2974] Handley, M., Perkins, C., and E. Whelan, \"Session Announcement Protocol\", RFC 2974, October 2000.",
      "ja": "[RFC2974]ハンドリー、M.、パーキンス、C.、およびE.ウィーラン、 \"セッションアナウンスメントプロトコル\"、RFC 2974、2000年10月。"
    },
    {
      "indent": 3,
      "text": "[srtpf] Ott, J. and E. Carrara, \"Extended Secure RTP Profile for RTCP-based Feedback (RTP/SAVPF)\", work in progress, October 2003.",
      "ja": "【srtpf]オット、J.及びE.カララは、進行中の作業2003年10月 \"RTCPベースのフィードバック（RTP / SAVPF）にSecure RTPプロファイルの拡張します\"。"
    },
    {
      "indent": 3,
      "text": "[RFC3261] Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston, A., Peterson, J., Sparks, R., Handley, M., and E. Schooler, \"SIP: Session Initiation Protocol\", RFC 3261, June 2002.",
      "ja": "[RFC3261]ローゼンバーグ、J.、Schulzrinneと、H.、カマリロ、G.、ジョンストン、A.、ピーターソン、J.、スパークス、R.、ハンドレー、M.、およびE.学生、 \"SIP：セッション開始プロトコル\" 、RFC 3261、2002年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC3311] Rosenberg, J., \"The Session Initiation Protocol (SIP) UPDATE Method\", RFC 3311, September 2002.",
      "ja": "[RFC3311]ローゼンバーグ、J.、 \"セッション開始プロトコル（SIP）更新方法\"、RFC 3311、2002年9月。"
    },
    {
      "indent": 0,
      "text": "Appendix A - Rationale for Keying Material Directionality",
      "ja": "付録A  - 鍵材料方向性の根拠"
    },
    {
      "indent": 3,
      "text": "SDP security descriptions define the keying material for the sending direction, which is included in the SDP. Thus, the key that is carried in an SDP message is a decryption key for the receiver of that SDP message. This is in contrast to the majority of information included in SDP, which describes information for the receiving (or receiving and sending) direction. This reversed information directionality generates some challenges with using the mechanism in the offer/answer model and in particular with SIP, where early media and forking require special consideration (as described in Section 7.3). There are however good reasons for why this was done, which can be summarized as follows:",
      "ja": "SDPセキュリティ記述は、SDPに含まれる送信方向のためのキーイング材料を定義します。このように、SDPメッセージ内で運ばれるキーは、SDPメッセージを受信するための復号鍵です。これは、受信（または受信および送信）するための情報を記述するSDPに含まれる情報の大部分は、方向とは対照的です。これは、情報の方向性は、初期メディアとフォークは特別な配慮を必要とするSIP、（7.3節で説明したように）でオファー/アンサーモデルで、特にメカニズムを使用していくつかの課題が発生逆転しました。以下のように要約することができる。これが行われた理由のためしかし良い理由があります："
    },
    {
      "indent": 3,
      "text": "First of all, there is the general security philosophy of letting the entity that sends traffic decide what key to use for protecting it. SRTP uses counter mode, which is secure when counters do not overlap among senders who share a master key; the surest way to avoid counter overlap is for each endpoint to generate its own master key. Secondly, if SDP security descriptions had been designed to keep the normal SDP information directionality, it would have resulted in problems with supporting early media and SIP forking: If an offer generates multiple answers and the keying material was for the receive direction, some of the parameter values (e.g. lifetime) would have to be shared between all the answerers (senders of media), which would lead to considerable complexity, possibly requiring changes or extensions to SRTP. Other problems were discovered as well, which we describe further below.",
      "ja": "まず第一に、トラフィックがそれを保護するために使用するかを決めるキー送信エンティティをさせるの一般的なセキュリティ上の哲学があります。 SRTPは、カウンタがマスターキーを共有して送信者の間で重複していないときに安全であるカウンタモードを使用しています。カウンタの重複を回避するための最も確実な方法は、独自のマスターキーを生成するために、各エンドポイントのためです。 SDPセキュリティ記述は、通常のSDP情報の方向性を保つように設計されていた場合は第二に、それは初期メディアとSIPのフォークをサポートしていると問題が生じるであろう：オファーは複数回答を生成し、キーイングマテリアルは、受信方向のためのいくつかをした場合パラメータ値（例えば寿命は）おそらくSRTPへの変更や拡張を必要とする、かなり複雑につながるすべての回答（メディアの送信者）、の間で共有されなければなりません。他の問題は、我々はさらに以下に記述され、同様に発見されました。"
    },
    {
      "indent": 3,
      "text": "In the following scenarios, we analyze what would occur if SDP security descriptions had been designed so that the keying material was the receive keying material (rather than its actual design, where the keying material is the sending keying material):",
      "ja": "次のシナリオでは、SDPセキュリティ記述が設計されていた場合に生じるものを分析することにより、鍵材料だった（むしろ鍵素材が送信鍵材料で、実際のデザイン、より）鍵材料を受信します。"
    },
    {
      "indent": 3,
      "text": "Scenario A: Non-Forking Case",
      "ja": "シナリオA：非フォークケース"
    },
    {
      "indent": 6,
      "text": "In this scenario, the offer includes the receiving keying material, the answerer receives it and starts sending data packets towards the offerer. If there was a single crypto attribute in the offer, there would be no ambiguity about which crypto suite was being used and, hence, the incoming packet could be processed. However, in the case where the offer included multiple alternative crypto-attributes, the offerer would not know which one was chosen, and hence, if the offerer received packets before the answer came back, the offerer would be unable to process those packets (problem 1). (Use of the MKI has been suggested as one possible solution to that, however it incurs a per-packet overhead.)",
      "ja": "このシナリオでは、オファーは回答は、それを受信し、オファーに向けてデータパケットの送信を開始し、受信キーイング材料を含みます。提供中の単一の暗号化属性があった場合は、暗号スイートが使用されていたかについてあいまいはないであろうと、それゆえ、着信パケットを処理することができました。しかし、オファーは複数の代替暗号属性が含まれた場合には、オファー側は、選択された1か分からないだろう、と答えが戻って来る前に、オファーがパケットを受け取った場合、したがって、オファー側は、これらのパケットを処理することができない（問題1）。 （MKIの使用は、その1つの可能な解決策として提案されている、しかし、それは、パケットごとのオーバヘッドを招きます。）"
    },
    {
      "indent": 3,
      "text": "Scenario B: Serial Forking Case",
      "ja": "シナリオB：シリアルフォークケース"
    },
    {
      "indent": 6,
      "text": "In this scenario, Alice generates an offer to Bob, who starts sending (early) media towards Alice (no answer returned yet). In this scenario, we assume we aren't also encountering Scenario A (e.g., the offer includes only a single crypto-attribute) and that Bob is using a Synchronization Source (SSRC) value of 1 for his SRTP and SRTCP packets. Alice thus has a crypto-context for SSRC 1, including the associated ROC (Roll Over Counter) and SEQ (RTP Sequence Number). Bob now forwards the call to Carol (Bob still has not generated an answer). At this point, Bob has Alice's key, which sometimes might be a security weakness. As the exchange proceeds, Carol gets the original offer, including the offered crypto-attribute and starts sending media packets towards Alice. It just so happens that Carol chooses an SSRC value of 1, as did Bob. When Carol starts generating packets, there is a potential for what RFC 3711 calls a \"two-time pad\" issue (problem 2), as well as the potential for the ROC to be out of sync between Alice and Carol (problem 3). Note that since Bob and Carol are (presumably) using different source transport addresses, the SSRC reuse does not constitute an SSRC collision (although it may still be interpreted as such by Alice). Per RFC 3711, since the master key would be shared between Bob and Carol in this case, it is RECOMMENDED that Alice leave the session at that point in order to avoid the two-time pad issue. It should also be noted that RFC 3711 recommends against sharing SRTP master keys, which forking may accidentally introduce when the keying material is for the receiving direction.",
      "ja": "このシナリオでは、アリスは（ない答えはまだ返されません）アリスに向けて（早い）メディアの送信を開始するボブに提供を生成します。このシナリオでは、我々はまた、シナリオAに遭遇していない（例えば、オファーはただ一つの暗号属性が含まれている）とボブは彼のSRTPとSRTCPパケットのための1の同期ソース（SSRC）値を使用していることを前提としています。アリスは、このように関連するROC（ロールオーバーカウンター）とSEQ（RTPシーケンス番号）を含む、SSRC 1用の暗号コンテキストを有しています。ボブは今、キャロルへの呼び出し（ボブはまだ答えを生成していない）を転送します。この時点で、ボブは時々、セキュリティ上の弱点かもしれないアリスの鍵を持っています。交換が進むと、キャロルは、提供暗号属性を含むオリジナルの申し出を、取得し、アリスに向けたメディアパケットの送信を開始します。ちょうどので、ボブが行ったようにキャロルが、1のSSRC値を選択することが起こります。キャロルは、パケットの生成を開始すると、ROCはアリスとキャロル（問題3）との間に同期していなければのための潜在的な「二タイムパッド」問題（問題2）を呼び出すだけでなく、どのようなRFC 3711の可能性があります。ボブとキャロルは、異なるソーストランスポートアドレスを使用して、（おそらく）であるので（それがまだアリスによってそのように解釈されてもよいが）、SSRC再利用がSSRC衝突を構成しないことに留意されたいです。マスターキーは、この場合には、ボブとキャロルの間で共有されるため、RFC 3711ごとに、アリスが二度のパッド問題を避けるために、その時点でセッションを残すことが推奨されます。また、RFC 3711は、鍵材料は、受信方向のためのものである場合に誤って導入することができるフォーク、共有SRTPマスタキーに対してお勧めしますことに留意すべきです。"
    },
    {
      "indent": 6,
      "text": "If we consider the above scenario again, but this time with keying material in the offer (and answer) being the sending keying material (as specified by SDP security descriptions), the scenario instead looks as follows: Bob again chooses SSRC 1, and Bob will need to send back an answer to Alice, since Alice needs to learn Bob's sending key. Bob also starts sending media towards Alice (clipping may occur until Alice receives Bob's answer). Bob again forwards the call to Carol who also starts sending early media using SSRC 1. However, Carol needs to generate a new answer (for the dialog between Alice and Carol) in order for Alice to process Carol's packets . Upon receiving this answer, Alice can initiate a new offer/answer exchange (to move the session to another transport address as described in Section 7.3). In this case, there is one master key per session and a unique keystream regardless of whether or not SSRCs collide.",
      "ja": "（SDPセキュリティ記述で指定された）我々は再び上記のシナリオを考えてみても、その提供に材料をキーイングして、この時間は（と答え）送信キーイング材料である場合は、次のようなシナリオではなくなります。ボブは再びSSRC 1、およびボブを選択しますアリスはボブの送信キーを学習する必要があるので、アリスへの回答を返送する必要があります。ボブはまた、（アリスはボブの答えを受信するまでクリッピングが発生する可能性があります）アリスに向けてメディアの送信を開始します。ボブは再びまた、SSRC 1.しかし、キャロルはアリスがキャロルのパケットを処理するためには（アリスとキャロルの間の対話のための）新しい答えを生成する必要が使用して初期メディアの送信を開始するキャロルへの呼び出しを転送します。この回答を受信すると、アリスは（セクション7.3で説明したように、他のトランスポートアドレスにセッションを移動するために）新しいオファー/アンサー交換を開始することができます。この場合、一つのマスターセッションごとキーと関係なくSSRCsが衝突するか否かのユニークな鍵ストリームがあります。"
    },
    {
      "indent": 3,
      "text": "Scenario C: Parallel Forking Case",
      "ja": "シナリオC：パラレルフォークケース"
    },
    {
      "indent": 6,
      "text": "In this scenario, Alice generates an offer (with receive keying material) that gets forked to Bob and Carol in parallel. Bob and Carol both start sending packets (early media) to Alice. If Bob and Carol choose different SSRCs, everything is fine initially. However, one of the crypto context parameters is the master key lifetime, and since Bob and Carol are sharing the same master key (unbeknownst to either), they do not know when they need to rekey (problem 4). If they choose the same SSRC, we have the two-time pad problem again (problem 2).",
      "ja": "（材料を合わせる受信して）並列にボブとキャロルに二股されることをこのシナリオでは、アリスは、オファーを生成します。ボブとキャロルは、両方のアリスに送信するパケット（初期メディア）を起動します。ボブとキャロルが異なるSSRCsを選択した場合、すべてが最初は結構です。しかし、暗号コンテキストパラメータの一つは、マスターキーの有効期間である、とボブとキャロル以来、彼らは（問題4）のキー更新する必要があるとき、彼らは知らない（どちらかに知られず）同じマスターキーを共有しています。彼らは同じSSRCを選択した場合、我々は再び（問題2）の2回のパッド問題を抱えています。"
    },
    {
      "indent": 3,
      "text": "In summary, if keying material were for the receive direction, we would have the following problems:",
      "ja": "要約すると、場合鍵材料は受信方向のためだった、我々は次のような問題を持っているでしょう。"
    },
    {
      "indent": 6,
      "text": "- Problem 1: Offerer does not know which of multiple crypto offers was chosen by answerer.",
      "ja": " - 問題1：申出人は回答によって選ばれた複数の暗号オファーのどの知りません。"
    },
    {
      "indent": 6,
      "text": "- Problem 2: SSRC reuse (or SSRC collisions) between multiple answerers (serial or parallel forking) may lead to the two-time pad issue.",
      "ja": " - 問題2：SSRC再利用（またはSSRC衝突）複数回答（シリアル又はパラレルフォーキング）との間には、2回のパッドの問題につながる可能性があります。"
    },
    {
      "indent": 6,
      "text": "- Problem 3: Part of the crypto context parameters (specifically the ROC) is not communicated but derived, and if we allow multiple entities to use the same SSRC (sequentially), the ROC can be wrong.",
      "ja": " - 問題3：暗号コンテキストパラメータの一部（特にROC）が伝えたが導出され、我々は複数のエンティティが同じSSRC（順次）を使用できるようにする場合は、ROCは間違っている可能性がされていません。"
    },
    {
      "indent": 6,
      "text": "- Problem 4: All crypto contexts that share a master key need to maintain a shared set of counters (master key lifetime), and if we allow for multiple entities on different platforms to share a master key, we would need a mechanism to synchronize these counters.",
      "ja": " - 問題4：マスターキーを共有するすべて暗号化コンテキストは、カウンタの共有セット（マスターキー寿命）を維持する必要がある、と私たちはマスターキーを共有するために、異なるプラットフォーム上で複数のエンティティを可能とするならば、我々はこれらを同期するためのメカニズムが必要になりますカウンター。"
    },
    {
      "indent": 6,
      "text": "Problem 1 could be addressed by using the MKI as proposed separately; however, it would result in using extra bandwidth for each SRTP media packet. Solving problem 2 implies a need for being able to synchronize SSRC values with the answerer (or abandon the session when SSRC reuse or SSRC collisions occur). Problem 3 implies a need for being able to synchronize ROC values on a per SSRC basis (or abandon the session when SSRC reuse occurs). Problem 4 could be solved by having the offerer (Alice, i.e., the entity receiving media) determine how many packets have actually been generated by the total set of senders to Alice and, hence, be the one to initiate the rekeying. In the case of packet losses, etc. this is not foolproof, but in practice it could probably be addressed by use of a reasonable safety margin.",
      "ja": "問題1は、個別に提案されるようにMKIを使用することによって対処することができ、しかし、それは各SRTPメディアパケットのための余分な帯域幅を使用することになります。問題2を解決する回答とSSRC値を同期させることができることの必要性を暗示する（またはSSRC再利用又はSSRC衝突が発生したときにセッションを放棄します）。問題3は、SSRCごとにROC値を同期（またはSSRC再利用が発生したときにセッションを放棄）することができることの必要性を意味します。問題4は、申出を有することによって解決することができた（アリス、即ち、メディア受信エンティティ）は、実際にアリスに送信者の全体集合によって生成されたパケット数を決定し、したがって、キー更新を開始するいずれか。などのパケット損失の場合、これは絶対確実ではありませんが、実際にはそれはおそらく、合理的な安全マージンを使用することによって対処することができます。"
    },
    {
      "indent": 6,
      "text": "In conclusion, it would be expected from an offer/answer and SIP point of view to have the offer (and answer) keying material be the receive keying material; however, doing so would trade security for SIP friendliness, e.g., two-time pad and master key lifetime issues, and violate the RFC 3711 rule for sharing an SRTP master key across SRTP sessions.",
      "ja": "結論として、提供している（と回答）するビューのオファー/アンサーとSIP点から期待されるキーイングマテリアル材料を合わせる受信します。しかし、そうすることはSIPの親しみやすさ、例えば、2回のパッドとマスターキーの有効期間の問題のためにセキュリティを交換し、SRTPセッション間でSRTPマスターキーを共有するためのRFC 3711の規則に違反します。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Flemming Andreasen Cisco Systems, Inc. 499 Thornall Street, 8th Floor Edison, New Jersey 08837 USA",
      "ja": "フレミングAndreasenのシスコシステムズ社499 Thornallストリート、8階エジソン、ニュージャージー08837 USA"
    },
    {
      "indent": 3,
      "text": "EMail: fandreas@cisco.com",
      "ja": "メールアドレス：fandreas@cisco.com"
    },
    {
      "indent": 3,
      "text": "Mark Baugher 5510 SW Orchid Street Portland, Oregon 97219 USA",
      "ja": "マークBaugher 5510 SWオーキッド・ストリート、ポートランド、オレゴン州97219 USA"
    },
    {
      "indent": 3,
      "text": "EMail: mbaugher@cisco.com",
      "ja": "メールアドレス：mbaugher@cisco.com"
    },
    {
      "indent": 3,
      "text": "Dan Wing Cisco Systems, Inc. 170 West Tasman Drive San Jose, CA 95134 USA",
      "ja": "ダン・ウィングシスコシステムズ、株式会社170西タスマン・ドライブサンノゼ、CA 95134 USA"
    },
    {
      "indent": 3,
      "text": "EMail: dwing@cisco.com",
      "ja": "メールアドレス：dwing@cisco.com"
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2006).",
      "ja": "著作権（C）インターネット協会（2006）。"
    },
    {
      "indent": 3,
      "text": "This document is subject to the rights, licenses and restrictions contained in BCP 78, and except as set forth therein, the authors retain all their rights.",
      "ja": "この文書では、BCP 78に含まれる権利と許可と制限の適用を受けており、その中の記載を除いて、作者は彼らのすべての権利を保有します。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein are provided on an \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書とここに含まれている情報は、基礎とCONTRIBUTOR「そのまま」、ORGANIZATION HE / SHEが表すまたはインターネットソサエティおよびインターネット・エンジニアリング・タスク・フォース放棄すべての保証、明示または、（もしあれば）後援ISに設けられています。黙示、情報の利用は、特定の目的に対する権利または商品性または適合性の黙示の保証を侵害しない任意の保証含むがこれらに限定されません。"
    },
    {
      "indent": 0,
      "text": "Intellectual Property",
      "ja": "知的財産"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any Intellectual Property Rights or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; nor does it represent that it has made any independent effort to identify any such rights. Information on the procedures with respect to rights in RFC documents can be found in BCP 78 and BCP 79.",
      "ja": "IETFは、本書またはそのような権限下で、ライセンスがたりないかもしれない程度に記載された技術の実装や使用に関係すると主張される可能性があります任意の知的財産権やその他の権利の有効性または範囲に関していかなる位置を取りません利用可能です。またそれは、それがどのような権利を確認する独自の取り組みを行ったことを示すものでもありません。 RFC文書の権利に関する手続きの情報は、BCP 78およびBCP 79に記載されています。"
    },
    {
      "indent": 3,
      "text": "Copies of IPR disclosures made to the IETF Secretariat and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the IETF on-line IPR repository at http://www.ietf.org/ipr.",
      "ja": "IPRの開示のコピーが利用できるようにIETF事務局とライセンスの保証に行われた、または本仕様の実装者または利用者がそのような所有権の使用のための一般的なライセンスまたは許可を取得するために作られた試みの結果を得ることができますhttp://www.ietf.org/iprのIETFのオンラインIPRリポジトリから。"
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights that may cover technology that may be required to implement this standard. Please address the information to the IETF at ietf-ipr@ietf.org.",
      "ja": "IETFは、その注意にこの標準を実装するために必要とされる技術をカバーすることができる任意の著作権、特許または特許出願、またはその他の所有権を持ってすべての利害関係者を招待します。 ietf-ipr@ietf.orgのIETFに情報を記述してください。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is provided by the IETF Administrative Support Activity (IASA).",
      "ja": "RFCエディタ機能のための資金は、IETF管理サポート活動（IASA）によって提供されます。"
    }
  ]
}