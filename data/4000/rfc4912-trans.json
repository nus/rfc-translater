{
  "title": {
    "text": "RFC 4912 - Abstract Syntax Notation X (ASN.X)",
    "ja": "RFC 4912 - 抽象構文記法X（ASN.X）"
  },
  "number": 4912,
  "created_at": "2019-10-28 13:13:15.382244+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                            S. Legg\nRequest for Comments: 4912                                       eB2Bcom\nCategory: Experimental                                         July 2007",
      "raw": true
    },
    {
      "indent": 19,
      "text": "Abstract Syntax Notation X (ASN.X)",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This memo defines an Experimental Protocol for the Internet community. It does not specify an Internet standard of any kind. Discussion and suggestions for improvement are requested. Distribution of this memo is unlimited.",
      "ja": "このメモはインターネットコミュニティのためにExperimentalプロトコルを定義します。それはどんな種類のインターネット標準を指定しません。改善のための議論や提案が要求されています。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The IETF Trust (2007).",
      "ja": "著作権（C）IETFトラスト（2007）。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "Abstract Syntax Notation X (ASN.X) is a semantically equivalent Extensible Markup Language (XML) representation for Abstract Syntax Notation One (ASN.1) specifications. ASN.X completely avoids the numerous ambiguities inherent in the ASN.1 language; therefore, specifications written in ASN.X are much easier to parse and manage than original ASN.1 specifications. ASN.X, together with the Robust XML Encoding Rules (RXER), constitutes a schema language for XML documents that offers, through other ASN.1 encoding rules, alternative compact binary encodings for XML instance documents.",
      "ja": "抽象構文記法X（ASN.X）は、抽象構文記法1（ASN.1）仕様については、意味的に等価な拡張マークアップ言語（XML）表現です。 ASN.Xは完全にASN.1言語に固有の多数の曖昧さを回避し、そのため、ASN.Xで書かれた仕様は、解析して、元のASN.1仕様よりも管理がはるかに簡単です。 ASN.Xは、一緒に堅牢なXMLエンコーディングルール（RXER）と、他のASN.1符号化規則、XMLインスタンス文書の別のコンパクトバイナリエンコーディングを介して、提供するXMLドキュメントのスキーマ言語を構成します。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................4\n2. Conventions .....................................................5\n3. General Considerations ..........................................6\n   3.1. Annotations ................................................7\n4. ModuleDefinition Translation ....................................8\n5. Translation of Assignments .....................................11\n   5.1. Referencing Named Constructs ..............................11\n   5.2. Importing Namespaces ......................................12\n   5.3. TypeAssignment Translation ................................14\n   5.4. ValueAssignment and XMLValueAssignment Translation ........14\n   5.5. ValueSetTypeAssignment Translation ........................15\n   5.6. ObjectClassAssignment Translation .........................15\n   5.7. ObjectAssignment Translation ..............................16\n   5.8. ObjectSetAssignment Translation ...........................16\n   5.9. ParameterizedAssignment Translation .......................17\n6. Translation of Types ...........................................17\n   6.1. Identifier Replacement ....................................17\n   6.2. DefinedType Translation ...................................18\n   6.3. Translation of Built-in Types .............................20\n   6.4. BitStringType Translation .................................21\n   6.5. IntegerType Translation ...................................22\n   6.6. EnumeratedType Translation ................................24\n   6.7. PrefixedType Translation ..................................25\n        6.7.1. Short Form TaggedType Translation ..................28\n        6.7.2. Long Form TaggedType Translation ...................29\n   6.8. SelectionType Translation .................................30\n   6.9. InstanceOfType Translation ................................31\n   6.10. ObjectClassFieldType Translation .........................31\n   6.11. TypeFromObject and ValueSetFromObjects Translation .......32\n   6.12. Translation of Combining Types ...........................32\n        6.12.1. NamedType Translation .............................32\n        6.12.2. SequenceType Translation ..........................36\n        6.12.3. SetType Translation ...............................38\n        6.12.4. ChoiceType Translation ............................39\n        6.12.5. Translation of UNION Types ........................40\n        6.12.6. SequenceOfType Translation ........................41\n        6.12.7. Translation of LIST Types .........................42\n        6.12.8. SetOfType Translation .............................42\n        6.12.9. Effect of Insertion Encoding Instructions .........43\n   6.13. Translation of Constrained Types .........................43\n        6.13.1. Constraint Translation ............................46\n        6.13.2. UserDefinedConstraint Translation .................46\n        6.13.3. TableConstraint Translation .......................47\n        6.13.4. ContentsConstraint Translation ....................49\n        6.13.5. ExceptionSpec Translation .........................50",
      "raw": true
    },
    {
      "indent": 3,
      "text": "7. Translation of Values ..........................................51\n   7.1. Translation of Literal Values .............................53\n   7.2. Translation of Notational Values ..........................54\n        7.2.1. DefinedValue Translation ...........................56\n        7.2.2. BuiltinValue Translation ...........................57\n        7.2.3. ValueFromObject Translation ........................60\n        7.2.4. ObjectClassFieldValue Translation ..................60\n8. Translation of Value Sets ......................................61\n   8.1. ElementSetSpecs Translation ...............................62\n   8.2. ElementSetSpec Translation ................................62\n   8.3. SubtypeElements Translation ...............................63\n        8.3.1. ValueRange Translation .............................64\n        8.3.2. InnerTypeConstraints Translation ...................65\n9. Translation of Object Classes ..................................66\n   9.1. DefinedObjectClass Translation ............................66\n   9.2. ObjectClassDefn Translation ...............................68\n        9.2.1. TypeFieldSpec Translation ..........................68\n        9.2.2. FixedTypeValueFieldSpec Translation ................69\n        9.2.3. FixedTypeValueSetFieldSpec Translation .............70\n        9.2.4. VariableTypeValueFieldSpec Translation .............71\n        9.2.5. VariableTypeValueSetFieldSpec Translation ..........73\n        9.2.6. FieldName Translation ..............................74\n        9.2.7. ObjectFieldSpec Translation ........................75\n        9.2.8. ObjectSetFieldSpec Translation .....................76\n10. Translation of Objects ........................................77\n   10.1. DefinedObject Translation ................................77\n   10.2. ObjectDefn Translation ...................................78\n   10.3. ObjectFromObject Translation .............................80\n11. Translation of Object Sets ....................................80\n   11.1. DefinedObjectSet Translation .............................81\n   11.2. ObjectSetElements Translation ............................82\n        11.2.1. ObjectSetFromObjects Translation ..................83\n12. Translation of Information From Objects .......................83\n13. Translation of Parameterized Definitions ......................83\n14. EncodingControlSections Translation ...........................93\n15. Security Considerations .......................................94\n16. Acknowledgements ..............................................94\n17. References ....................................................95\n   17.1. Normative References .....................................95\n   17.2. Informative References ...................................97\nAppendix A. ASN.1 for ASN.X .......................................95\nAppendix B. ASN.X for ASN.X ......................................115",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "A full parser for the Abstract Syntax Notation One (ASN.1) language [X.680][X.680-1][X.681][X.682][X.683] is difficult to implement due to numerous ambiguities in the notation. For example, certain notations for a Value are syntactically indistinguishable from notation for a ValueSet, Object, ObjectSet, DummyReference, or SimpleTableConstraint. An ObjectClassAssignment, ObjectAssignment, or ObjectSetAssignment resembles respectively a TypeAssignment, ValueAssignment, or ValueSetTypeAssignment. A FixedTypeValueFieldSpec or FixedTypeValueSetFieldSpec resembles respectively an ObjectFieldSpec or ObjectSetFieldSpec, and an ObjectClassFieldType resembles InformationFromObjects notation. In general, such ambiguities can only be resolved once the entire specification has been parsed. There are other notations that are not mutually ambiguous but still require several lexical tokens to be scanned before they can be distinguished from each other. The difficulty of parsing ASN.1 is an impediment to its wider adoption.",
      "ja": "抽象構文記法1（ASN.1）言語[X.680] [X.680-1] [X.681] [X.682] [X.683]の完全なパーサーにより、多数のあいまいに実現することは困難です表記インチ例えば、値の特定の表記法は、値セット、オブジェクト、objectSetと、DummyReference、又はSimpleTableConstraintための表記から構文的に区別できません。 ObjectClassAssignment、ObjectAssignment、またはObjectSetAssignmentはそれぞれTypeAssignment、ValueAssignment、またはValueSetTypeAssignment似ています。 FixedTypeValueFieldSpecまたはFixedTypeValueSetFieldSpecそれぞれObjectFieldSpec又はObjectSetFieldSpec似ている、とObjectClassFieldTypeはInformationFromObjects表記に似ています。明細書全体が解析されると、一般に、そのような曖昧さは、解消することができます。相互に曖昧ではありませんが、それでも、彼らは互いに区別することができます前に、スキャンするいくつかの字句を必要とする他の表記があります。 ASN.1を解析することの難しさは、その採用拡大への障害となっています。"
    },
    {
      "indent": 3,
      "text": "This document defines a semantically equivalent Extensible Markup Language (XML) [XML10][XML11] representation for ASN.1 specifications called Abstract Syntax Notation X (ASN.X). An ASN.X module is a well-formed and valid XML document conforming to XML namespaces [XMLNS10][XMLNS11]. ASN.X completely avoids the inherent ambiguities of the ASN.1 language; therefore, specifications written in ASN.X are much easier to parse and manage than original ASN.1 specifications. For example, any conformant XML processor forms the basis of an ASN.1 toolkit.",
      "ja": "この文書では、抽象構文記法X（ASN.X）と呼ばれるASN.1仕様の意味的に等価な拡張マークアップ言語（XML）[XML10] [XML11]表現を定義します。 ASN.Xモジュール[XMLNS11] [XMLNS10] XML名前空間に準拠した整形及び有効なXML文書です。 ASN.Xは完全にASN.1言語の固有の曖昧さを回避し、そのため、ASN.Xで書かれた仕様は、解析して、元のASN.1仕様よりも管理がはるかに簡単です。例えば、任意の準拠XMLプロセッサはASN.1ツールキットの基礎を形成します。"
    },
    {
      "indent": 3,
      "text": "ASN.X, together with the Robust XML Encoding Rules (RXER) [RXER], constitutes a schema language for XML documents that offers, through other ASN.1 encoding rules, alternative compact binary encodings for XML instance documents conforming to an ASN.X specification. ASN.X definitions can also incorporate type, element, and attribute definitions from XML Schema [XSD1] documents, RELAX NG [RNG] documents, or Document Type Definitions (DTDs) [XML10][XML11].",
      "ja": "一緒にロバストXMLエンコーディング規則（RXER）とASN.Xは、[RXER]、他のASN.1符号化ルールを介して、ASN.Xに準拠するXMLインスタンス文書の別のコンパクトバイナリエンコーディングを提供するXMLドキュメントのスキーマ言語を構成します仕様。 ASN.X定義はまた、タイプ、要素を組み込む、およびXMLスキーマ[XSD1】文書から属性定義、[XML11] [XML10] NG [RNG]の文書、または文書型定義（DTDの）緩和することができます。"
    },
    {
      "indent": 3,
      "text": "ASN.X is defined in terms of rules for translating from an ASN.1 specification. This does not preclude an ASN.X module being written directly without a pre-existing ASN.1 module; however, such an ASN.X module is considered valid if and only if there exists, in principle, an ASN.1 module that when translated would yield the ASN.X module.",
      "ja": "ASN.XはASN.1仕様から変換するためのルールで定義されています。これは、既存のASN.1モジュールなしで直接書き込まれるASN.Xモジュールを排除するものではありません。そしてそこに存在する場合にのみ、原則的には、翻訳されたASN.1モジュールはASN.Xモジュールをもたらすならばしかし、このようASN.Xモジュールが有効と考えられています。"
    },
    {
      "indent": 3,
      "text": "The format for ASN.X has also been designed so that the content of an ASN.X module conforms to the RXER encoding of an abstract value of an ASN.1 type, the ModuleDefinition type, presented in Appendix A. This means that it is possible to decode an ASN.X module using an RXER decoder and then re-encode the abstract value (for storage or transmission) using any of the other encoding rules for ASN.1. Thus, the \"X\" in ASN.X can be regarded as standing for either XML or RXER, or more generally, for any set of ASN.1 encoding rules.",
      "ja": "ASN.XのフォーマットもASN.Xモジュールの含有量はASN.1タイプの抽象値のRXER符号化に適合するように設計された、付録Aに提示ModuleDefinitionはタイプが、これは、それがあることを意味します可能ASN.1のための他の符号化規則のいずれかを使用して、その後RXERデコーダ及び（貯蔵または伝送するための）再エンコード抽象値を用いASN.Xモジュールを復号します。したがって、ASN.Xで「X」は、ASN.1符号化規則の任意のセットのために、より一般的にはXMLまたはRXERいずれか放置、またはとみなすことができます。"
    },
    {
      "indent": 3,
      "text": "The ASN.X translation of the ASN.1 module in Appendix A is presented in Appendix B.",
      "ja": "付録AのASN.1モジュールのASN.Xの翻訳は付録Bに提示されています"
    },
    {
      "indent": 0,
      "text": "2. Conventions",
      "section_title": true,
      "ja": "2.表記"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", and \"MAY\" in this document are to be interpreted as described in BCP 14, RFC 2119 [BCP14]. The key word \"OPTIONAL\" is exclusively used with its ASN.1 meaning.",
      "ja": "キーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、 \"SHALL\"、 \"SHOULD\"、 \"ないもの\"、 \"推奨\" \"ない（SHOULD NOT）\"、および本文書にように解釈されるべきであり、 \"MAY\" BCP 14、RFC 2119 [BCP14]で説明。キーワード「OPTIONAL」は、もっぱらそのASN.1の意味で使用されています。"
    },
    {
      "indent": 3,
      "text": "Throughout this document \"type\" shall be taken to mean an ASN.1 type, and \"value\" shall be taken to mean an ASN.1 abstract value.",
      "ja": "本書では、「タイプ」はASN.1タイプを意味するものとし、「値が」ASN.1抽象値を意味するものとします。"
    },
    {
      "indent": 3,
      "text": "A reference to an ASN.1 production [X.680] (e.g., Type, NamedType) is a reference to the text in an ASN.1 specification corresponding to that production.",
      "ja": "ASN.1の製造[X.680]（例えば、タイプ、NamedType）への言及は、その生産に対応するASN.1仕様のテキストへの参照です。"
    },
    {
      "indent": 3,
      "text": "The description of the translation of an ASN.1 module into an ASN.X module makes use of definitions from the XML Information Set (Infoset) [INFOSET]. In particular, information item property names follow the Infoset convention of being shown in square brackets, e.g., [local name]. Literal values of Infoset properties are enclosed in double quotes; however, the double quotes are not part of the property values. In the sections that follow, \"information item\" will be abbreviated to \"item\", e.g., \"element information item\" is abbreviated to \"element item\". Element items will be referred to by their [local name] in angle brackets, e.g., \"the <type> element item\" means the element item with the [local name] \"type\". Attribute items will be referred to by their [local name], e.g., \"the type attribute item\" means the attribute item with the [local name] \"type\".",
      "ja": "ASN.XモジュールにASN.1モジュールの翻訳の説明はXML情報セット（インフォセット）[INFOSET]からの定義を使用しています。具体的には、情報アイテムのプロパティ名は、例えば、[ローカル名]角括弧内に示されているのインフォセット慣例に従います。インフォセットのプロパティのリテラル値は二重引用符で囲まれています。しかし、二重引用符は、プロパティ値の一部ではありません。以下の節では、「情報アイテム」とは、例えば、「要素情報項目」、「アイテム」と表記する「要素項目」と略記します。要素項目は角括弧内にそれらの[ローカル名]で参照され、例えば、「<type>要素の項目は、」[ローカル名「タイプ」の要素項目を意味します。例えばは、「type属性項目が」[ローカル名「タイプ」の属性項目を意味し、それらの[ローカル名]で参照されるアイテム属性。"
    },
    {
      "indent": 3,
      "text": "This document uses the namespace prefix \"asnx:\" to stand for the namespace name \"urn:ietf:params:xml:ns:asnx\", though in practice any valid namespace prefix is permitted in ASN.X.",
      "ja": "この文書では、名前空間接頭辞「asnx：」を使用して名前空間名を表すために、「URN：IETF：のparams：XML：NS：asnx」、実際には任意の有効な名前空間接頭辞がASN.X.で許可されているが"
    },
    {
      "indent": 3,
      "text": "Encoding instructions [X.680-1] referenced by name in this specification are encoding instructions for RXER [RXEREI]. The associated provisions do not apply to encoding instructions for other encoding rules that happen to have the same name.",
      "ja": "【X.680-1]本明細書で名前によって参照される符号化命令はRXER [RXEREI]のための命令をコード化しています。関連する規定が同じ名前を持って起こる他の符号化規則の符号化の指示には適用されません。"
    },
    {
      "indent": 3,
      "text": "Code points for characters [UNICODE] are expressed using the Unicode convention U+n, where n is four to six hexadecimal digits, e.g., the space character is U+0020.",
      "ja": "文字[UNICODE]のコードポイントは、nは4〜6桁の16進数であるユニコード規則U + Nを使用して表現され、例えば、空白文字はU + 0020です。"
    },
    {
      "indent": 0,
      "text": "3. General Considerations",
      "section_title": true,
      "ja": "3.一般的な考慮事項"
    },
    {
      "indent": 3,
      "text": "ASN.X is defined in terms of rules for translating an ASN.1 module into a synthetic Infoset. This synthetic Infoset is then serialized into a well-formed and valid XML document (the ASN.X module) in the same manner that the synthetic Infoset for a non-canonical RXER encoding is serialized into an XML document (see Section 6.12 of the specification for RXER [RXER]).",
      "ja": "ASN.Xは、合成情報セットにASN.1モジュールを変換するためのルールで定義されています。この合成情報セットは、非カノニカルRXER符号化のための合成インフォセットは、XML文書にシリアル化されるのと同じように良好に形成され、有効なXML文書（ASN.Xモジュール）にシリアル化される（仕様のセクション6.12を参照してくださいRXER用【RXER]）。"
    },
    {
      "indent": 6,
      "text": "Aside: The serialization permits CDATA sections, character references, and parsed entity references. However, note that an ASN.X module may be transferred as data in a protocol and that some protocols disallow entity references.",
      "ja": "脇：直列化は、CDATAセクション、文字参照、および解析された実体参照を可能にします。しかし、ASN.Xモジュールはプロトコルのデータとして転送することができること、およびいくつかのプロトコルは、実体参照を許可しないことに注意してください。"
    },
    {
      "indent": 3,
      "text": "Apart from the [document element] of the document item for an ASN.X module, the translation of some ASN.1 construct belongs to the [children] or [attributes] of an enclosing element item.",
      "ja": "別にASN.Xモジュールのための文書の項目の[ドキュメント要素]から、いくつかのASN.1構造の翻訳は、[子供]または囲み要素項目の[属性]に属します。"
    },
    {
      "indent": 3,
      "text": "Where the translation of the construct is an element item, it is appended to the [children] of the enclosing element item. Elements MUST be appended to the [children] of the enclosing element item in the order described. Translators MAY add white space character items (i.e., U+0020, U+0009, U+000D and U+000A) to the [children] of any element item (to improve the layout) except element items with the [local name] \"literalValue\", \"fieldName\", or \"restrictBy\".",
      "ja": "構築体の翻訳が要素項目である場合、それを囲む要素項目の[子供]に追加されます。要素は、記載された順序で囲み要素項目の[子供]に追加されなければなりません。翻訳者は、[ローカル名]を持つ要素の項目を除くすべての要素項目（レイアウトを改善するために）の[子供]に（すなわち、U + 0020、U + 0009、U + 000DとU + 000A）空白文字項目を追加してもよい（MAY） \"literalValue\"、 \"フィールド名\"、または \"restrictBy\"。"
    },
    {
      "indent": 6,
      "text": "Aside: White space in the [children] of <fieldName> and <restrictBy> element items is explicitly covered under their respective descriptions.",
      "ja": "脇：<フィールド名>と<によって制限>要素項目が明示的に、それぞれの説明の下で覆われているの[子供]ホワイトスペース。"
    },
    {
      "indent": 3,
      "text": "Where the translation of the construct is an attribute item, it is added to the [attributes] of the enclosing element item. The order of attribute items is not significant. Translators MAY add leading and trailing white space characters to the [normalized value] of any attribute item except an attribute item with the [local name] \"literalValue\".",
      "ja": "構築体の翻訳が属性項目である場合、それを囲む要素項目の[属性]に追加されます。属性項目の順序は重要ではありません。翻訳者は、[ローカル名]「literalValue」の属性項目以外の任意の属性項目の[正規化した値]に先頭と末尾の空白文字を追加するかもしれません。"
    },
    {
      "indent": 6,
      "text": "Aside: An attribute or element item with the [local name] \"literalValue\" holds an RXER Infoset translation of an abstract value, and white space characters may be significant in that abstract value. In most cases, RXER itself permits optional leading and trailing white space characters in the Infoset translation.",
      "ja": "脇：[ローカル名]と属性や要素項目は「literalValueは」抽象的価値、および空白文字のRXERインフォセットの翻訳は、その抽象的価値に大きくなる可能性が保持しています。ほとんどの場合、RXER自体はインフォセット翻訳オプションの先頭と末尾の空白文字を許可します。"
    },
    {
      "indent": 3,
      "text": "Translators MAY add comment and processing instruction (PI) items to the [children] of any element item except an element item with the [local name] \"literalValue\".",
      "ja": "翻訳者は、[ローカル名]「literalValue」を持つ要素項目以外の任意の要素項目の[子供]にコメントや処理命令（PI）の項目を追加するかもしれません。"
    },
    {
      "indent": 6,
      "text": "Aside: In most cases, RXER itself permits comment and PI items in the [children] of the element items with the [local name] \"literalValue\".",
      "ja": "脇：ほとんどの場合、RXER自体は、[ローカル名]「literalValue」を持つ要素項目の[子供]にコメントやPIの項目を可能にします。"
    },
    {
      "indent": 6,
      "text": "Aside: Note that an ASN.X module may be transferred as data in a protocol and that some protocols disallow processing instructions.",
      "ja": "脇：ASN.Xモジュールはプロトコルのデータとして転送することができること、およびいくつかのプロトコルは処理命令を許可しないことに留意されたいです。"
    },
    {
      "indent": 3,
      "text": "The [in-scope namespaces] and [namespace attributes] for <literalValue> and <restrictBy> element items are determined according to Section 6.10 of the specification for RXER [RXER]. The [in-scope namespaces] and [namespace attributes] for other element items in the translation are determined according to Section 6.2.2.1 of the specification for RXER.",
      "ja": "[スコープ内の名前空間]と<literalValue>と<restrictBy>要素項目の[名前空間属性]はRXER [RXER]の仕様のセクション6.10に応じて決定されます。 [スコープ内の名前空間]および翻訳に他の要素項目の[名前空間属性]はRXERの仕様のセクション6.2.2.1に応じて決定されます。"
    },
    {
      "indent": 3,
      "text": "The [namespace name] of any element item or attribute item generated by the translation from an ASN.1 specification has no value unless specified otherwise. In those cases where the [namespace name] of an element item has a value, the [prefix] of the element item is determined according to Section 6.2.2.2 of the specification for RXER. In those cases where the [namespace name] of an attribute item has a value, the [prefix] of the attribute item is determined according to Section 6.2.3.1 of the specification for RXER.",
      "ja": "特に断らない限りASN.1仕様から翻訳によって生成された任意の要素項目または属性項目の[名前空間名]は値を持ちません。要素項目の[名前空間名]の値を有するような場合では、要素項目の[接頭辞] RXERの仕様のセクション6.2.2.2に応じて決定されます。属性項目の[名前空間名]属性項目の値は、[プレフィックス]を有するような場合にRXERの仕様のセクション6.2.3.1に応じて決定されます。"
    },
    {
      "indent": 6,
      "text": "Aside: Non-canonical RXER allows all valid namespace prefixes and all valid placements for their corresponding namespace declaration attributes.",
      "ja": "脇：非正規のRXERは、対応する名前空間宣言属性のすべての有効な名前空間接頭辞と、すべての有効な配置を可能にします。"
    },
    {
      "indent": 3,
      "text": "Whenever an element item is added to the [children] of an enclosing element item, the enclosing element item becomes the [parent] of the element item.",
      "ja": "素子アイテムが封入要素項目の[子供]に追加されるたびに、囲み要素項目は、要素項目の[親]となります。"
    },
    {
      "indent": 3,
      "text": "Whenever an attribute item is added to the [attributes] of an element item, the element item becomes the [owner element] of the attribute item. For each attribute item, the [specified] property is set to true, the [attribute type] has no value, and the value of the [references] property is set to unknown.",
      "ja": "属性項目が要素項目の[属性]に追加されるたびに、要素項目が属性項目の[所有者要素]となります。各属性項目については、[指定]プロパティがtrueに設定されている、[属性タイプ]は値を持たない、および[参照]プロパティの値は未知に設定されています。"
    },
    {
      "indent": 0,
      "text": "3.1. Annotations",
      "section_title": true,
      "ja": "3.1. 注釈"
    },
    {
      "indent": 3,
      "text": "In a number of places, as indicated in subsequent sections, the translator is permitted to add an element item with the [local name] \"annotation\". The [children] and [attributes] of the <annotation> element item are at the discretion of the translator.",
      "ja": "多くの場所において、後続のセクションで示されるように、翻訳者は、[ローカル名「注釈」の要素項目を追加することが許されます。 <注釈>要素項目の[子供]と[属性]は翻訳者の裁量です。"
    },
    {
      "indent": 3,
      "text": "Typical uses of the <annotation> element item would be to hold comments from the ASN.1 specification that are normative in nature, e.g., a comment in a user-defined constraint, or to hold directives for an ASN.1 compiler.",
      "ja": "<注釈>要素項目の典型的な用途は、自然界で、例えば、ユーザー定義の制約にコメント、またはASN.1コンパイラのための指示を保持する規範であるASN.1仕様からのコメントを保持するであろう。"
    },
    {
      "indent": 3,
      "text": "Free text or XML comments in an <annotation> element will be preserved in a Canonical RXER (CRXER) encoding [RXER] (because the corresponding ASN.1 type for the <annotation> element item is the Markup type [RXER]), while XML comments outside <annotation> elements will not be preserved.",
      "ja": "<注釈>要素内のフリーテキスト又はXMLコメントはながら、正規RXER（CRXER）をコードする[RXER]（<注釈>要素項目の対応するASN.1タイプがマークアップ型であるため、[RXER]）に保存しますXMLコメントは外<注釈>要素は保存されません。"
    },
    {
      "indent": 3,
      "text": "Vendors using the <annotation> element items to hold ASN.1 compiler directives (as attributes or child elements of the <annotation> element) SHOULD use element or attribute names that are qualified with a namespace name specific to the vendor.",
      "ja": "（<注釈>要素の属性や子要素として）ASN.1コンパイラ・ディレクティブを保持するために、<注釈>要素のアイテムを使用したベンダーは、ベンダー固有の名前空間名で修飾されている要素や属性の名前を使用すべきです。"
    },
    {
      "indent": 0,
      "text": "4. ModuleDefinition Translation",
      "section_title": true,
      "ja": "4. ModuleDefinitionは翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a ModuleDefinition [X.680] (an ASN.1 module) is an element item with the [local name] \"module\" and the [namespace name] \"urn:ietf:params:xml:ns:asnx\" (i.e., an <asnx:module> element item). The element item is typically the [document element] of a document item.",
      "ja": "（ModuleDefinitionは[X.680]（ASN.1モジュール）の翻訳は、[ローカル名 \"モジュール\" と、[名前空間名 \"asnx：IETF：paramsは：XML：NS URN\" の要素項目でありますすなわち、<asnx：モジュール>要素項目）。要素項目は、典型的には、文書アイテムの[文書要素]です。"
    },
    {
      "indent": 3,
      "text": "An attribute item with the [local name] \"format\" and [normalized value] \"1.0\" MAY be added to the [attributes] of the <asnx:module> element item.",
      "ja": "<：モジュールasnx>要素項目[ローカル名「フォーマット」と[正規化された値]の属性項目が「1.0」の[属性]に加えてもよいです。"
    },
    {
      "indent": 3,
      "text": "An ASN.1 module has a schema identity URI if it contains a SCHEMA-IDENTITY encoding instruction, in which case the schema identity URI is the character string specified by the AnyURIValue of the SCHEMA-IDENTITY encoding instruction.",
      "ja": "それはスキーマ同一URIスキーマ-IDENTITY符号化命令のAnyURIValueによって指定された文字列である場合にSCHEMA-IDENTITY符号化命令が含まれている場合ASN.1モジュールは、スキーマ同一URIを有しています。"
    },
    {
      "indent": 3,
      "text": "If the ASN.1 module being translated has a schema identity URI, then an attribute item with the [local name] \"schemaIdentity\" SHALL be added to the [attributes] of the <asnx:module> element item. The [normalized value] of this attribute item is the schema identity URI of the module.",
      "ja": "ASN.1モジュールは、翻訳された場合、スキーマの同一URIを有する、[ローカル名]と、属性項目「schemaIdentityは」<asnx：モジュール>の[属性]に追加することがSHALL素子アイテム。この属性項目の[正規化された値]はモジュールのスキーマ同一URIです。"
    },
    {
      "indent": 3,
      "text": "If the target namespace [RXEREI] for the ASN.1 module is not absent, then an attribute item with the [local name] \"targetNamespace\" SHALL be added to the [attributes] of the <asnx:module> element item. The [normalized value] of this attribute item is the target namespace of the module.",
      "ja": "要素項目：ターゲット名前空間は[RXEREI] ASN.1モジュールの[ローカル名]と存在しない場合、属性項目ではない場合、「のtargetNamespaceは」<モジュールasnx>の[属性]に追加されるものとします。この属性項目の[正規化された値]はモジュールのターゲット名前空間です。"
    },
    {
      "indent": 6,
      "text": "Aside: An ASN.1 module has a target namespace if it contains a TARGET-NAMESPACE encoding instruction.",
      "ja": "脇：それはTARGET-NAMESPACEエンコーディング命令が含まれている場合、ASN.1モジュールは、ターゲット名前空間を持っています。"
    },
    {
      "indent": 3,
      "text": "If the ASN.1 module contains a TARGET-NAMESPACE encoding instruction that specifies a Prefix, then an attribute item with the [local name] \"targetPrefix\" SHALL be added to the [attributes] of the",
      "ja": "ASN.1モジュールは、[ローカル名]接頭辞、属性項目を指定するターゲット名前空間符号化命令が含まれている場合、「targetPrefix」との[属性]に追加することがSHALL"
    },
    {
      "indent": 3,
      "text": "<asnx:module> element item. The [normalized value] of this attribute item is the character string specified by the NCNameValue in the Prefix.",
      "ja": "<asnx：モジュール>要素アイテム。この属性項目の[正規化値]プレフィックスでNCNameValueによって指定された文字列です。"
    },
    {
      "indent": 3,
      "text": "In examples in the remainder of this document, the namespace prefix \"tns:\" is used to stand for the target namespace of the module being translated.",
      "ja": "この文書の残りの例では、名前空間接頭辞「TNSは：」翻訳されるモジュールのターゲット名前空間を表すために使用されます。"
    },
    {
      "indent": 3,
      "text": "An attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the <asnx:module> element item. The [normalized value] of this attribute item is the modulereference in the ModuleIdentifier in the ModuleDefinition.",
      "ja": "<：モジュールasnx>要素項目[ローカル名]「名」の属性項目は、の[属性]に追加されるものとします。この属性項目の[正規化値] ModuleDefinitionはでModuleIdentifierでmodulereferenceあります。"
    },
    {
      "indent": 3,
      "text": "If the DefinitiveIdentifier in the ModuleIdentifier in the ModuleDefinition is not empty, then an attribute item with the [local name] \"identifier\" SHALL be added to the [attributes] of the <asnx:module> element item. The [normalized value] of this attribute item is the RXER character data translation [RXER] of the DefinitiveIdentifier.",
      "ja": "<：モジュールasnx>要素項目ModuleDefinitionはでModuleIdentifierでDefinitiveIdentifierが空でない場合、[ローカル名「識別子」の属性項目は、[属性]に追加されるものとします。この属性項目の[正規化された値] [RXER] DefinitiveIdentifierのRXER文字データの変換です。"
    },
    {
      "indent": 3,
      "text": "If the TagDefault in the ModuleDefinition is empty, then an attribute item with the [local name] \"tagDefault\" and [normalized value] \"explicit\" SHALL be added to the [attributes] of the <asnx:module> element item.",
      "ja": "<：モジュールasnx>要素項目ModuleDefinitionは内TagDefaultが空の場合、[ローカル名「tagDefault」と[正規化値「明示的な」の属性項目は、[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "If the TagDefault in the ModuleDefinition is not empty and the first keyword in the TagDefault is not \"AUTOMATIC\", then an attribute item with the [local name] \"tagDefault\" SHALL be added to the [attributes] of the <asnx:module> element item. The [normalized value] of this attribute item is the first keyword in the TagDefault with all letters downcased, i.e., \"explicit\" or \"implicit\".",
      "ja": "ModuleDefinitionは中TagDefaultが空ではないとTagDefaultの最初のキーワードは「自動」でない場合は、[ローカル名]「tagDefault」の属性項目は、<：モジュールasnx>の[属性]に追加されるものとする（SHALL）要素項目。この属性項目の[正規化値]すなわち、「明示的な」または「暗黙的な」、downcasedすべての文字とTagDefaultにおける最初のキーワードです。"
    },
    {
      "indent": 3,
      "text": "If the TagDefault in the ModuleDefinition is not empty and the first keyword in the TagDefault is \"AUTOMATIC\", then an attribute item with the [local name] \"tagDefault\" and [normalized value] \"automatic\" MAY be added to the [attributes] of the <asnx:module> element item.",
      "ja": "ModuleDefinitionはでTagDefaultが空でないとTagDefaultにおける最初のキーワードは、「自動」、[ローカル名「tagDefault」と[正規化された値]と、属性項目が「自動」[属性]に追加されるかもしれません<：モジュールasnx>要素項目の。"
    },
    {
      "indent": 3,
      "text": "If the ExtensionDefault in the ModuleDefinition is not empty, then an attribute item with the [local name] \"extensibilityImplied\" and [normalized value] \"true\" or \"1\" SHALL be added to the [attributes] of the <asnx:module> element item.",
      "ja": "<：モジュールasnx> ModuleDefinitionはでExtensionDefaultが空でない場合、[ローカル名「extensibilityImplied」と[正規化値「真」または「1」の属性項目は、[属性]に追加することがSHALL要素項目。"
    },
    {
      "indent": 3,
      "text": "If the ExtensionDefault in the ModuleDefinition is empty, then an attribute item with the [local name] \"extensibilityImplied\" and [normalized value] \"false\" or \"0\" MAY be added to the [attributes] of the <asnx:module> element item.",
      "ja": "ModuleDefinitionはでExtensionDefaultが空の場合、属性項目[ローカル名「extensibilityImplied」と[正規化値「偽」または「0」の[属性]に追加されるかもしれと<asnx：モジュール>要素項目。"
    },
    {
      "indent": 3,
      "text": "An element item with the [local name] \"annotation\" MAY be added to the [children] of the <asnx:module> element item.",
      "ja": "<：モジュールasnx>要素項目[ローカル名]「注釈」を持つ要素項目はの[子供]に添加してもよいです。"
    },
    {
      "indent": 3,
      "text": "The translation of each Assignment in the AssignmentList in the ModuleBody in the ModuleDefinition of the module being translated SHALL be appended to the [children] of the <asnx:module> element item.",
      "ja": "エレメント項目：翻訳されるモジュールのModuleDefinitionはでModuleBodyでAssignmentList内の各割り当ての翻訳は、<モジュールasnx>の[子供]を添付しなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the EncodingControlSections instance in the ModuleDefinition contains an EncodingControlSection for RXER, then the translation of each NamedType in a TopLevelComponent [RXEREI] nested in the EncodingInstructionAssignmentList SHALL be added to the [children] of the <asnx:module> element item. The relative order of the top-level components [RXEREI] SHOULD be preserved in the translation; however, the translations of the top-level components MAY be interspersed with the translations of the assignments in the AssignmentList.",
      "ja": "<：モジュールasnx>要素項目ModuleDefinitionは内EncodingControlSectionsインスタンスがRXERためEncodingControlSectionが含まれている場合、TopLevelComponent [RXEREI] EncodingInstructionAssignmentListにネストの各NamedTypeの翻訳は、[子供]に追加することがSHALL。 【RXEREI】翻訳に保存されるべき最上位の部品の相対的な順序。ただし、トップレベルのコンポーネントの翻訳はAssignmentListにおける割り当ての翻訳で散在していてもよいです。"
    },
    {
      "indent": 3,
      "text": "The translation of the EncodingControlSections instance in the ModuleDefinition of the module being translated SHALL be appended to the [children] of the <asnx:module> element item.",
      "ja": "エレメント項目：翻訳されるモジュールのModuleDefinitionはでEncodingControlSectionsインスタンスの変換は、<モジュールasnx>の[子供]を添付しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "MyModule DEFINITIONS\nIMPLICIT TAGS\nEXTENSIBILITY IMPLIED ::=\nBEGIN",
      "raw": true
    },
    {
      "indent": 6,
      "text": "MyType ::= INTEGER",
      "raw": true
    },
    {
      "indent": 6,
      "text": "ENCODING-CONTROL RXER",
      "ja": "ENCODING-CONTROL RXER"
    },
    {
      "indent": 10,
      "text": "SCHEMA-IDENTITY  \"http://example.com/id/MyModule\"\nTARGET-NAMESPACE \"http://example.com/ns/MyModule\"",
      "raw": true
    },
    {
      "indent": 10,
      "text": "COMPONENT myElement INTEGER",
      "ja": "COMPONENT MYELEMENT INTEGER"
    },
    {
      "indent": 6,
      "text": "END",
      "ja": "終わり"
    },
    {
      "indent": 6,
      "text": "<asnx:module xmlns:asnx=\"urn:ietf:params:xml:ns:asnx\" name=\"MyModule\" schemaIdentity=\"http://example.com/id/MyModule\" targetNamespace=\"http://example.com/ns/MyModule\" tagDefault=\"implicit\" extensibilityImplied=\"true\">",
      "ja": "<asnx：モジュールのxmlns：asnx = \"壷：IETF：のparams：XML：NS：asnx\" 名前= \"MyModuleという\" schemaIdentity = \"http://example.com/id/MyModule\" のtargetNamespace = \"のhttp：//例。 COM / NS / MyModuleという」tagDefault = \"暗黙の\" extensibilityImplied = \"真\">"
    },
    {
      "indent": 7,
      "text": "<namedType name=\"MyType\" type=\"asnx:INTEGER\"/>",
      "ja": "<namedType名= \"がMyType\" タイプ= \"asnx：INTEGER\" />"
    },
    {
      "indent": 7,
      "text": "<element name=\"myElement\" type=\"asnx:INTEGER\"/>",
      "ja": "<要素名= \"MYELEMENT\" タイプ= \"asnx：INTEGER\" />"
    },
    {
      "indent": 6,
      "text": "</asnx:module>",
      "ja": "</ asnx：モジュール>"
    },
    {
      "indent": 0,
      "text": "5. Translation of Assignments",
      "section_title": true,
      "ja": "割り当て5.翻訳"
    },
    {
      "indent": 0,
      "text": "5.1. Referencing Named Constructs",
      "section_title": true,
      "ja": "5.1. 参照名前構築"
    },
    {
      "indent": 3,
      "text": "An Assignment in ASN.1 associates a reference name with a Type, Value, ValueSet, ObjectClass, Object, or ObjectSet. For ASN.X, an Assignment is also regarded as associating an expanded name [XMLNS10][XMLNS11] with the Type, Value, ValueSet, ObjectClass, Object, or ObjectSet. ASN.X uses these expanded names, rendered as qualified names [XMLNS10][XMLNS11], in place of the references in an ASN.1 specification.",
      "ja": "ASN.1での割り当ては、タイプ、値、値セット、ObjectClassを、オブジェクト、またはobjectSetとで参照名を関連付けます。 ASN.Xため、割り当てはまた、拡張名[XMLNS10] [XMLNS11]タイプと、値、値セット、のObjectClass、オブジェクト、またはobjectSetとを関連付けるとみなされます。 ASN.Xは、ASN.1仕様の参照の代わりに、[XMLNS11] [XMLNS10]修飾名としてレンダリング、これらの拡大の名前を使用しています。"
    },
    {
      "indent": 3,
      "text": "In every case, the local name of the expanded name is the typereference, valuereference, objectclassreference, objectreference, or objectsetreference in the Assignment (i.e., the [normalized value] of the name attribute item in the translation of the Assignment, ignoring white space characters). If the target namespace of the ASN.1 module in which the Assignment is defined is not absent, then the namespace name of the expanded name is that target namespace; otherwise, the namespace name of the expanded name has no value. When the expanded name is rendered as a qualified name, the namespace prefix is determined according to Section 6.7.11.1 of the specification for RXER [RXER].",
      "ja": "すべてのケースでは、拡張名のローカル名は空白文字を無視して、typereference、valuereference、objectclassreference、のObjectReference、または割り当ての翻訳のname属性項目の割り当て（すなわち、[正規化された値]でobjectsetreferenceです）。割り当てが定義されているASN.1モジュールのターゲット名前空間が存在しないない場合、拡張名の名前空間名は、ターゲット名前空間です。そうでない場合は、拡張名の名前空間名には値がありません。拡張名が修飾名としてレンダリングされるとき、名前空間接頭辞がRXER [RXER]の仕様のセクション6.7.11.1に応じて決定されます。"
    },
    {
      "indent": 3,
      "text": "If an ASN.1 specification contains two or more modules where the target namespace is absent, then there exists the possibility that the expanded names defined by the ASN.X translations of those modules are not distinct. The expanded names are not distinct if:",
      "ja": "ASN.1仕様がターゲット名前空間が存在しない2つの以上のモジュールが含まれている場合、それらのモジュールのASN.X変換によって定義された拡張名が明確ではないという可能性が存在します。拡大名前があれば明瞭ではありません。"
    },
    {
      "indent": 3,
      "text": "(1) two or more type or value set assignments define the same typereference, or",
      "ja": "（1）は、2つ以上のタイプまたは値のセットの割り当ては同じtypereferenceを定義する、または"
    },
    {
      "indent": 3,
      "text": "(2) two or more value assignments define the same valuereference, or",
      "ja": "（2）は、2つ以上の値の割り当ては同じvaluereferenceを定義する、または"
    },
    {
      "indent": 3,
      "text": "(3) two or more object class assignments define the same objectclassreference, or",
      "ja": "（3）は、2つ以上のオブジェクトクラスの割り当ては同じobjectclassreferenceを定義する、または"
    },
    {
      "indent": 3,
      "text": "(4) two or more object assignments define the same objectreference, or",
      "ja": "（4）は、2つ以上のオブジェクトの割り当ては、同一のObjectReferenceを定義する、または"
    },
    {
      "indent": 3,
      "text": "(5) two or more object set assignments define the same objectsetreference, or",
      "ja": "（5）は、2つ以上のオブジェクトのセットの割り当ては同じobjectsetreferenceを定義する、または"
    },
    {
      "indent": 3,
      "text": "(6) two or more top-level element components [RXEREI] have the same local name, or",
      "ja": "（6）は、2つ以上の最上位要素コンポーネントは[RXEREI】同じローカル名を持っている、または"
    },
    {
      "indent": 3,
      "text": "(7) two or more top-level attribute components [RXEREI] have the same local name.",
      "ja": "（7）は、2つ以上のトップレベル属性成分[RXEREI]は同じローカル名を有しています。"
    },
    {
      "indent": 3,
      "text": "If the expanded names are not distinct, then an unambiguous translation into ASN.X does not exist unless each of the modules has a SCHEMA-IDENTITY encoding instruction. Consequently, if two or more modules where the target namespace is absent are being translated into ASN.X and the reference names defined in those modules will not be distinct, then as a local action prior to the translation, a SCHEMA-IDENTITY encoding instruction MUST be added to each of the modules that defines one or more of the indistinct expanded names and that does not already have a SCHEMA-IDENTITY encoding instruction. The character string (a URI) specified by the AnyURIValue of each added SCHEMA-IDENTITY encoding instruction is freely chosen by the translator, subject to the condition that these character strings are distinct [RXEREI].",
      "ja": "拡張名が明確でない場合、モジュールの各々がSCHEMA-IDENTITY符号化指示がない限り、次にASN.Xに明白な翻訳が存在しません。したがって、ターゲットネームスペースが存在しない場合、2つの以上のモジュールがASN.Xに翻訳されており、これらのモジュールで定義された参照名は、その後、前翻訳ローカルアクションとして、明確ではありません、スキーマIDENTITYエンコード命令MUST不明瞭拡張名の一つ以上を定義し、それがすでにSCHEMA-IDENTITY符号化命令を持たないモジュールの各々に添加すること。各添加SCHEMA-IDENTITY符号化命令のAnyURIValueで指定された文字列（URI）は自由にこれらの文字列が明瞭であることを条件に、被験者、翻訳者によって選択され[RXEREI]。"
    },
    {
      "indent": 6,
      "text": "Aside: Although this means that different translators might produce ASN.X modules that are syntactically different for any given ASN.1 module, those ASN.X modules will be semantically equivalent to each other and to the original ASN.1 module.",
      "ja": "脇：これは異なる翻訳者が任意のASN.1モジュールの構文的に異なるASN.Xモジュールを生成する可能性があることを意味しているが、それらASN.Xモジュールは互いに、元のASN.1モジュールに意味的に等価であろう。"
    },
    {
      "indent": 3,
      "text": "TARGET-NAMESPACE and SCHEMA-IDENTITY encoding instructions are RECOMMENDED for every ASN.1 module.",
      "ja": "TARGET-NAMESPACEとSCHEMA-IDENTITYエンコーディング命令は、すべてのASN.1モジュールを推奨します。"
    },
    {
      "indent": 0,
      "text": "5.2. Importing Namespaces",
      "section_title": true,
      "ja": "5.2. 名前空間をインポートします"
    },
    {
      "indent": 3,
      "text": "An Assignment is referenced from an ASN.X module if its associated expanded name appears as a qualified name in the [normalized value] of an attribute item with the [local name] \"type\", \"value\", \"class\", \"object\", or \"objectSet\". These references are categorized as direct references. An Assignment or top-level component is also referenced from an ASN.X module if its expanded name appears as a qualified name in the [normalized value] of an attribute item with the [local name] \"ref\". This reference is only categorized as direct if the ref attribute is not the result of the translation of a DefinedType subject to a TYPE-REF encoding instruction or a NamedType subject to an ATTRIBUTE-REF or ELEMENT-REF encoding instruction.",
      "ja": "それに関連する拡張名は、[ローカル名「タイプ」、「値」、「クラス」、「オブジェクトの属性項目の[正規化された値]に修飾名として表示されている場合割り当てはASN.Xモジュールから参照されます」、または \"objectSetと\"。これらの参照は、直接参照として分類されています。その拡張名は、[ローカル名「REF」の属性項目の[正規化された値]に修飾名として表示された場合に割り当てまたは最上位コンポーネントもASN.Xモジュールから参照されます。 ref属性は、TYPE-REF符号化命令またはATTRIBUTE-REFまたはELEMENT-REF符号化命令にNamedType対象にDefinedType対象の翻訳の結果ではない場合、この基準は、唯一の直接に分類されます。"
    },
    {
      "indent": 6,
      "text": "Aside: In the case of an indirect reference, an attribute item with the [local name] \"embedded\" and [normalized value] \"true\" or \"1\" will also be present.",
      "ja": "脇：間接参照の場合は、[ローカル名]の属性項目は「組み込み」と[正規化値「真」または「1」にも存在するであろう。"
    },
    {
      "indent": 3,
      "text": "Definition (external module): An external module is any module other than the module being translated and the AdditionalBasicDefinitions module [RXER].",
      "ja": "定義は、（外部モジュール）：外部モジュールは、翻訳されるモジュールとAdditionalBasicDefinitionsモジュール[RXER]以外の任意のモジュールです。"
    },
    {
      "indent": 6,
      "text": "Aside: The AdditionalBasicDefinitions module is always assumed to be imported, as are all the built-in types and object classes of ASN.1.",
      "ja": "脇：全てのビルトインされているようなタイプとASN.1のオブジェクトクラスAdditionalBasicDefinitionsモジュールは常に、輸入されているものとします。"
    },
    {
      "indent": 3,
      "text": "An element item with the [local name] \"import\" SHALL be added to the [children] of the <asnx:module> element item for each external module containing Assignments or top-level components that are directly referenced from the ASN.X module. An <import> element item MAY be added to the [children] of the <asnx:module> element item for any other external module.",
      "ja": "直接ASN.Xモジュールから参照される割り当てまたは最上位のコンポーネントを含む各外部モジュール用の<モジュールasnx>要素項目[ローカル名「インポート」の[子供]に追加することがSHALL有する素子アイテム。他の外部モジュールの<モジュールasnx>要素項目の<import>要素の項目は、[子供]に加えてもよいです。"
    },
    {
      "indent": 3,
      "text": "An attribute item with the [local name] \"name\" SHOULD be added to the [attributes] of the <import> element item. The [normalized value] of this attribute item is the modulereference in the ModuleIdentifier in the ModuleDefinition of the external module.",
      "ja": "[ローカル名]「名」の属性項目は、<インポート>要素項目の[属性]に追加する必要があります。この属性項目の[正規化された値]は、外部モジュールのModuleDefinitionはでModuleIdentifierでmodulereferenceあります。"
    },
    {
      "indent": 3,
      "text": "If the DefinitiveIdentifier in the ModuleIdentifier in the ModuleDefinition of the external module is not empty, then an attribute item with the [local name] \"identifier\" SHALL be added to the [attributes] of the <import> element item. The [normalized value] of this attribute item is the RXER character data translation of the DefinitiveIdentifier.",
      "ja": "外部モジュールのModuleDefinitionはでModuleIdentifierでDefinitiveIdentifierが空でない場合、[ローカル名「識別子」の属性項目は、<インポート>要素項目の[属性]に追加されるものとします。この属性項目の[正規化した値]はDefinitiveIdentifierのRXER文字データの変換です。"
    },
    {
      "indent": 3,
      "text": "If the external module has a schema identity URI, then an attribute item with the [local name] \"schemaIdentity\" SHALL be added to the [attributes] of the <import> element item. The [normalized value] of this attribute item is the schema identity URI of the external module.",
      "ja": "外部モジュールがスキーマ同一URIを有している場合、[ローカル名「schemaIdentity」の属性項目は、<インポート>要素項目の[属性]に追加されるものとします。この属性項目の[正規化された値]は、外部モジュールのスキーマ同一URIです。"
    },
    {
      "indent": 3,
      "text": "If the target namespace of the external module is not absent, then an attribute item with the [local name] \"namespace\" SHALL be added to the [attributes] of the <import> element item. The [normalized value] of this attribute item is the target namespace of the external module.",
      "ja": "外部モジュールのターゲット名前空間が存在しないない場合は、[ローカル名]の属性項目は、「名前空間」は、<インポート>要素項目の[属性]に追加されるものとします。この属性項目の[正規化された値]は、外部モジュールのターゲット名前空間です。"
    },
    {
      "indent": 3,
      "text": "An attribute item with the [local name] \"schemaLocation\" MAY be added to the [attributes] of the <import> element item. The [normalized value] of this attribute item is a URI [URI] indicating the physical location of the ASN.X translation of the external module.",
      "ja": "[ローカル名]「にschemaLocation」の属性項目は、<インポート>要素項目の[属性]に添加してもよいです。この属性項目の[正規化値]外部モジュールのASN.X翻訳の物理的な位置を示すURI [URI]です。"
    },
    {
      "indent": 3,
      "text": "The <import> element items MUST follow an <annotation> element item (if present) and MUST precede any other element items in the [children] of the <asnx:module> element item.",
      "ja": "<インポート>要素項目は<注釈>要素の項目に従わなければならない（存在する場合）との[子供]内の他の要素の項目に先行しなければならない<asnx：モジュール>要素の項目を。"
    },
    {
      "indent": 3,
      "text": "Note that because of the way parameterized references are expanded in ASN.X (see Section 13), the modules in the Imports in the ModuleBody in the ModuleDefinition may not correspond exactly to the <import> element items.",
      "ja": "なぜならパラメータ化された参考文献はASN.X（セクション13を参照）に展開されている方法で、ModuleDefinitionはでModuleBodyにおける輸入のモジュールは、<インポート>要素の項目に正確に対応しなくてもよいことに留意されたいです。"
    },
    {
      "indent": 0,
      "text": "5.3. TypeAssignment Translation",
      "section_title": true,
      "ja": "5.3.  TypeAssignment翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a TypeAssignment is an element item with the [local name] \"namedType\". An attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the <namedType> element item. The [normalized value] of this attribute item is the typereference on the left-hand side of the assignment.",
      "ja": "TypeAssignmentの翻訳は、[ローカル名]「namedType」を持つ要素項目です。 [ローカル名]「名」の属性項目は、<namedType>要素項目の[属性]に追加されるものとします。この属性項目の[正規化値]代入の左側にtypereferenceあります。"
    },
    {
      "indent": 3,
      "text": "An element item with the [local name] \"annotation\" MAY be added to the [children] of the <namedType> element item. The translation of the Type on the right-hand side of the assignment SHALL be added to the [children] or [attributes] of the <namedType> element item.",
      "ja": "[ローカル名]「注釈」を持つ要素項目は、<namedType>要素項目の[子供]に添加してもよいです。割り当ての右側のタイプの翻訳は、[子供]または<namedType>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "MyType ::= INTEGER",
      "raw": true
    },
    {
      "indent": 6,
      "text": "<namedType name=\"MyType\" type=\"asnx:INTEGER\"/>",
      "ja": "<namedType名= \"がMyType\" タイプ= \"asnx：INTEGER\" />"
    },
    {
      "indent": 0,
      "text": "5.4. ValueAssignment and XMLValueAssignment Translation",
      "section_title": true,
      "ja": "5.4.  ValueAssignmentとXMLValueAssignment翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a ValueAssignment is an element item with the [local name] \"namedValue\". An attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the <namedValue> element item. The [normalized value] of this attribute item is the valuereference on the left-hand side of the assignment.",
      "ja": "ValueAssignmentの翻訳は、[ローカル名]「のNamedValue」を持つ要素項目です。 [ローカル名]「名」の属性項目は、<のNamedValue>要素項目の[属性]に追加されるものとします。この属性項目の[正規化値]代入の左側にvaluereferenceあります。"
    },
    {
      "indent": 3,
      "text": "An element item with the [local name] \"annotation\" MAY be added to the [children] of the <namedValue> element item. The translation of the Type on the left-hand side of the assignment SHALL be added to the [children] or [attributes] of the <namedValue> element item. The translation of the Value on the right-hand side of the assignment SHALL be added to the [children] or [attributes] of the <namedValue> element item.",
      "ja": "[ローカル名]「注釈」を持つ要素項目は、<のNamedValue>要素項目の[子供]に添加してもよいです。割り当ての左側のタイプの翻訳は、[子供]または<たNamedValue>要素項目の[属性]に追加されるものとします。割り当ての右辺の値の翻訳は、[子供]または<たNamedValue>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "myValue INTEGER ::= 10",
      "raw": true
    },
    {
      "indent": 6,
      "text": "<namedValue name=\"myValue\" type=\"asnx:INTEGER\" literalValue=\"10\"/>",
      "ja": "<のNamedValue名= \"myValue\" タイプ= \"asnx：INTEGER\" literalValue = \"10\" />"
    },
    {
      "indent": 3,
      "text": "An XMLValueAssignment is converted into the equivalent ValueAssignment and then translated as a ValueAssignment. Note that the ASN.X representation for a Value is unrelated to XMLTypedValue.",
      "ja": "XMLValueAssignment等価ValueAssignmentに変換してValueAssignmentとして翻訳されます。値のためのASN.X表現がXMLTypedValueに無関係であることに注意してください。"
    },
    {
      "indent": 0,
      "text": "5.5. ValueSetTypeAssignment Translation",
      "section_title": true,
      "ja": "5.5.  ValueSetTypeAssignment翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a ValueSetTypeAssignment is an element item with the [local name] \"namedValueSet\". An attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the <namedValueSet> element item. The [normalized value] of this attribute item is the typereference on the left-hand side of the assignment.",
      "ja": "ValueSetTypeAssignmentの翻訳は、[ローカル名]「namedValueSet」を持つ要素項目です。 [ローカル名]「名」の属性項目は、<namedValueSet>要素項目の[属性]に追加されるものとします。この属性項目の[正規化値]代入の左側にtypereferenceあります。"
    },
    {
      "indent": 3,
      "text": "An element item with the [local name] \"annotation\" MAY be added to the [children] of the <namedValueSet> element item. The translation of the Type on the left-hand side of the assignment SHALL be added to the [children] or [attributes] of the <namedValueSet> element item. The translation of the ValueSet on the right-hand side of the assignment SHALL be added to the [children] of the <namedValueSet> element item.",
      "ja": "[ローカル名]「注釈」を持つ要素項目は、<namedValueSet>要素項目の[子供]に添加してもよいです。割り当ての左側のタイプの翻訳は、[子供]または<namedValueSet>要素項目の[属性]に追加されるものとします。割り当ての右辺の値セットの変換は、<namedValueSet>要素項目の[子供]に追加することがSHALL。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "MyValueSet INTEGER ::= { 10 }",
      "raw": true
    },
    {
      "indent": 6,
      "text": "<namedValueSet name=\"MyValueSet\" type=\"asnx:INTEGER\"> <valueSet> <literalValue>10</literalValue> </valueSet> </namedValueSet>",
      "ja": "<namedValueSet名= \"MyValueSet\" タイプ= \"asnx：INTEGER\"> <値セット> <literalValue> 10 </ literalValue> </値セット> </ namedValueSet>"
    },
    {
      "indent": 0,
      "text": "5.6. ObjectClassAssignment Translation",
      "section_title": true,
      "ja": "5.6.  ObjectClassAssignment翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an ObjectClassAssignment is an element item with the [local name] \"namedClass\". An attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the <namedClass> element item. The [normalized value] of this attribute item is the objectclassreference on the left-hand side of the assignment.",
      "ja": "ObjectClassAssignmentの翻訳は、[ローカル名]「namedClass」を持つ要素項目です。 [ローカル名]「名」の属性項目は、<namedClass>要素項目の[属性]に追加されるものとします。この属性項目の[正規化値]代入の左側にobjectclassreferenceあります。"
    },
    {
      "indent": 3,
      "text": "An element item with the [local name] \"annotation\" MAY be added to the [children] of the <namedClass> element item. The translation of the ObjectClass on the right-hand side of the assignment SHALL be added to the [children] or [attributes] of the <namedClass> element item.",
      "ja": "[ローカル名]「注釈」を持つ要素項目は、<namedClass>要素項目の[子供]に添加してもよいです。割り当ての右辺ののObjectClassの翻訳は、[子供]または<namedClass>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "MY-CLASS ::= TYPE-IDENTIFIER",
      "raw": true
    },
    {
      "indent": 6,
      "text": "<namedClass name=\"MY-CLASS\" class=\"asnx:TYPE-IDENTIFIER\"/>",
      "ja": "<namedClass名= \"MY-CLASS\" クラス= \"asnx：TYPE-IDENTIFIER\" />"
    },
    {
      "indent": 0,
      "text": "5.7. ObjectAssignment Translation",
      "section_title": true,
      "ja": "5.7.  ObjectAssignment翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an ObjectAssignment is an element item with the [local name] \"namedObject\". An attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the <namedObject> element item. The [normalized value] of this attribute item is the objectreference on the left-hand side of the assignment.",
      "ja": "ObjectAssignmentの翻訳は、[ローカル名]「namedObject」を持つ要素項目です。 [ローカル名]「名」の属性項目は、<namedObject>要素項目の[属性]に追加されるものとします。この属性項目の[正規化値]代入の左側のObjectReferenceです。"
    },
    {
      "indent": 3,
      "text": "An element item with the [local name] \"annotation\" MAY be added to the [children] of the <namedObject> element item. The translation of the DefinedObjectClass on the left-hand side of the assignment SHALL be added to the [children] or [attributes] of the <namedObject> element item. The translation of the Object on the right-hand side of the assignment SHALL be added to the [children] or [attributes] of the <namedObject> element item.",
      "ja": "[ローカル名]「注釈」を持つ要素項目は、<namedObject>要素項目の[子供]に添加してもよいです。割当ての左側にDefinedObjectClassの翻訳は、[子供]または<namedObject>要素項目の[属性]に追加されるものとします。割り当ての右側のオブジェクトの翻訳は、[子供]または<namedObject>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "myObject TYPE-IDENTIFIER ::=\n    { NULL IDENTIFIED BY { 1 3 14 3 2 26 } }",
      "raw": true
    },
    {
      "indent": 6,
      "text": "<namedObject name=\"myObject\" class=\"asnx:TYPE-IDENTIFIER\"> <object> <field name=\"id\" literalValue=\"1.3.14.3.2.26\"/> <field name=\"Type\" type=\"asnx:NULL\"/> </object> </namedObject>",
      "ja": "<namedObject名= \"myObjectという\" クラス= \"asnx：TYPE-IDENTIFIER\"> <オブジェクト> <フィールド名= \"ID\" literalValue = \"1.3.14.3.2.26\" /> <フィールド名= \"タイプ\" タイプ= \"asnx。 NULL \"/> </オブジェクト> </ namedObject>"
    },
    {
      "indent": 0,
      "text": "5.8. ObjectSetAssignment Translation",
      "section_title": true,
      "ja": "5.8.  ObjectSetAssignment翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an ObjectSetAssignment is an element item with the [local name] \"namedObjectSet\". An attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the <namedObjectSet> element item. The [normalized value] of this attribute item is the objectsetreference on the left-hand side of the assignment.",
      "ja": "ObjectSetAssignmentの翻訳は、[ローカル名]「namedObjectSet」を持つ要素項目です。 [ローカル名]「名」の属性項目は、<namedObjectSet>要素項目の[属性]に追加されるものとします。この属性項目の[正規化値]代入の左側にobjectsetreferenceあります。"
    },
    {
      "indent": 3,
      "text": "An element item with the [local name] \"annotation\" MAY be added to the [children] of the <namedObjectSet> element item. The translation of the DefinedObjectClass on the left-hand side of the assignment SHALL be added to the [children] or [attributes] of the <namedObjectSet> element item. The translation of the ObjectSet on the right-hand side of the assignment SHALL be added to the [children] or [attributes] of the <namedObjectSet> element item.",
      "ja": "[ローカル名]「注釈」を持つ要素項目は、<namedObjectSet>要素項目の[子供]に添加してもよいです。割当ての左側にDefinedObjectClassの翻訳は、[子供]または<namedObjectSet>要素項目の[属性]に追加されるものとします。割り当ての右辺のobjectSetとの翻訳は、[子供]または<namedObjectSet>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "MyObjectSet TYPE-IDENTIFIER ::= { myObject }",
      "raw": true
    },
    {
      "indent": 6,
      "text": "<namedObjectSet name=\"MyObjectSet\" class=\"asnx:TYPE-IDENTIFIER\"> <objectSet> <object ref=\"tns:myObject\"/> </objectSet> </namedObjectSet>",
      "ja": "<namedObjectSet名= \"MyObjectSet\" クラス= \"asnx：TYPE-IDENTIFIER\"> <objectSetと> <オブジェクトREF = \"TNS：myObjectという\" /> </ objectSetと> </ namedObjectSet>"
    },
    {
      "indent": 0,
      "text": "5.9. ParameterizedAssignment Translation",
      "section_title": true,
      "ja": "5.9.  ParameterizedAssignment翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an ASN.1 specification into ASN.X replaces any reference to a parameterized definition [X.683] with the definition expanded in-line. Consequently, there is no direct translation for a ParameterizedAssignment, though its definition may come into play in the translation of references to the parameterized definition (see Section 13).",
      "ja": "ASN.XにASN.1仕様の翻訳は、[X.683]インライン展開定義でパラメータ定義への参照を置き換えます。その定義がパラメータの定義への参照の翻訳で遊びに来るかもしれませんが結果的に、ParameterizedAssignmentのための直接の翻訳が、存在しない（セクション13を参照）。"
    },
    {
      "indent": 0,
      "text": "6. Translation of Types",
      "section_title": true,
      "ja": "タイプの6.翻訳"
    },
    {
      "indent": 3,
      "text": "The rules for translating the different varieties of Type are detailed in this section.",
      "ja": "タイプの異なる品種を変換するためのルールは、このセクションで説明されています。"
    },
    {
      "indent": 3,
      "text": "Note that the notation of ASN.1 is ambiguous where a Type is both prefixed [X.680-1] (e.g., tagged) and constrained. For example, the notation \"[0] INTEGER (0..10)\" could be interpreted as either a tagged ConstrainedType or a constrained TaggedType. For the purposes of the translation into ASN.X, the constraint is assumed to have higher precedence than the prefix, so the above notation would be taken to be a tagged ConstrainedType.",
      "ja": "Typeが両方とも[X.680-1]接頭辞であるASN.1の表記が曖昧であることに留意されたい（例えば、タグ付き）および拘束。例えば、表記「[0] INTEGER（0..10）は、」タグ付けConstrainedType又は制約TaggedTypeのいずれかとして解釈することができます。 ASN.Xへの翻訳の目的のために、制約がプレフィックスよりも高い優先順位を有すると仮定されるので、上記の表記法は、タグ付きConstrainedTypeであると解釈されるであろう。"
    },
    {
      "indent": 0,
      "text": "6.1. Identifier Replacement",
      "section_title": true,
      "ja": "6.1. 識別子置換"
    },
    {
      "indent": 3,
      "text": "Various RXER encoding instructions can be used to override an identifier in an ASN.1 specification with an NCName [XMLNS10]. The NCName is given preeminence in the ASN.X representation, and the identifier is not explicitly given if it is algorithmically related to the NCName. The cases where an NCName overrides an identifier are covered individually in other parts of this specification and make use of the following definition.",
      "ja": "種々RXER符号化命令はNCNameで[XMLNS10]とASN.1仕様の識別子を上書きするために使用することができます。 NCNameではASN.X表現で抜群に与えられ、それはアルゴリズムNCNameのに関連している場合、識別子は、明示的に指定されていません。 NCNameでは、識別子をオーバーライドする場合は、本明細書の他の部分に個別に覆われ、以下の定義を利用しています。"
    },
    {
      "indent": 3,
      "text": "Definition (reduction): The reduction of an NCName is the string of characters resulting from the following operations performed in order on the NCName: (1) replace each full stop ('.', U+002E) and low line ('_', U+005F) character with a hyphen character ('-', U+002D),",
      "ja": "定義（還元）：NCNameでの減少はNCNameで上の順序で実行次の操作に起因する文字列である：（1）各ピリオドを置き換える（「 『U + 002E）及び低ライン（』 _」 、U + 005F）ハイフン文字と文字（ ' - '、U + 002D）、"
    },
    {
      "indent": 3,
      "text": "(2) remove every character except Latin letters (U+0041-U+005A, U+0061-U+007A), decimal digits (U+0030-U+0039), and hyphens (U+002D),",
      "ja": "（2）（U + 0041-U + 005A、U + 0061、U + 007A）ラテン文字以外のすべての文字を削除し、小数点以下の桁数（U + 0030、U + 0039）は、ハイフン（U + 002D）、"
    },
    {
      "indent": 3,
      "text": "(3) remove leading and trailing hyphen characters,",
      "ja": "（3）、ハイフン文字を先頭と末尾の除去"
    },
    {
      "indent": 3,
      "text": "(4) replace sequences of two or more hyphen characters with a single hyphen, and",
      "ja": "（4）単一ハイフンを有する2つの以上のハイフン文字の配列を置き換える、および"
    },
    {
      "indent": 3,
      "text": "(5) convert the first character to lowercase if it is an uppercase letter.",
      "ja": "（5）それが大文字であれば小文字に最初の文字を変換します。"
    },
    {
      "indent": 6,
      "text": "Aside: If the reduction of an NCName is not the same as the identifier that the NCName replaces, then the identifier will be explicitly given in the translation into ASN.X.",
      "ja": "脇：NCNameでの減少はNCNameでは置き換え識別子と同じでない場合、識別子は、明示的にASN.X.への翻訳に与えられます"
    },
    {
      "indent": 0,
      "text": "6.2. DefinedType Translation",
      "section_title": true,
      "ja": "6.2.  DefinedType翻訳"
    },
    {
      "indent": 3,
      "text": "If a Type is a DefinedType in a ReferencedType, then the translation of the Type is the translation of the DefinedType.",
      "ja": "タイプはReferencedTypeでDefinedTypeであれば、種類の翻訳はDefinedTypeの翻訳です。"
    },
    {
      "indent": 3,
      "text": "If a DefinedType is not a ParameterizedType, ParameterizedValueSetType, or DummyReference and is not subject to a TYPE-REF or REF-AS-TYPE encoding instruction, then the translation of the DefinedType is either the attribute form translation of a type reference, or the element form translation of a type reference.",
      "ja": "DefinedTypeには、ParameterizedType、ParameterizedValueSetType、又はDummyReferenceなく、TYPE-REF又はREF-AS型の符号化命令を受けない場合、DefinedTypeの翻訳は、型参照の属性形式の変換、または要素のいずれかであります型参照の形式変換。"
    },
    {
      "indent": 3,
      "text": "The attribute form translation of a type reference is an attribute item with the [local name] \"type\". The [normalized value] of this attribute item is a qualified name for the expanded name of the referenced type definition (see Section 5.1). The attribute form translation SHALL NOT be used if this expanded name is not distinct with respect to the current module and the modules referenced by its <import> element items (see Section 5.1).",
      "ja": "型参照の属性形式の変換は、[ローカル名「タイプ」の属性項目です。この属性項目の[正規化された値は、（セクション5.1を参照）、参照型定義の拡張名の修飾名です。この拡張名は、現在のモジュールに対して、その<インポート>要素のアイテムによって参照されるモジュールと別個でない場合、属性の形式変換を使用してはならない（セクション5.1を参照）。"
    },
    {
      "indent": 3,
      "text": "The element form translation of a type reference is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An attribute item with the [local name] \"ref\" SHALL be added to the [attributes] of the <type> element item. The [normalized value] of this attribute item is a qualified name for the expanded name of the referenced type definition. If this expanded name is not distinct with respect to the current module and the modules referenced by its <import> element items, then an attribute item with the [local name] \"context\" SHALL be added to the",
      "ja": "型参照の要素の形式変換は、[ローカル名「タイプ」の要素項目です。 [ローカル名]を持つ要素項目は、「注釈」は、<type>要素項目の[子供]に添加してもよいです。 [ローカル名]の属性項目は、「refが」<type>要素項目の[属性]に追加されるものとします。この属性項目の[正規化された値]は、参照型定義の拡張名の修飾名です。この拡張名は、現在のモジュールとその<インポート>要素のアイテムによって参照されるモジュールに対して明確でない場合は、[ローカル名「コンテキスト」の属性項目が追加さSHALL"
    },
    {
      "indent": 3,
      "text": "[attributes] of the <type> element item; otherwise, if the module containing the referenced type definition has a schema identity URI, then an attribute item with the [local name] \"context\" MAY be added to the [attributes] of the <type> element item. The [normalized value] of this attribute item is the schema identity URI of the module containing the type definition referenced by the DefinedType.",
      "ja": "<type>要素項目の[属性]。参照タイプ定義を含むモジュールが、スキーマ同一URIを持つ場合そうでない場合は、次に[ローカル名「コンテキスト」の属性項目は、<type>要素項目の[属性]に加えてもよいです。この属性項目の[正規化値] DefinedTypeによって参照される型定義を含むモジュールのスキーマ同一URIです。"
    },
    {
      "indent": 6,
      "text": "Aside: If a reference name is not distinct, then the module containing the referenced definition must have a schema identity URI (see Section 5.1).",
      "ja": "脇：参照名が明瞭でない場合は、参照先の定義を含むモジュールは、スキーマのアイデンティティURIを（5.1節を参照）を持っている必要があります。"
    },
    {
      "indent": 3,
      "text": "An attribute item with the [local name] \"embedded\" and [normalized value] \"false\" or \"0\" MAY be added to the [attributes] of the <type> element item.",
      "ja": "[ローカル名「埋め込み」と[正規化値「偽」または「0」の属性項目は、<type>要素項目の[属性]に加えてもよいです。"
    },
    {
      "indent": 3,
      "text": "The translation of the DefinedType is the same whether the type definition is referenced by a typereference or an ExternalTypeReference.",
      "ja": "DefinedTypeの翻訳は、タイプ定義がtypereference又はExternalTypeReferenceによって参照されるかどうかと同じです。"
    },
    {
      "indent": 3,
      "text": "If a DefinedType is subject to a TYPE-REF encoding instruction, then the translation of the DefinedType is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An attribute item with the [local name] \"ref\" SHALL be added to the [attributes] of the <type> element item. The [normalized value] of this attribute item is the RXER character data translation of the QNameValue in the TYPE-REF encoding instruction. If a ContextParameter is present in the RefParameters in the TYPE-REF encoding instruction, then an attribute item with the [local name] \"context\" SHALL be added to the [attributes] of the <type> element item. The [normalized value] of this attribute item is the string value of the AnyURIValue in the ContextParameter. An attribute item with the [local name] \"embedded\" and [normalized value] \"true\" or \"1\" SHALL be added to the [attributes] of the <type> element item.",
      "ja": "DefinedTypeはTYPE-REF符号化命令の対象である場合、DefinedTypeの翻訳は、[ローカル名「タイプ」の要素項目です。 [ローカル名]を持つ要素項目は、「注釈」は、<type>要素項目の[子供]に添加してもよいです。 [ローカル名]の属性項目は、「refが」<type>要素項目の[属性]に追加されるものとします。この属性項目の[正規化値] TYPE-REF符号化命令にQNameValueのRXER文字データ変換です。 ContextParameterはTYPE-REF符号化命令にRefParametersに存在する場合、[ローカル名「コンテキスト」の属性項目は、<type>要素項目の[属性]に追加されるものとします。この属性項目の[正規化値] ContextParameterにおけるAnyURIValueの文字列値です。 [ローカル名「埋め込み」と[正規化された値]の属性項目「true」または「1」が、<type>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 6,
      "text": "Aside: The embedded attribute item indicates whether a type is directly referenced as a DefinedType or indirectly referenced through a TYPE-REF encoding instruction. An ASN.1 type can be referenced either way. Type definitions in other schema languages cannot be directly referenced.",
      "ja": "脇：埋め込まれた属性項目のタイプを直接DefinedTypeとして参照または間接的にTYPE-REF符号化命令を介して参照されているかどうかを示します。 ASN.1型は、いずれかの方法を参照することができます。他のスキーマ言語の型定義を直接参照することはできません。"
    },
    {
      "indent": 3,
      "text": "If a DefinedType is subject to a REF-AS-TYPE encoding instruction, then the translation of the DefinedType is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An attribute item with the [local name] \"elementType\" SHALL be added to the [attributes] of the <type> element item. The",
      "ja": "DefinedTypeは、REF-AS型の符号化命令の対象である場合、DefinedTypeの翻訳は、[ローカル名「タイプ」の要素項目です。 [ローカル名]を持つ要素項目は、「注釈」は、<type>要素項目の[子供]に添加してもよいです。 [ローカル名]の属性項目は、「をelementTypeは」<type>要素項目の[属性]に追加されるものとします。ザ・"
    },
    {
      "indent": 3,
      "text": "[normalized value] of this attribute item is the RXER character data translation of the NameValue in the REF-AS-TYPE encoding instruction. If a ContextParameter is present in the RefParameters in the REF-AS-TYPE encoding instruction, then an attribute item with the [local name] \"context\" SHALL be added to the [attributes] of the <type> element item. The [normalized value] of this attribute item is the string value of the AnyURIValue in the ContextParameter.",
      "ja": "この属性項目の[正規化値] REF-AS型の符号化命令内のNameValueのRXER文字データ変換です。 ContextParameterは、REF-AS型の符号化命令でRefParametersに存在する場合、[ローカル名「コンテキスト」の属性項目は、<type>要素項目の[属性]に追加されるものとします。この属性項目の[正規化値] ContextParameterにおけるAnyURIValueの文字列値です。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "CHOICE { one Foo, two [RXER:TYPE-REF { namespace-name \"http://www.example.com/PO1\", local-name \"PurchaseOrderType\" }] Markup, three [RXER:REF-AS-TYPE \"product\" CONTEXT \"http://www.example.com/inventory\"] Markup }",
      "ja": "CHOICE {1フー、2 [RXER：TYPE-REF {名前空間名 \"http://www.example.com/PO1\"、ローカル名 \"型PurchaseOrderType\"}]マークアップ三[RXER：REF-AS-TYPE \"製品」コンテキスト 『http://www.example.com/inventory』]マークアップ}"
    },
    {
      "indent": 6,
      "text": "<type> <choice> <element name=\"one\" type=\"tns:Foo\"/> <element name=\"two\" xmlns:po=\"http://www.example.com/PO1\"> <type ref=\"po:PurchaseOrderType\" embedded=\"true\"/> </element> <element name=\"three\"> <type elementType=\"product\" context=\"http://www.example.com/inventory\"/> </element> </choice> </type>",
      "ja": "<タイプ> <選択> <要素名= \"1\" タイプ= \"TNS：フー\" /> <要素名= \"2\" のxmlns：PO = \"http://www.example.com/PO1\"> <REF型= \"PO：型PurchaseOrderType\" 組み込み= \"TRUE\" /> </要素> <要素名= \"3\"> <タイプをelementType = \"製品\" コンテキスト= \"http://www.example.com/inventory\" /> < /要素> </選択> </入力>"
    },
    {
      "indent": 3,
      "text": "If a DefinedType is a DummyReference, ParameterizedType, or ParameterizedValueSetType, then the translation of the Type is the translation of that DummyReference, ParameterizedType, or ParameterizedValueSetType (see Section 13).",
      "ja": "DefinedTypeはDummyReference、は、ParameterizedType、またはParameterizedValueSetTypeであれば、種類の翻訳は、そのDummyReferenceの翻訳、は、ParameterizedType、またはParameterizedValueSetType（セクション13を参照）です。"
    },
    {
      "indent": 0,
      "text": "6.3. Translation of Built-in Types",
      "section_title": true,
      "ja": "6.3. ビルトインタイプの翻訳"
    },
    {
      "indent": 3,
      "text": "If a Type is a BuiltinType or ReferencedType that is one of the productions in Table 1 in Section 5 of the specification for RXER [RXER], then the translation of the Type is either the attribute form or element form translation of that type.",
      "ja": "タイプRXERの仕様のセクション5において、表1におけるプロダクションの一つであるBuiltinType又はReferencedType [RXER]である場合、タイプの変換は、属性フォームまたはそのタイプのエレメントの形式の変換のいずれかです。"
    },
    {
      "indent": 3,
      "text": "The attribute form translation of a Type that is a BuiltinType or ReferencedType that is one of the productions in Table 1 is an attribute item with the [local name] \"type\". The [normalized value] of this attribute item is a qualified name for the expanded name of the built-in type (see Section 5 of the specification for RXER [RXER]).",
      "ja": "表1にプロダクションの一つであるBuiltinType又はReferencedTypeあるタイプの属性形式の変換は、[ローカル名「タイプ」の属性項目です。この属性項目の[正規化された値]は内蔵タイプ（RXERの仕様[RXER]のセクション5を参照）の拡張名の修飾名です。"
    },
    {
      "indent": 3,
      "text": "The element form translation of a Type that is a BuiltinType or ReferencedType that is one of the productions in Table 1 is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An attribute item with the [local name] \"ref\" SHALL be added to the [attributes] of the <type> element item. The [normalized value] of this attribute item is a qualified name for the expanded name of the built-in type.",
      "ja": "表1にプロダクションの一つであるBuiltinType又はReferencedTypeあるタイプの要素の形式変換は、[ローカル名「タイプ」の要素項目です。 [ローカル名]を持つ要素項目は、「注釈」は、<type>要素項目の[子供]に添加してもよいです。 [ローカル名]の属性項目は、「refが」<type>要素項目の[属性]に追加されるものとします。この属性項目の[正規化された値]は内蔵型の拡張名の修飾名です。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "BOOLEAN",
      "ja": "BOOLEAN"
    },
    {
      "indent": 6,
      "text": "<type ref=\"asnx:BOOLEAN\"/>",
      "ja": "<タイプREF = \"asnx：BOOLEAN\" />"
    },
    {
      "indent": 3,
      "text": "Usually the translator is free to choose either the attribute form or element form translation for a Type; however, in some contexts attribute forms for a Type are explicitly disallowed.",
      "ja": "通常、翻訳者は、属性の形式またはタイプの要素フォームの翻訳のいずれかを選択する自由です。しかし、いくつかの状況ではタイプのためのフォームが明示的に禁止されている属性。"
    },
    {
      "indent": 0,
      "text": "6.4. BitStringType Translation",
      "section_title": true,
      "ja": "6.4.  BitStringType翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a BitStringType with a NamedBitList is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An element item with the [local name] \"namedBitList\" SHALL be appended to the [children] of the <type> element item. The translation of each NamedBit in the NamedBitList SHALL be appended to the [children] of the <namedBitList> element item.",
      "ja": "NamedBitListとBitStringTypeの翻訳は、[ローカル名「タイプ」の要素項目です。 [ローカル名]を持つ要素項目は、「注釈」は、<type>要素項目の[子供]に添加してもよいです。 [ローカル名]を持つ要素項目は「namedBitListは」<type>要素項目の[子供]を添付しなければなりません。 NamedBitList各NamedBitの翻訳は、<namedBitList>要素項目の[子供]を添付しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The translation of a NamedBit is an element item with the [local name] \"namedBit\". An attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the <namedBit> element item. If the BitStringType is subject to a VALUES encoding instruction, then the [normalized value] of this attribute item is the replacement name [RXEREI] for the identifier in the NamedBit; otherwise, it is the identifier in the NamedBit. If the BitStringType is subject to a VALUES encoding instruction and the reduction of the replacement name (see Section 6.1) is not the same as the identifier, then an attribute item with the [local name] \"identifier\" SHALL be added to the [attributes] of the <namedBit>",
      "ja": "NamedBitの翻訳は、[ローカル名]「namedBit」を持つ要素項目です。 [ローカル名]「名」の属性項目は、<namedBit>要素項目の[属性]に追加されるものとします。 BitStringTypeはVALUES符号化命令の対象である場合、この属性項目の[正規化値] NamedBitにおける識別子の代替名[RXEREI]です。それ以外の場合は、NamedBit内の識別子です。 BitStringTypeはVALUESエンコード命令と代替名の削減の対象となる場合識別子、[属性に追加されるものと[ローカル名「識別子」と、属性項目と同じではない（セクション6.1を参照） ]の<namedBit>"
    },
    {
      "indent": 3,
      "text": "element item; otherwise, an attribute item with the [local name] \"identifier\" MAY be added to the [attributes] of the <namedBit> element item. The [normalized value] of this attribute item is the identifier in the NamedBit. An attribute item with the [local name] \"bit\" SHALL be added to the [attributes] of the <namedBit> element item. The [normalized value] of this attribute item is the digit string representation of the integer value of the number or DefinedValue in the NamedBit.",
      "ja": "要素項目。そうでない場合は、[ローカル名「識別子」の属性項目は<namedBit>要素項目の[属性]に加えてもよいです。この属性項目の[正規化値] NamedBitにおける識別子です。 [ローカル名「ビット」の属性項目は<namedBit>要素項目の[属性]に追加されるものとします。この属性項目の[正規化値] NamedBitの数値又はDefinedValueの整数値の桁の文字列表現です。"
    },
    {
      "indent": 3,
      "text": "Examples",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "BIT STRING { zero(0), one(1), two(2) }",
      "ja": "ビット列{（0）、1（1）、2つ（2）}"
    },
    {
      "indent": 6,
      "text": "<type> <namedBitList> <namedBit name=\"zero\" bit=\"0\"/> <namedBit name=\"one\" bit=\"1\"/> <namedBit name=\"two\" bit=\"2\"/> </namedBitList> </type>",
      "ja": "<タイプ> <namedBitList> <namedBit名= \"ゼロ\" ビット= \"0\" /> <namedBit名= \"1\" ビット= \"1\" /> <namedBit名= \"2\" ビット= \"2\" /> </ namedBitList> </タイプ>"
    },
    {
      "indent": 6,
      "text": "[RXER:VALUES ALL CAPITALIZED, wednesday AS \"Midweek\"] BIT STRING { monday(0), tuesday(1), wednesday(2), thursday(3), friday(4) }",
      "ja": "[RXER：VALUES水曜日ALL自己資本 \"平日\" AS]ビット列{月曜日（0）、火曜日（1）、水曜日（2）、木曜日（3）金曜日（4）}"
    },
    {
      "indent": 6,
      "text": "<type> <namedBitList> <namedBit name=\"Monday\" bit=\"0\"/> <namedBit name=\"Tuesday\" bit=\"1\"/> <namedBit name=\"Midweek\" identifier=\"wednesday\" bit=\"2\"/> <namedBit name=\"Thursday\" bit=\"3\"/> <namedBit name=\"Friday\" bit=\"4\"/> </namedBitList> </type>",
      "ja": "<タイプ> <namedBitList> <namedBit名= \"月曜日\" ビット= \"0\" /> <namedBit名= \"火曜日\" ビット= \"1\" /> <namedBit名= \"平日\" 識別子= \"水曜日\" ビット= \"2 \"/> <namedBit名=\" 木曜日」ビット= \"3\" /> <namedBit名= \"金曜日\" ビット= \"4\" /> </ namedBitList> </タイプ>"
    },
    {
      "indent": 0,
      "text": "6.5. IntegerType Translation",
      "section_title": true,
      "ja": "6.5.  IntegerType翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an IntegerType with a NamedNumberList is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An element item with the [local name] \"namedNumberList\" SHALL be appended to the [children] of the <type> element item. The translation of each NamedNumber in the NamedNumberList SHALL be appended to the [children] of the <namedNumberList> element item.",
      "ja": "NamedNumberListとIntegerTypeの翻訳は、[ローカル名「タイプ」の要素項目です。 [ローカル名]を持つ要素項目は、「注釈」は、<type>要素項目の[子供]に添加してもよいです。 [ローカル名]を持つ要素項目は「namedNumberListは」<type>要素項目の[子供]を添付しなければなりません。 NamedNumberList各NamedNumberの翻訳は、<namedNumberList>要素項目の[子供]を添付しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The translation of a NamedNumber is an element item with the [local name] \"namedNumber\". An attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the <namedNumber> element item. If the IntegerType is subject to a VALUES encoding instruction, then the [normalized value] of this attribute item is the replacement name [RXEREI] for the identifier in the NamedNumber; otherwise, it is the identifier in the NamedNumber. If the IntegerType is subject to a VALUES encoding instruction and the reduction of the replacement name (see Section 6.1) is not the same as the identifier, then an attribute item with the [local name] \"identifier\" SHALL be added to the [attributes] of the <namedNumber> element item; otherwise, an attribute item with the [local name] \"identifier\" MAY be added to the [attributes] of the <namedNumber> element item. The [normalized value] of this attribute item is the identifier in the NamedNumber. An attribute item with the [local name] \"number\" SHALL be added to the [attributes] of the <namedNumber> element item. The [normalized value] of this attribute item is the digit string representation of the integer value of the SignedNumber or DefinedValue in the NamedNumber.",
      "ja": "NamedNumberの翻訳は、[ローカル名]「namedNumber」を持つ要素項目です。 [ローカル名]「名」の属性項目は、<namedNumber>要素項目の[属性]に追加されるものとします。 IntegerTypeはVALUES符号化命令の対象である場合、この属性項目の[正規化値] NamedNumberにおける識別子の代替名[RXEREI]です。それ以外の場合は、NamedNumber内の識別子です。 IntegerTypeはVALUESエンコード命令と代替名の削減の対象となる場合識別子、[属性に追加されるものと[ローカル名「識別子」と、属性項目と同じではない（セクション6.1を参照） <namedNumber>要素項目の。そうでない場合は、[ローカル名「識別子」の属性項目は<namedNumber>要素項目の[属性]に加えてもよいです。この属性項目の[正規化値] NamedNumberにおける識別子です。 [ローカル名]「数」の属性項目は、<namedNumber>要素項目の[属性]に追加されるものとします。この属性項目の[正規化値] NamedNumberでSignedNumber又はDefinedValueの整数値の桁の文字列表現です。"
    },
    {
      "indent": 3,
      "text": "Examples",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "INTEGER { nothing(0), a-little(1), a-lot(100) }",
      "ja": "INTEGER {無（0）、リトル（1）、ロット（100）}"
    },
    {
      "indent": 6,
      "text": "<type> <namedNumberList> <namedNumber name=\"nothing\" number=\"0\"/> <namedNumber name=\"a-little\" number=\"1\"/> <namedNumber name=\"a-lot\" number=\"100\"/> </namedNumberList> </type>",
      "ja": "<タイプ> <namedNumberList> <namedNumber名= \"何も\" 数= \"0\" /> <namedNumber名= \" - 小さな\" 数= \"1\" /> <namedNumber名= \"ロット\" 番号= \"100\" /> </ namedNumberList> </タイプ>"
    },
    {
      "indent": 6,
      "text": "[RXER:VALUES ALL CAPITALIZED, very-high AS \"DANGEROUS\"] INTEGER { low(25), medium(50), high(75), very-high(100) }",
      "ja": "[RXER：VALUESは、すべて大文字の \"危険な\" のような非常に高い] INTEGER {低い（25）、媒体（50）、高（75）、非常に高い（100）}"
    },
    {
      "indent": 6,
      "text": "<type> <namedNumberList> <namedNumber name=\"Low\" number=\"25\"/> <namedNumber name=\"Medium\" number=\"50\"/> <namedNumber name=\"High\" number=\"75\"/> <namedNumber name=\"DANGEROUS\" identifier=\"very-high\" number=\"100\"/> </namedNumberList> </type>",
      "ja": "<タイプ> <namedNumberList> <namedNumber名= \"低\" 番号= \"25\" /> <namedNumber名= \"中\" 番号= \"50\" /> <namedNumber名= \"高\" 番号= \"75\" /> <namedNumber名前= \"危険な\" 識別子= \"非常に高い\" 番号= \"100\" /> </ namedNumberList> </タイプ>"
    },
    {
      "indent": 0,
      "text": "6.6. EnumeratedType Translation",
      "section_title": true,
      "ja": "6.6.  EnumeratedType翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an EnumeratedType is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An element item with the [local name] \"enumerated\" SHALL be appended to the [children] of the <type> element item. The translation of each EnumerationItem nested in the RootEnumeration in the Enumerations instance in the EnumeratedType SHALL be appended to the [children] of the <enumerated> element item.",
      "ja": "EnumeratedTypeの翻訳は、[ローカル名「タイプ」の要素項目です。 [ローカル名]を持つ要素項目は、「注釈」は、<type>要素項目の[子供]に添加してもよいです。 [ローカル名]を持つ要素項目は、「列挙」<タイプ>要素項目の[子供]を添付しなければなりません。 EnumeratedTypeに列挙インスタンスでRootEnumerationにネスト各EnumerationItemの翻訳は、<列挙>要素項目の[子供]を添付しなければなりません。"
    },
    {
      "indent": 3,
      "text": "If an ellipsis (\"...\") is present in the Enumerations instance, then an element item with the [local name] \"extension\" SHALL be appended to the [children] of the <enumerated> element item and the translation of the ExceptionSpec (possibly empty) SHALL be added to the [children] of the <extension> element item. If an AdditionalEnumeration is present in the Enumerations instance, then the translation of each EnumerationItem nested in the AdditionalEnumeration SHALL be appended to the [children] of the <extension> element item.",
      "ja": "省略記号は、（「...」）列挙インスタンス内に存在する場合には、[ローカル名 『拡張子』の要素アイテムは、<列挙>要素項目との翻訳の[子供]に追加することがSHALL ExceptionSpec（空の場合）は、<拡張>要素項目の[子供]に追加することがSHALL。 AdditionalEnumerationが列挙インスタンス中に存在する場合、次いでAdditionalEnumerationにネスト各EnumerationItemの翻訳は、<拡張>要素項目の[子供]を添付しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The translation of an EnumerationItem is an element item with the [local name] \"enumeration\".",
      "ja": "EnumerationItemの翻訳は、[ローカル名]「列挙」を持つ要素項目です。"
    },
    {
      "indent": 3,
      "text": "If the EnumerationItem is of the \"identifier\" form, then an attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the <enumeration> element item. If the EnumeratedType is subject to a VALUES encoding instruction, then the [normalized value] of this attribute item is the replacement name [RXEREI] for the identifier; otherwise, it is the identifier. If the EnumeratedType is subject to a VALUES encoding instruction and the reduction of the replacement name (see Section 6.1) is not the same as the identifier, then an attribute item with the [local name] \"identifier\" SHALL be added to the [attributes] of the <enumeration> element item; otherwise, an attribute item with the [local name] \"identifier\" MAY be added to the [attributes] of the <enumeration> element item. The [normalized value] of this attribute item is the identifier.",
      "ja": "EnumerationItemが「識別子」の形式である場合には、[ローカル名「名前」の属性項目は<列挙>要素項目の[属性]に追加されるものとします。 EnumeratedTypeはVALUES符号化命令の対象である場合、この属性項目の[正規化された値]は、識別子の代替名[RXEREI]です。それ以外の場合は、識別子です。 EnumeratedTypeはVALUESエンコード命令と代替名の削減の対象となる場合識別子、[属性に追加されるものと[ローカル名「識別子」と、属性項目と同じではない（セクション6.1を参照） <列挙>要素項目の。そうでない場合は、[ローカル名「識別子」の属性項目は<列挙>要素項目の[属性]に加えてもよいです。この属性項目の[正規化値]の識別子です。"
    },
    {
      "indent": 3,
      "text": "If the EnumerationItem is of the \"NamedNumber\" form, then an attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the <enumeration> element item. If the EnumeratedType is subject to a VALUES encoding instruction, then the [normalized value] of this attribute item is the replacement name [RXEREI] for the identifier in the NamedNumber; otherwise, it is the identifier in the NamedNumber. If the EnumeratedType is subject to a VALUES encoding instruction and the reduction of the replacement name is not the same as the identifier, then an attribute item with the [local name] \"identifier\" SHALL be added to the [attributes] of the",
      "ja": "EnumerationItemが「NamedNumber」形式である場合は、[ローカル名「名前」の属性項目は<列挙>要素項目の[属性]に追加されるものとします。 EnumeratedTypeはVALUES符号化命令の対象である場合、この属性項目の[正規化値] NamedNumberにおける識別子の代替名[RXEREI]です。それ以外の場合は、NamedNumber内の識別子です。 EnumeratedType命令をコード値にさらされると、交換名の減少は、識別子と同じでない場合、[ローカル名「識別子」の属性項目は、[属性]に追加することがSHALL"
    },
    {
      "indent": 3,
      "text": "<enumeration> element item; otherwise, an attribute item with the [local name] \"identifier\" MAY be added to the [attributes] of the <enumeration> element item. The [normalized value] of this attribute item is the identifier in the NamedNumber. An attribute item with the [local name] \"number\" SHALL be added to the [attributes] of the <enumeration> element item. The [normalized value] of this attribute item is the digit string representation of the integer value of the SignedNumber or DefinedValue in the NamedNumber.",
      "ja": "<列挙>要素項目;そうでない場合は、[ローカル名「識別子」の属性項目は<列挙>要素項目の[属性]に加えてもよいです。この属性項目の[正規化値] NamedNumberにおける識別子です。 [ローカル名]の属性項目は、「番号」<列挙>要素項目の[属性]に追加されるものとします。この属性項目の[正規化値] NamedNumberでSignedNumber又はDefinedValueの整数値の桁の文字列表現です。"
    },
    {
      "indent": 3,
      "text": "Examples",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "ENUMERATED { red(0), green(1), ..., blue(2) }",
      "ja": "ENUMERATED {赤（0）、緑（1）、...、青（2）}"
    },
    {
      "indent": 6,
      "text": "<type> <enumerated> <enumeration name=\"red\" number=\"0\"/> <enumeration name=\"green\" number=\"1\"/> <extension> <enumeration name=\"blue\" number=\"2\"/> </extension> </enumerated> </type>",
      "ja": "<タイプ> <列挙> <列挙名= \"赤\" 番号= \"0\" /> <列挙名= \"緑\" 番号= \"1\" /> <拡張> <列挙名= \"青\" の数= \"2\" / > </拡張> </列挙> </タイプ>"
    },
    {
      "indent": 6,
      "text": "[RXER:VALUES ALL CAPITALIZED, red AS \"Crimson\"] ENUMERATED { red, yellow, green, blue }",
      "ja": "[RXER：値がすべて大文字の \"クリムゾン\" AS赤] ENUMERATED {赤、黄、緑、青}"
    },
    {
      "indent": 6,
      "text": "<type> <enumerated> <enumeration name=\"Crimson\" identifier=\"red\"/> <enumeration name=\"Yellow\"/> <enumeration name=\"Green\"/> <enumeration name=\"Blue\"/> </enumerated> </type>",
      "ja": "<タイプ> <列挙> <列挙名= \"クリムゾン\" 識別子= \"赤\" /> <列挙名= \"黄\" /> <列挙名= \"グリーン\" /> <列挙名= \"青\" /> </列挙> </タイプ>"
    },
    {
      "indent": 0,
      "text": "6.7. PrefixedType Translation",
      "section_title": true,
      "ja": "6.7.  PrefixedType翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a PrefixedType [X.680-1] that is a TaggedType is either the short form translation (Section 6.7.1) or long form translation (Section 6.7.2) of the TaggedType.",
      "ja": "TaggedTypeあるPrefixedType [X.680-1]の翻訳はTaggedTypeの短い形式変換（6.7.1）または長い形式変換（セクション6.7.2）のいずれかです。"
    },
    {
      "indent": 6,
      "text": "Aside: The short form translation is provided because TaggedType notation is heavily used in existing ASN.1 specifications. The long form translation has the same structure as the translation of an EncodingPrefixedType and can be simplified where there is a series of nested PrefixedType instances.",
      "ja": "脇：TaggedType表記が大きく、既存のASN.1仕様で使用されているので、短い形式の変換が提供されています。長い形式変換はEncodingPrefixedTypeの翻訳と同じ構造を有しており、ネストされたPrefixedTypeインスタンスのシリーズがある場合を簡略化することができます。"
    },
    {
      "indent": 3,
      "text": "If a PrefixedType is an EncodingPrefixedType and the EncodingReference is RXER, or the EncodingReference is empty and the default encoding reference [X.680-1] for the module is RXER, then the translation of the PrefixedType is the translation of the Type in the EncodingPrefixedType.",
      "ja": "RXER、次いでPrefixedTypeの翻訳EncodingPrefixedTypeタイプの翻訳であるモジュールの[X.680-1] PrefixedTypeはEncodingPrefixedTypeとEncodingReferenceはRXERある、またはEncodingReferenceは空で、既定のエンコーディング参照場合。"
    },
    {
      "indent": 6,
      "text": "Aside: This is not suggesting that RXER encoding instructions are ignored. Encoding instructions for RXER are not explicitly represented in ASN.X, but rather affect how an ASN.1 module is translated into an ASN.X module (since the content of an ASN.X module is also the RXER encoding of an abstract value of the ModuleDefinition ASN.1 type in Appendix A). The individual effects of RXER encoding instructions on the translation are addressed in other parts of this specification. Encoding instructions for other encoding rules have explicit representations in ASN.X.",
      "ja": "脇：これはRXERエンコードの命令を無視していることが示唆されていません。 RXERのエンコード命令は、明示的ASN.Xで表現ではなく、ASN.Xモジュールの内容もの抽象的な価値のRXERエンコーディングであるので、ASN.1モジュールは（ASN.Xモジュールに変換される方法に影響されていません付録AでModuleDefinitionはASN.1タイプ）。翻訳上のRXERエンコーディング命令の個々の効果は、本明細書の他の部分で対処されています。他の符号化規則の符号化命令はASN.X.内の明示的な表現を持っています"
    },
    {
      "indent": 3,
      "text": "If a PrefixedType is an EncodingPrefixedType and the EncodingReference is not RXER, or the EncodingReference is empty and the default encoding reference for the module is not RXER, then the translation of the PrefixedType is an element item with the [local name] \"prefixed\". The translation of the EncodingPrefix in the EncodingPrefixedType SHALL be added to the [children] of the <prefixed> element item.",
      "ja": "PrefixedTypeがEncodingPrefixedTypeとEncodingReferenceがRXERない、またはEncodingReferenceが空で、モジュールのデフォルトの符号化基準がRXERない場合、PrefixedTypeの翻訳「が接頭辞」[ローカル名]を持つ要素項目があります。 EncodingPrefixedTypeでEncodingPrefixの翻訳は、<接頭辞>要素項目の[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "If the EncodingReference of an EncodingPrefix is not empty, then the translation of the EncodingPrefix is an element item with the encodingreference in the EncodingReference as the [local name]. The translation of the EncodingInstruction in the EncodingPrefix SHALL be added to the [children] of this element item.",
      "ja": "EncodingPrefixのEncodingReferenceが空でない場合、次にEncodingPrefixの翻訳は、[ローカル名]としてEncodingReferenceにencodingreference持つ要素項目です。 EncodingPrefixでEncodingInstructionの翻訳は、この要素項目の[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "If the EncodingReference of an EncodingPrefix is empty, then the translation of the EncodingPrefix is an element item with the default encoding reference for the module as the [local name]. The translation of the EncodingInstruction in the EncodingPrefix SHALL be added to the [children] of this element item.",
      "ja": "EncodingPrefixのEncodingReferenceが空の場合、EncodingPrefixの翻訳は、[ローカル名]としてモジュールのデフォルトの符号化基準を有する要素項目です。 EncodingPrefixでEncodingInstructionの翻訳は、この要素項目の[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The EncodingInstruction notation is different for each set of encoding instructions, and their translations into ASN.X are specified in separate documents [GSEREIT][XEREIT]. At the time of writing, only three sets of encoding instructions have been defined (for RXER [RXEREI], GSER [GSEREI], and EXTENDED-XER [X.693-1]).",
      "ja": "EncodingInstruction表記は、符号化命令の各セットのために異なっており、ASN.Xへのそれらの翻訳が別の文書[GSEREIT] [XEREIT]で指定されています。書き込み時に、エンコーディング手順の3つだけのセットは、（RXER [RXEREI]、GSER [GSEREI]、および拡張XER [X.693-1]のために）定義されています。"
    },
    {
      "indent": 3,
      "text": "If the child <type> element item of a <prefixed> element item has no attribute items and has a child <prefixed> element item, then that child <type> element item MAY be replaced by the [children] and [attributes] of the inner <prefixed> element item. Note that the long form translation of a TaggedType is also eligible for this rewriting step. This rewriting step MAY be applied to the result of a previous rewriting step if the necessary condition still holds.",
      "ja": "<接頭辞>要素項目は何の属性項目を持っていないし、子<接頭辞>要素のアイテムを持っている子<タイプ>の要素項目は、その子の<type>要素項目は、[子供]と[属性]ので置き換えることができる場合インナー<接頭辞>要素項目。 TaggedTypeの長い形式の変換もこの書き換え手順の対象であることに注意してください。必要な条件はまだ保持している場合は、この書き換えステップは、前の書き換えステップの結果に適用することができます。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "These three definitions are equivalent.",
      "ja": "これらの3つの定義は等価です。"
    },
    {
      "indent": 6,
      "text": "[XER:ATTRIBUTE] [XER:USE-UNION] [GSER:CHOICE-OF-STRINGS] CHOICE { one PrintableString, two UTF8String }",
      "ja": "[XER：ATTRIBUTE] [XER：USE-UNION] [GSER：CHOICE-OF-STRINGS] CHOICE {1はPrintableString二UTF8Stringを}"
    },
    {
      "indent": 6,
      "text": "<type> <prefixed> <XER><attribute/></XER> <type> <prefixed> <XER><useUnion/></XER> <type> <prefixed> <GSER><choiceOfStrings/></GSER> <type> <choice> <element name=\"one\" type=\"asnx:PrintableString\"/> <element name=\"two\" type=\"asnx:UTF8String\"/> </choice> </type> </prefixed> </type> </prefixed> </type> </prefixed> </type>",
      "ja": "<タイプ> <接頭辞> <XER> <属性/> </ XER> <タイプ> <接頭辞> <XER> <useUnion /> </ XER> <タイプ> <接頭辞> <GSER> <choiceOfStrings /> </ GSER > <タイプ> <選択> <要素名= \"1\" タイプ= \"asnx：PrintableStringの\" /> <要素名= \"2\" タイプ= \"asnx：UTF8Stringを\" /> </選択> </タイプ> </接頭辞> </タイプ> </接頭辞> </タイプ> </接頭辞> </タイプ>"
    },
    {
      "indent": 6,
      "text": "<type> <prefixed> <XER><attribute/></XER> <XER><useUnion/></XER> <GSER><choiceOfStrings/></GSER> <type> <choice> <element name=\"one\" type=\"asnx:PrintableString\"/> <element name=\"two\" type=\"asnx:UTF8String\"/> </choice> </type> </prefixed> </type>",
      "ja": "<タイプ> <接頭辞> <XER> <属性/> </ XER> <XER> <useUnion /> </ XER> <GSER> <choiceOfStrings /> </ GSER> <タイプ> <選択> <要素名=」 1」タイプ= \"asnx：PrintableStringの\" /> <要素名= \"2\" タイプ= \"asnx：UTF8Stringを\" /> </選択> </タイプ> </接頭辞> </入力>"
    },
    {
      "indent": 0,
      "text": "6.7.1. Short Form TaggedType Translation",
      "section_title": true,
      "ja": "6.7.1. ショートフォームTaggedType翻訳"
    },
    {
      "indent": 3,
      "text": "The short form translation of a TaggedType is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An element item with the [local name] \"tagged\" SHALL be appended to the [children] of the <type> element item.",
      "ja": "TaggedTypeの短い形式の変換は、[ローカル名「タイプ」の要素項目です。 [ローカル名]を持つ要素項目は、「注釈」は、<type>要素項目の[子供]に添加してもよいです。 [ローカル名]を持つ要素項目は「タグ」<type>要素項目の[子供]を添付しなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the Class in the Tag in the TaggedType is not empty, then an attribute item with the [local name] \"tagClass\" SHALL be added to the [attributes] of the <tagged> element item. The [normalized value] of this attribute item is the Class of the Tag with all letters downcased, i.e., either \"universal\", \"application\", or \"private\".",
      "ja": "TaggedTypeでタグのクラスが空でない場合は、[ローカル名]の属性項目は、「tagClassは」<タグ付け>要素項目の[属性]に追加されるものとします。この属性項目の[正規化された値]のいずれかの「ユニバーサル」、「アプリケーション」、または「プライベート」、すなわちdowncasedすべての文字、とタグのクラスです。"
    },
    {
      "indent": 3,
      "text": "An attribute item with the [local name] \"number\" SHALL be added to the [attributes] of the <tagged> element item. The [normalized value] of this attribute item is the digit string representation of the integer value of the number or DefinedValue in the ClassNumber in the Tag.",
      "ja": "[ローカル名]の属性項目は「数」<タグ付けされた>要素項目の[属性]に追加されるものとします。この属性項目の[正規化値]タグでClassNumberの数値又はDefinedValueの整数値の桁の文字列表現です。"
    },
    {
      "indent": 3,
      "text": "If the Tag is immediately followed by the \"IMPLICIT\" keyword, then an attribute item with the [local name] \"tagging\" and [normalized value] \"implicit\" SHALL be added to the [attributes] of the <tagged> element item.",
      "ja": "タグは、直ちに「暗黙的な」キーワードが続いている場合、[ローカル名「タグ付け」と[正規化された値]の属性項目「暗黙的な」<タグ付けされた>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "If the Tag is immediately followed by the \"EXPLICIT\" keyword, then an attribute item with the [local name] \"tagging\" and [normalized value] \"explicit\" SHALL be added to the [attributes] of the <tagged> element item.",
      "ja": "[ローカル名「タグ付け」と[正規化された値]とタグを直ちに「明示的な」キーワードが続いている場合、属性項目「明示的な」は、<タグ付けされた>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of the Type in the TaggedType SHALL be added to the [children] or [attributes] of the <tagged> element item.",
      "ja": "TaggedTypeタイプの翻訳は、[子供]または<タグ付き>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "Examples",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "[0] INTEGER",
      "ja": "[0] INTEGER"
    },
    {
      "indent": 6,
      "text": "<type> <tagged number=\"0\" type=\"asnx:INTEGER\"/> </type>",
      "ja": "<タイプ> <タグ付けされた番号 \"0\" タイプ= \"asnx：INTEGER\" /> </タイプ>"
    },
    {
      "indent": 6,
      "text": "[APPLICATION 10] IMPLICIT BOOLEAN",
      "ja": "[アプリケーション10] IMPLICIT BOOLEAN"
    },
    {
      "indent": 6,
      "text": "<type> <tagged tagClass=\"application\" number=\"10\" tagging=\"implicit\" type=\"asnx:BOOLEAN\"/> </type>",
      "ja": "<タイプ> <タグ付けさtagClass = \"アプリケーション\" 番号= \"10\" タグ= \"暗黙\" タイプ= \"asnx：BOOLEAN\" /> </タイプ>"
    },
    {
      "indent": 0,
      "text": "6.7.2. Long Form TaggedType Translation",
      "section_title": true,
      "ja": "6.7.2. ロングフォームTaggedType翻訳"
    },
    {
      "indent": 3,
      "text": "The long form translation of a TaggedType is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An element item with the [local name] \"prefixed\" SHALL be appended to the [children] of the <type> element item. The translation of the Tag in the TaggedType SHALL be added to the [children] of the <prefixed> element item.",
      "ja": "TaggedTypeの長い形式変換は、[ローカル名「タイプ」の要素項目です。 [ローカル名]を持つ要素項目は、「注釈」は、<type>要素項目の[子供]に添加してもよいです。 [ローカル名]を持つ要素項目は、「接頭辞」<タイプ>要素項目の[子供]を添付しなければなりません。 TaggedTypeでのタグの翻訳は、<接頭辞>要素項目の[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of a Tag is an element item with the [local name] \"TAG\".",
      "ja": "タグの翻訳は、[ローカル名]「TAG」を持つ要素項目です。"
    },
    {
      "indent": 3,
      "text": "If the Class of the Tag is not empty, then an attribute item with the [local name] \"tagClass\" SHALL be added to the [attributes] of the <TAG> element item. The [normalized value] of this attribute item is the Class of the Tag with all letters downcased, i.e., either \"universal\", \"application\", or \"private\".",
      "ja": "タグのクラスが空でない場合は、[ローカル名]の属性項目は、「tagClassは」<タグ>要素項目の[属性]に追加されるものとします。この属性項目の[正規化された値]のいずれかの「ユニバーサル」、「アプリケーション」、または「プライベート」、すなわちdowncasedすべての文字、とタグのクラスです。"
    },
    {
      "indent": 3,
      "text": "An attribute item with the [local name] \"number\" SHALL be added to the [attributes] of the <TAG> element item. The [normalized value] of this attribute item is the digit string representation of the integer value of the number or DefinedValue in the ClassNumber in the Tag.",
      "ja": "[ローカル名]の属性項目は、「番号」の<tag>要素項目の[属性]に追加されるものとします。この属性項目の[正規化値]タグでClassNumberの数値又はDefinedValueの整数値の桁の文字列表現です。"
    },
    {
      "indent": 3,
      "text": "If the Tag is immediately followed by the \"IMPLICIT\" keyword, then an attribute item with the [local name] \"tagging\" and [normalized value] \"implicit\" SHALL be added to the [attributes] of the <TAG> element item.",
      "ja": "タグは、直ちに「暗黙的な」キーワードが続いている場合、[ローカル名「タグ付け」と[正規化値「暗黙」の属性項目は<TAG>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "If the Tag is immediately followed by the \"EXPLICIT\" keyword, then an attribute item with the [local name] \"tagging\" and [normalized value] \"explicit\" SHALL be added to the [attributes] of the <TAG> element item.",
      "ja": "タグは、直ちに「明示的な」キーワードが続いている場合、[ローカル名「タグ付け」と[正規化値「明示的な」の属性項目は<TAG>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of the Type in the TaggedType SHALL be added to the [children] or [attributes] of the <prefixed> element item.",
      "ja": "TaggedTypeタイプの翻訳は、[子供]または<接頭辞>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "Examples",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "[0] INTEGER",
      "ja": "[0] INTEGER"
    },
    {
      "indent": 6,
      "text": "<type> <prefixed type=\"asnx:INTEGER\"> <TAG number=\"0\"/> </prefixed> </type>",
      "ja": "<タイプ> <接頭タイプ= \"asnx：INTEGER\"> <TAG番号= \"0\" /> </接頭辞> </タイプ>"
    },
    {
      "indent": 6,
      "text": "[APPLICATION 10] IMPLICIT BOOLEAN",
      "ja": "[アプリケーション10] IMPLICIT BOOLEAN"
    },
    {
      "indent": 6,
      "text": "<type> <prefixed type=\"asnx:BOOLEAN\"> <TAG tagClass=\"application\" number=\"10\" tagging=\"implicit\"/> </prefixed> </type>",
      "ja": "<タイプ> <接頭タイプ= \"asnx：BOOLEAN\"> <TAG tagClass = \"アプリケーション\" 番号= \"10\" タグ= \"暗黙\" /> </タイプ> </接頭辞>"
    },
    {
      "indent": 0,
      "text": "6.8. SelectionType Translation",
      "section_title": true,
      "ja": "6.8.  SelectionType翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a SelectionType is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An element item with the [local name] \"selection\" SHALL be appended to the [children] of the <type> element item.",
      "ja": "SelectionTypeの翻訳は、[ローカル名「タイプ」の要素項目です。 [ローカル名]を持つ要素項目は、「注釈」は、<type>要素項目の[子供]に添加してもよいです。 [ローカル名「選択」の要素アイテムは、<type>要素項目の[子供]を添付しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The identifier in a SelectionType identifies a NamedType in the definition of the Type in the SelectionType. The translation of that NamedType will be an element item with the [local name] either \"attribute\", \"element\", \"component\", \"group\", or \"member\". An attribute item with the same [local name] as the translation of the NamedType SHALL be added to the [attributes] of the <selection> element item. The [normalized value] of this attribute item is a qualified name for the expanded name of the NamedType [RXEREI].",
      "ja": "SelectionTypeにおける識別子のSelectionTypeタイプの定義でNamedTypeを識別する。そのNamedTypeの翻訳は、[ローカル名]のいずれかの「属性」、「要素」、「コンポーネント」、「グループ」、または「メンバー」の要素項目であろう。 NamedTypeの翻訳と同じ[ローカル名]の属性項目は、<選択>要素項目の[属性]に追加されるものとします。この属性項目の[正規化値] NamedType [RXEREI]の拡張名の修飾名です。"
    },
    {
      "indent": 3,
      "text": "The translation of the Type in the SelectionType SHALL be added to the [children] or [attributes] of the <selection> element item.",
      "ja": "SelectionTypeタイプの翻訳は、[子供]または<選択>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "Examples",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "field1 < MyChoiceType",
      "ja": "フィールド1 <MyChoiceType"
    },
    {
      "indent": 6,
      "text": "<type> <selection element=\"field1\" type=\"tns:MyChoiceType\"/> </type>",
      "ja": "<タイプ> <選択要素= \"FIELD1\" タイプ= \"TNS：MyChoiceType\" /> </タイプ>"
    },
    {
      "indent": 6,
      "text": "field2 < CHOICE { field2 [RXER:ATTRIBUTE][RXER:NAME AS \"field-two\"] INTEGER }",
      "ja": "FIELD2 <CHOICE {FIELD2 [RXER：ATTRIBUTE] [RXER： \"フィールド二\" AS NAME] INTEGER}"
    },
    {
      "indent": 6,
      "text": "<type> <selection attribute=\"field-two\"> <type> <choice> <attribute name=\"field-two\" identifier=\"field2\" type=\"asnx:INTEGER\"/> </choice> </type>",
      "ja": "<タイプ> <選択属性= \"フィールド2\"> <タイプ> <選択> <属性名= \"フィールド-2\" 識別子= \"フィールド2\" タイプ= \"asnx：INTEGER\" /> </選択> </入力>"
    },
    {
      "indent": 6,
      "text": " </selection> </type>",
      "ja": "</選択> </入力>"
    },
    {
      "indent": 0,
      "text": "6.9. InstanceOfType Translation",
      "section_title": true,
      "ja": "6.9.  InstanceOfType翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an InstanceOfType is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An element item with the [local name] \"instanceOf\" SHALL be appended to the [children] of the <type> element item. The translation of the DefinedObjectClass in the InstanceOfType SHALL be added to the [children] or [attributes] of the <instanceOf> element item.",
      "ja": "InstanceOfTypeの翻訳は、[ローカル名「タイプ」の要素項目です。 [ローカル名]を持つ要素項目は、「注釈」は、<type>要素項目の[子供]に添加してもよいです。 [ローカル名]を持つ要素項目は、「instanceofのは、」<type>要素項目の[子供]を添付しなければなりません。 InstanceOfTypeでDefinedObjectClassの翻訳は、[子供]または<INSTANCEOF>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "INSTANCE OF TYPE-IDENTIFIER",
      "ja": "TYPE-IDENTIFIERのインスタンス"
    },
    {
      "indent": 6,
      "text": "<type> <instanceOf class=\"asnx:TYPE-IDENTIFIER\"/> </type>",
      "ja": "<タイプ> <INSTANCEOFクラス= \"asnx：TYPE-IDENTIFIER\" /> </タイプ>"
    },
    {
      "indent": 0,
      "text": "6.10. ObjectClassFieldType Translation",
      "section_title": true,
      "ja": "6.10.  ObjectClassFieldType翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an ObjectClassFieldType is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An element item with the [local name] \"fromClass\" SHALL be appended to the [children] of the <type> element item. The translation of the DefinedObjectClass in the ObjectClassFieldType SHALL be added to the [children] or [attributes] of the <fromClass> element item. The translation of the FieldName (see Section 9.2.6) in the ObjectClassFieldType SHALL be added to the [children] or [attributes] of the <fromClass> element item.",
      "ja": "ObjectClassFieldTypeの翻訳は、[ローカル名「タイプ」の要素項目です。 [ローカル名]を持つ要素項目は、「注釈」は、<type>要素項目の[子供]に添加してもよいです。 [ローカル名]を持つ要素項目は「fromClassは」<type>要素項目の[子供]を添付しなければなりません。 ObjectClassFieldTypeでDefinedObjectClassの翻訳は、[子供]または<fromClass>要素項目の[属性]に追加されるものとします。 ObjectClassFieldTypeにおけるフィールド名の翻訳（セクション9.2.6を参照）[子供]または<fromClass>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "OPERATION.&Linked.&ArgumentType",
      "ja": "OPERATION。＆リンク。＆ArgumentType"
    },
    {
      "indent": 6,
      "text": "<type> <fromClass class=\"tns:OPERATION\" fieldName=\"Linked/ArgumentType\"/> </type>",
      "ja": "<タイプ> <fromClassクラス= \"TNS：OPERATION\" フィールド名= \"リンク/ ArgumentType\" /> </タイプ>"
    },
    {
      "indent": 0,
      "text": "6.11. TypeFromObject and ValueSetFromObjects Translation",
      "section_title": true,
      "ja": "6.11.  TypeFromObjectとValueSetFromObjects翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a TypeFromObject or ValueSetFromObjects is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An element item with the [local name] \"fromObjects\" SHALL be appended to the [children] of the <type> element item.",
      "ja": "TypeFromObject又はValueSetFromObjectsの翻訳は、[ローカル名「タイプ」の要素項目です。 [ローカル名]を持つ要素項目は、「注釈」は、<type>要素項目の[子供]に添加してもよいです。 [ローカル名]「fromObjects」と要素項目は、<type>要素項目の[子供]を添付しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The translation of the ReferencedObjects instance in the TypeFromObject or ValueSetFromObjects SHALL be added to the [children] or [attributes] of the <fromObjects> element item.",
      "ja": "TypeFromObject又はValueSetFromObjectsにおけるReferencedObjectsインスタンスの変換は、[子供]または<fromObjects>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of the FieldName in the TypeFromObject or ValueSetFromObjects SHALL be added to the [children] or [attributes] of the <fromObjects> element item.",
      "ja": "TypeFromObjectまたはValueSetFromObjectsでのフィールド名の翻訳は、[子供]または<fromObjects>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "invertMatrix.&Errors.&errorCode",
      "ja": "invertMatrix。＆エラー。＆errorCodeを"
    },
    {
      "indent": 6,
      "text": "<type> <fromObjects object=\"tns:invertMatrix\" fieldName=\"Errors/errorCode\"/> </type>",
      "ja": "<タイプ> <fromObjectsは= \"TNS：invertMatrix\" オブジェクトフィールド名= \"エラー/ errorCodeを\" /> </タイプ>"
    },
    {
      "indent": 0,
      "text": "6.12. Translation of Combining Types",
      "section_title": true,
      "ja": "6.12. 組み合わせるタイプの翻訳"
    },
    {
      "indent": 3,
      "text": "This section details the translation of the ASN.1 combining types: SET, SEQUENCE, CHOICE, SET OF, and SEQUENCE OF. The combining type definitions all make use of the NamedType notation.",
      "ja": "SET、SEQUENCE、CHOICE、セット、およびOF SEQUENCE：このセクションでは、タイプを組み合わせるASN.1の翻訳を詳しく説明します。組み合わせ型定義はすべて、NamedType記法を利用します。"
    },
    {
      "indent": 0,
      "text": "6.12.1. NamedType Translation",
      "section_title": true,
      "ja": "6.12.1.  NamedType翻訳"
    },
    {
      "indent": 3,
      "text": "A NamedType is translated in one of three ways depending on the context. These are the normal translation, the member translation, and the item translation. These translations are not interchangeable. One of the three will be explicitly invoked as part of the translation of an enclosing combining type.",
      "ja": "NamedTypeは、コンテキストに応じて3つの方法のいずれかで翻訳されています。これらは通常の変換、メンバーの翻訳、およびアイテムの翻訳です。これらの翻訳は互換性がありません。 3の一つは、明示的に囲んで組み合わせるタイプの翻訳の一部として呼び出されます。"
    },
    {
      "indent": 3,
      "text": "The normal translation of a NamedType is an element item with the [local name] determined as follows:",
      "ja": "NamedTypeの通常の変換は以下のようにローカル名]を持つ要素の項目が決定されます。"
    },
    {
      "indent": 3,
      "text": "(1) if the NamedType is subject to an ATTRIBUTE or ATTRIBUTE-REF encoding instruction, or subject to a COMPONENT-REF encoding instruction that references a top-level NamedType that is subject to an ATTRIBUTE encoding instruction, then the [local name] is \"attribute\",",
      "ja": "（1）NamedType属性エンコード命令の対象となる最上位NamedTypeを参照部品REF符号化命令に属性または属性REF符号化命令、又は被験体である場合、[ローカル名]であります\"属性\"、"
    },
    {
      "indent": 3,
      "text": "(2) else if the NamedType is subject to a GROUP encoding instruction, then the [local name] is \"group\",",
      "ja": "（2）他NamedTypeがGROUP符号化命令の対象である場合、「グループ」は、[ローカル名]であり、"
    },
    {
      "indent": 3,
      "text": "(3) else if the NamedType is subject to a SIMPLE-CONTENT encoding instruction, then the [local name] is \"simpleContent\",",
      "ja": "（3）他NamedTypeがSIMPLE-CONTENT符号化命令の対象である場合、「simpleContentを」[ローカル名]であり、"
    },
    {
      "indent": 3,
      "text": "(4) otherwise, the [local name] is \"element\" or \"component\" (translator's choice).",
      "ja": "（4）それ以外の場合は、[ローカル名「要素」または「成分」（翻訳者の選択）です。"
    },
    {
      "indent": 6,
      "text": "Aside: The local names \"element\" and \"component\" are synonymous. The \"component\" alternative is offered for specifying applications that don't use RXER (except for the ASN.X specification itself, of course), where referring to parts of an encoding as elements would seem incongruous.",
      "ja": "脇：ローカル名「要素」と「成分」は同義です。 「成分」は、代替要素として符号化の部分を参照するとちぐはぐ思われる場合、（当然のASN.X仕様自体を除く）RXERを使用しないアプリケーションを特定するために提供されます。"
    },
    {
      "indent": 3,
      "text": "The member translation of a NamedType is an element item with the [local name] \"member\".",
      "ja": "NamedTypeのメンバーの翻訳は、[ローカル名「部材」の要素項目です。"
    },
    {
      "indent": 3,
      "text": "The item translation of a NamedType is an element item with the [local name] \"item\".",
      "ja": "NamedTypeのアイテムの翻訳は、[ローカル名]「項目」を持つ要素項目です。"
    },
    {
      "indent": 6,
      "text": "Aside: A Namedtype for which the member or item translation is invoked will never be subject to an ATTRIBUTE, ATTRIBUTE-REF, COMPONENT-REF, GROUP, SIMPLE-CONTENT, or TYPE-AS-VERSION encoding instruction. These encoding instructions are also mutually exclusive [RXEREI].",
      "ja": "脇：メンバーまたはアイテムの翻訳が呼び出されるためNamedtypeはATTRIBUTE、ATTRIBUTE-REF、COMPONENT-REF、GROUP、SIMPLE-CONTENT、またはTYPE-AS-VERSIONエンコーディング命令の対象になることはありません。これらの符号化命令は、[RXEREI】相互に排他的です。"
    },
    {
      "indent": 3,
      "text": "An element item with the [local name] \"annotation\" MAY be added to the [children] of the <attribute>, <element>, <component>, <group>, <item>, <member>, or <simpleContent> element item.",
      "ja": "[ローカル名 \"注釈\" は、<属性>、<要素>、<成分>、<グループ>、<商品>、<メンバー>、または<simpleContentを>の[子供]に追加されるかもしれと素子アイテム要素項目。"
    },
    {
      "indent": 3,
      "text": "If a NamedType is subject to a TYPE-AS-VERSION encoding instruction, then an attribute item with the [local name] \"typeAsVersion\" and [normalized value] \"true\" or \"1\" SHALL be added to the <element> or <component> element item. For the normal translation, if a NamedType is not subject to an ATTRIBUTE, ATTRIBUTE-REF, COMPONENT-REF, GROUP, SIMPLE-CONTENT, or TYPE-AS-VERSION encoding instruction, then an attribute item with the [local name] \"typeAsVersion\" and [normalized value] \"false\" or \"0\" MAY be added to the <element> or <component> element item.",
      "ja": "NamedTypeはTYPE-ASバージョンの符号化指示の対象となる場合は、[ローカル名「typeAsVersion」と[正規化値「真」または「1」と、属性項目は、<要素>に追加したりすることがSHALL <成分>要素アイテム。通常の変換については、NamedTypeはATTRIBUTEの対象ではない場合、ATTRIBUTE-REF、COMPONENT-REF、GROUP、SIMPLE-CONTENT、またはTYPE-AS-VERSIONエンコーディング命令、[ローカル名]で、属性項目「typeAsVersion 『a」および[正規化値『偽』または』 0 <要素>または<component>要素の項目に加えてもよいです。"
    },
    {
      "indent": 3,
      "text": "For the normal, member, and item translations, if a NamedType is not subject to an ATTRIBUTE-REF, COMPONENT-REF, ELEMENT-REF, or REF-AS-ELEMENT encoding instruction, then an attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the <attribute>, <element>, <component>, <group>, <item>, <member>, or",
      "ja": "通常、部材、及びアイテムの翻訳のために、NamedType属性-REF次いで、部品REF、ELEMENT-REF、またはREF-AS-要素符号化命令、[ローカル名]の属性項目」の対象でない場合」<属性>、<要素>、<成分>、<グループ>、<商品>、<メンバー>の[属性]に追加されるものと名前を付け、又は"
    },
    {
      "indent": 3,
      "text": "<simpleContent> element item. The [normalized value] of this attribute item is the local name of the expanded name of the NamedType [RXEREI].",
      "ja": "<simpleContentを>要素項目。この属性項目の[正規化値] NamedType [RXEREI]の拡張名のローカル名です。"
    },
    {
      "indent": 6,
      "text": "Aside: If there are no NAME, ATTRIBUTE-REF, COMPONENT_REF, ELEMENT-REF or REF-AS-ELEMENT encoding instructions, then the local name of the expanded name of a NamedType is the same as the identifier in the NamedType.",
      "ja": "脇：NO NAME属性-REF、COMPONENT_REF、ELEMENT-REF又はREF-AS-ELEMENT符号化命令が存在しない場合、NamedTypeの拡張名のローカル名はNamedType内の識別子と同じです。"
    },
    {
      "indent": 3,
      "text": "If the reduction of the local name (an NCName) of the expanded name of a NamedType is not the same as the identifier in the NamedType, then an attribute item with the [local name] \"identifier\" SHALL be added to the [attributes] of the <attribute>, <element>, <component>, <group>, <item>, <member>, or <simpleContent> element item; otherwise, an attribute item with the [local name] \"identifier\" MAY be added to the [attributes] of the aforementioned element item. The [normalized value] of this attribute item is the identifier in the NamedType.",
      "ja": "NamedTypeの拡張名のローカル名（NCNameで）の減少がNamedType内の識別子と同じでない場合、[ローカル名「識別子」の属性項目には、[属性]に追加することがSHALL <属性>、<要素>、<成分>、<グループ>、<商品>、<メンバー>、または<simpleContentを>要素項目の。そうでない場合は、[ローカル名「識別子」の属性項目には、前述の要素項目の[属性]に加えてもよいです。この属性項目の[正規化値] NamedTypeにおける識別子です。"
    },
    {
      "indent": 6,
      "text": "Aside: The identifier attribute is not contingent on there being a name attribute. That is, an element item can have an identifier attribute item without having a name attribute item.",
      "ja": "脇：identifier属性があり、name属性であることを条件ではありません。これは、要素の項目はname属性項目を持たずに識別子属性項目を持つことができ、あります。"
    },
    {
      "indent": 3,
      "text": "If a NamedType is subject to a COMPONENT-REF encoding instruction, then an attribute item with the [local name] \"ref\" SHALL be added to the [attributes] of the <attribute>, <element>, or <component> element item. The [normalized value] of this attribute item is a qualified name for the expanded name of the top-level NamedType referenced by the encoding instruction. If the expanded name is not distinct with respect to the current module and the modules referenced by its <import> element items (see Section 5.1), then an attribute item with the [local name] \"context\" SHALL be added to the [attributes] of the <attribute>, <element>, or <component> element item; otherwise, if the module containing the referenced top-level NamedType has a schema identity URI, then an attribute item with the [local name] \"context\" MAY be added to the [attributes] of the <attribute>, <element>, or <component> element item. The [normalized value] of this attribute item is the schema identity URI of the module containing the referenced top-level NamedType.",
      "ja": "[ローカル名「REF」<属性>、<要素>の[属性]に追加されるべきであり、または<成分>要素項目にNamedTypeコンポーネント-REF符号化命令の対象である場合、属性項目。この属性項目の[正規化された値は】符号化命令によって参照される最上位NamedTypeの拡張名の修飾名です。拡張名は（セクション5.1を参照）は、現在のモジュールとその<インポート>要素のアイテムによって参照されるモジュールに対して明確でない場合は、[ローカル名「コンテキスト」の属性項目には、[属性に追加することがSHALL <属性>、<要素>、または<成分>要素項目の。そうでない場合、モジュールは、参照トップレベルNamedTypeは、[ローカル名] <属性>、<要素>の[属性]に追加されるかもしれ「コンテキスト」と、属性項目スキーマ同一URIを有する、または含む場合<成分>要素アイテム。この属性項目の[正規化値]参照最上位NamedTypeを含むモジュールのスキーマ同一URIです。"
    },
    {
      "indent": 6,
      "text": "Aside: If an expanded name is not distinct, then the module containing the referenced top-level NamedType must have a schema identity URI (see Section 5.1).",
      "ja": "脇：拡張名が明瞭でない場合は、参照トップレベルのNamedTypeを含むモジュールは、スキーマのアイデンティティURIを（5.1節を参照）を持っている必要があります。"
    },
    {
      "indent": 3,
      "text": "If a NamedType is subject to a COMPONENT-REF encoding instruction, then an attribute item with the [local name] \"embedded\" and [normalized value] \"false\" or \"0\" MAY be added to the [attributes] of the <attribute>, <element>, or <component> element item.",
      "ja": "NamedTypeコンポーネント-REF符号化命令の対象である場合には、[ローカル名]の属性項目「埋め込まれた」と[正規化値「偽」または「0」<属性の[属性]に追加されるかもしれません>、<要素>、または<component>要素のアイテム。"
    },
    {
      "indent": 3,
      "text": "If a NamedType is subject to an ATTRIBUTE-REF or ELEMENT-REF encoding instruction, then an attribute item with the [local name] \"ref\" SHALL be added to the [attributes] of the <attribute>, <element>, or <component> element item. The [normalized value] of this attribute item is the RXER character data translation of the QNameValue in the encoding instruction. An attribute item with the [local name] \"embedded\" and [normalized value] \"true\" or \"1\" SHALL be added to the [attributes] of the <attribute>, <element>, or <component> element item.",
      "ja": "NamedType属性-REFまたはELEMENT-REF符号化命令、[ローカル名]と、属性項目の対象である場合、「REF」は、<属性>、<要素>、または[属性]に追加することがSHALL <成分>要素アイテム。この属性項目の[正規化された値は】符号化命令にQNameValueのRXER文字データ変換です。 [ローカル名「埋め込み」と[正規化された値]の属性項目「true」または「1」が、<属性>、<要素>、または<成分>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "If a NamedType is subject to a REF-AS-ELEMENT encoding instruction, then an attribute item with the [local name] \"elementType\" SHALL be added to the [attributes] of the <element> or <component> element item. The [normalized value] of this attribute item is the RXER character data translation of the NameValue in the REF-AS-ELEMENT encoding instruction. If a Namespace is present in the REF-AS-ELEMENT encoding instruction, then an attribute item with the [local name] \"namespace\" SHALL be added to the [attributes] of the <element> or <component> element item. The [normalized value] of this attribute item is the string value of the AnyURIValue in the Namespace.",
      "ja": "[ローカル名]とNamedTypeはREF-AS-要素符号化命令の対象である場合、属性項目「をelementTypeは」<要素>または<component>要素項目の[属性]に追加されるものとします。この属性項目の[正規化値] REF-AS-要素符号化命令内のNameValueのRXER文字データ変換です。 [ローカル名]を持つ名前空間REF-AS-要素符号化命令内に存在する場合、属性項目「名前空間」は、<要素>または<component>要素項目の[属性]に追加されるものとします。この属性項目の[正規化値]名前空間内AnyURIValueの文字列値です。"
    },
    {
      "indent": 3,
      "text": "If a ContextParameter is present in the RefParameters in the ATTRIBUTE-REF, ELEMENT-REF, or REF-AS-ELEMENT encoding instruction, then an attribute item with the [local name] \"context\" SHALL be added to the [attributes] of the <attribute>, <element>, or <component> element item. The [normalized value] of this attribute item is the string value of the AnyURIValue in the ContextParameter.",
      "ja": "ContextParameter属性-REF、ELEMENT-REF、またはREF-AS-ELEMENT符号化命令にRefParametersに存在する場合、[ローカル名「コンテキスト」の属性項目は、[属性]に追加することがSHALL <属性>、<要素>、または<component>要素のアイテム。この属性項目の[正規化値] ContextParameterにおけるAnyURIValueの文字列値です。"
    },
    {
      "indent": 3,
      "text": "If a NamedType is subject to both an ATTRIBUTE encoding instruction and a VERSION-INDICATOR encoding instruction, then an attribute item with the [local name] \"versionIndicator\" and [normalized value] \"true\" or \"1\" SHALL be added to the <attribute> element item. If a NamedType is subject to an ATTRIBUTE encoding instruction and not subject to a VERSION-INDICATOR encoding instruction, then an attribute item with the [local name] \"versionIndicator\" and [normalized value] \"false\" or \"0\" MAY be added to the <attribute> element item.",
      "ja": "NamedType属性コード命令およびバージョンインジケータ符号化命令、[ローカル名「versionIndicator」と[正規化値「真」または「1」と、属性項目の両方の対象となる場合に加えることがSHALL <属性>要素項目。 NamedType属性エンコード命令の対象とバージョンインジケータ符号化命令を受けない場合は、[ローカル名「versionIndicator」と[正規化値「偽」または「0」の属性項目が追加されるかもしれません<属性>要素項目。"
    },
    {
      "indent": 3,
      "text": "If a NamedType is not subject to an ATTRIBUTE-REF, COMPONENT-REF, ELEMENT-REF, or REF-AS-ELEMENT encoding instruction, then the translation of the Type in the NamedType SHALL be added to the [children] or [attributes] of the <attribute>, <element>, <component>, <group>, <item>, <member>, or <simpleContent> element item.",
      "ja": "NamedType属性-REF、COMPONENT-REF、ELEMENT-REF、またはREF-AS-ELEMENT符号化命令を受けない場合は、NamedTypeタイプの翻訳は、[子供]または[属性]に追加することがSHALL <属性>、<要素>、<成分>、<グループ>、<商品>、<メンバー>、または<simpleContentを>要素項目の。"
    },
    {
      "indent": 3,
      "text": "If a NamedType is subject to an ATTRIBUTE-REF, COMPONENT-REF, ELEMENT-REF, or REF-AS-ELEMENT encoding instruction, then the translation of each EncodingPrefix (Section 6.7) and Tag (Section 6.7.2) textually within the NamedType SHALL be added in order to the [children] of the <attribute>, <element>, or <component> element item.",
      "ja": "NamedTypeが対象となる場合ATTRIBUTE-REF、各EncodingPrefix（セクション6.7）とタグ（セクション6.7.2）のその後の翻訳成分REF、ELEMENT-REF、またはREF-AS-要素符号化命令、テキストでNamedType以内<属性>、<要素>、または<成分>要素項目の[子供]の順序で添加することがSHALL。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "CHOICE { one INTEGER, two [RXER:ATTRIBUTE] BOOLEAN, three [RXER:ATTRIBUTE-REF { namespace-name \"http://www.example.com/schema\", local-name \"foo\" }] UTF8String, bar [RXER:ELEMENT-REF { namespace-name \"http://www.example.com/schema\", local-name \"bar\" }] Markup, five [0] [RXER:REF-AS-ELEMENT \"product\" CONTEXT \"http://www.example.com/inventory\"] Markup, six [RXER:GROUP] MySequence }",
      "ja": "CHOICE {1つのINTEGER、2 [RXER：ATTRIBUTE] BOOLEAN三[RXER：ATTRIBUTE-REF {名前空間名 \"http://www.example.com/schema\"、ローカル名 \"FOO\"}] UTF8Stringを、バー[ RXER：ELEMENT-REF {名前空間名 \"http://www.example.com/schema\"、ローカル名 \"バー\"}]マークアップ、5 [0] [RXER：REF-AS-ELEMENT \"製品\" CONTEXT」 http://www.example.com/inventory \"]マークアップ、6 [RXER：GROUP] MySequence}"
    },
    {
      "indent": 6,
      "text": "<type> <choice xmlns:ex=\"http://www.example.com/schema\"> <element name=\"one\" type=\"asnx:INTEGER\"/> <attribute name=\"two\" type=\"asnx:BOOLEAN\"/> <attribute ref=\"ex:foo\" identifier=\"three\" embedded=\"true\"/> <element ref=\"ex:bar\" embedded=\"true\"/> <element elementType=\"product\" context=\"http://www.example.com/inventory\" identifier=\"five\"> <TAG number=\"0\"/> </element> <group name=\"six\" type=\"tns:MySequence\"/> </choice> </type>",
      "ja": "<タイプ> <選択肢のxmlns：EX = \"http://www.example.com/schema\"> <要素名= \"1\" タイプ= \"asnx：INTEGER\" /> <属性名= \"2\" タイプ= \"asnx ：BOOLEAN \"/> <属性REF =\" 例：foo」という識別子= \"3\" 埋め込ま= \"真\" /> <要素REF = \"例：バー\" 埋め込まれた= \"true\" を/> <要素をelementType = \"製品\" コンテキスト= \"http://www.example.com/inventory\" 識別子= \"5\"> <TAG番号= \"0\" /> </要素> <グループ名= \"6\" タイプ= \"TNS：MySequence\" /> < /選択> </タイプ>"
    },
    {
      "indent": 0,
      "text": "6.12.2. SequenceType Translation",
      "section_title": true,
      "ja": "6.12.2.  SequenceType翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a SequenceType is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An element item with the [local name] \"sequence\" SHALL be appended to the [children] of the <type> element item. The translation of each ComponentType nested in the ComponentTypeList in the initial RootComponentTypeList, if present, SHALL be appended to the [children] of the <sequence> element item.",
      "ja": "SequenceTypeの翻訳は、[ローカル名「タイプ」の要素項目です。 [ローカル名]を持つ要素項目は、「注釈」は、<type>要素項目の[子供]に添加してもよいです。 [ローカル名]「配列」を持つ要素項目は、<type>要素項目の[子供]を添付しなければなりません。初期RootComponentTypeListにComponentTypeListにネスト各COMPONENTTYPEの翻訳は、存在する場合、<シーケンス>要素項目の[子供]を添付しなければなりません。"
    },
    {
      "indent": 3,
      "text": "If an ExtensionAndException is present, then an element item with the [local name] \"extension\" SHALL be appended to the [children] of the <sequence> element item. If an ExceptionSpec is present in the ExtensionAndException, then the translation of the ExceptionSpec (possibly empty) SHALL be added to the [children] of the <extension> element item.",
      "ja": "ExtensionAndExceptionが存在する場合、[ローカル名「拡張子」の要素アイテムは、<シーケンス>要素項目の[子供]を添付しなければなりません。 ExceptionSpecはExtensionAndExceptionに存在する場合、（おそらく空の）ExceptionSpecの翻訳は、<拡張>要素項目の[子供]に追加することがSHALL。"
    },
    {
      "indent": 3,
      "text": "If an ExtensionAdditions instance is present, then the translation of each ExtensionAdditionGroup or ComponentType nested in the ExtensionAdditions (if any) SHALL be appended to the [children] of the <extension> element item.",
      "ja": "ExtensionAdditionsインスタンスが存在する場合、ExtensionAdditions（もしあれば）にネスト各ExtensionAdditionGroup又はCOMPONENTTYPEの翻訳は、<拡張>要素項目の[子供]を添付しなければなりません。"
    },
    {
      "indent": 3,
      "text": "If an ExtensionEndMarker is present, then the translation of each ComponentType nested in the ComponentTypeList in the final RootComponentTypeList SHALL be appended to the [children] of the <sequence> element item.",
      "ja": "ExtensionEndMarkerが存在する場合、最終的なRootComponentTypeListにComponentTypeListにネスト各COMPONENTTYPEの翻訳は、<シーケンス>要素項目の[子供]を添付しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The translation of an ExtensionAdditionGroup is an element item with the [local name] \"extensionGroup\". If the VersionNumber in the ExtensionAdditionGroup is not empty, then an attribute item with the [local name] \"version\" SHALL be added to the [attributes] of the <extensionGroup> element item. The [normalized value] of this attribute item is the number in the VersionNumber. The translation of each ComponentType nested in the ExtensionAdditionGroup SHALL be appended to the [children] of the <extensionGroup> element item.",
      "ja": "ExtensionAdditionGroupの翻訳は、[ローカル名]「extensionGroup」を持つ要素項目です。 ExtensionAdditionGroup内のversionNumberが空でない場合、[ローカル名「バージョン」の属性項目は<extensionGroup>要素項目の[属性]に追加されるものとします。この属性項目の[正規化値]のversionNumberの数値です。 ExtensionAdditionGroupにネスト各COMPONENTTYPEの翻訳は、<extensionGroup>要素項目の[子供]を添付しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The translation of a ComponentType of the \"NamedType\" form is the normal translation of the NamedType.",
      "ja": "「NamedType」フォームのCOMPONENTTYPEの翻訳はNamedTypeの通常の翻訳です。"
    },
    {
      "indent": 3,
      "text": "The translation of a ComponentType of the \"NamedType OPTIONAL\" form is an element item with the [local name] \"optional\". The normal translation of the NamedType SHALL be added to the [children] of the <optional> element item.",
      "ja": "「NamedType OPTIONAL」形のCOMPONENTTYPEの翻訳は、[ローカル名「オプション」の要素項目です。 NamedTypeの通常の変換は、<オプション>要素項目の[子供]に追加することがSHALL。"
    },
    {
      "indent": 3,
      "text": "The translation of a ComponentType of the \"NamedType DEFAULT Value\" form is an element item with the [local name] \"optional\". The normal translation of the NamedType SHALL be added to the [children] of the <optional> element item. An element item with the [local name] \"default\" SHALL be appended to the [children] of the <optional> element item. The translation of the Value SHALL be added to the [children] or [attributes] of the <default> element item.",
      "ja": "「NamedTypeデフォルト値」形式のCOMPONENTTYPEの翻訳は、[ローカル名「オプション」の要素項目です。 NamedTypeの通常の変換は、<オプション>要素項目の[子供]に追加することがSHALL。 [ローカル名]「デフォルト」を持つ要素項目は、<オプション>要素項目の[子供]を添付しなければなりません。値の翻訳は、[子供]または<デフォルト>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of a ComponentType of the \"COMPONENTS OF Type\" form is an element item with the [local name] \"componentsOf\". The translation of the Type SHALL be added to the [children] or [attributes] of the <componentsOf> element item.",
      "ja": "翻訳「タイプのコンポーネント」のCOMPONENTTYPEの形態は、[ローカル名「componentsOf」の要素項目です。タイプの翻訳は、[子供]または<componentsOf>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "SEQUENCE { one INTEGER, two [RXER:ATTRIBUTE] BOOLEAN OPTIONAL, ..., [[ 2: four NULL ]], COMPONENTS OF MySequence, ..., three PrintableString DEFAULT \"third\" }",
      "ja": "SEQUENCE {1つのINTEGER、2 [RXER：ATTRIBUTE] BOOLEAN OPTIONAL、...、[[2：4 NULL]、MySequenceの構成要素、...、 \"第3\" 3はPrintableStringデフォルト}"
    },
    {
      "indent": 6,
      "text": "<type> <sequence> <element name=\"one\" type=\"asnx:INTEGER\"/> <optional> <attribute name=\"two\" type=\"asnx:BOOLEAN\"/> </optional> <extension> <extensionGroup version=\"2\"> <element name=\"four\" type=\"asnx:NULL\"/> </extensionGroup> <componentsOf type=\"tns:MySequence\"/> </extension> <optional> <element name=\"three\" type=\"asnx:PrintableString\"/> <default literalValue=\"third\"/> </optional> </sequence> </type>",
      "ja": "<タイプ> <シーケンス> <要素名= \"1\" タイプ= \"asnx：INTEGER\" /> <オプション> <属性名= \"2\" タイプ= \"asnx：BOOLEAN\" /> </オプション> <拡張> <extensionGroupバージョン= \"2\"> <要素名= \"4\" タイプ= \"asnx：NULL\" /> </ extensionGroup> <componentsOfタイプ= \"TNS：MySequence\" /> </拡張> <オプション> <要素名=「三\"TYPE =\" asnx：はPrintableString \"/> <デフォルトliteralValue =\" 第三の \"/> </オプション> </配列> </タイプ>"
    },
    {
      "indent": 0,
      "text": "6.12.3. SetType Translation",
      "section_title": true,
      "ja": "6.12.3.  SETTYPE翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a SetType follows the same procedure as the translation of a SequenceType except that SetType replaces SequenceType, \"SET\" replaces \"SEQUENCE\", and the [local name] \"set\" is used instead of \"sequence\".",
      "ja": "setTypeの翻訳は、はsetTypeは、「SET」は「SEQUENCE」を置き換え、[ローカル名]が代わりに「配列」のに使用される「セット」SequenceTypeを置き換える以外はSequenceTypeの翻訳と同じ手順に従います。"
    },
    {
      "indent": 0,
      "text": "6.12.4. ChoiceType Translation",
      "section_title": true,
      "ja": "6.12.4.  ChoiceType翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a ChoiceType that is not subject to a UNION encoding instruction is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An element item with the [local name] \"choice\" SHALL be appended to the [children] of the <type> element item. The normal translation of each NamedType nested in the AlternativeTypeList in the RootAlternativeTypeList in the AlternativeTypeLists SHALL be appended to the [children] of the <choice> element item.",
      "ja": "UNION符号化命令を受けないChoiceTypeの翻訳は、[ローカル名「タイプ」の要素項目です。 [ローカル名]を持つ要素項目は、「注釈」は、<type>要素項目の[子供]に添加してもよいです。 [ローカル名]を持つ要素項目は、「選択」は、<type>要素項目の[子供]を添付しなければなりません。 AlternativeTypeListsにRootAlternativeTypeListにAlternativeTypeListにネストされた各NamedTypeの通常の翻訳は、<選択肢>要素項目の[子供]を添付しなければなりません。"
    },
    {
      "indent": 3,
      "text": "If an ExtensionAndException is present in the AlternativeTypeLists, then an element item with the [local name] \"extension\" SHALL be appended to the [children] of the <choice> element item. If an ExceptionSpec is present in the ExtensionAndException, then the translation of the ExceptionSpec (possibly empty) is added to the [children] of the <extension> element item.",
      "ja": "ExtensionAndExceptionがAlternativeTypeListsに存在している場合は、[ローカル名]「拡張子」を持つ要素項目は、<選択肢>要素項目の[子供]を添付しなければなりません。 ExceptionSpecはExtensionAndExceptionに存在する場合、（おそらく空の）ExceptionSpecの翻訳は、<拡張>要素項目の[子供]に追加されます。"
    },
    {
      "indent": 3,
      "text": "If an ExtensionAdditionAlternatives instance is present in the AlternativeTypeLists, then the translation of each ExtensionAdditionAlternativesGroup or NamedType (if any) nested in the ExtensionAdditionAlternatives SHALL be appended in order to the [children] of the <extension> element item. The normal translation of the NamedType is used.",
      "ja": "ExtensionAdditionAlternativesインスタンスはAlternativeTypeLists中に存在する場合、次いでExtensionAdditionAlternativesにネスト各ExtensionAdditionAlternativesGroup又はNamedTypeの翻訳は、（もしあれば）<拡張>要素項目の[子供]の順にを付加しなければなりません。 NamedTypeの正常な翻訳が使用されています。"
    },
    {
      "indent": 3,
      "text": "The translation of an ExtensionAdditionAlternativesGroup is an element item with the [local name] \"extensionGroup\". If the VersionNumber in the ExtensionAdditionAlternativesGroup is not empty, then an attribute item with the [local name] \"version\" SHALL be added to the [attributes] of the <extensionGroup> element item. The [normalized value] of this attribute item is the number in the VersionNumber. The normal translation of each NamedType nested in the AlternativeTypeList in the ExtensionAdditionAlternativesGroup SHALL be appended to the [children] of the <extensionGroup> element item.",
      "ja": "ExtensionAdditionAlternativesGroupの翻訳は、[ローカル名]「extensionGroup」を持つ要素項目です。 ExtensionAdditionAlternativesGroup内のversionNumberが空でない場合、[ローカル名「バージョン」の属性項目は<extensionGroup>要素項目の[属性]に追加されるものとします。この属性項目の[正規化値]のversionNumberの数値です。 ExtensionAdditionAlternativesGroupにAlternativeTypeListにネスト各NamedTypeの正常な翻訳<extensionGroup>要素項目の[子供]を添付しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "CHOICE { one INTEGER, two [RXER:NAME AS \"Two\"] BOOLEAN, ..., [[ 2: three NULL ]], four PrintableString, ... }",
      "ja": "CHOICE {1つのINTEGER、2：BOOLEAN、[RXER NAME \"二つの\" AS] ...、[[2：3 NULL]は、4つはPrintableString、...}"
    },
    {
      "indent": 6,
      "text": "<type> <choice> <element name=\"one\" type=\"asnx:INTEGER\"/> <element name=\"Two\" type=\"asnx:BOOLEAN\"/> <extension> <extensionGroup version=\"2\"> <element name=\"three\" type=\"asnx:NULL\"/> </extensionGroup> <element name=\"four\" type=\"asnx:PrintableString\"/> </extension> </choice> </type>",
      "ja": "<タイプ> <選択> <要素名= \"1\" タイプ= \"asnx：INTEGER\" /> <要素名= \"二\" タイプ= \"asnx：BOOLEAN\" /> <拡張子> <extensionGroupバージョン= \"2\"> <要素名= \"3\" タイプ= \"asnx：NULL\" /> </ extensionGroup> <要素名= \"4\" タイプ= \"asnx：PrintableStringの\" /> </拡張> </選択> </入力>"
    },
    {
      "indent": 0,
      "text": "6.12.5. Translation of UNION Types",
      "section_title": true,
      "ja": "6.12.5.  UNIONタイプの翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a ChoiceType that is subject to a UNION encoding instruction follows the same procedure as the translation of a ChoiceType that is not subject to a UNION encoding instruction except that the [local name] \"union\" is used instead of \"choice\", and the member translation of each NamedType is used instead of the normal translation.",
      "ja": "UNIONのエンコード命令の対象となるChoiceTypeの翻訳は、[ローカル名]「労働組合が」代わりに「選択」を使用していることを除き、UNIONのエンコード命令の対象ではありませんChoiceTypeの翻訳と同じ手順に従います、各NamedTypeのメンバーの翻訳ではなく、通常の翻訳で使用されています。"
    },
    {
      "indent": 3,
      "text": "In addition, if the UNION encoding instruction has a PrecedenceList, then an attribute item with the [local name] \"precedence\" SHALL be added to the [attributes] of the <union> element item. The [normalized value] of this attribute item is the white space separated list of qualified names for the expanded names of the NamedType instances [RXEREI] corresponding to the identifiers in the PrecedenceList. A white space separator is one or more of the white space characters.",
      "ja": "UNIONエンコード命令はPrecedenceList、[ローカル名「優先順位」と、属性項目がある場合に加えて、<組合>要素項目の[属性]に追加されるものとします。この属性項目の[正規化値] [RXEREI] PrecedenceList内の識別子に対応するNamedTypeインスタンスの拡張名の修飾名の空白で区切られたリストです。ホワイトスペースの区切りは空白文字の1以上です。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "[RXER:UNION PRECEDENCE utf8 visible] CHOICE { printable PrintableString, teletex TeletexString, visible [RXER:NAME AS \"ascii\"] VisibleString, ..., utf8 UTF8String }",
      "ja": "[RXER：UNION優先UTF8可視] CHOICE {プリンタブルはPrintableString、テレックスTeletexString、可視[RXER： \"ASCII\" AS NAME] VisibleString、...、UTF8 UTF8Stringを}"
    },
    {
      "indent": 6,
      "text": "<type> <union precedence=\"utf8 ascii\"> <member name=\"printable\" type=\"asnx:PrintableString\"/> <member name=\"teletex\" type=\"asnx:TeletexString\"/> <member name=\"ascii\" identifier=\"visible\" type=\"asnx:VisibleString\"/> <extension> <member name=\"utf8\" type=\"asnx:UTF8String\"/> </extension> </union> </type>",
      "ja": "<タイプ> <労働組合優先= \"UTF8のアスキー\"> <メンバ名= \"印刷可能な\" タイプ= \"asnx：PrintableStringの\" /> <メンバー名= \"テレテックス\" タイプ= \"asnx：TeletexString\" /> <メンバー名= \"アスキー\"識別子=\" 可視」タイプ= \"asnx：VisibleString\" /> <拡張> <メンバ名= \"UTF8\" タイプ= \"asnx：UTF8Stringを\" /> </拡張> </組合> </タイプ>"
    },
    {
      "indent": 0,
      "text": "6.12.6. SequenceOfType Translation",
      "section_title": true,
      "ja": "6.12.6.  SequenceOfType翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a SequenceOfType that is not subject to a LIST encoding instruction is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An element item with the [local name] \"sequenceOf\" SHALL be appended to the [children] of the <type> element item.",
      "ja": "LIST符号化命令を受けないSequenceOfTypeの翻訳は、[ローカル名「タイプ」の要素項目です。 [ローカル名]を持つ要素項目は、「注釈」は、<type>要素項目の[子供]に添加してもよいです。 [ローカル名]「sequenceOf」と要素項目は、<type>要素項目の[子供]を添付しなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the SequenceOfType is of the \"SEQUENCE OF NamedType\" form, then the normal translation of the NamedType SHALL be added to the [children] of the <sequenceOf> element item.",
      "ja": "SequenceOfTypeフォーム「NamedType OF SEQUENCE」である場合、次いでNamedTypeの正常な翻訳<sequenceOf>要素項目の[子供]に追加することがSHALL。"
    },
    {
      "indent": 3,
      "text": "If the SequenceOfType is of the \"SEQUENCE OF Type\" form, then an element item with the [local name] \"element\" or \"component\" (translator's choice) SHALL be added to the [children] of the <sequenceOf> element item. An attribute item with the [local name] \"name\" and [normalized value] \"item\" SHALL be added to the [attributes] of the <element> or <component> element item. An attribute item with the [local name] \"identifier\" and empty [normalized value] SHALL be added to the [attributes] of the <element> or <component> element item. The translation of the Type SHALL be added to the [children] or [attributes] of the <element> or <component> element item.",
      "ja": "SequenceOfTypeフォーム「型の配列」である場合、[ローカル名「要素」または「成分」（翻訳者の選択）を持つ要素のアイテムは、<sequenceOf>要素項目の[子供]に追加することがSHALL。 [ローカル名「名前」および[正規化された値]の属性項目は「項目」は、<要素>または<component>要素項目の[属性]に追加されるものとします。 [ローカル名「識別子」と空[正規化された値は、<要素>または<component>要素項目の[属性]に追加されるものとして属性項目。タイプの変換は、[子供]または<要素>または<component>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "Examples",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "SEQUENCE OF INTEGER",
      "ja": "INTEGERのシーケンス"
    },
    {
      "indent": 6,
      "text": "<type> <sequenceOf> <element name=\"item\" identifier=\"\" type=\"asnx:INTEGER\"/> </sequenceOf> </type>",
      "ja": "<タイプ> <sequenceOf> <要素名= \"項目\" 識別子= \"\" タイプ= \"asnx：INTEGER\" /> </ sequenceOf> </タイプ>"
    },
    {
      "indent": 6,
      "text": "SEQUENCE OF counter INTEGER",
      "ja": "カウンターINTEGERのシーケンス"
    },
    {
      "indent": 6,
      "text": "<type> <sequenceOf> <element name=\"counter\" type=\"asnx:INTEGER\"/> </sequenceOf> </type>",
      "ja": "<タイプ> <シーケンス> <要素名= \"カウンタ\" タイプ= \"として整数\" /> </タイプ> <OF /シーケンス>"
    },
    {
      "indent": 0,
      "text": "6.12.7. Translation of LIST Types",
      "section_title": true,
      "ja": "6.12.7. リストタイプの翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a SequenceOfType that is subject to a LIST encoding instruction is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An element item with the [local name] \"list\" SHALL be appended to the [children] of the <type> element item. The item translation of the NamedType in the SequenceOfType SHALL be added to the [children] of the <list> element item.",
      "ja": "LIST符号化指示の対象となるSequenceOfTypeの翻訳は、[ローカル名「タイプ」の要素項目です。 [ローカル名]を持つ要素項目は、「注釈」は、<type>要素項目の[子供]に添加してもよいです。 [ローカル名]「リスト」を持つ要素項目は、<type>要素項目の[子供]を添付しなければなりません。 SequenceOfTypeでNamedTypeの項目の翻訳は、<リスト>要素項目の[子供]に追加されるものとします。"
    },
    {
      "indent": 6,
      "text": "Aside: A SequenceOfType is necessarily of the \"SEQUENCE OF NamedType\" form for a LIST encoding instruction.",
      "ja": "脇：SequenceOfTypeは必ずしもLISTエンコード命令の「SEQUENCE NamedType OF」の形式です。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "[RXER:LIST] SEQUENCE OF number INTEGER",
      "ja": "[RXER：LIST]数INTEGERのシーケンス"
    },
    {
      "indent": 6,
      "text": "<type> <list> <item name=\"number\" type=\"asnx:INTEGER\"/> </list> </type>",
      "ja": "<タイプ> <リスト> <項目名= \"番号\" タイプ= \"asnx：INTEGER\" /> </リスト> </入力>"
    },
    {
      "indent": 0,
      "text": "6.12.8. SetOfType Translation",
      "section_title": true,
      "ja": "6.12.8.  SetOfType翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a SetOfType follows the same procedure as the translation of a SequenceOfType except that SetOfType replaces SequenceOfType, \"SET\" replaces \"SEQUENCE\", and the [local name] \"setOf\" is used instead of \"sequenceOf\".",
      "ja": "SetOfTypeの翻訳は、「SET」は「SEQUENCE」を置き換え、[ローカル名]「SETOFは」ではなく「sequenceOf」の使用されているSequenceOfTypeを置き換えることSetOfType除くSequenceOfTypeの翻訳と同じ手順に従います。"
    },
    {
      "indent": 0,
      "text": "6.12.9. Effect of Insertion Encoding Instructions",
      "section_title": true,
      "ja": "6.12.9. 挿入エンコード命令の効果"
    },
    {
      "indent": 3,
      "text": "If a Type is subject to a NO-INSERTIONS, HOLLOW-INSERTIONS, SINGULAR-INSERTIONS, UNIFORM-INSERTIONS, or MULTIFORM-INSERTIONS encoding instruction, then an attribute item with the [local name] \"insertions\" SHALL be added to the [attributes] of the <choice>, <sequence> or <set> element item in the [children] of the <type> element item resulting from the translation of the Type. The [normalized value] of this attribute item is \"none\" in the case of a NO-INSERTIONS encoding instruction, \"hollow\" in the case of a HOLLOW-INSERTIONS encoding instruction, \"singular\" in the case of a SINGULAR-INSERTIONS encoding instruction, \"uniform\" in the case of a UNIFORM-INSERTIONS encoding instruction, and \"multiform\" in the case of a MULTIFORM-INSERTIONS encoding instruction.",
      "ja": "TypeがNO-挿入、中空挿入、単数-挿入、均一挿入、または多形-挿入エンコード命令の対象である場合には、[ローカル名「挿入」の属性項目には、[属性に追加することがSHALL <選択>、<シーケンス>または<セット>要素のアイテムタイプの翻訳に起因する<type>要素項目の[子供]での。この属性項目の[正規化値]の特異挿入符号化の場合にはNO-挿入符号化命令の場合には「なし」、「中空」中空挿入符号化命令の場合に、「特異」でありません命令均一挿入符号化命令の場合、「均一な」、及び多形-挿入符号化命令の場合には「多形」。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "[NO-INSERTIONS] CHOICE { one [RXER:GROUP] [RXER:SINGULAR-INSERTIONS] CHOICE { two INTEGER, ... }, ... }",
      "ja": "[NO-挿入] CHOICE {1 [RXER：GROUP] [RXER：の特異挿入] CHOICE {2つの整数、...}、...}"
    },
    {
      "indent": 6,
      "text": "<type> <choice insertions=\"none\"> <group name=\"one\"> <type> <choice insertions=\"singular\"> <element name=\"two\" type=\"asnx:INTEGER\"/> <extension/> </choice> </type> </group> <extension/> </choice> </type>",
      "ja": "<タイプ> <選択肢挿入= \"なし\"> <グループ名= \"1\"> <タイプ> <選択肢挿入= \"単数\"> <要素名= \"2\" タイプ= \"asnx：INTEGER\" /> <拡張/> </選択> </タイプ> </グループ> <拡張/> </選択> </入力>"
    },
    {
      "indent": 0,
      "text": "6.13. Translation of Constrained Types",
      "section_title": true,
      "ja": "6.13. 拘束タイプの翻訳"
    },
    {
      "indent": 3,
      "text": "If a ConstrainedType is of the \"Type Constraint\" form, then the translation of the ConstrainedType is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An element item with the [local name] \"constrained\" SHALL be appended to the [children] of the <type> element item. The translation of the Type SHALL be added to the [children] or",
      "ja": "ConstrainedTypeが「型制約」形式である場合、ConstrainedTypeの翻訳は、[ローカル名「タイプ」の要素項目です。 [ローカル名]を持つ要素項目は、「注釈」は、<type>要素項目の[子供]に添加してもよいです。 [ローカル名]を持つ要素項目は「制約」<type>要素項目の[子供]を添付しなければなりません。タイプの翻訳は、[子供]に追加されるものとする（SHALL）または"
    },
    {
      "indent": 3,
      "text": "[attributes] of the <constrained> element item. The translation of the Constraint SHALL be added to the [children] of the <constrained> element item.",
      "ja": "<拘束>要素項目の[属性]。制約の翻訳は、<拘束>要素項目の[子供]に追加することがSHALL。"
    },
    {
      "indent": 3,
      "text": "The translation of a ContainedType that is a TypeWithConstraint is the translation of the TypeWithConstraint.",
      "ja": "TypeWithConstraintあるContainedTypeの翻訳はTypeWithConstraintの翻訳です。"
    },
    {
      "indent": 3,
      "text": "Definition (simple endpoint): A LowerEndpoint or UpperEndpoint is a simple endpoint if it is closed and its value is \"MIN\", \"MAX\", or a SignedNumber in an IntegerValue in a BuiltinValue in the Value of the endpoint.",
      "ja": "定義（単純なエンドポイント）が閉じている場合LowerEndpointまたはUpperEndpointは単純エンドポイントであり、その値は「MIN」、「MAX」、またはエンドポイントの値にBuiltinValueにするIntegerValueでSignedNumberあります。"
    },
    {
      "indent": 3,
      "text": "Definition (simple range SizeConstraint): A SizeConstraint is a simple range if the Constraint in the SizeConstraint contains only a ValueRange (i.e., a ValueRange in a SubtypeElements instance in an Elements instance in a lone IntersectionElements instance in a lone Intersections instance in a Unions instance in an ElementSetSpec in a RootElementSetSpec in an ElementSetSpecs instance without an AdditionalElementSetSpec in a SubtypeConstraint in a ConstraintSpec in the Constraint) and both endpoints are simple.",
      "ja": "定義（単純範囲SizeConstraint）：SizeConstraintにおける制約はユニオン・インスタンスにおける唯一の交点インスタンスで孤立IntersectionElementsインスタンス内の要素インスタンス内SubtypeElementsインスタンス内のみValueRange（すなわち、ValueRangeを含む場合SizeConstraintが簡単範囲であります制約でConstraintSpecでSubtypeConstraintでAdditionalElementSetSpec無しElementSetSpecsインスタンス内RootElementSetSpecでElementSetSpec）と両方のエンドポイントに簡単です。"
    },
    {
      "indent": 3,
      "text": "Definition (simple range Constraint): A Constraint is a simple range if contains only a SizeConstraint that is a simple range (i.e., a simple range SizeConstraint in a SubtypeElements instance in an Elements instance in a lone IntersectionElements instance in a lone Intersections instance in a Unions instance in an ElementSetSpec in a RootElementSetSpec in an ElementSetSpecs instance without an AdditionalElementSetSpec in a SubtypeConstraint in a ConstraintSpec in the Constraint).",
      "ja": "定義（シンプルな範囲制約）：で唯一の交差点インスタンスで唯一IntersectionElementsインスタンス内の要素インスタンスにSubtypeElementsインスタンスに簡単な範囲（すなわち、シンプルな範囲SizeConstraintあるだけSizeConstraintが含まれている場合、制約は、単純な範囲であります制約でConstraintSpecでSubtypeConstraintでAdditionalElementSetSpec無しElementSetSpecsインスタンス内RootElementSetSpecでElementSetSpecの組合インスタンス）。"
    },
    {
      "indent": 3,
      "text": "If the Constraint or SizeConstraint in a TypeWithConstraint is a simple range, then the compact translation of the TypeWithConstraint MAY be used; otherwise, the full translation of the TypeWithConstraint is used.",
      "ja": "TypeWithConstraintにおける制約やSizeConstraintが単純な範囲であれば、TypeWithConstraintのコンパクトな翻訳が使用されるかもしれません。それ以外の場合は、TypeWithConstraintの完全な翻訳が使用されています。"
    },
    {
      "indent": 3,
      "text": "The compact translation of a TypeWithConstraint is initially the translation of its notional parent type. If the value of the lower endpoint is not \"MIN\" or \"0\", then an attribute item with the [local name] \"minSize\" SHALL be added to the [attributes] of the <sequenceOf>, <setOf>, or <list> element item resulting from the translation of the parent type. The [normalized value] of this attribute item is the value of the lower endpoint. If the value of the lower endpoint is \"MIN\" or \"0\", then an attribute item with the [local name] \"minSize\" and [normalized value] \"0\" MAY be added to the [attributes] of the <sequenceOf>, <setOf>, or <list> element item. If the value of the upper endpoint is not \"MAX\", then an attribute item with the [local name] \"maxSize\" SHALL be added to the [attributes] of the <sequenceOf>, <setOf>, or <list> element item.",
      "ja": "TypeWithConstraintのコンパクトな翻訳は、最初はその名目親タイプの翻訳です。下端点の値が「MIN」または「0」、[ローカル名]と、属性項目ではない場合、「に、minSizeは」<sequenceOf>、<SETOF>、または[属性]に追加することがSHALL <リスト>要素項目は、親タイプの換算から生じます。この属性項目の[正規化された値は、下部の終点の値です。下端点の値は、「MIN」または「0」、[ローカル名]「に、minSize」と[正規化された値が「0」<sequenceOf>の[属性]に追加されるかもしれませんと、属性項目である場合、<SETOF>、または<リスト>要素項目。上側エンドポイントの値が「MAX」でない場合は、[ローカル名]の属性項目は「maxSizeのは、」<sequenceOf>、<SETOF>の[属性]に追加されるべきであり、又は、<list>の要素項目。"
    },
    {
      "indent": 3,
      "text": "The [normalized value] of this attribute item is the value of the upper endpoint.",
      "ja": "この属性項目の[正規化された値は、上部の終点の値です。"
    },
    {
      "indent": 3,
      "text": "The full translation of a TypeWithConstraint is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An element item with the [local name] \"constrained\" SHALL be appended to the [children] of the <type> element item. The translation of the notional parent type of the TypeWithConstraint SHALL be added to the [children] or [attributes] of the <constrained> element item. The translation of the Constraint or SizeConstraint in the TypeWithConstraint SHALL be added to the [children] of the <constrained> element item.",
      "ja": "TypeWithConstraintの完全な翻訳は、[ローカル名]「タイプ」の要素項目です。 [ローカル名]を持つ要素項目は、「注釈」は、<type>要素項目の[子供]に添加してもよいです。 [ローカル名]を持つ要素項目は「制約」<type>要素項目の[子供]を添付しなければなりません。 TypeWithConstraintの名目親の型の変換は、[子供]または<制約>要素項目の[属性]に追加されるものとします。 TypeWithConstraintにおける制約またはSizeConstraintの翻訳<拘束​​>要素項目の[子供]に追加することがSHALL。"
    },
    {
      "indent": 3,
      "text": "Examples",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "SEQUENCE (SIZE(1..MAX)) OF number INTEGER",
      "ja": "SEQUENCE（SIZE（1..MAX））数の整数"
    },
    {
      "indent": 6,
      "text": "<type> <sequenceOf minSize=\"1\"> <element name=\"number\" type=\"asnx:INTEGER\"/> </sequenceOf> </type>",
      "ja": "<タイプ> <sequenceOfに、minSize = \"1\"> <要素名= \"番号\" タイプ= \"asnx：INTEGER\" /> </ sequenceOf> </タイプ>"
    },
    {
      "indent": 6,
      "text": "SEQUENCE SIZE(0..10) OF number INTEGER",
      "ja": "数INTEGERのシーケンスSIZE（0..10）"
    },
    {
      "indent": 6,
      "text": "<type> <sequenceOf maxSize=\"10\"> <element name=\"number\" type=\"asnx:INTEGER\"/> </sequenceOf> </type>",
      "ja": "<タイプ> <sequenceOf maxSizeの= \"10\"> <要素名= \"番号\" タイプ= \"asnx：INTEGER\" /> </ sequenceOf> </タイプ>"
    },
    {
      "indent": 6,
      "text": "SEQUENCE SIZE(1..limit) OF number INTEGER",
      "ja": "数INTEGERのシーケンスSIZE（1..limit）"
    },
    {
      "indent": 6,
      "text": "<type> <constrained> <type> <sequenceOf> <element name=\"number\" type=\"asnx:INTEGER\"/> </sequenceOf> </type> <size> <range> <minInclusive literalValue=\"1\"/> <maxInclusive value=\"tns:limit\"/> </range>",
      "ja": "<タイプ> <拘束> <タイプ> <sequenceOf> <要素名= \"番号\" タイプ= \"asnx：INTEGER\" /> </ sequenceOf> </タイプ> <サイズ> <範囲> <のminInclusive literalValue = \"1\" / > <maxInclusiveを値= \"TNS：限界\" /> </範囲>"
    },
    {
      "indent": 6,
      "text": " </size> </constrained> </type>",
      "ja": "</サイズ> </拘束> </タイプ>"
    },
    {
      "indent": 0,
      "text": "6.13.1. Constraint Translation",
      "section_title": true,
      "ja": "6.13.1. 制約翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a Constraint is the translation of the ConstraintSpec in the Constraint followed by the translation of the ExceptionSpec (possibly empty) in the Constraint.",
      "ja": "制約の翻訳は、制約にExceptionSpec（空）の翻訳に続いて制約でConstraintSpecの翻訳です。"
    },
    {
      "indent": 3,
      "text": "The translation of a ConstraintSpec is the translation of the SubtypeConstraint or GeneralConstraint in the ConstraintSpec.",
      "ja": "ConstraintSpecの翻訳はConstraintSpecでSubtypeConstraintまたはGeneralConstraintの翻訳です。"
    },
    {
      "indent": 3,
      "text": "The translation of a SubtypeConstraint is the translation of the ElementSetSpecs in the SubtypeConstraint.",
      "ja": "SubtypeConstraintの翻訳はSubtypeConstraintでElementSetSpecsの翻訳です。"
    },
    {
      "indent": 3,
      "text": "The translation of a GeneralConstraint [X.682] is the translation of the UserDefinedConstraint, TableConstraint, or ContentsConstraint in the GeneralConstraint.",
      "ja": "GeneralConstraintの翻訳は、[X.682] GeneralConstraintでUserDefinedConstraint、TableConstraint、又はContentsConstraintの翻訳です。"
    },
    {
      "indent": 0,
      "text": "6.13.2. UserDefinedConstraint Translation",
      "section_title": true,
      "ja": "6.13.2.  UserDefinedConstraint翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a UserDefinedConstraint is an element item with the [local name] \"constrainedBy\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <constrainedBy> element item. The translation of each UserDefinedConstraintParameter in the UserDefinedConstraint SHALL be appended to the [children] of the <constrainedBy> element item.",
      "ja": "UserDefinedConstraintの翻訳は、[ローカル名]「constrainedBy」を持つ要素項目です。 [ローカル名]「注釈」を持つ要素項目は、<constrainedBy>要素項目の[子供]に添加してもよいです。 UserDefinedConstraint各UserDefinedConstraintParameterの翻訳は、<constrainedBy>要素項目の[子供]を添付しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The translation of a UserDefinedConstraintParameter of the \"Governor : Value\" form is an element item with the [local name] \"valueParameter\". The translation of the Type in the Governor SHALL be added to the [children] or [attributes] of the <valueParameter> element item. The translation of the Value SHALL be added to the [children] or [attributes] of the <valueParameter> element item.",
      "ja": "UserDefinedConstraintParameterの翻訳「知事：値」の形式は、[ローカル名「valueParameter」の要素項目です。知事タイプの翻訳は、[子供]または<valueParameter>要素項目の[属性]に追加されるものとします。値の翻訳は、[子供]または<valueParameter>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of a UserDefinedConstraintParameter of the \"Governor : ValueSet\" form is an element item with the [local name] \"valueSetParameter\". The translation of the Type in the Governor SHALL be added to the [children] or [attributes] of the <valueSetParameter> element item. The translation of the ValueSet SHALL be added to the [children] of the <valueSetParameter> element item.",
      "ja": "UserDefinedConstraintParameterの翻訳「知事：値セット」形式は、[ローカル名「valueSetParameter」の要素項目です。知事タイプの翻訳は、[子供]または<valueSetParameter>要素項目の[属性]に追加されるものとします。値セットの翻訳は、<valueSetParameter>要素項目の[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of a UserDefinedConstraintParameter of the \"Governor : Object\" form is an element item with the [local name] \"objectParameter\". The translation of the DefinedObjectClass in the Governor SHALL be added to the [children] or [attributes] of the",
      "ja": "UserDefinedConstraintParameterの翻訳「知事：オブジェクト」フォームは、[ローカル名「objectParameter」の要素項目です。知事でDefinedObjectClassの翻訳は、の[子供]または[属性]に追加されるものとする（SHALL）"
    },
    {
      "indent": 3,
      "text": "<objectParameter> element item. The translation of the Object SHALL be added to the [children] or [attributes] of the <objectParameter> element item.",
      "ja": "<objectParameter>要素項目。オブジェクトの翻訳は、[子供]または<objectParameter>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of a UserDefinedConstraintParameter of the \"Governor : ObjectSet\" form is an element item with the [local name] \"objectSetParameter\". The translation of the DefinedObjectClass in the Governor SHALL be added to the [children] or [attributes] of the <objectSetParameter> element item. The translation of the ObjectSet SHALL be added to the [children] or [attributes] of the <objectSetParameter> element item.",
      "ja": "UserDefinedConstraintParameterの翻訳「知事：objectSetと」フォームは、[ローカル名「objectSetParameter」の要素項目です。知事でDefinedObjectClassの翻訳は、[子供]または<objectSetParameter>要素項目の[属性]に追加されるものとします。 objectSetとの翻訳は、[子供]または<objectSetParameter>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of a UserDefinedConstraintParameter that is a Type is an element item with the [local name] \"typeParameter\". The translation of the Type SHALL be added to the [children] or [attributes] of the <typeParameter> element item.",
      "ja": "タイプであるUserDefinedConstraintParameterの翻訳は、[ローカル名]「typeParameter」を持つ要素項目です。タイプの翻訳は、[子供]または<typeParameter>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of a UserDefinedConstraintParameter that is a DefinedObjectClass is an element item with the [local name] \"classParameter\". The translation of the DefinedObjectClass SHALL be added to the [children] or [attributes] of the <classParameter> element item.",
      "ja": "DefinedObjectClassあるUserDefinedConstraintParameterの翻訳は、[ローカル名]「classParameter」を持つ要素項目です。 DefinedObjectClassの翻訳は、[子供]または<classParameter>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "OCTET STRING (CONSTRAINED BY { -- contains the hash of the value -- MyType:myValue })",
      "ja": "オクテットSTRING（によって拘束{ - は：myValueがMyType  - 値のハッシュを含ん}）"
    },
    {
      "indent": 6,
      "text": "<type> <constrained type=\"asnx:OCTET-STRING\"> <constrainedBy> <annotation> contains the hash of the value </annotation> <valueParameter type=\"tns:MyType\" value=\"tns:myValue\"/> </constrainedBy> </constrained> </type>",
      "ja": "<タイプ> <拘束タイプ= \"asnx：OCTET-STRING\"> <constrainedBy> <注釈>含む値</注釈>のハッシュ<valueParameterタイプ= \"TNS：がMyType\" 値= \"TNS：myValue\" /> < / constrainedBy> </拘束> </タイプ>"
    },
    {
      "indent": 0,
      "text": "6.13.3. TableConstraint Translation",
      "section_title": true,
      "ja": "6.13.3.  TableConstraint翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a TableConstraint that is a SimpleTableConstraint is an element item with the [local name] \"table\". The translation of the ObjectSet in the SimpleTableConstraint SHALL be added to the [children] or [attributes] of the <table> element item.",
      "ja": "SimpleTableConstraintあるTableConstraintの翻訳は、[ローカル名「テーブル」の要素項目です。 SimpleTableConstraintでobjectSetとの翻訳は、[子供]または<table>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of a TableConstraint that is a ComponentRelationConstraint is an element item with the [local name] \"table\". The translation of the DefinedObjectSet in the",
      "ja": "ComponentRelationConstraintあるTableConstraintの翻訳は、[ローカル名「テーブル」の要素項目です。中DefinedObjectSetの翻訳"
    },
    {
      "indent": 3,
      "text": "ComponentRelationConstraint SHALL be added to the [children] or [attributes] of the <table> element item. The translation of each AtNotation in the ComponentRelationConstraint SHALL be appended to the [children] of the <table> element item.",
      "ja": "ComponentRelationConstraintは、[子供]または<table>要素項目の[属性]に追加されるものとします。 ComponentRelationConstraint各AtNotationの翻訳は、<table>要素項目の[子供]を添付しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The translation of an AtNotation is an element item with the [local name] \"restrictBy\". The [children] property of the <restrictBy> element item is set to the sequence of character items for the character string formed by the concatenation of zero, one, or more \"../\" strings, one for each Level in the AtNotation (including the empty one), followed by a solidus ('/', U+002F) separated list of qualified names for the expanded names of the NamedType instances [RXEREI] identified by the identifiers in the ComponentIdList in the AtNotation. If a NamedType is subject to an ATTRIBUTE or ATTRIBUTE-REF encoding instruction, or subject to a COMPONENT-REF encoding instruction that references a top-level NamedType that is subject to an ATTRIBUTE encoding instruction, then the qualified name for the expanded name is prefixed with the commercial at character ('@', U+0040). Leading and/or trailing white space character items MAY be added to the [children] of the <restrictBy> element item. White space character items MAY be added immediately before and/or after any character item for the solidus character ('/', U+002F).",
      "ja": "AtNotationの翻訳は、[ローカル名]「restrictBy」を持つ要素項目です。 <restrictBy>要素項目の[子供]プロパティはAtNotationの各レベル（ゼロ、1、または複数の連結「../」列、いずれかによって形成された文字列の文字項目の配列に設定されています固相に続いて、空のもの）、など（「/」、U + 002F）はAtNotationでComponentIdList中の識別子によって識別されるNamedTypeインスタンス[RXEREI]の拡張名の修飾名のリストを分離しました。 NamedType属性エンコード命令の対象となる最上位NamedTypeを参照部品REF符号化命令に属性または属性REF符号化命令、または対象の対象である場合、拡張名の修飾名が付けられ文字（ '@'、U + 0040）で、商業と。大手および/または空白文字アイテムを末尾の<restrictBy>要素項目の[子供]に添加してもよいです。ホワイトスペース文字項目の前および/または固相線文字（「/」、U + 002F）のための任意の文字項目の直後に追加される場合があります。"
    },
    {
      "indent": 3,
      "text": "Examples",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "ERROR.&Type({Errors}{@severity,@...errorId})",
      "ja": "ERROR。＆タイプ（{エラー} {@重症度、@ ... errorIDの}）"
    },
    {
      "indent": 6,
      "text": "<type> <constrained> <type> <fromClass class=\"tns:ERROR\" fieldName=\"Type\"/> </type> <table objectset=\"tns:Errors\"> <restrictBy>severity</restrictBy> <restrictBy>../../../errorId</restrictBy> </table> </constrained> </type>",
      "ja": "<タイプ> <拘束> <タイプ> <fromClassクラス= \"TNS：ERROR\" フィールド名= \"タイプ\" /> </タイプ> <表objectSetと= \"TNS：エラー\"> <restrictBy>重症度</ restrictBy> <restrictBy> ../../../ errorIDの</ restrictBy> </ TABLE> </拘束> </タイプ>"
    },
    {
      "indent": 6,
      "text": "SEQUENCE { id-att [RXER:NAME AS \"ID\"] [RXER:ATTRIBUTE] TYPE-IDENTIFIER.&id({AllTypes}), value TYPE-IDENTIFIER.&Type({AllTypes}{@id-att}) }",
      "ja": "SEQUENCE {ID-ATT [RXER：名として \"ID\"]。[RXER：ATTRIBUTE]タイプ識別子＆ID（{AllTypes}）、値型識別子＆タイプ（{AllTypes} {@ ID-ATT}）}"
    },
    {
      "indent": 6,
      "text": "<type> <sequence> <attribute name=\"ID\" identifier=\"id-att\">",
      "ja": "<タイプ> <シーケンス>、<属性名= \"ID\" 識別子= \"ID-ATT\">"
    },
    {
      "indent": 6,
      "text": " <type> <constrained> <type> <fromClass class=\"asnx:TYPE-IDENTIFIER\" fieldName=\"id\"/> </type> <table objectset=\"tns:AllTypes\"/> </constrained> </type> </attribute> <element name=\"value\"> <type> <constrained> <type> <fromClass class=\"asnx:TYPE-IDENTIFIER\" fieldName=\"Type\"/> </type> <table objectset=\"tns:AllTypes\"> <restrictBy>@ID</restrictBy> </table> </constrained> </type> </element> </sequence> </type>",
      "ja": "<タイプ> <拘束> <タイプ> <fromClassクラス= \"asnx：TYPE-識別子\" フィールド名= \"ID\" /> </タイプ> <表objectSetと= \"TNS：AllTypes\" /> </拘束> </タイプ> </属性> <要素名= \"値\"> <タイプ> <拘束> <タイプ> <fromClassクラス= \"asnx：TYPE-識別子\" フィールド名= \"タイプ\" /> </ type>の<表objectSetと= \"TNS： AllTypes \"> <restrictBy> @ID </ restrictBy> </ TABLE> </拘束> </タイプ> </要素> </配列> </タイプ>"
    },
    {
      "indent": 3,
      "text": "The <restrictBy> element item is required to be self-contained [RXER].",
      "ja": "<restrictBy>要素項目は自己完結[RXER]であることが必要です。"
    },
    {
      "indent": 6,
      "text": "Aside: An element item is self-contained if all namespace prefixes used by the element item and its contents are declared within the element item.",
      "ja": "脇：要素項目とその内容によって使用されるすべての名前空間接頭辞を要素項目内で宣言されている場合は要素項目は自己完結型です。"
    },
    {
      "indent": 0,
      "text": "6.13.4. ContentsConstraint Translation",
      "section_title": true,
      "ja": "6.13.4.  ContentsConstraint翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a ContentsConstraint is an element item with the [local name] \"contents\".",
      "ja": "ContentsConstraintの翻訳は、[ローカル名「コンテンツ」の要素項目です。"
    },
    {
      "indent": 3,
      "text": "If the ContentsConstraint is of the \"CONTAINING Type\" form, then an element item with the [local name] \"containing\" SHALL be added to the [children] of the <contents> element item. The translation of the Type SHALL be added to the [children] or [attributes] of the <containing> element item.",
      "ja": "ContentsConstraintが「包含型」形態である場合、[ローカル名]を持つ要素の項目は、[子供]に追加することがSHALL「を含む」<コンテンツ>要素項目の。タイプの翻訳は、[子供]または<含む>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "If the ContentsConstraint is of the \"ENCODED BY Value\" form, then an element item with the [local name] \"encodedBy\" SHALL be added to the [children] of the <contents> element item. The translation of the Value SHALL be added to the [children] or [attributes] of the <encodedBy> element item.",
      "ja": "ContentsConstraintが「符号化された値BY」形式である場合は、[ローカル名]を持つ要素項目が「encodedByは」<コンテンツ>要素項目の[子供]に追加することがSHALL。値の翻訳は、[子供]または<encodedBy>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "If the ContentsConstraint is of the \"CONTAINING Type ENCODED BY Value\" form, then an element item with the [local name] \"containing\" and an element item with the [local name] \"encodedBy\" SHALL be added to the [children] of the <contents> element item. The translation of the Type SHALL be added to the [children] or [attributes] of the <containing> element item. The translation of the Value SHALL be added to the [children] or [attributes] of the <encodedBy> element item.",
      "ja": "ContentsConstraintは「値によってコードされる包含型」フォーム、[ローカル名]とその要素項目「含む」および[ローカル名]を持つ要素項目である場合、「encodedByは」[子供]に追加されるものとの<内容>要素項目。タイプの翻訳は、[子供]または<含む>要素項目の[属性]に追加されるものとします。値の翻訳は、[子供]または<encodedBy>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "OCTET STRING (CONTAINING MyType ENCODED BY { joint-iso-itu-t asn1(1) basic-encoding(1) })",
      "ja": "（がMyType ENCODED BY {関節イソITU-TのASN1を（1）基本的な符号化（1）}含有する）オクテットSTRING"
    },
    {
      "indent": 6,
      "text": "<type> <constrained type=\"asnx:OCTET-STRING\"> <contents> <containing type=\"tns:MyType\"/> <encodedBy literalValue=\"2.1.1\"/> </contents> </constrained> </type>",
      "ja": "<タイプ> <拘束タイプ= \"asnx：OCTET-STRING\"> <内容> <含むタイプ= \"TNS：がMyType\" /> <encodedBy literalValue = \"2.1.1\" /> </内容> </拘束> </タイプ>"
    },
    {
      "indent": 0,
      "text": "6.13.5. ExceptionSpec Translation",
      "section_title": true,
      "ja": "6.13.5.  ExceptionSpec翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an empty ExceptionSpec is empty.",
      "ja": "空ExceptionSpecの翻訳は空です。"
    },
    {
      "indent": 3,
      "text": "The translation of a non-empty ExceptionSpec is an element item with the [local name] \"exception\".",
      "ja": "非空ExceptionSpecの翻訳は、[ローカル名「例外」を持つ要素項目です。"
    },
    {
      "indent": 3,
      "text": "If the ExceptionIdentification in a non-empty ExceptionSpec is a SignedNumber, then the translation of a notional INTEGER Type SHALL be added to the [children] or [attributes] of the <exception> element item, and the translation of a notional Value of the INTEGER type with the SignedNumber as its IntegerValue SHALL be added to the [children] or [attributes] of the <exception> element item.",
      "ja": "空でないExceptionSpecでExceptionIdentificationがSignedNumberある場合、概念的整数型の変換は、<例外>要素の項目、および想定価値の翻訳の[子供]または[属性]に追加することがSHALLそのするIntegerValueとしてSignedNumberとINTEGER型は[子供]または<例外>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "If the ExceptionIdentification in a non-empty ExceptionSpec is a DefinedValue, then the translation of a notional INTEGER Type SHALL be added to the [children] or [attributes] of the <exception> element item, and the translation of the DefinedValue SHALL be added to the [children] or [attributes] of the <exception> element item.",
      "ja": "空でないExceptionSpecでExceptionIdentificationがDefinedValueある場合、概念的整数型の変換は、<例外>要素項目の[子供]または[属性]に追加されるものとし、DefinedValueの翻訳を追加することがSHALL [子供]または<例外>要素項目の[属性]へ。"
    },
    {
      "indent": 3,
      "text": "If the ExceptionIdentification in a non-empty ExceptionSpec is of the \"Type : Value\" form, then the translation of the Type SHALL be added to the [children] or [attributes] of the <exception> element item, and the translation of the Value SHALL be added to the [children] or [attributes] of the <exception> element item.",
      "ja": "空でないExceptionSpecでExceptionIdentificationが「タイプ：値」である場合、フォームは、タイプの翻訳は、<例外>要素項目、および翻訳の[子供]または[属性]に追加されるものとする（SHALL）値は[子供]または<例外>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "Examples",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "!10",
      "ja": "！１０"
    },
    {
      "indent": 6,
      "text": "<exception type=\"asnx:INTEGER\" literalValue=\"10\"/>",
      "ja": "<例外タイプ= \"asnx：INTEGER\" literalValue = \"10\" />"
    },
    {
      "indent": 6,
      "text": "!myValue",
      "ja": "！myValue"
    },
    {
      "indent": 6,
      "text": "<exception type=\"asnx:INTEGER\" value=\"tns:myValue\"/>",
      "ja": "<例外タイプ= \"asnx：INTEGER\" 値= \"TNS：myValue\" />"
    },
    {
      "indent": 6,
      "text": "!PrintableString:\"failure\"",
      "ja": "！はPrintableString： \"失敗\""
    },
    {
      "indent": 6,
      "text": "<exception type=\"asnx:PrintableString\" literalValue=\"failure\"/>",
      "ja": "<例外タイプ= \"asnx：PrintableStringの\" literalValue = \"失敗\" />"
    },
    {
      "indent": 0,
      "text": "7. Translation of Values",
      "section_title": true,
      "ja": "値の7翻訳"
    },
    {
      "indent": 3,
      "text": "A Value in an ASN.1 specification is a mix of literal values (e.g., numbers and character strings) and notations for referencing defined values. Likewise, the ASN.X translation of a Value is a mix of markup for literal values and markup for referencing notations (notational values). A Value is categorized by the following definitions.",
      "ja": "ASN.1仕様の値が定義された値を参照するリテラル値（例えば、数値や文字列）と表記の組み合わせです。同様に、値のASN.X翻訳はリテラル値と表記（表記の値）を参照するためのマークアップのためのマークアップのミックスがあります。値は以下の定義によって分類されます。"
    },
    {
      "indent": 3,
      "text": "Definition (literal value): A Value is a literal value if and only if it is not a notational value.",
      "ja": "定義（リテラル値）：値があれば、リテラル値であり、それは表記値でない場合のみ。"
    },
    {
      "indent": 3,
      "text": "Definition (notational value): A Value is a notational value if and only if:",
      "ja": "定義（表記値）：値は表記値の場合に限りです。"
    },
    {
      "indent": 3,
      "text": "(1) the Value is a BuiltinValue, and",
      "ja": "（1）値はBuiltinValueであり、そして"
    },
    {
      "indent": 7,
      "text": "(a) the BuiltinValue is a TaggedValue and the Value in the\n    TaggedValue is a notational value, or",
      "raw": true
    },
    {
      "indent": 7,
      "text": "(b) the BuiltinValue is a SequenceValue or SetValue with a ComponentValueList that contains a NamedValue where the Value in the NamedValue is a notational value and the translation of the corresponding NamedType (from the governing type of the outer Value) is not an <element> or <component> element item, or",
      "ja": "（B）はBuiltinValueのNamedValueの値が表記値であり、対応するNamedType（外部値の支配型から）の翻訳は、<要素>ないのNamedValueを含んComponentValueListとSequenceValueまたは値の代入でありますまたは<component>要素の項目、又は"
    },
    {
      "indent": 7,
      "text": "(c) the BuiltinValue is a ChoiceValue where the Value of the ChoiceValue is a notational value and the translation of the NamedType corresponding to the identifier in the ChoiceValue is not an <element> or <component> element item, or",
      "ja": "（C）BuiltinValueはChoiceValueの値が表記値であり、ChoiceValueに識別子に対応NamedTypeの翻訳<要素>または<component>要素の項目ではない、またはChoiceValueあります"
    },
    {
      "indent": 7,
      "text": "(d) the BuiltinValue is a SequenceOfValue or SetOfValue with a NamedValueList that contains a NamedValue where the Value of the NamedValue is a notational value and the translation of the corresponding NamedType (from the governing type of the outer Value) is not an <element> or <component> element item, or",
      "ja": "（D）はBuiltinValueのNamedValueの値は表記の値であり、対応するNamedType（外部値の支配型から）の翻訳は、<要素>ないのNamedValueを含んNamedValueListとSequenceOfValue又はSetOfValueありますまたは<component>要素の項目、又は"
    },
    {
      "indent": 3,
      "text": "(2) the Value is a ReferencedValue, and",
      "ja": "（2）値はReferencedValueであり、そして"
    },
    {
      "indent": 7,
      "text": "(a) the ReferencedValue is a ValueFromObject, or",
      "ja": "（A）ReferencedValueはValueFromObjectであり、又は"
    },
    {
      "indent": 7,
      "text": "(b) the ReferencedValue is a DefinedValue, and",
      "ja": "（B）ReferencedValueはDefinedValueであり、そして"
    },
    {
      "indent": 11,
      "text": "(i)   the DefinedValue is a valuereference (not a\n      DummyReference) or an ExternalValueReference, or",
      "raw": true
    },
    {
      "indent": 11,
      "text": "(ii) the DefinedValue is a DummyReference or ParameterizedValue and the substitute definition for the DummyReference or ParameterizedValue (see Section 13) is a notational value, or",
      "ja": "（II）DefinedValueは表記値DummyReference又はParameterizedValue及びDummyReference又はParameterizedValue（セクション13を参照）の代替定義され、又は"
    },
    {
      "indent": 11,
      "text": "(iii) the DefinedValue is a DummyReference or ParameterizedValue where the translation of the DummyReference or ParameterizedValue will use a fully expanded reference (see Section 13), or",
      "ja": "（III）DefinedValueはDummyReference又はParameterizedValueの翻訳は（セクション13を参照）完全に拡張基準を使用するDummyReference又はParameterizedValueであり、又は"
    },
    {
      "indent": 3,
      "text": "(3) the Value is an ObjectClassFieldValue, and",
      "ja": "（3）の値がObjectClassFieldValueであり、そして"
    },
    {
      "indent": 7,
      "text": "(a) the ObjectClassFieldValue is an OpenTypeFieldVal, or",
      "ja": "（A）ObjectClassFieldValueはOpenTypeFieldValであり、又は"
    },
    {
      "indent": 7,
      "text": "(b) the ObjectClassFieldValue is a FixedTypeFieldVal, and",
      "ja": "（B）ObjectClassFieldValueはFixedTypeFieldValであり、そして"
    },
    {
      "indent": 11,
      "text": "(i)  the FixedTypeFieldVal is a BuiltinValue that satisfies\n     case (1), or",
      "raw": true
    },
    {
      "indent": 11,
      "text": "(ii) the FixedTypeFieldVal is a ReferencedValue that satisfies case (2).",
      "ja": "（II）FixedTypeFieldValは、ケース（2）を満たすReferencedValueあります。"
    },
    {
      "indent": 3,
      "text": "A literal value that is a BuiltinValue that is a SequenceValue, SetValue, ChoiceValue, SequenceOfValue, or SetOfValue MAY be translated as a notational value.",
      "ja": "SequenceValueあるBuiltinValueあるリテラル値は、値の代入、ChoiceValue、SequenceOfValue、またはSetOfValueは表記の値として変換されてもよいです。"
    },
    {
      "indent": 3,
      "text": "Definition (directly nested): A notational value is directly nested (within a literal value) if the innermost enclosing Value is a literal value.",
      "ja": "定義（直接ネストされた）：表記の値を直接最も内側の値は、リテラル値である場合（リテラル値内）にネストされています。"
    },
    {
      "indent": 0,
      "text": "7.1. Translation of Literal Values",
      "section_title": true,
      "ja": "7.1. リテラル値の翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a literal value is either the attribute form translation of a literal value, or the element form translation of a literal value.",
      "ja": "リテラル値の翻訳は、リテラル値の属性形式の変換、またはリテラル値の要素の形式の変換のいずれかです。"
    },
    {
      "indent": 3,
      "text": "The attribute form translation of a literal value is an attribute item with the [local name] \"literalValue\". The [normalized value] of this attribute item is the RXER character data translation [RXER] of the literal value.",
      "ja": "リテラル値の属性形式の変換は、[ローカル名]「literalValue」との属性項目です。この属性項目の[正規化された値] [RXER]リテラル値のRXER文字データの変換です。"
    },
    {
      "indent": 3,
      "text": "The attribute form translation of a literal value SHALL NOT be used if:",
      "ja": "リテラル値の属性の形式変換があれば使用してはなりません。"
    },
    {
      "indent": 3,
      "text": "(1) the RXER Infoset translation of the literal value is not a character data translation [RXER] or is a character data translation that contains qualified names [XMLNS10][XMLNS11], or",
      "ja": "（1）リテラル値のRXERインフォセット翻訳[RXER】文字データの変換でない場合、または修飾名[XMLNS10] [XMLNS11]を含む文字データの変換であり、又は"
    },
    {
      "indent": 3,
      "text": "(2) attribute form translations of Value have been explicitly disallowed in the context where the literal value appears, or",
      "ja": "（2）値の属性フォームの翻訳は、明示的にリテラル値が表示されたコンテキストで禁止されている、または"
    },
    {
      "indent": 3,
      "text": "(3) the literal value has a nested notational value.",
      "ja": "（3）リテラル値は、ネストされた表記の値を有します。"
    },
    {
      "indent": 3,
      "text": "The element form translation of a literal value is an element item with the [local name] \"literalValue\". The [children] and [attributes] of the <literalValue> element item are set to the RXER Infoset translation of the literal value, except that a value of the EXTERNAL type (or a subtype thereof) is translated according to the associated type defined in Clause 34.5 of X.680 [X.680]. In addition, where the [children] and [attributes] of an element item in the translation correspond to a directly nested notational value, the translation specified in Section 7.2 MUST be used for the [children] and [attributes] of that element item, and an attribute item with the [local name] \"literal\", [namespace name] \"urn:ietf:params:xml:ns:asnx\", and [normalized value] \"false\" or \"0\" (i.e., asnx:literal=\"false\") MUST be added to the [attributes] of that element item.",
      "ja": "リテラル値の要素の形式変換は、[ローカル名「literalValue」の要素項目です。 <literalValue>要素項目の[子供]と[属性] EXTERNALタイプ（またはそのサブタイプ）の値で定義された関連するタイプに応じて翻訳されることを除いて、リテラル値のRXERインフォセット変換に設定されていますX.680の条項34.5 [X.680]。訳[子供]および要素項目の[属性]が直接ネスト表記値に対応また、において、セクション7.2で指定された翻訳は、[子供]及びその要素項目の[属性]を使用しなければなりませんそして、[ローカル名] \"リテラル\"、[名前空間名]の属性項目 \"URN：IETFは：paramsは：XML：NS：asnx\"、および[正規化した値] \"偽\" または \"0\"（すなわち、asnx：リテラル=）「偽」は、その要素項目の[属性]に追加する必要があります。"
    },
    {
      "indent": 3,
      "text": "Each outermost <literalValue> element item is required to be self-contained [RXER].",
      "ja": "各最外<literalValue>要素項目は自己完結[RXER]であることが必要です。"
    },
    {
      "indent": 6,
      "text": "Aside: An element item is self-contained if all namespace prefixes used by the element item and its contents are declared within the element item.",
      "ja": "脇：要素項目とその内容によって使用されるすべての名前空間接頭辞を要素項目内で宣言されている場合は要素項目は自己完結型です。"
    },
    {
      "indent": 6,
      "text": "Aside: A <literalValue> element item nested within another <literalValue> element item is not required to be self-contained.",
      "ja": "脇：別の<literalValue>要素の項目内にネストされた<literalValue>要素項目は自己完結型である必要はありません。"
    },
    {
      "indent": 3,
      "text": "An attribute item with the [local name] \"literal\", [namespace name] \"urn:ietf:params:xml:ns:asnx\" and [normalized value] \"true\" or \"1\" (i.e., asnx:literal=\"true\") MAY be added to the [attributes] of the <literalValue> element item and/or any nested element item with content and attributes that correspond to a literal value.",
      "ja": "[ローカル名 \"リテラル\" の属性項目、[名前空間名 \"URN：IETF：paramsは：XML：NS：asnx\" および[正規化値 \"真\" または \"1\"（すなわち、asnx：リテラル=」真」）<literalValue>要素のアイテム及び/又はコンテンツ及びリテラル値に対応する属性を持つ任意のネストされた要素項目の[属性]に加えてもよいです。"
    },
    {
      "indent": 6,
      "text": "Aside: The asnx:literal attribute operates as a switch that indicates whether the content and other attributes of the element containing the attribute are interpreted as ASN.X notation (a notational value) or as an RXER encoding (a literal value).",
      "ja": "脇：asnx：リテラル属性は、属性を含む要素の内容及び他の属性はASN.X表記（表記値）として解釈されているかどうかを示すスイッチとして、またはRXERエンコード（リテラル値）として動作します。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "zero INTEGER ::= 0",
      "raw": true
    },
    {
      "indent": 6,
      "text": "<namedValue name=\"zero\" type=\"asnx:INTEGER\" literalValue=\"0\"/>",
      "ja": "<たNamedValue名= \"ゼロ\" タイプ= \"asnx：INTEGER\" literalValue = \"0\" />"
    },
    {
      "indent": 10,
      "text": "OR",
      "ja": "または"
    },
    {
      "indent": 6,
      "text": "<namedValue name=\"zero\" type=\"asnx:INTEGER\"> <literalValue>0</literalValue> </namedValue>",
      "ja": "<たNamedValue名= \"ゼロ\" タイプ= \"asnx：INTEGER\"> <literalValue> 0 </ literalValue> </のNamedValue>"
    },
    {
      "indent": 3,
      "text": "From the perspective of an ASN.X module as the RXER encoding of an ASN.1 value (an abstract value of the ModuleDefinition type in Appendix A), the type of the <literalValue> element is the unconstrained Markup type [RXER], not the governing type of the Value according to the ASN.1 specification. This means that the Infoset representation of the <literalValue> element must be preserved in re-encodings of the ASN.X module.",
      "ja": "ASN.1値（付録AでModuleDefinitionは型の抽象値）のRXERエンコーディングとしてASN.Xモジュールの観点から、<literalValue>要素のタイプは、[RXER】非拘束マークアップ型ではありませんASN.1仕様に応じた値の統治タイプ。これは、<literalValue>要素のインフォセット表現はASN.Xモジュールの再エンコーディングで保存されなければならないことを意味します。"
    },
    {
      "indent": 3,
      "text": "Similarly, the type of the literalValue attribute is a UTF8String, not the governing type of the Value according to the ASN.1 specification. This means that the exact characters of the [normalized value] of the attribute must be preserved in re-encodings of the ASN.X module.",
      "ja": "同様に、literalValue属性のタイプはUTF8Stringを、ないASN.1仕様に応じた値の支配型です。これは、属性の[正規化された値]の正確な文字がASN.Xモジュールの再エンコーディングで保存されなければならないことを意味します。"
    },
    {
      "indent": 0,
      "text": "7.2. Translation of Notational Values",
      "section_title": true,
      "ja": "7.2. 表記値の翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a notational value is the translation of the BuiltinValue, ReferencedValue, or ObjectClassFieldValue in the notational value.",
      "ja": "表記値の翻訳は表記値でBuiltinValue、ReferencedValue、またはObjectClassFieldValueの翻訳です。"
    },
    {
      "indent": 3,
      "text": "The translation of a ReferencedValue is the translation of the DefinedValue or ValueFromObject in the ReferencedValue.",
      "ja": "ReferencedValueの翻訳はReferencedValueでDefinedValueまたはValueFromObjectの翻訳です。"
    },
    {
      "indent": 3,
      "text": "The translation for each of these cases is described as creating an element item with the [local name] \"value\", which is appropriate for a notational value that stands on its own. However, a notational value may also be directly nested within a literal value, in which case the [local name] will be determined according to RXER and the governing ASN.1 type of the enclosing literal value.",
      "ja": "これらの場合の各々についての翻訳は、それ自身の上に立つ表記値のために適切である[ローカル名「値」を持つ要素のアイテムを作成するものとして説明されています。ただし、表記の値は、直接リテラル値内にネストされてもよく、その場合には、[ローカル名] RXER及び封入リテラル値の支配ASN.1の種類に応じて決定されるであろう。"
    },
    {
      "indent": 6,
      "text": "Aside: In the latter case, the element item will also have a literal attribute item with the [normalized value] \"false\" or \"0\".",
      "ja": "脇：後者の場合には、要素項目は、「偽」又は「0」[正規化された値]リテラル属性項目を有することになります。"
    },
    {
      "indent": 3,
      "text": "A notational value that is not directly nested within a literal value MAY instead have the [local name] \"literalValue\" provided an attribute item with the [local name] \"literal\", [namespace name] \"urn:ietf:params:xml:ns:asnx\", and [normalized value] \"false\" or \"0\" is added to the [attributes] of the <literalValue> element item.",
      "ja": "IETF：：のparams：xmlの直接リテラル値内にネストされていない表記値ではなく、[ローカル名]を持っているかもしれない「literalValueは、」[ローカル名]「リテラル」、[名前空間名]「壷の属性項目を提供します： NS：asnx」、および[正規化された値は、 『偽』又は 『0』 <literalValue>要素項目の[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "Examples",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "nothing INTEGER ::= zero",
      "raw": true
    },
    {
      "indent": 6,
      "text": "<namedValue name=\"nothing\" type=\"asnx:INTEGER\" value=\"tns:zero\"/>",
      "ja": "<のNamedValue名= \"何も\" タイプ= \"asnx：INTEGER\" 値= \"TNS：ゼロ\" />"
    },
    {
      "indent": 10,
      "text": "OR",
      "ja": "または"
    },
    {
      "indent": 6,
      "text": "<namedValue name=\"nothing\" type=\"asnx:INTEGER\"> <value ref=\"tns:zero\"/><!-- A notational value. --> </namedValue>",
      "ja": "<のNamedValue名= \"何も\" タイプ= \"asnx：INTEGER\"> <値ref = \"TNS：ゼロ\" /> < - 表記値！。 - > </のNamedValue>"
    },
    {
      "indent": 10,
      "text": "OR",
      "ja": "または"
    },
    {
      "indent": 6,
      "text": "<namedValue name=\"nothing\" type=\"asnx:INTEGER\"> <literalValue xmlns:asnx=\"urn:ietf:params:xml:ns:asnx\" xmlns:tns=\"http://example.com/ns/MyModule\" asnx:literal=\"false\" ref=\"tns:zero\"/><!-- A notational value. --> </namedValue>",
      "ja": "<のNamedValue名= \"何も\" タイプ= \"asnx：INTEGER\"> <literalValueのxmlns：asnx = \"壷：IETF：のparams：XML：NS：asnx\" のxmlns：TNS = \"http://example.com/ns/MyModule \"asnx：リテラル=\" false」をREF = \"TNS：！ゼロ\" /> < - 表記値。 - > </のNamedValue>"
    },
    {
      "indent": 6,
      "text": "integerList SEQUENCE OF number INTEGER ::= { zero, 3, 7 }",
      "raw": true
    },
    {
      "indent": 6,
      "text": "<namedValue name=\"integerList\"> <type> <sequenceOf> <element name=\"number\" type=\"asnx:INTEGER\"/> </sequenceOf> </type> <literalValue xmlns:asnx=\"urn:ietf:params:xml:ns:asnx\" xmlns:tns=\"http://example.com/ns/MyModule\"> <number asnx:literal=\"false\"",
      "ja": "<たNamedValue名= \"integerList\"> <タイプ> <sequenceOf> <要素名= \"番号\" タイプ= \"asnx：INTEGER\" /> </ sequenceOf> </タイプ> <literalValue用のxmlns：asnx = \"URN：IETF：paramsは：XML：NS：asnx」のxmlns：TNS = \"http://example.com/ns/MyModule\"> <番号asnx：リテラル= \"false\" に"
    },
    {
      "indent": 6,
      "text": " ref=\"tns:zero\"/><!-- A notational value. --> <number>3</number><!-- A literal value. --> <number>7</number><!-- A literal value. --> </literalValue> </namedValue>",
      "ja": "REF = \"TNS：ゼロ\"！/> < - 表記値。 - > <数> 3 </番号> <！ - リテラル値。 - > <数> 7 </番号> <！ - リテラル値。 - > </ literalValue> </のNamedValue>"
    },
    {
      "indent": 0,
      "text": "7.2.1. DefinedValue Translation",
      "section_title": true,
      "ja": "7.2.1.  DefinedValue翻訳"
    },
    {
      "indent": 3,
      "text": "If a DefinedValue is a valuereference (not a DummyReference) or an ExternalValueReference, then the translation of the DefinedValue is either the attribute form translation of a value reference, or the element form translation of a value reference.",
      "ja": "DefinedValueはvaluereference（ないDummyReference）またはExternalValueReferenceある場合、DefinedValueの翻訳は、値参照の属性形式の変換、または値参照の要素フォーム翻訳のいずれかです。"
    },
    {
      "indent": 3,
      "text": "The attribute form translation of a value reference is an attribute item with the [local name] \"value\". The [normalized value] of this attribute item is a qualified name for the expanded name of the referenced value definition (see Section 5.1). The attribute form translation SHALL NOT be used if this expanded name is not distinct with respect to the current module and the modules referenced by its <import> element items (see Section 5.1).",
      "ja": "値基準の属性形式の変換は、[ローカル名]「値」を持つ属性項目です。この属性項目の[正規化された値は、（セクション5.1を参照）、参照値の定義の拡張名の修飾名です。この拡張名は、現在のモジュールに対して、その<インポート>要素のアイテムによって参照されるモジュールと別個でない場合、属性の形式変換を使用してはならない（セクション5.1を参照）。"
    },
    {
      "indent": 3,
      "text": "The element form translation of a value reference is an element item with the [local name] \"value\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <value> element item. An attribute item with the [local name] \"ref\" SHALL be added to the [attributes] of the <value> element item. The [normalized value] of this attribute item is a qualified name for the expanded name of the referenced value definition. If this expanded name is not distinct with respect to the current module and the modules referenced by its <import> element items, then an attribute item with the [local name] \"context\" SHALL be added to the [attributes] of the <value> element item; otherwise, if the module containing the referenced value definition has a schema identity URI, then an attribute item with the [local name] \"context\" MAY be added to the [attributes] of the <value> element item. The [normalized value] of this attribute item is the schema identity URI of the module containing the value definition referenced by the DefinedValue.",
      "ja": "値基準の要素フォーム翻訳は[ローカル名「値」を持つ要素項目です。 [ローカル名]「注釈」を持つ要素項目は、<value>の要素項目の[子供]に添加してもよいです。 [ローカル名]の属性項目は、「refは」<value>の要素項目の[属性]に追加されるものとします。この属性項目の[正規化された値]は、参照値の定義の拡張名の修飾名です。この拡張名は、現在のモジュールとその<インポート>要素のアイテムによって参照されるモジュールに対して明確でない場合は、[ローカル名「コンテキスト」の属性項目は、<値の[属性]に追加することがSHALL >要素の項目、参照値の定義を含むモジュールが、スキーマ同一URIを持つ場合そうでない場合は、次に[ローカル名「コンテキスト」の属性項目は、<値>要素項目の[属性]に加えてもよいです。この属性項目の[正規化値] DefinedValueによって参照される値の定義を含むモジュールのスキーマ同一URIです。"
    },
    {
      "indent": 6,
      "text": "Aside: If a reference name is not distinct, then the module containing the referenced definition must have a schema identity URI (see Section 5.1).",
      "ja": "脇：参照名が明瞭でない場合は、参照先の定義を含むモジュールは、スキーマのアイデンティティURIを（5.1節を参照）を持っている必要があります。"
    },
    {
      "indent": 3,
      "text": "Usually the translator is free to choose either an attribute form or element form translation for a DefinedValue; however, in some contexts attribute forms of Value are explicitly disallowed. In particular, the attribute form translation SHALL NOT be used for a DefinedValue in a ReferencedValue in a Value that is directly nested in a literal value.",
      "ja": "通常、翻訳者は、属性フォームまたはDefinedValueための要素フォーム翻訳のいずれかを選択する自由です。しかし、いくつかの状況で値の型が明示的に禁止されている属性。具体的には、属性形式の変換は直接リテラル値にネストされている値にReferencedValueにDefinedValueに使用してはなりません。"
    },
    {
      "indent": 3,
      "text": "If a DefinedValue is a DummyReference or ParameterizedValue, then the translation of the DefinedValue is the translation of that DummyReference or ParameterizedValue (see Section 13).",
      "ja": "DefinedValueがDummyReferenceまたはParameterizedValueであれば、DefinedValueの翻訳は、そのDummyReferenceまたはParameterizedValue（セクション13を参照）の翻訳です。"
    },
    {
      "indent": 0,
      "text": "7.2.2. BuiltinValue Translation",
      "section_title": true,
      "ja": "7.2.2.  BuiltinValue翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a BuiltinValue is the translation of the ChoiceValue, SequenceValue, SetValue, SequenceOfValue, SetOfValue, or TaggedValue in the BuiltinValue.",
      "ja": "BuiltinValueの翻訳はBuiltinValueでChoiceValue、SequenceValue、値の代入、SequenceOfValue、SetOfValue、またはタグ付きの翻訳です。"
    },
    {
      "indent": 6,
      "text": "Aside: There are other possibilities for a BuiltinValue, but these will all be literal values. This section applies to a BuiltinValue that is a notational value.",
      "ja": "脇：BuiltinValueのための他の可能性がありますが、これらはすべてのリテラル値になります。このセクションでは、表記の値ですBuiltinValueに適用されます。"
    },
    {
      "indent": 3,
      "text": "The translation of a TaggedValue is the translation of the Value in the TaggedValue (which is necessarily a notational value).",
      "ja": "タグ付きの翻訳は（必ずしも表記の値である）タグ付きで価値の翻訳です。"
    },
    {
      "indent": 3,
      "text": "The translation of a ChoiceValue is an element item with the [local name] \"value\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <value> element item. An element item with the same [local name] (i.e., \"attribute\", \"element\", \"component\", \"group\", or \"member\") as the translation of the NamedType corresponding to the identifier in the ChoiceValue SHALL be appended to the [children] of the <value> element item. An attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the <attribute>, <element>, <component>, <group>, or <member> element item. The [normalized value] of this attribute item is a qualified name for the expanded name of the NamedType. The translation of the Value in the ChoiceValue SHALL be added to the [children] or [attributes] of the <attribute>, <element>, <component>, <group>, or <member> element item.",
      "ja": "ChoiceValueの翻訳は、[ローカル名「値」を持つ要素項目です。 [ローカル名]「注釈」を持つ要素項目は、<value>の要素項目の[子供]に添加してもよいです。同じ[ローカル名]（すなわち、「属性」、「要素」、「コンポーネント」、「グループ」、または「メンバー」）を持つ要素項目ChoiceValueに識別子に対応NamedTypeの翻訳は、添付されるとおりでなければなりません<値>要素項目の[子供]へ。 [ローカル名]の属性項目は「名前」は、<属性>、<要素>、<成分>、<グループ>、または<メンバー>要素項目の[属性]に追加されるものとします。この属性項目の[正規化値] NamedTypeの拡張名の修飾名です。 ChoiceValueにおける値の翻訳は、[子供]または<属性>、<要素>、<成分>、<グループ>の[属性]、または<メンバー>要素の項目に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of a SequenceValue or SetValue is an element item with the [local name] \"value\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <value> element item. If the SequenceValue or SetValue has a ComponentValueList, then the translation of each NamedValue nested in the ComponentValueList SHALL be appended to the [children] of the <value> element item in the order in which their corresponding NamedType instances appear in the definition of the governing type.",
      "ja": "SequenceValue又は値の代入の翻訳は、[ローカル名「値」を持つ要素項目です。 [ローカル名]「注釈」を持つ要素項目は、<value>の要素項目の[子供]に添加してもよいです。 SequenceValueまたは値の代入はComponentValueListを有する場合、次いでComponentValueListにネストそれぞれのNamedValueの翻訳は、それらの対応するNamedTypeインスタンスが支配の定義に現れる順序で、<値>要素項目の[子供]に追加することがSHALLタイプ。"
    },
    {
      "indent": 3,
      "text": "The translation of a SequenceOfValue or SetOfValue is an element item with the [local name] \"value\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <value> element item.",
      "ja": "SequenceOfValue又はSetOfValueの翻訳は、[ローカル名「値」を持つ要素項目です。 [ローカル名]「注釈」を持つ要素項目は、<value>の要素項目の[子供]に添加してもよいです。"
    },
    {
      "indent": 3,
      "text": "If the SequenceOfValue or SetOfValue has a NamedValueList, then the translation of each NamedValue nested in the NamedValueList SHALL be appended to the [children] of the <value> element item.",
      "ja": "SequenceOfValue又はSetOfValueはNamedValueListを有する場合、次いでNamedValueListにネストそれぞれのNamedValueの翻訳は、<値>要素項目の[子供]を添付しなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the SequenceOfValue or SetOfValue has a ValueList, then an element item with the same [local name] (i.e., \"element\" or \"component\") as the element item in the [children] of the <sequenceOf> or <setOf> element item in the translation of the governing type SHALL be appended to the [children] of the <value> element item for each Value nested in the ValueList. An attribute item with the [local name] \"name\" and [normalized value] \"item\" SHALL be added to the [attributes] of the <element> or <component> element item. The translation of the Value (from the ValueList) SHALL be added to the [children] or [attributes] of the <element> or <component> element item.",
      "ja": "もしSequenceOfValue又はSetOfValueのValueList、同じ[ローカル名]とその要素のアイテム<sequenceOf>または<SETOF>要素の[子供]の要素項目として（すなわち、「要素」または「成分」）を有します支配型の翻訳の項目は、ValueListの中にネストされた各値は、<値>要素項目の[子供]を添付しなければなりません。 [ローカル名「名前」および[正規化された値]の属性項目は「項目」は、<要素>または<component>要素項目の[属性]に追加されるものとします。 （ValueListのからの）値の翻訳は、[子供]または<要素>または<component>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of a NamedValue is an element item with the same [local name] as the translation of the corresponding NamedType, i.e., \"attribute\", \"element\", \"component\", \"group\", \"item\", or \"simpleContent\". An attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the element item. The [normalized value] of this attribute item is a qualified name for the expanded name of the NamedType. The translation of the Value in the NamedValue SHALL be added to the [children] or [attributes] of the element item.",
      "ja": "NamedValueの翻訳は、対応NamedTypeの翻訳、すなわち、「属性」、「要素」、「コンポーネント」、「グループ」、「項目」、または「simpleContentに」と同じ[ローカル名]を持つ要素項目であります。 [ローカル名]「名」の属性項目は、要素項目の[属性]に追加されるものとします。この属性項目の[正規化値] NamedTypeの拡張名の修飾名です。 NamedValueにおける価値の翻訳は、[子供]または要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "Examples",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "-- This is the governing type.\nMyType ::= SEQUENCE {\n     one    [ATTRIBUTE] INTEGER,\n     two    INTEGER,\n     three  [ATTRIBUTE][LIST] SEQUENCE OF number INTEGER\n}",
      "raw": true
    },
    {
      "indent": 6,
      "text": "<namedType name=\"MyType\"> <type> <sequence> <attribute name=\"one\" type=\"asnx:INTEGER\"/> <element name=\"two\" type=\"asnx:INTEGER\"/> <attribute name=\"three\"> <type> <list>",
      "ja": "<namedType名= \"がMyType\"> <タイプ> <シーケンス>、<属性名= \"1\" タイプ= \"asnx：INTEGER\" /> <要素名= \"2\" タイプ= \"asnx：INTEGER\" /> <属性名= \"3\"> <タイプ> <リスト>"
    },
    {
      "indent": 6,
      "text": " <item name=\"number\" type=\"asnx:INTEGER\"/> </list> </type> </attribute> </sequence> </type> </namedType>",
      "ja": "<項目名= \"番号\" タイプ= \"asnx：INTEGER\" /> </リスト> </タイプ> </属性> </シーケンス> </タイプ> </ namedType>"
    },
    {
      "indent": 6,
      "text": "myValue1 MyType ::= {\n    one     456,\n    two     123,\n    three   { number 123, number 456 }\n}\n-- All literal values.",
      "raw": true
    },
    {
      "indent": 6,
      "text": "<namedValue name=\"myValue1\" type=\"tns:MyType\"> <literalValue one=\"456\" three=\"123 456\"> <two>123</two> </literalValue> </namedValue>",
      "ja": "<たNamedValue名= \"myValue1\" タイプ= \"TNS：がMyType\"> <literalValue 1 = \"456\" 三= \"123 456\"> <2> 123 </ 2> </ literalValue> </のNamedValue>"
    },
    {
      "indent": 6,
      "text": "myValue2 MyType ::= {\n    one     456,\n    two     myObject.&number,\n      -- only the value for component \"two\" is a notational value\n    three   { number 123, number 456 }\n}",
      "raw": true
    },
    {
      "indent": 6,
      "text": "<namedValue name=\"myValue2\" type=\"tns:MyType\"> <literalValue xmlns:asnx=\"urn:ietf:params:xml:ns:asnx\" xmlns:tns=\"http://example.com/ns/MyModule\" one=\"456\" three=\"123 456\"> <two asnx:literal=\"false\"> <fromObjects object=\"tns:myObject\" fieldName=\"number\"/> </two> </literalValue> </namedValue>",
      "ja": "<のNamedValue名= \"myValue2\" タイプ= \"TNS：がMyType\"> <literalValueのxmlns：asnx = \"壷：IETF：のparams：XML：NS：asnx\" のxmlns：TNS = \"http://example.com/ns/MyModule \"一=\" 456\" 三= \"123 456\"> <2 asnx：リテラル= \"偽\"> <fromObjectsオブジェクト= \"TNS：myObjectという\" フィールド名= \"数\" /> </ 2> </ literalValue> </のNamedValue >"
    },
    {
      "indent": 6,
      "text": "myValue3 MyType ::= {\n    one     myObject.&number,\n    two     123,\n    three   { number 123, number myObject.&number }\n}",
      "raw": true
    },
    {
      "indent": 6,
      "text": "<namedValue name=\"myValue3\" type=\"tns:MyType\"> <value> <attribute name=\"one\"> <value>",
      "ja": "<のNamedValue名= \"myValue3\" タイプ= \"TNS：がMyType\"> <値> <属性名= \"1\"> <値>"
    },
    {
      "indent": 6,
      "text": " <fromObjects object=\"tns:myObject\" fieldName=\"number\"/> </value> </attribute> <element name=\"two\" literalValue=\"123\"/> <attribute name=\"three\"> <value> <item name=\"number\" literalValue=\"123\"/> <item name=\"number\"> <value> <fromObjects object=\"tns:myObject\" fieldName=\"number\"/> </value> </item> </value> </attribute> </value> </namedValue>",
      "ja": "<fromObjectsオブジェクト= \"TNS：myObjectという\" フィールド名= \"数\" /> </ value>の</属性> <要素名= \"2\" literalValue = \"123\" /> <属性名= \"3\"> <値> <項目名= \"番号\" literalValue = \"123\" /> <項目名= \"番号\"> <値> <fromObjectsオブジェクト= \"TNS：myObjectという\" フィールド名= \"数\" /> </ value>の</商品> </値> </属性> </ value>の</のNamedValue>"
    },
    {
      "indent": 0,
      "text": "7.2.3. ValueFromObject Translation",
      "section_title": true,
      "ja": "7.2.3.  ValueFromObject翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a ValueFromObject is an element item with the [local name] \"value\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <value> element item. An element item with the [local name] \"fromObjects\" SHALL be appended to the [children] of the <value> element item.",
      "ja": "ValueFromObjectの翻訳は、[ローカル名「値」を持つ要素項目です。 [ローカル名]「注釈」を持つ要素項目は、<value>の要素項目の[子供]に添加してもよいです。 [ローカル名「fromObjects」の要素アイテムは、<値>要素項目の[子供]を添付しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The translation of the ReferencedObjects instance in the ValueFromObject SHALL be added to the [children] or [attributes] of the <fromObjects> element item.",
      "ja": "ValueFromObjectでReferencedObjectsインスタンスの変換は、[子供]または<fromObjects>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of the FieldName in the ValueFromObject SHALL be added to the [children] or [attributes] of the <fromObjects> element item.",
      "ja": "ValueFromObjectでのフィールド名の翻訳は、[子供]または<fromObjects>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 0,
      "text": "7.2.4. ObjectClassFieldValue Translation",
      "section_title": true,
      "ja": "7.2.4.  ObjectClassFieldValue翻訳"
    },
    {
      "indent": 3,
      "text": "If an ObjectClassFieldValue is a BuiltinValue in a FixedTypeFieldVal, then the translation of the ObjectClassFieldValue is the translation of the BuiltinValue.",
      "ja": "ObjectClassFieldValueはFixedTypeFieldValでBuiltinValueであれば、ObjectClassFieldValueの翻訳はBuiltinValueの翻訳です。"
    },
    {
      "indent": 3,
      "text": "If an ObjectClassFieldValue is a ReferencedValue in a FixedTypeFieldVal, then the translation of the ObjectClassFieldValue is the translation of the ReferencedValue.",
      "ja": "ObjectClassFieldValueはFixedTypeFieldValでReferencedValueであれば、ObjectClassFieldValueの翻訳はReferencedValueの翻訳です。"
    },
    {
      "indent": 3,
      "text": "If an ObjectClassFieldValue is an OpenTypeFieldVal, then the translation of the ObjectClassFieldValue is an element item with the [local name] \"value\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <value> element item. An element item with the [local name] \"openTypeValue\" SHALL be appended to the [children] of the <value> element item. The translation of the Type in the OpenTypeFieldVal SHALL be added to the [children] or [attributes] of the <openTypeValue> element item. The translation of the Value in the OpenTypeFieldVal SHALL be added to the [children] or [attributes] of the <openTypeValue> element item.",
      "ja": "ObjectClassFieldValueがOpenTypeFieldValであれば、ObjectClassFieldValueの翻訳は、[ローカル名]「値」を持つ要素項目です。 [ローカル名]「注釈」を持つ要素項目は、<value>の要素項目の[子供]に添加してもよいです。 [ローカル名「openTypeValue」の要素アイテムは、<値>要素項目の[子供]を添付しなければなりません。 OpenTypeFieldValタイプの翻訳は、[子供]または<openTypeValue>要素項目の[属性]に追加されるものとします。 OpenTypeFieldValにおける価値の翻訳は、[子供]または<openTypeValue>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "myValue TYPE-IDENTIFIER.&Type ::= INTEGER:123",
      "raw": true
    },
    {
      "indent": 6,
      "text": "<namedValue name=\"myValue\"> <type> <fromClass class=\"asnx:TYPE-IDENTIFIER\" fieldName=\"Type\"/> </type> <value> <openTypeValue type=\"asnx:INTEGER\" literalValue=\"123\"/> </value> </namedValue>",
      "ja": "<たNamedValue名= \"myValue\"> <タイプ> <fromClassクラス= \"asnx：TYPE-識別子\" フィールド名= \"タイプ\" /> </タイプ> <値> <openTypeValueタイプ= \"asnx：INTEGER\" literalValue = \"123\" /> </ value>の</のNamedValue>"
    },
    {
      "indent": 0,
      "text": "8. Translation of Value Sets",
      "section_title": true,
      "ja": "バリューセットの8翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a ValueSet is an element item with the [local name] \"valueSet\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <valueSet> element item. The translation of the ElementSetSpecs instance in the ValueSet SHALL be appended to the [children] of the <valueSet> element item.",
      "ja": "値セットの翻訳は、[ローカル名]「値セット」を持つ要素項目です。 [ローカル名]「注釈」を持つ要素項目は、<値セット>要素項目の[子供]に添加してもよいです。値セットにElementSetSpecsインスタンスの変換は、<値セット>要素項目の[子供]を添付しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "{ 1 | 3..7, ..., 9..19 EXCEPT ( 11 | 12 ) }",
      "ja": "{1 | 3..7、...、EXCEPT 9..19（11 | 12）}"
    },
    {
      "indent": 6,
      "text": "<valueSet> <union> <literalValue>1</literalValue> <range> <minInclusive literalValue=\"3\"/> <maxInclusive literalValue=\"7\"/> </range> </union> <extension> <all> <range> <minInclusive literalValue=\"9\"/> <maxInclusive literalValue=\"19\"/> </range> <except> <union>",
      "ja": "<値セット> <組合> <literalValue> 1 </ literalValue> <範囲> <のminInclusive literalValue = \"3\" /> <maxInclusiveをliteralValue = \"7\" /> </範囲> </組合> <拡張> <全> <範囲> <のminInclusive literalValue = \"9\" /> <maxInclusiveをliteralValue = \"19\" /> </範囲> <除く> <組合>"
    },
    {
      "indent": 6,
      "text": " <literalValue>11</literalValue> <literalValue>12</literalValue> </union> </except> </all> </extension> </valueSet>",
      "ja": "<literalValue> 11 </ literalValue> <literalValue> 12 </ literalValue> </組合> </以外> </すべて> </拡張> </値セット>"
    },
    {
      "indent": 0,
      "text": "8.1. ElementSetSpecs Translation",
      "section_title": true,
      "ja": "8.1.  ElementSetSpecs翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an ElementSetSpecs instance where the ellipsis (\"...\") is not present is the translation of the ElementSetSpec in the RootElementSetSpec.",
      "ja": "省略記号は、（「...」）が存在しないElementSetSpecsインスタンスの翻訳はRootElementSetSpecでElementSetSpecの翻訳です。"
    },
    {
      "indent": 3,
      "text": "The translation of an ElementSetSpecs instance where the ellipsis (\"...\") is present is the translation of the ElementSetSpec in the RootElementSetSpec followed by an element item with the [local name] \"extension\". If an AdditionalElementSetSpec is present in the ElementSetSpecs, then the translation of the ElementSetSpec in the AdditionalElementSetSpec SHALL be added to the [children] of the <extension> element item.",
      "ja": "省略記号は、（「...」）が存在するElementSetSpecsインスタンスの変換は、[ローカル名 『拡張子』とエレメント項目続いRootElementSetSpecにおけるElementSetSpecの翻訳です。 AdditionalElementSetSpecはElementSetSpecs中に存在する場合、次いでAdditionalElementSetSpecでElementSetSpecの翻訳は、<拡張>要素項目の[子供]に追加することがSHALL。"
    },
    {
      "indent": 0,
      "text": "8.2. ElementSetSpec Translation",
      "section_title": true,
      "ja": "8.2.  ElementSetSpec翻訳"
    },
    {
      "indent": 3,
      "text": "If an ElementSetSpec is of the \"ALL Exclusions\" form, then the translation of the ElementSetSpec is an element item with the [local name] \"all\". An element item with the [local name] \"except\" SHALL be added to the [children] of the <all> element item. The translation of the Elements instance in the Exclusions SHALL be added to the [children] of the <except> element item.",
      "ja": "ElementSetSpecは「ALL除外」の形式である場合には、ElementSetSpecの翻訳は、[ローカル名]「すべて」を持つ要素項目です。 <すべて>要素項目の[子供]に追加されるものとし、「除く」[ローカル名]を持つ要素項目。除外の要素インスタンスの変換は、<除く>要素項目の[子供]に追加することがSHALL。"
    },
    {
      "indent": 3,
      "text": "If an ElementSetSpec is a Unions instance, then the translation of the ElementSetSpec is the translation of the Unions instance.",
      "ja": "ElementSetSpecは、労働組合のインスタンスである場合には、ElementSetSpecの翻訳は、労働組合のインスタンスの翻訳です。"
    },
    {
      "indent": 3,
      "text": "If a Unions instance has only one nested Intersections instance, then the translation of the Unions instance is the translation of that Intersections instance; otherwise, the translation of the Unions instance is an element item with the [local name] \"union\". In the latter case, the translation of each nested Intersections instance SHALL be appended to the [children] of the <union> element item.",
      "ja": "労働組合のインスタンスは一つだけネストされた交差点のインスタンスを持っている場合には、労働組合のインスタンスの翻訳は、その交差点インスタンスの翻訳です。それ以外の場合は、労働組合のインスタンスの翻訳は、[ローカル名]「組合」との要素項目です。後者の場合には、各ネストされた交差点のインスタンスの変換は、<組合>要素項目の[子供]を添付しなければなりません。"
    },
    {
      "indent": 3,
      "text": "If an Intersections instance has only one nested IntersectionElements instance, then the translation of the Intersections instance is the translation of that IntersectionElements instance; otherwise, the translation of the Intersections instance is an element item with the [local name] \"intersection\". In the latter case, the translation of each nested IntersectionElements instance SHALL be appended to the [children] of the <intersection> element item.",
      "ja": "交差点のインスタンスは一つだけ、ネストされたIntersectionElementsインスタンスがある場合、交差点インスタンスの翻訳は、そのインスタンスをIntersectionElementsの翻訳です。そうでなければ、交差点インスタンスの変換は、[ローカル名「交差点」の要素項目です。後者の場合には、ネストされた各IntersectionElementsインスタンスの変換は、<交差点>要素項目の[子供]を添付しなければなりません。"
    },
    {
      "indent": 3,
      "text": "If an IntersectionElements instance is of the \"Elems Exclusions\" form, then the translation of the IntersectionElements instance is an element item with the [local name] \"all\". The translation of the Elements instance in the Elems SHALL be added to the [children] of the <all> element item. An element item with the [local name] \"except\" SHALL be appended to the [children] of the <all> element item. The translation of the Elements instance in the Exclusions SHALL be added to the [children] of the <except> element item.",
      "ja": "IntersectionElementsインスタンスが「Elems除外」形式である場合、IntersectionElementsインスタンスの変換は、[ローカル名「全て」の要素項目です。 Elems内の要素インスタンスの翻訳は、<すべて>要素項目の[子供]に追加されるものとします。 <すべて>要素項目の[子供]に追加されるものとする（SHALL）「を除く」[ローカル名]を持つ要素項目。除外の要素インスタンスの変換は、<除く>要素項目の[子供]に追加することがSHALL。"
    },
    {
      "indent": 3,
      "text": "If an IntersectionElements instance is an Elements instance, then the translation of the IntersectionElements instance is the translation of the Elements instance.",
      "ja": "交差点の要素のインスタンスが要素のインスタンスである場合には、交差点の要素インスタンスの翻訳は、要素インスタンスの翻訳です。"
    },
    {
      "indent": 3,
      "text": "The translation of an Elements instance is the translation of the SubtypeElements, ObjectSetElements, or ElementSetSpec in the Elements instance.",
      "ja": "要素インスタンスの翻訳は、要素のインスタンスでSubtypeElements、ObjectSetElements、またはElementSetSpecの翻訳です。"
    },
    {
      "indent": 0,
      "text": "8.3. SubtypeElements Translation",
      "section_title": true,
      "ja": "8.3.  SubtypeElements翻訳"
    },
    {
      "indent": 3,
      "text": "If a SubtypeElements instance is a SingleValue, then the translation of the SubtypeElements instance is the translation of the Value in the SingleValue, except that an attribute form of the Value translation SHALL NOT be used.",
      "ja": "SubtypeElementsインスタンスがSingleValueであれば、SubtypeElementsインスタンスの翻訳は、Value翻訳の属性フォームは使用してはならないことを除いて、SingleValueにおける価値の翻訳です。"
    },
    {
      "indent": 3,
      "text": "If a SubtypeElements instance is a ContainedSubtype, then the translation of the SubtypeElements instance is an element item with the [local name] \"includes\". The translation of the Type in the ContainedSubtype SHALL be added to the [children] or [attributes] of the <includes> element item.",
      "ja": "SubtypeElementsインスタンスがContainedSubtypeある場合、SubtypeElementsインスタンスの変換は、[ローカル名「含む」の要素項目です。 ContainedSubtypeタイプの翻訳は、[子供]または[属性] <含まれる>の要素項目に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "If a SubtypeElements instance is a ValueRange, then the translation of the SubtypeElements instance is the translation of the ValueRange.",
      "ja": "SubtypeElementsインスタンスがValueRangeであれば、SubtypeElementsインスタンスの翻訳はValueRangeの翻訳です。"
    },
    {
      "indent": 3,
      "text": "If a SubtypeElements instance is a SizeConstraint, then the translation of the SubtypeElements instance is an element item with the [local name] \"size\". The translation of the Constraint in the SizeConstraint SHALL be added to the [children] of the <size> element item.",
      "ja": "SubtypeElementsインスタンスがSizeConstraintある場合、SubtypeElementsインスタンスの変換は、[ローカル名「サイズ」の要素項目です。 SizeConstraintにおける制約の翻訳は、<サイズ>要素項目の[子供]に追加することがSHALL。"
    },
    {
      "indent": 3,
      "text": "If a SubtypeElements instance is a TypeConstraint, then the translation of the SubtypeElements instance is an element item with the [local name] \"typeConstraint\". The translation of the Type in the TypeConstraint SHALL be added to the [children] or [attributes] of the <typeConstraint> element item.",
      "ja": "SubtypeElementsインスタンスがTypeConstraintある場合、SubtypeElementsインスタンスの変換は、[ローカル名「typeConstraint」の要素項目です。 TypeConstraintタイプの翻訳は、[子供]または<typeConstraint>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "If a SubtypeElements instance is a PermittedAlphabet, then the translation of the SubtypeElements instance is an element item with the [local name] \"from\". The translation of the Constraint in the PermittedAlphabet SHALL be added to the [children] of the <from> element item.",
      "ja": "SubtypeElementsインスタンスがPermittedAlphabetある場合、SubtypeElementsインスタンスの変換は、「から」[ローカル名]を持つ要素項目です。 PermittedAlphabetにおける制約の翻訳は、<から>要素項目の[子供]に追加することがSHALL。"
    },
    {
      "indent": 3,
      "text": "If a SubtypeElements instance is an InnerTypeConstraints instance, then the translation of the SubtypeElements instance is the translation of the InnerTypeConstraints instance.",
      "ja": "SubtypeElementsインスタンスがInnerTypeConstraintsのインスタンスである場合には、SubtypeElementsインスタンスの翻訳はInnerTypeConstraintsインスタンスの翻訳です。"
    },
    {
      "indent": 3,
      "text": "If a SubtypeElements instance is a PatternConstraint, then the translation of the SubtypeElements instance is an element item with the [local name] \"pattern\". The translation of the Value in the PatternConstraint SHALL be added to the [children] or [attributes] of the <pattern> element item.",
      "ja": "SubtypeElementsインスタンスがPatternConstraintある場合、SubtypeElementsインスタンスの変換は、[ローカル名「パターン」を持つ要素項目です。 PatternConstraintにおける値の翻訳は、[子供]または<パターン>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 0,
      "text": "8.3.1. ValueRange Translation",
      "section_title": true,
      "ja": "8.3.1.  ValueRange翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a ValueRange is an element item with the [local name] \"range\".",
      "ja": "ValueRangeの翻訳は、[ローカル名「範囲」の要素項目です。"
    },
    {
      "indent": 3,
      "text": "If the LowerEndpoint in the ValueRange is of the \"LowerEndValue <\" form, then an element item with the [local name] \"minExclusive\" SHALL be added to the [children] of the <range> element item. If the LowerEndValue is a Value, then the translation of the Value SHALL be added to the [children] or [attributes] of the <minExclusive> element item.",
      "ja": "ValueRangeでLowerEndpointが「LowerEndValue <」形である場合、[ローカル名]を持つ要素項目が「minExclusiveのは、」<範囲>要素項目の[子供]に追加することがSHALL。 LowerEndValueが値である場合は、[値の翻訳は、[子供]または<minExclusiveの>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "If the LowerEndpoint in the ValueRange is of the \"LowerEndValue\" form and the LowerEndValue is a Value, then an element item with the [local name] \"minInclusive\" SHALL be added to the [children] of the <range> element item. The translation of the Value in the LowerEndValue SHALL be added to the [children] or [attributes] of the <minInclusive> element item.",
      "ja": "ValueRangeでLowerEndpointが「LowerEndValue」形とLowerEndValueである場合、[ローカル名]とその要素の項目値は、「のminInclusiveは」<範囲>要素項目の[子供]に追加することがSHALLれます。 LowerEndValueにおける価値の翻訳は、[子供]または<のminInclusive>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "If the LowerEndpoint in the ValueRange is of the \"LowerEndValue\" form and the LowerEndValue is \"MIN\", then an element item with the [local name] \"minInclusive\" MAY be added to the [children] of the <range> element item.",
      "ja": "ValueRangeでLowerEndpointが「LowerEndValue」形状であり、LowerEndValueが「MIN」である場合、[ローカル名]「のminInclusive」とその要素のアイテムは、<範囲>要素項目の[子供]に加えてもよいです。"
    },
    {
      "indent": 3,
      "text": "If the UpperEndpoint in the ValueRange is of the \"< UpperEndValue\" form, then an element item with the [local name] \"maxExclusive\" SHALL be added to the [children] of the <range> element item. If the UpperEndValue is a Value, then the translation of the Value SHALL be added to the [children] or [attributes] of the <maxExclusive> element item.",
      "ja": "ValueRangeでUpperEndpointが「<UpperEndValue」形式である場合は、[ローカル名]を持つ要素項目が「maxExclusiveは」<範囲>要素項目の[子供]に追加することがSHALL。 UpperEndValueが値である場合は、[値の翻訳は、[子供]または<maxExclusive>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "If the UpperEndpoint in the ValueRange is of the \"UpperEndValue\" form and the UpperEndValue is a Value, then an element item with the [local name] \"maxInclusive\" SHALL be added to the [children] of the <range> element item. The translation of the Value in the UpperEndValue SHALL be added to the [children] or [attributes] of the <maxInclusive> element item.",
      "ja": "ValueRangeでUpperEndpointが「UpperEndValue」形とUpperEndValueである場合、[ローカル名]とその要素の項目値は、「maxInclusiveを」は、<範囲>要素項目の[子供]に追加することがSHALLれます。 UpperEndValueにおける価値の翻訳は、[子供]または<maxInclusiveを>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "If the UpperEndpoint in the ValueRange is of the \"UpperEndValue\" form and the UpperEndValue is \"MAX\", then an element item with the [local name] \"maxInclusive\" MAY be added to the [children] of the <range> element item.",
      "ja": "ValueRangeでUpperEndpointが「UpperEndValue」形状であり、UpperEndValueが「MAX」、[ローカル名]とその要素の項目であれば「maxInclusiveを」は、<範囲>要素項目の[子供]に加えてもよいです。"
    },
    {
      "indent": 3,
      "text": "Examples",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "1..10",
      "section_title": true,
      "ja": "１。。１０"
    },
    {
      "indent": 6,
      "text": "<range> <minInclusive literalValue=\"1\"/> <maxInclusive literalValue=\"10\"/> </range>",
      "ja": "<範囲> <のminInclusive literalValue = \"1\" /> <maxInclusiveをliteralValue = \"10\" /> </範囲>"
    },
    {
      "indent": 6,
      "text": "0..MAX",
      "section_title": true,
      "ja": "0..MAX"
    },
    {
      "indent": 6,
      "text": "<range> <minInclusive literalValue=\"0\"/> </range>",
      "ja": "<範囲> <のminInclusive literalValue = \"0\" /> </範囲>"
    },
    {
      "indent": 6,
      "text": "0<..<MAX",
      "ja": "0 <.. <MAX"
    },
    {
      "indent": 6,
      "text": "<range> <minExclusive literalValue=\"0\"/> <maxExclusive/> </range>",
      "ja": "<範囲> <minExclusiveのliteralValue = \"0\" /> <maxExclusive /> </範囲>"
    },
    {
      "indent": 0,
      "text": "8.3.2. InnerTypeConstraints Translation",
      "section_title": true,
      "ja": "8.3.2.  InnerTypeConstraints翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an InnerTypeConstraints instance that has a SingleTypeConstraint is an element item with the [local name] \"withComponent\". The translation of the Constraint in the SingleTypeConstraint SHALL be added to the [children] of the <withComponent> element item.",
      "ja": "SingleTypeConstraintを有するInnerTypeConstraintsインスタンスの変換は、[ローカル名「withComponent」の要素項目です。 SingleTypeConstraintにおける制約の翻訳は、<withComponent>要素項目の[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of an InnerTypeConstraints instance that has a MultipleTypeConstraints instance is an element item with the [local name] \"withComponents\". If the MultipleTypeConstraints instance is a PartialSpecification, then an attribute item with the [local name] \"partial\" and the [normalized value] \"true\" or \"1\" SHALL be added to the [attributes] of the <withComponents> element item.",
      "ja": "MultipleTypeConstraintsインスタンスを有するInnerTypeConstraintsインスタンスの変換は、[ローカル名「withComponents」の要素項目です。 MultipleTypeConstraintsインスタンスがPartialSpecification場合は、[ローカル名]「部分」の属性項目及び[正規化値「真」または「1」が<withComponents>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "If the MultipleTypeConstraints instance is a FullSpecification, then an attribute item with the [local name] \"partial\" and the [normalized value] \"false\" or \"0\" MAY be added to the [attributes] of the <withComponents> element item. The translation of each NamedConstraint nested in the TypeConstraints instance in the FullSpecification or PartialSpecification SHALL be appended to the [children] of the <withComponents> element item.",
      "ja": "MultipleTypeConstraintsインスタンスがFullSpecification場合は、[ローカル名]「部分」の属性項目及び[正規化値「偽」または「0」<withComponents>要素項目の[属性]に加えてもよいです。 FullSpecification又はPartialSpecificationにTypeConstraintsがインスタンス内にネストされた各NamedConstraintの翻訳は、<withComponents>要素項目の[子供]を添付しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The translation of a NamedConstraint is an element item with the same [local name] (i.e., \"attribute\", \"element\", \"component\", \"group\", \"member\", or \"simpleContent\") as the translation of the NamedType corresponding to the identifier in the NamedConstraint. An attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the <attribute>, <element>, <component>, <group>, <member>, or <simpleContent> element item. The [normalized value] of this attribute item is a qualified name for the expanded name of the NamedType corresponding to the identifier in the NamedConstraint.",
      "ja": "NamedConstraintの翻訳はNamedTypeの翻訳と同じ[ローカル名]（すなわち、「属性」、「要素」、「コンポーネント」、「グループ」、「部材」、又は「simpleContentを」）を持つ要素項目でありますNamedConstraintにおける識別子に対応します。 [ローカル名「名前」は、<属性>、<要素>、<成分>、<グループ>、<メンバー>、または<simpleContentを>要素項目の[属性]に追加されるものとを有する属性項目。この属性項目の[正規化値] NamedConstraintにおける識別子に対応NamedTypeの拡張名の修飾名です。"
    },
    {
      "indent": 3,
      "text": "If the PresenceConstraint in the ComponentConstraint in the NamedConstraint is not empty, then an attribute item with the [local name] \"use\" SHALL be added to the [attributes] of the <attribute>, <element>, <component>, <group>, <member>, or <simpleContent> element item. The [normalized value] of this attribute item is the text of the PresenceConstraint with all letters downcased, i.e., either \"present\", \"absent\", or \"optional\".",
      "ja": "[ローカル名] <要素>、<成分>、<、<属性>の[属性]に追加されるものと「使用」基とNamedConstraintでComponentConstraintでPresenceConstraintが空でない場合、属性項目>、<メンバー>、または<simpleContentを>要素アイテム。この属性項目の[正規化値] downcasedすべての文字とPresenceConstraintのテキスト、すなわち、いずれかの「存在」、「不在」、または「任意」です。"
    },
    {
      "indent": 3,
      "text": "If the ValueConstraint in the ComponentConstraint in the NamedConstraint is not empty, then the translation of the Constraint in the ValueConstraint SHALL be added to the [children] of the <attribute>, <element>, <component>, <group>, <member>, or <simpleContent> element item.",
      "ja": "NamedConstraintでComponentConstraintでValueConstraintが空でない場合、次にValueConstraintにおける制約の翻訳は、<属性>、<要素>、<成分>、<グループ>、<メンバーの[子供]に追加することがSHALL >、または<simpleContentを>要素アイテム。"
    },
    {
      "indent": 0,
      "text": "9. Translation of Object Classes",
      "section_title": true,
      "ja": "オブジェクトクラスの9翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an ObjectClass is the translation of the DefinedObjectClass, ObjectClassDefn, or ParameterizedObjectClass in the ObjectClass.",
      "ja": "ObjectClassの翻訳のオブジェクトクラスでDefinedObjectClass、ObjectClassDefn、またはParameterizedObjectClassの翻訳です。"
    },
    {
      "indent": 3,
      "text": "The translation of a ParameterizedObjectClass is described in Section 13.",
      "ja": "ParameterizedObjectClassの翻訳は、セクション13に記載されています。"
    },
    {
      "indent": 0,
      "text": "9.1. DefinedObjectClass Translation",
      "section_title": true,
      "ja": "9.1.  DefinedObjectClass翻訳"
    },
    {
      "indent": 3,
      "text": "If a DefinedObjectClass is an objectclassreference (not a DummyReference), an ExternalObjectClassReference, or a UsefulObjectClassReference, then the translation of the",
      "ja": "DefinedObjectClassはobjectclassreference（ないDummyReference）、ExternalObjectClassReference、またはUsefulObjectClassReference、その後の翻訳である場合"
    },
    {
      "indent": 3,
      "text": "DefinedObjectClass is either the attribute form translation of an object class reference, or the element form translation of an object class reference.",
      "ja": "DefinedObjectClassは、オブジェクト・クラス参照の属性形式の変換、またはオブジェクトクラス参照の要素の形態の変換のいずれかです。"
    },
    {
      "indent": 3,
      "text": "The attribute form translation of an object class reference is an attribute item with the [local name] \"class\". The [normalized value] of this attribute item is a qualified name for the expanded name of the referenced object class definition (see Section 5.1). In the case of a UsefulObjectClassReference, the namespace name of the expanded name is \"urn:ietf:params:xml:ns:asnx\", and the local name is either \"TYPE-IDENTIFIER\" or \"ABSTRACT-SYNTAX\", as the case may be. The attribute form translation SHALL NOT be used if the expanded name is not distinct with respect to the current module and the modules referenced by its <import> element items (see Section 5.1). Otherwise, the translator is free to choose either the attribute form or element form translation for an object class reference.",
      "ja": "オブジェクト・クラス参照の属性形式の変換は、[ローカル名「クラス」の属性項目です。この属性項目の[正規化された値は、（セクション5.1を参照）、参照オブジェクトのクラス定義の拡張名の修飾名です。 、およびローカル名は大文字として、「TYPE-IDENTIFIER」又は「抽象構文」のいずれかであるUsefulObjectClassReferenceの場合には、拡張名の名前空間名は「asnx：IETF：paramsは：XML：NS URN」であります多分。拡張名は、現在のモジュールに対して、その<インポート>要素のアイテムによって参照されるモジュールと別個でない場合、属性の形式変換を使用してはならない（セクション5.1を参照）。そうでなければ、翻訳者は、オブジェクトのクラス参照の属性フォームまたは要素フォームの翻訳のいずれかを自由に選択することができます。"
    },
    {
      "indent": 3,
      "text": "The element form translation of an object class reference is an element item with the [local name] \"class\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <class> element item. An attribute item with the [local name] \"ref\" SHALL be added to the [attributes] of the <class> element item. The [normalized value] of this attribute item is a qualified name for the expanded name of the referenced object class definition. In the case of a UsefulObjectClassReference, the namespace name of the expanded name is \"urn:ietf:params:xml:ns:asnx\" and the local name is either \"TYPE-IDENTIFIER\" or \"ABSTRACT-SYNTAX\", as the case may be. If the expanded name is not distinct with respect to the current module and the modules referenced by its <import> element items, then an attribute item with the [local name] \"context\" SHALL be added to the [attributes] of the <class> element item; otherwise, if the module containing the referenced object class definition has a schema identity URI, then an attribute item with the [local name] \"context\" MAY be added to the [attributes] of the <class> element item. The [normalized value] of this attribute item is the schema identity URI of the module containing the referenced object class definition.",
      "ja": "オブジェクト・クラス参照の要素の形式変換は、[ローカル名「クラス」を持つ要素項目です。 [ローカル名]を持つ要素項目は、「注釈」は、<class>要素項目の[子供]に添加してもよいです。 [ローカル名]の属性項目は、「refが」<class>要素項目の[属性]に追加されるものとします。この属性項目の[正規化値]参照されるオブジェクトのクラス定義の拡張名の修飾名です。 UsefulObjectClassReferenceの場合には、拡張名の名前空間名は、「：IETF：paramsは：XML：NS：URN asnx」で、ローカル名は大文字として、「TYPE-IDENTIFIER」又は「抽象構文」のいずれかであるかもしれませんこと。拡張名は、現在のモジュールとその<インポート>要素のアイテムによって参照されるモジュールに対して明確でない場合は、[ローカル名「コンテキスト」の属性項目は、<クラスの[属性]に追加することがSHALL >要素の項目、参照されたオブジェクトのクラス定義を含むモジュールが、スキーマ同一URIを持つ場合そうでない場合は、次に[ローカル名「コンテキスト」の属性項目は、<クラス>要素項目の[属性]に加えてもよいです。この属性項目の[正規化値]参照されるオブジェクトのクラス定義を含むモジュールのスキーマ同一URIです。"
    },
    {
      "indent": 6,
      "text": "Aside: If a reference name is not distinct, then the module containing the referenced definition must have a schema identity URI (see Section 5.1).",
      "ja": "脇：参照名が明瞭でない場合は、参照先の定義を含むモジュールは、スキーマのアイデンティティURIを（5.1節を参照）を持っている必要があります。"
    },
    {
      "indent": 3,
      "text": "The translation of the DefinedObjectClass is the same whether the object class definition is referenced by an objectclassreference or an ExternalObjectClassReference.",
      "ja": "DefinedObjectClassの翻訳は、オブジェクト・クラス定義がobjectclassreference又はExternalObjectClassReferenceによって参照されるかどうかと同じです。"
    },
    {
      "indent": 3,
      "text": "If a DefinedObjectClass is a DummyReference, then the translation of the DefinedObjectClass is the translation of the DummyReference (see Section 13).",
      "ja": "DefinedObjectClassがDummyReferenceであれば、DefinedObjectClassの翻訳はDummyReference（セクション13を参照）の翻訳です。"
    },
    {
      "indent": 0,
      "text": "9.2. ObjectClassDefn Translation",
      "section_title": true,
      "ja": "9.2.  ObjectClassDefn翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an ObjectClassDefn is an element item with the [local name] \"class\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <class> element item. The translation of each FieldSpec in the ObjectClassDefn SHALL be appended to the [children] of the <class> element item.",
      "ja": "ObjectClassDefnの翻訳は、[ローカル名]「クラス」を持つ要素項目です。 [ローカル名]を持つ要素項目は、「注釈」は、<class>要素項目の[子供]に添加してもよいです。 ObjectClassDefn各FieldSpecの翻訳は、<クラス>要素項目の[子供]を添付しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The translation of a FieldSpec is the translation of the TypeFieldSpec, FixedTypeValueFieldSpec, VariableTypeValueFieldSpec, FixedTypeValueSetFieldSpec, VariableTypeValueSetFieldSpec, ObjectFieldSpec, or ObjectSetFieldSpec in the FieldSpec.",
      "ja": "FieldSpecの翻訳はFieldSpecでTypeFieldSpec、FixedTypeValueFieldSpec、VariableTypeValueFieldSpec、FixedTypeValueSetFieldSpec、VariableTypeValueSetFieldSpec、ObjectFieldSpec、またはObjectSetFieldSpecの翻訳です。"
    },
    {
      "indent": 0,
      "text": "9.2.1. TypeFieldSpec Translation",
      "section_title": true,
      "ja": "9.2.1.  TypeFieldSpec翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a TypeFieldSpec where the TypeOptionalitySpec is absent is an element item with the [local name] \"typeField\".",
      "ja": "TypeOptionalitySpecが存在しないTypeFieldSpecの翻訳は、[ローカル名「typeField」の要素項目です。"
    },
    {
      "indent": 3,
      "text": "The translation of a TypeFieldSpec with a TypeOptionalitySpec of the \"OPTIONAL\" form is an element item with the [local name] \"optional\". An element item with the [local name] \"typeField\" SHALL be added to the [children] of the <optional> element item.",
      "ja": "「OPTIONAL」形のTypeOptionalitySpecとTypeFieldSpecの翻訳は、[ローカル名「オプション」の要素項目です。 [ローカル名]「typeField」と要素項目は、<オプション>要素項目の[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of a TypeFieldSpec with a TypeOptionalitySpec of the \"DEFAULT Type\" form is an element item with the [local name] \"optional\". An element item with the [local name] \"typeField\" SHALL be added to the [children] of the <optional> element item. An element item with the [local name] \"default\" SHALL be appended to the [children] of the <optional> element item. The translation of the Type in the TypeOptionalitySpec SHALL be added to the [children] or [attributes] of the <default> element item.",
      "ja": "「デフォルトタイプ」フォームのTypeOptionalitySpecとTypeFieldSpecの翻訳は、[ローカル名]「オプション」を持つ要素項目です。 [ローカル名]「typeField」と要素項目は、<オプション>要素項目の[子供]に追加されるものとします。 [ローカル名]「デフォルト」を持つ要素項目は、<オプション>要素項目の[子供]を添付しなければなりません。 TypeOptionalitySpecタイプの翻訳は、[子供]または<デフォルト>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "An attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the <typeField> element item. The [normalized value] of this attribute item is the typefieldreference in the TypeFieldSpec, without the ampersand character ('&', U+0026). An element item with the [local name] \"annotation\" MAY be added to the [children] of the <typeField> element item.",
      "ja": "[ローカル名]「名」の属性項目は、<typeField>要素項目の[属性]に追加されるものとします。この属性項目の[正規化値]アンパサンド文字（「＆」、U + 0026）ことなく、TypeFieldSpecでtypefieldreferenceあります。 [ローカル名]「注釈」を持つ要素項目は、<typeField>要素項目の[子供]に添加してもよいです。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "CLASS { &One, &Two OPTIONAL, &Three DEFAULT OBJECT IDENTIFIER }",
      "ja": "CLASS {＆ワン、＆任意の2、＆3つのデフォルトオブジェクト識別子}"
    },
    {
      "indent": 6,
      "text": "<class> <typeField name=\"One\"/> <optional> <typeField name=\"Two\"/> </optional> <optional> <typeField name=\"Three\"/> <default type=\"asnx:OBJECT-IDENTIFIER\"/> </optional> </class>",
      "ja": "<クラス> <typeField名= \"ワン\" /> <オプション> <typeField名= \"二\" /> </オプション> <オプション> <typeField名= \"三\" /> <デフォルトのタイプ= \"asnx：OBJECT-IDENTIFIER 「/> </オプション> </クラス>"
    },
    {
      "indent": 0,
      "text": "9.2.2. FixedTypeValueFieldSpec Translation",
      "section_title": true,
      "ja": "9.2.2.  FixedTypeValueFieldSpec翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a FixedTypeValueFieldSpec where the ValueOptionalitySpec is absent is an element item with the [local name] \"valueField\".",
      "ja": "ValueOptionalitySpecが存在しないFixedTypeValueFieldSpecの翻訳は、[ローカル名「valueField」の要素項目です。"
    },
    {
      "indent": 3,
      "text": "The translation of a FixedTypeValueFieldSpec with a ValueOptionalitySpec of the \"OPTIONAL\" form is an element item with the [local name] \"optional\". An element item with the [local name] \"valueField\" SHALL be added to the [children] of the <optional> element item.",
      "ja": "「OPTIONAL」形のValueOptionalitySpecとFixedTypeValueFieldSpecの翻訳は、[ローカル名「オプション」の要素項目です。 [ローカル名]を持つ要素項目は「valueFieldは」<オプション>要素項目の[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of a FixedTypeValueFieldSpec with a ValueOptionalitySpec of the \"DEFAULT Value\" form is an element item with the [local name] \"optional\". An element item with the [local name] \"valueField\" SHALL be added to the [children] of the <optional> element item. An element item with the [local name] \"default\" SHALL be appended to the [children] of the <optional> element item. The translation of the Value in the ValueOptionalitySpec SHALL be added to the [children] or [attributes] of the <default> element item.",
      "ja": "「デフォルト値」形式のValueOptionalitySpecとFixedTypeValueFieldSpecの翻訳は、[ローカル名「オプション」の要素項目です。 [ローカル名]を持つ要素項目は「valueFieldは」<オプション>要素項目の[子供]に追加されるものとします。 [ローカル名]「デフォルト」を持つ要素項目は、<オプション>要素項目の[子供]を添付しなければなりません。 ValueOptionalitySpecにおける価値の翻訳は、[子供]または<デフォルト>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "An attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the <valueField> element item. The [normalized value] of this attribute item is the valuefieldreference in the FixedTypeValueFieldSpec, without the ampersand character ('&', U+0026). If the \"UNIQUE\" keyword is present, then an attribute item with the [local name] \"unique\" and [normalized value] \"true\" or \"1\" SHALL be added to the [attributes] of the <valueField> element item; otherwise, an attribute item with the [local name] \"unique\" and [normalized value] \"false\" or \"0\" MAY be added to the [attributes] of the <valueField> element item. An element item with the [local name] \"annotation\" MAY be added to the [children] of the <valueField> element item. The translation of the Type in the FixedTypeValueFieldSpec SHALL be added to the [children] or [attributes] of the <valueField> element item.",
      "ja": "[ローカル名]「名」の属性項目は、<valueField>要素項目の[属性]に追加されるものとします。この属性項目の[正規化値]アンパサンド文字（「＆」、U + 0026）ことなく、FixedTypeValueFieldSpecでvaluefieldreferenceあります。 「固有」のキーワードが存在する場合、[ローカル名「ユニーク」と[正規化値「真」または「1」の属性項目は<valueField>要素項目の[属性]に追加しなければなりません。そうでない場合は、[ローカル名「ユニーク」と[正規化値「偽」または「0」の属性項目は<valueField>要素項目の[属性]に加えてもよいです。 [ローカル名]「注釈」を持つ要素項目は、<valueField>要素項目の[子供]に添加してもよいです。 FixedTypeValueFieldSpecタイプの翻訳は、[子供]または<valueField>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "CLASS { &one OBJECT IDENTIFIER UNIQUE, &two BOOLEAN OPTIONAL, &three INTEGER DEFAULT 0 }",
      "ja": "CLASS {＆一つのオブジェクトIDENTIFIER UNIQUE、＆任意の2 BOOLEAN、および3つの整数DEFAULT 0}"
    },
    {
      "indent": 6,
      "text": "<class> <valueField name=\"one\" unique=\"true\" type=\"asnx:OBJECT-IDENTIFIER\"/> <optional> <valueField name=\"two\" type=\"asnx:BOOLEAN\"/> </optional> <optional> <valueField name=\"three\" type=\"asnx:INTEGER\"/> <default literalValue=\"0\"/> </optional> </class>",
      "ja": "<クラス> <valueField名= \"1\" ユニーク= \"true\" をタイプ= \"asnx：OBJECT-IDENTIFIER\" /> <オプション> <valueField名= \"2\" タイプ= \"asnx：BOOLEAN\" /> </オプション> <オプション> <valueField名= \"3\" タイプ= \"asnx：INTEGER\" /> <デフォルトliteralValue = \"0\" /> </オプション> </クラス>"
    },
    {
      "indent": 0,
      "text": "9.2.3. FixedTypeValueSetFieldSpec Translation",
      "section_title": true,
      "ja": "9.2.3.  FixedTypeValueSetFieldSpec翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a FixedTypeValueSetFieldSpec where the ValueSetOptionalitySpec is absent is an element item with the [local name] \"valueSetField\".",
      "ja": "ValueSetOptionalitySpecが存在しないFixedTypeValueSetFieldSpecの翻訳は、[ローカル名「valueSetField」の要素項目です。"
    },
    {
      "indent": 3,
      "text": "The translation of a FixedTypeValueSetFieldSpec with a ValueSetOptionalitySpec of the \"OPTIONAL\" form is an element item with the [local name] \"optional\". An element item with the [local name] \"valueSetField\" SHALL be added to the [children] of the <optional> element item.",
      "ja": "「OPTIONAL」形のValueSetOptionalitySpecとFixedTypeValueSetFieldSpecの翻訳は、[ローカル名「オプション」の要素項目です。 [ローカル名]を持つ要素項目は「valueSetFieldは」<オプション>要素項目の[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of a FixedTypeValueSetFieldSpec with a ValueSetOptionalitySpec of the \"DEFAULT ValueSet\" form is an element item with the [local name] \"optional\". An element item with the [local name] \"valueSetField\" SHALL be added to the [children] of the <optional> element item. An element item with the [local name] \"default\" SHALL be appended to the [children] of the <optional> element item. The translation of the ValueSet in the ValueSetOptionalitySpec SHALL be added to the [children] of the <default> element item.",
      "ja": "「DEFAULT値セット」形のValueSetOptionalitySpecとFixedTypeValueSetFieldSpecの翻訳は、[ローカル名「オプション」の要素項目です。 [ローカル名]を持つ要素項目は「valueSetFieldは」<オプション>要素項目の[子供]に追加されるものとします。 [ローカル名]「デフォルト」を持つ要素項目は、<オプション>要素項目の[子供]を添付しなければなりません。 ValueSetOptionalitySpecでの値セットの翻訳は、<デフォルト>要素項目の[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "An attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the <valueSetField> element item. The [normalized value] of this attribute item is the valuesetfieldreference in the FixedTypeValueSetFieldSpec, without the ampersand character ('&', U+0026). An element item with the [local name] \"annotation\" MAY be added to the [children] of the",
      "ja": "[ローカル名]「名」の属性項目は、<valueSetField>要素項目の[属性]に追加されるものとします。この属性項目の[正規化値]アンパサンド文字（「＆」、U + 0026）ことなく、FixedTypeValueSetFieldSpecでvaluesetfieldreferenceあります。 [ローカル名]「注釈」はの[子供]に追加されるかもしれないとの要素項目"
    },
    {
      "indent": 3,
      "text": "<valueSetField> element item. The translation of the Type in the FixedTypeValueSetFieldSpec SHALL be added to the [children] or [attributes] of the <valueSetField> element item.",
      "ja": "<valueSetField>要素項目。 FixedTypeValueSetFieldSpecタイプの翻訳は、[子供]または<valueSetField>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "CLASS { &One UTF8String, &Two BOOLEAN OPTIONAL, &Three INTEGER DEFAULT { 1 | 2 } }",
      "ja": "CLASS {＆ワンUTF8Stringを、＆任意の2 BOOLEAN、＆3つの整数DEFAULT {1 | 2}}"
    },
    {
      "indent": 6,
      "text": "<class> <valueSetField name=\"One\" type=\"asnx:UTF8String\"/> <optional> <valueSetField name=\"Two\" type=\"asnx:BOOLEAN\"/> </optional> <optional> <valueSetField name=\"Three\" type=\"asnx:INTEGER\"/> <default> <valueSet> <union> <literalValue>1</literalValue> <literalValue>2</literalValue> </union> </valueSet> </default> </optional> </class>",
      "ja": "<クラス> <valueSetField名= \"ワン\" タイプ= \"asnx：UTF8Stringを\" /> <オプション> <valueSetField名= \"二\" タイプ= \"asnx：BOOLEAN\" /> </オプション> <オプション> <valueSetField名=」三つの」タイプ= \"asnx：INTEGER\" /> <デフォルト> <値セット> <組合> <literalValue> 1 </ literalValue> <literalValue> 2 </ literalValue> </組合> </値セット> </デフォルト> </オプション> </クラス>"
    },
    {
      "indent": 0,
      "text": "9.2.4. VariableTypeValueFieldSpec Translation",
      "section_title": true,
      "ja": "9.2.4.  VariableTypeValueFieldSpec翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a VariableTypeValueFieldSpec where the ValueOptionalitySpec is absent is an element item with the [local name] \"valueField\".",
      "ja": "ValueOptionalitySpecが存在しないVariableTypeValueFieldSpecの翻訳は、[ローカル名「valueField」の要素項目です。"
    },
    {
      "indent": 3,
      "text": "The translation of a VariableTypeValueFieldSpec with a ValueOptionalitySpec of the \"OPTIONAL\" form is an element item with the [local name] \"optional\". An element item with the [local name] \"valueField\" SHALL be added to the [children] of the <optional> element item.",
      "ja": "「OPTIONAL」形のValueOptionalitySpecとVariableTypeValueFieldSpecの翻訳は、[ローカル名「オプション」の要素項目です。 [ローカル名]を持つ要素項目は「valueFieldは」<オプション>要素項目の[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of a VariableTypeValueFieldSpec with a ValueOptionalitySpec of the \"DEFAULT Value\" form is an element item with the [local name] \"optional\". An element item with the [local name] \"valueField\" SHALL be added to the [children] of the <optional> element item. An element item with the [local name] \"default\" SHALL be appended to the [children] of the <optional> element item. The translation of the Value in the ValueOptionalitySpec SHALL be added to the [children] or [attributes] of the <default> element item.",
      "ja": "「デフォルト値」形式のValueOptionalitySpecとVariableTypeValueFieldSpecの翻訳は、[ローカル名「オプション」の要素項目です。 [ローカル名]を持つ要素項目は「valueFieldは」<オプション>要素項目の[子供]に追加されるものとします。 [ローカル名]「デフォルト」を持つ要素項目は、<オプション>要素項目の[子供]を添付しなければなりません。 ValueOptionalitySpecにおける価値の翻訳は、[子供]または<デフォルト>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "An attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the <valueField> element item. The [normalized value] of this attribute item is the valuefieldreference in the VariableTypeValueFieldSpec, without the ampersand character ('&', U+0026). An element item with the [local name] \"annotation\" MAY be added to the [children] of the <valueField> element item. An element item with the [local name] \"typeFromField\" SHALL be appended to the [children] of the <valueField> element item. The translation of the FieldName in the VariableTypeValueFieldSpec SHALL be added to the [children] or [attributes] of the <typeFromField> element item.",
      "ja": "[ローカル名]「名」の属性項目は、<valueField>要素項目の[属性]に追加されるものとします。この属性項目の[正規化値]アンパサンド文字（「＆」、U + 0026）ことなく、VariableTypeValueFieldSpecでvaluefieldreferenceあります。 [ローカル名]「注釈」を持つ要素項目は、<valueField>要素項目の[子供]に添加してもよいです。 [ローカル名]「typeFromField」と要素項目は、<valueField>要素項目の[子供]を添付しなければなりません。 VariableTypeValueFieldSpecでのフィールド名の翻訳は、[子供]または<typeFromField>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "CLASS { &Syntax DEFAULT INTEGER, &one &Syntax, &two &Syntax OPTIONAL, &three &Syntax DEFAULT 0 }",
      "ja": "CLASS {＆構文デフォルトINTEGER、＆ワン・シンタックス、＆2＆OPTIONAL構文、＆3＆構文DEFAULT 0}"
    },
    {
      "indent": 6,
      "text": "<class> <optional> <typeField name=\"Syntax\"/> <default type=\"asnx:INTEGER\"/> </optional> <valueField name=\"one\"> <typeFromField fieldName=\"Syntax\"/> </valueField> <optional> <valueField name=\"two\"> <typeFromField fieldName=\"Syntax\"/> </valueField> </optional> <optional> <valueField name=\"three\"> <typeFromField fieldName=\"Syntax\"/> </valueField> <default literalValue=\"0\"/> </optional> </class>",
      "ja": "<クラス> <オプション> <typeField名= \"構文\" /> <デフォルトのタイプ= \"asnx：INTEGER\" /> </オプション> <valueField名= \"1\"> <typeFromFieldフィールド名= \"構文\" /> </ valueField > <オプション> <valueField名= \"2\"> <typeFromFieldフィールド名= \"構文\" /> </ valueField> </オプション> <オプション> <valueField名= \"3\"> <typeFromFieldフィールド名= \"構文\" /> < / valueField> <デフォルトliteralValue = \"0\" /> </オプション> </クラス>"
    },
    {
      "indent": 0,
      "text": "9.2.5. VariableTypeValueSetFieldSpec Translation",
      "section_title": true,
      "ja": "9.2.5.  VariableTypeValueSetFieldSpec翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a VariableTypeValueSetFieldSpec where the ValueSetOptionalitySpec is absent is an element item with the [local name] \"valueSetField\".",
      "ja": "ValueSetOptionalitySpecが存在しないVariableTypeValueSetFieldSpecの翻訳は、[ローカル名「valueSetField」の要素項目です。"
    },
    {
      "indent": 3,
      "text": "The translation of a VariableTypeValueSetFieldSpec with a ValueSetOptionalitySpec of the \"OPTIONAL\" form is an element item with the [local name] \"optional\". An element item with the [local name] \"valueSetField\" SHALL be added to the [children] of the <optional> element item.",
      "ja": "「OPTIONAL」形のValueSetOptionalitySpecとVariableTypeValueSetFieldSpecの翻訳は、[ローカル名「オプション」の要素項目です。 [ローカル名]を持つ要素項目は「valueSetFieldは」<オプション>要素項目の[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of a VariableTypeValueSetFieldSpec with a ValueSetOptionalitySpec of the \"DEFAULT ValueSet\" form is an element item with the [local name] \"optional\". An element item with the [local name] \"valueSetField\" SHALL be added to the [children] of the <optional> element item. An element item with the [local name] \"default\" SHALL be appended to the [children] of the <optional> element item. The translation of the ValueSet in the ValueSetOptionalitySpec SHALL be added to the [children] of the <default> element item.",
      "ja": "「DEFAULT値セット」形のValueSetOptionalitySpecとVariableTypeValueSetFieldSpecの翻訳は、[ローカル名「オプション」の要素項目です。 [ローカル名]を持つ要素項目は「valueSetFieldは」<オプション>要素項目の[子供]に追加されるものとします。 [ローカル名]「デフォルト」を持つ要素項目は、<オプション>要素項目の[子供]を添付しなければなりません。 ValueSetOptionalitySpecでの値セットの翻訳は、<デフォルト>要素項目の[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "An attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the <valueSetField> element item. The [normalized value] of this attribute item is the valuesetfieldreference in the VariableTypeValueSetFieldSpec, without the ampersand character ('&', U+0026). An element item with the [local name] \"annotation\" MAY be added to the [children] of the <valueSetField> element item. An element item with the [local name] \"typeFromField\" SHALL be appended to the [children] of the <valueSetField> element item. The translation of the FieldName in the VariableTypeValueSetFieldSpec SHALL be added to the [children] or [attributes] of the <typeFromField> element item.",
      "ja": "[ローカル名]「名」の属性項目は、<valueSetField>要素項目の[属性]に追加されるものとします。この属性項目の[正規化値]アンパサンド文字（「＆」、U + 0026）ことなく、VariableTypeValueSetFieldSpecでvaluesetfieldreferenceあります。 [ローカル名]「注釈」を持つ要素項目は、<valueSetField>要素項目の[子供]に添加してもよいです。 [ローカル名]「typeFromField」と要素項目は、<valueSetField>要素項目の[子供]を添付しなければなりません。 VariableTypeValueSetFieldSpecでのフィールド名の翻訳は、[子供]または<typeFromField>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "CLASS { &Syntax DEFAULT INTEGER, &One &Syntax, &Two &Syntax OPTIONAL, &Three &Syntax DEFAULT { 1 | 2 } }",
      "ja": "CLASS {＆構文デフォルトのINTEGER、＆ワン＆シンタックス、および二つの＆構文オプション、＆スリー＆構文DEFAULT {1 | 2}}"
    },
    {
      "indent": 6,
      "text": "<class> <optional> <typeField name=\"Syntax\"/> <default type=\"asnx:INTEGER\"/> </optional>",
      "ja": "<クラス> <オプション> <typeField名= \"構文\" /> <デフォルトのタイプ= \"asnx：INTEGER\" /> </オプション>"
    },
    {
      "indent": 6,
      "text": " <valueSetField name=\"One\"> <typeFromField fieldName=\"Syntax\"/> </valueSetField> <optional> <valueSetField name=\"Two\"> <typeFromField fieldName=\"Syntax\"/> </valueSetField> </optional> <optional> <valueSetField name=\"Three\"> <typeFromField fieldName=\"Syntax\"/> </valueSetField> <default> <valueSet> <union> <literalValue>1</literalValue> <literalValue>2</literalValue> </union> </valueSet> </default> </optional> </class>",
      "ja": "<valueSetField名= \"ワン\"> <typeFromFieldフィールド名= \"構文\" /> </ valueSetField> <オプション> <valueSetField名= \"二\"> <typeFromFieldフィールド名= \"構文\" /> </ valueSetField> </オプション> <オプション> <valueSetField名= \"三\"> <typeFromFieldフィールド名= \"構文\" /> </ valueSetField> <デフォルト> <値セット> <組合> <literalValue> 1 </ literalValue> <literalValue> 2 </ literalValue> </組合> </値セット> </デフォルト> </オプション> </クラス>"
    },
    {
      "indent": 0,
      "text": "9.2.6. FieldName Translation",
      "section_title": true,
      "ja": "9.2.6. フィールド名の翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a FieldName is either, at the translator's option, an attribute item with the [local name] \"fieldName\" added to the [attributes] of the enclosing element item, or an element item with the [local name] \"fieldName\" appended to the [children] of the enclosing element item.",
      "ja": "フィールド名の翻訳は、翻訳者の選択により、どちらかである、[ローカル名]の属性項目は、「フィールド名は、」[ローカル名]「フィールド名」で囲み要素項目の[属性]、または要素項目に追加しました囲み要素項目の[子供]に付加。"
    },
    {
      "indent": 3,
      "text": "The [normalized value] of the fieldName attribute item is a solidus ('/', U+002F) separated list of the PrimitiveFieldName instances in the FieldName, without the ampersand characters ('&', U+0026). Leading and/or trailing white space characters MAY be added to the [normalized value] of the attribute item. White space characters MAY be added immediately before and/or after any solidus character ('/', U+002F) in the [normalized value].",
      "ja": "フィールド名属性項目の[正規化値]固相（「/」、U + 002F）である（U + 0026、「＆」）アンパサンド文字なしに、フィールド名でPrimitiveFieldNameインスタンスのリストを分離しました。主要および/または空白文字を末尾に属性項目の[正規化値]に加えてもよいです。ホワイトスペース文字は、[正規化された値]で（「/」、U + 002F）の前および/または任意の固相線文字の直後に追加される場合があります。"
    },
    {
      "indent": 3,
      "text": "The [children] property of the <fieldName> element item is set to the sequence of character items for a solidus ('/', U+002F) separated list of the PrimitiveFieldName instances in the FieldName, without the ampersand characters ('&', U+0026). Leading and/or trailing white space character items MAY be added to the [children] of the <fieldName> element item. White space character items MAY be added immediately before and/or after any character item for the solidus character ('/', U+002F).",
      "ja": "<フィールド名>要素項目の[子供]プロパティは固相の文字項目の配列に設定されている（「/」、U + 002F）は、（「＆」アンパサンド文字なしに、フィールド名でPrimitiveFieldNameインスタンスのリストを分離しました、U + 0026）。大手および/または空白文字アイテムを末尾の<フィールド名>要素項目の[子供]に添加してもよいです。ホワイトスペース文字項目の前および/または固相線文字（「/」、U + 002F）のための任意の文字項目の直後に追加される場合があります。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "&Linked.&ArgumentType",
      "ja": "＆リンクされた。＆ArgumentType"
    },
    {
      "indent": 6,
      "text": "<fieldName>Linked/ArgumentType</fieldName>",
      "ja": "<フィールド名>リンク/ ArgumentType </フィールド名>"
    },
    {
      "indent": 0,
      "text": "9.2.7. ObjectFieldSpec Translation",
      "section_title": true,
      "ja": "9.2.7.  ObjectFieldSpec翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an ObjectFieldSpec where the ObjectOptionalitySpec is absent is an element item with the [local name] \"objectField\".",
      "ja": "ObjectOptionalitySpecが存在しないObjectFieldSpecの翻訳は、[ローカル名「objectField」の要素項目です。"
    },
    {
      "indent": 3,
      "text": "The translation of an ObjectFieldSpec with an ObjectOptionalitySpec of the \"OPTIONAL\" form is an element item with the [local name] \"optional\". An element item with the [local name] \"objectField\" SHALL be added to the [children] of the <optional> element item.",
      "ja": "「OPTIONAL」形のObjectOptionalitySpecとObjectFieldSpecの翻訳は、[ローカル名「オプション」の要素項目です。 [ローカル名]を持つ要素項目は「objectFieldは」<オプション>要素項目の[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of an ObjectFieldSpec with an ObjectOptionalitySpec of the \"DEFAULT Object\" form is an element item with the [local name] \"optional\". An element item with the [local name] \"objectField\" SHALL be added to the [children] of the <optional> element item. An element item with the [local name] \"default\" SHALL be appended to the [children] of the <optional> element item. The translation of the Object in the ObjectOptionalitySpec SHALL be added to the [children] or [attributes] of the <default> element item.",
      "ja": "「デフォルトオブジェクト」形のObjectOptionalitySpecとObjectFieldSpecの翻訳は、[ローカル名「オプション」の要素項目です。 [ローカル名]を持つ要素項目は「objectFieldは」<オプション>要素項目の[子供]に追加されるものとします。 [ローカル名]「デフォルト」を持つ要素項目は、<オプション>要素項目の[子供]を添付しなければなりません。 ObjectOptionalitySpecでのオブジェクトの翻訳は、[子供]または<デフォルト>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "An attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the <objectField> element item. The [normalized value] of this attribute item is the objectfieldreference in the ObjectFieldSpec, without the ampersand character ('&', U+0026). An element item with the [local name] \"annotation\" MAY be added to the [children] of the <objectField> element item. The translation of the DefinedObjectClass in the ObjectFieldSpec SHALL be added to the [children] or [attributes] of the <objectField> element item.",
      "ja": "[ローカル名]「名」の属性項目は、<objectField>要素項目の[属性]に追加されるものとします。この属性項目の[正規化値]アンパサンド文字（「＆」、U + 0026）ことなく、ObjectFieldSpecでobjectfieldreferenceあります。 [ローカル名]「注釈」を持つ要素項目は、<objectField>要素項目の[子供]に添加してもよいです。 ObjectFieldSpecでDefinedObjectClassの翻訳は、[子供]または<objectField>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "CLASS { &one TYPE-IDENTIFIER, &two ABSTRACT-SYNTAX OPTIONAL, &three TYPE-IDENTIFIER DEFAULT myObject }",
      "ja": "CLASS {＆一つのタイプ識別子、および2つの抽象構文OPTIONAL、＆3 TYPE-識別子DEFAULT myObjectという}"
    },
    {
      "indent": 6,
      "text": "<class> <objectField name=\"one\" class=\"asnx:TYPE-IDENTIFIER\"/> <optional> <objectField name=\"two\" class=\"asnx:ABSTRACT-SYNTAX\"/> </optional> <optional> <objectField name=\"three\" class=\"asnx:TYPE-IDENTIFIER\"/> <default object=\"tns:myObject\"/> </optional> </class>",
      "ja": "<クラス> <objectField名= \"1\" クラス= \"asnx：TYPE-IDENTIFIER\" /> <オプション> <objectField名= \"2\" クラス= \"asnx抽象構文\" /> </オプション> <オプション> < objectField名= \"3\" クラス= \"asnx：TYPE-IDENTIFIER\" /> <デフォルトのオブジェクト= \"TNS：myObjectという\" /> </オプション> </クラス>"
    },
    {
      "indent": 0,
      "text": "9.2.8. ObjectSetFieldSpec Translation",
      "section_title": true,
      "ja": "9.2.8.  ObjectSetFieldSpec翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an ObjectSetFieldSpec where the ObjectSetOptionalitySpec is absent is an element item with the [local name] \"objectSetField\".",
      "ja": "ObjectSetOptionalitySpecが存在しないObjectSetFieldSpecの翻訳は、[ローカル名「objectSetField」の要素項目です。"
    },
    {
      "indent": 3,
      "text": "The translation of an ObjectSetFieldSpec with an ObjectSetOptionalitySpec of the \"OPTIONAL\" form is an element item with the [local name] \"optional\". An element item with the [local name] \"objectSetField\" SHALL be added to the [children] of the <optional> element item.",
      "ja": "「OPTIONAL」形のObjectSetOptionalitySpecとObjectSetFieldSpecの翻訳は、[ローカル名「オプション」の要素項目です。 [ローカル名]を持つ要素項目は「objectSetFieldは」<オプション>要素項目の[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of an ObjectSetFieldSpec with an ObjectSetOptionalitySpec of the \"DEFAULT ObjectSet\" form is an element item with the [local name] \"optional\". An element item with the [local name] \"objectSetField\" SHALL be added to the [children] of the <optional> element item. An element item with the [local name] \"default\" SHALL be appended to the [children] of the <optional> element item. The translation of the ObjectSet in the ObjectSetOptionalitySpec SHALL be added to the [children] or [attributes] of the <default> element item.",
      "ja": "「DEFAULT objectSetと」形のObjectSetOptionalitySpecとObjectSetFieldSpecの翻訳は、[ローカル名「オプション」の要素項目です。 [ローカル名]を持つ要素項目は「objectSetFieldは」<オプション>要素項目の[子供]に追加されるものとします。 [ローカル名]「デフォルト」を持つ要素項目は、<オプション>要素項目の[子供]を添付しなければなりません。 ObjectSetOptionalitySpecでobjectSetとの翻訳は、[子供]または<デフォルト>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "An attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the <objectSetField> element item. The [normalized value] of this attribute item is the objectsetfieldreference in the ObjectSetFieldSpec, without the ampersand character ('&', U+0026). An element item with the [local name] \"annotation\" MAY be added to the [children] of the <objectSetField> element item. The translation of the DefinedObjectClass in the ObjectSetFieldSpec SHALL be added to the [children] or [attributes] of the <objectSetField> element item.",
      "ja": "[ローカル名]「名」の属性項目は、<objectSetField>要素項目の[属性]に追加されるものとします。この属性項目の[正規化値]アンパサンド文字（「＆」、U + 0026）ことなく、ObjectSetFieldSpecでobjectsetfieldreferenceあります。 [ローカル名]「注釈」を持つ要素項目は、<objectSetField>要素項目の[子供]に添加してもよいです。 ObjectSetFieldSpecでDefinedObjectClassの翻訳は、[子供]または<objectSetField>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "CLASS { &One TYPE-IDENTIFIER, &Two ABSTRACT-SYNTAX OPTIONAL, &Three TYPE-IDENTIFIER DEFAULT { myObject } }",
      "ja": "CLASS {＆一つのタイプ識別子、および2つの抽象構文OPTIONAL、＆三TYPE-識別子DEFAULT {myObjectという}}"
    },
    {
      "indent": 6,
      "text": "<class> <objectSetField name=\"One\" class=\"asnx:TYPE-IDENTIFIER\"/> <optional> <objectSetField name=\"Two\" class=\"asnx:ABSTRACT-SYNTAX\"/> </optional> <optional> <objectSetField name=\"Three\" class=\"asnx:TYPE-IDENTIFIER\"/> <default> <objectSet> <object ref=\"tns:myObject\"/> </objectSet> </default> </optional> </class>",
      "ja": "<クラス> <objectSetField名= \"ワン\" クラス= \"asnx：TYPE-IDENTIFIER\" /> <オプション> <objectSetField名= \"二\" クラス= \"asnx：ABSTRACT-SYNTAX\" /> </オプション> <オプション> < objectSetField名= \"三\" クラス= \"asnx：TYPE-IDENTIFIER\" /> <デフォルト> <objectSetと> <オブジェクトREF = \"TNS：myObjectという\" /> </ objectSetと> </デフォルト> </オプション> </クラス>"
    },
    {
      "indent": 0,
      "text": "10. Translation of Objects",
      "section_title": true,
      "ja": "オブジェクトの10.翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an Object is the translation of the DefinedObject, ObjectDefn, ObjectFromObject, or ParameterizedObject in the Object.",
      "ja": "オブジェクトの翻訳は、オブジェクトでDefinedObject、ObjectDefn、ObjectFromObject、またはParameterizedObjectの翻訳です。"
    },
    {
      "indent": 3,
      "text": "The translation of a ParameterizedObject is described in Section 13.",
      "ja": "ParameterizedObjectの翻訳は、セクション13に記載されています。"
    },
    {
      "indent": 0,
      "text": "10.1. DefinedObject Translation",
      "section_title": true,
      "ja": "10.1.  DefinedObject翻訳"
    },
    {
      "indent": 3,
      "text": "If a DefinedObject is an objectreference (not a DummyReference) or an ExternalObjectReference, then the translation of the DefinedObject is either the attribute form translation of an object reference, or the element form translation of an object reference.",
      "ja": "DefinedObjectはのObjectReference（ないDummyReference）またはExternalObjectReferenceある場合、DefinedObjectの翻訳は、オブジェクト参照の属性形式の変換、またはオブジェクト参照の要素の形態の変換のいずれかです。"
    },
    {
      "indent": 3,
      "text": "The attribute form translation of an object reference is an attribute item with the [local name] \"object\". The [normalized value] of this attribute item is a qualified name for the expanded name of the referenced object definition (see Section 5.1). The attribute form translation SHALL NOT be used if this expanded name is not distinct with respect to the current module and the modules referenced by its <import> element items (see Section 5.1).",
      "ja": "オブジェクト参照の属性形式の変換は、[ローカル名「オブジェクト」の属性項目です。この属性項目の[正規化された値は、（セクション5.1を参照）、参照オブジェクト定義の拡張名の修飾名です。この拡張名は、現在のモジュールに対して、その<インポート>要素のアイテムによって参照されるモジュールと別個でない場合、属性の形式変換を使用してはならない（セクション5.1を参照）。"
    },
    {
      "indent": 3,
      "text": "The element form translation of an object reference is an element item with the [local name] \"object\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the",
      "ja": "オブジェクト参照の要素の形式変換は、[ローカル名「オブジェクト」の要素項目です。 [ローカル名]「注釈」はの[子供]に追加されるかもしれないとの要素項目"
    },
    {
      "indent": 3,
      "text": "<object> element item. An attribute item with the [local name] \"ref\" SHALL be added to the [attributes] of the <object> element item. The [normalized value] of this attribute item is a qualified name for the expanded name of the referenced object definition. If this expanded name is not distinct with respect to the current module and the modules referenced by its <import> element items, then an attribute item with the [local name] \"context\" SHALL be added to the [attributes] of the <object> element item; otherwise, if the module containing the referenced object definition has a schema identity URI, then an attribute item with the [local name] \"context\" MAY be added to the [attributes] of the <object> element item. The [normalized value] of this attribute item is the schema identity URI of the module containing the referenced object definition.",
      "ja": "<オブジェクト>要素アイテム。 [ローカル名]の属性項目は、「refが」<オブジェクト>要素項目の[属性]に追加されるものとします。この属性項目の[正規化値]参照オブジェクト定義の拡張名の修飾名です。この拡張名は、現在のモジュールとその<インポート>要素のアイテムによって参照されるモジュールに対して明確でない場合は、[ローカル名「コンテキスト」の属性項目は、<オブジェクトの[属性]に追加することがSHALL >要素の項目、参照オブジェクトの定義を含むモジュールが、スキーマ同一URIを持つ場合そうでない場合は、次に[ローカル名「コンテキスト」の属性項目が<OBJECT>要素項目の[属性]に加えてもよいです。この属性項目の[正規化された値]は、参照オブジェクト定義を含むモジュールのスキーマ同一URIです。"
    },
    {
      "indent": 6,
      "text": "Aside: If a reference name is not distinct, then the module containing the referenced definition must have a schema identity URI (see Section 5.1).",
      "ja": "脇：参照名が明瞭でない場合は、参照先の定義を含むモジュールは、スキーマのアイデンティティURIを（5.1節を参照）を持っている必要があります。"
    },
    {
      "indent": 3,
      "text": "The translation of the DefinedObject is the same whether the object definition is referenced by an objectreference or an ExternalObjectReference.",
      "ja": "DefinedObjectの翻訳は、オブジェクト定義は、のObjectReferenceまたはExternalObjectReferenceによって参照されるかどうかと同じです。"
    },
    {
      "indent": 3,
      "text": "Usually the translator is free to choose either the attribute form or element form translation for an object reference; however, in some contexts the attribute form is explicitly disallowed.",
      "ja": "通常、翻訳者は、オブジェクト参照の属性フォームまたは要素フォームの翻訳のいずれかを選択する自由です。しかし、いくつかの状況で属性フォームが明示的に許可されていません。"
    },
    {
      "indent": 3,
      "text": "If a DefinedObject is a DummyReference, then the translation of the DefinedObject is the translation of the DummyReference (see Section 13).",
      "ja": "DefinedObjectがDummyReferenceであれば、DefinedObjectの翻訳はDummyReference（セクション13を参照）の翻訳です。"
    },
    {
      "indent": 0,
      "text": "10.2. ObjectDefn Translation",
      "section_title": true,
      "ja": "10.2.  ObjectDefn翻訳"
    },
    {
      "indent": 3,
      "text": "An ObjectDefn that is a DefinedSyntax is first converted to the equivalent DefaultSyntax and then translated.",
      "ja": "DefinedSyntaxは、第1の等価DefaultSyntaxに変換され、次いで翻訳されるObjectDefn。"
    },
    {
      "indent": 3,
      "text": "The translation of an ObjectDefn is an element item with the [local name] \"object\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <object> element item. The translation of each FieldSetting in the DefaultSyntax in the ObjectClassDefn SHALL be appended to the [children] of the <object> element item.",
      "ja": "ObjectDefnの翻訳は、[ローカル名「オブジェクト」の要素項目です。 [ローカル名]を持つ要素項目は、「注釈」は、<オブジェクト>要素項目の[子供]に添加してもよいです。 ObjectClassDefnでDefaultSyntax各FieldSettingの翻訳は、<OBJECT>要素項目の[子供]を添付しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The translation of a FieldSetting is an element item with the [local name] \"field\". An attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the <field> element item. The [normalized value] of this attribute item is the PrimitiveFieldName in the FieldSetting, without the ampersand character ('&', U+0026). The translation of the Type, Value, ValueSet, Object, or ObjectSet in the Setting in the FieldSetting SHALL be added to the [children] or [attributes] of the <field> element item.",
      "ja": "FieldSettingの翻訳は、[ローカル名]「フィールド」を持つ要素項目です。 [ローカル名]「名」の属性項目は、<field>要素項目の[属性]に追加されるものとします。この属性項目の[正規化値]アンパサンド文字（「＆」、U + 0026）ことなく、FieldSettingでPrimitiveFieldNameあります。 FieldSettingの設定を入力し、値、値セット、オブジェクト、またはobjectSetとの翻訳は、[子供]または<field>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "-- This is the governing object class.\nONE-OF-EVERYTHING ::= CLASS {\n    &One,\n    &two    INTEGER,\n    &Three  INTEGER,\n    &four   TYPE-IDENTIFIER,\n    &Five   TYPE-IDENTIFIER\n}",
      "raw": true
    },
    {
      "indent": 6,
      "text": "<namedClass name=\"ONE-OF-EVERYTHING\"> <class> <typeField name=\"One\"/> <valueField name=\"two\" type=\"asnx:INTEGER\"/> <valueSetField name=\"Three\" type=\"asnx:INTEGER\"/> <objectField name=\"four\" class=\"asnx:TYPE-IDENTIFIER\"/> <objectSetField name=\"Five\" class=\"asnx:TYPE-IDENTIFIER\"/> </class> </namedClass>",
      "ja": "<namedClass名= \"ONE-OF-EVERYTHING\"> <クラス> <typeField名= \"ワン\" /> <valueField名= \"2\" タイプ= \"asnx：INTEGER\" /> <valueSetField名= \"三\" タイプ=」 asnx：INTEGER \"/> <objectField名=\" 4」クラス= \"asnx：TYPE-IDENTIFIER\" /> <objectSetField名= \"ファイブ\" クラス= \"asnx：TYPE-IDENTIFIER\" /> </クラス> </ namedClass>"
    },
    {
      "indent": 6,
      "text": "mixedBag ONE-OF-EVERYTHING ::= {\n    &One    BOOLEAN,\n    &two    99,\n    &Three  { 1 | 2 },\n    &four   myObject,\n    &Five   { myObject }\n}",
      "raw": true
    },
    {
      "indent": 6,
      "text": "<namedObject name=\"mixedBag\" class=\"tns:ONE-OF-EVERYTHING\"> <object> <field name=\"One\" type=\"asnx:BOOLEAN\"/> <field name=\"two\" literalValue=\"99\"/> <field name=\"Three\"> <valueSet> <union> <literalValue>1</literalValue> <literalValue>2</literalValue> </union> </valueSet> </field> <field name=\"four\" object=\"tns:myObject\"/> <field name=\"Five\"> <objectSet> <object ref=\"tns:myObject\"/>",
      "ja": "<namedObject名= \"mixedBag\" クラス= \"TNS：ONE-OF-EVERYTHING\"> <オブジェクト> <フィールド名= \"1\" タイプ= \"asnx：BOOLEAN\" /> <フィールド名= \"2\" literalValue = \"99\" /> <フィールド名= \"三\"> <値セット> <組合> <literalValue> 1 </ literalValue> <literalValue> 2 </ literalValue> </組合> </値セット> </分野> <フィールド名= \"4 \"オブジェクト=\" TNS：myObjectという \"/> <フィールド名=\" ファイブ \"> <objectSetと> <オブジェクトREF =\" TNS：myObjectという \"/>"
    },
    {
      "indent": 6,
      "text": " </objectSet> </field> </object> </namedObject>",
      "ja": "</ objectSetと> </分野> </ OBJECT> </ namedObject>"
    },
    {
      "indent": 0,
      "text": "10.3. ObjectFromObject Translation",
      "section_title": true,
      "ja": "10.3.  ObjectFromObject翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an ObjectFromObject is an element item with the [local name] \"object\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <object> element item. An element item with the [local name] \"fromObjects\" SHALL be appended to the [children] of the <object> element item.",
      "ja": "ObjectFromObjectの翻訳は、[ローカル名「オブジェクト」の要素項目です。 [ローカル名]を持つ要素項目は、「注釈」は、<オブジェクト>要素項目の[子供]に添加してもよいです。 [ローカル名「fromObjects」の要素項目が<OBJECT>要素項目の[子供]を添付しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The translation of the ReferencedObjects instance in the ObjectFromObject SHALL be added to the [children] or [attributes] of the <fromObjects> element item.",
      "ja": "ObjectFromObjectでReferencedObjectsインスタンスの変換は、[子供]または<fromObjects>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of the FieldName in the ObjectFromObject SHALL be added to the [children] or [attributes] of the <fromObjects> element item.",
      "ja": "ObjectFromObjectでのフィールド名の翻訳は、[子供]または<fromObjects>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 0,
      "text": "11. Translation of Object Sets",
      "section_title": true,
      "ja": "オブジェクトセットの11翻訳"
    },
    {
      "indent": 3,
      "text": "If an ObjectSet matches the form \"{ DefinedObjectSet }\" (i.e., a DefinedObjectSet in an ObjectSetElements instance in an Elements instance in a lone IntersectionElements instance in a lone Intersections instance in a Unions instance in an ElementSetSpec in a RootElementSetSpec in an ObjectSetSpec without an AdditionalElementSetSpec), then the translator MAY use the translation of the DefinedObjectSet as the translation of the ObjectSet; otherwise, the translation of an ObjectSet is an element item with the [local name] \"objectSet\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <objectSet> element item. The translation of the ObjectSetSpec in the ObjectSet SHALL be appended to the [children] of the <objectSet> element item.",
      "ja": "objectSetとはAdditionalElementSetSpecなしObjectSetSpecでRootElementSetSpecでElementSetSpecの組合インスタンスで孤立交差点インスタンスで孤立IntersectionElementsインスタンス内の要素インスタンス内ObjectSetElementsインスタンスで「{DefinedObjectSet}」（すなわち、DefinedObjectSet形態と一致する場合）、その後、翻訳者はobjectSetとの訳語としてDefinedObjectSetの翻訳を使用することができます。それ以外の場合は、objectSetとの翻訳は、[ローカル名]「objectSetと」と要素項目です。 [ローカル名]「注釈」を持つ要素項目は、<objectSetと>要素項目の[子供]に添加してもよいです。 objectSetとでObjectSetSpecの翻訳は、<objectSetと>要素項目の[子供]を添付しなければなりません。"
    },
    {
      "indent": 6,
      "text": "Aside: An ObjectSet that is directly a DefinedObjectSet is a notational capability that does not exist in ASN.1, but is allowed in ASN.X to avoid excessive nesting of <objectSet> element items in the expansion of parameterized definitions.",
      "ja": "脇：直接DefinedObjectSetあるobjectSetとは、ASN.1に存在しない表記上の機能ですが、パラメータ化の定義の拡大に<objectSetと>要素項目の過度のネスティングを避けるためにASN.Xで許可されています。"
    },
    {
      "indent": 3,
      "text": "If an ObjectSetSpec contains only a RootElementSetSpec, then the translation of the ObjectSetSpec is the translation of the ElementSetSpec in the RootElementSetSpec.",
      "ja": "ObjectSetSpecだけRootElementSetSpecが含まれている場合、ObjectSetSpecの翻訳はRootElementSetSpecでElementSetSpecの翻訳です。"
    },
    {
      "indent": 3,
      "text": "If an ObjectSetSpec contains a RootElementSetSpec and an ellipsis (\"...\"), then the translation of the ObjectSetSpec is the translation of the ElementSetSpec in the RootElementSetSpec followed by an element item with the [local name] \"extension\". If an AdditionalElementSetSpec is present, then the translation of the ElementSetSpec in the AdditionalElementSetSpec SHALL be added to the [children] of the <extension> element item.",
      "ja": "ObjectSetSpecはRootElementSetSpecと省略記号（「...」）が含まれている場合、次いでObjectSetSpecの翻訳は、[ローカル名 『拡張子』の要素項目続いRootElementSetSpecにおけるElementSetSpecの翻訳です。 AdditionalElementSetSpecが存在する場合、AdditionalElementSetSpecでElementSetSpecの翻訳は、<拡張>要素項目の[子供]に追加することがSHALL。"
    },
    {
      "indent": 3,
      "text": "If an ObjectSetSpec does not contain a RootElementSetSpec, then the translation of the ObjectSetSpec is an element item with the [local name] \"extension\". If an AdditionalElementSetSpec is present, then the translation of the ElementSetSpec in the AdditionalElementSetSpec SHALL be added to the [children] of the <extension> element item.",
      "ja": "ObjectSetSpecはRootElementSetSpecが含まれていない場合は、ObjectSetSpecの翻訳は、[ローカル名]「拡張子」を持つ要素項目です。 AdditionalElementSetSpecが存在する場合、AdditionalElementSetSpecでElementSetSpecの翻訳は、<拡張>要素項目の[子供]に追加することがSHALL。"
    },
    {
      "indent": 3,
      "text": "Nested within the ElementSetSpec will be one or more ObjectSetElements instances.",
      "ja": "ElementSetSpec内にネストすることは、1つのまたは複数のObjectSetElementsインスタンスになります。"
    },
    {
      "indent": 0,
      "text": "11.1. DefinedObjectSet Translation",
      "section_title": true,
      "ja": "11.1.  DefinedObjectSet翻訳"
    },
    {
      "indent": 3,
      "text": "If a DefinedObjectSet is an objectsetreference (not a DummyReference) or an ExternalObjectSetReference, then the translation of the DefinedObjectSet is either the attribute form translation of an object set reference, or the element form translation of an object set reference.",
      "ja": "DefinedObjectSetはobjectsetreference（ないDummyReference）またはExternalObjectSetReferenceある場合、DefinedObjectSetの翻訳は、対象設定基準の属性形式の変換、またはオブジェクトセットの基準の要素フォームの変換のいずれかです。"
    },
    {
      "indent": 3,
      "text": "The attribute form translation of an object set reference is an attribute item with the [local name] \"objectSet\". The [normalized value] of this attribute item is a qualified name for the expanded name of the referenced object set definition (see Section 5.1). The attribute form translation SHALL NOT be used if this expanded name is not distinct with respect to the current module and the modules referenced by its <import> element items (see Section 5.1).",
      "ja": "オブジェクト設定された基準の属性形式の変換は、[ローカル名「objectSetと」を持つ属性項目です。この属性項目の[正規化された値]は、参照オブジェクトセット定義の拡張名の修飾名である（5.1節を参照）。この拡張名は、現在のモジュールに対して、その<インポート>要素のアイテムによって参照されるモジュールと別個でない場合、属性の形式変換を使用してはならない（セクション5.1を参照）。"
    },
    {
      "indent": 3,
      "text": "The element form translation of an object set reference is an element item with the [local name] \"objectSet\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <objectSet> element item. An attribute item with the [local name] \"ref\" SHALL be added to the [attributes] of the <objectSet> element item. The [normalized value] of this attribute item is a qualified name for the expanded name of the referenced object set definition. If this expanded name is not distinct with respect to the current module and the modules referenced by its <import> element items, then an attribute item with the [local name] \"context\" SHALL be added to the [attributes] of the <objectSet> element item; otherwise, if the module containing the referenced object set definition has a schema identity URI, then an attribute item with the [local name] \"context\"",
      "ja": "オブジェクト設定された基準の要素フォーム翻訳は[ローカル名「objectSetと」の要素項目です。 [ローカル名]「注釈」を持つ要素項目は、<objectSetと>要素項目の[子供]に添加してもよいです。 [ローカル名]の「参照」を持つ属性項目は、<objectSetと>要素項目の[属性]に追加されるものとします。この属性項目の[正規化値]参照先オブジェクトセット定義の拡張名の修飾名です。この拡張名は、現在のモジュールとその<インポート>要素のアイテムによって参照されるモジュールに対して明確でない場合は、[ローカル名「コンテキスト」の属性項目は<objectSetとの[属性]に追加することがSHALL >要素の項目、そうでない場合、参照されるオブジェクトセット定義を含むモジュールが、スキーマの同一URI、[ローカル名「コンテキスト」と、属性項目を有する場合"
    },
    {
      "indent": 3,
      "text": "MAY be added to the [attributes] of the <objectSet> element item. The [normalized value] of this attribute item is the schema identity URI of the module containing the referenced object set definition.",
      "ja": "<objectSetと>要素項目の[属性]に加えてもよいです。この属性項目の[正規化値]参照先オブジェクトセット定義を含むモジュールのスキーマ同一URIです。"
    },
    {
      "indent": 6,
      "text": "Aside: If a reference name is not distinct, then the module containing the referenced definition must have a schema identity URI (see Section 5.1).",
      "ja": "脇：参照名が明瞭でない場合は、参照先の定義を含むモジュールは、スキーマのアイデンティティURIを（5.1節を参照）を持っている必要があります。"
    },
    {
      "indent": 3,
      "text": "The translation of the DefinedObjectSet is the same whether the object definition is referenced by an objectsetreference or an ExternalObjectSetReference.",
      "ja": "DefinedObjectSetの翻訳は、オブジェクト定義がobjectsetreference又はExternalObjectSetReferenceによって参照されるかどうかと同じです。"
    },
    {
      "indent": 3,
      "text": "Usually the translator is free to choose either the attribute form or element form translation for an object set reference; however, in some contexts the attribute form is explicitly disallowed.",
      "ja": "通常、翻訳者は、オブジェクトセット・リファレンスの属性フォームまたは要素フォームの翻訳のいずれかを選択する自由です。しかし、いくつかの状況で属性フォームが明示的に許可されていません。"
    },
    {
      "indent": 3,
      "text": "If a DefinedObjectSet is a DummyReference, then the translation of the DefinedObjectSet is the translation of the DummyReference (see Section 13).",
      "ja": "DefinedObjectSetがDummyReferenceであれば、DefinedObjectSetの翻訳はDummyReference（セクション13を参照）の翻訳です。"
    },
    {
      "indent": 0,
      "text": "11.2. ObjectSetElements Translation",
      "section_title": true,
      "ja": "11.2.  ObjectSetElements翻訳"
    },
    {
      "indent": 3,
      "text": "If an ObjectSetElements instance is an Object, then the translation of the ObjectSetElements instance is the translation of the Object, except that the attribute form of the DefinedObject translation SHALL NOT be used if the Object is a DefinedObject.",
      "ja": "ObjectSetElementsインスタンスがオブジェクトである場合には、ObjectSetElementsインスタンスの翻訳は、オブジェクトがDefinedObjectある場合DefinedObject翻訳の属性フォームは使用してはならないことを除いて、オブジェクトの翻訳です。"
    },
    {
      "indent": 3,
      "text": "If an ObjectSetElements instance is a DefinedObjectSet, then the translation of the ObjectSetElements instance is the translation of the DefinedObjectSet, except that the attribute form of the DefinedObjectSet translation SHALL NOT be used.",
      "ja": "ObjectSetElementsインスタンスがDefinedObjectSetであれば、ObjectSetElementsインスタンスの翻訳はDefinedObjectSet翻訳の属性フォームは使用してはならないことを除いて、DefinedObjectSetの翻訳です。"
    },
    {
      "indent": 3,
      "text": "If an ObjectSetElements instance is an ObjectSetFromObjects, then the translation of the ObjectSetElements instance is the translation of the ObjectSetFromObjects.",
      "ja": "ObjectSetElementsインスタンスがObjectSetFromObjectsであれば、ObjectSetElementsインスタンスの翻訳はObjectSetFromObjectsの翻訳です。"
    },
    {
      "indent": 3,
      "text": "If an ObjectSetElements instance is a ParameterizedObjectSet, then the translation of the ObjectSetElements instance is the translation of the ParameterizedObjectSet (see Section 13).",
      "ja": "ObjectSetElementsインスタンスがParameterizedObjectSetある場合、ObjectSetElementsインスタンスの変換はParameterizedObjectSet（セクション13を参照）の翻訳です。"
    },
    {
      "indent": 6,
      "text": "Aside: The in-line expansion of a ParameterizedObjectSet results in an ObjectSet. An ObjectSetElements instance that is an ObjectSet is a notational capability that does not exist in ASN.1, but is allowed in ASN.X to avoid the need to manufacture a reference name for the expanded parameterized definition.",
      "ja": "脇：objectSetとでParameterizedObjectSet結果のインライン展開。 objectSetとあるObjectSetElementsインスタンスは、ASN.1に存在しない表記上の機能ですが、拡張され、パラメータ化定義のための参照名を製造する必要性を回避するためASN.Xで許可されています。"
    },
    {
      "indent": 0,
      "text": "11.2.1. ObjectSetFromObjects Translation",
      "section_title": true,
      "ja": "11.2.1.  ObjectSetFromObjects翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an ObjectSetFromObjects instance is an element item with the [local name] \"objectSet\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <objectSet> element item. An element item with the [local name] \"fromObjects\" SHALL be appended to the [children] of the <objectSet> element item.",
      "ja": "ObjectSetFromObjectsインスタンスの変換は、[ローカル名「objectSetと」の要素項目です。 [ローカル名]「注釈」を持つ要素項目は、<objectSetと>要素項目の[子供]に添加してもよいです。 [ローカル名]「fromObjects」と要素項目は、<objectSetと>要素項目の[子供]を添付しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The translation of the ReferencedObjects instance in the ObjectSetFromObjects SHALL be added to the [children] or [attributes] of the <fromObjects> element item.",
      "ja": "ObjectSetFromObjectsでReferencedObjectsインスタンスの変換は、[子供]または<fromObjects>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of the FieldName in the ObjectSetFromObjects SHALL be added to the [children] or [attributes] of the <fromObjects> element item.",
      "ja": "ObjectSetFromObjectsでのフィールド名の翻訳は、[子供]または<fromObjects>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 0,
      "text": "12. Translation of Information From Objects",
      "section_title": true,
      "ja": "オブジェクトからの情報の12翻訳"
    },
    {
      "indent": 3,
      "text": "If a ReferencedObjects instance is a DefinedObject (not a DummyReference), then the translation of the ReferencedObjects instance is the translation of the DefinedObject.",
      "ja": "ReferencedObjectsインスタンスがDefinedObject（ないDummyReference）であれば、ReferencedObjectsインスタンスの翻訳はDefinedObjectの翻訳です。"
    },
    {
      "indent": 3,
      "text": "If a ReferencedObjects instance is a DefinedObjectSet (not a DummyReference), then the translation of the ReferencedObjects instance is the translation of the DefinedObjectSet.",
      "ja": "ReferencedObjectsインスタンスがDefinedObjectSet（ないDummyReference）であれば、ReferencedObjectsインスタンスの翻訳はDefinedObjectSetの翻訳です。"
    },
    {
      "indent": 3,
      "text": "If a ReferencedObjects instance is a DummyReference, ParameterizedObject, or ParameterizedObjectSet, then the translation of the ReferencedObjects instance is the translation of that DummyReference, ParameterizedObject, or ParameterizedObjectSet (see Section 13).",
      "ja": "ReferencedObjectsインスタンスDummyReference、ParameterizedObject、又はParameterizedObjectSetある場合、ReferencedObjectsインスタンスの変換は、そのDummyReferenceの翻訳、ParameterizedObject、またはParameterizedObjectSet（セクション13を参照します）。"
    },
    {
      "indent": 6,
      "text": "Aside: The in-line expansion of a ParameterizedObject or ParameterizedObjectSet results in an Object or ObjectSet, respectively. A ReferencedObjects instance that is an Object or ObjectSet is a notational capability that does not exist in ASN.1, but is allowed in ASN.X to avoid the need to manufacture a reference name for an expanded parameterized definition.",
      "ja": "脇：オブジェクトまたはそれぞれobjectSetと、内ParameterizedObject又はParameterizedObjectSet結果のインライン展開。オブジェクトまたはobjectSetとなるReferencedObjectsインスタンスはASN.1に存在しない表記能力であるが、拡張パラメータ化された定義のための参照名を製造する必要性を回避するためにASN.Xで許可されています。"
    },
    {
      "indent": 0,
      "text": "13. Translation of Parameterized Definitions",
      "section_title": true,
      "ja": "パラメータ化された定義の13翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an ASN.1 specification into ASN.X replaces any DummyReference [X.683] or reference to a parameterized definition [X.683] with the definition expanded in-line (except for a special case involving recursive parameterized types). For example, a ParameterizedObject is replaced by the Object on the right-hand side of the referenced ParameterizedObjectAssignment.",
      "ja": "ASN.XにASN.1仕様の翻訳は、[X.683]（再帰的なパラメータ化された型を含む特別な場合を除く）、インライン展開定義でパラメータ定義に任意DummyReference [X.683]または参照を置き換えます。例えば、ParameterizedObjectが参照ParameterizedObjectAssignmentの右側のオブジェクトによって置き換えられます。"
    },
    {
      "indent": 3,
      "text": "The definition that substitutes for a DummyReference or parameterized reference (e.g., the Object that substitutes for a ParameterizedObject) potentially comes from a different module from the reference. Expanding a DummyReference or parameterized reference in-line puts the substitute definition into the context of the module containing the reference, which could therefore alter the interpretation of the substitute definition.",
      "ja": "DummyReferenceまたはパラメータ参照に代わる定義が（例えば、ParameterizedObjectを代替オブジェクト）は、潜在的に、基準とは異なるモジュールから来ます。インラインDummyReferenceまたはパラメータの参照を展開すると、従って代替の定義の解釈を変える可能性がある、参照を含むモジュールのコンテキストに代替定義を置きます。"
    },
    {
      "indent": 3,
      "text": "A type definition is potentially dependent on the TagDefault and ExtensionDefault of the module in which it appears, and may also be affected by encoding instructions in an XML Encoding Rules (XER) [X.693] encoding control section [X.693-1]. Other kinds of definitions are not dependent on the module context; however, type definitions can be nested within the other kinds of definitions, so a change of context can still be significant.",
      "ja": "型定義は、それが表示されるモジュールのTagDefaultとExtensionDefaultに潜在的に依存し、また、XMLエンコーディング規則（XER）の指示を符号化することによって影響を受ける可能性がある[X.693]をコードする制御部[X.693-1] 。定義は他の種類のモジュールのコンテキストに依存していません。しかし、型定義は、定義の他の種類の中に入れ子にすることができるので、コンテキストの変化は依然として重要であることができます。"
    },
    {
      "indent": 6,
      "text": "Aside: Type definitions are not dependent on their module's RXER or Generic String Encoding Rules (GSER) [GSER] encoding control section [RXEREI][GSEREI] (as they are currently defined), so the presence of an encoding control section for RXER or GSER is not significant in a change of context.",
      "ja": "脇：タイプ定義は、それらのモジュールのRXERまたはジェネリック文字符号化規則（GSER）GSER]コード制御部[RXEREI] [GSEREI（それらが現在定義されているなど）、そうRXERする符号化制御部の存在に依存しないか、またはGSERは、状況の変化では重要ではありません。"
    },
    {
      "indent": 3,
      "text": "The remainder of this section describes how and when a change of context is indicated in the ASN.X translation of a DummyReference or parameterized reference.",
      "ja": "このセクションの残りの部分は、方法について説明し、状況の変化をDummyReferenceまたはパラメータ参照のASN.X翻訳に記載されている場合。"
    },
    {
      "indent": 3,
      "text": "In any instance of use, the module containing the DummyReference or parameterized reference is the referencing module, and the module providing the substitute definition is the referenced module. The referenced and referencing modules may be the same module.",
      "ja": "使用のいずれの場合においても、DummyReferenceまたはパラメータの参照を含むモジュールは、参照するモジュールであり、代替の定義を提供するモジュールは、参照するモジュールです。参照及び参照モジュールは、同じモジュールであってもよいです。"
    },
    {
      "indent": 3,
      "text": "In the case of a ParameterizedType, the substitute definition is the Type on the right-hand side of the referenced ParameterizedTypeAssignment.",
      "ja": "ParameterizedTypeの場合には、代替の定義は、参照ParameterizedTypeAssignmentの右側のタイプです。"
    },
    {
      "indent": 3,
      "text": "In the case of a ParameterizedValueSetType, the substitute definition is the constrained type on the right-hand side of the notional ParameterizedTypeAssignment equivalent to the referenced ParameterizedValueSetTypeAssignment (see Clause 15.8 of X.680 [X.680]).",
      "ja": "ParameterizedValueSetTypeの場合には、代替の定義は、参照ParameterizedValueSetTypeAssignment（X.680の節15.8 [X.680]を参照）に概念的ParameterizedTypeAssignment同等の右側上に拘束型です。"
    },
    {
      "indent": 3,
      "text": "In the case of a ParameterizedValue, the substitute definition is the Value on the right-hand side of the referenced ParameterizedValueAssignment.",
      "ja": "ParameterizedValueの場合には、代替の定義は、参照ParameterizedValueAssignmentの右側の値です。"
    },
    {
      "indent": 3,
      "text": "In the case of a ParameterizedObjectClass, the substitute definition is the ObjectClass on the right-hand side of the referenced ParameterizedObjectClassAssignment.",
      "ja": "ParameterizedObjectClassの場合には、代替定義は、参照ParameterizedObjectClassAssignmentの右側のObjectClassあります。"
    },
    {
      "indent": 3,
      "text": "In the case of a ParameterizedObject, the substitute definition is the Object on the right-hand side of the referenced ParameterizedObjectAssignment.",
      "ja": "ParameterizedObjectの場合には、代替の定義は、参照ParameterizedObjectAssignmentの右側上のオブジェクトです。"
    },
    {
      "indent": 3,
      "text": "In the case of a ParameterizedObjectSet, the substitute definition is the ObjectSet on the right-hand side of the referenced ParameterizedObjectSetAssignment.",
      "ja": "ParameterizedObjectSetの場合には、代替の定義は、参照ParameterizedObjectSetAssignmentの右側にobjectSetとなります。"
    },
    {
      "indent": 3,
      "text": "If the ActualParameter corresponding to a DummyReference is not a ValueSet, then the substitute definition for that DummyReference is the Type, Value, DefinedObjectClass, Object, or ObjectSet in the ActualParameter.",
      "ja": "DummyReferenceに対応ActualParameterが値セットされていない場合、そのDummyReferenceの代替定義は、タイプ、値、DefinedObjectClass、オブジェクト、またはobjectSetとActualParameterです。"
    },
    {
      "indent": 3,
      "text": "If the ActualParameter corresponding to a DummyReference is a ValueSet, then the substitute definition for that DummyReference is the notional constrained type equivalent to the ValueSet; the ElementSetSpecs of the ValueSet contributes to the constraint of the constrained type, and the governor of the Parameter corresponding to the ActualParameter is used as the parent type that is constrained.",
      "ja": "DummyReferenceに対応ActualParameterが値セットである場合、そのDummyReferenceの代替定義は、値セットに相当する概念的な拘束型です。値セットのElementSetSpecsは、拘束型の制約に寄与し、ActualParameterに対応するパラメータのガバナが制約される親型として使用されます。"
    },
    {
      "indent": 3,
      "text": "Definition (interchangeable): The contexts of the referencing and referenced modules are interchangeable with respect to interpreting the substitute definition if:",
      "ja": "（交換可能な）定義：参照のコンテキストと参照モジュールがあれば代替定義を解釈に関して交換可能です。"
    },
    {
      "indent": 3,
      "text": "(1) the referenced module is the referencing module and does not contain an XER encoding control section, or",
      "ja": "（1）参照されるモジュールは、参照するモジュールであり、XER符号化制御部を含んでいない、または"
    },
    {
      "indent": 3,
      "text": "(2) the referenced module and referencing module have the same TagDefault (where an absent TagDefault is taken to be equivalent to \"EXPLICIT TAGS\"), the referenced module and referencing module have the same ExtensionDefault, and neither module has an XER encoding control section.",
      "ja": "（2）参照モジュールと参照モジュールは、（不在TagDefaultは「明示的タグ」と同等であるとみなされる）同じTagDefaultを有する、参照モジュールと参照モジュールが同じExtensionDefaultを有しており、いずれもモジュールは、XER符号化制御部を有します。"
    },
    {
      "indent": 6,
      "text": "Aside: A module with an XER encoding control section is not considered to have a context interchangeable with another module, including itself, because the typereference by which a substitute type definition is identified may appear in a TargetList in the XER encoding control section of the referenced module, and because the in-line expansion of a substitute definition may cause its text to come within the scope of a TargetList in the XER encoding control section of the referencing module that would not apply otherwise.",
      "ja": "脇：代替型定義が識別されるtypereferenceが参照のXER符号化制御部においてTARGETLISTに表示される可能性があるため、XER符号化制御部は、自身を含め、他のモジュールと交換コンテキストを持つように考慮されていないとモジュールモジュール、および代替定義のインライン展開は、そのテキストが他適用されない参照モジュールのXER符号化制御部においてTARGETLISTの範囲内にさせる可能性があるため。"
    },
    {
      "indent": 3,
      "text": "Definition (recursively contained): A ParameterizedType is recursively contained if its translation will be nested within the translation (i.e., in-line expansion) of another ParameterizedType to which it is equivalent. A ParameterizedValueSetType is recursively contained if its translation will be nested within the translation of another ParameterizedValueSetType to which it is equivalent.",
      "ja": "定義（再帰的に含まれる）、その翻訳は、それが等価であるために、別のは、ParameterizedTypeの翻訳（すなわち、インライン展開）内にネストされる場合は、ParameterizedTypeを再帰的に含まれます。 ParameterizedValueSetTypeは、再帰的にその翻訳が別のParameterizedValueSetTypeの翻訳内にネストされる場合、それは同等であるためにどの含まれています。"
    },
    {
      "indent": 6,
      "text": "Aside: ASN.1 does not permit the other kinds of parameterized reference to be recursive.",
      "ja": "脇：ASN.1は再帰的であることをパラメータ化参照の他の種類を許可していません。"
    },
    {
      "indent": 3,
      "text": "The translation of a DummyReference, a ParameterizedType that is not recursively contained, a ParameterizedValue, a ParameterizedValueSetType that is not recursively contained, a ParameterizedObjectClass, a ParameterizedObject, or a ParameterizedObjectSet is either:",
      "ja": "DummyReferenceの翻訳、再帰的に含まれていないは、ParameterizedType、ParameterizedValue、再帰的に含まれていないParameterizedValueSetType、ParameterizedObjectClass、ParameterizedObject、またはParameterizedObjectSetのいずれかです："
    },
    {
      "indent": 3,
      "text": "(a) the translation of the substitute definition, or",
      "ja": "（a）は、代替の定義の翻訳、または"
    },
    {
      "indent": 3,
      "text": "(b) an element item with the [local name] \"type\" if the substitute definition is a Type, \"value\" if the substitute definition is a Value, \"class\" if the substitute definition is an ObjectClass or DefinedObjectClass, \"object\" if the substitute definition is an Object, or \"objectSet\" if the substitute definition is an ObjectSet. A fully expanded reference (described shortly) SHALL be added to the [children] of the element item.",
      "ja": "（B）[ローカル名「タイプ」の要素項目を代替定義がタイプである場合、「値」代替定義がObjectClassの又はDefinedObjectClass、「オブジェクト」である場合に代替定義は値「クラス」である場合代替定義がobjectSetとされた場合、代替の定義は、オブジェクト、または「objectSetと」である場合。 （簡単に説明）完全に拡張参照は、要素項目の[子供]に追加することがSHALL。"
    },
    {
      "indent": 3,
      "text": "The translation in case (b) is always allowed and provides information to identify the referenced module and the referenced definition.",
      "ja": "ケース（B）における変換が常に許可され、参照モジュールと、参照定義を識別するための情報を提供しています。"
    },
    {
      "indent": 3,
      "text": "The translation in case (a) MAY be used instead if and only if the contexts of the referencing and referenced modules are interchangeable, or the contexts of the referencing and referenced modules are not interchangeable, but the difference between them does not affect how the substitute definition is interpreted.",
      "ja": "場合、翻訳は（a）の場合を用いてもよいし、参照のコンテキストと参照先のモジュールは互換性があり、または参照のコンテキストと参照先のモジュールは交換できませんが、その差はどの代替には影響しない場合にのみ、定義が解釈されます。"
    },
    {
      "indent": 6,
      "text": "Aside: There are many ways in which the substitute definition can be unaffected by a difference between the contexts of the referencing and referenced modules. One example would be where the referencing and referenced modules differ only in their TagDefault, but the substitute definition does not contain any TaggedType notation.",
      "ja": "脇：代替定義が参照の文脈と参照モジュール間の違いによる影響を受けないことができる多くの方法があります。参照、参照モジュールがそのTagDefaultのみが異なる場合、一例ではあろうが、代替定義は任意TaggedType表記が含まれていません。"
    },
    {
      "indent": 3,
      "text": "Note that if the translation in case (a) is used, then the referencing module is still the referencing module when considering a nested in-line expansion. If the translation in case (b) is used, then the referenced module becomes the referencing module when considering a nested in-line expansion.",
      "ja": "ケース（A）で変換が使用される場合、ネストされたインライン展開を考慮した場合、その後、参照モジュールが依然として参照モジュールであることに留意されたいです。ケース（B）における変換が使用される場合、ネストされたインライン展開を考慮した場合、その後、参照モジュールは、参照モジュールとなります。"
    },
    {
      "indent": 3,
      "text": "If case (a) is used for the translation of a DummyReference where the substitute definition is a Type, then an attribute form translation of the substitute definition SHALL NOT be used, and an attribute item with the [local name] \"explicit\" and [normalized value] \"true\" or \"1\" SHALL be added to the [attributes] of the <type> element item resulting from the translation of the substitute definition. Where the automatic tagging transformation applies [X.680], this attribute item indicates that explicit tagging applies to the type instead of the usual implicit tagging.",
      "ja": "ケース（a）は、代替の定義は、次に種類、代替定義の属性形式の変換であるDummyReferenceの翻訳のために使用される場合に使用し、[ローカル名]の属性項目「明示的」とされないもの[正規化された値「真」または「1」が代替定義の翻訳から生じる、<type>要素項目の[属性]に追加されるものとします。自動タグ付け変換は[X.680]適用される場合、この属性項目は、明示的なタグ付けではなく、通常の暗黙のタグのタイプに適用されることを示しています。"
    },
    {
      "indent": 3,
      "text": "If case (b) is used for the translation of a DummyReference where the substitute definition is a Type, then an attribute item with the [local name] \"explicit\" and [normalized value] \"true\" or \"1\" SHALL be added to the [attributes] of the <type> element item generated by case (b).",
      "ja": "ケース（b）は代替定義が型でDummyReferenceの変換に使用される場合、[ローカル名「明示的な」と[正規化された値]の属性項目「true」または「1」に追加することがSHALL <タイプ>ケース（b）で生成された要素項目の[属性]。"
    },
    {
      "indent": 3,
      "text": "A fully expanded reference is an element item with the [local name] \"expanded\". Except in the case of a DummyReference, the reference name is indicated by an attribute item with the [local name] \"name\" added to the [attributes] of the <expanded> element item.",
      "ja": "完全に拡張参照は、[ローカル名「展開」の要素項目です。 DummyReferenceの場合を除いて、参照名は、[ローカル名「名前」の属性項目で示されている<拡張>要素項目の[属性]に加えました。"
    },
    {
      "indent": 3,
      "text": "In the case of a ParameterizedType or ParameterizedValueSetType, the [normalized value] of this attribute item is the typereference of the ParameterizedType or ParameterizedValueSetType.",
      "ja": "この属性項目のは、ParameterizedType又はParameterizedValueSetType、[正規化値]の場合には、ParameterizedType又はParameterizedValueSetTypeのtypereferenceです。"
    },
    {
      "indent": 3,
      "text": "In the case of a ParameterizedValue, the [normalized value] of this attribute item is the valuereference of the ParameterizedValue.",
      "ja": "ParameterizedValueの場合には、この属性項目の[正規化値] ParameterizedValueのvaluereferenceあります。"
    },
    {
      "indent": 3,
      "text": "In the case of a ParameterizedObjectClass, the [normalized value] of this attribute item is the objectclassreference of the ParameterizedObjectClass.",
      "ja": "ParameterizedObjectClassの場合には、この属性項目の[正規化値] ParameterizedObjectClassのobjectclassreferenceあります。"
    },
    {
      "indent": 3,
      "text": "In the case of a ParameterizedObject, the [normalized value] of this attribute item is the objectreference of the ParameterizedObject.",
      "ja": "ParameterizedObjectの場合には、この属性項目の[正規化値] ParameterizedObjectののObjectReferenceです。"
    },
    {
      "indent": 3,
      "text": "In the case of a ParameterizedObjectSet, the [normalized value] of this attribute item is the objectsetreference of the ParameterizedObjectSet.",
      "ja": "ParameterizedObjectSetの場合には、この属性項目の[正規化値] ParameterizedObjectSetのobjectsetreferenceあります。"
    },
    {
      "indent": 3,
      "text": "The \"name\" attribute item MAY be omitted if:",
      "ja": "「name」属性項目があれば省略されるかもしれません。"
    },
    {
      "indent": 3,
      "text": "(1) the conditions permitting the use of the translation in case (a) are satisfied, or",
      "ja": "（1）（a）の場合における翻訳の使用を可能にする条件が満たされている、又は"
    },
    {
      "indent": 3,
      "text": "(2) the reference is not a typereference, or (3) the reference is a typereference that does not appear in any TargetList in an XER encoding control section of the referenced module.",
      "ja": "（2）参照はtypereferenceない、または（3）参照は、参照モジュールのXER符号化制御部の任意の目的リストには表示されませんtypereferenceあります。"
    },
    {
      "indent": 3,
      "text": "The \"name\" attribute SHALL NOT appear in the translation of a DummyReference.",
      "ja": "「name」属性は、DummyReferenceの翻訳には表示されないものとします。"
    },
    {
      "indent": 3,
      "text": "The referenced module is indicated by an element item with the [local name] \"module\" added to the [children] of the <expanded> element item. The <module> element item MAY be omitted if the conditions permitting the use of the translation in case (a) are satisfied, or if the referencing module is the referenced module. When the <module> element item is present:",
      "ja": "参照されるモジュールは、<拡張>要素項目の[子供]に加え、[ローカル名「モジュール」とエレメント項目で示されています。ケースにおける翻訳の使用を可能にする条件は、（a）は満たされている場合、または参照モジュールが参照されるモジュールである場合、<モジュール>要素の項目を省略してもよいです。 <モジュール>要素項目が存在する場合。"
    },
    {
      "indent": 3,
      "text": "(1) An attribute item with the [local name] \"name\" SHOULD be added to the [attributes] of the <module> element item. The [normalized value] of this attribute item is the modulereference in the ModuleIdentifier in the ModuleDefinition of the referenced module.",
      "ja": "（1）[ローカル名「名前」の属性項目は、<モジュール>要素項目の[属性]に追加する必要があります。この属性項目の[正規化された値]は、参照モジュールのModuleDefinitionはでModuleIdentifierでmodulereferenceあります。"
    },
    {
      "indent": 3,
      "text": "(2) If the DefinitiveIdentifier in the ModuleIdentifier in the ModuleDefinition of the referenced module is not empty, then an attribute item with the [local name] \"identifier\" SHALL be added to the [attributes] of the <module> element item. The [normalized value] of this attribute item is the RXER character data translation of the DefinitiveIdentifier.",
      "ja": "参照モジュールのModuleDefinitionはでModuleIdentifierでDefinitiveIdentifierが空でない場合（2）、次に[ローカル名]の属性項目は、「識別子」は、<モジュール>要素項目の[属性]に追加されるものとします。この属性項目の[正規化した値]はDefinitiveIdentifierのRXER文字データの変換です。"
    },
    {
      "indent": 3,
      "text": "(3) If the referenced module has a schema identity URI, then an attribute item with the [local name] \"schemaIdentity\" SHALL be added to the [attributes] of the <module> element item. The [normalized value] of this attribute item is the schema identity URI of the referenced module.",
      "ja": "参照モジュールが、スキーマの同一URIを持っている場合（3）、その後、[ローカル名]の属性項目は「schemaIdentityは」<モジュール>要素項目の[属性]に追加されるものとします。この属性項目の[正規化された値]は、参照モジュールのスキーマ同一URIです。"
    },
    {
      "indent": 3,
      "text": "The [attributes] of the <module> element item MUST contain at least one of the attribute items specified in cases (1), (2), and (3).",
      "ja": "<モジュール>の[属性]要素項目（2）は、（1）の場合に指定された属性項目の少なくとも一つを含まなければなりません、及び（3）。"
    },
    {
      "indent": 3,
      "text": "The translation of the substitute definition SHALL be added to the [children] or [attributes] of the <expanded> element item.",
      "ja": "代替の定義の翻訳は、[子供]または<拡大>要素項目の[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "Consider these module definitions:",
      "ja": "これらのモジュールの定義を考えてみます。"
    },
    {
      "indent": 9,
      "text": "Templates\nDEFINITIONS\nAUTOMATIC TAGS ::=\nBEGIN",
      "raw": true
    },
    {
      "indent": 9,
      "text": "CollectionOfThings { Thing } ::= SEQUENCE OF thing Thing\n    -- the Thing on the right-hand side of the assignment is\n    -- a DummyReference",
      "raw": true
    },
    {
      "indent": 9,
      "text": "END",
      "ja": "終わり"
    },
    {
      "indent": 9,
      "text": "ProtocolDefinitions\nDEFINITIONS\nAUTOMATIC TAGS ::=\nBEGIN",
      "raw": true
    },
    {
      "indent": 9,
      "text": "IMPORTS CollectionOfThings{} FROM Templates ;",
      "ja": "テンプレートから物事の輸入コレクション{};"
    },
    {
      "indent": 9,
      "text": "CollectionOfIntegers ::= CollectionOfThings { INTEGER }\n    -- the right-hand side of the assignment is\n    -- a ParameterizedType",
      "raw": true
    },
    {
      "indent": 9,
      "text": "END",
      "ja": "終わり"
    },
    {
      "indent": 6,
      "text": "Without using the translation in case (a), the translations of these modules are:",
      "ja": "ケース（a）の中で翻訳を使用せずに、これらのモジュールの変換は、次のとおりです。"
    },
    {
      "indent": 9,
      "text": "<asnx:module name=\"Templates\"/>",
      "ja": "<asnx：モジュール名= \"テンプレート\" />"
    },
    {
      "indent": 9,
      "text": "<asnx:module xmlns:asnx=\"urn:ietf:params:xml:ns:asnx\" name=\"ProtocolDefinitions\">",
      "ja": "<asnx：モジュールのxmlns：asnxを= \"壷：IETF：のparams：XML：NS：asnx\" 名前= \"ProtocolDefinitions\">"
    },
    {
      "indent": 10,
      "text": "<namedType name=\"CollectionOfIntegers\"> <type> <expanded name=\"CollectionOfThings\"> <module name=\"Templates\"/> <type> <sequenceOf> <element name=\"thing\"> <type> <expanded>",
      "ja": "<namedType名= \"CollectionOfIntegers\"> <タイプ> <拡張名= \"CollectionOfThings\"> <モジュール名= \"テンプレート\" /> <タイプ> <sequenceOf> <要素名= \"もの\"> <タイプ> <拡大>"
    },
    {
      "indent": 10,
      "text": " <module name=\"ProtocolDefinitions\"/> <type ref=\"asnx:INTEGER\"/> </expanded> </type> </element> </sequenceOf> </type> </expanded> </type> </namedType>",
      "ja": "<モジュール名= \"ProtocolDefinitions\" /> <タイプREF = \"asnx：INTEGER\" /> </拡大> </タイプ> </要素> </ sequenceOf> </タイプ> </拡大> </タイプ> </ namedType>"
    },
    {
      "indent": 9,
      "text": "</asnx:module>",
      "ja": "</ asnx：モジュール>"
    },
    {
      "indent": 6,
      "text": "The translation of the Templates module is empty because the module contains only a parameterized assignment.",
      "ja": "モジュールのみをパラメータ化割り当てが含まれているため、テンプレートモジュールの翻訳は空です。"
    },
    {
      "indent": 6,
      "text": "Since the contexts of the Templates and ProtocolDefinitions modules are interchangeable, a simpler translation of the ProtocolDefinitions module is permitted:",
      "ja": "テンプレートとProtocolDefinitionsモジュールのコンテキストは互換性がありますので、ProtocolDefinitionsモジュールの単純な翻訳が許可されています："
    },
    {
      "indent": 9,
      "text": "<asnx:module xmlns:asnx=\"urn:ietf:params:xml:ns:asnx\" name=\"ProtocolDefinitions\">",
      "ja": "<asnx：モジュールのxmlns：asnxを= \"壷：IETF：のparams：XML：NS：asnx\" 名前= \"ProtocolDefinitions\">"
    },
    {
      "indent": 10,
      "text": "<namedType name=\"CollectionOfIntegers\"> <type> <sequenceOf> <element name=\"thing\"> <type ref=\"asnx:INTEGER\" explicit=\"true\"/> </element> </sequenceOf> </type> </namedType>",
      "ja": "<namedType名= \"CollectionOfIntegers\"> <タイプ> <sequenceOf> <要素名= \"もの\"> <型REF = \"asnx：INTEGER\" 明示= \"真\" /> </要素> </ sequenceOf> </入力> </ namedType>"
    },
    {
      "indent": 9,
      "text": "</asnx:module>",
      "ja": "</ asnx：モジュール>"
    },
    {
      "indent": 3,
      "text": "If a ParameterizedType or ParameterizedValueSetType is recursively contained, then its translation is an element item with the [local name] \"type\". An attribute item with the [local name] \"ancestor\" SHALL be added to the [attributes] of the <type> element item. The [normalized value] of this attribute item is the decimal digit string representing the integer value of one plus the number of intermediate enclosing <type> element items between the <type> element items resulting from the translations of the two equivalent instances of ParameterizedType or ParameterizedValueSetType. An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item.",
      "ja": "ParameterizedType又はParameterizedValueSetTypeを再帰的に含まれている場合、その翻訳は、[ローカル名「タイプ」の要素項目です。 [ローカル名]「祖先」の属性項目は、<type>要素項目の[属性]に追加されるものとします。この属性項目の[正規化された値は、中間囲ん<タイプ>の数プラス1の整数値を表す10進数の文字列では、ParameterizedTypeの2つの等価のインスタンスの翻訳から生じる、<type>要素項目間エレメント項目またはParameterizedValueSetType。 [ローカル名]を持つ要素項目は、「注釈」は、<type>要素項目の[子供]に添加してもよいです。"
    },
    {
      "indent": 3,
      "text": "A <type> element item with an ancestor attribute item is a reference to an ancestor <type> element item. This form for a <type> element item SHOULD NOT be used in original specifications written in ASN.X.",
      "ja": "祖先属性項目と、<type>要素の項目は祖先<type>要素の項目への参照です。 <type>要素項目のこの形式はASN.X.で書かれた元の仕様書で使用すべきではありません"
    },
    {
      "indent": 6,
      "text": "Aside: The form is only intended for the purpose of handling recursive parameterized type definitions in an ASN.1 specification being translated into ASN.X. Such definitions are self-referencing, but have no obvious name. It is also not easy to construct a suitable name from the surrounding context because recursive parameterized types can be embedded in other constructs, such as information objects, that are themselves unnamed.",
      "ja": "脇：フォームのみASN.X.に翻訳さASN.1仕様で再帰パラメータ化された型定義を処理するために意図されていますこのような定義は自己参照しているが、明らかな名前を持っていません。再帰的なパラメータ化された型は名前自体であるそのような情報オブジェクトのような他の構築物に埋め込むことができるので、周囲の状況から適切な名前を構築することも容易ではありません。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "Consider these type definitions, assumed to be defined in a module that does not have an XER encoding control section:",
      "ja": "これらの型定義を考える、XER符号化制御部を有していないモジュールで定義されると仮定する。"
    },
    {
      "indent": 9,
      "text": "Tree { ValueType } ::= SEQUENCE {\n    value          [0] ValueType,\n    left-subtree   [1] Tree { ValueType } OPTIONAL,\n    right-subtree  [2] Tree { ValueType } OPTIONAL\n}",
      "raw": true
    },
    {
      "indent": 9,
      "text": "NumberTree ::= [APPLICATION 13] Tree { INTEGER }",
      "raw": true
    },
    {
      "indent": 6,
      "text": "The assignment for \"Tree\" is not directly translated because it is a ParameterizedAssignment. The translation for the \"NumberTree\" assignment, up to but not yet including the Type in the TaggedType, is as follows:",
      "ja": "それはParameterizedAssignmentであるため、「木」の割り当ては直接翻訳されていません。以下のように「NumberTree」の割り当てのための翻訳は、TaggedTypeでタイプを含めまでではなく、まだ、次のとおりです。"
    },
    {
      "indent": 9,
      "text": "<namedType name=\"NumberTree\"> <type> <tagged tagClass=\"application\" number=\"13\"/> </type> </namedType>",
      "ja": "<namedType名= \"NumberTree\"> <タイプ> <タグ付けさtagClass = \"アプリケーション\" 番号= \"13\" /> </タイプ> </ namedType>"
    },
    {
      "indent": 6,
      "text": "The Type in the TaggedType is a ParameterizedType. Since the ParameterizedType is not recursively contained, the translation of the ParameterizedType (using the translation in case (a) above) is the translation of the Type on the right-hand side of the referenced ParameterizedTypeAssignment, namely this type:",
      "ja": "TaggedTypeでのタイプは、ParameterizedTypeです。 ParameterizedTypeを再帰的に含まれていないので、は、ParameterizedType（上記（a）の場合には翻訳を使用して）の翻訳は、参照ParameterizedTypeAssignmentの右側のタイプ、すなわちこのタイプの翻訳です。"
    },
    {
      "indent": 9,
      "text": "SEQUENCE { value [0] ValueType, left-subtree [1] Tree { ValueType } OPTIONAL, right-subtree [2] Tree { ValueType } OPTIONAL }",
      "ja": "SEQUENCE {値[0] ValueTypeに、左サブツリー[1]ツリー{ValueTypeに} OPTIONAL、右サブツリー[2]ツリー{ValueTypeにOPTIONAL}}"
    },
    {
      "indent": 6,
      "text": "ValueType is a DummyReference. The translation of the actual parameter substitutes for the DummyReference. In this case, the actual parameter is the INTEGER type.",
      "ja": "ValueTypeにはDummyReferenceです。実際のパラメータの翻訳はDummyReferenceを置換します。この場合、実際のパラメータは、整数型です。"
    },
    {
      "indent": 6,
      "text": "The translation for the SEQUENCE type, up to the first component, is added to the <tagged> element:",
      "ja": "SEQUENCEタイプの変換は、第一の成分まで、<タグ付けされた>要素に追加されます。"
    },
    {
      "indent": 9,
      "text": "<namedType name=\"NumberTree\"> <type> <tagged tagClass=\"application\" number=\"13\"> <type><!-- Tree { INTEGER } --> <sequence> <element name=\"value\"> <type> <tagged number=\"0\"> <type ref=\"asnx:INTEGER\" explicit=\"true\"/><!-- ValueType --> </tagged> </type> </element> </sequence> </type> </tagged> </type> </namedType>",
      "ja": "<namedType名= \"NumberTree\"> <タイプ> <タグ付けさtagClass = \"アプリケーション\" 番号= \"13\"> <タイプ> <！ - ツリー{INTEGER}  - > <シーケンス> <要素名= \"値\"> <タイプ> <タグ付けされた番号= \"0\"> <型REF = \"asnx：INTEGER\"！明示= \"真\" /> < -  ValueTypeに - > </タグ付き> </タイプ> </要素> </シーケンス> </タイプ> </タグ付き> </タイプ> </ namedType>"
    },
    {
      "indent": 6,
      "text": "The Type in the TaggedType for the second component is a ParameterizedType. Since this ParameterizedType is recursively contained, its translation is a <type> element with the ancestor attribute. The value of the ancestor attribute is \"2\" because there is one intermediate <type> element (for a TaggedType). Put another way, the translations of the equivalent instances of ParameterizedType are two <type> steps apart.",
      "ja": "第二の成分のためのTaggedTypeにおけるタイプは、ParameterizedTypeあります。このは、ParameterizedTypeを再帰的に含まれているので、その翻訳は、祖先の属性を持つ<type>要素です。 （TaggedType用）一つの中間<type>要素があるので、祖先属性の値が「2」です。別の言い方をすれば、は、ParameterizedTypeの同等インスタンスの翻訳は離れて2つの<タイプ>手順は次のとおりです。"
    },
    {
      "indent": 6,
      "text": "The translation of the third component of the SEQUENCE type follows the same pattern as the second component. The completed translation is as follows:",
      "ja": "SEQUENCE型の第三成分の翻訳は、第二の成分と同一のパターンに従います。次のように完成翻訳は次のとおりです。"
    },
    {
      "indent": 9,
      "text": "<namedType name=\"NumberTree\"> <type> <tagged tagClass=\"application\" number=\"13\"> <type><!-- Tree { INTEGER } --> <sequence> <element name=\"value\"> <type> <tagged number=\"0\"> <type ref=\"asnx:INTEGER\" explicit=\"true\"/><!-- ValueType -->",
      "ja": "<namedType名= \"NumberTree\"> <タイプ> <タグ付けさtagClass = \"アプリケーション\" 番号= \"13\"> <タイプ> <！ - ツリー{INTEGER}  - > <シーケンス> <要素名= \"値\"> <タイプ> <タグ付けされた番号= \"0\"> <型REF =！ \"asnx：INTEGER\" 明示= \"真\" /> < -  ValueTypeに - >"
    },
    {
      "indent": 9,
      "text": " </tagged> </type> </element> <optional> <element name=\"left-subtree\"> <type> <tagged number=\"1\"> <type ancestor=\"2\"/><!-- Tree { ValueType } --> </tagged> </type> </element> </optional> <optional> <element name=\"right-subtree\"> <type> <tagged number=\"2\"> <type ancestor=\"2\"/><!-- Tree { ValueType } --> </tagged> </type> </element> </optional> </sequence> </type> </tagged> </type> </namedType>",
      "ja": "</タグ付き> </タイプ> </要素> <オプション> <要素名= \"左のサブツリー\"> <タイプ> <タグ付けされた数= \"1\"> <型祖先= \"2\" /> <！ - ツリー{ValueTypeに}  - > </タグ付き> </タイプ> </要素> </オプション> <オプション> <要素名= \"右サブツリー\"> <タイプ> <タグ付けされた数= \"2\"> <タイプの祖先= \"2\" /> <！ - ツリー{ValueTypeに}  - > </タグ付き> </タイプ> </要素> </オプション> </配列> </タイプ> </タグ付き> </タイプ> </ namedType>"
    },
    {
      "indent": 0,
      "text": "14. EncodingControlSections Translation",
      "section_title": true,
      "ja": "14. EncodingControlSections翻訳"
    },
    {
      "indent": 3,
      "text": "If an EncodingControlSections instance contains at least one EncodingControlSection with an encodingreference that is not RXER, then the translation of the EncodingControlSections instance is an element item with the [local name] \"encodingControls\". The translation of each EncodingControlSection with an encodingreference that is not RXER SHALL be appended to the [children] of the <encodingControls> element item.",
      "ja": "EncodingControlSectionsインスタンスがRXERないencodingreferenceを有する少なくとも一つのEncodingControlSectionが含まれている場合、EncodingControlSectionsインスタンスの変換は、[ローカル名「encodingControls」の要素項目です。 RXERないencodingreference各EncodingControlSectionの翻訳は、<encodingControls>要素項目の[子供]を添付しなければなりません。"
    },
    {
      "indent": 6,
      "text": "Aside: This is not suggesting that RXER encoding control sections are ignored. Encoding control sections for RXER are not explicitly represented in ASN.X, but rather affect how an ASN.1 module is translated into an ASN.X module. The effect of an RXER encoding control section on the translation is addressed in other parts of this specification.",
      "ja": "脇：これはRXERの符号化制御セクションは無視されていることが示唆されていません。 RXERのための符号化制御部は、明示的ASN.Xで表現ではなく、ASN.1モジュールはASN.Xモジュールに変換される方法に影響されていません。翻訳にRXER符号化制御部の効果は、本明細書の他の部分にアドレス指定されます。"
    },
    {
      "indent": 6,
      "text": "Encoding control sections for other encoding rules will have explicit representations in ASN.X.",
      "ja": "他の符号化規則の符号化制御部はASN.X.に明示的表現を有することになります"
    },
    {
      "indent": 3,
      "text": "If the encodingreference in an EncodingControlSection is GSER, then the translation of the EncodingControlSection is an element item with the [local name] \"GSER\". The translation of the EncodingInstructionAssignmentList in the EncodingControlSection SHALL be added to the [children] of the <GSER> element item.",
      "ja": "EncodingControlSectionでencodingreferenceがGSERであれば、EncodingControlSectionの翻訳は、[ローカル名]「GSER」を持つ要素項目です。 EncodingControlSectionでEncodingInstructionAssignmentListの翻訳は、<GSER>要素項目の[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The EncodingInstructionAssignmentList notation is different for each set of encoding instructions. The translation into ASN.X of an EncodingInstructionAssignmentList for GSER is specified in a separate document [GSEREIT].",
      "ja": "EncodingInstructionAssignmentList表記は、符号化命令の各セットで異なります。 GSERためEncodingInstructionAssignmentListのASN.Xへの変換は、別の文書[GSEREIT]で指定されています。"
    },
    {
      "indent": 6,
      "text": "Aside: The translation of an EncodingInstructionAssignmentList for GSER, as it is currently defined, is always empty.",
      "ja": "余談：GSERのためのEncodingInstructionAssignmentListの翻訳、それが現在定義されているように、常に空です。"
    },
    {
      "indent": 3,
      "text": "If the encodingreference in an EncodingControlSection is XER, then the translation of the EncodingControlSection is an element item with the [local name] \"XER\". The translation of the EncodingInstructionAssignmentList in the EncodingControlSection SHALL be added to the [children] of the <XER> element item. The translation into ASN.X of an EncodingInstructionAssignmentList for XER is specified in a separate document [XEREIT].",
      "ja": "EncodingControlSectionでencodingreferenceがXERであれば、EncodingControlSectionの翻訳は、[ローカル名]「XER」を持つ要素項目です。 EncodingControlSectionでEncodingInstructionAssignmentListの翻訳は、<XER>要素項目の[子供]に追加されるものとします。 XERためEncodingInstructionAssignmentListのASN.Xへの変換は、別の文書[XEREIT]で指定されています。"
    },
    {
      "indent": 0,
      "text": "15. Security Considerations",
      "section_title": true,
      "ja": "15.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "The ASN.X translation of an ASN.1 specification is semantically equivalent to the original ASN.1 specification. The security considerations that apply to an application built from the original ASN.1 specification apply equally to an application built from the ASN.X translation.",
      "ja": "ASN.1仕様のASN.Xの翻訳は、元のASN.1仕様と同じ意味です。オリジナルのASN.1仕様から構築されたアプリケーションに適用されるセキュリティ上の考慮事項は、ASN.X翻訳から構築されたアプリケーションにも同様に適用されます。"
    },
    {
      "indent": 3,
      "text": "Syntax-based canonicalization for XML documents (e.g., Canonical XML [CXML]) depends on the Infoset of an XML document being preserved. However, the Infoset representation of an ASN.X module potentially changes if it is decoded and re-encoded (though its ASN.1 value is preserved), disrupting the Canonical XML representation. To avoid this problem, ASN.X modules MUST be normalized prior to the application of syntax-based canonicalization. The normalization rules can be found in Section 6.13 of the specification for RXER [RXER].",
      "ja": "XML文書（例えば、カノニカルXML [CXML]）の構文ベースの正規化は、保存されたXML文書の情報セットに依存します。しかし、ASN.Xモジュールのインフォセット表現は、潜在的に変化することは、正規のXML表現を破壊する、（そのASN.1値が保存されているが）復号され再符号化された場合。この問題を回避するには、ASN.Xモジュールは、前の構文ベースの正規のアプリケーションに正規化されなければなりません。正規化ルールはRXER [RXER]の仕様のセクション6.13に見出すことができます。"
    },
    {
      "indent": 0,
      "text": "16. Acknowledgements",
      "section_title": true,
      "ja": "16.謝辞"
    },
    {
      "indent": 3,
      "text": "The technology described in this document is the product of a research project begun jointly by Adacel Technologies Limited and Deakin University, and subsequently refined and completed by eB2Bcom.",
      "ja": "本書に記載の技術は、Adacel・テクノロジーズ・リミテッドとディーキン大学が共同で始めた研究プロジェクトの製品であり、その後eB2Bcomにより精製して完成します。"
    },
    {
      "indent": 0,
      "text": "17. References",
      "section_title": true,
      "ja": "17.参考文献"
    },
    {
      "indent": 0,
      "text": "17.1. Normative References",
      "section_title": true,
      "ja": "17.1. 引用規格"
    },
    {
      "indent": 3,
      "text": "[BCP14] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[BCP14]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[URI] Berners-Lee, T., Fielding, R. and L. Masinter, \"Uniform Resource Identifiers (URI): Generic Syntax\", STD 66, RFC 3986, January 2005.",
      "ja": "[URI]バーナーズ - リー、T.、フィールディング、R.、およびL. Masinter、 \"ユニフォームリソース識別子（URI）：汎用構文\"、STD 66、RFC 3986、2005年1月。"
    },
    {
      "indent": 3,
      "text": "[GSER] Legg, S., \"Generic String Encoding Rules (GSER) for ASN.1 Types\", RFC 3641, October 2003.",
      "ja": "[GSER]レッグ、S.​​、 \"ASN.1タイプのための一般的な文字列の符号化規則（GSER）\"、RFC 3641、2003年10月。"
    },
    {
      "indent": 3,
      "text": "[GSEREI] Legg, S., \"Encoding Instructions for the Generic String Encoding Rules (GSER)\", RFC 4792, January 2007.",
      "ja": "[GSEREI]レッグ、S.​​、 \"一般的な文字列の符号化規則の符号化手順（GSER）\"、RFC 4792、2007年1月。"
    },
    {
      "indent": 3,
      "text": "[RXER] Legg, S. and D. Prager, \"Robust XML Encoding Rules (RXER) for Abstract Syntax Notation One (ASN.1)\", RFC 4910, July 2007.",
      "ja": "[RXER]レッグ、S.​​と、RFC 4910、2007年7月 \"抽象構文記法1（ASN.1）のための堅牢なXMLエンコーディング規則（RXER）\" D.バッドミットプラーガー、。"
    },
    {
      "indent": 3,
      "text": "[RXEREI] Legg, S., \"Encoding Instructions for the Robust XML Encoding Rules (RXER)\", RFC 4911, July 2007.",
      "ja": "[RXEREI]レッグ、S.​​、 \"堅牢なXMLの符号化規則の符号化手順（RXER）\"、RFC 4911、2007年7月。"
    },
    {
      "indent": 3,
      "text": "[GSEREIT] Legg, S., \"Abstract Syntax Notation X (ASN.X) Representation of Encoding Instructions for the Generic String Encoding Rules (GSER)\", RFC 4913, July 2007.",
      "ja": "、RFC 4913、2007年7月[GSEREIT]レッグ、S.​​、 \"一般的な文字列符号化規則（GSER）の符号化手順の抽象構文記法X（ASN.X）表現\"。"
    },
    {
      "indent": 3,
      "text": "[XEREIT] Legg, S., \"Abstract Syntax Notation X (ASN.X) Representation of Encoding Instructions for the XML Encoding Rules (XER)\", RFC 4914, July 2007.",
      "ja": "、RFC 4914、2007年7月[XEREIT]レッグ、S.​​、 \"XML符号化規則の符号化手順（XER）の抽象構文記法X（ASN.X）表現\"。"
    },
    {
      "indent": 3,
      "text": "[X.680] ITU-T Recommendation X.680 (07/02) | ISO/IEC 8824-1, Information technology - Abstract Syntax Notation One (ASN.1): Specification of basic notation.",
      "ja": "[X.680] ITU-T勧告X.680（7月2日）| ISO / IEC 8824から1、情報技術 - 抽象構文記法1（ASN.1）：基本的な記法の仕様。"
    },
    {
      "indent": 3,
      "text": "[X.680-1] ITU-T Recommendation X.680 (2002) Amendment 1 (10/03) | ISO/IEC 8824-1:2002/Amd 1:2004, Support for EXTENDED-XER.",
      "ja": "【X.680-1] ITU-T勧告X.680（2002）追補1（10/03）| ISO / IEC 8824から1：2002 / Amdの1：2004、EXTENDED-XERのサポート。"
    },
    {
      "indent": 3,
      "text": "[X.681] ITU-T Recommendation X.681 (07/02) | ISO/IEC 8824-2, Information technology - Abstract Syntax Notation One (ASN.1): Information object specification.",
      "ja": "[X.681] ITU-T勧告X.681（7月2日）| ISO / IEC 8824から2、情報技術 - 抽象構文記法1（ASN.1）：情報オブジェクトの仕様。"
    },
    {
      "indent": 3,
      "text": "[X.682] ITU-T Recommendation X.682 (07/02) | ISO/IEC 8824-3, Information technology - Abstract Syntax Notation One (ASN.1): Constraint specification.",
      "ja": "[X.682] ITU-T勧告X.682（7月2日）| ISO / IEC 8824から3、情報技術 - 抽象構文記法1（ASN.1）：制約の仕様。"
    },
    {
      "indent": 3,
      "text": "[X.683] ITU-T Recommendation X.683 (07/02) | ISO/IEC 8824-4, Information technology - Abstract Syntax Notation One (ASN.1): Parameterization of ASN.1 specifications.",
      "ja": "[X.683] ITU-T勧告X.683（7月2日）| ISO / IEC 8824から4、情報技術 - 抽象構文記法1（ASN.1）：ASN.1仕様のパラメータ化。"
    },
    {
      "indent": 3,
      "text": "[X.693] ITU-T Recommendation X.693 (12/01) | ISO/IEC 8825-4:2002, Information technology - ASN.1 encoding rules: XML encoding rules (XER).",
      "ja": "[X.693] ITU-T勧告X.693（12/01）| ISO / IEC 8825から4：2002、情報技術 -  ASN.1の符号化規則：XMLエンコーディング規則（XER）。"
    },
    {
      "indent": 3,
      "text": "[X.693-1] Amendment 1: (to ITU-T Rec. X.693 | ISO/IEC 8825-4) XER encoding instructions and EXTENDED-XER.",
      "ja": "【X.693-1]追補1：（のITU-T勧告X.693 | ISO / IEC 8825から4）XERエンコード命令と拡張XER。"
    },
    {
      "indent": 3,
      "text": "[XML10] Bray, T., Paoli, J., Sperberg-McQueen, C., Maler, E. and F. Yergeau, \"Extensible Markup Language (XML) 1.0 (Fourth Edition)\", W3C Recommendation, http://www.w3.org/TR/2006/REC-xml-20060816, August 2006.",
      "ja": "[XML10]ブレイ、T.、パオリ、J.、Sperberg-マックィーン、C.、MALER、EおよびF Yergeau、 \"拡張マークアップ言語（XML）1.0（第4版）\"、W3C勧告は、http：// www.w3.org/TR/2006/REC-xml-20060816、2006年8月。"
    },
    {
      "indent": 3,
      "text": "[XML11] Bray, T., Paoli, J., Sperberg-McQueen, C., Maler, E., Yergeau, F., and J. Cowan, \"Extensible Markup Language (XML) 1.1 (Second Edition)\", W3C Recommendation, http://www.w3.org/TR/2006/REC-xml11-20060816, August 2006.",
      "ja": "[XML11]ブレイ、T.、パオリ、J.、Sperberg-マックィーン、C.、MALER、E.、Yergeau、F.、及びJ.コーワン、 \"拡張マークアップ言語（XML）1.1（第二版）\"、W3C勧告、http://www.w3.org/TR/2006/REC-xml11-20060816、2006年8月。"
    },
    {
      "indent": 3,
      "text": "[XMLNS10] Bray, T., Hollander, D., Layman, A., and R. Tobin, \"Namespaces in XML 1.0 (Second Edition)\", W3C Recommendation, http://www.w3.org/TR/2006/REC-xml-names-20060816, August 2006.",
      "ja": "【XMLNS10]ブレイ、T.、オランダ、D.、素人、A.、およびR.トビン、 \"XML 1.0に名前空間（第二版）\"、W3C勧告、http://www.w3.org/TR/2006 / REC-XML-名-20060816、2006年8月。"
    },
    {
      "indent": 3,
      "text": "[XMLNS11] Bray, T., Hollander, D., Layman, A. and R. Tobin, \"Namespaces in XML 1.1 (Second Edition)\", W3C Recommendation, http://www.w3.org/TR/2006/REC-xml-names11-20060816, August 2006.",
      "ja": "【XMLNS11]ブレイ、T.、オランダ、D.、素人、A.及びR.トビン、 \"XML 1.1名前空間（第二版）\"、W3C勧告、http://www.w3.org/TR/2006/ REC-XML-names11-20060816、2006年8月。"
    },
    {
      "indent": 3,
      "text": "[INFOSET] Cowan, J. and R. Tobin, \"XML Information Set (Second Edition)\", W3C Recommendation, http://www.w3.org/TR/2004/REC-xml-infoset-20040204, February 2004.",
      "ja": "[INFOSET]コーワン、J.とR.トビン、 \"XML情報セット（第二版）\"、W3C勧告、http://www.w3.org/TR/2004/REC-xml-infoset-20040204、2004年2月。"
    },
    {
      "indent": 3,
      "text": "[UNICODE] The Unicode Consortium, \"The Unicode Standard, Version 4.0\", Boston, MA, Addison-Wesley Developers Press, 2003. ISBN 0-321-18578-1.",
      "ja": "[UNICODE]のUnicodeコンソーシアム、 \"Unicode標準、バージョン4.0\"、ボストン、MA、アディソン・ウェズリー開発者プレス、2003年ISBN 0-321-18578-1。"
    },
    {
      "indent": 0,
      "text": "17.2. Informative References",
      "section_title": true,
      "ja": "17.2. 参考文献"
    },
    {
      "indent": 3,
      "text": "[CXML] Boyer, J., \"Canonical XML Version 1.0\", W3C Recommendation, http://www.w3.org/TR/2001/REC-xml-c14n-20010315, March 2001.",
      "ja": "[CXML]ボイヤー、J.、 \"標準的なXMLバージョン1.0\"、W3C勧告、http://www.w3.org/TR/2001/REC-xml-c14n-20010315、2001年3月。"
    },
    {
      "indent": 3,
      "text": "[XSD1] Thompson, H., Beech, D., Maloney, M. and N. Mendelsohn, \"XML Schema Part 1: Structures Second Edition\", W3C Recommendation, http://www.w3.org/TR/2004/REC-xmlschema-1-20041028/, October 2004.",
      "ja": "【XSD1]トンプソン、H.、ブナ、D.、マロニー、M.およびN.メンデルゾーン、 \"XMLスキーマパート1：構造第二版\"、W3C勧告、http://www.w3.org/TR/2004/ REC-XMLSCHEMA-1-20041028 /、2004年10月。"
    },
    {
      "indent": 3,
      "text": "[RNG] Clark, J. and M. Makoto, \"RELAX NG Tutorial\", OASIS Committee Specification, http://www.oasis-open.org/ committees/relax-ng/tutorial-20011203.html, December 2001.",
      "ja": "[RNG]クラーク、J.とM.誠、委員会は/リラックス-NG /チュートリアル-20011203.html、2001年12月に、OASIS委員会仕様、http://www.oasis-open.org/ \"NGチュートリアルをRELAX\"。"
    },
    {
      "indent": 0,
      "text": "Appendix A. ASN.1 for ASN.X",
      "ja": "ASN.X付録A.のASN.1"
    },
    {
      "indent": 3,
      "text": "This appendix is normative.",
      "ja": "この付録は規範的です。"
    },
    {
      "indent": 3,
      "text": "AbstractSyntaxNotation-X { iso(1) identified-organization(3) dod(6) internet(1) private(4) enterprise(1) xmled(21472) asnx(1) module(0) notation(1) }",
      "ja": "AbstractSyntaxNotation-X {ISO（1）同定された組織（3）DOD（6）インターネット（1）プライベート（4）企業（1）（21472）をxmled asnx（1）モジュール（0）表記（1）}"
    },
    {
      "indent": 3,
      "text": "-- Copyright (C) The IETF Trust (2007). This version of -- this ASN.1 module is part of RFC 4912; see the RFC itself -- for full legal notices. -- -- Regarding this ASN.1 module or any portion of it, the author -- makes no guarantees and is not responsible for any damage -- resulting from its use. The author grants irrevocable permission -- to anyone to use, modify, and distribute it in any way that does -- not diminish the rights of anyone else to use, modify, and -- distribute it, provided that redistributed derivative works do -- not contain misleading author or version information. -- Derivative works need not be licensed under similar terms.",
      "ja": " - 著作権（C）IETFトラスト（2007）。このバージョン - このASN.1モジュールは、RFC 4912の一部です。完全な法定の通知に関して -  RFC自体を参照してください。 -   - このASN.1モジュールまたはその一部について、著者は - 保証しませんし、いかなる損害についても責任を負いません - その使用から生じます。著者の補助金取消不能の許可 - 、使用する他の誰の権利を減少させる修正、およびない -   - 使用、変更、およびない任意の方法でそれを配布する人にそれを配布し、派生作品が行う再配布が提供 - 誤解を招くような著者またはバージョンの情報が含まれていません。 - 派生作品は、同様の条件の下でライセンスされていない必要があります。"
    },
    {
      "indent": 3,
      "text": "DEFINITIONS\nRXER INSTRUCTIONS\nAUTOMATIC TAGS\nEXTENSIBILITY IMPLIED ::= BEGIN",
      "raw": true
    },
    {
      "indent": 3,
      "text": "IMPORTS Markup, AnyURI, NCName, Name, QName FROM AdditionalBasicDefinitions { iso(1) identified-organization(3) dod(6) internet(1) private(4) enterprise(1) xmled(21472) asnx(1) module(0) basic(0) } GSER-EncodingInstruction, GSER-EncodingInstructionAssignmentList FROM GSER-EncodingInstructionNotation { iso(1) identified-organization(3) dod(6) internet(1) private(4) enterprise(1) xmled(21472) asnx(1) module(0) gser-ei-notation(2) } XER-EncodingInstruction, XER-EncodingInstructionAssignmentList FROM XER-EncodingInstructionNotation { iso(1) identified-organization(3) dod(6) internet(1) private(4) enterprise(1) xmled(21472) asnx(1) module(0) xer-ei-notation(3) } ;",
      "ja": "輸入マークアップ、anyURIの、NCNameで、名前、QNameのAdditionalBasicDefinitions {ISO（1）同定された組織（3）DOD（6）インターネットから（1）プライベート（4）企業（1）（21472）をxmled asnx（1）モジュール（0 ）基本的な（0）} GSER-EncodingInstruction、GSER-EncodingInstructionAssignmentList GSER-EncodingInstructionNotation {ISO（1）同定された組織（3）からDOD（6）インターネット（1）プライベート（4）企業は、（1）（（21472）asnxをxmled 1）モジュール（0）GSER-EI-表記（2）} XER-EncodingInstruction、XER-EncodingInstructionNotation FROM XER-EncodingInstructionAssignmentList {ISO（1）同定された組織（3）DOD（6）インターネット（1）プライベート（4）エンタープライズ（1）asnx（1）モジュール（0）XER-EI-表記（3）}（21472）xmled。"
    },
    {
      "indent": 3,
      "text": "ModuleDefinition ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    annotation            Annotation OPTIONAL,\n    format                [ATTRIBUTE] [VERSION-INDICATOR]\n                              UTF8String (\"1.0\", ...) DEFAULT \"1.0\",\n    name                  [ATTRIBUTE] ModuleReference,\n    identifier            [ATTRIBUTE] DefinitiveIdentifier OPTIONAL,\n    schemaIdentity        [ATTRIBUTE] AnyURI OPTIONAL,\n    targetNamespace       [ATTRIBUTE] AnyURI OPTIONAL,\n    targetPrefix          [ATTRIBUTE] NCName OPTIONAL,\n    tagDefault            [ATTRIBUTE] TagDefault DEFAULT automatic,\n    extensibilityImplied  [ATTRIBUTE] BOOLEAN DEFAULT FALSE,\n    export                SEQUENCE { } OPTIONAL,\n        -- export is not used in this version\n    imports               [GROUP] ImportList OPTIONAL,\n    assignments           [GROUP] AssignmentList OPTIONAL,\n    encodingControls      EncodingControlSections OPTIONAL\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ModuleReference ::= TypeReference",
      "raw": true
    },
    {
      "indent": 3,
      "text": "DefinitiveIdentifier ::= OBJECT IDENTIFIER",
      "raw": true
    },
    {
      "indent": 3,
      "text": "TagDefault ::= ENUMERATED { explicit, implicit, automatic }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Annotation ::= Markup",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ImportList ::= SEQUENCE SIZE (1..MAX) OF import Import",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Import ::= SEQUENCE {\n    name            [ATTRIBUTE] ModuleReference OPTIONAL,\n    identifier      [ATTRIBUTE] DefinitiveIdentifier OPTIONAL,\n    schemaIdentity  [ATTRIBUTE] AnyURI OPTIONAL,\n    namespace       [ATTRIBUTE] AnyURI OPTIONAL,\n    schemaLocation  [ATTRIBUTE] AnyURI OPTIONAL\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "AssignmentList ::= SEQUENCE SIZE (1..MAX) OF\n    assignment [GROUP] Assignment",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Assignment ::= [NO-INSERTIONS] CHOICE {\n    namedType       TypeAssignment,\n    namedValue      ValueAssignment,\n    namedValueSet   ValueSetTypeAssignment,\n    namedClass      ObjectClassAssignment,\n    namedObject     ObjectAssignment, namedObjectSet  ObjectSetAssignment,\n    component       [GROUP] TopLevelNamedType\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "TypeAssignment ::= SEQUENCE {\n    annotation  Annotation OPTIONAL,\n    name        [ATTRIBUTE] TypeReference,\n    type        [GROUP] Type\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "TypeReference ::= UTF8String (PATTERN \"[A-Z]\\w*(-\\w+)*\")\n                              -- \\w is equivalent to [a-zA-Z0-9]",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ValueAssignment ::= SEQUENCE {\n    annotation  Annotation OPTIONAL,\n    name        [ATTRIBUTE] ValueReference,\n    type        [GROUP] Type,\n    value       [GROUP] Value\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ValueReference ::= Identifier",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Identifier ::= UTF8String (PATTERN \"[a-z]\\w(-\\w+)*\")",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ValueSetTypeAssignment ::= SEQUENCE {\n    annotation  Annotation OPTIONAL,\n    name        [ATTRIBUTE] TypeReference,\n    type        [GROUP] Type,\n    valueSet    [GROUP] ValueSet\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ObjectClassAssignment ::= SEQUENCE {\n    annotation   Annotation OPTIONAL,\n    name         [ATTRIBUTE] ObjectClassReference,\n    objectClass  [GROUP] ObjectClass\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ObjectClassReference ::= UTF8String\n                             (PATTERN \"[A-Z][A-Z0-9]*(-[A-Z0-9]+)*\")",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ObjectAssignment ::= SEQUENCE {\n    annotation   Annotation OPTIONAL,\n    name         [ATTRIBUTE] ObjectReference,\n    objectClass  [GROUP] DefinedObjectClass,\n    object       [GROUP] Object\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ObjectReference ::= ValueReference",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ObjectSetAssignment ::= SEQUENCE {\n    annotation   Annotation OPTIONAL,\n    name         [ATTRIBUTE] ObjectSetReference,\n    objectClass  [GROUP] DefinedObjectClass,\n    objectSet    [GROUP] ObjectSet\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ObjectSetReference ::= TypeReference",
      "raw": true
    },
    {
      "indent": 3,
      "text": "TopLevelNamedType ::= NamedType\n    (WITH COMPONENTS { ...,\n        component (WITH COMPONENTS { ...,\n            definition (WITH COMPONENTS { ..., reference ABSENT })\n        }),\n        element   (WITH COMPONENTS { ...,\n            definition (WITH COMPONENTS { ..., reference ABSENT })\n        }),\n        attribute (WITH COMPONENTS { ...,\n            definition (WITH COMPONENTS { ..., reference ABSENT })\n        }),\n        group         ABSENT,\n        member        ABSENT,\n        item          ABSENT,\n        simpleContent ABSENT })",
      "raw": true
    },
    {
      "indent": 3,
      "text": "NamedType ::= [SINGULAR-INSERTIONS] CHOICE {\n    component      Element,\n    element        Element,\n    attribute      Attribute,\n    group          InvisibleNamedType,\n    member         InvisibleNamedType,\n    item           InvisibleNamedType,\n    simpleContent  InvisibleNamedType\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Attribute ::= GenericNamedType\n    (WITH COMPONENTS { ...,\n        definition (WITH COMPONENTS { ...,\n            local (WITH COMPONENTS { ...,\n                typeAsVersion ABSENT }) }) })",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Element ::= GenericNamedType\n    (WITH COMPONENTS { ...,\n        definition (WITH COMPONENTS { ...,\n            local (WITH COMPONENTS { ...,\n                versionIndicator ABSENT }) }) })",
      "raw": true
    },
    {
      "indent": 3,
      "text": "InvisibleNamedType ::= GenericNamedType\n    (WITH COMPONENTS { ...,\n        definition (WITH COMPONENTS { ...,\n            reference  ABSENT,\n            local (WITH COMPONENTS { ...,\n                typeAsVersion ABSENT,\n                versionIndicator ABSENT }) }) })",
      "raw": true
    },
    {
      "indent": 3,
      "text": "GenericNamedType ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    annotation  Annotation OPTIONAL,\n    identifier  [ATTRIBUTE] IdentifierOrEmpty OPTIONAL,\n    definition  [GROUP] CHOICE {\n        reference   [GROUP] DefinedComponent,\n        local       [GROUP] LocalComponent\n    }\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "IdentifierOrEmpty ::= UTF8String (INCLUDES Identifier | \"\")",
      "raw": true
    },
    {
      "indent": 3,
      "text": "DefinedComponent ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    name         [GROUP] [NO-INSERTIONS] CHOICE {\n        ref          [ATTRIBUTE] QName,\n        elementType  [ATTRIBUTE] Name\n    },\n    namespace    [ATTRIBUTE] AnyURI OPTIONAL,\n    context      [ATTRIBUTE] AnyURI OPTIONAL,\n    embedded     [ATTRIBUTE] BOOLEAN OPTIONAL,\n    prefixes     [GROUP] EncodingPrefixes OPTIONAL\n}\n(WITH COMPONENTS { ...,\n     name (WITH COMPONENTS { ref PRESENT }),\n     namespace ABSENT } |\n WITH COMPONENTS { ...,\n     name (WITH COMPONENTS { elementType PRESENT }),\n     embedded ABSENT })",
      "raw": true
    },
    {
      "indent": 3,
      "text": "LocalComponent ::= SEQUENCE {\n    name              [ATTRIBUTE] NCName,\n    typeAsVersion     [ATTRIBUTE] BOOLEAN OPTIONAL,\n    versionIndicator  [ATTRIBUTE] BOOLEAN OPTIONAL,\n    type              [GROUP] Type\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Type ::= [NO-INSERTIONS] CHOICE {\n    typeRef  [NAME AS \"type\"] [ATTRIBUTE] QName,\n    type     ElementFormType\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ElementFormType ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    annotation  Annotation OPTIONAL,\n    explicit    [ATTRIBUTE] BOOLEAN OPTIONAL,\n    definition  [GROUP] CHOICE {\n        reference        [GROUP] DefinedType,\n        expanded         ExpandedType,\n        ancestor         [ATTRIBUTE] INTEGER (1..MAX),\n        namedBitList     NamedBitList,\n        namedNumberList  NamedNumberList,\n        enumerated       EnumeratedType,\n        tagged           TaggedType,\n        prefixed         EncodingPrefixedType,\n        selection        SelectionType,\n        instanceOf       InstanceOfType,\n        fromClass        ObjectClassFieldType,\n        fromObjects      InformationFromObjects,\n        sequence         SequenceType,\n        set              SetType,\n        choice           ChoiceType,\n        union            UnionType,\n        sequenceOf       SequenceOfType,\n        setOf            SetOfType,\n        list             ListType,\n        constrained      ConstrainedType\n    }\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "DefinedType ::= SEQUENCE {\n    name       [GROUP] [NO-INSERTIONS] CHOICE {\n        ref          [ATTRIBUTE] QName,\n        elementType  [ATTRIBUTE] Name\n    },\n    context    [ATTRIBUTE] AnyURI OPTIONAL,\n    embedded   [ATTRIBUTE] BOOLEAN OPTIONAL\n}\n(WITH COMPONENTS { ...,\n     name (WITH COMPONENTS { ref PRESENT }) } |\n WITH COMPONENTS { ...,\n     name (WITH COMPONENTS { elementType PRESENT }),\n     embedded ABSENT })",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ExpandedType ::= SEQUENCE {\n    name    [ATTRIBUTE] NCName OPTIONAL,\n    module  ReferencedModule OPTIONAL,\n    type    [GROUP] Type\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ReferencedModule ::= SEQUENCE {",
      "raw": true
    },
    {
      "indent": 3,
      "text": " name [ATTRIBUTE] ModuleReference OPTIONAL, identifier [ATTRIBUTE] DefinitiveIdentifier OPTIONAL, schemaIdentity [ATTRIBUTE] AnyURI OPTIONAL }",
      "ja": "名前[ATTRIBUTE] ModuleReference OPTIONAL、識別子[ATTRIBUTE] DefinitiveIdentifier OPTIONAL、schemaIdentity [ATTRIBUTE] anyURIのOPTIONAL}"
    },
    {
      "indent": 3,
      "text": "NamedBitList ::= SEQUENCE SIZE (1..MAX) OF namedBit NamedBit",
      "raw": true
    },
    {
      "indent": 3,
      "text": "NamedBit ::= SEQUENCE {\n    name        [ATTRIBUTE] NCName,\n    identifier  [ATTRIBUTE] Identifier OPTIONAL,\n    bit         [ATTRIBUTE] INTEGER (0..MAX)\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "NamedNumberList ::= SEQUENCE SIZE (1..MAX) OF\n    namedNumber NamedNumber",
      "raw": true
    },
    {
      "indent": 3,
      "text": "NamedNumber ::= SEQUENCE {\n    name        [ATTRIBUTE] NCName,\n    identifier  [ATTRIBUTE] Identifier OPTIONAL,\n    number      [ATTRIBUTE] INTEGER\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "EnumeratedType ::= SEQUENCE {\n    root       [GROUP] Enumeration,\n    extension  SEQUENCE {\n        exception  ExceptionSpec OPTIONAL,\n        additions  [GROUP] Enumeration OPTIONAL\n    } OPTIONAL\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Enumeration ::= SEQUENCE SIZE (1..MAX) OF\n    enumeration EnumerationItem",
      "raw": true
    },
    {
      "indent": 3,
      "text": "EnumerationItem ::= SEQUENCE {\n    name        [ATTRIBUTE] NCName,\n    identifier  [ATTRIBUTE] Identifier OPTIONAL,\n    number      [ATTRIBUTE] INTEGER OPTIONAL\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Tag ::= SEQUENCE {\n    tagClass  [ATTRIBUTE] TagClass OPTIONAL,\n    number    [ATTRIBUTE] INTEGER (0..MAX),\n    tagging   [ATTRIBUTE] Tagging OPTIONAL\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "TaggedType ::= SEQUENCE {\n    COMPONENTS OF Tag,\n    type  [GROUP] Type",
      "raw": true
    },
    {
      "indent": 3,
      "text": "}",
      "ja": "｝"
    },
    {
      "indent": 3,
      "text": "TagClass ::= ENUMERATED { universal, application, private }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Tagging ::= ENUMERATED { explicit, implicit }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "EncodingPrefixedType ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    prefixes  [GROUP] EncodingPrefixes,\n    type      [GROUP] Type\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "EncodingPrefixes ::= SEQUENCE SIZE (1..MAX) OF\n    prefix [GROUP] EncodingPrefix",
      "raw": true
    },
    {
      "indent": 3,
      "text": "EncodingPrefix ::= [SINGULAR-INSERTIONS] CHOICE {\n    tag   [NAME AS \"TAG\"] Tag,\n    gser  [NAME AS \"GSER\"] GSER-EncodingInstruction,\n    xer   [NAME AS \"XER\"] XER-EncodingInstruction\n    -- plus encoding instructions\n    -- for other encoding rules in the future\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "SelectionType ::= SEQUENCE {\n    alternative  [GROUP] [SINGULAR-INSERTIONS] CHOICE {\n        component    [ATTRIBUTE] QName,\n        element      [ATTRIBUTE] QName,\n        attribute    [ATTRIBUTE] QName,\n        group        [ATTRIBUTE] QName,\n        member       [ATTRIBUTE] QName\n    },\n    type         [GROUP] Type\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "InstanceOfType ::= DefinedObjectClass",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ObjectClassFieldType ::= SEQUENCE {\n    objectClass  [GROUP] DefinedObjectClass,\n    fieldName    [GROUP] FieldName\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "FieldName ::= [SINGULAR-INSERTIONS] CHOICE {\n    fieldNameAtt  [NAME AS \"fieldName\"]\n                      [ATTRIBUTE] PrimitiveFieldNames,\n    fieldName     PrimitiveFieldNames\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "PrimitiveFieldNames ::= UTF8String",
      "raw": true
    },
    {
      "indent": 3,
      "text": "InformationFromObjects ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    referencedObjects  [GROUP] ReferencedObjects,\n    fieldName          [GROUP] FieldName\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ReferencedObjects ::= [SINGULAR-INSERTIONS] CHOICE {\n    object     [GROUP] Object,\n    objectSet  [GROUP] ObjectSet\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Insertions ::=\n    ENUMERATED { none, hollow, singular, uniform, multiform }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "SequenceType ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    insertions         [ATTRIBUTE] Insertions OPTIONAL,\n    root               [GROUP] ComponentTypeList OPTIONAL,\n    extensionAndFinal  [GROUP] [HOLLOW-INSERTIONS] SEQUENCE {\n        extension          [HOLLOW-INSERTIONS] SEQUENCE {\n            exception          ExceptionSpec OPTIONAL,\n            additions          [GROUP] ExtensionAdditions OPTIONAL\n        },\n        root               [GROUP] ComponentTypeList OPTIONAL\n    } OPTIONAL\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ComponentTypeList ::= SEQUENCE SIZE (1..MAX) OF\n    componentType [GROUP] ComponentType",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ComponentType ::= [NO-INSERTIONS] CHOICE {\n    component     [GROUP] SequenceNamedType,\n    optional      SEQUENCE {\n        component     [GROUP] SequenceNamedType,\n        default       Value OPTIONAL\n    },\n    componentsOf  Type\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "SequenceNamedType ::= NamedType\n    (WITH COMPONENTS { ..., member ABSENT, item ABSENT })",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ExtensionAdditions ::= SEQUENCE SIZE (1..MAX) OF\n    addition [GROUP] ExtensionAddition",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ExtensionAddition ::= [NO-INSERTIONS] CHOICE {\n    extensionGroup  ExtensionAdditionGroup,\n    componentType   [GROUP] ComponentType\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ExtensionAdditionGroup ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    version         [ATTRIBUTE] VersionNumber OPTIONAL,\n    componentTypes  [GROUP] ComponentTypeList\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "VersionNumber ::= INTEGER (2..MAX)",
      "raw": true
    },
    {
      "indent": 3,
      "text": "SetType ::= SequenceType",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ChoiceOrUnionType ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    insertions  [ATTRIBUTE] Insertions OPTIONAL,\n    precedence  [ATTRIBUTE] PrecedenceList OPTIONAL,\n    root        [GROUP] AlternativeTypeList,\n    extension   [HOLLOW-INSERTIONS] SEQUENCE {\n        exception   ExceptionSpec OPTIONAL,\n        additions   [GROUP] ExtensionAdditionAlternatives OPTIONAL\n    } OPTIONAL\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "PrecedenceList ::= [LIST] SEQUENCE SIZE (1..MAX) OF member QName",
      "raw": true
    },
    {
      "indent": 3,
      "text": "AlternativeTypeList ::= SEQUENCE SIZE (1..MAX) OF\n    component [GROUP] ChoiceOrUnionNamedType",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ChoiceOrUnionNamedType ::= NamedType\n    (WITH COMPONENTS { ..., item ABSENT, simpleContent ABSENT })",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ExtensionAdditionAlternatives ::= SEQUENCE SIZE (1..MAX) OF\n    addition [GROUP] ExtensionAdditionAlternative",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ExtensionAdditionAlternative ::= [NO-INSERTIONS] CHOICE {\n    extensionGroup  ExtensionAdditionAlternativesGroup,\n    component       [GROUP] ChoiceOrUnionNamedType\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ExtensionAdditionAlternativesGroup ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    version       [ATTRIBUTE] VersionNumber OPTIONAL,\n    alternatives  [GROUP] AlternativeTypeList\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ChoiceType ::= ChoiceOrUnionType\n    (WITH COMPONENTS { ...,\n        precedence ABSENT,\n        root (WITH COMPONENT (INCLUDES ChoiceNamedType)),\n        extension (WITH COMPONENTS { ...,\n            additions (WITH COMPONENT (WITH COMPONENTS { ...,\n                extensionGroup (WITH COMPONENTS { ...,\n                    alternatives (WITH COMPONENT",
      "raw": true
    },
    {
      "indent": 19,
      "text": "        (INCLUDES ChoiceNamedType)) }),\ncomponent (INCLUDES ChoiceNamedType) })) }) })",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ChoiceNamedType ::= ChoiceOrUnionNamedType\n    (WITH COMPONENTS { ..., member ABSENT })",
      "raw": true
    },
    {
      "indent": 3,
      "text": "UnionType ::= ChoiceOrUnionType\n    (WITH COMPONENTS { ...,\n        insertions ABSENT,\n        root (WITH COMPONENT (INCLUDES UnionNamedType)),\n        extension (WITH COMPONENTS { ...,\n            additions (WITH COMPONENT (WITH COMPONENTS { ...,\n                extensionGroup (WITH COMPONENTS { ...,\n                    alternatives (WITH COMPONENT\n                        (INCLUDES UnionNamedType)) }),\n                component (INCLUDES UnionNamedType) })) }) })",
      "raw": true
    },
    {
      "indent": 3,
      "text": "UnionNamedType ::= ChoiceOrUnionNamedType\n    (WITH COMPONENTS { ...,\n        component ABSENT,\n        element   ABSENT,\n        attribute ABSENT,\n        group     ABSENT })",
      "raw": true
    },
    {
      "indent": 3,
      "text": "SequenceOfOrListType ::= SEQUENCE {\n    minSize    [ATTRIBUTE] INTEGER (0..MAX) OPTIONAL,\n    maxSize    [ATTRIBUTE] INTEGER (0..MAX) OPTIONAL,\n    component  [GROUP] NamedType\n                   (WITH COMPONENTS { ...,\n                       attribute     ABSENT,\n                       member        ABSENT,\n                       simpleContent ABSENT })\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "SequenceOfType ::= SequenceOfOrListType\n    (WITH COMPONENTS { ...,\n        component (WITH COMPONENTS { ..., item ABSENT }) })",
      "raw": true
    },
    {
      "indent": 3,
      "text": "SetOfType ::= SequenceOfType",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ListType ::= SequenceOfOrListType\n    (WITH COMPONENTS { ...,\n        component (WITH COMPONENTS { ...,\n                      component ABSENT,\n                      element   ABSENT,\n                      group     ABSENT }) })",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ConstrainedType ::= [HOLLOW-INSERTIONS] SEQUENCE {",
      "raw": true
    },
    {
      "indent": 3,
      "text": " type [GROUP] Type, constraint [GROUP] Constraint }",
      "ja": "入力[GROUP]タイプ、制約[GROUP]制約}"
    },
    {
      "indent": 3,
      "text": "Constraint ::= SEQUENCE {\n    constraintSpec  [GROUP] [NO-INSERTIONS] CHOICE {\n        subtype         [GROUP] ElementSetSpecs,\n        constrainedBy   UserDefinedConstraint,\n        table           TableConstraint,\n        contents        ContentsConstraint\n    },\n    exception       ExceptionSpec OPTIONAL\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "UserDefinedConstraint ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    annotation  Annotation OPTIONAL,\n    parameters  [GROUP] ConstraintParameters OPTIONAL\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ConstraintParameters ::= SEQUENCE SIZE (1..MAX) OF\n    parameter [GROUP] UserDefinedConstraintParameter",
      "raw": true
    },
    {
      "indent": 3,
      "text": "UserDefinedConstraintParameter ::= [SINGULAR-INSERTIONS] CHOICE {\n    valueParameter      SEQUENCE {\n        type                [GROUP] Type,\n        value               [GROUP] Value\n    },\n    valueSetParameter   SEQUENCE {\n        type                [GROUP] Type,\n        valueSet            [GROUP] ValueSet\n    },\n    objectParameter     SEQUENCE {\n        objectClass         [GROUP] DefinedObjectClass,\n        object              [GROUP] Object\n    },\n    objectSetParameter  SEQUENCE {\n        objectClass         [GROUP] DefinedObjectClass,\n        objectSet           [GROUP] ObjectSet\n    },\n    typeParameter       SEQUENCE {\n        type                [GROUP] Type\n    },\n    classParameter      SEQUENCE {\n        objectClass         [GROUP] DefinedObjectClass\n    }\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "TableConstraint ::= SEQUENCE {",
      "raw": true
    },
    {
      "indent": 3,
      "text": " objectSet [GROUP] ObjectSet, componentRelation [GROUP] AtNotations OPTIONAL }",
      "ja": "objectSetと[GROUP] objectSetと、componentRelation [GROUP] AtNotations OPTIONAL}"
    },
    {
      "indent": 3,
      "text": "AtNotations ::= SEQUENCE SIZE (1..MAX) OF\n    restrictBy AtNotation",
      "raw": true
    },
    {
      "indent": 3,
      "text": "AtNotation ::= Markup",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ContentsConstraint ::= SEQUENCE {\n    containing  Type OPTIONAL,\n    encodedBy   Value OPTIONAL\n} ((WITH COMPONENTS { ..., containing PRESENT }) |\n   (WITH COMPONENTS { ..., encodedBy PRESENT }))",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ExceptionSpec ::= SEQUENCE {\n    type   [GROUP] Type,\n    value  [GROUP] Value\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Value ::= [NO-INSERTIONS] CHOICE {\n    literalValueAtt  [NAME AS \"literalValue\"] [ATTRIBUTE] UTF8String,\n    literalValue     ElementFormLiteralValue,\n    valueRef         [NAME AS \"value\"] [ATTRIBUTE] QName,\n    value            ElementFormNotationalValue\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ElementFormLiteralValue ::= Markup\n-- If asnx:literal=\"false\" then the governing type of\n-- ElementFormLiteralValue is ElementFormNotationalValue.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ElementFormNotationalValue ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    annotation  Annotation OPTIONAL,\n    definition  [GROUP] [NO-INSERTIONS] CHOICE {\n        reference      [GROUP] Reference,\n        expanded       ExpandedValue,\n        fromObjects    InformationFromObjects,\n        openTypeValue  SEQUENCE {\n            type           [GROUP] Type,\n            value          [GROUP] Value\n        },\n        components     [GROUP] ComponentValueList\n    }\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Reference ::= SEQUENCE {\n    ref      [ATTRIBUTE] QName,\n    context  [ATTRIBUTE] AnyURI OPTIONAL",
      "raw": true
    },
    {
      "indent": 3,
      "text": "}",
      "ja": "｝"
    },
    {
      "indent": 3,
      "text": "ExpandedValue ::= SEQUENCE {\n    name    [ATTRIBUTE] NCName OPTIONAL,\n    module  ReferencedModule OPTIONAL,\n    value   [GROUP] Value\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ComponentValueList ::= SEQUENCE SIZE (1..MAX) OF\n    component [GROUP] NamedValue",
      "raw": true
    },
    {
      "indent": 3,
      "text": "NamedValue ::= [SINGULAR-INSERTIONS] CHOICE {\n    component      GenericNamedValue,\n    element        GenericNamedValue,\n    attribute      GenericNamedValue,\n    group          GenericNamedValue,\n    member         GenericNamedValue,\n    item           GenericNamedValue,\n    simpleContent  GenericNamedValue\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "GenericNamedValue ::= SEQUENCE {\n    name   [ATTRIBUTE] QName,\n    value  [GROUP] Value\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ValueSet ::= [NO-INSERTIONS] CHOICE {\n    valueSetRef  [NAME AS \"valueSet\"] [ATTRIBUTE] QName,\n        -- valueSetRef is not used in this version\n    valueSet     ElementFormValueSet\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ElementFormValueSet ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    annotation  Annotation OPTIONAL,\n    definition  [GROUP] [NO-INSERTIONS] CHOICE {\n        elementSetSpecs  [GROUP] ElementSetSpecs\n    }\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ElementSetSpecs ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    root       [GROUP] ValueElementSetSpec,\n    extension  [HOLLOW-INSERTIONS] SEQUENCE {\n        additions  [GROUP] ValueElementSetSpec OPTIONAL\n    } OPTIONAL\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ValueElementSetSpec ::= ElementSetSpec\n(WITH COMPONENTS { ...,",
      "raw": true
    },
    {
      "indent": 7,
      "text": "object        ABSENT,\nobjectSet     ABSENT,\nunion         (WITH COMPONENT (INCLUDES ValueElementSetSpec)),\nintersection  (WITH COMPONENT (INCLUDES ValueElementSetSpec)),\nall           (WITH COMPONENTS { ...,\n    elements      (INCLUDES ValueElementSetSpec),\n    except        (INCLUDES ValueElementSetSpec) }) })",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ElementSetSpec ::= [SINGULAR-INSERTIONS] CHOICE {\n    literalValue    ElementFormLiteralValue,\n    value           ElementFormNotationalValue,\n    includes        Type,\n    range           ValueRange,\n    size            Constraint,\n    typeConstraint  Type,\n    from            Constraint,\n    withComponent   Constraint,\n    withComponents  MultipleTypeConstraints,\n    pattern         Value,\n    object          ElementFormObject,\n    objectSet       ElementFormObjectSet,\n    union           ElementSetSpecList,\n    intersection    ElementSetSpecList,\n    all             SEQUENCE {\n        elements        [GROUP] ElementSetSpec OPTIONAL,\n        except          ElementSetSpec\n    }\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ElementSetSpecList ::= SEQUENCE SIZE (2..MAX) OF\n    elements [GROUP] ElementSetSpec",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ValueRange ::= SEQUENCE {\n    minimum  [GROUP] [NO-INSERTIONS] CHOICE {\n        minInclusive  EndValue,\n        minExclusive  EndValue\n    } DEFAULT minInclusive:{},\n    maximum  [GROUP] [NO-INSERTIONS] CHOICE {\n        maxInclusive  EndValue,\n        maxExclusive  EndValue\n    } DEFAULT maxInclusive:{}\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "EndValue ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    value  [GROUP] Value OPTIONAL\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "MultipleTypeConstraints ::= [HOLLOW-INSERTIONS] SEQUENCE {",
      "raw": true
    },
    {
      "indent": 3,
      "text": " partial [ATTRIBUTE] BOOLEAN DEFAULT FALSE, typeConstraints [GROUP] TypeConstraints }",
      "ja": "部分[ATTRIBUTE] BOOLEANデフォルトFALSE、TypeConstraintsが[GROUP] TypeConstraintsが}"
    },
    {
      "indent": 3,
      "text": "TypeConstraints ::= SEQUENCE SIZE (1..MAX) OF\n    namedConstraint [GROUP] NamedConstraint",
      "raw": true
    },
    {
      "indent": 3,
      "text": "NamedConstraint ::= [SINGULAR-INSERTIONS] CHOICE {\n    component      GenericNamedConstraint,\n    element        GenericNamedConstraint,\n    attribute      GenericNamedConstraint,\n    group          GenericNamedConstraint,\n    member         GenericNamedConstraint,\n    item           GenericNamedConstraint,\n    simpleContent  GenericNamedConstraint\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "GenericNamedConstraint ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    name        [ATTRIBUTE] QName,\n    use         [ATTRIBUTE] PresenceConstraint OPTIONAL,\n    constraint  [GROUP] Constraint OPTIONAL\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "PresenceConstraint ::= ENUMERATED { present, absent, optional }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ObjectClass ::= [SINGULAR-INSERTIONS] CHOICE {\n    classRef  [NAME AS \"class\"] [ATTRIBUTE] QName,\n    class     ElementFormObjectClass\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "DefinedObjectClass ::= ObjectClass\n    (WITH COMPONENTS { ...,\n        class (WITH COMPONENTS { ...,\n            definition (WITH COMPONENTS { ...,\n                objectClassDefn ABSENT }) }) })",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ElementFormObjectClass ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    annotation  Annotation OPTIONAL,\n    definition  [GROUP] [NO-INSERTIONS] CHOICE {\n        reference        [GROUP] Reference,\n        expanded         ExpandedObjectClass,\n        objectClassDefn  [GROUP] ObjectClassDefn\n    }\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ExpandedObjectClass ::= SEQUENCE {\n    name         [ATTRIBUTE] NCName OPTIONAL,\n    module       ReferencedModule OPTIONAL, objectClass  [GROUP] ObjectClass\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ObjectClassDefn ::= SEQUENCE SIZE (1..MAX) OF\n    fieldSpec [GROUP] FieldSpec",
      "raw": true
    },
    {
      "indent": 3,
      "text": "FieldSpec ::= [SINGULAR-INSERTIONS] CHOICE {\n    typeField       TypeField,\n    valueField      ValueField,\n    valueSetField   ValueSetField,\n    objectField     ObjectField,\n    objectSetField  ObjectSetField,\n    optional        OptionalField\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "OptionalField ::= SEQUENCE {\n    field    [GROUP] [SINGULAR-INSERTIONS] CHOICE {\n        typeField       TypeField,\n        valueField      ValueField,\n        valueSetField   ValueSetField,\n        objectField     ObjectField,\n        objectSetField  ObjectSetField\n    },\n    default  Setting OPTIONAL\n} (WITH COMPONENTS { ...,\n      field (WITH COMPONENTS { typeField PRESENT }),\n      default (WITH COMPONENTS { ...,\n          value ABSENT,\n          valueSet ABSENT,\n          object ABSENT,\n          objectSet ABSENT }) } |\n   WITH COMPONENTS { ...,\n      field (WITH COMPONENTS { valueField PRESENT }),\n      default (WITH COMPONENTS { ...,\n          type ABSENT,\n          valueSet ABSENT,\n          object ABSENT,\n          objectSet ABSENT }) } |\n   WITH COMPONENTS { ...,\n      field (WITH COMPONENTS { valueSetField PRESENT }),\n      default (WITH COMPONENTS { ...,\n          type ABSENT,\n          value ABSENT,\n          object ABSENT,\n          objectSet ABSENT }) } |\n   WITH COMPONENTS { ...,\n      field (WITH COMPONENTS { objectField PRESENT }),\n      default (WITH COMPONENTS { ...,",
      "raw": true
    },
    {
      "indent": 6,
      "text": " type ABSENT, value ABSENT, valueSet ABSENT, objectSet ABSENT }) } | WITH COMPONENTS { ..., field (WITH COMPONENTS { objectSetField PRESENT }), default (WITH COMPONENTS { ..., type ABSENT, value ABSENT, valueSet ABSENT, object ABSENT }) })",
      "ja": "タイプABSENT、値ABSENT、値セットABSENT、objectSetとABSENT}）} | ）{（COMPONENTS {...、タイプABSENT、値無し、値セットABSENT、オブジェクトABSENT} WITH）（成分と{objectSetField存在}）...、フィールド、デフォルト}コンポーネントと"
    },
    {
      "indent": 3,
      "text": "TypeField ::= SEQUENCE {\n    annotation  Annotation OPTIONAL,\n    name        [ATTRIBUTE] TypeFieldReference\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "TypeFieldReference ::= TypeReference",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ValueField ::= SEQUENCE {\n    annotation  Annotation OPTIONAL,\n    name        [ATTRIBUTE] ValueFieldReference,\n    unique      [ATTRIBUTE] BOOLEAN OPTIONAL,\n    governor    [GROUP] [SINGULAR-INSERTIONS] CHOICE {\n        type           [GROUP] Type,\n        typeFromField  FieldName\n    }\n} ((WITH COMPONENTS { ..., unique ABSENT }) |\n   (WITH COMPONENTS { ...,\n       governor (WITH COMPONENTS { ..., typeFromField ABSENT }) }))",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ValueFieldReference ::= ValueReference",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ValueSetField ::= SEQUENCE {\n    annotation  Annotation OPTIONAL,\n    name        [ATTRIBUTE] ValueSetFieldReference,\n    governor    [GROUP] [SINGULAR-INSERTIONS] CHOICE {\n        type           [GROUP] Type,\n        typeFromField  FieldName\n    }\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ValueSetFieldReference ::= TypeReference",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ObjectField ::= SEQUENCE {\n    annotation   Annotation OPTIONAL,\n    name         [ATTRIBUTE] ObjectFieldReference,\n    objectClass  [GROUP] DefinedObjectClass",
      "raw": true
    },
    {
      "indent": 3,
      "text": "}",
      "ja": "｝"
    },
    {
      "indent": 3,
      "text": "ObjectFieldReference ::= ObjectReference",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ObjectSetField ::= SEQUENCE {\n    annotation   Annotation OPTIONAL,\n    name         [ATTRIBUTE] ObjectSetFieldReference,\n    objectClass  [GROUP] DefinedObjectClass\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ObjectSetFieldReference ::= ObjectSetReference",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Object ::= [NO-INSERTIONS] CHOICE {\n    objectRef  [NAME AS \"object\"] [ATTRIBUTE] QName,\n    object     ElementFormObject\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ElementFormObject ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    annotation  Annotation OPTIONAL,\n    definition  [GROUP] [SINGULAR-INSERTIONS] CHOICE {\n        reference    [GROUP] Reference,\n        expanded     ExpandedObject,\n        fromObjects  InformationFromObjects,\n        fields       [GROUP] ObjectDefn\n    }\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ExpandedObject ::= SEQUENCE {\n    name    [ATTRIBUTE] NCName OPTIONAL,\n    module  ReferencedModule OPTIONAL,\n    object  [GROUP] Object\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ObjectDefn ::= SEQUENCE OF field FieldSetting",
      "raw": true
    },
    {
      "indent": 3,
      "text": "FieldSetting ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    name     [ATTRIBUTE] NCName,\n    setting  [GROUP] Setting\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Setting ::= CHOICE {\n    type       [GROUP] Type,\n    value      [GROUP] Value,\n    valueSet   [GROUP] ValueSet,\n    object     [GROUP] Object,\n    objectSet  [GROUP] ObjectSet\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ObjectSet ::= [NO-INSERTIONS] CHOICE {\n    objectSetRef  [NAME AS \"objectSet\"] [ATTRIBUTE] QName,\n    objectSet     ElementFormObjectSet\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ElementFormObjectSet ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    annotation  Annotation OPTIONAL,\n    definition  [GROUP] [NO-INSERTIONS] CHOICE {\n        reference      [GROUP] Reference,\n        expanded       ExpandedObjectSet,\n        objectSetSpec  [GROUP] ObjectSetSpec,\n        fromObjects    InformationFromObjects\n    }\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ExpandedObjectSet ::= SEQUENCE {\n    name       [ATTRIBUTE] NCName OPTIONAL,\n    module     ReferencedModule OPTIONAL,\n    objectSet  [GROUP] ObjectSet\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ObjectSetSpec ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    root       [GROUP] ObjectElementSetSpec OPTIONAL,\n    extension  [HOLLOW-INSERTIONS] SEQUENCE {\n        additions  [GROUP] ObjectElementSetSpec OPTIONAL\n    } OPTIONAL\n} ((WITH COMPONENTS { ..., root PRESENT }) |\n   (WITH COMPONENTS { ..., extension PRESENT }))",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ObjectElementSetSpec ::= ElementSetSpec\n(WITH COMPONENTS { ...,\n    literalValue    ABSENT,\n    value           ABSENT,\n    includes        ABSENT,\n    range           ABSENT,\n    size            ABSENT,\n    typeConstraint  ABSENT,\n    from            ABSENT,\n    withComponent   ABSENT,\n    withComponents  ABSENT,\n    pattern         ABSENT,\n    union           (WITH COMPONENT (INCLUDES ObjectElementSetSpec)),\n    intersection    (WITH COMPONENT (INCLUDES ObjectElementSetSpec)),\n    all             (WITH COMPONENTS { ...,\n        elements        (INCLUDES ObjectElementSetSpec),\n        except          (INCLUDES ObjectElementSetSpec) }) })",
      "raw": true
    },
    {
      "indent": 3,
      "text": "EncodingControlSections ::= SEQUENCE SIZE (1..MAX) OF",
      "raw": true
    },
    {
      "indent": 7,
      "text": "section [GROUP] EncodingControlSection",
      "ja": "セクション[GROUP] EncodingControlSection"
    },
    {
      "indent": 3,
      "text": "EncodingControlSection ::= [SINGULAR-INSERTIONS] CHOICE {\n    gser  [NAME AS \"GSER\"] GSER-EncodingInstructionAssignmentList,\n    xer   [NAME AS \"XER\"] XER-EncodingInstructionAssignmentList\n    -- plus encoding control sections\n    -- for other encoding rules in the future\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ENCODING-CONTROL RXER",
      "ja": "ENCODING-CONTROL RXER"
    },
    {
      "indent": 7,
      "text": "SCHEMA-IDENTITY  \"urn:oid:1.3.6.1.4.1.21472.1.0.1\"\nTARGET-NAMESPACE \"urn:ietf:params:xml:ns:asnx\" PREFIX \"asnx\"",
      "raw": true
    },
    {
      "indent": 7,
      "text": "COMPONENT module ModuleDefinition",
      "ja": "部品モジュールのModuleDefinitionは"
    },
    {
      "indent": 7,
      "text": "COMPONENT literal [ATTRIBUTE] BOOLEAN",
      "ja": "COMPONENTリテラル[ATTRIBUTE] BOOLEAN"
    },
    {
      "indent": 3,
      "text": "END",
      "ja": "終わり"
    },
    {
      "indent": 0,
      "text": "Appendix B. ASN.X for ASN.X",
      "ja": "ASN.X付録B. ASN.X"
    },
    {
      "indent": 3,
      "text": "This appendix is non-normative.",
      "ja": "この付録は非規範的です。"
    },
    {
      "indent": 3,
      "text": "<?xml version=\"1.0\"?> <asnx:module xmlns:asnx=\"urn:ietf:params:xml:ns:asnx\" name=\"AbstractSyntaxNotation-X\" identifier=\"1.3.6.1.4.1.21472.1.0.1\" schemaIdentity=\"urn:oid:1.3.6.1.4.1.21472.1.0.1\" targetNamespace=\"urn:ietf:params:xml:ns:asnx\" targetPrefix=\"asnx\" extensibilityImplied=\"true\">",
      "ja": "<？xml version = \"1.0\"？> <asnx：モジュールのxmlns：asnx = \"壷：IETF：のparams：XML：NS：asnx\" 名前= \"AbstractSyntaxNotation-X\" の識別子= \"1.3.6.1.4.1.21472.1.0.1 \"schemaIdentity =\" 壷：OID：1.3.6.1.4.1.21472.1.0.1\" のtargetNamespace = \"壷：IETF：のparams：XML：NS：asnx\" targetPrefix = \"asnx\" extensibilityImplied = \"真\">"
    },
    {
      "indent": 4,
      "text": "<annotation> Copyright (C) The IETF Trust (2007). This version of this ASN.X module is part of RFC 4912; see the RFC itself for full legal notices.",
      "ja": "<注釈>著作権（C）IETFトラスト（2007）。このASN.XモジュールのこのバージョンはRFC 4912の一部です。完全な適法な通知についてはRFC自体を参照してください。"
    },
    {
      "indent": 4,
      "text": " Regarding this ASN.X module or any portion of it, the author makes no guarantees and is not responsible for any damage resulting from its use. The author grants irrevocable permission to anyone to use, modify, and distribute it in any way that does not diminish the rights of anyone else to use, modify, and distribute it, provided that redistributed derivative works do not contain misleading author or version information. Derivative works need not be licensed under similar terms. </annotation>",
      "ja": "このASN.Xモジュールまたはその一部については、作者は保証しませんし、その使用に起因するいかなる損害についても責任を負いません。派生作品を再配布提供し、それを使用、変更、および、使用変更する他の誰の権利を損なわない任意の方法でそれを配布し、配布するための誰にも著者の補助金取消不能の許可は、著作者またはバージョンの情報が誤解を招く含まれていません。派生作品は、同様の条件の下でライセンスされる必要はありません。 </注釈>"
    },
    {
      "indent": 4,
      "text": "<import name=\"GSER-EncodingInstructionNotation\" identifier=\"1.3.6.1.4.1.21472.1.0.2\" schemaIdentity=\"urn:oid:1.3.6.1.4.1.21472.1.0.2\" namespace=\"urn:ietf:params:xml:ns:asnx\"/>",
      "ja": "<インポート名= \"GSER-EncodingInstructionNotation\" 識別子= \"1.3.6.1.4.1.21472.1.0.2\" schemaIdentity = \"壷：OID：1.3.6.1.4.1.21472.1.0.2\" 名前空間= \"壷：IETF：のparams：XML： NS：asnx \"/>"
    },
    {
      "indent": 4,
      "text": "<import name=\"XER-EncodingInstructionNotation\" identifier=\"1.3.6.1.4.1.21472.1.0.3\" schemaIdentity=\"urn:oid:1.3.6.1.4.1.21472.1.0.3\" namespace=\"urn:ietf:params:xml:ns:asnx\"/>",
      "ja": "<インポート名= \"XER-EncodingInstructionNotation\" 識別子= \"1.3.6.1.4.1.21472.1.0.3\" schemaIdentity = \"壷：OID：1.3.6.1.4.1.21472.1.0.3\" 名前空間= \"壷：IETF：のparams：XML： NS：asnx \"/>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ModuleDefinition\"> <type> <sequence insertions=\"hollow\"> <optional> <element name=\"annotation\" type=\"asnx:Annotation\"/> </optional> <optional> <attribute name=\"format\" versionIndicator=\"true\"> <type> <constrained type=\"asnx:UTF8String\"> <literalValue>1.0</literalValue> <extension/> </constrained> </type> </attribute> <default literalValue=\"1.0\"/> </optional> <attribute name=\"name\" type=\"asnx:ModuleReference\"/> <optional> <attribute name=\"identifier\" type=\"asnx:DefinitiveIdentifier\"/> </optional> <optional> <attribute name=\"schemaIdentity\" type=\"asnx:AnyURI\"/> </optional> <optional> <attribute name=\"targetNamespace\" type=\"asnx:AnyURI\"/> </optional> <optional> <attribute name=\"targetPrefix\" type=\"asnx:NCName\"/> </optional> <optional> <attribute name=\"tagDefault\" type=\"asnx:TagDefault\"/> <default literalValue=\"automatic\"/> </optional> <optional> <attribute name=\"extensibilityImplied\" type=\"asnx:BOOLEAN\"/> <default literalValue=\"false\"/> </optional>",
      "ja": "<namedType名= \"ModuleDefinitionは\"> <タイプ> <配列挿入= \"空洞\"> <オプション> <要素名= \"注釈\" タイプ= \"asnx：注釈\" /> </オプション> <オプション> <属性名=」フォーマット \"versionIndicator = \"真\"> <タイプ> <制約タイプ= \"asnx：UTF8Stringをは\"> <literalValue> 1.0 </ literalValue> <拡張/> </制約> </> </属性を入力します> <デフォルトliteralValue =\" 1.0 \"/> </オプション> <属性名=\" 名前」タイプ= \"asnx：ModuleReference\" /> <オプション> <名前=属性 \"識別子\" タイプ= \"asnx：DefinitiveIdentifier\" /> </オプション> <オプション> <属性名= \"schemaIdentity\" タイプ= \"asnx：anyURIの\" /> </オプション> <オプション> <属性名= \"のtargetNamespace\" タイプ= \"asnx：anyURIの\" /> </オプション> <オプション> <=属性名\"targetPrefix\" タイプ= \"asnx：NCNameで\" /> </オプション> <オプション> <属性名= \"tagDefault\" タイプ= \"asnx：tagDefault\" /> <デフォルトliteralValue = \"自動\" /> </オプション> <オプション> <属性名= \"extensibilityImplied\" タイプ= \"asnx：BOOLEAN\" /> <デフォルトliteralValue = \"偽\" /> </オプション>"
    },
    {
      "indent": 4,
      "text": " <optional> <element name=\"export\"> <annotation> export is not used in this version </annotation> <type> <sequence/> </type> </element> </optional> <optional> <group name=\"imports\" type=\"asnx:ImportList\"/> </optional> <optional> <group name=\"assignments\" type=\"asnx:AssignmentList\"/> </optional> <optional> <element name=\"encodingControls\" type=\"asnx:EncodingControlSections\"/> </optional> </sequence> </type> </namedType>",
      "ja": "<オプション> <要素名= \"エクスポート\"> <注釈>エクスポートをこのバージョンで使用されていない</注釈> <タイプ> <配列/> </タイプ> </要素> </オプション> <オプション> <グループ名= \"輸入\" タイプ= \"asnx：ImportList\" /> </オプション> <オプション> <グループ名= \"割当\" タイプ= \"asnx：AssignmentList\" /> </オプション> <オプション> <要素名= \"encodingControls\"タイプ= \"asnx：EncodingControlSections\" /> </オプション> </シーケンス> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ModuleReference\" type=\"asnx:TypeReference\"/>",
      "ja": "<名前付きタイプ名=「モジュールリファレンス」タイプ=「asnx：タイプ・リファレンス」/>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"DefinitiveIdentifier\" type=\"asnx:OBJECT-IDENTIFIER\"/>",
      "ja": "<namedType名= \"DefinitiveIdentifier\" タイプ= \"asnx：OBJECT-IDENTIFIER\" />"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"TagDefault\"> <type> <enumerated> <enumeration name=\"explicit\"/> <enumeration name=\"implicit\"/> <enumeration name=\"automatic\"/> </enumerated> </type> </namedType>",
      "ja": "<namedType名= \"TagDefault\"> <タイプ> <列挙> <列挙名= \"明示的な\" /> <列挙名= \"暗黙\" /> <列挙名= \"自動\" /> </列挙> </タイプ> < / namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"Annotation\" type=\"asnx:Markup\"/>",
      "ja": "<namedType名= \"注釈\" タイプ= \"asnx：マークアップ\" />"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ImportList\"> <type> <sequenceOf minSize=\"1\"> <element name=\"import\" type=\"asnx:Import\"/> </sequenceOf> </type> </namedType>",
      "ja": "<namedType名= \"ImportList\"> <タイプ> <sequenceOfに、minSize = \"1\"> <要素名= \"インポート\" タイプ= \"asnx：インポート\" /> </ sequenceOf> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"Import\">",
      "ja": "<namedType名= \"インポート\">"
    },
    {
      "indent": 4,
      "text": " <type> <sequence> <optional> <attribute name=\"name\" type=\"asnx:ModuleReference\"/> </optional> <optional> <attribute name=\"identifier\" type=\"asnx:DefinitiveIdentifier\"/> </optional> <optional> <attribute name=\"schemaIdentity\" type=\"asnx:AnyURI\"/> </optional> <optional> <attribute name=\"namespace\" type=\"asnx:AnyURI\"/> </optional> <optional> <attribute name=\"schemaLocation\" type=\"asnx:AnyURI\"/> </optional> </sequence> </type> </namedType>",
      "ja": "<タイプ> <シーケンス> <オプション> <属性名= \"名前\" タイプ= \"asnx：ModuleReference\" /> </オプション> <オプション> <属性名= \"識別子\" タイプ= \"asnx：DefinitiveIdentifier\" /> </ /> </オプション> <オプション> <属性名= \"名前空間\" タイプ= \"asnx：anyURIの\" /> </オプション> <オプション：オプション> <オプション> <= \"anyURIのasnx\" 名前= \"schemaIdentity\" 属性タイプ> <属性名= \"のschemaLocation\" タイプ= \"asnx：anyURIの\" /> </オプション> </シーケンス> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"AssignmentList\"> <type> <sequenceOf minSize=\"1\"> <group name=\"assignment\" type=\"asnx:Assignment\"/> </sequenceOf> </type> </namedType>",
      "ja": "<namedType名= \"AssignmentList\"> <タイプ> <sequenceOfに、minSize = \"1\"> <グループ名= \"割当\" タイプ= \"asnx：割当\" /> </ sequenceOf> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"Assignment\"> <type> <choice insertions=\"none\"> <element name=\"namedType\" type=\"asnx:TypeAssignment\"/> <element name=\"namedValue\" type=\"asnx:ValueAssignment\"/> <element name=\"namedValueSet\" type=\"asnx:ValueSetTypeAssignment\"/> <element name=\"namedClass\" type=\"asnx:ObjectClassAssignment\"/> <element name=\"namedObject\" type=\"asnx:ObjectAssignment\"/> <element name=\"namedObjectSet\" type=\"asnx:ObjectSetAssignment\"/> <group name=\"component\" type=\"asnx:TopLevelNamedType\"/> </choice> </type> </namedType>",
      "ja": "<namedType名= \"代入\"> <タイプ> <選択肢挿入= \"なし\"> <要素名= \"namedType\" タイプ= \"asnx：TypeAssignment\" /> <要素名= \"のNamedValue\" タイプ= \"asnx：ValueAssignment\" / > <要素名= \"namedValueSet\" タイプ= \"asnx：ValueSetTypeAssignment\" /> <要素名= \"namedClass\" タイプ= \"asnx：ObjectClassAssignment\" /> <要素名= \"namedObject\" タイプ= \"asnx：ObjectAssignment\" /> <要素名= \"namedObjectSet\" タイプ= \"asnx：ObjectSetAssignment\" /> <グループ名= \"コンポーネント\" タイプ= \"asnx：TopLevelNamedType\" /> </選択> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"TypeAssignment\"> <type> <sequence> <optional>",
      "ja": "<namedType名= \"TypeAssignment\"> <タイプ> <シーケンス> <オプション>"
    },
    {
      "indent": 4,
      "text": " <element name=\"annotation\" type=\"asnx:Annotation\"/> </optional> <attribute name=\"name\" type=\"asnx:TypeReference\"/> <group name=\"type\" type=\"asnx:Type\"/> </sequence> </type> </namedType>",
      "ja": "<要素名= \"注釈\" タイプ= \"asnx：注釈\" /> </オプション> <名前= \"名前\" タイプ=属性 \"asnx：TypeReferenceを\" /> <グループ名= \"タイプ\" タイプ= \"asnx：タイプ\" /> </シーケンス> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"TypeReference\"> <type> <constrained type=\"asnx:UTF8String\"> <pattern literalValue=\"[A-Z]\\w*(-\\w+)*\"/> <!-- \\w is equivalent to [a-zA-Z0-9] --> </constrained> </type> </namedType>",
      "ja": "<namedType名= \"TypeReference\"> <タイプ> <制約タイプ= \"asnx：UTF8Stringを\"> <！パターンliteralValue = \"[AZ] \\ *ワット（ -  \\ワット+）*\" /> < -  \\ wは同等です[-ZA-Z0-9]  - > </拘束> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ValueAssignment\"> <type> <sequence> <optional> <element name=\"annotation\" type=\"asnx:Annotation\"/> </optional> <attribute name=\"name\" type=\"asnx:ValueReference\"/> <group name=\"type\" type=\"asnx:Type\"/> <group name=\"value\" type=\"asnx:Value\"/> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"ValueAssignment\"> <タイプ> <シーケンス> <オプション> <要素名= \"注釈\" タイプ= \"asnx：注釈\" /> </オプション> <属性名= \"名前\" タイプ= \"asnx：ValueReference \"/> <グループ名=\" タイプ」タイプ= \"asnx：タイプ\" /> <グループ名= \"値\" タイプ= \"asnx：値\" /> </配列> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ValueReference\" type=\"asnx:Identifier\"/>",
      "ja": "<namedType名= \"ValueReference\" タイプ= \"asnx：識別子\" />"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"Identifier\"> <type> <constrained type=\"asnx:UTF8String\"> <pattern literalValue=\"[a-z]\\w(-\\w+)*\"/> </constrained> </type> </namedType>",
      "ja": "<namedType名= \"識別子\"> <タイプ> <拘束タイプ= \"asnx：UTF8Stringを\"> <パターンliteralValue = \"[AZ] \\ W（ -  \\ + W）*\" /> </拘束> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ValueSetTypeAssignment\"> <type> <sequence> <optional> <element name=\"annotation\" type=\"asnx:Annotation\"/> </optional> <attribute name=\"name\" type=\"asnx:TypeReference\"/> <group name=\"type\" type=\"asnx:Type\"/>",
      "ja": "<namedType名= \"ValueSetTypeAssignment\"> <タイプ> <シーケンス> <オプション> <要素名= \"注釈\" タイプ= \"asnx：注釈\" /> </オプション> <属性名= \"名前\" タイプ= \"asnx：TypeReference \"/> <グループ名=\" タイプ」タイプ= \"asnx：タイプ\" />"
    },
    {
      "indent": 4,
      "text": " <group name=\"valueSet\" type=\"asnx:ValueSet\"/> </sequence> </type> </namedType>",
      "ja": "<グループ名= \"値セット\" タイプ= \"asnx：VALUESET\" /> </シーケンス> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ObjectClassAssignment\"> <type> <sequence> <optional> <element name=\"annotation\" type=\"asnx:Annotation\"/> </optional> <attribute name=\"name\" type=\"asnx:ObjectClassReference\"/> <group name=\"objectClass\" type=\"asnx:ObjectClass\"/> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"ObjectClassAssignment\"> <タイプ> <シーケンス> <オプション> <要素名= \"注釈\" タイプ= \"asnx：注釈\" /> </オプション> <属性名= \"名前\" タイプ= \"asnx：ObjectClassReference \"/> <グループ名=\" オブジェクトクラス」タイプ= \"asnx：ObjectClassの\" /> </シーケンス> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ObjectClassReference\"> <type> <constrained type=\"asnx:UTF8String\"> <pattern literalValue=\"[A-Z][A-Z0-9]*(-[A-Z0-9]+)*\"/> </constrained> </type> </namedType>",
      "ja": "<namedType名= \"ObjectClassReference\"> <タイプ> <拘束タイプ= \"asnx：UTF8Stringを\"> <パターンliteralValue = \"[AZ] [A-Z0-9] *（ -  [A-Z0-9] +）*\" /> </拘束> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ObjectAssignment\"> <type> <sequence> <optional> <element name=\"annotation\" type=\"asnx:Annotation\"/> </optional> <attribute name=\"name\" type=\"asnx:ObjectReference\"/> <group name=\"objectClass\" type=\"asnx:DefinedObjectClass\"/> <group name=\"object\" type=\"asnx:Object\"/> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"ObjectAssignment\"> <タイプ> <シーケンス> <オプション> <要素名= \"注釈\" タイプ= \"asnx：注釈\" /> </オプション> <属性名= \"名前\" タイプ= \"asnx：のObjectReference \"/> <グループ名=\" オブジェクトクラス」タイプ= \"asnx：DefinedObjectClass\" /> <グループ名= \"オブジェクト\" タイプ= \"asnx：オブジェクト\" /> </配列> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ObjectReference\" type=\"asnx:ValueReference\"/>",
      "ja": "<namedType名= \"のObjectReference\" タイプ= \"asnx：ValueReference\" />"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ObjectSetAssignment\"> <type> <sequence> <optional> <element name=\"annotation\" type=\"asnx:Annotation\"/> </optional> <attribute name=\"name\" type=\"asnx:ObjectSetReference\"/> <group name=\"objectClass\" type=\"asnx:DefinedObjectClass\"/>",
      "ja": "<namedType名= \"ObjectSetAssignment\"> <タイプ> <シーケンス> <オプション> <要素名= \"注釈\" タイプ= \"asnx：注釈\" /> </オプション> <属性名= \"名前\" タイプ= \"asnx：ObjectSetReference \"/> <グループ名=\" オブジェクトクラス」タイプ= \"asnx：DefinedObjectClass\" />"
    },
    {
      "indent": 4,
      "text": " <group name=\"objectSet\" type=\"asnx:ObjectSet\"/> </sequence> </type> </namedType>",
      "ja": "<グループ名= \"objectSetと\" タイプ= \"asnx：objectSetと\" /> </シーケンス> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ObjectSetReference\" type=\"asnx:TypeReference\"/>",
      "ja": "<名前付きタイプ名= \"ObjectSetReference\" タイプ= \"asnx：タイプ・リファレンス\" />"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"TopLevelNamedType\"> <type> <constrained type=\"asnx:NamedType\"> <withComponents partial=\"true\"> <element name=\"component\"> <withComponents partial=\"true\"> <group name=\"definition\"> <withComponents partial=\"true\"> <group name=\"reference\" use=\"absent\"/> </withComponents> </group> </withComponents> </element> <element name=\"element\"> <withComponents partial=\"true\"> <group name=\"definition\"> <withComponents partial=\"true\"> <group name=\"reference\" use=\"absent\"/> </withComponents> </group> </withComponents> </element> <element name=\"attribute\"> <withComponents partial=\"true\"> <group name=\"definition\"> <withComponents partial=\"true\"> <group name=\"reference\" use=\"absent\"/> </withComponents> </group> </withComponents> </element> <element name=\"group\" use=\"absent\"/> <element name=\"member\" use=\"absent\"/> <element name=\"item\" use=\"absent\"/> <element name=\"simpleContent\" use=\"absent\"/> </withComponents> </constrained> </type> </namedType>",
      "ja": "<namedType名= \"TopLevelNamedType\"> <タイプ> <拘束タイプ= \"asnx：NamedType\"> <withComponents部分= \"真\"> <要素名= \"コンポーネント\"> <withComponents部分= \"真\"> <グループ名=」定義 \"> <withComponents部分=\" 真 \"> <グループ名=\" 参照」使用= \"欠けている\" /> </ withComponents> </グループ> </ withComponents> </要素> <要素名= \"要素\"> < withComponents部分= \"真\"> <グループ名= \"定義\"> <withComponents部分= \"真\"> <グループ名= \"参照\" 使用= \"欠けている\" /> </ withComponents> </グループ> </ withComponents> < /要素> <要素名= \"属性\"> <withComponents部分= \"真\"> <グループ名= \"定義\"> <withComponents部分= \"真\"> <グループ名= \"参照\" 使用= \"欠けています\" /> < / withComponents> </グループ> </ withComponents> </要素> <要素名= \"グループ\" 使用= \"欠けている\" /> <要素名= \"メンバー\" 使用= \"欠けている\" /> <要素名= \"項目\" = \"欠けている\" /> <要素名= \"simpleContentを\" 使用= \"欠けている\" /> </ withComponents> </拘束> </タイプ> </ namedType>を使用"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"NamedType\">",
      "ja": "<namedType名= \"NamedType\">"
    },
    {
      "indent": 4,
      "text": " <type> <choice insertions=\"singular\"> <element name=\"component\" type=\"asnx:Element\"/> <element name=\"element\" type=\"asnx:Element\"/> <element name=\"attribute\" type=\"asnx:Attribute\"/> <element name=\"group\" type=\"asnx:InvisibleNamedType\"/> <element name=\"member\" type=\"asnx:InvisibleNamedType\"/> <element name=\"item\" type=\"asnx:InvisibleNamedType\"/> <element name=\"simpleContent\" type=\"asnx:InvisibleNamedType\"/> </choice> </type> </namedType>",
      "ja": "<タイプ> <選択肢挿入= \"単数\"> <要素名= \"コンポーネント\" タイプ= \"asnx：要素\" /> <要素名= \"要素\" タイプ= \"asnx：要素\" /> <要素名= \"属性\"タイプ= \"asnx：属性\" /> <要素名= \"グループ\" タイプ= \"asnx：InvisibleNamedType\" /> <要素名= \"メンバー\" タイプ= \"asnx：InvisibleNamedType\" /> <要素名= \"項目\" タイプ= \"asnx：InvisibleNamedType\" /> <要素名= \"simpleContentを\" タイプ= \"asnx：InvisibleNamedType\" /> </選択> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"Attribute\"> <type> <constrained type=\"asnx:GenericNamedType\"> <withComponents partial=\"true\"> <group name=\"definition\"> <withComponents partial=\"true\"> <group name=\"local\"> <withComponents partial=\"true\"> <attribute name=\"typeAsVersion\" use=\"absent\"/> </withComponents> </group> </withComponents> </group> </withComponents> </constrained> </type> </namedType>",
      "ja": "<namedType名= \"属性\"> <タイプ> <制約タイプ= \"asnx：GenericNamedType\"> <withComponents部分= \"真\"> <グループ名= \"定義\"> <withComponents部分= \"真\"> <グループ名=」ローカル \"> <withComponents部分=\" 真の \"> <属性名=\" typeAsVersion」使用= \"不在\" /> </ withComponents> </グループ> </ withComponents> </グループ> </ withComponents> </制約> < /タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"Element\"> <type> <constrained type=\"asnx:GenericNamedType\"> <withComponents partial=\"true\"> <group name=\"definition\"> <withComponents partial=\"true\"> <group name=\"local\"> <withComponents partial=\"true\"> <attribute name=\"versionIndicator\" use=\"absent\"/> </withComponents> </group> </withComponents> </group> </withComponents> </constrained> </type> </namedType>",
      "ja": "<namedType名= \"要素\"> <タイプ> <拘束タイプ= \"asnx：GenericNamedType\"> <withComponents部分= \"真\"> <グループ名= \"定義\"> <withComponents部分= \"真\"> <グループ名=」ローカル \"> <withComponents部分=\" 真の \"> <属性名=\" versionIndicator」使用= \"不在\" /> </ withComponents> </グループ> </ withComponents> </グループ> </ withComponents> </制約> < /タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"InvisibleNamedType\"> <type> <constrained type=\"asnx:GenericNamedType\"> <withComponents partial=\"true\"> <group name=\"definition\"> <withComponents partial=\"true\"> <group name=\"reference\" use=\"absent\"/> <group name=\"local\"> <withComponents partial=\"true\"> <attribute name=\"typeAsVersion\" use=\"absent\"/> <attribute name=\"versionIndicator\" use=\"absent\"/> </withComponents> </group> </withComponents> </group> </withComponents> </constrained> </type> </namedType>",
      "ja": "<namedType名= \"InvisibleNamedType\"> <タイプ> <拘束タイプ= \"asnx：GenericNamedType\"> <withComponents部分= \"真\"> <グループ名= \"定義\"> <withComponents部分= \"真\"> <グループ名=」参照 \"使用= \"欠けている\"/> <グループ名= \"ローカル\"> <withComponents部分= \"真\"> <名前=属性 \"typeAsVersion\" 使用= \"欠けている\"/> <属性名= \"versionIndicator\" 使用=\" 不在を「/> </ withComponents> </グループ> </ withComponents> </グループ> </ withComponents> </拘束> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"GenericNamedType\"> <type> <sequence insertions=\"hollow\"> <optional> <element name=\"annotation\" type=\"asnx:Annotation\"/> </optional> <optional> <attribute name=\"identifier\" type=\"asnx:IdentifierOrEmpty\"/> </optional> <group name=\"definition\"> <type> <choice> <group name=\"reference\" type=\"asnx:DefinedComponent\"/> <group name=\"local\" type=\"asnx:LocalComponent\"/> </choice> </type> </group> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"GenericNamedType\"> <タイプ> <配列挿入= \"空洞\"> <オプション> <要素名= \"注釈\" タイプ= \"asnx：注釈\" /> </オプション> <オプション> <属性名=」識別子 \"TYPE = \"asnx：IdentifierOrEmpty\"/> </オプション> <グループ名= \"定義\"> <タイプ> <選択> <グループ名= \"参照\" タイプ= \"asnx：DefinedComponent\"/> <グループ名=\"地元の」タイプ= \"asnx：LocalComponent\" /> </選択> </タイプ> </グループ> </シーケンス> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"IdentifierOrEmpty\"> <type> <constrained type=\"asnx:UTF8String\"> <union> <includes type=\"asnx:Identifier\"/> <literalValue></literalValue> </union>",
      "ja": "<namedType名= \"IdentifierOrEmpty\"> <タイプ> <拘束タイプ= \"asnx：UTF8Stringを\"> <組合> <含むタイプ= \"asnx：識別子\" /> <literalValue> </ literalValue> </組合>"
    },
    {
      "indent": 4,
      "text": " </constrained> </type> </namedType>",
      "ja": "</拘束> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"DefinedComponent\"> <type> <constrained> <type> <sequence insertions=\"hollow\"> <group name=\"name\"> <type> <choice insertions=\"none\"> <attribute name=\"ref\" type=\"asnx:QName\"/> <attribute name=\"elementType\" type=\"asnx:Name\"/> </choice> </type> </group> <optional> <attribute name=\"namespace\" type=\"asnx:AnyURI\"/> </optional> <optional> <attribute name=\"context\" type=\"asnx:AnyURI\"/> </optional> <optional> <attribute name=\"embedded\" type=\"asnx:BOOLEAN\"/> </optional> <optional> <group name=\"prefixes\" type=\"asnx:EncodingPrefixes\"/> </optional> </sequence> </type> <union> <withComponents partial=\"true\"> <group name=\"name\"> <withComponents> <attribute name=\"ref\" use=\"present\"/> </withComponents> </group> <attribute name=\"namespace\" use=\"absent\"/> </withComponents> <withComponents partial=\"true\"> <group name=\"name\"> <withComponents> <attribute name=\"elementType\" use=\"present\"/> </withComponents> </group> <attribute name=\"embedded\" use=\"absent\"/> </withComponents>",
      "ja": "<namedType名= \"DefinedComponent\"> <タイプ> <制約> <タイプ> <配列挿入= \"中空\"> <グループ名= \"名前\"> <タイプ> <選択肢の挿入が= \"なし\"> <属性名= \"REF \"タイプ=\" asnx：QNameの \"/> <属性名=\" をelementType」タイプ= \"asnx：名\" /> </選択> </タイプ> </グループ> <オプション> <属性名= \"名前空間\" タイプ= \"asnx：anyURIの\" /> </オプション> <オプション> <属性名= \"コンテキスト\" タイプ= \"asnx：anyURIの\" /> </オプション> <オプション> <名前= \"埋め込み\" タイプ= \"asnx属性：BOOLEANを\"/> </オプション> <オプション> <グループ名=\" 接頭辞」タイプ= \"asnx：EncodingPrefixes\" /> </オプション> </シーケンス> </入力> <組合> <withComponents部分= \"\" 真> <グループ名= \"名前\"> <withComponents> <属性名= \"REF\" 使用= \"現在\" /> </ withComponents> </グループ> <属性名= \"名前空間\" 使用= \"不在\" /> </ withComponents> <withComponents部分= \"真\"> <グループ名= \"名前\"> <withComponents> <属性名= \"をelementType\" 使用= \"現在\" /> </ withComponents> </グループ> <属性名= \"埋め込まれた\" 使用= \"不在\" /> </ withComponents>"
    },
    {
      "indent": 4,
      "text": " </union> </constrained> </type> </namedType>",
      "ja": "</組合> </制約> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"LocalComponent\"> <type> <sequence> <attribute name=\"name\" type=\"asnx:NCName\"/> <optional> <attribute name=\"typeAsVersion\" type=\"asnx:BOOLEAN\"/> </optional> <optional> <attribute name=\"versionIndicator\" type=\"asnx:BOOLEAN\"/> </optional> <group name=\"type\" type=\"asnx:Type\"/> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"LocalComponent\"> <タイプ> <シーケンス>、<属性名= \"名前\" タイプ= \"asnx：NCNameで\" /> <オプション> <属性名= \"typeAsVersion\" タイプ= \"asnx：BOOLEAN\" /> < /オプション> <オプション> <属性名= \"versionIndicator\" タイプ= \"asnx：BOOLEAN\" /> </オプション> <グループ名= \"タイプ\" タイプ= \"asnx：タイプ\" /> </シーケンス> </入力> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"Type\"> <type> <choice insertions=\"none\"> <attribute name=\"type\" identifier=\"typeRef\" type=\"asnx:QName\"/> <element name=\"type\" type=\"asnx:ElementFormType\"/> </choice> </type> </namedType>",
      "ja": "<namedType名= \"タイプ\"> <タイプ> <選択肢挿入= \"なし\"> <属性名= \"タイプ\" 識別子= \"typeRef\" タイプ= \"asnx：QNameの\" /> <要素名= \"タイプ\" タイプ=」 asnx：ElementFormType \"/> </選択> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ElementFormType\"> <type> <sequence insertions=\"hollow\"> <optional> <element name=\"annotation\" type=\"asnx:Annotation\"/> </optional> <optional> <attribute name=\"explicit\" type=\"asnx:BOOLEAN\"/> </optional> <group name=\"definition\"> <type> <choice> <group name=\"reference\" type=\"asnx:DefinedType\"/> <element name=\"expanded\" type=\"asnx:ExpandedType\"/> <attribute name=\"ancestor\"> <type> <constrained type=\"asnx:INTEGER\"> <range> <minInclusive literalValue=\"1\"/>",
      "ja": "<namedType名= \"ElementFormType\"> <タイプ> <配列挿入= \"空洞\"> <オプション> <要素名= \"注釈\" タイプ= \"asnx：注釈\" /> </オプション> <オプション> <属性名=」明示的な \"タイプ= \"asnx：BOOLEAN\"/> </オプション> <グループ名= \"定義\"> <タイプ> <選択肢> <グループ名= \"参照\" タイプ= \"asnx：DefinedType\"/> <要素名=\"拡張」TYPE = \"asnx：ExpandedType\" /> <属性名= \"先祖\"> <タイプ> <拘束タイプ= \"asnx：INTEGER\"> <範囲> <のminInclusive literalValue = \"1\" />"
    },
    {
      "indent": 4,
      "text": " </range> </constrained> </type> </attribute> <element name=\"namedBitList\" type=\"asnx:NamedBitList\"/> <element name=\"namedNumberList\" type=\"asnx:NamedNumberList\"/> <element name=\"enumerated\" type=\"asnx:EnumeratedType\"/> <element name=\"tagged\" type=\"asnx:TaggedType\"/> <element name=\"prefixed\" type=\"asnx:EncodingPrefixedType\"/> <element name=\"selection\" type=\"asnx:SelectionType\"/> <element name=\"instanceOf\" type=\"asnx:InstanceOfType\"/> <element name=\"fromClass\" type=\"asnx:ObjectClassFieldType\"/> <element name=\"fromObjects\" type=\"asnx:InformationFromObjects\"/> <element name=\"sequence\" type=\"asnx:SequenceType\"/> <element name=\"set\" type=\"asnx:SetType\"/> <element name=\"choice\" type=\"asnx:ChoiceType\"/> <element name=\"union\" type=\"asnx:UnionType\"/> <element name=\"sequenceOf\" type=\"asnx:SequenceOfType\"/> <element name=\"setOf\" type=\"asnx:SetOfType\"/> <element name=\"list\" type=\"asnx:ListType\"/> <element name=\"constrained\" type=\"asnx:ConstrainedType\"/> </choice> </type> </group> </sequence> </type> </namedType>",
      "ja": "</範囲> </拘束> </タイプ> </属性> <要素名= \"namedBitList\" タイプ= \"asnx：NamedBitList\" /> <要素名= \"namedNumberList\" タイプ= \"asnx：NamedNumberList\" /> <要素NAME = \"列挙\" タイプ= \"asnx：EnumeratedType\" /> <要素名= \"タグ\" タイプ= \"asnx：TaggedType\" /> <要素名= \"接頭辞\" タイプ= \"asnx：EncodingPrefixedType\" /> <要素名= \"選択\" タイプ= \"asnx：のSelectionType\" /> <要素名= \"INSTANCEOF\" タイプ= \"asnx：InstanceOfType\" /> <要素名= \"fromClass\" タイプ= \"asnx：ObjectClassFieldType\" /> <要素名= \"fromObjects \"タイプ=\" asnx：InformationFromObjects \"/> <要素名=\" シーケンス」タイプ= \"asnx：SequenceType\" /> <要素名= \"設定\" タイプ= \"asnx：SETTYPE\" /> <要素名= \"選択\" タイプ= \"asnx：ChoiceType\" /> <要素名= \"ユニオン\" タイプ= \"asnx：UnionType\" /> <要素名= \"sequenceOf\" タイプ= \"asnx：SequenceOfType\" /> <要素名= \"SETOF\" タイプ=」 asnx：SetOfType \"/> <要素名=\" リスト」タイプ= \"asnx：LISTTYPE\" /> <要素名= \"制約\" タイプ= \"asnx：ConstrainedType\" /> </選択> </タイプ> </グループ> </シーケンス> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"DefinedType\"> <type> <constrained> <type> <sequence> <group name=\"name\"> <type> <choice insertions=\"none\"> <attribute name=\"ref\" type=\"asnx:QName\"/> <attribute name=\"elementType\" type=\"asnx:Name\"/> </choice> </type> </group> <optional> <attribute name=\"context\" type=\"asnx:AnyURI\"/> </optional> <optional> <attribute name=\"embedded\" type=\"asnx:BOOLEAN\"/> </optional>",
      "ja": "<namedType名= \"DefinedType\"> <タイプ> <制約> <タイプ> <シーケンス>、<グループ名= \"名前\"> <タイプ> <選択肢挿入= \"なし\"> <属性名= \"参照\" タイプ= \"asnx ：QNameの \"/> <属性名=\" をelementType」タイプ= \"asnx：名\" /> </選択> </タイプ> </グループ> <オプション> <属性名= \"文脈\" タイプ= \"asnx：anyURIタイプ\" /> </オプション> <オプション> <属性名= \"埋め込まれた\" タイプ= \"asnx：BOOLEAN\" /> </オプション>"
    },
    {
      "indent": 4,
      "text": " </sequence> </type> <union> <withComponents partial=\"true\"> <group name=\"name\"> <withComponents> <attribute name=\"ref\" use=\"present\"/> </withComponents> </group> </withComponents> <withComponents partial=\"true\"> <group name=\"name\"> <withComponents> <attribute name=\"elementType\" use=\"present\"/> </withComponents> </group> <attribute name=\"embedded\" use=\"absent\"/> </withComponents> </union> </constrained> </type> </namedType>",
      "ja": "</シーケンス> </入力> <組合> <withComponents部分= \"真\"> <グループ名= \"名前\"> <withComponents> <属性名= \"参照\" を使用= \"現在\" /> </ withComponents> </グループ> </ withComponents> <withComponents部分= \"真\"> <グループ名= \"名前\"> <withComponents> <名前= \"をelementType\" 使用属性= \"現在\" /> </ withComponents> </グループ> <属性名= \"埋め込み\" 使用= \"欠けている\" /> </ withComponents> </組合> </拘束> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ExpandedType\"> <type> <sequence> <optional> <attribute name=\"name\" type=\"asnx:NCName\"/> </optional> <optional> <element name=\"module\" type=\"asnx:ReferencedModule\"/> </optional> <group name=\"type\" type=\"asnx:Type\"/> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"ExpandedType\"> <タイプ> <シーケンス> <オプション> <属性名= \"名前\" タイプ= \"asnx：NCNameで\" /> </オプション> <オプション> <要素名= \"モジュール\" タイプ=」 asnx：ReferencedModule \"/> </オプション> <グループ名=\" タイプ」タイプ= \"asnx：タイプ\" /> </配列> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ReferencedModule\"> <type> <sequence> <optional> <attribute name=\"name\" type=\"asnx:ModuleReference\"/> </optional> <optional> <attribute name=\"identifier\" type=\"asnx:DefinitiveIdentifier\"/> </optional> <optional> <attribute name=\"schemaIdentity\" type=\"asnx:AnyURI\"/>",
      "ja": "<namedType名= \"ReferencedModule\"> <タイプ> <シーケンス> <オプション> <属性名= \"名前\" タイプ= \"asnx：ModuleReference\" /> </オプション> <オプション> <属性名= \"識別子\" タイプ=」 asnx：DefinitiveIdentifier \"/> </オプション> <オプション> <属性名=\" schemaIdentity」タイプ= \"asnx：anyURIの\" />"
    },
    {
      "indent": 4,
      "text": " </optional> </sequence> </type> </namedType>",
      "ja": "</オプション> </配列> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"NamedBitList\"> <type> <sequenceOf minSize=\"1\"> <element name=\"namedBit\" type=\"asnx:NamedBit\"/> </sequenceOf> </type> </namedType>",
      "ja": "<namedType名= \"NamedBitList\"> <タイプ> <sequenceOfに、minSize = \"1\"> <要素名= \"namedBit\" タイプ= \"asnx：NamedBit\" /> </ sequenceOf> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"NamedBit\"> <type> <sequence> <attribute name=\"name\" type=\"asnx:NCName\"/> <optional> <attribute name=\"identifier\" type=\"asnx:Identifier\"/> </optional> <attribute name=\"bit\"> <type> <constrained type=\"asnx:INTEGER\"> <range> <minInclusive literalValue=\"0\"/> </range> </constrained> </type> </attribute> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"NamedBit\"> <タイプ> <シーケンス>、<属性名= \"名前\" タイプ= \"asnx：NCNameで\" /> <オプション> <属性名= \"識別子\" タイプ= \"asnx：識別子\" /> < /オプション> <属性名= \"ビット\"> <タイプ> <拘束タイプ= \"asnx：INTEGER\"> <範囲> <のminInclusive literalValue = \"0\" /> </範囲> </拘束> </タイプ> </属性> </シーケンス> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"NamedNumberList\"> <type> <sequenceOf minSize=\"1\"> <element name=\"namedNumber\" type=\"asnx:NamedNumber\"/> </sequenceOf> </type> </namedType>",
      "ja": "<namedType名= \"NamedNumberList\"> <タイプ> <sequenceOfに、minSize = \"1\"> <要素名= \"namedNumber\" タイプ= \"asnx：NamedNumber\" /> </ sequenceOf> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"NamedNumber\"> <type> <sequence> <attribute name=\"name\" type=\"asnx:NCName\"/> <optional> <attribute name=\"identifier\" type=\"asnx:Identifier\"/> </optional>",
      "ja": "<namedType名= \"NamedNumber\"> <タイプ> <シーケンス>、<属性名= \"名前\" タイプ= \"asnx：NCNameで\" /> <オプション> <属性名= \"識別子\" タイプ= \"asnx：識別子\" /> < /オプション>"
    },
    {
      "indent": 4,
      "text": " <attribute name=\"number\" type=\"asnx:INTEGER\"/> </sequence> </type> </namedType>",
      "ja": "<名前= \"番号\" タイプ=属性：/ \"asnx INTEGERを\"> </シーケンス> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"EnumeratedType\"> <type> <sequence> <group name=\"root\" type=\"asnx:Enumeration\"/> <optional> <element name=\"extension\"> <type> <sequence> <optional> <element name=\"exception\" type=\"asnx:ExceptionSpec\"/> </optional> <optional> <group name=\"additions\" type=\"asnx:Enumeration\"/> </optional> </sequence> </type> </element> </optional> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"EnumeratedType\"> <タイプ> <シーケンス> <グループ名= \"ルート\" タイプ= \"asnx：列挙\" /> <オプション> <要素名= \"拡張子\"> <タイプ> <シーケンス> <オプション> <要素名= \"例外\" タイプ= \"asnx：ExceptionSpec\" /> </オプション> <オプション> <グループ名= \"追加\" タイプ= \"asnx：列挙\" /> </オプション> </配列> </タイプ> </要素> </オプション> </配列> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"Enumeration\"> <type> <sequenceOf minSize=\"1\"> <element name=\"enumeration\" type=\"asnx:EnumerationItem\"/> </sequenceOf> </type> </namedType>",
      "ja": "<namedType名= \"列挙\"> <タイプ> <sequenceOfに、minSize = \"1\"> <要素名= \"列挙\" タイプ= \"asnx：EnumerationItem\" /> </ sequenceOf> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"EnumerationItem\"> <type> <sequence> <attribute name=\"name\" type=\"asnx:NCName\"/> <optional> <attribute name=\"identifier\" type=\"asnx:Identifier\"/> </optional> <optional> <attribute name=\"number\" type=\"asnx:INTEGER\"/> </optional> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"EnumerationItem\"> <タイプ> <シーケンス>、<属性名= \"名前\" タイプ= \"asnx：NCNameで\" /> <オプション> <属性名= \"識別子\" タイプ= \"asnx：識別子\" /> < /オプション> <オプション> <属性名= \"番号\" タイプ= \"asnx：INTEGER\" /> </オプション> </シーケンス> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"Tag\"> <type> <sequence> <optional> <attribute name=\"tagClass\" type=\"asnx:TagClass\"/> </optional> <attribute name=\"number\"> <type> <constrained type=\"asnx:INTEGER\"> <range> <minInclusive literalValue=\"0\"/> </range> </constrained> </type> </attribute> <optional> <attribute name=\"tagging\" type=\"asnx:Tagging\"/> </optional> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"タグ\"> <タイプ> <シーケンス> <オプション> <属性名= \"tagClass\" タイプ= \"asnx：TagClass\" /> </オプション> <タイプ> <制約<名前= \"数\" は属性>タイプ= \"asnx：INTEGER\"> <範囲> <のminInclusive literalValue = \"0\" /> </範囲> </拘束> </タイプ> </属性> <オプション> <属性名= \"タグ\" タイプ= \"asnx ：タグ付け \"/> </オプション> </シーケンス> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"TaggedType\"> <type> <sequence> <componentsOf type=\"asnx:Tag\"/> <group name=\"type\" type=\"asnx:Type\"/> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"TaggedType\"> <タイプ> <シーケンス> <componentsOfタイプ= \"asnx：タグ\" /> <グループ名= \"タイプ\" タイプ= \"asnx：タイプ\" /> </シーケンス> </タイプ> < / namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"TagClass\"> <type> <enumerated> <enumeration name=\"universal\"/> <enumeration name=\"application\"/> <enumeration name=\"private\"/> </enumerated> </type> </namedType>",
      "ja": "<namedType名= \"TagClass\"> <タイプ> <列挙> <列挙名= \"ユニバーサル\" /> <列挙名= \"アプリケーション\" /> <列挙名= \"プライベート\" /> </列挙> </タイプ> < / namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"Tagging\"> <type> <enumerated> <enumeration name=\"explicit\"/> <enumeration name=\"implicit\"/> </enumerated> </type>",
      "ja": "<namedType名= \"タグ付け\"> <タイプ> <列挙> <列挙名= \"明示的な\" /> <列挙名= \"暗黙\" /> </タイプ> </列挙>"
    },
    {
      "indent": 4,
      "text": "</namedType>",
      "ja": "</ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"EncodingPrefixedType\"> <type> <sequence insertions=\"hollow\"> <group name=\"prefixes\" type=\"asnx:EncodingPrefixes\"/> <group name=\"type\" type=\"asnx:Type\"/> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"EncodingPrefixedType\"> <タイプ> <配列挿入= \"空洞\"> <グループ名= \"プレフィックス\" タイプ= \"asnx：EncodingPrefixes\" /> <グループ名= \"タイプ\" タイプ= \"asnx：タイプ\" / > </シーケンス> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"EncodingPrefixes\"> <type> <sequenceOf minSize=\"1\"> <group name=\"prefix\" type=\"asnx:EncodingPrefix\"/> </sequenceOf> </type> </namedType>",
      "ja": "<namedType名= \"EncodingPrefixes\"> <タイプ> <sequenceOfに、minSize = \"1\"> <グループ名= \"接頭辞\" タイプ= \"asnx：EncodingPrefix\" /> </ sequenceOf> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"EncodingPrefix\"> <type> <choice insertions=\"singular\"> <element name=\"TAG\" identifier=\"tag\" type=\"asnx:Tag\"/> <element name=\"GSER\" identifier=\"gser\" type=\"asnx:GSER-EncodingInstruction\"/> <element name=\"XER\" identifier=\"xer\" type=\"asnx:XER-EncodingInstruction\"/> <!-- plus encoding instructions for other encoding rules in the future --> </choice> </type> </namedType>",
      "ja": "<namedType名= \"EncodingPrefix\"> <タイプ> <選択肢挿入= \"単数\"> <要素名= \"TAG\" 識別子= \"タグ\" タイプ= \"asnx：タグ\" /> <要素名= \"GSER\" 識別子=」 GSER」タイプ= \"asnx：GSER-EncodingInstruction\" /> <要素名= \"XER\" 識別子= \"XER\" タイプ= \"asnx：XER-EncodingInstruction\" /> < - 将来的には他の符号化規則のためのプラスの符号化命令！ - > </選択> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"SelectionType\"> <type> <sequence> <group name=\"alternative\"> <type> <choice insertions=\"singular\"> <attribute name=\"component\" type=\"asnx:QName\"/> <attribute name=\"element\" type=\"asnx:QName\"/> <attribute name=\"attribute\" type=\"asnx:QName\"/> <attribute name=\"group\" type=\"asnx:QName\"/> <attribute name=\"member\" type=\"asnx:QName\"/> </choice> </type> </group> <group name=\"type\" type=\"asnx:Type\"/>",
      "ja": "<namedType名= \"のSelectionType\"> <タイプ> <シーケンス>、<グループ名= \"代替\"> <タイプ> <選択肢挿入= \"単数\"> <属性名= \"コンポーネント\" タイプ= \"asnx：QNameの\" /> <属性名= \"要素\" タイプ= \"asnx：QNameの\" /> <属性名= \"属性\" タイプ= \"asnx：QNameの\" /> <属性名= \"グループ\" タイプ= \"asnx：QNameの\" /> <属性名= \"メンバー\" タイプ= \"asnx：QNameの\" /> </選択> </タイプ> </グループ> <グループ名= \"タイプ\" タイプ= \"asnx：タイプ\" />"
    },
    {
      "indent": 4,
      "text": " </sequence> </type> </namedType>",
      "ja": "</シーケンス> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"InstanceOfType\" type=\"asnx:DefinedObjectClass\"/>",
      "ja": "<namedType名= \"InstanceOfType\" タイプ= \"asnx：DefinedObjectClass\" />"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ObjectClassFieldType\"> <type> <sequence> <group name=\"objectClass\" type=\"asnx:DefinedObjectClass\"/> <group name=\"fieldName\" type=\"asnx:FieldName\"/> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"ObjectClassFieldType\"> <タイプ> <シーケンス> <グループ名= \"オブジェクトクラス\" タイプ= \"asnx：DefinedObjectClass\" /> <グループ名= \"フィールド名\" タイプ= \"asnx：フィールド名\" /> </シーケンス> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"FieldName\"> <type> <choice insertions=\"singular\"> <attribute name=\"fieldName\" identifier=\"fieldNameAtt\" type=\"asnx:PrimitiveFieldNames\"/> <element name=\"fieldName\" type=\"asnx:PrimitiveFieldNames\"/> </choice> </type> </namedType>",
      "ja": "<namedType名= \"フィールド名\"> <タイプ> <選択肢挿入= \"単数\"> <属性名= \"フィールド名\" 識別子= \"fieldNameAtt\" タイプ= \"asnx：PrimitiveFieldNames\" /> <要素名= \"フィールド名\" タイプ=」 asnx：PrimitiveFieldNames \"/> </選択> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"PrimitiveFieldNames\" type=\"asnx:UTF8String\"/>",
      "ja": "<namedType名= \"PrimitiveFieldNames\" タイプ= \"asnx：UTF8Stringを\" />"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"InformationFromObjects\"> <type> <sequence insertions=\"hollow\"> <group name=\"referencedObjects\" type=\"asnx:ReferencedObjects\"/> <group name=\"fieldName\" type=\"asnx:FieldName\"/> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"InformationFromObjects\"> <タイプ> <配列挿入= \"空洞\"> <グループ名= \"referencedObjects\" タイプ= \"asnx：ReferencedObjects\" /> <グループ名= \"フィールド名\" タイプ= \"asnx：フィールド名\" / > </シーケンス> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ReferencedObjects\"> <type> <choice insertions=\"singular\"> <group name=\"object\" type=\"asnx:Object\"/> <group name=\"objectSet\" type=\"asnx:ObjectSet\"/> </choice> </type> </namedType>",
      "ja": "<namedType名= \"ReferencedObjects\"> <タイプ> <選択肢挿入= \"単数\"> <グループ名= \"オブジェクト\" タイプ= \"asnx：オブジェクト\" /> = <グループ名= \"objectSetと\" タイプ \"asnx：objectSetと\" / > </選択> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"Insertions\"> <type> <enumerated>",
      "ja": "<namedType名= \"挿入\"> <タイプ> <列挙>"
    },
    {
      "indent": 4,
      "text": " <enumeration name=\"none\"/> <enumeration name=\"hollow\"/> <enumeration name=\"singular\"/> <enumeration name=\"uniform\"/> <enumeration name=\"multiform\"/> </enumerated> </type> </namedType>",
      "ja": "<列挙名= \"NONE\" /> <列挙名= \"空洞\" /> <列挙名= \"単数\" /> <列挙名= \"均一\" /> <列挙名= \"多形\" /> </列挙> < /タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"SequenceType\"> <type> <sequence insertions=\"hollow\"> <optional> <attribute name=\"insertions\" type=\"asnx:Insertions\"/> </optional> <optional> <group name=\"root\" type=\"asnx:ComponentTypeList\"/> </optional> <optional> <group name=\"extensionAndFinal\"> <type> <sequence insertions=\"hollow\"> <element name=\"extension\"> <type> <sequence insertions=\"hollow\"> <optional> <element name=\"exception\" type=\"asnx:ExceptionSpec\"/> </optional> <optional> <group name=\"additions\" type=\"asnx:ExtensionAdditions\"/> </optional> </sequence> </type> </element> <optional> <group name=\"root\" type=\"asnx:ComponentTypeList\"/> </optional> </sequence> </type> </group> </optional> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"SequenceType\"> <タイプ> <配列挿入= \"空洞\"> <オプション> <属性名= \"挿入\" タイプ= \"asnx：挿入\" /> </オプション> <オプション> <グループ名=」ルート」タイプ= \"asnx：ComponentTypeList\" /> </オプション> <オプション> <グループ名= \"extensionAndFinal\"> <タイプ> <配列挿入= \"空洞\"> <要素名= \"拡張\"> <タイプ> <配列挿入= \"空洞\"> <オプション> <要素名= \"例外\" タイプ= \"asnx：ExceptionSpec\" /> </オプション> <オプション> <グループ名= \"追加\" タイプ= \"asnx：ExtensionAdditions\" /> </オプション> </配列> </タイプ> </要素> <オプション> <グループ名= \"ルート\" タイプ= \"asnx：ComponentTypeList\" /> </オプション> </配列> </タイプ> </グループ> < /オプション> </配列> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ComponentTypeList\"> <type> <sequenceOf minSize=\"1\">",
      "ja": "<namedType名= \"ComponentTypeList\"> <タイプ> <sequenceOfに、minSize = \"1\">"
    },
    {
      "indent": 4,
      "text": " <group name=\"componentType\" type=\"asnx:ComponentType\"/> </sequenceOf> </type> </namedType>",
      "ja": "<グループ名= \"のcomponentType\" タイプ= \"asnx：COMPONENTTYPE\" /> </ sequenceOf> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ComponentType\"> <type> <choice insertions=\"none\"> <group name=\"component\" type=\"asnx:SequenceNamedType\"/> <element name=\"optional\"> <type> <sequence> <group name=\"component\" type=\"asnx:SequenceNamedType\"/> <optional> <element name=\"default\" type=\"asnx:Value\"/> </optional> </sequence> </type> </element> <element name=\"componentsOf\" type=\"asnx:Type\"/> </choice> </type> </namedType>",
      "ja": "<namedType名= \"COMPONENTTYPE\"> <タイプ> <選択挿入= \"NONE\"> <グループ名= \"コンポーネント\" タイプ= \"asnx：SequenceNamedType\" /> <要素名= \"オプション\"> <タイプ> <シーケンス> <グループ名= \"コンポーネント\" タイプ= \"asnx：SequenceNamedType\" /> <オプション> <要素名= \"デフォルト\" タイプ= \"asnx：値\" /> </オプション> </配列> </タイプ> </要素> <要素名= \"componentsOf\" タイプ= \"asnx：タイプ\" /> </選択> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"SequenceNamedType\"> <type> <constrained type=\"asnx:NamedType\"> <withComponents partial=\"true\"> <element name=\"member\" use=\"absent\"/> <element name=\"item\" use=\"absent\"/> </withComponents> </constrained> </type> </namedType>",
      "ja": "<namedType名= \"SequenceNamedType\"> <タイプ> <拘束タイプ= \"asnx：NamedType\"> <withComponents部分= \"真\"> <要素名= \"メンバー\" 使用= \"欠けている\" /> <要素名= \"項目\" </ namedType>> </> </入力制約= \"欠けている\" /> </ withComponents>使用"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ExtensionAdditions\"> <type> <sequenceOf minSize=\"1\"> <group name=\"addition\" type=\"asnx:ExtensionAddition\"/> </sequenceOf> </type> </namedType>",
      "ja": "<namedType名= \"ExtensionAdditions\"> <タイプ> <sequenceOfに、minSize = \"1\"> <グループ名= \"付加\" タイプ= \"asnx：ExtensionAddition\" /> </ sequenceOf> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ExtensionAddition\"> <type> <choice insertions=\"none\"> <element name=\"extensionGroup\" type=\"asnx:ExtensionAdditionGroup\"/>",
      "ja": "<namedType名= \"ExtensionAddition\"> <タイプ> <選択肢挿入= \"なし\"> <要素名= \"extensionGroup\" タイプ= \"asnx：ExtensionAdditionGroup\" />"
    },
    {
      "indent": 4,
      "text": " <group name=\"componentType\" type=\"asnx:ComponentType\"/> </choice> </type> </namedType>",
      "ja": "<グループ名= \"のcomponentType\" タイプ= \"asnx：COMPONENTTYPE\" /> </選択> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ExtensionAdditionGroup\"> <type> <sequence insertions=\"hollow\"> <optional> <attribute name=\"version\" type=\"asnx:VersionNumber\"/> </optional> <group name=\"componentTypes\" type=\"asnx:ComponentTypeList\"/> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"ExtensionAdditionGroup\"> <タイプ> <配列挿入= \"空洞\"> <オプション> <属性名= \"バージョン\" タイプ= \"asnx：のversionNumber\" /> </オプション> <グループ名= \"componentTypes\" タイプ= \"asnx：ComponentTypeList\" /> </配列> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"VersionNumber\"> <type> <constrained type=\"asnx:INTEGER\"> <range> <minInclusive literalValue=\"2\"/> </range> </constrained> </type> </namedType>",
      "ja": "<namedType名= \"のversionNumber\"> <タイプ> <拘束タイプ= \"asnx：INTEGER\"> <範囲> <のminInclusive literalValue = \"2\" /> </範囲> </拘束> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"SetType\" type=\"asnx:SequenceType\"/>",
      "ja": "<namedType名= \"SETTYPE\" タイプ= \"asnx：SequenceType\" />"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ChoiceOrUnionType\"> <type> <sequence insertions=\"hollow\"> <optional> <attribute name=\"insertions\" type=\"asnx:Insertions\"/> </optional> <optional> <attribute name=\"precedence\" type=\"asnx:PrecedenceList\"/> </optional> <group name=\"root\" type=\"asnx:AlternativeTypeList\"/> <optional> <element name=\"extension\"> <type> <sequence insertions=\"hollow\"> <optional> <element name=\"exception\" type=\"asnx:ExceptionSpec\"/> </optional> <optional> <group name=\"additions\" type=\"asnx:ExtensionAdditionAlternatives\"/>",
      "ja": "<namedType名= \"ChoiceOrUnionType\"> <タイプ> <配列挿入= \"中空\"> <オプション> <属性名= \"挿入\" タイプ= \"asnx：挿入\" /> </オプション> <オプション> <「=属性名優先度 \"TYPE = \"asnx：PrecedenceList\"/> </オプション> <グループ名= \"ルート\" タイプ= \"asnx：AlternativeTypeList\"/> <オプション> <要素名= \"拡張子\"> <タイプ> <配列挿入=\"中空 \"> <オプション> <要素名=\" 例外」タイプ= \"asnx：ExceptionSpec\" /> </オプション> <オプション> <グループ名= \"追加\" タイプ= \"asnx：ExtensionAdditionAlternatives\" />"
    },
    {
      "indent": 4,
      "text": " </optional> </sequence> </type> </element> </optional> </sequence> </type> </namedType>",
      "ja": "</オプション> </配列> </タイプ> </要素> </オプション> </配列> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"PrecedenceList\"> <type> <list minSize=\"1\"> <item name=\"member\" type=\"asnx:QName\"/> </list> </type> </namedType>",
      "ja": "<namedType名= \"PrecedenceList\"> <タイプ> <リストに、minSize = \"1\"> <項目名= \"メンバー\" タイプ= \"asnx：QNameの\" /> </リスト> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"AlternativeTypeList\"> <type> <sequenceOf minSize=\"1\"> <group name=\"component\" type=\"asnx:ChoiceOrUnionNamedType\"/> </sequenceOf> </type> </namedType>",
      "ja": "<namedType名= \"AlternativeTypeList\"> <タイプ> <sequenceOfに、minSize = \"1\"> <グループ名= \"コンポーネント\" タイプ= \"asnx：ChoiceOrUnionNamedType\" /> </ sequenceOf> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ChoiceOrUnionNamedType\"> <type> <constrained type=\"asnx:NamedType\"> <withComponents partial=\"true\"> <element name=\"item\" use=\"absent\"/> <element name=\"simpleContent\" use=\"absent\"/> </withComponents> </constrained> </type> </namedType>",
      "ja": "<namedType名= \"ChoiceOrUnionNamedType\"> <タイプ> <拘束タイプ= \"asnx：NamedType\"> <withComponents部分= \"真\"> <要素名= \"項目\" の使用= \"欠けている\" /> <要素名= \"simpleContentを\" </ namedType>> </> </入力制約= \"欠けている\" /> </ withComponents>使用"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ExtensionAdditionAlternatives\"> <type> <sequenceOf minSize=\"1\"> <group name=\"addition\" type=\"asnx:ExtensionAdditionAlternative\"/> </sequenceOf> </type> </namedType>",
      "ja": "<namedType名= \"ExtensionAdditionAlternatives\"> <タイプ> <sequenceOfに、minSize = \"1\"> <グループ名= \"付加\" タイプ= \"asnx：ExtensionAdditionAlternative\" /> </ sequenceOf> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ExtensionAdditionAlternative\"> <type> <choice insertions=\"none\"> <element name=\"extensionGroup\"",
      "ja": "<namedType名= \"ExtensionAdditionAlternative\"> <タイプ> <選択肢挿入= \"なし\"> <要素名= \"extensionGroup\""
    },
    {
      "indent": 4,
      "text": " type=\"asnx:ExtensionAdditionAlternativesGroup\"/> <group name=\"component\" type=\"asnx:ChoiceOrUnionNamedType\"/> </choice> </type> </namedType>",
      "ja": "タイプ= \"asnx：ExtensionAdditionAlternativesGroup\" /> <グループ名= \"コンポーネント\" タイプ= \"asnx：ChoiceOrUnionNamedType\" /> </選択> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ExtensionAdditionAlternativesGroup\"> <type> <sequence insertions=\"hollow\"> <optional> <attribute name=\"version\" type=\"asnx:VersionNumber\"/> </optional> <group name=\"alternatives\" type=\"asnx:AlternativeTypeList\"/> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"ExtensionAdditionAlternativesGroup\"> <タイプ> <配列挿入= \"中空\"> <オプション> <属性名= \"バージョン\" タイプ= \"asnx：のversionNumber\" /> </オプション> <グループ名= \"代替\" タイプ= \"asnx：AlternativeTypeList\" /> </配列> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ChoiceType\"> <type> <constrained type=\"asnx:ChoiceOrUnionType\"> <withComponents partial=\"true\"> <attribute name=\"precedence\" use=\"absent\"/> <group name=\"root\"> <withComponent> <includes type=\"asnx:ChoiceNamedType\"/> </withComponent> </group> <element name=\"extension\"> <withComponents partial=\"true\"> <group name=\"additions\"> <withComponent> <withComponents partial=\"true\"> <element name=\"extensionGroup\"> <withComponents partial=\"true\"> <group name=\"alternatives\"> <withComponent> <includes type=\"asnx:ChoiceNamedType\"/> </withComponent> </group> </withComponents> </element> <group name=\"component\"> <includes type=\"asnx:ChoiceNamedType\"/> </group> </withComponents> </withComponent> </group> </withComponents>",
      "ja": "<namedType名= \"ChoiceType\"> <タイプ> <拘束タイプ= \"asnx：ChoiceOrUnionType\"> <withComponents部分= \"真\"> <属性名= \"優先度\" 使用= \"欠けている\" /> <グループ名= \"ルート\" > <withComponent> <含むタイプ= \"asnx：ChoiceNamedType\" /> </ withComponent> </グループ> <要素名= \"拡張子\"> <withComponents部分= \"真\"> <グループ名= \"追加\"> <withComponent> <withComponents部分= \"真\"> <要素名= \"extensionGroup\"> <withComponents部分= \"真\"> <グループ名= \"代替\"> <withComponent> <含むタイプ= \"asnx：ChoiceNamedType\" /> </ withComponent> </グループ> </ withComponents> </要素> <グループ名= \"コンポーネント\"> <含むタイプ= \"asnx：ChoiceNamedType\" /> </グループ> </ withComponents> </ withComponent> </グループ> </ withComponents >"
    },
    {
      "indent": 4,
      "text": " </element> </withComponents> </constrained> </type> </namedType>",
      "ja": "</要素> </ withComponents> </拘束> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ChoiceNamedType\"> <type> <constrained type=\"asnx:ChoiceOrUnionNamedType\"> <withComponents partial=\"true\"> <element name=\"member\" use=\"absent\"/> </withComponents> </constrained> </type> </namedType>",
      "ja": "<namedType名= \"ChoiceNamedType\"> <タイプ> <拘束タイプ= \"asnx：ChoiceOrUnionNamedType\"> <withComponents部分= \"真\"> <要素名= \"メンバー\" 使用= \"欠けている\" /> </ withComponents> </拘束> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"UnionType\"> <type> <constrained type=\"asnx:ChoiceOrUnionType\"> <withComponents partial=\"true\"> <attribute name=\"insertions\" use=\"absent\"/> <group name=\"root\"> <withComponent> <includes type=\"asnx:UnionNamedType\"/> </withComponent> </group> <element name=\"extension\"> <withComponents partial=\"true\"> <group name=\"additions\"> <withComponent> <withComponents partial=\"true\"> <element name=\"extensionGroup\"> <withComponents partial=\"true\"> <group name=\"alternatives\"> <withComponent> <includes type=\"asnx:UnionNamedType\"/> </withComponent> </group> </withComponents> </element> <group name=\"component\"> <includes type=\"asnx:UnionNamedType\"/> </group> </withComponents> </withComponent> </group> </withComponents> </element>",
      "ja": "<namedType名= \"UnionType\"> <タイプ> <拘束タイプ= \"asnx：ChoiceOrUnionType\"> <withComponents部分= \"真\"> <名前= \"挿入\" 使用属性= \"欠けている\" /> <グループ名= \"ルート\" > <withComponent> <含むタイプ= \"asnx：UnionNamedType\" /> </ withComponent> </グループ> <要素名= \"拡張子\"> <withComponents部分= \"真\"> <グループ名= \"追加\"> <withComponent> <withComponents部分= \"真\"> <要素名= \"extensionGroup\"> <withComponents部分= \"真\"> <グループ名= \"代替\"> <withComponent> <含むタイプ= \"asnx：UnionNamedType\" /> </ withComponent> </グループ> </ withComponents> </要素> <グループ名= \"コンポーネント\"> <含むタイプ= \"asnx：UnionNamedType\" /> </グループ> </ withComponents> </ withComponent> </グループ> </ withComponents > </要素>"
    },
    {
      "indent": 4,
      "text": " </withComponents> </constrained> </type> </namedType>",
      "ja": "</ withComponents> </拘束> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"UnionNamedType\"> <type> <constrained type=\"asnx:ChoiceOrUnionNamedType\"> <withComponents partial=\"true\"> <element name=\"component\" use=\"absent\"/> <element name=\"element\" use=\"absent\"/> <element name=\"attribute\" use=\"absent\"/> <element name=\"group\" use=\"absent\"/> </withComponents> </constrained> </type> </namedType>",
      "ja": "<namedType名= \"UnionNamedType\"> <タイプ> <拘束タイプ= \"asnx：ChoiceOrUnionNamedType\"> <withComponents部分= \"真\"> <要素名= \"コンポーネント\" 使用= \"欠けている\" /> <要素名= \"要素\" = \"欠けている\" /> <要素名= \"グループ\" 使用= \"欠けている\" /> </ withComponents> </拘束> </タイプ> </ namedType = \"欠けている\" /> <要素名= \"属性\" の使用を使用し>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"SequenceOfOrListType\"> <type> <sequence> <optional> <attribute name=\"minSize\"> <type> <constrained type=\"asnx:INTEGER\"> <range> <minInclusive literalValue=\"0\"/> </range> </constrained> </type> </attribute> </optional> <optional> <attribute name=\"maxSize\"> <type> <constrained type=\"asnx:INTEGER\"> <range> <minInclusive literalValue=\"0\"/> </range> </constrained> </type> </attribute> </optional> <group name=\"component\"> <type> <constrained type=\"asnx:NamedType\"> <withComponents partial=\"true\"> <element name=\"attribute\" use=\"absent\"/>",
      "ja": "<namedType名= \"SequenceOfOrListType\"> <タイプ> <シーケンス> <オプション> <属性名= \"に、minSize\"> <タイプ> <拘束タイプ= \"asnx：INTEGER\"> <範囲> <のminInclusive literalValue = \"0\" /> </範囲> </拘束> </タイプ> </属性> </オプション> <オプション> <属性名= \"maxSizeの\"> <タイプ> <拘束タイプ= \"asnx：INTEGER\"> <範囲> <のminInclusive literalValue = \"0\" /> </範囲> </拘束> </> </属性> </オプション> <グループ名= \"コンポーネント\" タイプ> <タイプ> <拘束タイプ= \"asnx：NamedType\"> <部分withComponents = \"真\"> <要素名= \"属性\" 使用= \"不在\" />"
    },
    {
      "indent": 4,
      "text": " <element name=\"member\" use=\"absent\"/> <element name=\"simpleContent\" use=\"absent\"/> </withComponents> </constrained> </type> </group> </sequence> </type> </namedType>",
      "ja": "<要素名= \"メンバー\" 使用= \"欠けている\" /> <要素名= \"simpleContentを\" 使用= \"欠けている\" /> </ withComponents> </拘束> </タイプ> </グループ> </配列> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"SequenceOfType\"> <type> <constrained type=\"asnx:SequenceOfOrListType\"> <withComponents partial=\"true\"> <group name=\"component\"> <withComponents partial=\"true\"> <element name=\"item\" use=\"absent\"/> </withComponents> </group> </withComponents> </constrained> </type> </namedType>",
      "ja": "<namedType名= \"SequenceOfType\"> <タイプ> <拘束タイプ= \"asnx：SequenceOfOrListType\"> <withComponents部分= \"真\"> <グループ名= \"コンポーネント\"> <withComponents部分= \"真\"> <要素名=」項目」使用= \"欠けている\" /> </ withComponents> </グループ> </ withComponents> </拘束> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"SetOfType\" type=\"asnx:SequenceOfType\"/>",
      "ja": "<namedType名= \"SetOfType\" タイプ= \"asnx：SequenceOfType\" />"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ListType\"> <type> <constrained type=\"asnx:SequenceOfOrListType\"> <withComponents partial=\"true\"> <group name=\"component\"> <withComponents partial=\"true\"> <element name=\"component\" use=\"absent\"/> <element name=\"element\" use=\"absent\"/> <element name=\"group\" use=\"absent\"/> </withComponents> </group> </withComponents> </constrained> </type> </namedType>",
      "ja": "<namedType名= \"LISTTYPE\"> <タイプ> <拘束タイプ= \"asnx：SequenceOfOrListType\"> <withComponents部分= \"真\"> <グループ名= \"コンポーネント\"> <withComponents部分= \"真\"> <要素名=」成分」使用= \"欠けている\" /> <要素名= \"要素\" 使用= \"欠けている\" /> <要素名= \"グループ\" 使用= \"欠けている\" /> </ withComponents> </グループ> </ withComponents> < /拘束> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ConstrainedType\"> <type> <sequence insertions=\"hollow\"> <group name=\"type\" type=\"asnx:Type\"/> <group name=\"constraint\" type=\"asnx:Constraint\"/> </sequence>",
      "ja": "<namedType名= \"ConstrainedType\"> <タイプ> <配列挿入= \"空洞\"> <グループ名= \"タイプ\" タイプ= \"asnx：タイプ\" /> <グループ名= \"制約\" タイプ= \"asnx：制約\" / > </シーケンス>"
    },
    {
      "indent": 4,
      "text": " </type> </namedType>",
      "ja": "</タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"Constraint\"> <type> <sequence> <group name=\"constraintSpec\"> <type> <choice insertions=\"none\"> <group name=\"subtype\" type=\"asnx:ElementSetSpecs\"/> <element name=\"constrainedBy\" type=\"asnx:UserDefinedConstraint\"/> <element name=\"table\" type=\"asnx:TableConstraint\"/> <element name=\"contents\" type=\"asnx:ContentsConstraint\"/> </choice> </type> </group> <optional> <element name=\"exception\" type=\"asnx:ExceptionSpec\"/> </optional> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"制約\"> <タイプ> <シーケンス>、<グループ名= \"constraintSpec\"> <タイプ> <選択肢挿入= \"なし\"> <グループ名= \"サブタイプ\" タイプ= \"asnx：ElementSetSpecs\" /> <要素名= \"constrainedBy\" タイプ= \"asnx：UserDefinedConstraint\" /> <要素名= \"テーブル\" タイプ= \"asnx：TableConstraint\" /> <要素名= \"内容\" タイプ= \"asnx：ContentsConstraint\" /> </選択> </タイプ> </グループ> <オプション> <要素名= \"例外\" タイプ= \"asnx：ExceptionSpec\" /> </オプション> </配列> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"UserDefinedConstraint\"> <type> <sequence insertions=\"hollow\"> <optional> <element name=\"annotation\" type=\"asnx:Annotation\"/> </optional> <optional> <group name=\"parameters\" type=\"asnx:ConstraintParameters\"/> </optional> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"UserDefinedConstraint\"> <タイプ> <配列挿入= \"空洞\"> <オプション> <要素名= \"注釈\" タイプ= \"asnx：注釈\" /> </オプション> <オプション> <グループ名=」パラメータ」TYPE = \"asnx：ConstraintParameters\" /> </オプション> </配列> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ConstraintParameters\"> <type> <sequenceOf minSize=\"1\"> <group name=\"parameter\" type=\"asnx:UserDefinedConstraintParameter\"/> </sequenceOf> </type> </namedType>",
      "ja": "<namedType名= \"ConstraintParameters\"> <タイプ> <sequenceOfに、minSize = \"1\"> <グループ名= \"パラメータ\" タイプ= \"asnx：UserDefinedConstraintParameter\" /> </ sequenceOf> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"UserDefinedConstraintParameter\"> <type>",
      "ja": "<namedType名= \"UserDefinedConstraintParameter\"> <タイプ>"
    },
    {
      "indent": 6,
      "text": "<choice insertions=\"singular\"> <element name=\"valueParameter\"> <type> <sequence> <group name=\"type\" type=\"asnx:Type\"/> <group name=\"value\" type=\"asnx:Value\"/> </sequence> </type> </element> <element name=\"valueSetParameter\"> <type> <sequence> <group name=\"type\" type=\"asnx:Type\"/> <group name=\"valueSet\" type=\"asnx:ValueSet\"/> </sequence> </type> </element> <element name=\"objectParameter\"> <type> <sequence> <group name=\"objectClass\" type=\"asnx:DefinedObjectClass\"/> <group name=\"object\" type=\"asnx:Object\"/> </sequence> </type> </element> <element name=\"objectSetParameter\"> <type> <sequence> <group name=\"objectClass\" type=\"asnx:DefinedObjectClass\"/> <group name=\"objectSet\" type=\"asnx:ObjectSet\"/> </sequence> </type> </element> <element name=\"typeParameter\"> <type> <sequence> <group name=\"type\" type=\"asnx:Type\"/> </sequence> </type> </element> <element name=\"classParameter\"> <type> <sequence> <group name=\"objectClass\" type=\"asnx:DefinedObjectClass\"/> </sequence> </type> </element> </choice>",
      "ja": "<選択肢挿入= \"単数\"> <要素名= \"valueParameter\"> <タイプ> <シーケンス>、<グループ名= \"タイプ\" タイプ= \"asnx：タイプ\" /> <グループ名= \"値\" タイプ= \"asnx：値 \"/> </配列> </> </要素タイプ> <要素名=\" valueSetParameter \"> <タイプ> <シーケンス> <グループ名=\" タイプ」タイプ= \"asnx：タイプ\" /> <グループ名= \"値セット\" タイプ= \"asnx：値セット\" /> </配列> </タイプ> </要素> <要素名= \"objectParameter\"> <タイプ> <シーケンス> <グループ名= \"オブジェクトクラス\" タイプ= \"asnx。 DefinedObjectClass \"/> <グループ名=\" オブジェクト」タイプ= \"asnx：オブジェクト\" /> </配列> </タイプ> </要素> <要素名= \"objectSetParameter\"> <タイプ> <シーケンス> <グループ名= \"オブジェクトクラス\" TYPE = \"asnx：DefinedObjectClass\" /> <グループ名= \"objectSetと\" タイプ= \"asnx：objectSetと\" /> </配列> </タイプ> </要素> <要素名= \"typeParameter\"> <タイプ> <シーケンス> <グループ名= \"タイプ\" タイプ= \"asnx：タイプ\" /> </配列> </タイプ> </要素> <要素名= \"classParameter\"> <タイプ> <シーケンス> <グループ名= \"オブジェクトクラス\" タイプ= \"asnx：DefinedObjectClass\" /> </シーケンス> </タイプ> </要素> </選択>"
    },
    {
      "indent": 4,
      "text": " </type> </namedType>",
      "ja": "</タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"TableConstraint\"> <type> <sequence> <group name=\"objectSet\" type=\"asnx:ObjectSet\"/> <optional> <group name=\"componentRelation\" type=\"asnx:AtNotations\"/> </optional> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"TableConstraint\"> <タイプ> <シーケンス> <グループ名= \"objectSetと\" タイプ= \"asnx：objectSetと\" /> <オプション> <グループ名= \"componentRelation\" タイプ= \"asnx：AtNotations\" /> < /オプション> </配列> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"AtNotations\"> <type> <sequenceOf minSize=\"1\"> <element name=\"restrictBy\" type=\"asnx:AtNotation\"/> </sequenceOf> </type> </namedType>",
      "ja": "<namedType名= \"AtNotations\"> <タイプ> <sequenceOfに、minSize = \"1\"> <要素名= \"restrictBy\" タイプ= \"asnx：AtNotation\" /> </ sequenceOf> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"AtNotation\" type=\"asnx:Markup\"/>",
      "ja": "<namedType名= \"AtNotation\" タイプ= \"asnx：マークアップ\" />"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ContentsConstraint\"> <type> <constrained> <type> <sequence> <optional> <element name=\"containing\" type=\"asnx:Type\"/> </optional> <optional> <element name=\"encodedBy\" type=\"asnx:Value\"/> </optional> </sequence> </type> <union> <withComponents partial=\"true\"> <element name=\"containing\" use=\"present\"/> </withComponents> <withComponents partial=\"true\"> <element name=\"encodedBy\" use=\"present\"/> </withComponents> </union> </constrained> </type> </namedType>",
      "ja": "<namedType名= \"ContentsConstraint\"> <タイプ> <拘束> <タイプ> <シーケンス> <オプション> <要素名= \"含む\" タイプ= \"asnx：タイプ\" /> </オプション> <オプション> <要素名= \"encodedBy\" タイプ= \"asnx：値\" /> </オプション> </配列> </タイプ> <組合> <withComponents部分= \"真\"> <要素名= \"含む\" /> <= \"現在\" を使用/ withComponents> <withComponents部分= \"真\"> <要素名= \"encodedBy\" 使用= \"現在\" /> </ withComponents> </組合> </拘束> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ExceptionSpec\"> <type> <sequence> <group name=\"type\" type=\"asnx:Type\"/> <group name=\"value\" type=\"asnx:Value\"/> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"ExceptionSpec\"> <タイプ> <シーケンス> <グループ名= \"タイプ\" タイプ= \"asnx：タイプ\" /> <グループ名= \"値\" タイプ= \"asnx：値\" /> </シーケンス> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"Value\"> <type> <choice insertions=\"none\"> <attribute name=\"literalValue\" identifier=\"literalValueAtt\" type=\"asnx:UTF8String\"/> <element name=\"literalValue\" type=\"asnx:ElementFormLiteralValue\"/> <attribute name=\"value\" identifier=\"valueRef\" type=\"asnx:QName\"/> <element name=\"value\" type=\"asnx:ElementFormNotationalValue\"/> </choice> </type> </namedType>",
      "ja": "<namedType名= \"値\"> <タイプ> <選択肢挿入= \"なし\"> <属性名= \"literalValue\" 識別子= \"literalValueAtt\" タイプ= \"asnx：UTF8Stringを\" /> <要素名= \"literalValue\" タイプ=」 asnx：ElementFormLiteralValue \"/> <属性名=\" 値」識別子= \"valueRef\" タイプ= \"asnx：QNameの\" /> <要素名= \"値\" タイプ= \"asnx：ElementFormNotationalValue\" /> </選択> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ElementFormLiteralValue\" type=\"asnx:Markup\"> <annotation> If asnx:literal=\"false\" then the governing type of ElementFormLiteralValue is ElementFormNotationalValue. </annotation> </namedType>",
      "ja": "<namedType名= \"ElementFormLiteralValue\" タイプ= \"asnx：マークアップ\"> <注釈> asnx場合：リテラル= \"false\" を、その後ElementFormLiteralValueの統治タイプはElementFormNotationalValueです。 </注釈> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ElementFormNotationalValue\"> <type> <sequence insertions=\"hollow\"> <optional> <element name=\"annotation\" type=\"asnx:Annotation\"/> </optional> <group name=\"definition\"> <type> <choice insertions=\"none\"> <group name=\"reference\" type=\"asnx:Reference\"/> <element name=\"expanded\" type=\"asnx:ExpandedValue\"/> <element name=\"fromObjects\" type=\"asnx:InformationFromObjects\"/> <element name=\"openTypeValue\"> <type> <sequence> <group name=\"type\" type=\"asnx:Type\"/> <group name=\"value\" type=\"asnx:Value\"/> </sequence>",
      "ja": "<namedType名= \"ElementFormNotationalValue\"> <タイプ> <配列挿入= \"空洞\"> <オプション> <要素名= \"注釈\" タイプ= \"asnx：注釈\" /> </オプション> <グループ名= \"定義\"> <タイプ> <選択肢挿入= \"なし\"> <グループ名= \"参照\" タイプ= \"asnx：リファレンス\" /> <要素名= \"拡大\" タイプ= \"asnx：ExpandedValue\" /> <要素名= \"fromObjects\"タイプ= \"asnx：InformationFromObjects\" /> <要素名= \"openTypeValue\"> <タイプ> <シーケンス> <グループ名= \"タイプ\" タイプ= \"asnx：タイプ\" /> <グループ名= \"値\" タイプ= \"asnx ：値 \"/> </シーケンス>"
    },
    {
      "indent": 4,
      "text": " </type> </element> <group name=\"components\" type=\"asnx:ComponentValueList\"/> </choice> </type> </group> </sequence> </type> </namedType>",
      "ja": "</タイプ> </要素> <グループ名= \"コンポーネント\" タイプ= \"asnx：ComponentValueList\" /> </選択> </タイプ> </グループ> </配列> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"Reference\"> <type> <sequence> <attribute name=\"ref\" type=\"asnx:QName\"/> <optional> <attribute name=\"context\" type=\"asnx:AnyURI\"/> </optional> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"参考\"> <タイプ> <シーケンス>、<属性名= \"参照\" タイプ= \"asnx：QNameの\" /> <オプション> <属性名= \"文脈\" タイプ= \"asnx：anyURIの\" /> < /オプション> </配列> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ExpandedValue\"> <type> <sequence> <optional> <attribute name=\"name\" type=\"asnx:NCName\"/> </optional> <optional> <element name=\"module\" type=\"asnx:ReferencedModule\"/> </optional> <group name=\"value\" type=\"asnx:Value\"/> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"ExpandedValue\"> <タイプ> <シーケンス> <オプション> <属性名= \"名前\" タイプ= \"asnx：NCNameで\" /> </オプション> <オプション> <要素名= \"モジュール\" タイプ=」 asnx：ReferencedModule \"/> </オプション> <グループ名=\" 値」タイプ= \"asnx：値\" /> </配列> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ComponentValueList\"> <type> <sequenceOf minSize=\"1\"> <group name=\"component\" type=\"asnx:NamedValue\"/> </sequenceOf> </type> </namedType>",
      "ja": "<namedType名= \"ComponentValueList\"> <タイプ> <sequenceOfに、minSize = \"1\"> <グループ名= \"コンポーネント\" タイプ= \"asnx：のNamedValue\" /> </ sequenceOf> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"NamedValue\"> <type> <choice insertions=\"singular\"> <element name=\"component\" type=\"asnx:GenericNamedValue\"/> <element name=\"element\" type=\"asnx:GenericNamedValue\"/>",
      "ja": "<namedType名= \"のNamedValue\"> <タイプ> <選択挿入= \"単数\"> <要素名= \"コンポーネント\" タイプ= \"asnx：GenericNamedValue\" /> <要素名= \"要素\" タイプ= \"asnx：GenericNamedValue\" / >"
    },
    {
      "indent": 4,
      "text": " <element name=\"attribute\" type=\"asnx:GenericNamedValue\"/> <element name=\"group\" type=\"asnx:GenericNamedValue\"/> <element name=\"member\" type=\"asnx:GenericNamedValue\"/> <element name=\"item\" type=\"asnx:GenericNamedValue\"/> <element name=\"simpleContent\" type=\"asnx:GenericNamedValue\"/> </choice> </type> </namedType>",
      "ja": "<要素名= \"属性\" タイプ= \"asnx：GenericNamedValue\" /> <要素名= \"グループ\" タイプ= \"asnx：GenericNamedValue\" /> <要素名= \"メンバー\" タイプ= \"asnx：GenericNamedValue\" /> <要素名前= \"項目\" タイプ= \"asnx：GenericNamedValue\" /> <要素名= \"simpleContentを\" タイプ= \"asnx：GenericNamedValue\" /> </選択> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"GenericNamedValue\"> <type> <sequence> <attribute name=\"name\" type=\"asnx:QName\"/> <group name=\"value\" type=\"asnx:Value\"/> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"GenericNamedValue\"> <タイプ> <シーケンス>、<属性名= \"名前\" タイプ= \"asnx：QNameの\" /> <グループ名= \"値\" タイプ= \"asnx：値\" /> </シーケンス> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ValueSet\"> <type> <choice insertions=\"none\"> <attribute name=\"valueSet\" identifier=\"valueSetRef\" type=\"asnx:QName\"> <annotation> valueSet attribute is not used in this version </annotation> </attribute> <element name=\"valueSet\" type=\"asnx:ElementFormValueSet\"/> </choice> </type> </namedType>",
      "ja": "<namedType名=「値セット」> <タイプ> <選択肢挿入=「なし」> <名=「値セット」識別子=「valueSetRef」タイプは=属性「asnx：QNameは」> <注釈>値セットの属性は、このバージョンでは使用されません</注釈> </属性> <要素名= \"値セット\" タイプ= \"asnx：ElementFormValueSet\" /> </選択> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ElementFormValueSet\"> <type> <sequence insertions=\"hollow\"> <optional> <element name=\"annotation\" type=\"asnx:Annotation\"/> </optional> <group name=\"definition\"> <type> <choice insertions=\"none\"> <group name=\"elementSetSpecs\" type=\"asnx:ElementSetSpecs\"/> </choice> </type> </group> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"ElementFormValueSet\"> <タイプ> <配列挿入= \"空洞\"> <オプション> <要素名= \"注釈\" タイプ= \"asnx：注釈\" /> </オプション> <グループ名= \"定義\"> <タイプ> <選択肢挿入= \"なし\"> <グループ名= \"elementSetSpecs\" タイプ= \"asnx：ElementSetSpecs\" /> </選択> </タイプ> </グループ> </シーケンス> </タイプ> </ namedType >"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ElementSetSpecs\"> <type> <sequence insertions=\"hollow\"> <group name=\"root\" type=\"asnx:ValueElementSetSpec\"/> <optional> <element name=\"extension\"> <type> <sequence insertions=\"hollow\"> <optional> <group name=\"additions\" type=\"asnx:ValueElementSetSpec\"/> </optional> </sequence> </type> </element> </optional> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"ElementSetSpecs\"> <タイプ> <配列挿入= \"空洞\"> <グループ名= \"ルート\" タイプ= \"asnx：ValueElementSetSpec\" /> <オプション> <要素名= \"拡張子\"> <タイプ> <配列挿入= \"空洞\"> <オプション> <グループ名= \"追加\" タイプ= \"asnx：ValueElementSetSpec\" /> </オプション> </配列> </タイプ> </要素> </オプション> </シーケンス> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ValueElementSetSpec\"> <type> <constrained type=\"asnx:ElementSetSpec\"> <withComponents partial=\"true\"> <element name=\"object\" use=\"absent\"/> <element name=\"objectSet\" use=\"absent\"/> <element name=\"union\"> <withComponent> <includes type=\"asnx:ValueElementSetSpec\"/> </withComponent> </element> <element name=\"intersection\"> <withComponent> <includes type=\"asnx:ValueElementSetSpec\"/> </withComponent> </element> <element name=\"all\"> <withComponents partial=\"true\"> <group name=\"elements\"> <includes type=\"asnx:ValueElementSetSpec\"/> </group> <element name=\"except\"> <includes type=\"asnx:ValueElementSetSpec\"/> </element> </withComponents> </element> </withComponents> </constrained> </type>",
      "ja": "<namedType名= \"ValueElementSetSpec\"> <タイプ> <拘束タイプ= \"asnx：ElementSetSpec\"> <withComponents部分= \"真\"> <要素名= \"オブジェクト\" 使用= \"欠けている\" /> <要素名= \"objectSetと\" = \"欠けている\" /> <要素名= \"組合\">使用<withComponent> <含むタイプ= \"asnx：ValueElementSetSpec\" /> </ withComponent> </要素> <要素名= \"交差\"> <withComponent> <を含みますTYPE = \"asnx：ValueElementSetSpec\" /> </ withComponent> </要素> <要素名= \"全て\"> <withComponents部分= \"真\"> <グループ名= \"要素は\"> <= \"asnx：ValueElementSetSpec\" を入力含みます/> </グループ> <要素名= \"除く\"> <含むタイプ= \"asnx：ValueElementSetSpec\" /> </要素> </ withComponents> </要素> </ withComponents> </> </入力制約>"
    },
    {
      "indent": 4,
      "text": "</namedType>",
      "ja": "</ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ElementSetSpec\"> <type> <choice insertions=\"singular\"> <element name=\"literalValue\" type=\"asnx:ElementFormLiteralValue\"/> <element name=\"value\" type=\"asnx:ElementFormNotationalValue\"/> <element name=\"includes\" type=\"asnx:Type\"/> <element name=\"range\" type=\"asnx:ValueRange\"/> <element name=\"size\" type=\"asnx:Constraint\"/> <element name=\"typeConstraint\" type=\"asnx:Type\"/> <element name=\"from\" type=\"asnx:Constraint\"/> <element name=\"withComponent\" type=\"asnx:Constraint\"/> <element name=\"withComponents\" type=\"asnx:MultipleTypeConstraints\"/> <element name=\"pattern\" type=\"asnx:Value\"/> <element name=\"object\" type=\"asnx:ElementFormObject\"/> <element name=\"objectSet\" type=\"asnx:ElementFormObjectSet\"/> <element name=\"union\" type=\"asnx:ElementSetSpecList\"/> <element name=\"intersection\" type=\"asnx:ElementSetSpecList\"/> <element name=\"all\"> <type> <sequence> <optional> <group name=\"elements\" type=\"asnx:ElementSetSpec\"/> </optional> <element name=\"except\" type=\"asnx:ElementSetSpec\"/> </sequence> </type> </element> </choice> </type> </namedType>",
      "ja": "<namedType名= \"ElementSetSpec\"> <タイプ> <選択肢挿入= \"単数\"> <要素名= \"literalValue\" タイプ= \"asnx：ElementFormLiteralValue\" /> <要素名= \"値\" タイプ= \"asnx：ElementFormNotationalValue\" / > <要素名= \"含む\" タイプ= \"asnx：タイプ\" /> <要素名= \"範囲\" タイプ= \"asnx：ValueRange\" /> <要素名= \"サイズ\" タイプ= \"asnx：制約\" /> <要素名= \"typeConstraint\" タイプ= \"asnx：タイプ\" /> <要素名=タイプ= \"asnx：制約\" \"から\" /> <要素名= \"withComponent\" タイプ= \"asnx：制約\" /> <要素名= \"withComponents\" タイプ= \"asnx：MultipleTypeConstraints\" /> <要素名= \"パターン\" タイプ= \"asnx：値\" /> <要素名= \"オブジェクト\" タイプ= \"asnx：ElementFormObject\" /> <要素名=」 objectSetと」タイプ= \"asnx：ElementFormObjectSet\" /> <要素名= \"ユニオン\" タイプ= \"asnx：ElementSetSpecList\" /> <要素名= \"交差点\" タイプ= \"asnx：ElementSetSpecList\" /> <要素名= \"すべて\" > <タイプ> <シーケンス> <オプション> <グループ名= \"要素\" タイプ= \"asnx：ElementSetSpec\" /> </オプション> <要素名=タイプ \"除く\" = \"asnx：ElementSetSpec\" / > </シーケンス> </タイプ> </要素> </選択> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ElementSetSpecList\"> <type> <sequenceOf minSize=\"2\"> <group name=\"elements\" type=\"asnx:ElementSetSpec\"/> </sequenceOf> </type> </namedType>",
      "ja": "<namedType名= \"ElementSetSpecList\"> <タイプ> <sequenceOfに、minSize = \"2\"> <グループ名= \"要素\" タイプ= \"asnx：ElementSetSpec\" /> </ sequenceOf> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ValueRange\"> <type> <sequence> <optional> <group name=\"minimum\">",
      "ja": "<namedType名= \"ValueRange\"> <タイプ> <シーケンス> <オプション> <グループ名= \"最小\">"
    },
    {
      "indent": 4,
      "text": " <type> <choice insertions=\"none\"> <element name=\"minInclusive\" type=\"asnx:EndValue\"/> <element name=\"minExclusive\" type=\"asnx:EndValue\"/> </choice> </type> </group> <default> <literalValue> <minInclusive/> </literalValue> </default> </optional> <optional> <group name=\"maximum\"> <type> <choice insertions=\"none\"> <element name=\"maxInclusive\" type=\"asnx:EndValue\"/> <element name=\"maxExclusive\" type=\"asnx:EndValue\"/> </choice> </type> </group> <default> <literalValue> <maxInclusive/> </literalValue> </default> </optional> </sequence> </type> </namedType>",
      "ja": "<タイプ> <選択肢挿入= \"なし\"> <要素名= \"のminInclusive\" タイプ= \"asnx：endValueの\" /> <要素名= \"minExclusiveの\" タイプ= \"asnx：endValueの\" /> </選択> </タイプ> </グループ> <デフォルト> <literalValue> <のminInclusive /> </ literalValue> </デフォルト> </オプション> <オプション> <グループ名= \"最大\"> <タイプ> <選択肢挿入= \"なし\"> <要素名= \"maxInclusiveを\" タイプ= \"asnx：endValueの\" /> <要素名= \"maxExclusive\" タイプ= \"asnx：endValueの\" /> </選択> </タイプ> </グループ> <デフォルト> <literalValue> < maxInclusiveを/> </ literalValue> </デフォルト> </オプション> </シーケンス> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"EndValue\"> <type> <sequence insertions=\"hollow\"> <optional> <group name=\"value\" type=\"asnx:Value\"/> </optional> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"endValueの\"> <タイプ> <配列挿入= \"空洞\"> <オプション> <グループ名= \"値\" タイプ= \"asnx：値\" /> </オプション> </配列> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"MultipleTypeConstraints\"> <type> <sequence insertions=\"hollow\"> <optional> <attribute name=\"partial\" type=\"asnx:BOOLEAN\"/> <default literalValue=\"false\"/>",
      "ja": "<namedType名= \"MultipleTypeConstraints\"> <タイプ> <配列挿入は= \"中空\"> <オプション> <属性名= \"部分\" タイプ= \"asnx：BOOLEAN\" /> <デフォルトliteralValue = \"偽\" />"
    },
    {
      "indent": 4,
      "text": " </optional> <group name=\"typeConstraints\" type=\"asnx:TypeConstraints\"/> </sequence> </type> </namedType>",
      "ja": "</オプション> <グループ名= \"TypeConstraintsが\" タイプ= \"asnx：TypeConstraintsが\" /> </配列> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"TypeConstraints\"> <type> <sequenceOf minSize=\"1\"> <group name=\"namedConstraint\" type=\"asnx:NamedConstraint\"/> </sequenceOf> </type> </namedType>",
      "ja": "<namedType名= \"TypeConstraintsが\"> <タイプ> <sequenceOfに、minSize = \"1\"> <グループ名= \"namedConstraint\" タイプ= \"asnx：NamedConstraint\" /> </ sequenceOf> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"NamedConstraint\"> <type> <choice insertions=\"singular\"> <element name=\"component\" type=\"asnx:GenericNamedConstraint\"/> <element name=\"element\" type=\"asnx:GenericNamedConstraint\"/> <element name=\"attribute\" type=\"asnx:GenericNamedConstraint\"/> <element name=\"group\" type=\"asnx:GenericNamedConstraint\"/> <element name=\"member\" type=\"asnx:GenericNamedConstraint\"/> <element name=\"item\" type=\"asnx:GenericNamedConstraint\"/> <element name=\"simpleContent\" type=\"asnx:GenericNamedConstraint\"/> </choice> </type> </namedType>",
      "ja": "<namedType名= \"NamedConstraint\"> <タイプ> <選択挿入= \"単数\"> <要素名= \"コンポーネント\" タイプ= \"asnx：GenericNamedConstraint\" /> <要素名= \"要素\" タイプ= \"asnx：GenericNamedConstraint\" / > <要素名= \"属性\" タイプ= \"asnx：GenericNamedConstraint\" /> <要素名= \"グループ\" タイプ= \"asnx：GenericNamedConstraint\" /> <要素名= \"メンバー\" タイプ= \"asnx：GenericNamedConstraint\" /> <要素名= \"項目\" タイプ= \"asnx：GenericNamedConstraint\" /> <要素名= \"simpleContentを\" タイプ= \"asnx：GenericNamedConstraint\" /> </選択> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"GenericNamedConstraint\"> <type> <sequence insertions=\"hollow\"> <attribute name=\"name\" type=\"asnx:QName\"/> <optional> <attribute name=\"use\" type=\"asnx:PresenceConstraint\"/> </optional> <optional> <group name=\"constraint\" type=\"asnx:Constraint\"/> </optional> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"GenericNamedConstraint\"> <タイプ> <配列挿入= \"中空\"> <属性名= \"名前\" タイプ= \"asnx：QNameの\" /> <オプション> <名前= \"使用\" タイプ= \"asnx属性： PresenceConstraint \"/> </オプション> <オプション> <グループ名=\" 制約」タイプ= \"asnx：制約\" /> </オプション> </配列> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"PresenceConstraint\"> <type> <enumerated> <enumeration name=\"present\"/> <enumeration name=\"absent\"/>",
      "ja": "<namedType名= \"PresenceConstraint\"> <タイプ> <列挙> <列挙名= \"現在\" /> <列挙名= \"欠けています\" />"
    },
    {
      "indent": 4,
      "text": " <enumeration name=\"optional\"/> </enumerated> </type> </namedType>",
      "ja": "<列挙名= \"オプション\" /> </列挙> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ObjectClass\"> <type> <choice insertions=\"singular\"> <attribute name=\"class\" identifier=\"classRef\" type=\"asnx:QName\"/> <element name=\"class\" type=\"asnx:ElementFormObjectClass\"/> </choice> </type> </namedType>",
      "ja": "<namedType名= \"ObjectClassの\"> <タイプ> <選択肢挿入= \"単数\"> <属性名= \"クラス\" 識別子= \"classRef\" タイプ= \"asnx：QNameの\" /> <要素名= \"クラス\" タイプ=」 asnx：ElementFormObjectClass \"/> </選択> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"DefinedObjectClass\"> <type> <constrained type=\"asnx:ObjectClass\"> <withComponents partial=\"true\"> <element name=\"class\"> <withComponents partial=\"true\"> <group name=\"definition\"> <withComponents partial=\"true\"> <group name=\"objectClassDefn\" use=\"absent\"/> </withComponents> </group> </withComponents> </element> </withComponents> </constrained> </type> </namedType>",
      "ja": "<namedType名= \"DefinedObjectClass\"> <タイプ> <拘束タイプ= \"asnx：たObjectClass\"> <withComponents部分= \"真\"> <要素名= \"クラス\"> <withComponents部分= \"真\"> <グループ名=」定義 \"> <withComponents部分=\" 真 \"> <グループ名=\" objectClassDefn」使用= \"欠けている\" /> </ withComponents> </グループ> </ withComponents> </要素> </ withComponents> </拘束> < /タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ElementFormObjectClass\"> <type> <sequence insertions=\"hollow\"> <optional> <element name=\"annotation\" type=\"asnx:Annotation\"/> </optional> <group name=\"definition\"> <type> <choice insertions=\"none\"> <group name=\"reference\" type=\"asnx:Reference\"/> <element name=\"expanded\" type=\"asnx:ExpandedObjectClass\"/> <group name=\"objectClassDefn\" type=\"asnx:ObjectClassDefn\"/> </choice> </type> </group> </sequence>",
      "ja": "<namedType名= \"ElementFormObjectClass\"> <タイプ> <配列挿入= \"空洞\"> <オプション> <要素名= \"注釈\" タイプ= \"asnx：注釈\" /> </オプション> <グループ名= \"定義\"> <タイプ> <選択肢挿入= \"なし\"> <グループ名= \"参照\" タイプ= \"asnx：リファレンス\" /> <要素名= \"拡大\" タイプ= \"asnx：ExpandedObjectClass\" /> <グループ名= \"objectClassDefn\"タイプは、= \"asnx：ObjectClassDefn\" /> </選択> </タイプ> </グループ> </シーケンス>"
    },
    {
      "indent": 4,
      "text": " </type> </namedType>",
      "ja": "</タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ExpandedObjectClass\"> <type> <sequence> <optional> <attribute name=\"name\" type=\"asnx:NCName\"/> </optional> <optional> <element name=\"module\" type=\"asnx:ReferencedModule\"/> </optional> <group name=\"objectClass\" type=\"asnx:ObjectClass\"/> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"ExpandedObjectClass\"> <タイプ> <シーケンス> <オプション> <属性名= \"名前\" タイプ= \"asnx：NCNameで\" /> </オプション> <オプション> <要素名= \"モジュール\" タイプ=」 asnx：ReferencedModule \"/> </オプション> <グループ名=\" オブジェクトクラス」タイプ= \"asnx：ObjectClassの\" /> </配列> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ObjectClassDefn\"> <type> <sequenceOf minSize=\"1\"> <group name=\"fieldSpec\" type=\"asnx:FieldSpec\"/> </sequenceOf> </type> </namedType>",
      "ja": "<namedType名= \"ObjectClassDefn\"> <タイプ> <sequenceOfに、minSize = \"1\"> <グループ名= \"fieldSpec\" タイプ= \"asnx：FieldSpec\" /> </ sequenceOf> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"FieldSpec\"> <type> <choice insertions=\"singular\"> <element name=\"typeField\" type=\"asnx:TypeField\"/> <element name=\"valueField\" type=\"asnx:ValueField\"/> <element name=\"valueSetField\" type=\"asnx:ValueSetField\"/> <element name=\"objectField\" type=\"asnx:ObjectField\"/> <element name=\"objectSetField\" type=\"asnx:ObjectSetField\"/> <element name=\"optional\" type=\"asnx:OptionalField\"/> </choice> </type> </namedType>",
      "ja": "<namedType名= \"FieldSpec\"> <タイプ> <選択肢挿入= \"単数\"> <要素名= \"typeField\" タイプ= \"asnx：TypeField\" /> <要素名= \"valueField\" タイプ= \"asnx：ValueField\" / > <要素名= \"valueSetField\" タイプ= \"asnx：ValueSetField\" /> <要素名= \"objectField\" タイプ= \"asnx：ObjectField\" /> <要素名= \"objectSetField\" タイプ= \"asnx：ObjectSetField\" /> <要素名= \"オプション\" タイプ= \"asnx：OptionalField\" /> </選択> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"OptionalField\"> <type> <constrained> <type> <sequence> <group name=\"field\"> <type> <choice insertions=\"singular\"> <element name=\"typeField\" type=\"asnx:TypeField\"/> <element name=\"valueField\" type=\"asnx:ValueField\"/>",
      "ja": "<namedType名= \"OptionalField\"> <タイプ> <制約> <タイプ> <シーケンス>、<グループ名= \"フィールド\"> <タイプ> <選択肢挿入= \"単数\"> <要素名= \"typeField\" タイプ= \"asnx ：TypeField \"/> <要素名=\" valueField」タイプ= \"asnx：valueField\" />"
    },
    {
      "indent": 7,
      "text": " <element name=\"valueSetField\" type=\"asnx:ValueSetField\"/> <element name=\"objectField\" type=\"asnx:ObjectField\"/> <element name=\"objectSetField\" type=\"asnx:ObjectSetField\"/> </choice> </type> </group> <optional> <element name=\"default\" type=\"asnx:Setting\"/> </optional> </sequence> </type> <union> <withComponents partial=\"true\"> <group name=\"field\"> <withComponents> <element name=\"typeField\" use=\"present\"/> </withComponents> </group> <element name=\"default\"> <withComponents partial=\"true\"> <group name=\"value\" use=\"absent\"/> <group name=\"valueSet\" use=\"absent\"/> <group name=\"object\" use=\"absent\"/> <group name=\"objectSet\" use=\"absent\"/> </withComponents> </element> </withComponents> <withComponents partial=\"true\"> <group name=\"field\"> <withComponents> <element name=\"valueField\" use=\"present\"/> </withComponents> </group> <element name=\"default\"> <withComponents partial=\"true\"> <group name=\"type\" use=\"absent\"/> <group name=\"valueSet\" use=\"absent\"/> <group name=\"object\" use=\"absent\"/> <group name=\"objectSet\" use=\"absent\"/> </withComponents> </element> </withComponents> <withComponents partial=\"true\"> <group name=\"field\"> <withComponents> <element name=\"valueSetField\" use=\"present\"/> </withComponents> </group>",
      "ja": "<要素名= \"valueSetField\" タイプ= \"asnx：ValueSetField\" /> <要素名= \"objectField\" タイプ= \"asnx：ObjectField\" /> <要素名= \"objectSetField\" タイプ= \"asnx：ObjectSetField\" /> </選択肢> </タイプ> </グループ> <オプション> <要素名= \"デフォルト\" タイプ= \"asnx：設定\" /> </オプション> </シーケンス> </入力> <組合> <= \"真部分withComponents \" \"> <グループ名=\" フィールド \"> <withComponents> <要素名=\" typeField」使用= \"現在\"/> </ withComponents> </グループ> <要素名= \"デフォルト\"> <withComponents部分=\" 真> <グループ名= \"値\" 使用= \"欠けている\" /> <グループ名= \"値セット\" 使用= \"欠けている\" /> <グループ名= \"オブジェクト\" 使用= \"欠けている\" /> <グループ名= \"objectSetと\"使用= \"欠けている\" /> </ withComponents> </要素> </ withComponents> <withComponents部分= \"真\"> <グループ名= \"フィールド\"> <withComponents> <要素名= \"valueField\" 使用= \"現在\" /> </ withComponents> </グループ> <要素名= \"デフォルト\"> <withComponents部分= \"真\"> <グループ名= \"タイプ\" 使用= \"欠けている\" /> <グループ名= \"値セット\" 使用=」存在しない \"/> <グループ名=\" オブジェクト」使用= \"欠けている\" /> <グループN AME = \"objectSetと\" 使用= \"欠けている\" /> </ withComponents> </要素> </ withComponents> <withComponents部分= \"真\"> <グループ名= \"フィールド\"> <withComponents> <要素名= \"valueSetField\"使用= \"現在\" /> </ withComponents> </グループ>"
    },
    {
      "indent": 4,
      "text": " <element name=\"default\"> <withComponents partial=\"true\"> <group name=\"type\" use=\"absent\"/> <group name=\"value\" use=\"absent\"/> <group name=\"object\" use=\"absent\"/> <group name=\"objectSet\" use=\"absent\"/> </withComponents> </element> </withComponents> <withComponents partial=\"true\"> <group name=\"field\"> <withComponents> <element name=\"objectField\" use=\"present\"/> </withComponents> </group> <element name=\"default\"> <withComponents partial=\"true\"> <group name=\"type\" use=\"absent\"/> <group name=\"value\" use=\"absent\"/> <group name=\"valueSet\" use=\"absent\"/> <group name=\"objectSet\" use=\"absent\"/> </withComponents> </element> </withComponents> <withComponents partial=\"true\"> <group name=\"field\"> <withComponents> <element name=\"objectSetField\" use=\"present\"/> </withComponents> </group> <element name=\"default\"> <withComponents partial=\"true\"> <group name=\"type\" use=\"absent\"/> <group name=\"value\" use=\"absent\"/> <group name=\"valueSet\" use=\"absent\"/> <group name=\"object\" use=\"absent\"/> </withComponents> </element> </withComponents> </union> </constrained> </type> </namedType>",
      "ja": "<要素名= \"デフォルト\"> <withComponents部分= \"真\"> <グループ名= \"タイプ\" 使用= \"欠けている\" /> <グループ名= \"値\" 使用= \"欠けている\" /> <グループ名= \"オブジェクト\"使用=\" 欠けている \"/> <グループ名=\" objectSetと」使用= \"欠けている\" /> </ withComponents> </要素> </ withComponents> <withComponents部分= \"真\"> <グループ名= \"フィールド\"> <withComponents> <要素名= \"objectField\" 使用= \"現在\" /> </ withComponents> </グループ> <要素名= \"デフォルト\"> <withComponents部分= \"真\"> <グループ名= \"タイプ\" 使用= \"不在\" /> <グループ名= \"値\" 使用= \"欠けている\" /> <グループ名= \"値セット\" 使用= \"欠けている\" /> <グループ名= \"objectSetと\" 使用= \"欠けている\" /> </ withComponents > </要素> </ withComponents> <withComponents部分= \"真\"> <グループ名= \"フィールド\"> <withComponents> <要素名= \"objectSetField\" 使用= \"現在\" /> </ withComponents> </グループ> <要素名= \"デフォルト\"> <withComponents部分= \"真\"> <グループ名= \"タイプ\" 使用= \"欠けている\" /> <グループ名= \"値\" 使用= \"欠けている\" /> <グループ名= \"値セット\"使用=\" 欠けている \"/> <グループ名=\" オブジェクト」使用= \"欠けている\" /> </ withComponents> </要素> </ withComponents> </組合> </拘束> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"TypeField\"> <type> <sequence> <optional>",
      "ja": "<namedType名= \"TypeField\"> <タイプ> <シーケンス> <オプション>"
    },
    {
      "indent": 4,
      "text": " <element name=\"annotation\" type=\"asnx:Annotation\"/> </optional> <attribute name=\"name\" type=\"asnx:TypeFieldReference\"/> </sequence> </type> </namedType>",
      "ja": "<要素名= \"注釈\" タイプ= \"asnx：注釈\" /> </オプション> <属性名= \"名前\" タイプ= \"asnx：TypeFieldReference\" /> </シーケンス> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"TypeFieldReference\" type=\"asnx:TypeReference\"/>",
      "ja": "<名前付きタイプ名=「タイプフィールドリファレンス」タイプ=「asnx：タイプ・リファレンス」/>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ValueField\"> <type> <constrained> <type> <sequence> <optional> <element name=\"annotation\" type=\"asnx:Annotation\"/> </optional> <attribute name=\"name\" type=\"asnx:ValueFieldReference\"/> <optional> <attribute name=\"unique\" type=\"asnx:BOOLEAN\"/> </optional> <group name=\"governor\"> <type> <choice insertions=\"singular\"> <group name=\"type\" type=\"asnx:Type\"/> <element name=\"typeFromField\" type=\"asnx:FieldName\"/> </choice> </type> </group> </sequence> </type> <union> <withComponents partial=\"true\"> <attribute name=\"unique\" use=\"absent\"/> </withComponents> <withComponents partial=\"true\"> <group name=\"governor\"> <withComponents partial=\"true\"> <element name=\"typeFromField\" use=\"absent\"/> </withComponents> </group> </withComponents> </union> </constrained> </type> </namedType>",
      "ja": "<namedType名= \"ValueField\"> <タイプ> <拘束> <タイプ> <シーケンス> <オプション> <要素名= \"注釈\" タイプ= \"asnx：注釈\" /> </オプション> <名前= \"名前\" 属性TYPE = \"asnx：ValueFieldReference\" /> <オプション> <名前= \"ユニーク\" タイプ=属性 \"asnx：BOOLEANを\" /> </オプション> <グループ名= \"知事\"> <タイプ> <選択肢挿入= \"特異\" > <グループ名= \"タイプ\" タイプ= \"asnx：タイプ\" /> <要素名= \"typeFromField\" タイプ= \"asnx：フィールド名\" /> </選択> </タイプ> </グループ> </シーケンス> < /タイプ> <組合> <withComponents部分= \"真の\"> <属性名= \"ユニーク\" 使用= \"不在\" /> </ withComponents> <withComponents部分= \"真\"> <グループ名= \"知事\"> <withComponents部分= \"真\"> <要素名= \"typeFromField\" 使用= \"欠けている\" /> </ withComponents> </グループ> </ withComponents> </組合> </拘束> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ValueFieldReference\" type=\"asnx:ValueReference\"/>",
      "ja": "<namedType名= \"ValueFieldReference\" タイプ= \"asnx：ValueReference\" />"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ValueSetField\"> <type> <sequence> <optional> <element name=\"annotation\" type=\"asnx:Annotation\"/> </optional> <attribute name=\"name\" type=\"asnx:ValueSetFieldReference\"/> <group name=\"governor\"> <type> <choice insertions=\"singular\"> <group name=\"type\" type=\"asnx:Type\"/> <element name=\"typeFromField\" type=\"asnx:FieldName\"/> </choice> </type> </group> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"ValueSetField\"> <タイプ> <シーケンス> <オプション> <要素名= \"注釈\" タイプ= \"asnx：注釈\" /> </オプション> <属性名= \"名前\" タイプ= \"asnx：ValueSetFieldReference \"/> <グループ名=\" 知事 \"> <タイプ> <選択肢挿入=\" 単数 \"> <グループ名=\" タイプ \"タイプ= \"asnx：タイプ\"/> <要素名= \"typeFromField\" タイプ=\" asnx：フィールド名 \"/> </選択> </タイプ> </グループ> </シーケンス> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ValueSetFieldReference\" type=\"asnx:TypeReference\"/>",
      "ja": "<namedType名= \"ValueSetFieldReference\" タイプ= \"asnx：TypeReference\" />"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ObjectField\"> <type> <sequence> <optional> <element name=\"annotation\" type=\"asnx:Annotation\"/> </optional> <attribute name=\"name\" type=\"asnx:ObjectFieldReference\"/> <group name=\"objectClass\" type=\"asnx:DefinedObjectClass\"/> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"ObjectField\"> <タイプ> <シーケンス> <オプション> <要素名= \"注釈\" タイプ= \"asnx：注釈\" /> </オプション> <属性名= \"名前\" タイプ= \"asnx：ObjectFieldReference \"/> <グループ名=\" オブジェクトクラス」タイプ= \"asnx：DefinedObjectClass\" /> </シーケンス> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ObjectFieldReference\" type=\"asnx:ObjectReference\"/>",
      "ja": "<namedType名= \"ObjectFieldReference\" タイプ= \"asnx：ObjectReferenceの\" />"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ObjectSetField\"> <type> <sequence> <optional> <element name=\"annotation\" type=\"asnx:Annotation\"/> </optional> <attribute name=\"name\" type=\"asnx:ObjectSetFieldReference\"/> <group name=\"objectClass\" type=\"asnx:DefinedObjectClass\"/> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"ObjectSetField\"> <タイプ> <シーケンス> <オプション> <要素名= \"注釈\" タイプ= \"asnx：注釈\" /> </オプション> <属性名= \"名前\" タイプ= \"asnx：ObjectSetFieldReference \"/> <グループ名=\" オブジェクトクラス」タイプ= \"asnx：DefinedObjectClass\" /> </シーケンス> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ObjectSetFieldReference\"",
      "ja": "<namedType名= \"ObjectSetFieldReference\""
    },
    {
      "indent": 15,
      "text": "type=\"asnx:ObjectSetReference\"/>",
      "ja": "タイプ= \"asnx：ObjectSetReference\" />"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"Object\"> <type> <choice insertions=\"none\"> <attribute name=\"object\" identifier=\"objectRef\" type=\"asnx:QName\"/> <element name=\"object\" type=\"asnx:ElementFormObject\"/> </choice> </type> </namedType>",
      "ja": "<namedType名= \"オブジェクト\"> <タイプ> <選択肢挿入= \"なし\"> <属性名= \"オブジェクト\" 識別子= \"objectrefに\" タイプ= \"asnx：QNameの\" /> <要素名= \"オブジェクト\" タイプ=」 asnx：ElementFormObject \"/> </選択> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ElementFormObject\"> <type> <sequence insertions=\"hollow\"> <optional> <element name=\"annotation\" type=\"asnx:Annotation\"/> </optional> <group name=\"definition\"> <type> <choice insertions=\"singular\"> <group name=\"reference\" type=\"asnx:Reference\"/> <element name=\"expanded\" type=\"asnx:ExpandedObject\"/> <element name=\"fromObjects\" type=\"asnx:InformationFromObjects\"/> <group name=\"fields\" type=\"asnx:ObjectDefn\"/> </choice> </type> </group> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"ElementFormObject\"> <タイプ> <配列挿入= \"空洞\"> <オプション> <要素名= \"注釈\" タイプ= \"asnx：注釈\" /> </オプション> <グループ名= \"定義\"> <タイプ> <選択肢挿入= \"単数\"> <グループ名= \"参照\" タイプ= \"asnx：リファレンス\" /> <要素名= \"拡大\" タイプ= \"asnx：ExpandedObject\" /> <要素名= \"fromObjects\"タイプ= \"asnx：InformationFromObjects\" /> <グループ名= \"フィールド\" タイプ= \"asnx：ObjectDefn\" /> </選択> </タイプ> </グループ> </シーケンス> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ExpandedObject\"> <type> <sequence> <optional> <attribute name=\"name\" type=\"asnx:NCName\"/> </optional> <optional> <element name=\"module\" type=\"asnx:ReferencedModule\"/> </optional> <group name=\"object\" type=\"asnx:Object\"/> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"ExpandedObject\"> <タイプ> <シーケンス> <オプション> <属性名= \"名前\" タイプ= \"asnx：NCNameで\" /> </オプション> <オプション> <要素名= \"モジュール\" タイプ=」 asnx：ReferencedModule \"/> </オプション> <グループ名=\" オブジェクト」タイプ= \"asnx：オブジェクト\" /> </配列> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ObjectDefn\">",
      "ja": "<namedType名= \"ObjectDefn\">"
    },
    {
      "indent": 4,
      "text": " <type> <sequenceOf> <element name=\"field\" type=\"asnx:FieldSetting\"/> </sequenceOf> </type> </namedType>",
      "ja": "<タイプ> <sequenceOf> <要素名= \"フィールド\" タイプ= \"asnx：FieldSetting\" /> </ sequenceOf> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"FieldSetting\"> <type> <sequence insertions=\"hollow\"> <attribute name=\"name\" type=\"asnx:NCName\"/> <group name=\"setting\" type=\"asnx:Setting\"/> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"FieldSetting\"> <タイプ> <配列挿入= \"中空\"> <属性名= \"名前\" タイプ= \"asnx：NCNameで\" /> <グループ名= \"設定\" タイプ= \"asnx：設定\" / > </シーケンス> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"Setting\"> <type> <choice> <group name=\"type\" type=\"asnx:Type\"/> <group name=\"value\" type=\"asnx:Value\"/> <group name=\"valueSet\" type=\"asnx:ValueSet\"/> <group name=\"object\" type=\"asnx:Object\"/> <group name=\"objectSet\" type=\"asnx:ObjectSet\"/> </choice> </type> </namedType>",
      "ja": "<namedType名= \"設定\"> <タイプ> <選択肢> <グループ名= \"タイプ\" タイプ= \"asnx：タイプ\" /> <グループ名= \"値\" タイプ= \"asnx：値\" /> <グループ名= \"値セット\" タイプ= \"asnx：VALUESET\" /> <グループ名= \"オブジェクト\" タイプ= \"asnx：オブジェクト\" /> <グループ名= \"objectSetと\" タイプ= \"asnx：objectSetと\" /> </選択> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ObjectSet\"> <type> <choice insertions=\"none\"> <attribute name=\"objectSet\" identifier=\"objectSetRef\" type=\"asnx:QName\"/> <element name=\"objectSet\" type=\"asnx:ElementFormObjectSet\"/> </choice> </type> </namedType>",
      "ja": "<namedType名= \"objectSetと\"> <タイプ> <選択肢挿入= \"なし\"> <属性名= \"objectSetと\" 識別子= \"objectSetRef\" タイプ= \"asnx：QNameの\" /> <要素名= \"objectSetと\" タイプ=」 asnx：ElementFormObjectSet \"/> </選択> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ElementFormObjectSet\"> <type> <sequence insertions=\"hollow\"> <optional> <element name=\"annotation\" type=\"asnx:Annotation\"/> </optional> <group name=\"definition\"> <type> <choice insertions=\"none\"> <group name=\"reference\" type=\"asnx:Reference\"/>",
      "ja": "<namedType名= \"ElementFormObjectSet\"> <タイプ> <配列挿入= \"空洞\"> <オプション> <要素名= \"注釈\" タイプ= \"asnx：注釈\" /> </オプション> <グループ名= \"定義\"> <タイプ> <選択肢挿入= \"なし\"> <グループ名= \"参照\" タイプ= \"asnx：リファレンス\" />"
    },
    {
      "indent": 4,
      "text": " <element name=\"expanded\" type=\"asnx:ExpandedObjectSet\"/> <group name=\"objectSetSpec\" type=\"asnx:ObjectSetSpec\"/> <element name=\"fromObjects\" type=\"asnx:InformationFromObjects\"/> </choice> </type> </group> </sequence> </type> </namedType>",
      "ja": "<要素名= \"拡張\" タイプ= \"asnx：ExpandedObjectSet\" /> <グループ名= \"objectSetSpec\" タイプ= \"asnx：ObjectSetSpec\" /> <要素名= \"fromObjects\" タイプ= \"asnx：InformationFromObjects\" /> </選択肢> </タイプ> </グループ> </シーケンス> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ExpandedObjectSet\"> <type> <sequence> <optional> <attribute name=\"name\" type=\"asnx:NCName\"/> </optional> <optional> <element name=\"module\" type=\"asnx:ReferencedModule\"/> </optional> <group name=\"objectSet\" type=\"asnx:ObjectSet\"/> </sequence> </type> </namedType>",
      "ja": "<namedType名= \"ExpandedObjectSet\"> <タイプ> <シーケンス> <オプション> <属性名= \"名前\" タイプ= \"asnx：NCNameで\" /> </オプション> <オプション> <要素名= \"モジュール\" タイプ=」 asnx：ReferencedModule \"/> </オプション> <グループ名=\" objectSetと」タイプ= \"asnx：objectSetと\" /> </配列> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ObjectSetSpec\"> <type> <constrained> <type> <sequence insertions=\"hollow\"> <optional> <group name=\"root\" type=\"asnx:ObjectElementSetSpec\"/> </optional> <optional> <element name=\"extension\"> <type> <sequence insertions=\"hollow\"> <optional> <group name=\"additions\" type=\"asnx:ObjectElementSetSpec\"/> </optional> </sequence> </type> </element> </optional> </sequence> </type> <union> <withComponents partial=\"true\">",
      "ja": "<namedType名= \"ObjectSetSpec\"> <タイプ> <拘束> <タイプ> <配列挿入= \"空洞\"> <オプション> <グループ名= \"ルート\" タイプ= \"asnx：ObjectElementSetSpec\" /> </オプション> <オプション> <要素名= \"拡張子\"> <タイプ> <配列挿入= \"空洞\"> <オプション> <グループ名= \"追加\" タイプ= \"asnx：ObjectElementSetSpec\" /> </オプション> </配列> </タイプ> </要素> </オプション> </シーケンス> </入力> <組合> <withComponents部分= \"真\">"
    },
    {
      "indent": 4,
      "text": " <group name=\"root\" use=\"present\"/> </withComponents> <withComponents partial=\"true\"> <element name=\"extension\" use=\"present\"/> </withComponents> </union> </constrained> </type> </namedType>",
      "ja": "<グループ名= \"ルート\" 使用= \"現在\" /> </ withComponents> <withComponents部分= \"真\"> <要素名= \"拡張子\" 使用= \"現在\" /> </ withComponents> </組合> </制約> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ObjectElementSetSpec\"> <type> <constrained type=\"asnx:ElementSetSpec\"> <withComponents partial=\"true\"> <element name=\"literalValue\" use=\"absent\"/> <element name=\"value\" use=\"absent\"/> <element name=\"includes\" use=\"absent\"/> <element name=\"range\" use=\"absent\"/> <element name=\"size\" use=\"absent\"/> <element name=\"typeConstraint\" use=\"absent\"/> <element name=\"from\" use=\"absent\"/> <element name=\"withComponent\" use=\"absent\"/> <element name=\"withComponents\" use=\"absent\"/> <element name=\"pattern\" use=\"absent\"/> <element name=\"union\"> <withComponent> <includes type=\"asnx:ObjectElementSetSpec\"/> </withComponent> </element> <element name=\"intersection\"> <withComponent> <includes type=\"asnx:ObjectElementSetSpec\"/> </withComponent> </element> <element name=\"all\"> <withComponents partial=\"true\"> <group name=\"elements\"> <includes type=\"asnx:ObjectElementSetSpec\"/> </group> <element name=\"except\"> <includes type=\"asnx:ObjectElementSetSpec\"/> </element> </withComponents> </element> </withComponents> </constrained> </type> </namedType>",
      "ja": "<namedType名= \"ObjectElementSetSpec\"> <タイプ> <拘束タイプ= \"asnx：ElementSetSpec\"> <withComponents部分= \"真\"> <要素名= \"literalValue\" 使用= \"欠けている\" /> <要素名= \"値\" = \"含む\" = \"欠けている\" /> <要素名を使用= \"欠けている\" /> <要素名= \"範囲\" 使用= \"欠けている\" /> <要素名= \"サイズ\" 使用/> <= \"不在\" を使用要素名= \"typeConstraint\" 使用= \"欠けている\" /> <要素名= \"から\" 使用= \"欠けている\" /> <要素名= \"withComponent\" 使用= \"欠けている\" /> <要素名= \"withComponents\" 使用= \"不在\" /> <要素名= \"パターン\" 使用= \"欠けている\" /> <要素名= \"組合\"> <withComponent> <含むタイプ= \"asnx：ObjectElementSetSpec\" /> </ withComponent> </要素> <要素名= \"交差\"> <withComponent> <含むタイプ= \"asnx：ObjectElementSetSpec\" /> </ withComponent> </要素> <要素名= \"全て\"> <withComponents部分= \"真\"> <グループ名=」要素は \">の<type含ま=\" asnx：ObjectElementSetSpec \"/> </グループ> <要素名=\" 以外asnx \"> <含むTYPE =\"：ObjectElementSetSpec \"/> </要素> </ withComponents> </ element>を< / W ithComponents> </制約> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"EncodingControlSections\"> <type> <sequenceOf minSize=\"1\"> <group name=\"section\" type=\"asnx:EncodingControlSection\"/> </sequenceOf> </type> </namedType>",
      "ja": "<namedType名= \"EncodingControlSections\"> <タイプ> <sequenceOfに、minSize = \"1\"> <グループ名= \"セクション\" タイプ= \"asnx：EncodingControlSection\" /> </ sequenceOf> </タイプ> </ namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"EncodingControlSection\"> <type> <choice insertions=\"singular\"> <element name=\"GSER\" identifier=\"gser\" type=\"asnx:GSER-EncodingInstructionAssignmentList\"/> <element name=\"XER\" identifier=\"xer\" type=\"asnx:XER-EncodingInstructionAssignmentList\"/> <!-- plus encoding control sections for other encoding rules in the future --> </choice> </type> </namedType>",
      "ja": "<namedType名= \"EncodingControlSection\"> <タイプ> <選択肢挿入= \"単数\"> <要素名= \"GSER\" 識別子= \"GSER\" タイプ= \"asnx：GSER-EncodingInstructionAssignmentList\" /> <要素名= \"XER\" 識別子= \"XER\" タイプ= \"asnx：XER-EncodingInstructionAssignmentList\" /> < - プラス将来的には他の符号化規則のための制御部をコードする - > </選択> </タイプ> </ namedType>！"
    },
    {
      "indent": 4,
      "text": "<element name=\"module\" type=\"asnx:ModuleDefinition\"/>",
      "ja": "<要素名= \"モジュール\" タイプ= \"asnx：ModuleDefinitionは\" />"
    },
    {
      "indent": 4,
      "text": "<attribute name=\"literal\" type=\"asnx:BOOLEAN\"/>",
      "ja": "<属性名= \"リテラル\" タイプ= \"asnx：BOOLEAN\" />"
    },
    {
      "indent": 3,
      "text": "</asnx:module>",
      "ja": "</ asnx：モジュール>"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Dr. Steven Legg eB2Bcom Suite 3, Woodhouse Corporate Centre 935 Station Street Box Hill North, Victoria 3129 AUSTRALIA",
      "ja": "スティーブンレッグeB2Bcomスイート3、ウッドハウスコーポレートセンター935駅ストリートボックスヒルノース、ビクトリア3129オーストラリア"
    },
    {
      "indent": 3,
      "text": "Phone: +61 3 9896 7830 Fax: +61 3 9896 7801 EMail: steven.legg@eb2bcom.com",
      "ja": "電話：+61 3 9896 7830ファックス：+61 3 9896 7801 Eメール：steven.legg@eb2bcom.com"
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The IETF Trust (2007).",
      "ja": "著作権（C）IETFトラスト（2007）。"
    },
    {
      "indent": 3,
      "text": "This document is subject to the rights, licenses and restrictions contained in BCP 78, and except as set forth therein, the authors retain all their rights.",
      "ja": "この文書では、BCP 78に含まれる権利と許可と制限の適用を受けており、その中の記載を除いて、作者は彼らのすべての権利を保有します。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein are provided on an \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書とここに含まれている情報は、基礎とCONTRIBUTOR「そのまま」、ORGANIZATION HE / SHEが表すまたはインターネットSOCIETY、（もしあれば）を後援し、IETF TRUST ANDインターネットエンジニアリングタスクフォース放棄ALLに設けられています。保証は、明示または黙示、この情報の利用および特定目的に対する権利または商品性または適合性の黙示の保証を侵害しない任意の保証がこれらに限定されません。"
    },
    {
      "indent": 0,
      "text": "Intellectual Property",
      "ja": "知的財産"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any Intellectual Property Rights or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; nor does it represent that it has made any independent effort to identify any such rights. Information on the procedures with respect to rights in RFC documents can be found in BCP 78 and BCP 79.",
      "ja": "IETFは、本書またはそのような権限下で、ライセンスがたりないかもしれない程度に記載された技術の実装や使用に関係すると主張される可能性があります任意の知的財産権やその他の権利の有効性または範囲に関していかなる位置を取りません利用可能です。またそれは、それがどのような権利を確認する独自の取り組みを行ったことを示すものでもありません。 RFC文書の権利に関する手続きの情報は、BCP 78およびBCP 79に記載されています。"
    },
    {
      "indent": 3,
      "text": "Copies of IPR disclosures made to the IETF Secretariat and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the IETF on-line IPR repository at http://www.ietf.org/ipr.",
      "ja": "IPRの開示のコピーが利用できるようにIETF事務局とライセンスの保証に行われた、または本仕様の実装者または利用者がそのような所有権の使用のための一般的なライセンスまたは許可を取得するために作られた試みの結果を得ることができますhttp://www.ietf.org/iprのIETFのオンラインIPRリポジトリから。"
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights that may cover technology that may be required to implement this standard. Please address the information to the IETF at ietf-ipr@ietf.org.",
      "ja": "IETFは、その注意にこの標準を実装するために必要とされる技術をカバーすることができる任意の著作権、特許または特許出願、またはその他の所有権を持ってすべての利害関係者を招待します。 ietf-ipr@ietf.orgのIETFに情報を記述してください。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "ja": "RFC Editor機能のための基金は現在、インターネット協会によって提供されます。"
    }
  ]
}