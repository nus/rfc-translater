{
  "title": {
    "text": "RFC 4962 - Guidance for Authentication, Authorization, and Accounting (AAA) Key Management",
    "ja": "RFC 4962 - 認証、認可、アカウンティング（AAA）キー管理のためのガイダンス"
  },
  "number": 4962,
  "created_at": "2019-10-29 15:36:32.686871+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                         R. Housley\nRequest for Comments: 4962                                Vigil Security\nBCP: 132                                                        B. Aboba\nCategory: Best Current Practice                                Microsoft\n                                                               July 2007",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Guidance for Authentication, Authorization, and Accounting (AAA) Key Management",
      "ja": "認証、認可、アカウンティング（AAA）キー管理のためのガイダンス"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements. Distribution of this memo is unlimited.",
      "ja": "このドキュメントはインターネットコミュニティのためのインターネットBest Current Practicesを指定し、改善のための議論と提案を要求します。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The IETF Trust (2007).",
      "ja": "著作権（C）IETFトラスト（2007）。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document provides guidance to designers of Authentication, Authorization, and Accounting (AAA) key management protocols. The guidance is also useful to designers of systems and solutions that include AAA key management protocols. Given the complexity and difficulty in designing secure, long-lasting key management algorithms and protocols by experts in the field, it is almost certainly inappropriate for IETF working groups without deep expertise in the area to be designing their own key management algorithms and protocols based on Authentication, Authorization, and Accounting (AAA) protocols. The guidelines in this document apply to documents requesting publication as IETF RFCs. Further, these guidelines will be useful to other standards development organizations (SDOs) that specify AAA key management.",
      "ja": "この文書では、認証、認可、アカウンティング（AAA）の鍵管理プロトコルの設計者に指針を提供します。ガイダンスはまた、AAA鍵管理プロトコルを含むシステムやソリューションの設計者にとって有用です。分野の専門家による安全な、長期的な鍵管理アルゴリズムとプロトコルを設計する上での複雑さと難しさを考えると、それは上の基づいた独自の鍵管理アルゴリズムとプロトコルを設計すべき領域における深い専門知識なしに、ほぼ確実にIETFワーキンググループには不適切です認証、許可、アカウンティング（AAA）プロトコル。この文書のガイドラインはIETF RFCとして公表を要求する文書に適用されます。さらに、これらのガイドラインは、他の標準開発機関（SDOの）そのAAAを指定する鍵管理に有用であろう。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................2\n   1.1. Requirements Specification .................................3\n   1.2. Mandatory to Implement .....................................3\n   1.3. Terminology ................................................3\n2. AAA Environment Concerns ........................................5\n3. AAA Key Management Requirements .................................7\n4. AAA Key Management Recommendations .............................13\n5. Security Considerations ........................................14\n6. Normative References ...........................................15\n7. Informative References .........................................15\nAppendix: AAA Key Management History ..............................20\nAcknowledgments ...................................................22",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "This document provides architectural guidance to designers of AAA key management protocols. The guidance is also useful to designers of systems and solutions that include AAA key management protocols.",
      "ja": "この文書では、AAAの鍵管理プロトコルの設計者にアーキテクチャガイダンスを提供します。ガイダンスはまた、AAA鍵管理プロトコルを含むシステムやソリューションの設計者にとって有用です。"
    },
    {
      "indent": 3,
      "text": "AAA key management often includes a collection of protocols, one of which is the AAA protocol. Other protocols are used in conjunction with the AAA protocol to provide an overall solution. These other protocols often provide authentication and security association establishment.",
      "ja": "AAA鍵の管理は、多くの場合、AAAプロトコルそのうちの1つは、プロトコルの集合を含んでいます。他のプロトコルは、全体的なソリューションを提供するために、AAAプロトコルに関連して使用されます。これらの他のプロトコルは、多くの場合、認証およびセキュリティアソシエーションの確立を提供しています。"
    },
    {
      "indent": 3,
      "text": "Given the complexity and difficulty in designing secure, long-lasting key management algorithms and protocols by experts in the field, it is almost certainly inappropriate for IETF working groups without deep expertise in the area to be designing their own key management algorithms and protocols based on Authentication, Authorization and Accounting (AAA) protocols. These guidelines apply to documents requesting publication as IETF RFCs. Further, these guidelines will be useful to other standards development organizations (SDOs) that specify AAA key management that depends on IETF specifications for protocols such as Extensible Authentication Protocol (EAP) [RFC3748], Remote Authentication Dial-In User Service (RADIUS) [RFC2865], and Diameter [RFC3588].",
      "ja": "分野の専門家による安全な、長期的な鍵管理アルゴリズムとプロトコルを設計する上での複雑さと難しさを考えると、それは上の基づいた独自の鍵管理アルゴリズムとプロトコルを設計すべき領域における深い専門知識なしに、ほぼ確実にIETFワーキンググループには不適切です認証、認可およびアカウンティング（AAA）プロトコル。これらのガイドラインは、IETF RFCとして公表を要求する文書に適用されます。さらに、これらのガイドラインは、他の標準開発機関（SDOの）、このような拡張認証プロトコル（EAP）[RFC3748]、リモート認証ダイヤルインユーザーサービス（RADIUS）[などのプロトコルのためのIETF仕様に依存する指定AAAキー管理に有用であろうRFC2865]とDiameter [RFC3588]。"
    },
    {
      "indent": 3,
      "text": "In March 2003, at the IETF 56 AAA Working Group Session, Russ Housley gave a presentation on \"Key Management in AAA\" [H]. That presentation established the vast majority of the requirements contained in this document. Over the last three years, this collection of requirements have become known as the \"Housley Criteria\".",
      "ja": "2003年3月、IETF 56 AAAワーキンググループセッションで、ラスHousleyは「AAAにおけるキー管理」[H]についてのプレゼンテーションを行いました。そのプレゼンテーションは、本文書に含まれている要件の大半を確立しました。最後の3年間で、要件のこのコレクションは、「Housleyの基準」として知られるようになってきました。"
    },
    {
      "indent": 0,
      "text": "1.1. Requirements Specification",
      "section_title": true,
      "ja": "1.1. 要求仕様"
    },
    {
      "indent": 3,
      "text": "The keywords MUST, MUST NOT, REQUIRED, SHALL, SHALL NOT, SHOULD, SHOULD NOT, RECOMMENDED, MAY, and OPTIONAL, when they appear in this document, are to be interpreted as described in RFC 2119 [RFC2119].",
      "ja": "彼らは、この文書に表示されるRFC 2119 [RFC2119]で説明したように解釈される際のキーワードは、REQUIREDは、、、、、MAY、推奨、およびオプションのすべきでないないものとものとしてはなりませんしなければなりません。"
    },
    {
      "indent": 3,
      "text": "An AAA key management proposal is not compliant with this specification if it fails to satisfy one or more of the MUST or MUST NOT statements. An AAA key management proposal that satisfies all the MUST, MUST NOT, SHOULD, and SHOULD NOT statements is said to be \"unconditionally compliant\"; one that satisfies all the MUST and MUST NOT statements but not all the SHOULD or SHOULD NOT requirements is said to be \"conditionally compliant\".",
      "ja": "それはMUSTの一つ以上を満たすために失敗したり、文はありませんしなければならない場合は、AAA鍵管理の提案は、この仕様に準拠していません。すべてのMUSTは、SHOULD NOT、および文は「無条件に準拠した」と言われてはならないMUST満たすAAA鍵管理の提案。すべてのMUSTを満たし、文はならず全てではないSHOULDまたはべきではありません要件は、「条件付き準拠した」と言われている。1"
    },
    {
      "indent": 0,
      "text": "1.2. Mandatory to Implement",
      "section_title": true,
      "ja": "1.2. 実装するには必須"
    },
    {
      "indent": 3,
      "text": "The guidance provided in this document is mandatory to implement. However, it is not mandatory to use. That is, configuration at the time of deployment may result in a deployed implementation that does not conform with all of these requirements.",
      "ja": "このドキュメントに記載されている指針は、実装が必須です。しかし、それを使用することは必須ではありません。これは、展開時の構成は、これらの要件のすべてに適合していない展開の実装をもたらすことができる、です。"
    },
    {
      "indent": 3,
      "text": "For example, [RFC4072] enables EAP keying material to be delivered from a AAA server to an AAA client without disclosure to third parties. Thus, key confidentiality is mandatory to implement in Diameter [RFC3588]. However, key confidentiality is not mandatory to use.",
      "ja": "例えば、[RFC4072]は第三者に開示することなく、AAAクライアントにAAAサーバから配信されるEAPキーイングマテリアルを可能にします。このように、キーの機密性は、Diameter [RFC3588]に実装することは必須です。しかし、重要な機密性を使用することは必須ではありません。"
    },
    {
      "indent": 0,
      "text": "1.3. Terminology",
      "section_title": true,
      "ja": "1.3. 用語"
    },
    {
      "indent": 3,
      "text": "This section defines terms that are used in this document.",
      "ja": "このセクションでは、この文書で使用されている用語を定義します。"
    },
    {
      "indent": 6,
      "text": "AAA Authentication, Authorization, and Accounting (AAA). AAA protocols include RADIUS [RFC2865] and Diameter [RFC3588].",
      "ja": "AAA認証、許可、アカウンティング（AAA）。 AAAプロトコルはRADIUS [RFC2865]とDiameter [RFC3588]を含みます。"
    },
    {
      "indent": 6,
      "text": "Authenticator The party initiating EAP authentication. The term authenticator is used in [802.1X], and authenticator has the same meaning in this document.",
      "ja": "EAP認証を開始するパーティーをオーセンティケータ。用語のオーセンティケータは、[802.1X]に使用され、オーセンティケータは、この文書のと同じ意味を持っています。"
    },
    {
      "indent": 6,
      "text": "Backend authentication server A backend authentication server is an entity that provides an authentication service to an authenticator. This terminology is also used in [802.1X].",
      "ja": "バックエンド認証サーババックエンド認証サーバは、オーセンティケータに認証サービスを提供するエンティティです。この用語はまた、[802.1X]で使用されています。"
    },
    {
      "indent": 6,
      "text": "CHAP Challenge Handshake Authentication Protocol; a one-way challenge/response authentication protocol defined in [RFC1994].",
      "ja": "CHAPチャレンジハンドシェイク認証プロトコル。 [RFC1994]で定義された一方向のチャレンジ/レスポンス認証プロトコル。"
    },
    {
      "indent": 6,
      "text": "EAP Extensible Authentication Protocol, defined in [RFC3748].",
      "ja": "[RFC3748]で定義されたEAP拡張認証プロトコル、。"
    },
    {
      "indent": 6,
      "text": "EAP server The entity that terminates the EAP authentication method with the peer. In the case where no backend authentication server is used, the EAP server is part of the authenticator. In the case where the authenticator operates in pass-through mode, the EAP server is located on the backend authentication server.",
      "ja": "EAPサーバピアとEAP認証方式を終了するエンティティ。いかなるバックエンド認証サーバが使用されない場合には、EAPサーバは、オーセンティケータの一部です。オーセンティケータがパススルー・モードで動作する場合、EAPサーバはバックエンド認証サーバに配置されています。"
    },
    {
      "indent": 6,
      "text": "Key Wrap The encryption of one symmetric cryptographic key in another. The algorithm used for the encryption is called a key wrap algorithm or a key encryption algorithm. The key used in the encryption process is called a key-encryption key (KEK).",
      "ja": "キーは、別の1つの対称暗号化キーの暗号化を包みます。暗号化に使用されるアルゴリズムは、キーラップアルゴリズムや鍵暗号化アルゴリズムと呼ばれています。暗号化プロセスで使用されるキーは、キー暗号化キー（KEK）と呼ばれています。"
    },
    {
      "indent": 6,
      "text": "PAP Password Authentication Protocol; a deprecated cleartext password PPP authentication protocol, originally defined in [RFC1334].",
      "ja": "PAPパスワード認証プロトコル。元々[RFC1334]で定義された非推奨平文パスワードPPP認証プロトコル、。"
    },
    {
      "indent": 6,
      "text": "Party A party is a processing entity that can be identified as a single role in a protocol.",
      "ja": "パーティーパーティーは、プロトコルにおける単一役割として同定することができる処理実体です。"
    },
    {
      "indent": 6,
      "text": "Peer The end of the link that responds to the authenticator. In [802.1X], this end is known as the supplicant.",
      "ja": "オーセンティケータに応答するリンクの端にピア。 [802.1X]では、この端部は、サプリカントとして知られています。"
    },
    {
      "indent": 6,
      "text": "PPP Point-to-Point Protocol, defined in [RFC1661], provides support for multiprotocol serial datalinks. PPP is the primary IP datalink used for dial-in NAS connection service.",
      "ja": "[RFC1661]で定義されたPPPポイントツーポイントプロトコルは、マルチプロトコルシリアルデータリンクのためのサポートを提供します。 PPPは、ダイヤルインNAS接続サービスのために使用されるプライマリIPデータリンクです。"
    },
    {
      "indent": 6,
      "text": "Secure Association Protocol A protocol for managing security associations derived from EAP and/or AAA exchanges. The protocol establishes a security association, which includes symmetric keys and a context for the use of the keys. An example of a Secure Association Protocol is the 4-way handshake defined within [802.11i].",
      "ja": "アソシエーションプロトコルをEAPおよび/またはAAA交換に由来するセキュリティアソシエーションを管理するためのプロトコルを確保します。プロトコルは対称鍵と鍵の使用のためのコンテキストを含むセキュリティアソシエーションを確立します。セキュアアソシエーションプロトコルの例は、[802.11iの】内で定義され4ウェイハンドシェイクです。"
    },
    {
      "indent": 6,
      "text": "Session Keys Keying material used to protect data exchanged after authentication has successfully completed, using the negotiated ciphersuite.",
      "ja": "認証が正常に完了した後にデータを保護するために使用される材料を合わせるのセッションキーは交渉さ暗号スイートを使用して、交換しました。"
    },
    {
      "indent": 6,
      "text": "Network Access Server (NAS) A device that provides an access service for a user to a network. The service may be a network connection, or a value added service such as terminal emulation, as described in [RFC2881].",
      "ja": "ネットワークアクセスサーバ（NAS）ネットワークへのユーザのアクセスサービスを提供する装置。サービスは、[RFC2881]に記載されているように、そのような端末エミュレーションのようなネットワーク接続、または付加価値サービスであってもよいです。"
    },
    {
      "indent": 6,
      "text": "4-Way Handshake A Secure Association Protocol, defined in [802.11i], which confirms mutual possession of a Pairwise Master Key by two parties and distributes a Group Key.",
      "ja": "両当事者によってペアワイズマスターキーの相互保有を確認し、グループキーを配布し、[802.11i規格]で定義された4ウェイハンドシェイクAセキュア協会プロトコル、。"
    },
    {
      "indent": 0,
      "text": "2. AAA Environment Concerns",
      "section_title": true,
      "ja": "2. AAA環境懸念"
    },
    {
      "indent": 3,
      "text": "Examples of serious flaws plague the history of key management protocol development, starting with the very first attempt to define a key management protocol in the open literature, which was published in 1978 [NS]. A flaw and a fix were published in 1981 [DS], and the fix was broken in 1994 [AN]. In 1995 [L], a new flaw was found in the original 1978 version, in an area not affected by the 1981/1994 issue. All of these flaws were blindingly obvious once described, yet no one spotted them earlier. Note that the original protocol, if it were revised to employ certificates, which of course had yet to be invented, was only three messages. Many proposed AAA key management schemes are significantly more complicated.",
      "ja": "重大な欠陥の例としては、1978年[NS]に掲載されたオープンな文献での鍵管理プロトコルを定義するための非常に最初の試みで始まる、鍵管理プロトコルの開発の歴史を悩ませています。欠陥および修正は、[DS] 1981年に出版された、および修正は1994年[AN]に壊れていました。 1995 [L]で、新しい欠陥は1994分の1981問題の影響を受けていない領域に、オリジナルの1978年バージョンで発見されました。説明後、これらの欠陥のすべては疑いの余地なく明らかだった、まだ誰も早くそれらを見つけていません。オリジナルのプロトコルが、それはもちろん、まだ発明されなければならなかった証明書を、使用することが改定された場合には、唯一の3つのメッセージだったことに注意してください。多く提案されているAAAの鍵管理方式は、はるかに複雑です。"
    },
    {
      "indent": 3,
      "text": "This bit of history shows that key management protocols are subtle. Experts can easily miss a flaw. As a result, peer review by multiple experts is essential, especially since many proposed AAA key management schemes are significantly more complicated. In addition, formal methods can help uncover problems [M].",
      "ja": "歴史のこのビットは、鍵管理プロトコルが微妙であることを示しています。専門家は、簡単に欠陥を欠場することができます。その結果、複数の専門家によるピアレビューは、多くの提案AAAの鍵管理方式がはるかに複雑で、特に以来、不可欠です。また、形式手法は問題[M]を明らかにすることができます。"
    },
    {
      "indent": 3,
      "text": "AAA-based key management is being incorporated into standards developed by the IETF and other standards development organizations (SDOs), such as IEEE 802. However, due to ad hoc development of AAA-based key management, AAA-based key distribution schemes have poorly understood security properties, even when well-studied cryptographic algorithms are employed. More academic research is needed to fully understand the security properties of AAA-based key management in the diverse protocol environments where it is being employed today. In the absence of such research results, pragmatic guidance based on sound security engineering principles is needed.",
      "ja": "AAAベースのキー管理はAAAベースのキー管理のアドホック発展のために、このようなIEEE 802としてIETFやその他の標準開発機関（SDOの）、しかし、によって開発された標準に組み込まれている、AAAベースの鍵配布スキームは不十分持っていますよく研究された暗号化アルゴリズムが使用される場合でも、セキュリティの特性を理解しました。その他の学術研究は完全にそれが今日使用されている多様なプロトコル環境でのAAAベースのキー管理のセキュリティプロパティを理解することが必要とされています。このような研究結果がない場合には、音のセキュリティ工学原理に基づいた実践的な指導が必要とされています。"
    },
    {
      "indent": 3,
      "text": "In addition to the need for interoperability, cryptographic algorithm independent solutions are greatly preferable. Without algorithm independence, the AAA-based key management protocol must be changed whenever a problem is discovered with any of the selected algorithms. As AAA history shows, problems are inevitable. Problems can surface due to age or design failure.",
      "ja": "相互運用性のための必要性に加えて、暗号アルゴリズム独立ソリューションが大いに好ましいです。問題は、選択したアルゴリズムのいずれかで発見されるたびに、アルゴリズムの独立性がなければ、AAAベースの鍵管理プロトコルを変更する必要があります。 AAAの歴史が示すように、問題は避けられません。問題は、経年や設計の失敗に表面化することができます。"
    },
    {
      "indent": 3,
      "text": "DES [FIPS46] was a well-designed encryption algorithm, and it provided protection for many years. Yet, the 56-bit key size was eventually overcome by Moore's Law. No significant cryptographic deficiencies have been discovered in DES.",
      "ja": "DES [FIPS46]はうまく設計された暗号化アルゴリズムであり、それは、長年の保護を提供します。しかし、56ビットのキーサイズは、最終的にはムーアの法則によって克服されました。有意な暗号不備はDESで発見されていません。"
    },
    {
      "indent": 3,
      "text": "The history of AAA underlines the importance of algorithm independence as flaws have been found in authentication mechanisms such as CHAP, MS-CHAPv1 [SM1], MS-CHAPv2 [SM2], Kerberos [W][BM][DLS], and LEAP [B]. Unfortunately, RADIUS [RFC2865] mandates use of the MD5 algorithm for integrity protection, which has known deficiencies, and RADIUS has no provisions to negotiate substitute algorithms. Similarly, the vendor-specific key wrap mechanism defined in [RFC2548] has no provisions to negotiate substitute algorithms.",
      "ja": "欠陥は、CHAP、MS-CHAPv1を[SM1]、MS-CHAPv2を[SM2]、ケルベロス[W] [BM] [DLS]、及びLEAPなどの認証メカニズムで発見されているようにAAAの歴史は、[アルゴリズムの独立性の重要性を強調しますB]。残念ながら、RADIUS [RFC2865]は欠陥を知っていた完全性保護のためのMD5アルゴリズムの使用を義務付け、およびRADIUSは、代替アルゴリズムを交渉するために何の規定がありません。同様に、[RFC2548]で定義されたベンダー固有の主要な包装機構は、代替アルゴリズムを交渉するために何の規定を有していません。"
    },
    {
      "indent": 3,
      "text": "The principle of least privilege is an important design guideline. This principle requires that a party be given no more privilege than necessary to perform the task assigned to them. Ensuring least privilege requires clear identification of the tasks assigned to each party, and explicit determination of the minimum set of privileges required to perform those tasks. Only those privileges necessary to perform the tasks are granted. By denying to parties unneeded privileges, those denied privileges cannot be used to circumvent security policy or enable attackers. With this principle in mind, AAA key management schemes need to be designed in a manner where each party has only the privileges necessary to perform their role. That is, no party should have access to any keying material that is not needed to perform their own role. A party has access to a particular key if it has access to all of the secret information needed to derive it.",
      "ja": "最小権限の原則は、重要な設計指針です。この原則は、当事者は、それらに割り当てられたタスクを実行するために必要以上の権限を与えられることが必要です。最小特権を保証することは、各当事者に割り当てられたタスクを明確に識別し、それらのタスクを実行するために必要な権限の最小セットの明示的な決意が必要です。タスクを実行するために必要な権限のみが付与されます。関係者に不要な権限を拒否することによって、これらの拒否された権限は、セキュリティポリシーを回避するか、攻撃を可能にするために使用することはできません。心の中でこの原則では、AAAの鍵管理方式は、各当事者が自分の役割を実行するために必要な権限のみを持つように設計する必要があります。つまり、何のパーティーは、自分の役割を実行する必要がない任意のキーイングマテリアルへのアクセス権を持つべきではありません。それはそれを引き出すために必要な秘密情報のすべてにアクセスを持っている場合当事者は、特定のキーへのアクセス権を持っています。"
    },
    {
      "indent": 3,
      "text": "EAP is being used in new ways. The inclusion of support for EAP within Internet Key Exchange Protocol version 2 (IKEv2) and the standardization of robust Wireless LAN security [802.11i] based on EAP are two examples. EAP has also been proposed within IEEE 802.16e [802.16e] and by the IETF PANA Working Group. AAA-based key management is being incorporated into standards developed by the IETF and other standards development organizations (SDOs), such as IEEE 802. However, due to ad hoc development of AAA-based key management, AAA-based key distribution schemes have poorly understood security properties, even when well-studied cryptographic algorithms are employed. More academic research is needed to fully understand the security properties of AAA-based key management in the diverse protocol environments where it is being employed today. In the absence of research results, pragmatic guidance based on sound security engineering principles is needed.",
      "ja": "EAPは、新しい方法で使用されています。 EAPに基づいてインターネット鍵交換プロトコルバージョン2（IKEv2の）と強固な無線LANセキュリティの標準化[802.11i規格]内のEAPのサポートを含めることは、2つの例です。 EAPはまたのIEEE802.16e [802.16eの]内およびIETF PANAワーキンググループによって提案されています。 AAAベースのキー管理はAAAベースのキー管理のアドホック発展のために、このようなIEEE 802としてIETFやその他の標準開発機関（SDOの）、しかし、によって開発された標準に組み込まれている、AAAベースの鍵配布スキームは不十分持っていますよく研究された暗号化アルゴリズムが使用される場合でも、セキュリティの特性を理解しました。その他の学術研究は完全にそれが今日使用されている多様なプロトコル環境でのAAAベースのキー管理のセキュリティプロパティを理解することが必要とされています。研究成果がない場合には、音のセキュリティ工学原理に基づいた実践的な指導が必要とされています。"
    },
    {
      "indent": 3,
      "text": "EAP selects one end-to-end authentication mechanism. The mechanisms defined in [RFC3748] only support unilateral authentication, and they do not support mutual authentication or key derivation. As a result, these mechanisms do not fulfill the security requirements for many deployment scenarios, including Wireless LAN authentication [RFC4017].",
      "ja": "EAPは1エンド・ツー・エンドの認証メカニズムを選択します。 [RFC3748]で定義されたメカニズムは、唯一の一方的な認証をサポートし、彼らは、相互認証や鍵導出をサポートしていません。その結果、これらのメカニズムは、無線LANの認証[RFC4017]を含む多くの展開シナリオのためのセキュリティ要件を満たしていません。"
    },
    {
      "indent": 3,
      "text": "To ensure adequate security and interoperability, EAP applications need to specify mandatory-to-implement algorithms. As described in [RFC3748], EAP methods seeking publication as an IETF RFC need to document their security claims. However, some EAP methods are not based on well-studied models, which makes the validity of these security claims difficult to determine.",
      "ja": "十分なセキュリティと相互運用性を確保するために、EAPアプリケーションが実装に必須のアルゴリズムを指定する必要があります。 [RFC3748]に記載されているように、IETF RFCとして公表を求めてEAPメソッドは、セキュリティクレームを文書化する必要があります。しかし、いくつかのEAP方法が決定するこれらのセキュリティ主張の妥当性を困難にしている、よく研究モデルに基づくものではありません。"
    },
    {
      "indent": 3,
      "text": "In the context of EAP, the EAP peer and server are the parties involved in the EAP method conversation, and they gain access to key material when the conversation completes successfully. However, the lower-layer needs keying material to provide the desired protection through the use of cryptographic mechanisms. As a result, a \"pass-through\" mode is used to provide the keying material, and the lower-layer keying material is replicated from the AAA server to the authenticator. The only parties authorized to obtain all of the keying material are the EAP peer and server; the authenticator obtains only the keying material necessary for its specific role. No other party can obtain direct access to any of the keying material; however, other parties may receive keys that are derived from this keying material for a specific purpose as long as the requirements defined in the next section are met.",
      "ja": "EAPの文脈では、EAPピアとサーバがEAPメソッドの会話当事者であり、会話が正常に完了したとき、彼らはキーマテリアルへのアクセスを得ます。しかし、下位層は、暗号メカニズムの使用を介して所望の保護を提供するために、キーイング材料を必要とします。結果として、「パススルー」モードは、キーイング材料を提供するために使用され、下層鍵材料は、オーセンティケータにAAAサーバから複製されます。唯一の当事者が鍵材料の全てが、EAPピアとサーバです取得することを許可しました。オーセンティケータは、その特定の役割のために必要なだけの鍵材料を得ます。他の当事者は、キーイング材料のいずれかへの直接アクセスを取得することはできません。しかしながら、他の当事者であれば、次のセクションで定義された要件が満たされるように、特定の目的のために、このキーイング材料から導出されたキーを受信することができます。"
    },
    {
      "indent": 0,
      "text": "3. AAA Key Management Requirements",
      "section_title": true,
      "ja": "3. AAAキー管理の要件"
    },
    {
      "indent": 3,
      "text": "The overall goal of AAA key management is to provide cryptographic keying material in situations where key derivation cannot be used by the peer and authenticator. It may not be possible because the authenticator lacks computational power, because it lacks the resources necessary to implement the various authentication mechanisms that might be required, or because it is undesirable for each authenticator to engage in a separate key management conversation.",
      "ja": "AAA鍵管理の全体的な目標は、キー導出はピアとオーセンティケータによって使用することができない状況で暗号化キーイングマテリアルを提供することにあります。オーセンティケータは、計算能力を欠いているので、それが必要になることがあり、様々な認証メカニズムを実装するために必要な資源を欠いているので、可能ではないかもしれない、または各オーセンティケータは、別々の鍵管理会話に従事することは望ましくないからです。"
    },
    {
      "indent": 3,
      "text": "This section provides guidance to AAA protocol designers, EAP method designers, and security association protocol designers. Acceptable solutions MUST meet all of these requirements.",
      "ja": "このセクションでは、AAAプロトコルの設計、EAP方式の設計、及びセキュリティアソシエーションプロトコル設計者にガイダンスを提供します。許容可能な解決策は、これらの要件のすべてを満たす必要があります。"
    },
    {
      "indent": 6,
      "text": "Cryptographic algorithm independent",
      "ja": "暗号アルゴリズムの独立しました"
    },
    {
      "indent": 9,
      "text": "The AAA key management protocol MUST be cryptographic algorithm independent. However, an EAP method MAY depend on a specific cryptographic algorithm. The ability to negotiate the use of a particular cryptographic algorithm provides resilience against compromise of a particular cryptographic algorithm. Algorithm independence is also REQUIRED with a Secure Association Protocol if one is defined. This is usually accomplished by including an algorithm identifier and parameters in the protocol, and by specifying the algorithm requirements in the protocol specification. While highly desirable, the ability to negotiate key derivation functions (KDFs) is not required. For interoperability, at least one suite of mandatory-to-implement algorithms MUST be selected. Note that without protection by IPsec as described in [RFC3579] Section 4.2, RADIUS [RFC2865] does not meet this requirement, since the integrity protection algorithm cannot be negotiated.",
      "ja": "AAAの鍵管理プロトコルは、暗号アルゴリズム独立していなければなりません。しかし、EAPメソッドは、特定の暗号アルゴリズムに依存してもよいです。特定の暗号アルゴリズムの使用を交渉する能力は、特定の暗号アルゴリズムの危殆に対する回復力を提供します。 1が定義されている場合、アルゴリズムの独立性は、セキュア協会プロトコルで必要になります。これは、通常、プロトコルにおけるアルゴリズム識別子およびパラメータを含むことによって、プロトコル仕様のアルゴリズムの要件を指定することによって達成されます。非常に望ましいが、鍵導出関数（KDFs）を交渉する能力が必要とされません。相互運用性のために、強制的に実装アルゴリズムの少なくとも一方スイートが選択されなければなりません。完全性保護アルゴリズムがネゴシエートすることができないので、[RFC3579]セクション4.2に記載されているようにIPSecで保護することなく、RADIUS [RFC2865]は、この要件を満たしていないことに留意されたいです。"
    },
    {
      "indent": 9,
      "text": "This requirement does not mean that a protocol must support both public-key and symmetric-key cryptographic algorithms. It means that the protocol needs to be structured in such a way that multiple public-key algorithms can be used whenever a public-key algorithm is employed. Likewise, it means that the protocol needs to be structured in such a way that multiple symmetric-key algorithms can be used whenever a symmetric-key algorithm is employed.",
      "ja": "この要件は、プロトコルは、公開鍵と対称鍵暗号アルゴリズムの両方をサポートしなければならないという意味ではありません。これは、プロトコルは、公開鍵アルゴリズムが使用されるたびに、複数の公開鍵アルゴリズムを使用することができるように構成する必要があることを意味します。同様に、プロトコルは共通鍵暗号が使用されるたびに複数の対称鍵アルゴリズムを使用することができるように構成する必要があることを意味します。"
    },
    {
      "indent": 6,
      "text": "Strong, fresh session keys",
      "ja": "強力な、新鮮なセッションキー"
    },
    {
      "indent": 9,
      "text": "While preserving algorithm independence, session keys MUST be strong and fresh. Each session deserves an independent session key. Fresh keys are required even when a long replay counter (that is, one that \"will never wrap\") is used to ensure that loss of state does not cause the same counter value to be used more than once with the same session key.",
      "ja": "アルゴリズムの独立性を維持しながら、セッション鍵が強く、新鮮でなければなりません。各セッションは独立したセッションキーに値します。新鮮なキーは、場合でも、長いリプレイカウンター要求されている（つまり、「ラップすることはありません」ということです）状態の損失は、同じセッションキーを複数回使用する同じカウンタ値を起こさないことを確実にするために使用されます。"
    },
    {
      "indent": 9,
      "text": "Some EAP methods are capable of deriving keys of varying strength, and these EAP methods MUST permit the generation of keys meeting a minimum equivalent key strength. BCP 86 [RFC3766] offers advice on appropriate key sizes. The National Institute for Standards and Technology (NIST) also offers advice on appropriate key sizes in [SP800-57].",
      "ja": "いくつかのEAPメソッドは、様々な強さの鍵を導出することが可能であり、これらのEAPメソッドは、最小同等のキー強度を満たす鍵の生成を可能にしなければなりません。 BCP 86 [RFC3766]は、適切なキーのサイズについてアドバイスを提供しています。標準技術研究所（NIST）は、[SP800-57]で適切なキーのサイズについてアドバイスを提供しています。"
    },
    {
      "indent": 9,
      "text": "A fresh cryptographic key is one that is generated specifically for the intended use. In this situation, a secure association protocol is used to establish session keys. The AAA protocol and EAP method MUST ensure that the keying material supplied as an input to session key derivation is fresh, and the secure association protocol MUST generate a separate session key for each session, even if the keying material provided by EAP is cached. A cached key persists after the authentication exchange has completed. For the AAA/EAP server, key caching can happen when state is kept on the server. For the NAS or client, key caching can happen when the NAS or client does not destroy keying material immediately following the derivation of session keys.",
      "ja": "新鮮な暗号化キーは、意図された用途のために特別に生成されるものです。このような状況では、安全な協会プロトコルは、セッションキーを確立するために使用されます。 AAAプロトコル及びEAPメソッドは、セッションキー導出への入力として供給される鍵材料が新鮮であることを保証しなければならない、およびセキュアアソシエーションプロトコルがEAPによって提供される鍵材料がキャッシュされている場合でも、セッションごとに別個のセッション・キーを生成しなければなりません。認証交換が完了した後にキャッシュされたキーが持続します。状態は、サーバー上に保存されている場合、AAA / EAPサーバの場合は、キーキャッシュが発生する可能性があります。 NASまたはクライアントがすぐにセッションキーの導出、次の鍵材料を破壊しないときNASまたはクライアントの場合は、キーキャッシュが発生する可能性があります。"
    },
    {
      "indent": 9,
      "text": "Session keys MUST NOT be dependent on one another. Multiple session keys may be derived from a higher-level shared secret as long as a one-time value, usually called a nonce, is used to ensure that each session key is fresh. The mechanism used to generate session keys MUST ensure that the disclosure of one session key does not aid the attacker in discovering any other session keys.",
      "ja": "セッションキーは互いに依存しているはずがありません。複数のセッション鍵であれば、通常、ノンスと呼ばれるワンタイム値を、各セッション鍵が新鮮であることを保証するために使用されるより高いレベルの共有秘密情報から導出することができます。セッション鍵を生成するために使用されるメカニズムは、1つのセッションキーの開示は、他のセッション鍵を発見するには、攻撃者を支援しないことを保証しなければなりません。"
    },
    {
      "indent": 6,
      "text": "Limit key scope",
      "ja": "キー範囲を限定"
    },
    {
      "indent": 9,
      "text": "Following the principle of least privilege, parties MUST NOT have access to keying material that is not needed to perform their role. A party has access to a particular key if it has access to all of the secret information needed to derive it.",
      "ja": "最小特権の原則に続いて、当事者がその役割を実行するために必要とされていない材料を鍵へのアクセス権を持つことはできません。それはそれを引き出すために必要な秘密情報のすべてにアクセスを持っている場合当事者は、特定のキーへのアクセス権を持っています。"
    },
    {
      "indent": 9,
      "text": "Any protocol that is used to establish session keys MUST specify the scope for session keys, clearly identifying the parties to whom the session key is available.",
      "ja": "セッションキーを確立するために使用されているすべてのプロトコルが明確にセッションキーが利用可能である誰にパーティーを識別、セッションキーのためのスコープを指定する必要があります。"
    },
    {
      "indent": 6,
      "text": "Replay detection mechanism",
      "ja": "リプレイ検出メカニズム"
    },
    {
      "indent": 9,
      "text": "The AAA key management protocol exchanges MUST be replay protected, including AAA, EAP, and Secure Association Protocol exchanges. Replay protection allows a protocol message recipient to discard any message that was recorded during a previous legitimate dialogue and presented as though it belonged to the current dialogue.",
      "ja": "AAA鍵管理プロトコル交換は、再生がAAA、EAP、およびセキュアアソシエーションプロトコル交換を含む、保護されなければなりません。リプレイ保護は前正当対話中に記録され、それが現在の会話に属しているかのように提示された任意のメッセージを廃棄するプロトコルメッセージの受信者を可能にします。"
    },
    {
      "indent": 6,
      "text": "Authenticate all parties",
      "ja": "すべての当事者を認証します"
    },
    {
      "indent": 9,
      "text": "Each party in the AAA key management protocol MUST be authenticated to the other parties with whom they communicate. Authentication mechanisms MUST maintain the confidentiality of any secret values used in the authentication process.",
      "ja": "AAAの鍵管理プロトコルにおける各当事者は、彼らが通信誰と他の当事者に認証される必要があります。認証メカニズムは、認証プロセスで使用される任意の秘密の値の機密性を維持しなければなりません。"
    },
    {
      "indent": 9,
      "text": "When a secure association protocol is used to establish session keys, the parties involved in the secure association protocol MUST identify themselves using identities that are meaningful in the lower-layer protocol environment that will employ the session keys. In this situation, the authenticator and peer may be known by different identifiers in the AAA protocol environment and the lower-layer protocol environment, making authorization decisions difficult without a clear key scope. If the lower-layer identifier of the peer will be used to make authorization decisions, then the pair of identifiers associated with the peer MUST be authorized by the authenticator and/or the AAA server.",
      "ja": "安全な協会プロトコルは、セッションキーを確立するために使用された場合は、安全な協会プロトコルに関わる当事者はセッションキーを採用する下位層プロトコル環境で意味のあるIDを使用して自分自身を特定しなければなりません。この状況では、オーセンティケータとピアはクリアキースコープなし難しい許可決定を行う、AAAプロトコル環境と下位層プロトコル環境における異なる識別子によって知られていてもよいです。ピアの下層識別子が承認の判断を行うために使用される場合、ピアに関連付けられた識別子のペアは、認証および/またはAAAサーバによって承認されなければなりません。"
    },
    {
      "indent": 9,
      "text": "AAA protocols, such as RADIUS [RFC2865] and Diameter [RFC3588], provide a mechanism for the identification of AAA clients; since the EAP authenticator and AAA client are always co-resident, this mechanism is applicable to the identification of EAP authenticators.",
      "ja": "このようなRADIUS [RFC2865]とDiameter [RFC3588]などのAAAプロトコルは、AAAクライアントの識別のためのメカニズムを提供します。 EAP認証およびAAAクライアントは常に共存しているので、このメカニズムは、EAP認証者の識別に適用されます。"
    },
    {
      "indent": 9,
      "text": "When multiple base stations and a \"controller\" (such as a WLAN switch) comprise a single EAP authenticator, the \"base station identity\" is not relevant; the EAP method conversation takes place between the EAP peer and the EAP server. Also, many base stations can share the same authenticator identity. The authenticator identity is important in the AAA protocol exchange and the secure association protocol conversation.",
      "ja": "（例えばWLANスイッチのような）複数の基地局と「コントローラ」は、単一のEAP認証を含む場合、「基地局IDが」関連性はありません。 EAPメソッドの会話は、EAPピアとEAPサーバとの間で行われます。また、多くの基地局が同じオーセンティケータの同一性を共有することができます。オーセンティケータのアイデンティティは、AAAプロトコル交換と安全な協会プロトコル会話の中で重要です。"
    },
    {
      "indent": 9,
      "text": "Authentication mechanisms MUST NOT employ plaintext passwords. Passwords may be used provided that they are not sent to another party without confidentiality protection.",
      "ja": "認証メカニズムは、平文パスワードを使用してはなりません。使用できるパスワードは、彼らが機密性保護せずに、別の相手に送信されていないことを条件とします。"
    },
    {
      "indent": 6,
      "text": "Peer and authenticator authorization",
      "ja": "ピアとオーセンティケータ承認"
    },
    {
      "indent": 9,
      "text": "Peer and authenticator authorization MUST be performed. These entities MUST demonstrate possession of the appropriate keying material, without disclosing it. Authorization is REQUIRED whenever a peer associates with a new authenticator. The authorization checking prevents an elevation of privilege attack, and it ensures that an unauthorized authenticator is detected.",
      "ja": "ピアとオーセンティケータの承認を実行しなければなりません。これらのエンティティは、それを開示することなく、適切な鍵素材の所有を実証しなければなりません。認可は、新しいオーセンティケータといつでもピア仲間を必要としています。許可検査は特権攻撃の上昇を防ぎ、そしてそれが不正オーセンティケータが検出されることを保証します。"
    },
    {
      "indent": 9,
      "text": "Authorizations SHOULD be synchronized between the peer, NAS, and backend authentication server. Once the AAA key management protocol exchanges are complete, all of these parties should hold a common view of the authorizations associated with the other parties.",
      "ja": "承認は、ピア、NAS、およびバックエンド認証サーバの間で同期させなければなりません。 AAA鍵管理プロトコル交換が完了したら、これらの当事者のすべてが他の当事者に関連付けられた権限の共通のビューを保持する必要があります。"
    },
    {
      "indent": 9,
      "text": "In addition to authenticating all parties, key management protocols need to demonstrate that the parties are authorized to possess keying material. Note that proof of possession of keying material does not necessarily prove authorization to hold that keying material. For example, within an IEEE 802.11i, the 4-way handshake demonstrates that both the peer and authenticator possess the same EAP keying material. However, by itself, this possession proof does not demonstrate that the authenticator was authorized by the backend authentication server to possess that keying material. As noted in RFC 3579 in Section 4.3.7, where AAA proxies are present, it is possible for one authenticator to impersonate another, unless each link in the AAA chain implements checks against impersonation. Even with these checks in place, an authenticator may still claim different identities to the peer and the backend authentication server. As described in RFC 3748 in Section 7.15, channel binding is required to enable the peer to verify that the authenticator claim of identity is both consistent and correct.",
      "ja": "すべての関係者を認証することに加えて、鍵管理プロトコルは、当事者が鍵材料を有することが許可されていることを証明する必要があります。必ずしも材料をキーイングすることを保持するための権限を証明しない鍵材料の所持の証拠を注意してください。例えば、IEEE 802.11iの内、4ウェイハンドシェイクは、ピアとオーセンティケータの両方が同じEAPキーイングマテリアルを有することを示しています。しかし、それ自体で、この所持の証拠は、オーセンティケータがその鍵素材を所有するバックエンド認証サーバによって承認されたことを示すものではありません。 AAAプロキシが存在するセクション4.3.7にRFC 3579に述べたように、AAAチェーンの各リンクは、なりすましに対するチェックを実装しない限り、1つのオーセンティケータは、別のものを偽装することが可能です。でも、代わりにこれらのチェックで、オーセンティケータはまだピアとバックエンド認証サーバに異なるIDを請求することができます。セクション7.15にRFC 3748に記載されているように、チャネル結合が同一のオーセンティケータ主張が一致し、正しい両方であることを確認するためにピアを可能にするために必要とされます。"
    },
    {
      "indent": 6,
      "text": "Keying material confidentiality and integrity",
      "ja": "材料の機密性と完全性をキーイング"
    },
    {
      "indent": 9,
      "text": "While preserving algorithm independence, confidentiality and integrity of all keying material MUST be maintained.",
      "ja": "アルゴリズムの独立性を維持しながら、すべての鍵材料の機密性と完全性を維持しなければなりません。"
    },
    {
      "indent": 6,
      "text": "Confirm ciphersuite selection",
      "ja": "暗号スイートの選択を確認します"
    },
    {
      "indent": 9,
      "text": "The selection of the \"best\" ciphersuite SHOULD be securely confirmed. The mechanism SHOULD detect attempted roll-back attacks.",
      "ja": "「最高の」暗号スイートの選択が確実に確認すべきです。メカニズムが試みロールバック攻撃を検出する必要があります。"
    },
    {
      "indent": 6,
      "text": "Uniquely named keys",
      "ja": "一意の名前のキー"
    },
    {
      "indent": 9,
      "text": "AAA key management proposals require a robust key naming scheme, particularly where key caching is supported. The key name provides a way to refer to a key in a protocol so that it is clear to all parties which key is being referenced. Objects that cannot be named cannot be managed. All keys MUST be uniquely named, and the key name MUST NOT directly or indirectly disclose the keying material. If the key name is not based on the keying material, then one can be sure that it cannot be used to assist in a search for the key value.",
      "ja": "AAA鍵管理の提案は、キーキャッシュがサポートされている、特に堅牢なキー命名スキームを、必要としています。キー名は、それが参照されているキーすべての当事者には明らかであるように、プロトコルでキーを参照する方法を提供します。名前を付けることができないオブジェクトを管理することができません。すべてのキーは一意の名前を付ける必要があり、キーの名前は、直接的または間接的に鍵素材を開示してはなりません。キー名を合わせることの材料に基づいていない場合、その一つは、キー値の検索を支援するために使用することはできないことを確認することができます。"
    },
    {
      "indent": 6,
      "text": "Prevent the Domino effect",
      "ja": "ドミノ効果を防ぎます"
    },
    {
      "indent": 9,
      "text": "Compromise of a single peer MUST NOT compromise keying material held by any other peer within the system, including session keys and long-term keys. Likewise, compromise of a single authenticator MUST NOT compromise keying material held by any other authenticator within the system. In the context of a key hierarchy, this means that the compromise of one node in the key hierarchy must not disclose the information necessary to compromise other branches in the key hierarchy. Obviously, the compromise of the root of the key hierarchy will compromise all of the keys; however, a compromise in one branch MUST NOT result in the compromise of other branches. There are many implications of this requirement; however, two implications deserve highlighting. First, the scope of the keying material must be defined and understood by all parties that communicate with a party that holds that keying material. Second, a party that holds keying material in a key hierarchy must not share that keying material with parties that are associated with other branches in the key hierarchy.",
      "ja": "単一ピアの妥協は、セッション鍵と長期キーを含むシステム内の他のピアによって保持された材料を、キーイング妥協してはいけません。同様に、単一オーセンティケータの妥協点は、システム内の他のオーセンティケータによって保持された鍵材料を妥協してはなりません。キー階層のコンテキストでは、これは、キー階層内の1つのノードの妥協がキー階層内の他のブランチを妥協するために必要な情報を開示していなければならないことを意味します。もちろん、キー階層のルートの妥協は、キーのすべてを妥協します。しかし、一方の分岐で妥協が他のブランチの妥協につながるなりません。この要件の多くの意味があります。しかし、2つの意味が強調に値します。まず、キーイング材料の範囲は、その鍵材料を保持している相手と通信するすべての当事者によって定義されたと理解されなければなりません。第二に、主要な階層構造に鍵材料を保持している当事者はキー階層内の他の支店に関連している政党で材料をキーイングすることを共有してはいけません。"
    },
    {
      "indent": 9,
      "text": "Group keys are an obvious exception. Since all members of the group have a copy of the same key, compromise of any one of the group members will result in the disclosure of the group key.",
      "ja": "グループキーは明らかに例外です。グループのすべてのメンバーが同じキーのコピーを持っているので、グループメンバーのいずれかの妥協は、グループキーの開示になります。"
    },
    {
      "indent": 6,
      "text": "Bind key to its context",
      "ja": "そのコンテキストにバインドキー"
    },
    {
      "indent": 9,
      "text": "Keying material MUST be bound to the appropriate context. The context includes the following.",
      "ja": "鍵材料は、適切なコンテキストにバインドする必要があります。コンテキストは、以下のものが挙げられます。"
    },
    {
      "indent": 12,
      "text": "o The manner in which the keying material is expected to be used.",
      "ja": "キーイング材料を使用することが期待される方法O。"
    },
    {
      "indent": 12,
      "text": "o The other parties that are expected to have access to the keying material.",
      "ja": "キーイング材料へのアクセスを有することが期待される他の当事者O。"
    },
    {
      "indent": 12,
      "text": "o The expected lifetime of the keying material. Lifetime of a child key SHOULD NOT be greater than the lifetime of its parent in the key hierarchy.",
      "ja": "キーイング材料の予想寿命O。子キーの有効期間は、キー階層内の親の寿命よりも大きくすべきではありません。"
    },
    {
      "indent": 9,
      "text": "Any party with legitimate access to keying material can determine its context. In addition, the protocol MUST ensure that all parties with legitimate access to keying material have the same context for the keying material. This requires that the parties are properly identified and authenticated, so that all of the parties that have access to the keying material can be determined.",
      "ja": "鍵材料への正当なアクセス権を持つ当事者は、そのコンテキストを決定することができます。また、プロトコルは、鍵材料をへの正当なアクセス権を持つすべての当事者が鍵素材のため、同じコンテキストを持っていることを確認しなければなりません。キーイング材料へのアクセス権を持つ当事者のすべてを決定することができるようにこれは、関係者が適切に識別・認証されている必要があります。"
    },
    {
      "indent": 9,
      "text": "The context will include the peer and NAS identities in more than one form. One (or more) name form is needed to identify these parties in the authentication exchange and the AAA protocol. Another name form may be needed to identify these parties within the lower layer that will employ the session key.",
      "ja": "コンテキストは、複数のフォームでのピアとNASのIDが含まれます。 1つ（またはそれ以上）の名前の形式は、認証交換とAAAプロトコルでこれらの当事者を識別するために必要とされます。別の名前の形式は、セッションキーを採用する下位層内でこれらの当事者を特定するために必要な場合があります。"
    },
    {
      "indent": 0,
      "text": "4. AAA Key Management Recommendations",
      "section_title": true,
      "ja": "4. AAAキー管理に関する推奨事項"
    },
    {
      "indent": 3,
      "text": "Acceptable solutions SHOULD meet all of these requirements.",
      "ja": "許容可能な解決策は、これらの要件のすべてを満たす必要があります。"
    },
    {
      "indent": 6,
      "text": "Confidentiality of identity",
      "ja": "アイデンティティの機密性"
    },
    {
      "indent": 9,
      "text": "In many environments, it is important to provide confidentiality protection for identities. However, this is not important in other environments. For this reason, EAP methods are encouraged to provide a mechanism for identity protection of EAP peers, but such protection is not a requirement.",
      "ja": "多くの環境では、アイデンティティのための機密保護を提供することが重要です。しかし、これは他の環境では重要ではありません。このため、EAPメソッドは、EAPピアのアイデンティティを保護するためのメカニズムを提供することをお勧めしますが、そのような保護は必須ではありませんされています。"
    },
    {
      "indent": 6,
      "text": "Authorization restriction",
      "ja": "認証制限"
    },
    {
      "indent": 9,
      "text": "If peer authorization is restricted, then the peer SHOULD be made aware of the restriction. Otherwise, the peer may inadvertently attempt to circumvent the restriction. For example, authorization restrictions in an IEEE 802.11 environment include:",
      "ja": "ピアの認証が制限されている場合、ピアは制限を認識してなされるべきです。そうでない場合、ピアは不注意制限を回避しようと試みることができます。例えば、IEEE 802.11環境における認証の制限は、次のとおりです。"
    },
    {
      "indent": 12,
      "text": "o Key lifetimes, where the keying material can only be used for a certain period of time;",
      "ja": "キーイング材料のみ一定期間のために使用することができるキーの有効期間、O。"
    },
    {
      "indent": 12,
      "text": "o SSID restrictions, where the keying material can only be used with a specific IEEE 802.11 SSID;",
      "ja": "キーイング材料のみ特定IEEE 802.11 SSIDと一緒に使用することができる入出力SSIDの制限;"
    },
    {
      "indent": 12,
      "text": "o Called-Station-ID restrictions, where the keying material can only be used with a single IEEE 802.11 BSSID; and",
      "ja": "鍵材料は、単一のIEEE 802.11 BSSIDと使用することができる着信ステーション-ID制限、O。そして"
    },
    {
      "indent": 12,
      "text": "o Calling-Station-ID restrictions, where the keying material can only be used with a single peer IEEE 802 MAC address.",
      "ja": "鍵材料は、単一のピアIEEE 802 MACアドレスを使用することができる発呼ステーション-ID制限、O。"
    },
    {
      "indent": 0,
      "text": "5. Security Considerations",
      "section_title": true,
      "ja": "5.セキュリティについての考慮事項"
    },
    {
      "indent": 3,
      "text": "This document provides architectural guidance to designers of AAA key management protocols. The guidance is also useful to designers of systems and solutions that include AAA key management protocols.",
      "ja": "この文書では、AAAの鍵管理プロトコルの設計者にアーキテクチャガイダンスを提供します。ガイダンスはまた、AAA鍵管理プロトコルを含むシステムやソリューションの設計者にとって有用です。"
    },
    {
      "indent": 3,
      "text": "In some deployment scenarios, more than one party in the AAA key management protocol can reside on the same host. For example, the EAP authenticator and AAA client are expected to reside on the same entity. Colocation enables a single unique authenticator identity to be sent by the authenticator to the AAA server as well as by the authenticator to the EAP peer. Use of the same identity in both conversations enables the peer and AAA server to confirm that the authenticator is consistent in its identification, avoiding potential impersonation attacks. If the authenticator and AAA client are not colocated, then the authenticator and AAA client identities will differ, and the key scope will not be synchronized between the EAP peer, authenticator, and server. Lack of key scope synchronization enables a number of security vulnerabilities, including impersonation. For this reason, a design needs to include mechanisms to ensure that the key scope and key naming are unambiguous.",
      "ja": "いくつかの展開シナリオでは、AAAの鍵管理プロトコルで複数の当事者が同じホスト上に存在することができます。例えば、EAP認証およびAAAクライアントが同じエンティティ上に存在することが予想されています。コロケーションは、AAAサーバにだけでなく、EAPピアに認証者によって認証者によって送信される単一のユニークなオーセンティケータアイデンティティを可能にします。両方の会話で同じIDを使用すると、潜在的な偽装攻撃を避け、オーセンティケータはその同定に一貫性があることを確認するために、ピアとAAAサーバーを可能にします。オーセンティケータとAAAクライアントが同じ場所に配置されていない場合は、オーセンティケータとAAAクライアントのアイデンティティが異なります、そしてキー範囲は、EAPピア、オーセンティケータ、およびサーバの間で同期されません。キー範囲の同期の欠如は、なりすましなどのセキュリティ上の脆弱性の数を、可能にします。このため、デザインは、キー範囲とキーの命名があいまいであることを確認するためのメカニズムを含める必要があります。"
    },
    {
      "indent": 3,
      "text": "The AAA server is a trusted entity. When keying material is present at all, it establishes keying material with the peer and distributes keying material to the authenticator using the AAA protocol. It is trusted to only distribute keying material to the authenticator that was established with the peer, and it is trusted to provide that keying material to no other parties. In many systems, keying material established by the EAP peer and EAP server are combined with publicly available data to derive other keys. The AAA server is trusted to refrain from deriving these same keys even though it has access to the secret values that are needed to do so.",
      "ja": "AAAサーバは、信頼できるエンティティです。鍵材料が全く存在している場合、それはピアと鍵材料確立し、AAAプロトコルを用いてオーセンティケータに鍵材料を配布します。唯一のピアと確立されたオーセンティケータへの鍵材料を配布するために信頼され、そして無い他の当事者にその鍵材料を提供するために、信頼されています。多くのシステムでは、EAPピアとEAPサーバによって確立された鍵材料は、他のキーを導出するために公的に利用可能なデータと組み合わされます。 AAAサーバは、それがそうするために必要な秘密の値へのアクセスを持っているにもかかわらず、これらのキーと同じキーを導出控えるように信頼されています。"
    },
    {
      "indent": 3,
      "text": "The authenticator is also a trusted party. The authenticator is trusted not to distribute keying material provided by the AAA server to any other parties. If the authenticator uses a key derivation function to derive additional keying material, the authenticator is trusted to distribute the derived keying material only to the appropriate party that is known to the peer, and no other party. When this approach is used, care must be taken to ensure that the resulting key management system meets all of the principles in this document, confirming that keys used to protect data are to be known only by the peer and authenticator.",
      "ja": "オーセンティケータはまた、信頼できる当事者です。オーセンティケータは、他の当事者にAAAサーバが提供する鍵材料を配布しないように信頼されています。オーセンティケータは、追加のキーイング材料を導き出すために鍵導出関数を使用している場合は、オーセンティケータはピアに知られている適切なパーティ、ノー相手に派生鍵素材を配布するために信頼されています。このアプローチを使用する場合、注意は、データを保護するために使用されるキーは、ピアとオーセンティケータによってのみ知られることを確認し、得られた鍵管理システムは、本文書に原則の全てを満たしていることを保証するために注意しなければなりません。"
    },
    {
      "indent": 3,
      "text": "EAP is used to authenticate the peer to the AAA/EAP server. Following successful authentication, the AAA/EAP server authorizes the peer. In many situations, this is accomplished by sending keying material to the authenticator and the peer in separate protocol messages. The authenticator is not directly authenticated to the peer. Rather, the peer determines that the authenticator has been authorized by the AAA/EAP server by confirming that the authenticator has the same AAA/EAP server-provided keying material. In some systems, explicit authenticator and peer mutual authentication is possible. This is desirable since it greatly improves accountability.",
      "ja": "EAPは、AAA / EAPサーバへのピアを認証するために使用されます。認証が成功に続き、AAA / EAPサーバは、ピアを許可します。多くの状況において、これはオーセンティケータと別個のプロトコルメッセージ内のピアに鍵材料を送信することによって達成されます。オーセンティケータは、直接ピアに認証されていません。むしろ、ピアは、オーセンティケータは、オーセンティケータが同じAAA / EAPサーバが提供する鍵材料を有することを確認することにより、AAA / EAPサーバによって承認されたと判断します。いくつかのシステムでは、明示的なオーセンティケータとピアの相互認証が可能です。それが大幅に説明責任を向上させるので、これは望ましいです。"
    },
    {
      "indent": 3,
      "text": "When MIB modules are developed for AAA protocols or EAP methods, these MIB modules might include managed objects for keying material. The existence of managed objects associated with keying material offers an additional avenue for key compromise if these objects include the keying material itself. Therefore, these MIB modules MUST NOT include objects for private keys or symmetric keys. However, these MIB modules MAY include management objects that expose names and context associated with keys, and they MAY provide a means to delete keys.",
      "ja": "MIBモジュールは、AAAプロトコルまたはEAPメソッドのために開発されている場合は、これらのMIBモジュールは、材料をキーイング用の管理対象オブジェクトが含まれる場合があります。これらのオブジェクトは、キーイング材料自体が含まれている場合の鍵材料に関連した管理対象オブジェクトの存在が鍵の危殆化のための追加的な手段を提供しています。したがって、これらのMIBモジュールは、秘密鍵または対称鍵のためのオブジェクトを含んではいけません。しかし、これらのMIBモジュールは、キーに関連付けられている名前とコンテキストを公開する管理オブジェクトを含むことができ、彼らはキーを削除する手段を提供することができます。"
    },
    {
      "indent": 0,
      "text": "6. Normative References",
      "section_title": true,
      "ja": "6.引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 0,
      "text": "7. Informative References",
      "section_title": true,
      "ja": "7.参考文献"
    },
    {
      "indent": 3,
      "text": "[802.1X] IEEE Standards for Local and Metropolitan Area Networks: Port based Network Access Control, IEEE Std 802.1X-2004, December 2004.",
      "ja": "ローカルおよびメトロポリタンエリアネットワークの[802.1X] IEEE規格：ポートベースのネットワークアクセスコントロール、IEEE 802.1X STD-2004、2004年12月。"
    },
    {
      "indent": 3,
      "text": "[802.11i] Institute of Electrical and Electronics Engineers, \"Supplement to Standard for Telecommunications and Information Exchange Between Systems -- LAN/MAN Specific Requirements - Part 11: Wireless LAN Medium Access Control (MAC) and Physical Layer (PHY) Specifications: Specification for Enhanced Security\", IEEE 802.11i, July 2004.",
      "ja": "[802.11i規格]電気通信及びシステム間情報交換のための標準への電気電子技術者協会、「サプリメント -  LAN / MAN具体的な要件 - パート11：無線LAN媒体アクセス制御（MAC）および物理層（PHY）仕様：仕様セキュリティ強化」、IEEE 802.11i規格、2004年7月の。"
    },
    {
      "indent": 3,
      "text": "[802.16e] Institute of Electrical and Electronics Engineers, \"Supplement to Standard for Telecommunications and Information Exchange Between Systems -- LAN/MAN Specific Requirements - Part 16: Air Interface for Fixed and Mobile Broadband Wireless Access Systems -- Amendment for Physical and Medium Access Control Layers for Combined Fixed and Mobile Operation in Licensed Bands\", Draft, IEEE 802.16e/D8, May 2005.",
      "ja": "[802.16eの]電気通信及びシステム間情報交換のための標準への電気電子技術者協会、「サプリメント -  LAN / MAN具体的な要件 - パート16：固定およびモバイルブロードバンドワイヤレスアクセスシステムのためのエアインターフェース - 物理的および中型のための改正アクセス制御許諾バンドで固定結合され、モバイル運用のためのレイヤー」、ドラフト、IEEE 802.16eの/ D8、2005年5月。"
    },
    {
      "indent": 3,
      "text": "[AN] M. Abadi and R. Needham, \"Prudent Engineering Practice for Cryptographic Protocols\", Proc. IEEE Computer Society Symposium on Research in Security and Privacy, May 1994.",
      "ja": "[AN] M.アバディ及びR.ニーダム、「暗号プロトコルのための慎重な技術的手法」、PROC。セキュリティとプライバシーにおける研究上のIEEEコンピュータ学会シンポジウム、1994年5月。"
    },
    {
      "indent": 3,
      "text": "[B] Brewin, B., \"LEAP attack tool author says he wants to alert users to risks\", Computerworld, October 17, 2003.",
      "ja": "[B] Brewin、B.は、Computerworldの、2003年10月17日、 \"LEAP攻撃ツールの作者は、彼が危険にユーザーに警告したいと言います\"。"
    },
    {
      "indent": 3,
      "text": "[BM] Bellovin, S. and M. Merrit, \"Limitations of the Kerberos authentication system\", Proceedings of the 1991 Winter USENIX Conference, pp. 253-267, 1991.",
      "ja": "[BM] Bellovin氏、S。およびM. Merrit、 \"Kerberos認証システムの制限\" 1991年冬のUSENIX会議の議事録、PP。253-267、1991。"
    },
    {
      "indent": 3,
      "text": "[DDNN39.2] DCA DDN Program Management Office, \"MILNET TAC Access Control\", Defense Data Network Newsletter, DDN News 39, Special Issue, 26 Apr 1985, <http://www.isi.edu/ in-notes/museum/ddn-news/ddn-news.n39.2>.",
      "ja": "[DDNN39.2] DCA DDNプログラム・マネージメント・オフィス、 \"MILNET TACアクセス制御\"、国防データ・ネットワークニュースレター、DDNニュース39、特集、1985年4月26日、<http://www.isi.edu/で-ノート/博物館/ddn-news/ddn-news.n39.2>。"
    },
    {
      "indent": 3,
      "text": "[DLS] Dole, B., Lodin, S. and E. Spafford, \"Misplaced trust: Kerberos 4 session keys\", Proceedings of the Internet Society Network and Distributed System Security Symposium, pp. 60-70, March 1997.",
      "ja": "[DLS]ドール、B.、Lodin、S.およびE. SPAFFORD、 \"見当違いの信頼：ケルベロス4セッションキー\"、インターネット協会ネットワークの議事録と分散システムセキュリティシンポジウム、頁60-70、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[DS] D. Denning and G. Sacco. \"Timestamps in key distributed protocols\", Communication of the ACM, 24(8):533--535, 1981.",
      "ja": "[DS] D.デニング及びG.サッコ。 ACMの \"キー分散プロトコルにおけるタイムスタンプ\"、コミュニケーション、24（8）：533--535、1981。"
    },
    {
      "indent": 3,
      "text": "[FIPS46] Federal Information Processing Standards Publication (FIPS PUB) 46, Data Encryption Standard, 1977 January 15.",
      "ja": "[FIPS46]連邦情報処理規格出版（FIPS PUBの）46、データ暗号化規格、1977年1月15日。"
    },
    {
      "indent": 3,
      "text": "[H] Housley, R., \"Key Management in AAA\", Presentation to the AAA WG at IETF 56, March 2003, <http://www.ietf.org/ proceedings/03mar/slides/aaa-5/index.html>.",
      "ja": "[H] Housley氏、R.、 \"AAAでのキー管理\"、IETF 56でAAA WGへのプレゼンテーション、2003年3月、<http://www.ietf.org/手続き/ 03mar /スライド/ AAA-5 /インデックス。 HTML>。"
    },
    {
      "indent": 3,
      "text": "[L] G. Lowe. \"An attack on the Needham-Schroeder public key authentication protocol\", Information Processing Letters, 56(3):131--136, November 1995.",
      "ja": "[L] G.ロウ。 「ニーダム・シュローダー公開鍵認証プロトコルへの攻撃」、情報処理レター、56（3）：131--136、1995年11月。"
    },
    {
      "indent": 3,
      "text": "[M] Meadows, C., \"Analysis of the Internet Key Exchange Protocol using the NRL Protocol Analyser\", Proceedings of the 1999 IEEE Symposium on Security & Privacy, Oakland, CA, USA, IEEE Computer Society, May 1999, <http://chacs.nrl.navy.mil/publications/CHACS/1999/ 1999meadows-IEEE99.pdf>.",
      "ja": "[M]メドウズ、C.、「インターネット鍵交換プロトコルの分析NRLプロトコルアナライザを使用して」、セキュリティとプライバシー、オークランド、CA、USA、IEEEコンピュータ学会、1999年5月に1999 IEEEシンポジウム、<のhttp： //chacs.nrl.navy.mil/publications/CHACS/1999/ 1999meadows-IEEE99.pdf>。"
    },
    {
      "indent": 3,
      "text": "[NS] R. Needham and M. Schroeder. \"Using encryption for authentication in large networks of computers\", Communications of the ACM, 21(12), December 1978.",
      "ja": "[NS] R.ニーダム及びM.シュローダー。 ACM、21（12）、1978年12月のコミュニケーション、「コンピュータの大規模ネットワークでの認証のための暗号化を使用します」。"
    },
    {
      "indent": 3,
      "text": "[RFC0927] Anderson, B.A., \"TACACS user identification Telnet option\", RFC 927, December 1984.",
      "ja": "[RFC0927]アンダーソン、B.A.、 \"TACACSユーザ識別Telnetオプション\"、RFC 927、1984年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC1334] Lloyd, B. and B. Simpson, \"PPP Authentication Protocols\", RFC 1334, October 1992, Obsoleted by RFC 1994.",
      "ja": "[RFC1334]ロイド、B.及びB.シンプソン、 \"PPP認証プロトコル\"、RFC 1334、1992年10月、RFC 1994で廃止されました。"
    },
    {
      "indent": 3,
      "text": "[RFC1492] Finseth, C., \"An Access Control Protocol, Sometimes Called TACACS\", RFC 1492, July 1993.",
      "ja": "[RFC1492] Finseth、C.、 \"時々TACACS呼び出さアンアクセス制御プロトコル\"、RFC 1492、1993年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC1661] Simpson, W., \"The Point-to-Point Protocol (PPP)\", STD 51, RFC 1661, July 1994.",
      "ja": "[RFC1661]シンプソン、W.、 \"ポイントツーポイントプロトコル（PPP）\"、STD 51、RFC 1661、1994年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC1968] Meyer, G., \"The PPP Encryption Protocol (ECP)\", RFC 1968, June 1996.",
      "ja": "[RFC1968]マイヤー、G.、 \"PPP暗号化プロトコル（ECP）\"、RFC 1968、1996年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC1994] Simpson, W., \"PPP Challenge Handshake Authentication Protocol (CHAP)\", RFC 1994, August 1996.",
      "ja": "[RFC1994]シンプソン、W.、 \"PPPチャレンジハンドシェイク認証プロトコル（CHAP）\"、RFC 1994、1996年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC2284] Blunk, L. and J. Vollbrecht, \"PPP Extensible Authentication Protocol (EAP)\", RFC 2284, March 1998.",
      "ja": "[RFC2284]ブルンク、L.及びJ. Vollbrecht、 \"PPP拡張認証プロトコル（EAP）\"、RFC 2284、1998年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC2409] Harkins, D. and D. Carrel, \"The Internet Key Exchange (IKE)\", RFC 2409, November 1998.",
      "ja": "[RFC2409]ハーキンとD.とD.カレル、 \"インターネットキー交換（IKE）\"、RFC 2409、1998年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC2419] Sklower, K. and G. Meyer, \"The PPP DES Encryption Protocol, Version 2 (DESE-bis)\", RFC 2419, September 1998.",
      "ja": "[RFC2419] Sklower、K.およびG.メイヤー、 \"PPP DES暗号化プロトコル、バージョン2（DESEビス）\"、RFC 2419、1998年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC2420] Hummert, K., \"The PPP Triple-DES Encryption Protocol (3DESE)\", RFC 2420, September 1998.",
      "ja": "[RFC2420] Hummert、K.、 \"PPPトリプルDES暗号化プロトコル（3DESE）\"、RFC 2420、1998年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC2433] Zorn, G. and S. Cobb, \"Microsoft PPP CHAP Extensions\", RFC 2433, October 1998.",
      "ja": "[RFC2433]ソーン、G.とS.コブ、 \"マイクロソフトPPP CHAP拡張機能\"、RFC 2433、1998年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC2548] Zorn, G., \"Microsoft Vendor-specific RADIUS Attributes\", RFC 2548, March 1999.",
      "ja": "[RFC2548]ソーン、G.、 \"マイクロソフトのベンダー固有のRADIUSアトリビュート\"、RFC 2548、1999年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC2637] Hamzeh, K., Pall, G., Verthein, W., Taarud, J., Little, W., and G. Zorn, \"Point-to-Point Tunneling Protocol (PPTP)\", RFC 2637, July 1999.",
      "ja": "[RFC2637] Hamzeh、K.、ポール、G.、Verthein、W.、Taarud、J.、リトル、W.、およびG.ゾルン、 \"ポイントツーポイントトンネリングプロトコル（PPTP）\"、RFC 2637、2011 1999。"
    },
    {
      "indent": 3,
      "text": "[RFC2716] Aboba, B. and D. Simon, \"PPP EAP TLS Authentication Protocol\", RFC 2716, October 1999.",
      "ja": "[RFC2716] Aboba、B.及びD.シモン、 \"PPP EAP TLS認証プロトコル\"、RFC 2716、1999年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC2759] Zorn, G., \"Microsoft PPP CHAP Extensions, Version 2\", RFC 2759, January 2000.",
      "ja": "[RFC2759]ソーン、G.、 \"マイクロソフトPPP CHAP拡張、Version 2\"、RFC 2759、2000年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC2865] Rigney, C., Willens, S., Rubens, A., and W. Simpson, \"Remote Authentication Dial In User Service (RADIUS)\", RFC 2865, June 2000.",
      "ja": "[RFC2865] Rigney、C.、ウィレンス、S.、ルーベン、A.、およびW.シンプソン、RFC 2865、2000年6月 \"ユーザーサービス（RADIUS）でリモート認証ダイヤル\"。"
    },
    {
      "indent": 3,
      "text": "[RFC2881] Mitton, D. and M. Beadles, \"Network Access Server Requirements Next Generation (NASREQNG) NAS Model\", RFC 2881, July 2000.",
      "ja": "[RFC2881]ミトン、D.とM. Beadles、 \"ネットワークアクセスサーバー要件次世代（NASREQNG）NASモデル\"、RFC 2881、2000年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC3078] Pall, G. and G. Zorn, \"Microsoft Point-To-Point Encryption (MPPE) Protocol\", RFC 3078, March 2001.",
      "ja": "[RFC3078]ポール、G.とG.ツォルン、 \"マイクロソフトポイントツーポイント暗号化（MPPE）プロトコル\"、RFC 3078、2001年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC3079] Zorn, G., \"Deriving Keys for use with Microsoft Point-to-Point Encryption (MPPE)\", RFC 3079, March 2001.",
      "ja": "[RFC3079]ソーン、G.、RFC 3079、2001年3月 \"Microsoft Point-to-Point暗号化（MPPE）を使用するための鍵を導出\"。"
    },
    {
      "indent": 3,
      "text": "[RFC3579] Aboba, B. and P. Calhoun, \"RADIUS (Remote Authentication Dial In User Service) Support For Extensible Authentication Protocol (EAP)\", RFC 3579, September 2003.",
      "ja": "[RFC3579] Aboba、B.およびP.カルフーン、 \"RADIUS（ユーザサービスにおけるリモート認証ダイヤル）拡張認証プロトコル（EAP）のサポート\"、RFC 3579、2003年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC3588] Calhoun, P., Loughney, J., Guttman, E., Zorn, G., and J. Arkko, \"Diameter Base Protocol\", RFC 3588, September 2003.",
      "ja": "[RFC3588]カルフーン、P.、Loughney、J.、ガットマン、E.、ゾルン、G.、およびJ. Arkko、 \"直径ベースプロトコル\"、RFC 3588、2003年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC3748] Aboba, B., Blunk, L., Vollbrecht, J., Carlson, J., and H. Levkowetz, \"Extensible Authentication Protocol (EAP)\", RFC 3748, June 2004.",
      "ja": "[RFC3748] Aboba、B.、ブルンク、L.、Vollbrecht、J.、カールソン、J.、およびH. Levkowetz、 \"拡張認証プロトコル（EAP）\"、RFC 3748、2004年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC3766] Orman, H. and P. Hoffman, \"Determining Strength for Public Keys Used For Exchanging Symmetric Keys\", BCP 86, RFC 3766, April 2004.",
      "ja": "[RFC3766]オーマン、H.、およびP.ホフマン、BCP 86、RFC 3766、2004年4月 \"対称鍵を交換するのに使用される公開鍵のために強さを決定します\"。"
    },
    {
      "indent": 3,
      "text": "[RFC4017] Stanley, D., Walker, J., and B. Aboba, \"Extensible Authentication Protocol (EAP) Method Requirements for Wireless LANs\", RFC 4017, March 2005.",
      "ja": "[RFC4017]スタンレー、D.、ウォーカー、J.、およびB. Aboba、 \"無線LANのための拡張認証プロトコル（EAP）メソッド要件\"、RFC 4017、2005年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC4072] Eronen, P., Ed., Hiller, T., and G. Zorn, \"Diameter Extensible Authentication Protocol (EAP) Application\", RFC 4072, August 2005.",
      "ja": "[RFC4072] Eronen、P.編、ヒラー、T.、およびG.ゾルン、 \"直径拡張認証プロトコル（EAP）アプリケーション\"、RFC 4072、2005年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC4306] Kaufman, C., Ed., \"Internet Key Exchange (IKEv2) Protocol\", RFC 4306, December 2005.",
      "ja": "[RFC4306]カウフマン、C.、エド。、 \"インターネットキーエクスチェンジ（IKEv2の）プロトコル\"、RFC 4306、2005年12月。"
    },
    {
      "indent": 3,
      "text": "[SM1] Schneier, B. and Mudge, \"Cryptanalysis of Microsoft's Point-to-Point Tunneling Protocol\", Proceedings of the 5th ACM Conference on Communications and Computer Security, ACM Press, November 1998.",
      "ja": "[SM1]シュナイアー、B.とマッジ、「Microsoftのポイントツーポイントトンネリングプロトコルの解読」、通信に関する第5回ACM会議の議事録やコンピュータセキュリティ、ACMプレス、1998年11月。"
    },
    {
      "indent": 3,
      "text": "[SM2] Schneier, B. and Mudge, \"Cryptanalysis of Microsoft's PPTP Authentication Extensions (MS-CHAPv2)\", CQRE 99, Springer-Verlag, 1999, pp. 192-203.",
      "ja": "[SM2]シュナイアー、B.及びマッジ、 \"マイクロソフト社のPPTP認証拡張（MS-CHAPv2を）の解読\"、CQRE 99、シュプリンガー・フェアラーク、1999、頁192から203。"
    },
    {
      "indent": 3,
      "text": "[SP800-57] National Institute of Standards and Technology, \"Recommendation for Key Management\", Special Publication 800-57, May 2006.",
      "ja": "[SP800-57]米国国立標準技術研究所、「キー管理のための勧告」、特別な公表800-57、2006年5月。"
    },
    {
      "indent": 3,
      "text": "[W] Wu, T., \"A Real-World Analysis of Kerberos Password Security\", Proceedings of the 1999 ISOC Network and Distributed System Security Symposium, <http://www.isoc.org/isoc/conferences/ndss/99/ proceedings/papers/wu.pdf>.",
      "ja": "[W]呉、T.、「ケルベロスパスワードセキュリティの実世界の分析」、1999 ISOCネットワークと分散システムセキュリティシンポジウム、<http://www.isoc.org/isoc/conferences/ndss/99の議事録/手続き/論文/ wu.pdf>。"
    },
    {
      "indent": 0,
      "text": "Appendix: AAA Key Management History",
      "ja": "付録：AAAキー管理の歴史"
    },
    {
      "indent": 3,
      "text": "Protocols for Authentication, Authorization, and Accounting (AAA) were originally developed to support deployments of Network Access Servers (NASes). In the ARPAnet, the Terminal Access Controller (TAC) provided a means for \"dumb terminals\" to access the network, and the TACACS [RFC0927][RFC1492] AAA protocol was designed by BBN under contract to the Defense Data Network Program Management Office (DDN PMO) for this environment. [RFC1492] documents a later version of TACACS, not the original version that was widely deployed in ARPAnet and MILNET [DDNN39.2].",
      "ja": "認証、認可、アカウンティング（AAA）のためのプロトコルは、もともとネットワークアクセスサーバー（NASの）の展開をサポートするために開発されました。 ARPAnetのでは、ターミナルアクセスコントローラ（TAC）は、ネットワークにアクセスするための「ダム端末」のための手段を提供し、TACACS [RFC0927] [RFC1492] AAAプロトコルは、（防衛データネットワークプログラム管理事務所との契約に基づきBBNによって設計されましたこのような環境のためのDDN PMO）。 [RFC1492]はTACACSの以降のバージョンではなく、広くARPAnetのとMILNET [DDNN39.2]で展開されたオリジナル版を説明します。"
    },
    {
      "indent": 3,
      "text": "Later, additional AAA protocols were developed to support deployments of NASes providing access to the Internet via PPP [RFC1661]. In deployments supporting more than a modest number of users, it became impractical for each NAS to contain its own list of users and associated credentials. As a result, additional AAA protocols were developed, including RADIUS [RFC2865] and Diameter [RFC3588]. These protocols enabled a central AAA server to authenticate users requesting network access, as well as providing authorization and accounting.",
      "ja": "その後、追加のAAAプロトコルはPPP [RFC1661]を経由してインターネットへのアクセスを提供するのNASの展開をサポートするために開発されました。各NASはユーザーと関連する資格情報の独自のリストを格納するためのユーザーのささやかな数よりも多くをサポートする展開では、それは非現実的になりました。結果として、追加のAAAプロトコルはRADIUS [RFC2865]とDiameter [RFC3588]を含む、開発されました。これらのプロトコルは、ネットワークアクセスを要求するだけでなく、許可およびアカウンティングを提供し、ユーザーを認証するために中央のAAAサーバを使用可能に。"
    },
    {
      "indent": 3,
      "text": "While PPP [RFC1661] originally supported only PAP [RFC1334] and CHAP [RFC1661] authentication, the limitations of these authentication mechanisms became apparent. For example, both PAP and CHAP are unilateral authentication schemes supporting only authentication of the PPP peer to the NAS. Since PAP is a cleartext password scheme, it is vulnerable to snooping by an attacker with access to the conversation between the PPP peer and NAS. In addition, the use of PAP creates vulnerabilities within RADIUS as described in Section 4.3 of [RFC3579]. As a result, use of PAP is deprecated. While CHAP, a challenge-response scheme based on MD5, offers better security than cleartext passwords, it does not provide for mutual authentication, and CHAP is vulnerable to dictionary attack.",
      "ja": "PPP [RFC1661]は、もともとだけPAP [RFC1334]とCHAP [RFC1661]の認証をサポートしていましたが、これらの認証メカニズムの限界が明らかになりました。例えば、PAPおよびCHAPの両方がNASへのPPPピアの認証のみをサポートしている片側認証方式です。 PAPは平文パスワード方式があるので、それはPPPピアとNAS間の会話へのアクセス権を持つ攻撃者によってスヌーピングに対して脆弱です。 [RFC3579]のセクション4.3に記載されるように加えて、PAPの使用は、半径内の脆弱性を作成します。その結果、PAPの使用が推奨されていません。 CHAP、MD5に基づくチャレンジ・レスポンス方式では、平文のパスワードよりも優れたセキュリティを提供していますが、それは相互認証のために提供していない、とCHAPは辞書攻撃に対して脆弱です。"
    },
    {
      "indent": 3,
      "text": "With the addition of the Encryption Control Protocol (ECP) to PPP [RFC1968] as well as the definition of PPP ciphersuites in [RFC2419], [RFC2420], and [RFC3078], the need arose to provide keying material for use with link layer ciphersuites. As with user authentication, provisioning of static keys on each NAS did not scale well.",
      "ja": "PPP [RFC1968]と同様に[RFC2419]でPPPの暗号スイートの定義は、[RFC2420]及び[RFC3078]に暗号化制御プロトコル（ECP）を加えて、必要性がリンク層で使用するためのキーイング材料を提供することで生じました暗号スイート。ユーザー認証と同様に、各NAS上の静的なキーのプロビジョニングはうまくスケールしませんでした。"
    },
    {
      "indent": 3,
      "text": "Additional vendor-specific PPP authentication protocols such as MS-CHAP [RFC2433] and MS-CHAPv2 [RFC2759] were developed to provide mutual authentication as well as key derivation [RFC3079] for use with negotiated ciphersuites, and they were subsequently adapted for use with PPP-based VPNs [RFC2637]. As with PAP and CHAP, flaws were subsequently found in these new mechanisms [SM1][SM2].",
      "ja": "そのようなMS-CHAP [RFC2433]及びMS-CHAPv2を[RFC2759]などの追加のベンダー固有のPPP認証プロトコルがネゴシエートされた暗号スイートで使用するための相互認証、並びに鍵導出[RFC3079]を提供するために開発され、それらはその後で使用するために適合させましたPPPベースのVPN [RFC2637]。 PAPおよびCHAPのように、欠陥は、その後、これらの新しいメカニズム[SM1] [SM2]で発見されました。"
    },
    {
      "indent": 3,
      "text": "Even though PPP provided for negotiation of authentication algorithms, addressing the vulnerabilities found in authentication mechanisms still proved painful, since new code needed to be deployed on PPP peers as well as on the AAA server. In order to enable more rapid deployment of new authentication mechanisms, as well as fixes for vulnerabilities found in existing methods, the Extensible Authentication Protocol (EAP) [RFC3748] was developed, along with support for centralized authentication via RADIUS/EAP [RFC3579].",
      "ja": "PPPは、認証アルゴリズムの交渉のために提供にもかかわらず、新しいコードはPPPピアでだけでなく、AAAサーバ上に展開する必要があるため、認証メカニズムで見つかった脆弱性に対処することは、まだ、痛みを伴う証明しました。より迅速な新しい認証メカニズムの展開、ならびに既存の方法に見られる脆弱性に対する修正を可能にするために、拡張認証プロトコル（EAP）[RFC3748]はRADIUS / EAP [RFC3579]を介して集中認証のサポートと共に、開発されました。"
    },
    {
      "indent": 3,
      "text": "By enabling \"pass through\" authentication on the NAS, EAP enabled deployment of new authentication methods or updates to existing methods by revising code only on the EAP peer and AAA server. The initial authentication mechanisms defined in [RFC2284] (MD5- Challenge, One-Time Password (OTP), and Generic Token Card (GTC)) only supported unilateral authentication, and these mechanisms do not support key derivation. Subsequent authentication methods such as EAP-TLS [RFC2716] supported mutual authentication and key derivation.",
      "ja": "NASでの認証「通過」有効にすることで、EAPは、EAPピアとAAAサーバ上でコードを修正することにより、既存の方法に新しい認証方法または更新プログラムの展開を可能にしました。 [RFC2284]（MD5-チャレンジ、ワンタイムパスワード（OTP）、および一般的なトークンカード（GTC））で定義された最初の認証メカニズムは一方的な認証をサポートし、これらのメカニズムは、鍵の導出をサポートしていません。そのようなEAP-TLS [RFC2716]として後続の認証方法は、相互認証および鍵導出を支持しました。"
    },
    {
      "indent": 3,
      "text": "In order to support the provisioning of dynamic keying material for link layer ciphersuites in an environment supporting centralized authentication, a mechanism was needed for the transport of keying material between the AAA server and NAS. Vendor-specific RADIUS attributes were developed for this purpose [RFC2548]. Vulnerabilities were subsequently found in the key wrap technique, as described in Section 4.3 of [RFC3579].",
      "ja": "集中認証をサポートする環境におけるリンク層暗号化方式のための動的鍵材料のプロビジョニングをサポートするために、機構は、AAAサーバとNASの間で鍵材料の輸送のために必要でした。ベンダー固有のRADIUS属性は、この目的の[RFC2548]のために開発されました。 [RFC3579]のセクション4.3で説明したように脆弱性は、その後、キーラップ技術で発見されました。"
    },
    {
      "indent": 3,
      "text": "In theory, public key authentication mechanisms such as EAP-TLS are capable of supporting mutual authentication and key derivation between the EAP peer and NAS without requiring AAA key distribution. However, in practice, such pure two-party schemes are rarely deployed. Operation of a centralized AAA server significantly reduces the effort required to deploy certificates to NASes, and even though an AAA server may not be required for key derivation and possibly authentication, its participation is required for service authorization and accounting.",
      "ja": "理論的には、そのようなEAP-TLSなどの公開鍵認証メカニズムは、AAAキーの配布を必要とすることなく、EAPピアとNASとの間の相互認証および鍵導出をサポートすることが可能です。しかし、実際には、純粋な二大政党制度はほとんど導入されていません。集中型のAAAサーバの動作はかなりのNASへの証明書を展開するために必要な労力を削減し、AAAサーバが鍵導出し、おそらく認証のために必要とされていなくても、その参加は、サービスの許可およびアカウンティングのために必要とされます。"
    },
    {
      "indent": 3,
      "text": "\"Pass-through\" authentication and AAA key distribution has retained popularity even in the face of rapid improvements in processor and memory capabilities. In addition to producing NAS devices of increased capability for enterprise and carrier customers, implementers have also produced low-cost/high-volume NAS devices such as 802.11 Access Points, causing the resources available on an average NAS to increase more slowly than Moore's law. Despite widespread support for certificate handling and sophisticated key derivation mechanisms such as IKEv1 [RFC2409] within host operating systems, these security capabilities are rarely deployed on low-end NASes and clients.",
      "ja": "「パススルー」の認証およびAAAキーの配布でも、プロセッサとメモリの能力の急速な改善の顔で人気を保持しています。企業およびキャリアの顧客のために増加した性能のNASデバイスを生産することに加えて、実装者はまた、ムーアの法則よりもゆっくりと増加し、平均NAS上で利用可能なリソースを引き起こし、802.11アクセスポイントなどの低コスト/大容量のNASデバイスを生産しています。証明書の処理とホスト・オペレーティング・システム内のこのようなIKEv1の[RFC2409]などの高度な鍵導出メカニズムの幅広い支持にもかかわらず、これらのセキュリティ機能はほとんどローエンドのNASおよびクライアント上に展開されていません。"
    },
    {
      "indent": 3,
      "text": "Even on more capable NASes, such as VPN servers, centralized authentication and AAA key management has proven popular. For example, one of the major limitations of IKEv1 [RFC2409] was the lack of integration with EAP and AAA, requiring proprietary extensions to enable use of IPsec VPNs by organizations deploying password or authentication tokens. These limitations were addressed in IKEv2 [RFC4306], which while handling key derivation solely between the VPN client and server, supports EAP methods for user authentication. In order to enable cryptographic binding of EAP user authentication to keys derived within the IKEv2 exchange, the transport of EAP-derived keys within AAA is required where the selected EAP method supports key derivation.",
      "ja": "でも、このようなVPNサーバ、集中認証およびAAAキーの管理など、より能力のNAS、上が人気であることが証明されました。例えば、IKEv1の[RFC2409]の主な制限の一つは、パスワードや認証トークンを導入する組織によるIPsecのVPNの使用を可能にするために独自の拡張機能を必要とするEAPとAAAとの統合の欠如がありました。これらの制限は、単にVPNクライアントとサーバーの間で鍵導出の処理中のIKEv2 [RFC4306]で対処された、ユーザ認証のためのEAP方式をサポートしています。選択されたEAPメソッドがキー導出をサポートしている場合のIKEv2交換内で誘導されるキーにEAPユーザー認証の暗号の結合を可能にするために、AAA内のEAP-導出鍵の輸送が必要です。"
    },
    {
      "indent": 0,
      "text": "Acknowledgments",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Many thanks to James Kempf, Sam Hartman, and Joe Salowey for their quality review and encouragement.",
      "ja": "その品質の見直しや励ましのためのジェームズ・ケンプ、サム・ハートマン、そしてジョーSaloweyに感謝します。"
    },
    {
      "indent": 3,
      "text": "Thanks to the IETF AAA Working Group and the IETF EAP Working Group for their review and comment. The document is greatly improved by their contribution.",
      "ja": "彼らのレビューとコメントのためのIETF AAAワーキンググループとIETF EAPワーキンググループに感謝します。文書が大幅に貢献することによって改善されます。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Russell Housley Vigil Security, LLC 918 Spring Knoll Drive Herndon, VA 20170 USA EMail: housley@vigilsec.com Phone: +1 703-435-1775 Fax: +1 703-435-1274",
      "ja": "ラッセルHousley氏ビジルセキュリティ、LLC 918春小山Driveハーンドン、VA 20170 USA Eメール：housley@vigilsec.com電話：+1 703-435-1775ファックス：+1 703-435-1274"
    },
    {
      "indent": 3,
      "text": "Bernard Aboba Microsoft Corporation One Microsoft Way Redmond, WA 98052 USA EMail: bernarda@microsoft.com Phone: +1 425-706-6605 Fax: +1 425-936-7329",
      "ja": "バーナードAbobaマイクロソフト社1つのマイクロソフト道、レドモンド、WA 98052 USA電子メール：bernarda@microsoft.com電話：+1 425-706-6605ファックス：+1 425-936-7329"
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The IETF Trust (2007).",
      "ja": "著作権（C）IETFトラスト（2007）。"
    },
    {
      "indent": 3,
      "text": "This document is subject to the rights, licenses and restrictions contained in BCP 78, and except as set forth therein, the authors retain all their rights.",
      "ja": "この文書では、BCP 78に含まれる権利と許可と制限の適用を受けており、その中の記載を除いて、作者は彼らのすべての権利を保有します。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein are provided on an \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書とここに含まれている情報は、基礎とCONTRIBUTOR「そのまま」、ORGANIZATION HE / SHEが表すまたはインターネットSOCIETY、（もしあれば）を後援し、IETF TRUST ANDインターネットエンジニアリングタスクフォース放棄ALLに設けられています。保証は、明示または黙示、この情報の利用および特定目的に対する権利または商品性または適合性の黙示の保証を侵害しない任意の保証がこれらに限定されません。"
    },
    {
      "indent": 0,
      "text": "Intellectual Property",
      "ja": "知的財産"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any Intellectual Property Rights or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; nor does it represent that it has made any independent effort to identify any such rights. Information on the procedures with respect to rights in RFC documents can be found in BCP 78 and BCP 79.",
      "ja": "IETFは、本書またはそのような権限下で、ライセンスがたりないかもしれない程度に記載された技術の実装や使用に関係すると主張される可能性があります任意の知的財産権やその他の権利の有効性または範囲に関していかなる位置を取りません利用可能です。またそれは、それがどのような権利を確認する独自の取り組みを行ったことを示すものでもありません。 RFC文書の権利に関する手続きの情報は、BCP 78およびBCP 79に記載されています。"
    },
    {
      "indent": 3,
      "text": "Copies of IPR disclosures made to the IETF Secretariat and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the IETF on-line IPR repository at http://www.ietf.org/ipr.",
      "ja": "IPRの開示のコピーが利用できるようにIETF事務局とライセンスの保証に行われた、または本仕様の実装者または利用者がそのような所有権の使用のための一般的なライセンスまたは許可を取得するために作られた試みの結果を得ることができますhttp://www.ietf.org/iprのIETFのオンラインIPRリポジトリから。"
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights that may cover technology that may be required to implement this standard. Please address the information to the IETF at ietf-ipr@ietf.org.",
      "ja": "IETFは、その注意にこの標準を実装するために必要とされる技術をカバーすることができる任意の著作権、特許または特許出願、またはその他の所有権を持ってすべての利害関係者を招待します。 ietf-ipr@ietf.orgのIETFに情報を記述してください。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "ja": "RFC Editor機能のための基金は現在、インターネット協会によって提供されます。"
    }
  ]
}