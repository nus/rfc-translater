{
  "title": {
    "text": "RFC 4777 - IBM's iSeries Telnet Enhancements",
    "ja": "RFC 4777 - IBMのiSeriesのTelnetの機能強化"
  },
  "number": 4777,
  "created_at": "2019-10-26 08:56:50.305922+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                     T. Murphy, Jr.\nRequest for Comments: 4777                                      P. Rieth\nObsoletes: 2877                                               J. Stevens\nCategory: Informational                                              IBM\n                                                           November 2006",
      "raw": true
    },
    {
      "indent": 19,
      "text": "IBM's iSeries Telnet Enhancements",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This memo provides information for the Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited.",
      "ja": "このメモはインターネットコミュニティのための情報を提供します。それはどんな種類のインターネット標準を指定しません。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The IETF Trust (2006).",
      "ja": "著作権（C）IETFトラスト（2006）。"
    },
    {
      "indent": 0,
      "text": "IESG Note",
      "ja": "IESG注意"
    },
    {
      "indent": 3,
      "text": "This RFC is not a candidate for any level of Internet Standard. The IETF disclaims any knowledge of the fitness of this RFC for any purpose and in particular notes that the decision to publish is not based on IETF review for such things as security, congestion control, or inappropriate interaction with deployed protocols. The RFC Editor has chosen to publish this document at its discretion. Readers of this document should exercise caution in evaluating its value for implementation and deployment. See RFC 3932 for more information.",
      "ja": "このRFCはインターネットStandardのどんなレベルの候補ではありません。 IETFは、いかなる目的のためにと、公開する決定が展開されたプロトコルとセキュリティ、輻輳制御、または不適切な相互作用のようなもののためにIETFレビューに基づいていない特定のノートに、このRFCのフィットネスの知識を負いません。 RFC Editorはその裁量でこの文書を公開することを選択しました。このドキュメントの読者は実現と展開のためにその値を評価する際に警戒する必要があります。詳細については、RFC 3932を参照してください。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document describes the interface to the Telnet server on IBM's iSeries line of midrange business computers. This interface allows Telnet clients to request a Telnet terminal or printer session using specific session attributes related to device names, encryption, language support, auto-sign-on, response codes, session association, etc.",
      "ja": "この文書では、ミッドレンジビジネスコンピュータのIBMのiSeriesのライン上のTelnetサーバへのインタフェースを記述します。このインタフェースは、Telnetクライアントは、デバイス名、暗号化、言語のサポート、自動サインオン、応答コード、セッションの関連付け、等に関連する特定のセッション属性を使用してTelnet端末またはプリンタセッションを要求することを可能にします"
    },
    {
      "indent": 3,
      "text": "These support functions are implemented primarily using the Telnet Environment option negotiation RFC 1572 to define new USERVAR variables that will be recognized by iSeries Telnet server.",
      "ja": "これらの支援機能は、主のiSeries Telnetサーバによって認識される新しいUSERVAR変数を定義するためのTelnet環境オプション交渉RFC 1572を使用して実装されています。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................2\n2. Standard Telnet Option Negotiation ..............................3\n3. Enhanced Telnet Option Negotiation ..............................4\n4. Enhanced Display Emulation Support ..............................7\n5. Enhanced Display Auto-Sign-On and Password Encryption ...........9\n   5.1. Data Encryption Standard (DES) Password Substitutes .......13\n   5.2. Secure Hash Algorithm (SHA) Password Substitutes ..........16\n6. Kerberos Services Ticket Automatic Sign-On Support .............18\n7. Device Name Collision Processing ...............................21\n8. Enhanced Printer Emulation Support .............................22\n9. Telnet Printer Terminal Types ..................................23\n10. Startup Response Record for Printer and Display Devices .......25\n   10.1. Example of a Success Response Record .....................26\n   10.2. Example of an Error Response Record ......................27\n   10.3. Example of a Response Record with Device Name Retry ......28\n   10.4. Response Codes ...........................................31\n11. Printer Steady-State Pass-Through Interface ...................33\n   11.1. Example of a Print Record ................................35\n   11.2. Example of a Print Complete Record .......................37\n   11.3. Example of a Null Print Record ...........................37\n12. End-to-End Print Example ......................................39\n13. Security Considerations .......................................44\n14. IANA Considerations ...........................................44\n15. Normative References ..........................................44\n16. Informative References ........................................44\n17. Relation to Other RFCs ........................................45",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "The iSeries Telnet server enables clients to negotiate both terminal and printer device names through Telnet Environment Options Negotiations [RFC1572].",
      "ja": "iSeriesのTelnetサーバは、Telnet環境オプション交渉[RFC1572]を介して端末とプリンタデバイス名の両方を交渉するためにクライアントを可能にします。"
    },
    {
      "indent": 3,
      "text": "This allows Telnet servers and clients to exchange environment information using a set of standard or custom variables. By using a combination of both standard VARs and custom USERVARs, the iSeries Telnet server allows client Telnet to request a pre-defined specific device by name.",
      "ja": "これは、Telnetサーバーとクライアントは、標準またはカスタム変数のセットを使用して、環境情報を交換することができます。標準のVAR（付加価値再販業者）とカスタムのUserVars両方の組み合わせを使用することにより、iSeriesのTelnetサーバーはクライアントTelnetは名前によって事前に定義された特定のデバイスを要求することができます。"
    },
    {
      "indent": 3,
      "text": "If no pre-defined device exists, then the device will be created, with client Telnet having the option to negotiate device attributes, such as the code page, character set, keyboard type, etc.",
      "ja": "何の事前定義されたデバイスが存在しない場合は、デバイスは、クライアントのTelnetは、などのコードページ、文字セット、キーボードの種類、として、デバイス属性を交渉するためのオプションを持って、作成されます。"
    },
    {
      "indent": 3,
      "text": "Since printers can now be negotiated as a device name, new terminal types have been defined to request printers. For example, you can now negotiate \"IBM-3812-1\" and \"IBM-5553-B01\" as valid TERMINAL-TYPE options [RFC1091].",
      "ja": "プリンタは、デバイス名として交渉することができるので、新しい端末タイプは、プリンタを要求するように定義されています。たとえば、あなたが今、有効なTERMINAL-TYPEオプション[RFC1091]として \"IBM-3812から1\" および \"IBM-5553-B01\" を交渉することができます。"
    },
    {
      "indent": 3,
      "text": "Finally, the iSeries Telnet server will allow exchange of user profile and password information, where the password may be in either plain text or encrypted form. If a valid combination of profile and password is received, then the client is allowed to bypass the sign-on panel. The local server setting of the QRMTSIGN system value must be either *VERIFY or *SAMEPRF for the bypass of the sign-on panel to succeed.",
      "ja": "最後に、iSeriesのTelnetサーバーはパスワードがプレーンテキストまたは暗号化された形式のいずれかであることができるユーザー・プロファイルとパスワード情報の交換ができるようになります。プロファイルとパスワードの有効な組み合わせを受信した場合、クライアントはサインオン・パネルをバイパスすることが許可されています。 QRMTSIGNシステム値のローカルサーバの設定はどちらか*成功するためにサインオン・パネルのバイパスのための* SAMEPRFを確認するかでなければなりません。"
    },
    {
      "indent": 0,
      "text": "2. Standard Telnet Option Negotiation",
      "section_title": true,
      "ja": "2.標準のTelnetオプションのネゴシエーション"
    },
    {
      "indent": 3,
      "text": "Telnet server option negotiation [RFC855] typically begins with the issuance, by the server, of an invitation to engage in terminal type negotiation with the Telnet client (DO TERMINAL-TYPE) [RFC1091]. The client and server then enter into a series of sub-negotiations to determine the level of terminal support that will be used. After the terminal type is agreed upon, the client and server will normally negotiate a required set of additional options (EOR [RFC885], BINARY [RFC856], SGA [RFC858]) that are required to support \"transparent mode\" or full screen 5250/3270 block mode support. As soon as the required options have been negotiated, the server will suspend further negotiations and begin with initializing the actual virtual device on the iSeries. A typical exchange might start as follows:",
      "ja": "Telnetサーバオプションネゴシエーションは[RFC855]典型的には、Telnetクライアント（DO TERMINAL-TYPE）[RFC1091]と端末タイプのネゴシエーションに関与する招待を、サーバによって発行することから始まります。クライアントとサーバは、使用されるターミナルサポートのレベルを決定するために、サブ交渉のシリーズに入力します。端末タイプが合意された後、クライアントとサーバーは、通常、「透過モード」またはフルスクリーン5250をサポートするために必要な追加オプション（EOR [RFC885]、BINARY [RFC856]、SGA [RFC858]）の必要なセットを交渉します/ 3270ブロックモードをサポート。すぐに必要なオプションが交渉されているように、サーバは、さらに交渉を中断し、iSeries上で実際の仮想デバイスを初期化することで始まります。次のように典型的な交換が開始する可能性があります："
    },
    {
      "indent": 3,
      "text": "iSeries Telnet server             Enhanced Telnet client\n--------------------------        -------------------------\nIAC DO TERMINAL-TYPE        -->\n                            <--   IAC WILL TERMINAL-TYPE\nIAC SB TERMINAL-TYPE SEND\nIAC SE                      -->\n                                  IAC SB TERMINAL-TYPE IS\n                            <--   IBM-5555-C01 IAC SE\nIAC DO EOR                  -->\n                            <--   IAC WILL EOR\n                            <--   IAC DO EOR\nIAC WILL EOR                -->\n                             .\n                             .\n(other negotiations)         .",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Actual bytes transmitted in the above example are shown in hex below.",
      "ja": "上記の例で送信実際のバイトは以下ヘクスに示されています。"
    },
    {
      "indent": 3,
      "text": "iSeries Telnet server             Enhanced Telnet client\n--------------------------        -------------------------\nFF FD 18                    -->\n                            <--   FF FB 18\nFF FA 18 01 FF F0           -->\n                                  FF FA 18 00 49 42 4D 2D\n                                  35 35 35 35 2D 43 30 31\n                            <--   FF F0\nFF FD 19                    -->\n                            <--   FF FB 19\n                            <--   FF FD 19\nFF FB 19                    -->\n                             .\n                             .\n(other negotiations)         .",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Some negotiations are symmetrical between client and server, and some are negotiated in one direction only. Also, it is permissible and common practice to bundle more than one response or request, or to combine a request with a response, so in practice the actual exchange may look different from what is shown above.",
      "ja": "いくつかの交渉は、クライアントとサーバの間で対称であり、そしていくつかは、一方向のみに交渉されます。また、複数の応答やリクエストをバンドルする、または応答して、要求を組み合わせることが許さと一般的に行われているので、実際には、実際の交換は、上記に示したものと異なって見える場合があります。"
    },
    {
      "indent": 0,
      "text": "3. Enhanced Telnet Option Negotiation",
      "section_title": true,
      "ja": "3.強化されたTelnetオプション交渉"
    },
    {
      "indent": 3,
      "text": "In order to accommodate the new environment option negotiations, the server will bundle an environment option invitation along with the standard terminal type invitation request to the client.",
      "ja": "新しい環境オプション交渉に対応するために、サーバーはクライアントへの標準端末タイプの招待要求とともに、環境オプションの招待状をバンドルします。"
    },
    {
      "indent": 3,
      "text": "A client should either send a negative acknowledgment (WONT NEW-\nENVIRON), or at some point after completing terminal-type\nnegotiations, but before completing the full set of negotiations\nrequired for 5250 transparent mode, engage in environment option\nsub-negotiation with the server.  A maximum of 1024 bytes of\nenvironment strings may be sent to the server.  A recommended\nsequence might look like the following: iSeries Telnet server             Enhanced Telnet client\n--------------------------        -------------------------\nIAC DO NEW-ENVIRON\nIAC DO TERMINAL-TYPE        -->\n(2 requests bundled)\n                            <--   IAC WILL NEW-ENVIRON\nIAC SB NEW-ENVIRON SEND\nVAR IAC SE                  -->\n                                  IAC SB NEW-ENVIRON IS\n                                  VAR \"USER\" VALUE \"JONES\"\n                                  USERVAR \"DEVNAME\"\n                                  VALUE \"MYDEVICE07\"\n                            <--   IAC SE\n                            <--   IAC WILL TERMINAL-TYPE\n                                  (do the terminal type\n                                  sequence first)\nIAC SB TERMINAL-TYPE SEND\nIAC SE                      -->\n                                  IAC SB TERMINAL-TYPE IS\n                            <--   IBM-5555-C01 IAC SE\n                                  (terminal type negotiations\n                                  completed)\nIAC DO EOR                  -->\n(server will continue\nwith normal transparent\nmode negotiations)\n                            <--   IAC WILL EOR\n                             .\n                             .\n(other negotiations)         .",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Actual bytes transmitted in the above example are shown in hex below.",
      "ja": "上記の例で送信実際のバイトは以下ヘクスに示されています。"
    },
    {
      "indent": 3,
      "text": "iSeries Telnet server             Enhanced Telnet client\n--------------------------        -------------------------\nFF FD 27\nFF FD 18                    -->\n(2 requests bundled)\n                            <--   FF FB 27\nFF FA 27 01 00 FF F0        -->\n                                  FF FA 27 00 00 55 53 45\n                                  52 01 4A 4F 4E 45 53 03\n                                  44 45 56 4E 41 4D 45 01\n                                  4D 59 44 45 56 49 43 45\n                            <--   30 37 FF F0\n                            <--   FF FB 18\n                                  (do the terminal type\n                                  sequence first)\nFF FA 18 01 FF F0           -->\n                                  FF FA 18 00 49 42 4D 2D\n                                  35 35 35 35 2D 43 30 31\n                            <--   FF F0\nFF FD 19                    -->\n(server will continue\nwith normal transparent\nmode negotiations)\n                            <--   FF FB 19\n                             .\n                             .\n(other negotiations)         .",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Telnet environment options defines 6 standard VARs: USER, JOB, ACCT, PRINTER, SYSTEMTYPE, and DISPLAY. The USER standard VAR will hold the value of the iSeries user profile name to be used in auto-sign-on requests. The Telnet server will make no direct use of the additional 5 VARs, nor are any of them required to be sent. All standard VARs and their values that are received by the Telnet server will be placed in a buffer, along with any USERVARs received (described below), and made available to a registered initialization exit program to be used for any purpose desired.",
      "ja": "USER、JOB、ACCT、PRINTER、SYSTEMTYPE、およびDISPLAY：Telnetの環境のオプションは6つの標準のVARを定義します。 USER標準のVARは、自動サインオンの要求に使用するのiSeriesユーザー・プロファイル名の値を保持します。 Telnetサーバーは、追加の5つのVAR（付加価値再販業者）のない直接使用することなくなり、また、それらのいずれかを送信することが要求されています。 Telnetサーバによって受信されるすべての標準のVAR、その値は、任意のUserVarsと共に、バッファに配置されます（後述）を受信し、所望の任意の目的のために使用される登録された初期化出口プログラムに利用可能になります。"
    },
    {
      "indent": 3,
      "text": "There are some reasons you may want to send NEW-ENVIRON negotiations prior to TERMINAL-TYPE negotiations. With an iSeries Telnet server, several virtual device modes can be negotiated: 1) VTxxx device, 2) 3270 device, and 3) 5250 device (includes Network Station). The virtual device mode selected depends on the TERMINAL-TYPE negotiated plus any other Telnet option negotiations necessary to support those modes. The iSeries Telnet server will create the desired virtual device at the first opportunity it thinks it has all the requested attributes needed to create the device. This can be as early as completion of the TERMINAL-TYPE negotiations.",
      "ja": "あなたはTERMINAL-TYPE交渉の前にNEW-ENVIRON交渉を送りたいかもしれないいくつかの理由があります。 iSeriesのTelnetサーバと、複数の仮想デバイス・モードがネゴシエートすることができる：1）VTxxxの装置、2）3270装置、及び3）5250装置（ネットワークステーションを含みます）。選択した仮想デバイスモードが交渉さTERMINAL-TYPEプラスこれらのモードをサポートするために必要な他のTelnetオプション交渉に依存します。 iSeries Telnetサーバーは、それがデバイスを作成するために必要なすべての要求された属性を持っていると考えて最初の機会で目的の仮想デバイスを作成します。これは、早けれTERMINAL-TYPE交渉の完了などすることができます。"
    },
    {
      "indent": 3,
      "text": "For the case of Transparent mode (5250 device), the moment TERMINAL-TYPE, BINARY, and EOR options are negotiated, the Telnet server will go create the virtual device. Receiving any NEW-ENVIRON negotiations after these option negotiations are complete will result in the NEW-ENVIRON negotiations having no effect on device attributes, as the virtual device will have already been created.",
      "ja": "透過モード（5250デバイス）の場合、瞬間TERMINAL-TYPEの場合、BINARY、およびEORオプションで交渉され、Telnetサーバーは仮想デバイスを作成して行くでしょう。これらのオプションの交渉が完了した後、任意のNEW-ENVIRON交渉を受信すると、仮想デバイスが既に作成されているように、デバイス属性に影響を与えないNEW-ENVIRON交渉になります。"
    },
    {
      "indent": 3,
      "text": "So, for Transparent mode, NEW-ENVIRON negotiations are effectively closed once EOR is negotiated, since EOR is generally the last option done.",
      "ja": "だから、透過モードのために、NEW-ENVIRON交渉を効果的にEORが一般的に行われた最後のオプションであるため、EORは、ネゴシエートされ、一度閉じています。"
    },
    {
      "indent": 3,
      "text": "For other devices modes (such as VTxxx or 3270), you cannot be sure when the iSeries Telnet server thinks it has all the attributes to create the device. Recall that NEW-ENVIRON negotiations are optional, and therefore the iSeries Telnet server need not wait for any NEW-ENVIRON options prior to creating the virtual device. It is in the clients' best interest to send NEW-ENVIRON negotiations as soon as possible, preferably before TERMINAL-TYPE is negotiated. That way, the client can be sure that the requested attributes were received before the virtual device is created.",
      "ja": "iSeriesのTelnetサーバは、それがデバイスを作成するために、すべての属性を持っていると思ったときに（例えばVTxxxのや3270など）他のデバイスモードについて、あなたは確認することはできません。 NEW-ENVIRON交渉はオプションであることを思い出して、そのためのiSeries Telnetサーバーは仮想デバイスを作成する前に任意のNEW-ENVIRONオプションを待つ必要はありません。これは、TERMINAL-TYPEが交渉され、好ましくは、前に、できるだけ早くNEW-ENVIRON交渉を送信するためにクライアントの最善の利益です。こうすることで、クライアントは、仮想デバイスが作成される前に、要求された属性が受信されたことを確認することができます。"
    },
    {
      "indent": 0,
      "text": "4. Enhanced Display Emulation Support",
      "section_title": true,
      "ja": "4.強化されたディスプレイ・エミュレーションのサポート"
    },
    {
      "indent": 3,
      "text": "Telnet environment option USERVARs have been defined to allow a compliant Telnet client more control over the Telnet server virtual device on the iSeries and to provide information to the Telnet server about the client. These USERVARs allow the client Telnet to create or select a previously created virtual device. If the virtual device does not exist and must be created, then the USERVAR variables are used to create and initialize the device attributes. If the virtual device already exists, the device attributes are modified.",
      "ja": "Telnetの環境オプションのUserVarsは、iSeries上のTelnetサーバ仮想デバイスオーバー対応のTelnetクライアントより多くの制御を可能にし、クライアントに関するTelnetサーバーに情報を提供するために定義されています。これらのUserVarsは、クライアントTelnetが作成したり、以前に作成した仮想デバイスを選択することができます。仮想デバイスが存在しないと作成されなければならない場合には、USERVAR変数は、デバイス属性を作成し、初期化するために使用されています。仮想デバイスがすでに存在する場合、デバイスの属性が変更されます。"
    },
    {
      "indent": 3,
      "text": "The USERVARs defined to accomplish this are:",
      "ja": "これを達成するために定義されたのUserVarsは以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "USERVAR        VALUE              EXAMPLE         DESCRIPTION\n--------       ----------------   --------------  -------------------\nDEVNAME        us-ascii char(x)   MYDEVICE07      Display device name\nKBDTYPE        us-ascii char(3)   USB             Keyboard type\nCODEPAGE       us-ascii char(y)   437             Code page\nCHARSET        us-ascii char(y)   1212            Character set\nIBMSENDCONFREC us-ascii char(3)   YES | NO        Startup Response\n                                                    Record desired\nIBMASSOCPRT    us_ascii char(x)   RFCPRT          Printer associated\n                                                    with display\n                                                    device",
      "raw": true
    },
    {
      "indent": 3,
      "text": "x - up to a maximum of 10 characters y - up to a maximum of 5 characters",
      "ja": "5つの文字の最大まで -  X  -  10文字Yの最大値まで"
    },
    {
      "indent": 3,
      "text": "For a description of the KBDTYPE, CODEPAGE, and CHARSET parameters and their permissible values, refer to Chapter 8 in the Communications Configuration Reference [COMM-CONFIG] and also to Appendix C in National Language Support [NLS-SUPPORT].",
      "ja": "KBDTYPE、CODEPAGE、CHARSETおよびパラメータとその許容値については、各国語サポート[NLS-SUPPORT]の付録Cにも通信構成リファレンス[COMM-CONFIG]第8章を参照してくださいと。"
    },
    {
      "indent": 3,
      "text": "The CODEPAGE and CHARSET USERVARs must be associated with a KBDTYPE USERVAR. If either CODEPAGE or CHARSET are sent without KBDTYPE, they will default to system values. A default value for KBDTYPE can be sent to force CODEPAGE and CHARSET values to be used.",
      "ja": "CODEPAGEとCHARSETのUserVarsはKBDTYPE USERVARに関連付けられている必要があります。 CODEPAGEまたはCHARSETのいずれかがKBDTYPEなしで送信されている場合は、システム値がデフォルトになります。 KBDTYPEのデフォルト値を使用するCODEPAGEとCHARSETの値を強制的に送ることができます。"
    },
    {
      "indent": 3,
      "text": "iSeries system objects such as device names, user profiles, plain text passwords, programs, libraries, etc., are required to be specified in English uppercase. This includes:",
      "ja": "iSeriesシステムは、デバイス名、ユーザープロファイル、プレーンテキストのパスワード、プログラム、ライブラリ、などなどのオブジェクト、英語の大文字で指定することが要求されます。これも："
    },
    {
      "indent": 6,
      "text": "any letter (A-Z), any number (0-9), special characters (# $ _ @)",
      "ja": "任意の文字（A-Z）、任意の数（0-9）、特殊文字（＃$ _ @）"
    },
    {
      "indent": 3,
      "text": "Therefore, where us-ascii is specified for VAR or USERVAR values, it is recommended that uppercase ASCII values be sent, which will be converted to Extended Binary Coded Decimal Interchange Code (EBCDIC) by the Telnet server.",
      "ja": "US-ASCIIは、VARまたはUSERVAR値に指定されているところしたがって、大文字のASCII値は、送信されTelnetサーバによって拡張2進化10進コード（EBCDIC）に変換されることをお勧めします。"
    },
    {
      "indent": 3,
      "text": "A special case occurs for encrypted passwords (described in the next section), where both the initial password and user profile used to build the encrypted password must be EBCDIC English uppercase, in order to be properly authenticated by the Telnet server.",
      "ja": "特殊な場合には、暗号化されたパスワードを構築するために使用される両方の初期パスワードとユーザープロファイルが正常にTelnetサーバによって認証されるためには、EBCDIC英語の大文字でなければなりません（次のセクションで説明）暗号化パスワード、発生します。"
    },
    {
      "indent": 3,
      "text": "The IBMASSOCPRT USERVAR is used to provide the device name of a printer that will be associated with the display device that is created. The device description of the printer name provided must currently exist on the Telnet server system. The IBMSENDCONFREC USERVAR is used by the enhanced Telnet client to inform the Telnet server that a display Startup Response Record should be sent to the client. This record communicates the name of the actual display device acquired. If the attempt is unsuccessful, the reason code will be set to provide additional information on why the attempt failed. In addition to the device name and reason code, the Startup Response Record will contain the name of the Telnet server system.",
      "ja": "IBMASSOCPRT USERVARが作成され、表示装置に関連するプリンタのデバイス名を提供するために使用されます。提供されるプリンタ名のデバイス記述は、現在のTelnetサーバシステム上に存在しなければなりません。 IBMSENDCONFREC USERVARは、ディスプレイの起動レスポンスのレコードがクライアントに送信されなければならないのTelnetサーバに通知するように拡張Telnetクライアントによって使用されます。このレコードは、取得した実際の表示デバイスの名前を伝えます。試みが失敗した場合、理由コードは、その試みが失敗した理由についての追加情報を提供するように設定されます。デバイス名と理由コードに加えて、スタートアップ応答録音は、Telnetサーバーシステムの名前が含まれます。"
    },
    {
      "indent": 3,
      "text": "For more details on the Startup Response Record, see Section 11 of this document.",
      "ja": "スタートアップ応答録音の詳細については、このドキュメントのセクション11を参照してください。"
    },
    {
      "indent": 0,
      "text": "5. Enhanced Display Auto-Sign-On and Password Encryption",
      "section_title": true,
      "ja": "5.強化された表示の自動サインオンおよびパスワードの暗号化"
    },
    {
      "indent": 3,
      "text": "To allow password encryption, new IBMRSEED and IBMSUBSPW USERVARs will be used to exchange seed and substitute passwords information. IBMRSEED will carry a random seed to be used in both the Data Encryption Standard (DES) and Secure Hash Algorithm (SHA) password encryption, and IBMSUBSPW will carry the encrypted copy of the password.",
      "ja": "パスワードの暗号化を許可するには、新しいIBMRSEEDとIBMSUBSPWのUserVarsは、種子や代替パスワード情報を交換するために使用されます。 IBMRSEEDはランダムシードはDES（Data Encryption Standard）やセキュアハッシュアルゴリズム（SHA）パスワードの暗号化の両方で使用することを運ぶでしょう、とIBMSUBSPWは、パスワードの暗号化されたコピーを運ぶでしょう。"
    },
    {
      "indent": 3,
      "text": "The DES encryption would use the same 7-step DES-based password substitution scheme as APPC and Client Access. For a description of",
      "ja": "DES暗号化は、APPCおよびクライアントアクセスと同じ7ステップのDESベースのパスワード置換スキームを使用します。の説明について"
    },
    {
      "indent": 3,
      "text": "DES encryption, refer to Federal Information Processing Standards Publications (FIPS) 46-2 [FIPS-46-2] and 81 [FIPS-81].",
      "ja": "DES暗号化は、連邦情報処理規格出版物（FIPS）46-2 [FIPS-46-2]と81 [FIPS-81]を参照してください。"
    },
    {
      "indent": 3,
      "text": "The SHA encryption is described in Federal Information Processing Standards Publication 180-1 [FIPS-180-1].",
      "ja": "SHA暗号化は、連邦情報処理規格180-1公報[FIPS-180-1]に記載されています。"
    },
    {
      "indent": 3,
      "text": "The FIPS documents can be found at the Federal Information Processing Standards Publications link:",
      "ja": "FIPS文書は、連邦情報処理規格出版物リンクで見つけることができます："
    },
    {
      "indent": 6,
      "text": "http://www.itl.nist.gov/fipspubs/by-num.htm",
      "ja": "ｈっｔｐ：／／ｗっｗ。いｔｌ。にｓｔ。ごｖ／ふぃｐｓぷｂｓ／ｂｙーぬｍ。ｈｔｍ"
    },
    {
      "indent": 3,
      "text": "If encrypted password exchange is not required, plain text password exchange is permitted using the same USERVARs defined for encryption. For this case, the random client seed should be set either to an empty value (preferred method) or to hexadecimal zeros to indicate the password is not encrypted, but is plain text.",
      "ja": "暗号化されたパスワードの交換が必要とされていない場合は、プレーンテキストのパスワードの交換は、暗号化のために定義された同じのUserVarsを使用して許可されています。この場合、ランダムなクライアント・シードは、暗号化されていないパスワードを示すために空の値（好ましい方法）または進ゼロのいずれかに設定したが、プレーンテキストであるべきです。"
    },
    {
      "indent": 3,
      "text": "It should be noted that security of plain text password exchange cannot be guaranteed unless the network is physically protected or a trusted network (such as an intranet). If your network is vulnerable to IP address spoofing or directly connected to the Internet, you should engage in encrypted password exchange to validate a client's identity.",
      "ja": "ネットワークを物理的に保護されていない限り、プレーンテキストのパスワード交換のセキュリティを保証できないことに注意しなければならないか（イントラネット等）信頼できるネットワーク。ネットワークがIPスプーフィングに対する脆弱性や、インターネットに直接接続されている場合は、クライアントの識別情報を検証するために暗号化されたパスワード交換に従事しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Additional VARs and USERVARs have also been defined to allow an auto-sign-on user greater control over their startup environment, similar to what is supported using the Open Virtual Terminal (QTVOPNVT) API [SYSTEM-API].",
      "ja": "追加の付加価値再販業者とのUserVarsもオープン仮想端末（QTVOPNVT）API [SYSTEM-API]を使用してサポートされているものに似て自分のスタートアップ環境の上にユーザーの自動サインオンより大きな制御を可能にするために定義されています。"
    },
    {
      "indent": 3,
      "text": "The standard VARs supported to accomplish this are:",
      "ja": "これを実現するためにサポートされる標準VAR（付加価値再販業者）は、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "VAR        VALUE              EXAMPLE           DESCRIPTION\n--------   ----------------   ----------------  -------------------\nUSER       us-ascii char(x)   USERXYZ           User profile name",
      "raw": true
    },
    {
      "indent": 3,
      "text": "x - up to a maximum of 10 characters",
      "ja": "X  -  10文字の最大まで"
    },
    {
      "indent": 3,
      "text": "The custom USERVARs defined to accomplish this are:",
      "ja": "これを実現するために定義されたカスタムのUserVarsは以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "USERVAR       VALUE              EXAMPLE            DESCRIPTION\n--------      ----------------   ----------------   -----------------\nIBMRSEED      binary(8)          8-byte hex field   Random client\n                                                      seed\nIBMSUBSPW     binary(128)        128-byte hex field Substitute\n                                                      password\nIBMCURLIB     us-ascii char(x)   QGPL               Current library\nIBMIMENU      us-ascii char(x)   MAIN               Initial menu\nIBMPROGRAM    us-ascii char(x)   QCMD               Program to call",
      "raw": true
    },
    {
      "indent": 3,
      "text": "x - up to a maximum of 10 characters",
      "ja": "X  -  10文字の最大まで"
    },
    {
      "indent": 3,
      "text": "In order to communicate the server random seed value to the client, the server will request a USERVAR name made up of a fixed part (the 8 characters \"IBMRSEED\") immediately followed by an 8-byte hexadecimal variable part, which is the server random seed. The client generates its own 8-byte random seed value and uses both seeds to encrypt the password. Both the encrypted password and the client random seed value are then sent to the server for authentication. Telnet environment option rules will need to be adhered to when transmitting the client random seed and substituted password values to the server. Specifically, since a typical environment string is a variable length hexadecimal field, the hexadecimal fields are required to be escaped and/or byte stuffed according to the RFC 854 [RFC854], where any single byte could be misconstrued as a Telnet IAC or other Telnet option negotiation control character. The client must escape and/or byte stuff any bytes that could be seen as a Telnet environment option, specifically VAR, VALUE, ESC, and USERVAR.",
      "ja": "クライアントとサーバランダムシード値を通信するために、サーバは、直ちにランダムサーバである8バイトの16進可変部分、続いて（8つの文字「IBMRSEED」）固定部から構成されるUSERVAR名を要求しますシード。クライアントは自身の8バイトのランダムシード値を生成し、パスワードを暗号化するために、両方の種を使用しています。暗号化されたパスワードとクライアントランダムシード値の両方が、認証のためにサーバーに送信されます。 Telnetの環境オプションルールは、サーバーへのクライアントランダムシードと置換パスワード値を送信する際に付着する必要があります。典型的な環境文字列が可変長進フィールドであるので具体的には、16進数フィールドは、任意の単一のバイトがTelnet IACまたは他のTelnetと誤解することができたRFC 854 [RFC854]に記載のエスケープする必要及び/又はバイト詰めさオプション交渉制御文字。クライアントは、Telnet環境オプション、特にVAR、VALUE、ESC、およびUSERVARとして見ることができる任意のバイトをエスケープおよび/またはバイトスタッフなければなりません。"
    },
    {
      "indent": 3,
      "text": "If you use the IBMSENDCONFREC USERVAR, as described in Section 5 of this document, with a value of YES along with the automatic sign-on USERVARs described above, you will receive a Startup Response Record that will contain a response code informing your Telnet client of the success or failure of the automatic sign-on attempt. See Section 11 of this document for details on the Startup Response Record.",
      "ja": "あなたはIBMSENDCONFREC USERVAR使用している場合は自動サインオンを上記のUserVarsと一緒にYESの値は、このドキュメントのセクション5で説明したように、あなたはあなたのTelnetクライアントを知らせる応答コードが含まれていますスタートアップ応答録音を受け取ることになります自動サインオンの試行の成功または失敗。スタートアップ応答録音の詳細については、このドキュメントのセクション11を参照してください。"
    },
    {
      "indent": 3,
      "text": "The following illustrates the encrypted case:",
      "ja": "以下は、暗号化されたケースを示しています。"
    },
    {
      "indent": 3,
      "text": "iSeries Telnet server            Enhanced Telnet client\n--------------------------       -------------------------------\nIAC DO NEW-ENVIRON          -->\n                            <--  IAC WILL NEW-ENVIRON\nIAC SB NEW-ENVIRON SEND\nUSERVAR \"IBMRSEEDxxxxxxxx\"\nUSERVAR \"IBMSUBSPW\"\nVAR USERVAR IAC SE          -->\n                                 IAC SB NEW-ENVIRON IS\n                                 VAR \"USER\" VALUE \"DUMMYUSR\"\n                                 USERVAR \"IBMRSEED\" VALUE \"yyyyyyyy\"\n                                 USERVAR \"IBMSUBSPW\" VALUE \"zzzzzzzz\"\n                            <--  IAC SE\n                             .\n                             .\n(other negotiations)         .",
      "raw": true
    },
    {
      "indent": 3,
      "text": "In this example, \"xxxxxxxx\" is an 8-byte hexadecimal random server seed, \"yyyyyyyy\" is an 8-byte hexadecimal random client seed, and \"zzzzzzzz\" is an 8-byte hexadecimal encrypted password (if the DES encryption algorithm was used) or a 20-byte hexadecimal encrypted password (if the SHA encryption algorithm was used). If the password is not valid, then the sign-on panel is not bypassed. If the password is expired, then the sign-on panel is not bypassed.",
      "ja": "この例では、「XXXXXXXX」は8バイトの16進ランダムサーバーシード、「YYYYYYYY」であるDES暗号化アルゴリズムを使用した場合には8バイトの16進ランダムクライアントシード、および「ZZZZZZZZは」8バイトの16進暗号化されたパスワード（です）または20バイトの16進暗号化されたパスワード（SHA暗号化アルゴリズムを使用した場合）。パスワードが有効でない場合は、サインオン・パネルがバイパスされていません。パスワードの有効期限が切れている場合は、サインオン・パネルがバイパスされていません。"
    },
    {
      "indent": 3,
      "text": "Actual bytes transmitted in the above example are shown in hex below, where the server seed is \"7D3E488F18080404\", the client seed is \"4E4142334E414233\", and the DES encrypted password is \"DFB0402F22ABA3BA\". The user profile used to generate the encrypted password is \"44554D4D59555352\" (DUMMYUSR), with a plain text password of \"44554D4D595057\" (DUMMYPW).",
      "ja": "サーバ・シードが「7D3E488F18080404」である場合、上記の例で送信実際のバイトは、以下ヘクスに示され、クライアント・シード「が4E4142334E414233」であり、DES暗号化されたパスワードは、「DFB0402F22ABA3BA」です。暗号化されたパスワードを生成するために使用されるユーザー・プロファイルは、「44554D4D595057」（DUMMYPW）のプレーンテキストのパスワードを使用して、「44554D4D59555352」（DUMMYUSR）です。"
    },
    {
      "indent": 3,
      "text": "iSeries Telnet server            Enhanced Telnet client\n--------------------------       -------------------------\nFF FD 27                    -->\n                            <--  FF FB 27\nFF FA 27 01 03 49 42 4D\n52 53 45 45 44 7D 3E 48\n8F 18 08 04 04 03 49 42\n4D 53 55 42 53 50 57 03\n00 FF F0                    -->\n                                 FF FA 27 00 00 55 53 45\n                                 52 01 44 55 4D 4D 59 55\n                                 53 52 03 49 42 4D 52 53\n                                 45 45 44 01 4E 41 42 33\n                                 4E 41 42 33 03 49 42 4D\n                                 53 55 42 53 50 57 01 DF\n                                 B0 40 2F 22 AB A3 BA FF\n                            <--  F0",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The following illustrates the plain text case:",
      "ja": "以下は、プレーンテキストのケースを示しています。"
    },
    {
      "indent": 3,
      "text": "iSeries Telnet server            Enhanced Telnet client\n--------------------------       -------------------------\nIAC DO NEW-ENVIRON          -->\n                            <--  IAC WILL NEW-ENVIRON\nIAC SB NEW-ENVIRON SEND\nUSERVAR \"IBMRSEEDxxxxxxxx\"\nUSERVAR \"IBMSUBSPW\"\nVAR USERVAR IAC SE          -->\n                                 IAC SB NEW-ENVIRON IS\n                                 VAR \"USER\" VALUE \"DUMMYUSR\"\n                                 USERVAR \"IBMRSEED\" VALUE\n                                 USERVAR \"IBMSUBSPW\" VALUE \"yyyyyyyy\"\n                            <--  IAC SE\n                             .\n                             .\n(other negotiations)         .",
      "raw": true
    },
    {
      "indent": 3,
      "text": "In this example, \"xxxxxxxx\" is an 8-byte hexadecimal random server seed, and \"yyyyyyyyyy\" is a 128-byte us-ascii client plain text password. If the password has expired, then the sign-on panel is not bypassed.",
      "ja": "この例では、「XXXXXXXX」は8バイトの16進ランダムサーバーの種子である、と「yyyyyyyyyyは、」128バイトのUS-ASCIIクライアントプレーンテキストのパスワードです。パスワードの有効期限が切れている場合は、サインオン・パネルがバイパスされていません。"
    },
    {
      "indent": 3,
      "text": "Actual bytes transmitted in the above example are shown in hex below, where the server seed is \"7D3E488F18080404\", the client seed is empty, and the plain text password is \"44554D4D595057\" (DUMMYPW). The user profile used is \"44554D4D59555352\" (DUMMYUSR).",
      "ja": "サーバ・シードが「7D3E488F18080404」である場合、上記の例で送信実際のバイトは、以下ヘクスに示され、クライアント・シードは空であり、平文パスワードは「44554D4D595057」（DUMMYPW）です。使用するユーザプロファイルは「44554D4D59555352」（DUMMYUSR）です。"
    },
    {
      "indent": 3,
      "text": "iSeries Telnet server            Enhanced Telnet client\n--------------------------       -------------------------\nFF FD 27                    -->\n                            <--  FF FB 27\nFF FA 27 01 03 49 42 4D\n52 53 45 45 44 7D 3E 48\n8F 18 08 04 04 03 49 42\n4D 53 55 42 53 50 57 03\n00 FF F0                    -->\n                                 FF FA 27 00 00 55 53 45\n                                 52 01 44 55 4D 4D 59 55\n                                 53 52 03 49 42 4D 52 53\n                                 45 45 44 01 03 49 42 4D\n                                 53 55 42 53 50 57 01 44\n                            <--  55 4D 4D 59 50 57 FF F0",
      "raw": true
    },
    {
      "indent": 0,
      "text": "5.1. Data Encryption Standard (DES) Password Substitutes",
      "section_title": true,
      "ja": "5.1. データ暗号化規格（DES）パスワードの代替"
    },
    {
      "indent": 3,
      "text": "Both APPC and Client Access use well-known DES encryption algorithms to create encrypted passwords. A Network Station or Enhanced Client can generate compatible encrypted passwords if it follows these steps, details of which can be found in the Federal Information Processing Standards 46-2 [FIPS-46-2].",
      "ja": "APPCおよびクライアントアクセスの両方が暗号化されたパスワードを作成するには、よく知られているDES暗号化アルゴリズムを使用します。それはこれらの手順、連邦情報処理規格46-2 [FIPS-46-2]で見つけることができるの詳細は、以下の場合は、ネットワークステーションまたは拡張クライアントは、互換性のある暗号化されたパスワードを生成することができます。"
    },
    {
      "indent": 3,
      "text": "1) Padded_PW = Left justified user password padded to the right with '40'X to 8 bytes.",
      "ja": "1）Padded_PW =左は8バイトに40'X」で右に埋められたユーザのパスワードを正当化。"
    },
    {
      "indent": 6,
      "text": "The user's password must be left justified in an 8-byte variable and padded to the right with '40'X up to an 8-byte length. If the user's password is 8 bytes in length, no padding will occur. For computing password substitutes for passwords of length 9 and 10, see \"Handling passwords of length 9 and 10\" below. Passwords less than 1 byte or greater than 10 bytes in length are not valid. Please note that if password is not in EBCDIC, it must be converted to EBCDIC uppercase.",
      "ja": "ユーザーのパスワードは、8バイトの変数に左寄せし、8バイトの長さまで40'X」で右に埋めなければなりません。ユーザーのパスワードの長さは8バイトの場合、パディングは行われません。長さ9と10のパスワードのパスワードの代用を計算するために、以下の「長さ9と10の取り扱いパスワード」を参照してください。 1バイトまたは超える長さの10バイト未満のパスワードは有効ではありません。パスワードは、EBCDICにない場合、それはEBCDIC大文字に変換しなければならないことに注意してください。"
    },
    {
      "indent": 3,
      "text": "2) XOR_PW = Padded_PW xor '5555555555555555'X",
      "ja": "2）XOR_PW = Padded_PW XOR「5555555555555555'X"
    },
    {
      "indent": 6,
      "text": "The padded password is Exclusive OR'ed with 8 bytes of '55'X.",
      "ja": "パッド入りのパスワードが55'X」の8つのバイトとの排他的論理和演算です。"
    },
    {
      "indent": 3,
      "text": "3) SHIFT_RESULT = XOR_PW << 1",
      "ja": "3）SHIFT_RESULT = XOR_PW << 1"
    },
    {
      "indent": 6,
      "text": "The entire 8-byte result is shifted 1 bit to the left; the left-most bit value is discarded, and the rightmost bit value is cleared to 0.",
      "ja": "全体の8バイトの結果が左に1ビットシフトされます。一番左のビットの値は破棄され、右端のビットの値が0にクリアされます。"
    },
    {
      "indent": 3,
      "text": "4) PW_TOKEN = DES_ECB_mode(SHIFT_RESULT,              /* key  */\n                           userID_in_EBCDIC_uppercase /* data */ )",
      "raw": true
    },
    {
      "indent": 6,
      "text": "This shifted result is used as key to the Data Encryption Standard (Federal Information Processing Standards 46-2 [FIPS-46-2]) to encipher the user identifier. When the user identifier is less than 8 bytes, it is left justified in an 8-byte variable and padded to the right with '40'X. When the user identifier is 9 or 10 bytes, it is first padded to the right with '40'X to a length of 10 bytes. Then bytes 9 and 10 are \"folded\" into bytes 1-8 using the following algorithm:",
      "ja": "これは、結果は、ユーザ識別子を暗号化するデータ暗号化規格（連邦情報処理規格46-2 [FIPS-46-2]）へのキーとして使用されているシフト。ユーザ識別子が8バイト未満の場合は、8バイトの変数に左寄せと40'X」で右に水増しされます。ユーザ識別子は、9または10バイトである場合、それは最初の10バイトの長さに40'X」で右に埋め込まれています。次いで、9バイト及び10は、以下のアルゴリズムを使用して、バイト1-8に「折り畳まれます」。"
    },
    {
      "indent": 8,
      "text": "Bit 0 is the high-order bit (i.e., has value of '80'X).",
      "ja": "ビット0は、上位ビット（すなわち、80'X」の値を有する）です。"
    },
    {
      "indent": 8,
      "text": "Byte 1, bits 0 and 1 are replaced with byte 1, bits 0 and 1 Exclusive OR'ed with byte 9, bits 0 and 1. Byte 2, bits 0 and 1 are replaced with byte 2, bits 0 and 1 Exclusive OR'ed with byte 9, bits 2 and 3. Byte 3, bits 0 and 1 are replaced with byte 3, bits 0 and 1 Exclusive OR'ed with byte 9, bits 4 and 5. Byte 4, bits 0 and 1 are replaced with byte 4, bits 0 and 1 Exclusive OR'ed with byte 9, bits 6 and 7. Byte 5, bits 0 and 1 are replaced with byte 5, bits 0 and 1 Exclusive OR'ed with byte 10, bits 0 and 1. Byte 6, bits 0 and 1 are replaced with byte 6, bits 0 and 1 Exclusive OR'ed with byte 10, bits 2 and 3. Byte 7, bits 0 and 1 are replaced with byte 7, bits 0 and 1 Exclusive OR'ed with byte 10, bits 4 and 5. Byte 8, bits 0 and 1 are replaced with byte 8, bits 0 and 1 Exclusive OR'ed with byte 10, bits 6 and 7.",
      "ja": "バイト1のビット0と1はバイト1、バイト9とビット0と1排他的論理和演算を、ビット0と1バイト2で置き換えられ、ビット0と1は、バイト2に置き換えられ、ビット0と1排他的OR」バイト9、ビット2および3バイト3で編、ビット0と1バイト3で置換されている、バイト9とビット0と1排他的論理和演算を、ビット4および5バイト4、ビット0と1は、で置換されていますバイト4、ビット0、バイト9、ビット6および7バイト5、ビット0と1と1排他的論理和演算は、バイト5、ビット0とバイト10、ビット0と1と1排他的論理和演算で置き換えられます。バイト6ビット0と1は、バイト6、バイト10とビット0と1排他的論理和演算を、ビット2および3バイト7で置換され、ビット0と1は、バイト7で置換され、ビット0と1排他的OR」バイト10、ビット4および5バイト8で編、ビット0と1は、バイト8、バイト10とビット0と1排他的論理和演算を、ビット6及び7で置換されています。"
    },
    {
      "indent": 6,
      "text": "User identifiers greater than 10 bytes or less than 1 byte are not the result of this encryption ID, known as PW_TOKEN in the paper.",
      "ja": "10バイト未満または1バイトを超えるユーザ識別子は、紙にPW_TOKENとして知られ、この暗号化IDの結果ではありません。"
    },
    {
      "indent": 3,
      "text": "5) Increment PWSEQs and store it.",
      "ja": "5）PWSEQsをインクリメントし、それを保存します。"
    },
    {
      "indent": 6,
      "text": "Each LU must maintain a pair of sequence numbers for ATTACHs sent and received on each session. Each time an ATTACH is generated, (and password substitutes are in use on the session) the sending sequence number, PWSEQs, is incremented and saved for the next time. Both values are set to zero at BIND time. So the first use of PWSEQs has the value of 1 and increases by one with each use. A new field is added to the ATTACH to carry this sequence number. However, in certain error conditions, it is possible for the sending side to increment the sequence number, and the receiver may not increment it. When the sender sends a subsequent ATTACH, the receiver will detect a missing sequence. This is allowed. However the sequence number received must always be larger than the previous one, even if some are missing.",
      "ja": "各LUは、各セッションに送信され、受信ATTACHsのためのシーケンス番号のペアを維持する必要があります。 ATTACHたびに、生成された（とパスワードの代用品は、セッションで使用されている）送信シーケンス番号は、PWSEQsは、インクリメントされ、次回のために保存されます。両方の値は、バインド時にゼロに設定されます。そうPWSEQsの最初の使用は、それぞれの用途に一つによって1の値及び増加を有します。新しいフィールドは、このシーケンス番号を運ぶためにATTACHに追加されます。しかし、特定のエラー状態で、送信側はシーケンス番号をインクリメントすることが可能であり、受信機はそれを増加しないことができます。送信者がATTACH、後続を送信すると、受信機は、欠落しているシーケンスを検出します。これは許可されています。しかし、受信したシーケンス番号は、常にいくつかが欠落している場合でも、以前のものよりも大きくする必要があります。"
    },
    {
      "indent": 6,
      "text": "The maximum number of consecutive missing sequence numbers allowed is 16. If this is exceeded, the session is unbound with a protocol violation.",
      "ja": "これは、セッションがプロトコル違反と結合していないで、超えた場合は許可され、連続する欠落しているシーケンス番号の最大数は16です。"
    },
    {
      "indent": 6,
      "text": "Note: The sequence number must be incremented for every ATTACH sent. However, the sequence number field is only required to be included in the FMH5 if a password substitute is sent (byte 4, bit 3 on).",
      "ja": "注意：すべてのは、送信されたATTACHのためのシーケンス番号をインクリメントする必要があります。しかし、シーケンス番号フィールドのみ（バイト4に3ビット）パスワード代替が送信される場合FMH5に含まれることが要求されます。"
    },
    {
      "indent": 3,
      "text": "6) RDrSEQ = RDr + PWSEQs  /* RDr is server seed. */",
      "raw": true
    },
    {
      "indent": 6,
      "text": "The current value of PWSEQs is added to RDr, the random value received from the partner LU on this session, yielding RDrSEQ, essentially a predictably modified value of the random value received from the partner LU at BIND time.",
      "ja": "PWSEQsの電流値はRDrSEQ、バインド時にパートナーLUから受信したランダム値の本質的に予想修正値を得、RDR、このセッションにパートナーLUから受信したランダム値に加算されます。"
    },
    {
      "indent": 3,
      "text": "7) PW_SUB = DES_CBC_mode(PW_TOKEN,        /* key      */\n                         (RDrSEQ,         /* 8 bytes  */\n                          RDs,            /* 8 bytes  */\n                          ID xor RDrSEQ,  /* 16 bytes */\n                          PWSEQs,         /* 8 bytes  */\n                          )               /* data     */\n                         )",
      "raw": true
    },
    {
      "indent": 8,
      "text": "The PW_TOKEN is used as a key to the DES function to generate an\n8-byte value for the following string of inputs.  The DES CBC\nmode Initialization Vector (IV) used is 8 bytes of '00'X.",
      "raw": true
    },
    {
      "indent": 10,
      "text": "RDrSEQ: the random data value received from the partner LU plus the sequence number.",
      "ja": "RDrSEQ：パートナーLUプラスシーケンス番号から受信したランダムデータ値。"
    },
    {
      "indent": 10,
      "text": "RDs: the random data value sent to the partner LU on BIND for this session.",
      "ja": "RD：このセッションのためにBIND上のパートナーLUに送信されたランダムデータ値。"
    },
    {
      "indent": 10,
      "text": "A 16-byte value created by:",
      "ja": "によって作成された16バイトの値："
    },
    {
      "indent": 18,
      "text": "- padding the user identifier with '40'X to a length\n  of 16 bytes.",
      "raw": true
    },
    {
      "indent": 18,
      "text": "- Exclusive OR'ing the two 8-byte halves of the padded user identifier with the RDrSEQ value.",
      "ja": " - 排他的OR接続RDrSEQ値で埋めユーザ識別子の2つの8バイトの半分。"
    },
    {
      "indent": 20,
      "text": "Note: User ID must first be converted to EBCDIC uppercase.",
      "ja": "注：ユーザーIDは、最初のEBCDIC大文字に変換する必要があります。"
    },
    {
      "indent": 10,
      "text": "PWSEQs: the sequence number.",
      "ja": "PWSEQs：シーケンス番号。"
    },
    {
      "indent": 6,
      "text": "This is similar to the process used on LU-LU verification as described in the Enhanced LU-LU Bind Security. The resulting enciphered random data is the 'password substitute'.",
      "ja": "これは、強化されたLU-LUバインドのセキュリティで説明したようにLU-LUの検証に使用されるプロセスに似ています。結果の暗号化ランダムデータは、「パスワードの代用品」です。"
    },
    {
      "indent": 3,
      "text": "8) Handling passwords of length 9 and 10",
      "ja": "8）長さ9のパスワードを処理し、10"
    },
    {
      "indent": 6,
      "text": "1. Generate PW_TOKENa by using characters 1 to 8 of the password and steps 1-4 from the previous section.",
      "ja": "1.パスワードの8文字に1を使用してPW_TOKENaを生成し、前のセクションから1-4を繰り返します。"
    },
    {
      "indent": 6,
      "text": "2. Generate PW_TOKENb by using characters 9 and 10 and steps 1-4 from the previous section. In this case, Padded_PW from step 1 will be characters 9 and 10 padded to the right with '40'X, for a total length of 8.",
      "ja": "2.文字9及び10を用いてPW_TOKENbを生成し、前のセクションから工程1-4。この場合には、ステップ1からPadded_PW文字9と10になり8の全長のための「40'X、右側にパディング。"
    },
    {
      "indent": 6,
      "text": "3. PW_TOKEN = PW_TOKENa xor PW_TOKENb",
      "section_title": true,
      "ja": "3. PW_TOKEN = PW_TOKENa XOR PW_TOKENb"
    },
    {
      "indent": 6,
      "text": "4. Now compute PW_SUB by performing steps 5-7 from the previous section.",
      "ja": "4.ここで、前のセクションから手順5-7を実行することにより、PW_SUBを計算します。"
    },
    {
      "indent": 3,
      "text": "9) Example DES Password Substitute Calculation",
      "ja": "9）実施例DESパスワード代替計算"
    },
    {
      "indent": 6,
      "text": "ID: USER123 Password: ABCDEFG Server seed: '7D4C2319F28004B2'X Client seed: '08BEF662D851F4B1'X PWSEQs: 1 (PWSEQs is a sequence number needed in the 7-step encryption, and it is always one)",
      "ja": "ID：USER123パスワード：ABCDEFGサーバの種子：「7D4C2319F28004B2'Xクライアントの種子：」08BEF662D851F4B1'X PWSEQs：1（PWSEQsは、7段階の暗号化に必要なシーケンス番号であり、それは常に1です）"
    },
    {
      "indent": 6,
      "text": "DES Encrypted Password should be: '5A58BD50E4DD9B5F'X",
      "ja": "DES暗号化パスワードは次のようになります。「5A58BD50E4DD9B5F'X"
    },
    {
      "indent": 0,
      "text": "5.2. Secure Hash Algorithm (SHA) Password Substitutes",
      "section_title": true,
      "ja": "5.2. ハッシュアルゴリズム（SHA）パスワードの代替を確保"
    },
    {
      "indent": 3,
      "text": "A Network Station or Enhanced Client can generate SHA encrypted passwords if it follows these steps.",
      "ja": "それはこれらの手順を以下の場合は、ネットワークステーションまたは拡張クライアントは、SHA暗号化されたパスワードを生成することができます。"
    },
    {
      "indent": 3,
      "text": "1) Convert the user identifier to uppercase UNICODE format (if it is not already in this format).",
      "ja": "それはこの形式になっていない場合1））（大文字UNICODE形式にユーザ識別子を変換します。"
    },
    {
      "indent": 6,
      "text": "The user identifier must be left justified in a 10-byte variable and padded to the right with '40'X up to a 10-byte length prior to converting it to UNICODE. If the user's password is 10 bytes in length, no padding will occur. User identifiers of less than 1 byte or greater than 10 bytes in length are not valid. The user identifier will be 20 bytes in length after conversion to UNICODE, so the variable that will hold the UNICODE user identifier should have a length of 20 bytes.",
      "ja": "ユーザ識別子は、10バイトの変数に左寄せし、UNICODEに変換する前に、10バイトの長さまで40'X」が右側に埋め込まれなければなりません。ユーザーのパスワードの長さが10バイトの場合、パディングは行われません。ユーザー未満1バイトの識別子または超える長さの10のバイトが有効ではありません。ユーザ識別子は、Unicodeに変換した後、長さが20バイトとなり、そうUNICODEのユーザ識別子を保持する変数は、20バイトの長さを有するべきです。"
    },
    {
      "indent": 3,
      "text": "2) Ensure the password is in UNICODE format (if it is not already in this format).",
      "ja": "それは、この形式になっていない場合2））（パスワードがUNICODE形式であることを確認してください。"
    },
    {
      "indent": 6,
      "text": "The user's password must be left justified in a 128-byte variable. It does not need to be padded to the right with '40'X up to a 128-byte length. Passwords less than 1 byte or greater than 128 bytes in length are not valid. The password will be 2 times its original length after conversion to UNICODE, so the maximum length of the variable that will hold the UNICODE password is 256 bytes.",
      "ja": "ユーザーのパスワードは、128バイトの変数に左寄せしなければなりません。これは、128バイトの長さまで40'X」で右にパディングする必要はありません。 1バイトまたは超える長さ128バイト未満のパスワードは有効ではありません。パスワードは、Unicodeに変換した後2回、その元の長さになり、そうUNICODEのパスワードを保持する変数の最大長は256バイトです。"
    },
    {
      "indent": 3,
      "text": "3) Create a 20-byte password token as follows:",
      "ja": "次のように3）20バイトのパスワード・トークンを作成します。"
    },
    {
      "indent": 6,
      "text": "PW_token = SHA-1(uppercase_unicode_userid,         /* 20 bytes */\n                 unicode_password)      /* from 2 to 256 bytes */",
      "raw": true
    },
    {
      "indent": 6,
      "text": "The actual routine to be used to perform the SHA-1 processing is dependent on the programming language being used. For example, if using the Java language, then use the java.security class to perform the actual SHA-1 processing.",
      "ja": "SHA-1処理を実行するために使用される実際のルーチンが使用されているプログラミング言語に依存しています。例えば、Java言語を使用している場合、実際のSHA-1処理を実行するjava.securityのクラスを使用します。"
    },
    {
      "indent": 6,
      "text": "The PW_token will be used in subsequent step to actually generate the final substitute password.",
      "ja": "PW_tokenは、実際には、最終的な代替パスワードを生成するために、次の工程で使用されます。"
    },
    {
      "indent": 3,
      "text": "4) Increment PWSEQs and store it.",
      "ja": "4）PWSEQsをインクリメントし、それを格納します。"
    },
    {
      "indent": 3,
      "text": "5) Create the 20-byte substitute password as follows:",
      "ja": "次のように5）20バイトの代替パスワードを作成します。"
    },
    {
      "indent": 6,
      "text": "PW_SUB = SHA-1(PW_token,                        /* 20 bytes */\n               serverseed,                      /*  8 bytes */\n               clientseed,                      /*  8 bytes */\n               uppercase_unicode_userid,        /* 20 bytes */\n               PWSEQ)                           /*  8 bytes */",
      "raw": true
    },
    {
      "indent": 6,
      "text": "The actual routine to be used to perform the SHA-1 processing is dependent on the programming language being used. For example, if using the Java language, then use the java.security class to perform the actual SHA-1 processing.",
      "ja": "SHA-1処理を実行するために使用される実際のルーチンが使用されているプログラミング言語に依存しています。例えば、Java言語を使用している場合、実際のSHA-1処理を実行するjava.securityのクラスを使用します。"
    },
    {
      "indent": 3,
      "text": "6) Example SHA Password Substitute Calculation",
      "ja": "6）実施例SHAパスワード代替計算"
    },
    {
      "indent": 6,
      "text": "ID: USER123 Password: AbCdEfGh123?+ Server seed: '3E3A71C78795E5F5'X Client seed: 'B1C806D5D377D994'X PWSEQs: 1 (PWSEQs is a sequence number needed in the SHA encryption, and it is always one)",
      "ja": "ID：USER123パスワード：？AbCdEfGh123 +サーバの種子： '3E3A71C78795E5F5'Xクライアントの種子：' B1C806D5D377D994'X PWSEQs：1（PWSEQsは、SHAの暗号化に必要なシーケンス番号であり、それは常に1です）"
    },
    {
      "indent": 6,
      "text": "SHA Encrypted Password should be:",
      "ja": "SHA暗号化パスワードは次のようになります。"
    },
    {
      "indent": 15,
      "text": "'E7FAB5F034BEDA42E91F439DD07532A24140E3DD'X",
      "ja": "「E7FAB5F034BEDA42E91F439DD07532A24140E3DD'X"
    },
    {
      "indent": 0,
      "text": "6. Kerberos Services Ticket Automatic Sign-On Support",
      "section_title": true,
      "ja": "6. Kerberosのサービスチケット自動サインオンのサポート"
    },
    {
      "indent": 3,
      "text": "An iSeries Telnet server specific USERVAR defined below will contain the complete Generic Security Services (GSS) token for use on the iSeries. Enhanced Telnet clients will need to obtain the Kerberos services ticket from a Key Distribution Center (KDC). Implementation steps for acquiring the Kerberos services ticket will be limited to the Microsoft Security Support Provider Interface (SSPI) example below. For information on Kerberos services tickets, refer to your Network Authentication Service (NAS) documentation.",
      "ja": "以下に定義のiSeries Telnetサーバの特定のUSERVARは、iSeries上で使用するための完全な一般的なセキュリティサービス（GSS）トークンが含まれています。強化されたTelnetクライアントは、キー配布センター（KDC）からKerberosサービスチケットを取得する必要があります。 Kerberosサービスチケットを取得するための実装手順は、以下のマイクロソフトセキュリティサポートプロバイダーインターフェイス（SSPI）の例に限定されます。 Kerberosサービスチケットの詳細については、お使いのネット​​ワーク認証サービス（NAS）のマニュアルを参照してください。"
    },
    {
      "indent": 3,
      "text": "The custom USERVAR defined is:",
      "ja": "定義されたカスタムUSERVARは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "USERVAR   VALUE         EXAMPLE              DESCRIPTION\n--------- ------------- -------------------- -------------------\nIBMTICKET binary(16384) 16384-byte hex field Kerberos services token",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Several other USERVARs, as defined in Section 6, can be used along with the IBMTICKET USERVAR to allow a user greater control over their startup environment.",
      "ja": "いくつかの他のUserVarsは、第6節で定義されるように、彼らのスタートアップ環境を超えるユーザーより詳細に制御できるようにIBMTICKET USERVARと一緒に使用することができます。"
    },
    {
      "indent": 3,
      "text": "The custom USERVARs defined to accomplish this are:",
      "ja": "これを実現するために定義されたカスタムのUserVarsは以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "USERVAR       VALUE              EXAMPLE            DESCRIPTION\n--------      ----------------   ----------------   -----------------\nIBMCURLIB     us-ascii char(x)   QGPL               Current library\nIBMIMENU      us-ascii char(x)   MAIN               Initial menu\nIBMPROGRAM    us-ascii char(x)   QCMD               Program to call",
      "raw": true
    },
    {
      "indent": 3,
      "text": "x - up to a maximum of 10 characters",
      "ja": "X  -  10文字の最大まで"
    },
    {
      "indent": 3,
      "text": "If you use the IBMSENDCONFREC USERVAR, as described in Section 5, with a value of YES along with the Kerberos ticket USERVARs described above, you will receive a Startup Response Record that will contain a response code informing your Telnet client of the success or failure of the Kerberos validation attempt. See Section 11 for details on the Startup Response Record.",
      "ja": "あなたはIBMSENDCONFREC USERVAR使用している場合は、上記のKerberosチケットのUserVarsと一緒にYESの値は、第5節で説明したように、あなたはの成功または失敗のTelnetクライアントを知らせる応答コードが含まれていますスタートアップ応答録音を受け取ることになりますKerberosの検証の試み。スタートアップ応答録音の詳細については、セクション11を参照してください。"
    },
    {
      "indent": 3,
      "text": "The following Microsoft SSPI example illustrates how to get the client security token, which contains the Kerberos services ticket.",
      "ja": "次のMicrosoft SSPIの例では、Kerberosサービスチケットが含まれているクライアントのセキュリティトークンを取得する方法を示しています。"
    },
    {
      "indent": 3,
      "text": "1) Get a handle to the user's credentials:",
      "ja": "1）ユーザーの資格情報へのハンドルを取得します。"
    },
    {
      "indent": 6,
      "text": "PSecurityFunctionTable pSSPI_;\nCredHandle credHandle;\nTimeStamp  timeStamp;",
      "raw": true
    },
    {
      "indent": 6,
      "text": "ss = pSSPI_->AcquireCredentialsHandle( NULL, // Principal \"Kerberos\", // PackageName SECPKG_CRED_OUTBOUND, // CredentialUse NULL, // LogonID NULL, // AuthData NULL, // GetKeyFnc NULL, // GetKeyArg &credHandle, // CredHandle &timeStamp); // ExpireTime",
      "ja": "SS = pSSPI _->のAcquireCredentialsHandle（NULL、//校長 \"ケルベロス\"、// PackageNameのSECPKG_CRED_OUTBOUND、// CredentialUse NULL、//ログオンID NULL、// AuthData NULL、// GetKeyFnc NULL、// GetKeyArg＆credHandle、// CredHandle＆timeStampに）; // ExpireTime"
    },
    {
      "indent": 3,
      "text": "2) Initialize security context to \"request delegation\". Mutual authentication is also requested, although it is not required and may not be performed.",
      "ja": "2）「要求委任」にセキュリティコンテキストを初期化します。相互認証は、それが必要ではないが、また、要求され、実行されなくてもよいです。"
    },
    {
      "indent": 6,
      "text": "CtxtHandle newContext;\nunsigned long contextAttr;\nunsigned char token[16384] ;\nunsigned long tokenLen = sizeof(token);\nSecBuffer sbo = {tokenLen, SECBUFFER_TOKEN, token};\nSecBufferDesc sbdo = {SECBUFFER_VERSION, 1, &sbo}",
      "raw": true
    },
    {
      "indent": 6,
      "text": "pSSPI_->InitializeSecurityContext( &credHandle, // CredHandle NULL, // Context \"krbsrv400/fullyqualifiedLowerCaseSystemName\", // ServicePrincipalName ISC_REQ_CONNECTION|ISC_REQ_DELEGATE|ISC_REQ_MUTUAL_AUTH, // ContextRequest NULL, // Reserved SECURITY_NATIVE_DREP, // DataRep NULL, // Input NULL, // Reserved &newContext, // NewContext &sbdo, // Output &contextAttr, // ContextAttr &timeStamp); // ExpireTime",
      "ja": "pSSPI _-> InitializeSecurityContextの（＆credHandle、// CredHandle NULL、//コンテキスト \"krbsrv400 / fullyqualifiedLowerCaseSystemName\"、// servicePrincipalNameのISC_REQ_CONNECTION | ISC_REQ_DELEGATE | ISC_REQ_MUTUAL_AUTH、// ContextRequest NULL、//予約済みSECURITY_NATIVE_DREP、// DataRep NULL、//入力NULL、 //予約＆newContextを、// NEWCONTEXT＆sbdo、//出力＆contextAttr、// ContextAttr＆timeStampに）。 // ExpireTime"
    },
    {
      "indent": 3,
      "text": "3) Free the user credentials handle with FreeCredentialsHandle().",
      "ja": "3）ユーザーの資格情報がFreeCredentialsHandleとハンドルの解放（）。"
    },
    {
      "indent": 3,
      "text": "4) Send security token to Telnet Server (padded with escape characters).",
      "ja": "4）のTelnetサーバ（エスケープ文字で埋め）にセキュリティトークンを送信します。"
    },
    {
      "indent": 3,
      "text": "The following illustrates the Kerberos Token Negotiation:",
      "ja": "以下は、Kerberosトークンの交渉を示しています。"
    },
    {
      "indent": 3,
      "text": "iSeries Telnet server            Enhanced Telnet client\n--------------------------       -------------------------------\nIAC DO NEW-ENVIRON          -->\n                            <--  IAC WILL NEW-ENVIRON\nIAC SB NEW-ENVIRON SEND\nUSERVAR \"IBMRSEEDxxxxxxxx\"\nVAR USERVAR IAC SE          -->\n                                 IAC SB NEW-ENVIRON IS\n                                 USERVAR \"IBMTICKET\" VALUE\n                                 \"zzzzzzzz...\"\n                            <--  IAC SE\n                             .\n                             .\n(other negotiations)         .",
      "raw": true
    },
    {
      "indent": 3,
      "text": "In this example, \"xxxxxxxx\" is an 8-byte hexadecimal random server seed, and \"zzzzzzzz...\" is the complete Kerberos services token. If the Kerberos services token is not valid, then the sign-on panel is not bypassed. It should be noted that for the Kerberos token a random server seed is not needed, although it will be sent by the Telnet Server.",
      "ja": "この例では、「XXXXXXXX」は8バイトの16進ランダムサーバーの種子である、と「ZZZZZZZZ ...」完全なKerberosサービストークンです。 Kerberosサービスのトークンが有効でない場合は、サインオン・パネルがバイパスされていません。 KerberosのためにそれがTelnetサーバーによって送信されますが、ランダムなサーバーのシードは、必要とされていないトークンことに留意すべきです。"
    },
    {
      "indent": 3,
      "text": "Actual bytes transmitted in the above example are shown in hex below, where the server seed is \"7D3E488F18080404\", and the Kerberos services token starts with \"DFB0402F22ABA3BA...\". The complete Kerberos services token is not shown here, as the length of the token could be 16384 bytes and would make this document extremely large. As described in Section 6, the client must escape and/or byte stuff any Kerberos token bytes, which could be seen as a Telnet environment option [RFC1572], specifically VAR, VALUE, ESC, and USERVAR.",
      "ja": "サーバ・シードが「7D3E488F18080404」であり、ケルベロスサービストークンが始まる場合、上記の例で送信実際のバイトは、以下ヘクスに示されている「DFB0402F22ABA3BA ...」。トークンの長さは16384のバイトかもしれないと、この文書が非常に大きくなるだろうとして、完全なKerberosサービストークンは、ここに示されていません。第6節で説明したように、クライアントは、Telnet環境オプション[RFC1572]、特にVAR、VALUE、ESC、およびUSERVARとして見ることができる任意のKerberosのトークンバイトを、エスケープ、および/またはバイトスタッフなければなりません。"
    },
    {
      "indent": 3,
      "text": "iSeries Telnet server            Enhanced Telnet client\n--------------------------       -------------------------\nFF FD 27                    -->\n                            <--  FF FB 27\nFF FA 27 01 03 49 42 4D\n52 53 45 45 44 7D 3E 48\n8F 18 08 04 04 00 03 FF\nF0                          -->\n                                 FF FA 27 00 03 49 42 4D\n                                 54 49 43 48 45 54 01 DF\n                                 B0 40 2F 22 AB A3 BA...\n                            <--  FF F0",
      "raw": true
    },
    {
      "indent": 0,
      "text": "7. Device Name Collision Processing",
      "section_title": true,
      "ja": "7.デバイス名の衝突処理"
    },
    {
      "indent": 3,
      "text": "Device name collision occurs when a Telnet client sends the Telnet server a virtual device name that it wants to use, but that device is already in use on the server. When this occurs, the Telnet server sends a request to the client asking it to try another device name. The environment option negotiation uses the USERVAR name of DEVNAME to communicate the virtual device name. The following shows how the Telnet server will request the Telnet client to send a different DEVNAME when device name collision occurs.",
      "ja": "Telnetクライアントは、それが使用することを望んでいることTelnetサーバ仮想デバイス名を送信しますが、そのデバイスがサーバ上ですでに使用されているとき、デバイス名の衝突が発生します。これが発生すると、Telnetサーバは、別のデバイス名をしようとすることを求めて、クライアントに要求を送信します。環境オプション交渉は、仮想デバイス名を通信するDEVNAMEのUSERVAR名を使用しています。以下は、Telnetサーバは、デバイス名の衝突が発生したときに異なるDEVNAMEを送信するためにTelnetクライアントを要求する方法を示しています。"
    },
    {
      "indent": 3,
      "text": "iSeries Telnet server            Enhanced Telnet client\n--------------------------       -------------------------\nIAC SB NEW-ENVIRON SEND\nVAR USERVAR IAC SE         -->",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Server requests all environment variables be sent.",
      "ja": "サーバーは、すべての環境変数を送信することを要求します。"
    },
    {
      "indent": 30,
      "text": "      IAC SB NEW-ENVIRON IS USERVAR\n      \"DEVNAME\" VALUE \"MYDEVICE1\"\n      USERVAR \"xxxxx\" VALUE \"xxx\"\n      ...\n<--   IAC SE",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Client sends all environment variables, including DEVNAME. Server tries to select device MYDEVICE1. If the device is already in use, server requests DEVNAME be sent again.",
      "ja": "クライアントがDEVNAMEを含むすべての環境変数を送信します。サーバーは、デバイスMYDEVICE1を選択しようとします。デバイスが既に使用されている場合は、サーバー要求を再送信することがDEVNAME。"
    },
    {
      "indent": 3,
      "text": "IAC SB NEW-ENVIRON SEND USERVAR \"DEVNAME\" IAC SE -->",
      "ja": "IAC SB NEW-ENVIRON USERVA \"DEVNAME\" IAC SEを送ります - >"
    },
    {
      "indent": 3,
      "text": "Server sends a request for a single environment variable: DEVNAME",
      "ja": "サーバーは、単一の環境変数のための要求を送信します。DEVNAME"
    },
    {
      "indent": 30,
      "text": "      IAC SB NEW-ENVIRON IS USERVAR\n<--   \"DEVNAME\" VALUE \"MYDEVICE2\" IAC SE",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Client sends one environment variable, calculating a new value of MYDEVICE2. If MYDEVICE2 is different from the last request, then server tries to select device MYDEVICE2, else server disconnects client. If MYDEVICE2 is also in use, server will send DEVNAME request again and keep doing so until it receives a device that is not in use, or the same device name twice in row.",
      "ja": "クライアントがMYDEVICE2の新しい値を計算し、1つの環境変数を送信します。 MYDEVICE2が最後の要求と異なる場合は、サーバーがデバイスMYDEVICE2を選択しようとすると、他のサーバーは、クライアントを切断します。 MYDEVICE2が使用中にもある場合は、サーバが再びDEVNAME要求を送信し、それが2回連続で使用されていないデバイス、または同じデバイス名を受信するまでそう続けます。"
    },
    {
      "indent": 0,
      "text": "8. Enhanced Printer Emulation Support",
      "section_title": true,
      "ja": "8.拡張プリンタエミュレーションサポート"
    },
    {
      "indent": 3,
      "text": "Telnet environment option USERVARs have been defined to allow a compliant Telnet client more control over the Telnet server virtual device on the iSeries. These USERVARs allow the client Telnet to select a previously created virtual device or auto-create a new virtual device with requested attributes.",
      "ja": "Telnetの環境オプションのUserVars準拠TelnetクライアントにiSeries上のTelnetサーバ仮想デバイスをより細かく制御できるように定義されています。これらのUserVarsは、クライアントTelnetは以前に作成した仮想デバイスを選択するか、要求された属性を持つ新しい仮想デバイスを自動作成することができます。"
    },
    {
      "indent": 3,
      "text": "This makes the enhancements available to any Telnet client that chooses to support the new negotiations.",
      "ja": "これは、新しい交渉をサポートすることを選択した任意のTelnetクライアントへの拡張が利用できるようになります。"
    },
    {
      "indent": 3,
      "text": "The USERVARs defined to accomplish this are:",
      "ja": "これを達成するために定義されたのUserVarsは以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "USERVAR       VALUE            EXAMPLE           DESCRIPTION\n------------- ---------------- ----------------  -------------------\nDEVNAME       us-ascii char(x) PRINTER1          Printer device name\nIBMIGCFEAT    us-ascii char(6) 2424J0            IGC feature (DBCS)\nIBMMSGQNAME   us-ascii char(x) QSYSOPR           *MSGQ name\nIBMMSGQLIB    us-ascii char(x) QSYS              *MSGQ library\nIBMFONT       us-ascii char(x) 12                Font\nIBMFORMFEED   us-ascii char(1) C | U | A         Formfeed\nIBMTRANSFORM  us-ascii char(1) 1 | 0             Transform\nIBMMFRTYPMDL  us-ascii char(x) *IBM42023         Mfg. type and model\nIBMPPRSRC1    binary(1)        1-byte hex field  Paper source 1\nIBMPPRSRC2    binary(1)        1-byte hex field  Paper source 2\nIBMENVELOPE   binary(1)        1-byte hex field  Envelope hopper\nIBMASCII899   us-ascii char(1) 1 | 0             ASCII 899 support\nIBMWSCSTNAME  us-ascii char(x) *NONE             WSCST name\nIBMWSCSTLIB   us-ascii char(x) *LIBL             WSCST library",
      "raw": true
    },
    {
      "indent": 3,
      "text": "x - up to a maximum of 10 characters",
      "ja": "X  -  10文字の最大まで"
    },
    {
      "indent": 3,
      "text": "The \"IBM\" prefix on the USERVARs denotes iSeries-specific attributes.",
      "ja": "UserVarsの「IBM」プレフィックスは、iSeries固有の属性を表します。"
    },
    {
      "indent": 3,
      "text": "The DEVNAME USERVAR is used for both displays and printers. The IBMFONT and IBMASCII899 are used only for SBCS environments.",
      "ja": "DEVNAME USERVARは、ディスプレイとプリンタの両方に使用されます。 IBMFONTとIBMASCII899だけSBCS環境のために使用されています。"
    },
    {
      "indent": 3,
      "text": "For a description of most of these parameters (drop the \"IBM\" from the USERVAR) and their permissible values, refer to Chapter 8 in the Communications Configuration Reference [COMM-CONFIG].",
      "ja": "これらのパラメータ（USERVARから「IBM」をドロップ）とその許容値のほとんどについては、通信構成リファレンス[COMM-CONFIG]第8章を参照。"
    },
    {
      "indent": 3,
      "text": "The IBMIGCFEAT supports the following variable DBCS language identifiers in position 5 (positions 1-4 must be '2424'; position 6 must be '0'):",
      "ja": "IBMIGCFEATは（「2424」でなければならない位置1~4、位置6「0」でなければならない）位置5における次の変数DBCS言語識別子をサポートしています。"
    },
    {
      "indent": 7,
      "text": "'J' = Japanese              'K' = Korean\n'C' = Traditional Chinese   'S' = Simplified Chinese",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The IBMTRANSFORM and IBMASCII899 values correspond to:",
      "ja": "IBMTRANSFORMとIBMASCII899値に対応します。"
    },
    {
      "indent": 7,
      "text": "'1' = Yes '0' = No",
      "ja": "'1' =はい '0' =いいえ"
    },
    {
      "indent": 3,
      "text": "The IBMFORMFEED values correspond to:",
      "ja": "IBMFORMFEED値に相当します。"
    },
    {
      "indent": 7,
      "text": "'C' = Continuous 'U' = Cut 'A' = Autocut",
      "ja": "'C' =連続 'U' =カット '' =オートカット"
    },
    {
      "indent": 3,
      "text": "The IBMPPRSRC1, IBMPPRSRC2, and IBMENVELOPE custom USERVARs do not map directly to their descriptions in Chapter 8 in the Communications Configuration Reference [COMM-CONFIG]. To map these, use the index listed here:",
      "ja": "IBMPPRSRC1、IBMPPRSRC2、およびIBMENVELOPEカスタムのUserVarsは、通信構成リファレンス[COMM-CONFIG]第8章の説明を直接マップすることはありません。これらをマッピングするには、ここに記載されているインデックスを使用します。"
    },
    {
      "indent": 3,
      "text": "IBMPPRSRC1    HEX     IBMPPRSRC2    HEX     IBMENVELOPE    HEX\n----------   -----    ----------   -----    -----------   -----\n*NONE        'FF'X    *NONE        'FF'X    *NONE         'FF'X\n*MFRTYPMDL   '00'X    *MFRTYPMDL   '00'X    *MFRTYPMDL    '00'X\n*LETTER      '01'X    *LETTER      '01'X    *B5           '06'X\n*LEGAL       '02'X    *LEGAL       '02'X    *MONARCH      '09'X\n*EXECUTIVE   '03'X    *EXECUTIVE   '03'X    *NUMBER9      '0A'X\n*A4          '04'X    *A4          '04'X    *NUMBER10     '0B'X\n*A5          '05'X    *A5          '05'X    *C5           '0C'X\n*B5          '06'X    *B5          '06'X    *DL           '0D'X\n*CONT80      '07'X    *CONT80      '07'X\n*CONT132     '08'X    *CONT132     '08'X\n*A3          '0E'X    *A3          '0E'X\n*B4          '0F'X    *B4          '0F'X\n*LEDGER      '10'X    *LEDGER      '10'X",
      "raw": true
    },
    {
      "indent": 0,
      "text": "9. Telnet Printer Terminal Types",
      "section_title": true,
      "ja": "9. Telnetのプリンターターミナルタイプ"
    },
    {
      "indent": 3,
      "text": "New Telnet options are defined for the printer pass-through mode of operation. To enable printer pass-through mode, both the client and server must agree to support at least the Transmit-Binary, End-Of-Record, and Terminal-Type Telnet options. The following are new terminal types for printers:",
      "ja": "新しいTelnetのオプションは、操作のプリンタパススルーモード用に定義されています。プリンタパススルーモードを有効にするには、クライアントとサーバーの両方をサポートすることに同意する必要があり、少なくとも送信-バイナリ、レコードの終わり、及びターミナル型のTelnetオプション。プリンタ用の新しい端末タイプは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "TERMINAL-TYPE  DESCRIPTION\n-------------  -------------------\nIBM-5553-B01   Double-Byte printer\nIBM-3812-1     Single-Byte printer",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Specific characteristics of the IBM-5553-B01 or IBM-3812-1 printers are specified through the USERVAR IBMMFRTYPMDL, which specifies the manufacturer type and model.",
      "ja": "IBM-5553-B01またはIBM-3812から1プリンタの特定の特性は、製造業者のタイプおよびモデルを指定USERVAR IBMMFRTYPMDL、を介して指定されています。"
    },
    {
      "indent": 3,
      "text": "An example of a typical negotiation process to establish printer pass-through mode of operation is shown below. In this example, the server initiates the negotiation by sending the DO TERMINAL-TYPE request.",
      "ja": "操作のプリンタパススルーモードを確立するために、典型的なネゴシエーションプロセスの例を以下に示します。この例では、サーバーは、DO TERMINAL-TYPE要求を送信することで交渉を開始します。"
    },
    {
      "indent": 3,
      "text": "For DBCS environments, if IBMTRANSFORM is set to 1 (use Host Print Transform), then the virtual device created is 3812, not 5553. Therefore, IBM-3812-1 (and not IBM-5553-B01) should be negotiated for TERMINAL-TYPE.",
      "ja": "IBMTRANSFORMは（使用ホスト印刷変換）1に設定されている場合、DBCS環境の場合、次に作成された仮想デバイスがない、TERMINAL-のために交渉しなければならないため5553.、IBM-3812から1（およびいないIBM-5553-B01）3812でありますタイプ。"
    },
    {
      "indent": 3,
      "text": "iSeries Telnet server           Enhanced Telnet client\n--------------------------      --------------------------\nIAC DO NEW-ENVIRON         -->\n                           <--  IAC WILL NEW-ENVIRON\nIAC SB NEW-ENVIRON SEND\nVAR USERVAR IAC SE         -->\n                                IAC SB NEW-ENVIRON IS\n                                USERVAR \"DEVNAME\" VALUE \"PCPRINTER\"\n                                USERVAR \"IBMMSGQNAME\" VALUE \"QSYSOPR\"\n                                USERVAR \"IBMMSGQLIB\" VALUE \"*LIBL\"\n                                USERVAR \"IBMTRANSFORM\" VALUE \"0\"\n                                USERVAR \"IBMFONT\" VALUE \"12\"\n                                USERVAR \"IBMFORMFEED\" VALUE \"C\"\n                                USERVAR \"IBMPPRSRC1\" VALUE ESC '01'X\n                                USERVAR \"IBMPPRSRC2\" VALUE '04'X\n                                USERVAR \"IBMENVELOPE\" VALUE IAC 'FF'X",
      "raw": true
    },
    {
      "indent": 3,
      "text": " <-- IAC SE IAC DO TERMINAL-TYPE --> <-- IAC WILL TERMINAL-TYPE IAC SB TERMINAL-TYPE SEND",
      "ja": "< -  IAC SE IAC DO TERMINAL-TYPE  - > < -  IAC WILL TERMINAL-TYPE IAC SB TERMINAL-TYPEのSEND"
    },
    {
      "indent": 3,
      "text": "IAC SE --> IAC SB TERMINAL-TYPE IS IBM-3812-1 <-- IAC SE IAC DO BINARY --> <-- IAC WILL BINARY IAC DO EOR --> <-- IAC WILL EOR",
      "ja": "IAC SE  -  IAC SE IAC DO BINARY  -   - > < -  IAC WILL BINARY IAC DO EOR  - > < -  IAC WILL EOR> IAC SB TERMINAL-TYPEは、IBM-3812から1 <IS"
    },
    {
      "indent": 3,
      "text": "Some points about the above example. The IBMPPRSRC1 value requires escaping the value using ESC according to Telnet environment options [RFC1572]. The IBMPPRSRC2 does not require an ESC character since '04'X has no conflict with environment options. Finally, to send 'FF'X for the IBMENVELOPE value, escape the 'FF'X value by using another 'FF'X (called \"doubling\"), so as not to have the value interpreted as a Telnet character per the Telnet protocol specification [RFC854].",
      "ja": "上記の例についていくつかのポイント。 IBMPPRSRC1値は、Telnet環境オプション[RFC1572]に記載のESCを使用して値をエスケープが必要です。 「04'Xは、環境オプションと競合していないのでIBMPPRSRC2は、ESC文字は必要ありません。最後に、値がTelnetプロトコルごとのTelnet文字として解釈しているしないように、別の「FF'X（ 『倍増』と呼ばれる）を使用してFF'X値「エスケープ、IBMENVELOPE値のためFF'X」を送信します仕様[RFC854]。"
    },
    {
      "indent": 3,
      "text": "Actual bytes transmitted in the above example are shown in hex below.",
      "ja": "上記の例で送信実際のバイトは以下ヘクスに示されています。"
    },
    {
      "indent": 3,
      "text": "iSeries Telnet server            Enhanced Telnet client\n--------------------------       --------------------------\nFF FD 27                    -->\n                            <--  FF FB 27\nFF FA 27 01 00 03 FF F0     -->\n                                 FF FA 27 00 03 44 45 56\n                                 4E 41 4D 45 01 50 43 50\n                                 52 49 4E 54 45 52 03 49\n                                 42 4D 4D 53 47 51 4E 41\n                                 4D 45 01 51 53 59 53 4F\n                                 50 52 03 49 42 4D 4D 53\n                                 47 51 4C 49 42 01 2A 4C\n                                 49 42 4C 03 49 42 4D 54\n                                 52 41 4E 53 46 4F 52 4D\n                                 01 30 03 49 42 4D 46 4F\n                                 4E 54 01 31 32 03 49 42\n                                 4D 46 4F 52 4D 46 45 45\n                                 44 01 43 03 49 42 4D 50\n                                 50 52 53 52 43 31 01 02\n                                 01 03 49 42 4D 50 50 52\n                                 53 52 43 32 01 04 03 49\n                                 42 4D 45 4E 56 45 4C 4F\n                            <--  50 45 01 FF FF FF F0\nFF FD 18                    -->\n                            <--  FF FB 18\nFF FA 18 01 FF F0           -->\n                                 FF FA 18 00 49 42 4D 2D\n                            <--  33 38 31 32 2D 31 FF F0\nFF FD 00                    -->\n                            <--  FF FB 00\nFF FD 19                    -->\n                                 FF FB 19",
      "raw": true
    },
    {
      "indent": 0,
      "text": "10. Startup Response Record for Printer and Display Devices",
      "section_title": true,
      "ja": "プリンタや表示デバイスのための10の起動レスポンスを記録"
    },
    {
      "indent": 3,
      "text": "Once Telnet negotiation for a 5250 pass-through mode is completed, the iSeries Telnet server will initiate a virtual device (printer or display) power-on sequence on behalf of the Telnet client. The Telnet server will supply a Startup Response Record to the Telnet client with the status of the device power-on sequence, indicating success or failure of the virtual device power-on sequence.",
      "ja": "5250パススルーモード用のTelnet交渉が完了すると、iSeriesのTelnetサーバーは仮想デバイス（プリンタやディスプレイ）Telnetクライアントに代わって、電源投入シーケンスを開始します。 Telnetサーバーは仮想デバイスの電源投入シーケンスの成功または失敗を示す、デバイスの電源投入シーケンスの状態でのTelnetクライアントに起動レスポンスのレコードを供給します。"
    },
    {
      "indent": 3,
      "text": "This section shows an example of two Startup Response Records. The source device is a type 3812 model 01 printer with the name \"PCPRINTER\" on the target system \"TARGET\".",
      "ja": "このセクションでは、2つのスタートアップ応答記録の一例を示しています。ソース機器は、ターゲット・システム「TARGET」に名前「PCPRINTER」とタイプ3812モデル01プリンタです。"
    },
    {
      "indent": 3,
      "text": "Figure 1 shows an example of a successful response; Figure 2 shows an example of an error response.",
      "ja": "図1は、正常な応答の例を示す図です。図2は、エラー応答の例を示しています。"
    },
    {
      "indent": 0,
      "text": "10.1. Example of a Success Response Record",
      "section_title": true,
      "ja": "10.1. 成功応答レコードの例"
    },
    {
      "indent": 3,
      "text": "The response record in Figure 1 was sent by an iSeries at Release V4R2. It is an example of the target sending back a successful Startup Response Record.",
      "ja": "図1の応答レコードをリリースV4R2のiSeriesによって送信されました。それは成功したスタートアップのレスポンスの記録を送り返す対象の一例です。"
    },
    {
      "indent": 3,
      "text": "+------------------------------------------------------------------+\n|       +-----  Pass-Through header                                |\n|       |          +---  Response data                             |\n|       |          |            +----  Start diagnostic information|\n|       |          |            |                                  |\n| +----------++----------++--------------------------------------- |\n| |          ||          ||                                        |\n| 004912A090000560060020C0003D0000C9F9F0F2E3C1D9C7C5E34040D7C3D7D9 |\n|                                 |      | T A R G E T     P C P R |\n|                                 +------+                         |\n|                           Response Code (I902)                   |\n|                                                                  |\n| ---------------------------------------------------------------- |\n|                                                                  |\n| C9D5E3C5D9400000000000000000000000000000000000000000000000000000 |\n|  I N T E R                                                       |\n|                                                                  |\n|                  +------- End of diagnostic information          |\n|                  |                                               |\n| -----------------+                                               |\n|                  |                                               |\n| 000000000000000000                                               |\n+------------------------------------------------------------------+",
      "raw": true
    },
    {
      "indent": 13,
      "text": "Figure 1. Example of a success response record",
      "ja": "成功応答レコードの図1の例"
    },
    {
      "indent": 3,
      "text": "- '0049'X = Length pass-through data, including this length field - '12A0'X = GDS LU6.2 header - '90000560060020C0003D0000'X = Fixed value fields - 'C9F9F0F2'X = Response Code (I902) - 'E3C1D9C7C5E34040'X = System Name (TARGET) - 'D7C3D7D9C9D5E3C5D940'X = Object Name (PCPRINTER)",
      "ja": " -  '0049'X =長パススルーこの長さフィールドを含むデータ、 - ' 12A0'X = GDS LU6.2ヘッダー -  '90000560060020C0003D0000'X =固定値フィールド - ' C9F9F0F2'X =応答コード（I902） - 「E3C1D9C7C5E34040 'X =システム名（TARGET） - ' D7C3D7D9C9D5E3C5D940'X =オブジェクト名（PCPRINTER）"
    },
    {
      "indent": 0,
      "text": "10.2. Example of an Error Response Record",
      "section_title": true,
      "ja": "10.2. エラー応答レコードの例"
    },
    {
      "indent": 3,
      "text": "The response record in Figure 2 is one that reports an error. The virtual device named \"PCPRINTER\" is not available on the target system \"TARGET\" because the device is not available. You would normally see this error if the printer were already assigned to another Telnet session.",
      "ja": "図2の応答レコードはエラーを報告し1です。デバイスが使用できないため、「PCPRINTER」という名前の仮想デバイスは、ターゲット・システム「TARGET」では使用できません。プリンタがすでに別のTelnetセッションに割り当てられていた場合は、通常、このエラーが表示されます。"
    },
    {
      "indent": 3,
      "text": "+------------------------------------------------------------------+\n|       +-----  Pass-Through header                                |\n|       |          +---  Response data                             |\n|       |          |            +----  Start diagnostic information|\n|       |          |            |                                  |\n| +----------++----------++--------------------------------------- |\n| |          ||          ||                                        |\n| 004912A09000056006008200003D0000F8F9F0F2E3C1D9C7C5E34040D7C3D7D9 |\n|                                 |      | T A R G E T     P C P R |\n|                                 +------+                         |\n|                           Response Code (8902)                   |\n|                                                                  |\n| ---------------------------------------------------------------- |\n|                                                                  |\n| C9D5E3C5D9400000000000000000000000000000000000000000000000000000 |\n|  I N T E R                                                       |\n|                                                                  |\n|                  +------- End of diagnostic information          |\n|                  |                                               |\n| -----------------+                                               |\n|                  |                                               |\n| 000000000000000000                                               |\n+------------------------------------------------------------------+",
      "raw": true
    },
    {
      "indent": 13,
      "text": "Figure 2. Example of an error response record",
      "ja": "エラー応答レコードの図2の例"
    },
    {
      "indent": 3,
      "text": "- '0049'X = Length pass-through data, including this length field - '12A0'X = GDS LU6.2 header - '90000560060020C0003D0000'X = Fixed value fields - 'F8F9F0F2'X = Response Code (8902) - 'E3C1D9C7C5E34040'X = System Name (TARGET) - 'D7C3D7D9C9D5E3C5D940'X = Object Name (PCPRINTER)",
      "ja": " -  '0049'X =長パススルーこの長さフィールドを含むデータ、 - ' 12A0'X = GDS LU6.2ヘッダー -  '90000560060020C0003D0000'X =固定値フィールド - ' F8F9F0F2'X =応答コード（8902） - 「E3C1D9C7C5E34040 'X =システム名（TARGET） - ' D7C3D7D9C9D5E3C5D940'X =オブジェクト名（PCPRINTER）"
    },
    {
      "indent": 0,
      "text": "10.3. Example of a Response Record with Device Name Retry",
      "section_title": true,
      "ja": "10.3. デバイス名リトライと応答レコードの例"
    },
    {
      "indent": 3,
      "text": "The Response Record can be used in conjunction with the DEVNAME Environment variable to allow client emulators to inform users of connection failures. In addition, this combination could be used by client emulators that accept multiple device names to try on session connections. The client would be able to walk through a list of possible device names and provide feedback based on the response code(s) received for each device name that was rejected.",
      "ja": "レスポンスのレコードは、クライアントエミュレータが接続障害のユーザーに通知できるようにするDEVNAME環境変数と組み合わせて使用​​することができます。また、この組み合わせは、セッション接続にしようとする複数のデバイス名を受け入れ、クライアントエミュレータで使用することができます。クライアントは、可能なデバイス名のリストを歩くと応答コード（複数可）に基づいてフィードバックを提供拒否された各デバイス名のために受信することができるだろう。"
    },
    {
      "indent": 3,
      "text": "The following sequence shows a negotiation between the client and the server in which a named device \"RFCTEST\" is requested by the client. The device name is already assigned to an existing condition. The server responds with the Response Record showing an 8902 response code. The client could use this information to inform the user that the device name just tried was already in use. Following the Response Record the server would then invite the client to try another device name. Because the same device name was used again by the client, the server closed the session.",
      "ja": "次のシーケンスは、指定したデバイス「RFCTESTが」クライアントによって要求されているクライアントとサーバの間の交渉を示しています。デバイス名は既に存在している状態に割り当てられています。サーバが応答録音は8902応答コードを示すで応答します。クライアントは、ちょうどしようとしたデバイス名が既に使用されていたユーザーに知らせるために、この情報を使用することができます。応答レコードの後、サーバは、別のデバイス名をしようとするクライアントを招待します。同じデバイス名がクライアントによって再び使用されたため、サーバーはセッションを閉じました。"
    },
    {
      "indent": 3,
      "text": "iSeries Telnet server            Enhanced Telnet client\n--------------------------       -------------------------\nIAC DO NEW-ENVIRON          -->\n                            <--   IAC WILL NEW-ENVIRON\nIAC DO TERMINAL-TYPE        -->\n                            <--   IAC WILL TERMINAL-TYPE\nIAC SB NEW-ENVIRON SEND\nUSERVAR \"IBMRSEEDxxxxxxxx\"\nVAR USERVAR IAC SE          -->\n                                  IAC SB NEW-ENVIRON IS\n                                  USERVAR \"DEVNAME\"\n                                  VALUE \"RFCTEST\"\n                                  USERVAR \"IBMSENDCONFREC\"\n                                  VALUE \"YES\"\n                            <--   IAC SE\nIAC SB TERMINAL-TYPE SEND\nIAC SE                      -->\n                                  IAC SB TERMINAL-TYPE IS\n                            <--   IBM-3180-2 IAC SE\n                                  (terminal type negotiations\n                                  completed)\nIAC DO EOR                  -->\n                            <--   IAC WILL EOR\nIAC WILL EOR                -->\n                            <--   IAC DO EOR\nIAC DO BINARY               -->\n                            <--   IAC WILL BINARY\nIAC WILL BINARY             -->\n                            <--   IAC DO BINARY\n(73 BYTE RFC 1205 RECORD\nWITH 8902 ERROR CODE)       -->\nIAC SB NEW-ENVIRON SEND\nUSERVAR \"DEVNAME\"\nIAC SE                      -->\n                                  IAC SB NEW-ENVIRON IS\n                                  USERVAR \"DEVNAME\"\n                                  VALUE \"RFCTEST\"\n                                  USERVAR \"IBMSENDCONFREC\"\n                                  VALUE \"YES\"\n                            <--   IAC SE\n(server closes connection)",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Actual bytes transmitted in the above example are shown in hex below.",
      "ja": "上記の例で送信実際のバイトは以下ヘクスに示されています。"
    },
    {
      "indent": 3,
      "text": "iSeries Telnet server            Enhanced Telnet client\n--------------------------       --------------------------\nFF FD 27                    -->\n                            <--  FF FB 27\nFF FD 18                    -->\n                            <--  FF FB 18\nFF FA 27 01 03 49 42 4D\n52 53 45 45 44 C4 96 67\n76 9A 23 E3 34 00 03 FF\nF0                          -->\n                                 FF FA 27 00 03 44 45 56\n                                 4E 41 4D 45 01 52 46 43\n                                 54 45 53 54 03 49 42 4D\n                                 53 45 4E 44 43 4F 4E 46\n                                 52 45 43 01 59 45 53 FF\n                            <--  F0\nFF FA 18 01 FF F0           -->\n                            <--  FF FA 18 00 49 42 4D 2D\n                                 33 31 38 30 2D 32 FF F0\nFF FD 19                    -->\n                            <--  FF FB 19\nFF FB 19                    -->\n                            <--  FF FD 19\nFF FD 00                    -->\n                            <--  FF FB 00\nFF FB 00                    -->\n                            <--  FF FD 00\n00 49 12 A0 90 00 05 60\n06 00 20 C0 00 3D 00 00\nF8 F9 F0 F2 D9 E2 F0 F3\nF5 40 40 40 00 00 00 00\n00 00 00 00 00 00 00 00\n00 00 00 00 00 00 00 00\n00 00 00 00 00 00 00 00\n00 00 00 00 00 00 00 00\n00 00 00 00 00 00 00 00\n00 FF EF                    -->\nFF FA 27 01 03 44 45 56\n4E 41 4D 45 FF F0           -->\n                            <--  FF FA 27 00 03 44 45 56\n                                 4E 41 4D 45 01 52 46 43\n                                 54 45 53 54 03 49 42 4D\n                                 53 45 4E 44 43 4F 4E 46\n                                 52 45 43 01 59 45 53 FF\n                                 F0",
      "raw": true
    },
    {
      "indent": 0,
      "text": "10.4. Response Codes",
      "section_title": true,
      "ja": "10.4. 応答コード"
    },
    {
      "indent": 3,
      "text": "The Start-Up Response Record success response codes:",
      "ja": "スタートアップ応答を録音成功応答コード："
    },
    {
      "indent": 3,
      "text": "CODE    DESCRIPTION\n----    ------------------------------------------------------\nI901    Virtual device has less function than source device.\nI902    Session successfully started.\nI906    Automatic sign-on requested, but not allowed.\n        Session still allowed; a sign-on screen will be\n        coming.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The Start-Up Response Record error response codes:",
      "ja": "スタートアップ応答を記録エラー応答コード："
    },
    {
      "indent": 3,
      "text": "CODE    DESCRIPTION\n----    ------------------------------------------------------\n2702    Device description not found.\n2703    Controller description not found.\n2777    Damaged device description.\n8901    Device not varied on.\n8902    Device not available.\n8903    Device not valid for session.\n8906    Session initiation failed.\n8907    Session failure.\n8910    Controller not valid for session.\n8916    No matching device found.\n8917    Not authorized to object.\n8918    Job canceled.\n8920    Object partially damaged.\n8921    Communications error.\n8922    Negative response received.\n8923    Start-up record built incorrectly.\n8925    Creation of device failed.\n8928    Change of device failed.\n8929    Vary on or vary off failed.\n8930    Message queue does not exist.\n8934    Start-up for S/36 WSF received.\n8935    Session rejected.\n8936    Security failure on session attempt.\n8937    Automatic sign-on rejected.\n8940    Automatic configuration failed or not allowed.\nI904    Source system at incompatible release.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The Start-Up Response Record error response codes for non-Kerberos Services Token automatic sign-on:",
      "ja": "非ケルベロスサービストークン自動サインオンの起動レスポンスを記録エラー応答コード："
    },
    {
      "indent": 6,
      "text": "CODE    DESCRIPTION\n----    ------------------------------------------------------\n0001    System error.\n0002    Userid unknown.\n0003    Userid disabled.\n0004    Invalid password/passphrase/token.\n0005    Password/passphrase/token is expired.\n0006    Pre-V2R2 password.\n0008    Next invalid password/passphrase/token will revoke userid.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The Start-Up Response Record error response codes for Kerberos Services Token automatic sign-on support:",
      "ja": "ケルベロスサービストークンの自動サインオンのサポートのためのスタートアップ応答を記録エラー応答コード："
    },
    {
      "indent": 3,
      "text": "CODE    DESCRIPTION\n----    ------------------------------------------------------\n0001    User profile is disabled.\n0002    Kerberos principal maps to a system user profile.\n0003    Enterprise Identity Map (EIM) configuration error.\n0004    EIM does not map Kerberos principal to user profile.\n0005    EIM maps Kerberos principal to multiple user profiles.\n0006    EIM maps Kerberos principal to user profile not found on\n        system.\n1000    None of the requested mechanisms are supported by the\n        local system.\n2000    The input name is not formatted properly or is not valid.\n6000    The received input token contains an incorrect signature.\n7000    No credentials available or credentials valid for context\n        init only.\n9000    Consistency checks performed on the input token failed.\nA000    Consistency checks on the cred structure failed.\nB000    Credentials are no longer valid.\nD000    The runtime failed for reasons that are not defined at the\n        GSS level.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "In the case where the USERVAR, DEVNAME USERVAR, IBMSENDCONFREC USERVAR, IBMSUBSPW USERVAR, and IBMRSEED USERVAR are all used together, any device errors will take precedence over automatic sign-on errors. That is:",
      "ja": "USERVARは、DEVNAME USERVAR、IBMSENDCONFREC USERVAR、IBMSUBSPW USERVAR、及びIBMRSEED USERVARを全て一緒に使用されている場合には、任意のデバイスのエラーは、自動サインオンエラーよりも優先されます。あれは："
    },
    {
      "indent": 3,
      "text": "1) If the requested named device is not available or an error occurs when attempting to create the device on the server system, a device related return code (i.e., 8902) will be sent to the client system in the display confirmation record.",
      "ja": "要求された名前のデバイスが利用できない場合、またはサーバー・システム上のデバイス、デバイス関連のリターン・コードを作成しようとしたときにエラーが発生した場合1）（すなわち、8902）は、表示確認レコードでクライアントシステムに送信されます。"
    },
    {
      "indent": 3,
      "text": "2) If the requested named device is available or no errors occur when attempting to create the device on the server system, an automatic sign-on return code (i.e., 0002) will be sent to the client system in the display confirmation record.",
      "ja": "2）要求されたという名前のデバイスが利用可能であるか、またはサーバシステム上のデバイスを作成しようとするとエラーが発生しない場合は、自動サインオン戻りコード（すなわち、0002）は、表示確認レコードのクライアント・システムに送信されます。"
    },
    {
      "indent": 0,
      "text": "11. Printer Steady-State Pass-Through Interface",
      "section_title": true,
      "ja": "11.プリンタ定常パススルーインターフェイス"
    },
    {
      "indent": 3,
      "text": "The information in this section applies to the pass-through session after the receipt of startup confirmation records is complete.",
      "ja": "起動時の確認レコードの受信が完了した後、このセクションの情報は、パススルー・セッションに適用されます。"
    },
    {
      "indent": 3,
      "text": "Following is the printer header interface used by Telnet.",
      "ja": "以下のTelnetで使用されるプリンタヘッダインタフェースです。"
    },
    {
      "indent": 3,
      "text": "+------------------------------------------------------------------+\n|   +-- Length of structure (LLLL)                                 |\n|   |                                                              |\n|   |    +-- GDS identifier                                        |\n|   |    |                                                         |\n|   |    |    +-- Data flow record                                 |\n|   |    |    |                                                    |\n|   |    |    |   +-- Length of pass-through specific header (LL)  |\n|   |    |    |   |                                                |\n|   |    |    |   |   +-- Flags                                    |\n|   |    |    |   |   |                                            |\n|   |    |    |   |   |   +-- Printer operation code               |\n|   |    |    |   |   |   |                                        |\n|   |    |    |   |   |   |      +-- Diagnostic field - zero pad to|\n|   |    |    |   |   |   |      |   LL specified                  |\n|   |    |    |   |   |   |      |                                 |\n|   |    |    |   |   |   |      |            +-- Printer data     |\n|   |    |    |   |   |   |      |            |                    |\n| +--+ +--+ +--+ ++ +--+ ++ +----------+ +----------------+        |\n| |  | |  | |  | || |  | || |          | |                |        |\n| xxxx 12A0 xxxx xx xxxx xx xxxxxxxxxxxx ... print data ...        |\n|                                                                  |\n+------------------------------------------------------------------+",
      "raw": true
    },
    {
      "indent": 11,
      "text": "Figure 3. Layout of the printer pass-through header",
      "ja": "プリンタパススルーヘッダの図3のレイアウト"
    },
    {
      "indent": 3,
      "text": "BYTES 0-1: Length of structure including this field (LLLL)",
      "ja": "BYTES 0-1：このフィールドを含む構造体の長さ（LLLL）"
    },
    {
      "indent": 3,
      "text": "BYTES 2-3: GDS Identifier ('12A0'X)",
      "ja": "BYTES 2-3：GDS識別子（ '12A0'X）"
    },
    {
      "indent": 3,
      "text": "BYTE 4-5: Data flow record",
      "ja": "BYTE 4-5：データフローレコード"
    },
    {
      "indent": 16,
      "text": "This field contains flags that describe what type of\ndata pass-through should be expected to be found\nfollowing this header.  Generally, bits 0-2 in the first\nbyte are mutually exclusive (that is, if one of them is set to '1'B, the rest will be set to '0'B.) The bits and\ntheir meanings follow.",
      "raw": true
    },
    {
      "indent": 16,
      "text": "BIT DESCRIPTION",
      "ja": "BIT説明"
    },
    {
      "indent": 16,
      "text": "0 Start-Up confirmation 1 Termination record 2 Start-Up Record 3 Diagnostic information included 4 - 5 Reserved 6 Reserved 7 Printer record 8 - 13 Reserved 14 Client-originated (inbound) printer record 15 Server-originated (outbound) printer record",
      "ja": "5予約6予約7プリンタレコード8  -   -  13リザーブ14クライアント発信（着信）プリンタレコード15サーバ発信（送信）プリンタ・レコード0スタートアップ確認1終端レコード2スタートアップレコード3診断情報4を含ま"
    },
    {
      "indent": 3,
      "text": "BYTE 6: Length printer pass-through header including this field (LL)",
      "ja": "BYTE 6：このフィールドを含む長さプリンタパススルーヘッダ（LL）"
    },
    {
      "indent": 3,
      "text": "BYTES 7-8: Flags",
      "ja": "BYTES 7-8：フラグ"
    },
    {
      "indent": 5,
      "text": "BYTE 7 BITS: xxxx x111 --> Reserved xxxx 1xxx --> Last of chain xxx1 xxxx --> First of chain xx1x xxxx --> Printer now ready x1xx xxxx --> Intervention Required 1xxx xxxx --> Error Indicator",
      "ja": "BYTE 7 BITS：XXXX X111  - >予約XXXX 1XXX  - チェーンXXX1のXXXXの>最後の - >チェーンの最初のxx1x XXXX  - >プリンタの準備ができましX1XX XXXX  - >要介入1XXX XXXX  - >エラーインジケータ"
    },
    {
      "indent": 5,
      "text": "BYTE 8 BITS: xxxx xxxx --> Reserved",
      "ja": "BYTE 8つのBITS：XXXX XXXX  - >予約"
    },
    {
      "indent": 3,
      "text": "BYTE 9: Printer operation code",
      "ja": "BYTE 9：プリンタの操作コード"
    },
    {
      "indent": 16,
      "text": "'01'X  Print/Print complete\n'02'X  Clear Print Buffers",
      "raw": true
    },
    {
      "indent": 3,
      "text": "BYTE 10-LL: Diagnostic information (Note 1)",
      "ja": "BYTE 10-LL：診断情報（注1）"
    },
    {
      "indent": 5,
      "text": "If BYTE 7 = xx1x xxxx, then bytes 10-LL may contain: Printer ready C9 00 00 00 02",
      "ja": "C9 00 00 00 02プリンタの準備ができて：BYTE 7 = xx1x xxxxの場合は、10-LLが含まれていてもよいバイト"
    },
    {
      "indent": 5,
      "text": "If BYTE 7 = x1xx xxxx, then bytes 10-LL may contain: (Note 2) Command/parameter not valid C9 00 03 02 2x Print check C9 00 03 02 3x Forms check C9 00 03 02 4x Normal periodic condition C9 00 03 02 5x Data stream error C9 00 03 02 6x Machine/print/ribbon check C9 00 03 02 8x",
      "ja": "BYTE 7 = X1XX xxxxの場合は、10-LLが含まれていてもよいバイト：（注2）コマンド/パラメータ有効ではありませんC9 00 03 02 2倍の印刷チェックC9は00 03 02 3倍のフォームは、00 03 02 C9 00 03 02 4倍通常、定期的条件C9をチェック5倍のデータストリームエラーC9 00 03 02 6X機/印刷/リボンチェックC9 00 03 02 8X"
    },
    {
      "indent": 5,
      "text": "If BYTE 7 = 1xxx xxxx, then bytes 10-LL may contain: (Note 3) Cancel 08 11 02 00 Invalid print parameter 08 11 02 29 Invalid print command 08 11 02 28",
      "ja": "バイト7 = 1XXX XXXX、次いで10-LL含むことができるバイトの場合：（注3）08 11 02 00無効な印刷パラメータ08 11 02 29無効な印刷コマンド08 11 02 28キャンセル"
    },
    {
      "indent": 3,
      "text": "Diagnostic information notes:",
      "ja": "診断情報のメモ："
    },
    {
      "indent": 3,
      "text": "1. LL is the length of the structure defined in Byte 6. If no additional data is present, the remainder of the structure must be padded with zeroes.",
      "ja": "追加のデータが存在しない場合1 LLは、構造体の残りの部分がゼロでパディングされなければならない、バイト6で定義された構造体の長さです。"
    },
    {
      "indent": 3,
      "text": "2. These are printer SIGNAL commands. Further information on these commands may be obtained from the 5494 Remote Control Unit Functions Reference guide [5494-CU]. Refer to your iSeries printer documentation for more specific information on these data stream exceptions. The following are some 3812 and 5553 errors that may be seen:",
      "ja": "2.これらは、プリンタSIGNALコマンドです。これらのコマンドの詳細については、[-CU 5494] 5494リモートコントロールユニット関数リファレンスガイドから得ることができます。これらのデータ・ストリームの例外について、より具体的な情報については、ご使用のiSeriesプリンターのマニュアルを参照してください。見られることがあり、いくつかの3812と5553のエラーは、次のとおりです。"
    },
    {
      "indent": 7,
      "text": "Machine check              C9 00 03 02 11\nGraphics check             C9 00 03 02 26\nPrint check                C9 00 03 02 31\nForm jam                   C9 00 03 02 41\nPaper jam                  C9 00 03 02 47\nEnd of forms               C9 00 03 02 50\nPrinter not ready          C9 00 03 02 51\nData stream - class 1      C9 00 03 02 66 loss of text\nData stream - class 2      C9 00 03 02 67 text appearance\nData stream - class 3      C9 00 03 02 68 multibyte control error\nData stream - class 4      C9 00 03 02 69 multibyte control parm\nCover unexpectedly open    C9 00 03 02 81\nMachine check              C9 00 03 02 86\nMachine check              C9 00 03 02 87\nRibbon check               C9 00 03 02 88",
      "raw": true
    },
    {
      "indent": 3,
      "text": "3. These are printer negative responses. Further information on these commands may be obtained from the 5494 Remote Control Unit Functions Reference guide [5494-CU].",
      "ja": "3.これらは、プリンタ否定応答です。これらのコマンドの詳細については、[-CU 5494] 5494リモートコントロールユニット関数リファレンスガイドから得ることができます。"
    },
    {
      "indent": 7,
      "text": "The print data will start in byte LL+1.",
      "ja": "印刷データは、バイトLL + 1で起動します。"
    },
    {
      "indent": 0,
      "text": "11.1. Example of a Print Record",
      "section_title": true,
      "ja": "11.1. 印刷レコードの例"
    },
    {
      "indent": 3,
      "text": "Figure 4 shows the server sending the client data with a print record. This is normally seen following receipt of a Success Response Record, such as the example in Figure 1.",
      "ja": "図4は、印刷レコードとクライアントのデータを送信するサーバを示しています。これは、通常、図1の例として、成功応答レコードの受信を以下に見られます。"
    },
    {
      "indent": 2,
      "text": "+--------------------------------------------------------------------+\n|   +-- Length of structure (LLLL)                                   |\n|   |    +-- GDS identifier                                          |\n|   |    |    +-- Data flow record                                   |\n|   |    |    |   +-- Length of pass-through specific header (LL)    |\n|   |    |    |   |   +-- Flags                                      |\n|   |    |    |   |   |   +-- Printer operation code                 |\n|   |    |    |   |   |   |      +-- Zero pad to LL specified (0A)   |\n|   |    |    |   |   |   |      |            +-- Printer data       |\n|   |    |    |   |   |   |      |            |                      |\n| +--+ +--+ +--+ ++ +--+ ++ +----------+ +---------------------------|\n| |  | |  | |  | || |  | || |          | |                           |\n| 0085 12A0 0101 0A 1800 01 000000000000 34C4012BD20345FF2BD2044C0002|\n|                                                                    |\n| ------------------------------------------------------------       |\n|                                                                    |\n| 2BD2040D00002BD20A8501010201030204022BD20309022BD2061100014A       |\n|                                                                    |\n| ------------------------------------------------------------       |\n|                                                                    |\n| 402BD20601010000012BD306F60000FFFF2BD20A48000001000000010100       |\n|                                                                    |\n| ------------------------------------------------------------       |\n|                                                                    |\n| 2BD10705000B0090012BD2044900F02BD206404A403DE02BD2041500F034       |\n|                                                                    |\n|    end of printer data                                             |\n| -------------------------+                                         |\n|                          |                                         |\n| C4012BD10381FF002BC8034001                                         |\n+--------------------------------------------------------------------+",
      "raw": true
    },
    {
      "indent": 10,
      "text": "Figure 4. Server sending client data with a print record",
      "ja": "印刷レコードとクライアントのデータを送信図4.サーバー"
    },
    {
      "indent": 3,
      "text": "- '0085'X = Logical record length, including this byte (LLLL) - '12A0'X = GDS LU6.2 header - '0101'X = Data flow record (server to client) - '0A'X = Length of pass-through specific header (LL) - '1800'X = First of chain / Last of chain indicators - '01'X = Print - '000000000000'X = Zero pad header to LL specified - '34C401'X = First piece of data for spooled data - Remainder is printer data/commands/orders",
      "ja": "12A0'X = GDS LU6.2ヘッダー -  '0101'X =データフローレコード（クライアントへのサーバ） - ' パスの0A'X =長さ -   -  'このバイト（LLLL）を含む0085'X =論理レコード長、' -through特定ヘッダ（LL） - 「鎖/チェーン・インジケータの最後の1800'X =最初 - 」01'X =プリント - 「000000000000'X =ゼロパッドヘッダが指定さL1に対して」 - データの34C401'Xは=最初の部分スプールデータのための - 残りはプリンタデータ/コマンド/オーダーであります"
    },
    {
      "indent": 0,
      "text": "11.2. Example of a Print Complete Record",
      "section_title": true,
      "ja": "11.2. 印刷完全なレコードの例"
    },
    {
      "indent": 3,
      "text": "Figure 5 shows the client sending the server a print complete record. This would normally follow receipt of a print record, such as the example in Figure 4. This indicates successful completion of a print request.",
      "ja": "図5は、クライアントがサーバーの印刷完全なレコードを送信示しています。これは、通常、これは、印刷要求が正常に完了したことを示している図4にそのような例として、印刷レコードの領収書に従うことになります。"
    },
    {
      "indent": 3,
      "text": "+-------------------------------------------------------------------+\n|   +-- Length of structure (LLLL)                                  |\n|   |    +-- GDS identifier                                         |\n|   |    |    +-- Data flow record                                  |\n|   |    |    |   +-- Length of pass-through specific header (LL)   |\n|   |    |    |   |   +-- Flags                                     |\n|   |    |    |   |   |   +-- Printer operation code                |\n|   |    |    |   |   |   |                                         |\n| +--+ +--+ +--+ ++ +--+ ++                                         |\n| |  | |  | |  | || |  | ||                                         |\n| 000A 12A0 0102 04 0000 01                                         |\n+-------------------------------------------------------------------+",
      "raw": true
    },
    {
      "indent": 9,
      "text": "Figure 5. Client sending server a print complete record",
      "ja": "サーバーの印刷完全なレコードを送信図5.クライアント"
    },
    {
      "indent": 3,
      "text": "- '000A'X = Logical record length, including this byte (LLLL) - '12A0'X = GDS LU6.2 header - '0102'X = Data flow response record (client to server) - '04'X = Length of pass-through specific header (LL) - '0000'X = Good Response - '01'X = Print Complete",
      "ja": " -  'このバイト（LLLL）を含む000A'X =論理レコード長、 - ' 12A0'X = GDS LU6.2ヘッダー -  '0102'Xは=データフロー応答レコード（サーバへのクライアント） - ' の04'X =長さパススルー特定ヘッダ（LL） - 「0000'Xは=良好な応答 - 」01'X =印刷完了"
    },
    {
      "indent": 0,
      "text": "11.3. Example of a Null Print Record",
      "section_title": true,
      "ja": "11.3. ヌル印刷レコードの例"
    },
    {
      "indent": 3,
      "text": "Figure 6 shows the server sending the client a null print record. The null print record is the last print command the server sends to the client for a print job, and it indicates to the printer that there is no more data. The null data byte '00'X is optional and in some cases may be omitted (in particular, this scenario occurs in DBCS print streams).",
      "ja": "図6は、クライアントにヌル印刷記録を送信するサーバを示しています。ヌル印刷記録は、最後のprintコマンドサーバーは、印刷ジョブのためにクライアントに送信し、それはより多くのデータが存在しないことをプリンタに示してあります。ヌルデータバイト「00'X（特に、このシナリオでは、DBCS印刷ストリームで発生する）オプションであり、いくつかの場合には省略されてもよいです。"
    },
    {
      "indent": 3,
      "text": "This example would normally follow any number of print records, such as the example in Figure 4. This indicates successful completion of a print job. The client normally responds to this null print record with another print complete record, such as in Figure 5.",
      "ja": "この例では、通常、これは、印刷ジョブの正常終了を示し、図4に一例として印刷記録、任意の数に従います。クライアントは、通常、図5のように、別の印刷完全な記録、このヌル印刷記録に応答します。"
    },
    {
      "indent": 3,
      "text": "+------------------------------------------------------------------+\n|   +-- Length of structure (LLLL)                                 |\n|   |    +-- GDS identifier                                        |\n|   |    |    +-- Data flow record                                 |\n|   |    |    |   +-- Length of pass-through specific header (LL)  |\n|   |    |    |   |   +-- Flags                                    |\n|   |    |    |   |   |   +-- Printer operation code               |\n|   |    |    |   |   |   |      +-- Zero pad to LL specified (0A) |\n|   |    |    |   |   |   |      |        +-- Printer data         |\n|   |    |    |   |   |   |      |        |                        |\n| +--+ +--+ +--+ ++ +--+ ++ +----------+ ++                        |\n| |  | |  | |  | || |  | || |          | ||                        |\n| 0011 12A0 0101 0A 0800 01 000000000000 00                        |\n+------------------------------------------------------------------+",
      "raw": true
    },
    {
      "indent": 11,
      "text": "Figure 6. Server sending client a null print record",
      "ja": "図6.サーバークライアントにヌル印刷レコードを送信"
    },
    {
      "indent": 3,
      "text": "- '0011'X = Logical record length, including this byte - '12A0'X = GDS LU6.2 header - '0101'X = Data flow record - '0A'X = Length of pass-through specific header (LL) - '0800'X = Last of Chain - '01'X = Print - '000000000000'X = Zero pad header to LL specified - '00'X = Null data byte",
      "ja": "12A0'X = GDS LU6.2ヘッダー -  '0101'X =データフローレコード - ' パススルー特定ヘッダ（LL）の0A'X =長さ -   -   -  'このバイトを含む0011'X =論理レコード長、' 01'X =プリント -  'チェーンの最終0800'X ='  -  '000000000000'X =ゼロパッドヘッダ指定をLLする - ' 00'XがNullデータバイトを="
    },
    {
      "indent": 0,
      "text": "12. End-to-End Print Example",
      "section_title": true,
      "ja": "12.エンドツーエンドの印刷例"
    },
    {
      "indent": 3,
      "text": "The next example shows a full print exchange between a Telnet client and server for a 526 byte spooled file. Selective translation of the hexadecimal streams into 1) Telnet negotiations and 2) ASCII/EBCDIC characters is done to aid readability. Telnet negotiations are delimited by '(' and ')' parenthesis characters; ASCII/EBCDIC conversions are bracketed by '|' vertical bar characters.",
      "ja": "次の例では、526バイトのスプール・ファイルのためのTelnetクライアントとサーバの間の完全な印刷交換を示します。進数の選択翻訳は、1）のTelnet交渉にストリームおよび2）ASCII / EBCDIC文字は読みやすさを支援するために行われます。 Telnetの交渉は、「（」と「）」括弧文字で区切られています。 「|」ASCII / EBCDIC変換が囲まれ垂直バーの文字。"
    },
    {
      "indent": 3,
      "text": "iSeries Telnet server               Enhanced Telnet client\n-------------------------------     ---------------------------------\nFFFD27                          -->",
      "raw": true
    },
    {
      "indent": 3,
      "text": "(IAC DO NEW-ENVIRON) <-- FFFB27",
      "ja": "（IAC DO NEW-ENVIRON）< -  FFFB27"
    },
    {
      "indent": 39,
      "text": "(IAC WILL NEW-ENVIRON)",
      "ja": "（IAC WILL NEW-ENVIRON）"
    },
    {
      "indent": 3,
      "text": "FFFD18FFFA270103 49424D5253454544 7EA5DFDDFD300404 0003FFF0 -->",
      "ja": "FFFD18FFFA270103 49424D5253454544 7EA5DFDDFD300404 0003FFF0  - >"
    },
    {
      "indent": 3,
      "text": "(IAC DO TERMINAL-TYPE IAC SB NEW-ENVIRON SEND USERVAR IBMRSEED xxxxxxxx VAR USERVAR IAC SE)",
      "ja": "（IAC DO TERMINAL-TYPE IAC SB NEW-ENVIRONはUSERVAR IBMRSEED XXXXXXXX VAR USERVAR IAC SEを送ります）"
    },
    {
      "indent": 35,
      "text": "<-- FFFB18",
      "ja": "< -  FFFB18"
    },
    {
      "indent": 39,
      "text": "(IAC WILL TERMINAL-TYPE)",
      "ja": "（IAC WILL TERMINAL-TYPE）"
    },
    {
      "indent": 3,
      "text": "FFFA1801FFF0 -->",
      "ja": "FFFA1801FFF0  - >"
    },
    {
      "indent": 3,
      "text": "(IAC SB TERMINAL-TYPE SEND IAC SE)",
      "ja": "（IAC SB TERMINAL-TYPEはIAC SEを送ります）"
    },
    {
      "indent": 35,
      "text": "    FFFA27000349424D 52534545447EA5DF\n    DDFD300404000344 45564E414D450144\n    554D4D5950525403 49424D4D5347514E\n    414D450151535953 4F50520349424D4D\n    5347514C4942012A 4C49424C0349424D\n    464F4E5401313103 49424D5452414E53\n    464F524D01310349 424D4D4652545950\n    4D444C012A485049 490349424D505052\n    5352433101020103 49424D5050525352\n    433201040349424D 454E56454C4F5045\n    01FFFF0349424D41 5343494938393901\n<-- 30FFF0",
      "raw": true
    },
    {
      "indent": 39,
      "text": "(IAC SB NEW-ENVIRON IS USERVAR\n IBMRSEED xxxxxxxx VAR\n USERVAR DEVNAME VALUE DUMMYPRT\n USERVAR IBMMSGQNAME VALUE\n QSYSOPR\n USERVAR IBMMSGQLIB VALUE *LIBL\n USERVAR IBMFONT VALUE 11\n USERVAR IBMTRANSFORM VALUE 1\n USERVAR IBMMFRTYPMDL VALUE *HPII\n USERVAR IBMPPRSRC1 VALUE\n ESC '01'X\n USERVAR IBMPPRSRC2 VALUE '04'X\n USERVAR IBMENVELOPE VALUE IAC\n USERVAR IBMASCII899 VALUE 0\n IAC SE)",
      "raw": true
    },
    {
      "indent": 35,
      "text": "<-- FFFA180049424D2D 333831322D31FFF0",
      "ja": "< -  FFFA180049424D2D 333831322D31FFF0"
    },
    {
      "indent": 3,
      "text": " (IAC SB TERMINAL-TYPE IS IBM-3812-1 IAC SE) FFFD19 -->",
      "ja": ">  -  FFFD19（IAC SB TERMINAL-TYPEは、IBM-3812から1 IAC SE IS）"
    },
    {
      "indent": 3,
      "text": "(IAC DO EOR) <-- FFFB19",
      "ja": "（IAC DO EOR）< -  FFFB19"
    },
    {
      "indent": 39,
      "text": "(IAC WILL EOR)",
      "ja": "（IAC WILL EOR）"
    },
    {
      "indent": 3,
      "text": "FFFB19 -->",
      "ja": "FFFB19  - >"
    },
    {
      "indent": 3,
      "text": "(IAC WILL EOR) <-- FFFD19",
      "ja": "（IAC WILL EOR）< -  FFFD19"
    },
    {
      "indent": 3,
      "text": " (IAC DO EOR) FFFD00 -->",
      "ja": "（IAC DO EOR）FFFD00  - >"
    },
    {
      "indent": 3,
      "text": "(IAC DO BINARY) <-- FFFB00",
      "ja": "（IAC DO BINARY）< -  FFFB00"
    },
    {
      "indent": 3,
      "text": " (IAC WILL BINARY) FFFB00 -->",
      "ja": "（IAC WILL BINARY）FFFB00  - >"
    },
    {
      "indent": 3,
      "text": "(IAC WILL BINARY) <-- FFFD00",
      "ja": "（IAC WILL BINARY）< -  FFFD00"
    },
    {
      "indent": 39,
      "text": "(IAC DO BINARY)",
      "ja": "（IAC DO BINARY）"
    },
    {
      "indent": 3,
      "text": "004912A090000560 060020C0003D0000 | - { | C9F9F0F2C5D3C3D9 E3D7F0F6C4E4D4D4 |I902ELCRTP06DUMM| (EBCDIC) E8D7D9E340400000 0000000000000000 |YPRT | 0000000000000000 0000000000000000 | | 0000000000000000 00FFEF --> | |",
      "ja": "004912A090000560 060020C0003D0000 | -  {| C9F9F0F2C5D3C3D9 E3D7F0F6C4E4D4D4 | I902ELCRTP06DUMM | （EBCDIC）E8D7D9E340400000 0000000000000000 | YPRT | 0000000000000000 0000000000000000 | | 0000000000000000 00FFEF  - > | |"
    },
    {
      "indent": 3,
      "text": "(73-byte startup success response record ... IAC EOR) 00DF12A001010A18 0001000000000000 | | 03CD1B451B283130 551B287330703130 | E (10U (s0p10| (ASCII) 2E30306831327630 733062303033541B |.00h12v0s0b003T | 287330421B266440 1B266C304F1B266C |(s0B &d@ &l0O &l| 303038431B266C30 3035431B28733070 |008C &l005C (s0p| 31372E3130683130 7630733062303030 |17.10h10v0s0b000| 541B283130551B28 73307031372E3130 |T (10U (s0p17.10| 6831307630733062 303030541B287330 |h10v0s0b000T (s0| 421B2664401B266C 314F1B266C303035 |B &d@ &l1O &l005| 431B287330703137 2E31306831307630 |C (s0p17.10h10v0| 733062303030541B 266C314F1B287330 |s0b000T &l1O (s0| 7031372E31306831 3076307330623030 |p17.10h10v0s0b00| 30541B2873307031 372E313068313076 |0T (s0p17.10h10v| 3073306230303054 1B266C30303543FF |0s0b000T &l005C | EF --> | |",
      "ja": "（73バイトの起動成功応答レコード... IAC EOR）00DF12A001010A18 0001000000000000 | | 03CD1B451B283130 551B287330703130 | E（10U（s0p10 |（ASCII）2E30306831327630 733062303033541B | .00h12v0s0b003T | 287330421B266440 1B266C304F1B266C |（S0B＆Dの@＆l0O＆L | 303038431B266C30 3035431B28733070 | 008C＆l005C（S0P | 31372E3130683130 7630733062303030 | 17.10h10v0s0b000 | 541B283130551B28 73307031372E3130 | T（10U（s0p17.10 | 6831307630733062 303030541B287330 | h10v0s0b000T（S0 | 421B2664401B266C 314F1B266C303035 | B＆Dの@＆l1O＆L005 | 431B287330703137 2E31306831307630 | C（s0p17.10h10v0 | 733062303030541B 266C314F1B287330 | s0b000T＆l1O（S0 | 7031372E31306831 3076307330623030 | p17.10h10v0s0b00 | 30541B2873307031 372E313068313076 | 0T（s0p17.10h10v | 3073306230303054 1B266C30303543FF | 0s0b000T＆l005C | EF  - > | |"
    },
    {
      "indent": 3,
      "text": "(... 223-byte print record ... ... first of chain ... ... last of chain ... IAC EOR) <-- 000A12A001020400 0001FFEF",
      "ja": "（... 223バイトの印刷レコード... ...最初の鎖の... ...チェーンの最後の... IAC EOR）< -  000A12A001020400 0001FFEF"
    },
    {
      "indent": 3,
      "text": " (10-byte print complete header) 031012A001010A10 0001000000000000 | | 03FFFF1B451B2831 30551B2873307031 | E (10U (s0p1| (ASCII) 372E313068313076 3073306230303054 |7.10h10v0s0b000T| 1B287330421B2664 401B266C314F1B26 | (s0B &d@ &l1O &| 6C303035431B266C 31481B266C314F1B |l005C &l1H &l1O | 266C3032411B266C 31431B266C303030 |&l02A &l1C &l000| 38451B266C303038 431B266C30303439 |8E &l008C &l0049| 461B266130521B26 6C303035430A0A0A |F &a0R &l005C | 0A0A0A0A1B26612B 3030303130561B26 | &a+00010V &| 6C303035431B2661 2B30303231364820 |l005C &a+00216H | 2020202020202020 2020202020202020 | | 2020202020205072 696E74204B657920 | Print Key | 4F75747075742020 2020202020202020 |Output | 2020202020202020 2020202020202020 | | 2020202020205061 6765202020310D0A | Page 1 | 1B26612B30303231 3648202020203537 | &a+00216H 57| 3639535331205634 52334D3020393830 |69SS1 V4R3M0 980| 373203FFFF392020 2020202020202020 |72 9 |",
      "ja": "（10バイトの印刷完全なヘッダ）031012A001010A10 0001000000000000 | | 03FFFF1B451B2831 30551B2873307031 | E（10U（S0P1 |（ASCII）372E313068313076 3073306230303054 | 7.10h10v0s0b000T | 1B287330421B2664 401B266C314F1B26 |（S0B＆Dの@＆l1O＆| 6C303035431B266C 31481B266C314F1B | l005C＆L1H＆l1O | 266C3032411B266C 31431B266C303030 |＆l02A＆L1C＆L000 | 38451B266C303038 431B266C30303439 | 8E＆l008C＆l0049 | 461B266130521B26 6C303035430A0A0A | F A0R＆l005C＆| 0A0A0A0A1B26612B 3030303130561B26 |＆A + 00010V＆| 6C303035431B2661 2B30303231364820 | l005C＆A + 00216H | 2020202020202020 2020202020202020 | | 2020202020205072 696E74204B657920 |印刷キー| 4F75747075742020 2020202020202020 |出力| 2020202020202020 2020202020202020 | | 2020202020205061 6765202020310D0A |ページ1 | 1B26612B30303231 3648202020203537 |＆A + 00216H 57 | 3639535331205634 52334D3020393830 | 69SS1 V4R3M0 980 | 373203FFFF392020 2020202020202020 | 72 9 |"
    },
    {
      "indent": 3,
      "text": "202020202020454C 4352545030362020 | ELCRTP06 | 2020202020202020 202030332F33312F | 03/31/| 3939202031363A33 303A34350D0A1B26 |99 16:30:45 &| 612B303032313648 0D0A1B26612B3030 |a+00216H &a+00| 3231364820202020 446973706C617920 |216H Display | 4465766963652020 2E202E202E202E20 |Device . . . . | 2E203A2020515041 444556303033510D |. : QPADEV003Q | 0A1B26612B303032 3136482020202055 | &a+00216H U| 73657220202E202E 202E202E202E202E |ser . . . . . .| 202E202E202E202E 203A202052434153 | . . . . : RCAS| 54524F0D0A1B2661 2B3030323136480D |TRO &a+00216H | 0A1B26612B303032 313648204D41494E | &a+00216H MAIN| 2020202020202020 2020202020202020 | | 2020202020202020 20202041532F3430 | AS/40| 30204D61696E204D 656E750D0A1B2661 |0 Main Menu &a| 2B30303203FFFF31 3648202020202020 |+002 16H | 2020202020202020 2020202020202020 | | 2020202020202020 2020202020202020 | | 2020202020202020 2020202020202020 | | 2020202020202053 797374656D3A2020 | System: | 20454C4352545030 360D0A1B26612B30 | ELCRTP06 &a+0| 3032313648205365 6C656374206F6E65 |0216H Select one| 206F662074686520 666F6C6C6F77696E | of the followin| 673A0D0A1B26612B 3030323136480D0A |g: &a+00216H | 1B26612B30303231 3648202020202020 | &a+00216H | 312E205573657220 7461736B730D0A1B |1. User tasks | 26612B3030323136 4820202020202032 |&a+00216H 2| 2E204F6666696365 207461736B730D0A |. Office tasks | 1B26612B30303231 36480D0A1B26612B | &a+00216H &a+| 3030323136482020 20202020342E2046 |00216H 4. F| 696C65732C206C69 627261726965732C |iles, libraries,| 20616EFFEF | an |",
      "ja": "202020202020454C 4352545030362020 | ELCRTP06 | 2020202020202020 202030332F33312F | 3月31日/ | 3939202031363A33 303A34350D0A1B26 | 99 16時30分四十五秒＆| 612B303032313648 0D0A1B26612B3030 | + 00216H＆A + 00 | 3231364820202020 446973706C617920 | 216H表示| 4465766963652020 2E202E202E202E20 |端末。 。 。 。 | 2E203A2020515041 444556303033510D |。 ：QPADEV003Q | 0A1B26612B303032 3136482020202055 | ＆+ 00216H U | 73657220202E202E 202E202E202E202E | SER。 。 。 。 。 。| 202E202E202E202E 203A202052434153 | 。 。 。 。 ：RCAS | 54524F0D0A1B2661 2B3030323136480D | TRO＆A + 00216H | 0A1B26612B303032 313648204D41494E | ＆+ 00216H MAIN | 2020202020202020 2020202020202020 | | 2020202020202020 20202041532F3430 | AS / 40 | 30204D61696E204D 656E750D0A1B2661 | 0メインメニュー＆| 2B30303203FFFF31 3648202020202020 | 002 16H | 2020202020202020 2020202020202020 | | 2020202020202020 2020202020202020 | | 2020202020202020 2020202020202020 | | 2020202020202053 797374656D3A2020 |システム：| 20454C4352545030 360D0A1B26612B30 | ELCRTP06＆A + 0 | 3032313648205365 6C656374206F6E65 | 0216Hいずれかを選択| 206F662074686520 666F6C6C6F77696E | followinの| 673A0D0A1B26612B 3030323136480D0A | G：＆A + 00216H | 1B26612B30303231 3648202020202020 | ＆A + 00216H | 312E205573657220 7461736B730D0A1B | 1。ユーザタスク| 26612B3030323136 4820202020202032 |＆A + 00216H 2 | 2E204F6666696365 207461736B730D0A |。オフィスの作業| 1B26612B30303231 36480D0A1B26612B | + 00216H＆A +＆| 3030323136482020 20202020342E2046 | 00216H 4. F | 696C65732C206C69 627261726965732C |ジル、図書館、| 20616EFFEF | |"
    },
    {
      "indent": 3,
      "text": "(... 784-byte print record ... ... first of chain ... IAC EOR) <-- 000A12A001020400 0001FFEF",
      "ja": "（... 784バイトの印刷記録を... ...チェーンの最初の... IAC EOR）< -  000A12A001020400 0001FFEF"
    },
    {
      "indent": 41,
      "text": "(10-byte print complete header)",
      "ja": "（10バイトの印刷完了ヘッダ）"
    },
    {
      "indent": 3,
      "text": "020312A001010A00 0001000000000000 | | 64206603FFFF6F6C 646572730D0A1B26 |d f olders &| (ASCII) 612B303032313648 0D0A1B26612B3030 |a+00216H &a+00| 3231364820202020 2020362E20436F6D |216H 6. Com| 6D756E6963617469 6F6E730D0A1B2661 |munications &a| 2B3030323136480D 0A1B26612B303032 |+00216H &a+002| 3136482020202020 20382E2050726F62 |16H 8. Prob| 6C656D2068616E64 6C696E670D0A1B26 |lem handling &| 612B303032313648 202020202020392E |a+00216H 9.|",
      "ja": "020312A001010A00 0001000000000000 | | 64206603FFFF6F6C 646572730D0A1B26 | D fがolders＆| （ASCII）612B303032313648 0D0A1B26612B3030 | + 00216H＆A + 00 | 3231364820202020 2020362E20436F6D | 216H 6.コム| 6D756E6963617469 6F6E730D0A1B2661 | munications＆| 2B3030323136480D 0A1B26612B303032 | + 00216H＆A + 002 | 3136482020202020 20382E2050726F62 | 16H 8度Prob | 6C656D2068616E64 6C696E670D0A1B26 | LEMハンドリング＆| 612B303032313648 202020202020392E | A + 00216H 9 |"
    },
    {
      "indent": 3,
      "text": "20446973706C6179 2061206D656E750D | Display a menu | 0A1B26612B303032 3136482020202020 | &a+00216H | 31302E20496E666F 726D6174696F6E20 |10. Information | 417373697374616E 74206F7074696F6E |Assistant option| 730D0A1B26612B30 3032313648202020 |s &a+00216H | 202031312E20436C 69656E7420416363 | 11. Client Acc| 6573732F34303020 7461736B730D0A1B |ess/400 tasks | 26612B3030323136 480D0A1B26612B30 |&a+00216H &a+0| 303231364803ED20 2020202039302E20 |0216H 90. | 5369676E206F6666 0D0A1B26612B3030 |Sign off &a+00| 323136480D0A1B26 612B303032313648 |216H &a+00216H| 2053656C65637469 6F6E206F7220636F | Selection or co| 6D6D616E640D0A1B 26612B3030323136 |mmand &a+00216| 48203D3D3D3E0D0A 1B26612B30303231 |H ===> &a+0021| 36480D0A1B26612B 3030323136482046 |6H &a+00216H F| 333D457869742020 2046343D50726F6D |3=Exit F4=Prom| 707420202046393D 5265747269657665 |pt F9=Retrieve| 2020204631323D43 616E63656C202020 | F12=Cancel | 4631333D496E666F 726D6174696F6E20 |F13=Information | 417373697374616E 740D0A1B26612B30 |Assistant &a+0| 3032313648204632 333D53657420696E |0216H F23=Set in| 697469616C206D65 6E750D0A1B26612B |itial menu &a+| 3030323136480D0A 1B26612B30303231 |00216H &a+0021| 36480D0CFFEF |6H |",
      "ja": "20446973706C6179 2061206D656E750D |メニューを表示します| 0A1B26612B303032 3136482020202020 | ＆A + 00216H | 31302E20496E666F 726D6174696F6E20 | 10。情報| 417373697374616E 74206F7074696F6E |アシスタントのオプション| 730D0A1B26612B30 3032313648202020 | S＆A + 00216H | 202031312E20436C 69656E7420416363 | 11.クライアントのAcc | 6573732F34303020 7461736B730D0A1B | ESS / 400タスク| 26612B3030323136 480D0A1B26612B30 |＆A + 00216H＆A + 0 | 303231364803ED20 2020202039302E20 | 0216H 90 | 5369676E206F6666 0D0A1B26612B3030 |サインオフ＆A + 00 | 323136480D0A1B26 612B303032313648 | 216H＆A + 00216H | 2053656C65637469 6F6E206F7220636F |選択またはコ| 6D6D616E640D0A1B 26612B3030323136 | mmand＆A + 00216 | 48203D3D3D3E0D0A 1B26612B30303231 | H ===>＆A + 0021 | 36480D0A1B26612B 3030323136482046 | 6H＆+ 00216H F | 333D457869742020 2046343D50726F6D | 3 =を終了F4 =プロム| 707420202046393D 5265747269657665 | PTのF9 =取得| 2020204631323D43 616E63656C202020 | F12 =取り消し| 4631333D496E666F 726D6174696F6E20 | F13 =情報| 417373697374616E 740D0A1B26612B30 |アシスタント＆A + 0 | 3032313648204632 333D53657420696E | 0216HのF23 =で設定してください| 697469616C206D65 6E750D0A1B26612B | itialメニュー＆A + | 3030323136480D0A 1B26612B30303231 | 00216H＆A + 0021 | 36480D0CFFEF | 6H |"
    },
    {
      "indent": 3,
      "text": "(... 515-byte print record ... IAC EOR) <-- 000A12A001020400 0001FFEF",
      "ja": "（... 515バイトの印刷記録... IAC EOR）< -  000A12A001020400 0001FFEF"
    },
    {
      "indent": 3,
      "text": " (10-byte print complete header) 001412A001010A00 0001000000000000 | | 03021B45FFEF | E | (ASCII)",
      "ja": "（10バイトの印刷完全なヘッダ）001412A001010A00 0001000000000000 | | 03021B45FFEF | E | （ASCII）"
    },
    {
      "indent": 3,
      "text": "(... 20-byte print record ... IAC EOR) <-- 000A12A001020400 0001FFEF",
      "ja": "（... 20バイトの印字記録... IAC EOR）< -  000A12A001020400 0001FFEF"
    },
    {
      "indent": 3,
      "text": " (10-byte print complete header) 001112A001010A08 0001000000000000 00FFEF -->",
      "ja": "（10バイトの印刷完全ヘッダ）001112A001010A08 0001000000000000 00FFEF  - >"
    },
    {
      "indent": 3,
      "text": "(... 17-byte NULL print record ... ... last of chain ... IAC EOR) <-- 000A12A001020400 0001FFEF",
      "ja": "（...は、17バイトのNULL印刷記録... ...チェーンの最後の... IAC EOR）< -  000A12A001020400 0001FFEF"
    },
    {
      "indent": 41,
      "text": "(10-byte print complete header)",
      "ja": "（10バイトの印刷完了ヘッダ）"
    },
    {
      "indent": 0,
      "text": "13. Security Considerations",
      "section_title": true,
      "ja": "13.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "The auto-sign-on feature provided by this RFC describes a way to encrypt your login password. However, while passwords can now be encrypted by using the IBMRSEED and IBMSUBSPW USERVAR negotiations, users should understand that only the login passwords are encrypted and not the entire Telnet session. Encryption of the Telnet session requires that another protocol layer, such as SSL, be added.",
      "ja": "自動サインオンこのRFCによって提供される機能は、ログインパスワードを暗号化する方法を説明します。パスワードが今IBMRSEEDとIBMSUBSPW USERVAR交渉を使用して暗号化することができながら、しかし、ユーザーは全体のTelnetセッションをのみ、ログインパスワードが暗号化されていることを理解してはなりません。 Telnetセッションの暗号化は、SSLなどの別のプロトコル層は、添加されることを必要とします。"
    },
    {
      "indent": 3,
      "text": "The auto-sign-on feature supports plain text passwords, encrypted passwords, and Kerberos tokens. However, using plain text passwords is strongly discouraged. iSeries system administrators may want to configure their systems to reject plain text passwords.",
      "ja": "自動サインオン機能では、プレーンテキストのパスワード、暗号化パスワード、およびKerberosトークンをサポートしています。しかし、プレーンテキストのパスワードを使用することを強くお勧めします。 iSeriesシステム管理者は、プレーンテキストのパスワードを拒否するようにシステムを設定することもできます。"
    },
    {
      "indent": 0,
      "text": "14. IANA Considerations",
      "section_title": true,
      "ja": "14. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "IANA registered the terminal types \"IBM-3812-1\" and \"IBM-5553-B01\" as a terminal type [RFC1091]. They are used when communicating with iSeries Telnet servers.",
      "ja": "IANAは、端末タイプ[RFC1091]として端末タイプ \"IBM-3812から1\" および \"IBM-5553-B01\" を登録しました。 iSeries版のTelnetサーバと通信するときに彼らが使用されています。"
    },
    {
      "indent": 0,
      "text": "15. Normative References",
      "section_title": true,
      "ja": "15.引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC854] Postel, J. and J. Reynolds, \"Telnet Protocol Specification\", STD 8, RFC 854, May 1983.",
      "ja": "[RFC854]ポステル、J.、およびJ.レイノルズ、 \"テルネットプロトコル仕様\"、STD 8、RFC 854、1983年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC855] Postel, J. and J. Reynolds, \"Telnet Option Specifications\", STD 8, RFC 855, May 1983.",
      "ja": "[RFC855]ポステル、J.、およびJ.レイノルズ、 \"Telnetオプション仕様\"、STD 8、RFC 855、1983年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC1091] VanBokkelen, J., \"Telnet terminal-type option\", RFC 1091, February 1989.",
      "ja": "[RFC1091] VanBokkelen、J.、 \"Telnetのターミナル型オプション\"、RFC 1091、1989年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC1205] Chmielewski, P., \"5250 Telnet Interface\", RFC 1205, February 1991.",
      "ja": "[RFC1205] Chmielewski、P.、 \"5250のTelnetインタフェース\"、RFC 1205、1991年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC1572] Alexander, S., \"Telnet Environment Option\", RFC 1572, January 1994.",
      "ja": "[RFC1572]アレクサンダー、S.、 \"Telnetの環境オプション\"、RFC 1572、1994年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC2877] Murphy, T., Jr., Rieth, P., and J. Stevens, \"5250 Telnet Enhancements\", RFC 2877, July 2000.",
      "ja": "[RFC2877]マーフィー、T.、ジュニア、Riethの、P.、およびJ.スティーブンス、 \"5250のTelnetの拡張\"、RFC 2877、2000年7月。"
    },
    {
      "indent": 0,
      "text": "16. Informative References",
      "section_title": true,
      "ja": "16.参考文献"
    },
    {
      "indent": 3,
      "text": "[RFC856] Postel, J. and J. Reynolds, \"Telnet Binary Transmission\", STD 27, RFC 856, May 1983.",
      "ja": "[RFC856]ポステル、J.、およびJ.レイノルズ、 \"Telnetのバイナリ送信\"、STD 27、RFC 856、1983年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC858] Postel, J. and J. Reynolds, \"Telnet Supress Go Ahead Option\", STD 29, RFC 858, May 1983.",
      "ja": "[RFC 858]ポステル、J.とJ.レイノルズは、 \"Telnetの抑制が前方にオプションを行く\"、STD 29、RFC 858、1983年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC885] Postel, J., \"Telnet end of record option\", RFC 885, December 1983.",
      "ja": "[RFC885]ポステル、J.、 \"記録オプションのTelnetの終了\"、RFC 885、1983年12月。"
    },
    {
      "indent": 3,
      "text": "[5494-CU] IBM, \"5494 Remote Control Unit, Functions Reference\", SC30-3533-04, August 1995.",
      "ja": "[5494-CU] IBM、 \"5494リモートコントロールユニット、関数リファレンス\"、SC30-3533-04、1995年8月。"
    },
    {
      "indent": 3,
      "text": "[SYSTEM-API] IBM, \"AS/400 System API Reference\", SC41-5801-01, February 1998.",
      "ja": "[SYSTEM-API] IBM、 \"AS / 400システムのAPIリファレンス\"、SC41-5801-01、1998年2月。"
    },
    {
      "indent": 3,
      "text": "[COMM-CONFIG] IBM, \"AS/400 Communications Configuration\", SC41-5401-00, August 1997.",
      "ja": "[COMM-CONFIG] IBM、 \"AS / 400通信構成\"、SC41-5401-00、1997年8月。"
    },
    {
      "indent": 3,
      "text": "[NLS-SUPPORT] IBM, \"AS/400 National Language Support\", SC41-5101-01, February 1998.",
      "ja": "[NLS-SUPPORT] IBM、 \"AS / 400各国語サポート\"、SC41-5101-01、1998年2月。"
    },
    {
      "indent": 3,
      "text": "[FIPS-46-2] Data Encryption Standard (DES), Federal Information Processing Standards Publication 46-2, January 22, 1988.",
      "ja": "[FIPS-46-2]データ暗号化規格（DES）、連邦情報処理規格出版物46-2、1988年1月22日。"
    },
    {
      "indent": 3,
      "text": "[FIPS-81] DES Modes of Operation, Federal Information Processing Standards Publication 81, December 1980.",
      "ja": "[FIPS-81] DES運転モード、連邦情報処理規格出版81、1980年12月。"
    },
    {
      "indent": 3,
      "text": "[FIPS-180-1] Secure Hash Standard, Federal Information Processing Standards Publication 180-1, May 11, 1993.",
      "ja": "[FIPS-180-1]セキュアハッシュ標準、連邦情報処理規格180-1出版、1993年5月11日。"
    },
    {
      "indent": 0,
      "text": "17. Relation to Other RFCs",
      "section_title": true,
      "ja": "その他のRFCに17の関係"
    },
    {
      "indent": 3,
      "text": "This RFC relies on the 5250 Telnet Interface [RFC1205] in all examples.",
      "ja": "このRFCは、すべての例では5250のTelnetインタフェース[RFC1205]に依存しています。"
    },
    {
      "indent": 3,
      "text": "This RFC replaces 5250 Telnet Enhancements [RFC2877], adding new sections for Kerberos, SHA-1, security and IANA considerations. Minor corrections and additional examples were also added.",
      "ja": "このRFCは、Kerberos、SHA-1、セキュリティおよびIANA問題のための新しいセクションを追加し、5250点のTelnet機能強化[RFC2877]を置き換えます。マイナーな修正および追加例も加えました。"
    },
    {
      "indent": 3,
      "text": "Informative references have been removed.",
      "ja": "参考参照が削除されました。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Thomas E. Murphy, Jr. IBM Corporation 2455 South Road Poughkeepsie, NY 12601",
      "ja": "トーマス・E.マーフィー、ジュニアIBMコーポレーション2455南路ポキプシー、NY 12601"
    },
    {
      "indent": 3,
      "text": "Phone: (845) 435-7063 Fax: (845) 432-9414 EMail: murphyte@us.ibm.com",
      "ja": "電話：（845）435-7063ファックス：（845）432-9414 Eメール：murphyte@us.ibm.com"
    },
    {
      "indent": 3,
      "text": "Paul F. Rieth IBM Corporation 3605 Highway 52 North Rochester, MN 55901",
      "ja": "ポール・F. RiethのIBMコーポレーション3605ハイウェイ52ノースロチェスター、ミネソタ55901"
    },
    {
      "indent": 3,
      "text": "Phone: (507) 253-5218 Fax: (507) 253-5156 EMail: rieth@us.ibm.com",
      "ja": "電話：（507）253-5218ファックス：（507）253-5156 Eメール：rieth@us.ibm.com"
    },
    {
      "indent": 3,
      "text": "Jeffrey S. Stevens IBM Corporation 3605 Highway 52 North Rochester, MN 55901",
      "ja": "ジェフリーS.スティーブンスIBMコーポレーション3605ハイウェイ52ノースロチェスター、ミネソタ55901"
    },
    {
      "indent": 3,
      "text": "Phone: (507) 253-5337 Fax: (507) 253-5156 EMail: jssteven@us.ibm.com",
      "ja": "電話：（507）253-5337ファックス：（507）253-5156 Eメール：jssteven@us.ibm.com"
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The IETF Trust (2006).",
      "ja": "著作権（C）IETFトラスト（2006）。"
    },
    {
      "indent": 3,
      "text": "This document is subject to the rights, licenses and restrictions contained in BCP 78 and at www.rfc-editor.org/copyright.html, and except as set forth therein, the authors retain all their rights.",
      "ja": "この文書では、BCP 78に及びwww.rfc-editor.org/copyright.htmlに含まれる権利と許可と制限の適用を受けており、その中の記載を除いて、作者は彼らのすべての権利を保有します。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein are provided on an \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST, AND THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書およびここに含まれる情報は、上に提供される基礎とCONTRIBUTOR、ORGANIZATION彼/彼女が表すOR（もしあれば）後援が「そのまま」、インターネット学会、IETFトラスト、インターネットエンジニアリングタスクフォース放棄情報の利用は、特定の目的に対する権利または商品性または適合性の黙示の保証を侵害しない任意の保証含むがこれらに限定されないすべての保証、明示または黙示、。"
    },
    {
      "indent": 0,
      "text": "Intellectual Property",
      "ja": "知的財産"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any Intellectual Property Rights or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; nor does it represent that it has made any independent effort to identify any such rights. Information on the procedures with respect to rights in RFC documents can be found in BCP 78 and BCP 79.",
      "ja": "IETFは、本書またはそのような権限下で、ライセンスがたりないかもしれない程度に記載された技術の実装や使用に関係すると主張される可能性があります任意の知的財産権やその他の権利の有効性または範囲に関していかなる位置を取りません利用可能です。またそれは、それがどのような権利を確認する独自の取り組みを行ったことを示すものでもありません。 RFC文書の権利に関する手続きの情報は、BCP 78およびBCP 79に記載されています。"
    },
    {
      "indent": 3,
      "text": "Copies of IPR disclosures made to the IETF Secretariat and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the IETF on-line IPR repository at http://www.ietf.org/ipr.",
      "ja": "IPRの開示のコピーが利用できるようにIETF事務局とライセンスの保証に行われた、または本仕様の実装者または利用者がそのような所有権の使用のための一般的なライセンスまたは許可を取得するために作られた試みの結果を得ることができますhttp://www.ietf.org/iprのIETFのオンラインIPRリポジトリから。"
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights that may cover technology that may be required to implement this standard. Please address the information to the IETF at ietf-ipr@ietf.org.",
      "ja": "IETFは、その注意にこの標準を実装するために必要とされる技術をカバーすることができる任意の著作権、特許または特許出願、またはその他の所有権を持ってすべての利害関係者を招待します。 ietf-ipr@ietf.orgのIETFに情報を記述してください。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "ja": "RFC Editor機能のための基金は現在、インターネット協会によって提供されます。"
    }
  ]
}