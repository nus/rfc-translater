{
  "title": {
    "text": "RFC 4254 - The Secure Shell (SSH) Connection Protocol",
    "ja": "RFC 4254 - セキュアシェル（SSH）接続プロトコル"
  },
  "number": 4254,
  "created_at": "2019-10-22 14:32:41.768946+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                          T. Ylonen\nRequest for Comments: 4254              SSH Communications Security Corp\nCategory: Standards Track                                C. Lonvick, Ed.\n                                                     Cisco Systems, Inc.\n                                                            January 2006",
      "raw": true
    },
    {
      "indent": 15,
      "text": "The Secure Shell (SSH) Connection Protocol",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "ja": "この文書は、インターネットコミュニティのためのインターネット標準トラックプロトコルを指定し、改善のための議論と提案を要求します。このプロトコルの標準化状態と状態への「インターネット公式プロトコル標準」（STD 1）の最新版を参照してください。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2006).",
      "ja": "著作権（C）インターネット協会（2006）。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "Secure Shell (SSH) is a protocol for secure remote login and other secure network services over an insecure network.",
      "ja": "セキュアシェル（SSH）は、安全でないネットワーク上の安全なリモートログイン及び他の安全なネットワークサービスのためのプロトコルです。"
    },
    {
      "indent": 3,
      "text": "This document describes the SSH Connection Protocol. It provides interactive login sessions, remote execution of commands, forwarded TCP/IP connections, and forwarded X11 connections. All of these channels are multiplexed into a single encrypted tunnel.",
      "ja": "この文書では、SSH接続プロトコルについて説明します。これは、対話型ログインセッション、コマンドのリモート実行、転送TCP / IP接続、および転送X11接続を提供します。これらのチャンネルの全てを単一の暗号化されたトンネルに多重化されています。"
    },
    {
      "indent": 3,
      "text": "The SSH Connection Protocol has been designed to run on top of the SSH transport layer and user authentication protocols.",
      "ja": "SSH接続プロトコルは、SSHトランスポート層とユーザ認証プロトコルの上で動作するように設計されています。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................2\n2. Contributors ....................................................3\n3. Conventions Used in This Document ...............................3\n4. Global Requests .................................................4\n5. Channel Mechanism ...............................................5\n   5.1. Opening a Channel ..........................................5\n   5.2. Data Transfer ..............................................7\n   5.3. Closing a Channel ..........................................9\n   5.4. Channel-Specific Requests ..................................9\n6. Interactive Sessions ...........................................10\n   6.1. Opening a Session .........................................10\n   6.2. Requesting a Pseudo-Terminal ..............................11\n   6.3. X11 Forwarding ............................................11\n        6.3.1. Requesting X11 Forwarding ..........................11\n        6.3.2. X11 Channels .......................................12\n   6.4. Environment Variable Passing ..............................12\n   6.5. Starting a Shell or a Command .............................13\n   6.6. Session Data Transfer .....................................14\n   6.7. Window Dimension Change Message ...........................14\n   6.8. Local Flow Control ........................................14\n   6.9. Signals ...................................................15\n   6.10. Returning Exit Status ....................................15\n7. TCP/IP Port Forwarding .........................................16\n   7.1. Requesting Port Forwarding ................................16\n   7.2. TCP/IP Forwarding Channels ................................18\n8. Encoding of Terminal Modes .....................................19\n9. Summary of Message Numbers .....................................21\n10. IANA Considerations ...........................................21\n11. Security Considerations .......................................21\n12. References ....................................................22\n   12.1. Normative References .....................................22\n   12.2. Informative References ...................................22\nAuthors' Addresses ................................................23\nTrademark Notice ..................................................23",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "The SSH Connection Protocol has been designed to run on top of the SSH transport layer and user authentication protocols ([SSH-TRANS] and [SSH-USERAUTH]). It provides interactive login sessions, remote execution of commands, forwarded TCP/IP connections, and forwarded X11 connections.",
      "ja": "SSH接続プロトコルSSH輸送層とユーザ認証プロトコル（[SSH-TRANS]および[SSH-USERAUTH]）の上で動作するように設計されています。これは、対話型ログインセッション、コマンドのリモート実行、転送TCP / IP接続、および転送X11接続を提供します。"
    },
    {
      "indent": 3,
      "text": "The 'service name' for this protocol is \"ssh-connection\".",
      "ja": "このプロトコルのための「サービス名は」「SSH接続」です。"
    },
    {
      "indent": 3,
      "text": "This document should be read only after reading the SSH architecture document [SSH-ARCH]. This document freely uses terminology and notation from the architecture document without reference or further explanation.",
      "ja": "この文書では、唯一のSSHアーキテクチャドキュメント[SSH-ARCH]を読んだ後に読まれるべきです。この文書は、自由に参照またはさらなる説明なしアーキテクチャ文書からの用語および表記法を使用します。"
    },
    {
      "indent": 0,
      "text": "2. Contributors",
      "section_title": true,
      "ja": "2.協力者"
    },
    {
      "indent": 3,
      "text": "The major original contributors of this set of documents have been: Tatu Ylonen, Tero Kivinen, Timo J. Rinne, Sami Lehtinen (all of SSH Communications Security Corp), and Markku-Juhani O. Saarinen (University of Jyvaskyla). Darren Moffat was the original editor of this set of documents and also made very substantial contributions.",
      "ja": "文書のこのセットの主要な元貢献はされている：タトゥYlonenと、TERO Kivinen、ティモJ.リンネ、サミLehtinenの（SSHコミュニケーションズ・セキュリティ社の全て）、およびマルック・Juhani O.サーリネン（ユヴァスキュラ大学）。ダレン・モファットは、文書のこのセットの元編集者だったとも非常に実質的な貢献をしました。"
    },
    {
      "indent": 3,
      "text": "Many people contributed to the development of this document over the years. People who should be acknowledged include Mats Andersson, Ben Harris, Bill Sommerfeld, Brent McClure, Niels Moller, Damien Miller, Derek Fawcus, Frank Cusack, Heikki Nousiainen, Jakob Schlyter, Jeff Van Dyke, Jeffrey Altman, Jeffrey Hutzelman, Jon Bright, Joseph Galbraith, Ken Hornstein, Markus Friedl, Martin Forssen, Nicolas Williams, Niels Provos, Perry Metzger, Peter Gutmann, Simon Josefsson, Simon Tatham, Wei Dai, Denis Bider, der Mouse, and Tadayoshi Kohno. Listing their names here does not mean that they endorse this document, but that they have contributed to it.",
      "ja": "多くの人々が長年にわたってこのドキュメントの発展に貢献しました。承認される必要がある人々は、マット・アンダーソン、ベン・ハリス、ビルゾンマーフェルト、ブレントマクルーア、ニールス・モーラー、ダミアン・ミラー、デレクFawcus、フランク・キューザック、ハイッキ・ヌジアイナン、ヤコブSchlyter、ジェフ・ヴァン・ダイク、ジェフリー・アルトマン、ジェフリーHutzelman、ジョン明るい、ジョセフが含まれますガルブレイス、ケンHornstein、マルクスFriedlの、マーティンForssen、ニコラス・ウィリアムズ、ニールス・プロボス、ペリーメッツガー、ピーター・ガットマン、サイモンJosefsson氏、サイモンTatham氏、魏大、デニスBider、DERマウス、および忠義河野。ここに自分の名前をリスト彼らはこの文書を承認することを意味するものではありませんが、彼らはそれに貢献してきたこと。"
    },
    {
      "indent": 0,
      "text": "3. Conventions Used in This Document",
      "section_title": true,
      "ja": "この文書で使用される3表記"
    },
    {
      "indent": 3,
      "text": "All documents related to the SSH protocols shall use the keywords \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" to describe requirements. These keywords are to be interpreted as described in [RFC2119].",
      "ja": "SSHプロトコルに関連するすべての文書は、 \"MAY\"、 \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、 \"SHALL\"、 \"SHOULD\" \"ないもの\"、 \"推奨\" \"NOTべきである\" キーワードを使用しなければなりません、要件を記述すると「オプション」。これらのキーワードは、[RFC2119]に記載されているように解釈されるべきです。"
    },
    {
      "indent": 3,
      "text": "The keywords \"PRIVATE USE\", \"HIERARCHICAL ALLOCATION\", \"FIRST COME FIRST SERVED\", \"EXPERT REVIEW\", \"SPECIFICATION REQUIRED\", \"IESG APPROVAL\", \"IETF CONSENSUS\", and \"STANDARDS ACTION\" that appear in this document when used to describe namespace allocation are to be interpreted as described in [RFC2434].",
      "ja": "キーワード「私的使用」、「階層割り当ては」、「先着順」この文書に表示される「EXPERT REVIEW」、「仕様REQUIRED」、「IESGの承認」、「IETFコンセンサス」、および「STANDARDS ACTION」、名前空間の割り当てを記述するために使用される[RFC2434]に記載されているように解釈されるべきです。"
    },
    {
      "indent": 3,
      "text": "Protocol fields and possible values to fill them are defined in this set of documents. Protocol fields will be defined in the message definitions. As an example, SSH_MSG_CHANNEL_DATA is defined as follows.",
      "ja": "プロトコルフィールドとそれを埋めるために可能な値は、文書のこのセットで定義されています。プロトコルフィールドは、メッセージ定義で定義されます。次のように、一例として、SSH_MSG_CHANNEL_DATAが定義されています。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_CHANNEL_DATA uint32 recipient channel string data",
      "ja": "バイトSSH_MSG_CHANNEL_DATA UINT32受信者チャネル列データ"
    },
    {
      "indent": 3,
      "text": "Throughout these documents, when the fields are referenced, they will appear within single quotes. When values to fill those fields are referenced, they will appear within double quotes. Using the above example, possible values for 'data' are \"foo\" and \"bar\".",
      "ja": "フィールドが参照されたとき、これらの文書を通じて、彼らは、単一引用符で囲んで表示されます。これらのフィールドを埋めるために値が参照されているとき、彼らは二重引用符で表示されます。上記の例を使用して、「データ」のための可能な値は、「foo」と「bar」です。"
    },
    {
      "indent": 0,
      "text": "4. Global Requests",
      "section_title": true,
      "ja": "4.グローバル要求"
    },
    {
      "indent": 3,
      "text": "There are several kinds of requests that affect the state of the remote end globally, independent of any channels. An example is a request to start TCP/IP forwarding for a specific port. Note that both the client and server MAY send global requests at any time, and the receiver MUST respond appropriately. All such requests use the following format.",
      "ja": "任意のチャンネルの独立した、世界的にリモートエンドの状態に影響を与えるの要求のいくつかの種類があります。例では、特定のポートのTCP / IP転送を開始するための要求です。クライアントとサーバーの両方がいつでもグローバルな要求を送信することができ、受信機は適切に対応しなければならないことに注意してください。すべてのそのような要求は、次の形式を使用します。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_GLOBAL_REQUEST string request name in US-ASCII only boolean want reply .... request-specific data follows",
      "ja": "US-ASCIIのみのブールでバイトSSH_MSG_GLOBAL_REQUEST文字列要求名は、リクエスト固有のデータは以下の....返信したいです"
    },
    {
      "indent": 3,
      "text": "The value of 'request name' follows the DNS extensibility naming convention outlined in [SSH-ARCH].",
      "ja": "「要求名」の値は、[SSH-ARCH]に概説されたDNS拡張の命名規則に従います。"
    },
    {
      "indent": 3,
      "text": "The recipient will respond to this message with SSH_MSG_REQUEST_SUCCESS or SSH_MSG_REQUEST_FAILURE if 'want reply' is TRUE.",
      "ja": "TRUEである「返信したい」場合は、受信者はSSH_MSG_REQUEST_SUCCESSまたはSSH_MSG_REQUEST_FAILUREと、このメッセージに応答します。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_REQUEST_SUCCESS .... response specific data",
      "ja": "バイトSSH_MSG_REQUEST_SUCCESS ....応答固有のデータ"
    },
    {
      "indent": 3,
      "text": "Usually, the 'response specific data' is non-existent.",
      "ja": "通常は、「応答具体的なデータは、」非存在です。"
    },
    {
      "indent": 3,
      "text": "If the recipient does not recognize or support the request, it simply responds with SSH_MSG_REQUEST_FAILURE.",
      "ja": "受信者が認識または要求をサポートしていない場合、それは単にSSH_MSG_REQUEST_FAILUREで応答します。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_REQUEST_FAILURE",
      "ja": "バイトSSH_MSG_REQUEST_FAILURE"
    },
    {
      "indent": 3,
      "text": "In general, the reply messages do not include request type identifiers. To make it possible for the originator of a request to identify to which request each reply refers, it is REQUIRED that replies to SSH_MSG_GLOBAL_REQUESTS MUST be sent in the same order as the corresponding request messages. For channel requests, replies that relate to the same channel MUST also be replied to in the right order. However, channel requests for distinct channels MAY be replied to out-of-order.",
      "ja": "一般的には、応答メッセージは、要求タイプ識別子が含まれていません。要求の発信元がその各応答を指す要求する識別することを可能にするためには、対応する要求メッセージと同じ順序で送信されなければならないSSH_MSG_GLOBAL_REQUESTSに応答が要求されます。チャネル要求のために、同じチャンネルに関連する回答も正しい順序でに答えなければなりません。しかし、個別のチャンネルのためのチャネル要求は、アウトオブオーダーに答えられるかもしれません。"
    },
    {
      "indent": 0,
      "text": "5. Channel Mechanism",
      "section_title": true,
      "ja": "5.チャンネルメカニズム"
    },
    {
      "indent": 3,
      "text": "All terminal sessions, forwarded connections, etc., are channels. Either side may open a channel. Multiple channels are multiplexed into a single connection.",
      "ja": "すべての端末セッション、転送の接続など、チャネルです。どちらの側には、チャネルを開くことがあります。複数のチャネルは、単一の接続に多重化されています。"
    },
    {
      "indent": 3,
      "text": "Channels are identified by numbers at each end. The number referring to a channel may be different on each side. Requests to open a channel contain the sender's channel number. Any other channel-related messages contain the recipient's channel number for the channel.",
      "ja": "チャネルは、各端部の番号で識別されています。チャネルを参照番号はそれぞれの側で異なっていてもよいです。チャネルを開くための要求は、送信者のチャンネル番号が含まれています。他のチャネルに関連したメッ​​セージは、チャネル用の受信者のチャンネル番号が含まれています。"
    },
    {
      "indent": 3,
      "text": "Channels are flow-controlled. No data may be sent to a channel until a message is received to indicate that window space is available.",
      "ja": "チャネルは、フロー制御されます。メッセージがウィンドウスペースが利用可能であることを示すために受信されるまで、データがチャネルに送信されなくてもよいです。"
    },
    {
      "indent": 0,
      "text": "5.1. Opening a Channel",
      "section_title": true,
      "ja": "5.1。チャンネルを開きます"
    },
    {
      "indent": 3,
      "text": "When either side wishes to open a new channel, it allocates a local number for the channel. It then sends the following message to the other side, and includes the local channel number and initial window size in the message.",
      "ja": "どちらの側が新しいチャネルを開くしようとするとき、それはチャネルのためのローカル番号を割り当てます。その後、もう一方の側に次のメッセージを送信し、メッセージ内のローカルチャネル番号と初期ウィンドウサイズを含みます。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_CHANNEL_OPEN string channel type in US-ASCII only uint32 sender channel uint32 initial window size uint32 maximum packet size .... channel type specific data follows",
      "ja": "初期ウィンドウサイズUINT32最大パケットサイズUINT32 US-ASCIIのみUINT32送信側チャネルでバイトSSH_MSG_CHANNEL_OPEN文字列チャネル型....チャネル型の特定のデータは、以下の"
    },
    {
      "indent": 3,
      "text": "The 'channel type' is a name, as described in [SSH-ARCH] and [SSH-NUMBERS], with similar extension mechanisms. The 'sender channel' is a local identifier for the channel used by the sender of this message. The 'initial window size' specifies how many bytes of channel data can be sent to the sender of this message without adjusting the window. The 'maximum packet size' specifies the maximum size of an individual data packet that can be sent to the sender. For example, one might want to use smaller packets for interactive connections to get better interactive response on slow links.",
      "ja": "同様の拡張機構を、[SSH-ARCH]および[SSH-NUMBERS]に記載されているように「チャンネルタイプ」は、名前です。 「送信側チャネルが」このメッセージの送信者によって使用されるチャネルのローカル識別子です。 「初期ウィンドウサイズは、」チャネルデータのバイト数は、ウィンドウを調整することなく、このメッセージの送信者に送信することができるかを指定します。 「最大のパケットサイズは、」送信者に送信することができ、個々のデータパケットの最大サイズを指定します。例えば、1は、低速リンク上のより良い対話型の応答を得るために、対話型の接続のための小さなパケットを使用する場合があります。"
    },
    {
      "indent": 3,
      "text": "The remote side then decides whether it can open the channel, and responds with either SSH_MSG_CHANNEL_OPEN_CONFIRMATION or SSH_MSG_CHANNEL_OPEN_FAILURE.",
      "ja": "リモート側は、それがチャネルを開くことができるかどうかを決定し、SSH_MSG_CHANNEL_OPEN_CONFIRMATIONまたはSSH_MSG_CHANNEL_OPEN_FAILUREのいずれかで応答します。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_CHANNEL_OPEN_CONFIRMATION uint32 recipient channel uint32 sender channel uint32 initial window size uint32 maximum packet size .... channel type specific data follows",
      "ja": "最大パケットサイズが....チャネル型固有のデータは以下のUINT32初期ウィンドウサイズUINT32バイトSSH_MSG_CHANNEL_OPEN_CONFIRMATIONのUINT32受信者のチャネルUINT32送信側チャネル"
    },
    {
      "indent": 3,
      "text": "The 'recipient channel' is the channel number given in the original open request, and 'sender channel' is the channel number allocated by the other side.",
      "ja": "「受信者のチャネル」は、元のオープン要求で指定されたチャンネル番号であり、「送信側チャネルは、」他の側によって割り当てられたチャネル番号です。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_CHANNEL_OPEN_FAILURE uint32 recipient channel uint32 reason code string description in ISO-10646 UTF-8 encoding [RFC3629] string language tag [RFC3066]",
      "ja": "ISO-10646 UTF-8エンコーディング[RFC3629]の文字列言語タグ[RFC3066]のバイトSSH_MSG_CHANNEL_OPEN_FAILURE UINT32受信者チャネルUINT32理由コード列説明"
    },
    {
      "indent": 3,
      "text": "If the recipient of the SSH_MSG_CHANNEL_OPEN message does not support the specified 'channel type', it simply responds with SSH_MSG_CHANNEL_OPEN_FAILURE. The client MAY show the 'description' string to the user. If this is done, the client software should take the precautions discussed in [SSH-ARCH].",
      "ja": "SSH_MSG_CHANNEL_OPENメッセージの受信者が指定した「チャンネルタイプ」をサポートしていない場合、それは単にSSH_MSG_CHANNEL_OPEN_FAILUREで応答します。クライアントは、ユーザーに「説明」の文字列を表示されることがあります。これが行われた場合、クライアントソフトウェアは[SSH-ARCH]で議論予防措置を講じなければなりません。"
    },
    {
      "indent": 3,
      "text": "The SSH_MSG_CHANNEL_OPEN_FAILURE 'reason code' values are defined in the following table. Note that the values for the 'reason code' are given in decimal format for readability, but they are actually uint32 values.",
      "ja": "SSH_MSG_CHANNEL_OPEN_FAILURE「理由コード」値を次の表に定義されています。 「理由コード」の値は、読みやすくするために10進形式で与えられていることに注意してください、彼らは実際にUINT32値です。"
    },
    {
      "indent": 12,
      "text": " Symbolic name                           reason code\n -------------                           -----------\nSSH_OPEN_ADMINISTRATIVELY_PROHIBITED          1\nSSH_OPEN_CONNECT_FAILED                       2\nSSH_OPEN_UNKNOWN_CHANNEL_TYPE                 3\nSSH_OPEN_RESOURCE_SHORTAGE                    4",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Requests for assignments of new SSH_MSG_CHANNEL_OPEN 'reason code' values (and associated 'description' text) in the range of 0x00000005 to 0xFDFFFFFF MUST be done through the IETF CONSENSUS method, as described in [RFC2434]. The IANA will not assign Channel Connection Failure 'reason code' values in the range of 0xFE000000 to 0xFFFFFFFF. Channel Connection Failure 'reason code' values in that range are left for PRIVATE USE, as described in [RFC2434].",
      "ja": "[RFC2434]に記載されているように0xFDFFFFFFに0x00000005の範囲に新規SSH_MSG_CHANNEL_OPEN「理由コード」値（および関連する「説明」テキスト）の割当の要求は、IETFコンセンサス方法を介して行われなければなりません。 IANAは0xFFFFFFFFのに0xFE000000の範囲内のチャネル接続の失敗「理由コード」値を割り当てることはありません。 [RFC2434]に記載されているように、その範囲におけるチャネル接続の失敗「理由コード」値は、私的使用のために残されています。"
    },
    {
      "indent": 3,
      "text": "While it is understood that the IANA will have no control over the range of 0xFE000000 to 0xFFFFFFFF, this range will be split in two parts and administered by the following conventions.",
      "ja": "IANAは0xFFFFFFFFのに0xFE000000の範囲を制御することはできませんであろうことが理解されているが、この範囲は二つの部分に分割し、次の規則によって投与されます。"
    },
    {
      "indent": 3,
      "text": "o The range of 0xFE000000 to 0xFEFFFFFF is to be used in conjunction with locally assigned channels. For example, if a channel is proposed with a 'channel type' of \"example_session@example.com\", but fails, then the response will contain either a 'reason code' assigned by the IANA (as listed above and in the range of 0x00000001 to 0xFDFFFFFF) or a locally assigned value in the range of 0xFE000000 to 0xFEFFFFFF. Naturally, if the server does not understand the proposed 'channel type', even if it is a locally defined 'channel type', then the 'reason code' MUST be 0x00000003, as described above, if the 'reason code' is sent. If the server does understand the 'channel type', but the channel still fails to open, then the server SHOULD respond with a locally assigned 'reason code' value consistent with the proposed, local 'channel type'. It is assumed that practitioners will first attempt to use the IANA assigned 'reason code' values and then document their locally assigned 'reason code' values.",
      "ja": "0xFEFFFFFFに0xFE000000の範囲oをローカルに割り当てられたチャネルに関連して使用されます。例えば、チャネルは「example_session@example.com」の「チャンネルタイプ」で提案されている場合、が、上記の範囲に記載されているように、その後、応答は、いずれかのIANA（によって割り当てられた「理由コード」を含むであろう失敗します0xFDFFFFFFには0x00000001）または0xFEFFFFFFに0xFE000000の範囲で局所的に割り当てられた値。サーバは、それがローカルに定義された「チャネルタイプが」であっても、提案された「チャンネルタイプ」を理解していない場合は「理由コードが」送信された場合、上記のように自然に、次に「理由コード」は、0x00000003でなければなりません。サーバーは、「チャンネルタイプ」を理解していますが、チャネルはまだ開かない場合、サーバは、提案され、地元の「チャンネルタイプ」と一致し、ローカルに割り当てられた「理由コード」値で応答する必要があります。実務家が最初に自分のローカルに割り当てられた「理由コード」値を文書化し、その後IANA割り当てられた「理由コード」値を使用しようとすることが想定されます。"
    },
    {
      "indent": 3,
      "text": "o There are no restrictions or suggestions for the range starting with 0xFF. No interoperability is expected for anything used in this range. Essentially, it is for experimentation.",
      "ja": "Oは0xFFと範囲の開始のための制限や提案はありません。何相互運用性は、この範囲で使用される何のために期待されていません。基本的に、それは実験のためです。"
    },
    {
      "indent": 0,
      "text": "5.2. Data Transfer",
      "section_title": true,
      "ja": "5.2。データ転送"
    },
    {
      "indent": 3,
      "text": "The window size specifies how many bytes the other party can send before it must wait for the window to be adjusted. Both parties use the following message to adjust the window.",
      "ja": "ウィンドウのサイズは、それを調整するためのウィンドウを待つ必要があります前に、相手が送信することができますどのように多くのバイト数を指定します。両当事者は、ウィンドウを調整するために、次のメッセージを使用します。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_CHANNEL_WINDOW_ADJUST uint32 recipient channel uint32 bytes to add",
      "ja": "バイトSSH_MSG_CHANNEL_WINDOW_ADJUST UINT32受信者チャネルUINT32追加するバイト"
    },
    {
      "indent": 3,
      "text": "After receiving this message, the recipient MAY send the given number of bytes more than it was previously allowed to send; the window size is incremented. Implementations MUST correctly handle window sizes of up to 2^32 - 1 bytes. The window MUST NOT be increased above 2^32 - 1 bytes.",
      "ja": "このメッセージを受信した後、受信者は、それが以前に送信したよりも多くのバイトの指定された数を送信することができます。ウィンドウサイズはインクリメントされます。 1バイト - 実装が正しく最大2 ^ 32のウィンドウサイズを処理する必要があります。 1バイト - ウィンドウが2 ^ 32を超えて増加してはいけません。"
    },
    {
      "indent": 3,
      "text": "Data transfer is done with messages of the following type.",
      "ja": "データ転送は、以下のタイプのメッセージで行われます。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_CHANNEL_DATA uint32 recipient channel string data",
      "ja": "バイトSSH_MSG_CHANNEL_DATA UINT32受信者チャネル列データ"
    },
    {
      "indent": 3,
      "text": "The maximum amount of data allowed is determined by the maximum packet size for the channel, and the current window size, whichever is smaller. The window size is decremented by the amount of data sent. Both parties MAY ignore all extra data sent after the allowed window is empty.",
      "ja": "許容されるデータの最大量が小さい方のチャネルの最大パケットサイズ、及び現在のウィンドウサイズによって決定されます。ウィンドウサイズは送信されるデータの量だけ減少されます。両当事者は許可され、ウィンドウが空になった後に送信されるすべての余分なデータを無視してもよい（MAY）。"
    },
    {
      "indent": 3,
      "text": "Implementations are expected to have some limit on the SSH transport layer packet size (any limit for received packets MUST be 32768 bytes or larger, as described in [SSH-TRANS]). The implementation of the SSH connection layer",
      "ja": "実装は、（[SSH-TRANS]で説明したように受信されたパケットのための任意の制限は、32768バイト以上でなければなりません）SSHトランスポート層パケットサイズにいくつかの制限を有することが期待されます。 SSH接続層の実装"
    },
    {
      "indent": 3,
      "text": "o MUST NOT advertise a maximum packet size that would result in transport packets larger than its transport layer is willing to receive.",
      "ja": "oは、トランスポート層よりも大きなトランスポートパケットにつながる受け取るために喜んでいるでしょう最大パケットサイズを広告してはなりません。"
    },
    {
      "indent": 3,
      "text": "o MUST NOT generate data packets larger than its transport layer is willing to send, even if the remote end would be willing to accept very large packets.",
      "ja": "Oリモートエンドは非常に大きなパケットを受け入れることをいとわない場合でも、そのトランスポート層は、送信するために喜んでより大きなデータパケットを生成してはなりません。"
    },
    {
      "indent": 3,
      "text": "Additionally, some channels can transfer several types of data. An example of this is stderr data from interactive sessions. Such data can be passed with SSH_MSG_CHANNEL_EXTENDED_DATA messages, where a separate integer specifies the type of data. The available types and their interpretation depend on the type of channel.",
      "ja": "さらに、いくつかのチャネルはデータのいくつかのタイプを転送することができます。この例は、対話型セッションからの標準エラー出力データです。そのようなデータは、別々の整数データのタイプを指定SSH_MSG_CHANNEL_EXTENDED_DATAメッセージで渡すことができます。使用可能なタイプとその解釈は、チャネルの種類によって異なります。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_CHANNEL_EXTENDED_DATA uint32 recipient channel uint32 data_type_code string data",
      "ja": "バイトSSH_MSG_CHANNEL_EXTENDED_DATA UINT32受信者チャネルUINT32のdata_type_code列データ"
    },
    {
      "indent": 3,
      "text": "Data sent with these messages consumes the same window as ordinary data.",
      "ja": "これらのメッセージで送信されたデータは、通常のデータと同じウィンドウを消費します。"
    },
    {
      "indent": 3,
      "text": "Currently, only the following type is defined. Note that the value for the 'data_type_code' is given in decimal format for readability, but the values are actually uint32 values.",
      "ja": "現在のところ、以下の型が定義されます。 「data_type_code」の値は、読みやすくするために10進形式で与えられていることに注意してくださいが、値は実際にはUINT32値です。"
    },
    {
      "indent": 13,
      "text": "  Symbolic name                  data_type_code\n  -------------                  --------------\nSSH_EXTENDED_DATA_STDERR               1",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Extended Channel Data Transfer 'data_type_code' values MUST be assigned sequentially. Requests for assignments of new Extended Channel Data Transfer 'data_type_code' values and their associated Extended Channel Data Transfer 'data' strings, in the range of 0x00000002 to 0xFDFFFFFF, MUST be done through the IETF CONSENSUS method as described in [RFC2434]. The IANA will not assign Extended Channel Data Transfer 'data_type_code' values in the range of 0xFE000000 to 0xFFFFFFFF. Extended Channel Data Transfer 'data_type_code' values in that range are left for PRIVATE USE, as described in [RFC2434]. As is noted, the actual instructions to the IANA are in [SSH-NUMBERS].",
      "ja": "拡張チャネルのデータ転送「data_type_code」値が順次割り当てなければなりません。 [RFC2434]に記載されているように、新しい拡張チャネルデータ転送「data_type_code」値およびそれらに関連する拡張チャンネルデータ転送「データ」列の割り当ての要求は、0xFDFFFFFFに0x00000002の範囲内で、IETFコンセンサス方法を介して行われなければなりません。 IANAは0xFFFFFFFFのに0xFE000000の範囲で拡張チャネルのデータ転送「data_type_code」の値を代入しません。拡張チャンネルデータ転送「data_type_code」[RFC2434]に記載されているようにその範囲内の値は、私的使用のために残されています。注目されるように、IANAに実際の命令は、[SSH-NUMBERS]です。"
    },
    {
      "indent": 0,
      "text": "5.3. Closing a Channel",
      "section_title": true,
      "ja": "5.3。チャンネルを閉じます"
    },
    {
      "indent": 3,
      "text": "When a party will no longer send more data to a channel, it SHOULD send SSH_MSG_CHANNEL_EOF.",
      "ja": "当事者は、もはやチャンネルに多くのデータを送信しないだろうと、それはSSH_MSG_CHANNEL_EOFを送るべきです。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_CHANNEL_EOF uint32 recipient channel",
      "ja": "バイトSSH_MSG_CHANNEL_EOF UINT32受信者チャンネル"
    },
    {
      "indent": 3,
      "text": "No explicit response is sent to this message. However, the application may send EOF to whatever is at the other end of the channel. Note that the channel remains open after this message, and more data may still be sent in the other direction. This message does not consume window space and can be sent even if no window space is available.",
      "ja": "明示的な応答は、このメッセージに送信されません。しかし、アプリケーションは、チャネルの他方の端部にある何にEOFを送信することができます。チャネルは、このメッセージの後に開いたままになり、そしてより多くのデータをさらに他の方向に送られてもよいことに留意されたいです。このメッセージは、ウィンドウのスペースを消費せず、窓のスペースが利用できない場合でも送信することができます。"
    },
    {
      "indent": 3,
      "text": "When either party wishes to terminate the channel, it sends SSH_MSG_CHANNEL_CLOSE. Upon receiving this message, a party MUST send back an SSH_MSG_CHANNEL_CLOSE unless it has already sent this message for the channel. The channel is considered closed for a party when it has both sent and received SSH_MSG_CHANNEL_CLOSE, and the party may then reuse the channel number. A party MAY send SSH_MSG_CHANNEL_CLOSE without having sent or received SSH_MSG_CHANNEL_EOF.",
      "ja": "いずれかの当事者は、チャネルを終了しようとするとき、それはSSH_MSG_CHANNEL_CLOSEを送信します。それはすでにチャネルのためにこのメッセージを送信した場合を除き、このメッセージを受信すると、当事者はSSH_MSG_CHANNEL_CLOSEを返送しなければなりません。チャネルは、それが送信され、SSH_MSG_CHANNEL_CLOSEを受け、当事者は、チャネル番号を再利用することができるしている両方の場合パーティのため閉鎖と考えられます。当事者はSSH_MSG_CHANNEL_EOFを送信または受信せずにSSH_MSG_CHANNEL_CLOSEを送信することができます。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_CHANNEL_CLOSE uint32 recipient channel",
      "ja": "バイトSSH_MSG_CHANNEL_CLOSE UINT32受信者チャンネル"
    },
    {
      "indent": 3,
      "text": "This message does not consume window space and can be sent even if no window space is available.",
      "ja": "このメッセージは、ウィンドウのスペースを消費せず、窓のスペースが利用できない場合でも送信することができます。"
    },
    {
      "indent": 3,
      "text": "It is RECOMMENDED that all data sent before this message be delivered to the actual destination, if possible.",
      "ja": "可能な場合は、このメッセージの前に送信されたすべてのデータは、実際の宛先に配信することが推奨されます。"
    },
    {
      "indent": 0,
      "text": "5.4. Channel-Specific Requests",
      "section_title": true,
      "ja": "5.4。チャンネル固有のリクエスト"
    },
    {
      "indent": 3,
      "text": "Many 'channel type' values have extensions that are specific to that particular 'channel type'. An example is requesting a pty (pseudo terminal) for an interactive session.",
      "ja": "多くの「チャンネルタイプ」値は、その特定の「チャネルタイプ」に固有の拡張子を持ちます。例では、インタラクティブセッションのPTY（疑似端末）を要求されます。"
    },
    {
      "indent": 3,
      "text": "All channel-specific requests use the following format.",
      "ja": "すべてのチャネル固有の要求は、次の形式を使用します。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_CHANNEL_REQUEST uint32 recipient channel string request type in US-ASCII characters only boolean want reply .... type-specific data follows",
      "ja": "US-ASCII文字でバイトSSH_MSG_CHANNEL_REQUEST UINT32受信者チャネルstring要求タイプはタイプ固有のデータは以下の....返事をしたいブール"
    },
    {
      "indent": 3,
      "text": "If 'want reply' is FALSE, no response will be sent to the request. Otherwise, the recipient responds with either SSH_MSG_CHANNEL_SUCCESS, SSH_MSG_CHANNEL_FAILURE, or request-specific continuation messages. If the request is not recognized or is not supported for the channel, SSH_MSG_CHANNEL_FAILURE is returned.",
      "ja": "FALSEである「返事が欲しい」の場合、応答が要求に送信されません。そうでなければ、受信者はSSH_MSG_CHANNEL_SUCCESS、SSH_MSG_CHANNEL_FAILURE、または要求に固有の継続メッセージのいずれかで応答します。リクエストが認識されないか、またはチャネルのためにサポートされていない場合、SSH_MSG_CHANNEL_FAILUREが返されます。"
    },
    {
      "indent": 3,
      "text": "This message does not consume window space and can be sent even if no window space is available. The values of 'request type' are local to each channel type.",
      "ja": "このメッセージは、ウィンドウのスペースを消費せず、窓のスペースが利用できない場合でも送信することができます。 「要求タイプ」の値は、各チャネルタイプにローカルです。"
    },
    {
      "indent": 3,
      "text": "The client is allowed to send further messages without waiting for the response to the request.",
      "ja": "クライアントは、要求に対する応答を待たずに、さらにメッセージを送信することを許可されています。"
    },
    {
      "indent": 3,
      "text": "'request type' names follow the DNS extensibility naming convention outlined in [SSH-ARCH] and [SSH-NUMBERS].",
      "ja": "「リクエスト・タイプの名前は、[SSH-ARCH]で概説したDNS拡張の命名規則と[SSH-NUMBERS]を従ってください。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_CHANNEL_SUCCESS uint32 recipient channel",
      "ja": "バイトSSH_MSG_CHANNEL_SUCCESS UINT32受信者チャンネル"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_CHANNEL_FAILURE uint32 recipient channel",
      "ja": "バイトSSH_MSG_CHANNEL_FAILURE UINT32受信者チャンネル"
    },
    {
      "indent": 3,
      "text": "These messages do not consume window space and can be sent even if no window space is available.",
      "ja": "これらのメッセージは、ウィンドウのスペースを消費しないと何のウィンドウスペースが利用できない場合でも送信することができます。"
    },
    {
      "indent": 0,
      "text": "6. Interactive Sessions",
      "section_title": true,
      "ja": "6.対話型セッション"
    },
    {
      "indent": 3,
      "text": "A session is a remote execution of a program. The program may be a shell, an application, a system command, or some built-in subsystem. It may or may not have a tty, and may or may not involve X11 forwarding. Multiple sessions can be active simultaneously.",
      "ja": "セッションは、プログラムのリモート実行です。プログラムはシェル、アプリケーション、システムコマンド、またはいくつかの組み込みのサブシステムとすることができます。それはよく、または端末を持っていない可能性があり、およびX11転送を伴わない場合がありますか。複数のセッションが同時にアクティブにすることができます。"
    },
    {
      "indent": 0,
      "text": "6.1. Opening a Session",
      "section_title": true,
      "ja": "6.1。セッションを開きます"
    },
    {
      "indent": 3,
      "text": "A session is started by sending the following message.",
      "ja": "セッションでは、次のメッセージを送信することにより開始されます。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_CHANNEL_OPEN string \"session\" uint32 sender channel uint32 initial window size uint32 maximum packet size",
      "ja": "送信側チャネルUINT32バイトSSH_MSG_CHANNEL_OPEN文字列「セッション」の初期ウィンドウサイズUINT32最大パケットサイズUINT32"
    },
    {
      "indent": 3,
      "text": "Client implementations SHOULD reject any session channel open requests to make it more difficult for a corrupt server to attack the client.",
      "ja": "クライアントの実装が破損しているサーバがクライアントを攻撃することがより困難にするために任意のセッションチャネルオープン要求を拒否すべきです。"
    },
    {
      "indent": 0,
      "text": "6.2. Requesting a Pseudo-Terminal",
      "section_title": true,
      "ja": "6.2。擬似端末の要求"
    },
    {
      "indent": 3,
      "text": "A pseudo-terminal can be allocated for the session by sending the following message.",
      "ja": "擬似端末は、次のメッセージを送信することによってセッションに割り当てることができます。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_CHANNEL_REQUEST uint32 recipient channel string \"pty-req\" boolean want_reply string TERM environment variable value (e.g., vt100) uint32 terminal width, characters (e.g., 80) uint32 terminal height, rows (e.g., 24) uint32 terminal width, pixels (e.g., 640) uint32 terminal height, pixels (e.g., 480) string encoded terminal modes",
      "ja": "バイトSSH_MSG_CHANNEL_REQUEST UINT32受信者のチャネル列 \"PTY-REQ\" ブールwant_replyストリングTERM環境変数の値（例えば、VT100）UINT32端子幅、文字（例えば、80）UINT32端子高さ、行（例えば、24）UINT32端子幅、ピクセル（例えば、640）は、端末の高さ、ピクセル（例えば、480）は、文字列エンコードされた端末モードをUINT32"
    },
    {
      "indent": 3,
      "text": "The 'encoded terminal modes' are described in Section 8. Zero dimension parameters MUST be ignored. The character/row dimensions override the pixel dimensions (when nonzero). Pixel dimensions refer to the drawable area of the window.",
      "ja": "「符号化端末モードが」8ゼロ寸法パラメータは無視されなければならないセクションに記載されています。 （ときにゼロでない）文字/行寸法はピクセル寸法をオーバーライドします。ピクセル寸法は、ウィンドウの描画可能エリアを参照してください。"
    },
    {
      "indent": 3,
      "text": "The dimension parameters are only informational.",
      "ja": "寸法パラメータは、情報提供のみです。"
    },
    {
      "indent": 3,
      "text": "The client SHOULD ignore pty requests.",
      "ja": "クライアントは、PTY要求を無視すべきです。"
    },
    {
      "indent": 0,
      "text": "6.3. X11 Forwarding",
      "section_title": true,
      "ja": "6.3。 X11フォワーディング"
    },
    {
      "indent": 0,
      "text": "6.3.1. Requesting X11 Forwarding",
      "section_title": true,
      "ja": "6.3.1。 X11転送を要求します"
    },
    {
      "indent": 3,
      "text": "X11 forwarding may be requested for a session by sending a SSH_MSG_CHANNEL_REQUEST message.",
      "ja": "X11フォワーディングはSSH_MSG_CHANNEL_REQUESTメッセージを送信することにより、セッションのために要求することができます。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_CHANNEL_REQUEST uint32 recipient channel string \"x11-req\" boolean want reply boolean single connection string x11 authentication protocol string x11 authentication cookie uint32 x11 screen number",
      "ja": "バイトSSH_MSG_CHANNEL_REQUEST UINT32受信者のチャネルstring「X11-REQ」ブールブール単一の接続文字列X11の認証プロトコル文字列X11認証クッキーUINT32のx11の画面番号を返信します"
    },
    {
      "indent": 3,
      "text": "It is RECOMMENDED that the 'x11 authentication cookie' that is sent be a fake, random cookie, and that the cookie be checked and replaced by the real cookie when a connection request is received.",
      "ja": "それは、偽の、ランダムクッキー、接続要求を受信したときにクッキーを実クッキーによって確認し、交換することを可能送られる「X11認証クッキー」ことが推奨されます。"
    },
    {
      "indent": 3,
      "text": "X11 connection forwarding should stop when the session channel is closed. However, already opened forwardings should not be automatically closed when the session channel is closed.",
      "ja": "セッションチャンネルが閉じているときにX11接続の転送を停止する必要があります。セッションチャンネルが閉じているときしかし、既に開かれているフォワーディングを自動的に閉じるべきではありません。"
    },
    {
      "indent": 3,
      "text": "If 'single connection' is TRUE, only a single connection should be forwarded. No more connections will be forwarded after the first, or after the session channel has been closed.",
      "ja": "「単一の接続が」TRUEの場合は、単一の接続のみを転送する必要があります。これ以上の接続は、最初の後に転送されません、またはセッションチャンネルの後に閉鎖されました。"
    },
    {
      "indent": 3,
      "text": "The 'x11 authentication protocol' is the name of the X11 authentication method used, e.g., \"MIT-MAGIC-COOKIE-1\".",
      "ja": "「X11認証プロトコルは、」使用X11認証方式、例えば、「MIT-MAGIC-COOKIE-1」の名前です。"
    },
    {
      "indent": 3,
      "text": "The 'x11 authentication cookie' MUST be hexadecimal encoded.",
      "ja": "「X11認証クッキーを」進符号化されなければなりません。"
    },
    {
      "indent": 3,
      "text": "The X Protocol is documented in [SCHEIFLER].",
      "ja": "Xプロトコル[SCHEIFLER]に記載されています。"
    },
    {
      "indent": 0,
      "text": "6.3.2. X11 Channels",
      "section_title": true,
      "ja": "6.3.2。 X11チャンネル"
    },
    {
      "indent": 3,
      "text": "X11 channels are opened with a channel open request. The resulting channels are independent of the session, and closing the session channel does not close the forwarded X11 channels.",
      "ja": "X11チャネルはチャネルオープン要求で開かれています。得られたチャネルは、セッションの独立しており、セッションチャネルを閉じると転送X11チャネルを閉じません。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_CHANNEL_OPEN string \"x11\" uint32 sender channel uint32 initial window size uint32 maximum packet size string originator address (e.g., \"192.168.7.38\") uint32 originator port",
      "ja": "初期ウィンドウサイズUINT32最大パケットサイズの文字列の発信元アドレス（例えば、「192.168.7.38」）UINT32発信元ポートUINT32送信側チャネルUINT32バイトSSH_MSG_CHANNEL_OPEN文字列「X11」"
    },
    {
      "indent": 3,
      "text": "The recipient should respond with SSH_MSG_CHANNEL_OPEN_CONFIRMATION or SSH_MSG_CHANNEL_OPEN_FAILURE.",
      "ja": "受信者はSSH_MSG_CHANNEL_OPEN_CONFIRMATIONまたはSSH_MSG_CHANNEL_OPEN_FAILUREで応答しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Implementations MUST reject any X11 channel open requests if they have not requested X11 forwarding.",
      "ja": "彼らはX11転送を要求していない場合、実装はどんなX11チャンネルオープン要求を拒絶しなければなりません。"
    },
    {
      "indent": 0,
      "text": "6.4. Environment Variable Passing",
      "section_title": true,
      "ja": "6.4。環境変数を渡します"
    },
    {
      "indent": 3,
      "text": "Environment variables may be passed to the shell/command to be started later. Uncontrolled setting of environment variables in a privileged process can be a security hazard. It is recommended that implementations either maintain a list of allowable variable names or only set environment variables after the server process has dropped sufficient privileges.",
      "ja": "環境変数は、後に起動するシェル/コマンドに渡すことができます。特権プロセスでの環境変数の制御されない設定はセキュリティ上の危険することができます。サーバー・プロセスが十分な特権を落とした後の実装が許容変数名のみ設定した環境変数のリストを維持するいずれかのことをお勧めします。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_CHANNEL_REQUEST uint32 recipient channel string \"env\" boolean want reply string variable name string variable value",
      "ja": "バイトSSH_MSG_CHANNEL_REQUEST UINT32受信者チャネルstring「ENV」ブールは、文字列変数名の文字列変数の値を返信します"
    },
    {
      "indent": 0,
      "text": "6.5. Starting a Shell or a Command",
      "section_title": true,
      "ja": "6.5。シェルまたはコマンドを起動します"
    },
    {
      "indent": 3,
      "text": "Once the session has been set up, a program is started at the remote end. The program can be a shell, an application program, or a subsystem with a host-independent name. Only one of these requests can succeed per channel.",
      "ja": "セッションが設定されると、プログラムがリモートエンドで開始されます。プログラムはシェル、アプリケーションプログラム、またはホストに依存しない名前のサブシステムであることができます。のみ、これらの要求の一つは、チャネルごとに成功することができます。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_CHANNEL_REQUEST uint32 recipient channel string \"shell\" boolean want reply",
      "ja": "バイトSSH_MSG_CHANNEL_REQUEST UINT32受信者チャネルstring「殻」ブール返信したいです"
    },
    {
      "indent": 3,
      "text": "This message will request that the user's default shell (typically defined in /etc/passwd in UNIX systems) be started at the other end.",
      "ja": "このメッセージは、ユーザーのデフォルトのシェルが（通常はUNIXシステムでは/ etc / passwdに定義された）もう一方の端に開始することを要求します。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_CHANNEL_REQUEST uint32 recipient channel string \"exec\" boolean want reply string command",
      "ja": "バイトSSH_MSG_CHANNEL_REQUEST UINT32受信者のチャネルstring「幹部」ブール値は文字列コマンドを返信します"
    },
    {
      "indent": 3,
      "text": "This message will request that the server start the execution of the given command. The 'command' string may contain a path. Normal precautions MUST be taken to prevent the execution of unauthorized commands.",
      "ja": "このメッセージは、サーバーが指定されたコマンドの実行を開始することを要求します。 「コマンド」という文字列は、パスが含まれていてもよいです。通常の予防措置は、不正コマンドの実行を防ぐために取らなければなりません。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_CHANNEL_REQUEST uint32 recipient channel string \"subsystem\" boolean want reply string subsystem name",
      "ja": "バイトSSH_MSG_CHANNEL_REQUEST UINT32受信者チャネルstring「サブシステム」ブールは、文字列のサブシステム名を返信します"
    },
    {
      "indent": 3,
      "text": "This last form executes a predefined subsystem. It is expected that these will include a general file transfer mechanism, and possibly other features. Implementations may also allow configuring more such mechanisms. As the user's shell is usually used to execute the subsystem, it is advisable for the subsystem protocol to have a \"magic cookie\" at the beginning of the protocol transaction to distinguish it from arbitrary output generated by shell initialization scripts, etc. This spurious output from the shell may be filtered out either at the server or at the client.",
      "ja": "この最後の形式は、事前定義されたサブシステムを実行します。なお、これらは、一般的なファイル転送メカニズム、そしておそらく他の特徴を含むことが期待されます。実装はまた、より多くのそのようなメカニズムを設定することが可能になります。ユーザのシェルは通常、サブシステムを実行するために使用されるサブシステムのプロトコルはシェルの初期化スクリプトによって生成された任意の出力からそれを区別するために、プロトコルトランザクションの開始時に「マジッククッキー」を持っているため、それはなど、このスプリアスことをお勧めしますシェルからのサーバーで、またはクライアントのいずれかで除外することができます。"
    },
    {
      "indent": 3,
      "text": "The server SHOULD NOT halt the execution of the protocol stack when starting a shell or a program. All input and output from these SHOULD be redirected to the channel or to the encrypted tunnel.",
      "ja": "シェルやプログラムを起動するとき、サーバは、プロトコル・スタックの実行を停止すべきではありません。これらのすべての入力および出力は、チャネルまたは暗号化されたトンネルにリダイレクトされるべきです。"
    },
    {
      "indent": 3,
      "text": "It is RECOMMENDED that the reply to these messages be requested and checked. The client SHOULD ignore these messages.",
      "ja": "これらのメッセージへの返信を要求することを推奨してチェックされます。クライアントは、これらのメッセージを無視します。"
    },
    {
      "indent": 3,
      "text": "Subsystem names follow the DNS extensibility naming convention outlined in [SSH-NUMBERS].",
      "ja": "サブシステム名は[SSH-NUMBERS]に概説されたDNS拡張の命名規則に従ってください。"
    },
    {
      "indent": 0,
      "text": "6.6. Session Data Transfer",
      "section_title": true,
      "ja": "6.6。セッションデータ転送"
    },
    {
      "indent": 3,
      "text": "Data transfer for a session is done using SSH_MSG_CHANNEL_DATA and SSH_MSG_CHANNEL_EXTENDED_DATA packets and the window mechanism. The extended data type SSH_EXTENDED_DATA_STDERR has been defined for stderr data.",
      "ja": "セッションのためのデータ転送はSSH_MSG_CHANNEL_DATAとSSH_MSG_CHANNEL_EXTENDED_DATAパケットとウィンドウのメカニズムを使用して行われます。拡張データ型SSH_EXTENDED_DATA_STDERRは、標準エラー出力データのために定義されています。"
    },
    {
      "indent": 0,
      "text": "6.7. Window Dimension Change Message",
      "section_title": true,
      "ja": "6.7。ウィンドウの寸法の変更メッセージ"
    },
    {
      "indent": 3,
      "text": "When the window (terminal) size changes on the client side, it MAY send a message to the other side to inform it of the new dimensions.",
      "ja": "ウィンドウ（端子）サイズは、クライアント側で変更した場合、それは新しい次元のそれを知らせるために、他の側にメッセージを送信することができます。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_CHANNEL_REQUEST uint32 recipient channel string \"window-change\" boolean FALSE uint32 terminal width, columns uint32 terminal height, rows uint32 terminal width, pixels uint32 terminal height, pixels",
      "ja": "バイトSSH_MSG_CHANNEL_REQUEST UINT32受信者のチャネル列「ウィンドウ変化」ブールFALSE UINT32端子幅、列UINT32端末高さ、行UINT32端末幅、UINT32端末高画素、画素"
    },
    {
      "indent": 3,
      "text": "A response SHOULD NOT be sent to this message.",
      "ja": "応答は、このメッセージに送るべきではありません。"
    },
    {
      "indent": 0,
      "text": "6.8. Local Flow Control",
      "section_title": true,
      "ja": "6.8。ローカルフロー制御"
    },
    {
      "indent": 3,
      "text": "On many systems, it is possible to determine if a pseudo-terminal is using control-S/control-Q flow control. When flow control is allowed, it is often desirable to do the flow control at the client end to speed up responses to user requests. This is facilitated by the following notification. Initially, the server is responsible for flow control. (Here, again, client means the side originating the session, and server means the other side.)",
      "ja": "多くのシステムでは、擬似端末は、制御-S /制御Qフロー制御を使用しているかどうかを決定することが可能です。フロー制御が許可されている場合は、ユーザーの要求に対する応答を高速化するために、クライアント側でフロー制御を行うことが望ましいことが多いです。これは、次の通知によって促進されます。最初に、サーバーは、フロー制御を担当しています。 （ここで、再び、クライアントがセッションを発信する側を意味し、サーバーは、他の側を意味します。）"
    },
    {
      "indent": 3,
      "text": "The message below is used by the server to inform the client when it can or cannot perform flow control (control-S/control-Q processing). If 'client can do' is TRUE, the client is allowed to do flow control using control-S and control-Q. The client MAY ignore this message.",
      "ja": "メッセージは、以下が又はフロー制御（コントロール-S /制御-Q処理）を行うことができないことができ、クライアントに通知するためにサーバによって使用されます。 「を実行することができ、クライアントが」TRUEの場合、クライアントはコントロール-Sおよび制御-Qを使用してフロー制御を行うことを許可されています。クライアントは、このメッセージを無視してもよい（MAY）。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_CHANNEL_REQUEST uint32 recipient channel string \"xon-xoff\" boolean FALSE boolean client can do",
      "ja": "バイトSSH_MSG_CHANNEL_REQUEST UINT32受信者チャネルstring「XON-XOFF」ブールFALSEブールクライアントが行うことができます"
    },
    {
      "indent": 3,
      "text": "No response is sent to this message.",
      "ja": "何の応答は、このメッセージに送信されません。"
    },
    {
      "indent": 0,
      "text": "6.9. Signals",
      "section_title": true,
      "ja": "6.9。シグナル"
    },
    {
      "indent": 3,
      "text": "A signal can be delivered to the remote process/service using the following message. Some systems may not implement signals, in which case they SHOULD ignore this message.",
      "ja": "信号は、次のメッセージを使用してリモートプロセス/サービスに送達することができます。一部のシステムでは、彼らは、このメッセージを無視すべきである。その場合には信号を、実装しない場合があります。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_CHANNEL_REQUEST uint32 recipient channel string \"signal\" boolean FALSE string signal name (without the \"SIG\" prefix)",
      "ja": "（「SIG」接頭辞なし）バイトSSH_MSG_CHANNEL_REQUEST UINT32受信者のチャネルstring「信号」ブールFALSE列信号名"
    },
    {
      "indent": 3,
      "text": "'signal name' values will be encoded as discussed in the passage describing SSH_MSG_CHANNEL_REQUEST messages using \"exit-signal\" in this section.",
      "ja": "このセクションの「終了信号」を用いSSH_MSG_CHANNEL_REQUESTメッセージを説明する通路で説明したように「信号名」の値は、符号化されます。"
    },
    {
      "indent": 0,
      "text": "6.10. Returning Exit Status",
      "section_title": true,
      "ja": "6.10。終了ステータスを返します"
    },
    {
      "indent": 3,
      "text": "When the command running at the other end terminates, the following message can be sent to return the exit status of the command. Returning the status is RECOMMENDED. No acknowledgement is sent for this message. The channel needs to be closed with SSH_MSG_CHANNEL_CLOSE after this message.",
      "ja": "もう一方の端で動作するコマンドが終了すると、以下のメッセージがコマンドの終了ステータスを返すように送信することができます。ステータスを返すことをお勧めします。確認応答は、このメッセージのために送信されません。チャネルは、このメッセージの後にSSH_MSG_CHANNEL_CLOSEで閉鎖する必要があります。"
    },
    {
      "indent": 3,
      "text": "The client MAY ignore these messages.",
      "ja": "クライアントは、これらのメッセージは無視してもよい（MAY）。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_CHANNEL_REQUEST uint32 recipient channel string \"exit-status\" boolean FALSE uint32 exit_status",
      "ja": "バイトSSH_MSG_CHANNEL_REQUEST UINT32受信者チャネルstring「終了ステータス」ブールFALSE UINT32のEXIT_STATUS"
    },
    {
      "indent": 3,
      "text": "The remote command may also terminate violently due to a signal. Such a condition can be indicated by the following message. A zero 'exit_status' usually means that the command terminated successfully.",
      "ja": "リモートコマンドはまた、信号に激しく終了してもよいです。そのような条件は、次のメッセージによって示すことができます。ゼロ「EXIT_STATUSは、」通常、コマンドが正常に終了したことを意味します。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_CHANNEL_REQUEST uint32 recipient channel string \"exit-signal\" boolean FALSE string signal name (without the \"SIG\" prefix) boolean core dumped string error message in ISO-10646 UTF-8 encoding string language tag [RFC3066]",
      "ja": "バイトSSH_MSG_CHANNEL_REQUEST UINT32受信者のチャネル列「終了信号」ブールFALSE列信号名（「SIG」接頭辞なし）ブールコアは、ISO-10646 UTF-8エンコーディング文字列言語タグ[RFC3066]の文字列エラーメッセージをダンプ"
    },
    {
      "indent": 3,
      "text": "The 'signal name' is one of the following (these are from [POSIX]).",
      "ja": "「信号名」は、以下の一つである（これらは[POSIX]からのものです）。"
    },
    {
      "indent": 12,
      "text": "ABRT\nALRM\nFPE\nHUP\nILL\nINT\nKILL\nPIPE\nQUIT\nSEGV\nTERM\nUSR1\nUSR2",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Additional 'signal name' values MAY be sent in the format \"sig-name@xyz\", where \"sig-name\" and \"xyz\" may be anything a particular implementer wants (except the \"@\" sign). However, it is suggested that if a 'configure' script is used, any non-standard 'signal name' values it finds be encoded as \"SIG@xyz.config.guess\", where \"SIG\" is the 'signal name' without the \"SIG\" prefix, and \"xyz\" is the host type, as determined by \"config.guess\".",
      "ja": "追加「信号名」の値は、「SIG-名」と「XYZ」は（「@」記号を除く）は、特定の実装を望んでいるものかもしれフォーマット「SIG-名@ xyzの」、で送信することができます。しかし、「設定」スクリプトが使用される場合、任意の非標準の「信号名」は、それが「SIG」は無し「信号名」である「SIG@xyz.config.guess」として符号化される値見付けることが示唆されています「はconfig.guess」によって決定された「SIG」接頭辞、および「XYZ」は、ホストタイプです。"
    },
    {
      "indent": 3,
      "text": "The 'error message' contains an additional textual explanation of the error message. The message may consist of multiple lines separated by CRLF (Carriage Return - Line Feed) pairs. The client software MAY display this message to the user. If this is done, the client software should take the precautions discussed in [SSH-ARCH].",
      "ja": "「エラーメッセージは」エラーメッセージの追加テキストの説明が含まれています。対 - メッセージは、CRLF（改行キャリッジリターン）で区切られた複数の行から構成されてもよいです。クライアントソフトウェアは、ユーザーにこのメッセージを表示することがあります。これが行われた場合、クライアントソフトウェアは[SSH-ARCH]で議論予防措置を講じなければなりません。"
    },
    {
      "indent": 0,
      "text": "7. TCP/IP Port Forwarding",
      "section_title": true,
      "ja": "7. TCP / IPポートフォワーディング"
    },
    {
      "indent": 0,
      "text": "7.1. Requesting Port Forwarding",
      "section_title": true,
      "ja": "7.1。ポート転送を要求します"
    },
    {
      "indent": 3,
      "text": "A party need not explicitly request forwardings from its own end to the other direction. However, if it wishes that connections to a port on the other side be forwarded to the local side, it must explicitly request this.",
      "ja": "当事者は、明示的に他の方向への独自の端からフォワーディングを要求する必要はありません。それは、他の側のポートへの接続は、ローカル側に転送することを希望する場合は、それがこれを明示的に要求しなければなりません。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_GLOBAL_REQUEST string \"tcpip-forward\" boolean want reply string address to bind (e.g., \"0.0.0.0\") uint32 port number to bind",
      "ja": "バイトSSH_MSG_GLOBAL_REQUEST文字列「TCPIPフォワード」ブールは、（例えば、「0.0.0.0」）UINT32ポート番号バインドにバインドするために、文字列のアドレスを返信します"
    },
    {
      "indent": 3,
      "text": "The 'address to bind' and 'port number to bind' specify the IP address (or domain name) and port on which connections for forwarding are to be accepted. Some strings used for 'address to bind' have special-case semantics.",
      "ja": "転送のための接続を受け入れられるようにされているIPアドレス（またはドメイン名）とポートを指定し、「バインドするポート番号を」「アドレスをバインドします」。 「バインドするアドレス」のために使用するいくつかの文字列は、特殊なケースのセマンティクスを持ちます。"
    },
    {
      "indent": 3,
      "text": "o \"\" means that connections are to be accepted on all protocol families supported by the SSH implementation.",
      "ja": "O「」接続はSSHの実装でサポートされているすべてのプロトコル・ファミリーに受け入れられるべきであることを意味します。"
    },
    {
      "indent": 3,
      "text": "o \"0.0.0.0\" means to listen on all IPv4 addresses.",
      "ja": "O「0.0.0.0」は、すべてのIPv4アドレスをリッスンすることを意味します。"
    },
    {
      "indent": 3,
      "text": "o \"::\" means to listen on all IPv6 addresses.",
      "ja": "O「::」すべてのIPv6アドレスをリッスンすることを意味します。"
    },
    {
      "indent": 3,
      "text": "o \"localhost\" means to listen on all protocol families supported by the SSH implementation on loopback addresses only ([RFC3330] and [RFC3513]).",
      "ja": "O「localhost」はSSHのループバックアドレス上の実装のみ（[RFC3330]と[RFC3513]）でサポートされているすべてのプロトコルファミリでリッスンすることを意味します。"
    },
    {
      "indent": 3,
      "text": "o \"127.0.0.1\" and \"::1\" indicate listening on the loopback interfaces for IPv4 and IPv6, respectively.",
      "ja": "O「127.0.0.1」と「:: 1」は、それぞれ、IPv4およびIPv6のループバックインターフェイスをリッスン示します。"
    },
    {
      "indent": 3,
      "text": "Note that the client can still filter connections based on information passed in the open request.",
      "ja": "クライアントがまだオープン要求に渡された情報に基づいて接続をフィルタできることに注意してください。"
    },
    {
      "indent": 3,
      "text": "Implementations should only allow forwarding privileged ports if the user has been authenticated as a privileged user.",
      "ja": "ユーザーが特権ユーザーとして認証された場合、実装は唯一の特権ポートを転送できるようにする必要があります。"
    },
    {
      "indent": 3,
      "text": "Client implementations SHOULD reject these messages; they are normally only sent by the client.",
      "ja": "クライアントの実装は、これらのメッセージを拒否すべきです。彼らは通常のみ、クライアントによって送信されます。"
    },
    {
      "indent": 3,
      "text": "If a client passes 0 as port number to bind and has 'want reply' as TRUE, then the server allocates the next available unprivileged port number and replies with the following message; otherwise, there is no response-specific data.",
      "ja": "クライアントがバインドするポート番号として0を渡すとTRUEとして「返信したい」していると、サーバーは、次の使用可能な非特権ポート番号を割り当て、次のようなメッセージで応答した場合は、それ以外の場合は、応答固有のデータがありません。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_REQUEST_SUCCESS uint32 port that was bound on the server",
      "ja": "サーバー上でバインドされたポートUINT32バイトSSH_MSG_REQUEST_SUCCESS"
    },
    {
      "indent": 3,
      "text": "A port forwarding can be canceled with the following message. Note that channel open requests may be received until a reply to this message is received.",
      "ja": "ポート転送は、次のメッセージでキャンセルすることができます。このメッセージへの応答が受信されるまでチャネルオープン要求が受信されても​​よいことに留意されたいです。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_GLOBAL_REQUEST string \"cancel-tcpip-forward\" boolean want reply string address_to_bind (e.g., \"127.0.0.1\") uint32 port number to bind",
      "ja": "バインドのバイトSSH_MSG_GLOBAL_REQUEST文字列「キャンセル-TCPIPフォワード」ブール値（例えば、「127.0.0.1」）は、文字列address_to_bindを返信したいUINT32ポート番号"
    },
    {
      "indent": 3,
      "text": "Client implementations SHOULD reject these messages; they are normally only sent by the client.",
      "ja": "クライアントの実装は、これらのメッセージを拒否すべきです。彼らは通常のみ、クライアントによって送信されます。"
    },
    {
      "indent": 0,
      "text": "7.2. TCP/IP Forwarding Channels",
      "section_title": true,
      "ja": "7.2。 TCP / IPの転送チャンネル"
    },
    {
      "indent": 3,
      "text": "When a connection comes to a port for which remote forwarding has been requested, a channel is opened to forward the port to the other side.",
      "ja": "接続は、リモート転送が要求されたポートになると、チャンネルは反対側にポートを転送するために開かれています。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_CHANNEL_OPEN string \"forwarded-tcpip\" uint32 sender channel uint32 initial window size uint32 maximum packet size string address that was connected uint32 port that was connected string originator IP address uint32 originator port",
      "ja": "文字列の発信元IPアドレスUINT32発信元ポートに接続されたポートUINT32接続されていた初期のウィンドウサイズUINT32最大パケットサイズの文字列アドレスUINT32バイトSSH_MSG_CHANNEL_OPEN文字列「転送-TCPIP」UINT32送信側チャネル"
    },
    {
      "indent": 3,
      "text": "Implementations MUST reject these messages unless they have previously requested a remote TCP/IP port forwarding with the given port number.",
      "ja": "彼らは以前に与えられたポート番号を使用して、リモートTCP / IPポート転送を要求していない限り、実装は、これらのメッセージを拒絶しなければなりません。"
    },
    {
      "indent": 3,
      "text": "When a connection comes to a locally forwarded TCP/IP port, the following packet is sent to the other side. Note that these messages MAY also be sent for ports for which no forwarding has been explicitly requested. The receiving side must decide whether to allow the forwarding.",
      "ja": "接続はローカルに転送TCP / IPポートになると、次のパケットが相手側に送信されます。これらのメッセージも何の転送が明示的に要求されていないいるポートに対して送信されるかもしれないことに注意してください。受信側では、転送を許可するかどうかを決定する必要があります。"
    },
    {
      "indent": 6,
      "text": "byte SSH_MSG_CHANNEL_OPEN string \"direct-tcpip\" uint32 sender channel uint32 initial window size uint32 maximum packet size string host to connect uint32 port to connect string originator IP address uint32 originator port",
      "ja": "文字列の発信元IPアドレスUINT32発信元ポートを接続するには、UINT32ポートを接続するための初期ウィンドウサイズUINT32最大パケットサイズstringホストUINT32バイトSSH_MSG_CHANNEL_OPEN文字列送信側チャネルUINT32「直接TCPIP」"
    },
    {
      "indent": 3,
      "text": "The 'host to connect' and 'port to connect' specify the TCP/IP host and port where the recipient should connect the channel. The 'host to connect' may be either a domain name or a numeric IP address.",
      "ja": "受信者がチャンネルを接続する必要があり、TCP / IPホストとポートを指定し、「接続するポートを」「ホストが接続します」。 「接続するホストは、」ドメイン名または数値IPアドレスのいずれであってもよいです。"
    },
    {
      "indent": 3,
      "text": "The 'originator IP address' is the numeric IP address of the machine from where the connection request originates, and the 'originator port' is the port on the host from where the connection originated.",
      "ja": "「発信元IPアドレスは、」接続要求が発信し、「発信元ポートは、」接続した元の場所からホスト上のポートであるところから、機械の数値IPアドレスです。"
    },
    {
      "indent": 3,
      "text": "Forwarded TCP/IP channels are independent of any sessions, and closing a session channel does not in any way imply that forwarded connections should be closed.",
      "ja": "転送されたTCP / IPチャネルは、任意のセッションから独立している、とのセッションのチャネルをクローズすると、どのような方法で転送接続が閉じられなければならないことを意味するものではありません。"
    },
    {
      "indent": 3,
      "text": "Client implementations SHOULD reject direct TCP/IP open requests for security reasons.",
      "ja": "クライアントの実装は、セキュリティ上の理由から、直接TCP / IPのオープン要求を拒否すべきです。"
    },
    {
      "indent": 0,
      "text": "8. Encoding of Terminal Modes",
      "section_title": true,
      "ja": "ターミナルモードの8エンコード"
    },
    {
      "indent": 3,
      "text": "All 'encoded terminal modes' (as passed in a pty request) are encoded into a byte stream. It is intended that the coding be portable across different environments. The stream consists of opcode-argument pairs wherein the opcode is a byte value. Opcodes 1 to 159 have a single uint32 argument. Opcodes 160 to 255 are not yet defined, and cause parsing to stop (they should only be used after any other data). The stream is terminated by opcode TTY_OP_END (0x00).",
      "ja": "すべての「符号化端末モードが」（PTY要求に渡される）バイトストリームに符号化されます。コードが異なる環境間で移植することを意図しています。ストリームは、オペコードがバイト値であることを特徴とする請求オペコード引数の対からなります。オペコード1〜159は、単一UINT32引数を持っています。オペコード255から160がまだ定義されていない、と停止するように解析し、原因（彼らは唯一、他のデータの後に使用する必要があります）。ストリームは、オペコードTTY_OP_END（$ 00）で終了します。"
    },
    {
      "indent": 3,
      "text": "The client SHOULD put any modes it knows about in the stream, and the server MAY ignore any modes it does not know about. This allows some degree of machine-independence, at least between systems that use a POSIX-like tty interface. The protocol can support other systems as well, but the client may need to fill reasonable values for a number of parameters so the server pty gets set to a reasonable mode (the server leaves all unspecified mode bits in their default values, and only some combinations make sense).",
      "ja": "クライアントは、ストリームで知っているいずれかのモードを置く必要があり、サーバは知らない任意のモードを無視するかもしれません。これは、少なくともPOSIXのようなTTYインタフェースを使用するシステム間で、マシン独立ある程度のことができます。プロトコルは、他のシステムをサポートすることができますが、サーバーのPTYは、合理的なモードに設定されますので、クライアントは、パラメータの数のための合理的な値を記入する必要があるかもしれません（サーバーがデフォルト値で、すべての未指定モードビット、および唯一のいくつかの組み合わせを残し意味をなします）。"
    },
    {
      "indent": 3,
      "text": "The naming of opcode values mostly follows the POSIX terminal mode flags. The following opcode values have been defined. Note that the values given below are in decimal format for readability, but they are actually byte values.",
      "ja": "オペコード値の命名は、主にPOSIXターミナルモードフラグに従います。以下のオペコードの値が定義されています。下記の値は、読みやすくするために10進形式であることに注意してください、しかし、彼らは実際にはバイト値です。"
    },
    {
      "indent": 10,
      "text": "opcode  mnemonic       description\n------  --------       -----------\n0     TTY_OP_END  Indicates end of options.\n1     VINTR       Interrupt character; 255 if none.  Similarly\n                   for the other characters.  Not all of these\n                   characters are supported on all systems.\n2     VQUIT       The quit character (sends SIGQUIT signal on\n                   POSIX systems).\n3     VERASE      Erase the character to left of the cursor.\n4     VKILL       Kill the current input line.\n5     VEOF        End-of-file character (sends EOF from the\n                   terminal).\n6     VEOL        End-of-line character in addition to\n                   carriage return and/or linefeed.\n7     VEOL2       Additional end-of-line character.\n8     VSTART      Continues paused output (normally\n                   control-Q).\n9     VSTOP       Pauses output (normally control-S).\n10    VSUSP       Suspends the current program.\n11    VDSUSP      Another suspend character.",
      "raw": true
    },
    {
      "indent": 10,
      "text": "12 VREPRINT Reprints the current input line. 13 VWERASE Erases a word left of cursor. 14 VLNEXT Enter the next character typed literally, even if it is a special character 15 VFLUSH Character to flush output. 16 VSWTCH Switch to a different shell layer. 17 VSTATUS Prints system status line (load, command, pid, etc). 18 VDISCARD Toggles the flushing of terminal output. 30 IGNPAR The ignore parity flag. The parameter SHOULD be 0 if this flag is FALSE, and 1 if it is TRUE. 31 PARMRK Mark parity and framing errors. 32 INPCK Enable checking of parity errors. 33 ISTRIP Strip 8th bit off characters. 34 INLCR Map NL into CR on input. 35 IGNCR Ignore CR on input. 36 ICRNL Map CR to NL on input. 37 IUCLC Translate uppercase characters to lowercase. 38 IXON Enable output flow control. 39 IXANY Any char will restart after stop. 40 IXOFF Enable input flow control. 41 IMAXBEL Ring bell on input queue full. 50 ISIG Enable signals INTR, QUIT, [D]SUSP. 51 ICANON Canonicalize input lines. 52 XCASE Enable input and output of uppercase characters by preceding their lowercase equivalents with \"\\\". 53 ECHO Enable echoing. 54 ECHOE Visually erase chars. 55 ECHOK Kill character discards current line. 56 ECHONL Echo NL even if ECHO is off. 57 NOFLSH Don't flush after interrupt. 58 TOSTOP Stop background jobs from output. 59 IEXTEN Enable extensions. 60 ECHOCTL Echo control characters as ^(Char). 61 ECHOKE Visual erase for line kill. 62 PENDIN Retype pending input. 70 OPOST Enable output processing. 71 OLCUC Convert lowercase to uppercase. 72 ONLCR Map NL to CR-NL. 73 OCRNL Translate carriage return to newline (output). 74 ONOCR Translate newline to carriage return-newline (output). 75 ONLRET Newline performs a carriage return (output).",
      "ja": "12のVREPRINT別刷現在の入力ライン。 13 VWERASEカーソルの左の単語を消去します。 14 VLNEXTは出力をフラッシュする特殊文字15 VFLUSH文字の場合でも、そのまま入力次の文字を入力します。別のシェル層に16 VSWTCHスイッチ。 17 VSTATUSプリントシステムステータスライン（負荷、コマンド、PIDなど）。 18 VDISCARDは、端末出力のフラッシュを切り替えます。 30 IGNPARザ・パリティフラグを無視します。それがTRUEである場合、パラメータは、このフラグがFALSEである場合は0であり、そして1べきです。 31のPARMRKマークパリティおよびフレーミングエラー。 32 INPCKはパリティエラーのチェックを有効にします。 33 ISTRIPストリップ8日には、文字をオフビット。入力のCRに34 INLCR地図NL。 35 IGNCR入力にCRを無視します。入力上のNL 36 ICRNLマップCR。 37 IUCLCは小文字に大文字を翻訳します。 38 IXONは、出力フロー制御を有効にします。 39 IXANYは、任意の文字は停止後に再起動します。 40 IXOFFは、入力フロー制御を有効にします。完全な入力キューに41 IMAXBELリングベル。 50 ISIGはINTR、QUIT [D] SUSP信号を有効にします。 51本のICANON正規化入力ライン。 52 XCASEは「\\」で自分の小文字を先行することによって大文字の入力と出力を有効にします。 53は、エコーを有効にしますECHO。 54 ECHOE視覚的には、文字を消去します。 55 ECHOK KILL文字は現在の行を破棄します。 ECHO 56 ECHONLエコーNLオフであっても。 57 NOFLSHは、割り込み後にフラッシュしないでください。 58出力からバックグラウンドジョブを停止しTOSTOP。 59 IEXTEN拡張を有効にします。 60 ECHOCTLエコー制御文字^（シャア）など。行削除のための61 ECHOKEビジュアル消去。 62 PENDIN再入力保留入力。 70 OPOSTは、出力処理を有効にします。 71 OLCUCは、小文字を大文字に変換します。 72 CR-NLにonlcrが地図NL。 73 OCRNL改行（出力）への復帰を翻訳。 74 ONOCR復帰改行（出力）をキャリッジに改行を翻訳。 75 ONLRET改行キャリッジリターン（出力）を行います。"
    },
    {
      "indent": 10,
      "text": "90 CS7 7 bit mode. 91 CS8 8 bit mode. 92 PARENB Parity enable. 93 PARODD Odd parity, else even.",
      "ja": "90 CS7 7ビットモード。 91 CS8 8ビットモード。 92 PARENBパリティを有効にしてください。 93 PARODD奇数パリティ、それ以外にも。"
    },
    {
      "indent": 10,
      "text": "128 TTY_OP_ISPEED Specifies the input baud rate in bits per second. 129 TTY_OP_OSPEED Specifies the output baud rate in bits per second.",
      "ja": "128 TTY_OP_ISPEED毎秒ビットで入力ボーレートを指定します。 129 TTY_OP_OSPEED毎秒ビットにおける出力ボーレートを指定します。"
    },
    {
      "indent": 0,
      "text": "9. Summary of Message Numbers",
      "section_title": true,
      "ja": "メッセージ番号の9概要"
    },
    {
      "indent": 3,
      "text": "The following is a summary of messages and their associated message number.",
      "ja": "以下は、メッセージとそれに関連するメッセージ番号の要約です。"
    },
    {
      "indent": 12,
      "text": "SSH_MSG_GLOBAL_REQUEST                  80\nSSH_MSG_REQUEST_SUCCESS                 81\nSSH_MSG_REQUEST_FAILURE                 82\nSSH_MSG_CHANNEL_OPEN                    90\nSSH_MSG_CHANNEL_OPEN_CONFIRMATION       91\nSSH_MSG_CHANNEL_OPEN_FAILURE            92\nSSH_MSG_CHANNEL_WINDOW_ADJUST           93\nSSH_MSG_CHANNEL_DATA                    94\nSSH_MSG_CHANNEL_EXTENDED_DATA           95\nSSH_MSG_CHANNEL_EOF                     96\nSSH_MSG_CHANNEL_CLOSE                   97\nSSH_MSG_CHANNEL_REQUEST                 98\nSSH_MSG_CHANNEL_SUCCESS                 99\nSSH_MSG_CHANNEL_FAILURE                100",
      "raw": true
    },
    {
      "indent": 0,
      "text": "10. IANA Considerations",
      "section_title": true,
      "ja": "10. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "This document is part of a set. The IANA considerations for the SSH protocol as defined in [SSH-ARCH], [SSH-TRANS], [SSH-USERAUTH], and this document, are detailed in [SSH-NUMBERS].",
      "ja": "この文書では、セットの一部です。 [SSH-ARCH]で定義されるようにSSHプロトコルのIANAの考慮、[SSH-TRANS]、[SSH-USERAUTH]、この文書は、[SSH-NUMBERS]に詳述されています。"
    },
    {
      "indent": 0,
      "text": "11. Security Considerations",
      "section_title": true,
      "ja": "11.セキュリティについての考慮事項"
    },
    {
      "indent": 3,
      "text": "This protocol is assumed to run on top of a secure, authenticated transport. User authentication and protection against network-level attacks are assumed to be provided by the underlying protocols.",
      "ja": "このプロトコルは、セキュア、認証された輸送の上で実行することが想定されます。ユーザー認証とネットワーク・レベルの攻撃に対する保護は、基礎となるプロトコルによって提供されているものとします。"
    },
    {
      "indent": 3,
      "text": "Full security considerations for this protocol are provided in [SSH-ARCH]. Specific to this document, it is RECOMMENDED that implementations disable all the potentially dangerous features (e.g., agent forwarding, X11 forwarding, and TCP/IP forwarding) if the host key has changed without notice or explanation.",
      "ja": "このプロトコルのための完全なセキュリティ上の考慮事項は、[SSH-ARCH]で提供されています。この文書に固有の、ホスト鍵が通知または説明もなく変更された場合の実装は、すべての潜在的に危険な機能（例えば、エージェント転送、X11転送、およびTCP / IPフォワーディング）を無効にすることをお勧めします。"
    },
    {
      "indent": 0,
      "text": "12. References",
      "section_title": true,
      "ja": "12.参考文献"
    },
    {
      "indent": 0,
      "text": "12.1. Normative References",
      "section_title": true,
      "ja": "12.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[SSH-ARCH] Ylonen, T. and C. Lonvick, Ed., \"The Secure Shell (SSH) Protocol Architecture\", RFC 4251, January 2006.",
      "ja": "[SSH-ARCH] Ylonenと、T.とC. Lonvick、エド。、 \"セキュアシェル（SSH）プロトコルアーキテクチャ\"、RFC 4251、2006年1月。"
    },
    {
      "indent": 3,
      "text": "[SSH-TRANS] Ylonen, T. and C. Lonvick, Ed., \"The Secure Shell (SSH) Transport Layer Protocol\", RFC 4253, January 2006.",
      "ja": "[SSH-TRANS] Ylonenと、T.とC. Lonvick、エド。、 \"セキュアシェル（SSH）トランスポート層プロトコル\"、RFC 4253、2006年1月。"
    },
    {
      "indent": 3,
      "text": "[SSH-USERAUTH] Ylonen, T. and C. Lonvick, Ed., \"The Secure Shell (SSH) Authentication Protocol\", RFC 4252, January 2006.",
      "ja": "[SSH-USERAUTH] Ylonenと、T.とC. Lonvick、エド。、 \"セキュアシェル（SSH）認証プロトコル\"、RFC 4252、2006年1月。"
    },
    {
      "indent": 3,
      "text": "[SSH-NUMBERS] Lehtinen, S. and C. Lonvick, Ed., \"The Secure Shell (SSH) Protocol Assigned Numbers\", RFC 4250, January 2006.",
      "ja": "[SSH-NUMBERS]レーティネン、S.とC. Lonvick、エド。、 \"セキュアシェル（SSH）プロトコル割り当て番号\"、RFC 4250、2006年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC2434] Narten, T. and H. Alvestrand, \"Guidelines for Writing an IANA Considerations Section in RFCs\", BCP 26, RFC 2434, October 1998.",
      "ja": "[RFC2434] Narten氏、T.とH. Alvestrand、 \"RFCsにIANA問題部に書くためのガイドライン\"、BCP 26、RFC 2434、1998年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC3066] Alvestrand, H., \"Tags for the Identification of Languages\", BCP 47, RFC 3066, January 2001.",
      "ja": "[RFC3066] Alvestrand、H.、 \"言語識別のためのタグ\"、BCP 47、RFC 3066、2001年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC3629] Yergeau, F., \"UTF-8, a transformation format of ISO 10646\", STD 63, RFC 3629, November 2003.",
      "ja": "[RFC3629] Yergeau、F.、 \"UTF-8、ISO 10646の変換フォーマット\"、STD 63、RFC 3629、2003年11月。"
    },
    {
      "indent": 0,
      "text": "12.2. Informative References",
      "section_title": true,
      "ja": "12.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[RFC3330] IANA, \"Special-Use IPv4 Addresses\", RFC 3330, September 2002.",
      "ja": "[RFC3330] IANA、 \"特殊用途IPv4アドレス\"、RFC 3330、2002年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC3513] Hinden, R. and S. Deering, \"Internet Protocol Version 6 (IPv6) Addressing Architecture\", RFC 3513, April 2003.",
      "ja": "[RFC3513] HindenとR.とS.デアリング、 \"インターネットプロトコルバージョン6（IPv6）のアドレス指定アーキテクチャ\"、RFC 3513、2003年4月。"
    },
    {
      "indent": 3,
      "text": "[SCHEIFLER] Scheifler, R., \"X Window System : The Complete Reference to Xlib, X Protocol, Icccm, Xlfd, 3rd edition.\", Digital Press ISBN 1555580882, February 1992.",
      "ja": "[SCHEIFLER] Scheifler、R.、 \"Xウィンドウシステム：Xlibに、Xプロトコル、ICCCM、XLFD、第3版への完全なリファレンス。\"、デジタルプレスISBN 1555580882、1992年2月。"
    },
    {
      "indent": 3,
      "text": "[POSIX] ISO/IEC, 9945-1., \"Information technology -- Portable Operating System Interface (POSIX)-Part 1: System Application Program Interface (API) C Language\", ANSI/ IEE Std 1003.1, July 1996.",
      "ja": "[POSIX] ISO / IEC、9945-1、 \"情報技術 - ポータブルオペレーティングシステムインタフェース（POSIX） - パート1：システム・アプリケーション・プログラム・インターフェース（API）C言語\"。、ANSI / IEE STD 1003.1、1996年7月。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Tatu Ylonen SSH Communications Security Corp Valimotie 17 00380 Helsinki Finland",
      "ja": "タトゥYlonenとSSHコミュニケーションズ・セキュリティ社Valimotie 17 00380ヘルシンキフィンランド"
    },
    {
      "indent": 3,
      "text": "EMail: ylo@ssh.com",
      "ja": "メールアドレス：ylo@ssh.com"
    },
    {
      "indent": 3,
      "text": "Chris Lonvick (editor) Cisco Systems, Inc. 12515 Research Blvd. Austin 78759 USA",
      "ja": "クリスLonvick（エディタ）は、シスコシステムズ、株式会社12515リサーチ・ブルバードオースティン78759 USA"
    },
    {
      "indent": 3,
      "text": "EMail: clonvick@cisco.com",
      "ja": "メールアドレス：clonvick@cisco.com"
    },
    {
      "indent": 0,
      "text": "Trademark Notice",
      "ja": "商標について"
    },
    {
      "indent": 3,
      "text": "\"ssh\" is a registered trademark in the United States and/or other countries.",
      "ja": "「SSHは」米国および/またはその他の国における登録商標または商標です。"
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2006).",
      "ja": "著作権（C）インターネット協会（2006）。"
    },
    {
      "indent": 3,
      "text": "This document is subject to the rights, licenses and restrictions contained in BCP 78, and except as set forth therein, the authors retain all their rights.",
      "ja": "この文書では、BCP 78に含まれる権利と許可と制限の適用を受けており、その中の記載を除いて、作者は彼らのすべての権利を保有します。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein are provided on an \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書とここに含まれている情報は、基礎とCONTRIBUTOR「そのまま」、ORGANIZATION HE / SHEが表すまたはインターネットソサエティおよびインターネット・エンジニアリング・タスク・フォース放棄すべての保証、明示または、（もしあれば）後援ISに設けられています。黙示、情報の利用は、特定の目的に対する権利または商品性または適合性の黙示の保証を侵害しない任意の保証含むがこれらに限定されません。"
    },
    {
      "indent": 0,
      "text": "Intellectual Property",
      "ja": "知的財産"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any Intellectual Property Rights or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; nor does it represent that it has made any independent effort to identify any such rights. Information on the procedures with respect to rights in RFC documents can be found in BCP 78 and BCP 79.",
      "ja": "IETFは、本書またはそのような権限下で、ライセンスがたりないかもしれない程度に記載された技術の実装や使用に関係すると主張される可能性があります任意の知的財産権やその他の権利の有効性または範囲に関していかなる位置を取りません利用可能です。またそれは、それがどのような権利を確認する独自の取り組みを行ったことを示すものでもありません。 RFC文書の権利に関する手続きの情報は、BCP 78およびBCP 79に記載されています。"
    },
    {
      "indent": 3,
      "text": "Copies of IPR disclosures made to the IETF Secretariat and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the IETF on-line IPR repository at http://www.ietf.org/ipr.",
      "ja": "IPRの開示のコピーが利用できるようにIETF事務局とライセンスの保証に行われた、または本仕様の実装者または利用者がそのような所有権の使用のための一般的なライセンスまたは許可を取得するために作られた試みの結果を得ることができますhttp://www.ietf.org/iprのIETFのオンラインIPRリポジトリから。"
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights that may cover technology that may be required to implement this standard. Please address the information to the IETF at ietf-ipr@ietf.org.",
      "ja": "IETFは、その注意にこの標準を実装するために必要とされる技術をカバーすることができる任意の著作権、特許または特許出願、またはその他の所有権を持ってすべての利害関係者を招待します。 ietf-ipr@ietf.orgのIETFに情報を記述してください。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is provided by the IETF Administrative Support Activity (IASA).",
      "ja": "RFCエディタ機能のための資金は、IETF管理サポート活動（IASA）によって提供されます。"
    }
  ]
}