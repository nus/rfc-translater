{
  "title": {
    "text": "RFC 8200 - Internet Protocol, Version 6 (IPv6) Specification",
    "ja": "RFC 8200 - インターネットプロトコルバージョン6（IPv6）の仕様"
  },
  "number": 8200,
  "created_at": "2019-10-26 19:13:01.671004+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                        S. Deering\nRequest for Comments: 8200                                       Retired\nSTD: 86                                                        R. Hinden\nObsoletes: 2460                                     Check Point Software\nCategory: Standards Track                                      July 2017\nISSN: 2070-1721",
      "raw": true
    },
    {
      "indent": 11,
      "text": "Internet Protocol, Version 6 (IPv6) Specification",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document specifies version 6 of the Internet Protocol (IPv6). It obsoletes RFC 2460.",
      "ja": "この文書は、インターネットプロトコルのバージョン6（IPv6）を指定します。これは、RFC 2460を廃止します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 7841.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 7841のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc8200.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc8200で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2017 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2017 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 3,
      "text": "This document may contain material from IETF Documents or IETF Contributions published or made publicly available before November 10, 2008. The person(s) controlling the copyright in some of this material may not have granted the IETF Trust the right to allow modifications of such material outside the IETF Standards Process. Without obtaining an adequate license from the person(s) controlling the copyright in such materials, this document may not be modified outside the IETF Standards Process, and derivative works of it may not be created outside the IETF Standards Process, except to format it for publication as an RFC or to translate it into languages other than English.",
      "ja": "この材料の一部がIETFトラストにこのような材料の変更を許可する権利を与えられていない可能性がありますにこの文書は、2008年、IETFドキュメントまたは11月10日以前に発行または公開さIETF貢献から著作権を支配する者（複数可）材料を含んでいてもよいですIETF標準化プロセスの外。そのような材料の著作権を管理者（単数または複数）から適切なライセンスを取得することなく、この文書は、IETF標準化過程の外側修正されないかもしれません、そして、それの派生物は、IETF標準化過程の外側に作成されない場合があり、それをフォーマットする以外出版RFCとして、英語以外の言語に翻訳します。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   4\n2.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   5\n3.  IPv6 Header Format  . . . . . . . . . . . . . . . . . . . . .   6\n4.  IPv6 Extension Headers  . . . . . . . . . . . . . . . . . . .   7\n  4.1.  Extension Header Order  . . . . . . . . . . . . . . . . .  10\n  4.2.  Options . . . . . . . . . . . . . . . . . . . . . . . . .  11\n  4.3.  Hop-by-Hop Options Header . . . . . . . . . . . . . . . .  13\n  4.4.  Routing Header  . . . . . . . . . . . . . . . . . . . . .  14\n  4.5.  Fragment Header . . . . . . . . . . . . . . . . . . . . .  15\n  4.6.  Destination Options Header  . . . . . . . . . . . . . . .  23\n  4.7.  No Next Header  . . . . . . . . . . . . . . . . . . . . .  24\n  4.8.  Defining New Extension Headers and Options  . . . . . . .  24\n5.  Packet Size Issues  . . . . . . . . . . . . . . . . . . . . .  25\n6.  Flow Labels . . . . . . . . . . . . . . . . . . . . . . . . .  26\n7.  Traffic Classes . . . . . . . . . . . . . . . . . . . . . . .  26\n8.  Upper-Layer Protocol Issues . . . . . . . . . . . . . . . . .  27\n  8.1.  Upper-Layer Checksums . . . . . . . . . . . . . . . . . .  27\n  8.2.  Maximum Packet Lifetime . . . . . . . . . . . . . . . . .  28\n  8.3.  Maximum Upper-Layer Payload Size  . . . . . . . . . . . .  29\n  8.4.  Responding to Packets Carrying Routing Headers  . . . . .  29\n9.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  29\n10. Security Considerations . . . . . . . . . . . . . . . . . . .  30\n11. References  . . . . . . . . . . . . . . . . . . . . . . . . .  32\n  11.1.  Normative References . . . . . . . . . . . . . . . . . .  32\n  11.2.  Informative References . . . . . . . . . . . . . . . . .  33\nAppendix A.  Formatting Guidelines for Options  . . . . . . . . .  36\nAppendix B.  Changes Since RFC 2460 . . . . . . . . . . . . . . .  39\nAcknowledgments . . . . . . . . . . . . . . . . . . . . . . . . .  42\nAuthors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  42",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "IP version 6 (IPv6) is a new version of the Internet Protocol (IP), designed as the successor to IP version 4 (IPv4) [RFC791]. The changes from IPv4 to IPv6 fall primarily into the following categories:",
      "ja": "IPバージョン6（IPv6）のIPバージョン4（IPv4）[RFC791]の後継として設計されたインターネットプロトコル（IP）の新バージョンです。 IPv4からIPv6への変更は、次のカテゴリに主に分類できます。"
    },
    {
      "indent": 6,
      "text": "o Expanded Addressing Capabilities",
      "ja": "拡張アドレス指定機能O"
    },
    {
      "indent": 9,
      "text": "IPv6 increases the IP address size from 32 bits to 128 bits, to support more levels of addressing hierarchy, a much greater number of addressable nodes, and simpler autoconfiguration of addresses. The scalability of multicast routing is improved by adding a \"scope\" field to multicast addresses. And a new type of address called an \"anycast address\" is defined; it is used to send a packet to any one of a group of nodes.",
      "ja": "IPv6は階層、アドレス可能なノードのはるかに大きい数、およびアドレスの単純な自動に対処するより多くのレベルをサポートするために、32ビットから128ビットにIPアドレスのサイズを増加させます。マルチキャストルーティングのスケーラビリティは、マルチキャストアドレスに「スコープ」フィールドを追加することによって改善されます。そして、アドレスの新しいタイプは、「エニーキャストアドレスは、」定義されて呼ばれます。ノードのグループのいずれかにパケットを送信するために使用されます。"
    },
    {
      "indent": 6,
      "text": "o Header Format Simplification",
      "ja": "Oヘッダー形式の簡略化"
    },
    {
      "indent": 9,
      "text": "Some IPv4 header fields have been dropped or made optional, to reduce the common-case processing cost of packet handling and to limit the bandwidth cost of the IPv6 header.",
      "ja": "いくつかのIPv4ヘッダフィールドは、パケット処理の一般的なケースの加工コストを低減し、IPv6ヘッダーの帯域幅のコストを制限するために、削除または任意なされてきました。"
    },
    {
      "indent": 6,
      "text": "o Improved Support for Extensions and Options",
      "ja": "拡張機能とオプションのためのOサポートの強化"
    },
    {
      "indent": 9,
      "text": "Changes in the way IP header options are encoded allows for more efficient forwarding, less stringent limits on the length of options, and greater flexibility for introducing new options in the future.",
      "ja": "IPヘッダオプションが符号化される方法の変化は、より効率的な転送、オプションの長さにそれほど厳しく制限、将来新しいオプションを導入するための柔軟性を可能にします。"
    },
    {
      "indent": 6,
      "text": "o Flow Labeling Capability",
      "ja": "oフローラベリング機能"
    },
    {
      "indent": 9,
      "text": "A new capability is added to enable the labeling of sequences of packets that the sender requests to be treated in the network as a single flow.",
      "ja": "新しい機能は、送信者の要求が単一のフローとしてのネットワークで処理されるべきパケットのシーケンスのラベル付けを可能にするために追加されます。"
    },
    {
      "indent": 6,
      "text": "o Authentication and Privacy Capabilities",
      "ja": "Oの認証とプライバシー機能"
    },
    {
      "indent": 9,
      "text": "Extensions to support authentication, data integrity, and (optional) data confidentiality are specified for IPv6.",
      "ja": "認証、データの整合性、および（オプション）データの機密性をサポートするための拡張機能は、IPv6用に指定されています。"
    },
    {
      "indent": 3,
      "text": "This document specifies the basic IPv6 header and the initially defined IPv6 extension headers and options. It also discusses packet size issues, the semantics of flow labels and traffic classes, and the effects of IPv6 on upper-layer protocols. The format and semantics of IPv6 addresses are specified separately in [RFC4291]. The IPv6 version of ICMP, which all IPv6 implementations are required to include, is specified in [RFC4443].",
      "ja": "この文書は、基本的なIPv6ヘッダと最初に定義されたIPv6拡張ヘッダとオプションを指定します。また、パケットサイズの問題、フローラベルとトラフィッククラスのセマンティクス、および上位層プロトコルのIPv6の影響について説明します。 IPv6アドレスの形式と意味は[RFC4291]で別々に指定されています。すべてのIPv6実装を含むことが要求されるICMPのIPv6のバージョンは、[RFC4443]で指定されています。"
    },
    {
      "indent": 3,
      "text": "The data transmission order for IPv6 is the same as for IPv4 as defined in Appendix B of [RFC791].",
      "ja": "[RFC791]の付録Bで定義されているIPv6のデータの送信順序は、IPv4の場合と同じです。"
    },
    {
      "indent": 3,
      "text": "Note: As this document obsoletes [RFC2460], any document referenced in this document that includes pointers to RFC 2460 should be interpreted as referencing this document.",
      "ja": "注：このドキュメントは[RFC2460]を時代遅れのように、RFC 2460へのポインタを含む本文書で参照されるドキュメントは、このドキュメントを参照するように解釈されるべきです。"
    },
    {
      "indent": 0,
      "text": "2. Terminology",
      "section_title": true,
      "ja": "2.用語"
    },
    {
      "indent": 3,
      "text": "node a device that implements IPv6.",
      "ja": "IPv6を実装するデバイスノード。"
    },
    {
      "indent": 3,
      "text": "router a node that forwards IPv6 packets not explicitly addressed to itself. (See Note below.)",
      "ja": "IPv6パケットは、明示的に自分宛ではない転送ノードをルータ。 （下記の注を参照。）"
    },
    {
      "indent": 3,
      "text": "host any node that is not a router. (See Note below.)",
      "ja": "ルータではない任意のノードをホストします。 （下記の注を参照。）"
    },
    {
      "indent": 3,
      "text": "upper layer a protocol layer immediately above IPv6. Examples are transport protocols such as TCP and UDP, control protocols such as ICMP, routing protocols such as OSPF, and internet-layer or lower-layer protocols being \"tunneled\" over (i.e., encapsulated in) IPv6 such as Internetwork Packet Exchange (IPX), AppleTalk, or IPv6 itself.",
      "ja": "上層直ちにIPv6の上のプロトコル層。例としては、TCPやUDP、例えばICMP、OSPFなどのルーティングプロトコル、およびそのようなインターネットワークパケット交換（すなわち、中に封入された）は、IPv6（IPX上に「トンネリング」されるインターネット層または下位層プロトコルなどの制御プロトコルとしてトランスポートプロトコルであります）、アップルトーク、またはIPv6自体。"
    },
    {
      "indent": 3,
      "text": "link a communication facility or medium over which nodes can communicate at the link layer, i.e., the layer immediately below IPv6. Examples are Ethernets (simple or bridged); PPP links; X.25, Frame Relay, or ATM networks; and internet-layer or higher-layer \"tunnels\", such as tunnels over IPv4 or IPv6 itself.",
      "ja": "ノードはリンク層、直ちにIPv6の下即ち、層で通信を行う通信設備または媒体をリンクします。例としては、イーサネット（単純又は架橋）されています。 PPPリンク。 X.25、リレー、またはATMネットワークをフレーム。このようIPv4またはIPv6自体の上のトンネルなどのように、インターネット層または上位層の「トンネル」、。"
    },
    {
      "indent": 3,
      "text": "neighbors nodes attached to the same link.",
      "ja": "近所のノードが同じリンクに接続します。"
    },
    {
      "indent": 3,
      "text": "interface a node's attachment to a link.",
      "ja": "リンクへのノードの接続のインターフェース。"
    },
    {
      "indent": 3,
      "text": "address an IPv6-layer identifier for an interface or a set of interfaces.",
      "ja": "インタフェースまたはインタフェースのセットのIPv6レイヤ識別子をアドレス。"
    },
    {
      "indent": 3,
      "text": "packet an IPv6 header plus payload.",
      "ja": "IPv6ヘッダープラスペイロードをパケット。"
    },
    {
      "indent": 3,
      "text": "link MTU the maximum transmission unit, i.e., maximum packet size in octets, that can be conveyed over a link.",
      "ja": "リンクMTUリンクを介して搬送することができる最大送信単位、オクテットすなわち、最大パケットサイズ、。"
    },
    {
      "indent": 3,
      "text": "path MTU the minimum link MTU of all the links in a path between a source node and a destination node.",
      "ja": "パスMTUソースノードと宛先ノードの間の経路内のすべてのリンクの最小リンクMTU。"
    },
    {
      "indent": 3,
      "text": "Note: it is possible for a device with multiple interfaces to be configured to forward non-self-destined packets arriving from some set (fewer than all) of its interfaces and to discard non-self-destined packets arriving from its other interfaces. Such a device must obey the protocol requirements for routers when receiving packets from, and interacting with neighbors over, the former (forwarding) interfaces. It must obey the protocol requirements for hosts when receiving packets from, and interacting with neighbors over, the latter (non-forwarding) interfaces.",
      "ja": "注：複数のインタフェースを持つデバイスは、そのインターフェイスの一部のセット（全てより少ない）から到来する非自己宛のパケットを転送するために、そのほかのインタフェースから到着する非自己宛のパケットを破棄するように構成されることが可能です。そのようなデバイスからパケットを受信するときルータのプロトコル要件に従う、前者（転送）インターフェイス、上隣人と相互作用しなければなりません。パケットを受信し、後者（非転送）インターフェイス、オーバー隣人と対話するときには、ホストのためのプロトコル要件に従わなければなりません。"
    },
    {
      "indent": 0,
      "text": "3. IPv6 Header Format",
      "section_title": true,
      "ja": "3. IPv6のヘッダフォーマット"
    },
    {
      "indent": 3,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|Version| Traffic Class |           Flow Label                  |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|         Payload Length        |  Next Header  |   Hop Limit   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n+                                                               +\n|                                                               |\n+                         Source Address                        +\n|                                                               |\n+                                                               +\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n+                                                               +\n|                                                               |\n+                      Destination Address                      +\n|                                                               |\n+                                                               +\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Version 4-bit Internet Protocol version number = 6.",
      "ja": "バージョン4ビットインターネットプロトコルバージョン番号= 6。"
    },
    {
      "indent": 6,
      "text": "Traffic Class 8-bit Traffic Class field. See Section 7.",
      "ja": "トラフィッククラス8ビットのトラフィッククラスフィールド。セクション7を参照してください。"
    },
    {
      "indent": 6,
      "text": "Flow Label 20-bit flow label. See Section 6.",
      "ja": "フローラベル20ビットのフローラベル。第6章を参照してください。"
    },
    {
      "indent": 6,
      "text": "Payload Length 16-bit unsigned integer. Length of the IPv6 payload, i.e., the rest of the packet following this IPv6 header, in octets. (Note that any extension headers (see Section 4) present are considered part of the payload, i.e., included in the length count.)",
      "ja": "ペイロード長16ビットの符号なし整数。 IPv6のペイロードの長さ、即ち、オクテットでこのIPv6ヘッダ、次のパケットの残りの部分。 （存在する任意の拡張ヘッダ（セクション4を参照）、ペイロードの一部とみなされることに注意してください、すなわち、長さ数に含まれます。）"
    },
    {
      "indent": 6,
      "text": "Next Header 8-bit selector. Identifies the type of header immediately following the IPv6 header. Uses the same values as the IPv4 Protocol field [IANA-PN].",
      "ja": "次ヘッダ8ビットセレクタ。直ちにIPv6ヘッダーの次のヘッダーのタイプを識別する。 IPv4のプロトコルフィールド[IANA-PN]と同じ値を使用します。"
    },
    {
      "indent": 6,
      "text": "Hop Limit 8-bit unsigned integer. Decremented by 1 by each node that forwards the packet. When forwarding, the packet is discarded if Hop Limit was zero when received or is decremented to zero. A node that is the destination of a packet should not discard a packet with Hop Limit equal to zero; it should process the packet normally.",
      "ja": "ホップ限界8ビットの符号なし整数。パケットを転送する各ノードが1だけ減分。転送時に受信またはゼロにデクリメントされたときにホップリミットがゼロであった場合、パケットは破棄されます。パケットの宛先であるノードは、ゼロに等しいホップ制限付きパケットを破棄してはなりません。それは、通常、パケットを処理する必要があります。"
    },
    {
      "indent": 6,
      "text": "Source Address 128-bit address of the originator of the packet. See [RFC4291].",
      "ja": "パケットの発信元のソースアドレス128ビットのアドレス。 [RFC4291]を参照してください。"
    },
    {
      "indent": 6,
      "text": "Destination Address 128-bit address of the intended recipient of the packet (possibly not the ultimate recipient, if a Routing header is present). See [RFC4291] and Section 4.4.",
      "ja": "パケットの意図された受信者の宛先アドレス128ビットのアドレス（おそらくない最終受信者、ルーティングヘッダが存在する場合）。 [RFC4291]とセクション4.4を参照してください。"
    },
    {
      "indent": 0,
      "text": "4. IPv6 Extension Headers",
      "section_title": true,
      "ja": "4. IPv6拡張ヘッダー"
    },
    {
      "indent": 3,
      "text": "In IPv6, optional internet-layer information is encoded in separate headers that may be placed between the IPv6 header and the upper-layer header in a packet. There is a small number of such extension headers, each one identified by a distinct Next Header value.",
      "ja": "IPv6では、任意のインターネット層情報は、パケットにIPv6ヘッダと上位層ヘッダとの間に配置することができる別のヘッダに符号化されます。そのような拡張ヘッダの数が少ない、異なる次ヘッダ値によって識別される各ものがあります。"
    },
    {
      "indent": 3,
      "text": "Extension headers are numbered from IANA IP Protocol Numbers [IANA-PN], the same values used for IPv4 and IPv6. When processing a sequence of Next Header values in a packet, the first one that is not an extension header [IANA-EH] indicates that the next item in the packet is the corresponding upper-layer header. A special \"No Next Header\" value is used if there is no upper-layer header.",
      "ja": "拡張ヘッダはIANA IPプロトコル番号[IANA-PN]、IPv4とIPv6のために使用したものと同じ値から番号付けされます。パケットの次のヘッダ値の配列を処理する場合、拡張ヘッダではない最初のもの[IANA-EH]は、パケット内の次の項目は、対応する上位層ヘッダであることを示しています。何上位層ヘッダが存在しない場合、特別な「いいえ次のヘッダー」値が使用されます。"
    },
    {
      "indent": 3,
      "text": "As illustrated in these examples, an IPv6 packet may carry zero, one, or more extension headers, each identified by the Next Header field of the preceding header:",
      "ja": "これらの実施例に示すように、IPv6パケットは、それぞれ前のヘッダの次ヘッダフィールドによって識別される、ゼロ、1つ、または複数の拡張ヘッダを搬送することができます。"
    },
    {
      "indent": 3,
      "text": "+---------------+------------------------\n|  IPv6 header  | TCP header + data\n|               |\n| Next Header = |\n|      TCP      |\n+---------------+------------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "+---------------+----------------+------------------------\n|  IPv6 header  | Routing header | TCP header + data\n|               |                |\n| Next Header = |  Next Header = |\n|    Routing    |      TCP       |\n+---------------+----------------+------------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "+---------------+----------------+-----------------+-----------------\n|  IPv6 header  | Routing header | Fragment header | fragment of TCP\n|               |                |                 |  header + data\n| Next Header = |  Next Header = |  Next Header =  |\n|    Routing    |    Fragment    |       TCP       |\n+---------------+----------------+-----------------+-----------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Extension headers (except for the Hop-by-Hop Options header) are not processed, inserted, or deleted by any node along a packet's delivery path, until the packet reaches the node (or each of the set of nodes, in the case of multicast) identified in the Destination Address field of the IPv6 header.",
      "ja": "パケットがノード（またはノードのセットの各々に到達するまで（ホップバイホップオプションヘッダを除く）拡張ヘッダがある場合に、、、加工挿入、又はパケットの配信経路に沿った任意のノードによって削除されませんIPv6ヘッダの宛先アドレスフィールドで識別マルチキャスト）。"
    },
    {
      "indent": 3,
      "text": "The Hop-by-Hop Options header is not inserted or deleted, but may be examined or processed by any node along a packet's delivery path, until the packet reaches the node (or each of the set of nodes, in the case of multicast) identified in the Destination Address field of the IPv6 header. The Hop-by-Hop Options header, when present, must immediately follow the IPv6 header. Its presence is indicated by the value zero in the Next Header field of the IPv6 header.",
      "ja": "パケット（マルチキャストの場合、またはノードのセットの各）ノードに到達するまでのホップバイホップオプションヘッダは、挿入または削除が、パケットの配送経路に沿った任意のノードによって検査又は処理することができるされていませんIPv6ヘッダの宛先アドレスフィールドで識別。ホップバイホップオプションヘッダは、存在する場合、直ちにIPv6ヘッダに従わなければなりません。その存在は、IPv6ヘッダの次ヘッダフィールドの値がゼロで示されています。"
    },
    {
      "indent": 3,
      "text": "NOTE: While [RFC2460] required that all nodes must examine and process the Hop-by-Hop Options header, it is now expected that nodes along a packet's delivery path only examine and process the Hop-by-Hop Options header if explicitly configured to do so.",
      "ja": "注：[RFC2460]は、すべてのノードが検査し、ホップバイホップオプションヘッダを処理する必要があり、明示的に設定されている場合、パケットの配信経路に沿ったノードのみホップバイホップオプションヘッダを調べて処理することが予想されることを必要としながらそうする。"
    },
    {
      "indent": 3,
      "text": "At the destination node, normal demultiplexing on the Next Header field of the IPv6 header invokes the module to process the first extension header, or the upper-layer header if no extension header is present. The contents and semantics of each extension header determine whether or not to proceed to the next header. Therefore, extension headers must be processed strictly in the order they appear in the packet; a receiver must not, for example, scan through a packet looking for a particular kind of extension header and process that header prior to processing all preceding ones.",
      "ja": "宛先ノードで、IPv6ヘッダの次ヘッダフィールドの通常分離には拡張ヘッダが存在しない場合は、最初の拡張ヘッダ、または上位層ヘッダを処理するモジュールを呼び出します。各拡張ヘッダの内容と意味は次のヘッダに進むか否かを判定する。そのため、拡張ヘッダは、彼らがパケットに現れる順番に厳密に処理しなければなりません。受信機は、例えば、すべての先行するものを処理する前に、ヘッダ拡張ヘッダ及びプロセスの特定の種類を探してパケットをスキャンしてはなりません。"
    },
    {
      "indent": 3,
      "text": "If, as a result of processing a header, the destination node is required to proceed to the next header but the Next Header value in the current header is unrecognized by the node, it should discard the packet and send an ICMP Parameter Problem message to the source of the packet, with an ICMP Code value of 1 (\"unrecognized Next Header type encountered\") and the ICMP Pointer field containing the offset of the unrecognized value within the original packet. The same action should be taken if a node encounters a Next Header value of zero in any header other than an IPv6 header.",
      "ja": "ヘッダを処理した結果として、宛先ノードがノードによって認識されない次のヘッダが、現在のヘッダ内の次ヘッダ値に進行する必要がある、場合は、パケットを破棄し、にICMPパラメータ問題メッセージを送信します1のICMPコード値（「認識されていない次ヘッダタイプに遭遇」）と、元のパケット内の認識されていない値のオフセットを含むICMPポインタフィールドを持つパケットの送信元、。ノードは、IPv6ヘッダ以外のヘッダにゼロの次ヘッダ値を検出した場合、同じアクションが取られるべきです。"
    },
    {
      "indent": 3,
      "text": "Each extension header is an integer multiple of 8 octets long, in order to retain 8-octet alignment for subsequent headers. Multi-octet fields within each extension header are aligned on their natural boundaries, i.e., fields of width n octets are placed at an integer multiple of n octets from the start of the header, for n = 1, 2, 4, or 8.",
      "ja": "各拡張ヘッダは、後続ヘッダの8オクテット整列を保持するために、長い8つのオクテットの整数倍です。各拡張ヘッダ内のマルチオクテットフィールドは、それらの自然境界上に整列されている、すなわち、幅Nオクテットのフィールドがヘッダの先頭からnオクテットの整数倍に配置され、用のn = 1、2、4、または8れます。"
    },
    {
      "indent": 3,
      "text": "A full implementation of IPv6 includes implementation of the following extension headers:",
      "ja": "IPv6のの完全な実装は、以下の拡張ヘッダーの実装が含まれています。"
    },
    {
      "indent": 6,
      "text": "Hop-by-Hop Options Fragment Destination Options Routing Authentication Encapsulating Security Payload",
      "ja": "ホップバイホップオプションフラグメントの宛先オプションルーティング認証カプセル化セキュリティペイロード"
    },
    {
      "indent": 3,
      "text": "The first four are specified in this document; the last two are specified in [RFC4302] and [RFC4303], respectively. The current list of IPv6 extension headers can be found at [IANA-EH].",
      "ja": "最初の4つは、この文書で指定されています。最後の二つは、それぞれ、[RFC4302]及び[RFC4303]で指定されています。 IPv6拡張ヘッダの現在のリストは、[IANA-EH]で見ることができます。"
    },
    {
      "indent": 0,
      "text": "4.1. Extension Header Order",
      "section_title": true,
      "ja": "4.1。拡張ヘッダの順序"
    },
    {
      "indent": 3,
      "text": "When more than one extension header is used in the same packet, it is recommended that those headers appear in the following order:",
      "ja": "複数の拡張ヘッダが同じパケットで使用される場合、これらのヘッダは、以下の順序で表示されることをお勧めします。"
    },
    {
      "indent": 6,
      "text": "IPv6 header Hop-by-Hop Options header Destination Options header (note 1) Routing header Fragment header Authentication header (note 2) Encapsulating Security Payload header (note 2) Destination Options header (note 3) Upper-Layer header",
      "ja": "ヘッダフラグメントヘッダ認証ヘッダ（注2）カプセル化セキュリティペイロードヘッダ（注2）宛先オプションヘッダ（注3）上位層ヘッダをルーティングIPv6のヘッダホップバイホップオプションヘッダの宛先オプションヘッダ（注1）"
    },
    {
      "indent": 6,
      "text": "note 1: for options to be processed by the first destination that appears in the IPv6 Destination Address field plus subsequent destinations listed in the Routing header.",
      "ja": "注1：IPv6宛先アドレスフィールドプラスルーティングヘッダに記載されて以降の目的地に現れる最初の目的地によって処理されるオプションについて。"
    },
    {
      "indent": 6,
      "text": "note 2: additional recommendations regarding the relative order of the Authentication and Encapsulating Security Payload headers are given in [RFC4303].",
      "ja": "注2：認証およびカプセル化セキュリティペイロードヘッダの相対的な順序に関する追加の推奨事項は、[RFC4303]に記載されています。"
    },
    {
      "indent": 6,
      "text": "note 3: for options to be processed only by the final destination of the packet.",
      "ja": "注3：オプションのみ、パケットの最終的な目的地によって処理されるため。"
    },
    {
      "indent": 3,
      "text": "Each extension header should occur at most once, except for the Destination Options header, which should occur at most twice (once before a Routing header and once before the upper-layer header).",
      "ja": "各拡張ヘッダは、（上位層ヘッダの前に一度ルーティングヘッダの前に一度）で最も回発生した宛先オプションヘッダを除いて、多くとも一度起こるべきです。"
    },
    {
      "indent": 3,
      "text": "If the upper-layer header is another IPv6 header (in the case of IPv6 being tunneled over or encapsulated in IPv6), it may be followed by its own extension headers, which are separately subject to the same ordering recommendations.",
      "ja": "上位層ヘッダは、別のIPv6ヘッダー（IPv6の場合に上にトンネリングされるかIPv6にカプセル化された）である場合、それは別々に同じ順序の推奨を受けている独自の拡張ヘッダが続くことができます。"
    },
    {
      "indent": 3,
      "text": "If and when other extension headers are defined, their ordering constraints relative to the above listed headers must be specified.",
      "ja": "そして他の拡張ヘッダが定義されている場合場合は、上記のヘッダに対する彼らの順序の制約を指定する必要があります。"
    },
    {
      "indent": 3,
      "text": "IPv6 nodes must accept and attempt to process extension headers in any order and occurring any number of times in the same packet, except for the Hop-by-Hop Options header, which is restricted to appear immediately after an IPv6 header only. Nonetheless, it is strongly advised that sources of IPv6 packets adhere to the above recommended order until and unless subsequent specifications revise that recommendation.",
      "ja": "IPv6ノードは、受け入れのみIPv6ヘッダの直後に表示されるように制限されてホップバイホップオプションヘッダを除き、任意の順序と同じパケットに任意の回数発生に拡張ヘッダを処理しようとしなければなりません。それにもかかわらず、強くIPv6パケットのソースはその勧告改訂以降の仕様までとしない限り、上記の推奨順序に従うことをお勧めします。"
    },
    {
      "indent": 0,
      "text": "4.2. Options",
      "section_title": true,
      "ja": "4.2。オプション"
    },
    {
      "indent": 3,
      "text": "Two of the currently defined extension headers specified in this document -- the Hop-by-Hop Options header and the Destination Options header -- carry a variable number of \"options\" that are type-length-value (TLV) encoded in the following format:",
      "ja": "本書で指定された現在定義されている拡張ヘッダの二 - ホップバイホップオプションヘッダと宛先オプションヘッダは、 - 以下で符号化タイプレングス値である「オプション」（TLV）の可変数を運びますフォーマット："
    },
    {
      "indent": 6,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- - - - - - - - -\n|  Option Type  |  Opt Data Len |  Option Data\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- - - - - - - - -",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Option Type 8-bit identifier of the type of option.",
      "ja": "オプションの種類のオプションタイプ8ビットの識別子。"
    },
    {
      "indent": 6,
      "text": "Opt Data Len 8-bit unsigned integer. Length of the Option Data field of this option, in octets.",
      "ja": "OPTデータレン8ビットの符号なし整数。オクテットで、このオプションのオプションデータフィールドの長さ。"
    },
    {
      "indent": 6,
      "text": "Option Data Variable-length field. Option-Type-specific data.",
      "ja": "オプションデータ可変長フィールド。オプション型固有のデータ。"
    },
    {
      "indent": 3,
      "text": "The sequence of options within a header must be processed strictly in the order they appear in the header; a receiver must not, for example, scan through the header looking for a particular kind of option and process that option prior to processing all preceding ones.",
      "ja": "ヘッダ内のオプションの順序は、彼らがヘッダーに表示される順番で厳密に処理しなければなりません。受信機は、例えば、オプションの特定の種類を探しているヘッダをスキャンし、すべての前のものを処理する前にそのオプションを処理してはなりません。"
    },
    {
      "indent": 3,
      "text": "The Option Type identifiers are internally encoded such that their highest-order 2 bits specify the action that must be taken if the processing IPv6 node does not recognize the Option Type:",
      "ja": "オプションタイプ識別子は、内部的にそれらの最上位2ビットは処理IPv6ノードは、オプションタイプを認識しない場合に注意しなければならないアクションを指定するように符号化されます。"
    },
    {
      "indent": 6,
      "text": "00 - skip over this option and continue processing the header.",
      "ja": "00  - このオプションをスキップし、ヘッダを処理し続けます。"
    },
    {
      "indent": 6,
      "text": "01 - discard the packet.",
      "ja": "01  - パケットを破棄する。"
    },
    {
      "indent": 6,
      "text": "10 - discard the packet and, regardless of whether or not the packet's Destination Address was a multicast address, send an ICMP Parameter Problem, Code 2, message to the packet's Source Address, pointing to the unrecognized Option Type.",
      "ja": "10  - 認識できないオプションタイプを指して、パケットの送信元アドレスにICMPパラメータ問題、コード2、メッセージを送信し、関係なく、パケットの宛先アドレスがマルチキャストアドレスしたかどうかの、パケットを破棄し。"
    },
    {
      "indent": 6,
      "text": "11 - discard the packet and, only if the packet's Destination Address was not a multicast address, send an ICMP Parameter Problem, Code 2, message to the packet's Source Address, pointing to the unrecognized Option Type.",
      "ja": "11  - 認識できないオプションタイプを指して、パケットの送信元アドレスにICMPパラメータ問題、コード2、メッセージを送信し、パケットの宛先アドレスがマルチキャストアドレスではなかった場合にのみ、パケットを破棄し。"
    },
    {
      "indent": 3,
      "text": "The third-highest-order bit of the Option Type specifies whether or not the Option Data of that option can change en route to the packet's final destination. When an Authentication header is present in the packet, for any option whose data may change en route, its entire Option Data field must be treated as zero-valued octets when computing or verifying the packet's authenticating value.",
      "ja": "オプションタイプの3最上位ビットは、そのオプションのオプションデータは、パケットの最終目的地への途中で変更できるかどうかを指定します。認証ヘッダは、パケットの中に存在する場合、パケットの認証値を計算または検証するとき、そのデータ途中で変更することができる任意のオプションのために、その全体のオプションデータフィールドは、ゼロ値のオクテットとして扱わなければなりません。"
    },
    {
      "indent": 7,
      "text": "0 - Option Data does not change en route",
      "ja": "0  - データが途中で変更されないオプション"
    },
    {
      "indent": 7,
      "text": "1 - Option Data may change en route",
      "ja": "1  - オプションデータが途中で変更される可能性があり"
    },
    {
      "indent": 3,
      "text": "The three high-order bits described above are to be treated as part of the Option Type, not independent of the Option Type. That is, a particular option is identified by a full 8-bit Option Type, not just the low-order 5 bits of an Option Type.",
      "ja": "上述した3つの上位ビットは、オプションタイプ、オプションタイプの独立していないの一部として扱われるべきです。すなわち、特定のオプションは、フル8ビットオプションタイプだけでなく、下位オプションタイプの5ビットによって識別されます。"
    },
    {
      "indent": 3,
      "text": "The same Option Type numbering space is used for both the Hop-by-Hop Options header and the Destination Options header. However, the specification of a particular option may restrict its use to only one of those two headers.",
      "ja": "同じオプションタイプ番号空間は、ホップバイホップオプションヘッダと宛先オプションヘッダの両方に使用されます。しかし、特定のオプションの指定は、これら2つのヘッダの一方のみにその使用を制限することができます。"
    },
    {
      "indent": 3,
      "text": "Individual options may have specific alignment requirements, to ensure that multi-octet values within Option Data fields fall on natural boundaries. The alignment requirement of an option is specified using the notation xn+y, meaning the Option Type must appear at an integer multiple of x octets from the start of the header, plus y octets. For example:",
      "ja": "個々のオプションは、オプションデータフィールド内のマルチオクテット値が自然な境界に落ちることを確実にするために、特定の整列要件を有することができます。オプションの整列要求は、ヘッダの開始、プラスYオクテットからXオクテットの整数倍で現れなければならないオプションタイプを意味し、表記XN + Yを使用して指定されます。例えば："
    },
    {
      "indent": 6,
      "text": "2n means any 2-octet offset from the start of the header. 8n+2 means any 8-octet offset from the start of the header, plus 2 octets.",
      "ja": "2Nは、ヘッダの先頭からのオフセット任意の2オクテットを意味します。 8N + 2は、任意のヘッダの先頭からのオフセット8オクテット、プラス2つのオクテットを意味します。"
    },
    {
      "indent": 3,
      "text": "There are two padding options that are used when necessary to align subsequent options and to pad out the containing header to a multiple of 8 octets in length. These padding options must be recognized by all IPv6 implementations:",
      "ja": "長さが8つのオクテットの倍数に含むヘッダアウト以降オプションとパッドのを整列させるために必要な場合に使用される2つのパディングオプションがあります。これらのパディング・オプションは、すべてのIPv6実装で認識する必要があります。"
    },
    {
      "indent": 3,
      "text": "Pad1 option (alignment requirement: none)",
      "ja": "パッド1オプション（アライメント要件：なし）"
    },
    {
      "indent": 6,
      "text": "+-+-+-+-+-+-+-+-+\n|       0       |\n+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 6,
      "text": "NOTE! the format of the Pad1 option is a special case -- it does not have length and value fields.",
      "ja": "注意！パッド1オプションのフォーマットは、特殊なケースである - それは長さと値のフィールドを持っていません。"
    },
    {
      "indent": 6,
      "text": "The Pad1 option is used to insert 1 octet of padding into the Options area of a header. If more than one octet of padding is required, the PadN option, described next, should be used, rather than multiple Pad1 options.",
      "ja": "パッド1のオプションは、ヘッダのオプション領域にパディングの1つのオクテットを挿入するために使用されます。パディングの複数のオクテットが必要な場合は、パッドNオプションは、次の説明ではなく、複数のパッド1オプションよりも、使用すべきです。"
    },
    {
      "indent": 3,
      "text": "PadN option (alignment requirement: none)",
      "ja": "PADNオプション（アライメント要件：なし）"
    },
    {
      "indent": 6,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- - - - - - - - -\n|       1       |  Opt Data Len |  Option Data\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- - - - - - - - -",
      "raw": true
    },
    {
      "indent": 6,
      "text": "The PadN option is used to insert two or more octets of padding into the Options area of a header. For N octets of padding, the Opt Data Len field contains the value N-2, and the Option Data consists of N-2 zero-valued octets.",
      "ja": "パッドNオプションは、ヘッダのオプション領域にパディングの2つの以上のオクテットを挿入するために使用されます。パディングのNオクテットため、オプトデータLENフィールドは値N-2を含み、オプションデータは、N-2ゼロ値のオクテットで構成されています。"
    },
    {
      "indent": 3,
      "text": "Appendix A contains formatting guidelines for designing new options.",
      "ja": "付録Aには、新しいオプションを設計するためのフォーマットのガイドラインが含まれています。"
    },
    {
      "indent": 0,
      "text": "4.3. Hop-by-Hop Options Header",
      "section_title": true,
      "ja": "4.3。ホップバイホップオプションヘッダー"
    },
    {
      "indent": 3,
      "text": "The Hop-by-Hop Options header is used to carry optional information that may be examined and processed by every node along a packet's delivery path. The Hop-by-Hop Options header is identified by a Next Header value of 0 in the IPv6 header and has the following format:",
      "ja": "ホップバイホップオプションヘッダは、パケットの配信経路に沿った全てのノードによって検査及び処理することができる任意の情報を運ぶために使用されます。ホップバイホップオプションヘッダは、IPv6ヘッダに0の次ヘッダ値によって識別され、以下の形式を有します。"
    },
    {
      "indent": 4,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Next Header  |  Hdr Ext Len  |                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               +\n|                                                               |\n.                                                               .\n.                            Options                            .\n.                                                               .\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Next Header 8-bit selector. Identifies the type of header immediately following the Hop-by-Hop Options header. Uses the same values as the IPv4 Protocol field [IANA-PN].",
      "ja": "次ヘッダ8ビットセレクタ。直ちにホップバイホップオプションヘッダに続くヘッダのタイプを識別する。 IPv4のプロトコルフィールド[IANA-PN]と同じ値を使用します。"
    },
    {
      "indent": 6,
      "text": "Hdr Ext Len 8-bit unsigned integer. Length of the Hop-by-Hop Options header in 8-octet units, not including the first 8 octets.",
      "ja": "HDR拡張レン8ビットの符号なし整数。最初の8つのオクテットを含まない8オクテット単位でホップバイホップオプションヘッダの長さ。"
    },
    {
      "indent": 6,
      "text": "Options Variable-length field, of length such that the complete Hop-by-Hop Options header is an integer multiple of 8 octets long. Contains one or more TLV-encoded options, as described in Section 4.2.",
      "ja": "完全なホップバイホップオプションヘッダが長い8つのオクテットの整数倍であるような長さのオプション可変長フィールド。セクション4.2で説明したように、一つ以上のTLVでエンコードされたオプションが含まれています。"
    },
    {
      "indent": 3,
      "text": "The only hop-by-hop options defined in this document are the Pad1 and PadN options specified in Section 4.2.",
      "ja": "この文書で定義された唯一のホップバイホップオプションは、4.2節で指定されたパッド1とパッドNオプションです。"
    },
    {
      "indent": 0,
      "text": "4.4. Routing Header",
      "section_title": true,
      "ja": "4.4。ルーティングヘッダ"
    },
    {
      "indent": 3,
      "text": "The Routing header is used by an IPv6 source to list one or more intermediate nodes to be \"visited\" on the way to a packet's destination. This function is very similar to IPv4's Loose Source and Record Route option. The Routing header is identified by a Next Header value of 43 in the immediately preceding header and has the following format:",
      "ja": "ルーティングヘッダは、パケットの宛先に向かう途中で「訪問」する1つ以上の中間ノードをリストするIPv6ソースによって使用されます。この機能は、IPv4のルーズソースとRecordルートオプションと非常によく似ています。ルーティングヘッダは、直前のヘッダ43の次ヘッダ値によって識別され、以下の形式を有します。"
    },
    {
      "indent": 4,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Next Header  |  Hdr Ext Len  |  Routing Type | Segments Left |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n.                                                               .\n.                       type-specific data                      .\n.                                                               .\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Next Header 8-bit selector. Identifies the type of header immediately following the Routing header. Uses the same values as the IPv4 Protocol field [IANA-PN].",
      "ja": "次ヘッダ8ビットセレクタ。直ちにルーティングヘッダの次ヘッダのタイプを識別する。 IPv4のプロトコルフィールド[IANA-PN]と同じ値を使用します。"
    },
    {
      "indent": 6,
      "text": "Hdr Ext Len 8-bit unsigned integer. Length of the Routing header in 8-octet units, not including the first 8 octets.",
      "ja": "HDR拡張レン8ビットの符号なし整数。最初の8つのオクテットを含まない8オクテット単位でルーティングヘッダの長さ。"
    },
    {
      "indent": 6,
      "text": "Routing Type 8-bit identifier of a particular Routing header variant.",
      "ja": "特定のルーティングヘッダバリアントのルーティングタイプ8ビットの識別子。"
    },
    {
      "indent": 6,
      "text": "Segments Left 8-bit unsigned integer. Number of route segments remaining, i.e., number of explicitly listed intermediate nodes still to be visited before reaching the final destination.",
      "ja": "セグメントは、8ビットの符号なし整数を残しました。残りの経路セグメントの数、まだ最終的な宛先に到達する前に訪問される明示的にリストされた中間ノードの、すなわち、数。"
    },
    {
      "indent": 6,
      "text": "type-specific data Variable-length field, of format determined by the Routing Type, and of length such that the complete Routing header is an integer multiple of 8 octets long.",
      "ja": "タイプ固有のデータの可変長フィールド、ルーティングのタイプによって決定される形式の、長さの完全なルーティングヘッダが長い8つのオクテットの整数倍であるようにします。"
    },
    {
      "indent": 3,
      "text": "If, while processing a received packet, a node encounters a Routing header with an unrecognized Routing Type value, the required behavior of the node depends on the value of the Segments Left field, as follows:",
      "ja": "受信したパケットを処理している間、ノードが認識されていないルーティングタイプ値を持つルーティングヘッダに遭遇した場合、次のように、ノードの必要な動作は、フィールドを左セグメントの値に依存します。"
    },
    {
      "indent": 6,
      "text": "If Segments Left is zero, the node must ignore the Routing header and proceed to process the next header in the packet, whose type is identified by the Next Header field in the Routing header.",
      "ja": "セグメント左がゼロである場合、ノードは、ルーティングヘッダを無視して、タイプのルーティングヘッダに次ヘッダフィールドによって識別されるパケット内の次のヘッダを処理するように進行しなければなりません。"
    },
    {
      "indent": 6,
      "text": "If Segments Left is non-zero, the node must discard the packet and send an ICMP Parameter Problem, Code 0, message to the packet's Source Address, pointing to the unrecognized Routing Type.",
      "ja": "セグメント左がゼロでない場合、ノードはパケットを破棄しなければならないと認識されていないルーティングタイプを指して、パケットの送信元アドレスにICMPパラメータ問題、コード0、メッセージを送信します。"
    },
    {
      "indent": 3,
      "text": "If, after processing a Routing header of a received packet, an intermediate node determines that the packet is to be forwarded onto a link whose link MTU is less than the size of the packet, the node must discard the packet and send an ICMP Packet Too Big message to the packet's Source Address.",
      "ja": "、受信したパケットのルーティングヘッダを処理した後、中間ノードは、パケットがそのリンクMTUパケットのサイズよりも小さいリンクに転送されるべきであると判断した場合、ノードはパケットを破棄し、ICMPパケットすぎる送信する必要がありますパケットの送信元アドレスにビッグメッセージ。"
    },
    {
      "indent": 3,
      "text": "The currently defined IPv6 Routing Headers and their status can be found at [IANA-RH]. Allocation guidelines for IPv6 Routing Headers can be found in [RFC5871].",
      "ja": "現在、IPv6ルーティングヘッダを定義し、そのステータスは[IANA-RH]で見ることができます。 IPv6ルーティングヘッダの割り当てガイドラインは、[RFC5871]で見つけることができます。"
    },
    {
      "indent": 0,
      "text": "4.5. Fragment Header",
      "section_title": true,
      "ja": "4.5。フラグメントヘッダー"
    },
    {
      "indent": 3,
      "text": "The Fragment header is used by an IPv6 source to send a packet larger than would fit in the path MTU to its destination. (Note: unlike IPv4, fragmentation in IPv6 is performed only by source nodes, not by routers along a packet's delivery path -- see Section 5.) The Fragment header is identified by a Next Header value of 44 in the immediately preceding header and has the following format:",
      "ja": "フラグメントヘッダは、その宛先へのパスMTUに収まるであろうよりも大きなパケットを送信するIPv6ソースによって使用されます。 （注：IPv4と異なり、IPv6でのフラグメンテーションのみソースノードによってではなく、パケットの配信経路に沿ったルータによって実行される - セクション5を参照）フラグメントヘッダは、直前のヘッダ44の次ヘッダ値によって識別されるとなっています次の形式："
    },
    {
      "indent": 3,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Next Header  |   Reserved    |      Fragment Offset    |Res|M|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                         Identification                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Next Header 8-bit selector. Identifies the initial header type of the Fragmentable Part of the original packet (defined below). Uses the same values as the IPv4 Protocol field [IANA-PN].",
      "ja": "次ヘッダ8ビットセレクタ。元のパケットの分割可能部分（以下に定義）の初期ヘッダタイプを識別する。 IPv4のプロトコルフィールド[IANA-PN]と同じ値を使用します。"
    },
    {
      "indent": 6,
      "text": "Reserved 8-bit reserved field. Initialized to zero for transmission; ignored on reception.",
      "ja": "8ビットの予約フィールドを禁じます。送信のためにゼロに初期化。レセプションで無視。"
    },
    {
      "indent": 6,
      "text": "Fragment Offset 13-bit unsigned integer. The offset, in 8-octet units, of the data following this header, relative to the start of the Fragmentable Part of the original packet.",
      "ja": "断片は、13ビットの符号なし整数オフセット。元のパケットの分割可能部分の開始に対してこのヘッダーに続くデータの8オクテット単位で、オフセット。"
    },
    {
      "indent": 6,
      "text": "Res 2-bit reserved field. Initialized to zero for transmission; ignored on reception.",
      "ja": "RES 2ビットの予約フィールド。送信のためにゼロに初期化。レセプションで無視。"
    },
    {
      "indent": 6,
      "text": "M flag 1 = more fragments; 0 = last fragment.",
      "ja": "Mフラグ= 1以上の断片。 0 =最後のフラグメント。"
    },
    {
      "indent": 6,
      "text": "Identification 32 bits. See description below.",
      "ja": "識別32ビット。以下の説明を参照してください。"
    },
    {
      "indent": 3,
      "text": "In order to send a packet that is too large to fit in the MTU of the path to its destination, a source node may divide the packet into fragments and send each fragment as a separate packet, to be reassembled at the receiver.",
      "ja": "その宛先への経路のMTUに収まるには大きすぎるパケットを送信するために、ソースノードはフラグメントにパケットを分割してもよいし、別個のパケットとして各断片を送信、受信機において再アセンブルします。"
    },
    {
      "indent": 3,
      "text": "For every packet that is to be fragmented, the source node generates an Identification value. The Identification must be different than that of any other fragmented packet sent recently* with the same Source Address and Destination Address. If a Routing header is present, the Destination Address of concern is that of the final destination.",
      "ja": "断片化されるパケットごとに、ソースノードは識別値を生成します。識別は、同じ送信元アドレスと宛先アドレスを持つ*最近送られた任意の他のフラグメントパケットよりも異なっている必要があります。ルーティングヘッダが存在する場合、懸念の宛先アドレスは最終目的地のことです。"
    },
    {
      "indent": 6,
      "text": "* \"recently\" means within the maximum likely lifetime of a packet, including transit time from source to destination and time spent awaiting reassembly with other fragments of the same packet. However, it is not required that a source node knows the maximum packet lifetime. Rather, it is assumed that the requirement can be met by implementing an algorithm that results in a low identification reuse frequency. Examples of algorithms that can meet this requirement are described in [RFC7739].",
      "ja": "*「最近」のソースから同じパケットの他の断片と再組み立てを待って過ごした目的地と時間に通過時間を含め、パケットの最大可能性の高い寿命内を意味します。しかし、ソースノードが最大パケット生存期間を知っている必要はありません。むしろ、要求は低い識別の再使用周波数をもたらすアルゴリズムを実装することによって満たすことができることが想定されます。この要件を満たすことができるアルゴリズムの例は、[RFC7739]に記載されています。"
    },
    {
      "indent": 3,
      "text": "The initial, large, unfragmented packet is referred to as the \"original packet\", and it is considered to consist of three parts, as illustrated:",
      "ja": "示されるように、初期の、大、非断片化パケットは、「元のパケット」と呼ばれ、3つの部分からなると考えられています。"
    },
    {
      "indent": 3,
      "text": "original packet:",
      "ja": "元のパケット："
    },
    {
      "indent": 3,
      "text": "+------------------+-------------------------+---//----------------+\n|  Per-Fragment    | Extension & Upper-Layer |   Fragmentable      |\n|    Headers       |       Headers           |      Part           |\n+------------------+-------------------------+---//----------------+",
      "raw": true
    },
    {
      "indent": 6,
      "text": "The Per-Fragment headers must consist of the IPv6 header plus any extension headers that must be processed by nodes en route to the destination, that is, all headers up to and including the Routing header if present, else the Hop-by-Hop Options header if present, else no extension headers.",
      "ja": "パーフラグメントヘッダは、すなわち、IPv6ヘッダを加えた目的地までの途中のノードによって処理されなければならない任意の拡張ヘッダで構成しなければならないルーティングヘッダまでを含むすべてのヘッダー存在、他のホップバイホップオプションならヘッダ存在する場合、他のない拡張ヘッダ。"
    },
    {
      "indent": 6,
      "text": "The Extension headers are all other extension headers that are not included in the Per-Fragment headers part of the packet. For this purpose, the Encapsulating Security Payload (ESP) is not considered an extension header. The Upper-Layer header is the first upper-layer header that is not an IPv6 extension header. Examples of upper-layer headers include TCP, UDP, IPv4, IPv6, ICMPv6, and as noted ESP.",
      "ja": "拡張ヘッダは、パケットのフラグメントごとのヘッダ部分に含まれていない他のすべての拡張ヘッダーです。この目的のために、カプセル化セキュリティペイロード（ESP）は、拡張ヘッダとは見なされません。上位層ヘッダは、IPv6拡張ヘッダではない第一上位層ヘッダです。上位層ヘッダの例としては、TCP、UDP、のIPv4、IPv6の、ICMPv6の、と述べESPとして、が挙げられます。"
    },
    {
      "indent": 6,
      "text": "The Fragmentable Part consists of the rest of the packet after the upper-layer header or after any header (i.e., initial IPv6 header or extension header) that contains a Next Header value of No Next Header.",
      "ja": "分割可能部分は、上位層ヘッダの後またはNo次のヘッダの次ヘッダ値を含む任意のヘッダ（すなわち、最初のIPv6ヘッダまたは拡張ヘッダ）の後にパケットの残りの部分から成ります。"
    },
    {
      "indent": 3,
      "text": "The Fragmentable Part of the original packet is divided into fragments. The lengths of the fragments must be chosen such that the resulting fragment packets fit within the MTU of the path to the packet's destination(s). Each complete fragment, except possibly the last (\"rightmost\") one, is an integer multiple of 8 octets long.",
      "ja": "元のパケットのフラグメント化一部は、フラグメントに分割されます。断片の長さは、得られたフラグメントパケットがパケットの宛先（複数可）へのパスのMTU内に収まるように選択されなければなりません。おそらく最後の（「右端」）以外の各完全な断片、一方は、長い8つのオクテットの整数倍です。"
    },
    {
      "indent": 3,
      "text": "The fragments are transmitted in separate \"fragment packets\" as illustrated:",
      "ja": "図示のようにフラグメントは、別個の「断片パケット」で送信されます。"
    },
    {
      "indent": 3,
      "text": "original packet:",
      "ja": "元のパケット："
    },
    {
      "indent": 3,
      "text": "+-----------------+-----------------+--------+--------+-//-+--------+\n|  Per-Fragment   |Ext & Upper-Layer|  first | second |    |  last  |\n|    Headers      |    Headers      |fragment|fragment|....|fragment|\n+-----------------+-----------------+--------+--------+-//-+--------+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "fragment packets:",
      "ja": "フラグメントパケット："
    },
    {
      "indent": 3,
      "text": "+------------------+---------+-------------------+----------+\n|  Per-Fragment    |Fragment | Ext & Upper-Layer |  first   |\n|    Headers       | Header  |   Headers         | fragment |\n+------------------+---------+-------------------+----------+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "+------------------+--------+-------------------------------+\n|  Per-Fragment    |Fragment|    second                     |\n|    Headers       | Header |   fragment                    |\n+------------------+--------+-------------------------------+\n                      o\n                      o\n                      o\n+------------------+--------+----------+\n|  Per-Fragment    |Fragment|   last   |\n|    Headers       | Header | fragment |\n+------------------+--------+----------+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The first fragment packet is composed of:",
      "ja": "最初のフラグメントパケットは、から構成されています。"
    },
    {
      "indent": 6,
      "text": "(1) The Per-Fragment headers of the original packet, with the Payload Length of the original IPv6 header changed to contain the length of this fragment packet only (excluding the length of the IPv6 header itself), and the Next Header field of the last header of the Per-Fragment headers changed to 44.",
      "ja": "（1）のみ（IPv6ヘッダー自体の長さを除く）は、このフラグメントパケットの長さを含むように変更され、元のIPv6ヘッダのペイロード長との次ヘッダフィールドを持つ元のパケットごとのフラグメントヘッダパーフラグメントヘッダの最後のヘッダは44に変更されました。"
    },
    {
      "indent": 6,
      "text": "(2) A Fragment header containing:",
      "ja": "（2）を含有するフラグメントヘッダ："
    },
    {
      "indent": 14,
      "text": "The Next Header value that identifies the first header\nafter the Per-Fragment headers of the original packet.",
      "raw": true
    },
    {
      "indent": 14,
      "text": "A Fragment Offset containing the offset of the fragment, in 8-octet units, relative to the start of the Fragmentable Part of the original packet. The Fragment Offset of the first (\"leftmost\") fragment is 0.",
      "ja": "元のパケットの分割可能部分の開始に対して8オクテット単位で、フラグメントのオフセットを含むオフセットフラグメント。 （「左端」）最初のフラグメントのオフセット断片が0です。"
    },
    {
      "indent": 14,
      "text": "An M flag value of 1 as this is the first fragment.",
      "ja": "このような1のMフラグの値が最初のフラグメントです。"
    },
    {
      "indent": 14,
      "text": "The Identification value generated for the original packet.",
      "ja": "元のパケットのために生成された識別値。"
    },
    {
      "indent": 6,
      "text": "(3) Extension headers, if any, and the Upper-Layer header. These headers must be in the first fragment. Note: This restricts the size of the headers through the Upper-Layer header to the MTU of the path to the packet's destinations(s).",
      "ja": "（3）拡張ヘッダ、もしあれば、上部層ヘッダ。これらのヘッダは、最初のフラグメントでなければなりません。注：これは、パケットの宛先（複数可）へのパスのMTUに上位層ヘッダを介してヘッダーのサイズを制限します。"
    },
    {
      "indent": 6,
      "text": "(4) The first fragment.",
      "ja": "（4）最初のフラグメント。"
    },
    {
      "indent": 3,
      "text": "The subsequent fragment packets are composed of:",
      "ja": "後続のフラグメントパケットが構成されています。"
    },
    {
      "indent": 6,
      "text": "(1) The Per-Fragment headers of the original packet, with the Payload Length of the original IPv6 header changed to contain the length of this fragment packet only (excluding the length of the IPv6 header itself), and the Next Header field of the last header of the Per-Fragment headers changed to 44.",
      "ja": "（1）のみ（IPv6ヘッダー自体の長さを除く）は、このフラグメントパケットの長さを含むように変更され、元のIPv6ヘッダのペイロード長との次ヘッダフィールドを持つ元のパケットごとのフラグメントヘッダパーフラグメントヘッダの最後のヘッダは44に変更されました。"
    },
    {
      "indent": 6,
      "text": "(2) A Fragment header containing:",
      "ja": "（2）を含有するフラグメントヘッダ："
    },
    {
      "indent": 14,
      "text": "The Next Header value that identifies the first header\nafter the Per-Fragment headers of the original packet.",
      "raw": true
    },
    {
      "indent": 14,
      "text": "A Fragment Offset containing the offset of the fragment, in 8-octet units, relative to the start of the Fragmentable Part of the original packet.",
      "ja": "元のパケットの分割可能部分の開始に対して8オクテット単位で、フラグメントのオフセットを含むオフセットフラグメント。"
    },
    {
      "indent": 14,
      "text": "An M flag value of 0 if the fragment is the last (\"rightmost\") one, else an M flag value of 1.",
      "ja": "M 0のフラグ値フラグメントが最後（「右端」）であれば1、そうでなければ1のMフラグ値。"
    },
    {
      "indent": 14,
      "text": "The Identification value generated for the original packet.",
      "ja": "元のパケットのために生成された識別値。"
    },
    {
      "indent": 6,
      "text": "(3) The fragment itself.",
      "ja": "（3）断片自体。"
    },
    {
      "indent": 3,
      "text": "Fragments must not be created that overlap with any other fragments created from the original packet.",
      "ja": "フラグメントは、元のパケットから作成された任意の他の断片と重複するものを作成してはいけません。"
    },
    {
      "indent": 3,
      "text": "At the destination, fragment packets are reassembled into their original, unfragmented form, as illustrated:",
      "ja": "図示のように先に、フラグメントパケットは、元の、非断片化形式に再構築されます。"
    },
    {
      "indent": 3,
      "text": "reassembled original packet:",
      "ja": "元のパケットを再組み立て："
    },
    {
      "indent": 3,
      "text": "+---------------+-----------------+---------+--------+-//--+--------+\n| Per-Fragment  |Ext & Upper-Layer|  first  | second |     | last   |\n|    Headers    |     Headers     |frag data|fragment|.....|fragment|\n+---------------+-----------------+---------+--------+-//--+--------+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The following rules govern reassembly:",
      "ja": "次の規則が再構築を支配します："
    },
    {
      "indent": 6,
      "text": "An original packet is reassembled only from fragment packets that have the same Source Address, Destination Address, and Fragment Identification.",
      "ja": "元のパケットは、同じソースアドレス、宛先アドレス、およびフラグメントの識別を持っているフラグメントパケットから組み立て直されます。"
    },
    {
      "indent": 6,
      "text": "The Per-Fragment headers of the reassembled packet consists of all headers up to, but not including, the Fragment header of the first fragment packet (that is, the packet whose Fragment Offset is zero), with the following two changes:",
      "ja": "次の二つの変更をパーフラグメント再構成されたパケットのヘッダまでのすべてのヘッダーからなるが、含まない、最初のフラグメントパケットのフラグメントヘッダ（すなわち、そのフラグメントオフセットがゼロであるパケットです）。"
    },
    {
      "indent": 9,
      "text": "The Next Header field of the last header of the Per-Fragment headers is obtained from the Next Header field of the first fragment's Fragment header.",
      "ja": "パーフラグメントヘッダの最後のヘッダの次ヘッダフィールドは、最初のフラグメントのフラグメントヘッダの次ヘッダフィールドから得られます。"
    },
    {
      "indent": 9,
      "text": "The Payload Length of the reassembled packet is computed from the length of the Per-Fragment headers and the length and offset of the last fragment. For example, a formula for computing the Payload Length of the reassembled original packet is:",
      "ja": "再構成されたパケットのペイロードの長さごとのフラグメントヘッダの長さと長さから計算され、最後のフラグメントのオフセットされています。例えば、再組み立て元のパケットのペイロード長を計算するための式であります："
    },
    {
      "indent": 12,
      "text": "PL.orig = PL.first - FL.first - 8 + (8 * FO.last) + FL.last",
      "ja": "PL.orig = PL.first  -  FL.first  -  8 +（8 * FO.last）+ FL.last"
    },
    {
      "indent": 12,
      "text": "where PL.orig = Payload Length field of reassembled packet. PL.first = Payload Length field of first fragment packet. FL.first = length of fragment following Fragment header of first fragment packet. FO.last = Fragment Offset field of Fragment header of last fragment packet. FL.last = length of fragment following Fragment header of last fragment packet.",
      "ja": "PL.origは、再構成されたパケットのペイロード長フィールドを=場所。最初のフラグメントパケットのPL.first =ペイロード長フィールド。最初のフラグメントパケットのフラグメントヘッダに続く断片のFL.first =長さ。最後のフラグメントパケットのフラグメントヘッダのFO.last =フラグメントオフセットフィールド。最後のフラグメントパケットのフラグメントヘッダに続く断片のFL.last =長さ。"
    },
    {
      "indent": 9,
      "text": "The Fragmentable Part of the reassembled packet is constructed from the fragments following the Fragment headers in each of the fragment packets. The length of each fragment is computed by subtracting from the packet's Payload Length the length of the headers between the IPv6 header and fragment itself; its relative position in Fragmentable Part is computed from its Fragment Offset value.",
      "ja": "再構成されたパケットの分割可能部分はフラグメントパケットの各々におけるフラグメントヘッダ下記フラグメントから構成されています。各断片の長さは、パケットのペイロード長とIPv6ヘッダとフラグメント自体との間のヘッダの長さを減算することによって計算されます。フラグメント化パートにおけるその相対的位置は、そのフラグメントオフセット値から計算されます。"
    },
    {
      "indent": 9,
      "text": "The Fragment header is not present in the final, reassembled packet.",
      "ja": "フラグメントヘッダは、最終的な、再構成されたパケットには存在しません。"
    },
    {
      "indent": 9,
      "text": "If the fragment is a whole datagram (that is, both the Fragment Offset field and the M flag are zero), then it does not need any further reassembly and should be processed as a fully reassembled packet (i.e., updating Next Header, adjust Payload Length, removing the Fragment header, etc.). Any other fragments that match this packet (i.e., the same IPv6 Source Address, IPv6 Destination Address, and Fragment Identification) should be processed independently.",
      "ja": "断片（つまりフラグメントオフセットフィールド及びMフラグの両方がゼロである）全体のデータグラムである場合、それは（すなわち、次のヘッダーを更新し、ペイロードを調節する任意のさらなる再組み立てを必要とせず、完全に再構成されたパケットとして処理されるべきです長さ、フラグメントヘッダを除去する、など）。このパケットに一致する任意の他のフラグメント（すなわち、同じIPv6送信元アドレス、IPv6宛先アドレス、およびフラグメントの同定）独立に処理されなければなりません。"
    },
    {
      "indent": 3,
      "text": "The following error conditions may arise when reassembling fragmented packets:",
      "ja": "断片化されたパケットを再構築すると、次のエラー条件が発生することがあります。"
    },
    {
      "indent": 6,
      "text": "o If insufficient fragments are received to complete reassembly of a packet within 60 seconds of the reception of the first-arriving fragment of that packet, reassembly of that packet must be abandoned and all the fragments that have been received for that packet must be discarded. If the first fragment (i.e., the one with a Fragment Offset of zero) has been received, an ICMP Time Exceeded -- Fragment Reassembly Time Exceeded message should be sent to the source of that fragment.",
      "ja": "不十分な断片はそのパケットの最初の到着フラグメントの受信の60秒以内にパケットの再構築を完了するために、受信された場合、O、そのパケットの再構築を放棄しなければならず、そのパケットのために受信されたすべてのフラグメントを廃棄しなければなりません。最初の断片（ゼロオフセット断片ですなわち1）が受信した場合、ICMP時間超過 - フラグメント再構成時間超過メッセージは、その断片の源に送信されなければなりません。"
    },
    {
      "indent": 6,
      "text": "o If the length of a fragment, as derived from the fragment packet's Payload Length field, is not a multiple of 8 octets and the M flag of that fragment is 1, then that fragment must be discarded and an ICMP Parameter Problem, Code 0, message should be sent to the source of the fragment, pointing to the Payload Length field of the fragment packet.",
      "ja": "断片の長さならば、フラグメントパケットのペイロード長フィールドから導出される、8つのオクテットの倍数ではなく、その断片のMフラグが1であるO、次いでその断片を廃棄しなければならず、ICMPパラメータ問題、コード0メッセージは、フラグメントパケットのペイロード長フィールドを指し、その断片の源に送信されなければなりません。"
    },
    {
      "indent": 6,
      "text": "o If the length and offset of a fragment are such that the Payload Length of the packet reassembled from that fragment would exceed 65,535 octets, then that fragment must be discarded and an ICMP Parameter Problem, Code 0, message should be sent to the source of the fragment, pointing to the Fragment Offset field of the fragment packet.",
      "ja": "長さおよびフラグメントのオフセットは、その断片から再構成されたパケットのペイロード長が65,535オクテットを超えるようなものであるその断片を廃棄しなければならず、ICMPパラメータ問題、コード0の場合、O、メッセージはソースに送信されるべきですフラグメント、フラグメントパケットのフラグメントオフセットフィールドを指します。"
    },
    {
      "indent": 6,
      "text": "o If the first fragment does not include all headers through an Upper-Layer header, then that fragment should be discarded and an ICMP Parameter Problem, Code 3, message should be sent to the source of the fragment, with the Pointer field set to zero.",
      "ja": "最初のフラグメントは、そのフラグメントが破棄されるべき上位層ヘッダを介してすべてのヘッダー、およびICMPパラメータ問題、コード3が含まれていない場合、O、メッセージがゼロに設定ポインタフィールドと、断片のソースに送信されるべきです。"
    },
    {
      "indent": 6,
      "text": "o If any of the fragments being reassembled overlap with any other fragments being reassembled for the same packet, reassembly of that packet must be abandoned and all the fragments that have been received for that packet must be discarded, and no ICMP error messages should be sent.",
      "ja": "同じパケットのために再組立され、他の断片との重複を再組み立てされた断片のいずれかの場合は、O、そのパケットの再構築を放棄しなければならず、そのパケットのために受信されたすべてのフラグメントは破棄しなければならない、と何のICMPエラーメッセージが送信されるべきではありません。"
    },
    {
      "indent": 9,
      "text": "It should be noted that fragments may be duplicated in the network. Instead of treating these exact duplicate fragments as overlapping fragments, an implementation may choose to detect this case and drop exact duplicate fragments while keeping the other fragments belonging to the same packet.",
      "ja": "フラグメントがネットワーク内で重複することができることに留意すべきです。代わりに、重複フラグメントとして、これらの正確な複製断片の治療のため、実装は、このケースを検出することもできますし、同じパケットに属する他の断片を維持しながら、正確な断片を複製ドロップします。"
    },
    {
      "indent": 3,
      "text": "The following conditions are not expected to occur frequently but are not considered errors if they do:",
      "ja": "以下の条件が頻繁に発生すると予想されていないが、彼らがしなければ、エラーとはみなされません。"
    },
    {
      "indent": 6,
      "text": "The number and content of the headers preceding the Fragment header of different fragments of the same original packet may differ. Whatever headers are present, preceding the Fragment header in each fragment packet, are processed when the packets arrive, prior to queueing the fragments for reassembly. Only those headers in the Offset zero fragment packet are retained in the reassembled packet.",
      "ja": "同じ元のパケットの異なるフラグメントのフラグメントヘッダに先行するヘッダの数と内容が異なっていてもよいです。パケットが到着したときにヘッダが存在しているものは何でも、各フラグメントパケットにフラグメントヘッダの前に、前に再構成のためのフラグメントをキューに、処理されます。ゼロオフセットフラグメントパケットでのみヘッダが再構成されたパケットに保持されます。"
    },
    {
      "indent": 6,
      "text": "The Next Header values in the Fragment headers of different fragments of the same original packet may differ. Only the value from the Offset zero fragment packet is used for reassembly.",
      "ja": "同じ元のパケットの異なるフラグメントのフラグメントヘッダの次ヘッダ値が異なっていてもよいです。ゼロオフセットフラグメントパケットからの値のみが再アセンブリのために使用されます。"
    },
    {
      "indent": 6,
      "text": "Other fields in the IPv6 header may also vary across the fragments being reassembled. Specifications that use these fields may provide additional instructions if the basic mechanism of using the values from the Offset zero fragment is not sufficient. For example, Section 5.3 of [RFC3168] describes how to combine the Explicit Congestion Notification (ECN) bits from different fragments to derive the ECN bits of the reassembled packet.",
      "ja": "IPv6ヘッダ内の他のフィールドはまた、再組み立てされた断片を横切って変化してもよいです。ゼロオフセット断片からの値を使用しての基本的なメカニズムは十分でない場合、これらのフィールドを使用する仕様が追加の指示を提供することができます。例えば、[RFC3168]のセクション5.3は、再構成されたパケットのECNビットを導出するために異なるフラグメントから明示的輻輳通知（ECN）ビットを結合する方法について説明します。"
    },
    {
      "indent": 0,
      "text": "4.6. Destination Options Header",
      "section_title": true,
      "ja": "4.6。宛先オプションヘッダ"
    },
    {
      "indent": 3,
      "text": "The Destination Options header is used to carry optional information that need be examined only by a packet's destination node(s). The Destination Options header is identified by a Next Header value of 60 in the immediately preceding header and has the following format:",
      "ja": "宛先オプションヘッダは、パケットの宛先ノード（複数可）によってのみ検討する必要がある任意の情報を運ぶために使用されます。宛先オプションヘッダは、直前のヘッダ60の次ヘッダ値によって識別され、以下の形式を有します。"
    },
    {
      "indent": 4,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Next Header  |  Hdr Ext Len  |                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               +\n|                                                               |\n.                                                               .\n.                            Options                            .\n.                                                               .\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Next Header 8-bit selector. Identifies the type of header immediately following the Destination Options header. Uses the same values as the IPv4 Protocol field [IANA-PN].",
      "ja": "次ヘッダ8ビットセレクタ。すぐに宛先オプションヘッダー次のヘッダーのタイプを識別します。 IPv4のプロトコルフィールド[IANA-PN]と同じ値を使用します。"
    },
    {
      "indent": 6,
      "text": "Hdr Ext Len 8-bit unsigned integer. Length of the Destination Options header in 8-octet units, not including the first 8 octets.",
      "ja": "HDR拡張レン8ビットの符号なし整数。宛先オプションの長さは、最初の8つのオクテットを含まない、8オクテット単位のヘッダ。"
    },
    {
      "indent": 6,
      "text": "Options Variable-length field, of length such that the complete Destination Options header is an integer multiple of 8 octets long. Contains one or more TLV-encoded options, as described in Section 4.2.",
      "ja": "完全な宛先オプションヘッダは、長い8つのオクテットの整数倍であるような長さのオプション可変長フィールド。セクション4.2で説明したように、一つ以上のTLVでエンコードされたオプションが含まれています。"
    },
    {
      "indent": 3,
      "text": "The only destination options defined in this document are the Pad1 and PadN options specified in Section 4.2.",
      "ja": "この文書で定義された唯一の宛先オプションは、4.2節で指定されたパッド1とパッドNオプションです。"
    },
    {
      "indent": 3,
      "text": "Note that there are two possible ways to encode optional destination information in an IPv6 packet: either as an option in the Destination Options header or as a separate extension header. The Fragment header and the Authentication header are examples of the latter approach. Which approach can be used depends on what action is desired of a destination node that does not understand the optional information:",
      "ja": "IPv6パケットに、オプションの宛先情報を符号化する2つの可能な方法があることに注意：宛先オプションヘッダのオプションとして、または別個の拡張ヘッダのいずれか。フラグメントヘッダと認証ヘッダは、後者のアプローチの例です。どちらのアプローチが使用可能なオプションの情報を理解していない宛先ノードに望まれているもののアクションに依存します。"
    },
    {
      "indent": 6,
      "text": "o If the desired action is for the destination node to discard the packet and, only if the packet's Destination Address is not a multicast address, send an ICMP Unrecognized Type message to the packet's Source Address, then the information may be encoded either as a separate header or as an option in the",
      "ja": "宛先ノードがパケットを破棄し、パケットの宛先アドレスがマルチキャストアドレスではない場合にのみ、パケットのソースアドレスにICMP認識できないタイプのメッセージを送信するための所望のアクションがある場合、O、次いで情報がいずれかの別個のように符号化することができますヘッダまたはでオプションとして"
    },
    {
      "indent": 9,
      "text": "Destination Options header whose Option Type has the value 11 in its highest-order 2 bits. The choice may depend on such factors as which takes fewer octets, or which yields better alignment or more efficient parsing.",
      "ja": "そのオプションタイプの最上位2ビットの値11を有する宛先オプションヘッダ。これは、より少ないオクテットを取る、またはそれ以上の位置合わせや、より効率的な解析を得ているような選択は、そのような要因に依存し得ます。"
    },
    {
      "indent": 6,
      "text": "o If any other action is desired, the information must be encoded as an option in the Destination Options header whose Option Type has the value 00, 01, or 10 in its highest-order 2 bits, specifying the desired action (see Section 4.2).",
      "ja": "他のアクションが所望される場合、O、情報は、所望のアクションを指定する、オプションタイプ値00を有し、01、又はその最上位2ビットが10宛先オプションヘッダ内のオプションとして符号化されなければならない（セクション4.2を参照） 。"
    },
    {
      "indent": 0,
      "text": "4.7. No Next Header",
      "section_title": true,
      "ja": "4.7。いいえ次ヘッダありません"
    },
    {
      "indent": 3,
      "text": "The value 59 in the Next Header field of an IPv6 header or any extension header indicates that there is nothing following that header. If the Payload Length field of the IPv6 header indicates the presence of octets past the end of a header whose Next Header field contains 59, those octets must be ignored and passed on unchanged if the packet is forwarded.",
      "ja": "IPv6ヘッダーまたは任意の拡張ヘッダの次ヘッダフィールドの値59は、そのヘッダに続くものが何もないことを示しています。 IPv6ヘッダのペイロード長フィールドは次ヘッダフィールド59が含まれているヘッダの最後過去オクテットの存在を示している場合、パケットが転送されている場合、それらのオクテットは無視され、そのまま渡さなければなりません。"
    },
    {
      "indent": 0,
      "text": "4.8. Defining New Extension Headers and Options",
      "section_title": true,
      "ja": "4.8。新しい拡張ヘッダーとオプションの定義"
    },
    {
      "indent": 3,
      "text": "Defining new IPv6 extension headers is not recommended, unless there are no existing IPv6 extension headers that can be used by specifying a new option for that IPv6 extension header. A proposal to specify a new IPv6 extension header must include a detailed technical explanation of why an existing IPv6 extension header can not be used for the desired new function. See [RFC6564] for additional background information.",
      "ja": "そのIPv6拡張ヘッダのための新しいオプションを指定することで使用することができます既存のIPv6拡張ヘッダが存在しない場合を除き、新たなIPv6拡張ヘッダを定義することは、推奨されません。新しいIPv6拡張ヘッダを指定するための提案は、既存のIPv6拡張ヘッダが所望の新しい機能のために使用することができない理由についての詳細な技術的説明を含まなければなりません。追加の背景情報については、[RFC6564]を参照してください。"
    },
    {
      "indent": 3,
      "text": "Note: New extension headers that require hop-by-hop behavior must not be defined because, as specified in Section 4 of this document, the only extension header that has hop-by-hop behavior is the Hop-by-Hop Options header.",
      "ja": "注：このドキュメントのセクション4で指定されるように、ホップバイホップ挙動を有するのみ拡張ヘッダは、ホップバイホップオプションヘッダであるので、ホップバイホップ動作を必要とする新しい拡張ヘッダーが定義されてはなりません。"
    },
    {
      "indent": 3,
      "text": "New hop-by-hop options are not recommended because nodes may be configured to ignore the Hop-by-Hop Options header, drop packets containing a Hop-by-Hop Options header, or assign packets containing a Hop-by-Hop Options header to a slow processing path. Designers considering defining new hop-by-hop options need to be aware of this likely behavior. There has to be a very clear justification why any new hop-by-hop option is needed before it is standardized.",
      "ja": "ノードは、ホップバイホップオプションヘッダを無視するホップバイホップオプションヘッダを含むパケットをドロップするか、ホップバイホップオプションヘッダを含むパケットを割り当てるように構成することができるので、新たなホップバイホップオプションは推奨されません遅い処理パスへ。新しいホップバイホップオプションを定義考慮設計者は、この可能性の高い動作を認識する必要があります。それが標準化される前に、新たなホップバイホップオプションが必要な理由は非常に明快な理由がなければなりません。"
    },
    {
      "indent": 3,
      "text": "Instead of defining new extension headers, it is recommended that the Destination Options header is used to carry optional information that must be examined only by a packet's destination node(s), because they provide better handling and backward compatibility.",
      "ja": "彼らは、より良いハンドリングとの下位互換性を提供するため、代わりに新たな拡張ヘッダを定義することは、宛先オプションヘッダは、パケットの宛先ノード（複数可）によってのみ検査されなければならない任意の情報を運ぶために使用されることが推奨されます。"
    },
    {
      "indent": 3,
      "text": "If new extension headers are defined, they need to use the following format:",
      "ja": "新しい拡張ヘッダが定義されている場合、彼らは次の形式を使用する必要があります。"
    },
    {
      "indent": 4,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Next Header  |  Hdr Ext Len  |                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               +\n|                                                               |\n.                                                               .\n.                  Header-Specific Data                         .\n.                                                               .\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Next Header 8-bit selector. Identifies the type of header immediately following the extension header. Uses the same values as the IPv4 Protocol field [IANA-PN].",
      "ja": "次ヘッダ8ビットセレクタ。直ちに拡張ヘッダに続くヘッダのタイプを識別する。 IPv4のプロトコルフィールド[IANA-PN]と同じ値を使用します。"
    },
    {
      "indent": 6,
      "text": "Hdr Ext Len 8-bit unsigned integer. Length of the Destination Options header in 8-octet units, not including the first 8 octets.",
      "ja": "HDR拡張レン8ビットの符号なし整数。宛先オプションの長さは、最初の8つのオクテットを含まない、8オクテット単位のヘッダ。"
    },
    {
      "indent": 6,
      "text": "Header Specific Data Variable-length field. Fields specific to the extension header.",
      "ja": "固有データ可変長フィールドをヘッダー。拡張ヘッダに特定のフィールド。"
    },
    {
      "indent": 0,
      "text": "5. Packet Size Issues",
      "section_title": true,
      "ja": "5.パケットサイズの問題"
    },
    {
      "indent": 3,
      "text": "IPv6 requires that every link in the Internet have an MTU of 1280 octets or greater. This is known as the IPv6 minimum link MTU. On any link that cannot convey a 1280-octet packet in one piece, link-specific fragmentation and reassembly must be provided at a layer below IPv6.",
      "ja": "IPv6は、インターネット内のすべてのリンクが1280オクテット以上のMTUを持っていることが必要です。これは、IPv6最小リンクMTUとして知られています。一体に1280オクテットのパケットを伝えることができない任意のリンクに、リンク特異的断片化と再アセンブリは、IPv6の下の層に提供されなければなりません。"
    },
    {
      "indent": 3,
      "text": "Links that have a configurable MTU (for example, PPP links [RFC1661]) must be configured to have an MTU of at least 1280 octets; it is recommended that they be configured with an MTU of 1500 octets or greater, to accommodate possible encapsulations (i.e., tunneling) without incurring IPv6-layer fragmentation.",
      "ja": "設定可能なMTU（例えば、PPPリンク[RFC1661]）を持っているリンクは、少なくとも1280オクテットのMTUを有するように構成されなければなりません。それらは1500オクテット以上のMTUを使用して構成されたIPv6層の断片化を招くことなく、可能なカプセル化（すなわち、トンネリング）を収容することが推奨されます。"
    },
    {
      "indent": 3,
      "text": "From each link to which a node is directly attached, the node must be able to accept packets as large as that link's MTU.",
      "ja": "ノードが直接接続された各リンクから、ノードは、そのリンクのMTUと同じ大きさのパケットを受け入れることができなければなりません。"
    },
    {
      "indent": 3,
      "text": "It is strongly recommended that IPv6 nodes implement Path MTU Discovery [RFC8201], in order to discover and take advantage of path MTUs greater than 1280 octets. However, a minimal IPv6 implementation (e.g., in a boot ROM) may simply restrict itself to sending packets no larger than 1280 octets, and omit implementation of Path MTU Discovery.",
      "ja": "強くIPv6がより大きい1280個のオクテットを発見し、パスのMTUを利用するためには、パスMTUディスカバリ[RFC8201]を実装するノードことをお勧めします。しかし、（ブートROMで、例えば、）最小のIPv6実装は、単に1280オクテットより大きくない送信パケットに自分自身を制限し、パスMTU探索の実行を省略してもよいです。"
    },
    {
      "indent": 3,
      "text": "In order to send a packet larger than a path's MTU, a node may use the IPv6 Fragment header to fragment the packet at the source and have it reassembled at the destination(s). However, the use of such fragmentation is discouraged in any application that is able to adjust its packets to fit the measured path MTU (i.e., down to 1280 octets).",
      "ja": "経路のMTUよりも大きいパケットを送信するために、ノードは、ソースにパケットを断片化し、それが宛先（複数可）に再組み立て有することのIPv6フラグメントヘッダを使用することができます。しかしながら、そのような断片の使用は、測定されたパス（即ち、ダウン1280オクテット）MTUに合わせて、そのパケットを調整することができる任意のアプリケーションに推奨されています。"
    },
    {
      "indent": 3,
      "text": "A node must be able to accept a fragmented packet that, after reassembly, is as large as 1500 octets. A node is permitted to accept fragmented packets that reassemble to more than 1500 octets. An upper-layer protocol or application that depends on IPv6 fragmentation to send packets larger than the MTU of a path should not send packets larger than 1500 octets unless it has assurance that the destination is capable of reassembling packets of that larger size.",
      "ja": "ノードが再組立後に1500オクテットと大きい、フラグメント化されたパケットを受け入れることができなければなりません。ノードは、1500個の以上のオクテットを再構築断片化されたパケットを受け入れるように許可されています。それは先にその大きなサイズのパケットを再組み立てすることが可能であるという保証がない限りパスのMTUが1500オクテットよりも大きいパケットを送るべきではないより大きなパケットを送信するためのIPv6断片化に依存する上位層プロトコルまたはアプリケーション。"
    },
    {
      "indent": 0,
      "text": "6. Flow Labels",
      "section_title": true,
      "ja": "6.フローラベル"
    },
    {
      "indent": 3,
      "text": "The 20-bit Flow Label field in the IPv6 header is used by a source to label sequences of packets to be treated in the network as a single flow.",
      "ja": "IPv6ヘッダーの20ビットのフローラベルフィールドは単一のフローのようにネットワーク内で処理すべきパケットのシーケンスを標識するためにソースによって使用されます。"
    },
    {
      "indent": 3,
      "text": "The current definition of the IPv6 Flow Label can be found in [RFC6437].",
      "ja": "IPv6のフローラベルの現在の定義は、[RFC6437]で見つけることができます。"
    },
    {
      "indent": 0,
      "text": "7. Traffic Classes",
      "section_title": true,
      "ja": "7.トラフィッククラス"
    },
    {
      "indent": 3,
      "text": "The 8-bit Traffic Class field in the IPv6 header is used by the network for traffic management. The value of the Traffic Class bits in a received packet or fragment might be different from the value sent by the packet's source.",
      "ja": "IPv6ヘッダーの8ビットのトラフィッククラスフィールドは、トラフィック管理のためにネットワークによって使用されます。受信したパケットまたはフラグメントでトラフィッククラスビットの値は、パケットの送信元によって送信された値と異なる場合があります。"
    },
    {
      "indent": 3,
      "text": "The current use of the Traffic Class field for Differentiated Services and Explicit Congestion Notification is specified in [RFC2474] and [RFC3168].",
      "ja": "差別化サービスおよび明示的輻輳通知のためのトラフィッククラスフィールドの現在の使用は[RFC2474]と[RFC3168]で指定されています。"
    },
    {
      "indent": 0,
      "text": "8. Upper-Layer Protocol Issues",
      "section_title": true,
      "ja": "8.上位層プロトコルの問題"
    },
    {
      "indent": 0,
      "text": "8.1. Upper-Layer Checksums",
      "section_title": true,
      "ja": "8.1。上位層チェックサム"
    },
    {
      "indent": 3,
      "text": "Any transport or other upper-layer protocol that includes the addresses from the IP header in its checksum computation must be modified for use over IPv6, to include the 128-bit IPv6 addresses instead of 32-bit IPv4 addresses. In particular, the following illustration shows the TCP and UDP \"pseudo-header\" for IPv6:",
      "ja": "そのチェックサム計算にIPヘッダからのアドレスを含む任意の輸送または他の上位層プロトコルは、128ビットのIPv6の代わりに32ビットのIPv4アドレスのアドレスが含まれるように、IPv6の上に使用するために修正されなければなりません。具体的には、次の図は、IPv6のTCPおよびUDP「擬似ヘッダ」を示します。"
    },
    {
      "indent": 3,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n+                                                               +\n|                                                               |\n+                         Source Address                        +\n|                                                               |\n+                                                               +\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n+                                                               +\n|                                                               |\n+                      Destination Address                      +\n|                                                               |\n+                                                               +\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                   Upper-Layer Packet Length                   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                      zero                     |  Next Header  |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 6,
      "text": "o If the IPv6 packet contains a Routing header, the Destination Address used in the pseudo-header is that of the final destination. At the originating node, that address will be in the last element of the Routing header; at the recipient(s), that address will be in the Destination Address field of the IPv6 header.",
      "ja": "IPv6パケットは、ルーティングヘッダが含まれている場合は、O、疑似ヘッダで使用される宛先アドレスは最終目的地のことです。発信ノードにおいて、そのアドレスは、ルーティングヘッダの最後の要素であろう。受信者（単数または複数）で、そのアドレスは、IPv6ヘッダの宛先アドレスフィールドになります。"
    },
    {
      "indent": 6,
      "text": "o The Next Header value in the pseudo-header identifies the upper-layer protocol (e.g., 6 for TCP or 17 for UDP). It will differ from the Next Header value in the IPv6 header if there are extension headers between the IPv6 header and the upper-layer header.",
      "ja": "O疑似ヘッダの次のヘッダ値が上位層プロトコルを識別する（例えば、TCP 6または17 UDPの場合）。 IPv6ヘッダと上位層ヘッダとの間の拡張ヘッダが存在する場合には、IPv6ヘッダーの次ヘッダ値は異なるであろう。"
    },
    {
      "indent": 6,
      "text": "o The Upper-Layer Packet Length in the pseudo-header is the length of the upper-layer header and data (e.g., TCP header plus TCP data). Some upper-layer protocols carry their own length information (e.g., the Length field in the UDP header); for such protocols, that is the length used in the pseudo-header. Other protocols (such as TCP) do not carry their own length information, in which case the length used in the pseudo-header is the Payload Length from the IPv6 header, minus the length of any extension headers present between the IPv6 header and the upper-layer header.",
      "ja": "O疑似ヘッダ内の上位層パケットの長さは上位層ヘッダとデータ（例えば、TCPヘッダーとTCPデータ）の長さです。いくつかの上位層プロトコルは、独自の長さの情報を運ぶ（例えば、UDPヘッダの長さフィールド）。そのようなプロトコルのために、それは、疑似ヘッダで使用長さです。 （TCPなど）他のプロトコルは、独自の長疑似ヘッダで使用される長さは、IPv6ヘッダからペイロード長である場合には情報、マイナスIPv6ヘッダと上部との間に存在する任意の拡張ヘッダーの長さを有していません-layerヘッダ。"
    },
    {
      "indent": 6,
      "text": "o Unlike IPv4, the default behavior when UDP packets are originated by an IPv6 node is that the UDP checksum is not optional. That is, whenever originating a UDP packet, an IPv6 node must compute a UDP checksum over the packet and the pseudo-header, and, if that computation yields a result of zero, it must be changed to hex FFFF for placement in the UDP header. IPv6 receivers must discard UDP packets containing a zero checksum and should log the error.",
      "ja": "OはIPv4とは異なり、UDPパケットがIPv6ノードによって発信されたデフォルトの動作は、UDPチェックサムはオプションではないということです。すなわち、UDPパケットを発信するたびに、IPv6ノードがパケット上UDPチェックサムと疑似ヘッダを計算しなければならない、そして、その計算はゼロの結果が得られる場合には、UDPヘッダに配置するための六角FFFFに変更されなければなりません。 IPv6の受信機はゼロチェックサムを含むUDPパケットを破棄しなければなりませんし、エラーをログに記録する必要があります。"
    },
    {
      "indent": 6,
      "text": "o As an exception to the default behavior, protocols that use UDP as a tunnel encapsulation may enable zero-checksum mode for a specific port (or set of ports) for sending and/or receiving. Any node implementing zero-checksum mode must follow the requirements specified in \"Applicability Statement for the Use of IPv6 UDP Datagrams with Zero Checksums\" [RFC6936].",
      "ja": "デフォルト動作の例外としてO、トンネルカプセル化としてUDPを使用するプロトコルは、送信及び/又は受信するためのゼロチェックサム特定のポートのモード（またはポートの設定）を可能にすることができます。ゼロ・サムモードを実装する任意のノードは、「ゼロチェックサムとIPv6のUDPデータグラムの使用のための適用性に関する声明」[RFC6936]で指定された要件に従わなければなりません。"
    },
    {
      "indent": 3,
      "text": "The IPv6 version of ICMP [RFC4443] includes the above pseudo-header in its checksum computation; this is a change from the IPv4 version of ICMP, which does not include a pseudo-header in its checksum. The reason for the change is to protect ICMP from misdelivery or corruption of those fields of the IPv6 header on which it depends, which, unlike IPv4, are not covered by an internet-layer checksum. The Next Header field in the pseudo-header for ICMP contains the value 58, which identifies the IPv6 version of ICMP.",
      "ja": "ICMP [RFC4443]のIPv6のバージョンは、そのチェックサム計算に上記疑似ヘッダを含みます。これは、チェックサムに疑似ヘッダを含まないICMPのIPv4のバージョンからの変更です。変更の理由は、IPv4とは異なり、インターネット層チェックサムによってカバーされていない、それが依存しているIPv6ヘッダのこれらのフィールドの誤配や破損からのICMPを保護することです。 ICMPのための疑似ヘッダの次のヘッダフィールドは、ICMPのIPv6のバージョンを識別する値58を含んでいます。"
    },
    {
      "indent": 0,
      "text": "8.2. Maximum Packet Lifetime",
      "section_title": true,
      "ja": "8.2。最大のパケット生存期間"
    },
    {
      "indent": 3,
      "text": "Unlike IPv4, IPv6 nodes are not required to enforce maximum packet lifetime. That is the reason the IPv4 \"Time-to-Live\" field was renamed \"Hop Limit\" in IPv6. In practice, very few, if any, IPv4 implementations conform to the requirement that they limit packet lifetime, so this is not a change in practice. Any upper-layer protocol that relies on the internet layer (whether IPv4 or IPv6) to limit packet lifetime ought to be upgraded to provide its own mechanisms for detecting and discarding obsolete packets.",
      "ja": "IPv4のとは異なり、IPv6ノードは、最大パケット寿命を強制するために必要とされません。これは、IPv4の「タイム・ツー・ライブ」フィールドは、IPv6における「ホップ制限」と改名された理由です。実際には、もしあれば、非常に少ない、IPv4の実装は、彼らが、パケットの有効期間を制限する要件に適合し、これは実際には変更はありません。パケットの寿命を制限するために、インターネット層（IPv4またはIPv6のいずれか）に依存して、任意の上位層プロトコルは、廃止されたパケットを検出し、廃棄するための独自の機構を提供するためにアップグレードされるべきです。"
    },
    {
      "indent": 0,
      "text": "8.3. Maximum Upper-Layer Payload Size",
      "section_title": true,
      "ja": "8.3。最大上位層ペイロードサイズ"
    },
    {
      "indent": 3,
      "text": "When computing the maximum payload size available for upper-layer data, an upper-layer protocol must take into account the larger size of the IPv6 header relative to the IPv4 header. For example, in IPv4, TCP's Maximum Segment Size (MSS) option is computed as the maximum packet size (a default value or a value learned through Path MTU Discovery) minus 40 octets (20 octets for the minimum-length IPv4 header and 20 octets for the minimum-length TCP header). When using TCP over IPv6, the MSS must be computed as the maximum packet size minus 60 octets, because the minimum-length IPv6 header (i.e., an IPv6 header with no extension headers) is 20 octets longer than a minimum-length IPv4 header.",
      "ja": "上位層データのための利用可能な最大ペイロードサイズを計算するとき、上位層プロトコルが考慮IPv4ヘッダに対するIPv6ヘッダのサイズを大きく取らなければなりません。例えば、IPv4では、TCPの最大セグメントサイズ（MSS）オプションは、最大パケットサイズ（デフォルト値またはパスMTU探索を介して学習値）マイナス40個のオクテット（最小長のIPv4ヘッダーの20オクテットおよび20オクテットのように計算されます。最小長のTCPヘッダの場合）。 IPv6の上にTCPを使用する場合、最小長のIPv6ヘッダは、（すなわち、無拡張ヘッダとIPv6ヘッダ）が最小長のIPv4ヘッダーよりも20オクテット長いため、MSSは、最大パケットサイズマイナス60個のオクテットとして計算されなければなりません。"
    },
    {
      "indent": 0,
      "text": "8.4. Responding to Packets Carrying Routing Headers",
      "section_title": true,
      "ja": "8.4。ルーティングヘッダを運ぶパケットへの対応"
    },
    {
      "indent": 3,
      "text": "When an upper-layer protocol sends one or more packets in response to a received packet that included a Routing header, the response packet(s) must not include a Routing header that was automatically derived by \"reversing\" the received Routing header UNLESS the integrity and authenticity of the received Source Address and Routing header have been verified (e.g., via the use of an Authentication header in the received packet). In other words, only the following kinds of packets are permitted in response to a received packet bearing a Routing header:",
      "ja": "上位層プロトコルは、ルーティングヘッダが含まれて受信されたパケットに応答して、1つ以上のパケットを送信すると、応答パケット（単数または複数）は、自動的に整合性がない限り受信したルーティングヘッダを「反転」することによって誘導されたルーティングヘッダを含めることはできません受信された送信元アドレスとルーティングヘッダの信憑性は、（受信パケット内の認証ヘッダーを使用することにより、例えば）が確認されています。換言すれば、パケットの唯一の次の種類は、ルーティングヘッダを担持する、受信したパケットに応答して、許可されています。"
    },
    {
      "indent": 6,
      "text": "o Response packets that do not carry Routing headers.",
      "ja": "ルーティングヘッダを運ばない応答パケットO。"
    },
    {
      "indent": 6,
      "text": "o Response packets that carry Routing headers that were NOT derived by reversing the Routing header of the received packet (for example, a Routing header supplied by local configuration).",
      "ja": "（例えば、ローカル構成によって供給されるルーティングヘッダ）、受信したパケットのルーティングヘッダを逆にすることによって誘導されなかったルーティングヘッダを運ぶO応答パケット。"
    },
    {
      "indent": 6,
      "text": "o Response packets that carry Routing headers that were derived by reversing the Routing header of the received packet IF AND ONLY IF the integrity and authenticity of the Source Address and Routing header from the received packet have been verified by the responder.",
      "ja": "受信したパケットから送信元アドレスとルーティングヘッダの整合性と信頼は、応答者によって検証されている場合にだけ、受信したパケットのルーティングヘッダを逆にすることによって導き出されたルーティングヘッダを運ぶ応答パケットO。"
    },
    {
      "indent": 0,
      "text": "9. IANA Considerations",
      "section_title": true,
      "ja": "9. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "RFC 2460 is referenced in a number of IANA registries. These include:",
      "ja": "RFC 2460は、IANAレジストリの数で参照されます。これらは、次のとおりです。"
    },
    {
      "indent": 6,
      "text": "o Internet Protocol Version 6 (IPv6) Parameters [IANA-6P]",
      "ja": "Oインターネットプロトコルバージョン6（IPv6）のパラメータ[IANA-6P]"
    },
    {
      "indent": 6,
      "text": "o Assigned Internet Protocol Numbers [IANA-PN]",
      "ja": "O割り当てられたインターネットプロトコル番号[IANA-PN]"
    },
    {
      "indent": 6,
      "text": "o ONC RPC Network Identifiers (netids) [IANA-NI]",
      "ja": "O ONC RPCネットワーク識別子（netids）[IANA-NI]"
    },
    {
      "indent": 6,
      "text": "o Network Layer Protocol Identifiers (NLPIDs) of Interest [IANA-NL]",
      "ja": "関心のOネットワーク層プロトコル識別子（NLPIDs）[IANA-NL]"
    },
    {
      "indent": 6,
      "text": "o Protocol Registries [IANA-PR]",
      "ja": "Oプロトコルレジストリ[IANA-PR]"
    },
    {
      "indent": 3,
      "text": "The IANA has updated these references to point to this document.",
      "ja": "IANAはこのドキュメントを指すようにこれらの参照を更新しました。"
    },
    {
      "indent": 0,
      "text": "10. Security Considerations",
      "section_title": true,
      "ja": "10.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "IPv6, from the viewpoint of the basic format and transmission of packets, has security properties that are similar to IPv4. These security issues include:",
      "ja": "IPv6は、基本フォーマットおよびパケットの送信の観点から、IPv4のと類似しているセキュリティ特性を有します。これらのセキュリティ上の問題は、次のとおりです。"
    },
    {
      "indent": 6,
      "text": "o Eavesdropping, where on-path elements can observe the whole packet (including both contents and metadata) of each IPv6 datagram. o Replay, where the attacker records a sequence of packets off of the wire and plays them back to the party that originally received them. o Packet insertion, where the attacker forges a packet with some chosen set of properties and injects it into the network. o Packet deletion, where the attacker removes a packet from the wire. o Packet modification, where the attacker removes a packet from the wire, modifies it, and reinjects it into the network. o Man-in-the-middle (MITM) attacks, where the attacker subverts the communication stream in order to pose as the sender to receiver and the receiver to the sender. o Denial-of-service (DoS) attacks, where the attacker sends large amounts of legitimate traffic to a destination to overwhelm it.",
      "ja": "上のパス要素が各IPv6データグラムの（コンテンツとメタデータの両方を含む）パケット全体を観察することができる盗聴、O。攻撃者は、ワイヤのオフパケットのシーケンスを記録し、元々それらを受け取った当事者にそれらを再生リプレイ、O。攻撃者は、プロパティの一部の選択されたセットを使用してパケットを偽造し、ネットワークにそれを注入パケット挿入を、O。攻撃者は、ワイヤからパケットを除去するパケット削除、O。攻撃者は、ワイヤからパケットを削除して修正し、ネットワークにそれを再注入パケット修飾を、O。攻撃者が受信機に送信者と送信者に受信機としてポーズするために、通信ストリームを覆すOのman-in-the-middle（MITM）攻撃、。 Oサービス拒否（DoS）攻撃、攻撃者が先に正当なトラフィックを大量に送信し、それを圧倒します。"
    },
    {
      "indent": 3,
      "text": "IPv6 packets can be protected from eavesdropping, replay, packet insertion, packet modification, and MITM attacks by use of the \"Security Architecture for the Internet Protocol\" [RFC4301]. In addition, upper-layer protocols such as Transport Layer Security (TLS) or Secure Shell (SSH) can be used to protect the application-layer traffic running on top of IPv6.",
      "ja": "IPv6パケットは「インターネットプロトコルのためのセキュリティー体系」[RFC4301]を使用することにより、盗聴、リプレイ、パケット挿入、パケットの変更、およびMITM攻撃から保護することができます。また、このようなトランスポート層セキュリティ（TLS）またはセキュアシェル（SSH）などの上位層プロトコルは、IPv6上で動作するアプリケーション層のトラフィックを保護するために使用することができます。"
    },
    {
      "indent": 3,
      "text": "There is not any mechanism to protect against DoS attacks. Defending against these type of attacks is outside the scope of this specification.",
      "ja": "DoS攻撃から保護するための任意のメカニズムはありません。攻撃のこれらのタイプを防御することは、この仕様書の範囲外です。"
    },
    {
      "indent": 3,
      "text": "IPv6 addresses are significantly larger than IPv4 addresses making it much harder to scan the address space across the Internet and even on a single network link (e.g., Local Area Network). See [RFC7707] for more information.",
      "ja": "IPv6アドレスは、IPv4が、それははるかに困難インターネットを介してアドレス空間をスキャンすることも、単一のネットワークリンク（例えば、ローカルエリアネットワーク）上のアドレスよりもかなり大きいです。詳細については、[RFC7707]を参照してください。"
    },
    {
      "indent": 3,
      "text": "IPv6 addresses of nodes are expected to be more visible on the Internet as compared with IPv4 since the use of address translation technology is reduced. This creates some additional privacy issues such as making it easier to distinguish endpoints. See [RFC7721] for more information.",
      "ja": "アドレス変換技術の使用が低減されるためのIPv4と比較して、ノードのIPv6アドレスは、インターネット上でより多くの目に見えることが期待されています。これは、それが簡単にエンドポイントを区別することなど、いくつかの追加のプライバシーの問題を作成します。詳細については、[RFC7721]を参照してください。"
    },
    {
      "indent": 3,
      "text": "The design of IPv6 extension header architecture, while adding a lot of flexibility, also creates new security challenges. As noted below, issues relating to the Fragment extension header have been resolved, but it's clear that for any new extension header designed in the future, the security implications need to be examined thoroughly, and this needs to include how the new extension header works with existing extension headers. See [RFC7045] for more information.",
      "ja": "多くの柔軟性を追加しながらIPv6拡張ヘッダアーキテクチャの設計は、また新たな安全保障上の課題を作成します。以下に述べたように、フラグメント拡張ヘッダーに関連する問題が解決されましたが、それは将来的に設計された新しい拡張ヘッダーのために、セキュリティへの影響を徹底的に検討する必要があり、これは新しい拡張ヘッダがでどのように機能するかを含める必要があることは明らかです既存の拡張ヘッダー。詳細については、[RFC7045]を参照してください。"
    },
    {
      "indent": 3,
      "text": "This version of the IPv6 specification resolves a number of security issues that were found with the previous version [RFC2460] of the IPv6 specification. These include:",
      "ja": "IPv6の仕様のこのバージョンは、IPv6仕様の以前のバージョン[RFC2460]で見つかったセキュリティ問題の数を解決します。これらは、次のとおりです。"
    },
    {
      "indent": 6,
      "text": "o Revised the text to handle the case of fragments that are whole datagrams (i.e., both the Fragment Offset field and the M flag are zero). If received, they should be processed as a reassembled packet. Any other fragments that match should be processed independently. The Fragment creation process was modified to not create whole datagram fragments (Fragment Offset field and the M flag are zero). See [RFC6946] and [RFC8021] for more information.",
      "ja": "O全データグラム（すなわち、フラグメントオフセットフィールド及びMフラグの両方がゼロである）であるフラグメントの場合を処理するためのテキストを改訂。受け取った場合は、再構成されたパケットとして処理されるべきです。一致する任意の他のフラグメントは、独立して処理する必要があります。フラグメントの作成プロセスは、全体のデータグラムフラグメントを作成しないように改変した（フラグメントオフセットフィールド及びMフラグをゼロです）。詳細については、[RFC6946]と[RFC8021]を参照してください。"
    },
    {
      "indent": 6,
      "text": "o Removed the paragraph in Section 5 that required including a Fragment header to outgoing packets if an ICMP Packet Too Big message reporting a Next-Hop MTU is less than 1280. See [RFC6946] for more information.",
      "ja": "O削除ICMPパケット過大メッセージをネクストホップMTUを報告した場合、発信パケットにフラグメントヘッダを含む必要項5段落は、より多くの情報のための1280を参照[RFC6946]未満です。"
    },
    {
      "indent": 6,
      "text": "o Changed the text to require that IPv6 nodes must not create overlapping fragments. Also, when reassembling an IPv6 datagram, if one or more of its constituent fragments is determined to be an overlapping fragment, the entire datagram (and any constituent fragments) must be silently discarded. Includes clarification that no ICMP error message should be sent if overlapping fragments are received. See [RFC5722] for more information.",
      "ja": "O IPv6ノードが重複断片を作成してはならないことを要求するテキストを変更しました。 IPv6データグラムを再組み立ての際にその構成要素の断片の1つ以上が重複断片であると判定された場合も、データグラム全体（および任意成分の断片）が静かに捨てなければなりません。重複フラグメントを受信した場合は何のICMPエラーメッセージが送信されないことを明確化が含まれています。詳細については、[RFC5722]を参照してください。"
    },
    {
      "indent": 6,
      "text": "o Revised the text to require that all headers through the first upper-layer header are in the first fragment. See [RFC7112] for more information.",
      "ja": "O第一上位層ヘッダを介してすべてのヘッダが最初のフラグメントであることを必要とするテキストを改訂。詳細については、[RFC7112]を参照してください。"
    },
    {
      "indent": 6,
      "text": "o Incorporated the updates from [RFC5095] and [RFC5871] to remove the description of the Routing Header type 0 (RH0), that the allocations guidelines for Routing headers are specified in RFC 5871, and removed RH0 from the list of required extension headers.",
      "ja": "O [RFC5095]及び[RFC5871]から株式会社更新は、ルーティングヘッダの割り当てのガイドラインは、RFC 5871で指定され、必要な拡張ヘッダのリストからRH0を除去していることを、ルーティングヘッダタイプ0（RH0）の記述を削除します。"
    },
    {
      "indent": 3,
      "text": "Security issues relating to other parts of IPv6 including addressing, ICMPv6, Path MTU Discovery, etc., are discussed in the appropriate specifications.",
      "ja": "など、アドレッシングのICMPv6、パスMTUディスカバリを含めたIPv6の他の部分に関連するセキュリティ問題は、適切な仕様で議論されています。"
    },
    {
      "indent": 0,
      "text": "11. References",
      "section_title": true,
      "ja": "11.参考文献"
    },
    {
      "indent": 0,
      "text": "11.1. Normative References",
      "section_title": true,
      "ja": "11.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC791] Postel, J., \"Internet Protocol\", STD 5, RFC 791, DOI 10.17487/RFC0791, September 1981, <http://www.rfc-editor.org/info/rfc791>.",
      "ja": "[RFC791]ポステル、J.、 \"インターネットプロトコル\"、STD 5、RFC 791、DOI 10.17487 / RFC0791、1981年9月、<http://www.rfc-editor.org/info/rfc791>。"
    },
    {
      "indent": 3,
      "text": "[RFC2474] Nichols, K., Blake, S., Baker, F., and D. Black, \"Definition of the Differentiated Services Field (DS Field) in the IPv4 and IPv6 Headers\", RFC 2474, DOI 10.17487/RFC2474, December 1998, <http://www.rfc-editor.org/info/rfc2474>.",
      "ja": "[RFC2474]ニコルズ、K.、ブレイク、S.、ベイカー、F.、およびD.ブラック、 \"IPv4とIPv6ヘッダーの差別化されたサービス分野（DSフィールド）の定義\"、RFC 2474、DOI 10.17487 / RFC2474、 1998年12月、<http://www.rfc-editor.org/info/rfc2474>。"
    },
    {
      "indent": 3,
      "text": "[RFC3168] Ramakrishnan, K., Floyd, S., and D. Black, \"The Addition of Explicit Congestion Notification (ECN) to IP\", RFC 3168, DOI 10.17487/RFC3168, September 2001, <http://www.rfc-editor.org/info/rfc3168>.",
      "ja": "\"IPへの明示的輻輳通知の追加（ECN）\" [RFC3168]ラマクリシュナン、K.、フロイド、S.、およびD.ブラック、RFC 3168、DOI 10.17487 / RFC3168、2001年9月、<のhttp：// WWW。 rfc-editor.org/info/rfc3168>。"
    },
    {
      "indent": 3,
      "text": "[RFC4291] Hinden, R. and S. Deering, \"IP Version 6 Addressing Architecture\", RFC 4291, DOI 10.17487/RFC4291, February 2006, <http://www.rfc-editor.org/info/rfc4291>.",
      "ja": "[RFC4291] HindenとR.とS.デアリング、 \"IPバージョン6アドレッシング体系\"、RFC 4291、DOI 10.17487 / RFC4291、2006年2月、<http://www.rfc-editor.org/info/rfc4291>。"
    },
    {
      "indent": 3,
      "text": "[RFC4443] Conta, A., Deering, S., and M. Gupta, Ed., \"Internet Control Message Protocol (ICMPv6) for the Internet Protocol Version 6 (IPv6) Specification\", STD 89, RFC 4443, DOI 10.17487/RFC4443, March 2006, <http://www.rfc-editor.org/info/rfc4443>.",
      "ja": "[RFC4443]コンタ、A.、デアリング、S.、およびM.グプタ編、 \"インターネット制御メッセージプロトコル（ICMPv6の）インターネットプロトコルバージョン6（IPv6）の仕様は、\"、STD 89、RFC 4443、DOI 10.17487 / RFC4443、2006年3月、<http://www.rfc-editor.org/info/rfc4443>。"
    },
    {
      "indent": 3,
      "text": "[RFC6437] Amante, S., Carpenter, B., Jiang, S., and J. Rajahalme, \"IPv6 Flow Label Specification\", RFC 6437, DOI 10.17487/RFC6437, November 2011, <http://www.rfc-editor.org/info/rfc6437>.",
      "ja": "[RFC6437] Amante、S.、大工、B.、江、S.、およびJ. Rajahalme、 \"IPv6のフローラベル仕様\"、RFC 6437、DOI 10.17487 / RFC6437、2011年11月、<のhttp：//www.rfc- editor.org/info/rfc6437>。"
    },
    {
      "indent": 0,
      "text": "11.2. Informative References",
      "section_title": true,
      "ja": "11.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[Err2541] RFC Errata, Erratum ID 2541, RFC 2460.",
      "ja": "【Err2541] RFCエラッタ、エラータID 2541、RFC 2460。"
    },
    {
      "indent": 3,
      "text": "[Err4279] RFC Errata, Erratum ID 4279, RFC 2460.",
      "ja": "【Err4279] RFCエラッタ、エラータID 4279、RFC 2460。"
    },
    {
      "indent": 3,
      "text": "[Err4657] RFC Errata, Erratum ID 4657, RFC 2460.",
      "ja": "【Err4657] RFCエラッタ、エラータID 4657、RFC 2460。"
    },
    {
      "indent": 3,
      "text": "[Err4662] RFC Errata, Erratum ID 4662, RFC 2460.",
      "ja": "【Err4662] RFCエラッタ、エラータID 4662、RFC 2460。"
    },
    {
      "indent": 3,
      "text": "[IANA-6P] IANA, \"Internet Protocol Version 6 (IPv6) Parameters\", <https://www.iana.org/assignments/ipv6-parameters>.",
      "ja": "[IANA-6P] IANA、 \"インターネットプロトコルバージョン6（IPv6）のパラメータ\"、<https://www.iana.org/assignments/ipv6-parameters>。"
    },
    {
      "indent": 3,
      "text": "[IANA-EH] IANA, \"IPv6 Extension Header Types\", <https://www.iana.org/assignments/ipv6-parameters>.",
      "ja": "[IANA-EH] IANA、 \"IPv6拡張ヘッダータイプ\"、<https://www.iana.org/assignments/ipv6-parameters>。"
    },
    {
      "indent": 3,
      "text": "[IANA-NI] IANA, \"ONC RPC Network Identifiers (netids)\", <https://www.iana.org/assignments/rpc-netids>.",
      "ja": "[IANA-NI] IANA、 \"ONC RPCネットワーク識別子（netids）\"、<https://www.iana.org/assignments/rpc-netids>。"
    },
    {
      "indent": 3,
      "text": "[IANA-NL] IANA, \"Network Layer Protocol Identifiers (NLPIDs) of Interest\", <https://www.iana.org/assignments/nlpids>.",
      "ja": "[IANA-NL] IANA、 \"利息のネットワーク層プロトコル識別子（NLPIDs）\"、<https://www.iana.org/assignments/nlpids>。"
    },
    {
      "indent": 3,
      "text": "[IANA-PN] IANA, \"Protocol Numbers\", <https://www.iana.org/assignments/protocol-numbers>.",
      "ja": "[IANA-PN] IANA、 \"プロトコル番号\"、<https://www.iana.org/assignments/protocol-numbers>。"
    },
    {
      "indent": 3,
      "text": "[IANA-PR] IANA, \"Protocol Registries\", <https://www.iana.org/ protocols>.",
      "ja": "[IANA-PR] IANA、 \"議定書レジストリ\"、<https://www.iana.org/プロトコル>。"
    },
    {
      "indent": 3,
      "text": "[IANA-RH] IANA, \"Routing Types\", <https://www.iana.org/assignments/ ipv6-parameters>.",
      "ja": "[IANA-RH] IANA、 \"ルーティングタイプ\"、<https://www.iana.org/assignments/ IPv6のパラメータ>。"
    },
    {
      "indent": 3,
      "text": "[RFC1661] Simpson, W., Ed., \"The Point-to-Point Protocol (PPP)\", STD 51, RFC 1661, DOI 10.17487/RFC1661, July 1994, <http://www.rfc-editor.org/info/rfc1661>.",
      "ja": "[RFC1661]シンプソン、W.、編、 \"ポイントツーポイントプロトコル（PPP）\"、STD 51、RFC 1661、DOI 10.17487 / RFC1661、1994年7月、<http://www.rfc-editor.org /情報/ RFC1661>。"
    },
    {
      "indent": 3,
      "text": "[RFC2460] Deering, S. and R. Hinden, \"Internet Protocol, Version 6 (IPv6) Specification\", RFC 2460, DOI 10.17487/RFC2460, December 1998, <http://www.rfc-editor.org/info/rfc2460>.",
      "ja": "[RFC2460]デアリング、S.とR. Hindenと \"インターネットプロトコル、バージョン6（IPv6）の仕様\"、RFC 2460、DOI 10.17487 / RFC2460、1998年12月、<http://www.rfc-editor.org/info/ RFC2460>。"
    },
    {
      "indent": 3,
      "text": "[RFC4301] Kent, S. and K. Seo, \"Security Architecture for the Internet Protocol\", RFC 4301, DOI 10.17487/RFC4301, December 2005, <http://www.rfc-editor.org/info/rfc4301>.",
      "ja": "[RFC4301]ケント、S.とK. Seo、 \"インターネットプロトコルのためのセキュリティアーキテクチャ\"、RFC 4301、DOI 10.17487 / RFC4301、2005年12月、<http://www.rfc-editor.org/info/rfc4301>。"
    },
    {
      "indent": 3,
      "text": "[RFC4302] Kent, S., \"IP Authentication Header\", RFC 4302, DOI 10.17487/RFC4302, December 2005, <http://www.rfc-editor.org/info/rfc4302>.",
      "ja": "[RFC4302]ケント、S.、 \"IP認証ヘッダー\"、RFC 4302、DOI 10.17487 / RFC4302、2005年12月、<http://www.rfc-editor.org/info/rfc4302>。"
    },
    {
      "indent": 3,
      "text": "[RFC4303] Kent, S., \"IP Encapsulating Security Payload (ESP)\", RFC 4303, DOI 10.17487/RFC4303, December 2005, <http://www.rfc-editor.org/info/rfc4303>.",
      "ja": "[RFC4303]ケント、S.、 \"IPカプセル化セキュリティペイロード（ESP）\"、RFC 4303、DOI 10.17487 / RFC4303、2005年12月、<http://www.rfc-editor.org/info/rfc4303>。"
    },
    {
      "indent": 3,
      "text": "[RFC5095] Abley, J., Savola, P., and G. Neville-Neil, \"Deprecation of Type 0 Routing Headers in IPv6\", RFC 5095, DOI 10.17487/RFC5095, December 2007, <http://www.rfc-editor.org/info/rfc5095>.",
      "ja": "[RFC5095] Abley、J.、Savola、P.、およびG.ネビル・ニール、 \"タイプ0 IPv6におけるルーティングヘッダの廃止\"、RFC 5095、DOI 10.17487 / RFC5095、2007年12月、<のhttp：//www.rfc -editor.org/info/rfc5095>。"
    },
    {
      "indent": 3,
      "text": "[RFC5722] Krishnan, S., \"Handling of Overlapping IPv6 Fragments\", RFC 5722, DOI 10.17487/RFC5722, December 2009, <http://www.rfc-editor.org/info/rfc5722>.",
      "ja": "[RFC5722]クリシュナン、S.、 \"重複のIPv6フラグメントの取り扱い\"、RFC 5722、DOI 10.17487 / RFC5722、2009年12月、<http://www.rfc-editor.org/info/rfc5722>。"
    },
    {
      "indent": 3,
      "text": "[RFC5871] Arkko, J. and S. Bradner, \"IANA Allocation Guidelines for the IPv6 Routing Header\", RFC 5871, DOI 10.17487/RFC5871, May 2010, <http://www.rfc-editor.org/info/rfc5871>.",
      "ja": "[RFC5871] Arkko、J.、およびS.ブラドナー、 \"IPv6ルーティングヘッダのIANA配分ガイドライン\"、RFC 5871、DOI 10.17487 / RFC5871、2010年5月、<http://www.rfc-editor.org/info/rfc5871 >。"
    },
    {
      "indent": 3,
      "text": "[RFC6564] Krishnan, S., Woodyatt, J., Kline, E., Hoagland, J., and M. Bhatia, \"A Uniform Format for IPv6 Extension Headers\", RFC 6564, DOI 10.17487/RFC6564, April 2012, <http://www.rfc-editor.org/info/rfc6564>.",
      "ja": "[RFC6564]クリシュナン、S.、Woodyatt、J.、クライン、E.、ホーグランド、J.、およびM. Bhatiaは、RFC 6564 \"IPv6拡張ヘッダのための統一フォーマット\"、DOI 10.17487 / RFC6564、2012年4月、< http://www.rfc-editor.org/info/rfc6564>。"
    },
    {
      "indent": 3,
      "text": "[RFC6936] Fairhurst, G. and M. Westerlund, \"Applicability Statement for the Use of IPv6 UDP Datagrams with Zero Checksums\", RFC 6936, DOI 10.17487/RFC6936, April 2013, <http://www.rfc-editor.org/info/rfc6936>.",
      "ja": "[RFC6936] Fairhurst、G.およびM.ウェスター、 \"ゼロチェックサムとIPv6のUDPデータグラムを使用するための適用性に関する声明\"、RFC 6936、DOI 10.17487 / RFC6936、2013年4月、<http://www.rfc-editor.org /情報/ rfc6936>。"
    },
    {
      "indent": 3,
      "text": "[RFC6946] Gont, F., \"Processing of IPv6 \"Atomic\" Fragments\", RFC 6946, DOI 10.17487/RFC6946, May 2013, <http://www.rfc-editor.org/info/rfc6946>.",
      "ja": "[RFC6946] Gont、F.、 \"処理のIPv6の \"アトミック\" フラグメント\"、RFC 6946、DOI 10.17487 / RFC6946、2013年5月、<http://www.rfc-editor.org/info/rfc6946>。"
    },
    {
      "indent": 3,
      "text": "[RFC7045] Carpenter, B. and S. Jiang, \"Transmission and Processing of IPv6 Extension Headers\", RFC 7045, DOI 10.17487/RFC7045, December 2013, <http://www.rfc-editor.org/info/rfc7045>.",
      "ja": "[RFC7045]カーペンター、B.及びS.江、 \"送信とIPv6拡張ヘッダの処理\"、RFC 7045、DOI 10.17487 / RFC7045、2013年12月、<http://www.rfc-editor.org/info/rfc7045> 。"
    },
    {
      "indent": 3,
      "text": "[RFC7112] Gont, F., Manral, V., and R. Bonica, \"Implications of Oversized IPv6 Header Chains\", RFC 7112, DOI 10.17487/RFC7112, January 2014, <http://www.rfc-editor.org/info/rfc7112>.",
      "ja": "[RFC7112] Gont、F.、Manral、V.、およびR. Bonica、 \"特大のIPv6ヘッダーチェーンの含意\"、RFC 7112、DOI 10.17487 / RFC7112、2014年1月、<http://www.rfc-editor.org /情報/ rfc7112>。"
    },
    {
      "indent": 3,
      "text": "[RFC7707] Gont, F. and T. Chown, \"Network Reconnaissance in IPv6 Networks\", RFC 7707, DOI 10.17487/RFC7707, March 2016, <http://www.rfc-editor.org/info/rfc7707>.",
      "ja": "[RFC7707] Gont、F.とT.のchown、 \"IPv6のネットワークにおけるネットワーク偵察\"、RFC 7707、DOI 10.17487 / RFC7707、2016年3月、<http://www.rfc-editor.org/info/rfc7707>。"
    },
    {
      "indent": 3,
      "text": "[RFC7721] Cooper, A., Gont, F., and D. Thaler, \"Security and Privacy Considerations for IPv6 Address Generation Mechanisms\", RFC 7721, DOI 10.17487/RFC7721, March 2016, <http://www.rfc-editor.org/info/rfc7721>.",
      "ja": "[RFC7721]クーパーは、A.、Gont、F.、およびD.ターラーは、 \"IPv6のセキュリティとプライバシーの考慮事項が生成メカニズムは、アドレス\" RFC 7721、DOI 10.17487 / RFC7721、2016年3月、<のhttp：//www.rfc- editor.org/info/rfc7721>。"
    },
    {
      "indent": 3,
      "text": "[RFC7739] Gont, F., \"Security Implications of Predictable Fragment Identification Values\", RFC 7739, DOI 10.17487/RFC7739, February 2016, <http://www.rfc-editor.org/info/rfc7739>.",
      "ja": "[RFC7739] Gont、F.、 \"予測可能なフラグメント識別値によるセキュリティへの影響\"、RFC 7739、DOI 10.17487 / RFC7739、2016年2月、<http://www.rfc-editor.org/info/rfc7739>。"
    },
    {
      "indent": 3,
      "text": "[RFC8021] Gont, F., Liu, W., and T. Anderson, \"Generation of IPv6 Atomic Fragments Considered Harmful\", RFC 8021, DOI 10.17487/RFC8021, January 2017, <http://www.rfc-editor.org/info/rfc8021>.",
      "ja": "[RFC8021] Gont、F.、劉、W.、およびT.アンダーソン、 \"有害と考えられたIPv6原子力断片の生成\"、RFC 8021、DOI 10.17487 / RFC8021、2017年1月、<のhttp：//www.rfc-editor。組織/情報/ rfc8021>。"
    },
    {
      "indent": 3,
      "text": "[RFC8201] McCann, J., Deering, S., Mogul, J., and R. Hinden, \"Path MTU Discovery for IP version 6\", STD 87, RFC 8201, DOI 10.17487/RFC8201, July 2017, <http://www.rfc-editor.org/info/rfc8201>.",
      "ja": "[RFC8201]マッキャン、J.、デアリング、S.、モーグル、J.、およびR. Hindenと \"IPバージョン6のパスMTUディスカバリ\"、STD 87、RFC 8201、DOI 10.17487 / RFC8201、2017年7月、<HTTP： //www.rfc-editor.org/info/rfc8201>。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Formatting Guidelines for Options",
      "ja": "付録A.オプションのためのフォーマットのガイドライン"
    },
    {
      "indent": 3,
      "text": "This appendix gives some advice on how to lay out the fields when designing new options to be used in the Hop-by-Hop Options header or the Destination Options header, as described in Section 4.2. These guidelines are based on the following assumptions:",
      "ja": "この付録では、4.2節で説明したように、ホップバイホップオプションヘッダーまたは宛先オプションヘッダーで使用される新しいオプションを設計する際にフィールドをレイアウトする方法についていくつかのアドバイスを提供します。これらのガイドラインは、以下の仮定に基づいています。"
    },
    {
      "indent": 6,
      "text": "o One desirable feature is that any multi-octet fields within the Option Data area of an option be aligned on their natural boundaries, i.e., fields of width n octets should be placed at an integer multiple of n octets from the start of the Hop-by-Hop or Destination Options header, for n = 1, 2, 4, or 8.",
      "ja": "O 1つの望ましい機能は、オプションのオプションデータ領域内の任意のマルチオクテットフィールドが自然な境界に整列させることで、幅nオクテットのすなわち、フィールドはHop-の開始からnオクテットの整数倍に配置する必要がありますバイホップもしくは宛先オプションヘッダ用のn = 1、2、4、または8。"
    },
    {
      "indent": 6,
      "text": "o Another desirable feature is that the Hop-by-Hop or Destination Options header take up as little space as possible, subject to the requirement that the header be an integer multiple of 8 octets long.",
      "ja": "O別の望ましい特徴は、ホップバイホップもしくは宛先オプションヘッダは、ヘッダが長い8つのオクテットの整数倍であるという要件の対象とできるだけ小さなスペースを取ることです。"
    },
    {
      "indent": 6,
      "text": "o It may be assumed that, when either of the option-bearing headers are present, they carry a very small number of options, usually only one.",
      "ja": "Oオプション保有ヘッダのいずれかが存在する場合、それらはオプションの非常に少数の、通常は一つだけを運ぶ、と仮定することができます。"
    },
    {
      "indent": 3,
      "text": "These assumptions suggest the following approach to laying out the fields of an option: order the fields from smallest to largest, with no interior padding, then derive the alignment requirement for the entire option based on the alignment requirement of the largest field (up to a maximum alignment of 8 octets). This approach is illustrated in the following examples:",
      "ja": "までの最大のフィールド（のアライメント要件に基づいて、全オプションの整列要件を導き出す、その後、無内部パディングと、最小から最大までの順序フィールド：これらの仮定は、オプションのフィールドをレイアウトに次のアプローチを提案します8つのオクテットの最大アラインメント）。このアプローチは、以下の実施例に示されています。"
    },
    {
      "indent": 3,
      "text": "Example 1",
      "ja": "例1"
    },
    {
      "indent": 3,
      "text": "If an option X required two data fields, one of length 8 octets and one of length 4 octets, it would be laid out as follows:",
      "ja": "オプションXは、2つのデータフィールド、長さの1つの8つのオクテットと長さ4オクテットのいずれかを必要に応じて次のようにレイアウトされます："
    },
    {
      "indent": 3,
      "text": "                                +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                                | Option Type=X |Opt Data Len=12|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                         4-octet field                         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n+                         8-octet field                         +\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Its alignment requirement is 8n+2, to ensure that the 8-octet field starts at a multiple-of-8 offset from the start of the enclosing header. A complete Hop-by-Hop or Destination Options header containing this one option would look as follows:",
      "ja": "そのアライメント要件は8オクテットフィールドは、複数の-8封入ヘッダの先頭からのオフセットで開始することを保証するために、2 + 8Nです。次のようになり、この一つの選択肢を含む完全ホップバイホップもしくは宛先オプションヘッダー："
    },
    {
      "indent": 3,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Next Header  | Hdr Ext Len=1 | Option Type=X |Opt Data Len=12|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                         4-octet field                         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n+                         8-octet field                         +\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Example 2",
      "ja": "例2"
    },
    {
      "indent": 3,
      "text": "If an option Y required three data fields, one of length 4 octets, one of length 2 octets, and one of length 1 octet, it would be laid out as follows:",
      "ja": "オプションYは、3つのデータフィールド、長さが4オクテット長の2つのオクテット、及び長さ1オクテットのいずれかのいずれかを必要に応じて次のようにレイアウトされることになります。"
    },
    {
      "indent": 3,
      "text": "                                                +-+-+-+-+-+-+-+-+\n                                                | Option Type=Y |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|Opt Data Len=7 | 1-octet field |         2-octet field         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                         4-octet field                         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Its alignment requirement is 4n+3, to ensure that the 4-octet field starts at a multiple-of-4 offset from the start of the enclosing header. A complete Hop-by-Hop or Destination Options header containing this one option would look as follows:",
      "ja": "そのアライメント要件は4オクテットフィールドは、複数の-4封入ヘッダの先頭からのオフセットで開始することを保証するために、3 + 4Nです。次のようになり、この一つの選択肢を含む完全ホップバイホップもしくは宛先オプションヘッダー："
    },
    {
      "indent": 3,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Next Header  | Hdr Ext Len=1 | Pad1 Option=0 | Option Type=Y |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|Opt Data Len=7 | 1-octet field |         2-octet field         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                         4-octet field                         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| PadN Option=1 |Opt Data Len=2 |       0       |       0       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Example 3",
      "ja": "例3"
    },
    {
      "indent": 3,
      "text": "A Hop-by-Hop or Destination Options header containing both options X and Y from Examples 1 and 2 would have one of the two following formats, depending on which option appeared first:",
      "ja": "実施例1および2の両方からオプションXおよびYを含むホップバイホップもしくは宛先オプションヘッダは、オプションに応じて、2次のいずれかの形式を有するであろう最初の登場。"
    },
    {
      "indent": 3,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Next Header  | Hdr Ext Len=3 | Option Type=X |Opt Data Len=12|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                         4-octet field                         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n+                         8-octet field                         +\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| PadN Option=1 |Opt Data Len=1 |       0       | Option Type=Y |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|Opt Data Len=7 | 1-octet field |         2-octet field         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                         4-octet field                         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| PadN Option=1 |Opt Data Len=2 |       0       |       0       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Next Header  | Hdr Ext Len=3 | Pad1 Option=0 | Option Type=Y |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|Opt Data Len=7 | 1-octet field |         2-octet field         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                         4-octet field                         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| PadN Option=1 |Opt Data Len=4 |       0       |       0       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|       0       |       0       | Option Type=X |Opt Data Len=12|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                         4-octet field                         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n+                         8-octet field                         +\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 1,
      "text": "Appendix B. Changes Since",
      "ja": "付録B.変化するため"
    },
    {
      "indent": 3,
      "text": "This memo has the following changes from RFC 2460.",
      "ja": "このメモはRFC 2460から以下の変更があります。"
    },
    {
      "indent": 3,
      "text": "o Removed IP Next Generation from the Abstract.",
      "ja": "O抽象からIP次世代を削除しました。"
    },
    {
      "indent": 3,
      "text": "o Added text in Section 1 that the data transmission order is the same as IPv4 as defined in RFC 791.",
      "ja": "Oデータの送信順序は、RFC 791で定義されたIPv4と同じであることを第1のテキストを追加しました。"
    },
    {
      "indent": 3,
      "text": "o Clarified the text in Section 3 about decrementing the Hop Limit.",
      "ja": "Oホップ制限をデクリメントについてのセクション3のテキストを明確化。"
    },
    {
      "indent": 3,
      "text": "o Clarified that extension headers (except for the Hop-by-Hop Options header) are not processed, inserted, or deleted by any node along a packet's delivery path.",
      "ja": "O（ホップバイホップオプションヘッダを除く）拡張ヘッダは、加工挿入、又はパケットの配信経路に沿った任意のノードによって削除されないことを明らかにしました。"
    },
    {
      "indent": 3,
      "text": "o Changed requirement for the Hop-by-Hop Options header to a \"may\", and added a note to indicate what is expected regarding the Hop-by-Hop Options header.",
      "ja": "O「よい」にホップバイホップオプションヘッダの要件を変更し、ホップバイホップオプションヘッダについて予想されるものを示すためにメモを追加しました。"
    },
    {
      "indent": 3,
      "text": "o Added a paragraph to Section 4 to clarify how extension headers are numbered and which are upper-layer headers.",
      "ja": "O拡張ヘッダは、番号と上位層ヘッダである方法を明確にするために第4の段落を追加しました。"
    },
    {
      "indent": 3,
      "text": "o Added a reference to the end of Section 4 to the \"IPv6 Extension Header Types\" IANA registry.",
      "ja": "oは、「IPv6拡張ヘッダータイプ」IANAレジストリに4章の終わりへの参照を追加しました。"
    },
    {
      "indent": 3,
      "text": "o Incorporated the updates from RFCs 5095 and 5871 to remove the description of RH0, that the allocations guidelines for routing headers are specified in RFC 5871, and removed RH0 from the list of required extension headers.",
      "ja": "OのRFC 5095と5871からIncorporatedの更新は、ルーティングヘッダの割り当てのガイドラインは、RFC 5871で指定され、必要な拡張ヘッダのリストからRH0に除去されること、RH0の記述を削除します。"
    },
    {
      "indent": 3,
      "text": "o Revised Section 4.5 on IPv6 fragmentation based on updates from RFCs 5722, 6946, 7112, and 8021. This includes:",
      "ja": "OのRFC 5722、6946、7112からの更新に基づいたIPv6フラグメンテーションのセクション4.5を改訂し、8021これが含まれています："
    },
    {
      "indent": 6,
      "text": "- Revised the text to handle the case of fragments that are whole datagrams (i.e., both the Fragment Offset field and the M flag are zero). If received, they should be processed as a reassembled packet. Any other fragments that match should be processed independently. The revised Fragment creation process was modified to not create whole datagram fragments (Fragment Offset field and the M flag are zero).",
      "ja": " - 全体のデータグラムであるフラグメントの場合を処理するためのテキストを改訂（すなわち、フラグメントオフセットフィールド及びMフラグの両方がゼロです）。受け取った場合は、再構成されたパケットとして処理されるべきです。一致する任意の他のフラグメントは、独立して処理する必要があります。改訂されたフラグメントの作成プロセスは、全体のデータグラムフラグメントを作成しないように改変した（フラグメントオフセットフィールド及びMフラグをゼロです）。"
    },
    {
      "indent": 6,
      "text": "- Changed the text to require that IPv6 nodes must not create overlapping fragments. Also, when reassembling an IPv6 datagram, if one or more its constituent fragments is determined to be an overlapping fragment, the entire datagram (and any constituent fragments) must be silently discarded. Includes a clarification that no ICMP error message should be sent if overlapping fragments are received.",
      "ja": " -  IPv6ノードが重複断片を作成してはならないことを要求するテキストを変更しました。 IPv6データグラムを再組み立てするとき一つ以上のその構成断片は重複断片であると判定された場合も、データグラム全体（および任意成分の断片）が静かに捨てなければなりません。重複フラグメントを受信した場合は何のICMPエラーメッセージが送信されないことを明確化が含まれています。"
    },
    {
      "indent": 6,
      "text": "- Revised the text to require that all headers through the first Upper-Layer header are in the first fragment. This changed the text describing how packets are fragmented and reassembled and added a new error case.",
      "ja": " - 第一上位層ヘッダを介してすべてのヘッダが最初のフラグメントであることを必要とするテキストを改訂。これは、パケットが断片化と再組み立てや新しいエラーケースを追加する方法を説明するテキストを変更しました。"
    },
    {
      "indent": 6,
      "text": "- Added text to the Fragment header process on handling exact duplicate fragments.",
      "ja": " - 断片を複製し、正確なハンドリング上のフラグメントヘッダープロセスに追加されたテキスト。"
    },
    {
      "indent": 6,
      "text": "- Updated the Fragmentation header text to correct the inclusion of an Authentication Header (AH) and noted No Next Header case.",
      "ja": " - 認証ヘッダ（AH）の包含を補正するフラグメンテーションヘッダテキストを更新しません次ヘッダーケースを指摘していません。"
    },
    {
      "indent": 6,
      "text": "- Changed terminology in the Fragment header section from \"Unfragmentable Headers\" to \"Per-Fragment headers\".",
      "ja": " - 「フラグメント化不能ヘッダ」を「パーフラグメントヘッダ」からのフラグメントヘッダ部に変更用語。"
    },
    {
      "indent": 6,
      "text": "- Removed the paragraph in Section 5 that required including a Fragment header to outgoing packets if an ICMP Packet Too Big message reports a Next-Hop MTU less than 1280.",
      "ja": " -  ICMPパケット過大メッセージを少なく1280よりネクストホップMTUを報告する場合、発信パケットにフラグメントヘッダを含む必要項5段落を削除しました。"
    },
    {
      "indent": 6,
      "text": "- Changed the text to clarify MTU restriction and 8-byte restrictions, and noted the restriction on headers in the first fragment.",
      "ja": " -  MTUの制限と8バイトの制限を明確にするために、テキストを変更し、最初のフラグメントにヘッダーの制限を指摘しました。"
    },
    {
      "indent": 3,
      "text": "o In Section 4.5, added clarification noting that some fields in the IPv6 header may also vary across the fragments being reassembled, and that other specifications may provide additional instructions for how they should be reassembled. See, for example, Section 5.3 of [RFC3168].",
      "ja": "セクション4.5中のO、IPv6ヘッダーの一部のフィールドはまた、再組み立てされた断片にわたって変化、およびその他の仕様は、それらが再アセンブルする方法のための追加の指示を提供し得ることもできることに留意明確化を追加しました。例えば、[RFC3168]の5.3節を参照してください。"
    },
    {
      "indent": 3,
      "text": "o Incorporated the update from RFC 6564 to add a new Section 4.8 that describes recommendations for defining new extension headers and options.",
      "ja": "O新しい拡張ヘッダとオプションを定義するための推奨事項について説明し、新しいセクション4.8を追加するためにRFC 6564からの更新を取り入れました。"
    },
    {
      "indent": 3,
      "text": "o Added text to Section 5 to define \"IPv6 minimum link MTU\".",
      "ja": "O「のIPv6最小リンクMTU」を定義するために第5節にテキストを追加しました。"
    },
    {
      "indent": 3,
      "text": "o Simplified the text in Section 6 about Flow Labels and removed what was Appendix A (\"Semantics and Usage of the Flow Label Field\"); instead, pointed to the current specifications of the IPv6 Flow Label field in [RFC6437] and the Traffic Class field in [RFC2474] and [RFC3168].",
      "ja": "Oフローラベルについては6章でテキストを簡素化し、付録A（「セマンティクスとフローラベルフィールドの使用法」）であったものを取り除きます。代わりに、[RFC6437]と[RFC2474]でのトラフィッククラスフィールドと[RFC3168]でのIPv6フローラベルフィールドの現在の仕様を指摘しました。"
    },
    {
      "indent": 3,
      "text": "o Incorporated the update made by RFC 6935 (\"IPv6 and UDP Checksums for Tunneled Packets\") in Section 8. Added an exception to the default behavior for the handling of UDP packets with zero checksums for tunnels.",
      "ja": "O株式会社は、第8節でRFC 6935（「トンネリングされたパケットのIPv6およびUDPチェックサム」）によって行われた更新は、トンネルのゼロのチェックサムとUDPパケットの処理のためのデフォルトの動作に例外を追加しました。"
    },
    {
      "indent": 3,
      "text": "o Added instruction to Section 9, \"IANA Considerations\", to change references to RFC 2460 to this document.",
      "ja": "Oこの文書にRFC 2460への参照を変更するには、第9章、「IANAの考慮事項」に命令を追加しました。"
    },
    {
      "indent": 3,
      "text": "o Revised and expanded Section 10, \"Security Considerations\".",
      "ja": "Oセクション10、「セキュリティに関する考慮事項」を改訂し、拡大しました。"
    },
    {
      "indent": 3,
      "text": "o Added a paragraph to the Acknowledgments section acknowledging the authors of the updating documents.",
      "ja": "O更新文書の作成者を認め謝辞セクションに段落を追加しました。"
    },
    {
      "indent": 3,
      "text": "o Updated references to current versions and assigned references to normative and informative.",
      "ja": "O現在のバージョンへの参照を更新し、規範的で有益への参照を割り当てられました。"
    },
    {
      "indent": 3,
      "text": "o Made changes to resolve the errata on RFC 2460. These are:",
      "ja": "OこれらはRFC 2460に正誤表を解決するために変更を加えました："
    },
    {
      "indent": 9,
      "text": "Erratum ID 2541 [Err2541]: This erratum notes that RFC 2460\ndidn't update RFC 2205 when the length of the flow label was\nchanged from 24 to 20 bits from RFC 1883.  This issue was\nresolved in RFC 6437 where the flow label is defined.  This\nspecification now references RFC 6437.  No change is required.",
      "raw": true
    },
    {
      "indent": 9,
      "text": "Erratum ID 4279 [Err4279]: This erratum noted that the specification doesn't handle the case of a forwarding node receiving a packet with a zero Hop Limit. This is fixed in Section 3 of this specification.",
      "ja": "エラッタのID 4279は[Err4279]：このエラッタは、仕様はゼロホップリミットを有するパケットを受信した中継ノードの場合を処理しないことに注意しました。これは、この仕様書のセクション3に固定されています。"
    },
    {
      "indent": 9,
      "text": "Erratum ID 4657 [Err4657]: This erratum proposed text that extension headers must never be inserted by any node other than the source of the packet. This was resolved in Section 4, \"IPv6 Extension Headers\".",
      "ja": "エラッタのID 4657 [Err4657]：拡張ヘッダは、パケットのソース以外の任意のノードによって挿入されてはならないこのエラッタ提案テキスト。これは、第4節、「IPv6拡張ヘッダー」で解決されました。"
    },
    {
      "indent": 9,
      "text": "Erratum ID 4662 [Err4662]: This erratum proposed text that extension headers, with one exception, are not examined, processed, modified, inserted, or deleted by any node along a packet's delivery path. This was resolved in Section 4, \"IPv6 Extension Headers\".",
      "ja": "エラッタのID 4662 [Err4662]：拡張ヘッダは、1つの例外を除いて、検査処理、修飾、挿入、またはパケットの配信経路に沿った任意のノードによって削除されないこのエラッタ提案テキスト。これは、第4節、「IPv6拡張ヘッダー」で解決されました。"
    },
    {
      "indent": 9,
      "text": "Erratum ID 2843: This erratum is marked \"Rejected\". No change was made.",
      "ja": "エラータのID 2843：このエラータは「拒否」とマークされています。変更は行われませんでした。"
    },
    {
      "indent": 0,
      "text": "Acknowledgments",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "The authors gratefully acknowledge the many helpful suggestions of the members of the IPng Working Group, the End-to-End Protocols research group, and the Internet community at large.",
      "ja": "作者は感謝して大でのIPngワーキンググループのメンバー、エンドツーエンドのプロトコル研究グループ、およびインターネットコミュニティの多くの役立つ提案を認めます。"
    },
    {
      "indent": 3,
      "text": "The authors would also like to acknowledge the authors of the updating RFCs that were incorporated in this document to move the IPv6 specification to Internet Standard. They are Joe Abley, Shane Amante, Jari Arkko, Manav Bhatia, Ronald P. Bonica, Scott Bradner, Brian Carpenter, P.F. Chimento, Marshall Eubanks, Fernando Gont, James Hoagland, Sheng Jiang, Erik Kline, Suresh Krishnan, Vishwas Manral, George Neville-Neil, Jarno Rajahalme, Pekka Savola, Magnus Westerlund, and James Woodyatt.",
      "ja": "著者はまた、インターネット標準へのIPv6の仕様を移動するには、この文書に組み込まれた更新RFCの作者を確認したいと思います。彼らはジョーAbley、シェーンAmante、ヤリArkko、Manav Bhatiaは、ロナルド・P. Bonica、スコット・ブラッドナー、ブライアン・カーペンター、P.F.ありますChimento、マーシャルユーバンクス、フェルナンドGont、ジェームズ・ホーグランド、シェン・ジャン、エリック・クライン、スレシュクリシュナン、Vishwas Manral、ジョージ・ネヴィル・ニール、ヤルノRajahalme、ペッカSavola、マグヌスウェスター、ジェームズ・Woodyatt。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Stephen E. Deering Retired Vancouver, British Columbia Canada",
      "ja": "スティーブンE.デアリング退職バンクーバー、ブリティッシュコロンビア州カナダ"
    },
    {
      "indent": 3,
      "text": "Robert M. Hinden Check Point Software 959 Skyway Road San Carlos, CA 94070 United States of America",
      "ja": "ロバートM. Hindenとチェック・ポイント・ソフトウェア959スカイウェイの道サンカルロス、CAアメリカの94070米国"
    },
    {
      "indent": 3,
      "text": "Email: bob.hinden@gmail.com",
      "ja": "メール：bob.hinden@gmail.com"
    }
  ]
}