{
  "title": {
    "text": "RFC 8272 - TinyIPFIX for Smart Meters in Constrained Networks",
    "ja": "RFC 8272 - 制約ネットワークにおけるスマートメーター用TinyIPFIX"
  },
  "number": 8272,
  "created_at": "2019-10-27 16:57:09.018434+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Independent Submission                                        C. Schmitt\nRequest for Comments: 8272                                    B. Stiller\nCategory: Informational                             University of Zurich\nISSN: 2070-1721                                              B. Trammell\n                                                              ETH Zurich\n                                                           November 2017",
      "raw": true
    },
    {
      "indent": 11,
      "text": "TinyIPFIX for Smart Meters in Constrained Networks",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document specifies the TinyIPFIX protocol that is used for transmitting smart-metering data in constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPAN, RFC 4944). TinyIPFIX is derived from IP Flow Information Export (RFC 7011) and adopted to the needs of constrained networks. This document specifies how the TinyIPFIX Data and Template Records are transmitted in constrained networks such as 6LoWPAN and how TinyIPFIX data can be converted into data that is not TinyIPFIX in a proxy device.",
      "ja": "この文書では、このような低電力無線パーソナルエリアネットワーク上のIPv6（6LoWPAN、RFC 4944）などの制約ネットワークにおけるスマートメータリングデータを送信するために使用されるTinyIPFIXプロトコルを指定します。 TinyIPFIXは、IPフロー情報エクスポート（RFC 7011）に由来し、制約ネットワークのニーズに採用されています。この文書は、TinyIPFIXデータがプロキシデバイスにTinyIPFIXないデータに変換することができるTinyIPFIXデータ、テンプレートレコードは、そのような6LoWPANや方法などに制約ネットワークに送信される方法を指定します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for informational purposes.",
      "ja": "このドキュメントはインターネット標準化過程仕様ではありません。それは、情報提供の目的のために公開されています。"
    },
    {
      "indent": 3,
      "text": "This is a contribution to the RFC Series, independently of any other RFC stream. The RFC Editor has chosen to publish this document at its discretion and makes no statement about its value for implementation or deployment. Documents approved for publication by the RFC Editor are not a candidate for any level of Internet Standard; see Section 2 of RFC 7841.",
      "ja": "これは、独立して、他のRFCストリームの、RFCシリーズへの貢献です。 RFC Editorはその裁量でこの文書を公開することを選択し、実装や展開のためにその値についての声明を出すていません。 RFC編集者によって公表のために承認されたドキュメントは、インターネット標準の任意のレベルの候補ではありません。 RFC 7841のセクション2を参照してください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc8272.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttps://www.rfc-editor.org/info/rfc8272で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2017 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2017 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（https://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3\n  1.1.  Document Structure  . . . . . . . . . . . . . . . . . . .   3\n2.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   4\n3.  Constraints . . . . . . . . . . . . . . . . . . . . . . . . .   6\n  3.1.  Hardware Constraints  . . . . . . . . . . . . . . . . . .   6\n  3.2.  Energy Constraints  . . . . . . . . . . . . . . . . . . .   7\n  3.3.  Packet Size Constraints . . . . . . . . . . . . . . . . .   7\n  3.4.  Transport Protocol Constraints  . . . . . . . . . . . . .   8\n4.  Application Scenarios for TinyIPFIX . . . . . . . . . . . . .   9\n5.  Architecture for TinyIPFIX  . . . . . . . . . . . . . . . . .  11\n6.  TinyIPFIX Message Format  . . . . . . . . . . . . . . . . . .  14\n  6.1.  TinyIPFIX Message Header  . . . . . . . . . . . . . . . .  15\n  6.2.  TinyIPFIX Set . . . . . . . . . . . . . . . . . . . . . .  18\n  6.3.  TinyIPFIX Template Record Format  . . . . . . . . . . . .  19\n  6.4.  Field Specifier Format  . . . . . . . . . . . . . . . . .  20\n  6.5.  TinyIPFIX Data Record Format  . . . . . . . . . . . . . .  21\n7.  TinyIPFIX Mediation . . . . . . . . . . . . . . . . . . . . .  21\n  7.1.  Expanding the Message Header  . . . . . . . . . . . . . .  24\n  7.2.  Translating the Set Headers . . . . . . . . . . . . . . .  25\n  7.3.  Expanding the Template Record Header  . . . . . . . . . .  25\n8.  Template Management . . . . . . . . . . . . . . . . . . . . .  25\n  8.1.  TCP/SCTP  . . . . . . . . . . . . . . . . . . . . . . . .  26\n  8.2.  UDP . . . . . . . . . . . . . . . . . . . . . . . . . . .  26\n9.  Security Considerations . . . . . . . . . . . . . . . . . . .  26\n10. IANA Considerations . . . . . . . . . . . . . . . . . . . . .  26\n11. References  . . . . . . . . . . . . . . . . . . . . . . . . .  27\n  11.1.  Normative References . . . . . . . . . . . . . . . . . .  27\n  11.2.  Informative References . . . . . . . . . . . . . . . . .  28\nAcknowledgments . . . . . . . . . . . . . . . . . . . . . . . . .  29\nAuthors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  30",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "Smart meters that form a constrained wireless network need an application-layer protocol that allows the efficient transmission of metering data from the devices to a central analysis device. The meters used to build such networks are usually equipped with low-cost and low-power hardware. This leads to constraints in computational capacities, available memory, and networking resources.",
      "ja": "制約された無線ネットワークを形成するスマートメータは、中央分析装置へ装置から計量データの効率的な伝送を可能にするアプリケーション層のプロトコルを必要とします。そのようなネットワークを構築するために使用される計器は、通常、低コスト、低電力ハードウェアが装備されています。これは、計算能力、使用可能なメモリ、およびネットワークリソース内の制約につながります。"
    },
    {
      "indent": 3,
      "text": "The devices are often battery powered and are expected to run for a long time without having the possibility of recharging themselves. In order to save energy, smart meters often power off their wireless networking device. Hence, they don't have a steady network connection; they are only part of the wireless network as needed when there is data to be exported. A push protocol like TinyIPFIX, where data is transmitted autonomically from the meters to one or more collectors, is suitable for reporting metering data in such networks.",
      "ja": "デバイスは、多くの場合、バッテリ駆動であり、自分自身を再充電の可能性を持つことなく、長い時間のために実行することが期待されています。エネルギーを節約するために、スマートメーターは、多くの場合、彼らのワイヤレスネットワークデバイスの電源を切ります。したがって、彼らは着実にネットワーク接続していません。彼らは、エクスポートするデータがある場合には、必要に応じて、ワイヤレスネットワークの一部でしかありません。データは、1つ以上のコレクタにメートルから自律的に送信されるTinyIPFIX、等プッシュプロトコルは、ネットワーク内の計量データを報告するのに適しています。"
    },
    {
      "indent": 3,
      "text": "TinyIPFIX is derived from IPFIX [RFC7011]; therefore, it inherits most of IPFIX's properties. One of these properties is the separation of data and its data description by encoding the former in Data Sets and the latter in Template Sets.",
      "ja": "TinyIPFIXはIPFIX [RFC7011]に由来します。したがって、それはIPFIXのプロパティのほとんどを継承します。これらの特性の一つは、テンプレートセット内のデータセットで、前者と後者を符号化したデータとそのデータ記述の分離です。"
    },
    {
      "indent": 3,
      "text": "Transforming TinyIPFIX to IPFIX as per [RFC7011] is very simple and can be done on the border between the constrained network and the more general network. The transformation between one form of IPFIX data into another is known as \"IPFIX Mediation\" [RFC5982]. Hence, smart-metering networks that are based on TinyIPFIX can be easily integrated into an existing IPFIX measurement infrastructure.",
      "ja": "[RFC7011]に従ってIPFIXにTinyIPFIXを変換することは非常に簡単であり、制約ネットワークと、より一般的なネットワークとの境界で行うことができます。他にIPFIXデータの一の形態との間の変換は、「IPFIX仲介」[RFC5982]として知られています。したがって、TinyIPFIXに基づいているスマート・メータリングネットワークを容易に既存のIPFIX測定インフラストラクチャに統合することができます。"
    },
    {
      "indent": 0,
      "text": "1.1. Document Structure",
      "section_title": true,
      "ja": "1.1。文書構造"
    },
    {
      "indent": 3,
      "text": "Section 2 introduces the terminology used in this document. Afterwards, hardware and software constraints in constrained networks, which will motivate our modifications to the IPFIX protocol, are discussed in Section 3. Section 4 describes the application scenarios and Section 5 describes the architecture for TinyIPFIX. Section 6 defines the TinyIPFIX protocol itself and discusses the differences between TinyIPFIX and IPFIX. The Mediation Process from TinyIPFIX to IPFIX is described in Section 7. Section 8 defines the process of Template Management on the Exporter and the Collector. Section 9 and Section 10 discuss the security and IANA considerations for TinyIPFIX.",
      "ja": "第2節では、この文書で使用される用語を紹介します。その後、IPFIXプロトコルに私達の変更を動機となる制約ネットワークにおけるハードウェアおよびソフトウェアの制約、第3セクション4に記載されているアプリケーションのシナリオを説明し、第5節はTinyIPFIXためのアーキテクチャが記載されています。セクション6はTinyIPFIXプロトコル自体を定義しTinyIPFIXとIPFIXの違いについて説明します。 IPFIXへTinyIPFIXからメディエーションプロセスは、7セクション8は、エクスポータとコレクタ上テンプレート管理のプロセスを定義するセクションに記載されています。第9および第10節はTinyIPFIXのためのセキュリティおよびIANA問題を議論します。"
    },
    {
      "indent": 0,
      "text": "2. Terminology",
      "section_title": true,
      "ja": "2.用語"
    },
    {
      "indent": 3,
      "text": "Most of the terms used in this document are defined in [RFC7011]. Each of these terms begins with a capital letter. Most of the terms that are defined for IPFIX can be used to describe TinyIPFIX. This document uses the term \"IPFIX\" to refer to IPFIX as defined in [RFC7011] and the term TinyIPFIX for the protocol specified in this draft document assuming constrained networks. The prefix \"Tiny\" is added to IPFIX to distinguish between the IPFIX version and the TinyIPFIX version.",
      "ja": "このドキュメントで使用される用語のほとんどは、[RFC7011]で定義されています。これらの用語はそれぞれ、大文字で始まります。 IPFIXのために定義されている用語のほとんどはTinyIPFIXを記述するために使用することができます。このドキュメントは[RFC7011]と制約ネットワークを想定し、このドラフト文書で指定されたプロトコルの長期TinyIPFIXで定義されるように、用語「IPFIX」はIPFIXを参照するために使用します。 「タイニー」プレフィックスは、IPFIXバージョンとTinyIPFIXバージョンを区別するためにIPFIXに追加されます。"
    },
    {
      "indent": 3,
      "text": "The terms IPFIX Message, IPFIX Device, Set, Data Set, Template Set, Data Record, Template Record, Collecting Process, Collector, Exporting Process, and Exporter are defined as in [RFC7011]. The term IPFIX Mediator is defined in [RFC5982]. The terms Intermediate Process, IPFIX Proxy, IPFIX Concentrator are defined in [RFC6183].",
      "ja": "用語IPFIXメッセージ、IPFIXデバイス、セット、データセット、テンプレートセット、データレコード、テンプレートレコード、収集処理、コレクタ、エクスポートプロセス、および輸出業者は、[RFC7011]で定義した通りです。用語IPFIXメディエータは、[RFC5982]で定義されています。用語中間プロセス、IPFIXプロキシ、IPFIXコンセントレータは、[RFC6183]で定義されています。"
    },
    {
      "indent": 3,
      "text": "All the terms above have been adapted from the IPFIX definitions. As they keep a similar notion but in a different context of constrained networks, the term \"TinyIPFIX\" now precedes the defined terms.",
      "ja": "すべての用語は、上記のIPFIX定義から適応されています。彼らは同様の概念を維持するが、制約ネットワークの異なる文脈でいるように、用語「TinyIPFIXは」今定義された用語に先行します。"
    },
    {
      "indent": 3,
      "text": "The term \"smart meter\" is used to refer to constrained devices like wireless sensor nodes, motes, or any other kind of small constrained device that can be part of a network that is based on IEEE 802.15.4 and 6LoWPAN [RFC4944].",
      "ja": "用語「スマートメータ」とは、無線センサノード、モート、またはIEEE 802.15.4および6LoWPAN [RFC4944]に基づいているネットワークの一部とすることができる小型の制約デバイスの任意の他の種類のような制約のあるデバイスを指すために使用されます。"
    },
    {
      "indent": 3,
      "text": "TinyIPFIX Exporting Process",
      "ja": "TinyIPFIXエクスポートプロセス"
    },
    {
      "indent": 6,
      "text": "The TinyIPFIX Exporting Process is a process that exports TinyIPFIX Records.",
      "ja": "TinyIPFIXエクスポートプロセスはTinyIPFIXレコードをエクスポートするプロセスです。"
    },
    {
      "indent": 3,
      "text": "TinyIPFIX Exporter",
      "ja": "TinyIPFIX輸出業者"
    },
    {
      "indent": 6,
      "text": "A TinyIPFIX Exporter is device that contains at least one TinyIPFIX Exporting Process.",
      "ja": "TinyIPFIX輸出は、少なくとも一つのTinyIPFIXエクスポートプロセスを含むデバイスです。"
    },
    {
      "indent": 3,
      "text": "TinyIPFIX Collecting Process",
      "ja": "TinyIPFIX収集処理"
    },
    {
      "indent": 6,
      "text": "The TinyIPFIX Collecting Process is a process inside a device that is able to receive and process TinyIPFIX Records.",
      "ja": "TinyIPFIX収集処理は、受信して処理TinyIPFIX記録することができる装置内の処理です。"
    },
    {
      "indent": 3,
      "text": "TinyIPFIX Collector",
      "ja": "TinyIPFIXコレクター"
    },
    {
      "indent": 6,
      "text": "A TinyIPFIX Collector is a device that contains at least one TinyIPFIX Collecting Process.",
      "ja": "TinyIPFIXコレクタは、少なくとも一つのTinyIPFIX収集処理を含むデバイスです。"
    },
    {
      "indent": 3,
      "text": "TinyIPFIX Device",
      "ja": "TinyIPFIXデバイス"
    },
    {
      "indent": 6,
      "text": "A TinyIPFIX Device is a device that contains one or more TinyIPFIX Collectors or one or more TinyIPFIX Exporters.",
      "ja": "TinyIPFIXデバイスは、1つまたは複数のTinyIPFIXコレクターまたは1つ以上のTinyIPFIX輸出業者を含むデバイスです。"
    },
    {
      "indent": 3,
      "text": "TinyIPFIX Smart Meter",
      "ja": "TinyIPFIXスマートメーター"
    },
    {
      "indent": 6,
      "text": "A TinyIPFIX Smart Meter is a device that contains the functionality of a TinyIPFIX Device. It is usually equipped with one or more sensors that meter a physical quantity, like power consumption, temperature, or physical tampering with the device. Every TinyIPFIX Smart Meter MUST at least contain a TinyIPFIX Exporting Process. It MAY contain a TinyIPFIX Collecting Process in order to work as a TinyIPFIX Proxy or TinyIPFIX Concentrator.",
      "ja": "TinyIPFIXスマートメーターはTinyIPFIXデバイスの機能を含むデバイスです。これは、通常、そのメータの消費電力、温度、又はデバイスと物理的改ざん等の物理量を、一つ以上のセンサを備えています。すべてのTinyIPFIXスマートメーターは、少なくともTinyIPFIXエクスポートプロセスを含まなければなりません。それはTinyIPFIXプロキシまたはTinyIPFIXコンセントレータとして動作するためにTinyIPFIX収集処理を含むかもしれません。"
    },
    {
      "indent": 3,
      "text": "TinyIPFIX Data Record",
      "ja": "TinyIPFIXデータレコード"
    },
    {
      "indent": 6,
      "text": "A TinyIPFIX Data Record equals an IPFIX Data Record in [RFC7011]. The term is used to distinguish between IPFIX and TinyIPFIX throughout this document.",
      "ja": "TinyIPFIXデータレコードは、[RFC7011]にIPFIXデータレコードに等しいです。この用語は、この文書全体IPFIXとTinyIPFIXを区別するために使用されます。"
    },
    {
      "indent": 3,
      "text": "TinyIPFIX Template Record",
      "ja": "TinyIPFIXテンプレートレコード"
    },
    {
      "indent": 6,
      "text": "A TinyIPFIX Template Record is similar to an IPFIX Template Record in [RFC7011]. The Template Record Header is substituted with a TinyIPFIX Template Record Header and is otherwise equal to a Template Record. See Section 6.3.",
      "ja": "TinyIPFIXテンプレートレコードは、[RFC7011]にIPFIXテンプレートレコードと同様です。テンプレートレコードヘッダTinyIPFIXテンプレートレコードヘッダで置換し、テンプレートレコードに別段等しいです。 6.3節を参照してください。"
    },
    {
      "indent": 3,
      "text": "TinyIPFIX Set",
      "ja": "TinyIPFIX設定"
    },
    {
      "indent": 6,
      "text": "The TinyIPFIX Set is a group of TinyIPFIX Data Records or TinyIPFIX Template Records with a TinyIPFIX Set Header. Its format is defined in Section 6.2.",
      "ja": "TinyIPFIXセットTinyIPFIXデータレコードまたはTinyIPFIXセットのヘッダーとTinyIPFIXテンプレートレコードのグループです。そのフォーマットはセクション6.2で定義されています。"
    },
    {
      "indent": 3,
      "text": "TinyIPFIX Data Set",
      "ja": "TinyIPFIXデータセット"
    },
    {
      "indent": 6,
      "text": "The TinyIPFIX Data Set is a TinyIPFIX Set that contains TinyIPFIX Data Records.",
      "ja": "TinyIPFIXデータセットはTinyIPFIXデータレコードが含まれていTinyIPFIX設定されています。"
    },
    {
      "indent": 3,
      "text": "TinyIPFIX Template Set",
      "ja": "TinyIPFIXテンプレートセット"
    },
    {
      "indent": 6,
      "text": "A TinyIPFIX Template Set is a TinyIPFIX Set that contains TinyIPFIX Template Records.",
      "ja": "TinyIPFIXテンプレートセットはTinyIPFIXテンプレートレコードが含まれていTinyIPFIX設定されています。"
    },
    {
      "indent": 3,
      "text": "TinyIPFIX Message",
      "ja": "TinyIPFIXメッセージ"
    },
    {
      "indent": 6,
      "text": "The TinyIPFIX Message is a message originated by a TinyIPFIX Exporter. It is composed of a TinyIPFIX Message Header and one or more TinyIPFIX Sets. The TinyIPFIX Message Format is defined in Section 6.",
      "ja": "TinyIPFIXメッセージはTinyIPFIX輸出業者によって発信メッセージです。それはTinyIPFIXメッセージヘッダと1つ以上のTinyIPFIXセットで構成されています。 TinyIPFIXメッセージフォーマットはセクション6で定義されています。"
    },
    {
      "indent": 3,
      "text": "TinyIPFIX Intermediate Process",
      "ja": "TinyIPFIX中間プロセス"
    },
    {
      "indent": 6,
      "text": "A TinyIPFIX Intermediate Process is an IPFIX Intermediate Process that can handle TinyIPFIX Messages.",
      "ja": "TinyIPFIX中間プロセスはTinyIPFIXメッセージを処理することができますIPFIX中間プロセスです。"
    },
    {
      "indent": 3,
      "text": "TinyIPFIX Proxy",
      "ja": "TinyIPFIXプロキシ"
    },
    {
      "indent": 6,
      "text": "A TinyIPFIX Proxy is an IPFIX Proxy that can handle TinyIPFIX Messages.",
      "ja": "TinyIPFIXプロキシはTinyIPFIXメッセージを扱うことができるIPFIXプロキシです。"
    },
    {
      "indent": 3,
      "text": "TinyIPFIX Concentrator",
      "ja": "TinyIPFIXコンセントレータ"
    },
    {
      "indent": 6,
      "text": "A TinyIPFIX Concentrator is device that can handle TinyIPFIX Messages (e.g., pre-process them) and is not constrained.",
      "ja": "TinyIPFIXコンセントレータはTinyIPFIXメッセージを処理することができる装置である（例えば、前処理それら）および制約されません。"
    },
    {
      "indent": 3,
      "text": "TinyIPFIX Proxy",
      "ja": "TinyIPFIXプロキシ"
    },
    {
      "indent": 6,
      "text": "A TinyIPFIX Proxy is an IPFIX Proxy that can handle TinyIPFIX Messages and is not constrained.",
      "ja": "TinyIPFIXプロキシはTinyIPFIXメッセージを処理することができますし、制約されていないIPFIXプロキシです。"
    },
    {
      "indent": 3,
      "text": "A TinyIPFIX Transport Session is defined by the communication between a TinyIPFIX Exporter (identified by an 6LoWPAN-Address, the Transport Protocol, and the Transport Port) and a TinyIPFIX Collector (identified by the same properties).",
      "ja": "TinyIPFIXトランスポートセッションは（6LoWPAN-アドレスによって識別、トランスポートプロトコル、およびトランスポート）TinyIPFIX輸出及び（同じ特性によって識別される）TinyIPFIXコレクタとの間の通信によって定義されます。"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.",
      "ja": "キーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、 \"SHALL\"、 \"SHOULD\"、 \"ないもの\"、 \"推奨\" \"ない（SHOULD NOT）\"、 \"MAY\"、 \"推奨NOT\"、および「OPTIONAL BCP 14に記載されているように「この文書に解釈されるべきである[RFC2119]、[RFC8174]と、ここで示されるように、それらは、すべて大文字で表示された場合にのみ。"
    },
    {
      "indent": 0,
      "text": "3. Constraints",
      "section_title": true,
      "ja": "3.制約"
    },
    {
      "indent": 0,
      "text": "3.1. Hardware Constraints",
      "section_title": true,
      "ja": "3.1。ハードウェアの制約"
    },
    {
      "indent": 3,
      "text": "The target devices for TinyIPFIX are usually equipped with low-cost hardware; therefore, they face several constraints concerning CPU and memory [Schmitt09]. For example, the IRIS mote from Crossbow Technologies, Inc. has a size of 58 x 32 x 7 mm (without a battery pack) [IRIS]. Thus, there is little space for a micro-controller, memory (128 kb program flash, 512 kb measurement serial flash, 8 kb",
      "ja": "TinyIPFIXのターゲット・デバイスは、通常、低コストのハードウェアが装備されています。そのため、彼らはCPUとメモリ[Schmitt0​​9]に関するいくつかの制約に直面しています。例えば、石弓TechnologiesからIRISのモテは、株式会社[IRIS]（電池パックなし）58×32×7ミリメートルの寸法を有します。したがって、マイクロコントローラ、メモリ（128 kbのプログラムフラッシュ512 kbの測定シリアルフラッシュ、8キロバイトのための小さなスペースがあります"
    },
    {
      "indent": 3,
      "text": "RAM, 4 kb configuration EEPROM), and radio-frequency transceiver, which are located on the board. The TelosB motes produced by Crossbow Technologies, Inc. [TelosB] and ADVANTIC SISTEMAS Y SERVICIOS S.L. [Advantic] are similar sized, but offering more memory (48 kb flash, 1024 kb serial, flash, 10 kb RAM, 16 kb configuration EEPROM). The same holds for OpenMote, but the offering is 512 kb flash and 32 kb RAM [openMote].",
      "ja": "RAM、4KBの構成EEPROM）、及び基板上に配置される無線周波数トランシーバ。 TelosBはクロスボウTechnologies社[TelosB]とADVANTIC SISTEMAS Y SERVICIOS S.L.によって生成モート【Advantic】サイズ類似しているが、より多くのメモリ（48キロバイトのフラッシュ1024 kbのシリアル、フラッシュ、10キロバイトのRAM、16キロバイトの構成EEPROM）を提供します。同じことがOpenMoteに当てはまるが、製品は、512キロバイトのフラッシュと32キロバイトのRAM [openMote]です。"
    },
    {
      "indent": 3,
      "text": "Network protocols used on such hardware need to respect these constraints. They must be simple to implement using little code and little run-time memory and should produce little overhead when encoding the application payload.",
      "ja": "このようなハードウェア上で使用するネットワーク・プロトコルは、これらの制約を尊重する必要があります。彼らは少しのコードと少しの実行時のメモリを使用して実装するのは簡単でなければならず、アプリケーションペイロードを符号化する際にわずかなオーバーヘッドを生成する必要があります。"
    },
    {
      "indent": 0,
      "text": "3.2. Energy Constraints",
      "section_title": true,
      "ja": "3.2。エネルギー制約"
    },
    {
      "indent": 3,
      "text": "Smart meters that are battery powered have hard energy constraints [Schmitt09]. If two AA 2800-mAh batteries power the mote, they contain approximately 30,240 Joule of energy. If they run out of power, their battery has to be changed, which means physical manipulation to the device is necessary. Therefore, using as little energy as possible for network communication is desired.",
      "ja": "バッテリーに電源が供給されるスマートメーターは、ハード、エネルギー制約[Schmitt0​​9]を持っています。 2つのAA 2800-mAhのバッテリーがモテに電力を供給した場合、彼らはエネルギーの約30240ジュールが含まれています。彼らは電力が不足する場合は、そのバッテリーは、デバイスへの物理的な操作が必要であることを意味しており、変更する必要があります。したがって、ネットワーク通信のためにできるだけ少ないエネルギーを使用することが望まれます。"
    },
    {
      "indent": 3,
      "text": "A smart-metering device can save a lot of energy, if it powers down its radio-frequency transceiver. Such devices do not have permanent network connectivity; they are only part of the network as needed. A push protocol, where only one side is sending data, is suitable for transmitting application data under such circumstances. As the communication is unidirectional, a meter can completely power down its radio-frequency transceivers as long as it does not have any data to send. If the metering device is able to keep a few measurements in memory, and if real-time metering is not a requirement, the TinyIPFIX Data Records can be pushed less frequently, therefore saving some more energy on the radio-frequency transceivers.",
      "ja": "それはパワーダウンし、その無線周波数トランシーバを場合スマート計量装置は、多くのエネルギーを節約することができます。このようなデバイスは、永続的なネットワーク接続を持っていません。彼らは、必要に応じてネットワークの一部でしかありません。片側のみにデータを送信しているプッシュプロトコルは、そのような状況下でアプリケーションデータを伝送するのに適しています。通信が単方向であるため、それが送信するすべてのデータを持っていないとして、メーターは完全に限り、その無線周波数トランシーバをパワーダウンすることができます。計量装置は、メモリ内のいくつかの測定を維持することができ、リアルタイム計測が必須ではありません場合は、TinyIPFIXデータレコードは、したがって、無線周波数トランシーバにいくつかのより多くのエネルギーを節約し、あまり頻繁にプッシュすることができます。"
    },
    {
      "indent": 0,
      "text": "3.3. Packet Size Constraints",
      "section_title": true,
      "ja": "3.3。パケットサイズの制約"
    },
    {
      "indent": 3,
      "text": "TinyIPFIX is mainly targeted for the use in 6LoWPAN networks, which are based on IEEE 802.15.4 [RFC4944]. However, the protocol can also be used to transmit data in other networks when a mediator is used for translating the TinyIPFIX data into the data format used in the other network (e.g., IPFIX). And the protocol is able to map the 6LoWPAN addresses to the addresses used in the other network. This operation typically consists of per-message re-encapsulation and/or re-encoding. As defined [RFC4944], IEEE 802.15.4 starts from a maximum physical layer packet size of 127 octets (aMaxPHYPacketSize) and a maximum frame overhead of 25 octets (aMaxFrameOverhead), leaving a maximum frame size of 102 octets at the media access control (MAC) layer. On the other hand, IPv6 defines a minimum MTU of 1280 octets. Hence, fragmentation has to be implemented in order to transmit such large packets. While fragmentation allows the transmission of large messages, its use is problematic in networks with high packet loss because the complete message has to be discarded if only a single fragment gets lost.",
      "ja": "TinyIPFIXは主IEEE 802.15.4 [RFC4944]に基づいて6LoWPANネットワーク、における使用のために標的化されます。しかし、プロトコルは、メディエーターが、他のネットワーク（例えば、IPFIX）で使用されるデータ形式にTinyIPFIXデータを変換するために使用される場合、他のネットワークでデータを送信するために使用することができます。そして、プロトコルは、他のネットワークで使用されるアドレスに6LoWPANアドレスをマップすることができます。この操作は、典型的には、メッセージごとの再カプセル化および/または再符号化から成ります。 [RFC4944]で定義されるように、IEEE 802.15.4は、（メディア・アクセス・コントロールで102オクテットの最大フレームサイズを残し、127個のオクテット（aMaxPHYPacketSize）の最大物理層パケットサイズと25個のオクテット（aMaxFrameOverhead）の最大フレームオーバーヘッドから始まりますMAC）層。一方、IPv6は、1280オクテットの最小のMTUを定義します。したがって、断片は、大きなパケットを送信するために実施されなければなりません。フラグメンテーションが大きいメッセージの送信を可能にしながら、完全なメッセージは、単一のフラグメントが失われた場合に破棄されなければならないので、その使用は、高いパケット損失がネットワークに問題があります。"
    },
    {
      "indent": 3,
      "text": "TinyIPFIX enhances IPFIX by a header-compression scheme, which allows the header size overhead to be significantly reduced. Additionally, the overall TinyIPFIX Message size is reduced, which reduces the need for fragmentation.",
      "ja": "TinyIPFIXは、ヘッダサイズのオーバーヘッドを大幅に低減することを可能にするヘッダ圧縮方式によってIPFIXを高めます。また、全体的なTinyIPFIXメッセージサイズは、断片化の必要性を減少させる、減少させます。"
    },
    {
      "indent": 0,
      "text": "3.4. Transport Protocol Constraints",
      "section_title": true,
      "ja": "3.4。トランスポートプロトコルの制約"
    },
    {
      "indent": 3,
      "text": "The IPFIX standard [RFC7011] defines several transport protocol bindings for the transmission of IPFIX Messages. Stream Control Transmission Protocol (SCTP) support is REQUIRED for any IPFIX Device to achieve standard conformance [RFC7011], and its use is highly recommended. However, sending IPFIX over UDP and TCP MAY also be implemented.",
      "ja": "IPFIX標準[RFC7011]はIPFIXメッセージの送信のためにいくつかのトランスポート・プロトコル・バインディングを定義します。ストリーム制御伝送プロトコル（SCTP）のサポートは、標準準拠[RFC7011]を達成するために、任意のIPFIX装置に要求され、その使用が強く推奨されます。しかし、UDPおよびTCP上IPFIXを送信することも実現することができます。"
    },
    {
      "indent": 3,
      "text": "This transport protocol recommendation is not suitable for TinyIPFIX. A header compression scheme that allows a compression of an IPv6 header from 40 octets down to 2 octets is defined in 6LoWPAN. There is a similar compression scheme for UDP, but there is no such compression for TCP or SCTP headers. If header compression can be employed, more space for application payload is available.",
      "ja": "このトランスポートプロトコル勧告はTinyIPFIXには適していません。 2つのオクテットまでの40個のオクテットからIPv6ヘッダーの圧縮を可能にするヘッダ圧縮方式は、6LoWPANに定義されています。 UDPのための同様の圧縮方式がありますが、TCPまたはSCTPヘッダには、このような圧縮はありません。ヘッダ圧縮を使用することができる場合、アプリケーション・ペイロードのためのより多くのスペースが利用可能です。"
    },
    {
      "indent": 3,
      "text": "Therefore, using UDP on the transport layer for transmitting TinyIPFIX Messages is RECOMMENDED. Furthermore, TCP or SCTP are currently not supported on some platforms, like on TinyOS [Harvan08]. Hence, UDP may be the only option.",
      "ja": "したがって、TinyIPFIXメッセージを送信するためのトランスポート層の上にUDPを使用して推奨されています。さらに、TCPまたはSCTPは、現在のTinyOS [Harvan08]のように、いくつかのプラットフォームでサポートされていません。したがって、UDPが唯一の選択肢かもしれません。"
    },
    {
      "indent": 3,
      "text": "Every TinyIPFIX Exporter and Collector MUST implement UDP transport-layer support for transmitting data in a constrained network environment. It MAY also offer TCP or SCTP support. In the case in which TCP or SCTP MAY be used, power consumption will grow and the available size of application payload compared to the use of UDP May be reduced. If TinyIPFIX is transmitted over a unconstrained network, using SCTP as a transport-layer protocol is RECOMMENDED. TinyIPFIX works independent of the target environment, because it MUST only be ensured that all intermediate devices can understand TinyIPFIX and be able to extract needed packet information (e.g., IP destination address). TinyIPFIX messages can be included in other transport protocols in the payload whenever is necessary, making TinyIPFIX highly flexible and usable for different communication protocols (e.g., Constrained Application Protocol (CoAP), UDP, TCP). TinyIPFIX itself just specifies a messages format for the collected data to be transmitted.",
      "ja": "すべてのTinyIPFIX輸出業者やコレクターは、制約のネットワーク環境でデータを伝送するためのUDPトランスポート層のサポートを実装しなければなりません。また、TCPやSCTPのサポートを提供することがあります。 TCPまたはSCTPを使用することが可能な場合には、消費電力が大きくなりますとUDPの使用に比べてアプリケーションペイロードの利用可能サイズを小さくすることができます。 TinyIPFIXは、制約のないネットワークを介して送信されている場合は、トランスポート層プロトコルとしてSCTPを使用することは推奨されています。それだけですべての中間デバイスがTinyIPFIXを理解し、必要なパケット情報（例えば、IP宛先アドレス）を抽出することができることを保証しなければならないのでTinyIPFIXは、ターゲット環境から独立して動作します。 TinyIPFIXメッセージは、異なる通信プロトコル（例えば、制約アプリケーションプロトコル（CoAP）、UDP、TCP）のためTinyIPFIXは非常に柔軟で使いやすい作り、必要なときはいつでも、ペイロード内の他のトランスポートプロトコルに含めることができます。 TinyIPFIX自体はちょうど収集したデータを送信するためのメッセージ・フォーマットを指定します。"
    },
    {
      "indent": 3,
      "text": "The constraints on UDP usage given in Section 6.2 of [RFC5153] apply to TinyIPFIX as well. TinyIPFIX is not intended for use over the open Internet. In general, the networks on which it runs are considered dedicated for sensor operations and are under the control of a single administrative domain.",
      "ja": "[RFC5153]のセクション6.2で与えられたUDPの使用上の制約は、同様TinyIPFIXに適用されます。 TinyIPFIXは、オープンなインターネット上で使用するためのものではありません。一般的には、それが実行されているネットワークは、センサ操作のための専用とみなされ、単一の管理ドメインの制御下にあります。"
    },
    {
      "indent": 0,
      "text": "4. Application Scenarios for TinyIPFIX",
      "section_title": true,
      "ja": "TinyIPFIX 4.アプリケーションシナリオ"
    },
    {
      "indent": 3,
      "text": "TinyIPFIX is derived from IPFIX [RFC7011]; therefore, it is a unidirectional push protocol assuming UDP usage. This means all communication that employs TinyIPFIX is unidirectional from an Exporting Process to a Collecting Process. Hence, TinyIPFIX only fits for application scenarios where meters transmit data to one or more Collectors. In case pull requests should also be supported by TinyIPFIX, it is RECOMMENDED not to change the code of TinyIPFIX much to get along with the restricted memory available [Schmitt2017]. Meaning including just a one bit field, called type, to distinguish between push and pull messages would be feasible, but the filtering SHOULD be done by the gateway and not by the constrained device; meaning if a pull is performed, the constrained device is triggered to create a TinyIPFIX message immediately as usual, set the type field to one instead of zero (for a push message), and send message to the gateway. At the gateway, the filtering is performed based on the pull request.",
      "ja": "TinyIPFIXはIPFIX [RFC7011]に由来します。したがって、UDP使用を想定一方向プッシュプロトコルです。これはTinyIPFIXは、エクスポートプロセスから収集プロセスに一方向で使用するすべての通信を意味します。したがって、TinyIPFIXのみメートルは、1つまたは複数のコレクターにデータを送信するアプリケーションシナリオに収まります。プルリクエストもTinyIPFIXによりサポートされなければならない場合には、[Schmitt2017]利用できる制限付きメモリと一緒に取得するために多くのTinyIPFIXのコードを変更しないことをお勧めします。プッシュ区別及びメッセージをプルするタイプと呼ばれるただ一つのビットフィールドを含む意味で、実現可能であろうが、フィルタリングは、ゲートウェイによってではなく拘束装置によって行われるべきです。引き込みが行われた場合、拘束装置は通常通り直ちにTinyIPFIXメッセージを作成するためにトリガされる意味、（プッシュメッセージ用）を一度代わりにゼロにタイプフィールドを設定して、ゲートウェイにメッセージを送信します。ゲートウェイで、フィルタリングがプル要求に基づいて行われます。"
    },
    {
      "indent": 3,
      "text": "If TinyIPFIX is used over UDP, as recommended, packet loss can occur. Furthermore, if an initial Template Message gets lost, and is therefore unknown to the Collector, all TinyIPFIX Data Sets that reference this Template cannot be decoded. Hence, all these Messages are lost if they are not cached by the Collector. It should be clear to an application developer that TinyIPFIX can only be used over UDP if these TinyIPFIX Message losses are not a problem. To avoid this loss, it is RECOMMENDED to repeat the Template Message periodically, keeping in mind that a Template never changes for a constrained device after deployment. Even when Template Messages become lost in the network, the data can be manually translated later when the Template Messages is re-sent. Including an acknowledgement mechanism is NOT RECOMMENDED due to overhead, because this would require storage of any sent data on the constrained devices until it was acknowledged. In critical applications, it is RECOMMENDED to repeat the Template Message more often.",
      "ja": "TinyIPFIXは、UDP上で使用されている場合は、推奨されているように、パケット損失が発生する可能性があります。初期テンプレートのメッセージが失われるので、コレクターに知られていない場合はさらに、すべてのTinyIPFIXデータは、このテンプレートをデコードすることはできません参照することを設定します。彼らはコレクターでキャッシュされない場合したがって、これらすべてのメッセージは失われます。これは、これらのTinyIPFIXメッセージ損失が問題でない場合TinyIPFIXはUDP上でのみ使用することができ、アプリケーション開発者に明確にする必要があります。この損失を回避するために、テンプレートは、展開後に拘束されたデバイスのために変更されないことを念頭に置いて、定期的にテンプレートのメッセージを繰り返すことをお勧めします。テンプレートのメッセージがネットワークで失われてしまう場合でも、データは後から手動テンプレート・メッセージが再送信されたときに翻訳することができます。それが認められたまで、これは制約のあるデバイス上の任意の送信されたデータのストレージを必要とするので、確認応答機構を備え、によるオーバーヘッドすることは推奨されません。重要なアプリケーションでは、より頻繁にテンプレートのメッセージを繰り返すことをお勧めします。"
    },
    {
      "indent": 3,
      "text": "TinyIPFIX over UDP is especially not a suitable protocol for applications where sensor data trigger policy decisions or configuration updates for which packet loss is not tolerable.",
      "ja": "UDP上TinyIPFIXは特に、センサデータは、パケット損失が許容されていない政策決定や設定の更新をトリガーするアプリケーションに適したプロトコルではありません。"
    },
    {
      "indent": 3,
      "text": "Applications that use smart sensors for accounting purposes for long-term measurements can benefit from the use of TinyIPFIX. One application for IPFIX is long-term monitoring of large physical volumes. In [Tolle05], Tolle et al. built a system for monitoring a \"70-meter tall redwood tree, at a density interval of 5 minutes in time and 2 meters in space\". The sensor node infrastructure was deployed to measure the air temperature, relative humidity, and photosynthetically active solar radiation over a long-term period.",
      "ja": "長期的な測定のための会計目的のために、スマートセンサーを使用するアプリケーションはTinyIPFIXの使用の恩恵を受けることができます。 IPFIXのための1つの用途は、大規模な物理ボリュームの長期的なモニタリングです。 【Tolle05]において、Tolleのら。 「時間で5分、空間に2メートルの密度間隔で、70メートルトールレッドウッド・ツリー」監視するためのシステムを構築しました。センサノード・インフラストラクチャは、気温、相対湿度、および長期にわたって光合成有効太陽放射を測定するように配備されました。"
    },
    {
      "indent": 3,
      "text": "TinyIPFIX is a good fit for such scenarios. Data can be measured by the sensors of the TinyIPFIX Smart Meter over several 5-minute time intervals; the measurements can be accumulated into a single TinyIPFIX Message. As soon as enough measurements are stored in the TinyIPFIX Message, e.g., if the TinyIPFIX Message size fills the available payload in a single IEEE 802.15.4 packet, the wireless transceiver can be activated and the TinyIPFIX Message can be exported to a TinyIPFIX Collector.",
      "ja": "TinyIPFIXは、このようなシナリオに適しています。データは、いくつかの5分の時間間隔でTinyIPFIXスマートメーターのセンサーによって測定することができます。測定は、単一TinyIPFIXメッセージに蓄積することができます。 TinyIPFIXメッセージサイズが単一IEEE 802.15.4パケットで利用可能なペイロードを満たす場合とすぐに十分な測定がTinyIPFIXメッセージに格納されているように、例えば、無線送受信機を作動させることができるとTinyIPFIXメッセージTinyIPFIXコレクタにエクスポートすることができます。"
    },
    {
      "indent": 3,
      "text": "Similar sensor networks have been built to monitor the habitat of animals, e.g., in the \"Great Duck Island Project\" [GreatDuck] [SMPC04]. The purpose of the sensor network was to monitor the birds by deploying sensors in and around their burrows. The measured sensor data was collected and stored in a database for offline analysis and visualization. Again, the sensors can perform their measurements periodically, accumulate the sensor data, and export them to a TinyIPFIX Collector.",
      "ja": "同様のセンサネットワークは、[SMPC04] [GreatDuck]「グレートダック島プロジェクト」で、例えば、動物の生息地を監視するために構築されています。センサネットワークの目的は、彼らの巣穴とその周辺のセンサーを展開することによって、鳥を監視することでした。測定されたセンサデータを収集し、オフライン解析および可視化のためにデータベースに格納されました。再び、センサは、定期的に測定を行うセンサデータを蓄積し、そしてTinyIPFIXコレクタにエクスポートすることができます。"
    },
    {
      "indent": 3,
      "text": "Other application scenarios for TinyIPFIX could be applications where sensor networks are used for long-term structural health monitoring in order to investigate long-term weather conditions on the structure of a building. For example, a smart-metering network has been built to monitor the structural health of the Golden Gate Bridge [Kim07]. If a sensor network is deployed to perform a long-term measurement of the structural integrity, TinyIPFIX can be used to collect the sensor-measurement data.",
      "ja": "TinyIPFIXためのその他のアプリケーションシナリオは、センサネットワークは、建物の構造上、長期的な気象条件を調べるために、長期的な構造ヘルスモニタリングのために使用されるアプリケーションである可能性があります。例えば、スマート・メータリングネットワークは、ゴールデンゲートブリッジ[Kim07]の構造的健全性を監視するために構築されています。センサネットワークは、構造的完全性の長期的な測定を行うために配置されている場合、TinyIPFIXは、センサの測定データを収集するために使用することができます。"
    },
    {
      "indent": 3,
      "text": "If an application developer wants to decide whether to use TinyIPFIX for transmitting data from smart meters, he must take the following considerations into account:",
      "ja": "アプリケーション開発者は、スマートメーターからのデータを送信するためTinyIPFIXを使用するかどうかを決定したい場合、彼は次の点を考慮してくださいする必要があります。"
    },
    {
      "indent": 3,
      "text": "1. The application should require a push protocol by default. The timing intervals of when to push data should be predefined before deployment. The property above allows a TinyIPFIX Smart Meter to turn off its wireless device in order to save energy, as it does not have to receive any data.",
      "ja": "1.アプリケーションは、デフォルトではプッシュプロトコルを要求する必要があります。データをプッシュする際のタイミング間隔は、展開前に事前に定義されなければなりません。上記のプロパティは、それが任意のデータを受信する必要がないようTinyIPFIXスマートメーターは、エネルギーを節約するために、その無線デバイスをオフにすることができます。"
    },
    {
      "indent": 3,
      "text": "2. If real-time reporting is not required, the application might benefit from combining several measurements into a single TinyIPFIX Message, causing delay but lowering traffic in the network. TinyIPFIX easily allow the combination of several measurements into a single TinyIPFIX Message (or a single packet). This combination can happen on the TinyIPFIX Smart Meter that combines several of its own measurements. Or, it can happen within a multi-hop wireless network where one IPFIX Proxy combines several TinyIPFIX Messages into a single TinyIPFIX Message before forwarding them.",
      "ja": "2.リアルタイムのレポートが必要とされていない場合、アプリケーションは、単一TinyIPFIXメッセージにいくつかの測定を組み合わせ遅延を引き起こしますが、ネットワークのトラフィックを低下の恩恵を受ける可能性があります。 TinyIPFIXが容易単一TinyIPFIXメッセージ（または単一のパケット）にいくつかの測定値の組み合わせを可能にします。この組み合わせは、独自の測定値のいくつかを組み合わせたTinyIPFIXスマートメーター上で発生する可能性があります。それとも、それは1 IPFIXプロキシがそれらを転送する前に、単一のTinyIPFIXメッセージにいくつかのTinyIPFIXメッセージを組み合わせたマルチホップ無線ネットワーク内で発生する可能性があります。"
    },
    {
      "indent": 3,
      "text": "3. The application must accept potential packet loss. TinyIPFIX only fits for applications where metering data is stored for accounting purposes and not for applications where the sensor data triggers configuration changes or policy decisions, except when Message loss is acceptable for some reason.",
      "ja": "3.アプリケーションは、潜在的なパケット損失を受け入れなければなりません。 TinyIPFIXは計量データは、会計目的のためではなく、センサデータは、メッセージ損失が何らかの理由で許容される場合を除き、構成の変更または政策決定をトリガーするアプリケーションのために保存されているアプリケーションに適合します。"
    },
    {
      "indent": 3,
      "text": "4. The application must not require per-message export timestamps (e.g., for auditing). TinyIPFIX removes export timestamps, generally only useful for Template Management operations, which it also does not support, from IPFIX. This is a minor inconvenience, since per-record timestamp Information Elements are also available in IPFIX.",
      "ja": "4.アプリケーションは、（監査のためなど、）メッセージごとのエクスポートのタイムスタンプを必要とはなりません。 TinyIPFIXは、それはまた、IPFIXから、サポートされていないテンプレート管理操作のために、一般的にのみ有用輸出タイムスタンプを、削除します。あたりのレコードタイムスタンプ情報要素は、IPFIXにも利用できますので、これは、マイナーな不便です。"
    },
    {
      "indent": 0,
      "text": "5. Architecture for TinyIPFIX",
      "section_title": true,
      "ja": "TinyIPFIX 5.アーキテクチャ"
    },
    {
      "indent": 3,
      "text": "The TinyIPFIX architecture is similar to the IPFIX architecture, which is described in [RFC5470]. The most common deployment of TinyIPFIX Smart Meters is shown in Figure 1, where each TinyIPFIX Smart Meter can have different sensors available (e.g., IRIS: Temperature, Humidity, Sound; TelosB: Temperature, Bridgeness, Humidity, GPS) building the sensor data.",
      "ja": "TinyIPFIXアーキテクチャは、[RFC5470]に記載されてIPFIXアーキテクチャに類似しています。 TinyIPFIXスマートメーターの最も一般的な配備は、各TinyIPFIXスマートメーターは、異なるセンサが使用可能であることができ、図1に示されている（例えば、IRIS：温度、湿度、サウンド; TelosB：温度、Bridgeness、湿度、GPS）センサデータを構築します。"
    },
    {
      "indent": 8,
      "text": "+------------------------+     +------------------------+\n|     TinyIPFIX Device   | ... |     TinyIPFIX Device   |\n|   [Exporting Process]  |     |   [Exporting Process]  |\n+------------------------+     +------------------------+\n          |                                  |\nTinyIPFIX |                                  | TinyIPFIX\n          |                                  |\n          v                                  v\n          +----------------------------------+\n                          |\n                          v\n              +----------------------------+\n              |    TinyIPFIX Collector     |\n              |  [Collecting Process(es)]  |\n              +----------------------------+\n                          |\n                          v\n                +-----------------------+\n                |                       |\n                v                       v\n       +----------------+     +----------------+\n       |[*Application 1]| ... |[*Application n]|\n       +----------------+     +----------------+",
      "raw": true
    },
    {
      "indent": 14,
      "text": "Figure 1: Direct Transmission between TinyIPFIX\n           Devices and Applications",
      "raw": true
    },
    {
      "indent": 3,
      "text": "A TinyIPFIX Smart Meter (S.M.) receives measurement data from its internal sensors to create its TinyIPFIX Messages. Then, it encodes the results into a TinyIPFIX Message using a TinyIPFIX Exporting Process and exports this TinyIPFIX Message to one or more TinyIPFIX Collectors. The TinyIPFIX Collector runs one or more applications that process the collected sensor data. The TinyIPFIX Collector can be deployed on unconstrained devices at the constrained network border.",
      "ja": "TinyIPFIXスマートメーター（S.M.）はTinyIPFIXメッセージを作成するために、その内部のセンサからの測定データを受信します。次いで、1つ又はそれ以上のTinyIPFIXコレクターこのTinyIPFIXメッセージをTinyIPFIXエクスポートプロセスを使用して、輸出TinyIPFIXメッセージに結果を符号化します。 TinyIPFIXコレクターが収集したセンサデータを処理する1つ以上のアプリケーションを実行します。 TinyIPFIXコレクターは、制約ネットワークの境界に制約されていないデバイス上に展開することができます。"
    },
    {
      "indent": 3,
      "text": "A second way to deploy TinyIPFIX Smart Meter can employ accumulation on TinyIPFIX Messages during their journey through the constrained network as shown in Figure 2. This accumulation can be performed by TinyIPFIX Concentrators. Such devices must have enough resources to perform the accumulation.",
      "ja": "この蓄積はTinyIPFIXコンセントレータによって行うことができる。図2に示すようTinyIPFIXスマートメーターを展開する第二の方法は、制約のネットワークを介して彼らの旅の間TinyIPFIXメッセージの蓄積を採用することができます。このようなデバイスは、蓄積を実行するための十分なリソースを持っている必要があります。"
    },
    {
      "indent": 6,
      "text": "+------------------------+     +------------------------+\n|     TinyIPFIX Device   | ... |     TinyIPFIX Device   |\n|   [Exporting Process]  |     |   [Exporting Process]  |\n+------------------------+     +------------------------+\n          |                                  |\nTinyIPFIX |                                  | TinyIPFIX\n          |                                  |\n          v                                  v\n          +----------------------------------+\n                            |\n                            v\n                +------------------------+\n                | TinyIPFIX Concentrator |\n                |  [Collecting  Process] |\n                |  [Exporting Process]   |\n                +------------------------+\n                            |\n                  TinyIPFIX |\n                            |\n                            v\n               +--------------------------+\n               |        Collector         |\n               | [Collecting Process(es)] |\n               +--------------------------+",
      "raw": true
    },
    {
      "indent": 20,
      "text": "Figure 2: Accumulation of TinyIPFIX",
      "ja": "図2：TinyIPFIXの蓄積"
    },
    {
      "indent": 3,
      "text": "TinyIPFIX Smart Meters send their data to a TinyIPFIX Concentrator, which needs to have enough storage space to store the incoming data. If the TinyIPFIX Concentrator is hosted in a TinyIPFIX Smart Meter, it MAY also be able to collect data from it sensors, if activated. It may also accumulate the incoming data with its own measurement data. The accumulated data can then be re-exported to one or more Collectors. In that case, the TinyIPFIX Concentrator can be viewed as receiving data from multiple Smart Meters: one locally and some remotely.",
      "ja": "TinyIPFIXスマートメーターは、入力データを格納するのに十分な記憶領域を持っている必要がTinyIPFIXコンセントレータに自分のデータを送信します。 TinyIPFIXコンセントレータがTinyIPFIXスマートメーターでホストされている場合、また、センサから起動すると、データを収集することができるかもしれません。それはまた、それ自身の測定データと受信データを蓄積することができます。蓄積されたデータは、1つのまたは複数のコレクターへの再輸出することができます。ローカルおよびいくつかのリモートいずれかその場合、TinyIPFIXコンセントレータは、複数のスマートメーターからのデータを受信するとみなすことができます。"
    },
    {
      "indent": 3,
      "text": "The last deployment, shown in Figure 3, employs another TinyIPFIX Mediation process.",
      "ja": "図3に示される最後の展開は、別のTinyIPFIX仲介プロセスを採用しています。"
    },
    {
      "indent": 8,
      "text": "+-------------------------+     +-------------------------+\n|   Remote Smart Meter    |     |    Local Smart Meter    |\n+-------------------------+     +-------------------------+\n|    TinyIPFIX Device     |     |    TinyIPFIX Device     |\n|   [Exporting Process]   |     |   [Exporting Process]   |\n+-------------------------+     +-------------------------+\n                     |               |\n           TinyIPFIX |               | TinyIPFIX\n                     |               |\n                     v               v\n                +-------------------------+\n                | TinyIPFIX Concentrator  |\n                |  [Collecting  Process]  |\n                +-------------------------+",
      "raw": true
    },
    {
      "indent": 23,
      "text": "Figure 3: TinyIPFIX Mediator",
      "ja": "図3：TinyIPFIXメディエーター"
    },
    {
      "indent": 3,
      "text": "In this deployment, the TinyIPFIX Smart Meters transmit their TinyIPFIX Messages to one node, e.g., the base station, which translates the TinyIPFIX Messages to IPFIX Messages. The IPFIX Messages can then be exported into an existing IPFIX infrastructure. The Mediation process from TinyIPFIX to IPFIX is described in Section 7.",
      "ja": "この配置では、TinyIPFIXスマートメーターは、IPFIXメッセージにTinyIPFIXメッセージを変換つのノード、例えば、基地局へのTinyIPFIXメッセージを送信します。 IPFIXのメッセージは、既存のIPFIXインフラにエクスポートすることができます。 IPFIXへTinyIPFIXからメディエーションプロセスは、セクション7に記載されています。"
    },
    {
      "indent": 0,
      "text": "6. TinyIPFIX Message Format",
      "section_title": true,
      "ja": "6. TinyIPFIXメッセージフォーマット"
    },
    {
      "indent": 3,
      "text": "A TinyIPFIX IPFIX Message starts with a TinyIPFIX Message Header, followed by one or more TinyIPFIX Sets. The TinyIPFIX Sets can be either of type TinyIPFIX Template Set or of type TinyIPFIX Data Set. A TinyIPFIX Message MUST only contain one type of TinyIPFIX Set. The format of the TinyIPFIX Message is shown in Figure 4.",
      "ja": "TinyIPFIX IPFIXのメッセージは、一つ以上のTinyIPFIXセットに続いてTinyIPFIXメッセージヘッダで始まります。 TinyIPFIXセットはタイプTinyIPFIXテンプレートセットのまたはタイプTinyIPFIXデータセットのいずれかになります。 TinyIPFIXメッセージのみTinyIPFIXセットのいずれかのタイプを含まなければなりません。 TinyIPFIXメッセージのフォーマットは、図4に示されています。"
    },
    {
      "indent": 11,
      "text": "+----------------------------------------------------+\n| TinyIPFIX Message Header                           |\n+----------------------------------------------------+\n| TinyIPFIX Set                                      |\n+----------------------------------------------------+\n| TinyIPFIX Set                                      |\n+----------------------------------------------------+\n...\n+----------------------------------------------------+\n| TinyIPFIX Set                                      |\n+----------------------------------------------------+",
      "raw": true
    },
    {
      "indent": 20,
      "text": "Figure 4: TinyIPFIX Message Format",
      "ja": "図4：TinyIPFIXメッセージフォーマット"
    },
    {
      "indent": 0,
      "text": "6.1. TinyIPFIX Message Header",
      "section_title": true,
      "ja": "6.1。 TinyIPFIXメッセージヘッダ"
    },
    {
      "indent": 3,
      "text": "The TinyIPFIX Message Header is derived from the IPFIX Message Header, with some optimization using field compression. The IPFIX Message Header from [RFC7011] is shown in Figure 5.",
      "ja": "TinyIPFIXメッセージヘッダは、フィールドの圧縮を使用して、いくつかの最適化と、IPFIXメッセージヘッダーに由来しています。 [RFC7011]からIPFIXメッセージヘッダーは、図5に示されています。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|       Version Number          |            Length             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                      Export Time                              |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                     Sequence Number                           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                      Observation ID                           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 22,
      "text": "Figure 5: IPFIX Message Header",
      "ja": "図5：IPFIXメッセージヘッダ"
    },
    {
      "indent": 3,
      "text": "The length of the IPFIX Message Header is 16 octets, and every IPFIX Message has to be started with it. The TinyIPFIX Message Header needs to be smaller due to the packet size constraints discussed in Section 3.3. The TinyIPFIX Header consists of a fixed part of three octets as shown in Figure 6, followed by a variable part as shown in Figures 7 to 10.",
      "ja": "IPFIXメッセージヘッダーの長さが16個のオクテットで、すべてのIPFIXのメッセージは、それを開始する必要があります。 TinyIPFIXメッセージヘッダーが原因3.3節で説明したパケットサイズの制約を小さくする必要があります。図6に示すようにTinyIPFIXヘッダー10に、図7に示すように、可変部分に続く、3つのオクテットの固定部から構成されています。"
    },
    {
      "indent": 5,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|E|E| SetID |        Length     | Sequence      | Ext. Sequence |\n|1|2|Lookup |                   | Number        |  Number       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| Ext. SetID    |\n+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 13,
      "text": "Figure 6: Format of the TinyIPFIX Message Header\n       including Fixed and Optional Parts",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The fixed part has a length of 3 octets and consists of the \"E1\" field (1 bit), the \"E2\" field (1 bit), the \"SetID Lookup\" field (4 bits), the \"Length\" field (10 bits), and the \"Sequence Number\" field (8 bits). The variable part has a variable length defined by the \"E1\" and \"E2\" fields in the fixed header. The four variants are illustrated in Figure 7 to Figure 10 below.",
      "ja": "固定部は、3つのオクテットの長さを有し、「E1」フィールド（1ビット）で構成され、「E2」フィールド（1ビット）、「SETIDルックアップ」フィールド（4ビット）は、「長さ」フィールド（10ビット）、及び「シーケンス番号」フィールド（8ビット）。可変部分は、固定されたヘッダ内の「E1」および「E2」フィールドによって定義された可変長を有します。 4つの変異体は、以下に図10を、図7に示されています。"
    },
    {
      "indent": 4,
      "text": " 0                   1                   2\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|0|0| SetID |        Length     | Sequence      |\n| | |Lookup |                   | Number        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Figure 7: TinyIPFIX Message Header Format if E1 = E2 = 0",
      "ja": "図7：TinyIPFIXメッセージヘッダフォーマットであればE1 = E2 = 0"
    },
    {
      "indent": 4,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|1|0| SetID |        Length     | Sequence      | Ext. SetID    |\n| | |Lookup |                   | Number        |               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Figure 8: TinyIPFIX Message Header Format if E1 = 1 and E2 = 0",
      "ja": "図8：TinyIPFIXメッセージヘッダのフォーマットE1 = 1、E2 = 0の場合"
    },
    {
      "indent": 4,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|E|E| SetID |        Length     | Sequence      | Ext. Sequenz  |\n|1|2|Lookup |                   | Number        |  Number       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Figure 9: TinyIPFIX Message Header Format if E1 = 0 and E2 = 1",
      "ja": "図9：TinyIPFIXメッセージヘッダのフォーマットであればE1 = 0とE2 = 1"
    },
    {
      "indent": 4,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|1|1| SetID |        Length     | Sequence      | Ext. Sequenz  |\n| | |Lookup |                   | Number        |  Number       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| Ext. SetID    |\n+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Figure 10: TinyIPFIX Message Header Format if E1 = E2 = 1",
      "ja": "図10：TinyIPFIXメッセージヘッダのフォーマットであればE1 = E2 = 1"
    },
    {
      "indent": 3,
      "text": "The fixed header fields are defined as follows [Kothmayr10] [Schmitt2014]:",
      "ja": "[Kothmayr10] [Schmitt2014]次のように固定されたヘッダフィールドが定義されています。"
    },
    {
      "indent": 3,
      "text": "E1 and E2",
      "ja": "E1およびE2"
    },
    {
      "indent": 6,
      "text": "The bits marked \"E1\" and \"E2\" control the presence of the field \"Ext. SetID\" and the presence of the field \"Ext. Sequence Number\", respectively.",
      "ja": "ビットが「E1」および「E2」はフィールドの存在を制御する「内線。SETID」とそれぞれフィールド「内線シーケンス番号」の存在となりました。"
    },
    {
      "indent": 6,
      "text": "In case E1 = E2 = 0, the TinyIPFIX Message Header has the format shown in Figure 7. The fields Extended Sequence Number and Extended SetID MUST NOT be present.",
      "ja": "ケースE1 = E2 = 0において、TinyIPFIXメッセージヘッダは、シーケンス番号と拡張SETID拡張フィールドが存在してはならない。図7に示すフォーマットを有します。"
    },
    {
      "indent": 6,
      "text": "When E1 = 1, the extended SetID field MUST be present. Custom SetIDs can be specified in the extended SetID field, setting all SetID Lookup bits to 1 (cf. Figure 8.) When evaluated, the value specified in the extended SetID field is shifted left by 8 bits to prevent collisions with the reserved SetIDs 0-255. To reference these, shifting can be disabled by setting all SetID lookup bits to 1.",
      "ja": "場合E1 = 1、拡張SETIDフィールドが存在しなければなりません。カスタムSetIDs 1に、すべてのSETIDルックアップ・ビットを設定する、拡張SETIDフィールドで指定することができる（参照：図8）を評価する場合、拡張SETIDフィールドに指定された値は予約SetIDs 0との衝突を防止するために8ビットだけ左シフトされ-255。これらを参照するために、シフトを1に、すべてのSETIDルックアップ・ビットを設定することによって無効にすることができます。"
    },
    {
      "indent": 6,
      "text": "Depending on the application, sampling rates might be larger than in typical constrained networks (e.g., Wireless Sensor Networks (WSNs), Cyber-Physical-Systems (CPS)); thus, they may have a large quantity of records per packet. In order to make TinyIPFIX applicable for those cases, E2 = 1 is set (cf. Figure 9). This means the Extended Sequence Number field MUST be present, offering 8-bit more sequence numbers as usual. Depending on the constrained network settings, the combination E1 = E2 = 1 is also possible, resulting in the maximum TinyIPFIX Message header shown in Figure 10 where the Extended Sequence Number field and Extended SetID field MUST both be present.",
      "ja": "用途に応じて、サンプリングレートは、典型的な制約ネットワークにおけるよりも大きいかもしれない（例えば、無線センサネットワーク（のWSN）、サイバー物理システム（CPS））。このように、彼らはパケットごとのレコードを大量に持っていることがあります。そのような場合のためにTinyIPFIXを適用するために、E2 = 1（図9参照）が設定されます。これはいつものように、8ビット以上のシーケンス番号を提供し、拡張シーケンス番号フィールドが存在しなければならないことを意味します。制約されたネットワーク設定に応じて、組み合わせE1 = E2 = 1は、拡張シーケンス番号フィールドと拡張SETIDフィールドが両方存在していなければなりません。図10に示す最大TinyIPFIXメッセージヘッダをもたらすことも可能です。"
    },
    {
      "indent": 3,
      "text": "SetID Lookup",
      "ja": "SETID検索"
    },
    {
      "indent": 6,
      "text": "This field acts as a lookup field for the SetIDs and provides shortcuts to often used SetIDs. Four values are defined:",
      "ja": "このフィールドはSetIDsのためのルックアップフィールドとして機能し、頻繁に使用SetIDsへのショートカットを提供します。四つの値が定義されています。"
    },
    {
      "indent": 6,
      "text": "Value = 0; Look up extended SetID field, Shifting enabled.",
      "ja": "値= 0;有効をシフト、拡張SETIDフィールドを検索します。"
    },
    {
      "indent": 6,
      "text": "Value = 1; SetID = 2 and message contains a Template definition.",
      "ja": "値= 1。 SETID = 2とメッセージは、テンプレートの定義が含まれています。"
    },
    {
      "indent": 6,
      "text": "Value = 2; SetID = 256 and message contains Data Record for Template 256. This places special importance on a single template ID, but, since most sensor nodes only define a single template directly after booting and continue to stream data with this template ID during the whole session lifetime, this shorthand is useful for this case.",
      "ja": "値= 2。 SETID = 256、最もセンサノードのみが直接起動後、単一のテンプレートを定義し、全セッションの存続期間中に、このテンプレートIDを持つデータをストリーミングし続けるので、メッセージは、テンプレート256これは、単一のテンプレートIDに特別な重要性を置くためにデータレコードが含まれていますが、 、この速記は、この場合に便利です。"
    },
    {
      "indent": 6,
      "text": "Value = 3-14; SetIDs are reserved for future extensions.",
      "ja": "値= 3-14; SetIDsは、将来の拡張のために予約されています。"
    },
    {
      "indent": 6,
      "text": "Value = 15; look up extended SetID field, shifting enabled.",
      "ja": "値= 15。有効をシフト、拡張SETIDフィールドを検索します。"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "The length field has a fixed length of 10 bits.",
      "ja": "長さフィールドは10ビットの固定長を有します。"
    },
    {
      "indent": 3,
      "text": "Sequence Number",
      "ja": "シーケンス番号"
    },
    {
      "indent": 6,
      "text": "Due to the low sampling rate in typical WSNs, the \"Sequence Number\" field is only one byte long. However, some applications may have a large quantity of records per packet. In this case, the sequence field can be extended to 16 bit by setting the E2-bit to 1.",
      "ja": "典型的な無線センサネットワークにおける低サンプリングレートに、「シーケンス番号」フィールドは、1バイト長です。ただし、一部のアプリケーションでは、パケットごとのレコードを大量に持っていることがあります。この場合には、シーケンスフィールドが1にE2-ビットを設定することにより、16ビットに拡張することができます。"
    },
    {
      "indent": 3,
      "text": "Since TinyIPFIX packets are always transported via a network protocol, which specifies the source of the packet, the \"Observation Domain\" can be equated with the source of a TinyIPFIX packet. Therefore, this IPFIX field has been removed from the TinyIPFIX Header. Should an application require explicit Observation Domain information, each Data Record in the TinyIPFIX data message may contain an Observation Domain ID Information Element; see Section 3.1 of [RFC7011]. The version field has been removed since the SetID lookup field provides room for future extensions. The specification of a 32-bit timestamp in seconds would require the time synchronization across a wireless-sensor network and produces too much overhead. Thus, the \"Export Time\" field has been removed. If applications should require a concrete observation time (e.g., timestamp), it is RECOMMENDED to include it as a separate Information Element in the TinyIPFIX Records.",
      "ja": "TinyIPFIXパケットは常に、パケットのソースを特定するネットワークプロトコルを介して輸送されるので、「観察ドメイン」TinyIPFIXパケットの送信元と同一視することができます。したがって、このIPFIXフィールドがTinyIPFIXヘッダーから削除されました。アプリケーションが明示的な観測ドメイン情報が必要な場合は、TinyIPFIXデータメッセージ内の各データレコードは、観測ドメインID情報要素が含まれていてもよいです。 [RFC7011]のセクション3.1を参照してください。 SETIDルックアップフィールドは、将来の拡張のための余地を提供するので、バージョンフィールドが削除されました。秒単位で32ビットのタイムスタンプの仕様は、無線センサネットワークを介して時間同期を必要とし、あまりにも多くのオーバーヘッドを生じさせることになります。このように、「エクスポート時間」フィールドが削除されました。アプリケーションが具体的観測時間（例えば、タイムスタンプ）が必要かどうか、TinyIPFIXレコードに別々の情報要素として含めることが推奨されます。"
    },
    {
      "indent": 0,
      "text": "6.2. TinyIPFIX Set",
      "section_title": true,
      "ja": "6.2。 TinyIPFIX設定"
    },
    {
      "indent": 3,
      "text": "A TinyIPFIX Set is a set of TinyIPFIX Template or TinyIPFIX Data Records. Depending on the TinyIPFIX Record type, the TinyIPFIX Set can be either a TinyIPFIX Template Set or a TinyIPFIX Data Set. Every TinyIPFIX Set starts with a TinyIPFIX Set Header and is followed by one or more TinyIPFIX Records.",
      "ja": "TinyIPFIXセットTinyIPFIXテンプレートまたはTinyIPFIXデータレコードのセットです。 TinyIPFIXレコードタイプに応じて、TinyIPFIXセットTinyIPFIXテンプレートセットまたはTinyIPFIXデータセットのいずれかになります。すべてのTinyIPFIXセットTinyIPFIXセットのヘッダーで始まり、一つ以上のTinyIPFIXレコードが続いています。"
    },
    {
      "indent": 3,
      "text": "The IPFIX Set Header consists of a 2-octet \"Set ID\" field and a 2-octet \"Length\" field. These two fields are compressed to 1 octet each for the TinyIPFIX Set Header. The format of the TinyIPFIX Set Header is shown in Figure 11.",
      "ja": "IPFIX設定ヘッダーは2オクテット「セットID」フィールドと2オクテットの「長さ」のフィールドで構成されています。これらの2つのフィールドはTinyIPFIXセットヘッダーのために1つのオクテット毎に圧縮されています。 TinyIPFIXセットヘッダのフォーマットは図11に示されています。"
    },
    {
      "indent": 3,
      "text": " 0                   1\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Tiny Set ID  |    Length     |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 4,
      "text": "Figure 11: TinyIPFIX Set Header",
      "ja": "図11：TinyIPFIXセットのヘッダー"
    },
    {
      "indent": 3,
      "text": "The two fields are defined as follows:",
      "ja": "次のように2つのフィールドが定義されています。"
    },
    {
      "indent": 3,
      "text": "TinyIPFIX Set ID",
      "ja": "TinyIPFIXセットID"
    },
    {
      "indent": 6,
      "text": "The \"Tiny Set ID\" identifies the type of data that is transported in the TinyIPFIX Set. A TinyIPFIX Template Set is identified by TinyIPFIX Set ID 2. This corresponds to the Template Set IDs that are used by IPFIX [RFC7011]. TinyIPFIX Set ID number 3 MUST NOT be used, as Options Templates are not supported; a TinyIPFIX Collector MUST ignore and SHOULD log any Set with Set ID 3. All values from 4 to 127 are reserved for future use. Values above 127 are used for TinyIPFIX Data Sets.",
      "ja": "「小さなセットID」はTinyIPFIXセットに搬送されるデータのタイプを識別する。 TinyIPFIXテンプレートセットは、これはIPFIX [RFC7011]で使用されるテンプレートセットIDに対応TinyIPFIXセットID 2によって識別されます。オプションのテンプレートがサポートされていないようTinyIPFIXセットID番号3は、使用してはいけません。 TinyIPFIXコレクタは無視しなければならなくて、4から127までのすべての値は、将来の使用のために予約されているセットID 3との任意のセットを記録すべきです。 127以上の値はTinyIPFIXデータセットのために使用されています。"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "The \"Length\" Field contains the total length of the TinyIPFIX Set, including the TinyIPFIX Set Header.",
      "ja": "「長さ」フィールドは、TinyIPFIXセットのヘッダを含むTinyIPFIXセットの長さの合計が、含まれています。"
    },
    {
      "indent": 0,
      "text": "6.3. TinyIPFIX Template Record Format",
      "section_title": true,
      "ja": "6.3。 TinyIPFIXテンプレートレコード・フォーマット"
    },
    {
      "indent": 3,
      "text": "The format of the TinyIPFIX Template Records is shown in Figure 12. The TinyIPFIX Template Record starts with a TinyIPFIX Template Record Header and this is followed by one or more Field Specifiers. The Field Specifier format is defined as in Section 6.4 and is identical to the Field Specifier definition in [RFC7011].",
      "ja": "TinyIPFIXテンプレートレコードのフォーマットは、図TinyIPFIXテンプレートレコードがTinyIPFIXテンプレートレコードヘッダで始まり12に示されており、これは、1つの以上のフィールド指定子が続きます。フィールド指定子の形式はセクション6.4で定義した通りと[RFC7011]のフィールド指定子の定義と同一です。"
    },
    {
      "indent": 11,
      "text": "+--------------------------------------------------+\n| TinyIPFIX Template Record Header                 |\n+--------------------------------------------------+\n| Field Specifier                                  |\n+--------------------------------------------------+\n| Field Specifier                                  |\n+--------------------------------------------------+\n...\n+--------------------------------------------------+\n| Field Specifier                                  |\n+--------------------------------------------------+",
      "raw": true
    },
    {
      "indent": 19,
      "text": "Figure 12: TinyIPFIX Template Format",
      "ja": "図12：TinyIPFIXテンプレートのフォーマット"
    },
    {
      "indent": 3,
      "text": "The format of the TinyIPFIX Template Record Header is shown in Figure 13.",
      "ja": "TinyIPFIXテンプレートレコードヘッダのフォーマットは図13に示されています。"
    },
    {
      "indent": 3,
      "text": " 0                   1\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| Template ID |  Field Count  |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Figure 13: TinyIPFIX Template Record Header",
      "ja": "図13：TinyIPFIXテンプレートレコードヘッダ"
    },
    {
      "indent": 3,
      "text": "TinyIPFIX Template ID",
      "ja": "TinyIPFIXテンプレートのID"
    },
    {
      "indent": 6,
      "text": "Each TinyIPFIX Template Record must have a unique TinyIPFIX Template ID (Comp. Temp ID) between 128 and 255. The TinyIPFIX Template ID must be unique for the given TinyIPFIX Transport Session.",
      "ja": "各TinyIPFIXテンプレートレコード128と255との間TinyIPFIXテンプレートIDは所与TinyIPFIXトランスポートセッションに対して一意でなければならないユニークTinyIPFIXテンプレートID（比較一時ID）を有していなければなりません。"
    },
    {
      "indent": 3,
      "text": "Field Count",
      "ja": "フィールドカウント"
    },
    {
      "indent": 6,
      "text": "The number of fields placed in the TinyIPFIX Template Record.",
      "ja": "TinyIPFIXテンプレートレコードに配置されたフィールドの数。"
    },
    {
      "indent": 0,
      "text": "6.4. Field Specifier Format",
      "section_title": true,
      "ja": "6.4。フィールド指定子のフォーマット"
    },
    {
      "indent": 3,
      "text": "The type and length of the transmitted data is encoded in Field Specifiers within TinyIPFIX Template Records. The Field Specifier is shown in Figure 14 and is identical with the Field Specifier that was defined for IPFIX [RFC7011].",
      "ja": "送信されるデータのタイプと長さがTinyIPFIXテンプレートレコード内のフィールド指定子で符号化されます。フィールド指定子は、図14に示し、IPFIX [RFC7011]のために定義されたフィールド指定子と同一です。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|E|  Information Element ident. |        Field Length           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                      Enterprise Number                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 17,
      "text": "Figure 14: TinyIPFIX Data Field Specifier",
      "ja": "図14：TinyIPFIXデータフィールド指定子"
    },
    {
      "indent": 3,
      "text": "Where:",
      "ja": "どこ："
    },
    {
      "indent": 3,
      "text": "E",
      "ja": "絵"
    },
    {
      "indent": 6,
      "text": "Enterprise bit. This is the first bit of the Field Specifier. If this bit is zero, the Information Element Identifier identifies an IETF-specified Information Element, and the four-octet Enterprise Number field MUST NOT be present. If this bit is one, the Information Element Identifier identifies an enterprise-specific Information Element, and the Enterprise Number field MUST be present.",
      "ja": "エンタープライズビット。これは、フィールド指定子の最初のビットです。このビットがゼロの場合は、情報要素識別子は、IETF指定の情報要素を識別し、4オクテットエンタープライズ番号フィールドが存在してはなりません。このビットが1である場合、情報要素識別子は、企業固有の情報要素を識別し、エンタープライズNumberフィールドが存在しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Information Element Identifier",
      "ja": "情報要素識別子"
    },
    {
      "indent": 6,
      "text": "A numeric value that represents the type of Information Element.",
      "ja": "情報要素の種類を表す数値。"
    },
    {
      "indent": 3,
      "text": "Field Length",
      "ja": "フィールド長"
    },
    {
      "indent": 6,
      "text": "The length of the corresponding encoded Information Element, in octets. Refer to [RFC7012]. The value 65535 is illegal in TinyIPFIX, as variable-length Information Elements are not supported.",
      "ja": "オクテットに対応する符号化された情報要素の長さ、。 [RFC7012]を参照してください。可変長情報要素がサポートされないように値65535は、TinyIPFIXで違法です。"
    },
    {
      "indent": 3,
      "text": "Enterprise Number",
      "ja": "エンタープライズ番号"
    },
    {
      "indent": 6,
      "text": "IANA Private Enterprise Number of the authority defining the Information Element identifier in this Template Record.",
      "ja": "このテンプレートレコード内の情報要素識別子を定義する権限のIANA民間企業数。"
    },
    {
      "indent": 3,
      "text": "Vendors can easily define their own data model by registering a Enterprise ID with IANA. Using their own Enterprise ID, they can use any ID in the way they want them to use.",
      "ja": "ベンダーは、簡単にIANAでエンタープライズIDを登録することで、独自のデータモデルを定義することができます。自分のエンタープライズIDを使用して、彼らはそれらを使用する方法で、任意のIDを使用することができます。"
    },
    {
      "indent": 0,
      "text": "6.5. TinyIPFIX Data Record Format",
      "section_title": true,
      "ja": "6.5。 TinyIPFIXデータレコードのフォーマット"
    },
    {
      "indent": 3,
      "text": "The Data Records are sent in TinyIPFIX Data Sets. The format of the Data Records is shown in Figure 15 and matches the Data Record format from IPFIX.",
      "ja": "データレコードは、TinyIPFIXデータセットに送信されます。データレコードのフォーマットは図15に示し、IPFIXからデータレコードのフォーマットと一致しています。"
    },
    {
      "indent": 3,
      "text": "+--------------------------------------------------+\n| Field Value                                      |\n+--------------------------------------------------+\n| Field Value                                      |\n+--------------------------------------------------+\n...\n+--------------------------------------------------+\n| Field Value                                      |\n+--------------------------------------------------+",
      "raw": true
    },
    {
      "indent": 15,
      "text": "Figure 15: Data Record Format",
      "ja": "図15：データレコードのフォーマット"
    },
    {
      "indent": 0,
      "text": "7. TinyIPFIX Mediation",
      "section_title": true,
      "ja": "7. TinyIPFIX調停"
    },
    {
      "indent": 3,
      "text": "There are two types of TinyIPFIX Intermediate Processes. The first one can occur on the transition between a constrained network (e.g., 6LoWPAN) and the unconstrained network. This mediation changes the network and transport protocol from 6LoWPAN preferring UDP to IP/(SCTP|TCP|UDP) and is shown in Figure 16.",
      "ja": "TinyIPFIX中間プロセスの2つのタイプがあります。最初のものは、制約ネットワーク（例えば、6LoWPAN）と制約のないネットワークとの間の遷移で発生することができます。 （| TCP | UDP SCTP）この調停は、IP / UDPへの好む6LoWPANからネットワークおよびトランスポートプロトコルを変更し、図16に示されています。"
    },
    {
      "indent": 18,
      "text": " +-----------------------+\n |    TinyIPFIX Device   |\n | [Exporting Process]   |\n +-----------------------+\n                   |\n         TinyIPFIX |\n over 6LoWPAN/UDP  |\n                   v\n+-------------------------+\n|   TinyIPFIX mediator    |\n|   [Collecting Process]  |\n|   [Exporting Process]   |\n+-------------------------+\n                   |\nTinyIPFIX          |\nIP/(UDP/SCTP|TCP)  |\n                   v\n+--------------------------+\n|      Collector           |\n| [Collecting Process(es)] |\n+--------------------------+",
      "raw": true
    },
    {
      "indent": 10,
      "text": "Figure 16: Translation from TinyIPFIX over 6LoWPAN/UDP to TinyIPFIX over IP/(SCTP|TCP|UDP)",
      "ja": "図16：IP経由6LoWPAN / UDP経由TinyIPFIXからTinyIPFIXへの翻訳/（SCTP | TCP | UDP）"
    },
    {
      "indent": 3,
      "text": "The mediator removes the TinyIPFIX Messages from the 6LoWPAN/UDP packets and wraps them into the new network and transport protocols. Templates MUST be managed the same way as in the constrained environment after the translation to IP/(SCTP|UDP|TCP) (see Section 8).",
      "ja": "メディエータは、6LoWPAN / UDPパケットからTinyIPFIXメッセージを削除し、新しいネットワークおよびトランスポートプロトコルにそれらをラップします。 （セクション8を参照）テンプレートは、IP /（| | UDP TCP SCTP）への変換の後に制約された環境と同じ方法で管理する必要があります。"
    },
    {
      "indent": 3,
      "text": "The second type of mediation transforms TinyIPFIX into IPFIX. This process MUST be combined with the transport protocol mediation as shown in Figure 17.",
      "ja": "調停の第二のタイプは、IPFIXにTinyIPFIXを変換します。図17に示すように、このプロセスは、トランスポートプロトコル調停と組み合わせなければなりません。"
    },
    {
      "indent": 24,
      "text": "+-----------------------+\n|    TinyIPFIX Device   |\n| [Exporting Process]   |\n+-----------------------+\n                  |\n        TinyIPFIX |\n                  |\n                  v\n+-------------------------+\n|   TinyIPFIX mediator    |\n|   [Collecting Process]  |\n|   [Exporting Process]   |\n+-------------------------+\n                  |\n      IPFIX       |\nIP/(UDP/SCTP|TCP) |\n                  v\n+--------------------------+\n|      Collector           |\n| [Collecting Process(es)] |\n+--------------------------+",
      "raw": true
    },
    {
      "indent": 13,
      "text": "Figure 17: Transformation from TinyIPFIX to IPFIX",
      "ja": "図17：TinyIPFIXからIPFIXへの変換"
    },
    {
      "indent": 3,
      "text": "This mediation can also be performed by an IPFIX Collector before parsing the IPFIX message as shown in Figure 18. There is no need for a parser from TinyIPFIX to IPFIX if such a mediation process can be employed in front of an existing IPFIX collector.",
      "ja": "図18に示すように、この調停はまた、調停プロセスは、既存のIPFIXコレクタの前に使用することができる場合TinyIPFIXからIPFIXにパーサーは必要ありませんIPFIXメッセージを解析する前に、IPFIXコレクタによって行うことができます。"
    },
    {
      "indent": 3,
      "text": "+------------------------+                  +----------------------+\n|     TinyIPFIX Device   |    TinyIPFIX     |     IPFIX Mediator   |\n| [Exporting Processes]  |----------------->| [Collecting Process] |\n+------------------------+                  |  [Exporting Process] |\n                                            |         |            |\n                                            |         |IPFIX       |\n                                            |         |            |\n                                            |         v            |\n                                            |   Collector          |\n                                            | [Collecting Process] |\n                                            +----------------------+",
      "raw": true
    },
    {
      "indent": 13,
      "text": "Figure 18: Transformation from TinyIPFIX to IPFIX",
      "ja": "図18：TinyIPFIXからIPFIXへの変換"
    },
    {
      "indent": 3,
      "text": "The TinyIPFIX Mediation Process has to translate the TinyIPFIX Message Header, the TinyIPFIX Set Headers, and the TinyIPFIX Template Record Header into their counterparts in IPFIX. Afterwards, the new IPFIX Message Length needs to be calculated and inserted into the IPFIX Message header.",
      "ja": "TinyIPFIX仲介プロセスはIPFIXでの対応にTinyIPFIXメッセージヘッダ、TinyIPFIXセットのヘッダ、およびTinyIPFIXテンプレートレコードヘッダーを翻訳する必要があります。その後、新しいIPFIXメッセージ長を計算し、IPFIXメッセージのヘッダに挿入する必要があります。"
    },
    {
      "indent": 0,
      "text": "7.1. Expanding the Message Header",
      "section_title": true,
      "ja": "7.1。メッセージヘッダを拡大"
    },
    {
      "indent": 3,
      "text": "The fields of the IPFIX Message Header that are shown in Figure 5 can be determined from a TinyIPFIX Message Header as follows:",
      "ja": "次のように図5に示されているIPFIXメッセージヘッダーのフィールドはTinyIPFIXメッセージヘッダから決定することができます。"
    },
    {
      "indent": 3,
      "text": "Version",
      "ja": "版"
    },
    {
      "indent": 6,
      "text": "This is always 0x000a.",
      "ja": "これは、常に0x000aです。"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "The IPFIX Message Length can only be calculated after the complete TinyIPFIX Message has been translated. The new length can be calculated by adding the length of the IPFIX Message Header, which is 16 octets, and the length of all Sets that are contained in the IPFIX Message.",
      "ja": "完全TinyIPFIXメッセージが翻訳された後、IPFIXのメッセージの長さしか計算することができます。新しい長さは16オクテットであるIPFIXメッセージヘッダーの長さ、およびIPFIXメッセージに含まれているすべてのセットの長さを加算することによって計算することができます。"
    },
    {
      "indent": 3,
      "text": "Export Time",
      "ja": "エクスポート時間"
    },
    {
      "indent": 6,
      "text": "The \"Export Time\" MUST be generated by the Mediator, and contains the time in seconds since 00:00 UTC Jan 1, 1970, at which the IPFIX Message leaves the Mediator.",
      "ja": "「エクスポート時には、」メディエータによって生成され、およびIPFIXメッセージがメディエータを離れる時夜12時UTC 1970年1月1日以来の秒の時間が含まれていなければなりません。"
    },
    {
      "indent": 3,
      "text": "Sequence Number",
      "ja": "シーケンス番号"
    },
    {
      "indent": 6,
      "text": "If the TinyIPFIX Sequence Number has a length of 4 octets, the original value MUST be used for the IPFIX Message. If the TinyIPFIX Sequence Number has a size of one or two octets, the TinyIPFIX Mediator MUST expand the TinyIPFIX Sequence Number into a four octet field. If the TinyIPFIX Sequence Number was omitted, the Mediator needs to calculate the Sequence Number as per [RFC7011].",
      "ja": "TinyIPFIXシーケンス番号が4つのオクテットの長さを有している場合、元の値がIPFIXメッセージのために使用されなければなりません。 TinyIPFIXシーケンス番号は、1つのまたは2つのオクテットの大きさを持っている場合は、TinyIPFIXのメディエータは、4つのオクテットのフィールドにTinyIPFIXシーケンス番号を展開する必要があります。 TinyIPFIXシーケンス番号が省略された場合は、メディエータは、[RFC7011]ごとにシーケンス番号を計算する必要があります。"
    },
    {
      "indent": 3,
      "text": "Observation Domain ID",
      "ja": "観測ドメインID"
    },
    {
      "indent": 6,
      "text": "Since the Observation Domain ID is used to scope templates in IPFIX, it MUST be set to a unique value per TinyIPFIX Exporting Process, using either a mapping algorithmically determined by the Intermediate Process or directly configured by an administrator.",
      "ja": "観測ドメインIDはIPFIXにおけるスコープテンプレートに使用されるので、管理者が設定を直接アルゴリズム中間処理によって決定されたマッピングまたはいずれかを使用して、TinyIPFIXエクスポートプロセスごとに一意の値に設定しなければなりません。"
    },
    {
      "indent": 0,
      "text": "7.2. Translating the Set Headers",
      "section_title": true,
      "ja": "7.2。セットのヘッダを翻訳"
    },
    {
      "indent": 3,
      "text": "Both fields in the TinyIPFIX Set Header have a size of 1 octet and need to be expanded:",
      "ja": "TinyIPFIXセットのヘッダの両方のフィールドは1つのオクテットの大きさを持っており、拡張する必要があります。"
    },
    {
      "indent": 3,
      "text": "Set ID",
      "ja": "セットID"
    },
    {
      "indent": 6,
      "text": "The field needs to be expanded from 1 octet to 2 octets. If the Set ID is below 128, no recalculation needs to be performed. This is because all IDs below 128 are reserved for special messages and match the IDs used in IPFIX. The TinyIPFIX Set IDs starting with 128 identify TinyIPFIX Data Sets. Therefore, every TinyIPFIX Set ID above number 127 needs to be incremented by number 128 because IPFIX Data Set IDs are numbered above 255.",
      "ja": "フィールドは1つのオクテットから2つのオクテットに拡張する必要があります。セットIDが128未満の場合は、何も再計算を実行する必要がありません。 128以下のすべてのIDが特別なメッセージのために確保し、IPFIXで使用されるIDと一致しているためです。 128で始まるTinyIPFIXセットIDはTinyIPFIXデータセットを識別します。したがって、すべてのTinyIPFIXセットID上記数127は、IPFIXデータセットIDが255の上に番号付けされているので、番号128によってインクリメントされる必要があります。"
    },
    {
      "indent": 3,
      "text": "Set Length",
      "ja": "設定した長さ"
    },
    {
      "indent": 6,
      "text": "The field needs to be expanded from one octet to two octets. It needs to be recalculated by adding a value of 2 octets to match the additional size of the Set Header. For each TinyIPFIX Template Record that is contained in the TinyIPFIX Set, 2 more octets need to be added to the length.",
      "ja": "フィールドは1つのオクテットから2つのオクテットに拡張する必要があります。これは、セットヘッダの追加の大きさに合わせて、2つのオクテットの値を加算して再計算する必要があります。 TinyIPFIXセットに含まれる各TinyIPFIXテンプレートレコードのために、2つの以上のオクテットが長さに追加する必要があります。"
    },
    {
      "indent": 0,
      "text": "7.3. Expanding the Template Record Header",
      "section_title": true,
      "ja": "7.3。テンプレートレコードヘッダーを拡大"
    },
    {
      "indent": 3,
      "text": "Both fields in the TinyIPFIX Template Record Header have a length of one octet and therefore need translation:",
      "ja": "TinyIPFIXテンプレートレコードヘッダの両方のフィールドは1つのオクテットの長さを持っているので、翻訳が必要になります。"
    },
    {
      "indent": 3,
      "text": "Template ID",
      "ja": "テンプレートのID"
    },
    {
      "indent": 6,
      "text": "The field needs to be expanded from one octet to two octets. The Template ID needs to be increased by a value of 128.",
      "ja": "フィールドは1つのオクテットから2つのオクテットに拡張する必要があります。テンプレートIDは128の値だけ増加させる必要があります。"
    },
    {
      "indent": 3,
      "text": "Field Count",
      "ja": "フィールドカウント"
    },
    {
      "indent": 6,
      "text": "The field needs to be expanded from one octet to 2 octets.",
      "ja": "フィールドは1つのオクテットから2つのオクテットに拡張する必要があります。"
    },
    {
      "indent": 0,
      "text": "8. Template Management",
      "section_title": true,
      "ja": "8.テンプレート管理"
    },
    {
      "indent": 3,
      "text": "As with IPFIX, TinyIPFIX Template Management depends on the transport protocol used. If TCP or SCTP is used, it can be ensured that TinyIPFIX Templates are delivered reliably. If UDP is used, reliability cannot be guaranteed: template loss can occur. If a Template is lost on its way to the Collector, any following TinyIPFIX Data Records that refer to this TinyIPFIX Template cannot be decoded. Template Withdrawals are not supported in TinyIPFIX. This is generally not a problem, because most sensor nodes only define a single static template directly after booting.",
      "ja": "IPFIXと同じように、TinyIPFIXテンプレート管理は、使用されるトランスポートプロトコルに依存します。 TCPまたはSCTPを使用した場合、TinyIPFIXテンプレートが確実に配信されることを保証することができます。 UDPを使用する場合は、信頼性が保証できない：テンプレート損失が発生する可能性があります。テンプレートは、コレクターへの途中で失われた場合、このTinyIPFIXテンプレートを参照してください任意の次TinyIPFIXデータレコードは、復号化することができません。テンプレートの引き出しはTinyIPFIXでサポートされていません。ほとんどのセンサノードのみが起動した後、直接、単一の静的テンプレートを定義するので、これは、一般的に問題ではありません。"
    },
    {
      "indent": 0,
      "text": "8.1. TCP/SCTP",
      "section_title": true,
      "ja": "8.1。 TCP / SCTP"
    },
    {
      "indent": 3,
      "text": "If TCP or SCTP is used for the transmission of TinyIPFIX, Template Management MUST be performed as defined in [RFC7011] for IPFIX, with the exception of Template Withdrawals, which are not supported in TinyIPFIX. Template Withdrawals MUST NOT be sent by TinyIPFIX Exporters.",
      "ja": "TCP又はSCTPはTinyIPFIXの送信のために使用される場合TinyIPFIXでサポートされていないテンプレートの引き出し、を除いて、IPFIXのために[RFC7011]で定義されるように、テンプレート管理が行われなければなりません。テンプレートの引き出しはTinyIPFIX輸出で送ってはいけません。"
    },
    {
      "indent": 0,
      "text": "8.2. UDP",
      "section_title": true,
      "ja": "8.2。 UDP"
    },
    {
      "indent": 3,
      "text": "All specifications for Template Management from [RFC7011] apply unless specified otherwise in this document.",
      "ja": "この文書で特に指定しない限り、[RFC7011]から[テンプレートの管理のためのすべての仕様が適用されます。"
    },
    {
      "indent": 3,
      "text": "TinyIPFIX Templates MUST be sent by a TinyIPFIX Exporter before any TinyIPFIX Data Set that refers to the TinyIPFIX Template is transmitted. TinyIPFIX Templates are not expected to change over time in TinyIPFIX and, thus, they should be pre-shared. TinyIPFIX Devices have a default setup when deployed; after booting, they announce their TinyIPFIX Template directly to the network and MAY repeat it if UDP is used. Hence, a TinyIPFIX Template that has been sent once MAY NOT be withdrawn and MUST NOT expire. If a TinyIPFIX Smart Meter wants to use another TinyIPFIX Template, it MUST use a new TinyIPFIX Template ID for the TinyIPFIX Template.",
      "ja": "TinyIPFIXテンプレートは送信されTinyIPFIXテンプレートを指し、任意のTinyIPFIXデータセットの前にTinyIPFIX輸出業者によって送らなければなりません。 TinyIPFIXテンプレートは、このように、彼らは事前共有すべき、TinyIPFIXの経時変化とすることが予想されていません。 TinyIPFIXデバイスが展開され、デフォルトの設定を持っています。ブートした後、彼らはネットワークに直接自分のTinyIPFIXテンプレートを発表し、UDPが使用されている場合は、それを繰り返してもよいです。そのため、一度送信されていTinyIPFIXテンプレートを取り下げることができないと、有効期限が切れてはなりません。 TinyIPFIXスマートメーターは、別のTinyIPFIXテンプレートを使用したい場合は、TinyIPFIXテンプレートの新しいTinyIPFIXテンプレートIDを使用しなければなりません。"
    },
    {
      "indent": 3,
      "text": "While UDP is used, reliable transport of TinyIPFIX Templates cannot be, guaranteed and TinyIPFIX Templates can be lost. A TinyIPFIX Exporter MUST expect TinyIPFIX Template loss. Therefore, it MUST re-send its TinyIPFIX Templates periodically. A TinyIPFIX Template MUST be re-sent after a fixed number N of TinyIPFIX Messages that contain TinyIPFIX Data Sets referring to the TinyIPFIX Template. The number N MUST be configured by the application developer. Retransmission and the specification of N can be avoided if TinyIPFIX Exporter and TinyIPFIX Collector use pre-shared templates.",
      "ja": "UDPが使用されているが、TinyIPFIXテンプレートの信頼性の高い輸送は、保証することはできませんとTinyIPFIXテンプレートが失われることがあります。 TinyIPFIX ExporterはTinyIPFIXテンプレートの損失を期待しなければなりません。そのため、定期的にそのTinyIPFIXテンプレートを再送信しなければなりません。 TinyIPFIXテンプレートTinyIPFIXデータTinyIPFIXテンプレートへの参照を設定含むTinyIPFIXメッセージの固定数Nの後に再送信されなければなりません。数Nは、アプリケーション開発者によって構成されなければなりません。 TinyIPFIX輸出業者とTinyIPFIXコレクタは、事前共有テンプレートを使用する場合は、再送信及びNの仕様を回避することができます。"
    },
    {
      "indent": 0,
      "text": "9. Security Considerations",
      "section_title": true,
      "ja": "9.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "The same security considerations as for the IPFIX Protocol [RFC7011] apply.",
      "ja": "IPFIXプロトコル[RFC7011]適用のためのと同じセキュリティ上の考慮事項。"
    },
    {
      "indent": 0,
      "text": "10. IANA Considerations",
      "section_title": true,
      "ja": "10. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "This document does not require any IANA actions.",
      "ja": "このドキュメントは、IANAのアクションを必要としません。"
    },
    {
      "indent": 0,
      "text": "11. References",
      "section_title": true,
      "ja": "11.参考文献"
    },
    {
      "indent": 0,
      "text": "11.1. Normative References",
      "section_title": true,
      "ja": "11.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <https://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<https://www.rfc-editor.org/info/ RFC2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC4944] Montenegro, G., Kushalnagar, N., Hui, J., and D. Culler, \"Transmission of IPv6 Packets over IEEE 802.15.4 Networks\", RFC 4944, DOI 10.17487/RFC4944, September 2007, <https://www.rfc-editor.org/info/rfc4944>.",
      "ja": "[RFC4944]モンテネグロ、G.、クシャルナガル、N.、ホイ、J.、およびD. Culler、 \"IEEE上IPv6パケットの送信802.15.4ネットワーク\"、RFC 4944、DOI 10.17487 / RFC4944、2007年9月、<HTTPS： //www.rfc-editor.org/info/rfc4944>。"
    },
    {
      "indent": 3,
      "text": "[RFC5153] Boschi, E., Mark, L., Quittek, J., Stiemerling, M., and P. Aitken, \"IP Flow Information Export (IPFIX) Implementation Guidelines\", RFC 5153, DOI 10.17487/RFC5153, April 2008, <https://www.rfc-editor.org/info/rfc5153>.",
      "ja": "[RFC5153]ボスキ、E.、マーク、L.、Quittek、J.、Stiemerling、M.、およびP.エイトケン、 \"IPフロー情報のエクスポート（IPFIX）実装ガイドライン\"、RFC 5153、DOI 10.17487 / RFC5153、2008年4月、<https://www.rfc-editor.org/info/rfc5153>。"
    },
    {
      "indent": 3,
      "text": "[RFC5470] Sadasivan, G., Brownlee, N., Claise, B., and J. Quittek, \"Architecture for IP Flow Information Export\", RFC 5470, DOI 10.17487/RFC5470, March 2009, <https://www.rfc-editor.org/info/rfc5470>.",
      "ja": "[RFC5470] Sadasivan、G.、ブラウンリー、N.、Claise、B.、およびJ. Quittek、 \"IPフロー情報のエクスポートのためのアーキテクチャ\"、RFC 5470、DOI 10.17487 / RFC5470、2009年3月、<https：//でWWW。 rfc-editor.org/info/rfc5470>。"
    },
    {
      "indent": 3,
      "text": "[RFC5982] Kobayashi, A., Ed. and B. Claise, Ed., \"IP Flow Information Export (IPFIX) Mediation: Problem Statement\", RFC 5982, DOI 10.17487/RFC5982, August 2010, <https://www.rfc-editor.org/info/rfc5982>.",
      "ja": "[RFC5982]小林、A.編。そしてB. Claise、エド、 \"IPフロー情報のエクスポート（IPFIX）調停：問題文\"、RFC 5982、DOI 10.17487 / RFC5982、2010年8月、<https://www.rfc-editor.org/info/rfc5982> 。"
    },
    {
      "indent": 3,
      "text": "[RFC6183] Kobayashi, A., Claise, B., Muenz, G., and K. Ishibashi, \"IP Flow Information Export (IPFIX) Mediation: Framework\", RFC 6183, DOI 10.17487/RFC6183, April 2011, <https://www.rfc-editor.org/info/rfc6183>.",
      "ja": "[RFC6183]小林、A.、Claise、B.、Muenz、G.、及びK.石橋、 \"IPフロー情報エクスポート（IPFIX）メディエーション：フレームワーク\"、RFC 6183、DOI 10.17487 / RFC6183、2011年4月、<HTTPS： //www.rfc-editor.org/info/rfc6183>。"
    },
    {
      "indent": 3,
      "text": "[RFC7011] Claise, B., Ed., Trammell, B., Ed., and P. Aitken, \"Specification of the IP Flow Information Export (IPFIX) Protocol for the Exchange of Flow Information\", STD 77, RFC 7011, DOI 10.17487/RFC7011, September 2013, <https://www.rfc-editor.org/info/rfc7011>.",
      "ja": "[RFC7011] Claise、B.、編。、トラメル、B.、編、及びP.エイトケン、 \"フロー情報を交換するためのIPフロー情報エクスポート（IPFIX）プロトコルの仕様\"、STD 77、RFC 7011、 DOI 10.17487 / RFC7011、2013年9月、<https://www.rfc-editor.org/info/rfc7011>。"
    },
    {
      "indent": 3,
      "text": "[RFC7012] Claise, B., Ed. and B. Trammell, Ed., \"Information Model for IP Flow Information Export (IPFIX)\", RFC 7012, DOI 10.17487/RFC7012, September 2013, <https://www.rfc-editor.org/info/rfc7012>.",
      "ja": "[RFC7012] Claise、B.、エド。そしてB.トラメル、エド。、 \"IPフロー情報のエクスポート（IPFIX）のための情報モデル\"、RFC 7012、DOI 10.17487 / RFC7012、2013年9月、<https://www.rfc-editor.org/info/rfc7012>。"
    },
    {
      "indent": 3,
      "text": "[RFC8174] Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174, May 2017, <https://www.rfc-editor.org/info/rfc8174>.",
      "ja": "[RFC8174] Leiba、B.、 \"RFC 2119個のキーワードに小文字VS大文字の曖昧さ\"、BCP 14、RFC 8174、DOI 10.17487 / RFC8174、2017年5月、<https://www.rfc-editor.org/info/ rfc8174>。"
    },
    {
      "indent": 0,
      "text": "11.2. Informative References",
      "section_title": true,
      "ja": "11.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[Advantic] ADVANTIC SISTEMAS Y SERVICIOS S.L., <https://www.advanticsys.com/>, 2017.",
      "ja": "[Advantic] ADVANTICのシステムとサービスS.L.、<https://www.advanticsys.com/>、2017年。"
    },
    {
      "indent": 3,
      "text": "[GreatDuck] Mainwaring, A., Polastre, J., Szewczyk, R., Culler, D., and J. Anderson, \"Wireless Sensor Networks for Habitat Monitoring\", In Proceedings of the 1st ACM international workshop on Wireless sensor networks and applications ACM, pp. 88-97, DOI 10.1145/570738.570751, 2002.",
      "ja": "【GreatDuck] Mainwaring、A.、Polastre、J.、Szewczyk、R.、Culler、D.、およびJ.アンダーソン、 \"生息地モニタリングのための無線センサネットワーク\"、ワイヤレスセンサーネットワーク上の第1回ACM国際ワークショップの議事録において及びアプリケーションのACM、PP。88-97、DOI 10.1145 / 570738.570751、2002。"
    },
    {
      "indent": 3,
      "text": "[Harvan08] Harvan, M. and J. Schoenwaelder, \"TinyOS Motes on the Internet: IPv6 over 802.15.4 (6LoWPAN)\", DOI 10.1515/piko.2008.0042, December 2008.",
      "ja": "【Harvan08] Harvan、M.及びJ. Schoenwaelder、 \"インターネット上のTinyOSのMote：802.15.4上のIPv6（6LoWPAN）\"、DOI 10.1515 / piko.2008.0042 2008年12月。"
    },
    {
      "indent": 3,
      "text": "[IRIS] Memsic, \"Data Sheet IRIS\", 2017, <http://www.memsic.com/userfiles/files/Datasheets/WSN/ IRIS_Datasheet.pdf>.",
      "ja": "[IRIS] MEMSIC、 \"データシートIRIS\"、2017年、<http://www.memsic.com/userfiles/files/Datasheets/WSN/ IRIS_Datasheet.pdf>。"
    },
    {
      "indent": 3,
      "text": "[Kim07] Kim, S., Pakzad, S., Culler, D., Demmel, J., Fenves, G., Glaser, S., and M. Turon, \"Health monitoring of civil infrastructures using wireless sensor networks\", Proceedings of the 6th international conference on Information processing in sensor networks (IPSN 2007), Cambridge, MA, ACM Press, pp. 254-263, DOI 10.1145/1236360.1236395, April 2007.",
      "ja": "【Kim07】キム、S.、Pakzad、S.、Culler、D.、Demmel、J.、Fenves、G.、グレイザー、S.、およびM. Turon、 \"無線センサネットワークを用いた土木インフラストラクチャのヘルスモニタリング\"、センサネットワークにおける情報の処理に関する第6回国際会議の議事録（2007年IPSN）、ケンブリッジ、MA、ACMプレス、頁254から263、DOI 10.1145 / 1236360.1236395、2007年4月。"
    },
    {
      "indent": 3,
      "text": "[Kothmayr10] Kothmayr, T., \"Data Collection in Wireless Sensor Networks for Autonomic Home Networking\", Bachelor Thesis, Technical University of Munich, Munich, Germany, January 2010.",
      "ja": "[Kothmayr10] Kothmayr、T.、卒業論文、ミュンヘン工科大学、ミュンヘン、ドイツ、2010年1月「自律ホームネットワーキングのための無線センサネットワークにおけるデータ収集」。"
    },
    {
      "indent": 3,
      "text": "[openMote] openMote Technologies S.L., 2017, <http://openmote.com>.",
      "ja": "[openMote] openMoteテクノロジーズS.L.、2017年、<http://openmote.com>。"
    },
    {
      "indent": 3,
      "text": "[Schmitt09] Schmitt, C. and G. Carle, \"Applications for Wireless Sensor Networks\", Handbook of Research on P2P and Grid Systems for Service-Oriented Computing: Models, Methodologies and Applications, Edited by Antonopoulos N., Exarchakos G., Li M., and A. Liotta, Information Science Publishing, Chapter 46, pp. 1076-1091, ISBN: 978-1615206865, 2010.",
      "ja": "[Schmitt0​​9]シュミット、C.およびG.カール、「無線センサネットワークのためのアプリケーション」、サービス指向コンピューティングのためのP2Pに関する研究やグリッドシステムのハンドブック：Antonopoulos N.、Exarchakos G.編モデル、方法論と応用、李M.、およびA.リオッタ、情報科学出版、第46章、頁1076年から1091年、ISBN：978から1615206865、2010。"
    },
    {
      "indent": 3,
      "text": "[Schmitt2014] Schmitt, C., Kothmayr, T., Ertl, B., Hu, W., Braun, L., and G. Carle, \"TinyIPFIX: An efficient application protocol for data exchange in cyber physical systems\", Computer Communications, ELSEVIER, Vol. 74, pp. 63-76, DOI 10.1016/j.comcom.2014.05.012, 2016.",
      "ja": "【Schmitt2014】シュミット、C.、Kothmayr、T.、エルトル、B.、フー、W.、ブラウン、L.、及びG.カール、 \"TinyIPFIX：サイバー物理システムにおけるデータ交換のための効率的なアプリケーションプロトコル\"、コンピュータコミュニケーション、ELSEVIER、巻。 74頁63-76、DOI 10.1016 / j.comcom.2014.05.012、2016。"
    },
    {
      "indent": 3,
      "text": "[Schmitt2017] Schmitt, C., Anliker, C., and B. Stiller, \"Efficient and Secure Pull Requests for Emergency Cases Using a Mobile Access Framework\", Managing the Web of Things: Linking the Real World to the Web, Edited by Sheng, M., Qin, Y., Yao, L., and B. Benatallah, Morgen Kaufmann (imprint of Elsevier), Chapter 8, pp. 229-247, ISBN: 978-0-12-809764-9, 2017.",
      "ja": "[Schmitt2017]シュミット、C.、Anliker、C.、およびB.スティラー、物事のウェブの管理、「モバイルアクセスフレームワークを使用した緊急時のための効率的で安全なプル要求」：編、Webに実世界をリンク。978-0-12-809764-9、2017：、M.、秦、Y.、ヤオ、L.、及びB. Benatallah、モルゲンカウフマン（エルゼビアのインプリント）、第8章、229から247頁、ISBN盛。"
    },
    {
      "indent": 3,
      "text": "[SMPC04] Szewczyk, R., Mainwaring, A., Polastre, J., and D. Culler, \"An analysis of a large scale habitat monitoring application\", Proceedings of the 2nd international conference on Embedded networked sensor systems (SenSys 04), DOI 10.1145/1031495.1031521, November 2004.",
      "ja": "【SMPC04] Szewczyk、R.、Mainwaring、A.、Polastre、J.、およびD. Culler、「大規模な生息環境監視アプリケーションの分析」、組み込みネットワークセンサシステム（SENSYS 04）上の第2回国際会議の議事録、DOI 10.1145 / 1031495.1031521、2004年11月。"
    },
    {
      "indent": 3,
      "text": "[TelosB] Memsic, \"Data Sheet TelosB\", 2017, <http://www.memsic.com/userfiles/files/DataSheets/WSN/ telosb_datasheet.pdf>.",
      "ja": "【TelosB] MEMSIC、 \"データシートTelosB\"、2017年、<http://www.memsic.com/userfiles/files/DataSheets/WSN/ telosb_datasheet.pdf>。"
    },
    {
      "indent": 3,
      "text": "[Tolle05] Tolle, G., Polastre, J., Szewczyk, R., Culler, D., Turner, N., Tu, K., Burgess, S., Dawnson, T., Buonadonna, P., Gay, D., and W. Hong, \"A macroscope in the redwoods\", Proceedings of the 3rd international conference on Embedded networked sensor systems (SenSys 05), DOI 10.1145/1098918.1098925, November 2005.",
      "ja": "【Tolle05] Tolleの、G.、Polastre、J.、Szewczyk、R.、Culler、D.、ターナー、N.、火、K.、バージェス、S.、Dawnson、T.、Buonadonna、P.、ゲイ、 D.、およびW.香港、「レッドウッドでマクロスコープ」、組み込みネットワーク・センサシステム（SENSYS 05）の第3回国際会議の議事録、DOI 10.1145 / 1098918.1098925、2005年11月。"
    },
    {
      "indent": 0,
      "text": "Acknowledgments",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Many thanks to Lothar Braun, Georg Carle, and Benoit Claise, who contributed significant work to earlier draft versions of this work, especially to the document titled \"Compressed IPFIX for Smart Meters in Constrained Networks\".",
      "ja": "特に「制約ネットワークにおけるスマートメーターのために圧縮されたIPFIX」と題する文書に、この作品の以前のドラフトバージョンに重要な仕事を貢献ローター・ブラウン、ゲオルク・カール、そしてブノワClaise、に感謝します。"
    },
    {
      "indent": 3,
      "text": "Many thanks to Thomas Kothmayr, Michael Meister, and Livio Sgier, who implemented TinyIPFIX (except the mediator) for TinyOS 2.x and Contiki 2.7/3.0 for 3 different sensor platforms (IRIS, TelosB, and OpenMote).",
      "ja": "トーマスKothmayr、マイケル・マイスター、およびリビオSgier、（仲介者を除く）TinyIPFIXを実装のTinyOS 2.xのためと3種類のセンサープラットフォーム用コンチキ2.7 / 3.0（IRIS、TelosB、およびOpenMote）に感謝します。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Corinna Schmitt University of Zurich Department of Informatics Communication Systems Group Binzmuehlestrasse 14 Zurich 8050 Switzerland",
      "ja": "情報通信システムグループBinzmuehlestrasseのチューリッヒ部門14チューリッヒ8050スイスのコリーナ・シュミット大学"
    },
    {
      "indent": 3,
      "text": "Email: schmitt@ifi.uzh.ch",
      "ja": "メール：schmitt@ifi.uzh.ch"
    },
    {
      "indent": 3,
      "text": "Burkhard Stiller University of Zurich Department of Informatics Communication Systems Group Binzmuehlestrasse 14 Zurich 8050 Switzerland",
      "ja": "情報通信システムグループBinzmuehlestrasseのチューリッヒ部門14チューリッヒ8050スイスのブルクハルト・スティラー大学"
    },
    {
      "indent": 3,
      "text": "Email: stiller@ifi.uzh.ch",
      "ja": "メール：stiller@ifi.uzh.ch"
    },
    {
      "indent": 3,
      "text": "Brian Trammell Swiss Federal Institute of Technology Gloriastrasse 35 Zurich 8092 Switzerland",
      "ja": "テクノロジーのブライアン・トラメル、スイス連邦工科大学Gloriastrasse 35チューリッヒ8092スイス"
    },
    {
      "indent": 3,
      "text": "Email: ietf@trammell.ch",
      "ja": "メール：ietf@trammell.ch"
    }
  ]
}