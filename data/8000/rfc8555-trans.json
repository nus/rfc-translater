{
  "title": {
    "text": "RFC 8555 - Automatic Certificate Management Environment (ACME)",
    "ja": "RFC 8555 - 自動証明書管理環境（ACME）"
  },
  "number": 8555,
  "created_at": "2019-10-30 03:02:15.938925+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                         R. Barnes\nRequest for Comments: 8555                                         Cisco\nCategory: Standards Track                             J. Hoffman-Andrews\nISSN: 2070-1721                                                      EFF\n                                                             D. McCarney\n                                                           Let's Encrypt\n                                                               J. Kasten\n                                                  University of Michigan\n                                                              March 2019",
      "raw": true
    },
    {
      "indent": 10,
      "text": "Automatic Certificate Management Environment (ACME)",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "Public Key Infrastructure using X.509 (PKIX) certificates are used for a number of purposes, the most significant of which is the authentication of domain names. Thus, certification authorities (CAs) in the Web PKI are trusted to verify that an applicant for a certificate legitimately represents the domain name(s) in the certificate. As of this writing, this verification is done through a collection of ad hoc mechanisms. This document describes a protocol that a CA and an applicant can use to automate the process of verification and certificate issuance. The protocol also provides facilities for other certificate management functions, such as certificate revocation.",
      "ja": "公開鍵インフラストラクチャ使用してX.509（PKIX）証明書は、ドメイン名の認証で最も重要なその多数の目的のために使用されています。このように、ウェブPKIでの証明機関（CA）が証明書の申請者が合法的に証明書のドメイン名（複数可）を表していることを確認するために信頼されています。この記事の執筆時点では、この検証は、アドホックメカニズムのコレクションを介して行われます。このドキュメントでは、CAと申請者が検証し、証明書発行のプロセスを自動化するために使用できるプロトコルについて説明します。プロトコルはまた、証明書失効のような他の証明書管理機能のための機能を提供します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 7841.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 7841のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc8555.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttps://www.rfc-editor.org/info/rfc8555で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2019 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2019 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（https://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................4\n2. Deployment Model and Operator Experience ........................5\n3. Terminology .....................................................7\n4. Protocol Overview ...............................................7\n5. Character Encoding .............................................10\n6. Message Transport ..............................................10\n   6.1. HTTPS Requests ............................................10\n   6.2. Request Authentication ....................................11\n   6.3. GET and POST-as-GET Requests ..............................13\n   6.4. Request URL Integrity .....................................13\n        6.4.1. \"url\" (URL) JWS Header Parameter ...................14\n   6.5. Replay Protection .........................................14\n        6.5.1. Replay-Nonce .......................................15\n        6.5.2. \"nonce\" (Nonce) JWS Header Parameter ...............16\n   6.6. Rate Limits ...............................................16\n   6.7. Errors ....................................................16\n        6.7.1. Subproblems ........................................18\n7. Certificate Management .........................................20\n   7.1. Resources .................................................20\n        7.1.1. Directory ..........................................23\n        7.1.2. Account Objects ....................................24\n        7.1.3. Order Objects ......................................26\n        7.1.4. Authorization Objects ..............................28\n        7.1.5. Challenge Objects ..................................30\n        7.1.6. Status Changes .....................................30\n   7.2. Getting a Nonce ...........................................34\n   7.3. Account Management ........................................34\n        7.3.1. Finding an Account URL Given a Key .................36\n        7.3.2. Account Update .....................................37\n        7.3.3. Changes of Terms of Service ........................38\n        7.3.4. External Account Binding ...........................38",
      "raw": true
    },
    {
      "indent": 3,
      "text": "        7.3.5. Account Key Rollover ...............................40\n        7.3.6. Account Deactivation ...............................43\n   7.4. Applying for Certificate Issuance .........................44\n        7.4.1. Pre-authorization ..................................49\n        7.4.2. Downloading the Certificate ........................51\n   7.5. Identifier Authorization ..................................53\n        7.5.1. Responding to Challenges ...........................54\n        7.5.2. Deactivating an Authorization ......................57\n   7.6. Certificate Revocation ....................................58\n8. Identifier Validation Challenges ...............................60\n   8.1. Key Authorizations ........................................62\n   8.2. Retrying Challenges .......................................63\n   8.3. HTTP Challenge ............................................63\n   8.4. DNS Challenge .............................................66\n9. IANA Considerations ............................................68\n   9.1. Media Type: application/pem-certificate-chain .............68\n   9.2. Well-Known URI for the HTTP Challenge .....................69\n   9.3. Replay-Nonce HTTP Header ..................................69\n   9.4. \"url\" JWS Header Parameter ................................70\n   9.5. \"nonce\" JWS Header Parameter ..............................70\n   9.6. URN Sub-namespace for ACME (urn:ietf:params:acme) .........70\n   9.7. New Registries ............................................71\n        9.7.1. Fields in Account Objects ..........................71\n        9.7.2. Fields in Order Objects ............................72\n        9.7.3. Fields in Authorization Objects ....................73\n        9.7.4. Error Types ........................................74\n        9.7.5. Resource Types .....................................74\n        9.7.6. Fields in the \"meta\" Object within a\n               Directory Object ...................................75\n        9.7.7. Identifier Types ...................................76\n        9.7.8. Validation Methods .................................76\n10. Security Considerations .......................................78\n   10.1. Threat Model .............................................78\n   10.2. Integrity of Authorizations ..............................80\n   10.3. Denial-of-Service Considerations .........................83\n   10.4. Server-Side Request Forgery ..............................84\n   10.5. CA Policy Considerations .................................84\n11. Operational Considerations ....................................86\n   11.1. Key Selection ............................................86\n   11.2. DNS Security .............................................87\n   11.3. Token Entropy ............................................88\n   11.4. Malformed Certificate Chains .............................88\n12. References ....................................................88\n   12.1. Normative References .....................................88\n   12.2. Informative References ...................................92\nAcknowledgements ..................................................94\nAuthors' Addresses ................................................95",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "Certificates [RFC5280] in the Web PKI are most commonly used to authenticate domain names. Thus, certification authorities (CAs) in the Web PKI are trusted to verify that an applicant for a certificate legitimately represents the domain name(s) in the certificate.",
      "ja": "ウェブPKIでの証明書[RFC5280]は、最も一般的なドメイン名を認証するために使用されています。このように、ウェブPKIでの証明機関（CA）が証明書の申請者が合法的に証明書のドメイン名（複数可）を表していることを確認するために信頼されています。"
    },
    {
      "indent": 3,
      "text": "Different types of certificates reflect different kinds of CA verification of information about the certificate subject. \"Domain Validation\" (DV) certificates are by far the most common type. The only validation the CA is required to perform in the DV issuance process is to verify that the requester has effective control of the domain [CABFBR]. The CA is not required to attempt to verify the requester's real-world identity. (This is as opposed to \"Organization Validation\" (OV) and \"Extended Validation\" (EV) certificates, where the process is intended to also verify the real-world identity of the requester.)",
      "ja": "証明書のさまざまな種類の証明書のサブジェクトに関する情報のCA検証の種類を反映しています。 「ドメインの検証」（DV）の証明書は、これまでで最も一般的なタイプです。 CAは、DV発行プロセスで実行するために必要とされる唯一の検証は、要求がドメイン[CABFBR]の効果的な制御を有していることを確認することです。 CAは、要求者の現実世界の身元を確認しようとする必要はありません。 （プロセスはまた、依頼者の現実世界の身元を確認するために意図された「組織の検証」（OV）と「拡張検証」へ（EV）証明書を、対照的に、これがあります。）"
    },
    {
      "indent": 3,
      "text": "Existing Web PKI certification authorities tend to use a set of ad hoc protocols for certificate issuance and identity verification. In the case of DV certificates, a typical user experience is something like:",
      "ja": "既存のWeb PKI証明機関は、証明書発行及び本人確認のためのアドホックプロトコルのセットを使用する傾向があります。 DV証明書の場合は、一般的なユーザーエクスペリエンスのようなものです："
    },
    {
      "indent": 3,
      "text": "o Generate a PKCS#10 [RFC2986] Certificate Signing Request (CSR).",
      "ja": "O PKCS＃10 [RFC2986]証明書署名要求（CSR）を生成します。"
    },
    {
      "indent": 3,
      "text": "o Cut and paste the CSR into a CA's web page.",
      "ja": "O CAのWebページにCSRをカットして貼り付けます。"
    },
    {
      "indent": 3,
      "text": "o Prove ownership of the domain(s) in the CSR by one of the following methods:",
      "ja": "O次のいずれかの方法でCSR内のドメイン（単数または複数）の所有権を証明します。"
    },
    {
      "indent": 6,
      "text": "* Put a CA-provided challenge at a specific place on the web server.",
      "ja": "* Webサーバ上の特定の場所にCAが提供する挑戦を入れてください。"
    },
    {
      "indent": 6,
      "text": "* Put a CA-provided challenge in a DNS record corresponding to the target domain.",
      "ja": "*ターゲットドメインに対応するDNSレコードのCAが提供する挑戦を入れてください。"
    },
    {
      "indent": 6,
      "text": "* Receive a CA-provided challenge at (hopefully) an administrator-controlled email address corresponding to the domain, and then respond to it on the CA's web page.",
      "ja": "*ドメインに対応する（たぶん）管理者が制御メールアドレスでCAが提供する挑戦を受信した後、CAのWebページ上でそれに応じます。"
    },
    {
      "indent": 3,
      "text": "o Download the issued certificate and install it on the user's Web Server.",
      "ja": "O発行された証明書をダウンロードして、利用者のウェブサーバーにインストールします。"
    },
    {
      "indent": 3,
      "text": "With the exception of the CSR itself and the certificates that are issued, these are all completely ad hoc procedures and are accomplished by getting the human user to follow interactive natural-language instructions from the CA rather than by machine-implemented published protocols. In many cases, the instructions are difficult to follow and cause significant frustration and confusion. Informal usability tests by the authors indicate that webmasters often need 1-3 hours to obtain and install a certificate for a domain. Even in the best case, the lack of published, standardized mechanisms presents an obstacle to the wide deployment of HTTPS and other PKIX-dependent systems because it inhibits mechanization of tasks related to certificate issuance, deployment, and revocation.",
      "ja": "CSRそのものと、発行された証明書を除き、これらは完全にすべてのアドホックな手順であり、機械、実装公表されたプロトコルにより、CAからの対話型自然言語の指示に従うのではなく、人間のユーザーを取得することによって達成されます。多くの場合、命令が続くと大きな不満や混乱を引き起こすことは困難です。著者による非公式ユーザビリティテストは、ウェブマスターが、多くの場合、ドメインの証明書を入手してインストールするために、1〜3時間が必要であることを示しています。でも最良の場合には、公表され、標準化されたメカニズムの欠如は、HTTPSおよび他のPKIX依存のシステムには、証明書発行、展開、および失効に関連するタスクの機械化を阻害するための幅広い展開に障害となっています。"
    },
    {
      "indent": 3,
      "text": "This document describes an extensible framework for automating the issuance and domain validation procedure, thereby allowing servers and infrastructure software to obtain certificates without user interaction. Use of this protocol should radically simplify the deployment of HTTPS and the practicality of PKIX-based authentication for other protocols based on Transport Layer Security (TLS) [RFC8446].",
      "ja": "この文書は、発行およびドメイン検証手順を自動化することにより、サーバーやインフラストラクチャソフトウェアがユーザーの操作なしで証明書を取得することを可能にするための拡張可能なフレームワークを記述しています。このプロトコルの使用は根本HTTPSの展開およびTransport Layer Security（TLS）に基づいて他のプロトコル[RFC8446]のためのPKIXベースの認証の実用性を簡素化する必要があります。"
    },
    {
      "indent": 3,
      "text": "It should be noted that while the focus of this document is on validating domain names for purposes of issuing certificates in the Web PKI, ACME supports extensions for uses with other identifiers in other PKI contexts. For example, as of this writing, there is ongoing work to use ACME for issuance of Web PKI certificates attesting to IP addresses [ACME-IP] and Secure Telephone Identity Revisited (STIR) certificates attesting to telephone numbers [ACME-TELEPHONE].",
      "ja": "この文書の焦点はウェブPKIに証明書を発行する目的のためにドメイン名を検証する上にある間、ACMEは、他のPKIコンテキスト内の他の識別子との用途のための拡張機能をサポートしていることに留意すべきです。たとえば、これを書いている時点では、電話番号[ACME-TELEPHONE]を証明するIPアドレス[ACME-IP]およびセキュア電話アイデンティティ再訪（STIR）証明書を証明するウェブPKI証明書を発行するためにACMEを使用するための継続的な作業があります。"
    },
    {
      "indent": 3,
      "text": "ACME can also be used to automate some aspects of certificate management even where non-automated processes are still needed. For example, the external account binding feature (see Section 7.3.4) can allow an ACME account to use authorizations that have been granted to an external, non-ACME account. This allows ACME to address issuance scenarios that cannot yet be fully automated, such as the issuance of \"Extended Validation\" certificates.",
      "ja": "ACMEは、非自動化プロセスがまだ必要とされても、証明書管理のいくつかの側面を自動化するために使用することができます。例えば、特徴を結合外部アカウントは、ACMEアカウントが外部の非ACMEアカウントに付与された権限を使用できるようにすることができます（7.3.4項を参照します）。これは、ACMEは、このような「拡張検証」証明書の発行など、まだ完全に自動化することができません発行のシナリオに対処することができます。"
    },
    {
      "indent": 0,
      "text": "2. Deployment Model and Operator Experience",
      "section_title": true,
      "ja": "2.展開モデルとオペレータの経験"
    },
    {
      "indent": 3,
      "text": "The guiding use case for ACME is obtaining certificates for websites (HTTPS [RFC2818]). In this case, a web server is intended to speak for one or more domains, and the process of certificate issuance is intended to verify that this web server actually speaks for the domain(s).",
      "ja": "ACMEのためのガイドユースケースは、Webサイトの証明書を得ることである（HTTPS [RFC2818]）。この場合、ウェブサーバは、1つまたは複数のドメインのために話すことを意図されており、証明書発行のプロセスは、このウェブサーバは、実際のドメイン（単数または複数）のために話すことを検証することを意図しています。"
    },
    {
      "indent": 3,
      "text": "DV certificate validation commonly checks claims about properties related to control of a domain name -- properties that can be observed by the certificate issuer in an interactive process that can be conducted purely online. That means that under typical circumstances, all steps in the request, verification, and issuance process can be represented and performed by Internet protocols with no out-of-band human intervention.",
      "ja": "純粋にオンラインで行うことができるインタラクティブなプロセスで証明書発行者によって観察することができるプロパティ -  DV証明書の検証は、一般的に、ドメイン名の管理に関連するプロパティに関するクレームをチェックします。すなわち、一般的な状況下で、要求、検証、及び発行プロセスのすべてのステップを表すことができ、ノーアウトオブバンド人間の介入とインターネットプロトコルによって実行されることを意味します。"
    },
    {
      "indent": 3,
      "text": "Prior to ACME, when deploying an HTTPS server, a server operator typically gets a prompt to generate a self-signed certificate. If the operator were instead deploying an HTTPS server using ACME, the experience would be something like this:",
      "ja": "HTTPSサーバを展開するときACME前に、サーバのオペレータは、典型的には、自己署名証明書を生成するためのプロンプトを取得します。オペレータが代わりにACMEを使用してHTTPSサーバを展開していた場合、経験がこ​​のようなものになるだろう。"
    },
    {
      "indent": 3,
      "text": "o The operator's ACME client prompts the operator for the intended domain name(s) that the web server is to stand for.",
      "ja": "OオペレータのACMEクライアントは、Webサーバが放置していることを意図したドメイン名（複数可）のためのオペレータを求めるプロンプトが表示されます。"
    },
    {
      "indent": 3,
      "text": "o The ACME client presents the operator with a list of CAs from which it could get a certificate. (This list will change over time based on the capabilities of CAs and updates to ACME configuration.) The ACME client might prompt the operator for payment information at this point.",
      "ja": "O ACMEクライアントは、証明書を得ることができ、そこからCAのリストをオペレータに提示します。 （このリストは、ACMEの設定にCAの機能と更新に基づいて時間の経過とともに変化します。）ACMEクライアントは、この時点でのお支払い情報のオペレータ入力を求めるかもしれません。"
    },
    {
      "indent": 3,
      "text": "o The operator selects a CA.",
      "ja": "O演算子は、CAを選択します"
    },
    {
      "indent": 3,
      "text": "o In the background, the ACME client contacts the CA and requests that it issue a certificate for the intended domain name(s).",
      "ja": "背景には、O、ACMEクライアントの連絡先CAとそれが意図したドメイン名（複数可）のための証明書を発行することを要求します。"
    },
    {
      "indent": 3,
      "text": "o The CA verifies that the client controls the requested domain name(s) by having the ACME client perform some action(s) that can only be done with control of the domain name(s). For example, the CA might require a client requesting example.com to provision a DNS record under example.com or an HTTP resource under http://example.com.",
      "ja": "O CAは、クライアントがACMEクライアントはドメイン名のみ（複数可）の制御を行うことができますいくつかのアクションを実行したことにより、要求されたドメイン名（複数可）を制御することを確認します。たとえば、CAが提供するexample.com下のDNSレコードまたはhttp://example.com下のHTTPリソースをexample.comを要求しているクライアントが必要になることがあります。"
    },
    {
      "indent": 3,
      "text": "o Once the CA is satisfied, it issues the certificate and the ACME client automatically downloads and installs it, potentially notifying the operator via email, SMS, etc.",
      "ja": "CAが満たされると、O、それは証明書と自動的にダウンロードACMEクライアントを発行し、潜在的に、電子メール、SMSなどを介して操作を通知し、それをインストールします"
    },
    {
      "indent": 3,
      "text": "o The ACME client periodically contacts the CA to get updated certificates, stapled Online Certificate Status Protocol (OCSP) responses [RFC6960], or whatever else would be required to keep the web server functional and its credentials up to date.",
      "ja": "連絡先CAを更新した証明書を取得するために、定期的にACMEクライアントO、オンライン証明書状態プロトコル（OCSP）応答[RFC6960]、または任意の他の機能と最新でその資格証明書のWebサーバーを維持するために必要とされるであろうがホチキス止め。"
    },
    {
      "indent": 3,
      "text": "In this way, it would be nearly as easy to deploy with a CA-issued certificate as with a self-signed certificate. Furthermore, the maintenance of that CA-issued certificate would require minimal manual intervention. Such close integration of ACME with HTTPS servers allows the immediate and automated deployment of certificates as they are issued, sparing the human administrator from much of the time-consuming work described in the previous section.",
      "ja": "このようにして、自己署名証明書と同様にCAが発行した証明書を使用して展開するほぼ同じくらい簡単だろう。さらに、そのCAが発行した証明書のメンテナンスが最小限の手動の介入を必要とします。 HTTPSサーバとACMEのこのような緊密な統合は、それらが前のセクションで説明した、時間のかかる作業の多くから、人間の管理者を温存、発行される証明書の即時および自動展開することができます。"
    },
    {
      "indent": 0,
      "text": "3. Terminology",
      "section_title": true,
      "ja": "3.用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.",
      "ja": "この文書のキーワード \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", および \"OPTIONAL\" はBCP 14 [RFC2119] [RFC8174]で説明されているように、すべて大文字の場合にのみ解釈されます。"
    },
    {
      "indent": 3,
      "text": "The two main roles in ACME are \"client\" and \"server\". The ACME client uses the protocol to request certificate management actions, such as issuance or revocation. An ACME client may run on a web server, mail server, or some other server system that requires valid X.509 certificates. Or, it may run on a separate server that does not consume the certificate but is authorized to respond to a CA-provided challenge. The ACME server runs at a certification authority and responds to client requests, performing the requested actions if the client is authorized.",
      "ja": "ACMEに2つの主な役割は、「クライアント」と「サーバ」です。 ACMEクライアントは、このような発行や失効などの証明書管理アクションを要求するためのプロトコルを使用しています。 ACMEクライアントは、Webサーバ、メールサーバ、または有効なX.509証明書を必要とし、いくつかの他のサーバ・システム上で実行することができます。それとも、それは証明書を消費しませんが、CAが提供する挑戦に対応するために許可されている別のサーバー上で実行することができます。 ACMEサーバは、認証機関で動作し、クライアントが許可された場合に要求されたアクションを実行し、クライアントの要求に応答します。"
    },
    {
      "indent": 3,
      "text": "An ACME client authenticates to the server by means of an \"account key pair\". The client uses the private key of this key pair to sign all messages sent to the server. The server uses the public key to verify the authenticity and integrity of messages from the client.",
      "ja": "ACMEクライアントは、「アカウントの鍵ペア」により、サーバへの認証を行います。クライアントがサーバーに送信されたすべてのメッセージに署名するために、この鍵ペアの秘密鍵を使用しています。サーバは、クライアントからのメッセージの信憑性と整合性を検証する公開鍵を使用しています。"
    },
    {
      "indent": 0,
      "text": "4. Protocol Overview",
      "section_title": true,
      "ja": "4.プロトコルの概要"
    },
    {
      "indent": 3,
      "text": "ACME allows a client to request certificate management actions using a set of JavaScript Object Notation (JSON) messages [RFC8259] carried over HTTPS [RFC2818]. Issuance using ACME resembles a traditional CA's issuance process, in which a user creates an account, requests a certificate, and proves control of the domain(s) in that certificate in order for the CA to issue the requested certificate.",
      "ja": "ACMEは、クライアントがHTTPS経由で運ばJavaScriptのオブジェクト表記法（JSON）メッセージ[RFC8259] [RFC2818]のセットを使用して、証明書の管理アクションを要求することができます。 ACMEを使用して発行は、ユーザーが、アカウントを作成し、証明書を要求し、CAは、要求された証明書を発行するためには、その証明書内のドメイン（複数可）の制御を証明した伝統的なCAの発行プロセスを、似ています。"
    },
    {
      "indent": 3,
      "text": "The first phase of ACME is for the client to request an account with the ACME server. The client generates an asymmetric key pair and requests a new account, optionally providing contact information, agreeing to terms of service (ToS), and/or associating the account with an existing account in another system. The creation request is signed with the generated private key to prove that the client controls it.",
      "ja": "ACMEの第一段階は、ACMEサーバのアカウントを要求するクライアントのためです。クライアントは、非対称鍵ペアを生成し、新しいアカウントを要求し、必要に応じて、連絡先情報を提供するサービス（TOS）の条件に同意、及び/又は他のシステム内の既存のアカウントとアカウントを関連付けます。作成要求は、クライアントがそれを制御することを証明するために生成した秘密鍵で署名されています。"
    },
    {
      "indent": 9,
      "text": "Client Server",
      "ja": "クライアントサーバー"
    },
    {
      "indent": 9,
      "text": "[Contact Information]\n[ToS Agreement]\n[Additional Data]\nSignature                     ------->\n                                                    Account URL\n                              <-------           Account Object",
      "raw": true
    },
    {
      "indent": 19,
      "text": "[] Information covered by request signatures",
      "ja": "【】情報要求署名によって覆われ"
    },
    {
      "indent": 29,
      "text": "Account Creation",
      "ja": "アカウント作成"
    },
    {
      "indent": 3,
      "text": "Once an account is registered, there are four major steps the client needs to take to get a certificate:",
      "ja": "アカウントが登録されると、クライアントが証明書を取得するために取る必要が四大のステップがあります。"
    },
    {
      "indent": 3,
      "text": "1. Submit an order for a certificate to be issued",
      "section_title": true,
      "ja": "1.発行される証明書の順序を提出"
    },
    {
      "indent": 3,
      "text": "2. Prove control of any identifiers requested in the certificate",
      "section_title": true,
      "ja": "2.証明書に要求された任意の識別子の制御を証明"
    },
    {
      "indent": 3,
      "text": "3. Finalize the order by submitting a CSR",
      "section_title": true,
      "ja": "3. CSRを提出することによって順序を確定"
    },
    {
      "indent": 3,
      "text": "4. Await issuance and download the issued certificate",
      "section_title": true,
      "ja": "4.待つの発行と発行された証明書をダウンロード"
    },
    {
      "indent": 3,
      "text": "The client's order for a certificate describes the desired identifiers plus a few additional fields that capture semantics that are not supported in the CSR format. If the server is willing to consider issuing such a certificate, it responds with a list of requirements that the client must satisfy before the certificate will be issued.",
      "ja": "証明書のクライアントのためには、所望の識別子をプラスキャプチャセマンティクスはCSR形式でサポートされていないいくつかの追加フィールドについて説明します。サーバは、このような証明書を発行することを検討して喜んであれば、それは証明書が発行される前に、クライアントが満足しなければならない要件のリストで応答します。"
    },
    {
      "indent": 3,
      "text": "For example, in most cases, the server will require the client to demonstrate that it controls the identifiers in the requested certificate. Because there are many different ways to validate possession of different types of identifiers, the server will choose from an extensible set of challenges that are appropriate for the identifier being claimed. The client responds with a set of responses that tell the server which challenges the client has completed. The server then validates that the client has completed the challenges.",
      "ja": "例えば、ほとんどの場合、サーバは要求された証明書内の識別子を制御することを実証するために、クライアントが必要になります。異なるタイプの識別子の所有権を検証するためにさまざまな方法があるため、サーバが主張されている識別子に適した課題の拡張可能なセットから選択します。クライアントは、クライアントが完了した課題をサーバに伝える応答のセットで応答します。その後、サーバーは、クライアントが課題を完了したことを検証します。"
    },
    {
      "indent": 3,
      "text": "Once the validation process is complete and the server is satisfied that the client has met its requirements, the client finalizes the order by submitting a PKCS#10 Certificate Signing Request (CSR). The server will issue the requested certificate and make it available to the client.",
      "ja": "検証プロセスが完了すると、サーバーは、クライアントがその要件を満たしていることを満足すると、クライアントは、PKCS＃10証明書署名要求（CSR）を提出することによって順序を確定します。サーバーは、要求された証明書を発行し、クライアントが利用できるようになります。"
    },
    {
      "indent": 9,
      "text": "Client Server",
      "ja": "クライアントサーバー"
    },
    {
      "indent": 9,
      "text": "[Order]\nSignature                     ------->\n                              <-------  Required Authorizations",
      "raw": true
    },
    {
      "indent": 9,
      "text": "[Responses]\nSignature                     ------->",
      "raw": true
    },
    {
      "indent": 29,
      "text": "<~~~~~~~~Validation~~~~~~~~>",
      "raw": true
    },
    {
      "indent": 9,
      "text": "[CSR]\nSignature                     ------->\n                              <-------          Acknowledgement",
      "raw": true
    },
    {
      "indent": 29,
      "text": "<~~~~~~Await issuance~~~~~~>",
      "raw": true
    },
    {
      "indent": 9,
      "text": "[POST-as-GET request]\nSignature                     ------->\n                              <-------              Certificate",
      "raw": true
    },
    {
      "indent": 19,
      "text": "[] Information covered by request signatures",
      "ja": "【】情報要求署名によって覆われ"
    },
    {
      "indent": 27,
      "text": "Certificate Issuance",
      "ja": "証明書発行"
    },
    {
      "indent": 3,
      "text": "To revoke a certificate, the client sends a signed revocation request indicating the certificate to be revoked:",
      "ja": "証明書を失効するには、クライアントは、失効する証明書を示す署名失効要求を送信します。"
    },
    {
      "indent": 9,
      "text": "Client Server",
      "ja": "クライアントサーバー"
    },
    {
      "indent": 9,
      "text": "[Revocation request]\nSignature                    -------->",
      "raw": true
    },
    {
      "indent": 38,
      "text": "<--------                 Result",
      "raw": true
    },
    {
      "indent": 19,
      "text": "[] Information covered by request signatures",
      "ja": "【】情報要求署名によって覆われ"
    },
    {
      "indent": 26,
      "text": "Certificate Revocation",
      "ja": "証明書失効"
    },
    {
      "indent": 3,
      "text": "Note that while ACME is defined with enough flexibility to handle different types of identifiers in principle, the primary use case addressed by this document is the case where domain names are used as identifiers. For example, all of the identifier validation challenges described in Section 8 address validation of domain names. The use of ACME for other identifiers will require further specification in order to describe how these identifiers are encoded in the protocol and what types of validation challenges the server might require.",
      "ja": "ACMEは、原則的に異なるタイプの識別子を処理するのに十分な柔軟性と定義されている間、この文書によって対処主なユースケースは、ドメイン名は識別子として使用されている場合であることに注意してください。例えば、識別子検証課題のすべては、ドメイン名の第8章アドレスの検証で説明します。他の識別子のためのACMEの使用は、これらの識別子は、プロトコルでエンコードされているか、サーバが必要な場合があります挑戦の検証の種類を説明するために更なる仕様が必要になります。"
    },
    {
      "indent": 0,
      "text": "5. Character Encoding",
      "section_title": true,
      "ja": "5.文字エンコーディング"
    },
    {
      "indent": 3,
      "text": "All requests and responses sent via HTTP by ACME clients, ACME servers, and validation servers as well as any inputs for digest computations MUST be encoded using the UTF-8 character set [RFC3629]. Note that identifiers that appear in certificates may have their own encoding considerations (e.g., DNS names containing non-ASCII characters are expressed as A-labels rather than U-labels). Any such encoding considerations are to be applied prior to the aforementioned UTF-8 encoding.",
      "ja": "すべての要求と応答ACMEクライアントでHTTPを経由して送信され、ACMEサーバ、および検証サーバだけでなく、ダイジェスト計算のための任意の入力はUTF-8文字セット[RFC3629]を使用してエンコードされなければなりません。証明書に表示された識別子が自分のエンコーディングの考慮事項（例えば、非ASCII文字を含むDNS名は、ラベルよりもむしろU-ラベルとして表される）を有していてもよいことに留意されたいです。任意のそのような符号化の考慮事項は、前述UTF-8エンコーディングの前に適用されます。"
    },
    {
      "indent": 0,
      "text": "6. Message Transport",
      "section_title": true,
      "ja": "6.メッセージトランスポート"
    },
    {
      "indent": 3,
      "text": "Communications between an ACME client and an ACME server are done over HTTPS, using JSON Web Signature (JWS) [RFC7515] to provide some additional security properties for messages sent from the client to the server. HTTPS provides server authentication and confidentiality. With some ACME-specific extensions, JWS provides authentication of the client's request payloads, anti-replay protection, and integrity for the HTTPS request URL.",
      "ja": "ACMEクライアントとACMEサーバ間の通信は、クライアントからサーバに送信されるメッセージのためのいくつかの追加のセキュリティ特性を提供するためにJSONのWeb署名（JWS）[RFC7515]を使用して、HTTPSを介して行われます。 HTTPSは、サーバ認証と機密性を提供します。いくつかのACME固有の拡張では、JWSがHTTPSリクエストURLのためにクライアントの要求ペイロードの認証、リプレイ保護、および整合性を提供します。"
    },
    {
      "indent": 0,
      "text": "6.1. HTTPS Requests",
      "section_title": true,
      "ja": "6.1.  HTTPS要求"
    },
    {
      "indent": 3,
      "text": "Each ACME function is accomplished by the client sending a sequence of HTTPS requests to the server [RFC2818], carrying JSON messages [RFC8259]. Use of HTTPS is REQUIRED. Each subsection of Section 7 below describes the message formats used by the function and the order in which messages are sent.",
      "ja": "各ACME機能は、JSONメッセージ[RFC8259]を運ぶ、サーバーへのHTTPS要求のシーケンスを送信するクライアントによって、[RFC2818]を達成しています。 HTTPSを使用する必要があります。第7の各サブセクションは、以下の機能とメッセージが送信される順序で使用されるメッセージフォーマットを記載しています。"
    },
    {
      "indent": 3,
      "text": "In most HTTPS transactions used by ACME, the ACME client is the HTTPS client and the ACME server is the HTTPS server. The ACME server acts as a client when validating challenges: an HTTP client when validating an 'http-01' challenge, a DNS client with 'dns-01', etc.",
      "ja": "ACMEで使用される最もHTTPSの取引では、ACMEクライアントはHTTPSクライアントであり、ACMEサーバは、HTTPSサーバです。課題を検証する際ACMEサーバはクライアントとして機能：HTTPクライアントを「HTTP-01」の挑戦などのDNS-01」、とDNSクライアントの検証時"
    },
    {
      "indent": 3,
      "text": "ACME servers SHOULD follow the recommendations of [RFC7525] when configuring their TLS implementations. ACME servers that support TLS 1.3 MAY allow clients to send early data (0-RTT). This is safe because the ACME protocol itself includes anti-replay protections (see Section 6.5) in all cases where they are required. For this reason, there are no restrictions on what ACME data can be carried in 0-RTT.",
      "ja": "彼らのTLSの実装を設定するときACMEサーバは、[RFC7525]の勧告に従うべきです。 TLS 1.3をサポートするACMEサーバは、クライアントが初期のデータ（0-RTT）を送信することを可能にします。 ACMEプロトコル自体は、それらが必要とされているすべてのケースでアンチリプレイ保護（6.5項を参照）が含まれるので、これは安全です。このため、ACMEデータは0-RTTに実施することができるものに制限はありません。"
    },
    {
      "indent": 3,
      "text": "ACME clients MUST send a User-Agent header field, in accordance with [RFC7231]. This header field SHOULD include the name and version of the ACME software in addition to the name and version of the underlying HTTP client software.",
      "ja": "ACMEクライアントは[RFC7231]に従って、User-Agentヘッダフィールドを送らなければなりません。このヘッダーフィールドは、基礎となるHTTPクライアントソフトウェアの名前とバージョンに加えて、ACMEソフトウェアの名前とバージョンを含むべきです。"
    },
    {
      "indent": 3,
      "text": "ACME clients SHOULD send an Accept-Language header field in accordance with [RFC7231] to enable localization of error messages.",
      "ja": "ACMEクライアントは、エラーメッセージの局在化を可能にするために[RFC7231]に従ってたAccept-Languageヘッダーフィールドを送るべきです。"
    },
    {
      "indent": 3,
      "text": "ACME servers that are intended to be generally accessible need to use Cross-Origin Resource Sharing (CORS) in order to be accessible from browser-based clients [W3C.REC-cors-20140116]. Such servers SHOULD set the Access-Control-Allow-Origin header field to the value \"*\".",
      "ja": "ブラウザベースのクライアントからアクセスできるようにするため、[W3C.REC-CORS-20140116]でクロスオリジンリソース共有（CORS）を使用する一般的にアクセスが必要であることを意図しているACMEサーバ。このようなサーバーでは、「*」の値にアクセス制御 - 許可 - 起源ヘッダフィールドを設定する必要があります。"
    },
    {
      "indent": 3,
      "text": "Binary fields in the JSON objects used by ACME are encoded using base64url encoding described in Section 5 of [RFC4648] according to the profile specified in JSON Web Signature in Section 2 of [RFC7515]. This encoding uses a URL safe character set. Trailing '=' characters MUST be stripped. Encoded values that include trailing '=' characters MUST be rejected as improperly encoded.",
      "ja": "ACMEで使用されるJSONオブジェクト内のバイナリフィールドは、[RFC7515]のセクション2でJSONウェブ署名に指定されたプロファイルに従って、[RFC4648]のセクション5に記載base64url符号化を用いて符号化されます。このエンコーディングは、URLの安全な文字セットを使用しています。末尾の「=」文字を取り除かなければなりません。末尾の「=」文字を含む符号化された値が正しくエンコードされたように拒否されなければなりません。"
    },
    {
      "indent": 0,
      "text": "6.2. Request Authentication",
      "section_title": true,
      "ja": "6.2. 要求認証"
    },
    {
      "indent": 3,
      "text": "All ACME requests with a non-empty body MUST encapsulate their payload in a JSON Web Signature (JWS) [RFC7515] object, signed using the account's private key unless otherwise specified. The server MUST verify the JWS before processing the request. Encapsulating request bodies in JWS provides authentication of requests.",
      "ja": "非空のボディを持つすべてのACME要求がJSONのWeb署名（JWS）[RFC7515]オブジェクトに彼らのペイロードをカプセル化しなければならない、特に指定がない限り、アカウントの秘密鍵を使って署名しました。サーバーは要求を処理する前にJWSを確かめなければなりません。 JWSでリクエストボディをカプセル化する要求の認証を提供します。"
    },
    {
      "indent": 3,
      "text": "A JWS object sent as the body of an ACME request MUST meet the following additional criteria:",
      "ja": "ACME要求の本文として送信されたJWSオブジェクトは、次の追加の基準を満たす必要があります。"
    },
    {
      "indent": 3,
      "text": "o The JWS MUST be in the Flattened JSON Serialization [RFC7515]",
      "ja": "O JWSを平坦化JSONシリアライズ[RFC7515]でなければなりません"
    },
    {
      "indent": 3,
      "text": "o The JWS MUST NOT have multiple signatures",
      "ja": "JWS oを複数の署名を持ってはいけません"
    },
    {
      "indent": 3,
      "text": "o The JWS Unencoded Payload Option [RFC7797] MUST NOT be used",
      "ja": "O JWS暗号化されていないペイロードオプション[RFC7797]は使用してはいけません"
    },
    {
      "indent": 3,
      "text": "o The JWS Unprotected Header [RFC7515] MUST NOT be used",
      "ja": "O JWS保護されていないヘッダ[RFC7515]は使用してはいけません"
    },
    {
      "indent": 3,
      "text": "o The JWS Payload MUST NOT be detached",
      "ja": "O JWSペイロードを外してはなりません"
    },
    {
      "indent": 3,
      "text": "o The JWS Protected Header MUST include the following fields:",
      "ja": "O JWS保護されたヘッダーは、次のフィールドを含める必要があります。"
    },
    {
      "indent": 6,
      "text": "* \"alg\" (Algorithm)",
      "ja": "* \"ALG\"（アルゴリズム）"
    },
    {
      "indent": 9,
      "text": "+ This field MUST NOT contain \"none\" or a Message Authentication Code (MAC) algorithm (e.g. one in which the algorithm registry description mentions MAC/HMAC).",
      "ja": "+このフィールドは「なし」またはメッセージ認証コード（MAC）アルゴリズムを含んでいないてはいけません（例えば、1とは、アルゴリズムレジストリ説明はMAC / HMAC言及します）。"
    },
    {
      "indent": 6,
      "text": "* \"nonce\" (defined in Section 6.5)",
      "ja": "（セクション6.5で定義された）*「ナンス」"
    },
    {
      "indent": 6,
      "text": "* \"url\" (defined in Section 6.4)",
      "ja": "（セクション6.4で定義されている）* \"URL\""
    },
    {
      "indent": 6,
      "text": "* Either \"jwk\" (JSON Web Key) or \"kid\" (Key ID) as specified below",
      "ja": "*どちらの「jwk」（JSONウェブキー）または下記指定されている「子供」（キーID）"
    },
    {
      "indent": 3,
      "text": "An ACME server MUST implement the \"ES256\" signature algorithm [RFC7518] and SHOULD implement the \"EdDSA\" signature algorithm using the \"Ed25519\" variant (indicated by \"crv\") [RFC8037].",
      "ja": "ACMEサーバは、「ES256」署名アルゴリズム[RFC7518]を実装しなければなりません、そして、[RFC8037]（「CRV」で示される）「Ed25519」変異体を使用して「エドワーズ曲線デジタル署名アルゴリズム」署名アルゴリズムを実装する必要があります。"
    },
    {
      "indent": 3,
      "text": "The \"jwk\" and \"kid\" fields are mutually exclusive. Servers MUST reject requests that contain both.",
      "ja": "「jwk」と「子供」のフィールドは、相互に排他的です。サーバーは、両方が含まれている要求を拒絶しなければなりません。"
    },
    {
      "indent": 3,
      "text": "For newAccount requests, and for revokeCert requests authenticated by a certificate key, there MUST be a \"jwk\" field. This field MUST contain the public key corresponding to the private key used to sign the JWS.",
      "ja": "newAccount要求の場合、および証明書のキーによって認証revokeCert要求に対して、「jwk」フィールドがあるに違いありません。このフィールドは、JWSに署名するために使用される秘密鍵に対応する公開鍵を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "For all other requests, the request is signed using an existing account, and there MUST be a \"kid\" field. This field MUST contain the account URL received by POSTing to the newAccount resource.",
      "ja": "他のすべての要求について、要求は既存のアカウントを使用して署名され、そして「子供」フィールドがあるに違いありません。このフィールドは、newAccountリソースに掲載することにより、受信アカウントのURLを含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the client sends a JWS signed with an algorithm that the server does not support, then the server MUST return an error with status code 400 (Bad Request) and type \"urn:ietf:params:acme:error:badSignatureAlgorithm\". The problem document returned with the error MUST include an \"algorithms\" field with an array of supported \"alg\" values. See Section 6.7 for more details on the structure of error responses.",
      "ja": "クライアントは、JWSはサーバーがサポートしていないアルゴリズムで署名送信した場合、サーバはステータスコード400（不正なリクエスト）とタイプ「：IETF：のparams：ACME：エラー：badSignatureAlgorithm URN」でエラーを返さなければなりません。問題の文書は、サポートされている「ALG」値の配列を「アルゴリズム」フィールドを含まなければならないエラーで戻りました。エラー応答の構造の詳細については、セクション6.7を参照してください。"
    },
    {
      "indent": 3,
      "text": "If the server supports the signature algorithm \"alg\" but either does not support or chooses to reject the public key \"jwk\", then the server MUST return an error with status code 400 (Bad Request) and type \"urn:ietf:params:acme:error:badPublicKey\". The problem document detail SHOULD describe the reason for rejecting the public key; some example reasons are:",
      "ja": "IETF：：のparamsサーバはなく、どちらかサポートされていない「ALG」署名アルゴリズムをサポートしているか、公開鍵「jwk」を拒否することを選択した場合、サーバはステータスコード400（不正なリクエスト）とタイプ「壷でエラーを返す必要があります。アクメ：エラー：badPublicKey」。問題の文書の詳細は、公開鍵を拒否した理由を説明する必要があり、いくつかの例の理由は以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "o \"alg\" is \"RS256\" but the modulus \"n\" is too small (e.g., 512-bit)",
      "ja": "O「ALG」は「RS256」であるが、弾性率は「n」が小さすぎる（例えば、512ビット）"
    },
    {
      "indent": 3,
      "text": "o \"alg\" is \"ES256\" but \"jwk\" does not contain a valid P-256 public key",
      "ja": "O「ALGは」「ES256」ですが、「jwkは、」有効なP-256の公開鍵が含まれていません"
    },
    {
      "indent": 3,
      "text": "o \"alg\" is \"EdDSA\" and \"crv\" is \"Ed448\", but the server only supports \"EdDSA\" with \"Ed25519\"",
      "ja": "O「ALGは」「エドワーズ曲線デジタル署名アルゴリズム」と「CRVは」「Ed448」であるが、サーバーは唯一の「Ed25519」と「エドワーズ曲線デジタル署名アルゴリズム」をサポートしています"
    },
    {
      "indent": 3,
      "text": "o the corresponding private key is known to have been compromised",
      "ja": "対応する秘密鍵が危殆化されていることが知られているoを"
    },
    {
      "indent": 3,
      "text": "Because client requests in ACME carry JWS objects in the Flattened JSON Serialization, they must have the Content-Type header field set to \"application/jose+json\". If a request does not meet this requirement, then the server MUST return a response with status code 415 (Unsupported Media Type).",
      "ja": "ACMEでクライアント要求がフラット化JSONシリアライゼーションにJWSオブジェクトを運ぶので、彼らは、Content-Typeヘッダフィールドは、「アプリケーション/ホセ+のJSON」に設定されている必要があります。要求がこの要件を満たしていない場合、サーバはステータスコード415（サポートされていないメディアタイプ）との応答を返さなければなりません。"
    },
    {
      "indent": 0,
      "text": "6.3. GET and POST-as-GET Requests",
      "section_title": true,
      "ja": "6.3.  GETとPOST-AS-GET要求"
    },
    {
      "indent": 3,
      "text": "Note that authentication via signed JWS request bodies implies that requests without an entity body are not authenticated, in particular GET requests. Except for the cases described in this section, if the server receives a GET request, it MUST return an error with status code 405 (Method Not Allowed) and type \"malformed\".",
      "ja": "署名JWS要求体を経由してその認証に注意してくださいは、エンティティボディのない要求は、特定のGETリクエストには、認証されていないことを意味します。サーバがGETリクエストを受信した場合、このセクションで説明する場合を除き、それはステータスコード405（メソッド許可されていません）でエラーを返すと、「不正な」入力する必要があります。"
    },
    {
      "indent": 3,
      "text": "If a client wishes to fetch a resource from the server (which would otherwise be done with a GET), then it MUST send a POST request with a JWS body as described above, where the payload of the JWS is a zero-length octet string. In other words, the \"payload\" field of the JWS object MUST be present and set to the empty string (\"\").",
      "ja": "クライアントが（そうでなければGETで行われるであろう）サーバからリソースを取得することを望む場合、上述したようJWSのペイロードは、ゼロ長のオクテット列である場合、それは、JWS本体とPOSTリクエストを送信しなければなりません。換言すれば、JWSオブジェクトの「ペイロード」フィールドが存在し、空の文字列（「」）に設定されなければなりません。"
    },
    {
      "indent": 3,
      "text": "We will refer to these as \"POST-as-GET\" requests. On receiving a request with a zero-length (and thus non-JSON) payload, the server MUST authenticate the sender and verify any access control rules. Otherwise, the server MUST treat this request as having the same semantics as a GET request for the same resource.",
      "ja": "私たちは、 \"POST-AS-GET\" 要求としてこれらを参照します。ゼロ長（従って非JSON）ペイロードを持つ要求を受信すると、サーバーは、送信者を認証し、任意のアクセス制御ルールを検証しなければなりません。そうしないと、サーバーは、同じリソースに対するGETリクエストと同じ意味を持つものとして、この要求を扱わなければなりません。"
    },
    {
      "indent": 3,
      "text": "The server MUST allow GET requests for the directory and newNonce resources (see Section 7.1), in addition to POST-as-GET requests for these resources. This enables clients to bootstrap into the ACME authentication system.",
      "ja": "サーバーは、これらのリソースのPOST-AS-GET要求に加えて、（7.1節を参照）、ディレクトリとnewNonceリソースのGETリクエストを許容しなければなりません。これは、ACME認証システムへのブートストラップするためにクライアントを可能にします。"
    },
    {
      "indent": 0,
      "text": "6.4. Request URL Integrity",
      "section_title": true,
      "ja": "6.4. リクエストURLの整合性"
    },
    {
      "indent": 3,
      "text": "It is common in deployment for the entity terminating TLS for HTTPS to be different from the entity operating the logical HTTPS server, with a \"request routing\" layer in the middle. For example, an ACME CA might have a content delivery network terminate TLS connections from clients so that it can inspect client requests for denial-of-service (DoS) protection.",
      "ja": "中央に「要求ルーティング」層と論理HTTPSサーバを操作する実体とは異なるようにHTTPSためTLSを終了エンティティの展開では一般的です。たとえば、ACME CAは、サービス拒否（DoS）の保護のためのクライアント要求を検査できるように、コンテンツ配信ネットワークは、クライアントからのTLS接続を終了する場合があります。"
    },
    {
      "indent": 3,
      "text": "These intermediaries can also change values in the request that are not signed in the HTTPS request, e.g., the request URL and header fields. ACME uses JWS to provide an integrity mechanism, which protects against an intermediary changing the request URL to another ACME URL.",
      "ja": "これらの媒体はまた、例えば、リクエストURLとヘッダフィールドをHTTPS要求に署名されていない要求の値を変更することができます。 ACMEは、別のACMEのURLへのリクエストのURLを変更する仲介から保護整合性のメカニズムを提供するためにJWSを使用しています。"
    },
    {
      "indent": 3,
      "text": "As noted in Section 6.2, all ACME request objects carry a \"url\" header parameter in their protected header. This header parameter encodes the URL to which the client is directing the request. On receiving such an object in an HTTP request, the server MUST compare the \"url\" header parameter to the request URL. If the two do not match, then the server MUST reject the request as unauthorized.",
      "ja": "6.2節で述べたように、すべてのACME要求オブジェクトは、保護されたヘッダに「URL」ヘッダパラメータを運びます。このヘッダパラメータは、クライアントが要求を指示されているURLをエンコードします。 HTTPリクエストでこのようなオブジェクトを受信すると、サーバは、リクエストURLに「URL」ヘッダパラメータを比較しなければなりません。両者が一致しない場合、サーバーは、不正として要求を拒絶しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Except for the directory resource, all ACME resources are addressed with URLs provided to the client by the server. In POST requests sent to these resources, the client MUST set the \"url\" header parameter to the exact string provided by the server (rather than performing any re-encoding on the URL). The server SHOULD perform the corresponding string equality check, configuring each resource with the URL string provided to clients and having the resource check that requests have the same string in their \"url\" header parameter. The server MUST reject the request as unauthorized if the string equality check fails.",
      "ja": "ディレクトリリソースを除いて、すべてのACMEリソースはサーバによってクライアントに提供するURLでアドレス指定されています。これらのリソースに送信されたPOSTリクエストでは、クライアントが（むしろURLに任意の再エンコードを実行するよりも）サーバが提供する正確な文字列に「URL」ヘッダパラメータを設定しなければなりません。サーバがクライアントに提供されたURL文字列を持つ各リソースを設定し、要求が彼らの「URL」ヘッダパラメータに同じ文字列を持っているリソースチェックを持つ、対応する文字列の等価性チェックを実行する必要があります。サーバーは、文字列の等価性チェックが失敗した場合など、不正な要求を拒絶しなければなりません。"
    },
    {
      "indent": 0,
      "text": "6.4.1. \"url\" (URL) JWS Header Parameter",
      "section_title": true,
      "ja": "6.4.1.  \"URL\"（URL）JWSヘッダパラメータ"
    },
    {
      "indent": 3,
      "text": "The \"url\" header parameter specifies the URL [RFC3986] to which this JWS object is directed. The \"url\" header parameter MUST be carried in the protected header of the JWS. The value of the \"url\" header parameter MUST be a string representing the target URL.",
      "ja": "「URL」ヘッダパラメータは、このJWSオブジェクトが向けられているためURL [RFC3986]を特定します。 「URL」ヘッダパラメータは、JWSの保護されたヘッダで運ばれなければなりません。 「URL」ヘッダパラメータの値は、ターゲットURLを表す文字列でなければなりません。"
    },
    {
      "indent": 0,
      "text": "6.5. Replay Protection",
      "section_title": true,
      "ja": "6.5. リプレイ保護"
    },
    {
      "indent": 3,
      "text": "In order to protect ACME resources from any possible replay attacks, ACME POST requests have a mandatory anti-replay mechanism. This mechanism is based on the server maintaining a list of nonces that it has issued, and requiring any signed request from the client to carry such a nonce.",
      "ja": "すべての可能なリプレイ攻撃からACMEリソースを保護するために、ACME POSTリクエストは、必須のアンチリプレイメカニズムを持っています。このメカニズムは、サーバが発行したナンスのリストを維持し、かつ、そのようなnonceを運ぶために、クライアントから任意の署名要求を必要に基づいています。"
    },
    {
      "indent": 3,
      "text": "An ACME server provides nonces to clients using the HTTP Replay-Nonce header field, as specified in Section 6.5.1. The server MUST include a Replay-Nonce header field in every successful response to a POST request and SHOULD provide it in error responses as well.",
      "ja": "セクション6.5.1で指定されるようにACMEサーバは、HTTPリプレイ・ノンスヘッダフィールドを使用して、クライアントにナンスを提供します。サーバーは、POSTリクエストに成功するたびに応じて、リプレイ・ナンスヘッダフィールドを含まなければならないと、同様のエラー応答でそれを提供する必要があります。"
    },
    {
      "indent": 3,
      "text": "Every JWS sent by an ACME client MUST include, in its protected header, the \"nonce\" header parameter, with contents as defined in Section 6.5.2. As part of JWS verification, the ACME server MUST verify that the value of the \"nonce\" header is a value that the server previously provided in a Replay-Nonce header field. Once a nonce value has appeared in an ACME request, the server MUST consider it invalid, in the same way as a value it had never issued.",
      "ja": "ACMEのクライアントから送信されたすべてのJWSは、セクション6.5.2で定義されている内容と、その保護されたヘッダに、「ナンス」ヘッダパラメータを含まなければなりません。 JWS検証の一部として、ACMEサーバは、「ナンス」ヘッダの値は、サーバが以前にリプレイ・ノンスヘッダフィールド内に設けられた値であることを確認しなければなりません。ナンス値がACME要求に登場していると、サーバは、それが発行されたことがなかった値と同じように、それは無効考慮する必要があります。"
    },
    {
      "indent": 3,
      "text": "When a server rejects a request because its nonce value was unacceptable (or not present), it MUST provide HTTP status code 400 (Bad Request), and indicate the ACME error type \"urn:ietf:params:acme:error:badNonce\". An error response with the \"badNonce\" error type MUST include a Replay-Nonce header field with a fresh nonce that the server will accept in a retry of the original query (and possibly in other requests, according to the server's nonce scoping policy). On receiving such a response, a client SHOULD retry the request using the new nonce.",
      "ja": "そのノンス値（存在するか否か）許容不可能であるため、サーバーは要求を拒否するとき、それは、HTTPステータスコード400（不正なリクエスト）を提供し、ACMEエラー種別「URN：IETF：paramsは：ACME：エラー：badNonce」を示さなければなりません。 「badNonce」エラータイプのエラー応答が（サーバのナンススコープポリシーに従って、およびおそらく他の要求に）サーバは元のクエリの再試行に受け入れる新鮮ノンスとリプレイ・ノンスヘッダフィールドを含まなければなりません。このような応答を受信すると、クライアントは新しいnonceを使用して要求を再試行する必要があります。"
    },
    {
      "indent": 3,
      "text": "The precise method used to generate and track nonces is up to the server. For example, the server could generate a random 128-bit value for each response, keep a list of issued nonces, and strike nonces from this list as they are used.",
      "ja": "ナンスを生成し、追跡するために使用される正確な方法は、サーバー次第です。例えば、サーバは、各応答のためのランダムな128ビット値を生成発行ナンスのリストを保持し、それらが使用されているように、このリストからナンスを打つことができました。"
    },
    {
      "indent": 3,
      "text": "Other than the constraint above with regard to nonces issued in \"badNonce\" responses, ACME does not constrain how servers scope nonces. Clients MAY assume that nonces have broad scope, e.g., by having a single pool of nonces used for all requests. However, when retrying in response to a \"badNonce\" error, the client MUST use the nonce provided in the error response. Servers should scope nonces broadly enough that retries are not needed very often.",
      "ja": "「badNonce」応答で発行されたナンスに関する上記の制約以外に、ACMEは、どのようにサーバのスコープナンスを制限しません。クライアントは、すべての要求のために、使用されたnonceの単一のプールを持つことによって、例えば、ナンスは、広い範囲を持っていることを仮定してもよいです。しかし、「badNonce」エラーに応じて、再試行時に、クライアントは、エラー応答で提供nonceを使用しなければなりません。サーバーは再試行が非常に頻繁に必要とされていないことをスコープナンス広く十分にする必要があります。"
    },
    {
      "indent": 0,
      "text": "6.5.1. Replay-Nonce",
      "section_title": true,
      "ja": "6.5.1. リプレイ-使節"
    },
    {
      "indent": 3,
      "text": "The Replay-Nonce HTTP header field includes a server-generated value that the server can use to detect unauthorized replay in future client requests. The server MUST generate the values provided in Replay-Nonce header fields in such a way that they are unique to each message, with high probability, and unpredictable to anyone besides the server. For instance, it is acceptable to generate Replay-Nonces randomly.",
      "ja": "リプレイ・ナンスHTTPヘッダフィールドは、サーバは、将来のクライアントの要求に不正なリプレイを検出するために使用することができ、サーバが生成した値を含んでいます。サーバーは、サーバーの他に誰に高い確率で、各メッセージに固有の、そして予測不可能であるようにリプレイ・ノンスヘッダフィールドに提供された値を生成しなければなりません。例えば、ランダムにリプレイ・ナンスを生成するために許容可能です。"
    },
    {
      "indent": 3,
      "text": "The value of the Replay-Nonce header field MUST be an octet string encoded according to the base64url encoding described in Section 2 of [RFC7515]. Clients MUST ignore invalid Replay-Nonce values. The ABNF [RFC5234] for the Replay-Nonce header field follows:",
      "ja": "リプレイ・ノンスヘッダフィールドの値は、[RFC7515]のセクション2で説明base64urlエンコーディングに従って符号化されたオクテットストリングでなければなりません。クライアントは、無効なリプレイ・ナンス値を無視しなければなりません。リプレイ・ナンスヘッダフィールドのABNF [RFC5234]は、以下："
    },
    {
      "indent": 5,
      "text": "base64url = ALPHA / DIGIT / \"-\" / \"_\"",
      "ja": "base64url = ALPHA / DIGIT / \" - \" / \"_\""
    },
    {
      "indent": 5,
      "text": "Replay-Nonce = 1*base64url",
      "ja": "リプレイ-ナンス= 1 *のbase64url"
    },
    {
      "indent": 3,
      "text": "The Replay-Nonce header field SHOULD NOT be included in HTTP request messages.",
      "ja": "リプレイ・ナンスヘッダフィールドは、HTTPリクエストメッセージに含まれるべきではありません。"
    },
    {
      "indent": 0,
      "text": "6.5.2. \"nonce\" (Nonce) JWS Header Parameter",
      "section_title": true,
      "ja": "6.5.2.  「ナンス」（ノンス）JWSヘッダパラメータ"
    },
    {
      "indent": 3,
      "text": "The \"nonce\" header parameter provides a unique value that enables the verifier of a JWS to recognize when replay has occurred. The \"nonce\" header parameter MUST be carried in the protected header of the JWS.",
      "ja": "「ナンス」ヘッダパラメータは、再生が発生したときに認識するJWSの検証を可能にするユニークな値を提供します。 「ナンス」ヘッダパラメータは、JWSの保護されたヘッダで運ばれなければなりません。"
    },
    {
      "indent": 3,
      "text": "The value of the \"nonce\" header parameter MUST be an octet string, encoded according to the base64url encoding described in Section 2 of [RFC7515]. If the value of a \"nonce\" header parameter is not valid according to this encoding, then the verifier MUST reject the JWS as malformed.",
      "ja": "「ナンス」ヘッダパラメータの値は、[RFC7515]のセクション2で説明base64urlエンコーディングに従って符号化されたオクテットストリングでなければなりません。 「ナンス」ヘッダパラメータの値は、この符号化によれば有効でない場合、検証者は、不正な形式としてJWSを拒絶しなければなりません。"
    },
    {
      "indent": 0,
      "text": "6.6. Rate Limits",
      "section_title": true,
      "ja": "6.6. レート制限"
    },
    {
      "indent": 3,
      "text": "Creation of resources can be rate limited by ACME servers to ensure fair usage and prevent abuse. Once the rate limit is exceeded, the server MUST respond with an error with the type \"urn:ietf:params:acme:error:rateLimited\". Additionally, the server SHOULD send a Retry-After header field [RFC7231] indicating when the current request may succeed again. If multiple rate limits are in place, that is the time where all rate limits allow access again for the current request with exactly the same parameters.",
      "ja": "リソースの作成は、公正な使用を確保し、乱用を防ぐために、ACMEサーバによってレート制限することができます。レート制限を超えると、サーバがタイプ「：IETF：のparams：ACME：エラー：rateLimited壷」とのエラーで応じなければなりません。また、サーバは、現在の要求が再び成功できるかを示す再試行後ヘッダーフィールド[RFC7231]を送信すべきです。複数のレート制限が実施されている場合は、それがすべてのレート制限は、まったく同じパラメータを使用して、現在の要求のために再度アクセスを許可する時間です。"
    },
    {
      "indent": 3,
      "text": "In addition to the human-readable \"detail\" field of the error response, the server MAY send one or multiple link relations in the Link header field [RFC8288] pointing to documentation about the specific rate limit that was hit, using the \"help\" link relation type.",
      "ja": "エラーレスポンスの-人間が読める「詳細」フィールドに加えて、サーバは「ヘルプ」を使用して、ヒットされた特定のレート制限に関するドキュメントを指すリンクヘッダフィールド[RFC8288]で一つまたは複数のリンク関係を送るかもしれませんリンク関係タイプ。"
    },
    {
      "indent": 0,
      "text": "6.7. Errors",
      "section_title": true,
      "ja": "6.7. エラー"
    },
    {
      "indent": 3,
      "text": "Errors can be reported in ACME both at the HTTP layer and within challenge objects as defined in Section 8. ACME servers can return responses with an HTTP error response code (4XX or 5XX). For example, if the client submits a request using a method not allowed in this document, then the server MAY return status code 405 (Method Not Allowed).",
      "ja": "HTTPエラー応答コード（4XXまたは5XX）で応答を返すことができるセクション8 ACMEサーバで定義されているエラーがACME HTTP層で及びチャレンジオブジェクト内の両方に報告することができます。クライアントは、このドキュメントでは許可されていないメソッドを使用して要求を送信した場合、サーバは（メソッドが許可されていません）ステータスコード405を返すことがあります。"
    },
    {
      "indent": 3,
      "text": "When the server responds with an error status, it SHOULD provide additional information using a problem document [RFC7807]. To facilitate automatic response to errors, this document defines the following standard tokens for use in the \"type\" field (within the ACME URN namespace \"urn:ietf:params:acme:error:\"):",
      "ja": "サーバがエラー状態で応答すると、それは問題の文書[RFC7807]を使用して、追加情報を提供する必要があります。エラーへの自動応答を容易にするために、この文書は、（「IETF：paramsは：ACME：エラー：URN」ACME URN名前空間内の）「タイプ」フィールドに使用するための以下の標準のトークンを定義します。"
    },
    {
      "indent": 3,
      "text": "+-------------------------+-----------------------------------------+\n| Type                    | Description                             |\n+-------------------------+-----------------------------------------+\n| accountDoesNotExist     | The request specified an account that   |\n|                         | does not exist                          |\n|                         |                                         |\n| alreadyRevoked          | The request specified a certificate to  |\n|                         | be revoked that has already been        |\n|                         | revoked                                 |\n|                         |                                         |\n| badCSR                  | The CSR is unacceptable (e.g., due to a |\n|                         | short key)                              |\n|                         |                                         |\n| badNonce                | The client sent an unacceptable anti-   |\n|                         | replay nonce                            |\n|                         |                                         |\n| badPublicKey            | The JWS was signed by a public key the  |\n|                         | server does not support                 |\n|                         |                                         |\n| badRevocationReason     | The revocation reason provided is not   |\n|                         | allowed by the server                   |\n|                         |                                         |\n| badSignatureAlgorithm   | The JWS was signed with an algorithm    |\n|                         | the server does not support             |\n|                         |                                         |\n| caa                     | Certification Authority Authorization   |\n|                         | (CAA) records forbid the CA from        |\n|                         | issuing a certificate                   |\n|                         |                                         |\n| compound                | Specific error conditions are indicated |\n|                         | in the \"subproblems\" array              |\n|                         |                                         |\n| connection              | The server could not connect to         |\n|                         | validation target                       |\n|                         |                                         |\n| dns                     | There was a problem with a DNS query    |\n|                         | during identifier validation            |\n|                         |                                         |\n| externalAccountRequired | The request must include a value for    |\n|                         | the \"externalAccountBinding\" field      |\n|                         |                                         |\n| incorrectResponse       | Response received didn't match the      |\n|                         | challenge's requirements                |\n|                         |                                         |\n| invalidContact          | A contact URL for an account was        |\n|                         | invalid                                 |\n|                         |                                         |\n| malformed               | The request message was malformed       |",
      "raw": true
    },
    {
      "indent": 3,
      "text": "|                         |                                         |\n| orderNotReady           | The request attempted to finalize an    |\n|                         | order that is not ready to be finalized |\n|                         |                                         |\n| rateLimited             | The request exceeds a rate limit        |\n|                         |                                         |\n| rejectedIdentifier      | The server will not issue certificates  |\n|                         | for the identifier                      |\n|                         |                                         |\n| serverInternal          | The server experienced an internal      |\n|                         | error                                   |\n|                         |                                         |\n| tls                     | The server received a TLS error during  |\n|                         | validation                              |\n|                         |                                         |\n| unauthorized            | The client lacks sufficient             |\n|                         | authorization                           |\n|                         |                                         |\n| unsupportedContact      | A contact URL for an account used an    |\n|                         | unsupported protocol scheme             |\n|                         |                                         |\n| unsupportedIdentifier   | An identifier is of an unsupported type |\n|                         |                                         |\n| userActionRequired      | Visit the \"instance\" URL and take       |\n|                         | actions specified there                 |\n+-------------------------+-----------------------------------------+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "This list is not exhaustive. The server MAY return errors whose \"type\" field is set to a URI other than those defined above. Servers MUST NOT use the ACME URN namespace for errors not listed in the appropriate IANA registry (see Section 9.6). Clients SHOULD display the \"detail\" field of all errors.",
      "ja": "このリストは網羅的なものではありません。サーバーは、その「タイプ」フィールド上で定義されたもの以外のURIに設定されているエラーを返すことがあります。サーバは、適切なIANAレジストリに記載されていないエラーのACME URN名前空間を使用してはならない（セクション9.6を参照してください）。クライアントは、すべてのエラーの「詳細」欄が表示されるはずです。"
    },
    {
      "indent": 3,
      "text": "In the remainder of this document, we use the tokens in the table above to refer to error types, rather than the full URNs. For example, an \"error of type 'badCSR'\" refers to an error document with \"type\" value \"urn:ietf:params:acme:error:badCSR\".",
      "ja": "この文書の残りでは、我々はむしろ完全のURNより、エラーの種類を参照するために上記の表にトークンを使用します。例えば、「タイプのエラー 『badCSR』」は、「タイプ」値「：IETF：paramsは：ACME：エラー：badCSR URN」のエラー文書を指します。"
    },
    {
      "indent": 0,
      "text": "6.7.1. Subproblems",
      "section_title": true,
      "ja": "6.7.1. 部分問題"
    },
    {
      "indent": 3,
      "text": "Sometimes a CA may need to return multiple errors in response to a request. Additionally, the CA may need to attribute errors to specific identifiers. For instance, a newOrder request may contain multiple identifiers for which the CA cannot issue certificates. In this situation, an ACME problem document MAY contain the \"subproblems\" field, containing a JSON array of problem documents, each of which MAY contain an \"identifier\" field. If present, the \"identifier\" field MUST contain an ACME identifier (Section 9.7.7).",
      "ja": "時には、CAは要求に応じて複数のエラーを返す必要があります。また、CAは、特定の識別子にエラーを属性する必要があるかもしれません。例えば、newOrder要求は、CAが証明書を発行できないため、複数の識別子が含まれていてもよいです。このような状況では、ACMEの問題の文書は、「識別子」フィールドを含むかもしれそれぞれの問題の文書のJSON配列を含む、「部分問題」フィールドを含むかもしれません。存在する場合、「識別子」フィールドは、ACME識別子（セクション9.7.7）を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "The \"identifier\" field MUST NOT be present at the top level in ACME problem documents. It can only be present in subproblems. Subproblems need not all have the same type, and they do not need to match the top level type.",
      "ja": "「識別子」フィールドは、ACMEの問題ドキュメントのトップレベルで存在してはなりません。それが唯一の部分問題に存在することができます。部分問題は、すべての必要はありません同じ型を持っている、と彼らはトップレベルの型と一致する必要はありません。"
    },
    {
      "indent": 3,
      "text": "ACME clients may choose to use the \"identifier\" field of a subproblem as a hint that an operation would succeed if that identifier were omitted. For instance, if an order contains ten DNS identifiers, and the newOrder request returns a problem document with two subproblems (referencing two of those identifiers), the ACME client may choose to submit another order containing only the eight identifiers not listed in the problem document.",
      "ja": "ACMEクライアントは、その識別子が省略された場合は、操作が成功するヒントとして下位問題の「識別子」フィールドを使用することもできます。例えば、注文は10のDNS識別子が含まれている場合、およびnewOrder要求は2つの部分問題（これらの識別子の2を参照）、ACMEクライアントは、問題の文書に記載されていないだけで8つの識別子を含む別の注文を送信することもできますし、問題の文書を返します。 。"
    },
    {
      "indent": 0,
      "text": "HTTP/1.1 403 Forbidden Content-Type: application/problem+json Link: <https://example.com/acme/directory>;rel=\"index\"",
      "ja": "HTTP / 1.1 403禁止のContent-Type：アプリケーション/問題+ JSONのリンク：<https://example.com/acme/directory>; REL = \"インデックス\""
    },
    {
      "indent": 0,
      "text": "{\n    \"type\": \"urn:ietf:params:acme:error:malformed\",\n    \"detail\": \"Some of the identifiers requested were rejected\",\n    \"subproblems\": [\n        {\n            \"type\": \"urn:ietf:params:acme:error:malformed\",\n            \"detail\": \"Invalid underscore in DNS name \\\"_example.org\\\"\",\n            \"identifier\": {\n                \"type\": \"dns\",\n                \"value\": \"_example.org\"\n            }\n        },\n        {\n            \"type\": \"urn:ietf:params:acme:error:rejectedIdentifier\",\n            \"detail\": \"This CA will not issue for \\\"example.net\\\"\",\n            \"identifier\": {\n                \"type\": \"dns\",\n                \"value\": \"example.net\"\n            }\n        }\n    ]\n}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "7. Certificate Management",
      "section_title": true,
      "ja": "7.証明書の管理"
    },
    {
      "indent": 3,
      "text": "In this section, we describe the certificate management functions that ACME enables:",
      "ja": "このセクションでは、ACMEは、有効にする証明書管理機能について説明します。"
    },
    {
      "indent": 3,
      "text": "o Account Creation",
      "ja": "Oアカウントの作成"
    },
    {
      "indent": 3,
      "text": "o Ordering a Certificate",
      "ja": "証明書を発注O"
    },
    {
      "indent": 3,
      "text": "o Identifier Authorization",
      "ja": "O識別子認証"
    },
    {
      "indent": 3,
      "text": "o Certificate Issuance",
      "ja": "Oの証明書発行"
    },
    {
      "indent": 3,
      "text": "o Certificate Revocation",
      "ja": "証明書失効O"
    },
    {
      "indent": 0,
      "text": "7.1. Resources",
      "section_title": true,
      "ja": "7.1. リソース"
    },
    {
      "indent": 3,
      "text": "ACME is structured as an HTTP-based application with the following types of resources:",
      "ja": "ACMEは、次の種類のリソースにHTTPベースのアプリケーションとして構成されています。"
    },
    {
      "indent": 3,
      "text": "o Account resources, representing information about an account (Section 7.1.2, Section 7.3)",
      "ja": "アカウント（7.1.2項、7.3節）に関する情報を表すOアカウントのリソース、"
    },
    {
      "indent": 3,
      "text": "o Order resources, representing an account's requests to issue certificates (Section 7.1.3)",
      "ja": "O注文リソースは、アカウントの要求を表現することは発行する証明書（7.1.3項）"
    },
    {
      "indent": 3,
      "text": "o Authorization resources, representing an account's authorization to act for an identifier (Section 7.1.4)",
      "ja": "O承認リソース、識別子のために行動するために、アカウントの権限を表す（7.1.4項）"
    },
    {
      "indent": 3,
      "text": "o Challenge resources, representing a challenge to prove control of an identifier (Section 7.5, Section 8)",
      "ja": "識別子（セクション7.5、セクション8）の制御を証明するチャレンジを表すOチャレンジリソース"
    },
    {
      "indent": 3,
      "text": "o Certificate resources, representing issued certificates (Section 7.4.2)",
      "ja": "O証明書リソース、発行された証明書を表す（7.4.2項）"
    },
    {
      "indent": 3,
      "text": "o A \"directory\" resource (Section 7.1.1)",
      "ja": "「ディレクトリ」のリソース（7.1.1項）O"
    },
    {
      "indent": 3,
      "text": "o A \"newNonce\" resource (Section 7.2)",
      "ja": "\"newNonce\" リソース（セクション7.2）O"
    },
    {
      "indent": 3,
      "text": "o A \"newAccount\" resource (Section 7.3)",
      "ja": "\"newAccount\" リソースをO（7.3節）"
    },
    {
      "indent": 3,
      "text": "o A \"newOrder\" resource (Section 7.4)",
      "ja": "\"newOrder\" リソース（セクション7.4）O"
    },
    {
      "indent": 3,
      "text": "o A \"revokeCert\" resource (Section 7.6)",
      "ja": "\"revokeCert\" リソース（セクション7.6）O"
    },
    {
      "indent": 3,
      "text": "o A \"keyChange\" resource (Section 7.3.5)",
      "ja": "\"てkeyChange\" リソース（セクション7.3.5）O"
    },
    {
      "indent": 3,
      "text": "The server MUST provide \"directory\" and \"newNonce\" resources.",
      "ja": "サーバーは、「ディレクトリ」と「newNonce」リソースを提供しなければなりません。"
    },
    {
      "indent": 3,
      "text": "ACME uses different URLs for different management functions. Each function is listed in a directory along with its corresponding URL, so clients only need to be configured with the directory URL. These URLs are connected by a few different link relations [RFC8288].",
      "ja": "ACMEは、異なる管理機能のために異なるURLを使用しています。クライアントが唯一のディレクトリURLを設定する必要がありますので、各機能は、それに対応するURLとともにディレクトリにリストされています。これらのURLは、いくつかの異なるリンク関係[RFC8288]で接続されています。"
    },
    {
      "indent": 3,
      "text": "The \"up\" link relation is used with challenge resources to indicate the authorization resource to which a challenge belongs. It is also used, with some media types, from certificate resources to indicate a resource from which the client may fetch a chain of CA certificates that could be used to validate the certificate in the original resource.",
      "ja": "「アップ」リンク関係は、チャレンジが属するの認可リソースを示すために、チャレンジリソースで使用されています。また、クライアントが元のリソースでの証明書を検証するために使用できるCA証明書のチェーンをフェッチすることがあり、そこからリソースを示すために、証明書の資源から、いくつかのメディアタイプで、使用されています。"
    },
    {
      "indent": 3,
      "text": "The \"index\" link relation is present on all resources other than the directory and indicates the URL of the directory.",
      "ja": "「インデックス」リンク関係は、ディレクトリ以外のすべてのリソース上に存在し、ディレクトリのURLを示します。"
    },
    {
      "indent": 3,
      "text": "The following diagram illustrates the relations between resources on an ACME server. For the most part, these relations are expressed by URLs provided as strings in the resources' JSON representations. Lines with labels in quotes indicate HTTP link relations.",
      "ja": "次の図は、ACMEサーバ上のリソース間の関係を示しています。ほとんどの部分については、これらの関係は、リソースのJSON表現で文字列として与えられたURLで表現されています。引用符で囲まれたラベルを持つ行は、HTTPのリンク関係を示しています。"
    },
    {
      "indent": 5,
      "text": "                             directory\n                                 |\n                                 +--> newNonce\n                                 |\n     +----------+----------+-----+-----+------------+\n     |          |          |           |            |\n     |          |          |           |            |\n     V          V          V           V            V\nnewAccount   newAuthz   newOrder   revokeCert   keyChange\n     |          |          |\n     |          |          |\n     V          |          V\n  account       |        order --+--> finalize\n                |          |     |\n                |          |     +--> cert\n                |          V\n                +---> authorization\n                          | ^\n                          | | \"up\"\n                          V |\n                        challenge",
      "raw": true
    },
    {
      "indent": 21,
      "text": "ACME Resources and Relationships",
      "ja": "ACMEリソースとの関係"
    },
    {
      "indent": 3,
      "text": "The following table illustrates a typical sequence of requests required to establish a new account with the server, prove control of an identifier, issue a certificate, and fetch an updated certificate some time after issuance. The \"->\" is a mnemonic for a Location header field pointing to a created resource.",
      "ja": "次の表は、サーバーで新しいアカウントを確立する識別子の制御を証明する、証明書を発行し、発行後ある程度の時間が更新された証明書を取得するために必要な要求の典型的なシーケンスを示しています。 「 - >」作成したリソースを指し示すLocationヘッダフィールドのニーモニックです。"
    },
    {
      "indent": 3,
      "text": "+-------------------+--------------------------------+--------------+\n| Action            | Request                        | Response     |\n+-------------------+--------------------------------+--------------+\n| Get directory     | GET  directory                 | 200          |\n|                   |                                |              |\n| Get nonce         | HEAD newNonce                  | 200          |\n|                   |                                |              |\n| Create account    | POST newAccount                | 201 ->       |\n|                   |                                | account      |\n|                   |                                |              |\n| Submit order      | POST newOrder                  | 201 -> order |\n|                   |                                |              |\n| Fetch challenges  | POST-as-GET order's            | 200          |\n|                   | authorization urls             |              |\n|                   |                                |              |\n| Respond to        | POST authorization challenge   | 200          |\n| challenges        | urls                           |              |\n|                   |                                |              |\n| Poll for status   | POST-as-GET order              | 200          |\n|                   |                                |              |\n| Finalize order    | POST order's finalize url      | 200          |\n|                   |                                |              |\n| Poll for status   | POST-as-GET order              | 200          |\n|                   |                                |              |\n| Download          | POST-as-GET order's            | 200          |\n| certificate       | certificate url                |              |\n+-------------------+--------------------------------+--------------+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The remainder of this section provides the details of how these resources are structured and how the ACME protocol makes use of them.",
      "ja": "このセクションの残りの部分は、どのようにこれらのリソースが構成されているとどのようにACMEプロトコルはそれらを使用するの詳細を提供します。"
    },
    {
      "indent": 0,
      "text": "7.1.1. Directory",
      "section_title": true,
      "ja": "7.1.1. ディレクトリ"
    },
    {
      "indent": 3,
      "text": "In order to help clients configure themselves with the right URLs for each ACME operation, ACME servers provide a directory object. This should be the only URL needed to configure clients. It is a JSON object, whose field names are drawn from the resource registry (Section 9.7.5) and whose values are the corresponding URLs.",
      "ja": "クライアントは各ACME操作のための右のURLで自分自身を設定するのを助けるために、ACMEサーバは、ディレクトリオブジェクトを提供します。これは、クライアントを構成するために必要な唯一のURLでなければなりません。それは、そのフィールド名リソースレジストリ（セクション9.7.5）から引き出され、その値が対応するURLされているJSONオブジェクトです。"
    },
    {
      "indent": 20,
      "text": "+------------+--------------------+\n| Field      | URL in Value       |\n+------------+--------------------+\n| newNonce   | New nonce          |\n|            |                    |\n| newAccount | New account        |\n|            |                    |\n| newOrder   | New order          |\n|            |                    |\n| newAuthz   | New authorization  |\n|            |                    |\n| revokeCert | Revoke certificate |\n|            |                    |\n| keyChange  | Key change         |\n+------------+--------------------+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "There is no constraint on the URL of the directory except that it should be different from the other ACME server resources' URLs, and that it should not clash with other services. For instance:",
      "ja": "それは他のACMEサーバのリソースのURLのとは異なる場合があり、それは他のサービスと衝突してはならないという必要があることを除いて、ディレクトリのURLには制約はありません。例えば："
    },
    {
      "indent": 3,
      "text": "o a host that functions as both an ACME and a Web server may want to keep the root path \"/\" for an HTML \"front page\" and place the ACME directory under the path \"/acme\".",
      "ja": "O ACMEとWebサーバーの両方として機能するが、パス「/ ACME」の下にACMEディレクトリをHTMLのための「フロントページの」ルート・パス「/」を維持して配置することがホスト。"
    },
    {
      "indent": 3,
      "text": "o a host that only functions as an ACME server could place the directory under the path \"/\".",
      "ja": "ACMEサーバとしてのみ機能し、パス「/」ディレクトリの下に置くことができるホストを、O。"
    },
    {
      "indent": 3,
      "text": "If the ACME server does not implement pre-authorization (Section 7.4.1), it MUST omit the \"newAuthz\" field of the directory.",
      "ja": "ACMEサーバは、事前承認（7.4.1項）を実装していない場合は、ディレクトリの「newAuthz」フィールドを省略しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The object MAY additionally contain a \"meta\" field. If present, it MUST be a JSON object; each field in the object is an item of metadata relating to the service provided by the ACME server.",
      "ja": "オブジェクトは、さらに、「メタ」フィールドを含むかもしれません。存在する場合、それはJSONオブジェクトでなければなりません。オブジェクト内の各フィールドは、ACMEサーバによって提供されるサービスに関連するメタデータの項目です。"
    },
    {
      "indent": 3,
      "text": "The following metadata items are defined (Section 9.7.6), all of which are OPTIONAL:",
      "ja": "次のメタデータ項目はオプションで全ては、（セクション9.7.6）に定義されます："
    },
    {
      "indent": 3,
      "text": "termsOfService (optional, string): A URL identifying the current terms of service.",
      "ja": "termsOfService（オプション、文字列）：サービスの現在の条件を特定するURL。"
    },
    {
      "indent": 3,
      "text": "website (optional, string): An HTTP or HTTPS URL locating a website providing more information about the ACME server.",
      "ja": "ウェブサイト（オプション、文字列）：HTTPまたはHTTPSをURL ACMEサーバに関する詳細な情報を提供するウェブサイトを見つけます。"
    },
    {
      "indent": 3,
      "text": "caaIdentities (optional, array of string): The hostnames that the ACME server recognizes as referring to itself for the purposes of CAA record validation as defined in [RFC6844]. Each string MUST represent the same sequence of ASCII code points that the server will expect to see as the \"Issuer Domain Name\" in a CAA issue or issuewild property tag. This allows clients to determine the correct issuer domain name to use when configuring CAA records.",
      "ja": "（オプション、文字列の配列）caaIdentities：ACMEサーバは[RFC6844]で定義されるようにCAAレコードの検証のためにそれ自体を指すものとして認識したホスト名。各文字列は、サーバーがCAAの問題やissuewildプロパティタグに「発行者ドメイン名」として見ることを期待することをASCIIコードポイントの同じシーケンスを表現しなければなりません。これは、クライアントがCAAレコードを設定する際に使用する正しい発行者のドメイン名を決定することができます。"
    },
    {
      "indent": 3,
      "text": "externalAccountRequired (optional, boolean): If this field is present and set to \"true\", then the CA requires that all newAccount requests include an \"externalAccountBinding\" field associating the new account with an external account.",
      "ja": "externalAccountRequired（オプション、ブール値）：このフィールドが存在し、「真」に設定されている場合、CAは、すべてのnewAccount要求が外部アカウントで新しいアカウントを関連付ける「externalAccountBinding」フィールドが含まれている必要があります。"
    },
    {
      "indent": 3,
      "text": "Clients access the directory by sending a GET request to the directory URL.",
      "ja": "クライアントは、ディレクトリのURLにGETリクエストを送信することにより、ディレクトリにアクセスします。"
    },
    {
      "indent": 3,
      "text": "HTTP/1.1 200 OK Content-Type: application/json",
      "ja": "HTTP / 1.1 200 OKのContent-Type：アプリケーション/ JSON"
    },
    {
      "indent": 3,
      "text": "{\n  \"newNonce\": \"https://example.com/acme/new-nonce\",\n  \"newAccount\": \"https://example.com/acme/new-account\",\n  \"newOrder\": \"https://example.com/acme/new-order\",\n  \"newAuthz\": \"https://example.com/acme/new-authz\",\n  \"revokeCert\": \"https://example.com/acme/revoke-cert\",\n  \"keyChange\": \"https://example.com/acme/key-change\",\n  \"meta\": {\n    \"termsOfService\": \"https://example.com/acme/terms/2017-5-30\",\n    \"website\": \"https://www.example.com/\",\n    \"caaIdentities\": [\"example.com\"],\n    \"externalAccountRequired\": false\n  }\n}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "7.1.2. Account Objects",
      "section_title": true,
      "ja": "7.1.2. アカウントオブジェクト"
    },
    {
      "indent": 3,
      "text": "An ACME account resource represents a set of metadata associated with an account. Account resources have the following structure:",
      "ja": "ACMEアカウントのリソースは、アカウントに関連付けられたメタデータのセットを表します。アカウントリソースは、以下の構造を有します："
    },
    {
      "indent": 3,
      "text": "status (required, string): The status of this account. Possible values are \"valid\", \"deactivated\", and \"revoked\". The value \"deactivated\" should be used to indicate client-initiated deactivation whereas \"revoked\" should be used to indicate server-initiated deactivation. See Section 7.1.6.",
      "ja": "ステータス（必須、文字列）：このアカウントの状態。可能な値は、「有効」「無効化」であり、「取り消し」。 「非アクティブ」の値を「無効化」のサーバ起動停止を指示するために使用されなければならないのに対し、クライアント主導の非活性化を示すために使用されなければなりません。セクション7.1.6を参照してください。"
    },
    {
      "indent": 3,
      "text": "contact (optional, array of string): An array of URLs that the server can use to contact the client for issues related to this account. For example, the server may wish to notify the client about server-initiated revocation or certificate expiration. For information on supported URL schemes, see Section 7.3.",
      "ja": "連絡先（文字列のオプション、配列）：サーバはこのアカウントに関連する問題のために、クライアントに連絡するために使用できるURLの配列。例えば、サーバは、サーバが開始した取消または証明書の有効期限についてクライアントに通知することを望むかもしれません。サポートされるURLスキームの詳細については、7.3節を参照してください。"
    },
    {
      "indent": 3,
      "text": "termsOfServiceAgreed (optional, boolean): Including this field in a newAccount request, with a value of true, indicates the client's agreement with the terms of service. This field cannot be updated by the client.",
      "ja": "termsOfServiceAgreed（オプション、ブール値）：このフィールドを含むnewAccount要求では、真の値と、利用規約とクライアントの同意を示しています。このフィールドは、クライアントによって更新することができません。"
    },
    {
      "indent": 3,
      "text": "externalAccountBinding (optional, object): Including this field in a newAccount request indicates approval by the holder of an existing non-ACME account to bind that account to this ACME account. This field is not updateable by the client (see Section 7.3.4).",
      "ja": "（オプション、オブジェクト）externalAccountBinding：このフィールドを含むnewAccount要求では、このACMEアカウントにそのアカウントをバインドする既存の非ACMEの口座の保有者による承認を示します。このフィールドは、クライアントによって更新できません（7.3.4項を参照してください）。"
    },
    {
      "indent": 3,
      "text": "orders (required, string): A URL from which a list of orders submitted by this account can be fetched via a POST-as-GET request, as described in Section 7.1.2.1.",
      "ja": "受注（必須、文字列）：セクション7.1.2.1で説明したように、このアカウントから提出された注文のリストは、POST-AS-GET要求を経由して取り込むことができ、そこからURL。"
    },
    {
      "indent": 3,
      "text": "{\n  \"status\": \"valid\",\n  \"contact\": [\n    \"mailto:cert-admin@example.org\",\n    \"mailto:admin@example.org\"\n  ],\n  \"termsOfServiceAgreed\": true,\n  \"orders\": \"https://example.com/acme/orders/rzGoeA\"\n}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "7.1.2.1. Orders List",
      "section_title": true,
      "ja": "7.1.2.1。受注一覧"
    },
    {
      "indent": 3,
      "text": "Each account object includes an \"orders\" URL from which a list of orders created by the account can be fetched via POST-as-GET request. The result of the request MUST be a JSON object whose \"orders\" field is an array of URLs, each identifying an order belonging to the account. The server SHOULD include pending orders and SHOULD NOT include orders that are invalid in the array of URLs. The server MAY return an incomplete list, along with a Link header field with a \"next\" link relation indicating where further entries can be acquired.",
      "ja": "各アカウントオブジェクトは、アカウントによって作成された注文のリストは、POST-AS-GET要求を経由して取り込むことができ、そこから「受注」URLを含んでいます。リクエストの結果は、その「注文」フィールドJSONオブジェクトである必要があり、各アカウントに属する順序を識別するURLの配列です。サーバーは、保留中の注文を含むべきであるとURLの配列で無効であるオーダーを含めるべきではありません。サーバはさらに、エントリを取得できる場所を示す「次へ」のリンク関係とリンクヘッダフィールドと共に、不完全なリストを返すことができます。"
    },
    {
      "indent": 3,
      "text": "HTTP/1.1 200 OK Content-Type: application/json Link: <https://example.com/acme/directory>;rel=\"index\" Link: <https://example.com/acme/orders/rzGoeA?cursor=2>;rel=\"next\"",
      "ja": "HTTP / 1.1 200 OKのContent-Type：アプリケーション/ JSONのリンク：<https://example.com/acme/directory>; REL = \"インデックス\" リンク：<https://example.com/acme/orders/rzGoeA？カーソル= 2>; REL = \"次\""
    },
    {
      "indent": 3,
      "text": "{\n  \"orders\": [\n    \"https://example.com/acme/order/TOlocE8rfgo\",\n    \"https://example.com/acme/order/4E16bbL5iSw\",\n    /* more URLs not shown for example brevity */\n    \"https://example.com/acme/order/neBHYLfw0mg\"\n  ]\n}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "7.1.3. Order Objects",
      "section_title": true,
      "ja": "7.1.3.  Orderオブジェクト"
    },
    {
      "indent": 3,
      "text": "An ACME order object represents a client's request for a certificate and is used to track the progress of that order through to issuance. Thus, the object contains information about the requested certificate, the authorizations that the server requires the client to complete, and any certificates that have resulted from this order.",
      "ja": "ACME順序オブジェクトは、証明書のためのクライアントの要求を表し、発行に至るまでその順番の進捗状況を追跡するために使用されます。このように、オブジェクトが要求された証明書、サーバが完了するまでにクライアントが必要な権限、およびこの順序から生じたすべての証明書に関する情報が含まれています。"
    },
    {
      "indent": 3,
      "text": "status (required, string): The status of this order. Possible values are \"pending\", \"ready\", \"processing\", \"valid\", and \"invalid\". See Section 7.1.6.",
      "ja": "ステータス（必須、文字列）：この注文のステータス。可能な値は「有効」と「無効」、「保留」、「準備完了」、「処理」されています。セクション7.1.6を参照してください。"
    },
    {
      "indent": 3,
      "text": "expires (optional, string): The timestamp after which the server will consider this order invalid, encoded in the format specified in [RFC3339]. This field is REQUIRED for objects with \"pending\" or \"valid\" in the status field.",
      "ja": "サーバはこの順序が無効に検討していくた後、タイムスタンプ、[RFC3339]で指定された形式でエンコードされた：（オプション、文字列）を満了します。このフィールドは、ステータスフィールドに「保留中」または「有効」とするオブジェクトのために必要です。"
    },
    {
      "indent": 3,
      "text": "identifiers (required, array of object): An array of identifier objects that the order pertains to.",
      "ja": "識別子（オブジェクトの必要、アレイ）：注文がに関する識別子オブジェクトの配列。"
    },
    {
      "indent": 6,
      "text": "type (required, string): The type of identifier. This document defines the \"dns\" identifier type. See the registry defined in Section 9.7.7 for any others.",
      "ja": "タイプ（必須、ストリング）：識別子のタイプ。この文書では、「DNS」識別子のタイプを定義します。他のものについては、セクション9.7.7で定義されたレジストリを参照してください。"
    },
    {
      "indent": 6,
      "text": "value (required, string): The identifier itself.",
      "ja": "値（必須、ストリング）：識別子自体。"
    },
    {
      "indent": 3,
      "text": "notBefore (optional, string): The requested value of the notBefore field in the certificate, in the date format defined in [RFC3339].",
      "ja": "notBeforeの（任意の文字列）：[RFC3339]で定義された日付形式の証明書でnotBeforeのフィールドの要求された値、。"
    },
    {
      "indent": 3,
      "text": "notAfter (optional, string): The requested value of the notAfter field in the certificate, in the date format defined in [RFC3339].",
      "ja": "notAfterの（任意の文字列）：[RFC3339]で定義された日付形式の証明書でnotAfterのフィールドの要求された値、。"
    },
    {
      "indent": 3,
      "text": "error (optional, object): The error that occurred while processing the order, if any. This field is structured as a problem document [RFC7807].",
      "ja": "エラー（オプション、オブジェクト）：もしあれば、注文を処理中に発生したエラー。このフィールドは、問題の文書[RFC7807]として構成されています。"
    },
    {
      "indent": 3,
      "text": "authorizations (required, array of string): For pending orders, the authorizations that the client needs to complete before the requested certificate can be issued (see Section 7.5), including unexpired authorizations that the client has completed in the past for identifiers specified in the order. The authorizations required are dictated by server policy; there may not be a 1:1 relationship between the order identifiers and the authorizations required. For final orders (in the \"valid\" or \"invalid\" state), the authorizations that were completed. Each entry is a URL from which an authorization can be fetched with a POST-as-GET request.",
      "ja": "権限（必要な、文字列の配列）：保留中の注文の場合は、クライアントが要求した証明書が発行される前に完了する必要の権限は、クライアントが指定した識別子のために、過去に完了した期限が切れていない権限を含む、（7.5節を参照してください）注文。必要な権限は、サーバーポリシーによって決定されます。注文識別子と必要な権限は1：1の関係が存在しなくてもよいです。 （「有効」または「無効」の状態で）最後の注文については、権限が完了したこと。各エントリには、認証がPOST-AS-GET要求でフェッチすることができ、そこからURLです。"
    },
    {
      "indent": 3,
      "text": "finalize (required, string): A URL that a CSR must be POSTed to once all of the order's authorizations are satisfied to finalize the order. The result of a successful finalization will be the population of the certificate URL for the order.",
      "ja": "（必須、文字列）確定：CSRはかつてするための権限のすべての投稿をしなければならないURLが注文を確定して満足しています。成功したファイナライズの結果は、オーダーの証明書URLの人口になります。"
    },
    {
      "indent": 3,
      "text": "certificate (optional, string): A URL for the certificate that has been issued in response to this order.",
      "ja": "証明書（オプション、文字列）：この順序に応答して発行された証明書のURL。"
    },
    {
      "indent": 3,
      "text": "{\n  \"status\": \"valid\",\n  \"expires\": \"2016-01-20T14:09:07.99Z\",",
      "raw": true
    },
    {
      "indent": 5,
      "text": "\"identifiers\": [\n  { \"type\": \"dns\", \"value\": \"www.example.org\" },\n  { \"type\": \"dns\", \"value\": \"example.org\" }\n],",
      "raw": true
    },
    {
      "indent": 5,
      "text": "\"notBefore\": \"2016-01-01T00:00:00Z\",\n\"notAfter\": \"2016-01-08T00:00:00Z\",",
      "raw": true
    },
    {
      "indent": 5,
      "text": "\"authorizations\": [\n  \"https://example.com/acme/authz/PAniVnsZcis\",\n  \"https://example.com/acme/authz/r4HqLzrSrpI\"\n],",
      "raw": true
    },
    {
      "indent": 5,
      "text": "\"finalize\": \"https://example.com/acme/order/TOlocE8rfgo/finalize\",",
      "raw": true
    },
    {
      "indent": 3,
      "text": "  \"certificate\": \"https://example.com/acme/cert/mAt3xBGaobw\"\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Any identifier of type \"dns\" in a newOrder request MAY have a wildcard domain name as its value. A wildcard domain name consists of a single asterisk character followed by a single full stop character (\"*.\") followed by a domain name as defined for use in the Subject Alternate Name Extension by [RFC5280]. An authorization returned by the server for a wildcard domain name identifier MUST NOT include the asterisk and full stop (\"*.\") prefix in the authorization identifier value. The returned authorization MUST include the optional \"wildcard\" field, with a value of true.",
      "ja": "newOrder要求を入力し、「DNS」のいずれかの識別子は、その値としてワイルドカードドメイン名を持っているかもしれません。 [RFC5280]でサブジェクト代替名拡張子での使用のために定義されているワイルドカードドメイン名は、ドメイン名に続くシングル、フルストップ文字（「*。」）に続いて、単一のアスタリスク文字で構成されています。ワイルドカードドメイン名識別子のために、サーバから返された許可は、アスタリスクとピリオド含んではいけません（「*を。」）の認可識別子の値で接頭辞。返された許可は、真の値と、オプションの「ワイルドカード」フィールドを含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "The elements of the \"authorizations\" and \"identifiers\" arrays are immutable once set. The server MUST NOT change the contents of either array after they are created. If a client observes a change in the contents of either array, then it SHOULD consider the order invalid.",
      "ja": "「承認」および「識別子」配列の要素は不変一度設定されています。それらが作成された後、サーバーは、いずれかの配列の内容を変更しないでください。クライアントは、どちらかの配列の内容の変化を観察した場合、それは不正な順序を考慮する必要があります。"
    },
    {
      "indent": 3,
      "text": "The \"authorizations\" array of the order SHOULD reflect all authorizations that the CA takes into account in deciding to issue, even if some authorizations were fulfilled in earlier orders or in pre-authorization transactions. For example, if a CA allows multiple orders to be fulfilled based on a single authorization transaction, then it SHOULD reflect that authorization in all of the orders.",
      "ja": "オーダーの「権限」配列は、CAは、いくつかの権限は、以前の注文または事前承認取引で満たされた場合でも、発行することを決定する際に考慮に入れ、すべての権限を反映すべきです。 CAは、複数の注文を単一の認可トランザクションに基づいて履行することを可能にする場合たとえば、それは注文のすべてでその承認を反映する必要があります。"
    },
    {
      "indent": 3,
      "text": "Note that just because an authorization URL is listed in the \"authorizations\" array of an order object doesn't mean that the client is required to take action. There are several reasons that the referenced authorizations may already be valid:",
      "ja": "承認URLをオーダーオブジェクトの「権限」列にリストされているという理由だけで、クライアントがアクションを取るために必要であることを意味しないことに注意してください。参照権限がすでに有効であることを、いくつかの理由があります。"
    },
    {
      "indent": 3,
      "text": "o The client completed the authorization as part of a previous order",
      "ja": "クライアントoを以前の注文の一部として承認を完了"
    },
    {
      "indent": 3,
      "text": "o The client previously pre-authorized the identifier (see Section 7.4.1)",
      "ja": "Oクライアントが以前の識別子を事前承認（7.4.1項を参照してください）"
    },
    {
      "indent": 3,
      "text": "o The server granted the client authorization based on an external account",
      "ja": "Oサーバーは、外部アカウントに基づいてクライアントの認証を付与されました"
    },
    {
      "indent": 3,
      "text": "Clients SHOULD check the \"status\" field of an order to determine whether they need to take any action.",
      "ja": "クライアントは、彼らがどんな行動を取る必要があるかどうかを判断するための「状態」欄をチェックする必要があります。"
    },
    {
      "indent": 0,
      "text": "7.1.4. Authorization Objects",
      "section_title": true,
      "ja": "7.1.4. 権限オブジェクト"
    },
    {
      "indent": 3,
      "text": "An ACME authorization object represents a server's authorization for an account to represent an identifier. In addition to the identifier, an authorization includes several metadata fields, such as the status of the authorization (e.g., \"pending\", \"valid\", or \"revoked\") and which challenges were used to validate possession of the identifier.",
      "ja": "ACMEの権限オブジェクトは、識別子を表現するために、アカウントに対するサーバーの許可を表しています。識別子に加えて、認可（例えば、「保留」「有効」または「失効」）と課題を識別子の所有権を検証するために使用されたそのような許可の状態などのいくつかのメタデータフィールドを含みます。"
    },
    {
      "indent": 3,
      "text": "The structure of an ACME authorization resource is as follows:",
      "ja": "次のようにACME認可リソースの構造は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "identifier (required, object): The identifier that the account is authorized to represent.",
      "ja": "識別子（必要に応じて、オブジェクト）：アカウントを表現することを許可されている識別子。"
    },
    {
      "indent": 6,
      "text": "type (required, string): The type of identifier (see below and Section 9.7.7).",
      "ja": "タイプ（必須、ストリング）：識別子のタイプ（下記参照し、セクション9.7.7）。"
    },
    {
      "indent": 6,
      "text": "value (required, string): The identifier itself.",
      "ja": "値（必須、ストリング）：識別子自体。"
    },
    {
      "indent": 3,
      "text": "status (required, string): The status of this authorization. Possible values are \"pending\", \"valid\", \"invalid\", \"deactivated\", \"expired\", and \"revoked\". See Section 7.1.6.",
      "ja": "ステータス（必須、文字列）：この認証の状態。可能な値は「有効」、「無効」、「非アクティブ」、「期限切れ」、「保留」、および「無効化」しています。セクション7.1.6を参照してください。"
    },
    {
      "indent": 3,
      "text": "expires (optional, string): The timestamp after which the server will consider this authorization invalid, encoded in the format specified in [RFC3339]. This field is REQUIRED for objects with \"valid\" in the \"status\" field.",
      "ja": "サーバは、この承認は無効を検討するまでのタイムスタンプ、[RFC3339]で指定された形式でエンコードされた：（オプション、文字列）を満了します。このフィールドは、「状態」フィールドで「有効」を持つオブジェクトに必要です。"
    },
    {
      "indent": 3,
      "text": "challenges (required, array of objects): For pending authorizations, the challenges that the client can fulfill in order to prove possession of the identifier. For valid authorizations, the challenge that was validated. For invalid authorizations, the challenge that was attempted and failed. Each array entry is an object with parameters required to validate the challenge. A client should attempt to fulfill one of these challenges, and a server should consider any one of the challenges sufficient to make the authorization valid.",
      "ja": "課題（必要に応じて、オブジェクトの配列）：保留中の承認のために、クライアントは識別子の所有を証明するために満たすことができる挑戦。有効な権限については、検証された挑戦。無効な権限のために、と試みた挑戦に失敗しました。各配列エントリーは、チャレンジを検証するために必要なパラメータを持つオブジェクトです。クライアントは、これらの課題のいずれかを満たすために試みるべきである、とサーバーは認証が有効にするのに十分な課題のいずれかを検討すべきです。"
    },
    {
      "indent": 3,
      "text": "wildcard (optional, boolean): This field MUST be present and true for authorizations created as a result of a newOrder request containing a DNS identifier with a value that was a wildcard domain name. For other authorizations, it MUST be absent. Wildcard domain names are described in Section 7.1.3.",
      "ja": "ワイルドカード（オプション、ブール値）：このフィールドは、ワイルドカードのドメイン名であった値でDNS識別子を含むnewOrder要求の結果として作成された認可のために存在し、真でなければなりません。他の権限については、それが存在してはなりません。ワイルドカードドメイン名は、セクション7.1.3で説明されています。"
    },
    {
      "indent": 3,
      "text": "The only type of identifier defined by this specification is a fully qualified domain name (type: \"dns\"). The domain name MUST be encoded in the form in which it would appear in a certificate. That is, it MUST be encoded according to the rules in Section 7 of [RFC5280]. Servers MUST verify any identifier values that begin with the ASCII-Compatible Encoding prefix \"xn--\" as defined in [RFC5890] are properly encoded. Wildcard domain names (with \"*\" as the first label) MUST NOT be included in authorization objects. If an authorization object conveys authorization for the base domain of a newOrder DNS identifier containing a wildcard domain name, then the optional authorizations \"wildcard\" field MUST be present with a value of true.",
      "ja": "この仕様で定義された識別子の唯一のタイプは、完全修飾ドメイン名（「DNS」タイプ）です。ドメイン名は、それが証明書に表示されることになる形で符号化されなければなりません。つまり、それは[RFC5280]のセクション7の規則に従って符号化されなければなりません。サーバーは、[RFC5890]で定義されるようにASCIIコンパチブルエンコーディング接頭辞「xn--」で始まる識別子の値を確認しなければならない適切に符号化されます。 （最初のラベルとして「*」付き）ワイルドカードドメイン名は、権限オブジェクトに含まれてはいけません。権限オブジェクトは、ワイルドカードドメイン名を含むDNS newOrder識別子のベースドメインの許可を伝える場合には、任意の権限「ワイルドカード」フィールドは、真の値に存在しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Section 8 describes a set of challenges for domain name validation.",
      "ja": "第8章では、ドメイン名の検証のための課題のセットを記述します。"
    },
    {
      "indent": 3,
      "text": "{\n  \"status\": \"valid\",\n  \"expires\": \"2015-03-01T14:09:07.99Z\",",
      "raw": true
    },
    {
      "indent": 5,
      "text": "\"identifier\": {\n  \"type\": \"dns\",\n  \"value\": \"www.example.org\"\n},",
      "raw": true
    },
    {
      "indent": 5,
      "text": "\"challenges\": [\n  {\n    \"url\": \"https://example.com/acme/chall/prV_B7yEyA4\",\n    \"type\": \"http-01\",\n    \"status\": \"valid\",\n    \"token\": \"DGyRejmCefe7v4NfDGDKfA\",\n    \"validated\": \"2014-12-01T12:05:58.16Z\"\n  }\n],",
      "raw": true
    },
    {
      "indent": 3,
      "text": " \"wildcard\": false }",
      "ja": "「ワイルドカード」：偽}"
    },
    {
      "indent": 0,
      "text": "7.1.5. Challenge Objects",
      "section_title": true,
      "ja": "7.1.5. チャレンジオブジェクト"
    },
    {
      "indent": 3,
      "text": "An ACME challenge object represents a server's offer to validate a client's possession of an identifier in a specific way. Unlike the other objects listed above, there is not a single standard structure for a challenge object. The contents of a challenge object depend on the validation method being used. The general structure of challenge objects and an initial set of validation methods are described in Section 8.",
      "ja": "ACMEチャレンジオブジェクトは、特定の方法で識別子のクライアントの所有を検証するために、サーバーの申し出を表します。上記の他のオブジェクトとは異なり、攻撃対象のための単一の標準構造は存在しません。挑戦オブジェクトの内容は、使用されている検証方法によって異なります。チャレンジオブジェクトおよび検証方法の初期セットの一般的な構造は、セクション8に記載されています。"
    },
    {
      "indent": 0,
      "text": "7.1.6. Status Changes",
      "section_title": true,
      "ja": "7.1.6. ステータスの変更"
    },
    {
      "indent": 3,
      "text": "Each ACME object type goes through a simple state machine over its lifetime. The \"status\" field of the object indicates which state the object is currently in.",
      "ja": "各ACMEオブジェクト型は、その寿命にわたってシンプルなステートマシンを通過します。オブジェクトの「状態」フィールドは、オブジェクトが現在ある状態を示しています。"
    },
    {
      "indent": 3,
      "text": "Challenge objects are created in the \"pending\" state. They transition to the \"processing\" state when the client responds to the challenge (see Section 7.5.1) and the server begins attempting to validate that the client has completed the challenge. Note that within the \"processing\" state, the server may attempt to validate the challenge multiple times (see Section 8.2). Likewise, client",
      "ja": "チャレンジオブジェクトは「保留」状態で作成されます。クライアントがチャレンジ（第7.5.1項を参照）に応答し、サーバはクライアントがチャレンジを完了したことを検証しようとし始めたとき彼らは、「処理」状態に遷移します。 「処理」状態の中に、サーバーがチャレンジを複数回（8.2節を参照）を検証するために試みることがあることに注意してください。同様に、クライアント"
    },
    {
      "indent": 3,
      "text": "requests for retries do not cause a state change. If validation is successful, the challenge moves to the \"valid\" state; if there is an error, the challenge moves to the \"invalid\" state.",
      "ja": "再試行のための要求は、状態変化が発生することはありません。検証が成功した場合、挑戦は「有効」の状態に移動します。エラーがある場合は、挑戦は「無効」状態に移行します。"
    },
    {
      "indent": 3,
      "text": "         pending\n            |\n            | Receive\n            | response\n            V\n        processing <-+\n            |   |    | Server retry or\n            |   |    | client retry request\n            |   +----+\n            |\n            |\nSuccessful  |   Failed\nvalidation  |   validation\n  +---------+---------+\n  |                   |\n  V                   V\nvalid              invalid",
      "raw": true
    },
    {
      "indent": 18,
      "text": "State Transitions for Challenge Objects",
      "ja": "チャレンジオブジェクトの状態遷移"
    },
    {
      "indent": 3,
      "text": "Authorization objects are created in the \"pending\" state. If one of the challenges listed in the authorization transitions to the \"valid\" state, then the authorization also changes to the \"valid\" state. If the client attempts to fulfill a challenge and fails, or if there is an error while the authorization is still pending, then the authorization transitions to the \"invalid\" state. Once the authorization is in the \"valid\" state, it can expire (\"expired\"), be deactivated by the client (\"deactivated\", see Section 7.5.2), or revoked by the server (\"revoked\").",
      "ja": "権限オブジェクトは、「保留」状態で作成されます。承認に記載されている課題の一つは、「有効」状態に遷移した場合、承認も「有効」状態に変わります。クライアントがチャレンジを満たすためにしようとすると失敗し、または認可がまだ保留されている中にエラーが発生した場合、認可は「無効」状態に遷移した場合。承認が「有効」状態になると、それは（「期限切れ」）期限切れになることができ、クライアントによって無効にすること（「無効」、7.5.2項を参照）、またはサーバ（「取り消し」）によって取り消さ。"
    },
    {
      "indent": 7,
      "text": "               pending --------------------+\n                  |                        |\nChallenge failure |                        |\n       or         |                        |\n      Error       |  Challenge valid       |\n        +---------+---------+              |\n        |                   |              |\n        V                   V              |\n     invalid              valid            |\n                            |              |\n                            |              |\n                            |              |\n             +--------------+--------------+\n             |              |              |\n             |              |              |\n      Server |       Client |   Time after |\n      revoke |   deactivate |    \"expires\" |\n             V              V              V\n          revoked      deactivated      expired",
      "raw": true
    },
    {
      "indent": 16,
      "text": "State Transitions for Authorization Objects",
      "ja": "権限オブジェクトのための状態遷移"
    },
    {
      "indent": 3,
      "text": "Order objects are created in the \"pending\" state. Once all of the authorizations listed in the order object are in the \"valid\" state, the order transitions to the \"ready\" state. The order moves to the \"processing\" state after the client submits a request to the order's \"finalize\" URL and the CA begins the issuance process for the certificate. Once the certificate is issued, the order enters the \"valid\" state. If an error occurs at any of these stages, the order moves to the \"invalid\" state. The order also moves to the \"invalid\" state if it expires or one of its authorizations enters a final state other than \"valid\" (\"expired\", \"revoked\", or \"deactivated\").",
      "ja": "Orderオブジェクトは「保留」状態で作成されます。順序オブジェクトに記載されている権限のすべてたら「準備完了」状態にオーダー遷移は、「有効」状態になっています。クライアントは、注文の「確定」URLとCAに要求を提出した後、「処理」状態に順番に移動するには、証明書発行プロセスを開始します。証明書が発行されると、順序が「有効」状態になります。エラーがこれらの段階のいずれかで発生した場合、注文は「無効」状態に移行します。有効期限が切れるか、その権限の一つが「有効」以外の最終状態になった場合の順序は、（、「取り消し」、「期限切れ」、または「無効」）「無効」状態に移行します。"
    },
    {
      "indent": 3,
      "text": " pending --------------+\n    |                  |\n    | All authz        |\n    | \"valid\"          |\n    V                  |\n  ready ---------------+\n    |                  |\n    | Receive          |\n    | finalize         |\n    | request          |\n    V                  |\nprocessing ------------+\n    |                  |\n    | Certificate      | Error or\n    | issued           | Authorization failure\n    V                  V\n  valid             invalid",
      "raw": true
    },
    {
      "indent": 20,
      "text": "State Transitions for Order Objects",
      "ja": "Orderオブジェクトのための状態遷移"
    },
    {
      "indent": 3,
      "text": "Account objects are created in the \"valid\" state, since no further action is required to create an account after a successful newAccount request. If the account is deactivated by the client or revoked by the server, it moves to the corresponding state.",
      "ja": "それ以上のアクションが成功したnewAccount要求の後にアカウントを作成するために必要とされないので、Accountオブジェクトは、「有効」の状態で作成されます。アカウントがクライアントによって不活性化またはサーバーによって取り消された場合は、対応する状態に移行します。"
    },
    {
      "indent": 3,
      "text": "                  valid\n                    |\n                    |\n        +-----------+-----------+\n Client |                Server |\ndeactiv.|                revoke |\n        V                       V\n   deactivated               revoked",
      "raw": true
    },
    {
      "indent": 19,
      "text": "State Transitions for Account Objects",
      "ja": "アカウントオブジェクトの状態遷移"
    },
    {
      "indent": 3,
      "text": "Note that some of these states may not ever appear in a \"status\" field, depending on server behavior. For example, a server that issues synchronously will never show an order in the \"processing\" state. A server that deletes expired authorizations immediately will never show an authorization in the \"expired\" state.",
      "ja": "これらの状態のいくつかは、これまでのサーバの挙動に応じて、「状態」欄に表示されない場合があります。例えば、同期発行サーバは、「処理」状態の順序を表示することはありません。すぐに期限切れの権限を削除し、サーバーは「期限切れ」状態での承認を表示することはありません。"
    },
    {
      "indent": 0,
      "text": "7.2. Getting a Nonce",
      "section_title": true,
      "ja": "7.2. ナンスの取得"
    },
    {
      "indent": 3,
      "text": "Before sending a POST request to the server, an ACME client needs to have a fresh anti-replay nonce to put in the \"nonce\" header of the JWS. In most cases, the client will have gotten a nonce from a previous request. However, the client might sometimes need to get a new nonce, e.g., on its first request to the server or if an existing nonce is no longer valid.",
      "ja": "サーバーへのPOSTリクエストを送信する前に、ACMEクライアントは、JWSの「ナンス」ヘッダーに入れて新鮮なアンチリプレイナンスを持っている必要があります。ほとんどの場合、クライアントは、以前の要求からナンスを得ているでしょう。ただし、クライアントは、時々、例えば、サーバーへの最初のリクエストに応じて、または既存のnonceが有効でなくなった場合は、新しいナンスを取得する必要があります。"
    },
    {
      "indent": 3,
      "text": "To get a fresh nonce, the client sends a HEAD request to the newNonce resource on the server. The server's response MUST include a Replay-Nonce header field containing a fresh nonce and SHOULD have status code 200 (OK). The server MUST also respond to GET requests for this resource, returning an empty body (while still providing a Replay-Nonce header) with a status code of 204 (No Content).",
      "ja": "新鮮なnonceを取得するには、クライアントは、サーバ上のnewNonceリソースへのHEADリクエストを送信します。サーバの応答は、新鮮なnonceを含むリプレイノンスヘッダフィールドを含まなければなりませんし、ステータスコード200（OK）を有するべきです。サーバは、（まだリプレイノンスヘッダを提供しながら）204のステータスコード（無コンテンツ）と、空のボディを返す、このリソースに対する要求をGETに応答しなければなりません。"
    },
    {
      "indent": 3,
      "text": "HEAD /acme/new-nonce HTTP/1.1 Host: example.com",
      "ja": "HEAD / ACME /新ナンスHTTP / 1.1ホスト：example.com"
    },
    {
      "indent": 3,
      "text": "HTTP/1.1 200 OK Replay-Nonce: oFvnlFP1wIhRlYS2jTaXbA Cache-Control: no-store Link: <https://example.com/acme/directory>;rel=\"index\"",
      "ja": "HTTP / 1.1 200 OKリプレイ・ナンス：oFvnlFP1wIhRlYS2jTaXbAのCache-Control：無店舗リンク：<https://example.com/acme/directory>; REL = \"インデックス\""
    },
    {
      "indent": 3,
      "text": "Proxy caching of responses from the newNonce resource can cause clients to receive the same nonce repeatedly, leading to \"badNonce\" errors. The server MUST include a Cache-Control header field with the \"no-store\" directive in responses for the newNonce resource, in order to prevent caching of this resource.",
      "ja": "newNonceリソースからの応答のプロキシキャッシュは、クライアントが「badNonce」エラーにつながる、繰り返し同じナンスを受信することがあります。サーバーは、このリソースのキャッシュを防ぐために、newNonceリソースの応答で、「無店舗」ディレクティブでCache-Controlヘッダフィールドを含まなければなりません。"
    },
    {
      "indent": 0,
      "text": "7.3. Account Management",
      "section_title": true,
      "ja": "7.3. アカウント管理"
    },
    {
      "indent": 3,
      "text": "In this section, we describe how an ACME client can create an account on an ACME server and perform some modifications to the account after it has been created.",
      "ja": "このセクションでは、ACMEクライアントは、ACMEサーバ上でアカウントを作成し、それが作成された後、アカウントにいくつかの変更を実行する方法について説明します。"
    },
    {
      "indent": 3,
      "text": "A client creates a new account with the server by sending a POST request to the server's newAccount URL. The body of the request is a stub account object containing some subset of the following fields:",
      "ja": "クライアントは、サーバのnewAccount URLにPOSTリクエストを送信することにより、サーバで新しいアカウントを作成します。リクエストのボディには、次のフィールドのサブセットを含むスタブアカウントオブジェクトです。"
    },
    {
      "indent": 3,
      "text": "contact (optional, array of string): Same meaning as the corresponding server field defined in Section 7.1.2.",
      "ja": "連絡先（オプション、文字列の配列）：7.1.2項で定義されている対応するサーバー]フィールドと同じ意味。"
    },
    {
      "indent": 3,
      "text": "termsOfServiceAgreed (optional, boolean): Same meaning as the corresponding server field defined in Section 7.1.2.",
      "ja": "termsOfServiceAgreed（オプション、ブール値）：7.1.2項で定義されている対応するサーバー]フィールドと同じ意味。"
    },
    {
      "indent": 3,
      "text": "onlyReturnExisting (optional, boolean): If this field is present with the value \"true\", then the server MUST NOT create a new account if one does not already exist. This allows a client to look up an account URL based on an account key (see Section 7.3.1).",
      "ja": "（オプション、boolean）をonlyReturnExistingは：1が存在しない場合、このフィールドには値が「真」である場合は、サーバは新しいアカウントを作成してはいけません。これは、クライアントが（7.3.1項を参照）、アカウントキーに基づいて、アカウントのURLを検索することができます。"
    },
    {
      "indent": 3,
      "text": "externalAccountBinding (optional, object): Same meaning as the corresponding server field defined in Section 7.1.2",
      "ja": "externalAccountBinding（オプション、オブジェクト）：7.1.2項で定義されている対応するサーバー]フィールドと同じ意味"
    },
    {
      "indent": 3,
      "text": "POST /acme/new-account HTTP/1.1 Host: example.com Content-Type: application/jose+json",
      "ja": "POST / ACME /新しいアカウントのHTTP / 1.1ホスト：example.comのContent-Type：アプリケーション/ホセ+ JSON"
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": base64url({\n    \"alg\": \"ES256\",\n    \"jwk\": {...},\n    \"nonce\": \"6S8IqOGY7eL2lsGoTZYifg\",\n    \"url\": \"https://example.com/acme/new-account\"\n  }),\n  \"payload\": base64url({\n    \"termsOfServiceAgreed\": true,\n    \"contact\": [\n      \"mailto:cert-admin@example.org\",\n      \"mailto:admin@example.org\"\n    ]\n  }),\n  \"signature\": \"RZPOnYoPs1PhjszF...-nh6X1qtOFPB519I\"\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The server MUST ignore any values provided in the \"orders\" fields in account objects sent by the client, as well as any other fields that it does not recognize. If new fields are specified in the future, the specification of those fields MUST describe whether they can be provided by the client. The server MUST NOT reflect the \"onlyReturnExisting\" field or any unrecognized fields in the resulting account object. This allows clients to detect when servers do not support an extension field.",
      "ja": "サーバは、クライアントから送信されたアカウントオブジェクトの「受注」の分野だけでなく、それが認識しない任意の他の分野で提供された値を無視しなければなりません。新しいフィールドは、将来的に指定されている場合、これらのフィールドの仕様では、彼らは、クライアントによって提供することができるかどうかを説明しなければなりません。サーバーは、「onlyReturnExisting」フィールドまたは結果のアカウントオブジェクトで認識されないフィールドを反映してはなりません。これは、サーバが拡張フィールドをサポートしていないとき、クライアントが検出することができます。"
    },
    {
      "indent": 3,
      "text": "The server SHOULD validate that the contact URLs in the \"contact\" field are valid and supported by the server. If the server validates contact URLs, it MUST support the \"mailto\" scheme. Clients MUST NOT provide a \"mailto\" URL in the \"contact\" field that contains \"hfields\" [RFC6068] or more than one \"addr-spec\" in the \"to\" component. If a server encounters a \"mailto\" contact URL that does not meet these criteria, then it SHOULD reject it as invalid.",
      "ja": "サーバーは、「連絡先」フィールドに連絡先のURLが有効で、サーバーによってサポートされていることを検証する必要があります。サーバが接触URLを検証した場合、それは「MAILTO」スキームをサポートしなければなりません。クライアントは、「へ」コンポーネントに「hfields」[RFC6068]または複数の「ADDRスペック」を含む「接触」フィールドに「mailtoの」URLを提供してはなりません。サーバはこれらの基準を満たしていない「MAILTO」接触URLに遭遇した場合、それは無効としてそれを拒否すべきです。"
    },
    {
      "indent": 3,
      "text": "If the server rejects a contact URL for using an unsupported scheme, it MUST return an error of type \"unsupportedContact\", with a description of the error and what types of contact URLs the server considers acceptable. If the server rejects a contact URL for using a supported scheme but an invalid value, then the server MUST return an error of type \"invalidContact\".",
      "ja": "サーバがサポートされていないスキームを使用するための接触URLを拒否した場合、それはエラーの説明と接触URLのどのような種類のサーバが許容できると考えると、タイプ「unsupportedContact」のエラーを返さなければなりません。サーバがサポートスキームが、無効な値を使用するための接触URLを拒否した場合、サーバはタイプのエラーを返さなければならない「invalidContact」。"
    },
    {
      "indent": 3,
      "text": "If the server wishes to require the client to agree to terms under which the ACME service is to be used, it MUST indicate the URL where such terms can be accessed in the \"termsOfService\" subfield of the \"meta\" field in the directory object, and the server MUST reject newAccount requests that do not have the \"termsOfServiceAgreed\" field set to \"true\". Clients SHOULD NOT automatically agree to terms by default. Rather, they SHOULD require some user interaction for agreement to terms.",
      "ja": "サーバがACMEサービスが使用されるの下で条件に同意することをクライアントに要求することを希望する場合、それは、そのような用語は、ディレクトリオブジェクトに「メタ」フィールドの「termsOfService」サブフィールドにアクセスできるURLを示してしなければなりませんサーバは、「真」に設定された「termsOfServiceAgreed」フィールドを持っていないnewAccount要求を拒絶しなければなりません。クライアントは自動的にデフォルトで条件に同意すべきではありません。むしろ、彼らは条件に合意するためのいくつかのユーザーとの対話を要求する必要があります。"
    },
    {
      "indent": 3,
      "text": "The server creates an account and stores the public key used to verify the JWS (i.e., the \"jwk\" element of the JWS header) to authenticate future requests from the account. The server returns this account object in a 201 (Created) response, with the account URL in a Location header field. The account URL is used as the \"kid\" value in the JWS authenticating subsequent requests by this account (see Section 6.2). The account URL is also used for requests for management actions on this account, as described below.",
      "ja": "サーバは、アカウントを作成し、JWSを検証する（即ち、JWSヘッダの「jwk」要素）口座からの将来の要求を認証するために使用される公開鍵を格納します。サーバは、LocationヘッダフィールドのアカウントURLと、201（作成される）応答でこのアカウントオブジェクトを返します。アカウントのURLは、このアカウントで後続の要求を認証するJWSで「子供」の値として使用されている（6.2節を参照してください）。後述のようにアカウントのURLも、このアカウントの管理操作のための要求に使用されます。"
    },
    {
      "indent": 3,
      "text": "HTTP/1.1 201 Created Content-Type: application/json Replay-Nonce: D8s4D2mLs8Vn-goWuPQeKA Link: <https://example.com/acme/directory>;rel=\"index\" Location: https://example.com/acme/acct/evOfKhNU60wg",
      "ja": "HTTP / 1.1 201は、コンテンツタイプを作成：アプリケーション/ JSONリプレイ-ナンス：D8s4D2mLs8Vn-goWuPQeKAリンク：<https://example.com/acme/directory>; REL = \"インデックス\" 場所：https://example.com/ ACME / ACCT / evOfKhNU60wg"
    },
    {
      "indent": 3,
      "text": "{\n  \"status\": \"valid\",",
      "raw": true
    },
    {
      "indent": 5,
      "text": "\"contact\": [\n  \"mailto:cert-admin@example.org\",\n  \"mailto:admin@example.org\"\n],",
      "raw": true
    },
    {
      "indent": 3,
      "text": "  \"orders\": \"https://example.com/acme/acct/evOfKhNU60wg/orders\"\n}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "7.3.1. Finding an Account URL Given a Key",
      "section_title": true,
      "ja": "7.3.1. キー考えるとアカウントURLを検索"
    },
    {
      "indent": 3,
      "text": "If the server receives a newAccount request signed with a key for which it already has an account registered with the provided account key, then it MUST return a response with status code 200 (OK) and provide the URL of that account in the Location header field. The body of this response represents the account object as it existed on the server before this request; any fields in the request object MUST be ignored. This allows a client that has an account key but not the corresponding account URL to recover the account URL.",
      "ja": "サーバが既に提供されたアカウントをキーに登録されたアカウントを持っているキーで署名newAccount要求を受信した場合、それはステータスコード200（OK）で応答を返し、LocationヘッダフィールドにそのアカウントのURLを提供しなければなりません。それは、この要求の前に、サーバー上に存在し、このレスポンスのボディは、アカウントオブジェクトを表します。リクエスト・オブジェクト内のすべてのフィールドを無視しなければなりません。これは、アカウントのキーではなく、アカウントのURLを回復するために、対応するアカウントのURLを持つクライアントを可能にします。"
    },
    {
      "indent": 3,
      "text": "If a client wishes to find the URL for an existing account and does not want an account to be created if one does not already exist, then it SHOULD do so by sending a POST request to the newAccount URL with a JWS whose payload has an \"onlyReturnExisting\" field set to \"true\" ({\"onlyReturnExisting\": true}). If a client sends such a request and an account does not exist, then the server MUST return an error response with status code 400 (Bad Request) and type \"urn:ietf:params:acme:error:accountDoesNotExist\".",
      "ja": "クライアントは、既存のアカウントのURLを検索したいとが存在しない場合、それはペイロード」を持っているJWSとnewAccount URLにPOSTリクエストを送信することによって、そうするべきでアカウントを作成することを希望しない場合「フィールド・セットを \"true\"（onlyReturnExisting { \"onlyReturnExisting\"：真}）。クライアントは、このような要求を送信し、アカウントが存在しない場合、サーバはステータスコード400（不正なリクエスト）とタイプ「：IETF：のparams：ACME：エラー：accountDoesNotExist壷」とのエラー応答を返さなければなりません。"
    },
    {
      "indent": 0,
      "text": "7.3.2. Account Update",
      "section_title": true,
      "ja": "7.3.2. アカウントの更新"
    },
    {
      "indent": 3,
      "text": "If the client wishes to update this information in the future, it sends a POST request with updated information to the account URL. The server MUST ignore any updates to the \"orders\" field, \"termsOfServiceAgreed\" field (see Section 7.3.3), the \"status\" field (except as allowed by Section 7.3.6), or any other fields it does not recognize. If the server accepts the update, it MUST return a response with a 200 (OK) status code and the resulting account object.",
      "ja": "クライアントは、将来的にこの情報を更新したい場合は、アカウントのURLに更新された情報とPOSTリクエストを送信します。サーバーは、「注文」欄、「termsOfServiceAgreed」フィールド、（7.3.6で許可されたものを除き）、「状態」欄、または任意の他のフィールド（7.3.3項を参照）、それは認識していないにすべての更新を無視しなければなりません。サーバーが更新を受け入れる場合、それは200（OK）ステータスコードと結果のアカウントオブジェクトと応答を返さなければなりません。"
    },
    {
      "indent": 3,
      "text": "For example, to update the contact information in the above account, the client could send the following request:",
      "ja": "例えば、上記のアカウント内の連絡先情報を更新するには、クライアントは次のリクエストを送信できます。"
    },
    {
      "indent": 3,
      "text": "POST /acme/acct/evOfKhNU60wg HTTP/1.1 Host: example.com Content-Type: application/jose+json",
      "ja": "POST / ACME / acctの/ evOfKhNU60wg HTTP / 1.1ホスト：example.comのContent-Type：アプリケーション/ホセ+ JSON"
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": base64url({\n    \"alg\": \"ES256\",\n    \"kid\": \"https://example.com/acme/acct/evOfKhNU60wg\",\n    \"nonce\": \"ax5RnthDqp_Yf4_HZnFLmA\",\n    \"url\": \"https://example.com/acme/acct/evOfKhNU60wg\"\n  }),\n  \"payload\": base64url({\n    \"contact\": [\n      \"mailto:certificates@example.org\",\n      \"mailto:admin@example.org\"\n    ]\n  }),\n  \"signature\": \"hDXzvcj8T6fbFbmn...rDzXzzvzpRy64N0o\"\n}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "7.3.3. Changes of Terms of Service",
      "section_title": true,
      "ja": "7.3.3. サービス規約の変更"
    },
    {
      "indent": 3,
      "text": "As described above, a client can indicate its agreement with the CA's terms of service by setting the \"termsOfServiceAgreed\" field in its account object to \"true\".",
      "ja": "前述したように、クライアントが「真」にそのアカウントオブジェクトに「termsOfServiceAgreed」フィールドを設定することで、サービスのCAの利用規約との合意を示すことができます。"
    },
    {
      "indent": 3,
      "text": "If the server has changed its terms of service since a client initially agreed, and the server is unwilling to process a request without explicit agreement to the new terms, then it MUST return an error response with status code 403 (Forbidden) and type \"urn:ietf:params:acme:error:userActionRequired\". This response MUST include a Link header field with link relation \"terms-of-service\" and the latest terms-of-service URL.",
      "ja": "クライアントが最初に合意されたため、サーバがサービスのその条件を変更した、およびサーバは新しい用語への明示的な同意なしにリクエストを処理して不本意である場合、それはステータスコード403（禁止）とタイプ「壷と、エラー応答を返さなければなりません：IETF：のparams：ACME：エラー：userActionRequired」。この応答は、リンク関係「のサービスに関して-」と最新の用語のサービスURLとリンクヘッダフィールドを含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "The problem document returned with the error MUST also include an \"instance\" field, indicating a URL that the client should direct a human user to visit in order for instructions on how to agree to the terms.",
      "ja": "エラーで返された問題の文書は、クライアントが条件に同意する方法については、順番に訪問する人間のユーザに指示する必要があるURLを示し、「インスタンス」フィールドを含まなければなりません。"
    },
    {
      "indent": 1,
      "text": "HTTP/1.1 403 Forbidden Replay-Nonce: T81bdZroZ2ITWSondpTmAw Link: <https://example.com/acme/directory>;rel=\"index\" Link: <https://example.com/acme/terms/2017-6-02>;rel=\"terms-of-service\" Content-Type: application/problem+json Content-Language: en",
      "ja": "HTTP / 1.1 403禁止リプレイ・ナンス：T81bdZroZ2ITWSondpTmAwリンク：<https://example.com/acme/directory>; RELを= \"インデックス\" リンク：<https://example.com/acme/terms/2017-6- 02>; REL = \"用語のサービス\" のContent-Type：アプリケーション/問題+ JSONコンテンツ-言語：EN"
    },
    {
      "indent": 1,
      "text": "{\n  \"type\": \"urn:ietf:params:acme:error:userActionRequired\",\n  \"detail\": \"Terms of service have changed\",\n  \"instance\": \"https://example.com/acme/agreement/?token=W8Ih3PswD-8\"\n}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "7.3.4. External Account Binding",
      "section_title": true,
      "ja": "7.3.4. バインディング外部アカウント"
    },
    {
      "indent": 3,
      "text": "The server MAY require a value for the \"externalAccountBinding\" field to be present in \"newAccount\" requests. This can be used to associate an ACME account with an existing account in a non-ACME system, such as a CA customer database.",
      "ja": "サーバーは、「newAccount」リクエストに存在すると、「externalAccountBinding」フィールドの値が必要な場合があります。これは、CAの顧客データベースとして、非ACMEシステムに既存のアカウントでACMEアカウントを関連付けるために使用することができます。"
    },
    {
      "indent": 3,
      "text": "To enable ACME account binding, the CA operating the ACME server needs to provide the ACME client with a MAC key and a key identifier, using some mechanism outside of ACME. The key identifier MUST be an ASCII string. The MAC key SHOULD be provided in base64url-encoded form, to maximize compatibility between non-ACME provisioning systems and ACME clients.",
      "ja": "結合ACMEアカウントを有効にするには、ACMEサーバを操作するCAは、ACMEの外にいくつかのメカニズムを使用して、MACキーとキー識別子とACMEのクライアントを提供する必要があります。キー識別子は、ASCII文字列でなければなりません。 MACキーは、非ACMEプロビジョニングシステムとACMEクライアント間の互換性を最大にするために、base64url符号化された形態で提供されるべきです。"
    },
    {
      "indent": 3,
      "text": "The ACME client then computes a binding JWS to indicate the external account holder's approval of the ACME account key. The payload of this JWS is the ACME account key being registered, in JWK form. The protected header of the JWS MUST meet the following criteria:",
      "ja": "ACMEクライアントは、ACMEアカウントキーの外部アカウント保有者の承認を示すために結合JWSを計算します。このJWSのペイロードはJWK形式で、登録されているACMEアカウントキーです。 JWSの保護されたヘッダは、次の基準を満たす必要があります。"
    },
    {
      "indent": 3,
      "text": "o The \"alg\" field MUST indicate a MAC-based algorithm",
      "ja": "O「ALG」フィールドには、MACベースのアルゴリズムを示している必要があります"
    },
    {
      "indent": 3,
      "text": "o The \"kid\" field MUST contain the key identifier provided by the CA",
      "ja": "O「子供」フィールドには、CAが提供するキー識別子を含まなければなりません"
    },
    {
      "indent": 3,
      "text": "o The \"nonce\" field MUST NOT be present",
      "ja": "O「ナンス」フィールドが存在してはなりません"
    },
    {
      "indent": 3,
      "text": "o The \"url\" field MUST be set to the same value as the outer JWS",
      "ja": "「URL」フィールドは、外側JWSと同じ値に設定しなければなりませんoを"
    },
    {
      "indent": 3,
      "text": "The \"signature\" field of the JWS will contain the MAC value computed with the MAC key provided by the CA.",
      "ja": "JWSの「署名」フィールドには、CAが提供するMACキーで計算MAC値が含まれています"
    },
    {
      "indent": 3,
      "text": "POST /acme/new-account HTTP/1.1 Host: example.com Content-Type: application/jose+json",
      "ja": "POST / ACME /新しいアカウントのHTTP / 1.1ホスト：example.comのContent-Type：アプリケーション/ホセ+ JSON"
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": base64url({\n    \"alg\": \"ES256\",\n    \"jwk\": /* account key */,\n    \"nonce\": \"K60BWPrMQG9SDxBDS_xtSw\",\n    \"url\": \"https://example.com/acme/new-account\"\n  }),\n  \"payload\": base64url({\n    \"contact\": [\n      \"mailto:cert-admin@example.org\",\n      \"mailto:admin@example.org\"\n    ],\n    \"termsOfServiceAgreed\": true,",
      "raw": true
    },
    {
      "indent": 3,
      "text": "    \"externalAccountBinding\": {\n      \"protected\": base64url({\n        \"alg\": \"HS256\",\n        \"kid\": /* key identifier from CA */,\n        \"url\": \"https://example.com/acme/new-account\"\n      }),\n      \"payload\": base64url(/* same as in \"jwk\" above */),\n      \"signature\": /* MAC using MAC key from CA */\n    }\n  }),\n  \"signature\": \"5TWiqIYQfIDfALQv...x9C2mg8JGPxl5bI4\"\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "If such a CA requires that newAccount requests contain an \"externalAccountBinding\" field, then it MUST provide the value \"true\" in the \"externalAccountRequired\" subfield of the \"meta\" field in the directory object. If the CA receives a newAccount request without an \"externalAccountBinding\" field, then it SHOULD reply with an error of type \"externalAccountRequired\".",
      "ja": "こうしたCAはnewAccount要求は「externalAccountBinding」フィールドが含まれていることを必要とする場合、それは、ディレクトリオブジェクト内の「メタ」フィールドの「externalAccountRequired」サブフィールドに「真」の値を指定する必要があります。 CAは、「externalAccountBinding」フィールドなしnewAccount要求を受信した場合、それはタイプのエラーで「externalAccountRequired」を返信すべきです。"
    },
    {
      "indent": 3,
      "text": "When a CA receives a newAccount request containing an \"externalAccountBinding\" field, it decides whether or not to verify the binding. If the CA does not verify the binding, then it MUST NOT reflect the \"externalAccountBinding\" field in the resulting account object (if any). To verify the account binding, the CA MUST take the following steps:",
      "ja": "CAは、「externalAccountBinding」フィールドを含むnewAccount要求を受信すると、それが結合を検証するか否かを判定する。 CAは、バインディングを検証していない場合、それは結果のアカウントオブジェクト（もしあれば）に「externalAccountBinding」フィールドを反映してはなりません。結合アカウントを確認するために、CAは、以下の手順を実行する必要があります"
    },
    {
      "indent": 3,
      "text": "1. Verify that the value of the field is a well-formed JWS",
      "section_title": true,
      "ja": "1フィールドの値が十分に形成されたJWSであることを確認し"
    },
    {
      "indent": 3,
      "text": "2. Verify that the JWS protected field meets the above criteria",
      "section_title": true,
      "ja": "2. JWS保護フィールドは、上記の基準を満たしていることを確認"
    },
    {
      "indent": 3,
      "text": "3. Retrieve the MAC key corresponding to the key identifier in the \"kid\" field",
      "ja": "3.「子供」フィールドにキー識別子に対応するMACキーを取得します。"
    },
    {
      "indent": 3,
      "text": "4. Verify that the MAC on the JWS verifies using that MAC key",
      "section_title": true,
      "ja": "4. MACはJWSにそのMAC鍵を使って検証していることを確認します"
    },
    {
      "indent": 3,
      "text": "5. Verify that the payload of the JWS represents the same key as was used to verify the outer JWS (i.e., the \"jwk\" field of the outer JWS)",
      "ja": "外側JWSを検証するために使用されたように5 JWSのペイロードは、同じキーを表していることを確認し（すなわち、外側JWSの「jwk」フィールド）"
    },
    {
      "indent": 3,
      "text": "If all of these checks pass and the CA creates a new account, then the CA may consider the new account associated with the external account corresponding to the MAC key. The account object the CA returns MUST include an \"externalAccountBinding\" field with the same value as the field in the request. If any of these checks fail, then the CA MUST reject the newAccount request.",
      "ja": "これらのチェックのすべてに合格し、CAは、新しいアカウントを作成する場合は、CAは、MACキーに対応した外部アカウントに関連付けられている新しいアカウントを考慮することができます。アカウントは、CAのリターンが要求内のフィールドと同じ値で「externalAccountBinding」フィールドを含まなければならないオブジェクト。これらのチェックのいずれかが失敗した場合、その後、CAはnewAccount要求を拒絶しなければなりません。"
    },
    {
      "indent": 0,
      "text": "7.3.5. Account Key Rollover",
      "section_title": true,
      "ja": "7.3.5. アカウントキーロールオーバー"
    },
    {
      "indent": 3,
      "text": "A client may wish to change the public key that is associated with an account in order to recover from a key compromise or proactively mitigate the impact of an unnoticed key compromise.",
      "ja": "クライアントは、鍵の危殆化からの復旧または積極的に見過ごさキー妥協の影響を軽減するために、アカウントに関連付けられている公開鍵を変更したいことがあります。"
    },
    {
      "indent": 3,
      "text": "To change the key associated with an account, the client sends a request to the server containing signatures by both the old and new keys. The signature by the new key covers the account URL and the old key, signifying a request by the new key holder to take over the account from the old key holder. The signature by the old key covers this request and its signature, and indicates the old key holder's assent to the rollover request.",
      "ja": "アカウントに関連付けられたキーを変更するには、クライアントは、新旧両方のキーで署名を含むサーバーにリクエストを送信します。新しい鍵による署名は、古い鍵ホルダーからアカウントを引き継ぐために、新しいキー保持者によって要求を表す、アカウントのURLと古いキーをカバーしています。古いキーによる署名は、この要求とその署名をカバーし、ロールオーバー要求に古い鍵保有者の同意を示しています。"
    },
    {
      "indent": 3,
      "text": "To create this request object, the client first constructs a keyChange object describing the account to be updated and its account key:",
      "ja": "このリクエスト・オブジェクトを作成するには、クライアントが最初に更新されるアカウントとそのアカウントキーを記述してkeyChangeオブジェクトを構築します。"
    },
    {
      "indent": 3,
      "text": "account (required, string): The URL for the account being modified. The content of this field MUST be the exact string provided in the Location header field in response to the newAccount request that created the account.",
      "ja": "アカウント（必須、文字列）：アカウントのURLが変更されています。このフィールドの内容は、アカウントを作成しnewAccount要求に応答してロケーションヘッダーフィールドで提供される正確な文字列でなければなりません。"
    },
    {
      "indent": 3,
      "text": "oldKey (required, JWK): The JWK representation of the old key.",
      "ja": "oldKey（必須、JWK）：古いキーのJWK表現。"
    },
    {
      "indent": 3,
      "text": "The client then encapsulates the keyChange object in an \"inner\" JWS, signed with the requested new account key. This \"inner\" JWS becomes the payload for the \"outer\" JWS that is the body of the ACME request.",
      "ja": "その後、クライアントは、要求された新しいアカウントの鍵で署名「内側」JWS、でてkeyChangeオブジェクトをカプセル化します。この「内側」JWSは、ACME要求の本体である「外側」JWSのペイロードとなります。"
    },
    {
      "indent": 3,
      "text": "The outer JWS MUST meet the normal requirements for an ACME JWS request body (see Section 6.2). The inner JWS MUST meet the normal requirements, with the following differences:",
      "ja": "外側JWSがACME JWSリクエストボディの通常の要件を満たさなければならない（セクション6.2を参照）。インナーJWSは、以下の違いで、通常の要件を満たす必要があります。"
    },
    {
      "indent": 3,
      "text": "o The inner JWS MUST have a \"jwk\" header parameter, containing the public key of the new key pair.",
      "ja": "O内側JWSは、新しい鍵ペアの公開鍵を含む、「jwk」ヘッダパラメータを持たなければなりません。"
    },
    {
      "indent": 3,
      "text": "o The inner JWS MUST have the same \"url\" header parameter as the outer JWS.",
      "ja": "O内側JWSは、外側JWS同じ「URL」ヘッダパラメータを持たなければなりません。"
    },
    {
      "indent": 3,
      "text": "o The inner JWS MUST omit the \"nonce\" header parameter.",
      "ja": "O内側JWSは「ナンス」ヘッダパラメータを省略しなければなりません。"
    },
    {
      "indent": 3,
      "text": "This transaction has signatures from both the old and new keys so that the server can verify that the holders of the two keys both agree to the change. The signatures are nested to preserve the property that all signatures on POST messages are signed by exactly one key. The \"inner\" JWS effectively represents a request by the holder of the new key to take over the account form the holder of the old key. The \"outer\" JWS represents the current account holder's assent to this request.",
      "ja": "サーバーに2つの鍵の所有者の両方が変更に同意していることを確認できるように、この取引は、新旧両方の鍵の署名を持っています。署名はPOSTメッセージのすべての署名が正確に一つの鍵で署名されているプロパティを保持するためにネストされています。 「内側」JWSは、効果的に古いキーのホルダーを形成し、アカウントを引き継ぐために、新しいキーの所有者の要求を表しています。 「外側」JWSはこの要求に現在のアカウント所有者の同意を表します。"
    },
    {
      "indent": 3,
      "text": "POST /acme/key-change HTTP/1.1 Host: example.com Content-Type: application/jose+json",
      "ja": "POST / ACME /キーチェンジHTTP / 1.1ホスト：example.comのContent-Type：アプリケーション/ホセ+ JSON"
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": base64url({\n    \"alg\": \"ES256\",\n    \"kid\": \"https://example.com/acme/acct/evOfKhNU60wg\",\n    \"nonce\": \"S9XaOcxP5McpnTcWPIhYuB\",\n    \"url\": \"https://example.com/acme/key-change\"\n  }),\n  \"payload\": base64url({\n    \"protected\": base64url({\n      \"alg\": \"ES256\",\n      \"jwk\": /* new key */,\n      \"url\": \"https://example.com/acme/key-change\"\n    }),\n    \"payload\": base64url({\n      \"account\": \"https://example.com/acme/acct/evOfKhNU60wg\",\n      \"oldKey\": /* old key */\n    }),\n    \"signature\": \"Xe8B94RD30Azj2ea...8BmZIRtcSKPSd8gU\"\n  }),\n  \"signature\": \"5TWiqIYQfIDfALQv...x9C2mg8JGPxl5bI4\"\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "On receiving a keyChange request, the server MUST perform the following steps in addition to the typical JWS validation:",
      "ja": "keyChange要求を受信すると、サーバは、典型的なJWSの検証に加えて、以下の手順を実行する必要があります"
    },
    {
      "indent": 3,
      "text": "1. Validate the POST request belongs to a currently active account, as described in Section 6.",
      "ja": "1.第6節に記載されているようにPOST要求が、現在アクティブなアカウントに属して検証。"
    },
    {
      "indent": 3,
      "text": "2. Check that the payload of the JWS is a well-formed JWS object (the \"inner JWS\").",
      "ja": "JWSのペイロードが十分に形成されたJWSオブジェクト（「内側JWS」）である。2.確認。"
    },
    {
      "indent": 3,
      "text": "3. Check that the JWS protected header of the inner JWS has a \"jwk\" field.",
      "ja": "インナーJWSのJWS保護ヘッダが「jwk」フィールドを有していることを確認3.。"
    },
    {
      "indent": 3,
      "text": "4. Check that the inner JWS verifies using the key in its \"jwk\" field.",
      "ja": "インナーJWSはその「jwk」フィールドにキーを使用して検証していること4.確認。"
    },
    {
      "indent": 3,
      "text": "5. Check that the payload of the inner JWS is a well-formed keyChange object (as described above).",
      "ja": "（上記のように）内側JWSのペイロードが十分に形成されてkeyChangeオブジェクトであることを確認5.。"
    },
    {
      "indent": 3,
      "text": "6. Check that the \"url\" parameters of the inner and outer JWSs are the same.",
      "ja": "内側と外側のJWSsの「URL」パラメータが同じであることをチェックします。"
    },
    {
      "indent": 3,
      "text": "7. Check that the \"account\" field of the keyChange object contains the URL for the account matching the old key (i.e., the \"kid\" field in the outer JWS).",
      "ja": "keyChangeオブジェクトの「アカウント」フィールドには、古いキー（外JWSで、すなわち、「子供」フィールド）を合わせるアカウントのURLが含まれていること7.確認します。"
    },
    {
      "indent": 3,
      "text": "8. Check that the \"oldKey\" field of the keyChange object is the same as the account key for the account in question.",
      "ja": "keyChangeオブジェクトの「oldKey」フィールドは、該当のアカウントのアカウントキーと同じであることを確認し8。"
    },
    {
      "indent": 3,
      "text": "9. Check that no account exists whose account key is the same as the key in the \"jwk\" header parameter of the inner JWS.",
      "ja": "何のアカウントは、そのアカウントのキーが存在しないこと9.チェックは、内側JWSの「jwk」ヘッダパラメータのキーと同じです。"
    },
    {
      "indent": 3,
      "text": "If all of these checks pass, then the server updates the corresponding account by replacing the old account key with the new public key and returns status code 200 (OK). Otherwise, the server responds with an error status code and a problem document describing the error. If there is an existing account with the new key provided, then the server SHOULD use status code 409 (Conflict) and provide the URL of that account in the Location header field.",
      "ja": "これらのチェックのすべてに合格した場合、サーバーは、新しい公開鍵を使用して、古いアカウントのキーを交換することにより対応するアカウントを更新し、ステータスコード200（OK）を返します。そうでなければ、サーバはエラーステータスコードとエラーを記述する問題のある文書で応答します。提供された新しいキーを使用して既存のアカウントがある場合、サーバは、ステータスコード409（競合）を使用し、LocationヘッダフィールドにそのアカウントのURLを提供すべきです。"
    },
    {
      "indent": 3,
      "text": "Note that changing the account key for an account SHOULD NOT have any other impact on the account. For example, the server MUST NOT invalidate pending orders or authorization transactions based on a change of account key.",
      "ja": "アカウントのアカウントキーを変更すると、アカウント上の他の影響を与えるべきではないことに注意してください。例えば、サーバは保留中の注文またはアカウントキーの変更に基づいて承認取引を無効にしてはなりません。"
    },
    {
      "indent": 0,
      "text": "7.3.6. Account Deactivation",
      "section_title": true,
      "ja": "7.3.6. アカウント無効化"
    },
    {
      "indent": 3,
      "text": "A client can deactivate an account by posting a signed update to the account URL with a status field of \"deactivated\". Clients may wish to do this when the account key is compromised or decommissioned. A deactivated account can no longer request certificate issuance or access resources related to the account, such as orders or authorizations. If a server receives a POST or POST-as-GET from a deactivated account, it MUST return an error response with status code 401 (Unauthorized) and type \"urn:ietf:params:acme:error:unauthorized\".",
      "ja": "クライアントが「無効」のステータスフィールドを持つアカウントのURLへの署名の更新を掲載することにより、アカウントを無効にすることができます。クライアントはアカウントの鍵が危殆化または廃止されたときにこれを実行することもできます。非アクティブアカウントは、このような注文や権限など、アカウントにもはや要求証明書発行やアクセスリソースに関連することができます。 「：IETF：のparams：ACME：エラー：不正な壷」サーバがPOSTを受信するか、またはPOST-AS-GET非アクティブアカウントから、それはステータスコード401（不正な）とタイプのエラー応答を返さなければなりません。"
    },
    {
      "indent": 3,
      "text": "POST /acme/acct/evOfKhNU60wg HTTP/1.1 Host: example.com Content-Type: application/jose+json",
      "ja": "POST / ACME / acctの/ evOfKhNU60wg HTTP / 1.1ホスト：example.comのContent-Type：アプリケーション/ホセ+ JSON"
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": base64url({\n    \"alg\": \"ES256\",\n    \"kid\": \"https://example.com/acme/acct/evOfKhNU60wg\",\n    \"nonce\": \"ntuJWWSic4WVNSqeUmshgg\",\n    \"url\": \"https://example.com/acme/acct/evOfKhNU60wg\"\n  }),\n  \"payload\": base64url({\n    \"status\": \"deactivated\"\n  }),\n  \"signature\": \"earzVLd3m5M4xJzR...bVTqn7R08AKOVf3Y\"\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The server MUST verify that the request is signed by the account key. If the server accepts the deactivation request, it replies with a 200 (OK) status code and the current contents of the account object.",
      "ja": "サーバーは、要求がアカウントキーによって署名されていることを確かめなければなりません。サーバが停止要求を受け入れた場合、それは200（OK）ステータスコードとアカウントオブジェクトの現在の内容で応答します。"
    },
    {
      "indent": 3,
      "text": "Once an account is deactivated, the server MUST NOT accept further requests authorized by that account's key. The server SHOULD cancel any pending operations authorized by the account's key, such as certificate orders. A server may take a variety of actions in response to an account deactivation, e.g., deleting data related to that account or sending mail to the account's contacts. Servers SHOULD NOT revoke certificates issued by the deactivated account, since this could cause operational disruption for servers using these certificates. ACME does not provide a way to reactivate a deactivated account.",
      "ja": "アカウントが非アクティブになると、サーバーはそのアカウントのキーで認証されるさらなる要求を受け入れてはいけません。サーバーは、このような証明書の注文など、アカウントのキーで認証される保留中の操作を取り消すべきです。サーバは、アカウントの停止に応じて様々なアクションをとることができ、例えば、そのアカウントに関連するデータを削除したり、アカウントの連絡先にメールを送信します。これは、これらの証明書を使用してサーバーの運用の中断を引き起こす可能性があるため、サーバは、非アクティブアカウントによって発行された証明書を失効すべきではありません。 ACMEは、非アクティブアカウントを再開するための方法を提供していません。"
    },
    {
      "indent": 0,
      "text": "7.4. Applying for Certificate Issuance",
      "section_title": true,
      "ja": "7.4. 証明書発行の申請"
    },
    {
      "indent": 3,
      "text": "The client begins the certificate issuance process by sending a POST request to the server's newOrder resource. The body of the POST is a JWS object whose JSON payload is a subset of the order object defined in Section 7.1.3, containing the fields that describe the certificate to be issued:",
      "ja": "クライアントは、サーバのnewOrderリソースにPOSTリクエストを送信することにより、証明書発行プロセスを開始します。 POSTの本体は、そのJSONペイロードセクション7.1.3で定義された順序オブジェクトのサブセットである、証明書を発行する記述フィールドを含むJWSオブジェクトです。"
    },
    {
      "indent": 3,
      "text": "identifiers (required, array of object): An array of identifier objects that the client wishes to submit an order for.",
      "ja": "識別子（必要に応じて、オブジェクトの配列）：クライアントの注文を提出することを望む識別子オブジェクトの配列。"
    },
    {
      "indent": 6,
      "text": "type (required, string): The type of identifier.",
      "ja": "タイプ（必須、ストリング）：識別子のタイプ。"
    },
    {
      "indent": 6,
      "text": "value (required, string): The identifier itself.",
      "ja": "値（必須、ストリング）：識別子自体。"
    },
    {
      "indent": 3,
      "text": "notBefore (optional, string): The requested value of the notBefore field in the certificate, in the date format defined in [RFC3339].",
      "ja": "notBeforeの（任意の文字列）：[RFC3339]で定義された日付形式の証明書でnotBeforeのフィールドの要求された値、。"
    },
    {
      "indent": 3,
      "text": "notAfter (optional, string): The requested value of the notAfter field in the certificate, in the date format defined in [RFC3339].",
      "ja": "notAfterの（任意の文字列）：[RFC3339]で定義された日付形式の証明書でnotAfterのフィールドの要求された値、。"
    },
    {
      "indent": 3,
      "text": "POST /acme/new-order HTTP/1.1 Host: example.com Content-Type: application/jose+json",
      "ja": "POST / ACME /新秩序のHTTP / 1.1ホスト：example.comのContent-Type：アプリケーション/ホセ+ JSON"
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": base64url({\n    \"alg\": \"ES256\",\n    \"kid\": \"https://example.com/acme/acct/evOfKhNU60wg\",\n    \"nonce\": \"5XJ1L3lEkMG7tR6pA00clA\",\n    \"url\": \"https://example.com/acme/new-order\"\n  }),\n  \"payload\": base64url({\n    \"identifiers\": [\n      { \"type\": \"dns\", \"value\": \"www.example.org\" },\n      { \"type\": \"dns\", \"value\": \"example.org\" }\n    ],\n    \"notBefore\": \"2016-01-01T00:04:00+04:00\",\n    \"notAfter\": \"2016-01-08T00:04:00+04:00\"\n  }),\n  \"signature\": \"H6ZXtGjTZyUnPeKn...wEA4TklBdh3e454g\"\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The server MUST return an error if it cannot fulfill the request as specified, and it MUST NOT issue a certificate with contents other than those requested. If the server requires the request to be modified in a certain way, it should indicate the required changes using an appropriate error type and description.",
      "ja": "指定されたとして、それは要求を満たすことができない場合、サーバーはエラーを返さなければならない、それは要求されたもの以外の内容で証明書を発行してはいけません。サーバは、特定の方法で変更される要求を必要とする場合、それは適切なエラーの種類と説明を使用して、必要な変更を示すべきです。"
    },
    {
      "indent": 3,
      "text": "If the server is willing to issue the requested certificate, it responds with a 201 (Created) response. The body of this response is an order object reflecting the client's request and any authorizations the client must complete before the certificate will be issued.",
      "ja": "サーバは要求された証明書を発行する意思があるなら、それは201（作成者）応答で応答します。このレスポンスのボディは、クライアントの要求と証明書が発行される前に、クライアントが完了しなければならないすべての権限を反映したためオブジェクトです。"
    },
    {
      "indent": 3,
      "text": "HTTP/1.1 201 Created Replay-Nonce: MYAuvOpaoIiywTezizk5vw Link: <https://example.com/acme/directory>;rel=\"index\" Location: https://example.com/acme/order/TOlocE8rfgo",
      "ja": "HTTP / 1.1 201作成されたリプレイ・ナンス：MYAuvOpaoIiywTezizk5vwリンク：<https://example.com/acme/directory>; REL = \"インデックス\" 場所：https://example.com/acme/order/TOlocE8rfgo"
    },
    {
      "indent": 3,
      "text": "{\n  \"status\": \"pending\",\n  \"expires\": \"2016-01-05T14:09:07.99Z\",",
      "raw": true
    },
    {
      "indent": 5,
      "text": "\"notBefore\": \"2016-01-01T00:00:00Z\",\n\"notAfter\": \"2016-01-08T00:00:00Z\",",
      "raw": true
    },
    {
      "indent": 5,
      "text": "\"identifiers\": [\n  { \"type\": \"dns\", \"value\": \"www.example.org\" },\n  { \"type\": \"dns\", \"value\": \"example.org\" }\n],",
      "raw": true
    },
    {
      "indent": 5,
      "text": "\"authorizations\": [\n  \"https://example.com/acme/authz/PAniVnsZcis\",\n  \"https://example.com/acme/authz/r4HqLzrSrpI\"\n],",
      "raw": true
    },
    {
      "indent": 3,
      "text": "  \"finalize\": \"https://example.com/acme/order/TOlocE8rfgo/finalize\"\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The order object returned by the server represents a promise that if the client fulfills the server's requirements before the \"expires\" time, then the server will be willing to finalize the order upon request and issue the requested certificate. In the order object, any authorization referenced in the \"authorizations\" array whose status is \"pending\" represents an authorization transaction that the client must complete before the server will issue the certificate (see Section 7.5). If the client fails to complete the required actions before the \"expires\" time, then the server SHOULD change the status of the order to \"invalid\" and MAY delete the order resource. Clients MUST NOT make any assumptions about the sort order of \"identifiers\" or \"authorizations\" elements in the returned order object.",
      "ja": "サーバーによって返された順序オブジェクトは、時間を「期限が切れる」の前に、クライアントがサーバの要件を満たしている場合、サーバーは、要求に応じて順序を確定し、要求された証明書を発行することをいとわないだろうという約束を表しています。オーダーオブジェクトには、その状態で「保留」のサーバーが証明書を発行します前に、クライアントが完了しなければならないの認可トランザクションを表し、「権限」列で参照される認可が（7.5節を参照してください）。クライアントが時間を「期限が切れる」の前に必要なアクションを完了できなかった場合、サーバは「無効」に注文のステータスを変更する必要があり、注文のリソースを削除することができます。クライアントは、「識別子」または「権限」返される順序オブジェクト内の要素のソート順についての仮定をしてはなりません。"
    },
    {
      "indent": 3,
      "text": "Once the client believes it has fulfilled the server's requirements, it should send a POST request to the order resource's finalize URL. The POST body MUST include a CSR:",
      "ja": "クライアントは、サーバの要件を満たしていると考えていたら、それは順序リソースのファイナライズURLにPOSTリクエストを送信する必要があります。 POST本体には、CSRを含める必要があります。"
    },
    {
      "indent": 3,
      "text": "csr (required, string): A CSR encoding the parameters for the certificate being requested [RFC2986]. The CSR is sent in the base64url-encoded version of the DER format. (Note: Because this field uses base64url, and does not include headers, it is different from PEM.)",
      "ja": "CSR（必須、ストリング）：CSRは、[RFC2986]を要求された証明書のパラメータを符号化します。 CSRは、DERフォーマットのbase64url符号化されたバージョンで送信されます。 （注意：このフィールドはbase64urlを使用し、ヘッダが含まれていないので、それはPEMとは異なります。）"
    },
    {
      "indent": 3,
      "text": "POST /acme/order/TOlocE8rfgo/finalize HTTP/1.1 Host: example.com Content-Type: application/jose+json",
      "ja": "example.comのContent-Type：アプリケーション/ホセ+ JSON POST / ACME /オーダー/ TOlocE8rfgo /は、HTTP / 1.1ホストを確定します"
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": base64url({\n    \"alg\": \"ES256\",\n    \"kid\": \"https://example.com/acme/acct/evOfKhNU60wg\",\n    \"nonce\": \"MSF2j2nawWHPxxkE3ZJtKQ\",\n    \"url\": \"https://example.com/acme/order/TOlocE8rfgo/finalize\"\n  }),\n  \"payload\": base64url({\n    \"csr\": \"MIIBPTCBxAIBADBFMQ...FS6aKdZeGsysoCo4H9P\",\n  }),\n  \"signature\": \"uOrUfIIk5RyQ...nw62Ay1cl6AB\"\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The CSR encodes the client's requests with regard to the content of the certificate to be issued. The CSR MUST indicate the exact same set of requested identifiers as the initial newOrder request. Identifiers of type \"dns\" MUST appear either in the commonName portion of the requested subject name or in an extensionRequest attribute [RFC2985] requesting a subjectAltName extension, or both. (These identifiers may appear in any sort order.) Specifications that define new identifier types must specify where in the certificate signing request these identifiers can appear.",
      "ja": "CSRは、発行する証明書の内容に関して、クライアントの要求を符号化します。 CSRは、初期newOrder要求として要求された識別子の正確な同じセットを指定する必要があります。タイプ「DNS」の識別子が要求されたサブジェクト名のcommonNameの部分またはsubjectAltName拡張、またはその両方を要求extensionRequest属性[RFC2985]のいずれかに現れなければなりません。 （これらの識別子は、任意のソート順に表示されることがあります。）新しい識別子のタイプを定義する仕様は、これらの識別子が表示されることが証明書署名要求にどこを指定する必要があります。"
    },
    {
      "indent": 3,
      "text": "A request to finalize an order will result in an error if the CA is unwilling to issue a certificate corresponding to the submitted CSR. For example:",
      "ja": "CAは、提出されたCSRに対応する証明書を発行するために不本意であれば順序を確定するための要求はエラーになります。例えば："
    },
    {
      "indent": 3,
      "text": "o If the CSR and order identifiers differ",
      "ja": "O CSRと順序識別子が異なる場合"
    },
    {
      "indent": 3,
      "text": "o If the account is not authorized for the identifiers indicated in the CSR",
      "ja": "OアカウントがCSRに示された識別子のために許可されていない場合"
    },
    {
      "indent": 3,
      "text": "o If the CSR requests extensions that the CA is not willing to include",
      "ja": "O CSRは、CAが含まことを望んでいない拡張を要求した場合"
    },
    {
      "indent": 3,
      "text": "In such cases, the problem document returned by the server SHOULD use error code \"badCSR\" and describe specific reasons the CSR was rejected in its \"detail\" field. After returning such an error, the server SHOULD leave the order in the \"ready\" state, to allow the client to submit a new finalize request with an amended CSR.",
      "ja": "このような場合には、サーバから返された問題の文書は、エラーコード「badCSR」を使用し、CSRはその「詳細」の欄に拒否された特定の理由を説明する必要があります。このようなエラーを返した後、サーバーは、クライアントが改正CSRと新しいファイナライズリクエストを送信できるようにするために、「準備完了」状態で順番を残すべきです。"
    },
    {
      "indent": 3,
      "text": "A request to finalize an order will result in error if the order is not in the \"ready\" state. In such cases, the server MUST return a 403 (Forbidden) error with a problem document of type \"orderNotReady\". The client should then send a POST-as-GET request to the order resource to obtain its current state. The status of the order will indicate what action the client should take (see below).",
      "ja": "順序が「準備完了」状態でない場合はオーダーを確定するための要求はエラーになります。このような場合には、サーバーはタイプの問題の文書「orderNotReady」と403（禁止）エラーを返さなければなりません。次に、クライアントは、現在の状態を取得するためのリソースにPOST-AS-GETリクエストを送信する必要があります。注文のステータスは、クライアントが（下記参照）を取るべき処置を示します。"
    },
    {
      "indent": 3,
      "text": "If a request to finalize an order is successful, the server will return a 200 (OK) with an updated order object. The status of the order will indicate what action the client should take:",
      "ja": "オーダーを確定するための要求が成功した場合、サーバは、更新順序オブジェクトに200（OK）を返します。注文のステータスは、クライアントが取るべき行動を示します："
    },
    {
      "indent": 3,
      "text": "o \"invalid\": The certificate will not be issued. Consider this order process abandoned.",
      "ja": "「無効」O：証明書は発行されません。放棄され、この注文プロセスを考えてみましょう。"
    },
    {
      "indent": 3,
      "text": "o \"pending\": The server does not believe that the client has fulfilled the requirements. Check the \"authorizations\" array for entries that are still pending.",
      "ja": "O「保留中」：サーバは、クライアントが要件を満たしていることを信じていません。まだ保留されているエントリの「権限」の配列を確認してください。"
    },
    {
      "indent": 3,
      "text": "o \"ready\": The server agrees that the requirements have been fulfilled, and is awaiting finalization. Submit a finalization request.",
      "ja": "「準備完了」O：サーバーは、要件が満たされていることに同意し、ファイナライズを待っています。ファイナライズリクエストを送信します。"
    },
    {
      "indent": 3,
      "text": "o \"processing\": The certificate is being issued. Send a POST-as-GET request after the time given in the Retry-After header field of the response, if any.",
      "ja": "O「処理」：証明書が発行されています。もしあれば、応答の再試行後ヘッダフィールドで指定された時間後にPOST-AS-GET要求を送信します。"
    },
    {
      "indent": 3,
      "text": "o \"valid\": The server has issued the certificate and provisioned its URL to the \"certificate\" field of the order. Download the certificate.",
      "ja": "「有効な」O：サーバーは、証明書を発行したと秩序の「証明書」フィールドにそのURLをプロビジョニング。証明書をダウンロードしてください。"
    },
    {
      "indent": 3,
      "text": "HTTP/1.1 200 OK Replay-Nonce: CGf81JWBsq8QyIgPCi9Q9X Link: <https://example.com/acme/directory>;rel=\"index\" Location: https://example.com/acme/order/TOlocE8rfgo",
      "ja": "HTTP / 1.1 200 OKリプレイ・ナンス：CGf81JWBsq8QyIgPCi9Q9Xリンク：<https://example.com/acme/directory>; REL = \"インデックス\" 場所：https://example.com/acme/order/TOlocE8rfgo"
    },
    {
      "indent": 3,
      "text": "{\n  \"status\": \"valid\",\n  \"expires\": \"2016-01-20T14:09:07.99Z\",",
      "raw": true
    },
    {
      "indent": 5,
      "text": "\"notBefore\": \"2016-01-01T00:00:00Z\",\n\"notAfter\": \"2016-01-08T00:00:00Z\",",
      "raw": true
    },
    {
      "indent": 5,
      "text": "\"identifiers\": [\n  { \"type\": \"dns\", \"value\": \"www.example.org\" },\n  { \"type\": \"dns\", \"value\": \"example.org\" }\n],",
      "raw": true
    },
    {
      "indent": 5,
      "text": "\"authorizations\": [\n  \"https://example.com/acme/authz/PAniVnsZcis\",\n  \"https://example.com/acme/authz/r4HqLzrSrpI\"\n],",
      "raw": true
    },
    {
      "indent": 5,
      "text": "\"finalize\": \"https://example.com/acme/order/TOlocE8rfgo/finalize\",",
      "raw": true
    },
    {
      "indent": 3,
      "text": "  \"certificate\": \"https://example.com/acme/cert/mAt3xBGaobw\"\n}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "7.4.1. Pre-authorization",
      "section_title": true,
      "ja": "7.4.1. 事前承認"
    },
    {
      "indent": 3,
      "text": "The order process described above presumes that authorization objects are created reactively, in response to a certificate order. Some servers may also wish to enable clients to obtain authorization for an identifier proactively, outside of the context of a specific issuance. For example, a client hosting virtual servers for a collection of names might wish to obtain authorization before any virtual servers are created and only create a certificate when a virtual server starts up.",
      "ja": "上記注文プロセスは、権限オブジェクトは、証明書の順に応じて、反応的に作成されることを前提としています。一部のサーバーは、特定の発行の文脈の外で、積極的識別子の認可を取得するためにクライアントを有効にしたいことがあります。たとえば、名前のコレクションのための仮想サーバーをホストしているクライアントは、任意の仮想サーバーを作成する前に許可を取得したいと仮想サーバーの起動時にのみ証明書を作成することがあります。"
    },
    {
      "indent": 3,
      "text": "In some cases, a CA running an ACME server might have a completely external, non-ACME process for authorizing a client to issue certificates for an identifier. In these cases, the CA should provision its ACME server with authorization objects corresponding to these authorizations and reflect them as already valid in any orders submitted by the client.",
      "ja": "いくつかのケースでは、ACMEサーバを実行しているCAは、識別子のための証明書を発行するクライアントを認証するための完全に外部の非ACMEプロセスを持っているかもしれません。これらのケースでは、CAは、これらの権限に対応する権限オブジェクトをプロビジョニングそのACMEサーバべきで、クライアントから提出されたすべての受注がすでに有効なものとして、それらを反映しています。"
    },
    {
      "indent": 3,
      "text": "If a CA wishes to allow pre-authorization within ACME, it can offer a \"new authorization\" resource in its directory by adding the field \"newAuthz\" with a URL for the newAuthz resource.",
      "ja": "CAは、ACME以内に事前承認を可能にしたい場合は、newAuthzリソースのURLをフィールド「newAuthz」を追加することによって、そのディレクトリにある「新しい認証」のリソースを提供することができます。"
    },
    {
      "indent": 3,
      "text": "To request authorization for an identifier, the client sends a POST request to the newAuthz resource specifying the identifier for which authorization is being requested.",
      "ja": "識別子の許可を要求するには、クライアントは、認証が要求されている識別子を指定newAuthzリソースへのPOSTリクエストを送信します。"
    },
    {
      "indent": 3,
      "text": "identifier (required, object): The identifier to appear in the resulting authorization object (see Section 7.1.4).",
      "ja": "識別子（必須、オブジェクト）：結果の権限オブジェクトに表示される識別子（セクション7.1.4を参照してください）。"
    },
    {
      "indent": 6,
      "text": "type (required, string): The type of identifier.",
      "ja": "タイプ（必須、ストリング）：識別子のタイプ。"
    },
    {
      "indent": 6,
      "text": "value (required, string): The identifier itself.",
      "ja": "値（必須、ストリング）：識別子自体。"
    },
    {
      "indent": 3,
      "text": "POST /acme/new-authz HTTP/1.1 Host: example.com Content-Type: application/jose+json",
      "ja": "POST / ACME /新-のauthz HTTP / 1.1ホスト：example.comのContent-Type：アプリケーション/ホセ+ JSON"
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": base64url({\n    \"alg\": \"ES256\",\n    \"kid\": \"https://example.com/acme/acct/evOfKhNU60wg\",\n    \"nonce\": \"uQpSjlRb4vQVCjVYAyyUWg\",\n    \"url\": \"https://example.com/acme/new-authz\"\n  }),\n  \"payload\": base64url({\n    \"identifier\": {\n      \"type\": \"dns\",\n      \"value\": \"example.org\"\n    }\n  }),\n  \"signature\": \"nuSDISbWG8mMgE7H...QyVUL68yzf3Zawps\"\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Note that because the identifier in a pre-authorization request is the exact identifier to be included in the authorization object, pre-authorization cannot be used to authorize issuance of certificates containing wildcard domain names.",
      "ja": "事前認可要求に識別子が権限オブジェクトに含まれる正確な識別子であるので、事前承認がワイルドカードドメイン名を含む証明書の発行を承認するために使用することができないことに留意されたいです。"
    },
    {
      "indent": 3,
      "text": "Before processing the authorization request, the server SHOULD determine whether it is willing to issue certificates for the identifier. For example, the server should check that the identifier is of a supported type. Servers might also check names against a blacklist of known high-value identifiers. If the server is unwilling to issue for the identifier, it SHOULD return an error with status code 403 (Forbidden), with a problem document describing the reason for the rejection.",
      "ja": "認証要求を処理する前に、サーバは、識別子のための証明書を発行する意思があるかどうかを判断する必要があります。例えば、サーバは識別子がサポートされているタイプであることを確認する必要があります。サーバーは、既知の高価値識別子のブラックリストに対して名前を確認することがあります。サーバは、識別子のために発行することが不本意である場合、それは拒否の理由を説明し、問題の文書で、ステータスコード403（禁止）でエラーを返すべきです。"
    },
    {
      "indent": 3,
      "text": "If the server is willing to proceed, it builds a pending authorization object from the inputs submitted by the client:",
      "ja": "サーバは続行する意思があるなら、それはクライアントから提出された入力からの保留中の承認オブジェクトを構築します。"
    },
    {
      "indent": 3,
      "text": "o \"identifier\" the identifier submitted by the client",
      "ja": "O「識別子」クライアントから提出された識別子"
    },
    {
      "indent": 3,
      "text": "o \"status\" MUST be \"pending\" unless the server has out-of-band information about the client's authorization status",
      "ja": "サーバーがクライアントの認証ステータスに関する帯域外の情報を持っていない限り、o「はステータスが」「保留」しなければなりません"
    },
    {
      "indent": 3,
      "text": "o \"challenges\" as selected by the server's policy for this identifier",
      "ja": "この識別子は、サーバーのポリシーにより選択されるO「挑戦」"
    },
    {
      "indent": 3,
      "text": "The server allocates a new URL for this authorization and returns a 201 (Created) response with the authorization URL in the Location header field and the JSON authorization object in the body. The client then follows the process described in Section 7.5 to complete the authorization process.",
      "ja": "サーバは、この認可のために新しいURLを割り当て、Locationヘッダフィールドで許可URLと本体におけるJSON権限オブジェクトと201（作成された）レスポンスを返します。次に、クライアントは、認証プロセスを完了するために、7.5節で説明したプロセスに従います。"
    },
    {
      "indent": 0,
      "text": "7.4.2. Downloading the Certificate",
      "section_title": true,
      "ja": "7.4.2. 証明書のダウンロード"
    },
    {
      "indent": 3,
      "text": "To download the issued certificate, the client simply sends a POST-as-GET request to the certificate URL.",
      "ja": "発行された証明書をダウンロードするには、クライアントは単に証明書のURLにPOST-AS-GETリクエストを送信します。"
    },
    {
      "indent": 3,
      "text": "The default format of the certificate is application/pem-certificate-chain (see Section 9).",
      "ja": "証明書のデフォルトフォーマットは、アプリケーション/ PEM証明書チェーン（9章を参照します）。"
    },
    {
      "indent": 3,
      "text": "The server MAY provide one or more link relation header fields [RFC8288] with relation \"alternate\". Each such field SHOULD express an alternative certificate chain starting with the same end-entity certificate. This can be used to express paths to various trust anchors. Clients can fetch these alternates and use their own heuristics to decide which is optimal.",
      "ja": "サーバは、「代替」の関係を持つ1つ以上のリンク関係ヘッダーフィールド[RFC8288]を提供するかもしれません。このような各フィールドは、同一のエンドエンティティ証明書から始まる別の証明書チェーンを表現すべきです。これは、様々なトラストアンカーへのパスを発現するために使用することができます。クライアントは、これらの交互を取得し、最適であるかを決定するために、独自のヒューリスティックを使用することができます。"
    },
    {
      "indent": 3,
      "text": "POST /acme/cert/mAt3xBGaobw HTTP/1.1 Host: example.com Content-Type: application/jose+json Accept: application/pem-certificate-chain",
      "ja": "POST / ACME / CERT / mAt3xBGaobw HTTP / 1.1ホスト：example.comのContent-Type：アプリケーション/ホセ+のJSON受け入れ：アプリケーション/ PEM-証明書チェーン"
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": base64url({\n    \"alg\": \"ES256\",\n    \"kid\": \"https://example.com/acme/acct/evOfKhNU60wg\",\n    \"nonce\": \"uQpSjlRb4vQVCjVYAyyUWg\",\n    \"url\": \"https://example.com/acme/cert/mAt3xBGaobw\"\n  }),\n  \"payload\": \"\",\n  \"signature\": \"nuSDISbWG8mMgE7H...QyVUL68yzf3Zawps\"\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "HTTP/1.1 200 OK Content-Type: application/pem-certificate-chain Link: <https://example.com/acme/directory>;rel=\"index\"",
      "ja": "HTTP / 1.1 200 OKのContent-Type：アプリケーション/ PEM-証明書チェーンのリンク：<https://example.com/acme/directory>; REL = \"インデックス\""
    },
    {
      "indent": 3,
      "text": "-----BEGIN CERTIFICATE-----\n[End-entity certificate contents]\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\n[Issuer certificate contents]\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\n[Other certificate contents]\n-----END CERTIFICATE-----",
      "raw": true
    },
    {
      "indent": 3,
      "text": "A certificate resource represents a single, immutable certificate. If the client wishes to obtain a renewed certificate, the client initiates a new order process to request one.",
      "ja": "証明書リソースは、単一の、不変の証明書を表します。クライアントが更新された証明書を取得したい場合、クライアントは1を要求する新しい注文プロセスを開始します。"
    },
    {
      "indent": 3,
      "text": "Because certificate resources are immutable once issuance is complete, the server MAY enable the caching of the resource by adding Expires and Cache-Control header fields specifying a point in time in the distant future. These header fields have no relation to the certificate's period of validity.",
      "ja": "発行が完了すると、証明書のリソースは不変であるため、サーバーは期限切れと遠い将来の時点を指定するのCache-Controlヘッダフィールドを追加することにより、リソースのキャッシュを有効にするかもしれません。これらのヘッダフィールドは、有効性の証明書の期間は関係ありません。"
    },
    {
      "indent": 3,
      "text": "The ACME client MAY request other formats by including an Accept header field [RFC7231] in its request. For example, the client could use the media type \"application/pkix-cert\" [RFC2585] or \"application/ pkcs7-mime\" [RFC5751] to request the end-entity certificate in DER format. Server support for alternate formats is OPTIONAL. For formats that can only express a single certificate, the server SHOULD provide one or more \"Link: rel=\"up\"\" header fields pointing to an issuer or issuers so that ACME clients can build a certificate chain as defined in TLS (see Section 4.4.2 of [RFC8446]).",
      "ja": "ACMEクライアントは、その要求のヘッダフィールドを受け入れ[RFC7231]を含むことによって、他のフォーマットを要求することができます。例えば、クライアントは、DERフォーマットでエンドエンティティ証明書を要求するためにメディアタイプ「アプリケーション/ PKIX-CERT」[RFC2585]、または「アプリケーション/ PKCS7-MIME」[RFC5751]を使用することができます。代替フォーマットのためのサーバーのサポートはオプションです。単一の証明書を表現することができる形式のために、サーバは、1つ以上の「リンク：REL =」提供すべきであるTLSで定義されるようにACMEクライアントは証明書チェーンを構築することができるように、発行者または発行者を指す「」アップヘッダフィールド（セクションを参照[RFC8446]の4.4.2）。"
    },
    {
      "indent": 0,
      "text": "7.5. Identifier Authorization",
      "section_title": true,
      "ja": "7.5. 識別子認証"
    },
    {
      "indent": 3,
      "text": "The identifier authorization process establishes the authorization of an account to manage certificates for a given identifier. This process assures the server of two things:",
      "ja": "識別子の承認プロセスは、与えられた識別子のための証明書を管理するアカウントの認証を確立します。このプロセスは2つのサーバーを保証します："
    },
    {
      "indent": 3,
      "text": "1. That the client controls the private key of the account key pair, and",
      "ja": "クライアントはアカウントの鍵ペアの秘密鍵を制御1、および"
    },
    {
      "indent": 3,
      "text": "2. That the client controls the identifier in question.",
      "section_title": true,
      "ja": "クライアントが問題の識別子を制御2.。"
    },
    {
      "indent": 3,
      "text": "This process may be repeated to associate multiple identifiers with an account (e.g., to request certificates with multiple identifiers) or to associate multiple accounts with an identifier (e.g., to allow multiple entities to manage certificates).",
      "ja": "このプロセスは、（例えば、複数の識別子を持つ証明書を要求する）または識別子で複数のアカウントを関連付けるために（例えば、複数のエンティティの証明書を管理できるように）アカウントで複数の識別子を関連付けるために繰り返すことができます。"
    },
    {
      "indent": 3,
      "text": "Authorization resources are created by the server in response to newOrder or newAuthz requests submitted by an account key holder; their URLs are provided to the client in the responses to these requests. The authorization object is implicitly tied to the account key used to sign the request.",
      "ja": "認証リソースがnewOrderまたはアカウントキーホルダーが提出しnewAuthz要求に応じてサーバによって作成されます。そのURLは、これらの要求への応答でクライアントに提供されています。権限オブジェクトは、暗黙的にリクエストに署名するために使用されるアカウントのキーに関連付けられています。"
    },
    {
      "indent": 3,
      "text": "When a client receives an order from the server in reply to a newOrder request, it downloads the authorization resources by sending POST-as-GET requests to the indicated URLs. If the client initiates authorization using a request to the newAuthz resource, it will have already received the pending authorization object in the response to that request.",
      "ja": "クライアントがnewOrder要求に応答して、サーバから順番を受信すると、それが示されたURLへのPOST-AS-GETリクエストを送信することにより、認可リソースをダウンロードします。クライアントがnewAuthzリソースへの要求を使用して認証を開始した場合、それはすでにその要求に応答して、保留中の承認オブジェクトを受信して​​います。"
    },
    {
      "indent": 3,
      "text": "POST /acme/authz/PAniVnsZcis HTTP/1.1 Host: example.com Content-Type: application/jose+json",
      "ja": "POST / ACME /のauthz / PAniVnsZcis HTTP / 1.1ホスト：example.comのContent-Type：アプリケーション/ホセ+ JSON"
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": base64url({\n    \"alg\": \"ES256\",\n    \"kid\": \"https://example.com/acme/acct/evOfKhNU60wg\",\n    \"nonce\": \"uQpSjlRb4vQVCjVYAyyUWg\",\n    \"url\": \"https://example.com/acme/authz/PAniVnsZcis\"\n  }),\n  \"payload\": \"\",\n  \"signature\": \"nuSDISbWG8mMgE7H...QyVUL68yzf3Zawps\"\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "HTTP/1.1 200 OK Content-Type: application/json Link: <https://example.com/acme/directory>;rel=\"index\"",
      "ja": "HTTP / 1.1 200 OKのContent-Type：アプリケーション/ JSONのリンク：<https://example.com/acme/directory>; REL = \"インデックス\""
    },
    {
      "indent": 3,
      "text": "{\n  \"status\": \"pending\",\n  \"expires\": \"2016-01-02T14:09:30Z\",",
      "raw": true
    },
    {
      "indent": 5,
      "text": "\"identifier\": {\n  \"type\": \"dns\",\n  \"value\": \"www.example.org\"\n},",
      "raw": true
    },
    {
      "indent": 3,
      "text": "  \"challenges\": [\n    {\n      \"type\": \"http-01\",\n      \"url\": \"https://example.com/acme/chall/prV_B7yEyA4\",\n      \"token\": \"DGyRejmCefe7v4NfDGDKfA\"\n    },\n    {\n      \"type\": \"dns-01\",\n      \"url\": \"https://example.com/acme/chall/Rg5dV14Gh1Q\",\n      \"token\": \"DGyRejmCefe7v4NfDGDKfA\"\n    }\n  ]\n}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "7.5.1. Responding to Challenges",
      "section_title": true,
      "ja": "7.5.1. 課題への対応"
    },
    {
      "indent": 3,
      "text": "To prove control of the identifier and receive authorization, the client needs to provision the required challenge response based on the challenge type and indicate to the server that it is ready for the challenge validation to be attempted.",
      "ja": "識別子の制御を証明し、承認を受けるためには、クライアントが提供に挑戦タイプに基づいて必要なチャレンジ・レスポンスを必要とし、それを試みたことへの挑戦検証のための準備ができているサーバに示します。"
    },
    {
      "indent": 3,
      "text": "The client indicates to the server that it is ready for the challenge validation by sending an empty JSON body (\"{}\") carried in a POST request to the challenge URL (not the authorization URL).",
      "ja": "クライアントは、それがチャレンジURL（ない承認URL）へのPOSTリクエストで運ばれ、空のJSONボディ（「{}」）を送信することにより、課題の検証のための準備ができていることをサーバーに通知します。"
    },
    {
      "indent": 3,
      "text": "For example, if the client were to respond to the \"http-01\" challenge in the above authorization, it would send the following request:",
      "ja": "クライアントは、上記の権限に「HTTP-01」チャレンジに応答していた場合、それは次のリクエストを送信します："
    },
    {
      "indent": 3,
      "text": "POST /acme/chall/prV_B7yEyA4 HTTP/1.1 Host: example.com Content-Type: application/jose+json",
      "ja": "POST / ACME / CHALL / prV_B7yEyA4 HTTP / 1.1ホスト：example.comのContent-Type：アプリケーション/ホセ+ JSON"
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": base64url({\n    \"alg\": \"ES256\",\n    \"kid\": \"https://example.com/acme/acct/evOfKhNU60wg\",\n    \"nonce\": \"Q_s3MWoqT05TrdkM2MTDcw\",\n    \"url\": \"https://example.com/acme/chall/prV_B7yEyA4\"\n  }),\n  \"payload\": base64url({}),\n  \"signature\": \"9cbg5JO1Gf5YLjjz...SpkUfcdPai9uVYYQ\"\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The server updates the authorization document by updating its representation of the challenge with the response object provided by the client. The server MUST ignore any fields in the response object that are not specified as response fields for this type of challenge. Note that the challenges in this document do not define any response fields, but future specifications might define them. The server provides a 200 (OK) response with the updated challenge object as its body.",
      "ja": "サーバーは、クライアントが提供する応答オブジェクトと挑戦のその表現を更新することにより、認可文書を更新します。サーバーは、チャレンジのこのタイプの応答フィールドとして指定されていないレスポンスオブジェクト内の任意のフィールドを無視しなければなりません。この文書に記載されている課題は、任意の応答フィールドを定義しませんが、将来の仕様は、それらを定義するかもしれないことに注意してください。サーバーは、その本体として更新されたチャレンジオブジェクトを持つ200（OK）応答を提供します。"
    },
    {
      "indent": 3,
      "text": "If the client's response is invalid for any reason or does not provide the server with appropriate information to validate the challenge, then the server MUST return an HTTP error. On receiving such an error, the client SHOULD undo any actions that have been taken to fulfill the challenge, e.g., removing files that have been provisioned to a web server.",
      "ja": "クライアントの応答が何らかの理由で無効であるかの課題を検証するために適切な情報を使用してサーバーを提供しない場合、サーバはHTTPエラーを返さなければなりません。このようなエラーを受信すると、クライアントはWebサーバにプロビジョニングされたファイルを削除し、例えば、挑戦を満たすために取られている任意のアクションを元に戻す必要があります。"
    },
    {
      "indent": 3,
      "text": "The server is said to \"finalize\" the authorization when it has completed one of the validations. This is done by assigning the authorization a status of \"valid\" or \"invalid\", corresponding to whether it considers the account authorized for the identifier. If the final state is \"valid\", then the server MUST include an \"expires\" field. When finalizing an authorization, the server MAY remove challenges other than the one that was completed, and it may modify the \"expires\" field. The server SHOULD NOT remove challenges with status \"invalid\".",
      "ja": "サーバーは、それが検証のいずれかを完了したときに許可を「確定」と言われています。これは、それが識別子を許可アカウントを考慮するかどうかに対応し、承認を「有効」または「無効」のステータスを割り当てることによって行われます。最終状態が「有効」である場合、サーバーは、「期限が切れる」フィールドを含まなければなりません。承認を確定すると、サーバーは、完成した以外の課題を削除すること、そしてそれが「期限が切れる」フィールドを変更することがあります。サーバは、ステータスが「無効」との課題を削除しないでください。"
    },
    {
      "indent": 3,
      "text": "Usually, the validation process will take some time, so the client will need to poll the authorization resource to see when it is finalized. For challenges where the client can tell when the server has validated the challenge (e.g., by seeing an HTTP or DNS request from the server), the client SHOULD NOT begin polling until it has seen the validation request from the server.",
      "ja": "通常、検証プロセスには時間がかかりますので、クライアントは、それが確定されたときに表示するために、認可リソースをポーリングする必要があります。それは、サーバからの検証要求を見ているまで、サーバは（例えば、サーバからのHTTPやDNSリクエストを見て）課題を検証したときにクライアントが言うことができるの挑戦のために、クライアントはポーリングを開始すべきではありません。"
    },
    {
      "indent": 3,
      "text": "To check on the status of an authorization, the client sends a POST-as-GET request to the authorization URL, and the server responds with the current authorization object. In responding to poll requests while the validation is still in progress, the server MUST return a 200 (OK) response and MAY include a Retry-After header field to suggest a polling interval to the client.",
      "ja": "承認の状況を確認するには、クライアントは、認証URLにPOST-AS-GETリクエストを送信し、サーバは、現在の権限オブジェクトを使用して応答します。検証がまだ進行中である間、ポーリング要求に応答して、サーバは200（OK）応答を返さなければなりませんし、クライアントへのポーリング間隔を示唆するために再試行-Afterヘッダーフィールドを含んでいてもよいです。"
    },
    {
      "indent": 3,
      "text": "POST /acme/authz/PAniVnsZcis HTTP/1.1 Host: example.com Content-Type: application/jose+json",
      "ja": "POST / ACME /のauthz / PAniVnsZcis HTTP / 1.1ホスト：example.comのContent-Type：アプリケーション/ホセ+ JSON"
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": base64url({\n    \"alg\": \"ES256\",\n    \"kid\": \"https://example.com/acme/acct/evOfKhNU60wg\",\n    \"nonce\": \"uQpSjlRb4vQVCjVYAyyUWg\",\n    \"url\": \"https://example.com/acme/authz/PAniVnsZcis\"\n  }),\n  \"payload\": \"\",\n  \"signature\": \"nuSDISbWG8mMgE7H...QyVUL68yzf3Zawps\"\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "HTTP/1.1 200 OK Content-Type: application/json Link: <https://example.com/acme/directory>;rel=\"index\"",
      "ja": "HTTP / 1.1 200 OKのContent-Type：アプリケーション/ JSONのリンク：<https://example.com/acme/directory>; REL = \"インデックス\""
    },
    {
      "indent": 3,
      "text": "{\n  \"status\": \"valid\",\n  \"expires\": \"2018-09-09T14:09:01.13Z\",",
      "raw": true
    },
    {
      "indent": 5,
      "text": "\"identifier\": {\n  \"type\": \"dns\",\n  \"value\": \"www.example.org\"\n},",
      "raw": true
    },
    {
      "indent": 3,
      "text": "  \"challenges\": [\n    {\n      \"type\": \"http-01\",\n      \"url\": \"https://example.com/acme/chall/prV_B7yEyA4\",\n      \"status\": \"valid\",\n      \"validated\": \"2014-12-01T12:05:13.72Z\",\n      \"token\": \"IlirfxKKXAsHtmzK29Pj8A\"\n    }\n  ]\n}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "7.5.2. Deactivating an Authorization",
      "section_title": true,
      "ja": "7.5.2. 認証の無効化"
    },
    {
      "indent": 3,
      "text": "If a client wishes to relinquish its authorization to issue\ncertificates for an identifier, then it may request that the server\ndeactivate each authorization associated with it by sending POST\nrequests with the static object {\"status\": \"deactivated\"} to each\nauthorization URL.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "POST /acme/authz/PAniVnsZcis HTTP/1.1 Host: example.com Content-Type: application/jose+json",
      "ja": "POST / ACME /のauthz / PAniVnsZcis HTTP / 1.1ホスト：example.comのContent-Type：アプリケーション/ホセ+ JSON"
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": base64url({\n    \"alg\": \"ES256\",\n    \"kid\": \"https://example.com/acme/acct/evOfKhNU60wg\",\n    \"nonce\": \"xWCM9lGbIyCgue8di6ueWQ\",\n    \"url\": \"https://example.com/acme/authz/PAniVnsZcis\"\n  }),\n  \"payload\": base64url({\n    \"status\": \"deactivated\"\n  }),\n  \"signature\": \"srX9Ji7Le9bjszhu...WTFdtujObzMtZcx4\"\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The server MUST verify that the request is signed by the account key corresponding to the account that owns the authorization. If the server accepts the deactivation, it should reply with a 200 (OK) status code and the updated contents of the authorization object.",
      "ja": "サーバーは、要求が許可を所有するアカウントに対応するアカウントキーによって署名されていることを確かめなければなりません。サーバが停止を受け入れた場合、それは200（OK）ステータスコードと権限オブジェクトの更新内容で返信する必要があります。"
    },
    {
      "indent": 3,
      "text": "The server MUST NOT treat deactivated authorization objects as sufficient for issuing certificates.",
      "ja": "サーバーは、証明書を発行するためとして十分な非アクティブ化権限オブジェクトを処理してはなりません。"
    },
    {
      "indent": 0,
      "text": "7.6. Certificate Revocation",
      "section_title": true,
      "ja": "7.6. 証明書失効"
    },
    {
      "indent": 3,
      "text": "To request that a certificate be revoked, the client sends a POST request to the ACME server's revokeCert URL. The body of the POST is a JWS object whose JSON payload contains the certificate to be revoked:",
      "ja": "証明書が失効することを要求するには、クライアントは、ACMEサーバのrevokeCert URLにPOSTリクエストを送信します。 POSTの本体は、そのJSONペイロード失効する証明書が含まれているJWSオブジェクトです。"
    },
    {
      "indent": 3,
      "text": "certificate (required, string): The certificate to be revoked, in the base64url-encoded version of the DER format. (Note: Because this field uses base64url, and does not include headers, it is different from PEM.)",
      "ja": "証明書（必須、ストリング）：DERフォーマットのbase64url符号化されたバージョンでは、失効する証明書。 （注意：このフィールドはbase64urlを使用し、ヘッダが含まれていないので、それはPEMとは異なります。）"
    },
    {
      "indent": 3,
      "text": "reason (optional, int): One of the revocation reasonCodes defined in Section 5.3.1 of [RFC5280] to be used when generating OCSP responses and CRLs. If this field is not set, the server SHOULD omit the reasonCode CRL entry extension when generating OCSP responses and CRLs. The server MAY disallow a subset of reasonCodes from being used by the user. If a request contains a disallowed reasonCode, then the server MUST reject it with the error type \"urn:ietf:params:acme:error:badRevocationReason\". The problem document detail SHOULD indicate which reasonCodes are allowed.",
      "ja": "理由（オプション、INT）：OCSP応答とCRLを生成する際に使用する[RFC5280]のセクション5.3.1で定義された失効reasonCodesのひとつ。このフィールドが設定されていない場合はOCSP応答とCRLを生成するとき、サーバはreasonCodeはCRLエントリー拡張子を省略すべきです。サーバは、ユーザが使用しているからreasonCodesのサブセットを許可しない場合があります。要求が許可されていないreasonCodeはが含まれている場合、サーバーはエラー・タイプ「：IETF：のparams：ACME：エラー：badRevocationReason URN」でそれを拒絶しなければなりません。問題の文書の詳細は許可されているreasonCodes示すべきです。"
    },
    {
      "indent": 3,
      "text": "Revocation requests are different from other ACME requests in that they can be signed with either an account key pair or the key pair in the certificate.",
      "ja": "失効要求は、彼らはアカウントの鍵ペアまたは証明書で鍵ペアのいずれかで署名することができるという、他のACMEの要求とは異なります。"
    },
    {
      "indent": 3,
      "text": "Example using an account key pair for the signature:",
      "ja": "署名のためのアカウントの鍵ペアを使用した例："
    },
    {
      "indent": 3,
      "text": "POST /acme/revoke-cert HTTP/1.1 Host: example.com Content-Type: application/jose+json",
      "ja": "POST / ACME /取り消し-CERT HTTP / 1.1ホスト：example.comのContent-Type：アプリケーション/ホセ+ JSON"
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": base64url({\n    \"alg\": \"ES256\",\n    \"kid\": \"https://example.com/acme/acct/evOfKhNU60wg\",\n    \"nonce\": \"JHb54aT_KTXBWQOzGYkt9A\",\n    \"url\": \"https://example.com/acme/revoke-cert\"\n  }),\n  \"payload\": base64url({\n    \"certificate\": \"MIIEDTCCAvegAwIBAgIRAP8...\",\n    \"reason\": 4\n  }),\n  \"signature\": \"Q1bURgJoEslbD1c5...3pYdSMLio57mQNN4\"\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Example using the certificate key pair for the signature:",
      "ja": "署名の証明書の鍵のペアを使用した例："
    },
    {
      "indent": 3,
      "text": "POST /acme/revoke-cert HTTP/1.1 Host: example.com Content-Type: application/jose+json",
      "ja": "POST / ACME /取り消し-CERT HTTP / 1.1ホスト：example.comのContent-Type：アプリケーション/ホセ+ JSON"
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": base64url({\n    \"alg\": \"RS256\",\n    \"jwk\": /* certificate's public key */,\n    \"nonce\": \"JHb54aT_KTXBWQOzGYkt9A\",\n    \"url\": \"https://example.com/acme/revoke-cert\"\n  }),\n  \"payload\": base64url({\n    \"certificate\": \"MIIEDTCCAvegAwIBAgIRAP8...\",\n    \"reason\": 1\n  }),\n  \"signature\": \"Q1bURgJoEslbD1c5...3pYdSMLio57mQNN4\"\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Before revoking a certificate, the server MUST verify that the key used to sign the request is authorized to revoke the certificate. The server MUST consider at least the following accounts authorized for a given certificate:",
      "ja": "証明書を失効する前に、サーバが要求に署名するために使用する鍵は、証明書を失効する権限があることを確かめなければなりません。サーバーは、指定された証明書を許可少なくとも以下のアカウントを考慮する必要があります。"
    },
    {
      "indent": 3,
      "text": "o the account that issued the certificate.",
      "ja": "証明書を発行したアカウント、O。"
    },
    {
      "indent": 3,
      "text": "o an account that holds authorizations for all of the identifiers in the certificate.",
      "ja": "証明書内の識別子のすべての権限を保持しているアカウント、O。"
    },
    {
      "indent": 3,
      "text": "The server MUST also consider a revocation request valid if it is signed with the private key corresponding to the public key in the certificate.",
      "ja": "それは証明書の公開鍵に対応する秘密鍵で署名されている場合、サーバーも失効要求が有効で考慮しなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the revocation succeeds, the server responds with status code 200 (OK). If the revocation fails, the server returns an error. For example, if the certificate has already been revoked, the server returns an error response with status code 400 (Bad Request) and type \"urn:ietf:params:acme:error:alreadyRevoked\".",
      "ja": "失効が成功すると、サーバはステータスコード200（OK）で応答します。失効が失敗した場合、サーバーはエラーを返します。例えば、証明書が既に失効している場合、サーバは、ステータスコード400（悪いRequest）とタイプ「：IETF：paramsは：ACME：エラー：alreadyRevoked URN」のエラー応答を返します。"
    },
    {
      "indent": 3,
      "text": "HTTP/1.1 200 OK Replay-Nonce: IXVHDyxIRGcTE0VSblhPzw Content-Length: 0 Link: <https://example.com/acme/directory>;rel=\"index\"",
      "ja": "HTTP / 1.1 200 OKリプレイ・ナンス：IXVHDyxIRGcTE0VSblhPzwのContent-Length：0リンク：<https://example.com/acme/directory>; REL = \"インデックス\""
    },
    {
      "indent": 3,
      "text": "--- or ---",
      "raw": true
    },
    {
      "indent": 3,
      "text": "HTTP/1.1 403 Forbidden Replay-Nonce: lXfyFzi6238tfPQRwgfmPU Content-Type: application/problem+json Content-Language: en Link: <https://example.com/acme/directory>;rel=\"index\"",
      "ja": "HTTP / 1.1 403禁止リプレイ・ナンス：lXfyFzi6238tfPQRwgfmPUのContent-Type：アプリケーション/問題+ JSONコンテンツ言語：リンクEN：<https://example.com/acme/directory>; RELを= \"インデックス\""
    },
    {
      "indent": 3,
      "text": "{\n  \"type\": \"urn:ietf:params:acme:error:unauthorized\",\n  \"detail\": \"No authorization provided for name example.org\"\n}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "8. Identifier Validation Challenges",
      "section_title": true,
      "ja": "8.識別子の検証課題"
    },
    {
      "indent": 3,
      "text": "There are few types of identifiers in the world for which there is a standardized mechanism to prove possession of a given identifier. In all practical cases, CAs rely on a variety of means to test whether an entity applying for a certificate with a given identifier actually controls that identifier.",
      "ja": "与えられた識別子の所有を証明するために標準化されたメカニズムが存在するため、世界の識別子のいくつかの種類があります。全ての実用的なケースでは、CAは、与えられた識別子を持つ証明書を申請するエンティティが実際にその識別子を制御するかどうかを試験するための種々の手段に依存しています。"
    },
    {
      "indent": 3,
      "text": "Challenges provide the server with assurance that an account holder is also the entity that controls an identifier. For each type of challenge, it must be the case that, in order for an entity to successfully complete the challenge, the entity must both:",
      "ja": "課題は、口座保有者はまた、識別子を制御するエンティティであることを保証してサーバーを提供しています。挑戦の種類ごとに、それが成功した挑戦を完了するエンティティのために、エンティティは両方必要があり、その場合でなければなりません。"
    },
    {
      "indent": 3,
      "text": "o Hold the private key of the account key pair used to respond to the challenge, and",
      "ja": "Oチャレンジに応答するために使用するアカウントの鍵ペアの秘密鍵を持ち、"
    },
    {
      "indent": 3,
      "text": "o Control the identifier in question.",
      "ja": "O問題の識別子を制御します。"
    },
    {
      "indent": 3,
      "text": "Section 10 documents how the challenges defined in this document meet these requirements. New challenges will need to document how they do.",
      "ja": "この文書で定義された課題は、これらの要件を満たす方法をセクション10枚の文書。新たな課題は、彼らがどのように文書化する必要があります。"
    },
    {
      "indent": 3,
      "text": "ACME uses an extensible challenge/response framework for identifier validation. The server presents a set of challenges in the authorization object it sends to a client (as objects in the \"challenges\" array), and the client responds by sending a response object in a POST request to a challenge URL.",
      "ja": "ACMEは、識別子の検証のための拡張可能チャレンジ/レスポンスフレームワークを使用します。サーバは、それが（「挑戦」配列内のオブジェクトのように）クライアントに送信する権限オブジェクトにおける課題のセットを提示し、クライアントは、チャレンジのURLにPOSTリクエストに応答オブジェクトを送信して応答します。"
    },
    {
      "indent": 3,
      "text": "This section describes an initial set of challenge types. The definition of a challenge type includes:",
      "ja": "このセクションでは、チャレンジ種類の初期設定について説明します。チャレンジ型の定義が含まれています："
    },
    {
      "indent": 3,
      "text": "1. Content of challenge objects",
      "section_title": true,
      "ja": "チャレンジオブジェクトの1コンテンツ"
    },
    {
      "indent": 3,
      "text": "2. Content of response objects",
      "section_title": true,
      "ja": "レスポンスオブジェクトの2.コンテンツ"
    },
    {
      "indent": 3,
      "text": "3. How the server uses the challenge and response to verify control of an identifier",
      "ja": "サーバは、識別子の制御を確認するために、チャレンジとレスポンスを使用していますどのように3。"
    },
    {
      "indent": 3,
      "text": "Challenge objects all contain the following basic fields:",
      "ja": "チャレンジは、すべて以下の基本的なフィールドを含むオブジェクト："
    },
    {
      "indent": 3,
      "text": "type (required, string): The type of challenge encoded in the object.",
      "ja": "タイプ（必須、文字列）：オブジェクトでエンコードされた課題のタイプ。"
    },
    {
      "indent": 3,
      "text": "url (required, string): The URL to which a response can be posted.",
      "ja": "URL（必須、文字列）：レスポンスが掲載可能なURL。"
    },
    {
      "indent": 3,
      "text": "status (required, string): The status of this challenge. Possible values are \"pending\", \"processing\", \"valid\", and \"invalid\" (see Section 7.1.6).",
      "ja": "ステータス（必須、文字列）：この挑戦の状態。可能な値は、（セクション7.1.6を参照）、「保留中」、「処理」、「有効」と「無効」です。"
    },
    {
      "indent": 3,
      "text": "validated (optional, string): The time at which the server validated this challenge, encoded in the format specified in [RFC3339]. This field is REQUIRED if the \"status\" field is \"valid\".",
      "ja": "検証（オプション、ストリング）：サーバーはこの課題を検証した時刻、[RFC3339]で指定された形式で符号化されます。 「状態」フィールドが「有効」である場合は、このフィールドは必須です。"
    },
    {
      "indent": 3,
      "text": "error (optional, object): Error that occurred while the server was validating the challenge, if any, structured as a problem document [RFC7807]. Multiple errors can be indicated by using subproblems Section 6.7.1. A challenge object with an error MUST have status equal to \"invalid\".",
      "ja": "エラー（オプション、オブジェクト）：サーバーがチャレンジの検証中に発生したエラーが、もしあれば、問題の文書[RFC7807]のように構成される。複数のエラーは、部分問題のセクション6.7.1を使用することによって示すことができます。エラーと挑戦オブジェクトが「無効」に等しい状態を持たなければなりません。"
    },
    {
      "indent": 3,
      "text": "All additional fields are specified by the challenge type. If the server sets a challenge's \"status\" to \"invalid\", it SHOULD also include the \"error\" field to help the client diagnose why the challenge failed.",
      "ja": "すべての追加のフィールドは、チャレンジのタイプによって指定されています。サーバは「無効」への挑戦の「状態」を設定した場合、それはまた挑戦が失敗した理由を、クライアントが診断に役立つために「エラー」フィールドが含まれるべきです。"
    },
    {
      "indent": 3,
      "text": "Different challenges allow the server to obtain proof of different aspects of control over an identifier. In some challenges, like HTTP and DNS, the client directly proves its ability to do certain things related to the identifier. The choice of which challenges to offer to a client under which circumstances is a matter of server policy.",
      "ja": "別の課題は、サーバが、識別子をコントロールのさまざまな側面の証拠を入手することができます。いくつかの課題では、HTTPおよびDNSのように、クライアントが直接識別子に関連する特定の物事を行う能力を証明しています。選択は、サーバポリシーの問題である状況下では、クライアントに提供するために挑戦します。"
    },
    {
      "indent": 3,
      "text": "The identifier validation challenges described in this section all relate to validation of domain names. If ACME is extended in the future to support other types of identifiers, there will need to be new challenge types, and they will need to specify which types of identifier they apply to.",
      "ja": "このセクションで説明する識別子検証課題はすべてのドメイン名の検証に関係します。 ACMEは、識別子の他の種類をサポートするために、将来的に拡張されている場合は、そこに新たな挑戦タイプである必要があります、そして、彼らはそれらが適用される識別子のタイプを指定する必要があります。"
    },
    {
      "indent": 0,
      "text": "8.1. Key Authorizations",
      "section_title": true,
      "ja": "8.1. キー承認"
    },
    {
      "indent": 3,
      "text": "All challenges defined in this document make use of a key authorization string. A key authorization is a string that concatenates the token for the challenge with a key fingerprint, separated by a \".\" character:",
      "ja": "この文書で定義されたすべての課題は、キーの認証文字列を使用しています。キー承認は、「」で区切られたキーのフィンガープリントとの挑戦のためのトークンを連結した文字列を、ありますキャラクター："
    },
    {
      "indent": 3,
      "text": "keyAuthorization = token || '.' || base64url(Thumbprint(accountKey))",
      "ja": "|| keyAuthorization =トークン'' || base64url（拇印（accountKey））"
    },
    {
      "indent": 3,
      "text": "The \"Thumbprint\" step indicates the computation specified in [RFC7638], using the SHA-256 digest [FIPS180-4]. As noted in [RFC7518] any prepended zero octets in the fields of a JWK object MUST be stripped before doing the computation.",
      "ja": "「拇印」ステップは、SHA-256ダイジェスト[FIPS180-4]を使用して、[RFC7638]で指定された計算を示しています。 [RFC7518]で述べたように任意にJWKオブジェクトのフィールドにゼロオクテット計算を行う前に剥離されなければならない付加しました。"
    },
    {
      "indent": 3,
      "text": "As specified in the individual challenges below, the token for a challenge is a string comprised entirely of characters in the URL-safe base64 alphabet. The \"||\" operator indicates concatenation of strings.",
      "ja": "以下、個々の課題に指定されているように、挑戦のためにトークンが完全にURLセーフのBase64アルファベットの文字で構成される文字列です。 「||」オペレータは、文字列の連結を示しています。"
    },
    {
      "indent": 0,
      "text": "8.2. Retrying Challenges",
      "section_title": true,
      "ja": "8.2. 再試行の課題"
    },
    {
      "indent": 3,
      "text": "ACME challenges typically require the client to set up some network-accessible resource that the server can query in order to validate that the client controls an identifier. In practice, it is not uncommon for the server's queries to fail while a resource is being set up, e.g., due to information propagating across a cluster or firewall rules not being in place.",
      "ja": "ACMEの課題は、一般的に、サーバーがクライアント識別子を制御することを検証するために照会することができ、いくつかのネットワークアクセス可能なリソースを設定するには、クライアントが必要です。実際には、リソースが原因の場所にされていないクラスタまたはファイアウォールルールを越えて伝播情報に、例えば、設定されている間、サーバのクエリが失敗するのは珍しいことではありません。"
    },
    {
      "indent": 3,
      "text": "Clients SHOULD NOT respond to challenges until they believe that the server's queries will succeed. If a server's initial validation query fails, the server SHOULD retry the query after some time, in order to account for delay in setting up responses such as DNS records or HTTP resources. The precise retry schedule is up to the server, but server operators should keep in mind the operational scenarios that the schedule is trying to accommodate. Given that retries are intended to address things like propagation delays in HTTP or DNS provisioning, there should not usually be any reason to retry more often than every 5 or 10 seconds. While the server is still trying, the status of the challenge remains \"processing\"; it is only marked \"invalid\" once the server has given up.",
      "ja": "彼らは、サーバーのクエリが成功すると信じてまで、クライアントが課題に対応すべきではありません。サーバーの初期検証クエリーが失敗した場合、サーバーは、DNSレコードまたはHTTPリソースとして応答を設定する際に遅延を考慮するために、いくつかの時間後にクエリを再試行する必要があります。正確な再試行スケジュールはサーバー次第ですが、サーバーオペレータは、スケジュールが対応しようとしていることを念頭に置いて運用シナリオを維持する必要があります。再試行は、HTTPまたはDNSプロビジョニングにおける伝搬遅延のようなものに対処することを意図していることを考えると、通常より頻繁に、すべての5秒または10秒よりもリトライする理由があってはなりません。サーバがまだしようとしている一方で、課題のステータスが「処理」のまま。サーバがあきらめた後それだけで「無効」とマークされています。"
    },
    {
      "indent": 3,
      "text": "The server MUST provide information about its retry state to the client via the \"error\" field in the challenge and the Retry-After HTTP header field in response to requests to the challenge resource. The server MUST add an entry to the \"error\" field in the challenge after each failed validation query. The server SHOULD set the Retry-After header field to a time after the server's next validation query, since the status of the challenge will not change until that time.",
      "ja": "サーバーは、チャレンジリソースへの要求に応じて、挑戦してリトライした後、HTTPヘッダフィールドに「エラー」フィールドを介してクライアントにその再試行状態に関する情報を提供しなければなりません。それぞれが検証クエリーを失敗した後、サーバーは、チャレンジに「エラー」フィールドにエントリを追加する必要があります。課題のステータスがそれまで変更されませんので、サーバーは、サーバーの次の検証クエリー後の時間にリトライ-Afterヘッダフィールドを設定する必要があります。"
    },
    {
      "indent": 3,
      "text": "Clients can explicitly request a retry by re-sending their response to a challenge in a new POST request (with a new nonce, etc.). This allows clients to request a retry when the state has changed (e.g., after firewall rules have been updated). Servers SHOULD retry a request immediately on receiving such a POST request. In order to avoid denial-of-service attacks via client-initiated retries, servers SHOULD rate-limit such requests.",
      "ja": "クライアントは、（など、新しいナンスで）新しいPOSTリクエストにチャレンジに対するその応答を再送信することにより、再試行を明示的に要求することができます。これは、（ファイアウォールルールが更新された後、例えば）の状態が変化したときにクライアントが再試行を要求することができます。サーバーは、POSTリクエストを受信するとすぐに、要求を再試行する必要があります。クライアントが開始した再試行を経てサービス拒否攻撃を避けるために、サーバは、レート制限する必要があり、このような要求を。"
    },
    {
      "indent": 0,
      "text": "8.3. HTTP Challenge",
      "section_title": true,
      "ja": "8.3.  HTTPチャレンジ"
    },
    {
      "indent": 3,
      "text": "With HTTP validation, the client in an ACME transaction proves its control over a domain name by proving that it can provision HTTP resources on a server accessible under that domain name. The ACME server challenges the client to provision a file at a specific path, with a specific string as its content.",
      "ja": "HTTPの検証では、ACMEのトランザクションにおけるクライアントは、それがそのドメイン名でアクセス可能なサーバ上の規定のHTTPリソースをできることを証明することによって、ドメイン名の上にその制御を証明しています。 ACMEサーバは、その内容など、特定の文字列を使用して、特定のパスで規定ファイルへのクライアントに挑戦します。"
    },
    {
      "indent": 3,
      "text": "As a domain may resolve to multiple IPv4 and IPv6 addresses, the server will connect to at least one of the hosts found in the DNS A and AAAA records, at its discretion. Because many web servers allocate a default HTTPS virtual host to a particular low-privilege tenant user in a subtle and non-intuitive manner, the challenge must be completed over HTTP, not HTTPS.",
      "ja": "ドメインが複数のIPv4アドレスとIPv6アドレスに解決することができるように、サーバは、その裁量により、DNS AおよびAAAAレコードに見つかったホストの少なくとも一方に接続します。多くのWebサーバが微妙と非直感的な方法で特定の低い特権のテナントのユーザーにデフォルトのHTTPS仮想ホストを割り当てているので、課題は、HTTP、HTTPSではない上に完了する必要があります。"
    },
    {
      "indent": 3,
      "text": "type (required, string): The string \"http-01\".",
      "ja": "タイプ（必須、文字列）：文字列 \"HTTP-01\"。"
    },
    {
      "indent": 3,
      "text": "token (required, string): A random value that uniquely identifies the challenge. This value MUST have at least 128 bits of entropy. It MUST NOT contain any characters outside the base64url alphabet and MUST NOT include base64 padding characters (\"=\"). See [RFC4086] for additional information on randomness requirements.",
      "ja": "トークン（必須、ストリング）：一意のチャレンジを識別するランダム値。この値は、エントロピーの少なくとも128ビットを持たなければなりません。これは、（「=」）base64urlアルファベット外の文字を含めることはできませんし、base64でパディング文字を含んではいけません。ランダム性の要件の詳細については、[RFC4086]を参照してください。"
    },
    {
      "indent": 3,
      "text": "{\n  \"type\": \"http-01\",\n  \"url\": \"https://example.com/acme/chall/prV_B7yEyA4\",\n  \"status\": \"pending\",\n  \"token\": \"LoqXcYV8q5ONbJQxbmR7SCTNo3tiAXDfowyjxAjEuX0\"\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "A client fulfills this challenge by constructing a key authorization from the \"token\" value provided in the challenge and the client's account key. The client then provisions the key authorization as a resource on the HTTP server for the domain in question.",
      "ja": "クライアントは、「トークン」挑戦で提供された値とクライアントのアカウントキーからキー認証を構成することにより、この課題を満たしています。次に、クライアントは規定問題のドメインのHTTPサーバー上のリソースとして重要な承認を。"
    },
    {
      "indent": 3,
      "text": "The path at which the resource is provisioned is comprised of the fixed prefix \"/.well-known/acme-challenge/\", followed by the \"token\" value in the challenge. The value of the resource MUST be the ASCII representation of the key authorization.",
      "ja": "リソースがプロビジョニングされたパスは、挑戦で「トークン」の値が続く「/.well-known/acme-challenge/」固定プレフィックスから構成されています。リソースの値は、キー認証のASCII表現でなければなりません。"
    },
    {
      "indent": 3,
      "text": "GET /.well-known/acme-challenge/LoqXcYV8...jxAjEuX0 Host: example.org",
      "ja": "/.well-known/acme-challenge/LoqXcYV8...jxAjEuX0ホストをGET：example.org"
    },
    {
      "indent": 3,
      "text": "HTTP/1.1 200 OK Content-Type: application/octet-stream",
      "ja": "HTTP / 1.1 200 OKのContent-Type：アプリケーション/オクテットストリーム"
    },
    {
      "indent": 3,
      "text": "LoqXcYV8...jxAjEuX0.9jg46WB3...fm21mqTI",
      "ja": "LoqXcYV8 ... jxAjEuX0.9jg46WB3 ... fm21mqTI"
    },
    {
      "indent": 3,
      "text": "(In the above, \"...\" indicates that the token and the JWK thumbprint in the key authorization have been truncated to fit on the page.)",
      "ja": "（上記では、「...」キー認証トークンとJWKの拇印は、ページに収まるように切り捨てられていることを示しています。）"
    },
    {
      "indent": 3,
      "text": "A client responds with an empty object ({}) to acknowledge that the challenge can be validated by the server.",
      "ja": "クライアントは、チャレンジは、サーバによって検証することができることを確認するために空のオブジェクト（{}）で応答します。"
    },
    {
      "indent": 3,
      "text": "POST /acme/chall/prV_B7yEyA4 Host: example.com Content-Type: application/jose+json",
      "ja": "POST / ACME / CHALL / prV_B7yEyA4ホスト：example.comのContent-Type：アプリケーション/ホセ+ JSON"
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": base64url({\n    \"alg\": \"ES256\",\n    \"kid\": \"https://example.com/acme/acct/evOfKhNU60wg\",\n    \"nonce\": \"UQI1PoRi5OuXzxuX7V7wL0\",\n    \"url\": \"https://example.com/acme/chall/prV_B7yEyA4\"\n  }),\n  \"payload\": base64url({}),\n  \"signature\": \"Q1bURgJoEslbD1c5...3pYdSMLio57mQNN4\"\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "On receiving a response, the server constructs and stores the key authorization from the challenge \"token\" value and the current client account key.",
      "ja": "応答を受信すると、サーバー構築物および店舗挑戦「トークン」値と現在のクライアントアカウントキーからキーの認可。"
    },
    {
      "indent": 3,
      "text": "Given a challenge/response pair, the server verifies the client's control of the domain by verifying that the resource was provisioned as expected.",
      "ja": "チャレンジ/レスポンスのペアを考えると、サーバが期待通りにリソースがプロビジョニングされたことを確認することによって、ドメインのクライアントの制御を検証します。"
    },
    {
      "indent": 3,
      "text": "1. Construct a URL by populating the URL template [RFC6570] \"http://{domain}/.well-known/acme-challenge/{token}\", where:",
      "ja": "ここで、1. URLテンプレート[RFC6570] \"// {ドメイン} /.well-known/acme-challenge/ {トークン} HTTP\" を投入することによってURLを構築します。"
    },
    {
      "indent": 7,
      "text": "* the domain field is set to the domain name being verified; and",
      "ja": "*ドメインフィールドが検証されているドメイン名に設定されています。そして"
    },
    {
      "indent": 7,
      "text": "* the token field is set to the token in the challenge.",
      "ja": "*トークン・フィールドは、チャレンジにトークンに設定されています。"
    },
    {
      "indent": 3,
      "text": "2. Verify that the resulting URL is well-formed.",
      "section_title": true,
      "ja": "2.得られたURLが十分に形成されていることを確認します。"
    },
    {
      "indent": 3,
      "text": "3. Dereference the URL using an HTTP GET request. This request MUST be sent to TCP port 80 on the HTTP server.",
      "ja": "HTTPのGETリクエストを使用してURLデリファレンス3.。この要求は、HTTPサーバー上のTCPポート80に送らなければなりません。"
    },
    {
      "indent": 3,
      "text": "4. Verify that the body of the response is a well-formed key authorization. The server SHOULD ignore whitespace characters at the end of the body.",
      "ja": "4.レスポンスのボディは、よく形成されたキー認証であることを確認します。サーバーは、本体の末尾に空白文字を無視する必要があります。"
    },
    {
      "indent": 3,
      "text": "5. Verify that key authorization provided by the HTTP server matches the key authorization stored by the server.",
      "ja": "5. HTTPサーバが提供するキー認証がサーバによって保存されたキーの権限と一致することを確認します。"
    },
    {
      "indent": 3,
      "text": "The server SHOULD follow redirects when dereferencing the URL. Clients might use redirects, for example, so that the response can be provided by a centralized certificate management server. See Section 10.2 for security considerations related to redirects.",
      "ja": "URLを参照解除すると、サーバーはリダイレクトに従ってください。応答は、集中証明書管理サーバにより提供することができるように、クライアントは、例えば、リダイレクトを使用する場合があります。リダイレクトに関連するセキュリティ上の考慮事項については、10.2節を参照してください。"
    },
    {
      "indent": 3,
      "text": "If all of the above verifications succeed, then the validation is successful. If the request fails, or the body does not pass these checks, then it has failed.",
      "ja": "上記の検証がすべて成功した場合は、検証が成功しています。要求が失敗した場合、または身体がこれらのチェックに合格しない場合、それは失敗しました。"
    },
    {
      "indent": 3,
      "text": "The client SHOULD de-provision the resource provisioned for this challenge once the challenge is complete, i.e., once the \"status\" field of the challenge has the value \"valid\" or \"invalid\".",
      "ja": "クライアントがde-提供すべきである。この挑戦のためにプロビジョニングされたリソースを挑戦が完了すると、すなわち、挑戦の「状態」フィールドが「有効」または「無効」の値を持っていたら。"
    },
    {
      "indent": 3,
      "text": "Note that because the token appears both in the request sent by the ACME server and in the key authorization in the response, it is possible to build clients that copy the token from request to response. Clients should avoid this behavior because it can lead to cross-site scripting vulnerabilities; instead, clients should be explicitly configured on a per-challenge basis. A client that does copy tokens from requests to responses MUST validate that the token in the request matches the token syntax above (e.g., that it includes only characters from the base64url alphabet).",
      "ja": "トークンは、ACMEサーバによって送信された要求で、応答におけるキー認証の両方に表示されますので、レスポンスにリクエストからトークンをコピーするクライアントを構築することが可能であることに注意してください。それは、クロスサイトスクリプティングの脆弱性につながる可能性があるため、クライアントは、この動作を避ける必要があります。代わりに、クライアントが明示的にあたりチャレンジ基づいて設定する必要があります。応答に要求からコピートークンを行い、クライアントはリクエストでトークンが（例えば、それはbase64urlのアルファベットの文字だけが含まれていること）上記のトークンの構文と一致することを検証する必要があります。"
    },
    {
      "indent": 0,
      "text": "8.4. DNS Challenge",
      "section_title": true,
      "ja": "8.4.  DNSチャレンジ"
    },
    {
      "indent": 3,
      "text": "When the identifier being validated is a domain name, the client can prove control of that domain by provisioning a TXT resource record containing a designated value for a specific validation domain name.",
      "ja": "検証されている識別子は、ドメイン名である場合、クライアントは、特定の検証ドメイン名の指定された値を含むTXTリソースレコードをプロビジョニングすることにより、そのドメインの制御を証明することができます。"
    },
    {
      "indent": 3,
      "text": "type (required, string): The string \"dns-01\".",
      "ja": "タイプ（必須、文字列）：文字列 \"DNS-01\"。"
    },
    {
      "indent": 3,
      "text": "token (required, string): A random value that uniquely identifies the challenge. This value MUST have at least 128 bits of entropy. It MUST NOT contain any characters outside the base64url alphabet, including padding characters (\"=\"). See [RFC4086] for additional information on randomness requirements.",
      "ja": "トークン（必須、ストリング）：一意のチャレンジを識別するランダム値。この値は、エントロピーの少なくとも128ビットを持たなければなりません。これは、パディング文字（「=」）を含め、base64urlアルファベット外の文字を含めることはできません。ランダム性の要件の詳細については、[RFC4086]を参照してください。"
    },
    {
      "indent": 3,
      "text": "{\n  \"type\": \"dns-01\",\n  \"url\": \"https://example.com/acme/chall/Rg5dV14Gh1Q\",\n  \"status\": \"pending\",\n  \"token\": \"evaGxfADs6pSRb2LAv9IZf17Dt3juxGJ-PCt92wr-oA\"\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "A client fulfills this challenge by constructing a key authorization from the \"token\" value provided in the challenge and the client's account key. The client then computes the SHA-256 digest [FIPS180-4] of the key authorization.",
      "ja": "クライアントは、「トークン」挑戦で提供された値とクライアントのアカウントキーからキー認証を構成することにより、この課題を満たしています。次に、クライアントは、SHA-256は、キー認証の[FIPS180-4]ダイジェストを計算します。"
    },
    {
      "indent": 3,
      "text": "The record provisioned to the DNS contains the base64url encoding of this digest. The client constructs the validation domain name by prepending the label \"_acme-challenge\" to the domain name being validated, then provisions a TXT record with the digest value under that name. For example, if the domain name being validated is \"www.example.org\", then the client would provision the following DNS record:",
      "ja": "DNSにプロビジョニングレコードは、このダイジェストのbase64urlエンコーディングが含まれています。クライアントは、その名前の下にダイジェスト値と規定TXTレコードを、その後、検証されるドメイン名にラベル「_acmeチャレンジ」を付加することで、検証のドメイン名を作成します。例えば、検証されているドメイン名は、「www.example.org」であれば、クライアントが提供以下のDNSレコードを希望："
    },
    {
      "indent": 3,
      "text": "_acme-challenge.www.example.org. 300 IN TXT \"gfj9Xq...Rg85nM\"",
      "ja": "_acme-challenge.www.example.org。 TXT 300 \"gfj9Xq ... Rg85nM\""
    },
    {
      "indent": 3,
      "text": "A client responds with an empty object ({}) to acknowledge that the challenge can be validated by the server.",
      "ja": "クライアントは、チャレンジは、サーバによって検証することができることを確認するために空のオブジェクト（{}）で応答します。"
    },
    {
      "indent": 3,
      "text": "POST /acme/chall/Rg5dV14Gh1Q Host: example.com Content-Type: application/jose+json",
      "ja": "POST / ACME / CHALL / Rg5dV14Gh1Qホスト：example.comのContent-Type：アプリケーション/ホセ+ JSON"
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": base64url({\n    \"alg\": \"ES256\",\n    \"kid\": \"https://example.com/acme/acct/evOfKhNU60wg\",\n    \"nonce\": \"SS2sSl1PtspvFZ08kNtzKd\",\n    \"url\": \"https://example.com/acme/chall/Rg5dV14Gh1Q\"\n  }),\n  \"payload\": base64url({}),\n  \"signature\": \"Q1bURgJoEslbD1c5...3pYdSMLio57mQNN4\"\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "On receiving a response, the server constructs and stores the key authorization from the challenge \"token\" value and the current client account key.",
      "ja": "応答を受信すると、サーバー構築物および店舗挑戦「トークン」値と現在のクライアントアカウントキーからキーの認可。"
    },
    {
      "indent": 3,
      "text": "To validate a DNS challenge, the server performs the following steps:",
      "ja": "DNSの課題を検証するには、サーバーは、次の手順を実行します。"
    },
    {
      "indent": 3,
      "text": "1. Compute the SHA-256 digest [FIPS180-4] of the stored key authorization",
      "ja": "1.計算SHA-256ダイジェスト[FIPS180-4]格納された鍵認可"
    },
    {
      "indent": 3,
      "text": "2. Query for TXT records for the validation domain name",
      "section_title": true,
      "ja": "検証ドメイン名のTXTレコード2.クエリ"
    },
    {
      "indent": 3,
      "text": "3. Verify that the contents of one of the TXT records match the digest value",
      "ja": "3. TXTレコードの1の内容がダイジェスト値と一致することを確認します"
    },
    {
      "indent": 3,
      "text": "If all of the above verifications succeed, then the validation is successful. If no DNS record is found, or DNS record and response payload do not pass these checks, then the validation fails.",
      "ja": "上記の検証がすべて成功した場合は、検証が成功しています。何のDNSレコードが見つからない、またはDNSレコードと応答ペイロードがこれらのチェックに合格しない場合、検証は失敗します。"
    },
    {
      "indent": 3,
      "text": "The client SHOULD de-provision the resource record(s) provisioned for this challenge once the challenge is complete, i.e., once the \"status\" field of the challenge has the value \"valid\" or \"invalid\".",
      "ja": "クライアントは、解除条項べきで挑戦一度この挑戦のためにプロビジョニングされたリソースレコード（s）が完了すると、すなわち、挑戦の「状態」フィールドが値を持っていたら、「有効」または「無効」。"
    },
    {
      "indent": 0,
      "text": "9. IANA Considerations",
      "section_title": true,
      "ja": "9. IANAの考慮事項"
    },
    {
      "indent": 0,
      "text": "9.1. Media Type: application/pem-certificate-chain",
      "section_title": true,
      "ja": "9.1. メディアタイプ：アプリケーション/ PEM-証明書チェーン"
    },
    {
      "indent": 3,
      "text": "A file of this type contains one or more certificates encoded with the PEM textual encoding, according to [RFC7468]. The textual encoding of certificates in this file MUST use the strict encoding and MUST NOT include explanatory text. The ABNF for this format is as follows, where \"stricttextualmsg\" and \"eol\" are as defined in Section 3 of RFC 7468:",
      "ja": "このタイプのファイルは、[RFC7468]によれば、PEMのテキストエンコーディングでエンコードされた1つ以上の証明書を含んでいます。このファイル内の証明書のテキストエンコーディングは、厳格なエンコーディングを使用しなければならないと説明文を含めることはできません。この形式のABNFは、RFC 7468のセクション3で定義される通りである場合、「stricttextualmsg」および「EOL」、以下の通りであります："
    },
    {
      "indent": 3,
      "text": "certchain = stricttextualmsg *(eol stricttextualmsg)",
      "ja": "certchainを= stricttextualmsg *（EOLのstricttextualmsg）"
    },
    {
      "indent": 3,
      "text": "In order to provide easy interoperation with TLS, the first certificate MUST be an end-entity certificate. Each following certificate SHOULD directly certify the one preceding it. Because certificate validation requires that trust anchors be distributed independently, a certificate that represents a trust anchor MAY be omitted from the chain, provided that supported peers are known to possess any omitted certificates.",
      "ja": "TLSで簡単に相互運用を提供するために、最初の証明書は、エンドエンティティ証明書でなければなりません。それぞれの次の証明書は、直接それに先行するものを公認すべきです。証明書の検証がトラストアンカーは、独立して分散する必要があるため、トラストアンカーを表す証明書がサポートされているピアが任意省略証明書を有することが知られていることを条件として、チェーンから省略されてもよいです。"
    },
    {
      "indent": 3,
      "text": "The following has been registered in the \"Media Types\" registry: Type name: application",
      "ja": "型名：アプリケーション以下は、「メディアの種類」レジストリに登録されています"
    },
    {
      "indent": 3,
      "text": "Subtype name: pem-certificate-chain",
      "ja": "サブタイプ名：PEM証明書チェーン"
    },
    {
      "indent": 3,
      "text": "Required parameters: None",
      "ja": "必須パラメータ：なし"
    },
    {
      "indent": 3,
      "text": "Optional parameters: None",
      "ja": "オプションのパラメータ：なし"
    },
    {
      "indent": 3,
      "text": "Encoding considerations: 7bit",
      "ja": "エンコードの考慮事項：7ビット"
    },
    {
      "indent": 3,
      "text": "Security considerations: Carries a cryptographic certificate and its associated certificate chain. This media type carries no active content.",
      "ja": "セキュリティの考慮事項：暗号化証明書とそれに関連する証明書チェーンを運びます。このメディアタイプは、アクティブなコンテンツを運びません。"
    },
    {
      "indent": 3,
      "text": "Interoperability considerations: None",
      "ja": "相互運用性に関する注意事項：なし"
    },
    {
      "indent": 3,
      "text": "Published specification: RFC 8555",
      "ja": "公開された仕様：RFC 8555"
    },
    {
      "indent": 3,
      "text": "Applications that use this media type: ACME clients and servers, HTTP servers, other applications that need to be configured with a certificate chain",
      "ja": "このメディアタイプを使用するアプリケーション：ACMEクライアントとサーバ、HTTPサーバ、証明書チェーンを使用して設定する必要がある他のアプリケーション"
    },
    {
      "indent": 3,
      "text": "Additional information:",
      "ja": "追加情報："
    },
    {
      "indent": 6,
      "text": "Deprecated alias names for this type: n/a Magic number(s): n/a",
      "ja": "このタイプの非推奨別名：N /マジックナンバー（S）：N / A"
    },
    {
      "indent": 6,
      "text": "File extension(s): .pem Macintosh file type code(s): n/a",
      "ja": "ファイルの拡張子（S）：.PEM Macintoshのファイルタイプコード（S）：N / A"
    },
    {
      "indent": 3,
      "text": "Person & email address to contact for further information: See Authors' Addresses section.",
      "ja": "人とEメールアドレスは、詳細のために連絡する：著者のアドレスセクションを参照してください。"
    },
    {
      "indent": 3,
      "text": "Intended usage: COMMON",
      "ja": "意図している用法：COMMON"
    },
    {
      "indent": 3,
      "text": "Restrictions on usage: n/a",
      "ja": "使用に関する制限事項：N / A"
    },
    {
      "indent": 3,
      "text": "Author: See Authors' Addresses section.",
      "ja": "著者：著者のアドレスセクションを参照してください。"
    },
    {
      "indent": 3,
      "text": "Change controller: IETF <iesg@ietf.org>",
      "ja": "変更コントローラ：IETF <iesg@ietf.org>"
    },
    {
      "indent": 0,
      "text": "9.2. Well-Known URI for the HTTP Challenge",
      "section_title": true,
      "ja": "9.2.  HTTPチャレンジのための周知のURI"
    },
    {
      "indent": 3,
      "text": "The following value has been registered in the \"Well-Known URIs\" registry (using the template from [RFC5785]):",
      "ja": "次の値は、（[RFC5785]からテンプレートを使用して）「既知のURI」レジストリに登録されています。"
    },
    {
      "indent": 3,
      "text": "URI suffix: acme-challenge",
      "ja": "URIサフィックス：ACMEチャレンジ"
    },
    {
      "indent": 3,
      "text": "Change controller: IETF",
      "ja": "変更コントローラ：IETF"
    },
    {
      "indent": 3,
      "text": "Specification document(s): RFC 8555, Section 8.3",
      "ja": "仕様書（S）：RFC 8555、セクション8.3"
    },
    {
      "indent": 3,
      "text": "Related information: N/A",
      "ja": "関連情報：N / A"
    },
    {
      "indent": 0,
      "text": "9.3. Replay-Nonce HTTP Header",
      "section_title": true,
      "ja": "9.3. リプレイ・ナンスHTTPヘッダー"
    },
    {
      "indent": 3,
      "text": "The following value has been registered in the \"Message Headers\" registry:",
      "ja": "次の値は、「メッセージヘッダ」レジストリに登録されています。"
    },
    {
      "indent": 3,
      "text": "+-------------------+----------+----------+-------------------------+\n| Header Field Name | Protocol | Status   | Reference               |\n+-------------------+----------+----------+-------------------------+\n| Replay-Nonce      | http     | standard | RFC 8555, Section 6.5.1 |\n+-------------------+----------+----------+-------------------------+",
      "raw": true
    },
    {
      "indent": 0,
      "text": "9.4. \"url\" JWS Header Parameter",
      "section_title": true,
      "ja": "9.4.  JWSヘッダーパラメータを「URL」"
    },
    {
      "indent": 3,
      "text": "The following value has been registered in the \"JSON Web Signature and Encryption Header Parameters\" registry:",
      "ja": "次の値は、「JSONのWeb署名と暗号化ヘッダパラメータ」レジストリに登録されています。"
    },
    {
      "indent": 3,
      "text": "o Header Parameter Name: \"url\"",
      "ja": "Oヘッダパラメータ名：「U​​RL」"
    },
    {
      "indent": 3,
      "text": "o Header Parameter Description: URL",
      "ja": "Oヘッダパラメータ説明：URL"
    },
    {
      "indent": 3,
      "text": "o Header Parameter Usage Location(s): JWE, JWS",
      "ja": "Oヘッダパラメータ使用場所（複数可）：JWE、JWS"
    },
    {
      "indent": 3,
      "text": "o Change Controller: IESG",
      "ja": "Oの変更コントローラ：IESG"
    },
    {
      "indent": 3,
      "text": "o Specification Document(s): RFC 8555, Section 6.4.1",
      "ja": "O仕様書（S）：RFC 8555、セクション6.4.1"
    },
    {
      "indent": 0,
      "text": "9.5. \"nonce\" JWS Header Parameter",
      "section_title": true,
      "ja": "9.5.  「ナンス」JWSヘッダパラメータ"
    },
    {
      "indent": 3,
      "text": "The following value has been registered in the \"JSON Web Signature and Encryption Header Parameters\" registry:",
      "ja": "次の値は、「JSONのWeb署名と暗号化ヘッダパラメータ」レジストリに登録されています。"
    },
    {
      "indent": 3,
      "text": "o Header Parameter Name: \"nonce\"",
      "ja": "Oヘッダパラメータ名：「ナンス」"
    },
    {
      "indent": 3,
      "text": "o Header Parameter Description: Nonce",
      "ja": "ヘッダーパラメータ説明O：ナンス"
    },
    {
      "indent": 3,
      "text": "o Header Parameter Usage Location(s): JWE, JWS",
      "ja": "Oヘッダパラメータ使用場所（複数可）：JWE、JWS"
    },
    {
      "indent": 3,
      "text": "o Change Controller: IESG",
      "ja": "Oの変更コントローラ：IESG"
    },
    {
      "indent": 3,
      "text": "o Specification Document(s): RFC 8555, Section 6.5.2",
      "ja": "O仕様書（S）：RFC 8555、セクション6.5.2"
    },
    {
      "indent": 0,
      "text": "9.6. URN Sub-namespace for ACME (urn:ietf:params:acme)",
      "section_title": true,
      "ja": "9.6.  ACMEのためのURNサブ名前空間（URN：IETF：のparams：ACME）"
    },
    {
      "indent": 3,
      "text": "The following value has been registered in the \"IETF URN Sub-namespace for Registered Protocol Parameter Identifiers\" registry, following the template in [RFC3553]:",
      "ja": "次の値は、[RFC3553]でテンプレート以下、レジストリ「登録プロトコルパラメータ識別子のためのIETF URNサブ名前空間」に登録されています："
    },
    {
      "indent": 3,
      "text": "Registry name: acme",
      "ja": "レジストリ名：ACME"
    },
    {
      "indent": 3,
      "text": "Specification: RFC 8555",
      "ja": "仕様：RFC 8555"
    },
    {
      "indent": 3,
      "text": "Repository: http://www.iana.org/assignments/acme",
      "ja": "リポジトリ：http://www.iana.org/assignments/acme"
    },
    {
      "indent": 3,
      "text": "Index value: No transformation needed.",
      "ja": "インデックス値：なし変換は必要ありません。"
    },
    {
      "indent": 0,
      "text": "9.7. New Registries",
      "section_title": true,
      "ja": "9.7. 新しいレジストリ"
    },
    {
      "indent": 3,
      "text": "IANA has created the following registries:",
      "ja": "IANAは、以下のレジストリを作成しました："
    },
    {
      "indent": 3,
      "text": "1. ACME Account Object Fields (Section 9.7.1)",
      "section_title": true,
      "ja": "1. ACMEアカウントオブジェクトのフィールド（9.7.1項）"
    },
    {
      "indent": 3,
      "text": "2. ACME Order Object Fields (Section 9.7.2)",
      "section_title": true,
      "ja": "2. ACME Orderオブジェクトフィールド（セクション9.7.2）"
    },
    {
      "indent": 3,
      "text": "3. ACME Authorization Object Fields (Section 9.7.3)",
      "section_title": true,
      "ja": "3. ACME権限オブジェクトフィールド（セクション9.7.3）"
    },
    {
      "indent": 3,
      "text": "4. ACME Error Types (Section 9.7.4)",
      "section_title": true,
      "ja": "4. ACMEエラータイプ（セクション9.7.4）"
    },
    {
      "indent": 3,
      "text": "5. ACME Resource Types (Section 9.7.5)",
      "section_title": true,
      "ja": "5. ACMEリソース型（セクション9.7.5）"
    },
    {
      "indent": 3,
      "text": "6. ACME Directory Metadata Fields (Section 9.7.6)",
      "section_title": true,
      "ja": "6. ACMEディレクトリのメタデータフィールド（セクション9.7.6）"
    },
    {
      "indent": 3,
      "text": "7. ACME Identifier Types (Section 9.7.7)",
      "section_title": true,
      "ja": "7. ACME識別子タイプ（セクション9.7.7）"
    },
    {
      "indent": 3,
      "text": "8. ACME Validation Methods (Section 9.7.8)",
      "section_title": true,
      "ja": "8. ACMEの検証方法（セクション9.7.8）"
    },
    {
      "indent": 3,
      "text": "All of these registries are under a heading of \"Automated Certificate Management Environment (ACME) Protocol\" and are administered under a Specification Required policy [RFC8126].",
      "ja": "これらのレジストリのすべては、「自動証明書の管理環境（ACME）議定書」の見出しの下にあり、仕様が必要方針[RFC8126]の下で投与されます。"
    },
    {
      "indent": 0,
      "text": "9.7.1. Fields in Account Objects",
      "section_title": true,
      "ja": "9.7.1. アカウントオブジェクトのフィールド"
    },
    {
      "indent": 3,
      "text": "The \"ACME Account Object Fields\" registry lists field names that are defined for use in ACME account objects. Fields marked as \"configurable\" may be included in a newAccount request.",
      "ja": "ACMEアカウントオブジェクトでの使用のために定義されている「ACMEアカウントオブジェクトのフィールド」レジストリリストのフィールド名。 「設定可能な」newAccount要求に含まれるようフィールドがマークさ。"
    },
    {
      "indent": 3,
      "text": "Template:",
      "ja": "テンプレート："
    },
    {
      "indent": 3,
      "text": "o Field name: The string to be used as a field name in the JSON object",
      "ja": "Oフィールド名：JSONオブジェクトのフィールド名として使用される文字列"
    },
    {
      "indent": 3,
      "text": "o Field type: The type of value to be provided, e.g., string, boolean, array of string",
      "ja": "Oフィールドタイプ：提供される値のタイプ、例えば、文字列、ブール、文字列の配列"
    },
    {
      "indent": 3,
      "text": "o Requests: Either the value \"none\" or a list of types of requests where the field is allowed in a request object, taken from the following values:",
      "ja": "O要求：いずれかの値が「なし」か、以下の値から取られたフィールドは、リクエストオブジェクトに許可されている要求の種類のリスト："
    },
    {
      "indent": 6,
      "text": "* \"new\" - Requests to the \"newAccount\" URL",
      "ja": "*「新規」 - 「newAccount」URLへのリクエスト"
    },
    {
      "indent": 6,
      "text": "* \"account\" - Requests to an account URL",
      "ja": "*「アカウント」 - アカウントのURLへのリクエスト"
    },
    {
      "indent": 3,
      "text": "o Reference: Where this field is defined",
      "ja": "O参考：このフィールドが定義されています"
    },
    {
      "indent": 3,
      "text": "Initial contents: The fields and descriptions defined in Section 7.1.2.",
      "ja": "初期内容：7.1.2項で定義されたフィールドと説明。"
    },
    {
      "indent": 3,
      "text": "+------------------------+---------------+--------------+-----------+\n| Field Name             | Field Type    | Requests     | Reference |\n+------------------------+---------------+--------------+-----------+\n| status                 | string        | new, account | RFC 8555  |\n|                        |               |              |           |\n| contact                | array of      | new, account | RFC 8555  |\n|                        | string        |              |           |\n|                        |               |              |           |\n| externalAccountBinding | object        | new          | RFC 8555  |\n|                        |               |              |           |\n| termsOfServiceAgreed   | boolean       | new          | RFC 8555  |\n|                        |               |              |           |\n| onlyReturnExisting     | boolean       | new          | RFC 8555  |\n|                        |               |              |           |\n| orders                 | string        | none         | RFC 8555  |\n+------------------------+---------------+--------------+-----------+",
      "raw": true
    },
    {
      "indent": 0,
      "text": "9.7.2. Fields in Order Objects",
      "section_title": true,
      "ja": "9.7.2.  Orderオブジェクトのフィールド"
    },
    {
      "indent": 3,
      "text": "The \"ACME Order Object Fields\" registry lists field names that are defined for use in ACME order objects. Fields marked as \"configurable\" may be included in a newOrder request.",
      "ja": "「ACME Orderオブジェクトフィールド」ACME順オブジェクトでの使用のために定義されているレジストリリストのフィールド名。 「設定可能」としてマークされたフィールドはnewOrder要求に含まれていてもよいです。"
    },
    {
      "indent": 3,
      "text": "Template:",
      "ja": "テンプレート："
    },
    {
      "indent": 3,
      "text": "o Field name: The string to be used as a field name in the JSON object",
      "ja": "Oフィールド名：JSONオブジェクトのフィールド名として使用される文字列"
    },
    {
      "indent": 3,
      "text": "o Field type: The type of value to be provided, e.g., string, boolean, array of string",
      "ja": "Oフィールドタイプ：提供される値のタイプ、例えば、文字列、ブール、文字列の配列"
    },
    {
      "indent": 3,
      "text": "o Configurable: Boolean indicating whether the server should accept values provided by the client",
      "ja": "設定可能○：ブールサーバは、クライアントが提供する値を受け入れるかどうかを示します"
    },
    {
      "indent": 3,
      "text": "o Reference: Where this field is defined",
      "ja": "O参考：このフィールドが定義されています"
    },
    {
      "indent": 3,
      "text": "Initial contents: The fields and descriptions defined in Section 7.1.3.",
      "ja": "初期内容：7.1.3項で定義されたフィールドと説明。"
    },
    {
      "indent": 6,
      "text": "+----------------+-----------------+--------------+-----------+\n| Field Name     | Field Type      | Configurable | Reference |\n+----------------+-----------------+--------------+-----------+\n| status         | string          | false        | RFC 8555  |\n|                |                 |              |           |\n| expires        | string          | false        | RFC 8555  |\n|                |                 |              |           |\n| identifiers    | array of object | true         | RFC 8555  |\n|                |                 |              |           |\n| notBefore      | string          | true         | RFC 8555  |\n|                |                 |              |           |\n| notAfter       | string          | true         | RFC 8555  |\n|                |                 |              |           |\n| error          | string          | false        | RFC 8555  |\n|                |                 |              |           |\n| authorizations | array of string | false        | RFC 8555  |\n|                |                 |              |           |\n| finalize       | string          | false        | RFC 8555  |\n|                |                 |              |           |\n| certificate    | string          | false        | RFC 8555  |\n+----------------+-----------------+--------------+-----------+",
      "raw": true
    },
    {
      "indent": 0,
      "text": "9.7.3. Fields in Authorization Objects",
      "section_title": true,
      "ja": "9.7.3. 権限オブジェクトのフィールド"
    },
    {
      "indent": 3,
      "text": "The \"ACME Authorization Object Fields\" registry lists field names that are defined for use in ACME authorization objects. Fields marked as \"configurable\" may be included in a newAuthz request.",
      "ja": "「ACME権限オブジェクトフィールド」ACMEの権限オブジェクトでの使用のために定義されているレジストリリストのフィールド名。 「設定可能」としてマークされたフィールドはnewAuthz要求に含まれていてもよいです。"
    },
    {
      "indent": 3,
      "text": "Template:",
      "ja": "テンプレート："
    },
    {
      "indent": 3,
      "text": "o Field name: The string to be used as a field name in the JSON object",
      "ja": "Oフィールド名：JSONオブジェクトのフィールド名として使用される文字列"
    },
    {
      "indent": 3,
      "text": "o Field type: The type of value to be provided, e.g., string, boolean, array of string",
      "ja": "Oフィールドタイプ：提供される値のタイプ、例えば、文字列、ブール、文字列の配列"
    },
    {
      "indent": 3,
      "text": "o Configurable: Boolean indicating whether the server should accept values provided by the client",
      "ja": "設定可能○：ブールサーバは、クライアントが提供する値を受け入れるかどうかを示します"
    },
    {
      "indent": 3,
      "text": "o Reference: Where this field is defined",
      "ja": "O参考：このフィールドが定義されています"
    },
    {
      "indent": 3,
      "text": "Initial contents: The fields and descriptions defined in Section 7.1.4.",
      "ja": "初期内容：7.1.4項で定義されたフィールドと説明。"
    },
    {
      "indent": 8,
      "text": "+------------+-----------------+--------------+-----------+\n| Field Name | Field Type      | Configurable | Reference |\n+------------+-----------------+--------------+-----------+\n| identifier | object          | true         | RFC 8555  |\n|            |                 |              |           |\n| status     | string          | false        | RFC 8555  |\n|            |                 |              |           |\n| expires    | string          | false        | RFC 8555  |\n|            |                 |              |           |\n| challenges | array of object | false        | RFC 8555  |\n|            |                 |              |           |\n| wildcard   | boolean         | false        | RFC 8555  |\n+------------+-----------------+--------------+-----------+",
      "raw": true
    },
    {
      "indent": 0,
      "text": "9.7.4. Error Types",
      "section_title": true,
      "ja": "9.7.4. エラーの種類"
    },
    {
      "indent": 3,
      "text": "The \"ACME Error Types\" registry lists values that are used within URN values that are provided in the \"type\" field of problem documents in ACME.",
      "ja": "「ACMEエラータイプ」レジストリは、ACMEで問題の文書の「タイプ」フィールドで提供されているURN値内で使用されている値を示します。"
    },
    {
      "indent": 3,
      "text": "Template:",
      "ja": "テンプレート："
    },
    {
      "indent": 3,
      "text": "o Type: The label to be included in the URN for this error, following \"urn:ietf:params:acme:error:\"",
      "ja": "Oタイプ：ラベルは、以下の、このエラーのURNに含まれる「：IETF：のparams：ACME：エラー：URN」"
    },
    {
      "indent": 3,
      "text": "o Description: A human-readable description of the error",
      "ja": "O説明：エラーの人間が読める記述"
    },
    {
      "indent": 3,
      "text": "o Reference: Where the error is defined",
      "ja": "Oリファレンス：エラーが定義されています"
    },
    {
      "indent": 3,
      "text": "Initial contents: The types and descriptions in the table in Section 6.7 above, with the Reference field set to point to this specification.",
      "ja": "初期内容：この仕様を指すように設定された基準フィールドと上記6.7節の表では種類と説明、。"
    },
    {
      "indent": 0,
      "text": "9.7.5. Resource Types",
      "section_title": true,
      "ja": "9.7.5. リソース型"
    },
    {
      "indent": 3,
      "text": "The \"ACME Resource Types\" registry lists the types of resources that ACME servers may list in their directory objects.",
      "ja": "「ACMEリソース型」レジストリは、ACMEサーバがそのディレクトリオブジェクトに表示されることがあり、リソースの種類を示しています。"
    },
    {
      "indent": 3,
      "text": "Template:",
      "ja": "テンプレート："
    },
    {
      "indent": 3,
      "text": "o Field name: The value to be used as a field name in the directory object",
      "ja": "Oフィールド名：ディレクトリ・オブジェクトのフィールド名として使用される値"
    },
    {
      "indent": 3,
      "text": "o Resource type: The type of resource labeled by the field o Reference: Where the resource type is defined",
      "ja": "Oリソースの種類：フィールドOリファレンスでラベルされたリソースのタイプ：リソースタイプが定義されています"
    },
    {
      "indent": 3,
      "text": "Initial contents:",
      "ja": "初期内容："
    },
    {
      "indent": 14,
      "text": "+------------+--------------------+-----------+\n| Field Name | Resource Type      | Reference |\n+------------+--------------------+-----------+\n| newNonce   | New nonce          | RFC 8555  |\n|            |                    |           |\n| newAccount | New account        | RFC 8555  |\n|            |                    |           |\n| newOrder   | New order          | RFC 8555  |\n|            |                    |           |\n| newAuthz   | New authorization  | RFC 8555  |\n|            |                    |           |\n| revokeCert | Revoke certificate | RFC 8555  |\n|            |                    |           |\n| keyChange  | Key change         | RFC 8555  |\n|            |                    |           |\n| meta       | Metadata object    | RFC 8555  |\n+------------+--------------------+-----------+",
      "raw": true
    },
    {
      "indent": 0,
      "text": "9.7.6. Fields in the \"meta\" Object within a Directory Object",
      "section_title": true,
      "ja": "9.7.6. ディレクトリオブジェクト内の「メタ」オブジェクトのフィールド"
    },
    {
      "indent": 3,
      "text": "The \"ACME Directory Metadata Fields\" registry lists field names that are defined for use in the JSON object included in the \"meta\" field of an ACME directory object.",
      "ja": "ACMEのディレクトリオブジェクトの「メタ」フィールドに含まJSONオブジェクトでの使用のために定義されている「ACME Directoryのメタデータ・フィールド」レジストリリストのフィールド名。"
    },
    {
      "indent": 3,
      "text": "Template:",
      "ja": "テンプレート："
    },
    {
      "indent": 3,
      "text": "o Field name: The string to be used as a field name in the JSON object",
      "ja": "Oフィールド名：JSONオブジェクトのフィールド名として使用される文字列"
    },
    {
      "indent": 3,
      "text": "o Field type: The type of value to be provided, e.g., string, boolean, array of string",
      "ja": "Oフィールドタイプ：提供される値のタイプ、例えば、文字列、ブール、文字列の配列"
    },
    {
      "indent": 3,
      "text": "o Reference: Where this field is defined",
      "ja": "O参考：このフィールドが定義されています"
    },
    {
      "indent": 3,
      "text": "Initial contents: The fields and descriptions defined in Section 7.1.1.",
      "ja": "初期内容：7.1.1項で定義されたフィールドと説明。"
    },
    {
      "indent": 9,
      "text": "+-------------------------+-----------------+-----------+\n| Field Name              | Field Type      | Reference |\n+-------------------------+-----------------+-----------+\n| termsOfService          | string          | RFC 8555  |\n|                         |                 |           |\n| website                 | string          | RFC 8555  |\n|                         |                 |           |\n| caaIdentities           | array of string | RFC 8555  |\n|                         |                 |           |\n| externalAccountRequired | boolean         | RFC 8555  |\n+-------------------------+-----------------+-----------+",
      "raw": true
    },
    {
      "indent": 0,
      "text": "9.7.7. Identifier Types",
      "section_title": true,
      "ja": "9.7.7. タイプを識別"
    },
    {
      "indent": 3,
      "text": "The \"ACME Identifier Types\" registry lists the types of identifiers that can be present in ACME authorization objects.",
      "ja": "「ACME識別子タイプ」のレジストリは、ACMEの権限オブジェクトに存在することができる識別子のタイプを示します。"
    },
    {
      "indent": 3,
      "text": "Template:",
      "ja": "テンプレート："
    },
    {
      "indent": 3,
      "text": "o Label: The value to be put in the \"type\" field of the identifier object",
      "ja": "Oラベル：識別子オブジェクトの「タイプ」フィールドに置かれるべき値"
    },
    {
      "indent": 3,
      "text": "o Reference: Where the identifier type is defined",
      "ja": "Oリファレンス：識別子タイプが定義されています"
    },
    {
      "indent": 3,
      "text": "Initial contents:",
      "ja": "初期内容："
    },
    {
      "indent": 27,
      "text": "+-------+-----------+\n| Label | Reference |\n+-------+-----------+\n| dns   | RFC 8555  |\n+-------+-----------+",
      "raw": true
    },
    {
      "indent": 0,
      "text": "9.7.8. Validation Methods",
      "section_title": true,
      "ja": "9.7.8. 検証メソッド"
    },
    {
      "indent": 3,
      "text": "The \"ACME Validation Methods\" registry lists identifiers for the ways that CAs can validate control of identifiers. Each method's entry must specify whether it corresponds to an ACME challenge type. The \"Identifier Type\" field must be contained in the Label column of the \"ACME Identifier Types\" registry.",
      "ja": "「ACMEの検証方法」レジストリは、CAが識別子の制御を検証することができる方法の識別子を示しています。各メソッドのエントリは、ACMEチャレンジタイプに対応するかどうかを指定する必要があります。 「識別子タイプ」フィールドが「ACME識別子タイプ」レジストリのラベル列に含まれている必要があります。"
    },
    {
      "indent": 3,
      "text": "Template:",
      "ja": "テンプレート："
    },
    {
      "indent": 3,
      "text": "o Label: The identifier for this validation method",
      "ja": "Oラベル：この検証メソッドの識別子"
    },
    {
      "indent": 3,
      "text": "o Identifier Type: The type of identifier that this method applies to",
      "ja": "O識別子タイプ：この方法を適用する識別子のタイプ"
    },
    {
      "indent": 3,
      "text": "o ACME: \"Y\" if the validation method corresponds to an ACME challenge type; \"N\" otherwise",
      "ja": "O ACME：「Y」の検証方法は、ACMEチャレンジのタイプに対応する場合、そうでない場合は「N」"
    },
    {
      "indent": 3,
      "text": "o Reference: Where the validation method is defined",
      "ja": "Oリファレンス：検証メソッドが定義されています"
    },
    {
      "indent": 3,
      "text": "This registry may also contain reserved entries (e.g., to avoid collisions). Such entries should have the \"ACME\" field set to \"N\" and the \"Identifier Type\" set to \"RESERVED\".",
      "ja": "このレジストリは予約エントリ（例えば、衝突を避けるために）をも含んでよいです。このようなエントリは「N」と「RESERVED」に設定し、「識別子タイプ」を設定「ACME」フィールドを持つ必要があります。"
    },
    {
      "indent": 3,
      "text": "Initial Contents",
      "ja": "初期内容"
    },
    {
      "indent": 12,
      "text": "+------------+-----------------+------+-----------+\n| Label      | Identifier Type | ACME | Reference |\n+------------+-----------------+------+-----------+\n| http-01    | dns             | Y    | RFC 8555  |\n|            |                 |      |           |\n| dns-01     | dns             | Y    | RFC 8555  |\n|            |                 |      |           |\n| tls-sni-01 | RESERVED        | N    | RFC 8555  |\n|            |                 |      |           |\n| tls-sni-02 | RESERVED        | N    | RFC 8555  |\n+------------+-----------------+------+-----------+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "When evaluating a request for an assignment in this registry, the designated expert should ensure that the method being registered has a clear, interoperable definition and does not overlap with existing validation methods. That is, it should not be possible for a client and server to follow the same set of actions to fulfill two different validation methods.",
      "ja": "このレジストリ内の割り当ての要求を評価する場合は、指定された専門家は、登録されている方法が明確で、相互運用可能な定義を持っており、既存の検証メソッドと重複しないようにする必要があります。つまり、2つの異なる検証メソッドを満たすための行動の同じセットを追跡するために、クライアントとサーバーのために可能にすべきではない、です。"
    },
    {
      "indent": 3,
      "text": "The values \"tls-sni-01\" and \"tls-sni-02\" are reserved because they were used in pre-RFC versions of this specification to denote validation methods that were removed because they were found not to be secure in some cases.",
      "ja": "それらは、それらがいくつかのケースでは安全でないことがわかったため、除去された検証方法を示すために本明細書の前RFCバージョンで使用されたので、値「TLS-SNI-01」および「TLS-SNI-02」が予約されています。"
    },
    {
      "indent": 3,
      "text": "Validation methods do not have to be compatible with ACME in order to be registered. For example, a CA might wish to register a validation method to support its use with the ACME extensions to CAA [ACME-CAA].",
      "ja": "検証方法は、登録するために、ACMEと互換性がある必要はありません。例えば、CAは、CAA [ACME-CAA]にACMEの拡張子を持つその使用をサポートするために、検証メソッドを登録したい場合があります。"
    },
    {
      "indent": 0,
      "text": "10. Security Considerations",
      "section_title": true,
      "ja": "10.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "ACME is a protocol for managing certificates that attest to identifier/key bindings. Thus, the foremost security goal of ACME is to ensure the integrity of this process, i.e., to ensure that the bindings attested by certificates are correct and that only authorized entities can manage certificates. ACME identifies clients by their account keys, so this overall goal breaks down into two more precise goals:",
      "ja": "ACMEは、/キーバインディングを識別子に証明する証明書を管理するためのプロトコルです。このように、ACMEの一番のセキュリティ目標は、証明書によって証明バインディングが正しいことのみ許可エンティティが証明書を管理できることを保証するために、このプロセス、すなわちの整合性を確保することです。 ACMEは、自分のアカウントキーによってクライアントを識別するので、この全体的な目標は、2つのより正確な目標に分解します："
    },
    {
      "indent": 3,
      "text": "1. Only an entity that controls an identifier can get an authorization for that identifier",
      "ja": "1.識別子を制御のみエンティティは、その識別子の許可を得ることができます"
    },
    {
      "indent": 3,
      "text": "2. Once authorized, an account key's authorizations cannot be improperly used by another account",
      "ja": "2.一度アカウントキーの権限が不正に別のアカウントで使用することはできません、認可します"
    },
    {
      "indent": 3,
      "text": "In this section, we discuss the threat model that underlies ACME and the ways that ACME achieves these security goals within that threat model. We also discuss the denial-of-service risks that ACME servers face, and a few other miscellaneous considerations.",
      "ja": "このセクションでは、ACMEとACMEは、その脅威モデル内でこれらのセキュリティ目標を実現方法の基礎となる脅威モデルを議論します。また、ACMEサーバが直面するサービス拒否のリスク、およびその他のいくつかの雑多な考慮事項について説明します。"
    },
    {
      "indent": 0,
      "text": "10.1. Threat Model",
      "section_title": true,
      "ja": "10.1. 脅威モデル"
    },
    {
      "indent": 3,
      "text": "As a service on the Internet, ACME broadly exists within the Internet threat model [RFC3552]. In analyzing ACME, it is useful to think of an ACME server interacting with other Internet hosts along two \"channels\":",
      "ja": "インターネット上のサービスとして、ACMEは、広くインターネットの脅威モデル[RFC3552]内に存在します。 ACMEの分析では、二つの「チャンネル」に沿って、他のインターネットホストとの対話ACMEサーバと考えると便利です。"
    },
    {
      "indent": 3,
      "text": "o An ACME channel, over which the ACME HTTPS requests are exchanged",
      "ja": "ACME HTTPS要求が交換され、その上O ACMEチャンネル、"
    },
    {
      "indent": 3,
      "text": "o A validation channel, over which the ACME server performs additional requests to validate a client's control of an identifier",
      "ja": "ACMEサーバは識別子のクライアントの制御を検証する追加の要求を行う上検証チャンネル、O"
    },
    {
      "indent": 3,
      "text": "+------------+\n|    ACME    |     ACME Channel\n|   Client   |--------------------+\n+------------+                    |\n                                  V\n                            +------------+\n                            |    ACME    |\n                            |   Server   |\n                            +------------+\n+------------+                    |\n| Validation |<-------------------+\n|   Server   |  Validation Channel\n+------------+",
      "raw": true
    },
    {
      "indent": 19,
      "text": "Communications Channels Used by ACME",
      "ja": "ACMEが使用する通信チャンネル"
    },
    {
      "indent": 3,
      "text": "In practice, the risks to these channels are not entirely separate, but they are different in most cases. Each channel, for example, uses a different communications pattern: the ACME channel will comprise inbound HTTPS connections to the ACME server and the validation channel outbound HTTP or DNS requests.",
      "ja": "実際には、これらのチャネルへのリスクは完全に分離はありませんが、ほとんどのケースで異なっています。各チャネルは、例えば、異なる通信パターンを使用する：ACMEチャネルがACMEサーバと検証チャネルアウトバウンドHTTPまたはDNSリクエストへのインバウンドHTTPS接続を含むであろう。"
    },
    {
      "indent": 3,
      "text": "Broadly speaking, ACME aims to be secure against active and passive attackers on any individual channel. Some vulnerabilities arise (noted below) when an attacker can exploit both the ACME channel and one of the others.",
      "ja": "大まかに言えば、ACMEは、個々のチャネル上のアクティブおよびパッシブ攻撃に対して安全であることを目指しています。攻撃者がACMEチャネル及び他の双方を利用することができる場合、いくつかの脆弱性は、（以下に記載）が生じます。"
    },
    {
      "indent": 3,
      "text": "On the ACME channel, in addition to network-layer attackers, we also need to account for man-in-the-middle (MitM) attacks at the application layer and for abusive use of the protocol itself. Protection against application-layer MitM addresses potential attackers such as Content Distribution Networks (CDNs) and middleboxes with a TLS MitM function. Preventing abusive use of ACME means ensuring that an attacker with access to the validation channel can't obtain illegitimate authorization by acting as an ACME client (legitimately, in terms of the protocol).",
      "ja": "ACMEのチャンネルでは、ほかに攻撃者層のネットワークに、我々はまた、アプリケーション層でMITM（中間者）攻撃のために、プロトコル自体の乱用を考慮する必要があります。アプリケーション層のMitMに対する保護は、TLSのMITM機能付きコンテンツ配信ネットワーク（CDNの）とミドルボックスなどの潜在的な攻撃者に対処しています。 ACMEの乱用を防止することは、検証チャネルへのアクセスを持つ攻撃者が（プロトコルの用語で、合法的に）ACMEクライアントとして作用することにより、非嫡出の承認を得ることができないことを確実にすることを意味します。"
    },
    {
      "indent": 3,
      "text": "ACME does not protect against other types of abuse by a MitM on the ACME channel. For example, such an attacker could send a bogus \"badSignatureAlgorithm\" error response to downgrade a client to the lowest-quality signature algorithm that the server supports. A MitM that is present on all connections (such as a CDN) can cause denial-of-service conditions in a variety of ways.",
      "ja": "ACMEは、ACMEチャネル上のMitMによる虐待の他の種類から保護しません。たとえば、このような攻撃者は、サーバーがサポートする最低品質の署名アルゴリズムにクライアントをダウングレードする偽の「badSignatureAlgorithm」エラー応答を送信することができます。 （例えば、CDNなど）すべての接続上に存在するのMitMは、様々な方法でサービス拒否状態を引き起こす可能性があります。"
    },
    {
      "indent": 0,
      "text": "10.2. Integrity of Authorizations",
      "section_title": true,
      "ja": "10.2. 承認の整合性"
    },
    {
      "indent": 3,
      "text": "ACME allows anyone to request challenges for an identifier by registering an account key and sending a newOrder request using that account key. The integrity of the authorization process thus depends on the identifier validation challenges to ensure that the challenge can only be completed by someone who both (1) holds the private key of the account key pair and (2) controls the identifier in question.",
      "ja": "ACMEは、誰でもアカウントキーを登録すると、そのアカウントのキーを使用してnewOrderリクエストを送信することにより、識別子の課題を要求することができます。承認プロセスの整合性は、このような課題のみ（1）アカウントの鍵ペアの秘密鍵を保持し、（2）問題の識別子を制御し、両方の誰か完成させることができることを確実にするために、識別子の検証課題に依存します。"
    },
    {
      "indent": 3,
      "text": "Validation responses need to be bound to an account key pair in order to avoid situations where a MitM on ACME HTTPS requests can switch out a legitimate domain holder's account key for one of his choosing. Such MitMs can arise, for example, if a CA uses a CDN or third-party reverse proxy in front of its ACME interface. An attack by such an MitM could have the following form:",
      "ja": "検証応答がのMitM ACME HTTPS上の要求は、彼が選択したいずれかの正当なドメイン所有者のアカウントキーを切り替えることができ事態を避けるために、アカウントの鍵ペアにバインドする必要があります。 CAは、CDNまたはサードパーティがACMEインターフェイスの前にリバースプロキシ使用する場合、そのようなMitMsは、例えば、生じ得ます。このようなMitMによる攻撃は、次のような形式を持つことができます："
    },
    {
      "indent": 3,
      "text": "1. Legitimate domain holder registers account key pair A",
      "section_title": true,
      "ja": "1.正当なドメイン所有者の登録は、鍵ペアAを占めます"
    },
    {
      "indent": 3,
      "text": "2. MitM registers account key pair B",
      "section_title": true,
      "ja": "2.のMITMレジスタは、鍵ペアのBアカウント"
    },
    {
      "indent": 3,
      "text": "3. Legitimate domain holder sends a newOrder request signed using account key A",
      "ja": "3.正当なドメイン所有者は、アカウントキーのAを使用して署名newOrder要求を送信します"
    },
    {
      "indent": 3,
      "text": "4. MitM suppresses the legitimate request but sends the same request signed using account key B",
      "ja": "4.のMitMが正当な要求を抑制することができるが、同じリクエストがアカウント鍵Bを使用して署名送信"
    },
    {
      "indent": 3,
      "text": "5. ACME server issues challenges and MitM forwards them to the legitimate domain holder",
      "ja": "5. ACMEサーバは、チャレンジを発行し、のMitMは、正当なドメイン所有者に転送します"
    },
    {
      "indent": 3,
      "text": "6. Legitimate domain holder provisions the validation response",
      "section_title": true,
      "ja": "6.正当なドメイン所有者の規定検証応答"
    },
    {
      "indent": 3,
      "text": "7. ACME server performs validation query and sees the response provisioned by the legitimate domain holder",
      "ja": "7. ACMEサーバは検証クエリーを実行し、正当なドメイン所有者によってプロビジョニング応答を見て"
    },
    {
      "indent": 3,
      "text": "8. Because the challenges were issued in response to a message signed with account key B, the ACME server grants authorization to account key B (the MitM) instead of account key A (the legitimate domain holder)",
      "ja": "8.課題ではなく、アカウント鍵A（正規ドメインホルダ）のアカウント鍵Bで署名されたメッセージ、鍵B（のMitM）を考慮するACMEサーバ許可許可に応答して発行されたので"
    },
    {
      "indent": 3,
      "text": "Domain                                         ACME\nHolder                  MitM                  Server\n  |                      |                      |\n  | newAccount(A)        |                      |\n  |--------------------->|--------------------->|\n  |                      |                      |\n  |                      | newAccount(B)        |\n  |                      |--------------------->|\n  | newOrder(domain, A)  |                      |\n  |--------------------->|                      |\n  |                      | newOrder(domain, B)  |\n  |                      |--------------------->|\n  |                      |                      |\n  |   authz, challenges  |   authz, challenges  |\n  |<---------------------|<---------------------|\n  |                      |                      |\n  | response(chall, A)   | response(chall, B)   |\n  |--------------------->|--------------------->|\n  |                      |                      |\n  |  validation request  |                      |\n  |<--------------------------------------------|\n  |                      |                      |\n  | validation response  |                      |\n  |-------------------------------------------->|\n  |                      |                      |\n  |                      |                      | Considers challenge\n  |                      |                      | fulfilled by B\n  |                      |                      |",
      "raw": true
    },
    {
      "indent": 13,
      "text": "Man-in-the-Middle Attack Exploiting a Validation\n       Method without Account Key Binding",
      "raw": true
    },
    {
      "indent": 3,
      "text": "All of the challenges defined in this document have a binding between the account private key and the validation query made by the server, via the key authorization. The key authorization reflects the account public key and is provided to the server in the validation response over the validation channel.",
      "ja": "この文書で定義された課題のすべては、鍵の承認を経て、アカウントの秘密鍵とサーバによって行われた検証クエリー間の結合を持っています。キー承認は、アカウントの公開鍵を反映して検証チャネルを介して検証応じてサーバに提供されます。"
    },
    {
      "indent": 3,
      "text": "The association of challenges to identifiers is typically done by requiring the client to perform some action that only someone who effectively controls the identifier can perform. For the challenges in this document, the actions are as follows:",
      "ja": "識別子への挑戦の関連付けは、一般的に効果的識別子を制御だけで、誰かが実行できるいくつかのアクションを実行するクライアントを必要とすることによって行われます。次のようにこの文書の挑戦のために、アクションは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "o HTTP: Provision files under .well-known on a web server for the domain",
      "ja": "OのHTTP：ドメインの.well知られているWebサーバー上の下プロビジョニングファイル"
    },
    {
      "indent": 3,
      "text": "o DNS: Provision DNS resource records for the domain",
      "ja": "OのDNS：ドメイン引当金DNSリソースレコード"
    },
    {
      "indent": 3,
      "text": "There are several ways that these assumptions can be violated, both by misconfiguration and by attacks. For example, on a web server that allows non-administrative users to write to .well-known, any user can claim to own the web server's hostname by responding to an HTTP challenge. Similarly, if a server that can be used for ACME validation is compromised by a malicious actor, then that malicious actor can use that access to obtain certificates via ACME.",
      "ja": "これらの仮定は、設定ミスによる攻撃の両方によって、違反することができますいくつかの方法があります。たとえば、管理者以外のユーザーが知ら.wellへの書き込みを可能にするWebサーバ上で、すべてのユーザーがHTTPチャレンジに応答することによって、Webサーバーのホスト名を所有していると主張することができます。 ACMEの検証のために使用することができるサーバが悪意のあるアクターによって損なわれている場合、同様に、その悪意のある俳優ACMEを介して証明書を取得するためのアクセスを使用することができます。"
    },
    {
      "indent": 3,
      "text": "The use of hosting providers is a particular risk for ACME validation. If the owner of the domain has outsourced operation of DNS or web services to a hosting provider, there is nothing that can be done against tampering by the hosting provider. As far as the outside world is concerned, the zone or website provided by the hosting provider is the real thing.",
      "ja": "ホスティングプロバイダを使用すると、ACMEの検証のための特定のリスクです。ドメインの所有者は、ホスティングプロバイダにDNSやWebサービスの操作を外部委託している場合は、ホスティングプロバイダによって改ざんを行うことができるものは何もありません。限り外の世界に関しては、ホスティングプロバイダが提供するゾーンまたはウェブサイトが本物です。"
    },
    {
      "indent": 3,
      "text": "More limited forms of delegation can also lead to an unintended party gaining the ability to successfully complete a validation transaction. For example, suppose an ACME server follows HTTP redirects in HTTP validation and a website operator provisions a catch-all redirect rule that redirects requests for unknown resources to a different domain. Then the target of the redirect could use that to get a certificate through HTTP validation since the validation path will not be known to the primary server.",
      "ja": "代表団のより限定された形も成功し、検証トランザクションを完了させる能力を獲得意図しないパーティーにつながることができます。たとえば、ACMEサーバは、HTTPの検証にリダイレクトし、ウェブサイトの運営規定キャッチオールが別のドメインに不明なリソースに対する要求をリダイレクトするルールをHTTPリダイレクトを、以下とします。その後、リダイレクトのターゲットは、検証パスがプライマリサーバに知られることはありませんので、HTTPの検証を通じて証明書を取得することを使用することができます。"
    },
    {
      "indent": 3,
      "text": "The DNS is a common point of vulnerability for all of these challenges. An entity that can provision false DNS records for a domain can attack the DNS challenge directly and can provision false A/AAAA records to direct the ACME server to send its HTTP validation query to a remote server of the attacker's choosing. There are a few different mitigations that ACME servers can apply:",
      "ja": "DNSは、これらの課題のすべてのための脆弱性の共通点です。ドメインの準備偽のDNSレコードは、攻撃者が選択したリモートサーバーへのHTTPの検証クエリーを送信するためにACMEサーバを指示するために、直接DNSの挑戦と缶規定偽A / AAAAレコードを攻撃することができ実体。 ACMEサーバを適用することができますいくつかの異なる緩和策があります。"
    },
    {
      "indent": 3,
      "text": "o Always querying the DNS using a DNSSEC-validating resolver (enhancing security for zones that are DNSSEC-enabled)",
      "ja": "O常に（DNSSECが有効であるゾーンのセキュリティを高める）DNSSEC-検証リゾルバを使用してDNSに問い合わせます"
    },
    {
      "indent": 3,
      "text": "o Querying the DNS from multiple vantage points to address local attackers",
      "ja": "ローカルの攻撃者に対処するために、複数の見晴らしの良いポイントからのDNSの照会O"
    },
    {
      "indent": 3,
      "text": "o Applying mitigations against DNS off-path attackers, e.g., adding entropy to requests [DNS0x20] or only using TCP",
      "ja": "TCPを使用して要求[DNS0x20]のみにエントロピーを追加する、例えば、DNSオフパス攻撃に対して緩和策を適用O"
    },
    {
      "indent": 3,
      "text": "Given these considerations, the ACME validation process makes it impossible for any attacker on the ACME channel or a passive attacker on the validation channel to hijack the authorization process to authorize a key of the attacker's choice.",
      "ja": "これらの考察を考えると、ACME検証プロセスは、攻撃者が選択の鍵を認証するための認証プロセスをハイジャックし、検証チャネル上ACMEチャネル上の任意の攻撃や受動的攻撃者のためにそれを不可能にします。"
    },
    {
      "indent": 3,
      "text": "An attacker that can only see the ACME channel would need to convince the validation server to provide a response that would authorize the attacker's account key, but this is prevented by binding the validation response to the account key used to request challenges. A passive attacker on the validation channel can observe the correct validation response and even replay it, but that response can only be used with the account key for which it was generated.",
      "ja": "のみACMEチャンネルを見ることができる攻撃者は、攻撃者のアカウントキーを承認うな応答を提供するために、検証サーバを説得する必要があるでしょうが、これは難題を要求するために使用したアカウントキーに検証応答を結合することによって阻止されます。検証チャンネル上の受動的攻撃者が正しい確認応答を観察しても、それを再生しますが、そのレスポンスは、それが生成されたアカウントキーで使用することができます。"
    },
    {
      "indent": 3,
      "text": "An active attacker on the validation channel can subvert the ACME process, by performing normal ACME transactions and providing a validation response for his own account key. The risks due to hosting providers noted above are a particular case.",
      "ja": "検証チャネル上のアクティブな攻撃者は、通常のACMEのトランザクションを実行し、自分のアカウントキーの検証応答を提供することで、ACMEプロセスを覆すことができます。原因上記のホスティングプロバイダへのリスクは、特定のケースです。"
    },
    {
      "indent": 3,
      "text": "Attackers can also exploit vulnerabilities in Internet routing protocols to gain access to the validation channel (see, e.g., [RFC7132]). In order to make such attacks more difficult, it is RECOMMENDED that the server perform DNS queries and make HTTP connections from multiple points in the network. Since routing attacks are often localized or dependent on the position of the attacker, forcing the attacker to attack multiple points (the server's validation vantage points) or a specific point (the DNS / HTTP server) makes it more difficult to subvert ACME validation using attacks on routing.",
      "ja": "攻撃者はまた、検証チャネルへのアクセスを得るために、インターネットルーティングプロトコルの脆弱性を利用することができる（参照、例えば、[RFC7132]）。このような攻撃をより困難にするためには、サーバがDNSクエリを実行し、ネットワーク内の複数の点からのHTTP接続を行うことが推奨されます。それはより困難な攻撃を使用して、ACMEの検証を破壊することができ、複数のポイント（サーバーの検証バンテージ・ポイント）または特定のポイント（DNS / HTTPサーバ）を攻撃する攻撃者を強制的に、攻撃は多くの場合、ローカライズされたか、攻撃者の位置に依存しているルーティングので、ルーティングに。"
    },
    {
      "indent": 0,
      "text": "10.3. Denial-of-Service Considerations",
      "section_title": true,
      "ja": "10.3. サービス拒否の考慮事項"
    },
    {
      "indent": 3,
      "text": "As a protocol run over HTTPS, standard considerations for TCP-based and HTTP-based DoS mitigation also apply to ACME.",
      "ja": "HTTPS経由のプロトコルの実行として、TCPベースおよびHTTPベースのDoS軽減のための標準的な配慮もACMEに適用されます。"
    },
    {
      "indent": 3,
      "text": "At the application layer, ACME requires the server to perform a few potentially expensive operations. Identifier validation transactions require the ACME server to make outbound connections to potentially attacker-controlled servers, and certificate issuance can require interactions with cryptographic hardware.",
      "ja": "アプリケーション層で、ACMEは、いくつかの潜在的に高価な操作を実行するサーバーが必要です。識別子の検証トランザクションは、潜在的に攻撃者が制御サーバへのアウトバウンド接続を行うためにACMEサーバを必要とし、証明書発行には、暗号化ハードウェアとの相互作用を必要とすることができます。"
    },
    {
      "indent": 3,
      "text": "In addition, an attacker can also cause the ACME server to send validation requests to a domain of its choosing by submitting authorization requests for the victim domain.",
      "ja": "また、攻撃者はまた、ACMEサーバは、被害者のドメインの認証要求を提出することによってその選択したドメインに検証要求を送信することがあります。"
    },
    {
      "indent": 3,
      "text": "All of these attacks can be mitigated by the application of appropriate rate limits. Issues closer to the front end, like POST body validation, can be addressed using HTTP request limiting. For validation and certificate requests, there are other identifiers on which rate limits can be keyed. For example, the server might limit the rate at which any individual account key can issue certificates or the rate at which validation can be requested within a given subtree of the DNS. And in order to prevent attackers from circumventing these limits simply by minting new accounts, servers would need to limit the rate at which accounts can be registered.",
      "ja": "これらの攻撃はすべて、適切なレート制限を適用することによって緩和することができます。フロントエンドに近いの問題は、POST本体の検証と同様に、制限HTTPリクエストを使用して対処することができます。検証と証明書要求の場合、レート制限をキーイング可能な他の識別子です。例えば、サーバは、個々のアカウントキーは、証明書や検証がDNSの特定のサブツリー内に要求される速度を出すことができる速度が制限される場合があります。そして、新しいアカウントを鋳造するだけでこれらの制限を回避からの攻撃を防ぐために、サーバは、アカウントを登録することができる速度を制限する必要があります。"
    },
    {
      "indent": 0,
      "text": "10.4. Server-Side Request Forgery",
      "section_title": true,
      "ja": "10.4. サーバー側のリクエストフォージェリ"
    },
    {
      "indent": 3,
      "text": "Server-Side Request Forgery (SSRF) attacks can arise when an attacker can cause a server to perform HTTP requests to an attacker-chosen URL. In the ACME HTTP challenge validation process, the ACME server performs an HTTP GET request to a URL in which the attacker can choose the domain. This request is made before the server has verified that the client controls the domain, so any client can cause a query to any domain.",
      "ja": "攻撃者は、サーバーが攻撃者に選択されたURLにHTTPリクエストを実行させることができたときにサーバー側のリクエストフォージェリ（SSRF）攻撃が発生する可能性があります。 ACME HTTP挑戦検証プロセスでは、ACMEサーバは、攻撃者がドメインを選択することが可能なURLにHTTP GETリクエストを実行します。この要求は、サーバーがクライアントがドメインを制御していることが確認される前に行われるので、任意のクライアントは、任意のドメインにクエリを引き起こす可能性があります。"
    },
    {
      "indent": 3,
      "text": "Some ACME server implementations include information from the validation server's response (in order to facilitate debugging). Such implementations enable an attacker to extract this information from any web server that is accessible to the ACME server, even if it is not accessible to the ACME client. For example, the ACME server might be able to access servers behind a firewall that would prevent access by the ACME client.",
      "ja": "いくつかのACMEサーバの実装は、（デバッグを容易にするために）検証サーバの応答からの情報が含まれています。このような実装では、ACMEクライアントからアクセス可能でない場合でも、ACMEサーバにアクセス可能な任意のWebサーバーからこの情報を抽出するために、攻撃者を可能にします。たとえば、ACMEサーバは、ACMEクライアントによるアクセスを妨げるファイアウォールの背後にあるサーバにアクセスすることができるかもしれません。"
    },
    {
      "indent": 3,
      "text": "It might seem that the risk of SSRF through this channel is limited by the fact that the attacker can only control the domain of the URL, not the path. However, if the attacker first sets the domain to one they control, then they can send the server an HTTP redirect (e.g., a 302 response) which will cause the server to query an arbitrary URL.",
      "ja": "このチャネルを介してSSRFのリスクは、攻撃者はURLだけではなく、パスのドメインを制御することができるという事実によって制限されているように見えるかもしれません。攻撃者はまず、彼らが制御する1つのドメインを設定する場合は、それらはサーバに、サーバは任意のURLを照会しますHTTPリダイレクト（例えば、302応答）を送信することができます。"
    },
    {
      "indent": 3,
      "text": "In order to further limit the SSRF risk, ACME server operators should ensure that validation queries can only be sent to servers on the public Internet, and not, say, web services within the server operator's internal network. Since the attacker could make requests to these public servers himself, he can't gain anything extra through an SSRF attack on ACME aside from a layer of anonymization.",
      "ja": "さらにSSRFリスクを制限するために、ACMEサーバのオペレータは、その検証クエリが唯一の公共のインターネット上のサーバーに送信することができます保証すべきである、といない、サーバーオペレータの内部ネットワーク内のWebサービスは、言います。攻撃者がこれらの公開サーバ自身への要求を行う可能性があるため、彼は匿名の層別にACMEのSSRF攻撃によって余分な何かを得ることはできません。"
    },
    {
      "indent": 0,
      "text": "10.5. CA Policy Considerations",
      "section_title": true,
      "ja": "10.5.  CAポリシーの考慮事項"
    },
    {
      "indent": 3,
      "text": "The controls on issuance enabled by ACME are focused on validating that a certificate applicant controls the identifier he claims. Before issuing a certificate, however, there are many other checks that a CA might need to perform, for example:",
      "ja": "ACMEで有効に発行上のコントロールは、証明書の申請者は、彼が主張識別子を制御することを確認するに焦点を当てています。証明書を発行する前に、しかし、CAは、例えば、実行する必要があります他の多くのチェックがあります。"
    },
    {
      "indent": 3,
      "text": "o Has the client agreed to a subscriber agreement?",
      "ja": "oは、クライアントは、加入者の契約に合意していますか？"
    },
    {
      "indent": 3,
      "text": "o Is the claimed identifier syntactically valid?",
      "ja": "O主張識別子が構文的に有効ですか？"
    },
    {
      "indent": 3,
      "text": "o For domain names:",
      "ja": "ドメイン名の場合○："
    },
    {
      "indent": 6,
      "text": "* If the leftmost label is a '*', then have the appropriate checks been applied?",
      "ja": "*「*」、その後、適切なチェックが適用されている一番左のラベルがされている場合は？"
    },
    {
      "indent": 6,
      "text": "* Is the name on the Public Suffix List?",
      "ja": "*公共のサフィックスリスト上の名前ですか？"
    },
    {
      "indent": 6,
      "text": "* Is the name a high-value name?",
      "ja": "*高価値名の名前ですか？"
    },
    {
      "indent": 6,
      "text": "* Is the name a known phishing domain?",
      "ja": "*既知のフィッシングドメイン名ですか？"
    },
    {
      "indent": 3,
      "text": "o Is the key in the CSR sufficiently strong?",
      "ja": "oは十分に強力なCSRの重要ですか？"
    },
    {
      "indent": 3,
      "text": "o Is the CSR signed with an acceptable algorithm?",
      "ja": "oはCSRが許容できるアルゴリズムで署名されていますか？"
    },
    {
      "indent": 3,
      "text": "o Has issuance been authorized or forbidden by a Certification Authority Authorization (CAA) record ([RFC6844])?",
      "ja": "oは認証局の認可（CAA）レコード（[RFC6844]）によって発行許可または禁止されていますか？"
    },
    {
      "indent": 3,
      "text": "CAs that use ACME to automate issuance will need to ensure that their servers perform all necessary checks before issuing.",
      "ja": "発行を自動化するACMEを使用するCAは、そのサーバが発行する前に、すべての必要なチェックを行うことを確認する必要があります。"
    },
    {
      "indent": 3,
      "text": "CAs using ACME to allow clients to agree to terms of service should keep in mind that ACME clients can automate this agreement, possibly not involving a human user.",
      "ja": "クライアントは、利用規約に同意することができるように、ACMEを使用してCAはACMEクライアントは、おそらく人間のユーザが関与しない、本契約を自動化することができることを心に留めておく必要があります。"
    },
    {
      "indent": 3,
      "text": "ACME does not specify how the server constructs the URLs that it uses to address resources. If the server operator uses URLs that are predictable to third parties, this can leak information about what URLs exist on the server, since an attacker can probe for whether a POST-as-GET request to the URL returns 404 (Not Found) or 401 (Unauthorized).",
      "ja": "ACMEは、サーバがリソースに対処するために使用するURLを構築する方法を指定しません。サーバーオペレータが第三者に予測可能なURLを使用する場合、これは、攻撃者がURLにPOST-AS-GET要求404（見つかりません）または401を返すかどうかを探索することができるので、URLは、サーバ上に存在するかについての情報を漏洩することができ（無許可）。"
    },
    {
      "indent": 3,
      "text": "For example, suppose that the CA uses highly structured URLs with guessable fields:",
      "ja": "たとえば、CAが推測可能なフィールドを持つ高度に構造化されたURLを使用しているとします。"
    },
    {
      "indent": 3,
      "text": "o Accounts: https://example.com/:accountID",
      "ja": "Oアカウント：https://example.com/:accountID"
    },
    {
      "indent": 3,
      "text": "o Orders: https://example.com/:accountID/:domainName",
      "ja": "O受注：https://example.com/:accountID/:domainName"
    },
    {
      "indent": 3,
      "text": "o Authorizations: https://example.com/:accountID/:domainName",
      "ja": "O承認：https://example.com/:accountID/:domainName"
    },
    {
      "indent": 3,
      "text": "o Certificates: https://example.com/:accountID/:domainName",
      "ja": "証明書O：https://example.com/:accountID/:domainName"
    },
    {
      "indent": 3,
      "text": "Under that scheme, an attacker could probe for which domain names are associated with which accounts, which may allow correlation of ownership between domain names, if the CA does not otherwise permit it.",
      "ja": "そのスキームの下では、攻撃者は、CAがそうでなければ、それを許可しない場合、ドメイン名の間に所有権の相関を可能にし得る、占めるドメイン名が関連付けられているプローブがあります。"
    },
    {
      "indent": 3,
      "text": "To avoid leaking these correlations, CAs SHOULD assign URLs with an unpredictable component. For example, a CA might assign URLs for each resource type from an independent namespace, using unpredictable IDs for each resource:",
      "ja": "これらの相関関係を漏洩しないようにするには、CAは、予測不可能なコンポーネントでURLを割り当てる必要があります。例えば、CAは、各リソースの予測不可能なIDを使用して、独立した名前空間からの各リソース・タイプのURLを割り当てることがあります。"
    },
    {
      "indent": 3,
      "text": "o Accounts: https://example.com/acct/:accountID",
      "ja": "Oアカウント：https://example.com/acct/:accountID"
    },
    {
      "indent": 3,
      "text": "o Orders: https://example.com/order/:orderID",
      "ja": "O受注：https://example.com/order/:orderID"
    },
    {
      "indent": 3,
      "text": "o Authorizations: https://example.com/authz/:authorizationID",
      "ja": "O承認：https://example.com/authz/:authorizationID"
    },
    {
      "indent": 3,
      "text": "o Certificates: https://example.com/cert/:certID",
      "ja": "証明書O：https://example.com/cert/:certID"
    },
    {
      "indent": 3,
      "text": "Such a scheme would leak only the type of resource, hiding the additional correlations revealed in the example above.",
      "ja": "このような方式は、上記の例で明らかにした追加の相関を隠蔽、リソースの種類のみを漏れなります。"
    },
    {
      "indent": 0,
      "text": "11. Operational Considerations",
      "section_title": true,
      "ja": "11.運用に関する注意事項"
    },
    {
      "indent": 3,
      "text": "There are certain factors that arise in operational reality that operators of ACME-based CAs will need to keep in mind when configuring their services. See the subsections below for examples.",
      "ja": "ACMEベースのCAの事業者がそのサービスを構成するときに心に留めておく必要があります運用現実に起こる特定の要因があります。例については、以下のサブセクションを参照してください。"
    },
    {
      "indent": 0,
      "text": "11.1. Key Selection",
      "section_title": true,
      "ja": "11.1. キー選択"
    },
    {
      "indent": 3,
      "text": "ACME relies on two different classes of key pair:",
      "ja": "ACMEは、鍵ペアの2つの異なるクラスに依存しています："
    },
    {
      "indent": 3,
      "text": "o Account key pairs, which are used to authenticate account holders",
      "ja": "O口座保有者を認証するために使用されている鍵のペアを、アカウント"
    },
    {
      "indent": 3,
      "text": "o Certificate key pairs, which are used to sign and verify CSRs (and whose public keys are included in certificates)",
      "ja": "（およびその公開鍵証明書に含まれる）のCSRに署名し検証するために使用されるO証明鍵ペア、"
    },
    {
      "indent": 3,
      "text": "Compromise of the private key of an account key pair has more serious consequences than compromise of a private key corresponding to a certificate. While the compromise of a certificate key pair allows the attacker to impersonate the entities named in the certificate for the lifetime of the certificate, the compromise of an account key pair allows the attacker to take full control of the victim's ACME account and take any action that the legitimate account holder could take within the scope of ACME:",
      "ja": "アカウント鍵ペアの秘密鍵の危殆は、証明書に対応する秘密鍵の危殆よりも深刻な影響を持っています。証明書の鍵ペアの妥協点は、攻撃者が証明書の有効期間の証明書で指定されたエンティティを偽装することができますが、アカウントの鍵ペアの妥協点は、攻撃者が被害者のACMEアカウントの完全な制御を取ると、そのすべての行動を取ることができます正当なアカウント所有者は、ACMEの範囲内で取ることができます："
    },
    {
      "indent": 3,
      "text": "1. Issuing certificates using existing authorizations",
      "section_title": true,
      "ja": "既存の権限を使って1.発行の証明書"
    },
    {
      "indent": 3,
      "text": "2. Revoking existing certificates",
      "section_title": true,
      "ja": "2.既存の証明書の取り消し"
    },
    {
      "indent": 3,
      "text": "3. Accessing and changing account information (e.g., contacts)",
      "section_title": true,
      "ja": "3.アカウント情報（例えば、連絡先）にアクセスし、変更します"
    },
    {
      "indent": 3,
      "text": "4. Changing the account key pair for the account, locking out the legitimate account holder",
      "ja": "4.正当なアカウント所有者をロックアウト、アカウントのアカウント鍵ペアを変更します"
    },
    {
      "indent": 3,
      "text": "For this reason, it is RECOMMENDED that each account key pair be used only for authentication of a single ACME account. For example, the public key of an account key pair MUST NOT be included in a certificate. If an ACME client receives a request from a user for account creation or key rollover using an account key that the client knows to be used elsewhere, then the client MUST return an error. Clients MUST generate a fresh account key for every account creation or rollover operation. Note that given the requirements of Section 7.3.1, servers will not create accounts with reused keys anyway.",
      "ja": "このため、各アカウントの鍵ペアは、単一のACMEアカウントの認証に使用することをお勧めします。たとえば、アカウントの鍵ペアの公開鍵を証明書に含めることはできません。 ACMEクライアントは、クライアントが他の場所で使用されることを知っているアカウントのキーを使用して、アカウントの作成やキーロールオーバーのユーザからの要求を受けた場合、クライアントはエラーを返さなければなりません。クライアントは、すべてのアカウントの作成やロールオーバー操作のための新鮮なアカウントキーを生成しなければなりません。 7.3.1項の要件を考えると、サーバはとにかく再利用するキーを持つアカウントを作成しないことに注意してください。"
    },
    {
      "indent": 3,
      "text": "ACME clients and servers MUST verify that a CSR submitted in a finalize request does not contain a public key for any known account key pair. In particular, when a server receives a finalize request, it MUST verify that the public key in a CSR is not the same as the public key of the account key pair used to authenticate that request. This assures that vulnerabilities in the protocols with which the certificate is used (e.g., signing oracles in TLS [JSS15]) do not result in compromise of the ACME account. Because ACME accounts are uniquely identified by their account key pair (see Section 7.3.1), the server MUST not allow account key pair reuse across multiple accounts.",
      "ja": "ACMEのクライアントとサーバは、CSRがファイナライズ要求で提出された知られているアカウントの鍵ペアの公開鍵が含まれていないことを確かめなければなりません。サーバはファイナライズ要求を受信したとき、特に、それがCSRの公開鍵がその要求を認証するために使用するアカウントの鍵ペアの公開鍵と同じではないことを確かめなければなりません。これは、証明書（例えば、TLS [JSS15]で神託に署名）を使用しているプロトコルの脆弱性は、ACMEアカウントの妥協を生じないことを保証します。 ACMEアカウントが一意に（7.3.1項を参照）、自分のアカウントの鍵ペアで識別されるため、サーバが複数のアカウント間でアカウントの鍵ペアの再利用を許してはなりません。"
    },
    {
      "indent": 0,
      "text": "11.2. DNS Security",
      "section_title": true,
      "ja": "11.2.  DNSセキュリティ"
    },
    {
      "indent": 3,
      "text": "As noted above, DNS forgery attacks against the ACME server can result in the server making incorrect decisions about domain control and thus mis-issuing certificates. Servers SHOULD perform DNS queries over TCP, which provides better resistance to some forgery attacks than DNS over UDP.",
      "ja": "上述したように、ACMEサーバに対してDNSの偽造攻撃は、ドメイン制御ひいては誤発行の証明書についての間違った意思決定を行うサーバーになります。サーバはUDPの上にDNSよりも、いくつかの偽造攻撃に対して優れた耐性を提供してTCP、上のDNSクエリを実行する必要があります。"
    },
    {
      "indent": 3,
      "text": "An ACME-based CA will often need to make DNS queries, e.g., to validate control of DNS names. Because the security of such validations ultimately depends on the authenticity of DNS data, every possible precaution should be taken to secure DNS queries done by the CA. Therefore, it is RECOMMENDED that ACME-based CAs make all DNS queries via DNSSEC-validating stub or recursive resolvers. This provides additional protection to domains that choose to make use of DNSSEC.",
      "ja": "ACMEベースのCAは、多くの場合、DNS名のコントロールを検証するために、例えば、DNSクエリを行う必要があります。こうした検証のセキュリティは、最終的にDNSデータの信頼性に依存するため、可能なすべての予防措置は、CAによって行われたDNSクエリを確保するために取られるべきですしたがって、ACMEベースのCAはDNSSEC妥当性を検証スタブまたは再帰リゾルバを経由して、すべてのDNSクエリを作ることが推奨されます。これは、DNSSECを利用するために選択したドメインに追加の保護を提供します。"
    },
    {
      "indent": 3,
      "text": "An ACME-based CA must only use a resolver if it trusts the resolver and every component of the network route by which it is accessed. Therefore, it is RECOMMENDED that ACME-based CAs operate their own DNSSEC-validating resolvers within their trusted network and use these resolvers both for CAA record lookups and all record lookups in furtherance of a challenge scheme (A, AAAA, TXT, etc.).",
      "ja": "それはレゾルバとそれがアクセスされるネットワーク経路のすべてのコンポーネントを信頼場合ACMEベースのCAは、リゾルバを使用しなければなりません。 ACMEベースのCAが自分の信頼できるネットワーク内で自分のDNSSEC妥当性を検証リゾルバを動作させると、（A、AAAA、TXTなど）チャレンジ制度の助成の両方CAAレコード検索のためのこれらのレゾルバと、すべてのレコード検索を使用することは、それが推奨されます。"
    },
    {
      "indent": 0,
      "text": "11.3. Token Entropy",
      "section_title": true,
      "ja": "11.3. トークンエントロピー"
    },
    {
      "indent": 3,
      "text": "The http-01 and dns-01 validation methods mandate the use of a random token value to uniquely identify the challenge. The value of the token is required to contain at least 128 bits of entropy for the following security properties. First, the ACME client should not be able to influence the ACME server's choice of token as this may allow an attacker to reuse a domain owner's previous challenge responses for a new validation request. Second, the entropy requirement makes it more difficult for ACME clients to implement a \"naive\" validation server that automatically replies to challenges without being configured per challenge.",
      "ja": "HTTP-01およびDNS-01の検証方法は、一意のチャレンジを識別するために、ランダムなトークン値の使用を義務付けます。トークンの値は、次のセキュリティプロパティのエントロピーの少なくとも128ビットを含むことが要求されます。まず、ACMEクライアントは、これは、攻撃者が新しい検証要求のためのドメイン所有者の以前のチャレンジ応答を再利用することを可能にするようトークンのACMEサーバの選択に影響を与えることはできないはずです。第二に、エントロピーの要件は、それがより困難ACMEクライアントが自動的に挑戦ごとに設定されることなく、課題に返信する「ナイーブ」検証サーバを実装できるようになります。"
    },
    {
      "indent": 0,
      "text": "11.4. Malformed Certificate Chains",
      "section_title": true,
      "ja": "11.4. 不正な形式の証明書チェーン"
    },
    {
      "indent": 3,
      "text": "ACME provides certificate chains in the widely used format known colloquially as PEM (though it may diverge from the actual Privacy Enhanced Mail specification [RFC1421], as noted in [RFC7468]). Some current software will allow the configuration of a private key and a certificate in one PEM file by concatenating the textual encodings of the two objects. In the context of ACME, such software might be vulnerable to key replacement attacks. A malicious ACME server could cause a client to use a private key of its choosing by including the key in the PEM file returned in response to a query for a certificate URL.",
      "ja": "（[RFC7468]に記載されているように、それは、実際のプライバシー強化メール仕様[RFC1421]から分岐してもよいが）ACMEは、PEMとして口語的に知られ、広く使用されるフォーマットで証明書チェーンを提供します。いくつかの現在のソフトウェアは、秘密鍵と二つのオブジェクトのテキストエンコーディングを連結して1つのPEMファイルに証明書の設定ができるようになります。 ACMEの文脈では、このようなソフトウェアは、鍵交換の攻撃に対して脆弱であるかもしれません。悪質なACMEサーバは、クライアントが証明書のURLのクエリに応答して返さPEMファイル内のキーを含めることにより、その選択した秘密鍵を使用する可能性があります。"
    },
    {
      "indent": 3,
      "text": "When processing a file of type \"application/pem-certificate-chain\", a\nclient SHOULD verify that the file contains only encoded\ncertificates.  If anything other than a certificate is found (i.e.,\nif the string \"-----BEGIN\" is ever followed by anything other than\n\"CERTIFICATE\"), then the client MUST reject the file as invalid.",
      "raw": true
    },
    {
      "indent": 0,
      "text": "12. References",
      "section_title": true,
      "ja": "12.参考文献"
    },
    {
      "indent": 0,
      "text": "12.1. Normative References",
      "section_title": true,
      "ja": "12.1. 引用規格"
    },
    {
      "indent": 3,
      "text": "[FIPS180-4] National Institute of Standards and Technology (NIST), \"Secure Hash Standard (SHS)\", FIPS PUB 180-4, DOI 10.6028/NIST.FIPS.180-4, August 2015, <http://csrc.nist.gov/publications/fips/fips180-4/ fips-180-4.pdf>.",
      "ja": "[FIPS180-4]国立標準技術研究所（NIST）、 \"セキュアハッシュ規格（SHS）\"、FIPS PUB 180-4の、DOI 10.6028 / NIST.FIPS.180-4、2015年8月、<のhttp：// CSRC .nist.gov /出版/ FIPS / fips180-4 / FIPS-180-4.pdf>。"
    },
    {
      "indent": 3,
      "text": "[JSS15] Somorovsky, J., Schwenk, J., and J. Somorovsky, \"On the Security of TLS 1.3 and QUIC Against Weaknesses in PKCS#1 v1.5 Encryption\", CSS '15 Proceedings of the 22nd ACM SIGSAC Conference on Computer and Communications Security Pages 1185-1196, DOI 10.1145/2810103.2813657, <https://dl.acm.org/citation.cfm?id=2813657>.",
      "ja": "[JSS15] Somorovsky、J.、SCHWENK、J.、およびJ. Somorovsky、 \"TLS 1.3とQUICのセキュリティにPKCS＃1 v1.5の暗号化の弱点に対する\"、CSS上の第22回ACM SIGSAC会議の議事録'15コンピュータおよび通信セキュリティページ1185-1196、DOI 10.1145 / 2810103.2813657、<https://dl.acm.org/citation.cfm?id=2813657>。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <https://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<https://www.rfc-editor.org/info/ RFC2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC2585] Housley, R. and P. Hoffman, \"Internet X.509 Public Key Infrastructure Operational Protocols: FTP and HTTP\", RFC 2585, DOI 10.17487/RFC2585, May 1999, <https://www.rfc-editor.org/info/rfc2585>.",
      "ja": "[RFC2585] Housley氏、R.とP.ホフマン、 \"インターネットX.509公開鍵基盤運用プロトコル：FTPやHTTP\"、RFC 2585、DOI 10.17487 / RFC2585、1999年5月、<HTTPS：//www.rfc-editor。組織/情報/ rfc2585>。"
    },
    {
      "indent": 3,
      "text": "[RFC2818] Rescorla, E., \"HTTP Over TLS\", RFC 2818, DOI 10.17487/RFC2818, May 2000, <https://www.rfc-editor.org/info/rfc2818>.",
      "ja": "[RFC2818]レスコラ、E.、 \"TLSオーバーHTTP\"、RFC 2818、DOI 10.17487 / RFC2818、2000年5月、<https://www.rfc-editor.org/info/rfc2818>。"
    },
    {
      "indent": 3,
      "text": "[RFC2985] Nystrom, M. and B. Kaliski, \"PKCS #9: Selected Object Classes and Attribute Types Version 2.0\", RFC 2985, DOI 10.17487/RFC2985, November 2000, <https://www.rfc-editor.org/info/rfc2985>.",
      "ja": "[RFC2985] Nystrom、M.とB. Kaliski、 \"PKCS＃9：選択したオブジェクトクラスと属性の型バージョン2.0\"、RFC 2985、DOI 10.17487 / RFC2985、2000年11月、<https://www.rfc-editor.org /情報/ rfc2985>。"
    },
    {
      "indent": 3,
      "text": "[RFC2986] Nystrom, M. and B. Kaliski, \"PKCS #10: Certification Request Syntax Specification Version 1.7\", RFC 2986, DOI 10.17487/RFC2986, November 2000, <https://www.rfc-editor.org/info/rfc2986>.",
      "ja": "[RFC2986] Nystrom、M.とB. Kaliski、 \"PKCS＃10：証明書要求の構文仕様バージョン1.7\"、RFC 2986、DOI 10.17487 / RFC2986、2000年11月、<https://www.rfc-editor.org/info / rfc2986>。"
    },
    {
      "indent": 3,
      "text": "[RFC3339] Klyne, G. and C. Newman, \"Date and Time on the Internet: Timestamps\", RFC 3339, DOI 10.17487/RFC3339, July 2002, <https://www.rfc-editor.org/info/rfc3339>.",
      "ja": "[RFC3339] Klyne、G.とC.ニューマン、 \"インターネット上の日付と時刻：タイムスタンプ\"、RFC 3339、DOI 10.17487 / RFC3339、2002年7月、<https://www.rfc-editor.org/info/rfc3339 >。"
    },
    {
      "indent": 3,
      "text": "[RFC3629] Yergeau, F., \"UTF-8, a transformation format of ISO 10646\", STD 63, RFC 3629, DOI 10.17487/RFC3629, November 2003, <https://www.rfc-editor.org/info/rfc3629>.",
      "ja": "[RFC3629] Yergeau、F.、 \"UTF-8、ISO 10646の変換フォーマット\"、STD 63、RFC 3629、DOI 10.17487 / RFC3629、2003年11月、<https://www.rfc-editor.org/info/ RFC3629>。"
    },
    {
      "indent": 3,
      "text": "[RFC3986] Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform Resource Identifier (URI): Generic Syntax\", STD 66, RFC 3986, DOI 10.17487/RFC3986, January 2005, <https://www.rfc-editor.org/info/rfc3986>.",
      "ja": "[RFC3986]バーナーズ - リー、T.、フィールディング、R.、およびL. Masinter、 \"ユニフォームリソース識別子（URI）：汎用構文\"、STD 66、RFC 3986、DOI 10.17487 / RFC3986、2005年1月<HTTPS：/ /www.rfc-editor.org/info/rfc3986>。"
    },
    {
      "indent": 3,
      "text": "[RFC4086] Eastlake 3rd, D., Schiller, J., and S. Crocker, \"Randomness Requirements for Security\", BCP 106, RFC 4086, DOI 10.17487/RFC4086, June 2005, <https://www.rfc-editor.org/info/rfc4086>.",
      "ja": "[RFC4086]イーストレーク3日、D.、シラー、J.、およびS.クロッカー、 \"セキュリティのためのランダム要件\"、BCP 106、RFC 4086、DOI 10.17487 / RFC4086、2005年6月、<HTTPS：//www.rfc-editor .ORG /情報/ RFC4086>。"
    },
    {
      "indent": 3,
      "text": "[RFC4648] Josefsson, S., \"The Base16, Base32, and Base64 Data Encodings\", RFC 4648, DOI 10.17487/RFC4648, October 2006, <https://www.rfc-editor.org/info/rfc4648>.",
      "ja": "[RFC4648] Josefsson氏、S.、 \"Base16、Base32、およびBase64でデータエンコーディング\"、RFC 4648、DOI 10.17487 / RFC4648、2006年10月、<https://www.rfc-editor.org/info/rfc4648>。"
    },
    {
      "indent": 3,
      "text": "[RFC5234] Crocker, D., Ed. and P. Overell, \"Augmented BNF for Syntax Specifications: ABNF\", STD 68, RFC 5234, DOI 10.17487/RFC5234, January 2008, <https://www.rfc-editor.org/info/rfc5234>.",
      "ja": "[RFC5234]クロッカー、D.、エド。そして、P. Overell、 \"構文仕様のための増大しているBNF：ABNF\"、STD 68、RFC 5234、DOI 10.17487 / RFC5234、2008年1月、<https://www.rfc-editor.org/info/rfc5234>。"
    },
    {
      "indent": 3,
      "text": "[RFC5280] Cooper, D., Santesson, S., Farrell, S., Boeyen, S., Housley, R., and W. Polk, \"Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile\", RFC 5280, DOI 10.17487/RFC5280, May 2008, <https://www.rfc-editor.org/info/rfc5280>.",
      "ja": "[RFC5280]クーパー、D.、Santesson、S.、ファレル、S.、Boeyen、S.、Housley氏、R.、およびW.ポーク、「インターネットX.509公開鍵暗号基盤証明書と証明書失効リスト（CRL）のプロフィール」、RFC 5280、DOI 10.17487 / RFC5280、2008年5月、<https://www.rfc-editor.org/info/rfc5280>。"
    },
    {
      "indent": 3,
      "text": "[RFC5751] Ramsdell, B. and S. Turner, \"Secure/Multipurpose Internet Mail Extensions (S/MIME) Version 3.2 Message Specification\", RFC 5751, DOI 10.17487/RFC5751, January 2010, <https://www.rfc-editor.org/info/rfc5751>.",
      "ja": "[RFC5751] Ramsdell、B.、およびS.ターナーは、 \"セキュア/多目的インターネットメール拡張（S / MIME）バージョン3.2メッセージ仕様\"、RFC 5751、DOI 10.17487 / RFC5751、2010年1月、<HTTPS：//www.rfc- editor.org/info/rfc5751>。"
    },
    {
      "indent": 3,
      "text": "[RFC5890] Klensin, J., \"Internationalized Domain Names for Applications (IDNA): Definitions and Document Framework\", RFC 5890, DOI 10.17487/RFC5890, August 2010, <https://www.rfc-editor.org/info/rfc5890>.",
      "ja": "[RFC5890] Klensin、J.、 \"アプリケーション（IDNA）のための国際化ドメイン名：定義とドキュメントフレームワーク\"、RFC 5890、DOI 10.17487 / RFC5890、2010年8月、<https://www.rfc-editor.org/info/ rfc5890>。"
    },
    {
      "indent": 3,
      "text": "[RFC6068] Duerst, M., Masinter, L., and J. Zawinski, \"The 'mailto' URI Scheme\", RFC 6068, DOI 10.17487/RFC6068, October 2010, <https://www.rfc-editor.org/info/rfc6068>.",
      "ja": "[RFC6068] Duerst、M、瑪斯ケア、L.、及びJ. Zawinski、 \" 'のmailto' URIスキーム\"、RFC 6068、DOI 10.17487 / RFC6068、2010年10月、<https://www.rfc-editor.org /情報/ rfc6068>。"
    },
    {
      "indent": 3,
      "text": "[RFC6570] Gregorio, J., Fielding, R., Hadley, M., Nottingham, M., and D. Orchard, \"URI Template\", RFC 6570, DOI 10.17487/RFC6570, March 2012, <https://www.rfc-editor.org/info/rfc6570>.",
      "ja": "[RFC6570]グレゴリオ、J.、フィールディング、R.、ハドリー、M.、ノッティンガム、M.、およびD.オーチャード、 \"URIテンプレート\"、RFC 6570、DOI 10.17487 / RFC6570、2012年3月、<https：//でWWW .rfc-editor.org /情報/ rfc6570>。"
    },
    {
      "indent": 3,
      "text": "[RFC6844] Hallam-Baker, P. and R. Stradling, \"DNS Certification Authority Authorization (CAA) Resource Record\", RFC 6844, DOI 10.17487/RFC6844, January 2013, <https://www.rfc-editor.org/info/rfc6844>.",
      "ja": "[RFC6844]ハラム - ベイカー、P.とR. Stradling、 \"DNSの認証局の認可（CAA）リソースレコード\"、RFC 6844、DOI 10.17487 / RFC6844、2013年1月、<https://www.rfc-editor.org/情報/ rfc6844>。"
    },
    {
      "indent": 3,
      "text": "[RFC7231] Fielding, R., Ed. and J. Reschke, Ed., \"Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content\", RFC 7231, DOI 10.17487/RFC7231, June 2014, <https://www.rfc-editor.org/info/rfc7231>.",
      "ja": "[RFC7231]フィールディング、R.、エド。そして、J. Reschke、エド、 \"ハイパーテキスト転送プロトコル（HTTP / 1.1）：セマンティクスおよびコンテンツ\"、RFC 7231、DOI 10.17487 / RFC7231、2014年6月、<https://www.rfc-editor.org/info/rfc7231 >。"
    },
    {
      "indent": 3,
      "text": "[RFC7468] Josefsson, S. and S. Leonard, \"Textual Encodings of PKIX, PKCS, and CMS Structures\", RFC 7468, DOI 10.17487/RFC7468, April 2015, <https://www.rfc-editor.org/info/rfc7468>.",
      "ja": "[RFC7468] Josefsson氏、S.とS.レナード、 \"PKIX、PKCS、およびCMS構造のテキストエンコーディング\"、RFC 7468、DOI 10.17487 / RFC7468、2015年4月、<https://www.rfc-editor.org/info / rfc7468>。"
    },
    {
      "indent": 3,
      "text": "[RFC7515] Jones, M., Bradley, J., and N. Sakimura, \"JSON Web Signature (JWS)\", RFC 7515, DOI 10.17487/RFC7515, May 2015, <https://www.rfc-editor.org/info/rfc7515>.",
      "ja": "[RFC7515]ジョーンズ、M.、ブラッドリー、J。、およびN. Sakimura、 \"JSONウェブ署名（JWS）\"、RFC 7515、DOI 10.17487 / RFC7515、2015年5月、<https://www.rfc-editor.org /情報/ rfc7515>。"
    },
    {
      "indent": 3,
      "text": "[RFC7518] Jones, M., \"JSON Web Algorithms (JWA)\", RFC 7518, DOI 10.17487/RFC7518, May 2015, <https://www.rfc-editor.org/info/rfc7518>.",
      "ja": "[RFC7518]ジョーンズ、M.、 \"JSONウェブアルゴリズム（JWA）\"、RFC 7518、DOI 10.17487 / RFC7518、2015年5月、<https://www.rfc-editor.org/info/rfc7518>。"
    },
    {
      "indent": 3,
      "text": "[RFC7638] Jones, M. and N. Sakimura, \"JSON Web Key (JWK) Thumbprint\", RFC 7638, DOI 10.17487/RFC7638, September 2015, <https://www.rfc-editor.org/info/rfc7638>.",
      "ja": "[RFC7638]ジョーンズ、M.およびN. Sakimura、 \"JSONのWebキー（JWK）拇印\"、RFC 7638、DOI 10.17487 / RFC7638、2015年9月、<https://www.rfc-editor.org/info/rfc7638> 。"
    },
    {
      "indent": 3,
      "text": "[RFC7797] Jones, M., \"JSON Web Signature (JWS) Unencoded Payload Option\", RFC 7797, DOI 10.17487/RFC7797, February 2016, <https://www.rfc-editor.org/info/rfc7797>.",
      "ja": "[RFC7797]ジョーンズ、M.、 \"JSONウェブ署名（JWS）暗号化されていないペイロードオプション\"、RFC 7797、DOI 10.17487 / RFC7797、2016年2月、<https://www.rfc-editor.org/info/rfc7797>。"
    },
    {
      "indent": 3,
      "text": "[RFC7807] Nottingham, M. and E. Wilde, \"Problem Details for HTTP APIs\", RFC 7807, DOI 10.17487/RFC7807, March 2016, <https://www.rfc-editor.org/info/rfc7807>.",
      "ja": "[RFC7807]ノッティンガム、M.およびE.ワイルド、 \"HTTP APIの問題の詳細\"、RFC 7807、DOI 10.17487 / RFC7807、2016年3月、<https://www.rfc-editor.org/info/rfc7807>。"
    },
    {
      "indent": 3,
      "text": "[RFC8037] Liusvaara, I., \"CFRG Elliptic Curve Diffie-Hellman (ECDH) and Signatures in JSON Object Signing and Encryption (JOSE)\", RFC 8037, DOI 10.17487/RFC8037, January 2017, <https://www.rfc-editor.org/info/rfc8037>.",
      "ja": "[RFC8037] Liusvaara、I.、 \"JSONでCFRG楕円曲線ディフィ - ヘルマン（ECDH）と署名オブジェクト署名および暗号化（JOSE）\"、RFC 8037、DOI 10.17487 / RFC8037、2017年1月、<HTTPS：//www.rfc -editor.org/info/rfc8037>。"
    },
    {
      "indent": 3,
      "text": "[RFC8126] Cotton, M., Leiba, B., and T. Narten, \"Guidelines for Writing an IANA Considerations Section in RFCs\", BCP 26, RFC 8126, DOI 10.17487/RFC8126, June 2017, <https://www.rfc-editor.org/info/rfc8126>.",
      "ja": "[RFC8126]綿、M.、Leiba、B.、およびT. Narten氏、 \"RFCsにIANA問題部に書くためのガイドライン\"、BCP 26、RFC 8126、DOI 10.17487 / RFC8126、2017年6月、<https：//でWWW .rfc-editor.org /情報/ rfc8126>。"
    },
    {
      "indent": 3,
      "text": "[RFC8174] Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174, May 2017, <https://www.rfc-editor.org/info/rfc8174>.",
      "ja": "[RFC8174] Leiba、B.、 \"RFC 2119個のキーワードに小文字VS大文字の曖昧さ\"、BCP 14、RFC 8174、DOI 10.17487 / RFC8174、2017年5月、<https://www.rfc-editor.org/info/ rfc8174>。"
    },
    {
      "indent": 3,
      "text": "[RFC8259] Bray, T., Ed., \"The JavaScript Object Notation (JSON) Data Interchange Format\", STD 90, RFC 8259, DOI 10.17487/RFC8259, December 2017, <https://www.rfc-editor.org/info/rfc8259>.",
      "ja": "[RFC8259]ブレイ、T.、エド。、 \"JavaScriptオブジェクト表記（JSON）データ交換フォーマット\"、STD 90、RFC 8259、DOI 10.17487 / RFC8259、2017年12月、<https://www.rfc-editor.org /情報/ rfc8259>。"
    },
    {
      "indent": 3,
      "text": "[RFC8288] Nottingham, M., \"Web Linking\", RFC 8288, DOI 10.17487/RFC8288, October 2017, <https://www.rfc-editor.org/info/rfc8288>.",
      "ja": "[RFC8288]ノッティンガム、M.、 \"ウェブリンク\"、RFC 8288、DOI 10.17487 / RFC8288、2017年10月、<https://www.rfc-editor.org/info/rfc8288>。"
    },
    {
      "indent": 3,
      "text": "[RFC8446] Rescorla, E., \"The Transport Layer Security (TLS) Protocol Version 1.3\", RFC 8446, DOI 10.17487/RFC8446, August 2018, <https://www.rfc-editor.org/info/rfc8446>.",
      "ja": "[RFC8446]レスコラ、E.、 \"トランスポート層セキュリティ（TLS）プロトコルバージョン1.3\"、RFC 8446、DOI 10.17487 / RFC8446、2018年8月、<https://www.rfc-editor.org/info/rfc8446>。"
    },
    {
      "indent": 0,
      "text": "12.2. Informative References",
      "section_title": true,
      "ja": "12.2. 参考文献"
    },
    {
      "indent": 3,
      "text": "[ACME-CAA] Landau, H., \"CAA Record Extensions for Account URI and ACME Method Binding\", Work in Progress, draft-ietf-acme-caa-06, January 2019.",
      "ja": "[ACME-CAA]ランダウ、H.、 \"アカウントURIとACME方法についてCAA録音機能拡張バインディング\" が進行中で働いて、ドラフト-IETF-ACME-CAA-06、2019年1月。"
    },
    {
      "indent": 3,
      "text": "[ACME-IP] Shoemaker, R., \"ACME IP Identifier Validation Extension\", Work in Progress, draft-ietf-acme-ip-05, February 2019.",
      "ja": "[ACME-IP]シューメーカー、R.、 \"ACME IP識別子の検証拡張\" が進行中で働いて、ドラフト-IETF-ACME-IP-05、2019年2月。"
    },
    {
      "indent": 3,
      "text": "[ACME-TELEPHONE] Peterson, J. and R. Barnes, \"ACME Identifiers and Challenges for Telephone Numbers\", Work in Progress, draft-ietf-acme-telephone-01, October 2017.",
      "ja": "[ACME-TELEPHONE]ピーターソン、J.とR.バーンズ、 \"ACME識別子と電話番号の挑戦\" が進行中で働いて、ドラフト-IETF-ACME-電話-01、2017年10月。"
    },
    {
      "indent": 3,
      "text": "[CABFBR] CA/Browser Forum, \"CA/Browser Forum Baseline Requirements\", September 2018, <https://cabforum.org/baseline-requirements-documents/>.",
      "ja": "[CABFBR] CA /ブラウザフォーラム、 \"CA /ブラウザフォーラムのベースラインの要件\"、2018年9月、<https://cabforum.org/baseline-requirements-documents/>。"
    },
    {
      "indent": 3,
      "text": "[DNS0x20] Vixie, P. and D. Dagon, \"Use of Bit 0x20 in DNS Labels to Improve Transaction Identity\", Work in Progress, draft-vixie-dnsext-dns0x20-00, March 2008.",
      "ja": "[DNS0x20]いるVixie、P.およびD.ダゴンは、進行中で働いて、ドラフトいるVixie-DNSEXT-dns0x20-00、2008年3月 \"DNSラベルのビットの0x20を使用すると、トランザクションのアイデンティティを向上させます\"。"
    },
    {
      "indent": 3,
      "text": "[RFC1421] Linn, J., \"Privacy Enhancement for Internet Electronic Mail: Part I: Message Encryption and Authentication Procedures\", RFC 1421, DOI 10.17487/RFC1421, February 1993, <https://www.rfc-editor.org/info/rfc1421>.",
      "ja": "[RFC1421]リン、J.、 \"インターネット電子メールのためのプライバシー増進：パートI：メッセージの暗号化と認証手順\"、RFC 1421、DOI 10.17487 / RFC1421、1993年2月、<https://www.rfc-editor.org/情報/ rfc1421>。"
    },
    {
      "indent": 3,
      "text": "[RFC3552] Rescorla, E. and B. Korver, \"Guidelines for Writing RFC Text on Security Considerations\", BCP 72, RFC 3552, DOI 10.17487/RFC3552, July 2003, <https://www.rfc-editor.org/info/rfc3552>.",
      "ja": "[RFC3552]レスコラ、E.とB.コーバー、 \"セキュリティの考慮事項の書き方RFCテキストのためのガイドライン\"、BCP 72、RFC 3552、DOI 10.17487 / RFC3552、2003年7月、<https://www.rfc-editor.org/情報/ rfc3552>。"
    },
    {
      "indent": 3,
      "text": "[RFC3553] Mealling, M., Masinter, L., Hardie, T., and G. Klyne, \"An IETF URN Sub-namespace for Registered Protocol Parameters\", BCP 73, RFC 3553, DOI 10.17487/RFC3553, June 2003, <https://www.rfc-editor.org/info/rfc3553>. [RFC5785] Nottingham, M. and E. Hammer-Lahav, \"Defining Well-Known Uniform Resource Identifiers (URIs)\", RFC 5785, DOI 10.17487/RFC5785, April 2010, <https://www.rfc-editor.org/info/rfc5785>.",
      "ja": "[RFC3553] Mealling、M.、Masinter、L.、ハーディー、T.、およびG. Klyne、 \"登録プロトコル・パラメータのためのIETF URNサブ名前空間\"、BCP 73、RFC 3553、DOI 10.17487 / RFC3553、2003年6月<https://www.rfc-editor.org/info/rfc3553>。 [RFC5785]ノッティンガム、M.およびE.ハンマーLahav、 \"既知のUniform Resource Identifier（URI）を定義\"、RFC 5785、DOI 10.17487 / RFC5785、2010年4月<https://www.rfc-editor.org /情報/ rfc5785>。"
    },
    {
      "indent": 3,
      "text": "[RFC6960] Santesson, S., Myers, M., Ankney, R., Malpani, A., Galperin, S., and C. Adams, \"X.509 Internet Public Key Infrastructure Online Certificate Status Protocol - OCSP\", RFC 6960, DOI 10.17487/RFC6960, June 2013, <https://www.rfc-editor.org/info/rfc6960>.",
      "ja": "[RFC6960] Santesson、S.、マイヤーズ、M.、Ankney、R.、Malpani、A.、Galperin、S.、およびC.アダムス、 \"X.509のインターネット公開鍵暗号基盤のオンライン証明書状態プロトコル -  OCSP\"、RFC 6960、DOI 10.17487 / RFC6960、2013年6月、<https://www.rfc-editor.org/info/rfc6960>。"
    },
    {
      "indent": 3,
      "text": "[RFC7132] Kent, S. and A. Chi, \"Threat Model for BGP Path Security\", RFC 7132, DOI 10.17487/RFC7132, February 2014, <https://www.rfc-editor.org/info/rfc7132>.",
      "ja": "[RFC7132]ケント、S.とA.チー、 \"BGPパスSecurityの脅威モデル\"、RFC 7132、DOI 10.17487 / RFC7132、2014年2月、<https://www.rfc-editor.org/info/rfc7132>。"
    },
    {
      "indent": 3,
      "text": "[RFC7525] Sheffer, Y., Holz, R., and P. Saint-Andre, \"Recommendations for Secure Use of Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)\", BCP 195, RFC 7525, DOI 10.17487/RFC7525, May 2015, <https://www.rfc-editor.org/info/rfc7525>.",
      "ja": "[RFC7525]シェファー、Y.、ホルツ、R.、およびP.サンアンドレ、 \"トランスポート層セキュリティ（TLS）およびデータグラムトランスポート層セキュリティ（DTLS）のセキュアな利用のための提言\"、BCP 195、RFC 7525、DOI 10.17487 / RFC7525、2015年5月、<https://www.rfc-editor.org/info/rfc7525>。"
    },
    {
      "indent": 3,
      "text": "[W3C.REC-cors-20140116] Kesteren, A., Ed., \"Cross-Origin Resource Sharing\", W3C Recommendation REC-cors-20140116, January 2014, <http://www.w3.org/TR/2014/REC-cors-20140116>.",
      "ja": "[W3C.REC-CORS-20140116] Kesteren氏、A.編、 \"クロスオリジンリソースの共有\"、W3C勧告REC-CORS-20140116、2014年1月、<http://www.w3.org/TR/2014 / REC-CORS-20140116>。"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "In addition to the editors listed on the front page, this document has benefited from contributions from a broad set of contributors, all the way back to its inception.",
      "ja": "フロントページに記載されている編集者に加えて、この文書は貢献者の幅広いセット、バック創業のすべての方法からの貢献の恩恵を受けています。"
    },
    {
      "indent": 3,
      "text": "o Andrew Ayer, SSLMate",
      "ja": "アンドリュー・アヤ、SSLMate O"
    },
    {
      "indent": 3,
      "text": "o Karthik Bhargavan, INRIA",
      "ja": "OカルティクBhargavan、INRIA"
    },
    {
      "indent": 3,
      "text": "o Peter Eckersley, EFF",
      "ja": "ピーター・エッカースリー、EFF O"
    },
    {
      "indent": 3,
      "text": "o Alex Halderman, University of Michigan",
      "ja": "アレックス・ホルダーマン氏、ミシガン大学O"
    },
    {
      "indent": 3,
      "text": "o Sophie Herold, Hemio",
      "ja": "ソフィー・ヘロルド、Hemio O"
    },
    {
      "indent": 3,
      "text": "o Tim Hollebeek, DigiCert",
      "ja": "ティムHollebeek、DigiCert O"
    },
    {
      "indent": 3,
      "text": "o Eric Rescorla, Mozilla",
      "ja": "エリックレスコラ、MozillaのO"
    },
    {
      "indent": 3,
      "text": "o Seth Schoen, EFF",
      "ja": "セス・シェーン、EFF O"
    },
    {
      "indent": 3,
      "text": "o Roland Shoemaker, Let's Encrypt",
      "ja": "Oローランド・シューメーカー、レッツ・暗号化"
    },
    {
      "indent": 3,
      "text": "o Rob Stradling, Sectigo",
      "ja": "ロブStradling、Sectigo"
    },
    {
      "indent": 3,
      "text": "o Martin Thomson, Mozilla",
      "ja": "マーティン・トムソン、MozillaのO"
    },
    {
      "indent": 3,
      "text": "o Jakub Warmuz, University of Oxford",
      "ja": "ヤコブ、オックスフォード大学のWarmuz"
    },
    {
      "indent": 3,
      "text": "This document draws on many concepts established by Eric Rescorla's \"Automated Certificate Issuance Protocol\" draft. Martin Thomson provided helpful guidance in the use of HTTP.",
      "ja": "この文書では、エリックレスコラの「自動証明書発行プロトコル」案によって確立された多くの概念の上に描画します。マーティン・トムソンは、HTTPを使用するのに役立つガイダンスを提供します。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Richard Barnes Cisco",
      "ja": "リチャード・バーンズシスコ"
    },
    {
      "indent": 3,
      "text": "Email: rlb@ipv.sx",
      "ja": "メール：rlb@ipv.sx"
    },
    {
      "indent": 3,
      "text": "Jacob Hoffman-Andrews EFF",
      "ja": "ジェイコブ・ホフマン - アンドリュースEFF"
    },
    {
      "indent": 3,
      "text": "Email: jsha@eff.org",
      "ja": "メール：jsha@eff.org"
    },
    {
      "indent": 3,
      "text": "Daniel McCarney Let's Encrypt",
      "ja": "ダニエルMcCarneyレッツ・暗号化"
    },
    {
      "indent": 3,
      "text": "Email: cpu@letsencrypt.org",
      "ja": "メール：cpu@letsencrypt.org"
    },
    {
      "indent": 3,
      "text": "James Kasten University of Michigan",
      "ja": "ミシガン州のジェームズ・カステン大学"
    },
    {
      "indent": 3,
      "text": "Email: jdkasten@umich.edu",
      "ja": "メール：jdkasten@umich.edu"
    }
  ]
}