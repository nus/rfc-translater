{
  "title": {
    "text": "RFC 8039 - Multipath Time Synchronization",
    "ja": "RFC 8039 - マルチパス時刻同期"
  },
  "number": 8039,
  "created_at": "2019-10-22 13:01:39.947662+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                        A. Shpiner\nRequest for Comments: 8039                                      Mellanox\nCategory: Experimental                                            R. Tse\nISSN: 2070-1721                                                Microsemi\n                                                               C. Schelp\n                                                                  Oracle\n                                                              T. Mizrahi\n                                                                 Marvell\n                                                           December 2016",
      "raw": true
    },
    {
      "indent": 21,
      "text": "Multipath Time Synchronization",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "Clock synchronization protocols are very widely used in IP-based networks. The Network Time Protocol (NTP) has been commonly deployed for many years, and the last few years have seen an increasingly rapid deployment of the Precision Time Protocol (PTP). As time-sensitive applications evolve, clock accuracy requirements are becoming increasingly stringent, requiring the time synchronization protocols to provide high accuracy. This memo describes a multipath approach to PTP and NTP over IP networks, allowing the protocols to run concurrently over multiple communication paths between the master and slave clocks, without modifying these protocols. The multipath approach can significantly contribute to clock accuracy, security, and fault tolerance. The multipath approach that is presented in this document enables backward compatibility with nodes that do not support the multipath functionality.",
      "ja": "クロック同期プロトコルは非常に広く、IPベースのネットワークで使用されています。 NTP（Network Time Protocol）は、一般的に、長年にわたって展開されており、ここ数年は、高精度時間プロトコル（PTP）のますます急速な展開を見てきました。時間に敏感なアプリケーションが発展するように、クロックの精度要件は、高い精度を提供するために、時刻同期プロトコルを必要とする、ますます厳しくなってきています。このメモは、これらのプロトコルを変更せずに、プロトコルは、マスタとスレーブクロックとの間の複数の通信経路を介して同時に実行できるように、IPネットワーク上でPTPおよびNTPにマルチパスアプローチを記載しています。マルチパスアプローチが大幅にクロック精度、セキュリティ、および耐障害性に貢献することができます。この文書で提示されたマルチパスのアプローチは、マルチパス機能をサポートしないノードとの下位互換性を可能にします。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for examination, experimental implementation, and evaluation.",
      "ja": "このドキュメントはインターネット標準化過程仕様ではありません。それは、検査、実験的な実装、および評価のために公開されています。"
    },
    {
      "indent": 3,
      "text": "This document defines an Experimental Protocol for the Internet community. This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Not all documents approved by the IESG are a candidate for any level of Internet Standard; see Section 2 of RFC 7841.",
      "ja": "この文書は、インターネットコミュニティのためにExperimentalプロトコルを定義します。このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。 IESGによって承認されていないすべての文書がインターネットStandardのどんなレベルの候補です。 RFC 7841のセクション2を参照してください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc8039.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc8039で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2016 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2016 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................3\n2. Conventions Used in This Document ...............................4\n   2.1. Abbreviations ..............................................4\n   2.2. Terminology ................................................4\n3. Multiple Paths in IP Networks ...................................5\n   3.1. Load Balancing .............................................5\n   3.2. Using Multiple Paths Concurrently ..........................5\n   3.3. Two-Way Paths ..............................................5\n4. Solution Overview ...............................................6\n   4.1. Path Configuration and Identification ......................6\n   4.2. Combining ..................................................6\n5. Multipath Time Synchronization over IP Networks .................7\n   5.1. Overview ...................................................7\n   5.2. Single-Ended Multipath Synchronization .....................8\n        5.2.1. Single-Ended MPPTP Synchronization Message\n               Exchange ............................................8\n        5.2.2. Single-Ended MPNTP Synchronization Message\n               Exchange ............................................9\n   5.3. Dual-Ended Multipath Synchronization ......................10\n        5.3.1. Dual-Ended MPPTP Synchronization Message Exchange ..10\n        5.3.2. Dual-Ended MPNTP Synchronization Message Exchange ..11\n   5.4. Using Traceroute for Path Discovery .......................12\n   5.5. Using Unicast Discovery for MPPTP .........................13\n6. Combining Algorithm ............................................13\n7. Security Considerations ........................................14\n8. Scope of the Experiment ........................................14\n9. References .....................................................15\n   9.1. Normative References ......................................15\n   9.2. Informative References ....................................15\nAcknowledgments ...................................................17\nAuthors' Addresses ................................................17",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "The two most common time synchronization protocols in IP networks are (1) the Network Time Protocol [NTP] and (2) the Precision Time Protocol (PTP) as defined in the IEEE 1588 standard [IEEE1588].",
      "ja": "IPネットワーク内の2つの最も一般的な時間同期化プロトコルは、（1）ネットワーク・タイム・プロトコル[NTP]及び（2）IEEE 1588規格[IEEE1588]で定義されるように高精度時間プロトコル（PTP）。"
    },
    {
      "indent": 3,
      "text": "The accuracy of the time synchronization protocols directly depends on the stability and the symmetry of propagation delays in both directions between the master and slave clocks. Depending on the nature of the underlying network, time synchronization protocol packets can be subject to variable network latency or path asymmetry (e.g., [ASYMMETRY] [ASYMMETRY2]). As time-sensitive applications evolve, accuracy requirements are becoming increasingly stringent. Using a single network path in a clock synchronization protocol closely ties the slave clock accuracy to the behavior of the specific path, which may suffer from temporal congestion, faults, or malicious attacks. Relying on multiple clock servers, as in NTP, solves these problems but requires active maintenance of multiple accurate sources in the network, which is not always possible. The usage of Transparent Clocks (TCs) in PTP solves the congestion problem by eliminating the queuing time from the delay calculations but does not address security or fault-tolerance aspects.",
      "ja": "時間同期化プロトコルの精度は、直接安定性、マスタとスレーブクロックとの間の両方向における伝播遅延の対称性に依存します。基礎となるネットワークの性質に応じて、時刻同期プロトコルパケットは、可変ネットワーク遅延やパス非対称（例えば、[ASYMMETRY] [ASYMMETRY2]）を受けることができます。時間に敏感なアプリケーションが進化するにつれ、精度要求はますます厳しくなってきています。クロック同期プロトコルにおける単一のネットワークパスを使用して密接に時間的な混雑、障害、または悪意のある攻撃に苦しむことができる特定のパスの動作、スレーブクロック精度を結び付けます。 NTPのように、複数のクロックのサーバーに頼って、これらの問題を解決しますが、常に可能ではないネットワーク内の複数の正確な情報源の有効なメンテナンスが必要です。 PTPでのトランスペアレントクロック（TCS）の使用方法は、遅延計算から待ち時間をなくすことによって、輻輳問題を解決しますが、セキュリティやフォールトトレランス側面に対処しません。"
    },
    {
      "indent": 5,
      "text": "                              ____\n                       ______/    \\_____\n                   ___/                 \\____\n              ____/                          \\\n  ____       /           path 1              /           ___\n /    \\     /    ________________________    \\          /   \\\n/Master\\____\\___/                        \\____\\________/Slave\\\n\\Clock /    /   \\________ _______________/     \\       \\Clock/\n \\____/     \\                                  /        \\__ /\n             \\____       path 2             __/\n                  \\_______           ______/\n                          \\_________/",
      "raw": true
    },
    {
      "indent": 22,
      "text": "Figure 1: Multipath Connection",
      "ja": "図1：マルチパス接続"
    },
    {
      "indent": 3,
      "text": "Since master and slave clocks are often connected through more than one path in the network, as shown in Figure 1, [SLAVEDIV] suggested that a time synchronization protocol can be run over multiple paths, providing several advantages. First, it can significantly increase the clock accuracy as shown in [SLAVEDIV]. Second, this approach provides additional security, allowing the mitigation of man-in-the-middle attacks against the time synchronization protocol [DELAY-ATT]. Third, using multiple paths concurrently provides an inherent failure protection mechanism.",
      "ja": "図1に示すようにマスタとスレーブクロックは、しばしば、ネットワーク内の複数のパスを介して接続されているので、[SLAVEDIV時刻同期プロトコルは、いくつかの利点を提供する、複数のパス上で実行することができることを示唆しました。 【SLAVEDIV]に示すように、まず、それが大幅クロック精度を高めることができます。第二に、このアプローチは、時刻同期プロトコル[DELAY-ATT]に対するman-in-the-middle攻撃の緩和が可能、追加のセキュリティを提供します。第三に、複数のパスを使用すると同時に固有の障害保護メカニズムを提供します。"
    },
    {
      "indent": 3,
      "text": "This document introduces Multipath PTP (MPPTP) and Multipath NTP (MPNTP). The functionality of the multipath approach is defined at the network layer and does not require any changes in PTP or NTP.",
      "ja": "この文書では、マルチパスPTP（MPPTP）およびマルチパスNTP（MPNTP）を紹介します。マルチパスアプローチの機能は、ネットワーク層で定義され、PTP又はNTPの変更を必要としません。"
    },
    {
      "indent": 3,
      "text": "MPPTP and MPNTP are defined over IP networks. As IP networks typically combine ECMP routing, this property is leveraged for the multiple paths used in MPPTP and MPNTP. The key property of the multipath approach is that clocks in the network can use more than one IP address. Each {master IP, slave IP} address pair defines a path. Depending on the network topology and configuration, the IP combination pairs can form multiple diverse paths used by the multipath synchronization protocols. It has been shown [MULTI] that using multiple IP addresses over the wide Internet indeed allows two endpoints to attain multiple diverse paths.",
      "ja": "MPPTPとMPNTPは、IPネットワーク上で定義されています。 IPネットワークは、典型的には、ECMPルーティングを組み合わせるように、このプロパティはMPPTPとMPNTPで使用される複数のパスのために活用されます。マルチパスアプローチの重要な性質は、ネットワーク内のクロックが複数のIPアドレスを使用することができるということです。各{マスターIP、スレーブIP}アドレスペアは、パスを定義します。ネットワークトポロジと構成に応じて、IPの組み合わせのペアは、マルチパスの同期プロトコルによって使用される複数の多様な経路を形成することができます。広いインターネット上で複数のIPアドレスを使用すると、確かに2つのエンドポイントは、複数の多様なパスを達成することを可能にすることを[MULTI]を示してきました。"
    },
    {
      "indent": 3,
      "text": "This document introduces two variants of the multipath approach: (1) a variant that requires both master and slave nodes to support the multipath functionality, referred to as the dual-ended variant, and (2) a backward-compatible variant that allows a multipath clock to connect to a conventional single-path clock, referred to as the single-ended variant.",
      "ja": "（1）マルチパス機能をサポートするために、マスタとスレーブの両方のノードを必要とする変異体は、二重末端変異体と呼ばれ、マルチパスを可能にする（2）下位互換性変異体：この文書は、マルチパスアプローチの二つの変種を導入します従来の単一パスのクロックに接続するためのクロックは、シングルエンド変異体と称される。"
    },
    {
      "indent": 0,
      "text": "2. Conventions Used in This Document",
      "section_title": true,
      "ja": "この文書で使用される2.表記"
    },
    {
      "indent": 0,
      "text": "2.1. Abbreviations",
      "section_title": true,
      "ja": "2.1。略語"
    },
    {
      "indent": 3,
      "text": "BMC Best Master Clock [IEEE1588]",
      "ja": "BMCベストマスタークロック[IEEE1588]"
    },
    {
      "indent": 3,
      "text": "ECMP Equal-Cost Multipath",
      "ja": "ECMPイコールコストマルチパス"
    },
    {
      "indent": 3,
      "text": "LAN Local Area Network",
      "ja": "LANローカルエリアネットワーク"
    },
    {
      "indent": 3,
      "text": "MPNTP Multipath Network Time Protocol",
      "ja": "MPNTPマルチネットワーク・タイム・プロトコル"
    },
    {
      "indent": 3,
      "text": "MPPTP Multipath Precision Time Protocol",
      "ja": "MPPTPマルチ高精度時間プロトコル"
    },
    {
      "indent": 3,
      "text": "NTP Network Time Protocol [NTP]",
      "ja": "NTPネットワークタイムプロトコル[NTP]"
    },
    {
      "indent": 3,
      "text": "PTP Precision Time Protocol [IEEE1588]",
      "ja": "PTP高精度時間プロトコル[IEEE1588]"
    },
    {
      "indent": 0,
      "text": "2.2. Terminology",
      "section_title": true,
      "ja": "2.2。用語"
    },
    {
      "indent": 3,
      "text": "In the NTP terminology, a time synchronization protocol is run between a client and a server, while PTP uses the terms 'master' and 'slave'. Throughout this document, the sections that refer to both PTP and NTP generically use the terms 'master' and 'slave'.",
      "ja": "PTPは、用語「マスター」と「スレーブ」を使用しながら、NTPの用語では、時刻同期プロトコルは、クライアントとサーバの間で実行されます。本書では、PTPとNTPの両方を参照してくださいセクションでは、一般的に用語「マスター」と「スレーブ」を使用します。"
    },
    {
      "indent": 0,
      "text": "3. Multiple Paths in IP Networks",
      "section_title": true,
      "ja": "IPネットワークにおける3.複数のパス"
    },
    {
      "indent": 0,
      "text": "3.1. Load Balancing",
      "section_title": true,
      "ja": "3.1。ロードバランシング"
    },
    {
      "indent": 3,
      "text": "Traffic sent across IP networks is often load-balanced across multiple paths. The load-balancing decisions are typically based on packet header fields: source and destination addresses, Layer 4 ports, the Flow Label field in IPv6, etc.",
      "ja": "IPネットワークを介して送信されるトラフィックは、多くの場合、負荷分散、複数のパス間です。ロードバランシングの決定は、通常、パケットのヘッダフィールドに基づいています：送信元アドレスと宛先アドレス、レイヤ4つのポート、IPv6におけるフローラベルフィールドなど"
    },
    {
      "indent": 3,
      "text": "Three common load-balancing criteria are per-destination, per-flow, and per-packet. The per-destination load balancers take a load-balancing decision based on the destination IP address. Per-flow load balancers use various fields in the packet header, e.g., IP addresses and Layer 4 ports, for the load-balancing decision. Per-packet load balancers use flow-blind techniques such as round-robin without basing the choice on the packet content.",
      "ja": "3つの一般的なロードバランシングの基準は、フローごとの、およびパケットごとの、宛先単位です。宛先別ロードバランサは、宛先IPアドレスに基づいてロードバランシングの決定を取ります。フローごとのロードバランサは、ロードバランシングの決定のために、例えば、IPアドレスとレイヤ4つのポート、パケットのヘッダ内の様々なフィールドを使用します。パケット単位のロードバランサは、パケットの内容に選択肢を基づかずに、このようなラウンドロビンなどのフロー盲検法を使用しています。"
    },
    {
      "indent": 0,
      "text": "3.2. Using Multiple Paths Concurrently",
      "section_title": true,
      "ja": "3.2。同時に複数のパスの使用"
    },
    {
      "indent": 3,
      "text": "To utilize the diverse paths that traverse per-destination load balancers or per-flow load balancers, the packet transmitter can vary the IP addresses in the packet header. The analysis in [PARIS2] shows that a significant majority of the flows on the Internet traverse per-destination or per-flow load balancing. It presents statistics that 72% of the flows traverse per-destination load balancing and 39% of the flows traverse per-flow load balancing, while only a negligible part of the flows traverse per-packet load balancing. These statistics show that the vast majority of the traffic on the Internet is load-balanced based on packet header fields.",
      "ja": "宛先単位のロード・バランサまたはフローごとのロードバランサを横切る多様な経路を利用するために、パケット送信は、パケットヘッダ内のIPアドレスを変更することができます。 【PARIS2]における分析ごとの宛先インターネットトラバースまたはフローごとのロードバランシングの流れの大多数を示します。パケットごとのロードバランシング横切る流れのごくわずかな部分ながらそれは、フローの72％は、宛先単位のロードバランシングおよびフローごとのロードバランシングを横切る流れの39％を横切ること統計を提示します。これらの統計は、インターネット上のトラフィックの大半は、パケットのヘッダフィールドに基づいて負荷バランスであることを示しています。"
    },
    {
      "indent": 3,
      "text": "The approaches in this document are based on varying the source and destination IP addresses in the packet header. Possible extensions have been considered that also vary the UDP ports. However, some of the existing implementations of PTP and NTP use fixed UDP port values in both the source and destination UDP port fields and thus do not allow this approach.",
      "ja": "この文書に記載されているアプローチは、パケットヘッダ内のソースおよび宛先IPアドレスを変更することに基づいています。可能な拡張もUDPポートを変更することが検討されています。しかし、PTPの既存の実装の一部とNTPは、送信元と宛先の両方のUDPポートのフィールドに固定UDPポート値を使用するので、このアプローチを許可していません。"
    },
    {
      "indent": 0,
      "text": "3.3. Two-Way Paths",
      "section_title": true,
      "ja": "3.3。双方向パス"
    },
    {
      "indent": 3,
      "text": "A key property of IP networks is that packets forwarded from A to B do not necessarily traverse the same path as packets from B to A. Thus, we define a two-way path for a master-slave connection as a pair of one-way paths: the first from master to slave and the second from slave to master.",
      "ja": "IPネットワークの重要性は、Aに対するBのパケットはこのように、我々は、一方向の対としてマスタ・スレーブ接続のための双方向のパスを定義するようにBから転送されたパケットは、必ずしも同じ経路を横断しないことですパス：マスタからスレーブへの第一及びスレーブからマスタへの第二。"
    },
    {
      "indent": 3,
      "text": "If possible, a traffic engineering approach can be used to verify that time synchronization traffic is always forwarded through bidirectional two-way paths, i.e., that each two-way path uses the same route in the forward and reverse directions, thus allowing propagation time symmetry. However, in the general case, two-way paths do not necessarily use the same path for the forward and reverse directions.",
      "ja": "可能な場合、トラフィックエンジニアリング手法は、その時間同期トラフィックを検証するために使用することができ、常に各双方向パスが前方に同じ経路を使用すること、すなわち、双方向双方向経路を介して転送された方向と逆方向、従って伝播時間の対称性を可能にされます。しかし、一般的な場合には、双方向のパスが必ずしも前方に同じパスを使用して、方向を逆にしていません。"
    },
    {
      "indent": 0,
      "text": "4. Solution Overview",
      "section_title": true,
      "ja": "4.ソリューションの概要"
    },
    {
      "indent": 3,
      "text": "The multipath time synchronization protocols we present here are comprised of two building blocks: one is the path configuration and identification, and the other is the algorithm used by the slave to combine the information received from the various paths.",
      "ja": "我々はここに提示するマルチパスの時間同期プロトコルは、二つのビルディングブロックで構成されている：一つはパス構成と識別され、他方は、様々な経路から受​​信した情報を組み合わせるために、スレーブによって使用されるアルゴリズムです。"
    },
    {
      "indent": 0,
      "text": "4.1. Path Configuration and Identification",
      "section_title": true,
      "ja": "4.1。パスの設定と識別"
    },
    {
      "indent": 3,
      "text": "The master and slave clocks must be able to determine the path of transmitted protocol packets and to identify the path of incoming protocol packets. A path is determined by a {master IP, slave IP} address pair. The synchronization protocol message exchange is run independently through each path.",
      "ja": "マスタとスレーブクロックは、送信プロトコルパケットの経路を決定し、着信プロトコルパケットの経路を識別することができなければなりません。パスは{マスターIP、スレーブIP}アドレス対によって決定されます。同期プロトコルメッセージ交換は、各パスを介して独立して実行されます。"
    },
    {
      "indent": 3,
      "text": "Each IP address pair defines a two-way path and thus allows the clocks to bind a transmitted packet to a specific path or to identify the path of an incoming packet.",
      "ja": "各IPアドレス対は、双方向パスを定義し、したがって、クロックが特定のパスに送信されたパケットを結合するか、着信パケットのパスを識別することを可能にします。"
    },
    {
      "indent": 3,
      "text": "If possible, the routing tables across the network should be configured with multiple traffic-engineered paths between the pair of clocks. By carefully configuring the routers in such networks, it is possible to create diverse paths for each of the IP address pairs between two clocks in the network. However, in public and provider networks, the load-balancing behavior is hidden from the end users. In this case, the actual number of paths may be less than the number of IP address pairs, since some of the address pairs may share common paths.",
      "ja": "可能な場合、ネットワークを介してルーティングテーブルは、クロックの対の間の複数のトラフィック・エンジニアリングされたパスを使用して構成されるべきです。慎重にそのようなネットワーク内のルータを構成することにより、ネットワーク内の2つのクロック間のIPアドレスのペアの各々について多様なパスを作成することが可能です。しかし、公共およびプロバイダーネットワークで、ロードバランシング動作は、エンドユーザーから隠されています。アドレスペアの一部が共通の経路を共有することができるので、この場合には、パスの実際の数は、IPアドレス対の数よりも少なくてもよいです。"
    },
    {
      "indent": 0,
      "text": "4.2. Combining",
      "section_title": true,
      "ja": "4.2。結合"
    },
    {
      "indent": 3,
      "text": "Various methods can be used for combining the time information received from the different paths. The output of the combining algorithm is the accurate time offset. Combining methods are further discussed in Section 6.",
      "ja": "様々な方法が異なる経路から受​​信した時刻情報を組み合わせるために使用することができます。合成アルゴリズムの出力は、オフセット正確な時間です。組み合わせる方法は、第6節で議論されています。"
    },
    {
      "indent": 0,
      "text": "5. Multipath Time Synchronization over IP Networks",
      "section_title": true,
      "ja": "IPネットワーク経由5.マルチ時刻同期"
    },
    {
      "indent": 0,
      "text": "5.1. Overview",
      "section_title": true,
      "ja": "5.1。概要"
    },
    {
      "indent": 3,
      "text": "This section presents two variants of MPPTP and MPNTP: single-ended multipath time synchronization and dual-ended multipath time synchronization. In the first variant, the multipath approach is only implemented by the slave, and the master is not aware of its usage. In the second variant, all clocks use multiple paths.",
      "ja": "シングルエンドのマルチパス時間同期とデュアルエンドのマルチパス時間同期：このセクションでは、MPPTPとMPNTPの二つの変種を提示します。第1の変形例では、マルチパスアプローチは、スレーブによって実現され、マスタはその使用を認識していません。第二の変形例では、すべてのクロックは、複数のパスを使用します。"
    },
    {
      "indent": 3,
      "text": "The dual-ended variant provides higher path diversity by using multiple IP addresses at both ends, the master and slave, while the single-ended variant only uses multiple addresses at the slave. Consequently, the single-ended approach can interoperate with existing implementations that do not use multiple paths. The dual-ended and single-ended approaches can coexist in the same network; each slave selects the connection(s) it wants to make with the available masters. A dual-ended slave could switch to single-ended mode if it does not see any dual-ended masters available. A single-ended slave could connect to a single IP address of a dual-ended master.",
      "ja": "シングルエンドバリアントのみスレーブに複数のアドレスを使用しながら、二重末端変異体は、両端、マスターとスレーブで複数のIPアドレスを使用して、より高いパスダイバーシチを提供します。その結果、シングルエンドのアプローチは、複数のパスを使用していない既存の実装と相互運用することができます。終了 - デュアルおよびシングルエンドのアプローチは、同じネットワーク内に共存させることができます。各スレーブは、それが可能なマスターにしたいと考えコネクション（複数可）を選択します。それは任意のデュアルエンドマスターが利用でき見ていない場合、デュアル・エンド・スレーブは、シングルエンド・モードに切り替えることができます。シングルエンドのスレーブは、デュアルエンドマスターの単一IPアドレスに接続することができました。"
    },
    {
      "indent": 3,
      "text": "Multipath time synchronization, in both variants, requires clocks to use multiple IP addresses. Using multiple IP addresses introduces a trade-off. A large number of IP addresses allows a large number of diverse paths, providing the advantages of slave diversity discussed in Section 1. On the other hand, a large number of IP addresses is more costly, requires the network topology to be more redundant, and exacts extra management overhead.",
      "ja": "マルチパス時間同期は、両方のバリアントでは、複数のIPアドレスを使用するようにクロックを必要とします。複数のIPアドレスを使用すると、トレードオフを紹介します。 IPアドレスの数が多い一方、第1節で説明したスレーブ多様性の利点を提供し、多様なパスの数が多いことを可能にする、IPアドレスの多数は、より高価で、より冗長であることがネットワークトポロジを必要とし、余分な管理のオーバーヘッドを強要。"
    },
    {
      "indent": 3,
      "text": "If possible, the set of IP addresses for each clock should be chosen in a way that enables the establishment of paths that are the most different. If the load-balancing rules in the network are known, it is possible to choose the IP addresses in a way that enforces path diversity. However, even if the load-balancing scheme is not known, a careful choice of the IP addresses can increase the probability of path diversity. For example, choosing multiple addresses with different prefixes is likely to produce higher path diversity, as BGP routers are more likely to route these different prefixes through different routes.",
      "ja": "可能な場合は、各クロックのIPアドレスのセットは最も異なっているパスの確立を可能にする方法で選択する必要があります。ネットワーク内の負荷分散ルールが分かっている場合、パスダイバーシチを施行した方法でIPアドレスを選択することが可能です。しかし、ロードバランシングスキームが知られていない場合でも、IPアドレスの慎重な選択は、パスダイバーシチの確率を高めることができます。 BGPルータは、異なる経路を介してこれらの異なるプレフィックス経路にやすいように、例えば、異なるプレフィックスを有する複数のアドレスを選択すると、より高いパスダイバーシチを生成する可能性があります。"
    },
    {
      "indent": 3,
      "text": "The use of Network Address Translation (NAT) may significantly reduce the effectiveness of multipath synchronization in some cases. For example, if a master uses multiple IP addresses that are translated to a single IP address, the path diversity can be dramatically reduced compared to a network that does not use NAT. Thus, path discovery should be used to identify the possible paths between the master and slave. Path discovery is further discussed in Section 5.4.",
      "ja": "ネットワークアドレス変換（NAT）の使用が大幅にいくつかのケースでは、マルチパスの同期の有効性を減らすことができます。マスタが単一のIPアドレスに変換された複数のIPアドレスを使用する場合、例えば、パスダイバーシティは劇的にNATを使用しないネットワークに比べて小さくすることができます。したがって、パス検出は、マスタとスレーブとの間の可能な経路を同定するために使用されるべきです。パスの発見はさらに5.4節で議論されています。"
    },
    {
      "indent": 3,
      "text": "The concept of using multiple IP addresses or multiple interfaces is well established and is being used today by various applications and protocols, e.g., [MPTCP]. Using multiple interfaces introduces some challenges and issues, which were presented and discussed in [MIF].",
      "ja": "複数のIPアドレスまたは複数のインターフェイスを使用する概念は、十分に確立されており、[MPTCP]、例えば、様々なアプリケーションおよびプロトコルによって現在使用されています。複数のインターフェースを使用して提示し、[MIF]で議論されたいくつかの課題や問題を導入します。"
    },
    {
      "indent": 3,
      "text": "The descriptions in this section refer to the end-to-end scheme of PTP but are similarly applicable to the peer-to-peer scheme. MPNTP, as described in this document, refers to the NTP client-server mode, although the concepts described here can be extended to include the symmetric variant as well.",
      "ja": "このセクションの説明は、PTPのエンドツーエンド方式を指すが、ピア・ツー・ピア方式にも同様に適用可能です。ここで説明する概念は同様に対称的変異体を含むように拡張することができるがMPNTPは、本文書に記載されているように、NTPクライアントサーバモードを指します。"
    },
    {
      "indent": 3,
      "text": "Multipath synchronization by nature requires protocol messages to be sent as unicast. Specifically in PTP, the following messages must be sent as unicast in MPPTP: Sync, Delay_Req, Delay_Resp, PDelay_Req, PDelay_Resp, Follow_Up, and PDelay_Resp_Follow_Up. Note that [IEEE1588] allows these messages to be sent either as multicast or as unicast.",
      "ja": "本来、マルチパスの同期化は、ユニキャストとして送信されるプロトコルメッセージが必要です。具体的にはPTPに、次のメッセージがMPPTPにユニキャストとして送信されなければならない：同期、のDelay_req、こうしてdelayの大き、PDelay_Req、PDelay_Resp、Follow_Up、及びPDelay_Resp_Follow_Upを。 [IEEE1588]これらのメッセージはマルチキャストとして、またはユニキャストのいずれかとして送信されることを可能にすることに留意されたいです。"
    },
    {
      "indent": 0,
      "text": "5.2. Single-Ended Multipath Synchronization",
      "section_title": true,
      "ja": "5.2。シングルエンドのマルチパスの同期"
    },
    {
      "indent": 3,
      "text": "In the single-ended approach, only the slave is aware of the fact that multiple paths are used, while the master is agnostic to the usage of multiple paths. This approach allows a hybrid network, where some of the clocks are multipath clocks and others are conventional one-path clocks. A single-ended multipath clock presents itself to the network as N independent clocks, using N IP addresses, as well as N clockIdentity [IEEE1588] values (in PTP). Thus, the usage of multiple slave identities by a slave clock is transparent from the master's point of view, such that it treats each of the identities as a separate slave clock.",
      "ja": "シングルエンドのアプローチでは、唯一のスレーブは、マスターが複数のパスの使用にとらわれている間に複数のパスが使用されるという事実を認識しています。このアプローチは、クロックのいくつかは、マルチクロックと他は従来の1パスクロックされているハイブリッドネットワークを可能にします。シングルエンドのマルチクロック（PTPで）N IPアドレスを使用してN個の独立したクロックのようなネットワーク、ならびにN clockIdentity [IEEE1588]の値に自分自身を提示します。従って、スレーブクロックによって複数のスレーブIDの使用は、それが別のスレーブ・クロックとしてのアイデンティティの各々を処理するように、ビューのマスターの観点から透明です。"
    },
    {
      "indent": 0,
      "text": "5.2.1. Single-Ended MPPTP Synchronization Message Exchange",
      "section_title": true,
      "ja": "5.2.1。シングルエンドMPPTP同期メッセージ交換"
    },
    {
      "indent": 3,
      "text": "The single-ended MPPTP message exchange procedure is as follows.",
      "ja": "次のようにシングルエンドMPPTPメッセージ交換手順があります。"
    },
    {
      "indent": 3,
      "text": "o Each single-ended MPPTP clock has a fixed set of N IP addresses and N corresponding clockIdentities. Each clock arbitrarily defines one of its IP addresses and clockIdentity values as the clock primary identity.",
      "ja": "O各シングルエンドMPPTPクロックは、N IPアドレスの固定セットを有し、N clockIdentities対応します。各クロックは、任意にクロックプライマリIDとそのIPアドレスとclockIdentity値のいずれかを定義します。"
    },
    {
      "indent": 3,
      "text": "o A single-ended MPPTP port sends Announce messages only from its primary identity, according to the BMC algorithm.",
      "ja": "OシングルエンドMPPTPポートは、BMCアルゴリズムに従って、唯一そのプライマリIDからのメッセージを発表送信します。"
    },
    {
      "indent": 3,
      "text": "o The BMC algorithm at each clock determines the master, based on the received Announce messages.",
      "ja": "O各クロックにおけるBMCアルゴリズムは、受信されたアナウンスメッセージに基づいてマスターを決定します。"
    },
    {
      "indent": 3,
      "text": "o A single-ended MPPTP port that is in the 'slave' state uses unicast negotiation to request the master to transmit unicast messages to each of the N slave clockIdentity values. The slave port periodically sends N Signaling messages to the master, using each of its N identities. The Signaling message includes the REQUEST_UNICAST_TRANSMISSION TLV [IEEE1588].",
      "ja": "「スレーブ」状態にあるOシングルエンドMPPTPポートは、NスレーブclockIdentity値の各々にユニキャストメッセージを送信するマスタを要求するユニキャストネゴシエーションを使用しています。スレーブ・ポートは、定期的にそのNアイデンティティのそれぞれを使用して、マスターにNシグナリングメッセージを送信します。シグナリングメッセージは、[IEEE1588] REQUEST_UNICAST_TRANSMISSION TLVを含みます。"
    },
    {
      "indent": 3,
      "text": "o The master periodically sends unicast Sync messages from its primary identity, identified by the sourcePortIdentity [IEEE1588] and IP address, to each of the slave identities.",
      "ja": "Oマスタは、定期的にスレーブIDのそれぞれにsourcePortIdentity [IEEE1588]とIPアドレスによって識別され、その一次アイデンティティ、からユニキャスト同期メッセージを送信します。"
    },
    {
      "indent": 3,
      "text": "o The slave, upon receiving a Sync message, identifies its path according to the destination IP address. The slave sends a Delay_Req unicast message to the primary identity of the master. The Delay_Req is sent using the slave identity corresponding to the path through which the Sync was received. Note that the rate of Delay_Req messages may be lower than the Sync message rate, and thus a Sync message is not necessarily followed by a Delay_Req.",
      "ja": "スレーブO、同期メッセージを受信すると、宛先IPアドレスに応じて、その経路を特定します。スレーブはマスタの主IDにのDelay_reqユニキャストメッセージを送信します。 Delay_reqは同期を受信した通る経路に対応するスレーブIDを使用して送信されます。 Delay_reqメッセージの速度が同期メッセージ率よりも低くてもよいので、同期メッセージは、必ずしものDelay_req続いていないことに留意されたいです。"
    },
    {
      "indent": 3,
      "text": "o The master, in response to a Delay_Req message from the slave, responds with a Delay_Resp message using the IP address and sourcePortIdentity from the Delay_Req message.",
      "ja": "Oマスタは、スレーブからのDelay_reqメッセージに応答して、のDelay_reqメッセージからIPアドレスとsourcePortIdentityを用いこうしてdelayの大きメッセージで応答します。"
    },
    {
      "indent": 3,
      "text": "o Upon receiving the Delay_Resp message, the slave identifies the path using the destination IP address and the requestingPortIdentity [IEEE1588]. The slave can then compute the corresponding path delay and the offset from the master.",
      "ja": "Oこうしてdelayの大きメッセージを受信すると、スレーブは、宛先IPアドレスおよびrequestingPortIdentity [IEEE1588]を使用してパスを識別する。スレーブは、対応するパス遅延を計算し、マスタからオフセットすることができます。"
    },
    {
      "indent": 3,
      "text": "o The slave combines the information from all negotiated paths.",
      "ja": "Oスレーブは全てネゴシエートパスからの情報を合成します。"
    },
    {
      "indent": 0,
      "text": "5.2.2. Single-Ended MPNTP Synchronization Message Exchange",
      "section_title": true,
      "ja": "5.2.2。シングルエンドMPNTP同期メッセージ交換"
    },
    {
      "indent": 3,
      "text": "The single-ended MPNTP message exchange procedure is as follows.",
      "ja": "次のようにシングルエンドMPNTPメッセージ交換手順があります。"
    },
    {
      "indent": 3,
      "text": "o A single-ended MPNTP client has N separate identities, i.e., N IP addresses. The assumption is that the server information, including its IP address, is known to the NTP clients. This is a fair assumption, as typically the address(es) of the NTP server(s) is provided to the NTP client by configuration.",
      "ja": "OシングルエンドMPNTPクライアントは、N個の別個のアイデンティティ、すなわち、N IPアドレスを持っています。仮定は、そのIPアドレスを含むサーバ情報は、NTPクライアントに知られていることです。通常、NTPサーバ（複数可）のアドレス（複数可）を設定することにより、NTPクライアントに提供され、これは、公正な仮定です。"
    },
    {
      "indent": 3,
      "text": "o A single-ended MPNTP client initiates NTP with an NTP server N times, using each of its N identities.",
      "ja": "OシングルエンドMPNTPクライアントは、そのNアイデンティティのそれぞれを使用して、NTPサーバN回でNTPを開始します。"
    },
    {
      "indent": 3,
      "text": "o NTP is maintained between the server and each of the N client identities.",
      "ja": "O NTPは、サーバとNのクライアントIDのそれぞれとの間で維持されます。"
    },
    {
      "indent": 3,
      "text": "o The client sends NTP messages to the master using each of its N identities.",
      "ja": "Oクライアントは、そのNアイデンティティのそれぞれを使用してマスターにNTPメッセージを送信します。"
    },
    {
      "indent": 3,
      "text": "o The server responds to the client's NTP messages using the IP address from the received NTP packet.",
      "ja": "Oサーバは、受信したNTPパケットからIPアドレスを使用して、クライアントのNTPメッセージに応答します。"
    },
    {
      "indent": 3,
      "text": "o The client, upon receiving an NTP packet, uses the IP destination address to identify the path through which it came, and it uses the time information accordingly.",
      "ja": "クライアントO、NTPパケットを受信すると、それが来て、それを通してパスを識別するためのIP宛先アドレスを使用し、それに応じて時間情報を使用しています。"
    },
    {
      "indent": 3,
      "text": "o The client combines the information from all paths.",
      "ja": "Oクライアントは、すべてのパスからの情報を組み合わせています。"
    },
    {
      "indent": 0,
      "text": "5.3. Dual-Ended Multipath Synchronization",
      "section_title": true,
      "ja": "5.3。デュアルエンドマルチパスの同期"
    },
    {
      "indent": 3,
      "text": "In dual-ended multipath synchronization, each clock has N IP addresses. Time synchronization messages are exchanged between some of the combinations of {master IP, slave IP} addresses, allowing multiple paths between the master and slave. Note that the actual number of paths between the master and slave may be less than the number of chosen {master IP, slave IP} address pairs.",
      "ja": "デュアルエンドのマルチパスの同期では、各クロックは、N IPアドレスを持っています。時刻同期メッセージは、マスタとスレーブとの間の複数のパスを可能{マスターIP、スレーブIP}アドレスの組み合わせの一部との間で交換されます。マスタとスレーブとの間のパスの実際の数は、選択された{マスターIP、スレーブIPアドレス}ペアの数より少なくてもよいことに留意されたいです。"
    },
    {
      "indent": 3,
      "text": "Once the multiple two-way connections are established, a separate synchronization protocol exchange instance is run through each of them.",
      "ja": "複数の双方向接続が確立されると、別の同期プロトコル交換インスタンスは、それらのそれぞれを介して実行されます。"
    },
    {
      "indent": 0,
      "text": "5.3.1. Dual-Ended MPPTP Synchronization Message Exchange",
      "section_title": true,
      "ja": "5.3.1。デュアルエンドMPPTP同期メッセージ交換"
    },
    {
      "indent": 3,
      "text": "The dual-ended MPPTP message exchange procedure is as follows.",
      "ja": "デュアルエンドMPPTPメッセージ交換手順は以下のようです。"
    },
    {
      "indent": 3,
      "text": "o Every clock has N IP addresses but uses a single clockIdentity.",
      "ja": "Oすべてのクロックは、N個のIPアドレスを持っていますが、単一clockIdentityを使用しています。"
    },
    {
      "indent": 3,
      "text": "o The BMC algorithm at each clock determines the master. The master is identified by its clockIdentity, allowing other clocks to know the multiple IP addresses it uses.",
      "ja": "O各クロックにおけるBMCアルゴリズムは、マスターを決定します。マスターは、他のクロックは、それが使用する複数のIPアドレスを知ることができるように、そのclockIdentityによって識別されます。"
    },
    {
      "indent": 3,
      "text": "o When a clock sends an Announce message, it sends it from each of its IP addresses with its clockIdentity.",
      "ja": "クロックがアナウンスメッセージを送信すると、O、それはそのclockIdentityとそのIPアドレスのそれぞれから、それを送信します。"
    },
    {
      "indent": 3,
      "text": "o A dual-ended MPPTP port that is in the 'slave' state uses unicast negotiation to request the master to transmit unicast messages to some or all of its N_s IP addresses. This negotiation is done individually between a slave IP address and the corresponding master IP address with which the slave desires a connection. The slave port periodically sends Signaling messages to the master, using some or all of its N_s IP addresses as the source, to the corresponding master's N_m IP addresses. The Signaling message includes the REQUEST_UNICAST_TRANSMISSION TLV [IEEE1588].",
      "ja": "「スレーブ」状態にあるOデュアルエンドMPPTPポートは、そのN_s IPアドレスの一部または全てにユニキャストメッセージを送信するためにマスターを要求するために、ユニキャストネゴシエーションを使用しています。このネゴシエーションは、スレーブIPアドレス及びスレーブが接続を希望すると、対応するマスターIPアドレスとの間に個別に行われます。スレーブ・ポートは、定期的に対応するマスターのN_m IPアドレスに、ソースとしてそのN_s IPアドレスの一部またはすべてを使用して、マスターにメッセージをシグナリング送信します。シグナリングメッセージは、[IEEE1588] REQUEST_UNICAST_TRANSMISSION TLVを含みます。"
    },
    {
      "indent": 6,
      "text": "('N_s' and 'N_m' indicate the number of IP addresses of the slave and master, respectively.)",
      "ja": "（「N_s」と「N_m」は、それぞれ、スレーブとマスタのIPアドレスの数を示します。）"
    },
    {
      "indent": 3,
      "text": "o The master periodically sends unicast Sync messages from each of its IP addresses to the corresponding slave IP addresses for which a unicast connection was negotiated.",
      "ja": "Oマスタは、定期的にユニキャスト接続がネゴシエートされたため、対応するスレーブIPアドレスへのIPアドレスの各々からユニキャスト同期メッセージを送信します。"
    },
    {
      "indent": 3,
      "text": "o The slave, upon receiving a Sync message, identifies its path according to the {source IP, destination IP} addresses. The slave sends a Delay_Req unicast message, swapping the source and destination IP addresses from the Sync message. Note that the rate of Delay_Req messages may be lower than the Sync message rate, and thus a Sync message is not necessarily followed by a Delay_Req.",
      "ja": "スレーブO、同期メッセージを受信すると、{送信元IP、宛先IP}アドレスに従ってそのパスを識別する。スレーブは同期メッセージから送信元および宛先IPアドレスを交換する、のDelay_reqユニキャストメッセージを送信します。 Delay_reqメッセージの速度が同期メッセージ率よりも低くてもよいので、同期メッセージは、必ずしものDelay_req続いていないことに留意されたいです。"
    },
    {
      "indent": 3,
      "text": "o The master, in response to a Delay_Req message from the slave, responds with a Delay_Resp message using the sourcePortIdentity from the Delay_Req message and swapping the IP addresses from the Delay_Req.",
      "ja": "マスターO、スレーブからのDelay_reqメッセージに応答して、のDelay_reqメッセージからsourcePortIdentityを使用してのDelay_reqからIPアドレスを交換こうしてdelayの大きメッセージで応答します。"
    },
    {
      "indent": 3,
      "text": "o Upon receiving the Delay_Resp message, the slave identifies the path using the {source IP, destination IP} address pair. The slave can then compute the corresponding path delay and the offset from the master.",
      "ja": "Oこうしてdelayの大きメッセージを受信すると、スレーブは、{送信元IP、宛先IPアドレス}のペアを使用してパスを識別する。スレーブは、対応するパス遅延を計算し、マスタからオフセットすることができます。"
    },
    {
      "indent": 3,
      "text": "o The slave combines the information from all negotiated paths.",
      "ja": "Oスレーブは全てネゴシエートパスからの情報を合成します。"
    },
    {
      "indent": 0,
      "text": "5.3.2. Dual-Ended MPNTP Synchronization Message Exchange",
      "section_title": true,
      "ja": "5.3.2。デュアルエンドMPNTP同期メッセージ交換"
    },
    {
      "indent": 3,
      "text": "The MPNTP message exchange procedure is as follows.",
      "ja": "MPNTPメッセージ交換手順は以下の通りです。"
    },
    {
      "indent": 3,
      "text": "o Each NTP clock has a set of N IP addresses. The assumption is that the server information, including its multiple IP addresses, is known to the NTP clients.",
      "ja": "O各NTPクロックは、N IPアドレスのセットを持っています。仮定は、その複数のIPアドレスを含むサーバ情報は、NTPクライアントに知られていることです。"
    },
    {
      "indent": 3,
      "text": "o The MPNTP client chooses N_svr server IP addresses and N_c client IP addresses and initiates the N_svr*N_c instances of the protocol, one for each {server IP, client IP} address pair, allowing the client to combine the information from the N_s*N_c paths.",
      "ja": "MPNTPクライアントはN_svrサーバーのIPアドレスとN_CクライアントIPアドレスを選択し、プロトコルのN_svr * N_Cインスタンスを開始し、各{サーバIP、クライアントIP}アドレスペアに対して1つ、クライアントはN_s * N_Cからの情報を組み合わせることが可能oをパス。"
    },
    {
      "indent": 6,
      "text": "('N_svr' and 'N_c' indicate the number of IP addresses of the server and client, respectively, with which a client chooses to connect.)",
      "ja": "（「N_svr」と「N_Cは、」クライアントが接続することを選択したと、それぞれ、サーバとクライアントのIPアドレスの数を示します。）"
    },
    {
      "indent": 3,
      "text": "o The client sends NTP messages to the master using each of the source-destination address combinations.",
      "ja": "Oクライアントは、ソース、宛先アドレスの各組み合わせを使用してマスターにNTPメッセージを送信します。"
    },
    {
      "indent": 3,
      "text": "o The server responds to the client's NTP messages using the IP address combination from the received NTP packet.",
      "ja": "Oサーバは、受信したNTPパケットからIPアドレスの組み合わせを使用して、クライアントのNTPメッセージに応答します。"
    },
    {
      "indent": 3,
      "text": "o Using the {source IP, destination IP} address pair in the received packets, the client identifies the path and performs its computations for each of the paths accordingly.",
      "ja": "受信パケット内の{送信元IP、宛先IP}アドレス対を用いてO、クライアントは、パスを識別し、それに応じてパスの各々のために計算を行います。"
    },
    {
      "indent": 3,
      "text": "o The client combines the information from all paths.",
      "ja": "Oクライアントは、すべてのパスからの情報を組み合わせています。"
    },
    {
      "indent": 0,
      "text": "5.4. Using Traceroute for Path Discovery",
      "section_title": true,
      "ja": "5.4。パスの検出のためのtracerouteの使用"
    },
    {
      "indent": 3,
      "text": "The approach described thus far uses multiple IP addresses in a single clock to create multiple paths. However, although each two-way path is defined by a different {master IP, slave IP} address pair, some of the IP address pairs may traverse exactly the same network path, making them redundant.",
      "ja": "これまでに記載されたアプローチは、複数のパスを作成するために、単一クロックで複数のIPアドレスを使用します。各双方向パスが異なる{マスターIP、スレーブIP}アドレスのペアによって定義されているものの、IPアドレスのペアのうちのいくつかは、それらを冗長化、全く同じネットワークパスを横断することができます。"
    },
    {
      "indent": 3,
      "text": "Traceroute-based path discovery can be used for filtering only the IP addresses that obtain diverse paths. 'Paris traceroute' [PARIS] and 'TraceFlow' [TRACEFLOW] are examples of tools that discover the paths between two points in the network. It should be noted that this filtering approach is effective only if the Traceroute implementation uses the same IP addresses and UDP ports as the synchronization protocol packets. Since some Traceroute implementations vary the UDP ports, they may not be effective in identifying and filtering redundant paths in synchronization protocols.",
      "ja": "トレースルートによる経路発見は、多様な経路を得る唯一のIPアドレスをフィルタリングするために使用することができます。 「パリのtraceroute」[PARIS]と「TraceFlow」[TRACEFLOW]は、ネットワークの2点間の経路を発見するツールの一例です。なお、このフィルタリングアプローチは、tracerouteの実装は同期プロトコル・パケットと同じIPアドレスとUDPポートを使用する場合にのみ有効であることに留意すべきです。いくつかのtracerouteの実装はUDPポートを変化させるので、同期プロトコルに冗長パスを特定し、フィルタリングするのに有効ではないかもしれません。"
    },
    {
      "indent": 3,
      "text": "Traceroute-based filtering can be implemented by both master and slave nodes, or it can be restricted to run only on slave nodes to reduce the overhead on the master. For networks that guarantee that the path of the timing packets in the forward and reverse directions are the same, path discovery should only be performed at the slave.",
      "ja": "トレースルート・ベースのフィルタリングは、マスタとスレーブの両方のノードによって実現することができる、又はマスターのオーバーヘッドを減らすためにのみスレーブノード上で実行するように制限することができます。順方向タイミングパケットの経路と逆方向に同じ、経路探索のみスレーブで実行されるべきであることを保証するネットワークのため。"
    },
    {
      "indent": 3,
      "text": "Since network routes change over time, path discovery and redundant path filtering should be performed periodically. Two {master IP, slave IP} address pairs that produce two diverse paths may be rerouted to use the same paths. Thus, the set of addresses that are used by each clock should be reassessed regularly.",
      "ja": "ネットワークルートが時間とともに変化するので、パス発見及び冗長パスフィルタは定期的に行われるべきです。 2つの多様な経路を生成する2つ{マスターIP、スレーブIP}アドレスのペアは、同じパスを使用するように再ルーティングされてもよいです。このように、各クロックで使用されているアドレスのセットを定期的に再評価する必要があります。"
    },
    {
      "indent": 0,
      "text": "5.5. Using Unicast Discovery for MPPTP",
      "section_title": true,
      "ja": "5.5。 MPPTPのためのユニキャスト・ディスカバリーを使用しました"
    },
    {
      "indent": 3,
      "text": "As presented above, MPPTP uses Announce messages and the BMC algorithm to discover the master. The unicast discovery option of PTP can be used as an alternative.",
      "ja": "上記の通り、MPPTPはマスターを発見するために発表メッセージやBMCアルゴリズムを使用しています。 PTPのユニキャストディスカバリオプションが代替として使用することができます。"
    },
    {
      "indent": 3,
      "text": "When using unicast discovery, the MPPTP slave ports maintain a list of the IP addresses of the master. The slave port uses unicast negotiation to request unicast service from the master as follows:",
      "ja": "ユニキャストディスカバリを使用する場合は、MPPTPスレーブポートは、マスターのIPアドレスのリストを維持します。スレーブポートは、次のようにマスタからユニキャストサービスを要求するために、ユニキャストネゴシエーションを使用しています。"
    },
    {
      "indent": 3,
      "text": "o In single-ended MPPTP, the slave uses unicast negotiation from each of its identities to the master's (only) identity.",
      "ja": "OシングルエンドMPPTPでは、スレーブは、マスタの（唯一の）アイデンティティへのアイデンティティのそれぞれからのユニキャストネゴシエーションを使用しています。"
    },
    {
      "indent": 3,
      "text": "o In dual-ended MPPTP, the slave uses unicast negotiation from its IP addresses, each to a corresponding master IP address, to request unicast synchronization messages.",
      "ja": "OデュアルエンドMPPTPでは、スレーブは、ユニキャスト同期メッセージを要求するために、対応するマスタIPアドレスにそれぞれ、そのIPアドレスからのユニキャストネゴシエーションを使用しています。"
    },
    {
      "indent": 3,
      "text": "Afterwards, the message exchange continues as described in Sections 5.2.1 and 5.3.1.",
      "ja": "セクション5.2.1および5.3.1に記載したように、その後、メッセージ交換を継続します。"
    },
    {
      "indent": 3,
      "text": "The unicast discovery option can be used in networks that do not support multicast or in networks in which the master clocks are known in advance. In particular, unicast discovery avoids multicasting Announce messages.",
      "ja": "ユニキャストディスカバリオプションは、マルチキャストをサポートしたり、マスタークロックが事前に知られているネットワークではないネットワークで使用することができます。具体的には、ユニキャストの発見はマルチキャストAnnounceメッセージを回避できます。"
    },
    {
      "indent": 0,
      "text": "6. Combining Algorithm",
      "section_title": true,
      "ja": "6.アルゴリズムを組み合わせます"
    },
    {
      "indent": 3,
      "text": "Previous sections discussed the methods of creating the multiple paths and obtaining the time information required by the slave algorithm. Once the time information is received through each of the paths, the slave should use a combining algorithm, which consolidates the information from the different paths into a single clock. Various methods have been suggested for combining information from different paths or from different clocks, e.g., [NTP] [SLAVEDIV] [HIGH-AVAI] [KALMAN]. The choice of the combining algorithm is local to the slave and does not affect interoperability. Hence, this document does not define a specific method to be used by the slave. The combining algorithm should be chosen carefully based on the system properties, as different combining algorithms provide different advantages. For example, some combining algorithms (e.g., [NTP] [DELAY-ATT]) are intended to be robust in the face of security attacks, while other combining algorithms (e.g., [KALMAN]) are more resilient to random delay variation.",
      "ja": "前のセクションでは、複数のパスを作成し、スレーブアルゴリズムによって必要とされる時間情報を得る方法について議論しました。時刻情報は、経路のそれぞれを介して受信されると、スレーブは単一クロックに異なるパスからの情報を統合合成アルゴリズムを使用すべきです。様々な方法が[SLAVEDIV] [HIGH-のAvaI] [カルマン] [NTP]、例えば、異なる経路または異なるクロックからの情報を組み合わせるための提案されています。組み合わせアルゴリズムの選択は、スレーブにローカルであり、相互運用性には影響を与えません。したがって、この文書は、スレーブが使用する特定の方法を定義していません。異なる結合アルゴリズムが異なる利点を提供するように結合アルゴリズムは、システムの特性に基づいて慎重に選択しなければなりません。例えば、いくつかの組み合わせのアルゴリズム（例えば、[NTP] [DELAY-ATT]）がセキュリティ攻撃に直面して堅牢であることが意図され、他の組み合わせのアルゴリズム（例えば、[カルマンフィルタ]）のランダムな遅延変動に対してより弾力されています。"
    },
    {
      "indent": 0,
      "text": "7. Security Considerations",
      "section_title": true,
      "ja": "7.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "The security aspects of time synchronization protocols are discussed in detail in [RFC7384]. The methods described in this document propose to run a time synchronization protocol through redundant paths and thus allow the detection and mitigation of man-in-the-middle attacks, as described in [DELAY-ATT]. Specifically, multipath synchronization can mitigate the following threats (as per [RFC7384]):",
      "ja": "時刻同期プロトコルのセキュリティ態様は、[RFC7384]に詳細に記載されています。 [DELAY-ATT]に記載されているように、本書に記載された方法は、冗長パスを介して時間同期化プロトコルを実行し、したがって、man-in-the-middle攻撃の検出と軽減を可能にすることを提案します。具体的には、マルチパスの同期化は、以下の脅威を軽減することができる（[RFC7384]に従って）。"
    },
    {
      "indent": 3,
      "text": "o Packet manipulation (Section 3.2.1 of [RFC7384]).",
      "ja": "Oパケット操作（[RFC7384]のセクション3.2.1）。"
    },
    {
      "indent": 3,
      "text": "o Packet interception and removal (Section 3.2.5 of [RFC7384]).",
      "ja": "Oパケット傍受及び除去（[RFC7384]のセクション3.2.5）。"
    },
    {
      "indent": 3,
      "text": "o Packet delay manipulation (Section 3.2.6 of [RFC7384]).",
      "ja": "Oパケット遅延操作（[RFC7384]のセクション3.2.6）。"
    },
    {
      "indent": 3,
      "text": "It should be noted that when using multiple paths, these paths may partially overlap, and thus an attack that takes place in a common segment of these paths is not mitigated by the redundancy. Moreover, an on-path attacker may in some cases have access to more than one router or may be able to migrate from one router to another. Therefore, when using multiple paths, it is important for the paths to be as diverse and as independent as possible, making the redundancy scheme more tolerant to on-path attacks.",
      "ja": "複数のパスを使用する場合、これらのパスが部分的に重なってもよいことに留意すべきであるので、これらの経路の共通区間で行われる攻撃は、冗長性によって軽減されません。また、オン・パス攻撃者は、いくつかのケースでは、複数のルータへのアクセスを有していてもよく、または別のルータから移動することができてもよいです。複数のパスを使用するときにパスがオンパス攻撃に冗長方式は、より寛容作る、など多様でできるだけ依存しないようにするために、したがって、それは重要です。"
    },
    {
      "indent": 3,
      "text": "It should be noted that the multipath approach requires the master (or NTP server) to dedicate more resources to each slave (client) than the conventional single-path approach. Hence, well-known Distributed Denial-of-Service (DDoS) attacks may potentially be amplified when the multipath approach is enabled.",
      "ja": "マルチパスアプローチは、従来の単一パス・アプローチよりも各スレーブ（クライアント）に、より多くのリソースを専用するマスタ（またはNTPサーバ）が必要であることに留意すべきです。従って、周知の分散サービス拒否（DDoS）攻撃の攻撃マルチパスアプローチが有効な場合に、潜在的に増幅することができます。"
    },
    {
      "indent": 0,
      "text": "8. Scope of the Experiment",
      "section_title": true,
      "ja": "実験の範囲8."
    },
    {
      "indent": 3,
      "text": "This memo is published as an Experimental RFC. The purpose of the experimental period is to allow the community to analyze and to verify the methods defined in this document. An experimental evaluation of some of these methods has been published in [MULTI]. It is expected that the experimental period will allow the methods to be further investigated and verified by the community. The duration of the experiment is expected to be no less than two years from the publication of this document.",
      "ja": "このメモは、実験的RFCとして公開されています。実験期間の目的は、コミュニティが分析するために、このドキュメントで定義されたメソッドを検証できるようにすることです。これらの方法のうちのいくつかの実験的な評価は、[MULTI]に掲載されました。実験期間は、方法はさらに、コミュニティによって調査したり確認することができるようになると期待されています。実験の期間は、この文書の公表から2年以上ではないと予想されます。"
    },
    {
      "indent": 0,
      "text": "9. References",
      "section_title": true,
      "ja": "9.参考文献"
    },
    {
      "indent": 0,
      "text": "9.1. Normative References",
      "section_title": true,
      "ja": "9.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[IEEE1588] IEEE Instrumentation and Measurement Society, \"IEEE Standard for a Precision Clock Synchronization Protocol for Networked Measurement and Control Systems\", IEEE Std 1588-2008, DOI 10.1109/IEEESTD.2008.4579760.",
      "ja": "[IEEE1588] IEEE計測および計測学会、「ネットワーク測定および制御システムのための高精度クロック同期プロトコルのためのIEEE規格」、IEEE STD 1588-2008、DOI 10.1109 / IEEESTD.2008.4579760。"
    },
    {
      "indent": 3,
      "text": "[NTP] Mills, D., Martin, J., Ed., Burbank, J., and W. Kasch, \"Network Time Protocol Version 4: Protocol and Algorithms Specification\", RFC 5905, DOI 10.17487/RFC5905, June 2010, <http://www.rfc-editor.org/info/rfc5905>.",
      "ja": "[NTP]ミルズ、D.、マーティン、J.、エド、バーバンク、J.、およびW. Kasch、 \"ネットワークタイムプロトコルバージョン4：プロトコルとアルゴリズムの仕様\"。、RFC 5905、DOI 10.17487 / RFC5905、2010年6月、 <http://www.rfc-editor.org/info/rfc5905>。"
    },
    {
      "indent": 0,
      "text": "9.2. Informative References",
      "section_title": true,
      "ja": "9.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[ASYMMETRY] He, Y., Faloutsos, M., Krishnamurthy, S., and B. Huffaker, \"On routing asymmetry in the Internet\", IEEE GLOBECOM, DOI 10.1109/GLOCOM.2005.1577769, December 2005.",
      "ja": "\"インターネットで非対称ルーティングについて\" [ASYMMETRY]彼、Y.、Faloutsos、M.、Krishnamurthy、S.、およびB. Huffaker、IEEEのGLOBECOM、DOI 10.1109 / GLOCOM.2005.1577769 2005年12月。"
    },
    {
      "indent": 3,
      "text": "[ASYMMETRY2] Pathak, A., Pucha, H., Zhang, Y., Hu, C., and Z. Mao, \"A measurement study of internet delay asymmetry\", International Conference on Passive and Active Network Measurement 2008, DOI 10.1007/978-3-540-79232-1_19, April 2008.",
      "ja": "[ASYMMETRY2] Pathak、A.、Pucha、H.、張、Y.、胡、C.、およびZ.真央、 \"インターネット遅延非対称性の測定調査\"、パッシブとアクティブネットワーク計測2008、DOI 10.1007に関する国際会議/ 978-3-540-79232-1_19、2008年4月。"
    },
    {
      "indent": 3,
      "text": "[DELAY-ATT] Mizrahi, T., \"A Game Theoretic Analysis of Delay Attacks against Time Synchronization Protocols\", IEEE International Symposium on Precision Clock Synchronization for Measurement, Control and Communication (ISPCS), DOI 10.1109/ISPCS.2012.6336612, September 2012.",
      "ja": "計測、制御と通信のための高精度クロック同期（ISPCS）、DOI 10.1109 / ISPCS.2012.6336612、2012年9月の[DELAY-ATT]ミズラヒ、T.、「時刻同期プロトコルに対する遅延攻撃のゲーム理論的分析」、IEEE国際シンポジウム。"
    },
    {
      "indent": 3,
      "text": "[HIGH-AVAI] Ferrari, P., Flammini, A., Rinaldi, S., and G. Prytz, \"High availability IEEE 1588 nodes over IEEE 802.1 aq Shortest Path Bridging networks\", IEEE International Symposium on Precision Clock Synchronization for Measurement, Control and Communication (ISPCS), DOI 10.1109/ISPCS.2013.6644760, September 2013.",
      "ja": "高精度クロック同期の[HIGH-のAvaI]フェラーリ、P.、Flammini、A.、リナルディ、S.、およびG. Prytz、 \"ネットワークをブリッジングIEEE 802.1を超える高可用性IEEE 1588ノード水溶液最短パス\"、IEEE国際シンポジウム測定のための、制御と通信（ISPCS）、DOI 10.1109 / ISPCS.2013.6644760、2013年9月。"
    },
    {
      "indent": 3,
      "text": "[KALMAN] Giorgi, G. and C. Narduzzi, \"Kalman filtering for multi-path network synchronization\", IEEE International Symposium on Precision Clock Synchronization for Measurement, Control and Communication (ISPCS), DOI 10.1109/ISPCS.2014.6948693, September 2014.",
      "ja": "【カルマン]ジョルジ、G.およびC. Narduzzi、「マルチパスネットワーク同期のためのカルマンフィルタ」、計測、制御及び通信のための高精度クロック同期に関するIEEE国際シンポジウム（ISPCS）、DOI 10.1109 / ISPCS.2014.6948693、2014年9月。"
    },
    {
      "indent": 3,
      "text": "[MIF] Blanchet, M. and P. Seite, \"Multiple Interfaces and Provisioning Domains Problem Statement\", RFC 6418, DOI 10.17487/RFC6418, November 2011, <http://www.rfc-editor.org/info/rfc6418>.",
      "ja": "[MIF]ブランシェ、M.およびP. Seite、 \"複数のインタフェースおよびプロビジョニングドメイン問題文\"、RFC 6418、DOI 10.17487 / RFC6418、2011年11月<http://www.rfc-editor.org/info/rfc6418> 。"
    },
    {
      "indent": 3,
      "text": "[MPTCP] Ford, A., Raiciu, C., Handley, M., and O. Bonaventure, \"TCP Extensions for Multipath Operation with Multiple Addresses\", RFC 6824, DOI 10.17487/RFC6824, January 2013, <http://www.rfc-editor.org/info/rfc6824>.",
      "ja": "[MPTCP]フォード、A.、Raiciu、C.、ハンドリー、M.、およびO.ボナベンチャー、 \"複数のアドレスを持つマルチパス操作のためのTCP拡張機能\"、RFC 6824、DOI 10.17487 / RFC6824、2013年1月、<のhttp：// www.rfc-editor.org/info/rfc6824>。"
    },
    {
      "indent": 3,
      "text": "[MULTI] Shpiner, A., Revah, Y., and T. Mizrahi, \"Multi-path Time Protocols\", IEEE International Symposium on Precision Clock Synchronization for Measurement, Control and Communication (ISPCS), DOI 10.1109/ISPCS.2013.6644754, September 2013.",
      "ja": "[MULTI] Shpiner、A.、計測、制御及び通信のための高精度クロック同期（ISPCS）にRevah、Y.、およびT.ミズラヒ、 \"マルチパス時間プロトコル\"、IEEE国際シンポジウム、DOI 10.1109 / ISPCS.2013.6644754、 2013年9月。"
    },
    {
      "indent": 3,
      "text": "[PARIS] Augustin, B., Friedman, T., and R. Teixeira, \"Measuring Load-balanced Paths in the Internet\", 7th ACM SIGCOMM conference on Internet measurement (IMC '07), DOI 10.1145/1298306.1298329, October 2007.",
      "ja": "【PARIS]オーガスティン、B.、フリードマン、T.、およびR.テイシェイラ、 \"インターネットにおける測定負荷分散パス\"、インターネット測定で7 ACM SIGCOMM会議（IMC '07）、DOI 10.1145 / 1298306.1298329 2007年10月。"
    },
    {
      "indent": 3,
      "text": "[PARIS2] Augustin, B., Friedman, T., and R. Teixeira, \"Measuring Multipath Routing in the Internet\", IEEE/ACM Transactions on Networking, 19(3), pp. 830-840, DOI 10.1109/TNET.2010.2096232, June 2011.",
      "ja": "【PARIS2]オーガスティン、B.、フリードマン、T.、およびR.テイシェイラ、 \"インターネットでマルチパスルーティングの測定\"、ネットワーク上のIEEE / ACMトランザクション、19（3）、頁830から840、DOI 10.1109 / TNET。 2010.2096232、2011年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC7384] Mizrahi, T., \"Security Requirements of Time Protocols in Packet Switched Networks\", RFC 7384, DOI 10.17487/RFC7384, October 2014, <http://www.rfc-editor.org/info/rfc7384>.",
      "ja": "[RFC7384]ミズラヒは、T.は、 \"パケットにおけるタイムプロトコルのセキュリティ要件は、スイッチドネットワーク\"、RFC 7384、DOI 10.17487 / RFC7384、2014年10月、<http://www.rfc-editor.org/info/rfc7384>。"
    },
    {
      "indent": 3,
      "text": "[SLAVEDIV] Mizrahi, T., \"Slave Diversity: Using Multiple Paths to Improve the Accuracy of Clock Synchronization Protocols\", IEEE International Symposium on Precision Clock Synchronization for Measurement, Control and Communication (ISPCS), DOI 10.1109/ISPCS.2012.6336621, September 2012.",
      "ja": "[SLAVEDIV]ミズラヒ、T.、「スレーブ多様性：クロック同期プロトコルの精度を向上させるために複数のパスの使用」を、計測、制御と通信（ISPCS）のための高精度クロック同期のIEEE国際シンポジウム、DOI 10.1109 / ISPCS.2012.6336621、9月2012。"
    },
    {
      "indent": 3,
      "text": "[TRACEFLOW] Narasimhan, J., Venkataswami, B., Groves, R., and P. Hoose, \"Traceflow\", Work in Progress, draft-janapath-intarea-traceflow-00, January 2012.",
      "ja": "【TRACEFLOW] Narasimhan、J.、Venkataswami、B.、グローブ、R.、およびP. Hoose、 \"Traceflow\" 進行中、ワーク、ドラフトjanapath-intarea-traceflow-00、2012年1月。"
    },
    {
      "indent": 0,
      "text": "Acknowledgments",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "The authors would like to thank Yoram Revah for his contribution to this work. The authors also gratefully acknowledge the useful comments provided by Peter Meyer, Doug Arnold, Joe Abley, Zhen Cao, Watson Ladd, and Mirja Kuehlewind, as well as other comments received from the TICTOC working group participants.",
      "ja": "作者はこの作品への彼の貢献のためのYoram Revahに感謝したいと思います。著者らはまた、感謝TICTOCワーキンググループ参加者から受信したピーター・メイヤー、ダグ・アーノルド、ジョーAbley、ジェン曹操、ワトソンラッド、およびMirja Kuehlewindが提供する有益なコメントだけでなく、他のコメントを認めます。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Alex Shpiner Mellanox Technologies, Ltd. Hakidma 26 Ofer Industrial Park Yokneam, 2069200 Israel",
      "ja": "アレックスShpinerメラノックステクノロジーズ株式会社Hakidma 26オフェル工業団地Yokneam、2069200イスラエル"
    },
    {
      "indent": 3,
      "text": "Email: alexshp@mellanox.com",
      "ja": "メール：alexshp@mellanox.com"
    },
    {
      "indent": 3,
      "text": "Richard Tse Microsemi 8555 Baxter Place Burnaby, BC V5A 4V7 Canada",
      "ja": "リチャード・ツェMicrosemi社8555バクスター場所バーナビー、BC V5A 4V7カナダ"
    },
    {
      "indent": 3,
      "text": "Email: Richard.Tse@microsemi.com",
      "ja": "メール：Richard.Tse@microsemi.com"
    },
    {
      "indent": 3,
      "text": "Craig Schelp Oracle",
      "ja": "クレイグシェルオラクル"
    },
    {
      "indent": 3,
      "text": "Email: craig.schelp@oracle.com",
      "ja": "メール：craig.schelp@oracle.com"
    },
    {
      "indent": 3,
      "text": "Tal Mizrahi Marvell 6 Hamada St. Yokneam, 2066721 Israel",
      "ja": "タルミズラヒマーベル6浜田セントYokneam、2066721イスラエル"
    },
    {
      "indent": 3,
      "text": "Email: talmi@marvell.com",
      "ja": "メール：talmi@marvell.com"
    }
  ]
}