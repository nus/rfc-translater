{
  "title": {
    "text": "RFC 8547 - TCP-ENO: Encryption Negotiation Option",
    "ja": "RFC 8547 - TCP-ENO：暗号化交渉オプション"
  },
  "number": 8547,
  "created_at": "2019-10-29 23:22:33.172877+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                         A. Bittau\nRequest for Comments: 8547                                        Google\nCategory: Experimental                                         D. Giffin\nISSN: 2070-1721                                      Stanford University\n                                                              M. Handley\n                                               University College London\n                                                             D. Mazieres\n                                                     Stanford University\n                                                                E. Smith\n                                                       Kestrel Institute\n                                                                May 2019",
      "raw": true
    },
    {
      "indent": 17,
      "text": "TCP-ENO: Encryption Negotiation Option",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "Despite growing adoption of TLS, a significant fraction of TCP traffic on the Internet remains unencrypted. The persistence of unencrypted traffic can be attributed to at least two factors. First, some legacy protocols lack a signaling mechanism (such as a STARTTLS command) by which to convey support for encryption, thus making incremental deployment impossible. Second, legacy applications themselves cannot always be upgraded and therefore require a way to implement encryption transparently entirely within the transport layer. The TCP Encryption Negotiation Option (TCP-ENO) addresses both of these problems through a new TCP option kind providing out-of-band, fully backward-compatible negotiation of encryption.",
      "ja": "TLSの成長の採用にもかかわらず、インターネット上のTCPトラフィックのかなりの部分は暗号化されていないまま。暗号化されていないトラフィックの持続性は、少なくとも二つの要因に起因することができます。まず、いくつかのレガシープロトコルでは、このように増分の展開は不可能、暗号化のサポートを伝えるためにすることによって（例えばSTARTTLSコマンドなど）シグナリングメカニズムを欠いています。第二に、レガシーアプリケーション自体は常にアップグレードし、したがって、完全にトランスポート層の中に透過的に暗号化を実装する方法を必要とすることはできません。 TCP暗号化交渉オプション（TCP-ENO）は、一種の暗号化のアウトオブバンド、完全な下位互換性交渉を提供する新しいTCPオプションによって、これらの問題の両方に対応しています。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for examination, experimental implementation, and evaluation.",
      "ja": "このドキュメントはインターネット標準化過程仕様ではありません。それは、検査、実験的な実装、および評価のために公開されています。"
    },
    {
      "indent": 3,
      "text": "This document defines an Experimental Protocol for the Internet community. This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Not all documents approved by the IESG are candidates for any level of Internet Standard; see Section 2 of RFC 7841.",
      "ja": "この文書は、インターネットコミュニティのためにExperimentalプロトコルを定義します。このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。 IESGによって承認されていないすべての文書はインターネットStandardのどんなレベルの候補です。 RFC 7841のセクション2を参照してください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc8547.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttps://www.rfc-editor.org/info/rfc8547で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2019 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2019 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（https://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   4\n  1.1.  Design Goals  . . . . . . . . . . . . . . . . . . . . . .   4\n2.  Requirements Language . . . . . . . . . . . . . . . . . . . .   5\n3.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   5\n4.  TCP-ENO Specification . . . . . . . . . . . . . . . . . . . .   6\n  4.1.  ENO Option  . . . . . . . . . . . . . . . . . . . . . . .   7\n  4.2.  The Global Suboption  . . . . . . . . . . . . . . . . . .   9\n  4.3.  TCP-ENO Roles . . . . . . . . . . . . . . . . . . . . . .  10\n  4.4.  Specifying Suboption Data Length  . . . . . . . . . . . .  11\n  4.5.  The Negotiated TEP  . . . . . . . . . . . . . . . . . . .  12\n  4.6.  TCP-ENO Handshake . . . . . . . . . . . . . . . . . . . .  13\n  4.7.  Data in SYN Segments  . . . . . . . . . . . . . . . . . .  14\n  4.8.  Negotiation Transcript  . . . . . . . . . . . . . . . . .  16\n5.  Requirements for TEPs . . . . . . . . . . . . . . . . . . . .  16\n  5.1.  Session IDs . . . . . . . . . . . . . . . . . . . . . . .  18\n6.  Examples  . . . . . . . . . . . . . . . . . . . . . . . . . .  19\n7.  Future Developments . . . . . . . . . . . . . . . . . . . . .  21\n8.  Design Rationale  . . . . . . . . . . . . . . . . . . . . . .  22\n  8.1.  Handshake Robustness  . . . . . . . . . . . . . . . . . .  22\n  8.2.  Suboption Data  . . . . . . . . . . . . . . . . . . . . .  22\n  8.3.  Passive Role Bit  . . . . . . . . . . . . . . . . . . . .  22\n  8.4.  Application-Aware Bit . . . . . . . . . . . . . . . . . .  23\n  8.5.  Use of ENO Option Kind by TEPs  . . . . . . . . . . . . .  24\n  8.6.  Unpredictability of Session IDs . . . . . . . . . . . . .  24\n9.  Experiments . . . . . . . . . . . . . . . . . . . . . . . . .  24\n10. Security Considerations . . . . . . . . . . . . . . . . . . .  25\n11. IANA Considerations . . . . . . . . . . . . . . . . . . . . .  27\n12. References  . . . . . . . . . . . . . . . . . . . . . . . . .  28\n  12.1.  Normative References . . . . . . . . . . . . . . . . . .  28\n  12.2.  Informative References . . . . . . . . . . . . . . . . .  29\nAcknowledgments . . . . . . . . . . . . . . . . . . . . . . . . .  30\nContributors  . . . . . . . . . . . . . . . . . . . . . . . . . .  30\nAuthors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  31",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "Many applications and protocols running on top of TCP today do not encrypt traffic. This failure to encrypt lowers the bar for certain attacks, harming both user privacy and system security. Counteracting the problem demands a minimally intrusive, backward-compatible mechanism for incrementally deploying encryption. The TCP Encryption Negotiation Option (TCP-ENO) specified in this document provides such a mechanism.",
      "ja": "今日TCP上で動作する多くのアプリケーションおよびプロトコルは、トラフィックを暗号化しません。暗号化するこの障害は、ユーザーのプライバシーとシステムのセキュリティの両方に害を与え、特定の攻撃のためのバーを下げます。問題を相殺することはインクリメンタル暗号化を展開するための最小限の侵入、下位互換性メカニズムが求められています。本書で指定されたTCP暗号化交渉オプション（TCP-ENO）は、このような機構を提供します。"
    },
    {
      "indent": 3,
      "text": "Introducing TCP options, extending operating system interfaces to support TCP-level encryption, and extending applications to take advantage of TCP-level encryption all require effort. To the greatest extent possible, the effort invested in realizing TCP-level encryption today needs to remain applicable in the future should the need arise to change encryption strategies. To this end, it is useful to consider two questions separately:",
      "ja": "、TCPオプションの紹介TCPレベルの暗号化をサポートするために、オペレーティング・システム・インターフェースを拡張し、すべての努力を必要とTCPレベルの暗号化を利用するアプリケーションを拡張します。可能な限り、今日のTCPレベルの暗号化を実現するに投資努力する必要があるが、暗号化戦略を変更することが生じれば、将来的に適用可能なままにする必要があります。このためには、別途二つの質問を考慮することが有用です："
    },
    {
      "indent": 3,
      "text": "1. How to negotiate the use of encryption at the TCP layer",
      "section_title": true,
      "ja": "1. TCP層での暗号化の使用を交渉する方法"
    },
    {
      "indent": 3,
      "text": "2. How to perform encryption at the TCP layer",
      "section_title": true,
      "ja": "2. TCP層で暗号化を実行する方法"
    },
    {
      "indent": 3,
      "text": "This document addresses question 1 with a new TCP option, ENO. TCP-ENO provides a framework in which two endpoints can agree on a TCP encryption protocol (TEP) out of multiple possible TEPs. For future compatibility, TEPs can vary widely in terms of wire format, use of TCP option space, and integration with the TCP header and segmentation. However, ENO abstracts these differences to ensure the introduction of new TEPs can be transparent to applications taking advantage of TCP-level encryption.",
      "ja": "この文書は、新しいTCPオプションでENOを質問1に対応しています。 TCP-ENOは、2つのエンドポイントは、複数の可能TEPSのうちTCP暗号化プロトコル（TEP）に同意することが可能なフレームワークを提供します。将来の互換性のために、TEPSは、ワイヤフォーマット、TCPオプション空間の使用、及びTCPヘッダとセグメントとの統合の点で広く変えることができます。しかし、ENOは新しいTEPSの導入はTCPレベルの暗号化を利用してアプリケーションを透明にすることができることを確認するために、これらの違いを抽象化します。"
    },
    {
      "indent": 3,
      "text": "Question 2 is addressed by one or more companion TEP specification documents. While current TEPs enable TCP-level traffic encryption today, TCP-ENO ensures that the effort invested to deploy today's TEPs will additionally benefit future ones.",
      "ja": "質問2は、一つ以上のコンパニオンTEP仕様書によって対処されます。現在のTEPSは、今日TCPレベルのトラフィックの暗号化を可能にするが、TCP-ENOは、今日のTEPSを展開するために投資した努力は、さらに将来のものの利益になることを保証します。"
    },
    {
      "indent": 0,
      "text": "1.1. Design Goals",
      "section_title": true,
      "ja": "1.1。設計目標"
    },
    {
      "indent": 3,
      "text": "TCP-ENO was designed to achieve the following goals:",
      "ja": "TCP-ENOは、次の目標を達成するために設計されました："
    },
    {
      "indent": 3,
      "text": "1. Enable endpoints to negotiate the use of a separately specified TCP encryption protocol (TEP) suitable for either opportunistic security [RFC7435] of arbitrary TCP communications or stronger security of applications willing to perform endpoint authentication.",
      "ja": "1.任意のTCP通信またはエンドポイントの認証を行うことをいとわないアプリケーションの強力なセキュリティの日和見セキュリティのいずれかに適した別途指定されたTCP暗号化プロトコル（TEP）[RFC7435]の使用を交渉するためにエンドポイントを有効にします。"
    },
    {
      "indent": 3,
      "text": "2. Transparently fall back to unencrypted TCP when not supported by both endpoints.",
      "ja": "両方のエンドポイントでサポートされていないとき2.透過的に戻る暗号化されていないTCPに落ちます。"
    },
    {
      "indent": 3,
      "text": "3. Provide out-of-band signaling through which applications can better take advantage of TCP-level encryption (for instance, by improving authentication mechanisms in the presence of TCP-level encryption).",
      "ja": "3.アプリケーションが良い（例えば、TCPレベルの暗号化の存在下での認証メカニズムを改善することにより）TCPレベルの暗号化を利用することができ、それを通してシグナルアウトオブバンド提供します。"
    },
    {
      "indent": 3,
      "text": "4. Define a standard negotiation transcript that TEPs can use to defend against tampering with TCP-ENO.",
      "ja": "4. TEPSは、TCP-ENOの改ざんを防御するために使用できる標準交渉転写物を定義します。"
    },
    {
      "indent": 3,
      "text": "5. Make parsimonious use of TCP option space.",
      "section_title": true,
      "ja": "5. TCPオプション空間の倹約を使用してください。"
    },
    {
      "indent": 3,
      "text": "6. Define roles for the two ends of a TCP connection, so as to name each end of a connection for encryption or authentication purposes even following a symmetric simultaneous open.",
      "ja": "でも対称同時オープン次の暗号化や認証の目的のために、接続の両端に名前を付けるように6、TCPコネクションの両端のロールを定義します。"
    },
    {
      "indent": 0,
      "text": "2. Requirements Language",
      "section_title": true,
      "ja": "2.必要な言語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.",
      "ja": "キーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、 \"SHALL\"、 \"SHOULD\"、 \"ないもの\"、 \"推奨\" \"ない（SHOULD NOT）\"、 \"MAY\"、 \"推奨NOT\"、および「OPTIONAL BCP 14に記載されているように「この文書に解釈されるべきである[RFC2119]、[RFC8174]と、ここで示されるように、それらは、すべて大文字で表示された場合にのみ。"
    },
    {
      "indent": 0,
      "text": "3. Terminology",
      "section_title": true,
      "ja": "3.用語"
    },
    {
      "indent": 3,
      "text": "Throughout this document, we use the following terms, several of which have more detailed normative descriptions in [RFC793]:",
      "ja": "このドキュメントでは、我々は[RFC793]でより詳細な規範的な記述を持っているそのうちのいくつかは次の用語を使用します："
    },
    {
      "indent": 3,
      "text": "SYN segment A TCP segment in which the SYN flag is set",
      "ja": "SYNセグメントSYNフラグが設定されたTCPセグメント"
    },
    {
      "indent": 3,
      "text": "ACK segment A TCP segment in which the ACK flag is set (which includes most segments other than an initial SYN segment)",
      "ja": "ACKセグメントACKフラグがセットされたTCPセグメント（最初のSYNセグメント以外のほとんどのセグメントを含みます）"
    },
    {
      "indent": 3,
      "text": "Non-SYN segment A TCP segment in which the SYN flag is clear",
      "ja": "非SYNセグメントSYNフラグがクリアされたTCPセグメント"
    },
    {
      "indent": 3,
      "text": "SYN-only segment A TCP segment in which the SYN flag is set but the ACK flag is clear",
      "ja": "SYNフラグがセットが、ACKフラグがクリアされているSYN-のみセグメントTCPセグメント"
    },
    {
      "indent": 3,
      "text": "SYN-ACK segment A TCP segment in which the SYN and ACK flags are both set",
      "ja": "SYN-ACKセグメントSYNとACKフラグが両方設定されているTCPセグメント"
    },
    {
      "indent": 3,
      "text": "Active opener A host that initiates a connection by sending a SYN-only segment. With the BSD socket API, an active opener calls \"connect\". In client-server configurations, active openers are typically clients.",
      "ja": "アクティブオープナーSYN-セグメントのみを送信して接続を開始するホスト。 BSDソケットAPIを使用すると、アクティブ・オープナーは、「接続」を呼び出します。クライアント - サーバ構成では、アクティブ・オープナーは通常、クライアントです。"
    },
    {
      "indent": 3,
      "text": "Passive opener A host that does not send a SYN-only segment but responds to one with a SYN-ACK segment. With the BSD socket API, passive openers call \"listen\" and \"accept\", rather than \"connect\". In client-server configurations, passive openers are typically servers.",
      "ja": "パッシブオープナーSYN-セグメントのみを送信するが、SYN-ACKセグメントを1に応答しないホスト。 BSDソケットAPIを使用すると、受動的オープナーではなく、「接続」よりも、「聞く」と「受け入れる」と呼びます。クライアント - サーバ構成では、受動的なオープナーは通常のサーバーです。"
    },
    {
      "indent": 3,
      "text": "Simultaneous open The act of symmetrically establishing a TCP connection between two active openers (both of which call \"connect\" with BSD sockets). Each host of a simultaneous open sends both a SYN-only and a SYN-ACK segment. Simultaneous open is less common than asymmetric open with one active and one passive opener, but it can be used for NAT traversal by peer-to-peer applications [RFC5382].",
      "ja": "対称的に二つの活性オープナー（どちらも呼のBSDソケットと「接続」）との間のTCP接続を確立する同時オープン行為。同時オープンの各ホストは、SYN-のみとSYN-ACKセグメントの両方を送信します。同時オープンがアクティブ1および1つの受動オープナーとオープン非対称未満が一般的であるが、それは、ピア・ツー・ピア・アプリケーション[RFC5382]でNATトラバーサルのために使用することができます。"
    },
    {
      "indent": 3,
      "text": "TEP A TCP encryption protocol intended for use with TCP-ENO and specified in a separate document",
      "ja": "TEP TCP暗号化プロトコルTCP-ENOでの使用を意図し、別の文書で指定されました"
    },
    {
      "indent": 3,
      "text": "TEP identifier A unique 7-bit value in the range 0x20-0x7f that IANA has assigned to a TEP",
      "ja": "TEP識別子範囲内で一意7ビットの値は、IANAがTEPに割り当てたこと0x20-0x7f"
    },
    {
      "indent": 3,
      "text": "Negotiated TEP The single TEP governing a TCP connection, determined by use of the TCP ENO option specified in this document",
      "ja": "この文書で指定されたTCP ENOオプションを使用して決定ネゴシエートTEP TCPコネクションを管理する単一TEP、"
    },
    {
      "indent": 0,
      "text": "4. TCP-ENO Specification",
      "section_title": true,
      "ja": "4. TCP-ENO仕様"
    },
    {
      "indent": 3,
      "text": "TCP-ENO extends TCP connection establishment to enable encryption opportunistically. It uses a new TCP option kind [RFC793] to negotiate one among multiple possible TCP encryption protocols (TEPs). The negotiation involves hosts exchanging sets of supported TEPs, where each TEP is represented by a suboption within a larger TCP ENO option in the offering host's SYN segment.",
      "ja": "TCP-ENOは日和見暗号化を有効にするには、TCPコネクションの確立を拡張します。それは一種[RFC793]複数の可能なTCP暗号化プロトコル（TEPS）の中の1つを交渉するための新しいTCPオプションを使用しています。ネゴシエーションは、各TEPを提供ホストのSYNセグメント内の大きいTCPのENOオプション内のサブオプションで表されるサポートTEPSのセットを交換するホストを含​​みます。"
    },
    {
      "indent": 3,
      "text": "If TCP-ENO succeeds, it yields the following information:",
      "ja": "TCP-ENOが成功した場合、それは次のような情報が得られます。"
    },
    {
      "indent": 3,
      "text": "o a negotiated TEP represented by a unique 7-bit TEP identifier,",
      "ja": "、ユニークな7ビットのTEP識別子によって表さネゴシエートTEP O"
    },
    {
      "indent": 3,
      "text": "o a few extra bytes of suboption data from each host, if needed by the TEP,",
      "ja": "O各ホストからのサブオプションデータのいくつかの余分なバイト、TEPにより必要に応じて、"
    },
    {
      "indent": 3,
      "text": "o a negotiation transcript with which to mitigate attacks on the negotiation itself,",
      "ja": "Oとの交渉の転写物は交渉自体への攻撃を軽減するために、"
    },
    {
      "indent": 3,
      "text": "o role assignments designating one endpoint \"host A\" and the other endpoint \"host B\", and",
      "ja": "一方のエンドポイント「ホストA」および他の終点「ホストB」を、指定O役割の割り当てと"
    },
    {
      "indent": 3,
      "text": "o a bit available to higher-layer protocols at each endpoint for out-of-band negotiation of updated behavior in the presence of TCP encryption.",
      "ja": "O TCP暗号化の存在下での更新行動のアウトバンド交渉のために、各エンドポイントでの上位層プロトコルが利用できるビット。"
    },
    {
      "indent": 3,
      "text": "If TCP-ENO fails, encryption is disabled and the connection falls back to traditional unencrypted TCP.",
      "ja": "TCP-ENOが失敗した場合、暗号化は無効になり、接続が戻って伝統的な暗号化されていないTCPに落ちます。"
    },
    {
      "indent": 3,
      "text": "The remainder of this section provides the normative description of the TCP ENO option and handshake protocol.",
      "ja": "このセクションの残りの部分は、TCP ENOオプションとハンドシェイクプロトコルの規範的な説明を提供します。"
    },
    {
      "indent": 0,
      "text": "4.1. ENO Option",
      "section_title": true,
      "ja": "4.1。何かオプション"
    },
    {
      "indent": 3,
      "text": "TCP-ENO employs an option in the TCP header [RFC793]. Figure 1 illustrates the high-level format of this option.",
      "ja": "TCP-ENOは[RFC793] TCPヘッダ内のオプションを使用します。図1は、このオプションの高レベルのフォーマットを示します。"
    },
    {
      "indent": 9,
      "text": "byte    0     1     2             N+1   (N+2 bytes total)\n     +-----+-----+-----+--....--+-----+\n     |Kind=|Len= |                    |\n     |  69 | N+2 | contents (N bytes) |\n     +-----+-----+-----+--....--+-----+",
      "raw": true
    },
    {
      "indent": 23,
      "text": "Figure 1: The TCP-ENO Option",
      "ja": "図1：TCP-ENOオプション"
    },
    {
      "indent": 3,
      "text": "The contents of an ENO option can take one of two forms. A SYN-form ENO option, illustrated in Figure 2, appears only in SYN segments. A non-SYN-form ENO option, illustrated in Figure 3, appears only in non-SYN segments. The SYN-form ENO option acts as a container for zero or more suboptions, labeled \"Opt_0\", \"Opt_1\", ... in Figure 2. The non-SYN-form ENO option, by its presence, acts as a one-bit acknowledgment, with the actual contents ignored by ENO. Particular TEPs MAY assign additional meaning to the contents of non-SYN-form ENO options. When a negotiated TEP does not assign such meaning, the contents of a non-SYN-form ENO option MUST be zero bytes (i.e., N = 0) in sent segments and MUST be ignored in received segments.",
      "ja": "ENOオプションの内容は、次の2つの形式のいずれかを取ることができます。図2に示さSYN状ENOオプションは、のみSYNセグメントに表示されます。図3に示す非SYN状ENOオプションは、唯一の非SYNセグメントに表示されます。 SYN状ENOオプションは、「Opt_0」、「Opt_1」とラベル付けされたゼロ個以上のサブオプションのための容器として機能する...図2.非SYN状ENOオプションで、その存在により、一次元として作用しますENOによって無視実際の内容とビット確認、。特定のTEPSは非SYN-フォームENOオプションの内容に追加の意味を割り当てることができます。ネゴシエートされたTEPは、そのような意味を割り当てない場合、非SYN状ENOオプションの内容はゼロバイト（即ち、N = 0）送信セグメントでなければならず、受信されたセグメントに無視しなければなりません。"
    },
    {
      "indent": 9,
      "text": "byte    0     1     2     3                     ... N+1\n     +-----+-----+-----+-----+--...--+-----+----...----+\n     |Kind=|Len= |Opt_0|Opt_1|       |Opt_i|   Opt_i   |\n     |  69 | N+2 |     |     |       |     |   data    |\n     +-----+-----+-----+-----+--...--+-----+----...----+",
      "raw": true
    },
    {
      "indent": 23,
      "text": "Figure 2: SYN-Form ENO Option",
      "ja": "図2：SYN-フォームENOオプション"
    },
    {
      "indent": 22,
      "text": "byte   0     1     2     N+1\n    +-----+-----+-----...----+\n    |Kind=|Len= |  ignored   |\n    |  69 | N+2 | by TCP-ENO |\n    +-----+-----+-----...----+",
      "raw": true
    },
    {
      "indent": 12,
      "text": "Figure 3: Non-SYN-Form ENO option, Where N MAY Be 0",
      "ja": "図3：Nは0することができる非SYN-フォームENOオプション、"
    },
    {
      "indent": 3,
      "text": "Every suboption starts with a byte of the form illustrated in Figure 4. The high bit \"v\", when set, introduces suboptions with variable-length data. When v = 0, the byte itself constitutes the entirety of the suboption. The remaining 7-bit value, called \"glt\", takes on various meanings as defined below:",
      "ja": "すべてのサブオプションは、図4の高ビット「V」に示す形式のバイトセットで始まる可変長データとサブオプションを導入します。場合V = 0、バイト自体は、サブオプションの全体を構成しています。以下に定義される「GLT」と呼ばれ、残りの7ビットの値は、様々な意味を帯びます。"
    },
    {
      "indent": 3,
      "text": "o Global configuration data (discussed in Section 4.2)",
      "ja": "O（セクション4.2で議論する）グローバルコンフィギュレーションデータ"
    },
    {
      "indent": 3,
      "text": "o Suboption data length for the next suboption (discussed in Section 4.4)",
      "ja": "（セクション4.4で説明する）次のサブオプションのOサブオプションデータ長"
    },
    {
      "indent": 3,
      "text": "o An offer to use a particular TEP defined in a separate TEP specification document",
      "ja": "別TEPの仕様書で定義された特定のTEPを使用するオファーO"
    },
    {
      "indent": 6,
      "text": "bit   7   6   5   4   3   2   1   0\n    +---+---+---+---+---+---+---+---+\n    | v |            glt            |\n    +---+---+---+---+---+---+---+---+",
      "raw": true
    },
    {
      "indent": 10,
      "text": "v   - non-zero for use with variable-length suboption data\nglt - Global suboption, Length, or TEP identifier",
      "raw": true
    },
    {
      "indent": 16,
      "text": "Figure 4: Format of Initial Suboption Byte",
      "ja": "図4：初期サブオプション・バイトのフォーマット"
    },
    {
      "indent": 3,
      "text": "Table 1 summarizes the meaning of initial suboption bytes. Values of glt below 0x20 are used for global suboptions and length information (the \"gl\" in \"glt\"), while those greater than or equal to 0x20 are TEP identifiers (the \"t\"). When v = 0, since the initial suboption byte constitutes the entirety of the suboption, all information is expressed by the 7-bit glt value, which can be either a global suboption or a TEP identifier. When v = 1, it indicates a suboption with variable-length suboption data. Only TEP identifiers have suboption data, not global suboptions. Therefore, bytes with v = 1 and glt < 0x20 are not global suboptions but rather length bytes governing the length of the next suboption (which MUST be a TEP identifier). In the absence of a length byte, a TEP identifier suboption with v = 1 has suboption data extending to the end of the TCP option.",
      "ja": "表1は、最初のサブオプションバイトの意味をまとめたもの。それら以上の0x20に等しいTEP識別子（「T」）している間の0x20以下GLTの値は、（「GLT」の「GL」）グローバルサブオプションと長さ情報のために使用されます。最初のサブオプションバイトので、V = 0は、サブオプションの全体を構成している場合、すべての情報は、グローバルサブオプションまたはTEP識別子のいずれかとすることができる7ビットGLT値で表されます。場合V = 1は、可変長サブオプションデータとサブオプションを示しています。唯一のTEP識別子は、サブオプションのデータではなく、グローバルなサブオプションを持っています。したがって、0x20の<V = 1及びGLTとバイトグローバルサブオプションではなく、（TEP識別子でなければなりません）、次のサブオプションの長さを支配長さバイトはありません。長さバイトの非存在下で、V = 1とTEP識別子サブオプションは、TCPオプションの端部まで延びるサブオプションデータを有しています。"
    },
    {
      "indent": 7,
      "text": "+-----------+---+-------------------------------------------+\n| glt       | v | Meaning                                   |\n+-----------+---+-------------------------------------------+\n| 0x00-0x1f | 0 | Global suboption (Section 4.2)            |\n| 0x00-0x1f | 1 | Length byte (Section 4.4)                 |\n| 0x20-0x7f | 0 | TEP identifier without suboption data     |\n| 0x20-0x7f | 1 | TEP identifier followed by suboption data |\n+-----------+---+-------------------------------------------+",
      "raw": true
    },
    {
      "indent": 18,
      "text": "Table 1: Initial Suboption Byte Values",
      "ja": "表1：初期サブオプションバイト値"
    },
    {
      "indent": 3,
      "text": "A SYN segment MUST contain at most one TCP ENO option. If a SYN segment contains more than one ENO option, the receiver MUST behave as though the segment contained no ENO options and disable encryption. A TEP MAY specify the use of multiple ENO options in a non-SYN segment. For non-SYN segments, ENO itself only distinguishes between the presence or absence of ENO options; multiple ENO options are interpreted the same as one.",
      "ja": "SYNセグメントは、多くても1つのTCP ENOオプションで含まれていなければなりません。 SYNセグメントは、複数のENOオプションが含まれている場合はセグメントが全くENOオプションを無効暗号化は含まれていないかのように、受信機は振る舞う必要があります。 TEPは、非SYNセグメント内の複数ENOオプションの使用を指定するかもしれません。非SYNセグメントのために、ENO自体のみENOオプションの存在または不在を区別します。複数ENOオプションは1と同じように解釈されます。"
    },
    {
      "indent": 0,
      "text": "4.2. The Global Suboption",
      "section_title": true,
      "ja": "4.2。グローバルサブオプション"
    },
    {
      "indent": 3,
      "text": "Suboptions 0x00-0x1f are used for global configuration that applies regardless of the negotiated TEP. A TCP SYN segment MUST include at most one ENO suboption in this range. A receiver MUST ignore all but the first suboption in this range in any given TCP segment so as to anticipate updates to ENO that assign new meaning to bits in subsequent global suboptions. The value of a global suboption byte is interpreted as a bit mask, illustrated in Figure 5.",
      "ja": "かかわらず、交渉さTEPの適用されるグローバルコンフィギュレーションのために使用されている0x00-0x1fサブオプション。 TCP SYNセグメントは、この範囲内で多くても1つのENOサブオプションを含まなければなりません。後続のグローバルサブオプション内のビットに新たな意味を割り当てるENOに更新を予想するように、受信機は、任意の所与のTCPセグメント内のすべてが、この範囲内の最初のサブオプションを無視しなければなりません。グローバルサブオプションバイトの値は、図5に示すビットマスクとして解釈されます。"
    },
    {
      "indent": 15,
      "text": "bit   7   6   5   4   3   2   1   0\n    +---+---+---+---+---+---+---+---+\n    | 0 | 0 | 0 |z1 |z2 |z3 | a | b |\n    +---+---+---+---+---+---+---+---+",
      "raw": true
    },
    {
      "indent": 19,
      "text": "b  - Passive role bit\na  - Application-aware bit\nz* - Zero bits (reserved for future use)",
      "raw": true
    },
    {
      "indent": 15,
      "text": "Figure 5: Format of the Global Suboption Byte",
      "ja": "図5：グローバルサブオプション・バイトのフォーマット"
    },
    {
      "indent": 3,
      "text": "The fields of the bit mask are interpreted as follows:",
      "ja": "次のようにビットマスクのフィールドが解釈されます。"
    },
    {
      "indent": 3,
      "text": "b The passive role bit MUST be 1 for all passive openers. For active openers, it MUST default to 0, but implementations MUST provide an API through which an application can explicitly set b = 1 before initiating an active open. (Manual configuration of \"b\" is only necessary to enable encryption with a simultaneous open and requires prior coordination to ensure exactly one endpoint sets b = 1 before connecting.) See Section 8.3 for further discussion.",
      "ja": "B受動的な役割のビットは、すべてのパッシブオープナーのための1でなければなりません。アクティブオープナーのために、それは0にデフォルト設定する必要がありますが、実装はアプリケーションが明示的アクティブオープンを開始する前に、B = 1を設定することができ、それを通してAPIを提供しなければなりません。 （「B」の手動設定は、同時オープンで暗号化を有効にするためにのみ必要であり、正確に一つのエンドポイントを確実にするために事前の調整を必要とし、B = 1接続する前に設定されます。）さらなる議論については、セクション8.3を参照してください。"
    },
    {
      "indent": 3,
      "text": "a Legacy applications can benefit from ENO-specific updates that improve endpoint authentication or avoid double encryption. The application-aware bit \"a\" is an out-of-band signal through which higher-layer protocols can enable ENO-specific updates that would otherwise not be backwards compatible. Implementations MUST set this bit to zero by default, and MUST provide an API through which applications can change the value of the bit as well as examine the value of the bit sent by the remote host. Implementations MUST furthermore support a mandatory application-aware mode in which TCP-ENO is automatically disabled if the remote host does not set a = 1. See Section 8.4 for further discussion.",
      "ja": "レガシーアプリケーションは、エンドポイントの認証を改善したり、二重の暗号化を避けるENO固有の更新の恩恵を受けることができます。アプリケーションアウェアビット「」上位層プロトコルは、そうでなければ、後方互換性がないであろうENO固有の更新を有効にすることができ、それを通してアウトオブバンド信号です。実装は、デフォルトでゼロに、このビットを設定しなければなりません、そしてアプリケーションは、ビットの値を変更するだけでなく、リモートホストから送信されたビットの値を調べることができ、それを通してAPIを提供しなければなりません。実装は、さらに、リモートホストがさらなる議論のために= 1節を参照してください8.4を設定していない場合は、TCP-ENOが自動的に無効にされている必須のアプリケーションアウェアモードをサポートしなければなりません。"
    },
    {
      "indent": 3,
      "text": "z1, z2, z3 The \"z\" bits are reserved for future updates to TCP-ENO. They MUST be set to zero in sent segments and MUST be ignored in received segments.",
      "ja": "Z1、Z2、 \"Z\" ビットはTCP-ENOに将来の更新のために予約されてZ3。彼らは、送信のセグメントにゼロに設定しなければならなくて、受信されたセグメントに無視しなければなりません。"
    },
    {
      "indent": 3,
      "text": "A SYN segment without an explicit global suboption has an implicit global suboption of 0x00. Because passive openers MUST always set b = 1, they cannot rely on this implicit 0x00 byte and MUST include an explicit global suboption in their SYN-ACK segments.",
      "ja": "明示的グローバルサブオプションなしでSYNセグメントが0x00での暗黙のグローバルサブオプションを有します。パッシブオープナーは常にB = 1を設定しなければなりませんので、彼らはこの暗黙の0x00のバイトに頼ることができないと彼らのSYN-ACKセグメントに明示的にグローバルサブオプションを含まなければなりません。"
    },
    {
      "indent": 0,
      "text": "4.3. TCP-ENO Roles",
      "section_title": true,
      "ja": "4.3。 TCP-ENOの役割"
    },
    {
      "indent": 3,
      "text": "TCP-ENO uses abstract roles called \"A\" and \"B\" to distinguish the two ends of a TCP connection. These roles are determined by the \"b\" bit in the global suboption. The host that sent an implicit or explicit suboption with b = 0 plays the A role. The host that sent b = 1 plays the B role. Because a passive opener MUST set b = 1 and an active opener by default has b = 0, the normal case is for the active opener to play role A and the passive opener role B.",
      "ja": "TCP-ENOは、TCPコネクションの両端を区別するために「A」と「B」と呼ばれる抽象的役割を使用しています。これらの役割は、グローバルサブオプションで「B」ビットによって決定されます。 B = 0で暗黙的または明示的なサブオプションを送ったホストが役割を果たしています。 Bを送信したホスト= 1はBの役割を果たしています。受動オープナーは、B = 1を設定する必要があるため、デフォルトでアクティブオープナーは、B = 0を有し、通常の場合は、ロールAと受動オープナーロールBを再生するアクティブオープナーのためのものです"
    },
    {
      "indent": 3,
      "text": "Applications performing a simultaneous open, if they desire TCP-level encryption, need to arrange for exactly one endpoint to set b = 1 (despite being an active opener) while the other endpoint keeps the default b = 0. Otherwise, if both sides use the default b = 0 or if both sides set b = 1, then TCP-ENO will fail and fall back to unencrypted TCP. Likewise, if an active opener explicitly configures b = 1 and connects to a passive opener (which MUST always have b = 1), then TCP-ENO will fail and fall back to unencrypted TCP.",
      "ja": "同時オープンを実行するアプリケーションは、彼らはTCPレベルの暗号化を希望する場合は、（アクティブオープナーであるにもかかわらず）、B = 1を設定するために、正確に一つのエンドポイントを構成するために必要な両面が使用している場合、他のエンドポイントは、そうでない場合は、デフォルトのB = 0を維持しながら、デフォルトのB = 0または両側がB = 1を設定した場合、TCP-ENOが失敗して戻って暗号化されていないTCPに落ちます。同様に、場合にアクティブオープナーは、明示的にB = 1を設定し、その後、TCP-ENOが失敗して戻って暗号化されていないTCPにフォール（常に= 1 bの持っている必要があります）パッシブオープナーに接続します。"
    },
    {
      "indent": 3,
      "text": "TEP specifications SHOULD refer to TCP-ENO's A and B roles to specify asymmetric behavior by the two hosts. For the remainder of this document, we will use the terms \"host A\" and \"host B\" to designate the hosts with roles A and B, respectively, in a connection.",
      "ja": "TEPの仕様は、2つのホストによる非対称動作を指定するTCP-ENOのAとBの役割を参照してください。この文書の残りのために、我々は関連して、それぞれ、ロールAとBとホストを指定する用語「ホストA」および「ホストB」を使用します。"
    },
    {
      "indent": 0,
      "text": "4.4. Specifying Suboption Data Length",
      "section_title": true,
      "ja": "4.4。サブオプションデータ長を指定します"
    },
    {
      "indent": 3,
      "text": "A TEP MAY optionally make use of one or more bytes of suboption data. The presence of such data is indicated by setting v = 1 in the initial suboption byte (see Figure 4). A suboption introduced by a TEP identifier with v = 1 (i.e., a suboption whose first octet has value 0xa0 or higher) extends to the end of the TCP option. Hence, if only one suboption requires data, the most compact way to encode it is to place it last in the ENO option, after all other suboptions. In Figure 2, for example, the last suboption, Opt_i, has suboption data and thus requires v = 1. However, the suboption data length is inferred from the total length of the TCP option.",
      "ja": "TEPは、必要に応じてサブオプションデータの1バイト以上を利用することができます。そのようなデータの存在が初期サブオプションバイトでV = 1を設定することによって示されている（図4参照）。 V = 1（その最初のオクテット値0xA0を以上を有している、すなわち、サブオプション）とTEP識別子によって導入されたサブオプションは、TCPオプションの端部まで延びています。したがって、もし一つだけのサブオプションは、それをコード化するための最もコンパクトな方法は、他のすべてのサブオプションの後、ENOオプションで最後にそれを配置することで、データを必要とします。図2において、例えば、最後のサブオプション、Opt_iは、サブオプションのデータを有し、従って必要とV =しかし、サブオプションのデータ長がTCPオプションの全体の長さから推測されている1。"
    },
    {
      "indent": 3,
      "text": "When a suboption with data is not last in an ENO option, the sender MUST explicitly specify the suboption data length for the receiver to know where the next suboption starts. The sender does so by introducing the suboption with a length byte, depicted in Figure 6. The length byte encodes a 5-bit value nnnnn. Adding one to nnnnn yields the length of the suboption data (not including the length byte or the TEP identifier). Hence, a length byte can designate anywhere from 1 to 32 bytes of suboption data (inclusive).",
      "ja": "データとサブオプションは、ENOオプションで最後にされていない場合は、送信者が明示的に次のサブオプションが始まる場所を知るために受信機のためのサブオプションのデータ長を指定しなければなりません。送信者は、長さバイトは、5ビットの値nnnnnはをコードする、図6に示されている長さバイトでサブオプションを導入することによってそうします。 NNNNNに1を加算する（長さバイト又はTEP識別子を含まない）サブオプションデータの長さが得られます。したがって、長さバイトは、1からサブオプションデータの32バイト（両端を含む）までの任意の場所を指定することができます。"
    },
    {
      "indent": 15,
      "text": "bit   7   6   5   4   3   2   1   0\n    +---+---+---+-------------------+\n    | 1   0   0         nnnnn       |\n    +---+---+---+-------------------+",
      "raw": true
    },
    {
      "indent": 19,
      "text": "nnnnn - 5-bit value encoding (length - 1)",
      "ja": "nnnnnは -  5ビットの値符号化（長さ -  1）"
    },
    {
      "indent": 21,
      "text": "Figure 6: Format of a Length Byte",
      "ja": "図6：長さバイトのフォーマット"
    },
    {
      "indent": 3,
      "text": "A suboption preceded by a length byte MUST be a TEP identifier (glt >= 0x20) and MUST have v = 1. Figure 7 shows an example of such a suboption.",
      "ja": "長さバイトが先行するサブオプションは、（GLT> = 0x20の）TEP識別子でなければならなくて、V = 1図7は、そのようなサブオプションの一例を示す図でなければなりません。"
    },
    {
      "indent": 7,
      "text": "byte    0      1       2      nnnnn+2  (nnnnn+3 bytes total)\n     +------+------+-------...-------+\n     |length| TEP  | suboption data  |\n     | byte |ident.| (nnnnn+1 bytes) |\n     +------+------+-------...-------+",
      "raw": true
    },
    {
      "indent": 12,
      "text": "length byte    - specifies nnnnn\nTEP identifier - MUST have v = 1 and glt >= 0x20\nsuboption data - length specified by nnnnn+1",
      "raw": true
    },
    {
      "indent": 19,
      "text": "Figure 7: Suboption with Length Byte",
      "ja": "図7：長さバイトでサブオプション"
    },
    {
      "indent": 3,
      "text": "A host MUST ignore an ENO option in a SYN segment and MUST disable encryption if either of the following apply:",
      "ja": "ホストは、SYNセグメントにおけるENOオプションを無視しなければなりませんし、次のいずれかに該当する場合、暗号化を無効にする必要があります。"
    },
    {
      "indent": 3,
      "text": "1. A length byte indicates that suboption data would extend beyond the end of the TCP ENO option.",
      "ja": "1.長さバイトは、サブオプションデータは、TCPのENOオプションの終わりを超えて延長することを示しています。"
    },
    {
      "indent": 3,
      "text": "2. A length byte is followed by an octet in the range 0x00-0x9f (meaning the following byte has v = 0 or glt < 0x20).",
      "ja": "2.長さバイトは（次のバイトがV = 0又はGLT <0x20の意味を有する）の範囲0x00-0x9fでオクテットが続きます。"
    },
    {
      "indent": 3,
      "text": "Because the last suboption in an ENO option is special-cased to have its length inferred from the 8-bit TCP option length, it MAY contain more than 32 bytes of suboption data. Other suboptions are limited to 32 bytes by the length byte format. However, the TCP header itself can only accommodate a maximum of 40 bytes of options. Therefore, regardless of the length byte format, a segment would not be able to contain more than one suboption over 32 bytes in size. That said, TEPs MAY define the use of multiple suboptions with the same TEP identifier in the same SYN segment, providing another way to convey over 32 bytes of suboption data even with length bytes.",
      "ja": "ENOオプションの最後のサブオプションであるため、その長さは8ビットのTCPオプションの長さから推測しているために、特別なケースに入れ、それがサブオプションデータの32の以上のバイトを含むかもしれません。他のサブオプションは、長さバイト形式で32バイトに制限されます。しかし、TCPヘッダ自体は、オプションの40バイトの最大値に対応することができます。したがって、長さに関係なくバイトフォーマットの、セグメントのサイズは32バイトの上に複数のサブオプションを含有することができないだろう。前記、TEPSも長さバイトでサブオプションデータの32バイト以上を搬送する別の方法を提供し、同じSYNセグメントで同じTEP識別子を持つ複数のサブオプションの使用を定義することができます。"
    },
    {
      "indent": 0,
      "text": "4.5. The Negotiated TEP",
      "section_title": true,
      "ja": "4.5。交渉TEP"
    },
    {
      "indent": 3,
      "text": "A TEP identifier glt (with glt >= 0x20) is valid for a connection when all of the following hold:",
      "ja": "（GLT> = 0x20を有する）TEP識別子GLTが接続に対して有効である場合は、次のホールドの全。"
    },
    {
      "indent": 3,
      "text": "1. Each side has sent a suboption for glt in its SYN-form ENO option.",
      "ja": "1.各側は、SYN-フォームENOオプションでGLTためのサブオプションを送信しました。"
    },
    {
      "indent": 3,
      "text": "2. Any suboption data in these glt suboptions is valid according to the TEP specification and satisfies any runtime constraints.",
      "ja": "2.これらGLTのサブオプション内の任意のサブオプションデータは、TEPの仕様を満たす任意の実行時の制約に応じて有効です。"
    },
    {
      "indent": 3,
      "text": "3. If an ENO option contains multiple suboptions with glt, then such repetition is well-defined by the TEP specification.",
      "ja": "3. ENOオプションがGLTと複数のサブオプションが含まれている場合、そのような繰り返しは、TEP仕様によって明確に定義されています。"
    },
    {
      "indent": 3,
      "text": "A passive opener (which is always host B) sees the remote host's SYN segment before constructing its own SYN-ACK segment. Therefore, a passive opener SHOULD include only one TEP identifier in SYN-ACK segments and SHOULD ensure this TEP identifier is valid. However, simultaneous open or implementation considerations can prevent host B from offering only one TEP.",
      "ja": "（常にホストBである）パッシブオープナーは、独自のSYN-ACKセグメントを構築する前に、リモートホストのSYNセグメントを見ています。したがって、受動オープナーは、SYN-ACKセグメント中の一つだけTEP識別子を含むべきであり、このTEP識別子が有効であることを確認すべきです。しかし、同時オープンまたは実装の考慮事項が一つだけTEPを提供してからホストBを防ぐことができます。"
    },
    {
      "indent": 3,
      "text": "To accommodate scenarios in which host B sends multiple TEP identifiers in the SYN-ACK segment, the negotiated TEP is defined as the last valid TEP identifier in host B's SYN-form ENO option. This definition means host B specifies TEP suboptions in order of increasing priority, while host A does not influence TEP priority.",
      "ja": "ホストBは、SYN-ACKセグメント内の複数のTEP識別子を送信するシナリオに対応するために、ネゴシエートされたTEPは、ホストBのSYN状ENOオプションで最後の有効なTEP識別子として定義されます。この定義は、ホストAは、TEPの優先順位に影響を与えない一方で、ホストBは、優先順位を上昇させるために、TEPのサブオプションを指定することを意味します。"
    },
    {
      "indent": 0,
      "text": "4.6. TCP-ENO Handshake",
      "section_title": true,
      "ja": "4.6。 TCP-ENOハンドシェイク"
    },
    {
      "indent": 3,
      "text": "A host employing TCP-ENO for a connection MUST include an ENO option in every TCP segment sent until either encryption is disabled or the host receives a non-SYN segment. In particular, this means an active opener MUST include a non-SYN-form ENO option in the third segment of a three-way handshake.",
      "ja": "暗号化のいずれかが無効になっているか、ホストが非SYNセグメントを受信するまでの接続のためにTCP-ENOを採用したホストが送信されるすべてのTCPセグメントにおけるENOオプションを含まなければなりません。特に、これは、活性オープナーはスリーウェイハンドシェイクの第3のセグメント中の非SYN状ENOオプションを含めなければならないことを意味します。"
    },
    {
      "indent": 3,
      "text": "A host MUST disable encryption, refrain from sending any further ENO options, and fall back to unencrypted TCP if any of the following occurs:",
      "ja": "次のいずれかが発生した場合、ホストはそれ以上のENOオプションを送信控える、暗号化を無効にし、暗号化されていないTCPにフォールバックしなければなりません："
    },
    {
      "indent": 3,
      "text": "1. Any segment it receives up to and including the first received ACK segment does not contain an ENO option (or contains an ill-formed SYN-form ENO option).",
      "ja": "1.任意のセグメントは、それまで受信し、第1受信したACKセグメントを含むことENOオプションが含まれていない（または病気に形成されたSYN状ENOオプションを含有します）。"
    },
    {
      "indent": 3,
      "text": "2. The SYN segment it receives does not contain a valid TEP identifier.",
      "ja": "2.それが受信SYNセグメントが有効TEP識別子が含まれていません。"
    },
    {
      "indent": 3,
      "text": "3. It receives a SYN segment with an incompatible global suboption. (Specifically, \"incompatible\" means the two hosts set the same \"b\" value, or the connection is in mandatory application-aware mode and the remote host set a = 0.)",
      "ja": "3.これは、互換性のないグローバルサブオプションでSYNセグメントを受信します。 （具体的には、「非相溶性」とは、2つのホストが同一の「B」の値を設定する手段、または接続は必須アプリケーションアウェアモードで、リモートホストが= 0を設定しました）"
    },
    {
      "indent": 3,
      "text": "Hosts MUST NOT alter SYN-form ENO options in retransmitted segments, or between the SYN and SYN-ACK segments of a simultaneous open, with two exceptions for an active opener. First, an active opener MAY unilaterally disable ENO (and thus remove the ENO option) between retransmissions of a SYN-only segment. (Such removal could enable recovery from middleboxes dropping segments with ENO options.) Second, an active opener performing simultaneous open MAY include no TCP-ENO option in its SYN-ACK if the received SYN caused it to disable encryption according to the above rules (for instance, because role negotiation failed).",
      "ja": "ホストがアクティブオープナーのための2つの例外を除いて、再送されたセグメントに、又は同時オープンのSYNおよびSYN-ACKセグメント間SYN状ENOオプションを変更してはいけません。まず、アクティブオープナーは一方的ENOを無効にすることができる（したがって、ENOオプションを削除）SYN-だけセグメントの再送信との間。 （このような除去は、ENOオプションでセグメントをドロップする中間装置からの回復を可能にすることができる。）第二に、受信されたSYNは、上記の規則に従って暗号化を無効にすることを引き起こした場合に同時オープンを行うアクティブオープナーは、（そのSYN-ACKにはTCP-ENOオプションを含めなくてもよいです例えば、なぜなら役割交渉）が失敗しました。"
    },
    {
      "indent": 3,
      "text": "Once a host has both sent and received an ACK segment containing an ENO option, encryption MUST be enabled. Once encryption is enabled, hosts MUST follow the specification of the negotiated TEP and MUST NOT present raw TCP payload data to the application. In particular, data segments MUST NOT contain plaintext application data, but rather ciphertext, key negotiation parameters, or other messages as determined by the negotiated TEP.",
      "ja": "ホストが送信され、ENOオプションを含むACKセグメントを受信した両方たら、暗号化を有効にする必要があります。暗号化を有効にすると、ホストが交渉さTEPの仕様に従わなければならないし、アプリケーションに生のTCPペイロードデータを提示してはなりません。ネゴシエートされたTEPによって決定されるように、特に、データ・セグメントは、平文のアプリケーションデータではなく、暗号文、鍵ネゴシエーションパラメータ、または他のメッセージを含んではなりません。"
    },
    {
      "indent": 3,
      "text": "A host MAY send a SYN-form ENO option containing zero TEP identifier suboptions, which we term a \"vacuous\" ENO option. If either host's SYN segment contains a vacuous ENO option, it follows that there are no valid TEP identifiers for the connection, and therefore the connection MUST fall back to unencrypted TCP. Hosts MAY send vacuous ENO options to indicate that ENO is supported but unavailable by configuration, or to probe network paths for robustness to ENO options. However, a passive opener MUST NOT send a vacuous ENO option in a SYN-ACK segment unless there was an ENO option in the SYN segment it received. Moreover, a passive opener's SYN-form ENO option MUST still include a global suboption with b = 1 as discussed in Section 4.3.",
      "ja": "ホストは、私たちが「空虚」ENOオプションを名付けるゼロTEP識別子サブオプションを含むSYN-フォームENOオプションを送るかもしれません。いずれかのホストのSYNセグメントは空虚ENOオプションが含まれている場合は、接続のための有効なTEP識別子が存在しないということになるので、接続が戻って暗号化されていないTCPに入らなければなりません。ホストはENOがサポートされますが、設定することにより使用できない、またはENOオプションに堅牢性のためのネットワークパスを探査していることを示すために空虚ENOオプションを送るかもしれません。それは受信SYNセグメントにおけるENOオプションがあった場合を除きしかし、パッシブオープナーは、SYN-ACKセグメントにおける空虚ENOオプションを送ってはいけません。セクション4.3で議論するようにまた、受動オープナーのSYN状ENOオプションは依然としてB = 1とグローバルサブオプションを含まなければなりません。"
    },
    {
      "indent": 0,
      "text": "4.7. Data in SYN Segments",
      "section_title": true,
      "ja": "4.7。 SYNセグメント内のデータ"
    },
    {
      "indent": 3,
      "text": "TEPs MAY specify the use of data in SYN segments so as to reduce the number of round trips required for connection setup. The meaning of data in a SYN segment with an ENO option (a SYN+ENO segment) is determined by the last TEP identifier in the ENO option, which we term the segment's \"SYN TEP\". A SYN+ENO segment MAY of course include multiple TEP suboptions, but only the SYN TEP (i.e., the last one) specifies how to interpret the SYN segment's data payload.",
      "ja": "接続設定のために必要なラウンドトリップの数を低減するようにTEPSは、SYNセグメント内のデータの使用を指定するかもしれません。 ENOオプション（SYN +のENOセグメント）とのSYNセグメント内のデータの意味は、私たちは、セグメントの「SYN TEPを」という用語ENOオプションの最後のTEP識別子によって決定されます。当然のSYN + 1 ENOセグメントMAYは、複数のTEPのサブオプションを含むが、これらだけSYN TEP（すなわち、最後のもの）は、SYNセグメントのデータペイロードを解釈する方法を指定します。"
    },
    {
      "indent": 3,
      "text": "A host sending a SYN+ENO segment MUST NOT include data in the segment unless the SYN TEP's specification defines the use of such data. Furthermore, to avoid conflicting interpretations of SYN data, a SYN+ENO segment MUST NOT include a non-empty TCP Fast Open (TFO) option [RFC7413].",
      "ja": "SYN TEPの仕様は、そのようなデータの使用を定義しない限り、SYN +のENOセグメントを送信するホストは、セグメント内のデータを含んではいけません。また、SYNデータの競合解釈を避けるために、SYN + 1 ENOセグメントが空でないTCP高速オープン（TFO）オプション[RFC7413]を含んではいけません。"
    },
    {
      "indent": 3,
      "text": "Because a host can send SYN data before knowing which if any TEP the connection will negotiate, hosts implementing ENO are REQUIRED to discard data from SYN+ENO segments when the SYN TEP does not become the negotiated TEP. Hosts are furthermore REQUIRED to discard SYN data in cases where another Internet standard specifies a conflicting interpretation of SYN data (as would occur when receiving a non-empty TFO option). This requirement applies to hosts that implement ENO even when ENO has been disabled by configuration. However, note that discarding SYN data is already common practice [RFC4987] and the new requirement applies only to segments containing ENO options.",
      "ja": "ホストは、任意のTEP接続がネゴシエートする場合は、ENOを実装するホストがSYN TEPがネゴシエートTEPならない場合SYN +のENOセグメントからのデータを破棄するために必要とされている知る前に、SYNデータを送信することができるからです。ホストは、さらに別のインターネット標準は、（非空TFOオプションを受信したときに起こるような）SYNデータの競合解釈を指定する場合にはSYNデータを廃棄する必要があります。この要件は、ENOは、設定によって無効にされている場合でも、ENOを実装するホストに適用されます。しかし、SYNデータを破棄することはすでに一般的な慣行[RFC4987]で、新しい要件のみENOオプションを含むセグメントに適用されることに注意してください。"
    },
    {
      "indent": 3,
      "text": "More specifically, a host that implements ENO MUST discard the data in a received SYN+ENO segment if any of the following applies:",
      "ja": "次のいずれかに該当する場合、より具体的には、ENOを実装するホストは、受信されたSYN +のENOセグメント内のデータを破棄しなければなりません。"
    },
    {
      "indent": 3,
      "text": "o ENO fails and TEP-indicated encryption is disabled for the connection.",
      "ja": "OのENOは失敗し、TEP-示された暗号化は、接続のために無効になっています。"
    },
    {
      "indent": 3,
      "text": "o The received segment's SYN TEP is not the negotiated TEP.",
      "ja": "O受信セグメントのSYN TEPはネゴシエートTEPありません。"
    },
    {
      "indent": 3,
      "text": "o The negotiated TEP does not define the use of SYN data.",
      "ja": "OネゴシエートTEPはSYNデータの使用を定義していません。"
    },
    {
      "indent": 3,
      "text": "o The SYN segment contains a non-empty TFO option or any other TCP option implying a conflicting definition of SYN data.",
      "ja": "O SYNセグメントが空でないTFOオプションまたはSYNデータの矛盾する定義を意味他のTCPオプションを含んでいます。"
    },
    {
      "indent": 3,
      "text": "A host discarding SYN data in compliance with the above requirement MUST NOT acknowledge the sequence number of the discarded data, but rather MUST acknowledge the other host's initial sequence number as if the received SYN segment contained no data. Furthermore, after discarding SYN data, such a host MUST NOT assume the SYN data will be identically retransmitted, and MUST process data only from non-SYN segments.",
      "ja": "上記の要件に準拠してSYNデータを廃棄するホストは、廃棄されたデータのシーケンス番号を確認してはいけませんが、受信されたSYNセグメントがデータを含んでいなかったかのようにではなく、他のホストの初期シーケンス番号を確認しなければなりません。また、SYNデータを破棄した後に、そのようなホストは、SYNデータが同じ再送信されると仮定してはいけません、そして唯一の非SYNセグメントからのデータを処理しなければなりません。"
    },
    {
      "indent": 3,
      "text": "If a host sends a SYN+ENO segment with data and receives acknowledgment for the data, but the SYN TEP in its transmitted SYN segment is not the negotiated TEP (either because a different TEP was negotiated or because ENO failed to negotiate encryption), then the host MUST abort the TCP connection. Proceeding in any other fashion risks misinterpreted SYN data.",
      "ja": "ホストは、データを持つSYN +のENOセグメントを送信し、データのための肯定応答を受信し、その送信されたSYNセグメントにおけるSYN TEPは、次に、ネゴシエートTEP（異なるTEPがネゴシエートされたためか、ENOが暗号化を交渉するために失敗したためのいずれか）でない場合ホストがTCP接続を中止しなければなりません。 SYNデータを誤解し、他のファッションのリスクに進みます。"
    },
    {
      "indent": 3,
      "text": "If a host sends a SYN-only SYN+ENO segment bearing data and subsequently receives a SYN-ACK segment without an ENO option, that host MUST abort the connection even if the SYN-ACK segment does not acknowledge the SYN data. The issue is that unacknowledged data could nonetheless have been cached by the receiver; later retransmissions intended to supersede this unacknowledged data could fail to do so if the receiver gives precedence to the cached original data. Implementations MAY provide an API call for a non-default mode in which unacknowledged SYN data does not cause a connection abort, but applications MUST use this mode only when a higher-layer integrity check would anyway terminate a garbled connection.",
      "ja": "ホストはSYN-のみSYN + ENOセグメント方位データを送信し、その後、ENOオプションを使用せずにSYN-ACKセグメントを受信した場合、そのホストは、SYN-ACKセグメントがSYNデータを認識していない場合でも、接続を中止しなければなりません。問題は、未確認のデータがそれにもかかわらず、受信側でキャッシュされている可能性があることです。受信機は、キャッシュされた元のデータを優先します場合は、この未確認データに取って代わることを意図し、後で再送信は、これを行うに失敗する可能性があります。実装は未確認SYNデータ接続が中止起こさないで、デフォルト以外のモードのためのAPI呼び出しを提供することができるが、上位レイヤの整合性チェックがとにかく文字化けの接続を終了させる場合にのみ、アプリケーションでは、このモードを使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "To avoid unexpected connection aborts, ENO implementations MUST disable the use of data in SYN-only segments by default. Such data MAY be enabled by an API command. In particular, implementations MAY provide a per-connection mandatory encryption mode that automatically aborts a connection if ENO fails, and they MAY enable SYN data in this mode.",
      "ja": "予期しない接続が中止しないようにするには、ENOの実装は、デフォルトでSYN専用セグメント内のデータの使用を無効にする必要があります。このようなデータは、APIコマンドによって有効にすることができます。特に、実装はENOが失敗した場合、自動的に接続を中止接続ごとの必須の暗号化モードを提供し、彼らはこのモードでのSYNデータを可能にします。"
    },
    {
      "indent": 3,
      "text": "To satisfy the requirement of the previous paragraph, all TEPs SHOULD support a normal mode of operation that avoids data in SYN-only segments. An exception is TEPs intended to be disabled by default.",
      "ja": "前の段落の要件を満たすために、すべてのTEPSはSYN専用セグメント内のデータを回避する通常の動作モードをサポートしなければなりません。例外はデフォルトで無効にされることを意図TEPSです。"
    },
    {
      "indent": 0,
      "text": "4.8. Negotiation Transcript",
      "section_title": true,
      "ja": "4.8。交渉トランスクリプト"
    },
    {
      "indent": 3,
      "text": "To defend against attacks on encryption negotiation itself, a TEP MUST, with high probability, fail to establish a working connection between two ENO-compliant hosts when SYN-form ENO options have been altered in transit. (Of course, in the absence of endpoint authentication, two compliant hosts can each still be connected to a man-in-the-middle attacker.) To detect SYN-form ENO option tampering, TEPs MUST reference a transcript of TCP-ENO's negotiation.",
      "ja": "暗号化交渉自体への攻撃を防御するために、TEPは、高い確率で、SYN-フォームENOオプションは中に改ざんされているときに、2つENO準拠のホスト間での作業の接続を確立するために失敗しなければなりません。 （もちろん、エンドポイント認証の不存在下で、2つの準拠したホストが各静止のman-in-the-middle攻撃者に接続することができます。）改ざんSYN-フォームENOオプションを検出するために、TEPSは、TCP-ENOの交渉のトランスクリプトを参照する必要があります。"
    },
    {
      "indent": 3,
      "text": "TCP-ENO defines its negotiation transcript as a packed data structure consisting of two TCP-ENO options exactly as they appeared in the TCP header (including the TCP option kind and TCP option length byte as illustrated in Figure 1). The transcript is constructed from the following, in order:",
      "ja": "TCP-ENO（図1に示すように、TCPオプションの種類とTCPオプションの長さのバイトを含む）は、TCPヘッダに現れたとおりに2つのTCP-ENOオプションからなるパック・データ構造としてのネゴシエーション転写物を定義します。転写物は順番に、以下から構成されています。"
    },
    {
      "indent": 3,
      "text": "1. The TCP-ENO option in host A's SYN segment, including the kind and length bytes",
      "ja": "1種類と長さバイトを含むホストAのSYNセグメントでTCP-ENOオプションを"
    },
    {
      "indent": 3,
      "text": "2. The TCP-ENO option in host B's SYN segment, including the kind and length bytes",
      "ja": "2種類と長さバイトを含むホストBのSYNセグメントでTCP-ENOオプションを"
    },
    {
      "indent": 3,
      "text": "Note that because the ENO options in the transcript contain length bytes as specified by TCP, the transcript unambiguously delimits A's and B's ENO options.",
      "ja": "TCPで指定された転写産物でENOオプションは、長さバイトが含まれているため、転写産物が明確にAさんとBさんENOオプションを区切ることに注意してください。"
    },
    {
      "indent": 0,
      "text": "5. Requirements for TEPs",
      "section_title": true,
      "ja": "TEPS 5.要件"
    },
    {
      "indent": 3,
      "text": "TCP-ENO affords TEP specifications a large amount of design flexibility. However, to abstract TEP differences away from applications requires fitting them all into a coherent framework. As such, any TEP claiming an ENO TEP identifier MUST satisfy the following normative list of properties:",
      "ja": "TCP-ENOは、TEPの仕様に設計の柔軟性を大量に提供します。しかし、抽象TEPの違いに離れアプリケーションからのコヒーレントなフレームワークにそれらすべてを取り付ける必要です。このように、ENO TEP識別子を主張する任意TEPは、特性の次の規範的なリストを満たさなければなりません。"
    },
    {
      "indent": 3,
      "text": "o TEPs MUST protect TCP data streams with authenticated encryption. (Note that \"authenticated encryption\" refers only to the form of encryption, such as an Authenticated Encryption with Associated Data (AEAD) algorithm meeting the requirements of [RFC5116]; it does not imply endpoint authentication.)",
      "ja": "O TEPSは、認証、暗号化とTCPデータストリームを保護する必要があります。 （[RFC5116]の必要条件「認証され暗号化」は、関連するデータ（AEAD）アルゴリズム会で認証暗号化など、暗号化のみの形を指すことに留意されたい。それは、エンドポイントの認証を意味するものではありません。）"
    },
    {
      "indent": 3,
      "text": "o TEPs MUST define a session ID whose value identifies the TCP connection and, with overwhelming probability, is unique over all time if either host correctly obeys the TEP. Section 5.1 describes the requirements of the session ID in more detail.",
      "ja": "O TEPSは、その値がTCPコネクションを識別し、いずれかのホストが正しくTEPに従うならば圧倒的な確率で、すべての時間をかけてユニークなセッションIDを定義しなければなりません。セクション5.1は、より詳細にセッションIDの要件について説明します。"
    },
    {
      "indent": 3,
      "text": "o TEPs MUST NOT make data confidentiality dependent on encryption algorithms with a security strength [NIST-SP-800-57] of less than 120 bits. The number 120 was chosen to accommodate ciphers with 128-bit keys that lose a few bits of security either to particularities of the key schedule or to highly theoretical and unrealistic attacks.",
      "ja": "O TEPS未満120ビットのセキュリティ強度[NIST-SP-800-57]と暗号化アルゴリズムでデータの機密性に依存てはなりません。番号120は、いずれかの鍵スケジュールの特殊性にまたは高度に理論的および非現実的攻撃に対するセキュリティの数ビットを失い、128ビットキーで暗号に対応するために選択しました。"
    },
    {
      "indent": 3,
      "text": "o TEPs MUST NOT allow the negotiation of null cipher suites, even for debugging purposes. (Implementations MAY support debugging modes that allow applications to extract their own session keys.)",
      "ja": "O TEPSも、デバッグ目的のために、ヌル暗号スイートの交渉を許してはなりません。 （実装はアプリケーションが独自のセッションキーを抽出することができ、デバッグモードをサポートするかもしれません。）"
    },
    {
      "indent": 3,
      "text": "o TEPs MUST guarantee the confidentiality of TCP streams without assuming the security of any long-lived secrets. Implementations SHOULD provide forward secrecy soon after the close of a TCP connection and SHOULD therefore bound the delay between closing a connection and erasing any relevant cryptographic secrets. (Exceptions to forward secrecy are permissible only at the implementation level and only in response to hardware or architectural constraints -- e.g., storage that cannot be securely erased.)",
      "ja": "TCPは、任意の長寿命秘密のセキュリティを仮定することなく、ストリームの入出力TEPSは、機密性を保証しなければなりません。実装はすぐにTCPコネクションの終了後前進の秘密保持を提供すべきであるため、接続を閉じて、関連するすべての暗号の秘密を消去する間の遅延を拘束すべきです。 （秘密を転送する例外のみ実装レベルでのみハードウェアまたはアーキテクチャの制約に応じて許容される - 例えば、ストレージ確実に消去することができません）"
    },
    {
      "indent": 3,
      "text": "o TEPs MUST protect and authenticate the end-of-file marker conveyed by TCP's FIN flag. In particular, a receiver MUST, with overwhelming probability, detect a FIN flag that was set or cleared in transit and does not match the sender's intent. A TEP MAY discard a segment with such a corrupted FIN bit or MAY abort the connection in response to such a segment. However, any such abort MUST raise an error condition distinct from an authentic end-of-file condition.",
      "ja": "O TEPSは、TCPのFINフラグによって搬送されたファイル終了マーカーを保護し、認証しなければなりません。特に、受信機は、圧倒的な確率で、設定や輸送中にクリアされ、送信者の意図と一致していないたFINフラグを検出しなければなりません。 TEPは、破損FINビットを有するセグメントを廃棄するか、またはそのようなセグメントに応答して接続を中止することができます。しかしながら、このような中断は、真正エンドオブファイル条件とは異なるエラー条件を提起しなければなりません。"
    },
    {
      "indent": 3,
      "text": "o TEPs MUST prevent corrupted packets from causing urgent data to be delivered when none has been sent. There are several ways to do so. For instance, a TEP MAY cryptographically protect the URG flag and urgent pointer alongside ordinary payload data. Alternatively, a TEP MAY disable urgent data functionality by clearing the URG flag on all received segments and returning errors in response to sender-side urgent-data API calls. Implementations SHOULD avoid negotiating TEPs that disable urgent data by default. The exception is when applications and protocols are known never to send urgent data.",
      "ja": "O TEPSは何も送信されていない時に緊急データが配信される原因から破損したパケットを防止しなければなりません。そうするには、いくつかの方法があります。例えば、TEPは、暗号URGフラグと通常ペイロードデータと一緒に緊急ポインタを保護することができます。あるいは、TEPは、すべての受信セグメントにURGフラグをクリアし、送信側緊急データAPI呼び出しに応答してエラーを返すことによって、緊急データ機能を無効にしてもよいです。実装は、デフォルトでは緊急データを無効TEPSを交渉することは避けてください。アプリケーションとプロトコルが緊急データを送信するために決して知られていない場合は例外です。"
    },
    {
      "indent": 0,
      "text": "5.1. Session IDs",
      "section_title": true,
      "ja": "5.1。セッションIDは"
    },
    {
      "indent": 3,
      "text": "Each TEP MUST define a session ID that is computable by both endpoints and uniquely identifies each encrypted TCP connection. Implementations MUST expose the session ID to applications via an API extension. The API extension MUST return an error when no session ID is available because ENO has failed to negotiate encryption or because no connection is yet established. Applications that are aware of TCP-ENO SHOULD, when practical, authenticate the TCP endpoints by incorporating the values of the session ID and TCP-ENO role (A or B) into higher-layer authentication mechanisms.",
      "ja": "各TEPは、両方のエンドポイントによって計算可能であり、一意に暗号化されたTCPコネクションを識別するセッションIDを定義しなければなりません。実装は、APIの拡張機能を経由してアプリケーションにセッションIDを公開する必要があります。 ENOは、暗号化を交渉に失敗したため、またはまったく接続がまだ確立されていないので、何のセッションIDが使用できない場合APIの拡張機能がエラーを返さなければなりません。 TCP-ENOを認識しているアプリケーションは、ときに実用的な、上位層認証メカニズムにセッションIDの値と、TCP-ENOロール（AまたはB）を組み込むことによって、TCPエンドポイントを認証するべきです。"
    },
    {
      "indent": 3,
      "text": "In order to avoid replay attacks and prevent authenticated session IDs from being used out of context, session IDs MUST be unique over all time with high probability. This uniqueness property MUST hold even if one end of a connection maliciously manipulates the protocol in an effort to create duplicate session IDs. In other words, it MUST be infeasible for a host, even by violating the TEP specification, to establish two TCP connections with the same session ID to remote hosts properly implementing the TEP.",
      "ja": "リプレイ攻撃を回避して、コンテキストの外に使用されてから認証されたセッションIDを防ぐために、セッションIDは、高い確率ですべての時間をかけてユニークでなければなりません。この一意性プロパティは、接続の一端が悪意を持って重複したセッションIDを作成するための努力のプロトコルを操作しても保持しなければなりません。換言すれば、それは適切にTEPを実装するリモート・ホストに同じセッションIDを有する2つのTCP接続を確立するために、偶数TEP仕様に違反することにより、ホストのために実行不可能でなければなりません。"
    },
    {
      "indent": 3,
      "text": "To prevent session IDs from being confused across TEPs, all session IDs begin with the negotiated TEP identifier -- that is, the last valid TEP identifier in host B's SYN segment. Furthermore, this initial byte has bit \"v\" set to the same value that accompanied the negotiated TEP identifier in B's SYN segment. However, only this single byte is included, not any suboption data. Figure 8 shows the resulting format. This format is designed for TEPs to compute unique identifiers; it is not intended for application authors to pick apart session IDs. Applications SHOULD treat session IDs as monolithic opaque values and SHOULD NOT discard the first byte to shorten identifiers. (An exception is for non-security-relevant purposes, such as gathering statistics about negotiated TEPs.)",
      "ja": "TEPS渡って混同されることからセッションIDを防ぐために、すべてのセッションIDが交渉さTEP識別子で始まる - それは、ホストBのSYNセグメントにおける最後の有効なTEP識別子です。また、この最初のバイトは、BのSYNセグメントで交渉TEP識別子を伴う同じ値に設定されたビット「V」を有します。しかし、これだけの単一バイトは、任意のサブオプションのデータではなく含まれています。図8は、得られた形式を示しています。この形式は、一意の識別子を計算するTEPSのために設計されています。それは、セッションIDを離れて選ぶようにアプリケーション作成者のためのものではありません。アプリケーションは、モノリシック不透明な値としてセッションIDを扱うべきであるとの識別子を短縮する最初のバイトを破棄すべきではありません。 （例外は、そのような交渉さTEPSに関する統計を収集などの非セキュリティ関連の目的のためのものです。）"
    },
    {
      "indent": 17,
      "text": "byte    0     1     2        N-1    N\n     +-----+------------...------------+\n     | sub-| collision-resistant hash  |\n     | opt | of connection information |\n     +-----+------------...------------+",
      "raw": true
    },
    {
      "indent": 21,
      "text": "Figure 8: Format of a Session ID",
      "ja": "図8：セッションIDのフォーマット"
    },
    {
      "indent": 3,
      "text": "Though TEP specifications retain considerable flexibility in their definitions of the session ID, all session IDs MUST meet the following normative list of requirements:",
      "ja": "TEPの仕様は、セッションIDのそれらの定義にかなりの柔軟性を維持するものの、すべてのセッションIDは、要件の以下の規範的なリストを満たす必要があります。"
    },
    {
      "indent": 3,
      "text": "o The session ID MUST be at least 33 bytes (including the one-byte suboption), though TEPs MAY choose longer session IDs.",
      "ja": "TEPSが長いセッションIDを選択するかもしれませんが、OセッションIDは、（1バイトのサブオプションを含む）は、少なくとも33バイトでなければなりません。"
    },
    {
      "indent": 3,
      "text": "o The session ID MUST depend, in a collision-resistant way, on all of the following (meaning it is computationally infeasible to produce collisions of the session ID derivation function unless all of the following quantities are identical):",
      "ja": "IDが依存しなければならないセッションO、衝突耐性方法で、以下の全てに（以下の量のすべてが同一でない限り、セッションID導出関数の衝突を生成するために計算上実行不可能であることを意味します）。"
    },
    {
      "indent": 6,
      "text": "* Fresh data contributed by both sides of the connection",
      "ja": "接続の両端が寄与する*新鮮なデータ"
    },
    {
      "indent": 6,
      "text": "* Any public keys, public Diffie-Hellman parameters, or other public asymmetric cryptographic parameters that are employed by the TEP and have corresponding private data that is known by only one side of the connection",
      "ja": "TEPによって採用されており、接続の片側のみに知られている個人データを対応している*すべてのパブリックキー、パブリックのDiffie-Hellmanパラメータ、または他の公共の非対称暗号パラメータ"
    },
    {
      "indent": 6,
      "text": "* The negotiation transcript specified in Section 4.8",
      "ja": "*交渉の転写産物は、4.8節で指定されました"
    },
    {
      "indent": 3,
      "text": "o Unless and until applications disclose information about the session ID, all but the first byte MUST be computationally indistinguishable from random bytes to a network eavesdropper.",
      "ja": "アプリケーションは、セッションIDについての情報を開示しなければとまではO、最初のバイトが、すべては、ネットワーク盗聴者へのランダムバイトから、計算上区別できないでなければなりません。"
    },
    {
      "indent": 3,
      "text": "o Applications MAY choose to make session IDs public. Therefore, TEPs MUST NOT place any confidential data in the session ID (such as data permitting the derivation of session keys).",
      "ja": "Oアプリケーションは、セッションIDを公開することを選択するかもしれません。したがって、TEPSは、（例えば、データがセッションキーの導出を可能にするなど）、セッションID内の機密データを配置してはいけません。"
    },
    {
      "indent": 0,
      "text": "6. Examples",
      "section_title": true,
      "ja": "6.例"
    },
    {
      "indent": 3,
      "text": "This subsection illustrates the TCP-ENO handshake with a few non-normative examples.",
      "ja": "ここでは、いくつかの非規範的な例とTCP-ENOハンドシェイクを示しています。"
    },
    {
      "indent": 13,
      "text": "(1) A -> B:  SYN      ENO<X,Y>\n(2) B -> A:  SYN-ACK  ENO<b=1,Y>\n(3) A -> B:  ACK      ENO<>\n[rest of connection encrypted according to TEP Y]",
      "raw": true
    },
    {
      "indent": 5,
      "text": "Figure 9: Three-Way Handshake with Successful TCP-ENO Negotiation",
      "ja": "図9：成功したTCP-ENOの交渉とスリーウェイハンドシェイク"
    },
    {
      "indent": 3,
      "text": "Figure 9 shows a three-way handshake with a successful TCP-ENO negotiation. Host A includes two ENO suboptions with TEP identifiers X and Y. Host A does not include an explicit global suboption, which means it has an implicit global suboption 0x00 conveying passive role bit b = 0. The two sides agree to follow the TEP identified by suboption Y.",
      "ja": "図9は、成功したTCP-ENO交渉とスリーウェイハンドシェイクを示しています。 Aは、それが= 0の双方がによって識別TEPに従うことに同意受動的な役割ビットb搬送暗黙グローバルサブオプションは0x00を有することを意味する明示的グローバルサブオプションを含まないTEP識別子XおよびYホストAを有する2つのENOサブオプションを含むホストサブオプションY."
    },
    {
      "indent": 16,
      "text": "(1) A -> B:  SYN      ENO<X,Y>\n(2) B -> A:  SYN-ACK\n(3) A -> B:  ACK\n[rest of connection unencrypted legacy TCP]",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Figure 10: Three-Way Handshake with Failed TCP-ENO Negotiation",
      "ja": "図10：スリーウェイハンドシェイクに失敗しましたTCP-ENOの交渉で"
    },
    {
      "indent": 3,
      "text": "Figure 10 shows a failed TCP-ENO negotiation. The active opener (A) indicates support for TEPs corresponding to suboptions X and Y. Unfortunately, at this point, one of several things occurs:",
      "ja": "図10は失敗したTCP-ENO交渉を示しています。アクティブオープナー（A）は、この時点で、サブオプション残念なことにXとYに対応TEPSのサポートを示し、いくつかのいずれかが発生します。"
    },
    {
      "indent": 3,
      "text": "1. The passive opener (B) does not support TCP-ENO.",
      "section_title": true,
      "ja": "1.パッシブオープナー（B）は、TCP-ENOをサポートしていません。"
    },
    {
      "indent": 3,
      "text": "2. B supports TCP-ENO but supports neither of the TEPs X and Y, and so it does not reply with an ENO option.",
      "ja": "2. Bは、TCP-ENOをサポートしていますが、TEPSのXとYのどちらをサポートしており、それはENOオプションで応答しません。"
    },
    {
      "indent": 3,
      "text": "3. B supports TCP-ENO but has the connection configured in mandatory application-aware mode and thus disables ENO because A's SYN segment contains an implicit global suboption with a = 0.",
      "ja": "3. Bは、TCP-ENOをサポートするが、接続必須アプリケーション対応モードに設定し、従ってAのSYNセグメントは= 0の暗黙的なグローバルサブオプションが含まれているため、ENOを無効にしています。"
    },
    {
      "indent": 3,
      "text": "4. The network stripped the ENO option out of A's SYN segment, so B did not receive it.",
      "ja": "4.ネットワークは、AのSYNセグメントのうちENOオプションを剥奪ので、Bはそれを受信しませんでした。"
    },
    {
      "indent": 3,
      "text": "Whichever of the above applies, the connection transparently falls back to unencrypted TCP.",
      "ja": "上記のいずれの適用、接続は透過的に暗号化されていないバックTCPに落ちます。"
    },
    {
      "indent": 7,
      "text": "(1) A -> B:  SYN      ENO<X,Y>\n(2) B -> A:  SYN-ACK  ENO<b=1,X> [ENO stripped by middlebox]\n(3) A -> B:  ACK\n[rest of connection unencrypted legacy TCP]",
      "raw": true
    },
    {
      "indent": 5,
      "text": "Figure 11: Failed TCP-ENO Negotiation Because of Option Stripping",
      "ja": "図11：ストリップので、オプションの失敗TCP-ENOネゴシエーション"
    },
    {
      "indent": 3,
      "text": "Figure 11 Shows another handshake with a failed encryption negotiation. In this case, the passive opener (B) receives an ENO option from A and replies. However, the reverse network path from B to A strips ENO options. Therefore, A does not receive an ENO option from B, it disables ENO, and it does not include a non-SYN-form ENO option in segment 3 when ACKing B's SYN. Had A not disabled encryption, Section 4.6 would have required it to include a non-SYN-form ENO option in segment 3. The omission of this option informs B that encryption negotiation has failed, after which the two hosts proceed with unencrypted TCP.",
      "ja": "図11は失敗した暗号化交渉を持つ別のハンドシェイクを表示します。この場合、受動オープナー（B）はAと回答からENOオプションを受信します。しかし、BからAへの逆のネットワークパスは、ENOオプションストリップ。したがって、AはBからENOオプションを受信しない、それはENOを無効にし、BのSYNの肯定応答（ACK）するときには、セグメント3内の非SYN状ENOオプションが含まれていません。無効になっていない暗号化を持っていた、4.6節では、セグメント3このオプションの省略は、2つのホストが暗号化されていないTCPを進めた後に暗号化交渉が失敗したBを、知らせるにおける非SYN-フォームENOオプションを含めるためにそれを必要としました。"
    },
    {
      "indent": 13,
      "text": "(1) A -> B:  SYN      ENO<Y,X>\n(2) B -> A:  SYN      ENO<b=1,X,Y,Z>\n(3) A -> B:  SYN-ACK  ENO<Y,X>\n(4) B -> A:  SYN-ACK  ENO<b=1,X,Y,Z>\n[rest of connection encrypted according to TEP Y]",
      "raw": true
    },
    {
      "indent": 5,
      "text": "Figure 12: Simultaneous Open with Successful TCP-ENO Negotiation",
      "ja": "図12：成功したTCP-ENOの交渉と同時オープン"
    },
    {
      "indent": 3,
      "text": "Figure 12 shows a successful TCP-ENO negotiation with simultaneous open. Here, the first four segments contain a SYN-form ENO option, as each side sends both a SYN-only and a SYN-ACK segment. The ENO option in each host's SYN-ACK is identical to the ENO option in its SYN-only segment, as otherwise, connection establishment could not recover from the loss of a SYN segment. The last valid TEP in host B's ENO option is Y, so Y is the negotiated TEP.",
      "ja": "図12は、同時オープンで成功したTCP-ENO交渉を示しています。各側はSYN-のみとSYN-ACKセグメントの両方を送信するようにここでは、最初の4つのセグメントは、SYN-フォームENOオプションを含みます。各ホストのSYN-ACKでENOオプションがSYN-セグメントのみでENOオプションと同一であり、そうでないように、接続確立はSYNセグメントの損失から回復することができませんでした。ホストBのENOオプションで最後の有効なTEPはYであるので、Yは交渉しTEPです。"
    },
    {
      "indent": 0,
      "text": "7. Future Developments",
      "section_title": true,
      "ja": "7.今後の展開"
    },
    {
      "indent": 3,
      "text": "TCP-ENO is designed to capitalize on future developments that could alter trade-offs and change the best approach to TCP-level encryption (beyond introducing new cipher suites). By way of example, we discuss a few such possible developments.",
      "ja": "TCP-ENOはトレードオフを変更し、（新しい暗号スイートを導入超えて）TCPレベルの暗号化への最良のアプローチを変更することができ、将来の発展に活用するように設計されています。一例として、我々はいくつかのような可能な発展を議論します。"
    },
    {
      "indent": 3,
      "text": "Various proposals exist to increase the maximum space for options in the TCP header. These proposals are highly experimental -- particularly those that apply to SYN segments. Therefore, future TEPs are unlikely to benefit from extended SYN option space. In the unlikely event that SYN option space is one day extended, however, future TEPs could benefit by embedding key agreement messages directly in SYN segments. Under such usage, the 32-byte limit on length bytes could prove insufficient. This document intentionally aborts TCP-ENO if a length byte is followed by an octet in the range 0x00-0x9f. If necessary, a future update to this document can define a format for larger suboptions by assigning meaning to such currently undefined byte sequences.",
      "ja": "種々の提案がTCPヘッダ内のオプションのために最大の空間を増大させるために存在します。これらの提案は非常に実験的である -  SYNセグメントに適用される特に。そのため、将来のTEPSは、拡張されたSYNのオプション空間の恩恵を受ける可能性は低いです。万一SYNオプションスペースが1日延長されていること、しかし、将来のTEPSは、SYNセグメントに直接鍵合意メッセージを埋め込むことによって利益を得ることができます。このような使用下では、長さバイトに32バイトの制限は不十分証明することができます。長さバイトが範囲0x00-0x9fにおけるオクテットが続く場合、この文書は、意図的にTCP-ENOを中止します。必要であれば、このドキュメントの将来のアップデートは、現在未定義バイト配列に意味を割り当てることによって、より大きなサブオプションのフォーマットを定義することができます。"
    },
    {
      "indent": 3,
      "text": "New revisions to socket interfaces [RFC3493] could involve library calls that simultaneously have access to hostname information and an underlying TCP connection. Such an API enables the possibility of authenticating servers transparently to the application, particularly in conjunction with technologies such as DNS-Based Authentication of Named Entities (DANE) [RFC6394]. An update to TCP-ENO can adopt one of the \"z\" bits in the global suboption to negotiate the use of an endpoint authentication protocol before any application use of the TCP connection. Over time, the consequences of failed or missing endpoint authentication can gradually be increased from issuing log messages to aborting the connection if some as yet unspecified DNS record indicates authentication is mandatory. Through shared library updates, such endpoint authentication can potentially be added transparently to legacy applications without recompilation.",
      "ja": "ソケットインタフェース[RFC3493]に新しいリビジョンを同時にホスト名の情報とその下にあるTCP接続へのアクセスを持っているライブラリの呼び出しを必要とすることができます。そのようなAPIは、名前付きエンティティ（DANE）[RFC6394]のDNSベースの認証などの技術と特に関連して、アプリケーションに透過的にサーバを認証する可能性を可能にします。 TCP-ENOの更新は、TCP接続の任意のアプリケーションの使用前に、エンドポイント認証プロトコルの使用を交渉するためにグローバルサブオプションで「Z」ビットのうちの1つを採用することができます。時間が経つにつれて、失敗したか、欠落しているエンドポイント認証の結果は徐々にいくつかのように、まだ不特定のDNSレコードは、認証が必須であることを示している場合、接続を中止にログメッセージを発行することから増加させることができます。共有ライブラリのアップデートを通じて、こうしたエンドポイントの認証は、潜在的に再コンパイルすることなく、従来のアプリケーションに透過的に追加することができます。"
    },
    {
      "indent": 3,
      "text": "TLS can currently only be added to legacy applications whose protocols accommodate a STARTTLS command or equivalent. TCP-ENO, because it provides out-of-band signaling, opens the possibility of future TLS revisions being generically applicable to any TCP application.",
      "ja": "TLSは現在、そのプロトコルSTARTTLSコマンドまたは同等に対応レガシーアプリケーションに追加することができます。 TCP-ENO、それは、アウトオブバンドシグナリングを提供し、将来のTLSのリビジョンは任意のTCPアプリケーションに一般的に適用されることの可能性を開くため。"
    },
    {
      "indent": 0,
      "text": "8. Design Rationale",
      "section_title": true,
      "ja": "8.デザイン理論的根拠"
    },
    {
      "indent": 3,
      "text": "This section describes some of the design rationale behind TCP-ENO.",
      "ja": "このセクションでは、TCP-ENOの背後にある設計根拠のいくつかを説明します。"
    },
    {
      "indent": 0,
      "text": "8.1. Handshake Robustness",
      "section_title": true,
      "ja": "8.1。握手堅牢性"
    },
    {
      "indent": 3,
      "text": "Incremental deployment of TCP-ENO depends critically on failure cases devolving to unencrypted TCP rather than causing the entire TCP connection to fail.",
      "ja": "TCP-ENOの増分の展開は、暗号化されていないTCPに委譲ではなく、失敗する全体のTCPコネクションを起こし、故障の場合に大きく依存します。"
    },
    {
      "indent": 3,
      "text": "Because a network path might drop ENO options in one direction only, a host needs to know not just that the peer supports encryption, but that the peer has received an ENO option. To this end, ENO disables encryption unless it receives an ACK segment bearing an ENO option. To stay robust in the face of dropped segments, hosts continue to include non-SYN-form ENO options in segments until the point that they have received a non-SYN segment from the other side.",
      "ja": "ネットワークパスが一方向にのみENOオプションをドロップする可能性があるため、ホストは、ピアが暗号化をサポートしていないだけであることを知っている必要がありますが、ピアはENOオプションを受信したこと。それはENOオプションを保有するACKセグメントを受信しない限り、この目的を達成するために、ENOは、暗号化を無効にします。ドロップされたセグメントの面にロバスト滞在し、ホストは、他の側からの非SYNセグメントを受信した時点までのセグメントに非SYN状ENOオプションを含むように続けます。"
    },
    {
      "indent": 3,
      "text": "One particularly pernicious middlebox behavior found in the wild is load balancers that echo unknown TCP options found in SYN segments back to an active opener. The passive role bit \"b\" in global suboptions ensures encryption will always be disabled under such circumstances, as sending back a verbatim copy of an active opener's SYN-form ENO option always causes role negotiation to fail.",
      "ja": "野生で見られる一つの特に悪質なミドルの動作はバックアクティブオープナーにSYNセグメントで見つかった未知のTCPオプションをエコーロードバランサです。グローバルサブオプションでの受動的な役割ビット「b」は、暗号化は、常にこのような状況の下で無効になります保証し、アクティブオープナーのSYN-フォームENOオプションの逐語的なコピーを送り返すよう、常に役割交渉が失敗します。"
    },
    {
      "indent": 0,
      "text": "8.2. Suboption Data",
      "section_title": true,
      "ja": "8.2。サブオプションのデータ"
    },
    {
      "indent": 3,
      "text": "TEPs can employ suboption data for session caching, cipher suite negotiation, or other purposes. However, TCP currently limits total option space consumed by all options to only 40 bytes, making it impractical to have many suboptions with data. For this reason, ENO optimizes the case of a single suboption with data by inferring the length of the last suboption from the TCP option length. Doing so saves one byte.",
      "ja": "TEPSは、セッションキャッシング、暗号スイートのネゴシエーション、または他の目的のためにサブオプションのデータを採用することができます。しかし、TCPは、現在、それは非現実的なデータを持つ多くのサブオプションを持つようになって、わずか40バイトにすべてのオプションによって消費される総オプション空間を制限します。このため、ENOは、TCPオプションの長さから、最後のサブオプションの長さを推定することにより、データを持つ単一のサブオプションの場合を最適化します。そうすることで1つのバイトが保存されます。"
    },
    {
      "indent": 0,
      "text": "8.3. Passive Role Bit",
      "section_title": true,
      "ja": "8.3。受動的な役割ビット"
    },
    {
      "indent": 3,
      "text": "TCP-ENO, TEPs, and applications all have asymmetries that require an unambiguous way to identify one of the two connection endpoints. As an example, Section 4.8 specifies that host A's ENO option comes before host B's in the negotiation transcript. As another example, an application might need to authenticate one end of a TCP connection with a digital signature. To ensure the signed message cannot be interpreted out of context to authenticate the other end, the signed message would need to include both the session ID and the local role, A or B.",
      "ja": "TCP-ENO、TEPS、およびアプリケーションは、すべての二つの接続エンドポイントの1つを識別するための明確な方法を必要とする非対称性を持っています。一例として、4.8節では、ホストAのENOオプションが交渉転写物におけるホストBのの前に来ることを指定します。別の例として、アプリケーションは、デジタル署名とのTCP接続の一端を認証する必要があるかもしれません。署名されたメッセージは、もう一方の端を認証コンテキストから解釈できない保証するために、署名されたメッセージは、セッションIDとローカル・ロール、AまたはBの両方を含む必要があります"
    },
    {
      "indent": 3,
      "text": "A normal TCP three-way handshake involves one active and one passive opener. This asymmetry is captured by the default configuration of the \"b\" bit in the global suboption. With simultaneous open, both hosts are active openers, so TCP-ENO requires that one host explicitly configure b = 1. An alternate design might automatically break the symmetry to avoid this need for explicit configuration. However, all such designs we considered either lacked robustness or consumed precious bytes of SYN option space even in the absence of simultaneous open. (One complicating factor is that TCP does not know it is participating in a simultaneous open until after it has sent a SYN segment. Moreover, with packet loss, one host might never learn it has participated in a simultaneous open.)",
      "ja": "通常のTCP 3ウェイハンドシェイクは、アクティブな1と1つのパッシブオープナーを必要とします。この非対称性は、グローバルサブオプションで「B」ビットのデフォルトの設定で撮影しています。同時オープンでは、両方のホストがアクティブオープナーであるため、TCP-ENO 1つのホストが明示的にB = 1の代替設計を設定する必要があり、自動的に明示的な設定のために、この必要性を回避するために、対称性を壊すかもしれません。しかし、そのようなすべてのデザイン我々はどちらかと考え堅牢性に欠けていたかさえも同時オープンが存在しない場合にSYNオプションスペースの貴重なバイトを消費していました。 （一つの複雑な要因は、TCPは、それがSYNセグメントを送信した後まで同時オープンに参加している知っていないことである。また、パケットロスで、一つのホストは、それが同時オープンに参加している学ぶことはありませんかもしれません。）"
    },
    {
      "indent": 0,
      "text": "8.4. Application-Aware Bit",
      "section_title": true,
      "ja": "8.4。アプリケーション対応ビット"
    },
    {
      "indent": 3,
      "text": "Applications developed before TCP-ENO can potentially evolve to take advantage of TCP-level encryption. For instance, an application designed to run only on trusted networks might leverage TCP-ENO to run on untrusted networks, but, importantly, needs to authenticate endpoints and session IDs to do so. In addition to user-visible changes such as requesting credentials, this kind of authentication functionality requires application-layer protocol changes. Some protocols can accommodate the requisite changes -- for instance, by introducing a new verb analogous to STARTTLS, while others cannot do so in a backwards-compatible manner.",
      "ja": "TCP-ENO前に開発されたアプリケーションは、潜在的にTCPレベルの暗号化を利用するように進化させることができます。例えば、唯一の信頼できるネットワーク上で動作するように設計されたアプリケーションは、信頼できないネットワーク上で実行するようにTCP-ENOを活用するかもしれませんが、、重要なのは、そうするように、エンドポイントとセッションIDを認証する必要があります。そのような認証情報を要求するようユーザに見える変化に加えて、認証機能のこの種のアプリケーション層のプロトコルの変更を必要とします。いくつかのプロトコルは、必要な変化に対応することができる - 例えば、他のものは下位互換性のある方法で行うことができないが、STARTTLSと類似の新しい動詞を導入することによって。"
    },
    {
      "indent": 3,
      "text": "The application-aware bit \"a\" in the global suboption provides a means of incrementally deploying enhancements specific to TCP-ENO to application-layer protocols that would otherwise lack the necessary extensibility. Software implementing the enhancement always sets a = 1 in its own global suboption, but only activates the new behavior when the other end of the connection also sets a = 1.",
      "ja": "アプリケーション対応ビット「」グローバルサブオプションでインクリメンタルそうでない場合は、必要な拡張性に欠けるでしょうアプリケーション層のプロトコルにTCP-ENOに固有の拡張機能を導入する手段を提供します。向上を実現するソフトウェアは、常に独自のグローバルサブオプションに= 1を設定しますが、接続のもう一方の端はまた= 1を設定したときにのみ、新しい行動を活性化させます。"
    },
    {
      "indent": 3,
      "text": "A related issue is that an application might leverage TCP-ENO as a replacement for legacy application-layer encryption. In this scenario, if both endpoints support TCP-ENO, then application-layer encryption can be disabled in favor of simply authenticating the TCP-ENO session ID. On the other hand, if one endpoint is not aware of the new mode of operation specific to TCP-ENO, there is little benefit to performing redundant encryption at the TCP layer; data is already encrypted once at the application layer, and authentication only has meaning with respect to this application-layer encryption. The mandatory application-aware mode lets applications avoid double encryption in this case: the mode sets a = 1 in the local host's global suboption but also disables TCP-ENO entirely in the event that the other side has not also set a = 1.",
      "ja": "関連する問題は、アプリケーションがレガシーアプリケーション層の暗号化のための代替としてTCP-ENOを活用する可能性があるということです。両方のエンドポイントがTCP-ENOをサポートする場合、このシナリオでは、その後、アプリケーション層の暗号化は、単にTCP-ENOのセッションIDを認証するのに有利に無効にすることができます。一方のエンドポイントは、TCP-ENOに特定の操作の新しいモードを認識していない場合一方、TCPレイヤで冗長な暗号化を行うことにほとんど利益があります。データはすでにアプリケーション層で一度に暗号化され、認証にのみ、このアプリケーション層の暗号化に関して意味を持ちます。必須アプリケーションアウェアモードは、アプリケーションが、この場合には二重の暗号化を避けることができます：モードでは、ローカルホストのグローバルサブオプションに= 1を設定しますが、他の側にも= 1を設定しなかった場合には、完全にTCP-ENOを無効にします。"
    },
    {
      "indent": 3,
      "text": "Note that the application-aware bit is not needed by applications that already support adequate higher-layer encryption such as those provided by TLS [RFC8446] or SSH [RFC4253]. To avoid double encryption in such cases, it suffices to disable TCP-ENO by configuration on any ports with known secure protocols.",
      "ja": "アプリケーションアウェアビットがすでにTLS [RFC8446]またはSSH [RFC4253]により提供されるような適切な上位層の暗号化をサポートするアプリケーションによって必要とされないことに留意されたいです。このような場合には二重の暗号化を避けるために、それが知られているセキュアなプロトコルと任意のポートでの設定により、TCP-ENOを無効にすればよいです。"
    },
    {
      "indent": 0,
      "text": "8.5. Use of ENO Option Kind by TEPs",
      "section_title": true,
      "ja": "8.5。 TEPSによってENOオプション種類の使用"
    },
    {
      "indent": 3,
      "text": "This document does not specify the use of ENO options beyond the first few segments of a connection. Moreover, it does not specify the content of ENO options in non-SYN segments, only their presence. As a result, any use of option kind 69 after the SYN exchange does not conflict with this document. In addition, because ENO guarantees at most one negotiated TEP per connection, TEPs will not conflict with one another or ENO if they use option kind 69 for out-of-band signaling in non-SYN segments.",
      "ja": "この文書では、接続の最初の数のセグメントを越えたENOオプションの使用を指定しません。また、それは、唯一その存在を非SYNセグメントにおけるENOオプションの内容が指定されていません。その結果、SYN交換後のオプションの種類69のいずれかの使用は、このドキュメントと競合することはありません。彼らはアウトオブバンドは、非SYNセグメントにおけるシグナル伝達のためのオプションの種類69を使用している場合また、ENOの保証は、接続ごとに最大1つの交渉さTEPで、TEPSは、互いにまたはENOと競合しないので。"
    },
    {
      "indent": 0,
      "text": "8.6. Unpredictability of Session IDs",
      "section_title": true,
      "ja": "8.6。セッションIDの予測不可能性"
    },
    {
      "indent": 3,
      "text": "Section 5.1 specifies that all but the first (TEP identifier) byte of a session ID MUST be computationally indistinguishable from random bytes to a network eavesdropper. This property is easy to ensure under standard assumptions about cryptographic hash functions. Such unpredictability helps security in a broad range of cases. For example, it makes it possible for applications to use a session ID from one connection to authenticate a session ID from another, thereby tying the two connections together. It furthermore helps ensure that TEPs do not trivially subvert the 33-byte minimum-length requirement for session IDs by padding shorter session IDs with zeros.",
      "ja": "セクション5.1は、セッションIDの最初の（TEP識別子）バイトが、すべてがネットワーク盗聴者へのランダムバイトから計算区別できなければならないことを指定します。このプロパティは、暗号学的ハッシュ関数に関する標準仮定の下で確保することは容易です。このような予測不可能性は、例幅広い範囲でのセキュリティに役立ちます。例えば、それは可能なアプリケーションは、それによって2つの接続を結ぶ、他からセッションIDを認証するために、1つの接続からのセッションIDを使用することを可能にします。それはさらに、TEPSは自明ゼロで短いセッションIDをパディングすることによって、セッションIDの33バイトの最小長の要件を破壊していないことを保証します。"
    },
    {
      "indent": 0,
      "text": "9. Experiments",
      "section_title": true,
      "ja": "9.実験"
    },
    {
      "indent": 3,
      "text": "This document has experimental status because TCP-ENO's viability depends on middlebox behavior that can only be determined a posteriori. Specifically, we need to determine to what extent middleboxes will permit the use of TCP-ENO. Once TCP-ENO is deployed, we will be in a better position to gather data on two types of failure:",
      "ja": "TCP-ENOの生存率が唯一の事後に判断することができるミドルの行動に依存しているため、この文書では、実験的なステータスがあります。具体的には、ある程度のミドルボックスは、TCP-ENOの使用を可能にするものに決定する必要があります。 TCP-ENOが展開されたら、私たちは、障害の2種類のデータを収集するためのより良い位置になります。"
    },
    {
      "indent": 3,
      "text": "1. Middleboxes downgrading TCP-ENO connections to unencrypted TCP. This can happen if middleboxes strip unknown TCP options or if they terminate TCP connections and relay data back and forth.",
      "ja": "暗号化されていないTCPとTCP-ENO接続をダウングレード1のMiddleboxes。彼らはTCP接続を終了し、前後にデータを中継する場合、これはミドルボックスは、未知のTCPオプションを取り除く場合に発生またはすることができます。"
    },
    {
      "indent": 3,
      "text": "2. Middleboxes causing TCP-ENO connections to fail completely. This can happen if middleboxes perform deep packet inspection and start dropping segments that unexpectedly contain ciphertext, or if middleboxes strip ENO options from non-SYN segments after allowing them in SYN segments.",
      "ja": "TCP-ENOの接続が完全に失敗する原因2.のMiddleboxes。ミドルボックスは、ディープパケットインスペクションを実行し、予想外に暗号文が含まれている、またはミドルボックスは、SYNセグメントでそれらをせた後非SYNセグメントからENOオプションを取り除く場合はドロップセグメントを開始した場合に発生することがあります。"
    },
    {
      "indent": 3,
      "text": "Type-1 failures are tolerable since TCP-ENO is designed for incremental deployment anyway. Type-2 failures are more problematic, and, if prevalent, will require the development of techniques to avoid and recover from such failures. The experiment will succeed so long as we can avoid type-2 failures and find sufficient use cases that avoid type-1 failures (possibly along with a gradual path for further reducing type-1 failures).",
      "ja": "TYPE-1 TCP-ENOがとにかく増分の展開のために設計されているので失敗が許容されています。タイプ2の障害が流行した場合、回避し、このような障害から回復する技術の開発が必要となる、より多くの問題があり、そして。我々は2型障害を回避し、1型障害を避けるため、十分なユースケースを見つけることができるような実験は（さらに1型障害を低減するため、おそらく緩やかなパスと一緒に）限り成功します。"
    },
    {
      "indent": 3,
      "text": "In addition to the question of basic viability, deploying TCP-ENO will allow us to identify and address other potential corner cases or relaxations. For example, does the slight decrease in effective TCP segment payload pose a problem to any applications, which would require restrictions on how TEPs interpret socket buffer sizes? Conversely, can we relax the prohibition on default TEPs that disable urgent data?",
      "ja": "基本的な生存能力の問題に加えて、展開TCP-ENOは、私たちは他の潜在的なコーナーケースや緩和を特定し、対処することができます。例えば、効果的なTCPセグメントのペイロード内のわずかな減少は、TEPSは、ソケットバッファサイズをどう解釈するかの制限を必要とするあらゆるアプリケーションに問題を提起していますか？逆に、我々は緊急データを無効にするデフォルトのTEPSの禁止を緩和することができますか？"
    },
    {
      "indent": 3,
      "text": "A final important metric, related to the pace of deployment and incidence of type-1 failures, will be the extent to which applications adopt enhancements specific to TCP-ENO for endpoint authentication.",
      "ja": "1型障害の展開と発生率のペースに関連する最後の重要なメトリックは、アプリケーションがエンドポイント認証のためのTCP-ENOに固有の機能強化を採用する範囲となります。"
    },
    {
      "indent": 0,
      "text": "10. Security Considerations",
      "section_title": true,
      "ja": "10.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "An obvious use case for TCP-ENO is opportunistic encryption, e.g., encrypting some connections, but only where supported and without any kind of endpoint authentication. Opportunistic encryption provides a property known as \"opportunistic security\" [RFC7435], which protects against undetectable large-scale eavesdropping. However, it does not protect against detectable large-scale eavesdropping (for instance, if ISPs terminate TCP connections and proxy them or simply downgrade connections to unencrypted). Moreover, opportunistic encryption emphatically does not protect against targeted attacks that employ trivial spoofing to redirect a specific high-value connection to a man-in-the-middle attacker. Hence, the mere presence of TEP-indicated encryption does not suffice for an application to represent a connection as secure to the user.",
      "ja": "TCP-ENOのための明白なユースケースは、日和見暗号化され、例えば、いくつかの接続を暗号化することが、唯一の場所をサポートし、エンドポイント認証のいずれかの種類なし。日和見暗号化が検出不可能大規模な盗聴から保護する「日和見セキュリティ」[RFC7435]として知られているプロパティを提供します。 （ISPがTCP接続およびプロキシそれらを終了するか、単純に暗号化されていないとの接続をダウングレードする場合、たとえば）しかし、それは、検出可能な大規模な盗聴を防ぐことはできません。また、日和見暗号化は強調のman-in-the-middle攻撃者に特有の付加価値の高い接続をリダイレクトするように些細ななりすましを採用する標的型攻撃を防ぐことはできません。したがって、TEP-示される暗号化の単なる存在は、ユーザへの安全な接続などを表現するアプリケーションのために十分ではありません。"
    },
    {
      "indent": 3,
      "text": "Achieving stronger security with TCP-ENO requires verifying session IDs. Any application relying on ENO for communication security MUST incorporate session IDs into its endpoint authentication. By way of example, an authentication mechanism based on keyed digests (such as Digest Access Authentication [RFC7616]) can be extended to include the role and session ID in the input of the keyed digest. Authentication mechanisms with a notion of channel binding (such as Salted Challenge Response Authentication Mechanism (SCRAM) [RFC5802])",
      "ja": "TCP-ENOとの強力なセキュリティを実現するには、セッションIDを検証する必要があり。通信セキュリティのためENOに依存する任意のアプリケーションは、そのエンドポイントの認証にセッションIDを組み込む必要があります。一例として、（例えば、ダイジェストアクセス認証[RFC7616]のような）キー付きダイジェストに基づいて認証機構は、キー付きダイジェストの入力における役割とセッションIDを含むように拡張することができます。結合チャネルの概念と認証メカニズム（例えば塩漬けチャレンジレスポンス認証メカニズム（SCRAM）として[RFC5802]）"
    },
    {
      "indent": 3,
      "text": "can be updated to derive a channel binding from the session ID. Higher-layer protocols MAY use the application-aware \"a\" bit to negotiate the inclusion of session IDs in authentication even when there is no in-band way to carry out such a negotiation. Because there is only one \"a\" bit, however, a protocol extension that specifies use of the \"a\" bit will likely require a built-in versioning or negotiation mechanism to accommodate crypto agility and future updates.",
      "ja": "セッションIDから結合チャネルを導出するように更新することができます。上位層プロトコルは、そのような交渉を行う一切のインバンド方法がない場合でも、認証にセッションIDを含めることを交渉するアプリケーション対応「」ビットを使用するかもしれません。一つだけ「」ビットがあるので、しかし、「」ビットの使用を指定したプロトコルの拡張機能は、おそらく暗号敏捷性と将来のアップデートに対応するために、組み込みのバージョン管理やネゴシエーションメカニズムが必要になります。"
    },
    {
      "indent": 3,
      "text": "Because TCP-ENO enables multiple different TEPs to coexist, security could potentially be only as strong as the weakest available TEP. In particular, if TEPs use a weak hash function to incorporate the TCP-ENO transcript into session IDs, then an attacker can undetectably tamper with ENO options to force negotiation of a deprecated and vulnerable TEP. To avoid such problems, security reviewers of new TEPs SHOULD pay particular attention to the collision resistance of hash functions used for session IDs (including the state of cryptanalysis and research into possible attacks). Even if other parts of a TEP rely on more esoteric cryptography that turns out to be vulnerable, it ought nonetheless to be intractable for an attacker to induce identical session IDs at both ends after tampering with ENO contents in SYN segments.",
      "ja": "TCP-ENOが共存する複数の異なるTEPSを可能にしているので、セキュリティは潜在的に最も弱い可能なTEPと同じくらい強力である可能性があります。 TEPSは、セッションIDにTCP-ENO転写物を組み込むこと弱いハッシュ関数を使用する場合、特に、攻撃者は検出できない非推奨と脆弱TEPのネゴシエーションを強制的にENOオプションを改ざんすることができます。このような問題を回避するには、新しいTEPSのセキュリティ審査は、（暗号解読の状態と、攻撃の可能性の研究を含む）のセッションIDに使用するハッシュ関数の衝突困難性に特に注意を払う必要があります。 TEPの他の部分が脆弱であることが判明し、より難解な暗号方式に依存している場合であっても、それにもかかわらずSYNセグメントにENO内容の改ざん後の両端に同一のセッションIDを誘導する攻撃者難治性であるべきです。"
    },
    {
      "indent": 3,
      "text": "Implementations MUST NOT send ENO options unless they have access to an adequate source of randomness [RFC4086]. Without secret unpredictable data at both ends of a connection, it is impossible for TEPs to achieve confidentiality and forward secrecy. Because systems typically have very little entropy on bootup, implementations might need to disable TCP-ENO until after system initialization.",
      "ja": "彼らはランダム[RFC4086]の十分なソースへのアクセスを持っていない限り実装はENOオプションを送ってはいけません。 TEPSは、機密性と前進の秘密保持を達成するために、接続の両端の秘密の予測不可能なデータがなければ、それは不可能です。システムは通常、起動時にはほとんどのエントロピーを持っているので、実装は、システムの初期化後までTCP-ENOを無効にする必要があります。"
    },
    {
      "indent": 3,
      "text": "With a regular three-way handshake (meaning no simultaneous open), the non-SYN-form ENO option in an active opener's first ACK segment MAY contain N > 0 bytes of TEP-specific data, as shown in Figure 3. Such data is not part of the TCP-ENO negotiation transcript and therefore MUST be separately authenticated by the TEP.",
      "ja": "3.このようなデータは図には図示のように（非同時開放を意味しない）正規スリーウェイハンドシェイクと、アクティブオープナーの最初のACKセグメント中の非SYN状ENOオプションは、TEP固有のデータのN> 0バイトを含むかもしれしたがって、いないTCP-ENO交渉転写物の一部とは別にTEPによって認証されなければなりません。"
    },
    {
      "indent": 0,
      "text": "11. IANA Considerations",
      "section_title": true,
      "ja": "11. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "This document defines a new TCP option kind for TCP-ENO, assigned a value of 69 from the TCP option space. This value is defined as:",
      "ja": "このドキュメントでは、TCPオプションスペースから69の値を割り当てられたTCP-ENOのための新しいTCPオプションの種類を定義します。この値は、次のように定義されます"
    },
    {
      "indent": 5,
      "text": "+------+--------+----------------------------------+-----------+\n| Kind | Length | Meaning                          | Reference |\n+------+--------+----------------------------------+-----------+\n| 69   | N      | Encryption Negotiation (TCP-ENO) | RFC 8547  |\n+------+--------+----------------------------------+-----------+",
      "raw": true
    },
    {
      "indent": 21,
      "text": "Table 2: TCP Option Kind Numbers",
      "ja": "表2：TCPオプション種類番号"
    },
    {
      "indent": 3,
      "text": "Early implementations of TCP-ENO and a predecessor TCP encryption protocol made unauthorized use of TCP option kind 69. These earlier uses of option 69 are not compatible with TCP-ENO and could disable encryption or suffer complete connection failure when interoperating with TCP-ENO-compliant hosts. Hence, legacy use of option 69 MUST be disabled on hosts that cannot be upgraded to TCP-ENO. More recent implementations used experimental option 253 per [RFC6994] with 16-bit ExID 0x454E. Current and new implementations of TCP-ENO MUST use option 69, while any legacy implementations MUST migrate to option 69. Note in particular that Section 4.1 requires at most one SYN-form ENO option per segment, which means hosts MUST NOT include both option 69 and option 253 with ExID 0x454E in the same TCP segment.",
      "ja": "TCP-ENOと前身のTCP暗号化プロトコルの初期の実装は、TCPオプションの不正使用を作っ種類69オプション69のこれらの以前の用途は、TCP-ENOと互換性がありませんし、暗号化を無効にするか、TCP-ENO-と相互運用する場合、完全な接続障害を被る可能性があり準拠したホスト。したがって、オプション69の従来の使用はTCP-ENOにアップグレードできないホスト上で無効にする必要があります。より最近の実装は、16ビットEXID 0x454Eと[RFC6994]あたりの実験オプション253を使用します。任意の従来の実装は4.1節は、両方のオプションを含んではいけませんホストを意味し、セグメントごとに最大1つのSYN-フォームENOオプション、で必要であることを特にオプションに69注意を移行する必要がありながら、TCP-ENOの現在と新しい実装は、オプション69を使用しなければならない69そして、同じTCPセグメントでEXID 0x454Eとオプション253。"
    },
    {
      "indent": 3,
      "text": "This document defines a 7-bit glt field in the range of 0x20-0x7f. IANA has created and will maintain a new registry titled \"TCP Encryption Protocol Identifiers\" under the \"Transmission Control Protocol (TCP) Parameters\" registry. Table 3 shows the initial contents of this registry. This document allocates one TEP identifier (0x20) for experimental use. In case the TEP identifier space proves too small, identifiers in the range 0x70-0x7f are reserved to enable a future update to this document to define extended identifier values. Future assignments are to be made upon satisfying either of two policies defined in [RFC8126]: \"IETF Review\" or (for non-IETF stream specifications) \"Expert Review with RFC Required\". IANA will furthermore provide early allocation [RFC7120] to facilitate testing before RFCs are finalized.",
      "ja": "この文書は、0x20-0x7fの範囲内に7ビットGLTフィールドを定義します。 IANAは、作成していると、「伝送制御プロトコル（TCP）パラメータ」レジストリの下に「TCP暗号化プロトコル識別子」と題した新しいレジストリを維持します。表3は、このレジストリの初期内容を示しています。この文書では、実験的な使用のための1つのTEP識別子（0x20の）を割り当てます。場合TEP識別子空間は、拡張識別子の値を定義するには、この文書の将来のアップデートを可能にするために予約され0x70-0x7f範囲の小さすぎ、識別子を証明します。 「IETFレビュー」または（非IETFストリーム仕様のため）、「RFC必要とエキスパートレビュー」：今後の割り当ては、[RFC8126]で定義された2つのポリシーのいずれかを満たす時に行わなければなりません。 IANAはさらに、RFCのが確定される前に、テストを容易にするために、初期割り当て[RFC7120]を提供します。"
    },
    {
      "indent": 9,
      "text": "+-----------+------------------------------+-----------+\n| Value     | Meaning                      | Reference |\n+-----------+------------------------------+-----------+\n| 0x20      | Experimental Use             | RFC 8547  |\n| 0x70-0x7f | Reserved for extended values | RFC 8547  |\n+-----------+------------------------------+-----------+",
      "raw": true
    },
    {
      "indent": 15,
      "text": "Table 3: TCP Encryption Protocol Identifiers",
      "ja": "表3：TCP暗号化プロトコル識別子"
    },
    {
      "indent": 0,
      "text": "12. References",
      "section_title": true,
      "ja": "12.参考文献"
    },
    {
      "indent": 0,
      "text": "12.1. Normative References",
      "section_title": true,
      "ja": "12.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[NIST-SP-800-57] National Institute of Standards and Technology, \"Recommendation for Key Management - Part 1: General\", NIST Special Publication, 800-57, Revision 4, DOI 10.6028/NIST.SP.800-57pt1r4, January 2016, <https://nvlpubs.nist.gov/nistpubs/SpecialPublications/ NIST.SP.800-57pt1r4.pdf>.",
      "ja": "[NIST-SP-800-57]米国国立標準技術研究所、 \"キー管理のための提言 - パート1：一般的な\"、は、NIST Special Publication、800-57、改訂4、DOI 10.6028 / NIST.SP.800-57pt1r4、 2016年1月、<https://nvlpubs.nist.gov/nistpubs/SpecialPublications/ NIST.SP.800-57pt1r4.pdf>。"
    },
    {
      "indent": 3,
      "text": "[RFC793] Postel, J., \"Transmission Control Protocol\", STD 7, RFC 793, DOI 10.17487/RFC0793, September 1981, <https://www.rfc-editor.org/info/rfc793>.",
      "ja": "[RFC793]ポステル、J.、 \"伝送制御プロトコル\"、STD 7、RFC 793、DOI 10.17487 / RFC0793、1981年9月、<https://www.rfc-editor.org/info/rfc793>。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <https://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<https://www.rfc-editor.org/info/ RFC2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC4086] Eastlake 3rd, D., Schiller, J., and S. Crocker, \"Randomness Requirements for Security\", BCP 106, RFC 4086, DOI 10.17487/RFC4086, June 2005, <https://www.rfc-editor.org/info/rfc4086>.",
      "ja": "[RFC4086]イーストレーク3日、D.、シラー、J.、およびS.クロッカー、 \"セキュリティのためのランダム要件\"、BCP 106、RFC 4086、DOI 10.17487 / RFC4086、2005年6月、<HTTPS：//www.rfc-editor .ORG /情報/ RFC4086>。"
    },
    {
      "indent": 3,
      "text": "[RFC7120] Cotton, M., \"Early IANA Allocation of Standards Track Code Points\", BCP 100, RFC 7120, DOI 10.17487/RFC7120, January 2014, <https://www.rfc-editor.org/info/rfc7120>.",
      "ja": "[RFC7120]コットン、M.、 \"標準化過程のコードポイントの初期のIANA配分\"、BCP 100、RFC 7120、DOI 10.17487 / RFC7120、2014年1月、<https://www.rfc-editor.org/info/rfc7120> 。"
    },
    {
      "indent": 3,
      "text": "[RFC8126] Cotton, M., Leiba, B., and T. Narten, \"Guidelines for Writing an IANA Considerations Section in RFCs\", BCP 26, RFC 8126, DOI 10.17487/RFC8126, June 2017, <https://www.rfc-editor.org/info/rfc8126>.",
      "ja": "[RFC8126]綿、M.、Leiba、B.、およびT. Narten氏、 \"RFCsにIANA問題部に書くためのガイドライン\"、BCP 26、RFC 8126、DOI 10.17487 / RFC8126、2017年6月、<https：//でWWW .rfc-editor.org /情報/ rfc8126>。"
    },
    {
      "indent": 3,
      "text": "[RFC8174] Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174, May 2017, <https://www.rfc-editor.org/info/rfc8174>.",
      "ja": "[RFC8174] Leiba、B.、 \"RFC 2119個のキーワードに小文字VS大文字の曖昧さ\"、BCP 14、RFC 8174、DOI 10.17487 / RFC8174、2017年5月、<https://www.rfc-editor.org/info/ rfc8174>。"
    },
    {
      "indent": 0,
      "text": "12.2. Informative References",
      "section_title": true,
      "ja": "12.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[RFC3493] Gilligan, R., Thomson, S., Bound, J., McCann, J., and W. Stevens, \"Basic Socket Interface Extensions for IPv6\", RFC 3493, DOI 10.17487/RFC3493, February 2003, <https://www.rfc-editor.org/info/rfc3493>.",
      "ja": "[RFC3493]ギリガン、R.、トムソン、S.、バウンド、J.、マッキャン、J.、およびW.スティーブンス、 \"IPv6の基本的なソケットインタフェース拡張\"、RFC 3493、DOI 10.17487 / RFC3493、2003年2月、<HTTPS ：//www.rfc-editor.org/info/rfc3493>。"
    },
    {
      "indent": 3,
      "text": "[RFC4253] Ylonen, T. and C. Lonvick, Ed., \"The Secure Shell (SSH) Transport Layer Protocol\", RFC 4253, DOI 10.17487/RFC4253, January 2006, <https://www.rfc-editor.org/info/rfc4253>.",
      "ja": "[RFC4253] Ylonenと、T.とC. Lonvick、エド。、 \"セキュアシェル（SSH）トランスポート層プロトコル\"、RFC 4253、DOI 10.17487 / RFC4253、2006年1月、<https://www.rfc-editor.org /情報/ RFC4253>。"
    },
    {
      "indent": 3,
      "text": "[RFC4987] Eddy, W., \"TCP SYN Flooding Attacks and Common Mitigations\", RFC 4987, DOI 10.17487/RFC4987, August 2007, <https://www.rfc-editor.org/info/rfc4987>.",
      "ja": "[RFC4987]エディ、W.、 \"TCPのSYNフラッド攻撃と共通の軽減策\"、RFC 4987、DOI 10.17487 / RFC4987、2007年8月、<https://www.rfc-editor.org/info/rfc4987>。"
    },
    {
      "indent": 3,
      "text": "[RFC5116] McGrew, D., \"An Interface and Algorithms for Authenticated Encryption\", RFC 5116, DOI 10.17487/RFC5116, January 2008, <https://www.rfc-editor.org/info/rfc5116>.",
      "ja": "[RFC5116]マグリュー、D.、 \"認証暗号化のためのインタフェースとアルゴリズム\"、RFC 5116、DOI 10.17487 / RFC5116、2008年1月、<https://www.rfc-editor.org/info/rfc5116>。"
    },
    {
      "indent": 3,
      "text": "[RFC5382] Guha, S., Ed., Biswas, K., Ford, B., Sivakumar, S., and P. Srisuresh, \"NAT Behavioral Requirements for TCP\", BCP 142, RFC 5382, DOI 10.17487/RFC5382, October 2008, <https://www.rfc-editor.org/info/rfc5382>.",
      "ja": "[RFC5382]グハ、S.編、ビスワス、K.、フォード、B.、シバクマー、S.、およびP. Srisuresh、 \"TCPのためのNAT行動要件\"、BCP 142、RFC 5382、DOI 10.17487 / RFC5382、 2008年10月、<https://www.rfc-editor.org/info/rfc5382>。"
    },
    {
      "indent": 3,
      "text": "[RFC5802] Newman, C., Menon-Sen, A., Melnikov, A., and N. Williams, \"Salted Challenge Response Authentication Mechanism (SCRAM) SASL and GSS-API Mechanisms\", RFC 5802, DOI 10.17487/RFC5802, July 2010, <https://www.rfc-editor.org/info/rfc5802>.",
      "ja": "[RFC5802]ニューマン、C.、メノンセン、A.、メルニコフ、A.、およびN.ウィリアムズ、 \"塩蔵チャレンジレスポンス認証メカニズム（SCRAM）SASLとGSS-APIメカニズム\"、RFC 5802、DOI 10.17487 / RFC5802、 2010年7月、<https://www.rfc-editor.org/info/rfc5802>。"
    },
    {
      "indent": 3,
      "text": "[RFC6394] Barnes, R., \"Use Cases and Requirements for DNS-Based Authentication of Named Entities (DANE)\", RFC 6394, DOI 10.17487/RFC6394, October 2011, <https://www.rfc-editor.org/info/rfc6394>.",
      "ja": "[RFC6394]バーンズ、R.、 \"ユースケースと名前付きエンティティ（DANE）のDNSベースの認証のための要件\"、RFC 6394、DOI 10.17487 / RFC6394、2011年10月、<https://www.rfc-editor.org/情報/ rfc6394>。"
    },
    {
      "indent": 3,
      "text": "[RFC6994] Touch, J., \"Shared Use of Experimental TCP Options\", RFC 6994, DOI 10.17487/RFC6994, August 2013, <https://www.rfc-editor.org/info/rfc6994>.",
      "ja": "[RFC6994]タッチ、J.、 \"実験TCPオプションの共同利用\"、RFC 6994、DOI 10.17487 / RFC6994、2013年8月、<https://www.rfc-editor.org/info/rfc6994>。"
    },
    {
      "indent": 3,
      "text": "[RFC7413] Cheng, Y., Chu, J., Radhakrishnan, S., and A. Jain, \"TCP Fast Open\", RFC 7413, DOI 10.17487/RFC7413, December 2014, <https://www.rfc-editor.org/info/rfc7413>.",
      "ja": "[RFC7413]チェン、Y.、チュー、J.、ラダクリシュナン、S.、およびA.ジェイン、 \"TCP高速開く\"、RFC 7413、DOI 10.17487 / RFC7413、2014年12月、<HTTPS：//www.rfc-editor .ORG /情報/ rfc7413>。"
    },
    {
      "indent": 3,
      "text": "[RFC7435] Dukhovni, V., \"Opportunistic Security: Some Protection Most of the Time\", RFC 7435, DOI 10.17487/RFC7435, December 2014, <https://www.rfc-editor.org/info/rfc7435>.",
      "ja": "[RFC7435] Dukhovni、V.、 \"日和見セキュリティ：時間のいくつかの保護ほとんど\"、RFC 7435、DOI 10.17487 / RFC7435、2014年12月、<https://www.rfc-editor.org/info/rfc7435>。"
    },
    {
      "indent": 3,
      "text": "[RFC7616] Shekh-Yusef, R., Ed., Ahrens, D., and S. Bremer, \"HTTP Digest Access Authentication\", RFC 7616, DOI 10.17487/RFC7616, September 2015, <https://www.rfc-editor.org/info/rfc7616>.",
      "ja": "[RFC7616] Shekh・ユセフ、R.、エド、アーレンス、D.、およびS.ブレマー、 \"HTTPダイジェストアクセス認証\"、RFC 7616、DOI 10.17487 / RFC7616、2015年9月、<HTTPS：。//www.rfc- editor.org/info/rfc7616>。"
    },
    {
      "indent": 3,
      "text": "[RFC8446] Rescorla, E., \"The Transport Layer Security (TLS) Protocol Version 1.3\", RFC 8446, DOI 10.17487/RFC8446, August 2018, <https://www.rfc-editor.org/info/rfc8446>.",
      "ja": "[RFC8446]レスコラ、E.、 \"トランスポート層セキュリティ（TLS）プロトコルバージョン1.3\"、RFC 8446、DOI 10.17487 / RFC8446、2018年8月、<https://www.rfc-editor.org/info/rfc8446>。"
    },
    {
      "indent": 0,
      "text": "Acknowledgments",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "We are grateful for contributions, help, discussions, and feedback from the IETF and its TCPINC Working Group, including Marcelo Bagnulo, David Black, Bob Briscoe, Benoit Claise, Spencer Dawkins, Jake Holland, Jana Iyengar, Tero Kivinen, Mirja Kuhlewind, Watson Ladd, Kathleen Moriarty, Yoav Nir, Christoph Paasch, Eric Rescorla, Adam Roach, Kyle Rose, Michael Scharf, Joe Touch, and Eric Vyncke. This work was partially funded by DARPA CRASH and the Stanford Secure Internet of Things Project.",
      "ja": "私たちは、マルセロBagnulo、デビッド・ブラック、ボブ・ブリスコー、ブノワClaise、スペンサードーキンスジェイクオランダ、ヤナアイアンガー、TERO Kivinen、Mirja Kuhlewind、ワトソンを含め、貢献に感謝している、助け、議論、およびIETFとそのTCPINCワーキンググループからのフィードバックラッド、キャスリーン・モリアーティ、ヨアフニール、クリストフPaasch、エリックレスコラ、アダムローチ、カイル・ローズ、マイケル・シャーフ、ジョー・タッチ、そしてエリックVyncke。この作品は、部分的にDARPA CRASHと物事プロジェクトのスタンフォードセキュアインターネットによって賄われていました。"
    },
    {
      "indent": 0,
      "text": "Contributors",
      "ja": "協力者"
    },
    {
      "indent": 3,
      "text": "Dan Boneh was a coauthor of the draft that became this document.",
      "ja": "ダン・ボネは、本文書になった草案の共著者でした。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Andrea Bittau Google 345 Spear Street San Francisco, CA 94105 United States of America",
      "ja": "アンドレアBittau Googleの345スピアストリートサンフランシスコ、CAアメリカの94105米国"
    },
    {
      "indent": 3,
      "text": "Email: bittau@google.com",
      "ja": "メール：bittau@google.com"
    },
    {
      "indent": 3,
      "text": "Daniel B. Giffin Stanford University 353 Serra Mall, Room 288 Stanford, CA 94305 United States of America",
      "ja": "ダニエルB. Giffinスタンフォード大学353セラモールオブアメリカ、ルーム288スタンフォード、CA 94305米国"
    },
    {
      "indent": 3,
      "text": "Email: daniel@beech-grove.net",
      "ja": "メール：daniel@beech-grove.net"
    },
    {
      "indent": 3,
      "text": "Mark Handley University College London Gower St. London WC1E 6BT United Kingdom",
      "ja": "マーク・ハンドリーロンドン大学ガウアーセントロンドンWC1E 6BTイギリス"
    },
    {
      "indent": 3,
      "text": "Email: M.Handley@cs.ucl.ac.uk",
      "ja": "メール：M.Handley@cs.ucl.ac.uk"
    },
    {
      "indent": 3,
      "text": "David Mazieres Stanford University 353 Serra Mall, Room 290 Stanford, CA 94305 United States of America",
      "ja": "デイビット・マジャーズスタンフォード大学353セラモールオブアメリカ、ルーム290スタンフォード、CA 94305米国"
    },
    {
      "indent": 3,
      "text": "Email: dm@uun.org",
      "ja": "メール：dm@uun.org"
    },
    {
      "indent": 3,
      "text": "Eric W. Smith Kestrel Institute 3260 Hillview Avenue Palo Alto, CA 94304 United States of America",
      "ja": "エリック・W.スミスケストレル研究所3260ヒルビュー・アベニューカリフォルニア州パロアルトアメリカの94304米国"
    },
    {
      "indent": 3,
      "text": "Email: eric.smith@kestrel.edu",
      "ja": "メール：eric.smith@kestrel.edu"
    }
  ]
}