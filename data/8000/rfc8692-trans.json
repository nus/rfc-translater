{
  "title": {
    "text": "RFC 8692 - Internet X.509 Public Key Infrastructure: Additional Algorithm Identifiers for RSASSA-PSS and ECDSA Using SHAKEs",
    "ja": "RFC 8692 - インターネットX.509公開鍵インフラストラクチャ：SHAKEを使用したRSASSA-PSSおよびECDSAの追加のアルゴリズム識別子"
  },
  "number": 8692,
  "created_at": "2020-03-10 18:00:23.573560+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                     P. Kampanakis\nRequest for Comments: 8692                                 Cisco Systems\nUpdates: 3279                                                    Q. Dang\nCategory: Standards Track                                           NIST\nISSN: 2070-1721                                            December 2019",
      "raw": true
    },
    {
      "indent": 5,
      "text": "Internet X.509 Public Key Infrastructure: Additional Algorithm Identifiers for RSASSA-PSS and ECDSA Using SHAKEs",
      "ja": "インターネットX.509公開鍵インフラストラクチャ：SHAKEを使用したRSASSA-PSSおよびECDSAの追加のアルゴリズム識別子"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "Digital signatures are used to sign messages, X.509 certificates, and Certificate Revocation Lists (CRLs). This document updates the \"Algorithms and Identifiers for the Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile\" (RFC 3279) and describes the conventions for using the SHAKE function family in Internet X.509 certificates and revocation lists as one-way hash functions with the RSA Probabilistic signature and Elliptic Curve Digital Signature Algorithm (ECDSA) signature algorithms. The conventions for the associated subject public keys are also described.",
      "ja": "デジタル署名は、メッセージ、X.509証明書、および証明書失効リスト（CRL）の署名に使用されます。 このドキュメントでは、「インターネットX.509公開キー基盤の証明書と証明書失効リスト（CRL）プロファイルのアルゴリズムと識別子」（RFC 3279）を更新し、インターネットX.509証明書と失効リストでSHAKE関数ファミリを使用するための規則について説明します RSA確率的署名と楕円曲線デジタル署名アルゴリズム（ECDSA）署名アルゴリズムを備えた一方向ハッシュ関数として。 関連するサブジェクト公開鍵の規則も説明されています。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これはインターネット標準化過程の文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 7841.",
      "ja": "このドキュメントは、Internet Engineering Task Force（IETF）の製品です。 IETFコミュニティのコンセンサスを表しています。 これは公開レビューを受けており、Internet Engineering Steering Group（IESG）による公開が承認されています。 インターネット標準の詳細については、RFC 7841のセクション2を参照してください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc8692.",
      "ja": "このドキュメントの現在のステータス、エラータ、およびフィードバックに関する情報は、https：//www.rfc-editor.org/info/rfc8692で入手できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2019 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "Copyright（c）2019 IETF Trustおよび文書の著者として特定された人物。 全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "このドキュメントは、このドキュメントの公開日に有効なBCP 78およびIETFトラストのIETFドキュメントに関連する法的条項（https://trustee.ietf.org/license-info）の対象となります。 これらのドキュメントは、このドキュメントに関するあなたの権利と制限を説明しているので、注意深く確認してください。 このドキュメントから抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているSimplified BSD Licenseテキストを含める必要があり、Simplified BSD Licenseに記載されている保証なしで提供されます。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction 2. Terminology 3. Identifiers 4. Use in PKIX 4.1. Signatures 4.1.1. RSASSA-PSS Signatures 4.1.2. ECDSA Signatures 4.2. Public Keys 5. IANA Considerations 6. Security Considerations 7. References 7.1. Normative References 7.2. Informative References Appendix A. ASN.1 Module Acknowledgements Authors' Addresses",
      "ja": "1. はじめに2.用語3.識別子4. PKIX 4.1で使用します。 署名4.1.1。 RSASSA-PSS署名4.1.2。 ECDSA署名4.2。 公開鍵5. IANAに関する考慮事項6.セキュリティに関する考慮事項7.参考文献7.1。 規範的参考資料7.2。 参考情報付録A. ASN.1モジュールの謝辞著者のアドレス"
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "[RFC3279] defines cryptographic algorithm identifiers for the \"Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile\" [RFC5280]. This document updates RFC 3279 and defines identifiers for several cryptographic algorithms that use variable-length output SHAKE functions introduced in [SHA3] which can be used with RFC 5280.",
      "ja": "[RFC3279]は、「インターネットX.509公開鍵インフラストラクチャ証明書および証明書失効リスト（CRL）プロファイル」[RFC5280]の暗号化アルゴリズム識別子を定義します。 このドキュメントは、RFC 3279を更新し、RFC 5280で使用できる[SHA3]で導入された可変長出力SHAKE関数を使用するいくつかの暗号化アルゴリズムの識別子を定義します。"
    },
    {
      "indent": 3,
      "text": "In the SHA-3 family, two extendable-output functions (SHAKEs) are defined: SHAKE128 and SHAKE256. Four other hash function instances, SHA3-224, SHA3-256, SHA3-384, and SHA3-512, are also defined but are out of scope for this document. A SHAKE is a variable-length hash function defined as SHAKE(M, d) where the output is a d-bits-long digest of message M. The corresponding collision and second-preimage-resistance strengths for SHAKE128 are min(d/2, 128) and min(d, 128) bits, respectively (see Appendix A.1 of [SHA3]). And the corresponding collision and second-preimage-resistance strengths for SHAKE256 are min(d/2, 256) and min(d, 256) bits, respectively.",
      "ja": "SHA-3ファミリでは、SHAKE128とSHAKE256の2つの拡張出力関数（SHAKE）が定義されています。 他の4つのハッシュ関数インスタンス、SHA3-224、SHA3-256、SHA3-384、およびSHA3-512も定義されていますが、このドキュメントの範囲外です。 SHAKEは、出力がメッセージMのdビット長のダイジェストであるSHAKE（M、d）として定義される可変長ハッシュ関数です。SHAKE128の対応する衝突強度と2番目の前画像耐性強度はmin（d / 2 、128）およびmin（d、128）ビット（それぞれ[SHA3]の付録A.1を参照）。 また、SHAKE256の対応する衝突強度と第2プレイメージ抵抗強度は、それぞれmin（d / 2、256）ビットとmin（d、256）ビットです。"
    },
    {
      "indent": 3,
      "text": "A SHAKE can be used as the message digest function (to hash the message to be signed) in RSA Probabilistic Signature Scheme (RSASSA-PSS) [RFC8017] and ECDSA [X9.62] and as the hash in the mask generation function (MGF) in RSASSA-PSS.",
      "ja": "SHAKEは、RSA確率的署名スキーム（RSASSA-PSS）[RFC8017]およびECDSA [X9.62]のメッセージダイジェスト関数（署名するメッセージをハッシュする）として、およびマスク生成関数（MGFのハッシュとして）として使用できます。 ）RSASSA-PSSで。"
    },
    {
      "indent": 0,
      "text": "2. Terminology",
      "section_title": true,
      "ja": "2. 用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.",
      "ja": "この文書のキーワード \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", および \"OPTIONAL\" はBCP 14 [RFC2119] [RFC8174]で説明されているように、すべて大文字の場合にのみ解釈されます。"
    },
    {
      "indent": 0,
      "text": "3. Identifiers",
      "section_title": true,
      "ja": "3. 識別子"
    },
    {
      "indent": 3,
      "text": "This section defines four new object identifiers (OIDs), for RSASSA-PSS and ECDSA with each of SHAKE128 and SHAKE256. The same algorithm identifiers can be used for identifying a public key in RSASSA-PSS.",
      "ja": "このセクションでは、RSAKESA-PSSおよびECDSAに対して、SHAKE128およびSHAKE256のそれぞれで4つの新しいオブジェクト識別子（OID）を定義します。 RSASSA-PSSで公開鍵を識別するために、同じアルゴリズム識別子を使用できます。"
    },
    {
      "indent": 3,
      "text": "The new identifiers for RSASSA-PSS signatures using SHAKEs are below.",
      "ja": "SHAKEを使用したRSASSA-PSS署名の新しい識別子は次のとおりです。"
    },
    {
      "indent": 5,
      "text": "id-RSASSA-PSS-SHAKE128  OBJECT IDENTIFIER  ::=  { iso(1)\n          identified-organization(3) dod(6) internet(1)\n          security(5) mechanisms(5) pkix(7) algorithms(6)\n          30 }",
      "raw": true
    },
    {
      "indent": 5,
      "text": "id-RSASSA-PSS-SHAKE256  OBJECT IDENTIFIER  ::=  { iso(1)\n          identified-organization(3) dod(6) internet(1)\n          security(5) mechanisms(5) pkix(7) algorithms(6)\n          31 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The new algorithm identifiers of ECDSA signatures using SHAKEs are below.",
      "ja": "SHAKEを使用したECDSA署名の新しいアルゴリズム識別子は次のとおりです。"
    },
    {
      "indent": 5,
      "text": "id-ecdsa-with-shake128 OBJECT IDENTIFIER  ::=  { iso(1)\n          identified-organization(3) dod(6) internet(1)\n          security(5) mechanisms(5) pkix(7) algorithms(6)\n          32 }",
      "raw": true
    },
    {
      "indent": 5,
      "text": "id-ecdsa-with-shake256 OBJECT IDENTIFIER  ::=  { iso(1)\n          identified-organization(3) dod(6) internet(1)\n          security(5) mechanisms(5) pkix(7) algorithms(6)\n          33 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The parameters for the four identifiers above MUST be absent. That is, the identifier SHALL be a SEQUENCE of one component: the OID.",
      "ja": "上記の4つの識別子のパラメーターは存在していなければなりません（MUST）。 つまり、識別子はOIDという1つのコンポーネントのシーケンスでなければなりません。"
    },
    {
      "indent": 3,
      "text": "Sections 4.1.1 and 4.1.2 specify the required output length for each use of SHAKE128 or SHAKE256 in RSASSA-PSS and ECDSA. In summary, when hashing messages to be signed, output lengths of SHAKE128 and SHAKE256 are 256 and 512 bits, respectively. When the SHAKEs are used as MGFs in RSASSA-PSS, their output length is (8*ceil((n-1)/8) - 264) or (8*ceil((n-1)/8) - 520) bits, respectively, where n is the RSA modulus size in bits.",
      "ja": "セクション4.1.1および4.1.2は、RSASSA-PSSおよびECDSAでSHAKE128またはSHAKE256を使用するたびに必要な出力長を指定します。 要約すると、署名するメッセージをハッシュする場合、SHAKE128とSHAKE256の出力長はそれぞれ256ビットと512ビットです。 SHAKEがRSASSA-PSSでMGFとして使用される場合、それらの出力長は（8 * ceil（（n-1）/ 8）-264）または（8 * ceil（（n-1）/ 8）-520）ビットです 、それぞれ、nはビット単位のRSAモジュラスサイズです。"
    },
    {
      "indent": 0,
      "text": "4. Use in PKIX",
      "section_title": true,
      "ja": "4. PKIXで使用"
    },
    {
      "indent": 0,
      "text": "4.1. Signatures",
      "section_title": true,
      "ja": "4.1. 署名"
    },
    {
      "indent": 3,
      "text": "Signatures are used in a number of different ASN.1 structures. As shown in the ASN.1 representation from [RFC5280] below, in an X.509 certificate, a signature is encoded with an algorithm identifier in the signatureAlgorithm attribute and a signatureValue attribute that contains the actual signature.",
      "ja": "署名は、さまざまなASN.1構造で使用されます。 [RFC5280]のASN.1表現に示されているように、X.509証明書では、署名はsignatureAlgorithm属性のアルゴリズム識別子と実際の署名を含むsignatureValue属性でエンコードされます。"
    },
    {
      "indent": 6,
      "text": "Certificate  ::=  SEQUENCE  {\n   tbsCertificate       TBSCertificate,\n   signatureAlgorithm   AlgorithmIdentifier,\n   signatureValue       BIT STRING  }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The identifiers defined in Section 3 can be used as the AlgorithmIdentifier in the signatureAlgorithm field in the sequence Certificate and the signature field in the sequence TBSCertificate in X.509 [RFC5280]. The parameters of these signature algorithms are absent, as explained in Section 3.",
      "ja": "セクション3で定義された識別子は、X.509 [RFC5280]のシーケンスCertificateのsignatureAlgorithmフィールドのアルゴリズムIdentifierおよびシーケンスTBSCertificateの署名フィールドとして使用できます。 セクション3で説明されているように、これらの署名アルゴリズムのパラメーターはありません。"
    },
    {
      "indent": 3,
      "text": "Conforming Certification Authority (CA) implementations MUST specify the algorithms explicitly by using the OIDs specified in Section 3 when encoding RSASSA-PSS or ECDSA with SHAKE signatures in certificates and CRLs. Conforming client implementations that process certificates and CRLs using RSASSA-PSS or ECDSA with SHAKE MUST recognize the corresponding OIDs. Encoding rules for RSASSA-PSS and ECDSA signature values are specified in [RFC4055] and [RFC5480], respectively.",
      "ja": "適合認証局（CA）実装は、証明書およびCRLでSHAKE署名を使用してRSASSA-PSSまたはECDSAをエンコードするときに、セクション3で指定されたOIDを使用してアルゴリズムを明示的に指定する必要があります。 RSASSA-PSSまたはECDSAとSHAKEを使用して証明書とCRLを処理する適合クライアント実装は、対応するOIDを認識しなければなりません。 RSASSA-PSSおよびECDSA署名値のエンコード規則は、それぞれ[RFC4055]および[RFC5480]で指定されています。"
    },
    {
      "indent": 3,
      "text": "When using RSASSA-PSS or ECDSA with SHAKEs, the RSA modulus and ECDSA curve order SHOULD be chosen in line with the SHAKE output length. Refer to Section 6 for more details.",
      "ja": "RSASSA-PSSまたはECDSAをSHAKEとともに使用する場合、RSAモジュラスとECDSA曲線の順序は、SHAKE出力の長さに合わせて選択する必要があります。 詳細については、セクション6を参照してください。"
    },
    {
      "indent": 0,
      "text": "4.1.1. RSASSA-PSS Signatures",
      "section_title": true,
      "ja": "4.1.1. RSASSA-PSS署名"
    },
    {
      "indent": 3,
      "text": "The RSASSA-PSS algorithm is defined in [RFC8017]. When id-RSASSA-PSS-SHAKE128 or id-RSASSA-PSS-SHAKE256 (specified in Section 3) is used, the encoding MUST omit the parameters field. That is, the AlgorithmIdentifier SHALL be a SEQUENCE of one component: id-RSASSA-PSS-SHAKE128 or id-RSASSA-PSS-SHAKE256. [RFC4055] defines RSASSA-PSS-params that is used to define the algorithms and inputs to the algorithm. This specification does not use parameters because the hash, mask generation algorithm, trailer, and salt are embedded in the OID definition.",
      "ja": "RSASSA-PSSアルゴリズムは[RFC8017]で定義されています。 id-RSASSA-PSS-SHAKE128またはid-RSASSA-PSS-SHAKE256（セクション3で指定）が使用される場合、エンコードはパラメータフィールドを省略しなければなりません（MUST）。 つまり、AlgorithmIdentifierは、id-RSASSA-PSS-SHAKE128またはid-RSASSA-PSS-SHAKE256の1つのコンポーネントのシーケンスである必要があります。 [RFC4055]は、アルゴリズムとアルゴリズムへの入力を定義するために使用されるRSASSA-PSS-paramsを定義します。 ハッシュ、マスク生成アルゴリズム、トレーラ、およびソルトがOID定義に埋め込まれているため、この仕様ではパラメーターを使用しません。"
    },
    {
      "indent": 3,
      "text": "The hash algorithm to hash a message being signed and the hash algorithm used as the MGF in RSASSA-PSS MUST be the same: both SHAKE128 or both SHAKE256. The output length of the hash algorithm that hashes the message SHALL be 32 bytes (for SHAKE128) or 64 bytes (for SHAKE256).",
      "ja": "署名されているメッセージをハッシュするハッシュアルゴリズムとRSASSA-PSSでMGFとして使用されるハッシュアルゴリズムは同じでなければなりません：両方SHAKE128または両方SHAKE256。 メッセージをハッシュするハッシュアルゴリズムの出力長は、32バイト（SHAKE128の場合）または64バイト（SHAKE256の場合）です。"
    },
    {
      "indent": 3,
      "text": "The MGF takes an octet string of variable length and a desired output length as input and outputs an octet string of the desired length. In RSASSA-PSS with SHAKEs, the SHAKEs MUST be used natively as the MGF, instead of the MGF1 algorithm that uses the hash function in multiple iterations, as specified in Appendix B.2.1 of [RFC8017]. In other words, the MGF is defined as the SHAKE128 or SHAKE256 output of the mgfSeed for id-RSASSA-PSS-SHAKE128 and id-RSASSA-PSS-SHAKE256, respectively. The mgfSeed is the seed from which the mask is generated, an octet string [RFC8017]. As explained in Step 9 of Section 9.1.1 of [RFC8017], the output length of the MGF is emLen - hLen - 1 bytes. emLen is the maximum message length ceil((n-1)/8), where n is the RSA modulus in bits. hLen is 32 and 64 bytes for id-RSASSA-PSS-SHAKE128 and id-RSASSA-PSS-SHAKE256, respectively. Thus, when SHAKE is used as the MGF, the SHAKE output length maskLen is (8*emLen - 264) or (8*emLen - 520) bits, respectively. For example, when RSA modulus n is 2048 bits, the output length of SHAKE128 or SHAKE256 as the MGF will be 1784 or 1528 bits when id-RSASSA-PSS-SHAKE128 or id-RSASSA-PSS-SHAKE256 is used, respectively.",
      "ja": "MGFは、可変長のオクテット文字列と必要な出力長を入力として受け取り、必要な長さのオクテット文字列を出力します。 [SASC-PSS with SHAKEs]では、[RFC8017]のAppendix B.2.1で指定されているように、複数の反復でハッシュ関数を使用するMGF1アルゴリズムの代わりに、SHAKEをMGFとしてネイティブに使用する必要があります。つまり、MGFは、それぞれid-RSASSA-PSS-SHAKE128およびid-RSASSA-PSS-SHAKE256のmgfSeedのSHAKE128またはSHAKE256出力として定義されます。 mgfSeedは、マスクが生成されるシード、オクテット文字列[RFC8017]です。 [RFC8017]のセクション9.1.1のステップ9で説明されているように、MGFの出力長はemLen-hLen-1バイトです。 emLenは最大メッセージ長ceil（（n-1）/ 8）です。nはRSAモジュラスのビット数です。 hLenは、id-RSASSA-PSS-SHAKE128とid-RSASSA-PSS-SHAKE256でそれぞれ32バイトと64バイトです。したがって、SHAKEがMGFとして使用される場合、SHAKE出力長maskLenは、それぞれ（8 * emLen-264）ビットまたは（8 * emLen-520）ビットです。たとえば、RSAモジュラスnが2048ビットの場合、MGFとしてのSHAKE128またはSHAKE256の出力長は、id-RSASSA-PSS-SHAKE128またはid-RSASSA-PSS-SHAKE256が使用される場合、それぞれ1784または1528ビットになります。"
    },
    {
      "indent": 3,
      "text": "The RSASSA-PSS saltLength MUST be 32 bytes for id-RSASSA-PSS-SHAKE128 or 64 bytes for id-RSASSA-PSS-SHAKE256. Finally, the trailerField MUST be 1, which represents the trailer field with hexadecimal value 0xBC [RFC8017].",
      "ja": "RSASSA-PSS saltLengthは、id-RSASSA-PSS-SHAKE128の場合は32バイト、id-RSASSA-PSS-SHAKE256の場合は64バイトでなければなりません。 最後に、trailerFieldは1でなければならず、これは16進値0xBC [RFC8017]のトレーラフィールドを表します。"
    },
    {
      "indent": 0,
      "text": "4.1.2. ECDSA Signatures",
      "section_title": true,
      "ja": "4.1.2. ECDSA署名"
    },
    {
      "indent": 3,
      "text": "The Elliptic Curve Digital Signature Algorithm (ECDSA) is defined in [X9.62]. When the id-ecdsa-with-shake128 or id-ecdsa-with-shake256 (specified in Section 3) algorithm identifier appears, the respective SHAKE function (SHAKE128 or SHAKE256) is used as the hash. The encoding MUST omit the parameters field. That is, the AlgorithmIdentifier SHALL be a SEQUENCE of one component: the OID id-ecdsa-with-shake128 or id-ecdsa-with-shake256.",
      "ja": "楕円曲線デジタル署名アルゴリズム（ECDSA）は[X9.62]で定義されています。 id-ecdsa-with-shake128またはid-ecdsa-with-shake256（セクション3で指定）アルゴリズム識別子が表示されると、それぞれのSHAKE関数（SHAKE128またはSHAKE256）がハッシュとして使用されます。 エンコーディングでは、パラメータフィールドを省略しなければなりません。 つまり、AlgorithmIdentifierは、OID id-ecdsa-with-shake128またはid-ecdsa-with-shake256の1つのコンポーネントのシーケンスでなければなりません。"
    },
    {
      "indent": 3,
      "text": "For simplicity and compliance with the ECDSA standard specification [X9.62], the output length of the hash function must be explicitly determined. The output length, d, for SHAKE128 or SHAKE256 used in ECDSA MUST be 256 or 512 bits, respectively.",
      "ja": "簡素化およびECDSA標準仕様[X9.62]への準拠のために、ハッシュ関数の出力長を明示的に決定する必要があります。 ECDSAで使用されるSHAKE128またはSHAKE256の出力長dは、それぞれ256ビットまたは512ビットでなければなりません。"
    },
    {
      "indent": 3,
      "text": "Conforming CA implementations that generate ECDSA with SHAKE signatures in certificates or CRLs SHOULD generate such signatures with a deterministically generated, nonrandom k in accordance with all the requirements specified in [RFC6979]. They MAY also generate such signatures in accordance with all other recommendations in [X9.62] or [SEC1] if they have a stated policy that requires conformance to those standards. Those standards have not specified SHAKE128 and SHAKE256 as hash algorithm options. However, SHAKE128 and SHAKE256 with output length being 32 and 64 octets, respectively, can be used instead of 256- and 512-bit output hash algorithms such as SHA256 and SHA512.",
      "ja": "証明書またはCRLでSHAKE署名を使用してECDSAを生成するCAの実装は、[RFC6979]で指定されたすべての要件に従って、決定論的に生成された非ランダムkでそのような署名を生成する必要があります。 また、[X9.62]または[SEC1]の他のすべての推奨事項に従って、それらの標準への準拠を要求するポリシーが規定されている場合、そのような署名を生成できます。 これらの標準では、ハッシュアルゴリズムオプションとしてSHAKE128とSHAKE256を指定していません。 ただし、SHA256やSHA512などの256ビットおよび512ビットの出力ハッシュアルゴリズムの代わりに、出力長がそれぞれ32オクテットおよび64オクテットのSHAKE128およびSHAKE256を使用できます。"
    },
    {
      "indent": 0,
      "text": "4.2. Public Keys",
      "section_title": true,
      "ja": "4.2. 公開鍵"
    },
    {
      "indent": 3,
      "text": "Certificates conforming to [RFC5280] can convey a public key for any public key algorithm. The certificate indicates the public key algorithm through an algorithm identifier. This algorithm identifier is an OID with optionally associated parameters. The conventions and encoding for RSASSA-PSS and ECDSA public key algorithm identifiers are as specified in Sections 2.3.1 and 2.3.5 of [RFC3279], Section 3.1 of [RFC4055] and Section 2.1 of [RFC5480].",
      "ja": "[RFC5280]に準拠する証明書は、公開鍵アルゴリズムの公開鍵を伝達できます。 証明書は、アルゴリズム識別子を通じて公開鍵アルゴリズムを示します。 このアルゴリズム識別子は、オプションでパラメータが関連付けられたOIDです。 RSASSA-PSSおよびECDSA公開鍵アルゴリズム識別子の規則とエンコードは、[RFC3279]のセクション2.3.1および2.3.5、[RFC4055]のセクション3.1、および[RFC5480]のセクション2.1で指定されています。"
    },
    {
      "indent": 3,
      "text": "Traditionally, the rsaEncryption object identifier is used to identify RSA public keys. The rsaEncryption object identifier continues to identify the subject public key when the RSA private key owner does not wish to limit the use of the public key exclusively to RSASSA-PSS with SHAKEs. When the RSA private key owner wishes to limit the use of the public key exclusively to RSASSA-PSS with SHAKEs, the AlgorithmIdentifiers for RSASSA-PSS defined in Section 3 SHOULD be used as the algorithm field in the SubjectPublicKeyInfo sequence [RFC5280]. Conforming client implementations that process RSASSA-PSS with SHAKE public keys when processing certificates and CRLs MUST recognize the corresponding OIDs.",
      "ja": "従来、rsaEncryptionオブジェクト識別子は、RSA公開キーを識別するために使用されていました。 RSA秘密鍵の所有者が公開鍵の使用をSHAKE付きのRSASSA-PSSのみに限定したくない場合、rsaEncryptionオブジェクト識別子は引き続き主題の公開鍵を識別します。 RSA秘密鍵所有者が公開鍵の使用をSHAKE付きのRSASSA-PSSのみに制限したい場合、セクション3で定義されたRSASSA-PSSのAlgorithmIdentifiersをSubjectPublicKeyInfoシーケンス[RFC5280]のアルゴリズムフィールドとして使用する必要があります。 証明書とCRLを処理するときにSHAKE公開キーでRSASSA-PSSを処理する適合クライアント実装は、対応するOIDを認識しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Conforming CA implementations MUST specify the X.509 public key algorithm explicitly by using the OIDs specified in Section 3 when encoding ECDSA with SHAKE public keys in certificates and CRLs. Conforming client implementations that process ECDSA with SHAKE public keys when processing certificates and CRLs MUST recognize the corresponding OIDs.",
      "ja": "適合CA実装は、証明書およびCRLでSHAKE公開鍵を使用してECDSAをエンコードするときに、セクション3で指定されたOIDを使用して、X.509公開鍵アルゴリズムを明示的に指定しなければなりません。 証明書とCRLを処理するときにECDSAをSHAKE公開キーで処理する適合クライアント実装は、対応するOIDを認識しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The identifier parameters, as explained in Section 3, MUST be absent.",
      "ja": "セクション3で説明されているように、識別子パラメータは存在していなければなりません。"
    },
    {
      "indent": 0,
      "text": "5. IANA Considerations",
      "section_title": true,
      "ja": "5. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "One object identifier for the ASN.1 module in Appendix A has been assigned in the \"SMI Security for PKIX Module Identifier\" (1.3.6.1.5.5.7.0) registry:",
      "ja": "付録AのASN.1モジュールの1つのオブジェクト識別子は、「PKIXモジュール識別子のSMIセキュリティ」（1.3.6.1.5.5.7.0）レジストリに割り当てられています。"
    },
    {
      "indent": 12,
      "text": "+---------+--------------------------+------------+\n| Decimal |       Description        | References |\n+=========+==========================+============+\n|    94   | id-mod-pkix1-shakes-2019 |  RFC 8692  |\n+---------+--------------------------+------------+",
      "raw": true
    },
    {
      "indent": 34,
      "text": "Table 1",
      "ja": "表1"
    },
    {
      "indent": 3,
      "text": "IANA has updated the \"SMI Security for PKIX Algorithms\" (1.3.6.1.5.5.7.6) registry [SMI-PKIX] with four additional entries:",
      "ja": "IANAは、「SMI Security for PKIX Algorithms」（1.3.6.1.5.5.7.6）レジストリ[SMI-PKIX]を4つの追加エントリで更新しました。"
    },
    {
      "indent": 13,
      "text": "+---------+------------------------+------------+\n| Decimal |      Description       | References |\n+=========+========================+============+\n|    30   | id-RSASSA-PSS-SHAKE128 |  RFC 8692  |\n+---------+------------------------+------------+\n|    31   | id-RSASSA-PSS-SHAKE256 |  RFC 8692  |\n+---------+------------------------+------------+\n|    32   | id-ecdsa-with-shake128 |  RFC 8692  |\n+---------+------------------------+------------+\n|    33   | id-ecdsa-with-shake256 |  RFC 8692  |\n+---------+------------------------+------------+",
      "raw": true
    },
    {
      "indent": 34,
      "text": "Table 2",
      "ja": "表2"
    },
    {
      "indent": 3,
      "text": "IANA has updated the \"Hash Function Textual Names\" registry [Hash-Texts] with two additional entries for SHAKE128 and SHAKE256:",
      "ja": "IANAは、SHAKE128およびSHAKE256の2つの追加エントリで「Hash Function Textual Names」レジストリ[Hash-Texts]を更新しました。"
    },
    {
      "indent": 7,
      "text": "+--------------------+-------------------------+-----------+\n| Hash Function Name |           OID           | Reference |\n+====================+=========================+===========+\n|      shake128      | 2.16.840.1.101.3.4.2.11 |  RFC 8692 |\n+--------------------+-------------------------+-----------+\n|      shake256      | 2.16.840.1.101.3.4.2.12 |  RFC 8692 |\n+--------------------+-------------------------+-----------+",
      "raw": true
    },
    {
      "indent": 33,
      "text": "Table 3",
      "ja": "表3"
    },
    {
      "indent": 0,
      "text": "6. Security Considerations",
      "section_title": true,
      "ja": "6. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "This document updates [RFC3279]. The Security Considerations section of that document applies to this specification as well.",
      "ja": "このドキュメントは[RFC3279]を更新します。 そのドキュメントのセキュリティに関する考慮事項のセクションは、この仕様にも適用されます。"
    },
    {
      "indent": 3,
      "text": "NIST has defined appropriate use of the hash functions in terms of the algorithm strengths and expected time frames for secure use in Special Publications (SPs) [SP800-78-4] and [SP800-107]. These documents can be used as guides to choose appropriate key sizes for various security scenarios.",
      "ja": "NISTは、Special Publications（SP）[SP800-78-4]および[SP800-107]での安全な使用のために、アルゴリズムの強度と予想される時間フレームの観点からハッシュ関数の適切な使用を定義しています。 これらのドキュメントは、さまざまなセキュリティシナリオに適したキーサイズを選択するためのガイドとして使用できます。"
    },
    {
      "indent": 3,
      "text": "SHAKE128 with output length of 256 bits offers 128 bits of collision and preimage resistance. Thus, SHAKE128 OIDs in this specification are RECOMMENDED with 2048- (112-bit security) or 3072-bit (128-bit security) RSA modulus or curves with group order of 256 bits (128-bit security). SHAKE256 with a 512-bit output length offers 256 bits of collision and preimage resistance. Thus, the SHAKE256 OIDs in this specification are RECOMMENDED with 4096-bit RSA modulus or higher or curves with a group order of at least 512 bits, such as the NIST Curve P-521 (256-bit security). Note that we recommended a 4096-bit RSA because we would need a 15360-bit modulus for 256 bits of security, which is impractical for today's technology.",
      "ja": "256ビットの出力長を持つSHAKE128は、128ビットの衝突とプリイメージ耐性を提供します。 したがって、この仕様のSHAKE128 OIDは、2048ビット（112ビットセキュリティ）または3072ビット（128ビットセキュリティ）RSAモジュラスまたは256ビットのグループ順序（128ビットセキュリティ）の曲線で推奨されます。 512ビットの出力長を持つSHAKE256は、256ビットの衝突とプリイメージ耐性を提供します。 したがって、この仕様のSHAKE256 OIDは、4096ビットRSAモジュラス以上、またはNISTカーブP-521（256ビットセキュリティ）などのグループ順序が少なくとも512ビットのカーブで推奨されます。 256ビットのセキュリティには15360ビットのモジュラスが必要になるため、4096ビットのRSAを推奨していることに注意してください。これは、今日の技術には実用的ではありません。"
    },
    {
      "indent": 0,
      "text": "7. References",
      "section_title": true,
      "ja": "7. 参考文献"
    },
    {
      "indent": 0,
      "text": "7.1. Normative References",
      "section_title": true,
      "ja": "7.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <https://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119] Bradner、S.、「要件レベルを示すためにRFCで使用するキーワード」、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<https://www.rfc-editor.org/info/ rfc2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC3279] Bassham, L., Polk, W., and R. Housley, \"Algorithms and Identifiers for the Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile\", RFC 3279, DOI 10.17487/RFC3279, April 2002, <https://www.rfc-editor.org/info/rfc3279>.",
      "ja": "[RFC3279] Bassham、L.、Polk、W。、およびR. Housley、「インターネットX.509公開鍵インフラストラクチャ証明書および証明書失効リスト（CRL）プロファイルのアルゴリズムと識別子」、RFC 3279、DOI 10.17487 / RFC3279、 2002年4月、<https://www.rfc-editor.org/info/rfc3279>。"
    },
    {
      "indent": 3,
      "text": "[RFC4055] Schaad, J., Kaliski, B., and R. Housley, \"Additional Algorithms and Identifiers for RSA Cryptography for use in the Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile\", RFC 4055, DOI 10.17487/RFC4055, June 2005, <https://www.rfc-editor.org/info/rfc4055>.",
      "ja": "[RFC4055] Schaad、J.、Kaliski、B。、およびR. Housley、「インターネットX.509公開鍵インフラストラクチャ証明書および証明書失効リスト（CRL）プロファイルで使用するためのRSA暗号化の追加アルゴリズムおよび識別子」、RFC 4055 、DOI 10.17487 / RFC4055、2005年6月、<https://www.rfc-editor.org/info/rfc4055>。"
    },
    {
      "indent": 3,
      "text": "[RFC5280] Cooper, D., Santesson, S., Farrell, S., Boeyen, S., Housley, R., and W. Polk, \"Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile\", RFC 5280, DOI 10.17487/RFC5280, May 2008, <https://www.rfc-editor.org/info/rfc5280>.",
      "ja": "[RFC5280] Cooper、D.、Santesson、S.、Farrell、S.、Boeyen、S.、Housley、R.、およびW. Polk、 \"インターネットX.509公開鍵インフラストラクチャ証明書および証明書失効リスト（CRL）プロファイル \"、RFC 5280、DOI 10.17487 / RFC5280、2008年5月、<https://www.rfc-editor.org/info/rfc5280>。"
    },
    {
      "indent": 3,
      "text": "[RFC5480] Turner, S., Brown, D., Yiu, K., Housley, R., and T. Polk, \"Elliptic Curve Cryptography Subject Public Key Information\", RFC 5480, DOI 10.17487/RFC5480, March 2009, <https://www.rfc-editor.org/info/rfc5480>.",
      "ja": "[RFC5480] Turner、S.、Brown、D.、Yiu、K.、Housley、R。、およびT. Polk、「Elliptic Curve Cryptography Subject Public Key Information」、RFC 5480、DOI 10.17487 / RFC5480、2009年3月、< https://www.rfc-editor.org/info/rfc5480>。"
    },
    {
      "indent": 3,
      "text": "[RFC8017] Moriarty, K., Ed., Kaliski, B., Jonsson, J., and A. Rusch, \"PKCS #1: RSA Cryptography Specifications Version 2.2\", RFC 8017, DOI 10.17487/RFC8017, November 2016, <https://www.rfc-editor.org/info/rfc8017>.",
      "ja": "[RFC8017] Moriarty、K.、Ed。、Kaliski、B.、Jonsson、J.、and A. Rusch、 \"PKCS＃1：RSA Cryptography Specifications Version 2.2\"、RFC 8017、DOI 10.17487 / RFC8017、November 2016、< https://www.rfc-editor.org/info/rfc8017>。"
    },
    {
      "indent": 3,
      "text": "[RFC8174] Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174, May 2017, <https://www.rfc-editor.org/info/rfc8174>.",
      "ja": "[RFC8174] Leiba、B。、「RFC 2119キーワードの大文字と小文字のあいまいさ」、BCP 14、RFC 8174、DOI 10.17487 / RFC8174、2017年5月、<https://www.rfc-editor.org/info/ rfc8174>。"
    },
    {
      "indent": 3,
      "text": "[SHA3] National Institute of Standards and Technology, \"SHA-3 Standard: Permutation-Based Hash and Extendable-Output Functions\", DOI 10.6028/NIST.FIPS.202, FIPS PUB 202, August 2015, <https://doi.org/10.6028/NIST.FIPS.202>.",
      "ja": "[SHA3]国立標準技術研究所、「SHA-3標準：順列ベースのハッシュおよび拡張出力関数」、DOI 10.6028 / NIST.FIPS.202、FIPS PUB 202、2015年8月、<https：// doi。 org / 10.6028 / NIST.FIPS.202>。"
    },
    {
      "indent": 0,
      "text": "7.2. Informative References",
      "section_title": true,
      "ja": "7.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[Hash-Texts] IANA, \"Hash Function Textual Names\", <https://www.iana.org/assignments/hash-function-text-names/>.",
      "ja": "[ハッシュテキスト] IANA、「ハッシュ関数のテキスト名」、<https://www.iana.org/assignments/hash-function-text-names/>。"
    },
    {
      "indent": 3,
      "text": "[RFC5912] Hoffman, P. and J. Schaad, \"New ASN.1 Modules for the Public Key Infrastructure Using X.509 (PKIX)\", RFC 5912, DOI 10.17487/RFC5912, June 2010, <https://www.rfc-editor.org/info/rfc5912>.",
      "ja": "[RFC5912] Hoffman、P。、およびJ. Schaad、「X.509（PKIX）を使用した公開鍵インフラストラクチャ用の新しいASN.1モジュール」、RFC 5912、DOI 10.17487 / RFC5912、2010年6月、<https：// www。 rfc-editor.org/info/rfc5912>。"
    },
    {
      "indent": 3,
      "text": "[RFC6979] Pornin, T., \"Deterministic Usage of the Digital Signature Algorithm (DSA) and Elliptic Curve Digital Signature Algorithm (ECDSA)\", RFC 6979, DOI 10.17487/RFC6979, August 2013, <https://www.rfc-editor.org/info/rfc6979>.",
      "ja": "[RFC6979] Pornin、T.、「デジタル署名アルゴリズム（DSA）および楕円曲線デジタル署名アルゴリズム（ECDSA）の決定論的使用法」、RFC 6979、DOI 10.17487 / RFC6979、2013年8月、<https：//www.rfc- editor.org/info/rfc6979>。"
    },
    {
      "indent": 3,
      "text": "[SEC1] Standards for Efficient Cryptography Group, \"SEC 1: Elliptic Curve Cryptography\", May 2009, <http://www.secg.org/sec1-v2.pdf>.",
      "ja": "[SEC1]効率的な暗号化グループの基準、「SEC 1：楕円曲線暗号化」、2009年5月、<http://www.secg.org/sec1-v2.pdf>。"
    },
    {
      "indent": 3,
      "text": "[SMI-PKIX] IANA, \"SMI Security for PKIX Algorithms\", <https://www.iana.org/assignments/smi-numbers>.",
      "ja": "[SMI-PKIX] IANA、「PKIXアルゴリズムのSMIセキュリティ」、<https://www.iana.org/assignments/smi-numbers>。"
    },
    {
      "indent": 3,
      "text": "[SP800-107] National Institute of Standards and Technology (NIST), \"Recommendation for Applications Using Approved Hash Algorithms\", DOI 10.6028/NIST.SP.800-107r1, Revision 1, NIST Special Publication (SP) 800-107, August 2012, <http://dx.doi.org/10.6028/NIST.SP.800-107r1>.",
      "ja": "[SP800-107]米国国立標準技術研究所（NIST）、「承認済みハッシュアルゴリズムを使用したアプリケーションの推奨事項」、DOI 10.6028 / NIST.SP.800-107r1、改訂1、NIST特別公開（SP）800-107、8月 2012、<http://dx.doi.org/10.6028/NIST.SP.800-107r1>。"
    },
    {
      "indent": 3,
      "text": "[SP800-78-4] National Institute of Standards and Technology (NIST), \"Cryptographic Algorithms and Key Sizes for Personal Identity Verification\", DOI 10.6028/NIST.SP.800-78-4, NIST Special Publication (SP) 800-78-4, May 2015, <http://dx.doi.org/10.6028/NIST.SP.800-78-4>.",
      "ja": "[SP800-78-4]国立標準技術研究所（NIST）、「個人ID検証のための暗号化アルゴリズムとキーサイズ」、DOI 10.6028 / NIST.SP.800-78-4、NIST Special Publication（SP）800- 78-4、2015年5月、<http://dx.doi.org/10.6028/NIST.SP.800-78-4>。"
    },
    {
      "indent": 3,
      "text": "[X9.62] ANSI, \"Public Key Cryptography for the Financial Services Industry: the Elliptic Curve Digital Signature Algorithm (ECDSA)\", ANSI X9.62, 2005.",
      "ja": "[X9.62] ANSI、「金融サービス業界向け公開鍵暗号：楕円曲線デジタル署名アルゴリズム（ECDSA）」、ANSI X9.62、2005。"
    },
    {
      "indent": 0,
      "text": "Appendix A. ASN.1 Module",
      "section_title": true,
      "ja": "付録A.ASN.1モジュール"
    },
    {
      "indent": 3,
      "text": "This appendix includes the ASN.1 module for SHAKEs in X.509. This module does not come from any previously existing RFC. This module references [RFC5912].",
      "ja": "この付録には、X.509のSHAKE用のASN.1モジュールが含まれています。 このモジュールは、既存のRFCから派生したものではありません。 このモジュールは[RFC5912]を参照します。"
    },
    {
      "indent": 3,
      "text": "PKIXAlgsForSHAKE-2019 { iso(1) identified-organization(3) dod(6)\n  internet(1) security(5) mechanisms(5) pkix(7) id-mod(0)\n  id-mod-pkix1-shakes-2019(94) }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "DEFINITIONS EXPLICIT TAGS ::=",
      "raw": true
    },
    {
      "indent": 3,
      "text": "BEGIN",
      "ja": "ベギン"
    },
    {
      "indent": 3,
      "text": "-- EXPORTS ALL;",
      "ja": "-すべてをエクスポートします。"
    },
    {
      "indent": 3,
      "text": "IMPORTS",
      "ja": "輸入"
    },
    {
      "indent": 3,
      "text": "-- FROM RFC 5912",
      "ja": "-RFC 5912から"
    },
    {
      "indent": 3,
      "text": "PUBLIC-KEY, SIGNATURE-ALGORITHM, DIGEST-ALGORITHM, SMIME-CAPS\nFROM AlgorithmInformation-2009\n  { iso(1) identified-organization(3) dod(6) internet(1) security(5)\n    mechanisms(5) pkix(7) id-mod(0)\n    id-mod-algorithmInformation-02(58) }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "-- FROM RFC 5912",
      "ja": "-RFC 5912から"
    },
    {
      "indent": 3,
      "text": "RSAPublicKey, rsaEncryption, pk-rsa, pk-ec,\nCURVE, id-ecPublicKey, ECPoint, ECParameters, ECDSA-Sig-Value\nFROM PKIXAlgs-2009 { iso(1) identified-organization(3) dod(6)\n     internet(1) security(5) mechanisms(5) pkix(7) id-mod(0)\n     id-mod-pkix1-algorithms2008-02(56) }\n;",
      "raw": true
    },
    {
      "indent": 3,
      "text": "--\n-- Message Digest Algorithms (mda-)\n--\nDigestAlgorithms DIGEST-ALGORITHM ::= {\n  -- This expands DigestAlgorithms from RFC 5912\n  mda-shake128   |\n  mda-shake256,\n  ...\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "-- -- One-Way Hash Functions --",
      "ja": "--一方向ハッシュ関数-"
    },
    {
      "indent": 3,
      "text": "-- SHAKE128\nmda-shake128 DIGEST-ALGORITHM ::= {\n  IDENTIFIER id-shake128  -- with output length 32 bytes.\n}\nid-shake128 OBJECT IDENTIFIER ::= { joint-iso-itu-t(2) country(16)\n                                    us(840) organization(1) gov(101)\n                                    csor(3) nistAlgorithm(4)\n                                    hashAlgs(2) 11 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "-- SHAKE256\nmda-shake256 DIGEST-ALGORITHM ::= {\n  IDENTIFIER id-shake256  -- with output length 64 bytes.\n}\nid-shake256 OBJECT IDENTIFIER ::= { joint-iso-itu-t(2) country(16)\n                                    us(840) organization(1) gov(101)\n                                    csor(3) nistAlgorithm(4)\n                                    hashAlgs(2) 12 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "--\n-- Public Key (pk-) Algorithms\n--\nPublicKeys PUBLIC-KEY ::= {\n  -- This expands PublicKeys from RFC 5912\n  pk-rsaSSA-PSS-SHAKE128 |\n  pk-rsaSSA-PSS-SHAKE256,\n  ...\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "-- The hashAlgorithm is mda-shake128\n-- The maskGenAlgorithm is id-shake128\n-- Mask Gen Algorithm is SHAKE128 with output length\n-- (8*ceil((n-1)/8) - 264) bits, where n is the RSA\n-- modulus in bits.\n-- The saltLength is 32.  The trailerField is 1.\npk-rsaSSA-PSS-SHAKE128 PUBLIC-KEY ::= {\n  IDENTIFIER id-RSASSA-PSS-SHAKE128\n  KEY RSAPublicKey\n  PARAMS ARE absent\n  -- Private key format not in this module --\n  CERT-KEY-USAGE { nonRepudiation, digitalSignature,\n                   keyCertSign, cRLSign }\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "-- The hashAlgorithm is mda-shake256\n-- The maskGenAlgorithm is id-shake256\n-- Mask Gen Algorithm is SHAKE256 with output length\n-- (8*ceil((n-1)/8) - 520)-bits, where n is the RSA\n-- modulus in bits.\n-- The saltLength is 64.  The trailerField is 1.\npk-rsaSSA-PSS-SHAKE256 PUBLIC-KEY ::= {\n  IDENTIFIER id-RSASSA-PSS-SHAKE256\n  KEY RSAPublicKey\n  PARAMS ARE absent\n  -- Private key format not in this module --\n  CERT-KEY-USAGE { nonRepudiation, digitalSignature,\n                   keyCertSign, cRLSign }\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "--\n-- Signature Algorithms (sa-)\n--\nSignatureAlgs SIGNATURE-ALGORITHM ::= {\n  -- This expands SignatureAlgorithms from RFC 5912\n  sa-rsassapssWithSHAKE128 |\n  sa-rsassapssWithSHAKE256 |\n  sa-ecdsaWithSHAKE128 |\n  sa-ecdsaWithSHAKE256,\n  ...\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "--\n-- SMIME Capabilities (sa-)\n--\nSMimeCaps SMIME-CAPS ::= {\n  -- The expands SMimeCaps from RFC 5912\n  sa-rsassapssWithSHAKE128.&smimeCaps |\n  sa-rsassapssWithSHAKE256.&smimeCaps |\n  sa-ecdsaWithSHAKE128.&smimeCaps |\n  sa-ecdsaWithSHAKE256.&smimeCaps,\n  ...\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "-- RSASSA-PSS with SHAKE128\nsa-rsassapssWithSHAKE128 SIGNATURE-ALGORITHM ::= {\n  IDENTIFIER id-RSASSA-PSS-SHAKE128\n  PARAMS ARE absent\n      -- The hashAlgorithm is mda-shake128\n      -- The maskGenAlgorithm is id-shake128\n      -- Mask Gen Algorithm is SHAKE128 with output length\n      -- (8*ceil((n-1)/8) - 264) bits, where n is the RSA\n      -- modulus in bits.\n      -- The saltLength is 32. The trailerField is 1\n  HASHES { mda-shake128 }\n  PUBLIC-KEYS { pk-rsa | pk-rsaSSA-PSS-SHAKE128 }\n  SMIME-CAPS { IDENTIFIED BY id-RSASSA-PSS-SHAKE128 }\n}\nid-RSASSA-PSS-SHAKE128  OBJECT IDENTIFIER  ::=  { iso(1)\n        identified-organization(3) dod(6) internet(1)\n        security(5) mechanisms(5) pkix(7) algorithms(6)\n        30 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "-- RSASSA-PSS with SHAKE256\nsa-rsassapssWithSHAKE256 SIGNATURE-ALGORITHM ::= {\n  IDENTIFIER id-RSASSA-PSS-SHAKE256\n  PARAMS ARE absent\n      -- The hashAlgorithm is mda-shake256\n      -- The maskGenAlgorithm is id-shake256\n      -- Mask Gen Algorithm is SHAKE256 with output length\n      -- (8*ceil((n-1)/8) - 520)-bits, where n is the\n      -- RSA modulus in bits.\n      -- The saltLength is 64. The trailerField is 1.\n HASHES { mda-shake256 }\n PUBLIC-KEYS { pk-rsa | pk-rsaSSA-PSS-SHAKE256 }\n SMIME-CAPS { IDENTIFIED BY id-RSASSA-PSS-SHAKE256 }\n}\nid-RSASSA-PSS-SHAKE256  OBJECT IDENTIFIER  ::=  { iso(1)\n        identified-organization(3) dod(6) internet(1)\n        security(5) mechanisms(5) pkix(7) algorithms(6)\n        31 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "-- ECDSA with SHAKE128\nsa-ecdsaWithSHAKE128 SIGNATURE-ALGORITHM ::= {\n  IDENTIFIER id-ecdsa-with-shake128\n  VALUE ECDSA-Sig-Value\n  PARAMS ARE absent\n  HASHES { mda-shake128 }\n  PUBLIC-KEYS { pk-ec }\n  SMIME-CAPS { IDENTIFIED BY id-ecdsa-with-shake128 }\n}\nid-ecdsa-with-shake128 OBJECT IDENTIFIER  ::=  { iso(1)\n        identified-organization(3) dod(6) internet(1)\n        security(5) mechanisms(5) pkix(7) algorithms(6)\n        32 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "-- ECDSA with SHAKE256\nsa-ecdsaWithSHAKE256 SIGNATURE-ALGORITHM ::= {\n  IDENTIFIER id-ecdsa-with-shake256\n  VALUE ECDSA-Sig-Value\n  PARAMS ARE absent\n  HASHES { mda-shake256 }\n  PUBLIC-KEYS { pk-ec }\n  SMIME-CAPS { IDENTIFIED BY id-ecdsa-with-shake256 }\n}\nid-ecdsa-with-shake256 OBJECT IDENTIFIER  ::=  { iso(1)\n        identified-organization(3) dod(6) internet(1)\n        security(5) mechanisms(5) pkix(7) algorithms(6)\n        33 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "END",
      "ja": "終わり"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "We would like to thank Sean Turner, Jim Schaad, and Eric Rescorla for their valuable contributions to this document.",
      "ja": "このドキュメントへの貴重な貢献に対して、Sean Turner、Jim Schaad、およびEric Rescorlaに感謝します。"
    },
    {
      "indent": 3,
      "text": "The authors would like to thank Russ Housley for his guidance and very valuable contributions with the ASN.1 module.",
      "ja": "著者は、彼のガイダンスとASN.1モジュールでの非常に貴重な貢献についてラスHousleyに感謝したいと思います。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Panos Kampanakis Cisco Systems",
      "ja": "Panos Kampanakis Cisco Systems"
    },
    {
      "indent": 3,
      "text": "Email: pkampana@cisco.com",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Quynh Dang NIST 100 Bureau Drive, Stop 8930 Gaithersburg, MD 20899-8930 United States of America",
      "ja": "Quynh Dang NIST 100 Bureau Drive、Stop 8930 Gaithersburg、MD 20899-8930アメリカ合衆国"
    },
    {
      "indent": 3,
      "text": "Email: quynh.dang@nist.gov",
      "raw": true
    }
  ]
}