{
  "title": {
    "text": "RFC 8094 - DNS over Datagram Transport Layer Security (DTLS)",
    "ja": "RFC 8094 - データグラムトランスポート層セキュリティのDNS（DTLS）"
  },
  "number": 8094,
  "created_at": "2019-10-23 06:41:27.561882+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                          T. Reddy\nRequest for Comments: 8094                                         Cisco\nCategory: Experimental                                           D. Wing\nISSN: 2070-1721\n                                                                P. Patil\n                                                                   Cisco\n                                                           February 2017",
      "raw": true
    },
    {
      "indent": 11,
      "text": "DNS over Datagram Transport Layer Security (DTLS)",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "DNS queries and responses are visible to network elements on the path between the DNS client and its server. These queries and responses can contain privacy-sensitive information, which is valuable to protect.",
      "ja": "DNSクエリと応答は、DNSクライアントとそのサーバー間のパス上のネットワーク要素に表示されます。これらのクエリと応答は保護する価値がある、プライバシー、機密情報を含むことができます。"
    },
    {
      "indent": 3,
      "text": "This document proposes the use of Datagram Transport Layer Security (DTLS) for DNS, to protect against passive listeners and certain active attacks. As latency is critical for DNS, this proposal also discusses mechanisms to reduce DTLS round trips and reduce the DTLS handshake size. The proposed mechanism runs over port 853.",
      "ja": "この文書では、受動的なリスナーと一定の積極的な攻撃から保護するために、DNSのためのデータグラムトランスポート層セキュリティ（DTLS）の使用を提案しています。待ち時間がDNSのために不可欠であるとして、この提案はまた、DTLSラウンドトリップを削減し、DTLSハンドシェークのサイズを小さくするためのメカニズムについて説明します。提案されたメカニズムは、ポート853上で実行されます。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for examination, experimental implementation, and evaluation.",
      "ja": "このドキュメントはインターネット標準化過程仕様ではありません。それは、検査、実験的な実装、および評価のために公開されています。"
    },
    {
      "indent": 3,
      "text": "This document defines an Experimental Protocol for the Internet community. This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Not all documents approved by the IESG are a candidate for any level of Internet Standard; see Section 2 of RFC 7841.",
      "ja": "この文書は、インターネットコミュニティのためにExperimentalプロトコルを定義します。このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。 IESGによって承認されていないすべての文書がインターネットStandardのどんなレベルの候補です。 RFC 7841のセクション2を参照してください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc8094.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc8094で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2017 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2017 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................3\n   1.1. Relationship to TCP Queries and to DNSSEC ..................3\n   1.2. Document Status ............................................4\n2. Terminology .....................................................4\n3. Establishing and Managing DNS over DTLS Sessions ................5\n   3.1. Session Initiation .........................................5\n   3.2. DTLS Handshake and Authentication ..........................5\n   3.3. Established Sessions .......................................6\n4. Performance Considerations ......................................7\n5. Path MTU (PMTU) Issues ..........................................7\n6. Anycast .........................................................8\n7. Usage ...........................................................9\n8. IANA Considerations .............................................9\n9. Security Considerations .........................................9\n10. References ....................................................10\n   10.1. Normative References .....................................10\n   10.2. Informative References ...................................11\nAcknowledgements ..................................................13\nAuthors' Addresses ................................................13",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "The Domain Name System is specified in [RFC1034] and [RFC1035]. DNS queries and responses are normally exchanged unencrypted; thus, they are vulnerable to eavesdropping. Such eavesdropping can result in an undesired entity learning domain that a host wishes to access, thus resulting in privacy leakage. The DNS privacy problem is further discussed in [RFC7626].",
      "ja": "ドメインネームシステムは、[RFC1034]と[RFC1035]で指定されています。 DNSクエリと応答が正常に暗号化されていない交換されます。このように、彼らは盗聴に対して脆弱です。このような盗聴は、ホストは、このようにプライバシーの漏洩が生じ、アクセスしたい望ましくない実体学習ドメインにつながることができます。 DNSのプライバシーの問題は、さらに、[RFC7626]で議論されています。"
    },
    {
      "indent": 3,
      "text": "This document defines DNS over DTLS, which provides confidential DNS communication between stub resolvers and recursive resolvers, stub resolvers and forwarders, and forwarders and recursive resolvers. DNS over DTLS puts an additional computational load on servers. The largest gain for privacy is to protect the communication between the DNS client (the end user's machine) and its caching resolver. DNS over DTLS might work equally between recursive clients and authoritative servers, but this application of the protocol is out of scope for the DNS PRIVate Exchange (DPRIVE) working group per its current charter. This document does not change the format of DNS messages.",
      "ja": "この文書は、スタブリゾルバと再帰リゾルバ、スタブリゾルバとフォワーダ、およびフォワーダと再帰リゾルバの間に機密DNS通信を提供DTLS、上にDNSを定義します。 DTLSを超えるDNSは、サーバー上で追加の計算負荷を置きます。プライバシーのための最大ゲインは、DNSクライアント（エンドユーザのマシン）とそのキャッシュリゾルバ間の通信を保護することです。 DTLSを超えるDNSは、再帰的なクライアントと権威サーバ間で均等に働くかもしれないが、プロトコルのこのアプリケーションは、現在のチャーターあたりのDNSプライベート取引所（DPRIVE）ワーキンググループの範囲外です。この文書では、DNSメッセージのフォーマットを変更しません。"
    },
    {
      "indent": 3,
      "text": "The motivations for proposing DNS over DTLS are that:",
      "ja": "DTLS上でDNSを提案する動機があることです。"
    },
    {
      "indent": 3,
      "text": "o TCP suffers from network head-of-line blocking, where the loss of a packet causes all other TCP segments not to be delivered to the application until the lost packet is retransmitted. DNS over DTLS, because it uses UDP, does not suffer from network head-of-line blocking.",
      "ja": "O TCPは、パケットの損失は、失われたパケットが再送されるまで、アプリケーションに配信されない、他のすべてのTCPセグメントを引き起こすネットワークヘッドオブラインブロッキング、苦しんでいます。それはUDPを使用しているため、DTLSを超えるDNSは、ネットワークヘッドオブラインブロッキングを受けません。"
    },
    {
      "indent": 3,
      "text": "o DTLS session resumption consumes one round trip, whereas TLS session resumption can start only after the TCP handshake is complete. However, with TCP Fast Open [RFC7413], the implementation can achieve the same RTT efficiency as DTLS.",
      "ja": "TLSセッション再開がTCPハンドシェイクが完了した後にのみ開始することができ、一方、O DTLSセッション再開は、1つの往復を消費します。しかし、TCP高速を開き、[RFC7413]で、実装は、DTLSと同じRTT効率を達成することができます。"
    },
    {
      "indent": 3,
      "text": "Note: DNS over DTLS is an experimental update to DNS, and the experiment will be concluded when the specification is evaluated through implementations and interoperability testing.",
      "ja": "注：DTLS上DNSがDNSに実験的更新であり、仕様を実装および相互運用性テストを介して評価されたときに実験を終了します。"
    },
    {
      "indent": 0,
      "text": "1.1. Relationship to TCP Queries and to DNSSEC",
      "section_title": true,
      "ja": "1.1。 TCPクエリへとDNSSECとの関係"
    },
    {
      "indent": 3,
      "text": "DNS queries can be sent over UDP or TCP. The scope of this document, however, is only UDP. DNS over TCP can be protected with TLS, as described in [RFC7858]. DNS over DTLS alone cannot provide privacy for DNS messages in all circumstances, specifically when the DTLS record size is larger than the path MTU. In such situations, the DNS server will respond with a truncated response (see Section 5).",
      "ja": "DNSクエリは、UDPまたはTCP上で送信することができます。この文書の範囲は、しかし、唯一のUDPです。 [RFC7858]に記載されているようにTCP上のDNSは、TLSで保護することができます。 DTLSレコードサイズがパスMTUよりも大きい場合にのみDTLSを超えるDNSは、具体的には、すべての状況でのDNSメッセージのプライバシーを提供することはできません。このような状況では、DNSサーバは切り捨て応答（第5節を参照）で応答します。"
    },
    {
      "indent": 3,
      "text": "Therefore, DNS clients and servers that implement DNS over DTLS MUST also implement DNS over TLS in order to provide privacy for clients that desire Strict Privacy as described in [DTLS].",
      "ja": "したがって、DTLS上でDNSを実装するDNSクライアントとサーバも[DTLS]で説明したように厳格なプライバシーを望む顧客のプライバシーを提供するために、TLS上でDNSを実装しなければなりません。"
    },
    {
      "indent": 3,
      "text": "DNS Security Extensions (DNSSEC) [RFC4033] provide object integrity of DNS resource records, allowing end users (or their resolver) to verify the legitimacy of responses. However, DNSSEC does not provide privacy for DNS requests or responses. DNS over DTLS works in conjunction with DNSSEC, but DNS over DTLS does not replace the need or value of DNSSEC.",
      "ja": "DNSセキュリティ拡張機能（DNSSEC）[RFC4033]応答の正当性を検証するために、エンドユーザー（またはそのリゾルバを）できるように、DNSリソースレコードのオブジェクトの整合性を提供します。しかし、DNSSECは、DNS要求や応答のためのプライバシーを提供していません。 DTLSを超えるDNSは、DNSSECと連携して動作しますが、DTLSを超えるDNSは、DNSSECの必要性や価値に代わるものではありません。"
    },
    {
      "indent": 0,
      "text": "1.2. Document Status",
      "section_title": true,
      "ja": "1.2。文書ステータス"
    },
    {
      "indent": 3,
      "text": "This document is an Experimental RFC. One key aspect to judge whether the approach is usable on a large scale is by observing the uptake, usability, and operational behavior of the protocol in large-scale, real-life deployments.",
      "ja": "このドキュメントは、実験的なRFCです。アプローチが大規模に利用可能であるかどうかを判断する一つの重要な側面は、取り込み、使いやすさ、および大規模な、現実の展開におけるプロトコルの動作挙動を観察することです。"
    },
    {
      "indent": 3,
      "text": "This DTLS solution was considered by the DPRIVE working group as an option to use in case the TLS-based approach specified in [RFC7858] turns out to have some issues when deployed. At the time of writing, it is expected that [RFC7858] is what will be deployed, and so this specification is mainly intended as a backup.",
      "ja": "このDTLS溶液は、[RFC7858]で指定されたTLSベースのアプローチが展開されたときに、いくつかの問題があることが判明した場合に使用するためのオプションとしてDPRIVEワーキンググループで検討されました。執筆時点では、[RFC7858]が展開されるので、この仕様は主にバックアップとして意図されるものであることが期待されます。"
    },
    {
      "indent": 3,
      "text": "The following guidelines should be considered when performance benchmarking DNS over DTLS:",
      "ja": "次のガイドラインは、DTLSを超えるときのパフォーマンスのベンチマークDNS考慮する必要があります。"
    },
    {
      "indent": 3,
      "text": "1. DNS over DTLS can recover from packet loss and reordering, and does not suffer from network head-of-line blocking. DNS over DTLS performance, in comparison with DNS over TLS, may be better in lossy networks.",
      "ja": "DTLSを超える1. DNSは、パケット損失や並べ替えから回復することができ、およびネットワークヘッドオブラインブロッキングを受けません。 DTLS性能を超えるDNSは、TLSを超えるDNSと比較して、損失の多いネットワークで良いかもしれません。"
    },
    {
      "indent": 3,
      "text": "2. The number of round trips to send the first DNS query over DNS over DTLS is less than the number of round trips to send the first DNS query over TLS. Even if TCP Fast Open is used, it only works for subsequent TCP connections between the DNS client and server (Section 3 in [RFC7413]).",
      "ja": "2. DTLSを超えるDNS上の最初のDNSクエリを送信するために、ラウンドトリップ数は、TLS上で最初のDNSクエリを送信するために、ラウンドトリップの数よりも少ないです。 TCP高速オープンが使用されている場合でも、それが唯一のDNSクライアントとサーバ間のその後のTCPコネクション（[RFC7413]でセクション3）のために動作します。"
    },
    {
      "indent": 3,
      "text": "3. If the DTLS 1.3 protocol [DTLS13] is used for DNS over DTLS, it provides critical latency improvements for connection establishment over DTLS 1.2.",
      "ja": "3. DTLS 1.3プロトコルは[DTLS13] DTLS上DNSのために使用される場合、それはDTLS 1.2を介した接続の確立のために重要な待ち時間の改善を提供します。"
    },
    {
      "indent": 0,
      "text": "2. Terminology",
      "section_title": true,
      "ja": "2.用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119] .",
      "ja": "キーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、 \"SHALL\"、 \"SHOULD\"、 \"ないもの\"、 \"推奨\" \"ない（SHOULD NOT）\"、 \"MAY\"、 \"推奨NOT\"、および「OPTIONAL 「本書では[RFC2119]で説明されるように解釈されるべきです。"
    },
    {
      "indent": 0,
      "text": "3. Establishing and Managing DNS over DTLS Sessions",
      "section_title": true,
      "ja": "3.確立とDTLSセッション上でDNSを管理します"
    },
    {
      "indent": 0,
      "text": "3.1. Session Initiation",
      "section_title": true,
      "ja": "3.1。セッション開始"
    },
    {
      "indent": 3,
      "text": "By default, DNS over DTLS MUST run over standard UDP port 853 as defined in Section 8, unless the DNS server has mutual agreement with its clients to use a port other than 853 for DNS over DTLS. In order to use a port other than 853, both clients and servers would need a configuration option in their software.",
      "ja": "第8節で定義されているDNSサーバがDTLS上でDNSのために853以外のポートを使用するには、クライアントとの相互の合意がない限り、デフォルトで、DTLSを超えるDNSは、標準のUDPポート853上で実行する必要があります。 853以外のポートを使用するためには、クライアントとサーバの両方が彼らのソフトウェアのコンフィギュレーションオプションが必要になります。"
    },
    {
      "indent": 3,
      "text": "The DNS client should determine if the DNS server supports DNS over DTLS by sending a DTLS ClientHello message to port 853 on the server, unless it has mutual agreement with its server to use a port other than port 853 for DNS over DTLS. Such another port MUST NOT be port 53 but MAY be from the \"first-come, first-served\" port range (User Ports [RFC6335], range 1024-49151). This recommendation against the use of port 53 for DNS over DTLS is to avoid complications in selecting use or non-use of DTLS and to reduce risk of downgrade attacks.",
      "ja": "それはDTLS上でDNSのポート853以外のポートを使用するには、サーバーとの相互の合意がない限り、DNSサーバーは、サーバー上のポート853にDTLS ClientHelloメッセージを送信することにより、DTLS以上のDNSをサポートしている場合、DNSクライアントが決定する必要があります。そのような他のポートは、ポート53であってはいけませんが、「先着順」ポートレンジ（ユーザーポート[RFC6335]、範囲1024から49151）からのものであってもよいです。 DTLSを超えるDNSのポート53の使用に対するこの勧告は、DTLSの使用または不使用を選択する合併症を回避し、ダウングレード攻撃のリスクを軽減することです。"
    },
    {
      "indent": 3,
      "text": "A DNS server that does not support DNS over DTLS will not respond to ClientHello messages sent by the client. If no response is received from that server, and the client has no better round-trip estimate, the client SHOULD retransmit the DTLS ClientHello according to Section 4.2.4.1 of [RFC6347]. After 15 seconds, it SHOULD cease attempts to retransmit its ClientHello. The client MAY repeat that procedure to discover if DNS over DTLS service becomes available from the DNS server, but such probing SHOULD NOT be done more frequently than every 24 hours and MUST NOT be done more frequently than every 15 minutes. This mechanism requires no additional signaling between the client and server.",
      "ja": "DTLS上でDNSをサポートしていないDNSサーバーは、クライアントから送信されたClientHelloメッセージに応答しません。応答がそのサーバから受信されず、クライアントが何より良い往復の見積もりを持っていない場合は、クライアントは[RFC6347]のセクション4.2.4.1によるDTLSのClientHelloを再送すべきです。 15秒後、それはそののClientHelloを再送する試みを中止すべきです。クライアントは、DTLSサービス超えるDNSは、DNSサーバーから利用できるようになった場合に発見するために、その手順を繰り返しますが、そのようなより頻繁に、24時間毎よりも行うべきではありませんプロービングと、15分ごとよりも頻繁に行われてはならない場合があります。このメカニズムは、クライアントとサーバーの間の追加のシグナリングを必要としません。"
    },
    {
      "indent": 3,
      "text": "DNS clients and servers MUST NOT use port 853 to transport cleartext DNS messages. DNS clients MUST NOT send and DNS servers MUST NOT respond to cleartext DNS messages on any port used for DNS over DTLS (including, for example, after a failed DTLS handshake). There are significant security issues in mixing protected and unprotected data; therefore, UDP connections on a port designated by a given server for DNS over DTLS are reserved purely for encrypted communications.",
      "ja": "DNSクライアントとサーバは、クリアテキストのDNSメッセージを転送するためにポート853を使用してはなりません。 DNSクライアントが送ってはいけませんし、DNSサーバは、（失敗したDTLS握手した後、例えば、含む）DTLS上でDNSのために使用されるすべてのポートでDNSメッセージをクリアテキストに応じてはいけません。保護され、保護されていないデータの混合で重大なセキュリティ問題があります。そのため、DTLSを超えるDNSのための特定のサーバーが指定したポート上のUDP接続は、暗号化通信のために純粋に予約されています。"
    },
    {
      "indent": 0,
      "text": "3.2. DTLS Handshake and Authentication",
      "section_title": true,
      "ja": "3.2。 DTLSハンドシェイクと認証"
    },
    {
      "indent": 3,
      "text": "The DNS client initiates the DTLS handshake as described in [RFC6347], following the best practices specified in [RFC7525]. After DTLS negotiation completes, if the DTLS handshake succeeds according to [RFC6347], the connection will be encrypted and would then be protected from eavesdropping.",
      "ja": "[RFC6347]で説明したようにDNSクライアントは[RFC7525]で指定されたベスト・プラクティス以下、DTLSハンドシェイクを開始します。 DTLSネゴシエーションが完了した後DTLSハンドシェークが[RFC6347]による成功した場合、接続は暗号化され、その後、盗聴から保護されるだろう。"
    },
    {
      "indent": 3,
      "text": "DNS privacy requires encrypting the query (and response) from passive attacks. Such encryption typically provides integrity protection as a side effect, which means on-path attackers cannot simply inject bogus DNS responses. However, to provide stronger protection from active attackers pretending to be the server, the server itself needs to be authenticated. To authenticate the server providing DNS privacy, DNS client MUST use the authentication mechanisms discussed in [DTLS]. This document does not propose new ideas for authentication.",
      "ja": "DNSのプライバシーは受動的攻撃からのクエリー（とレスポンス）を暗号化することが必要です。このような暗号化は、一般的に、パス攻撃者が簡単に偽のDNS応答を注入することはできませんを意味し、副作用として完全性保護を提供します。ただし、サーバーになりすまして、アクティブ攻撃者からの強力な保護を提供するために、サーバ自体が認証する必要があります。 DNSのプライバシーを提供するサーバを認証するには、DNSクライアントは、[DTLS]で説明した認証メカニズムを使用しなければなりません。この文書は、認証のための新しいアイデアを提案していません。"
    },
    {
      "indent": 0,
      "text": "3.3. Established Sessions",
      "section_title": true,
      "ja": "3.3。確立されたセッション"
    },
    {
      "indent": 3,
      "text": "In DTLS, all data is protected using the same record encoding and mechanisms. When the mechanism described in this document is in effect, DNS messages are encrypted using the standard DTLS record encoding. When a DTLS user wishes to send a DNS message, the data is delivered to the DTLS implementation as an ordinary application data write (e.g., SSL_write()). A single DTLS session can be used to send multiple DNS requests and receive multiple DNS responses.",
      "ja": "DTLSでは、すべてのデータが同じレコード符号化および機構を使用して保護されています。この文書で説明するメカニズムが有効になっている場合は、DNSメッセージが標準DTLSレコードエンコーディングを使用して暗号化されています。 DTLSユーザがDNSメッセージを送信したい場合、データは、通常のアプリケーションデータ書き込みとしてDTLS実装に送達される（例えば、SSL_write（））。単一DTLSセッションは、複数のDNS要求を送信し、複数のDNS応答を受信するために使用することができます。"
    },
    {
      "indent": 3,
      "text": "To mitigate the risk of unintentional server overload, DNS over DTLS clients MUST take care to minimize the number of concurrent DTLS sessions made to any individual server. For any given client/server interaction, it is RECOMMENDED that there be no more than one DTLS session. Similarly, servers MAY impose limits on the number of concurrent DTLS sessions being handled for any particular client IP address or subnet. These limits SHOULD be much looser than the client guidelines above because the server does not know, for example, if a client IP address belongs to a single client, is representing multiple resolvers on a single machine, or is representing multiple clients behind a device performing Network Address Translation (NAT).",
      "ja": "意図しないサーバーの過負荷のリスクを軽減するために、DTLSクライアント以上のDNSは、個々のサーバーに対して行われた同時DTLSセッションの数を最小限に抑えるように注意しなければなりません。任意のクライアント/サーバの対話のためには、1以下のDTLSセッションが存在しないことが推奨されます。同様に、サーバは、いかなる特定のクライアントのIPアドレスやサブネットのために処理される同時DTLSセッションの数に制限を課すことができます。サーバがクライアントのIPアドレスは、単一のクライアントに属している場合、例えば、単一のマシン上で複数のレゾルバを表している、またはデバイスのパフォーマンスの背後にある複数のクライアントを表している知っていないため、これらの制限は、上記のクライアントのガイドラインよりもはるかに緩いであるべきですネットワークアドレス変換（NAT）。"
    },
    {
      "indent": 3,
      "text": "In between normal DNS traffic, while the communication to the DNS server is quiescent, the DNS client MAY want to probe the server using DTLS heartbeat [RFC6520] to ensure it has maintained cryptographic state. Such probes can also keep alive firewall or NAT bindings. This probing reduces the frequency of needing a new handshake when a DNS query needs to be resolved, improving the user experience at the cost of bandwidth and processing time.",
      "ja": "DNSサーバへの通信が静止している間、通常のDNSトラフィックの間では、DNSクライアントは、暗号化状態を維持していることを確認するためにDTLSハートビート[RFC6520]を使用してサーバをプローブすることができます。このようなプローブはまた、生きているファイアウォールやNATバインディングを維持することができます。このプロービングは、DNSクエリを解決する必要があるとき、新しいハンドシェイクを必要とする帯域幅と処理時間のコストでユーザー体験を改善する頻度を低減します。"
    },
    {
      "indent": 3,
      "text": "A DTLS session is terminated by the receipt of an authenticated message that closes the connection (e.g., a DTLS fatal alert). If the server has lost state, a DTLS handshake needs to be initiated with the server. For the server, to mitigate the risk of unintentional server overload, it is RECOMMENDED that the default DNS over DTLS server application-level idle time be set to several seconds and not set to less than a second, but no particular value is specified. When no DNS queries have been received from the client after idle timeout, the server MUST send a DTLS fatal alert and then destroy its DTLS state. The DTLS fatal alert packet indicates the server has destroyed its state, signaling to the client that if it wants to send a new DTLS message, it will need to re-establish cryptographic context with the server (via full DTLS handshake or DTLS session resumption). In practice, the idle period can vary dynamically, and servers MAY allow idle connections to remain open for longer periods as resources permit.",
      "ja": "DTLSセッションは接続（例えば、DTLS致命的な警告）を閉じ、認証されたメッセージの受信によって終了されます。サーバが状態を失った場合は、DTLSハンドシェイクは、サーバーで開始する必要があります。サーバーの場合、意図しないサーバの過負荷のリスクを軽減するために、DTLSサーバ・アプリケーション・レベルのアイドル時間をかけて、デフォルトのDNSが数秒に設定し、秒未満に設定されていないが、特に値が指定されていないことを推奨しています。何のDNSクエリがアイドルタイムアウト後にクライアントから受信されていない場合は、サーバーは、DTLS致命的なアラートを送信し、そのDTLS状態を破棄しなければなりません。 DTLS致命的なアラートのパケットは、サーバが新しいDTLSメッセージを送信したい場合、それは（フルDTLS握手やDTLSセッション再開を経由して）サーバと暗号コンテキストを再確立する必要があることをクライアントにシグナリングを、その状態を破壊したことを示します。実際には、アイドル期間を動的に変えることができ、およびサーバがアイドル状態の接続は、リソースの許す限り長い期間のために開いたまますることを可能にします。"
    },
    {
      "indent": 0,
      "text": "4. Performance Considerations",
      "section_title": true,
      "ja": "4.パフォーマンスの考慮事項"
    },
    {
      "indent": 3,
      "text": "The DTLS protocol profile for DNS over DTLS is discussed in Section 11 of [DTLS]. To reduce the number of octets of the DTLS handshake, especially the size of the certificate in the ServerHello (which can be several kilobytes), DNS clients and servers can use raw public keys [RFC7250] or Cached Information Extension [RFC7924]. Cached Information Extension avoids transmitting the server's certificate and certificate chain if the client has cached that information from a previous TLS handshake. TLS False Start [RFC7918] can reduce round trips by allowing the TLS second flight of messages (ChangeCipherSpec) to also contain the (encrypted) DNS query.",
      "ja": "DTLS上DNS用DTLSプロトコルプロファイルは[DTLS]のセクション11に記載されています。 （数キロバイトことができる）のServerHelloでDTLSハンドシェークのオクテット数、証明書の特にサイズを小さくするために、DNSクライアントとサーバは、生の公開鍵[RFC7250]またはキャッシュされた情報拡張[RFC7924]を使用することができます。クライアントは、以前のTLSハンドシェイクからその情報をキャッシュしている場合はキャッシュされた情報拡張は、サーバーの証明書と証明書チェーンを送信することを回避します。 TLS不正スタート[RFC7918]も（暗号化）DNSクエリーを格納するためのメッセージ（ChangeCipherSpecを）のTLS秒の飛行を可能にすることにより、ラウンドトリップを減らすことができます。"
    },
    {
      "indent": 3,
      "text": "It is highly advantageous to avoid server-side DTLS state and reduce the number of new DTLS sessions on the server that can be done with TLS Session Resumption without server state [RFC5077]. This also eliminates a round trip for subsequent DNS over DTLS queries, because with [RFC5077] the DTLS session does not need to be re-established.",
      "ja": "サーバー側のDTLS状態を回避し、サーバの状態[RFC5077]なしTLSセッション再開で行うことができ、サーバー上で新しいDTLSセッションの数を減らすために非常に有利です。 [RFC5077]でDTLSセッションを再確立する必要はありませんので、これはまた、DTLSクエリの上に、後続のDNSのラウンドトリップを排除します。"
    },
    {
      "indent": 3,
      "text": "Since responses within a DTLS session can arrive out of order, clients MUST match responses to outstanding queries on the same DTLS connection using the DNS Message ID. If the response contains a question section, the client MUST match the QNAME, QCLASS, and QTYPE fields. Failure by clients to properly match responses to outstanding queries can have serious consequences for interoperability (Section 7 of [RFC7766]).",
      "ja": "DTLSセッション内応答は順不同で到着することができますので、クライアントはDNSメッセージIDを使用して、同じDTLS接続で未処理のクエリーに対する応答と一致しなければなりません。応答は、質問セクションが含まれている場合、クライアントはQNAME、QCLASSとQTYPEフィールドと一致しなければなりません。適切に未処理のクエリーに対する応答を一致させるためにクライアントによる失敗は、相互運用性（[RFC7766]のセクション7）に深刻な影響を持つことができます。"
    },
    {
      "indent": 0,
      "text": "5. Path MTU (PMTU) Issues",
      "section_title": true,
      "ja": "5.パスMTU（PMTU）の問題"
    },
    {
      "indent": 3,
      "text": "Compared to normal DNS, DTLS adds at least 13 octets of header, plus cipher and authentication overhead to every query and every response. This reduces the size of the DNS payload that can be carried. The DNS client and server MUST support the Extension Mechanisms for DNS (EDNS0) option defined in [RFC6891] so that the DNS client can indicate to the DNS server the maximum DNS response size it can reassemble and deliver in the DNS client's network stack. If the DNS client does set the EDNS0 option defined in [RFC6891], then the maximum DNS response size of 512 bytes plus DTLS overhead will be well within the Path MTU. If the Path MTU is not known, an IP MTU of 1280 bytes SHOULD be assumed. The client sets its EDNS0 value as if DTLS is not being used. The DNS server MUST ensure that the DNS response size does not exceed the Path MTU, i.e., each DTLS record MUST fit within a single datagram, as required by [RFC6347]. The DNS server must consider the amount of record expansion expected by the DTLS processing when calculating the size of DNS response that fits within the path MTU. The Path MTU MUST be greater than or equal to the DNS response size + DTLS overhead of 13 octets + padding size ([RFC7830]) + authentication overhead of the negotiated DTLS cipher suite + block padding (Section 4.1.1.1 of [RFC6347]). If the DNS server's response were to exceed that calculated value, the server MUST send a response that does fit within that value and sets the TC (truncated) bit. Upon receiving a response with the TC bit set and wanting to receive the entire response, the client behavior is governed by the current Usage Profile [DTLS]. For Strict Privacy, the client MUST only send a new DNS request for the same resource record over an encrypted transport (e.g., DNS over TLS [RFC7858]). Clients using Opportunistic Privacy SHOULD try for the best case (an encrypted and authenticated transport) but MAY fall back to intermediate cases and eventually the worst case scenario (clear text) in order to obtain a response.",
      "ja": "通常DNSに比べ、DTLSは、すべてのクエリとすべての応答に少なくとも13ヘッダのオクテットプラス暗号化および認証オーバーヘッドを付加します。これは、行うことができるDNSペイロードのサイズが小さくなります。 DNSクライアントとサーバーは、DNSクライアントがDNSクライアントのネットワークスタックに再組み立てし、提供することができますDNSサーバーの最大DNS応答の大きさに知らせることができるように、[RFC6891]で定義されたDNS（EDNS0）オプションの拡張メカニズムをサポートしなければなりません。 DNSクライアントが[RFC6891]で定義されたEDNS0オプションを設定しない場合は、最大512バイトのDNS応答サイズプラスDTLSオーバーヘッドは、Path MTUの範囲内であろう。パスMTUが知られていない場合は、1280バイトのIP MTUが想定されるべきである（SHOULD）。 DTLSが使用されていないかのように、クライアントはそのEDNS0値を設定します。 [RFC6347]で必要に応じてDNSサーバがDNS応答サイズがパスMTUを超えないようにする必要があり、すなわち、各DTLSレコードは、単一のデータグラム内に適合しなければなりません。 DNSサーバは、パスMTU内に収まるDNS応答のサイズを計算するときにDTLS処理によって期待されるレコード膨張量を考慮する必要があります。 MTUよりも大きいかまたはDNS応答サイズ+ 13個のオクテット+パディングサイズ（[RFC7830]）+ネゴシエートDTLS暗号スイート+ブロックパディング（[RFC6347]のセクション4.1.1.1）の認証オーバーヘッドのDTLSオーバーヘッドに等しくなければならないパス。 DNSサーバーの応答がその計算された値を超えた場合、サーバーはその値内に収まるとTC（切り捨て）ビットをセットしない応答を送らなければなりません。 TCビットセットで応答を受信し、全体の応答を受信したい時、クライアントの動作は、現在の使用プロファイル[DTLS]によって支配されます。厳格なプライバシーのために、クライアントは暗号化されたトランスポート（例えば、TLSを超えるDNS [RFC7858]）上で同じリソースレコードのための新しいDNS要求を送らなければなりません。日和見プライバシーを使用しているクライアントは、最良の場合（暗号化および認証されたトランスポート）に努めるべきであるが、応答を得るために戻って、中間ケースに該当し、最終的には最悪のシナリオ（クリアテキスト）するかもしれません。"
    },
    {
      "indent": 0,
      "text": "6. Anycast",
      "section_title": true,
      "ja": "6.エニーキャスト"
    },
    {
      "indent": 3,
      "text": "DNS servers are often configured with anycast addresses. While the network is stable, packets transmitted from a particular source to an anycast address will reach the same server that has the cryptographic context from the DNS over DTLS handshake. But, when the network configuration or routing changes, a DNS over DTLS packet can be received by a server that does not have the necessary cryptographic context. Clients using DNS over DTLS need to always be prepared to re-initiate the DTLS handshake, and in the worst case this could even happen immediately after re-initiating a new handshake. To encourage the client to initiate a new DTLS handshake, DNS servers SHOULD generate a DTLS fatal alert message in response to receiving a DTLS packet for which the server does not have any cryptographic context. Upon receipt of an unauthenticated DTLS fatal alert, the DTLS client validates the fatal alert is within the replay window (Section 4.1.2.6 of [RFC6347]). It is difficult for the DTLS client to validate that the DTLS fatal alert was generated by the DTLS server in response to a request or was generated by an on- or off-path attacker. Thus, upon receipt of an in-window DTLS fatal alert, the client SHOULD continue retransmitting the DTLS packet (in the event the fatal alert was spoofed), and at the same time it SHOULD initiate DTLS session resumption. When the DTLS client receives an authenticated DNS response from one of those DTLS sessions, the other DTLS session should be terminated.",
      "ja": "DNSサーバは、多くの場合、エニーキャストアドレスを使用して構成されています。ネットワークが安定しているが、エニーキャストアドレスに特定のソースから送信されたパケットはDTLSハンドシェーク上DNSから暗号コンテキストが同じサーバに到達します。しかし、時にネットワーク構成やルーティングの変更、DTLSパケットを超えるDNSは必要な暗号コンテキストを持っていないサーバが受信することができます。 DTLS上でDNSを使用しているクライアントは、常にDTLSハンドシェイクを再起動するために準備する必要があり、最悪の場合には、これはさえ新しいハンドシェイクを再起動した直後に発生する可能性があります。新しいDTLSハンドシェイクを開始するためにクライアントを促進するために、DNSサーバは、サーバが暗号コンテキストを持たないためにDTLSパケットを受信することに応答してDTLS致命的な警告メッセージを生成する必要があります。認証されていないDTLS致命的な警告を受信すると、DTLSクライアントは、致命的なアラートがリプレイウィンドウ（[RFC6347]のセクション4.1.2.6）内にある検証します。 DTLSクライアントは、DTLS致命的なアラートが要求に応じてDTLSサーバによって生成されたか、オンまたはオフパス攻撃者によって生成されたことを検証することは困難です。このように、イン・ウィンドウの受信時に致命的なアラートをDTLS、（致命的なアラートが偽装された場合）DTLSパケットを再送続けるべきであり、同時にそれはDTLSにセッションの再開を開始すべきクライアント。 DTLSクライアントは、これらのDTLSセッションの1から認証されたDNS応答を受信すると、他のDTLSセッションは終了しなければなりません。"
    },
    {
      "indent": 0,
      "text": "7. Usage",
      "section_title": true,
      "ja": "7.使い方"
    },
    {
      "indent": 3,
      "text": "Two Usage Profiles, Strict and Opportunistic, are explained in [DTLS]. The order of preference for DNS usage is as follows:",
      "ja": "厳格かつ日和見2つの使用プロファイルは、[DTLS]で説明されています。次のようにDNSの使用優先順位は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "1. Encrypted DNS messages with an authenticated server",
      "section_title": true,
      "ja": "認証されたサーバとの1.暗号化されたDNSメッセージ"
    },
    {
      "indent": 3,
      "text": "2. Encrypted DNS messages with an unauthenticated server",
      "section_title": true,
      "ja": "認証されていないサーバーとの2暗号化されたDNSメッセージ"
    },
    {
      "indent": 3,
      "text": "3. Plaintext DNS messages",
      "section_title": true,
      "ja": "3.プレーンテキストのDNSメッセージ"
    },
    {
      "indent": 0,
      "text": "8. IANA Considerations",
      "section_title": true,
      "ja": "8. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "This specification uses port 853 already allocated in the IANA port number registry as defined in Section 6 of [RFC7858].",
      "ja": "[RFC7858]のセクション6で定義されるように、この仕様は、すでにIANAポート番号レジストリに割り当てられたポート853を使用します。"
    },
    {
      "indent": 0,
      "text": "9. Security Considerations",
      "section_title": true,
      "ja": "9.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "The interaction between a DNS client and a DNS server requires Datagram Transport Layer Security (DTLS) with a ciphersuite offering confidentiality protection. The guidance given in [RFC7525] MUST be followed to avoid attacks on DTLS. The DNS client SHOULD use the TLS Certificate Status Request extension (Section 8 of [RFC6066]), commonly called \"OCSP stapling\" to check the revocation status of the public key certificate of the DNS server. OCSP stapling, unlike OCSP [RFC6960], does not suffer from scale and privacy issues. DNS clients keeping track of servers known to support DTLS enables clients to detect downgrade attacks. To interfere with DNS over DTLS, an on- or off-path attacker might send an ICMP message towards the DTLS client or DTLS server. As these ICMP messages cannot be authenticated, all ICMP errors should be treated as soft errors [RFC1122]. If the DNS query was sent over DTLS, then the corresponding DNS response MUST only be accepted if it is received over the same DTLS connection. This behavior mitigates all possible attacks described in Measures for Making DNS More Resilient against Forged Answers [RFC5452]. The security considerations in [RFC6347] and [DTLS] are to be taken into account.",
      "ja": "DNSクライアントとDNSサーバー間の相互作用は、機密性保護を提供する暗号スイートとデータグラムトランスポート層セキュリティ（DTLS）が必要です。 [RFC7525]で与えられたガイダンスは、DTLSへの攻撃を避けるために従わなければなりません。 DNSクライアントは、一般的にDNSサーバの公開鍵証明書の失効ステータスを確認するには、「OCSP綴じ」と呼ばれるTLS証明書ステータス要求拡張（[RFC6066]のセクション8）を使用する必要があります。 OCSPのステープルは、OCSP [RFC6960]とは異なり、規模やプライバシーの問題に悩まされません。 DNSクライアントは、DTLSはダウングレード攻撃を検出するためにクライアントを可能にサポートするために、既知のサーバーを追跡します。 DTLS以上のDNSに干渉するために、オンまたはオフパス攻撃者は、DTLSクライアントまたはDTLSサーバに向けてICMPメッセージを送信することがあります。これらのICMPメッセージを認証することができないように、すべてのICMPエラーはソフトエラー[RFC1122]として扱われるべきです。 DNSクエリがDTLSを介して送信された場合、それは同じDTLS接続を介して受信された場合、それに対応するDNS応答のみが受け入れられなければなりません。この動作は、鍛造回答[RFC5452]に対するDNSは、より弾力性を作るための施策に記載されているすべての攻撃の可能性を軽減します。 [RFC6347]と[DTLS]におけるセキュリティの考慮事項を考慮に入れるべきです。"
    },
    {
      "indent": 3,
      "text": "A malicious client might attempt to perform a high number of DTLS handshakes with a server. As the clients are not uniquely identified by the protocol and can be obfuscated with IPv4 address sharing and with IPv6 temporary addresses, a server needs to mitigate the impact of such an attack. Such mitigation might involve rate limiting handshakes from a certain subnet or more advanced DoS/DDoS techniques beyond the scope of this document.",
      "ja": "悪意のあるクライアントがサーバとDTLSハンドシェークの高い数を実行しようとするかもしれません。クライアントを一意プロトコルによって識別されないとIPv4アドレスを共有しておよびIPv6一時アドレスを難読化することができるように、サーバは、このような攻撃の影響を緩和する必要があります。このような緩和は、この文書の範囲を超えて、特定のサブネットまたはより高度のDoS / DDoS攻撃手法からのレート制限握手を伴うかもしれません。"
    },
    {
      "indent": 0,
      "text": "10. References",
      "section_title": true,
      "ja": "10.参考文献"
    },
    {
      "indent": 0,
      "text": "10.1. Normative References",
      "section_title": true,
      "ja": "10.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC1034] Mockapetris, P., \"Domain names - concepts and facilities\", STD 13, RFC 1034, DOI 10.17487/RFC1034, November 1987, <http://www.rfc-editor.org/info/rfc1034>.",
      "ja": "[RFC1034] Mockapetris、P.、 \"ドメイン名 - 概念と設備\"、STD 13、RFC 1034、DOI 10.17487 / RFC1034、1987年11月、<http://www.rfc-editor.org/info/rfc1034>。"
    },
    {
      "indent": 3,
      "text": "[RFC1035] Mockapetris, P., \"Domain names - implementation and specification\", STD 13, RFC 1035, DOI 10.17487/RFC1035, November 1987, <http://www.rfc-editor.org/info/rfc1035>.",
      "ja": "[RFC1035] Mockapetris、P.、 \"ドメイン名 - 実装及び仕様\"、STD 13、RFC 1035、DOI 10.17487 / RFC1035、1987年11月、<http://www.rfc-editor.org/info/rfc1035>。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <http://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<http://www.rfc-editor.org/info/ RFC2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC4033] Arends, R., Austein, R., Larson, M., Massey, D., and S. Rose, \"DNS Security Introduction and Requirements\", RFC 4033, DOI 10.17487/RFC4033, March 2005, <http://www.rfc-editor.org/info/rfc4033>.",
      "ja": "[RFC4033]アレンズ、R.、Austeinと、R.、ラーソン、M.、マッシー、D.、およびS.ローズ、 \"DNSセキュリティ序論と要件\"、RFC 4033、DOI 10.17487 / RFC4033、2005年3月、<のhttp： //www.rfc-editor.org/info/rfc4033>。"
    },
    {
      "indent": 3,
      "text": "[RFC5077] Salowey, J., Zhou, H., Eronen, P., and H. Tschofenig, \"Transport Layer Security (TLS) Session Resumption without Server-Side State\", RFC 5077, DOI 10.17487/RFC5077, January 2008, <http://www.rfc-editor.org/info/rfc5077>.",
      "ja": "[RFC5077] Salowey、J.、周、H.、Eronen、P.、およびH. Tschofenig、 \"トランスポート層セキュリティ（TLS）セッション再開サーバ側の状態なし\"、RFC 5077、DOI 10.17487 / RFC5077、2008年1月、 <http://www.rfc-editor.org/info/rfc5077>。"
    },
    {
      "indent": 3,
      "text": "[RFC5452] Hubert, A. and R. van Mook, \"Measures for Making DNS More Resilient against Forged Answers\", RFC 5452, DOI 10.17487/RFC5452, January 2009, <http://www.rfc-editor.org/info/rfc5452>.",
      "ja": "[RFC5452]ヒューバート、A.とR.バンムック、 \"鍛造回答に対してより弾力性DNSを作るための措置\"、RFC 5452、DOI 10.17487 / RFC5452、2009年1月、<http://www.rfc-editor.org/info / rfc5452>。"
    },
    {
      "indent": 3,
      "text": "[RFC6347] Rescorla, E. and N. Modadugu, \"Datagram Transport Layer Security Version 1.2\", RFC 6347, DOI 10.17487/RFC6347, January 2012, <http://www.rfc-editor.org/info/rfc6347>.",
      "ja": "[RFC6347]レスコラ、E.およびN. Modadugu、 \"データグラムトランスポート層セキュリティバージョン1.2\"、RFC 6347、DOI 10.17487 / RFC6347、2012年1月、<http://www.rfc-editor.org/info/rfc6347>。"
    },
    {
      "indent": 3,
      "text": "[RFC6520] Seggelmann, R., Tuexen, M., and M. Williams, \"Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS) Heartbeat Extension\", RFC 6520, DOI 10.17487/RFC6520, February 2012, <http://www.rfc-editor.org/info/rfc6520>.",
      "ja": "[RFC6520] Seggelmann、R.、Tuexen、M.、およびM.ウィリアムズ、 \"トランスポート層セキュリティ（TLS）およびデータグラムトランスポート層セキュリティ（DTLS）ハートビート拡張\"、RFC 6520、DOI 10.17487 / RFC6520、2012年2月、<HTTP ：//www.rfc-editor.org/info/rfc6520>。"
    },
    {
      "indent": 3,
      "text": "[RFC6891] Damas, J., Graff, M., and P. Vixie, \"Extension Mechanisms for DNS (EDNS(0))\", STD 75, RFC 6891, DOI 10.17487/RFC6891, April 2013, <http://www.rfc-editor.org/info/rfc6891>.",
      "ja": "[RFC6891]ダマ、J.、Graffの、M.、およびP.いるVixie、 \"DNS用拡張メカニズム（EDNS（0））\"、STD 75、RFC 6891、DOI 10.17487 / RFC6891、2013年4月、<HTTP：// www.rfc-editor.org/info/rfc6891>。"
    },
    {
      "indent": 3,
      "text": "[RFC7525] Sheffer, Y., Holz, R., and P. Saint-Andre, \"Recommendations for Secure Use of Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)\", BCP 195, RFC 7525, DOI 10.17487/RFC7525, May 2015, <http://www.rfc-editor.org/info/rfc7525>.",
      "ja": "[RFC7525]シェファー、Y.、ホルツ、R.、およびP.サンアンドレ、 \"トランスポート層セキュリティ（TLS）およびデータグラムトランスポート層セキュリティ（DTLS）のセキュアな利用のための提言\"、BCP 195、RFC 7525、DOI 10.17487 / RFC7525、2015年5月、<http://www.rfc-editor.org/info/rfc7525>。"
    },
    {
      "indent": 3,
      "text": "[RFC7830] Mayrhofer, A., \"The EDNS(0) Padding Option\", RFC 7830, DOI 10.17487/RFC7830, May 2016, <http://www.rfc-editor.org/info/rfc7830>.",
      "ja": "[RFC7830] Mayrhofer、A.、 \"EDNS（0）パディングオプション\"、RFC 7830、DOI 10.17487 / RFC7830、2016年5月、<http://www.rfc-editor.org/info/rfc7830>。"
    },
    {
      "indent": 0,
      "text": "10.2. Informative References",
      "section_title": true,
      "ja": "10.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[DTLS] Dickinson, S., Gillmor, D., and T. Reddy, \"Authentication and (D)TLS Profile for DNS-over-(D)TLS\", Work in Progress, draft-ietf-dprive-dtls-and-tls-profiles-08, January 2017.",
      "ja": "、進行中で働いて、[DTLS]ディッキンソン、S.、Gillmor氏、D.、およびT.レディ、 \"DNS-オーバー（D）TLSの認証及び（D）TLSプロファイル\" ドラフトIETF-dprive-DTLS、および-tls-プロファイル-08、2017年1月。"
    },
    {
      "indent": 3,
      "text": "[DTLS13] Rescorla, E. and H. Tschofenig, \"The Datagram Transport Layer Security (DTLS) Protocol Version 1.3\", Work in Progress, draft-rescorla-tls-dtls13-00, October 2016.",
      "ja": "[DTLS13]レスコラ、E.およびH. Tschofenig、 \"データグラムトランスポート層セキュリティ（DTLS）プロトコルバージョン1.3\"、進捗状況、ドラフトレスコラ-TLS-dtls13-00、2016年10月での作業。"
    },
    {
      "indent": 3,
      "text": "[RFC1122] Braden, R., Ed., \"Requirements for Internet Hosts - Communication Layers\", STD 3, RFC 1122, DOI 10.17487/RFC1122, October 1989, <http://www.rfc-editor.org/info/rfc1122>.",
      "ja": "[RFC1122]ブレーデン、R.、エド、 \"インターネットホストのための要件 - 通信層\"。、STD 3、RFC 1122、DOI 10.17487 / RFC1122、1989年10月、<http://www.rfc-editor.org/info/ RFC1122>。"
    },
    {
      "indent": 3,
      "text": "[RFC6066] Eastlake 3rd, D., \"Transport Layer Security (TLS) Extensions: Extension Definitions\", RFC 6066, DOI 10.17487/RFC6066, January 2011, <http://www.rfc-editor.org/info/rfc6066>.",
      "ja": "[RFC6066]イーストレイク3日、D.、 \"トランスポート層セキュリティ（TLS）拡張機能：拡張定義\"、RFC 6066、DOI 10.17487 / RFC6066、2011年1月、<http://www.rfc-editor.org/info/rfc6066> 。"
    },
    {
      "indent": 3,
      "text": "[RFC6335] Cotton, M., Eggert, L., Touch, J., Westerlund, M., and S. Cheshire, \"Internet Assigned Numbers Authority (IANA) Procedures for the Management of the Service Name and Transport Protocol Port Number Registry\", BCP 165, RFC 6335, DOI 10.17487/RFC6335, August 2011, <http://www.rfc-editor.org/info/rfc6335>.",
      "ja": "[RFC6335]コットン、M.、エッゲルト、L.、タッチ、J.、ウェスター、M.、およびS.チェシャー、「IANA（Internet Assigned Numbers Authority）のサービス名とトランスポートプロトコルポート番号レジストリの管理のための手順」、BCP 165、RFC 6335、DOI 10.17487 / RFC6335、2011年8月、<http://www.rfc-editor.org/info/rfc6335>。"
    },
    {
      "indent": 3,
      "text": "[RFC6960] Santesson, S., Myers, M., Ankney, R., Malpani, A., Galperin, S., and C. Adams, \"X.509 Internet Public Key Infrastructure Online Certificate Status Protocol - OCSP\", RFC 6960, DOI 10.17487/RFC6960, June 2013, <http://www.rfc-editor.org/info/rfc6960>.",
      "ja": "[RFC6960] Santesson、S.、マイヤーズ、M.、Ankney、R.、Malpani、A.、Galperin、S.、およびC.アダムス、 \"X.509のインターネット公開鍵暗号基盤のオンライン証明書状態プロトコル -  OCSP\"、RFC 6960、DOI 10.17487 / RFC6960、2013年6月、<http://www.rfc-editor.org/info/rfc6960>。"
    },
    {
      "indent": 3,
      "text": "[RFC7250] Wouters, P., Ed., Tschofenig, H., Ed., Gilmore, J., Weiler, S., and T. Kivinen, \"Using Raw Public Keys in Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)\", RFC 7250, DOI 10.17487/RFC7250, June 2014, <http://www.rfc-editor.org/info/rfc7250>.",
      "ja": "[RFC7250] WOUTERS、P.、エド。、Tschofenig、H.、エド。、ギルモア、J.、ワイラー、S.、およびT. Kivinen、「生の公共トランスポート層セキュリティにおけるキー（TLS）を使用し、データグラムトランスポート層セキュリティ（DTLS）」、RFC 7250、DOI 10.17487 / RFC7250、2014年6月、<http://www.rfc-editor.org/info/rfc7250>。"
    },
    {
      "indent": 3,
      "text": "[RFC7413] Cheng, Y., Chu, J., Radhakrishnan, S., and A. Jain, \"TCP Fast Open\", RFC 7413, DOI 10.17487/RFC7413, December 2014, <http://www.rfc-editor.org/info/rfc7413>.",
      "ja": "[RFC7413]チェン、Y.、チュー、J.、ラダクリシュナン、S.、およびA.ジェイン、 \"TCP高速開く\"、RFC 7413、DOI 10.17487 / RFC7413、2014年12月、<HTTP：//www.rfc-editor .ORG /情報/ rfc7413>。"
    },
    {
      "indent": 3,
      "text": "[RFC7626] Bortzmeyer, S., \"DNS Privacy Considerations\", RFC 7626, DOI 10.17487/RFC7626, August 2015, <http://www.rfc-editor.org/info/rfc7626>.",
      "ja": "[RFC7626] Bortzmeyer、S.、 \"DNSのプライバシーに関する注意事項\"、RFC 7626、DOI 10.17487 / RFC7626、2015年8月、<http://www.rfc-editor.org/info/rfc7626>。"
    },
    {
      "indent": 3,
      "text": "[RFC7766] Dickinson, J., Dickinson, S., Bellis, R., Mankin, A., and D. Wessels, \"DNS Transport over TCP - Implementation Requirements\", RFC 7766, DOI 10.17487/RFC7766, March 2016, <http://www.rfc-editor.org/info/rfc7766>.",
      "ja": "[RFC7766]ディッキンソン、J.、ディッキンソン、S.、ベリス、R.、マンキン、A.、およびD.ウェッセルズ、 \"TCP上のDNSトランス - 実装要件\"、RFC 7766、DOI 10.17487 / RFC7766、2016年3月、< http://www.rfc-editor.org/info/rfc7766>。"
    },
    {
      "indent": 3,
      "text": "[RFC7858] Hu, Z., Zhu, L., Heidemann, J., Mankin, A., Wessels, D., and P. Hoffman, \"Specification for DNS over Transport Layer Security (TLS)\", RFC 7858, DOI 10.17487/RFC7858, May 2016, <http://www.rfc-editor.org/info/rfc7858>.",
      "ja": "[RFC7858]のHu、Z.、朱、L.、Heidemann、J.、マンキン、A.、ウェッセルズ、D.、およびP.ホフマン、 \"トランスポート層セキュリティ（TLS）上DNSの仕様\"、RFC 7858、DOI 10.17487 / RFC7858、2016年5月、<http://www.rfc-editor.org/info/rfc7858>。"
    },
    {
      "indent": 3,
      "text": "[RFC7918] Langley, A., Modadugu, N., and B. Moeller, \"Transport Layer Security (TLS) False Start\", RFC 7918, DOI 10.17487/RFC7918, August 2016, <http://www.rfc-editor.org/info/rfc7918>.",
      "ja": "[RFC7918]ラングレー、A.、Modadugu、N.、およびB.メラー、 \"トランスポート層セキュリティ（TLS）偽スタート\"、RFC 7918、DOI 10.17487 / RFC7918、2016年8月、<のhttp：//www.rfc-editor .ORG /情報/ rfc7918>。"
    },
    {
      "indent": 3,
      "text": "[RFC7924] Santesson, S. and H. Tschofenig, \"Transport Layer Security (TLS) Cached Information Extension\", RFC 7924, DOI 10.17487/RFC7924, July 2016, <http://www.rfc-editor.org/info/rfc7924>.",
      "ja": "[RFC7924] Santesson、S.およびH. Tschofenig、 \"トランスポート層セキュリティ（TLS）キャッシュされた情報拡張\"、RFC 7924、DOI 10.17487 / RFC7924、2016年7月、<http://www.rfc-editor.org/info/ rfc7924>。"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Thanks to Phil Hedrick for his review comments on TCP and to Josh Littlefield for pointing out DNS over DTLS load on busy servers (most notably root servers). The authors would like to thank Simon Josefsson, Daniel Kahn Gillmor, Bob Harold, Ilari Liusvaara, Sara Dickinson, Christian Huitema, Stephane Bortzmeyer, Alexander Mayrhofer, Allison Mankin, Jouni Korhonen, Stephen Farrell, Mirja Kuehlewind, Benoit Claise, and Geoff Huston for discussions and comments on the design of DNS over DTLS. The authors would like to give special thanks to Sara Dickinson for her help.",
      "ja": "忙しいサーバ（特にルートサーバ）にDTLS負荷の上にDNSを指摘してTCP上のジョシュ・リトルフィールドへの彼のレビューコメントのためのフィル・ヘドリックに感謝します。著者は、のためにサイモンJosefsson氏、ダニエル・カーンGillmor氏、ボブ・ハロルド、Ilari Liusvaara、サラ・ディキンソン、クリスチャンのHuitema、ステファンBortzmeyer、アレクサンダーMayrhofer、アリソンマンキン、Jouni Korhonen、スティーブン・ファレル、Mirja Kuehlewind、ブノワClaise、そしてジェフ・ヒューストンに感謝したいと思いますDTLSを超えるDNSの設計上の議論とコメント。著者は彼女の助けのためにサラ・ディキンソンに特別な感謝をしたいと思います。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Tirumaleswar Reddy Cisco Systems, Inc. Cessna Business Park, Varthur Hobli Sarjapur Marathalli Outer Ring Road Bangalore, Karnataka 560103 India",
      "ja": "Tirumaleswarレディシスコシステムズ、株式会社セスナビジネスパーク、Varthur HobliサリヤプールMarathalli外環状道路カルナータカ州バンガロール560103インド"
    },
    {
      "indent": 3,
      "text": "Email: tireddy@cisco.com",
      "ja": "メール：tireddy@cisco.com"
    },
    {
      "indent": 3,
      "text": "Dan Wing",
      "ja": "そしてウィング"
    },
    {
      "indent": 3,
      "text": "Email: dwing-ietf@fuggles.com",
      "ja": "メール：dwing-ietf@fuggles.com"
    },
    {
      "indent": 3,
      "text": "Prashanth Patil Cisco Systems, Inc.",
      "ja": "プラシャンスパティルシスコシステムズ株式会社"
    },
    {
      "indent": 3,
      "text": "Email: praspati@cisco.com",
      "ja": "メール：praspati@cisco.com"
    }
  ]
}