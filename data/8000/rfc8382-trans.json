{
  "title": {
    "text": "RFC 8382 - Shared Bottleneck Detection for Coupled Congestion Control for RTP Media",
    "ja": "RFC 8382 - RTPメディアのための結合輻輳制御のための共有ボトルネックの検出"
  },
  "number": 8382,
  "created_at": "2019-11-02 02:22:43.819286+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                     D. Hayes, Ed.\nRequest for Comments: 8382                                     S. Ferlin\nCategory: Experimental                        Simula Research Laboratory\nISSN: 2070-1721                                                 M. Welzl\n                                                               K. Hiorth\n                                                      University of Oslo\n                                                               June 2018",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Shared Bottleneck Detection for Coupled Congestion Control for RTP Media",
      "ja": "RTPメディアのための結合輻輳制御のための共有ボトルネックの検出"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document describes a mechanism to detect whether end-to-end data flows share a common bottleneck. This mechanism relies on summary statistics that are calculated based on continuous measurements and used as input to a grouping algorithm that runs wherever the knowledge is needed.",
      "ja": "この文書では、エンドツーエンドのデータフローは、共通のボトルネックを共有するかどうかを検出するためのメカニズムを説明しています。この機構は、連続的な測定に基づいて計算され、知識が必要とされる限り実行グループ化アルゴリズムへの入力として使用される要約統計量に依存しています。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for examination, experimental implementation, and evaluation.",
      "ja": "このドキュメントはインターネット標準化過程仕様ではありません。それは、検査、実験的な実装、および評価のために公開されています。"
    },
    {
      "indent": 3,
      "text": "This document defines an Experimental Protocol for the Internet community. This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Not all documents approved by the IESG are candidates for any level of Internet Standard; see Section 2 of RFC 7841.",
      "ja": "この文書は、インターネットコミュニティのためにExperimentalプロトコルを定義します。このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。 IESGによって承認されていないすべての文書はインターネットStandardのどんなレベルの候補です。 RFC 7841のセクション2を参照してください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc8382.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttps://www.rfc-editor.org/info/rfc8382で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2018 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2018 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（https://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................4\n   1.1. The Basic Mechanism ........................................4\n   1.2. The Signals ................................................4\n        1.2.1. Packet Loss .........................................4\n        1.2.2. Packet Delay ........................................5\n        1.2.3. Path Lag ............................................5\n2. Definitions .....................................................6\n   2.1. Parameters and Their Effects ...............................7\n   2.2. Recommended Parameter Values ...............................8\n3. Mechanism .......................................................9\n   3.1. SBD Feedback Requirements .................................10\n        3.1.1. Feedback When All the Logic Is Placed at\n               the Sender .........................................10\n        3.1.2. Feedback When the Statistics Are Calculated at the\n               Receiver and SBD Is Performed at the Sender ........11\n        3.1.3. Feedback When Bottlenecks Can Be Determined\n               at Both Senders and Receivers ......................11\n   3.2. Key Metrics and Their Calculation .........................12\n        3.2.1. Mean Delay .........................................12\n        3.2.2. Skewness Estimate ..................................12\n        3.2.3. Variability Estimate ...............................13\n        3.2.4. Oscillation Estimate ...............................13\n        3.2.5. Packet Loss ........................................14\n   3.3. Flow Grouping .............................................14\n        3.3.1. Flow-Grouping Algorithm ............................14\n        3.3.2. Using the Flow Group Signal ........................18\n4. Enhancements to the Basic SBD Algorithm ........................18\n   4.1. Reducing Lag and Improving Responsiveness .................18\n        4.1.1. Improving the Response of the Skewness Estimate ....19\n        4.1.2. Improving the Response of the Variability\n               Estimate ...........................................20\n   4.2. Removing Oscillation Noise ................................21\n5. Measuring OWD ..................................................21\n   5.1. Timestamp Resolution ......................................21\n   5.2. Clock Skew ................................................22\n6. Expected Feedback from Experiments .............................22\n7. IANA Considerations ............................................22\n8. Security Considerations ........................................22\n9. References .....................................................23\n   9.1. Normative References ......................................23\n   9.2. Informative References ....................................23\nAcknowledgments ...................................................25\nAuthors' Addresses ................................................25",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "In the Internet, it is not normally known whether flows (e.g., TCP connections or UDP data streams) traverse the same bottlenecks. Even flows that have the same sender and receiver may take different paths and may or may not share a bottleneck. Flows that share a bottleneck link usually compete with one another for their share of the capacity. This competition has the potential to increase packet loss and delays. This is especially relevant for interactive applications that communicate simultaneously with multiple peers (such as multi-party video). For RTP media applications such as RTCWEB, [RTP-COUPLED-CC] describes a scheme that combines the congestion controllers of flows in order to honor their priorities and avoid unnecessary packet loss as well as delay. This mechanism relies on some form of Shared Bottleneck Detection (SBD); here, a measurement-based SBD approach is described.",
      "ja": "インターネットでは、通常のフロー（例えば、TCP接続またはUDPデータストリーム）は同じボトルネックを通過するかどうかは不明です。同じ送信者と受信者であってもフローが異なる経路をとることができ、又はボトルネックを共有してもしなくてもよいです。ボトルネックリンクを共有するフローは通常、容量のシェアのために互いに競合します。この大会は、パケットロスや遅延を増加させる可能性があります。これは、（例えば、マルチパーティのビデオなど）は、複数のピアと同時に通信するインタラクティブなアプリケーションのために特に適切です。このようRTCWEB、[RTP結合-CC]としてRTPメディアアプリケーションの場合、その優先順位を尊重し、不必要なパケットロスや遅延を回避するために、フローの輻輳コントローラを組み合わせた方式が記載されています。この機構は、共有ボトルネック検出（SBD）の何らかの形式に依存しています。ここで、測定系SBDのアプローチが記載されています。"
    },
    {
      "indent": 0,
      "text": "1.1. The Basic Mechanism",
      "section_title": true,
      "ja": "1.1. 基本的なメカニズム"
    },
    {
      "indent": 3,
      "text": "The mechanism groups flows that have similar statistical characteristics together. Section 3.3.1 describes a simple method for achieving this; however, a major part of this document is concerned with collecting suitable statistics for this purpose.",
      "ja": "共に同様の統計的特性を有する機構群が流れます。 3.3.1は、これを達成するための簡単な方法を説明します。しかし、この文書の大部分は、この目的のために、適切な統計情報を収集に関するものです。"
    },
    {
      "indent": 0,
      "text": "1.2. The Signals",
      "section_title": true,
      "ja": "1.2. シグナル"
    },
    {
      "indent": 3,
      "text": "The current Internet is unable to explicitly inform endpoints as to which flows share bottlenecks, so endpoints need to infer this from whatever information is available to them. The mechanism described here currently utilizes packet loss and packet delay but is not restricted to these. As Explicit Congestion Notification (ECN) becomes more prevalent, it too will become a valuable base signal that can be correlated to detect shared bottlenecks.",
      "ja": "エンドポイントがそれらに利用可能であるどんな情報からこれを推測する必要があるので、現在のインターネットでは、共有のボトルネックをフローにどのよう明示的にエンドポイントに通知することができません。ここで説明するメカニズムは、現在、パケットロス、パケット遅延を利用しますが、これらに限定されるものではありません。明示的輻輳通知（ECN）がより一般的になるにつれて、それはあまりにも共有ボトルネックを検出するために相関させることができる貴重なベース信号となるであろう。"
    },
    {
      "indent": 0,
      "text": "1.2.1. Packet Loss",
      "section_title": true,
      "ja": "1.2.1. パケットロス"
    },
    {
      "indent": 3,
      "text": "Packet loss is often a relatively infrequent indication that a flow traverses a bottleneck. Therefore, on its own it is of limited use for SBD; however, it is a valuable supplementary measure when it is more prevalent (refer to [RFC7680], Section 2.5 for measuring packet loss).",
      "ja": "パケット損失は、多くの場合、流れがボトルネックを通過することは比較的まれな兆候です。そのため、自分自身でそれがSBDのための限られた用途です。それはより一般的である場合しかし、それは貴重な補助的尺度である（[RFC7680]、パケット損失を測定するためのセクション2.5を参照）。"
    },
    {
      "indent": 0,
      "text": "1.2.2. Packet Delay",
      "section_title": true,
      "ja": "1.2.2. パケット遅延"
    },
    {
      "indent": 3,
      "text": "End-to-end delay measurements include noise from every device along the path, in addition to the delay perturbation at the bottleneck device. The noise is often significantly increased if the round-trip time is used. The cleanest signal is obtained by using One-Way Delay (OWD) (refer to [RFC7679], Section 3 for a definition of OWD).",
      "ja": "エンドツーエンド遅延測定は、ボトルネック装置の遅延摂動に加えて、経路に沿ったすべてのデバイスからのノイズを含みます。往復時間が使用されている場合、ノイズは、多くの場合、大幅に増加しています。クリーンな信号が一方向遅延（OWD）を用いて得られる（[RFC7679]、OWDの定義についてはセクション3を参照）。"
    },
    {
      "indent": 3,
      "text": "Measuring absolute OWD is difficult, since it requires both the sender and receiver clocks to be synchronized. However, since the statistics being collected are relative to the mean OWD, a relative OWD measurement is sufficient. Clock skew is not usually significant over the time intervals used by this SBD mechanism (see [RFC6817], Appendix A.2 for a discussion on clock skew and OWD measurements). However, in circumstances where it is significant, Section 5.2 outlines a way of adjusting the calculations to cater to it.",
      "ja": "それは送信側と受信側のクロックの両方を同期させる必要があるため、絶対OWDを測定することは、困難です。収集される統計は、平均OWDに対して相対的であるので、相対的なOWD測定で十分です。クロックスキューは、（クロック・スキュー及びOWD測定に関する議論については、付録A.2、[RFC6817]を参照）、このSBD機構によって使用される時間間隔で通常重要ではありません。しかし、それは重要である状況では、5.2節では、それに応えるために計算を調整する方法を概説します。"
    },
    {
      "indent": 3,
      "text": "Each packet arriving at the bottleneck buffer may experience very different queue lengths and, therefore, different waiting times. A single OWD sample does not, therefore, characterize the path well. However, multiple OWD measurements do reflect the distribution of delays experienced at the bottleneck.",
      "ja": "ボトルネックのバッファに到着する各パケットは非常に異なるキューの長さを体験して、そのため、異なる待機時間があります。単一OWDのサンプルは、したがって、うまくパスを特徴づけるものではありません。しかし、複数のOWD測定がボトルネックで経験した遅延の分布を反映してください。"
    },
    {
      "indent": 0,
      "text": "1.2.3. Path Lag",
      "section_title": true,
      "ja": "1.2.3. パスの発見"
    },
    {
      "indent": 3,
      "text": "Flows that share a common bottleneck may traverse different paths, and these paths will often have different base delays. This makes it difficult to correlate changes in delay or loss. This technique uses the long-term shape of the delay distribution as a base for comparison to counter this.",
      "ja": "一般的なボトルネックを共有するフローが異なるパスを横断してもよいし、これらのパスは、多くの場合、異なるベース遅延を持つことになります。これは、それが困難な遅延や損失の変化を相関させることができます。この技術は、これに対抗するために、比較のためのベースとして遅延分布の長期的な形状を使用します。"
    },
    {
      "indent": 0,
      "text": "2. Definitions",
      "section_title": true,
      "ja": "2.定義"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.",
      "ja": "この文書のキーワード \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", および \"OPTIONAL\" はBCP 14 [RFC2119] [RFC8174]で説明されているように、すべて大文字の場合にのみ解釈されます。"
    },
    {
      "indent": 3,
      "text": "Acronyms used in this document:",
      "ja": "この文書で使用されている略語："
    },
    {
      "indent": 6,
      "text": "OWD - One-Way Delay",
      "ja": "OWD  - 片道遅延"
    },
    {
      "indent": 6,
      "text": "MAD - Mean Absolute Deviation",
      "ja": "MAD  - 平均絶対偏差"
    },
    {
      "indent": 6,
      "text": "SBD - Shared Bottleneck Detection",
      "ja": "SBD  - 共有ボトルネック検出"
    },
    {
      "indent": 3,
      "text": "Conventions used in this document:",
      "ja": "この文書で使用されている表記："
    },
    {
      "indent": 6,
      "text": "T the base time interval over which measurements are made",
      "ja": "測定が行われている上にT塩基の時間間隔"
    },
    {
      "indent": 6,
      "text": "N the number of base time, T, intervals used in some calculations",
      "ja": "N基準時刻の数、T、いくつかの計算に使用される間隔"
    },
    {
      "indent": 6,
      "text": "M the number of base time, T, intervals used in some calculations, where M <= N",
      "ja": "M基準時刻の数、T、いくつかの計算に使用される間隔、M <= N"
    },
    {
      "indent": 6,
      "text": "sum(...) summation of terms of the variable in parentheses",
      "ja": "括弧内の変数の項の和（...）合計"
    },
    {
      "indent": 6,
      "text": "sum_T(...) summation of all the measurements of the variable in parentheses taken over the interval T",
      "ja": "sum_T（...）時間間隔Tを引き継い括弧内の変数の全ての測定値の合計"
    },
    {
      "indent": 6,
      "text": "sum_NT(...) summation of all measurements taken over the interval N*T",
      "ja": "sum_NT（...）間隔で撮影された全ての測定値の合計N * T"
    },
    {
      "indent": 6,
      "text": "sum_MT(...) summation of all measurements taken over the interval M*T",
      "ja": "sum_MT（...）の間隔M * T引き継いすべての測定値の合計"
    },
    {
      "indent": 6,
      "text": "E_T(...) the expectation or mean of the measurements of the variable in parentheses over T",
      "ja": "E_T（...）T上括弧内の変数の測定値の期待値または平均"
    },
    {
      "indent": 6,
      "text": "E_N(...) the expectation or mean of the last N values of the variable in parentheses",
      "ja": "E_N（...）括弧内の変数の最後のN値の期待または平均"
    },
    {
      "indent": 6,
      "text": "E_M(...) the expectation or mean of the last M values of the variable in parentheses",
      "ja": "E_M（...）括弧内の変数の最後のM値の期待または平均"
    },
    {
      "indent": 6,
      "text": "num_T(...) the count of measurements of the variable in parentheses taken in the interval T",
      "ja": "num_T（...）間隔Tで撮影括弧内の変数の測定値のカウント"
    },
    {
      "indent": 6,
      "text": "num_MT(...) the count of measurements of the variable in parentheses taken in the interval M*T",
      "ja": "num_MT（...）の間隔M * Tで撮影した括弧内の変数の測定回数"
    },
    {
      "indent": 6,
      "text": "PB a boolean variable indicating that the particular flow was identified transiting a bottleneck in the previous interval T (i.e., \"Previously Bottleneck\")",
      "ja": "PB特定のフローが前の間隔Tのボトルネックを通過する同定されたことを示すブール変数（すなわち、「以前ボトルネック」）"
    },
    {
      "indent": 6,
      "text": "skew_est a measure of skewness in an OWD distribution",
      "ja": "OWD分布の歪度の尺度skew_est"
    },
    {
      "indent": 6,
      "text": "skew_base_T a variable used as an intermediate step in calculating skew_est",
      "ja": "skew_est計算における中間ステップとして使用される変数をskew_base_T"
    },
    {
      "indent": 6,
      "text": "var_est a measure of variability in OWD measurements",
      "ja": "OWD測定における変動の尺度var_est"
    },
    {
      "indent": 6,
      "text": "var_base_T a variable used as an intermediate step in calculating var_est",
      "ja": "var_base_T var_est計算における中間ステップとして使用される変数"
    },
    {
      "indent": 6,
      "text": "freq_est a measure of low-frequency oscillation in the OWD measurements",
      "ja": "OWD測定における低周波振動の尺度freq_est"
    },
    {
      "indent": 6,
      "text": "pkt_loss a measure of the proportion of packets lost",
      "ja": "失われたパケットの割合の尺度pkt_loss"
    },
    {
      "indent": 6,
      "text": "p_l, p_f, p_mad, c_s, c_h, p_s, p_d, p_v various thresholds used in the mechanism",
      "ja": "P_L、P_F、p_mad、C_S、C_H、P_S、p_d、p_v機構に用いられる種々の閾値"
    },
    {
      "indent": 6,
      "text": "M and F number of values related to N",
      "ja": "Nに関連する値のMとFナンバー"
    },
    {
      "indent": 0,
      "text": "2.1. Parameters and Their Effects",
      "section_title": true,
      "ja": "2.1. パラメータとその効果"
    },
    {
      "indent": 3,
      "text": "T T should be long enough so that there are enough packets received during T for a useful estimate of the short-term mean OWD and variation statistics. Making T too large can limit the efficacy of freq_est. It will also increase the response time of the mechanism. Making T too small will make the metrics noisier.",
      "ja": "短期平均OWDと変動統計の便利な見積もりの​​ためにTの間に受信し、十分なパケットが存在するようT Tは、十分な長さでなければなりません。 T大きすぎるを作ることfreq_estの有効性を制限することができます。また、メカニズムの応答時間が増加します。騒々しいメトリクスを行いますTが小さすぎて作ります。"
    },
    {
      "indent": 3,
      "text": "N and M N should be large enough to provide a stable estimate of oscillations in OWD. Often, M=N is just fine, though having M<N may be beneficial in certain circumstances. M*T needs to be long enough to provide stable estimates of skewness and MAD.",
      "ja": "N及びM Nは、OWDの振動の安定した推定値を提供するのに十分大きくなければなりません。多くの場合、M = Nは、M <Nは、特定の状況において有益であり得る有するものの、うまくあります。 M * Tは歪度とMADの安定した推定値を提供するのに十分な長さが必要です。"
    },
    {
      "indent": 3,
      "text": "F F determines the number of intervals over which statistics are considered to be equally weighted. When F=M, recent and older measurements are considered equal. Making F<M can increase the responsiveness of the SBD mechanism. If F is too small, statistics will be too noisy.",
      "ja": "F Fは、統計が等しく重み付けされたとみなされ、その上の間隔の数を決定します。 F = M、最近のと古い測定値が等しいと見なされた場合。 F <Mを作ることはSBDメカニズムの応答性を向上させることができます。 Fが小さすぎると、統計がうるさいとなります。"
    },
    {
      "indent": 3,
      "text": "c_s c_s is the threshold in skew_est used for determining whether a flow is transiting a bottleneck or not. Lower values of c_s require bottlenecks to be more congested to be considered for grouping by the mechanism. c_s should be set within the range of +0.2 to -0.1 -- low enough so that lightly loaded paths do not give a false indication.",
      "ja": "C_SのC_Sは、流れがボトルネックを通過されたか否かを決定するために使用skew_estにおける閾値です。 C_Sの低い値は、機構によってグループ化のために考慮することがより混雑ことがボトルネックを必要とします。負荷の軽いパスが誤った表示を与えないように十分に低い -  C_Sは0.2 -0.1の範囲に設定する必要があります。"
    },
    {
      "indent": 3,
      "text": "p_l p_l is the threshold in pkt_loss used for determining whether a flow is transiting a bottleneck or not. When pkt_loss is high, it becomes a better indicator of congestion than skew_est.",
      "ja": "P_L P_Lは、流れがボトルネックを通過されたか否かを決定するために使用pkt_lossにおける閾値です。 pkt_lossが高い場合、それはskew_estより混雑のより良い指標となります。"
    },
    {
      "indent": 3,
      "text": "c_h c_h adds hysteresis to the bottleneck determination. It should be large enough to avoid constant switching in the determination but low enough to ensure that grouping is not attempted when there is no bottleneck and the delay and loss signals cannot be relied upon.",
      "ja": "C_H C_Hは、ボトルネックの決定にヒステリシスを追加します。そこにはボトルネックがなく、遅延や損失信号が頼ることができない場合に、グループ化が試行されていないことを保証するために、決定に一定のスイッチングを回避するのに十分なほど大きいが、十分に低くなければなりません。"
    },
    {
      "indent": 3,
      "text": "p_v p_v determines the sensitivity of freq_est to noise. Making it smaller will yield higher but noisier values for freq_est. Making it too large will render it ineffective for determining groups.",
      "ja": "p_vのp_vは、ノイズに対するfreq_estの感度を決定します。それは小さいfreq_estの方が高いが、騒々しい値が得られます作ります。それはあまりにも大規模なグループを決定することが効果的でないレンダリングされます作ります。"
    },
    {
      "indent": 3,
      "text": "p_* Flows are separated when the skew_est|var_est|freq_est|pkt_loss measure is greater than p_s|p_mad|p_f|p_d. Adjusting these is a compromise between false grouping of flows that do not share a bottleneck and false splitting of flows that do. Making them larger can help if the measures are very noisy, but reducing the noise in the statistical measures by adjusting T and N|M may be a better solution.",
      "ja": "P_ *フローは分離されている場合skew_est | var_est | freq_est | p_mad | | P_F | p_d pkt_loss対策がP_Sよりも大きくなります。これらの調整は行うフローのボトルネックと虚偽の分割を共有していないフローの偽のグループとの間の妥協です。 Mは、よりよい解決策かもしれ|それらを大きく作ること策は非常にノイズが多い場合に役立ちますが、TおよびNを調整することにより、統計的尺度でのノイズを低減することができます。"
    },
    {
      "indent": 0,
      "text": "2.2. Recommended Parameter Values",
      "section_title": true,
      "ja": "2.2. 推奨パラメータ値"
    },
    {
      "indent": 3,
      "text": "[Hayes-LCN14] uses T=350ms and N=50. The other parameters have been tightened to reflect minor enhancements to the algorithm outlined in Section 4: c_s=0.1, p_f=p_d=0.1, p_s=0.15, p_mad=0.1, p_v=0.7. M=30, F=20, and c_h=0.3 are additional parameters defined in that document. These are values that seem to work well over a wide range of practical Internet conditions.",
      "ja": "[ヘイズ-LCN14は] Tの=の350msのを使用し、N = 50。 C_S = 0.1、P_F = p_d = 0.1、P_S = 0.15、p_mad = 0.1、p_v = 0.7：他のパラメータは、セクション4に概説アルゴリズムに軽微な改良を反映するように強化されています。 M = 30、F = 20、及びC_H = 0.3は、そのドキュメントで定義された追加のパラメータです。これらは、実用的なインターネット条件の広い範囲でうまく動作するようには思え値です。"
    },
    {
      "indent": 0,
      "text": "3. Mechanism",
      "section_title": true,
      "ja": "3.メカニズム"
    },
    {
      "indent": 3,
      "text": "The mechanism described in this document is based on the observation that when flows traverse a common bottleneck, each flow's distribution of packet delay measurements has similar shape characteristics. These shape characteristics are described using three key summary statistics --",
      "ja": "本書で説明されたメカニズムは、フローが共通のボトルネックを通過するとき、パケット遅延の測定の各流れの分布が同様の形状特性を有するという観察に基づいています。これらの形状特性は、3つの主要な要約統計量を用いて記述されています - "
    },
    {
      "indent": 3,
      "text": "1. variability estimate (var_est; see Section 3.2.3)",
      "section_title": true,
      "ja": "1.変動推定値（var_est、セクション3.2.3を参照）"
    },
    {
      "indent": 3,
      "text": "2. skewness estimate (skew_est; see Section 3.2.2)",
      "section_title": true,
      "ja": "2.歪度推定（skew_est、セクション3.2.2を参照）"
    },
    {
      "indent": 3,
      "text": "3. oscillation estimate (freq_est; see Section 3.2.4)",
      "section_title": true,
      "ja": "3.振動推定（freq_est、セクション3.2.4を参照）"
    },
    {
      "indent": 3,
      "text": "-- with packet loss (pkt_loss; see Section 3.2.5) used as a supplementary statistic.",
      "ja": " - パケット損失と、補助的統計量として使用（pkt_lossセクション3.2.5を参照）。"
    },
    {
      "indent": 3,
      "text": "Summary statistics help to address both the noise and the path lag problems by describing the general shape over a relatively long period of time. Each summary statistic portrays a \"view\" of the bottleneck link characteristics, and when used together, they provide a robust discrimination for grouping flows. An RTP media device may be both a sender and a receiver. SBD can be performed at either a sender or a receiver, or both.",
      "ja": "要約統計量は、時間の比較的長い期間にわたって一般的な形状を説明することによって、ノイズ及びパス遅延の問題の両方に対処するのに役立ちます。各要約統計量は、ボトルネックリンクの特性の「ビュー」を描いて、そして一緒に使用する場合、彼らはフローをグループ化するための強力な差別を提供しています。 RTPメディアデバイスは、送信側と受信側の両方であってもよいです。 SBDは、送信側または受信側、または両方のいずれかで行うことができます。"
    },
    {
      "indent": 3,
      "text": "In Figure 1, there are two possible locations for shared bottleneck detection: the sender side and the receiver side.",
      "ja": "送信側と受信側：図1において、共有ボトルネック検出のための2つの可能な位置があります。"
    },
    {
      "indent": 25,
      "text": "         +----+\n         | H2 |\n         +----+\n            |\n            | L2\n            |\n+----+  L1  |  L3  +----+\n| H1 |------|------| H3 |\n+----+             +----+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "A network with three hosts (H1, H2, H3) and three links (L1, L2, L3)",
      "ja": "3つのホスト（H1、H2、H3）と3つのリンク（L1、L2、L3）を有するネットワーク"
    },
    {
      "indent": 33,
      "text": "Figure 1",
      "ja": "図1"
    },
    {
      "indent": 3,
      "text": "1. Sender side: Consider a situation where host H1 sends media streams to hosts H2 and H3, and L1 is a shared bottleneck. H2 and H3 measure the OWD and packet loss and periodically send either this raw data or the calculated summary statistics to H1 every T. H1, having this knowledge, can determine the shared bottleneck and accordingly control the send rates.",
      "ja": "1.送信側ホストH1がホストH2およびH3にメディアストリームを送信し、L1が共有ボトルネックとなっている状況を考えてみよう。 H2及びH3は、OWDとパケット損失を測定し、定期的にH1毎T. H1この生データまたは計算された要約統計量のいずれかを送信し、この知識を有し、共有ボトルネックを決定し、それに応じて送信レートを制御することができます。"
    },
    {
      "indent": 3,
      "text": "2. Receiver side: Consider that H2 is also sending media to H3, and L3 is a shared bottleneck. If H3 sends summary statistics to H1 and H2, neither H1 nor H2 alone obtains enough knowledge to detect this shared bottleneck; H3 can, however, determine it by combining the summary statistics related to H1 and H2, respectively.",
      "ja": "2.受信側：H2もH3にメディアを送信し、及びL3が共有ボトルネックであると考えます。 H3は、H1とH2に要約統計量を送信する場合、H1やH2どちらも単独では、この共有ボトルネックを検出するのに十分な知識を得ます。 H3は、しかし、それぞれ、H1及びH2に関する要約統計を組み合わせることによって、それを決定することができます。"
    },
    {
      "indent": 0,
      "text": "3.1. SBD Feedback Requirements",
      "section_title": true,
      "ja": "3.1.  SBDフィードバック要件"
    },
    {
      "indent": 3,
      "text": "There are three possible scenarios, each with different feedback requirements:",
      "ja": "三つの可能なシナリオ、異なるフィードバック要件を持つそれぞれがあります。"
    },
    {
      "indent": 3,
      "text": "1. Both summary statistic calculations and SBD are performed at senders only. When sender-based congestion control is implemented, this method is RECOMMENDED.",
      "ja": "1.要約統計量の計算とSBDの両方が唯一の送信者で実行されています。送信元ベースの輻輳制御が実装されている場合は、この方法が推奨されます。"
    },
    {
      "indent": 3,
      "text": "2. Summary statistics are calculated on the receivers, and SBD is performed at the senders.",
      "ja": "2.要約統計は、受信機で計算されており、SBDは、送信者で実行されます。"
    },
    {
      "indent": 3,
      "text": "3. Summary statistic calculations are performed on receivers, and SBD is performed at both senders and receivers (beyond the scope of this document, but allows cooperative detection of bottlenecks).",
      "ja": "3.要約統計量の計算は受信機で実行され、及びSBDは、送信側と受信側の両方で行われる（この文書の範囲を超えて、しかしボトルネックの協調的検出を可能にします）。"
    },
    {
      "indent": 3,
      "text": "All three possibilities are discussed for completeness in this document; however, it is expected that feedback will take the form of scenario 1 and operate in conjunction with sender-based congestion control mechanisms.",
      "ja": "すべての3つの可能性は、この文書の完全性のために議論されています。しかしながら、フィードバックは、シナリオ1の形態をとり、センダベースの輻輳制御機構と連動して動作することが期待されます。"
    },
    {
      "indent": 0,
      "text": "3.1.1. Feedback When All the Logic Is Placed at the Sender",
      "section_title": true,
      "ja": "3.1.1. すべてのロジックが送信者に配置されフィードバック"
    },
    {
      "indent": 3,
      "text": "Having the sender calculate the summary statistics and determine the shared bottlenecks based on them has the advantage of placing most of the functionality in one place -- the sender.",
      "ja": "送信者 - 送信者が要約統計量を計算し、それらに基づいて、共有のボトルネックを決定持つことは、一つの場所に機能のほとんどを置くことの利点を持っています。"
    },
    {
      "indent": 3,
      "text": "For every packet, the sender requires accurate relative OWD measurements of adequate precision, along with an indication of lost packets (or the proportion of packets lost over an interval). A method to provide such measurement data with the RTP Control Protocol (RTCP) is described in [RTCP-CC-FEEDBACK].",
      "ja": "パケットごとに、送信者は、失われたパケットの表示（または間隔にわたって失われたパケットの割合）とともに、十分な精度の正確な相対的なOWD測定を必要とします。 RTP制御プロトコル（RTCP）を用いて、このような測定データを提供する方法は、[RTCP-CC-FEEDBACK]に記載されています。"
    },
    {
      "indent": 3,
      "text": "Sums, var_base_T, and skew_base_T are calculated incrementally as relative OWD measurements are determined from the feedback messages. When the mechanism has received sufficient measurements to cover the base time interval T for all flows, the summary statistics (see Section 3.2) are calculated for that T interval and flows are grouped (see Section 3.3.1). The exact timing of these calculations will depend on the frequency of the feedback message.",
      "ja": "相対OWD測定がフィードバック・メッセージから決定されるように和、var_base_T、及びskew_base_Tを増分的に計算されます。機構は、すべてのフローのための基本時間間隔Tをカバーするために十分な測定値を受信した場合、要約統計量は、（セクション3.2を参照）はT間隔およびフローのために計算される（セクション3.3.1参照）グループ化されます。これらの計算の正確なタイミングは、フィードバックメッセージの頻度に依存します。"
    },
    {
      "indent": 0,
      "text": "3.1.2. Feedback When the Statistics Are Calculated at the Receiver and SBD Is Performed at the Sender",
      "ja": "3.1.2. 統計は、受信機とSBDで計算されたフィードバックは、送信側で実行されます"
    },
    {
      "indent": 3,
      "text": "This scenario minimizes feedback but requires receivers to send selected summary statistics at an agreed-upon regular interval. We envisage the following exchange of information to initialize the system:",
      "ja": "このシナリオでは、フィードバックを最小限に抑えますが合意された定期的な間隔で選択した要約統計量を送信するために受信機を必要とします。私たちは、システムを初期化するために、以下の情報交換を想定します："
    },
    {
      "indent": 3,
      "text": "o An initialization message from the sender to the receiver will contain the following information:",
      "ja": "O送信側から受信側への初期化メッセージには、次の情報が含まれます。"
    },
    {
      "indent": 6,
      "text": "* A list of which key metrics should be collected and relayed back to the sender out of a possibly extensible set (pkt_loss, var_est, skew_est, and freq_est). The grouping algorithm described in this document requires all four of these metrics, and receivers MUST be able to provide them, but future algorithms may be able to exploit other metrics (e.g., metrics based on explicit network signals).",
      "ja": "*キーメトリックが収集され、おそらく拡張可能なセット（pkt_loss、var_est、skew_est、及びfreq_est）から送信者に中継されるべきかのリスト。この文書に記載されグループ化アルゴリズムは、これらのメトリックのすべての4つ必要であり、受信機はそれらを提供することができなければならないが、将来のアルゴリズムが他のメトリックを利用することができる（例えば、明示的なネットワーク信号に基づいて指標）。"
    },
    {
      "indent": 6,
      "text": "* The values of T, N, and M, and the necessary resolution and precision of the relayed statistics.",
      "ja": "* T、NおよびMの値、及び中継統計の必要な分解能と精度。"
    },
    {
      "indent": 3,
      "text": "o A response message from the receiver acknowledges this message with a list of key metrics it supports (subset of the sender's list) and is able to relay back to the sender.",
      "ja": "Oレシーバからの応答メッセージは、（送信者のリストの部分集合）をサポートし、送信者に中継することができるキーメトリクスのリストを使用してこのメ​​ッセージを確認します。"
    },
    {
      "indent": 3,
      "text": "This initialization exchange may be repeated to finalize the set of metrics that will be used. All agreed-upon metrics need to be supported by all receivers. It is also recommended that an identifier for the SBD algorithm version be included in the initialization message from the sender, so that potential advances in SBD technology can be easily deployed. For reference, the mechanism outlined in this document has the identifier \"SBD=01\".",
      "ja": "この初期の交換が使用されるメトリックのセットを完成させるために繰り返されてもよいです。すべての合意された指標は、すべての受信機によってサポートされる必要があります。また、SBD技術の潜在的な進歩が簡単に導入できるように、SBDアルゴリズムバージョンの識別子は、送信者からの初期化メッセージに含まれることをお勧めします。参考のため、本文書で概説機構は、識別子「SBD = 01」を有します。"
    },
    {
      "indent": 3,
      "text": "After initialization, the agreed-upon summary statistics are fed back to the sender (nominally every T).",
      "ja": "初期化後、合意された要約統計が送信者（名目上のすべてのT）にフィードバックされます。"
    },
    {
      "indent": 0,
      "text": "3.1.3. Feedback When Bottlenecks Can Be Determined at Both Senders and Receivers",
      "ja": "3.1.3. ボトルネックは、送信側と受信側の両方で測定することができるフィードバック"
    },
    {
      "indent": 3,
      "text": "This type of mechanism is currently beyond the scope of the SBD algorithm described in this document. It is mentioned here to ensure that sender/receiver cooperative shared bottleneck determination mechanisms that are more advanced remain possible in the future.",
      "ja": "このタイプの機構は、現在、このドキュメントで説明SBDアルゴリズムの範囲を超えています。より高度であること、送信者/受信者の協力共有ボトルネック決意メカニズムは、将来的に可能とどまることを確認するために、ここで言及されています。"
    },
    {
      "indent": 3,
      "text": "It is envisaged that such a mechanism would be initialized in a manner similar to that described in Section 3.1.2.",
      "ja": "このようなメカニズムは、セクション3.1.2に記載した方法と同様の方法で初期化されることが想定されます。"
    },
    {
      "indent": 3,
      "text": "After initialization, both summary statistics and shared bottleneck determinations should be exchanged, nominally every T.",
      "ja": "初期化後、両方の要約統計と共有ボトルネックの決定は、すべてのT.名目上、交換する必要があります"
    },
    {
      "indent": 0,
      "text": "3.2. Key Metrics and Their Calculation",
      "section_title": true,
      "ja": "3.2. 主要指標とその計算"
    },
    {
      "indent": 3,
      "text": "Measurements are calculated over a base interval (T) and summarized over N or M such intervals. All summary statistics can be calculated incrementally.",
      "ja": "測定は、ベース間隔（T）で計算され、N又はMような間隔で要約されています。すべての要約統計量は漸増的に計算することができます。"
    },
    {
      "indent": 0,
      "text": "3.2.1. Mean Delay",
      "section_title": true,
      "ja": "3.2.1. 遅延を意味します"
    },
    {
      "indent": 3,
      "text": "The mean delay is not a useful signal for comparisons between flows, since flows may traverse quite different paths and clocks will not necessarily be synchronized. However, it is a base measure for the three summary statistics. The mean delay, E_T(OWD), is the average OWD measured over T.",
      "ja": "フローは全く異なるパスを横断することができ、クロックは必ずしも同期されないので、平均遅延は、フロー間の比較のために有用な信号ではありません。しかし、それは3つの要約統計のための基本尺度です。平均遅延、E_T（OWD）は、Tにわたって測定平均OWDあります"
    },
    {
      "indent": 3,
      "text": "To facilitate the other calculations, the last N E_T(OWD) values will need to be stored in a cyclic buffer along with the moving average of E_T(OWD):",
      "ja": "他の計算を容易にするために、最後のN E_T（OWD）値E_Tの移動平均（OWD）と共に環状バッファに格納する必要があります。"
    },
    {
      "indent": 6,
      "text": "mean_delay = E_M(E_T(OWD)) = sum_M(E_T(OWD)) / M",
      "ja": "mean_delay = E_M（E_T（OWD））= sum_M（E_T（OWD））/ M"
    },
    {
      "indent": 3,
      "text": "where M <= N. Setting M to be less than N allows the mechanism to be more responsive to changes, but potentially at the expense of a higher error rate (see Section 4.1 for a discussion on improving the responsiveness of the mechanism).",
      "ja": "M <= Nの設定Mは、Nが（機構の応答性を向上させる上で議論については、セクション4.1を参照）機構が変化に対してより応答性であることができ、潜在的により高い誤り率を犠牲にしてより小さいことがあります。"
    },
    {
      "indent": 0,
      "text": "3.2.2. Skewness Estimate",
      "section_title": true,
      "ja": "3.2.2. 歪度見積り"
    },
    {
      "indent": 3,
      "text": "Skewness is difficult to calculate efficiently and accurately. Ideally, it should be calculated over the entire period (M*T) from the mean OWD over that period. However, this would require storing every delay measurement over the period. Instead, an estimate is made over M*T based on a calculation every T using the previous T's calculation of mean_delay.",
      "ja": "歪度は、効率的かつ正確に算出することが困難です。理想的には、その期間にわたる平均OWDから全期間（M * T）にわたって計算されるべきです。しかし、これは期間中、すべての遅延測定を保存する必要になります。代わりに、推定値はmean_delayの前のTの計算を用いて計算し、すべてのTに基づいて、M * Tの上に作られています。"
    },
    {
      "indent": 3,
      "text": "The base for the skewness calculation is estimated using a counter initialized every T. It increments for OWD samples below the mean and decrements for OWD above the mean. So, for each OWD sample:",
      "ja": "歪度計算のベースは、カウンタを使用して推定されるそれは、平均上記OWDの平均及びデクリメント以下OWDサンプルに対して増分毎にTを初期化。そのため、各OWDサンプルについて："
    },
    {
      "indent": 6,
      "text": "if (OWD < mean_delay) skew_base_T++",
      "ja": "（OWD <mean_delay）skew_base_Tもし++"
    },
    {
      "indent": 6,
      "text": "if (OWD > mean_delay) skew_base_T--",
      "ja": "もし（OWD> mean_delay）skew_base_T--"
    },
    {
      "indent": 3,
      "text": "mean_delay does not include the mean of the current T interval to enable it to be calculated iteratively.",
      "ja": "mean_delayは、反復的に計算することを可能にするために、現在のT間隔の平均値が含まれていません。"
    },
    {
      "indent": 3,
      "text": "skew_est = sum_MT(skew_base_T) / num_MT(OWD)",
      "ja": "skew_est = sum_MT（skew_base_T）/ num_MT（OWD）"
    },
    {
      "indent": 6,
      "text": "where skew_est is a number between -1 and 1.",
      "ja": "skew_estは-1と1の間の数です。"
    },
    {
      "indent": 3,
      "text": "Note: Care must be taken when implementing the comparisons to ensure that rounding does not bias skew_est. It is important that the mean is calculated with a higher precision than the samples.",
      "ja": "注意：その丸めはないバイアスskew_estを行い確実にするための比較を実装する際には注意する必要があります。平均値がサンプルよりも高い精度で計算することが重要です。"
    },
    {
      "indent": 0,
      "text": "3.2.3. Variability Estimate",
      "section_title": true,
      "ja": "3.2.3. 変動推定"
    },
    {
      "indent": 3,
      "text": "Mean Absolute Deviation (MAD) is a robust variability measure that copes well with different send rates. It can be implemented in an online manner as follows:",
      "ja": "絶対偏差（MAD）が異なる送信レートでうまく対処堅牢な変動の尺度である意味。これは次のようにオンラインの方法で実装することができます。"
    },
    {
      "indent": 6,
      "text": "var_base_T = sum_T(|OWD - E_T(OWD)|)",
      "ja": "var_base_T = sum_T（| OWD  -  E_T（OWD）|）"
    },
    {
      "indent": 9,
      "text": "where",
      "ja": "どこ"
    },
    {
      "indent": 12,
      "text": "|x| is the absolute value of x",
      "ja": "| X | xの絶対値であります"
    },
    {
      "indent": 12,
      "text": "E_T(OWD) is the mean OWD calculated in the previous T",
      "ja": "E_T（OWD）は、前Tで計算された平均OWDあります"
    },
    {
      "indent": 6,
      "text": "var_est = MAD_MT = sum_MT(var_base_T) / num_MT(OWD)",
      "ja": "var_est = MAD_MT = sum_MT（var_base_T）/ num_MT（OWD）"
    },
    {
      "indent": 0,
      "text": "3.2.4. Oscillation Estimate",
      "section_title": true,
      "ja": "3.2.4. 発振見積り"
    },
    {
      "indent": 3,
      "text": "An estimate of the low-frequency oscillation of the delay signal is calculated by counting and normalizing the significant mean, E_T(OWD), crossings of mean_delay:",
      "ja": "遅延信号の低周波振動の推定値は、有意な平均値をカウントし、正規化することによって計算される、E_T（OWD）、mean_delayの交差："
    },
    {
      "indent": 6,
      "text": "freq_est = number_of_crossings / N",
      "ja": "freq_est = number_of_crossings / N"
    },
    {
      "indent": 9,
      "text": "where we define a significant mean crossing as a crossing that extends p_v * var_est from mean_delay. In our experiments, we have found that p_v = 0.7 is a good value.",
      "ja": "我々はmean_delayからp_v * var_estを拡張交差点と交差重要な平均値を定義する場所。我々の実験では、我々はp_v = 0.7は良い値であることを発見しました。"
    },
    {
      "indent": 3,
      "text": "freq_est is a number between 0 and 1. freq_est can be approximated incrementally as follows:",
      "ja": "freq_estは、次のように0と1の間の数freq_estが増分近似することができるです。"
    },
    {
      "indent": 3,
      "text": "o With each new calculation of E_T(OWD), a decision is made as to whether this value of E_T(OWD) significantly crosses the current long-term mean, mean_delay, with respect to the previous significant mean crossing.",
      "ja": "E_T（OWD）の各新しい計算とO、決定がE_T（OWD）のこの値は有意に前有意平均交差に関して、現在の長期平均、mean_delayを横切るか否かが判断されます。"
    },
    {
      "indent": 3,
      "text": "o A cyclic buffer, last_N_crossings, records a 1 if there is a significant mean crossing; otherwise, it records a 0.",
      "ja": "交差有意平均が存在する場合、環状バッファ、last_N_crossings O、1を記録します。それ以外の場合は、0を記録します。"
    },
    {
      "indent": 3,
      "text": "o The counter, number_of_crossings, is incremented when there is a significant mean crossing and decremented when a non-zero value is removed from the last_N_crossings.",
      "ja": "非ゼロ値をlast_N_crossingsから削除されたときにカウンタO、number_of_crossingsは、有意な平均交差点がある場合に増分され、デクリメントされます。"
    },
    {
      "indent": 3,
      "text": "This approximation of freq_est was not used in [Hayes-LCN14], which calculated freq_est every T using the current E_N(E_T(OWD)). Our tests show that this approximation of freq_est yields results that are almost identical to when the full calculation is performed every T.",
      "ja": "freq_estのこの近似は、現在E_Nを使用して、すべてのTを算出freq_est [ヘイズ-LCN14]に使用されなかった（E_T（OWD））。私たちのテストでは、完全な計算は、すべてのT.行われた場合とほぼ同じですfreq_est利回り結果のこの近似ことを示しています"
    },
    {
      "indent": 0,
      "text": "3.2.5. Packet Loss",
      "section_title": true,
      "ja": "3.2.5. パケットロス"
    },
    {
      "indent": 3,
      "text": "The proportion of packets lost over the period NT is used as a supplementary measure:",
      "ja": "期間NT上で失われたパケットの割合が補助的手段として使用されます。"
    },
    {
      "indent": 6,
      "text": "pkt_loss = sum_NT(lost packets) / sum_NT(total packets)",
      "ja": "pkt_loss = sum_NT（喪失パケット）/ sum_NT（全パケット）"
    },
    {
      "indent": 3,
      "text": "Note: When pkt_loss is low, it is very variable; however, when pkt_loss is high, it becomes a stable measure for making grouping decisions.",
      "ja": "注意：pkt_lossが低い場合、それは非常に変数です。 pkt_lossが高い場合しかし、それはグループ化意思決定を行うための安定対策となります。"
    },
    {
      "indent": 0,
      "text": "3.3. Flow Grouping",
      "section_title": true,
      "ja": "3.3. フローのグループ化"
    },
    {
      "indent": 0,
      "text": "3.3.1. Flow-Grouping Algorithm",
      "section_title": true,
      "ja": "3.3.1. フローグループ化アルゴリズム"
    },
    {
      "indent": 3,
      "text": "The following grouping algorithm is RECOMMENDED for the use of SBD with coupled congestion control for RTP media [RTP-COUPLED-CC] and is sufficient and efficient for small to moderate numbers of flows. For very large numbers of flows (e.g., hundreds), a more complex clustering algorithm may be substituted.",
      "ja": "次のグループ化アルゴリズムは、RTPメディアの連結輻輳制御[RTP結合-CC]とSBDの使用のために推奨さ小さなフローの数を緩和するために十分かつ効率的です。流れ（例えば、数百）の非常に大きな数のために、より複雑なクラスタリングアルゴリズムは、置換されていてもよいです。"
    },
    {
      "indent": 3,
      "text": "Since no single metric is precise enough to group flows (due to noise), the algorithm uses multiple metrics. Each metric offers a different \"view\" of the bottleneck link characteristics, and used together they enable a more precise grouping of flows than would otherwise be possible.",
      "ja": "単一のメトリックは（ノイズによる）基フローに十分に正確ではないので、アルゴリズムは複数のメトリックを使用します。各メトリックは、ボトルネックリンク特性の異なる「ビュー」を提供し、彼らがそうでなければ可能であるよりも流れのより正確なグループ化を可能に一緒に使用します。"
    },
    {
      "indent": 3,
      "text": "Flows determined to be transiting a bottleneck are successively divided into groups based on freq_est, var_est, skew_est, and pkt_loss.",
      "ja": "ボトルネックを通過すると判定フローが順次freq_est、var_est、skew_est、及びpkt_lossに基づいてグループに分けられます。"
    },
    {
      "indent": 3,
      "text": "The first step is to determine which flows are transiting a bottleneck. This is important, since if a flow is not transiting a bottleneck its delay-based metrics will not describe the bottleneck but will instead describe the \"noise\" from the rest of the path. Skewness, with the proportion of packet loss as a supplementary measure, is used to do this:",
      "ja": "最初のステップは、ボトルネックを通過さ流れる決定することです。流れがボトルネックを通過されていない場合、その遅延ベースのメトリックは、ボトルネックを説明しませんが、代わりに、パスの残りの部分から「ノイズ」を記述しますので、これは、重要です。歪度は、補助的な措置として、パケットロスの割合で、これを行うために使用されます。"
    },
    {
      "indent": 3,
      "text": "1. Grouping will be performed on flows that are inferred to be traversing a bottleneck by:",
      "ja": "1.グループ化によるボトルネックを通過することが推察されたフロー上で実行されます。"
    },
    {
      "indent": 10,
      "text": "skew_est < c_s",
      "ja": "skew_est <C_S"
    },
    {
      "indent": 13,
      "text": "|| ( skew_est < c_h & PB ) || pkt_loss > p_l",
      "ja": "|| （skew_est <C_H＆PB）|| pkt_loss> P_L"
    },
    {
      "indent": 7,
      "text": "The parameter c_s controls how sensitive the mechanism is in detecting a bottleneck. c_s = 0.0 was used in [Hayes-LCN14]. A value of c_s = 0.1 is a little more sensitive, and c_s = -0.1 is a little less sensitive. c_h controls the hysteresis on flows that were grouped as transiting a bottleneck the previous time. If the test result is TRUE, PB=TRUE; otherwise, PB=FALSE.",
      "ja": "パラメータは、メカニズムがボトルネックを検出する際にどのように敏感なコントロールをC_S。 C_Sが= 0.0 [ヘイズ-LCN14]で使用しました。 C_Sの値= 0.1もう少し敏感であり、そしてC_S = -0.1は少し敏感です。 C_Hは、ボトルネックを前回遷移としてグループ化されたフローにヒステリシスを制御します。テスト結果が真の場合、PBがTRUE =。そうでない場合は、PBはFALSE =。"
    },
    {
      "indent": 3,
      "text": "These flows (i.e., flows transiting a bottleneck) are then progressively divided into groups based on the freq_est, var_est, and skew_est summary statistics. The process proceeds according to the following steps:",
      "ja": "（すなわち、ボトルネックを通過するフロー）これらの流れは、その後徐々にfreq_est、var_est、及びskew_est要約統計量に基づいてグループに分けられます。プロセスは、以下のステップに従って進行します。"
    },
    {
      "indent": 3,
      "text": "2. Group flows whose difference in sorted freq_est is less than a threshold:",
      "ja": "その差がソートさfreq_estで閾値未満である2グループ・フロー："
    },
    {
      "indent": 10,
      "text": "diff(freq_est) < p_f",
      "ja": "差分（freq_est）<P_F"
    },
    {
      "indent": 3,
      "text": "3. Subdivide the groups obtained in step 2 by grouping flows whose difference in sorted E_M(var_est) (highest to lowest) is less than a threshold:",
      "ja": "3.グループ化することによって、工程2で得られたグループを細分その差ソートE_Mで（var_est）（最低から最高）閾値未満で流れます。"
    },
    {
      "indent": 10,
      "text": "diff(var_est) < (p_mad * var_est)",
      "ja": "差分（var_est）<（* p_madのvar_est）"
    },
    {
      "indent": 7,
      "text": "The threshold, (p_mad * var_est), is with respect to the highest value in the difference.",
      "ja": "閾値（p_mad * var_est）は、差の最大値に関するものです。"
    },
    {
      "indent": 3,
      "text": "4. Subdivide the groups obtained in step 3 by grouping flows whose difference in sorted skew_est is less than a threshold:",
      "ja": "4.その差ソートskew_estにおける閾値未満であるフローをグループ化することによって、ステップ3で得られたグループを細分化。"
    },
    {
      "indent": 10,
      "text": "diff(skew_est) < p_s",
      "ja": "差分（skew_est）<P_S"
    },
    {
      "indent": 3,
      "text": "5. When packet loss is high enough to be reliable (pkt_loss > p_l), subdivide the groups obtained in step 4 by grouping flows whose difference is less than a threshold:",
      "ja": "前記パケット損失が信頼できる（pkt_loss> P_L）であるのに十分に高く、その差の閾値未満であるフローをグループ化することによって、ステップ4で得られたグループを細分化。"
    },
    {
      "indent": 10,
      "text": "diff(pkt_loss) < (p_d * pkt_loss)",
      "ja": "差分（pkt_loss）<（p_d * pkt_loss）"
    },
    {
      "indent": 7,
      "text": "The threshold, (p_d * pkt_loss), is with respect to the highest value in the difference.",
      "ja": "閾値（p_dの*のpkt_loss）は、差の最大値に関するものです。"
    },
    {
      "indent": 3,
      "text": "This procedure involves sorting estimates from highest to lowest. It is simple to implement and is efficient for small numbers of flows (up to 10-20). Figure 2 illustrates this algorithm.",
      "ja": "この手順は、最高から最低までの推定値を並べ替えが含まれます。実装が簡単で、流れの少数（10〜20まで）のために効率的です。図2は、このアルゴリズムを示す図です。"
    },
    {
      "indent": 3,
      "text": "                                     *********\n                                     * Flows *\n                                     ***.**.**\n                                       /    '\n                                      /     '--.\n                                     /          \\\n                                .---v--.    .----v---.\n1. Flows traversing             | Cong |    | UnCong |\n   a bottleneck                 '-.--.-'    '--------'\n                                 /    \\\n                                /      \\\n                               /        \\\n                           .--v--.       v-----.\n2. Divide by               | g_1 |  ...  | g_n |\n   freq_est                '---.-.       '----..\n                              /   \\          /  \\\n                             /     '--.     v    '------.\n                            /          \\                 \\\n                      .----v-.        .-v----.        .---v--.\n3. Divide by          | g_1a |  ...   | g_1z |   ...  | g_nz |\n   var_est            '---.-.'        '-----..        '-.-.--'\n                         /   \\             /  \\        /  |\n                        /     '-----.     v    v      v   |\n                       /             \\                    |\n                    .-v-----.       .-v-----.         .---v---.\n4. Divide by        | g_1ai |  ...  | g_1ax |   ...   | g_nzx |\n   skew_est         '----.-.'       '------..         '-.-.---'\n                        /   \\             /  \\         /  |\n                       /     '--.        v    v       v   |\n                      /          \\                        |\n               .-----v--.       .-v------.           .----v---.\n5. Divide by   | g_1aiA |  ...  | g_1aiZ |    ...    | g_nzxZ |\n   pkt_loss    '--------'       '--------'           '--------'\n   (when applicable)",
      "raw": true
    },
    {
      "indent": 25,
      "text": "Simple grouping algorithm",
      "ja": "シンプルなグループ化アルゴリズム"
    },
    {
      "indent": 33,
      "text": "Figure 2",
      "ja": "図2"
    },
    {
      "indent": 0,
      "text": "3.3.2. Using the Flow Group Signal",
      "section_title": true,
      "ja": "3.3.2. フローグループの信号を使用します"
    },
    {
      "indent": 3,
      "text": "Grouping decisions can be made every T from the second T; however, they will not attain their full design accuracy until after the 2*Nth T interval. We recommend that grouping decisions not be made until 2*M T intervals.",
      "ja": "グループ化の決定は、第二のTからのあらゆるTを行うことができます。しかし、彼らは2 * N番目のT間隔の後までその完全な設計精度を達成することはありません。私たちは、グループ化の決定は2つの* M Tの間隔になるまで行われないことをお勧めします。"
    },
    {
      "indent": 3,
      "text": "Network conditions, and even the congestion controllers, can cause bottlenecks to fluctuate. A coupled congestion controller MAY decide only to couple groups that remain stable, say grouped together 90% of the time, depending on its objectives. Recommendations concerning this are beyond the scope of this document and will be specific to the coupled congestion controller's objectives.",
      "ja": "ネットワークの状態、さらには渋滞コントローラは、ボトルネックが変動する可能性があります。結合された輻輳制御装置が唯一の安定を維持夫婦のグループに決めることができる、その目的に応じて、一緒に時間の90％をグループ化すると言います。これに関する推奨事項は、この文書の範囲を超えており、接続された輻輳制御装置の目的に固有のものになります。"
    },
    {
      "indent": 0,
      "text": "4. Enhancements to the Basic SBD Algorithm",
      "section_title": true,
      "ja": "基本的なアルゴリズムに4.機能強化"
    },
    {
      "indent": 3,
      "text": "The SBD algorithm as specified in Section 3 was found to work well for a broad variety of conditions. The following enhancements to the basic mechanisms have been found to significantly improve the algorithm's performance under some circumstances and SHOULD be implemented. These \"tweaks\" are described separately to keep the main description succinct.",
      "ja": "第3節で指定されたSBDアルゴリズムは、条件の幅広いために働くことがわかりました。基本的なメカニズムに以下の機能拡張が大幅にいくつかの状況下では、アルゴリズムのパフォーマンスを向上することが見出されていると、実装する必要があります。これらの「微調整」は簡潔主説明を維持するために別々に説明されています。"
    },
    {
      "indent": 0,
      "text": "4.1. Reducing Lag and Improving Responsiveness",
      "section_title": true,
      "ja": "4.1. ラグの削減と応答性を改善"
    },
    {
      "indent": 3,
      "text": "This section describes how to improve the responsiveness of the basic algorithm.",
      "ja": "このセクションでは、基本的なアルゴリズムの応答性を改善する方法について説明します。"
    },
    {
      "indent": 3,
      "text": "Measurement-based shared bottleneck detection makes decisions in the present based on what has been measured in the past. This means that there is always a lag in responding to changing conditions. This mechanism is based on summary statistics taken over (N*T) seconds. This mechanism can be made more responsive to changing conditions by:",
      "ja": "測定ベースの共有ボトルネックの検出は、過去に測定されたものに基づいて現在に決定を下します。これは、常に変化する状況への対応に遅れがあることを意味します。このメカニズムは、（N * T）秒を引き継い要約統計量に基づいています。このメカニズムは、によって状況の変化により敏感行うことができます。"
    },
    {
      "indent": 3,
      "text": "1. Reducing N and/or M, but at the expense of having metrics that are less accurate, and/or",
      "ja": "1. N及び/又はMを減らすが、あまり正確であるメトリックを有する犠牲にし、及び/又は"
    },
    {
      "indent": 3,
      "text": "2. Exploiting the fact that measurements that are more recent are more valuable than older measurements and weighting them accordingly.",
      "ja": "2.より最近のある測定が古い測定よりも貴重であるという事実を活用して、適切に重み付け。"
    },
    {
      "indent": 3,
      "text": "Although measurements that are more recent are more valuable, older measurements are still needed to gain an accurate estimate of the distribution descriptor we are measuring. Unfortunately, the simple exponentially weighted moving average weights drop off too quickly for our requirements and have an infinite tail. A simple linearly declining weighted moving average also does not provide enough weight to the measurements that are most recent. We propose a piecewise linear distribution of weights, such that the first section (samples 1:F) is flat as in a simple moving average, and the second section (samples F+1:M) is linearly declining weights to the end of the averaging window. We choose integer weights; this allows incremental calculation without introducing rounding errors.",
      "ja": "より最近のある測定がより価値があるものの、それ以上の年齢の測定は、まだ我々が測定しているディストリビューションの記述の正確な推定値を得るために必要とされています。残念ながら、簡単な指数加重移動平均重量は、我々の要求のためにあまりにも早くオフにドロップすると、無限の尾を持っています。シンプルな直線的に減少加重移動平均も最近のある測定に十分な重量を提供していません。我々は、最初のセクション（サンプル1：F）のように、重みの区分線形分布を提案する単純移動平均のように平坦であり、第2の部分（サンプルF + 1：M）は直線の端部に重量を減少していますウィンドウを平均化。私たちは、整数の重みを選択してください。これは、丸め誤差を導入することなく、増分計算を可能にします。"
    },
    {
      "indent": 0,
      "text": "4.1.1. Improving the Response of the Skewness Estimate",
      "section_title": true,
      "ja": "4.1.1. 歪度見積りの応答を改善"
    },
    {
      "indent": 3,
      "text": "The weighted moving average for skew_est, based on skew_est as defined in Section 3.2.2, can be calculated as follows:",
      "ja": "次のようにセクション3.2.2で定義されるようskew_estに基づいskew_estの加重移動平均は、計算することができます。"
    },
    {
      "indent": 6,
      "text": "skew_est = ((M-F+1)*sum(skew_base_T(1:F))",
      "ja": "skew_est =（（M-F + 1）*和（skew_base_T（1：F））"
    },
    {
      "indent": 22,
      "text": "+ sum([(M-F):1].*skew_base_T(F+1:M)))",
      "ja": "+ SUM（[（M-F）：1]。* skew_base_T（F + 1：M）））"
    },
    {
      "indent": 17,
      "text": "/ ((M-F+1)*sum(numsampT(1:F))",
      "ja": "/（（M-F + 1）*和（numsampT（1：F））"
    },
    {
      "indent": 22,
      "text": "+ sum([(M-F):1].*numsampT(F+1:M)))",
      "ja": "+ SUM（[（M-F）：1]。* numsampT（F + 1：M）））"
    },
    {
      "indent": 3,
      "text": "where numsampT is an array of the number of OWD samples in each T (i.e., num_T(OWD)), and numsampT(1) is the most recent; skew_base_T(1) is the most recent calculation of skew_base_T; 1:F refers to the integer values 1 through to F, and [(M-F):1] refers to an array of the integer values (M-F) declining through to 1; and \".*\" is the array scalar dot product operator.",
      "ja": "numsampT各T（即ち、num_T（OWD））でOWDサンプル数の配列であり、そしてnumsampTは、（1）最も最近です。 skew_base_Tは、（1）skew_base_Tの最も最近の計算です。 1：Fは整数を意味Fに至るまで1値、及び[（M-F）：1]に至るまで減少整数値（M-F）の配列を指します。そして「*」配列のスカラー内積演算子です。"
    },
    {
      "indent": 3,
      "text": "To calculate this weighted skew_est incrementally:",
      "ja": "この加重skew_estをインクリメンタルに計算するには："
    },
    {
      "indent": 3,
      "text": "Notation: F_ = flat portion, D_ = declining portion, W_ = weighted component",
      "ja": "表記：F_ =平坦部、D_ =減少部分、W_ =重み付け成分"
    },
    {
      "indent": 3,
      "text": "Initialize: sum_skewbase = 0, F_skewbase = 0, W_D_skewbase = 0",
      "ja": "初期化：sum_skewbase = 0、F_skewbase = 0、W_D_skewbase = 0"
    },
    {
      "indent": 16,
      "text": "skewbase_hist = buffer of length M, initialized to 0",
      "ja": "0に初期化され、長さMのskewbase_hist =バッファ、"
    },
    {
      "indent": 16,
      "text": "numsampT = buffer of length M, initialized to 0",
      "ja": "長さMのnumsampTは=バッファー、0に初期化"
    },
    {
      "indent": 3,
      "text": "Steps per iteration:",
      "ja": "イテレーションごとのステップ："
    },
    {
      "indent": 3,
      "text": "1. old_skewbase = skewbase_hist(M)",
      "section_title": true,
      "ja": "1. old_skewbase = skewbase_hist（M）"
    },
    {
      "indent": 3,
      "text": "2. old_numsampT = numsampT(M)",
      "section_title": true,
      "ja": "2. old_numsampT = numsampT（M）"
    },
    {
      "indent": 3,
      "text": "3. cycle(skewbase_hist)",
      "section_title": true,
      "ja": "3サイクル（skewbase_hist）"
    },
    {
      "indent": 3,
      "text": "4. cycle(numsampT)",
      "section_title": true,
      "ja": "4サイクル（numsampT）"
    },
    {
      "indent": 3,
      "text": "5. numsampT(1) = num_T(OWD)",
      "section_title": true,
      "ja": "5. numsampT（1）= num_T（OWD）"
    },
    {
      "indent": 3,
      "text": "6. skewbase_hist(1) = skew_base_T",
      "section_title": true,
      "ja": "6. skewbase_hist（1）= skew_base_T"
    },
    {
      "indent": 3,
      "text": "7. F_skewbase = F_skewbase + skew_base_T - skewbase_hist(F+1)",
      "section_title": true,
      "ja": "7. F_skewbase = F_skewbase + skew_base_T  -  skewbase_hist（F + 1）"
    },
    {
      "indent": 3,
      "text": "8. W_D_skewbase = W_D_skewbase + (M-F)*skewbase_hist(F+1) - sum_skewbase",
      "ja": "8. W_D_skewbase = W_D_skewbase +（M-F）* skewbase_hist（F + 1） -  sum_skewbase"
    },
    {
      "indent": 3,
      "text": "9. W_D_numsamp = W_D_numsamp + (M-F)*numsampT(F+1) - sum_numsamp + F_numsamp",
      "ja": "9. W_D_numsamp = W_D_numsamp +（M-F）* numsampT（F + 1） -  sum_numsamp + F_numsamp"
    },
    {
      "indent": 3,
      "text": "10. F_numsamp = F_numsamp + numsampT(1) - numsampT(F+1)",
      "section_title": true,
      "ja": "10. F_numsamp = F_numsamp + numsampT（1） -  numsampT（F + 1）"
    },
    {
      "indent": 3,
      "text": "11. sum_skewbase = sum_skewbase + skewbase_hist(F+1) - old_skewbase",
      "section_title": true,
      "ja": "11. sum_skewbase = sum_skewbase + skewbase_hist（F + 1） -  old_skewbase"
    },
    {
      "indent": 3,
      "text": "12. sum_numsamp = sum_numsamp + numsampT(1) - old_numsampT",
      "section_title": true,
      "ja": "12. sum_numsamp = sum_numsamp + numsampT（1） -  old_numsampT"
    },
    {
      "indent": 3,
      "text": "13. skew_est = ((M-F+1)*F_skewbase + W_D_skewbase) / ((M-F+1)*F_numsamp+W_D_numsamp)",
      "ja": "13. skew_est =（（M-F + 1）* F_skewbase + W_D_skewbase）/（（M-F + 1）* F_numsamp + W_D_numsamp）"
    },
    {
      "indent": 3,
      "text": "where cycle(...) refers to the operation on a cyclic buffer where the start of the buffer is now the next element in the buffer.",
      "ja": "ここで、サイクル（...）は、バッファの先頭が現在のバッファ内の次の要素である環状バッファ上の操作のことをいいます。"
    },
    {
      "indent": 0,
      "text": "4.1.2. Improving the Response of the Variability Estimate",
      "section_title": true,
      "ja": "4.1.2. 変動推定の応答を改善"
    },
    {
      "indent": 3,
      "text": "Similarly, the weighted moving average for var_est can be calculated as follows:",
      "ja": "以下同様に、var_estの加重移動平均を計算することができます。"
    },
    {
      "indent": 6,
      "text": "var_est = ((M-F+1)*sum(var_base_T(1:F))",
      "ja": "var_est =（（F + M-1）*和（var_base_T（1：F））"
    },
    {
      "indent": 21,
      "text": "+ sum([(M-F):1].*var_base_T(F+1:M)))",
      "ja": "+ SUM（[（M-F）：1]。* var_base_T（F + 1：M）））"
    },
    {
      "indent": 16,
      "text": "/ ((M-F+1)*sum(numsampT(1:F))",
      "ja": "/（（M-F + 1）*和（numsampT（1：F））"
    },
    {
      "indent": 21,
      "text": "+ sum([(M-F):1].*numsampT(F+1:M)))",
      "ja": "+ SUM（[（M-F）：1]。* numsampT（F + 1：M）））"
    },
    {
      "indent": 3,
      "text": "where numsampT is an array of the number of OWD samples in each T (i.e., num_T(OWD)), and numsampT(1) is the most recent; skew_base_T(1) is the most recent calculation of skew_base_T; 1:F refers to the integer values 1 through to F, and [(M-F):1] refers to an array of the integer values (M-F) declining through to 1; and \".*\" is the array scalar dot product operator. When removing oscillation noise (see Section 4.2), this calculation must be adjusted to allow for invalid var_base_T records.",
      "ja": "numsampT各T（即ち、num_T（OWD））でOWDサンプル数の配列であり、そしてnumsampTは、（1）最も最近です。 skew_base_Tは、（1）skew_base_Tの最も最近の計算です。 1：Fは整数を意味Fに至るまで1値、及び[（M-F）：1]に至るまで減少整数値（M-F）の配列を指します。そして「*」配列のスカラー内積演算子です。振動ノイズ（4.2節を参照）を除去する場合、この計算は無効var_base_Tレコードを可能にするために調整されなければなりません。"
    },
    {
      "indent": 3,
      "text": "var_est can be calculated incrementally in the same way as skew_est as shown in Section 4.1.1. However, note that the buffer numsampT is used for both calculations, so the operations on it should not be repeated.",
      "ja": "セクション4.1.1に示すようにvar_estはskew_estと同様に増分的に計算することができます。しかし、バッファnumsampTは、両方の計算に使用されることに注意し、それに動作を繰り返すべきではありません。"
    },
    {
      "indent": 0,
      "text": "4.2. Removing Oscillation Noise",
      "section_title": true,
      "ja": "4.2. 振動ノイズを除去"
    },
    {
      "indent": 3,
      "text": "When a path has no bottleneck, var_est will be very small and the recorded significant mean crossings will be the result of path noise. Thus, up to N-1 meaningless mean crossings can be a source of error at the point where a link becomes a bottleneck and flows traversing it begin to be grouped.",
      "ja": "パスがボトルネックを持っていない場合は、var_estは非常に小さくなり、記録の重要な平均交差がパスノイズの結果になります。したがって、N-1まで無意味平均交差リンクがボトルネックとなり、それがグループ化され始める横断流れる時点でエラーの原因であることができます。"
    },
    {
      "indent": 3,
      "text": "To remove this source of noise from freq_est:",
      "ja": "freq_estからのノイズのこのソースを削除するには："
    },
    {
      "indent": 3,
      "text": "1. Set the current var_base_T = NaN (a value representing an invalid record, i.e., Not a Number) for flows that are deemed to not be transiting a bottleneck by the first grouping test that is based on skew_est (see Section 3.3.1).",
      "ja": "現在var_base_T = NaNにskew_estに基づいて第一のグループ化試験によってボトルネックを通過することはないと考えられるフローの（無効のレコード、すなわち、非数を表す値）（セクション3.3.1を参照）を設定1 。"
    },
    {
      "indent": 3,
      "text": "2. Then, var_est = sum_MT(var_base_T != NaN) / num_MT(OWD).",
      "section_title": true,
      "ja": "2.次に、var_est = sum_MT（var_base_T！= NaNの）/ num_MT（OPD）。"
    },
    {
      "indent": 3,
      "text": "3. For freq_est, only record a significant mean crossing if a given flow is deemed to be transiting a bottleneck.",
      "ja": "所定のフローがボトルネックを通過すると認められる場合freq_est 3.、唯一の重要な平均横断を記録。"
    },
    {
      "indent": 3,
      "text": "These three changes can help to remove the non-bottleneck noise from freq_est.",
      "ja": "これらの3つの変更がfreq_estから非ボトルネックのノイズを除去するのに役立ちます。"
    },
    {
      "indent": 0,
      "text": "5. Measuring OWD",
      "section_title": true,
      "ja": "5.測定OWD"
    },
    {
      "indent": 3,
      "text": "This section discusses the OWD measurements required for this algorithm to detect shared bottlenecks.",
      "ja": "このセクションでは、共有のボトルネックを検出するために、このアルゴリズムに必要なOWD測定を論じています。"
    },
    {
      "indent": 3,
      "text": "The SBD mechanism described in this document relies on differences between OWD measurements to avoid the practical problems with measuring absolute OWD (see [Hayes-LCN14], Section III.C). Since all summary statistics are relative to the mean OWD and sender/receiver clock offsets should be approximately constant over the measurement periods, the offset is subtracted out in the calculation.",
      "ja": "本書では説明SBD機構（セクションIII.C、[ヘイズ-LCN14]参照）絶対OWDを測定すると実用的な問題を回避するために、OWD測定値の間の差に依存しています。すべての要約統計量は、平均OWDと送信/受信クロック・オフセットに対して相対的であるので、計算に差し引かれるオフセットが、測定期間にわたってほぼ一定であるべきです。"
    },
    {
      "indent": 0,
      "text": "5.1. Timestamp Resolution",
      "section_title": true,
      "ja": "5.1. タイムスタンプ分解能"
    },
    {
      "indent": 3,
      "text": "The SBD mechanism requires timing information precise enough to be able to make comparisons. As a rule of thumb, the time resolution should be less than one hundredth of a typical path's range of delays. In general, the coarser the time resolution, the more care that needs to be taken to ensure that rounding errors do not bias the skewness calculation. Frequent timing information in millisecond resolution as described by [RTCP-CC-FEEDBACK] should be sufficient for the sender to calculate relative OWD.",
      "ja": "SBDメカニズムは、比較を行うことができるように十分正確なタイミング情報を必要とします。経験則として、時間分解能は、遅延の一般的なパスの範囲未満の第百であるべきです。一般的に、粗い時間分解能、丸め誤差がバイアス歪度計算しないように注意する必要がより多くのケア。送信者が相対OWDを算出するためのミリ秒の分解能で頻繁なタイミング情報[RTCP-CC-FEEDBACK]によって記載されるように十分であるべきです。"
    },
    {
      "indent": 0,
      "text": "5.2. Clock Skew",
      "section_title": true,
      "ja": "5.2. クロック・スキュー"
    },
    {
      "indent": 3,
      "text": "Generally, sender and receiver clock skew will be too small to cause significant errors in the estimators. skew_est and freq_est are the most sensitive to this type of noise due to their use of a mean OWD calculated over a longer interval. In circumstances where clock skew is high, basing skew_est only on the previous T's mean and ignoring freq_est provide a noisier but reliable signal.",
      "ja": "一般的には、送信側と受信側のクロック・スキューは推定で重大なエラーを引き起こすには小さすぎるだろう。 skew_estとfreq_estは、より長い期間にわたって計算された平均OWDのそれらの使用にこの種のノイズに最も敏感です。クロック・スキューが高い状況だけ前Tの平均値にskew_estを基づかとfreq_estノイズの多いが、信頼性の高い信号を提供無視しています。"
    },
    {
      "indent": 3,
      "text": "A more sophisticated method is to estimate the effect the clock skew is having on the summary statistics and then adjust statistics accordingly. There are a number of techniques in the literature, including [Zhang-Infocom02].",
      "ja": "より洗練された方法は、クロックスキューを要約統計量に有するという効果を推定し、それに応じて統計を調整することです。 [張-Infocom02]を含む文献において多数の技術が存在します。"
    },
    {
      "indent": 0,
      "text": "6. Expected Feedback from Experiments",
      "section_title": true,
      "ja": "実験から6予想のフィードバック"
    },
    {
      "indent": 3,
      "text": "The algorithm described in this memo has so far been evaluated using simulations and small-scale experiments. Real network tests using RTP Media Congestion Avoidance Techniques (RMCAT) congestion control algorithms will help confirm the default parameter choice. For example, the time interval T may need to be made longer if the packet rate is very low. Implementers and testers are invited to document their findings in an Internet-Draft.",
      "ja": "このメモで説明するアルゴリズムは、これまでのシミュレーションや小規模な実験を用いて評価されています。 RTPメディア輻輳回避テクニック（RMCAT）輻輳制御アルゴリズムを使用して実際のネットワークテストは、デフォルトのパラメータ選択を確認するのに役立ちます。例えば、時間間隔Tは、パケットレートが非常に低い場合長くする必要があるかもしれません。実装者やテスターはインターネットドラフトで調査結果を文書化するために招待されています。"
    },
    {
      "indent": 0,
      "text": "7. IANA Considerations",
      "section_title": true,
      "ja": "7. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "This document has no IANA actions.",
      "ja": "このドキュメントには、IANAのアクションを持っていません。"
    },
    {
      "indent": 0,
      "text": "8. Security Considerations",
      "section_title": true,
      "ja": "8.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "The security considerations of RFC 3550 [RFC3550], RFC 4585 [RFC4585], and RFC 5124 [RFC5124] are expected to apply.",
      "ja": "RFC 3550 [RFC3550]、RFC 4585 [RFC4585]、およびRFC 5124 [RFC5124]のセキュリティに関する考慮事項は適用が期待されています。"
    },
    {
      "indent": 3,
      "text": "Non-authenticated RTCP packets carrying OWD measurements, shared bottleneck indications, and/or summary statistics could allow attackers to alter the bottleneck-sharing characteristics for private gain or disruption of other parties' communication. When using SBD for coupled congestion control as described in [RTP-COUPLED-CC], the security considerations of [RTP-COUPLED-CC] apply.",
      "ja": "非認証OWD測定を運ぶRTCPパケット、共有ボトルネックの兆候、および/または要約統計量は、攻撃者が他の当事者のコミュニケーションの私的利益または破壊のためのボトルネック共有特性を変更する可能性があります。 [RTP結合-CC]で説明されるように結合された輻輳制御のためのSBDを使用する場合、[RTP結合-CC]のセキュリティ上の考慮事項が当てはまります。"
    },
    {
      "indent": 0,
      "text": "9. References",
      "section_title": true,
      "ja": "9.参考文献"
    },
    {
      "indent": 0,
      "text": "9.1. Normative References",
      "section_title": true,
      "ja": "9.1. 引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <https://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<https://www.rfc-editor.org/info/ RFC2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC8174] Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174, May 2017, <https://www.rfc-editor.org/info/rfc8174>.",
      "ja": "[RFC8174] Leiba、B.、 \"RFC 2119個のキーワードに小文字VS大文字の曖昧さ\"、BCP 14、RFC 8174、DOI 10.17487 / RFC8174、2017年5月、<https://www.rfc-editor.org/info/ rfc8174>。"
    },
    {
      "indent": 0,
      "text": "9.2. Informative References",
      "section_title": true,
      "ja": "9.2. 参考文献"
    },
    {
      "indent": 3,
      "text": "[Hayes-LCN14] Hayes, D., Ferlin, S., and M. Welzl, \"Practical Passive Shared Bottleneck Detection using Shape Summary Statistics\", Proc. IEEE Local Computer Networks (LCN), pp. 150-158, DOI 10.1109/LCN.2014.6925767, September 2014, <http://heim.ifi.uio.no/davihay/ hayes14__pract_passiv_shared_bottl_detec-abstract.html>.",
      "ja": "[ヘイズ-LCN14]ヘイズ、D.、Ferlin、S.、およびM. Welzl、 \"実用的な受動的共有ボトルネック検出による形状要約統計\"、PROC。 IEEEローカルコンピュータネットワーク（LCN）、頁150-158、DOI 10.1109 / LCN.2014.6925767、2014年9月、<http://heim.ifi.uio.no/davihay/ hayes14__pract_passiv_shared_bottl_detec-abstract.html>。"
    },
    {
      "indent": 3,
      "text": "[RFC3550] Schulzrinne, H., Casner, S., Frederick, R., and V. Jacobson, \"RTP: A Transport Protocol for Real-Time Applications\", STD 64, RFC 3550, DOI 10.17487/RFC3550, July 2003, <https://www.rfc-editor.org/info/rfc3550>.",
      "ja": "[RFC3550] Schulzrinneと、H.、Casner、S.、フレデリック、R.、およびV.ヤコブソン、 \"RTP：リアルタイムアプリケーションのためのトランスポートプロトコル\"、STD 64、RFC 3550、DOI 10.17487 / RFC3550、2003年7月、 <https://www.rfc-editor.org/info/rfc3550>。"
    },
    {
      "indent": 3,
      "text": "[RFC4585] Ott, J., Wenger, S., Sato, N., Burmeister, C., and J. Rey, \"Extended RTP Profile for Real-time Transport Control Protocol (RTCP)-Based Feedback (RTP/AVPF)\", RFC 4585, DOI 10.17487/RFC4585, July 2006, <https://www.rfc-editor.org/info/rfc4585>.",
      "ja": "[RFC4585]オット、J.、ウェンガー、S.、佐藤、N.、Burmeister、C.、およびJ.レイ「ベースのフィードバック（RTP / AVPF）リアルタイムトランスポート制御プロトコル（RTCP）の拡張RTPプロファイル」、RFC 4585、DOI 10.17487 / RFC4585、2006年7月、<https://www.rfc-editor.org/info/rfc4585>。"
    },
    {
      "indent": 3,
      "text": "[RFC5124] Ott, J. and E. Carrara, \"Extended Secure RTP Profile for Real-time Transport Control Protocol (RTCP)-Based Feedback (RTP/SAVPF)\", RFC 5124, DOI 10.17487/RFC5124, February 2008, <https://www.rfc-editor.org/info/rfc5124>.",
      "ja": "[RFC5124]オット、J.及びE.カララ、RFC 5124、DOI 10.17487 / RFC5124、2008年2月、<HTTPS \"ベースのフィードバック（RTP / SAVPF）リアルタイムトランスポート制御プロトコル（RTCP）の拡張セキュアRTPプロファイル\" ：//www.rfc-editor.org/info/rfc5124>。"
    },
    {
      "indent": 3,
      "text": "[RFC6817] Shalunov, S., Hazel, G., Iyengar, J., and M. Kuehlewind, \"Low Extra Delay Background Transport (LEDBAT)\", RFC 6817, DOI 10.17487/RFC6817, December 2012, <https://www.rfc-editor.org/info/rfc6817>.",
      "ja": "[RFC6817] Shalunov、S.、ヘーゼル、G.、アイアンガー、J.、およびM. Kuehlewind、 \"低余分な遅延の背景トランスポート（LEDBAT）\"、RFC 6817、DOI 10.17487 / RFC6817、2012年12月、<https：//でwww.rfc-editor.org/info/rfc6817>。"
    },
    {
      "indent": 3,
      "text": "[RFC7679] Almes, G., Kalidindi, S., Zekauskas, M., and A. Morton, Ed., \"A One-Way Delay Metric for IP Performance Metrics (IPPM)\", STD 81, RFC 7679, DOI 10.17487/RFC7679, January 2016, <https://www.rfc-editor.org/info/rfc7679>.",
      "ja": "[RFC7679] Almes、G.、Kalidindi、S.、Zekauskas、M.、およびA.モートン編、 \"IPパフォーマンス・メトリックのための一方向遅延メトリック（IPPM）\"、STD 81、RFC 7679、DOI 10.17487 / RFC7679、2016年1月、<https://www.rfc-editor.org/info/rfc7679>。"
    },
    {
      "indent": 3,
      "text": "[RFC7680] Almes, G., Kalidindi, S., Zekauskas, M., and A. Morton, Ed., \"A One-Way Loss Metric for IP Performance Metrics (IPPM)\", STD 82, RFC 7680, DOI 10.17487/RFC7680, January 2016, <https://www.rfc-editor.org/info/rfc7680>.",
      "ja": "[RFC7680] Almes、G.、Kalidindi、S.、Zekauskas、M.、およびA.モートン編、 \"一方向損失メトリックIPパフォーマンス・メトリック（IPPM）のための\"、STD 82、RFC 7680、DOI 10.17487 / RFC7680、2016年1月、<https://www.rfc-editor.org/info/rfc7680>。"
    },
    {
      "indent": 3,
      "text": "[RTCP-CC-FEEDBACK] Sarker, Z., Perkins, C., Singh, V., and M. Ramalho, \"RTP Control Protocol (RTCP) Feedback for Congestion Control\", Work in Progress, draft-ietf-avtcore-cc-feedback-message-01, March 2018.",
      "ja": "[RTCP-CC-FEEDBACK] Sarker、Z.、パーキンス、C.、シン、V.、およびM. Ramalho、 \"RTP制御プロトコル輻輳制御のための（RTCP）フィードバック\"、進行中で働いて、ドラフトIETF-avtcore- CC-フィードバックメッセージ-01、2018年3月。"
    },
    {
      "indent": 3,
      "text": "[RTP-COUPLED-CC] Islam, S., Welzl, M., and S. Gjessing, \"Coupled congestion control for RTP media\", Work in Progress, draft-ietf-rmcat-coupled-cc-07, September 2017.",
      "ja": "[RTP結合-CC]イスラム教、S.、Welzl、M.、およびS. Gjessing、 \"RTPメディア用輻輳制御を結合\"、進行中で働いて、ドラフトIETF-rmcat結合-CC-07、2017年9月。"
    },
    {
      "indent": 3,
      "text": "[Zhang-Infocom02] Zhang, L., Liu, Z., and H. Xia, \"Clock synchronization algorithms for network measurements\", Proc. IEEE International Conference on Computer Communications (INFOCOM), pp. 160-169, DOI 10.1109/INFCOM.2002.1019257, September 2002.",
      "ja": "[張-Infocom02]チャン、L.、劉、Z.、およびH.夏、 \"ネットワーク測定のためのクロック同期アルゴリズム\"、PROC。コンピュータ通信に関するIEEE国際会議（インフォコム）、頁160から169、DOI 10.1109 / INFCOM.2002.1019257、2002年9月。"
    },
    {
      "indent": 0,
      "text": "Acknowledgments",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "This work was partially funded by the European Community under its Seventh Framework Programme through the Reducing Internet Transport Latency (RITE) project (ICT-317700). The views expressed are solely those of the authors.",
      "ja": "この作品は、部分的に削減するインターネット交通レイテンシ（RITE）プロジェクト（ICT-317700）を介して、その第七次フレームワーク・プログラムの下で欧州共同体によって賄われていました。見解はもっぱら著者のものです。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "David Hayes (editor) Simula Research Laboratory P.O. Box 134 Lysaker 1325 Norway",
      "ja": "デビッド・ヘイズ（エディタ）Simulaの研究所の私書箱ボックス134リサーカー1325ノルウェー"
    },
    {
      "indent": 3,
      "text": "Email: davidh@simula.no",
      "ja": "メール：davidh@simula.no"
    },
    {
      "indent": 3,
      "text": "Simone Ferlin Simula Research Laboratory P.O. Box 134 Lysaker 1325 Norway",
      "ja": "シモーネFerlin Simulaの研究所の私書箱ボックス134リサーカー1325ノルウェー"
    },
    {
      "indent": 3,
      "text": "Email: simone@ferlin.io",
      "ja": "メール：simone@ferlin.io"
    },
    {
      "indent": 3,
      "text": "Michael Welzl University of Oslo P.O. Box 1080 Blindern Oslo N-0316 Norway",
      "ja": "オスロの私書箱のマイケル・Welzl大学ボックス1080 BlindernveienオスロN-0316ノルウェー"
    },
    {
      "indent": 3,
      "text": "Email: michawe@ifi.uio.no",
      "ja": "メール：michawe@ifi.uio.no"
    },
    {
      "indent": 3,
      "text": "Kristian Hiorth University of Oslo P.O. Box 1080 Blindern Oslo N-0316 Norway",
      "ja": "オスロの私書箱のクリスチャンHiorth大学ボックス1080 BlindernveienオスロN-0316ノルウェー"
    },
    {
      "indent": 3,
      "text": "Email: kristahi@ifi.uio.no",
      "ja": "メール：kristahi@ifi.uio.no"
    }
  ]
}