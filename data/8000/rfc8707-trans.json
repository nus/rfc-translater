{
  "title": {
    "text": "RFC 8707 - Resource Indicators for OAuth 2.0",
    "ja": "RFC 8707 - OAuth 2.0のリソースインジケーター"
  },
  "number": 8707,
  "created_at": "2020-03-11 15:17:26.577184+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                       B. Campbell\nRequest for Comments: 8707                                 Ping Identity\nCategory: Standards Track                                     J. Bradley\nISSN: 2070-1721                                                   Yubico\n                                                           H. Tschofenig\n                                                             Arm Limited\n                                                           February 2020",
      "raw": true
    },
    {
      "indent": 19,
      "text": "Resource Indicators for OAuth 2.0",
      "ja": "OAuth 2.0のリソースインジケーター"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document specifies an extension to the OAuth 2.0 Authorization Framework defining request parameters that enable a client to explicitly signal to an authorization server about the identity of the protected resource(s) to which it is requesting access.",
      "ja": "このドキュメントは、クライアントがアクセスを要求している保護されたリソースのIDについて認可サーバーに明示的に信号を送ることを可能にする要求パラメーターを定義するOAuth 2.0認可フレームワークの拡張を指定します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これはインターネット標準化過程の文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 7841.",
      "ja": "このドキュメントは、Internet Engineering Task Force（IETF）の製品です。 IETFコミュニティのコンセンサスを表しています。 これは公開レビューを受けており、Internet Engineering Steering Group（IESG）による公開が承認されています。 インターネット標準の詳細については、RFC 7841のセクション2を参照してください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc8707.",
      "ja": "このドキュメントの現在のステータス、エラータ、およびフィードバックの提供方法に関する情報は、https：//www.rfc-editor.org/info/rfc8707で入手できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2020 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（c）2020 IETF Trustおよび文書作成者として特定された人物。 全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "このドキュメントは、このドキュメントの公開日に有効なBCP 78およびIETFトラストのIETFドキュメントに関連する法的条項（https://trustee.ietf.org/license-info）の対象となります。 これらのドキュメントは、このドキュメントに関するあなたの権利と制限を説明しているので、注意深く確認してください。 このドキュメントから抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているSimplified BSD Licenseテキストを含める必要があり、Simplified BSD Licenseに記載されている保証なしで提供されます。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction 1.1. Requirements Notation and Conventions 1.2. Terminology 2. Resource Parameter 2.1. Authorization Request 2.2. Access Token Request 3. Security Considerations 4. Privacy Considerations 5. IANA Considerations 5.1. OAuth Parameters Registration 5.2. OAuth Extensions Error Registration 6. References 6.1. Normative References 6.2. Informative References Acknowledgements Authors' Addresses",
      "ja": "1. はじめに1.1。 要件の表記と規則1.2。 用語2.リソースパラメータ2.1。 承認リクエスト2.2。 アクセストークンリクエスト3.セキュリティに関する考慮事項4.プライバシーに関する考慮事項5. IANAに関する考慮事項5.1。 OAuthパラメーターの登録5.2。 OAuth拡張エラー登録6.参照6.1。 規範的な参考資料6.2。 参考情報謝辞著者のアドレス"
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "Several years of deployment and implementation experience with the OAuth 2.0 Authorization Framework [RFC6749] has uncovered a need (in some circumstances, such as an authorization server servicing a significant number of diverse resources) for the client to explicitly signal to the authorization server where it intends to use the access token it is requesting.",
      "ja": "OAuth 2.0承認フレームワーク[RFC6749]での数年間の展開と実装の経験により、クライアントが承認サーバーに明示的にシグナルを送信する必要性（状況によっては、多数の多様なリソースを提供する承認サーバーなど）が明らかになりました 要求しているアクセストークンを使用する予定です。"
    },
    {
      "indent": 3,
      "text": "Knowing the protected resource (a.k.a. resource server, application, API, etc.) that will process the access token enables the authorization server to construct the token as necessary for that entity. Properly encrypting the token (or content within the token) to a particular resource, for example, requires knowing which resource will receive and decrypt the token. Furthermore, various resources oftentimes have different requirements with respect to the data contained in (or referenced by) the token, and knowing the resource where the client intends to use the token allows the authorization server to mint the token accordingly.",
      "ja": "アクセストークンを処理する保護されたリソース（リソースサーバー、アプリケーション、APIなど）を知ることで、承認サーバーはそのエンティティに必要なトークンを構築できます。 たとえば、トークン（またはトークン内のコンテンツ）を特定のリソースに適切に暗号化するには、どのリソースがトークンを受信して解読するかを知る必要があります。 さらに、多くの場合、さまざまなリソースはトークンに含まれる（または参照される）データに関して異なる要件を持ち、クライアントがトークンを使用するリソースを知ることで、承認サーバーはそれに応じてトークンを作成できます。"
    },
    {
      "indent": 3,
      "text": "Specific knowledge of the intended recipient(s) of the access token also helps facilitate improved security characteristics of the token itself. Bearer tokens, currently the most commonly utilized type of OAuth access token, allow any party in possession of a token to get access to the associated resources. To prevent misuse, several important security assumptions must hold, one of which is that an access token must only be valid for use at a specific protected resource and for a specific scope of access. Section 5.2 of [RFC6750], for example, prescribes including the token's intended recipients within the token to prevent token redirect. When the authorization server is informed of the resource that will process the access token, it can restrict the intended audience of that token to the given resource such that the token cannot be used successfully at other resources.",
      "ja": "アクセストークンの受信者に関する特定の知識は、トークン自体のセキュリティ特性の向上を促進するのにも役立ちます。 現在最も一般的に使用されているOAuthアクセストークンのタイプであるベアラートークンにより、トークンを所有しているすべての関係者が関連リソースにアクセスできます。 誤用を防ぐために、いくつかの重要なセキュリティの前提を保持する必要があります。その1つは、アクセストークンが特定の保護されたリソースおよび特定のアクセス範囲でのみ使用できる必要があるということです。 [RFC6750]のセクション5.2では、たとえば、トークンのリダイレクトを防ぐために、トークン内にトークンの対象受信者を含めるように規定しています。 認可サーバーにアクセストークンを処理するリソースが通知されると、そのトークンの対象ユーザーを特定のリソースに制限して、トークンを他のリソースで正常に使用できないようにすることができます。"
    },
    {
      "indent": 3,
      "text": "OAuth scope, from Section 3.3 of [RFC6749], is sometimes overloaded to convey the location or identity of the protected resource, however, doing so isn't always feasible or desirable. Scope is typically about what access is being requested rather than where that access will be redeemed (e.g., \"email\", \"admin:org\", \"user_photos\", \"channels:read\", and \"channels:write\" are a small sample of scope values in use in the wild that convey only the type of access and not the location or identity).",
      "ja": "[RFC6749]のセクション3.3からのOAuthスコープは、保護されたリソースの場所またはIDを伝えるためにオーバーロードされることがありますが、そうすることは常に実行可能または望ましいとは限りません。 通常、スコープは、アクセスが引き換えられる場所ではなく、どのアクセスが要求されているかについてです（たとえば、「email」、「admin：org」、「user_photos」、「channels：read」、「channels：write」は小さなサンプルです） アクセスの種類のみを伝達し、場所やアイデンティティは伝達しない、野生で使用されているスコープ値の）。"
    },
    {
      "indent": 3,
      "text": "In some circumstances and for some deployments, a means for the client to signal to the authorization server where it intends to use the access token it's requesting is important and useful. A number of implementations and deployments of OAuth 2.0 have already employed proprietary parameters toward that end. Going forward, this specification aspires to provide a standardized and interoperable alternative to the proprietary approaches.",
      "ja": "状況によっては、一部の展開では、クライアントが要求しているアクセストークンを使用する場所を承認サーバーに通知する手段が重要で便利です。 OAuth 2.0の多くの実装と展開では、その目的のために既に独自のパラメーターを採用しています。 今後、この仕様は、独自のアプローチに対する標準化された相互運用可能な代替案を提供することを目指しています。"
    },
    {
      "indent": 0,
      "text": "1.1. Requirements Notation and Conventions",
      "section_title": true,
      "ja": "1.1. 要件の表記と規則"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.",
      "ja": "この文書のキーワード \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", および \"OPTIONAL\" はBCP 14 [RFC2119] [RFC8174]で説明されているように、すべて大文字の場合にのみ解釈されます。"
    },
    {
      "indent": 0,
      "text": "1.2. Terminology",
      "section_title": true,
      "ja": "1.2. 用語"
    },
    {
      "indent": 3,
      "text": "This specification uses the terms \"access token\", \"refresh token\", \"authorization server\", \"resource server\", \"authorization endpoint\", \"authorization request\", \"authorization response\", \"token endpoint\", \"grant type\", \"access token request\", \"access token response\", and \"client\" defined by The OAuth 2.0 Authorization Framework [RFC6749].",
      "ja": "この仕様では、「アクセストークン」、「リフレッシュトークン」、「認可サーバー」、「リソースサーバー」、「認可エンドポイント」、「認可リクエスト」、「認可レスポンス」、「トークンエンドポイント」、「認可タイプ」、 OAuth 2.0認可フレームワーク[RFC6749]で定義されている「アクセストークン要求」、「アクセストークン応答」、および「クライアント」。"
    },
    {
      "indent": 0,
      "text": "2. Resource Parameter",
      "section_title": true,
      "ja": "2. リソースパラメータ"
    },
    {
      "indent": 3,
      "text": "In requests to the authorization server, a client MAY indicate the protected resource (a.k.a. resource server, application, API, etc.) to which it is requesting access by including the following parameter in the request.",
      "ja": "認可サーバーへのリクエストでは、クライアントは、リクエストに次のパラメータを含めることで、アクセスをリクエストしている保護リソース（リソースサーバー、アプリケーション、APIなど）を示すことができます。"
    },
    {
      "indent": 3,
      "text": "resource Indicates the target service or resource to which access is being requested. Its value MUST be an absolute URI, as specified by Section 4.3 of [RFC3986]. The URI MUST NOT include a fragment component. It SHOULD NOT include a query component, but it is recognized that there are cases that make a query component a useful and necessary part of the resource parameter, such as when one or more query parameters are used to scope requests to an application. The \"resource\" parameter URI value is an identifier representing the identity of the resource, which MAY be a locator that corresponds to a network-addressable location where the target resource is hosted. Multiple \"resource\" parameters MAY be used to indicate that the requested token is intended to be used at multiple resources.",
      "ja": "resourceアクセスが要求されているターゲットサービスまたはリソースを示します。 [RFC3986]のセクション] 4.3で指定されているように、その値は絶対URIでなければなりません。 URIにはフラグメントコンポーネントを含めることはできません。 クエリコンポーネントを含めるべきではありませんが、1つ以上のクエリパラメータを使用してアプリケーションへのリクエストをスコープする場合など、クエリコンポーネントをリソースパラメータの有用かつ必要な部分にする場合があることが認識されています。 「リソース」パラメータURI値は、リソースのIDを表す識別子であり、ターゲットリソースがホストされているネットワークアドレス可能な場所に対応するロケーターである場合があります。 複数の「リソース」パラメータを使用して、要求されたトークンが複数のリソースで使用されることを示す場合があります。"
    },
    {
      "indent": 3,
      "text": "The parameter value identifies a resource to which the client is requesting access. The parameter can carry the location of a protected resource, typically as an https URL or a more abstract identifier. This enables the authorization server to apply policy as appropriate for the resource, such as determining the type and content of tokens to be issued, if and how tokens are encrypted, and applying appropriate audience restrictions.",
      "ja": "パラメーター値は、クライアントがアクセスを要求しているリソースを識別します。 このパラメーターは、通常https URLまたはより抽象的な識別子として、保護されたリソースの場所を保持できます。 これにより、承認サーバーは、発行するトークンの種類と内容、トークンの暗号化方法と暗号化方法の決定、適切なオーディエンス制限の適用など、リソースに適したポリシーを適用できます。"
    },
    {
      "indent": 3,
      "text": "The client SHOULD provide the most specific URI that it can for the complete API or set of resources it intends to access. In practice, a client will know a base URI for the application or resource that it interacts with, which is appropriate to use as the value of the \"resource\" parameter. The client SHOULD use the base URI of the API as the \"resource\" parameter value unless specific knowledge of the resource dictates otherwise. For example, the value \"https://api.example.com/\" would be used for a resource that is the exclusive application on that host; however, if the resource is one of many applications on that host, something like \"https://api.example.com/app/\" would be used as a more specific value. Another example is when an API has multiple endpoints, e.g., when System for Cross-domain Identity Management (SCIM) [RFC7644] has endpoints such as \"https://apps.example.com/scim/Users\", \"https://apps.example.com/scim/Groups\", and \"https://apps.example.com/scim/Schemas\". The client would use \"https://apps.example.com/scim/\" as the resource so that the issued access token is valid for all the endpoints of the SCIM API.",
      "ja": "クライアントは、アクセスする予定の完全なAPIまたはリソースのセットに使用できる最も具体的なURIを提供する必要があります。実際には、クライアントは、対話するアプリケーションまたはリソースのベースURIを認識します。これは、「リソース」パラメーターの値として使用するのに適しています。クライアントは、リソースの特定の知識が別の方法で指示しない限り、APIのベースURIを「リソース」パラメーター値として使用する必要があります。たとえば、値「https://api.example.com/」は、そのホスト上の排他アプリケーションであるリソースに使用されます。ただし、リソースがそのホスト上の多くのアプリケーションの1つである場合、「https://api.example.com/app/」のようなものがより具体的な値として使用されます。別の例は、APIに複数のエンドポイントがある場合、たとえば、クロスドメインID管理（SCIM）[RFC7644]のシステムに「https://apps.example.com/scim/Users」、「https:/」などのエンドポイントがある場合です。 /apps.example.com/scim/Groups」、および「https://apps.example.com/scim/Schemas」。クライアントは、リソースとして「https://apps.example.com/scim/」を使用するため、発行されたアクセストークンはSCIM APIのすべてのエンドポイントに対して有効です。"
    },
    {
      "indent": 3,
      "text": "The following error code is provided for an authorization server to indicate problems with the requested resource(s) in response to an authorization request or access token request. It can also be used to inform the client that it has requested an invalid combination of resource and scope.",
      "ja": "次のエラーコードは、認可サーバーに提供され、認可リクエストまたはアクセストークンリクエストへの応答として、リクエストされたリソースの問題を示します。 また、リソースとスコープの無効な組み合わせを要求したことをクライアントに通知するためにも使用できます。"
    },
    {
      "indent": 3,
      "text": "invalid_target The requested resource is invalid, missing, unknown, or malformed.",
      "ja": "invalid_target要求されたリソースは無効、欠落、不明、または不正な形式です。"
    },
    {
      "indent": 3,
      "text": "The authorization server SHOULD audience-restrict issued access tokens to the resource(s) indicated by the \"resource\" parameter. Audience restrictions can be communicated in JSON Web Tokens [RFC7519] with the \"aud\" claim and the top-level member of the same name provides the audience restriction information in a Token Introspection [RFC7662] response. The authorization server may use the exact \"resource\" value as the audience or it may map from that value to a more general URI or abstract identifier for the given resource.",
      "ja": "認可サーバーは、「resource」パラメーターで示されたリソースへのオーディエンス制限発行済みアクセストークンをSHOULDします。 オーディエンス制限は、JSON Webトークン[RFC7519]で「aud」クレームと通信でき、同じ名前の最上位メンバーがトークンイントロスペクション[RFC7662]応答でオーディエンス制限情報を提供します。 認可サーバーは、正確な「リソース」値を対象ユーザーとして使用するか、その値から特定のリソースのより一般的なURIまたは抽象識別子にマップする場合があります。"
    },
    {
      "indent": 0,
      "text": "2.1. Authorization Request",
      "section_title": true,
      "ja": "2.1. 認可リクエスト"
    },
    {
      "indent": 3,
      "text": "When the \"resource\" parameter is used in an authorization request to the authorization endpoint, it indicates the identity of the protected resource(s) to which access is being requested. When an access token will be returned directly from the authorization endpoint via the implicit flow (Section 4.2 of OAuth 2.0 [RFC6749]), the requested resource is applicable to that access token. In the code flow (Section 4.1 of OAuth 2.0 [RFC6749]) where an intermediate representation of the authorization grant (the authorization code) is returned from the authorization endpoint, the requested resource is applicable to the full authorization grant.",
      "ja": "「resource」パラメーターが許可エンドポイントへの許可要求で使用される場合、アクセスが要求されている保護されたリソースのIDを示します。 暗黙的なフロー（OAuth 2.0 [RFC6749]のセクション4.2）を介して許可エンドポイントからアクセストークンが直接返される場合、要求されたリソースはそのアクセストークンに適用できます。 承認付与の中間表現（承認コード）が承認エンドポイントから返されるコードフロー（OAuth 2.0 [RFC6749]のセクション4.1）では、要求されたリソースは完全な承認付与に適用されます。"
    },
    {
      "indent": 3,
      "text": "For an authorization request sent as a JSON Web Token (JWT), such as when using the JWT Secured Authorization Request [JWT-SAR], a single \"resource\" parameter value is represented as a JSON string while multiple values are represented as an array of strings.",
      "ja": "JWT Secured Authorization Request [JWT-SAR]を使用する場合など、JSON Web Token（JWT）として送信される承認要求の場合、単一の「リソース」パラメーター値はJSON文字列として表され、複数の値は配列として表されます 文字列の。"
    },
    {
      "indent": 3,
      "text": "If the client omits the \"resource\" parameter when requesting authorization, the authorization server MAY process the request with no specific resource or by using a predefined default resource value. Alternatively, the authorization server MAY require clients to specify the resource(s) they intend to access and MAY fail requests that omit the parameter with an \"invalid_target\" error. The authorization server might use this data to inform the user about the resources the client is going to access on their behalf, to apply policy (e.g., refuse the request due to unknown resources), and to determine the set of resources that can be used in subsequent access token requests.",
      "ja": "クライアントが許可を要求するときに「resource」パラメーターを省略した場合、許可サーバーは特定のリソースなしで、または事前定義されたデフォルトのリソース値を使用して要求を処理できます。 あるいは、認可サーバーは、クライアントがアクセスするリソースを指定することをクライアントに要求し、「invalid_target」エラーでパラメーターを省略したリクエストに失敗する場合があります。 認可サーバーはこのデータを使用して、クライアントがユーザーに代わってアクセスするリソースについてユーザーに通知し、ポリシーを適用し（たとえば、不明なリソースのために要求を拒否し）、使用できるリソースのセットを決定します 後続のアクセストークン要求で。"
    },
    {
      "indent": 3,
      "text": "If the authorization server fails to parse the provided value(s) or does not consider the resource(s) acceptable, it should reject the request with an error response using the error code \"invalid_target\" as the value of the \"error\" parameter and can provide additional information regarding the reasons for the error using the \"error_description\".",
      "ja": "認可サーバーが提供された値の解析に失敗した場合、またはリソースを受け入れ可能と見なさない場合、「error」パラメーターの値としてエラーコード「invalid_target」を使用し、エラー応答でリクエストを拒否する必要があります。 「error_description」を使用して、エラーの理由に関する追加情報を提供できます。"
    },
    {
      "indent": 3,
      "text": "An example of an authorization request where the client tells the authorization server that it wants an access token for use at \"https://api.example.com/app/\" is shown in Figure 1 below (extra line breaks and indentation are for display purposes only).",
      "ja": "「https://api.example.com/app/」で使用するアクセストークンが必要であることをクライアントが許可サーバーに通知する許可リクエストの例を以下の図1に示します（追加の改行とインデントは 表示のみ）。"
    },
    {
      "indent": 5,
      "text": "GET /as/authorization.oauth2?response_type=token\n   &client_id=example-client\n   &state=XzZaJlcwYew1u0QBrRv_Gw\n   &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb\n   &resource=https%3A%2F%2Fapi.example.com%2Fapp%2F HTTP/1.1\nHost: authorization-server.example.com",
      "raw": true
    },
    {
      "indent": 15,
      "text": "Figure 1: Implicit Flow Authorization Request",
      "ja": "図1：暗黙的なフロー承認要求"
    },
    {
      "indent": 3,
      "text": "Below in Figure 2 is an example of an authorization request using the \"code\" response type where the client is requesting access to the resource owner's contacts and calendar data at \"https://cal.example.com/\" and \"https://contacts.example.com/\" (extra line breaks and indentation are for display purposes only).",
      "ja": "以下の図2は、クライアントが「https://cal.example.com/」および「https：/」にあるリソース所有者の連絡先とカレンダーデータへのアクセスを要求している「コード」応答タイプを使用した承認要求の例です。 /contacts.example.com/ \"（余分な改行とインデントは表示のみを目的としています）。"
    },
    {
      "indent": 5,
      "text": "GET /as/authorization.oauth2?response_type=code\n   &client_id=s6BhdRkqt3\n   &state=tNwzQ87pC6llebpmac_IDeeq-mCR2wLDYljHUZUAWuI\n   &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb\n   &scope=calendar%20contacts\n   &resource=https%3A%2F%2Fcal.example.com%2F\n   &resource=https%3A%2F%2Fcontacts.example.com%2F HTTP/1.1\nHost: authorization-server.example.com",
      "raw": true
    },
    {
      "indent": 17,
      "text": "Figure 2: Code Flow Authorization Request",
      "ja": "図2：コードフロー認証リクエスト"
    },
    {
      "indent": 0,
      "text": "2.2. Access Token Request",
      "section_title": true,
      "ja": "2.2. アクセストークンリクエスト"
    },
    {
      "indent": 3,
      "text": "When the \"resource\" parameter is used on an access token request made to the token endpoint, for all grant types, it indicates the target service or protected resource where the client intends to use the requested access token.",
      "ja": "トークンエンドポイントへのアクセストークン要求で「リソース」パラメーターが使用されている場合、すべての付与タイプについて、クライアントが要求されたアクセストークンを使用しようとしているターゲットサービスまたは保護されたリソースを示します。"
    },
    {
      "indent": 3,
      "text": "The resource value(s) that is acceptable to an authorization server in fulfilling an access token request is at its sole discretion based on local policy or configuration. In the case of a \"refresh_token\" or \"authorization_code\" grant type request, such policy may limit the acceptable resources to those that were originally granted by the resource owner or a subset thereof. In the \"authorization_code\" case where the requested resources are a subset of the set of resources originally granted, the authorization server will issue an access token based on that subset of requested resources, whereas any refresh token that is returned is bound to the full original grant.",
      "ja": "アクセストークン要求を実行する際に承認サーバーに受け入れられるリソース値は、ローカルポリシーまたは構成に基づいて独自の裁量で決定されます。 「refresh_token」または「authorization_code」付与タイプのリクエストの場合、そのようなポリシーは、リソースの所有者またはそのサブセットによって最初に付与されたリソースに許容可能なリソースを制限する場合があります。 要求されたリソースが元々許可されたリソースのセットのサブセットである「authorization_code」の場合、許可サーバーは要求されたリソースのサブセットに基づいてアクセストークンを発行しますが、返されるリフレッシュトークンは完全なオリジナルにバインドされます 付与。"
    },
    {
      "indent": 3,
      "text": "When requesting a token, the client can indicate the desired target service(s) where it intends to use that token by way of the \"resource\" parameter and can indicate the desired scope of the requested token using the \"scope\" parameter. The semantics of such a request are that the client is asking for a token with the requested scope that is usable at all the requested target services. Effectively, the requested access rights of the token are the cartesian product of all the scopes at all the target services. To the extent possible, when issuing access tokens, the authorization server should downscope the scope value associated with an access token to the value the respective resource is able to process and needs to know. (Here, \"downscope\" means give fewer permissions than originally authorized by the resource owner.) This further improves privacy as a list of scope values is an indication that the resource owner uses the multiple various services listed; downscoping a token to only that which is needed for a particular service can limit the extent to which such information is revealed across different services. As specified in Section 5.1 of [RFC6749], the authorization server must indicate the access token's effective scope to the client in the \"scope\" response parameter value when it differs from the scope requested by the client.",
      "ja": "トークンを要求する場合、クライアントは「resource」パラメーターを使用してそのトークンを使用する目的のターゲットサービスを示し、「scope」パラメーターを使用して要求されたトークンの目的のスコープを示すことができます。このような要求のセマンティクスは、クライアントが、要求されたすべてのターゲットサービスで使用可能な要求されたスコープを持つトークンを要求しているということです。事実上、トークンの要求されたアクセス権は、すべてのターゲットサービスのすべてのスコープのデカルト積です。可能な限り、アクセストークンを発行するとき、承認サーバーは、アクセストークンに関連付けられたスコープ値を、それぞれのリソースが処理でき、知る必要がある値にダウンスコープする必要があります。 （ここで、「ダウンスコープ」は、リソース所有者が元々許可したよりも少ない許可を与えることを意味します。）スコープ値のリストはリソース所有者がリストされた複数のさまざまなサービスを使用することを示すため、プライバシーがさらに向上します。特定のサービスに必要なトークンのみにトークンをダウンスコープすると、そのような情報がさまざまなサービスで公開される範囲を制限できます。 [RFC6749]のセクション5.1で指定されているように、認可サーバーは、クライアントが要求するスコープと異なる場合、「scope」応答パラメーター値でアクセストークンの有効なスコープをクライアントに示す必要があります。"
    },
    {
      "indent": 3,
      "text": "Following from the code flow authorization request shown in Figure 2, the below examples show an \"authorization_code\" grant type access token request (Figure 3) and response (Figure 4) where the client tells the authorization server that it wants the access token for use at \"https://cal.example.com/\" (extra line breaks and indentation are for display purposes only).",
      "ja": "図2に示したコードフローの承認要求に続いて、以下の例は、「authorization_code」付与タイプのアクセストークン要求（図3）と応答（図4）を示しています。 「https://cal.example.com/」で（余分な改行とインデントは表示のみを目的としています）。"
    },
    {
      "indent": 5,
      "text": "POST /as/token.oauth2 HTTP/1.1\nHost: authorization-server.example.com\nAuthorization: Basic czZCaGRSa3F0Mzpoc3FFelFsVW9IQUU5cHg0RlNyNHlJ\nContent-Type: application/x-www-form-urlencoded",
      "raw": true
    },
    {
      "indent": 5,
      "text": "grant_type=authorization_code &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb &code=10esc29BWC2qZB0acc9v8zAv9ltc2pko105tQauZ &resource=https%3A%2F%2Fcal.example.com%2F",
      "ja": "grant_type = authorization_code＆redirect_uri = https％3A％2F％2Fclient.example.org％2Fcb＆code = 10esc29BWC2qZB0acc9v8zAv9ltc2pko105tQauZ＆resource = https％3A％2F％2Fcal.example.com％2F"
    },
    {
      "indent": 23,
      "text": "Figure 3: Access Token Request",
      "ja": "図3：アクセストークンリクエスト"
    },
    {
      "indent": 6,
      "text": "HTTP/1.1 200 OK Content-Type: application/json Cache-Control: no-cache, no-store",
      "ja": "HTTP / 1.1 200 OK Content-Type：application / json Cache-Control：no-cache、no-store"
    },
    {
      "indent": 6,
      "text": "{\n   \"access_token\":\"eyJhbGciOiJFUzI1NiIsImtpZCI6Ijc3In0.eyJpc3MiOi\n    JodHRwOi8vYXV0aG9yaXphdGlvbi1zZXJ2ZXIuZXhhbXBsZS5jb20iLCJzdWI\n    iOiJfX2JfYyIsImV4cCI6MTU4ODQyMDgwMCwic2NvcGUiOiJjYWxlbmRhciIs\n    ImF1ZCI6Imh0dHBzOi8vY2FsLmV4YW1wbGUuY29tLyJ9.nNWJ2dXSxaDRdMUK\n    lzs-cYIj8MDoM6Gy7pf_sKrLGsAFf1C2bDhB60DQfW1DZL5npdko1_Mmk5sUf\n    zkiQNVpYw\",\n   \"token_type\":\"Bearer\",\n   \"expires_in\":3600,\n   \"refresh_token\":\"4LTC8lb0acc6Oy4esc1Nk9BWC0imAwH7kic16BDC2\",\n   \"scope\":\"calendar\"\n}",
      "raw": true
    },
    {
      "indent": 22,
      "text": "Figure 4: Access Token Response",
      "ja": "図4：アクセストークンレスポンス"
    },
    {
      "indent": 3,
      "text": "A subsequent access token request, using the refresh token, where the client tells the authorization server that it wants an access token for use at \"https://contacts.example.com/\" is shown in Figure 5 below with the response shown in Figure 6 (extra line breaks and indentation are for display purposes only).",
      "ja": "クライアントが「https://contacts.example.com/」で使用するためのアクセストークンを必要とすることを承認サーバーに伝える、更新トークンを使用した後続のアクセストークン要求を、図5に示し、応答を 図6（余分な改行とインデントは表示のみを目的としています）。"
    },
    {
      "indent": 5,
      "text": "POST /as/token.oauth2 HTTP/1.1\nHost: authorization-server.example.com\nAuthorization: Basic czZCaGRSa3F0Mzpoc3FFelFsVW9IQUU5cHg0RlNyNHlJ\nContent-Type: application/x-www-form-urlencoded",
      "raw": true
    },
    {
      "indent": 5,
      "text": "grant_type=refresh_token &refresh_token=4LTC8lb0acc6Oy4esc1Nk9BWC0imAwH7kic16BDC2 &resource=https%3A%2F%2Fcontacts.example.com%2F",
      "ja": "grant_type = refresh_token＆refresh_token = 4LTC8lb0acc6Oy4esc1Nk9BWC0imAwH7kic16BDC2＆resource = https％3A％2F％2Fcontacts.example.com％2F"
    },
    {
      "indent": 23,
      "text": "Figure 5: Access Token Request",
      "ja": "図5：アクセストークンリクエスト"
    },
    {
      "indent": 6,
      "text": "HTTP/1.1 200 OK Content-Type: application/json Cache-Control: no-cache, no-store",
      "ja": "HTTP / 1.1 200 OK Content-Type：application / json Cache-Control：no-cache、no-store"
    },
    {
      "indent": 6,
      "text": "{\n   \"access_token\":\"eyJhbGciOiJFUzI1NiIsImtpZCI6Ijc3In0.eyJpc3MiOi\n    JodHRwOi8vYXV0aG9yaXphdGlvbi1zZXJ2ZXIuZXhhbXBsZS5jb20iLCJzdWI\n    iOiJfX2JfYyIsImV4cCI6MTU4ODQyMDgyNiwic2NvcGUiOiJjb250YWN0cyIs\n    ImF1ZCI6Imh0dHBzOi8vY29udGFjdHMuZXhhbXBsZS5jb20vIn0.5f4yhqazc\n    OSlJw4y94KPeWNEFQqj2cfeO8x4hr3YbHtIl3nQXnBMw5wREY5O1YbZED-GfH\n    UowfmtNaA5EikYAw\",\n   \"token_type\":\"Bearer\",\n   \"expires_in\":3600,\n   \"scope\":\"contacts\"\n}",
      "raw": true
    },
    {
      "indent": 22,
      "text": "Figure 6: Access Token Response",
      "ja": "図6：アクセストークンレスポンス"
    },
    {
      "indent": 0,
      "text": "3. Security Considerations",
      "section_title": true,
      "ja": "3. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "An audience-restricted access token that is legitimately presented to a resource cannot then be taken by that resource and presented elsewhere for illegitimate access to other resources. The \"resource\" parameter enables a client to indicate the protected resources where the requested access token will be used, which in turn enables the authorization server to apply the appropriate audience restrictions to the token.",
      "ja": "正当にリソースに提示されるオーディエンス制限アクセストークンは、そのリソースが取得して、他のリソースへの不正アクセスのために他の場所に提示することはできません。 「resource」パラメーターにより、クライアントは、要求されたアクセストークンが使用される保護されたリソースを示すことができます。これにより、承認サーバーはトークンに適切なオーディエンス制限を適用できます。"
    },
    {
      "indent": 3,
      "text": "Some servers may host user content or be multi-tenant. In order to avoid attacks where one tenant uses an access token to illegitimately access resources owned by a different tenant, it is important to use a specific resource URI including any portion of the URI that identifies the tenant, such as a path component. This will allow access tokens to be audience-restricted in a way that identifies the tenant and prevents their use, due to an invalid audience, at resources owned by a different tenant.",
      "ja": "一部のサーバーは、ユーザーコンテンツをホストするか、マルチテナントになります。 あるテナントがアクセストークンを使用して別のテナントが所有するリソースに不正にアクセスする攻撃を回避するには、テナントを識別するURIの部分（パスコンポーネントなど）を含む特定のリソースURIを使用することが重要です。 これにより、テナントを識別する方法でアクセストークンをオーディエンス制限できるようになり、無効なオーディエンスにより、別のテナントが所有するリソースでの使用を防止できます。"
    },
    {
      "indent": 3,
      "text": "Although multiple occurrences of the \"resource\" parameter may be included in a token request, using only a single \"resource\" parameter is encouraged. If a bearer token has multiple intended recipients (audiences), then the token is valid at more than one protected resource and can be used by any one of those resources to access any of the others. Thus, a high degree of trust between the involved parties is needed when using access tokens with multiple audiences. Furthermore, an authorization server may be unwilling or unable to fulfill a token request with multiple resources.",
      "ja": "トークンリクエストには「リソース」パラメータの複数の出現を含めることができますが、単一の「リソース」パラメータのみを使用することをお勧めします。 ベアラートークンに複数の受信者（観客）がいる場合、トークンは複数の保護されたリソースで有効であり、それらのリソースのいずれかが他のリソースにアクセスするために使用できます。 したがって、複数のオーディエンスでアクセストークンを使用する場合は、関係者間の高度な信頼が必要です。 さらに、承認サーバーは、複数のリソースを使用してトークン要求を処理できないか、実行できない場合があります。"
    },
    {
      "indent": 3,
      "text": "Whenever feasible, the \"resource\" parameter should correspond to the network-addressable location of the protected resource. This makes it possible for the client to validate that the resource being requested controls the corresponding network location, reducing the risk of malicious endpoints obtaining tokens meant for other resources. If the \"resource\" parameter contains an abstract identifier, it is the client's responsibility to validate out of band that any network endpoint to which tokens are sent are the intended audience for that identifier.",
      "ja": "可能な場合はいつでも、「リソース」パラメータは、保護されたリソースのネットワークアドレス可能な場所に対応する必要があります。 これにより、クライアントは、要求されているリソースが対応するネットワークの場所を制御していることを検証でき、悪意のあるエンドポイントが他のリソース用のトークンを取得するリスクを軽減できます。 「リソース」パラメータに抽象識別子が含まれる場合、トークンの送信先のネットワークエンドポイントがその識別子の対象ユーザーであることを帯域外で検証するのはクライアントの責任です。"
    },
    {
      "indent": 0,
      "text": "4. Privacy Considerations",
      "section_title": true,
      "ja": "4. プライバシーに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "In typical OAuth deployments the authorization sever is in a position to observe and track a significant amount of user and client behavior. It is largely just inherent to the nature of OAuth, and this document does little to affect that. In some cases, however, such as when access token introspection is not being used, use of the resource parameter defined herein may allow for tracking behavior at a somewhat more granular and specific level than would otherwise be possible in its absence.",
      "ja": "通常のOAuth展開では、承認サーバーは、ユーザーとクライアントの大量の動作を監視および追跡することができます。 これは主にOAuthの性質に固有のものであり、このドキュメントはそれに影響を与えることはほとんどありません。 ただし、アクセストークンのイントロスペクションが使用されていない場合など、場合によっては、ここで定義されているリソースパラメーターを使用すると、通常は存在しない場合よりもある程度詳細で特定のレベルで動作を追跡できます。"
    },
    {
      "indent": 0,
      "text": "5. IANA Considerations",
      "section_title": true,
      "ja": "5. IANAの考慮事項"
    },
    {
      "indent": 0,
      "text": "5.1. OAuth Parameters Registration",
      "section_title": true,
      "ja": "5.1. OAuthパラメーターの登録"
    },
    {
      "indent": 3,
      "text": "This specification updates the following value in the IANA \"OAuth Parameters\" registry [IANA.OAuth.Parameters] established by [RFC6749].",
      "ja": "この仕様は、[RFC6749]によって確立されたIANA \"OAuth Parameters\"レジストリ[IANA.OAuth.Parameters]の次の値を更新します。"
    },
    {
      "indent": 3,
      "text": "Parameter name:  resource\nParameter usage location:  authorization request, token request\nChange controller:  IESG\nSpecification document(s):  RFC 8707",
      "raw": true
    },
    {
      "indent": 0,
      "text": "5.2. OAuth Extensions Error Registration",
      "section_title": true,
      "ja": "5.2. OAuth拡張機能のエラー登録"
    },
    {
      "indent": 3,
      "text": "This specification updates the following error in the IANA \"OAuth Extensions Error Registry\" [IANA.OAuth.Parameters] established by [RFC6749].",
      "ja": "この仕様は、[RFC6749]によって確立されたIANA \"OAuth Extensions Error Registry\" [IANA.OAuth.Parameters]の次のエラーを更新します。"
    },
    {
      "indent": 3,
      "text": "Error name: invalid_target Error usage location: implicit grant error response, token error response Related protocol extension: resource parameter Change controller: IESG Specification document(s): RFC 8707",
      "ja": "エラー名：invalid_targetエラーの使用場所：暗黙的な付与エラー応答、トークンエラー応答関連プロトコル拡張機能：リソースパラメーター変更コントローラー：IESG仕様ドキュメント：RFC 8707"
    },
    {
      "indent": 0,
      "text": "6. References",
      "section_title": true,
      "ja": "6. 参考文献"
    },
    {
      "indent": 0,
      "text": "6.1. Normative References",
      "section_title": true,
      "ja": "6.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[IANA.OAuth.Parameters] IANA, \"OAuth Parameters\", <https://www.iana.org/assignments/oauth-parameters>.",
      "ja": "[IANA.OAuth.Parameters] IANA、「OAuthパラメーター」、<https://www.iana.org/assignments/oauth-parameters>。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <https://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119] Bradner、S.、「要件レベルを示すためにRFCで使用するキーワード」、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<https://www.rfc-editor.org/info/ rfc2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC3986] Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform Resource Identifier (URI): Generic Syntax\", STD 66, RFC 3986, DOI 10.17487/RFC3986, January 2005, <https://www.rfc-editor.org/info/rfc3986>.",
      "ja": "[RFC3986]バーナーズ・リー、T。、フィールディング、R。、およびL.マスインター、「Uniform Resource Identifier（URI）：Generic Syntax」、STD 66、RFC 3986、DOI 10.17487 / RFC3986、2005年1月、<https：/ /www.rfc-editor.org/info/rfc3986>。"
    },
    {
      "indent": 3,
      "text": "[RFC6749] Hardt, D., Ed., \"The OAuth 2.0 Authorization Framework\", RFC 6749, DOI 10.17487/RFC6749, October 2012, <https://www.rfc-editor.org/info/rfc6749>.",
      "ja": "[RFC6749] Hardt、D.、Ed。、「The OAuth 2.0 Authorization Framework」、RFC 6749、DOI 10.17487 / RFC6749、2012年10月、<https://www.rfc-editor.org/info/rfc6749>。"
    },
    {
      "indent": 3,
      "text": "[RFC8174] Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174, May 2017, <https://www.rfc-editor.org/info/rfc8174>.",
      "ja": "[RFC8174] Leiba、B。、「RFC 2119キーワードの大文字と小文字のあいまいさ」、BCP 14、RFC 8174、DOI 10.17487 / RFC8174、2017年5月、<https://www.rfc-editor.org/info/ rfc8174>。"
    },
    {
      "indent": 0,
      "text": "6.2. Informative References",
      "section_title": true,
      "ja": "6.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[JWT-SAR] Sakimura, N. and J. Bradley, \"The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)\", Work in Progress, Internet-Draft, draft-ietf-oauth-jwsreq-20, 21 October 2019, <https://tools.ietf.org/html/draft-ietf-oauth-jwsreq-20>.",
      "ja": "[JWT-SAR] Sakimura、N.、J。Bradley、「OAuth 2.0承認フレームワーク：JWTセキュア承認リクエスト（JAR）」、Work in Progress、インターネットドラフト、draft-ietf-oauth-jwsreq-20、10月21日 2019、<https://tools.ietf.org/html/draft-ietf-oauth-jwsreq-20>。"
    },
    {
      "indent": 3,
      "text": "[RFC6750] Jones, M. and D. Hardt, \"The OAuth 2.0 Authorization Framework: Bearer Token Usage\", RFC 6750, DOI 10.17487/RFC6750, October 2012, <https://www.rfc-editor.org/info/rfc6750>.",
      "ja": "[RFC6750]ジョーンズ、M。およびD.ハード、「OAuth 2.0認可フレームワーク：ベアラートークンの使用」、RFC 6750、DOI 10.17487 / RFC6750、2012年10月、<https://www.rfc-editor.org/info/ rfc6750>。"
    },
    {
      "indent": 3,
      "text": "[RFC7519] Jones, M., Bradley, J., and N. Sakimura, \"JSON Web Token (JWT)\", RFC 7519, DOI 10.17487/RFC7519, May 2015, <https://www.rfc-editor.org/info/rfc7519>.",
      "ja": "[RFC7519]ジョーンズ、M。、ブラッドリー、J。、およびN.サキムラ、「JSON Web Token（JWT）」、RFC 7519、DOI 10.17487 / RFC7519、2015年5月、<https://www.rfc-editor.org / info / rfc7519>。"
    },
    {
      "indent": 3,
      "text": "[RFC7644] Hunt, P., Ed., Grizzle, K., Ansari, M., Wahlstroem, E., and C. Mortimore, \"System for Cross-domain Identity Management: Protocol\", RFC 7644, DOI 10.17487/RFC7644, September 2015, <https://www.rfc-editor.org/info/rfc7644>.",
      "ja": "[RFC7644]ハント、P。、エド、グリズル、K。、アンサリ、M。、ワールストローム、E。、およびC.モーティモア、「クロスドメインアイデンティティ管理のためのシステム：プロトコル」、RFC 7644、DOI 10.17487 / RFC7644 、2015年9月、<https://www.rfc-editor.org/info/rfc7644>。"
    },
    {
      "indent": 3,
      "text": "[RFC7662] Richer, J., Ed., \"OAuth 2.0 Token Introspection\", RFC 7662, DOI 10.17487/RFC7662, October 2015, <https://www.rfc-editor.org/info/rfc7662>.",
      "ja": "[RFC7662] Richer、J.、Ed。、「OAuth 2.0 Token Introspection」、RFC 7662、DOI 10.17487 / RFC7662、2015年10月、<https://www.rfc-editor.org/info/rfc7662>。"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "This specification was developed within the OAuth Working Group under the chairmanship of Hannes Tschofenig and Rifaat Shekh-Yusef with Eric Rescorla, Benjamin Kaduk, and Roman Danyliw serving as Security Area Directors. Additionally, the following individuals contributed ideas, feedback, and wording that helped shape this specification:",
      "ja": "この仕様は、Hanenes TschofenigとRifaat Shekh-Yusefの議長の下でOAuthワーキンググループ内で開発され、Eric Rescorla、Benjamin Kaduk、およびRoman Danyliwがセキュリティエリアディレクターを務めています。 さらに、次の個人がこの仕様の形成に役立つアイデア、フィードバック、および文言を提供しました。"
    },
    {
      "indent": 3,
      "text": "Vittorio Bertocci, Sergey Beryozkin, Roman Danyliw, William Denniss, Vladimir Dzhuvinov, George Fletcher, Dick Hardt, Phil Hunt, Michael Jones, Benjamin Kaduk, Barry Leiba, Torsten Lodderstedt, Anthony Nadalin, Justin Richer, Adam Roach, Nat Sakimura, Rifaat Shekh-Yusef, Filip Skokan, Éric Vyncke, and Hans Zandbelt.",
      "ja": "ヴィットリオ・ベルトッチ、セルゲイ・ベリオズキン、ローマン・ダニリウ、ウィリアム・デニス、ウラジミール・ジュビノフ、ジョージ・フレッチャー、ディック・ハード、フィル・ハント、マイケル・ジョーンズ、ベンジャミン・カダック、バリー・レイバ、トルステン・ロッダーシュテット、アンソニー・ナダリン、ジャスティン・リチャー、アダム・ローチ、ナット・サキムラ -Yusef、Filip Skokan、ÉricVyncke、およびHans Zandbelt。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Brian Campbell Ping Identity",
      "ja": "ブライアン・キャンベル・ピン・アイデンティティー"
    },
    {
      "indent": 3,
      "text": "Email: brian.d.campbell@gmail.com",
      "raw": true
    },
    {
      "indent": 3,
      "text": "John Bradley Yubico",
      "ja": "ジョン・ブラッドリー・ユビコ"
    },
    {
      "indent": 3,
      "text": "Email: ve7jtb@ve7jtb.com",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Hannes Tschofenig Arm Limited",
      "ja": "Hannes Tschofenig Arm Limited"
    },
    {
      "indent": 3,
      "text": "Email: hannes.tschofenig@gmx.net",
      "raw": true
    }
  ]
}