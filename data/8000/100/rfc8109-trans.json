{
  "title": {
    "text": "RFC 8109 - Initializing a DNS Resolver with Priming Queries",
    "ja": "RFC 8109 - プライミングクエリとDNSリゾルバの初期化"
  },
  "number": 8109,
  "created_at": "2019-10-23 12:22:37.957186+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                           P. Koch\nRequest for Comments: 8109                                      DENIC eG\nBCP: 209                                                       M. Larson\nCategory: Best Current Practice                               P. Hoffman\nISSN: 2070-1721                                                    ICANN\n                                                              March 2017",
      "raw": true
    },
    {
      "indent": 12,
      "text": "Initializing a DNS Resolver with Priming Queries",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document describes the queries that a DNS resolver should emit to initialize its cache. The result is that the resolver gets both a current NS Resource Record Set (RRset) for the root zone and the necessary address information for reaching the root servers.",
      "ja": "この文書では、DNSリゾルバは、そのキャッシュを初期化するために放出する必要があるクエリを記述します。結果は、リゾルバがルートサーバに到達するためのルートゾーンと必要なアドレス情報については、現在のNSリソースレコードセット（RRセット）の両方を取得していることです。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This memo documents an Internet Best Current Practice.",
      "ja": "このメモはインターネット最も良い現在の練習を説明します。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on BCPs is available in Section 2 of RFC 7841.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。 BCPの詳細については、RFC 7841のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc8109.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc8109で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2017 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2017 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................2\n2. Description of Priming ..........................................3\n3. Priming Queries .................................................3\n   3.1. Repeating Priming Queries ..................................4\n   3.2. Target Selection ...........................................4\n   3.3. DNSSEC with Priming Queries ................................4\n4. Priming Responses ...............................................5\n   4.1. Expected Properties of the Priming Response ................5\n   4.2. Completeness of the Response ...............................5\n5. Security Considerations .........................................6\n6. IANA Considerations .............................................6\n7. Normative References ............................................6\nAcknowledgements ...................................................7\nAuthors' Addresses .................................................7",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "Recursive DNS resolvers need a starting point to resolve queries. [RFC1034] describes a common scenario for recursive resolvers: they begin with an empty cache and some configuration for finding the names and addresses of the DNS root servers. [RFC1034] describes that configuration as a list of servers that will give authoritative answers to queries about the root. This has become a common implementation choice for recursive resolvers, and is the topic of this document.",
      "ja": "再帰的なDNSリゾルバは、クエリを解決するための出発点を必要としています。 [RFC1034]は、再帰リゾルバのための一般的なシナリオについて説明します。彼らは、空のキャッシュとDNSルートサーバーの名前とアドレスを見つけるためのいくつかの設定で始まります。 [RFC1034]はルートについての問い合わせに正式な答えを与えるサーバのリストとしてその構成を説明します。これは、再帰リゾルバのための一般的な実装の選択肢となっており、この文書のトピックですしています。"
    },
    {
      "indent": 3,
      "text": "This document describes the steps needed for this common implementation choice. Note that this is not the only way to start a recursive name server with an empty cache, but it is the only one described in [RFC1034]. Some implementers have chosen other directions, some of which work well and others of which fail (sometimes disastrously) under different conditions. For example, an implementation that only gets the addresses of the root name servers from configuration, not from the DNS as described in this document, will have stale data that could cause slower resolution.",
      "ja": "この文書では、この一般的な実装を選択するために必要な手順を説明します。これは、空のキャッシュで再帰ネームサーバを起動するための唯一の方法ではないことに注意してください、それは、[RFC1034]で説明した唯一のものです。いくつかの実装ではうまく機能し、その一部と異なる条件の下で（時には悲惨）失敗他人うち他の方向を、選択しています。例えば、構成のみからではなく、この文書で説明するようにDNSからのルートネームサーバのアドレスを取得する実装は、低速の解像度を引き起こす可能性がある古いデータを持つことになります。"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はあります[RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 3,
      "text": "This document only deals with recursive name servers (recursive resolvers, resolvers) for the IN class.",
      "ja": "この文書では、唯一のINクラスの再帰ネームサーバ（再帰リゾルバ、リゾルバ）を扱います。"
    },
    {
      "indent": 0,
      "text": "2. Description of Priming",
      "section_title": true,
      "ja": "プライミングの0002"
    },
    {
      "indent": 3,
      "text": "Priming is the act of finding the list of root servers from a configuration that lists some or all of the purported IP addresses of some or all of those root servers. A recursive resolver starts with no information about the root servers, and ends up with a list of their names and their addresses.",
      "ja": "プライミングは、これらのルートサーバの一部またはすべての主張IPアドレスの一部またはすべてを一覧表示設定からルートサーバーのリストを見つけることの行為です。再帰リゾルバはルートサーバについての情報なしで始まり、そして彼らの名とそのアドレスのリストで終わり。"
    },
    {
      "indent": 3,
      "text": "Priming is described in Sections 5.3.2 and 5.3.3 of [RFC1034]. The scenario used in that description, that of a recursive server that is also authoritative, is no longer as common.",
      "ja": "プライミングは、セクション5.3.2及び[RFC1034]の5.3.3に記載されています。その記述に使用されるシナリオ、また権威ある再帰的なサーバーのそれは、もはや一般的ではありません。"
    },
    {
      "indent": 3,
      "text": "The configured list of IP addresses for the root servers usually comes from the vendor or distributor of the recursive server software. This list is usually correct and complete when shipped, but may become out of date over time.",
      "ja": "ルートサーバーのIPアドレスの設定されたリストは、通常、再帰的なサーバソフトウェアのベンダーまたは販売代理店から来ています。このリストは、出荷時に、通常は正確かつ完全であるが、時間の経過とともに古くなることがあります。"
    },
    {
      "indent": 3,
      "text": "The list of root server operators and the domain name associated with each one has been stable since 1997. However, there are address changes for the root server domain names, both for IPv4 and IPv6 addresses. However, research shows that after those addresses change, some resolvers never get the new addresses. Therefore, it is important that resolvers be able to cope with change, even without relying upon configuration updates to be applied by their operator. Root server change is the main reason that resolvers need to do priming instead of just going from a configured list to get a full and accurate list of root servers.",
      "ja": "ルートサーバのオペレータのリストと各1に関連付けられているドメイン名は、IPv4アドレスとIPv6アドレスの両方、ルートサーバのドメイン名のアドレス変更がある、しかし1997年以降安定しています。しかし、研究はこれらのアドレスを変更した後、いくつかのリゾルバは、新しいアドレスを取得することはありませんことを示しています。したがって、リゾルバも彼らのオペレータが適用される構成の更新によらず、変化に対応できることが重要です。ルートサーバの変更は、リゾルバだけではなく、ルートサーバの完全かつ正確なリストを取得するために設定されたリストから行くのプライミングを行う必要が主な理由です。"
    },
    {
      "indent": 0,
      "text": "3. Priming Queries",
      "section_title": true,
      "ja": "3.プライミングクエリ"
    },
    {
      "indent": 3,
      "text": "A priming query is a DNS query used to get the root server information in a resolver. It has a QNAME of \".\" and a QTYPE of NS, and is sent to one of the addresses in the configuration for the recursive resolver. The priming query can be sent over either UDP or TCP. If the query is sent over UDP, the source port SHOULD be randomly selected (see [RFC5452]). The Recursion Desired (RD) bit MAY be set to 0 or 1, although the meaning of it being set to 1 is undefined for priming queries.",
      "ja": "プライミングクエリは、リゾルバのルートサーバの情報を取得するために使用されるDNSクエリです。それはのQNAMEを持っています「」そしてNSのQTYPEは、再帰的リゾルバの構成においてアドレスの1つに送られます。プライミングクエリは、UDPまたはTCPのいずれかを介して送信することができます。クエリはUDPを介して送信された場合、ソースポートがランダムに選択されるべきである（参照[RFC5452]）。それが1に設定されるの意味はクエリをプライミングするために定義されていないものの、再帰所望の（RD）ビットは、0又は1に設定されるかもしれません。"
    },
    {
      "indent": 3,
      "text": "The recursive resolver SHOULD use EDNS(0) [RFC6891] for priming queries and SHOULD announce and handle a reassembly size of at least 1024 octets [RFC3226]. Doing so allows responses that cover the size of a full priming response (see Section 4.2) for the current set of root servers. See Section 3.3 for discussion of setting the DNSSEC OK (DO) bit (defined in [RFC4033]).",
      "ja": "再帰リゾルバは、クエリをプライミングするためEDNS（0）[RFC6891]を使用する必要があり、少なくとも1024オクテット[RFC3226]の再組立サイズを発表し、処理します。そうすることで、完全なプライミング応答の大きさをカバーする応答がルートサーバの現在のセットのために（4.2節を参照）ことができます。 （[RFC4033]で定義される）DNSSEC OK（DO）ビットを設定するの議論については、セクション3.3を参照。"
    },
    {
      "indent": 0,
      "text": "3.1. Repeating Priming Queries",
      "section_title": true,
      "ja": "3.1。プライミングクエリを繰り返します"
    },
    {
      "indent": 3,
      "text": "The recursive resolver SHOULD send a priming query only when it is needed, such as when the resolver starts with an empty cache and when the NS RRset for the root zone has expired. Because the NS records for the root are not special, the recursive resolver expires those NS records according to their TTL values. (Note that a recursive resolver MAY pre-fetch the NS RRset before it expires.)",
      "ja": "それが必要とされる場合にのみ、再帰リゾルバは、そのようなリゾルバが空のキャッシュを開始したときに、ルートゾーンのNS RRセットの有効期限が切れたときのように、プライミングクエリを送信すべきです。ルートのNSレコードが特別ではないので、再帰リゾルバは自分のTTL値に応じて、これらのNSレコードを満了します。 （有効期限が切れる前に再帰リゾルバがNSの資源レコード集合をプリフェッチできることに留意されたいです。）"
    },
    {
      "indent": 3,
      "text": "If a priming query does not get a response, the recursive resolver needs to retry the query with a different target address from the configuration.",
      "ja": "プライミングクエリが応答を取得していない場合は、再帰リゾルバは構成とは異なるターゲットアドレスでクエリーを再試行する必要があります。"
    },
    {
      "indent": 0,
      "text": "3.2. Target Selection",
      "section_title": true,
      "ja": "3.2。ターゲットの選択"
    },
    {
      "indent": 3,
      "text": "In order to spread the load across all the root server domain names, the recursive resolver SHOULD select the target for a priming query randomly from the list of addresses. The recursive resolver might choose either IPv4 or IPv6 addresses based on its knowledge of whether the system on which it is running has adequate connectivity on either type of address.",
      "ja": "すべてのルートサーバーのドメイン名に負荷を分散するためには、再帰リゾルバはアドレスのリストからランダムにプライミングクエリの対象を選択する必要があります。再帰リゾルバは、それが実行されているシステムは、アドレスのいずれかのタイプに十分な接続性を持っているかどうか、その知識に基づいて、IPv4またはIPv6アドレスのいずれかを選択できます。"
    },
    {
      "indent": 3,
      "text": "Note that this recommended method is not the only way to choose from the list in a recursive resolver's configuration. Two other common methods include picking the first from the list, and remembering which address in the list gave the fastest response earlier and using that one. There are probably other methods in use today. However, the random method listed above SHOULD be used for priming.",
      "ja": "この推奨される方法は、再帰的リゾルバの構成のリストから選択するための唯一の方法ではないことに注意してください。他の二つの一般的な方法は、リストから最初のを選ぶと、それ以前の最速の応答を与えたリスト内のアドレス覚えて、そのいずれかを使用しています。今日は、使用中の他の方法におそらくあります。しかしながら、上記のランダムな方法は、プライミングのために使用されるべきです。"
    },
    {
      "indent": 0,
      "text": "3.3. DNSSEC with Priming Queries",
      "section_title": true,
      "ja": "3.3。プライミングクエリでDNSSEC"
    },
    {
      "indent": 3,
      "text": "The resolver MAY set the DNSSEC OK (DO) bit. At the time of publication, there is little use to performing DNSSEC validation on the priming query. Currently, all root name server names end in \"root-servers.net\" and the AAAA and A RRsets for the root server names reside in the \"root-servers.net\" zone. All root servers are also authoritative for this zone, allowing priming responses to include the appropriate root name server A and AAAA RRsets. But, because the \"root-servers.net\" zone is not currently signed, these RRsets cannot be validated.",
      "ja": "リゾルバは、DNSSEC OK（DO）ビットを設定することができます。公開時点で、プライミングクエリでDNSSEC検証を行うことにはほとんど使用されています。現在、すべてのルートサーバ名は「root-servers.net」とAAAAで終了し、ルートサーバー名のRRセットは、「root-servers.net」ゾーンに存在します。すべてのルートサーバは、プライミング応答が適切なルートサーバのAとAAAA RRセットを含めることができるように、このゾーンのためにも権威あります。 「root-servers.net」ゾーンが現在署名されていないので、しかし、これらのRRセットを検証することはできません。"
    },
    {
      "indent": 3,
      "text": "A man-in-the-middle attack on the priming query could direct a resolver to a rogue root name server. Note, however, that a validating resolver will not accept responses from rogue root name servers if they are different from the real responses because the resolver has a trust anchor for the root and the answers from the root are signed. Thus, if there is a man-in-the-middle attack on the priming query, the only result for a validating resolver will be a denial of service, not the resolver's accepting the bad responses.",
      "ja": "プライミングクエリ上のman-in-the-middle攻撃は、不正なルートサーバにリゾルバに指示することができます。リゾルバは、rootのトラストアンカーを持っており、ルートから回答が署名されているので、彼らは本当の応答と異なっている場合、検証リゾルバが不正なルートネームサーバからの応答を受け付けないこと、しかし、注意してください。プライミングクエリのman-in-the-middle攻撃がある場合はこのように、検証をリゾルバのための唯一の結果は、リゾルバのが悪い回答を受け付けない、サービス拒否になります。"
    },
    {
      "indent": 3,
      "text": "If the \"root-servers.net\" zone is later signed, or if the root servers are named in a different zone and that zone is signed, having DNSSEC validation for the priming queries might be valuable.",
      "ja": "「root-servers.net」ゾーンは、後に署名されている、またはルートサーバが別のゾーンで命名されており、そのゾーンが署名されている場合、プライミングクエリのDNSSEC検証を持つことは価値があるかもしれません。場合"
    },
    {
      "indent": 0,
      "text": "4. Priming Responses",
      "section_title": true,
      "ja": "4.プライミング応答"
    },
    {
      "indent": 3,
      "text": "A priming query is a normal DNS query. Thus, a root name server cannot distinguish a priming query from any other query for the root NS RRset. Thus, the root server's response will also be a normal DNS response.",
      "ja": "プライミングクエリは、通常のDNSクエリです。このため、ルートサーバはルートNS RRセットのために、他のクエリからプライミングクエリを区別することはできません。このため、ルートサーバからの応答には、通常のDNS応答になります。"
    },
    {
      "indent": 0,
      "text": "4.1. Expected Properties of the Priming Response",
      "section_title": true,
      "ja": "4.1。プライミングレスポンスの期待される特性"
    },
    {
      "indent": 3,
      "text": "The priming response is expected to have an RCODE of NOERROR, and to have the Authoritative Answer (AA) bit set. Also, it is expected to have an NS RRset in the Answer section (because the NS RRset originates from the root zone), and an empty Authority section (because the NS RRset already appears in the Answer section). There will also be an Additional section with A and/or AAAA RRsets for the root name servers pointed at by the NS RRset.",
      "ja": "プライミング応答はNOERRORのRCODEを有すること、およびビットセット権威回答（AA）を有することが期待されます。また、（NS RRセットが既に回答セクションに表示されているため）回答セクションでのNS RRセット（NS RRセットは、ルートゾーンに由来するので）、および空の権限セクションを持つことが期待されています。また、ルートネームサーバーのためのAおよび/またはAAAA RRセットと追加のセクションでは、NS RRセットが指すがあります。"
    },
    {
      "indent": 3,
      "text": "Resolver software SHOULD treat the response to the priming query as a normal DNS response, just as it would use any other data fed to its cache. Resolver software SHOULD NOT expect exactly 13 NS RRs because, historically, some root servers have returned fewer.",
      "ja": "リゾルバソフトウェアは、そのキャッシュに供給された他のデータを使用するのと同じように、通常のDNS応答としてプライミングクエリに対する応答を扱うべきです。歴史的に、いくつかのルートサーバは少ない戻ってきた、ので、リゾルバソフトウェアは、正確に13のNS RRを期待すべきではありません。"
    },
    {
      "indent": 0,
      "text": "4.2. Completeness of the Response",
      "section_title": true,
      "ja": "4.2。レスポンスの完全性"
    },
    {
      "indent": 3,
      "text": "There are currently 13 root servers. All have one IPv4 address and one IPv6 address. Not even counting the NS RRset, the combined size of all the A and AAAA RRsets exceeds the original 512-octet payload limit from [RFC1035].",
      "ja": "13台のルートサーバは現在ありません。すべてが1つのIPv4アドレスと1つのIPv6アドレスを持っています。 NS資源レコード集合をカウントしない、すべてのAおよびAAAA資源レコード集合の合計サイズは、[RFC1035]から元の512オクテットのペイロードの制限を超え。"
    },
    {
      "indent": 3,
      "text": "In the event of a response where the Additional section omits certain root server address information, re-issuing of the priming query does not help with those root name servers that respond with a fixed order of addresses in the Additional section. Instead, the recursive resolver needs to issue direct queries for A and AAAA RRsets for the remaining names. Currently, these RRsets would be authoritatively available from the root name servers.",
      "ja": "追加のセクションでは、特定のルートサーバのアドレス情報を省略し、応答の際には、プライミングクエリの再発行は、追加のセクション内のアドレスの固定された順序で応答し、それらのルートネームサーバには役立ちません。代わりに、再帰リゾルバは、残りの名のAとAAAA RRセットの直接クエリを発行する必要があります。現在、これらのRRセットは、ルートネームサーバから正式に利用可能となります。"
    },
    {
      "indent": 0,
      "text": "5. Security Considerations",
      "section_title": true,
      "ja": "5.セキュリティについての考慮事項"
    },
    {
      "indent": 3,
      "text": "Spoofing a response to a priming query can be used to redirect all of the queries originating from a victim recursive resolver to one or more servers for the attacker. Until the responses to priming queries are protected with DNSSEC, there is no definitive way to prevent such redirection.",
      "ja": "プライミングクエリに対する応答を偽装することは、攻撃者のための1つまたは複数のサーバーに被害者の再帰リゾルバから発信クエリのすべてをリダイレクトするために使用することができます。プライミングクエリへの応答がDNSSECで保護されるまで、そのようなリダイレクトを防止するための決定的な方法はありません。"
    },
    {
      "indent": 3,
      "text": "An on-path attacker who sees a priming query coming from a resolver can inject false answers before a root server can give correct answers. If the attacker's answers are accepted, this can set up the ability to give further false answers for future queries to the resolver. False answers for root servers are more dangerous than, say, false answers for Top-Level Domains (TLDs), because the root is the highest node of the DNS. See Section 3.3 for more discussion.",
      "ja": "ルートサーバは、正しい答えを与えることができます前に、リゾルバからのプライミングクエリを見て上のパス攻撃者が偽の答えを注入することができます。攻撃者の回答は受け入れられた場合、これはリゾルバへの将来のクエリのために、さらに虚偽の回答を与える能力を設定することができます。ルートは、DNSの最上位ノードであるため、ルートサーバのための偽の答えは、トップレベルドメイン（TLDの）のための偽の答え、より危険であると言います。より多くの議論については、3.3節を参照してください。"
    },
    {
      "indent": 3,
      "text": "In both of the scenarios above, a validating resolver will be able to detect the attack if its chain of queries comes to a zone that is signed, but not for those that are unsigned.",
      "ja": "クエリのその鎖はなく、符号なしであるもののために、署名されたゾーンに来る場合は、上記のシナリオの両方で、検証リゾルバは、攻撃を検出することができるであろう。"
    },
    {
      "indent": 0,
      "text": "6. IANA Considerations",
      "section_title": true,
      "ja": "6. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "This document does not require any IANA actions.",
      "ja": "このドキュメントは、IANAのアクションを必要としません。"
    },
    {
      "indent": 0,
      "text": "7. Normative References",
      "section_title": true,
      "ja": "7.引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC1034] Mockapetris, P., \"Domain names - concepts and facilities\", STD 13, RFC 1034, DOI 10.17487/RFC1034, November 1987, <http://www.rfc-editor.org/info/rfc1034>.",
      "ja": "[RFC1034] Mockapetris、P.、 \"ドメイン名 - 概念と設備\"、STD 13、RFC 1034、DOI 10.17487 / RFC1034、1987年11月、<http://www.rfc-editor.org/info/rfc1034>。"
    },
    {
      "indent": 3,
      "text": "[RFC1035] Mockapetris, P., \"Domain names - implementation and specification\", STD 13, RFC 1035, DOI 10.17487/RFC1035, November 1987, <http://www.rfc-editor.org/info/rfc1035>.",
      "ja": "[RFC1035] Mockapetris、P.、 \"ドメイン名 - 実装及び仕様\"、STD 13、RFC 1035、DOI 10.17487 / RFC1035、1987年11月、<http://www.rfc-editor.org/info/rfc1035>。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <http://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<http://www.rfc-editor.org/info/ RFC2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC3226] Gudmundsson, O., \"DNSSEC and IPv6 A6 aware server/resolver message size requirements\", RFC 3226, DOI 10.17487/RFC3226, December 2001, <http://www.rfc-editor.org/info/rfc3226>.",
      "ja": "[RFC3226]グドムンソン、O.、 \"DNSSECとIPv6 A6認識サーバ/レゾルバメッセージサイズ要件\"、RFC 3226、DOI 10.17487 / RFC3226、2001年12月、<http://www.rfc-editor.org/info/rfc3226> 。"
    },
    {
      "indent": 3,
      "text": "[RFC4033] Arends, R., Austein, R., Larson, M., Massey, D., and S. Rose, \"DNS Security Introduction and Requirements\", RFC 4033, DOI 10.17487/RFC4033, March 2005, <http://www.rfc-editor.org/info/rfc4033>.",
      "ja": "[RFC4033]アレンズ、R.、Austeinと、R.、ラーソン、M.、マッシー、D.、およびS.ローズ、 \"DNSセキュリティ序論と要件\"、RFC 4033、DOI 10.17487 / RFC4033、2005年3月、<のhttp： //www.rfc-editor.org/info/rfc4033>。"
    },
    {
      "indent": 3,
      "text": "[RFC5452] Hubert, A. and R. van Mook, \"Measures for Making DNS More Resilient against Forged Answers\", RFC 5452, DOI 10.17487/RFC5452, January 2009, <http://www.rfc-editor.org/info/rfc5452>.",
      "ja": "[RFC5452]ヒューバート、A.とR.バンムック、 \"鍛造回答に対してより弾力性DNSを作るための措置\"、RFC 5452、DOI 10.17487 / RFC5452、2009年1月、<http://www.rfc-editor.org/info / rfc5452>。"
    },
    {
      "indent": 3,
      "text": "[RFC6891] Damas, J., Graff, M., and P. Vixie, \"Extension Mechanisms for DNS (EDNS(0))\", STD 75, RFC 6891, DOI 10.17487/RFC6891, April 2013, <http://www.rfc-editor.org/info/rfc6891>.",
      "ja": "[RFC6891]ダマ、J.、Graffの、M.、およびP.いるVixie、 \"DNS用拡張メカニズム（EDNS（0））\"、STD 75、RFC 6891、DOI 10.17487 / RFC6891、2013年4月、<HTTP：// www.rfc-editor.org/info/rfc6891>。"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "This document is the product of the DNSOP WG and benefitted from the reviews done there.",
      "ja": "この文書では、DNSOP WGの製品であり、そこで行わ件の恩恵を受け。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Peter Koch DENIC eG Kaiserstrasse 75-77 Frankfurt 60329 Germany",
      "ja": "ピーター・コッホDENIC eGにKaiserstrasse 75-77フランクフルト60329ドイツ"
    },
    {
      "indent": 3,
      "text": "Phone: +49 69 27235 0 Email: pk@DENIC.DE",
      "ja": "電話：+49 69 27235 0 Eメール：pk@DENIC.DE"
    },
    {
      "indent": 3,
      "text": "Matt Larson ICANN",
      "ja": "マット・ラーソンICANN"
    },
    {
      "indent": 3,
      "text": "Email: matt.larson@icann.org",
      "ja": "メール：matt.larson@icann.org"
    },
    {
      "indent": 3,
      "text": "Paul Hoffman ICANN",
      "ja": "ポール・ホフマンICANN"
    },
    {
      "indent": 3,
      "text": "Email: paul.hoffman@icann.org",
      "ja": "メール：paul.hoffman@icann.org"
    }
  ]
}