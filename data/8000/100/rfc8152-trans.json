{
  "title": {
    "text": "RFC 8152 - CBOR Object Signing and Encryption (COSE)",
    "ja": "RFC 8152 - CBORオブジェクトの署名と暗号化（COSE）"
  },
  "number": 8152,
  "created_at": "2019-10-24 00:30:18.847381+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                         J. Schaad\nRequest for Comments: 8152                                August Cellars\nCategory: Standards Track                                      July 2017\nISSN: 2070-1721",
      "raw": true
    },
    {
      "indent": 15,
      "text": "CBOR Object Signing and Encryption (COSE)",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need for the ability to have basic security services defined for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.",
      "ja": "簡潔なバイナリオブジェクト表現（CBOR）は小さなコードサイズと小さなメッセージサイズのために設計されたデータ形式です。このデータ・フォーマット用に定義された基本的なセキュリティサービスを持っている能力が必要です。この文書では、CBORオブジェクトの署名と暗号化（COSE）プロトコルを定義します。この仕様は、直列化のためのCBORを使用して署名、メッセージ認証コード、および暗号化を作成して処理する方法について説明します。この仕様は、さらにCBORを使用して暗号化キーを表す方法について説明します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 7841.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 7841のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc8152.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc8152で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2017 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2017 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................4\n   1.1. Design Changes from JOSE ...................................5\n   1.2. Requirements Terminology ...................................6\n   1.3. CBOR Grammar ...............................................6\n   1.4. CBOR-Related Terminology ...................................7\n   1.5. Document Terminology .......................................8\n2. Basic COSE Structure ............................................8\n3. Header Parameters ..............................................10\n   3.1. Common COSE Headers Parameters ............................12\n4. Signing Objects ................................................16\n   4.1. Signing with One or More Signers ..........................16\n   4.2. Signing with One Signer ...................................18\n   4.3. Externally Supplied Data ..................................19\n   4.4. Signing and Verification Process ..........................20\n   4.5. Computing Counter Signatures ..............................22\n5. Encryption Objects .............................................22\n   5.1. Enveloped COSE Structure ..................................23\n        5.1.1. Content Key Distribution Methods ...................24\n   5.2. Single Recipient Encrypted ................................25\n   5.3. How to Encrypt and Decrypt for AEAD Algorithms ............26\n   5.4. How to Encrypt and Decrypt for AE Algorithms ..............28\n6. MAC Objects ....................................................29\n   6.1. MACed Message with Recipients .............................30\n   6.2. MACed Messages with Implicit Key ..........................31\n   6.3. How to Compute and Verify a MAC ...........................32\n7. Key Objects ....................................................33\n   7.1. COSE Key Common Parameters ................................34\n8. Signature Algorithms ...........................................37\n   8.1. ECDSA .....................................................38\n        8.1.1. Security Considerations ............................40\n   8.2. Edwards-Curve Digital Signature Algorithms (EdDSAs) .......40\n        8.2.1. Security Considerations ............................41\n9. Message Authentication Code (MAC) Algorithms ...................42\n   9.1. Hash-Based Message Authentication Codes (HMACs) ...........42\n        9.1.1. Security Considerations ............................44\n   9.2. AES Message Authentication Code (AES-CBC-MAC) .............44\n        9.2.1. Security Considerations ............................45\n10. Content Encryption Algorithms .................................45\n   10.1. AES GCM ..................................................46\n        10.1.1. Security Considerations ...........................47\n   10.2. AES CCM ..................................................47\n        10.2.1. Security Considerations ...........................50\n   10.3. ChaCha20 and Poly1305 ....................................50\n        10.3.1. Security Considerations ...........................51\n11. Key Derivation Functions (KDFs) ...............................51",
      "raw": true
    },
    {
      "indent": 3,
      "text": "   11.1. HMAC-Based Extract-and-Expand Key Derivation\n         Function (HKDF) ..........................................52\n   11.2. Context Information Structure ............................54\n12. Content Key Distribution Methods ..............................60\n   12.1. Direct Encryption ........................................60\n        12.1.1. Direct Key ........................................61\n        12.1.2. Direct Key with KDF ...............................61\n    12.2. Key Wrap ................................................63\n        12.2.1. AES Key Wrap ......................................64\n    12.3. Key Transport ...........................................65\n    12.4. Direct Key Agreement ....................................65\n        12.4.1. ECDH ..............................................66\n        12.4.2. Security Considerations ...........................69\n   12.5. Key Agreement with Key Wrap ..............................69\n        12.5.1. ECDH ..............................................70\n13. Key Object Parameters .........................................72\n   13.1. Elliptic Curve Keys ......................................73\n        13.1.1. Double Coordinate Curves ..........................73\n   13.2. Octet Key Pair ...........................................74\n   13.3. Symmetric Keys ...........................................75\n14. CBOR Encoder Restrictions .....................................76\n15. Application Profiling Considerations ..........................76\n16. IANA Considerations ...........................................78\n   16.1. CBOR Tag Assignment ......................................78\n   16.2. COSE Header Parameters Registry ..........................78\n   16.3. COSE Header Algorithm Parameters Registry ................79\n   16.4. COSE Algorithms Registry .................................79\n   16.5. COSE Key Common Parameters Registry ......................81\n   16.6. COSE Key Type Parameters Registry ........................81\n   16.7. COSE Key Types Registry ..................................82\n   16.8. COSE Elliptic Curves Registry ............................83\n   16.9. Media Type Registrations .................................84\n        16.9.1. COSE Security Message .............................84\n        16.9.2. COSE Key Media Type ...............................85\n   16.10. CoAP Content-Formats Registry ...........................87\n   16.11. Expert Review Instructions ..............................87\n17. Security Considerations .......................................88\n18. References ....................................................90\n   18.1. Normative References .....................................90\n   18.2. Informative References ...................................92\nAppendix A. Guidelines for External Data Authentication of\n            Algorithms ............................................96\n   A.1. Algorithm Identification ..................................96\n   A.2. Counter Signature without Headers .........................99\nAppendix B. Two Layers of Recipient Information ..................100\nAppendix C. Examples .............................................102\n   C.1. Examples of Signed Messages ..............................103\n        C.1.1. Single Signature ..................................103",
      "raw": true
    },
    {
      "indent": 3,
      "text": "        C.1.2. Multiple Signers ..................................103\n        C.1.3. Counter Signature .................................104\n        C.1.4. Signature with Criticality ........................105\n   C.2. Single Signer Examples ...................................106\n        C.2.1. Single ECDSA Signature  ...........................106\n   C.3. Examples of Enveloped Messages ...........................107\n        C.3.1. Direct ECDH .......................................107\n        C.3.2. Direct Plus Key Derivation ........................108\n        C.3.3. Counter Signature on Encrypted Content ............109\n        C.3.4. Encrypted Content with External Data ..............111\n   C.4. Examples of Encrypted Messages ...........................111\n        C.4.1. Simple Encrypted Message ..........................111\n        C.4.2. Encrypted Message with a Partial IV ...............112\n   C.5. Examples of MACed Messages ...............................112\n        C.5.1. Shared Secret Direct MAC ..........................112\n        C.5.2. ECDH Direct MAC ...................................113\n        C.5.3. Wrapped MAC .......................................114\n        C.5.4. Multi-Recipient MACed Message .....................115\n   C.6. Examples of MAC0 Messages ................................117\n        C.6.1. Shared Secret Direct MAC ..........................117\n   C.7. COSE Keys ................................................117\n        C.7.1. Public Keys .......................................117\n        C.7.2. Private Keys ......................................119\nAcknowledgments ..................................................121\nAuthor's Address .................................................121",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "There has been an increased focus on small, constrained devices that make up the Internet of Things (IoT). One of the standards that has come out of this process is \"Concise Binary Object Representation (CBOR)\" [RFC7049]. CBOR extended the data model of the JavaScript Object Notation (JSON) [RFC7159] by allowing for binary data, among other changes. CBOR is being adopted by several of the IETF working groups dealing with the IoT world as their encoding of data structures. CBOR was designed specifically to be both small in terms of messages transport and implementation size and be a schema-free decoder. A need exists to provide message security services for IoT, and using CBOR as the message-encoding format makes sense.",
      "ja": "モノのインターネットを構成する小型、制約のあるデバイス（IOT）に増加フォーカスがありました。このプロセスから出てきた標準規格の一つは、「コンサイスバイナリオブジェクトの表現（CBOR）」[RFC7049]です。 CBORは他の変更のうち、バイナリデータを可能にすることによってJavaScriptオブジェクト表記（JSON）[RFC7159]のデータモデルを拡張しました。 CBORは、データ構造の彼らのエンコーディングとしてのIoT世界を扱うIETFワーキンググループのいくつかで採用されています。 CBORは、具体的には、メッセージ輸送および実装サイズの点で小さな両方であるとスキーマフリーデコーダであるように設計されました。必要なIoTのメッセージセキュリティサービスを提供するために存在する、とのメッセージをコードフォーマットは理にかなっているようCBORを使用します。"
    },
    {
      "indent": 3,
      "text": "The JOSE working group produced a set of documents [RFC7515] [RFC7516] [RFC7517] [RFC7518] using JSON that specified how to process encryption, signatures, and Message Authentication Code (MAC) operations and how to encode keys using JSON. This document defines the CBOR Object Signing and Encryption (COSE) standard, which does the same thing for the CBOR encoding format. While there is a strong attempt to keep the flavor of the original JSON Object Signing and Encryption (JOSE) documents, two considerations are taken into account:",
      "ja": "JOSEワーキンググループは、ドキュメントのセットを生成した[RFC7515]、[RFC7516]、[RFC7517]、[RFC7518]の暗号化、署名、メッセージ認証コード（MAC）オペレーション及び方法JSONを使用してキーを符号化するための処理方法を指定されたJSONを使用。この文書では、CBORエンコード形式のために同じことを行いCBORオブジェクトの署名と暗号化（COSE）標準を定義しています。元のJSONオブジェクト署名と暗号化（JOSE）文書の風味を保つための強力な試みがあるが、の2点が考慮されています。"
    },
    {
      "indent": 3,
      "text": "o CBOR has capabilities that are not present in JSON and are appropriate to use. One example of this is the fact that CBOR has a method of encoding binary directly without first converting it into a base64-encoded string.",
      "ja": "O CBORは、JSONには存在しないと使用に適切な機能を備えています。この一例はCBOR最初Base64でエンコードされた文字列に変換することなく直接バイナリの符号化方法を有しているという事実です。"
    },
    {
      "indent": 3,
      "text": "o COSE is not a direct copy of the JOSE specification. In the process of creating COSE, decisions that were made for JOSE were re-examined. In many cases, different results were decided on as the criteria were not always the same.",
      "ja": "OのCOSEはJOSE仕様の直接のコピーではありません。 COSEを作成するプロセスでは、JOSEために作られた決定を再検討しました。基準は必ずしも同じではありませんでしたとして、多くの場合、異なる結果がで決定されました。"
    },
    {
      "indent": 0,
      "text": "1.1. Design Changes from JOSE",
      "section_title": true,
      "ja": "1.1。 JOSEからの設計変更"
    },
    {
      "indent": 3,
      "text": "o Define a single top message structure so that encrypted, signed, and MACed messages can easily be identified and still have a consistent view.",
      "ja": "O、署名暗号化されたように、単一のトップメッセージ構造を定義し、MACedメッセージを容易に識別することと、まだ一貫したビューを持つことができます。"
    },
    {
      "indent": 3,
      "text": "o Signed messages distinguish between the protected and unprotected parameters that relate to the content from those that relate to the signature.",
      "ja": "O署名されたメッセージは、署名に関連するものから、コンテンツに関連する保護され、保護されていないパラメータを区別します。"
    },
    {
      "indent": 3,
      "text": "o MACed messages are separated from signed messages.",
      "ja": "O MACedメッセージが署名されたメッセージから分離されます。"
    },
    {
      "indent": 3,
      "text": "o MACed messages have the ability to use the same set of recipient algorithms as enveloped messages for obtaining the MAC authentication key.",
      "ja": "Oメッセージは、MAC認証キーを取得するため包まメッセージとして受信者のアルゴリズムの同じセットを使用する能力を持っているMACed。"
    },
    {
      "indent": 3,
      "text": "o Use binary encodings for binary data rather than base64url encodings.",
      "ja": "Oバイナリデータではなく、base64urlエンコーディング用のバイナリエンコーディングを使用してください。"
    },
    {
      "indent": 3,
      "text": "o Combine the authentication tag for encryption algorithms with the ciphertext.",
      "ja": "O暗号文と暗号化アルゴリズムのための認証タグを結合します。"
    },
    {
      "indent": 3,
      "text": "o The set of cryptographic algorithms has been expanded in some directions and trimmed in others.",
      "ja": "O暗号アルゴリズムのセットは、いくつかの方向に展開等にトリミングされています。"
    },
    {
      "indent": 0,
      "text": "1.2. Requirements Terminology",
      "section_title": true,
      "ja": "1.2。要件の用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.",
      "ja": "キーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、 \"SHALL\"、 \"SHOULD\"、 \"ないもの\"、 \"推奨\" \"ない（SHOULD NOT）\"、 \"MAY\"、 \"推奨NOT\"、および「OPTIONAL BCP 14に記載されているように「この文書に解釈されるべきである[RFC2119]、[RFC8174]と、ここで示されるように、それらは、すべて大文字で表示された場合にのみ。"
    },
    {
      "indent": 3,
      "text": "When the words appear in lowercase, this interpretation does not apply.",
      "ja": "単語が小文字で表示されたら、この解釈は適用されません。"
    },
    {
      "indent": 0,
      "text": "1.3. CBOR Grammar",
      "section_title": true,
      "ja": "1.3。文法CBOR"
    },
    {
      "indent": 3,
      "text": "There is currently no standard CBOR grammar available for use by specifications. The CBOR structures are therefore described in prose.",
      "ja": "仕様で使用できる標準的なCBOR文法は現在ありません。 CBOR構造は、したがって、散文で説明されています。"
    },
    {
      "indent": 3,
      "text": "The document was developed by first working on the grammar and then developing the prose to go with it. An artifact of this is that the prose was written using the primitive type strings defined by CBOR Data Definition Language (CDDL) [CDDL]. In this specification, the following primitive types are used:",
      "ja": "文書は、最初の文法上で作業し、それで行くことに散文を開発することによって開発されました。このアーティファクトは、散文をCBORデータ定義言語（CDDL）CDDL]によって定義されたプリミティブ型の文字列を使用して書かれたということです。本明細書では、以下のプリミティブ型が使用されます。"
    },
    {
      "indent": 6,
      "text": "any -- non-specific value that permits all CBOR values to be placed here.",
      "ja": "任意の - ここに置かれるすべてのCBOR値を許可する非固有の値。"
    },
    {
      "indent": 6,
      "text": "bool -- a boolean value (true: major type 7, value 21; false: major type 7, value 20).",
      "ja": "BOOL  - ブール値（真：主要なタイプ7、値21;偽：主要なタイプ7、値20）。"
    },
    {
      "indent": 6,
      "text": "bstr -- byte string (major type 2).",
      "ja": "BSTR  - バイト文字列（主要タイプ2）。"
    },
    {
      "indent": 6,
      "text": "int -- an unsigned integer or a negative integer.",
      "ja": "int型 - 符号なし整数または負の整数。"
    },
    {
      "indent": 6,
      "text": "nil -- a null value (major type 7, value 22).",
      "ja": "ゼロ - ヌル値（主要なタイプ7、値22）。"
    },
    {
      "indent": 6,
      "text": "nint -- a negative integer (major type 1).",
      "ja": "NINT  - 負の整数（主要なタイプ1）。"
    },
    {
      "indent": 6,
      "text": "tstr -- a UTF-8 text string (major type 3).",
      "ja": "TSTR  -  UTF-8のテキスト文字列（メジャータイプ3）。"
    },
    {
      "indent": 6,
      "text": "uint -- an unsigned integer (major type 0).",
      "ja": "UINT  - 符号なし整数（主要なタイプ0）。"
    },
    {
      "indent": 3,
      "text": "Two syntaxes from CDDL appear in this document as shorthand. These are:",
      "ja": "CDDLからの2つの構文は、省略形として、この文書に表示されます。これらは："
    },
    {
      "indent": 6,
      "text": "FOO / BAR -- indicates that either FOO or BAR can appear here.",
      "ja": "FOO / BAR  -  FOOやBARのどちらかがここに表示されることがあることを示します。"
    },
    {
      "indent": 6,
      "text": "[+ FOO] -- indicates that the type FOO appears one or more times in an array.",
      "ja": "【+ FOOは]  - タイプFOOは、アレイ内の1つのまたは複数回出現することを示しています。"
    },
    {
      "indent": 3,
      "text": "As well as the prose description, a version of a CBOR grammar is presented in CDDL. Since CDDL has not been published in an RFC, this grammar may not work with the final version of CDDL. The CDDL grammar is informational; the prose description is normative.",
      "ja": "同様に散文記述として、CBOR文法のバージョンは、CDDLに提示されています。 CDDLはRFCで公開されていないので、この文法はCDDLの最終版では動作しない場合があります。 CDDL文法は情報です。散文の記述は規範的です。"
    },
    {
      "indent": 3,
      "text": "The collected CDDL can be extracted from the XML version of this document via the following XPath expression below. (Depending on the XPath evaluator one is using, it may be necessary to deal with &gt; as an entity.)",
      "ja": "収集CDDLは、以下の次のXPath式を介してこの文書のXMLバージョンから抽出することができます。 （一方が使用されたXPathの評価に応じて、と＆GT対処する必要があるかもしれない;エンティティとして）。"
    },
    {
      "indent": 3,
      "text": "//artwork[@type='CDDL']/text()",
      "ja": "//アートワーク[タイプ@ = 'CDDL'] /テキスト（）"
    },
    {
      "indent": 3,
      "text": "CDDL expects the initial non-terminal symbol to be the first symbol in the file. For this reason, the first fragment of CDDL is presented here.",
      "ja": "CDDLは、最初の非終端記号は、ファイルの最初のシンボルであることを期待しています。このため、CDDLの最初の断片がここに提示されます。"
    },
    {
      "indent": 3,
      "text": "start = COSE_Messages / COSE_Key / COSE_KeySet / Internal_Types",
      "ja": "開始= COSE_Messages / COSE_Key / COSE_KeySet / Internal_Types"
    },
    {
      "indent": 3,
      "text": "; This is defined to make the tool quieter: Internal_Types = Sig_structure / Enc_structure / MAC_structure / COSE_KDF_Context",
      "ja": ";これは、ツールは静かにするために定義されていますInternal_Types = Sig_structure / Enc_structure / MAC_structure / COSE_KDF_Context"
    },
    {
      "indent": 3,
      "text": "The non-terminal Internal_Types is defined for dealing with the automated validation tools used during the writing of this document. It references those non-terminals that are used for security computations but are not emitted for transport.",
      "ja": "非終端Internal_Typesは、本書の執筆時に使用される自動検証ツールに対処するために定義されています。これは、セキュリティ上の計算に使用されていますが輸送のために放出されていないものを非端末を参照しています。"
    },
    {
      "indent": 0,
      "text": "1.4. CBOR-Related Terminology",
      "section_title": true,
      "ja": "1.4。 CBOR関連用語"
    },
    {
      "indent": 3,
      "text": "In JSON, maps are called objects and only have one kind of map key: a string. In COSE, we use strings, negative integers, and unsigned integers as map keys. The integers are used for compactness of encoding and easy comparison. The inclusion of strings allows for an additional range of short encoded values to be used as well. Since the word \"key\" is mainly used in its other meaning, as a cryptographic key, we use the term \"label\" for this usage as a map key.",
      "ja": "JSONでは、マップはオブジェクトと呼ばれ、唯一のマップキーの一種持っている：文字列を。 COSEでは、我々は、マップのキーとして文字列、負の整数、符号なし整数を使用します。整数は、符号化と比較しやすいのコンパクトのために使用されています。文字列を含めることも同様に使用される短符号化された値の追加の範囲を可能にします。単語「キー」は、主に暗号鍵として、そのほかの意味で使用されているので、我々は、マップキーとして使用のための用語「標識」を使用します。"
    },
    {
      "indent": 3,
      "text": "The presence of a label in a COSE map that is not a string or an integer is an error. Applications can either fail processing or process messages with incorrect labels; however, they MUST NOT create messages with incorrect labels.",
      "ja": "ストリング又は整数でないCOSEマップ中の標識の存在は、誤りです。アプリケーションは、間違ったラベル付き処理やプロセスのメッセージを失敗しますか。しかし、彼らは間違ったラベルの付いたメッセージを作成してはいけません。"
    },
    {
      "indent": 3,
      "text": "A CDDL grammar fragment defines the non-terminal 'label', as in the previous paragraph, and 'values', which permits any value to be used.",
      "ja": "CDDL文法断片を使用する任意の値を可能にする、前の段落のように、非末端「ラベル」を定義し、「値」。"
    },
    {
      "indent": 3,
      "text": "label = int / tstr values = any",
      "ja": "ラベル= INT / TSTR値=任意の"
    },
    {
      "indent": 0,
      "text": "1.5. Document Terminology",
      "section_title": true,
      "ja": "1.5。ドキュメントの用語"
    },
    {
      "indent": 3,
      "text": "In this document, we use the following terminology:",
      "ja": "この文書では、我々は次の用語を使用します。"
    },
    {
      "indent": 3,
      "text": "Byte is a synonym for octet.",
      "ja": "バイトがオクテットの同義語です。"
    },
    {
      "indent": 3,
      "text": "Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use in constrained systems. It is defined in [RFC7252].",
      "ja": "制約アプリケーションプロトコル（CoAP）は、拘束システムにおいて使用するための専用のウェブ転送プロトコルです。それは、[RFC7252]で定義されています。"
    },
    {
      "indent": 3,
      "text": "Authenticated Encryption (AE) [RFC5116] algorithms are those encryption algorithms that provide an authentication check of the contents algorithm with the encryption service.",
      "ja": "認証された暗号化（AE）[RFC5116]のアルゴリズムは、暗号化サービスとコンテンツのアルゴリズムの認証チェックを提供し、これらの暗号化アルゴリズムです。"
    },
    {
      "indent": 3,
      "text": "Authenticated Encryption with Authenticated Data (AEAD) [RFC5116] algorithms provide the same content authentication service as AE algorithms, but they additionally provide for authentication of non-encrypted data as well.",
      "ja": "認証されたデータ（AEAD）で認証暗号化[RFC5116]アルゴリズムはAEアルゴリズムと同じコンテンツ認証サービスを提供するが、それらは、さらに、同様に非暗号化データの認証を提供します。"
    },
    {
      "indent": 0,
      "text": "2. Basic COSE Structure",
      "section_title": true,
      "ja": "2.基本構造THINGS"
    },
    {
      "indent": 3,
      "text": "The COSE object structure is designed so that there can be a large amount of common code when parsing and processing the different types of security messages. All of the message structures are built on the CBOR array type. The first three elements of the array always contain the same information:",
      "ja": "解析し、セキュリティメッセージの種類を処理するときに共通のコードが大量に存在することができるように、COSEオブジェクト構造が設計されています。メッセージ構造のすべてがCBORアレイタイプ上に構築されています。配列の最初の3つの要素が常に同じ情報が含まれています。"
    },
    {
      "indent": 3,
      "text": "1. The set of protected header parameters wrapped in a bstr.",
      "section_title": true,
      "ja": "BSTRに包まれた保護されたヘッダ・パラメータの1組。"
    },
    {
      "indent": 3,
      "text": "2. The set of unprotected header parameters as a map.",
      "section_title": true,
      "ja": "マップとして保護されていないヘッダパラメータの2セット。"
    },
    {
      "indent": 3,
      "text": "3. The content of the message. The content is either the plaintext or the ciphertext as appropriate. The content may be detached, but the location is still used. The content is wrapped in a bstr when present and is a nil value when detached.",
      "ja": "3.メッセージの内容。コンテンツは、平文または適切な暗号文のいずれかです。コンテンツは、取り外すことができるが、場所がまだ使用されています。コンテンツが存在する場合BSTRで包み、取り外したときにゼロ値です。"
    },
    {
      "indent": 3,
      "text": "Elements after this point are dependent on the specific message type.",
      "ja": "この時点後の要素は、特定のメッセージの種類に依存しています。"
    },
    {
      "indent": 3,
      "text": "COSE messages are also built using the concept of layers to separate different types of cryptographic concepts. As an example of how this works, consider the COSE_Encrypt message (Section 5.1). This message type is broken into two layers: the content layer and the recipient layer. In the content layer, the plaintext is encrypted and information about the encrypted message is placed. In the recipient layer, the content encryption key (CEK) is encrypted and information about how it is encrypted for each recipient is placed. A single layer version of the encryption message COSE_Encrypt0 (Section 5.2) is provided for cases where the CEK is pre-shared.",
      "ja": "COSEメッセージも暗号コンセプトの異なる種類を分離するためにレイヤの概念を使用して構築されています。これがどのように動作するかの例として、COSE_Encryptメッセージ（セクション5.1）を考えます。コンテンツ層と受信者層：このメッセージタイプは二層に分割されます。コンテンツ層において、平文を暗号化され、暗号化されたメッセージに関する情報が配置されています。受信者層では、コンテンツ暗号化キー（CEK）が暗号化され、それが受信者ごとに暗号化された方法についての情報が配置されます。暗号化メッセージCOSE_Encrypt0（セクション5.2）の単層バージョンは、CEKを事前共有する場合のために提供されます。"
    },
    {
      "indent": 3,
      "text": "Identification of which type of message has been presented is done by the following methods:",
      "ja": "メッセージのタイプが提示されたの同定は、以下の方法によって行われます。"
    },
    {
      "indent": 3,
      "text": "1. The specific message type is known from the context. This may be defined by a marker in the containing structure or by restrictions specified by the application protocol.",
      "ja": "1.特定のメッセージタイプは、コンテキストから知られています。これは含む構造中のマーカーによって、またはアプリケーション・プロトコルにより指定制約によって定義されてもよいです。"
    },
    {
      "indent": 3,
      "text": "2. The message type is identified by a CBOR tag. Messages with a CBOR tag are known in this specification as tagged messages, while those without the CBOR tag are known as untagged messages. This document defines a CBOR tag for each of the message structures. These tags can be found in Table 1.",
      "ja": "2.メッセージタイプはCBORタグによって識別されます。 CBORタグのないものはタグなしメッセージとして知られているがCBORタグ付きメッセージは、タグ付けされたメッセージとして本明細書で知られています。この文書では、メッセージ構造のそれぞれについてCBORタグを定義します。これらのタグは、表1に記載されています。"
    },
    {
      "indent": 3,
      "text": "3. When a COSE object is carried in a media type of 'application/ cose', the optional parameter 'cose-type' can be used to identify the embedded object. The parameter is OPTIONAL if the tagged version of the structure is used. The parameter is REQUIRED if the untagged version of the structure is used. The value to use with the parameter for each of the structures can be found in Table 1.",
      "ja": "COSEのオブジェクトが「アプリケーション/ COSE」のメディアタイプに搬入されると3、オプションのパラメータ「COSE型」埋め込みオブジェクトを識別するために使用することができます。構造のタグ付きバージョンが使用される場合、パラメータはオプションです。構造のタグ付けされていないバージョンが使用される場合、パラメータは必須です。構造体の各々のパラメータで使用する値は、表1に見出すことができます。"
    },
    {
      "indent": 3,
      "text": "4. When a COSE object is carried as a CoAP payload, the CoAP Content-Format Option can be used to identify the message content. The CoAP Content-Format values can be found in Table 26. The CBOR tag for the message structure is not required as each security message is uniquely identified.",
      "ja": "COSEオブジェクトがCoAPペイロードとして運ばれる場合4. CoAPコンテンツフォーマットオプションは、メッセージの内容を識別するために使用することができます。 CoAPコンテンツフォーマットの値は、各セキュリティメッセージが一意に識別されるように要求されないメッセージ構造表26. CBORタグに見出すことができます。"
    },
    {
      "indent": 3,
      "text": "+-------+---------------+---------------+---------------------------+\n| CBOR  | cose-type     | Data Item     | Semantics                 |\n| Tag   |               |               |                           |\n+-------+---------------+---------------+---------------------------+\n| 98    | cose-sign     | COSE_Sign     | COSE Signed Data Object   |\n| 18    | cose-sign1    | COSE_Sign1    | COSE Single Signer Data   |\n|       |               |               | Object                    |\n| 96    | cose-encrypt  | COSE_Encrypt  | COSE Encrypted Data       |\n|       |               |               | Object                    |\n| 16    | cose-encrypt0 | COSE_Encrypt0 | COSE Single Recipient     |\n|       |               |               | Encrypted Data Object     |\n| 97    | cose-mac      | COSE_Mac      | COSE MACed Data Object    |\n| 17    | cose-mac0     | COSE_Mac0     | COSE Mac w/o Recipients   |\n|       |               |               | Object                    |\n+-------+---------------+---------------+---------------------------+",
      "raw": true
    },
    {
      "indent": 19,
      "text": "Table 1: COSE Message Identification",
      "ja": "表1：COSEメッセージの識別"
    },
    {
      "indent": 3,
      "text": "The following CDDL fragment identifies all of the top messages defined in this document. Separate non-terminals are defined for the tagged and the untagged versions of the messages.",
      "ja": "次CDDLの断片は、この文書で定義されたトップすべてのメッセージを識別します。別の非端末がタグ付けされたとのメッセージのタグなしバージョンのために定義されています。"
    },
    {
      "indent": 3,
      "text": "COSE_Messages = COSE_Untagged_Message / COSE_Tagged_Message",
      "ja": "COSE_Messages = COSE_Untagged_Message / COSE_Tagged_Message"
    },
    {
      "indent": 3,
      "text": "COSE_Untagged_Message = COSE_Sign / COSE_Sign1 / COSE_Encrypt / COSE_Encrypt0 / COSE_Mac / COSE_Mac0",
      "ja": "COSE_Untagged_Message = COSE_Sign / COSE_Sign1 / COSE_Encrypt / COSE_Encrypt0 / COSE_Mac / COSE_Mac0"
    },
    {
      "indent": 3,
      "text": "COSE_Tagged_Message = COSE_Sign_Tagged / COSE_Sign1_Tagged / COSE_Encrypt_Tagged / COSE_Encrypt0_Tagged / COSE_Mac_Tagged / COSE_Mac0_Tagged",
      "ja": "COSE_Tagged_Message = COSE_Sign_Tagged / COSE_Sign1_Tagged / COSE_Encrypt_Tagged / COSE_Encrypt0_Tagged / COSE_Mac_Tagged / COSE_Mac0_Tagged"
    },
    {
      "indent": 0,
      "text": "3. Header Parameters",
      "section_title": true,
      "ja": "3.ヘッダパラメータ"
    },
    {
      "indent": 3,
      "text": "The structure of COSE has been designed to have two buckets of information that are not considered to be part of the payload itself, but are used for holding information about content, algorithms, keys, or evaluation hints for the processing of the layer. These two buckets are available for use in all of the structures except for keys. While these buckets are present, they may not all be usable in all instances. For example, while the protected bucket is defined as part of the recipient structure, some of the algorithms used for recipient structures do not provide for authenticated data. If this is the case, the protected bucket is left empty.",
      "ja": "COSEの構造は、ペイロード自体の一部であると見なされていない情報の2つのバケットを有するように設計されているが、層の処理のための内容、アルゴリズム、鍵、または評価ヒント情報を保持するために使用されます。これらの2つのバケットは、キー以外の構造のすべてで使用できます。これらのバケットが存在するが、それらはすべて、すべてのインスタンスで使用できない場合があります。保護されたバケットが受信者構造の一部として定義されている間、例えば、レシピエントの構造のために使用されるアルゴリズムのいくつかは、認証されたデータを提供しません。このような場合は、保護されたバケットが空のままにされます。"
    },
    {
      "indent": 3,
      "text": "Both buckets are implemented as CBOR maps. The map key is a 'label' (Section 1.4). The value portion is dependent on the definition for the label. Both maps use the same set of label/value pairs. The integer and string values for labels have been divided into several sections including a standard range, a private range, and a range that is dependent on the algorithm selected. The defined labels can be found in the \"COSE Header Parameters\" IANA registry (Section 16.2).",
      "ja": "どちらのバケットはCBORマップとして実装されています。マップキーは、「ラベル」（セクション1.4）です。値部分は、ラベルの定義に依存しています。どちらのマップは、ラベル/値ペアの同じセットを使用します。ラベルの整数、文字列値は、標準範囲、プライベート範囲、および選択されたアルゴリズムに依存している範囲を含むいくつかのセクションに分割されています。定義されたラベルは、「COSEヘッダパラメータ」IANAレジストリ（セクション16.2）で見つけることができます。"
    },
    {
      "indent": 3,
      "text": "Two buckets are provided for each layer:",
      "ja": "2つのバケットは、それぞれの層のために提供されています。"
    },
    {
      "indent": 3,
      "text": "protected: Contains parameters about the current layer that are to be cryptographically protected. This bucket MUST be empty if it is not going to be included in a cryptographic computation. This bucket is encoded in the message as a binary object. This value is obtained by CBOR encoding the protected map and wrapping it in a bstr object. Senders SHOULD encode a zero-length map as a zero-length string rather than as a zero-length map (encoded as h'a0'). The zero-length binary encoding is preferred because it is both shorter and the version used in the serialization structures for cryptographic computation. After encoding the map, the value is wrapped in the binary object. Recipients MUST accept both a zero-length binary value and a zero-length map encoded in the binary value. The wrapping allows for the encoding of the protected map to be transported with a greater chance that it will not be altered in transit. (Badly behaved intermediates could decode and re-encode, but this will result in a failure to verify unless the re-encoded byte string is identical to the decoded byte string.) This avoids the problem of all parties needing to be able to do a common canonical encoding.",
      "ja": "保護：暗号で保護されるようにしている現在の層についてのパラメータが含まれています。暗号計算に含まれる予定されていない場合、このバケットは空である必要があります。このバケットはバイナリオブジェクトとしてメッセージに符号化されます。この値は、保護されたマップを符号化し、BSTRオブジェクトでそれを包むCBORすることによって得られます。送信者は、長さゼロの文字列としてではなく、長さゼロのマップ（H'A0' としてエンコード）のように長さゼロのマップを符号化するべきです。それは短く、暗号演算のためのシリアライゼーション構造で使用されるバージョンの両方であるので、長さゼロのバイナリエンコーディングが好ましいです。マップを符号化した後、値がバイナリオブジェクトに包まれています。受信者は、長さゼロのバイナリ値とバイナリ値で符号化された長さゼロのマップの両方を受け入れなければなりません。包装は、輸送中に変更されないことを大きなチャンスと搬送される保護されたマップの符号化を可能にします。 （行儀中間体が復号でき、再エンコードが、再エンコードされたバイト列が復号バイト文字列と同じでない限り、これは検証に失敗をもたらすであろう。）これは、行うことができるようにする必要がすべての当事者の問題を回避します一般的な標準的なエンコーディング。"
    },
    {
      "indent": 3,
      "text": "unprotected: Contains parameters about the current layer that are not cryptographically protected.",
      "ja": "保護されていない：暗号で保護されていない現在の層についてのパラメータが含まれています。"
    },
    {
      "indent": 3,
      "text": "Only parameters that deal with the current layer are to be placed at that layer. As an example of this, the parameter 'content type' describes the content of the message being carried in the message. As such, this parameter is placed only in the content layer and is not placed in the recipient or signature layers. In principle, one should be able to process any given layer without reference to any other layer. With the exception of the COSE_Sign structure, the only data that needs to cross layers is the cryptographic key.",
      "ja": "現在のレイヤーを扱う唯一のパラメータは、その層に配置されることになります。この一例として、パラメータ「コンテンツタイプ」はメッセージ中で搬送されるメッセージの内容を記述する。このように、このパラメータは、コンテンツの層に配置され、受信者または署名層に配置されていません。原理的には、一方が他の層を参照することなく、任意の層を処理することができなければなりません。 COSE_Sign構造を除いて、層を横断する必要がある唯一のデータは、暗号鍵です。"
    },
    {
      "indent": 3,
      "text": "The buckets are present in all of the security objects defined in this document. The fields in order are the 'protected' bucket (as a CBOR 'bstr' type) and then the 'unprotected' bucket (as a CBOR 'map' type). The presence of both buckets is required. The parameters that go into the buckets come from the IANA \"COSE Header Parameters\" registry (Section 16.2). Some common parameters are defined in the next section, but a number of parameters are defined throughout this document.",
      "ja": "バケットは、この文書で定義されたセキュリティオブジェクトのすべてに存在しています。順序内のフィールドは、（CBOR「BSTR」タイプのような）「保護」バケット（CBOR「マップ」タイプなど）を「非保護」バケツです。両方のバケットの存在が必要とされます。バケットに行くのパラメータは、IANA「COSEヘッダパラメータ」レジストリ（セクション16.2）から来ます。いくつかの一般的なパラメータは、次のセクションで定義されていますが、パラメータの数は、本書で定義されています。"
    },
    {
      "indent": 3,
      "text": "Labels in each of the maps MUST be unique. When processing messages, if a label appears multiple times, the message MUST be rejected as malformed. Applications SHOULD verify that the same label does not occur in both the protected and unprotected headers. If the message is not rejected as malformed, attributes MUST be obtained from the protected bucket before they are obtained from the unprotected bucket.",
      "ja": "マップの各ラベルは一意である必要があります。メッセージを処理するとラベルが複数回表示された場合、メッセージは、不正な形式として拒絶しなければなりません。アプリケーションは、同じラベルの両方に保護し、保護されていないヘッダに発生していないことを確認する必要があります。メッセージは不正な形式として拒否されていない場合、彼らは保護されていないバケツから取得される前に、属性が保護されたバケットから取得する必要があります。"
    },
    {
      "indent": 3,
      "text": "The following CDDL fragment represents the two header buckets. A group \"Headers\" is defined in CDDL that represents the two buckets in which attributes are placed. This group is used to provide these two fields consistently in all locations. A type is also defined that represents the map of common headers.",
      "ja": "以下CDDLフラグメントは、2つのヘッダバケットを表します。グループ「ヘッダ」は属性が配置された2つのバケットを表すCDDLに定義されています。このグループは、すべての場所で一貫これらの二つのフィールドを提供するために使用されます。タイプは、共通ヘッダのマップを表すように定義されています。"
    },
    {
      "indent": 3,
      "text": "Headers = ( protected : empty_or_serialized_map, unprotected : header_map )",
      "ja": "ヘッダ=（保護：empty_or_serialized_map、保護されていない：header_map）"
    },
    {
      "indent": 3,
      "text": "header_map = { Generic_Headers, * label => values }",
      "ja": "header_map = {Generic_Headers、*ラベル=>値}"
    },
    {
      "indent": 3,
      "text": "empty_or_serialized_map = bstr .cbor header_map / bstr .size 0",
      "ja": "empty_or_serialized_map = BSTR .cbor header_map / BSTR .size 0"
    },
    {
      "indent": 0,
      "text": "3.1. Common COSE Headers Parameters",
      "section_title": true,
      "ja": "3.1。共通COSEヘッダパラメータ"
    },
    {
      "indent": 3,
      "text": "This section defines a set of common header parameters. A summary of these parameters can be found in Table 2. This table should be consulted to determine the value of label and the type of the value.",
      "ja": "このセクションでは、共通ヘッダパラメータのセットを定義します。これらのパラメータの要約を表2に示す。この表は、ラベルの値と値の種類を決定するために相談すべきで見出すことができます。"
    },
    {
      "indent": 3,
      "text": "The set of header parameters defined in this section are:",
      "ja": "このセクションで定義されたヘッダパラメータのセットは、次のとおり"
    },
    {
      "indent": 3,
      "text": "alg: This parameter is used to indicate the algorithm used for the security processing. This parameter MUST be authenticated where the ability to do so exists. This support is provided by AEAD algorithms or construction (COSE_Sign, COSE_Sign0, COSE_Mac, and COSE_Mac0). This authentication can be done either by placing the header in the protected header bucket or as part of the externally supplied data. The value is taken from the \"COSE Algorithms\" registry (see Section 16.4).",
      "ja": "ALG：このパラメータは、セキュリティ処理のために使用するアルゴリズムを示すために使用されます。行う能力がそれほど存在する場合、このパラメータは、認証される必要があります。このサポートはAEADアルゴリズムまたは構造（COSE_Sign、COSE_Sign0、COSE_Mac、及びCOSE_Mac0）によって提供されます。この認証は、保護されたヘッダバケットにヘッダを置くことによって、または外部から供給されるデータの一部としてのいずれかで行うことができます。値が「COSEアルゴリズム」、レジストリから取得されます（16.4節を参照してください）。"
    },
    {
      "indent": 3,
      "text": "crit: The parameter is used to indicate which protected header labels an application that is processing a message is required to understand. Parameters defined in this document do not need to be included as they should be understood by all implementations. When present, this parameter MUST be placed in the protected header bucket. The array MUST have at least one value in it. Not all labels need to be included in the 'crit' parameter. The rules for deciding which header labels are placed in the array are:",
      "ja": "CRIT：パラメータは、ヘッダがメッセージを処理しているアプリケーションを理解するために必要とされるラベル保護かを示すために使用されます。この文書で定義されたパラメータは、彼らがすべての実装によって理解されるべきであるとして含まれている必要はありません。存在する場合、このパラメータは、保護されたヘッダのバケツに入れなければなりません。配列は、その中に少なくとも1つの値を持つ必要があります。いないすべてのラベルには「クリティカル」パラメータに含まれる必要があります。ヘッダラベルがアレイ状に配置されて決定するための規則は次のとおりです。"
    },
    {
      "indent": 6,
      "text": "* Integer labels in the range of 0 to 8 SHOULD be omitted.",
      "ja": "* 0~8の範囲の整数ラベルは省略されるべきです。"
    },
    {
      "indent": 6,
      "text": "* Integer labels in the range -1 to -128 can be omitted as they are algorithm dependent. If an application can correctly process an algorithm, it can be assumed that it will correctly process all of the common parameters associated with that algorithm. Integer labels in the range -129 to -65536 SHOULD be included as these would be less common parameters that might not be generally supported.",
      "ja": "彼らは、アルゴリズムに依存しているとして*範囲-1 -128までで整数ラベルは省略することができます。アプリケーションが正しくアルゴリズムを処理することができれば、正しくそのアルゴリズムに関連する一般的なパラメータのすべてを処理すると仮定することができます。これらは一般的にサポートされていない可能性があり、あまり一般的なパラメータになるよう-65536の範囲-129の整数のラベルが含まれるべきです。"
    },
    {
      "indent": 6,
      "text": "* Labels for parameters required for an application MAY be omitted. Applications should have a statement if the label can be omitted.",
      "ja": "*アプリケーションに必要なパラメータのラベルは省略されるかもしれません。ラベルは省略できる場合にアプリケーションは、ステートメントを持っている必要があります。"
    },
    {
      "indent": 6,
      "text": "The header parameter values indicated by 'crit' can be processed by either the security library code or an application using a security library; the only requirement is that the parameter is processed. If the 'crit' value list includes a value for which the parameter is not in the protected bucket, this is a fatal error in processing the message.",
      "ja": "「クリティカル」で示すヘッダ・パラメータ値は、セキュリティライブラリコードまたはセキュリティライブラリを使用してアプリケーションのいずれかによって処理することができます。唯一の要件は、パラメータが処理されていることです。 「クリティカル」値の一覧がパラメータが保護バケツにされていない値が含まれている場合、これは、メッセージの処理中に致命的なエラーです。"
    },
    {
      "indent": 3,
      "text": "content type: This parameter is used to indicate the content type of the data in the payload or ciphertext fields. Integers are from the \"CoAP Content-Formats\" IANA registry table [COAP.Formats]. Text values following the syntax of \"<type-name>/<subtype-name>\" where <type-name> and <subtype-name> are defined in Section 4.2 of [RFC6838]. Leading and trailing whitespace is also omitted. Textual content values along with parameters and subparameters can be located using the IANA \"Media Types\" registry. Applications SHOULD provide this parameter if the content structure is potentially ambiguous.",
      "ja": "コンテンツタイプ：このパラメータは、ペイロードまたは暗号テキストフィールドのデータのコンテンツタイプを示すために使用されます。整数は[COAP.Formats]「CoAPのコンテンツフォーマット」IANAレジストリテーブルからです。構文次のテキスト値を「<タイプ名> / <サブタイプ名>」ここで、<型名>と<サブタイプ名> [RFC6838]のセクション4.2で定義されています。先頭と末尾の空白をも省略されています。パラメータとサブパラメータと一緒にテキストコンテンツ値はIANA「メディアタイプ」レジストリを使用して配置することができます。コンテンツ構造は、潜在的に曖昧であればアプリケーションは、このパラメータを提供する必要があります。"
    },
    {
      "indent": 3,
      "text": "kid: This parameter identifies one piece of data that can be used as input to find the needed cryptographic key. The value of this parameter can be matched against the 'kid' member in a COSE_Key structure. Other methods of key distribution can define an equivalent field to be matched. Applications MUST NOT assume that 'kid' values are unique. There may be more than one key with the same 'kid' value, so all of the keys associated with this 'kid' may need to be checked. The internal structure of 'kid' values is not defined and cannot be relied on by applications. Key identifier values are hints about which key to use. This is not a security-critical field. For this reason, it can be placed in the unprotected headers bucket.",
      "ja": "子供：このパラメータは、必要な暗号鍵を見つけるために、入力として使用することができ、データの一片を識別します。このパラメータの値は、COSE_Key構造の「子供」メンバと照合することができます。鍵配布の他の方法が一致する同等のフィールドを定義することができます。アプリケーションは、「子供」の値が一意であると仮定してはいけません。そこ同じ「子供」の値を持つ複数のキーであってもよいし、そうこの「子供」に関連したすべてのキーをチェックする必要があるかもしれません。 「子供」の値の内部構造が定義されていないため、アプリケーションによって依拠することはできません。キー識別子の値は、キーを使用するかについてのヒントです。これは、セキュリティが重要なフィールドではありません。このため、保護されていないヘッダのバケツに入れることができます。"
    },
    {
      "indent": 3,
      "text": "IV: This parameter holds the Initialization Vector (IV) value. For some symmetric encryption algorithms, this may be referred to as a nonce. The IV can be placed in the unprotected header as modifying the IV will cause the decryption to yield plaintext that is readily detectable as garbled.",
      "ja": "IV：このパラメータは、初期化ベクトル（IV）値を保持しています。いくつかの対称暗号化アルゴリズムのために、これはノンスと呼ぶことができます。 IVは、IVを変更するように保護されていないヘッダ内に配置することができる復号化が化けとして容易に検出可能である平文を生成する原因となります。"
    },
    {
      "indent": 3,
      "text": "Partial IV: This parameter holds a part of the IV value. When using the COSE_Encrypt0 structure, a portion of the IV can be part of the context associated with the key. This field is used to carry a value that causes the IV to be changed for each message. The IV can be placed in the unprotected header as modifying the IV will cause the decryption to yield plaintext that is readily detectable as garbled. The 'Initialization Vector' and 'Partial Initialization Vector' parameters MUST NOT both be present in the same security layer.",
      "ja": "部分IV：このパラメータは、IV値の一部を保持しています。 COSE_Encrypt0構造を使用する場合、IVの一部は、キーに関連付けられているコンテキストの一部であってもよいです。このフィールドは、IVは、各メッセージに変更させる値を搬送するために使用されます。 IVは、IVを変更するように保護されていないヘッダ内に配置することができる復号化が化けとして容易に検出可能である平文を生成する原因となります。 「初期ベクトル」と「部分的な初期化ベクトル」パラメータは両方とも同じセキュリティ層中に存在してはなりません。"
    },
    {
      "indent": 6,
      "text": "The message IV is generated by the following steps:",
      "ja": "メッセージのIVは、以下の手順によって生成されます。"
    },
    {
      "indent": 6,
      "text": "1. Left-pad the Partial IV with zeros to the length of IV.",
      "section_title": true,
      "ja": "1.左パッドIVの長さにゼロで部分IV。"
    },
    {
      "indent": 6,
      "text": "2. XOR the padded Partial IV with the context IV.",
      "section_title": true,
      "ja": "2. XORコンテキストIVとパディング部分IV。"
    },
    {
      "indent": 3,
      "text": "counter signature: This parameter holds one or more counter signature values. Counter signatures provide a method of having a second party sign some data. The counter signature parameter can occur as an unprotected attribute in any of the following structures: COSE_Sign1, COSE_Signature, COSE_Encrypt, COSE_recipient, COSE_Encrypt0, COSE_Mac, and COSE_Mac0. These structures all have the same beginning elements, so that a consistent calculation of the counter signature can be computed. Details on computing counter signatures are found in Section 4.5.",
      "ja": "カウンタ署名：このパラメータは、1つまたは複数のカウンタ署名値を保持しています。カウンタ署名は、第二者がいくつかのデータを署名した方法を提供します。 COSE_Sign1、COSE_Signature、COSE_Encrypt、COSE_recipient、COSE_Encrypt0、COSE_Mac、及びCOSE_Mac0：カウンタ署名パラメータは、以下の構造のいずれかで保護されていない属性として生じ得ます。カウンタ署名の一貫性の計算が計算できるように、これらの構造の全ては、同じ始まる要素を持っています。カウンタ署名を計算の詳細については、4.5節に記載されています。"
    },
    {
      "indent": 3,
      "text": "+-----------+-------+----------------+-------------+----------------+\n| Name      | Label | Value Type     | Value       | Description    |\n|           |       |                | Registry    |                |\n+-----------+-------+----------------+-------------+----------------+\n| alg       | 1     | int / tstr     | COSE        | Cryptographic  |\n|           |       |                | Algorithms  | algorithm to   |\n|           |       |                | registry    | use            |\n| crit      | 2     | [+ label]      | COSE Header | Critical       |\n|           |       |                | Parameters  | headers to be  |\n|           |       |                | registry    | understood     |\n| content   | 3     | tstr / uint    | CoAP        | Content type   |\n| type      |       |                | Content-    | of the payload |\n|           |       |                | Formats or  |                |\n|           |       |                | Media Types |                |\n|           |       |                | registries  |                |\n| kid       | 4     | bstr           |             | Key identifier |\n| IV        | 5     | bstr           |             | Full           |\n|           |       |                |             | Initialization |\n|           |       |                |             | Vector         |\n| Partial   | 6     | bstr           |             | Partial        |\n| IV        |       |                |             | Initialization |\n|           |       |                |             | Vector         |\n| counter   | 7     | COSE_Signature |             | CBOR-encoded   |\n| signature |       | / [+           |             | signature      |\n|           |       | COSE_Signature |             | structure      |\n|           |       | ]              |             |                |\n+-----------+-------+----------------+-------------+----------------+",
      "raw": true
    },
    {
      "indent": 21,
      "text": "Table 2: Common Header Parameters",
      "ja": "表2：共通ヘッダパラメータ"
    },
    {
      "indent": 3,
      "text": "The CDDL fragment that represents the set of headers defined in this section is given below. Each of the headers is tagged as optional because they do not need to be in every map; headers required in specific maps are discussed above.",
      "ja": "このセクションで定義されたヘッダのセットを表すCDDL断片を以下に示します。彼らはすべてのマップである必要はありませんので、ヘッダのそれぞれは、オプションとしてタグ付けされています。特定のマップに必要なヘッダは上述のとおりです。"
    },
    {
      "indent": 3,
      "text": "Generic_Headers = ( ? 1 => int / tstr, ; algorithm identifier ? 2 => [+label], ; criticality ? 3 => tstr / int, ; content type ? 4 => bstr, ; key identifier ? 5 => bstr, ; IV ? 6 => bstr, ; Partial IV ? 7 => COSE_Signature / [+COSE_Signature] ; Counter signature )",
      "ja": "Generic_Headers =（1 => INT / TSTR、;？アルゴリズム識別子2 => [+ラベル];臨界3 => TSTR / INT、;？コンテンツタイプ4 => BSTR、;？キー識別子5 => BSTR ; IV 6 => BSTR、;？部分IV 7 => COSE_Signature / [+ COSE_Signature]、カウンタ署名）"
    },
    {
      "indent": 0,
      "text": "4. Signing Objects",
      "section_title": true,
      "ja": "4.署名オブジェクト"
    },
    {
      "indent": 3,
      "text": "COSE supports two different signature structures. COSE_Sign allows for one or more signatures to be applied to the same content. COSE_Sign1 is restricted to a single signer. The structures cannot be converted between each other; as the signature computation includes a parameter identifying which structure is being used, the converted structure will fail signature validation.",
      "ja": "COSEは、二つの異なる署名構造をサポートしています。 COSE_Signは同じコンテンツに適用される1人の以上の署名を可能にします。 COSE_Sign1は、単一の署名者に制限されています。構造体は、互いの間で変換することができません。署名の計算が使用されている構造の識別パラメータを含むように、変換された構造は、署名検証に失敗します。"
    },
    {
      "indent": 0,
      "text": "4.1. Signing with One or More Signers",
      "section_title": true,
      "ja": "4.1。 1つまたは複数の署名者と署名"
    },
    {
      "indent": 3,
      "text": "The COSE_Sign structure allows for one or more signatures to be applied to a message payload. Parameters relating to the content and parameters relating to the signature are carried along with the signature itself. These parameters may be authenticated by the signature, or just present. An example of a parameter about the content is the content type. Examples of parameters about the signature would be the algorithm and key used to create the signature and counter signatures.",
      "ja": "COSE_Sign構造は、メッセージ・ペイロードに適用される1人の以上の署名を可能にします。署名に関連するコンテンツおよびパラメータに関連するパラメータは、署名自体に沿って搬送されます。これらのパラメータは署名によって認証され、又は単に存在してもよいです。コンテンツに関するパラメータの例は、コンテンツタイプです。署名に関するパラメータの例は、署名及びカウンタ署名を作成するために使用されるアルゴリズムと鍵であろう。"
    },
    {
      "indent": 3,
      "text": "RFC 5652 indicates that:",
      "ja": "RFC 5652には、そのことを示しています。"
    },
    {
      "indent": 6,
      "text": "When more than one signature is present, the successful validation of one signature associated with a given signer is usually treated as a successful signature by that signer. However, there are some application environments where other rules are needed. An application that employs a rule other than one valid signature for each signer must specify those rules. Also, where simple matching of the signer identifier is not sufficient to determine whether the signatures were generated by the same signer, the application specification must describe how to determine which signatures were generated by the same signer. Support for different communities of recipients is the primary reason that signers choose to include more than one signature.",
      "ja": "複数の署名が存在する場合、所定の署名者に関連付けられた1つのシグネチャの成功の検証は、通常、その署名者が成功した署名として扱われます。しかし、他のルールが必要とされるいくつかのアプリケーション環境があります。これらのルールを指定する必要があり、各署名者のための1つの有効な署名以外のルールを採用してアプリケーション。署名者識別子の単純なマッチングが署名が同じ署名者によって生成されたかどうかを決定するのに十分でない場合にも、アプリケーションの仕様が同じ署名者によって生成された署名を決定する方法を説明しなければなりません。受信者の異なるコミュニティのサポートは、署名者が複数の署名を含めるように選択することが主な理由です。"
    },
    {
      "indent": 3,
      "text": "For example, the COSE_Sign structure might include signatures generated with the Edwards-curve Digital Signature Algorithm (EdDSA) [RFC8032] and with the Elliptic Curve Digital Signature Algorithm (ECDSA) [DSS]. This allows recipients to verify the signature associated with one algorithm or the other. More-detailed information on multiple signature evaluations can be found in [RFC5752].",
      "ja": "例えば、COSE_Sign構造はエドワーズ曲線デジタル署名アルゴリズム（エドワーズ曲線デジタル署名アルゴリズム）[RFC8032]とし、楕円曲線デジタル署名アルゴリズム（ECDSA）[DSS]で生成された署名を含むかもしれません。これは、受信者が1つのアルゴリズムまたは他の関連付けられた署名を検証することを可能にします。複数の署名の評価に関するより詳細な情報は、[RFC5752]に見出すことができます。"
    },
    {
      "indent": 3,
      "text": "The signature structure can be encoded as either tagged or untagged depending on the context it will be used in. A tagged COSE_Sign structure is identified by the CBOR tag 98. The CDDL fragment that represents this is:",
      "ja": "それに使用されるコンテキストに応じてタグ付きまたはタグなしのいずれかとして署名構造を符号化することができるA COSE_Sign構造をタグ付けし、これを表すCDDLフラグメントであるCBORタグ98によって識別されます。："
    },
    {
      "indent": 3,
      "text": "COSE_Sign_Tagged = #6.98(COSE_Sign)",
      "ja": "COSE_Sign_Tagged =＃6.98（COSE_Sign）"
    },
    {
      "indent": 3,
      "text": "A COSE Signed Message is defined in two parts. The CBOR object that carries the body and information about the body is called the COSE_Sign structure. The CBOR object that carries the signature and information about the signature is called the COSE_Signature structure. Examples of COSE Signed Messages can be found in Appendix C.1.",
      "ja": "COSE署名されたメッセージは2つの部分で定義されています。本体と本体に関する情報を搬送CBORオブジェクトはCOSE_Sign構造と呼ばれます。署名についての署名情報を運ぶCBORオブジェクトはCOSE_Signature構造と呼ばれています。 COSE署名されたメッセージの例は、付録C.1に記載されています。"
    },
    {
      "indent": 3,
      "text": "The COSE_Sign structure is a CBOR array. The fields of the array in order are:",
      "ja": "COSE_Sign構造はCBOR配列です。順に配列のフィールドは、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "protected: This is as described in Section 3.",
      "ja": "保護された：第3節で説明されているようです。"
    },
    {
      "indent": 3,
      "text": "unprotected: This is as described in Section 3.",
      "ja": "保護されていない：第3節で説明されているようです。"
    },
    {
      "indent": 3,
      "text": "payload: This field contains the serialized content to be signed. If the payload is not present in the message, the application is required to supply the payload separately. The payload is wrapped in a bstr to ensure that it is transported without changes. If the payload is transported separately (\"detached content\"), then a nil CBOR object is placed in this location, and it is the responsibility of the application to ensure that it will be transported without changes.",
      "ja": "ペイロード：このフィールドは、署名するシリアル化されたコンテンツが含まれています。ペイロードがメッセージに存在しない場合、アプリケーションは別々のペイロードを供給する必要があります。ペイロードは、それが変化せずに輸送されることを保証するために、BSTRに包まれています。ペイロードが（「デタッチコンテンツ」）を別々に搬送される場合、ゼロCBORオブジェクトがこの位置に配置され、そして変更せずに輸送されることを保証するために、アプリケーションの責任です。"
    },
    {
      "indent": 6,
      "text": "Note: When a signature with a message recovery algorithm is used (Section 8), the maximum number of bytes that can be recovered is the length of the payload. The size of the payload is reduced by the number of bytes that will be recovered. If all of the bytes of the payload are consumed, then the payload is encoded as a zero-length binary string rather than as being absent.",
      "ja": "注：メッセージ回復アルゴリズムと署名（セクション8）を用いる場合、回収することができる最大バイト数は、ペイロードの長さです。ペイロードのサイズは、回収されたバイト数だけ減少します。ペイロードのバイトの全てが消費されている場合、ペイロードは長さゼロのバイナリ文字列としてではなく、存在しないものとして符号化されます。"
    },
    {
      "indent": 3,
      "text": "signatures: This field is an array of signatures. Each signature is represented as a COSE_Signature structure.",
      "ja": "署名：このフィールドは、署名の配列です。各署名はCOSE_Signature構造として表されます。"
    },
    {
      "indent": 3,
      "text": "The CDDL fragment that represents the above text for COSE_Sign follows.",
      "ja": "COSE_Signための上記のテキストを表すCDDL断片は以下の通りです。"
    },
    {
      "indent": 3,
      "text": "COSE_Sign = [ Headers, payload : bstr / nil, signatures : [+ COSE_Signature] ]",
      "ja": "COSE_Sign = [ヘッダ、ペイロード：BSTR /ゼロ、署名：[+ COSE_Signature]"
    },
    {
      "indent": 3,
      "text": "The COSE_Signature structure is a CBOR array. The fields of the array in order are:",
      "ja": "COSE_Signature構造はCBOR配列です。順に配列のフィールドは、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "protected: This is as described in Section 3.",
      "ja": "保護された：第3節で説明されているようです。"
    },
    {
      "indent": 3,
      "text": "unprotected: This is as described in Section 3.",
      "ja": "保護されていない：第3節で説明されているようです。"
    },
    {
      "indent": 3,
      "text": "signature: This field contains the computed signature value. The type of the field is a bstr. Algorithms MUST specify padding if the signature value is not a multiple of 8 bits.",
      "ja": "署名：このフィールドは、計算された署名値が含まれています。フィールドの型がBSTRです。署名値は8ビットの倍数でない場合、アルゴリズムは、パディングを指定しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The CDDL fragment that represents the above text for COSE_Signature follows.",
      "ja": "COSE_Signatureための上記のテキストを表すCDDL断片は以下の通りです。"
    },
    {
      "indent": 3,
      "text": "COSE_Signature = [ Headers, signature : bstr ]",
      "ja": "COSE_Signature = [ヘッダ、署名：BSTR]"
    },
    {
      "indent": 0,
      "text": "4.2. Signing with One Signer",
      "section_title": true,
      "ja": "4.2。一つの署名者と署名"
    },
    {
      "indent": 3,
      "text": "The COSE_Sign1 signature structure is used when only one signature is going to be placed on a message. The parameters dealing with the content and the signature are placed in the same pair of buckets rather than having the separation of COSE_Sign.",
      "ja": "唯一の署名がメッセージに配置されようとしているときにCOSE_Sign1署名構造が使用されています。コンテンツと署名を扱うパラメータはなくCOSE_Signの分離を有するよりも、バケットの同じペアで配置されています。"
    },
    {
      "indent": 3,
      "text": "The structure can be encoded as either tagged or untagged depending on the context it will be used in. A tagged COSE_Sign1 structure is identified by the CBOR tag 18. The CDDL fragment that represents this is:",
      "ja": "それに使用されるコンテキストに応じてタグ付きまたはタグなしのいずれかとして構造を符号化することができるAはCOSE_Sign1構造はこれを表すCDDLフラグメントであるCBORタグ18によって識別されるタグ付けされました："
    },
    {
      "indent": 3,
      "text": "COSE_Sign1_Tagged = #6.18(COSE_Sign1)",
      "ja": "COSE_Sign1_Tagged =＃6.18（COSE_Sign1）"
    },
    {
      "indent": 3,
      "text": "The CBOR object that carries the body, the signature, and the information about the body and signature is called the COSE_Sign1 structure. Examples of COSE_Sign1 messages can be found in Appendix C.2.",
      "ja": "本体、署名、及び本体及び署名情報を運ぶCBORオブジェクトはCOSE_Sign1構造と呼ばれています。 COSE_Sign1メッセージの例は、付録C.2に記載されています。"
    },
    {
      "indent": 3,
      "text": "The COSE_Sign1 structure is a CBOR array. The fields of the array in order are:",
      "ja": "COSE_Sign1構造はCBOR配列です。順に配列のフィールドは、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "protected: This is as described in Section 3.",
      "ja": "保護された：第3節で説明されているようです。"
    },
    {
      "indent": 3,
      "text": "unprotected: This is as described in Section 3.",
      "ja": "保護されていない：第3節で説明されているようです。"
    },
    {
      "indent": 3,
      "text": "payload: This is as described in Section 4.1.",
      "ja": "ペイロード：セクション4.1で説明したようにこれはあります。"
    },
    {
      "indent": 3,
      "text": "signature: This field contains the computed signature value. The type of the field is a bstr.",
      "ja": "署名：このフィールドは、計算された署名値が含まれています。フィールドの型がBSTRです。"
    },
    {
      "indent": 3,
      "text": "The CDDL fragment that represents the above text for COSE_Sign1 follows.",
      "ja": "COSE_Sign1ための上記のテキストを表すCDDL断片は以下の通りです。"
    },
    {
      "indent": 3,
      "text": "COSE_Sign1 = [ Headers, payload : bstr / nil, signature : bstr ]",
      "ja": "COSE_Sign1 = [ヘッダ、ペイロード：BSTR /ゼロ、署名：BSTR]"
    },
    {
      "indent": 0,
      "text": "4.3. Externally Supplied Data",
      "section_title": true,
      "ja": "4.3。外部から供給されるデータ"
    },
    {
      "indent": 3,
      "text": "One of the features offered in the COSE document is the ability for applications to provide additional data to be authenticated, but that is not carried as part of the COSE object. The primary reason for supporting this can be seen by looking at the CoAP message structure [RFC7252], where the facility exists for options to be carried before the payload. Examples of data that can be placed in this location would be the CoAP code or CoAP options. If the data is in the header section, then it is available for proxies to help in performing its operations. For example, the Accept Option can be used by a proxy to determine if an appropriate value is in the proxy's cache. But the sender can prevent a proxy from changing the set of values that it will accept by including that value in the resulting authentication tag. However, it may also be desired to protect these values so that if they are modified in transit, it can be detected.",
      "ja": "COSE文書で提供される機能の一つは、認証される追加的なデータを提供するアプリケーションのための機能ですが、それはCOSEオブジェクトの一部として実施されていません。これを支持するための主な理由は、オプションがペイロードの前に実施するための機能が存在CoAPメッセージ構造[RFC7252]を見て見ることができます。この位置に配置することができるデータの例は、CoAPコードまたはCoAPオプションであろう。データは、ヘッダ部内にある場合、それは、その操作を実行する際に支援するプロキシのために利用可能です。例えば、受け入れオプション適切な値は、プロキシのキャッシュ内にあるかどうかを決定するためにプロキシによって使用することができます。しかし、送信者は、それは結果の認証タグにその値を含むことにより、受け入れる値のセットを変更するのプロキシを防ぐことができます。しかし、また、それらが輸送中に変更された場合、それを検出できるように、これらの値を保護することが望ましいです。"
    },
    {
      "indent": 3,
      "text": "This document describes the process for using a byte array of externally supplied authenticated data; however, the method of constructing the byte array is a function of the application. Applications that use this feature need to define how the externally supplied authenticated data is to be constructed. Such a construction needs to take into account the following issues:",
      "ja": "この文書では、外部から供給される認証されたデータのバイト配列を使用するためのプロセスを説明し、しかし、バイト配列を構築する方法は、アプリケーションの機能です。この機能を使用するアプリケーションは、外部から供給される認証されたデータをどのように構築すべきかを定義する必要があります。このような構成は、次の問題を考慮に入れる必要があります："
    },
    {
      "indent": 3,
      "text": "o If multiple items are included, applications need to ensure that the same byte string is not produced if there are different inputs. This could occur by appending the strings 'AB' and 'CDE' or by appending the strings 'ABC' and 'DE'. This is usually addressed by making fields a fixed width and/or encoding the length of the field as part of the output. Using options from CoAP [RFC7252] as an example, these fields use a TLV structure so they can be concatenated without any problems.",
      "ja": "複数の項目が含まれている場合は、O、アプリケーションは、異なる入力がある場合、同じバイト列が生成されていないことを確認する必要があります。これは、「AB」と「CDE」を文字列を追加することによって、または文字列「ABC」と「DE」を付加することによって発生する可能性があります。これは、通常のフィールドを一定の幅を製造および/または出力の一部として、フィールドの長さを符号化することによって対処されます。彼らは何の問題もなく連結することができるように、一例としてCoAP [RFC7252]からオプションを使用して、これらのフィールドはTLV構造を使用します。"
    },
    {
      "indent": 3,
      "text": "o If multiple items are included, an order for the items needs to be defined. Using options from CoAP as an example, an application could state that the fields are to be ordered by the option number.",
      "ja": "複数の項目が含まれる場合、O、項目の順序が定義される必要があります。一例として、CoAPからオプションを使用すると、アプリケーションは、フィールドはオプション番号で注文することは記載されてできました。"
    },
    {
      "indent": 3,
      "text": "o Applications need to ensure that the byte stream is going to be the same on both sides. Using options from CoAP might give a problem if the same relative numbering is kept. An intermediate node could insert or remove an option, changing how the relative number is done. An application would need to specify that the relative number must be re-encoded to be relative only to the options that are in the external data.",
      "ja": "Oアプリケーションは、バイトストリームは両側で同じであることを行っていることを確認する必要があります。同じ相対番号が保持されている場合CoAPからオプションを使用すると、問題を与えるかもしれません。中間ノードは相対数がどのように行われるか変更、オプションを挿入または削除することができました。アプリケーションは、相対的な数だけ、外部データ内にあるオプションに関連する再エンコードする必要があることを指定する必要があります。"
    },
    {
      "indent": 0,
      "text": "4.4. Signing and Verification Process",
      "section_title": true,
      "ja": "4.4。署名と検証プロセス"
    },
    {
      "indent": 3,
      "text": "In order to create a signature, a well-defined byte stream is needed. The Sig_structure is used to create the canonical form. This signing and verification process takes in the body information (COSE_Sign or COSE_Sign1), the signer information (COSE_Signature), and the application data (external source). A Sig_structure is a CBOR array. The fields of the Sig_structure in order are:",
      "ja": "署名を作成するためには、明確に定義されたバイトストリームが必要とされています。 Sig_structureは、標準的なフォームを作成するために使用されます。この署名と検証プロセスは、身体情報（COSE_Sign又はCOSE_Sign1）、署名者情報（COSE_Signature）、及びアプリケーションデータ（外部ソース）を取り込みます。 Sig_structureはCBORアレイです。順番にSig_structureのフィールドは、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "1. A text string identifying the context of the signature. The context string is:",
      "ja": "署名のコンテキストを識別する1のテキスト文字列。コンテキスト文字列は次のようになります。"
    },
    {
      "indent": 10,
      "text": "\"Signature\" for signatures using the COSE_Signature structure.",
      "ja": "COSE_Signature構造を使用して署名するための「署名」。"
    },
    {
      "indent": 10,
      "text": "\"Signature1\" for signatures using the COSE_Sign1 structure.",
      "ja": "COSE_Sign1構造を使用して署名の「Signature1」。"
    },
    {
      "indent": 10,
      "text": "\"CounterSignature\" for signatures used as counter signature attributes.",
      "ja": "カウンタ署名属性として使用される署名の「副署」。"
    },
    {
      "indent": 3,
      "text": "2. The protected attributes from the body structure encoded in a bstr type. If there are no protected attributes, a bstr of length zero is used.",
      "ja": "2.身体構造からの保護属性がBSTR型でエンコード。何の保護属性が存在しない場合は、長さゼロのBSTRが使用されています。"
    },
    {
      "indent": 3,
      "text": "3. The protected attributes from the signer structure encoded in a bstr type. If there are no protected attributes, a bstr of length zero is used. This field is omitted for the COSE_Sign1 signature structure.",
      "ja": "3.署名者構造から保護属性がBSTR型でエンコード。何の保護属性が存在しない場合は、長さゼロのBSTRが使用されています。このフィールドはCOSE_Sign1署名構造のために省略されています。"
    },
    {
      "indent": 3,
      "text": "4. The protected attributes from the application encoded in a bstr type. If this field is not supplied, it defaults to a zero-length binary string. (See Section 4.3 for application guidance on constructing this field.)",
      "ja": "4.アプリケーションからの保護属性がBSTR型でエンコード。長さゼロのバイナリ文字列にこのフィールドが供給されていない場合は、デフォルト。 （このフィールドを構築する上でのアプリケーションのガイダンスについては、セクション4.3を参照してください。）"
    },
    {
      "indent": 3,
      "text": "5. The payload to be signed encoded in a bstr type. The payload is placed here independent of how it is transported.",
      "ja": "前記ペイロードはBSTR型で符号化署名されます。ペイロードは、ここでそれが輸送される方法とは独立して配置されます。"
    },
    {
      "indent": 3,
      "text": "The CDDL fragment that describes the above text is:",
      "ja": "上記のテキストを記述CDDL断片であります："
    },
    {
      "indent": 3,
      "text": "Sig_structure = [ context : \"Signature\" / \"Signature1\" / \"CounterSignature\", body_protected : empty_or_serialized_map, ? sign_protected : empty_or_serialized_map, external_aad : bstr, payload : bstr ]",
      "ja": "Sig_structure = [コンテキスト： \"署名\" / \"Signature1\" / \"副署\" は、body_protected：empty_or_serialized_mapを、？ sign_protected：empty_or_serialized_map、external_aad：BSTR、ペイロード：BSTR]"
    },
    {
      "indent": 3,
      "text": "How to compute a signature:",
      "ja": "署名を計算する方法："
    },
    {
      "indent": 3,
      "text": "1. Create a Sig_structure and populate it with the appropriate fields.",
      "ja": "1. Sig_structureを作成し、適切なフィールドを移入。"
    },
    {
      "indent": 3,
      "text": "2. Create the value ToBeSigned by encoding the Sig_structure to a byte string, using the encoding described in Section 14.",
      "ja": "2.項14に記載の符号化を使用して、バイト列にSig_structureを符号化することによってToBeSigned値を作成します。"
    },
    {
      "indent": 3,
      "text": "3. Call the signature creation algorithm passing in K (the key to sign with), alg (the algorithm to sign with), and ToBeSigned (the value to sign).",
      "ja": "3. K（で署名するキー）、ALG（と署名するアルゴリズム）、及びToBeSigned（署名する値）を渡し、署名生成アルゴリズムを呼び出します。"
    },
    {
      "indent": 3,
      "text": "4. Place the resulting signature value in the 'signature' field of the array.",
      "ja": "4.アレイの「署名」フィールドに得られる署名値。"
    },
    {
      "indent": 3,
      "text": "The steps for verifying a signature are:",
      "ja": "署名を検証するための手順は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "1. Create a Sig_structure object and populate it with the appropriate fields.",
      "ja": "1. Sig_structureオブジェクトを作成し、適切なフィールドを移入。"
    },
    {
      "indent": 3,
      "text": "2. Create the value ToBeSigned by encoding the Sig_structure to a byte string, using the encoding described in Section 14.",
      "ja": "2.項14に記載の符号化を使用して、バイト列にSig_structureを符号化することによってToBeSigned値を作成します。"
    },
    {
      "indent": 3,
      "text": "3. Call the signature verification algorithm passing in K (the key to verify with), alg (the algorithm used sign with), ToBeSigned (the value to sign), and sig (the signature to be verified).",
      "ja": "3. K（と検証するキー）、ALG（アルゴリズムを使用する符号付き）、ToBeSigned（署名する値）、およびSIG（署名が検証される）に通過署名検証アルゴリズムを呼び出します。"
    },
    {
      "indent": 3,
      "text": "In addition to performing the signature verification, the application may also perform the appropriate checks to ensure that the key is correctly paired with the signing identity and that the signing identity is authorized before performing actions.",
      "ja": "署名検証を実行することに加えて、アプリケーションは、キーが正しく署名IDとペアおよび署名IDがアクションを実行する前に許可されていることであることを保証するために適切なチェックを実行することができます。"
    },
    {
      "indent": 0,
      "text": "4.5. Computing Counter Signatures",
      "section_title": true,
      "ja": "4.5。カウンターの署名を計算"
    },
    {
      "indent": 3,
      "text": "Counter signatures provide a method of associating a different signature generated by different signers with some piece of content. This is normally used to provide a signature on a signature allowing for a proof that a signature existed at a given time (i.e., a Timestamp). In this document, we allow for counter signatures to exist in a greater number of environments. As an example, it is possible to place a counter signature in the unprotected attributes of a COSE_Encrypt object. This would allow for an intermediary to either verify that the encrypted byte stream has not been modified, without being able to decrypt it, or assert that an encrypted byte stream either existed at a given time or passed through it in terms of routing (i.e., a proxy signature).",
      "ja": "カウンタ署名は、コンテンツのいくつかの部分と異なる署名者によって生成された異なるシグネチャを関連付ける方法を提供します。これは通常、署名は所定の時間（即ち、タイムスタンプ）に存在証明を可能にする署名の署名を提供するために使用されます。カウンタ署名が環境のより多くに存在するため、このドキュメントでは、私たちは許します。例としては、COSE_Encryptオブジェクトの保護されていない属性のカウンタ署名を配置することが可能です。これは、暗号化されたバイトストリームがそれを解読できず、変更されていないことを確認、または暗号化されたバイトストリームは、ある時点で存在していたか、すなわち（ルーティングの観点から、それを通過したいずれかの主張のいずれかへの仲介を可能にしますプロキシ署名）。"
    },
    {
      "indent": 3,
      "text": "An example of a counter signature on a signature can be found in Appendix C.1.3. An example of a counter signature in an encryption object can be found in Appendix C.3.3.",
      "ja": "署名にカウンタ署名の例は、付録C.1.3に見出すことができます。暗号化対象のカウンタ署名の例は、付録C.3.3に見出すことができます。"
    },
    {
      "indent": 3,
      "text": "The creation and validation of counter signatures over the different items relies on the fact that the objects have the same structure. The elements are a set of protected attributes, a set of unprotected attributes, and a body, in that order. This means that the Sig_structure can be used in a uniform manner to get the byte stream for processing a signature. If the counter signature is going to be computed over a COSE_Encrypt structure, the body_protected and payload items can be mapped into the Sig_structure in the same manner as from the COSE_Sign structure.",
      "ja": "さまざまなアイテムを超えるカウンタ署名の作成と検証は、オブジェクトが同じ構造を持っているという事実に依存しています。要素は、そのために保護された属性のセット、保護されていない属性のセット、およびボディ、です。これはSig_structure署名を処理するためのバイトストリームを取得するために均一に使用することができることを意味します。カウンタ署名がCOSE_Encrypt構造にわたって計算されようとしている場合、body_protected及びペイロード項目がCOSE_Sign構造からと同様にSig_structureにマッピングすることができます。"
    },
    {
      "indent": 3,
      "text": "It should be noted that only a signature algorithm with appendix (see Section 8) can be used for counter signatures. This is because the body should be able to be processed without having to evaluate the counter signature, and this is not possible for signature schemes with message recovery.",
      "ja": "付録（セクション8を参照）のみ署名アルゴリズムは、カウンタ署名に使用することができることに留意すべきです。ボディカウンタ署名を評価することなく処理されることができるはずだからであり、これは、メッセージの回復と署名方式のためには不可能です。"
    },
    {
      "indent": 0,
      "text": "5. Encryption Objects",
      "section_title": true,
      "ja": "5.暗号化オブジェクト"
    },
    {
      "indent": 3,
      "text": "COSE supports two different encryption structures. COSE_Encrypt0 is used when a recipient structure is not needed because the key to be used is known implicitly. COSE_Encrypt is used the rest of the time. This includes cases where there are multiple recipients or a recipient algorithm other than direct is used.",
      "ja": "COSEは、二つの異なる暗号化構造をサポートしています。使用するキーは暗黙的に知られているので、受信者構造が必要とされていない場合にCOSE_Encrypt0が使用されています。 COSE_Encryptは、残りの時間を使用しています。これは、複数の受信者または使用されている指示以外の受信者のアルゴリズムが存在する場合を含みます。"
    },
    {
      "indent": 0,
      "text": "5.1. Enveloped COSE Structure",
      "section_title": true,
      "ja": "5.1。包まTHINGS構造"
    },
    {
      "indent": 3,
      "text": "The enveloped structure allows for one or more recipients of a message. There are provisions for parameters about the content and parameters about the recipient information to be carried in the message. The protected parameters associated with the content are authenticated by the content encryption algorithm. The protected parameters associated with the recipient are authenticated by the recipient algorithm (when the algorithm supports it). Examples of parameters about the content are the type of the content and the content encryption algorithm. Examples of parameters about the recipient are the recipient's key identifier and the recipient's encryption algorithm.",
      "ja": "エンベロープ構造はメッセージの1人のまたは複数の受信者を可能にします。メッセージで運ばれる受信者の情報に関するコンテンツおよびパラメータに関するパラメータのための規定があります。コンテンツに関連付けられた保護されたパラメータは、コンテンツの暗号化アルゴリズムによって認証されています。受信者に関連付けられた保護されたパラメータは、レシピエントのアルゴリズム（アルゴリズムがサポートしている）によって認証されています。コンテンツに関するパラメータの例としては、コンテンツとコンテンツの暗号化アルゴリズムのタイプです。受信者に関するパラメータの例には、受信者のキー識別子と、受信者の暗号化アルゴリズムです。"
    },
    {
      "indent": 3,
      "text": "The same techniques and structures are used for encrypting both the plaintext and the keys. This is different from the approach used by both \"Cryptographic Message Syntax (CMS)\" [RFC5652] and \"JSON Web Encryption (JWE)\" [RFC7516] where different structures are used for the content layer and for the recipient layer. Two structures are defined: COSE_Encrypt to hold the encrypted content and COSE_recipient to hold the encrypted keys for recipients. Examples of encrypted messages can be found in Appendix C.3.",
      "ja": "同じ技術および構造は、平文と鍵の両方を暗号化するために使用されています。これは、「暗号メッセージ構文（CMS）」[RFC5652]と異なる構造がコンテンツ層用と受信者層のために使用される、「JSONのWeb暗号化（JWE）」[RFC7516]の両方で使用されるアプローチとは異なります。二つの構造が定義されていますCOSE_Encryptを受信者の暗号化鍵を保持するために暗号化されたコンテンツとCOSE_recipientを保持します。暗号化されたメッセージの例は、付録C.3で見つけることができます。"
    },
    {
      "indent": 3,
      "text": "The COSE_Encrypt structure can be encoded as either tagged or untagged depending on the context it will be used in. A tagged COSE_Encrypt structure is identified by the CBOR tag 96. The CDDL fragment that represents this is:",
      "ja": "それに使用されるコンテキストに応じてタグ付きまたはタグなしのいずれかとしCOSE_Encrypt構造を符号化することができるAはCOSE_Encrypt構造はこれを表すCDDLフラグメントであるCBORタグ96によって識別されるタグ付けされました："
    },
    {
      "indent": 3,
      "text": "COSE_Encrypt_Tagged = #6.96(COSE_Encrypt)",
      "ja": "COSE_Encrypt_Tagged =＃6.96（COSE_Encrypt）"
    },
    {
      "indent": 3,
      "text": "The COSE_Encrypt structure is a CBOR array. The fields of the array in order are:",
      "ja": "COSE_Encrypt構造はCBOR配列です。順に配列のフィールドは、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "protected: This is as described in Section 3.",
      "ja": "保護された：第3節で説明されているようです。"
    },
    {
      "indent": 3,
      "text": "unprotected: This is as described in Section 3.",
      "ja": "保護されていない：第3節で説明されているようです。"
    },
    {
      "indent": 3,
      "text": "ciphertext: This field contains the ciphertext encoded as a bstr. If the ciphertext is to be transported independently of the control information about the encryption process (i.e., detached content), then the field is encoded as a nil value.",
      "ja": "暗号文：このフィールドは、BSTRとしてエンコードされた暗号文が含まれています。暗号文は、独立して、暗号化処理（すなわち、剥離コンテンツ）に関する制御情報を搬送する場合は、フィールドはゼロ値として符号化されます。"
    },
    {
      "indent": 3,
      "text": "recipients: This field contains an array of recipient information structures. The type for the recipient information structure is a COSE_recipient.",
      "ja": "受信者：このフィールドは、受信者情報構造体の配列が含まれています。受信者情報構造のためのタイプはCOSE_recipientです。"
    },
    {
      "indent": 3,
      "text": "The CDDL fragment that corresponds to the above text is:",
      "ja": "上記のテキストに対応するCDDL断片です。"
    },
    {
      "indent": 3,
      "text": "COSE_Encrypt = [ Headers, ciphertext : bstr / nil, recipients : [+COSE_recipient] ]",
      "ja": "COSE_Encrypt = [ヘッダ、暗号文：BSTR /ゼロ、受信者：[+ COSE_recipient]"
    },
    {
      "indent": 3,
      "text": "The COSE_recipient structure is a CBOR array. The fields of the array in order are:",
      "ja": "COSE_recipient構造はCBOR配列です。順に配列のフィールドは、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "protected: This is as described in Section 3.",
      "ja": "保護された：第3節で説明されているようです。"
    },
    {
      "indent": 3,
      "text": "unprotected: This is as described in Section 3.",
      "ja": "保護されていない：第3節で説明されているようです。"
    },
    {
      "indent": 3,
      "text": "ciphertext: This field contains the encrypted key encoded as a bstr. All encoded keys are symmetric keys; the binary value of the key is the content. If there is not an encrypted key, then this field is encoded as a nil value.",
      "ja": "暗号文：このフィールドは、BSTRとしてエンコードされた暗号化キーが含まれています。すべてのエンコードされたキーは、対称キーです。キーのバイナリ値は、コンテンツです。暗号化キーがない場合、このフィールドはnilの値としてエンコードされます。"
    },
    {
      "indent": 3,
      "text": "recipients: This field contains an array of recipient information structures. The type for the recipient information structure is a COSE_recipient (an example of this can be found in Appendix B). If there are no recipient information structures, this element is absent.",
      "ja": "受信者：このフィールドは、受信者情報構造体の配列が含まれています。受信者情報構造のタイプはCOSE_recipient（この例は、付録Bに見出すことができる）です。何の受信者情報構造が存在しない場合は、この要素は存在しません。"
    },
    {
      "indent": 3,
      "text": "The CDDL fragment that corresponds to the above text for COSE_recipient is:",
      "ja": "COSE_recipientための上記のテキストに対応するCDDL断片です。"
    },
    {
      "indent": 3,
      "text": "COSE_recipient = [ Headers, ciphertext : bstr / nil, ? recipients : [+COSE_recipient] ]",
      "ja": "COSE_recipient = [ヘッダ、暗号文：BSTR /ゼロ、？受信者：[+ COSE_recipient]]"
    },
    {
      "indent": 0,
      "text": "5.1.1. Content Key Distribution Methods",
      "section_title": true,
      "ja": "5.1.1。コンテンツキーの配布方法"
    },
    {
      "indent": 3,
      "text": "An encrypted message consists of an encrypted content and an encrypted CEK for one or more recipients. The CEK is encrypted for each recipient, using a key specific to that recipient. The details of this encryption depend on which class the recipient algorithm falls into. Specific details on each of the classes can be found in Section 12. A short summary of the five content key distribution methods is:",
      "ja": "暗号化されたメッセージは、暗号化されたコンテンツと1つまたは複数の受信者に対して暗号化されたCEKで構成されています。 CEKは、その受信者に固有の鍵を使用して、受信者ごとに暗号化されています。この暗号化の詳細については、受信者のアルゴリズムがに属するクラスによって異なります。クラスの各々に関する特定の詳細は、セクション12に見出すことができる5つのコンテンツ鍵配布方法の要約です。"
    },
    {
      "indent": 3,
      "text": "direct: The CEK is the same as the identified previously distributed symmetric key or is derived from a previously distributed secret. No CEK is transported in the message.",
      "ja": "ダイレクト：CEKは、識別された以前に分散対称鍵と同じであるか、または以前に分散秘密から導出されます。何CEKは、メッセージで搬送されていません。"
    },
    {
      "indent": 3,
      "text": "symmetric key-encryption keys (KEK): The CEK is encrypted using a previously distributed symmetric KEK. Also known as key wrap.",
      "ja": "対称キー暗号化キー（KEK）：CEKは以前に分配された左右対称のKEKを使用して暗号化されます。また、キーラップとして知られています。"
    },
    {
      "indent": 3,
      "text": "key agreement: The recipient's public key and a sender's private key are used to generate a pairwise secret, a Key Derivation Function (KDF) is applied to derive a key, and then the CEK is either the derived key or encrypted by the derived key.",
      "ja": "主要な協定：受信者の公開鍵と送信者の秘密鍵はペアごとの秘密を生成するために使用され、鍵導出関数（KDF）が鍵を導出するために適用され、その後、CEKは派生キーまたは派生鍵によって暗号化のいずれかです。"
    },
    {
      "indent": 3,
      "text": "key transport: The CEK is encrypted with the recipient's public key. No key transport algorithms are defined in this document.",
      "ja": "キー輸送：CEKは、受信者の公開鍵で暗号化されています。いいえ、キートランスポートアルゴリズムは、この文書で定義されていません。"
    },
    {
      "indent": 3,
      "text": "passwords: The CEK is encrypted in a KEK that is derived from a password. No password algorithms are defined in this document.",
      "ja": "パスワード：CEKは、パスワードから導出されたKEKで暗号化されています。パスワードアルゴリズムは、この文書で定義されていません。"
    },
    {
      "indent": 0,
      "text": "5.2. Single Recipient Encrypted",
      "section_title": true,
      "ja": "5.2。単一の受信者は、暗号化されました"
    },
    {
      "indent": 3,
      "text": "The COSE_Encrypt0 encrypted structure does not have the ability to specify recipients of the message. The structure assumes that the recipient of the object will already know the identity of the key to be used in order to decrypt the message. If a key needs to be identified to the recipient, the enveloped structure ought to be used.",
      "ja": "COSE_Encrypt0暗号化された構造は、メッセージの受信者を指定することはできません。構造は、オブジェクトの受信者がすでにメッセージを復号化するために使用するキーの身元を知っていることを前提としています。キーニーズが受信者に識別される場合は、包まれた構造は、使用されるべきです。"
    },
    {
      "indent": 3,
      "text": "Examples of encrypted messages can be found in Appendix C.3.",
      "ja": "暗号化されたメッセージの例は、付録C.3で見つけることができます。"
    },
    {
      "indent": 3,
      "text": "The COSE_Encrypt0 structure can be encoded as either tagged or untagged depending on the context it will be used in. A tagged COSE_Encrypt0 structure is identified by the CBOR tag 16. The CDDL fragment that represents this is:",
      "ja": "それに使用されるコンテキストに応じてタグ付きまたはタグなしのいずれかとしCOSE_Encrypt0構造を符号化することができるAはCOSE_Encrypt0構造はこれを表すCDDLフラグメントであるCBORタグ16によって識別されるタグ付けされました："
    },
    {
      "indent": 3,
      "text": "COSE_Encrypt0_Tagged = #6.16(COSE_Encrypt0)",
      "ja": "COSE_Encrypt0_Tagged =＃6.16（COSE_Encrypt0）"
    },
    {
      "indent": 3,
      "text": "The COSE_Encrypt0 structure is a CBOR array. The fields of the array in order are:",
      "ja": "COSE_Encrypt0構造はCBOR配列です。順に配列のフィールドは、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "protected: This is as described in Section 3.",
      "ja": "保護された：第3節で説明されているようです。"
    },
    {
      "indent": 3,
      "text": "unprotected: This is as described in Section 3.",
      "ja": "保護されていない：第3節で説明されているようです。"
    },
    {
      "indent": 3,
      "text": "ciphertext: This is as described in Section 5.1.",
      "ja": "暗号文：セクション5.1で説明したようにこれはあります。"
    },
    {
      "indent": 3,
      "text": "The CDDL fragment for COSE_Encrypt0 that corresponds to the above text is:",
      "ja": "上記のテキストに対応COSE_Encrypt0ためCDDL断片です。"
    },
    {
      "indent": 3,
      "text": "COSE_Encrypt0 = [ Headers, ciphertext : bstr / nil, ]",
      "ja": "COSE_Encrypt0 = [ヘッダ、暗号文：BSTR /ゼロ、】"
    },
    {
      "indent": 0,
      "text": "5.3. How to Encrypt and Decrypt for AEAD Algorithms",
      "section_title": true,
      "ja": "5.3。 AEADアルゴリズムのための暗号化および復号化する方法"
    },
    {
      "indent": 3,
      "text": "The encryption algorithm for AEAD algorithms is fairly simple. The first step is to create a consistent byte stream for the authenticated data structure. For this purpose, we use an Enc_structure. The Enc_structure is a CBOR array. The fields of the Enc_structure in order are:",
      "ja": "AEADアルゴリズムのための暗号化アルゴリズムは非常に簡単です。最初のステップは、認証されたデータ構造のための一貫性のあるバイトストリームを作成することです。この目的のために、私たちはEnc_structureを使用しています。 Enc_structureはCBOR配列です。順番にEnc_structureのフィールドは、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "1. A text string identifying the context of the authenticated data structure. The context string is:",
      "ja": "1.認証されたデータ構造のコンテキストを識別する文字列。コンテキスト文字列は次のようになります。"
    },
    {
      "indent": 10,
      "text": "\"Encrypt0\" for the content encryption of a COSE_Encrypt0 data\nstructure.",
      "raw": true
    },
    {
      "indent": 10,
      "text": "\"Encrypt\" for the first layer of a COSE_Encrypt data structure (i.e., for content encryption).",
      "ja": "（すなわち、コンテンツ暗号化用）COSE_Encryptデータ構造の第1層のための「暗号化」。"
    },
    {
      "indent": 10,
      "text": "\"Enc_Recipient\" for a recipient encoding to be placed in an COSE_Encrypt data structure.",
      "ja": "COSE_Encryptデータ構造内に配置される受信者のエンコーディングのための「Enc_Recipient」。"
    },
    {
      "indent": 10,
      "text": "\"Mac_Recipient\" for a recipient encoding to be placed in a MACed message structure.",
      "ja": "MACedメッセージ構造内に配置される受信者のエンコーディングのための「Mac_Recipient」。"
    },
    {
      "indent": 10,
      "text": "\"Rec_Recipient\" for a recipient encoding to be placed in a recipient structure.",
      "ja": "レシピエント構造内に配置される受信者のエンコーディングのための「Rec_Recipient」。"
    },
    {
      "indent": 3,
      "text": "2. The protected attributes from the body structure encoded in a bstr type. If there are no protected attributes, a bstr of length zero is used.",
      "ja": "2.身体構造からの保護属性がBSTR型でエンコード。何の保護属性が存在しない場合は、長さゼロのBSTRが使用されています。"
    },
    {
      "indent": 3,
      "text": "3. The protected attributes from the application encoded in a bstr type. If this field is not supplied, it defaults to a zero-length bstr. (See Section 4.3 for application guidance on constructing this field.)",
      "ja": "3.アプリケーションからの保護属性がBSTR型でエンコード。長さゼロのBSTRにこのフィールドが供給されていない場合は、デフォルト。 （このフィールドを構築する上でのアプリケーションのガイダンスについては、セクション4.3を参照してください。）"
    },
    {
      "indent": 3,
      "text": "The CDDL fragment that describes the above text is:",
      "ja": "上記のテキストを記述CDDL断片であります："
    },
    {
      "indent": 3,
      "text": "Enc_structure = [ context : \"Encrypt\" / \"Encrypt0\" / \"Enc_Recipient\" / \"Mac_Recipient\" / \"Rec_Recipient\", protected : empty_or_serialized_map, external_aad : bstr ]",
      "ja": "Enc_structure = [コンテキスト： \"暗号化\" / \"Encrypt0\" / \"Enc_Recipient\" / \"Mac_Recipient\" / \"Rec_Recipient\"、保護：empty_or_serialized_map、external_aad：BSTR]"
    },
    {
      "indent": 3,
      "text": "How to encrypt a message:",
      "ja": "メッセージを暗号化する方法："
    },
    {
      "indent": 3,
      "text": "1. Create an Enc_structure and populate it with the appropriate fields.",
      "ja": "1. Enc_structureを作成し、適切なフィールドを移入。"
    },
    {
      "indent": 3,
      "text": "2. Encode the Enc_structure to a byte stream (Additional Authenticated Data (AAD)), using the encoding described in Section 14.",
      "ja": "2.項14に記載の符号化を使用して、バイトストリーム（追加認証されたデータ（AAD））にEnc_structureをコードします。"
    },
    {
      "indent": 3,
      "text": "3. Determine the encryption key (K). This step is dependent on the class of recipient algorithm being used. For:",
      "ja": "3.暗号化キー（K）を決定します。このステップでは、使用されている受信者のアルゴリズムのクラスに依存しています。ために："
    },
    {
      "indent": 7,
      "text": "No Recipients:  The key to be used is determined by the algorithm\n   and key at the current layer.  Examples are key transport keys\n   (Section 12.3), key wrap keys (Section 12.2.1), or pre-shared\n   secrets.",
      "raw": true
    },
    {
      "indent": 7,
      "text": "Direct Encryption and Direct Key Agreement: The key is determined by the key and algorithm in the recipient structure. The encryption algorithm and size of the key to be used are inputs into the KDF used for the recipient. (For direct, the KDF can be thought of as the identity operation.) Examples of these algorithms are found in Sections 12.1.2 and 12.4.1.",
      "ja": "直接暗号化およびダイレクトキー契約：キーが受信者の構造の鍵とアルゴリズムによって決定されます。使用するキーの暗号化アルゴリズムとサイズは、受信者のために使用さKDFへの入力です。 （直接の場合、KDFは、同一操作であると考えることができる。）これらのアルゴリズムの例は、セクション12.1.2および12.4.1に見出されます。"
    },
    {
      "indent": 7,
      "text": "Other: The key is randomly or pseudorandomly generated.",
      "ja": "その他：キーは、ランダムに、または擬似乱数として生成されます。"
    },
    {
      "indent": 3,
      "text": "4. Call the encryption algorithm with K (the encryption key), P (the plaintext), and AAD. Place the returned ciphertext into the 'ciphertext' field of the structure.",
      "ja": "4. K（暗号化キー）、P（平文）、およびAADと暗号化アルゴリズムを呼び出します。構造の「暗号文」フィールドに返された暗号文を置きます。"
    },
    {
      "indent": 3,
      "text": "5. For recipients of the message, recursively perform the encryption algorithm for that recipient, using K (the encryption key) as the plaintext.",
      "ja": "5.メッセージの受信者に対して、再帰的に平文としてK（暗号鍵）を使用して、その受信者のための暗号化アルゴリズムを実行します。"
    },
    {
      "indent": 3,
      "text": "How to decrypt a message:",
      "ja": "メッセージを復号化する方法："
    },
    {
      "indent": 3,
      "text": "1. Create an Enc_structure and populate it with the appropriate fields.",
      "ja": "1. Enc_structureを作成し、適切なフィールドを移入。"
    },
    {
      "indent": 3,
      "text": "2. Encode the Enc_structure to a byte stream (AAD), using the encoding described in Section 14.",
      "ja": "2.項14に記載の符号化を使用して、バイトストリーム（AAD）にEnc_structureをコードします。"
    },
    {
      "indent": 3,
      "text": "3. Determine the decryption key. This step is dependent on the class of recipient algorithm being used. For:",
      "ja": "3.復号鍵を決定します。このステップでは、使用されている受信者のアルゴリズムのクラスに依存しています。ために："
    },
    {
      "indent": 7,
      "text": "No Recipients:  The key to be used is determined by the algorithm\n   and key at the current layer.  Examples are key transport keys\n   (Section 12.3), key wrap keys (Section 12.2.1), or pre-shared\n   secrets.",
      "raw": true
    },
    {
      "indent": 7,
      "text": "Direct Encryption and Direct Key Agreement: The key is determined by the key and algorithm in the recipient structure. The encryption algorithm and size of the key to be used are inputs into the KDF used for the recipient. (For direct, the KDF can be thought of as the identity operation.) Examples of these algorithms are found in Sections 12.1.2 and 12.4.1.",
      "ja": "直接暗号化およびダイレクトキー契約：キーが受信者の構造の鍵とアルゴリズムによって決定されます。使用するキーの暗号化アルゴリズムとサイズは、受信者のために使用さKDFへの入力です。 （直接の場合、KDFは、同一操作であると考えることができる。）これらのアルゴリズムの例は、セクション12.1.2および12.4.1に見出されます。"
    },
    {
      "indent": 7,
      "text": "Other: The key is determined by decoding and decrypting one of the recipient structures.",
      "ja": "その他：キーは、受信者の構造の1つを復号し、復号化することによって決定されます。"
    },
    {
      "indent": 3,
      "text": "4. Call the decryption algorithm with K (the decryption key to use), C (the ciphertext), and AAD.",
      "ja": "4. K（復号鍵を使用する）、C（暗号文）、およびAADと復号アルゴリズムを呼び出します。"
    },
    {
      "indent": 0,
      "text": "5.4. How to Encrypt and Decrypt for AE Algorithms",
      "section_title": true,
      "ja": "5.4。 AEアルゴリズムのための暗号化および復号化する方法"
    },
    {
      "indent": 3,
      "text": "How to encrypt a message:",
      "ja": "メッセージを暗号化する方法："
    },
    {
      "indent": 3,
      "text": "1. Verify that the 'protected' field is empty.",
      "section_title": true,
      "ja": "1.「保護された」フィールドが空であることを確認してください。"
    },
    {
      "indent": 3,
      "text": "2. Verify that there was no external additional authenticated data supplied for this operation.",
      "ja": "2.この操作に供される外部の追加認証されたデータがなかったことを確認します。"
    },
    {
      "indent": 3,
      "text": "3. Determine the encryption key. This step is dependent on the class of recipient algorithm being used. For:",
      "ja": "3.暗号化キーを決定します。このステップでは、使用されている受信者のアルゴリズムのクラスに依存しています。ために："
    },
    {
      "indent": 7,
      "text": "No Recipients:  The key to be used is determined by the algorithm\n   and key at the current layer.  Examples are key transport keys\n   (Section 12.3), key wrap keys (Section 12.2.1), or pre-shared\n   secrets.",
      "raw": true
    },
    {
      "indent": 7,
      "text": "Direct Encryption and Direct Key Agreement: The key is determined by the key and algorithm in the recipient structure. The encryption algorithm and size of the key to be used are inputs into the KDF used for the recipient. (For direct, the KDF can be thought of as the identity operation.) Examples of these algorithms are found in Sections 12.1.2 and 12.4.1.",
      "ja": "直接暗号化およびダイレクトキー契約：キーが受信者の構造の鍵とアルゴリズムによって決定されます。使用するキーの暗号化アルゴリズムとサイズは、受信者のために使用さKDFへの入力です。 （直接の場合、KDFは、同一操作であると考えることができる。）これらのアルゴリズムの例は、セクション12.1.2および12.4.1に見出されます。"
    },
    {
      "indent": 7,
      "text": "Other: The key is randomly generated.",
      "ja": "その他：鍵はランダムに生成されます。"
    },
    {
      "indent": 3,
      "text": "4. Call the encryption algorithm with K (the encryption key to use) and P (the plaintext). Place the returned ciphertext into the 'ciphertext' field of the structure.",
      "ja": "4. K（暗号化キーを使用する）とP（平文）と暗号化アルゴリズムを呼び出します。構造の「暗号文」フィールドに返された暗号文を置きます。"
    },
    {
      "indent": 3,
      "text": "5. For recipients of the message, recursively perform the encryption algorithm for that recipient, using K (the encryption key) as the plaintext.",
      "ja": "5.メッセージの受信者に対して、再帰的に平文としてK（暗号鍵）を使用して、その受信者のための暗号化アルゴリズムを実行します。"
    },
    {
      "indent": 3,
      "text": "How to decrypt a message:",
      "ja": "メッセージを復号化する方法："
    },
    {
      "indent": 3,
      "text": "1. Verify that the 'protected' field is empty.",
      "section_title": true,
      "ja": "1.「保護された」フィールドが空であることを確認してください。"
    },
    {
      "indent": 3,
      "text": "2. Verify that there was no external additional authenticated data supplied for this operation.",
      "ja": "2.この操作に供される外部の追加認証されたデータがなかったことを確認します。"
    },
    {
      "indent": 3,
      "text": "3. Determine the decryption key. This step is dependent on the class of recipient algorithm being used. For:",
      "ja": "3.復号鍵を決定します。このステップでは、使用されている受信者のアルゴリズムのクラスに依存しています。ために："
    },
    {
      "indent": 7,
      "text": "No Recipients:  The key to be used is determined by the algorithm\n   and key at the current layer.  Examples are key transport keys\n   (Section 12.3), key wrap keys (Section 12.2.1), or pre-shared\n   secrets.",
      "raw": true
    },
    {
      "indent": 7,
      "text": "Direct Encryption and Direct Key Agreement: The key is determined by the key and algorithm in the recipient structure. The encryption algorithm and size of the key to be used are inputs into the KDF used for the recipient. (For direct, the KDF can be thought of as the identity operation.) Examples of these algorithms are found in Sections 12.1.2 and 12.4.1.",
      "ja": "直接暗号化およびダイレクトキー契約：キーが受信者の構造の鍵とアルゴリズムによって決定されます。使用するキーの暗号化アルゴリズムとサイズは、受信者のために使用さKDFへの入力です。 （直接の場合、KDFは、同一操作であると考えることができる。）これらのアルゴリズムの例は、セクション12.1.2および12.4.1に見出されます。"
    },
    {
      "indent": 7,
      "text": "Other: The key is determined by decoding and decrypting one of the recipient structures.",
      "ja": "その他：キーは、受信者の構造の1つを復号し、復号化することによって決定されます。"
    },
    {
      "indent": 3,
      "text": "4. Call the decryption algorithm with K (the decryption key to use) and C (the ciphertext).",
      "ja": "4. K（復号鍵を使用する）およびC（暗号文）と復号アルゴリズムを呼び出します。"
    },
    {
      "indent": 0,
      "text": "6. MAC Objects",
      "section_title": true,
      "ja": "6. MACオブジェクト"
    },
    {
      "indent": 3,
      "text": "COSE supports two different MAC structures. COSE_MAC0 is used when a recipient structure is not needed because the key to be used is implicitly known. COSE_MAC is used for all other cases. These include a requirement for multiple recipients, the key being unknown, and a recipient algorithm of other than direct.",
      "ja": "COSEは、二つの異なるMAC構造をサポートしています。使用するキーは暗黙的に知られているので、受信者構造が必要とされていない場合にCOSE_MAC0が使用されています。 COSE_MACは、他のすべての例に使用されます。これらは、直接よりも、複数の受信者のための要件、キー不明であること、および他の受信者のアルゴリズムが含まれます。"
    },
    {
      "indent": 3,
      "text": "In this section, we describe the structure and methods to be used when doing MAC authentication in COSE. This document allows for the use of all of the same classes of recipient algorithms as are allowed for encryption.",
      "ja": "このセクションでは、構造とCOSEでMAC認証を行うときに使用する方法について説明します。暗号化のために許可されているとして、この文書は、受信者のアルゴリズムの同じクラスのすべての使用が可能になります。"
    },
    {
      "indent": 3,
      "text": "When using MAC operations, there are two modes in which they can be used. The first is just a check that the content has not been changed since the MAC was computed. Any class of recipient algorithm can be used for this purpose. The second mode is to both check that the content has not been changed since the MAC was computed and to use the recipient algorithm to verify who sent it. The classes of recipient algorithms that support this are those that use a pre-shared secret or do static-static (SS) key agreement (without the key wrap step). In both of these cases, the entity that created and sent the message MAC can be validated. (This knowledge of the sender assumes that there are only two parties involved and that you did not send the message to yourself.) The origination property can be obtained with both of the MAC message structures.",
      "ja": "MAC演算を使用する場合は、それらを使用することができる2つのモードがあります。最初は、MACを計算したので、内容が変更されていないことだけチェックです。受信者のアルゴリズムのいずれかのクラスは、この目的のために使用することができます。第2のモードはMACが計算され、それを送った人を確認するために受信者のアルゴリズムを使用するので、内容が変更されていないことの両方を確認することです。これをサポートする受信側アルゴリズムのクラスは、事前共有秘密を使用するか、（キーラップ工程なし）静的静的（SS）キー契約を行うものです。これらの場合の両方で、メッセージを作成し、送信エンティティMACを検証することができます。 （送信者のこの知識は2人だけ関与し、自分自身にメッセージを送信しなかったことがあることを前提としています。）発信プロパティはMACメッセージ構造の両方を得ることができます。"
    },
    {
      "indent": 0,
      "text": "6.1. MACed Message with Recipients",
      "section_title": true,
      "ja": "6.1。受信者とMACedメッセージ"
    },
    {
      "indent": 3,
      "text": "The multiple recipient MACed message uses two structures: the COSE_Mac structure defined in this section for carrying the body and the COSE_recipient structure (Section 5.1) to hold the key used for the MAC computation. Examples of MACed messages can be found in Appendix C.5.",
      "ja": "MACの計算に使用されるキーを保持する本体とCOSE_recipient構造（セクション5.1）を搬送するため、このセクションで定義されCOSE_Mac構造：メッセージMACed複数の受信者は、二つの構造体を使用します。 MACedメッセージの例は、付録C.5で見つけることができます。"
    },
    {
      "indent": 3,
      "text": "The MAC structure can be encoded as either tagged or untagged depending on the context it will be used in. A tagged COSE_Mac structure is identified by the CBOR tag 97. The CDDL fragment that represents this is:",
      "ja": "それに使用されるコンテキストに応じてタグ付きまたはタグなしのいずれかとしてMAC構造を符号化することができるAはCOSE_Mac構造はこれを表すCDDLフラグメントであるCBORタグ97によって識別されるタグ付けされました："
    },
    {
      "indent": 3,
      "text": "COSE_Mac_Tagged = #6.97(COSE_Mac)",
      "ja": "COSE_Mac_Tagged =＃6.97（COSE_Mac）"
    },
    {
      "indent": 3,
      "text": "The COSE_Mac structure is a CBOR array. The fields of the array in order are:",
      "ja": "COSE_Mac構造はCBOR配列です。順に配列のフィールドは、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "protected: This is as described in Section 3.",
      "ja": "保護された：第3節で説明されているようです。"
    },
    {
      "indent": 3,
      "text": "unprotected: This is as described in Section 3.",
      "ja": "保護されていない：第3節で説明されているようです。"
    },
    {
      "indent": 3,
      "text": "payload: This field contains the serialized content to be MACed. If the payload is not present in the message, the application is required to supply the payload separately. The payload is wrapped in a bstr to ensure that it is transported without changes. If the payload is transported separately (i.e., detached content), then a nil CBOR value is placed in this location, and it is the responsibility of the application to ensure that it will be transported without changes.",
      "ja": "ペイロード：このフィールドは、MACedするシリアル化されたコンテンツが含まれています。ペイロードがメッセージに存在しない場合、アプリケーションは別々のペイロードを供給する必要があります。ペイロードは、それが変化せずに輸送されることを保証するために、BSTRに包まれています。ペイロードが（すなわち、切り離されたコンテンツ）を別々に輸送されている場合、ゼロCBOR値がこの位置に配置され、そして変更せずに輸送されることを保証するために、アプリケーションの責任です。"
    },
    {
      "indent": 3,
      "text": "tag: This field contains the MAC value.",
      "ja": "タグ：このフィールドは、MAC値が含まれています。"
    },
    {
      "indent": 3,
      "text": "recipients: This is as described in Section 5.1.",
      "ja": "受信者：セクション5.1で説明したようにこれはあります。"
    },
    {
      "indent": 3,
      "text": "The CDDL fragment that represents the above text for COSE_Mac follows.",
      "ja": "COSE_Macための上記のテキストを表すCDDL断片は以下の通りです。"
    },
    {
      "indent": 3,
      "text": "COSE_Mac = [ Headers, payload : bstr / nil, tag : bstr, recipients :[+COSE_recipient] ]",
      "ja": "COSE_Mac = [ヘッダ、ペイロード：BSTR /ゼロ、タグ：BSTR、受信者：[+ COSE_recipient]"
    },
    {
      "indent": 0,
      "text": "6.2. MACed Messages with Implicit Key",
      "section_title": true,
      "ja": "6.2。暗黙のキーを持つメッセージをMACed"
    },
    {
      "indent": 3,
      "text": "In this section, we describe the structure and methods to be used when doing MAC authentication for those cases where the recipient is implicitly known.",
      "ja": "このセクションでは、構造と受信者が暗黙的に知られているような場合のためにMAC認証を行うときに使用する方法について説明します。"
    },
    {
      "indent": 3,
      "text": "The MACed message uses the COSE_Mac0 structure defined in this section for carrying the body. Examples of MACed messages with an implicit key can be found in Appendix C.6.",
      "ja": "MACedメッセージは、ボディを搬送するため、このセクションで定義COSE_Mac0構造を使用します。暗黙のキーを持つMACedメッセージの例は、付録C.6で見つけることができます。"
    },
    {
      "indent": 3,
      "text": "The MAC structure can be encoded as either tagged or untagged depending on the context it will be used in. A tagged COSE_Mac0 structure is identified by the CBOR tag 17. The CDDL fragment that represents this is:",
      "ja": "それに使用されるコンテキストに応じてタグ付きまたはタグなしのいずれかとしてMAC構造を符号化することができるAはCOSE_Mac0構造はこれを表すCDDLフラグメントであるCBORタグ17によって識別されるタグ付けされました："
    },
    {
      "indent": 3,
      "text": "COSE_Mac0_Tagged = #6.17(COSE_Mac0)",
      "ja": "COSE_Mac0_Tagged =＃6.17（COSE_Mac0）"
    },
    {
      "indent": 3,
      "text": "The COSE_Mac0 structure is a CBOR array. The fields of the array in order are:",
      "ja": "COSE_Mac0構造はCBOR配列です。順に配列のフィールドは、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "protected: This is as described in Section 3.",
      "ja": "保護された：第3節で説明されているようです。"
    },
    {
      "indent": 3,
      "text": "unprotected: This is as described in Section 3.",
      "ja": "保護されていない：第3節で説明されているようです。"
    },
    {
      "indent": 3,
      "text": "payload: This is as described in Section 6.1.",
      "ja": "ペイロード：6.1節で説明したようにこれはあります。"
    },
    {
      "indent": 3,
      "text": "tag: This field contains the MAC value.",
      "ja": "タグ：このフィールドは、MAC値が含まれています。"
    },
    {
      "indent": 3,
      "text": "The CDDL fragment that corresponds to the above text is:",
      "ja": "上記のテキストに対応するCDDL断片です。"
    },
    {
      "indent": 3,
      "text": "COSE_Mac0 = [ Headers, payload : bstr / nil, tag : bstr, ]",
      "ja": "COSE_Mac0 = [ヘッダ、ペイロード：BSTR /ゼロ、タグ：BSTR、】"
    },
    {
      "indent": 0,
      "text": "6.3. How to Compute and Verify a MAC",
      "section_title": true,
      "ja": "6.3。 MACを計算して確認する方法"
    },
    {
      "indent": 3,
      "text": "In order to get a consistent encoding of the data to be authenticated, the MAC_structure is used to have a canonical form. The MAC_structure is a CBOR array. The fields of the MAC_structure in order are:",
      "ja": "認証されるべきデータの一貫性のエンコーディングを取得するために、MAC_structureは標準形を有するように使用されます。 MAC_structureはCBOR配列です。順番にMAC_structureのフィールドは、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "1. A text string that identifies the structure that is being encoded. This string is \"MAC\" for the COSE_Mac structure. This string is \"MAC0\" for the COSE_Mac0 structure.",
      "ja": "1.符号化されている構造を識別する文字列。この文字列はCOSE_Mac構造のための「MAC」です。この文字列はCOSE_Mac0構造のための「MAC0」です。"
    },
    {
      "indent": 3,
      "text": "2. The protected attributes from the COSE_MAC structure. If there are no protected attributes, a zero-length bstr is used.",
      "ja": "2. COSE_MAC構造から保護された属性。何の保護属性が存在しない場合は、長さゼロのBSTRが使用されています。"
    },
    {
      "indent": 3,
      "text": "3. The protected attributes from the application encoded as a bstr type. If this field is not supplied, it defaults to a zero-length binary string. (See Section 4.3 for application guidance on constructing this field.)",
      "ja": "3.アプリケーションからの保護属性がBSTR型として符号化されます。長さゼロのバイナリ文字列にこのフィールドが供給されていない場合は、デフォルト。 （このフィールドを構築する上でのアプリケーションのガイダンスについては、セクション4.3を参照してください。）"
    },
    {
      "indent": 3,
      "text": "4. The payload to be MACed encoded in a bstr type. The payload is placed here independent of how it is transported.",
      "ja": "前記ペイロードはBSTR型で符号化MACedします。ペイロードは、ここでそれが輸送される方法とは独立して配置されます。"
    },
    {
      "indent": 3,
      "text": "The CDDL fragment that corresponds to the above text is:",
      "ja": "上記のテキストに対応するCDDL断片です。"
    },
    {
      "indent": 3,
      "text": "MAC_structure = [ context : \"MAC\" / \"MAC0\", protected : empty_or_serialized_map, external_aad : bstr, payload : bstr ]",
      "ja": "MAC_structure = [コンテキスト： \"MAC\" / \"MAC0\"、保護：empty_or_serialized_map、external_aad：BSTR、ペイロード：BSTR]"
    },
    {
      "indent": 3,
      "text": "The steps to compute a MAC are:",
      "ja": "MACを計算する手順は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "1. Create a MAC_structure and populate it with the appropriate fields.",
      "ja": "1. MAC_structureを作成し、適切なフィールドを移入。"
    },
    {
      "indent": 3,
      "text": "2. Create the value ToBeMaced by encoding the MAC_structure to a byte stream, using the encoding described in Section 14.",
      "ja": "2.項14に記載の符号化を使用して、バイトストリームにMAC_structureを符号化することによってToBeMaced値を作成します。"
    },
    {
      "indent": 3,
      "text": "3. Call the MAC creation algorithm passing in K (the key to use), alg (the algorithm to MAC with), and ToBeMaced (the value to compute the MAC on).",
      "ja": "3. K（キーを使用する）、ALG（持つMACにアルゴリズム）、及びToBeMaced（上のMACを計算する値）を渡しMAC生成アルゴリズムを呼び出します。"
    },
    {
      "indent": 3,
      "text": "4. Place the resulting MAC in the 'tag' field of the COSE_Mac or COSE_Mac0 structure.",
      "ja": "4. COSE_Mac又はCOSE_Mac0構造の「タグ」フィールドに得られるMAC。"
    },
    {
      "indent": 3,
      "text": "5. Encrypt and encode the MAC key for each recipient of the message.",
      "section_title": true,
      "ja": "メッセージの各受信者のMAC鍵を前記暗号化およびエンコード。"
    },
    {
      "indent": 3,
      "text": "The steps to verify a MAC are:",
      "ja": "MACを確認する手順は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "1. Create a MAC_structure object and populate it with the appropriate fields.",
      "ja": "1. MAC_structureオブジェクトを作成し、適切なフィールドを移入。"
    },
    {
      "indent": 3,
      "text": "2. Create the value ToBeMaced by encoding the MAC_structure to a byte stream, using the encoding described in Section 14.",
      "ja": "2.項14に記載の符号化を使用して、バイトストリームにMAC_structureを符号化することによってToBeMaced値を作成します。"
    },
    {
      "indent": 3,
      "text": "3. Obtain the cryptographic key from one of the recipients of the message.",
      "ja": "3.メッセージの受信者の1人から暗号鍵を取得します。"
    },
    {
      "indent": 3,
      "text": "4. Call the MAC creation algorithm passing in K (the key to use), alg (the algorithm to MAC with), and ToBeMaced (the value to compute the MAC on).",
      "ja": "4. K（キーを使用する）、ALG（持つMACにアルゴリズム）、及びToBeMaced（上のMACを計算する値）を渡しMAC生成アルゴリズムを呼び出します。"
    },
    {
      "indent": 3,
      "text": "5. Compare the MAC value to the 'tag' field of the COSE_Mac or COSE_Mac0 structure.",
      "ja": "5. COSE_MacまたはCOSE_Mac0構造の「タグ」フィールドにMAC値を比較してください。"
    },
    {
      "indent": 0,
      "text": "7. Key Objects",
      "section_title": true,
      "ja": "7.キーオブジェクト"
    },
    {
      "indent": 3,
      "text": "A COSE Key structure is built on a CBOR map object. The set of common parameters that can appear in a COSE Key can be found in the IANA \"COSE Key Common Parameters\" registry (Section 16.5). Additional parameters defined for specific key types can be found in the IANA \"COSE Key Type Parameters\" registry (Section 16.6).",
      "ja": "COSEキー構造はCBORマップオブジェクトの上に構築されています。 COSEキーで表示されることが一般的なパラメータのセットは、IANA「COSEキーの共通パラメータ」レジストリ（セクション16.5）で見つけることができます。特定のキータイプに対して定義された追加のパラメータは、IANA「COSEキータイプのパラメータ」レジストリ（セクション16.6）で見つけることができます。"
    },
    {
      "indent": 3,
      "text": "A COSE Key Set uses a CBOR array object as its underlying type. The values of the array elements are COSE Keys. A COSE Key Set MUST have at least one element in the array. Examples of COSE Key Sets can be found in Appendix C.7.",
      "ja": "COSEキーセットは、その基になる型としてCBOR配列オブジェクトを使用しています。配列要素の値は、COSEキーです。 COSEキーセットは、アレイ内の少なくとも1つの要素を持たなければなりません。 COSEキーセットの例は、付録C. 7に記載されています。"
    },
    {
      "indent": 3,
      "text": "Each element in a COSE Key Set MUST be processed independently. If one element in a COSE Key Set is either malformed or uses a key that is not understood by an application, that key is ignored and the other keys are processed normally.",
      "ja": "COSEキーセット内の各要素は、独立して処理しなければなりません。 COSEキーセット内の1つの要素がいずれかの不正な形式であるか、アプリケーションによって理解されていないキーを使用している場合は、そのキーは無視され、他のキーが正常に処理されます。"
    },
    {
      "indent": 3,
      "text": "The element \"kty\" is a required element in a COSE_Key map.",
      "ja": "要素「KTYは、」COSE_Keyマップに必要な要素です。"
    },
    {
      "indent": 3,
      "text": "The CDDL grammar describing COSE_Key and COSE_KeySet is:",
      "ja": "COSE_KeyとCOSE_KeySetを説明CDDLの文法は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "COSE_Key = { 1 => tstr / int, ; kty ? 2 => bstr, ; kid ? 3 => tstr / int, ; alg ? 4 => [+ (tstr / int) ], ; key_ops ? 5 => bstr, ; Base IV * label => values }",
      "ja": "COSE_Key = {1 => TSTR / INT。 KTY？ 2 => BSTR ,;子供？ 3 => TSTR / INT。藻類？ 4 => [+（TSTR / INT）]。 key_ops？ 5 => BSTR ,;基本IVの*ラベル=>値}"
    },
    {
      "indent": 3,
      "text": "COSE_KeySet = [+COSE_Key]",
      "ja": "COSE_KeySet = [+ COSE_Key]"
    },
    {
      "indent": 0,
      "text": "7.1. COSE Key Common Parameters",
      "section_title": true,
      "ja": "7.1。 COSEキー共通パラメータ"
    },
    {
      "indent": 3,
      "text": "This document defines a set of common parameters for a COSE Key object. Table 3 provides a summary of the parameters defined in this section. There are also parameters that are defined for specific key types. Key-type-specific parameters can be found in Section 13.",
      "ja": "この文書では、COSE Keyオブジェクトのための一般的なパラメータのセットを定義します。表3は、このセクションで定義されたパラメータの要約を提供します。特定のキータイプのために定義されるパラメータもあります。キータイプ固有のパラメータは、セクション13に記載されています。"
    },
    {
      "indent": 3,
      "text": "+---------+-------+----------------+------------+-------------------+\n| Name    | Label | CBOR Type      | Value      | Description       |\n|         |       |                | Registry   |                   |\n+---------+-------+----------------+------------+-------------------+\n| kty     | 1     | tstr / int     | COSE Key   | Identification of |\n|         |       |                | Common     | the key type      |\n|         |       |                | Parameters |                   |\n|         |       |                |            |                   |\n| kid     | 2     | bstr           |            | Key               |\n|         |       |                |            | identification    |\n|         |       |                |            | value -- match to |\n|         |       |                |            | kid in message    |\n|         |       |                |            |                   |\n| alg     | 3     | tstr / int     | COSE       | Key usage         |\n|         |       |                | Algorithms | restriction to    |\n|         |       |                |            | this algorithm    |\n|         |       |                |            |                   |\n| key_ops | 4     | [+ (tstr/int)] |            | Restrict set of   |\n|         |       |                |            | permissible       |\n|         |       |                |            | operations        |\n|         |       |                |            |                   |\n| Base IV | 5     | bstr           |            | Base IV to be     |\n|         |       |                |            | xor-ed with       |\n|         |       |                |            | Partial IVs       |\n+---------+-------+----------------+------------+-------------------+",
      "raw": true
    },
    {
      "indent": 26,
      "text": "Table 3: Key Map Labels",
      "ja": "表3：キー・マップ・ラベル"
    },
    {
      "indent": 3,
      "text": "kty: This parameter is used to identify the family of keys for this structure and, thus, the set of key-type-specific parameters to be found. The set of values defined in this document can be found in Table 21. This parameter MUST be present in a key object. Implementations MUST verify that the key type is appropriate for the algorithm being processed. The key type MUST be included as part of the trust decision process.",
      "ja": "KTY：このパラメータは、このように、発見されるキーの型固有のパラメータのセットを、この構造のためのキーの家族を識別するために使用されます。この文書で定義された値の組は、このパラメータは、キー・オブジェクト内に存在していなければなりません表21に見出すことができます。実装は、キータイプが処理されているアルゴリズムに適切であることを確かめなければなりません。キータイプには、信頼の決定プロセスの一部として含まれなければなりません。"
    },
    {
      "indent": 3,
      "text": "alg: This parameter is used to restrict the algorithm that is used with the key. If this parameter is present in the key structure, the application MUST verify that this algorithm matches the algorithm for which the key is being used. If the algorithms do not match, then this key object MUST NOT be used to perform the cryptographic operation. Note that the same key can be in a different key structure with a different or no algorithm specified; however, this is considered to be a poor security practice.",
      "ja": "ALG：このパラメータは、キーと一緒に使用されるアルゴリズムを制限するために使用されます。このパラメータは、キー構造中に存在する場合、アプリケーションは、このアルゴリズムは、キーが使用されているアルゴリズムと一致することを確認しなければなりません。アルゴリズムが一致しない場合は、このキーオブジェクトは、暗号操作を実行するために使用してはいけません。同じキーが異なる、または指定しないアルゴリズムに異なるキー構造にすることができることに留意されたいです。しかし、これは貧弱なセキュリティプラクティスであると考えられています。"
    },
    {
      "indent": 3,
      "text": "kid: This parameter is used to give an identifier for a key. The identifier is not structured and can be anything from a user-provided string to a value computed on the public portion of the key. This field is intended for matching against a 'kid' parameter in a message in order to filter down the set of keys that need to be checked.",
      "ja": "子供：このパラメータは、キーの識別子を与えるために使用されます。識別子は、構造化されず、キーの公開部分に計算された値にユーザ提供の文字列から何もすることができます。このフィールドは、チェックする必要がありますキーのセットを絞り込むために、メッセージに「子供」パラメータに対してマッチングを目的としています。"
    },
    {
      "indent": 3,
      "text": "key_ops: This parameter is defined to restrict the set of operations that a key is to be used for. The value of the field is an array of values from Table 4. Algorithms define the values of key ops that are permitted to appear and are required for specific operations. The set of values matches that in [RFC7517] and [W3C.WebCrypto].",
      "ja": "key_ops：このパラメータは、キーがために使用される一連の操作を制限するために定義されています。表4からアルゴリズムが出現することを許可され、特定の操作のために必要とされるキーOPSの値を定義するフィールドの値は、値の配列です。値の組は、[RFC7517]のものと一致して[W3C.WebCrypto]。"
    },
    {
      "indent": 3,
      "text": "Base IV: This parameter is defined to carry the base portion of an IV. It is designed to be used with the Partial IV header parameter defined in Section 3.1. This field provides the ability to associate a Partial IV with a key that is then modified on a per message basis with the Partial IV.",
      "ja": "基地IV：このパラメータは、IVのベース部分を運ぶために定義されています。セクション3.1で定義された部分IVヘッダパラメータで使用するように設計されます。このフィールドは、部分IVとメッセージごとに変更されたキーを持つ部分IVを関連付ける機能を提供します。"
    },
    {
      "indent": 6,
      "text": "Extreme care needs to be taken when using a Base IV in an application. Many encryption algorithms lose security if the same IV is used twice.",
      "ja": "細心の注意は、アプリケーションのベースIVを使用する際に注意が必要です。同じIVを2回使用されている場合、多くの暗号化アルゴリズムは、セキュリティを失います。"
    },
    {
      "indent": 6,
      "text": "If different keys are derived for each sender, using the same Base IV with Partial IVs starting at zero is likely to ensure that the IV would not be used twice for a single key. If different keys are derived for each sender, starting at the same Base IV is likely to satisfy this condition. If the same key is used for multiple senders, then the application needs to provide for a method of dividing the IV space up between the senders. This could be done by providing a different base point to start from or a different Partial IV to start with and restricting the number of messages to be sent before rekeying.",
      "ja": "異なるキーが各送信者のために導出されている場合は、ゼロから始まる部分のIVと同じベースのIVを使用すると、IVは、単一のキーのために2回使用されないことを確保する可能性があります。異なるキーが各送信者のために導出されている場合は、同じ基本IVから始まることは、この条件を満足させる可能性があります。同じキーが複数の送信者のために使用されている場合、アプリケーションは、送信者の間でIVスペースを分割する方法を提供する必要があります。これはから開始するように異なる基本ポイントを提供したりして開始するためのさまざまな部分IVと再入力する前に、送信するメッセージの数を制限することによって行うことができます。"
    },
    {
      "indent": 3,
      "text": "+---------+-------+-------------------------------------------------+\n| Name    | Value | Description                                     |\n+---------+-------+-------------------------------------------------+\n| sign    | 1     | The key is used to create signatures.  Requires |\n|         |       | private key fields.                             |\n| verify  | 2     | The key is used for verification of signatures. |\n| encrypt | 3     | The key is used for key transport encryption.   |\n| decrypt | 4     | The key is used for key transport decryption.   |\n|         |       | Requires private key fields.                    |\n| wrap    | 5     | The key is used for key wrap encryption.        |\n| key     |       |                                                 |\n| unwrap  | 6     | The key is used for key wrap decryption.        |\n| key     |       | Requires private key fields.                    |\n| derive  | 7     | The key is used for deriving keys.  Requires    |\n| key     |       | private key fields.                             |\n| derive  | 8     | The key is used for deriving bits not to be     |\n| bits    |       | used as a key.  Requires private key fields.    |\n| MAC     | 9     | The key is used for creating MACs.              |\n| create  |       |                                                 |\n| MAC     | 10    | The key is used for validating MACs.            |\n| verify  |       |                                                 |\n+---------+-------+-------------------------------------------------+",
      "raw": true
    },
    {
      "indent": 23,
      "text": "Table 4: Key Operation Values",
      "ja": "表4：キー操作値"
    },
    {
      "indent": 0,
      "text": "8. Signature Algorithms",
      "section_title": true,
      "ja": "8.署名アルゴリズム"
    },
    {
      "indent": 3,
      "text": "There are two signature algorithm schemes. The first is signature with appendix. In this scheme, the message content is processed and a signature is produced; the signature is called the appendix. This is the scheme used by algorithms such as ECDSA and the RSA Probabilistic Signature Scheme (RSASSA-PSS). (In fact, the SSA in RSASSA-PSS stands for Signature Scheme with Appendix.)",
      "ja": "2つの署名アルゴリズムスキームがあります。最初は付録と署名です。この方式では、メッセージのコンテンツが処理され、署名が生成されます。署名は、付録と呼ばれています。これは、ECDSAとRSA確率署名方式（RSASSA-PSS）などのアルゴリズムによって使用される方式です。 （実際には、RSASSA-PSSでSSAは、付録付き署名方式の略です。）"
    },
    {
      "indent": 3,
      "text": "The signature functions for this scheme are:",
      "ja": "このスキームのための署名機能は以下のとおりです。"
    },
    {
      "indent": 6,
      "text": "signature = Sign(message content, key)",
      "ja": "署名=サイン（メッセージ内容、キー）"
    },
    {
      "indent": 6,
      "text": "valid = Verification(message content, key, signature)",
      "ja": "有効=検証（メッセージ内容、鍵、署名）"
    },
    {
      "indent": 3,
      "text": "The second scheme is signature with message recovery (an example of such an algorithm is [PVSig]). In this scheme, the message content is processed, but part of it is included in the signature. Moving bytes of the message content into the signature allows for smaller signatures; the signature size is still potentially large, but the message content has shrunk. This has implications for systems implementing these algorithms and for applications that use them. The first is that the message content is not fully available until after a signature has been validated. Until that point, the part of the message contained inside of the signature is unrecoverable. The second is that the security analysis of the strength of the signature is very much based on the structure of the message content. Messages that are highly predictable require additional randomness to be supplied as part of the signature process. In the worst case, it becomes the same as doing a signature with appendix. Finally, in the event that multiple signatures are applied to a message, all of the signature algorithms are going to be required to consume the same number of bytes of message content. This means that the mixing of the different schemes in a single message is not supported, and if a recovery signature scheme is used, then the same amount of content needs to be consumed by all of the signatures.",
      "ja": "第2の方式は、メッセージ回復（例えばアルゴリズムである[PVSig]の一例）と署名です。この方式では、メッセージのコンテンツが処理され、それの一部が署名に含まれています。署名にメッセージ内容のバイトを移動する小さな署名を可能にします。署名サイズは依然として潜在的に大きいですが、メッセージの内容が縮小しています。これは、これらのアルゴリズムを実装するシステムのため、それらを使用するアプリケーションに影響を与えています。最初は、メッセージの内容は、署名が検証された後まで、完全には利用できないことです。その時点までは、署名の内部に含まれるメッセージの一部は回復不能です。第二は、署名の強度のセキュリティ分析が非常にメッセージコンテンツの構造に基づいていることです。高度に予測されたメッセージは、署名プロセスの一部として供給される追加のランダム性を必要とします。最悪の場合、それは付録に署名をすることと同じになります。最後に、複数の署名がメッセージに適用された場合に、署名アルゴリズムの全ては、メッセージ内容の同じバイト数を消費するために必要とされようとしています。これは、単一のメッセージ内の異なるスキームの混合がサポートされていないことを意味し、回復署名方式が使用される場合、次いで、コンテンツの同じ量の署名の全てによって消費される必要があります。"
    },
    {
      "indent": 3,
      "text": "The signature functions for this scheme are:",
      "ja": "このスキームのための署名機能は以下のとおりです。"
    },
    {
      "indent": 4,
      "text": "signature, message sent = Sign(message content, key)",
      "ja": "署名、メッセージ送信=サイン（メッセージ内容、キー）"
    },
    {
      "indent": 4,
      "text": "valid, message content = Verification(message sent, key, signature)",
      "ja": "有効な、メッセージ内容=検証（メッセージ送信、キー、署名）"
    },
    {
      "indent": 3,
      "text": "Signature algorithms are used with the COSE_Signature and COSE_Sign1 structures. At this time, only signatures with appendixes are defined for use with COSE; however, considerable interest has been expressed in using a signature with message recovery algorithm due to the effective size reduction that is possible. Implementations will need to keep this in mind for later possible integration.",
      "ja": "署名アルゴリズムはCOSE_SignatureとCOSE_Sign1構造に使用されます。このとき、付録でのみ署名がCOSEで使用するために定義されています。しかし、かなりの関心が可能である効果的な小型化に伴うメッセージ回復アルゴリズムを用いて署名を使用して発現されています。実装は、後に可能な統合のためにこれを覚えておく必要があります。"
    },
    {
      "indent": 0,
      "text": "8.1. ECDSA",
      "section_title": true,
      "ja": "8.1。 ECDSA"
    },
    {
      "indent": 3,
      "text": "ECDSA [DSS] defines a signature algorithm using ECC. Implementations SHOULD use a deterministic version of ECDSA such as the one defined in [RFC6979]. The use of a deterministic signature algorithm allows for systems to avoid relying on random number generators in order to avoid generating the same value of 'k' (the per-message random value). Biased generation of the value 'k' can be attacked, and collisions of this value leads to leaked keys. It additionally allows for doing deterministic tests for the signature algorithm. The use of deterministic ECDSA does not lessen the need to have good random number generation when creating the private key.",
      "ja": "ECDSA [DSS]はECCを用いて署名アルゴリズムを定義します。実装は、[RFC6979]で定義されたものとしてECDSAの決定論的バージョンを使用する必要があります。決定論署名アルゴリズムの使用は、「K」（メッセージごとのランダム値）の同じ値の発生を回避するために、乱数発生器に依存回避するシステムを可能にします。値「K」のバイアスされた世代は攻撃することができ、この値の衝突が漏れたキーにつながります。それは、さらに、署名アルゴリズムの決定論的テストを行うことが可能になります。決定論ECDSAを使用すると、秘密鍵を作成する際の良い乱数生成を持つ必要性を軽減しません。"
    },
    {
      "indent": 3,
      "text": "The ECDSA signature algorithm is parameterized with a hash function (h). In the event that the length of the hash function output is greater than the group of the key, the leftmost bytes of the hash output are used.",
      "ja": "ECDSA署名アルゴリズムは、ハッシュ関数（H）を用いてパラメータ化されます。ハッシュ関数の出力の長さは、キーのグループよりも大きい場合には、ハッシュ出力の左端のバイトが使用されます。"
    },
    {
      "indent": 3,
      "text": "The algorithms defined in this document can be found in Table 5.",
      "ja": "この文書で定義されたアルゴリズムは、表5に見ることができます。"
    },
    {
      "indent": 14,
      "text": "+-------+-------+---------+------------------+\n| Name  | Value | Hash    | Description      |\n+-------+-------+---------+------------------+\n| ES256 | -7    | SHA-256 | ECDSA w/ SHA-256 |\n| ES384 | -35   | SHA-384 | ECDSA w/ SHA-384 |\n| ES512 | -36   | SHA-512 | ECDSA w/ SHA-512 |\n+-------+-------+---------+------------------+",
      "raw": true
    },
    {
      "indent": 22,
      "text": "Table 5: ECDSA Algorithm Values",
      "ja": "表5：ECDSAアルゴリズム値"
    },
    {
      "indent": 3,
      "text": "This document defines ECDSA to work only with the curves P-256, P-384, and P-521. This document requires that the curves be encoded using the 'EC2' (2 coordinate elliptic curve) key type. Implementations need to check that the key type and curve are correct when creating and verifying a signature. Other documents can define it to work with other curves and points in the future.",
      "ja": "この文書は、曲線P-256、P-384およびP-521で動作するようにECDSAを定義します。この文書では、曲線は「EC2」（2楕円曲線座標）のキータイプを用いて符号化されることを必要とします。実装は、作成した署名を検証する際に鍵型曲線が正しいことを確認する必要があります。他の文書は、将来的に他の曲線との点で動作するようにそれを定義することができます。"
    },
    {
      "indent": 3,
      "text": "In order to promote interoperability, it is suggested that SHA-256 be used only with curve P-256, SHA-384 be used only with curve P-384, and SHA-512 be used with curve P-521. This is aligned with the recommendation in Section 4 of [RFC5480].",
      "ja": "相互運用性を促進するために、それはSHA-256のみ、曲線P-256で使用することが示唆され、SHA-384のみ、曲線P-384、及びSHA-512で使用することは、曲線P-521で使用すること。これは[RFC5480]のセクション4で推薦と整列されます。"
    },
    {
      "indent": 3,
      "text": "The signature algorithm results in a pair of integers (R, S). These integers will be the same length as the length of the key used for the signature process. The signature is encoded by converting the integers into byte strings of the same length as the key size. The length is rounded up to the nearest byte and is left padded with zero bits to get to the correct length. The two integers are then concatenated together to form a byte string that is the resulting signature.",
      "ja": "整数のペアで署名アルゴリズムの結果（R、S）。これらの整数は、署名プロセスに使用されるキーの長さと同じ長さであろう。署名は鍵のサイズと同じ長さのバイト列に整数を変換することによって符号化されます。長さは、最も近いバイトに切り上げられ、正しい長さに到達するために、ゼロビットでパディング残されます。二つの整数を、次いで、得られた署名であるバイト列を形成するために一緒に連結されます。"
    },
    {
      "indent": 3,
      "text": "Using the function defined in [RFC8017], the signature is: Signature = I2OSP(R, n) | I2OSP(S, n) where n = ceiling(key_length / 8)",
      "ja": "[RFC8017]で定義された関数を使用して、署名がある：署名= I2OSP（R、N）| I2OSP（S、N）ここで、n =天井（key_length / 8）"
    },
    {
      "indent": 3,
      "text": "When using a COSE key for this algorithm, the following checks are made:",
      "ja": "このアルゴリズムのためのコードキーを使用する場合は、以下の検査が行われます。"
    },
    {
      "indent": 3,
      "text": "o The 'kty' field MUST be present, and it MUST be 'EC2'.",
      "ja": "O「KTY」フィールドが存在しなければならない、そしてそれはEC2 'でなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If the 'alg' field is present, it MUST match the ECDSA signature algorithm being used.",
      "ja": "「ALG」フィールドが存在する場合にO、それが使用されているECDSA署名アルゴリズムと一致しなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If the 'key_ops' field is present, it MUST include 'sign' when creating an ECDSA signature.",
      "ja": "「key_ops」フィールドが存在する場合ECDSA署名を作成する際にO、それは記号 'を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If the 'key_ops' field is present, it MUST include 'verify' when verifying an ECDSA signature.",
      "ja": "「key_ops」フィールドが存在する場合、Oは、ECDSA署名を検証するときに「確認」含まなければなりません。"
    },
    {
      "indent": 0,
      "text": "8.1.1. Security Considerations",
      "section_title": true,
      "ja": "8.1.1。セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "The security strength of the signature is no greater than the minimum of the security strength associated with the bit length of the key and the security strength of the hash function.",
      "ja": "署名のセキュリティ強度は、キーとハッシュ関数のセキュリティ強度のビット長に関連付けられたセキュリティ強度の最小値よりも大きくありません。"
    },
    {
      "indent": 3,
      "text": "Note: Use of this technique is a good idea even when good random number generation exists. Doing so both reduces the possibility of having the same value of 'k' in two signature operations and allows for reproducible signature values, which helps testing.",
      "ja": "注意：この技術の使用は良い乱数生成が存在しても良いアイデアです。そうすることは、2回の署名操作で「K」の同じ値を有する可能性を低減し、再現可能な署名値を可能にし、テストを助ける両方。"
    },
    {
      "indent": 3,
      "text": "There are two substitution attacks that can theoretically be mounted against the ECDSA signature algorithm.",
      "ja": "理論的にECDSA署名アルゴリズムに対して取付け可能な2回の置換攻撃があります。"
    },
    {
      "indent": 3,
      "text": "o Changing the curve used to validate the signature: If one changes the curve used to validate the signature, then potentially one could have two messages with the same signature, each computed under a different curve. The only requirement on the new curve is that its order be the same as the old one and it be acceptable to the client. An example would be to change from using the curve secp256r1 (aka P-256) to using secp256k1. (Both are 256-bit curves.) We currently do not have any way to deal with this version of the attack except to restrict the overall set of curves that can be used.",
      "ja": "署名を検証するために使用される曲線の変更（O）一つは署名を検証するために使用される曲線を変更した場合、潜在的に一方が同じシグネチャを持つ2つのメッセージが、異なる曲線下の計算をそれぞれ有することができます。新しい曲線上の唯一の要件は、その順序が古いものと同じで、それがクライアントに受け入れられるということです。例はsecp256k1を使用して曲線secp256r1（別名P-256）を使用してから変更することであろう。 （どちらも、256ビットの曲線である。）私たちは、現在使用可能な曲線の全体的なセットを制限することを除いて、攻撃のこのバージョンに対処する方法を持っていません。"
    },
    {
      "indent": 3,
      "text": "o Change the hash function used to validate the signature: If one either has two different hash functions of the same length or can truncate a hash function down, then one could potentially find collisions between the hash functions rather than within a single hash function (for example, truncating SHA-512 to 256 bits might collide with a SHA-256 bit hash value). As the hash algorithm is part of the signature algorithm identifier, this attack is mitigated by including a signature algorithm identifier in the protected header.",
      "ja": "O署名を検証するために使用されるハッシュ関数を変更：一つは、同じ長さの2つの異なるハッシュ関数を有するか、またはハッシュ関数をダウン切り捨てることができるいずれかの場合には、一つは、潜在的にハッシュ関数との間ではなく、単一のハッシュ関数内の衝突を見つけることができる（のため例えば、切り捨てSHA-512 256ビット）SHA-256ビットのハッシュ値と衝突する可能性があります。ハッシュアルゴリズム、署名アルゴリズム識別子の一部であるように、この攻撃は、保護されたヘッダ内の署名アルゴリズム識別子を含めることによって緩和されます。"
    },
    {
      "indent": 0,
      "text": "8.2. Edwards-Curve Digital Signature Algorithms (EdDSAs)",
      "section_title": true,
      "ja": "8.2。エドワーズ-曲線デジタル署名アルゴリズム（EdDSAs）"
    },
    {
      "indent": 3,
      "text": "[RFC8032] describes the elliptic curve signature scheme Edwards-curve Digital Signature Algorithm (EdDSA). In that document, the signature algorithm is instantiated using parameters for edwards25519 and edwards448 curves. The document additionally describes two variants of the EdDSA algorithm: Pure EdDSA, where no hash function is applied to the content before signing, and HashEdDSA, where a hash function is applied to the content before signing and the result of that hash function is signed. For EdDSA, the content to be signed (either the message or the pre-hash value) is processed twice inside of the signature algorithm. For use with COSE, only the pure EdDSA version is used. This is because it is not expected that extremely large contents are going to be needed and, based on the arrangement of the message structure, the entire message is going to need to be held in memory in order to create or verify a signature. This means that there does not appear to be a need to be able to do block updates of the hash, followed by eliminating the message from memory. Applications can provide the same features by defining the content of the message as a hash value and transporting the COSE object (with the hash value) and the content as separate items.",
      "ja": "[RFC8032]は、楕円曲線署名方式エドワーズ曲線デジタル署名アルゴリズム（エドワーズ曲線デジタル署名アルゴリズム）を記述する。その文書では、署名アルゴリズムはedwards25519とedwards448曲線のパラメータを使用してインスタンス化されます。純粋なしハッシュ関数が署名する前にコンテンツに適用されていないエドワーズ曲線デジタル署名アルゴリズム、およびハッシュ関数は署名する前にコンテンツに適用され、そのハッシュ関数の結果が署名されているHashEdDSA：文書は、さらに、エドワーズ曲線デジタル署名アルゴリズムアルゴリズムの二つの変種が記載されています。エドワーズ曲線デジタル署名アルゴリズムのために、コンテンツは、署名される（メッセージまたは前のハッシュ値のいずれか）署名アルゴリズムの内部に2回処理されています。 COSEで使用する場合は、唯一の純粋エドワーズ曲線デジタル署名アルゴリズムのバージョンが使用されています。非常に大規模なコンテンツが必要とされようとしていると、メッセージ構造の配置に基づいて、メッセージ全体が署名を作成または検証するためにメモリに保持する必要がしようとしていることが予想されていないためです。これは、メモリからのメッセージを排除することに続いて、ハッシュのブロックの更新を行うことができるようにする必要性、があるように表示されていないことを意味します。アプリケーションは、ハッシュ値として、メッセージの内容を定義し、（ハッシュ値）COSEオブジェクトと別のアイテムなどのコンテンツを搬送することにより、同じ機能を提供することができます。"
    },
    {
      "indent": 3,
      "text": "The algorithms defined in this document can be found in Table 6. A single signature algorithm is defined, which can be used for multiple curves.",
      "ja": "この文書で定義されたアルゴリズムは、複数の曲線のために使用することができる、単一の署名アルゴリズムが定義され、表6に見出すことができます。"
    },
    {
      "indent": 22,
      "text": "+-------+-------+-------------+\n| Name  | Value | Description |\n+-------+-------+-------------+\n| EdDSA | -8    | EdDSA       |\n+-------+-------+-------------+",
      "raw": true
    },
    {
      "indent": 22,
      "text": "Table 6: EdDSA Algorithm Values",
      "ja": "表6：エドワーズ曲線デジタル署名アルゴリズムアルゴリズム値"
    },
    {
      "indent": 3,
      "text": "[RFC8032] describes the method of encoding the signature value.",
      "ja": "[RFC8032]は署名値を符号化する方法を記載しています。"
    },
    {
      "indent": 3,
      "text": "When using a COSE key for this algorithm, the following checks are made:",
      "ja": "このアルゴリズムのためのコードキーを使用する場合は、以下の検査が行われます。"
    },
    {
      "indent": 3,
      "text": "o The 'kty' field MUST be present, and it MUST be 'OKP' (Octet Key Pair).",
      "ja": "O「KTY」フィールドが存在しなければならない、そしてそれはOKP '（オクテットキーペア）でなければなりません。"
    },
    {
      "indent": 3,
      "text": "o The 'crv' field MUST be present, and it MUST be a curve defined for this signature algorithm.",
      "ja": "O「CRV」フィールドが存在する必要があり、それは、この署名アルゴリズムのために定義された曲線でなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If the 'alg' field is present, it MUST match 'EdDSA'.",
      "ja": "「ALG」フィールドが存在する場合は、O、それはエドワーズ曲線デジタル署名アルゴリズム 'と一致しなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If the 'key_ops' field is present, it MUST include 'sign' when creating an EdDSA signature.",
      "ja": "「key_ops」フィールドが存在する場合エドワーズ曲線デジタル署名アルゴリズム署名を作成する際にO、それは記号 'を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If the 'key_ops' field is present, it MUST include 'verify' when verifying an EdDSA signature.",
      "ja": "「key_ops」フィールドが存在する場合にO、それはエドワーズ曲線デジタル署名アルゴリズム署名を検証するときに「確認」含まなければなりません。"
    },
    {
      "indent": 0,
      "text": "8.2.1. Security Considerations",
      "section_title": true,
      "ja": "8.2.1。セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "How public values are computed is not the same when looking at EdDSA and Elliptic Curve Diffie-Hellman (ECDH); for this reason, they should not be used with the other algorithm.",
      "ja": "エドワーズ曲線デジタル署名アルゴリズムと楕円曲線のDiffie-Hellmanの（ECDH）を見たときにどのように公共の値に計算されることは同じではありません。この理由のために、彼らは他のアルゴリズムで使用すべきではありません。"
    },
    {
      "indent": 3,
      "text": "If batch signature verification is performed, a well-seeded cryptographic random number generator is REQUIRED. Signing and non-batch signature verification are deterministic operations and do not need random numbers of any kind.",
      "ja": "一括署名の検証を行う場合、十分に播種暗号乱数発生器が必要です。署名および非バッチ署名の検証は、決定論的操作であり、あらゆる種類の乱数を必要としません。"
    },
    {
      "indent": 0,
      "text": "9. Message Authentication Code (MAC) Algorithms",
      "section_title": true,
      "ja": "9.メッセージ認証コード（MAC）アルゴリズム"
    },
    {
      "indent": 3,
      "text": "Message Authentication Codes (MACs) provide data authentication and integrity protection. They provide either no or very limited data origination. A MAC, for example, can be used to prove the identity of the sender to a third party.",
      "ja": "メッセージ認証コード（MAC）データ認証と完全性の保護を提供します。彼らは何か非常に限られたデータの発信のいずれかを提供しません。 MACは、例えば、第三者への送信者の身元を証明するために使用することができます。"
    },
    {
      "indent": 3,
      "text": "MACs use the same scheme as signature with appendix algorithms. The message content is processed and an authentication code is produced. The authentication code is frequently called a tag.",
      "ja": "MACは付録アルゴリズムと署名と同じ方式を使用します。メッセージコンテンツが処理され、認証コードが生成されます。認証コードが頻繁にタグと呼ばれています。"
    },
    {
      "indent": 3,
      "text": "The MAC functions are:",
      "ja": "MAC機能は以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "tag = MAC_Create(message content, key)",
      "ja": "タグ= MAC_Create（メッセージ内容、キー）"
    },
    {
      "indent": 3,
      "text": "valid = MAC_Verify(message content, key, tag)",
      "ja": "有効= MAC_Verify（メッセージの内容、キー、タグ）"
    },
    {
      "indent": 3,
      "text": "MAC algorithms can be based on either a block cipher algorithm (i.e., AES-MAC) or a hash algorithm (i.e., a Hash-based Message Authentication Code (HMAC)). This document defines a MAC algorithm using each of these constructions.",
      "ja": "MACアルゴリズムはブロック暗号アルゴリズム（即ち、AES-MAC）またはハッシュアルゴリズム（すなわち、ハッシュベースメッセージ認証コード（HMAC））のいずれかに基づくことができます。この文書では、これらの構造のそれぞれを使用して、MACアルゴリズムを定義します。"
    },
    {
      "indent": 3,
      "text": "MAC algorithms are used in the COSE_Mac and COSE_Mac0 structures.",
      "ja": "MACアルゴリズムはCOSE_MacとCOSE_Mac0構造物に使用されています。"
    },
    {
      "indent": 0,
      "text": "9.1. Hash-Based Message Authentication Codes (HMACs)",
      "section_title": true,
      "ja": "9.1。ハッシュベースのメッセージ認証コード（HMACs）"
    },
    {
      "indent": 3,
      "text": "HMAC [RFC2104] [RFC4231] was designed to deal with length extension attacks. The algorithm was also designed to allow for new hash algorithms to be directly plugged in without changes to the hash function. The HMAC design process has been shown as solid since, while the security of hash algorithms such as MD5 has decreased over time; the security of HMAC combined with MD5 has not yet been shown to be compromised [RFC6151].",
      "ja": "HMAC [RFC2104] [RFC4231]は長さ延長の攻撃に対処するために設計されました。アルゴリズムはまた、新しいハッシュアルゴリズムは、直接ハッシュ関数を変更することなく、電源に接続することを可能にするように設計されました。 MD5などのハッシュアルゴリズムのセキュリティは経時的に減少していながら、HMAC設計プロセスは、以降の固体として示されています。 MD5と組み合わせたHMACのセキュリティは、まだ[RFC6151]を損なわれることが示されていません。"
    },
    {
      "indent": 3,
      "text": "The HMAC algorithm is parameterized by an inner and outer padding, a hash function (h), and an authentication tag value length. For this specification, the inner and outer padding are fixed to the values set in [RFC2104]. The length of the authentication tag corresponds to the difficulty of producing a forgery. For use in constrained environments, we define a set of HMAC algorithms that are truncated.",
      "ja": "HMACアルゴリズムは、内側と外側のパディング、ハッシュ関数（H）、および認証タグ値の長によってパラメータ化されます。本明細書のために、内側および外側のパディングは、[RFC2104]に設定された値に固定されています。認証タグの長さは、偽造を生産することの難しさに対応しています。制約のある環境での使用のために、私たちは切り捨てられHMACアルゴリズムのセットを定義します。"
    },
    {
      "indent": 3,
      "text": "There are currently no known issues with truncation; however, the security strength of the message tag is correspondingly reduced in strength. When truncating, the leftmost tag length bits are kept and transmitted.",
      "ja": "切り捨てと既知の問題はありません。ただし、メッセージタグのセキュリティ強度は、それに応じて強度が低下しています。切り捨てる場合、左端のタグ長ビットが保持されて送信されます。"
    },
    {
      "indent": 3,
      "text": "The algorithms defined in this document can be found in Table 7.",
      "ja": "この文書で定義されたアルゴリズムは、表7に見ることができます。"
    },
    {
      "indent": 3,
      "text": "+-----------+-------+---------+----------+--------------------------+\n| Name      | Value | Hash    | Tag      | Description              |\n|           |       |         | Length   |                          |\n+-----------+-------+---------+----------+--------------------------+\n| HMAC      | 4     | SHA-256 | 64       | HMAC w/ SHA-256          |\n| 256/64    |       |         |          | truncated to 64 bits     |\n| HMAC      | 5     | SHA-256 | 256      | HMAC w/ SHA-256          |\n| 256/256   |       |         |          |                          |\n| HMAC      | 6     | SHA-384 | 384      | HMAC w/ SHA-384          |\n| 384/384   |       |         |          |                          |\n| HMAC      | 7     | SHA-512 | 512      | HMAC w/ SHA-512          |\n| 512/512   |       |         |          |                          |\n+-----------+-------+---------+----------+--------------------------+",
      "raw": true
    },
    {
      "indent": 22,
      "text": "Table 7: HMAC Algorithm Values",
      "ja": "表7：HMACアルゴリズム値"
    },
    {
      "indent": 3,
      "text": "Some recipient algorithms carry the key while others derive a key from secret data. For those algorithms that carry the key (such as AES Key Wrap), the size of the HMAC key SHOULD be the same size as the underlying hash function. For those algorithms that derive the key (such as ECDH), the derived key MUST be the same size as the underlying hash function.",
      "ja": "他の人が秘密データからキーを派生しながら、いくつかの受信者のアルゴリズムは、キーを運びます。 （例えば、AESキーラップのような）キーを運ぶこれらのアルゴリズムは、HMACキーのサイズは、基礎となるハッシュ関数と同じサイズであるべきです。 （例えばECDHなどの）鍵を導出これらのアルゴリズムのために、導出鍵は、基礎となるハッシュ関数と同じサイズでなければなりません。"
    },
    {
      "indent": 3,
      "text": "When using a COSE key for this algorithm, the following checks are made:",
      "ja": "このアルゴリズムのためのコードキーを使用する場合は、以下の検査が行われます。"
    },
    {
      "indent": 3,
      "text": "o The 'kty' field MUST be present, and it MUST be 'Symmetric'.",
      "ja": "O「KTY」フィールドが存在しなければならない、そしてそれは対称型 'でなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If the 'alg' field is present, it MUST match the HMAC algorithm being used.",
      "ja": "「ALG」フィールドが存在する場合は、O、それが使用されているHMACアルゴリズムと一致しなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If the 'key_ops' field is present, it MUST include 'MAC create' when creating an HMAC authentication tag.",
      "ja": "「key_ops」フィールドが存在する場合は、O、それはHMAC認証タグを作成するときに「MACが作成した」含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If the 'key_ops' field is present, it MUST include 'MAC verify' when verifying an HMAC authentication tag.",
      "ja": "「key_ops」フィールドが存在する場合はHMAC認証タグを検証する場合、O、それはMACの検証 \"を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "Implementations creating and validating MAC values MUST validate that the key type, key length, and algorithm are correct and appropriate for the entities involved.",
      "ja": "MAC値を作成し、検証の実装は、キータイプは、キーの長さ、及びアルゴリズムが正しく、関与するエンティティのために適切であることを検証しなければなりません。"
    },
    {
      "indent": 0,
      "text": "9.1.1. Security Considerations",
      "section_title": true,
      "ja": "9.1.1。セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "HMAC has proved to be resistant to attack even when used with weakened hash algorithms. The current best known attack is to brute force the key. This means that key size is going to be directly related to the security of an HMAC operation.",
      "ja": "HMACは弱体化ハッシュアルゴリズムで使用した場合でも、攻撃に対して抵抗性であることが証明されています。現在最もよく知られた攻撃は、鍵をブルートフォースすることです。これは、キーのサイズは、HMAC操作のセキュリティに直接関連することになるだろうことを意味します。"
    },
    {
      "indent": 0,
      "text": "9.2. AES Message Authentication Code (AES-CBC-MAC)",
      "section_title": true,
      "ja": "9.2。 AESメッセージ認証コード（AES-CBC-MAC）"
    },
    {
      "indent": 3,
      "text": "AES-CBC-MAC is defined in [MAC]. (Note that this is not the same algorithm as AES Cipher-Based Message Authentication Code (AES-CMAC) [RFC4493].)",
      "ja": "AES-CBC-MACは、[MAC]で定義されています。 （これは、AES暗号ベースのメッセージ認証コード（AES-CMAC）[RFC4493]と同じアルゴリズムではないことに注意してください。）"
    },
    {
      "indent": 3,
      "text": "AES-CBC-MAC is parameterized by the key length, the authentication tag length, and the IV used. For all of these algorithms, the IV is fixed to all zeros. We provide an array of algorithms for various key lengths and tag lengths. The algorithms defined in this document are found in Table 8.",
      "ja": "AES-CBC-MACは、鍵長、認証タグの長さ、及び使用されるIVによってパラメータ化されます。これらのアルゴリズムのすべてについて、IVは、すべてゼロに固定されています。我々は、様々なキーの長さ、タグの長さのためのアルゴリズムの配列を提供します。この文書で定義されたアルゴリズムは、表8に見出されます。"
    },
    {
      "indent": 3,
      "text": "+-------------+-------+----------+----------+-----------------------+\n| Name        | Value | Key      | Tag      | Description           |\n|             |       | Length   | Length   |                       |\n+-------------+-------+----------+----------+-----------------------+\n| AES-MAC     | 14    | 128      | 64       | AES-MAC 128-bit key,  |\n| 128/64      |       |          |          | 64-bit tag            |\n| AES-MAC     | 15    | 256      | 64       | AES-MAC 256-bit key,  |\n| 256/64      |       |          |          | 64-bit tag            |\n| AES-MAC     | 25    | 128      | 128      | AES-MAC 128-bit key,  |\n| 128/128     |       |          |          | 128-bit tag           |\n| AES-MAC     | 26    | 256      | 128      | AES-MAC 256-bit key,  |\n| 256/128     |       |          |          | 128-bit tag           |\n+-------------+-------+----------+----------+-----------------------+",
      "raw": true
    },
    {
      "indent": 21,
      "text": "Table 8: AES-MAC Algorithm Values",
      "ja": "表8：AES-MACアルゴリズム値"
    },
    {
      "indent": 3,
      "text": "Keys may be obtained either from a key structure or from a recipient structure. Implementations creating and validating MAC values MUST validate that the key type, key length, and algorithm are correct and appropriate for the entities involved.",
      "ja": "キーは、キー構造から、またはレシピエント構造のいずれかから得ることができます。 MAC値を作成し、検証の実装は、キータイプは、キーの長さ、及びアルゴリズムが正しく、関与するエンティティのために適切であることを検証しなければなりません。"
    },
    {
      "indent": 3,
      "text": "When using a COSE key for this algorithm, the following checks are made:",
      "ja": "このアルゴリズムのためのコードキーを使用する場合は、以下の検査が行われます。"
    },
    {
      "indent": 3,
      "text": "o The 'kty' field MUST be present, and it MUST be 'Symmetric'.",
      "ja": "O「KTY」フィールドが存在しなければならない、そしてそれは対称型 'でなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If the 'alg' field is present, it MUST match the AES-MAC algorithm being used.",
      "ja": "「ALG」フィールドが存在する場合は、O、それが使用されているAES-MACアルゴリズムと一致しなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If the 'key_ops' field is present, it MUST include 'MAC create' when creating an AES-MAC authentication tag.",
      "ja": "「key_ops」フィールドが存在する場合は、O、それはAES-MAC認証タグを作成するときに「MACが作成した」含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If the 'key_ops' field is present, it MUST include 'MAC verify' when verifying an AES-MAC authentication tag.",
      "ja": "AES-MAC認証タグを検証する際「key_ops」フィールドが存在する場合、O、それを含まなければなりません「MACが検証します」。"
    },
    {
      "indent": 0,
      "text": "9.2.1. Security Considerations",
      "section_title": true,
      "ja": "9.2.1。セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "A number of attacks exist against Cipher Block Chaining Message Authentication Code (CBC-MAC) that need to be considered.",
      "ja": "攻撃の数を考慮する必要が暗号ブロック連鎖メッセージ認証コード（CBC-MAC）に対して存在します。"
    },
    {
      "indent": 3,
      "text": "o A single key must only be used for messages of a fixed and known length. If this is not the case, an attacker will be able to generate a message with a valid tag given two message and tag pairs. This can be addressed by using different keys for messages of different lengths. The current structure mitigates this problem, as a specific encoding structure that includes lengths is built and signed. (CMAC also addresses this issue.)",
      "ja": "O単一のキーのみが固定され、既知の長さのメッセージに使用されなければなりません。そうでない場合、攻撃者は、2つのメッセージとタグ対所与の有効なタグ付きメッセージを生成することができるであろう。これは、異なる長さのメッセージに異なるキーを使用することによって対処することができます。長さを含む、特定の符号化構造が構築され、署名されているように、現在の構造は、この問題を軽減します。 （CMACも、この問題に対処しています。）"
    },
    {
      "indent": 3,
      "text": "o Cipher Block Chaining (CBC) mode, if the same key is used for both encryption and authentication operations, an attacker can produce messages with a valid authentication code.",
      "ja": "O暗号ブロック連鎖（CBC）モードで同じ鍵が暗号化と認証の両方の操作に使用される場合、攻撃者は有効な認証コードを用いてメッセージを生成することができます。"
    },
    {
      "indent": 3,
      "text": "o If the IV can be modified, then messages can be forged. This is addressed by fixing the IV to all zeros.",
      "ja": "IVを変更することができた場合は、O、そしてメッセージが偽造することができます。これは、すべてゼロにIVを固定することによって対処されます。"
    },
    {
      "indent": 0,
      "text": "10. Content Encryption Algorithms",
      "section_title": true,
      "ja": "10.コンテンツの暗号化アルゴリズム"
    },
    {
      "indent": 3,
      "text": "Content encryption algorithms provide data confidentiality for potentially large blocks of data using a symmetric key. They provide integrity on the data that was encrypted; however, they provide either no or very limited data origination. (One cannot, for example, be used to prove the identity of the sender to a third party.) The ability to provide data origination is linked to how the CEK is obtained.",
      "ja": "コンテンツの暗号化アルゴリズムには、対称鍵を使用して、データの潜在的に大きなブロックのデータの機密性を提供します。彼らは暗号化されたデータの整合性を提供すること。しかし、彼らはないか、または非常に限られたデータの発信のいずれかを提供しません。 （一つは、例えば、第三者への送信者の身元を証明するために使用することはできません。）データの発信を提供する能力は、CEKが得られる方法にリンクされています。"
    },
    {
      "indent": 3,
      "text": "COSE restricts the set of legal content encryption algorithms to those that support authentication both of the content and additional data. The encryption process will generate some type of authentication value, but that value may be either explicit or implicit in terms of the algorithm definition. For simplicity's sake, the authentication code will normally be defined as being appended to the ciphertext stream. The encryption functions are:",
      "ja": "COSEは、認証、コンテンツや追加データの両方をサポートするものに法的なコンテンツ暗号化アルゴリズムのセットを制限します。暗号化プロセスは、認証値のいくつかのタイプを生成しますが、その値は、アルゴリズムの定義に関して、明示的または暗黙的のいずれであってもよいです。簡単のため、認証コードは、通常、暗号文ストリームに付加されるものとして定義されます。暗号化機能は以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "ciphertext = Encrypt(message content, key, additional data)",
      "ja": "暗号文=暗号化（メッセージコンテンツ、キー、付加データ）"
    },
    {
      "indent": 3,
      "text": "valid, message content = Decrypt(cipher text, key, additional data)",
      "ja": "有効な、メッセージ内容=復号化（暗号文、キー、追加データ）"
    },
    {
      "indent": 3,
      "text": "Most AEAD algorithms are logically defined as returning the message content only if the decryption is valid. Many but not all",
      "ja": "ほとんどのAEADアルゴリズムは、論理的に復号化が有効である場合にのみ、メッセージの内容を返すように定義されています。多くのすべてではありません"
    },
    {
      "indent": 3,
      "text": "implementations will follow this convention. The message content MUST NOT be used if the decryption does not validate.",
      "ja": "実装は、この規則に従います。復号化が検証されない場合は、メッセージの内容を使用してはいけません。"
    },
    {
      "indent": 3,
      "text": "These algorithms are used in COSE_Encrypt and COSE_Encrypt0.",
      "ja": "これらのアルゴリズムはCOSE_EncryptとCOSE_Encrypt0に使用されています。"
    },
    {
      "indent": 0,
      "text": "10.1. AES GCM",
      "section_title": true,
      "ja": "10.1。 AES GCM"
    },
    {
      "indent": 3,
      "text": "The Galois/Counter Mode (GCM) mode is a generic authenticated encryption block cipher mode defined in [AES-GCM]. The GCM mode is combined with the AES block encryption algorithm to define an AEAD cipher.",
      "ja": "ガロア/カウンタ・モード（GCM）モード[AES-GCM]で定義された一般的な認証された暗号化ブロック暗号モードです。 GCMモードはAEAD暗号を定義するためにAESブロック暗号化アルゴリズムと組み合わされます。"
    },
    {
      "indent": 3,
      "text": "The GCM mode is parameterized by the size of the authentication tag and the size of the nonce. This document fixes the size of the nonce at 96 bits. The size of the authentication tag is limited to a small set of values. For this document however, the size of the authentication tag is fixed at 128 bits.",
      "ja": "GCMモードは認証タグのサイズ及びノンスのサイズによってパラメータ化されます。この文書では、96ビットでノンスのサイズを固定します。認証タグのサイズは、値の小さなセットに制限されます。しかし、この文書のために、認証タグのサイズは128ビットに固定されています。"
    },
    {
      "indent": 3,
      "text": "The set of algorithms defined in this document are in Table 9.",
      "ja": "この文書で定義されたアルゴリズムのセットは、表9にあります。"
    },
    {
      "indent": 6,
      "text": "+---------+-------+------------------------------------------+\n| Name    | Value | Description                              |\n+---------+-------+------------------------------------------+\n| A128GCM | 1     | AES-GCM mode w/ 128-bit key, 128-bit tag |\n| A192GCM | 2     | AES-GCM mode w/ 192-bit key, 128-bit tag |\n| A256GCM | 3     | AES-GCM mode w/ 256-bit key, 128-bit tag |\n+---------+-------+------------------------------------------+",
      "raw": true
    },
    {
      "indent": 19,
      "text": "Table 9: Algorithm Value for AES-GCM",
      "ja": "表9：AES-GCMアルゴリズム値"
    },
    {
      "indent": 3,
      "text": "Keys may be obtained either from a key structure or from a recipient structure. Implementations encrypting and decrypting MUST validate that the key type, key length, and algorithm are correct and appropriate for the entities involved.",
      "ja": "キーは、キー構造から、またはレシピエント構造のいずれかから得ることができます。暗号化および復号化の実装は、キータイプ、キーの長さ、およびアルゴリズムが正しいと関与するエンティティのために適切であることを検証する必要があります。"
    },
    {
      "indent": 3,
      "text": "When using a COSE key for this algorithm, the following checks are made:",
      "ja": "このアルゴリズムのためのコードキーを使用する場合は、以下の検査が行われます。"
    },
    {
      "indent": 3,
      "text": "o The 'kty' field MUST be present, and it MUST be 'Symmetric'.",
      "ja": "O「KTY」フィールドが存在しなければならない、そしてそれは対称型 'でなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If the 'alg' field is present, it MUST match the AES-GCM algorithm being used.",
      "ja": "「ALG」フィールドが存在する場合にO、それが使用されるAES-GCMアルゴリズムと一致しなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If the 'key_ops' field is present, it MUST include 'encrypt' or 'wrap key' when encrypting.",
      "ja": "「key_ops」フィールドが存在する場合は暗号化するとき、O、それは暗号化」または「ラップキー」を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If the 'key_ops' field is present, it MUST include 'decrypt' or 'unwrap key' when decrypting.",
      "ja": "「key_ops」フィールドが存在している場合は復号化の際、O、それは復号化」または「アンラップキー」を含まなければなりません。"
    },
    {
      "indent": 0,
      "text": "10.1.1. Security Considerations",
      "section_title": true,
      "ja": "10.1.1。セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "When using AES-GCM, the following restrictions MUST be enforced:",
      "ja": "AES-GCMを使用する場合は、次のような制限が適用されなければなりません。"
    },
    {
      "indent": 3,
      "text": "o The key and nonce pair MUST be unique for every message encrypted.",
      "ja": "Oキーとナンスのペアは暗号化されたすべてのメッセージに対して一意でなければなりません。"
    },
    {
      "indent": 3,
      "text": "o The total amount of data encrypted for a single key MUST NOT exceed 2^39 - 256 bits. An explicit check is required only in environments where it is expected that it might be exceeded.",
      "ja": "256ビット -  O単一キーの暗号化されたデータの合計量が2 ^ 39を超えてはなりません。明示的なチェックが唯一、超過するかもしれないと期待されている環境で必要とされます。"
    },
    {
      "indent": 3,
      "text": "Consideration was given to supporting smaller tag values; the constrained community would desire tag sizes in the 64-bit range. Doing so drastically changes both the maximum messages size (generally not an issue) and the number of times that a key can be used. Given that Counter with CBC-MAC (CCM) is the usual mode for constrained environments, restricted modes are not supported.",
      "ja": "検討は、より小さなタグ値をサポートするに与えられました。制約コミュニティは、64ビットの範囲内にタグのサイズを望むでしょう。そうすることで大幅に最大メッセージサイズ（一般的ではない問題）と鍵が使用できる回数の両方を変更します。 CBC-MAC（CCM）とカウンターが限られた環境のために、通常モードであることを考えると、制限されたモードがサポートされていません。"
    },
    {
      "indent": 0,
      "text": "10.2. AES CCM",
      "section_title": true,
      "ja": "10.2。 AES CCM"
    },
    {
      "indent": 3,
      "text": "CCM is a generic authentication encryption block cipher mode defined in [RFC3610]. The CCM mode is combined with the AES block encryption algorithm to define a commonly used content encryption algorithm used in constrained devices.",
      "ja": "CCMは、[RFC3610]で定義されている一般的な認証、暗号化ブロック暗号モードです。 CCMモードは拘束装置に使用される一般的に使用されるコンテンツ暗号化アルゴリズムを定義するためにAESブロック暗号化アルゴリズムと組み合わされます。"
    },
    {
      "indent": 3,
      "text": "The CCM mode has two parameter choices. The first choice is M, the size of the authentication field. The choice of the value for M involves a trade-off between message growth (from the tag) and the probability that an attacker can undetectably modify a message. The second choice is L, the size of the length field. This value requires a trade-off between the maximum message size and the size of the Nonce.",
      "ja": "CCMモードは、2つのパラメータの選択肢を持っています。最初の選択肢はM、認証フィールドのサイズです。 Mの値の選択は、メッセージ（タグから）成長と、攻撃者は検出できないメッセージを修正することができる確率の間のトレードオフを伴います。 2番目の選択肢は、L、長さフィールドのサイズです。この値は、最大メッセージサイズとノンスのサイズとの間のトレードオフを必要とします。"
    },
    {
      "indent": 3,
      "text": "It is unfortunate that the specification for CCM specified L and M as a count of bytes rather than a count of bits. This leads to possible misunderstandings where AES-CCM-8 is frequently used to refer to a version of CCM mode where the size of the authentication is 64 bits and not 8 bits. These values have traditionally been specified as bit counts rather than byte counts. This document will follow the convention of using bit counts so that it is easier to compare the different algorithms presented in this document.",
      "ja": "CCMの仕様は、バイト数ではなく、ビット数として、L及びMを指定したこと残念です。これは、AES-CCM-8が頻繁認証のサイズが64ビットではなく8ビットであるCCMモードのバージョンを指すために使用されることが可能誤解につながります。これらの値は、伝統的にビット数ではなくバイト数として指定されています。この文書は、この文書の異なるアルゴリズムを比較しやすいように、ビット数を使用しての規則に従います。"
    },
    {
      "indent": 3,
      "text": "We define a matrix of algorithms in this document over the values of L and M. Constrained devices are usually operating in situations where they use short messages and want to avoid doing recipient-specific cryptographic operations. This favors smaller values of both L and M. Less-constrained devices will want to be able to use larger messages and are more willing to generate new keys for every operation. This favors larger values of L and M.",
      "ja": "私たちは、Lの値より、この文書でアルゴリズムの行列を定義してM.拘束装置は、通常、彼らは短いメッセージを使用して、受信者に固有の暗号化操作を行う避けたい状況で動作しています。これは、両方のLの値が小さいとM.未満に制約のあるデバイスは、より大きなメッセージを使用し、すべての操作のための新しいキーを生成するために、より喜んでいることができるようになるでしょう好みます。これは、L及びMのより大きい値を優先する"
    },
    {
      "indent": 3,
      "text": "The following values are used for L:",
      "ja": "次の値がLのために使用されます。"
    },
    {
      "indent": 3,
      "text": "16 bits (2): This limits messages to 2^16 bytes (64 KiB) in length. This is sufficiently long for messages in the constrained world. The nonce length is 13 bytes allowing for 2^(13*8) possible values of the nonce without repeating.",
      "ja": "16ビット（2）：これは、長さが2 ^ 16バイト（64 KiBの）へのメッセージを制限します。これは、制約の世界でのメッセージのために十分に長いです。ナンスの長さは繰り返すことなく2 ^（13 * 8）のためのノンスの可能な値を可能にする13バイトです。"
    },
    {
      "indent": 3,
      "text": "64 bits (8): This limits messages to 2^64 bytes in length. The nonce length is 7 bytes allowing for 2^56 possible values of the nonce without repeating.",
      "ja": "64ビット（8）：これは、長さが2 ^ 64バイトにメッセージを制限します。ナンス長は繰り返すことなく、一回だけの2 ^ 56の可能な値を可能に7バイトです。"
    },
    {
      "indent": 3,
      "text": "The following values are used for M:",
      "ja": "次の値は、Mのために使用されます。"
    },
    {
      "indent": 3,
      "text": "64 bits (8): This produces a 64-bit authentication tag. This implies that there is a 1 in 2^64 chance that a modified message will authenticate.",
      "ja": "64ビット（8）：これは64ビットの認証タグを生成します。これは、変更されたメッセージが認証する1 64 ^ 2でチャンスがあることを意味します。"
    },
    {
      "indent": 3,
      "text": "128 bits (16): This produces a 128-bit authentication tag. This implies that there is a 1 in 2^128 chance that a modified message will authenticate.",
      "ja": "128ビット（16）：これは、128ビットの認証タグを生成します。これは、変更されたメッセージが認証する1 128 ^ 2でチャンスがあることを意味します。"
    },
    {
      "indent": 3,
      "text": "+--------------------+-------+----+-----+-----+---------------------+\n| Name               | Value | L  | M   | k   | Description         |\n+--------------------+-------+----+-----+-----+---------------------+\n| AES-CCM-16-64-128  | 10    | 16 | 64  | 128 | AES-CCM mode        |\n|                    |       |    |     |     | 128-bit key, 64-bit |\n|                    |       |    |     |     | tag, 13-byte nonce  |\n| AES-CCM-16-64-256  | 11    | 16 | 64  | 256 | AES-CCM mode        |\n|                    |       |    |     |     | 256-bit key, 64-bit |\n|                    |       |    |     |     | tag, 13-byte nonce  |\n| AES-CCM-64-64-128  | 12    | 64 | 64  | 128 | AES-CCM mode        |\n|                    |       |    |     |     | 128-bit key, 64-bit |\n|                    |       |    |     |     | tag, 7-byte nonce   |\n| AES-CCM-64-64-256  | 13    | 64 | 64  | 256 | AES-CCM mode        |\n|                    |       |    |     |     | 256-bit key, 64-bit |\n|                    |       |    |     |     | tag, 7-byte nonce   |\n| AES-CCM-16-128-128 | 30    | 16 | 128 | 128 | AES-CCM mode        |\n|                    |       |    |     |     | 128-bit key,        |\n|                    |       |    |     |     | 128-bit tag,        |\n|                    |       |    |     |     | 13-byte nonce       |\n| AES-CCM-16-128-256 | 31    | 16 | 128 | 256 | AES-CCM mode        |\n|                    |       |    |     |     | 256-bit key,        |\n|                    |       |    |     |     | 128-bit tag,        |\n|                    |       |    |     |     | 13-byte nonce       |\n| AES-CCM-64-128-128 | 32    | 64 | 128 | 128 | AES-CCM mode        |\n|                    |       |    |     |     | 128-bit key,        |\n|                    |       |    |     |     | 128-bit tag, 7-byte |\n|                    |       |    |     |     | nonce               |\n| AES-CCM-64-128-256 | 33    | 64 | 128 | 256 | AES-CCM mode        |\n|                    |       |    |     |     | 256-bit key,        |\n|                    |       |    |     |     | 128-bit tag, 7-byte |\n|                    |       |    |     |     | nonce               |\n+--------------------+-------+----+-----+-----+---------------------+",
      "raw": true
    },
    {
      "indent": 18,
      "text": "Table 10: Algorithm Values for AES-CCM",
      "ja": "表10：AES-CCMアルゴリズム値"
    },
    {
      "indent": 3,
      "text": "Keys may be obtained either from a key structure or from a recipient structure. Implementations encrypting and decrypting MUST validate that the key type, key length, and algorithm are correct and appropriate for the entities involved.",
      "ja": "キーは、キー構造から、またはレシピエント構造のいずれかから得ることができます。暗号化および復号化の実装は、キータイプ、キーの長さ、およびアルゴリズムが正しいと関与するエンティティのために適切であることを検証する必要があります。"
    },
    {
      "indent": 3,
      "text": "When using a COSE key for this algorithm, the following checks are made:",
      "ja": "このアルゴリズムのためのコードキーを使用する場合は、以下の検査が行われます。"
    },
    {
      "indent": 3,
      "text": "o The 'kty' field MUST be present, and it MUST be 'Symmetric'.",
      "ja": "O「KTY」フィールドが存在しなければならない、そしてそれは対称型 'でなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If the 'alg' field is present, it MUST match the AES-CCM algorithm being used.",
      "ja": "「ALG」フィールドが存在する場合にO、それが使用されるAES-CCMアルゴリズムと一致しなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If the 'key_ops' field is present, it MUST include 'encrypt' or 'wrap key' when encrypting.",
      "ja": "「key_ops」フィールドが存在する場合は暗号化するとき、O、それは暗号化」または「ラップキー」を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If the 'key_ops' field is present, it MUST include 'decrypt' or 'unwrap key' when decrypting.",
      "ja": "「key_ops」フィールドが存在している場合は復号化の際、O、それは復号化」または「アンラップキー」を含まなければなりません。"
    },
    {
      "indent": 0,
      "text": "10.2.1. Security Considerations",
      "section_title": true,
      "ja": "10.2.1。セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "When using AES-CCM, the following restrictions MUST be enforced:",
      "ja": "AES-CCMを使用する場合は、次のような制限が適用されなければなりません。"
    },
    {
      "indent": 3,
      "text": "o The key and nonce pair MUST be unique for every message encrypted. Note that the value of L influences the number of unique nonces.",
      "ja": "Oキーとナンスのペアは暗号化されたすべてのメッセージに対して一意でなければなりません。 Lの値がユニークナンスの数に影響を与えることに注意してください。"
    },
    {
      "indent": 3,
      "text": "o The total number of times the AES block cipher is used MUST NOT exceed 2^61 operations. This limitation is the sum of times the block cipher is used in computing the MAC value and in performing stream encryption operations. An explicit check is required only in environments where it is expected that it might be exceeded.",
      "ja": "AESブロック暗号は、2 ^ 61の操作を超えてはならない使用された合計回数O。この制限はブロック暗号がMAC値を計算する際に、ストリーム暗号化操作を実行する際に使用される時間の合計です。明示的なチェックが唯一、超過するかもしれないと期待されている環境で必要とされます。"
    },
    {
      "indent": 3,
      "text": "[RFC3610] additionally calls out one other consideration of note. It is possible to do a pre-computation attack against the algorithm in cases where portions of the plaintext are highly predictable. This reduces the security of the key size by half. Ways to deal with this attack include adding a random portion to the nonce value and/or increasing the key size used. Using a portion of the nonce for a random value will decrease the number of messages that a single key can be used for. Increasing the key size may require more resources in the constrained device. See Sections 5 and 10 of [RFC3610] for more information.",
      "ja": "[RFC3610]はさらに音符の他の考慮を呼び出します。平文の部分が非常に予測可能である場合には、アルゴリズムに対する事前計算攻撃を行うことが可能です。これは半分にキーサイズのセキュリティを低減します。この攻撃に対処するための方法は一回だけの値にランダムな部分を追加すること、および/または使用されるキーのサイズを増加させることを含みます。ランダム値をノンスの部分を使用すると、単一のキーをするために使用することができるメッセージの数を減少させます。キーのサイズを大きくすると、制約のあるデバイスでより多くのリソースを必要とするかもしれません。詳細については、セクション5と[RFC3610]の10を参照してください。"
    },
    {
      "indent": 0,
      "text": "10.3. ChaCha20 and Poly1305",
      "section_title": true,
      "ja": "10.3。 ChaCha20とPoly1305"
    },
    {
      "indent": 3,
      "text": "ChaCha20 and Poly1305 combined together is an AEAD mode that is defined in [RFC7539]. This is an algorithm defined to be a cipher that is not AES and thus would not suffer from any future weaknesses found in AES. These cryptographic functions are designed to be fast in software-only implementations.",
      "ja": "組み合わせChaCha20とPoly1305は[RFC7539]で定義されAEADモードです。これはAESではありませんので、AESで見つかった任意の将来の弱点に苦しむないでしょう暗号ように定義されたアルゴリズムです。これらの暗号化機能は、ソフトウェアのみの実装で高速に動作するように設計されています。"
    },
    {
      "indent": 3,
      "text": "The ChaCha20/Poly1305 AEAD construction defined in [RFC7539] has no parameterization. It takes a 256-bit key and a 96-bit nonce, as well as the plaintext and additional data as inputs and produces the ciphertext as an option. We define one algorithm identifier for this algorithm in Table 11.",
      "ja": "[RFC7539]で定義されたChaCha20 / Poly1305 AEAD構造にはパラメータを有していません。それは、入力として256ビットキーと96ビットのノンス、ならびに平文と追加のデータを取得し、オプションとして、暗号文を生成します。私たちは、表11に、このアルゴリズムのための1つのアルゴリズム識別子を定義します。"
    },
    {
      "indent": 3,
      "text": "+-------------------+-------+---------------------------------------+\n| Name              | Value | Description                           |\n+-------------------+-------+---------------------------------------+\n| ChaCha20/Poly1305 | 24    | ChaCha20/Poly1305 w/ 256-bit key,     |\n|                   |       | 128-bit tag                           |\n+-------------------+-------+---------------------------------------+",
      "raw": true
    },
    {
      "indent": 19,
      "text": "Table 11: Algorithm Value for AES-GCM",
      "ja": "表11：AES-GCMアルゴリズム値"
    },
    {
      "indent": 3,
      "text": "Keys may be obtained either from a key structure or from a recipient structure. Implementations encrypting and decrypting MUST validate that the key type, key length, and algorithm are correct and appropriate for the entities involved.",
      "ja": "キーは、キー構造から、またはレシピエント構造のいずれかから得ることができます。暗号化および復号化の実装は、キータイプ、キーの長さ、およびアルゴリズムが正しいと関与するエンティティのために適切であることを検証する必要があります。"
    },
    {
      "indent": 3,
      "text": "When using a COSE key for this algorithm, the following checks are made:",
      "ja": "このアルゴリズムのためのコードキーを使用する場合は、以下の検査が行われます。"
    },
    {
      "indent": 3,
      "text": "o The 'kty' field MUST be present, and it MUST be 'Symmetric'.",
      "ja": "O「KTY」フィールドが存在しなければならない、そしてそれは対称型 'でなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If the 'alg' field is present, it MUST match the ChaCha20/Poly1305 algorithm being used.",
      "ja": "「ALG」フィールドが存在する場合は、O、それが使用されてChaCha20 / Poly1305アルゴリズムと一致しなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If the 'key_ops' field is present, it MUST include 'encrypt' or 'wrap key' when encrypting.",
      "ja": "「key_ops」フィールドが存在する場合は暗号化するとき、O、それは暗号化」または「ラップキー」を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If the 'key_ops' field is present, it MUST include 'decrypt' or 'unwrap key' when decrypting.",
      "ja": "「key_ops」フィールドが存在している場合は復号化の際、O、それは復号化」または「アンラップキー」を含まなければなりません。"
    },
    {
      "indent": 0,
      "text": "10.3.1. Security Considerations",
      "section_title": true,
      "ja": "10.3.1。セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "The key and nonce values MUST be a unique pair for every invocation of the algorithm. Nonce counters are considered to be an acceptable way of ensuring that they are unique.",
      "ja": "キーとナンス値は、アルゴリズムのすべての呼び出しのためのユニークなペアでなければなりません。ノンスカウンタは、彼らがユニークであることを保証する許容可能な方法であると考えられています。"
    },
    {
      "indent": 0,
      "text": "11. Key Derivation Functions (KDFs)",
      "section_title": true,
      "ja": "11.鍵導出関数（KDFs）"
    },
    {
      "indent": 3,
      "text": "KDFs are used to take some secret value and generate a different one. The secret value comes in three flavors:",
      "ja": "KDFsは、いくつかの秘密の値を取り、別のものを生成するために使用されています。秘密値は3種類があります："
    },
    {
      "indent": 3,
      "text": "o Secrets that are uniformly random: This is the type of secret that is created by a good random number generator.",
      "ja": "一様にランダムであるOの秘密：これは良い乱数ジェネレータによって作成された秘密のタイプです。"
    },
    {
      "indent": 3,
      "text": "o Secrets that are not uniformly random: This is type of secret that is created by operations like key agreement.",
      "ja": "一様にランダムではありませんOの秘密：これが鍵協定のような操作によって作成された秘密のタイプがあります。"
    },
    {
      "indent": 3,
      "text": "o Secrets that are not random: This is the type of secret that people generate for things like passwords.",
      "ja": "ランダムではありませんOの秘密：これは、人々はパスワードのようなものを生成することを秘密の一種です。"
    },
    {
      "indent": 3,
      "text": "General KDFs work well with the first type of secret, can do reasonably well with the second type of secret, and generally do poorly with the last type of secret. None of the KDFs in this section are designed to deal with the type of secrets that are used for passwords. Functions like PBES2 [RFC8018] need to be used for that type of secret.",
      "ja": "一般KDFsは秘密の第一のタイプでうまく動作し、秘密の第二のタイプで、合理的にうまくやって、一般的に秘密の最後のタイプと悪い行うことができます。このセクションのKDFsのいずれも、パスワードに使用されている秘密のタイプに対処するように設計されていません。 PBES2 [RFC8018]のような関数は、秘密のそのタイプのために使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "The same KDF can be set up to deal with the first two types of secrets in a different way. The KDF defined in Section 11.1 is such a function. This is reflected in the set of algorithms defined for the HMAC-based Extract-and-Expand Key Derivation Function (HKDF).",
      "ja": "同じKDFは異なる方法で秘密の最初の2つのタイプに対処するように設定することができます。セクション11.1で定義されたKDFは、このような機能です。これは、HMACベースの抽出物と、拡大鍵導出関数（HKDF）に対して定義されたアルゴリズムのセットに反映されます。"
    },
    {
      "indent": 3,
      "text": "When using KDFs, one component that is included is context information. Context information is used to allow for different keying information to be derived from the same secret. The use of context-based keying material is considered to be a good security practice.",
      "ja": "KDFsを使用する場合は、含まれている一つの成分は、コンテキスト情報です。コンテキスト情報は、同一の秘密に由来すると別のキー情報を可能にするために使用されます。コンテキストベースの鍵材料の使用は優良なセキュリティプラクティスであると考えられています。"
    },
    {
      "indent": 3,
      "text": "This document defines a single context structure and a single KDF. These elements are used for all of the recipient algorithms defined in this document that require a KDF process. These algorithms are defined in Sections 12.1.2, 12.4.1, and 12.5.1.",
      "ja": "この文書では、シングルコンテキスト構造と単一KDFを定義します。これらの要素は、KDFプロセスを必要とこの文書で定義されたレシピエントアルゴリズムの全てのために使用されます。これらのアルゴリズムは、セクション12.1.2、12.4.1、および12.5.1で定義されています。"
    },
    {
      "indent": 0,
      "text": "11.1. HMAC-Based Extract-and-Expand Key Derivation Function (HKDF)",
      "section_title": true,
      "ja": "11.1。 HMACベースの抽出物と、拡大鍵導出関数（HKDF）"
    },
    {
      "indent": 3,
      "text": "The HKDF key derivation algorithm is defined in [RFC5869].",
      "ja": "HKDFキー導出アルゴリズムは[RFC5869]で定義されています。"
    },
    {
      "indent": 3,
      "text": "The HKDF algorithm takes these inputs:",
      "ja": "HKDFアルゴリズムは、これらの入力をとります。"
    },
    {
      "indent": 6,
      "text": "secret -- a shared value that is secret. Secrets may be either previously shared or derived from operations like a Diffie-Hellman (DH) key agreement.",
      "ja": "秘密 - 秘密です共有値。秘密は、以前に共有またはディフィー・ヘルマン（DH）鍵合意等の動作に由来することができるいずれか。"
    },
    {
      "indent": 6,
      "text": "salt -- an optional value that is used to change the generation process. The salt value can be either public or private. If the salt is public and carried in the message, then the 'salt' algorithm header parameter defined in Table 13 is used. While [RFC5869] suggests that the length of the salt be the same as the length of the underlying hash value, any amount of salt will improve the security as different key values will be generated. This parameter is protected by being included in the key computation and does not need to be separately authenticated. The salt value does not need to be unique for every message sent.",
      "ja": "塩 - 生成プロセスを変更するために使用される任意の値。ソルト値は、パブリックまたはプライベートのいずれかになります。塩は、公共およびメッセージで運ばれる場合、表13に定義された「塩」アルゴリズムヘッダパラメータが使用されます。 [RFC5869]は塩の長さは、基礎となるハッシュ値の長さと同じであることを示唆しながら、異なるキー値が生成されるように、塩の任意の量は、セキュリティを向上させるであろう。このパラメータは、キー計算に含まれて保護されており、個別に認証される必要はありません。ソルト値は、送信されたメッセージごとに一意である必要はありません。"
    },
    {
      "indent": 6,
      "text": "length -- the number of bytes of output that need to be generated.",
      "ja": "長さ - 生成される必要がある出力のバイト数。"
    },
    {
      "indent": 6,
      "text": "context information -- Information that describes the context in which the resulting value will be used. Making this information specific to the context in which the material is going to be used ensures that the resulting material will always be tied to that usage. The context structure defined in Section 11.2 is used by the KDFs in this document.",
      "ja": "コンテキスト情報 - 結果の値が使用されるコンテキストを記述する情報。材料が使用されようとしているコンテキストにこの情報は、特定の作ることは、得られた材料は、常にその使用法に縛られることを保証します。 11.2節で定義されたコンテキスト構造体は、この文書でKDFsで使用されています。"
    },
    {
      "indent": 6,
      "text": "PRF -- The underlying pseudorandom function to be used in the HKDF algorithm. The PRF is encoded into the HKDF algorithm selection.",
      "ja": "PRF  -  HKDFアルゴリズムで使用する基礎となる擬似ランダム機能。 PRFはHKDFアルゴリズム選択に符号化されます。"
    },
    {
      "indent": 3,
      "text": "HKDF is defined to use HMAC as the underlying PRF. However, it is possible to use other functions in the same construct to provide a different KDF that is more appropriate in the constrained world. Specifically, one can use AES-CBC-MAC as the PRF for the expand step, but not for the extract step. When using a good random shared secret of the correct length, the extract step can be skipped. For the AES algorithm versions, the extract step is always skipped.",
      "ja": "HKDFは、基礎となるPRFとしてHMACを使用するように定義されています。しかし、制約世界でより適切である異なるKDFを提供するために、同じ構築物中に他の機能を使用することが可能です。具体的には、一つはなく、抽出工程のため、拡張工程のためPRFとしてAES-CBC-MACを使用することができます。正しい長さの良いランダムな共有秘密鍵を使用する場合、抽出工程を省略することができます。 AESアルゴリズムのバージョンでは、抽出ステップは常にスキップされます。"
    },
    {
      "indent": 3,
      "text": "The extract step cannot be skipped if the secret is not uniformly random, for example, if it is the result of an ECDH key agreement step. This implies that the AES HKDF version cannot be used with ECDH. If the extract step is skipped, the 'salt' value is not used as part of the HKDF functionality.",
      "ja": "秘密は一様にランダムではない場合、それはECDH鍵合意ステップの結果である場合には、抽出ステップは、例えば、スキップすることはできません。これは、AES HKDFバージョンはECDHで使用することはできませんことを意味します。抽出ステップはスキップされる場合、「塩」値はHKDF機能の一部として使用されていません。"
    },
    {
      "indent": 3,
      "text": "The algorithms defined in this document are found in Table 12.",
      "ja": "この文書で定義されたアルゴリズムは、表12に見出されます。"
    },
    {
      "indent": 3,
      "text": "+---------------+-----------------+---------------------------------+\n| Name          | PRF             | Description                     |\n+---------------+-----------------+---------------------------------+\n| HKDF SHA-256  | HMAC with       | HKDF using HMAC SHA-256 as the  |\n|               | SHA-256         | PRF                             |\n| HKDF SHA-512  | HMAC with       | HKDF using HMAC SHA-512 as the  |\n|               | SHA-512         | PRF                             |\n| HKDF AES-     | AES-CBC-MAC-128 | HKDF using AES-MAC as the PRF   |\n| MAC-128       |                 | w/ 128-bit key                  |\n| HKDF AES-     | AES-CBC-MAC-256 | HKDF using AES-MAC as the PRF   |\n| MAC-256       |                 | w/ 256-bit key                  |\n+---------------+-----------------+---------------------------------+",
      "raw": true
    },
    {
      "indent": 25,
      "text": "Table 12: HKDF Algorithms",
      "ja": "表12：HKDFアルゴリズム"
    },
    {
      "indent": 3,
      "text": "+------+-------+------+-------------------------------+-------------+\n| Name | Label | Type | Algorithm                     | Description |\n+------+-------+------+-------------------------------+-------------+\n| salt | -20   | bstr | direct+HKDF-SHA-256, direct   | Random salt |\n|      |       |      | +HKDF-SHA-512, direct+HKDF-   |             |\n|      |       |      | AES-128, direct+HKDF-AES-256, |             |\n|      |       |      | ECDH-ES+HKDF-256, ECDH-       |             |\n|      |       |      | ES+HKDF-512, ECDH-            |             |\n|      |       |      | SS+HKDF-256, ECDH-            |             |\n|      |       |      | SS+HKDF-512, ECDH-ES+A128KW,  |             |\n|      |       |      | ECDH-ES+A192KW, ECDH-         |             |\n|      |       |      | ES+A256KW, ECDH-SS+A128KW,    |             |\n|      |       |      | ECDH-SS+A192KW, ECDH-         |             |\n|      |       |      | SS+A256KW                     |             |\n+------+-------+------+-------------------------------+-------------+",
      "raw": true
    },
    {
      "indent": 20,
      "text": "Table 13: HKDF Algorithm Parameters",
      "ja": "表13：HKDFアルゴリズムパラメータ"
    },
    {
      "indent": 0,
      "text": "11.2. Context Information Structure",
      "section_title": true,
      "ja": "11.2。コンテキスト情報構造"
    },
    {
      "indent": 3,
      "text": "The context information structure is used to ensure that the derived keying material is \"bound\" to the context of the transaction. The context information structure used here is based on that defined in [SP800-56A]. By using CBOR for the encoding of the context information structure, we automatically get the same type and length separation of fields that is obtained by the use of ASN.1. This means that there is no need to encode the lengths for the base elements, as it is done by the encoding used in JOSE (Section 4.6.2 of [RFC7518]).",
      "ja": "コンテキスト情報構造が得られた鍵素材は、トランザクションのコンテキストに「バウンド」であることを確実にするために使用されます。ここで使用されるコンテキスト情報構造が[SP800-56A]で定義されたものに基づいています。コンテキスト情報構造の符号化のためCBORを用いることにより、我々は自動的にASN.1の使用によって得られるフィールドの同じ種類と長さの分離を得ます。これは、それがJOSE（[RFC7518]のセクション4.6.2）で使用される符号化によって行われるように、ベース要素の長さを符号化する必要が、存在しないことを意味します。"
    },
    {
      "indent": 3,
      "text": "The context information structure refers to PartyU and PartyV as the two parties that are doing the key derivation. Unless the application protocol defines differently, we assign PartyU to the entity that is creating the message and PartyV to the entity that is receiving the message. By doing this association, different keys will be derived for each direction as the context information is different in each direction.",
      "ja": "コンテキスト情報構造は、キー導出を行っている両当事者としてPartyUとPartyVを指します。アプリケーションプロトコルが異なって定義されない限り、我々は、メッセージを受信して​​いるエンティティにメッセージとPartyVを作成しているエンティティにPartyUを割り当てます。コンテキスト情報は、各方向で異なっているように、この関連付けを行うことによって、異なる鍵が各方向について導出されます。"
    },
    {
      "indent": 3,
      "text": "The context structure is built from information that is known to both entities. This information can be obtained from a variety of sources:",
      "ja": "コンテキスト構造体は、両方のエンティティに知られている情報から構築されています。この情報は、種々の供給源から得ることができます。"
    },
    {
      "indent": 3,
      "text": "o Fields can be defined by the application. This is commonly used to assign fixed names to parties, but it can be used for other items such as nonces.",
      "ja": "Oフィールドは、アプリケーションによって定義することができます。これは、一般的に、当事者に固定された名前を割り当てるために使用されるが、それは、そのようなナンスなどの他のアイテムに使用することができます。"
    },
    {
      "indent": 3,
      "text": "o Fields can be defined by usage of the output. Examples of this are the algorithm and key size that are being generated.",
      "ja": "Oフィールドは、出力の使用によって定義することができます。この例は、生成されたアルゴリズムとキーサイズです。"
    },
    {
      "indent": 3,
      "text": "o Fields can be defined by parameters from the message. We define a set of parameters in Table 14 that can be used to carry the values associated with the context structure. Examples of this are identities and nonce values. These parameters are designed to be placed in the unprotected bucket of the recipient structure; they do not need to be in the protected bucket since they already are included in the cryptographic computation by virtue of being included in the context structure.",
      "ja": "Oフィールドは、メッセージからのパラメータによって定義することができます。我々は、コンテキスト構造に関連付けられた値を運ぶために使用することができる。表14中のパラメータのセットを定義します。この例としては、アイデンティティとナンス値です。これらのパラメータは、レシピエントの構造の保護されていないバケット内に配置されるように設計されています。彼らは、彼らがすでにコンテキスト構造に含まれているのおかげで、暗号計算に含まれているため、保護バケツにする必要はありません。"
    },
    {
      "indent": 3,
      "text": "+----------+-------+------+---------------------------+-------------+\n| Name     | Label | Type | Algorithm                 | Description |\n+----------+-------+------+---------------------------+-------------+\n| PartyU   | -21   | bstr | direct+HKDF-SHA-256,      | Party U     |\n| identity |       |      | direct+HKDF-SHA-512,      | identity    |\n|          |       |      | direct+HKDF-AES-128,      | information |\n|          |       |      | direct+HKDF-AES-256,      |             |\n|          |       |      | ECDH-ES+HKDF-256, ECDH-   |             |\n|          |       |      | ES+HKDF-512, ECDH-        |             |\n|          |       |      | SS+HKDF-256, ECDH-        |             |\n|          |       |      | SS+HKDF-512, ECDH-        |             |\n|          |       |      | ES+A128KW, ECDH-          |             |\n|          |       |      | ES+A192KW, ECDH-          |             |\n|          |       |      | ES+A256KW, ECDH-          |             |\n|          |       |      | SS+A128KW, ECDH-          |             |\n|          |       |      | SS+A192KW, ECDH-SS+A256KW |             |\n|          |       |      |                           |             |\n| PartyU   | -22   | bstr | direct+HKDF-SHA-256,      | Party U     |\n| nonce    |       | /    | direct+HKDF-SHA-512,      | provided    |\n|          |       | int  | direct+HKDF-AES-128,      | nonce       |\n|          |       |      | direct+HKDF-AES-256,      |             |\n|          |       |      | ECDH-ES+HKDF-256, ECDH-   |             |\n|          |       |      | ES+HKDF-512, ECDH-        |             |\n|          |       |      | SS+HKDF-256, ECDH-        |             |\n|          |       |      | SS+HKDF-512, ECDH-        |             |\n|          |       |      | ES+A128KW, ECDH-          |             |\n|          |       |      | ES+A192KW, ECDH-          |             |\n|          |       |      | ES+A256KW, ECDH-          |             |\n|          |       |      | SS+A128KW, ECDH-          |             |\n|          |       |      | SS+A192KW, ECDH-SS+A256KW |             |\n|          |       |      |                           |             |\n| PartyU   | -23   | bstr | direct+HKDF-SHA-256,      | Party U     |\n| other    |       |      | direct+HKDF-SHA-512,      | other       |\n|          |       |      | direct+HKDF-AES-128,      | provided    |\n|          |       |      | direct+HKDF-AES-256,      | information |\n|          |       |      | ECDH-ES+HKDF-256, ECDH-   |             |\n|          |       |      | ES+HKDF-512, ECDH-        |             |\n|          |       |      | SS+HKDF-256, ECDH-        |             |\n|          |       |      | SS+HKDF-512, ECDH-        |             |\n|          |       |      | ES+A128KW, ECDH-          |             |\n|          |       |      | ES+A192KW, ECDH-          |             |\n|          |       |      | ES+A256KW, ECDH-          |             |\n|          |       |      | SS+A128KW, ECDH-          |             |\n|          |       |      | SS+A192KW, ECDH-SS+A256KW |             |",
      "raw": true
    },
    {
      "indent": 3,
      "text": "| PartyV   | -24   | bstr | direct+HKDF-SHA-256,      | Party V     |\n| identity |       |      | direct+HKDF-SHA-512,      | identity    |\n|          |       |      | direct+HKDF-AES-128,      | information |\n|          |       |      | direct+HKDF-AES-256,      |             |\n|          |       |      | ECDH-ES+HKDF-256, ECDH-   |             |\n|          |       |      | ES+HKDF-512, ECDH-        |             |\n|          |       |      | SS+HKDF-256, ECDH-        |             |\n|          |       |      | SS+HKDF-512, ECDH-        |             |\n|          |       |      | ES+A128KW, ECDH-          |             |\n|          |       |      | ES+A192KW, ECDH-          |             |\n|          |       |      | ES+A256KW, ECDH-          |             |\n|          |       |      | SS+A128KW, ECDH-          |             |\n|          |       |      | SS+A192KW, ECDH-SS+A256KW |             |\n|          |       |      |                           |             |\n| PartyV   | -25   | bstr | direct+HKDF-SHA-256,      | Party V     |\n| nonce    |       | /    | direct+HKDF-SHA-512,      | provided    |\n|          |       | int  | direct+HKDF-AES-128,      | nonce       |\n|          |       |      | direct+HKDF-AES-256,      |             |\n|          |       |      | ECDH-ES+HKDF-256, ECDH-   |             |\n|          |       |      | ES+HKDF-512, ECDH-        |             |\n|          |       |      | SS+HKDF-256, ECDH-        |             |\n|          |       |      | SS+HKDF-512, ECDH-        |             |\n|          |       |      | ES+A128KW, ECDH-          |             |\n|          |       |      | ES+A192KW, ECDH-          |             |\n|          |       |      | ES+A256KW, ECDH-          |             |\n|          |       |      | SS+A128KW, ECDH-          |             |\n|          |       |      | SS+A192KW, ECDH-SS+A256KW |             |\n|          |       |      |                           |             |\n| PartyV   | -26   | bstr | direct+HKDF-SHA-256,      | Party V     |\n| other    |       |      | direct+HKDF-SHA-512,      | other       |\n|          |       |      | direct+HKDF-AES-128,      | provided    |\n|          |       |      | direct+HKDF-AES-256,      | information |\n|          |       |      | ECDH-ES+HKDF-256, ECDH-   |             |\n|          |       |      | ES+HKDF-512, ECDH-        |             |\n|          |       |      | SS+HKDF-256, ECDH-        |             |\n|          |       |      | SS+HKDF-512, ECDH-        |             |\n|          |       |      | ES+A128KW, ECDH-          |             |\n|          |       |      | ES+A192KW, ECDH-          |             |\n|          |       |      | ES+A256KW, ECDH-          |             |\n|          |       |      | SS+A128KW, ECDH-          |             |\n|          |       |      | SS+A192KW, ECDH-SS+A256KW |             |\n+----------+-------+------+---------------------------+-------------+",
      "raw": true
    },
    {
      "indent": 18,
      "text": "Table 14: Context Algorithm Parameters",
      "ja": "表14：コンテキスト・アルゴリズムのパラメータ"
    },
    {
      "indent": 3,
      "text": "We define a CBOR object to hold the context information. This object is referred to as COSE_KDF_Context. The object is based on a CBOR array type. The fields in the array are:",
      "ja": "私たちは、コンテキスト情報を保持するCBORオブジェクトを定義します。このオブジェクトはCOSE_KDF_Contextと呼ばれています。オブジェクトはCBORアレイタイプに基づいています。配列内のフィールドは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "AlgorithmID: This field indicates the algorithm for which the key material will be used. This normally is either a key wrap algorithm identifier or a content encryption algorithm identifier. The values are from the \"COSE Algorithms\" registry. This field is required to be present. The field exists in the context information so that if the same environment is used for different algorithms, then completely different keys will be generated for each of those algorithms. This practice means if algorithm A is broken and thus is easier to find, the key derived for algorithm B will not be the same as the key derived for algorithm A.",
      "ja": "AlgorithmID：このフィールドは、キーマテリアルが使用されるためのアルゴリズムを示します。これは、通常のキーラップアルゴリズム識別子やコンテンツの暗号化アルゴリズム識別子のいずれかです。値は「COSEアルゴリズム」レジストリからです。このフィールドは、存在することが必要です。同じ環境が異なるアルゴリズムのために使用される場合、完全に異なるキーがそれらのアルゴリズムの各々のために生成されるように、フィールドは、コンテキスト情報内に存在します。この方法は、アルゴリズムAが壊れ、したがって見つけることが容易である場合には、アルゴリズムBについて導出鍵はアルゴリズムAの導出鍵と同じでないことを意味します"
    },
    {
      "indent": 3,
      "text": "PartyUInfo: This field holds information about party U. The PartyUInfo is encoded as a CBOR array. The elements of PartyUInfo are encoded in the order presented. The elements of the PartyUInfo array are:",
      "ja": "PartyUInfo：このフィールドはCBOR列としてエンコードされたパーティU.ザ・PartyUInfoに関する情報を保持しています。 PartyUInfoの要素は、提示された順序で符号化されます。 PartyUInfo配列の要素は、次のとおり"
    },
    {
      "indent": 6,
      "text": "identity: This contains the identity information for party U. The identities can be assigned in one of two manners. First, a protocol can assign identities based on roles. For example, the roles of \"client\" and \"server\" may be assigned to different entities in the protocol. Each entity would then use the correct label for the data they send or receive. The second way for a protocol to assign identities is to use a name based on a naming system (i.e., DNS, X.509 names).",
      "ja": "アイデンティティ：これは、パーティーのためのID情報が含まれているアイデンティティは2つの方法のいずれかに割り当てることができますUの。まず、プロトコルは、ロールに基づいてIDを割り当てることができます。たとえば、「クライアント」と「サーバー」の役割は、プロトコルの異なるエンティティに割り当ててもよいです。各エンティティは、彼らが送信または受信データのための正しいラベルを使用します。 IDを割り当てるためのプロトコルのための第二の方法は、ネーミングシステム（すなわち、DNS、X.509名）に基づいて名前を使用することです。"
    },
    {
      "indent": 9,
      "text": "We define an algorithm parameter 'PartyU identity' that can be used to carry identity information in the message. However, identity information is often known as part of the protocol and can thus be inferred rather than made explicit. If identity information is carried in the message, applications SHOULD have a way of validating the supplied identity information. The identity information does not need to be specified and is set to nil in that case.",
      "ja": "私たちは、メッセージのID情報を搬送するために使用することができるアルゴリズムパラメータ「PartyUアイデンティティ」を定義します。しかし、識別情報は、多くの場合、プロトコルの一部として知られており、従って推論ではなく、明示的にすることができます。身元情報がメッセージで運ばれている場合、アプリケーションは付属識別情報を検証する方法を持っているべきです。識別情報を指定する必要はありませんし、その場合にはnilに設定されています。"
    },
    {
      "indent": 6,
      "text": "nonce: This contains a nonce value. The nonce can either be implicit from the protocol or be carried as a value in the unprotected headers.",
      "ja": "ナンス：これは一回だけの値が含まれています。ノンスは、いずれかのプロトコルから暗黙的であり得るか、または保護されていないヘッダの値として実施すること。"
    },
    {
      "indent": 9,
      "text": "We define an algorithm parameter 'PartyU nonce' that can be used to carry this value in the message; however, the nonce value could be determined by the application and the value determined from elsewhere.",
      "ja": "我々は、メッセージにこの値を運ぶために使用することができるアルゴリズムパラメータ「PartyU nonceを」定義します。しかし、ノンス値は、アプリケーションおよび他の場所から決定された値によって決定することができます。"
    },
    {
      "indent": 9,
      "text": "This option does not need to be specified and is set to nil in that case.",
      "ja": "このオプションを指定する必要はありませんし、その場合にはnilに設定されています。"
    },
    {
      "indent": 6,
      "text": "other: This contains other information that is defined by the protocol. This option does not need to be specified and is set to nil in that case.",
      "ja": "その他：これはプロトコルによって定義されたその他の情報が含まれています。このオプションを指定する必要はありませんし、その場合にはnilに設定されています。"
    },
    {
      "indent": 3,
      "text": "PartyVInfo: This field holds information about party V. The content of the structure is the same as for the PartyUInfo but for party V.",
      "ja": "PartyVInfo：このフィールドは、パーティーについての情報を保持しているV.構造の内容は、PartyUInfoのためではなく、党のV.の場合と同じです"
    },
    {
      "indent": 3,
      "text": "SuppPubInfo: This field contains public information that is mutually known to both parties.",
      "ja": "SuppPubInfo：このフィールドは、相互に両当事者に知られている公開情報が含まれています。"
    },
    {
      "indent": 6,
      "text": "keyDataLength: This is set to the number of bits of the desired output value. This practice means if algorithm A can use two different key lengths, the key derived for longer key size will not contain the key for shorter key size as a prefix.",
      "ja": "keyDataLengthは：これは、所望の出力値のビットの数に設定されています。アルゴリズムAは、2つの異なるキー長、プレフィックスとして短いキーサイズのキーを含んでいます長いキーサイズのために派生キーを使用することができる場合は、この練習は意味します。"
    },
    {
      "indent": 6,
      "text": "protected: This field contains the protected parameter field. If there are no elements in the protected field, then use a zero-length bstr.",
      "ja": "保護：このフィールドは、保護されたパラメータフィールドが含まれています。保護されたフィールド内の要素がない場合、長さゼロのBSTRを使用します。"
    },
    {
      "indent": 6,
      "text": "other: This field is for free form data defined by the application. An example is that an application could define two different strings to be placed here to generate different keys for a data stream versus a control stream. This field is optional and will only be present if the application defines a structure for this information. Applications that define this SHOULD use CBOR to encode the data so that types and lengths are correctly included.",
      "ja": "その他：このフィールドは、アプリケーションによって定義されたフリーフォームデータのためです。例は、アプリケーションが制御ストリームに対するデータ・ストリームのために異なる鍵を生成するために、ここに配置される2つの異なる文字列を定義することができることです。このフィールドはオプションであり、この情報をアプリケーションが構造を定義する場合にのみ存在するであろう。これを定義するアプリケーションは、タイプと長さが正しく含まれるようにデータをエンコードするためにCBORを使用すべきです。"
    },
    {
      "indent": 3,
      "text": "SuppPrivInfo: This field contains private information that is mutually known private information. An example of this information would be a preexisting shared secret. (This could, for example, be used in combination with an ECDH key agreement to provide a secondary proof of identity.) The field is optional and will only be present if the application defines a structure for this information. Applications that define this SHOULD use CBOR to encode the data so that types and lengths are correctly included.",
      "ja": "SuppPrivInfo：このフィールドは、相互に個人情報を知られている個人情報が含まれています。この情報の例は、既存の共有秘密だろう。 （これは、例えば、同一の二次的証拠を提供するために、ECDH鍵共有と組み合わせて使用​​することができる。）フィールドはオプションであり、この情報をアプリケーションが構造を定義する場合にのみ存在するであろう。これを定義するアプリケーションは、タイプと長さが正しく含まれるようにデータをエンコードするためにCBORを使用すべきです。"
    },
    {
      "indent": 3,
      "text": "The following CDDL fragment corresponds to the text above.",
      "ja": "以下CDDLフラグメントは、上記のテキストに対応します。"
    },
    {
      "indent": 3,
      "text": "PartyInfo = ( identity : bstr / nil, nonce : bstr / int / nil, other : bstr / nil )",
      "ja": "PartyInfo =（アイデンティティ：BSTR / nilに、ナンス：BSTR / INT / nilに、他：BSTR /ゼロ）"
    },
    {
      "indent": 3,
      "text": "COSE_KDF_Context = [ AlgorithmID : int / tstr, PartyUInfo : [ PartyInfo ], PartyVInfo : [ PartyInfo ], SuppPubInfo : [ keyDataLength : uint, protected : empty_or_serialized_map, ? other : bstr ], ? SuppPrivInfo : bstr ]",
      "ja": "COSE_KDF_Context = [AlgorithmID：INT / TSTR、PartyUInfo：[のPartyInfo]、PartyVInfo：[のPartyInfo]、SuppPubInfo：[keyDataLength：UINT、保護：empty_or_serialized_map、？その他：BSTR]、？ SuppPrivInfo：BSTR]"
    },
    {
      "indent": 0,
      "text": "12. Content Key Distribution Methods",
      "section_title": true,
      "ja": "12.コンテンツ鍵配布方法"
    },
    {
      "indent": 3,
      "text": "Content key distribution methods (recipient algorithms) can be defined into a number of different classes. COSE has the ability to support many classes of recipient algorithms. In this section, a number of classes are listed, and then a set of algorithms are specified for each of the classes. The names of the recipient algorithm classes used here are the same as those defined in [RFC7516]. Other specifications use different terms for the recipient algorithm classes or do not support some of the recipient algorithm classes.",
      "ja": "コンテンツ鍵配信方法（レシピエントアルゴリズム）異なるクラスの数に定義することができます。 COSEは、受信者のアルゴリズムの多くのクラスをサポートする能力を持っています。このセクションでは、クラスの数がリストされ、その後、アルゴリズムのセットは、クラスごとに指定されています。ここで使用される受信者のアルゴリズムクラスの名前は、[RFC7516]で定義されたものと同じです。その他の仕様は、受信者のアルゴリズムクラスの異なる用語を使用するか、受信者のアルゴリズムクラスのいくつかをサポートしていません。"
    },
    {
      "indent": 0,
      "text": "12.1. Direct Encryption",
      "section_title": true,
      "ja": "12.1。直接暗号化"
    },
    {
      "indent": 3,
      "text": "The direct encryption class algorithms share a secret between the sender and the recipient that is used either directly or after manipulation as the CEK. When direct encryption mode is used, it MUST be the only mode used on the message.",
      "ja": "直接暗号化クラスのアルゴリズムは、送信者と直接、またはCEKなどの操作後に使用される受信者の間で秘密を共有しています。ダイレクト暗号化モードを使用する場合には、メッセージに使用される唯一のモードでなければなりません。"
    },
    {
      "indent": 3,
      "text": "The COSE_Recipient structure for the recipient is organized as follows:",
      "ja": "次のように受信者のCOSE_Recipient構造が構成されています。"
    },
    {
      "indent": 3,
      "text": "o The 'protected' field MUST be a zero-length item unless it is used in the computation of the content key.",
      "ja": "それはコンテンツ鍵の計算に使用されない限り、「保護」フィールドoを長さゼロの項目でなければなりません。"
    },
    {
      "indent": 3,
      "text": "o The 'alg' parameter MUST be present.",
      "ja": "O「ALG」パラメータが存在しなければなりません。"
    },
    {
      "indent": 3,
      "text": "o A parameter identifying the shared secret SHOULD be present.",
      "ja": "O共有の秘密を特定するパラメータが存在しなければなりません。"
    },
    {
      "indent": 3,
      "text": "o The 'ciphertext' field MUST be a zero-length item.",
      "ja": "O「暗号文」フィールドは長さゼロの項目でなければなりません。"
    },
    {
      "indent": 3,
      "text": "o The 'recipients' field MUST be absent.",
      "ja": "O '受信者のフィールドは存在してはなりません。"
    },
    {
      "indent": 0,
      "text": "12.1.1. Direct Key",
      "section_title": true,
      "ja": "12.1.1。ダイレクトキー"
    },
    {
      "indent": 3,
      "text": "This recipient algorithm is the simplest; the identified key is directly used as the key for the next layer down in the message. There are no algorithm parameters defined for this algorithm. The algorithm identifier value is assigned in Table 15.",
      "ja": "この受信者アルゴリズムが最も簡単です。識別されたキーは、直接メッセージの次の層下のキーとして使用されます。このアルゴリズムのために定義されたアルゴリズムのパラメータはありません。アルゴリズム識別子の値は、表15に割り当てられています。"
    },
    {
      "indent": 3,
      "text": "When this algorithm is used, the protected field MUST be zero length. The key type MUST be 'Symmetric'.",
      "ja": "このアルゴリズムを使用する場合、保護されたフィールドはゼロ長さでなければなりません。キータイプには、「対称型」でなければなりません。"
    },
    {
      "indent": 18,
      "text": "+--------+-------+-------------------+\n| Name   | Value | Description       |\n+--------+-------+-------------------+\n| direct | -6    | Direct use of CEK |\n+--------+-------+-------------------+",
      "raw": true
    },
    {
      "indent": 27,
      "text": "Table 15: Direct Key",
      "ja": "表15：ダイレクトキー"
    },
    {
      "indent": 0,
      "text": "12.1.1.1. Security Considerations",
      "section_title": true,
      "ja": "12.1.1.1。セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "This recipient algorithm has several potential problems that need to be considered:",
      "ja": "この受信者のアルゴリズムを検討する必要があるいくつかの潜在的な問題があります。"
    },
    {
      "indent": 3,
      "text": "o These keys need to have some method to be regularly updated over time. All of the content encryption algorithms specified in this document have limits on how many times a key can be used without significant loss of security.",
      "ja": "Oこれらのキーは定期的に時間をかけて更新するいくつかの方法を持っている必要があります。この文書で指定されたコンテンツの暗号化アルゴリズムのすべては、キーは、セキュリティの大幅な損失することなく使用することができる回数に制限があります。"
    },
    {
      "indent": 3,
      "text": "o These keys need to be dedicated to a single algorithm. There have been a number of attacks developed over time when a single key is used for multiple different algorithms. One example of this is the use of a single key for both the CBC encryption mode and the CBC-MAC authentication mode.",
      "ja": "Oこれらのキーは、単一のアルゴリズムに専念する必要があります。単一のキーが複数の異なるアルゴリズムのために使用されている時間をかけて開発された攻撃の数がありました。この一例は、CBC暗号化モードとCBC-MAC認証モードの両方のための単一のキーを使用することです。"
    },
    {
      "indent": 3,
      "text": "o Breaking one message means all messages are broken. If an adversary succeeds in determining the key for a single message, then the key for all messages is also determined.",
      "ja": "一つのメッセージを破るoをすべてのメッセージが壊れていることを意味します。敵対者が単一のメッセージのためにキーを決定するのに成功した場合、すべてのメッセージのためのキーも決定されます。"
    },
    {
      "indent": 0,
      "text": "12.1.2. Direct Key with KDF",
      "section_title": true,
      "ja": "12.1.2。 KDFとの直接キー"
    },
    {
      "indent": 3,
      "text": "These recipient algorithms take a common shared secret between the two parties and applies the HKDF function (Section 11.1), using the context structure defined in Section 11.2 to transform the shared",
      "ja": "これらの受信者のアルゴリズムは、二者間の共通の共有秘密を取ると共有変換するために、セクション11.2で定義されたコンテキスト構造を使用して、HKDF機能（11.1節）を適用します"
    },
    {
      "indent": 3,
      "text": "secret into the CEK. The 'protected' field can be of non-zero length. Either the 'salt' parameter of HKDF or the 'PartyU nonce' parameter of the context structure MUST be present. The salt/nonce parameter can be generated either randomly or deterministically. The requirement is that it be a unique value for the shared secret in question.",
      "ja": "CEKへの秘密。 「保護された」フィールドはゼロ以外の長さにすることができます。 HKDFの「塩」パラメータまたはコンテキスト構造体の「PartyUナンス」パラメータのいずれかが存在しなければなりません。塩/ナンスパラメータは、無作為または決定論的に生成することができます。要件は、それは問題の共有秘密のためのユニークな値であることです。"
    },
    {
      "indent": 3,
      "text": "If the salt/nonce value is generated randomly, then it is suggested that the length of the random value be the same length as the hash function underlying HKDF. While there is no way to guarantee that it will be unique, there is a high probability that it will be unique. If the salt/nonce value is generated deterministically, it can be guaranteed to be unique, and thus there is no length requirement.",
      "ja": "塩/ナンス値はランダムに生成された場合、ランダムな値の長さがHKDFの基礎となるハッシュ関数と同じ長さであることが示唆されます。それはユニークであることを保証する方法はありませんが、それが一意になる可能性が高いです。塩/ナンス値が決定論的に生成されている場合は、一意であることが保証できるので、何の長さの要件はありません。"
    },
    {
      "indent": 3,
      "text": "A new IV must be used for each message if the same key is used. The IV can be modified in a predictable manner, a random manner, or an unpredictable manner (i.e., encrypting a counter).",
      "ja": "同じキーが使用されている場合は、新しいIVは、各メッセージのために使用する必要があります。 IV（すなわち、カウンタを暗号化）予測可能な様式、ランダム様式、又は予測不可能な方法で変更することができます。"
    },
    {
      "indent": 3,
      "text": "The IV used for a key can also be generated from the same HKDF functionality as the key is generated. If HKDF is used for generating the IV, the algorithm identifier is set to \"IV-GENERATION\".",
      "ja": "IVは、キーが生成されるように、同じHKDF機能から生成することができる鍵のために使用されます。 HKDFはIVを生成するために使用されている場合は、アルゴリズム識別子は、「IV-GENERATION」に設定されています。"
    },
    {
      "indent": 3,
      "text": "When these algorithms are used, the key type MUST be 'symmetric'.",
      "ja": "これらのアルゴリズムが使用されている場合は、キータイプには、「対称」でなければなりません。"
    },
    {
      "indent": 3,
      "text": "The set of algorithms defined in this document can be found in Table 16.",
      "ja": "この文書で定義されたアルゴリズムのセットは、表16に見出すことができます。"
    },
    {
      "indent": 3,
      "text": "+---------------------+-------+-------------+-----------------------+\n| Name                | Value | KDF         | Description           |\n+---------------------+-------+-------------+-----------------------+\n| direct+HKDF-SHA-256 | -10   | HKDF        | Shared secret w/ HKDF |\n|                     |       | SHA-256     | and SHA-256           |\n| direct+HKDF-SHA-512 | -11   | HKDF        | Shared secret w/ HKDF |\n|                     |       | SHA-512     | and SHA-512           |\n| direct+HKDF-AES-128 | -12   | HKDF AES-   | Shared secret w/ AES- |\n|                     |       | MAC-128     | MAC 128-bit key       |\n| direct+HKDF-AES-256 | -13   | HKDF AES-   | Shared secret w/ AES- |\n|                     |       | MAC-256     | MAC 256-bit key       |\n+---------------------+-------+-------------+-----------------------+",
      "raw": true
    },
    {
      "indent": 23,
      "text": "Table 16: Direct Key with KDF",
      "ja": "表16：KDFとの直接キー"
    },
    {
      "indent": 3,
      "text": "When using a COSE key for this algorithm, the following checks are made:",
      "ja": "このアルゴリズムのためのコードキーを使用する場合は、以下の検査が行われます。"
    },
    {
      "indent": 3,
      "text": "o The 'kty' field MUST be present, and it MUST be 'Symmetric'.",
      "ja": "O「KTY」フィールドが存在しなければならない、そしてそれは対称型 'でなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If the 'alg' field is present, it MUST match the algorithm being used.",
      "ja": "「ALG」フィールドが存在する場合は、O、それが使用されているアルゴリズムと一致しなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If the 'key_ops' field is present, it MUST include 'deriveKey' or 'deriveBits'.",
      "ja": "「key_ops」フィールドが存在する場合は、O、それはderiveKey 'または「deriveBits」を含まなければなりません。"
    },
    {
      "indent": 0,
      "text": "12.1.2.1. Security Considerations",
      "section_title": true,
      "ja": "12.1.2.1。セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "The shared secret needs to have some method to be regularly updated over time. The shared secret forms the basis of trust. Although not used directly, it should still be subject to scheduled rotation.",
      "ja": "共有秘密は、定期的に時間をかけて更新するいくつかの方法を持っている必要があります。共有秘密は、信頼の基礎を形成します。直接使用されていないが、それはまだ予定の回転の対象とすべきです。"
    },
    {
      "indent": 3,
      "text": "While these methods do not provide for perfect forward secrecy, as the same shared secret is used for all of the keys generated, if the key for any single message is discovered, only the message (or series of messages) using that derived key are compromised. A new key derivation step will generate a new key that requires the same amount of work to get the key.",
      "ja": "同じ共有秘密は、生成されたキーのすべてのために使用されているように、これらの方法は、完全転送秘密のために提供されていませんが、任意の単一のメッセージのためのキーが発見された場合、その派生鍵を使用してメッセージのみ（または一連のメッセージ）が侵害されました。新しいキー導出ステップは、キーを取得するために仕事の同じ量を必要とする新しいキーを生成します。"
    },
    {
      "indent": 0,
      "text": "12.2. Key Wrap",
      "section_title": true,
      "ja": "12.2。キーラップ"
    },
    {
      "indent": 3,
      "text": "In key wrap mode, the CEK is randomly generated and that key is then encrypted by a shared secret between the sender and the recipient. All of the currently defined key wrap algorithms for COSE are AE algorithms. Key wrap mode is considered to be superior to direct encryption if the system has any capability for doing random key generation. This is because the shared key is used to wrap random data rather than data that has some degree of organization and may in fact be repeating the same content. The use of key wrap loses the weak data origination that is provided by the direct encryption algorithms.",
      "ja": "キーラップモードでは、CEKは、ランダムに生成され、そのキーは、その後、送信者と受信者の間の共有秘密により暗号化されています。 COSEのための現在定義されているキーラップアルゴリズムのすべては、AEアルゴリズムです。キーラップモードは、システムがランダムキーの生成を行うための任意の能力を持っている場合は、直接暗号化よりも優れていると考えられています。共有キーはランダムなデータではなく、組織のいくつかの学位を持っているし、実際に同じ内容を繰り返しすることができるデータをラップするために使用されているためです。キーラップの使用は、直接暗号化アルゴリズムによって提供され弱いデータの発信を失います。"
    },
    {
      "indent": 3,
      "text": "The COSE_Encrypt structure for the recipient is organized as follows:",
      "ja": "次のように受信者のCOSE_Encrypt構造が構成されています。"
    },
    {
      "indent": 3,
      "text": "o The 'protected' field MUST be absent if the key wrap algorithm is an AE algorithm.",
      "ja": "キーラップアルゴリズムはAEアルゴリズムであればO「保護」フィールドが存在してはなりません。"
    },
    {
      "indent": 3,
      "text": "o The 'recipients' field is normally absent, but can be used. Applications MUST deal with a recipient field being present, not being able to decrypt that recipient is an acceptable way of dealing with it. Failing to process the message is not an acceptable way of dealing with it.",
      "ja": "O '受信者のフィールドは、通常は存在しないが、使用することができます。アプリケーションは、受信者フィールドが存在しているに対処しなければならない、その受信者を解読することができないことは、それを扱うの許容方法です。メッセージの処理に失敗すると、それを扱うの許容方法ではありません。"
    },
    {
      "indent": 3,
      "text": "o The plaintext to be encrypted is the key from next layer down (usually the content layer).",
      "ja": "O暗号化される平文は、次の層ダウン（通常コンテンツ層）からのキーです。"
    },
    {
      "indent": 3,
      "text": "o At a minimum, the 'unprotected' field MUST contain the 'alg' parameter and SHOULD contain a parameter identifying the shared secret.",
      "ja": "最低でもO、「保護されていない」フィールドは、「ALG」パラメータを含まなければならないと共有秘密を特定するパラメータを含むべきです。"
    },
    {
      "indent": 0,
      "text": "12.2.1. AES Key Wrap",
      "section_title": true,
      "ja": "12.2.1。 AESキーラップ"
    },
    {
      "indent": 3,
      "text": "The AES Key Wrap algorithm is defined in [RFC3394]. This algorithm uses an AES key to wrap a value that is a multiple of 64 bits. As such, it can be used to wrap a key for any of the content encryption algorithms defined in this document. The algorithm requires a single fixed parameter, the initial value. This is fixed to the value specified in Section 2.2.3.1 of [RFC3394]. There are no public parameters that vary on a per-invocation basis. The protected header field MUST be empty.",
      "ja": "AESキーラップアルゴリズムは[RFC3394]で定義されています。このアルゴリズムは、64ビットの倍数である値をラップするAESキーを使用しています。このように、この文書で定義されているコンテンツの暗号化アルゴリズムのいずれかのキーをラップするために使用することができます。このアルゴリズムは、単一の固定パラメータ、初期値が必要です。これは[RFC3394]のセクション2.2.3.1で指定された値に固定されています。ごとの呼び出し毎に異なりは公共のパラメータはありません。保護されたヘッダフィールドは空でなければなりません。"
    },
    {
      "indent": 3,
      "text": "Keys may be obtained either from a key structure or from a recipient structure. Implementations encrypting and decrypting MUST validate that the key type, key length, and algorithm are correct and appropriate for the entities involved.",
      "ja": "キーは、キー構造から、またはレシピエント構造のいずれかから得ることができます。暗号化および復号化の実装は、キータイプ、キーの長さ、およびアルゴリズムが正しいと関与するエンティティのために適切であることを検証する必要があります。"
    },
    {
      "indent": 3,
      "text": "When using a COSE key for this algorithm, the following checks are made:",
      "ja": "このアルゴリズムのためのコードキーを使用する場合は、以下の検査が行われます。"
    },
    {
      "indent": 3,
      "text": "o The 'kty' field MUST be present, and it MUST be 'Symmetric'.",
      "ja": "O「KTY」フィールドが存在しなければならない、そしてそれは対称型 'でなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If the 'alg' field is present, it MUST match the AES Key Wrap algorithm being used.",
      "ja": "「ALG」フィールドが存在する場合は、O、それが使用されているAESキーラップアルゴリズムと一致しなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If the 'key_ops' field is present, it MUST include 'encrypt' or 'wrap key' when encrypting.",
      "ja": "「key_ops」フィールドが存在する場合は暗号化するとき、O、それは暗号化」または「ラップキー」を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If the 'key_ops' field is present, it MUST include 'decrypt' or 'unwrap key' when decrypting.",
      "ja": "「key_ops」フィールドが存在している場合は復号化の際、O、それは復号化」または「アンラップキー」を含まなければなりません。"
    },
    {
      "indent": 8,
      "text": "+--------+-------+----------+-----------------------------+\n| Name   | Value | Key Size | Description                 |\n+--------+-------+----------+-----------------------------+\n| A128KW | -3    | 128      | AES Key Wrap w/ 128-bit key |\n| A192KW | -4    | 192      | AES Key Wrap w/ 192-bit key |\n| A256KW | -5    | 256      | AES Key Wrap w/ 256-bit key |\n+--------+-------+----------+-----------------------------+",
      "raw": true
    },
    {
      "indent": 18,
      "text": "Table 17: AES Key Wrap Algorithm Values",
      "ja": "表17：AESキーラップアルゴリズム値"
    },
    {
      "indent": 0,
      "text": "12.2.1.1. Security Considerations for AES-KW",
      "section_title": true,
      "ja": "12.2.1.1。 AES-KWのセキュリティに関する注意点"
    },
    {
      "indent": 3,
      "text": "The shared secret needs to have some method to be regularly updated over time. The shared secret is the basis of trust.",
      "ja": "共有秘密は、定期的に時間をかけて更新するいくつかの方法を持っている必要があります。共有秘密は、信頼の基礎です。"
    },
    {
      "indent": 0,
      "text": "12.3. Key Transport",
      "section_title": true,
      "ja": "12.3。主な交通機関"
    },
    {
      "indent": 3,
      "text": "Key transport mode is also called key encryption mode in some standards. Key transport mode differs from key wrap mode in that it uses an asymmetric encryption algorithm rather than a symmetric encryption algorithm to protect the key. This document does not define any key transport mode algorithms.",
      "ja": "キートランスポートモードは、また、いくつかの基準の鍵暗号方式と呼ばれています。それが鍵を保護するために、非対称暗号化アルゴリズムではなく、対称暗号化アルゴリズムを使用することで、キートランスポートモードは、キーラップモードとは異なります。このドキュメントは、任意のキートランスポートモードのアルゴリズムを定義していません。"
    },
    {
      "indent": 3,
      "text": "When using a key transport algorithm, the COSE_Encrypt structure for the recipient is organized as follows:",
      "ja": "キートランスポート・アルゴリズムを使用する場合、以下のように、受信者のCOSE_Encrypt構造が構成されています。"
    },
    {
      "indent": 3,
      "text": "o The 'protected' field MUST be absent.",
      "ja": "O「保護」フィールドが存在してはなりません。"
    },
    {
      "indent": 3,
      "text": "o The plaintext to be encrypted is the key from the next layer down (usually the content layer).",
      "ja": "O平文は、次の層ダウン（通常コンテンツ層）からキーで暗号化します。"
    },
    {
      "indent": 3,
      "text": "o At a minimum, the 'unprotected' field MUST contain the 'alg' parameter and SHOULD contain a parameter identifying the asymmetric key.",
      "ja": "最低でも、O、「非保護」フィールドは、「ALG」パラメータを含まなければなりませんし、非対称鍵を特定するパラメータを含むべきです。"
    },
    {
      "indent": 0,
      "text": "12.4. Direct Key Agreement",
      "section_title": true,
      "ja": "12.4。ダイレクトキー契約"
    },
    {
      "indent": 3,
      "text": "The 'direct key agreement' class of recipient algorithms uses a key agreement method to create a shared secret. A KDF is then applied to the shared secret to derive a key to be used in protecting the data. This key is normally used as a CEK or MAC key, but could be used for other purposes if more than two layers are in use (see Appendix B).",
      "ja": "受信者のアルゴリズムの「ダイレクトキー合意」クラスは、共有秘密鍵を作成するために、主要な協定メソッドを使用しています。 KDFは、データを保護する際に使用する鍵を導出するために、共有秘密に適用されます。このキーは、通常、CEK又はMAC鍵として使用されるが、二つ以上の層が使用されている場合に他の目的のために使用することができる（付録Bを参照）。"
    },
    {
      "indent": 3,
      "text": "The most commonly used key agreement algorithm is Diffie-Hellman, but other variants exist. Since COSE is designed for a store and forward environment rather than an online environment, many of the DH variants cannot be used as the receiver of the message cannot provide any dynamic key material. One side effect of this is that perfect forward secrecy (see [RFC4949]) is not achievable. A static key will always be used for the receiver of the COSE object.",
      "ja": "最も一般的に使用される鍵合意アルゴリズムは、ディフィー・ヘルマンであるが、他の変異体が存在します。 COSEはストアアンドフォワード環境ではなく、オンライン環境のために設計されているので、DH変異体の多くは、任意の動的なキー材料を提供することができないメッセージの受信機として使用することはできません。これの1つの副作用は完全転送秘密は（[RFC4949]を参照）達成できないということです。静的キーは常にCOSEオブジェクトの受信機に使用されます。"
    },
    {
      "indent": 3,
      "text": "Two variants of DH that are supported are:",
      "ja": "サポートされているDHの二つの変種があります。"
    },
    {
      "indent": 6,
      "text": "Ephemeral-Static (ES) DH: where the sender of the message creates a one-time DH key and uses a static key for the recipient. The use of the ephemeral sender key means that no additional random input is needed as this is randomly generated for each message.",
      "ja": "エフェメラル静的（ES）DH：メッセージの送信者がワンタイムDHキーを作成し、受信者のためのスタティックキーを使用します。エフェメラルセンダキーの使用は、これがランダムにメッセージごとに生成される追加のランダムな入力が必要とされないことを意味します。"
    },
    {
      "indent": 6,
      "text": "Static-Static DH: where a static key is used for both the sender and the recipient. The use of static keys allows for the recipient to get a weak version of data origination for the message. When static-static key agreement is used, then some piece of unique data for the KDF is required to ensure that a different key is created for each message.",
      "ja": "静的 - 静的DH：静的キーは、送信者と受信者の両方に使用されます。静的キーを使用すると、メッセージのためのデータ作成の弱いバージョンを取得するために、受信者が可能になります。静的静的鍵合意を使用した場合、その後、KDFのためのユニークなデータのいくつかの部分は、異なる鍵が各メッセージのために作成されていることを確認する必要があります。"
    },
    {
      "indent": 3,
      "text": "When direct key agreement mode is used, there MUST be only one recipient in the message. This method creates the key directly, and that makes it difficult to mix with additional recipients. If multiple recipients are needed, then the version with key wrap needs to be used.",
      "ja": "ダイレクトキー合意モードを使用すると、メッセージ中の一つだけの受信者があるに違いありません。この方法は、直接キーを作成し、それはそれは難しい追加の受信者と混合することができます。複数の受信者が必要な場合は、キーラップでバージョンが使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "The COSE_Encrypt structure for the recipient is organized as follows:",
      "ja": "次のように受信者のCOSE_Encrypt構造が構成されています。"
    },
    {
      "indent": 3,
      "text": "o At a minimum, headers MUST contain the 'alg' parameter and SHOULD contain a parameter identifying the recipient's asymmetric key.",
      "ja": "最低でもO、ヘッダは「ALG」パラメータを含まなければならないし、受信者の非対称鍵を特定するパラメータを含むべきです。"
    },
    {
      "indent": 3,
      "text": "o The headers SHOULD identify the sender's key for the static-static versions and MUST contain the sender's ephemeral key for the ephemeral-static versions.",
      "ja": "Oヘッダは、静的な静的なバージョンの送信者のキーを特定すべきであり、一時的な静的バージョンの送信者の短期キーを含まなければなりません。"
    },
    {
      "indent": 0,
      "text": "12.4.1. ECDH",
      "section_title": true,
      "ja": "12.4.1。エーカー"
    },
    {
      "indent": 3,
      "text": "The mathematics for ECDH can be found in [RFC6090]. In this document, the algorithm is extended to be used with the two curves defined in [RFC7748].",
      "ja": "ECDHのための数学は、[RFC6090]に見出すことができます。本書では、アルゴリズムは、[RFC7748]で定義された二つの曲線で使用するように拡張されます。"
    },
    {
      "indent": 3,
      "text": "ECDH is parameterized by the following:",
      "ja": "ECDHは、以下によってパラメータ化されます。"
    },
    {
      "indent": 3,
      "text": "o Curve Type/Curve: The curve selected controls not only the size of the shared secret, but the mathematics for computing the shared secret. The curve selected also controls how a point in the curve is represented and what happens for the identity points on the curve. In this specification, we allow for a number of different curves to be used. A set of curves are defined in Table 22. The math used to obtain the computed secret is based on the curve selected and not on the ECDH algorithm. For this reason, a new algorithm does not need to be defined for each of the curves.",
      "ja": "O曲線タイプ/カーブ：カーブ選択コントロール共有秘密だけでなく大きさが、共有秘密を計算するための数学。また、選択した曲線は、曲線のポイントはどのように表現されるかを制御し、何が曲線上のアイデンティティポイントのために起こります。この仕様では、我々は、使用する異なる曲線の数を可能にします。曲線のセットが計算秘密を得るために使用される数学はECDHアルゴリズムに選択されていない曲線に基づいて、表22に定義されています。このため、新しいアルゴリズムは、曲線の各々のために定義する必要はありません。"
    },
    {
      "indent": 3,
      "text": "o Computed Secret to Shared Secret: Once the computed secret is known, the resulting value needs to be converted to a byte string to run the KDF. The x-coordinate is used for all of the curves defined in this document. For curves X25519 and X448, the resulting value is used directly as it is a byte string of a known length. For the P-256, P-384, and P-521 curves, the x-coordinate is run through the I2OSP function defined in [RFC8017], using the same computation for n as is defined in Section 8.1.",
      "ja": "共有秘密に計算シークレットO：計算された秘密が知られると、結果の値は、KDFを実行するためにバイト文字列に変換する必要があります。 x座標は、この文書で定義された曲線の全てのために使用されます。曲線X25519およびX448のために、得られた値は、それが既知の長さのバイト列であるとして直接使用されます。 P-256、P-384およびP-521曲線について、x座標はセクション8.1で定義されているように、nに対して同じ計算を使用して、[RFC8017]で定義さI2OSP機能を介して実行されます。"
    },
    {
      "indent": 3,
      "text": "o Ephemeral-Static or Static-Static: The key agreement process may be done using either a static or an ephemeral key for the sender's side. When using ephemeral keys, the sender MUST generate a new ephemeral key for every key agreement operation. The ephemeral key is placed in the 'ephemeral key' parameter and MUST be present for all algorithm identifiers that use ephemeral keys. When using static keys, the sender MUST either generate a new random value or create a unique value. For the KDFs used, this means either the 'salt' parameter for HKDF (Table 13) or the 'PartyU nonce' parameter for the context structure (Table 14) MUST be present (both can be present if desired). The value in the parameter MUST be unique for the pair of keys being used. It is acceptable to use a global counter that is incremented for every static-static operation and use the resulting value. When using static keys, the static key should be identified to the recipient. The static key can be identified either by providing the key ('static key') or by providing a key identifier for the static key ('static key id'). Both of these parameters are defined in Table 19.",
      "ja": "エフェメラル-静的または静的 - 静的○：キー合意プロセスは、静的または送信者側のための短期キーのいずれかを使用して行うことができます。はかないキーを使用すると、送信者は、すべての鍵合意の動作のための新しい短期キーを生成しなければなりません。短期キーは、「短期キー」パラメータに配置されており、一時的なキーを使用するすべてのアルゴリズム識別子のために存在しなければなりません。静的キーを使用すると、送信者は、いずれかの新しいランダムな値を生成したり、ユニークな値を作成する必要があります。 KDFsを用いるため、このことは（所望であれば、両方が存在することができる）のいずれかHKDFための「塩」パラメータ（表13）またはコンテキスト構造（表14）のための「PartyUナンス」パラメータが存在しなければならないことを意味します。パラメータの値が使用されている鍵のペアに対して一意でなければなりません。すべての静的静的動作のためにインクリメントされるグローバルカウンタを使用し、得られた値を使用することが許容されます。静的キーを使用する場合は、静的キーは、受信者に特定されるべきです。スタティックキーは、キー（「スタティックキー」）を提供することによって、または静的キー（「静的鍵ID」）のキー識別子を提供することにより、いずれか特定することができます。これらのパラメータの両方は、表19に定義されています。"
    },
    {
      "indent": 3,
      "text": "o Key Derivation Algorithm: The result of an ECDH key agreement process does not provide a uniformly random secret. As such, it needs to be run through a KDF in order to produce a usable key. Processing the secret through a KDF also allows for the introduction of context material: how the key is going to be used and one-time material for static-static key agreement. All of the algorithms defined in this document use one of the HKDF algorithms defined in Section 11.1 with the context structure defined in Section 11.2.",
      "ja": "Oキー導出アルゴリズム：ECDH鍵協定プロセスの結果は、一様にランダムな秘密を提供していません。このように、それは使用可能なキーを生成するために、KDFを介して実行する必要があります。静的静的鍵合意のための鍵が使用されようとしている方法と、1回の材料：KDFを通じて秘密を処理することは、コンテキスト物質の導入が可能になります。この文書で定義されたすべてのアルゴリズムは、セクション11.2で定義されたコンテキスト構造体と11.1で定義されたHKDFアルゴリズムのいずれかを使用します。"
    },
    {
      "indent": 3,
      "text": "o Key Wrap Algorithm: No key wrap algorithm is used. This is represented in Table 18 as 'none'. The key size for the context structure is the content layer encryption algorithm size.",
      "ja": "Oキーラップアルゴリズム：いいえキーラップアルゴリズムが使用されています。これは、「なし」として表18に示されています。コンテキスト構造のためのキーサイズは、コンテンツ層の暗号化アルゴリズムのサイズです。"
    },
    {
      "indent": 3,
      "text": "The set of direct ECDH algorithms defined in this document are found in Table 18.",
      "ja": "この文書で定義されたダイレクトECDHアルゴリズムのセットは、表18に見出されます。"
    },
    {
      "indent": 3,
      "text": "+-----------+-------+---------+------------+--------+---------------+\n| Name      | Value | KDF     | Ephemeral- | Key    | Description   |\n|           |       |         | Static     | Wrap   |               |\n+-----------+-------+---------+------------+--------+---------------+\n| ECDH-ES + | -25   | HKDF -  | yes        | none   | ECDH ES w/    |\n| HKDF-256  |       | SHA-256 |            |        | HKDF -        |\n|           |       |         |            |        | generate key  |\n|           |       |         |            |        | directly      |\n| ECDH-ES + | -26   | HKDF -  | yes        | none   | ECDH ES w/    |\n| HKDF-512  |       | SHA-512 |            |        | HKDF -        |\n|           |       |         |            |        | generate key  |\n|           |       |         |            |        | directly      |\n| ECDH-SS + | -27   | HKDF -  | no         | none   | ECDH SS w/    |\n| HKDF-256  |       | SHA-256 |            |        | HKDF -        |\n|           |       |         |            |        | generate key  |\n|           |       |         |            |        | directly      |\n| ECDH-SS + | -28   | HKDF -  | no         | none   | ECDH SS w/    |\n| HKDF-512  |       | SHA-512 |            |        | HKDF -        |\n|           |       |         |            |        | generate key  |\n|           |       |         |            |        | directly      |\n+-----------+-------+---------+------------+--------+---------------+",
      "raw": true
    },
    {
      "indent": 22,
      "text": "Table 18: ECDH Algorithm Values",
      "ja": "表18：ECDHアルゴリズム値"
    },
    {
      "indent": 3,
      "text": "+-----------+-------+----------+---------------------+--------------+\n| Name      | Label | Type     | Algorithm           | Description  |\n+-----------+-------+----------+---------------------+--------------+\n| ephemeral | -1    | COSE_Key | ECDH-ES+HKDF-256,   | Ephemeral    |\n| key       |       |          | ECDH-ES+HKDF-512,   | public key   |\n|           |       |          | ECDH-ES+A128KW,     | for the      |\n|           |       |          | ECDH-ES+A192KW,     | sender       |\n|           |       |          | ECDH-ES+A256KW      |              |\n| static    | -2    | COSE_Key | ECDH-SS+HKDF-256,   | Static       |\n| key       |       |          | ECDH-SS+HKDF-512,   | public key   |\n|           |       |          | ECDH-SS+A128KW,     | for the      |\n|           |       |          | ECDH-SS+A192KW,     | sender       |\n|           |       |          | ECDH-SS+A256KW      |              |\n| static    | -3    | bstr     | ECDH-SS+HKDF-256,   | Static       |\n| key id    |       |          | ECDH-SS+HKDF-512,   | public key   |\n|           |       |          | ECDH-SS+A128KW,     | identifier   |\n|           |       |          | ECDH-SS+A192KW,     | for the      |\n|           |       |          | ECDH-SS+A256KW      | sender       |\n+-----------+-------+----------+---------------------+--------------+",
      "raw": true
    },
    {
      "indent": 20,
      "text": "Table 19: ECDH Algorithm Parameters",
      "ja": "表19：ECDHアルゴリズムのパラメータ"
    },
    {
      "indent": 3,
      "text": "This document defines these algorithms to be used with the curves P-256, P-384, P-521, X25519, and X448. Implementations MUST verify that the key type and curve are correct. Different curves are restricted to different key types. Implementations MUST verify that the curve and algorithm are appropriate for the entities involved.",
      "ja": "この文書では、曲線P-256、P-384、P-521、X25519、およびX448で使用するこれらのアルゴリズムを定義します。実装は、キータイプと曲線が正しいことを確かめなければなりません。異なる曲線は、異なるキータイプに制限されています。実装は、曲線とアルゴリズムが関与するエンティティのために適切であることを確かめなければなりません。"
    },
    {
      "indent": 3,
      "text": "When using a COSE key for this algorithm, the following checks are made:",
      "ja": "このアルゴリズムのためのコードキーを使用する場合は、以下の検査が行われます。"
    },
    {
      "indent": 3,
      "text": "o The 'kty' field MUST be present, and it MUST be 'EC2' or 'OKP'.",
      "ja": "O「KTY」フィールドが存在する必要があり、それが「EC2」または「OKP」でなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If the 'alg' field is present, it MUST match the key agreement algorithm being used.",
      "ja": "「ALG」フィールドが存在する場合は、O、それが使用されている鍵合意アルゴリズムと一致しなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If the 'key_ops' field is present, it MUST include 'derive key' or 'derive bits' for the private key.",
      "ja": "「key_ops」フィールドが存在する場合は、O、それは鍵を導出」や秘密鍵は「ビットを引き出す」含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If the 'key_ops' field is present, it MUST be empty for the public key.",
      "ja": "「key_ops」フィールドが存在する場合は、O、それは公開鍵の空でなければなりません。"
    },
    {
      "indent": 0,
      "text": "12.4.2. Security Considerations",
      "section_title": true,
      "ja": "12.4.2。セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "There is a method of checking that points provided from external entities are valid. For the 'EC2' key format, this can be done by checking that the x and y values form a point on the curve. For the 'OKP' format, there is no simple way to do point validation.",
      "ja": "外部エンティティから提供されたポイントが有効であることを確認する方法があります。 「EC2」キーフォーマットのために、これは、xとyの値は、曲線上の点を形成することをチェックすることによって行うことができます。 「OKP」形式の場合、ポイントの検証を行うための簡単な方法はありません。"
    },
    {
      "indent": 3,
      "text": "Consideration was given to requiring that the public keys of both entities be provided as part of the key derivation process (as recommended in Section 6.1 of [RFC7748]). This was not done as COSE is used in a store and forward format rather than in online key exchange. In order for this to be a problem, either the receiver public key has to be chosen maliciously or the sender has to be malicious. In either case, all security evaporates anyway.",
      "ja": "考慮が両方のエンティティの公開鍵が（[RFC7748]のセクション6.1で推奨されているように）鍵導出プロセスの一部として提供されることが必要に与えられました。 COSEは、ストアアンドフォワード方式ではなく、オンラインでの鍵交換に使用されているように、これは実行されませんでした。これが問題であるためには、いずれかの受信機公開鍵が悪意を持って選択しなければならないか、送信者が悪意のあるなければなりません。いずれの場合も、すべてのセキュリティはとにかく蒸発します。"
    },
    {
      "indent": 3,
      "text": "A proof of possession of the private key associated with the public key is recommended when a key is moved from untrusted to trusted (either by the end user or by the entity that is responsible for making trust statements on keys).",
      "ja": "キーは（エンドユーザーまたはキーに信頼文を作るための責任があるエンティティのいずれかによって）、信頼に信頼されていないから移動したときに、公開鍵に関連付けられた秘密鍵の所有の証明が推奨されます。"
    },
    {
      "indent": 0,
      "text": "12.5. Key Agreement with Key Wrap",
      "section_title": true,
      "ja": "12.5。キーラップでキー契約"
    },
    {
      "indent": 3,
      "text": "Key Agreement with Key Wrap uses a randomly generated CEK. The CEK is then encrypted using a key wrap algorithm and a key derived from the shared secret computed by the key agreement algorithm. The function for this would be:",
      "ja": "キーラップでの主な契約は、ランダムに生成されたCEKを使用しています。 CEKは、キーラップアルゴリズムと鍵合意アルゴリズムによって計算された共有秘密から派生鍵を使って暗号化されています。この機能は、次のようになります。"
    },
    {
      "indent": 3,
      "text": "encryptedKey = KeyWrap(KDF(DH-Shared, context), CEK)",
      "ja": "EncryptedKeyに= KeyWrap（KDF（DH-共有、コンテキスト）、CEK）"
    },
    {
      "indent": 3,
      "text": "The COSE_Encrypt structure for the recipient is organized as follows:",
      "ja": "次のように受信者のCOSE_Encrypt構造が構成されています。"
    },
    {
      "indent": 3,
      "text": "o The 'protected' field is fed into the KDF context structure.",
      "ja": "O「保護」フィールドは、KDFコンテキスト構造体に供給されます。"
    },
    {
      "indent": 3,
      "text": "o The plaintext to be encrypted is the key from the next layer down (usually the content layer).",
      "ja": "O平文は、次の層ダウン（通常コンテンツ層）からキーで暗号化します。"
    },
    {
      "indent": 3,
      "text": "o The 'alg' parameter MUST be present in the layer.",
      "ja": "O「ALG」パラメータは、層中に存在していなければなりません。"
    },
    {
      "indent": 3,
      "text": "o A parameter identifying the recipient's key SHOULD be present. A parameter identifying the sender's key SHOULD be present.",
      "ja": "O受信者の鍵を特定するパラメータが存在しなければなりません。送信者の鍵を特定するパラメータが存在しなければなりません。"
    },
    {
      "indent": 0,
      "text": "12.5.1. ECDH",
      "section_title": true,
      "ja": "12.5.1。エーカー"
    },
    {
      "indent": 3,
      "text": "These algorithms are defined in Table 20.",
      "ja": "これらのアルゴリズムは、表20に定義されています。"
    },
    {
      "indent": 3,
      "text": "ECDH with Key Agreement is parameterized by the same parameters as for ECDH; see Section 12.4.1, with the following modifications:",
      "ja": "主契約にECDHはECDHの場合と同じパラメータによってパラメータ化されます。以下のように変更して、12.4.1項を参照してください。"
    },
    {
      "indent": 3,
      "text": "o Key Wrap Algorithm: Any of the key wrap algorithms defined in Section 12.2.1 are supported. The size of the key used for the key wrap algorithm is fed into the KDF. The set of identifiers are found in Table 20.",
      "ja": "Oキーラップアルゴリズム：12.2.1項で定義されたキーラップアルゴリズムのいずれかがサポートされています。キーラップアルゴリズムに使用されるキーのサイズは、KDFに供給されます。識別子のセットは、表20に見出されます。"
    },
    {
      "indent": 3,
      "text": "+-----------+-------+---------+------------+--------+---------------+\n| Name      | Value | KDF     | Ephemeral- | Key    | Description   |\n|           |       |         | Static     | Wrap   |               |\n+-----------+-------+---------+------------+--------+---------------+\n| ECDH-ES + | -29   | HKDF -  | yes        | A128KW | ECDH ES w/    |\n| A128KW    |       | SHA-256 |            |        | Concat KDF    |\n|           |       |         |            |        | and AES Key   |\n|           |       |         |            |        | Wrap w/       |\n|           |       |         |            |        | 128-bit key   |\n|           |       |         |            |        |               |\n| ECDH-ES + | -30   | HKDF -  | yes        | A192KW | ECDH ES w/    |\n| A192KW    |       | SHA-256 |            |        | Concat KDF    |\n|           |       |         |            |        | and AES Key   |\n|           |       |         |            |        | Wrap w/       |\n|           |       |         |            |        | 192-bit key   |\n|           |       |         |            |        |               |\n| ECDH-ES + | -31   | HKDF -  | yes        | A256KW | ECDH ES w/    |\n| A256KW    |       | SHA-256 |            |        | Concat KDF    |\n|           |       |         |            |        | and AES Key   |\n|           |       |         |            |        | Wrap w/       |\n|           |       |         |            |        | 256-bit key   |\n|           |       |         |            |        |               |\n| ECDH-SS + | -32   | HKDF -  | no         | A128KW | ECDH SS w/    |\n| A128KW    |       | SHA-256 |            |        | Concat KDF    |\n|           |       |         |            |        | and AES Key   |\n|           |       |         |            |        | Wrap w/       |\n|           |       |         |            |        | 128-bit key   |\n|           |       |         |            |        |               |\n| ECDH-SS + | -33   | HKDF -  | no         | A192KW | ECDH SS w/    |\n| A192KW    |       | SHA-256 |            |        | Concat KDF    |\n|           |       |         |            |        | and AES Key   |\n|           |       |         |            |        | Wrap w/       |\n|           |       |         |            |        | 192-bit key   |\n|           |       |         |            |        |               |\n| ECDH-SS + | -34   | HKDF -  | no         | A256KW | ECDH SS w/    |\n| A256KW    |       | SHA-256 |            |        | Concat KDF    |\n|           |       |         |            |        | and AES Key   |\n|           |       |         |            |        | Wrap w/       |\n|           |       |         |            |        | 256-bit key   |\n+-----------+-------+---------+------------+--------+---------------+",
      "raw": true
    },
    {
      "indent": 15,
      "text": "Table 20: ECDH Algorithm Values with Key Wrap",
      "ja": "表20：キーラップとECDHアルゴリズム値"
    },
    {
      "indent": 3,
      "text": "When using a COSE key for this algorithm, the following checks are made:",
      "ja": "このアルゴリズムのためのコードキーを使用する場合は、以下の検査が行われます。"
    },
    {
      "indent": 3,
      "text": "o The 'kty' field MUST be present, and it MUST be 'EC2' or 'OKP'.",
      "ja": "O「KTY」フィールドが存在する必要があり、それが「EC2」または「OKP」でなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If the 'alg' field is present, it MUST match the key agreement algorithm being used.",
      "ja": "「ALG」フィールドが存在する場合は、O、それが使用されている鍵合意アルゴリズムと一致しなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If the 'key_ops' field is present, it MUST include 'derive key' or 'derive bits' for the private key.",
      "ja": "「key_ops」フィールドが存在する場合は、O、それは鍵を導出」や秘密鍵は「ビットを引き出す」含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If the 'key_ops' field is present, it MUST be empty for the public key.",
      "ja": "「key_ops」フィールドが存在する場合は、O、それは公開鍵の空でなければなりません。"
    },
    {
      "indent": 0,
      "text": "13. Key Object Parameters",
      "section_title": true,
      "ja": "13.キーオブジェクトのパラメータ"
    },
    {
      "indent": 3,
      "text": "The COSE_Key object defines a way to hold a single key object. It is still required that the members of individual key types be defined. This section of the document is where we define an initial set of members for specific key types.",
      "ja": "COSE_Keyオブジェクトは1つのキーオブジェクトを保持する方法を定義します。まだ個々のキータイプのメンバーが定義されている必要があります。私たちは、特定のキータイプのためのメンバーの初期セットを定義し、文書のこのセクションではあります。"
    },
    {
      "indent": 3,
      "text": "For each of the key types, we define both public and private members. The public members are what is transmitted to others for their usage. Private members allow for the archival of keys by individuals. However, there are some circumstances in which private keys may be distributed to entities in a protocol. Examples include: entities that have poor random number generation, centralized key creation for multi-cast type operations, and protocols in which a shared secret is used as a bearer token for authorization purposes.",
      "ja": "キータイプのそれぞれについて、私たちは、パブリックとプライベートの両方のメンバーを定義します。公共のメンバーは、その使用のために他人に送信されるものです。プライベートメンバーは、個人によるキーのアーカイブを可能にします。しかし、秘密鍵は、プロトコル内のエンティティに配布することができる、いくつかの事情があります。例としては、貧弱な乱数生成を持っているエンティティ、マルチキャストタイプの操作のための中央集中型の鍵の作成、および共有秘密は、認証目的のためにベアラトークンとして使用されるプロトコルを。"
    },
    {
      "indent": 3,
      "text": "Key types are identified by the 'kty' member of the COSE_Key object. In this document, we define four values for the member:",
      "ja": "キータイプはCOSE_Keyオブジェクトの「KTY」メンバによって識別されます。この文書では、我々はメンバーのための4つの値を定義します。"
    },
    {
      "indent": 3,
      "text": "+-----------+-------+-----------------------------------------------+\n| Name      | Value | Description                                   |\n+-----------+-------+-----------------------------------------------+\n| OKP       | 1     | Octet Key Pair                                |\n| EC2       | 2     | Elliptic Curve Keys w/ x- and y-coordinate    |\n|           |       | pair                                          |\n| Symmetric | 4     | Symmetric Keys                                |\n| Reserved  | 0     | This value is reserved                        |\n+-----------+-------+-----------------------------------------------+",
      "raw": true
    },
    {
      "indent": 25,
      "text": "Table 21: Key Type Values",
      "ja": "表21：キータイプ値"
    },
    {
      "indent": 0,
      "text": "13.1. Elliptic Curve Keys",
      "section_title": true,
      "ja": "13.1。楕円曲線キー"
    },
    {
      "indent": 3,
      "text": "Two different key structures are defined for elliptic curve keys. One version uses both an x-coordinate and a y-coordinate, potentially with point compression ('EC2'). This is the traditional EC point representation that is used in [RFC5480]. The other version uses only the x-coordinate as the y-coordinate is either to be recomputed or not needed for the key agreement operation ('OKP').",
      "ja": "二つの異なるキー構造は、楕円曲線キーのために定義されています。 1つのバージョンは、潜在的にポイント圧縮（「EC2」）と、x座標およびy座標の両方を使用します。これは[RFC5480]で使用される伝統的なEC点です。他のバージョンでのみ使用するように、x座標、y座標を再計算又はキー合意操作（「OKP」）のために必要としないべきであるいずれか。"
    },
    {
      "indent": 3,
      "text": "Applications MUST check that the curve and the key type are consistent and reject a key if they are not.",
      "ja": "アプリケーションは曲線とキータイプが一致していることを確認し、そうでない場合は、キーを拒絶しなければなりません。"
    },
    {
      "indent": 4,
      "text": "+---------+-------+----------+------------------------------------+\n| Name    | Value | Key Type | Description                        |\n+---------+-------+----------+------------------------------------+\n| P-256   | 1     | EC2      | NIST P-256 also known as secp256r1 |\n| P-384   | 2     | EC2      | NIST P-384 also known as secp384r1 |\n| P-521   | 3     | EC2      | NIST P-521 also known as secp521r1 |\n| X25519  | 4     | OKP      | X25519 for use w/ ECDH only        |\n| X448    | 5     | OKP      | X448 for use w/ ECDH only          |\n| Ed25519 | 6     | OKP      | Ed25519 for use w/ EdDSA only      |\n| Ed448   | 7     | OKP      | Ed448 for use w/ EdDSA only        |\n+---------+-------+----------+------------------------------------+",
      "raw": true
    },
    {
      "indent": 25,
      "text": "Table 22: Elliptic Curves",
      "ja": "表22：楕円曲線"
    },
    {
      "indent": 0,
      "text": "13.1.1. Double Coordinate Curves",
      "section_title": true,
      "ja": "13.1.1。曲線座標ダブル"
    },
    {
      "indent": 3,
      "text": "The traditional way of sending ECs has been to send either both the x-coordinate and y-coordinate or the x-coordinate and a sign bit for the y-coordinate. The latter encoding has not been recommended in the IETF due to potential IPR issues. However, for operations in constrained environments, the ability to shrink a message by not sending the y-coordinate is potentially useful.",
      "ja": "電気部品を送信する従来の方法は、x座標とy座標又はx座標とy座標の符号ビットのいずれかの両方を送信することでした。後者の符号化は、潜在的な知的財産権の問題に起因するIETFで推奨されていません。しかし、制限された環境で動作するため、y座標を送信しないことにより、メッセージを縮小する能力は、潜在的に有用です。"
    },
    {
      "indent": 3,
      "text": "For EC keys with both coordinates, the 'kty' member is set to 2 (EC2). The key parameters defined in this section are summarized in Table 23. The members that are defined for this key type are:",
      "ja": "両方の座標ECキーのために、「KTY」部材2（EC2）に設定されています。このセクションで定義されたキーのパラメータは表23に要約されているこのキータイプのために定義されているメンバーは以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "crv: This contains an identifier of the curve to be used with the key. The curves defined in this document for this key type can be found in Table 22. Other curves may be registered in the future, and private curves can be used as well.",
      "ja": "CRV：これはキーで使用する曲線の識別子が含まれています。このキータイプについて、この文書で定義された曲線は、22他の曲線は、将来的に登録されていてもよい、及び民間の曲線も同様に使用することができる表に見出すことができます。"
    },
    {
      "indent": 3,
      "text": "x: This contains the x-coordinate for the EC point. The integer is converted to an octet string as defined in [SEC1]. Leading zero octets MUST be preserved.",
      "ja": "X：これはECポイントの座標Xが含まれています。整数は[SEC1]で定義されるようにオクテットストリングに変換されます。先行ゼロオクテットが保存されなければなりません。"
    },
    {
      "indent": 3,
      "text": "y: This contains either the sign bit or the value of the y-coordinate for the EC point. When encoding the value y, the integer is converted to an octet string (as defined in [SEC1]) and encoded as a CBOR bstr. Leading zero octets MUST be preserved. The compressed point encoding is also supported. Compute the sign bit as laid out in the Elliptic-Curve-Point-to-Octet-String Conversion function of [SEC1]. If the sign bit is zero, then encode y as a CBOR false value; otherwise, encode y as a CBOR true value. The encoding of the infinity point is not supported.",
      "ja": "Y：これは、符号ビットまたはy座標EC点についての値のいずれかを含みます。値yを符号化するとき、整数はオクテット文字列に変換（[SEC1]で定義されるように）とCBORのBSTRとして符号化されます。先行ゼロオクテットが保存されなければなりません。圧縮された点のエンコードもサポートされています。 [SEC1]の楕円カーブポイントツーオクテット文字列変換関数にレイアウトとして符号ビットを計算します。符号ビットがゼロである場合、CBOR偽の値としてYをコードします。そうでない場合は、CBOR真値としてYをコードします。無限遠点のエンコーディングがサポートされていません。"
    },
    {
      "indent": 3,
      "text": "d: This contains the private key.",
      "ja": "D：これは、秘密鍵が含まれています。"
    },
    {
      "indent": 3,
      "text": "For public keys, it is REQUIRED that 'crv', 'x', and 'y' be present in the structure. For private keys, it is REQUIRED that 'crv' and 'd' be present in the structure. For private keys, it is RECOMMENDED that 'x' and 'y' also be present, but they can be recomputed from the required elements and omitting them saves on space.",
      "ja": "公開鍵のために、「CRV」は「X」、及び「Y」が構造中に存在することが必要です。プライベートキーの場合、CRV 'と「d」は構造中に存在することが要求されます。秘密鍵のために、それが推奨されている「X」と「Y」も存在するが、それらは必要な要素とスペースを節約し、それらを省略することから再計算することができます。"
    },
    {
      "indent": 3,
      "text": "+-------+------+-------+--------+-----------------------------------+\n| Key   | Name | Label | CBOR   | Description                       |\n| Type  |      |       | Type   |                                   |\n+-------+------+-------+--------+-----------------------------------+\n| 2     | crv  | -1    | int /  | EC identifier - Taken from the    |\n|       |      |       | tstr   | \"COSE Elliptic Curves\" registry   |\n| 2     | x    | -2    | bstr   | x-coordinate                      |\n| 2     | y    | -3    | bstr / | y-coordinate                      |\n|       |      |       | bool   |                                   |\n| 2     | d    | -4    | bstr   | Private key                       |\n+-------+------+-------+--------+-----------------------------------+",
      "raw": true
    },
    {
      "indent": 24,
      "text": "Table 23: EC Key Parameters",
      "ja": "表23：EC主要パラメータ"
    },
    {
      "indent": 0,
      "text": "13.2. Octet Key Pair",
      "section_title": true,
      "ja": "13.2。オクテット鍵ペア"
    },
    {
      "indent": 3,
      "text": "A new key type is defined for Octet Key Pairs (OKP). Do not assume that keys using this type are elliptic curves. This key type could be used for other curve types (for example, mathematics based on hyper-elliptic surfaces).",
      "ja": "新しいキータイプはオクテット鍵ペア（OKP）のために定義されています。このタイプを使用してキーが楕円曲線であることを前提としないでください。このキータイプは、他の曲線の種類（超楕円曲面に基づいて、例えば、数学）のために使用することができます。"
    },
    {
      "indent": 3,
      "text": "The key parameters defined in this section are summarized in Table 24. The members that are defined for this key type are:",
      "ja": "このセクションで定義されたキーのパラメータは表24に要約されているこのキータイプのために定義されているメンバーは以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "crv: This contains an identifier of the curve to be used with the key. The curves defined in this document for this key type can be found in Table 22. Other curves may be registered in the future and private curves can be used as well.",
      "ja": "CRV：これはキーで使用する曲線の識別子が含まれています。このキータイプについて、この文書で定義された曲線は、表22に他の曲線は、将来的に登録することができ、プライベート曲線も同様に使用することができる見つけることができます。"
    },
    {
      "indent": 3,
      "text": "x: This contains the x-coordinate for the EC point. The octet string represents a little-endian encoding of x.",
      "ja": "X：これはECポイントの座標Xが含まれています。オクテット文字列は、xのリトルエンディアンエンコーディングを表します。"
    },
    {
      "indent": 3,
      "text": "d: This contains the private key.",
      "ja": "D：これは、秘密鍵が含まれています。"
    },
    {
      "indent": 3,
      "text": "For public keys, it is REQUIRED that 'crv' and 'x' be present in the structure. For private keys, it is REQUIRED that 'crv' and 'd' be present in the structure. For private keys, it is RECOMMENDED that 'x' also be present, but it can be recomputed from the required elements and omitting it saves on space.",
      "ja": "公開鍵のために、CRV 'と「X」が構造中に存在する必要があります。プライベートキーの場合、CRV 'と「d」は構造中に存在することが要求されます。秘密鍵のためには、「X」も存在することが推奨されますが、それは必要な要素から再計算し、スペースを節約省いすることができます。"
    },
    {
      "indent": 3,
      "text": "+------+-------+-------+--------+-----------------------------------+\n| Name | Key   | Label | Type   | Description                       |\n|      | Type  |       |        |                                   |\n+------+-------+-------+--------+-----------------------------------+\n| crv  | 1     | -1    | int /  | EC identifier - Taken from the    |\n|      |       |       | tstr   | \"COSE Key Common Parameters\"      |\n|      |       |       |        | registry                          |\n| x    | 1     | -2    | bstr   | x-coordinate                      |\n| d    | 1     | -4    | bstr   | Private key                       |\n+------+-------+-------+--------+-----------------------------------+",
      "raw": true
    },
    {
      "indent": 20,
      "text": "Table 24: Octet Key Pair Parameters",
      "ja": "表24：オクテット鍵ペアのパラメータ"
    },
    {
      "indent": 0,
      "text": "13.3. Symmetric Keys",
      "section_title": true,
      "ja": "13.3。対称鍵"
    },
    {
      "indent": 3,
      "text": "Occasionally it is required that a symmetric key be transported between entities. This key structure allows for that to happen.",
      "ja": "時折対称鍵は、エンティティ間で搬送する必要があります。それが起こることをするためにこのキー構造ができます。"
    },
    {
      "indent": 3,
      "text": "For symmetric keys, the 'kty' member is set to 4 ('Symmetric'). The member that is defined for this key type is:",
      "ja": "対称鍵のために、「KTY」メンバーが4に設定されている（「対称」）。このキータイプに定義されたメンバーは以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "k: This contains the value of the key.",
      "ja": "kは：これは、キーの値が含まれています。"
    },
    {
      "indent": 3,
      "text": "This key structure does not have a form that contains only public members. As it is expected that this key structure is going to be transmitted, care must be taken that it is never transmitted accidentally or insecurely. For symmetric keys, it is REQUIRED that 'k' be present in the structure.",
      "ja": "このキー構造は唯一のパブリックメンバーを含むフォームを持っていません。このキー構造が送信されようとしていることが予想されるので、注意がそれは偶然か、安全でない送信されることはありませんように注意しなければなりません。対称鍵のために、K 'が構造中に存在する必要があります。"
    },
    {
      "indent": 13,
      "text": "+------+----------+-------+------+-------------+\n| Name | Key Type | Label | Type | Description |\n+------+----------+-------+------+-------------+\n| k    | 4        | -1    | bstr | Key Value   |\n+------+----------+-------+------+-------------+",
      "raw": true
    },
    {
      "indent": 20,
      "text": "Table 25: Symmetric Key Parameters",
      "ja": "表25：対称キーパラメータ"
    },
    {
      "indent": 0,
      "text": "14. CBOR Encoder Restrictions",
      "section_title": true,
      "ja": "14. CBORエンコーダの制限"
    },
    {
      "indent": 3,
      "text": "There has been an attempt to limit the number of places where the document needs to impose restrictions on how the CBOR Encoder needs to work. We have managed to narrow it down to the following restrictions:",
      "ja": "文書はCBORエンコーダが動作する必要がどのように制限を課す必要がある場所の数を制限しようとする試みがなされてきました。私たちは、以下の制限にそれを絞り込むために管理しています："
    },
    {
      "indent": 3,
      "text": "o The restriction applies to the encoding of the Sig_structure, the Enc_structure, and the MAC_structure.",
      "ja": "O制限はSig_structure、Enc_structure、及びMAC_structureの符号化に適用されます。"
    },
    {
      "indent": 3,
      "text": "o The rules for \"Canonical CBOR\" (Section 3.9 of RFC 7049) MUST be used in these locations. The main rule that needs to be enforced is that all lengths in these structures MUST be encoded such that they are using definite lengths, and the minimum length encoding is used.",
      "ja": "O「カノニカルCBOR」（RFC 7049のセクション3.9）のためのルールは、これらの場所で使用されなければなりません。実施する必要のある主なルールは、これらの構造内のすべての長さは、それらが明確な長さを使用しているように符号化されなければならない、最小レングス符号化が使用されることです。"
    },
    {
      "indent": 3,
      "text": "o Applications MUST NOT generate messages with the same label used twice as a key in a single map. Applications MUST NOT parse and process messages with the same label used twice as a key in a single map. Applications can enforce the parse and process requirement by using parsers that will fail the parse step or by using parsers that will pass all keys to the application, and the application can perform the check for duplicate keys.",
      "ja": "Oアプリケーションは、単一のマップ内のキーと二回使用されるのと同じラベルを持つメッセージを生成してはなりません。アプリケーションは、単一のマップ内のキーと二回使用したのと同じラベルで解析し、プロセスメッセージはならない（MUST NOT）。アプリケーションは、解析ステップを失敗するパーサを使用するか、アプリケーションにすべてのキーを渡しますパーサを使用して解析し、プロセスの要件を適用することができ、そしてアプリケーションが重複キーのチェックを行うことができます。"
    },
    {
      "indent": 0,
      "text": "15. Application Profiling Considerations",
      "section_title": true,
      "ja": "15.アプリケーション・プロファイリングに関する注意事項"
    },
    {
      "indent": 3,
      "text": "This document is designed to provide a set of security services, but not implementation requirements for specific usage. The interoperability requirements are provided for how each of the individual services are used and how the algorithms are to be used for interoperability. The requirements about which algorithms and which services are needed are deferred to each application.",
      "ja": "このドキュメントは、セキュリティサービスのセットではなく、具体的な使用のための実装要件を提供するように設計されています。相互運用性の要件は、個々のサービスのそれぞれが使用され、どのようなアルゴリズムは、相互運用性のために使用される方法のために提供されています。アルゴリズムとサービスが必要とされているかについての要件は、各アプリケーションに延期されています。"
    },
    {
      "indent": 3,
      "text": "An example of a profile can be found in [OSCOAP] where two profiles are being developed. One is for carrying content by itself, and the other is for carrying content in combination with CoAP headers.",
      "ja": "プロファイルの例は、2つのプロファイルが開発されている。ここで、[OSCOAP]に見出すことができます。一つは、それ自体でコンテンツを搬送するためのものであり、他方はCoAPヘッダと組み合わせてコンテンツを搬送するためのものです。"
    },
    {
      "indent": 3,
      "text": "It is intended that a profile of this document be created that defines the interoperability requirements for that specific application. This section provides a set of guidelines and topics that need to be considered when profiling this document.",
      "ja": "その特定のアプリケーションのための相互運用性の要件を定義し、このドキュメントのプロファイルが作成されることを意図しています。このセクションでは、この文書をプロファイリングする際に考慮する必要があるガイドラインとトピックのセットを提供します。"
    },
    {
      "indent": 3,
      "text": "o Applications need to determine the set of messages defined in this document that they will be using. The set of messages corresponds fairly directly to the set of security services that are needed and to the security levels needed.",
      "ja": "Oアプリケーションは、彼らが使用することになります。この文書で定義されたメッセージのセットを決定する必要があります。メッセージのセットが必要とされているセキュリティ・サービスのセットにし、必要なセキュリティレベルにかなり直接的に対応しています。"
    },
    {
      "indent": 3,
      "text": "o Applications may define new header parameters for a specific purpose. Applications will often times select specific header parameters to use or not to use. For example, an application would normally state a preference for using either the IV or the Partial IV parameter. If the Partial IV parameter is specified, then the application would also need to define how the fixed portion of the IV would be determined.",
      "ja": "Oアプリケーションは、特定の目的のために新しいヘッダパラメータを定義することができます。アプリケーションは、しばしば、特定のヘッダパラメータを使用するために使用するかしないかを選択します。例えば、アプリケーションは、通常、IVまたは部分IVのパラメータのいずれかを使用するための嗜好を述べるであろう。部分的なIVパラメータが指定されている場合、アプリケーションはまた、IVの固定部分が決定される方法を定義する必要があります。"
    },
    {
      "indent": 3,
      "text": "o When applications use externally defined authenticated data, they need to define how that data is encoded. This document assumes that the data will be provided as a byte stream. More information can be found in Section 4.3.",
      "ja": "アプリケーションが外部で定義された認証されたデータを使用する場合は、O、彼らはそのデータのエンコード方法を定義する必要があります。このドキュメントでは、データはバイトストリームとして提供されることを前提としています。詳細については、4.3節に記載されています。"
    },
    {
      "indent": 3,
      "text": "o Applications need to determine the set of security algorithms that are to be used. When selecting the algorithms to be used as the mandatory-to-implement set, consideration should be given to choosing different types of algorithms when two are chosen for a specific purpose. An example of this would be choosing HMAC-SHA512 and AES-CMAC as different MAC algorithms; the construction is vastly different between these two algorithms. This means that a weakening of one algorithm would be unlikely to lead to a weakening of the other algorithms. Of course, these algorithms do not provide the same level of security and thus may not be comparable for the desired security functionality.",
      "ja": "Oアプリケーションが使用されるセキュリティアルゴリズムのセットを決定する必要があります。強制的に実装セットとして使用するアルゴリズムを選択するとき、考慮は、二つの特定の目的のために選択された場合にアルゴリズムの種類を選択するに与えられるべきです。この例は、異なるMACアルゴリズムとしてHMAC-SHA512およびAES-CMACを選択するであろう。建設は、これら2つのアルゴリズムの間で非常に異なっています。これは、1つのアルゴリズムの弱体化は、他のアルゴリズムの弱体化につながる可能性は低いだろうということを意味しています。もちろん、これらのアルゴリズムは、同じレベルのセキュリティを提供していませんので、必要なセキュリティ機能のために比較することはできないかもしれません。"
    },
    {
      "indent": 3,
      "text": "o Applications may need to provide some type of negotiation or discovery method if multiple algorithms or message structures are permitted. The method can be as simple as requiring preconfiguration of the set of algorithms to providing a discovery method built into the protocol. S/MIME provided a number of different ways to approach the problem that applications could follow:",
      "ja": "Oアプリケーションは、複数のアルゴリズムまたはメッセージ構造が許可されている場合は、交渉や発見方法のいくつかの種類を提供する必要があるかもしれません。この方法は、プロトコルに組み込まれている検出方法を提供するアルゴリズムのセットの事前設定を必要とするのと同じくらい簡単であることができます。 S / MIMEは、アプリケーションが続く可能性が問題にアプローチするために、いくつかの異なる方法を提供します："
    },
    {
      "indent": 6,
      "text": "* Advertising in the message (S/MIME capabilities) [RFC5751].",
      "ja": "*メッセージ（S / MIME機能）[RFC5751]で広告。"
    },
    {
      "indent": 6,
      "text": "* Advertising in the certificate (capabilities extension) [RFC4262].",
      "ja": "*証明書（機能拡張）での広告[RFC4262]。"
    },
    {
      "indent": 6,
      "text": "* Minimum requirements for the S/MIME, which have been updated over time [RFC2633] [RFC5751] (note that [RFC2633] has been obsoleted by [RFC5751]).",
      "ja": "時間の経過とともに更新されているS / MIME、[RFC2633] [RFC5751]（[RFC2633]は[RFC5751]で廃止されたことに注意してください）のための*最小要件。"
    },
    {
      "indent": 0,
      "text": "16. IANA Considerations",
      "section_title": true,
      "ja": "16. IANAの考慮事項"
    },
    {
      "indent": 0,
      "text": "16.1. CBOR Tag Assignment",
      "section_title": true,
      "ja": "16.1。 CBORタグの割り当て"
    },
    {
      "indent": 3,
      "text": "IANA has assigned the following tags from the \"CBOR Tags\" registry. The tags for COSE_Sign1, COSE_Encrypt0, and COSE_Mac0 were assigned in the 1 to 23 value range (one byte long when encoded). The tags for COSE_Sign, COSE_Encrypt, and COSE_Mac were assigned in the 24 to 255 value range (two bytes long when encoded).",
      "ja": "IANAは「CBORタグ」レジストリから以下のタグを割り当てています。 COSE_Sign1、COSE_Encrypt0、及びCOSE_Mac0のタグは、1から23までの値の範囲（符号化された1バイト長）に割り当てました。 （符号化されたときに2バイト長）COSE_Sign、COSE_Encrypt、及びCOSE_Macのタグは、24〜255の値の範囲内で割り当てました。"
    },
    {
      "indent": 3,
      "text": "The tags assigned are in Table 1.",
      "ja": "割り当てられたタグは、表1に示します。"
    },
    {
      "indent": 0,
      "text": "16.2. COSE Header Parameters Registry",
      "section_title": true,
      "ja": "16.2。 COSEヘッダーパラメータレジストリ"
    },
    {
      "indent": 3,
      "text": "IANA has created a new registry titled \"COSE Header Parameters\". The registry has been created to use the \"Expert Review Required\" registration procedure [RFC8126]. Guidelines for the experts are provided in Section 16.11. It should be noted that, in addition to the expert review, some portions of the registry require a specification, potentially a Standards Track RFC, be supplied as well.",
      "ja": "IANAは「COSEヘッダパラメータ」と題した新しいレジストリを作成しました。レジストリは「エキスパートレビューに必要な」登録手続き[RFC8126]を使用するために作成されています。専門家のためのガイドラインは、セクション16.11で提供されています。専門家の審査に加えて、レジストリのいくつかの部分は仕様、潜在的に標準化過程RFCは、同様に供給することが必要で、ことに留意すべきです。"
    },
    {
      "indent": 3,
      "text": "The columns of the registry are:",
      "ja": "レジストリの列は、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "Name: The name is present to make it easier to refer to and discuss the registration entry. The value is not used in the protocol. Names are to be unique in the table.",
      "ja": "名前：名前はそれが簡単に参照すると、登録エントリを議論するために作るために存在しています。値は、プロトコルで使用されていません。名前は、テーブルに一意であることがあります。"
    },
    {
      "indent": 3,
      "text": "Label: This is the value used for the label. The label can be either an integer or a string. Registration in the table is based on the value of the label requested. Integer values between 1 and 255 and strings of length 1 are designated as \"Standards Action\". Integer values from 256 to 65535 and strings of length 2 are designated as \"Specification Required\". Integer values of greater than 65535 and strings of length greater than 2 are designated as \"Expert Review\". Integer values in the range -1 to -65536 are \"delegated to the COSE Header Algorithm Parameters registry\". Integer values less than -65536 are marked as private use.",
      "ja": "レーベル：これは、ラベルに使用される値です。ラベルは、整数または文字列のいずれかになります。テーブルへの登録が要求されたラベルの値に基づいています。長さ1の1及び255と文字列の間の整数値は「標準化アクション」として指定されています。整数256から65535までの値と長さ2の文字列は、「仕様が必要」として指定されています。より大きな整数65535の値と2以上の長さの文字列は「エキスパートレビュー」として指定されています。範囲の整数値が-1 -65536に「COSEヘッダーアルゴリズムのパラメータのレジストリに委任」されています。以下-65536以上の整数値は、私的使用としてマークされています。"
    },
    {
      "indent": 3,
      "text": "Value Type: This contains the CBOR type for the value portion of the label.",
      "ja": "値の種類：これは、ラベルの値の部分についてCBORタイプが含まれています。"
    },
    {
      "indent": 3,
      "text": "Value Registry: This contains a pointer to the registry used to contain values where the set is limited.",
      "ja": "バリューレジストリ：これは、セットが限定されている値を格納するために使用レジストリへのポインタが含まれています。"
    },
    {
      "indent": 3,
      "text": "Description: This contains a brief description of the header field.",
      "ja": "説明：これはヘッダフィールドの簡単な説明が含まれています。"
    },
    {
      "indent": 3,
      "text": "Reference: This contains a pointer to the specification defining the header field (where public).",
      "ja": "参照：これは、ヘッダフィールド（パブリック）を規定仕様へのポインタを含みます。"
    },
    {
      "indent": 3,
      "text": "The initial contents of the registry can be found in Tables 2 and 27. All of the entries in the \"References\" column of this registry point to this document.",
      "ja": "レジストリの初期内容は、本文書に表2、表27に、このレジストリポイントの「参照」列のエントリのすべてを見つけることができます。"
    },
    {
      "indent": 3,
      "text": "Additionally, the label of 0 is to be marked as 'Reserved'.",
      "ja": "また、0のラベルには、「予約済み」としてマークされます。"
    },
    {
      "indent": 0,
      "text": "16.3. COSE Header Algorithm Parameters Registry",
      "section_title": true,
      "ja": "16.3。 COSEヘッダーアルゴリズムのパラメータのレジストリ"
    },
    {
      "indent": 3,
      "text": "IANA has created a new registry titled \"COSE Header Algorithm Parameters\". The registry uses the \"Expert Review Required\" registration procedure. Expert review guidelines are provided in Section 16.11.",
      "ja": "IANAは「COSEヘッダーアルゴリズムのパラメータ」と題した新しいレジストリを作成しました。レジストリは「エキスパートレビューに必要な」登録手順を使用しています。エキスパートレビューガイドラインは、セクション16.11で提供されています。"
    },
    {
      "indent": 3,
      "text": "The columns of the registry are:",
      "ja": "レジストリの列は、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "Name: The name is present to make it easier to refer to and discuss the registration entry. The value is not used in the protocol.",
      "ja": "名前：名前はそれが簡単に参照すると、登録エントリを議論するために作るために存在しています。値は、プロトコルで使用されていません。"
    },
    {
      "indent": 3,
      "text": "Algorithm: The algorithm(s) that this registry entry is used for. This value is taken from the \"COSE Algorithms\" registry. Multiple algorithms can be specified in this entry. For the table, the algorithm/label pair MUST be unique.",
      "ja": "アルゴリズム：このレジストリエントリが使用されることをアルゴリズム（複数可）。この値は、「COSEアルゴリズム」、レジストリから取得されます。複数のアルゴリズムは、このエントリで指定することができます。テーブルの場合は、アルゴリズム/ラベルのペアは一意でなければなりません。"
    },
    {
      "indent": 3,
      "text": "Label: This is the value used for the label. The label is an integer in the range of -1 to -65536.",
      "ja": "レーベル：これは、ラベルに使用される値です。ラベルは-65536 -1の範囲の整数です。"
    },
    {
      "indent": 3,
      "text": "Type: This contains the CBOR type for the value portion of the label.",
      "ja": "タイプ：これは、ラベルの値の部分についてCBORタイプが含まれています。"
    },
    {
      "indent": 3,
      "text": "Description: This contains a brief description of the header field.",
      "ja": "説明：これはヘッダフィールドの簡単な説明が含まれています。"
    },
    {
      "indent": 3,
      "text": "Reference: This contains a pointer to the specification defining the header field (where public).",
      "ja": "参照：これは、ヘッダフィールド（パブリック）を規定仕様へのポインタを含みます。"
    },
    {
      "indent": 3,
      "text": "The initial contents of the registry can be found in Tables 13, 14, and 19. All of the entries in the \"References\" column of this registry point to this document.",
      "ja": "この文書にレジストリの初期内容を表13、14に見出すことができ、このレジストリ点の「参照」列のエントリの19すべて。"
    },
    {
      "indent": 0,
      "text": "16.4. COSE Algorithms Registry",
      "section_title": true,
      "ja": "16.4。 THINGSアルゴリズムレジストリ"
    },
    {
      "indent": 3,
      "text": "IANA has created a new registry titled \"COSE Algorithms\". The registry has been created to use the \"Expert Review Required\" registration procedure. Guidelines for the experts are provided in",
      "ja": "IANAは「COSEアルゴリズム」というタイトルの新しいレジストリを作成しました。レジストリは「エキスパートレビューに必要な」登録手順を使用するために作成されています。専門家のためのガイドラインが提供されています"
    },
    {
      "indent": 3,
      "text": "Section 16.11. It should be noted that, in addition to the expert review, some portions of the registry require a specification, potentially a Standards Track RFC, be supplied as well.",
      "ja": "セクション16.11。専門家の審査に加えて、レジストリのいくつかの部分は仕様、潜在的に標準化過程RFCは、同様に供給することが必要で、ことに留意すべきです。"
    },
    {
      "indent": 3,
      "text": "The columns of the registry are:",
      "ja": "レジストリの列は、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "Name: A value that can be used to identify an algorithm in documents for easier comprehension. The name SHOULD be unique. However, the 'Value' field is what is used to identify the algorithm, not the 'name' field.",
      "ja": "名前：理解を容易にするために、文書内のアルゴリズムを識別するために使用される値。名前は一意でなければなりません。しかし、「値」フィールドは、アルゴリズムではなく、「名前」フィールドを識別するために使用されるものです。"
    },
    {
      "indent": 3,
      "text": "Value: The value to be used to identify this algorithm. Algorithm values MUST be unique. The value can be a positive integer, a negative integer, or a string. Integer values between -256 and 255 and strings of length 1 are designated as \"Standards Action\". Integer values from -65536 to 65535 and strings of length 2 are designated as \"Specification Required\". Integer values greater than 65535 and strings of length greater than 2 are designated as \"Expert Review\". Integer values less than -65536 are marked as private use.",
      "ja": "値：このアルゴリズムを識別するために使用される値。アルゴリズム値は一意である必要があります。値は正の整数、負の整数、または文字列とすることができます。 -256と255と長さ1の文字列の間の整数値は「標準化アクション」として指定されています。整数-65536から65535までの値と長さ2の文字列は、「仕様が必要」として指定されています。整数65535以上の値と2以上の長さの文字列は「エキスパートレビュー」として指定されています。以下-65536以上の整数値は、私的使用としてマークされています。"
    },
    {
      "indent": 3,
      "text": "Description: A short description of the algorithm.",
      "ja": "説明：アルゴリズムの簡単な説明。"
    },
    {
      "indent": 3,
      "text": "Reference: A document where the algorithm is defined (if publicly available).",
      "ja": "参考：アルゴリズムが定義されている文書（公に利用可能な場合）。"
    },
    {
      "indent": 3,
      "text": "Recommended: Does the IETF have a consensus recommendation to use the algorithm? The legal values are 'Yes', 'No', and 'Deprecated'.",
      "ja": "推奨：IETFは、アルゴリズムを使用するためのコンセンサス勧告を持っていますか？正当な値は「はい」、「いいえ」、および「推奨されていません」です。"
    },
    {
      "indent": 3,
      "text": "The initial contents of the registry can be found in Tables 5, 6, 7, 8, 9, 10, 11, 15, 16, 17, 18, and 20. All of the entries in the \"References\" column of this registry point to this document. All of the entries in the \"Recommended\" column are set to \"Yes\".",
      "ja": "レジストリの初期内容を表5、6、7、8、9、10、11、15、16、17、18、および20このレジストリ点の「参照」列のエントリのすべての中に見出すことができますこのドキュメントへ。 「推奨」列のエントリのすべてが「はい」に設定されています。"
    },
    {
      "indent": 3,
      "text": "Additionally, the label of 0 is to be marked as 'Reserved'.",
      "ja": "また、0のラベルには、「予約済み」としてマークされます。"
    },
    {
      "indent": 3,
      "text": "NOTE: The assignment of algorithm identifiers in this document was done so that positive numbers were used for the first layer objects (COSE_Sign, COSE_Sign1, COSE_Encrypt, COSE_Encrypt0, COSE_Mac, and COSE_Mac0). Negative numbers were used for second layer objects (COSE_Signature and COSE_recipient). Expert reviewers should consider this practice, but are not expected to be restricted by this precedent.",
      "ja": "注：正の数は、第一層のオブジェクトのために使用されたように、この文書に記載されているアルゴリズム識別子の割り当てが行われた（COSE_Sign、COSE_Sign1、COSE_Encrypt、COSE_Encrypt0、COSE_Mac、及びCOSE_Mac0）。負の数は、第二の層オブジェクト（COSE_SignatureとCOSE_recipient）のために使用しました。エキスパートレビューアは、この練習を考慮しなければならないが、この先例によって制限されることが予想されていません。"
    },
    {
      "indent": 0,
      "text": "16.5. COSE Key Common Parameters Registry",
      "section_title": true,
      "ja": "16.5。 COSEキー共通パラメータレジストリ"
    },
    {
      "indent": 3,
      "text": "IANA has created a new registry titled \"COSE Key Common Parameters\". The registry has been created to use the \"Expert Review Required\" registration procedure. Guidelines for the experts are provided in Section 16.11. It should be noted that, in addition to the expert review, some portions of the registry require a specification, potentially a Standards Track RFC, be supplied as well.",
      "ja": "IANAは「COSEキーの共通パラメータ」と題した新しいレジストリを作成しました。レジストリは「エキスパートレビューに必要な」登録手順を使用するために作成されています。専門家のためのガイドラインは、セクション16.11で提供されています。専門家の審査に加えて、レジストリのいくつかの部分は仕様、潜在的に標準化過程RFCは、同様に供給することが必要で、ことに留意すべきです。"
    },
    {
      "indent": 3,
      "text": "The columns of the registry are:",
      "ja": "レジストリの列は、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "Name: This is a descriptive name that enables easier reference to the item. It is not used in the encoding.",
      "ja": "名前：これはアイテムに簡単に参照を可能にし、わかりやすい名前です。これは、符号化に使用されていません。"
    },
    {
      "indent": 3,
      "text": "Label: The value to be used to identify this algorithm. Key map labels MUST be unique. The label can be a positive integer, a negative integer, or a string. Integer values between 0 and 255 and strings of length 1 are designated as \"Standards Action\". Integer values from 256 to 65535 and strings of length 2 are designated as \"Specification Required\". Integer values of greater than 65535 and strings of length greater than 2 are designated as \"Expert Review\". Integer values in the range -65536 to -1 are \"used for key parameters specific to a single algorithm delegated to the COSE Key Type Parameters registry\". Integer values less than -65536 are marked as private use.",
      "ja": "レーベル：このアルゴリズムを識別するために使用される値。キーマップのラベルは一意でなければなりません。ラベルには、正の整数、負の整数、または文字列を指定できます。長さ1の0と255と文字列の間の整数値は「標準化アクション」として指定されています。整数256から65535までの値と長さ2の文字列は、「仕様が必要」として指定されています。より大きな整数65535の値と2以上の長さの文字列は「エキスパートレビュー」として指定されています。範囲-65536内の整数値に-1「COSEキータイプのパラメータレジストリに委任単一のアルゴリズムに固有の重要なパラメータのために使用される」されています。以下-65536以上の整数値は、私的使用としてマークされています。"
    },
    {
      "indent": 3,
      "text": "CBOR Type: This field contains the CBOR type for the field.",
      "ja": "CBORタイプ：このフィールドは、フィールドのCBORタイプが含まれています。"
    },
    {
      "indent": 3,
      "text": "Value Registry: This field denotes the registry that values come from, if one exists.",
      "ja": "バリューレジストリ：このフィールドは1つが存在する場合は、から来れる値のレジストリを示しています。"
    },
    {
      "indent": 3,
      "text": "Description: This field contains a brief description for the field.",
      "ja": "説明：このフィールドは、フィールドの簡単な説明が含まれています。"
    },
    {
      "indent": 3,
      "text": "Reference: This contains a pointer to the public specification for the field if one exists.",
      "ja": "参考：これは、1つが存在する場合、フィールドのために公開された仕様へのポインタが含まれています。"
    },
    {
      "indent": 3,
      "text": "This registry has been initially populated by the values in Table 3. All of the entries in the \"References\" column of this registry point to this document.",
      "ja": "このレジストリは、最初にこのレジストリポイントの「参照」列のエントリのすべては、この文書に表3の値が移入されています。"
    },
    {
      "indent": 0,
      "text": "16.6. COSE Key Type Parameters Registry",
      "section_title": true,
      "ja": "16.6。 COSEキータイプのパラメータレジストリ"
    },
    {
      "indent": 3,
      "text": "IANA has created a new registry titled \"COSE Key Type Parameters\". The registry has been created to use the \"Expert Review Required\" registration procedure. Expert review guidelines are provided in Section 16.11.",
      "ja": "IANAは「COSEキータイプパラメータ」と題した新しいレジストリを作成しました。レジストリは「エキスパートレビューに必要な」登録手順を使用するために作成されています。エキスパートレビューガイドラインは、セクション16.11で提供されています。"
    },
    {
      "indent": 3,
      "text": "The columns of the table are:",
      "ja": "テーブルの列は以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "Key Type: This field contains a descriptive string of a key type. This should be a value that is in the \"COSE Key Common Parameters\" registry and is placed in the 'kty' field of a COSE Key structure.",
      "ja": "キータイプ：このフィールドには、キータイプの説明的な文字列が含まれています。これは、「COSEキー共通パラメータ」レジストリにあり、COSEキー構造の「KTY」フィールドに置かれた値でなければなりません。"
    },
    {
      "indent": 3,
      "text": "Name: This is a descriptive name that enables easier reference to the item. It is not used in the encoding.",
      "ja": "名前：これはアイテムに簡単に参照を可能にし、わかりやすい名前です。これは、符号化に使用されていません。"
    },
    {
      "indent": 3,
      "text": "Label: The label is to be unique for every value of key type. The range of values is from -65536 to -1. Labels are expected to be reused for different keys.",
      "ja": "レーベル：ラベルは、キータイプのすべての値に対して一意であることです。値の範囲は-65536から-1です。ラベルは異なるキーのために再利用されることが期待されます。"
    },
    {
      "indent": 3,
      "text": "CBOR Type: This field contains the CBOR type for the field.",
      "ja": "CBORタイプ：このフィールドは、フィールドのCBORタイプが含まれています。"
    },
    {
      "indent": 3,
      "text": "Description: This field contains a brief description for the field.",
      "ja": "説明：このフィールドは、フィールドの簡単な説明が含まれています。"
    },
    {
      "indent": 3,
      "text": "Reference: This contains a pointer to the public specification for the field if one exists.",
      "ja": "参考：これは、1つが存在する場合、フィールドのために公開された仕様へのポインタが含まれています。"
    },
    {
      "indent": 3,
      "text": "This registry has been initially populated by the values in Tables 23, 24, and 25. All of the entries in the \"References\" column of this registry point to this document.",
      "ja": "このレジストリは、最初に、この文書には、このレジストリ点の「参考文献」の欄のエントリのすべてを表23、24の値によって移入、及び25れています。"
    },
    {
      "indent": 0,
      "text": "16.7. COSE Key Types Registry",
      "section_title": true,
      "ja": "16.7。 COSEキータイプレジストリ"
    },
    {
      "indent": 3,
      "text": "IANA has created a new registry titled \"COSE Key Types\". The registry has been created to use the \"Expert Review Required\" registration procedure. Expert review guidelines are provided in Section 16.11.",
      "ja": "IANAは「COSEキータイプ」と題した新しいレジストリを作成しました。レジストリは「エキスパートレビューに必要な」登録手順を使用するために作成されています。エキスパートレビューガイドラインは、セクション16.11で提供されています。"
    },
    {
      "indent": 3,
      "text": "The columns of this table are:",
      "ja": "この表の列は、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "Name: This is a descriptive name that enables easier reference to the item. The name MUST be unique. It is not used in the encoding.",
      "ja": "名前：これはアイテムに簡単に参照を可能にし、わかりやすい名前です。名前は一意でなければなりません。これは、符号化に使用されていません。"
    },
    {
      "indent": 3,
      "text": "Value: This is the value used to identify the curve. These values MUST be unique. The value can be a positive integer, a negative integer, or a string.",
      "ja": "値：これは曲線を識別するために使用される値です。これらの値は一意である必要があります。値は正の整数、負の整数、または文字列とすることができます。"
    },
    {
      "indent": 3,
      "text": "Description: This field contains a brief description of the curve.",
      "ja": "説明：このフィールドには、曲線の簡単な説明が含まれています。"
    },
    {
      "indent": 3,
      "text": "References: This contains a pointer to the public specification for the curve if one exists.",
      "ja": "参考：これは、1つが存在する場合は、曲線のために公開された仕様へのポインタが含まれています。"
    },
    {
      "indent": 3,
      "text": "This registry has been initially populated by the values in Table 21. The specification column for all of these entries will be this document.",
      "ja": "このレジストリは、最初にこれらのエントリのすべての仕様の欄には、この文書になります。表21の値が移入されています。"
    },
    {
      "indent": 0,
      "text": "16.8. COSE Elliptic Curves Registry",
      "section_title": true,
      "ja": "16.8。 COSE楕円曲線レジストリ"
    },
    {
      "indent": 3,
      "text": "IANA has created a new registry titled \"COSE Elliptic Curves\". The registry has been created to use the \"Expert Review Required\" registration procedure. Guidelines for the experts are provided in Section 16.11. It should be noted that, in addition to the expert review, some portions of the registry require a specification, potentially a Standards Track RFC, be supplied as well.",
      "ja": "IANAは「COSE楕円曲線」というタイトルの新しいレジストリを作成しました。レジストリは「エキスパートレビューに必要な」登録手順を使用するために作成されています。専門家のためのガイドラインは、セクション16.11で提供されています。専門家の審査に加えて、レジストリのいくつかの部分は仕様、潜在的に標準化過程RFCは、同様に供給することが必要で、ことに留意すべきです。"
    },
    {
      "indent": 3,
      "text": "The columns of the table are:",
      "ja": "テーブルの列は以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "Name: This is a descriptive name that enables easier reference to the item. It is not used in the encoding.",
      "ja": "名前：これはアイテムに簡単に参照を可能にし、わかりやすい名前です。これは、符号化に使用されていません。"
    },
    {
      "indent": 3,
      "text": "Value: This is the value used to identify the curve. These values MUST be unique. The integer values from -256 to 255 are designated as \"Standards Action\". The integer values from 256 to 65535 and -65536 to -257 are designated as \"Specification Required\". Integer values over 65535 are designated as \"Expert Review\". Integer values less than -65536 are marked as private use.",
      "ja": "値：これは曲線を識別するために使用される値です。これらの値は一意である必要があります。 -256から255までの整数値は「標準化アクション」として指定されています。 256から65535と-65536に-257までの整数値は「仕様が必要」として指定されています。 65535以上の整数値は「エキスパートレビュー」として指定されています。以下-65536以上の整数値は、私的使用としてマークされています。"
    },
    {
      "indent": 3,
      "text": "Key Type: This designates the key type(s) that can be used with this curve.",
      "ja": "キータイプ：これは、この曲線で使用できるキーのタイプ（複数可）を指定します。"
    },
    {
      "indent": 3,
      "text": "Description: This field contains a brief description of the curve.",
      "ja": "説明：このフィールドには、曲線の簡単な説明が含まれています。"
    },
    {
      "indent": 3,
      "text": "Reference: This contains a pointer to the public specification for the curve if one exists.",
      "ja": "参考：これは、1つが存在する場合は、曲線のために公開された仕様へのポインタが含まれています。"
    },
    {
      "indent": 3,
      "text": "Recommended: Does the IETF have a consensus recommendation to use the algorithm? The legal values are 'Yes', 'No', and 'Deprecated'.",
      "ja": "推奨：IETFは、アルゴリズムを使用するためのコンセンサス勧告を持っていますか？正当な値は「はい」、「いいえ」、および「推奨されていません」です。"
    },
    {
      "indent": 3,
      "text": "This registry has been initially populated by the values in Table 22. All of the entries in the \"References\" column of this registry point to this document. All of the entries in the \"Recommended\" column are set to \"Yes\".",
      "ja": "このレジストリは、最初にこのレジストリポイントの「参照」列のエントリのすべては、この文書に表22の値が移入されています。 「推奨」列のエントリのすべてが「はい」に設定されています。"
    },
    {
      "indent": 0,
      "text": "16.9. Media Type Registrations",
      "section_title": true,
      "ja": "16.9。メディアタイプ登録"
    },
    {
      "indent": 0,
      "text": "16.9.1. COSE Security Message",
      "section_title": true,
      "ja": "16.9.1。 THINGSセキュリティメッセージ"
    },
    {
      "indent": 3,
      "text": "This section registers the 'application/cose' media type in the \"Media Types\" registry. These media types are used to indicate that the content is a COSE message.",
      "ja": "このセクションでは、「メディアの種類」レジストリの「アプリケーション/ COSEのメディアタイプを登録します。これらのメディアタイプは、コンテンツがCOSEメッセージであることを示すために使用されています。"
    },
    {
      "indent": 6,
      "text": "Type name: application",
      "ja": "型名：アプリケーション"
    },
    {
      "indent": 6,
      "text": "Subtype name: cose",
      "ja": "サブタイプ名：物事"
    },
    {
      "indent": 6,
      "text": "Required parameters: N/A",
      "ja": "必須パラメータ：N / A"
    },
    {
      "indent": 6,
      "text": "Optional parameters: cose-type",
      "ja": "オプションのパラメータ：COSE型"
    },
    {
      "indent": 6,
      "text": "Encoding considerations: binary",
      "ja": "エンコードの考慮事項：バイナリ"
    },
    {
      "indent": 6,
      "text": "Security considerations: See the Security Considerations section of RFC 8152.",
      "ja": "セキュリティに関する考慮事項：RFC 8152のセキュリティの考慮事項のセクションを参照してください。"
    },
    {
      "indent": 6,
      "text": "Interoperability considerations: N/A",
      "ja": "相互運用性に関する注意事項：N / A"
    },
    {
      "indent": 6,
      "text": "Published specification: RFC 8152",
      "ja": "公開された仕様：RFC 8152"
    },
    {
      "indent": 6,
      "text": "Applications that use this media type: IoT applications sending security content over HTTP(S) transports.",
      "ja": "IoTアプリケーションは、HTTP（S）上のセキュリティコンテンツを送信するトランスポート：このメディアタイプを使用するアプリケーション。"
    },
    {
      "indent": 6,
      "text": "Fragment identifier considerations: N/A",
      "ja": "フラグメント識別子の考慮事項：N / A"
    },
    {
      "indent": 6,
      "text": "Additional information:",
      "ja": "追加情報："
    },
    {
      "indent": 6,
      "text": "* Deprecated alias names for this type: N/A",
      "ja": "このタイプのために推奨されていません*別名：N / A"
    },
    {
      "indent": 6,
      "text": "* Magic number(s): N/A",
      "ja": "*マジックナンバー（S）：N / A"
    },
    {
      "indent": 6,
      "text": "* File extension(s): cbor",
      "ja": "*ファイルの拡張子（S）：cbor"
    },
    {
      "indent": 6,
      "text": "* Macintosh file type code(s): N/A",
      "ja": "* Macintoshファイルタイプコード（S）：N / A"
    },
    {
      "indent": 6,
      "text": "Person & email address to contact for further information: iesg@ietf.org",
      "ja": "人とEメールアドレスは、詳細についての問い合わせ先：iesg@ietf.org"
    },
    {
      "indent": 6,
      "text": "Intended usage: COMMON",
      "ja": "意図している用法：COMMON"
    },
    {
      "indent": 6,
      "text": "Restrictions on usage: N/A",
      "ja": "使用に関する制限事項：N / A"
    },
    {
      "indent": 6,
      "text": "Author: Jim Schaad, ietf@augustcellars.com",
      "ja": "著者：ジムSchaad、ietf@augustcellars.com"
    },
    {
      "indent": 6,
      "text": "Change Controller: IESG",
      "ja": "変更コントローラ：IESG"
    },
    {
      "indent": 6,
      "text": "Provisional registration? No",
      "ja": "仮登録？番号"
    },
    {
      "indent": 0,
      "text": "16.9.2. COSE Key Media Type",
      "section_title": true,
      "ja": "16.9.2。 THINGS主要メディアタイプ"
    },
    {
      "indent": 3,
      "text": "This section registers the 'application/cose-key' and 'application/ cose-key-set' media types in the \"Media Types\" registry. These media types are used to indicate, respectively, that content is a COSE_Key or COSE_KeySet object.",
      "ja": "このセクションでは、「メディアの種類」レジストリの「アプリケーション/ COSEキー」と「アプリケーション/ COSE-キーセットのメディアタイプを登録します。これらのメディアタイプを示すために使用され、それぞれ、そのコンテンツはCOSE_Key又はCOSE_KeySetオブジェクトです。"
    },
    {
      "indent": 3,
      "text": "The template for registering 'application/cose-key' is:",
      "ja": "「アプリケーション/ COSE-key」を登録するためのテンプレートは次のとおりです。"
    },
    {
      "indent": 6,
      "text": "Type name: application",
      "ja": "型名：アプリケーション"
    },
    {
      "indent": 6,
      "text": "Subtype name: cose-key",
      "ja": "サブタイプ名：COSEキー"
    },
    {
      "indent": 6,
      "text": "Required parameters: N/A",
      "ja": "必須パラメータ：N / A"
    },
    {
      "indent": 6,
      "text": "Optional parameters: N/A",
      "ja": "オプションのパラメータ：N / A"
    },
    {
      "indent": 6,
      "text": "Encoding considerations: binary",
      "ja": "エンコードの考慮事項：バイナリ"
    },
    {
      "indent": 6,
      "text": "Security considerations: See the Security Considerations section of RFC 8152.",
      "ja": "セキュリティに関する考慮事項：RFC 8152のセキュリティの考慮事項のセクションを参照してください。"
    },
    {
      "indent": 6,
      "text": "Interoperability considerations: N/A",
      "ja": "相互運用性に関する注意事項：N / A"
    },
    {
      "indent": 6,
      "text": "Published specification: RFC 8152",
      "ja": "公開された仕様：RFC 8152"
    },
    {
      "indent": 6,
      "text": "Applications that use this media type: Distribution of COSE based keys for IoT applications.",
      "ja": "IoTアプリケーションのためのCOSEベースの鍵の配布：このメディアタイプを使用するアプリケーション。"
    },
    {
      "indent": 6,
      "text": "Fragment identifier considerations: N/A",
      "ja": "フラグメント識別子の考慮事項：N / A"
    },
    {
      "indent": 6,
      "text": "Additional information:",
      "ja": "追加情報："
    },
    {
      "indent": 6,
      "text": "* Deprecated alias names for this type: N/A",
      "ja": "このタイプのために推奨されていません*別名：N / A"
    },
    {
      "indent": 6,
      "text": "* Magic number(s): N/A",
      "ja": "*マジックナンバー（S）：N / A"
    },
    {
      "indent": 6,
      "text": "* File extension(s): cbor",
      "ja": "*ファイルの拡張子（S）：cbor"
    },
    {
      "indent": 6,
      "text": "* Macintosh file type code(s): N/A",
      "ja": "* Macintoshファイルタイプコード（S）：N / A"
    },
    {
      "indent": 6,
      "text": "Person & email address to contact for further information: iesg@ietf.org",
      "ja": "人とEメールアドレスは、詳細についての問い合わせ先：iesg@ietf.org"
    },
    {
      "indent": 6,
      "text": "Intended usage: COMMON",
      "ja": "意図している用法：COMMON"
    },
    {
      "indent": 6,
      "text": "Restrictions on usage: N/A",
      "ja": "使用に関する制限事項：N / A"
    },
    {
      "indent": 6,
      "text": "Author: Jim Schaad, ietf@augustcellars.com",
      "ja": "著者：ジムSchaad、ietf@augustcellars.com"
    },
    {
      "indent": 6,
      "text": "Change Controller: IESG",
      "ja": "変更コントローラ：IESG"
    },
    {
      "indent": 6,
      "text": "Provisional registration? No",
      "ja": "仮登録？番号"
    },
    {
      "indent": 3,
      "text": "The template for registering 'application/cose-key-set' is:",
      "ja": "「アプリケーション/ COSEキーセット」を登録するためのテンプレートは次のとおりです。"
    },
    {
      "indent": 6,
      "text": "Type name: application",
      "ja": "型名：アプリケーション"
    },
    {
      "indent": 6,
      "text": "Subtype name: cose-key-set",
      "ja": "サブタイプ名：COSEキーセット"
    },
    {
      "indent": 6,
      "text": "Required parameters: N/A",
      "ja": "必須パラメータ：N / A"
    },
    {
      "indent": 6,
      "text": "Optional parameters: N/A",
      "ja": "オプションのパラメータ：N / A"
    },
    {
      "indent": 6,
      "text": "Encoding considerations: binary",
      "ja": "エンコードの考慮事項：バイナリ"
    },
    {
      "indent": 6,
      "text": "Security considerations: See the Security Considerations section of RFC 8152.",
      "ja": "セキュリティに関する考慮事項：RFC 8152のセキュリティの考慮事項のセクションを参照してください。"
    },
    {
      "indent": 6,
      "text": "Interoperability considerations: N/A",
      "ja": "相互運用性に関する注意事項：N / A"
    },
    {
      "indent": 6,
      "text": "Published specification: RFC 8152",
      "ja": "公開された仕様：RFC 8152"
    },
    {
      "indent": 6,
      "text": "Applications that use this media type: Distribution of COSE based keys for IoT applications.",
      "ja": "IoTアプリケーションのためのCOSEベースの鍵の配布：このメディアタイプを使用するアプリケーション。"
    },
    {
      "indent": 6,
      "text": "Fragment identifier considerations: N/A",
      "ja": "フラグメント識別子の考慮事項：N / A"
    },
    {
      "indent": 6,
      "text": "Additional information:",
      "ja": "追加情報："
    },
    {
      "indent": 6,
      "text": "* Deprecated alias names for this type: N/A",
      "ja": "このタイプのために推奨されていません*別名：N / A"
    },
    {
      "indent": 6,
      "text": "* Magic number(s): N/A",
      "ja": "*マジックナンバー（S）：N / A"
    },
    {
      "indent": 6,
      "text": "* File extension(s): cbor",
      "ja": "*ファイルの拡張子（S）：cbor"
    },
    {
      "indent": 6,
      "text": "* Macintosh file type code(s): N/A",
      "ja": "* Macintoshファイルタイプコード（S）：N / A"
    },
    {
      "indent": 6,
      "text": "Person & email address to contact for further information: iesg@ietf.org",
      "ja": "人とEメールアドレスは、詳細についての問い合わせ先：iesg@ietf.org"
    },
    {
      "indent": 6,
      "text": "Intended usage: COMMON",
      "ja": "意図している用法：COMMON"
    },
    {
      "indent": 6,
      "text": "Restrictions on usage: N/A",
      "ja": "使用に関する制限事項：N / A"
    },
    {
      "indent": 6,
      "text": "Author: Jim Schaad, ietf@augustcellars.com",
      "ja": "著者：ジムSchaad、ietf@augustcellars.com"
    },
    {
      "indent": 6,
      "text": "Change Controller: IESG",
      "ja": "変更コントローラ：IESG"
    },
    {
      "indent": 6,
      "text": "Provisional registration? No",
      "ja": "仮登録？番号"
    },
    {
      "indent": 0,
      "text": "16.10. CoAP Content-Formats Registry",
      "section_title": true,
      "ja": "16.10。 CoAPのコンテンツ形式レジストリ"
    },
    {
      "indent": 3,
      "text": "IANA has added the following entries to the \"CoAP Content-Formats\" registry.",
      "ja": "IANAは、「CoAPのコンテンツフォーマット」レジストリに次のエントリを追加しました。"
    },
    {
      "indent": 3,
      "text": "+--------------------------------------+----------+-----+-----------+\n| Media Type                           | Encoding | ID  | Reference |\n+--------------------------------------+----------+-----+-----------+\n| application/cose; cose-type=\"cose-   |          | 98  | [RFC8152] |\n| sign\"                                |          |     |           |\n| application/cose; cose-type=\"cose-   |          | 18  | [RFC8152] |\n| sign1\"                               |          |     |           |\n| application/cose; cose-type=\"cose-   |          | 96  | [RFC8152] |\n| encrypt\"                             |          |     |           |\n| application/cose; cose-type=\"cose-   |          | 16  | [RFC8152] |\n| encrypt0\"                            |          |     |           |\n| application/cose; cose-type=\"cose-   |          | 97  | [RFC8152] |\n| mac\"                                 |          |     |           |\n| application/cose; cose-type=\"cose-   |          | 17  | [RFC8152] |\n| mac0\"                                |          |     |           |\n| application/cose-key                 |          | 101 | [RFC8152] |\n| application/cose-key-set             |          | 102 | [RFC8152] |\n+--------------------------------------+----------+-----+-----------+",
      "raw": true
    },
    {
      "indent": 18,
      "text": "Table 26: CoAP Content-Formats for COSE",
      "ja": "表26：COSEのためCoAPのコンテンツフォーマット"
    },
    {
      "indent": 0,
      "text": "16.11. Expert Review Instructions",
      "section_title": true,
      "ja": "16.11。専門家レビュー手順"
    },
    {
      "indent": 3,
      "text": "All of the IANA registries established in this document are defined as expert review. This section gives some general guidelines for what the experts should be looking for, but they are being designated as experts for a reason, so they should be given substantial latitude.",
      "ja": "この文書で確立IANAレジストリのすべてが専門家レビューのように定義されています。このセクションでは、専門家が探してすべきかについて、いくつかの一般的なガイドラインを提供しますが、彼らは理由のための専門家として指定されているので、彼らはかなりの緯度を与えられるべきです。"
    },
    {
      "indent": 3,
      "text": "Expert reviewers should take into consideration the following points:",
      "ja": "以下の点を考慮する必要がある専門家のレビュー："
    },
    {
      "indent": 3,
      "text": "o Point squatting should be discouraged. Reviewers are encouraged to get sufficient information for registration requests to ensure that the usage is not going to duplicate one that is already registered, and that the point is likely to be used in deployments. The zones tagged as private use are intended for testing purposes and closed environments; code points in other ranges should not be assigned for testing.",
      "ja": "Oポイントのしゃがんは落胆する必要があります。査読は、使用が既に登録されているものを複製しよう、とポイントが展開で使用される可能性があるとされていないことを確実にするために、登録要求のための十分な情報を入手することをお勧めします。私的使用としてタグ付けされたゾーンはテスト目的と閉じられた環境のために意図されています。他の範囲のコードポイントは、試験のために割り当てられるべきではありません。"
    },
    {
      "indent": 3,
      "text": "o Specifications are required for the standards track range of point assignment. Specifications should exist for specification required ranges, but early assignment before a specification is available is considered to be permissible. Specifications are needed for the first-come, first-serve range if they are expected to be used outside of closed environments in an interoperable way. When specifications are not provided, the description provided needs to have sufficient information to identify what the point is being used for.",
      "ja": "O仕様は、ポイント付与の基準トラックの範囲のために必要とされます。仕様は、仕様に必要な範囲のために存在している必要がありますが、仕様が利用可能になる前に早期の割り当ては許されると考えられています。それらが相互運用可能な方法で閉じられた環境の外で使用されることが予想されている場合の仕様は、先着、最初のサーブの範囲のために必要とされます。仕様が用意されていない場合は、提供された記述はポイントがために使用されているものを識別するのに十分な情報を持っている必要があります。"
    },
    {
      "indent": 3,
      "text": "o Experts should take into account the expected usage of fields when approving point assignment. The fact that there is a range for standards track documents does not mean that a standards track document cannot have points assigned outside of that range. The length of the encoded value should be weighed against how many code points of that length are left, the size of device it will be used on, and the number of code points left that encode to that size.",
      "ja": "ポイントの割り当てを承認する際にO専門家は、アカウントにフィールドの予想使用率を取る必要があります。標準トラック文書の範囲が存在するという事実は、標準トラック文書がその範囲の外に割り当てられたポイントを持つことができないという意味ではありません。符号化された値の長さは、その長さの多くのコードポイントが残っている方法と比較検討されなければならない、それが使用される装置の大きさ、およびコード・ポイントの数は、その大きさにそのコードを残しました。"
    },
    {
      "indent": 3,
      "text": "o When algorithms are registered, vanity registrations should be discouraged. One way to do this is to require registrations to provide additional documentation on security analysis of the algorithm. Another thing that should be considered is requesting an opinion on the algorithm from the Crypto Forum Research Group (CFRG). Algorithms that do not meet the security requirements of the community and the messages structures should not be registered.",
      "ja": "アルゴリズムが登録されている場合は、O、虚栄心の登録は落胆する必要があります。これを行う1つの方法は、アルゴリズムのセキュリティ分析に関するその他の資料を提供するために、登録を必要とすることです。考慮すべきもう一つは、暗号フォーラム研究グループ（CFRG）からのアルゴリズムについての意見を要求しています。コミュニティのセキュリティ要件とメッセージ構造を満たしていないアルゴリズムは、登録すべきではありません。"
    },
    {
      "indent": 0,
      "text": "17. Security Considerations",
      "section_title": true,
      "ja": "17.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "There are a number of security considerations that need to be taken into account by implementers of this specification. The security considerations that are specific to an individual algorithm are placed next to the description of the algorithm. While some considerations have been highlighted here, additional considerations may be found in the documents listed in the references.",
      "ja": "この仕様の実装者によって考慮される必要があるセキュリティ上の考慮事項がいくつかあります。個々のアルゴリズムに固有のセキュリティ問題は、アルゴリズムの記述に隣接して配置されています。いくつかの考慮事項はここに強調されてきたが、追加の考慮事項は、参考文献に記載された文書に見ることができます。"
    },
    {
      "indent": 3,
      "text": "Implementations need to protect the private key material for any individuals. There are some cases in this document that need to be highlighted on this issue.",
      "ja": "実装は任意の個人のために秘密鍵の材料を保護する必要があります。この問題上で強調表示される必要があり、この文書に記載されている場合があります。"
    },
    {
      "indent": 3,
      "text": "o Using the same key for two different algorithms can leak information about the key. It is therefore recommended that keys be restricted to a single algorithm.",
      "ja": "鍵に関する情報を漏洩できる2つの異なるアルゴリズムのために同じキーを使用して、O。したがって、キーが単一のアルゴリズムに制限することをお勧めします。"
    },
    {
      "indent": 3,
      "text": "o Use of 'direct' as a recipient algorithm combined with a second recipient algorithm exposes the direct key to the second recipient.",
      "ja": "第二の受信者のアルゴリズムと組み合わせるレシピエントアルゴリズムとして「直接」のOの使用は、第二受信者に直接キーを公開します。"
    },
    {
      "indent": 3,
      "text": "o Several of the algorithms in this document have limits on the number of times that a key can be used without leaking information about the key.",
      "ja": "Oこの文書に記載されているアルゴリズムのいくつかは、キーは、キーに関する情報を漏洩することなく使用できる回数に制限があります。"
    },
    {
      "indent": 3,
      "text": "The use of ECDH and direct plus KDF (with no key wrap) will not directly lead to the private key being leaked; the one way function of the KDF will prevent that. There is, however, a different issue that needs to be addressed. Having two recipients requires that the CEK be shared between two recipients. The second recipient therefore has a CEK that was derived from material that can be used for the weak proof of origin. The second recipient could create a message using the same CEK and send it to the first recipient; the first recipient would, for either static-static ECDH or direct plus KDF, make an assumption that the CEK could be used for proof of origin even though it is from the wrong entity. If the key wrap step is added, then no proof of origin is implied and this is not an issue.",
      "ja": "ECDHと（キーなしラップで）直接プラスKDFの使用は、直接、秘密鍵が漏洩されることにつながることはありません。 KDFの1つの方向関数はそれを防ぐことができます。対処する必要がある別の問題は、しかし、があります。 2人の受信者を持つことは、CEKは、2人の受信者間で共有されている必要があります。第二の受信者は、従って、原点の弱い証拠のために使用することができる材料から誘導されたCEKを有しています。第二の受信者は同じCEKを使用してメッセージを作成し、最初の受信者に送ることができます。最初の受信者は、静的な静的なECDHまたは直接のプラスKDFのいずれかのために、CEKは、それが間違っエンティティからであっても、原点の証明のために使用することができることを前提になるだろう。キーラップステップが追加された場合、起源の証拠が暗示されていないと、これは問題ではありません。"
    },
    {
      "indent": 3,
      "text": "Although it has been mentioned before, the use of a single key for multiple algorithms has been demonstrated in some cases to leak information about a key, provide the opportunity for attackers to forge integrity tags, or gain information about encrypted content. Binding a key to a single algorithm prevents these problems. Key creators and key consumers are strongly encouraged not only to create new keys for each different algorithm, but to include that selection of algorithm in any distribution of key material and strictly enforce the matching of algorithms in the key structure to algorithms in the message structure. In addition to checking that algorithms are correct, the key form needs to be checked as well. Do not use an 'EC2' key where an 'OKP' key is expected.",
      "ja": "それは前述したが、複数のアルゴリズムのための単一のキーを使用することは、重要な情報を漏洩し、攻撃者が整合性タグを偽造、または暗号化されたコンテンツについての情報を獲得するための機会を提供するために、いくつかのケースで実証されています。単一のアルゴリズムの鍵をバインドすると、これらの問題を防ぐことができます。主なクリエイターとキー消費者が強く、それぞれ異なるアルゴリズムのための新しいキーを作成するには、しかし、主要材料の任意の分布におけるアルゴリズムの選択を含め、厳密にメッセージ構造にアルゴリズムのキー構造におけるアルゴリズムのマッチングを強制するだけでなく、奨励されています。アルゴリズムが正しいことを確認することに加えて、キーの形も同様にチェックする必要があります。 「OKP」キーが期待されている「EC2」キーを使用しないでください。"
    },
    {
      "indent": 3,
      "text": "Before using a key for transmission, or before acting on information received, a trust decision on a key needs to be made. Is the data or action something that the entity associated with the key has a right to see or a right to request? A number of factors are associated with this trust decision. Some of the ones that are highlighted here are:",
      "ja": "送信用のキーを使用する前に、または受信した情報に作用する前に、キーの信頼決定がなされる必要があります。データまたはアクションは、キーに関連付けられたエンティティが見る権利または要求する権利を持っているものですか？多くの要因は、この信頼の決定に関連しています。ここで強調表示されているもののいくつかは以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "o What are the permissions associated with the key owner?",
      "ja": "O鍵の所有者に関連付けられている権限は何ですか？"
    },
    {
      "indent": 3,
      "text": "o Is the cryptographic algorithm acceptable in the current context?",
      "ja": "O暗号アルゴリズムは、現在のコンテキストで許容できますか？"
    },
    {
      "indent": 3,
      "text": "o Have the restrictions associated with the key, such as algorithm or freshness, been checked and are they correct?",
      "ja": "Oこのようなアルゴリズムや新鮮としてキーに関連付けられた制限を、持って、チェックされて、彼らは正しいですか？"
    },
    {
      "indent": 3,
      "text": "o Is the request something that is reasonable, given the current state of the application?",
      "ja": "oはアプリケーションの現在の状態を考えると、妥当である要求何かか？"
    },
    {
      "indent": 3,
      "text": "o Have any security considerations that are part of the message been enforced (as specified by the application or 'crit' parameter)?",
      "ja": "O（アプリケーションまたは「クリティカル」パラメータで指定）施行されたメッセージの一部である任意のセキュリティ上の考慮事項をお持ちですか？"
    },
    {
      "indent": 3,
      "text": "There are a large number of algorithms presented in this document that use nonce values. For all of the nonces defined in this document, there is some type of restriction on the nonce being a unique value either for a key or for some other conditions. In all of these cases, there is no known requirement on the nonce being both unique and unpredictable; under these circumstances, it's reasonable to use a counter for creation of the nonce. In cases where one wants the pattern of the nonce to be unpredictable as well as unique, one can use a key created for that purpose and encrypt the counter to produce the nonce value.",
      "ja": "ナンスの値を使用し、この文書で提示したアルゴリズムが多数あります。この文書で定義されたノンスの全てについて、キーのまたはいくつかの他の条件のいずれかのためのユニークな値であるノンスの制限のいくつかのタイプがあります。これらの場合の全てにおいて、固有の予測不可能な両方であるノンスには知られている必要はありません。このような状況の下で、それはナンスを作成するためのカウンタを使用するのが妥当です。一方はノンスのパターンが予測不能ならびに一意であることを望む場合には、一方がその目的のために作成された鍵を使用し、ノンス値を生成するカウンタを暗号化することができます。"
    },
    {
      "indent": 3,
      "text": "One area that has been starting to get exposure is doing traffic analysis of encrypted messages based on the length of the message. This specification does not provide for a uniform method of providing padding as part of the message structure. An observer can distinguish between two different strings (for example, 'YES' and 'NO') based on the length for all of the content encryption algorithms that are defined in this document. This means that it is up to the applications to document how content padding is to be done in order to prevent or discourage such analysis. (For example, the strings could be defined as 'YES' and 'NO '.)",
      "ja": "露出を得るために開始された一つの領域は、メッセージの長さに基づいて暗号化されたメッセージのトラフィック分析を行っています。この仕様は、メッセージ構造の一部としてパディングを提供する均一な方法を提供しません。観察者は、この文書で定義されているコンテンツの暗号化アルゴリズムの全てのための長さに基づいて、2つの異なる文字列（例えば、「YES」と「NO」）とを区別することができます。これは、コンテンツのパディングは、このような分析を防止または阻止するために行う必要がある方法を文書化するアプリケーション次第であることを意味します。 （例えば、文字列が「YES」と「NO」と定義することができます。）"
    },
    {
      "indent": 0,
      "text": "18. References",
      "section_title": true,
      "ja": "18.参考文献"
    },
    {
      "indent": 0,
      "text": "18.1. Normative References",
      "section_title": true,
      "ja": "18.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[AES-GCM] National Institute of Standards and Technology, \"Recommendation for Block Cipher Modes of Operation: Galois/Counter Mode (GCM) and GMAC\", NIST Special Publication 800-38D, DOI 10.6028/NIST.SP.800-38D, November 2007, <https://csrc.nist.gov/publications/nistpubs/800- 38D/SP-800-38D.pdf>.",
      "ja": "[AES-GCM]米国国立標準技術研究所、 \"オペレーションのブロック暗号モードのための推奨事項：ガロア/カウンタモード（GCM）とGMAC\"、は、NIST Special Publication 800-38D、DOI 10.6028 / NIST.SP.800-38D、 2007年11月、<https://csrc.nist.gov/publications/nistpubs/800- 38D / SP-800-38D.pdf>。"
    },
    {
      "indent": 3,
      "text": "[COAP.Formats] IANA, \"Constrained RESTful Environments (CoRE) Parameters\", <http://www.iana.org/assignments/core-parameters/>.",
      "ja": "【COAP.Formats] IANA、 \"制約RESTfulな環境（コア）パラメータ\"、<http://www.iana.org/assignments/core-parameters/>。"
    },
    {
      "indent": 3,
      "text": "[DSS] National Institute of Standards and Technology, \"Digital Signature Standard (DSS)\", FIPS PUB 186-4, DOI 10.6028/NIST.FIPS.186-4, July 2013, <http://nvlpubs.nist.gov/nistpubs/FIPS/",
      "ja": "[DSS]米国国立標準技術研究所、 \"デジタル署名標準（DSS）\"、FIPS PUBの186から4、DOI 10.6028 / NIST.FIPS.186-4、2013年7月、<http://nvlpubs.nist.gov/ nistpubs / FIPS /"
    },
    {
      "indent": 14,
      "text": "NIST.FIPS.186-4.pdf>.",
      "ja": "NIST.FIPS.186-4.pdf>。"
    },
    {
      "indent": 3,
      "text": "[MAC] National Institute of Standards and Technology, \"Computer Data Authentication\", FIPS PUB 113, May 1985, <http://csrc.nist.gov/publications/fips/fips113/ fips113.html>.",
      "ja": "[MAC]米国国立標準技術研究所、 \"コンピュータのデータ認証\"、FIPS PUBの113、1985年5月、<http://csrc.nist.gov/publications/fips/fips113/ fips113.html>。"
    },
    {
      "indent": 3,
      "text": "[RFC2104] Krawczyk, H., Bellare, M., and R. Canetti, \"HMAC: Keyed-Hashing for Message Authentication\", RFC 2104, DOI 10.17487/RFC2104, February 1997, <http://www.rfc-editor.org/info/rfc2104>.",
      "ja": "[RFC2104] Krawczyk、H.、ベラー、M.、およびR.カネッティ、 \"HMAC：メッセージ認証のための鍵付きハッシュ化\"、RFC 2104、DOI 10.17487 / RFC2104、1997年2月、<HTTP：//www.rfc-editor .ORG /情報/ RFC2104>。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <http://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<http://www.rfc-editor.org/info/ RFC2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC3394] Schaad, J. and R. Housley, \"Advanced Encryption Standard (AES) Key Wrap Algorithm\", RFC 3394, DOI 10.17487/RFC3394, September 2002, <http://www.rfc-editor.org/info/rfc3394>.",
      "ja": "[RFC3394] Schaad、J.とR. Housley氏、 \"高度暗号化標準（AES）キーラップアルゴリズム\"、RFC 3394、DOI 10.17487 / RFC3394、2002年9月、<http://www.rfc-editor.org/info/ RFC3394>。"
    },
    {
      "indent": 3,
      "text": "[RFC3610] Whiting, D., Housley, R., and N. Ferguson, \"Counter with CBC-MAC (CCM)\", RFC 3610, DOI 10.17487/RFC3610, September 2003, <http://www.rfc-editor.org/info/rfc3610>.",
      "ja": "[RFC3610]ホワイティング、D.、Housley氏、R.、およびN.ファーガソン、 \"CBC-MAC（CCM）とカウンター\"、RFC 3610、DOI 10.17487 / RFC3610、2003年9月、<のhttp：//www.rfc-editor .ORG /情報/ rfc3610>。"
    },
    {
      "indent": 3,
      "text": "[RFC5869] Krawczyk, H. and P. Eronen, \"HMAC-based Extract-and-Expand Key Derivation Function (HKDF)\", RFC 5869, DOI 10.17487/RFC5869, May 2010, <http://www.rfc-editor.org/info/rfc5869>.",
      "ja": "[RFC5869] Krawczyk、H.、およびP. Eronen、 \"HMACベースの抽出物と、拡大鍵導出関数（HKDF）\"、RFC 5869、DOI 10.17487 / RFC5869、2010年5月、<のhttp：//www.rfc-editor .ORG /情報/ rfc5869>。"
    },
    {
      "indent": 3,
      "text": "[RFC6090] McGrew, D., Igoe, K., and M. Salter, \"Fundamental Elliptic Curve Cryptography Algorithms\", RFC 6090, DOI 10.17487/RFC6090, February 2011, <http://www.rfc-editor.org/info/rfc6090>.",
      "ja": "[RFC6090]マグリュー、D.、Igoe、K.、およびM.ソルター、 \"基礎楕円曲線暗号アルゴリズム\"、RFC 6090、DOI 10.17487 / RFC6090、2011年2月、<http://www.rfc-editor.org/情報/ rfc6090>。"
    },
    {
      "indent": 3,
      "text": "[RFC6979] Pornin, T., \"Deterministic Usage of the Digital Signature Algorithm (DSA) and Elliptic Curve Digital Signature Algorithm (ECDSA)\", RFC 6979, DOI 10.17487/RFC6979, August 2013, <http://www.rfc-editor.org/info/rfc6979>.",
      "ja": "[RFC6979] Pornin、T.、 \"デジタル署名アルゴリズム（DSA）と楕円曲線デジタル署名アルゴリズム（ECDSA）の確定使用方法\"、RFC 6979、DOI 10.17487 / RFC6979、2013年8月、<HTTP：//www.rfc- editor.org/info/rfc6979>。"
    },
    {
      "indent": 3,
      "text": "[RFC7049] Bormann, C. and P. Hoffman, \"Concise Binary Object Representation (CBOR)\", RFC 7049, DOI 10.17487/RFC7049, October 2013, <http://www.rfc-editor.org/info/rfc7049>.",
      "ja": "[RFC7049]ボルマン、C.およびP.ホフマン、 \"コンサイスバイナリオブジェクトの表現（CBOR）\"、RFC 7049、DOI 10.17487 / RFC7049、2013年10月、<http://www.rfc-editor.org/info/rfc7049> 。"
    },
    {
      "indent": 3,
      "text": "[RFC7539] Nir, Y. and A. Langley, \"ChaCha20 and Poly1305 for IETF Protocols\", RFC 7539, DOI 10.17487/RFC7539, May 2015, <http://www.rfc-editor.org/info/rfc7539>.",
      "ja": "[RFC7539]ニール、Y.及びA.ラングレー、 \"IETFプロトコルのためのChaCha20とPoly1305\"、RFC 7539、DOI 10.17487 / RFC7539、2015年5月、<http://www.rfc-editor.org/info/rfc7539>。"
    },
    {
      "indent": 3,
      "text": "[RFC7748] Langley, A., Hamburg, M., and S. Turner, \"Elliptic Curves for Security\", RFC 7748, DOI 10.17487/RFC7748, January 2016, <http://www.rfc-editor.org/info/rfc7748>.",
      "ja": "[RFC7748]ラングレー、A.、ハンブルク、M.、およびS.ターナー、 \"セキュリティのための楕円曲線\"、RFC 7748、DOI 10.17487 / RFC7748、2016年1月、<http://www.rfc-editor.org/info / rfc7748>。"
    },
    {
      "indent": 3,
      "text": "[RFC8032] Josefsson, S. and I. Liusvaara, \"Edwards-Curve Digital Signature Algorithm (EdDSA)\", RFC 8032, DOI 10.17487/RFC8032, January 2017, <http://www.rfc-editor.org/info/rfc8032>.",
      "ja": "[RFC8032] Josefsson氏、S.及びI. Liusvaara、 \"エドワーズ - 曲線デジタル署名アルゴリズム（エドワーズ曲線デジタル署名アルゴリズム）\"、RFC 8032、DOI 10.17487 / RFC8032、2017年1月、<http://www.rfc-editor.org/info/ rfc8032>。"
    },
    {
      "indent": 3,
      "text": "[RFC8174] Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174, May 2017, <http://www.rfc-editor.org/info/rfc8174>.",
      "ja": "[RFC8174] Leiba、B.、 \"RFC 2119個のキーワードに小文字VS大文字の曖昧さ\"、BCP 14、RFC 8174、DOI 10.17487 / RFC8174、2017年5月、<http://www.rfc-editor.org/info/ rfc8174>。"
    },
    {
      "indent": 3,
      "text": "[SEC1] Certicom Research, \"SEC 1: Elliptic Curve Cryptography\", Standards for Efficient Cryptography, Version 2.0, May 2009, <http://www.secg.org/sec1-v2.pdf>.",
      "ja": "[SEC1] Certicomの研究、 \"SEC 1：楕円曲線暗号\"、効率的な暗号化のための規格、バージョン2.0、2009年5月、<http://www.secg.org/sec1-v2.pdf>。"
    },
    {
      "indent": 0,
      "text": "18.2. Informative References",
      "section_title": true,
      "ja": "18.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[CDDL] Vigano, C. and H. Birkholz, \"CBOR data definition language (CDDL): a notational convention to express CBOR data structures\", Work in Progress, draft-greevenbosch-appsawg-cbor-cddl-09, March 2017.",
      "ja": "[CDDL] Vigano、C.およびH. Birkholz、 \"CBORデータ定義言語（CDDL）：表記CBORデータ構造を表現する慣習\" が進行中で働いて、ドラフトgreevenbosch-appsawg-cbor-CDDL-09、2017年3月。"
    },
    {
      "indent": 3,
      "text": "[OSCOAP] Selander, G., Mattsson, J., Palombini, F., and L. Seitz, \"Object Security of CoAP (OSCOAP)\", Work in Progress, draft-ietf-core-object-security-03, May 2017.",
      "ja": "【OSCOAP] Selander、G.、Mattsson氏、J.、Palombini、F.、及びL.サイツ、 \"CoAP（OSCOAP）のオブジェクトセキュリティ\"、進行中で働いて、ドラフトIETFコア・オブジェクト・セキュリティ・03月2017。"
    },
    {
      "indent": 3,
      "text": "[PVSig] Brown, D. and D. Johnson, \"Formal Security Proofs for a Signature Scheme with Partial Message Recovery\", DOI 10.1007/3-540-45353-9_11, LNCS Volume 2020, June 2000.",
      "ja": "[PVSig]ブラウン、D.とD.ジョンソン、 \"部分的なメッセージの回復と署名方式のための正式なセキュリティ証明\"、DOI 10.1007 / 3-540-45353-9_11、LNCS巻2020年、2000年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC2633] Ramsdell, B., Ed., \"S/MIME Version 3 Message Specification\", RFC 2633, DOI 10.17487/RFC2633, June 1999, <http://www.rfc-editor.org/info/rfc2633>.",
      "ja": "[RFC2633] Ramsdell、B.、エド。、 \"S / MIMEバージョン3メッセージ仕様\"、RFC 2633、DOI 10.17487 / RFC2633、1999年6月、<http://www.rfc-editor.org/info/rfc2633>。"
    },
    {
      "indent": 3,
      "text": "[RFC4231] Nystrom, M., \"Identifiers and Test Vectors for HMAC-SHA-224, HMAC-SHA-256, HMAC-SHA-384, and HMAC-SHA-512\", RFC 4231, DOI 10.17487/RFC4231, December 2005, <http://www.rfc-editor.org/info/rfc4231>.",
      "ja": "[RFC4231] Nystrom、M.、 \"識別子とHMAC-SHA-224のためのテストベクトル、HMAC-SHA-256、HMAC-SHA-384、およびHMAC-SHA-512\"、RFC 4231、DOI 10.17487 / RFC4231、2005年12月、<http://www.rfc-editor.org/info/rfc4231>。"
    },
    {
      "indent": 3,
      "text": "[RFC4262] Santesson, S., \"X.509 Certificate Extension for Secure/ Multipurpose Internet Mail Extensions (S/MIME) Capabilities\", RFC 4262, DOI 10.17487/RFC4262, December 2005, <http://www.rfc-editor.org/info/rfc4262>.",
      "ja": "[RFC4262] Santesson、S.、 \"セキュア/多目的インターネットメール拡張（S / MIME）機能のためのX.509証明書拡張\"、RFC 4262、DOI 10.17487 / RFC4262、2005年12月、<のhttp：//www.rfc-editor .ORG /情報/ rfc4262>。"
    },
    {
      "indent": 3,
      "text": "[RFC4493] Song, JH., Poovendran, R., Lee, J., and T. Iwata, \"The AES-CMAC Algorithm\", RFC 4493, DOI 10.17487/RFC4493, June 2006, <http://www.rfc-editor.org/info/rfc4493>.",
      "ja": "[RFC4493]ソング、JH、Poovendran、R.、リー、J.、およびT.磐田、 \"AES-CMACアルゴリズム\"、RFC 4493、DOI 10.17487 / RFC4493、2006年6月、<のhttp：。//www.rfc -editor.org/info/rfc4493>。"
    },
    {
      "indent": 3,
      "text": "[RFC4949] Shirey, R., \"Internet Security Glossary, Version 2\", FYI 36, RFC 4949, DOI 10.17487/RFC4949, August 2007, <http://www.rfc-editor.org/info/rfc4949>.",
      "ja": "[RFC4949] Shirey、R.、 \"インターネットセキュリティ用語集、バージョン2\"、FYI 36、RFC 4949、DOI 10.17487 / RFC4949、2007年8月、<http://www.rfc-editor.org/info/rfc4949>。"
    },
    {
      "indent": 3,
      "text": "[RFC5116] McGrew, D., \"An Interface and Algorithms for Authenticated Encryption\", RFC 5116, DOI 10.17487/RFC5116, January 2008, <http://www.rfc-editor.org/info/rfc5116>.",
      "ja": "[RFC5116]マグリュー、D.、 \"認証暗号化のためのインタフェースとアルゴリズム\"、RFC 5116、DOI 10.17487 / RFC5116、2008年1月、<http://www.rfc-editor.org/info/rfc5116>。"
    },
    {
      "indent": 3,
      "text": "[RFC5480] Turner, S., Brown, D., Yiu, K., Housley, R., and T. Polk, \"Elliptic Curve Cryptography Subject Public Key Information\", RFC 5480, DOI 10.17487/RFC5480, March 2009, <http://www.rfc-editor.org/info/rfc5480>.",
      "ja": "[RFC5480]ターナー、S.、ブラ​​ウン、D.、耀輝、K.、Housley氏、R.、およびT.ポーク、 \"楕円曲線暗号件名公開鍵情報\"、RFC 5480、DOI 10.17487 / RFC5480、2009年3月、< http://www.rfc-editor.org/info/rfc5480>。"
    },
    {
      "indent": 3,
      "text": "[RFC5652] Housley, R., \"Cryptographic Message Syntax (CMS)\", STD 70, RFC 5652, DOI 10.17487/RFC5652, September 2009, <http://www.rfc-editor.org/info/rfc5652>.",
      "ja": "[RFC5652] Housley氏、R.、 \"暗号メッセージ構文（CMS）\"、STD 70、RFC 5652、DOI 10.17487 / RFC5652、2009年9月、<http://www.rfc-editor.org/info/rfc5652>。"
    },
    {
      "indent": 3,
      "text": "[RFC5751] Ramsdell, B. and S. Turner, \"Secure/Multipurpose Internet Mail Extensions (S/MIME) Version 3.2 Message Specification\", RFC 5751, DOI 10.17487/RFC5751, January 2010, <http://www.rfc-editor.org/info/rfc5751>.",
      "ja": "[RFC5751] Ramsdell、B.とS.ターナーは、 \"セキュア/多目的インターネットメール拡張（S / MIME）バージョン3.2メッセージ仕様\"、RFC 5751、DOI 10.17487 / RFC5751、2010年1月、<のhttp：//www.rfc- editor.org/info/rfc5751>。"
    },
    {
      "indent": 3,
      "text": "[RFC5752] Turner, S. and J. Schaad, \"Multiple Signatures in Cryptographic Message Syntax (CMS)\", RFC 5752, DOI 10.17487/RFC5752, January 2010, <http://www.rfc-editor.org/info/rfc5752>.",
      "ja": "[RFC5752]ターナー、S.およびJ. Schaad、 \"暗号メッセージ構文（CMS）で複数の署名\"、RFC 5752、DOI 10.17487 / RFC5752、2010年1月、<http://www.rfc-editor.org/info/ rfc5752>。"
    },
    {
      "indent": 3,
      "text": "[RFC5990] Randall, J., Kaliski, B., Brainard, J., and S. Turner, \"Use of the RSA-KEM Key Transport Algorithm in the Cryptographic Message Syntax (CMS)\", RFC 5990, DOI 10.17487/RFC5990, September 2010, <http://www.rfc-editor.org/info/rfc5990>.",
      "ja": "[RFC5990]のRandall、J.、Kaliski、B.、ブレイナード、J.、およびS.ターナー、 \"暗号メッセージ構文（CMS）でRSA-KEM主要な輸送アルゴリズムの使用\"、RFC 5990、DOI 10.17487 / RFC5990 2010年9月、<http://www.rfc-editor.org/info/rfc5990>。"
    },
    {
      "indent": 3,
      "text": "[RFC6151] Turner, S. and L. Chen, \"Updated Security Considerations for the MD5 Message-Digest and the HMAC-MD5 Algorithms\", RFC 6151, DOI 10.17487/RFC6151, March 2011, <http://www.rfc-editor.org/info/rfc6151>.",
      "ja": "[RFC6151]ターナー、S.とL.チェン、 \"MD5メッセージダイジェストとHMAC-MD5アルゴリズムのための更新されたセキュリティ上の考慮事項\"、RFC 6151、DOI 10.17487 / RFC6151、2011年3月、<のhttp：//www.rfc- editor.org/info/rfc6151>。"
    },
    {
      "indent": 3,
      "text": "[RFC6838] Freed, N., Klensin, J., and T. Hansen, \"Media Type Specifications and Registration Procedures\", BCP 13, RFC 6838, DOI 10.17487/RFC6838, January 2013, <http://www.rfc-editor.org/info/rfc6838>.",
      "ja": "[RFC6838]解放され、N.、Klensin、J.、およびT.ハンセン、 \"メディアタイプの仕様と登録手順\"、BCP 13、RFC 6838、DOI 10.17487 / RFC6838、2013年1月、<のhttp：//www.rfc- editor.org/info/rfc6838>。"
    },
    {
      "indent": 3,
      "text": "[RFC7159] Bray, T., Ed., \"The JavaScript Object Notation (JSON) Data Interchange Format\", RFC 7159, DOI 10.17487/RFC7159, March 2014, <http://www.rfc-editor.org/info/rfc7159>.",
      "ja": "[RFC7159]ブレイ、T.、エド。、 \"JavaScriptのObject Notation（JSON）形式のデータ交換フォーマット\"、RFC 7159、DOI 10.17487 / RFC7159、2014年3月、<http://www.rfc-editor.org/info/ rfc7159>。"
    },
    {
      "indent": 3,
      "text": "[RFC7252] Shelby, Z., Hartke, K., and C. Bormann, \"The Constrained Application Protocol (CoAP)\", RFC 7252, DOI 10.17487/RFC7252, June 2014, <http://www.rfc-editor.org/info/rfc7252>.",
      "ja": "[RFC7252]シェルビー、Z.、HARTKE、K.、およびC.ボルマン、 \"制約アプリケーションプロトコル（CoAP）\"、RFC 7252、DOI 10.17487 / RFC7252、2014年6月、<HTTP：//www.rfc-editor。組織/情報/ rfc7252>。"
    },
    {
      "indent": 3,
      "text": "[RFC7515] Jones, M., Bradley, J., and N. Sakimura, \"JSON Web Signature (JWS)\", RFC 7515, DOI 10.17487/RFC7515, May 2015, <http://www.rfc-editor.org/info/rfc7515>.",
      "ja": "[RFC7515]ジョーンズ、M.、ブラッドリー、J。、およびN. Sakimura、 \"JSONウェブ署名（JWS）\"、RFC 7515、DOI 10.17487 / RFC7515、2015年5月、<http://www.rfc-editor.org /情報/ rfc7515>。"
    },
    {
      "indent": 3,
      "text": "[RFC7516] Jones, M. and J. Hildebrand, \"JSON Web Encryption (JWE)\", RFC 7516, DOI 10.17487/RFC7516, May 2015, <http://www.rfc-editor.org/info/rfc7516>.",
      "ja": "[RFC7516]ジョーンズ、M.及びJ.ヒルデブランド、 \"JSONウェブ暗号化（JWE）\"、RFC 7516、DOI 10.17487 / RFC7516、2015年5月、<http://www.rfc-editor.org/info/rfc7516>。"
    },
    {
      "indent": 3,
      "text": "[RFC7517] Jones, M., \"JSON Web Key (JWK)\", RFC 7517, DOI 10.17487/RFC7517, May 2015, <http://www.rfc-editor.org/info/rfc7517>.",
      "ja": "[RFC7517]ジョーンズ、M.、 \"JSONのWebキー（JWK）\"、RFC 7517、DOI 10.17487 / RFC7517、2015年5月、<http://www.rfc-editor.org/info/rfc7517>。"
    },
    {
      "indent": 3,
      "text": "[RFC7518] Jones, M., \"JSON Web Algorithms (JWA)\", RFC 7518, DOI 10.17487/RFC7518, May 2015, <http://www.rfc-editor.org/info/rfc7518>.",
      "ja": "[RFC7518]ジョーンズ、M.、 \"JSONウェブアルゴリズム（JWA）\"、RFC 7518、DOI 10.17487 / RFC7518、2015年5月、<http://www.rfc-editor.org/info/rfc7518>。"
    },
    {
      "indent": 3,
      "text": "[RFC8017] Moriarty, K., Ed., Kaliski, B., Jonsson, J., and A. Rusch, \"PKCS #1: RSA Cryptography Specifications Version 2.2\", RFC 8017, DOI 10.17487/RFC8017, November 2016, <http://www.rfc-editor.org/info/rfc8017>.",
      "ja": "[RFC8017]モリアーティ、K.、エド、Kaliski、B.、ジョンソン、J.、およびA.ラッシュ、 \"PKCS＃1：RSA暗号仕様バージョン2.2\"、RFC 8017、DOI 10.17487 / RFC8017、2016年11月、< http://www.rfc-editor.org/info/rfc8017>。"
    },
    {
      "indent": 3,
      "text": "[RFC8018] Moriarty, K., Ed., Kaliski, B., and A. Rusch, \"PKCS #5: Password-Based Cryptography Specification Version 2.1\", RFC 8018, DOI 10.17487/RFC8018, January 2017, <http://www.rfc-editor.org/info/rfc8018>.",
      "ja": "[RFC8018]モリアーティ、K.、エド、Kaliski、B.、およびA.ラッシュ、 \"PKCS＃5：パスワードベースの暗号化仕様バージョン2.1\"、RFC 8018、DOI 10.17487 / RFC8018、2017年1月、<のhttp：/ /www.rfc-editor.org/info/rfc8018>。"
    },
    {
      "indent": 3,
      "text": "[RFC8126] Cotton, M., Leiba, B., and T. Narten, \"Guidelines for Writing an IANA Considerations Section in RFCs\", BCP 26, RFC 8126, DOI 10.17487/RFC8126, June 2017, <http://www.rfc-editor.org/info/rfc8126>.",
      "ja": "[RFC8126]コットン、M.、Leiba、B.、およびT. Narten氏、 \"RFCでIANA問題部に書くためのガイドライン\"、BCP 26、RFC 8126、DOI 10.17487 / RFC8126、2017年6月、<のhttp：// WWW .rfc-editor.org /情報/ rfc8126>。"
    },
    {
      "indent": 3,
      "text": "[SP800-56A] Barker, E., Chen, L., Roginsky, A., and M. Smid, \"Recommendation for Pair-Wise Key Establishment Schemes Using Discrete Logarithm Cryptography\", NIST Special Publication 800-56A, Revision 2, DOI 10.6028/NIST.SP.800-56Ar2, May 2013, <http://nvlpubs.nist.gov/nistpubs/SpecialPublications/ NIST.SP.800-56Ar2.pdf>.",
      "ja": "【SP800-56A]バーカー、E.、チェン、L.、Roginsky、A.、およびM. SMID、 \"離散対数暗号を使用してペアワイズ鍵確立スキームのための勧告\" は、NIST Special Publication 800-56A、改訂第2版、 DOI 10.6028 / NIST.SP.800-56Ar2、2013年5月、<http://nvlpubs.nist.gov/nistpubs/SpecialPublications/ NIST.SP.800-56Ar2.pdf>。"
    },
    {
      "indent": 3,
      "text": "[W3C.WebCrypto] Watson, M., \"Web Cryptography API\", W3C Recommendation, January 2017, <https://www.w3.org/TR/WebCryptoAPI/>.",
      "ja": "[W3C.WebCrypto]ワトソン、M.、 \"ウェブ暗号化API\"、W3C勧告、2017年1月、<https://www.w3.org/TR/WebCryptoAPI/>。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Guidelines for External Data Authentication of Algorithms",
      "ja": "アルゴリズムの外部データ認証のための付録A.ガイドライン"
    },
    {
      "indent": 3,
      "text": "A portion of the working group has expressed a strong desire to relax the rule that the algorithm identifier be required to appear in each level of a COSE object. There are two basic reasons that have been advanced to support this position. First, the resulting message will be smaller if the algorithm identifier is omitted from the most common messages in a CoAP environment. Second, there is a potential bug that will arise if full checking is not done correctly between the different places that an algorithm identifier could be placed (the message itself, an application statement, the key structure that the sender possesses, and the key structure the recipient possesses).",
      "ja": "ワーキンググループの部分は、アルゴリズム識別子がCOSEオブジェクトの各レベルに表示されるように要求されるルールを緩和する強い意欲を表明しています。この位置をサポートするために進められている二つの基本的な理由があります。アルゴリズム識別子は、CoAP環境で最も一般的なメッセージから省略された場合はまず、結果のメッセージが小さくなります。第二に、完全なチェックがアルゴリズム識別子を配置することができ、異なる場所の間で正しく行われていない場合に発生します潜在的なバグ（メッセージ自体、アプリケーションの声明、送信者が所有するキー構造、およびキー構造があります受信者）が所有しています。"
    },
    {
      "indent": 3,
      "text": "This appendix lays out how such a change can be made and the details that an application needs to specify in order to use this option. Two different sets of details are specified: those needed to omit an algorithm identifier and those needed to use a variant on the counter signature attribute that contains no attributes about itself.",
      "ja": "この付録では、そのような変更が行われ、アプリケーションは、このオプションを使用するために指定する必要がある詳細することができます方法を産みます。詳細の二つの異なるセットが指定されている：アルゴリズム識別子を省略するために必要なものと、自分自身についての属性が格納されていないカウンタ署名属性にバリアントを使用するために必要とされるもの。"
    },
    {
      "indent": 0,
      "text": "A.1. Algorithm Identification",
      "ja": "A.1。アルゴリズム識別"
    },
    {
      "indent": 3,
      "text": "In this section, three sets of recommendations are laid out. The first set of recommendations apply to having an implicit algorithm identified for a single layer of a COSE object. The second set of recommendations apply to having multiple implicit algorithms identified for multiple layers of a COSE object. The third set of recommendations apply to having implicit algorithms for multiple COSE object constructs.",
      "ja": "このセクションでは、お薦めの3セットがレイアウトされています。推奨の第1のセットはCOSEオブジェクトの単一層のために識別暗黙アルゴリズムを有するにも適用されます。お薦めの第2のセットは、COSEオブジェクトの複数の層のために識別複数暗黙アルゴリズムを有するにも適用されます。お薦めの第三のセットは、複数COSEオブジェクト構築のための暗黙的なアルゴリズムを有するにも適用されます。"
    },
    {
      "indent": 3,
      "text": "The key words from RFC 2119 are deliberately not used here. This specification can provide recommendations, but it cannot enforce them.",
      "ja": "RFC 2119からのキーワードが故意に、ここで使用されていません。この仕様は、推奨事項を提供することができますが、それは彼らを強制することはできません。"
    },
    {
      "indent": 3,
      "text": "This set of recommendations applies to the case where an application is distributing a fixed algorithm along with the key information for use in a single COSE object. This normally applies to the smallest of the COSE objects, specifically COSE_Sign1, COSE_Mac0, and COSE_Encrypt0, but could apply to the other structures as well.",
      "ja": "お薦めのこのセットは、アプリケーションが単一COSEオブジェクトに使用するための鍵情報と共に固定アルゴリズムを配信する場合にも適用されます。これは通常、COSEオブジェクト、特にCOSE_Sign1、COSE_Mac0、およびCOSE_Encrypt0の最小に適用されるが、他の構造物に適用することができます。"
    },
    {
      "indent": 3,
      "text": "The following items should be taken into account:",
      "ja": "以下の項目を考慮しなければなりません。"
    },
    {
      "indent": 3,
      "text": "o Applications need to list the set of COSE structures that implicit algorithms are to be used in. Applications need to require that the receipt of an explicit algorithm identifier in one of these structures will lead to the message being rejected. This requirement is stated so that there will never be a case where there is any ambiguity about the question of which algorithm should be used, the implicit or the explicit one. This applies even if the transported algorithm identifier is a protected attribute. This applies even if the transported algorithm is the same as the implicit algorithm.",
      "ja": "Oアプリケーションは、暗黙的なアルゴリズムがで使用されるCOSE構造のセットをリストする必要があります。アプリケーションは、これらの構造のいずれかで明示的なアルゴリズム識別子の受信が拒否されているメッセージにつながることを要求する必要があります。アルゴリズムは、暗黙的または明示的なものを使用すべきかの問題についての曖昧さがある場合があることは決してありませんように、この要件が記載されています。これは、輸送アルゴリズム識別子は、保護された属性である場合にも適用されます。これは、輸送アルゴリズムは、暗黙的なアルゴリズムと同じである場合にも適用されます。"
    },
    {
      "indent": 3,
      "text": "o Applications need to define the set of information that is to be considered to be part of a context when omitting algorithm identifiers. At a minimum, this would be the key identifier (if needed), the key, the algorithm, and the COSE structure it is used with. Applications should restrict the use of a single key to a single algorithm. As noted for some of the algorithms in this document, the use of the same key in different related algorithms can lead to leakage of information about the key, leakage about the data or the ability to perform forgeries.",
      "ja": "Oアプリケーションは、アルゴリズム識別子を省略した場合に、コンテキストの一部であると考えられるべきである情報のセットを定義する必要があります。最低限、これは、それが一緒に使用されるキー識別子（必要な場合）、鍵、アルゴリズム、およびCOSE構造であろう。アプリケーションは、単一のアルゴリズムへの単一キーの使用を制限する必要があります。この文書に記載されているアルゴリズムのいくつかのために述べたように、別の関連するアルゴリズムで同じキーを使用すると、データや偽造を行う能力に関するキー、漏れに関する情報の漏洩につながることができます。"
    },
    {
      "indent": 3,
      "text": "o In many cases, applications that make the algorithm identifier implicit will also want to make the context identifier implicit for the same reason. That is, omitting the context identifier will decrease the message size (potentially significantly depending on the length of the identifier). Applications that do this will need to describe the circumstances where the context identifier is to be omitted and how the context identifier is to be inferred in these cases. (An exhaustive search over all of the keys would normally not be considered to be acceptable.) An example of how this can be done is to tie the context to a transaction identifier. Both would be sent on the original message, but only the transaction identifier would need to be sent after that point as the context is tied into the transaction identifier. Another way would be to associate a context with a network address. All messages coming from a single network address can be assumed to be associated with a specific context. (In this case, the address would normally be distributed as part of the context.)",
      "ja": "O多くの場合、アルゴリズム識別子は、暗黙的にするアプリケーションも、同じ理由でコンテキスト識別子は、暗黙的にしたいでしょう。すなわち、（潜在的に有意識別子の長さに応じて）メッセージのサイズを減少するコンテキスト識別子を省略しています。これを実行するアプリケーションは、コンテキスト識別子を省略し、どのようにコンテキスト識別子は、これらの場合に推論されることがあるような状況を記述する必要があります。 （キーのすべてにわたる全数探索は通常許容可能であると考えられないだろう。）これを行うことができる方法の例は、トランザクション識別子にコンテキストを結びつけることです。どちらも、元のメッセージで送信されますが、唯一のトランザクション識別子は、コンテキストがトランザクション識別子に結びついているように、その時点の後に送信する必要があります。もう一つの方法は、ネットワークアドレスとコンテキストを関連付けることであろう。単一のネットワークアドレスからのすべてのメッセージは、特定のコンテキストに関連付けられていることを想定することができます。 （この場合、アドレスは、通常、コンテキストの一部として配布されることになります。）"
    },
    {
      "indent": 3,
      "text": "o Applications cannot rely on key identifiers being unique unless they take significant efforts to ensure that they are computed in such a way as to create this guarantee. Even when an application does this, the uniqueness might be violated if the application is run in different contexts (i.e., with a different context provider) or if the system combines the security contexts from different applications together into a single store.",
      "ja": "Oアプリケーションは、彼らがこの保証を作成するような方法で計算されることを保証するために多大な努力を要する場合を除き、キー識別子が一意であることに依存することはできません。アプリケーションがこれを行う場合でも、アプリケーションは（すなわち、異なるコンテキスト・プロバイダと）異なるコンテキストで実行された場合、またはシステムが単一のストアに異なるアプリケーションからのセキュリティコンテキストを一緒に組み合わせた場合、一意性に違反する可能性があります。"
    },
    {
      "indent": 3,
      "text": "o Applications should continue the practice of protecting the algorithm identifier. Since this is not done by placing it in the protected attributes field, applications should define an application-specific external data structure that includes this value. This external data field can be used as such for content encryption, MAC, and signature algorithms. It can be used in the SuppPrivInfo field for those algorithms that use a KDF to derive a key value. Applications may also want to protect other information that is part of the context structure as well. It should be noted that those fields, such as the key or a Base IV, are protected by virtue of being used in the cryptographic computation and do not need to be included in the external data field.",
      "ja": "Oアプリケーションは、アルゴリズム識別子を保護する練習を続けるべきです。これは保護された属性フィールドにそれを置くことによって行われていないので、アプリケーションは、この値を含むアプリケーション固有の外部データ構造を定義する必要があります。この外部データ・フィールドは、コンテンツの暗号化、MAC、および署名アルゴリズムのためにそのようなものとして使用することができます。これは、キーの値を導出するためにKDFを使用してこれらのアルゴリズムのためのSuppPrivInfoフィールドで使用することができます。アプリケーションはまた、同様にコンテキスト構造体の一部である他の情報を保護することをお勧めします。このようなキーまたは塩基IVとしてこれらのフィールドは、暗号演算に使用されることによって保護されており、外部のデータ・フィールドに含まれる必要はないことに留意すべきです。"
    },
    {
      "indent": 3,
      "text": "The second case is having multiple implicit algorithm identifiers specified for a multiple layer COSE object. An example of how this would work is the encryption context that an application specifies, which contains a content encryption algorithm, a key wrap algorithm, a key identifier, and a shared secret. The sender omits sending the algorithm identifier for both the content layer and the recipient layer leaving only the key identifier. The receiver then uses the key identifier to get the implicit algorithm identifiers.",
      "ja": "第二の場合は、複数層のCOSEオブジェクトに対して指定された複数の暗黙的なアルゴリズム識別子を有しています。これが機能する方法の例は、コンテンツの暗号化アルゴリズム、キーラップアルゴリズム、キー識別子、および共有秘密が含まれているアプリケーションが指定した暗号化コンテキスト、です。送信者は、コンテンツ層のみキー識別子を残す受信者の層の両方のためのアルゴリズム識別子を送信して省略します。次に、受信機は、暗黙のアルゴリズム識別子を取得するためにキー識別子を使用しています。"
    },
    {
      "indent": 3,
      "text": "The following additional items need to be taken into consideration:",
      "ja": "次の追加項目を考慮する必要があります。"
    },
    {
      "indent": 3,
      "text": "o Applications that want to support this will need to define a structure that allows for, and clearly identifies, both the COSE structure to be used with a given key and the structure and algorithm to be used for the secondary layer. The key for the secondary layer is computed as normal from the recipient layer.",
      "ja": "Oこれをサポートするアプリケーションは、指定されたキーと二層に使用される構造とアルゴリズムで使用される両方のCOSE構造を可能にする構造を定義する必要があり、かつ明確に識別します。第2の層のための鍵は、受信者層から通常通り計算されます。"
    },
    {
      "indent": 3,
      "text": "The third case is having multiple implicit algorithm identifiers, but targeted at potentially unrelated layers or different COSE objects. There are a number of different scenarios where this might be applicable. Some of these scenarios are:",
      "ja": "第三の場合は、複数の暗黙的なアルゴリズム識別子を有するが、潜在的に無関係な層又は異なるCOSEオブジェクトを対象としています。これが適用される可能性があるさまざまなシナリオがいくつかあります。これらのシナリオのいくつかは、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "o Two contexts are distributed as a pair. Each of the contexts is for use with a COSE_Encrypt message. Each context will consist of distinct secret keys and IVs and potentially even different algorithms. One context is for sending messages from party A to party B, and the second context is for sending messages from party B to party A. This means that there is no chance for a reflection attack to occur as each party uses different secret keys to send its messages; a message that is reflected back to it would fail to decrypt.",
      "ja": "O二つのコンテキストはペアとして配布されています。コンテキストは、それぞれCOSE_Encryptメッセージで使用するためのものです。各コンテキストは、個別の秘密鍵とIVを、潜在的にも異なるアルゴリズムで構成されます。一つのコンテキストは、パーティBにパーティAからメッセージを送信するためであり、第二のコンテキストがパーティーAにパーティBからのメッセージを送信するためであるこれは、各当事者が送信するために異なる秘密鍵を使用するような反射攻撃が発生するためにはチャンスがないことを意味しますそのメッセージは、それに戻って反映されているメッセージを解読するのに失敗します。"
    },
    {
      "indent": 3,
      "text": "o Two contexts are distributed as a pair. The first context is used for encryption of the message, and the second context is used to place a counter signature on the message. The intention is that the second context can be distributed to other entities independently of the first context. This allows these entities to validate that the message came from an individual without being able to decrypt the message and see the content.",
      "ja": "O二つのコンテキストはペアとして配布されています。最初のコンテキストは、メッセージの暗号化に使用され、そして第二のコンテキストは、メッセージにカウンタ署名を配置するために使用されます。その意図は、第二のコンテキストは、独立して最初のコンテキストの他のエンティティに分配することができることです。これは、これらのエンティティは、メッセージがメッセージを復号化し、コンテンツを見ることができず、個々から来たことを検証することができます。"
    },
    {
      "indent": 3,
      "text": "o Two contexts are distributed as a pair. The first context contains a key for dealing with MACed messages, and the second context contains a key for dealing with encrypted messages. This allows for a unified distribution of keys to participants for different types of messages that have different keys, but where the keys may be used in a coordinated manner.",
      "ja": "O二つのコンテキストはペアとして配布されています。最初のコンテキストはMACedメッセージを処理するためのキーが含まれ、第二のコンテキストは、暗号化されたメッセージを処理するためのキーが含まれています。これは、異なるキーを持つメッセージの種類ごとに参加者への鍵の統一配布することができますが、キーが協調的に使用され得ます。"
    },
    {
      "indent": 3,
      "text": "For these cases, the following additional items need to be considered:",
      "ja": "これらのケースについては、次の追加項目を考慮する必要があります。"
    },
    {
      "indent": 3,
      "text": "o Applications need to ensure that the multiple contexts stay associated. If one of the contexts is invalidated for any reason, all of the contexts associated with it should also be invalidated.",
      "ja": "Oアプリケーションは、複数のコンテキストが関連付けられているとどまることを確認する必要があります。コンテキストの1が何らかの理由で無効とされている場合は、それに関連付けられたコンテキストもすべて無効にする必要があります。"
    },
    {
      "indent": 0,
      "text": "A.2. Counter Signature without Headers",
      "ja": "A.2。ヘッダなしのカウンター署名"
    },
    {
      "indent": 3,
      "text": "There is a group of people who want to have a counter signature parameter that is directly tied to the value being signed, and thus the authenticated and unauthenticated buckets can be removed from the message being sent. The focus on this is an even smaller size, as all of the information on the process of creating the counter signature is implicit rather than being explicitly carried in the message. This includes not only the algorithm identifier as presented above, but also items such as the key identification, which is always external to the signature structure. This means that the entities that are doing the validation of the counter signature are required to infer which key is to be used from context rather than being explicit. One way of doing this would be to presume that all data coming from a specific port (or to a specific URL) is to be validated by a specific key. (Note that this does not require that the key identifier be part of the value signed as it does not serve a cryptographic purpose. If the key validates the counter signature, then it should be presumed that the entity associated with that key produced the signature.)",
      "ja": "直接署名される値に結び付けられているので、認証され、認証されていないバケットが送信されたメッセージから削除することができカウンタ署名のパラメータを持ちたい人のグループがあります。カウンタ署名を作成するプロセスに関する情報のすべてが暗黙的ではなく、明示的メッセージで運ばれているように、この上の焦点は、さらに小さいサイズです。これは、上記のようなアルゴリズム識別子だけでなく、しかし、また、常に署名構造の外部にある鍵識別、などの項目。これは、カウンタ署名の検証を行っているエンティティがコンテキストからではなく、明示されて使用されるべきキー推論するために必要とされることを意味します。これを行う1つの方法は、すべてのデータが特定のポート（または特定のURLへの）から来ていることを前提とすることであろう特定のキーによって検証されます。 （これはキー識別子は、それが暗号化の目的を果たすないとして署名値の一部であることを必要としないことに注意してください。キーは、カウンタ署名を検証する場合、そのキーに関連付けられているエンティティが署名を生成したと推測されるべきです。 ）"
    },
    {
      "indent": 3,
      "text": "When computing the signature for the bare counter signature header, the same Sig_structure defined in Section 4.4 is used. The sign_protected field is omitted, as there is no protected header field in this counter signature header. The value of \"CounterSignature0\" is placed in the context field of the Sig_stucture.",
      "ja": "裸カウンタ署名ヘッダの署名を計算するとき、セクション4.4で定義された同じSig_structureが使用されます。このカウンタ署名ヘッダには保護されたヘッダフィールドが存在しないようsign_protectedフィールドは、省略されています。 「CounterSignature0」の値がSig_stuctureのコンテキストフィールドに置かれています。"
    },
    {
      "indent": 3,
      "text": "+-------------------+-------+-------+-------+-----------------------+\n| Name              | Label | Value | Value | Description           |\n|                   |       | Type  |       |                       |\n+-------------------+-------+-------+-------+-----------------------+\n| CounterSignature0 | 9     | bstr  |       | Counter signature     |\n|                   |       |       |       | with implied signer   |\n|                   |       |       |       | and headers           |\n+-------------------+-------+-------+-------+-----------------------+",
      "raw": true
    },
    {
      "indent": 13,
      "text": "Table 27: Header Parameter for CounterSignature0",
      "ja": "表27：CounterSignature0のヘッダパラメータ"
    },
    {
      "indent": 0,
      "text": "Appendix B. Two Layers of Recipient Information",
      "ja": "付録B.受信者情報の二層"
    },
    {
      "indent": 3,
      "text": "All of the currently defined recipient algorithm classes only use two layers of the COSE_Encrypt structure. The first layer is the message content, and the second layer is the content key encryption. However, if one uses a recipient algorithm such as the RSA Key Encapsulation Mechanism (RSA-KEM) (see Appendix A of RSA-KEM [RFC5990]), then it makes sense to have three layers of the COSE_Encrypt structure.",
      "ja": "現在定義されている受信者のアルゴリズムクラスのすべてが唯一COSE_Encrypt構造の2つの層を使用しています。第一層は、メッセージの内容であり、第二層は、コンテンツ鍵の暗号化です。一つは（RSA-KEMの付録A [RFC5990]を参照）、例えばRSA鍵カプセル化メカニズム（RSA-KEM）としてレシピエントアルゴリズムを使用する場合は、それはCOSE_Encrypt構造の3つの層を有することが理にかなっています。"
    },
    {
      "indent": 3,
      "text": "These layers would be:",
      "ja": "これらの層は、次のようになります。"
    },
    {
      "indent": 3,
      "text": "o Layer 0: The content encryption layer. This layer contains the payload of the message.",
      "ja": "O層0：コンテンツ暗号化層。この層は、メッセージのペイロードが含まれています。"
    },
    {
      "indent": 3,
      "text": "o Layer 1: The encryption of the CEK by a KEK.",
      "ja": "O層1：KEKによるCEKの暗号化。"
    },
    {
      "indent": 3,
      "text": "o Layer 2: The encryption of a long random secret using an RSA key and a key derivation function to convert that secret into the KEK.",
      "ja": "O層2：KEKにその秘密を変換するために、RSAキーとキー導出関数を使用して長いランダムな秘密の暗号化。"
    },
    {
      "indent": 3,
      "text": "This is an example of what a triple layer message would look like. The message has the following layers:",
      "ja": "これは、三層のメッセージがどのように見えるかの例です。メッセージには、以下の層があります。"
    },
    {
      "indent": 3,
      "text": "o Layer 0: Has a content encrypted with AES-GCM using a 128-bit key.",
      "ja": "O層0：128ビットキーを使用してAES-GCMで暗号化されたコンテンツを持っています。"
    },
    {
      "indent": 3,
      "text": "o Layer 1: Uses the AES Key Wrap algorithm with a 128-bit key.",
      "ja": "O層1：128ビットキーのAESキーラップアルゴリズムを使用します。"
    },
    {
      "indent": 3,
      "text": "o Layer 2: Uses ECDH Ephemeral-Static direct to generate the layer 1 key.",
      "ja": "O層2：ECDHエフェメラル-静的レイヤー1のキーを生成するために直接使用します。"
    },
    {
      "indent": 3,
      "text": "In effect, this example is a decomposed version of using the ECDH-ES+A128KW algorithm.",
      "ja": "実際には、この例ではECDH-ES +のA128KWアルゴリズムを使用しての分解バージョンです。"
    },
    {
      "indent": 3,
      "text": "Size of binary file is 183 bytes",
      "ja": "バイナリファイルのサイズは183のバイトです"
    },
    {
      "indent": 3,
      "text": "96( [ / protected / h'a10101' / { \\ alg \\ 1:1 \\ AES-GCM 128 \\ } / , / unprotected / { / iv / 5:h'02d1f7e6f26c43d4868d87ce' }, / ciphertext / h'64f84d913ba60a76070a9a48f26e97e863e2852948658f0 811139868826e89218a75715b', / recipients / [ [ / protected / h'', / unprotected / { / alg / 1:-3 / A128KW / }, / ciphertext / h'dbd43c4e9d719c27c6275c67d628d493f090593db82 18f11', / recipients / [ [ / protected / h'a1013818' / { \\ alg \\ 1:-25 \\ ECDH-ES + HKDF-256 \\ } / , / unprotected / { / ephemeral / -1:{ / kty / 1:2, / crv / -1:1, / x / -2:h'b2add44368ea6d641f9ca9af308b4079aeb519f11 e9b8a55a600b21233e86e68', / y / -3:false }, / kid / 4:'meriadoc.brandybuck@buckland.example' }, / ciphertext / h'' ] ] ] ] ] )",
      "ja": "96（[/保護/ h'a10101' / {\\ ALG \\ 1：1 \\ AES-GCM 128 \\} /、/非保護/ {/ IV / 5：h'02d1f7e6f26c43d4868d87ce '} /暗号文/ h'64f84d913ba60a76070a9a48f26e97e863e2852948658f0 811139868826e89218a75715b' 、/受信者/ [/保護/ H ''、/非保護/ {/ ALG / 1：-3 / A128KW /} /暗号文/ h'dbd43c4e9d719c27c6275c67d628d493f090593db82 18f11' /受信者/ [/保護/ h'a1013818' / {\\ ALG \\ 1：-25 ECDH-ES + HKDF-256 \\ \\} /、/非保護/ {/エフェメラル/ -1：{/ KTY / 1：2、/ CRV / -1：1、/ X / -2：h'b2add44368ea6d641f9ca9af308b4079aeb519f11 e9b8a55a600b21233e86e68' / Y / -3：偽} /子供/ 4：'meriadoc.brandybuck@buckland.example」} /暗号文/ H '']]]]]）"
    },
    {
      "indent": 0,
      "text": "Appendix C. Examples",
      "ja": "付録C.例"
    },
    {
      "indent": 3,
      "text": "This appendix includes a set of examples that show the different features and message types that have been defined in this document. To make the examples easier to read, they are presented using the extended CBOR diagnostic notation (defined in [CDDL]) rather than as a binary dump.",
      "ja": "この付録では、この文書で定義されているさまざまな機能やメッセージの種類を示して例のセットが含まれています。読み例を簡単にするために、それらはむしろバイナリダンプとしてより（[CDDL]で定義された）拡張CBOR診断表記法を使用して提示されます。"
    },
    {
      "indent": 3,
      "text": "A GitHub project has been created at <https://github.com/cose-wg/ Examples> that contains not only the examples presented in this document, but a more complete set of testing examples as well. Each example is found in a JSON file that contains the inputs used to create the example, some of the intermediate values that can be used in debugging the example and the output of the example presented in both a hex and a CBOR diagnostic notation format. Some of the examples at the site are designed failure testing cases; these are clearly marked as such in the JSON file. If errors in the examples in this document are found, the examples on GitHub will be updated, and a note to that effect will be placed in the JSON file.",
      "ja": "GitHubのプロジェクトは、この文書の例が、テスト例のより完全なセットにもないだけを含んでいる<https://github.com/cose-wg/例>で作成されています。各実施例は、例を作成するために使用される入力、例えば及びヘクスとCBOR診断表記形式の両方で提示された例の出力をデバッグ中に使用することができる中間値の一部が含まれているJSONファイルに見出されます。サイトでの例のいくつかは、障害のテストケースを設計されています。これらは明らかにJSONファイルでそのようにマークされています。このドキュメントの例でエラーが発見された場合は、GitHubの上の例が更新され、その旨の注記は、JSONファイルに配置されます。"
    },
    {
      "indent": 3,
      "text": "As noted, the examples are presented using the CBOR's diagnostic notation. A Ruby-based tool exists that can convert between the diagnostic notation and binary. This tool can be installed with the command line:",
      "ja": "述べたように、例としてはCBORの診断表記を使用して提示されます。ルビーベースのツールは、診断の表記とバイナリとの間で変換することができるが存在します。このツールは、コマンドラインでインストールすることができます。"
    },
    {
      "indent": 3,
      "text": "gem install cbor-diag",
      "ja": "cbor-逸品自身をインストール"
    },
    {
      "indent": 3,
      "text": "The diagnostic notation can be converted into binary files using the following command line:",
      "ja": "診断表記は、次のコマンドラインを使用してバイナリファイルに変換することができます。"
    },
    {
      "indent": 3,
      "text": "diag2cbor.rb < inputfile > outputfile",
      "ja": "diag2cbor.rb <入力ファイル> OUTPUTFILE"
    },
    {
      "indent": 3,
      "text": "The examples can be extracted from the XML version of this document via an XPath expression as all of the artwork is tagged with the attribute type='CBORdiag'. (Depending on the XPath evaluator one is using, it may be necessary to deal with &gt; as an entity.)",
      "ja": "アートワークの全てが属性タイプ=「CBORdiag」でタグ付けされる例は、XPath式を介してこの文書のXMLバージョンから抽出することができます。 （一方が使用されたXPathの評価に応じて、と＆GT対処する必要があるかもしれない;エンティティとして）。"
    },
    {
      "indent": 3,
      "text": "//artwork[@type='CDDL']/text()",
      "ja": "//アートワーク[タイプ@ = 'CDDL'] /テキスト（）"
    },
    {
      "indent": 0,
      "text": "C.1. Examples of Signed Messages",
      "ja": "C.1。署名されたメッセージの例"
    },
    {
      "indent": 0,
      "text": "C.1.1. Single Signature",
      "ja": "C.1.1。シングルサイン"
    },
    {
      "indent": 3,
      "text": "This example uses the following:",
      "ja": "この例では、次を使用しています。"
    },
    {
      "indent": 3,
      "text": "o Signature Algorithm: ECDSA w/ SHA-256, Curve P-256",
      "ja": "O署名アルゴリズム：/ SHA256、曲線P-256 ECDSA"
    },
    {
      "indent": 3,
      "text": "Size of binary file is 103 bytes",
      "ja": "バイナリファイルのサイズは103のバイトです"
    },
    {
      "indent": 3,
      "text": "98( [ / protected / h'', / unprotected / {}, / payload / 'This is the content.', / signatures / [ [ / protected / h'a10126' / { \\ alg \\ 1:-7 \\ ECDSA 256 \\ } / , / unprotected / { / kid / 4:'11' }, / signature / h'e2aeafd40d69d19dfe6e52077c5d7ff4e408282cbefb 5d06cbf414af2e19d982ac45ac98b8544c908b4507de1e90b717c3d34816fe926a2b 98f53afd2fa0f30a' ] ] ] )",
      "ja": "。98（[/保護/ H ''、/非保護/ {} /ペイロード/ 'これは、コンテンツである' /署名/ [/保護/ h'a10126' / {\\ ALG \\ 1：-7 \\ ECDSA 256 \\} /、/非保護/ {/子供/ 4：'11' } /署名/ h'e2aeafd40d69d19dfe6e52077c5d7ff4e408282cbefb 5d06cbf414af2e19d982ac45ac98b8544c908b4507de1e90b717c3d34816fe926a2b 98f53afd2fa0f30a」]]]）"
    },
    {
      "indent": 0,
      "text": "C.1.2. Multiple Signers",
      "ja": "C.1.2。複数の署名者"
    },
    {
      "indent": 3,
      "text": "This example uses the following:",
      "ja": "この例では、次を使用しています。"
    },
    {
      "indent": 3,
      "text": "o Signature Algorithm: ECDSA w/ SHA-256, Curve P-256",
      "ja": "O署名アルゴリズム：/ SHA256、曲線P-256 ECDSA"
    },
    {
      "indent": 3,
      "text": "o Signature Algorithm: ECDSA w/ SHA-512, Curve P-521",
      "ja": "O署名アルゴリズム：/ SHA512、曲線P-521とECDSA"
    },
    {
      "indent": 3,
      "text": "Size of binary file is 277 bytes",
      "ja": "バイナリファイルのサイズは277のバイトです"
    },
    {
      "indent": 3,
      "text": "98( [ / protected / h'', / unprotected / {}, / payload / 'This is the content.', / signatures / [ [ / protected / h'a10126' / { \\ alg \\ 1:-7 \\ ECDSA 256 \\ } / , / unprotected / { / kid / 4:'11' }, / signature / h'e2aeafd40d69d19dfe6e52077c5d7ff4e408282cbefb 5d06cbf414af2e19d982ac45ac98b8544c908b4507de1e90b717c3d34816fe926a2b 98f53afd2fa0f30a' ], [ / protected / h'a1013823' / { \\ alg \\ 1:-36 } / , / unprotected / { / kid / 4:'bilbo.baggins@hobbiton.example' }, / signature / h'00a2d28a7c2bdb1587877420f65adf7d0b9a06635dd1 de64bb62974c863f0b160dd2163734034e6ac003b01e8705524c5c4ca479a952f024 7ee8cb0b4fb7397ba08d009e0c8bf482270cc5771aa143966e5a469a09f613488030 c5b07ec6d722e3835adb5b2d8c44e95ffb13877dd2582866883535de3bb03d01753f 83ab87bb4f7a0297' ] ] ] )",
      "ja": "。98（[/保護/ H ''、/非保護/ {} /ペイロード/ 'これは、コンテンツである' /署名/ [/保護/ h'a10126' / {\\ ALG \\ 1：-7 \\ ECDSA 256 \\} /、/非保護/ {/子供/ 4：'11' } /署名/ h'e2aeafd40d69d19dfe6e52077c5d7ff4e408282cbefb 5d06cbf414af2e19d982ac45ac98b8544c908b4507de1e90b717c3d34816fe926a2b 98f53afd2fa0f30a」]、[/保護/ h'a1013823' / {\\ ALG \\ 1：-36} /、 /非保護/ {/子供/ 4：'bilbo.baggins@hobbiton.example」} /署名/ h'00a2d28a7c2bdb1587877420f65adf7d0b9a06635dd1 de64bb62974c863f0b160dd2163734034e6ac003b01e8705524c5c4ca479a952f024 7ee8cb0b4fb7397ba08d009e0c8bf482270cc5771aa143966e5a469a09f613488030 c5b07ec6d722e3835adb5b2d8c44e95ffb13877dd2582866883535de3bb03d01753f 83ab87bb4f7a0297' ]]]）"
    },
    {
      "indent": 0,
      "text": "C.1.3. Counter Signature",
      "ja": "C.1.3。カウンター署名"
    },
    {
      "indent": 3,
      "text": "This example uses the following:",
      "ja": "この例では、次を使用しています。"
    },
    {
      "indent": 3,
      "text": "o Signature Algorithm: ECDSA w/ SHA-256, Curve P-256",
      "ja": "O署名アルゴリズム：/ SHA256、曲線P-256 ECDSA"
    },
    {
      "indent": 3,
      "text": "o The same parameters are used for both the signature and the counter signature.",
      "ja": "O同じパラメータは、署名及びカウンタ署名の両方のために使用されます。"
    },
    {
      "indent": 3,
      "text": "Size of binary file is 180 bytes",
      "ja": "バイナリファイルのサイズは180のバイトです"
    },
    {
      "indent": 3,
      "text": "98( [ / protected / h'', / unprotected / { / countersign / 7:[ / protected / h'a10126' / { \\ alg \\ 1:-7 \\ ECDSA 256 \\ } / , / unprotected / { / kid / 4:'11' }, / signature / h'5ac05e289d5d0e1b0a7f048a5d2b643813ded50bc9e4 9220f4f7278f85f19d4a77d655c9d3b51e805a74b099e1e085aacd97fc29d72f887e 8802bb6650cceb2c' ] }, / payload / 'This is the content.', / signatures / [ [ / protected / h'a10126' / { \\ alg \\ 1:-7 \\ ECDSA 256 \\ } / , / unprotected / { / kid / 4:'11' }, / signature / h'e2aeafd40d69d19dfe6e52077c5d7ff4e408282cbefb 5d06cbf414af2e19d982ac45ac98b8544c908b4507de1e90b717c3d34816fe926a2b 98f53afd2fa0f30a' ] ] ] )",
      "ja": "98（[/保護/ H ''、/非保護/ {/副署/ 7：[/保護/ h'a10126' / {\\ ALG 1 \\：-7 ECDSA 256 \\ \\} /、/非保護/ {/子供/ 4：'11' } /署名/ h'5ac05e289d5d0e1b0a7f048a5d2b643813ded50bc9e4 9220f4f7278f85f19d4a77d655c9d3b51e805a74b099e1e085aacd97fc29d72f887e 8802bb6650cceb2c」]} /ペイロード/ 'これは、コンテンツである。' /署名/ [/保護/ h'a10126' / {\\ ALG \\ 1： - 7 \\ ECDSA 256 \\} /、/非保護/ {/子供/ 4：'11' } /署名/ h'e2aeafd40d69d19dfe6e52077c5d7ff4e408282cbefb 5d06cbf414af2e19d982ac45ac98b8544c908b4507de1e90b717c3d34816fe926a2b 98f53afd2fa0f30a」]]]）"
    },
    {
      "indent": 0,
      "text": "C.1.4. Signature with Criticality",
      "ja": "C.1.4。臨界と署名"
    },
    {
      "indent": 3,
      "text": "This example uses the following:",
      "ja": "この例では、次を使用しています。"
    },
    {
      "indent": 3,
      "text": "o Signature Algorithm: ECDSA w/ SHA-256, Curve P-256",
      "ja": "O署名アルゴリズム：/ SHA256、曲線P-256 ECDSA"
    },
    {
      "indent": 3,
      "text": "o There is a criticality marker on the \"reserved\" header parameter",
      "ja": "O「予約済み」ヘッダパラメータの臨界マーカーがあります"
    },
    {
      "indent": 3,
      "text": "Size of binary file is 125 bytes",
      "ja": "バイナリファイルのサイズは125のバイトです"
    },
    {
      "indent": 3,
      "text": "98( [ / protected / h'a2687265736572766564f40281687265736572766564' / { \"reserved\":false, \\ crit \\ 2:[ \"reserved\" ] } / , / unprotected / {}, / payload / 'This is the content.', / signatures / [ [ / protected / h'a10126' / { \\ alg \\ 1:-7 \\ ECDSA 256 \\ } / , / unprotected / { / kid / 4:'11' }, / signature / h'3fc54702aa56e1b2cb20284294c9106a63f91bac658d 69351210a031d8fc7c5ff3e4be39445b1a3e83e1510d1aca2f2e8a7c081c7645042b 18aba9d1fad1bd9c' ] ] ] )",
      "ja": "98（[/保護/ h'a2687265736572766564f40281687265736572766564' / { \"予約\"：偽、\\クリティカル\\ 2：[ \"予約\"]} /、/非保護/ {} /ペイロード/ 'これはコンテンツである' /署名/ [/ / h'a10126' 保護/ {\\ ALG 1 \\：-7 ECDSA \\ 256 \\} /、/非保護/ {/子供/ 4：'11' } /署名/ h'3fc54702aa56e1b2cb20284294c9106a63f91bac658d 69351210a031d8fc7c5ff3e4be39445b1a3e83e1510d1aca2f2e8a7c081c7645042b 18aba9d1fad1bd9c」] ]]）"
    },
    {
      "indent": 0,
      "text": "C.2. Single Signer Examples",
      "ja": "C.2。シングル署名者の例"
    },
    {
      "indent": 0,
      "text": "C.2.1. Single ECDSA Signature",
      "ja": "C.2.1。シングルECDSA署名"
    },
    {
      "indent": 3,
      "text": "This example uses the following:",
      "ja": "この例では、次を使用しています。"
    },
    {
      "indent": 3,
      "text": "o Signature Algorithm: ECDSA w/ SHA-256, Curve P-256",
      "ja": "O署名アルゴリズム：/ SHA256、曲線P-256 ECDSA"
    },
    {
      "indent": 3,
      "text": "Size of binary file is 98 bytes",
      "ja": "バイナリファイルのサイズは98のバイトです"
    },
    {
      "indent": 3,
      "text": "18( [ / protected / h'a10126' / { \\ alg \\ 1:-7 \\ ECDSA 256 \\ } / , / unprotected / { / kid / 4:'11' }, / payload / 'This is the content.', / signature / h'8eb33e4ca31d1c465ab05aac34cc6b23d58fef5c083106c4 d25a91aef0b0117e2af9a291aa32e14ab834dc56ed2a223444547e01f11d3b0916e5 a4c345cacb36' ] )",
      "ja": "18（[/保護/ h'a10126' / {\\ ALG 1 \\：-7 ECDSA 256 \\ \\} /、/非保護/ {/子供/ 4：'11' } /ペイロード/ 'これはコンテンツです。' 、/署名/ h'8eb33e4ca31d1c465ab05aac34cc6b23d58fef5c083106c4 d25a91aef0b0117e2af9a291aa32e14ab834dc56ed2a223444547e01f11d3b0916e5 a4c345cacb36' ]）"
    },
    {
      "indent": 0,
      "text": "C.3. Examples of Enveloped Messages",
      "ja": "C.3。エンベロープメッセージの例"
    },
    {
      "indent": 0,
      "text": "C.3.1. Direct ECDH",
      "ja": "C.3.1。直接ECDH"
    },
    {
      "indent": 3,
      "text": "This example uses the following:",
      "ja": "この例では、次を使用しています。"
    },
    {
      "indent": 3,
      "text": "o CEK: AES-GCM w/ 128-bit key",
      "ja": "CEK O：AES-GCM 128ビット鍵/ W"
    },
    {
      "indent": 3,
      "text": "o Recipient class: ECDH Ephemeral-Static, Curve P-256",
      "ja": "O受信者クラス：ECDHエフェメラルスタティック、曲線P-256"
    },
    {
      "indent": 3,
      "text": "Size of binary file is 151 bytes",
      "ja": "バイナリファイルのサイズは151のバイトです"
    },
    {
      "indent": 3,
      "text": "96( [ / protected / h'a10101' / { \\ alg \\ 1:1 \\ AES-GCM 128 \\ } / , / unprotected / { / iv / 5:h'c9cf4df2fe6c632bf7886413' }, / ciphertext / h'7adbe2709ca818fb415f1e5df66f4e1a51053ba6d65a1a0 c52a357da7a644b8070a151b0', / recipients / [ [ / protected / h'a1013818' / { \\ alg \\ 1:-25 \\ ECDH-ES + HKDF-256 \\ } / , / unprotected / { / ephemeral / -1:{ / kty / 1:2, / crv / -1:1, / x / -2:h'98f50a4ff6c05861c8860d13a638ea56c3f5ad7590bbf bf054e1c7b4d91d6280', / y / -3:true }, / kid / 4:'meriadoc.brandybuck@buckland.example' }, / ciphertext / h'' ] ] ] )",
      "ja": "96（[/保護/ h'a10101' / {\\ ALG \\ 1：1 \\ AES-GCM 128 \\} /、/非保護/ {/ IV / 5：h'c9cf4df2fe6c632bf7886413' } /暗号文/ h'7adbe2709ca818fb415f1e5df66f4e1a51053ba6d65a1a0 c52a357da7a644b8070a151b0' 、/受信者/ [/保護/ h'a1013818' / {\\ ALG \\ 1：-25 \\ ECDH-ES + HKDF-256 \\} /、/非保護/ {/エフェメラル/ -1：{/ KTY / 1： 2、/ CRV / -1：1、/ X / -2：h'98f50a4ff6c05861c8860d13a638ea56c3f5ad7590bbfのbf054e1c7b4d91d6280' / Y / -3：真} /子供/ 4：'meriadoc.brandybuck@buckland.example」} /暗号文/ H '']]]）"
    },
    {
      "indent": 0,
      "text": "C.3.2. Direct Plus Key Derivation",
      "ja": "C.3.2。ダイレクトプラス鍵の導出"
    },
    {
      "indent": 3,
      "text": "This example uses the following:",
      "ja": "この例では、次を使用しています。"
    },
    {
      "indent": 3,
      "text": "o CEK: AES-CCM w/ 128-bit key, truncate the tag to 64 bits",
      "ja": "CEK O：AES-CCM 128ビットキー/ W、64ビットにタグを切り捨てます"
    },
    {
      "indent": 3,
      "text": "o Recipient class: Use HKDF on a shared secret with the following implicit fields as part of the context.",
      "ja": "O受信者のクラス：使用HKDFコンテキストの一部として、次の暗黙のフィールドを持つ共有秘密に。"
    },
    {
      "indent": 6,
      "text": "* salt: \"aabbccddeeffgghh\"",
      "ja": "*塩： \"aabbccddeeffgghh\""
    },
    {
      "indent": 6,
      "text": "* PartyU identity: \"lighting-client\"",
      "ja": "* PartyUアイデンティティ：「ライティング・クライアント」"
    },
    {
      "indent": 6,
      "text": "* PartyV identity: \"lighting-server\"",
      "ja": "* PartyVアイデンティティ：「ライティング・サーバー」"
    },
    {
      "indent": 6,
      "text": "* Supplementary Public Other: \"Encryption Example 02\"",
      "ja": "*補足公衆その他：「暗号化の例02」"
    },
    {
      "indent": 3,
      "text": "Size of binary file is 91 bytes",
      "ja": "バイナリファイルのサイズは91のバイトです"
    },
    {
      "indent": 3,
      "text": "96( [ / protected / h'a1010a' / { \\ alg \\ 1:10 \\ AES-CCM-16-64-128 \\ } / , / unprotected / { / iv / 5:h'89f52f65a1c580933b5261a76c' }, / ciphertext / h'753548a19b1307084ca7b2056924ed95f2e3b17006dfe93 1b687b847', / recipients / [ [ / protected / h'a10129' / { \\ alg \\ 1:-10 } / , / unprotected / { / salt / -20:'aabbccddeeffgghh', / kid / 4:'our-secret' }, / ciphertext / h'' ] ] ] )",
      "ja": "96（[/保護/ h'a1010a '/ {\\ ALG 1：10 \\ \\ AES-CCM-16-64-128 \\} /、/非保護/ {/ IV / 5：h'89f52f65a1c580933b5261a76c'} /暗号文/ h'753548a19b1307084ca7b2056924ed95f2e3b17006dfe93 1b687b847' /受信者/ [/保護/ h'a10129' / {\\ ALG \\ 1：-10} /、/非保護/ {/塩/ -20： 'aabbccddeeffgghh' /子供/ 4」私たちの秘密」}、/暗号文/ H '']]]）"
    },
    {
      "indent": 0,
      "text": "C.3.3. Counter Signature on Encrypted Content",
      "ja": "C.3.3。暗号化コンテンツのカウンター署名"
    },
    {
      "indent": 3,
      "text": "This example uses the following:",
      "ja": "この例では、次を使用しています。"
    },
    {
      "indent": 3,
      "text": "o CEK: AES-GCM w/ 128-bit key",
      "ja": "CEK O：AES-GCM 128ビット鍵/ W"
    },
    {
      "indent": 3,
      "text": "o Recipient class: ECDH Ephemeral-Static, Curve P-256",
      "ja": "O受信者クラス：ECDHエフェメラルスタティック、曲線P-256"
    },
    {
      "indent": 3,
      "text": "Size of binary file is 326 bytes",
      "ja": "バイナリファイルのサイズは326のバイトです"
    },
    {
      "indent": 3,
      "text": "96( [ / protected / h'a10101' / { \\ alg \\ 1:1 \\ AES-GCM 128 \\ } / , / unprotected / { / iv / 5:h'c9cf4df2fe6c632bf7886413', / countersign / 7:[ / protected / h'a1013823' / { \\ alg \\ 1:-36 } / , / unprotected / { / kid / 4:'bilbo.baggins@hobbiton.example' }, / signature / h'00929663c8789bb28177ae28467e66377da12302d7f9 594d2999afa5dfa531294f8896f2b6cdf1740014f4c7f1a358e3a6cf57f4ed6fb02f cf8f7aa989f5dfd07f0700a3a7d8f3c604ba70fa9411bd10c2591b483e1d2c31de00 3183e434d8fba18f17a4c7e3dfa003ac1cf3d30d44d2533c4989d3ac38c38b71481c c3430c9d65e7ddff' ] }, / ciphertext / h'7adbe2709ca818fb415f1e5df66f4e1a51053ba6d65a1a0 c52a357da7a644b8070a151b0', / recipients / [ [ / protected / h'a1013818' / { \\ alg \\ 1:-25 \\ ECDH-ES + HKDF-256 \\ } / , / unprotected / { / ephemeral / -1:{ / kty / 1:2, / crv / -1:1, / x / -2:h'98f50a4ff6c05861c8860d13a638ea56c3f5ad7590bbf bf054e1c7b4d91d6280', / y / -3:true }, / kid / 4:'meriadoc.brandybuck@buckland.example' }, / ciphertext / h'' ] ] ] )",
      "ja": "96（[/保護/ h'a10101' / {\\ ALG \\ 1：1 \\ AES-GCM 128 \\} /、/非保護/ {/ IV / 5：h'c9cf4df2fe6c632bf7886413' 、/副署/ 7：[/保護/ h'a1013823' / {\\ ALG \\ 1：-36} /、/非保護/ {/子供/ 4：'bilbo.baggins@hobbiton.example '} /署名/ h'00929663c8789bb28177ae28467e66377da12302d7f9 594d2999afa5dfa531294f8896f2b6cdf1740014f4c7f1a358e3a6cf57f4ed6fb02f cf8f7aa989f5dfd07f0700a3a7d8f3c604ba70fa9411bd10c2591b483e1d2c31de00 3183e434d8fba18f17a4c7e3dfa003ac1cf3d30d44d2533c4989d3ac38c38b71481c c3430c9d65e7ddff']}、 /暗号文/ h'7adbe2709ca818fb415f1e5df66f4e1a51053ba6d65a1a0 c52a357da7a644b8070a151b0' /受信者/ [/保護/ h'a1013818' / {\\ ALG \\ 1：-25 ECDH-ES + HKDF-256 \\ \\} /、/非保護/ {/エフェメラル/  - 1：{/ KTY / 1：2、/ CRV / -1：1、/ X / -2：h'98f50a4ff6c05861c8860d13a638ea56c3f5ad7590bbfのbf054e1c7b4d91d6280' / Y / -3：真} /子供/ 4：'meriadoc.brandybuck@buckland 。実施例」} /暗号文/ H '']]]）"
    },
    {
      "indent": 0,
      "text": "C.3.4. Encrypted Content with External Data",
      "ja": "C.3.4。外部データで暗号化されたコンテンツ"
    },
    {
      "indent": 3,
      "text": "This example uses the following:",
      "ja": "この例では、次を使用しています。"
    },
    {
      "indent": 3,
      "text": "o CEK: AES-GCM w/ 128-bit key",
      "ja": "CEK O：AES-GCM 128ビット鍵/ W"
    },
    {
      "indent": 3,
      "text": "o Recipient class: ECDH static-Static, Curve P-256 with AES Key Wrap",
      "ja": "O受信者クラス：AESキーラップとECDH静電気静電気、曲線P-256"
    },
    {
      "indent": 3,
      "text": "o Externally Supplied AAD: h'0011bbcc22dd44ee55ff660077'",
      "ja": "O外部から供給されるAAD：h'0011bbcc22dd44ee55ff660077'"
    },
    {
      "indent": 3,
      "text": "Size of binary file is 173 bytes",
      "ja": "バイナリファイルのサイズは173のバイトです"
    },
    {
      "indent": 3,
      "text": "96( [ / protected / h'a10101' / { \\ alg \\ 1:1 \\ AES-GCM 128 \\ } / , / unprotected / { / iv / 5:h'02d1f7e6f26c43d4868d87ce' }, / ciphertext / h'64f84d913ba60a76070a9a48f26e97e863e28529d8f5335 e5f0165eee976b4a5f6c6f09d', / recipients / [ [ / protected / h'a101381f' / { \\ alg \\ 1:-32 \\ ECHD-SS+A128KW \\ } / , / unprotected / { / static kid / -3:'peregrin.took@tuckborough.example', / kid / 4:'meriadoc.brandybuck@buckland.example', / U nonce / -22:h'0101' }, / ciphertext / h'41e0d76f579dbd0d936a662d54d8582037de2e366fd e1c62' ] ] ] )",
      "ja": "96（[/保護/ h'a10101' / {\\ ALG \\ 1：1 \\ AES-GCM 128 \\} /、/非保護/ {/ IV / 5：h'02d1f7e6f26c43d4868d87ce '} /暗号文/ h'64f84d913ba60a76070a9a48f26e97e863e28529d8f5335 e5f0165eee976b4a5f6c6f09d' 、/受信者/ [/保護/ h'a101381f」/ {\\ ALG 1 \\：-32 ECHD-SS + A128KW \\ \\} /、/非保護/ {/静的子供/ -3：'peregrin.took@tuckborough。例えば ​​'/子供/ 4：'meriadoc.brandybuck@buckland.example'、/ Uナンス/ -22：h'0101' } /暗号文/ h'41e0d76f579dbd0d936a662d54d8582037de2e366fd e1c62' ]]]）"
    },
    {
      "indent": 0,
      "text": "C.4. Examples of Encrypted Messages",
      "ja": "C.4。暗号化されたメッセージの例"
    },
    {
      "indent": 0,
      "text": "C.4.1. Simple Encrypted Message",
      "ja": "C.4.1。簡単な暗号化されたメッセージ"
    },
    {
      "indent": 3,
      "text": "This example uses the following:",
      "ja": "この例では、次を使用しています。"
    },
    {
      "indent": 3,
      "text": "o CEK: AES-CCM w/ 128-bit key and a 64-bit tag",
      "ja": "CEK O：AES-CCM 128ビットキーと64ビットのタグ/ W"
    },
    {
      "indent": 3,
      "text": "Size of binary file is 52 bytes",
      "ja": "バイナリファイルのサイズは52のバイトです"
    },
    {
      "indent": 3,
      "text": "16( [ / protected / h'a1010a' / { \\ alg \\ 1:10 \\ AES-CCM-16-64-128 \\ } / , / unprotected / { / iv / 5:h'89f52f65a1c580933b5261a78c' }, / ciphertext / h'5974e1b99a3a4cc09a659aa2e9e7fff161d38ce71cb45ce 460ffb569' ] )",
      "ja": "16（[/保護/ h'a1010a '/ {\\ ALG 1：10 \\ \\ AES-CCM-16-64-128 \\} /、/非保護/ {/ IV / 5：h'89f52f65a1c580933b5261a78c'} /暗号文/ h'5974e1b99a3a4cc09a659aa2e9e7fff161d38ce71cb45ce 460ffb569' ]）"
    },
    {
      "indent": 0,
      "text": "C.4.2. Encrypted Message with a Partial IV",
      "ja": "C.4.2。部分IVで暗号化したメッセージ"
    },
    {
      "indent": 3,
      "text": "This example uses the following:",
      "ja": "この例では、次を使用しています。"
    },
    {
      "indent": 3,
      "text": "o CEK: AES-CCM w/ 128-bit key and a 64-bit tag",
      "ja": "CEK O：AES-CCM 128ビットキーと64ビットのタグ/ W"
    },
    {
      "indent": 3,
      "text": "o Prefix for IV is 89F52F65A1C580933B52",
      "ja": "O IVのための接頭辞89F52F65A1C580933B52です"
    },
    {
      "indent": 3,
      "text": "Size of binary file is 41 bytes",
      "ja": "バイナリファイルのサイズは41のバイトです"
    },
    {
      "indent": 3,
      "text": "16( [ / protected / h'a1010a' / { \\ alg \\ 1:10 \\ AES-CCM-16-64-128 \\ } / , / unprotected / { / partial iv / 6:h'61a7' }, / ciphertext / h'252a8911d465c125b6764739700f0141ed09192de139e05 3bd09abca' ] )",
      "ja": "16（[/保護/ h'a1010a」/ {\\ ALG AES-CCM-16-64-128 \\ \\ 1：10 \\} /、/非保護/ {/部分IV / 6：h'61a7' } /暗号文/ h'252a8911d465c125b6764739700f0141ed09192de139e05 3bd09abca」]）"
    },
    {
      "indent": 0,
      "text": "C.5. Examples of MACed Messages",
      "ja": "C.5。 MACedメッセージの例"
    },
    {
      "indent": 0,
      "text": "C.5.1. Shared Secret Direct MAC",
      "ja": "C.5.1。共有シークレット直接MAC"
    },
    {
      "indent": 3,
      "text": "This example uses the following:",
      "ja": "この例では、次を使用しています。"
    },
    {
      "indent": 3,
      "text": "o MAC: AES-CMAC, 256-bit key, truncated to 64 bits",
      "ja": "O MAC：AES-CMAC、256ビットキー、64ビットに切り捨て"
    },
    {
      "indent": 3,
      "text": "o Recipient class: direct shared secret",
      "ja": "O受信者のクラス：直接共有秘密"
    },
    {
      "indent": 3,
      "text": "Size of binary file is 57 bytes",
      "ja": "バイナリファイルのサイズは57のバイトです"
    },
    {
      "indent": 3,
      "text": "97( [ / protected / h'a1010f' / { \\ alg \\ 1:15 \\ AES-CBC-MAC-256//64 \\ } / , / unprotected / {}, / payload / 'This is the content.', / tag / h'9e1226ba1f81b848', / recipients / [ [ / protected / h'', / unprotected / { / alg / 1:-6 / direct /, / kid / 4:'our-secret' }, / ciphertext / h'' ] ] ] )",
      "ja": "97（[/保護/ h'a1010f」/ {\\ ALG 1：15 \\ \\ AES-CBC-MAC-256 // 64 \\} /、/、/ペイロード/} {/保護されていない 'これはコンテンツです。'、 /タグ/ h'9e1226ba1f81b848' /受信者/ [/保護/ H ''、/非保護/ {/ ALG / 1：-6 /ダイレクト/、/子供/ 4： '私達の秘密'} /暗号文/ H '']]]）"
    },
    {
      "indent": 0,
      "text": "C.5.2. ECDH Direct MAC",
      "ja": "C.5.2。 ECDH直接MAC"
    },
    {
      "indent": 3,
      "text": "This example uses the following:",
      "ja": "この例では、次を使用しています。"
    },
    {
      "indent": 3,
      "text": "o MAC: HMAC w/SHA-256, 256-bit key",
      "ja": "O MAC：W HMAC / SHA-256、256ビットキー"
    },
    {
      "indent": 3,
      "text": "o Recipient class: ECDH key agreement, two static keys, HKDF w/ context structure",
      "ja": "O受信者クラス：ECDH鍵協定、2つの静的キー、HKDFワット/コンテキスト構造"
    },
    {
      "indent": 3,
      "text": "Size of binary file is 214 bytes",
      "ja": "バイナリファイルのサイズは214のバイトです"
    },
    {
      "indent": 3,
      "text": "97( [ / protected / h'a10105' / { \\ alg \\ 1:5 \\ HMAC 256//256 \\ } / , / unprotected / {}, / payload / 'This is the content.', / tag / h'81a03448acd3d305376eaa11fb3fe416a955be2cbe7ec96f012c99 4bc3f16a41', / recipients / [ [ / protected / h'a101381a' / { \\ alg \\ 1:-27 \\ ECDH-SS + HKDF-256 \\ } / , / unprotected / { / static kid / -3:'peregrin.took@tuckborough.example', / kid / 4:'meriadoc.brandybuck@buckland.example', / U nonce / -22:h'4d8553e7e74f3c6a3a9dd3ef286a8195cbf8a23d 19558ccfec7d34b824f42d92bd06bd2c7f0271f0214e141fb779ae2856abf585a583 68b017e7f2a9e5ce4db5' }, / ciphertext / h'' ] ] ] )",
      "ja": "97（[/保護/ h'a10105' / {\\ ALG \\ 1：5 \\ HMAC 256 // 256 \\} /、/非保護/ {} /ペイロード/ 'これはコンテンツである' /タグ/ H」 81a03448acd3d305376eaa11fb3fe416a955be2cbe7ec96f012c99 4bc3f16a41' /受信者/ [/保護/ h'a101381a '/ {\\ ALG \\ 1：-27 \\ ECDH-SS + HKDF-256 \\} /、/非保護/ {/静的子供/ -3' Peregrinの.took @ tuckborough.example '/子供/ 4：'meriadoc.brandybuck@buckland.example'、/ Uノンス/ -22：h'4d8553e7e74f3c6a3a9dd3ef286a8195cbf8a23d 19558ccfec7d34b824f42d92bd06bd2c7f0271f0214e141fb779ae2856abf585a583 68b017e7f2a9e5ce4db5' } /暗号文/ H '']]]）"
    },
    {
      "indent": 0,
      "text": "C.5.3. Wrapped MAC",
      "ja": "C.5.3。包まれたMAC"
    },
    {
      "indent": 3,
      "text": "This example uses the following:",
      "ja": "この例では、次を使用しています。"
    },
    {
      "indent": 3,
      "text": "o MAC: AES-MAC, 128-bit key, truncated to 64 bits",
      "ja": "O MAC：AES-MAC、128ビットキー、64ビットに切り捨て"
    },
    {
      "indent": 3,
      "text": "o Recipient class: AES Key Wrap w/ a pre-shared 256-bit key",
      "ja": "O受信者クラス：AESキーラップ事前共有256ビット鍵/ W"
    },
    {
      "indent": 3,
      "text": "Size of binary file is 109 bytes",
      "ja": "バイナリファイルのサイズは109のバイトです"
    },
    {
      "indent": 3,
      "text": "97( [ / protected / h'a1010e' / { \\ alg \\ 1:14 \\ AES-CBC-MAC-128//64 \\ } / , / unprotected / {}, / payload / 'This is the content.', / tag / h'36f5afaf0bab5d43', / recipients / [ [ / protected / h'', / unprotected / { / alg / 1:-5 / A256KW /, / kid / 4:'018c0ae5-4d9b-471b-bfd6-eef314bc7037' }, / ciphertext / h'711ab0dc2fc4585dce27effa6781c8093eba906f227 b6eb0' ] ] ] )",
      "ja": "97（[/保護/ h'a1010e」/ {\\ ALG 1：14 \\ \\ AES-CBC-MAC-128 // 64 \\} /、/、/ペイロード/} {/保護されていない 'これはコンテンツです。'、 /タグ/ h'36f5afaf0bab5d43' /受信者/ [/保護/ H ''、/非保護/ {/ ALG / 1：-5 / A256KW /、/子供/ 4： '018c0ae5-4d9b-471B-bfd6-eef314bc7037 '} /暗号文/ h'711ab0dc2fc4585dce27effa6781c8093eba906f227 b6eb0']]]）"
    },
    {
      "indent": 0,
      "text": "C.5.4. Multi-Recipient MACed Message",
      "ja": "C.5.4。マルチ受信者MACedメッセージ"
    },
    {
      "indent": 3,
      "text": "This example uses the following:",
      "ja": "この例では、次を使用しています。"
    },
    {
      "indent": 3,
      "text": "o MAC: HMAC w/ SHA-256, 128-bit key",
      "ja": "O MAC：HMAC / SHA256と、128ビットの鍵"
    },
    {
      "indent": 3,
      "text": "o Recipient class: Uses three different methods",
      "ja": "O受信者のクラスは：3つの異なる方法を使用します"
    },
    {
      "indent": 6,
      "text": "1. ECDH Ephemeral-Static, Curve P-521, AES Key Wrap w/ 128-bit key",
      "ja": "1. ECDHエフェメラルスタティック曲線P-521、AESキーラップW / 128ビット鍵"
    },
    {
      "indent": 6,
      "text": "2. AES Key Wrap w/ 256-bit key",
      "section_title": true,
      "ja": "2. AESキーラップワット/ 256ビットの鍵"
    },
    {
      "indent": 3,
      "text": "Size of binary file is 309 bytes",
      "ja": "バイナリファイルのサイズは309のバイトです"
    },
    {
      "indent": 3,
      "text": "97( [ / protected / h'a10105' / { \\ alg \\ 1:5 \\ HMAC 256//256 \\ } / , / unprotected / {}, / payload / 'This is the content.', / tag / h'bf48235e809b5c42e995f2b7d5fa13620e7ed834e337f6aa43df16 1e49e9323e', / recipients / [ [ / protected / h'a101381c' / { \\ alg \\ 1:-29 \\ ECHD-ES+A128KW \\ } / , / unprotected / { / ephemeral / -1:{ / kty / 1:2, / crv / -1:3, / x / -2:h'0043b12669acac3fd27898ffba0bcd2e6c366d53bc4db 71f909a759304acfb5e18cdc7ba0b13ff8c7636271a6924b1ac63c02688075b55ef2 d613574e7dc242f79c3', / y / -3:true }, / kid / 4:'bilbo.baggins@hobbiton.example' }, / ciphertext / h'339bc4f79984cdc6b3e6ce5f315a4c7d2b0ac466fce a69e8c07dfbca5bb1f661bc5f8e0df9e3eff5' ], [ / protected / h'', / unprotected / { / alg / 1:-5 / A256KW /, / kid / 4:'018c0ae5-4d9b-471b-bfd6-eef314bc7037' }, / ciphertext / h'0b2c7cfce04e98276342d6476a7723c090dfdd15f9a 518e7736549e998370695e6d6a83b4ae507bb' ] ] ] )",
      "ja": "97（[/保護/ h'a10105' / {\\ ALG \\ 1：5 \\ HMAC 256 // 256 \\} /、/非保護/ {} /ペイロード/ 'これはコンテンツである' /タグ/ H」 bf48235e809b5c42e995f2b7d5fa13620e7ed834e337f6aa43df16 1e49e9323e '/受信者/ [/保護/ h'a101381c' / {\\ ALG \\ 1：-29 ECHD-ES + A128KW \\ \\}：{/ KTY / 1 /、/非保護/ {/エフェメラル/ -1 ：2、/ CRV / -1：3 / X / -2：h'0043b12669acac3fd27898ffba0bcd2e6c366d53bc4db 71f909a759304acfb5e18cdc7ba0b13ff8c7636271a6924b1ac63c02688075b55ef2 d613574e7dc242f79c3' / Y / -3：真} /子供/ 4：'bilbo.baggins@hobbiton.example」} /暗号文/ h'339bc4f79984cdc6b3e6ce5f315a4c7d2b0ac466fce a69e8c07dfbca5bb1f661bc5f8e0df9e3eff5' ]、[/保護/ H ''、/非保護/ {/ ALG / 1：-5 / A256KW /、/子供/ 4： '018c0ae5-4d9b-471B-bfd6-eef314bc7037'}、 /暗号文/ h'0b2c7cfce04e98276342d6476a7723c090dfdd15f9a 518e7736549e998370695e6d6a83b4ae507bb」]]]）"
    },
    {
      "indent": 0,
      "text": "C.6. Examples of MAC0 Messages",
      "ja": "C.6。 MAC0メッセージの例"
    },
    {
      "indent": 0,
      "text": "C.6.1. Shared Secret Direct MAC",
      "ja": "C.6.1。共有シークレット直接MAC"
    },
    {
      "indent": 3,
      "text": "This example uses the following:",
      "ja": "この例では、次を使用しています。"
    },
    {
      "indent": 3,
      "text": "o MAC: AES-CMAC, 256-bit key, truncated to 64 bits",
      "ja": "O MAC：AES-CMAC、256ビットキー、64ビットに切り捨て"
    },
    {
      "indent": 3,
      "text": "o Recipient class: direct shared secret",
      "ja": "O受信者のクラス：直接共有秘密"
    },
    {
      "indent": 3,
      "text": "Size of binary file is 37 bytes",
      "ja": "バイナリファイルのサイズは37のバイトです"
    },
    {
      "indent": 3,
      "text": "17( [ / protected / h'a1010f' / { \\ alg \\ 1:15 \\ AES-CBC-MAC-256//64 \\ } / , / unprotected / {}, / payload / 'This is the content.', / tag / h'726043745027214f' ] )",
      "ja": "17（[/保護/ h'a1010f」/ {\\ ALG 1：15 \\ \\ AES-CBC-MAC-256 // 64 \\} /、/、/ペイロード/} {/保護されていない 'これはコンテンツです。'、 /タグ/ h'726043745027214f」]）"
    },
    {
      "indent": 3,
      "text": "Note that this example uses the same inputs as Appendix C.5.1.",
      "ja": "この例は、付録C.5.1と同じ入力を使用することに注意してください。"
    },
    {
      "indent": 0,
      "text": "C.7. COSE Keys",
      "ja": "C.7。 THINGSキー"
    },
    {
      "indent": 0,
      "text": "C.7.1. Public Keys",
      "ja": "C.7.1。公開鍵"
    },
    {
      "indent": 3,
      "text": "This is an example of a COSE Key Set. This example includes the public keys for all of the previous examples.",
      "ja": "これは、COSEキーセットの一例です。この例は、前の例のすべての公開鍵が含まれています。"
    },
    {
      "indent": 3,
      "text": "In order the keys are:",
      "ja": "ためには、キーは以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "o An EC key with a kid of \"meriadoc.brandybuck@buckland.example\"",
      "ja": "「meriadoc.brandybuck@buckland.example」の子供を持つECキーO"
    },
    {
      "indent": 3,
      "text": "o An EC key with a kid of \"peregrin.took@tuckborough.example\"",
      "ja": "「peregrin.took@tuckborough.example」の子供を持つECキーO"
    },
    {
      "indent": 3,
      "text": "o An EC key with a kid of \"bilbo.baggins@hobbiton.example\"",
      "ja": "「bilbo.baggins@hobbiton.example」の子供を持つECキーO"
    },
    {
      "indent": 3,
      "text": "o An EC key with a kid of \"11\"",
      "ja": "「11」の子供を持つECキーO"
    },
    {
      "indent": 3,
      "text": "Size of binary file is 481 bytes",
      "ja": "バイナリファイルのサイズは481のバイトです"
    },
    {
      "indent": 3,
      "text": "[ { -1:1, -2:h'65eda5a12577c2bae829437fe338701a10aaa375e1bb5b5de108de439c0 8551d', -3:h'1e52ed75701163f7f9e40ddf9f341b3dc9ba860af7e0ca7ca7e9eecd008 4d19c', 1:2, 2:'meriadoc.brandybuck@buckland.example' }, { -1:1, -2:h'bac5b11cad8f99f9c72b05cf4b9e26d244dc189f745228255a219a86d6a 09eff', -3:h'20138bf82dc1b6d562be0fa54ab7804a3a64b6d72ccfed6b6fb6ed28bbf c117e', 1:2, 2:'11' }, { -1:3, -2:h'0072992cb3ac08ecf3e5c63dedec0d51a8c1f79ef2f82f94f3c737bf5de 7986671eac625fe8257bbd0394644caaa3aaf8f27a4585fbbcad0f2457620085e5c8 f42ad', -3:h'01dca6947bce88bc5790485ac97427342bc35f887d86d65a089377e247e 60baa55e4e8501e2ada5724ac51d6909008033ebc10ac999b9d7f5cc2519f3fe1ea1 d9475', 1:2, 2:'bilbo.baggins@hobbiton.example' }, { -1:1, -2:h'98f50a4ff6c05861c8860d13a638ea56c3f5ad7590bbfbf054e1c7b4d91 d6280', -3:h'f01400b089867804b8e9fc96c3932161f1934f4223069170d924b7e03bf 822bb', 1:2, 2:'peregrin.took@tuckborough.example' } ]",
      "ja": "[{-1：1、-2：h'65eda5a12577c2bae829437fe338701a10aaa375e1bb5b5de108de439c0 ​​8551d '-3：h'1e52ed75701163f7f9e40ddf9f341b3dc9ba860af7e0ca7ca7e9eecd008 4d19c'、1：2,2：'meriadoc.brandybuck@buckland.example」}、{-1：1、-2 ：h'bac5b11cad8f99f9c72b05cf4b9e26d244dc189f745228255a219a86d6aの09eff '-3：h'20138bf82dc1b6d562be0fa54ab7804a3a64b6d72ccfed6b6fb6ed28bbfのc117e'、1：2,2：'11' }、{-1：3、-2：h'0072992cb3ac08ecf3e5c63dedec0d51a8c1f79ef2f82f94f3c737bf5de 7986671eac625fe8257bbd0394644caaa3aaf8f27a4585fbbcad0f2457620085e5c8 f42ad」、-3：h'01dca6947bce88bc5790485ac97427342bc35f887d86d65a089377e247e 60baa55e4e8501e2ada5724ac51d6909008033ebc10ac999b9d7f5cc2519f3fe1ea1 d9475' 、1：2,2：'bilbo.baggins@hobbiton.example '}、{-1：1、-2：h'98f50a4ff6c05861c8860d13a638ea56c3f5ad7590bbfbf054e1c7b4d91のd6280' 、-3：h'f01400b089867804b8e9fc96c3932161f1934f4223069170d924b7e03bfの822bb'、1：2,2： 'peregrin.took@tuckborough.example'}]"
    },
    {
      "indent": 0,
      "text": "C.7.2. Private Keys",
      "ja": "C.7.2。秘密鍵"
    },
    {
      "indent": 3,
      "text": "This is an example of a COSE Key Set. This example includes the private keys for all of the previous examples.",
      "ja": "これは、COSEキーセットの一例です。この例は、前の例のすべてのための秘密鍵が含まれています。"
    },
    {
      "indent": 3,
      "text": "In order the keys are:",
      "ja": "ためには、キーは以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "o An EC key with a kid of \"meriadoc.brandybuck@buckland.example\"",
      "ja": "「meriadoc.brandybuck@buckland.example」の子供を持つECキーO"
    },
    {
      "indent": 3,
      "text": "o A shared-secret key with a kid of \"our-secret\"",
      "ja": "O「私たちの秘密」の子供と共有秘密鍵"
    },
    {
      "indent": 3,
      "text": "o An EC key with a kid of \"peregrin.took@tuckborough.example\"",
      "ja": "「peregrin.took@tuckborough.example」の子供を持つECキーO"
    },
    {
      "indent": 3,
      "text": "o A shared-secret key with a kid of \"018c0ae5-4d9b-471b-bfd6-eef314bc7037\"",
      "ja": "O \"018c0ae5-4d9b-471B-bfd6-eef314bc7037\" の子供と共有秘密鍵"
    },
    {
      "indent": 3,
      "text": "o An EC key with a kid of \"bilbo.baggins@hobbiton.example\"",
      "ja": "「bilbo.baggins@hobbiton.example」の子供を持つECキーO"
    },
    {
      "indent": 3,
      "text": "o An EC key with a kid of \"11\"",
      "ja": "「11」の子供を持つECキーO"
    },
    {
      "indent": 3,
      "text": "Size of binary file is 816 bytes",
      "ja": "バイナリファイルのサイズは816のバイトです"
    },
    {
      "indent": 3,
      "text": "[ { 1:2, 2:'meriadoc.brandybuck@buckland.example', -1:1, -2:h'65eda5a12577c2bae829437fe338701a10aaa375e1bb5b5de108de439c0 8551d', -3:h'1e52ed75701163f7f9e40ddf9f341b3dc9ba860af7e0ca7ca7e9eecd008 4d19c', -4:h'aff907c99f9ad3aae6c4cdf21122bce2bd68b5283e6907154ad911840fa 208cf' }, { 1:2, 2:'11', -1:1, -2:h'bac5b11cad8f99f9c72b05cf4b9e26d244dc189f745228255a219a86d6a 09eff', -3:h'20138bf82dc1b6d562be0fa54ab7804a3a64b6d72ccfed6b6fb6ed28bbf c117e', -4:h'57c92077664146e876760c9520d054aa93c3afb04e306705db609030850 7b4d3' }, { 1:2, 2:'bilbo.baggins@hobbiton.example',",
      "ja": "[{1：2,2：'meriadoc.brandybuck@buckland.example '-1：1、-2：h'65eda5a12577c2bae829437fe338701a10aaa375e1bb5b5de108de439c0 ​​8551d'、-3：h'1e52ed75701163f7f9e40ddf9f341b3dc9ba860af7e0ca7ca7e9eecd008 4d19c '-4：h'aff907c99f9ad3aae6c4cdf21122bce2bd68b5283e6907154ad911840fa 208cf'} 、{1：2,2：'11' 、-1：1、-2：h'bac5b11cad8f99f9c72b05cf4b9e26d244dc189f745228255a219a86d6aの09eff '-3：h'20138bf82dc1b6d562be0fa54ab7804a3a64b6d72ccfed6b6fb6ed28bbfのc117e'、-4：h'57c92077664146e876760c9520d054aa93c3afb04e306705db609030850 7b4d3' }、{1：2、 2：'bilbo.baggins@hobbiton.example」、"
    },
    {
      "indent": 3,
      "text": " -1:3, -2:h'0072992cb3ac08ecf3e5c63dedec0d51a8c1f79ef2f82f94f3c737bf5de 7986671eac625fe8257bbd0394644caaa3aaf8f27a4585fbbcad0f2457620085e5c8 f42ad', -3:h'01dca6947bce88bc5790485ac97427342bc35f887d86d65a089377e247e 60baa55e4e8501e2ada5724ac51d6909008033ebc10ac999b9d7f5cc2519f3fe1ea1 d9475', -4:h'00085138ddabf5ca975f5860f91a08e91d6d5f9a76ad4018766a476680b 55cd339e8ab6c72b5facdb2a2a50ac25bd086647dd3e2e6e99e84ca2c3609fdf177f eb26d' }, { 1:4, 2:'our-secret', -1:h'849b57219dae48de646d07dbb533566e976686457c1491be3a76dcea6c4 27188' }, { 1:2, -1:1, 2:'peregrin.took@tuckborough.example', -2:h'98f50a4ff6c05861c8860d13a638ea56c3f5ad7590bbfbf054e1c7b4d91 d6280', -3:h'f01400b089867804b8e9fc96c3932161f1934f4223069170d924b7e03bf 822bb', -4:h'02d1f7e6f26c43d4868d87ceb2353161740aacf1f7163647984b522a848 df1c3' }, { 1:4, 2:'our-secret2', -1:h'849b5786457c1491be3a76dcea6c4271' }, { 1:4, 2:'018c0ae5-4d9b-471b-bfd6-eef314bc7037', -1:h'849b57219dae48de646d07dbb533566e976686457c1491be3a76dcea6c4 27188' } ]",
      "ja": "-1：3、-2：h'0072992cb3ac08ecf3e5c63dedec0d51a8c1f79ef2f82f94f3c737bf5de 7986671eac625fe8257bbd0394644caaa3aaf8f27a4585fbbcad0f2457620085e5c8 f42ad '-3：h'01dca6947bce88bc5790485ac97427342bc35f887d86d65a089377e247eの60baa55e4e8501e2ada5724ac51d6909008033ebc10ac999b9d7f5cc2519f3fe1ea1のd9475' 、-4：h'00085138ddabf5ca975f5860f91a08e91d6d5f9a76ad4018766a476680b 55cd339e8ab6c72b5facdb2a2a50ac25bd086647dd3e2e6e99e84ca2c3609fdf177f eb26d'}、{1：4、2： '私達の秘密'、 - 1：h'849b57219dae48de646d07dbb533566e976686457c1491be3a76dcea6c4の27188' }、{1：2、-1：1、2：'peregrin.took@tuckborough.example '-2：h'98f50a4ff6c05861c8860d13a638ea56c3f5ad7590bbfbf054e1c7b4d91のd6280' 、-3：h'f01400b089867804b8e9fc96c3932161f1934f4223069170d924b7e03bfの822bb'、 - 4：h'02d1f7e6f26c43d4868d87ceb2353161740aacf1f7163647984b522a848 df1c3' }、{1：4、2： '私達の-secret2'、-1：h'849b5786457c1491be3a76dcea6c4271' }、{1：4、2： '018c0ae5-4d9b-471B-bfd6-eef314bc7037'、 -1：h'849b57219dae48de646d07dbb533566e976686457c1491be3a76dcea6c4 27188' }]"
    },
    {
      "indent": 0,
      "text": "Acknowledgments",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "This document is a product of the COSE working group of the IETF.",
      "ja": "この文書は、IETFのCOSEワーキンググループの製品です。"
    },
    {
      "indent": 3,
      "text": "The following individuals are to blame for getting me started on this project in the first place: Richard Barnes, Matt Miller, and Martin Thomson.",
      "ja": "リチャード・バーンズ、マット・ミラー、そしてマーティン・トムソン：以下の個人は私が最初の場所で、このプロジェクトでの開始に責任があります。"
    },
    {
      "indent": 3,
      "text": "The initial version of the specification was based to some degree on the outputs of the JOSE and S/MIME working groups.",
      "ja": "仕様の最初のバージョンは、JOSEおよびS / MIME作業部会の出力にある程度基づいていました。"
    },
    {
      "indent": 3,
      "text": "The following individuals provided input into the final form of the document: Carsten Bormann, John Bradley, Brain Campbell, Michael B. Jones, Ilari Liusvaara, Francesca Palombini, Ludwig Seitz, and Goran Selander.",
      "ja": "カルステンボルマン、ジョン・ブラッドリー、脳キャンベル、マイケルB.ジョーンズ、Ilari Liusvaara、フランチェスカPalombini、ルートヴィヒ・サイツ、およびゴランSelander：以下の個人は、文書の最終形態への入力を提供します。"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Jim Schaad August Cellars",
      "ja": "ジムSchaad 8月セラーズ"
    },
    {
      "indent": 3,
      "text": "Email: ietf@augustcellars.com",
      "ja": "メール：ietf@augustcellars.com"
    }
  ]
}