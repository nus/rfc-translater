{
  "title": {
    "text": "RFC 8061 - Locator/ID Separation Protocol (LISP) Data-Plane Confidentiality",
    "ja": "RFC 8061 - ロケータ/ ID分離プロトコル（LISP）データプレーン機密"
  },
  "number": 8061,
  "created_at": "2019-10-22 21:29:24.200732+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                      D. Farinacci\nRequest for Comments: 8061                                   lispers.net\nCategory: Experimental                                           B. Weis\nISSN: 2070-1721                                            Cisco Systems\n                                                           February 2017",
      "raw": true
    },
    {
      "indent": 4,
      "text": "Locator/ID Separation Protocol (LISP) Data-Plane Confidentiality",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document describes a mechanism for encrypting traffic encapsulated using the Locator/ID Separation Protocol (LISP). The design describes how key exchange is achieved using existing LISP control-plane mechanisms as well as how to secure the LISP data plane from third-party surveillance attacks.",
      "ja": "この文書では、ロケータ/ ID分離プロトコル（LISP）を使用してカプセル化されたトラフィックを暗号化するためのメカニズムについて説明します。デザインは、サードパーティの監視攻撃からLISPデータプレーンを保護する方法としてだけでなく、既存のLISPコントロールプレーンのメカニズムを使用して達成される方法を鍵交換について説明します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for examination, experimental implementation, and evaluation.",
      "ja": "このドキュメントはインターネット標準化過程仕様ではありません。それは、検査、実験的な実装、および評価のために公開されています。"
    },
    {
      "indent": 3,
      "text": "This document defines an Experimental Protocol for the Internet community. This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Not all documents approved by the IESG are a candidate for any level of Internet Standard; see Section 2 of RFC 7841.",
      "ja": "この文書は、インターネットコミュニティのためにExperimentalプロトコルを定義します。このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。 IESGによって承認されていないすべての文書がインターネットStandardのどんなレベルの候補です。 RFC 7841のセクション2を参照してください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc8061.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc8061で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2017 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2017 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................3\n2. Requirements Notation ...........................................4\n3. Definition of Terms .............................................4\n4. Overview ........................................................4\n5. Diffie-Hellman Key Exchange .....................................5\n6. Encoding and Transmitting Key Material ..........................6\n7. Shared Keys Used for the Data Plane .............................8\n8. Data-Plane Operation ...........................................10\n9. Procedures for Encryption and Decryption .......................11\n10. Dynamic Rekeying ..............................................12\n11. Future Work ...................................................13\n12. Security Considerations .......................................14\n   12.1. SAAG Support .............................................14\n   12.2. LISP-Crypto Security Threats .............................14\n13. IANA Considerations ...........................................15\n14. References ....................................................16\n   14.1. Normative References .....................................16\n   14.2. Informative References ...................................17\nAcknowledgments ...................................................18\nAuthors' Addresses ................................................18",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "This document describes a mechanism for encrypting LISP-encapsulated traffic. The design describes how key exchange is achieved using existing LISP control-plane mechanisms as well as how to secure the LISP data plane from third-party surveillance attacks.",
      "ja": "この文書では、LISPカプセル化されたトラフィックを暗号化するためのメカニズムについて説明します。デザインは、サードパーティの監視攻撃からLISPデータプレーンを保護する方法としてだけでなく、既存のLISPコントロールプレーンのメカニズムを使用して達成される方法を鍵交換について説明します。"
    },
    {
      "indent": 3,
      "text": "The Locator/ID Separation Protocol [RFC6830] defines a set of functions for routers to exchange information used to map from non-routable Endpoint Identifiers (EIDs) to routable Routing Locators (RLOCs). LISP Ingress Tunnel Routers (ITRs) and Proxy Ingress Tunnel Routers (PITRs) encapsulate packets to Egress Tunnel Routers (ETRs) and Re-encapsulating Tunnel Routers (RTRs). Packets that arrive at the ITR or PITR may not be encrypted, which means no protection or privacy of the data is added. When the source host encrypts the data stream, encapsulated packets do not need to be encrypted by LISP. However, when plaintext packets are sent by hosts, this design can encrypt the user payload to maintain privacy on the path between the encapsulator (the ITR or PITR) to a decapsulator (ETR or RTR). The encrypted payload is unidirectional. However, return traffic uses the same procedures but with different key values by the same xTRs or potentially different xTRs when the paths between LISP sites are asymmetric.",
      "ja": "ロケータ/ ID分離プロトコル[RFC6830]は、非ルーティング可能なエンドポイント識別子（のEID）からルーティング可能なルーティングロケータ（のRLOC）にマッピングするために使用される情報を交換するためのルータ機能のセットを定義します。 LISP入力トンネルルータ配列（ITR）およびプロキシ入力トンネルルータ（PITRs）出口トンネルルータ（ETRS）及び再カプセル化トンネルルータ（RTRS）にパケットをカプセル化します。 ITRまたはPITRに到着したパケットは、データのない保護やプライバシーが追加されていないことを意味する、暗号化されないことがあります。送信元ホストがデータストリームを暗号化する場合、カプセル化されたパケットはLISPによって暗号化する必要はありません。平文パケットがホストによって送信されたときしかし、この設計は、カプセル開放装置（ETRまたはRTR）にカプセル化（ITRまたはPITR）との間の経路上のプライバシーを維持するために、ユーザのペイロードを暗号化することができます。暗号化されたペイロードは一方向です。しかし、LISPサイト間のパスが非対称であるとき、トラフィックが同じxTRsまたは潜在的に異なるxTRsで同じ手順を使用していますが、異なるキー値を返します。"
    },
    {
      "indent": 3,
      "text": "This document has the following requirements (as well as the general requirements from [RFC6973]) for the solution space:",
      "ja": "この文書では、解空間のために、以下の要件（ならびに[RFC6973]からの一般的な要件）を有します。"
    },
    {
      "indent": 3,
      "text": "o Do not require a separate Public Key Infrastructure (PKI) that is out of scope of the LISP control-plane architecture.",
      "ja": "O LISPコントロールプレーンアーキテクチャの範囲外である独立した公開鍵基盤（PKI）を必要としないでください。"
    },
    {
      "indent": 3,
      "text": "o The budget for key exchange MUST be one round-trip time. That is, only a two-packet exchange can occur.",
      "ja": "O鍵交換のための予算は、1往復時間でなければなりません。つまり、2つだけ、パケット交換が発生する可能性があります。"
    },
    {
      "indent": 3,
      "text": "o Use symmetric keying so faster cryptography can be performed in the LISP data plane.",
      "ja": "Oを使用する対称キーので高速暗号化は、LISPのデータプレーンで実行することができます。"
    },
    {
      "indent": 3,
      "text": "o Avoid a third-party trust anchor if possible.",
      "ja": "可能であれば、O、サードパーティ製のトラストアンカーを避けてください。"
    },
    {
      "indent": 3,
      "text": "o Provide for rekeying when secret keys are compromised.",
      "ja": "秘密鍵が侵害されたときに、Oキーの再発行のために提供します。"
    },
    {
      "indent": 3,
      "text": "o Support Authenticated Encryption with packet integrity checks.",
      "ja": "Oパケットの整合性チェックで認証暗号化をサポートしています。"
    },
    {
      "indent": 3,
      "text": "o Support multiple Cipher Suites so new crypto algorithms can be easily introduced.",
      "ja": "O新しい暗号アルゴリズムを簡単に導入することができるので、複数の暗号スイートをサポートしています。"
    },
    {
      "indent": 3,
      "text": "Satisfying the above requirements provides the following benefits:",
      "ja": "上記の要件を満たすことは、次のような利点を提供します。"
    },
    {
      "indent": 3,
      "text": "o Avoiding a PKI reduces the operational cost of managing a secure network. Key management is distributed and independent from any other infrastructure.",
      "ja": "PKIを回避oをセキュアなネットワークを管理するための運用コストを削減します。鍵の管理は、他のインフラストラクチャから配信して独立しています。"
    },
    {
      "indent": 3,
      "text": "o Packet transport is optimized due to fewer packet headers. Packet loss is reduced by a more efficient key exchange.",
      "ja": "Oパケット伝送は、より少ないパケットヘッダのために最適化されます。パケット損失は、より効率的な鍵交換により低減されます。"
    },
    {
      "indent": 3,
      "text": "o Authentication and privacy are provided with a single mechanism thereby providing less per-packet overhead and therefore more resource efficiency.",
      "ja": "O認証とプライバシーがそれによってより少ないパケットごとのオーバヘッド、したがって、より資源効率を提供する単一の機構が設けられています。"
    },
    {
      "indent": 0,
      "text": "2. Requirements Notation",
      "section_title": true,
      "ja": "2.要件表記"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はあります[RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "3. Definition of Terms",
      "section_title": true,
      "ja": "3.用語の定義"
    },
    {
      "indent": 3,
      "text": "AEAD: Authenticated Encryption with Associated Data [RFC5116]",
      "ja": "AEAD：関連したデータで認証暗号化[RFC5116]"
    },
    {
      "indent": 3,
      "text": "ICV: Integrity Check Value",
      "ja": "ICV：整合性チェック値"
    },
    {
      "indent": 3,
      "text": "LCAF: LISP Canonical Address Format [RFC8060]",
      "ja": "LCAF：LISP正規アドレスフォーマット[RFC8060]"
    },
    {
      "indent": 3,
      "text": "xTR: A general reference to ITRs, ETRs, RTRs, and PxTRs",
      "ja": "XTR：ITRは、ETRS、RTRS、及びPxTRsに一般的な参照"
    },
    {
      "indent": 0,
      "text": "4. Overview",
      "section_title": true,
      "ja": "4.概要"
    },
    {
      "indent": 3,
      "text": "The approach proposed in this document is NOT to rely on the LISP mapping system (or any other key-infrastructure system) to store security keys. This will provide for a simpler and more secure mechanism. Secret shared keys will be negotiated between the ITR and the ETR in Map-Request and Map-Reply messages. Therefore, when an ITR needs to obtain the RLOC of an ETR, it will get security material to compute a shared secret with the ETR.",
      "ja": "この文書で提案されたアプローチは、セキュリティキーを格納するLISPマッピングシステム（または他のキー・インフラシステム）に依存することはありません。これは、より簡単でより安全なメカニズムを提供します。共有秘密鍵は、Map-リクエストや地図、返信メッセージにITRとETRの間で交渉されます。 ITRは、ETRのRLOCを取得する必要があるときしたがって、それはETRとの共有秘密を計算するために、セキュリティ材料を取得します。"
    },
    {
      "indent": 3,
      "text": "The ITR can compute three shared secrets per ETR the ITR is encapsulating to. When the ITR encrypts a packet before encapsulation, it will identify the key it used for the crypto calculation so the ETR knows which key to use for decrypting the packet after decapsulation. By using key-ids in the LISP header, we can also get fast rekeying functionality.",
      "ja": "ITRは、ITRがにカプセル化されたETRごとに3つの共有秘密を計算することができます。 ITRは、カプセル化の前にパケットを暗号化する場合ETRは、カプセル化解除後のパケットを復号化するために使用するキーを知っているので、それが暗号計算に使用するキーを識別します。 LISPヘッダにキーIDを使用することにより、我々はまた、高速キー再生成機能を得ることができます。"
    },
    {
      "indent": 3,
      "text": "The key management described in this document is unidirectional from the ITR (the encapsulator) to the ETR (the decapsultor).",
      "ja": "この文書に記載された鍵管理は、ITR（カプセル化）からETR（decapsultor）に一方向性です。"
    },
    {
      "indent": 0,
      "text": "5. Diffie-Hellman Key Exchange",
      "section_title": true,
      "ja": "5.のDiffie-Hellman鍵交換"
    },
    {
      "indent": 3,
      "text": "LISP will use a Diffie-Hellman [RFC2631] key exchange sequence and computation for computing a shared secret. The Diffie-Hellman parameters will be passed via Cipher Suite code-points in Map-Request and Map-Reply messages.",
      "ja": "LISPは、共有秘密を計算するためにディフィー - ヘルマン[RFC2631]鍵交換シーケンスと計算を使用します。 Diffie-Hellmanパラメータは、Map-リクエストや地図、応答メッセージに暗号スイートのコードポイントを経由して渡されます。"
    },
    {
      "indent": 3,
      "text": "Here is a brief description how Diffie-Hellman works:",
      "ja": "ここでのDiffie-Hellmanのがどのように動作するかを簡単に説明します："
    },
    {
      "indent": 3,
      "text": "+----------------------------+---------+----------------------------+\n|              ITR           |         |           ETR              |\n+------+--------+------------+---------+------------+---------------+\n|Secret| Public | Calculates |  Sends  | Calculates | Public |Secret|\n+------|--------|------------|---------|------------|--------|------+\n|  i   |  p,g   |            | p,g --> |            |        |  e   |\n+------|--------|------------|---------|------------|--------|------+\n|  i   | p,g,I  |g^i mod p=I |  I -->  |            | p,g,I  |  e   |\n+------|--------|------------|---------|------------|--------|------+\n|  i   | p,g,I  |            |  <-- E  |g^e mod p=E |  p,g   |  e   |\n+------|--------|------------|---------|------------|--------|------+\n| i,s  |p,g,I,E |E^i mod p=s |         |I^e mod p=s |p,g,I,E | e,s  |\n+------|--------|------------|---------|------------|--------|------+",
      "raw": true
    },
    {
      "indent": 8,
      "text": "Public-Key Exchange for Computing a Shared Private Key [DH]",
      "ja": "共有秘密鍵を計算するための公開鍵交換[DH]"
    },
    {
      "indent": 3,
      "text": "Diffie-Hellman parameters 'p' and 'g' must be the same values used by the ITR and ETR. The ITR computes public key 'I' and transmits 'I' in a Map-Request packet. When the ETR receives the Map-Request, it uses parameters 'p' and 'g' to compute the ETR's public key 'E'. The ETR transmits 'E' in a Map-Reply message. At this point, the ETR has enough information to compute 's', the shared secret, by using 'I' as the base and the ETR's private key 'e' as the exponent. When the ITR receives the Map-Reply, it uses the ETR's public key 'E' with the ITR's private key 'i' to compute the same 's' shared secret the ETR computed. The value 'p' is used as a modulus to create the width of the shared secret 's' (see Section 6).",
      "ja": "Diffie-Hellmanパラメータ「P」と「G」はITRとETRで使用されるのと同じ値でなければなりません。 ITRは、公開鍵を計算し「私は」と「I」は地図-Requestパケットで送信します。 ETRは地図-Requestを受信した場合、それはETRの公開鍵「E」を計算するためのパラメータ「P」と「G」を使用しています。 ETRは、Map-Replyメッセージで 'E' を送信します。この時点では、ETRは、「私」はベースと指数としてETRの秘密鍵「E」として使用することによって、「S」を計算するのに十分な情報、共有秘密を持っています。 ITRは、地図-返信を受信すると、それは私が「s」を同じ共有秘密ETRは計算を計算するためにITRの秘密鍵でETRの公開キー「E」を使用しています。値「P」は、共有秘密「S」の幅を作成するための係数として使用される（セクション6を参照）。"
    },
    {
      "indent": 0,
      "text": "6. Encoding and Transmitting Key Material",
      "section_title": true,
      "ja": "6.エンコードと送信キーマテリアル"
    },
    {
      "indent": 3,
      "text": "The Diffie-Hellman key material is transmitted in Map-Request and Map-Reply messages. Diffie-Hellman parameters are encoded in the LISP Security Key LCAF Type [RFC8060].",
      "ja": "Diffie-Hellman鍵材料は、Map-リクエストや地図、応答メッセージで送信されます。 Diffie-Hellmanパラメータは、LISPセキュリティキーLCAFタイプ[RFC8060]でエンコードされています。"
    },
    {
      "indent": 4,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|           AFI = 16387         |     Rsvd1     |     Flags     |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   Type = 11   |      Rsvd2    |             6 + n             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   Key Count   |      Rsvd3    | Cipher Suite  |   Rsvd4     |R|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|           Key Length          |     Public Key Material ...   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                    ... Public Key Material                    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|              AFI = x          |       Locator Address ...     |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Cipher Suite Field Contains DH Key Exchange and Cipher/Hash Functions",
      "ja": "暗号スイートフィールドはDH鍵交換及び暗号/ハッシュ関数が含まれています"
    },
    {
      "indent": 3,
      "text": "The Key Count field encodes the number of {'Key-Length', 'Key-Material'} fields included in the encoded LCAF. The maximum number of keys that can be encoded is three, each identified by key-id 1, followed by key-id 2, and finally key-id 3.",
      "ja": "キーカウントフィールドは、数{「キー長」、「キーマテリアル」}エンコードさLCAFに含まれるフィールドを符号化します。符号化することができるキーの最大数は、キーID 2、及び最終的に鍵ID 3、続いて、3、キーID 1により識別された各あります。"
    },
    {
      "indent": 3,
      "text": "The R bit is not used for this use case of the Security Key LCAF Type but is reserved for [LISP-DDT] security. Therefore, the R bit SHOULD be transmitted as 0 and MUST be ignored on receipt.",
      "ja": "Rビットは、セキュリティキーLCAFタイプのこのユースケースに使用されていませんが、[LISP-DDT]セキュリティのために予約されています。したがって、Rビットが0として送信されるべきであり、領収書の上で無視しなければなりません。"
    },
    {
      "indent": 1,
      "text": "Cipher Suite 0: Reserved",
      "ja": "暗号スイート0：予約済み"
    },
    {
      "indent": 1,
      "text": "Cipher Suite 1 (LISP_2048MODP_AES128_CBC_SHA256): Diffie-Hellman Group: 2048-bit MODP [RFC3526] Encryption: AES with 128-bit keys in CBC mode [AES-CBC] Integrity: Integrated with AEAD_AES_128_CBC_HMAC_SHA_256 [AES-CBC] IV length: 16 bytes KDF: HMAC-SHA-256",
      "ja": "暗号スイート1（LISP_2048MODP_AES128_CBC_SHA256）：ディフィー - ヘルマングループ：2048ビットMODP [RFC3526]暗号化：CBCモードでは、128ビットキーでAES [AES-CBC]インテグリティ：AEAD_AES_128_CBC_HMAC_SHA_256との統合[AES-CBC] IV長さ：16のバイトKDF：HMAC-SHA-256"
    },
    {
      "indent": 1,
      "text": "Cipher Suite 2 (LISP_EC25519_AES128_CBC_SHA256): Diffie-Hellman Group: 256-bit Elliptic-Curve 25519 [CURVE25519] Encryption: AES with 128-bit keys in CBC mode [AES-CBC] Integrity: Integrated with AEAD_AES_128_CBC_HMAC_SHA_256 [AES-CBC] IV length: 16 bytes KDF: HMAC-SHA-256",
      "ja": "暗号スイート2（LISP_EC25519_AES128_CBC_SHA256）：ディフィー - ヘルマングループ：256ビットの楕円カーブ25519 [CURVE25519】暗号化：CBCモードでは、128ビットキーでAES [AES-CBC]インテグリティ：AEAD_AES_128_CBC_HMAC_SHA_256との統合[AES-CBC] IV長：16バイトKDF：HMAC-SHA-256"
    },
    {
      "indent": 1,
      "text": "Cipher Suite 3 (LISP_2048MODP_AES128_GCM): Diffie-Hellman Group: 2048-bit MODP [RFC3526] Encryption: AES with 128-bit keys in GCM mode [RFC5116] Integrity: Integrated with AEAD_AES_128_GCM [RFC5116] IV length: 12 bytes KDF: HMAC-SHA-256",
      "ja": "暗号スイート3（LISP_2048MODP_AES128_GCM）：ディフィー - ヘルマングループ：2048ビットMODP [RFC3526]暗号化：AES GCMモードで128ビットキーを使用して、[RFC5116]の健全性：AEAD_AES_128_GCM [RFC5116] IVの長さとの統合：12バイトKDF：HMAC- SHA-256"
    },
    {
      "indent": 1,
      "text": "Cipher Suite 4 (LISP_3072MODP_AES128_GCM): Diffie-Hellman Group: 3072-bit MODP [RFC3526] Encryption: AES with 128-bit keys in GCM mode [RFC5116] Integrity: Integrated with AEAD_AES_128_GCM [RFC5116] IV length: 12 bytes KDF: HMAC-SHA-256",
      "ja": "暗号スイート4（LISP_3072MODP_AES128_GCM）：ディフィー - ヘルマングループ：3072ビットMODP [RFC3526]暗号化：AES GCMモードで128ビットキーを使用して、[RFC5116]の健全性：AEAD_AES_128_GCM [RFC5116] IVの長さとの統合：12バイトKDF：HMAC- SHA-256"
    },
    {
      "indent": 1,
      "text": "Cipher Suite 5 (LISP_256_EC25519_AES128_GCM): Diffie-Hellman Group: 256-bit Elliptic-Curve 25519 [CURVE25519] Encryption: AES with 128-bit keys in GCM mode [RFC5116] Integrity: Integrated with AEAD_AES_128_GCM [RFC5116] IV length: 12 bytes KDF: HMAC-SHA-256",
      "ja": "暗号スイート5（LISP_256_EC25519_AES128_GCM）：ディフィー - ヘルマングループ：256ビットの楕円カーブ25519 [CURVE25519】暗号化：AES GCMモードで128ビットキーを使用して、[RFC5116]のIntegrity：AEAD_AES_128_GCMとの統合[RFC5116] IV長さ：12バイトKDF ：HMAC-SHA-256"
    },
    {
      "indent": 1,
      "text": "Cipher Suite 6 (LISP_256_EC25519_CHACHA20_POLY1305): Diffie-Hellman Group: 256-bit Elliptic-Curve 25519 [CURVE25519] Encryption: Chacha20-Poly1305 [CHACHA-POLY] [RFC7539] Integrity: Integrated with AEAD_CHACHA20_POLY1305 [CHACHA-POLY] IV length: 8 bytes KDF: HMAC-SHA-256",
      "ja": "暗号スイート6（LISP_256_EC25519_CHACHA20_POLY1305）：ディフィー - ヘルマングループ：256ビットの楕円カーブ25519 [CURVE25519】暗号化：Chacha20-Poly1305 [CHACHA-POLY] [RFC7539]の健全性：AEAD_CHACHA20_POLY1305 [CHACHA-POLY] IVの長さとの統合：8つのバイトKDF：HMAC-SHA-256"
    },
    {
      "indent": 3,
      "text": "The Public Key Material field contains the public key generated by one of the Cipher Suites defined above. The length of the key, in octets, is encoded in the Key Length field.",
      "ja": "公開鍵材料分野は、上記で定義された暗号スイートのいずれかによって生成された公開鍵が含まれています。キーの長さは、オクテットで、キーの長さフィールドに符号化されます。"
    },
    {
      "indent": 3,
      "text": "When an ITR, PITR, or RTR sends a Map-Request, they will encode their own RLOC in the Security Key LCAF Type format within the ITR-RLOCs field. When an ETR or RTR sends a Map-Reply, they will encode their RLOCs in Security Key LCAF Type format within the RLOC-record field of each EID-record supplied.",
      "ja": "ITR、PITR、またはRTRは地図-Requestを送信すると、彼らはITR-のRLOCフィールド内のセキュリティキーLCAFタイプ形式で、自分のRLOCをエンコードします。 ETRまたはRTRは地図-返信を送信すると、彼らは、供給された各EID-レコードのRLOCレコードフィールド内のセキュリティキーLCAFタイプ形式で自分のRLOCをエンコードします。"
    },
    {
      "indent": 3,
      "text": "If an ITR, PITR, or RTR sends a Map-Request with the Security Key LCAF Type included and the ETR or RTR does not want to have encapsulated traffic encrypted, they will return a Map-Reply with no RLOC-records encoded with the Security Key LCAF Type. This signals to the ITR, PITR, or RTR not to encrypt traffic (it cannot encrypt traffic anyway since no ETR public key was returned).",
      "ja": "ITRは、PITR、またはRTRは、セキュリティキーLCAFタイプを持つMap-Requestを送信した場合は含まれており、ETRまたはRTRは、彼らがセキュリティでエンコードなしRLOC-記録と地図-返信を返しますが、カプセル化されたトラフィックを暗号化したくはありませんキーLCAFタイプ。これは（ないETR公開鍵が返されませんでしたので、それはとにかくトラフィックを暗号化することはできません）トラフィックを暗号化しないITR、PITR、またはRTRに知らせます。"
    },
    {
      "indent": 3,
      "text": "Likewise, if an ITR or PITR wishes to include multiple key-ids in the Map-Request, but the ETR or RTR wishes to use some but not all of the key-ids, it returns a Map-Reply only for those key-ids it wishes to use.",
      "ja": "ITRまたはPITRが地図リクエストで複数のキーIDを含めることを望むが、ETRまたはRTRは、キーIDのすべてではなく一部を使用したい場合は同様に、それだけで、それらのキーIDの地図-返信を返します。それは利用したいです。"
    },
    {
      "indent": 0,
      "text": "7. Shared Keys Used for the Data Plane",
      "section_title": true,
      "ja": "データプレーンのために使用される7.共有鍵"
    },
    {
      "indent": 3,
      "text": "When an ITR or PITR receives a Map-Reply accepting the Cipher Suite sent in the Map-Request, it is ready to create data-plane keys. The same process is followed by the ETR or RTR returning the Map-Reply.",
      "ja": "ITRまたはPITRが地図リクエストで送信された暗号スイートを受け入れる地図-返信を受信すると、データ・プレーン・キーを作成する準備ができています。同じプロセスは、地図-返信を返すETRまたはRTRが続いています。"
    },
    {
      "indent": 3,
      "text": "The first step is to create a shared secret, using the peer's shared Diffie-Hellman Public Key Material combined with the device's own private keying material, as described in Section 5. The Diffie-Hellman parameters used are defined in the Cipher Suite sent in the Map-Request and copied into the Map-Reply.",
      "ja": "最初のステップは、第5節でで送信された暗号スイートに定義されている使用のDiffie-Hellmanパラメータを説明するように、ピアの共有のDiffie-Hellman公開鍵マテリアルは、デバイス自身のプライベート鍵素材と組み合わせて使用​​して、共有シークレットを作成することです地図・リクエストと地図-返信にコピー。"
    },
    {
      "indent": 3,
      "text": "The resulting shared secret is used to compute an AEAD-key for the algorithms specified in the Cipher Suite. A Key Derivation Function (KDF) in counter mode, as specified by [NIST-SP800-108], is used to generate the data-plane keys. The amount of keying material that is derived depends on the algorithms in the Cipher Suite.",
      "ja": "結果の共有秘密を暗号スイートで指定されたアルゴリズムのAEADキーを計算するために使用されます。鍵導出関数（KDF）カウンタモードにおいて、[NIST-SP800-108]によって指定されるように、データプレーンキーを生成するために使用されます。導出された材料をキーイングの量は、Cipher Suiteのアルゴリズムに依存します。"
    },
    {
      "indent": 3,
      "text": "The inputs to the KDF are as follows:",
      "ja": "次のようにKDFへの入力は、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "o KDF function. This is HMAC-SHA-256 in this document, but generally specified in each Cipher Suite definition.",
      "ja": "KDF機能O。これは、この文書でHMAC-SHA-256ですが、一般的に各暗号スイート定義で指定されました。"
    },
    {
      "indent": 3,
      "text": "o A key for the KDF function. This is the computed Diffie-Hellman shared secret.",
      "ja": "KDF機能のためのキーO。これは、計算のDiffie-Hellmanの共有秘密です。"
    },
    {
      "indent": 3,
      "text": "o Context that binds the use of the data-plane keys to this session. The context is made up of the following fields, which are concatenated and provided as the data to be acted upon by the KDF function. A Context is made up of the following components:",
      "ja": "このセッションへのデータプレーンキーの使用を結合し、Oコンテキスト。コンテキストは、データがKDF関数によって作用するように連結され、提供される次のフィールドから構成されています。コンテキストは、次のコンポーネントで構成されています。"
    },
    {
      "indent": 6,
      "text": "* A counter, represented as a two-octet value in network byte order.",
      "ja": "*カウンタ、ネットワークバイト順に2オクテット値として表さ。"
    },
    {
      "indent": 6,
      "text": "* The null-terminated string \"lisp-crypto\".",
      "ja": "* NULLで終わる文字列 \"のlisp-暗号\"。"
    },
    {
      "indent": 6,
      "text": "* The ITR's nonce from the Map-Request the Cipher Suite was included in.",
      "ja": "*地図リクエストの暗号スイートからITRのナンスはに含まれていました。"
    },
    {
      "indent": 6,
      "text": "* The number of bits of keying material required (L), represented as a two-octet value in network byte order.",
      "ja": "*ネットワークバイト順に2つのオクテット値として表される必要な鍵材料（L）のビット数。"
    },
    {
      "indent": 3,
      "text": "The counter value in the context is first set to 1. When the amount of keying material exceeds the number of bits returned by the KDF function, then the KDF function is called again with the same inputs except that the counter increments for each call. When enough keying material is returned, it is concatenated and used to create keys.",
      "ja": "鍵材料の量は、その後KDF関数が呼び出しごとにカウンタをインクリメントことを除いて同じ入力で再び呼び出され、KDF関数によって返されるビットの数を超えている場合、コンテキストのカウンタ値は、第1に設定されています。十分なキーイング材料が返されると、それが連結して、キーを作成するために使用されます。"
    },
    {
      "indent": 3,
      "text": "For example, AES with 128-bit keys requires 16 octets (128 bits) of keying material, and HMAC-SHA1-96 requires another 16 octets (128 bits) of keying material in order to maintain a consistent 128 bits of security. Since 32 octets (256 bits) of keying material are required, and the KDF function HMAC-SHA-256 outputs 256 bits, only one call is required. The inputs are as follows:",
      "ja": "例えば、128ビット鍵のAES鍵材料の16個のオクテット（128ビット）を必要とし、HMAC-SHA1-96セキュリティの一貫性のある128ビットを維持するために、鍵材料の別の16個のオクテット（128ビット）を必要とします。鍵材料の32個のオクテット（256ビット）が必要であり、KDF関数HMAC-SHA-256は、256ビットを出力しているので、一方のみのコールが必要とされます。次のように入力は、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "key-material = HMAC-SHA-256(dh-shared-secret, context)",
      "ja": "キーマテリアル= HMAC-SHA-256（DH-共有秘密、コンテキスト）"
    },
    {
      "indent": 7,
      "text": "where: context = 0x0001 || \"lisp-crypto\" || <itr-nonce> || 0x0100",
      "ja": "ここで、コンテキスト= 0x0001の|| \"lispの-暗号\" || <ITR-ナンス> || 0x0100"
    },
    {
      "indent": 3,
      "text": "In contrast, a Cipher Suite specifying AES with 256-bit keys requires 32 octets (256 bits) of keying material, and HMAC-SHA256-128 requires another 32 octets (256 bits) of keying material in order to maintain a consistent 256 bits of security. Since 64 octets (512 bits) of keying material are required, and the KDF function HMAC-SHA-256 outputs 256 bits, two calls are required.",
      "ja": "対照的に、256ビット鍵のAESを指定する暗号スイートは、鍵材料の32個のオクテット（256ビット）を必要とし、HMAC-SHA256-128は一貫した256ビットを維持するために、キーイング材料の別の32個のオクテット（256ビット）が必要セキュリティ。鍵材料の64個のオクテット（512ビット）が必要であり、KDF関数HMAC-SHA-256は、256ビットを出力しているので、2つのコールが要求されています。"
    },
    {
      "indent": 3,
      "text": "key-material-1 = HMAC-SHA-256(dh-shared-secret, context)",
      "ja": "鍵材料-1 = HMAC-SHA-256（DH-共有秘密、コンテキスト）"
    },
    {
      "indent": 7,
      "text": "where: context = 0x0001 || \"lisp-crypto\" || <itr-nonce> || 0x0200",
      "ja": "ここで、コンテキスト= 0x0001の|| \"lispの-暗号\" || <ITR-ナンス> || 0x0200"
    },
    {
      "indent": 3,
      "text": "key-material-2 = HMAC-SHA-256(dh-shared-secret, context)",
      "ja": "鍵材料-2 = HMAC-SHA-256（DH-共有秘密、コンテキスト）"
    },
    {
      "indent": 7,
      "text": "where: context = 0x0002 || \"lisp-crypto\" || <itr-nonce> || 0x0200",
      "ja": "ここで、コンテキスト= 0×0002 || \"lispの-暗号\" || <ITR-ナンス> || 0x0200"
    },
    {
      "indent": 3,
      "text": "key-material = key-material-1 || key-material-2",
      "ja": "キーマテリアル=鍵材料-1 ||キーマテリアル-2"
    },
    {
      "indent": 3,
      "text": "If the key-material is longer than the required number of bits (L), then only the most significant L bits are used.",
      "ja": "鍵材料はビット（L）の必要数よりも長い場合は、唯一の最も重要Lビットが使用されます。"
    },
    {
      "indent": 3,
      "text": "From the derived key-material, the most significant 256 bits are used for the AEAD-key by AEAD ciphers. The 256-bit AEAD-key is divided into a 128-bit encryption key and a 128-bit integrity check key internal to the cipher used by the ITR.",
      "ja": "派生鍵素材から、最上位256ビットがAEAD暗号によってAEADキーのために使用されます。 256ビットAEAD鍵は、128ビットの暗号化鍵及びITRによって使用される暗号鍵の内部128ビットの整合性チェックに分割されます。"
    },
    {
      "indent": 0,
      "text": "8. Data-Plane Operation",
      "section_title": true,
      "ja": "8.データプレーン動作"
    },
    {
      "indent": 3,
      "text": "The LISP encapsulation header [RFC6830] requires changes to encode the key-id for the key being used for encryption.",
      "ja": "LISPカプセル化ヘッダ[RFC6830]は暗号化に使用されているキーのキーIDを符号化するために変更を必要とします。"
    },
    {
      "indent": 0,
      "text": "     0                   1                   2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n  / |       Source Port = xxxx      |       Dest Port = 4341        |\nUDP +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n  \\ |           UDP Length          |        UDP Checksum           |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nL / |N|L|E|V|I|R|K|K|            Nonce/Map-Version                  |\\ \\\nI   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |A\nS \\ |                 Instance ID/Locator-Status-Bits               | |D\nP   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |/\n    |                   Initialization Vector (IV)                  | I\nE   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ C\nn / |                                                               | V\nc   |                                                               | |\nr   |                Packet Payload with EID Header ...             | |\ny   |                                                               | |\np \\ |                                                               |/\nt   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 5,
      "text": "K-bits Indicate When a Packet Is Encrypted and Which Key Is Used",
      "ja": "パケットが暗号化されている場合にはK-ビットが示し、どのキーが使用され"
    },
    {
      "indent": 3,
      "text": "When the KK bits are 00, the encapsulated packet is not encrypted. When the value of the KK bits is 1, 2, or 3, it encodes the key-id of the secret keys computed during the Diffie-Hellman Map-Request/Map-Reply exchange. When the KK bits are not 0, the payload is prepended with an Initialization Vector (IV). The length of the IV field is based on the Cipher Suite used. Since all Cipher Suites defined in this document do Authenticated Encryption with Associated Data (AEAD), an ICV field does not need to be present in the packet since it is included in the ciphertext. The Additional Data (AD) used for the ICV is shown above and includes the LISP header, the IV field, and the packet payload.",
      "ja": "KKビットが00である場合、カプセル化されたパケットは暗号化されていません。 KKビットの値は1、2、または3である場合、それはディフィー - ヘルマンマップ要求/マップ返信交換中に計算された秘密鍵の鍵IDを符号化します。 KKビットが0でない場合、ペイロードは、初期化ベクトル（IV）を用いて付加されます。 IVフィールドの長さは、使用される暗号スイートに基づいています。この文書で定義されているすべての暗号スイートは、関連するデータ（AEAD）で認証暗号化を行うので、ICVフィールドは、それが暗号文に含まれているため、パケット内に存在している必要はありません。 ICVのために使用される追加データ（AD）は、上に示したとLISPヘッダ、IVフィールド、及びパケットペイロードを含んでいます。"
    },
    {
      "indent": 3,
      "text": "When an ITR or PITR receives a packet to be encapsulated, the device will first decide what key to use, encode the key-id into the LISP header, and use that key to encrypt all packet data that follows the LISP header. Therefore, the outer header, UDP header, and LISP header travel as plaintext.",
      "ja": "ITRまたはPITRがカプセル化されるパケットを受信すると、デバイスは、最初に使用LISPヘッダに鍵IDをエンコードし、LISPヘッダに続くすべてのパケットデータを暗号化するためにそのキーを使用するかをキー決定します。したがって、外部ヘッダ、UDPヘッダ、平文としてLISPヘッダ旅行。"
    },
    {
      "indent": 3,
      "text": "At the time of writing, there is an open working group item to discuss if the data encapsulation header needs change for encryption or any new applications. This document proposes changes to the existing header so experimentation can continue without making large changes to the data plane at this time. This document allocates two bits of the previously unused three flag bits (note the R-bit above is still a reserved flag bit, as documented in [RFC6830]) for the KK bits.",
      "ja": "執筆時点では、データのカプセル化ヘッダは暗号化または任意の新しいアプリケーションの変更を必要とする場合について議論するためのオープンワーキング・グループの項目があります。実験は、この時点でのデータプレーンに大きな変更を加えることなく継続することができるように、この文書では、既存のヘッダへの変更を提案しています。この文書では、KKビットについて以前に使用されていない3フラグビット（[RFC6830]に記載されているように上記のRビットは、まだ予約フラグビットであることに注意）の2ビットを割り当てます。"
    },
    {
      "indent": 0,
      "text": "9. Procedures for Encryption and Decryption",
      "section_title": true,
      "ja": "暗号化と復号化9.手順"
    },
    {
      "indent": 3,
      "text": "When an ITR, PITR, or RTR encapsulates a packet and has already computed an AEAD-key (detailed in Section 7) that is associated with a destination RLOC, the following encryption and encapsulation procedures are performed:",
      "ja": "ITRは、PITR、またはRTRパケットをカプセル化し、既に宛先RLOCに関連付けられている（セクション7に詳述）AEADキーを計算したとき、次の暗号化およびカプセル化手順が実行されます。"
    },
    {
      "indent": 3,
      "text": "1. The encapsulator creates an IV and prepends the IV value to the packet being encapsulated. For GCM and ChaCha20 Cipher Suites, the IV is incremented for every packet (beginning with a value of 1 in the first packet) and sent to the destination RLOC. For CBC Cipher Suites, the IV is a new random number for every packet sent to the destination RLOC. For the ChaCha20 Cipher Suite, the IV is an 8-byte random value that is appended to a 4-byte counter that is incremented for every packet (beginning with a value of 1 in the first packet).",
      "ja": "1.カプセル化は、IVを作成し、カプセル化されたパケットにIV値を付加します。 GCMとChaCha20暗号スイートのために、IV（第1パケットにおける1の値から始まる）パケットごとにインクリメントされ、宛先RLOCに送られます。 CBC暗号スイートについては、IVは、宛先RLOCに送信されるすべてのパケットのための新たな乱数です。 ChaCha20暗号スイートのために、IVは、（最初​​のパケットにおける1の値から始まる）パケットごとにインクリメントされる4バイトのカウンタに追加された8バイトの乱数値です。"
    },
    {
      "indent": 3,
      "text": "2. Next encrypt with cipher function AES or ChaCha20 using the AEAD-key over the packet payload following the AEAD specification referenced in the Cipher Suite definition. This does not include the IV. The IV must be transmitted as plaintext so the decrypter can use it as input to the decryption cipher. The payload should be padded to an integral number of bytes a block cipher may require. The result of the AEAD operation may contain an ICV, the size of which is defined by the referenced AEAD specification. Note that the AD (i.e., the LISP header exactly as will be prepended in the next step and the IV) must be given to the AEAD encryption function as the \"associated data\" argument.",
      "ja": "暗号スイート定義で参照AEAD仕様次パケットペイロード上AEAD鍵を用いて暗号化機能AES又はChaCha20と2次暗号。これは、IVが含まれていません。解読は、暗号解読暗号への入力として使用できるようにIVは平文として送信する必要があります。ペイロードは、ブロック暗号を必要とするかもしれないバイトの整数に水増しされるべきです。 AEAD演算の結果はICV、参照AEAD仕様で定義されたサイズを含むことができます。 AD（次のステップ及びIVに付加されるとおりに、すなわち、LISPヘッダ）が「関連データ」引数としてAEAD暗号化機能に与えられなければならないことに留意されたいです。"
    },
    {
      "indent": 3,
      "text": "3. Prepend the LISP header. The key-id field of the LISP header is set to the key-id value that corresponds to key-pair used for the encryption cipher.",
      "ja": "3.プリペンドLISPヘッダ。 LISPヘッダのキーIDフィールドは、暗号化方式に使用される鍵ペアに対応するキーID値に設定されています。"
    },
    {
      "indent": 3,
      "text": "4. Lastly, prepend the UDP header and outer IP header onto the encrypted packet and send packet to destination RLOC.",
      "ja": "4.最後に、暗号化されたパケットにUDPヘッダと外部IPヘッダを付加し、宛先RLOCにパケットを送ります。"
    },
    {
      "indent": 3,
      "text": "When an ETR, PETR, or RTR receives an encapsulated packet, the following decapsulation and decryption procedures are performed:",
      "ja": "ETR、PETR、またはRTRは、カプセル化されたパケットを受信すると、次のデカプセル化および復号化手順が実行されます。"
    },
    {
      "indent": 3,
      "text": "1. The outer IP header, UDP header, LISP header, and IV field are stripped from the start of the packet. The LISP header and IV are retained and given to the AEAD decryption operation as the \"associated data\" argument.",
      "ja": "1.外側のIPヘッダ、UDPヘッダ、LISPヘッダ、及びIVフィールドは、パケットの先頭から取り除かれます。 LISPヘッダおよびIVを保持し、「関連データ」引数としてAEAD復号動作に与えられます。"
    },
    {
      "indent": 3,
      "text": "2. The packet is decrypted using the AEAD-key and the IV from the packet. The AEAD-key is obtained from a local-cache associated with the key-id value from the LISP header. The result of the decryption function is a plaintext packet payload if the cipher returned a verified ICV. Otherwise, the packet is invalid and is discarded. If the AEAD specification included an ICV, the AEAD decryption function will locate the ICV in the ciphertext and compare it to a version of the ICV that the AEAD decryption function computes. If the computed ICV is different than the ICV located in the ciphertext, then it will be considered tampered.",
      "ja": "2.パケットはAEADキーおよびパケットからIVを使用して復号化されます。 AEADキーはLISPヘッダからキーID値に関連付けられたローカル・キャッシュから取得されます。暗号が確認さICVを返した場合、復号関数の結果は、平文パケットペイロードです。そうでない場合、パケットは無効であり、破棄されます。 AEAD仕様は、ICVが含まれている場合、AEAD復号機能は、暗号文にICVを見つけ、AEAD復号関数が計算するICVのバージョンと比較します。計算されたICVは暗号文に位置ICVと異なる場合、それは改ざんとみなされます。"
    },
    {
      "indent": 3,
      "text": "3. If the packet was not tampered with, the decrypted packet is forwarded to the destination EID.",
      "ja": "3.パケットが改ざんされなかった場合は、復号化されたパケットは、宛先EIDに転送されます。"
    },
    {
      "indent": 0,
      "text": "10. Dynamic Rekeying",
      "section_title": true,
      "ja": "10.動的な鍵の再生成"
    },
    {
      "indent": 3,
      "text": "Since multiple keys can be encoded in both control and data messages, an ITR can encapsulate and encrypt with a specific key while it is negotiating other keys with the same ETR. As soon as an ETR or RTR returns a Map-Reply, it should be prepared to decapsulate and decrypt using the new keys computed with the new Diffie-Hellman parameters received in the Map-Request and returned in the Map-Reply.",
      "ja": "複数のキーは、制御およびデータメッセージの両方で符号化することができるので、それは同じETRと他のキーを交渉している間、ITRは、カプセル化し、特定のキーで暗号化することができます。すぐETRとして、あるいはRTRは地図-返信を返し、逆カプセル化新しいDiffie-Hellmanパラメータ地図-要求で受信し、地図、返信に返されると計算された新しいキーを使用して解読するために準備する必要があります。"
    },
    {
      "indent": 3,
      "text": "RLOC-probing can be used to change keys or Cipher Suites by the ITR at any time. And when an initial Map-Request is sent to populate the ITR's map-cache, the Map-Request flows across the mapping system where a single ETR from the Map-Reply RLOC-set will respond. If the ITR decides to use the other RLOCs in the RLOC-set, it MUST send a Map-Request directly to negotiate security parameters with the ETR. This process may be used to test reachability from an ITR to an ETR initially when a map-cache entry is added for the first time, so an ITR can get both reachability status and keys negotiated with one Map-Request/Map-Reply exchange.",
      "ja": "RLOCプロービングは、いつでもITRによってキーや暗号スイートを変更するために使用することができます。初期の地図-RequestがITRのマップキャッシュを設定するために送られた時や、地図リクエストは、Map-返信RLOCセットから単一ETRが応答するマッピングシステムを横切って流れます。 ITRは、RLOC・セット内の他のRLOCを使用することを決定した場合、それはETRでセキュリティパラメータをネゴシエートするために、直接地図-Requestを送らなければなりません。マップキャッシュエントリが最初に追加された場合、そうITR一地図リクエスト/マップ返信交換と交渉到達可能状態とキーの両方を取得することができ、このプロセスは、最初にETRにITRから到達可能性をテストするために使用されてもよいです。"
    },
    {
      "indent": 3,
      "text": "A rekeying event is defined to be when an ITR or PITR changes the Cipher Suite or public key in the Map-Request. The ETR or RTR compares the Cipher Suite and public key it last received from the ITR for the key-id, and if any value has changed, it computes a new public key and Cipher Suite requested by the ITR from the Map-Request and returns it in the Map-Reply. Now a new shared secret is computed and can be used for the key-id for encryption by the ITR and decryption by the ETR. When the ITR or PITR starts this process of negotiating a new key, it must not use the corresponding key-id in encapsulated packets until it receives a Map-Reply from the ETR with the same Cipher Suite value it expects (the values it sent in a Map-Request).",
      "ja": "キーの再発行イベントは、ITRまたはPITRが暗号スイートや地図、リクエスト内の公開鍵を変更したときになるように定義されます。 ETRまたはRTRは、Cipher Suiteとそれが最後のキーIDのITRから受信した公開鍵を比較して、任意の値が変更された場合、それは地図リクエストとリターンからITRによって要求された新しい公開鍵と暗号スイートを計算します地図-返信でそれ。今、新しい共有秘密が計算され、ETRによるITRによる暗号化および復号化のためのキーIDに使用することができます。 ITRまたはPITRが新しいキーを交渉するこのプロセスを開始すると、それが期待し、同じ暗号スイート値を持つETRから地図-返信（それがで送信された値を受信するまで、それがカプセル化されたパケットに対応するキーIDを使用してはいけません地図リクエスト）。"
    },
    {
      "indent": 3,
      "text": "Note when RLOC-probing continues to maintain RLOC reachability and rekeying is not desirable, the ITR or RTR can either not include the Security Key LCAF Type in the Map-Request or supply the same key material as it received from the last Map-Reply from the ETR or RTR. This approach signals to the ETR or RTR that no rekeying event is requested.",
      "ja": "RLOC-プロービングがRLOCの到達可能性を維持し続け、再入力が望ましくないとき、ITRまたはRTRは、いずれかの地図リクエストにセキュリティキーLCAFタイプを含めることができないか、それはからの最後の地図-返信から受信したのと同じキー材料を供給注意ETRまたはRTR。何のキーの再発行イベントが要求されていないことをETRまたはRTRへのこのアプローチは、信号。"
    },
    {
      "indent": 0,
      "text": "11. Future Work",
      "section_title": true,
      "ja": "11.今後の作業"
    },
    {
      "indent": 3,
      "text": "For performance considerations, newer Elliptic-Curve Diffie-Hellman (ECDH) groups can be used as specified in [RFC4492] and [RFC6090] to reduce CPU cycles required to compute shared secret keys.",
      "ja": "[RFC4492]及び[RFC6090]で指定された性能を考慮して、新しい楕円、曲線ディフィー・ヘルマン（ECDH）基は、共有秘密鍵を計算するのに必要なCPUサイクルを減少させるために使用することができます。"
    },
    {
      "indent": 3,
      "text": "For better security considerations as well as to be able to build faster software implementations, newer approaches to ciphers and authentication methods will be researched and tested. Some examples are ChaCha20 and Poly1305 [CHACHA-POLY] [RFC7539].",
      "ja": "より良いセキュリティの考慮事項についてだけでなく、より高速なソフトウェア実装を構築することができるようにする、暗号や認証方式への新しいアプローチが研究され、テストされます。いくつかの例としては、ChaCha20とPoly1305 [CHACHA-POLY] [RFC7539]です。"
    },
    {
      "indent": 0,
      "text": "12. Security Considerations",
      "section_title": true,
      "ja": "12.セキュリティの考慮事項"
    },
    {
      "indent": 0,
      "text": "12.1. SAAG Support",
      "section_title": true,
      "ja": "12.1。 SAAGサポート"
    },
    {
      "indent": 3,
      "text": "The LISP working group received security advice and guidance from the Security Area Advisory Group (SAAG). The SAAG has been involved early in the design process, and their input and reviews have been included in this document.",
      "ja": "LISPワーキンググループは、セキュリティエリア諮問グループ（SAAG）からのセキュリティアドバイスや指導を受けました。 SAAGは、設計プロセスの早い段階で関与していると、その入力とレビューは、本文書に含まれています。"
    },
    {
      "indent": 3,
      "text": "Comments from the SAAG included:",
      "ja": "SAAGからのコメントが含まれます："
    },
    {
      "indent": 3,
      "text": "1. Do not use asymmetric ciphers in the data plane.",
      "section_title": true,
      "ja": "1.データプレーンで非対称暗号を使用しないでください。"
    },
    {
      "indent": 3,
      "text": "2. Consider adding ECDH early in the design.",
      "section_title": true,
      "ja": "2.初期の設計でECDHを追加することを検討してください。"
    },
    {
      "indent": 3,
      "text": "3. Add Cipher Suites because ciphers are created more frequently than protocols that use them.",
      "ja": "暗号は、それらを使用するプロトコルよりも頻繁に作成されるため3.暗号スイートを追加します。"
    },
    {
      "indent": 3,
      "text": "4. Consider the newer AEAD technology so authentication comes with doing encryption.",
      "ja": "認証は、暗号化を行っているが付属していますので4.新しいAEAD技術を考えてみましょう。"
    },
    {
      "indent": 0,
      "text": "12.2. LISP-Crypto Security Threats",
      "section_title": true,
      "ja": "12.2。 LISP-暗号セキュリティの脅威"
    },
    {
      "indent": 3,
      "text": "Since ITRs and ETRs participate in key exchange over a public non-secure network, a man in the middle (MITM) could circumvent the key exchange and compromise data-plane confidentiality. This can happen when the MITM is acting as a Map-Replier and provides its own public key so the ITR and the MITM generate a shared secret key between them. If the MITM is in the data path between the ITR and ETR, it can use the shared secret key to decrypt traffic from the ITR.",
      "ja": "ITRのとETRSは公共の非セキュアネットワーク上の鍵交換に参加しているので、中間者（MITM）は、鍵交換と妥協データプレーンの機密性を回避することができます。 MITMは地図-リプライヤとして機能し、ITRとMITMは、それらの間の共有秘密鍵を生成するように、自身の公開鍵を提供されている場合に発生することがあります。 MITMは、ITRとETR間のデータ・パス内にある場合、それはITRからのトラフィックを解読するために共有秘密鍵を使用することができます。"
    },
    {
      "indent": 3,
      "text": "Since LISP can secure Map-Replies by the authentication process specified in [LISP-SEC], the ITR can detect when a MITM has signed a Map-Reply for an EID-prefix for which it is not authoritative. When an ITR determines that the signature verification fails, it discards and does not reuse the key exchange parameters, avoids using the ETR for encapsulation, and issues a severe log message to the network administrator. Optionally, the ITR can send RLOC-probes to the compromised RLOC to determine if the authoritative ETR is reachable. And when the ITR validates the signature of a Map-Reply, it can begin encrypting and encapsulating packets to the RLOC of ETR.",
      "ja": "LISPは、[LISP-SEC]で指定された認証プロセスマップ-返信を確保することができるので、MITMは、それが権威されていないEIDプレフィクスのためのマップリプライを締結したときに、ITRを検出することができます。 ITRは、署名の検証が失敗したと判断した場合、それは破棄し、鍵交換パラメータを再利用していない、カプセル化のためにETRを使用して回避し、ネットワーク管理者に重大なログメッセージを発行します。任意に、ITRは権威ETRが到達可能であるかどうかを決定するために妥協RLOCにRLOC・プローブを送信することができます。 ITRは、地図-返信の署名を検証するとき、それはETRのRLOCにパケットを暗号化し、カプセル化を開始することができます。"
    },
    {
      "indent": 0,
      "text": "13. IANA Considerations",
      "section_title": true,
      "ja": "13. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "This document describes a mechanism for encrypting LISP-encapsulated packets based on Diffie-Hellman key exchange procedures. During the exchange, the devices have to agree on a Cipher Suite to be used (i.e., the cipher and hash functions used to encrypt/decrypt and to sign/verify packets). The 8-bit Cipher Suite field is reserved for such purpose in the security material section of the Map-Request and Map-Reply messages.",
      "ja": "この文書では、のDiffie-Hellman鍵交換手順に基づいてLISPカプセル化パケットを暗号化するためのメカニズムについて説明します。交換時に、デバイスが暗号スイートに同意する必要が使用される（すなわち、暗号化/復号化および署名する/パケットを検証するために使用される暗号ハッシュ関数）。 8ビットの暗号スイートフィールドは地図リクエストや地図、返信メッセージのセキュリティ材料のセクションでそのような目的のために予約されています。"
    },
    {
      "indent": 3,
      "text": "IANA has created a new registry (as outlined in [RFC5226]) titled \"LISP Crypto Cipher Suite\". Initial values for the registry are provided below. Future assignments are to be made on a \"First Come, First Served\" basis [RFC5226].",
      "ja": "名称「LISP暗号化暗号スイート」（[RFC5226]に概説される）IANAは、新しいレジストリを作成しました。レジストリの初期値は、以下に提供されます。今後の割り当ては基本[RFC5226]を「早い者勝ち」で行われるべきです。"
    },
    {
      "indent": 3,
      "text": "+-----+--------------------------------------------+------------+\n|Value| Suite                                      | Reference  |\n+-----+--------------------------------------------+------------+\n|  0  | Reserved                                   | Section 6  |\n+-----+--------------------------------------------+------------+\n|  1  | LISP_2048MODP_AES128_CBC_SHA256            | Section 6  |\n+-----+--------------------------------------------+------------+\n|  2  | LISP_EC25519_AES128_CBC_SHA256             | Section 6  |\n+-----+--------------------------------------------+------------+\n|  3  | LISP_2048MODP_AES128_GCM                   | Section 6  |\n+-----+--------------------------------------------+------------+\n|  4  | LISP_3072MODP_AES128_GCM                   | Section 6  |\n+-----+--------------------------------------------+------------+\n|  5  | LISP_256_EC25519_AES128_GCM                | Section 6  |\n+-----+--------------------------------------------+------------+\n|  6  | LISP_256_EC25519_CHACHA20_POLY1305         | Section 6  |\n+-----+--------------------------------------------+------------+",
      "raw": true
    },
    {
      "indent": 25,
      "text": "LISP Crypto Cipher Suites",
      "ja": "LISP暗号暗号スイート"
    },
    {
      "indent": 0,
      "text": "14. References",
      "section_title": true,
      "ja": "14.参考文献"
    },
    {
      "indent": 0,
      "text": "14.1. Normative References",
      "section_title": true,
      "ja": "14.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[NIST-SP800-108] National Institute of Standards and Technology, \"Recommendation for Key Derivation Using Pseudorandom Functions\", NIST Special Publication SP 800-108, DOI 10.6028/NIST.SP.800-108, October 2009.",
      "ja": "[NIST-SP800-108]国立標準技術研究所、「擬似ランダム関数を使用した鍵導出のための勧告」、NIST特別出版SP 800から108、DOI 10.6028 / NIST.SP.800-108、2009年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <http://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<http://www.rfc-editor.org/info/ RFC2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC2631] Rescorla, E., \"Diffie-Hellman Key Agreement Method\", RFC 2631, DOI 10.17487/RFC2631, June 1999, <http://www.rfc-editor.org/info/rfc2631>.",
      "ja": "[RFC2631]レスコラ、E.、 \"ディフィー・ヘルマン鍵共有方式\"、RFC 2631、DOI 10.17487 / RFC2631、1999年6月、<http://www.rfc-editor.org/info/rfc2631>。"
    },
    {
      "indent": 3,
      "text": "[RFC3526] Kivinen, T. and M. Kojo, \"More Modular Exponential (MODP) Diffie-Hellman groups for Internet Key Exchange (IKE)\", RFC 3526, DOI 10.17487/RFC3526, May 2003, <http://www.rfc-editor.org/info/rfc3526>.",
      "ja": "[RFC3526] Kivinen、T.およびM.古城、 \"インターネット鍵交換のためのより多くのモジュラー指数（MODP）のDiffie-Hellmanグループ（IKE）\"、RFC 3526、DOI 10.17487 / RFC3526、2003年5月、<のhttp：// WWW。 rfc-editor.org/info/rfc3526>。"
    },
    {
      "indent": 3,
      "text": "[RFC4492] Blake-Wilson, S., Bolyard, N., Gupta, V., Hawk, C., and B. Moeller, \"Elliptic Curve Cryptography (ECC) Cipher Suites for Transport Layer Security (TLS)\", RFC 4492, DOI 10.17487/RFC4492, May 2006, <http://www.rfc-editor.org/info/rfc4492>.",
      "ja": "[RFC4492]ブレイク・ウィルソン、S.、Bolyard、N.、グプタ、V.、ホーク、C.、​​およびB.メラー、 \"楕円曲線暗号（ECC）暗号スイートトランスポート層セキュリティ（TLS）のための\"、RFC 4492 、DOI 10.17487 / RFC4492、2006年5月、<http://www.rfc-editor.org/info/rfc4492>。"
    },
    {
      "indent": 3,
      "text": "[RFC5116] McGrew, D., \"An Interface and Algorithms for Authenticated Encryption\", RFC 5116, DOI 10.17487/RFC5116, January 2008, <http://www.rfc-editor.org/info/rfc5116>.",
      "ja": "[RFC5116]マグリュー、D.、 \"認証暗号化のためのインタフェースとアルゴリズム\"、RFC 5116、DOI 10.17487 / RFC5116、2008年1月、<http://www.rfc-editor.org/info/rfc5116>。"
    },
    {
      "indent": 3,
      "text": "[RFC5226] Narten, T. and H. Alvestrand, \"Guidelines for Writing an IANA Considerations Section in RFCs\", BCP 26, RFC 5226, DOI 10.17487/RFC5226, May 2008, <http://www.rfc-editor.org/info/rfc5226>.",
      "ja": "[RFC5226] Narten氏、T.とH. Alvestrand、 \"RFCsにIANA問題部に書くためのガイドライン\"、BCP 26、RFC 5226、DOI 10.17487 / RFC5226、2008年5月、<http://www.rfc-editor.org /情報/ RFC5226>。"
    },
    {
      "indent": 3,
      "text": "[RFC6090] McGrew, D., Igoe, K., and M. Salter, \"Fundamental Elliptic Curve Cryptography Algorithms\", RFC 6090, DOI 10.17487/RFC6090, February 2011, <http://www.rfc-editor.org/info/rfc6090>.",
      "ja": "[RFC6090]マグリュー、D.、Igoe、K.、およびM.ソルター、 \"基礎楕円曲線暗号アルゴリズム\"、RFC 6090、DOI 10.17487 / RFC6090、2011年2月、<http://www.rfc-editor.org/情報/ rfc6090>。"
    },
    {
      "indent": 3,
      "text": "[RFC6830] Farinacci, D., Fuller, V., Meyer, D., and D. Lewis, \"The Locator/ID Separation Protocol (LISP)\", RFC 6830, DOI 10.17487/RFC6830, January 2013, <http://www.rfc-editor.org/info/rfc6830>.",
      "ja": "[RFC6830]ファリナッチ、D.、フラー、V.、マイヤー、D.、およびD.ルイス、 \"ロケータ/ ID分離プロトコル（LISP）\"、RFC 6830、DOI 10.17487 / RFC6830、2013年1月、<HTTP：/ /www.rfc-editor.org/info/rfc6830>。"
    },
    {
      "indent": 3,
      "text": "[RFC6973] Cooper, A., Tschofenig, H., Aboba, B., Peterson, J., Morris, J., Hansen, M., and R. Smith, \"Privacy Considerations for Internet Protocols\", RFC 6973, DOI 10.17487/RFC6973, July 2013, <http://www.rfc-editor.org/info/rfc6973>.",
      "ja": "[RFC6973]クーパー、A.、Tschofenig、H.、Aboba、B.、ピーターソン、J.、モリス、J.、ハンセン、M.、およびR.スミス、 \"インターネットプロトコルのためのプライバシーの考慮事項\"、RFC 6973、DOI 10.17487 / RFC6973、2013年7月、<http://www.rfc-editor.org/info/rfc6973>。"
    },
    {
      "indent": 3,
      "text": "[RFC7539] Nir, Y. and A. Langley, \"ChaCha20 and Poly1305 for IETF Protocols\", RFC 7539, DOI 10.17487/RFC7539, May 2015, <http://www.rfc-editor.org/info/rfc7539>.",
      "ja": "[RFC7539]ニール、Y.及びA.ラングレー、 \"IETFプロトコルのためのChaCha20とPoly1305\"、RFC 7539、DOI 10.17487 / RFC7539、2015年5月、<http://www.rfc-editor.org/info/rfc7539>。"
    },
    {
      "indent": 3,
      "text": "[RFC8060] Farinacci, D., Meyer, D., and J. Snijders, \"LISP Canonical Address Format (LCAF)\", RFC 8060, DOI 10.17487/RFC8060, February 2017, <http://www.rfc-editor.org/info/rfc8060>.",
      "ja": "[RFC8060]ファリナッチ、D.、マイヤー、D.、およびJ. Snijdersの、 \"LISP正規アドレスフォーマット（LCAF）\"、RFC 8060、DOI 10.17487 / RFC8060、2017年2月、<HTTP：//www.rfc-editor。組織/情報/ rfc8060>。"
    },
    {
      "indent": 0,
      "text": "14.2. Informative References",
      "section_title": true,
      "ja": "14.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[AES-CBC] McGrew, D., Foley, J., and K. Paterson, \"Authenticated Encryption with AES-CBC and HMAC-SHA\", Work in Progress, draft-mcgrew-aead-aes-cbc-hmac-sha2-05, July 2014.",
      "ja": "[AES-CBC]マグリュー、D.、フォーリー、J.、およびK.パターソン、 \"AES-CBCとHMAC-SHAで認証暗号化\"、進行中で働いて、ドラフトマグリュー-AEAD-AES-CBC-HMAC-SHA2 -05、2014年7月。"
    },
    {
      "indent": 3,
      "text": "[CHACHA-POLY] Langley, A. and W. Chang, \"ChaCha20 and Poly1305 based Cipher Suites for TLS\", Work in Progress, draft-agl-tls-chacha20poly1305-04, November 2013.",
      "ja": "[CHACHA-POLY]ラングレー、A.とW.チャン、 \"TLSのためのChaCha20とPoly1305ベースの暗号スイート\" が進行中で働いて、ドラフト-AGL-TLS-chacha20poly1305-04、2013年11月。"
    },
    {
      "indent": 3,
      "text": "[CURVE25519] Bernstein, D., \"Curve25519: new Diffie-Hellman speed records\", DOI 10.1007/11745853_14, <http://www.iacr.org/cryptodb/archive/2006/ PKC/3351/3351.pdf>.",
      "ja": "[CURVE25519]バーンスタイン、D.、 \"Curve25519：新しいDiffie-Hellman速記録\"、DOI 10.1007 / 11745853_14、<http://www.iacr.org/cryptodb/archive/2006/ PKC / 3351 / 3351.pdf>。"
    },
    {
      "indent": 3,
      "text": "[DH] Wikipedia, \"Diffie-Hellman key exchange\", January 2017, <https://en.wikipedia.org/w/index.php?title=Diffie%E2%80%9 3Hellman_key_exchange&oldid=759611604>.",
      "ja": "[DH]ウィキペディア、 \"のDiffie-Hellman鍵交換を\"、2017年1月、<https://en.wikipedia.org/w/index.php?title=Diffie%E2%80%9 3Hellman_key_exchange＆oldid = 759611604>。"
    },
    {
      "indent": 3,
      "text": "[LISP-DDT] Fuller, V., Lewis, D., Ermagan, V., Jain, A., and A. Smirnov, \"LISP Delegated Database Tree\", Work in Progress, draft-ietf-lisp-ddt-08, September 2016.",
      "ja": "[LISP-DDT]フラー、V.、ルイス、D.、Ermagan、V.、ジャイナ教、A.、およびA.スミルノフ、 \"LISP委任データベースツリー\" が進行中で働いて、ドラフト-IETF-lispの-DDT-08 、2016年9月。"
    },
    {
      "indent": 3,
      "text": "[LISP-SEC] Maino, F., Ermagan, V., Cabellos, A., and D. Saucez, \"LISP-Security (LISP-SEC)\", Work in Progress, draft-ietf-lisp-sec-12, November 2016.",
      "ja": "[LISP-SEC]メイノー、F.、Ermagan、V.、Cabellos、A.、およびD. Saucez、 \"LISP・セキュリティ（LISP-SEC）\"、進行中で働いて、ドラフトIETF-Lispの-SEC-12、 2016年11月。"
    },
    {
      "indent": 0,
      "text": "Acknowledgments",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "The authors would like to thank Dan Harkins, Joel Halpern, Fabio Maino, Ed Lopez, Roger Jorgensen, and Watson Ladd for their interest, suggestions, and discussions about LISP data-plane security. An individual thank you to LISP WG Chair Luigi Iannone for shepherding this document as well as contributing to the IANA Considerations section.",
      "ja": "著者は、LISPデータプレーンのセキュリティについての関心、提案、議論のためのダンハーキンズ、ジョエル・ハルパーン、ファビオメイノー、エド・ロペス、ロジャー・ヨルゲンセン、とワトソンラッドに感謝したいと思います。個人はこの文書を牧だけでなく、IANAの考慮事項のセクションに貢献するためにLISP WG議長ルイジIannoneをお願い致します。"
    },
    {
      "indent": 3,
      "text": "The authors would like to give a special thank you to Ilari Liusvaara for his extensive commentary and discussion. He has contributed his security expertise to make lisp-crypto as secure as the state of the art in cryptography.",
      "ja": "著者は、特別に彼の豊富な解説と議論のためIlari Liusvaaraにあなたに感謝したいと思い。彼は、暗号技術における最先端技術として安全なようlispの-暗号を作るために彼のセキュリティの専門知識を貢献してきました。"
    },
    {
      "indent": 3,
      "text": "In addition, the support and suggestions from the SAAG working group were helpful and appreciated.",
      "ja": "また、SAAGワーキンググループからの支援や提案が役に立つと評価されました。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Dino Farinacci lispers.net San Jose, California 95120 United States of America",
      "ja": "ディノファリナッチlispers.netサンノゼ、カリフォルニアアメリカの95120米国"
    },
    {
      "indent": 3,
      "text": "Phone: 408-718-2001 Email: farinacci@gmail.com",
      "ja": "電話番号：408-718-2001 Eメール：farinacci@gmail.com"
    },
    {
      "indent": 3,
      "text": "Brian Weis Cisco Systems 170 West Tasman Drive San Jose, California 95124-1706 United States of America",
      "ja": "ブライアン・ワイスシスコシステムズ170西タスマン・ドライブサンノゼ、カリフォルニアアメリカの95124から1706米国"
    },
    {
      "indent": 3,
      "text": "Phone: 408-526-4796 Email: bew@cisco.com",
      "ja": "電話番号：408-526-4796 Eメール：bew@cisco.com"
    }
  ]
}