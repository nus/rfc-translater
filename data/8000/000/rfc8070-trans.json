{
  "title": {
    "text": "RFC 8070 - Public Key Cryptography for Initial Authentication in Kerberos (PKINIT) Freshness Extension",
    "ja": "RFC 8070 - ケルベロス（PKINIT）鮮度延長での初期認証のための公開鍵暗号"
  },
  "number": 8070,
  "created_at": "2019-10-22 23:06:16.517834+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                     M. Short, Ed.\nRequest for Comments: 8070                                      S. Moore\nCategory: Standards Track                                      P. Miller\nISSN: 2070-1721                                    Microsoft Corporation\n                                                           February 2017",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Public Key Cryptography for Initial Authentication in Kerberos (PKINIT) Freshness Extension",
      "ja": "ケルベロス（PKINIT）鮮度延長での初期認証のための公開鍵暗号"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document describes how to further extend the Public Key Cryptography for Initial Authentication in Kerberos (PKINIT) extension (defined in RFC 4556) to exchange an opaque data blob that a Key Distribution Center (KDC) can validate to ensure that the client is currently in possession of the private key during a PKINIT Authentication Service (AS) exchange.",
      "ja": "この文書では、さらにキー配布センター（KDC）は、クライアントが現在であることを保証するために検証することができ、不透明なデータブロブを交換する（RFC 4556で定義された）ケルベロス（PKINIT）拡張子で最初の認証のために公開鍵暗号を拡張する方法について説明しますPKINIT認証サービス（AS）交換時秘密鍵の所有。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 7841.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 7841のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc8070.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc8070で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2017 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2017 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................2\n   1.1. Kerberos Message Flow Using KRB_AS_REQ without\n        Pre-authentication .........................................3\n   1.2. Requirements Language ......................................3\n2. Message Exchanges ...............................................4\n   2.1. Generation of KRB_AS_REQ Message ...........................4\n   2.2. Generation of KRB_ERROR Message ............................4\n   2.3. Generation of KRB_AS_REQ Message ...........................4\n   2.4. Receipt of KRB_AS_REQ Message ..............................5\n   2.5. Receipt of Second KRB_ERROR Message ........................5\n3. PreAuthentication Data Types ....................................5\n4. Extended PKAuthenticator ........................................6\n5. IANA Considerations .............................................6\n6. Security Considerations .........................................7\n7. Interoperability Considerations .................................7\n8. Normative References ............................................8\nAcknowledgements ...................................................8\nAuthors' Addresses .................................................9",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "The Kerberos PKINIT extension [RFC4556] defines two schemes for using asymmetric cryptography in a Kerberos pre-authenticator. One uses Diffie-Hellman key exchange and the other depends on public key encryption. The public key encryption scheme is less commonly used for two reasons:",
      "ja": "ケルベロスPKINIT拡張[RFC4556]はケルベロス前オーセンティケータに、非対称暗号を使用するための2つのスキームを定義します。一つはのDiffie-Hellman鍵交換を使用し、もう一方は公開鍵暗号に依存します。公開鍵暗号方式は、あまり一般的に二つの理由のために使用されます。"
    },
    {
      "indent": 3,
      "text": "o Elliptic Curve Cryptography (ECC) Support for PKINIT [RFC5349] only specified Elliptic Curve Diffie-Hellman (ECDH) key agreement, so it cannot be used for public key encryption.",
      "ja": "O PKINIT [RFC5349]のみ指定した楕円曲線のDiffie-Hellmanの（ECDH）鍵合意のための楕円曲線暗号（ECC）のサポートは、それは、公開鍵暗号化に使用することはできません。"
    },
    {
      "indent": 3,
      "text": "o Public key encryption requires certificates with an encryption key, which is not deployed on many existing smart cards.",
      "ja": "O公開鍵暗号は、多くの既存のスマートカード上に配備されていない暗号化鍵と証明書が必要です。"
    },
    {
      "indent": 3,
      "text": "In the Diffie-Hellman exchange, the client uses its private key only to sign the AuthPack structure (specified in Section 3.2.1 of [RFC4556]), which is performed before any traffic is sent to the KDC. Thus, a client can generate requests with future times in the PKAuthenticator, and then send those requests at those future times. Unless the time is outside the validity period of the client's certificate, the KDC will validate the PKAuthenticator and return a Ticket-Granting Ticket (TGT) the client can use without possessing the private key.",
      "ja": "Diffie-Hellman交換では、クライアントはすべてのトラフィックがKDCに送信される前に実行される（[RFC4556]のセクション3.2.1で指定）AuthPack構造を、署名する秘密鍵を使用しています。したがって、クライアントはPKAuthenticatorにおける将来の時間との要求を生成して、それらの将来の回でそれらの要求を送信することができます。時間は、クライアントの証明書の有効期間外である場合を除き、KDCは、クライアントが秘密鍵を所有せずに使用することができますPKAuthenticatorを検証し、チケット認可チケット（TGT）を返します。"
    },
    {
      "indent": 3,
      "text": "As a result, a client performing PKINIT with the Diffie-Hellman key exchange does not prove current possession of the private key being used for authentication. It proves only prior use of that key. Ensuring that the client has current possession of the private key requires that the signed PKAuthenticator data include information that the client could not have predicted.",
      "ja": "その結果、のDiffie-Hellman鍵交換をしてPKINITを実行するクライアントは、認証のために使用されている秘密鍵の現在の所有を証明しません。これは、そのキーの前にのみ使用することを証明しています。クライアントは、秘密鍵の現在の所有権を持っていることを保証することは署名PKAuthenticatorデータは、クライアントが予測していることができなかったという情報が含まれている必要があります。"
    },
    {
      "indent": 0,
      "text": "1.1. Kerberos Message Flow Using KRB_AS_REQ without Pre-authentication",
      "section_title": true,
      "ja": "1.1。事前認証なしKRB_AS_REQを使用してKerberosのメッセージフロー"
    },
    {
      "indent": 3,
      "text": "Today, password-based AS exchanges [RFC4120] often begin with the client sending a KRB_AS_REQ without pre-authentication. When the principal requires pre-authentication, the KDC responds with a KRB_ERROR containing information needed to complete an AS exchange, such as the supported encryption types and salt values. This message flow is illustrated below:",
      "ja": "今日では、パスワードベースの交流AS [RFC4120]は、多くの場合、事前認証なしでKRB_AS_REQを送信するクライアントで始まります。本人が事前認証を必要とする場合、KDCは、サポートされている暗号化の種類と塩の値として、AS交換を完了するために必要なKRB_ERROR含む情報で応答します。このメッセージ・フローは、以下に例示します："
    },
    {
      "indent": 3,
      "text": "Client KDC",
      "ja": "クライアントKDC"
    },
    {
      "indent": 3,
      "text": "AS-REQ without pre-authentication     ---->\n                                      <----     KRB-ERROR",
      "raw": true
    },
    {
      "indent": 3,
      "text": "AS-REQ                                ---->\n                                      <----     AS-REP",
      "raw": true
    },
    {
      "indent": 3,
      "text": "TGS-REQ                               ---->\n                                      <----     TGS-REP",
      "raw": true
    },
    {
      "indent": 27,
      "text": "Figure 1",
      "ja": "図1"
    },
    {
      "indent": 3,
      "text": "We can use a similar message flow with PKINIT, allowing the KDC to provide a token for the client to include in its KRB_AS_REQ to ensure that the PA_PK_AS_REQ [RFC4556] was not pre-generated.",
      "ja": "我々は、クライアントがPA_PK_AS_REQ [RFC4556]は予め生成されなかったことを確認するために、そのKRB_AS_REQに含めるためにKDCがトークンを提供することができ、PKINITと同様のメッセージ・フローを使用することができます。"
    },
    {
      "indent": 0,
      "text": "1.2. Requirements Language",
      "section_title": true,
      "ja": "1.2。要件言語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はあります[RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "2. Message Exchanges",
      "section_title": true,
      "ja": "2.メッセージ交換"
    },
    {
      "indent": 3,
      "text": "The following summarizes the message flow with extensions to [RFC4120] and [RFC4556] required to support a KDC-provided freshness token during the initial request for a ticket:",
      "ja": "以下は、チケットのための最初の要求時にKDCが提供する鮮度トークンをサポートするために必要な[RFC4120]と[RFC4556]の拡張子を持つメッセージ・フローを要約したものです。"
    },
    {
      "indent": 3,
      "text": "1. The client generates a KRB_AS_REQ, as specified in Section 2.9.3 of [RFC4120], that contains no PA_PK_AS_REQ and includes a freshness token request.",
      "ja": "1.クライアントは、KRB_AS_REQを生成し、[RFC4120]のセクション2.9.3で指定され、それにはPA_PK_AS_REQを含まず、鮮度トークン要求を含みます。"
    },
    {
      "indent": 3,
      "text": "2. The KDC generates a KRB_ERROR, as specified in Section 3.1.4 of [RFC4120], providing a freshness token.",
      "ja": "鮮度トークンを提供する、[RFC4120]のセクション3.1.4で指定されるように2 KDCは、KRB_ERRORを生成します。"
    },
    {
      "indent": 3,
      "text": "3. The client receives the error, as specified in Section 3.1.5 of [RFC4120], extracts the freshness token, and includes it as part of the KRB_AS_REQ as specified in [RFC4120] and [RFC4556].",
      "ja": "3.クライアントは、エラーを受信し、[RFC4120]のセクション3.1.5で指定されるように、鮮度のトークンを抽出し、[RFC4120]及び[RFC4556]で指定されるようにKRB_AS_REQの一部としてそれを含みます。"
    },
    {
      "indent": 3,
      "text": "4. The KDC receives and validates the KRB_AS_REQ, as specified in Section 3.2.2 of [RFC4556], then additionally validates the freshness token.",
      "ja": "4. KDCはKRB_AS_REQを受信し、検証し、[RFC4556]のセクション3.2.2で指定されるように、次いで、さらに鮮度トークンを検証します。"
    },
    {
      "indent": 3,
      "text": "5. The KDC and client continue, as specified in [RFC4120] and [RFC4556].",
      "ja": "5. KDCクライアントは[RFC4120]及び[RFC4556]で指定されるように、続けています。"
    },
    {
      "indent": 0,
      "text": "2.1. Generation of KRB_AS_REQ Message",
      "section_title": true,
      "ja": "2.1。 KRB_AS_REQメッセージの生成"
    },
    {
      "indent": 3,
      "text": "The client indicates support of freshness tokens by adding a padata element with padata-type PA_AS_FRESHNESS and padata-value of an empty octet string.",
      "ja": "クライアントはPADATA型PA_AS_FRESHNESS空オクテットストリングのPADATA値とPADATA要素を追加することによって、鮮度トークンのサポートを示しています。"
    },
    {
      "indent": 0,
      "text": "2.2. Generation of KRB_ERROR Message",
      "section_title": true,
      "ja": "2.2。 KRB_ERRORメッセージの生成"
    },
    {
      "indent": 3,
      "text": "The KDC will respond with a KRB_ERROR [RFC4120] message with the error-code KDC_ERR_PREAUTH_REQUIRED [RFC4120] adding a padata element with padata-type PA_AS_FRESHNESS and padata-value of the freshness token to the METHOD-DATA object.",
      "ja": "KDCはPADATA型PA_AS_FRESHNESSとMETHOD-DATAオブジェクトに鮮度トークンのPADATA値とPADATA元素を添加エラーコードKDC_ERR_PREAUTH_REQUIRED [RFC4120]とKRB_ERROR [RFC4120]メッセージで応答します。"
    },
    {
      "indent": 0,
      "text": "2.3. Generation of KRB_AS_REQ Message",
      "section_title": true,
      "ja": "2.3。 KRB_AS_REQメッセージの生成"
    },
    {
      "indent": 3,
      "text": "After the client receives the KRB-ERROR message containing a freshness token, it extracts the PA_AS_FRESHNESS padata-value field of the PA-DATA structure as an opaque data blob. The PA_AS_FRESHNESS padata-value field of the PA-DATA structure SHALL then be added as an opaque blob in the freshnessToken field when the client generates the PKAuthenticator specified in Section 4 for the PA_PK_AS_REQ message. This ensures that the freshness token value will be included in the signed data portion of the KRB_AS_REQ value.",
      "ja": "クライアントは、鮮度トークンを含むKRB-ERRORメッセージを受信した後、それは不透明なデータブロブとしてPA-DATA構造のPA_AS_FRESHNESS PADATA値フィールドを抽出します。 PA-DATA構造のPA_AS_FRESHNESS PADATA値フィールドは、クライアントがPA_PK_AS_REQメッセージについては、セクション4で指定PKAuthenticatorを生成するときfreshnessTokenフィールドに不透明なブロブとして添加することがSHALL。これは、鮮度トークン値がKRB_AS_REQ値の署名されたデータ部分に含まれることを保証します。"
    },
    {
      "indent": 0,
      "text": "2.4. Receipt of KRB_AS_REQ Message",
      "section_title": true,
      "ja": "2.4。 KRB_AS_REQメッセージの受信"
    },
    {
      "indent": 3,
      "text": "If the realm requires freshness and the PA_PK_AS_REQ message does not contain the freshness token, the KDC MUST return a KRB_ERROR [RFC4120] message with the error-code KDC_ERR_PREAUTH_FAILED [RFC4120] with a padata element with padata-type PA_AS_FRESHNESS and padata-value of the freshness token to the METHOD-DATA object.",
      "ja": "レルムは、新鮮さを必要としPA_PK_AS_REQメッセージは鮮度トークンが含まれていない、KDCはPADATA PADATA型PA_AS_FRESHNESS持つ要素とのPADATA値とエラーコードKDC_ERR_PREAUTH_FAILED [RFC4120]とKRB_ERROR [RFC4120]メッセージを返さなければならない場合METHOD-DATAオブジェクトに新鮮トークン。"
    },
    {
      "indent": 3,
      "text": "When the PA_PK_AS_REQ message contains a freshness token, after validating the PA_PK_AS_REQ message normally, the KDC will validate the freshnessToken value in the PKAuthenticator in an implementation-specific way. If the freshness token is not valid, the KDC MUST return a KRB_ERROR [RFC4120] message with the error-code KDC_ERR_PREAUTH_EXPIRED [RFC6113]. The e-data field of the error contains a METHOD-DATA object [RFC4120], which specifies a valid PA_AS_FRESHNESS padata-value. Since the freshness tokens are validated by KDCs in the same realm, standardizing the contents of the freshness token is not a concern for interoperability.",
      "ja": "PA_PK_AS_REQメッセージは鮮度トークンが含まれている場合、通常PA_PK_AS_REQメッセージを検証した後、KDCは実装固有の方法でPKAuthenticatorでfreshnessToken値を検証します。鮮度トークンが有効でない場合、KDCは、エラーコードKDC_ERR_PREAUTH_EXPIRED [RFC6113]でKRB_ERROR [RFC4120]メッセージを返さなければなりません。エラーの電子データフィールドは、有効なPA_AS_FRESHNESSのPADATA値を指定するMETHOD-DATAオブジェクト[RFC4120]を、含まれています。鮮度トークンが同じレルム内のKDCによって検証されているので、鮮度トークンの内容を標準化することは、相互運用性のための問題ではありません。"
    },
    {
      "indent": 0,
      "text": "2.5. Receipt of Second KRB_ERROR Message",
      "section_title": true,
      "ja": "2.5。第二にKRB_ERRORメッセージの受信"
    },
    {
      "indent": 3,
      "text": "If a client receives a KDC_ERR_PREAUTH_EXPIRED KRB_ERROR message that includes a freshness token, it SHOULD retry using the new freshness token.",
      "ja": "クライアントは新鮮さのトークンが含まれてKDC_ERR_PREAUTH_EXPIRED KRB_ERRORメッセージを受信した場合、それは新しい新鮮トークンを使用して再試行する必要があります。"
    },
    {
      "indent": 0,
      "text": "3. PreAuthentication Data Types",
      "section_title": true,
      "ja": "3.事前認証データ型"
    },
    {
      "indent": 3,
      "text": "The following are the new PreAuthentication data types:",
      "ja": "以下は、新しい事前認証データ型です："
    },
    {
      "indent": 15,
      "text": "+----------------------+-------------------+\n| Padata and Data Type | Padata-type Value |\n+----------------------+-------------------+\n|   PA_AS_FRESHNESS    |        150        |\n+----------------------+-------------------+",
      "raw": true
    },
    {
      "indent": 0,
      "text": "4. Extended PKAuthenticator",
      "section_title": true,
      "ja": "4.拡張PKAuthenticator"
    },
    {
      "indent": 3,
      "text": "The PKAuthenticator structure specified in Section 3.2.1 of [RFC4556] is extended to include a new freshnessToken as follows:",
      "ja": "[RFC4556]のセクション3.2.1で指定さPKAuthenticator構造は次のように新しいfreshnessTokenを含むように拡張されます。"
    },
    {
      "indent": 3,
      "text": "PKAuthenticator ::= SEQUENCE {\n   cusec        [0] INTEGER (0..999999),\n   ctime        [1] KerberosTime,\n             -- cusec and ctime are used as in [RFC4120], for\n             -- replay prevention.\n   nonce        [2] INTEGER (0..4294967295),\n             -- Chosen randomly;  this nonce does not need to\n             -- match with the nonce in the KDC-REQ-BODY.\n   paChecksum   [3] OCTET STRING OPTIONAL,\n             -- MUST be present.\n             -- Contains the SHA1 checksum, performed over\n             -- KDC-REQ-BODY.\n   ...,\n   freshnessToken     [4] OCTET STRING OPTIONAL,\n             -- PA_AS_FRESHNESS padata value as received from the\n             -- KDC. MUST be present if sent by KDC\n   ...\n}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "5. IANA Considerations",
      "section_title": true,
      "ja": "5. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "IANA has assigned numbers for PA_AS_FRESHNESS listed in a subregistry of the \"Kerberos Parameters\" registry titled \"Pre-authentication and Typed Data\" as follows:",
      "ja": "IANAは、次のように「事前認証および型付きデータ」と題し、「Kerberosのパラメータ」レジストリの副登録に記載されているPA_AS_FRESHNESSための番号が割り当てられています："
    },
    {
      "indent": 18,
      "text": "+------+-----------------+-----------+\n| Type |      Value      | Reference |\n+------+-----------------+-----------+\n| 150  | PA_AS_FRESHNESS | [RFC8070] |\n+------+-----------------+-----------+",
      "raw": true
    },
    {
      "indent": 0,
      "text": "6. Security Considerations",
      "section_title": true,
      "ja": "6.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "The freshness token SHOULD include signing, encrypting, or sealing data from the KDC to determine authenticity and prevent tampering.",
      "ja": "鮮度トークンは暗号化、又は真正性を決定し、改ざんを防止するためにKDCからデータを封止、署名が含まれるべきです。"
    },
    {
      "indent": 3,
      "text": "Freshness tokens serve to guarantee that the client had the key when constructing the AS-REQ. They are not required to be single use tokens or bound to specific AS exchanges. Part of the reason the token is opaque is to allow KDC implementers the freedom to add additional functionality as long as the tokens expire so that the \"freshness\" guarantee remains.",
      "ja": "フレッシュネストークンは、AS-REQを構築する場合、クライアントは鍵を持っていたことを保証するのに役立ちます。これらは、単回使用トークンまたは交換などの特定にバインドする必要はありません。トークンが不透明である理由の一部は、KDCがいる限り、「新鮮さ」保証が残るようにトークンの有効期限が切れるなどの追加機能を追加するために自由を実装者できるようにすることです。"
    },
    {
      "indent": 0,
      "text": "7. Interoperability Considerations",
      "section_title": true,
      "ja": "7.相互運用性に関する注意事項"
    },
    {
      "indent": 3,
      "text": "Since the client treats the KDC-provided data blob as opaque, changing the contents will not impact existing clients. Thus, extensions to the freshness token do not impact client interoperability.",
      "ja": "クライアントが不透明としてKDCが提供するデータブロブを扱いますので、内容を変更しても、既存のクライアントには影響しません。このように、鮮度トークンへの拡張は、クライアントの相互運用性に影響を与えません。"
    },
    {
      "indent": 3,
      "text": "Clients SHOULD NOT reuse freshness tokens across multiple exchanges. There is no guarantee that a KDC will allow a once-valid token to be used again. Thus, clients that do not retry with a new freshness token may not be compatible with KDCs, depending on how they choose to implement freshness validation.",
      "ja": "クライアントは、複数の取引所間で鮮度トークンを再利用すべきではありません。 KDCは、一度有効なトークンを再び使用できるようになります保証はありません。このように、新しい新鮮トークンを再試行していないクライアントは、彼らは新鮮さの検証を実装することを選択した方法に応じて、のKDCとの互換性がないかもしれません。"
    },
    {
      "indent": 3,
      "text": "Since upgrading clients takes time, implementers may consider allowing both freshness-token based exchanges and \"legacy\" exchanges without use of freshness tokens. However, until freshness tokens are required by the realm, the existing risks of pre-generated PKAuthenticators will remain.",
      "ja": "クライアントをアップグレードするには時間がかかるため、実装者は鮮度トークンを使用せずに鮮度トークンベースの交流と「レガシー」の交流の両方が可能に検討することができます。鮮度トークンがレルムによって要求されるまでは、事前に生成さPKAuthenticatorsの既存のリスクが残ります。"
    },
    {
      "indent": 0,
      "text": "8. Normative References",
      "section_title": true,
      "ja": "8.引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <http://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<http://www.rfc-editor.org/info/ RFC2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC4120] Neuman, C., Yu, T., Hartman, S., and K. Raeburn, \"The Kerberos Network Authentication Service (V5)\", RFC 4120, DOI 10.17487/RFC4120, July 2005, <http://www.rfc-editor.org/info/rfc4120>.",
      "ja": "[RFC4120]ノイマン、C.、ゆう、T.、ハルトマン、S.、およびK.レイバーン、 \"ケルベロスネットワーク認証サービス（V5）\"、RFC 4120、DOI 10.17487 / RFC4120、2005年7月、<HTTP：// www.rfc-editor.org/info/rfc4120>。"
    },
    {
      "indent": 3,
      "text": "[RFC4556] Zhu, L. and B. Tung, \"Public Key Cryptography for Initial Authentication in Kerberos (PKINIT)\", RFC 4556, DOI 10.17487/RFC4556, June 2006, <http://www.rfc-editor.org/info/rfc4556>.",
      "ja": "[RFC4556]朱、L.とB.桐、 \"ケルベロス（PKINIT）における初期認証のための公開鍵暗号\"、RFC 4556、DOI 10.17487 / RFC4556、2006年6月、<http://www.rfc-editor.org/情報/ RFC4556>。"
    },
    {
      "indent": 3,
      "text": "[RFC5349] Zhu, L., Jaganathan, K., and K. Lauter, \"Elliptic Curve Cryptography (ECC) Support for Public Key Cryptography for Initial Authentication in Kerberos (PKINIT)\", RFC 5349, DOI 10.17487/RFC5349, September 2008, <http://www.rfc-editor.org/info/rfc5349>.",
      "ja": "[RFC5349]朱、L.、Jaganathan、K.、およびK. Lauter、 \"ケルベロスにおける初期認証のための公開鍵暗号のための楕円曲線暗号（ECC）のサポート（PKINIT）\"、RFC 5349、DOI 10.17487は/ RFC5349、2008年9月、<http://www.rfc-editor.org/info/rfc5349>。"
    },
    {
      "indent": 3,
      "text": "[RFC6113] Hartman, S. and L. Zhu, \"A Generalized Framework for Kerberos Pre-Authentication\", RFC 6113, DOI 10.17487/RFC6113, April 2011, <http://www.rfc-editor.org/info/rfc6113>.",
      "ja": "[RFC6113]ハートマン、S.及びL.朱、 \"Kerberos事前認証のための一般フレームワーク\"、RFC 6113、DOI 10.17487 / RFC6113、2011年4月、<http://www.rfc-editor.org/info/rfc6113 >。"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Douglas E. Engert, Sam Hartman, Henry B. Hotz, Nikos Mavrogiannopoulos, Martin Rex, Nico Williams, and Tom Yu were key contributors to the discovery of the freshness issue in PKINIT.",
      "ja": "ダグラス・E. Engert、サム・ハートマン、ヘンリー・B・ホッツ、ニコスMavrogiannopoulos、マーティン・レックス、ニコ・ウィリアムズ、そしてトム・ユはPKINITで鮮度の問題の発見に重要な貢献者でした。"
    },
    {
      "indent": 3,
      "text": "Sam Hartman, Greg Hudson, Jeffrey Hutzelman, Nathan Ide, Benjamin Kaduk, Bryce Nordgren, Magnus Nystrom, Nico Williams, and Tom Yu reviewed the document and provided suggestions for improvements.",
      "ja": "サム・ハートマン、グレッグ・ハドソン、ジェフリーHutzelman、ネイサン井出、ベンジャミンKaduk、ブライスNordgren、マグナスNystrom、ニコ・ウィリアムズ、そしてトム・ユーは、文書を検討し、改善のための提案を提供します。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Michiko Short (editor) Microsoft Corporation United States of America",
      "ja": "美智子ショート（編集者）アメリカのマイクロソフト社、米国"
    },
    {
      "indent": 3,
      "text": "Email: michikos@microsoft.com",
      "ja": "メール：michikos@microsoft.com"
    },
    {
      "indent": 3,
      "text": "Seth Moore Microsoft Corporation United States of America",
      "ja": "アメリカのセス・ムーアMicrosoft Corporationの米国"
    },
    {
      "indent": 3,
      "text": "Email: sethmo@microsoft.com",
      "ja": "メール：sethmo@microsoft.com"
    },
    {
      "indent": 3,
      "text": "Paul Miller Microsoft Corporation United States of America",
      "ja": "アメリカのポール・ミラーMicrosoft Corporationの米国"
    },
    {
      "indent": 3,
      "text": "Email: paumil@microsoft.com",
      "ja": "メール：paumil@microsoft.com"
    }
  ]
}