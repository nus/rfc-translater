{
  "title": {
    "text": "RFC 8030 - Generic Event Delivery Using HTTP Push",
    "ja": "RFC 8030 - HTTPプッシュを使用した一般的なイベント配信"
  },
  "number": 8030,
  "created_at": "2019-10-22 09:47:54.134936+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                        M. Thomson\nRequest for Comments: 8030                                       Mozilla\nCategory: Standards Track                                    E. Damaggio\nISSN: 2070-1721                                           B. Raymor, Ed.\n                                                               Microsoft\n                                                           December 2016",
      "raw": true
    },
    {
      "indent": 17,
      "text": "Generic Event Delivery Using HTTP Push",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document describes a simple protocol for the delivery of real-time events to user agents. This scheme uses HTTP/2 server push.",
      "ja": "この文書では、ユーザエージェントへのリアルタイムのイベントの配信のための単純なプロトコルを記述しています。このスキームは、HTTP / 2サーバープッシュを使用しています。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 7841.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 7841のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc8030.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc8030で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2016 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2016 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3\n  1.1.  Conventions and Terminology . . . . . . . . . . . . . . .   4\n2.  Overview  . . . . . . . . . . . . . . . . . . . . . . . . . .   6\n  2.1.  HTTP Resources  . . . . . . . . . . . . . . . . . . . . .   7\n3.  Connecting to the Push Service  . . . . . . . . . . . . . . .   8\n4.  Subscribing for Push Messages . . . . . . . . . . . . . . . .   8\n  4.1.  Collecting Subscriptions into Sets  . . . . . . . . . . .   9\n5.  Requesting Push Message Delivery  . . . . . . . . . . . . . .  10\n  5.1.  Requesting Push Message Receipts  . . . . . . . . . . . .  10\n  5.2.  Push Message Time-To-Live . . . . . . . . . . . . . . . .  11\n  5.3.  Push Message Urgency  . . . . . . . . . . . . . . . . . .  13\n  5.4.  Replacing Push Messages . . . . . . . . . . . . . . . . .  14\n6.  Receiving Push Messages for a Subscription  . . . . . . . . .  15\n  6.1.  Receiving Push Messages for a Subscription Set  . . . . .  17\n  6.2.  Acknowledging Push Messages . . . . . . . . . . . . . . .  18\n  6.3.  Receiving Push Message Receipts . . . . . . . . . . . . .  19\n7.  Operational Considerations  . . . . . . . . . . . . . . . . .  20\n  7.1.  Load Management . . . . . . . . . . . . . . . . . . . . .  20\n  7.2.  Push Message Expiration . . . . . . . . . . . . . . . . .  20\n  7.3.  Subscription Expiration . . . . . . . . . . . . . . . . .  21\n    7.3.1.  Subscription Set Expiration . . . . . . . . . . . . .  21\n  7.4.  Implications for Application Reliability  . . . . . . . .  22\n  7.5.  Subscription Sets and Concurrent HTTP/2 Streams . . . . .  22\n8.  Security Considerations . . . . . . . . . . . . . . . . . . .  22\n  8.1.  Confidentiality from Push Service Access  . . . . . . . .  23\n  8.2.  Privacy Considerations  . . . . . . . . . . . . . . . . .  23\n  8.3.  Authorization . . . . . . . . . . . . . . . . . . . . . .  24\n  8.4.  Denial-of-Service Considerations  . . . . . . . . . . . .  25\n  8.5.  Logging Risks . . . . . . . . . . . . . . . . . . . . . .  25\n9.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  26\n  9.1.  Header Field Registrations  . . . . . . . . . . . . . . .  26\n  9.2.  Link Relation URNs  . . . . . . . . . . . . . . . . . . .  26\n  9.3.  Service Name and Port Number Registration . . . . . . . .  28\n10. References  . . . . . . . . . . . . . . . . . . . . . . . . .  28\n  10.1.  Normative References . . . . . . . . . . . . . . . . . .  28\n  10.2.  Informative References . . . . . . . . . . . . . . . . .  30\nAcknowledgements  . . . . . . . . . . . . . . . . . . . . . . . .  31\nAuthors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  31",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "Many applications on mobile and embedded devices require continuous access to network communications so that real-time events -- such as incoming calls or messages -- can be delivered (or \"pushed\") in a timely fashion. These devices typically have limited power reserves, so finding more efficient ways to serve application requirements greatly benefits the application ecosystem.",
      "ja": "そのような着信通話やメッセージなど -   - タイムリーに（または「プッシュ」）配信することができ、リアルタイムのイベントはなるように、モバイルおよび組み込みデバイス上の多くのアプリケーションは、ネットワーク通信への継続的なアクセスが必要です。これらのデバイスは、一般的にとても大きなアプリケーションのエコシステムに利益をもたらすアプリケーションの要件を提供するためのより効率的な方法を見つけ、パワー準備金が制限されています。"
    },
    {
      "indent": 3,
      "text": "One significant contributor to power usage is the radio. Radio communications consume a significant portion of the energy budget on a wireless device.",
      "ja": "電力使用量の一つの重要な要因はラジオです。無線通信は、無線デバイス上のエネルギー予算のかなりの部分を消費します。"
    },
    {
      "indent": 3,
      "text": "Uncoordinated use of persistent connections or sessions from multiple applications can contribute to unnecessary use of the device radio, since each independent session can incur its own overhead. In particular, keep-alive traffic used to ensure that middleboxes do not prematurely time out sessions can result in significant waste. Maintenance traffic tends to dominate over the long term, since events are relatively rare.",
      "ja": "それぞれ独立したセッションは、独自のオーバーヘッドが発生することができるため、複数のアプリケーションからの持続的な接続またはセッションのまとまりのない使用は、デバイスの無線の不必要な使用に貢献することができます。具体的には、キープアライブトラフィックがミドルボックスが途中でセッションが大幅に無駄になることがタイムアウトしないことを保証するために使用しました。イベントは比較的まれであるため、メンテナンスのトラフィックは、長期的に支配する傾向があります。"
    },
    {
      "indent": 3,
      "text": "Consolidating all real-time events into a single session ensures more efficient use of network and radio resources. A single service consolidates all events, distributing those events to applications as they arrive. This requires just one session, avoiding duplicated overhead costs.",
      "ja": "単一のセッションにすべてのリアルタイムイベントを統合することで、ネットワークリソースおよび無線リソースをより効率的に使用を保証します。単一のサービスは、彼らが到着すると、アプリケーションにこれらのイベントを配布し、すべてのイベントを統合します。これは、複製されたオーバーヘッドコストを避け、ただ一つのセッションが必要です。"
    },
    {
      "indent": 3,
      "text": "The W3C Push API [API] describes an API that enables the use of a consolidated push service from web applications. This document expands on that work by describing a protocol that can be used to:",
      "ja": "W3CプッシュAPI [API]は、Webアプリケーションから連結プッシュサービスの利用を可能にAPIを記述しています。この文書では、するために使用することができるプロトコルを記述することにより、その作業に展開されます。"
    },
    {
      "indent": 3,
      "text": "o request the delivery of a push message to a user agent,",
      "ja": "Oユーザーエージェントへのプッシュ・メッセージの配信を要求し、"
    },
    {
      "indent": 3,
      "text": "o create new push message delivery subscriptions, and",
      "ja": "新しいプッシュメッセージの配信サブスクリプションを作成すると、"
    },
    {
      "indent": 3,
      "text": "o monitor for new push messages.",
      "ja": "O新しいプッシュメッセージを監視。"
    },
    {
      "indent": 3,
      "text": "A standardized method of event delivery is particularly important for the W3C Push API, where application servers might need to use multiple push services. The subscription, management, and monitoring functions are currently fulfilled by proprietary protocols; these are adequate, but do not offer any of the advantages that standardization affords.",
      "ja": "イベント配信の標準化された方法は、アプリケーションサーバーは、複数のプッシュサービスを使用する必要があるかもしれませんW3CプッシュAPI、特に重要です。サブスクリプション、管理、および監視機能は、現在、独自のプロトコルによって実現されています。これらは適切であるが、標準化がもたらすことの利点のいずれかを提供していません。"
    },
    {
      "indent": 3,
      "text": "This document intentionally does not describe how a push service is discovered. Discovery of push services is left for future efforts, if it turns out to be necessary at all. User agents are expected to be configured with a URL for a push service.",
      "ja": "この文書では、意図的にプッシュサービスが発見された方法については説明しません。それがすべてで必要であることが判明した場合、プッシュサービスの発見は、今後の取り組みのために残されています。ユーザーエージェントは、プッシュサービスのためのURLで構成されることが期待されます。"
    },
    {
      "indent": 0,
      "text": "1.1. Conventions and Terminology",
      "section_title": true,
      "ja": "1.1. 表記と用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はあります[RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 3,
      "text": "This document defines the following terms:",
      "ja": "このドキュメントでは、次の用語を定義しています。"
    },
    {
      "indent": 3,
      "text": "application: Both the sender and the ultimate consumer of push messages. Many applications have components that are run on a user agent and other components that run on servers.",
      "ja": "アプリケーション：送信者とプッシュメッセージの最終的な消費者の両方。多くのアプリケーションは、ユーザエージェントおよびサーバ上で実行する他のコンポーネント上で実行されるコンポーネントを持っています。"
    },
    {
      "indent": 3,
      "text": "application server: The component of an application that usually runs on a server and requests the delivery of a push message.",
      "ja": "アプリケーションサーバ：通常、サーバー上で動作し、プッシュメッセージの配信を要求するアプリケーションのコンポーネント。"
    },
    {
      "indent": 3,
      "text": "push message subscription: A message delivery context that is established between the user agent and the push service, and shared with the application server. All push messages are associated with a push message subscription.",
      "ja": "プッシュ・メッセージ・サブスクリプション：ユーザエージェントとプッシュサービスとの間で確立され、アプリケーションサーバと共有されたメッセージ配信コンテキスト。すべてのプッシュメッセージはプッシュメッセージのサブスクリプションに関連付けられています。"
    },
    {
      "indent": 3,
      "text": "push message subscription set: A message delivery context that is established between the user agent and the push service that collects multiple push message subscriptions into a set.",
      "ja": "ユーザエージェントとセットに複数のプッシュ・メッセージ・サブスクリプションを収集プッシュサービスとの間で確立されたメッセージ配信コンテキスト：メッセージ・サブスクリプション・セットをプッシュします。"
    },
    {
      "indent": 3,
      "text": "push message: A message sent from an application server to a user agent via a push service.",
      "ja": "プッシュメッセージ：プッシュサービスを介してユーザエージェントにアプリケーションサーバから送信されたメッセージ。"
    },
    {
      "indent": 3,
      "text": "push message receipt: A message delivery confirmation sent from the push service to the application server.",
      "ja": "メッセージ受信をプッシュ：アプリケーションサーバへのプッシュサービスから送信されたメッセージの配信確認を。"
    },
    {
      "indent": 3,
      "text": "push service: A service that delivers push messages to user agents.",
      "ja": "プッシュサービス：ユーザエージェントにメッセージをプッシュ配信したサービス。"
    },
    {
      "indent": 3,
      "text": "user agent: A device and software that is the recipient of push messages.",
      "ja": "ユーザーエージェント：プッシュメッセージの受信者であるデバイスとソフトウェア。"
    },
    {
      "indent": 3,
      "text": "Examples in this document use the HTTP/1.1 message format [RFC7230]. Many of the exchanges can be completed using HTTP/1.1:",
      "ja": "この文書に記載されている例は、HTTP / 1.1のメッセージフォーマット[RFC7230]を使用します。取引所の多くは、HTTP / 1.1を使用して完了することができます。"
    },
    {
      "indent": 3,
      "text": "o Subscribing for Push Messages (Section 4)",
      "ja": "プッシュメッセージのためにサブスクライブO（セクション4）"
    },
    {
      "indent": 3,
      "text": "o Requesting Push Message Delivery (Section 5)",
      "ja": "O要求プッシュメッセージ配信（第5節）"
    },
    {
      "indent": 3,
      "text": "o Replacing Push Messages (Section 5.4)",
      "ja": "プッシュメッセージの交換O（5.4節）"
    },
    {
      "indent": 3,
      "text": "o Acknowledging Push Messages (Section 6.2)",
      "ja": "プッシュメッセージを認識し、O（6.2節）"
    },
    {
      "indent": 3,
      "text": "When an example depends on HTTP/2 server push, the more verbose frame format from [RFC7540] is used:",
      "ja": "例では、HTTP / 2サーバープッシュに依存する場合、[RFC7540]から、より詳細なフレームフォーマットが使用されます。"
    },
    {
      "indent": 3,
      "text": "o Receiving Push Messages for a Subscription (Section 6)",
      "ja": "サブスクリプションのプッシュメッセージの受信O（第6節）"
    },
    {
      "indent": 3,
      "text": "o Receiving Push Messages for a Subscription Set (Section 6.1)",
      "ja": "Oサブスクリプション・セットのプッシュメッセージの受信（6.1節）"
    },
    {
      "indent": 3,
      "text": "o Receiving Push Message Receipts (Section 6.3)",
      "ja": "受信プッシュメッセージの領収書O（6.3節）"
    },
    {
      "indent": 3,
      "text": "All examples use HTTPS over the default port (443) rather than the registered port (1001). A push service deployment might prefer this configuration to maximize chances for user agents to reach the service. A push service might use HTTP alternative services to redirect a user agent to the registered port (1001) to gain the benefits of the standardized HTTPS port without sacrificing reachability (see Section 3). This would only be apparent in the examples through the inclusion of the Alt-Used header field [RFC7838] in requests from the user agent to the push service.",
      "ja": "すべての例では、デフォルトポート（443）というよりも登録されているポート（1001）上でHTTPSを使用しています。プッシュサービスの展開には、ユーザエージェントがサービスに到達するためのチャンスを最大化するために、この設定を好むかもしれません。プッシュサービスは、（セクション3を参照）到達可能性を犠牲にすることなく、標準化されたHTTPSポートの利益を得るために登録されているポート（1001）へのユーザーエージェントをリダイレクトするHTTPの代替サービスを使用する場合があります。これは、プッシュサービスへのユーザ・エージェントからの要求にAltキー使用されるヘッダフィールドの包含[RFC7838]を介して実施例には明らかであろう。"
    },
    {
      "indent": 3,
      "text": "Examples do not include specific methods for push message encryption or application server authentication because the protocol does not define a mandatory system. The examples in Voluntary Application Server Identification [VAPID] and Message Encryption for WebPush [ENCRYPT] demonstrate the approach adopted by the W3C Push API [API] for its requirements.",
      "ja": "プロトコルは必須のシステムを定義していないので、例としては、プッシュメッセージの暗号化やアプリケーションサーバーの認証のための具体的な方法が含まれていません。 WebPush [ENCRYPT]自主アプリケーションサーバ識別[つまらない]とメッセージの暗号化の例は、その要件についてW3CプッシュAPI [API]によって採用されたアプローチを実証します。"
    },
    {
      "indent": 0,
      "text": "2. Overview",
      "section_title": true,
      "ja": "2.概要"
    },
    {
      "indent": 3,
      "text": "A general model for push services includes three basic actors: a user agent, a push service, and an application (server).",
      "ja": "ユーザエージェント、プッシュサービス、およびアプリケーション（サーバー）：プッシュサービスのための一般的なモデルは、3人の基本的な俳優を含んでいます。"
    },
    {
      "indent": 4,
      "text": "+-------+           +--------------+       +-------------+\n|  UA   |           | Push Service |       | Application |\n+-------+           +--------------+       |   Server    |\n    |                      |               +-------------+\n    |      Subscribe       |                      |\n    |--------------------->|                      |\n    |       Monitor        |                      |\n    |<====================>|                      |\n    |                      |                      |\n    |          Distribute Push Resource           |\n    |-------------------------------------------->|\n    |                      |                      |\n    :                      :                      :\n    |                      |     Push Message     |\n    |    Push Message      |<---------------------|\n    |<---------------------|                      |\n    |                      |                      |",
      "raw": true
    },
    {
      "indent": 22,
      "text": "Figure 1: WebPush Architecture",
      "ja": "図1：WebPushアーキテクチャ"
    },
    {
      "indent": 3,
      "text": "At the very beginning of the process, a new message subscription is created by the user agent and then distributed to its application server. This subscription is the basis of all future interactions between the actors. A subscription is used by the application server to send messages to the push service for delivery to the user agent. The user agent uses the subscription to monitor the push service for any incoming message.",
      "ja": "プロセスの最初に、新しいメッセージのサブスクリプションには、ユーザエージェントによって作成され、そのアプリケーションサーバに配布します。このサブスクリプションは、俳優の間のすべての将来の相互作用の基礎となっています。サブスクリプションは、ユーザエージェントに配信するためにプッシュサービスにメッセージを送信するために、アプリケーション・サーバーで使用されています。ユーザーエージェントは、すべての着信メッセージのプッシュサービスを監視するためにサブスクリプションを使用しています。"
    },
    {
      "indent": 3,
      "text": "To offer more control for authorization, a message subscription is modeled as two resources with different capabilities:",
      "ja": "承認のためのより多くの制御を提供するために、メッセージのサブスクリプションは、異なる機能を持つ2つのリソースとしてモデル化されています。"
    },
    {
      "indent": 3,
      "text": "o A subscription resource is used to receive messages from a subscription and to delete a subscription. It is private to the user agent.",
      "ja": "Oサブスクリプションのリソースは、サブスクリプションからメッセージを受信すると、サブスクリプションを削除するために使用されます。これは、ユーザーエージェントにプライベートです。"
    },
    {
      "indent": 3,
      "text": "o A push resource is used to send messages to a subscription. It is public and shared by the user agent with its application server.",
      "ja": "Oプッシュリソースは、サブスクリプションにメッセージを送信するために使用されます。これは、公共とそのアプリケーションサーバとユーザエージェントに共有されています。"
    },
    {
      "indent": 3,
      "text": "It is expected that a unique subscription will be distributed to each application; however, there are no inherent cardinality constraints in the protocol. Multiple subscriptions might be created for the same application, or multiple applications could use the same subscription. Note, however, that sharing subscriptions has security and privacy implications.",
      "ja": "ユニークなサブスクリプションは、各アプリケーションに配信されることが予想されます。しかし、プロトコルには、固有のカーディナリティの制約はありません。複数のサブスクリプションは、同じアプリケーションのために作成されるかもしれない、または複数のアプリケーションは、同じサブスクリプションを使用することができます。サブスクリプションを共有することは、セキュリティとプライバシーの意味を持っていること、しかし、注意してください。"
    },
    {
      "indent": 3,
      "text": "Subscriptions have a limited lifetime. They can also be terminated by either the push service or the user agent at any time. User agents and application servers must be prepared to manage changes in the subscription state.",
      "ja": "サブスクリプションは、限られた寿命を持っています。彼らはまた、任意の時点でプッシュサービスやユーザエージェントのどちらかで終了することができます。ユーザーエージェントおよびアプリケーション・サーバーは、サブスクリプションの状態の変化を管理するために準備する必要があります。"
    },
    {
      "indent": 0,
      "text": "2.1. HTTP Resources",
      "section_title": true,
      "ja": "2.1.  HTTPリソース"
    },
    {
      "indent": 3,
      "text": "This protocol uses HTTP resources [RFC7230] and link relations [RFC5988]. The following resources are defined:",
      "ja": "このプロトコルは、HTTPリソース[RFC7230]とリンク関係[RFC5988]を使用しています。次のリソースが定義されています。"
    },
    {
      "indent": 3,
      "text": "push service: This resource is used to create push message subscriptions (Section 4). A URL for the push service is configured into user agents.",
      "ja": "プッシュサービス：このリソースは、プッシュメッセージサブスクリプション（第4節）を作成するために使用されます。プッシュサービスのためのURLは、ユーザーエージェントに設定されています。"
    },
    {
      "indent": 3,
      "text": "push message subscription: This resource provides read and delete access for a message subscription. A user agent receives push messages (Section 6) using a push message subscription. Every push message subscription has exactly one push resource associated with it.",
      "ja": "プッシュメッセージのサブスクリプション：このリソースが読み込まれ、メッセージのサブスクリプションのアクセスを削除しています。ユーザエージェントは、プッシュ・メッセージ・サブスクリプションを使用してメッセージ（第6節）を押し受け取ります。すべてのプッシュメッセージのサブスクリプションは、それに関連付けられた正確に一つのプッシュリソースを持っています。"
    },
    {
      "indent": 3,
      "text": "push message subscription set: This resource provides read and delete access for a collection of push message subscriptions. A user agent receives push messages (Section 6.1) for all the push message subscriptions in the set. A link relation of type \"urn:ietf:params:push:set\" identifies a push message subscription set.",
      "ja": "プッシュメッセージのサブスクリプション・セット：このリソースは、プッシュメッセージサブスクリプションのコレクションの読み取りアクセス権、および削除しています。ユーザーエージェントは、セット内のすべてのプッシュメッセージのサブスクリプションのメッセージ（6.1節）を押し受けます。タイプのリンク関係「URN：IETF：のparams：プッシュ：セットには、」プッシュメッセージのサブスクリプション・セットを識別します。"
    },
    {
      "indent": 3,
      "text": "push: An application server requests the delivery (Section 5) of a push message using a push resource. A link relation of type \"urn:ietf:params:push\" identifies a push resource.",
      "ja": "プッシュ：アプリケーションサーバは、プッシュリソースを使用してプッシュ・メッセージの配信（セクション5）を要求します。タイプのリンク関係「URN：IETF：のparams：プッシュは、」プッシュリソースを識別する。"
    },
    {
      "indent": 3,
      "text": "push message: The push service creates a push message resource to identify push messages that have been accepted for delivery (Section 5). The push message resource is also deleted by the user agent to acknowledge receipt (Section 6.2) of a push message.",
      "ja": "メッセージをプッシュ：プッシュサービスは、配信のために受理されているプッシュメッセージ（第5節）を識別するために、プッシュメッセージリソースを作成します。プッシュメッセージリソースもプッシュメッセージの受信（6.2節）を確認するためにユーザエージェントによって削除されます。"
    },
    {
      "indent": 3,
      "text": "receipt subscription: An application server receives delivery confirmations (Section 5.1) for push messages using a receipt subscription. A link relation of type \"urn:ietf:params:push:receipt\" identifies a receipt subscription.",
      "ja": "領収書のサブスクリプション：アプリケーションサーバは、領収書のサブスクリプションを使用してプッシュメッセージの配信確認（5.1節）を受け取ります。タイプのリンク関係「URN：IETF：のparams：プッシュ：領収書は」領収書のサブスクリプションを識別します。"
    },
    {
      "indent": 0,
      "text": "3. Connecting to the Push Service",
      "section_title": true,
      "ja": "3.プッシュサービスへの接続"
    },
    {
      "indent": 3,
      "text": "The push service MUST use HTTP over Transport Layer Security (TLS) [RFC2818] following the recommendations in [RFC7525]. The push service shares the same default port number (443/TCP) with HTTPS, but MAY also advertise the IANA-allocated TCP System Port (1001) using HTTP alternative services [RFC7838].",
      "ja": "プッシュサービスは、[RFC7525]の推奨事項以下のトランスポート層セキュリティ（TLS）[RFC2818]の上にHTTPを使用しなければなりません。プッシュサービスを共有し、同じデフォルトのポート番号（443 / TCP）HTTPSではなく、HTTPの代替サービス[RFC7838]を使用してIANAに割り当てられたTCPポートシステム（1001）広告を出すかもしれません。"
    },
    {
      "indent": 3,
      "text": "While the default port (443) offers broad reachability characteristics, it is most often used for web-browsing scenarios with a lower idle timeout than other ports configured in middleboxes. For WebPush scenarios, this would contribute to unnecessary radio communications to maintain the connection on battery-powered devices.",
      "ja": "デフォルトポート（443）は、幅広い到達可能性特性を提供していますが、それはほとんどの場合、ミドルボックスで構成された他のポートよりも低く、アイドルタイムアウトを使用してWebブラウジングのシナリオのために使用されています。 WebPushのシナリオの場合、これは、バッテリ駆動機器の接続を維持するために、不要な無線通信に貢献するであろう。"
    },
    {
      "indent": 3,
      "text": "Advertising the alternate port (1001) allows middleboxes to optimize idle timeouts for connections specific to push scenarios with the expectation that data exchange will be infrequent.",
      "ja": "代替ポート（1001）広告と、中間装置は、データ交換は稀であろうと期待してシナリオをプッシュする特定の接続のアイドルタイムアウトを最適化することができます。"
    },
    {
      "indent": 3,
      "text": "Middleboxes SHOULD comply with REQ-5 in [RFC5382], which states that \"the value of the 'established connection idle-timeout' MUST NOT be less than 2 hours 4 minutes\".",
      "ja": "中間装置は、REQ-5「『確立された接続アイドルタイムアウト』の値が2時間未満で4分であってはいけません」と述べている[RFC5382]に準拠します。"
    },
    {
      "indent": 0,
      "text": "4. Subscribing for Push Messages",
      "section_title": true,
      "ja": "4.プッシュメッセージのサブスクライブ"
    },
    {
      "indent": 3,
      "text": "A user agent sends a POST request to its configured push service resource to create a new subscription.",
      "ja": "ユーザーエージェントは、新しいサブスクリプションを作成するために、その構成されたプッシュサービスリソースへのPOSTリクエストを送信します。"
    },
    {
      "indent": 3,
      "text": "POST /subscribe HTTP/1.1 Host: push.example.net",
      "ja": "POST /サブスクライブHTTP / 1.1ホスト：push.example.net"
    },
    {
      "indent": 3,
      "text": "A 201 (Created) response indicates that the push subscription was created. A URI for the push message subscription resource that was created in response to the request MUST be returned in the Location header field.",
      "ja": "201（作成される）応答は、プッシュサブスクリプションが作成されたことを示しています。要求に応じて作成されたプッシュ・メッセージ・サブスクリプション・リソースのURIは、Locationヘッダフィールドに返さなければなりません。"
    },
    {
      "indent": 3,
      "text": "The push service MUST provide a URI for the push resource corresponding to the push message subscription in a link relation of type \"urn:ietf:params:push\".",
      "ja": "「：IETF：のparams：プッシュURN」プッシュサービスは、タイプのリンク関係でプッシュメッセージのサブスクリプションに対応するプッシュリソースのURIを提供しなければなりません。"
    },
    {
      "indent": 3,
      "text": "An application-specific method is used to distribute the push URI to the application server. Confidentiality protection and application server authentication MUST be used to ensure that this URI is not disclosed to unauthorized recipients (Section 8.3).",
      "ja": "アプリケーション固有の方法は、アプリケーションサーバーにプッシュURIを配布するために使用されます。機密性の保護とアプリケーションサーバーの認証は、このURIが不正な受信者（8.3節）に開示されていないことを確認するために使用しなければなりません。"
    },
    {
      "indent": 3,
      "text": "HTTP/1.1 201 Created\nDate: Thu, 11 Dec 2014 23:56:52 GMT\nLink: </push/JzLQ3raZJfFBR0aqvOMsLrt54w4rJUsV>;\n        rel=\"urn:ietf:params:push\"\nLink: </subscription-set/4UXwi2Rd7jGS7gp5cuutF8ZldnEuvbOy>;\n        rel=\"urn:ietf:params:push:set\"\nLocation: https://push.example.net/subscription/LBhhw0OohO-Wl4Oi971UG",
      "raw": true
    },
    {
      "indent": 0,
      "text": "4.1. Collecting Subscriptions into Sets",
      "section_title": true,
      "ja": "4.1. セットにサブスクリプションを収集"
    },
    {
      "indent": 3,
      "text": "Collecting multiple push message subscriptions into a subscription set can represent a significant efficiency improvement for push services and user agents. The push service MAY provide a URI for a subscription set resource in a link relation of type \"urn:ietf:params:push:set\".",
      "ja": "サブスクリプション・セットに複数のプッシュ・メッセージ・サブスクリプションを収集するプッシュサービス及びユーザエージェントのための重要な効率改善を表すことができます。プッシュサービスは、タイプのリンク関係にあるサブスクリプション・セット・リソース「：IETF：のparams：プッシュ：設定URN」のURIを提供することができます。"
    },
    {
      "indent": 3,
      "text": "When a subscription set is returned in a push message subscription response, the user agent SHOULD include this subscription set in a link relation of type \"urn:ietf:params:push:set\" in subsequent requests to create new push message subscriptions.",
      "ja": "新しいプッシュメッセージのサブスクリプションを作成するために、後続の要求では、サブスクリプション・セットがプッシュメッセージ加入応答で返された場合、ユーザーエージェントは、タイプのリンク関係「セット：IETF：のparams：：プッシュ壷」に設定されたこのサブスクリプションを含むべきです。"
    },
    {
      "indent": 3,
      "text": "A user agent MAY omit the subscription set if it is unable to receive push messages in an aggregated way for the lifetime of the subscription. This might be necessary if the user agent is monitoring subscriptions on behalf of other push message receivers.",
      "ja": "サブスクリプションの有効期間の集計方法でプッシュメッセージを受信できない場合、ユーザエージェントは、サブスクリプション・セットを省略することができます。ユーザエージェントが他のプッシュメッセージの受信者に代わってサブスクリプションを監視している場合、これが必要になることがあります。"
    },
    {
      "indent": 3,
      "text": "POST /subscribe HTTP/1.1 Host: push.example.net Link: </subscription-set/4UXwi2Rd7jGS7gp5cuutF8ZldnEuvbOy>; rel=\"urn:ietf:params:push:set\"",
      "ja": "POST /サブスクライブHTTP / 1.1ホスト：push.example.netリンク：</サブスクリプション・セット/ 4UXwi2Rd7jGS7gp5cuutF8ZldnEuvbOy>。 REL = \"壷：IETF：のparams：プッシュ：セット\""
    },
    {
      "indent": 3,
      "text": "The push service SHOULD return the same subscription set in its response, although it MAY return a new subscription set if it is unable to reuse the one provided by the user agent.",
      "ja": "ユーザエージェントが提供するものを再利用することができないならば、それは新しいサブスクリプション・セットを返すかもしれないがプッシュサービスは、その応答に設定された同じサブスクリプションを返すべきです。"
    },
    {
      "indent": 3,
      "text": "HTTP/1.1 201 Created\nDate: Thu, 11 Dec 2014 23:56:52 GMT\nLink: </push/YBJNBIMwwA_Ag8EtD47J4A>;\n        rel=\"urn:ietf:params:push\"\nLink: </subscription-set/4UXwi2Rd7jGS7gp5cuutF8ZldnEuvbOy>;\n        rel=\"urn:ietf:params:push:set\"\nLocation: https://push.example.net/subscription/i-nQ3A9Zm4kgSWg8_ZijV",
      "raw": true
    },
    {
      "indent": 3,
      "text": "A push service MUST return a 400 (Bad Request) status code for requests that contain an invalid subscription set. A push service MAY return a 429 (Too Many Requests) status code [RFC6585] to reject requests that omit a subscription set.",
      "ja": "プッシュサービスは、無効なサブスクリプション・セットが含まれているリクエストに対して400（不正な要求）ステータスコードを返さなければなりません。プッシュサービスは、サブスクリプション・セットを省略する要求を拒否するために429（トゥー多くの要求）ステータスコード[RFC6585]を返してもよいです。"
    },
    {
      "indent": 3,
      "text": "How a push service detects that requests originate from the same user agent is implementation-specific but could take ambient information into consideration, such as the TLS connection, source IP address, and port. Implementers are reminded that some heuristics can produce false positives and hence, cause requests to be rejected incorrectly.",
      "ja": "どのようにプッシュサービスは、リクエストが同じユーザーエージェントに由来することを検出すると、実装固有であるが、そのようなTLS接続、送信元IPアドレス、およびポートとして、考慮に周囲の情報を取ることができます。実装者は、いくつかのヒューリスティックは偽陽性を生成し、それゆえ、要求が間違って拒否されることがありますことを思い出させています。"
    },
    {
      "indent": 0,
      "text": "5. Requesting Push Message Delivery",
      "section_title": true,
      "ja": "5.要求プッシュメッセージ配信"
    },
    {
      "indent": 3,
      "text": "An application server requests the delivery of a push message by sending an HTTP POST request to a push resource distributed to the application server by a user agent. The content of the push message is included in the body of the request.",
      "ja": "アプリケーションサーバは、ユーザエージェントによってアプリケーションサーバに配信プッシュリソースにHTTP POSTリクエストを送信することによって、プッシュ・メッセージの配信を要求します。プッシュメッセージの内容は、要求の本体に含まれています。"
    },
    {
      "indent": 3,
      "text": "POST /push/JzLQ3raZJfFBR0aqvOMsLrt54w4rJUsV HTTP/1.1 Host: push.example.net TTL: 15 Content-Type: text/plain;charset=utf8 Content-Length: 36",
      "ja": "POST /プッシュ/ JzLQ3raZJfFBR0aqvOMsLrt54w4rJUsV HTTP / 1.1ホスト：push.example.netのTTL：15のContent-Type：text / plainの;のcharset = UTF8のコンテンツの長さ：36"
    },
    {
      "indent": 3,
      "text": "iChYuI3jMzt3ir20P8r_jgRR-dSuN182x7iB",
      "ja": "iChYuI3jMzt3ir20P8r_jgRR-dSuN182x7iB"
    },
    {
      "indent": 3,
      "text": "A 201 (Created) response indicates that the push message was accepted. A URI for the push message resource that was created in response to the request MUST be returned in the Location header field. This does not indicate that the message was delivered to the user agent.",
      "ja": "201（作成される）応答は、プッシュメッセージが受け入れられたことを示しています。要求に応じて作成されたプッシュ・メッセージ・リソースのURIは、Locationヘッダフィールドに返さなければなりません。これは、メッセージがユーザエージェントに配信されたことを示すものではありません。"
    },
    {
      "indent": 3,
      "text": "HTTP/1.1 201 Created Date: Thu, 11 Dec 2014 23:56:55 GMT Location: https://push.example.net/message/qDIYHNcfAIPP_5ITvURr-d6BGt",
      "ja": "HTTP / 1.1 201作成日：木、2014年12月11日23時56分55秒GMT場所：https://push.example.net/message/qDIYHNcfAIPP_5ITvURr-d6BGt"
    },
    {
      "indent": 0,
      "text": "5.1. Requesting Push Message Receipts",
      "section_title": true,
      "ja": "5.1. プッシュメッセージの領収書を要求します"
    },
    {
      "indent": 3,
      "text": "An application server can include the Prefer header field [RFC7240] with the \"respond-async\" preference to request confirmation from the push service when a push message is delivered and then acknowledged by the user agent. The push service MUST support delivery confirmations.",
      "ja": "アプリケーションサーバは、プッシュメッセージを配信した後、ユーザーエージェントによって確認されたときにプッシュサービスからの確認を要求するために「応答-非同期」優先で優先ヘッダフィールド[RFC7240]を含むことができます。プッシュサービスは、配信確認をサポートしなければなりません。"
    },
    {
      "indent": 3,
      "text": "POST /push/JzLQ3raZJfFBR0aqvOMsLrt54w4rJUsV HTTP/1.1 Host: push.example.net Prefer: respond-async TTL: 15 Content-Type: text/plain;charset=utf8 Content-Length: 36",
      "ja": "POST /プッシュ/ JzLQ3raZJfFBR0aqvOMsLrt54w4rJUsV HTTP / 1.1ホスト：push.example.net優先：対応 - 非同期TTL：15のContent-Type：text / plainの;のcharset = UTF8のコンテンツの長さ：36"
    },
    {
      "indent": 3,
      "text": "iChYuI3jMzt3ir20P8r_jgRR-dSuN182x7iB",
      "ja": "iChYuI3jMzt3ir20P8r_jgRR-dSuN182x7iB"
    },
    {
      "indent": 3,
      "text": "When the push service accepts the message for delivery with confirmation, it MUST return a 202 (Accepted) response. A URI for the push message resource that was created in response to the request MUST be returned in the Location header field. The push service MUST also provide a URI for the receipt subscription resource in a link relation of type \"urn:ietf:params:push:receipt\".",
      "ja": "プッシュサービスを確認して配信のためにメッセージを受け入れたとき、それは202（承認）応答を返さなければなりません。要求に応じて作成されたプッシュ・メッセージ・リソースのURIは、Locationヘッダフィールドに返さなければなりません。プッシュサービスは、タイプのリンク関係でレシートのサブスクリプション・リソース「：IETF：のparams：プッシュ：領収書URN」のURIを提供しなければなりません。"
    },
    {
      "indent": 3,
      "text": "HTTP/1.1 202 Accepted Date: Thu, 11 Dec 2014 23:56:55 GMT Link: </receipt-subscription/3ZtI4YVNBnUUZhuoChl6omUvG4ZM>; rel=\"urn:ietf:params:push:receipt\" Location: https://push.example.net/message/qDIYHNcfAIPP_5ITvURr-d6BGt",
      "ja": "HTTP / 1.1 202受理日：木、2014年12月11日23時56分55秒GMTリンク：</領収書・サブスクリプション/ 3ZtI4YVNBnUUZhuoChl6omUvG4ZM>。 REL = \"壷：IETF：のparams：プッシュ：領収書\" 場所：https://push.example.net/message/qDIYHNcfAIPP_5ITvURr-d6BGt"
    },
    {
      "indent": 3,
      "text": "For subsequent receipt requests to the same origin [RFC6454], the application server SHOULD include the returned receipt subscription in a link relation of type \"urn:ietf:params:push:receipt\". This gives the push service the option to aggregate the receipts. The push service SHOULD return the same receipt subscription in its response, although it MAY return a new receipt subscription if it is unable to reuse the one provided by the application server.",
      "ja": "「：IETF：のparams：プッシュ：レシート壷」同じ起源[RFC6454]の後に領収書を要求するために、アプリケーションサーバは、タイプのリンク関係で返された領収書のサブスクリプションを含むべきです。これは、プッシュサービスに領収書を集約するためのオプションを提供します。アプリケーションサーバが提供するものを再利用することができないならば、それは新しいレシートのサブスクリプションを返すかもしれないがプッシュサービスは、その応答内の同じ領収書のサブスクリプションを返すべきです。"
    },
    {
      "indent": 3,
      "text": "An application server MAY omit the receipt subscription if it is unable to receive receipts in an aggregated way for the lifetime of the receipt subscription. This might be necessary if the application server is monitoring receipt subscriptions on behalf of the other push message senders.",
      "ja": "領収書のサブスクリプションの有効期間の集計方法で領収書を受け取ることができない場合は、アプリケーション・サーバーは、領収書のサブスクリプションを省略することができます。アプリケーションサーバは、他のプッシュメッセージの送信者に代わって、レシートのサブスクリプションを監視している場合、これが必要になることがあります。"
    },
    {
      "indent": 3,
      "text": "A push service MUST return a 400 (Bad Request) status code for requests that contain an invalid receipt subscription. If a push service wishes to limit the number of receipt subscriptions that it maintains, it MAY return a 429 (Too Many Requests) status code [RFC6585] to reject receipt requests that omit a receipt subscription.",
      "ja": "プッシュサービスは、無効な領収書のサブスクリプションが含まれている要求のための400（不正な要求）ステータスコードを返さなければなりません。プッシュサービスは、それが維持レシートサブスクリプションの数を制限したい場合は、429（あまりにも多くの要求を）返してもよいステータスコード[RFC6585]領収書のサブスクリプションを省略した領収書要求を拒否します。"
    },
    {
      "indent": 0,
      "text": "5.2. Push Message Time-To-Live",
      "section_title": true,
      "ja": "5.2. メッセージのTime-To-ライブを押してください"
    },
    {
      "indent": 3,
      "text": "A push service can improve the reliability of push message delivery considerably by storing push messages for a period. User agents are often only intermittently connected, and so benefit from having short-term message storage at the push service.",
      "ja": "プッシュサービスは、かなりの期間のためにプッシュメッセージを格納することにより、プッシュメッセージ配信の信頼性を向上させることができます。ユーザエージェントは、多くの場合、断続的にしか接続されており、したがってプッシュサービスで短期メッセージストレージを有することから利益を得ます。"
    },
    {
      "indent": 3,
      "text": "Delaying delivery might also be used to batch communication with the user agent, thereby conserving radio resources.",
      "ja": "遅延配信は、また、それによって、無線リソースを節約し、ユーザエージェントとのバッチ通信に使用されるかもしれません。"
    },
    {
      "indent": 3,
      "text": "Some push messages are not useful once a certain period of time elapses. Delivery of messages after they have ceased to be relevant is wasteful. For example, if the push message contains a call notification, receiving a message after the caller has abandoned the call is of no value; the application at the user agent is forced to suppress the message so that it does not generate a useless alert.",
      "ja": "いくつかのプッシュメッセージは、一定時間経過後は有用ではありません。彼らは関連ではなくなった後に、メッセージの配信は無駄です。例えば、プッシュメッセージは、発信者が呼がない値である放棄した後にメッセージを受信し、着信通知が含まれている場合、ユーザーエージェントのアプリケーションは、それが役に立たないアラートを生成しないようにメッセージを抑制することを余儀なくされます。"
    },
    {
      "indent": 3,
      "text": "An application server MUST include the TTL (Time-To-Live) header field in its request for push message delivery. The TTL header field contains a value in seconds that suggests how long a push message is retained by the push service.",
      "ja": "アプリケーションサーバは、プッシュ・メッセージの配信のために、その要求にTTL（有効期間）ヘッダフィールドを含まなければなりません。 TTLヘッダーフィールドは、プッシュメッセージはプッシュサービスによって保持される時間の長さを示唆している秒の値を含んでいます。"
    },
    {
      "indent": 3,
      "text": "The TTL rule specifies a non-negative integer, representing time in seconds. A recipient parsing and converting a TTL value to binary form SHOULD use an arithmetic type of at least 31 bits of non-negative integer range. If a recipient receives a TTL value greater than the greatest integer it can represent, or if any of its subsequent calculations overflows, it MUST consider the value to be 2147483648 (2^31).",
      "ja": "TTLルールは、秒単位の時間を表す非負の整数を指定します。バイナリ形式にTTL値を解析し、変換受信者は、非負整数範囲の少なくとも31ビットの算術型を使用すべきです。受信者が最大の整数を超えるTTL値を受信した場合には表すことができ、又はその後続の計算オーバーフローのいずれかの場合には、値は2147483648（2 ^ 31）であることを考慮しなければなりません。"
    },
    {
      "indent": 3,
      "text": "TTL = 1*DIGIT",
      "ja": "TTL = 1 * DIGIT"
    },
    {
      "indent": 3,
      "text": "A push service MUST return a 400 (Bad Request) status code in response to requests that omit the TTL header field.",
      "ja": "プッシュサービスは、TTLヘッダフィールドを省略する要求に応答して、400（悪いRequest）ステータスコードを返さなければなりません。"
    },
    {
      "indent": 3,
      "text": "A push service MAY retain a push message for a shorter duration than requested. It indicates this by returning a TTL header field in its response with the actual TTL. This TTL value MUST be less than or equal to the value provided by the application server.",
      "ja": "プッシュサービスは、要求されたより短い期間のためのプッシュメッセージを保持することができます。実際のTTLとの応答TTLヘッダーフィールドを返すことによって、このことを示しています。このTTL値は、アプリケーション・サーバによって提供された値より小さいか等しくなければなりません。"
    },
    {
      "indent": 3,
      "text": "Once the TTL period elapses, the push service MUST NOT attempt to deliver the push message to the user agent. A push service might adjust the TTL value to account for time accounting errors in processing. For instance, distributing a push message within a server cluster might accrue errors due to clock skew or propagation delays.",
      "ja": "TTL期間が経過すると、プッシュサービスは、ユーザエージェントにプッシュメッセージを届けるのを試みてはいけません。プッシュサービスは、処理の時間会計エラーを考慮するために、TTLの値を調整することがあります。例えば、サーバ・クラスタ内のプッシュメッセージを配信することは、クロック・スキューや伝播遅延によるエラーを生ずる可能性があります。"
    },
    {
      "indent": 3,
      "text": "A push service is not obligated to account for time spent by the application server in sending a push message to the push service, or delays incurred while sending a push message to the user agent. An application server needs to account for transit delays in selecting a TTL header field value.",
      "ja": "プッシュサービスはプッシュサービスにプッシュメッセージを送信するには、アプリケーション・サーバーで過ごした時間を考慮する義務、またはユーザエージェントにプッシュメッセージを送信中に遅延が発生していません。アプリケーションサーバはTTLヘッダフィールド値を選択する際に通過遅延を考慮する必要があります。"
    },
    {
      "indent": 3,
      "text": "A Push message with a zero TTL is immediately delivered if the user agent is available to receive the message. After delivery, the push service is permitted to immediately remove a push message with a zero TTL. This might occur before the user agent acknowledges receipt of the message by performing an HTTP DELETE on the push message resource. Consequently, an application server cannot rely on receiving acknowledgement receipts for zero TTL push messages.",
      "ja": "ユーザエージェントは、メッセージを受信するために利用可能である場合、ゼロTTLとプッシュメッセージは直ちに配信されます。送達後、プッシュサービスを直ちにゼロTTLとプッシュメッセージを削除することが許されます。ユーザーエージェントは、HTTPをプッシュメッセージリソースにDELETEを実行することにより、メッセージの受信を確認する前にこれが発生する可能性があります。その結果、アプリケーションサーバは、ゼロTTLプッシュメッセージに対する肯定応答の領収書を受け取るに頼ることはできません。"
    },
    {
      "indent": 3,
      "text": "If the user agent is unavailable, a push message with a zero TTL expires and is never delivered.",
      "ja": "ユーザーエージェントが使用できない場合は、ゼロのTTLを持つプッシュメッセージの有効期限が切れて配信されることはありません。"
    },
    {
      "indent": 0,
      "text": "5.3. Push Message Urgency",
      "section_title": true,
      "ja": "5.3. プッシュメッセージの緊急度"
    },
    {
      "indent": 3,
      "text": "For a device that is battery-powered, it is often critical that it remains dormant for extended periods. Radio communication in particular consumes significant power and limits the length of time that the device can operate.",
      "ja": "バッテリ駆動であるデバイスの場合、長期間休止状態のままであることが多いが重要です。特に、無線通信は、かなりの電力を消費し、デバイスが動作することができる時間の長さを制限します。"
    },
    {
      "indent": 3,
      "text": "To avoid consuming resources to receive trivial messages, it is helpful if an application server can communicate the urgency of a message and if the user agent can request that the push server only forwards messages of a specific urgency.",
      "ja": "アプリケーションサーバはメッセージの緊急性を伝えることができれば、ユーザーエージェントはプッシュサーバが唯一の特定の緊急のメッセージを転送するように要求することができた場合に些細なメッセージを受信するためのリソースを消費しないようにするには、それが便利です。"
    },
    {
      "indent": 3,
      "text": "An application server MAY include an Urgency header field in its request for push message delivery. This header field indicates the message urgency. The push service MUST NOT forward the Urgency header field to the user agent. A push message without the Urgency header field defaults to a value of \"normal\".",
      "ja": "アプリケーションサーバは、プッシュ・メッセージの配信のために、その要求に緊急ヘッダフィールドを含んでいてもよいです。このヘッダーフィールドは、メッセージの緊急性を示しています。プッシュサービスは、ユーザエージェントに緊急ヘッダフィールドを転送してはなりません。 「正常」の値に緊急ヘッダフィールドのデフォルト無しプッシュメッセージ。"
    },
    {
      "indent": 3,
      "text": "A user agent MAY include the Urgency header field when monitoring for push messages to indicate the lowest urgency of push messages that it is willing to receive. A push service MUST NOT deliver push messages with lower urgency than the value indicated by the user agent in its monitoring request. Push messages of any urgency are delivered to a user agent that does not include an Urgency header field when monitoring for messages.",
      "ja": "受信する意思があることをプッシュメッセージの最低の緊急性を示すためにプッシュメッセージを監視するときに、ユーザーエージェントは、緊急ヘッダフィールドを含んでいてもよいです。プッシュサービスは、監視要求のユーザエージェントによって示される値より低い緊急でプッシュメッセージを配信してはいけません。任意の緊急のプッシュメッセージは、メッセージを監視するときに緊急のヘッダフィールドが含まれていないユーザエージェントに配信されます。"
    },
    {
      "indent": 3,
      "text": "The grammar for the Urgency header field is as follows:",
      "ja": "次のように緊急のヘッダフィールドの文法は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "Urgency = urgency-option urgency-option = (\"very-low\" / \"low\" / \"normal\" / \"high\")",
      "ja": "緊急度=緊急-オプション緊急-オプション=（「非常に低い」/「低」/「ノーマル」/「高」）"
    },
    {
      "indent": 3,
      "text": "In order of increasing urgency:",
      "ja": "増加緊急性のために："
    },
    {
      "indent": 3,
      "text": "+----------+-----------------------------+--------------------------+\n| Urgency  | Device State                | Example Application      |\n|          |                             | Scenario                 |\n+----------+-----------------------------+--------------------------+\n| very-low | On power and Wi-Fi          | Advertisements           |\n| low      | On either power or Wi-Fi    | Topic updates            |\n| normal   | On neither power nor Wi-Fi  | Chat or Calendar Message |\n| high     | Low battery                 | Incoming phone call or   |\n|          |                             | time-sensitive alert     |\n+----------+-----------------------------+--------------------------+",
      "raw": true
    },
    {
      "indent": 19,
      "text": "Table 1: Illustrative Urgency Values",
      "ja": "表1：具体的な緊急度の値"
    },
    {
      "indent": 3,
      "text": "Multiple values for the Urgency header field MUST NOT be included in requests; otherwise, the push service MUST return a 400 (Bad Request) status code.",
      "ja": "緊急ヘッダーフィールドの複数の値は、要求に含まれてはいけません。そうでない場合は、プッシュサービスは、400（悪いRequest）ステータスコードを返さなければなりません。"
    },
    {
      "indent": 0,
      "text": "5.4. Replacing Push Messages",
      "section_title": true,
      "ja": "5.4. プッシュメッセージの交換"
    },
    {
      "indent": 3,
      "text": "A push message that has been stored by the push service can be replaced with new content. If the user agent is offline during the time that the push messages are sent, updating a push message avoids the situation where outdated or redundant messages are sent to the user agent.",
      "ja": "プッシュサービスによって保存されたプッシュメッセージは、新しいコンテンツと交換することができます。ユーザエージェントは、プッシュメッセージが送信される時間中にオフラインである場合は、プッシュメッセージを更新することは時代遅れまたは冗長メッセージはユーザエージェントに送信されているような状況を回避することができます。"
    },
    {
      "indent": 3,
      "text": "Only push messages that have been assigned a topic can be replaced. A push message with a topic replaces any outstanding push message with an identical topic.",
      "ja": "のみ交換することができるトピックを割り当てられているメッセージをプッシュします。話題とプッシュメッセージは、同一の話題を持つ優れたプッシュメッセージを置き換えます。"
    },
    {
      "indent": 3,
      "text": "A push message topic is a string carried in a Topic header field. A topic is used to correlate push messages sent to the same subscription and does not convey any other semantics.",
      "ja": "プッシュ・メッセージ・トピックは、トピックヘッダーフィールドで運ばれた文字列です。トピックは、同じサブスクリプションに送信されたプッシュメッセージを関連付けるために使用され、他の意味を伝えていません。"
    },
    {
      "indent": 3,
      "text": "The grammar for the Topic header field uses the \"token\" rule defined in [RFC7230].",
      "ja": "トピックヘッダーフィールドの文法は[RFC7230]で定義された「トークン」ルールを使用しています。"
    },
    {
      "indent": 3,
      "text": "Topic = token",
      "ja": "トピック=トークン"
    },
    {
      "indent": 3,
      "text": "For use with this protocol, the Topic header field MUST be restricted to no more than 32 characters from the URL and a filename-safe Base 64 alphabet [RFC4648]. A push service that receives a request with a Topic header field that does not meet these constraints MUST return a 400 (Bad Request) status code to the application server.",
      "ja": "このプロトコルで使用するために、トピックヘッダーフィールドは、URLやファイル名セーフベース64アルファベット[RFC4648]からせいぜい32文字に制限されなければなりません。これらの制約を満たしていないトピックのヘッダフィールドで要求を受信したプッシュサービスは、アプリケーションサーバに400（不正な要求）ステータスコードを返さなければなりません。"
    },
    {
      "indent": 3,
      "text": "A push message replacement request creates a new push message resource and simultaneously deletes any existing message resource that has a matching topic. If an attempt was made to deliver the deleted push message, an acknowledgment could arrive at the push service after the push message has been replaced. Delivery receipts for such deleted messages SHOULD be suppressed.",
      "ja": "プッシュメッセージの交換要求は、新しいプッシュメッセージリソースを作成し、同時に、一致するトピックを持っている既存のメッセージリソースを削除します。試行が削除されたプッシュメッセージを配信するためになされた場合は、プッシュメッセージを交換した後、確認応答は、プッシュサービスに到着することができます。そのような削除されたメッセージの配信領収書が抑制されるべきです。"
    },
    {
      "indent": 3,
      "text": "The replacement request also replaces the stored TTL, Urgency, and any receipt subscription associated with the previous message in the matching topic.",
      "ja": "交換要求はまた、格納されたTTL、緊急、および整合トピックの前のメッセージに関連付けられた任意の受信契約を置き換えます。"
    },
    {
      "indent": 3,
      "text": "A push message with a topic that is not shared by an outstanding message to the same subscription is stored or delivered as normal.",
      "ja": "同じサブスクリプションに未処理メッセージによって共有されていないトピックにプッシュメッセージが格納されているまたは正常として送達されます。"
    },
    {
      "indent": 3,
      "text": "For example, the following message could cause an existing message to be replaced:",
      "ja": "たとえば、次のメッセージは既存のメッセージが交換される可能性があります："
    },
    {
      "indent": 3,
      "text": "POST /push/JzLQ3raZJfFBR0aqvOMsLrt54w4rJUsV HTTP/1.1 Host: push.example.net TTL: 600 Topic: upd Content-Type: text/plain;charset=utf8 Content-Length: 36",
      "ja": "POST /プッシュ/ JzLQ3raZJfFBR0aqvOMsLrt54w4rJUsV HTTP / 1.1ホスト：push.example.netのTTL：600トピック：UPDのContent-Type：text / plainの;のcharset = UTF8のコンテンツ長：36"
    },
    {
      "indent": 3,
      "text": "ZuHSZPKa2b1jtOKLGpWrcrn8cNqt0iVQyroF",
      "ja": "ZuHSZPKa2b1jtOKLGpWrcrn8cNqt0iVQyroF"
    },
    {
      "indent": 3,
      "text": "If the push service identifies an outstanding push message with a topic of \"upd\", then that message resource is deleted. A 201 (Created) response indicates that the push message replacement was accepted. A URI for the new push message resource that was created in response to the request is included in the Location header field.",
      "ja": "プッシュサービスは、「UPD」のトピックに優れたプッシュメッセージを識別した場合、そのメッセージのリソースが削除されます。 201（作成される）応答は、プッシュメッセージの交換が受け入れられたことを示しています。要求に応じて作成された新しいプッシュ・メッセージ・リソースのURIは、Locationヘッダフィールドに含まれています。"
    },
    {
      "indent": 3,
      "text": "HTTP/1.1 201 Created Date: Thu, 11 Dec 2014 23:57:02 GMT Location: https://push.example.net/message/qDIYHNcfAIPP_5ITvURr-d6BGt",
      "ja": "HTTP / 1.1 201作成日：木、2014年12月11日夜11時57分02秒GMT場所：https://push.example.net/message/qDIYHNcfAIPP_5ITvURr-d6BGt"
    },
    {
      "indent": 3,
      "text": "The value of the Topic header field MUST NOT be forwarded to user agents. Its value is neither encrypted nor authenticated.",
      "ja": "トピックヘッダーフィールドの値は、ユーザエージェントに転送してはいけません。その値は、暗号化されていないにも認証され、どちらも。"
    },
    {
      "indent": 0,
      "text": "6. Receiving Push Messages for a Subscription",
      "section_title": true,
      "ja": "6.サブスクリプションのプッシュメッセージの受信"
    },
    {
      "indent": 3,
      "text": "A user agent requests the delivery of new push messages by making a GET request to a push message subscription resource. The push service does not respond to this request; instead, it uses HTTP/2 server push [RFC7540] to send the contents of push messages as they are sent by application servers.",
      "ja": "ユーザエージェントは、プッシュメッセージのサブスクリプションのリソースへのGET要求を行うことによって、新しいプッシュメッセージの配信を要求します。プッシュサービスは、この要求に応答しません。代わりに、それは彼らがアプリケーションサーバによって送信されたとしてプッシュメッセージの内容を送信するためにHTTP / 2サーバープッシュ[RFC7540]を使用しています。"
    },
    {
      "indent": 3,
      "text": "A user agent MAY include an Urgency header field in its request. The push service MUST NOT deliver messages with lower urgency than the value of the header field as defined in Table 1 (Illustrative Urgency Values).",
      "ja": "ユーザエージェントは、その要求に緊急ヘッダフィールドを含んでいてもよいです。表1（例示的な緊急度値）で定義されているプッシュサービスは、ヘッダフィールドの値より低い緊急のメッセージを配信してはいけません。"
    },
    {
      "indent": 3,
      "text": "Each push message is pushed as the response to a synthesized GET request sent in a PUSH_PROMISE. This GET request is made to the push message resource that was created by the push service when the application server requested message delivery. The response headers SHOULD provide a URI for the push resource corresponding to the push message subscription in a link relation of type \"urn:ietf:params:push\". The response body is the entity body from the most recent request sent to the push resource by the application server.",
      "ja": "各プッシュメッセージはPUSH_PROMISEで送信合成GET要求に対する応答として押し込まれます。このGET要求は、アプリケーション・サーバは、メッセージの配信を要求したときにプッシュサービスによって作成されたプッシュメッセージリソースに行われます。 「IETF：paramsは：プッシュURN」応答ヘッダタイプのリンク関係にプッシュメッセージ・サブスクリプションに対応するプッシュリソースのURIを提供すべきです。レスポンスボディには、アプリケーションサーバによってプッシュリソースに送信された最新のリクエストからのエンティティボディです。"
    },
    {
      "indent": 3,
      "text": "The following example request is made over HTTP/2:",
      "ja": "次の例要求はHTTP / 2を介して行われます。"
    },
    {
      "indent": 3,
      "text": "HEADERS [stream 7] +END_STREAM +END_HEADERS :method = GET :path = /subscription/LBhhw0OohO-Wl4Oi971UG :authority = push.example.net",
      "ja": "HEADERS [ストリーム7] + END_STREAM + END_HEADERS：メソッド= GET：パス= /サブスクリプション/ LBhhw0OohO-Wl4Oi971UG：権限= push.example.net"
    },
    {
      "indent": 3,
      "text": "The push service permits the request to remain outstanding. When a push message is sent by an application server, a server push is generated in association with the initial request. The response for the server push includes the push message.",
      "ja": "プッシュサービスは、未処理のままにするための要求を許可します。プッシュメッセージがアプリケーションサーバによって送信されたとき、サーバプッシュは、最初の要求に関連して生成されます。サーバープッシュのための応答は、プッシュメッセージを含んでいます。"
    },
    {
      "indent": 3,
      "text": "PUSH_PROMISE [stream 7; promised stream 4] +END_HEADERS :method = GET :path = /message/qDIYHNcfAIPP_5ITvURr-d6BGt :authority = push.example.net",
      "ja": "PUSH_PROMISE [ストリーム7。約束ストリーム4] + END_HEADERS：メソッド= GET：パス= /メッセージ/ qDIYHNcfAIPP_5ITvURr-d6BGt：権限= push.example.net"
    },
    {
      "indent": 3,
      "text": "HEADERS [stream 4] +END_HEADERS :status = 200 date = Thu, 11 Dec 2014 23:56:56 GMT last-modified = Thu, 11 Dec 2014 23:56:55 GMT cache-control = private link = </push/JzLQ3raZJfFBR0aqvOMsLrt54w4rJUsV>; rel=\"urn:ietf:params:push\" content-type = text/plain;charset=utf8 content-length = 36",
      "ja": "HEADERS [ストリーム4] + END_HEADERS：ステータス= 200日=木2014年12月11日午後十一時56分56秒GMT最終更新=木、2014年12月11日午後11時56分55秒GMTキャッシュ制御=プライベートリンク= </プッシュ/ JzLQ3raZJfFBR0aqvOMsLrt54w4rJUsV>; REL = \"URN：IETF：paramsは：プッシュ\" コンテンツタイプ= text / plainの;のcharset = UTF8コンテンツ長= 36"
    },
    {
      "indent": 3,
      "text": "DATA [stream 4] +END_STREAM iChYuI3jMzt3ir20P8r_jgRR-dSuN182x7iB",
      "ja": "DATA [ストリーム4] + END_STREAM iChYuI3jMzt3ir20P8r_jgRR-dSuN182x7iB"
    },
    {
      "indent": 3,
      "text": "HEADERS [stream 7] +END_STREAM +END_HEADERS :status = 200",
      "ja": "HEADERS [ストリーム7] + END_STREAM + END_HEADERS：ステータス= 200"
    },
    {
      "indent": 3,
      "text": "A user agent can also request the contents of the push message subscription resource immediately by including a Prefer header field [RFC7240] with a \"wait\" preference set to \"0\". In response to this request, the push service MUST generate a server push for all push messages that have not yet been delivered.",
      "ja": "ユーザエージェントは、「0」に設定された「待機」優先で優先ヘッダフィールド[RFC7240]を含むことにより、直ちにプッシュメッセージ・サブスクリプション・リソースのコンテンツを要求することができます。この要求に応じて、プッシュサービスは、まだ配信されていないすべてのプッシュメッセージのためのサーバプッシュを発生させなければなりません。"
    },
    {
      "indent": 3,
      "text": "A 204 (No Content) status code with no associated server pushes indicates that no messages are presently available. This could be because push messages have expired.",
      "ja": "無関連サーバ押すと204（コンテンツなし）状態コードにはメッセージが現在利用可能でないことを示していません。プッシュメッセージの有効期限が切れているので、これは可能性があります。"
    },
    {
      "indent": 0,
      "text": "6.1. Receiving Push Messages for a Subscription Set",
      "section_title": true,
      "ja": "6.1. サブスクリプション・セットのプッシュメッセージの受信"
    },
    {
      "indent": 3,
      "text": "There are minor differences between receiving push messages for a subscription and a subscription set. If a subscription set is available, the user agent SHOULD use the subscription set to monitor for push messages rather than individual push message subscriptions.",
      "ja": "サブスクリプションおよびサブスクリプション・セット用のプッシュメッセージの受信との間のわずかな違いがあります。サブスクリプション・セットが使用可能な場合、ユーザエージェントは、プッシュメッセージではなく、個々のプッシュメッセージのサブスクリプションを監視するためのサブスクリプション・セットを使用すべきです。"
    },
    {
      "indent": 3,
      "text": "A user agent requests the delivery of new push messages for a collection of push message subscriptions by making a GET request to a push message subscription set resource. The push service does not respond to this request; instead, it uses HTTP/2 server push [RFC7540] to send the contents of push messages as they are sent by application servers.",
      "ja": "ユーザエージェントは、プッシュメッセージのサブスクリプション・セット・リソースへのGET要求を行うことにより、プッシュメッセージサブスクリプションの収集のための新しいプッシュメッセージの配信を要求します。プッシュサービスは、この要求に応答しません。代わりに、それは彼らがアプリケーションサーバによって送信されたとしてプッシュメッセージの内容を送信するためにHTTP / 2サーバープッシュ[RFC7540]を使用しています。"
    },
    {
      "indent": 3,
      "text": "A user agent MAY include an Urgency header field in its request. The push service MUST NOT deliver messages with lower urgency than the value of the header field as defined in Table 1 (Illustrative Urgency Values).",
      "ja": "ユーザエージェントは、その要求に緊急ヘッダフィールドを含んでいてもよいです。表1（例示的な緊急度値）で定義されているプッシュサービスは、ヘッダフィールドの値より低い緊急のメッセージを配信してはいけません。"
    },
    {
      "indent": 3,
      "text": "Each push message is pushed as the response to a synthesized GET request sent in a PUSH_PROMISE. This GET request is made to the push message resource that was created by the push service when the application server requested message delivery. The synthetic request MUST provide a URI for the push resource corresponding to the push message subscription in a link relation of type \"urn:ietf:params:push\". This enables the user agent to differentiate the source of the message. The response body is the entity body from the most recent request sent to the push resource by an application server.",
      "ja": "各プッシュメッセージはPUSH_PROMISEで送信合成GET要求に対する応答として押し込まれます。このGET要求は、アプリケーション・サーバは、メッセージの配信を要求したときにプッシュサービスによって作成されたプッシュメッセージリソースに行われます。 「IETF：paramsは：プッシュURN」合成要求がタイプのリンク関係にプッシュメッセージ・サブスクリプションに対応するプッシュリソースのURIを提供しなければなりません。これは、メッセージの送信元を区別するためにユーザーエージェントを有効にします。レスポンスボディには、アプリケーションサーバによってプッシュリソースに送信された最新のリクエストからのエンティティボディです。"
    },
    {
      "indent": 3,
      "text": "The following example request is made over HTTP/2.",
      "ja": "以下の例要求は、HTTP / 2上に形成されています。"
    },
    {
      "indent": 3,
      "text": "HEADERS [stream 7] +END_STREAM +END_HEADERS :method = GET :path = /subscription-set/4UXwi2Rd7jGS7gp5cuutF8ZldnEuvbOy :authority = push.example.net",
      "ja": "HEADERS [ストリーム7] + END_STREAM + END_HEADERS：メソッド= GET：パス= /サブスクリプション・セット/ 4UXwi2Rd7jGS7gp5cuutF8ZldnEuvbOy：権限= push.example.net"
    },
    {
      "indent": 3,
      "text": "The push service permits the request to remain outstanding. When a push message is sent by an application server, a server push is generated in association with the initial request. The server push's response includes the push message.",
      "ja": "プッシュサービスは、未処理のままにするための要求を許可します。プッシュメッセージがアプリケーションサーバによって送信されたとき、サーバプッシュは、最初の要求に関連して生成されます。サーバープッシュの応答は、プッシュメッセージを含んでいます。"
    },
    {
      "indent": 3,
      "text": "PUSH_PROMISE [stream 7; promised stream 4] +END_HEADERS :method = GET :path = /message/qDIYHNcfAIPP_5ITvURr-d6BGt :authority = push.example.net",
      "ja": "PUSH_PROMISE [ストリーム7。約束ストリーム4] + END_HEADERS：メソッド= GET：パス= /メッセージ/ qDIYHNcfAIPP_5ITvURr-d6BGt：権限= push.example.net"
    },
    {
      "indent": 3,
      "text": "HEADERS [stream 4] +END_HEADERS :status = 200 date = Thu, 11 Dec 2014 23:56:56 GMT last-modified = Thu, 11 Dec 2014 23:56:55 GMT link = </push/JzLQ3raZJfFBR0aqvOMsLrt54w4rJUsV>; rel=\"urn:ietf:params:push\" cache-control = private content-type = text/plain;charset=utf8 content-length = 36",
      "ja": "HEADERS [ストリーム4] + END_HEADERS：ステータス= 200日=木、2014年12月11日午後十一時56分56秒GMT最終更新=木、2014年12月11日午後11時56分55秒GMTリンク= </プッシュ/ JzLQ3raZJfFBR0aqvOMsLrt54w4rJUsV>。 REL = \"壷：IETF：のparams：プッシュ\" キャッシュ制御=プライベート・コンテンツ・タイプ= text / plainの;のcharset = UTF8のコンテンツ長= 36"
    },
    {
      "indent": 3,
      "text": "DATA [stream 4] +END_STREAM iChYuI3jMzt3ir20P8r_jgRR-dSuN182x7iB",
      "ja": "DATA [ストリーム4] + END_STREAM iChYuI3jMzt3ir20P8r_jgRR-dSuN182x7iB"
    },
    {
      "indent": 3,
      "text": "HEADERS [stream 7] +END_STREAM +END_HEADERS :status = 200",
      "ja": "HEADERS [ストリーム7] + END_STREAM + END_HEADERS：ステータス= 200"
    },
    {
      "indent": 3,
      "text": "A user agent can request the contents of the push message subscription set resource immediately by including a Prefer header field [RFC7240] with a \"wait\" preference set to \"0\". In response to this request, the push service MUST generate a server push for all push messages that have not yet been delivered.",
      "ja": "ユーザエージェントは、直ちに「0」に設定された「待機」優先で優先ヘッダフィールド[RFC7240]を含むことによりプッシュメッセージサブスクリプション・セット・リソースのコンテンツを要求することができます。この要求に応じて、プッシュサービスは、まだ配信されていないすべてのプッシュメッセージのためのサーバプッシュを発生させなければなりません。"
    },
    {
      "indent": 3,
      "text": "A 204 (No Content) status code with no associated server pushes indicates that no messages are presently available. This could be because push messages have expired.",
      "ja": "無関連サーバ押すと204（コンテンツなし）状態コードにはメッセージが現在利用可能でないことを示していません。プッシュメッセージの有効期限が切れているので、これは可能性があります。"
    },
    {
      "indent": 0,
      "text": "6.2. Acknowledging Push Messages",
      "section_title": true,
      "ja": "6.2. プッシュメッセージを認めます"
    },
    {
      "indent": 3,
      "text": "To ensure that a push message is properly delivered to the user agent at least once, the user agent MUST acknowledge receipt of the message by performing an HTTP DELETE on the push message resource.",
      "ja": "プッシュメッセージが正しく少なくとも一度ユーザエージェントに配信されることを保証するために、ユーザーエージェントは、HTTPプッシュメッセージリソースにDELETEを実行することによってメッセージの受信を確認しなければなりません。"
    },
    {
      "indent": 3,
      "text": "DELETE /message/qDIYHNcfAIPP_5ITvURr-d6BGt HTTP/1.1 Host: push.example.net",
      "ja": "DELETE /メッセージ/ qDIYHNcfAIPP_5ITvURr-d6BGt HTTP / 1.1ホスト：push.example.net"
    },
    {
      "indent": 3,
      "text": "If the push service receives the acknowledgement and the application has requested a delivery receipt, the push service MUST return a 204 (No Content) response to the application server monitoring the receipt subscription.",
      "ja": "プッシュサービスは、確認応答を受信して​​、アプリケーションが配信確認を要求した場合、プッシュサービスは、領収書のサブスクリプションを監視し、アプリケーションサーバ204（コンテンツなし）応答を返さなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the push service does not receive the acknowledgement within a reasonable amount of time, then the message is considered to be not yet delivered. The push service SHOULD continue to retry delivery of the message until its advertised expiration.",
      "ja": "プッシュサービスは、妥当な時間内の確認応答を受信しない場合、メッセージはまだ配信されていないと考えられています。プッシュサービスは、その広告を出して、有効期限まで、メッセージの配信を再試行し続けなければなりません。"
    },
    {
      "indent": 3,
      "text": "The push service MAY cease to retry delivery of the message prior to its advertised expiration due to scenarios such as an unresponsive user agent or operational constraints. If the application has requested a delivery receipt, then the push service MUST return a 410 (Gone) response to the application server monitoring the receipt subscription.",
      "ja": "プッシュサービスは、そのような応答しないユーザーエージェントや運用制約などのシナリオに先立って、アドバタイズ期限切れへのメッセージの配信を再試行することなくなる可能性があります。アプリケーションは、配信確認を要求した場合には、プッシュサービスは、領収書のサブスクリプションを監視し、アプリケーションサーバへの410（ゴーン）応答を返さなければなりません。"
    },
    {
      "indent": 0,
      "text": "6.3. Receiving Push Message Receipts",
      "section_title": true,
      "ja": "6.3. プッシュメッセージの領収書を受け取ります"
    },
    {
      "indent": 3,
      "text": "The application server requests the delivery of receipts from the push service by making an HTTP GET request to the receipt subscription resource. The push service does not respond to this request; instead, it uses HTTP/2 server push [RFC7540] to send push receipts when messages are acknowledged (Section 6.2) by the user agent.",
      "ja": "アプリケーションサーバは、領収書のサブスクリプションリソースへのHTTP GET要求を行うことにより、プッシュサービスから領収書の配信を要求します。プッシュサービスは、この要求に応答しません。その代わり、それはメッセージがユーザエージェントによって（セクション6.2）を認めているとき、プッシュ領収書を送信するためにHTTP / 2サーバープッシュ[RFC7540]を使用しています。"
    },
    {
      "indent": 3,
      "text": "Each receipt is pushed as the response to a synthesized GET request sent in a PUSH_PROMISE. This GET request is made to the same push message resource that was created by the push service when the application server requested message delivery. The response includes a status code indicating the result of the message delivery and carries no data.",
      "ja": "各レシートはPUSH_PROMISEで送信合成GET要求に対する応答として押し込まれます。このGET要求は、アプリケーション・サーバは、メッセージの配信を要求したときにプッシュサービスによって作成されたものと同じプッシュメッセージリソースに行われます。応答は、メッセージ配信の結果を示すステータスコードを含み、何らデータを伝送しません。"
    },
    {
      "indent": 3,
      "text": "The following example request is made over HTTP/2.",
      "ja": "以下の例要求は、HTTP / 2上に形成されています。"
    },
    {
      "indent": 3,
      "text": "HEADERS [stream 13] +END_STREAM +END_HEADERS :method = GET :path = /receipt-subscription/3ZtI4YVNBnUUZhuoChl6omUvG4ZM :authority = push.example.net",
      "ja": "HEADERS [ストリーム13] + END_STREAM + END_HEADERS：メソッド= GET：パス= /受信サブスクリプション/ 3ZtI4YVNBnUUZhuoChl6omUvG4ZM：権限= push.example.net"
    },
    {
      "indent": 3,
      "text": "The push service permits the request to remain outstanding. When the user agent acknowledges the message, the push service pushes a delivery receipt to the application server. A 204 (No Content) status code confirms that the message was delivered and acknowledged.",
      "ja": "プッシュサービスは、未処理のままにするための要求を許可します。ユーザエージェントがメッセージを確認すると、プッシュサービスは、アプリケーションサーバに配信確認をプッシュします。 204（コンテンツなし）状態コードは、メッセージが配信され、認められたことを確認していません。"
    },
    {
      "indent": 3,
      "text": "PUSH_PROMISE [stream 13; promised stream 82] +END_HEADERS :method = GET :path = /message/qDIYHNcfAIPP_5ITvURr-d6BGt :authority = push.example.net",
      "ja": "PUSH_PROMISE [ストリーム13。約束ストリーム82] + END_HEADERS：メソッド= GET：パス= /メッセージ/ qDIYHNcfAIPP_5ITvURr-d6BGt：権限= push.example.net"
    },
    {
      "indent": 3,
      "text": "HEADERS [stream 82] +END_STREAM +END_HEADERS :status = 204 date = Thu, 11 Dec 2014 23:56:56 GMT",
      "ja": "HEADERS [ストリーム82] + END_STREAM + END_HEADERS：ステータス= 204日=木2014年23時56分56秒GMT 12月11日"
    },
    {
      "indent": 3,
      "text": "If the user agent fails to acknowledge the receipt of the push message and the push service ceases to retry delivery of the message prior to its advertised expiration, then the push service MUST push a failure response with a status code of 410 (Gone).",
      "ja": "ユーザエージェントは、プッシュメッセージの受信とプッシュサービスは、そのアドバタイズ満了前にメッセージの配信を再試行する停止確認に失敗した場合、プッシュサービス410のステータスコードで失敗応答を押さなければならない（ゴーン）。"
    },
    {
      "indent": 0,
      "text": "7. Operational Considerations",
      "section_title": true,
      "ja": "7.運用に関する注意事項"
    },
    {
      "indent": 0,
      "text": "7.1. Load Management",
      "section_title": true,
      "ja": "7.1. 負荷管理"
    },
    {
      "indent": 3,
      "text": "A push service is likely to have to maintain a very large number of open TCP connections. Effective management of those connections can depend on being able to move connections between server instances.",
      "ja": "プッシュサービスは、オープンTCP接続の非常に大きな数を維持するために持っている可能性があります。これらの接続の効果的な管理は、サーバインスタンス間の接続を動かすことができることに依存することができます。"
    },
    {
      "indent": 3,
      "text": "A user agent MUST support the 307 (Temporary Redirect) status code [RFC7231], which can be used by a push service to redistribute load at the time that a new subscription is requested.",
      "ja": "ユーザエージェントは、新しいサブスクリプションが要求された時点での荷重を再分配するプッシュサービスで使用することができる307（一時的なリダイレクト）状態コード[RFC7231]をサポートしなければなりません。"
    },
    {
      "indent": 3,
      "text": "A server that wishes to redistribute load can do so using HTTP alternative services [RFC7838]. HTTP alternative services allows for redistribution of load while maintaining the same URIs for various resources. A user agent can ensure a graceful transition by using the GOAWAY frame once it has established a replacement connection.",
      "ja": "負荷を再分配することを希望するサーバは、HTTPの代替サービス[RFC7838]を使用して行うことができます。さまざまなリソースに同じURIを維持しながら、HTTPの代替サービスは、負荷の再配分が可能になります。ユーザエージェントは、それが交換接続を確立した後GOAWAYフレームを使用して、優雅な遷移を確保することができます。"
    },
    {
      "indent": 0,
      "text": "7.2. Push Message Expiration",
      "section_title": true,
      "ja": "7.2. プッシュメッセージの有効期限"
    },
    {
      "indent": 3,
      "text": "Storage of push messages based on the TTL header field comprises a potentially significant amount of storage for a push service. A push service is not obligated to store messages indefinitely. A push service is able to indicate how long it intends to retain a message to an application server using the TTL header field (Section 5.2).",
      "ja": "TTLヘッダーフィールドに基づいて、プッシュメッセージの記憶は、プッシュサービスのためのストレージの潜在的に重要な量を含みます。プッシュサービスは、無期限にメッセージを保存する義務を負いません。プッシュサービスは、TTLヘッダーフィールド（セクション5.2）を使用して、アプリケーションサーバーにメッセージを保持しようとする時間の長さを示すことができます。"
    },
    {
      "indent": 3,
      "text": "A user agent that does not actively monitor for push messages will not receive messages that expire during that interval.",
      "ja": "積極的にプッシュメッセージを監視しないユーザエージェントは、その期間中に有効期限が切れたメッセージを受信しません。"
    },
    {
      "indent": 3,
      "text": "Push messages that are stored and have not been delivered to a user agent are delivered when the user agent recommences monitoring. Stored push messages SHOULD include a Last-Modified header field (Section 2.2 of [RFC7232]) indicating when delivery was requested by an application server.",
      "ja": "ユーザエージェントが監視を再開したときに格納されており、ユーザエージェントに配信されていないプッシュメッセージが配信されます。保存されたプッシュメッセージは、配信がアプリケーションサーバによって要求されたときを示すLast-Modifiedのヘッダフィールド（[RFC7232]のセクション2.2）を含むべきです。"
    },
    {
      "indent": 3,
      "text": "A GET request to a push message subscription resource with only expired messages results in a response as though no push message was ever sent.",
      "ja": "何のプッシュメッセージがこれまでに送信されなかったかのように応答するだけで期限切れのメッセージの結果とプッシュメッセージのサブスクリプションのリソースへのGETリクエスト。"
    },
    {
      "indent": 3,
      "text": "Push services might need to limit the size and number of stored push messages to avoid overloading. To limit the size of messages, the push service MAY return a 413 (Payload Too Large) status code [RFC7231] in response to requests that include an entity body that is too large. Push services MUST NOT return a 413 status code in responses to an entity body that is 4096 bytes or less in size.",
      "ja": "プッシュサービスは、過負荷を回避するために保存されたプッシュメッセージのサイズと数を制限する必要がある場合があります。メッセージのサイズを制限するために、プッシュサービスが大きすぎるエンティティ本体を含む要求に応じて、413（ペイロード大きすぎる）ステータスコード[RFC7231]を返すかもしれ。プッシュサービスは、4096バイト以下のサイズであるエンティティボディへの応答で413のステータスコードを返してはなりません。"
    },
    {
      "indent": 3,
      "text": "To limit the number of stored push messages, the push service MAY respond with a shorter Time-To-Live than proposed by the application server in its request for push message delivery (Section 5.2). Once a message has been accepted, the push service MAY later expire the message prior to its advertised Time-To-Live. If the application server requested a delivery receipt, the push service MUST return a failure response (Section 6.2).",
      "ja": "保存されたプッシュメッセージの数を制限するには、プッシュサービスは、短いタイム・ツー・ライブプッシュメッセージ配信（5.2節）のためにその要求に、アプリケーションサーバによって提案されたよりもで応答することができます。メッセージが受け入れられた後は、プッシュサービスは、後でその広告を出してのTime-To-ライブ前にメッセージを期限切れになることがあります。アプリケーションサーバは、配信確認を要求された場合は、プッシュサービスは、失敗応答（セクション6.2）を返さなければなりません。"
    },
    {
      "indent": 0,
      "text": "7.3. Subscription Expiration",
      "section_title": true,
      "ja": "7.3. サブスクリプションの有効期限"
    },
    {
      "indent": 3,
      "text": "In some cases, it may be necessary to terminate subscriptions so that they can be refreshed. This applies to both push message subscriptions and receipt subscriptions.",
      "ja": "いくつかのケースでは、彼らをリフレッシュすることができるようにサブスクリプションを終了する必要があるかもしれません。これは、プッシュメッセージのサブスクリプションと領収書のサブスクリプションの両方に適用されます。"
    },
    {
      "indent": 3,
      "text": "A push service MAY expire a subscription at any time. If there are outstanding requests to an expired push message subscription resource (Section 6) from a user agent or to an expired receipt subscription resource (Section 6.3) from an application server, this MUST be signaled by returning a 404 (Not Found) status code.",
      "ja": "プッシュサービスはいつでも購読を期限切れになることがあります。アプリケーションサーバからユーザエージェントからまたは期限切れのレシートのサブスクリプション・リソース（6.3節）に期限切れのプッシュメッセージのサブスクリプション・リソース（第6節）に未処理の要求がある場合、これは404（見つかりません）ステータスコードを返すことによって合図されなければなりません。"
    },
    {
      "indent": 3,
      "text": "A push service MUST return a 404 (Not Found) status code if an application server attempts to send a push message to an expired push message subscription.",
      "ja": "アプリケーションサーバーが期限切れのプッシュメッセージのサブスクリプションにプッシュメッセージを送信しようとした場合のプッシュサービスは、404（見つかりません）ステータスコードを返さなければなりません。"
    },
    {
      "indent": 3,
      "text": "A user agent can remove its push message subscription by sending a DELETE request to the corresponding URI. An application server can remove its receipt subscription by sending a DELETE request to the corresponding URI.",
      "ja": "ユーザエージェントは、対応するURIにDELETE要求を送信することによって、そのプッシュメッセージ・サブスクリプションを除去することができます。アプリケーションサーバは、対応するURIにDELETEリクエストを送信することにより、そのレシートのサブスクリプションを削除することができます。"
    },
    {
      "indent": 0,
      "text": "7.3.1. Subscription Set Expiration",
      "section_title": true,
      "ja": "7.3.1. サブスクリプション・セットの有効期限"
    },
    {
      "indent": 3,
      "text": "A push service MAY expire a subscription set at any time and MUST also expire all push message subscriptions in the set. If a user agent has an outstanding request to a push subscription set (Section 6.1), this MUST be signaled by returning a 404 (Not Found) status code.",
      "ja": "プッシュサービスは、いつでもサブスクリプション・セットを期限切れにすることができ、またセット内のすべてのプッシュメッセージのサブスクリプションを期限切れにしなければなりません。ユーザエージェントは、プッシュサブスクリプション・セット（6.1節）に未処理の要求を持っている場合、これは404（見つかりません）ステータスコードを返すことで合図しなければなりません。"
    },
    {
      "indent": 3,
      "text": "A user agent can request that a subscription set be removed by sending a DELETE request to the subscription set URI. This MUST also remove all push message subscriptions in the set.",
      "ja": "ユーザエージェントは、サブスクリプション・セットは、サブスクリプション・セットURIにDELETEリクエストを送信することによって除去することを要求することができます。これはまた、セット内のすべてのプッシュメッセージのサブスクリプションを削除する必要があります。"
    },
    {
      "indent": 3,
      "text": "If a specific push message subscription that is a member of a subscription set is expired or removed, then it MUST also be removed from its subscription set.",
      "ja": "サブスクリプション・セットのメンバーである特定のプッシュメッセージのサブスクリプションの有効期限が切れてか、削除された場合、それはまた、そのサブスクリプション・セットから除去されなければなりません。"
    },
    {
      "indent": 0,
      "text": "7.4. Implications for Application Reliability",
      "section_title": true,
      "ja": "7.4. アプリケーションの信頼性への影響"
    },
    {
      "indent": 3,
      "text": "A push service that does not support reliable delivery over intermittent network connections or failing applications on devices, forces the device to acknowledge receipt directly to the application server, incurring additional power drain in order to establish and maintain (usually secure) connections to the individual application servers.",
      "ja": "断続的なネットワーク接続を介した信頼性の高い配信やデバイス上の障害のアプリケーションをサポートしていませんプッシュサービスは、個々のアプリケーションへの接続を確立し、維持する（通常は確保）するために、追加の電力消費を被る、アプリケーション・サーバーに直接受信を確認するために、デバイスを強制的にサーバ。"
    },
    {
      "indent": 3,
      "text": "Push message reliability can be important if messages contain information critical to the state of an application. Repairing the state can be expensive, particularly for devices with limited communications capacity. Knowing that a push message has been correctly received avoids retransmissions, polling, and state resynchronization.",
      "ja": "メッセージは、アプリケーションの状態に重要な情報が含まれている場合はプッシュメッセージの信頼性が重要になることがあります。状態を修復することは、特に制限は通信容量を持つデバイスのために、高価になることができます。プッシュメッセージが正しく受信されたことを知ることは、再送信、ポーリング、および状態の再同期を回避することができます。"
    },
    {
      "indent": 3,
      "text": "The availability of push message delivery receipts ensures that the application developer is not tempted to create alternative mechanisms for message delivery in case the push service fails to deliver a critical message. Setting up a polling mechanism or a backup messaging channel in order to compensate for these shortcomings negates almost all of the advantages a push service provides.",
      "ja": "プッシュメッセージの配信確認の可用性は、プッシュサービスは、重要なメッセージを配信するために失敗した場合には、アプリケーション開発者は、メッセージ配信のための代替メカニズムを作成するように誘惑されていないことを保証します。これらの欠点を補うためにポーリングメカニズムやバックアップ・メッセージング・チャネルを設定すると、プッシュサービスが提供する利点のほとんどすべてを否定します。"
    },
    {
      "indent": 3,
      "text": "However, reliability might not be necessary for messages that are transient (e.g., an incoming call) or messages that are quickly superseded (e.g., the current number of unread emails).",
      "ja": "しかし、信頼性が一時的なメッセージ（例えば、着信コール）、または素早く取って代わられたメッセージ（例えば、未読メールの現在数）のために必要ではないかもしれません。"
    },
    {
      "indent": 0,
      "text": "7.5. Subscription Sets and Concurrent HTTP/2 Streams",
      "section_title": true,
      "ja": "7.5. サブスクリプション・セットと同時HTTP / 2ストリーム"
    },
    {
      "indent": 3,
      "text": "If the push service requires that the user agent use push message subscription sets, then it MAY limit the number of concurrently active streams with the SETTINGS_MAX_CONCURRENT_STREAMS parameter within an HTTP/2 SETTINGS frame [RFC7540]. The user agent MAY be limited to one concurrent stream to manage push message subscriptions and one concurrent stream for each subscription set returned by the push service. This could force the user agent to serialize subscription requests to the push service.",
      "ja": "プッシュサービスは、ユーザエージェント用プッシュ・メッセージ・サブスクリプション・セットすることを必要とする場合、それはHTTP / 2 SETTINGSフレーム[RFC7540]内SETTINGS_MAX_CONCURRENT_STREAMSパラメータと同時にアクティブなストリームの数を制限することができます。ユーザエージェントは、プッシュメッセージのサブスクリプションとプッシュサービスによって返された各サブスクリプション・セットの1つの同時ストリームを管理するために、1つの同時ストリームに限定することができます。これは、プッシュサービスへの加入要求をシリアル化するためにユーザーエージェントを強制することができます。"
    },
    {
      "indent": 0,
      "text": "8. Security Considerations",
      "section_title": true,
      "ja": "8.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "This protocol MUST use HTTP over TLS [RFC2818] following the recommendations in [RFC7525]. This includes any communications between the user agent and the push service, plus communications between the application server and the push service. All URIs therefore use the \"https\" scheme. This provides confidentiality and integrity protection for subscriptions and push messages from external parties.",
      "ja": "このプロトコルは、[RFC7525]の推奨事項を以下TLS [RFC2818]の上にHTTPを使用しなければなりません。これは、ユーザーエージェントとプッシュサービスとの間の通信を含み、加えて、アプリケーション・サーバーとプッシュサービス間の通信。すべてのURIは、したがって、「HTTPS」のスキームを使用しています。これは、外部関係者からのサブスクリプションとプッシュメッセージの機密性と完全性保護を提供します。"
    },
    {
      "indent": 0,
      "text": "8.1. Confidentiality from Push Service Access",
      "section_title": true,
      "ja": "8.1. プッシュサービスへのアクセスから機密性"
    },
    {
      "indent": 3,
      "text": "The protection afforded by TLS does not protect content from the push service. Without additional safeguards, a push service can inspect and modify the message content.",
      "ja": "TLSによる保護は、プッシュサービスからコンテンツを保護することはできません。追加の保護措置がなければ、プッシュサービスは、メッセージの内容を検査し、変更することができます。"
    },
    {
      "indent": 3,
      "text": "Applications using this protocol MUST use mechanisms that provide end-to-end confidentiality, integrity, and data origin authentication. The application server sending the push message and the application on the user agent that receives it are frequently just different instances of the same application, so no standardized protocol is needed to establish a proper security context. The distribution of subscription information from the user agent to its application server also offers a convenient medium for key agreement.",
      "ja": "エンドツーエンドの機密性、完全性、およびデータ発信元認証を提供するメカニズムを使用しなければならない、このプロトコルを使用するアプリケーション。標準化プロトコルが適切なセキュリティコンテキストを確立するために必要とされていないので、プッシュメッセージと、それは頻繁に同じアプリケーションの異なるだけインスタンスである受信ユーザエージェント上のアプリケーションを送信するアプリケーションサーバ。そのアプリケーションサーバへのユーザエージェントからサブスクリプション情報の配信も鍵合意のための便利なメディアを提供しています。"
    },
    {
      "indent": 3,
      "text": "For this requirement, the W3C Push API [API] has adopted Message Encryption for WebPush [ENCRYPT] to secure the content of messages from the push service. Other scenarios can be addressed by similar policies.",
      "ja": "この要件については、W3CプッシュAPI [API]はプッシュサービスからのメッセージの内容を保護するためにWebPush [ENCRYPT]のメッセージの暗号化を採用しています。他のシナリオは、同様の政策によって対処することができます。"
    },
    {
      "indent": 3,
      "text": "The Topic header field exposes information that allows more granular correlation of push messages on the same subject. This might be used to aid traffic analysis of push messages by the push service.",
      "ja": "トピックヘッダーフィールドは、同じ被写体上のプッシュメッセージのより詳細な相関を可能にする情報を公開します。これは、プッシュサービスによってプッシュメッセージのトラフィック分析を支援するために使用される可能性があります。"
    },
    {
      "indent": 0,
      "text": "8.2. Privacy Considerations",
      "section_title": true,
      "ja": "8.2. プライバシーの考慮事項"
    },
    {
      "indent": 3,
      "text": "Push message confidentiality does not ensure that the identity of who is communicating and when they are communicating is protected. However, the amount of information that is exposed can be limited.",
      "ja": "プッシュメッセージの機密性が通信している人のアイデンティティとするとき、彼らが通信しているが保護されることを保証しません。しかし、公開された情報の量を制限することができます。"
    },
    {
      "indent": 3,
      "text": "The URIs provided for push resources MUST NOT provide any basis to correlate communications for a given user agent. It MUST NOT be possible to correlate any two push resource URIs based solely on their contents. This allows a user agent to control correlation across different applications or over time. Of course, this does not prevent correlation using other information that a user agent might expose.",
      "ja": "プッシュリソースの提供URIは、特定のユーザーエージェントのための通信を相関させる任意の基礎を提供してはなりません。その内容のみに基づいて、任意の2つのプッシュリソースのURIを相関させることが可能にすることはできません。これは、ユーザエージェントが異なるアプリケーション間や時間をかけて相関関係を制御することができます。もちろん、これはユーザエージェントが公開するかもしれない他の情報を用いて相関を防ぐことはできません。"
    },
    {
      "indent": 3,
      "text": "Similarly, the URIs provided by the push service to identify a push message MUST NOT provide any information that allows for correlation across subscriptions. Push message URIs for the same subscription MAY contain information that would allow correlation with the associated subscription or other push messages for that subscription.",
      "ja": "同様に、プッシュメッセージを識別するために、プッシュサービスによって提供されるURIは、サブスクリプションを横切る相関を可能にする任意の情報を提供してはいけません。そのサブスクリプションに関連付けられたサブスクリプションまたはその他のプッシュメッセージとの相関を可能にする情報が含まれる場合があり、同じサブスクリプションのメッセージのURIを押してください。"
    },
    {
      "indent": 3,
      "text": "User and device information MUST NOT be exposed through a push or push message URI.",
      "ja": "ユーザーおよびデバイス情報はプッシュまたはプッシュメッセージURIを介して公開してはなりません。"
    },
    {
      "indent": 3,
      "text": "In addition, push URIs established by the same user agent or push message URIs for the same subscription MUST NOT include any information that allows them to be correlated with the user agent.",
      "ja": "また、同一のユーザエージェントによって確立されたURIを押したり、ユーザエージェントと相関させることを可能にする任意の情報を含めることはできません同じサブスクリプションメッセージのURIを押します。"
    },
    {
      "indent": 3,
      "text": "Note: This need not be perfect as long as the resulting anonymity set ([RFC6973], Section 6.1.1) is sufficiently large. A push URI necessarily identifies a push service or a single server instance. It is also possible that traffic analysis could be used to correlate subscriptions.",
      "ja": "注：これは限り結果の匿名のセット（[RFC6973]、セクション6.1.1）が十分に大きいとして完璧である必要はありません。プッシュURIは、必ずしもプッシュサービスまたは単一のサーバインスタンスを識別する。トラフィック分析は、サブスクリプションを関連付けるために使用することができることも可能です。"
    },
    {
      "indent": 3,
      "text": "A user agent MUST be able to create new subscriptions with new identifiers at any time.",
      "ja": "ユーザーエージェントは、いつでも新しい識別子を使用して新しいサブスクリプションを作成できなければなりません。"
    },
    {
      "indent": 0,
      "text": "8.3. Authorization",
      "section_title": true,
      "ja": "8.3. 認定"
    },
    {
      "indent": 3,
      "text": "This protocol does not define how a push service establishes whether a user agent is permitted to create a subscription, or whether push messages can be delivered to the user agent. A push service MAY choose to authorize requests based on any HTTP-compatible authorization method available, of which there are multiple options (including experimental options) with varying levels of security. The authorization process and any associated credentials are expected to be configured in the user agent along with the URI for the push service.",
      "ja": "このプロトコルは、プッシュサービスは、ユーザーエージェントがサブスクリプションを作成することが許可されているかどうかを確立し、またはプッシュメッセージがユーザエージェントに配信することが可能かどうかをどのように定義していません。プッシュサービスは、セキュリティのさまざまなレベルでの（実験的オプションを含む）複数のオプションがあり、そのうちの利用可能なHTTP互換の認証方式に基づいて要求を許可するために選ぶかもしれません。承認プロセスおよび関連する資格情報は、プッシュサービスのためのURIとともに、ユーザエージェントで設定されることが期待されます。"
    },
    {
      "indent": 3,
      "text": "Authorization is managed using capability URLs for the push message subscription, push, and receipt subscription resources ([CAP-URI]). A capability URL grants access to a resource based solely on knowledge of the URL.",
      "ja": "認可は、プッシュ、プッシュメッセージのサブスクリプション機能のURLを使用して管理、およびレシートのサブスクリプション・リソース（[CAP-URI]）されます。機能のURLは、単にURLの知識に基づいて、リソースへのアクセスを許可します。"
    },
    {
      "indent": 3,
      "text": "Capability URLs are used for their \"easy onward sharing\" and \"easy client API\" properties. These properties make it possible to avoid relying on prearranged relationships or additional protocols between push services and application servers.",
      "ja": "能力のURLは、その「簡単以降の共有」と「簡単なクライアントAPI」特性のために使用されています。これらのプロパティは、それが可能なプッシュサービスとアプリケーションサーバ間の事前に決められた関係や追加のプロトコルに依存することを避けるためにします。"
    },
    {
      "indent": 3,
      "text": "Capability URLs act as bearer tokens. Knowledge of a push message subscription URI implies authorization to either receive push messages or delete the subscription. Knowledge of a push URI implies authorization to send push messages. Knowledge of a push message URI allows for reading and acknowledging that specific message. Knowledge of a receipt subscription URI implies authorization to receive push receipts.",
      "ja": "能力のURLは、ベアラ・トークンとして機能します。プッシュメッセージのサブスクリプションURIの知識は、プッシュメッセージを受信したり、サブスクリプションを削除するのいずれかの権限を意味します。プッシュURIの知識はプッシュメッセージを送信するための許可を意味します。プッシュメッセージURIの知識は、その特定のメッセージを読み、認めるが可能になります。領収書のサブスクリプションURIの知識はプッシュ領収書を受け取るために許可を意味します。"
    },
    {
      "indent": 3,
      "text": "Encoding a large amount of random entropy (at least 120 bits) in the path component ensures that it is difficult to successfully guess a valid capability URL.",
      "ja": "パスコンポーネントにランダムエントロピーの大量（少なくとも120ビット）をコードするが正常に有効な機能URLを推測することが困難であることを保証します。"
    },
    {
      "indent": 0,
      "text": "8.4. Denial-of-Service Considerations",
      "section_title": true,
      "ja": "8.4. サービス拒否の考慮事項"
    },
    {
      "indent": 3,
      "text": "A user agent can control where valid push messages originate by limiting the distribution of push URIs to authorized application servers. Ensuring that push URIs are hard to guess ensures that only application servers that have received a push URI can use it.",
      "ja": "有効なプッシュメッセージが許可されたアプリケーションサーバにプッシュURIの分布を制限することにより、発信場所をユーザーエージェントが制御することができます。プッシュURIが推測しにくいことを保証することはプッシュを受けている唯一のアプリケーションサーバはURIがそれを使用できるようになります。"
    },
    {
      "indent": 3,
      "text": "Push messages that are not successfully authenticated by the user agent will not be delivered, but this can present a denial-of-service risk. Even a relatively small volume of push messages can cause battery-powered devices to exhaust power reserves.",
      "ja": "成功したユーザエージェントによって認証されていないプッシュメッセージが配信されませんが、これは、サービス拒否のリスクを提示することができます。でもプッシュメッセージの比較的小さなボリュームでは、電力の埋蔵を排出するバッテリ駆動機器を引き起こす可能性があります。"
    },
    {
      "indent": 3,
      "text": "To address this case, the W3C Push API [API] has adopted Voluntary Application Server Identification [VAPID], which allows a user agent to restrict a subscription to a specific application server. The push service can then identify and reject unwanted messages without contacting the user agent.",
      "ja": "このような場合に対処するために、W3CプッシュAPI [APIは、ユーザエージェントが特定のアプリケーションサーバーへのサブスクリプションを制限することを可能にする自主アプリケーションサーバ識別[つまらない]を、採用しています。プッシュサービスは、ユーザーエージェントに接触することなく、不要なメッセージを識別し、拒否することができます。"
    },
    {
      "indent": 3,
      "text": "A malicious application with a valid push URI could use the greater resources of a push service to mount a denial-of-service attack on a user agent. Push services SHOULD limit the rate at which push messages are sent to individual user agents.",
      "ja": "有効なプッシュURIを持つ悪意のあるアプリケーションがユーザエージェントにDoS攻撃をマウントするためにプッシュサービスの多くの資源を使用することができます。プッシュサービスは、個々のユーザエージェントに送信されたメッセージをプッシュする速度を制限する必要があります。"
    },
    {
      "indent": 3,
      "text": "A push service MAY return a 429 (Too Many Requests) status code [RFC6585] when an application server has exceeded its rate limit for push message delivery to a push resource. The push service SHOULD also include a Retry-After header [RFC7231] to indicate how long the application server is requested to wait before it makes another request to the push resource.",
      "ja": "プッシュサービスは、アプリケーション・サーバは、プッシュリソースへのプッシュメッセージ配信のためのレートリミットを超過した429（あまりに多くの要求）ステータスコード[RFC6585]を返すかもしれ。プッシュサービスは、アプリケーション・サーバは、それがプッシュリソースへの別の要求を行う前に待機するように要求されてどのくらいを示すために再試行-Afterヘッダ[RFC7231]を含むべきです。"
    },
    {
      "indent": 3,
      "text": "A push service or user agent MAY also terminate subscriptions (Section 7.3) that receive too many push messages.",
      "ja": "プッシュサービスやユーザエージェントは、あまりにも多くのプッシュメッセージを受信するサブスクリプション（7.3節）を終了することができます。"
    },
    {
      "indent": 3,
      "text": "A push service is also able to deny service to user agents. Intentional failure to deliver messages is difficult to distinguish from faults, which might occur due to transient network errors, interruptions in user agent availability, or genuine service outages.",
      "ja": "プッシュサービスは、ユーザエージェントにサービスを拒否することができます。メッセージを配信するための意図的な失敗は、一時的なネットワークエラー、ユーザエージェントの可用性の中断、または本物のサービス停止に発生する可能性がある障害から区別することは困難です。"
    },
    {
      "indent": 0,
      "text": "8.5. Logging Risks",
      "section_title": true,
      "ja": "8.5. ロギングリスク"
    },
    {
      "indent": 3,
      "text": "Server request logs can reveal subscription-related URIs or relationships between subscription-related URIs for the same user agent. Limitations on log retention and strong access control mechanisms can ensure that URIs are not revealed to unauthorized entities.",
      "ja": "サーバーの要求ログは、同じユーザー・エージェントのサブスクリプションに関連するURIの間のサブスクリプション関連のURIまたは関係を明らかにすることができます。ログの保存と強力なアクセス制御メカニズムの制限は、URIは、不正なエンティティに明らかにされていないことを確認することができます。"
    },
    {
      "indent": 0,
      "text": "9. IANA Considerations",
      "section_title": true,
      "ja": "9. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "This protocol defines new HTTP header fields in Section 9.1. New link relation types are identified using the URNs defined in Section 9.2. Port registration is defined in Section 9.3",
      "ja": "このプロトコルは、セクション9.1に新しいHTTPヘッダーフィールドを定義します。新しいリンク関係の種類は、9.2節で定義されたURNを使用して識別されます。ポート登録はセクション9.3で定義されています"
    },
    {
      "indent": 0,
      "text": "9.1. Header Field Registrations",
      "section_title": true,
      "ja": "9.1. ヘッダーフィールド登録"
    },
    {
      "indent": 3,
      "text": "HTTP header fields are registered within the \"Message Headers\" registry maintained at <https://www.iana.org/assignments/message-headers/>.",
      "ja": "HTTPヘッダフィールドは、<https://www.iana.org/assignments/message-headers/>に維持「メッセージヘッダ」レジストリ内に登録されています。"
    },
    {
      "indent": 3,
      "text": "This document defines the following HTTP header fields, and the following entries have been added to the \"Permanent Message Header Field Names\" registry ([RFC3864]):",
      "ja": "この文書は、次のHTTPヘッダーフィールドを定義し、次のエントリは、「永続的メッセージヘッダフィールド名」に追加されたレジストリ（[RFC3864]）。"
    },
    {
      "indent": 3,
      "text": "+-------------------+----------+----------+--------------+\n| Header Field Name | Protocol | Status   | Reference    |\n+-------------------+----------+----------+--------------+\n| TTL               | http     | standard | Section 5.2  |\n| Urgency           | http     | standard | Section 5.3  |\n| Topic             | http     | standard | Section 5.4  |\n+-------------------+----------+----------+--------------+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The change controller is: \"IETF (iesg@ietf.org) - Internet Engineering Task Force\".",
      "ja": "変更コントローラは次のとおりです。「IETF（iesg@ietf.org） - インターネットエンジニアリングタスクフォース」。"
    },
    {
      "indent": 0,
      "text": "9.2. Link Relation URNs",
      "section_title": true,
      "ja": "9.2. リンク関係壺"
    },
    {
      "indent": 3,
      "text": "This document registers URNs for use in identifying link relation types. These have been added to a new \"Web Push Identifiers\" registry according to the procedures in Section 4 of [RFC3553]; the corresponding \"push\" sub-namespace has been entered in the \"IETF URN Sub-namespace for Registered Protocol Parameter Identifiers\" registry.",
      "ja": "この文書では、リンク関係の種類を識別する際に使用するためのURNを登録します。これらは、[RFC3553]のセクション4の手順に従って、新しい「ウェブプッシュ識別子」レジストリに追加されています。対応する「プッシュ」のサブ名前空間には、レジストリの「登録プロトコルパラメータ識別子のためのIETF URNサブ名前空間」に入力されています。"
    },
    {
      "indent": 3,
      "text": "The \"Web Push Identifiers\" registry operates under the IETF Review policy [RFC5226].",
      "ja": "「ウェブプッシュ識別子」レジストリは、IETFレビュー方針[RFC5226]の下で動作します。"
    },
    {
      "indent": 3,
      "text": "Registry name: Web Push Identifiers",
      "ja": "レジストリ名：ウェブプッシュ識別子"
    },
    {
      "indent": 3,
      "text": "URN Prefix: urn:ietf:params:push",
      "ja": "URN接頭辞：URN：IETF：のparams：プッシュ"
    },
    {
      "indent": 3,
      "text": "Specification: RFC 8030 (this document)",
      "ja": "仕様：RFC 8030（本書）"
    },
    {
      "indent": 3,
      "text": "Repository: http://www.iana.org/assignments/webpush-parameters/",
      "ja": "リポジトリ：http://www.iana.org/assignments/webpush-parameters/"
    },
    {
      "indent": 3,
      "text": "Index Value: Values in this registry are URNs or URN prefixes that start with the prefix \"urn:ietf:params:push\". Each is registered independently.",
      "ja": "インデックス値：このレジストリの値は、接頭辞「プッシュ：IETF：：のparams URN」で始まるのURNまたはURN接頭辞です。それぞれが独立して登録されています。"
    },
    {
      "indent": 3,
      "text": "Registrations in the \"Web Push Identifiers\" registry include the following information:",
      "ja": "「ウェブプッシュ識別子」レジストリ内の登録は、以下の情報が含まれています。"
    },
    {
      "indent": 3,
      "text": "URN: A complete URN or URN prefix.",
      "ja": "URN：完全URNまたはURN接頭辞。"
    },
    {
      "indent": 3,
      "text": "Description: A summary description.",
      "ja": "説明：概要説明。"
    },
    {
      "indent": 3,
      "text": "Contact: Email for the person or group making the registration.",
      "ja": "連絡先：登録を行う個人またはグループの電子メール。"
    },
    {
      "indent": 3,
      "text": "Index Value: As described in [RFC3553]",
      "ja": "インデックス値：[RFC3553]で説明したように"
    },
    {
      "indent": 3,
      "text": "Reference: A reference to a specification describing the semantics of the URN or URN prefix.",
      "ja": "参照：URNまたはURN接頭語の意味を説明する明細書を参照。"
    },
    {
      "indent": 6,
      "text": "URN prefixes that are registered include a description of how the URN is constructed. This is not applicable for specific URNs.",
      "ja": "登録されているURN接頭辞がURNの構築方法の説明が含まれています。これは、特定のURNには適用されません。"
    },
    {
      "indent": 3,
      "text": "These values are entered as the initial content of the \"Web Push Identifiers\" registry.",
      "ja": "これらの値は、「ウェブプッシュ識別子」レジストリの初期コンテンツとして入力されます。"
    },
    {
      "indent": 3,
      "text": "URN: urn:ietf:params:push",
      "ja": "URN：URN：IETF：のparams：プッシュ"
    },
    {
      "indent": 3,
      "text": "Description: This link relation type is used to identify a resource for sending push messages.",
      "ja": "説明：このリンク関係の種類は、プッシュメッセージを送信するためのリソースを識別するために使用されます。"
    },
    {
      "indent": 3,
      "text": "Contact: The WEBPUSH WG of the IETF (webpush@ietf.org)",
      "ja": "連絡先：IETFのWEBPUSH WG（webpush@ietf.org）"
    },
    {
      "indent": 3,
      "text": "Reference: RFC 8030 (this document)",
      "ja": "参考：RFC 8030（本書）"
    },
    {
      "indent": 3,
      "text": "URN: urn:ietf:params:push:set",
      "ja": "URN：URN：IETF：のparams：プッシュ：セット"
    },
    {
      "indent": 3,
      "text": "Description: This link relation type is used to identify a collection of push message subscriptions.",
      "ja": "説明：このリンク関係の種類はプッシュメッセージのサブスクリプションのコレクションを識別するために使用されます。"
    },
    {
      "indent": 3,
      "text": "Contact: The WEBPUSH WG of the IETF (webpush@ietf.org)",
      "ja": "連絡先：IETFのWEBPUSH WG（webpush@ietf.org）"
    },
    {
      "indent": 3,
      "text": "Reference: RFC 8030 (this document)",
      "ja": "参考：RFC 8030（本書）"
    },
    {
      "indent": 3,
      "text": "URN: urn:ietf:params:push:receipt",
      "ja": "URN：URN：IETF：のparams：プッシュ：レシート"
    },
    {
      "indent": 3,
      "text": "Description: This link relation type is used to identify a resource for receiving delivery confirmations for push messages.",
      "ja": "説明：このリンク関係の種類は、プッシュメッセージの配信確認を受信するためのリソースを識別するために使用されます。"
    },
    {
      "indent": 3,
      "text": "Contact: The WEBPUSH WG of the IETF (webpush@ietf.org)",
      "ja": "連絡先：IETFのWEBPUSH WG（webpush@ietf.org）"
    },
    {
      "indent": 3,
      "text": "Reference: RFC 8030 (this document)",
      "ja": "参考：RFC 8030（本書）"
    },
    {
      "indent": 0,
      "text": "9.3. Service Name and Port Number Registration",
      "section_title": true,
      "ja": "9.3. サービス名とポート番号の登録"
    },
    {
      "indent": 3,
      "text": "Service names and port numbers are registered within the \"Service Name and Transport Protocol Port Number Registry\" maintained at <https://www.iana.org/assignments/service-names-port-numbers/>.",
      "ja": "サービス名とポート番号は<https://www.iana.org/assignments/service-names-port-numbers/>で維持「サービス名とトランスポートプロトコルポート番号レジストリ」内に登録されています。"
    },
    {
      "indent": 3,
      "text": "In accordance with [RFC6335], IANA has assigned the System Port number 1001 and the service name \"webpush\".",
      "ja": "[RFC6335]に従い、IANAは、システムポート番号1001およびサービス名「webpush」が割り当てられています。"
    },
    {
      "indent": 3,
      "text": "Service Name: webpush",
      "ja": "サービス名：webpush"
    },
    {
      "indent": 3,
      "text": "Port Number: 1001",
      "ja": "ポート番号：1001"
    },
    {
      "indent": 3,
      "text": "Transport Protocol: tcp",
      "ja": "トランスポートプロトコル：TCP"
    },
    {
      "indent": 3,
      "text": "Description: HTTP Web Push",
      "ja": "説明：HTTPのWebプッシュ"
    },
    {
      "indent": 3,
      "text": "Assignee: The IESG (iesg@ietf.org)",
      "ja": "譲受人：IESG（iesg@ietf.org）"
    },
    {
      "indent": 3,
      "text": "Contact: The IETF Chair (chair@ietf.org)",
      "ja": "連絡先：IETF議長（chair@ietf.org）"
    },
    {
      "indent": 3,
      "text": "Reference: RFC 8030 (this document)",
      "ja": "参考：RFC 8030（本書）"
    },
    {
      "indent": 0,
      "text": "10. References",
      "section_title": true,
      "ja": "10.参考文献"
    },
    {
      "indent": 0,
      "text": "10.1. Normative References",
      "section_title": true,
      "ja": "10.1. 引用規格"
    },
    {
      "indent": 3,
      "text": "[CAP-URI] Tennison, J., \"Good Practices for Capability URLs\", W3C First Public Working Draft capability-urls, February 2014, <http://www.w3.org/TR/capability-urls/>.",
      "ja": "[CAP-URI] Tennison、J.、 \"能力のURLのためのグッド・プラクティス\"、W3C初公開ワーキングドラフト機能、URLを、2014年2月、<http://www.w3.org/TR/capability-urls/>。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <http://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<http://www.rfc-editor.org/info/ RFC2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC2818] Rescorla, E., \"HTTP Over TLS\", RFC 2818, DOI 10.17487/RFC2818, May 2000, <http://www.rfc-editor.org/info/rfc2818>.",
      "ja": "[RFC2818]レスコラ、E.、 \"TLSオーバーHTTP\"、RFC 2818、DOI 10.17487 / RFC2818、2000年5月、<http://www.rfc-editor.org/info/rfc2818>。"
    },
    {
      "indent": 3,
      "text": "[RFC3553] Mealling, M., Masinter, L., Hardie, T., and G. Klyne, \"An IETF URN Sub-namespace for Registered Protocol Parameters\", BCP 73, RFC 3553, DOI 10.17487/RFC3553, June 2003, <http://www.rfc-editor.org/info/rfc3553>.",
      "ja": "[RFC3553] Mealling、M.、Masinter、L.、ハーディー、T.、およびG. Klyne、 \"登録プロトコル・パラメータのためのIETF URNサブ名前空間\"、BCP 73、RFC 3553、DOI 10.17487 / RFC3553、2003年6月<http://www.rfc-editor.org/info/rfc3553>。"
    },
    {
      "indent": 3,
      "text": "[RFC3864] Klyne, G., Nottingham, M., and J. Mogul, \"Registration Procedures for Message Header Fields\", BCP 90, RFC 3864, DOI 10.17487/RFC3864, September 2004, <http://www.rfc-editor.org/info/rfc3864>.",
      "ja": "[RFC3864] Klyne、G.、ノッティンガム、M.、およびJ.モーグル、 \"メッセージヘッダフィールドの登録手順\"、BCP 90、RFC 3864、DOI 10.17487 / RFC3864、2004年9月、<HTTP：//www.rfc- editor.org/info/rfc3864>。"
    },
    {
      "indent": 3,
      "text": "[RFC4648] Josefsson, S., \"The Base16, Base32, and Base64 Data Encodings\", RFC 4648, DOI 10.17487/RFC4648, October 2006, <http://www.rfc-editor.org/info/rfc4648>.",
      "ja": "[RFC4648] Josefsson氏、S.、 \"Base16、Base32、およびBase64でデータエンコーディング\"、RFC 4648、DOI 10.17487 / RFC4648、2006年10月、<http://www.rfc-editor.org/info/rfc4648>。"
    },
    {
      "indent": 3,
      "text": "[RFC5226] Narten, T. and H. Alvestrand, \"Guidelines for Writing an IANA Considerations Section in RFCs\", BCP 26, RFC 5226, DOI 10.17487/RFC5226, May 2008, <http://www.rfc-editor.org/info/rfc5226>.",
      "ja": "[RFC5226] Narten氏、T.とH. Alvestrand、 \"RFCsにIANA問題部に書くためのガイドライン\"、BCP 26、RFC 5226、DOI 10.17487 / RFC5226、2008年5月、<http://www.rfc-editor.org /情報/ RFC5226>。"
    },
    {
      "indent": 3,
      "text": "[RFC5382] Guha, S., Ed., Biswas, K., Ford, B., Sivakumar, S., and P. Srisuresh, \"NAT Behavioral Requirements for TCP\", BCP 142, RFC 5382, DOI 10.17487/RFC5382, October 2008, <http://www.rfc-editor.org/info/rfc5382>.",
      "ja": "[RFC5382]グハ、S.編、ビスワス、K.、フォード、B.、シバクマー、S.、およびP. Srisuresh、 \"TCPのためのNAT行動要件\"、BCP 142、RFC 5382、DOI 10.17487 / RFC5382、 2008年10月、<http://www.rfc-editor.org/info/rfc5382>。"
    },
    {
      "indent": 3,
      "text": "[RFC5988] Nottingham, M., \"Web Linking\", RFC 5988, DOI 10.17487/RFC5988, October 2010, <http://www.rfc-editor.org/info/rfc5988>.",
      "ja": "[RFC5988]ノッティンガム、M.、 \"ウェブリンク\"、RFC 5988、DOI 10.17487 / RFC5988、2010年10月、<http://www.rfc-editor.org/info/rfc5988>。"
    },
    {
      "indent": 3,
      "text": "[RFC6335] Cotton, M., Eggert, L., Touch, J., Westerlund, M., and S. Cheshire, \"Internet Assigned Numbers Authority (IANA) Procedures for the Management of the Service Name and Transport Protocol Port Number Registry\", BCP 165, RFC 6335, DOI 10.17487/RFC6335, August 2011, <http://www.rfc-editor.org/info/rfc6335>.",
      "ja": "[RFC6335]コットン、M.、エッゲルト、L.、タッチ、J.、ウェスター、M.、およびS.チェシャー、「IANA（Internet Assigned Numbers Authority）のサービス名とトランスポートプロトコルポート番号レジストリの管理のための手順」、BCP 165、RFC 6335、DOI 10.17487 / RFC6335、2011年8月、<http://www.rfc-editor.org/info/rfc6335>。"
    },
    {
      "indent": 3,
      "text": "[RFC6454] Barth, A., \"The Web Origin Concept\", RFC 6454, DOI 10.17487/RFC6454, December 2011, <http://www.rfc-editor.org/info/rfc6454>.",
      "ja": "[RFC6454]バース、A.、 \"ウェブ起源コンセプト\"、RFC 6454、DOI 10.17487 / RFC6454、2011年12月、<http://www.rfc-editor.org/info/rfc6454>。"
    },
    {
      "indent": 3,
      "text": "[RFC6585] Nottingham, M. and R. Fielding, \"Additional HTTP Status Codes\", RFC 6585, DOI 10.17487/RFC6585, April 2012, <http://www.rfc-editor.org/info/rfc6585>.",
      "ja": "[RFC6585]ノッティンガム、M.とR.フィールディング、 \"追加のHTTPステータスコード\"、RFC 6585、DOI 10.17487 / RFC6585、2012年4月、<http://www.rfc-editor.org/info/rfc6585>。"
    },
    {
      "indent": 3,
      "text": "[RFC7230] Fielding, R., Ed. and J. Reschke, Ed., \"Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing\", RFC 7230, DOI 10.17487/RFC7230, June 2014, <http://www.rfc-editor.org/info/rfc7230>.",
      "ja": "[RFC7230]フィールディング、R.、エド。及びJ. Reschke、編、 \"ハイパーテキスト転送プロトコル（HTTP / 1.1）：メッセージの構文およびルーティング\"、RFC 7230、DOI 10.17487 / RFC7230、2014年6月、<http://www.rfc-editor.org/info/ rfc7230>。"
    },
    {
      "indent": 3,
      "text": "[RFC7231] Fielding, R., Ed. and J. Reschke, Ed., \"Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content\", RFC 7231, DOI 10.17487/RFC7231, June 2014, <http://www.rfc-editor.org/info/rfc7231>.",
      "ja": "[RFC7231]フィールディング、R.、エド。そして、J. Reschke、エド、 \"ハイパーテキスト転送プロトコル（HTTP / 1.1）：セマンティクスおよびコンテンツ\"、RFC 7231、DOI 10.17487 / RFC7231、2014年6月、<http://www.rfc-editor.org/info/rfc7231 >。"
    },
    {
      "indent": 3,
      "text": "[RFC7232] Fielding, R., Ed. and J. Reschke, Ed., \"Hypertext Transfer Protocol (HTTP/1.1): Conditional Requests\", RFC 7232, DOI 10.17487/RFC7232, June 2014, <http://www.rfc-editor.org/info/rfc7232>.",
      "ja": "[RFC7232]フィールディング、R.、エド。そして、J. Reschke、エド、 \"ハイパーテキスト転送プロトコル（HTTP / 1.1）：条件付きリクエスト\"、RFC 7232、DOI 10.17487 / RFC7232、2014年6月、<http://www.rfc-editor.org/info/rfc7232> 。"
    },
    {
      "indent": 3,
      "text": "[RFC7240] Snell, J., \"Prefer Header for HTTP\", RFC 7240, DOI 10.17487/RFC7240, June 2014, <http://www.rfc-editor.org/info/rfc7240>.",
      "ja": "[RFC7240]スネル、J.、 \"HTTPのためのヘッダーを優先\"、RFC 7240、DOI 10.17487 / RFC7240、2014年6月、<http://www.rfc-editor.org/info/rfc7240>。"
    },
    {
      "indent": 3,
      "text": "[RFC7525] Sheffer, Y., Holz, R., and P. Saint-Andre, \"Recommendations for Secure Use of Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)\", BCP 195, RFC 7525, DOI 10.17487/RFC7525, May 2015, <http://www.rfc-editor.org/info/rfc7525>.",
      "ja": "[RFC7525]シェファー、Y.、ホルツ、R.、およびP.サンアンドレ、 \"トランスポート層セキュリティ（TLS）およびデータグラムトランスポート層セキュリティ（DTLS）のセキュアな利用のための提言\"、BCP 195、RFC 7525、DOI 10.17487 / RFC7525、2015年5月、<http://www.rfc-editor.org/info/rfc7525>。"
    },
    {
      "indent": 3,
      "text": "[RFC7540] Belshe, M., Peon, R., and M. Thomson, Ed., \"Hypertext Transfer Protocol Version 2 (HTTP/2)\", RFC 7540, DOI 10.17487/RFC7540, May 2015, <http://www.rfc-editor.org/info/rfc7540>.",
      "ja": "[RFC7540] Belshe、M.、ペオン、R.、およびM.トムソン、エド、 \"ハイパーテキスト転送プロトコルバージョン2（HTTP / 2）\"、RFC 7540、DOI 10.17487 / RFC7540、2015年5月、<のhttp：// www.rfc-editor.org/info/rfc7540>。"
    },
    {
      "indent": 3,
      "text": "[RFC7838] Nottingham, M., McManus, P., and J. Reschke, \"HTTP Alternative Services\", RFC 7838, DOI 10.17487/RFC7838, April 2016, <http://www.rfc-editor.org/info/rfc7838>.",
      "ja": "[RFC7838]ノッティンガム、M.、マクマナス、P.、およびJ. Reschke、 \"HTTP代替サービス\"、RFC 7838、DOI 10.17487 / RFC7838、2016年4月、<http://www.rfc-editor.org/info/ rfc7838>。"
    },
    {
      "indent": 0,
      "text": "10.2. Informative References",
      "section_title": true,
      "ja": "10.2. 参考文献"
    },
    {
      "indent": 3,
      "text": "[API] Beverloo, P., Thomson, M., van Ouwerkerk, M., Sullivan, B., and E. Fullea, \"Push API\", W3C Editor's Draft push-api, November 2016, <https://w3c.github.io/push-api/>.",
      "ja": "[API] Beverloo、P.、トムソン、M.、バンOuwerkerk、M.、サリバン、B.、およびE. Fullea、 \"プッシュAPI\"、W3C編集者ドラフトプッシュAPI、2016年11月、<https：//でW3C .github.io /プッシュAPI />。"
    },
    {
      "indent": 3,
      "text": "[ENCRYPT] Thomson, M., \"Message Encryption for Web Push\", Work in Progress, draft-ietf-webpush-encryption-06, October 2016.",
      "ja": "[ENCRYPT]トムソン、M.、 \"ウェブプッシュのためのメッセージの暗号化\" が進行中で働いて、ドラフト-IETF-webpush暗号-06、2016年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC6973] Cooper, A., Tschofenig, H., Aboba, B., Peterson, J., Morris, J., Hansen, M., and R. Smith, \"Privacy Considerations for Internet Protocols\", RFC 6973, DOI 10.17487/RFC6973, July 2013, <http://www.rfc-editor.org/info/rfc6973>.",
      "ja": "[RFC6973]クーパー、A.、Tschofenig、H.、Aboba、B.、ピーターソン、J.、モリス、J.、ハンセン、M.、およびR.スミス、 \"インターネットプロトコルのためのプライバシーの考慮事項\"、RFC 6973、DOI 10.17487 / RFC6973、2013年7月、<http://www.rfc-editor.org/info/rfc6973>。"
    },
    {
      "indent": 3,
      "text": "[VAPID] Thomson, M. and P. Beverloo, \"Voluntary Application Server Identification for Web Push\", Work in Progress, draft-ietf-webpush-vapid-01, June 2016.",
      "ja": "[つまらない]トムソン、M.とP. Beverloo、 \"ウェブプッシュのための自主的なアプリケーション・サーバーの識別\" が進行中で働いて、ドラフト-IETF-webpush-つまらない-01、2016年6月。"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Significant technical input to this document has been provided by Ben Bangert, Peter Beverloo, Kit Cambridge, JR Conlin, Lucas Jenss, Matthew Kaufman, Costin Manolache, Mark Nottingham, Idel Pivnitskiy, Robert Sparks, Darshak Thakore, and many others.",
      "ja": "このドキュメントへの重要な技術的な入力はベンBangert、ピーターBeverloo、キットケンブ​​リッジ、JR Conlin、ルーカスJenss、マシュー・カウフマン、コスティンManolache、マーク・ノッティンガム、IDEL Pivnitskiy、ロバート・スパークス、Darshak Thakore、および他の多くによって提供されています。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Martin Thomson Mozilla 331 E Evelyn Street Mountain View, CA 94041 United States of America",
      "ja": "マーティン・トムソンMozillaの331 Eイヴリン・ストリートマウンテンビュー、カリフォルニア州アメリカの94041米国"
    },
    {
      "indent": 3,
      "text": "Email: martin.thomson@gmail.com",
      "ja": "メール：martin.thomson@gmail.com"
    },
    {
      "indent": 3,
      "text": "Elio Damaggio Microsoft One Microsoft Way Redmond, WA 98052 United States of America",
      "ja": "エリオDamaggioマイクロソフト1マイクロソフト道、レッドモンド、ワシントンアメリカの98052米国"
    },
    {
      "indent": 3,
      "text": "Email: elioda@microsoft.com",
      "ja": "メール：elioda@microsoft.com"
    },
    {
      "indent": 3,
      "text": "Brian Raymor (editor) Microsoft One Microsoft Way Redmond, WA 98052 United States of America",
      "ja": "ブライアンRaymor（編集者）マイクロソフト1マイクロソフト道、レッドモンド、ワシントンアメリカの98052米国"
    },
    {
      "indent": 3,
      "text": "Email: brian.raymor@microsoft.com",
      "ja": "メール：brian.raymor@microsoft.com"
    }
  ]
}