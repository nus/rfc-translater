{
  "title": {
    "text": "RFC 8295 - EST (Enrollment over Secure Transport) Extensions",
    "ja": "RFC 8295 - EST（入学オーバーセキュア交通）の拡張機能"
  },
  "number": 8295,
  "created_at": "2019-10-29 18:32:48.315489+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                         S. Turner\nRequest for Comments: 8295                                         sn3rd\nCategory: Standards Track                                   January 2018\nISSN: 2070-1721",
      "raw": true
    },
    {
      "indent": 11,
      "text": "EST (Enrollment over Secure Transport) Extensions",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "The EST (Enrollment over Secure Transport) protocol defines the Well-Known URI (Uniform Resource Identifier) -- /.well-known/est -- along with a number of other path components that clients use for PKI (Public Key Infrastructure) services, namely certificate enrollment (e.g., /simpleenroll). This document defines a number of other PKI services as additional path components -- specifically, firmware and trust anchors as well as symmetric, asymmetric, and encrypted keys. This document also specifies the PAL (Package Availability List), which is an XML (Extensible Markup Language) file or JSON (JavaScript Object Notation) object that clients use to retrieve packages available and authorized for them. This document extends the EST server path components to provide these additional services.",
      "ja": "EST（入学オーバーセキュアトランスポート）プロトコルは、よく知られたURI（Uniform Resource Identifier）を定義する -  /.well-known/est  - クライアントはPKI（公開鍵基盤）のために使用する他のパスコンポーネントの数とともにサービス、すなわち証明書登録（例えば、/ simpleenroll）。具体的に、ファームウェアおよびトラストアンカーならびに対称、非対称、および暗号化キー - この文書は、追加のパスコンポーネントのような他のPKIサービスの数を定義します。また、このドキュメントでは、XML（拡張マークアップ言語）ファイルまたはJSON（JavaScriptオブジェクト表記）クライアントが利用可能と彼らのために認可パッケージを取得するために使用したオブジェクトであるPAL（パッケージの可用性のリスト）を指定します。この文書では、これらの付加的なサービスを提供するために、ESTサーバパスコンポーネントを拡張します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 7841.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 7841のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc8295.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttps://www.rfc-editor.org/info/rfc8295で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2018 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2018 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（https://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................4\n   1.1. Definitions ................................................6\n   1.2. Authentication and Authorization ...........................7\n   1.3. TLS Cipher Suites ..........................................7\n   1.4. URI Configuration ..........................................7\n   1.5. Message Types ..............................................8\n   1.6. Key Words .................................................10\n2. Locate Available Packages ......................................10\n   2.1. PAL Format ................................................12\n        2.1.1. PAL Package Types ..................................14\n        2.1.2. PAL XML Schema .....................................19\n        2.1.3. PAL JSON Object ....................................23\n   2.2. Request PAL ...............................................23\n   2.3. Provide PAL ...............................................24\n3. Distribute EE Certificates .....................................25\n   3.1. EE Certificate Request ....................................25\n   3.2. EE Certificate Response ...................................26\n4. Distribute CRLs and ARLs .......................................26\n   4.1. CRL Request ...............................................26\n   4.2. CRL Response ..............................................26\n5. Symmetric Keys, Receipts, and Errors ...........................27\n   5.1. Symmetric Keys ............................................27\n        5.1.1. Distribute Symmetric Keys ..........................28\n        5.1.2. Symmetric Key Response .............................28\n   5.2. Symmetric Key Receipts and Errors .........................29\n        5.2.1. Provide Symmetric Key Receipt or Error .............30\n        5.2.2. Symmetric Key Receipt or Error Response ............31",
      "raw": true
    },
    {
      "indent": 3,
      "text": "6. Firmware, Receipts, and Errors .................................31\n   6.1. Firmware ..................................................31\n        6.1.1. Distribute Firmware ................................32\n        6.1.2. Firmware Response ..................................32\n   6.2. Firmware Receipts and Errors ..............................33\n        6.2.1. Provide Firmware Receipt or Error ..................33\n        6.2.2. Firmware Receipt or Error Response .................33\n7. Trust Anchor Management Protocol ...............................34\n   7.1. TAMP Status Query, Trust Anchor Update,\n        Apex Trust Anchor Update, Community Update,\n        and Sequence Number Adjust ................................34\n        7.1.1. Request TAMP Packages ..............................34\n        7.1.2. Return TAMP Packages ...............................35\n   7.2. TAMP Responses, Confirms, and Errors ......................35\n        7.2.1. Provide TAMP Responses, Confirms, or Errors ........36\n        7.2.2. TAMP Responses, Confirms, and Error Responses ......36\n8. Asymmetric Keys, Receipts, and Errors ..........................36\n   8.1. Asymmetric Key Encapsulation ..............................37\n   8.2. Asymmetric Key Package Receipts and Errors ................38\n   8.3. PKCS #12 ..................................................39\n        8.3.1. Server-Side Key Generation Request .................39\n        8.3.2. Server-Side Key Generation Response ................39\n9. PAL and Certificate Enrollment .................................40\n10. Security Considerations .......................................43\n11. IANA Considerations ...........................................44\n   11.1. PAL Name Space ...........................................44\n   11.2. PAL XML Schema ...........................................44\n   11.3. PAL Package Types ........................................44\n12. References ....................................................45\n   12.1. Normative References .....................................45\n   12.2. Informative References ...................................50\nAppendix A. Example Use of PAL ....................................51\nAppendix B. Additional CSR Attributes .............................53\nAcknowledgements ..................................................54\nAuthor's Address ..................................................54",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "The EST (Enrollment over Secure Transport) protocol [RFC7030] defines the Well-Known URI (Uniform Resource Identifier) -- /.well-known/est -- to support selected services related to the PKI (Public Key Infrastructure), with such PCs (path components) as simple enrollment with /simpleenroll, rekey or renew with /simplereenroll, etc. A server that wishes to support additional PKI-related services and other security-related packages could use the same .well-known URI by defining additional PCs. This document defines six such PCs:",
      "ja": "/.well-known/est  -   -  EST（入学オーバーセキュアトランスポート）プロトコル[RFC7030]はよく知られているURI（Uniform Resource Identifier）を定義するなどして、PKI（公開鍵基盤）に関連し、選択したサービスを、サポートパソコン（パスコンポーネント）/ simpleenrollと同様に簡単な登録は、キー更新または追加定義することによって、同じ.well知られているURIを使用することができ、追加のPKI関連のサービスおよびその他のセキュリティ関連のパッケージをサポートしたい/ simplereenroll、サーバ等で更新しますパソコン。この文書では、6、このようなPCを定義します。"
    },
    {
      "indent": 3,
      "text": "o /pal - The PAL (Package Availability List) provides a list of all known packages available and authorized for a client. By accessing the service provided by this PC first, the client can walk through the PAL and download all the packages necessary to begin operating securely. The PAL essentially points to other PCs, including the PCs defined in this document as well as those defined in [RFC7030] (e.g., /cacerts, /simpleenroll, /simplereenroll, /fullcmc, /serverkeygen, and /csrattrs). The /pal PC is described in Section 2.",
      "ja": "O / PAL  -  PAL（パッケージ状況リスト）が利用可能とクライアントの許可すべての既知のパッケージのリストを提供します。最初に、このPCが提供するサービスにアクセスすることにより、クライアントは、PALを歩くと安全に動作を開始するために必要なすべてのパッケージをダウンロードすることができます。 PALは、本質的に[RFC7030]（例えば、/のcacerts / simpleenroll / simplereenroll / fullcmc / serverkeygen、及び/ csrattrs）で定義されたものと同様に、この文書で定義されたPCなど他のPC、を指します。 / PALのPCは、セクション2に記載されています。"
    },
    {
      "indent": 3,
      "text": "o /eecerts - EE (End-Entity) certificates [RFC5280] are needed by the client when they invoke a security protocol for communicating with a peer (i.e., they become operational and do something meaningful as opposed to just communicating with the infrastructure). If the infrastructure knows the certificate(s) needed by the client, then providing the peer's certificate avoids the client having to discover the peer's certificate. This service is not meant to be a general-purpose repository to which clients query a \"repository\" and then get a response; this is purely a push mechanism. The /eecerts PC is described in Section 3.",
      "ja": "O / eecerts  - 彼らはピアと通信するためのセキュリティプロトコルを呼び出すときEE（エンドエンティティ）の証明書[RFC5280]は（つまり、彼らは動作可能になるとは対照的に、単にインフラと通信するために意味のある何かを）クライアントが必要とされています。インフラストラクチャは、クライアントが必要とする証明書（複数可）を知っている場合は、ピアの証明書を提供するピアの証明書を発見したクライアントを回避することができます。このサービスは、クライアントが「リポジトリ」を照会するための汎用的なリポジトリなるし、応答を取得するものではありません。これは純粋にプッシュ機構です。 / eecertsのPCは、セクション3に記載されています。"
    },
    {
      "indent": 3,
      "text": "o /crls - CRLs (Certificate Revocation Lists) and ARLs (Authority Revocation Lists) [RFC5280] are also needed by the client when they validate certificate paths. CRLs (and ARLs) from TAs (Trust Anchors) and intermediate CAs (Certification Authorities) are needed to validate the certificates used to generate the client's certificate or the peer's certificate, which is provided by the /eecerts PC, and providing them saves the client from having to \"discover\" them and then retrieve them. CRL \"discovery\" is greatly aided by the inclusion of the CRL Distribution Point certificate extension [RFC5280], but this extension is not always present in certificates and requires another connection to retrieve them. Like the /eecerts PC, this service is not meant to be a general-purpose repository to which clients query a repository and then get a response; this is purely a push mechanism. The /crls PC is described in Section 4.",
      "ja": "O / CRLの - 彼らは、証明書パスを検証するときのCRL（証明書失効リスト）とARLs（権限失効リスト）[RFC5280]は、クライアントによって必要とされています。 CRLの（とARLs）のTA（トラストアンカー）および中間CA（認証局）から/ eecerts PCによって提供され、クライアントの証明書またはピアの証明書を生成するために使用する証明書を、検証するために必要とされ、それらを提供するには、クライアントが保存されますそれらを「発見」し、それらを取得することから。 CRL「発見」が大幅にCRL配布ポイント証明書拡張[RFC5280]を含めることによって助けますが、この拡張機能は常に証明書に存在しないし、それらを取得するために、別の接続を必要としています。 / eecerts PCと同様に、このサービスは、クライアントがリポジトリに照会し、応答を取得するための汎用的なリポジトリとなるものではありません。これは純粋にプッシュ機構です。 /のCRLはPCは、セクション4に記載されています。"
    },
    {
      "indent": 3,
      "text": "o /symmetrickeys - In some cases, clients use symmetric keys [RFC6031] when communicating with their peers. If the client's peers are known by the server a priori, then providing them saves the client or an administrator from later having to find, retrieve, and install them. Like the /eecerts and /crls PCs, this service is not meant to be a general-purpose repository to which clients query a repository and then get a response; this is purely a push mechanism for the keys themselves. However, things do not always go as planned, and clients need to inform the server about any errors. If things did go well, then the client, if requested, needs to provide a receipt [RFC7191]. The /symmetrickeys and /symmetrickeys/return PCs are described in Section 5.",
      "ja": "O / symmetrickeysは - それらのピアと通信するときにいくつかのケースでは、クライアントは、対称キー[RFC6031]を使用します。クライアントのピアがサーバ先験的に知られている場合は、それらを提供するクライアント以降、見つけ取得し、それらをインストールすることから、管理者が保存されます。 / eecertsおよび/ CRLのパソコンと同じように、このサービスは、クライアントがリポジトリに照会し、応答を取得するには、汎用リポジトリとなるものではありません。これは純粋に、キー自身のためにプッシュ機構です。しかし、計画通りに物事は常に行っていない、とクライアントは、すべてのエラーをサーバに通知する必要があります。物事がうまく行かなかった場合、クライアントは、要求された場合、領収書[RFC7191]を提供する必要があります。 / symmetrickeysおよび/ symmetrickeys /リターンPCは、セクション5で説明されています。"
    },
    {
      "indent": 3,
      "text": "o /firmware - Some client firmware and software support automatic update mechanisms, and some do not. For those that do not, the /firmware PC provides a mechanism for the infrastructure to inform the client that firmware and software updates [RFC4108] are available. Because updates do not always go as planned and because sometimes the server needs to know whether the firmware was received and processed, this PC also provides a mechanism to return errors and receipts. The /firmware and /firmware/return PCs are defined in Section 6.",
      "ja": "O /ファームウェア - いくつかのクライアントのファームウェアおよびソフトウェアのサポート自動更新メカニズムあるものとないものがあります。そうでないものについては、/ファームウェアのPCは、ファームウェアやソフトウェアのアップデート[RFC4108]が利用可能であることをクライアントに通知するために、インフラストラクチャのためのメカニズムを提供します。計画通り更新は常に行っていないと、時々サーバーは、ファームウェアが受信され、処理されたかどうかを知る必要があるため、このPCにもエラーや領収書を返却するためのメカニズムを提供するので。 /ファームウェアおよび/ファームウェア/復帰PCは、セクション6で定義されています。"
    },
    {
      "indent": 3,
      "text": "o /tamp - To control the TAs in client TA databases, servers use the /tamp PC to request that clients retrieve TAMP (Trust Anchor Management Protocol) query, update, and adjust packages [RFC5934], and clients use the /tamp/return PC to return TAMP responses, confirms, and errors [RFC5934]. The /tamp and /tamp/return PCs are defined in Section 7.",
      "ja": "O /タンピング - クライアントTAデータベース内のTAを制御するには、サーバは/クライアントがTAMP（トラストアンカー管理プロトコル）クエリ、更新、およびパッケージを調整し、[RFC5934]を取得し、クライアントは/タンピング/リターンを使用することを要求するためにPCを突き固める使用TAMP応答、確認、およびエラー[RFC5934]を返すためにPC。 /タンピングおよび/タンピング/リターンPCはセクション7で定義されています。"
    },
    {
      "indent": 3,
      "text": "This document also extends the /est/serverkeygen PC [RFC7030] to support the following (see Section 8):",
      "ja": "この文書はまた、（セクション8を参照）、以下をサポートするために/ EST / serverkeygenのPC [RFC7030]を拡張します。"
    },
    {
      "indent": 3,
      "text": "o Returning asymmetric key package receipts and errors [RFC7191].",
      "ja": "非対称キーパッケージの領収書やエラーを返すO [RFC7191]。"
    },
    {
      "indent": 3,
      "text": "o Encapsulating returned asymmetric keys in additional CMS (Cryptographic Message Syntax) content types [RFC7193].",
      "ja": "Oカプセル化は、追加のCMS（暗号メッセージ構文）コンテンツタイプ[RFC7193]に非対称鍵を返しました。"
    },
    {
      "indent": 3,
      "text": "o Returning server-generated public key pairs encapsulated in PKCS #12 (Public Key Cryptography Standard #12) [RFC7292].",
      "ja": "PKCS＃12（公開鍵暗号化標準＃12）[RFC7292]でカプセル化されたサーバが生成する公開鍵のペアを返すO。"
    },
    {
      "indent": 3,
      "text": "While the motivation is to provide packages to clients during enrollment so that they can perform securely after enrollment, the services defined in this specification can be used after enrollment.",
      "ja": "動機は、彼らが入学後に安全に実行できるように、登録時にクライアントにパッケージを提供することであるが、この仕様で定義されたサービスは、入学後に使用することができます。"
    },
    {
      "indent": 0,
      "text": "1.1. Definitions",
      "section_title": true,
      "ja": "1.1. 定義"
    },
    {
      "indent": 3,
      "text": "Familiarity with the following specifications is assumed:",
      "ja": "以下の仕様に精通していることが想定されます。"
    },
    {
      "indent": 3,
      "text": "o \"Using Cryptographic Message Syntax (CMS) to Protect Firmware Packages\" [RFC4108]",
      "ja": "O「ファームウェアパッケージを保護するために暗号メッセージ構文（CMS）の使用」[RFC4108]"
    },
    {
      "indent": 3,
      "text": "o \"Certificate Management over CMS (CMC)\" [RFC5272]",
      "ja": "O \"CMSオーバー証明書の管理（CMC）\" [RFC5272]"
    },
    {
      "indent": 3,
      "text": "o \"Cryptographic Message Syntax (CMS) Encrypted Key Package Content Type\" [RFC6032]",
      "ja": "O「暗号メッセージ構文（CMS）暗号化されたキーパッケージのコンテンツタイプ」[RFC6032]"
    },
    {
      "indent": 3,
      "text": "o \"Cryptographic Message Syntax (CMS)\" [RFC5652]",
      "ja": "O \"暗号メッセージ構文（CMS）\" [RFC5652]"
    },
    {
      "indent": 3,
      "text": "o \"Additional New ASN.1 Modules for the Cryptographic Message Syntax (CMS) and the Public Key Infrastructure Using X.509 (PKIX)\" [RFC6268]",
      "ja": "O「暗号メッセージ構文（CMS）とX.509を使用した公開鍵基盤（PKIX）のための追加の新しいASN.1モジュール」[RFC6268]"
    },
    {
      "indent": 3,
      "text": "o \"Trust Anchor Management Protocol (TAMP)\" [RFC5934]",
      "ja": "O \"トラストアンカー管理プロトコル（TAMP）\" [RFC5934]"
    },
    {
      "indent": 3,
      "text": "o \"Cryptographic Message Syntax (CMS) Content Constraints Extension\" [RFC6010]",
      "ja": "O \"暗号メッセージ構文（CMS）コンテンツ制約拡張\" [RFC6010]"
    },
    {
      "indent": 3,
      "text": "o \"Cryptographic Message Syntax (CMS) Symmetric Key Package Content Type\" [RFC6031]",
      "ja": "O「暗号メッセージ構文（CMS）対称鍵パッケージのコンテンツタイプ」[RFC6031]"
    },
    {
      "indent": 3,
      "text": "o \"Enrollment over Secure Transport\" [RFC7030]",
      "ja": "O「セキュアなトランスポート上で登録」[RFC7030]"
    },
    {
      "indent": 3,
      "text": "o \"Cryptographic Message Syntax (CMS) Key Package Receipt and Error Content Types\" [RFC7191]",
      "ja": "O「暗号メッセージ構文（CMS）鍵パッケージの領収書とエラーコンテンツタイプ」[RFC7191]"
    },
    {
      "indent": 3,
      "text": "Also, familiarity with the CMS protecting content types signed-data and encrypted-data [RFC5652] is assumed. The CMS encrypted key package is defined in [RFC6032].",
      "ja": "また、CMS保護コンテンツタイプ符号付きデータと暗号化データ[RFC5652]に精通が仮定されます。 CMS暗号化キーパッケージは、[RFC6032]で定義されています。"
    },
    {
      "indent": 3,
      "text": "In addition to the definitions found in [RFC7030], the following definitions are used in this document:",
      "ja": "[RFC7030]に見出される定義に加えて、以下の定義が本文書で使用されています。"
    },
    {
      "indent": 3,
      "text": "Agent: An entity that performs functions on behalf of a client. Agents can service a) one or more clients on the same network as the server, b) clients on non-IP-based networks, or c) clients that have a non-electronic air gap [RFC4949] between themselves and the server. Interactions between the agent and client in the last two cases are beyond the scope of this document. Before an agent can service clients, the agent must have a trust relationship with the server (i.e., be authorized to act on behalf of clients).",
      "ja": "エージェント：クライアントに代わって機能を実行するエンティティ。エージェントがサーバと同じネットワーク上に）1つまたは複数のクライアントにサービスを提供することができ、b）は、自身とサーバとの間の非電子空隙[RFC4949]を有する非IPベースのネットワーク、またはc）クライアント上のクライアント。最後の2つの場合に、エージェントとクライアントの間の相互作用は、このドキュメントの範囲を超えています。エージェントがクライアントにサービスを提供する前に、エージェントが（つまり、クライアントに代わって行動する権限をする）サーバとの信頼関係を持っている必要があります。"
    },
    {
      "indent": 3,
      "text": "Client: A device that ultimately consumes and uses the packages to enable communications. In other words, the client is the endpoint for the packages, and an agent may have one or more clients. To avoid confusion, this document henceforth uses the term \"client\" to refer to both agents and clients.",
      "ja": "クライアント：最終的に消費し、通信を可能にするために、パッケージを使用するデバイス。言い換えれば、クライアントは、パッケージのエンドポイントで、エージェントは、1つまたは複数のクライアントを有することができます。混乱を避けるために、このドキュメントでは、今後のエージェントとクライアントの両方を参照するために、「クライアント」という用語を使用しています。"
    },
    {
      "indent": 3,
      "text": "Package: An object that contains one or more content types. There are numerous types of packages, e.g., packages for asymmetric keys, symmetric keys, encrypted keys, CRLs, firmware, and TAMP. See Section 2.1.1. All of these packages are digitally signed by their creator and encapsulated in a CMS signed-data [RFC5652] [RFC6268] (except the public key certificates and CRLs that are already digitally signed by a CA): firmware receipts and errors; TAMP responses, confirms, and errors; and \"key package\" receipts and errors that can be optionally signed. Certificates and CRLs are included in a package that uses signed-data, which is often referred to as a \"degenerate CMS\", or as a \"certs-only\" [RFC5751] [RFC6268] or \"crls-only\" message (see Section 4.2), but no signature or content is present -- hence the names \"certs-only\" and \"crls-only\".",
      "ja": "パッケージ：1つまたは複数のコンテンツタイプを含むオブジェクト。パッケージの数多くの種類があり、例えば、非対称鍵、対称鍵、暗号化キー、CRLに、ファームウェア、およびTAMPのためのパッケージ。 2.1.1項を参照してください。これらのパッケージのすべてがデジタルでその作成者によって署名され、（すでにデジタルCAによって署名された公開鍵証明書とCRLを除く）CMS署名データ[RFC5652] [RFC6268]の中にカプセル化されている：ファームウェアの領収書とエラーを。応答、確認、およびエラーを突き固め、必要に応じて署名することができ、「キーパッケージ」の領収書とエラー。証明書とCRLは、しばしば「CMS縮重」と呼ばれる署名されたデータを使用してパッケージに含まれる、または「本命のみ」[RFC5751]、[RFC6268]として、または「のCRLのみ」メッセージ（章を参照され4.2）、ない署名やコンテンツが存在しない - 従って名「本命のみ」および「CRLの専用」。"
    },
    {
      "indent": 6,
      "text": "Note: As per [RFC7030], the creator may or may not be the EST server or the EST CA.",
      "ja": "注意：[RFC7030]を1として、作成者は、またはESTサーバまたはEST CA.であってもなくてもよいです"
    },
    {
      "indent": 0,
      "text": "1.2. Authentication and Authorization",
      "section_title": true,
      "ja": "1.2. 認証と認可"
    },
    {
      "indent": 3,
      "text": "Client and server authentication as well as client and server authorization are as defined in [RFC7030]. The requirements for each are discussed in the \"request\" and \"response\" sections (e.g., Sections 3.1 and 3.2 of this document) of each of the PCs defined herein.",
      "ja": "[RFC7030]で定義されているクライアントとサーバーの認証だけでなく、クライアントとサーバの許可があります。それぞれの要件は、本明細書に定義されたPCのそれぞれの「要求」および「応答」セクション（例えば、セクション3.1およびこの文書の3.2）に記載されています。"
    },
    {
      "indent": 3,
      "text": "The requirements for the TA databases are as specified in [RFC7030] as well.",
      "ja": "同様に、[RFC7030]で指定されたTAデータベースの要件があります。"
    },
    {
      "indent": 0,
      "text": "1.3. TLS Cipher Suites",
      "section_title": true,
      "ja": "1.3.  TLS暗号スイート"
    },
    {
      "indent": 3,
      "text": "TLS (Transport Layer Security) cipher suites and issues associated with them are as defined in [RFC7030].",
      "ja": "[RFC7030]で定義されているTLS（Transport Layer Security）を暗号スイートとそれに関連する問題があります。"
    },
    {
      "indent": 0,
      "text": "1.4. URI Configuration",
      "section_title": true,
      "ja": "1.4.  URIの設定"
    },
    {
      "indent": 3,
      "text": "As specified in Section 3.1 of [RFC7030], the client is configured with sufficient information to form the server URI [RFC3986]. Like EST, this configuration mechanism is beyond the scope of this document.",
      "ja": "[RFC7030]のセクション3.1で指定されるように、クライアントがサーバのURI [RFC3986]を形成するのに十分な情報で構成されています。 ESTと同様に、この構成メカニズムはこのドキュメントの範囲を超えています。"
    },
    {
      "indent": 0,
      "text": "1.5. Message Types",
      "section_title": true,
      "ja": "1.5. メッセージタイプ"
    },
    {
      "indent": 3,
      "text": "This document uses existing media types for the messages as specified by \"Internet X.509 Public Key Infrastructure Operational Protocols: FTP and HTTP\" [RFC2585], \"The application/pkcs10 Media Type\" [RFC5967], and \"Certificate Management over CMS (CMC)\" [RFC5272].",
      "ja": "CMSを超える[RFC2585]、「アプリケーション/ PKCS10メディアタイプ」[RFC5967]、および「証明書の管理（：「FTPとHTTPのインターネットX.509公開鍵インフラストラクチャ運用プロトコル」で指定されたこの文書は、メッセージのために、既存のメディアタイプを使用していますCMC）」[RFC5272]。"
    },
    {
      "indent": 3,
      "text": "For consistency with [RFC5273], each distinct EST message type uses an HTTP Content-Type header with a specific media type.",
      "ja": "[RFC5273]との整合性のために、それぞれ別個のESTメッセージタイプは、特定のメディアタイプのHTTPのContent-Typeヘッダを使用します。"
    },
    {
      "indent": 3,
      "text": "The EST messages, their corresponding media types for each operation, and the sections that provide request and response information are as follows:",
      "ja": "ESTメッセージ、各動作のためのそれらの対応するメディアタイプ、および次のように要求及び応答情報を提供するセクションは次のとおりです。"
    },
    {
      "indent": 1,
      "text": "+-------------------+---------------------------------+---------------+\n| Message type      | Request media type              | Request       |\n|                   | Response media type(s)          | Response      |\n| (per operation)   | Source(s) of types              |               |\n+===================+=================================+===============+\n| Locate Available  | N/A                             | Section 2.2   |\n| Packages          | application/xml or              | Section 2.3   |\n|                   | application/json                |               |\n|                   | [RFC7303] [RFC8259]             |               |\n| /pal              |                                 |               |\n+===================+=================================+===============+\n| Distribute EE     | N/A                             | Section 3.1   |\n| Certificates      | application/pkcs7-mime          | Section 3.2   |\n|                   | [RFC5751]                       |               |\n| /eecerts          |                                 |               |\n+===================+=================================+===============+\n| Distribute CRLs   | N/A                             | Section 4.1   |\n|                   | application/pkcs7-mime          | Section 4.2   |\n|                   | [RFC5751]                       |               |\n| /crls             |                                 |               |\n+===================+=================================+===============+\n| Symmetric Key     | N/A                             | Section 5.1.1 |\n| Distribution      | application/cms                 | Section 5.1.2 |\n|                   | [RFC7193]                       |               |\n| /symmetrickeys    |                                 |               |\n+===================+=================================+===============+\n| Return Symmetric  | application/cms                 | Section 5.2.1 |\n| Key               | N/A                             | Section 5.2.2 |\n| Receipts/Errors   | [RFC7193]                       |               |\n|                   |                                 |               |\n| /symmetrickeys/   |                                 |               |\n|    return         |                                 |               |",
      "raw": true
    },
    {
      "indent": 1,
      "text": "+===================+=================================+===============+\n| Firmware          | N/A                             | Section 6.1.1 |\n| Distribution      | application/cms                 | Section 6.1.2 |\n|                   | [RFC7193]                       |               |\n| /firmware         |                                 |               |\n+===================+=================================+===============+\n| Return Firmware   | application/cms                 | Section 6.2.1 |\n| Receipts/Errors   | N/A                             | Section 6.2.2 |\n|                   | [RFC7193]                       |               |\n| /firmware/return  |                                 |               |\n+===================+=================================+===============+\n| Trust Anchor      | N/A                             | Section 7.1.1 |\n| Management        | application/                    | Section 7.1.2 |\n|                   |   tamp-status-query             |               |\n|                   |   tamp-update                   |               |\n|                   |   tamp-apex-update              |               |\n|                   |   tamp-community-update         |               |\n|                   |   tamp-sequence-adjust          |               |\n|                   | [RFC5934]                       |               |\n| /tamp             |                                 |               |\n+===================+=================================+===============+\n| Return TAMP       | application/                    | Section 7.2.1 |\n| Responses/        |   tamp-status-response          |               |\n| Confirms/         |   tamp-update-confirm           |               |\n| Errors            |   tamp-apex-update-confirm      |               |\n|                   |   tamp-community-update-confirm |               |\n|                   |   tamp-sequence-adjust-confirm  |               |\n|                   |   tamp-error                    |               |\n|                   | N/A                             | Section 7.2.2 |\n|                   | [RFC5934]                       |               |\n| /tamp/return      |                                 |               |\n+===================+=================================+===============+\n| Server-Side Key   | application/pkcs10 with         | Section 8.1   |\n| Generation        | content type attribute          |               |\n|                   | CSR*                            |               |\n|                   | application/cms                 | Section 8.1   |\n| /serverkeygen     | [RFC5967] [RFC7193] [RFC7030]   |               |",
      "raw": true
    },
    {
      "indent": 1,
      "text": "+===================+=================================+===============+\n| Return Asymmetric | application/cms                 | Section 8.2   |\n| Key               | N/A                             | Section 8.2   |\n| Receipts/Errors   | [RFC7193]                       |               |\n|                   |                                 |               |\n| /serverkeygen/    |                                 |               |\n|    return         |                                 |               |\n+===================+=================================+===============+\n| Server-Side Key   | application/pkcs10              | Section 8.3.1 |\n| Generation:       | application/pkcs12              | Section 8.3.2 |\n| PKCS #12          | [RFC5967] [RFC7193] [RFC7030]   |               |\n|                   |                                 |               |\n| /serverkeygen     |                                 |               |\n+===================+=================================+===============+",
      "raw": true
    },
    {
      "indent": 4,
      "text": "* Certificate Signing Request",
      "ja": "*証明書署名要求"
    },
    {
      "indent": 0,
      "text": "1.6. Key Words",
      "section_title": true,
      "ja": "1.6. キーワード"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.",
      "ja": "この文書のキーワード \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", および \"OPTIONAL\" はBCP 14 [RFC2119] [RFC8174]で説明されているように、すべて大文字の場合にのみ解釈されます。"
    },
    {
      "indent": 0,
      "text": "2. Locate Available Packages",
      "section_title": true,
      "ja": "2.利用可能なパッケージを検索します"
    },
    {
      "indent": 3,
      "text": "The PAL (Package Availability List) is either an XML (Extensible Markup Language) [XML] or JSON (JavaScript Object Notation) [RFC8259] object available through the /pal PC, which furnishes the following information to clients:",
      "ja": "：PAL（パッケージ状況リスト）は、XML（拡張マークアップ言語）[XML]またはJSON（JavaScriptオブジェクト表記）[RFC8259]クライアントに以下の情報を供給する/ PAL PC、を介して利用可能なオブジェクトのいずれかであります"
    },
    {
      "indent": 3,
      "text": "o Advertisements for available packages that can be retrieved from the server;",
      "ja": "Oサーバーから取得することができ、利用可能なパッケージのための広告。"
    },
    {
      "indent": 3,
      "text": "o Notifications to begin public key certificate management or to return package receipts and errors; and",
      "ja": "O通知は、公開鍵証明書の管理を開始するか、パッケージの領収書とエラーを返すように。そして"
    },
    {
      "indent": 3,
      "text": "o Advertisement for another PAL.",
      "ja": "別のPAL用O広告。"
    },
    {
      "indent": 3,
      "text": "After being configured (see Section 1.4), the client can use this service to retrieve its PAL (see Section 2.1), which, if properly constructed (see Section 2.3), allows the client to determine some or all of the security-related packages needed for bootstrapping. Each PAL entry refers to other PCs (as defined in this document and in [RFC7030]) that clients use to a) retrieve packages that are available to them (e.g., CA certificates, firmware, trust anchors, symmetric keys, and asymmetric keys) or b) receive notifications to initiate public key certificate enrollment. PAL entries can also be used to notify clients that they are to return receipts or errors for certain packages (see Section 2.1.1). Placing these entries after entries that clients used to retrieve the packages is the same as requesting receipts in the originally distributed package. Figure 1 provides a ladder diagram for the /pal PC protocol flow. Appendix A provides a detailed example.",
      "ja": "設定された後、クライアントが適切に構築された場合（2.3節を参照）、、、クライアントは、セキュリティ関連パッケージの一部またはすべてを決定することができます（2.1節参照）そのPALを取得するには、このサービスを使用することができ、（セクション1.4を参照してください）ブートストラップのために必要。各PALエントリは、それらに利用可能なパッケージ（例えば、CA証明書、ファームウェア、トラストアンカー、対称鍵、および非対称鍵）を取得）クライアントの目的で使用すること（この文書でと[RFC7030]で定義されている）他のPCを指し、またはb）の公開鍵証明書の登録を開始するための通知を受け取ります。 PALエントリはまた、彼らは特定のパッケージ（2.1.1項を参照）のために領収書またはエラーを返すようにしているクライアントに通知するために使用することができます。クライアントがパッケージを取得するために使用されるエントリの後にこれらのエントリを配置すると、本来は配布されたパッケージに領収書を要求すると同じです。図1は、/ PAL PCプロトコルフローのためのラダー図を提供します。付録Aには、詳細な例を提供します。"
    },
    {
      "indent": 17,
      "text": "          |                      |\nClient    |     Establish TLS    |    Server\n          |        Session       |\n          |<-------------------->|\n          |                      |\n          |          Request PAL |\n          |   (HTTP GET Request) |\n          |--------------------->|\n          |<---------------------|\n          | Deliver PAL          |\n          | (HTTP GET Response)  |\n          |                      |\n          | Request package by   |\n          | specified URI        |\n          | (HTTP GET or POST    |\n          |  Request)            |\n          |--------------------->|\n          |<---------------------|\n          | Deliver requested    |\n          | CMS package product  |\n          | (HTTP GET or POST    |\n          |  Response)           |\n          |                      |",
      "raw": true
    },
    {
      "indent": 29,
      "text": "Repeat as necessary.",
      "ja": "必要に応じて繰り返します。"
    },
    {
      "indent": 22,
      "text": "Figure 1: /pal Message Sequence",
      "ja": "図1：/ PALメッセージシーケンス"
    },
    {
      "indent": 3,
      "text": "PALs are designed to support an arbitrary number of entries, but for PALs that need to be divided for any reason, there is a special PAL entry type that constitutes a collection of \"PAL package types\". Package type 0001 (\"Additional PAL value present\") refers to another PAL. See Sections 2.1 and 2.1.1. If present, the 0001 package type is always last because other entries after it are ignored. Also, in order to avoid needlessly dereferencing URIs, the 0001 package type cannot be the only PAL entry. In addition to using the PAL during bootstrapping, clients can be configured to periodically poll the server to determine if updated packages are available for them. Note that the mechanism to configure how often clients poll the server is beyond the scope of this document. However, there are some services that support indicating when a client should retry its request (e.g., simple enrollment and re-enroll responses include the Retry-After header [RFC7030]).",
      "ja": "PALは、エントリの任意の数をサポートするために設計されていますが、何らかの理由で分割する必要があるのPALのために、「PALパッケージタイプ」のコレクションを構成する特別なPALエントリタイプがあります。パッケージタイプ0001（「現在追加PAL値」）は、別のPALを指します。セクション2.1と2.1.1を参照してください。存在する場合はそれが無視され、他のエントリの後にあるため、0001パッケージタイプは常に最後です。また、不逆参照URIを避けるために、0001パッケージタイプはPALエントリーすることはできません。ブートストラップ時にPALを使用することに加えて、クライアントが定期的に更新されたパッケージは、彼らのために利用可能であるかどうかを判断するためにサーバーをポーリングするように構成することができます。クライアントがサーバーをポーリングする頻度を設定するメカニズムは、このドキュメントの範囲を超えていることに注意してください。しかし、クライアントが要求を再試行すべきであるときを示すサポートするいくつかのサービスがある（例えば、簡単な登録および再登録応答は、再試行の後ヘッダ[RFC7030]を含みます）。"
    },
    {
      "indent": 3,
      "text": "As noted earlier, the PAL supports two variants: XML and JSON. Clients include the HTTP Accept header [RFC7231] when they connect to the server to indicate whether they support XML or JSON.",
      "ja": "XMLとJSON：先に述べたように、PALは二つの変種をサポートしています。クライアントは、彼らはXMLやJSONをサポートするかどうかを示すために、サーバに接続したときにHTTPヘッダー[RFC7231]をそのまま使用しています。"
    },
    {
      "indent": 3,
      "text": "The client MUST authenticate the server as specified in [RFC7030], and the client MUST check the server's authorization as specified in [RFC7030].",
      "ja": "[RFC7030]で指定されたクライアントはサーバを認証しなければならない、と[RFC7030]で指定されたクライアントは、サーバの許可をチェックしなければなりません。"
    },
    {
      "indent": 3,
      "text": "The server MUST authenticate the client as specified in [RFC7030], and the server MUST check the client's authorization as specified in [RFC7030].",
      "ja": "[RFC7030]で指定されたサーバーは、クライアントを認証しなければならない、と[RFC7030]で指定されたサーバーは、クライアントの許可をチェックしなければなりません。"
    },
    {
      "indent": 3,
      "text": "PAL support is OPTIONAL. It is shown in figures throughout this document, but clients need not support the PAL to access services offered by the server.",
      "ja": "PALサポートはオプションです。それは、この文書全体図に示されているが、クライアントは、サーバによって提供されるサービスにアクセスするためにPALをサポートする必要はありません。"
    },
    {
      "indent": 0,
      "text": "2.1. PAL Format",
      "section_title": true,
      "ja": "2.1.  PALフォーマット"
    },
    {
      "indent": 3,
      "text": "Each PAL is composed of zero or more entries. Each entry is composed of four fields -- type, date, size, and info -- whose semantics follow:",
      "ja": "各PALは、ゼロ以上のエントリで構成されています。タイプ、日付、サイズ、および情報 -   - 各エントリは、4つのフィールドで構成され、その意味論は、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "Note: Both XML elements and JSON values are described below. XML elements are enclosed in angle brackets (<>), and JSON values are enclosed in single quotes (''). When described together, they are enclosed in square brackets ([]) separated by a vertical bar (|).",
      "ja": "注：XML要素とJSON値の両方は、以下に記載されています。 XML要素は、角括弧で囲まれている（<>）、およびJSON値が（「」）は、単一引用符で囲まれています。 （|）を一緒に説明するとき、それらは、垂直バーによって分離された大括弧（[]）で囲まれています。"
    },
    {
      "indent": 3,
      "text": "o [<type> | 'type'] uniquely identifies each package that a client may retrieve from the server with a 4-digit string. [<type> | 'type'] MUST be present. The PAL package types are defined in Section 2.1.1.",
      "ja": "O [<タイプ> | 「タイプ」]一意クライアントは4桁の文字列でサーバから取り出すことができる各パッケージを識別する。 [<タイプ> | 「タイプ」]は存在しなければなりません。 PALのパッケージタイプは、2.1.1項で定義されています。"
    },
    {
      "indent": 3,
      "text": "o [<date> | 'date'] indicates one of the following:",
      "ja": "O [<日時> | 「日付」]は、次のいずれかを示します。"
    },
    {
      "indent": 6,
      "text": "* The date and time that the client last successfully downloaded the identified package from the server. [<date> | 'date'] MUST be represented as Generalized Time with 20 characters: YYYY-MM-DDTHH:MM:SSZ; <date> matches the dateTime production in \"canonical representation\" [XMLSCHEMA]; 'date' is a string. Implementations SHOULD NOT rely on time resolution finer than seconds and MUST NOT generate time instants that specify leap seconds.",
      "ja": "*クライアントが正常に続くことを日付と時刻は、サーバから特定のパッケージをダウンロードしました。 [<日> | YYYY-MM-DDTHH：MM： '日付']は20個の文字を一般化時間として表現されなければならないSSZ。 <日付> [XMLSCHEMA]「正規表現」の日時生産と一致します。 「日付」は文字列です。実装は秒よりも時間分解能の細かいに依存すべきではないとうるう秒を指定する時刻を生成してはなりません。"
    },
    {
      "indent": 6,
      "text": "* The omission of [<date> | 'date'] indicates the following:",
      "ja": "* [<日付>の省略| 「日付」]は次のことを示します。"
    },
    {
      "indent": 9,
      "text": "- There is no indication that the client has successfully downloaded the identified package, or",
      "ja": " - クライアントが正常に識別されたパッケージをダウンロードし、またはしているという兆候はありません"
    },
    {
      "indent": 9,
      "text": "- The PAL entry corresponds to a pointer to the next PAL, or the server is requesting a package from the client (e.g., certification request, receipt, error).",
      "ja": " -  PALエントリは、次のPALへのポインタに対応する、またはサーバは、クライアント（例えば、認証要求、受信、エラー）からパッケージを要求しています。"
    },
    {
      "indent": 3,
      "text": "o [<size> | 'size'] indicates the size in bytes of the package; <size> is a nonNegativeInteger, and 'size' is a number. A package size of zero (i.e., \"0\" without the quotes) indicates that the client needs to begin a transaction, return an error, or return a receipt. [<size> | 'size'] MUST be present.",
      "ja": "O [<サイズ> | 「サイズは」]パッケージのサイズをバイト単位で示します。 <サイズ> NonNegativeIntegerのである、と 'size' は数値です。ゼロ（引用符すなわち、「0」）のパッケージサイズは、クライアントは、トランザクションを開始し、エラーを返す、または領収書を返す必要があることを示しています。 [<サイズ> | 「サイズ」は、本なければなりません。"
    },
    {
      "indent": 3,
      "text": "o [<info> | 'info'] provides an SKI (Subject Key Identifier), a DN (Distinguished Name), an Issuer and Serial Number tuple, or a URI, i.e., it is a choice between these four items, all of which are defined in [RFC5280]. When a URI [RFC3986] is included, [<uri> | 'uri'] indicates the location where the identified package can be retrieved. When a DN, an SKI, or an Issuer Name and Serial Number tuple is included, it points to a certificate that is the subject of the notification (i.e., the certificate to be rekeyed or renewed); [<dn> | 'dn'] is encoded as a string with the format defined in [RFC4514]; <ski> is a hexBinary, and 'ski' is a string of hex digits (i.e., 0-9, a-f, and A-F); [<iasn> | 'iasn'] includes both [<issuer> | 'issuer'] and [<serial> | 'serial'] as a complexType in XML and an object in JSON. [<issuer> | 'issuer'] is a DN encoded as a string with the format defined in [RFC4514]; <serial> is a positiveInteger, and 'serial' is a number. [<info> | 'info'] MUST be present, and [<info> | 'info'] MUST include exactly one [<dn> | 'dn'], [<ski> | 'ski'], [<iasn> | 'iasn'], or [<uri> | 'uri'].",
      "ja": "O [<インフォメーション> | 「情報は」]すなわちSKI（サブジェクト鍵識別子）、DN（識別名）、発行者およびシリアル番号の組、またはURIを提供し、それは[RFC5280で定義されているすべてが、これらの4つの項目間の選択であります]。 URI [RFC3986]が含まれている、[<URI> | 「URI」は】識別されたパッケージを取り出すことができる場所を示します。 DN、SKI、又は発行者名とシリアル番号の組が含まれている場合には、通知の対象となる証明書を指す（すなわち、証明書がリキーまたは更新されます）。 [<DN> | 「dnは」] [RFC4514]で定義された形式の文字列として符号化されます。 <スキー>のhexBinaryであり、 'スキー' 進数字の列（すなわち、0-9、-F、およびA-F）です。 [<iasn> | 'iasn'] [<発行者>の両方を含んでいます| 「発行者]と[<シリアル> | XMLでのcomplexTypeとJSONにオブジェクトとして]「シリアル」。 [<発行者> | 「発行者は」] [RFC4514]で定義された形式の文字列として符号化されたDNです。 <シリアル> POSITIVEINTEGERで、「シリアル」番号です。 [<インフォメーション> | 「情報」本でなければならない、と[<インフォメーション> | '情報']正確に一つの[<DN>を含まなければなりません| 'DN']、[<スキー> | 'スキー']、[<iasn> | 'iasn']、または[<URI> | 'URI']。"
    },
    {
      "indent": 3,
      "text": "Clients are often limited by the size of objects they can consume; the PAL is not immune to these limitations. As opposed to picking a limit for all clients, a special package type (0001) is defined (see Section 2.1.1) to indicate that another PAL is available. Servers can use this value to limit the size of the PALs provided to clients. The mechanism for servers to know client PAL size limits is beyond the scope of this document; one possible solution is through provisioned information.",
      "ja": "クライアントは、多くの場合、彼らが消費することができ、オブジェクトのサイズによって制限されています。 PALは、これらの制限の影響を受けません。すべてのクライアントの制限を選ぶとは対照的に、特殊なパッケージタイプ（0001）は、別のPALが利用可能であることを示すために、（2.1.1項を参照）が定義されています。サーバはクライアントに提供のPALのサイズを制限するために、この値を使用することができます。サーバはクライアントPALサイズの限界を知っているようにするための機構は、このドキュメントの範囲を超えています。一つの可能​​な解決策は、プロビジョニングされた情報を使用することです。"
    },
    {
      "indent": 0,
      "text": "2.1.1. PAL Package Types",
      "section_title": true,
      "ja": "2.1.1.  PALパッケージタイプ"
    },
    {
      "indent": 3,
      "text": "Table 1 lists the PAL package types that are defined by this document:",
      "ja": "表1に、このドキュメントによって定義されているPALパッケージタイプ："
    },
    {
      "indent": 3,
      "text": "Package    Package Description\nNumber\n--------   ---------------------------------------------------\n0000       Reserved\n0001       Additional PAL value present\n0002       X.509 CA certificate\n0003       X.509 EE certificate\n0004       X.509 ARL\n0005       X.509 CRL\n0006       Start DS certificate enrollment with CSR attribute\n0007       Start DS certificate enrollment\n0008       DS certificate enrollment (success)\n0009       DS certificate enrollment (failure)\n0010       Start DS certificate re-enrollment\n0011       DS certificate re-enrollment (success)\n0012       DS certificate re-enrollment (failure)\n0013       Start KE certificate enrollment with CSR attribute\n0014       Start KE certificate enrollment\n0015       KE certificate enrollment (success)\n0016       KE certificate enrollment (failure)\n0017       Start KE certificate re-enrollment\n0018       KE certificate re-enrollment (success)\n0019       KE certificate re-enrollment (failure)\n0020       Asymmetric Key Package (PKCS #8)\n0021       Asymmetric Key Package (CMS)\n0022       Asymmetric Key Package (PKCS #12)\n0023       Asymmetric Key Package Receipt or Error\n0024       Symmetric Key Package\n0025       Symmetric Key Package Receipt or Error\n0026       Firmware Package\n0027       Firmware Package Receipt or Error\n0028       TAMP Status Query\n0029       TAMP Status Query Response or Error\n0030       Trust Anchor Update\n0031       Trust Anchor Update Confirm or Error\n0032       Apex Trust Anchor Update\n0033       Apex Trust Anchor Update Confirm or Error\n0034       Community Update\n0035       Community Update Confirm or Error\n0036       Sequence Number Adjust\n0037       Sequence Number Adjust Confirm or Error",
      "raw": true
    },
    {
      "indent": 24,
      "text": "Table 1: PAL Package Types",
      "ja": "表1：PALパッケージタイプ"
    },
    {
      "indent": 3,
      "text": "Note: \"CSR\" is Certificate Signing Request, \"DS\" is Digital Signature, and \"KE\" is Key Establishment.",
      "ja": "注意：「CSRは、」証明書署名要求で、「DSは、」デジタル署名され、そして「KEは、」キーの確立です。"
    },
    {
      "indent": 3,
      "text": "PAL package types are essentially hints about the type of package the client is about to retrieve or is asked to return. Savvy clients can parse the packages to determine what has been provided, but in some instances it is better to know before retrieving the package. The hint provided here does not obviate the need for clients to check the type of package provided before they store it, possibly in specially allocated locations (i.e., some clients might store Root ARLs separately from intermediate CRLs). For packages provided by the client, the server is asking the client to provide an enrollment package, receipt, response, confirm, or error.",
      "ja": "PALパッケージタイプは、基本的に、クライアントが取得しようとしているかを返すように求めているパッケージの種類についてのヒントです。精通したクライアントが提供されているかを決定するためにパッケージを解析することができますが、いくつかの例では、パッケージを取得する前に知っておくほうがよいです。クライアントが特別に割り当てられた場所（すなわち、いくつかのクライアントは、中間のCRLは別にルートARLs保存するかもしれません）で、おそらく、彼らはそれを保存する前に提供パッケージの種類をチェックするためにここに提供ヒントは、必要性を除去しません。クライアントが提供するパッケージの場合、サーバーは、登録パッケージ、領収書、応答、確認、またはエラーを提供するために、クライアントを求めています。"
    },
    {
      "indent": 3,
      "text": "The PAL package types have the following meanings:",
      "ja": "PALパッケージタイプの意味は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "Note: The semantics behind Codes 0002 and 0006-0021 are defined in [RFC7030].",
      "ja": "注意：コード0002と0006から0021の背後にある意味は[RFC7030]で定義されています。"
    },
    {
      "indent": 3,
      "text": "0000 Reserved: Reserved for future use.",
      "ja": "0000予約：将来の使用のために予約されています。"
    },
    {
      "indent": 3,
      "text": "0001 Additional PAL value present: Indicates that this PAL entry refers to another PAL by referring to another /pal URI, which is defined in this section. This PAL package type limits the size of PALs to a more manageable size for clients. If this PAL package type appears, it MUST be the last entry in the PAL.",
      "ja": "0001追加PAL値現在このPALエントリは、このセクションで定義されている別の/ PAL URIを参照することによって別のPALを指すことを示します。このPALパッケージタイプは、クライアントのために、より扱いやすいサイズにのPALのサイズを制限します。このPALパッケージタイプが表示された場合、それがPALの最後のエントリでなければなりません。"
    },
    {
      "indent": 8,
      "text": "Additionally, in order to avoid needlessly dereferencing URIs,\nthis PAL package type MUST NOT be the only entry.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "0002 X.509 CA certificate: Indicates that one or more CA certificates [RFC5280] are available for the client by pointing to a /cacerts URI, which is defined in [RFC7030].",
      "ja": "0002 X.509 CA証明書は：一つ以上のCA証明書[RFC5280]を指して、クライアントのために利用可能であることを示し/ [RFC7030]で定義されているURIは、のcacerts。"
    },
    {
      "indent": 3,
      "text": "0003 X.509 EE certificate: Indicates that one or more EE certificates [RFC5280] are available for the client by pointing to an /eecerts URI, which is defined in Section 3.",
      "ja": "0003 X.509 EE証明書：セクション3で定義されているURIを、eecerts一つ以上のEE証明書[RFC5280]は/を指すことによって、クライアントのために利用可能であることを示します。"
    },
    {
      "indent": 3,
      "text": "0004 X.509 ARL: Indicates that one or more ARLs (Authority Revocation Lists) [RFC5280] are available for the client by pointing to a /crls URI, which is defined in Section 4.",
      "ja": "0004 X.509のARLは：一つ以上のARLs（機関失効リスト）[RFC5280]はセクション4で定義されている/ CRLのURI、を指し示すことによって、クライアントのために利用可能であることを示します。"
    },
    {
      "indent": 3,
      "text": "0005 X.509 CRL: Indicates that one or more CRLs (Certificate Revocation Lists) [RFC5280] are available for the client by pointing to a /crls URI, which is defined in Section 4.",
      "ja": "0005 X.509 CRLは：一の以上のCRL（証明書失効リスト）[RFC5280]はセクション4で定義されている/ CRLのURI、をポイントして、クライアントのために利用可能であることを示します。"
    },
    {
      "indent": 3,
      "text": "Note: See Section 9 for additional information about PAL and certificate enrollment interaction. See Appendix B for additional informative information.",
      "ja": "注：PALおよび証明書登録の相互作用に関する追加情報については、セクション9を参照してください。追加の有益な情報については、付録Bを参照してください。"
    },
    {
      "indent": 3,
      "text": "0006 Start DS certificate enrollment with CSR: Indicates that the client needs to begin enrolling its DS certificate (i.e., any certificate for which the key usage extension will have a digital signature set), using a template provided by the server with a CSR (Certificate Signing Request) attribute (see Appendix B). The PAL entry points to a /csrattrs URI, which is defined in [RFC7030].",
      "ja": "CSRと0006スタートDSの証明書登録は：CSR（証明書を使用したサーバーによって提供されるテンプレートを使用して、（すなわち、すべての証明書の鍵用途拡張は、デジタル署名が設定されているなるために）クライアントがDSの証明書の登録を開始する必要があることを示しますリクエスト）属性を署名（）付録Bを参照してください。 PALエントリポイントに/ [RFC7030]で定義されているURIは、csrattrs。"
    },
    {
      "indent": 3,
      "text": "0007 Start DS certificate enrollment: Indicates that the client needs to begin enrolling its DS certificate. The PAL entry points to a /simpleenroll URI, which is defined in [RFC7030].",
      "ja": "0007スタートDSの証明書登録：クライアントはそのDSの証明書の登録を開始する必要があることを示します。 / PALへのエントリポイントは、[RFC7030]で定義されたURIを、simpleenroll。"
    },
    {
      "indent": 3,
      "text": "0008 DS certificate enrollment (success): Indicates that the client needs to retrieve a successful certification response. The PAL entry points to a /simpleenroll or a /fullcmc URI, both of which are defined in [RFC7030].",
      "ja": "0008 DSの証明書登録（成功）：クライアントが成功した認証応答を取得する必要があることを示します。 [RFC7030]で定義されている両方とも/ simpleenroll又はURI fullcmc / PALへのエントリポイント、。"
    },
    {
      "indent": 3,
      "text": "0009 DS certificate enrollment (failure): Indicates that the client needs to retrieve a failed certification response for a DS certificate. This PAL entry points to a /simpleenroll or a /fullcmc URI.",
      "ja": "0009 DSの証明書登録（失敗）：クライアントがDSの証明のための失敗した認証応答を取得する必要があることを示します。 / simpleenrollまたはURI fullcmc /このPALのエントリポイント。"
    },
    {
      "indent": 3,
      "text": "0010 Start DS certificate re-enrollment: Indicates that the client needs to rekey or renew a DS certificate. The PAL entry points to a /simplereenroll or a /fullcmc URI.",
      "ja": "0010スタートDSの証明書の再登録は、クライアントがリキーまたはDSの証明書を更新する必要があることを示します。 / simplereenrollまたはURI fullcmc / PALへのエントリポイント。"
    },
    {
      "indent": 3,
      "text": "0011 DS certificate re-enrollment (success): See PAL package type 0008.",
      "ja": "0011 DSの証明書の再登録（成功）：PALパッケージタイプ0008を参照してください。"
    },
    {
      "indent": 3,
      "text": "0012 DS certificate re-enrollment (failure): See PAL package type 0009.",
      "ja": "0012 DSの証明書の再登録（失敗）：PALパッケージタイプ0009を参照してください。"
    },
    {
      "indent": 3,
      "text": "Note: The KE (Key Establishment) responses that follow use the same URIs as DS certificates, except that the certificates' key usage extension is set to only key agreement or key transport.",
      "ja": "注意：証明書鍵用途拡張が唯一のキー契約またはキートランスポートに設定されていることを除いて、DSの証明書と同じURIを使用従うKE（鍵確立）応答を。"
    },
    {
      "indent": 3,
      "text": "0013 Start KE certificate enrollment with CSR: See PAL package type 0006.",
      "ja": "CSRと0013スタートKE証明書登録：PALパッケージタイプ0006を参照してください。"
    },
    {
      "indent": 3,
      "text": "0014 Start KE certificate enrollment: See PAL package type 0007.",
      "ja": "0014スタートKE証明書登録：PALパッケージタイプ0007を参照してください。"
    },
    {
      "indent": 3,
      "text": "0015 KE certificate enrollment (success): See PAL package type 0008.",
      "ja": "0015 KEの証明書登録（成功）：PALパッケージタイプ0008を参照してください。"
    },
    {
      "indent": 3,
      "text": "0016 KE certificate enrollment (failure): See PAL package type 0009.",
      "ja": "0016 KEの証明書登録（失敗）：PALパッケージタイプ0009を参照してください。"
    },
    {
      "indent": 3,
      "text": "0017 Start KE certificate re-enrollment: See PAL package type 0010.",
      "ja": "0017スタートKE証明書再登録：PALパッケージタイプ0010を参照してください。"
    },
    {
      "indent": 3,
      "text": "0018 KE certificate re-enrollment (success): See PAL package type 0008.",
      "ja": "0018 KE証明書再登録（成功）：PALパッケージタイプ0008を参照してください。"
    },
    {
      "indent": 3,
      "text": "0019 KE certificate re-enrollment (failure): See PAL package type 0009.",
      "ja": "0019 KE証明書再登録（失敗）：PALパッケージタイプ0009を参照してください。"
    },
    {
      "indent": 3,
      "text": "Note: The variations in the asymmetric key packages are due to the number of CMS content types that can be used to protect the asymmetric key; the syntax for the asymmetric key is the same, but additional ASN.1 is needed to include it in a signed-data (i.e., the ASN.1 needs to be a CMS content type and not the private key info type). See Section 8 of this document for additional information.",
      "ja": "注：非対称キーパッケージの変動は非対称キーを保護するために使用することができますCMSのコンテンツ・タイプの数によるものです。非対称キーの構文は同じですが、追加ASN.1が署名データに含める必要がある（すなわち、ASN.1はCMSのコンテンツタイプではなく、秘密鍵情報タイプにする必要があります）。詳細については、このドキュメントのセクション8を参照してください。"
    },
    {
      "indent": 3,
      "text": "0020 Asymmetric Key Package (PKCS #8): Indicates that an asymmetric key generated by the server is available for the client; the package is an asymmetric key without additional encryption as specified in Section 4.4.2 of [RFC7030]. The PAL entry points to a /serverkeygen or a /fullcmc URI, which are defined in [RFC7030].",
      "ja": "0020非対称鍵パッケージ（PKCS＃8）：サーバーによって生成された非対称キーは、クライアントのために利用可能であることを示します。 [RFC7030]のセクション4.4.2で指定されたパッケージには、追加の暗号化なしの非対称鍵です。 [RFC7030]で定義されているURI、fullcmc / serverkeygen又は/ PALへのエントリポイント。"
    },
    {
      "indent": 3,
      "text": "0021 Asymmetric Key Package (CMS): See PAL package type 0020 (the difference being that the package available is an asymmetric key package [RFC5958] that is signed and encapsulated in a signed-data content type, as specified in Section 4.4.2 of [RFC7030]). Also, see Section 8.1 of this document.",
      "ja": "0021非対称キーパッケージ（CMS）：PALパッケージタイプ0020（利用可能なパッケージは、非対称鍵パッケージのセクション4.4.2で指定されるように、署名されたデータのコンテンツタイプに署名され、カプセル化されている[RFC5958]であることである差を見ます[RFC7030]）。また、このドキュメントのセクション8.1を参照してください。"
    },
    {
      "indent": 3,
      "text": "0022 Asymmetric Key Package (PKCS #12): See PAL package type 0020 (the difference being that the package available is the PKCS #12 [RFC7292] content type). See Section 8.3 of this document.",
      "ja": "0022非対称鍵パッケージ（PKCS＃12）：PALパッケージタイプ0020（利用可能なパッケージは、PKCS＃12 [RFC7292]コンテンツタイプであるということで差）を参照してください。このドキュメントのセクション8.3を参照してください。"
    },
    {
      "indent": 3,
      "text": "0023 Asymmetric Key Package Receipt or Error: Indicates that the server wants the client to return a key package receipt or error [RFC7191] to the /serverkeygen/return URI, which is defined in Section 8.",
      "ja": "0023非対称鍵パッケージの領収書またはエラー：サーバが/ / serverkeygenにキーパッケージのレシートまたはエラー[RFC7191]を返す第8節で定義されているURIを、返すようにクライアントを望んでいることを示します。"
    },
    {
      "indent": 3,
      "text": "0024 Symmetric Key Package: Indicates that a symmetric key package [RFC6031] is available for the client by pointing to a /symmetrickeys URI, which is defined in Section 5.",
      "ja": "0024対称鍵パッケージ：対称鍵パッケージ[RFC6031]は第5節で定義されている/ symmetrickeys URI、を指すことによって、クライアントのために利用可能であることを示します。"
    },
    {
      "indent": 3,
      "text": "0025 Symmetric Key Package Receipt or Error: Indicates that the server wants the client to return a key package receipt or error [RFC7191] to the /symmetrickeys/return URI, which is defined in Section 5.",
      "ja": "0025対称鍵パッケージの領収書またはエラー：サーバが/ / symmetrickeysにキーパッケージのレシートまたはエラー[RFC7191]を返す第5節で定義されているURIを、返すようにクライアントを望んでいることを示します。"
    },
    {
      "indent": 3,
      "text": "0026 Firmware Package: Indicates that a firmware package [RFC4108] is available for the client, using the /firmware URI, which is defined in Section 6.",
      "ja": "0026ファームウェアパッケージ：第6節で定義されている/ファームウェアURIを使用して、ファームウェアパッケージ[RFC4108]は、クライアントのために利用可能であることを示します。"
    },
    {
      "indent": 3,
      "text": "0027 Firmware Package Receipt or Error: Indicates that the server wants the client to return a firmware package load receipt or error [RFC4108] to the /firmware/return URI, which is defined in Section 6.",
      "ja": "0027ファームウェアパッケージ領収書またはエラー：サーバが/ /ファームウェアにファームウェアパッケージのロード・レシートまたはエラー[RFC4108]を返すセクション6で定義されているURIを、返すようにクライアントを望んでいることを示します。"
    },
    {
      "indent": 3,
      "text": "Note: The /tamp and tamp/return URIs are defined in Section 7.",
      "ja": "注意：URIを返す/タンピングとタンピング/ 7節で定義されています。"
    },
    {
      "indent": 3,
      "text": "0028 TAMP Status Query: Indicates that a TAMP Status Query package [RFC5934] is available for the client, using the /tamp URI.",
      "ja": "0028 TAMPステータスクエリ：TAMPステータスクエリーパッケージ[RFC5934]は/タンピングURIを使用して、クライアントのために利用可能であることを示します。"
    },
    {
      "indent": 3,
      "text": "0029 TAMP Status Query Response or Error: Indicates that the server wants the client to return a TAMP Status Query Response or Error [RFC5934] to the /tamp/return URI.",
      "ja": "0029 TAMPステータスクエリ応答またはエラー：サーバーは、クライアントはTAMPステータスクエリ応答またはエラー[RFC5934]を返すように望んでいることを示します/タンプ/ URIを返します。"
    },
    {
      "indent": 3,
      "text": "0030 Trust Anchor Update: Indicates that a Trust Anchor Update package [RFC5934] is available for the client, using the /tamp URI.",
      "ja": "0030トラストアンカー更新：トラストアンカーアップデートパッケージ[RFC5934]は/タンピングURIを使用して、クライアントのために利用可能であることを示します。"
    },
    {
      "indent": 3,
      "text": "0031 Trust Anchor Update Confirm or Error: Indicates that the server wants the client to return a Trust Anchor Update Confirm or Error [RFC5934] to the /tamp/return URI.",
      "ja": "0031トラストアンカーの更新が確認またはエラー：サーバーがトラストアンカー更新確認やエラー[RFC5934]を返すようにクライアントを望んでいることを示します/タンプ/ URIを返します。"
    },
    {
      "indent": 3,
      "text": "0032 Apex Trust Anchor Update: Indicates that an Apex Trust Anchor Update package [RFC5934] is available for the client, using the /tamp URI.",
      "ja": "0032アペックストラストアンカー更新：アペックストラストアンカーアップデートパッケージ[RFC5934]は/タンピングURIを使用して、クライアントのために利用可能であることを示します。"
    },
    {
      "indent": 3,
      "text": "0033 Apex Trust Anchor Update Confirm or Error: Indicates that the server wants the client to return an Apex Trust Anchor Update Confirm or Error [RFC5934] to the /tamp/return URI.",
      "ja": "0033アペックストラストアンカーアップデート確認またはエラー：サーバーがApexのトラストアンカー更新確認やエラー[RFC5934]を返すようにクライアントを望んでいることを示します/タンプ/ URIを返します。"
    },
    {
      "indent": 3,
      "text": "0034 Community Update: Indicates that a Community Update package [RFC5934] is available for the client, using the /tamp URI.",
      "ja": "0034コミュニティ更新：コミュニティアップデートパッケージ[RFC5934]は/タンピングURIを使用して、クライアントのために利用可能であることを示します。"
    },
    {
      "indent": 3,
      "text": "0035 Community Update Confirm or Error: Indicates that the server wants the client to return a Community Update Confirm or Error [RFC5934] to the /tamp/return URI.",
      "ja": "0035コミュニティの更新は確認またはエラー：サーバーは、クライアントが/タンプ/戻るURIにコミュニティ更新の確認やエラー[RFC5934]を返すように望んでいることを示します。"
    },
    {
      "indent": 3,
      "text": "0036 Sequence Number Adjust: Indicates that a Sequence Number Adjust package [RFC5934] is available for the client, using the /tamp URI.",
      "ja": "0036シーケンス番号は調整：シーケンス番号はパッケージ[RFC5934]は/タンピングURIを使用して、クライアントのために利用可能である調整していることを示します。"
    },
    {
      "indent": 3,
      "text": "0037 Sequence Number Adjust Confirm or Error: Indicates that the server wants the client to return a Sequence Number Adjust Confirm or Error [RFC5934] to the /tamp/return URI.",
      "ja": "0037シーケンス番号が確認またはエラーを調整するには：サーバーはシーケンス番号が/タンプ/戻るURIに確認またはエラー[RFC5934]を調整して返すようにクライアントを望んでいることを示します。"
    },
    {
      "indent": 0,
      "text": "2.1.2. PAL XML Schema",
      "section_title": true,
      "ja": "２。１。２。 ぱＬ ＸＭＬ Ｓちぇま"
    },
    {
      "indent": 3,
      "text": "The namespace is specified in Section 11.1. The fields in the schema were discussed earlier, in Sections 2.1 and 2.1.1.",
      "ja": "名前空間は、セクション11.1に指定されています。スキーマ内のフィールドは、セクション2.1および2.1.1で、先に述べました。"
    },
    {
      "indent": 3,
      "text": "<?xml version=\"1.0\" encoding=\"UTF-8\"?> <xsd:schema xmlns:xsd=\"https://www.w3.org/2001/XMLSchema\" xmlns:pal=\"urn:ietf:params:xml:ns:pal\" targetNamespace=\"urn:ietf:params:xml:ns:pal\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\" version=\"1.0\"> <xsd:annotation> <xsd:documentation> This schema defines the types and elements needed to retrieve client packages from the server or for the client to post packages to the server. </xsd:documentation> </xsd:annotation>",
      "ja": "<？xml version = \"1.0\" エンコード= \"UTF-8\"？> <XSD：スキーマのxmlns：XSD = \"https://www.w3.org/2001/XMLSchema\" のxmlns：PAL = \"壷：IETF：のparams ：XML：NS：PAL」のtargetNamespace = \"壷：IETF：のparams：XML：NS：PAL\" のelementFormDefault = \"資格\" attributeFormDefault = \"修飾されていない\" バージョン= \"1.0\"> <のxsd：注釈> <のxsd：ドキュメント>このスキーマサーバーまたはサーバーにパッケージを投稿するクライアントのクライアントパッケージを取得するために必要なタイプと要素を定義します。 </ XSD：ドキュメンテーション> </のxsd：注釈>"
    },
    {
      "indent": 5,
      "text": "<!-- ===== Element Declarations ===== -->",
      "ja": "<！ -  =====要素宣言=====  - >"
    },
    {
      "indent": 5,
      "text": "<xsd:element name=\"pal\" type=\"pal:PAL\" />",
      "ja": "ます。<xsd：要素名= \"PAL\" タイプ= \"PAL：PAL\" />"
    },
    {
      "indent": 5,
      "text": "<!-- ===== Complex Data Element Type Definitions ===== -->",
      "ja": "<！ -  =====複雑なデータ要素タイプの定義=====  - >"
    },
    {
      "indent": 5,
      "text": "<xsd:complexType name=\"PAL\"> <xsd:annotation> <xsd:documentation> This type defines the Package Availability List (PAL). </xsd:documentation> </xsd:annotation> <xsd:sequence> <xsd:element name=\"message\" type=\"pal:PALEntry\" minOccurs=\"0\" maxOccurs=\"unbounded\"> <xsd:annotation> <xsd:documentation> This item contains information about the package and a link that the client uses to download or post the package. </xsd:documentation> </xsd:annotation> </xsd:element> </xsd:sequence> </xsd:complexType>",
      "ja": "<XSD：complexTypeの名前は= \"PAL\"> <のxsd：注釈> <のxsd：ドキュメント>このタイプは、パッケージ状況一覧（PAL）を定義します。 </ XSD：ドキュメント> </ XSD：注釈> <XSD：配列> <XSD：要素名= \"メッセージ\" タイプ= \"PAL：PALEntry\" のminOccurs = \"0\" のmaxOccurs = \"無制限\"> <XSD：注釈> < xsd：ドキュメントは>こちらの商品は、パッケージと、クライアントがパッケージをダウンロードしたり、投稿するために使用するリンクに関する情報が含まれています。 </ XSD：ドキュメンテーション> </のxsd：注釈> </のxsd：element>の</のxsd：sequence>を</のxsd：complexTypeの>"
    },
    {
      "indent": 5,
      "text": "<xsd:complexType name=\"PALEntry\"> <xsd:annotation> <xsd:documentation> This type defines a product in the PAL. </xsd:documentation> </xsd:annotation> <xsd:sequence> <xsd:element name=\"type\" type=\"pal:PackageType\" /> <xsd:element name=\"date\" type=\"pal:GeneralizedTimeType\" minOccurs=\"0\" /> <xsd:element name=\"size\" type=\"xsd:nonNegativeInteger\"> <xsd:annotation> <xsd:documentation> This item indicates the package's size. </xsd:documentation> </xsd:annotation> </xsd:element> <xsd:element name=\"info\" type=\"pal:PackageInfoType\" /> </xsd:sequence> </xsd:complexType>",
      "ja": "<XSD：complexTypeの名= \"PALEntry\"> <のxsd：注釈> <のxsd：ドキュメント>このタイプは、PALで製品を定義します。 </ XSD：ドキュメンテーション> </のxsd：注釈> <のxsd：sequence>を<のxsd：要素名= \"タイプ\" タイプ= \"PAL：PackageType\" /> <XSD：要素名= \"日付\" タイプ= \"PAL：GeneralizedTimeType \"minOccurs属性=\" 0\" /> <XSD：要素名= \"サイズ\" タイプは= \"のxsd：NonNegativeIntegerの\"> <のxsd：注釈> <のxsd：ドキュメント>こちらの商品は、パッケージの大きさを示しています。 </ XSD：ドキュメンテーション> </のxsd：注釈> </のxsd：element>の<のxsd：要素名= \"情報\" タイプ= \"PAL：PackageInfoType\" /> </のxsd：sequence>を</のxsd：complexTypeの>"
    },
    {
      "indent": 5,
      "text": "<xsd:complexType name=\"PackageInfoType\"> <xsd:annotation> <xsd:documentation> This type allows a choice of X.500 Distinguished Name, Subject Key Identifier, Issuer and Serial Number tuple, or URI. </xsd:documentation> </xsd:annotation> <xsd:choice> <xsd:element name=\"dn\" type=\"pal:DistinguishedName\" /> <xsd:element name=\"ski\" type=\"pal:SubjectKeyIdentifier\" /> <xsd:element name=\"iasn\" type=\"pal:IssuerAndSerialNumber\" /> <xsd:element name=\"uri\" type=\"pal:ThisURI\" /> </xsd:choice> </xsd:complexType>",
      "ja": "<XSD：complexTypeの名= \"PackageInfoType\"> <のxsd：注釈> <のxsd：ドキュメント>このタイプは、X.500識別名、サブジェクトキー識別子、発行者およびシリアル番号のタプル、またはURIを選択することができます。 </ XSD：ドキュメンテーション> </のxsd：注釈> <のxsd：選択>ます。<xsd：要素名= \"DN\" タイプ= \"PAL：識別名\" /> <XSD：要素名= \"スキー\" タイプ= \"PAL：SubjectKeyIdentifier \"/> <XSD：要素名=\" iasn」タイプ= \"PAL：IssuerAndSerialNumber\" /> <XSD：要素名= \"URI\" タイプ= \"PAL：ThisURI\" /> </のxsd：選択> </のxsd：complexTypeの>"
    },
    {
      "indent": 5,
      "text": "<xsd:complexType name=\"IssuerAndSerialNumber\"> <xsd:annotation> <xsd:documentation> This type holds the issuer Distinguished Name and serial number of a referenced certificate. </xsd:documentation> </xsd:annotation> <xsd:sequence> <xsd:element name=\"issuer\" type=\"pal:DistinguishedName\" /> <xsd:element name=\"serial\" type=\"xsd:positiveInteger\" /> </xsd:sequence> </xsd:complexType>",
      "ja": "<XSD：complexTypeの名=「IssuerAndSerialNumber」> <のxsd：注釈> <のxsd：ドキュメント>このタイプは、発行者の識別名および参照証明書のシリアル番号を保持しています。 </ XSD：ドキュメント> </ XSD：注釈> <XSD：配列> <XSD：要素名= \"発行者\" タイプ= \"PAL：識別名\" /> <XSD：要素名= \"シリアル\" タイプ= \"XSD：POSITIVEINTEGER \"/> </のxsd：sequence>を</のxsd：complexTypeの>"
    },
    {
      "indent": 5,
      "text": "<!-- ===== Simple Data Element Type Definitions ===== -->",
      "ja": "<！ -  =====単純なデータ要素タイプの定義=====  - >"
    },
    {
      "indent": 5,
      "text": "<xsd:simpleType name=\"PackageType\"> <xsd:annotation> <xsd:documentation> This type identifies each package that a client may retrieve from the server with a 4-digit string. </xsd:documentation> </xsd:annotation> <xsd:restriction base=\"xsd:string\"> <xsd:pattern value=\"d{4}\" /> </xsd:restriction> </xsd:simpleType>",
      "ja": "<XSD：単純型名=「PackageType」> <のxsd：注釈> <のxsd：ドキュメント>このタイプは、クライアントが4桁の文字列を使用してサーバから取得することがあり、各パッケージを識別します。 </ XSD：ドキュメント> </ XSD：注釈> <XSD：制限基地= \"XSD：文字列\"> <XSD：パターン値= \"D {4}\" /> </ XSD：制限> </のxsd：simpleTypeの>"
    },
    {
      "indent": 5,
      "text": "<xsd:simpleType name=\"GeneralizedTimeType\"> <xsd:annotation> <xsd:documentation> This type indicates the date and time (YYYY-MM-DDTHH:MM:SSZ) that the client last acknowledged successful receipt of the package; it is absent if a) there is no indication that the package has been downloaded or b) the PAL entry corresponds to a pointer to the next PAL. </xsd:documentation> </xsd:annotation> <xsd:restriction base=\"xsd:dateTime\"> <xsd:pattern value=\".*:d{2}Z\" /> <xsd:minInclusive value=\"2013-05-23T00:00:00Z\" /> </xsd:restriction> </xsd:simpleType>",
      "ja": "<XSD：単純型名= \"GeneralizedTimeType\"> <のxsd：注釈> <のxsd：ドキュメント>このタイプは、日付と時刻（：MM：YYYY-MM-DDTHH SSZ）を示し、クライアントが最後にパッケージの受信に成功したことを認めたということ。 a）は、パッケージがダウンロードされたという指示が存在しないまたはb）PALエントリは次PALへのポインタに対応する場合、それは存在しません。 </ XSD：ドキュメント> </ XSD：注釈> <XSD：制限基地= \"のxsd：dateTimeの\"> <XSD：パターン値= \"* D：{2} Z\" /> <XSD：のminInclusive値=「2013年-05-23T00：00：00Z」/> </ XSD：制限> </のxsd：simpleTypeの>"
    },
    {
      "indent": 5,
      "text": "<xsd:simpleType name=\"DistinguishedName\"> <xsd:annotation> <xsd:documentation> This type holds an X.500 Distinguished Name. </xsd:documentation> </xsd:annotation> <xsd:restriction base=\"xsd:string\"> <xsd:maxLength value=\"1024\" /> </xsd:restriction> </xsd:simpleType>",
      "ja": "<XSD：単純型名= \"識別名\"> <のxsd：注釈> <のxsd：ドキュメント>このタイプは、X.500識別名を保持しています。 </ XSD：ドキュメント> </ XSD：注釈> <XSD：制限基地= \"XSD：文字列\"> <XSD：maxLengthの値= \"1024\" /> </ XSD：制限> </のxsd：simpleTypeの>"
    },
    {
      "indent": 5,
      "text": "<xsd:simpleType name=\"SubjectKeyIdentifier\"> <xsd:annotation> <xsd:documentation> This type holds a hex string representing the value of a certificate's SubjectKeyIdentifier. </xsd:documentation> </xsd:annotation> <xsd:restriction base=\"xsd:hexBinary\"> <xsd:maxLength value=\"1024\" /> </xsd:restriction> </xsd:simpleType>",
      "ja": "<XSD：単純型名=「SubjectKeyIdentifier」> <のxsd：注釈> <のxsd：ドキュメント>このタイプは、証明書のSubjectKeyIdentifierの値を表す16進文字列を保持しています。 </ XSD：ドキュメント> </ XSD：注釈> <XSD：制限基地= \"XSD：のhexBinary\"> <XSD：maxLengthの値= \"1024\" /> </ XSD：制限> </のxsd：simpleTypeの>"
    },
    {
      "indent": 5,
      "text": "<xsd:simpleType name=\"ThisURI\"> <xsd:annotation> <xsd:documentation> This type holds a URI but is length limited. </xsd:documentation> </xsd:annotation> <xsd:restriction base=\"xsd:anyURI\"> <xsd:maxLength value=\"1024\" /> </xsd:restriction> </xsd:simpleType>",
      "ja": "<XSD：単純型名= \"ThisURI\"> <のxsd：注釈が> <のxsd：ドキュメント>このタイプは、URIを保持しているが、長さが制限されています。 </ XSD：ドキュメント> </ XSD：注釈> <XSD：制限基地= \"のxsd：anyURIの\"> <XSD：maxLengthの値= \"1024\" /> </ XSD：制限> </のxsd：simpleTypeの>"
    },
    {
      "indent": 3,
      "text": "</xsd:schema>",
      "ja": "</ XSD：スキーマ>"
    },
    {
      "indent": 0,
      "text": "2.1.3. PAL JSON Object",
      "section_title": true,
      "ja": "2.1.3.  PAL JSONオブジェクト"
    },
    {
      "indent": 3,
      "text": "The following is an example PAL JSON object. The fields in the object were discussed earlier, in Sections 2.1 and 2.1.1.",
      "ja": "以下は、例えばPAL JSONオブジェクトです。オブジェクト内のフィールドは、セクション2.1および2.1.1で、先に述べました。"
    },
    {
      "indent": 3,
      "text": "[\n  {\n    \"type\": \"0003\",\n    \"date\": \"2016-12-29T09:28:00Z\",\n    \"size\": 1234,\n    \"info\":\n     {\n      \"uri\": \"https://www.example.com/.well-known/est/eecerts/1234\"\n     }\n  },",
      "raw": true
    },
    {
      "indent": 3,
      "text": "  {\n    \"type\": \"0006\",\n    \"date\": \"2016-12-29T09:28:00Z\",\n    \"size\": 1234,\n    \"info\":\n     {\n      \"iasn\":\n       {\n        \"issuer\": \"CN=Sean Turner,O=sn3rd,C=US\",\n        \"serial\": 0\n       }\n     }\n  }\n]",
      "raw": true
    },
    {
      "indent": 0,
      "text": "2.2. Request PAL",
      "section_title": true,
      "ja": "2.2. リクエストPAL"
    },
    {
      "indent": 3,
      "text": "Clients request their PAL with an HTTP GET [RFC7231], using an operation path of \"/pal\". Clients indicate whether they would prefer XML or JSON by including the HTTP Accept header [RFC7231] with either \"application/xml\" or \"application/json\", respectively.",
      "ja": "クライアントは、「/ PAL」の動作パスを使用して、HTTP GET [RFC7231]とのPALを要求します。クライアントはHTTPは、それぞれ、「アプリケーション/ XML」または「アプリケーション/ JSON」のいずれかを有するヘッダ[RFC7231]を受け入れなどによってXMLまたはJSONを好むかどうかを示します。"
    },
    {
      "indent": 0,
      "text": "2.3. Provide PAL",
      "section_title": true,
      "ja": "2.3.  PALを提供"
    },
    {
      "indent": 3,
      "text": "If the server has a PAL for the client, the server response MUST contain an HTTP 200 response code with a Content-Type of \"application/xml\" [RFC7303] or \"application/json\" [RFC8259].",
      "ja": "サーバがクライアントのためにPALを持っている場合は、サーバーの応答は、「アプリケーション/ xmlの」[RFC7303]または「アプリケーション/ jsonの」[RFC8259]のコンテンツタイプとHTTP 200応答コードを含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "When the server constructs a PAL, an order of precedence for PAL offerings is based on the following rationale:",
      "ja": "サーバはPALを構築する場合、PALの提供のための優先順位は以下の根拠に基づいています。"
    },
    {
      "indent": 3,
      "text": "o /cacerts and /crls packages are the most important because they support validation decisions on certificates used to sign and encrypt other listed PAL items.",
      "ja": "彼らは署名し、他の上場PAL項目を暗号化するために使用される証明書の検証の意思決定をサポートするため、O / cacertsにおよび/ CRLのパッケージが最も重要です。"
    },
    {
      "indent": 3,
      "text": "o /csrattrs are the next in importance, since they provide information that the server would like the client to include in its certificate enrollment request.",
      "ja": "彼らは、サーバーは、クライアントがその証明書登録要求に含めたいという情報を提供するため、O / csrattrsは、重要性が隣接しています。"
    },
    {
      "indent": 3,
      "text": "o /simpleenroll, /simplereenroll, and /fullcmc packages are next in importance, since they can impact a certificate used by the client to sign CMS content or a certificate to establish keys for encrypting content exchanged with the client.",
      "ja": "O / simpleenroll、/彼らはCMSのコンテンツやコンテンツを暗号化するための鍵を確立するための証明書、クライアントと交換に署名するためにクライアントが使用する証明書に影響を与える可能性があるためsimplereenroll、および/ fullcmcパッケージは、重要で隣接しています。"
    },
    {
      "indent": 6,
      "text": "* A client engaged in certificate management SHOULD accept and process CA-provided transactions as soon as possible to avoid undue delays that might lead to protocol failure.",
      "ja": "*証明書管理に従事したクライアントは、プロトコルの故障につながる可能性が不当な遅延を避けるために、できるだけ早くCAが提供するトランザクションを受け入れて処理すべきです。"
    },
    {
      "indent": 3,
      "text": "o /symmetrickeys, /firmware, /tamp, and /eecerts packages containing keys and other types of products are last. Precedence SHOULD be given to packages that the client has not previously downloaded. The items listed in a PAL may not identify all of the packages available for a device. This can be for any of the following reasons:",
      "ja": "O / symmetrickeys、/ファームウェア、/タンピング、製品のキーと他のタイプを含む、および/ eecertsパッケージが最後です。優先順位は、クライアントが以前にダウンロードされていないパッケージに与えられるべきです。 PALに記載されているアイテムは、デバイスで使用可能なすべてのパッケージを特定しない場合があります。これは、次のいずれかの理由であることができます："
    },
    {
      "indent": 6,
      "text": "* The server may temporarily withhold some outstanding PAL items to simplify client processing.",
      "ja": "*サーバーが一時的にクライアントの処理を簡素化するために、いくつかの優れたPALアイテムを差し控えることがあります。"
    },
    {
      "indent": 6,
      "text": "* If a CA has more than one certificate ready for the client, the server will provide a notice for one at a time. Pending notices will be serviced in order, according to the date when the certificate will be used (earliest date first).",
      "ja": "* CAは、クライアントのために準備ができて複数の証明書を持っている場合、サーバーは、一度に1つのための通知を提供します。保留中の通知は、証明書が使用される日（最初の最も早い日付）によると、順にサービスされます。"
    },
    {
      "indent": 3,
      "text": "When rejecting a request, the server specifies either an HTTP 4xx error or an HTTP 5xx error.",
      "ja": "要求を拒否すると、サーバーは、HTTPの4xxエラーまたはHTTP 5xxのエラーのいずれかを指定します。"
    },
    {
      "indent": 3,
      "text": "All other return codes are handled as specified in Section 4.2.3 of [RFC7030] (i.e., 202 handling and all other HTTP response codes).",
      "ja": "[RFC7030]（すなわち、202取り扱いおよび他のすべてのHTTP応答コード）のセクション4.2.3で指定されるように、他のすべての戻りコードは処理されます。"
    },
    {
      "indent": 0,
      "text": "3. Distribute EE Certificates",
      "section_title": true,
      "ja": "3. EE証明書を配布します"
    },
    {
      "indent": 3,
      "text": "Numerous mechanisms exist for clients to query repositories for certificates. The service provided by the /eecerts PC is different in that it is not a general-purpose query for client certificates; instead, it allows the server to provide peer certificates to a client that the server knows through an out-of-band mechanism that the client will be communicating with. For example, a router being provisioned that connects to two peers can be provisioned with not only its certificate but also with the peers' certificates.",
      "ja": "クライアントが証明書のリポジトリを照会するための多数のメカニズムが存在します。 / eecertsのPCによって提供されるサービスは、クライアント証明書のための汎用的なクエリではないという点で異なっています。その代わり、それはサーバは、サーバがクライアントが通信されるアウトオブバンドメカニズムを介して知っているクライアントにピア証明書を提供することができます。例えば、二つのピアに接続されているプロビジョニングされているルータは、その証明書がないだけでなく、ピアの証明書をプロビジョニングすることができます。"
    },
    {
      "indent": 3,
      "text": "The server need not authenticate or authorize the client for distributing an EE certificate, because the package contents are already signed by a CA (i.e., the certificate(s) in a certs-only message has already been signed by a CA). The message flow is similar to Figure 1, except that the connection need not be HTTPS:",
      "ja": "サーバは（すなわち、本命だけメッセージ内の証明書（s）はすでにCAによって署名された）パッケージの内容は、すでにCAによって署名されているので、EE証明書を配布するためのクライアントを認証または認可する必要はありません。メッセージフローは、接続がHTTPSである必要はないことを除いて、図1と同様です。"
    },
    {
      "indent": 16,
      "text": "          |                      |\nClient    |    Establish TLS     |    Server\n          |       Session        |\n          |<-------------------->|\n          |                      |\n          |          Request PAL |\n          |   (HTTP GET Request) |\n          |--------------------->|\n          |<---------------------|\n          | Deliver PAL          |\n          | (HTTP GET Response)  |\n          |                      |\n          |   Request EE Cert(s) |\n          |   (HTTP GET Request) |\n          |--------------------->|\n          |<---------------------|\n          | Deliver EE Cert(s)   |\n          | (HTTP GET Response)  |\n          |                      |",
      "raw": true
    },
    {
      "indent": 20,
      "text": "Figure 2: /eecerts Message Sequence",
      "ja": "図2：/メッセージシーケンスをeecerts"
    },
    {
      "indent": 0,
      "text": "3.1. EE Certificate Request",
      "section_title": true,
      "ja": "3.1.  EE証明書要求"
    },
    {
      "indent": 3,
      "text": "Clients request EE certificates with an HTTP GET [RFC7231], using an operation path of \"/eecerts\".",
      "ja": "クライアントは、「/ eecerts」の動作パスを使用して、HTTP GET [RFC7231]でEE証明書を要求します。"
    },
    {
      "indent": 0,
      "text": "3.2. EE Certificate Response",
      "section_title": true,
      "ja": "3.2.  EE証明書レスポンス"
    },
    {
      "indent": 3,
      "text": "The response and processing of the returned error codes are identical to what is described in Section 4.1.3 of [RFC7030], except that the certificate provided is not the one issued to the client; instead, one or more client's peer certificates are returned in the certs-only message.",
      "ja": "返されたエラーコードの応答と処理が提供された証明書がクライアントに発行されたものではないことを除いて、[RFC7030]のセクション4.1.3に記載されているものと同一です。代わりに、1つ以上のクライアントのピア証明書は、本命だけメッセージで返されます。"
    },
    {
      "indent": 3,
      "text": "Clients MUST reject EE certificates that do not validate to an authorized TA.",
      "ja": "クライアントが認証さTAに検証しませんEE証明書を拒絶しなければなりません。"
    },
    {
      "indent": 0,
      "text": "4. Distribute CRLs and ARLs",
      "section_title": true,
      "ja": "4. CRLとARLsを配布"
    },
    {
      "indent": 3,
      "text": "CRLs (and ARLs) are needed in many instances to perform certificate path validation [RFC5280]. They can be obtained from repositories if their location is provided in the certificate. However, the client needs to parse the certificate and perform an additional round trip to retrieve them. Providing CRLs during bootstrapping obviates the need for the client to parse the certificate and aids those clients who might be unable to retrieve the CRL. Clients are free to obtain CRLs on which they rely from sources other than the server (e.g., a local directory). The /crls PC allows servers to distribute CRLs at the same time that clients retrieve their certificate(s) and CA certificate(s) as well as peer certificates.",
      "ja": "CRLの（及びARLs）は、認証パスの検証[RFC5280]を実行するために多くの場合に必要とされます。その場所は、証明書に記載されている場合彼らは、リポジトリから取得することができます。ただし、クライアントが証明書を解析し、それらを取得するために追加のラウンドトリップを実行する必要があります。ブートストラップ時にCRLを提供することは、証明書を解析するクライアントを不要にし、CRLを取得できないことがあり、それらのクライアントを支援します。クライアントは、サーバー（例えば、ローカルディレクトリ）以外のソースから頼られているCRLを取得するのは自由です。 / CRLのPCは、サーバはクライアントが証明書とCA証明書（複数可）だけでなく、ピア証明書を取得すると同時に、CRLを配布することができます。"
    },
    {
      "indent": 3,
      "text": "The server need not authenticate or authorize the client for distributing a CRL, because the package contents are already signed by a CA (i.e., the CRLs in a crls-only message have already been signed by a CA). The message flow is as depicted in Figure 2 but with \"CRL(s)\" instead of \"EE Cert(s)\".",
      "ja": "サーバが認証したり、パッケージの内容がすでにCA（すなわち、CRLの専用メッセージ内のCRLがすでにCAによって署名されている）によって署名されているので、CRLを配布するためのクライアントを許可する必要はありません。図2にはその代わりに「EE証明書（複数可）」の「CRL（S）」と示されているようにメッセージ・フローです。"
    },
    {
      "indent": 0,
      "text": "4.1. CRL Request",
      "section_title": true,
      "ja": "4.1.  CRLリクエスト"
    },
    {
      "indent": 3,
      "text": "Clients request CRLs with an HTTP GET [RFC7231], using an operation path of \"/crls\".",
      "ja": "クライアントは、「/のCRL」の動作経路を使用して、HTTP GET [RFC7231]とCRLを要求します。"
    },
    {
      "indent": 0,
      "text": "4.2. CRL Response",
      "section_title": true,
      "ja": "4.2.  CRLの対応"
    },
    {
      "indent": 3,
      "text": "The response, and the processing of that response, are identical to what is described in Section 4.1.3 of [RFC7030], except that instead of providing the issued certificate one of more CRLs are returned in the crls-only message.",
      "ja": "応答し、その応答の処理は、代わりに複数のCRLのいずれかのCRL専用メッセージで返され発行された証明書を提供することを除いて、[RFC7030]のセクション4.1.3に記載されているものと同一です。"
    },
    {
      "indent": 3,
      "text": "Clients MUST reject CRLs that do not validate to an authorized TA.",
      "ja": "クライアントが認可さTAに検証しませんCRLを拒絶しなければなりません。"
    },
    {
      "indent": 0,
      "text": "5. Symmetric Keys, Receipts, and Errors",
      "section_title": true,
      "ja": "5.対称鍵、領収書、およびエラー"
    },
    {
      "indent": 3,
      "text": "In addition to public keys, clients often need one or more symmetric keys to communicate with their peers. The /symmetrickeys PC allows the server to distribute symmetric keys to clients.",
      "ja": "公開鍵に加えて、クライアントは多くの場合、彼らの仲間と通信するために、1つ以上の対称鍵を必要としています。 / symmetrickeys PCは、サーバがクライアントに対称鍵を配布することができます。"
    },
    {
      "indent": 3,
      "text": "Distribution of keys does not always work as planned, and clients need a way to inform the server that something has gone wrong; they also need a way to inform the server, if asked, that the distribution process has successfully completed. The /symmetrickeys/return PC allows clients to provide errors and receipts.",
      "ja": "計画通りのキーの配布は、常に動作しません。また、クライアントは、何かが間違っているサーバーに通知する方法が必要です。依頼された場合、彼らはまた、配布プロセスが正常に完了したことを、サーバーに通知する方法が必要です。 / symmetrickeys /リターンPCは、クライアントがエラーや領収書を提供することができます。"
    },
    {
      "indent": 3,
      "text": "Clients MUST authenticate the server, and clients MUST check the server's authorization.",
      "ja": "クライアントはサーバを認証しなければならない、とクライアントは、サーバーの承認をチェックしなければなりません。"
    },
    {
      "indent": 3,
      "text": "The server MUST authenticate clients, and the server MUST check the client's authorization.",
      "ja": "サーバーはクライアントを認証しなければならない、と、サーバはクライアントの許可をチェックしなければなりません。"
    },
    {
      "indent": 3,
      "text": "HTTP GET [RFC7231] is used when the server provides the key to the client (see Section 5.1), using the /symmetrickeys PC; HTTP POST [RFC7231] is used when the client provides a receipt (see Section 5.2) or an error (see Section 5.2) to the server with the /symmetrickeys/return PC.",
      "ja": "サーバがクライアントにキーを提供する場合、HTTP GET [RFC7231]は/ symmetrickeys PCを使用して、（セクション5.1を参照）が使用されています。 HTTP POST [RFC7231]クライアントがレシートを提供する際に使用される（セクション5.2を参照）またはエラー（5.2節を参照してください）/ symmetrickeys /リターンPCとサーバーへ。"
    },
    {
      "indent": 0,
      "text": "5.1. Symmetric Keys",
      "section_title": true,
      "ja": "5.1. 対称鍵"
    },
    {
      "indent": 3,
      "text": "Servers use /symmetrickeys to provide symmetric keys to clients; the symmetric key package is defined in [RFC6031].",
      "ja": "サーバはクライアントに、対称鍵を提供するために、/ symmetrickeysを使用します。対称鍵パッケージは、[RFC6031]で定義されています。"
    },
    {
      "indent": 3,
      "text": "As with the /serverkeygen PC defined in [RFC7030], the default method for distributing the symmetric key uses the encryption mode of the negotiated TLS cipher suite. Keys are not protected by preferred key-wrapping methods such as AES Key Wrap [RFC3394] or AES Key Wrap with Padding [RFC5649], because encryption of the symmetric key beyond that provided by TLS is OPTIONAL. Therefore, the cipher suite used to return the symmetric key MUST offer cryptographic strength that is commensurate with the symmetric key being delivered to the client. The cipher suite used MUST NOT have the NULL encryption algorithm, as this will disclose the unprotected symmetric key. It is strongly RECOMMENDED that servers always return encrypted symmetric keys.",
      "ja": "[RFC7030]で定義された/ serverkeygenのPCと同じように、対称鍵を配布するためのデフォルトの方法では、ネゴシエートTLS暗号スイートの暗号化モードを使用しています。 TLSによって提供されるものを超えて、対称鍵の暗号化はオプションであるため、キーは、パディング[RFC5649]このようなAESキーラップ[RFC3394]またはAESキーラップとして好適鍵ラッピング法によって保護されていません。したがって、対称鍵を返すために使用される暗号スイートは、クライアントに配信される対称鍵に見合った暗号強度を提供しなければなりません。このように、NULL暗号化アルゴリズムを持つことはできません使用される暗号スイートは保護されていない対称鍵を開示します。強く、サーバは常に暗号化された対称鍵を返すことが推奨されます。"
    },
    {
      "indent": 3,
      "text": "The following depicts the protocol flow:",
      "ja": "以下は、プロトコルフローを示しています："
    },
    {
      "indent": 15,
      "text": "          |                       |\nClient    |    Establish TLS      |    Server\n          |       Session         |\n          |<--------------------->|\n          |                       |\n          |          Request PAL  |\n          |   (HTTP GET Request)  |\n          |---------------------->|\n          |<----------------------|\n          | Deliver PAL           |\n          | (HTTP GET Response)   |\n          |                       |\n          |    Req Symmetric Key  |\n          |   (HTTP GET Request)  |\n          |---------------------->|\n          |<----------------------|\n          | Deliver Symmetric Key |\n          | (HTTP GET Response)   |\n          |                       |",
      "raw": true
    },
    {
      "indent": 17,
      "text": "Figure 3: /symmetrickeys Message Sequence",
      "ja": "図3：/ symmetrickeysメッセージシーケンス"
    },
    {
      "indent": 0,
      "text": "5.1.1. Distribute Symmetric Keys",
      "section_title": true,
      "ja": "5.1.1. 対称鍵を配布"
    },
    {
      "indent": 3,
      "text": "Clients request the symmetric key from the server with an HTTP GET [RFC7231], using an operation path of \"/symmetrickeys\".",
      "ja": "クライアントは、「/ symmetrickeys」の動作経路を使用して、HTTP GET [RFC7231]を使用してサーバからの対称鍵を要求します。"
    },
    {
      "indent": 0,
      "text": "5.1.2. Symmetric Key Response",
      "section_title": true,
      "ja": "5.1.2. 対称鍵レスポンス"
    },
    {
      "indent": 3,
      "text": "If the request is successful, the server response MUST have an HTTP 200 response code with a Content-Type of \"application/cms\" [RFC7193]. The optional application/cms encapsulatingContent and innerContent parameters SHOULD be included with the Content-Type to indicate the protection afforded to the returned symmetric key. The returned content varies:",
      "ja": "リクエストが成功した場合、サーバーの応答は、「アプリケーション/ CMS」[RFC7193]のコンテンツタイプとHTTP 200応答コードを持たなければなりません。オプションのアプリケーション/ CMS encapsulatingContentとinnerContentパラメータが返された対称鍵に与えられる保護を示すために、コンテンツタイプに含まれるべきです。返された内容は異なります。"
    },
    {
      "indent": 3,
      "text": "o If additional encryption is not being employed, the content associated with application/cms is a DER-encoded [X.690] symmetric key package.",
      "ja": "付加的な暗号化が使用されていない場合は、O、アプリケーション/ CMSに関連付けられたコンテンツは、DER符号化された[X.690]対称鍵パッケージです。"
    },
    {
      "indent": 3,
      "text": "o If additional encryption is employed, the content associated with application/cms is DER-encoded enveloped-data that encapsulates a signed-data that further encapsulates a symmetric key package.",
      "ja": "Oさらに対称鍵パッケージをカプセル化する符号付きデータをカプセル化するデータエンベロープを追加的暗号化が使用される場合、アプリケーション/ CMSに関連付けられているコンテンツがDER符号化されます。"
    },
    {
      "indent": 3,
      "text": "o If additional encryption and origin authentication are employed, the content associated with application/cms is a DER-encoded signed-data that encapsulates an enveloped-data that encapsulates a signed-data that further encapsulates a symmetric key package.",
      "ja": "追加的暗号化および発信元認証を使用する場合、O、アプリケーション/ CMSに関連付けられたコンテンツは、さらに、対称鍵パッケージをカプセル化する符号付きデータをカプセル化エンベロープデータをカプセル化するDER符号化され署名されたデータです。"
    },
    {
      "indent": 3,
      "text": "o If CCC (CMS Content Constraints) [RFC6010] is supported, the content associated with application/cms is a DER-encoded encrypted key package [RFC6032]. The encrypted key package provides three choices to encapsulate keys: EncryptedData, EnvelopedData, and AuthEnvelopedData. Prior to employing one of these three encryption choices, the key package can be encapsulated in a signed-data.",
      "ja": "CCC（CMSコンテンツ制約）[RFC6010]がサポートされている場合、O、アプリケーション/ CMSに関連付けられたコンテンツは、DER符号化された暗号化キーパッケージ[RFC6032]です。 EncryptedData、EnvelopedDataの、そしてAuthEnvelopedData：暗号化キーパッケージは、キーをカプセル化するための3つの選択肢を提供します。これらの3つの暗号化の選択肢のいずれかを採用する前に、キーパッケージが署名したデータにカプセル化することができます。"
    },
    {
      "indent": 3,
      "text": "How the server knows whether the client supports the encrypted key package is beyond the scope of this document.",
      "ja": "どのサーバがクライアントが暗号化されたキーパッケージをサポートしているかどうかを知っていることは、この文書の範囲外です。"
    },
    {
      "indent": 3,
      "text": "When rejecting a request, the server specifies either an HTTP 4xx error or an HTTP 5xx error.",
      "ja": "要求を拒否すると、サーバーは、HTTPの4xxエラーまたはHTTP 5xxのエラーのいずれかを指定します。"
    },
    {
      "indent": 3,
      "text": "If a symmetric key package (which might be signed) or an encrypted key package (which might be signed before and after encryption) is digitally signed, the client MUST reject it if the digital signature does not validate back to an authorized TA.",
      "ja": "（署名される場合があります）対称鍵パッケージまたは（暗号化の前と後に署名される場合があります）、暗号化キーパッケージがデジタル署名されている場合は、デジタル署名が戻っ認可TAに検証しない場合、クライアントはそれを拒絶しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Note: Absent a policy on the client side requiring a signature, a malicious EST server can simply strip the signature, thus bypassing that check. In that case, this requirement is merely a sanity check, serving to detect mis-signed packages or misconfigured clients.",
      "ja": "注意：不在の署名を必要とするクライアント側のポリシー、悪意のあるESTサーバは、単にので、そのチェックをバイパスし、署名を削除することができます。その場合には、この要件は、誤署名付きパッケージまたは誤設定のクライアントを検出するのに役立つ、単に健全性チェックです。"
    },
    {
      "indent": 3,
      "text": "[RFC3370], [RFC5753], [RFC5754], [RFC6033], [RFC6160], and [RFC6161] provide algorithm details for use when protecting the symmetric key package and encrypted key package.",
      "ja": "[RFC3370]、[RFC 5753]、[RFC 5754]、[RFC 6033]、[RFC6160]、および対称鍵パッケージと暗号化キーパッケージを保護する場合、[RFC6161]の使用のためのアルゴリズムの詳細を提供します。"
    },
    {
      "indent": 0,
      "text": "5.2. Symmetric Key Receipts and Errors",
      "section_title": true,
      "ja": "5.2. 対称キー領収書とエラー"
    },
    {
      "indent": 3,
      "text": "Clients use /symmetrickeys/return to provide symmetric key package receipts; the key package receipt content type is defined in [RFC7191]. Clients can be configured to automatically return receipts after processing a symmetric key package, return receipts based on processing of the key-package-identifier-and-receipt-request attribute [RFC7191], or return receipts when prompted by a PAL entry.",
      "ja": "クライアントは、対称鍵パッケージの領収書を提供するために、/ symmetrickeys /リターンを使用します。キーパッケージのレシートコンテンツタイプは、[RFC7191]で定義されています。クライアントは自動的に、対称鍵パッケージを処理した後に領収書を返すキーパッケージ識別子と、受信要求属性[RFC7191]の処理に基づいて、領収書を返す、またはPALエントリによって要求された場合、領収書を返すように構成することができます。"
    },
    {
      "indent": 3,
      "text": "Servers can indicate that clients return a receipt by including the key-package-identifier-and-receipt-request attribute in a signed-data as a signed attribute. However, this attribute only appears when additional encryption is employed (see Section 5.1.2).",
      "ja": "サーバーは、クライアントが署名している属性として符号付きデータ内のキーパッケージ識別子と、領収書要求属性を含めることによって、領収書を返すことを示すことができます。ただし、この属性は、（5.1.2項を参照）追加の暗号化を採用したときに表示されます。"
    },
    {
      "indent": 3,
      "text": "Clients also use /symmetrickeys/return to return symmetric key package errors; the key package error content type is defined in [RFC7191]. Clients can be configured to automatically return errors after processing a symmetric key package or based on a PAL entry.",
      "ja": "また、クライアントは対称鍵パッケージエラーを返すように/ symmetrickeys /リターンを使用します。キーパッケージエラーコンテンツタイプは、[RFC7191]で定義されています。クライアントは自動的に対称キーパッケージを処理またはPALのエントリに基づいて後にエラーを返すように設定することができます。"
    },
    {
      "indent": 3,
      "text": "The following depicts the protocol flow:",
      "ja": "以下は、プロトコルフローを示しています："
    },
    {
      "indent": 14,
      "text": "          |                      |\nClient    |    Establish TLS     |    Server\n          |       Session        |\n          |<-------------------->|\n          |                      |\n          |          Request PAL |\n          |   (HTTP GET Request) |\n          |--------------------->|\n          |<---------------------|\n          | Deliver PAL          |\n          | (HTTP GET Response)  |\n          |                      |\n          | Return Receipt/Error |\n          |  (HTTP POST Request) |\n          |--------------------->|\n          |<---------------------|\n          | (HTTP POST Response) |\n          | status code only     |\n          | no content           |\n          |                      |",
      "raw": true
    },
    {
      "indent": 13,
      "text": "Figure 4: /symmetrickeys/return Message Sequence",
      "ja": "図4：/ symmetrickeys /リターンメッセージシーケンス"
    },
    {
      "indent": 0,
      "text": "5.2.1. Provide Symmetric Key Receipt or Error",
      "section_title": true,
      "ja": "5.2.1. 対称キー領収書またはエラーを提供"
    },
    {
      "indent": 3,
      "text": "Clients return symmetric key receipts and errors to the server with an HTTP POST [RFC7231], using an operation path of \"/symmetrickeys/return\". The returned content varies:",
      "ja": "クライアントは、「/ symmetrickeys /リターン」の操作経路を使用して、HTTP POST [RFC7231]を使用してサーバーに対称鍵レシートやエラーを返します。返された内容は異なります。"
    },
    {
      "indent": 3,
      "text": "o The key package receipt is digitally signed [RFC7191]; the Content-Type is \"application/cms\" [RFC7193]; and the associated content is signed-data, which encapsulates a key package receipt.",
      "ja": "Oキーパッケージ領収書は、デジタル[RFC7191]を署名されています。 Content-Typeのは、 \"アプリケーション/ CMS\" [RFC7193]です。および関連するコンテンツは、鍵パッケージレシートをカプセル化し、データに署名しています。"
    },
    {
      "indent": 3,
      "text": "o If the key package error is not digitally signed, the Content-Type is \"application/cms\" and the associated content is a key package error. If the key package error is digitally signed, the Content-Type is \"application/cms\" and the associated content is signed-data, which encapsulates a key package error.",
      "ja": "キーパッケージエラーがデジタル署名されていない場合は、O、Content-Typeのは、「アプリケーション/ CMS」で、関連するコンテンツは、キーパッケージエラーです。キーパッケージエラーがデジタル署名された場合、Content-Typeが「アプリケーション/ CMS」で、関連するコンテンツは、キーパッケージエラーをカプセル化し、データに署名しています。"
    },
    {
      "indent": 3,
      "text": "The optional application/cms encapsulatingContent and innerContent parameters SHOULD be included with the Content-Type to indicate the protection afforded to the receipt or error.",
      "ja": "オプションのアプリケーション/ CMS encapsulatingContentとinnerContentパラメータは、領収書やエラーに与えられる保護を示すために、コンテンツタイプに含まれるべきです。"
    },
    {
      "indent": 3,
      "text": "[RFC3370], [RFC5753], [RFC5754], and [RFC7192] provide algorithm details for use when protecting the key package receipt or key package error.",
      "ja": "[RFC3370]、キーパッケージレシートまたはキーパッケージエラーを保護する場合、[RFC5753]、[RFC5754]及び[RFC7192]を使用するためのアルゴリズムの詳細を提供します。"
    },
    {
      "indent": 0,
      "text": "5.2.2. Symmetric Key Receipt or Error Response",
      "section_title": true,
      "ja": "5.2.2. 対称キー領収書またはエラー応答"
    },
    {
      "indent": 3,
      "text": "If the client successfully provides a receipt or error, the server response has an HTTP 204 response code (i.e., no content is returned).",
      "ja": "クライアントが正常に受信またはエラーを提供する場合、サーバの応答（すなわち、ないコンテンツが返されていない）HTTP 204応答コードを有しています。"
    },
    {
      "indent": 3,
      "text": "When rejecting a request, the server specifies either an HTTP 4xx error or an HTTP 5xx error.",
      "ja": "要求を拒否すると、サーバーは、HTTPの4xxエラーまたはHTTP 5xxのエラーのいずれかを指定します。"
    },
    {
      "indent": 3,
      "text": "If a key package receipt or key package error is digitally signed, the server MUST reject it if the digital signature does not validate back to an authorized TA.",
      "ja": "キーパッケージの領収書またはキーパッケージエラーがデジタル署名されている場合は、デジタル署名が許可TAに戻って検証しない場合、サーバはそれを拒絶しなければなりません。"
    },
    {
      "indent": 0,
      "text": "6. Firmware, Receipts, and Errors",
      "section_title": true,
      "ja": "6.ファームウェア、領収書、およびエラー"
    },
    {
      "indent": 3,
      "text": "Servers can distribute object code for cryptographic algorithms and software with the firmware package [RFC4108].",
      "ja": "サーバーは、ファームウェアパッケージ[RFC4108]を用いて暗号化アルゴリズムおよびソフトウェアのオブジェクトコードを配布することができます。"
    },
    {
      "indent": 3,
      "text": "Clients MUST authenticate the server, and clients MUST check the server's authorization.",
      "ja": "クライアントはサーバを認証しなければならない、とクライアントは、サーバーの承認をチェックしなければなりません。"
    },
    {
      "indent": 3,
      "text": "The server MUST authenticate the client, and the server MUST check the client's authorization.",
      "ja": "サーバはクライアントを認証しなければならない、と、サーバはクライアントの許可をチェックしなければなりません。"
    },
    {
      "indent": 3,
      "text": "The /firmware PC uses an HTTP GET [RFC7231], and the /firmware/return PC uses an HTTP POST [RFC7231]. GET is used when the client retrieves firmware from the server (see Section 6.1); POST is used when the client provides a receipt (see Section 6.2) or an error (see Section 6.2).",
      "ja": "/ファームウェアのPCは、HTTP GET [RFC7231]を使用、および/ファームウェア/リターンPCは、HTTP POST [RFC7231]を使用しています。クライアントがサーバーからファームウェアを取得するときに使用されGET（6.1節を参照）。クライアントは、領収書（セクション6.2を参照）、またはエラーを提供する場合、POSTが使用されている（6.2節を参照してください）。"
    },
    {
      "indent": 0,
      "text": "6.1. Firmware",
      "section_title": true,
      "ja": "6.1. ファームウェア"
    },
    {
      "indent": 3,
      "text": "The /firmware URI is used by servers to provide firmware packages to clients.",
      "ja": "/ファームウェアURIは、クライアントへのファームウェアパッケージを提供するために、サーバによって使用されます。"
    },
    {
      "indent": 3,
      "text": "The message flow is as depicted in Figure 3 modulo replacing \"Symmetric Key\" with \"Firmware Package\".",
      "ja": "「ファームウェアパッケージ」と「対称鍵を」交換図3モジュロに示すように、メッセージフローです。"
    },
    {
      "indent": 0,
      "text": "6.1.1. Distribute Firmware",
      "section_title": true,
      "ja": "6.1.1. ファームウェアを配布"
    },
    {
      "indent": 3,
      "text": "Clients request firmware from the server with an HTTP GET [RFC7231], using an operation path of \"/firmware\".",
      "ja": "クライアントはHTTPを使用してサーバからファームウェアを要求する「/ファームウェア」の動作経路を使用して、[RFC7231] GET。"
    },
    {
      "indent": 0,
      "text": "6.1.2. Firmware Response",
      "section_title": true,
      "ja": "6.1.2. ファームウェアの対応"
    },
    {
      "indent": 3,
      "text": "If the request is successful, the server response MUST have an HTTP 200 response code with a Content-Type of \"application/cms\" [RFC7193]. The optional encapsulatingContent and innerContent parameters SHOULD be included with the Content-Type to indicate the protection afforded to the returned firmware. The returned content varies:",
      "ja": "リクエストが成功した場合、サーバーの応答は、「アプリケーション/ CMS」[RFC7193]のコンテンツタイプとHTTP 200応答コードを持たなければなりません。オプションのencapsulatingContentとinnerContentパラメータが返さファームウェアに与えられる保護を示すために、コンテンツタイプに含まれるべきです。返された内容は異なります。"
    },
    {
      "indent": 3,
      "text": "o If the firmware is unprotected, then the Content-Type is \"application/cms\" and the content is the DER-encoded [X.690] firmware package.",
      "ja": "ファームウェアが保護されていない場合は、O、その後のContent-Typeは、「アプリケーション/ CMS」であり、コンテンツは、DERでエンコードされた[X.690]ファームウェアパッケージです。"
    },
    {
      "indent": 3,
      "text": "o If the firmware is compressed, then the Content-Type is \"application/cms\" and the content is the DER-encoded [X.690] compressed data that encapsulates the firmware package.",
      "ja": "ファームウェアが圧縮されている場合、O、次いで、コンテンツタイプは、「アプリケーション/ CMS」であり、コンテンツがファームウェアパッケージをカプセル化するDER符号化された[X.690]の圧縮データです。"
    },
    {
      "indent": 3,
      "text": "o If the firmware is encrypted, then the Content-Type is \"application/cms\" and the content is the DER-encoded [X.690] encrypted-data that encapsulates the firmware package (which might be compressed prior to encryption).",
      "ja": "Oファームウェアが暗号化されている場合、Content-Typeが「アプリケーション/ CMS」であり、コンテンツは、（暗号化の前に圧縮されるかもしれない）ファームウェアパッケージをカプセル化するDER符号化された[X.690]暗号化されたデータです。"
    },
    {
      "indent": 3,
      "text": "o If the firmware is signed, then the Content-Type is \"application/cms\" and the content is the DER-encoded [X.690] signed-data that encapsulates the firmware package (which might be compressed, encrypted, or compressed and then encrypted prior to signature).",
      "ja": "Oファームウェアが署名されている場合、コンテンツタイプが「アプリケーション/ CMS」であり、コンテンツは、暗号化された、または圧縮された圧縮されるかもしれないファームウェアパッケージ（封入DER符号化された[X.690]署名されたデータであり、その後、）署名する前に暗号化されました。"
    },
    {
      "indent": 3,
      "text": "How the server knows whether the client supports the unprotected, signed, compressed, and/or encrypted firmware package is beyond the scope of this document.",
      "ja": "どのサーバーは、クライアントが保護されていない、署名し、圧縮をサポート、および/または暗号化されたファームウェアパッケージは、このドキュメントの範囲を超えているかどうかを知っています。"
    },
    {
      "indent": 3,
      "text": "When rejecting a request, the server specifies either an HTTP 4xx error or an HTTP 5xx error.",
      "ja": "要求を拒否すると、サーバーは、HTTPの4xxエラーまたはHTTP 5xxのエラーのいずれかを指定します。"
    },
    {
      "indent": 3,
      "text": "If a firmware package is digitally signed, the client MUST reject it if the digital signature does not validate back to an authorized TA.",
      "ja": "ファームウェアパッケージがデジタル署名されている場合は、デジタル署名が許可TAに戻って検証しない場合、クライアントはそれを拒絶しなければなりません。"
    },
    {
      "indent": 3,
      "text": "[RFC3370], [RFC5753], and [RFC5754] provide algorithm details for use when protecting the firmware package.",
      "ja": "[RFC3370]、[RFC5753]及び[RFC5754]ファームウェアパッケージを保護するときに使用するアルゴリズムの詳細を提供します。"
    },
    {
      "indent": 0,
      "text": "6.2. Firmware Receipts and Errors",
      "section_title": true,
      "ja": "6.2. ファームウェアの領収書とエラー"
    },
    {
      "indent": 3,
      "text": "Clients use the /firmware/return PC to provide firmware package load receipts and errors [RFC4108]. Clients can be configured to automatically return receipts and errors after processing a firmware package or based on a PAL entry.",
      "ja": "クライアントは、ファームウェアパッケージのロードの領収書やエラー[RFC4108]を提供するために、/ファームウェア/リターンPCを使用しています。クライアントは自動的にファームウェアパッケージを処理またはPALのエントリに基づいて、後に領収書とエラーを返すように設定することができます。"
    },
    {
      "indent": 3,
      "text": "The message flow is as depicted in Figure 4 modulo the receipt or error is for a firmware package.",
      "ja": "図4に示されているが、受信またはエラーがファームウェアパッケージのためのものであるモジュロとしてメッセージ・フローです。"
    },
    {
      "indent": 0,
      "text": "6.2.1. Provide Firmware Receipt or Error",
      "section_title": true,
      "ja": "6.2.1. ファームウェアの領収書やエラーを提供"
    },
    {
      "indent": 3,
      "text": "Clients return firmware receipts and errors to the server with an HTTP POST [RFC7231], using an operation path of \"/firmware/return\". The optional encapsulatingContent and innerContent parameters SHOULD be included with the Content-Type to indicate the protection afforded to the returned firmware receipt or error. The returned content varies:",
      "ja": "クライアントは、「/ファームウェア/復帰」の動作パスを使用して、HTTP POST [RFC7231]でサーバにファームウェアの領収書とエラーを返します。オプションのencapsulatingContentとinnerContentパラメータが返されるファームウェアの領収書またはエラーに与えられる保護を示すために、コンテンツタイプに含まれるべきです。返された内容は異なります。"
    },
    {
      "indent": 3,
      "text": "o If the firmware receipt is not digitally signed, the Content-Type is \"application/cms\" [RFC7193] and the content is the DER-encoded firmware receipt.",
      "ja": "ファームウェアの受信がデジタル署名されていない場合は、O、コンテンツタイプは、「アプリケーション/ CMS」[RFC7193]であり、コンテンツは、DER符号化されたファームウェアのレシートです。"
    },
    {
      "indent": 3,
      "text": "o If the firmware receipt is digitally signed, the Content-Type is \"application/cms\" and the content is the DER-encoded signed-data encapsulating the firmware receipt.",
      "ja": "ファームウェアの受信がデジタル署名されている場合は、O、コンテンツタイプは、「アプリケーション/ CMS」であり、コンテンツがファームウェアの受信を封入DER符号化され署名されたデータです。"
    },
    {
      "indent": 3,
      "text": "o If the firmware error is not digitally signed, the Content-Type is \"application/cms\" and the content is the DER-encoded firmware error.",
      "ja": "ファームウェアのエラーがデジタル署名されていない場合は、O、Content-Typeのは、「アプリケーション/ CMS」であり、コンテンツは、DERでエンコードされたファームウェア・エラーです。"
    },
    {
      "indent": 3,
      "text": "o If the firmware error is digitally signed, the Content-Type is \"application/cms\" and the content is the DER-encoded signed-data encapsulating the firmware error.",
      "ja": "ファームウェア・エラーがデジタル署名されている場合は、O、コンテンツタイプは、「アプリケーション/ CMS」であり、コンテンツがファームウェアエラーを封入DER符号化され署名されたデータです。"
    },
    {
      "indent": 3,
      "text": "[RFC3370], [RFC5753], and [RFC5754] provide algorithm details for use when protecting the firmware receipt or firmware error.",
      "ja": "[RFC3370]、[RFC5753]及び[RFC5754]ファームウェアレシートまたはファームウェアエラーを保護するときに使用するアルゴリズムの詳細を提供します。"
    },
    {
      "indent": 0,
      "text": "6.2.2. Firmware Receipt or Error Response",
      "section_title": true,
      "ja": "6.2.2. ファームウェアの領収書またはエラー応答"
    },
    {
      "indent": 3,
      "text": "If the request is successful, the server response MUST have an HTTP 204 response code (i.e., no content is returned).",
      "ja": "リクエストが成功した場合、サーバ応答（すなわち、ないコンテンツが返されていない）HTTP 204応答コードがなければなりません。"
    },
    {
      "indent": 3,
      "text": "When rejecting a request, the server MUST specify either an HTTP 4xx error or an HTTP 5xx error.",
      "ja": "要求を拒否すると、サーバーは、HTTPの4xxエラーまたはHTTP 5xxのエラーのいずれかを指定しなければなりません。"
    },
    {
      "indent": 3,
      "text": "If a firmware receipt or firmware error is digitally signed, the server MUST reject it if the digital signature does not validate back to an authorized TA.",
      "ja": "ファームウェアレシートまたはファームウェアエラーがデジタル署名されている場合は、デジタル署名が許可TAに戻って検証しない場合、サーバはそれを拒絶しなければなりません。"
    },
    {
      "indent": 0,
      "text": "7. Trust Anchor Management Protocol",
      "section_title": true,
      "ja": "7.トラストアンカー管理プロトコル"
    },
    {
      "indent": 3,
      "text": "Servers distribute TAMP packages to manage TAs in a client's trust anchor databases; TAMP packages are defined in [RFC5934]. TAMP will allow the flexibility for a device to load TAs while maintaining an operational state. Unlike other systems that require new software loads when new PKI Roots are authorized for use, TAMP allows for automated management of roots for provisioning or replacement as needed.",
      "ja": "サーバーは、クライアントのトラストアンカーデータベース内のTAを管理するためにTAMPパッケージを配布します。 TAMPパッケージは、[RFC5934]で定義されています。 TAMPは動作状態を維持したままのTAをロードするデバイスのための柔軟性を可能にします。必要に応じて新しいPKIのルーツは、使用が許可されているときに、新しいソフトウェアロードを必要とする他のシステムとは異なり、TAMPは、プロビジョニングまたは交換のための根の自動管理が可能になります。"
    },
    {
      "indent": 3,
      "text": "Clients MUST authenticate the server, and clients MUST check the server's authorization.",
      "ja": "クライアントはサーバを認証しなければならない、とクライアントは、サーバーの承認をチェックしなければなりません。"
    },
    {
      "indent": 3,
      "text": "The server MUST authenticate the client, and the server MUST check the client's authorization.",
      "ja": "サーバはクライアントを認証しなければならない、と、サーバはクライアントの許可をチェックしなければなりません。"
    },
    {
      "indent": 3,
      "text": "The /tamp PC uses an HTTP GET [RFC7231], and the tamp/return PC uses an HTTP POST [RFC7231]. GET is used when the server requests that the client retrieve a TAMP package (see Section 7.1); POST is used when the client provides a confirm (see Section 7.2), provides a response (see Section 7.2), or provides an error (see Section 7.2) for the TAMP package.",
      "ja": "/タンピングPCは、HTTP GET [RFC7231]を使用し、タンプ/リターンPCは、HTTP POST [RFC7231]を使用しています。 GETは、クライアントが（7.1節を参照）TAMPパッケージを取得するときに、サーバー要求を使用しています。クライアントが応答（セクション7.2を参照）を提供する、ことを確認し（セクション7.2を参照）を提供する、またはエラーを提供する場合、POSTを使用したTAMPパッケージの（セクション7.2を参照）。"
    },
    {
      "indent": 0,
      "text": "7.1. TAMP Status Query, Trust Anchor Update, Apex Trust Anchor Update, Community Update, and Sequence Number Adjust",
      "ja": "7.1. トラストアンカーの更新、アペックス・トラストアンカーの更新、コミュニティ更新、およびシーケンス番号を調整し、ステータスクエリをタンピング"
    },
    {
      "indent": 3,
      "text": "Clients use the /tamp PC to retrieve the TAMP packages: TAMP Status Query, Trust Anchor Update, Apex Trust Anchor Update, Community Update, and Sequence Number Adjust. Clients can be configured to periodically poll the server for these packages or contact the server based on a PAL entry.",
      "ja": "クライアントは、TAMPパッケージを取得するために/タンピングPCを使用：ステータスクエリー、トラストアンカーの更新、アペックス・トラストアンカーアップデート、コミュニティの更新をタンピング、およびシーケンス番号を調整します。クライアントは、定期的にこれらのパッケージのためにサーバーをポーリングまたはPALのエントリに基づいてサーバに接続するように設定することができます。"
    },
    {
      "indent": 3,
      "text": "The message flow is as depicted in Figure 3 modulo replacing \"Symmetric Key\" with the appropriate TAMP message.",
      "ja": "適切なTAMPメッセージで「対称鍵を」交換図3モジュロに示すように、メッセージフローです。"
    },
    {
      "indent": 0,
      "text": "7.1.1. Request TAMP Packages",
      "section_title": true,
      "ja": "7.1.1.  TAMPパッケージをリクエスト"
    },
    {
      "indent": 3,
      "text": "Clients request the TAMP packages from the server with an HTTP GET [RFC7231], using an operation path of \"/tamp\".",
      "ja": "クライアントは、「/タンピング」の動作パスを使用して、[RFC7231]をGET HTTPを使用してサーバーからTAMPパッケージを要求します。"
    },
    {
      "indent": 0,
      "text": "7.1.2. Return TAMP Packages",
      "section_title": true,
      "ja": "7.1.2.  TAMPパッケージを返します。"
    },
    {
      "indent": 3,
      "text": "If the request is successful, the server response MUST have an HTTP 200 response code and a Content-Type of:",
      "ja": "リクエストが成功した場合、サーバーの応答がHTTP 200応答コードとのContent-Typeのを持っている必要があります。"
    },
    {
      "indent": 3,
      "text": "o application/tamp-status-query for TAMP Status Query",
      "ja": "TAMPのステータスクエリーのためのOアプリケーション/タンピング-ステータスクエリー"
    },
    {
      "indent": 3,
      "text": "o application/tamp-update for Trust Anchor Update",
      "ja": "トラストアンカーの更新のためのOアプリケーション/タンピング更新"
    },
    {
      "indent": 3,
      "text": "o application/tamp-apex-update for Apex Trust Anchor Update",
      "ja": "アペックス・トラストアンカーの更新のためのOアプリケーション/タンピング-頂点更新"
    },
    {
      "indent": 3,
      "text": "o application/tamp-community-update for Community Update",
      "ja": "コミュニティの更新のためのOアプリケーション/タンピング-コミュニティ更新"
    },
    {
      "indent": 3,
      "text": "o application/tamp-sequence-adjust for Sequence Number Adjust",
      "ja": "Oアプリケーション/調整シーケンス番号のためにタンピングシーケンス-調整"
    },
    {
      "indent": 3,
      "text": "As specified in [RFC5934], these content types are digitally signed and clients must support validating the packages directly signed by TAs. For this specification, clients MUST support validation with a certificate and clients MUST reject it if the digital signature does not validate back to an authorized TA.",
      "ja": "[RFC5934]で指定されているように、これらのコンテンツタイプは、デジタル署名されており、クライアントが直接のTAによって署名されたパッケージを検証しサポートしている必要があります。この仕様のために、クライアントはデジタル署名が正当TAに戻って検証しない場合は、それを拒絶しなければなりません証明書とクライアントとの検証をサポートしなければなりません。"
    },
    {
      "indent": 3,
      "text": "[RFC3370], [RFC5753], and [RFC5754] provide algorithm details for use when protecting the TAMP packages.",
      "ja": "[RFC3370]、[RFC5753]及び[RFC5754] TAMPパッケージを保護するときに使用するアルゴリズムの詳細を提供します。"
    },
    {
      "indent": 0,
      "text": "7.2. TAMP Responses, Confirms, and Errors",
      "section_title": true,
      "ja": "7.2. 応答、確認、およびエラーを突き固め"
    },
    {
      "indent": 3,
      "text": "Clients return the TAMP Status Query Response, Trust Anchor Update Confirm, Apex Trust Anchor Update Confirm, Community Update Confirm, Sequence Number Adjust Confirm, and TAMP Error to servers, using the /tamp/return PC. Clients can be configured to automatically return responses, confirms, and errors after processing a TAMP package or based on a PAL entry.",
      "ja": "クライアントはTAMPステータスクエリーのレスポンス、トラストアンカーの更新確認、アペックス・トラストアンカーアップデート確認、コミュニティの更新確認を返し、シーケンス番号は、/タンプ/戻るPCを使用して、確認を調整し、サーバにエラーを突き固めます。クライアントは自動的にPALのエントリに基づいてTAMPパッケージまたはを処理した後の応答、確認、およびエラーを返すように設定することができます。"
    },
    {
      "indent": 3,
      "text": "The message flow is as depicted in Figure 4 modulo replacing \"Receipt/Error\" with the appropriate TAMP response, confirm, or error.",
      "ja": "適切なTAMP応答、確認、あるいはエラーで「入庫/エラー」を置き換える図4モジュロに示すように、メッセージフローです。"
    },
    {
      "indent": 0,
      "text": "7.2.1. Provide TAMP Responses, Confirms, or Errors",
      "section_title": true,
      "ja": "7.2.1.  TAMP応答、確認、またはエラーを提供"
    },
    {
      "indent": 3,
      "text": "Clients provide the TAMP responses, confirms, and errors to the server with an HTTP POST, using an operation path of \"/tamp/return\". The Content-Type is:",
      "ja": "クライアントは、「/タンピング/復帰」の動作パスを使用して、HTTP POSTを使用してサーバにTAMP応答、確認、およびエラーを提供しています。コンテンツの種類は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "o application/tamp-status-response for TAMP Status Query Response",
      "ja": "TAMPステータスクエリーの応答のためのOアプリケーション/タンピング-ステータス返信"
    },
    {
      "indent": 3,
      "text": "o application/tamp-update-confirm for Trust Anchor Update Confirm",
      "ja": "トラストアンカーアップデート確認のためのOアプリケーション/タンピング-更新確認"
    },
    {
      "indent": 3,
      "text": "o application/tamp-apex-update-confirm for Apex Trust Anchor Update Confirm",
      "ja": "Oアプリケーション/アペックストラストアンカーアップデート確認のためにタンピング-頂点 - 更新確認"
    },
    {
      "indent": 3,
      "text": "o application/tamp-community-update-confirm for Community Update Confirm",
      "ja": "Oアプリケーション/コミュニティアップデート確認のためにタンピング・コミュニティ更新確認"
    },
    {
      "indent": 3,
      "text": "o application/tamp-sequence-adjust-confirm for Sequence Number Adjust Confirm",
      "ja": "Oアプリケーション/タンピングシーケンス・調整・確認シーケンス番号が確認さを調整するために"
    },
    {
      "indent": 3,
      "text": "o application/tamp-error for TAMP Error",
      "ja": "TAMPエラーのためのOアプリケーション/タンピングエラー"
    },
    {
      "indent": 3,
      "text": "As specified in [RFC5934], these content types should be signed. If signed, a signed-data encapsulates the TAMP content.",
      "ja": "[RFC5934]で指定されるように、これらのコンテンツタイプは、署名されるべきです。署名した場合は、署名データは、TAMP内容をカプセル化します。"
    },
    {
      "indent": 3,
      "text": "[RFC3370], [RFC5753], and [RFC5754] provide algorithm details for use when protecting the TAMP packages.",
      "ja": "[RFC3370]、[RFC5753]及び[RFC5754] TAMPパッケージを保護するときに使用するアルゴリズムの詳細を提供します。"
    },
    {
      "indent": 0,
      "text": "7.2.2. TAMP Responses, Confirms, and Error Responses",
      "section_title": true,
      "ja": "7.2.2. 応答、確認、およびエラーレスポンスをタンピング"
    },
    {
      "indent": 3,
      "text": "If the request is successful, the server response MUST have an HTTP 204 response code (i.e., no content is returned).",
      "ja": "リクエストが成功した場合、サーバ応答（すなわち、ないコンテンツが返されていない）HTTP 204応答コードがなければなりません。"
    },
    {
      "indent": 3,
      "text": "When rejecting a request, the server MUST specify either an HTTP 4xx error or an HTTP 5xx error.",
      "ja": "要求を拒否すると、サーバーは、HTTPの4xxエラーまたはHTTP 5xxのエラーのいずれかを指定しなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the package is digitally signed, the server MUST reject it if the digital signature does not validate back to an authorized TA.",
      "ja": "パッケージがデジタル署名されている場合は、デジタル署名が許可TAに戻って検証しない場合、サーバはそれを拒絶しなければなりません。"
    },
    {
      "indent": 0,
      "text": "8. Asymmetric Keys, Receipts, and Errors",
      "section_title": true,
      "ja": "8.非対称鍵、領収書、およびエラー"
    },
    {
      "indent": 3,
      "text": "[RFC7030] defines the /serverkeygen PC to support server-side generation of asymmetric keys. Keys are returned as either a) an unprotected PKCS #8 when additional security beyond TLS is not employed or b) a CMS asymmetric key package content type that is encapsulated in a signed-data content type that is further encapsulated in an enveloped-data content type when additional security beyond TLS is requested.",
      "ja": "[RFC7030]は非対称鍵のサーバ側の生成をサポートするために/ serverkeygenのPCを定義します。キーは、TLSを超えて追加のセキュリティが使用されていないa）は保護されていないPKCS＃8又はさらなるエンベロープデータコンテンツ内にカプセル化され署名されたデータのコンテンツタイプにカプセル化されているB）CMS非対称キーパッケージコンテンツタイプのいずれかとして返されますTLSを超えた追加のセキュリティが要求されるタイプ。"
    },
    {
      "indent": 3,
      "text": "Some implementations prefer the use of other CMS content types to encapsulate the asymmetric key package. This document extends the content types that can be returned; see Section 8.1.",
      "ja": "一部の実装では、非対称キーパッケージをカプセル化するために、他のCMSのコンテンツタイプを使用することを好みます。この文書では、返すことができるコンテンツの種類を拡張します。 8.1節を参照してください。"
    },
    {
      "indent": 3,
      "text": "[RFC7191] defines content types for key package receipts and errors. This document defines the /serverkeygen/return PC to add support for returning receipts and errors for asymmetric key packages; see Section 8.2.",
      "ja": "[RFC7191]キーパッケージレシートやエラーのコンテンツタイプを定義します。この文書では、非対称キーパッケージの領収書やエラーを返すためのサポートを追加する/ serverkeygen /リターンPCを定義します。セクション8.2を参照してください。"
    },
    {
      "indent": 3,
      "text": "PKCS #12 [RFC7292] (sometimes referred to as \"PFX\" (Personal Information Exchange) or \"P12\") is often used to distribute asymmetric private keys and associated certificates. This document extends the /serverkeygen PC to allow servers to distribute server-generated asymmetric private keys and the associated certificate to clients using PKCS #12; see Section 8.3.",
      "ja": "PKCS＃12 [RFC7292]、多くの場合、非対称秘密鍵と関連する証明書を配布するために使用される（時々「PFX」（個人情報交換）または「P12」と呼びます）。この文書では、サーバーは、PKCS＃12を使用してクライアントにサーバー生成非対称秘密鍵と関連付けられた証明書を配布できるようにする/ serverkeygenのPCを拡張します。セクション8.3を参照してください。"
    },
    {
      "indent": 0,
      "text": "8.1. Asymmetric Key Encapsulation",
      "section_title": true,
      "ja": "8.1. 非対称鍵カプセル"
    },
    {
      "indent": 3,
      "text": "CMS supports a number of content types to encapsulate other CMS content types; [RFC7030] includes one such possibility. Note that when only relying on TLS the returned key is not a CMS content type. This document extends the CMS content types that can be returned.",
      "ja": "CMSは、他のCMSのコンテンツタイプをカプセル化するために、コンテンツタイプの数をサポートしています。 [RFC7030]一つのそのような可能性を含みます。 TLSのみに頼るとき返されたキーは、CMSのコンテンツ・タイプではないことに注意してください。この文書では、返すことができるCMSコンテンツタイプを拡張します。"
    },
    {
      "indent": 3,
      "text": "If the client supports CCC [RFC6010], then the client can indicate that it supports encapsulated asymmetric keys in the encrypted key package [RFC5958] by including the encrypted key package's OID in a content type attribute [RFC2985] in the CSR (Certificate Signing Request) -- aka the certification request -- that it provides to the server. If the client knows a priori that the server supports the encrypted key package content type, then the client need not include the content type attribute in the CSR.",
      "ja": "クライアントは、CCC [RFC6010]をサポートしている場合、クライアントは、CSR（証明書署名要求に[RFC2985]それはコンテンツタイプの属性に暗号化キーパッケージのOIDを含むことにより、暗号化されたキーパッケージ内に封入非対称鍵[RFC5958]をサポートしていることを示すことができます） - 証明書要求別名 - それは、サーバに提供します。クライアントは、サーバが暗号化キーパッケージコンテンツタイプをサポートしていることを演繹的に知っている場合、クライアントは、CSRのコンテンツタイプ属性を含む必要はありません。"
    },
    {
      "indent": 3,
      "text": "In all instances defined herein, the Content-Type is \"application/cms\" [RFC7193]. The optional encapsulatingContent and innerContent parameters SHOULD be included with the Content-Type to indicate the protection afforded to the returned asymmetric key package.",
      "ja": "本明細書で定義される全ての例において、コンテンツタイプは、「アプリケーション/ CMS」[RFC7193]です。オプションのencapsulatingContentとinnerContentパラメータが返さ非対称鍵パッケージに与えられる保護を示すために、コンテンツタイプに含まれるべきです。"
    },
    {
      "indent": 3,
      "text": "If additional encryption and origin authentication are employed, the content associated with application/cms is a DER-encoded signed-data that encapsulates an enveloped-data that encapsulates a signed-data that further encapsulates an asymmetric key package.",
      "ja": "追加的暗号化および発信元認証が使用される場合、アプリケーション/ CMSに関連付けられたコンテンツは、さらに、非対称鍵パッケージをカプセル化する符号付きデータをカプセル化エンベロープデータをカプセル化するDER符号化され署名されたデータです。"
    },
    {
      "indent": 3,
      "text": "If CCC is supported and additional encryption is employed, the content associated with application/cms is a DER-encoded encrypted key package [RFC6032] content type that encapsulates a signed-data that further encapsulates an asymmetric key package.",
      "ja": "CCCがサポートされ、追加の暗号化が使用される場合、アプリケーション/ CMSに関連付けられたコンテンツは、さらに、非対称鍵パッケージをカプセル化する符号付きデータをカプセル化するDER符号化された暗号化キーパッケージ[RFC6032]コンテンツ・タイプです。"
    },
    {
      "indent": 3,
      "text": "If CCC is supported and if additional encryption and additional origin authentication are employed, the content associated with application/cms is a DER-encoded signed-data that encapsulates an encrypted key package content type that encapsulates a signed-data that further encapsulates an asymmetric key package.",
      "ja": "CCCは、サポートされており、追加的暗号化および追加の原点認証が使用される場合、アプリケーション/ CMSに関連付けられたコンテンツは、DER符号化され署名されたデータをさらに非対称鍵をカプセル化し署名されたデータをカプセル化し、暗号化キーパッケージコンテンツタイプをカプセル化している場合パッケージ。"
    },
    {
      "indent": 3,
      "text": "The encrypted key package [RFC6032] provides three choices to encapsulate keys: EncryptedData, EnvelopedData, and AuthEnvelopedData, with EnvelopedData being the mandatory-to-implement choice.",
      "ja": "EnvelopedDataのは、実装に必須の選択であると、はEncryptedData、EnvelopedDataの、そしてAuthEnvelopedData：暗号化キーパッケージ[RFC6032]は、キーをカプセル化するための3つの選択肢を提供します。"
    },
    {
      "indent": 3,
      "text": "When rejecting a request, the server specifies either an HTTP 4xx error or an HTTP 5xx error.",
      "ja": "要求を拒否すると、サーバーは、HTTPの4xxエラーまたはHTTP 5xxのエラーのいずれかを指定します。"
    },
    {
      "indent": 3,
      "text": "If an asymmetric key package or an encrypted key package is digitally signed, the client MUST reject it if the digital signature does not validate back to an authorized TA.",
      "ja": "非対称キーパッケージまたは暗号化キーパッケージがデジタル署名されている場合は、デジタル署名が戻っ認可TAに検証しない場合、クライアントはそれを拒絶しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Note: Absent a policy on the client side requiring a signature, a malicious EST server can simply strip the signature, thus bypassing that check. In that case, this requirement is merely a sanity check, serving to detect mis-signed packages or misconfigured clients.",
      "ja": "注意：不在の署名を必要とするクライアント側のポリシー、悪意のあるESTサーバは、単にので、そのチェックをバイパスし、署名を削除することができます。その場合には、この要件は、誤署名付きパッケージまたは誤設定のクライアントを検出するのに役立つ、単に健全性チェックです。"
    },
    {
      "indent": 3,
      "text": "[RFC3370], [RFC5753], [RFC5754], [RFC6033], [RFC6161], and [RFC6162] provide algorithm details for use when protecting the asymmetric key package and encrypted key package.",
      "ja": "[RFC3370]、[RFC 5753]、[RFC 5754]、[RFC 6033]、[RFC6161]、および非対称鍵パッケージと暗号化キーパッケージを保護する場合、[RFC6162]の使用のためのアルゴリズムの詳細を提供します。"
    },
    {
      "indent": 0,
      "text": "8.2. Asymmetric Key Package Receipts and Errors",
      "section_title": true,
      "ja": "8.2. 非対称キーパッケージ領収書とエラー"
    },
    {
      "indent": 3,
      "text": "Clients can be configured to automatically return receipts after processing an asymmetric key package, return receipts based on processing of the key-package-identifier-and-receipt-request attribute [RFC7191], or return receipts when prompted by a PAL entry. Servers can indicate that clients return a receipt by including the key-package-identifier-and-receipt-request attribute [RFC7191] in a signed-data as a signed attribute.",
      "ja": "クライアントは自動的に、非対称鍵パッケージを処理した後に領収書を返すキーパッケージ識別子と、受信要求属性[RFC7191]の処理に基づいて、領収書を返す、またはPALエントリによって要求された場合、領収書を返すように構成することができます。サーバは、クライアントが署名された属性として署名データに[RFC7191]キーパッケージ識別子と、受信要求の属性を含めることによって、領収書を返すことを示すことができます。"
    },
    {
      "indent": 3,
      "text": "The protocol flow is identical to that depicted in Figure 4 modulo the receipt or error is for asymmetric keys.",
      "ja": "プロトコルフローは、図4に示したものと同一であるレシートまたはエラーが非対称鍵のためのものであるモジュロ。"
    },
    {
      "indent": 3,
      "text": "The server and client processing is as described in Sections 5.2.1 and 5.2.2 modulo the PC, which, for Asymmetric Key Packages, is \"/serverkeygen/return\".",
      "ja": "サーバとクライアントの処理は、セクション5.2.1および5.2.2に記載されているようにPCを法、これは、非対称鍵パッケージのために、「/ serverkeygen /リターン」です。"
    },
    {
      "indent": 0,
      "text": "8.3. PKCS #12",
      "section_title": true,
      "ja": "8.3.  PKCS＃12"
    },
    {
      "indent": 3,
      "text": "PFX is widely deployed and supports protecting keys in the same fashion as CMS, but it does so differently.",
      "ja": "PFXは広く展開し、CMSと同じようにキーを保護するサポートしていますが、それはとても異なっていています。"
    },
    {
      "indent": 0,
      "text": "8.3.1. Server-Side Key Generation Request",
      "section_title": true,
      "ja": "8.3.1. サーバー側の鍵生成要求"
    },
    {
      "indent": 3,
      "text": "Similar to the other server-generated asymmetric keys provided through the /serverkeygen PC:",
      "ja": "/ serverkeygenのPCを通じて提供される他のサーバー生成非対称鍵と同様に："
    },
    {
      "indent": 3,
      "text": "o The certificate request is HTTPS POSTed and is the same format as for the \"/simpleenroll\" and \"/simplereenroll\" path extensions with the same content type.",
      "ja": "O証明書要求は、HTTPS転記され、「/ simpleenroll」と同じコンテンツタイプを有する「/ simplereenroll」パス拡張のと同じフォーマットです。"
    },
    {
      "indent": 3,
      "text": "o In all respects, the server SHOULD treat the CSR as it would any enroll or re-enroll CSR; the only distinction here is that the server MUST ignore the public key values and signature in the CSR. These are included in the request only to allow the reuse of existing codebases for generating and parsing such requests.",
      "ja": "それがCSRを任意の登録または再登録と同じように、O、すべての点では、サーバーは、CSRを扱うべきです。ここでの唯一の違いは、サーバーがCSRにおける公開鍵値と署名を無視しなければならないということです。これらはのみ発生し、このような要求を解析するための既存のコードベースの再利用を可能にし、要求に含まれています。"
    },
    {
      "indent": 3,
      "text": "PBE (password-based encryption) shrouding of PKCS #12 is supported, and this specification makes no attempt to alter this de facto standard. As such, there is no support of the DecryptKeyIdentifier specified in [RFC7030] for use with PKCS #12 (i.e., \"enveloping\" is not supported). Note: The use of PBE requires that the password be distributed to the client; methods to distribute this password are beyond the scope of this document.",
      "ja": "PKCS＃12のPBE（パスワードベースの暗号化）シュラウドがサポートされており、この仕様は、このデファクトスタンダードを変更を試みません。このように、PKCS＃12（すなわち、「包囲」がサポートされていない）で使用するために[RFC7030]で指定DecryptKeyIdentifierのサポートはありません。注意：PBEの使用はパスワードがクライアントに配布されている必要があります。このパスワードを配布する方法は、このドキュメントの範囲を超えています。"
    },
    {
      "indent": 0,
      "text": "8.3.2. Server-Side Key Generation Response",
      "section_title": true,
      "ja": "8.3.2. サーバー側の鍵生成応答"
    },
    {
      "indent": 3,
      "text": "If the request is successful, the server response MUST have an HTTP 200 response code with a Content-Type of \"application/pkcs12\" [PKCS12] that consists of a base64-encoded DER-encoded [X.690] PFX [RFC7292].",
      "ja": "リクエストが成功した場合、サーバ応答は、base64エンコードDER符号化された[X.690] PFX [RFC7292]で構成され、「アプリケーション/ PKCS12」[PKCS12]のコンテンツタイプとHTTP 200応答コードがなければなりません。"
    },
    {
      "indent": 3,
      "text": "Note that this response is different than the response returned as described in Section 4.4.2 of [RFC7030], because here the private key and the certificate are included in the same PFX.",
      "ja": "[RFC7030]のセクション4.4.2で説明したように、秘密鍵と証明書が同じPFXに含まれているここにいるので、この応答は、返された応答は異なることに注意してください。"
    },
    {
      "indent": 3,
      "text": "When rejecting a request, the server MUST specify either an HTTP 4xx error or an HTTP 5xx error. The response data's Content-Type MAY be \"text/plain\" [RFC2046] to convey human-readable error messages.",
      "ja": "要求を拒否すると、サーバーは、HTTPの4xxエラーまたはHTTP 5xxのエラーのいずれかを指定しなければなりません。応答データのContent-Typeが人間が読めるエラーメッセージを伝えるために、「text / plainの」[RFC2046]かもしれ。"
    },
    {
      "indent": 0,
      "text": "9. PAL and Certificate Enrollment",
      "section_title": true,
      "ja": "9. PALおよび証明書の登録"
    },
    {
      "indent": 3,
      "text": "The /fullcmc PC is defined in [RFC7030]; the CMC (Certificate Management over Cryptographic Message Syntax) requirements and packages are defined in [RFC5272], [RFC5273], [RFC5274], and [RFC6402]. This section describes PAL interactions.",
      "ja": "/ fullcmc PCは[RFC7030]で定義されています。 CMC（暗号メッセージ構文を超える証明書の管理）の要件およびパッケージは、[RFC5272]で定義されている、[RFC5273]、[RFC5274]、および[RFC6402]。このセクションでは、PALの相互作用について説明します。"
    },
    {
      "indent": 3,
      "text": "Under normal circumstances, the client-server interactions for PKI enrollment are as follows:",
      "ja": "次のように通常の状況下では、PKIの登録のためのクライアント - サーバー間の相互作用は、次のとおりです。"
    },
    {
      "indent": 11,
      "text": "Client                       Server\n      --------------------->\n  POST req: PKIRequest\n  Content-Type: application/pkcs10\n or\n  POST req: PKIRequest\n  Content-Type: application/pkcs7-mime\n                smime-type=CMC-request",
      "raw": true
    },
    {
      "indent": 18,
      "text": "<--------------------\n       POST res: PKIResponse\n       Content-Type: application/pkcs7-mime\n                     smime-type=certs-only\n      or\n       POST res: PKIResponse\n       Content-Type: application/pkcs7-mime\n                     smime-type=CMC-response",
      "raw": true
    },
    {
      "indent": 3,
      "text": "If the response is rejected during the same session:",
      "ja": "応答は、同じセッション中に拒否された場合："
    },
    {
      "indent": 11,
      "text": "Client                       Server\n       --------------------->\n   POST req: PKIRequest\n   Content-Type: application/pkcs10\n  or\n   POST req: PKIRequest\n   Content-Type: application/pkcs7-mime\n                 smime-type=CMC-request",
      "raw": true
    },
    {
      "indent": 18,
      "text": "<--------------------\n       POST res: empty\n       HTTPS Status Code\n      or\n       POST res: PKIResponse\n       Content-Type: application/pkcs7-mime\n                     smime-type=CMC-response",
      "raw": true
    },
    {
      "indent": 3,
      "text": "If the request is to be filled later:",
      "ja": "要求は後で満たされるのであれば："
    },
    {
      "indent": 11,
      "text": "Client                       Server\n       --------------------->\n   POST req: PKIRequest\n   Content-Type: application/pkcs10\n  or\n   POST req: PKIRequest\n   Content-Type: application/pkcs7-mime\n                 smime-type=CMC-request",
      "raw": true
    },
    {
      "indent": 18,
      "text": "<--------------------\n       POST res: empty\n       HTTPS Status Code\n       + Retry-After\n      or\n       POST res: PKIResponse (pending)\n       Content-Type: application/pkcs7-mime\n                     smime-type=CMC-response",
      "raw": true
    },
    {
      "indent": 13,
      "text": "     --------------------->\n POST req: PKIRequest (same request)\n Content-Type: application/pkcs10\nor\n POST req: PKIRequest (CMC Status Info only)\n Content-Type: application/pkcs7-mime\n               smime-type=CMC-request",
      "raw": true
    },
    {
      "indent": 18,
      "text": "<--------------------\n       POST res: PKIResponse\n       Content-Type: application/pkcs7-mime\n                     smime-type=certs-only\n      or\n       POST res: PKIResponse\n       Content-Type: application/pkcs7-mime\n                     smime-type=CMC-response",
      "raw": true
    },
    {
      "indent": 3,
      "text": "With the PAL, the client begins after pulling the PAL and a Start Issuance PAL package type, essentially adding the following before the request:",
      "ja": "PALでは、クライアントは基本的に要求する前に、以下を追加し、PALおよびスタート発行PALパッケージタイプを引っ張った後始まります。"
    },
    {
      "indent": 11,
      "text": "Client                       Server\n      --------------------->\n  GET req: PAL\n       <--------------------\n              GET res: PAL\n              Content-Type: application/xml",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The client then proceeds as above with a simple PKI enrollment or a full CMC enrollment, or it begins enrollment assisted by a CSR:",
      "ja": "次に、クライアントは、単純なPKI登録またはフルCMCの登録で、上記のように進行するか、それがCSRでアシスト登録を開始します："
    },
    {
      "indent": 11,
      "text": "Client                       Server\n      --------------------->\n  GET req: DS certificate with CSR",
      "raw": true
    },
    {
      "indent": 18,
      "text": "<--------------------\n       GET res: PAL\n       Content-Type: application/csrattrs",
      "raw": true
    },
    {
      "indent": 3,
      "text": "For immediately rejected requests, CMC works well. If the server prematurely closes the connection, then the procedures in Section 6.3.1 of [RFC7230] apply. But this might leave the client and server in a different state. The client could merely resubmit the request, but another option, documented herein, is for the client to instead download the PAL to see if the server has processed the request. Clients might also use this process when they are unable to remain connected to the server for the entire enrollment process; if the server does not or is not able to return a PKIData indicating a status of pending, then the client will not know whether the request was received. If a client uses the PAL and reconnects to determine if the certification or rekey or renew request was processed:",
      "ja": "すぐに拒否された要求の場合、CMCはうまく動作します。サーバーが途中で接続を閉じた場合は、[RFC7230]のセクション6.3.1の手順が適用されます。しかし、これは異なった状態で、クライアントとサーバーを残すかもしれません。クライアントは、単に要求を再送信できますが、クライアントではなくサーバーが要求を処理したかどうかを確認するためにPALをダウンロードするための、本明細書に文書化され、別のオプションは、です。彼らは全体の登録プロセスのためにサーバーに接続したまますることができないとき、クライアントは、このプロセスを使用する場合があります。サーバーがないか、保留中の状態を示すPKIDataを返すことができない場合、クライアントは、要求が受信されたかどうかを知ることができません。クライアントがPALを使用し、認証や要求をリキーまたは更新が処理されたかどうかを判断するために再接続した場合："
    },
    {
      "indent": 3,
      "text": "o Clients MUST authenticate the server, and clients MUST check the server's authorization.",
      "ja": "Oクライアントはサーバを認証しなければならない、とクライアントは、サーバーの承認をチェックしなければなりません。"
    },
    {
      "indent": 3,
      "text": "o The server MUST authenticate the client, and the server MUST check the client's authorization.",
      "ja": "Oサーバはクライアントを認証しなければならない、と、サーバはクライアントの許可をチェックしなければなりません。"
    },
    {
      "indent": 3,
      "text": "o Clients retrieve the PAL, using the /pal URI.",
      "ja": "Oクライアントは/ PAL URIを使用して、PALを取得します。"
    },
    {
      "indent": 3,
      "text": "o Clients and servers use the operation path of \"/simpleenroll\", \"simplereenroll\", or \"/fullcmc\", based on the PAL entry, with an HTTP GET [RFC7231] to get the success or failure response.",
      "ja": "Oクライアントとサーバーは、成功または失敗の応答を取得するためにHTTP GET [RFC7231]とPALのエントリに基づいて「/ simpleenroll」、「simplereenroll」、または「/ fullcmc」の動作パスを、使用しています。"
    },
    {
      "indent": 3,
      "text": "Responses are as specified in [RFC7030].",
      "ja": "[RFC7030]で指定されるように応答があります。"
    },
    {
      "indent": 0,
      "text": "10. Security Considerations",
      "section_title": true,
      "ja": "10.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "This document relies on many other specifications; however, all of the security considerations in [RFC7030] apply. Refer also to the following:",
      "ja": "この文書では、他の多くの仕様に依存しています。ただし、[RFC7030]のセキュリティの考慮事項のすべてが適用されます。以下も参照してください："
    },
    {
      "indent": 3,
      "text": "o For HTTP, HTTPS, and TLS security considerations, see [RFC7231], [RFC2818], and [RFC5246].",
      "ja": "OのためにHTTP、HTTPS、およびTLSのセキュリティの考慮事項、[RFC7231]、[RFC2818]、および[RFC5246]を参照してください。"
    },
    {
      "indent": 3,
      "text": "o For URI security considerations, see [RFC3986].",
      "ja": "O URIのセキュリティの考慮事項については、[RFC3986]を参照してください。"
    },
    {
      "indent": 3,
      "text": "o For content type security considerations, see [RFC4073], [RFC4108], [RFC5272], [RFC5652], [RFC5751], [RFC5934], [RFC5958], [RFC6031], [RFC6032], [RFC6268], [RFC6402], [RFC7191], and [RFC7292].",
      "ja": "コンテンツタイプのセキュリティの考慮事項については、O、[RFC4073]を参照して、[RFC4108]、[RFC5272]、[RFC5652]、[RFC5751]、[RFC5934]、[RFC5958]、[RFC6031]、[RFC6032]、[RFC6268]、[RFC6402 ]、[RFC7191]及び[RFC7292]。"
    },
    {
      "indent": 3,
      "text": "o For algorithms used to protect packages, see [RFC3370], [RFC5649], [RFC5753], [RFC5754], [RFC5959], [RFC6033], [RFC6160], [RFC6161], [RFC6162], and [RFC7192].",
      "ja": "パッケージを保護するために使用されるアルゴリズムについてはO、[RFC3370]を参照し、[RFC 5649]、[RFC 5753]、[RFC 5754]、[RFC5959]、[RFC6033]、[RFC6160]、[RFC6161]、[RFC6162]、および[ RFC7192]。"
    },
    {
      "indent": 3,
      "text": "o For random numbers, see [RFC4086].",
      "ja": "O乱数については、[RFC4086]を参照してください。"
    },
    {
      "indent": 3,
      "text": "o For server-generated asymmetric key pairs, see [RFC7030].",
      "ja": "Oサーバが生成非対称鍵ペアの場合は、[RFC7030]を参照してください。"
    },
    {
      "indent": 0,
      "text": "11. IANA Considerations",
      "section_title": true,
      "ja": "11. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "IANA has created the \"PAL Package Types\" registry and performed three registrations: PAL Name Space, PAL XML Schema, and PAL Package Types.",
      "ja": "IANAは「PALパッケージタイプ」レジストリを作成し、3件の登録を行っています：PALネームスペース、PAL XMLスキーマ、およびPALパッケージタイプを。"
    },
    {
      "indent": 0,
      "text": "11.1. PAL Name Space",
      "section_title": true,
      "ja": "11.1.  PALネームスペース"
    },
    {
      "indent": 3,
      "text": "This section registers a new XML namespace [XMLNS], \"urn:ietf:params:xml:ns:pal\", per the guidelines in [RFC3688]:",
      "ja": "、[RFC3688]のガイドラインあたりのこのセクションでは、新しいXML名前空間[XMLNS]、 \"：IETF：のparams：XML：：NS PAL壷\" を登録します。"
    },
    {
      "indent": 6,
      "text": "URI: urn:ietf:params:xml:ns:pal Registrant Contact: Sean Turner (sean@sn3rd.com) XML: BEGIN <?xml version=\"1.0\"?> <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"https://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"> <html xmlns=\"https://www.w3.org/1999/xhtml\" xml:lang=\"en\"> <head> <title>Package Availability List</title> </head> <body> <h1>Namespace for Package Availability List</h1> <h2>urn:ietf:params:xml:ns:pal</h2> <p>See RFC 8295</p> </body> </html> END",
      "ja": "URI：URN：IETF：のparams：XML：NS：PAL登録者連絡先：ショーン・ターナー（sean@sn3rd.com）XML：<DOCTYPE用HTML PUBLIC「BEGIN  -  // W3C // <XMLバージョンは、= \"1.0\"？>！ DTD XHTML 1.0厳格// EN \" \"https://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"> <HTMLのxmlns =\" https://www.w3.org/1999/xhtml \"XML：LANG =\" EN \"> <HEAD> <TITLE>パッケージ状況一覧</ TITLE> </ HEAD> <BODY> <H1>パッケージ状況リストの名前空間</ H1> <H2> URN：IETF：のparams： XML：NS：PAL </ H2> <P> RFC 8295 </ P> </ body> </ html>このENDを参照してください。"
    },
    {
      "indent": 0,
      "text": "11.2. PAL XML Schema",
      "section_title": true,
      "ja": "１１。２。 ぱＬ ＸＭＬ Ｓちぇま"
    },
    {
      "indent": 3,
      "text": "This section registers an XML schema as per the guidelines in [RFC3688].",
      "ja": "このセクションでは、[RFC3688]のガイドラインに従ってXMLスキーマを登録します。"
    },
    {
      "indent": 6,
      "text": "URI: urn:ietf:params:xml:schema:pal Registrant Contact: Sean Turner (sean@sn3rd.com) XML: See Section 2.1.2.",
      "ja": "URI：URN：IETF：のparams：XML：スキーマ：PAL登録者連絡先：ショーン・ターナー（sean@sn3rd.com）XML：セクション2.1.2を参照してください。"
    },
    {
      "indent": 0,
      "text": "11.3. PAL Package Types",
      "section_title": true,
      "ja": "11.3.  PALパッケージタイプ"
    },
    {
      "indent": 3,
      "text": "IANA has created a new registry named \"PAL Package Types\". This registry is for PAL package types whose initial values are found in Section 2.1.1. Future registrations of PAL package types are subject to Expert Review, as defined in RFC 8126 [RFC8126]. Package types MUST be paired with a media type; package types specify the path components to be used that in turn specify the media type used.",
      "ja": "IANAは「PALパッケージタイプ」という名前の新しいレジストリを作成しました。このレジストリは、その初期値2.1.1で発見されPALパッケージタイプのためです。 RFC 8126 [RFC8126]で定義されているPALパッケージタイプの今後の登録は、専門家レビューの対象となっています。パッケージの種類は、メディアタイプと組み合わせる必要があります。パッケージタイプは、順番に使用されるメディアタイプを指定することに使用するパスコンポーネントを指定します。"
    },
    {
      "indent": 0,
      "text": "12. References",
      "section_title": true,
      "ja": "12.参考文献"
    },
    {
      "indent": 0,
      "text": "12.1. Normative References",
      "section_title": true,
      "ja": "12.1. 引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2046] Freed, N. and N. Borenstein, \"Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types\", RFC 2046, DOI 10.17487/RFC2046, November 1996, <https://www.rfc-editor.org/info/rfc2046>.",
      "ja": "[RFC2046]解放され、N.とN. Borenstein、 \"マルチパーパスインターネットメールエクステンション（MIME）パート2：メディアタイプ\"、RFC 2046、DOI 10.17487 / RFC2046、1996年11月、<https://www.rfc-editor.org /情報/ RFC2046>。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <https://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<https://www.rfc-editor.org/info/ RFC2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC2585] Housley, R. and P. Hoffman, \"Internet X.509 Public Key Infrastructure Operational Protocols: FTP and HTTP\", RFC 2585, DOI 10.17487/RFC2585, May 1999, <https://www.rfc-editor.org/info/rfc2585>.",
      "ja": "[RFC2585] Housley氏、R.とP.ホフマン、 \"インターネットX.509公開鍵基盤運用プロトコル：FTPやHTTP\"、RFC 2585、DOI 10.17487 / RFC2585、1999年5月、<HTTPS：//www.rfc-editor。組織/情報/ rfc2585>。"
    },
    {
      "indent": 3,
      "text": "[RFC2818] Rescorla, E., \"HTTP Over TLS\", RFC 2818, DOI 10.17487/RFC2818, May 2000, <https://www.rfc-editor.org/info/rfc2818>.",
      "ja": "[RFC2818]レスコラ、E.、 \"TLSオーバーHTTP\"、RFC 2818、DOI 10.17487 / RFC2818、2000年5月、<https://www.rfc-editor.org/info/rfc2818>。"
    },
    {
      "indent": 3,
      "text": "[RFC2985] Nystrom, M. and B. Kaliski, \"PKCS #9: Selected Object Classes and Attribute Types Version 2.0\", RFC 2985, DOI 10.17487/RFC2985, November 2000, <https://www.rfc-editor.org/info/rfc2985>.",
      "ja": "[RFC2985] Nystrom、M.とB. Kaliski、 \"PKCS＃9：選択したオブジェクトクラスと属性の型バージョン2.0\"、RFC 2985、DOI 10.17487 / RFC2985、2000年11月、<https://www.rfc-editor.org /情報/ rfc2985>。"
    },
    {
      "indent": 3,
      "text": "[RFC3370] Housley, R., \"Cryptographic Message Syntax (CMS) Algorithms\", RFC 3370, DOI 10.17487/RFC3370, August 2002, <https://www.rfc-editor.org/info/rfc3370>.",
      "ja": "[RFC3370] Housley氏、R.、 \"暗号メッセージ構文（CMS）アルゴリズム\"、RFC 3370、DOI 10.17487 / RFC3370、2002年8月、<https://www.rfc-editor.org/info/rfc3370>。"
    },
    {
      "indent": 3,
      "text": "[RFC3394] Schaad, J. and R. Housley, \"Advanced Encryption Standard (AES) Key Wrap Algorithm\", RFC 3394, DOI 10.17487/RFC3394, September 2002, <https://www.rfc-editor.org/info/rfc3394>.",
      "ja": "[RFC3394] Schaad、J.とR. Housley氏、 \"高度暗号化標準（AES）キーラップアルゴリズム\"、RFC 3394、DOI 10.17487 / RFC3394、2002年9月、<https://www.rfc-editor.org/info/ RFC3394>。"
    },
    {
      "indent": 3,
      "text": "[RFC3688] Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688, DOI 10.17487/RFC3688, January 2004, <https://www.rfc-editor.org/info/rfc3688>.",
      "ja": "[RFC3688] Mealling、M.、 \"IETF XMLレジストリ\"、BCP 81、RFC 3688、DOI 10.17487 / RFC3688、2004年1月、<https://www.rfc-editor.org/info/rfc3688>。"
    },
    {
      "indent": 3,
      "text": "[RFC3986] Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform Resource Identifier (URI): Generic Syntax\", STD 66, RFC 3986, DOI 10.17487/RFC3986, January 2005, <https://www.rfc-editor.org/info/rfc3986>.",
      "ja": "[RFC3986]バーナーズ - リー、T.、フィールディング、R.、およびL. Masinter、 \"ユニフォームリソース識別子（URI）：汎用構文\"、STD 66、RFC 3986、DOI 10.17487 / RFC3986、2005年1月<HTTPS：/ /www.rfc-editor.org/info/rfc3986>。"
    },
    {
      "indent": 3,
      "text": "[RFC4073] Housley, R., \"Protecting Multiple Contents with the Cryptographic Message Syntax (CMS)\", RFC 4073, DOI 10.17487/RFC4073, May 2005, <https://www.rfc-editor.org/info/rfc4073>.",
      "ja": "[RFC4073] Housley氏、R.、 \"暗号メッセージ構文（CMS）で複数のコンテンツを保護する\"、RFC 4073、DOI 10.17487 / RFC4073、2005年5月、<https://www.rfc-editor.org/info/rfc4073> 。"
    },
    {
      "indent": 3,
      "text": "[RFC4108] Housley, R., \"Using Cryptographic Message Syntax (CMS) to Protect Firmware Packages\", RFC 4108, DOI 10.17487/RFC4108, August 2005, <https://www.rfc-editor.org/info/rfc4108>.",
      "ja": "[RFC4108] Housley氏、R.、 \"ファームウェアパッケージを保護するために暗号メッセージ構文（CMS）の使用\"、RFC 4108、DOI 10.17487 / RFC4108、2005年8月、<https://www.rfc-editor.org/info/rfc4108> 。"
    },
    {
      "indent": 3,
      "text": "[RFC4514] Zeilenga, K., Ed., \"Lightweight Directory Access Protocol (LDAP): String Representation of Distinguished Names\", RFC 4514, DOI 10.17487/RFC4514, June 2006, <https://www.rfc-editor.org/info/rfc4514>.",
      "ja": "[RFC4514] Zeilenga、K.、エド、 \"ライトウェイトディレクトリアクセスプロトコル（LDAP）：識別名の文字列表現\"。、RFC 4514、DOI 10.17487 / RFC4514、2006年6月、<https://www.rfc-editor.org /情報/ rfc4514>。"
    },
    {
      "indent": 3,
      "text": "[RFC5246] Dierks, T. and E. Rescorla, \"The Transport Layer Security (TLS) Protocol Version 1.2\", RFC 5246, DOI 10.17487/RFC5246, August 2008, <https://www.rfc-editor.org/info/rfc5246>.",
      "ja": "[RFC5246]ダークス、T.およびE.レスコラ、 \"トランスポート層セキュリティ（TLS）プロトコルバージョン1.2\"、RFC 5246、DOI 10.17487 / RFC5246、2008年8月、<https://www.rfc-editor.org/info / RFC5246>。"
    },
    {
      "indent": 3,
      "text": "[RFC5272] Schaad, J. and M. Myers, \"Certificate Management over CMS (CMC)\", RFC 5272, DOI 10.17487/RFC5272, June 2008, <https://www.rfc-editor.org/info/rfc5272>.",
      "ja": "[RFC5272] Schaad、J.とM.マイヤーズ、RFC 5272 \"CMS（CMC）以上の証明書の管理\"、DOI 10.17487 / RFC5272、2008年6月、<https://www.rfc-editor.org/info/rfc5272> 。"
    },
    {
      "indent": 3,
      "text": "[RFC5273] Schaad, J. and M. Myers, \"Certificate Management over CMS (CMC): Transport Protocols\", RFC 5273, DOI 10.17487/RFC5273, June 2008, <https://www.rfc-editor.org/info/rfc5273>.",
      "ja": "[RFC5273] Schaad、J.とM.マイヤーズ、 \"CMS（CMC）以上の証明書の管理：トランスポートプロトコル\"、RFC 5273、DOI 10.17487 / RFC5273、2008年6月、<https://www.rfc-editor.org/info / rfc5273>。"
    },
    {
      "indent": 3,
      "text": "[RFC5274] Schaad, J. and M. Myers, \"Certificate Management Messages over CMS (CMC): Compliance Requirements\", RFC 5274, DOI 10.17487/RFC5274, June 2008, <https://www.rfc-editor.org/info/rfc5274>.",
      "ja": "[RFC5274] Schaad、J.とM.マイヤーズ、 \"CMS（CMC）以上の証明書管理メッセージ：コンプライアンス要件\"、RFC 5274、DOI 10.17487 / RFC5274、2008年6月、<https://www.rfc-editor.org/情報/ rfc5274>。"
    },
    {
      "indent": 3,
      "text": "[RFC5280] Cooper, D., Santesson, S., Farrell, S., Boeyen, S., Housley, R., and W. Polk, \"Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile\", RFC 5280, DOI 10.17487/RFC5280, May 2008, <https://www.rfc-editor.org/info/rfc5280>.",
      "ja": "[RFC5280]クーパー、D.、Santesson、S.、ファレル、S.、Boeyen、S.、Housley氏、R.、およびW.ポーク、「インターネットX.509公開鍵暗号基盤証明書と証明書失効リスト（CRL）のプロフィール」、RFC 5280、DOI 10.17487 / RFC5280、2008年5月、<https://www.rfc-editor.org/info/rfc5280>。"
    },
    {
      "indent": 3,
      "text": "[RFC5649] Housley, R. and M. Dworkin, \"Advanced Encryption Standard (AES) Key Wrap with Padding Algorithm\", RFC 5649, DOI 10.17487/RFC5649, September 2009, <https://www.rfc-editor.org/info/rfc5649>.",
      "ja": "[RFC5649] Housley氏、R.とM. Dworkin、 \"高度暗号化標準（AES）パディングアルゴリズムとキーラップ\"、RFC 5649、DOI 10.17487 / RFC5649、2009年9月、<https://www.rfc-editor.org/情報/ rfc5649>。"
    },
    {
      "indent": 3,
      "text": "[RFC5652] Housley, R., \"Cryptographic Message Syntax (CMS)\", STD 70, RFC 5652, DOI 10.17487/RFC5652, September 2009, <https://www.rfc-editor.org/info/rfc5652>.",
      "ja": "[RFC5652] Housley氏、R.、 \"暗号メッセージ構文（CMS）\"、STD 70、RFC 5652、DOI 10.17487 / RFC5652、2009年9月、<https://www.rfc-editor.org/info/rfc5652>。"
    },
    {
      "indent": 3,
      "text": "[RFC5751] Ramsdell, B. and S. Turner, \"Secure/Multipurpose Internet Mail Extensions (S/MIME) Version 3.2 Message Specification\", RFC 5751, DOI 10.17487/RFC5751, January 2010, <https://www.rfc-editor.org/info/rfc5751>.",
      "ja": "[RFC5751] Ramsdell、B.、およびS.ターナーは、 \"セキュア/多目的インターネットメール拡張（S / MIME）バージョン3.2メッセージ仕様\"、RFC 5751、DOI 10.17487 / RFC5751、2010年1月、<HTTPS：//www.rfc- editor.org/info/rfc5751>。"
    },
    {
      "indent": 3,
      "text": "[RFC5753] Turner, S. and D. Brown, \"Use of Elliptic Curve Cryptography (ECC) Algorithms in Cryptographic Message Syntax (CMS)\", RFC 5753, DOI 10.17487/RFC5753, January 2010, <https://www.rfc-editor.org/info/rfc5753>.",
      "ja": "[RFC5753]ターナー、S.およびD.ブラウン、 \"暗号メッセージ構文（CMS）での楕円曲線暗号（ECC）アルゴリズムの使用\"、RFC 5753、DOI 10.17487 / RFC5753、2010年1月、<HTTPS：//www.rfc -editor.org/info/rfc5753>。"
    },
    {
      "indent": 3,
      "text": "[RFC5754] Turner, S., \"Using SHA2 Algorithms with Cryptographic Message Syntax\", RFC 5754, DOI 10.17487/RFC5754, January 2010, <https://www.rfc-editor.org/info/rfc5754>.",
      "ja": "[RFC5754]ターナー、S.、 \"暗号メッセージ構文とSHA2アルゴリズムを使用する\"、RFC 5754、DOI 10.17487 / RFC5754、2010年1月、<https://www.rfc-editor.org/info/rfc5754>。"
    },
    {
      "indent": 3,
      "text": "[RFC5934] Housley, R., Ashmore, S., and C. Wallace, \"Trust Anchor Management Protocol (TAMP)\", RFC 5934, DOI 10.17487/RFC5934, August 2010, <https://www.rfc-editor.org/info/rfc5934>.",
      "ja": "[RFC5934] Housley氏、R.、モア、S.、およびC.ウォレス、 \"トラストアンカー管理プロトコル（TAMP）\"、RFC 5934、DOI 10.17487 / RFC5934、2010年8月、<HTTPS：//www.rfc-editor。組織/情報/ rfc5934>。"
    },
    {
      "indent": 3,
      "text": "[RFC5958] Turner, S., \"Asymmetric Key Packages\", RFC 5958, DOI 10.17487/RFC5958, August 2010, <https://www.rfc-editor.org/info/rfc5958>.",
      "ja": "[RFC5958]ターナー、S.、 \"非対称鍵パッケージ\"、RFC 5958、DOI 10.17487 / RFC5958、2010年8月、<https://www.rfc-editor.org/info/rfc5958>。"
    },
    {
      "indent": 3,
      "text": "[RFC5959] Turner, S., \"Algorithms for Asymmetric Key Package Content Type\", RFC 5959, DOI 10.17487/RFC5959, August 2010, <https://www.rfc-editor.org/info/rfc5959>.",
      "ja": "[RFC5959]ターナー、S.、RFC 5959、DOI 10.17487 / RFC5959 \"非対称鍵パッケージのコンテンツタイプのアルゴリズム\"、2010年8月、<https://www.rfc-editor.org/info/rfc5959>。"
    },
    {
      "indent": 3,
      "text": "[RFC5967] Turner, S., \"The application/pkcs10 Media Type\", RFC 5967, DOI 10.17487/RFC5967, August 2010, <https://www.rfc-editor.org/info/rfc5967>.",
      "ja": "[RFC5967]ターナー、S.、 \"アプリケーション/ PKCS10メディアタイプ\"、RFC 5967、DOI 10.17487 / RFC5967、2010年8月、<https://www.rfc-editor.org/info/rfc5967>。"
    },
    {
      "indent": 3,
      "text": "[RFC6010] Housley, R., Ashmore, S., and C. Wallace, \"Cryptographic Message Syntax (CMS) Content Constraints Extension\", RFC 6010, DOI 10.17487/RFC6010, September 2010, <https://www.rfc-editor.org/info/rfc6010>.",
      "ja": "[RFC6010] Housley氏、R.、モア、S.、およびC.ウォレス、 \"暗号メッセージ構文（CMS）コンテンツ制約拡張\"、RFC 6010、DOI 10.17487 / RFC6010、2010年9月、<HTTPS：//www.rfc- editor.org/info/rfc6010>。"
    },
    {
      "indent": 3,
      "text": "[RFC6031] Turner, S. and R. Housley, \"Cryptographic Message Syntax (CMS) Symmetric Key Package Content Type\", RFC 6031, DOI 10.17487/RFC6031, December 2010, <https://www.rfc-editor.org/info/rfc6031>.",
      "ja": "[RFC6031]ターナー、S.とR. Housley氏、 \"暗号メッセージ構文（CMS）対称鍵パッケージのコンテンツタイプ\"、RFC 6031、DOI 10.17487 / RFC6031、2010年12月、<https://www.rfc-editor.org/情報/ rfc6031>。"
    },
    {
      "indent": 3,
      "text": "[RFC6032] Turner, S. and R. Housley, \"Cryptographic Message Syntax (CMS) Encrypted Key Package Content Type\", RFC 6032, DOI 10.17487/RFC6032, December 2010, <https://www.rfc-editor.org/info/rfc6032>.",
      "ja": "[RFC6032]ターナー、S.とR. Housley氏、 \"暗号メッセージ構文（CMS）暗号化されたキーパッケージのコンテンツタイプ\"、RFC 6032、DOI 10.17487 / RFC6032、2010年12月、<https://www.rfc-editor.org/情報/ rfc6032>。"
    },
    {
      "indent": 3,
      "text": "[RFC6033] Turner, S., \"Algorithms for Cryptographic Message Syntax (CMS) Encrypted Key Package Content Type\", RFC 6033, DOI 10.17487/RFC6033, December 2010, <https://www.rfc-editor.org/info/rfc6033>.",
      "ja": "[RFC6033]ターナー、S.、 \"暗号メッセージ構文（CMS）暗号化されたキーパッケージのコンテンツタイプのアルゴリズム\"、RFC 6033、DOI 10.17487 / RFC6033、2010年12月、<https://www.rfc-editor.org/info/ rfc6033>。"
    },
    {
      "indent": 3,
      "text": "[RFC6160] Turner, S., \"Algorithms for Cryptographic Message Syntax (CMS) Protection of Symmetric Key Package Content Types\", RFC 6160, DOI 10.17487/RFC6160, April 2011, <https://www.rfc-editor.org/info/rfc6160>.",
      "ja": "[RFC6160]ターナー、S.、RFC 6160、DOI 10.17487 / RFC6160、2011年4月、<https://www.rfc-editor.org/ \"対称鍵パッケージのコンテンツタイプの暗号メッセージ構文（CMS）保護のためのアルゴリズム\"情報/ rfc6160>。"
    },
    {
      "indent": 3,
      "text": "[RFC6161] Turner, S., \"Elliptic Curve Algorithms for Cryptographic Message Syntax (CMS) Encrypted Key Package Content Type\", RFC 6161, DOI 10.17487/RFC6161, April 2011, <https://www.rfc-editor.org/info/rfc6161>.",
      "ja": "[RFC6161]ターナー、S.、RFC 6161、DOI 10.17487は/ RFC6161、2011年4月、< \"楕円曲線アルゴリズム暗号メッセージ構文（CMS）暗号化されたキーパッケージのコンテンツタイプの\" https://www.rfc-editor.org/情報/ rfc6161>。"
    },
    {
      "indent": 3,
      "text": "[RFC6162] Turner, S., \"Elliptic Curve Algorithms for Cryptographic Message Syntax (CMS) Asymmetric Key Package Content Type\", RFC 6162, DOI 10.17487/RFC6162, April 2011, <https://www.rfc-editor.org/info/rfc6162>.",
      "ja": "[RFC6162]ターナー、S.、RFC 6162、DOI 10.17487 / RFC6162、2011年4月、<https://www.rfc-editor.org/ \"暗号メッセージ構文（CMS）非対称鍵パッケージのコンテンツタイプの楕円曲線アルゴリズム\"情報/ rfc6162>。"
    },
    {
      "indent": 3,
      "text": "[RFC6268] Schaad, J. and S. Turner, \"Additional New ASN.1 Modules for the Cryptographic Message Syntax (CMS) and the Public Key Infrastructure Using X.509 (PKIX)\", RFC 6268, DOI 10.17487/RFC6268, July 2011, <https://www.rfc-editor.org/info/rfc6268>.",
      "ja": "[RFC6268] Schaad、J.とS.ターナー、 \"暗号メッセージ構文（CMS）とX.509を使用した公開鍵基盤（PKIX）のための追加の新しいASN.1モジュール\"、RFC 6268、DOI 10.17487 / RFC6268、7月2011年、<https://www.rfc-editor.org/info/rfc6268>。"
    },
    {
      "indent": 3,
      "text": "[RFC6402] Schaad, J., \"Certificate Management over CMS (CMC) Updates\", RFC 6402, DOI 10.17487/RFC6402, November 2011, <https://www.rfc-editor.org/info/rfc6402>.",
      "ja": "[RFC6402] Schaad、J.、 \"証明書の管理CMS（CMC）のアップデートオーバー\"、RFC 6402、DOI 10.17487 / RFC6402、2011年11月、<https://www.rfc-editor.org/info/rfc6402>。"
    },
    {
      "indent": 3,
      "text": "[RFC7030] Pritikin, M., Ed., Yee, P., Ed., and D. Harkins, Ed., \"Enrollment over Secure Transport\", RFC 7030, DOI 10.17487/RFC7030, October 2013, <https://www.rfc-editor.org/info/rfc7030>.",
      "ja": "[RFC7030] Pritikin、M.、エド、イー、P.、エド、およびD.ハーキンズ、エド、 \"セキュアなトランスポート上で登録\"、RFC 7030、DOI 10.17487 / RFC7030、2013年10月、<HTTPS：。。。// www.rfc-editor.org/info/rfc7030>。"
    },
    {
      "indent": 3,
      "text": "[RFC7303] Thompson, H. and C. Lilley, \"XML Media Types\", RFC 7303, DOI 10.17487/RFC7303, July 2014, <https://www.rfc-editor.org/info/rfc7303>.",
      "ja": "[RFC7303]トンプソン、H.およびC.リリー、 \"XMLのメディアタイプ\"、RFC 7303、DOI 10.17487 / RFC7303、2014年7月、<https://www.rfc-editor.org/info/rfc7303>。"
    },
    {
      "indent": 3,
      "text": "[RFC7191] Housley, R., \"Cryptographic Message Syntax (CMS) Key Package Receipt and Error Content Types\", RFC 7191, DOI 10.17487/RFC7191, April 2014, <https://www.rfc-editor.org/info/rfc7191>.",
      "ja": "[RFC7191] Housley氏、R.、 \"暗号メッセージ構文（CMS）鍵パッケージの領収書とエラーコンテンツタイプ\"、RFC 7191、DOI 10.17487 / RFC7191、2014年4月、<https://www.rfc-editor.org/info/ rfc7191>。"
    },
    {
      "indent": 3,
      "text": "[RFC7192] Turner, S., \"Algorithms for Cryptographic Message Syntax (CMS) Key Package Receipt and Error Content Types\", RFC 7192, DOI 10.17487/RFC7192, April 2014, <https://www.rfc-editor.org/info/rfc7192>.",
      "ja": "[RFC7192]ターナー、S.、RFC 7192 \"暗号メッセージ構文（CMS）鍵パッケージの領収書とエラーコンテンツタイプのアルゴリズム\"、DOI 10.17487 / RFC7192、2014年4月、<https://www.rfc-editor.org/情報/ rfc7192>。"
    },
    {
      "indent": 3,
      "text": "[RFC7193] Turner, S., Housley, R., and J. Schaad, \"The application/cms Media Type\", RFC 7193, DOI 10.17487/RFC7193, April 2014, <https://www.rfc-editor.org/info/rfc7193>.",
      "ja": "[RFC7193]ターナー、S.、Housley氏、R.、およびJ. Schaad、 \"アプリケーション/ CMSメディアタイプ\"、RFC 7193、DOI 10.17487 / RFC7193、2014年4月、<https://www.rfc-editor.org /情報/ rfc7193>。"
    },
    {
      "indent": 3,
      "text": "[RFC7230] Fielding, R., Ed., and J. Reschke, Ed., \"Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing\", RFC 7230, DOI 10.17487/RFC7230, June 2014, <https://www.rfc-editor.org/info/rfc7230>.",
      "ja": "[RFC7230]フィールディング、R.、エド、及びJ. Reschke、編、 \"ハイパーテキスト転送プロトコル（HTTP / 1.1）：メッセージの構文およびルーティング\"。。、RFC 7230、DOI 10.17487 / RFC7230、2014年6月、<HTTPS：/ /www.rfc-editor.org/info/rfc7230>。"
    },
    {
      "indent": 3,
      "text": "[RFC7231] Fielding, R., Ed., and J. Reschke, Ed., \"Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content\", RFC 7231, DOI 10.17487/RFC7231, June 2014, <https://www.rfc-editor.org/info/rfc7231>.",
      "ja": "[RFC7231]フィールディング、R.、エド、及びJ. Reschke、編、 \"ハイパーテキスト転送プロトコル（HTTP / 1.1）：セマンティクスおよびコンテンツ\"。。、RFC 7231、DOI 10.17487 / RFC7231、2014年6月、<https：//でwww.rfc-editor.org/info/rfc7231>。"
    },
    {
      "indent": 3,
      "text": "[RFC7292] Moriarty, K., Ed., Nystrom, M., Parkinson, S., Rusch, A., and M. Scott, \"PKCS #12: Personal Information Exchange Syntax v1.1\", RFC 7292, DOI 10.17487/RFC7292, July 2014, <https://www.rfc-editor.org/info/rfc7292>.",
      "ja": "[RFC7292]モリアーティ、K.、エド、Nystrom、M.、パーキンソン、S.、ラッシュ、A.、およびM.スコット、 \"PKCS＃12：個人情報交換構文V1.1\"、RFC 7292、DOI 10.17487 / RFC7292、2014年7月、<https://www.rfc-editor.org/info/rfc7292>。"
    },
    {
      "indent": 3,
      "text": "[RFC8126] Cotton, M., Leiba, B., and T. Narten, \"Guidelines for Writing an IANA Considerations Section in RFCs\", BCP 26, RFC 8126, DOI 10.17487/RFC8126, June 2017, <https://www.rfc-editor.org/info/rfc8126>.",
      "ja": "[RFC8126]綿、M.、Leiba、B.、およびT. Narten氏、 \"RFCsにIANA問題部に書くためのガイドライン\"、BCP 26、RFC 8126、DOI 10.17487 / RFC8126、2017年6月、<https：//でWWW .rfc-editor.org /情報/ rfc8126>。"
    },
    {
      "indent": 3,
      "text": "[RFC8174] Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174, May 2017, <https://www.rfc-editor.org/info/rfc8174>.",
      "ja": "[RFC8174] Leiba、B.、 \"RFC 2119個のキーワードに小文字VS大文字の曖昧さ\"、BCP 14、RFC 8174、DOI 10.17487 / RFC8174、2017年5月、<https://www.rfc-editor.org/info/ rfc8174>。"
    },
    {
      "indent": 3,
      "text": "[RFC8259] Bray, T., Ed., \"The JavaScript Object Notation (JSON) Data Interchange Format\", STD 90, RFC 8259, DOI 10.17487/RFC8259, December 2017, <https://www.rfc-editor.org/info/rfc8259>.",
      "ja": "[RFC8259]ブレイ、T.、エド。、 \"JavaScriptオブジェクト表記（JSON）データ交換フォーマット\"、STD 90、RFC 8259、DOI 10.17487 / RFC8259、2017年12月、<https://www.rfc-editor.org /情報/ rfc8259>。"
    },
    {
      "indent": 3,
      "text": "[XML] Bray, T., Paoli, J., Sperberg-McQueen, M., Maler, E., and F. Yergeau, \"Extensible Markup Language (XML) 1.0 (Fifth Edition)\", World Wide Web Consortium Recommendation REC-xml-20081126, November 2008, <https://www.w3.org/TR/2008/REC-xml-20081126/>.",
      "ja": "[XML]ブレイ、T.、パオリ、J.、Sperberg-マックイーン、M.、MALER、E.、およびF. Yergeau、 \"拡張マークアップ言語（XML）1.0（第5版）\"、ワールドワイドウェブコンソーシアム推薦REC -xml-20081126、2008年11月、<https://www.w3.org/TR/2008/REC-xml-20081126/>。"
    },
    {
      "indent": 3,
      "text": "[XMLSCHEMA] Malhotra, A. and P. Biron, \"XML Schema Part 2: Datatypes Second Edition\", World Wide Web Consortium Recommendation REC-xmlschema-2-20041028, October 2004, <https://www.w3.org/TR/2004/REC-xmlschema-2-20041028>.",
      "ja": "[XMLSCHEMA]マルホトラ、A.、およびP.ビロン、 \"XMLスキーマパート2：データ型第二版\"、World Wide Web Consortium（W3C）の勧告REC-XMLSCHEMA-2から20041028、2004年10月、<https://www.w3.org/ TR / 2004 / REC-XMLSCHEMA-2から20041028>。"
    },
    {
      "indent": 3,
      "text": "[X.690] ITU-T, \"Information technology - ASN.1 encoding rules: Specification of Basic Encoding Rules (BER), Canonical Encoding Rules (CER) and Distinguished Encoding Rules (DER)\", ITU-T Recommendation X.690, ISO/IEC 8825-1, August 2015, <https://www.itu.int/rec/T-REC-X.690/en>.",
      "ja": "[X.690] ITU-T、 \"情報技術 -  ASN.1符号化ルール：基本符号化規則（BER）、Canonicalの符号化規則（CER）と識別符号化規則（DER）の仕様\"、ITU-T勧告X.690 、ISO / IEC 8825から1、2015年8月、<https://www.itu.int/rec/T-REC-X.690/en>。"
    },
    {
      "indent": 0,
      "text": "12.2. Informative References",
      "section_title": true,
      "ja": "12.2. 参考文献"
    },
    {
      "indent": 3,
      "text": "[PKCS12] IANA, \"PKCS #12\", <https://www.iana.org/assignments/ media-types/application/pkcs12>.",
      "ja": "[PKCS12] IANA、 \"PKCS＃12\"、<https://www.iana.org/assignments/メディアタイプ/アプリケーション/ PKCS12>。"
    },
    {
      "indent": 3,
      "text": "[RFC4086] Eastlake 3rd, D., Schiller, J., and S. Crocker, \"Randomness Requirements for Security\", BCP 106, RFC 4086, DOI 10.17487/RFC4086, June 2005, <https://www.rfc-editor.org/info/rfc4086>.",
      "ja": "[RFC4086]イーストレーク3日、D.、シラー、J.、およびS.クロッカー、 \"セキュリティのためにランダム要件\"、BCP 106、RFC 4086、DOI 10.17487 / RFC4086、2005年6月、<HTTPS：//www.rfc-editor .ORG /情報/ RFC4086>。"
    },
    {
      "indent": 3,
      "text": "[RFC4949] Shirey, R., \"Internet Security Glossary, Version 2\", FYI 36, RFC 4949, DOI 10.17487/RFC4949, August 2007, <https://www.rfc-editor.org/info/rfc4949>.",
      "ja": "[RFC4949] Shirey、R.、 \"インターネットセキュリティ用語集、バージョン2\"、FYI 36、RFC 4949、DOI 10.17487 / RFC4949、2007年8月、<https://www.rfc-editor.org/info/rfc4949>。"
    },
    {
      "indent": 3,
      "text": "[XMLNS] Bray, T., Hollander, D., Layman, A., Tobin, R., and H. Thompson, \"Namespaces in XML 1.0 (Third Edition)\", World Wide Web Consortium Recommendation REC-xml-names-20091208/, December 2009, <https://www.w3.org/TR/2009/REC-xml-names-20091208/>.",
      "ja": "[XMLNS]ブレイ、T.、オランダ、D.、素人、A.、トービン、R.、およびH.トンプソン、 \"XML 1.0での名前空間（第3版）\"、World Wide Web Consortium（W3C）の勧告REC-XML-names- 20091208/2009年12月、<https://www.w3.org/TR/2009/REC-xml-names-20091208/>。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Example Use of PAL",
      "ja": "PALの付録A.使用例"
    },
    {
      "indent": 3,
      "text": "This is an informative appendix. It includes examples of protocol flows.",
      "ja": "これは有益な付録です。これは、プロトコル・フローの例を含みます。"
    },
    {
      "indent": 3,
      "text": "Steps for using a PAL include the following:",
      "ja": "PALを使用するための手順は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "1. Access PAL",
      "section_title": true,
      "ja": "1.アクセスPAL"
    },
    {
      "indent": 3,
      "text": "2. Process PAL entries 2.1. Get CA certificates 2.2. Get CRLs 2.3. Get CSR attributes 2.4. Enroll: simple enrollment, re-enrollment, or full CMC 2.5. Get Firmware, TAMP, Symmetric Keys, or EE certificates",
      "ja": "2.プロセスPAL 2.1エントリ。 CA証明書2.2を取得します。 CRLの2.3を取得します。 CSRは2.4属性取得。登録：簡単な登録、再登録、または完全なCMC 2.5。ファームウェア、TAMP、対称鍵、またはEE証明書を取得します。"
    },
    {
      "indent": 3,
      "text": "Client                      Server\n      --------------------->                     -+\nGET req:                                          | /pal\n      <---------------------                      |\n                    GET res: PAL                  |\n                    Content-Type: application/xml |\n                                                  |\n      --------------------->                     -+\nGET req:                                          | /cacerts\n      <---------------------                      |\n            GET res: CA Certificates              |\n            Content-Type: application/pkcs7-smime |\n                          smime-type=certs-only   |\n                                                  |\n      --------------------->                     -+\nGET req:                                          | /crls\n      <---------------------                      |\n            GET res: CRLs                         |\n            Content-Type: application/pkcs7-smime |\n                          smime-type=crls-only    |\n                                                  |\n      --------------------->                     -+\nGET req:                                          | /csrattrs\n      <---------------------                      |\n                        GET res: attributes       |",
      "raw": true
    },
    {
      "indent": 3,
      "text": "      --------------------->                     -+\nPOST req: PKIRequest                              | /simpleenroll and\nContent-Type: application/pkcs10                  | /simplereenroll\n                                                  |\nContent-Type: application/pkcs7-mime              | /fullcmc\n              smime-type=CMC-request              |\n                                                  |\n      <--------------------                       |\n           (success or failure)                   |\n           POST res: PKIResponse                  | /simpleenroll\n           Content-Type: application/pkcs7-mime   | /simplereenroll\n                         smime-type=certs-only    | /fullcmc\n                                                  |\n           Content-Type: application/pkcs7-mime   | /fullcmc\n                         smime-type=CMC-response  |\n                                                  |\n      -------------------->                      -+\nGET req:                                          | /firmware\n      <--------------------                       | /tamp\n            GET res: Firmware, TAMP Query         | /symmetrickeys\n                     + Updates, Symmetric Keys    |\n             Content-Type: application/cms        |\n                                                  |\n      --------------------->                     -+\nPOST res: Firmware Receipts or Errors,            | /firmware/return\nTAMP Response or Confirms or Errors,              | /tamp/return\nSymmetric Key Receipts or Errors                  | /symmetrickeys/\n                                                  |      return\n                                                  |\nContent-Type: application/cms                     |\n      <--------------------                       |\n            POST res: empty                       |\n             (success or failure)                 |\n      -------------------->                      -+\nGET req:                                          | /eecerts\n      <--------------------                       |\n            GET res: Other EE certificates        |\n             Content-Type: application/pkcs7-mime |\n                           smime-type=certs-only  |",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The figure above shows /eecerts after /*/return, but this is for\nillustrative purposes only.",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Appendix B. Additional CSR Attributes",
      "ja": "付録B.追加のCSR属性"
    },
    {
      "indent": 3,
      "text": "This is an informative appendix.",
      "ja": "これは有益な付録です。"
    },
    {
      "indent": 3,
      "text": "In some cases, the client is severely limited in its ability to encode and decode ASN.1 objects. If the client knows that a \"csr\" template is being provided during enrollment, then it can peel the returned CSR attribute, generate its keys, place the public key in the certification request, and then sign the request. To accomplish this, the server returns a pKCS7PDU attribute [RFC2985] in the /csrattrs (the following is \"pseudo ASN.1\" and is only meant to show the fields needed to accomplish returning a template certification request):",
      "ja": "いくつかのケースでは、クライアントが厳しくASN.1オブジェクトをエンコードし、デコードする能力が制限されます。クライアントは、「CSR」テンプレートは、登録時に提供されていることを知っている場合、それは、返されたCSR属性をはがし、そのキーを生成、証明書要求内の公開鍵を配置した後、要求に署名することができます。これを実現するために、サーバーは、/ csrattrsにpKCS7PDU属性[RFC2985]を返します（以下では「疑似ASN.1」であり、唯一のテンプレート証明書要求を返す達成するために必要なフィールドを表示するためのものです）："
    },
    {
      "indent": 5,
      "text": "pKCS7PDU ATTRIBUTE ::= {\n  WITH SYNTAX ContentInfo\n  ID pkcs-9-at-pkcs7PDU\n  }",
      "raw": true
    },
    {
      "indent": 5,
      "text": "pkcs-9-at-pkcs7PDU OBJECT IDENTIFIER ::= {\n  iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n  pkcs-9-at(25) 5\n  }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The ContentInfo is a PKIData:",
      "ja": "ContentInfoはPKIDataです。"
    },
    {
      "indent": 5,
      "text": "PKIData ::= SEQUENCE {\n  reqSequence        SEQUENCE SIZE(0..MAX) OF TaggedRequest\n  }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Where TaggedRequest is a choice between the PKCS #10 or Certificate Request Message Format (CRMF) requests.",
      "ja": "TaggedRequestは、PKCS＃10または証明書要求メッセージ形式（CRMF）要求間の選択があるところ。"
    },
    {
      "indent": 5,
      "text": "TaggedRequest ::= CHOICE {\n  tcr               [0] TaggedCertificationRequest,\n  crm               [1] CertReqMsg\n  }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Or, the ContentInfo can be a signed-data content type that further encapsulates a PKIData.",
      "ja": "または、ContentInfoはさらにPKIDataをカプセル化する符号付きデータのコンテンツ・タイプとすることができます。"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Thanks in no particular order go to Alexey Melnikov, Paul Hoffman, Brad McInnis, Max Pritikin, Francois Rousseau, Chris Bonatti, and Russ Housley for taking time to provide comments.",
      "ja": "コメントを提供するために、時間を割いてアレクセイ・メルニコフ、ポール・ホフマン、ブラッドMcInnis、マックスPritikin、フランソワ・ルソー、クリスBonatti、とラスHousleyに行く順不同に感謝します。"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Sean Turner sn3rd",
      "ja": "ショーン・ターナーsn3rd"
    },
    {
      "indent": 3,
      "text": "Email: sean@sn3rd.com",
      "ja": "メール：sean@sn3rd.com"
    }
  ]
}