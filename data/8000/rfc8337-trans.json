{
  "title": {
    "text": "RFC 8337 - Model-Based Metrics for Bulk Transport Capacity",
    "ja": "RFC 8337 - バルク輸送能力のためのモデルベースのメトリック"
  },
  "number": 8337,
  "created_at": "2019-10-30 09:50:43.606844+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                         M. Mathis\nRequest for Comments: 8337                                   Google, Inc\nCategory: Experimental                                         A. Morton\nISSN: 2070-1721                                                AT&T Labs\n                                                              March 2018",
      "raw": true
    },
    {
      "indent": 12,
      "text": "Model-Based Metrics for Bulk Transport Capacity",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document introduces a new class of Model-Based Metrics designed to assess if a complete Internet path can be expected to meet a predefined Target Transport Performance by applying a suite of IP diagnostic tests to successive subpaths. The subpath-at-a-time tests can be robustly applied to critical infrastructure, such as network interconnections or even individual devices, to accurately detect if any part of the infrastructure will prevent paths traversing it from meeting the Target Transport Performance.",
      "ja": "このドキュメントは、完全なインターネットパスが連続したサブパスにIP診断テストのスイートを適用することにより、事前に定義されたターゲット交通の性能を満たすことが期待できるかどうかを評価するために設計されたモデルベースのメトリックの新しいクラスを導入しています。サブパスアット-時間のテストは確実にインフラのいずれかの部分がターゲット交通性能を満たすから、それを通過するパスを阻止するかどうかを正確に検出するために、そのようなネットワークの相互接続、さらには個々のデバイスとして、重要なインフラに適用することができます。"
    },
    {
      "indent": 3,
      "text": "Model-Based Metrics rely on mathematical models to specify a Targeted IP Diagnostic Suite, a set of IP diagnostic tests designed to assess whether common transport protocols can be expected to meet a predetermined Target Transport Performance over an Internet path.",
      "ja": "モデルベースのメトリックは、ターゲットIP診断スイート、共通のトランスポートプロトコルは、インターネットパス上で所定の目標交通の性能を満たすことが期待できるかどうかを評価するために設計されたIP診断テストのセットを指定するには、数学的モデルに依存しています。"
    },
    {
      "indent": 3,
      "text": "For Bulk Transport Capacity, the IP diagnostics are built using test streams and statistical criteria for evaluating the packet transfer that mimic TCP over the complete path. The temporal structure of the test stream (e.g., bursts) mimics TCP or other transport protocols carrying bulk data over a long path. However, they are constructed to be independent of the details of the subpath under test, end systems, or applications. Likewise, the success criteria evaluates the packet transfer statistics of the subpath against criteria determined by protocol performance models applied to the Target Transport Performance of the complete path. The success criteria also does not depend on the details of the subpath, end systems, or applications.",
      "ja": "バルク輸送能力のために、IPの診断は、テストストリームと完全なパス上のTCPを模倣するパケット転送を評価するための統計的な基準を使用して構築されています。テストストリーム（例えば、バースト）模倣TCPまたは長いパスを介して大量のデータを搬送する他のトランスポートプロトコルの時間構造。しかし、彼らはテスト中のサブパスの詳細、エンドシステム、またはアプリケーションに依存しないように構成されています。同様に、成功基準は、完全なパスのターゲットトランスポートのパフォーマンスに適用されるプロトコル・パフォーマンス・モデルによって決定基準に照らしサブパスのパケット転送の統計を評価します。成功基準もサブパス、エンドシステム、またはアプリケーションの詳細に依存しません。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for examination, experimental implementation, and evaluation.",
      "ja": "このドキュメントはインターネット標準化過程仕様ではありません。それは、検査、実験的な実装、および評価のために公開されています。"
    },
    {
      "indent": 3,
      "text": "This document defines an Experimental Protocol for the Internet community. This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Not all documents approved by the IESG are candidates for any level of Internet Standard; see Section 2 of RFC 7841.",
      "ja": "この文書は、インターネットコミュニティのためにExperimentalプロトコルを定義します。このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。 IESGによって承認されていないすべての文書はインターネットStandardのどんなレベルの候補です。 RFC 7841のセクション2を参照してください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc8337.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttps://www.rfc-editor.org/info/rfc8337で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2018 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2018 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（https://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................4\n2. Overview ........................................................5\n3. Terminology .....................................................8\n   3.1. General Terminology ........................................8\n   3.2. Terminology about Paths ...................................10\n   3.3. Properties ................................................11\n   3.4. Basic Parameters ..........................................12\n   3.5. Ancillary Parameters ......................................13\n   3.6. Temporal Patterns for Test Streams ........................14\n   3.7. Tests .....................................................15\n4. Background .....................................................16\n   4.1. TCP Properties ............................................18\n   4.2. Diagnostic Approach .......................................20\n   4.3. New Requirements Relative to RFC 2330 .....................21\n5. Common Models and Parameters ...................................22\n   5.1. Target End-to-End Parameters ..............................22\n   5.2. Common Model Calculations .................................22\n   5.3. Parameter Derating ........................................23\n   5.4. Test Preconditions ........................................24\n6. Generating Test Streams ........................................24\n   6.1. Mimicking Slowstart .......................................25\n   6.2. Constant Window Pseudo CBR ................................27\n   6.3. Scanned Window Pseudo CBR .................................28\n   6.4. Concurrent or Channelized Testing .........................28\n7. Interpreting the Results .......................................29\n   7.1. Test Outcomes .............................................29\n   7.2. Statistical Criteria for Estimating run_length ............31\n   7.3. Reordering Tolerance ......................................33\n8. IP Diagnostic Tests ............................................34\n   8.1. Basic Data Rate and Packet Transfer Tests .................34\n        8.1.1. Delivery Statistics at Paced Full Data Rate ........35\n        8.1.2. Delivery Statistics at Full Data Windowed Rate .....35\n        8.1.3. Background Packet Transfer Statistics Tests ........35\n   8.2. Standing Queue Tests ......................................36\n        8.2.1. Congestion Avoidance ...............................37\n        8.2.2. Bufferbloat ........................................37\n        8.2.3. Non-excessive Loss .................................38\n        8.2.4. Duplex Self-Interference ...........................38\n   8.3. Slowstart Tests ...........................................39\n        8.3.1. Full Window Slowstart Test .........................39\n        8.3.2. Slowstart AQM Test .................................39\n   8.4. Sender Rate Burst Tests ...................................40\n   8.5. Combined and Implicit Tests ...............................41\n        8.5.1. Sustained Full-Rate Bursts Test ....................41\n        8.5.2. Passive Measurements ...............................42",
      "raw": true
    },
    {
      "indent": 3,
      "text": "9. Example ........................................................43\n   9.1. Observations about Applicability ..........................44\n10. Validation ....................................................45\n11. Security Considerations .......................................46\n12. IANA Considerations ...........................................47\n13. Informative References ........................................47\nAppendix A.  Model Derivations ....................................52\n  A.1.  Queueless Reno ............................................52\nAppendix B.  The Effects of ACK Scheduling ........................53\nAcknowledgments ...................................................55\nAuthors' Addresses ................................................55",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "Model-Based Metrics (MBM) rely on peer-reviewed mathematical models to specify a Targeted IP Diagnostic Suite (TIDS), a set of IP diagnostic tests designed to assess whether common transport protocols can be expected to meet a predetermined Target Transport Performance over an Internet path. This document describes the modeling framework to derive the test parameters for assessing an Internet path's ability to support a predetermined Bulk Transport Capacity.",
      "ja": "モデルベースのメトリック（MBM）は、ターゲットIP診断スイート（TIDS）、一般的なトランスポートプロトコルを超える所定の目標交通の性能を満たすことが期待できるかどうかを評価するために設計されたIP診断テストのセットを指定するには、査読数学モデルに依存していますインターネットパス。この文書では、所定のバルク輸送能力をサポートするためのインターネットパスの能力を評価するための試験パラメータを導き出すためモデリングフレームワークについて説明します。"
    },
    {
      "indent": 3,
      "text": "Each test in TIDS measures some aspect of IP packet transfer needed to meet the Target Transport Performance. For Bulk Transport Capacity, the TIDS includes IP diagnostic tests to verify that there is sufficient IP capacity (data rate), sufficient queue space at bottlenecks to absorb and deliver typical transport bursts, low enough background packet loss ratio to not interfere with congestion control, and other properties described below. Unlike typical IP Performance Metrics (IPPM) that yield measures of network properties, Model-Based Metrics nominally yield pass/fail evaluations of the ability of standard transport protocols to meet the specific performance objective over some network path.",
      "ja": "TIDSにおける各テストはターゲット交通性能を満たすために必要なIPパケット転送のいくつかの側面を測定します。バルク輸送能力のために、TIDSは、典型的なトランスポート・バースト、輻輳制御と干渉しないように十分に低いバックグラウンドのパケット損失率を吸収して送達するのに十分なIP容量（データレート）があることを確認するIP診断テスト、ボトルネックに十分なキュー・スペースを含み、および他の特性は、以下に記載します。典型的なIPパフォーマンス・メトリック（IPPM）ネットワークのプロパティの歩留まり対策とは異なり、モデルベースのメトリックは、名目上/パスをもたらすいくつかのネットワーク経路上の特定の性能目標を達成するための標準的なトランスポートプロトコルの能力の評価を失敗します。"
    },
    {
      "indent": 3,
      "text": "In most cases, the IP diagnostic tests can be implemented by combining existing IPPM metrics with additional controls for generating test streams having a specified temporal structure (bursts or standing queues caused by constant bit rate streams, etc.) and statistical criteria for evaluating packet transfer. The temporal structure of the test streams mimics transport protocol behavior over the complete path; the statistical criteria models the transport protocol's response to less-than-ideal IP packet transfer. In control theory terms, the tests are \"open loop\". Note that running a test requires the coordinated activity of sending and receiving measurement points.",
      "ja": "ほとんどの場合、IP診断テストは、パケット転送を評価するため、統計基準（固定ビットレートストリーム、等によって引き起こされるキューをバーストまたは立って）指定された時間構造を有するテストストリームを生成するための追加のコントロールを既存のIPPMメトリックを組み合わせることによって実現することができます。試験の時間構造は、完全なパス上模倣するトランスポートプロトコルの動作をストリーム。統計的な基準モデルより少なくより理想的なIPパケットの転送にトランスポートプロトコルの応答。制御理論の用語では、テストは「オープンループ」です。テストを実行すると、測定点を送受信するの協調活動が必要であることに注意してください。"
    },
    {
      "indent": 3,
      "text": "This document addresses Bulk Transport Capacity. It describes an alternative to the approach presented in \"A Framework for Defining Empirical Bulk Transfer Capacity Metrics\" [RFC3148]. Other Model-Based Metrics may cover other applications and transports, such as Voice over IP (VoIP) over UDP, RTP, and new transport protocols.",
      "ja": "この文書では、バルク輸送能力に対応しています。これは、「実証バルク転送容量のメトリックを定義するためのフレームワーク」[RFC3148]に提示したアプローチに代わるものを説明しています。その他のモデルベースのメトリックは、UDP、RTP、および新しいトランスポートプロトコルを介して、このようなボイスオーバーIP（VoIP）のなどの他のアプリケーションとトランスポートを、カバーすることができます。"
    },
    {
      "indent": 3,
      "text": "This document assumes a traditional Reno TCP-style, self-clocked, window-controlled transport protocol that uses packet loss and Explicit Congestion Notification (ECN) Congestion Experienced (CE) marks for congestion feedback. There are currently some experimental protocols and congestion control algorithms that are rate based or otherwise fall outside of these assumptions. In the future, these new protocols and algorithms may call for revised models.",
      "ja": "この文書では、混雑のフィードバックのためのパケットロスと明示的輻輳通知（ECN）輻輳経験者（CE）マークを使用し、伝統的なリノTCP-スタイル、セルフクロック、ウィンドウ制御トランスポートプロトコルを想定しています。率は、ベースあるいはこれらの仮定の外に落ちているいくつかの実験プロトコルおよび輻輳制御アルゴリズムは現在ありません。将来的には、これらの新しいプロトコルとアルゴリズムは、改訂されたモデルのために呼び出すことができます。"
    },
    {
      "indent": 3,
      "text": "The MBM approach, i.e., mapping Target Transport Performance to a Targeted IP Diagnostic Suite (TIDS) of IP tests, solves some intrinsic problems with using TCP or other throughput-maximizing protocols for measurement. In particular, all throughput-maximizing protocols (especially TCP congestion control) cause some level of congestion in order to detect when they have reached the available capacity limitation of the network. This self-inflicted congestion obscures the network properties of interest and introduces non-linear dynamic equilibrium behaviors that make any resulting measurements useless as metrics because they have no predictive value for conditions or paths different from that of the measurement itself. In order to prevent these effects, it is necessary to avoid the effects of TCP congestion control in the measurement method. These issues are discussed at length in Section 4. Readers who are unfamiliar with basic properties of TCP and TCP-like congestion control may find it easier to start at Section 4 or 4.1.",
      "ja": "MBMアプローチは、すなわち、IPテストのターゲットIP診断スイート（TIDS）にマッピングするターゲット搬送性は、測定のためにTCP又は他のスループット最大化プロトコルを用いたいくつかの固有の問題を解決します。具体的には、すべてのスループットを最大化プロトコル（特にTCP輻輳制御）は、それらがネットワークの利用可能な容量制限に達したときを検出するために、渋滞のあるレベルを引き起こします。この自己招い輻輳が関心のネットワーク特性を隠し、それらが測定自体とは異なる条件またはパスのための予測値を持たないため、指標として役に立たない任意の結果として生じる測定を行う非線形動的平衡挙動を導入します。これらの影響を防止するためには、測定方法におけるTCPの輻輳制御の影響を回避する必要があります。これらの問題は、セクションでTCPとTCPのような輻輳制御の基本的な性質に慣れていない4.読者はそれが簡単に第4節または4.1で起動するかもしれない長さで議論されています。"
    },
    {
      "indent": 3,
      "text": "A Targeted IP Diagnostic Suite does not have such difficulties. IP diagnostics can be constructed such that they make strong statistical statements about path properties that are independent of measurement details, such as vantage and choice of measurement points.",
      "ja": "ターゲットIP診断スイートには、このような困難を持っていません。 IPの診断は、彼らがそのような測定点の見晴らしや選択などの測定内容とは無関係であるパスの性質、程度の強い統計的な声明をするように構築することができます。"
    },
    {
      "indent": 0,
      "text": "2. Overview",
      "section_title": true,
      "ja": "2.概要"
    },
    {
      "indent": 3,
      "text": "This document describes a modeling framework for deriving a Targeted IP Diagnostic Suite from a predetermined Target Transport Performance. It is not a complete specification and relies on other standards documents to define important details such as packet type-P selection, sampling techniques, vantage selection, etc. Fully Specified Targeted IP Diagnostic Suites (FSTIDSs) define all of these details. A Targeted IP Diagnostic Suite (TIDS) refers to the subset of such a specification that is in scope for this document. This terminology is further defined in Section 3.",
      "ja": "この文書では、所定の目標交通のパフォーマンスからターゲットIP診断スイートを導出するためのモデリングフレームワークについて説明します。それは完全に指定されたターゲットIP診断スイート（FSTIDSs）は、これらの詳細のすべてを定義するなど、完全な仕様ではなく、重要なパケットタイプ-Pの選択などの詳細、サンプリング技術、見晴らしの良い選択を定義するために、他の規格文書に依存しています。ターゲットIP診断スイート（TIDS）はこの文書の範囲内にあるそのような仕様のサブセットを指します。この用語は、さらに第3節で定義されています。"
    },
    {
      "indent": 3,
      "text": "Section 4 describes some key aspects of TCP behavior and what they imply about the requirements for IP packet transfer. Most of the IP diagnostic tests needed to confirm that the path meets these properties can be built on existing IPPM metrics, with the addition of statistical criteria for evaluating packet transfer and, in a few cases, new mechanisms to implement the required temporal structure. (One group of tests, the standing queue tests described in Section 8.2, don't correspond to existing IPPM metrics, but suitable new IPPM metrics can be patterned after the existing definitions.)",
      "ja": "第4章では、TCPの挙動とどのような彼らはIPパケット転送のための要件について暗示のいくつかの重要な側面について説明します。パスが必要な時間構造を実装するためのパケット転送と、いくつかのケースでは、新しいメカニズムを評価するための統計的な基準を追加して、これらのプロパティは、既存のIPPMメトリックに基づいて構築することができます満たしていることを確認するために必要なIP診断テストのほとんどは。 （テストの一つのグループは、8.2節で説明した定在キューテストは、既存のIPPMメトリックに対応していませんが、適した新しいIPPMメトリックは、既存の定義の後にパターン化することができます。）"
    },
    {
      "indent": 3,
      "text": "Figure 1 shows the MBM modeling and measurement framework. The Target Transport Performance at the top of the figure is determined by the needs of the user or application, which are outside the scope of this document. For Bulk Transport Capacity, the main performance parameter of interest is the Target Data Rate. However, since TCP's ability to compensate for less-than-ideal network conditions is fundamentally affected by the Round-Trip Time (RTT) and the Maximum Transmission Unit (MTU) of the complete path, these parameters must also be specified in advance based on knowledge about the intended application setting. They may reflect a specific application over a real path through the Internet or an idealized application and hypothetical path representing a typical user community. Section 5 describes the common parameters and models derived from the Target Transport Performance.",
      "ja": "図1は、MBMモデリング及び測定の枠組みを示しています。図の上部にターゲット交通パフォーマンスは、この文書の範囲外であるユーザーやアプリケーションのニーズによって決定されます。バルク輸送能力のために、関心の主要な性能パラメータは、ターゲット・データ・レートです。より少なくより理想的なネットワークの状態を補償するTCPの能力は基本的に完全なパスのラウンドトリップ時間（RTT）と最大伝送単位（MTU）の影響を受けているので、これらのパラメータはまたに基づいて予め指定する必要があります意図したアプリケーションの設定に関する知識。彼らは、インターネットを介した実際のパスを超える特定のアプリケーションや、一般的なユーザー・コミュニティを代表する理想的なアプリケーションと仮想的なパスを反映することができます。第5節では、ターゲット交通パフォーマンス由来共通パラメータとモデルを説明します。"
    },
    {
      "indent": 10,
      "text": "            Target Transport Performance\n  (Target Data Rate, Target RTT, and Target MTU)\n                         |\n                 ________V_________\n                 |  mathematical  |\n                 |     models     |\n                 |                |\n                 ------------------\nTraffic parameters |            | Statistical criteria\n                   |            |\n            _______V____________V____Targeted IP____\n           |       |   * * *    | Diagnostic Suite  |\n      _____|_______V____________V________________   |\n    __|____________V____________V______________  |  |\n    |           IP diagnostic tests            | |  |\n    |              |            |              | |  |\n    | _____________V__        __V____________  | |  |\n    | |   traffic    |        |   Delivery  |  | |  |\n    | |   pattern    |        |  Evaluation |  | |  |\n    | |  generation  |        |             |  | |  |\n    | -------v--------        ------^--------  | |  |\n    |   |    v    test stream via   ^      |   | |--\n    |   |  -->======================>--    |   | |\n    |   |       subpath under test         |   |-\n    ----V----------------------------------V--- |\n        | |  |                             | |  |\n        V V  V                             V V  V\n    fail/inconclusive            pass/fail/inconclusive\n(traffic generation status)           (test result)",
      "raw": true
    },
    {
      "indent": 19,
      "text": "Figure 1: Overall Modeling Framework",
      "ja": "図1：総合モデル化フレームワーク"
    },
    {
      "indent": 3,
      "text": "Mathematical TCP models are used to determine traffic parameters and subsequently to design traffic patterns that mimic TCP (which has burst characteristics at multiple time scales) or other transport protocols delivering bulk data and operating at the Target Data Rate, MTU, and RTT over a full range of conditions. Using the techniques described in Section 6, the traffic patterns are generated based on the three Target parameters of the complete path (Target Data Rate, Target RTT, and Target MTU), independent of the properties of individual subpaths. As much as possible, the test streams are generated deterministically (precomputed) to minimize the extent to which test methodology, measurement points, measurement vantage, or path partitioning affect the details of the measurement traffic.",
      "ja": "数学TCPモデルは、トラフィックパラメータを決定するために使用され、その後完全にわたって（複数の時間スケールでの特性バーストた）TCPまたは他のトランスポートプロトコルのバルクデータを配信し、ターゲット・データ・レートで動作し、MTU、およびRTTを模倣するトラフィックパターンを設計します条件の範囲。セクション6に記載された技術を使用して、トラフィックパターンは、完全なパス（ターゲットデータレート、ターゲットRTT、およびターゲットMTU）の3つのターゲットパラメータ、個々のサブパスの性質とは無関係に基づいて生成されます。可能な限り、テストストリームは、試験方法、測定点、測定ヴァンテージ、またはパス分割は測定トラフィックの詳細に影響を与える程度を最小限にするために確定（事前計算）が生成されます。"
    },
    {
      "indent": 3,
      "text": "Section 7 describes packet transfer statistics and methods to test against the statistical criteria provided by the mathematical models. Since the statistical criteria typically apply to the complete path (a composition of subpaths) [RFC6049], in situ testing requires that the end-to-end statistical criteria be apportioned as separate criteria for each subpath. Subpaths that are expected to be bottlenecks would then be permitted to contribute a larger fraction of the end-to-end packet loss budget. In compensation, subpaths that are not expected to exhibit bottlenecks must be constrained to contribute less packet loss. Thus, the statistical criteria for each subpath in each test of a TIDS is an apportioned share of the end-to-end statistical criteria for the complete path that was determined by the mathematical model.",
      "ja": "第7節は、数学的モデルが提供する統計的な基準に照らしてテストするために、パケット転送の統計情報や方法を説明します。統計的基準は、典型的にはその場での完全なパスに（サブパスの組成）[RFC6049]を、適用するための試験は、エンドツーエンドの統計的基準は、各サブパスのための別の基準として配分されることを必要とします。ボトルネックであると予想されるサブパスは、エンドツーエンドのパケット損失予算の大きな部分を貢献することを許可されるだろう。補償では、ボトルネックを示すことが期待されていないサブパスは少ないパケット損失を貢献するように制限しなければなりません。したがって、TIDSの各試験における各サブパスの統計的基準は、数学的モデルによって決定された完全なパスのエンドツーエンド統計的基準の分配シェアです。"
    },
    {
      "indent": 3,
      "text": "Section 8 describes the suite of individual tests needed to verify all of the required IP delivery properties. A subpath passes if and only if all of the individual IP diagnostic tests pass. Any subpath that fails any test indicates that some users are likely to fail to attain their Target Transport Performance under some conditions. In addition to passing or failing, a test can be deemed inconclusive for a number of reasons, including the following: the precomputed traffic pattern was not accurately generated, the measurement results were not statistically significant, the test failed to meet some required test preconditions, etc. If all tests pass but some are inconclusive, then the entire suite is deemed to be inconclusive.",
      "ja": "第8章では、必要なIP送達特性のすべてを検証するために必要な個々のテストスイートを説明しています。サブパスは、個々のIP診断テストのすべてに合格場合にのみ渡します。すべてのテストに失敗した任意のサブパスは、一部のユーザーは、いくつかの条件の下で彼らのターゲット交通のパフォーマンスを達成するために失敗する可能性があることを示しています。通過または失敗に加えて、試験は、以下を含む多くの理由のために決定的とみなすことができる。事前計算トラフィックパターンを正確に生成されなかった、測定結果が統計的に有意ではなかった、試験は、いくつかの必要な試験の前提条件を満たすことができませんでした、すべてのテストに合格したが、いくつかは決定的でないなどの場合は、スイート全体が決定的であると思われます。"
    },
    {
      "indent": 3,
      "text": "In Section 9, we present an example TIDS that might be representative of High Definition (HD) video and illustrate how Model-Based Metrics can be used to address difficult measurement situations, such as confirming that inter-carrier exchanges have sufficient performance and capacity to deliver HD video between ISPs.",
      "ja": "第9章では、我々は、高品位（HD）映像を代表するものとモデルベースのメトリックは、このようなキャリア間の交流が十分なパフォーマンスと容量のを持っていることを確認するなど困難な測定状況に対処するために使用する方法を示してあります例TIDSを提示しますISP間のHDビデオを配信。"
    },
    {
      "indent": 3,
      "text": "Since there is some uncertainty in the modeling process, Section 10 describes a validation procedure to diagnose and minimize false positive and false negative results.",
      "ja": "モデリングプロセスにおけるいくつかの不確実性があるため、セクション10は、偽陽性と偽陰性の結果を診断し、最小限に抑えるために検証手順を説明します。"
    },
    {
      "indent": 0,
      "text": "3. Terminology",
      "section_title": true,
      "ja": "3.用語"
    },
    {
      "indent": 3,
      "text": "Terms containing underscores (rather than spaces) appear in equations and typically have algorithmic definitions.",
      "ja": "アンダースコア（よりむしろスペース）を含む用語は、式に表示され、典型的には、アルゴリズムの定義を有します。"
    },
    {
      "indent": 0,
      "text": "3.1. General Terminology",
      "section_title": true,
      "ja": "3.1. 一般的な用語"
    },
    {
      "indent": 3,
      "text": "Target: A general term for any parameter specified by or derived from the user's application or transport performance requirements.",
      "ja": "対象：任意のパラメータで指定したり、ユーザーのアプリケーションや輸送のパフォーマンス要件由来の総称。"
    },
    {
      "indent": 3,
      "text": "Target Transport Performance: Application or transport performance target values for the complete path. For Bulk Transport Capacity defined in this document, the Target Transport Performance includes the Target Data Rate, Target RTT, and Target MTU as described below.",
      "ja": "ターゲット交通パフォーマンス：完全なパスのためのアプリケーションまたは輸送性能目標値。後述のように、この文書で定義されたバルク輸送能力のために、ターゲット交通パフォーマンスは、ターゲットデータレート、ターゲットRTT、およびターゲットのMTUが含まれています。"
    },
    {
      "indent": 3,
      "text": "Target Data Rate: The specified application data rate required for an application's proper operation. Conventional Bulk Transport Capacity (BTC) metrics are focused on the Target Data Rate; however, these metrics have little or no predictive value because they do not consider the effects of the other two parameters of the Target Transport Performance -- the RTT and MTU of the complete paths.",
      "ja": "ターゲットデータレート：アプリケーションの適切な動作のために必要な指定されたアプリケーション・データ・レート。従来のバルク輸送能力（BTC）のメトリックは、ターゲット・データ・レートに焦点を当てています。完全なパスのRTTとMTU  - 彼らはターゲット交通パフォーマンスの他の二つのパラメータの影響を考慮していないので、しかし、これらの指標はほとんど、あるいはまったく予測値を有します。"
    },
    {
      "indent": 3,
      "text": "Target RTT (Round-Trip Time): The specified baseline (minimum) RTT of the longest complete path over which the user expects to be able to meet the target performance. TCP and other transport protocol's ability to compensate for path problems is generally proportional to the number of round trips per second. The Target RTT determines both key parameters of the traffic patterns (e.g., burst sizes) and the thresholds on acceptable IP packet transfer statistics. The Target RTT must be specified considering appropriate packets sizes: MTU-sized packets on the forward path and ACK-sized packets (typically, header_overhead) on the return path. Note that Target RTT is specified and not measured; MBM measurements derived for a given target_RTT will be applicable to any path with a smaller RTT.",
      "ja": "ターゲットRTT（ラウンドトリップ時間）：最長の完全なパスの指定された基線（最小）RTTは、その上にユーザが目標性能を満たすことができると予想しています。 TCPとパスの問題を補償する他のトランスポートプロトコルの能力は毎秒ラウンドトリップの数に比例します。ターゲットRTTは、トラフィックパターン（例えば、バーストサイズ）と許容されるIPパケットの転送統計上の閾値の両方の重要なパラメータを決定します。復路の往路上のMTUサイズのパケットとACKパケットサイズ（典型的には、header_overhead）：ターゲットRTTは適切なパケットサイズを考慮して指定しなければなりません。ターゲットRTTを指定して測定されていないことに注意してください。所与target_RTTについて導出MBM測定が小さいRTTを有する任意のパスに適用されます。"
    },
    {
      "indent": 3,
      "text": "Target MTU (Maximum Transmission Unit): The specified maximum MTU supported by the complete path over which the application expects to meet the target performance. In this document, we assume a 1500-byte MTU unless otherwise specified. If a subpath has a smaller MTU, then it becomes the Target MTU for the complete path, and all model calculations and subpath tests must use the same smaller MTU.",
      "ja": "ターゲットMTU（最大転送単位）：アプリケーションが目標性能を満たすために期待する上完全なパスによってサポートされる指定された最大MTU。特に指定がない限り、このドキュメントでは、我々は1500バイトのMTUを想定しています。サブパスが小さいMTUを持っている場合、それは完全なパスのターゲットMTUになり、すべてのモデル計算とサブパスのテストは、同じ小さなMTUを使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "Targeted IP Diagnostic Suite (TIDS): A set of IP diagnostic tests designed to determine if an otherwise ideal complete path containing the subpath under test can sustain flows at a specific target_data_rate using packets with a size of target_MTU when the RTT of the complete path is target_RTT.",
      "ja": "ターゲットIP診断スイート（TIDS）：被試験サブパスを含むそれ以外の場合は理想的な完全なパスは、完全なパスのRTTである場合target_MTUのサイズのパケットを使用して、特定target_data_rateで流れを維持することができるかどうかを決定するために設計されたIP診断テストの組target_RTT。"
    },
    {
      "indent": 3,
      "text": "Fully Specified Targeted IP Diagnostic Suite (FSTIDS): A TIDS together with additional specifications such as measurement packet type (\"type-p\" [RFC2330]) that are out of scope for this document and need to be drawn from other standards documents.",
      "ja": "このドキュメントの範囲外であり、他の標準文書から描画する必要があるような測定パケットタイプ（「タイプP」[RFC2330]）などの追加の仕様と一緒にTIDS：完全IP診断スイート（FSTIDS）をターゲットに指定。"
    },
    {
      "indent": 3,
      "text": "Bulk Transport Capacity (BTC): Bulk Transport Capacity metrics evaluate an Internet path's ability to carry bulk data, such as large files, streaming (non-real-time) video, and, under some conditions, web images and other content. Prior efforts to define BTC metrics have been based on [RFC3148], which predates our understanding of TCP and the requirements described in Section 4. In general, \"Bulk Transport\" indicates that performance is determined by the interplay between the network, cross traffic, and congestion control in the transport protocol. It excludes situations where performance is dominated by the RTT alone (e.g., transactions) or bottlenecks elsewhere, such as in the application itself.",
      "ja": "バルク輸送能力（BTC）：バルク輸送能力の指標は、このような大きなファイル、ストリーミング（非リアルタイム）の映像、そして、いくつかの条件の下で、ウェブ画像およびその他のコンテンツなど大容量のデータを運ぶためにインターネットパスの能力を評価します。 TCPと一般的には第4節で説明した要件の我々の理解を先行し、[RFC3148]、に基づいている、「バルク輸送は、」パフォーマンスはネットワーク間の相互作用によって決定されていることを示しBTCのメトリックを定義する前に、努力、クロストラフィック、トランスポートプロトコルにおける輻輳制御。そのようなアプリケーション自体と同様の性能を他の場所に単独でRTT（例えば、トランザクション）またはボトルネックによって支配される状況を、排除します。"
    },
    {
      "indent": 3,
      "text": "IP diagnostic tests: Measurements or diagnostics to determine if packet transfer statistics meet some precomputed target.",
      "ja": "IP診断テスト：測定や診断パケット転送の統計情報は、いくつかの事前に計算され、目標を満たすかどうかを判断します。"
    },
    {
      "indent": 3,
      "text": "traffic patterns: The temporal patterns or burstiness of traffic generated by applications over transport protocols such as TCP. There are several mechanisms that cause bursts at various timescales as described in Section 4.1. Our goal here is to mimic the range of common patterns (burst sizes, rates, etc.), without tying our applicability to specific applications, implementations, or technologies, which are sure to become stale.",
      "ja": "トラフィックパターン：TCPのようなトランスポートプロトコルを介してアプリケーションによって生成された時間的パターンやトラフィックのバースト。 4.1節で説明したように、様々な時間スケールでのバーストを引き起こすいくつかのメカニズムがあります。ここでの私たちの目標は、陳腐化することを確認している特定のアプリケーション、実装、または技術、に私たちの適用を結ぶせず、一般的なパターン（バーストサイズ、速度など）の範囲を模倣することです。"
    },
    {
      "indent": 3,
      "text": "Explicit Congestion Notification (ECN): See [RFC3168].",
      "ja": "明示的輻輳通知（ECN）：[RFC3168]を参照してください。"
    },
    {
      "indent": 3,
      "text": "packet transfer statistics: Raw, detailed, or summary statistics about packet transfer properties of the IP layer including packet losses, ECN Congestion Experienced (CE) marks, reordering, or any other properties that may be germane to transport performance.",
      "ja": "パケット転送統計：パケット損失、ECNの輻輳経験者（CE）マーク、並べ替え、またはパフォーマンスを輸送に密接することができる任意の他のプロパティを含むIP層のパケット転送プロパティについて、生の詳細、または要約統計量。"
    },
    {
      "indent": 3,
      "text": "packet loss ratio: As defined in [RFC7680].",
      "ja": "パケット損失率：[RFC7680]で定義された通りです。"
    },
    {
      "indent": 3,
      "text": "apportioned: To divide and allocate, for example, budgeting packet loss across multiple subpaths such that the losses will accumulate to less than a specified end-to-end loss ratio. Apportioning metrics is essentially the inverse of the process described in [RFC5835].",
      "ja": "配分：分割して割り当て、例えば、損失が指定されたエンドツーエンドの損失率以下に蓄積するように複数のサブパスを横切ってパケット損失を予算します。メトリックを配分することは、本質的に[RFC5835]に記載されたプロセスの逆です。"
    },
    {
      "indent": 3,
      "text": "open loop: A control theory term used to describe a class of techniques where systems that naturally exhibit circular dependencies can be analyzed by suppressing some of the dependencies, such that the resulting dependency graph is acyclic.",
      "ja": "オープンループ：自然循環依存性を示すシステムが得られた依存グラフが非環式であるように、依存関係の一部を抑制することによって分析することができる技術のクラスを記述するために使用される制御理論の用語。"
    },
    {
      "indent": 0,
      "text": "3.2. Terminology about Paths",
      "section_title": true,
      "ja": "3.2. パスに関する用語"
    },
    {
      "indent": 3,
      "text": "See [RFC2330] and [RFC7398] for existing terms and definitions.",
      "ja": "既存の用語および定義については、[RFC2330]と[RFC7398]を参照してください。"
    },
    {
      "indent": 3,
      "text": "data sender: Host sending data and receiving ACKs.",
      "ja": "データの送信者：ホストがデータを送信し、ACKを受け取ります。"
    },
    {
      "indent": 3,
      "text": "data receiver: Host receiving data and sending ACKs.",
      "ja": "データ受信：ホストがデータを受信し、ACKを送信します。"
    },
    {
      "indent": 3,
      "text": "complete path: The end-to-end path from the data sender to the data receiver.",
      "ja": "完全なパス：データ受信機へのデータ送信者からのエンドツーエンドのパス。"
    },
    {
      "indent": 3,
      "text": "subpath: A portion of the complete path. Note that there is no requirement that subpaths be non-overlapping. A subpath can be as small as a single device, link, or interface.",
      "ja": "サブパス：完全なパスの一部。重複しないことサブパス必要はないことに注意してください。サブパスは、単一のデバイス、リンク、またはインターフェースのように小さくすることができます。"
    },
    {
      "indent": 3,
      "text": "measurement point: Measurement points as described in [RFC7398].",
      "ja": "計測ポイント：[RFC7398]に記載されているように測定ポイント。"
    },
    {
      "indent": 3,
      "text": "test path: A path between two measurement points that includes a subpath of the complete path under test. If the measurement points are off path, the test path may include \"test leads\" between the measurement points and the subpath.",
      "ja": "テスト経路：試験下の完全なパスのサブパスを含み、2つの測定点間の経路。測定点は、経路から外れている場合、テストパスが測定点とサブパス間の「テスト・リード」を含むことができます。"
    },
    {
      "indent": 3,
      "text": "dominant bottleneck: The bottleneck that generally determines most packet transfer statistics for the entire path. It typically determines a flow's self-clock timing, packet loss, and ECN CE marking rate, with other potential bottlenecks having less effect on the packet transfer statistics. See Section 4.1 on TCP properties.",
      "ja": "支配的なボトルネック：一般的に全体のパスのほとんどのパケット転送統計を決定し、ボトルネック。それは、典型的には、他の潜在的なボトルネックは、パケット転送の統計にあまり影響を持って、流れの自己クロックタイミング、パケット損失、およびECNのCEマーキング速度を決定します。 TCPの性質上、セクション4.1を参照してください。"
    },
    {
      "indent": 3,
      "text": "front path: The subpath from the data sender to the dominant bottleneck.",
      "ja": "フロントのパス：支配的なボトルネックへのデータ送信側からサブパス。"
    },
    {
      "indent": 3,
      "text": "back path: The subpath from the dominant bottleneck to the receiver.",
      "ja": "バックパス：受信機への支配的なボトルネックからサブパス。"
    },
    {
      "indent": 3,
      "text": "return path: The path taken by the ACKs from the data receiver to the data sender.",
      "ja": "リターンパス：データ送信側にデータ受信装置からのACKによって取られる経路。"
    },
    {
      "indent": 3,
      "text": "cross traffic: Other, potentially interfering, traffic competing for network resources (such as bandwidth and/or queue capacity).",
      "ja": "クロストラフィック：その他、潜在的に干渉する、トラフィック（例えば、帯域幅および/またはキューの容量など）のネットワーク・リソースの競合。"
    },
    {
      "indent": 0,
      "text": "3.3. Properties",
      "section_title": true,
      "ja": "3.3. プロパティ"
    },
    {
      "indent": 3,
      "text": "The following properties are determined by the complete path and application. These are described in more detail in Section 5.1.",
      "ja": "次のプロパティは、完全なパスと、アプリケーションによって決定されます。これらは、5.1節で詳しく説明されています。"
    },
    {
      "indent": 3,
      "text": "Application Data Rate: General term for the data rate as seen by the application above the transport layer in bytes per second. This is the payload data rate and explicitly excludes transport-level and lower-level headers (TCP/IP or other protocols), retransmissions, and other overhead that is not part of the total quantity of data delivered to the application.",
      "ja": "アプリケーションのデータレート：バイト毎秒でトランスポート層以上のアプリケーションから見たデータ・レートの総称。これは、ペイロード・データ・レートであると明示的に転送レベルと下位レベルのヘッダ（TCP / IPまたは他のプロトコル）、再送信、およびアプリケーションに配信されるデータの総量の一部ではない他のオーバーヘッドを排除します。"
    },
    {
      "indent": 3,
      "text": "IP rate: The actual number of IP-layer bytes delivered through a subpath, per unit time, including TCP and IP headers, retransmits, and other TCP/IP overhead. This is the same as IP-type-P Link Usage in [RFC5136].",
      "ja": "IPレート：サブパスを通じて送達IP層の実際のバイト数、単位時間当たり、TCPおよびIPヘッダ、再送信、および他のTCP / IPのオーバーヘッドを含みます。これは、[RFC5136]にIP型-Pリンクの使用法と同じです。"
    },
    {
      "indent": 3,
      "text": "IP capacity: The maximum number of IP-layer bytes that can be transmitted through a subpath, per unit time, including TCP and IP headers, retransmits, and other TCP/IP overhead. This is the same as IP-type-P Link Capacity in [RFC5136].",
      "ja": "IP容量：TCPおよびIPヘッダ、再送信、および他のTCP / IPのオーバーヘッドを含む、単位時間当たり、サブパスを通じて伝送することができるIP層の最大バイト数。これは、[RFC5136]にIP型-Pリンク容量と同じです。"
    },
    {
      "indent": 3,
      "text": "bottleneck IP capacity: The IP capacity of the dominant bottleneck in the forward path. All throughput-maximizing protocols estimate this capacity by observing the IP rate delivered through the bottleneck. Most protocols derive their self-clocks from the timing of this data. See Section 4.1 and Appendix B for more details.",
      "ja": "ボトルネックIP容量：フォワード経路における支配的なボトルネックのIP容量。すべてのスループットを最大化プロトコルは、ボトルネックを介して配信IP率を観察することによって、この容量を見積もります。ほとんどのプロトコルは、このデータのタイミングから、彼らの自己クロックを導き出します。詳細については、セクション4.1および付録Bを参照してください。"
    },
    {
      "indent": 3,
      "text": "implied bottleneck IP capacity: The bottleneck IP capacity implied by the ACKs returning from the receiver. It is determined by looking at how much application data the ACK stream at the sender reports as delivered to the data receiver per unit time at various timescales. If the return path is thinning, batching, or otherwise altering the ACK timing, the implied bottleneck IP capacity over short timescales might be substantially larger than the bottleneck IP capacity averaged over a full RTT. Since TCP derives its clock from the data delivered through the bottleneck, the front path must have sufficient buffering to absorb any data bursts at the dimensions (size and IP rate) implied by the ACK stream, which are potentially doubled during slowstart. If the return path is not altering the ACK stream, then the implied bottleneck IP capacity will be the same as the bottleneck IP capacity. See Section 4.1 and Appendix B for more details.",
      "ja": "暗黙のボトルネックIP容量：受信機からの復帰のACKにより暗黙のボトルネックIP容量。それは、様々な時間スケールでの単位時間当たりのデータ受信機に配信として、送信者レポートでACKストリームどのくらいのアプリケーション・データを調べることによって決定されます。リターンパスは、バッチ処理を薄くする、あるいはACKのタイミングを変更している場合、短い時間スケールの上に暗黙のボトルネックIP能力がボトルネックIP容量がいっぱいRTT上で平均よりも実質的に大きいかもしれません。 TCPは、ボトルネックを介して配信されたデータからクロックを導出するので、フロント経路は、潜在的にスロースタート中に倍増されるACKストリームによって暗示寸法（サイズ及びIPレート）で任意のデータバーストを吸収するのに十分なバッファリングを有していなければなりません。リターンパスがACKストリームを変更されていない場合は、暗黙のボトルネックIP能力がボトルネックIP容量と同じになります。詳細については、セクション4.1および付録Bを参照してください。"
    },
    {
      "indent": 3,
      "text": "sender interface rate: The IP rate that corresponds to the IP capacity of the data sender's interface. Due to sender efficiency algorithms, including technologies such as TCP segmentation offload (TSO), nearly all modern servers deliver data in bursts at full interface link rate. Today, 1 or 10 Gb/s are typical.",
      "ja": "送信元インターフェイス率：データ送信側のインターフェイスのIP容量に対応するIP率。このようなTCPセグメンテーションオフロード（TSO）などの技術を含む、送信者の効率化アルゴリズムに、ほぼすべての近代的なサーバーは、完全なインタフェースのリンク速度でバースト内のデータを提供します。今日、1又は10Gb / sのが典型的です。"
    },
    {
      "indent": 3,
      "text": "header_overhead: The IP and TCP header sizes, which are the portion of each MTU not available for carrying application payload. Without loss of generality, this is assumed to be the size for returning acknowledgments (ACKs). For TCP, the Maximum Segment Size (MSS) is the Target MTU minus the header_overhead.",
      "ja": "header_overhead：アプリケーション・ペイロードを運ぶために利用可能ではない各MTUの一部であるIPおよびTCPヘッダサイズ。一般性を失うことなく、これは、肯定応答（ACKを）戻すためのサイズであると仮定されます。 TCPの場合は、最大セグメントサイズ（MSS）がターゲットMTUマイナスheader_overheadです。"
    },
    {
      "indent": 0,
      "text": "3.4. Basic Parameters",
      "section_title": true,
      "ja": "3.4. 基本パラメータ"
    },
    {
      "indent": 3,
      "text": "Basic parameters common to models and subpath tests are defined here. Formulas for target_window_size and target_run_length appear in Section 5.2. Note that these are mixed between application transport performance (excludes headers) and IP performance (includes TCP headers and retransmissions as part of the IP payload).",
      "ja": "モデルとサブパスのテストに共通する基本的なパラメータは、ここで定義されています。 target_window_sizeとtarget_run_lengthのための計算式は、5.2節に表示されます。これらは（IPペイロードの一部として、TCPヘッダ及び再送信を含む）アプリケーション輸送性能（ヘッダを除く）とIP性能と混合されることに留意されたいです。"
    },
    {
      "indent": 3,
      "text": "Network power: The observed data rate divided by the observed RTT. Network power indicates how effectively a transport protocol is filling a network.",
      "ja": "ネットワーク電源：観測されたRTTで割った観測データレート。ネットワーク電源は、トランスポートプロトコルは、ネットワークを充填する方法を効果的に示しています。"
    },
    {
      "indent": 3,
      "text": "Window [size]: The total quantity of data carried by packets in-flight plus the data represented by ACKs circulating in the network is referred to as the window. See Section 4.1. Sometimes used with other qualifiers (congestion window (cwnd) or receiver window) to indicate which mechanism is controlling the window.",
      "ja": "ウィンドウ[サイズ]：機内パケットプラスネットワーク内で循環するのACKによって表されるデータによって運ばれるデータの合計量をウィンドウと呼ばれます。 4.1節を参照してください。時々ウィンドウを制御された機構を示すために、他の修飾子（輻輳ウィンドウ（CWND）または受信ウィンドウ）で使用されます。"
    },
    {
      "indent": 3,
      "text": "pipe size: A general term for the number of packets needed in flight (the window size) to exactly fill a network path or subpath. It corresponds to the window size, which maximizes network power. It is often used with additional qualifiers to specify which path, under what conditions, etc.",
      "ja": "パイプサイズ：飛行中に必要なパケットの数の総称（ウィンドウサイズ）は、正確にネットワークパスまたはサブパスを充填します。これは、ネットワークの消費電力を最大ウィンドウサイズに対応しています。頻繁にどのような条件などの下で、どのパスを指定するために追加の修飾子と一緒に使用されます"
    },
    {
      "indent": 3,
      "text": "target_window_size: The average number of packets in flight (the window size) needed to meet the Target Data Rate for the specified Target RTT and Target MTU. It implies the scale of the bursts that the network might experience.",
      "ja": "target_window_size：指定されたターゲットRTTとターゲットMTUのターゲットデータレートを満たすために必要な飛行中のパケットの平均数（ウィンドウサイズ）。これは、ネットワークが経験するかもしれないバーストの規模を意味します。"
    },
    {
      "indent": 3,
      "text": "run length: A general term for the observed, measured, or specified number of packets that are (expected to be) delivered between losses or ECN CE marks. Nominally, it is one over the sum of the loss and ECN CE marking probabilities, if they are independently and identically distributed.",
      "ja": "ランレングス：（ことが期待）されるパケットの、観察された測定、または指定された数のための一般的な用語は、損失またはECNのCEマーク間の送達しました。彼らは独立同一分布している場合には、名目上、それは、確率をマーキング損失やECN CEの合計分の1です。"
    },
    {
      "indent": 3,
      "text": "target_run_length: The target_run_length is an estimate of the minimum number of non-congestion marked packets needed between losses or ECN CE marks necessary to attain the target_data_rate over a path with the specified target_RTT and target_MTU, as computed by a mathematical model of TCP congestion control. A reference calculation is shown in Section 5.2 and alternatives in Appendix A.",
      "ja": "target_run_length：TCP輻輳制御の数学的モデルによって計算さtarget_run_lengthが損失またはECN CEとの間に必要な非輻輳マークされたパケットの最小数の推定値は、指定されたtarget_RTTとtarget_MTUのパス上target_data_rateを達成するのに必要なマークされています。基準計算は、付録Aのセクション5.2および代替形態に示されています"
    },
    {
      "indent": 3,
      "text": "reference target_run_length: target_run_length computed precisely by the method in Section 5.2. This is likely to be slightly more conservative than required by modern TCP implementations.",
      "ja": "基準target_run_length：第5.2節の方法で正確に計算target_run_length。これは、近代的なTCPの実装によって必要とされるよりわずかに保守的である可能性が高いです。"
    },
    {
      "indent": 0,
      "text": "3.5. Ancillary Parameters",
      "section_title": true,
      "ja": "3.5. 補助パラメータ"
    },
    {
      "indent": 3,
      "text": "The following ancillary parameters are used for some tests:",
      "ja": "次の補助パラメータは、いくつかのテストのために使用されます。"
    },
    {
      "indent": 3,
      "text": "derating: Under some conditions, the standard models are too conservative. The modeling framework permits some latitude in relaxing or \"derating\" some test parameters, as described in Section 5.3, in exchange for a more stringent TIDS validation",
      "ja": "ディレーティングは：いくつかの条件の下では、標準モデルがあまりにも保守的です。より厳しいTIDS検証と引き換えに、5.3節で説明したようにモデリングフレームワークは、いくつかのテストパラメータリラックスまたは「軽減」にいくつかの自由度を可能にします"
    },
    {
      "indent": 6,
      "text": "procedures, described in Section 10. Models can be derated by including a multiplicative derating factor to make tests less stringent.",
      "ja": "第10モデルで説明する手順は、テストがあまり厳しくせる乗法ディレーティング係数を含めることによってディレーティングすることができます。"
    },
    {
      "indent": 3,
      "text": "subpath_IP_capacity: The IP capacity of a specific subpath.",
      "ja": "subpath_IP_capacity：特定のサブパスのIP容量。"
    },
    {
      "indent": 3,
      "text": "test path: A subpath of a complete path under test.",
      "ja": "テストパス：テスト中の完全なパスのサブパス。"
    },
    {
      "indent": 3,
      "text": "test_path_RTT: The RTT observed between two measurement points using packet sizes that are consistent with the transport protocol. This is generally MTU-sized packets of the forward path and packets with a size of header_overhead on the return path.",
      "ja": "test_path_RTTは：RTTは、トランスポートプロトコルと一致するパケットサイズを使用して、2つの測定点の間で観察しました。これは、一般に、リターン経路上header_overheadのサイズを有するフォワードパスと、パケットのMTUサイズのパケットです。"
    },
    {
      "indent": 3,
      "text": "test_path_pipe: The pipe size of a test path. Nominally, it is the test_path_RTT times the test path IP_capacity.",
      "ja": "test_path_pipe：テストパスのパイプサイズ。名目上は、それがtest_path_RTT回のテストパスIP_capacityです。"
    },
    {
      "indent": 3,
      "text": "test_window: The smallest window sufficient to meet or exceed the target_rate when operating with a pure self-clock over a test path. The test_window is typically calculated as follows (but see the discussion in Appendix B about the effects of channel scheduling on RTT):",
      "ja": "test_window：テストパス上純粋な自己クロックで動作するときtarget_rateを満たすか上回るのに十分な最小ウィンドウ。 test_windowは、一般的に次のように計算（ただし、RTTのチャネルスケジューリングの影響については、付録Bでの議論を参照）されています。"
    },
    {
      "indent": 6,
      "text": "ceiling(target_data_rate * test_path_RTT / (target_MTU - header_overhead))",
      "ja": "天井（target_data_rate * test_path_RTT /（target_MTU  -  header_overhead））"
    },
    {
      "indent": 6,
      "text": "On some test paths, the test_window may need to be adjusted slightly to compensate for the RTT being inflated by the devices that schedule packets.",
      "ja": "いくつかのテスト経路上、test_windowパケットをスケジュールするデバイスによって膨張されるRTTを補償するためにわずかに調整する必要があるかもしれません。"
    },
    {
      "indent": 0,
      "text": "3.6. Temporal Patterns for Test Streams",
      "section_title": true,
      "ja": "3.6. テストストリームの時間的パターン"
    },
    {
      "indent": 3,
      "text": "The terminology below is used to define temporal patterns for test streams. These patterns are designed to mimic TCP behavior, as described in Section 4.1.",
      "ja": "以下の用語は、テストストリームの時間的パターンを定義するために使用されます。 4.1節で説明したようにこれらのパターンは、TCPの挙動を模倣するように設計されています。"
    },
    {
      "indent": 3,
      "text": "packet headway: Time interval between packets, specified from the start of one to the start of the next. For example, if packets are sent with a 1 ms headway, there will be exactly 1000 packets per second.",
      "ja": "パケット車間：次の開始までの1の先頭から指定されたパケットの時間間隔。パケットが1ミリ秒の車間で送信される場合、例えば、毎秒正確千パケットが存在することになります。"
    },
    {
      "indent": 3,
      "text": "burst headway: Time interval between bursts, specified from the start of the first packet of one burst to the start of the first packet of the next burst. For example, if 4 packet bursts are sent with a 1 ms burst headway, there will be exactly 4000 packets per second.",
      "ja": "バースト車間：1つのバーストの最初のパケットの開始から次のバーストの最初のパケットの先頭に指定されたバースト間の時間間隔。 4つのパケットバーストが車間バースト1ミリ秒で送信される場合、例えば、毎秒正確4000パケットが存在することになります。"
    },
    {
      "indent": 3,
      "text": "paced single packets: Individual packets sent at the specified rate or packet headway.",
      "ja": "ペース単一のパケット：指定したレートまたはパケット車間で送信される個々のパケット。"
    },
    {
      "indent": 3,
      "text": "paced bursts: Bursts on a timer. Specify any 3 of the following: average data rate, packet size, burst size (number of packets), and burst headway (burst start to start). By default, the bursts are assumed to occur at full sender interface rate, such that the packet headway within each burst is the minimum supported by the sender's interface. Under some conditions, it is useful to explicitly specify the packet headway within each burst.",
      "ja": "ペースバースト：タイマーのバースト。 （開始するバースト開始）平均データレート、パケットサイズ、バーストサイズ（パケット数）、及びバースト車間：以下のいずれか3を指定します。デフォルトでは、バーストは、各バースト内のパケット車間は、送信者のインターフェースによってサポートされる最小値であるように、完全な送信者インタフェース速度で起こると仮定されます。いくつかの条件の下では、明示的に各バースト内のパケット車間を特定することは有用です。"
    },
    {
      "indent": 3,
      "text": "slowstart rate: Paced bursts of four packets each at an average data rate equal to twice the implied bottleneck IP capacity (but not more than the sender interface rate). This mimics TCP slowstart. This is a two-level burst pattern described in more detail in Section 6.1. If the implied bottleneck IP capacity is more than half of the sender interface rate, the slowstart rate becomes the sender interface rate.",
      "ja": "スロースタート速度：二回暗黙ボトルネックIP容量（ただし、送信側インタフェース速度を超えない）に等しい平均データレートで4つのパケット毎のペースバースト。これは、TCPのスロースタートを模倣します。これは、6.1節でより詳細に記載された2レベルのバーストパターンです。暗黙のボトルネックIP容量は、送信側インタフェース率の半分以上である場合には、スロースタート・レートは、送信元インターフェイス率になります。"
    },
    {
      "indent": 3,
      "text": "slowstart burst: A specified number of packets in a two-level burst pattern that resembles slowstart. This mimics one round of TCP slowstart.",
      "ja": "スロースタートは、バースト：スロースタートに似ている二レベルバーストパターンで指定された数のパケットを。 TCPのスロースタートのこの模倣1ラウンド。"
    },
    {
      "indent": 3,
      "text": "repeated slowstart bursts: Slowstart bursts repeated once per target_RTT. For TCP, each burst would be twice as large as the prior burst, and the sequence would end at the first ECN CE mark or lost packet. For measurement, all slowstart bursts would be the same size (nominally, target_window_size but other sizes might be specified), and the ECN CE marks and lost packets are counted.",
      "ja": "繰り返しスロースタートバースト：スロースタートバーストはtarget_RTT一回繰り返しました。 TCPの場合は、各バーストは前バーストの2倍になり、およびシーケンスは、最初のECN CEマークまたは失われたパケットで終わるだろう。測定のために、すべてのスロースタートバーストは、同じサイズ（公称、target_window_sizeが、他のサイズが指定されるかもしれない）であろうと、ECNのCEマークと失われたパケットがカウントされます。"
    },
    {
      "indent": 0,
      "text": "3.7. Tests",
      "section_title": true,
      "ja": "3.7. テスト"
    },
    {
      "indent": 3,
      "text": "The tests described in this document can be grouped according to their applicability.",
      "ja": "この文書で説明したテストは、その適用に応じてグループ分けすることができます。"
    },
    {
      "indent": 3,
      "text": "Capacity tests: Capacity tests determine if a network subpath has sufficient capacity to deliver the Target Transport Performance. As long as the test stream is within the proper envelope for the Target Transport Performance, the average packet losses or ECN CE marks must be below the statistical criteria computed by the model. As such, capacity tests reflect parameters that can transition from passing to failing as a consequence of cross traffic, additional presented load, or the actions of other network users. By definition, capacity tests also consume significant network resources (data capacity and/or queue buffer space), and the test schedules must be balanced by their cost.",
      "ja": "容量テスト：ネットワークサブパスがターゲット交通パフォーマンスを提供するのに十分な能力を持っている場合は、容量のテストが決定。限りテストストリームをターゲット交通パフォーマンスのための適切なエンベロープ内にあるとして、平均パケット損失やECNのCEマークは、モデルによって計算された統計の基準以下でなければなりません。このように、容量試験は、クロストラフィックの結果として失敗に渡すから移行することができるパラメータ、追加の提示負荷、または他のネットワークユーザの行動を反映します。定義上、容量のテストも重要なネットワークリソース（データ容量および/またはキューバッファ・スペース）を消費し、テストスケジュールはそのコストによってバランスをとらなければなりません。"
    },
    {
      "indent": 3,
      "text": "Monitoring tests: Monitoring tests are designed to capture the most important aspects of a capacity test without presenting excessive ongoing load themselves. As such, they may miss some details of the network's performance but can serve as a useful reduced-cost proxy for a capacity test, for example, to support continuous production network monitoring.",
      "ja": "テストのモニタリング：モニタリングテストは、過剰な継続的な負荷自体を提示せずに容量試験の最も重要な側面をキャプチャするために設計されています。そのため、彼らは、ネットワークのパフォーマンスのいくつかの詳細を逃すかもしれないが、継続的な生産ネットワークの監視をサポートするために、例えば、容量試験のための便利な削減コストのプロキシとして機能することができます。"
    },
    {
      "indent": 3,
      "text": "Engineering tests: Engineering tests evaluate how network algorithms (such as Active Queue Management (AQM) and channel allocation) interact with TCP-style self-clocked protocols and adaptive congestion control based on packet loss and ECN CE marks. These tests are likely to have complicated interactions with cross traffic and, under some conditions, can be inversely sensitive to load. For example, a test to verify that an AQM algorithm causes ECN CE marks or packet drops early enough to limit queue occupancy may experience a false pass result in the presence of cross traffic. It is important that engineering tests be performed under a wide range of conditions, including both in situ and bench testing, and over a wide variety of load conditions. Ongoing monitoring is less likely to be useful for engineering tests, although sparse in situ testing might be appropriate.",
      "ja": "エンジニアリングテスト：エンジニアリングテストは（そのようなアクティブキュー管理（AQM）およびチャネル割り当てなど）ネットワークアルゴリズムは、パケット損失やECNのCEマークに基づいてTCPスタイルのセルフクロックのプロトコルおよび適応輻輳制御と対話する方法を評価します。これらのテストは、クロストラフィックで、複雑な相互作用を持っていると、いくつかの条件の下で、負荷に逆敏感であることができそうです。例えば、AQMアルゴリズムは、ECNのCEマークやパケットの原因となることは、キュー占有率を制限するために十分に早く低下していることを確認するための試験は、クロストラフィックの存在下で、偽の合格結果が発生することがあります。エンジニアリングテストをインサイチュ及びベンチテストにおいて、負荷条件の広範囲にわたっての両方を含む広範囲の条件の下で行うことが重要です。その場でのテストではスパースが適切かもしれないが、継続的な監視は、エンジニアリング・テストのために有用である可能性が低いです。"
    },
    {
      "indent": 0,
      "text": "4. Background",
      "section_title": true,
      "ja": "4.背景"
    },
    {
      "indent": 3,
      "text": "When \"Framework for IP Performance Metrics\" [RFC2330] was published in 1998, sound Bulk Transport Capacity (BTC) measurement was known to be well beyond our capabilities. Even when \"A Framework for Defining Empirical Bulk Transfer Capacity Metrics\" [RFC3148] was published, we knew that we didn't really understand the problem. Now, in hindsight, we understand why assessing BTC is such a difficult problem:",
      "ja": "「IPパフォーマンス・メトリックのための枠組み」[RFC2330]は、1998年に出版されたときに、音バルク輸送能力（BTC）の測定はよく私たちの能力を超えてあることが知られていました。場合でも、[RFC3148]出版された、私たちは本当に問題を理解していないことを知っていた「メトリックが実証バルク転送能力を定義するためのフレームワーク」。さて、後知恵では、我々はBTCを評価することは、このような困難な問題である理由を理解します："
    },
    {
      "indent": 3,
      "text": "o TCP is a control system with circular dependencies -- everything affects performance, including components that are explicitly not part of the test (for example, the host processing power is not in-scope of path performance tests).",
      "ja": "O TCPは、円形の依存関係を持つ制御システムは、 - すべてが（例えば、ホスト処理パワーがスコープ内経路性能試験のない）明示的試験の一部ではないコンポーネントを含む、性能に影響を与えます。"
    },
    {
      "indent": 3,
      "text": "o Congestion control is a dynamic equilibrium process, similar to processes observed in chemistry and other fields. The network and transport protocols find an operating point that balances opposing forces: the transport protocol pushing harder (raising the data rate and/or window) while the network pushes back (raising packet loss ratio, RTT, and/or ECN CE marks). By design, TCP congestion control keeps raising the data rate until the network gives some indication that its capacity has been exceeded by dropping packets or adding ECN CE marks. If a TCP sender accurately fills a path to its IP capacity (e.g., the bottleneck is 100% utilized), then packet losses and ECN CE marks are mostly determined by the TCP sender and how aggressively it seeks additional capacity; they are not determined by the network itself, because the network must send exactly the signals that TCP needs to set its rate.",
      "ja": "O輻輳制御は、化学などの分野で観察されたプロセスと同様の動的平衡プロセスです。ネットワークおよびトランスポートプロトコルは、力に対向バランス動作点を見つける：ネットワークは、（上昇、パケットロス率、RTT、及び/又はECNのCEマーク）を押し戻すながらトランスポートプロトコルは、（データレート及び/又は窓を上げる）難しく押します。設計により、TCPの輻輳制御は、ネットワークがその容量がパケットをドロップするか、ECNのCEマークを追加することにより、超過したことを何らかの指示を与えるまでのデータレートを上げ続けています。 TCPの送信側が正確に（例えば、ボトルネックを100％利用している）そのIPの能力へのパスを満た​​した場合、パケットロスやECNのCEマークは、主にTCPの送信者によって決定され、どのように積極的にそれが追加の容量を求めます。ネットワークはTCPはそのレートを設定する必要があり、正確に信号を送信する必要がありますので、彼らは、ネットワーク自体によって決定されていません。"
    },
    {
      "indent": 3,
      "text": "o TCP's ability to compensate for network impairments (such as loss, delay, and delay variation, outside of those caused by TCP itself) is directly proportional to the number of send-ACK round-trip exchanges per second (i.e., inversely proportional to the RTT). As a consequence, an impaired subpath may pass a short RTT local test even though it fails when the subpath is extended by an effectively perfect network to some larger RTT.",
      "ja": "（例えば、TCP自体によって引き起こされるものの外損失、遅延、および遅延変動、など）は、ネットワーク障害を補償するためにTCPの能力が毎秒送信-ACK往復交換の数に直接比例する（すなわち、に反比例O RTT）。その結果、障害サブパスは、サブパスは、いくつかの大きなRTTに効果的に完全ネットワークによって拡張される場合、それは失敗にもかかわらず、短いRTTローカルテストを通過することができます。"
    },
    {
      "indent": 3,
      "text": "o TCP has an extreme form of the Observer Effect (colloquially known as the \"Heisenberg Effect\"). Measurement and cross traffic interact in unknown and ill-defined ways. The situation is actually worse than the traditional physics problem where you can at least estimate bounds on the relative momentum of the measurement and measured particles. In general, for network measurement, you cannot determine even the order of magnitude of the effect. It is possible to construct measurement scenarios where the measurement traffic starves real user traffic, yielding an overly inflated measurement. The inverse is also possible: the user traffic can fill the network, such that the measurement traffic detects only minimal available capacity. In general, you cannot determine which scenario might be in effect, so you cannot gauge the relative magnitude of the uncertainty introduced by interactions with other network traffic.",
      "ja": "O TCPは（口語的に「ハイゼンベルグ効果」として知られている）オブザーバー効果の極端な形状を有しています。測定とクロストラフィックは不明と不明確な方法で対話します。状況はあなたが、少なくとも測定し、測定した粒子の相対的な勢いで境界を推定することができる伝統的な物理学の問題よりも、実際に悪いです。一般に、ネットワーク測定のために、あなたは、効果の大きさのも、順序を決定することはできません。測定トラフィックが過度に膨張し、測定を得、実際のユーザトラフィックを飢え測定シナリオを構築することが可能です。逆も可能です：ユーザトラフィックは、ネットワークを埋めることができ、測定トラフィックは最小限の利用可能容量を検出するようになっています。あなたは他のネットワークトラフィックとの相互作用によって導入不確実性の相対的な大きさを測ることができないので、一般的に、あなたは、シナリオが有効であるかもしれないかを判断することはできません。"
    },
    {
      "indent": 3,
      "text": "o As a consequence of the properties listed above, it is difficult, if not impossible, for two independent implementations (hardware or software) of TCP congestion control to produce equivalent performance results [RFC6576] under the same network conditions.",
      "ja": "TCP輻輳制御の二つの独立した実装（ハードウェアまたはソフトウェア）が同じネットワーク条件下で同等の性能結果[RFC6576]を生成するための上記の特性の結果として、O、それは難しい、そうでない場合は不可能です。"
    },
    {
      "indent": 3,
      "text": "These properties are a consequence of the dynamic equilibrium behavior intrinsic to how all throughput-maximizing protocols interact with the Internet. These protocols rely on control systems based on estimated network metrics to regulate the quantity of data to send into the network. The packet-sending characteristics in turn alter the network properties estimated by the control system metrics, such that there are circular dependencies between every transmission characteristic and every estimated metric. Since some of these dependencies are nonlinear, the entire system is nonlinear, and any change anywhere causes a difficult-to-predict response in network metrics. As a consequence, Bulk Transport Capacity metrics have not fulfilled the analytic framework envisioned in [RFC2330].",
      "ja": "これらのプロパティは、すべてのスループットを最大化プロトコルは、インターネットとの対話方法に固有の動的平衡の行動の結果です。これらのプロトコルは、ネットワークに送信するデータの量を調節するために、推定ネットワークメトリックに基づいて制御システムに依存しています。次に、パケット送信特性は、すべての伝送特性と、すべての推定メトリックとの間の循環依存関係が存在するように、制御システムメトリックによって推定ネットワークの特性を変化させます。これらの依存関係の一部が非線形であるため、全体のシステムは、非線形であり、そして任意の変化がどこネットワークメトリックに困難な予測応答を引き起こします。その結果、バルク輸送能力の指標は、[RFC2330]で想定される分析枠組​​みを満たしていません。"
    },
    {
      "indent": 3,
      "text": "Model-Based Metrics overcome these problems by making the measurement system open loop: the packet transfer statistics (akin to the network estimators) do not affect the traffic or traffic patterns (bursts), which are computed on the basis of the Target Transport Performance. A path or subpath meeting the Target Transfer Performance requirements would exhibit packet transfer statistics and estimated metrics that would not cause the control system to slow the traffic below the Target Data Rate.",
      "ja": "モデルベースのメトリックは、測定システムのオープンループすることによって、これらの問題を克服する：（ネットワーク推定に似）パケット転送の統計をターゲット交通の性能に基づいて計算されている（バースト）、トラフィックまたはトラフィックパターンに影響を与えません。パスまたはサブパスの会議は、ターゲット転送性能要件は、制御システムは、ターゲット・データ・レート以下のトラフィックを遅くする起こさないパケット転送の統計と推定指標を示すであろう。"
    },
    {
      "indent": 0,
      "text": "4.1. TCP Properties",
      "section_title": true,
      "ja": "4.1.  TCPのプロパティ"
    },
    {
      "indent": 3,
      "text": "TCP and other self-clocked protocols (e.g., the Stream Control Transmission Protocol (SCTP)) carry the vast majority of all Internet data. Their dominant bulk data transport behavior is to have an approximately fixed quantity of data and acknowledgments (ACKs) circulating in the network. The data receiver reports arriving data by returning ACKs to the data sender, and the data sender typically responds by sending approximately the same quantity of data back into the network. The total quantity of data plus the data represented by ACKs circulating in the network is referred to as the \"window\". The mandatory congestion control algorithms incrementally adjust the window by sending slightly more or less data in response to each ACK. The fundamentally important property of this system is that it is self-clocked: the data transmissions are a reflection of the ACKs that were delivered by the network, and the ACKs are a reflection of the data arriving from the network.",
      "ja": "TCPおよびその他のセルフクロックのプロトコル（例えば、ストリーム制御伝送プロトコル（SCTP））は、すべてのインターネット・データの大半を運びます。その支配的なバルクデータ転送の動作は、ネットワーク内を循環するデータおよび肯定応答（ACKの）の略一定量を有することです。データ送信側にACKを返すことによって、データを到着するデータ受信レポート、およびデータの送信者は、通常、バックネットワークへのデータのほぼ同じ量を送信して応答します。データとネットワーク内で循環するのACKによって表されるデータの総量は、「ウィンドウ」と呼ばれます。必須の輻輳制御アルゴリズムは増分各ACKに応答してわずかに多かれ少なかれデータを送信することにより、ウィンドウを調整します。データ伝送は、ネットワークにより配信されたACKの反射であり、ACKがネットワークから到着したデータを反映している。このシステムの基本的に重要な特性は、それが自己クロックされているということです。"
    },
    {
      "indent": 3,
      "text": "A number of protocol features cause bursts of data, even in idealized networks that can be modeled as simple queuing systems.",
      "ja": "プロトコル機能の数も、シンプルなキューイングシステムとしてモデル化することができる理想的なネットワークでは、データのバーストを引き起こします。"
    },
    {
      "indent": 3,
      "text": "During slowstart, the IP rate is doubled on each RTT by sending twice as much data as was delivered to the receiver during the prior RTT. Each returning ACK causes the sender to transmit twice the data the ACK reported arriving at the receiver. For slowstart to be able to fill the pipe, the network must be able to tolerate slowstart bursts up to the full pipe size inflated by the anticipated window reduction on the first loss or ECN CE mark. For example, with classic Reno congestion control, an optimal slowstart has to end with a burst that is twice the bottleneck rate for one RTT in duration. This burst causes a queue that is equal to the pipe size (i.e., the window is twice the pipe size), so when the window is halved in response to the first packet loss, the new window will be the pipe size.",
      "ja": "スロースタート時には、IP率は前RTTの間に受信機に配信されたとして、2倍のデータを送信することにより、各RTTに倍増しています。 ACKを返すそれぞれのACKが受信機に到着する報告2倍のデータを送信する送信者が発生します。スロースタートは、パイプを埋めることができるようにするには、ネットワークは、最初の損失やECNのCEマークの予想されるウィンドウの減少によって膨張フルパイプサイズまでバーストスロースタート耐えることができなければなりません。例えば、古典リノ輻輳制御と、最適なスロースタートは、二回の期間に1 RTTのボトルネック率であるバーストで終了しなければなりません。このバーストは、パイプサイズに等しいキューを引き起こす（すなわち、ウィンドウは二倍管のサイズである）ので、ウィンドウが最初のパケット損失に応答して半分になるときに、新しいウィンドウがパイプサイズであろう。"
    },
    {
      "indent": 3,
      "text": "Note that if the bottleneck IP rate is less than half of the capacity of the front path (which is almost always the case), the slowstart bursts will not by themselves cause significant queues anywhere else along the front path; they primarily exercise the queue at the dominant bottleneck.",
      "ja": "ボトルネックIP率が少ない（ほとんど常にそうである）前のパスの容量の半分以上である場合には、スロースタートバーストは自分でフロントのパスに沿ってどこか他の重要なキューを起こさないことに注意してください。彼らは主に支配的なボトルネックでキューを行使する。"
    },
    {
      "indent": 3,
      "text": "Several common efficiency algorithms also cause bursts. The self-clock is typically applied to groups of packets: the receiver's delayed ACK algorithm generally sends only one ACK per two data segments. Furthermore, modern senders use TCP segmentation offload (TSO) to reduce CPU overhead. The sender's software stack builds super-sized TCP segments that the TSO hardware splits into MTU-sized segments on the wire. The net effect of TSO, delayed ACK, and other efficiency algorithms is to send bursts of segments at full sender interface rate.",
      "ja": "いくつかの一般的な効率化アルゴリズムはまた、バーストを起こします。自己クロックは、典型的には、パケットのグループに適用される。受信機の遅延ACKアルゴリズムは、一般に、2つのデータ・セグメントごとに1つのACKを送信します。さらに、現代の送信者は、CPUのオーバーヘッドを減らすために、TCPセグメンテーションオフロード（TSO）を使用します。送信者のソフトウェア・スタックは、TSOのハードウェアは、ワイヤ上のMTUサイズのセグメントに分割超大型TCPセグメントを構築します。 TSOの正味の効果は、ACK遅延、及び他の効率アルゴリズムの完全な送信者インタフェース速度でセグメントのバーストを送信することです。"
    },
    {
      "indent": 3,
      "text": "Note that these efficiency algorithms are almost always in effect, including during slowstart, such that slowstart typically has a two-level burst structure. Section 6.1 describes slowstart in more detail.",
      "ja": "これら効率アルゴリズムは、スロースタートは、典型的には、二レベル・バースト構造を有するように、スロースタート時を含む、実質的にほとんど常にあることに注意してください。 6.1節では、より詳細にスロースタートを記述する。"
    },
    {
      "indent": 3,
      "text": "Additional sources of bursts include TCP's initial window [RFC6928], application pauses, channel allocation mechanisms, and network devices that schedule ACKs. Appendix B describes these last two items. If the application pauses (e.g., stops reading or writing data) for some fraction of an RTT, many TCP implementations catch up to their earlier window size by sending a burst of data at the full sender interface rate. To fill a network with a realistic application, the network has to be able to tolerate sender interface rate bursts large enough to restore the prior window following application pauses.",
      "ja": "バーストの付加的な源は、ACKをスケジュールTCPの初期画面[RFC6928]、アプリケーションの一時停止、チャネル割り当てメカニズム、及びネットワーク装置を含みます。付録Bは、これらの最後の二つの項目について説明します。アプリケーションの一時停止がRTTのいくつかの画分について（例えば、データの読み取りや書き込みを停止した）場合は、多くのTCP実装は、完全な送信元インターフェイス速度でデータのバーストを送信することによって、彼らの以前のウィンドウサイズに追いつきます。現実的なアプリケーションとネットワークを埋めるために、ネットワークは、アプリケーションの一時停止、次の前のウィンドウを復元するのに十分な大きさの送信者インタフェース率バーストに耐えなければなりません。"
    },
    {
      "indent": 3,
      "text": "Although the sender interface rate bursts are typically smaller than the last burst of a slowstart, they are at a higher IP rate so they potentially exercise queues at arbitrary points along the front path from the data sender up to and including the queue at the dominant bottleneck. It is known that these bursts can hurt network performance, especially in conjunction with other queue pressure; however, we are not aware of any models for estimating the impact or prescribing limits on the size or frequency of sender rate bursts.",
      "ja": "送信元インターフェイスのレートバーストは通常​​、スロースタートの最後のバーストよりも小さいですが、彼らは潜在までのデータ送信側からフロントのパスに沿って任意の点でキューを行使し、支配的なボトルネックでキューを含むので、彼らは、より高いIPレートであります。これらのバーストは、特に他のキュー圧力と連動して、ネットワークのパフォーマンスを傷つけることができることが知られています。しかし、我々は影響を推定するか、送信者率バーストの大きさや周波数の制限を規定する任意のモデルに気づいていません。"
    },
    {
      "indent": 3,
      "text": "In conclusion, to verify that a path can meet a Target Transport Performance, it is necessary to independently confirm that the path can tolerate bursts at the scales that can be caused by the above mechanisms. Three cases are believed to be sufficient:",
      "ja": "結論として、経路は、標的輸送性能を満たすことができることを確認するために、独立してパスは、上記のメカニズムによって引き起こされる可能性がスケールでバーストを許容することができることを確認する必要があります。三つのケースは十分であると考えられています。"
    },
    {
      "indent": 3,
      "text": "o Two-level slowstart bursts sufficient to get connections started properly.",
      "ja": "O接続を取得するのに十分なバーストスロースタート2レベルは正常に開始しました。"
    },
    {
      "indent": 3,
      "text": "o Ubiquitous sender interface rate bursts caused by efficiency algorithms. We assume four packet bursts to be the most common case, since it matches the effects of delayed ACK during slowstart. These bursts should be assumed not to significantly affect packet transfer statistics.",
      "ja": "効率アルゴリズムによって引き起こさOユビキタス送信者インタフェース速度バースト。私たちは、それがスロースタート時の遅延ACKの影響と一致したため、4つのパケットは、最も一般的なケースのようにバーストを前提としています。これらのバーストは大幅にパケット転送統計に影響を与えないと仮定しなければなりません。"
    },
    {
      "indent": 3,
      "text": "o Infrequent sender interface rate bursts that are the maximum of the full target_window_size and the initial window size (10 segments in [RFC6928]). The target_run_length may be derated for these large fast bursts.",
      "ja": "完全target_window_size初期ウィンドウサイズ（[RFC6928]で10個のセグメント）の最大値であるOまれ送信者インタフェース速度バースト。 target_run_lengthは、これらの大規模な高速なバーストのためにディレーティングすることができます。"
    },
    {
      "indent": 3,
      "text": "If a subpath can meet the required packet loss ratio for bursts at all of these scales, then it has sufficient buffering at all potential bottlenecks to tolerate any of the bursts that are likely introduced by TCP or other transport protocols.",
      "ja": "サブパスは、これらのスケールの全てのバーストのために必要なパケット損失率を満たすことができるなら、それはおそらくTCPまたはその他のトランスポートプロトコルによって導入されたバーストのいずれかを容認するために、すべての潜在的なボトルネックで十分なバッファリングを持っています。"
    },
    {
      "indent": 0,
      "text": "4.2. Diagnostic Approach",
      "section_title": true,
      "ja": "4.2. 診断のアプローチ"
    },
    {
      "indent": 3,
      "text": "A complete path is expected to be able to attain a specified Bulk Transport Capacity if the path's RTT is equal to or smaller than the Target RTT, the path's MTU is equal to or larger than the Target MTU, and all of the following conditions are met:",
      "ja": "完全なパスがパスのRTTと等しい又はターゲットRTTよりも小さい場合、指定バルク輸送能力を達成することができると予想される、パスのMTUに等しい又はターゲットMTUよりも大きく、次の条件のすべてが満たされています："
    },
    {
      "indent": 3,
      "text": "1. The IP capacity is above the Target Data Rate by a sufficient margin to cover all TCP/IP overheads. This can be confirmed by the tests described in Section 8.1 or any number of IP capacity tests adapted to implement MBM.",
      "ja": "1. IP容量は、すべてのTCP / IPのオーバーヘッドをカバーするために十分なマージンによってターゲット・データ・レートを上回っています。これは、8.1節またはMBMを実装するようになってIP能力テストの任意の数に記載の試験によって確認することができます。"
    },
    {
      "indent": 3,
      "text": "2. The observed packet transfer statistics are better than required by a suitable TCP performance model (e.g., fewer packet losses or ECN CE marks). See Section 8.1 or any number of low- or fixed-rate packet loss tests outside of MBM.",
      "ja": "2.観察パケット転送の統計情報は、適切なTCP性能モデルによって必要とされるよりも優れている（例えば、より少ないパケット損失またはECNのCEマーク）。 8.1節またはMBMの外部低または固定レートパケット損失試験の任意の数を参照。"
    },
    {
      "indent": 3,
      "text": "3. There is sufficient buffering at the dominant bottleneck to absorb a slowstart burst large enough to get the flow out of slowstart at a suitable window size. See Section 8.3.",
      "ja": "3.スロースタートを吸収する主要なボトルネックで十分なバッファリングは、適切なウィンドウサイズでスロースタートからの流出を取得するのに十分な大きさのバーストがあります。 8.3節を参照してください。"
    },
    {
      "indent": 3,
      "text": "4. There is sufficient buffering in the front path to absorb and smooth sender interface rate bursts at all scales that are likely to be generated by the application, any channel arbitration in the ACK path, or any other mechanisms. See Section 8.4.",
      "ja": "4.吸収するフロント経路における十分な緩衝及び平滑アプリケーションによって生成される可能性があるすべてのスケールで、送信者インタフェース速度バースト、ACK経路内の任意のチャネル調停、または任意の他のメカニズムが存在します。 8.4節を参照してください。"
    },
    {
      "indent": 3,
      "text": "5. When there is a slowly rising standing queue at the bottleneck, then the onset of packet loss has to be at an appropriate point (in time or in queue depth) and has to be progressive, for example, by use of Active Queue Management [RFC7567]. See Section 8.2.",
      "ja": "5.ボトルネックでゆっくりと上昇立っキューがある場合は、パケット損失の発症は（時間内またはキューの深さの）適切なポイントでなければならず、アクティブキュー管理を使用することにより、例えば、プログレッシブなければなりません[RFC7567]。 8.2節を参照してください。"
    },
    {
      "indent": 3,
      "text": "6. When there is a standing queue at a bottleneck for a shared media subpath (e.g., a half-duplex link), there must be a suitable bound on the interaction between ACKs and data, for example, due to the channel arbitration mechanism. See Section 8.2.4.",
      "ja": "前記起立キューは、共有メディアサブパスのボトルネックである場合（例えば、半二重リンク）によるチャネル調停機構に、例えば、ACK及びデータとの間の相互作用に適切なバウンドが存在しなければなりません。第8.2.4項を参照してください。"
    },
    {
      "indent": 3,
      "text": "Note that conditions 1 through 4 require capacity tests for validation and thus may need to be monitored on an ongoing basis. Conditions 5 and 6 require engineering tests, which are best performed in controlled environments (e.g., bench tests). They won't generally fail due to load but may fail in the field (e.g., due to configuration errors, etc.) and thus should be spot checked.",
      "ja": "1〜4の条件を検証するための能力テストを必要とするので、継続的に監視する必要があるかもしれないことに留意されたいです。条件5及び6は、最良の制御された環境（例えば、ベンチ試験）で実行されるエンジニアリングテストを必要とします。彼らは一般的にロードすることにより、失敗することはありませんが、フィールドに失敗することがあり（例えば、等により構成エラーに）ので、スポットチェックする必要があります。"
    },
    {
      "indent": 3,
      "text": "A tool that can perform many of the tests is available from [MBMSource].",
      "ja": "テストの多くを実行できるツールは、[MBMSource]から入手可能です。"
    },
    {
      "indent": 1,
      "text": "4.3. New Requirements Relative to",
      "section_title": true,
      "ja": "4.3. への相対的な新しい要件"
    },
    {
      "indent": 3,
      "text": "Model-Based Metrics are designed to fulfill some additional requirements that were not recognized at the time RFC 2330 [RFC2330] was published. These missing requirements may have significantly contributed to policy difficulties in the IP measurement space. Some additional requirements are:",
      "ja": "モデルベースのメトリックが公開された時点のRFC 2330 [RFC2330]で認識されていなかったいくつかの追加要件を満たすように設計されています。これらの不足している要件が大幅にIPの測定空間における政策の難しさに貢献している可能性があります。いくつかの追加要件は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "o IP metrics must be actionable by the ISP -- they have to be interpreted in terms of behaviors or properties at the IP or lower layers that an ISP can test, repair, and verify.",
      "ja": "O IPメトリックはISPによって実行可能でなければならない - それらは、ISPは、修復をテストし、確認することができるIPまたは下位レイヤで動作や特性の観点から解釈されなければなりません。"
    },
    {
      "indent": 3,
      "text": "o Metrics should be spatially composable, such that measures of concatenated paths should be predictable from subpaths.",
      "ja": "Oメトリックは、連結パスの対策がサブパスから予測可能であるべきであるように、空間的に構成可能であるべきです。"
    },
    {
      "indent": 3,
      "text": "o Metrics must be vantage point invariant over a significant range of measurement point choices, including off-path measurement points. The only requirements for Measurement Point (MP) selection should be that the RTT between the MPs is below some reasonable bound and that the effects of the \"test leads\" connecting MPs to the subpath under test can be calibrated out of the measurements. The latter might be accomplished if the test leads are effectively ideal or their properties can be deducted from the measurements between the MPs. While many tests require that the test leads have at least as much IP capacity as the subpath under test, some do not, for example, the Background Packet Transfer Statistics Tests described in Section 8.1.3.",
      "ja": "Oメトリックは、オフパス測定点を含む測定点の選択、かなりの範囲にわたって不変有利な点でなければなりません。測定ポイント（MP）選択のための唯一の要件は、MP間のRTTは、いくつかの合理的なバウンドを下回っており、テスト中のサブパスにMPを接続する「テスト・リード」の効果が測定の外に較正することができるということでなければなりません。テストリードが効果的に理想的であるか、または、それらの特性がMP間の測定値から控除することができれば、後者は達成されるかもしれません。多くのテストは、テスト・リードが、テスト中のサブパスと少なくとも同じくらいのIP能力を持っている必要がありますが、一部ではなく、例えば、背景のパケット8.1.3項で説明した転送統計テストを行います。"
    },
    {
      "indent": 3,
      "text": "o Metric measurements should be repeatable by multiple parties with no specialized access to MPs or diagnostic infrastructure. It should be possible for different parties to make the same measurement and observe the same results. In particular, it is important that both a consumer (or the consumer's delegate) and ISP be able to perform the same measurement and get the same result. Note that vantage independence is key to meeting this requirement.",
      "ja": "Oメトリック測定は、議員または診断インフラストラクチャにない特殊なアクセス権を持つ複数の当事者によって反復であるべきです。別の関係者は、同じ測定を行い、同じ結果を観察することが可能でなければなりません。特に、消費者（あるいは消費者の代理人）とISPの両方が同じ測定を実行し、同じ結果を得ることができることが重要です。その見晴らしの独立性は、この要件を満たすための鍵であることに注意してください。"
    },
    {
      "indent": 0,
      "text": "5. Common Models and Parameters",
      "section_title": true,
      "ja": "5.一般的なモデルとパラメータ"
    },
    {
      "indent": 0,
      "text": "5.1. Target End-to-End Parameters",
      "section_title": true,
      "ja": "5.1. ターゲットエンドツーエンドのパラメータ"
    },
    {
      "indent": 3,
      "text": "The target end-to-end parameters are the Target Data Rate, Target RTT, and Target MTU as defined in Section 3. These parameters are determined by the needs of the application or the ultimate end user and the complete Internet path over which the application is expected to operate. The target parameters are in units that make sense to layers above the TCP layer: payload bytes delivered to the application. They exclude overheads associated with TCP and IP headers, retransmits and other protocols (e.g., DNS). Note that IP-based network services include TCP headers and retransmissions as part of delivered payload; this difference (header_overhead) is recognized in calculations below.",
      "ja": "これらのパラメータは、アプリケーションまたは究極エンドユーザとアプリケーションを完全にインターネットパスのニーズによって決定され、セクション3で定義されるように、ターゲットのエンドツーエンドのパラメータは、ターゲットデータレート、ターゲットRTT、およびターゲットMTUであります動作することが期待されます。アプリケーションに配信ペイロードバイト：ターゲットパラメータはTCP層の上の層に意味をなす単位です。彼らは、TCPとIPヘッダ、再送信し、他のプロトコル（例えば、DNS）に関連したオーバーヘッドを除外します。 IPベースのネットワークサービスが提供ペイロードの一部として、TCPヘッダおよび再送信が含まれていることに注意してください。この差（header_overhead）は、以下の計算で認識されています。"
    },
    {
      "indent": 3,
      "text": "Other end-to-end parameters defined in Section 3 include the effective bottleneck data rate, the sender interface data rate, and the TCP and IP header sizes.",
      "ja": "セクション3で定義されている他のエンド・ツー・エンドのパラメータが有効なボトルネックデータレート、送信側インターフェースデータレート、およびTCPおよびIPヘッダのサイズを含みます。"
    },
    {
      "indent": 3,
      "text": "The target_data_rate must be smaller than all subpath IP capacities by enough headroom to carry the transport protocol overhead, explicitly including retransmissions and an allowance for fluctuations in TCP's actual data rate. Specifying a target_data_rate with insufficient headroom is likely to result in brittle measurements that have little predictive value.",
      "ja": "target_data_rateは、明示的に再送信し、TCPの実際のデータ・レートの変動のための手当を含め、トランスポートプロトコルのオーバーヘッドを運ぶために十分なヘッドルームにより、すべてのサブパスのIP容量よりも小さくなければなりません。不十分なヘッドルームとtarget_data_rateを指定すると、少しの予測値を有する脆性の測定につながる可能性があります。"
    },
    {
      "indent": 3,
      "text": "Note that the target parameters can be specified for a hypothetical path (for example, to construct TIDS designed for bench testing in the absence of a real application) or for a live in situ test of production infrastructure.",
      "ja": "ターゲットパラメータは仮想的経路（例えば、実際のアプリケーションが存在しない状態でベンチテストのために設計されたTIDSを構築するために）、または生産基盤の現場試験でのライブのために指定することができることに留意されたいです。"
    },
    {
      "indent": 3,
      "text": "The number of concurrent connections is explicitly not a parameter in this model. If a subpath requires multiple connections in order to meet the specified performance, that must be stated explicitly, and the procedure described in Section 6.4 applies.",
      "ja": "同時接続数は、明示的にこのモデルではパラメータではありません。サブパスが指定された性能を満たすために複数の接続を必要とする場合、それが明示的に指定する必要があり、6.4節で説明した手順が適用されます。"
    },
    {
      "indent": 0,
      "text": "5.2. Common Model Calculations",
      "section_title": true,
      "ja": "5.2. 一般的なモデル計算"
    },
    {
      "indent": 3,
      "text": "The Target Transport Performance is used to derive the target_window_size and the reference target_run_length.",
      "ja": "ターゲット交通パフォーマンスがtarget_window_sizeと参照target_run_lengthを導出するために使用されます。"
    },
    {
      "indent": 3,
      "text": "The target_window_size is the average window size in packets needed to meet the target_rate, for the specified target_RTT and target_MTU. To calculate target_window_size:",
      "ja": "target_window_sizeは、指定されたtarget_RTTとtarget_MTUため、target_rateを満たすために必要なパケットの平均ウィンドウサイズです。 target_window_sizeを計算するには："
    },
    {
      "indent": 3,
      "text": "target_window_size = ceiling(target_rate * target_RTT / (target_MTU - header_overhead))",
      "ja": "target_window_size =天井（target_rate * target_RTT /（target_MTU  -  header_overhead））"
    },
    {
      "indent": 3,
      "text": "The target_run_length is an estimate of the minimum required number of unmarked packets that must be delivered between losses or ECN CE marks, as computed by a mathematical model of TCP congestion control. The derivation here is parallel to the derivation in [MSMO97] and, by design, is quite conservative.",
      "ja": "target_run_lengthは、TCP輻輳制御の数学的モデルによって計算されるように、損失またはECNのCEマーク間送達されなければならないマークされていないパケットの最小必要数の推定値です。ここで導出する[MSMO97]で導出に平行であり、設計により、非常に保守的です。"
    },
    {
      "indent": 3,
      "text": "The reference target_run_length is derived as follows. Assume the subpath_IP_capacity is infinitesimally larger than the target_data_rate plus the required header_overhead. Then, target_window_size also predicts the onset of queuing. A larger window will cause a standing queue at the bottleneck.",
      "ja": "次のように参照target_run_lengthが導出されます。 subpath_IP_capacityがtarget_data_rateプラス必要header_overheadよりも無限に大きくなっていると仮定します。その後、target_window_sizeもキューイングの発症を予測します。大きな窓がボトルネックに立っキューの原因となります。"
    },
    {
      "indent": 3,
      "text": "Assume the transport protocol is using standard Reno-style Additive Increase Multiplicative Decrease (AIMD) congestion control [RFC5681] (but not Appropriate Byte Counting [RFC3465]) and the receiver is using standard delayed ACKs. Reno increases the window by one packet every pipe size worth of ACKs. With delayed ACKs, this takes two RTTs per increase. To exactly fill the pipe, the spacing of losses must be no closer than when the peak of the AIMD sawtooth reached exactly twice the target_window_size. Otherwise, the multiplicative window reduction triggered by the loss would cause the network to be underfilled. Per [MSMO97] the number of packets between losses must be the area under the AIMD sawtooth. They must be no more frequent than every 1 in ((3/2)*target_window_size)*(2*target_window_size) packets, which simplifies to:",
      "ja": "トランスポートプロトコルは標準リノスタイル添加剤は（AIMD）輻輳制御[RFC5681]（ただし、適切なバイトカウント[RFC3465]）乗算減少を増やし、受信機は、標準的な遅延ACKを使用している使用していると仮定する。リノは、1つのパケットACKの価値があるすべてのパイプサイズでウィンドウを増加します。遅延ACKを使用すると、これは増加ごとに2つのRTTをとります。正確にパイプを埋めるために、損失の間隔がAIMDののこぎり波のピークがちょうど2倍target_window_sizeに達したときよりも近いあってはなりません。それ以外の場合は、損失によってトリガ乗法窓の減少は、ネットワークがアンダーフィルすることになります。 [MSMO97】損失との間のパケットの数は、AIMDの鋸歯状の下の面積でなければなりません。 ：彼らはより頻繁に簡素化（（3/2）* target_window_size）*（2 * target_window_size）パケット内のすべての1以上である必要があります"
    },
    {
      "indent": 3,
      "text": "target_run_length = 3*(target_window_size^2)",
      "ja": "target_run_length = 3 *（target_window_size ^ 2）"
    },
    {
      "indent": 3,
      "text": "Note that this calculation is very conservative and is based on a number of assumptions that may not apply. Appendix A discusses these assumptions and provides some alternative models. If a different model is used, an FSTIDS must document the actual method for computing target_run_length and the ratio between alternate target_run_length and the reference target_run_length calculated above, along with a discussion of the rationale for the underlying assumptions.",
      "ja": "この計算は非常に保守的であり、適用されないことが前提の数に基づいていることに留意されたいです。付録Aには、これらの仮定を説明し、いくつかの代替モデルを提供します。異なるモデルが使用される場合、FSTIDSはtarget_run_length代替target_run_lengthおよび基礎となる仮定の根拠の説明と一緒に、上記算出された基準target_run_lengthとの比を計算するための実際の方法を文書化しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Most of the individual parameters for the tests in Section 8 are derived from target_window_size and target_run_length.",
      "ja": "第8章のテストのための個々のパラメータのほとんどは、target_window_sizeとtarget_run_length由来しています。"
    },
    {
      "indent": 0,
      "text": "5.3. Parameter Derating",
      "section_title": true,
      "ja": "5.3. パラメータのディレーティング"
    },
    {
      "indent": 3,
      "text": "Since some aspects of the models are very conservative, the MBM framework permits some latitude in derating test parameters. Rather than trying to formalize more complicated models, we permit some test parameters to be relaxed as long as they meet some additional procedural constraints: o The FSTIDS must document and justify the actual method used to compute the derated metric parameters.",
      "ja": "モデルのいくつかの側面は非常に保守的であるため、MBMフレームワークは、ディレーティング・テスト・パラメータのいくつかの自由度を可能にします。 FSTIDS oをディレーティングメトリックパラメータを計算するために使用される実際の方法を文書化し、正当化する必要があります。そうではなく、より複雑なモデルを形式化しようとするよりも、私たちは、限り、彼らはいくつかの追加の手続き制約を満たすように緩和するいくつかのテストパラメータが許します。"
    },
    {
      "indent": 3,
      "text": "o The validation procedures described in Section 10 must be used to demonstrate the feasibility of meeting the Target Transport Performance with infrastructure that just barely passes the derated tests.",
      "ja": "10節で説明した検証手順oをかろうじてディレーティングテストに合格したインフラとターゲット交通の性能を満たすことの実現可能性を実証するために使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "o The validation process for an FSTIDS itself must be documented in such a way that other researchers can duplicate the validation experiments.",
      "ja": "O FSTIDS自身のための検証プロセスは、他の研究者は、検証実験を複製できるように文書化されなければなりません。"
    },
    {
      "indent": 3,
      "text": "Except as noted, all tests below assume no derating. Tests for which there is not currently a well-established model for the required parameters explicitly include derating as a way to indicate flexibility in the parameters.",
      "ja": "指摘されている場合を除き、以下のすべてのテストにはディレーティングを負いません。現在、必要なパラメータのためのよく確立されたモデルがされていないテストは、明示的にパラメータの柔軟性を示すための方法として、ディレーティングが含まれます。"
    },
    {
      "indent": 0,
      "text": "5.4. Test Preconditions",
      "section_title": true,
      "ja": "5.4. テストの前提条件"
    },
    {
      "indent": 3,
      "text": "Many tests have preconditions that are required to assure their validity. Examples include the presence or non-presence of cross traffic on specific subpaths; negotiating ECN; and a test stream preamble of appropriate length to achieve stable access to network resources in the presence of reactive network elements (as defined in Section 1.1 of [RFC7312]). If preconditions are not properly satisfied for some reason, the tests should be considered to be inconclusive. In general, it is useful to preserve diagnostic information as to why the preconditions were not met and any test data that was collected even if it is not useful for the intended test. Such diagnostic information and partial test data may be useful for improving the test or test procedures themselves.",
      "ja": "多くのテストでは、その有効性を確保するために必要とされる前提条件があります。例としては、特定のサブパスに存在またはクロストラフィックの非存在を含みます。 ECNを交渉。そして、適切な長さのテストストリームプリアンブル反応ネットワーク要素（[RFC7312]のセクション1.1で定義されている）の存在下で、ネットワークリソースへの安定したアクセスを達成すること。前提条件が何らかの理由で適切に満たされていない場合は、テストが決定的であると考えるべきです。一般に、診断の前提条件が満たされなかった理由についての情報と、それが意図され、テストのために有用ではない場合であっても収集された任意のテストデータを保存するために有用です。そのような診断情報および部分的試験データは、試験又は試験手順自体を改善するために有用であり得ます。"
    },
    {
      "indent": 3,
      "text": "It is important to preserve the record that a test was scheduled; otherwise, precondition enforcement mechanisms can introduce sampling bias. For example, canceling tests due to cross traffic on subscriber access links might introduce sampling bias in tests of the rest of the network by reducing the number of tests during peak network load.",
      "ja": "テストが予定されていた記録を保存することが重要です。それ以外の場合は、前提条件の執行メカニズムは、サンプリングバイアスを導入することができます。例えば、原因加入者アクセスリンク上のクロストラフィックにキャンセルのテストは、ピークネットワーク負荷時のテストの数を減らすことにより、ネットワークの他の部分のテストでサンプリングバイアスを導入することがあります。"
    },
    {
      "indent": 3,
      "text": "Test preconditions and failure actions must be specified in an FSTIDS.",
      "ja": "テストの前提条件と失敗アクションがFSTIDSで指定する必要があります。"
    },
    {
      "indent": 0,
      "text": "6. Generating Test Streams",
      "section_title": true,
      "ja": "6.生成テストストリーム"
    },
    {
      "indent": 3,
      "text": "Many important properties of Model-Based Metrics, such as vantage independence, are a consequence of using test streams that have temporal structures that mimic TCP or other transport protocols running over a complete path. As described in Section 4.1, self-",
      "ja": "そのような見晴らしの良い独立としてモデルベースのメトリック、多くの重要な特性は、TCPまたは完全なパス上で実行されている他のトランスポートプロトコルを模倣する時間的な構造を持つテスト・ストリームを使用しての結果です。 4.1節で述べたように、自己"
    },
    {
      "indent": 3,
      "text": "clocked protocols naturally have burst structures related to the RTT and pipe size of the complete path. These bursts naturally get larger (contain more packets) as either the Target RTT or Target Data Rate get larger or the Target MTU gets smaller. An implication of these relationships is that test streams generated by running self-clocked protocols over short subpaths may not adequately exercise the queuing at any bottleneck to determine if the subpath can support the full Target Transport Performance over the complete path.",
      "ja": "クロック駆動プロトコルは、自然に完全なパスのRTTとパイプのサイズに関連する構造をバーストしています。ターゲットRTTまたはターゲットデータレートのいずれかが大きくなるにつれてこれらのバーストは、自然に（より多くのパケットを含む）拡大取得またはターゲットMTUが小さくなります。これらの関係の含意は短いサブパスの上にセルフクロックのプロトコルを実行することによって発生したテストストリームが適切にサブパスが完全なパスを完全にターゲット交通のパフォーマンスをサポートできるかどうかを判断するために、任意のボトルネックでキューイングを行使することができないです。"
    },
    {
      "indent": 3,
      "text": "Failing to authentically mimic TCP's temporal structure is part of the reason why simple performance tools such as iPerf, netperf, nc, etc., have the reputation for yielding false pass results over short test paths, even when a subpath has a flaw.",
      "ja": "本物の模倣TCPの時間構造に失敗するとなどiperfの、のnetperf、NC、などの単純なパフォーマンスツールは、サブパスが欠陥を有する場合であっても、短いテストパス上の偽の合格結果をもたらすための評判を持っている理由の一部です。"
    },
    {
      "indent": 3,
      "text": "The definitions in Section 3 are sufficient for most test streams. We describe the slowstart and standing queue test streams in more detail.",
      "ja": "第3節での定義は、ほとんどのテストストリームには十分です。私たちは、より詳細にスロースタートと立っキューテストの流れを説明します。"
    },
    {
      "indent": 3,
      "text": "In conventional measurement practice, stochastic processes are used to eliminate many unintended correlations and sample biases. However, MBM tests are designed to explicitly mimic temporal correlations caused by network or protocol elements themselves. Some portions of these systems, such as traffic arrival (e.g., test scheduling), are naturally stochastic. Other behaviors, such as back-to-back packet transmissions, are dominated by implementation-specific deterministic effects. Although these behaviors always contain non-deterministic elements and might be modeled stochastically, these details typically do not contribute significantly to the overall system behavior. Furthermore, it is known that real protocols are subject to failures caused by network property estimators suffering from bias due to correlation in their own traffic. For example, TCP's RTT estimator used to determine the Retransmit Timeout (RTO), can be fooled by periodic cross traffic or start-stop applications. For these reasons, many details of the test streams are specified deterministically.",
      "ja": "従来の測定実際には、確率過程は、多くの意図しない相関およびサンプルバイアスを排除するために使用されます。しかし、MBMテストは、明示的にネットワークやプロトコル要素自体に起因する時間的相関を模倣するように設計されています。そのようなトラフィックの到着（例えば、テストスケジューリング）として、これらのシステムのいくつかの部分は、天然に確率論的です。こうしたバックツーバックパケット送信などの他の行動は、実装固有の確定的影響に支配されています。これらの行動は常に非決定的要素を含んでおり、確率的にモデル化される可能性がありますが、これらの詳細は、一般的に、システム全体の動作に大きく寄与していません。さらに、本当のプロトコルが原因自分のトラフィックの相関関係にバイアス苦しんネットワークプロパティの推定に起因する障害を受けやすいことが知られています。例えば、再送信タイムアウト（RTO）を決定するために使用するTCPのRTT推定器は、定期的なクロストラフィックや起動・停止アプリケーションによってだまさすることができます。これらの理由から、テストストリームの多くの詳細が確定的に指定されています。"
    },
    {
      "indent": 3,
      "text": "It may prove useful to introduce fine-grained noise sources into the models used for generating test streams in an update of Model-Based Metrics, but the complexity is not warranted at the time this document was written.",
      "ja": "それは、モデルベースのメトリックの更新のテストストリームを生成するために使用されるモデルにきめ細かなノイズ源を導入することが有用であろうが、複雑さは、この文書が書かれた時点で保証されていません。"
    },
    {
      "indent": 0,
      "text": "6.1. Mimicking Slowstart",
      "section_title": true,
      "ja": "6.1. 模倣スロースタート"
    },
    {
      "indent": 3,
      "text": "TCP slowstart has a two-level burst structure as shown in Figure 2. The fine time structure is caused by efficiency algorithms that deliberately batch work (CPU, channel allocation, etc.) to better amortize certain network and host overheads. ACKs passing through the return path typically cause the sender to transmit small bursts of data at the full sender interface rate. For example, TCP Segmentation Offload (TSO) and Delayed Acknowledgment both contribute to this effect. During slowstart, these bursts are at the same headway as the returning ACKs but are typically twice as large (e.g., have twice as much data) as the ACK reported was delivered to the receiver. Due to variations in delayed ACK and algorithms such as Appropriate Byte Counting [RFC3465], different pairs of senders and receivers produce slightly different burst patterns. Without loss of generality, we assume each ACK causes four packet sender interface rate bursts at an average headway equal to the ACK headway; this corresponds to sending at an average rate equal to twice the effective bottleneck IP rate. Each slowstart burst consists of a series of four packet sender interface rate bursts such that the total number of packets is the current window size (as of the last packet in the burst).",
      "ja": "微細時間構造が意図的にバッチ作業（CPU、チャネル割当など）より良い特定のネットワークおよびホストオーバーヘッドを償却する効率アルゴリズムによって引き起こされる図2に示すように、TCPのスロースタートは、2レベルのバースト構造を有しています。リターンパスを通過するACKは通常、送信者が送信者の完全なインタフェース速度でデータの小さなバーストを送信させます。例えば、TCPセグメンテーションオフロード（TSO）と遅延確認応答の両方が、この効果に寄与する。スロースタートの間、これらのバーストは、戻りのACKと同じ車間であるが、ACKが受信機に配信された報告されているように（例えば、2倍のデータを持っている）は、典型的には2倍の大きさです。そのような適切なバイトカウント[RFC3465]、送信者と受信者の異なる対として遅延ACKおよびアルゴリズムの変動によるわずかに異なるバースト・パターンを生成します。一般性を失うことなく、我々は、各ACKはACKの車間に等しい平均車間で4つのパケットの送信元インタフェース速度バーストを引き起こすと仮定します。これは二回効果的なボトルネックIP速度に等しい平均レートで送信に対応しています。各スロースタートバーストはパケットの総数は（バーストにおける最後のパケットのような）現在のウィンドウサイズであるように4つのパケットの送信元インタフェース速度バーストの系列から成ります。"
    },
    {
      "indent": 3,
      "text": "The coarse time structure is due to each RTT being a reflection of the prior RTT. For real transport protocols, each slowstart burst is twice as large (twice the window) as the previous burst but is spread out in time by the network bottleneck, such that each successive RTT exhibits the same effective bottleneck IP rate. The slowstart phase ends on the first lost packet or ECN mark, which is intended to happen after successive slowstart bursts merge in time: the next burst starts before the bottleneck queue is fully drained and the prior burst is complete.",
      "ja": "粗時間構造は、各RTT前RTTの反射であることに起因しています。実際のトランスポートプロトコルのために、各スロースタートバーストは、前のバーストとして（2回ウィンドウ）の2倍であるが、それぞれの連続したRTTが同じ有効ボトルネックIP速度を示すように、ネットワークのボトルネックによって時間的に広がります。スロースタートフェーズは、連続したスロースタートバーストが時間内にマージした後に起こることを目的としている最初の損失パケットまたはECNマーク、上終了：ボトルネックキューが完全に排出される前のバーストが完了する前に次のバーストが開始されます。"
    },
    {
      "indent": 3,
      "text": "For the diagnostic tests described below, we preserve the fine time structure but manipulate the coarse structure of the slowstart bursts (burst size and headway) to measure the ability of the dominant bottleneck to absorb and smooth slowstart bursts.",
      "ja": "以下に記載の診断テストのために、我々は、微細時間構造を維持するが、吸収する支配的なボトルネックの能力と滑らかスロースタートバーストを測定するために、スロースタートバースト（バーストサイズと車間）の粗い構造を操作します。"
    },
    {
      "indent": 3,
      "text": "Note that a stream of repeated slowstart bursts has three different average rates, depending on the averaging time interval. At the finest timescale (a few packet times at the sender interface), the peak of the average IP rate is the same as the sender interface rate; at a medium timescale (a few ACK times at the dominant bottleneck), the peak of the average IP rate is twice the implied bottleneck IP capacity; and at timescales longer than the target_RTT and when the burst size is equal to the target_window_size, the average rate is equal to the target_data_rate. This pattern corresponds to repeating the last RTT of TCP slowstart when delayed ACK and sender-side byte counting are present but without the limits specified in Appropriate Byte Counting [RFC3465].",
      "ja": "繰り返しスロースタートバーストのストリームは平均時間間隔に依存して、三つの異なる平均レートを有することに留意されたいです。最高のタイムスケール（送信側の界面における少数のパケット回）では、平均IPレートのピークは、送信インタフェースレートと同じです。メディアタイムスケール（支配的なボトルネックで数ACK回）で、平均IP率のピークは二回暗黙のボトルネックIP容量です。バーストサイズがtarget_window_sizeに等しい場合とtarget_RTTより長い時間スケールで、かつ、平均速度はtarget_data_rateに等しいです。このパターンは、ACK遅延及び送信側のバイトカウントが存在するが、適切なバイトカウント[RFC3465]で指定された制限なしである場合に、TCPスロースタートの最後のRTTを繰り返すことに相当します。"
    },
    {
      "indent": 3,
      "text": "time ==> ( - equals one packet)",
      "ja": "時間==>（ -  1つのパケットに等しいです）"
    },
    {
      "indent": 3,
      "text": "Fine time structure of the packet stream:",
      "ja": "パケットストリームの微細時間構造："
    },
    {
      "indent": 3,
      "text": "----  ----  ----  ----  ----",
      "raw": true
    },
    {
      "indent": 3,
      "text": "|<>| sender interface rate bursts (typically 3 or 4 packets) |<===>| burst headway (from the ACK headway)",
      "ja": "| <> |送信元インターフェイスのレートバースト（通常は3つのまたは4のパケット）| <===> | （ACK車間から）バースト車間"
    },
    {
      "indent": 3,
      "text": "\\____repeating sender______/\n       rate bursts",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Coarse (RTT-level) time structure of the packet stream:",
      "ja": "粗（RTTレベル）パケットストリームの時間構造："
    },
    {
      "indent": 3,
      "text": "----  ----  ----  ----  ----                     ----  ---- ...",
      "raw": true
    },
    {
      "indent": 3,
      "text": "|<========================>| slowstart burst size (from the window)\n|<==============================================>| slowstart headway\n                                                    (from the RTT)\n\\__________________________/                     \\_________ ...\n    one slowstart burst                     Repeated slowstart bursts",
      "raw": true
    },
    {
      "indent": 15,
      "text": "Figure 2: Multiple Levels of Slowstart Bursts",
      "ja": "図2：スロースタートバーストの複数レベル"
    },
    {
      "indent": 0,
      "text": "6.2. Constant Window Pseudo CBR",
      "section_title": true,
      "ja": "6.2. 一定のウィンドウ疑似CBR"
    },
    {
      "indent": 3,
      "text": "Pseudo constant bit rate (CBR) is implemented by running a standard self-clocked protocol such as TCP with a fixed window size. If that window size is test_window, the data rate will be slightly above the target_rate.",
      "ja": "疑似固定ビットレート（CBR）は、固定ウィンドウサイズを有するTCPのような標準的なセルフクロックプロトコルを実行することによって実現されます。そのウィンドウサイズがtest_windowある場合は、データレートがややtarget_rateの上になります。"
    },
    {
      "indent": 3,
      "text": "Since the test_window is constrained to be an integer number of packets, for small RTTs or low data rates, there may not be sufficiently precise control over the data rate. Rounding the test_window up (as defined above) is likely to result in data rates that are higher than the target rate, but reducing the window by one packet may result in data rates that are too small. Also, cross traffic potentially raises the RTT, implicitly reducing the rate. Cross traffic that raises the RTT nearly always makes the test more strenuous (i.e., more demanding for the network path).",
      "ja": "test_windowは、パケットの整数に制限されているので、小のRTT又は低いデータレートのために、データレートにわたって十分に正確な制御がなくてもよいです。 （上記で定義した通り）test_windowを切り上げする目標レートよりも高いデータレートをもたらす可能性があるが、一つのパケットによって窓を低減することが小さすぎるデータレートをもたらすことができます。また、クロストラフィックが潜在的に暗黙のうちに速度を低下させること、RTTを発生させます。 RTTを上げるクロストラフィックはほとんど常に（ネットワークパスのため、すなわち、より厳しい）テストは、より激しいことができます。"
    },
    {
      "indent": 3,
      "text": "Note that Constant Window Pseudo CBR (and Scanned Window Pseudo CBR in the next section) both rely on a self-clock that is at least partially derived from the properties of the subnet under test. This introduces the possibility that the subnet under test exhibits behaviors such as extreme RTT fluctuations that prevent these algorithms from accurately controlling data rates.",
      "ja": "（次のセクションで、スキャンウィンドウ疑似CBR）定ウィンドウ擬似CBRの両方が、少なくとも部分的に試験下のサブネットの性質に由来する自己クロックに依存していることに留意されたいです。これは、試験下のサブネットは、正確にデータレートを制御することから、これらのアルゴリズムを防ぐ極端なRTTの変動として挙動を示す可能性を紹介します。"
    },
    {
      "indent": 3,
      "text": "An FSTIDS specifying a Constant Window Pseudo CBR test must explicitly indicate under what conditions errors in the data rate cause tests to be inconclusive. Conventional paced measurement traffic may be more appropriate for these environments.",
      "ja": "定ウィンドウ擬似CBRテストを指定FSTIDSは、明示的にデータレートの原因テストにおける条件エラーが決定的であることを何の下に示す必要があります。従来のペースで測定トラフィックは、これらの環境のためのより適切かもしれません。"
    },
    {
      "indent": 0,
      "text": "6.3. Scanned Window Pseudo CBR",
      "section_title": true,
      "ja": "6.3. スキャンウィンドウ疑似CBR"
    },
    {
      "indent": 3,
      "text": "Scanned Window Pseudo CBR is similar to the Constant Window Pseudo CBR described above, except the window is scanned across a range of sizes designed to include two key events: the onset of queuing and the onset of packet loss or ECN CE marks. The window is scanned by incrementing it by one packet every 2*target_window_size delivered packets. This mimics the additive increase phase of standard Reno TCP congestion avoidance when delayed ACKs are in effect. Normally, the window increases are separated by intervals slightly longer than twice the target_RTT.",
      "ja": "キューイングの開始とパケット損失またはECNのCEマークの開始：スキャンウィンドウ疑似CBRは定数ウィンドウ擬似CBRのようなウィンドウは二つのキーイベントを含むように設計されたサイズの範囲にわたって走査されることを除いて、上述されています。ウィンドウは1つのパケットごとに2 * target_window_size配信したパケットによって、それを増分することによってスキャンされます。遅れたACKが有効になっているとき、これは標準リノTCPの輻輳回避の添加剤の増加段階を模倣します。通常、ウィンドウの増加は二回target_RTTよりわずかに長い間隔で分離されています。"
    },
    {
      "indent": 3,
      "text": "There are two ways to implement this test: 1) applying a window clamp to standard congestion control in a standard protocol such as TCP and 2) stiffening a non-standard transport protocol. When standard congestion control is in effect, any losses or ECN CE marks cause the transport to revert to a window smaller than the clamp, such that the scanning clamp loses control of the window size. The NPAD (Network Path and Application Diagnostics) pathdiag tool is an example of this class of algorithms [Pathdiag].",
      "ja": "1）TCPなどの標準プロトコルに標準輻輳制御にウィンドウクランプを適用し、2）非標準のトランスポートプロトコルを補強：このテストを実施するには2つの方法があります。標準的な輻輳制御が有効である場合、任意の損失またはECNのCEマークは、走査クランプは、ウィンドウサイズの制御を失うように、搬送クランプより小さいウィンドウに戻すさせます。 NPAD（ネットワークパスとアプリケーション診断）pathdiagツールは[Pathdiag】アルゴリズムのこのクラスの例です。"
    },
    {
      "indent": 3,
      "text": "Alternatively, a non-standard congestion control algorithm can respond to losses by transmitting extra data, such that it maintains the specified window size independent of losses or ECN CE marks. Such a stiffened transport explicitly violates mandatory Internet congestion control [RFC5681] and is not suitable for in situ testing. It is only appropriate for engineering testing under laboratory conditions. The Windowed Ping tool implements such a test [WPING]. This tool has been updated (see [mpingSource]).",
      "ja": "また、非標準の輻輳制御アルゴリズムは、それが損失またはECNのCEマークとは独立して指定されたウィンドウのサイズを維持するように、余分なデータを送信することにより、損失に応答することができます。そのような補剛輸送は、明示的に必須のインターネット輻輳制御[RFC5681]に違反し、その場での試験には適していません。これは、実験室条件下でのエンジニアリングテストのためにのみ適切です。ウィンドウ表示Pingツールは、[WPINGこのようなテストを実現します。このツールは、（[mpingSource]参照）を更​​新しました。"
    },
    {
      "indent": 3,
      "text": "The test procedures in Section 8.2 describe how to the partition the scans into regions and how to interpret the results.",
      "ja": "8.2節での試験手順はパーティションに地域とどのようにスキャンが結果を解釈する方法について説明します。"
    },
    {
      "indent": 0,
      "text": "6.4. Concurrent or Channelized Testing",
      "section_title": true,
      "ja": "6.4. 同時またはチャネライズドテスト"
    },
    {
      "indent": 3,
      "text": "The procedures described in this document are only directly applicable to single-stream measurement, e.g., one TCP connection or measurement stream. In an ideal world, we would disallow all performance claims based on multiple concurrent streams, but this is not practical due to at least two issues. First, many very high-rate link technologies are channelized and at last partially pin the flow-to-channel mapping to minimize packet reordering within flows.",
      "ja": "この文書に記載された手順は、単一ストリームの測定、例えば、1つのTCP接続または測定ストリームに直接適用可能です。理想的な世界では、我々は、複数の同時ストリームに基づいて、すべてのパフォーマンスの請求を許可しないだろうが、これが原因少なくとも二つの問題のために実用的ではありません。まず、多くの非常に高速リンク技術は、チャネル化され、最後に部分的にフロー内のパケットの並べ替えを最小限に抑えるために、フロー・ツー・チャネルのマ​​ッピングを固定します。"
    },
    {
      "indent": 3,
      "text": "Second, TCP itself has scaling limits. Although the former problem might be overcome through different design decisions, the latter problem is more deeply rooted.",
      "ja": "第二に、TCP自体が制限をスケーリングしています。前者の問題は、異なるデザインの決定によって克服されるかもしれないが、後者の問題は、より深く根ざしています。"
    },
    {
      "indent": 3,
      "text": "All congestion control algorithms that are philosophically aligned with [RFC5681] (e.g., claim some level of TCP compatibility, friendliness, or fairness) have scaling limits; that is, as a long fat network (LFN) with a fixed RTT and MTU gets faster, these congestion control algorithms get less accurate and, as a consequence, have difficulty filling the network [CCscaling]. These properties are a consequence of the original Reno AIMD congestion control design and the requirement in [RFC5681] that all transport protocols have similar responses to congestion.",
      "ja": "哲学[RFC5681]と整列されているすべての輻輳制御アルゴリズム（例えば、TCPの互換性、使いやすさ、又は公正いくつかのレベルを主張する）限界をスケーリングしています。つまり、固定RTTとの長い脂肪ネットワーク（LFN）としてMTUは、これらの輻輳制御アルゴリズムはあまり正確で取得し、結果として、難易ネットワーク[CCscaling]を充填を持って速くなります。これらのプロパティは、すべてのトランスポートプロトコルが混雑に類似の応答を持っている本来のリノAIMD輻輳制御設計の結果と[RFC5681]で要求されています。"
    },
    {
      "indent": 3,
      "text": "There are a number of reasons to want to specify performance in terms of multiple concurrent flows; however, this approach is not recommended for data rates below several megabits per second, which can be attained with run lengths under 10000 packets on many paths. Since the required run length is proportional to the square of the data rate, at higher rates, the run lengths can be unreasonably large, and multiple flows might be the only feasible approach.",
      "ja": "複数の並行フローの面でパフォーマンスを指定するためのいくつかの理由があります。しかし、このアプローチは、多くのパス上の10000のパケットの下にランレングスで達成することができ、毎秒数メガビット以下のデータレート、のために推奨されません。必要なランレングスデータレートの二乗に比例するので、より高い速度で、ラン長が不当に大きくすることができ、かつ複数のフローのみが実行可能なアプローチであるかもしれません。"
    },
    {
      "indent": 3,
      "text": "If multiple flows are deemed necessary to meet aggregate performance targets, then this must be stated both in the design of the TIDS and in any claims about network performance. The IP diagnostic tests must be performed concurrently with the specified number of connections. For the tests that use bursty test streams, the bursts should be synchronized across streams unless there is a priori knowledge that the applications have some explicit mechanism to stagger their own bursts. In the absence of an explicit mechanism to stagger bursts, many network and application artifacts will sometimes implicitly synchronize bursts. A test that does not control burst synchronization may be prone to false pass results for some applications.",
      "ja": "複数のフローを集約性能目標を満たすために必要と判断された場合、これはTIDSの設計にし、ネットワークのパフォーマンスについていかなる主張の両方で記載しなければなりません。 IP診断テストは、接続の指定された数と同時に実行されなければなりません。アプリケーションは、自分のバーストをずらすためにいくつかの明示的なメカニズムを持っていることを事前の知識がない限り、バースト性のテストストリームを使用するテストでは、バーストは、ストリーム間で同期する必要があります。バーストをずらすための明示的なメカニズムが存在しない場合には、多くのネットワークおよびアプリケーションの成果物は、時々、暗黙的にバーストを同期します。バースト同期を制御しないテストは、いくつかの用途のための偽の合格結果を受けやすいかもしれません。"
    },
    {
      "indent": 0,
      "text": "7. Interpreting the Results",
      "section_title": true,
      "ja": "7.結果の解釈"
    },
    {
      "indent": 0,
      "text": "7.1. Test Outcomes",
      "section_title": true,
      "ja": "7.1. テストの成果"
    },
    {
      "indent": 3,
      "text": "To perform an exhaustive test of a complete network path, each test of the TIDS is applied to each subpath of the complete path. If any subpath fails any test, then a standard transport protocol running over the complete path can also be expected to fail to attain the Target Transport Performance under some conditions.",
      "ja": "完全なネットワークパスの徹底的なテストを行うために、TIDSの各試験は、完全パスの各サブパスに適用されます。すべてのサブパスは、任意のテストに失敗した場合は、完全なパス上で実行されている標準のトランスポートプロトコルはまた、いくつかの条件の下でターゲットトランスポートのパフォーマンスを達成するために失敗することが期待できます。"
    },
    {
      "indent": 3,
      "text": "In addition to passing or failing, a test can be deemed to be inconclusive for a number of reasons. Proper instrumentation and treatment of inconclusive outcomes is critical to the accuracy and robustness of Model-Based Metrics. Tests can be inconclusive if the precomputed traffic pattern or data rates were not accurately generated; the measurement results were not statistically significant; the required preconditions for the test were not met; or other causes. See Section 5.4.",
      "ja": "通過または失敗に加えて、試験は、いくつかの理由で不確定であるとみなすことができます。決定的な成果の適切な計測機器や治療法は、モデルベースのメトリックの精度と堅牢性に重要です。予め計算されたトラフィックパターンやデータレートが正確に生成されていなかったかどうかをテスト決定的ことができます。測定結果は、統計的に有意ではなかったです。テストのために必要な前提条件が満たされませんでした。または他の原因。 5.4節を参照してください。"
    },
    {
      "indent": 3,
      "text": "For example, consider a test that implements Constant Window Pseudo CBR (Section 6.2) by adding rate controls and detailed IP packet transfer instrumentation to TCP (e.g., using the extended performance statistics for TCP as described in [RFC4898]). TCP includes built-in control systems that might interfere with the sending data rate. If such a test meets the required packet transfer statistics (e.g., run length) while failing to attain the specified data rate, it must be treated as an inconclusive result, because we cannot a priori determine if the reduced data rate was caused by a TCP problem or a network problem or if the reduced data rate had a material effect on the observed packet transfer statistics.",
      "ja": "例えば、レート制御と（例えば、TCPの拡張パフォーマンス統計を使用して説明したように[RFC4898]）TCPの詳細なIPパケット転送機器を追加することによって一定ウィンドウ擬似CBR（セクション6.2）を実装するテストを考えます。 TCPは、送信データレートに干渉する可能性がある内蔵の制御システムを含んでいます。このようなテストは、（例えば、ランレングス）指定されたデータ・レートを達成するために失敗している間、我々は先験的に決定することができないので、それは、決定的な結果として処理されなければならない必要なパケット転送の統計情報を満たしている場合には減少したデータレートは、TCPによって引き起こされた場合問題またはネットワークの問題または減少したデータレートが観測され、パケット転送の統計に重要な影響を持っていた場合。"
    },
    {
      "indent": 3,
      "text": "Note that for capacity tests, if the observed packet transfer statistics meet the statistical criteria for failing (based on acceptance of hypothesis H1 in Section 7.2), the test can be considered to have failed because it doesn't really matter that the test didn't attain the required data rate.",
      "ja": "観測されたパケット転送の統計情報は、（7.2節で仮説H1の受け入れに基づいて）失敗のための統計的な基準を満たしている場合、本当にテストが「didnのことは問題ではありませんので、容量のテストのために、テストが失敗したと考えることができることに注意してくださいトン必要なデータ・レートを達成。"
    },
    {
      "indent": 3,
      "text": "The important new properties of MBM, such as vantage independence, are a direct consequence of opening the control loops in the protocols, such that the test stream does not depend on network conditions or IP packets received. Any mechanism that introduces feedback between the path's measurements and the test stream generation is at risk of introducing nonlinearities that spoil these properties. Any exceptional event that indicates that such feedback has happened should cause the test to be considered inconclusive.",
      "ja": "そのような見晴らしの良い独立としてMBMの重要な新しいプロパティは、テストストリームを受信し、ネットワークの状態やIPパケットに依存しないように、プロトコルで制御ループを開くことの直接の結果です。パスの測定及びテストストリーム生成の間にフィードバックを導入する任意の機構は、これらの特性を損なう非線形性を導入する危険性があります。このようなフィードバックが起こったことを示し、任意の例外的なイベントは、テストが決定的と考えることが原因となる必要があります。"
    },
    {
      "indent": 3,
      "text": "Inconclusive tests may be caused by situations in which a test outcome is ambiguous because of network limitations or an unknown limitation on the IP diagnostic test itself, which may have been caused by some uncontrolled feedback from the network.",
      "ja": "決定的な試験は、ネットワークから何らかの制御不能なフィードバックによって引き起こされた可能性がある、なぜならネットワーク制限またはIP診断テスト自体の未知の制限の試験結果が曖昧である状況によって引き起こされる可能性があります。"
    },
    {
      "indent": 3,
      "text": "Note that procedures that attempt to search the target parameter space to find the limits on a parameter such as target_data_rate are at risk of breaking the location-independent properties of Model-Based Metrics if any part of the boundary between passing, inconclusive, or failing results is sensitive to RTT (which is normally the case). For example, the maximum data rate for a marginal link (e.g., exhibiting excess errors) is likely to be sensitive to the test_path_RTT. The maximum observed data rate over the test path has very little value for predicting the maximum rate over a different path.",
      "ja": "決定的でない、例えばtarget_data_rateなどのパラメータに制限を見つけるために、目標パラメータ空間を探索しようとする手順が通過する境界のいずれかの部分場合にモデルベースのメトリックの位置に依存しない特性を破壊する危険性があることに注意してください、または失敗結果（通常の場合）、RTTに敏感です。例えば、限界リンクの最大データレート（例えば、過剰エラーを示す）はtest_path_RTTに対して敏感である可能性が高いです。テストパス上の最大観察されたデータレートは、異なる経路を介して最大速度を予測するための非常に小さな値を有しています。"
    },
    {
      "indent": 3,
      "text": "One of the goals for evolving TIDS designs will be to keep sharpening the distinctions between inconclusive, passing, and failing tests. The criteria for inconclusive, passing, and failing tests must be explicitly stated for every test in the TIDS or FSTIDS.",
      "ja": "TIDSデザインを進化させるための目標の一つは、決定的渡し、そして失敗のテストの間に区別を研ぎ続けることであろう。 、決定的渡し、および不合格のテストのための基準は、明示的またはTIDS FSTIDS内のすべてのテストのために記載しなければなりません。"
    },
    {
      "indent": 3,
      "text": "One of the goals for evolving the testing process, procedures, tools, and measurement point selection should be to minimize the number of inconclusive tests.",
      "ja": "テストプロセスを進化させるための目標の一つは、手順は、ツール、および測定点の選択は決定的なテストの数を最小限に抑えるべきです。"
    },
    {
      "indent": 3,
      "text": "It may be useful to keep raw packet transfer statistics and ancillary metrics [RFC3148] for deeper study of the behavior of the network path and to measure the tools themselves. Raw packet transfer statistics can help to drive tool evolution. Under some conditions, it might be possible to re-evaluate the raw data for satisfying alternate Target Transport Performance. However, it is important to guard against sampling bias and other implicit feedback that can cause false results and exhibit measurement point vantage sensitivity. Simply applying different delivery criteria based on a different Target Transport Performance is insufficient if the test traffic patterns (bursts, etc.) do not match the alternate Target Transport Performance.",
      "ja": "ネットワーク経路の行動のより深い研究のための[RFC3148]生パケット転送の統計情報と補助的な指標を維持することが有用であるとツール自体を測定します。生のパケット転送の統計情報は、ツールの進化を推進するために助けることができます。いくつかの条件の下で、それは別のターゲット交通性能を満たすための再評価の生データにできる場合があります。しかし、誤った結果を引き起こし、測定ポイントの見晴らしの良い感度を示すことができ、サンプリングバイアスおよびその他の暗黙のフィードバックを防ぐために重要です。テストトラフィックパターン（バーストなど）、代替標的輸送性能と一致しない場合、単に異なる標的輸送能に基づいて、異なる送達基準を適用することは不十分です。"
    },
    {
      "indent": 0,
      "text": "7.2. Statistical Criteria for Estimating run_length",
      "section_title": true,
      "ja": "7.2.  run_length推定のための統計的基準"
    },
    {
      "indent": 3,
      "text": "When evaluating the observed run_length, we need to determine appropriate packet stream sizes and acceptable error levels for efficient measurement. In practice, can we compare the empirically estimated packet loss and ECN CE marking ratios with the targets as the sample size grows? How large a sample is needed to say that the measurements of packet transfer indicate a particular run length is present?",
      "ja": "観察run_lengthを評価する際に、我々は、効率的な測定のために適切なパケットストリームのサイズと許容誤差レベルを決定する必要があります。実際には、我々は、サンプルサイズが大きくなるにつれて、ターゲットと経験的に推定パケット損失やECNのCEマーキングの比率を比較することができますか？どのように大規模なサンプルでは、​​パケット転送の測定は、特定のラン長が存在であることを示すことを言うために必要とされますか？"
    },
    {
      "indent": 3,
      "text": "The generalized measurement can be described as recursive testing: send packets (individually or in patterns) and observe the packet transfer performance (packet loss ratio, other metric, or any marking we define).",
      "ja": "一般的な測定は、再帰的な試験として記述することができるパケット（個別にまたはパターンで）を送信し、パケットの転送性能（パケット損失率、他のメトリック、または任意のマーキング我々は定義する）を観察します。"
    },
    {
      "indent": 3,
      "text": "As each packet is sent and measured, we have an ongoing estimate of the performance in terms of the ratio of packet loss or ECN CE marks to total packets (i.e., an empirical probability). We continue to send until conditions support a conclusion or a maximum sending limit has been reached.",
      "ja": "各パケットが送信され、測定されたように、我々は、全パケット（すなわち、経験的確率）にパケット損失またはECNのCEマークの比で性能の継続的な推定値を有します。我々は条件が結論または最大送信制限に達しているサポートまで送信し続けます。"
    },
    {
      "indent": 3,
      "text": "We have a target_mark_probability, one mark per target_run_length, where a \"mark\" is defined as a lost packet, a packet with ECN CE mark, or other signal. This constitutes the null hypothesis:",
      "ja": "私たちは、「マークが」失われたパケット、ECNのCEマークの付いたパケット、または他の信号のように定義されてtarget_mark_probability、target_run_lengthごとに1つのマークを、持っています。これは、帰無仮説を構成します："
    },
    {
      "indent": 3,
      "text": "H0: no more than one mark in target_run_length = 3*(target_window_size)^2 packets",
      "ja": "H0：target_run_lengthに1つのマーク= 3 *（target_window_size）^ 2つのパケットを超えません"
    },
    {
      "indent": 3,
      "text": "We can stop sending packets if ongoing measurements support accepting H0 with the specified Type I error = alpha (= 0.05, for example).",
      "ja": "継続的な測定値が（例えば、= 0.05）指定されたタイプIエラー=アルファとH0を受け入れるサポートしている場合我々は、パケットの送信を停止することができます。"
    },
    {
      "indent": 3,
      "text": "We also have an alternative hypothesis to evaluate: is performance significantly lower than the target_mark_probability? Based on analysis of typical values and practical limits on measurement duration, we choose four times the H0 probability:",
      "ja": "また、評価するための代替仮説を持っている：パフォーマンスがtarget_mark_probabilityよりも大幅に低いのですか？典型的な値と測定時間の実用的な限界の分析に基づいて、我々は4倍H0確率を選択します。"
    },
    {
      "indent": 3,
      "text": "H1: one or more marks in (target_run_length/4) packets",
      "ja": "H1：（target_run_length / 4）パケット内の1つ以上のマーク"
    },
    {
      "indent": 3,
      "text": "and we can stop sending packets if measurements support rejecting H0 with the specified Type II error = beta (= 0.05, for example), thus preferring the alternate hypothesis H1.",
      "ja": "測定は、（例えば、= 0.05）指定されたタイプIIエラー=ベータとH0を拒否サポートしている場合、我々は、このように代替仮説H1を好む、パケットの送信を停止することができます。"
    },
    {
      "indent": 3,
      "text": "H0 and H1 constitute the success and failure outcomes described elsewhere in this document; while the ongoing measurements do not support either hypothesis, the current status of measurements is inconclusive.",
      "ja": "H0およびH1は、この文書の他の箇所に記載成否結果を構成します。継続的な測定はいずれかの仮説をサポートしていませんが、測定値の現在のステータスは決定的です。"
    },
    {
      "indent": 3,
      "text": "The problem above is formulated to match the Sequential Probability Ratio Test (SPRT) [Wald45] [Montgomery90]. Note that as originally framed, the events under consideration were all manufacturing defects. In networking, ECN CE marks and lost packets are not defects but signals, indicating that the transport protocol should slow down.",
      "ja": "上記の問題は逐次確率比検定（SPRT）Wald45] [Montgomery90]に一致するように処方されます。もともと枠として、検討中のイベントは、すべての製造上の欠陥があったことに注意してください。ネットワークでは、ECN CEマーク、失われたパケットは、トランスポートプロトコルが遅くなければならないことを示す、欠陥が、信号ありません。"
    },
    {
      "indent": 3,
      "text": "The Sequential Probability Ratio Test also starts with a pair of hypotheses specified as above:",
      "ja": "逐次確率比試験は、上記のように指定された仮説の組で開始します："
    },
    {
      "indent": 3,
      "text": "H0: p0 = one defect in target_run_length",
      "ja": "H0：target_run_lengthでP0 = 1つの欠陥"
    },
    {
      "indent": 3,
      "text": "H1: p1 = one defect in target_run_length/4",
      "ja": "H1：target_run_length / 4におけるP1 =つの欠陥"
    },
    {
      "indent": 3,
      "text": "As packets are sent and measurements collected, the tester evaluates the cumulative defect count against two boundaries representing H0 Acceptance or Rejection (and acceptance of H1):",
      "ja": "パケットが送信され、測定値が収集されるように、テスタはH0合否（及びH1の受諾）を表す2つの境界に対して累積欠陥数を評価します。"
    },
    {
      "indent": 3,
      "text": "Acceptance line: Xa = -h1 + s*n",
      "ja": "合格ライン：第Xa = -H1 + S * N"
    },
    {
      "indent": 3,
      "text": "Rejection line: Xr = h2 + s*n",
      "ja": "拒絶ライン：Xrを= H2の+ S * N"
    },
    {
      "indent": 3,
      "text": "where n increases linearly for each packet sent and h1 = { log((1-alpha)/beta) }/k",
      "ja": "ここで、各送信されたパケットと、H1 = {ログ（（1-α）/ベータ）} / kの直線Nが増加"
    },
    {
      "indent": 3,
      "text": "h2 = { log((1-beta)/alpha) }/k",
      "ja": "H2 = {ログ（（1-β）/アルファ）} / K"
    },
    {
      "indent": 3,
      "text": "k = log{ (p1(1-p0)) / (p0(1-p1)) }",
      "ja": "K =ログ{（P1（1-P0））/（P0（1-P1））}"
    },
    {
      "indent": 3,
      "text": "s = [ log{ (1-p0)/(1-p1) } ]/k",
      "ja": "S = [ログ{（1-P0）/（1-P1）}] / K"
    },
    {
      "indent": 3,
      "text": "for p0 and p1 as defined in the null and alternative hypotheses statements above, and alpha and beta as the Type I and Type II errors.",
      "ja": "タイプIおよびタイプIIエラーなどP0と上記ヌルおよび代替仮説文で定義されるように、P1、及びアルファおよびベータのために。"
    },
    {
      "indent": 3,
      "text": "The SPRT specifies simple stopping rules:",
      "ja": "SPRTは、単純な停止規則を指定します。"
    },
    {
      "indent": 3,
      "text": "o Xa < defect_count(n) < Xr: continue testing",
      "ja": "O第Xa <defect_count（N）<Xrを：続ける試験"
    },
    {
      "indent": 3,
      "text": "o defect_count(n) <= Xa: Accept H0",
      "ja": "O defect_count（N）<=第Xa：H0を受け入れます"
    },
    {
      "indent": 3,
      "text": "o defect_count(n) >= Xr: Accept H1",
      "ja": "O defect_count（N）> = Xrを：H1を受け入れます"
    },
    {
      "indent": 3,
      "text": "The calculations above are implemented in the R-tool for Statistical Analysis [Rtool], in the add-on package for Cross-Validation via Sequential Testing (CVST) [CVST].",
      "ja": "計算は、上記の連続的試験を介してクロスバリデーション（CVST）CVST]用のアドオンパッケージで、統計分析のためにRtool [Rtool]に実装されています。"
    },
    {
      "indent": 3,
      "text": "Using the equations above, we can calculate the minimum number of packets (n) needed to accept H0 when x defects are observed. For example, when x = 0:",
      "ja": "上記の式を用いて、我々は、パケットの最小数（n）は、Xの欠陥が観察されたときH0を受け入れるために必要な計算することができます。例えば、x = 0のとき："
    },
    {
      "indent": 3,
      "text": "Xa = 0 = -h1 + s*n",
      "ja": "場合-H1 = 0 = S + N *"
    },
    {
      "indent": 3,
      "text": "and n = h1 / s",
      "ja": "そしてn = H1 /秒"
    },
    {
      "indent": 3,
      "text": "Note that the derivations in [Wald45] and [Montgomery90] differ. Montgomery's simplified derivation of SPRT may assume a Bernoulli processes, where the packet loss probabilities are independent and identically distributed, making the SPRT more accessible. Wald's seminal paper showed that this assumption is not necessary. It helps to remember that the goal of SPRT is not to estimate the value of the packet loss rate but only whether or not the packet loss ratio is likely (1) low enough (when we accept the H0 null hypothesis), yielding success or (2) too high (when we accept the H1 alternate hypothesis), yielding failure.",
      "ja": "派生[Wald45]および[Montgomery90】異なることに留意されたいです。 SPRTのモンゴメリの単純化された派生はSPRTよりアクセスしやすく、パケット損失確率は独立しており、同一分布ベルヌーイのプロセスを、想定することができます。ワルドの精液の論文では、この仮定が必要ではないことを示しました。これは、SPRTの目標は、パケットロス率の値を推定することはないことを覚えておくことができますが、パケット損失率がそうであるだけかどうかを十分に（1）低（私たちはH0の帰無仮説を受け入れるとき）、成功をもたらしますか（故障を得、（我々はH1代替仮説を受け入れる場合）2）が高すぎます。"
    },
    {
      "indent": 0,
      "text": "7.3. Reordering Tolerance",
      "section_title": true,
      "ja": "7.3. 並べ替え公差"
    },
    {
      "indent": 3,
      "text": "All tests must be instrumented for packet-level reordering [RFC4737]. However, there is no consensus for how much reordering should be acceptable. Over the last two decades, the general trend has been to make protocols and applications more tolerant to reordering (for example, see [RFC5827]), in response to the gradual increase in reordering in the network. This increase has been due to the deployment of technologies such as multithreaded routing lookups and Equal-Cost Multipath (ECMP) routing. These techniques increase parallelism in the network and are critical to enabling overall Internet growth to exceed Moore's Law.",
      "ja": "すべてのテストは、パケットレベルの並べ替え[RFC4737]のためのインストルメントする必要があります。しかし、許容されるべきであるどのくらいの並べ替えのためのコンセンサスはありません。最後の二十年にわたり、一般的な傾向は、ネットワーク内の並べ替えの緩やかな増加に応じて、（例えば、[RFC5827]を参照）並べ替えにプロトコルおよびアプリケーションは、より寛容にすることでした。この増加は、そのようなマルチスレッドルーティング検索と等価コストマルチパス（ECMP）ルーティングなどの技術の展開になっています。これらの技術は、ネットワーク内の並列性を高め、ムーアの法則を超えるように、全体的なインターネットの成長を可能にするために重要です。"
    },
    {
      "indent": 3,
      "text": "With transport retransmission strategies, there are fundamental trade-offs among reordering tolerance, how quickly losses can be repaired, and overhead from spurious retransmissions. In advance of new retransmission strategies, we propose the following strawman: transport protocols should be able to adapt to reordering as long as the reordering extent is not more than the maximum of one quarter window or 1 ms, whichever is larger. (These values come from experience prototyping Early Retransmit [RFC5827] and related algorithms. They agree with the values being proposed for \"RACK: a time-based fast loss detection algorithm\" [RACK].) Within this limit on reorder extent, there should be no bound on reordering density.",
      "ja": "輸送再送戦略では、基本的な損失を修復することができますどのように迅速にトレランスを並べ替えの間でトレードオフ、およびスプリアス再送からのオーバーヘッドがあります。新しい再送戦略に先立って、我々は次のようstrawmanを提案：トランスポートプロトコルは限り並べ替え程度が大きい方四分の一個のウィンドウまたは1ミリ秒、最大以上でないと並べ替えに適応することができるはずです。 （これらの値は、初期再送[RFC5827]と関連アルゴリズムを試作経験から来る彼らは値が「RACK：時間ベースの高速損失検出アルゴリズム」のために提案されているに同意する。[RACK]）この制限内リオーダー程度に、存在すべきです密度を並べ替えるにはバインドできません。"
    },
    {
      "indent": 3,
      "text": "By implication, recording that is less than these bounds should not be treated as a network impairment. However, [RFC4737] still applies: reordering should be instrumented, and the maximum reordering that can be properly characterized by the test (because of the bound on history buffers) should be recorded with the measurement results.",
      "ja": "含意することによって、これらの限界未満である記録は、ネットワーク障害として扱われるべきではありません。しかしながら、[RFC4737]まだ適用：並べ替えは、計測されるべきであり、適切に（なぜなら、履歴バッファに結合されたの）試験によって特徴付けることができる最大の並べ替えは、測定結果を記録しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Reordering tolerance and diagnostic limitations, such as the size of the history buffer used to diagnose packets that are way out of order, must be specified in an FSTIDS.",
      "ja": "寛容およびそのような方法の順序外のパケットを診断するために使用される履歴バッファのサイズなどの診断の制限を、並べ替え、FSTIDSで指定されなければなりません。"
    },
    {
      "indent": 0,
      "text": "8. IP Diagnostic Tests",
      "section_title": true,
      "ja": "8. IP診断テスト"
    },
    {
      "indent": 3,
      "text": "The IP diagnostic tests below are organized according to the technique used to generate the test stream as described in Section 6. All of the results are evaluated in accordance with Section 7, possibly with additional test-specific criteria.",
      "ja": "以下IP診断テストは、結果の全ては、おそらく追加のテスト固有の基準を用いて、第7節に従って評価される項6に記載のようにテストストリームを生成するために使用される技術に応じて編成されます。"
    },
    {
      "indent": 3,
      "text": "We also introduce some combined tests that are more efficient when networks are expected to pass but conflate diagnostic signatures when they fail.",
      "ja": "また、ネットワークが合格したが、彼らが失敗したときに、診断の署名を融合すると予想されているときに、より効率的であり、いくつかの組み合わせのテストをご紹介します。"
    },
    {
      "indent": 0,
      "text": "8.1. Basic Data Rate and Packet Transfer Tests",
      "section_title": true,
      "ja": "8.1. 基本的なデータレートおよびパケット転送テスト"
    },
    {
      "indent": 3,
      "text": "We propose several versions of the basic data rate and packet transfer statistics test that differ in how the data rate is controlled. The data can be paced on a timer or window controlled (and self-clocked). The first two tests implicitly confirm that sub_path has sufficient raw capacity to carry the target_data_rate. They are recommended for relatively infrequent testing, such as an installation or periodic auditing process. The third test, Background Packet Transfer Statistics, is a low-rate test designed for ongoing monitoring for changes in subpath quality.",
      "ja": "私たちは、データレートが制御されている方法が異なり、基本的なデータ転送速度とパケット転送の統計テストのいくつかのバージョンを提案します。データは、タイマーやウィンドウ制御（およびセルフクロック）にペースすることができます。最初の2つのテストは、暗黙的にsub_pathがtarget_data_rateを運ぶのに十分な生の能力を持っていることを確認してください。それらは、インストールまたは周期的監査プロセスとして、比較的まれな試験のために推奨されています。第3の試験、背景パケット転送の統計情報は、サブパスの質の変化のための継続的な監視のために設計された低速度試験です。"
    },
    {
      "indent": 0,
      "text": "8.1.1. Delivery Statistics at Paced Full Data Rate",
      "section_title": true,
      "ja": "8.1.1. ペースフルデータレートで配信統計"
    },
    {
      "indent": 3,
      "text": "This test confirms that the observed run length is at least the target_run_length while relying on timer to send data at the target_rate using the procedure described in Section 6.1 with a burst size of 1 (single packets) or 2 (packet pairs).",
      "ja": "この試験は1（単一パケット）または2（パケットペア）のバーストサイズと、セクション6.1に記載の手順を用いてtarget_rateでデータを送信するために、タイマーに依存しながら観察ラン長が少なくともtarget_run_lengthであることを確認します。"
    },
    {
      "indent": 3,
      "text": "The test is considered to be inconclusive if the packet transmission cannot be accurately controlled for any reason.",
      "ja": "試験は、パケット送信が正確に何らかの理由で制御することができない場合に決定的であると考えられます。"
    },
    {
      "indent": 3,
      "text": "RFC 6673 [RFC6673] is appropriate for measuring packet transfer statistics at full data rate.",
      "ja": "RFC 6673 [RFC6673]は、フルデータレートでパケット転送統計を測定するために適切です。"
    },
    {
      "indent": 0,
      "text": "8.1.2. Delivery Statistics at Full Data Windowed Rate",
      "section_title": true,
      "ja": "8.1.2. フルデータウィンドウ表示レートで配信統計"
    },
    {
      "indent": 3,
      "text": "This test confirms that the observed run length is at least the target_run_length while sending at an average rate approximately equal to the target_data_rate, by controlling (or clamping) the window size of a conventional transport protocol to test_window.",
      "ja": "この試験はtest_windowする従来のトランスポートプロトコルのウィンドウサイズを制御する（又はクランプ）することにより、target_data_rateにほぼ等しい平均レートで送信しながら観察ラン長が少なくともtarget_run_lengthであることを確認します。"
    },
    {
      "indent": 3,
      "text": "Since losses and ECN CE marks cause transport protocols to reduce their data rates, this test is expected to be less precise about controlling its data rate. It should not be considered inconclusive as long as at least some of the round trips reached the full target_data_rate without incurring losses or ECN CE marks. To pass this test, the network must deliver target_window_size packets in target_RTT time without any losses or ECN CE marks at least once per two target_window_size round trips, in addition to meeting the run length statistical test.",
      "ja": "損失とECNのCEマークは、トランスポートプロトコルは、そのデータレートを削減させているので、このテストは、そのデータレートを制御についてはあまり正確であることが予想されます。往復の少なくとも一部が損失またはECNのCEマークを招くことなく、完全なtarget_data_rateに達したように、それは長いと決定的考えるべきではありません。このテストに合格するために、ネットワークは、任意の損失なしtarget_RTT時間のtarget_window_sizeパケットを配信しなければならないか、ECN CEは、ランレングス統計的検定を満たすことに加えて、少なくとも一回2つのtarget_window_size往復ごとにマークします。"
    },
    {
      "indent": 0,
      "text": "8.1.3. Background Packet Transfer Statistics Tests",
      "section_title": true,
      "ja": "8.1.3. 背景パケット転送の統計テスト"
    },
    {
      "indent": 3,
      "text": "The Background Packet Transfer Statistics Test is a low-rate version of the target rate test above, designed for ongoing lightweight monitoring for changes in the observed subpath run length without disrupting users. It should be used in conjunction with one of the above full-rate tests because it does not confirm that the subpath can support raw data rate.",
      "ja": "背景パケット転送の統計テストは、ユーザーを混乱させることなく観察サブパスラン長さの変化のための継続的な軽量の監視のために設計された上記目標速度試験の低レート版です。それはサブパスは、生のデータ・レートをサポートできることを確認していないので、それは上記フルレート試験の一つと組み合わせて使用​​する必要があります。"
    },
    {
      "indent": 3,
      "text": "RFC 6673 [RFC6673] is appropriate for measuring background packet transfer statistics.",
      "ja": "RFC 6673 [RFC6673]は、背景のパケット転送の統計情報を測定するための適切です。"
    },
    {
      "indent": 0,
      "text": "8.2. Standing Queue Tests",
      "section_title": true,
      "ja": "8.2. 立ちキューテスト"
    },
    {
      "indent": 3,
      "text": "These engineering tests confirm that the bottleneck is well behaved across the onset of packet loss, which typically follows after the onset of queuing. Well behaved generally means lossless for transient queues, but once the queue has been sustained for a sufficient period of time (or reaches a sufficient queue depth), there should be a small number of losses or ECN CE marks to signal to the transport protocol that it should reduce its window or data rate. Losses that are too early can prevent the transport from averaging at the target_data_rate. Losses that are too late indicate that the queue might not have an appropriate AQM [RFC7567] and, as a consequence, be subject to bufferbloat [wikiBloat]. Queues without AQM have the potential to inflict excess delays on all flows sharing the bottleneck. Excess losses (more than half of the window) at the onset of loss make loss recovery problematic for the transport protocol. Non-linear, erratic, or excessive RTT increases suggest poor interactions between the channel acquisition algorithms and the transport self-clock. All of the tests in this section use the same basic scanning algorithm, described here, but score the link or subpath on the basis of how well it avoids each of these problems.",
      "ja": "これらのエンジニアリングテストはボトルネックがよく、通常、キューイングの開始後、次のパケット損失の発症渡って振る舞っていることを確認してください。まあ、一般的に振る舞っ過渡キューのロスレスを意味するが、キューは十分な時間持続（または十分なキューの深さに到達した）された後、そのトランスポートプロトコルに合図する損失やECNのCEマークの数が少ないべきですそれは、そのウィンドウまたはデータレートを減らす必要があります。あまりにも早いです損失がtarget_data_rateで平均からの輸送を防ぐことができます。手遅れです損失が結果として、[wikiBloat] bufferbloatの対象となり、[RFC7567]キューが適切なAQMを持っていないかもしれないことを示していると。 AQMのないキューがボトルネックを共有するすべてのフロー上の余分な遅延を与える可能性を秘めています。損失の発症時（窓の半分以上）過剰損失は、トランスポートプロトコルのための損失の回復が問題になります。非線形、不安定な、または過剰なRTTの増加は、チャネル獲得アルゴリズムとトランスポート自己クロックとの間の不良な相互作用を示唆しています。このセクションのすべてのテストは、ここで説明したのと同じ基本的なスキャンアルゴリズムを、使用しますが、それは、これらの問題のそれぞれを回避どれだけに基づいて、リンクまたはサブパスを獲得します。"
    },
    {
      "indent": 3,
      "text": "Some network technologies rely on virtual queues or other techniques to meter traffic without adding any queuing delay, in which case the data rate will vary with the window size all the way up to the onset of load-induced packet loss or ECN CE marks. For these technologies, the discussion of queuing in Section 6.3 does not apply, but it is still necessary to confirm that the onset of losses or ECN CE marks be at an appropriate point and progressive. If the network bottleneck does not introduce significant queuing delay, modify the procedure described in Section 6.3 to start the scan at a window equal to or slightly smaller than the test_window.",
      "ja": "いくつかのネットワーク技術は、データレートはすべての方法、負荷によって誘発されるパケット損失やECNのCEマークの発症までのウィンドウサイズによって異なります。その場合には任意のキューイング遅延を追加することなく、メーターのトラフィックに仮想キューまたは他の技術に依存しています。これらの技術については、セクション6.3でキューイングの議論は適用されませんが、損失やECNのCEマークの開始が適切なポイントと漸進的であることを確認することが必要です。ネットワークのボトルネックが重要なキューイング遅延を導入しない場合は、に等しいかtest_windowよりもわずかに小さいウィンドウでスキャンを開始するには、セクション6.3で説明する手順を変更します。"
    },
    {
      "indent": 3,
      "text": "Use the procedure in Section 6.3 to sweep the window across the onset of queuing and the onset of loss. The tests below all assume that the scan emulates standard additive increase and delayed ACK by incrementing the window by one packet for every 2*target_window_size packets delivered. A scan can typically be divided into three regions: below the onset of queuing, a standing queue, and at or beyond the onset of loss.",
      "ja": "キューイングの発症や損失の開始を越え窓を掃除するためにセクション6.3での手順を実行します。すべて以下のテストでは、スキャンが配信ごとに2つの* target_window_sizeパケットの1個のパケット分のウィンドウをインクリメントすることにより、標準的な添加剤の増加と遅延ACKをエミュレートすることを前提としています。スキャンは、一般的に3つの領域に分割することができます：キューイング、立っキューの発症以下、及び時または損失の開始を超えて。"
    },
    {
      "indent": 3,
      "text": "Below the onset of queuing, the RTT is typically fairly constant, and the data rate varies in proportion to the window size. Once the data rate reaches the subpath IP rate, the data rate becomes fairly constant, and the RTT increases in proportion to the increase in window size. The precise transition across the start of queuing can be identified by the maximum network power, defined to be the ratio data rate over the RTT. The network power can be computed at each window size, and the window with the maximum is taken as the start of the queuing region.",
      "ja": "キューイングの発症の下には、RTTは通常、ほぼ一定であり、データ・レートは、ウィンドウサイズに比例して変化します。データレートがサブパスIP率に達すると、データレートがほぼ一定になり、RTTはウィンドウサイズの増加に比例して増加します。待ち行列の先頭を横切って正確な遷移がRTT上比データレートであると定義され、ネットワークの最大電力によって同定することができます。ネットワーク電源は、各ウィンドウのサイズで計算することができ、最大値を有するウィンドウをキューイング領域の開始としました。"
    },
    {
      "indent": 3,
      "text": "If there is random background loss (e.g., bit errors), precise determination of the onset of queue-induced packet loss may require multiple scans. At window sizes large enough to cause loss in queues, all transport protocols are expected to experience periodic losses determined by the interaction between the congestion control and AQM algorithms. For standard congestion control algorithms, the periodic losses are likely to be relatively widely spaced, and the details are typically dominated by the behavior of the transport protocol itself. For the case of stiffened transport protocols (with non-standard, aggressive congestion control algorithms), the details of periodic losses will be dominated by how the window increase function responds to loss.",
      "ja": "ランダムバックグラウンド損失（例えば、ビットエラー）、複数のスキャンを必要とするかもしれないキュー誘起パケット損失の発症の正確な決定がある場合。ウィンドウは、キューの損失を引き起こすのに十分な大きサイズで、すべてのトランスポートプロトコルは、輻輳制御とAQMアルゴリズムとの間の相互作用によって決定定期的な損失を経験することが期待されています。標準の輻輳制御アルゴリズムのために、定期的な損失は、比較的広い間隔である可能性があり、その詳細は、典型的には、トランスポートプロトコル自体の挙動によって支配されます。 （非標準、積極的な輻輳制御アルゴリズムを持つ）補剛トランスポートプロトコルの場合には、定期的な損失の詳細は、ウィンドウの増加機能が喪失にどのように応答するかによって支配されます。"
    },
    {
      "indent": 0,
      "text": "8.2.1. Congestion Avoidance",
      "section_title": true,
      "ja": "8.2.1. 輻輳回避"
    },
    {
      "indent": 3,
      "text": "A subpath passes the congestion avoidance standing queue test if more than target_run_length packets are delivered between the onset of queuing (as determined by the window with the maximum network power as described above) and the first loss or ECN CE mark. If this test is implemented using a standard congestion control algorithm with a clamp, it can be performed in situ in the production internet as a capacity test. For an example of such a test, see [Pathdiag].",
      "ja": "第損失やECNのCEマーク（上記のように最大ネットワーク電力が窓によって決定される）よりtarget_run_lengthパケットがキューイングの開始との間に送達される場合サブパスは、輻輳回避起立キューテストを通過します。この試験は、クランプを有する標準輻輳制御アルゴリズムを使用して実装されている場合、それは容量試験として生産インターネットでその場で行うことができます。そのような試験の例については、[Pathdiag]参照。"
    },
    {
      "indent": 3,
      "text": "For technologies that do not have conventional queues, use the test_window in place of the onset of queuing. That is, a subpath passes the congestion avoidance standing queue test if more than target_run_length packets are delivered between the start of the scan at test_window and the first loss or ECN CE mark.",
      "ja": "従来のキューを持っていない技術については、キューイングの発症の代わりにtest_windowを使用しています。それ以上target_run_lengthパケットがtest_windowにおけるスキャンの開始と最初の損失またはECNのCEマークの間送達される場合サブパスは、輻輳回避起立キューテストを通過します。"
    },
    {
      "indent": 0,
      "text": "8.2.2. Bufferbloat",
      "section_title": true,
      "ja": "8.2.2.  Bufferbloat"
    },
    {
      "indent": 3,
      "text": "This test confirms that there is some mechanism to limit buffer occupancy (e.g., that prevents bufferbloat). Note that this is not strictly a requirement for single-stream bulk transport capacity; however, if there is no mechanism to limit buffer queue occupancy, then a single stream with sufficient data to deliver is likely to cause the problems described in [RFC7567] and [wikiBloat]. This may cause only minor symptoms for the dominant flow but has the potential to make the subpath unusable for other flows and applications.",
      "ja": "このテストでは、（bufferbloatを防止例えば）バッファ占有率を制限するいくつかのメカニズムが存在することを確認します。これは厳密には単一ストリームのバルク輸送能力の要件ではないことに注意してください。バッファキュー占有率を制限する機構がない場合は、次に送達するのに十分なデータを有する単一のストリームは、[RFC7567]に記載された問題及び[wikiBloat]を引き起こす可能性があります。これは、支配的な流れのための唯一のマイナーな症状を引き起こすが、他のフローやアプリケーションのためのサブパスが使用できなくなる可能性を秘めていることがあります。"
    },
    {
      "indent": 3,
      "text": "The test will pass if the onset of loss occurs before a standing queue has introduced delay greater than twice the target_RTT or another well-defined and specified limit. Note that there is not yet a model for how much standing queue is acceptable. The factor of two chosen here reflects a rule of thumb. In conjunction with the previous test, this test implies that the first loss should occur at a queuing delay that is between one and two times the target_RTT.",
      "ja": "スタンディングキューが二回target_RTTまたは他の明確に定義され、指定された制限よりも大きな遅延を導入しています前に、損失の発生が発生した場合、テストは合格します。スタンディングキューが許容されるどのくらいのモデルがまだ存在しないことに注意してください。ここで選ばれた2の要因は、経験則を反映しています。以前の試験と併せて、この試験は、最初の損失は1〜2倍target_RTT間でキューイング遅延で起こるべきであることを意味します。"
    },
    {
      "indent": 3,
      "text": "Specified RTT limits that are larger than twice the target_RTT must be fully justified in the FSTIDS.",
      "ja": "二回target_RTTより大きい指定されたRTTの制限がFSTIDSで完全に正当化しなければなりません。"
    },
    {
      "indent": 0,
      "text": "8.2.3. Non-excessive Loss",
      "section_title": true,
      "ja": "8.2.3. 非過剰損失"
    },
    {
      "indent": 3,
      "text": "This test confirms that the onset of loss is not excessive. The test will pass if losses are equal to or less than the increase in the cross traffic plus the test stream window increase since the previous RTT. This could be restated as non-decreasing total throughput of the subpath at the onset of loss. (Note that when there is a transient drop in subpath throughput and there is not already a standing queue, a subpath that passes other queue tests in this document will have sufficient queue space to hold one full RTT worth of data).",
      "ja": "このテストは、損失の発生が過大でないことを確認しました。損失に等しいか、クロストラフィックの増大に加えて、以前のRTT以来のテストストリーム窓未満の増加であればテストは合格します。これは、損失の発症時サブパスの非減少総スループットと言い換えることができます。 （サブパスのスループットの過渡的低下があると立っキューがすでに存在していない場合、このドキュメントの他のキューのテストに合格しサブパスは、データの完全な一のRTTの価値を保持するのに十分なキュースペースを持っていることに注意してください）。"
    },
    {
      "indent": 3,
      "text": "Note that token bucket policers will not pass this test, which is as intended. TCP often stumbles badly if more than a small fraction of the packets are dropped in one RTT. Many TCP implementations will require a timeout and slowstart to recover their self-clock. Even if they can recover from the massive losses, the sudden change in available capacity at the bottleneck wastes serving and front-path capacity until TCP can adapt to the new rate [Policing].",
      "ja": "トークンバケットポリサーを目的としているように、このテストに合格しないことに注意してください。パケットの小部分よりも多くが1 RTTにドロップされた場合、TCPはしばしばひどくつまずきます。多くのTCP実装は、彼らの自己クロックを回復するためにタイムアウトとスロースタートが必要になります。 TCPは、新しいレート[ポリシング]に適応できるようになるまで、彼らは巨大な損失、サービス提供のボトルネックの廃棄物とフロントパスの容量で利用可能な容量の急激な変化から回復することができたとしても。"
    },
    {
      "indent": 0,
      "text": "8.2.4. Duplex Self-Interference",
      "section_title": true,
      "ja": "8.2.4. 二重自己干渉"
    },
    {
      "indent": 3,
      "text": "This engineering test confirms a bound on the interactions between the forward data path and the ACK return path when they share a half-duplex link.",
      "ja": "この技術試験は、彼らが半二重リンクを共有する順方向データ・パスとACKのリターンパス間の相互作用上の結合を確認します。"
    },
    {
      "indent": 3,
      "text": "Some historical half-duplex technologies had the property that each direction held the channel until it completely drained its queue. When a self-clocked transport protocol, such as TCP, has data and ACKs passing in opposite directions through such a link, the behavior often reverts to stop-and-wait. Each additional packet added to the window raises the observed RTT by two packet times, once as the additional packet passes through the data path and once for the additional delay incurred by the ACK waiting on the return path.",
      "ja": "いくつかの歴史的な半二重の技術は、それは完全にそのキューを排水するまで、それぞれの方向にチャンネルを開催プロパティを持っていました。 TCPのようなセルフクロックトランスポートプロトコルは、このようなリンクを介して逆方向に渡すデータとACKを持っている場合は、動作がしばしばアンドウェイトを停止するように戻ります。ウィンドウに追加される各追加のパケットは、追加のパケットが復路で待機ACKによって発生した追加の遅延のためのデータ・パスと一度通過一度として、2つのパケット倍観察RTTを上昇させます。"
    },
    {
      "indent": 3,
      "text": "The Duplex Self-Interference Test fails if the RTT rises by more than a fixed bound above the expected queuing time computed from the excess window divided by the subpath IP capacity. This bound must be smaller than target_RTT/2 to avoid reverting to stop-and-wait behavior (e.g., data packets and ACKs both have to be released at least twice per RTT).",
      "ja": "RTTが固定サブパスIP容量で割った過剰ウィンドウから計算予想待ち時間の上に結合さを超えて上昇する場合に二重自己干渉テストが失敗します。このバウンドは、（例えば、データパケットおよびACKの両方RTTごとに少なくとも二回解放する必要がある）行動を待って停止-と-に戻す避けるために/ 2 target_RTTより小さくなければなりません。"
    },
    {
      "indent": 0,
      "text": "8.3. Slowstart Tests",
      "section_title": true,
      "ja": "8.3. スロースタートテスト"
    },
    {
      "indent": 3,
      "text": "These tests mimic slowstart: data is sent at twice the effective bottleneck rate to exercise the queue at the dominant bottleneck.",
      "ja": "これらのテストは、スロースタートを模倣する：データが支配的なボトルネックでキューを行使するために二回効果的なボトルネックのレートで送信されます。"
    },
    {
      "indent": 0,
      "text": "8.3.1. Full Window Slowstart Test",
      "section_title": true,
      "ja": "8.3.1. 全ウィンドウのスロースタートのテスト"
    },
    {
      "indent": 3,
      "text": "This capacity test confirms that slowstart is not likely to exit prematurely. To perform this test, send slowstart bursts that are target_window_size total packets and accumulate packet transfer statistics as described in Section 7.2 to score the outcome. The test will pass if it is statistically significant that the observed number of good packets delivered between losses or ECN CE marks is larger than the target_run_length. The test will fail if it is statistically significant that the observed interval between losses or ECN CE marks is smaller than the target_run_length.",
      "ja": "この容量試験は、スロースタートが途中で終了する可能性がないことを確認します。 target_window_size総パケットであるスロースタートバーストを送信し、このテストを実行し、結果を獲得するために、セクション7.2で説明したように、パケット転送の統計情報を蓄積します。損失またはECNのCEマーク間送達良いパケットの観察数がtarget_run_lengthよりも大きいことが統計的に有意である場合、テストは合格します。損失やECNのCEマーク間の観測間隔がtarget_run_lengthよりも小さいことが統計的に有意である場合、テストは失敗します。"
    },
    {
      "indent": 3,
      "text": "The test is deemed inconclusive if the elapsed time to send the data burst is not less than half of the time to receive the ACKs. (That is, it is acceptable to send data too fast, but sending it slower than twice the actual bottleneck rate as indicated by the ACKs is deemed inconclusive). The headway for the slowstart bursts should be the target_RTT.",
      "ja": "データバーストを送信するための経過時間がACKを受信する時間の半分未満でない場合、テストは決定的であると考えられます。 （すなわち、あまりにも速いデータを送信するために許容可能であるが、のACKによって示されるように2倍以上が遅く実際のボトルネック率を送信することは決定的であると考えられる、です）。スロースタートバーストのための前進はtarget_RTTでなければなりません。"
    },
    {
      "indent": 3,
      "text": "Note that these are the same parameters that are used for the Sustained Full-Rate Bursts Test, except the burst rate is at slowstart rate rather than sender interface rate.",
      "ja": "バースト速度がスロースタート・レートではなく、送信者インタフェース速度である以外は、これらは、持続フルレートバースト試験のために使用されるのと同じパラメータであることに留意されたいです。"
    },
    {
      "indent": 0,
      "text": "8.3.2. Slowstart AQM Test",
      "section_title": true,
      "ja": "8.3.2. スロースタートAQMテスト"
    },
    {
      "indent": 3,
      "text": "To perform this test, do a continuous slowstart (send data continuously at twice the implied IP bottleneck capacity) until the first loss; stop and allow the network to drain and repeat; gather statistics on how many packets were delivered before the loss, the pattern of losses, maximum observed RTT, and window size; and justify the results. There is not currently sufficient theory to justify requiring any particular result; however, design decisions that affect the outcome of this tests also affect how the network balances between long and short flows (the \"mice vs. elephants\" problem). The queue sojourn time for the first packet delivered after the first loss should be at least one half of the target_RTT.",
      "ja": "このテストを実行するには、最初の損失まで（2回暗黙のIPのボトルネック容量で連続的にデータを送信する）連続スロースタートを行います。停止し、ドレインと繰り返すようにネットワークを許します。損失、損失のパターン、最大観測されたRTT、ウィンドウサイズの前に配信されたどのように多くのパケットの統計情報を収集します。そしてその結果を正当化します。任意の特定の結果を必要とする正当化するのに十分な理論は現在ありません。しかし、このテストの結果に影響を与える設計上の決定はまた、どのように影響するかロングとショートのフロー間のネットワーク残高（「マウス対象」の問題）。最初の損失の後に送出される第1のパケットのキュー滞在時間はtarget_RTTの少なくとも半分でなければなりません。"
    },
    {
      "indent": 3,
      "text": "This engineering test should be performed on a quiescent network or testbed, since cross traffic has the potential to change the results in ill-defined ways.",
      "ja": "クロストラフィックが不明確な方法で結果を変える可能性を持っているので、この技術試験は、静止状態のネットワークやテストベッド上で実行する必要があります。"
    },
    {
      "indent": 0,
      "text": "8.4. Sender Rate Burst Tests",
      "section_title": true,
      "ja": "8.4. 送信者レートバーストテスト"
    },
    {
      "indent": 3,
      "text": "These tests determine how well the network can deliver bursts sent at the sender's interface rate. Note that this test most heavily exercises the front path and is likely to include infrastructure that may be out of scope for an access ISP, even though the bursts might be caused by ACK compression, thinning, or channel arbitration in the access ISP. See Appendix B.",
      "ja": "これらのテストは、ネットワークが送信側のインタフェースレートで送信されたバーストを提供することができますどれだけを決定します。このテストは、最も頻繁にフロントのパスを行使し、バーストは、アクセスISPにACK圧縮、間伐、またはチャネル調停によって引き起こされる可能性があるにもかかわらず、アクセスISPの範囲外かもしれインフラを含める可能性があることに注意してください。付録Bを参照してください。"
    },
    {
      "indent": 3,
      "text": "Also, there are a several details about sender interface rate bursts that are not fully defined here. These details, such as the assumed sender interface rate, should be explicitly stated in an FSTIDS.",
      "ja": "また、完全にはここで定義されていない送信元インターフェイスレートバーストについてのいくつかの詳細があります。そのような仮定送信者インタフェース率としてこれらの詳細は、明示的FSTIDSに記載すべき。"
    },
    {
      "indent": 3,
      "text": "Current standards permit TCP to send full window bursts following an application pause. (Congestion Window Validation [RFC2861] and updates to support Rate-Limited Traffic [RFC7661] are not required). Since full window bursts are consistent with standard behavior, it is desirable that the network be able to deliver such bursts; otherwise, application pauses will cause unwarranted losses. Note that the AIMD sawtooth requires a peak window that is twice target_window_size, so the worst-case burst may be 2*target_window_size.",
      "ja": "現在の標準は、アプリケーションの一時停止、次のウィンドウ全体のバーストを送信するためにTCPを許可します。 （輻輳ウィンドウ検証[RFC2861]とレート制限トラフィック[RFC7661]をサポートするためのアップデートは必要ありません）。フルウィンドウバーストは、標準の動作と一致しているので、ネットワークは、このようなバーストを提供することができることが望ましいです。そうでない場合は、アプリケーションの一時停止は不当な損失が発生します。 AIMDのノコギリが二回target_window_sizeされるピークウィンドウが必要なので、最悪の場合のバーストが2 * target_window_sizeであってもよいことに注意してください。"
    },
    {
      "indent": 3,
      "text": "It is also understood in the application and serving community that interface rate bursts have a cost to the network that has to be balanced against other costs in the servers themselves. For example, TCP Segmentation Offload (TSO) reduces server CPU in exchange for larger network bursts, which increase the stress on network buffer memory. Some newer TCP implementations can pace traffic at scale [TSO_pacing] [TSO_fq_pacing]. It remains to be determined if and how quickly these changes will be deployed.",
      "ja": "また、インターフェイスレートバーストがサーバー自体で他のコストとのバランスする必要があるネットワークへのコストを持っているアプリケーションとサービス提供地域社会に理解されています。例えば、TCPセグメンテーションオフロード（TSO）は、ネットワークバッファメモリへのストレスを増加させる、より大きなネットワークのバースト、引き換えに、サーバCPUを減少させます。いくつかの新しいTCP実装は[TSO_pacing] [TSO_fq_pacing]スケールでのトラフィックのペースすることができます。そしてどのように迅速にこれらの変更が展開されるかどうかはまだ決定されていません。"
    },
    {
      "indent": 3,
      "text": "There is not yet theory to unify these costs or to provide a framework for trying to optimize global efficiency. We do not yet have a model for how many server rate bursts should be tolerated by the network. Some bursts must be tolerated by the network, but it is probably unreasonable to expect the network to be able to efficiently deliver all data as a series of bursts.",
      "ja": "これらのコストを統一するか、グローバルな効率を最適化しようとするためのフレームワークを提供するために、理論はまだありません。私たちは、まだ多くのサーバー・レート・バーストがネットワークによって許容されなければならないかのモデルを持っていません。いくつかのバーストはネットワークによって許容されなければならないが、ネットワークが効率的に一連のバーストとして、すべてのデータを提供できることを期待することはおそらく無理があります。"
    },
    {
      "indent": 3,
      "text": "For this reason, this is the only test for which we encourage derating. A TIDS could include a table containing pairs of derating parameters: burst sizes and how much each burst size is permitted to reduce the run length, relative to the target_run_length.",
      "ja": "このような理由から、これは我々がディレーティングを奨励いる唯一のテストです。バーストサイズとどのくらいの各バーストサイズはtarget_run_lengthに対して、ラン長を短くすることが許される：TIDSは、ディレーティング・パラメータの組を含むテーブルを含むことができます。"
    },
    {
      "indent": 0,
      "text": "8.5. Combined and Implicit Tests",
      "section_title": true,
      "ja": "8.5. 組み合わされ、暗黙のテスト"
    },
    {
      "indent": 3,
      "text": "Combined tests efficiently confirm multiple network properties in a single test, possibly as a side effect of normal content delivery. They require less measurement traffic than other testing strategies at the cost of conflating diagnostic signatures when they fail. These are by far the most efficient for monitoring networks that are nominally expected to pass all tests.",
      "ja": "合わせたテストを効率的におそらく通常のコンテンツ配信の副作用として、単一のテストで複数のネットワークのプロパティを確認します。彼らは、彼らが失敗したときに、診断の署名をconflatingのコストで他のテスト戦略未満の測定トラフィックを必要とします。これらは、はるかに名目上のすべてのテストに合格することが期待されているネットワークを監視するための最も効率的です。"
    },
    {
      "indent": 0,
      "text": "8.5.1. Sustained Full-Rate Bursts Test",
      "section_title": true,
      "ja": "8.5.1. 持続フルレートバーストテスト"
    },
    {
      "indent": 3,
      "text": "The Sustained Full-Rate Bursts Test implements a combined worst-case version of all of the capacity tests above. To perform this test, send target_window_size bursts of packets at server interface rate with target_RTT burst headway (burst start to next burst start), and verify that the observed packet transfer statistics meets the target_run_length.",
      "ja": "持続フルレートバーストテストは、上記の能力テストの全ての組み合わせ最悪の場合のバージョンを実装しています。このテストを実行target_RTTとサーバインタフェース速度でパケットのtarget_window_sizeバーストを送信（次のバーストの開始までのバースト開始）車間バースト、および観察されたパケット転送統計はtarget_run_lengthを満たしていることを確認します。"
    },
    {
      "indent": 3,
      "text": "Key observations:",
      "ja": "主な所見："
    },
    {
      "indent": 3,
      "text": "o The subpath under test is expected to go idle for some fraction of the time, determined by the difference between the time to drain the queue at the subpath_IP_capacity and the target_RTT. If the queue does not drain completely, it may be an indication that the subpath has insufficient IP capacity or that there is some other problem with the test (e.g., it is inconclusive).",
      "ja": "Oテスト中のサブパスはsubpath_IP_capacityとtarget_RTTでキューを排出するための時間との差によって決定された時間のある部分、アイドル状態に行くことが予想されます。キューが完全に排出されない場合は、サブパスが不十分IP能力を有すること、又は試験（例えば、それが決定的である）と他のいくつかの問題があることを指示してもよいです。"
    },
    {
      "indent": 3,
      "text": "o The burst sensitivity can be derated by sending smaller bursts more frequently (e.g., by sending target_window_size*derate packet bursts every target_RTT*derate, where \"derate\" is less than one).",
      "ja": "Oバースト感度（「出力レベル低下」が1未満であるすべてのtarget_RTT *出力レベル低下は、target_window_size *デレートパケットを送信することにより、例えば、バースト）より頻繁に小さいバーストを送信することによってディレーティングすることができます。"
    },
    {
      "indent": 3,
      "text": "o When not derated, this test is the most strenuous capacity test.",
      "ja": "ディレーティングいない場合は、O、このテストは、最も激しい容量試験です。"
    },
    {
      "indent": 3,
      "text": "o A subpath that passes this test is likely to be able to sustain higher rates (close to subpath_IP_capacity) for paths with RTTs significantly smaller than the target_RTT.",
      "ja": "Oこの試験に合格するサブパスがtarget_RTTより著しく小さいのRTTとのパスの（subpath_IP_capacityに近い）高いレートを維持することができる可能性があります。"
    },
    {
      "indent": 3,
      "text": "o This test can be implemented with instrumented TCP [RFC4898], using a specialized measurement application at one end (e.g., [MBMSource]) and a minimal service at the other end (e.g., [RFC863] and [RFC864]).",
      "ja": "Oこの試験は、一端（例えば、[MBMSource]）及び他端に最小のサービスに特化した測定アプリケーションを使用して、インストルメントTCP [RFC4898]を用いて実施することができる（例えば、[RFC863]と[RFC864]）。"
    },
    {
      "indent": 3,
      "text": "o This test is efficient to implement, since it does not require per-packet timers, and can make use of TSO in modern network interfaces.",
      "ja": "Oこのテストでは、それは、パケットごとのタイマーを必要とせず、現代のネットワークインタフェースでTSOを利用することができるので、実装するのが効率的です。"
    },
    {
      "indent": 3,
      "text": "o If a subpath is known to pass the standing queue engineering tests (particularly that it has a progressive onset of loss at an appropriate queue depth), then the Sustained Full-Rate Bursts Test is sufficient to assure that the subpath under test will not impair Bulk Transport Capacity at the target performance under all conditions. See Section 8.2 for a discussion of the standing queue tests.",
      "ja": "サブパスは、（それが適切なキューの深さでの損失の漸進的発症を有する特にこと）スタンディングキュー工学試験に合格することが知られている場合は、O、次いで持続フルレートバースト試験は、試験下のサブパスを損なわないことを保証するのに十分ですすべての条件の下で目標性能のバルク輸送能力。立ってキューテストの議論については、セクション8.2を参照してください。"
    },
    {
      "indent": 3,
      "text": "Note that this test is clearly independent of the subpath RTT or other details of the measurement infrastructure, as long as the measurement infrastructure can accurately and reliably deliver the required bursts to the subpath under test.",
      "ja": "この試験は、正確かつ確実に被試験サブパスに必要なバーストを送達することができる測定インフラ限り、サブパスRTT又は測定インフラストラクチャの他の詳細を明らかに無関係であることに留意されたいです。"
    },
    {
      "indent": 0,
      "text": "8.5.2. Passive Measurements",
      "section_title": true,
      "ja": "8.5.2. パッシブ測定"
    },
    {
      "indent": 3,
      "text": "Any non-throughput-maximizing application, such as fixed-rate streaming media, can be used to implement passive or hybrid (defined in [RFC7799]) versions of Model-Based Metrics with some additional instrumentation and possibly a traffic shaper or other controls in the servers. The essential requirement is that the data transmission be constrained such that even with arbitrary application pauses and bursts, the data rate and burst sizes stay within the envelope defined by the individual tests described above.",
      "ja": "このような固定レートストリーミングメディアのような任意の非スループット最大化アプリケーションは、おそらくいくつかの付加的な計測およびトラフィックシェーパまたは他のコントロールのあるモデルベースのメトリックの受動的またはハイブリッド（[RFC7799]で定義された）バージョンを実装するために使用することができますサーバ。必須要件は、データ送信があっても、任意のアプリケーションが一時停止とバーストと、データレートとバーストサイズは、上述した個々の試験により定義されるエンベロープ内にとどまるように制約されることです。"
    },
    {
      "indent": 3,
      "text": "If the application's serving data rate can be constrained to be less than or equal to the target_data_rate and the serving_RTT (the RTT between the sender and client) is less than the target_RTT, this constraint is most easily implemented by clamping the transport window size to serving_window_clamp (which is set to the test_window and computed for the actual serving path).",
      "ja": "アプリケーションの配信データレートがtarget_RTT未満target_data_rateとserving_RTT（送信者とクライアントとの間のRTT）であり、以下に制限することができる場合、この制約は、最も簡単に実装serving_window_clampするトランスポート・ウィンドウのサイズをクランプすることによるものです（これtest_windowに設定され、実際の配信経路に対して計算されます）。"
    },
    {
      "indent": 3,
      "text": "Under the above constraints, the serving_window_clamp will limit both the serving data rate and burst sizes to be no larger than the parameters specified by the procedures in Section 8.1.2, 8.4, or 8.5.1. Since the serving RTT is smaller than the target_RTT, the worst-case bursts that might be generated under these conditions will be smaller than called for by Section 8.4, and the sender rate burst sizes are implicitly derated by the serving_window_clamp divided by the target_window_size at the very least. (Depending on the application behavior, the data might be significantly smoother than specified by any of the burst tests.)",
      "ja": "上記の制約の下で、serving_window_clampは、サービングデータレートとバーストサイズの両方がセクション8.1.2、8.4または8.5.1の手順により、指定されたパラメータよりも大きくならないように制限することになります。サービス提供RTTがtarget_RTTより小さいので、これらの条件下で生成される可能性があります最悪の場合のバーストは、セクション8.4によって要求されるよりも小さくなり、送信者率バーストサイズは、暗黙のうちにtarget_window_sizeで割っserving_window_clampによってディレーティングされていますせめて。 （アプリケーションの動作に応じて、データは、バースト試験のいずれかによって指定されたよりも著しく滑らかであるかもしれません。）"
    },
    {
      "indent": 3,
      "text": "In an alternative implementation, the data rate and bursts might be explicitly controlled by a programmable traffic shaper or by pacing at the sender. This would provide better control over transmissions but is more complicated to implement, although the required technology is available [TSO_pacing] [TSO_fq_pacing].",
      "ja": "代替の実装では、データ・レートとバーストは、明示的にプログラム可能なトラフィックシェーパーによってまたは送信者にペーシングによって制御される可能性があります。これは、トランスミッションのよりよい制御を提供しますが、必要な技術は、[TSO_fq_pacing] [TSO_pacing]利用可能ですが、実装がより複雑になるでしょう。"
    },
    {
      "indent": 3,
      "text": "Note that these techniques can be applied to any content delivery that can be operated at a constrained data rate to inhibit TCP equilibrium behavior.",
      "ja": "これらの技術はTCP平衡挙動を阻害することが制約されたデータレートで動作可能な任意のコンテンツ配信に適用することができることに留意されたいです。"
    },
    {
      "indent": 3,
      "text": "Furthermore, note that Dynamic Adaptive Streaming over HTTP (DASH) is generally in conflict with passive Model-Based Metrics measurement, because it is a rate-maximizing protocol. It can still meet the requirement here if the rate can be capped, for example, by knowing a priori the maximum rate needed to deliver a particular piece of content.",
      "ja": "さらに、それはレート最大化するプロトコルであるため、動的適応ストリーミングHTTP上（DASH）は、受動的なモデルベースのメトリック測定と競合して、一般的にあることに注意。レートは、特定のコンテンツを提供するために必要な先験的最大速度を知ることにより、例えば、キャップすることができるかどうかはまだここに要件を満たすことができます。"
    },
    {
      "indent": 0,
      "text": "9. Example",
      "section_title": true,
      "ja": "9.例"
    },
    {
      "indent": 3,
      "text": "In this section, we illustrate a TIDS designed to confirm that an access ISP can reliably deliver HD video from multiple content providers to all of its customers. With modern codecs, minimal HD video (720p) generally fits in 2.5 Mb/s. Due to the ISP's geographical size, network topology, and modem characteristics, the ISP determines that most content is within a 50 ms RTT of its users. (This example RTT is sufficient to cover the propagation delay to continental Europe or to either coast of the United States with low-delay modems; it is sufficient to cover somewhat smaller geographical regions if the modems require additional delay to implement advanced compression and error recovery.)",
      "ja": "このセクションでは、アクセスISPは、確実に顧客のすべてに複数のコンテンツプロバイダからのHDビデオを配信できることを確認するように設計さTIDSを説明します。最新のコーデックを使用すると、最小限のHD動画（720pの）は、一般的に2.5メガビット/秒に収まります。 ISPの地理的サイズ、ネットワークトポロジ、およびモデム特性に、ISPは、ほとんどのコンテンツは、そのユーザーの50ミリ秒のRTTの範囲内であると判断します。 （この例でRTTは、ヨーロッパ大陸にまたは低遅延モデムと米国の沿岸のいずれかに伝播遅延をカバーするのに十分であり、モデムは高度な圧縮とエラー回復を実装するために追加の遅延を必要とする場合には、やや小さい地理的領域をカバーするのに十分です。）"
    },
    {
      "indent": 16,
      "text": "+----------------------+-------+---------+\n| End-to-End Parameter | value | units   |\n+----------------------+-------+---------+\n| target_rate          | 2.5   | Mb/s    |\n| target_RTT           | 50    | ms      |\n| target_MTU           | 1500  | bytes   |\n| header_overhead      | 64    | bytes   |\n|                      |       |         |\n| target_window_size   | 11    | packets |\n| target_run_length    | 363   | packets |\n+----------------------+-------+---------+",
      "raw": true
    },
    {
      "indent": 20,
      "text": "Table 1: 2.5 Mb/s over a 50 ms Path",
      "ja": "表1：50ミリ秒の経路を介して2.5 Mb /秒"
    },
    {
      "indent": 3,
      "text": "Table 1 shows the default TCP model with no derating and, as such, is quite conservative. The simplest TIDS would be to use the Sustained Full-Rate Bursts Test, described in Section 8.5.1. Such a test would send 11 packet bursts every 50 ms and confirm that there was no more than 1 packet loss per 33 bursts (363 total packets in 1.650 seconds).",
      "ja": "表1のような、非常に保守的であり、無ディレーティングとデフォルトのTCPのモデルを示し、。最も簡単なTIDSは、セクション8.5.1で説明した持続フルレートバーストテストを、使用することです。そのような試験は、11パケット毎に50ミリ秒バースト送信およびバースト33（1.650秒で363の合計パケット）当たりせいぜい1つのパケット損失がなかったことを確認するであろう。"
    },
    {
      "indent": 3,
      "text": "Since this number represents the entire end-to-end loss budget, independent subpath tests could be implemented by apportioning the packet loss ratio across subpaths. For example, 50% of the losses might be allocated to the access or last mile link to the user, 40% to the network interconnections with other ISPs, and 1% to each internal hop (assuming no more than 10 internal hops). Then, all of the subpaths can be tested independently, and the spatial composition of passing subpaths would be expected to be within the end-to-end loss budget.",
      "ja": "この数は、全体のエンドツーエンドのロスバジェットを表すので、独立したサブパス試験はサブパスを横切ってパケット損失率を配分することによって実現することができます。例えば、損失の50％がアクセスまたはラストマイルのユーザーへのリンク、他のISPとネットワーク相互接続40％、及び（せいぜい10回の内部ホップを想定していない）各内部ホップに1％に割り当てられる可能性があります。その後、サブパスのすべてが独立してテストすることができ、およびサブパスを渡すの空間構成は、エンドツーエンドロス予算の範囲内であると期待されます。"
    },
    {
      "indent": 0,
      "text": "9.1. Observations about Applicability",
      "section_title": true,
      "ja": "9.1. 適用性に関する所見"
    },
    {
      "indent": 3,
      "text": "Guidance on deploying and using MBM belong in a future document. However, the example above illustrates some of the issues that may need to be considered.",
      "ja": "展開とMBMを使用して上の指針は将来の文書に属しています。しかし、上記の例では、検討する必要があるかもしれない問題のいくつかを示しています。"
    },
    {
      "indent": 3,
      "text": "Note that another ISP, with different geographical coverage, topology, or modem technology may need to assume a different target_RTT and, as a consequence, a different target_window_size and target_run_length, even for the same target_data rate. One of the implications of this is that infrastructure shared by multiple ISPs, such as Internet Exchange Points (IXPs) and other interconnects may need to be evaluated on the basis of the most stringent target_window_size and target_run_length of any participating ISP. One way to do this might be to choose target parameters for evaluating such shared infrastructure on the basis of a hypothetical reference path that does not necessarily match any actual paths.",
      "ja": "異なる地理的範囲、トポロジ、またはモデム技術を持つ別のISPは、同じであってもtarget_data率のために、結果として、異なるtarget_window_sizeとtarget_run_lengthとして、異なるtarget_RTTを想定する必要があるとことがあります。このによる影響の1つは、インターネットエクスチェンジポイント（のIXP）と他の相互接続など複数のISPで共有そのインフラストラクチャは、任意の参加ISPの最も厳しいtarget_window_sizeとtarget_run_lengthに基づいて評価する必要があるかもしれないです。これを行う1つの方法は、必ずしも実際のパスと一致しない仮想的な基準経路に基づいて、このような共有インフラストラクチャを評価するためのターゲットパラメータを選択するかもしれません。"
    },
    {
      "indent": 3,
      "text": "Testing interconnects has generally been problematic: conventional performance tests run between measurement points adjacent to either side of the interconnect are not generally useful. Unconstrained TCP tests, such as iPerf [iPerf], are usually overly aggressive due to the small RTT (often less than 1 ms). With a short RTT, these tools are likely to report inflated data rates because on a short RTT, these tools can tolerate very high packet loss ratios and can push other cross traffic off of the network. As a consequence, these measurements are useless for predicting actual user performance over longer paths and may themselves be quite disruptive. Model-Based Metrics solves this problem. The interconnect can be evaluated with the same TIDS as other subpaths. Continuing our example, if the interconnect is apportioned 40% of the losses, 11 packet bursts sent every 50 ms should have fewer than one loss per 82 bursts (902 packets).",
      "ja": "試験相互接続は、一般的に問題となっていた：相互接続のいずれかの側に隣接する測定点間実行従来の性能試験は、一般的に有用ではありません。例えばiperfのような制約のないTCPテストは、[iperfの]が小さいRTT（しばしば1未満MS）、通常過度に攻撃的です。短いRTTと、これらのツールが短いためRTTに膨張したデータレートを報告する可能性があり、これらのツールは非常に高いパケット損失率を許容することができ、ネットワークの外、他のクロストラフィックをプッシュすることができます。その結果、これらの測定値は、より長い経路上の実際のユーザのパフォーマンスを予測するための無駄であり、それ自体は非常に破壊的であってもよいです。モデルベースのメトリックこの問題を解決します。インターコネクトは、他のサブパスと同じTIDSで評価することができます。相互接続損失の40％を配分されている場合、この例を続けると、11のパケットのバーストは82のバースト（902のパケット）当たり少ない数の損失を有するべきである50ms毎に送信されます。"
    },
    {
      "indent": 0,
      "text": "10. Validation",
      "section_title": true,
      "ja": "10.検証"
    },
    {
      "indent": 3,
      "text": "Since some aspects of the models are likely to be too conservative, Section 5.2 permits alternate protocol models, and Section 5.3 permits test parameter derating. If either of these techniques is used, we require demonstrations that such a TIDS can robustly detect subpaths that will prevent authentic applications using state-of-the-art protocol implementations from meeting the specified Target Transport Performance. This correctness criteria is potentially difficult to prove, because it implicitly requires validating a TIDS against all possible paths and subpaths. The procedures described here are still experimental.",
      "ja": "モデルのいくつかの側面があまりにも保守的である可能性が高いため、セクション5.2許可代替プロトコルモデル、およびセクション5.3許可試験パラメータディレーティング。これらの技術のいずれかを使用する場合、我々は、このようなTIDSが確実に指定されたターゲット交通性能を満たすことから、最先端のプロトコル実装を使用した本格的なアプリケーションを防ぐことができますサブパスを検出することができることを実証する必要があります。それは暗黙のうちにすべての可能なパスとサブパスに対してTIDSを検証する必要があるため、この正しさの基準は、証明する潜在的に困難です。ここで説明する手順は、まだ実験的です。"
    },
    {
      "indent": 3,
      "text": "We suggest two approaches, both of which should be applied. First, publish a fully open description of the TIDS, including what assumptions were used and how it was derived, such that the research community can evaluate the design decisions, test them, and comment on their applicability. Second, demonstrate that applications do meet the Target Transport Performance when running over a network testbed that has the tightest possible constraints that still allow the tests in the TIDS to pass.",
      "ja": "当社は、適用されるべきどちらの二つのアプローチを示唆しています。まず、使用されたどのような仮定を含むTIDS、全開記述を公開し、それが得られたか、研究コミュニティは、このような、設計上の決定を評価し、それらをテストし、その適用性についてコメントすることができていること。第二に、まだTIDSでテストに合格することができます最も厳しい可能性制約を持つネットワークテストベッド上で実行している場合、アプリケーションがターゲット交通の性能を満たしてやることを示しています。"
    },
    {
      "indent": 3,
      "text": "This procedure resembles an epsilon-delta proof in calculus. Construct a test network such that all of the individual tests of the TIDS pass by only small (infinitesimal) margins, and demonstrate that a variety of authentic applications running over real TCP implementations (or other protocols as appropriate) meets the Target Transport Performance over such a network. The workloads should include multiple types of streaming media and transaction-oriented short flows (e.g., synthetic web traffic).",
      "ja": "この手順は、微積分におけるイプシロン - デルタ証拠に似ています。このような上にターゲット搬送性を満たすTIDSの個々のテストの全てがわずか（微小）マージンを通過するように、テストネットワークを構築、および本格様々なアプリケーションが実際のTCPの実装（又は適切な他のプロトコル）上で動作することを実証していますネットワーク。ワークロードは、ストリーミングメディア及びトランザクション指向短いフローの複数種類（例えば、合成ウェブトラフィック）を含むべきです。"
    },
    {
      "indent": 3,
      "text": "For example, for the HD streaming video TIDS described in Section 9, the IP capacity should be exactly the header_overhead above 2.5 Mb/s, the per packet random background loss ratio should be 1/363 (for a run length of 363 packets), the bottleneck queue should be 11 packets, and the front path should have just enough buffering to withstand 11 packet interface rate bursts. We want every one of the TIDS tests to fail if we slightly increase the relevant test parameter, so, for example, sending a 12-packet burst should cause excess (possibly deterministic) packet drops at the dominant queue at the bottleneck. This network has the tightest possible constraints that can be expected to pass the TIDS, yet it should be possible for a real application using a stock TCP implementation in the vendor's default configuration to attain 2.5 Mb/s over a 50 ms path.",
      "ja": "例えば、TIDSは、セクション9に記載のHDビデオストリーミングのために、IP容量が2.5メガビット/秒以上の正確header_overheadなければならない、パケット当たりランダムバックグラウンド損失率は363分の1（363のパケットのランの長さ）であるべきです、ボトルネックキューは11のパケットであるべきであり、フロントのパスは11のパケットインタフェース率バーストに耐えるだけの十分なバッファリングを持っている必要があります。私たちは、わずかに過剰（おそらく決定論）パケットがボトルネックでの支配的なキューに低下原因とすべきである12-パケットバーストを送信し、例えば、関連するテストパラメータを増やし、その場合TIDSテストの一人一人が失敗します。このネットワークは、TIDSに合格することが期待される最も厳しい可能性制約を持って、まだそれは50ミリ秒の路上で2.5 Mb /秒を達成するために、ベンダーのデフォルト設定の株式TCPの実装を使用して実際のアプリケーションのために可能でなければなりません。"
    },
    {
      "indent": 3,
      "text": "The most difficult part of setting up such a testbed is arranging for it to have the tightest possible constraints that still allow it to pass the individual tests. Two approaches are suggested: o constraining (configuring) the network devices not to use all available resources (e.g., by limiting available buffer space or data rate)",
      "ja": "それはまだそれが個々の試験に合格することができます最も厳しい可能性制約を持っているため、このようなテストベッドをセットアップするのが最も難しい部分が配置されます。 2つのアプローチが提案されている：すべての利用可能なリソースを使用しないネットワークデバイスを（設定）制約O（例えば利用可能なバッファ領域またはデータ・レートを制限することによって）"
    },
    {
      "indent": 3,
      "text": "o pre-loading subpaths with cross traffic",
      "ja": "クロストラフィックとO、プリロードサブパス"
    },
    {
      "indent": 3,
      "text": "Note that it is important that a single tightly constrained environment just barely passes all tests; otherwise, there is a chance that TCP can exploit extra latitude in some parameters (such as data rate) to partially compensate for constraints in other parameters (e.g., queue space). This effect is potentially bidirectional: extra latitude in the queue space tests has the potential to enable TCP to compensate for insufficient data-rate headroom.",
      "ja": "単一のしっかりと制限された環境がかろうじてすべてのテストに合格することが重要であることに注意してください。そうでない場合は、TCPが部分的に他のパラメータ（例えば、キュ​​ー・スペース）内の制約を補償する（例えばデータレートのような）いくつかのパラメータに余分な自由度を利用することができる可能性があります。この効果は、潜在的に双方向です：キュースペースのテストで追加の自由度が不十分なデータレートのヘッドルームを補うためにTCPを有効にする可能性を秘めています。"
    },
    {
      "indent": 3,
      "text": "To the extent that a TIDS is used to inform public dialog, it should be fully documented publicly, including the details of the tests, what assumptions were used, and how it was derived. All of the details of the validation experiment should also be published with sufficient detail for the experiments to be replicated by other researchers. All components should be either open source or fully described proprietary implementations that are available to the research community.",
      "ja": "TIDSは公共ダイアログを知らせるために使用されている限り、それは完全に使用されたどのような仮定のテストの詳細を含め、一般に公開されなければならない、そしてそれがどのように導出されました。検証実験の詳細のすべては、他の研究者によって複製される実験のために十分な詳細を公表しなければなりません。すべてのコンポーネントは、オープンソースや研究コミュニティに利用可能な、完全に説明し、独自の実装のどちらかでなければなりません。"
    },
    {
      "indent": 0,
      "text": "11. Security Considerations",
      "section_title": true,
      "ja": "11.セキュリティについての考慮事項"
    },
    {
      "indent": 3,
      "text": "Measurement is often used to inform business and policy decisions and, as a consequence, is potentially subject to manipulation. Model-Based Metrics are expected to be a huge step forward because equivalent measurements can be performed from multiple vantage points, such that performance claims can be independently validated by multiple parties.",
      "ja": "測定は、多くの場合、ビジネスや政策の意思決定を通知するために使用して、結果として、操作に潜在的に対象とされます。モデルベースのメトリックは同等の測定性能クレームは、独立して複数の当事者によって検証することができるように多数の有利な点から行うことができるので、大きな前進であると予想されます。"
    },
    {
      "indent": 3,
      "text": "Much of the acrimony in the Net Neutrality debate is due to the historical lack of any effective vantage-independent tools to characterize network performance. Traditional methods for measuring Bulk Transport Capacity are sensitive to RTT and as a consequence often yield very different results when run local to an ISP or interconnect and when run over a customer's complete path. Neither the ISP nor customer can repeat the other's measurements, leading to high levels of distrust and acrimony. Model-Based Metrics are expected to greatly improve this situation.",
      "ja": "ネット中立性の議論でのとげとげしさの多くは、ネットワーク性能を特徴付ける任意の有効な見晴らしの良い、独立したツールの歴史的な不足しているためです。バルク輸送能力を測定するための従来の方法はRTTに敏感であり、ISPまたは相互接続とするとき、顧客の完全なパスを介して実行するには、ローカルで実行する場合、結果として、多くの場合、非常に異なる結果をもたらします。 ISPも顧客はいずれも、不信ととげとげしの高レベルにつながる、の他の測定を繰り返すことができます。モデルベースのメトリックが大幅にこの状況を改善することが期待されています。"
    },
    {
      "indent": 3,
      "text": "Note that in situ measurements sometimes require sending synthetic measurement traffic between arbitrary locations in the network and, as such, are potentially attractive platforms for launching DDoS attacks. All active measurement tools and protocols must be designed to minimize the opportunities for these misuses. See the discussion in Section 7 of [RFC7594].",
      "ja": "その場での測定は、時々、ネットワーク内の任意の場所の間の合成測定トラフィックを送信する必要と、など、DDoS攻撃を起動するための魅力的なプラットフォームは、潜在的にあることに留意されたいです。すべてのアクティブな測定ツールとプロトコルは、これらの誤用の機会を最小限に抑えるように設計されなければなりません。 [RFC7594]のセクション7での議論を参照してください。"
    },
    {
      "indent": 3,
      "text": "Some of the tests described in this document are not intended for frequent network monitoring since they have the potential to cause high network loads and might adversely affect other traffic.",
      "ja": "彼らは高いネットワーク負荷を引き起こす可能性があり、悪影響他のトラフィックに影響を与える可能性があるため、このドキュメントで説明するテストのいくつかは頻繁にネットワーク監視のために意図されていません。"
    },
    {
      "indent": 3,
      "text": "This document only describes a framework for designing a Fully Specified Targeted IP Diagnostic Suite. Each FSTIDS must include its own security section.",
      "ja": "この文書では、唯一の完全に指定されたターゲットIP診断スイートを設計するためのフレームワークについて説明します。各FSTIDSは、独自のセキュリティセクションを含める必要があります。"
    },
    {
      "indent": 0,
      "text": "12. IANA Considerations",
      "section_title": true,
      "ja": "12. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "This document has no IANA actions.",
      "ja": "このドキュメントには、IANAのアクションを持っていません。"
    },
    {
      "indent": 0,
      "text": "13. Informative References",
      "section_title": true,
      "ja": "13.参考文献"
    },
    {
      "indent": 3,
      "text": "[RFC863] Postel, J., \"Discard Protocol\", STD 21, RFC 863, DOI 10.17487/RFC0863, May 1983, <https://www.rfc-editor.org/info/rfc863>.",
      "ja": "[RFC863]ポステル、J.、 \"破棄プロトコル\"、STD 21、RFC 863、DOI 10.17487 / RFC0863、1983年5月、<https://www.rfc-editor.org/info/rfc863>。"
    },
    {
      "indent": 3,
      "text": "[RFC864] Postel, J., \"Character Generator Protocol\", STD 22, RFC 864, DOI 10.17487/RFC0864, May 1983, <https://www.rfc-editor.org/info/rfc864>.",
      "ja": "[RFC864]ポステル、J.、 \"キャラクタジェネレータプロトコル\"、STD 22、RFC 864、DOI 10.17487 / RFC0864、1983年5月、<https://www.rfc-editor.org/info/rfc864>。"
    },
    {
      "indent": 3,
      "text": "[RFC2330] Paxson, V., Almes, G., Mahdavi, J., and M. Mathis, \"Framework for IP Performance Metrics\", RFC 2330, DOI 10.17487/RFC2330, May 1998, <https://www.rfc-editor.org/info/rfc2330>.",
      "ja": "[RFC2330]パクソン、V.、Almes、G.、Mahdavi、J.、およびM.マティス、 \"IPパフォーマンス・メトリックのためのフレームワーク\"、RFC 2330、DOI 10.17487 / RFC2330、1998年5月、<HTTPS：//www.rfc -editor.org/info/rfc2330>。"
    },
    {
      "indent": 3,
      "text": "[RFC2861] Handley, M., Padhye, J., and S. Floyd, \"TCP Congestion Window Validation\", RFC 2861, DOI 10.17487/RFC2861, June 2000, <https://www.rfc-editor.org/info/rfc2861>.",
      "ja": "[RFC2861]ハンドレー、M.、Padhye、J.、およびS.フロイド、 \"TCP輻輳ウィンドウ検証\"、RFC 2861、DOI 10.17487 / RFC2861、2000年6月、<https://www.rfc-editor.org/info / rfc2861>。"
    },
    {
      "indent": 3,
      "text": "[RFC3148] Mathis, M. and M. Allman, \"A Framework for Defining Empirical Bulk Transfer Capacity Metrics\", RFC 3148, DOI 10.17487/RFC3148, July 2001, <https://www.rfc-editor.org/info/rfc3148>.",
      "ja": "[RFC3148]マティス、M.およびM.オールマン、 \"実証バルク転送容量のメトリックを定義するためのフレームワーク\"、RFC 3148、DOI 10.17487 / RFC3148、2001年7月、<https://www.rfc-editor.org/info/ rfc3148>。"
    },
    {
      "indent": 3,
      "text": "[RFC3168] Ramakrishnan, K., Floyd, S., and D. Black, \"The Addition of Explicit Congestion Notification (ECN) to IP\", RFC 3168, DOI 10.17487/RFC3168, September 2001, <https://www.rfc-editor.org/info/rfc3168>.",
      "ja": "\"IPへの明示的輻輳通知の追加（ECN）\" [RFC3168]ラマクリシュナン、K.、フロイド、S.、およびD.ブラック、RFC 3168、DOI 10.17487 / RFC3168、2001年9月、<https：//でWWW。 rfc-editor.org/info/rfc3168>。"
    },
    {
      "indent": 3,
      "text": "[RFC3465] Allman, M., \"TCP Congestion Control with Appropriate Byte Counting (ABC)\", RFC 3465, DOI 10.17487/RFC3465, February 2003, <https://www.rfc-editor.org/info/rfc3465>.",
      "ja": "[RFC3465]オールマン、M.、 \"適切なバイトカウント（ABC）とTCP輻輳制御\"、RFC 3465、DOI 10.17487 / RFC3465、2003年2月、<https://www.rfc-editor.org/info/rfc3465>。"
    },
    {
      "indent": 3,
      "text": "[RFC4737] Morton, A., Ciavattone, L., Ramachandran, G., Shalunov, S., and J. Perser, \"Packet Reordering Metrics\", RFC 4737, DOI 10.17487/RFC4737, November 2006, <https://www.rfc-editor.org/info/rfc4737>.",
      "ja": "[RFC4737]モートン、A.、Ciavattone、L.、ラマチャンドラン、G.、Shalunov、S.、およびJ. Perser、 \"パケット並べ替えメトリック\"、RFC 4737、DOI 10.17487 / RFC4737、2006年11月、<https：//でwww.rfc-editor.org/info/rfc4737>。"
    },
    {
      "indent": 3,
      "text": "[RFC4898] Mathis, M., Heffner, J., and R. Raghunarayan, \"TCP Extended Statistics MIB\", RFC 4898, DOI 10.17487/RFC4898, May 2007, <https://www.rfc-editor.org/info/rfc4898>.",
      "ja": "[RFC4898]マティス、M.、Heffner、J.、およびR. Raghunarayan、 \"TCP統計MIB拡張\"、RFC 4898、DOI 10.17487 / RFC4898、2007年5月、<https://www.rfc-editor.org/info / RFC4898>。"
    },
    {
      "indent": 3,
      "text": "[RFC5136] Chimento, P. and J. Ishac, \"Defining Network Capacity\", RFC 5136, DOI 10.17487/RFC5136, February 2008, <https://www.rfc-editor.org/info/rfc5136>.",
      "ja": "[RFC5136] Chimento、P.およびJ. Ishac、 \"定義ネットワーク容量\"、RFC 5136、DOI 10.17487 / RFC5136、2008年2月、<https://www.rfc-editor.org/info/rfc5136>。"
    },
    {
      "indent": 3,
      "text": "[RFC5681] Allman, M., Paxson, V., and E. Blanton, \"TCP Congestion Control\", RFC 5681, DOI 10.17487/RFC5681, September 2009, <https://www.rfc-editor.org/info/rfc5681>.",
      "ja": "[RFC5681]オールマン、M.、パクソン、V.、およびE.ブラントン、 \"TCP輻輳制御\"、RFC 5681、DOI 10.17487 / RFC5681、2009年9月、<https://www.rfc-editor.org/info/ rfc5681>。"
    },
    {
      "indent": 3,
      "text": "[RFC5827] Allman, M., Avrachenkov, K., Ayesta, U., Blanton, J., and P. Hurtig, \"Early Retransmit for TCP and Stream Control Transmission Protocol (SCTP)\", RFC 5827, DOI 10.17487/RFC5827, May 2010, <https://www.rfc-editor.org/info/rfc5827>.",
      "ja": "[RFC5827]オールマン、M.、Avrachenkov、K.、Ayesta、U.、ブラントン、J.、およびP. Hurtig、 \"TCPおよびストリーム制御伝送プロトコル（SCTP）のための初期の再送信\"、RFC 5827、DOI 10.17487 / RFC5827 、2010年5月、<https://www.rfc-editor.org/info/rfc5827>。"
    },
    {
      "indent": 3,
      "text": "[RFC5835] Morton, A., Ed. and S. Van den Berghe, Ed., \"Framework for Metric Composition\", RFC 5835, DOI 10.17487/RFC5835, April 2010, <https://www.rfc-editor.org/info/rfc5835>.",
      "ja": "[RFC5835]モートン、A.編。そして、S.ヴァンデンベルジェ、エド。、 \"メトリック作曲のための枠組み\"、RFC 5835、DOI 10.17487 / RFC5835、2010年4月、<https://www.rfc-editor.org/info/rfc5835>。"
    },
    {
      "indent": 3,
      "text": "[RFC6049] Morton, A. and E. Stephan, \"Spatial Composition of Metrics\", RFC 6049, DOI 10.17487/RFC6049, January 2011, <https://www.rfc-editor.org/info/rfc6049>.",
      "ja": "[RFC6049]モートン、A.及びE.ステファン、 \"メトリックの空間構成\"、RFC 6049、DOI 10.17487 / RFC6049、2011年1月、<https://www.rfc-editor.org/info/rfc6049>。"
    },
    {
      "indent": 3,
      "text": "[RFC6576] Geib, R., Ed., Morton, A., Fardid, R., and A. Steinmitz, \"IP Performance Metrics (IPPM) Standard Advancement Testing\", BCP 176, RFC 6576, DOI 10.17487/RFC6576, March 2012, <https://www.rfc-editor.org/info/rfc6576>.",
      "ja": "[RFC6576] Geib、R.、エド。、モートン、A.、Fardid、R.、およびA. Steinmitz、 \"IPパフォーマンス・メトリック（IPPM）標準推進テスト\"、BCP 176、RFC 6576、DOI 10.17487 / RFC6576、マーチ2012年、<https://www.rfc-editor.org/info/rfc6576>。"
    },
    {
      "indent": 3,
      "text": "[RFC6673] Morton, A., \"Round-Trip Packet Loss Metrics\", RFC 6673, DOI 10.17487/RFC6673, August 2012, <https://www.rfc-editor.org/info/rfc6673>.",
      "ja": "[RFC6673]モートン、A.、 \"往復パケット損失メトリクス\"、RFC 6673、DOI 10.17487 / RFC6673、2012年8月、<https://www.rfc-editor.org/info/rfc6673>。"
    },
    {
      "indent": 3,
      "text": "[RFC6928] Chu, J., Dukkipati, N., Cheng, Y., and M. Mathis, \"Increasing TCP's Initial Window\", RFC 6928, DOI 10.17487/RFC6928, April 2013, <https://www.rfc-editor.org/info/rfc6928>.",
      "ja": "[RFC6928]チュー、J.、Dukkipati、N.、チェン、Y.、およびM.マティス、 \"TCPの初期ウィンドウを増やす\"、RFC 6928、DOI 10.17487 / RFC6928、2013年4月、<HTTPS：//www.rfc- editor.org/info/rfc6928>。"
    },
    {
      "indent": 3,
      "text": "[RFC7312] Fabini, J. and A. Morton, \"Advanced Stream and Sampling Framework for IP Performance Metrics (IPPM)\", RFC 7312, DOI 10.17487/RFC7312, August 2014, <https://www.rfc-editor.org/info/rfc7312>.",
      "ja": "[RFC7312] Fabini、J.及びA.モートン、 \"アドバンスドストリームとIPパフォーマンス・メトリック（IPPM）のためのサンプリングフレームワーク\"、RFC 7312、DOI 10.17487 / RFC7312、2014年8月、<https://www.rfc-editor.org /情報/ rfc7312>。"
    },
    {
      "indent": 3,
      "text": "[RFC7398] Bagnulo, M., Burbridge, T., Crawford, S., Eardley, P., and A. Morton, \"A Reference Path and Measurement Points for Large-Scale Measurement of Broadband Performance\", RFC 7398, DOI 10.17487/RFC7398, February 2015, <https://www.rfc-editor.org/info/rfc7398>.",
      "ja": "[RFC7398] Bagnulo、M.、バーブリッジ、T.、クロフォード、S.、Eardley、P.、およびA.モートン、 \"広帯域性能の大規模測定の基準経路と測定点\"、RFC 7398、DOI 10.17487 / RFC7398、2015年2月、<https://www.rfc-editor.org/info/rfc7398>。"
    },
    {
      "indent": 3,
      "text": "[RFC7567] Baker, F., Ed. and G. Fairhurst, Ed., \"IETF Recommendations Regarding Active Queue Management\", BCP 197, RFC 7567, DOI 10.17487/RFC7567, July 2015, <https://www.rfc-editor.org/info/rfc7567>.",
      "ja": "[RFC7567]ベーカー、F.、エド。そして、G. Fairhurst、エド。、 \"アクティブキュー管理に関するIETF勧告\"、BCP 197、RFC 7567、DOI 10.17487 / RFC7567、2015年7月、<https://www.rfc-editor.org/info/rfc7567>。"
    },
    {
      "indent": 3,
      "text": "[RFC7594] Eardley, P., Morton, A., Bagnulo, M., Burbridge, T., Aitken, P., and A. Akhter, \"A Framework for Large-Scale Measurement of Broadband Performance (LMAP)\", RFC 7594, DOI 10.17487/RFC7594, September 2015, <https://www.rfc-editor.org/info/rfc7594>.",
      "ja": "[RFC7594] Eardley、P.、モートン、A.、Bagnulo、M.、バーブリッジ、T.、エイトケン、P.、およびA. Akhter、 \"ブロードバンドパフォーマンス（LMAP）の大規模測定のための枠組み\"、RFC 7594、DOI 10.17487 / RFC7594、2015年9月、<https://www.rfc-editor.org/info/rfc7594>。"
    },
    {
      "indent": 3,
      "text": "[RFC7661] Fairhurst, G., Sathiaseelan, A., and R. Secchi, \"Updating TCP to Support Rate-Limited Traffic\", RFC 7661, DOI 10.17487/RFC7661, October 2015, <https://www.rfc-editor.org/info/rfc7661>.",
      "ja": "[RFC7661] Fairhurst、G.、Sathiaseelan、A.、およびR. Secchi、 \"サポートするためのTCPの更新レート制限トラフィック\"、RFC 7661、DOI 10.17487 / RFC7661、2015年10月、<HTTPS：//www.rfc-editor .ORG /情報/ rfc7661>。"
    },
    {
      "indent": 3,
      "text": "[RFC7680] Almes, G., Kalidindi, S., Zekauskas, M., and A. Morton, Ed., \"A One-Way Loss Metric for IP Performance Metrics (IPPM)\", STD 82, RFC 7680, DOI 10.17487/RFC7680, January 2016, <https://www.rfc-editor.org/info/rfc7680>.",
      "ja": "[RFC7680] Almes、G.、Kalidindi、S.、Zekauskas、M.、およびA.モートン編、 \"一方向損失メトリックIPパフォーマンス・メトリック（IPPM）のための\"、STD 82、RFC 7680、DOI 10.17487 / RFC7680、2016年1月、<https://www.rfc-editor.org/info/rfc7680>。"
    },
    {
      "indent": 3,
      "text": "[RFC7799] Morton, A., \"Active and Passive Metrics and Methods (with Hybrid Types In-Between)\", RFC 7799, DOI 10.17487/RFC7799, May 2016, <https://www.rfc-editor.org/info/rfc7799>.",
      "ja": "[RFC7799]モートン、A.、 \"アクティブおよびパッシブ指標と方法（インとの間のハイブリッドタイプと）\"、RFC 7799、DOI 10.17487 / RFC7799、2016年5月、<https://www.rfc-editor.org/info / rfc7799>。"
    },
    {
      "indent": 3,
      "text": "[AFD] Pan, R., Breslau, L., Prabhakar, B., and S. Shenker, \"Approximate fairness through differential dropping\", ACM SIGCOMM Computer Communication Review, Volume 33, Issue 2, DOI 10.1145/956981.956985, April 2003.",
      "ja": "[AFD]パン、R.、ブレスラウ、L.、Prabhakar、B.、およびS. Shenker、 \"差動落ちておおよその公正性\"、ACM SIGCOMMコンピュータコミュニケーションレビュー、33巻、2号、DOI 10.1145 / 956981.956985、2003年4月。"
    },
    {
      "indent": 3,
      "text": "[CCscaling] Paganini, F., Doyle, J., and S. Low, \"Scalable laws for stable network congestion control\", Proceedings of IEEE Conference on Decision and Control,, DOI 10.1109/CDC.2001.980095, December 2001.",
      "ja": "【CCscaling]パガニーニ、F.、ドイル、J.、およびS.低、「安定したネットワーク輻輳制御のためのスケーラブルな法律」、決定および制御に関するIEEE会議の議事録,, DOI 10.1109 / CDC.2001.980095、2001年12月。"
    },
    {
      "indent": 3,
      "text": "[CVST] Krueger, T. and M. Braun, \"R package: Fast Cross-Validation via Sequential Testing\", version 0.1, 11 2012.",
      "ja": "【CVST]クルーガー、T.及びM.ブラウン、 \"Rパッケージ：連続的試験を介して高速クロスバリデーション\"、バージョン0.1、2012 11。"
    },
    {
      "indent": 3,
      "text": "[iPerf] Wikipedia, \"iPerf\", November 2017, <https://en.wikipedia.org/w/ index.php?title=Iperf&oldid=810583885>.",
      "ja": "[iperfの]ウィキペディア、 \"iperfの\"、2017年11月、<https://en.wikipedia.org/w/のindex.php？タイトル=のIperf＆oldid = 810583885>。"
    },
    {
      "indent": 3,
      "text": "[MBMSource] \"mbm\", July 2016, <https://github.com/m-lab/MBM>.",
      "ja": "[MBMSource] \"MBM\"、2016年7月、<https://github.com/m-lab/MBM>。"
    },
    {
      "indent": 3,
      "text": "[Montgomery90] Montgomery, D., \"Introduction to Statistical Quality Control\", 2nd Edition, ISBN 0-471-51988-X, 1990.",
      "ja": "[Montgomery90]モンゴメリー、D.、 \"統計的品質管理入門\"、第2版、ISBN 0-471-51988-X、1990。"
    },
    {
      "indent": 3,
      "text": "[mpingSource] \"mping\", July 2016, <https://github.com/m-lab/mping>.",
      "ja": "[mpingSource] \"MPING\"、2016年7月、<https://github.com/m-lab/mping>。"
    },
    {
      "indent": 3,
      "text": "[MSMO97] Mathis, M., Semke, J., Mahdavi, J., and T. Ott, \"The Macroscopic Behavior of the TCP Congestion Avoidance Algorithm\", Computer Communications Review, Volume 27, Issue 3, DOI 10.1145/263932.264023, July 1997.",
      "ja": "【MSMO97]マティス、M.、Semke、J.、Mahdavi、J.、およびT.オット、 \"TCPの輻輳回避アルゴリズムの巨視的挙動\"、コンピュータコミュニケーションレビュー、27巻、3号、DOI 10.1145 / 263932.264023、 1997年7月。"
    },
    {
      "indent": 3,
      "text": "[Pathdiag] Mathis, M., Heffner, J., O'Neil, P., and P. Siemsen, \"Pathdiag: Automated TCP Diagnosis\", Passive and Active Network Measurement, Lecture Notes in Computer Science, Volume 4979, DOI 10.1007/978-3-540-79232-1_16, 2008.",
      "ja": "[Pathdiag]マシス、M.、Heffner、J.、オニール、P.、およびP. Siemsen、 \"Pathdiag：自動化されたTCP診断\"、パッシブとアクティブネットワーク計測、コンピュータサイエンスの講義ノート、ボリューム4979、DOI 10.1007 / 978-3-540-79232-1_16、2008。"
    },
    {
      "indent": 3,
      "text": "[Policing] Flach, T., Papageorge, P., Terzis, A., Pedrosa, L., Cheng, Y., Karim, T., Katz-Bassett, E., and R. Govindan, \"An Internet-Wide Analysis of Traffic Policing\", Proceedings of ACM SIGCOMM, DOI 10.1145/2934872.2934873, August 2016.",
      "ja": "【ポリシング]フラック、T.、Papageorge、P.、Terzis、A.、ペドロサ、L.、チェン、Y.、カリム、T.、カッツ・バセット、E.、およびR.ゴヴィンダン、「インターネットワイドトラフィックポリシングの分析」、ACM SIGCOMM、DOI 10.1145 / 2934872.2934873、2016年8月の議事。"
    },
    {
      "indent": 3,
      "text": "[RACK] Cheng, Y., Cardwell, N., Dukkipati, N., and P. Jha, \"RACK: a time-based fast loss detection algorithm for TCP\", Work in Progress, draft-ietf-tcpm-rack-03, March 2018.",
      "ja": "[RACK]チェン、Y.、カードウェル、N.、Dukkipati、N.、およびP. Jhaに、 \"RACK：TCPのタイムベースの高速な損失検出アルゴリズム\" が進行中で働いて、ドラフト-IETF-tcpm  - ラックマウント型03、2018年3月。"
    },
    {
      "indent": 3,
      "text": "[Rtool] R Development Core Team, \"R: A language and environment for statistical computing\", R Foundation for Statistical Computing, Vienna, Austria, ISBN 3-900051-07-0, 2011, <http://www.R-project.org/>.",
      "ja": "[Rtool] R開発コアチーム、 \"R：統計計算のための言語と環境\"、統計的なコンピューティング、ウィーン、オーストリア、ISBN 3-900051-07-0、2011年のR財団、<のhttp：//www.R- project.org/>。"
    },
    {
      "indent": 3,
      "text": "[TSO_fq_pacing] Dumazet, E. and Y. Chen, \"TSO, fair queuing, pacing: three's a charm\", Proceedings of IETF 88, TCPM WG, November 2013, <https://www.ietf.org/proceedings/88/slides/ slides-88-tcpm-9.pdf>.",
      "ja": "[TSO_fq_pacing] Dumazet、E.およびY.陳、 \"TSO、公平キューイング、ペーシング：3の魅力\"、IETF 88、TCPM WG、2013年11月の議事録、<https://www.ietf.org/proceedings/88 /スライド/スライド-88-tcpm-9.pdf>。"
    },
    {
      "indent": 3,
      "text": "[TSO_pacing] Corbet, J., \"TSO sizing and the FQ scheduler\", August 2013, <https://lwn.net/Articles/564978/>.",
      "ja": "[TSO_pacing]コーベット、J.、 \"TSOのサイズとFQスケジューラ\"、2013年8月、<https://lwn.net/Articles/564978/>。"
    },
    {
      "indent": 3,
      "text": "[Wald45] Wald, A., \"Sequential Tests of Statistical Hypotheses\", The Annals of Mathematical Statistics, Volume 16, Number 2, pp. 117-186, June 1945, <http://www.jstor.org/stable/2235829>.",
      "ja": "【Wald45]ワルド、A.、「統計的仮説の連続試験」、数理統計学、16巻、2号、年報頁117から186まで、1945年6月、<http://www.jstor.org/stable/ 2235829>。"
    },
    {
      "indent": 3,
      "text": "[wikiBloat] Wikipedia, \"Bufferbloat\", January 2018, <https://en.wikipedia.org/w/ index.php?title=Bufferbloat&oldid=819293377>.",
      "ja": "[wikiBloat]ウィキペディア、 \"Bufferbloat\"、2018年1月、<https://en.wikipedia.org/w/のindex.php？タイトル= Bufferbloat＆oldid = 819293377>。"
    },
    {
      "indent": 3,
      "text": "[WPING] Mathis, M., \"Windowed Ping: An IP Level Performance Diagnostic\", Computer Networks and ISDN Systems, Volume 27, Issue 3, DOI 10.1016/0169-7552(94)90119-8, June 1994.",
      "ja": "[WPING]マシス、M.、 \"ウィンドウ表示のPing：IPレベルのパフォーマンス診断\"、コンピュータネットワークとISDNシステム、27巻、3号、DOI 10.1016 / 0169から7552（94）90119から8、1994年6月。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Model Derivations",
      "ja": "付録A.モデルの派生の"
    },
    {
      "indent": 3,
      "text": "The reference target_run_length described in Section 5.2 is based on very conservative assumptions: that all excess data in flight (i.e., the window size) above the target_window_size contributes to a standing queue that raises the RTT and that classic Reno congestion control with delayed ACKs is in effect. In this section we provide two alternative calculations using different assumptions.",
      "ja": "セクション5.2で説明参照target_run_lengthは非常に保守的な仮定に基づいている：target_window_size上記全飛行中の過剰なデータ（すなわち、ウィンドウサイズ）RTTを上昇させ、遅延ACKとその古典リノ輻輳制御である定在キューに寄与すること効果。このセクションでは、異なる仮定を使用して2つの代替の計算を提供しています。"
    },
    {
      "indent": 3,
      "text": "It may seem out of place to allow such latitude in a measurement method, but this section provides offsetting requirements.",
      "ja": "なお、測定方法におけるこのような自由度を可能にするために場違いに見えるかもしれないが、このセクションでは、相殺要件を提供します。"
    },
    {
      "indent": 3,
      "text": "The estimates provided by these models make the most sense if network performance is viewed logarithmically. In the operational Internet, data rates span more than eight orders of magnitude, RTT spans more than three orders of magnitude, and packet loss ratio spans at least eight orders of magnitude if not more. When viewed logarithmically (as in decibels), these correspond to 80 dB of dynamic range. On an 80 dB scale, a 3 dB error is less than 4% of the scale, even though it represents a factor of 2 in untransformed parameter.",
      "ja": "ネットワークのパフォーマンスが対数表示されている場合、これらのモデルが提供する推定値は、ほとんど意味をなさない。運用インターネットでは、データレートが大きさの個以上の注文にまたがる、RTTは、大きさ以上の3桁にまたがって、パケット損失率は、少なくとも8回の大きさのオーダーでない場合よりにまたがります。 （デシベルのように）対数見た場合、これらは、ダイナミックレンジの80デシベルに相当します。 80デシベルスケールで、3dBの誤差は、形質転換されていないパラメータに2の係数を表していても、スケールの4％未満です。"
    },
    {
      "indent": 3,
      "text": "This document gives a lot of latitude for calculating target_run_length; however, people designing a TIDS should consider the effect of their choices on the ongoing tussle about the relevance of \"TCP friendliness\" as an appropriate model for Internet capacity allocation. Choosing a target_run_length that is substantially smaller than the reference target_run_length specified in Section 5.2 strengthens the argument that it may be appropriate to abandon \"TCP friendliness\" as the Internet fairness model. This gives developers incentive and permission to develop even more aggressive applications and protocols, for example, by increasing the number of connections that they open concurrently.",
      "ja": "この文書では、target_run_lengthを計算するための緯度の多くを提供します。しかし、TIDSを設計する人は、インターネット容量割り当てのための適切なモデルとして、「TCPの親しみやすさ」の妥当性について継続的な闘争に彼らの選択の影響を考慮すべきです。 5.2節で指定された参照target_run_lengthよりも実質的に小さいtarget_run_lengthを選択すると、インターネット公正モデルとして「TCPの親しみやすさ」を放棄することが適切である引数を強化します。これにより、開発者のインセンティブ例えば、彼らは同時に開く接続の数を増やすことによって、より積極的なアプリケーションとプロトコルを開発するための権限を与えます。"
    },
    {
      "indent": 0,
      "text": "A.1. Queueless Reno",
      "ja": "A.1。 Queuelessリノ"
    },
    {
      "indent": 3,
      "text": "In Section 5.2, models were derived based on the assumption that the subpath IP rate matches the target rate plus overhead, such that the excess window needed for the AIMD sawtooth causes a fluctuating queue at the bottleneck.",
      "ja": "5.2節では、モデルがサブパスIPレートが目標レートプラスAIMD鋸歯のために必要な余分なウィンドウがボトルネックで変動するキューを引き起こすことを、オーバーヘッド、そのように一致していることを前提に基づいて導き出されました。"
    },
    {
      "indent": 3,
      "text": "An alternate situation would be a bottleneck where there is no significant queue and losses are caused by some mechanism that does not involve extra delay, for example, by the use of a virtual queue as done in Approximate Fair Dropping [AFD]. A flow controlled by such a bottleneck would have a constant RTT and a data rate that fluctuates in a sawtooth due to AIMD congestion control. Assume the losses are being controlled to make the average data rate meet some goal that is equal to or greater than the target_rate. The necessary run length to meet the target_rate can be computed as follows:",
      "ja": "別の状況は、有意なキューおよび損失は概ね公正ドロップ[AFD]で行ったように仮想キューを使用することによって、例えば、余分な遅延を必要としないいくつかのメカニズムによって引き起こされていませんが存在し、ボトルネックになります。そのようなボトルネックによって制御された流れは、一定のRTTとAIMD輻輳制御による鋸歯状に変動するデータレートを有することになります。損失は​​平均データレートがtarget_rate以上になったいくつかの目標を満たすように制御されていると仮定します。次のようにtarget_rateを満たすために必要なランレングスを計算することができます。"
    },
    {
      "indent": 3,
      "text": "For some value of Wmin, the window will sweep from Wmin packets to 2*Wmin packets in 2*Wmin RTT (due to delayed ACK). Unlike the queuing case where Wmin = target_window_size, we want the average of Wmin and 2*Wmin to be the target_window_size, so the average data rate is the target rate. Thus, we want Wmin = (2/3)*target_window_size.",
      "ja": "Wminとのいくつかの値に対して、ウィンドウが（による遅延ACKに）2 * WminとRTT 2つの* WminのパケットにWminのパケットから掃引します。 Wminを= target_window_sizeキューイングの場合とは異なり、我々はwminから2 * Wminとの平均はtarget_window_sizeになりたいので、平均データレートが目標レートです。したがって、我々はWminと=（2/3）* target_window_sizeをしたいです。"
    },
    {
      "indent": 3,
      "text": "Between losses, each sawtooth delivers (1/2)(Wmin+2*Wmin)(2Wmin) packets in 2*Wmin RTTs.",
      "ja": "損失の間、各鋸歯は、2つの* WminとのRTTに（1/2）（Wminと+ 2 *値Wmin）（2Wmin）パケットを配信します。"
    },
    {
      "indent": 3,
      "text": "Substituting these together, we get:",
      "ja": "一緒にこれらを代入すると、我々が得ます："
    },
    {
      "indent": 3,
      "text": "target_run_length = (4/3)(target_window_size^2)",
      "ja": "target_run_length =（4/3）（target_window_size ^ 2）"
    },
    {
      "indent": 3,
      "text": "Note that this is 44% of the reference_run_length computed earlier. This makes sense because under the assumptions in Section 5.2, the AMID sawtooth caused a queue at the bottleneck, which raised the effective RTT by 50%.",
      "ja": "これは、以前に計算reference_run_lengthの44％であることに留意されたいです。 5.2節で仮定の下で、AMIDノコギリが50％で効果的なRTTを上げたボトルネック、でキューを引き起こしたので、これは理にかなっています。"
    },
    {
      "indent": 0,
      "text": "Appendix B. The Effects of ACK Scheduling",
      "ja": "ACKスケジューリングの付録B.ザ・効果"
    },
    {
      "indent": 3,
      "text": "For many network technologies, simple queuing models don't apply: the network schedules, thins, or otherwise alters the timing of ACKs and data, generally to raise the efficiency of the channel allocation algorithms when confronted with relatively widely spaced small ACKs. These efficiency strategies are ubiquitous for half-duplex, wireless, and broadcast media.",
      "ja": "比較的広い間隔小さいのACKに直面したとき、一般的にチャネル割り当てアルゴリズムの効率を上げるために、ネットワークスケジュールを薄く、または他の方法でACK及びデータのタイミングを変更する：多くのネットワーク技術のために、単純な待ち行列モデルが適用されません。これらの効率戦略は半二重、ワイヤレス、放送メディアのために遍在しています。"
    },
    {
      "indent": 3,
      "text": "Altering the ACK stream by holding or thinning ACKs typically has two consequences: it raises the implied bottleneck IP capacity, making the fine-grained slowstart bursts either faster or larger, and it raises the effective RTT by the average time that the ACKs and data are delayed. The first effect can be partially mitigated by re-clocking ACKs once they are beyond the bottleneck on the return path to the sender; however, this further raises the effective RTT.",
      "ja": "ACKを保持するか、薄くすることによりACKストリームを変更すると、一般的に2つの結果を持っている：それはどちらか速いか、より大きなきめ細かいスロースタートバーストを作り、暗黙のボトルネックIP能力を上昇させ、それがACKおよびデータがあること平均時間で効果的なRTTを上げます遅延。彼らは、送信者へのリターンパス上のボトルネックを超えて一度第1の効果は、部分的に再クロッキングのACKによって軽減することができます。しかし、これは、さらに効果的なRTTを発生させます。"
    },
    {
      "indent": 3,
      "text": "The most extreme example of this sort of behavior would be a half-duplex channel that is not released as long as the endpoint currently holding the channel has more traffic (data or ACKs) to send. Such environments cause self-clocked protocols under full load to revert to extremely inefficient stop-and-wait behavior. The channel constrains the protocol to send an entire window of data as a single contiguous burst on the forward path, followed by the entire window of ACKs on the return path. (A channel with this behavior would fail the Duplex Self-Interference Test described in Section 8.2.4).",
      "ja": "行動のこの種の最も極端な例では、エンドポイントは、現在のチャンネルを送信するために、より多くのトラフィック（データまたはACKを）持って保持する限り、解除されていない半二重チャンネルだろう。このような環境は非常に非効率的なストップアンドウェイト動作に戻すために全負荷の下でセルフクロックのプロトコルを引き起こします。チャネルは、戻り経路上のACKのウィンドウ全体続くフォワード経路上の単一の連続バーストとしてデータのウィンドウ全体を送信するためのプロトコルを制約します。 （この現象を有するチャネルは、セクション8.2.4に記載の二重自己干渉テストを失敗します）。"
    },
    {
      "indent": 3,
      "text": "If a particular return path contains a subpath or device that alters the timing of the ACK stream, then the entire front path from the sender up to the bottleneck must be tested at the burst parameters implied by the ACK scheduling algorithm. The most important parameter is the implied bottleneck IP capacity, which is the average rate at which the ACKs advance snd.una. Note that thinning the ACK stream (relying on the cumulative nature of seg.ack to permit discarding some ACKs) causes most TCP implementations to send interface rate bursts to offset the longer times between ACKs in order to maintain the average data rate.",
      "ja": "特定のリターンパスがACKストリームのタイミングを変更するサブパスまたはデバイスが含まれている場合、ボトルネックまでの送信者から全体正面経路はACKスケジューリングアルゴリズムによって暗示バーストパラメータで試験されなければなりません。最も重要なパラメータは、平均レートでACKを送りSND.UNAある暗黙のボトルネックIP能力、です。 （いくつかのACKを廃棄可能にするために、SEG.ACKの累積的な性質に依存する）ACKストリームを薄くすると、平均データレートを維持するために、ACKの間の長い時間を相殺するためのインタフェース・レート・バーストを送信するために、ほとんどのTCPの実装を引き起こすことに注意してください。"
    },
    {
      "indent": 3,
      "text": "Note that due to ubiquitous self-clocking in Internet protocols, ill-conceived channel allocation mechanisms are likely to increases the queuing stress on the front path because they cause larger full sender rate data bursts.",
      "ja": "ユビキタス自己クロックのインターネットプロトコルでのことに注意してください、彼らは大きなフル差出人率データバーストを起こすので、病気練らチャネル割り当てメカニズムは、フロントのパスにキューイングストレスが増大する可能性があります。"
    },
    {
      "indent": 3,
      "text": "Holding data or ACKs for channel allocation or other reasons (such as forward error correction) always raises the effective RTT relative to the minimum delay for the path. Therefore, it may be necessary to replace target_RTT in the calculation in Section 5.2 by an effective_RTT, which includes the target_RTT plus a term to account for the extra delays introduced by these mechanisms.",
      "ja": "チャネル割り当てまたは（例えば、順方向誤り訂正のような）他の理由のためにデータまたはACKを保持常にパスの最小遅延に有効なRTTを相対的に上昇させます。したがって、target_RTTプラスこれらのメカニズムにより導入された余分な遅延を考慮する用語が含まれてeffective_RTT、によって5.2節で計算でtarget_RTTを交換する必要があるかもしれません。"
    },
    {
      "indent": 0,
      "text": "Acknowledgments",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Ganga Maguluri suggested the statistical test for measuring loss probability in the target run length. Alex Gilgur and Merry Mou helped with the statistics.",
      "ja": "ガンガーMaguluriは、ターゲットランレングスの損失確率を測定するための統計的検定を示唆しました。アレックスGilgurとメリー覚書は、統計を手伝ってくれました。"
    },
    {
      "indent": 3,
      "text": "Meredith Whittaker improved the clarity of the communications.",
      "ja": "メレディスウィテカーは、通信の明瞭さを向上させます。"
    },
    {
      "indent": 3,
      "text": "Ruediger Geib provided feedback that greatly improved the document.",
      "ja": "Ruediger Geibが大幅に文書を改善フィードバックを提供しました。"
    },
    {
      "indent": 3,
      "text": "This work was inspired by Measurement Lab: open tools running on an open platform, using open tools to collect open data. See <http://www.measurementlab.net/>.",
      "ja": "この作品は、測定ラボに触発されました：オープンツールをオープンプラットフォーム上で実行されている、オープンなデータを収集するために開いているツールを使用して。 <http://www.measurementlab.net/>を参照してください。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Matt Mathis Google, Inc 1600 Amphitheatre Parkway Mountain View, CA 94043 United States of America",
      "ja": "マット・マシスグーグル株式会社1600アンフィシアターパークウェイマウンテンビュー、カリフォルニア州アメリカの94043米国"
    },
    {
      "indent": 3,
      "text": "Email: mattmathis@google.com",
      "ja": "メール：mattmathis@google.com"
    },
    {
      "indent": 3,
      "text": "Al Morton AT&T Labs 200 Laurel Avenue South Middletown, NJ 07748 United States of America",
      "ja": "アルモートンAT＆T Labsの200ローレルアベニュー南ミドルタウン、NJアメリカの07748米国"
    },
    {
      "indent": 3,
      "text": "Phone: +1 732 420 1571 Email: acmorton@att.com",
      "ja": "電話：+1 732 420 1571 Eメール：acmorton@att.com"
    }
  ]
}