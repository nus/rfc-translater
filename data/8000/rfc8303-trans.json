{
  "title": {
    "text": "RFC 8303 - On the Usage of Transport Features Provided by IETF Transport Protocols",
    "ja": "RFC 8303 - 交通の利用にはIETFトランスポートプロトコルによって提供される機能"
  },
  "number": 8303,
  "created_at": "2019-10-29 22:16:20.819343+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                          M. Welzl\nRequest for Comments: 8303                            University of Oslo\nCategory: Informational                                        M. Tuexen\nISSN: 2070-1721                         Muenster Univ. of Appl. Sciences\n                                                              N. Khademi\n                                                      University of Oslo\n                                                           February 2018",
      "raw": true
    },
    {
      "indent": 18,
      "text": " On the Usage of Transport Features\nProvided by IETF Transport Protocols",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document describes how the transport protocols Transmission Control Protocol (TCP), MultiPath TCP (MPTCP), Stream Control Transmission Protocol (SCTP), User Datagram Protocol (UDP), and Lightweight User Datagram Protocol (UDP-Lite) expose services to applications and how an application can configure and use the features that make up these services. It also discusses the service provided by the Low Extra Delay Background Transport (LEDBAT) congestion control mechanism. The description results in a set of transport abstractions that can be exported in a transport services (TAPS) API.",
      "ja": "この文書では、トランスポートプロトコル伝送制御プロトコル（TCP）、マルチパスTCP（MPTCP）、ストリーム制御伝送プロトコル（SCTP）、ユーザーデータグラムプロトコル（UDP）、および軽量ユーザーデータグラムプロトコル（UDP-Liteは）アプリケーションにサービスを公開し、方法を説明しますどのようにアプリケーションは、これらのサービスを構成する機能を設定して使用することができます。また、低余分な遅延の背景トランスポート（LEDBAT）輻輳制御機構が提供するサービスについて説明します。輸送サービス（TAPS）APIでエクスポートすることができ、トランスポート抽象化のセットで記述した結果。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for informational purposes.",
      "ja": "このドキュメントはインターネット標準化過程仕様ではありません。それは、情報提供の目的のために公開されています。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Not all documents approved by the IESG are a candidate for any level of Internet Standard; see Section 2 of RFC 7841.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。 IESGによって承認されていないすべての文書がインターネットStandardのどんなレベルの候補です。 RFC 7841のセクション2を参照してください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc8303.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttps://www.rfc-editor.org/info/rfc8303で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2018 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2018 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（https://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................3\n2. Terminology .....................................................5\n3. Pass 1 ..........................................................6\n   3.1. Primitives Provided by TCP .................................6\n        3.1.1. Excluded Primitives or Parameters ...................9\n   3.2. Primitives Provided by MPTCP ..............................10\n   3.3. Primitives Provided by SCTP ...............................11\n        3.3.1. Excluded Primitives or Parameters ..................18\n   3.4. Primitives Provided by UDP and UDP-Lite ...................18\n   3.5. The Service of LEDBAT .....................................19\n4. Pass 2 .........................................................20\n   4.1. CONNECTION-Related Primitives .............................21\n   4.2. DATA-Transfer-Related Primitives ..........................38\n5. Pass 3 .........................................................41\n   5.1. CONNECTION-Related Transport Features .....................41\n   5.2. DATA-Transfer-Related Transport Features ..................47\n        5.2.1. Sending Data .......................................47\n        5.2.2. Receiving Data .....................................48\n        5.2.3. Errors .............................................49\n6. IANA Considerations ............................................49\n7. Security Considerations ........................................49\n8. References .....................................................50\n   8.1. Normative References ......................................50\n   8.2. Informative References ....................................52\nAppendix A. Overview of RFCs Used as Input for Pass 1 .............54\nAppendix B. How This Document Was Developed .......................54\nAcknowledgements ..................................................56\nAuthors' Addresses ................................................56",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "This specification describes how transport protocols offer transport services, such that applications using them are no longer directly tied to a specific protocol. Breaking this strict connection can reduce the effort for an application programmer, yet attain greater transport flexibility by pushing complexity into an underlying transport services (TAPS) system.",
      "ja": "この仕様は、トランスポートプロトコルは、それらを使用するアプリケーションは、もはや直接、特定のプロトコルに関連付けられているような輸送サービスを提供する方法を説明します。この厳格な接続を切断することは、アプリケーション・プログラマーのための労力を減らす、まだ基本的な輸送サービス（TAPS）システムに複雑さを押し込んで大きな輸送の柔軟性を得ることができます。"
    },
    {
      "indent": 3,
      "text": "This design process has started with a survey of the services provided by IETF transport protocols and congestion control mechanisms [RFC8095]. The present document and [RFC8304] complement this survey with an in-depth look at the defined interactions between applications and the following unicast transport protocols: Transmission Control Protocol (TCP), MultiPath TCP (MPTCP), Stream Control Transmission Protocol (SCTP), User Datagram Protocol (UDP), and Lightweight User Datagram Protocol (UDP-Lite). We also define a primitive to enable/disable and configure the Low Extra Delay Background Transport (LEDBAT) unicast congestion control mechanism. For UDP and UDP-Lite, the first step of the protocol analysis -- a discussion of relevant RFC text -- is documented in [RFC8304].",
      "ja": "この設計プロセスは、IETFトランスポートプロトコルと輻輳制御メカニズム[RFC8095]が提供するサービスの調査を開始しました。本文書と[RFC8304]アプリケーション及び以下ユニキャストトランスポートプロトコルとの間の定義された相互作用に深い表情でこの調査を補完：伝送制御プロトコル（TCP）、マルチパスTCP（MPTCP）、ストリーム制御伝送プロトコル（SCTP）ユーザーデータグラムプロトコル（UDP）、および軽量ユーザーデータグラムプロトコル（UDP-Liteの）。我々はまた、有効/無効および低余分な遅延の背景トランスポート（LEDBAT）ユニキャストの輻輳制御機構を構成するプリミティブを定義します。 UDPとUDP-Liteの、プロトコル解析の最初のステップ - 関連RFCテキストの議論は -  [RFC8304]に記載されています。"
    },
    {
      "indent": 3,
      "text": "This snapshot in time of the IETF transport protocols is published as an RFC to document the analysis by the authors and the TAPS Working Group; this generates a set of transport abstractions that can be exported in a TAPS API. It provides the basis for the minimal set of transport services that end systems supporting TAPS should implement [TAPS-MINSET].",
      "ja": "IETFトランスポートプロトコルの時間でこのスナップショットは、著者とTAPSワーキンググループによる分析を文書化するRFCとして公開されています。これは、TAPSのAPIにエクスポートすることができ、トランスポート抽象化のセットを生成します。これは、[TAPS-MINSET]を実装する必要がありTAPSをサポートするシステムを終了輸送サービスの最小セットのための基礎を提供します。"
    },
    {
      "indent": 3,
      "text": "The list of primitives, events, and transport features in this document is strictly based on the parts of protocol specifications that describe what the protocol provides to an application using it and how the application interacts with it. Transport protocols provide communication between processes that operate on network endpoints, which means that they allow for multiplexing of communication between the same IP addresses, and this multiplexing is achieved using port numbers. Port multiplexing is therefore assumed to be always provided and not discussed in this document.",
      "ja": "この文書に記載されているプリミティブ、イベント、およびトランスポート機能のリストは、厳密プロトコルは、それを使用してアプリケーションに提供するものと、アプリケーションがそれと対話する方法について説明したプロトコル仕様の部分に基づいています。トランスポートプロトコルは、同じIPアドレスとの間の通信の多重化を可能にすることを意味するネットワークエンドポイント、上で動作するプロセス間の通信を提供し、この多重化は、ポート番号を使用して達成されます。ポートの多重化は、したがって、常に提供し、この文書で説明されていないことが想定されます。"
    },
    {
      "indent": 3,
      "text": "Parts of a protocol that are explicitly stated as optional to implement are not covered. Interactions between the application and a transport protocol that are not directly related to the operation of the protocol are also not covered. For example, there are various ways for an application to use socket options to indicate its interest in receiving certain notifications [RFC6458]. However, for the purpose of identifying primitives, events, and transport features, the ability to enable or disable the reception of notifications is irrelevant. Similarly, \"one-to-many style sockets\"",
      "ja": "明示的に実装するために、オプションとして記載されているプロトコルの一部がカバーされていません。プロトコルの動作に直接関連しないアプリケーションおよびトランスポートプロトコルとの間の相互作用も覆われていません。例えば、特定の通知[RFC6458]を受信に関心を示すように、ソケットオプションを使用するアプリケーションのための様々な方法があります。しかし、プリミティブ、イベント、およびトランスポート機能を識別するために、通知の受信を有効または無効にする能力は無関係です。同様に、「1対多スタイルソケット」"
    },
    {
      "indent": 3,
      "text": "[RFC6458] just affect the application programming style, not how the underlying protocol operates, and they are therefore not discussed here. The same is true for the ability to obtain the unchanged value of a parameter that an application has previously set (e.g., via \"get\" in get/set operations [RFC6458]).",
      "ja": "[RFC6458]はちょうど基本的なプロトコルが動作していないか、アプリケーション・プログラミング・スタイルに影響を与え、彼らはので、ここで議論されていません。同じアプリケーションが以前に（GET / SET操作[RFC6458]に「GET」を介して、例えば）を設定しているパラメータの不変の値を取得する能力についても同様です。"
    },
    {
      "indent": 3,
      "text": "The document presents a three-pass process to arrive at a list of transport features. In the first pass (pass 1), the relevant RFC text is discussed per protocol. In the second pass (pass 2), this discussion is used to derive a list of primitives and events that are uniformly categorized across protocols. Here, an attempt is made to present or -- where text describing primitives or events does not yet exist -- construct primitives or events in a slightly generalized form to highlight similarities. This is, for example, achieved by renaming primitives or events of protocols or by avoiding a strict 1:1 mapping between the primitives or events in the protocol specification and primitives or events in the list. Finally, the third pass (pass 3) presents transport features based on pass 2, identifying which protocols implement them.",
      "ja": "文書は、トランスポート機能のリストに到着するために、3つのパスプロセスを提示しています。最初のパス（パス1）において、関連するRFCテキストは、プロトコルごとに議論されています。第二のパス（パス2）において、この議論は、均一なプロトコルを横切って分類されるプリミティブおよびイベントのリストを導出するために使用されます。ここで、試みが提示させる、または - テキスト記述プリミティブまたはイベントがまだ存在しない場合 - 類似性を強調するためにわずかに一般形でプリミティブまたはイベントを構築します。リスト内のプリミティブまたはイベントプロトコル仕様およびプリミティブまたはイベントの間に1マッピング：これは、たとえば、プリミティブまたはプロトコルのイベントの名前を変更するか厳密1を回避することによって達成されます。最後に、第3パス（パス3）はそれらを実装するプロトコルを識別し、パス2に基づいて、トランスポート機能を提供します。"
    },
    {
      "indent": 3,
      "text": "In the list resulting from the second pass, some transport features are missing because they are implicit in some protocols, and they only become explicit when we consider the superset of all transport features offered by all protocols. For example, TCP always carries out congestion control; we have to consider it together with a protocol like UDP (which does not have congestion control) before we can consider congestion control as a transport feature. The complete list of transport features across all protocols is therefore only available after pass 3.",
      "ja": "第二のパスから結果のリストでは、彼らはいくつかのプロトコルでは、暗黙的であるため、いくつかのトランスポート機能が欠けている、と私たちはすべてのプロトコルが提供するすべてのトランスポート機能のスーパーセットを考えるときには、明示的になります。たとえば、TCPは常に輻輳制御を行います。我々は、トランスポート機能として輻輳制御を考慮することができる前に、（輻輳制御を持っていない）UDPなどのプロトコルと一緒にそれを考慮しなければなりません。すべてのプロトコル間のトランスポート機能の完全なリストは、したがって、パス3の後にのみ使用可能です。"
    },
    {
      "indent": 3,
      "text": "Some protocols are connection oriented. Connection-oriented protocols often use an initial call to a specific primitive to open a connection before communication can progress and require communication to be explicitly terminated by issuing another call to a primitive (usually called 'Close'). A \"connection\" is the common state that some transport primitives refer to, e.g., to adjust general configuration settings. Connection establishment, maintenance, and termination are therefore used to categorize transport primitives of connection-oriented transport protocols in pass 2 and pass 3. For this purpose, UDP is assumed to be used with \"connected\" sockets, i.e., sockets that are bound to a specific pair of addresses and ports [RFC8304].",
      "ja": "一部のプロトコルは、接続指向です。通信は明示的に（通常は「閉じる」と呼ばれる）プリミティブに別のコールを発行することによって終了することが進行し、通信を必要とすることができます前に、コネクション指向のプロトコルは、多くの場合、接続を開くために、特定のプリミティブに最初の呼び出しを使用します。 「接続」は、いくつかのトランスポート・プリミティブは、例えば、一般的な構成設定を調整するために参照することが一般的状態です。接続の確立、維持、および終了は、従って、パス2に接続指向のトランスポートプロトコルのトランスポート・プリミティブを分類し、この目的のために、3を渡すために使用され、UDPは、すなわち、「接続」ソケットにバインドされたソケットで使用することを想定していますアドレスおよびポートの特定のペア[RFC8304]。"
    },
    {
      "indent": 0,
      "text": "2. Terminology",
      "section_title": true,
      "ja": "2.用語"
    },
    {
      "indent": 3,
      "text": "Transport Feature: a specific end-to-end feature that the transport layer provides to an application. Examples include confidentiality, reliable delivery, ordered delivery, message-versus-stream orientation, etc.",
      "ja": "トランスポート機能：トランスポート層は、アプリケーションに提供し、特定のエンドツーエンド機能。例としては、などの機密性、信頼性の高い配信、配信を命じ、メッセージ対流れの向きを含み、"
    },
    {
      "indent": 3,
      "text": "Transport Service: a set of transport features, without an association to any given framing protocol, which provides a complete service to an application.",
      "ja": "輸送サービス：輸送機能のセット、アプリケーションへの完全なサービスを提供し、任意のフレーミングプロトコルに関連なし。"
    },
    {
      "indent": 3,
      "text": "Transport Protocol: an implementation that provides one or more transport services using a specific framing and header format on the wire.",
      "ja": "トランスポートプロトコル：ワイヤ上の特定のフレーミングおよびヘッダ・フォーマットを使用して1つまたは複数のトランスポート・サービスを提供して実装。"
    },
    {
      "indent": 3,
      "text": "Transport Protocol Component: an implementation of a transport feature within a protocol.",
      "ja": "トランスポートプロトコルコンポーネント：プロトコル内の輸送機能の実装。"
    },
    {
      "indent": 3,
      "text": "Transport Service Instance: an arrangement of transport protocols with a selected set of features and configuration parameters that implement a single transport service, e.g., a protocol stack (RTP over UDP).",
      "ja": "輸送サービスインスタンス：機能と単一のトランスポートサービス、例えば、プロトコルスタック（UDP上のRTP）を実装する構成パラメータの選択されたセットを有するトランスポートプロトコルの配置。"
    },
    {
      "indent": 3,
      "text": "Application: an entity that uses the transport layer for end-to-end delivery of data across the network (this may also be an upper-layer protocol or tunnel encapsulation).",
      "ja": "アプリケーション：ネットワークを介してデータのエンド・ツー・エンド配信のためのトランスポート層を使用するエンティティ（これはまた、上位層プロトコルまたはトンネルカプセル化することができます）。"
    },
    {
      "indent": 3,
      "text": "Endpoint: an entity that communicates with one or more other endpoints using a transport protocol.",
      "ja": "エンドポイント：トランスポート・プロトコルを使用して1つ以上の他のエンドポイントと通信エンティティ。"
    },
    {
      "indent": 3,
      "text": "Connection: shared state of two or more endpoints that persists across messages that are transmitted between these endpoints.",
      "ja": "接続：これらのエンドポイントの間で送信されるメッセージを横切っ持続二つ以上のエンドポイントの共有状態。"
    },
    {
      "indent": 3,
      "text": "Primitive: a function call that is used to locally communicate between an application and a transport endpoint. A primitive is related to one or more transport features.",
      "ja": "プリミティブ：局所的に使用される関数呼び出しは、アプリケーションおよびトランスポートエンドポイントとの間で通信を行います。プリミティブは、一の以上のトランスポート機能に関連しています。"
    },
    {
      "indent": 3,
      "text": "Event: a primitive that is invoked by a transport endpoint.",
      "ja": "イベント：トランスポートエンドポイントによって呼び出されるそのプリミティブ。"
    },
    {
      "indent": 3,
      "text": "Parameter: a value passed between an application and a transport protocol by a primitive.",
      "ja": "パラメータ：プリミティブによってアプリケーションおよびトランスポートプロトコルとの間で渡された値。"
    },
    {
      "indent": 3,
      "text": "Socket: the combination of a destination IP address and a destination port number.",
      "ja": "ソケット：宛先IPアドレスの組み合わせと宛先ポート番号。"
    },
    {
      "indent": 3,
      "text": "Transport Address: the combination of an IP address, transport protocol, and the port number used by the transport protocol.",
      "ja": "トランスポートアドレス：IPアドレスの組み合わせ、トランスポートプロトコル、およびトランスポートプロトコルが使用するポート番号。"
    },
    {
      "indent": 0,
      "text": "3. Pass 1",
      "section_title": true,
      "ja": "3.パス1"
    },
    {
      "indent": 3,
      "text": "This first iteration summarizes the relevant text parts of the RFCs describing the protocols, focusing on what each transport protocol provides to the application and how it is used (abstract API descriptions, where they are available). When presenting primitives, events, and parameters, the use of lower- and upper-case characters is made uniform for the sake of readability.",
      "ja": "この最初の反復は、各トランスポートプロトコルは、アプリケーションに提供し、それは（それが利用可能な抽象APIの説明を、）どのように使われるか何に焦点を当て、プロトコルを記述するRFCの関連するテキスト部分をまとめたもの。プリミティブ、イベント、およびパラメータを提示すると、小文字と大文字の文字の使用は、読みやすさのために均一化されます。"
    },
    {
      "indent": 0,
      "text": "3.1. Primitives Provided by TCP",
      "section_title": true,
      "ja": "3.1.  TCPが提供するプリミティブ"
    },
    {
      "indent": 3,
      "text": "The initial TCP specification [RFC0793] states:",
      "ja": "初期TCP仕様[RFC0793]は述べています："
    },
    {
      "indent": 6,
      "text": "The Transmission Control Protocol (TCP) is intended for use as a highly reliable host-to-host protocol between hosts in packet-switched computer communication networks, and in interconnected systems of such networks.",
      "ja": "伝送制御プロトコル（TCP）は、パケット交換コンピュータ通信ネットワークにおいて、そのようなネットワークの相互接続システムのホストとの間の信頼性の高いホスト間プロトコルとして使用するために意図されています。"
    },
    {
      "indent": 3,
      "text": "Section 3.8 of [RFC0793] further specifies the interaction with the application by listing several transport primitives. It is also assumed that an Operating System provides a means for TCP to asynchronously signal the application; the primitives representing such signals are called 'events' in this section. This section describes the relevant primitives.",
      "ja": "[RFC0793]の3.8節には、さらにいくつかのトランスポート・プリミティブをリストアップすることにより、アプリケーションとの相互作用を指定します。また、オペレーティングシステムが非同期にアプリケーションを通知するためにTCPのための手段を提供することが想定されます。このような信号を表すプリミティブは、このセクションの「イベント」と呼ばれています。このセクションでは、関連するプリミティブについて説明しています。"
    },
    {
      "indent": 3,
      "text": "Open: This is either active or passive, to initiate a connection or listen for incoming connections. All other primitives are associated with a specific connection, which is assumed to first have been opened. An active open call contains a socket. A passive open call with a socket waits for a particular connection; alternatively, a passive open call can leave the socket unspecified to accept any incoming connection. A fully specified passive call can later be made active by calling 'Send'. Optionally, a timeout can be specified, after which TCP will abort the connection if data has not been successfully delivered to the destination (else a default timeout value is used). A procedure for aborting the connection is used to avoid excessive retransmissions, and an application is able to control the threshold used to determine the condition for aborting; this threshold may be measured in time units or as a count of retransmission [RFC1122]. This indicates that the timeout could also be specified as a count of retransmission.",
      "ja": "開く：これは、接続を開始したり、着信接続をリッスンするために、アクティブまたはパッシブのいずれかです。他の全てのプリミティブが最初に開かれたと想定される特定の接続に関連しています。アクティブオープンコールは、ソケットが含まれています。ソケットとパッシブオープンコールは、特定の接続を待ちます。あるいは、パッシブオープンコールが着信接続を受け入れるように指定されていないソケットを残すことができます。完全に指定された受動的な呼び出しは、後に「送信」を呼び出すことによってアクティブにすることができます。必要に応じて、タイムアウトは（他のデフォルトのタイムアウト値が使用されている）データが正常に送信先に配信されていない場合、TCPは接続を中止するまでの、指定することができます。接続を中止するための手順は、過剰な再送信を回避するために使用され、アプリケーションが中止条件を決定するために用いられる閾値を制御することができるされています。このしきい値は、時間単位で、または再送[RFC1122]のカウントとして測定することができます。これは、タイムアウトはまた、再送回数として指定することができることを示しています。"
    },
    {
      "indent": 6,
      "text": "Also optional, for multihomed hosts, the local IP address can be provided [RFC1122]. If it is not provided, a default choice will be made in case of active open calls. A passive open call will await incoming connection requests to all local addresses and then maintain usage of the local IP address where the incoming connection request has arrived. Finally, the 'options' parameter allows the application to specify IP options such as Source Route, Record Route, or Timestamp [RFC1122]. It is not stated on which segments of a connection these options should be applied, but probably on all segments, as this is also stated in a specification given for the usage of the Source Route IP option (Section 4.2.3.8 of [RFC1122]). Source Route is the only non-optional IP option in this parameter, allowing an application to specify a source route when it actively opens a TCP connection.",
      "ja": "また、マルチホームホストに対して、ローカルIPアドレスは、[RFC1122]をオプションを提供することができます。それは提供されない場合、デフォルトの選択は、アクティブオープン呼び出しの場合について説明します。パッシブオープンコールは、すべてのローカルアドレスへの着信接続要求を待ち、その後、着信接続要求が到着したローカルIPアドレスの使用を維持します。最後に、「オプション」のパラメータは、アプリケーションが、そのようなソースルート、経路記録、またはTimestamp [RFC1122]などのIPオプションを指定することができます。これはまた、ソースルートIPオプション（[RFC1122]のセクション4.2.3.8）の使用のために与えられた仕様書に記載されているとして、それは、これらのオプションは適用されるべき接続のどのセグメントに記載された、おそらくすべてのセグメントにされていません。ソースルートは、それは積極的にTCP接続を開いたときにアプリケーションがソースルートを指定することができ、このパラメータで唯一の非オプションのIPオプションです。"
    },
    {
      "indent": 6,
      "text": "Master Key Tuples (MKTs) for authentication can optionally be configured when calling 'Open' (Section 7.1 of [RFC5925]). When authentication is in use, complete TCP segments are authenticated, including the TCP IPv4 pseudoheader, TCP header, and TCP data.",
      "ja": "「開く」（[RFC5925]のセクション7.1）を呼び出すときに、認証のためのマスターキータプル（MKTs）は、必要に応じて設定することができます。認証が使用されている場合、完全なTCPセグメントは、TCPのIPv4擬似ヘッダ、TCPヘッダ、およびTCPデータを含む、認証されています。"
    },
    {
      "indent": 6,
      "text": "TCP Fast Open (TFO) [RFC7413] allows applications to immediately hand over a message from the active open to the passive open side of a TCP connection together with the first message establishment packet (the SYN). This can be useful for applications that are sensitive to TCP's connection setup delay. [RFC7413] states that \"TCP implementations MUST NOT use TFO by default, but only use TFO if requested explicitly by the application on a per-service-port basis.\" The size of the message sent with TFO cannot be more than TCP's maximum segment size (minus options used in the SYN). For the active open side, it is recommended to change or replace the connect() call in order to support a user data buffer argument [RFC7413]. For the passive open side, the application needs to enable the reception of Fast Open requests, e.g., via a new TCP_FASTOPEN setsockopt() socket option before listen(). The receiving application must be prepared to accept duplicates of the TFO message, as the first data written to a socket can be delivered more than once to the application on the remote host.",
      "ja": "TCP高速オープン（TFO）[RFC7413]は、アプリケーションが直ちに最初のメッセージ確立パケット（SYN）と一緒にTCPコネクションの受動開放側へのアクティブオープンからメッセージを引き渡すことを可能にします。これは、TCPのコネクション設定遅延に敏感なアプリケーションに役立ちます。 [RFC7413]は、「TCPの実装は、デフォルトではTFOを使用していますが、サービスごとのポート単位でアプリケーションによって明示的に要求された場合のみ、TFOを使用してはならない。」と述べていますTFOで送信されたメッセージのサイズは、TCPの最大セグメントサイズ（SYNで使用マイナスオプション）を超えることができません。能動開放側のためには、ユーザデータバッファ引数[RFC7413]をサポートするために、Connect（）の呼び出しを変更または交換することが推奨されます。パッシブオープン側では、アプリケーションが前に聞いて新しいTCP_FASTOPENのにsetsockopt（）ソケットオプションを使って、例えば高速オープン要求の受信を有効にする必要があります（）。ソケットに書き込まれた最初のデータは、リモート・ホスト上のアプリケーションに複数回配信することができるように受信側アプリケーションは、TFOメッセージの重複を受け入れるように準備されなければなりません。"
    },
    {
      "indent": 3,
      "text": "Send: This is the primitive that an application uses to give the local TCP transport endpoint a number of bytes that TCP should reliably send to the other side of the connection. The 'urgent' flag, if set, states that the data handed over by this send call is urgent and this urgency should be indicated to the receiving process in case the receiving application has not yet consumed all non-urgent data preceding it. An optional timeout parameter can be provided that updates the connection's timeout (see 'Open'). Additionally, optional parameters allow the ability to indicate the preferred outgoing MKT (current_key) and/or the preferred incoming MKT (rnext_key) of a connection (Section 7.1 of [RFC5925]).",
      "ja": "送信：これは、アプリケーションがTCPが確実に接続のもう一方の側に送信すべきバイト数をエンドポイントのローカルTCPトランスポートを与えるために使用するプリミティブです。 「緊急」フラグが設定されている場合、この送信呼び出しによって引き渡されたデータが緊急であり、この緊急性を受信側アプリケーションがまだそれに先行するすべての非緊急データを消費していない場合には受信処理に指示されるべきであると述べています。オプションのタイムアウトパラメータは、（「開く」を参照）接続のタイムアウトを更新し提供することができます。さらに、オプションのパラメータは、接続（[RFC5925]のセクション7.1）の好ましい送信MKT（current_key）を示す能力及び/又は好ましい着信MKT（rnext_key）を可能にします。"
    },
    {
      "indent": 3,
      "text": "Receive: This primitive allocates a receiving buffer for a provided number of bytes. It returns the number of received bytes provided in the buffer when these bytes have been received and written into the buffer by TCP. The application is informed of urgent data via an 'urgent' flag: if it is on, there is urgent data; if it is off, there is no urgent data or this call to 'Receive' has returned all the urgent data. The application is also informed about the current_key and rnext_key information carried in a recently received segment via an optional parameter (Section 7.1 of [RFC5925]).",
      "ja": "受信：このプリミティブは、バイトの提供数の受信バッファを割り当てます。これらのバイトはTCPによってバッファに受信され、書き込まれたバッファに受信したバイト数を返します。アプリケーションは、「緊急」フラグを経由して緊急データが通知されています。それがオンになっている場合、緊急データがあります。それがオフになっている場合は、全ての緊急データを返したいかなる緊急データや「受信」へのこの呼び出しはありません。アプリケーションはまた、オプションのパラメータ（[RFC5925]のセクション7.1）を介して、最近受信したセグメントで運ばcurrent_keyとrnext_key情報について通知されます。"
    },
    {
      "indent": 3,
      "text": "Close: This primitive closes one side of a connection. It is semantically equivalent to \"I have no more data to send\" but does not mean \"I will not receive any more\", as the other side may still have data to send. This call reliably delivers any data that has already been given to TCP (and if that fails, 'Close' becomes 'abort').",
      "ja": "閉じる：このプリミティブでは、接続の片側を閉じます。それは、「私は送るべき多くのデータを持っている」と同じ意味ですが、「私はこれ以上を受信しません」という意味ではありません、他の側面として、まだ送信するデータを有することができます。この呼び出しは確実すでにTCPに与えられた（そしてそれが失敗した場合は、「閉じる」が「中止」になる）された任意のデータを提供します。"
    },
    {
      "indent": 3,
      "text": "Abort: This primitive causes all pending 'Send' and 'Receive' calls to be aborted. A TCP \"RESET\" message is sent to the TCP endpoint on the other side of the connection [RFC0793].",
      "ja": "中止：このプリミティブの原因は、すべての「送信」と「受信」の保留は中止されるように呼び出します。 TCP「RESET」メッセージを接続[RFC0793]の他方の側のTCPエンドポイントに送信されます。"
    },
    {
      "indent": 3,
      "text": "Close Event: TCP uses this primitive to inform an application that the application on the other side has called the 'Close' primitive, so the local application can also issue a 'Close' and terminate the connection gracefully. See [RFC0793], Section 3.5.",
      "ja": "クローズイベント：TCPは、ローカルアプリケーションはまた、「閉じる」を発行し、優雅に接続を終了することができますので、他の側のアプリケーションは、「閉じる」プリミティブを呼び出したアプリケーションに通知するために、このプリミティブを使用しています。 [RFC0793]、セクション3.5を参照してください。"
    },
    {
      "indent": 3,
      "text": "Abort Event: When TCP aborts a connection upon receiving a \"RESET\" from the peer, it \"advises the user and goes to the CLOSED state.\" See [RFC0793], Section 3.4.",
      "ja": "イベントを中止：TCPピアから「RESET」を受信すると、接続を中止すると、それは「利用者に助言し、CLOSED状態になります。」 [RFC0793]、セクション3.4を参照してください。"
    },
    {
      "indent": 3,
      "text": "User Timeout Event: This event is executed when the user timeout (Section 3.9 of [RFC0793]) expires (see the definition of 'Open' in this section). All queues are flushed, and the application is informed that the connection had to be aborted due to user timeout.",
      "ja": "ユーザータイムアウトイベント：このイベントは、（このセクションの「開く」の定義を参照）、ユーザのタイムアウト（[RFC0793]のセクション3.9）が満了したときに実行されます。すべてのキューがフラッシュされ、アプリケーションは、接続がユーザのタイムアウトが原因で中止されなければならなかったことが通知されます。"
    },
    {
      "indent": 3,
      "text": "Error_Report event: This event informs the application of \"soft errors\" that can be safely ignored [RFC5461], including the arrival of an ICMP error message or excessive retransmissions (reaching a threshold below the threshold where the connection is aborted). See Section 4.2.4.1 of [RFC1122].",
      "ja": "ERROR_REPORTイベント：このイベントは、ICMPエラーメッセージまたは過度の再送信（接続が中断された閾値以下の閾値に達する）の到着を含む安全に無視することができる「ソフトエラー」[RFC5461]のアプリケーションに通知します。 [RFC1122]のセクション4.2.4.1を参照してください。"
    },
    {
      "indent": 3,
      "text": "Type-of-Service: Section 4.2.4.2 of the requirements for Internet hosts [RFC1122] states that \"The application layer MUST be able to specify the Type-of-Service (TOS) for segments that are sent on a connection.\" The application should be able to change the TOS during the connection lifetime, and the TOS value should be passed to the IP layer unchanged. Since then, the TOS field has been redefined. The Differentiated Services (Diffserv) model [RFC2475] [RFC3260] replaces this field in the IP header, assigning the six most significant bits to carry the Differentiated Services Code Point (DSCP) field [RFC2474].",
      "ja": "サービスタイプ：インターネットホストのための要件のセクション4.2.4.2 [RFC1122]は、「アプリケーション層は、タイプオブサービス（TOS）接続上で送信されるセグメントのを指定できなければなりません。」と述べていますアプリケーションは、接続の存続期間中にTOSを変更することができるはず、とTOS値は変わらないIP層に渡す必要があります。それ以来、TOSフィールドが再定義されています。差別化サービス（DiffServ）のモデル[RFC2475]、[RFC3260]は差別化サービスコードポイント（DSCP）フィールド[RFC2474]を運ぶために上位6ビットを割り当て、IPヘッダ内のこのフィールドを置き換えます。"
    },
    {
      "indent": 3,
      "text": "Nagle: The Nagle algorithm delays sending data for some time to increase the likelihood of sending a full-sized segment (Section 4.2.3.4 of [RFC1122]). An application can disable the Nagle algorithm for an individual connection.",
      "ja": "ネーグル：Nagleアルゴリズム遅延は、フルサイズのセグメント（[RFC1122]のセクション4.2.3.4）を送信する可能性を高めるためにいくつかの時間のデータを送信します。アプリケーションは、個々の接続のNagleアルゴリズムを無効にすることができます。"
    },
    {
      "indent": 3,
      "text": "User Timeout Option: The User Timeout Option (UTO) [RFC5482] allows one end of a TCP connection to advertise its current user timeout value so that the other end of the TCP connection can adapt its own user timeout accordingly. In addition to the configurable value of the user timeout (see 'Send'), there are three per-connection state variables that an application can adjust to control the operation of the UTO: 'adv_uto' is the value of the UTO advertised to the remote TCP peer (default: system-wide default user timeout); 'enabled' (default false) is a boolean-type flag that controls whether the UTO option is enabled for a connection. This applies to both sending and receiving. 'changeable' is a boolean-type flag (default true) that controls whether the user timeout may be changed based on a UTO option received from the other end of the connection. 'changeable' becomes false when an application explicitly sets the user timeout (see 'Send').",
      "ja": "ユーザタイムアウトオプション：ユーザタイムアウトオプション（UTO）[RFC5482]は、TCP接続のもう一方の端はそれに応じて自身のユーザタイムアウトを適合させることができるように、TCPコネクションの一端が現在のユーザのタイムアウト値をアドバタイズすることを可能にします。ユーザのタイムアウト（「送信」を参照）の設定値に加えて、3ごとの接続状態変数は、アプリケーションがUTOの動作を制御するために調整することができることがあります「adv_uto」はUTOの値がアドバタイズされますリモートTCPピア（デフォルト：システム全体のデフォルトユーザのタイムアウト）。 「有効」（デフォルトはfalse）UTOオプションは、接続のために有効になっているかどうかを制御するブール型フラグです。これは、送信と受信の両方に適用されます。 「変更」ユーザタイムアウトがUTOオプションに基づいて変更することができるかどうかを制御するブール型フラグ（デフォルトはtrue）は、接続の他端か​​ら受信されます。アプリケーションは、明示的にユーザのタイムアウトを設定したときに「変更は」（「送信」を参照）はfalseになります。"
    },
    {
      "indent": 3,
      "text": "Set/Get Authentication Parameters: The preferred outgoing MKT (current_key) and/or the preferred incoming MKT (rnext_key) of a connection can be configured. Information about current_key and rnext_key carried in a recently received segment can be retrieved (Section 7.1 of [RFC5925]).",
      "ja": "好ましい発信MKT（current_key）および/または接続の好ましい着信MKT（rnext_key）を構成することができる：セット/認証パラメータを取得します。最近受信したセグメントで運ばcurrent_keyとrnext_keyに関する情報は、（[RFC5925]のセクション7.1）を取得することができます。"
    },
    {
      "indent": 0,
      "text": "3.1.1. Excluded Primitives or Parameters",
      "section_title": true,
      "ja": "3.1.1. 除外されたプリミティブまたはパラメータ"
    },
    {
      "indent": 3,
      "text": "The 'Open' primitive can be handed optional precedence or security/ compartment information [RFC0793], but this was not included here because it is mostly irrelevant today [RFC7414].",
      "ja": "「開く」プリミティブは、オプションの優先度やセキュリティ/コンパートメント情報[RFC0793]を渡すことができますが、それは今日、ほとんど無関係であるため、これはここに含まれていなかった[RFC7414]。"
    },
    {
      "indent": 3,
      "text": "The 'Status' primitive was not included because the initial TCP specification describes this primitive as \"implementation dependent\" and states that it \"could be excluded without adverse effect\" [RFC0793]. Moreover, while a data block containing specific information is described, it is also stated that not all of this information may always be available. While [RFC5925] states that 'Status' \"SHOULD be augmented to allow the MKTs of a current or pending connection to be read (for confirmation)\", the same information is also available via 'Receive', which, following [RFC5925], \"MUST be augmented\" with that functionality. The 'Send' primitive includes an optional 'push' flag which, if set, requires data to be promptly transmitted to the receiver without delay [RFC0793]; the 'Receive' primitive described in can (under some conditions) yield the status of the 'push' flag. Because \"push\" functionality is optional to implement for both the 'Send' and 'Receive' primitives [RFC1122], this functionality is not included here. The requirements for Internet hosts [RFC1122] also introduce keep-alives to TCP, but these are optional to implement and hence not considered here. The same document also describes that \"some TCP implementations have included a FLUSH call\", indicating that this call is also optional to implement; therefore, it is not considered here.",
      "ja": "初期TCPの仕様は、「実装依存」として、このプリミティブを記述し、それが「悪影響を与えることなく除外することができた」と述べているので、「Statusが」プリミティブが含まれていなかった[RFC0793]。特定の情報を含むデータブロックが記載されている間さらに、また、この情報のすべてが常に利用可能とは限らないことが述べられています。 [RFC5925]は「ステータス」「（確認のため）現在または保留中の接続のMKTsを読み取ることができるように拡張されるべきである」と述べているが、同じ情報が、[RFC5925]を以下れ、「受信」を介しても利用可能ですその機能を「拡張されている必要があり」。プリミティブが設定されている場合、オプションの「プッシュ」フラグを含む「送信」、[RFC0793]速やかに遅延なく受信機に送信するデータを必要とします。 （いくつかの条件下で）缶に記載の「受信」プリミティブ「プッシュ」フラグのステータスを得ました。 「プッシュ」機能は、「送信」とプリミティブ[RFC1122]を「受信」の両方に実装するためにオプションであるため、この機能はここに含まれていません。インターネットホストのための要件[RFC1122]はTCPにもキープアライブを紹介するが、これらは実装するためにオプションであり、したがって、ここでは考慮しません。同じ文書はまた、この呼び出しも実装するために任意であることを示し、「一部のTCP実装はFLUSHコールが含まれている」ことが記載されています。したがって、それはここでは考慮されていません。"
    },
    {
      "indent": 0,
      "text": "3.2. Primitives Provided by MPTCP",
      "section_title": true,
      "ja": "3.2.  MPTCP提供プリミティブ"
    },
    {
      "indent": 3,
      "text": "MPTCP is an extension to TCP that allows the use of multiple paths for a single data stream. It achieves this by creating different so-called TCP subflows for each of the interfaces and scheduling the traffic across these TCP subflows. The service provided by MPTCP is described as follows in [RFC6182]:",
      "ja": "MPTCPは、単一のデータストリームのための複数のパスの使用を可能にするTCPの拡張です。これは、インタフェースごとに異なる、いわゆるTCPのサブフローを作成し、これらのTCPサブフロー間でトラフィックをスケジューリングすることでこれを実現します。 [RFC6182]に次のようにMPTCPによって提供されるサービスについて説明します。"
    },
    {
      "indent": 6,
      "text": "Multipath TCP MUST follow the same service model as TCP [RFC0793]: in-order, reliable, and byte-oriented delivery. Furthermore, a Multipath TCP connection SHOULD provide the application with no worse throughput or resilience than it would expect from running a single TCP connection over any one of its available paths.",
      "ja": "インオーダー、信頼性、およびバイト指向の配信：マルチパスTCPはTCP [RFC0793]と同じサービスモデルに従わなければなりません。また、マルチパスTCP接続は、その利用可能なパスのいずれかの上に単一のTCP接続を実行してから期待されるよりも悪いスループット又は弾力とアプリケーションを提供すべきです。"
    },
    {
      "indent": 3,
      "text": "Further, there are some constraints on the API exposed by MPTCP, as stated in [RFC6182]:",
      "ja": "[RFC6182]で述べたようにさらに、MPTCPによって公開されたAPIにいくつかの制約があります："
    },
    {
      "indent": 6,
      "text": "A multipath-capable equivalent of TCP MUST retain some level of backward compatibility with existing TCP APIs, so that existing applications can use the newer transport merely by upgrading the operating systems of the end hosts.",
      "ja": "既存のアプリケーションは、単にエンドホストのオペレーティングシステムをアップグレードすることによって、新しいトランスポートを使用できるように、TCPのマルチパス対応等価物は、既存のTCP APIとの下位互換性のあるレベルを保持しなければなりません。"
    },
    {
      "indent": 3,
      "text": "As such, the primitives provided by MPTCP are equivalent to the ones provided by TCP. Nevertheless, the MPTCP RFCs [RFC6824] and [RFC6897] clarify some parts of TCP's primitives with respect to MPTCP and add some extensions for better control on MPTCP's subflows. Hereafter is a list of the clarifications and extensions the above-cited RFCs provide to TCP's primitives.",
      "ja": "そのため、MPTCPが提供するプリミティブは、TCPが提供するものと同等です。それにも関わらず、MPTCPのRFC [RFC6824]と[RFC6897]はMPTCPに対するTCPのプリミティブのいくつかの部分を明確にし、MPTCPのサブフローのよりよい制御のためのいくつかの拡張機能を追加します。以下は、明確化のリストで、先に引用したRFCはTCPのプリミティブに提供拡張子を示します。"
    },
    {
      "indent": 3,
      "text": "Open: \"An application should be able to request to turn on or turn off the usage of MPTCP\" [RFC6897]. This functionality can be provided through a socket option called 'tcp_multipath_enable'. Further, MPTCP must be disabled in case the application is binding to a specific address [RFC6897].",
      "ja": "オープン：[RFC6897]を「アプリケーションは、オンまたはMPTCPの使用をオフにすることを要求することができるはずです」。この機能は、「tcp_multipath_enable」と呼ばれるソケットオプションを介して提供することができます。さらに、MPTCPは、アプリケーションが特定のアドレス[RFC6897]に結合された場合に無効にされなければなりません。"
    },
    {
      "indent": 3,
      "text": "Send/Receive: The sending and receiving of data does not require any changes to the application when MPTCP is being used [RFC6824]. The MPTCP-layer will take one input data stream from an application, and split it into one or more subflows, with sufficient control information to allow it to be reassembled and delivered reliably and in order to the recipient application.",
      "ja": "受信/送信：MPTCPは[RFC6824]を使用しているときにデータの送受信をするには、アプリケーションを変更する必要はありません。 MPTCP層は、アプリケーションからの1つの入力データストリームを取り、それが再組み立てと確実とレシピエントアプリケーションのために送達することを可能にするのに十分な制御情報と、一つ以上のサブフローに分割します。"
    },
    {
      "indent": 6,
      "text": "The use of the Urgent Pointer is special in MPTCP [RFC6824], which states: \"a TCP subflow MUST NOT use the Urgent Pointer to interrupt an existing mapping.\"",
      "ja": "緊急ポインタの使用は述べてMPTCP [RFC6824]、で特別である：「TCPのサブフローは、既存のマッピングを中断して緊急ポインタを使用してはなりません」"
    },
    {
      "indent": 3,
      "text": "Address and Subflow Management: MPTCP uses different addresses and allows a host to announce these addresses as part of the protocol. The MPTCP API Considerations RFC [RFC6897] says \"An application should be able to restrict MPTCP to binding to a given set of addresses\" and thus allows applications to limit the set of addresses that are being used by MPTCP. Further, \"An application should be able to obtain information on the pairs of addresses used by the MPTCP subflows.\"",
      "ja": "アドレスとサブフロー管理：MPTCPは異なるアドレスを使用し、ホストがプロトコルの一部としてこれらのアドレスを発表することができます。 MPTCP APIの考慮事項RFC [RFC6897]は、「アプリケーションはアドレスの所定のセットに結合するMPTCPを制限することができなければならない」、したがって、アプリケーションはMPTCPによって使用されているアドレスのセットを制限することを可能にすると言います。さらに、「アプリケーションはMPTCPのサブフローで使用されるアドレスのペアの情報を取得することができなければなりません。」"
    },
    {
      "indent": 0,
      "text": "3.3. Primitives Provided by SCTP",
      "section_title": true,
      "ja": "3.3.  SCTPが提供するプリミティブ"
    },
    {
      "indent": 3,
      "text": "TCP has a number of limitations that SCTP removes (Section 1.1 of [RFC4960]). The following three removed limitations directly translate into transport features that are visible to an application using SCTP: 1) it allows for preservation of message delimiters; 2) it does not provide in-order or reliable delivery unless the application wants that; 3) multihoming is supported. In SCTP, connections are called \"associations\" and they can be between not only two (as in TCP) but multiple addresses at each endpoint.",
      "ja": "TCPを削除し（[RFC4960]のセクション1.1）SCTP多くの制限を有しています。次の三つ除去制限直接SCTPを使用してアプリケーションに表示され、トランスポート機能に翻訳：1）それは、メッセージの区切り文字の保存を可能にします。アプリケーションがその望んでない限り、2）それは、順序や信頼性の高い配信を提供していません。 3）マルチホーミングがサポートされています。 SCTPでは、接続は「組合」と呼ばれ、彼らは、各エンドポイントではない2つだけ（TCPのように）が、複数のアドレスの間とすることができます。"
    },
    {
      "indent": 3,
      "text": "Section 10 of the SCTP base protocol specification [RFC4960] specifies the interaction with the application (which SCTP calls the \"Upper-Layer Protocol (ULP)\"). It is assumed that the Operating System provides a means for SCTP to asynchronously signal the application; the primitives representing such signals are called 'events' in this section. Here, we describe the relevant primitives. In addition to the abstract API described in Section 10 of [RFC4960], an extension to the sockets API is described in [RFC6458]. This covers the functionality of the base protocol [RFC4960] and some of its extensions [RFC3758] [RFC4895] [RFC5061]. For other protocol extensions [RFC6525] [RFC6951] [RFC7053] [RFC7496] [RFC7829]",
      "ja": "SCTPベースプロトコル仕様[RFC4960]のセクション10（SCTPは「上位層プロトコル（ULP）」を呼び出す）アプリケーションとの相互作用を指定します。オペレーティング・システムが非同期にアプリケーションを通知するためのSCTPのための手段を提供することが想定されます。このような信号を表すプリミティブは、このセクションの「イベント」と呼ばれています。ここでは、関連するプリミティブについて説明します。 [RFC4960]のセクション10に記載の抽象APIに加えて、ソケットAPIへの拡張は、[RFC6458]に記載されています。これは、基本プロトコル[RFC4960]及びその拡張[RFC3758]、[RFC4895]、[RFC5061]の一部の機能をカバーします。他のプロトコル拡張のために[RFC6525]、[RFC6951]、[RFC7053]、[RFC7496]、[RFC7829]"
    },
    {
      "indent": 3,
      "text": "[RFC8260], the corresponding extensions of the sockets API are specified in these protocol specifications. The functionality exposed to the ULP through all these APIs is considered here.",
      "ja": "[RFC8260]、ソケットAPIの対応する拡張機能は、これらのプロトコル仕様で指定されています。すべてのこれらのAPIを通じてULPに公開されている機能は、ここでは考慮されています。"
    },
    {
      "indent": 3,
      "text": "The abstract API contains a 'SetProtocolParameters' primitive that allows elements of a parameter list [RFC4960] to be adjusted; it is stated that SCTP implementations \"may allow ULP to customize some of these protocol parameters\", indicating that none of the elements of this parameter list are mandatory to make ULP configurable. Thus, we only consider the parameters in the abstract API that are also covered in one of the other RFCs listed above, which leads us to exclude the parameters 'RTO.Alpha', 'RTO.Beta', and 'HB.Max.Burst'. For clarity, we also replace 'SetProtocolParameters' itself with primitives that adjust parameters or groups of parameters that fit together.",
      "ja": "アブストラクトAPIは「SetProtocolParameters」プリミティブパラメータリストの要素[RFC4960]を調整することを可能にすることが含まれています。 SCTPの実装は、このパラメータリストの要素のどれもが、ULPは、構成作るために必須でないことを示す、「ULPは、これらのプロトコルパラメータの一部をカスタマイズすることを可能にする」と述べられています。したがって、我々はまた、パラメータ「RTO.Alpha」、「RTO.Beta」を除外するために私たちをリードされ、上記の他のRFCの1でカバーし、「HB.Max.Burstされている抽象APIのパラメータを検討します」。明確にするために、我々はまた、一緒にフィットパラメータのパラメータまたはグループを調整するプリミティブで「SetProtocolParameters」自体を交換してください。"
    },
    {
      "indent": 3,
      "text": "Initialize: Initialize creates a local SCTP instance that it binds to a set of local addresses (and, if provided, a local port number) [RFC4960]. Initialize needs to be called only once per set of local addresses. A number of per-association initialization parameters can be used when an association is created, but before it is connected (via the primitive 'Associate' below): the maximum number of inbound streams the application is prepared to support, the maximum number of attempts to be made when sending the INIT (the first message of association establishment), and the maximum retransmission timeout (RTO) value to use when attempting an INIT [RFC6458]. At this point, before connecting, an application can also enable UDP encapsulation by configuring the remote UDP encapsulation port number [RFC6951].",
      "ja": "初期化：初期化は、それがローカルアドレスのセット（提供される場合と、ローカルポート番号）[RFC4960]に結合することローカルSCTPインスタンスを作成します。初期化は一度だけローカルアドレスのセットごとに呼び出す必要があります。それは（以下プリミティブ「准」を介して）接続される前に当たり、関連の初期化パラメータの数は、関連付けが作成されるときに使用されることができるが、アプリケーションが準備され、インバウンドストリームの最大数をサポートするために、試行の最大数をINIT [RFC6458]をしようとするときに使用するINIT（アソシエーションの確立の最初のメッセージ）、および最大再送タイムアウト（RTO）値を送信するときに行われます。この時点で、接続する前に、アプリケーションは、リモートUDPカプセル化ポート番号[RFC6951]を設定することにより、UDPカプセル化を可能にすることができます。"
    },
    {
      "indent": 3,
      "text": "Associate: This creates an association (the SCTP equivalent of a connection) that connects the local SCTP instance and a remote SCTP instance. To identify the remote endpoint, it can be given one or multiple (using \"connectx\") sockets (Section 9.9 of [RFC6458]). Most primitives are associated with a specific association, which is assumed to first have been created. Associate can return a list of destination transport addresses so that multiple paths can later be used. One of the returned sockets will be selected by the local endpoint as the default primary path for sending SCTP packets to this peer, but this choice can be changed by the application using the list of destination addresses. Associate is also given the number of outgoing streams to request and optionally returns the number of negotiated outgoing streams. An optional parameter of 32 bits, the adaptation layer indication, can be provided [RFC5061]. If authenticated chunks are used, the chunk types required to be sent authenticated by the peer can be provided [RFC4895]. An 'SCTP_Cant_Str_Assoc' notification is used to inform the application of a failure to create an association [RFC6458]. An application could use sendto() or sendmsg() to implicitly set up an association, thereby handing over a message that SCTP might send during the association setup phase [RFC6458]. Note that this mechanism is different from TCP's TFO mechanism: the message would arrive only once, after at least one RTT, as it is sent together with the third message exchanged during association setup, the COOKIE-ECHO chunk).",
      "ja": "アソシエイト：これは、ローカルSCTPインスタンスとリモートSCTPインスタンスを接続アソシエーション（接続のSCTP相当）を作成します。リモートエンドポイントを識別するために、それはソケット（[RFC6458]のセクション9.9）（「のConnectX」を使用して）一つまたは複数を与えることができます。ほとんどのプリミティブが最初に作成されているものと、特定の団体、関連付けられています。複数のパスが後で使用できるように会合は、宛先トランスポートアドレスのリストを返すことができます。返されたソケットの一つは、このピアにSCTPパケットを送信するためのデフォルトのプライマリパスとしてローカルエンドポイントによって選択されますが、この選択は、宛先アドレスのリストを使用して、アプリケーションによって変更することができます。会合はまた、要求への発信ストリームの数を与えられ、必要に応じて交渉さ発信ストリームの数を返します。 32ビットのオプションのパラメータは、適応層指示は、[RFC5061]を提供することができます。認証されたチャンクが使用される場合、ピアによって認証送信する必要チャンクタイプは、[RFC4895]を提供することができます。 「SCTP_Cant_Str_Assoc」通知は関連[RFC6458]を作成するために障害のアプリケーションに通知するために使用されます。アプリケーションは、暗黙的にそれによってSCTPアソシエーションのセットアップフェーズ[RFC6458]の間に送信することがありますメッセージを引き渡し、アソシエーションを設定するためのsendto（）またはsendmsgの（）を使用することができます。この機構は、TCPのTFOメカニズムとは異なることに注意してください：それはアソシエーションのセットアップ、COOKIE-ECHOチャンク）中に交換第3のメッセージと一緒に送信されるメッセージは、少なくとも一つのRTTの後、一度だけ到着するであろう。"
    },
    {
      "indent": 3,
      "text": "Send: This sends a message of a certain length in bytes over an association. A number can be provided to later refer to the correct message when reporting an error, and a stream id is provided to specify the stream to be used inside an association (we consider this as a mandatory parameter here for simplicity: if not provided, the stream id defaults to 0). A condition to abandon the message can be specified (for example limiting the number of retransmissions or the lifetime of the user message). This allows control of the partial reliability extension [RFC3758] [RFC7496]. An optional maximum lifetime can specify the time after which the message should be discarded rather than sent. A choice (advisory, i.e., not guaranteed) of the preferred path can be made by providing a socket, and the message can be delivered out-of-order if the 'unordered' flag is set. An advisory flag indicates that the peer should not delay the acknowledgement of the user message provided [RFC7053]. Another advisory flag indicates whether the application prefers to avoid bundling user data with other outbound DATA chunks (i.e., in the same packet). A payload protocol-id can be provided to pass a value that indicates the type of payload protocol data to the peer. If authenticated chunks are used, the key identifier for authenticating DATA chunks can be provided [RFC4895].",
      "ja": "送信：これは、アソシエーションを介してバイト単位で特定の長さのメッセージを送信します。提供されない場合、：数が（私たちは簡単にするためにここに必須パラメータとしてこれを考慮し、エラーを報告するとき、後で正しいメッセージを参照するために提供することができ、及びストリームIDをアソシエーション内で使用するストリームを指定するために設けられています。ストリームID 0デフォルト）。メッセージを放棄する条件は、（再送回数またはユーザメッセージの寿命を制限するなど）に指定することができます。これは、部分的な信頼性延長[RFC3758]、[RFC7496]の制御を可能にします。オプションの最大寿命は、メッセージが破棄なく送信されるまでの時間を指定することができます。優先パスの選択（アドバイザリー、すなわち、保証されていない）はソケットを提供することによって行うことができ、そして「無秩序」フラグが設定されている場合、メッセージは、アウトオブオーダー送達することができます。アドバイザリフラグはピアが[RFC7053]を提供されるユーザメッセージの確認応答を遅らせるべきではないことを示しています。別のアドバイザリフラグは、アプリケーションが他のアウトバウンド・データのチャンク（すなわち、同じパケット内）でユーザデータを束ねる避けることを好むかどうかを示します。ペイロードプロトコルIDがピアにペイロード・プロトコル・データのタイプを示す値を渡すために提供することができます。認証されたチャンクが使用される場合、データチャンクを認証するためのキー識別子は、[RFC4895]を提供することができます。"
    },
    {
      "indent": 3,
      "text": "Receive: Messages are received from an association, and optionally a stream within the association, with their size returned. The application is notified of the availability of data via a 'Data Arrive' notification. If the sender has included a payload protocol-id, this value is also returned. If the received message is only a partial delivery of a whole message, a 'partial' flag will indicate so, in which case the stream id and a stream sequence number are provided to the application.",
      "ja": "メッセージは、アソシエーションから受信され、そのサイズが返さと、アソシエーション内のストリームをオプション：受け取ります。アプリケーションは、「データが到着」の通知を経由してデータの可用性が通知されます。送信側がペイロードプロトコル-IDを含んでいる場合、この値も返されます。受信したメッセージがメッセージ全体の一部のみ送達である場合、「部分的」フラグは、ストリームID及びストリーム・シーケンス番号がアプリケーションに提供された場合には、これを示します。"
    },
    {
      "indent": 3,
      "text": "Shutdown: This primitive gracefully closes an association, reliably delivering any data that has already been handed over to SCTP. A parameter lets the application control whether further receive or send operations or both are disabled when the call is issued. A return code informs about success or failure of this procedure.",
      "ja": "シャットダウン：優雅このプリミティブは、確実に、既にSCTPに引き渡された任意のデータを配信、関連付けを閉じます。パラメータがさらに受信または操作を送信したり、コールが発行されたときの両方が無効になっているかどうかをアプリケーション制御をすることができます。リターンコードは、この手順の成否について通知します。"
    },
    {
      "indent": 3,
      "text": "Abort: This ungracefully closes an association, by discarding any locally queued data and informing the peer that the association was aborted. Optionally, an abort reason to be passed to the peer may be provided by the application. A return code informs about success or failure of this procedure.",
      "ja": "中止：これは不正に任意のローカルキューに入れられたデータを破棄し、会合が中止されたことをピアに通知することで、関連付けを閉じます。必要に応じて、ピアに渡されるアボート理由は、アプリケーションによって提供されてもよいです。リターンコードは、この手順の成否について通知します。"
    },
    {
      "indent": 3,
      "text": "Change Heartbeat / Request Heartbeat: This allows the application to enable/disable heartbeats and optionally specify a heartbeat frequency as well as requesting a single heartbeat to be carried out upon a function call, with a notification about success or failure of transmitting the HEARTBEAT chunk to the destination.",
      "ja": "ハートビート/要求ハートビートを変更：これは、関数呼び出しの際に行うことがハートビート周波数/無効ハートビートを有効にし、必要に応じて指定するアプリケーションと同様に、単一のハートビートを要求することを可能にする、にHEARTBEATチャンクを送信の成功または失敗に関する通知と先。"
    },
    {
      "indent": 3,
      "text": "Configure Max. Retransmissions of an Association: The parameter 'Association.Max.Retrans' [RFC4960] (called \"sasoc_maxrxt\" in the SCTP sockets API extensions [RFC6458]) allows the configuration of the number of unsuccessful retransmissions after which an entire association is considered as failed; this should invoke a 'Communication Lost' notification.",
      "ja": "マックスを設定します。協会の再送：失敗したように、パラメータ「Association.Max.Retrans」[RFC4960]（SCTPソケットAPI拡張に「sasoc_maxrxt」と呼ばれる[RFC6458]）は、全体の関連を考慮した後に失敗した再送回数を設定することができます;これは、「コミュニケーションロスト」通知を呼び出す必要があります。"
    },
    {
      "indent": 3,
      "text": "Set Primary: This allows the ability to set a new primary default path for an association by providing a socket. Optionally, a default source address to be used in IP datagrams can be provided.",
      "ja": "プライマリに設定します。これは、ソケットを提供することにより、協会の新しいプライマリデフォルトのパスを設定する機能を可能にします。必要に応じて、IPデータグラムで使用するデフォルトの送信元アドレスを提供することができます。"
    },
    {
      "indent": 3,
      "text": "Change Local Address / Set Peer Primary: This allows an endpoint to add/remove local addresses to/from an association. In addition, the peer can be given a hint for which address to use as the primary address [RFC5061].",
      "ja": "ローカルアドレス/設定するピアプライマリを変更します。これは、エンドポイントは協会へ/からローカルアドレスを追加/削除することができます。また、ピアは、一次アドレス[RFC5061]として使用するアドレスのヒントを与えることができます。"
    },
    {
      "indent": 3,
      "text": "Configure Path Switchover: The abstract API contains a primitive called 'Set Failure Threshold' [RFC4960]. This configures the parameter 'Path.Max.Retrans', which determines after how many retransmissions a particular transport address is considered as unreachable. If there are more transport addresses available in an association, reaching this limit will invoke a path switchover. An extension called \"SCTP-PF\" adds a concept of \"Potentially Failed (PF)\" paths to this method [RFC7829]. When a path is in PF state, SCTP will not entirely give up sending on that path, but it will preferably send data on other active paths if such paths are available. Entering the PF state is done upon exceeding a configured maximum number of retransmissions. Thus, for all paths where this mechanism is used, there are two configurable error thresholds: one to decide that a path is in PF state, and one to decide that the transport address is unreachable.",
      "ja": "パス切替を設定します。抽象APIは、プリミティブと呼ばれる「が設定エラーしきい値」[RFC4960]を含んでいます。これは、特定のトランスポートアドレスが到達不能と考えられているどのように多くの再送信の後に決定したパラメータ「Path.Max.Retrans」を構成します。関連で利用可能な複数のトランスポート・アドレスがある場合、この限界に達すると、パス切替を呼び出します。 「SCTP-PF」と呼ばれる拡張は、この方法を「潜在的失敗（PF）」のパス[RFC7829]の概念を追加します。パスは、PF状態にあるとき、SCTPは、完全にその経路上に送信放棄しないであろうが、そのようなパスが利用可能である場合には、好ましくは、他のアクティブパスにデータを送信します。入射PF状態は、再送信の設定された最大数を超えた時に行われます。したがって、このメカニズムが使用されているすべてのパスのために、2つの構成可能エラーしきい値が存在する：一つは経路がPF状態であると判断すると、1つはトランスポートアドレスが到達不能であることを決定します。"
    },
    {
      "indent": 3,
      "text": "Set/Get Authentication Parameters: This allows an endpoint to add/ remove key material to/from an association. In addition, the chunk types being authenticated can be queried [RFC4895].",
      "ja": "設定/認証パラメータを取得します。これは、エンドポイントは、協会から/へのキーマテリアルを追加/削除することができます。加えて、認証されるチャンクタイプは、[RFC4895]を照会することができます。"
    },
    {
      "indent": 3,
      "text": "Add/Reset Streams, Reset Association: This allows an endpoint to add streams to an existing association or to reset them individually. Additionally, the association can be reset [RFC6525].",
      "ja": "協会をリセットし、ストリームをリセット/追加します。これは、既存の関連付けにストリームを追加するか、それらを個々にリセットするためにエンドポイントを可能にします。また、関連付けは、[RFC6525]をリセットすることができます。"
    },
    {
      "indent": 3,
      "text": "Status: The 'Status' primitive returns a data block with information about a specified association, containing: an association connection state; a destination transport address list; destination transport address reachability states; current local and peer receiver window sizes; current local congestion window sizes; number of unacknowledged DATA chunks; number of DATA chunks pending receipt; a primary path; the most recent Smoothed Round-Trip Time (SRTT) on a primary path; RTO on a primary path; SRTT and RTO on other destination addresses [RFC4960]; and an MTU per path [RFC6458].",
      "ja": "ステータス：を含む「ステータス」プリミティブ戻り指定関連に関する情報をデータブロック：関連の接続状態を、先輸送アドレスリスト。先のトランスポートアドレスの到達可能性の状態;現在のローカルピア受信ウィンドウサイズ。現在のローカル輻輳ウィンドウサイズ。未確認のDATAチャンクの数。領収書を保留中のDATAチャンクの数。プライマリパス;プライマリパス上の最新の平滑化往復時間（SRTT）。プライマリパス上のRTO。他の宛先アドレス[RFC4960]にSRTTとRTO。パス当たりのMTU [RFC6458]。"
    },
    {
      "indent": 3,
      "text": "Enable/Disable Interleaving: This allows the negotiation of user message interleaving support for future associations to be enabled or disabled. For existing associations, it is possible to query whether user message interleaving support was negotiated or not on a particular association [RFC8260].",
      "ja": "/無効にインタリーブを有効にする：これは、ユーザーのメッセージのネゴシエーションが有効または無効にするには、将来の団体のサポートをインターリーブすることができます。既存の関連付けのためには、ユーザメッセージインターリーブサポートは、特定の関連[RFC8260]にネゴシエートされたか否かを照会することが可能です。"
    },
    {
      "indent": 3,
      "text": "Set Stream Scheduler: This allows the ability to select a stream scheduler per association, with a choice of: First-Come, First-Served; Round-Robin; Round-Robin per Packet; Priority-Based; Fair Bandwidth; and Weighted Fair Queuing [RFC8260].",
      "ja": "ストリームスケジューラを設定します。これは、選択して、関連ごとにストリームスケジューラを選択する能力ができます、先着順ファースト役立ちました。ラウンドロビン;パケットごとのラウンドロビン。優先順位に基づきます。公平な帯域幅;そして均等化キューイング[RFC8260]。"
    },
    {
      "indent": 3,
      "text": "Configure Stream Scheduler: This allows the ability to change a parameter per stream for the schedulers: a priority value for the Priority-Based scheduler and a weight for the Weighted Fair Queuing scheduler.",
      "ja": "ストリームスケジューラを設定します。優先順位ベースのスケジューラのプライオリティ値及び均等化キューイングスケジューラの重み：これは、スケジューラのためのストリームごとのパラメータを変更することができます。"
    },
    {
      "indent": 3,
      "text": "Enable/Disable NoDelay: This turns on/off any Nagle-like algorithm for an association [RFC6458].",
      "ja": "/無効NODELAYを有効にする：これは協会[RFC6458]のための任意のNagleのようなアルゴリズムをオン/オフになります。"
    },
    {
      "indent": 3,
      "text": "Configure Send Buffer Size: This controls the amount of data SCTP may have waiting in internal buffers to be sent or retransmitted [RFC6458].",
      "ja": "送信バッファサイズを設定します。これは、送信する内部バッファに待機している可能性のあるデータのSCTPの量や、再送[RFC6458]を制御します。"
    },
    {
      "indent": 3,
      "text": "Configure Receive Buffer Size: This sets the receive buffer size in octets, thereby controlling the receiver window for an association [RFC6458].",
      "ja": "構成バッファサイズを受信する。これによりアソシエーション[RFC6458]のための受信ウィンドウを制御する、オクテットで受信バッファサイズを設定します。"
    },
    {
      "indent": 3,
      "text": "Configure Message Fragmentation: If a user message causes an SCTP packet to exceed the maximum fragmentation size (which can be provided by the application and is otherwise the Path MTU (PMTU) size), then the message will be fragmented by SCTP. Disabling message fragmentation will produce an error instead of fragmenting the message [RFC6458].",
      "ja": "メッセージの断片化を設定：ユーザメッセージが（アプリケーションによって提供され、そうでなければパスMTU（PMTU）のサイズであることができる）最大フラグメンテーションサイズを超えSCTPパケットが発生する場合、そのメッセージは、SCTPによって断片化されるであろう。メッセージの断片化を無効にする代わりに、メッセージ[RFC6458]を断片化エラーを生成することになります。"
    },
    {
      "indent": 3,
      "text": "Configure Path MTU Discovery: Path MTU Discovery (PMTUD) can be enabled or disabled per peer address of an association (Section 8.1.12 of [RFC6458]). When it is enabled, the current Path MTU value can be obtained. When it is disabled, the Path MTU to be used can be controlled by the application.",
      "ja": "パスMTUディスカバリを設定します。パスMTUディスカバリ（PMTUD）が有効または会合（[RFC6458]のセクション8.1.12）のピアアドレスごとに無効にすることができます。それが有効になっている場合、現在のパスMTU値を得ることができます。それが無効になっている場合には、使用するパスMTUは、アプリケーションによって制御することができます。"
    },
    {
      "indent": 3,
      "text": "Configure Delayed SACK Timer: The time before sending a SACK can be adjusted; delaying SACKs can be disabled; and the number of packets that must be received before a SACK is sent without waiting for the delay timer to expire can be configured [RFC6458].",
      "ja": "遅れSACKタイマーを設定します。SACKを送信するまでの時間を調整することができます。遅延サックスを無効にすることができます。そして、SACKが満了するの遅延タイマーを待たずに送信される前に受信されなければならないパケットの数は、[RFC6458]を設定することができます。"
    },
    {
      "indent": 3,
      "text": "Set Cookie Life Value: The cookie life value can be adjusted (Section 8.1.2 of [RFC6458]). 'Valid.Cookie.Life' is also one of the parameters that is potentially adjustable with 'SetProtocolParameters' [RFC4960].",
      "ja": "Cookieのライフ値を設定します。クッキーの寿命値は、（[RFC6458]のセクション8.1.2）を調整することができます。 「Valid.Cookie.Life」は「SetProtocolParameters」[RFC4960]と潜在的に調節可能であるパラメータの一つです。"
    },
    {
      "indent": 3,
      "text": "Set Maximum Burst: The maximum burst of packets that can be emitted by a particular association (default 4, and values above 4 are optional to implement) can be adjusted (Section 8.1.2 of [RFC6458]). 'Max.Burst' is also one of the parameters that is potentially adjustable with 'SetProtocolParameters' [RFC4960].",
      "ja": "最大バーストを設定する：特定の会合によって放出することができるパケットの最大バースト（デフォルト4、及び4上記の値は実装が任意である）（[RFC6458]のセクション8.1.2）を調整することができます。 「Max.Burst」は「SetProtocolParameters」[RFC4960]と潜在的に調節可能であるパラメータの一つです。"
    },
    {
      "indent": 3,
      "text": "Configure RTO Calculation: The abstract API contains the following adjustable parameters: 'RTO.Initial'; 'RTO.Min'; 'RTO.Max'; 'RTO.Alpha'; and 'RTO.Beta'. Only the initial, minimum and maximum RTOs are also described as configurable in the SCTP sockets API extensions [RFC6458].",
      "ja": "RTOの計算を設定します。抽象的なAPIには、以下の調整可能なパラメータが含まれます。「RTO.Initialを」; 'RTO.Min'; 'RTO.Max'; 'RTO.Alpha';そして、 'R​​TO.Beta'。のみ、初期最小値及び最大RTOSはまた、SCTPソケットAPIの拡張[RFC6458]に設定として記載されています。"
    },
    {
      "indent": 3,
      "text": "Set DSCP Value: The DSCP value can be set per peer address of an association (Section 8.1.12 of [RFC6458]).",
      "ja": "DSCP値を設定：DSCP値は、アソシエーション（[RFC6458]のセクション8.1.12）のピアアドレス毎に設定することができます。"
    },
    {
      "indent": 3,
      "text": "Set IPv6 Flow Label: The flow label field can be set per peer address of an association (Section 8.1.12 of [RFC6458]).",
      "ja": "IPv6のフローラベルを設定します。フローラベルフィールドは、アソシエーション（[RFC6458]のセクション8.1.12）のピアアドレスごとに設定することができます。"
    },
    {
      "indent": 3,
      "text": "Set Partial Delivery Point: This allows the ability to specify the size of a message where partial delivery will be invoked. Setting this to a lower value will cause partial deliveries to happen more often [RFC6458].",
      "ja": "部分的な配信ポイントを設定します。これは、部分的な配信が呼び出されるメッセージのサイズを指定することができます。低い値に設定すると、一部の納入がより頻繁に、[RFC6458]に発生するようになります。"
    },
    {
      "indent": 3,
      "text": "Communication Up Notification: When a lost communication to an endpoint is restored or when SCTP becomes ready to send or receive user messages, this notification informs the application process about the affected association, the type of event that has occurred, the complete set of sockets of the peer, the maximum number of allowed streams, and the inbound stream count (the number of streams the peer endpoint has requested). If interleaving is supported by both endpoints, this information is also included in this notification.",
      "ja": "コミュニケーションアップ通知：エンドポイントへの失われた通信が回復またはSCTPはユーザメッセージを送信または受信する準備ができなった場合、この通知は、影響を受けた協会についてアプリケーション・プロセスに通知され、発生したイベントのタイプのソケットの完全なセットピア、許容ストリームの最大数、及びインバウンドストリーム数（ピアエンドポイントが要求したストリーム数）。インターリービングは、両方のエンドポイントでサポートされている場合、この情報は、この通知に含まれています。"
    },
    {
      "indent": 3,
      "text": "Restart Notification: When SCTP has detected that the peer has restarted, this notification is passed to the upper layer [RFC6458].",
      "ja": "再起動通知：SCTPは、ピアが再起動したことを検出した場合、この通知は、上位レイヤ[RFC6458]に渡されます。"
    },
    {
      "indent": 3,
      "text": "Data Arrive Notification: When a message is ready to be retrieved via the 'Receive' primitive, the application is informed by this notification.",
      "ja": "データは通知到着：メッセージは「受信」プリミティブ、アプリケーションはこの通知により通知されて取得する準備ができているとき。"
    },
    {
      "indent": 3,
      "text": "Send Failure Notification / Receive Unsent Message / Receive Unacknowledged Message: When a message cannot be delivered via an association, the sender can be informed about it and learn whether the message has just not been acknowledged or (e.g., in case of lifetime expiry) if it has not even been sent. This can also inform the sender that a part of the message has been successfully delivered.",
      "ja": "未送信のメッセージを受信/障害通知を送信/未確認のメッセージが表示されます。メッセージは会合を介して配信することができない場合は、送信者がそれについて知ることができるとのメッセージがちょうど認めたりしていないかどうかを学習する（例えば、生涯の満了の場合）であればそれも送信されていません。これは、メッセージの一部が正常に配信されたことを送信者に知らせることができます。"
    },
    {
      "indent": 3,
      "text": "Network Status Change Notification: This informs the application about a socket becoming active/inactive [RFC4960] or \"Potentially Failed\" [RFC7829].",
      "ja": "ネットワークステータス変更通知：これは、アクティブ/非アクティブ[RFC4960]または「潜在的に失敗しました」[RFC7829]になってきたソケットについてアプリケーションに通知します。"
    },
    {
      "indent": 3,
      "text": "Communication Lost Notification: When SCTP loses communication to an endpoint (e.g., via heartbeats or excessive retransmission) or detects an abort, this notification informs the application process of the affected association and the type of event (failure OR termination in response to a shutdown or abort request).",
      "ja": "通信ロスト通知：SCTPは、（ハートビートまたは過度の再送信を介して、例えば、）エンドポイントへの通信を失ったまたは中断を検出し、この通知がシャットダウンに応答して、影響を受けた会合およびイベントの種類（故障または終了のアプリケーション・プロセスに通知する、または）要求を中止します。"
    },
    {
      "indent": 3,
      "text": "Shutdown Complete Notification: When SCTP completes the shutdown procedures, this notification is passed to the upper layer, informing it about the affected association.",
      "ja": "シャットダウン完了通知：SCTPは、シャットダウン手順を完了すると、この通知が影響を受けた団体については、それを知らせる、上位層に渡されます。"
    },
    {
      "indent": 3,
      "text": "Authentication Notification: When SCTP wants to notify the upper layer regarding the key management related to authenticated chunks [RFC4895], this notification is passed to the upper layer.",
      "ja": "認証通知：SCTPが認証チャンク[RFC4895]に関連する鍵管理に関する上位層に通知したい場合、この通知は、上位層に渡されます。"
    },
    {
      "indent": 3,
      "text": "Adaptation Layer Indication Notification: When SCTP completes the association setup and the peer provided an adaptation layer indication, this is passed to the upper layer [RFC5061] [RFC6458].",
      "ja": "アダプテーションレイヤ指示通知：SCTPアソシエーションのセットアップを完了し、ピアがアダプテーション層指標を提供される場合、これは上位層[RFC5061]、[RFC6458]に渡されます。"
    },
    {
      "indent": 3,
      "text": "Stream Reset Notification: When SCTP completes the procedure for resetting streams [RFC6525], this notification is passed to the upper layer, informing it about the result.",
      "ja": "ストリームリセット通知：SCTPのストリームをリセットするための手順を完了し、[RFC6525]、この通知は、結果について、それを知らせる、上位層に渡されます。"
    },
    {
      "indent": 3,
      "text": "Association Reset Notification: When SCTP completes the association reset procedure [RFC6525], this notification is passed to the upper layer, informing it about the result.",
      "ja": "アソシエーションリセット通知：SCTPアソシエーションリセット手順[RFC6525]を完了すると、この通知は、結果について、それを知らせる、上位層に渡されます。"
    },
    {
      "indent": 3,
      "text": "Stream Change Notification: When SCTP completes the procedure used to increase the number of streams [RFC6525], this notification is passed to the upper layer, informing it about the result.",
      "ja": "ストリーム変更通知：SCTPのストリーム数[RFC6525]を増加させるために使用される手順を完了すると、この通知は、結果について、それを知らせる、上位層に渡されます。"
    },
    {
      "indent": 3,
      "text": "Sender Dry Notification: When SCTP has no more user data to send or retransmit on a particular association, this notification is passed to the upper layer [RFC6458].",
      "ja": "センダドライ通知：SCTPは、特定のアソシエーション上で送信または再送信するこれ以上のユーザデータを有する場合、この通知は、上位レイヤ[RFC6458]に渡されます。"
    },
    {
      "indent": 3,
      "text": "Partial Delivery Aborted Notification: When a receiver has begun to receive parts of a user message but the delivery of this message is then aborted, this notification is passed to the upper layer (Section 6.1.7 of [RFC6458]).",
      "ja": "部分配信中止通知：受信機は、ユーザ・メッセージの部分を受信し始めているが、このメッセージの配信は、その後中止された場合、この通知は、上位層に渡される（セクション6.1.7 [RFC6458]）。"
    },
    {
      "indent": 0,
      "text": "3.3.1. Excluded Primitives or Parameters",
      "section_title": true,
      "ja": "3.3.1. 除外されたプリミティブまたはパラメータ"
    },
    {
      "indent": 3,
      "text": "The 'Receive' primitive can return certain additional information, but this is optional to implement and therefore not considered. With a 'Communication Lost' notification, some more information may optionally be passed to the application (e.g., identification to retrieve unsent and unacknowledged data). SCTP \"can invoke\" a 'Communication Error' notification and \"may send\" a 'Restart' notification, making these two notifications optional to implement. The list provided under 'Status' includes \"etc.\", indicating that more information could be provided. The primitive 'Get SRTT Report' returns information that is included in the information that 'Status' provides and is therefore not discussed. The 'Destroy SCTP Instance' API function was excluded: it erases the SCTP instance that was created by 'Initialize' but is not a primitive as defined in this document because it does not relate to a transport feature. The 'Shutdown' event informs an application that the peer has sent a SHUTDOWN, and hence no further data should be sent on this socket (Section 6.1 of [RFC6458]). However, if an application would try to send data on the socket, it would get an error message anyway; thus, this event is classified as \"just affecting the application programming style, not how the underlying protocol operates\" and is not included here.",
      "ja": "「受信」プリミティブは、特定の追加情報を返すことができますが、これは実装するために、オプションのため、考えられないです。 「通信ロスト」通知と共に、いくつかのより多くの情報は、任意のアプリケーションに渡すことができる（例えば、識別は、未送信と未確認データを取得します）。 SCTP「通信エラー」通知「を呼び出すことができる」と、実装がこれら2つの通知をオプションに、「再起動」通知「を送ること」。 「ステータス」の下で提供されたリストは、より多くの情報を提供することができることを示す、「その他」が含まれます。原始的な「ゲットSRTT報告書」は「ステータス」を提供し、したがって、議論されていないという情報に含まれている情報を返します。 「破棄SCTPインスタンスのAPI関数が除外された：それは「初期化」により作成されたSCTPインスタンスを消去しますが、それは輸送機能に関連していないので、この文書で定義されている原始的ではありません。 「シャットダウン」イベントは、ピアがSHUTDOWNを送信し、それゆえさらなるデータがこのソケット（[RFC6458]のセクション6.1）上で送信されるべきではないアプリケーションに通知します。アプリケーションがソケットにデータを送信しようとすれば、それはとにかく、エラーメッセージになるだろう。したがって、このイベントは、ここに含まれていません「だけで基本的なプロトコルが動作していないか、アプリケーション・プログラミング・スタイルに影響を与える」として分類されています。"
    },
    {
      "indent": 0,
      "text": "3.4. Primitives Provided by UDP and UDP-Lite",
      "section_title": true,
      "ja": "3.4.  UDPとUDP-Liteの提供プリミティブ"
    },
    {
      "indent": 3,
      "text": "The set of pass 1 primitives for UDP and UDP-Lite is documented in [RFC8304].",
      "ja": "UDPとUDP-Liteのパス1つのプリミティブのセットは、[RFC8304]に記載されています。"
    },
    {
      "indent": 0,
      "text": "3.5. The Service of LEDBAT",
      "section_title": true,
      "ja": "3.5.  LEDBATのサービス"
    },
    {
      "indent": 3,
      "text": "The service of the LEDBAT congestion control mechanism is described as follows:",
      "ja": "次のようにLEDBAT輻輳制御メカニズムのサービスを説明します。"
    },
    {
      "indent": 6,
      "text": "LEDBAT is designed for use by background bulk-transfer applications to be no more aggressive than standard TCP congestion control (as specified in RFC 5681) and to yield in the presence of competing flows, thus limiting interference with the network performance of competing flows [RFC6817].",
      "ja": "LEDBATはRFC6817 [こうして競合フローのネットワーク性能との干渉を制限し、標準のTCP輻輳制御よりもより積極的ではないと（RFC 5681で指定されるように）と競合するフローの存在下で得背景バルク転送アプリケーションによって使用するために設計されています]。"
    },
    {
      "indent": 3,
      "text": "LEDBAT does not have any primitives, as LEDBAT is not a transport protocol. According to its specification [RFC6817]:",
      "ja": "LEDBATは、トランスポート・プロトコルではないようLEDBATは、任意のプリミティブを持っていません。その仕様[RFC6817]によると："
    },
    {
      "indent": 6,
      "text": "LEDBAT can be used as part of a transport protocol or as part of an application, as long as the data transmission mechanisms are capable of carrying timestamps and acknowledging data frequently. LEDBAT can be used with TCP, Stream Control Transmission Protocol (SCTP), and Datagram Congestion Control Protocol (DCCP), with appropriate extensions where necessary; and it can be used with proprietary application protocols, such as those built on top of UDP for peer-to-peer (P2P) applications.",
      "ja": "LEDBATであれば、データ伝送機構はタイムスタンプを搬送し、頻繁にデータを承認することができるように、トランスポートプロトコルの一部として、またはアプリケーションの一部として使用することができます。 LEDBATは、必要に応じて適切な拡張と、TCP、ストリーム制御伝送プロトコル（SCTP）、及びデータグラム輻輳制御プロトコル（DCCP）と共に使用することができます。それは、そのようなピア・ツー・ピア（P2P）アプリケーションのためのUDPの上に構築されたもののような独自のアプリケーションプロトコルと一緒に使用することができます。"
    },
    {
      "indent": 3,
      "text": "At the time of writing, the appropriate extensions for TCP, SCTP, or DCCP do not exist.",
      "ja": "執筆時点では、TCP、SCTP、またはDCCPのための適切な拡張子が存在しません。"
    },
    {
      "indent": 3,
      "text": "A number of configurable parameters exist in the LEDBAT specification: TARGET, which is the queuing delay target at which LEDBAT tries to operate, must be set to 100 ms or less. 'allowed_increase' (should be 1, must be greater than 0) limits the speed at which LEDBAT increases its rate. 'gain', which according to [RFC6817] \"MUST be set to 1 or less\" to avoid a faster ramp-up than TCP Reno, determines how quickly the sender responds to changes in queueing delay. Implementations may divide 'gain' into two parameters: one for increase and a possibly larger one for decrease. We call these parameters 'Gain_Inc' and 'Gain_Dec' here. 'Base_History' is the size of the list of measured base delays, and, according to [RFC6817], \"SHOULD be 10\". This list can be filtered using a 'Filter' function, which is not prescribed [RFC6817], that yields a list of size 'Current_Filter'. The initial and minimum congestion windows, 'Init_CWND' and 'Min_CWND', should both be 2.",
      "ja": "設定可能なパラメータの数がLEDBAT仕様で存在する：LEDBATが動作しようとした時にキューイング遅延の対象となるターゲットを、100ミリ秒以下に設定されなければなりません。 「allowed_increase」が（0より大きくなければならない、1であるべきである）LEDBATがその速度を増大する速度を制限します。 [RFC6817]によるTCPリノよりも速くランプアップを避けるために、「1以下に設定しなければならない」「ゲイン」は、送信者がキューイング遅延の変化にどのように応答するかを素早く決定します。増加および減少の可能性も大きいいずれかのいずれかの実装は、2つのパラメータに「利得」を分割してもよいです。私たちは、これらのパラメータ「Gain_Inc」と「ここGain_Dec」と呼んでいます。 「Base_History」は、測定ベース遅延のリストのサイズであり、そして、[RFC6817]によれば、「10であるべきです」。このリストは、[RFC6817]を規定されていない「フィルタ」機能を使用してフィルタリングすることができ、そのサイズのリストをもたらす「Current_Filter」。初期および最小輻輳ウィンドウ、「Init_CWND」と「Min_CWND」、両方が2でなければなりません。"
    },
    {
      "indent": 3,
      "text": "Regarding which of these parameters should be under control of an application, the possible range goes from exposing nothing on the one hand to considering everything that is not prescribed with a \"MUST\" in the specification as a parameter on the other hand. Function implementations are not provided as a parameter to any of the transport protocols discussed here; hence, we do not regard the",
      "ja": "アプリケーションの制御下である必要があり、これらのパラメータのどれに関しては、可能な範囲は、一方でパラメータとして明細書では「MUST」と規定されていないすべてのものを考慮する一方で何を露出していないから行きます。関数の実装は、ここで説明トランスポートプロトコルの任意のパラメータとして提供されていません。それゆえ、私たちは考えていません"
    },
    {
      "indent": 3,
      "text": "'Filter' function as a parameter. However, to avoid unnecessarily limiting future implementations, we consider all other parameters above as tunable parameters that should be exposed.",
      "ja": "パラメータとして「フィルター」機能。しかし、我々は公開されなければならないよう調整可能なパラメータの上に他のすべてのパラメータを検討し、将来の実装を制限する不必要に避けるために。"
    },
    {
      "indent": 0,
      "text": "4. Pass 2",
      "section_title": true,
      "ja": "4.パス2"
    },
    {
      "indent": 3,
      "text": "This pass categorizes the primitives from pass 1 based on whether they relate to a connection or to data transmission. Primitives are presented following the nomenclature \"CATEGORY.[SUBCATEGORY].PRIMITIVENAME.PROTOCOL\". The CATEGORY can be CONNECTION or DATA. Within the CONNECTION category, ESTABLISHMENT, AVAILABILITY, MAINTENANCE, and TERMINATION subcategories can be considered. The DATA category does not have any SUBCATEGORY. The PROTOCOL name \"UDP(-Lite)\" is used when primitives are equivalent for UDP and UDP-Lite; the PROTOCOL name \"TCP\" refers to both TCP and MPTCP. We present \"connection\" as a general protocol-independent concept and use it to refer to, e.g., TCP connections (identifiable by a unique pair of IP addresses and TCP port numbers), SCTP associations (identifiable by multiple IP address and port number pairs), as well UDP and UDP-Lite connections (identifiable by a unique socket pair).",
      "ja": "このパスは、それらが接続またはデータ送信に関連するかどうかに基づいて、パス1からプリミティブを分類します。プリミティブは、命名法以下の提示されている \"CATEGORY。[SUBCATEGORY] .PRIMITIVENAME.PROTOCOL\"。 CATEGORYは、接続またはデータとすることができます。接続カテゴリ内で、設立は、可用性、保守、および終了のサブカテゴリが考えられます。データカテゴリは、任意のサブカテゴリを持っていません。プリミティブはUDPとUDP-Liteの同等のときプロトコル名「UDP（-Lite）」は使用されています。プロトコル名「TCPは、」TCPおよびMPTCPの両方を意味します。私たちは、複数のIPアドレスとポート番号のペアにより識別（TCP接続（IPアドレスとTCPポート番号のユニークなペアにより識別）、SCTPアソシエーション、例えば、一般的なプロトコルに依存しない概念として、「接続」を提示し、参照するためにそれを使用します）、ならびにUDPとUDP-Liteの接続（一意のソケットのペアによって識別）。"
    },
    {
      "indent": 3,
      "text": "Some minor details are omitted for the sake of generalization -- e.g., SCTP's 'Close' [RFC4960] returns success or failure and lets the application control whether further receive or send operations, or both, are disabled [RFC6458]. This is not described in the same way for TCP [RFC0793], but these details play no significant role for the primitives provided by either TCP or SCTP (for the sake of being generic, it could be assumed that both receive and send operations are disabled in both cases).",
      "ja": "いくつかのマイナーな詳細は、一般化のために省略されている - 例えば、SCTPの「閉じる」[RFC4960]は、成功または失敗を返し、さらに受信または送信操作を、あるいはその両方が無効になって[RFC6458]であるかどうかをアプリケーション制御をすることができます。これは、TCP [RFC0793]についても同様に説明するが、これらの詳細は、TCPまたはSCTPのいずれかにより提供されるプリミティブのための重要な役割を果たしていないされていません（一般的なことのために、両方の受信と送信の操作無効になっていると仮定することができました両方の場合において）。"
    },
    {
      "indent": 3,
      "text": "The TCP 'Send' and 'Receive' primitives include usage of an 'urgent' parameter. This parameter controls a mechanism that is required to implement the \"synch signal\" used by telnet [RFC0854], but [RFC6093] states that \"new applications SHOULD NOT employ the TCP urgent mechanism.\" Because pass 2 is meant as a basis for the creation of future systems, the \"urgent\" mechanism is excluded. This also concerns the notification 'Urgent Pointer Advance' in the 'Error_Report' (Section 4.2.4.1 of [RFC1122]).",
      "ja": "TCP「送信」と「受信」プリミティブは「緊急」パラメータの使用が含まれます。このパラメータは、Telnetで使用される「同期信号」[RFC0854]が、[RFC6093]を実装する必要があり機構を制御する「新しいアプリケーションは、TCP緊急メカニズムを採用すべきではない。」と述べていますパス2は、将来のシステムを作成するための基礎として意図されているため、「緊急」のメカニズムは除外されます。これはまた、「ERROR_REPORT」（[RFC1122]のセクション4.2.4.1）で通知「緊急ポインタアドバンス」に関する。"
    },
    {
      "indent": 3,
      "text": "Since LEDBAT is a congestion control mechanism and not a protocol, it is not currently defined when to enable/disable or configure the mechanism. For instance, it could be a one-time choice upon connection establishment or when listening for incoming connections, in which case it should be categorized under CONNECTION.ESTABLISHMENT or CONNECTION.AVAILABILITY, respectively. To avoid unnecessarily limiting future implementations, it was decided to place it under CONNECTION.MAINTENANCE, with all parameters that are described in the specification [RFC6817] made configurable.",
      "ja": "LEDBATが輻輳制御機構としないプロトコルであるので、有効/無効または機構を構成するとき、それは、現在定義されていません。例えば、それは、それぞれ、CONNECTION.ESTABLISHMENT又はCONNECTION.AVAILABILITYに分類すべき場合には、コネクション確立時や着信接続を待機時のワンタイム選択、とすることができます。明細書に記載されているすべてのパラメータ[RFC6817]が設定可能にして、不必要に将来の実装を制限しないようにするには、それは、CONNECTION.MAINTENANCE下に配置することを決めました。"
    },
    {
      "indent": 0,
      "text": "4.1. CONNECTION-Related Primitives",
      "section_title": true,
      "ja": "4.1. 接続関連プリミティブ"
    },
    {
      "indent": 3,
      "text": "ESTABLISHMENT:",
      "ja": "確立："
    },
    {
      "indent": 3,
      "text": "Active creation of a connection from one transport endpoint to one or more transport endpoints. Interfaces to UDP and UDP-Lite allow both connection-oriented and connection-less usage of the API [RFC8085].",
      "ja": "一の以上のトランスポートエンドポイントに一つのトランスポートエンドポイントからの接続のアクティブ作成。 UDPとUDP-Liteのへのインタフェースは、接続指向およびAPI [RFC8085]のコネクションレスの使用の両方を可能にします。"
    },
    {
      "indent": 3,
      "text": "o CONNECT.TCP:",
      "ja": "O CONNECT.TCP："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Open' (active) or 'Open' (passive) with socket, followed by 'Send'",
      "ja": "ソケットと「開く」（アクティブ）または「開く」（受動的）、「送信」が続く：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Parameters: 1 local IP address (optional); 1 destination transport address (for active open; else the socket and the local IP address of the succeeding incoming connection request will be maintained); timeout (optional); options (optional); MKT configuration (optional); and user message (optional)",
      "ja": "パラメータ：1つのローカルIPアドレス（オプション）。 （アクティブオープンするため、他のソケットと後続の着信接続要求のローカルIPアドレスが維持される）1つの宛先トランスポートアドレス。タイムアウト（オプション）。 （オプション）オプション。 MKT構成（オプション）。そしてユーザメッセージ（オプション）"
    },
    {
      "indent": 6,
      "text": "Comments: if the local IP address is not provided, a default choice will automatically be made. The timeout can also be a retransmission count. The options are IP options to be used on all segments of the connection. At least the Source Route option is mandatory for TCP to provide. 'MKT configuration' refers to the ability to configure MKTs for authentication. The user message may be transmitted to the peer application immediately upon reception of the TCP SYN packet. To benefit from the lower latency this provides as part of the experimental TFO mechanism, its length must be at most the TCP's maximum segment size (minus TCP options used in the SYN). The message may also be delivered more than once to the application on the remote host.",
      "ja": "コメント：ローカルIPアドレスが提供されない場合、デフォルトの選択が自動的に行われます。タイムアウトはまた、再送回数もできます。オプションは、接続のすべてのセグメントで使用するIPオプションです。少なくとも、ソースルートオプションは、TCPが提供するのは必須です。 「MKT構成は」認証用MKTsを設定する能力を指します。ユーザ・メッセージは直ちにTCP SYNパケットを受信するピアアプリケーションに送信されても​​よいです。これは実験的なTFOメカニズムの一部として提供する低遅延の恩恵を受けるために、その長さは、ほとんどのTCPの最大セグメントサイズ（SYNに使用マイナスTCPオプション）でなければなりません。メッセージは、リモート・ホスト上のアプリケーションに複数回送達されてもよいです。"
    },
    {
      "indent": 3,
      "text": "o CONNECT.SCTP:",
      "ja": "O CONNECT.SCTP："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Initialize', followed by 'Enable/Disable Interleaving' (optional), followed by 'Associate'",
      "ja": "「初期化」、「アソシエイト」に続いて「有効/無効インタリーブ」（オプション）、続い：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Parameters: list of local SCTP port number / IP address pairs\n('Initialize'); one or several sockets (identifying the peer);\noutbound stream count; maximum allowed inbound stream count;\nadaptation layer indication (optional); chunk types required to be\nauthenticated (optional); request interleaving on/off; maximum number of INIT attempts (optional); maximum init.  RTO for INIT\n(optional); user message (optional); and remote UDP port number\n(optional)",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Returns: socket list or failure",
      "ja": "戻り値：ソケットリストまたは失敗"
    },
    {
      "indent": 6,
      "text": "Comments: 'Initialize' needs to be called only once per list of local SCTP port number / IP address pairs. One socket will automatically be chosen; it can later be changed in MAINTENANCE. The user message may be transmitted to the peer application immediately upon reception of the packet containing the COOKIE-ECHO chunk. To benefit from the lower latency this provides, its length must be limited such that it fits into the packet containing the COOKIE-ECHO chunk. If a remote UDP port number is provided, SCTP packets will be encapsulated in UDP.",
      "ja": "コメント：「初期化」はローカルSCTPポート番号/ IPアドレスのペアのリストごとに一度だけ呼び出す必要があります。一つのソケットが自動的に選択されます。それは後でMAINTENANCEに変更することができます。ユーザ・メッセージは直ちにCOOKIE-ECHOチャンクを含むパケットを受信するピアアプリケーションに送信されても​​よいです。これが提供する低レイテンシーの恩恵を受けるために、その長さは、COOKIE-ECHOチャンクを含むパケットに収まるように制限されなければなりません。リモートUDPポート番号が提供されている場合、SCTPパケットはUDPでカプセル化されます。"
    },
    {
      "indent": 3,
      "text": "o CONNECT.MPTCP:",
      "ja": "O CONNECT.MPTCP："
    },
    {
      "indent": 6,
      "text": "This is similar to CONNECT.TCP except for one additional boolean parameter that allows the ability to enable or disable MPTCP for a particular connection or socket (default: enabled).",
      "ja": "これは、特定の接続またはソケット（：有効デフォルト）MPTCPを有効または無効にする機能を可能にするもので、追加のブールパラメータを除きCONNECT.TCPに似ています。"
    },
    {
      "indent": 3,
      "text": "o CONNECT.UDP(-Lite):",
      "ja": "O CONNECT.UDP（-Lite）："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Connect' followed by 'Send'",
      "ja": "1プリミティブ/イベントを渡します：「接続」は「送信」が続きます"
    },
    {
      "indent": 6,
      "text": "Parameters: 1 local IP address (default (ANY) or specified); 1 destination transport address; 1 local port (default (OS chooses) or specified); and 1 destination port (default (OS chooses) or specified).",
      "ja": "パラメータ：1つのローカルIPアドレス（デフォルト（ANY）または指定されました）; 1つの宛先トランスポートアドレス。 1ローカルポート（デフォルト（OSを選択し）、または指定されました）。そして1つの宛先ポート（デフォルト（OSが選択されます）、または指定されました）。"
    },
    {
      "indent": 6,
      "text": "Comments: associates a transport address creating a UDP(-Lite) socket connection. This can be called again with a new transport address to create a new connection. The CONNECT function allows an application to receive errors from messages sent to a transport address.",
      "ja": "コメント：UDP（-Lite）ソケット接続を作成するトランスポートアドレスを関連付けます。これは、新しい接続を作成するために、新しいトランスポートアドレスで再度呼び出すことができます。 CONNECT機能は、トランスポート・アドレスに送信されたメッセージからエラーを受信するアプリケーションを可能にします。"
    },
    {
      "indent": 3,
      "text": "AVAILABILITY:",
      "ja": "可用性："
    },
    {
      "indent": 3,
      "text": "Preparing to receive incoming connection requests.",
      "ja": "着信接続要求を受信するための準備。"
    },
    {
      "indent": 3,
      "text": "o LISTEN.TCP:",
      "ja": "LISTEN.TCP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Open' (passive)",
      "ja": "「開く」（受動的）：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Parameters: 1 local IP address (optional); 1 socket (optional);\ntimeout (optional); buffer to receive a user message (optional);\nand MKT configuration (optional)",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Comments: if the socket and/or local IP address is provided, this waits for incoming connections from only and/or to only the provided address. Else this waits for incoming connections without this/these constraint(s). ESTABLISHMENT can later be performed with 'Send'. If a buffer is provided to receive a user message, a user message can be received from a TFO-enabled sender before the TCP's connection handshake is completed. This message may arrive multiple times. 'MKT configuration' refers to the ability to configure MKTs for authentication.",
      "ja": "コメント：ソケットおよび/またはローカルIPアドレスが提供されている場合、これが唯一および/またはのみ提供されたアドレスへの着信接続を待ちます。他これは、この/これらの制約（複数可）なしで着信接続を待ちます。設立は、後に「送信」を行うことができます。バッファがユーザメッセージを受信するために提供されている場合はTCPの接続のハンドシェイクが完了する前に、ユーザーのメッセージはTFO対応の送信者から受信することができます。このメッセージは、複数回に到着するかもしれません。 「MKT構成は」認証用MKTsを設定する能力を指します。"
    },
    {
      "indent": 3,
      "text": "o LISTEN.SCTP:",
      "ja": "LISTEN.SCTP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Initialize', followed by the 'Communication Up' or 'Restart' notification and possibly the 'Adaptation Layer' notification",
      "ja": "「初期化」、「コミュニケーションアップ」または「再起動」の通知と、おそらく「アダプテーションレイヤ」の通知が続く：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Parameters: list of local SCTP port number / IP address pairs (initialize)",
      "ja": "パラメータ：ローカルSCTPポート番号/ IPアドレスのペアのリスト（初期化）"
    },
    {
      "indent": 6,
      "text": "Returns: socket list; outbound stream count; inbound stream count;\nadaptation layer indication; chunks required to be authenticated;\nand interleaving supported on both sides yes/no",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Comments: 'Initialize' needs to be called only once per list of local SCTP port number / IP address pairs. 'Communication Up' can also follow a 'Communication Lost' notification, indicating that the lost communication is restored. If the peer has provided an adaptation layer indication, an 'Adaptation Layer' notification is issued.",
      "ja": "コメント：「初期化」はローカルSCTPポート番号/ IPアドレスのペアのリストごとに一度だけ呼び出す必要があります。 「コミュニケーションアップ」も失われた通信が復元されていることを示す、「コミュニケーションロスト」の通知に従うことができます。ピアがアダプテーション層指標を提供している場合、「アダプテーションレイヤ」通知が発行されます。"
    },
    {
      "indent": 3,
      "text": "o LISTEN.MPTCP:",
      "ja": "LISTEN.MPTCP O："
    },
    {
      "indent": 6,
      "text": "This is similar to LISTEN.TCP except for one additional boolean parameter that allows the ability to enable or disable MPTCP for a particular connection or socket (default: enabled).",
      "ja": "これは、特定の接続またはソケット（：有効デフォルト）MPTCPを有効または無効にする機能を可能にするもので、追加のブールパラメータを除きLISTEN.TCPに似ています。"
    },
    {
      "indent": 3,
      "text": "o LISTEN.UDP(-Lite):",
      "ja": "O LISTEN.UDP（-Lite）："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Receive'",
      "ja": "1プリミティブ/イベントを渡す：「受信」"
    },
    {
      "indent": 6,
      "text": "Parameters: 1 local IP address (default (ANY) or specified); 1 destination transport address; local port (default (OS chooses) or specified); and destination port (default (OS chooses) or specified)",
      "ja": "パラメータ：1つのローカルIPアドレス（デフォルト（ANY）または指定されました）; 1つの宛先トランスポートアドレス。ローカルポート（デフォルト（OSが選択されます）、または指定されました）;宛先ポート（デフォルト（OSが選択されます）、または指定されました）"
    },
    {
      "indent": 6,
      "text": "Comments: the 'Receive' function registers the application to listen for incoming UDP(-Lite) datagrams at an endpoint.",
      "ja": "コメント：「受信」機能は、エンドポイントでの着信UDP（-Lite）データグラムをリッスンするようにアプリケーションを登録します。"
    },
    {
      "indent": 3,
      "text": "MAINTENANCE:",
      "ja": "メンテナンス："
    },
    {
      "indent": 3,
      "text": "Adjustments made to an open connection, or notifications about it. These are out-of-band messages to the protocol that can be issued at any time, at least after a connection has been established and before it has been terminated (with one exception: CHANGE_TIMEOUT.TCP can only be issued for an open connection when DATA.SEND.TCP is called). In some cases, these primitives can also be immediately issued during ESTABLISHMENT or AVAILABILITY, without waiting for the connection to be opened (e.g., CHANGE_TIMEOUT.TCP can be done using TCP's 'Open' primitive). For UDP and UDP-Lite, these functions may establish a setting per connection but may also be changed per datagram message.",
      "ja": "オープン接続のための調整、またはそれに関する通知。 CHANGE_TIMEOUT.TCPは、ときにのみオープン接続のために発行することができます。これらは、接続が確立されていて、それが一つの例外を除いて（終了した前に、少なくとも後、任意の時点で発行することができプロトコルへのアウトオブバンドメッセージですDATA.SEND.TCP）が呼ばれています。いくつかのケースでは、これらのプリミティブは、またすぐに確立または可用性の間に発行することができ、オープンする接続を待たずに（例えば、CHANGE_TIMEOUT.TCPは、TCPの「開く」プリミティブを使用して行うことができます）。 UDPとUDP-Liteでは、これらの機能は、接続ごとに設定を確立することができるだけでなく、データグラムメッセージごとに変更することができます。"
    },
    {
      "indent": 3,
      "text": "o CHANGE_TIMEOUT.TCP:",
      "ja": "CHANGE_TIMEOUT.TCP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Open' or 'Send' combined with unspecified control of per-connection state variables",
      "ja": "「開く」または接続ごとの状態変数の不特定の制御と組み合わせて「送信」：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Parameters: timeout value (optional); adv_uto (optional); boolean uto_enabled (optional, default false); and boolean changeable (optional, default true)",
      "ja": "パラメータ：タイムアウト値（オプション）。 adv_uto（オプション）。ブールuto_enabled（オプション、デフォルトはfalse）;そしてブール変更可能（オプション、デフォルト真）"
    },
    {
      "indent": 6,
      "text": "Comments: when sending data, an application can adjust the connection's timeout value (the time after which the connection will be aborted if data could not be delivered). If 'uto_enabled' is true, the 'timeout value' (or, if provided, the value 'adv_uto') will be advertised for the TCP on the other side of the connection to adapt its own user timeout accordingly. 'uto_enabled' controls whether the UTO option is enabled for a connection. This applies to both sending and receiving. 'changeable' controls whether the user timeout may be changed based on a UTO option received from the other end of the connection; it becomes false when the 'timeout value' is used.",
      "ja": "コメント：データを送信するときに、アプリケーションが接続のタイムアウト値（データが配信できなかった場合は、接続が中断されるまでの時間）を調整することができます。 「uto_enabled」が真である場合、「タイムアウト値」（または、提供される場合、値「adv_uto」）は、それに応じて自身のユーザタイムアウトを適合させるために、接続の他方の側のTCPのためにアドバタイズされるであろう。 「uto_enabled」UTOオプションが接続のために有効になっているかどうかを制御します。これは、送信と受信の両方に適用されます。 「変更」ユーザのタイムアウト、接続のもう一方の端から受信UTOオプションに基づいて変更することができるかどうかを制御します。 「タイムアウト値」が使用されている場合はfalseになります。"
    },
    {
      "indent": 3,
      "text": "o CHANGE_TIMEOUT.SCTP:",
      "ja": "CHANGE_TIMEOUT.SCTP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Change Heartbeat' combined with 'Configure Max. Retransmissions of an Association'",
      "ja": "「チェンジハートビート」「設定マックスと組み合わせる：1プリミティブ/イベントを渡します。協会の再送"
    },
    {
      "indent": 6,
      "text": "Parameters: 'Change Heartbeat': heartbeat frequency and 'Configure Max. Retransmissions of an Association': Association.Max.Retrans",
      "ja": "パラメータ：「チェンジハートビート」：ハートビート周波数と「設定マックス。協会の再送：Association.Max.Retrans"
    },
    {
      "indent": 6,
      "text": "Comments: 'Change Heartbeat' can enable/disable heartbeats in SCTP as well as change their frequency. The parameter 'Association.Max.Retrans' defines after how many unsuccessful transmissions of any packets (including heartbeats) the association will be terminated; thus, these two primitives/ parameters together can yield a similar behavior for SCTP associations as CHANGE_TIMEOUT.TCP does for TCP connections.",
      "ja": "コメント：「チェンジハートビートは」有効/ SCTPでハートビートを無効にするだけでなく、その周波数を変更することができます。関連付けが終了しますどのように多くの（ハートビートを含む）すべてのパケットの送信失敗した後のパラメータ「Association.Max.Retrans」定義します。 CHANGE_TIMEOUT.TCPは、TCP接続の場合と同様にこのように、一緒にこれらの二つのプリミティブ/パラメータは、SCTPアソシエーションの同様の動作を得ることができます。"
    },
    {
      "indent": 3,
      "text": "o DISABLE_NAGLE.TCP:",
      "ja": "OのDISABLE_NAGLE.TCP："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: not specified",
      "ja": "1プリミティブ/イベントを渡します。指定されていません"
    },
    {
      "indent": 6,
      "text": "Parameters: one boolean value",
      "ja": "パラメータ：1つのブール値"
    },
    {
      "indent": 6,
      "text": "Comments: the Nagle algorithm delays data transmission to increase the chance of sending a full-sized segment. An application must be able to disable this algorithm for a connection.",
      "ja": "コメント：フルサイズセグメントを送信する可能性を高めるためにNagleアルゴリズム遅延のデータ伝送。アプリケーションは、接続のために、このアルゴリズムを無効にすることができなければなりません。"
    },
    {
      "indent": 3,
      "text": "o DISABLE_NAGLE.SCTP:",
      "ja": "OのDISABLE_NAGLE.SCTP："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Enable/Disable NoDelay'",
      "ja": "[有効/無効NODELAY '：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Parameters: one boolean value",
      "ja": "パラメータ：1つのブール値"
    },
    {
      "indent": 6,
      "text": "Comments: Nagle-like algorithms delay data transmission to increase the chance of sending a full-sized packet.",
      "ja": "コメント：ネーグルのようなアルゴリズムは、フルサイズのパケットを送信する機会を増やすために、データ伝送を遅らせます。"
    },
    {
      "indent": 3,
      "text": "o REQUEST_HEARTBEAT.SCTP:",
      "ja": "OのREQUEST_HEARTBEAT.SCTP："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Request Heartbeat'",
      "ja": "1プリミティブ/イベントを渡し：「リクエストハートビート」"
    },
    {
      "indent": 6,
      "text": "Parameters: socket",
      "ja": "パラメータ：ソケット"
    },
    {
      "indent": 6,
      "text": "Returns: success or failure",
      "ja": "戻り値：成功または失敗"
    },
    {
      "indent": 6,
      "text": "Comments: requests an immediate heartbeat on a path, returning success or failure.",
      "ja": "コメント：成功または失敗を返して、パス上の即時のハートビートを要求します。"
    },
    {
      "indent": 3,
      "text": "o ADD_PATH.MPTCP:",
      "ja": "ADD_PATH.MPTCP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: not specified",
      "ja": "1プリミティブ/イベントを渡します。指定されていません"
    },
    {
      "indent": 6,
      "text": "Parameters: local IP address and optionally the local port number",
      "ja": "パラメータ：ローカルIPアドレスと、必要に応じてローカルポート番号"
    },
    {
      "indent": 6,
      "text": "Comments: the application specifies the local IP address and port number that must be used for a new subflow.",
      "ja": "コメント：アプリケーションが新しいサブフローのために使用する必要がありますローカルIPアドレスとポート番号を指定します。"
    },
    {
      "indent": 3,
      "text": "o ADD_PATH.SCTP:",
      "ja": "ADD_PATH.SCTP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Change Local Address / Set Peer Primary'",
      "ja": "1プリミティブ/イベントを渡します：「ローカルアドレスを設定/変更は、プライマリピア」"
    },
    {
      "indent": 6,
      "text": "Parameters: local IP address",
      "ja": "パラメータ：ローカルIPアドレス"
    },
    {
      "indent": 3,
      "text": "o REM_PATH.MPTCP:",
      "ja": "REM_PATH.MPTCP："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: not specified",
      "ja": "1プリミティブ/イベントを渡します。指定されていません"
    },
    {
      "indent": 6,
      "text": "Parameters: local IP address; local port number; remote IP address; and remote port number",
      "ja": "パラメータ：ローカルIPアドレス。ローカルポート番号。リモートIPアドレス。リモートポート番号"
    },
    {
      "indent": 6,
      "text": "Comments: the application removes the subflow specified by the IP/ port-pair. The MPTCP implementation must trigger a removal of the subflow that belongs to this IP/port-pair.",
      "ja": "コメント：アプリケーションは、IP /ポートのペアで指定されたサブフローを削除します。 MPTCPの実装は、このIP /ポートのペアに属しサブフローの削除をトリガーする必要があります。"
    },
    {
      "indent": 3,
      "text": "o REM_PATH.SCTP:",
      "ja": "REM_PATH.SCTP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Change Local Address / Set Peer Primary'",
      "ja": "1プリミティブ/イベントを渡します：「ローカルアドレスを設定/変更は、プライマリピア」"
    },
    {
      "indent": 6,
      "text": "Parameters: local IP address",
      "ja": "パラメータ：ローカルIPアドレス"
    },
    {
      "indent": 3,
      "text": "o SET_PRIMARY.SCTP:",
      "ja": "SET_PRIMARY.SCTP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Set Primary'",
      "ja": "1プリミティブ/イベントを渡し：「プライマリ設定します」"
    },
    {
      "indent": 6,
      "text": "Parameters: socket",
      "ja": "パラメータ：ソケット"
    },
    {
      "indent": 6,
      "text": "Returns: result of attempting this operation",
      "ja": "戻り値：この操作を試みた結果"
    },
    {
      "indent": 6,
      "text": "Comments: update the current primary address to be used, based on the set of available sockets of the association.",
      "ja": "コメント：関連の利用可能なソケットのセットに基づいて、使用される現在のプライマリアドレスを更新します。"
    },
    {
      "indent": 3,
      "text": "o SET_PEER_PRIMARY.SCTP:",
      "ja": "SET_PEER_PRIMARY.SCTP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Change Local Address / Set Peer Primary'",
      "ja": "1プリミティブ/イベントを渡します：「ローカルアドレスを設定/変更は、プライマリピア」"
    },
    {
      "indent": 6,
      "text": "Parameters: local IP address",
      "ja": "パラメータ：ローカルIPアドレス"
    },
    {
      "indent": 6,
      "text": "Comments: this is only advisory for the peer.",
      "ja": "コメント：これは、ピアのための唯一の顧問です。"
    },
    {
      "indent": 3,
      "text": "o CONFIG_SWITCHOVER.SCTP:",
      "ja": "O CONFIG_SWITCHOVER.SCTP："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Configure Path Switchover'",
      "ja": "1プリミティブ/イベントを渡し：「パス切替を設定します」"
    },
    {
      "indent": 6,
      "text": "Parameters: primary max retrans (number of retransmissions after which a path is considered inactive) and PF max retrans (number of retransmissions after which a path is considered to be \"Potentially Failed\", and others will be preferably used) (optional)",
      "ja": "パラメータ：主要最大RETRANS（パスがアクティブでないとみなされた後再送回数）とPFの最大RETRANS（パスは「潜在的に失敗しました」していると考えられる、などが好適に使用されるまでの再送回数）（オプション）"
    },
    {
      "indent": 3,
      "text": "o STATUS.SCTP:",
      "ja": "STATUS.SCTP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Status', 'Enable/Disable Interleaving', and 'Network Status Change' notification",
      "ja": "「ステータス」、「有効化/無効化インタリーブ」、および「ネットワークステータス変更]通知：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Returns: data block with information about a specified association, containing: association connection state; destination transport address list; destination transport address reachability states; current local and peer receiver window sizes; current local congestion window sizes; number of unacknowledged DATA chunks; number of DATA chunks pending receipt; primary path; most recent SRTT on primary path; RTO on primary path; SRTT and RTO on other destination addresses; MTU per path; and interleaving supported yes/no",
      "ja": "戻り値：データを含む、指定された関連付けについての情報を有するブロック：関連接続状態。先輸送アドレスリスト。先のトランスポートアドレスの到達可能性の状態;現在のローカルピア受信ウィンドウサイズ。現在のローカル輻輳ウィンドウサイズ。未確認のDATAチャンクの数。領収書を保留中のDATAチャンクの数。プライマリパス;プライマリパスの最新SRTT。プライマリパス上のRTO。他の宛先アドレスにSRTTとRTO。パスごとのMTU;インターリーブは、YES / NOサポート"
    },
    {
      "indent": 6,
      "text": "Comments: the 'Network Status Change' notification informs the application about a socket becoming active/inactive; this only affects the programming style, as the same information is also available via 'Status'.",
      "ja": "コメント：「ネットワークステータスの変更]通知は、アクティブ/非アクティブになるソケットについてアプリケーションに通知し、同じ情報が「ステータス」を介しても利用可能であるとして、これはのみ、プログラミングスタイルに影響を与えます。"
    },
    {
      "indent": 3,
      "text": "o STATUS.MPTCP:",
      "ja": "STATUS.MPTCP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: not specified",
      "ja": "1プリミティブ/イベントを渡します。指定されていません"
    },
    {
      "indent": 6,
      "text": "Returns: list of pairs of tuples of IP address and TCP port number of each subflow. The first of the pair is the local IP and port number, while the second is the remote IP and port number.",
      "ja": "戻り値：IPアドレスと、各サブフローのTCPポート番号の組のペアのリスト。第二は、リモートIPアドレスとポート番号である一対の第一は、ローカルIPおよびポート番号です。"
    },
    {
      "indent": 3,
      "text": "o SET_DSCP.TCP:",
      "ja": "SET_DSCP.TCP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: not specified",
      "ja": "1プリミティブ/イベントを渡します。指定されていません"
    },
    {
      "indent": 6,
      "text": "Parameters: DSCP value",
      "ja": "パラメータ：DSCP値"
    },
    {
      "indent": 6,
      "text": "Comments: this allows an application to change the DSCP value for outgoing segments.",
      "ja": "コメント：これは、アプリケーションが発信セグメントのDSCP値を変更することができます。"
    },
    {
      "indent": 3,
      "text": "o SET_DSCP.SCTP:",
      "ja": "SET_DSCP.SCTP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Set DSCP value'",
      "ja": "「を設定DSCP値」：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Parameters: DSCP value",
      "ja": "パラメータ：DSCP値"
    },
    {
      "indent": 6,
      "text": "Comments: this allows an application to change the DSCP value for outgoing packets on a path.",
      "ja": "コメント：これは、アプリケーションがパス上の発信パケットのDSCP値を変更することができます。"
    },
    {
      "indent": 3,
      "text": "o SET_DSCP.UDP(-Lite):",
      "ja": "O SET_DSCP.UDP（-Lite）："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Set_DSCP'",
      "ja": "'Set_DSCP'：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Parameter: DSCP value",
      "ja": "パラメータ：DSCP値"
    },
    {
      "indent": 6,
      "text": "Comments: this allows an application to change the DSCP value for outgoing UDP(-Lite) datagrams. [RFC7657] and [RFC8085] provide current guidance on using this value with UDP.",
      "ja": "コメント：これは、アプリケーションが発信UDP（-Lite）データグラムのDSCP値を変更することができます。 [RFC7657]と[RFC8085]はUDPで、この値を使用しての現在のガイダンスを提供します。"
    },
    {
      "indent": 3,
      "text": "o ERROR.TCP:",
      "ja": "ERROR.TCP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Error_Report'",
      "ja": "'ERROR_REPORT'：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Returns: reason (encoding not specified) and subreason (encoding not specified)",
      "ja": "戻り値：理由（エンコーディングが指定されていない）とsubreason（エンコーディングが指定されていません）"
    },
    {
      "indent": 6,
      "text": "Comments: soft errors that can be ignored without harm by many applications; an application should be able to disable these notifications. The reported conditions include at least: ICMP error message arrived and excessive retransmissions.",
      "ja": "コメント：多くのアプリケーションによって害なしに無視することができるソフトエラー。アプリケーションは、これらの通知を無効にすることができるはずです。 ICMPエラーメッセージが到着し、過度の再送：報告されている条件は、少なくとも含まれています。"
    },
    {
      "indent": 3,
      "text": "o ERROR.UDP(-Lite):",
      "ja": "O ERROR.UDP（-Lite）："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Error_Report'",
      "ja": "'ERROR_REPORT'：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Returns: Error report",
      "ja": "戻り値：エラーレポート"
    },
    {
      "indent": 6,
      "text": "Comments: this returns soft errors that may be ignored without harm by many applications; an application must connect to be able receive these notifications.",
      "ja": "コメント：これは多くのアプリケーションで害なしに無視することができるソフトエラーを返します。アプリケーションは、これらの通知を受け取ることができるように接続する必要があります。"
    },
    {
      "indent": 3,
      "text": "o SET_AUTH.TCP:",
      "ja": "SET_AUTH.TCP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: not specified",
      "ja": "1プリミティブ/イベントを渡します。指定されていません"
    },
    {
      "indent": 6,
      "text": "Parameters: current_key and rnext_key",
      "ja": "パラメータ：current_keyとrnext_key"
    },
    {
      "indent": 6,
      "text": "Comments: current_key and rnext_key are the preferred outgoing MKT and the preferred incoming MKT, respectively, for a segment that is sent on the connection.",
      "ja": "コメント：current_keyとrnext_keyは、接続上で送信されたセグメントに対して、それぞれ、好ましく発信MKTおよび好ましい受信MKTあります。"
    },
    {
      "indent": 3,
      "text": "o SET_AUTH.SCTP:",
      "ja": "SET_AUTH.SCTP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Set/Get Authentication Parameters'",
      "ja": "「設定/取得認証パラメータ」：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Parameters: key_id; key; and hmac_id",
      "ja": "パラメータ：のkey_id。キー;そして、hmac_id"
    },
    {
      "indent": 3,
      "text": "o GET_AUTH.TCP:",
      "ja": "GET_AUTH.TCP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: not specified",
      "ja": "1プリミティブ/イベントを渡します。指定されていません"
    },
    {
      "indent": 6,
      "text": "Parameters: current_key and rnext_key",
      "ja": "パラメータ：current_keyとrnext_key"
    },
    {
      "indent": 6,
      "text": "Comments: current_key and rnext_key are the preferred outgoing MKT and the preferred incoming MKT, respectively, that were carried on a recently received segment.",
      "ja": "コメント：current_keyとrnext_keyは、最近受信したセグメント上で実施されたそれぞれの好ましい発信MKTおよび好ましい受信MKT、、です。"
    },
    {
      "indent": 3,
      "text": "o GET_AUTH.SCTP:",
      "ja": "GET_AUTH.SCTP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Set/Get Authentication Parameters'",
      "ja": "「設定/取得認証パラメータ」：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Parameters: key_id and chunk_list",
      "ja": "パラメータ：のkey_idとchunk_list"
    },
    {
      "indent": 3,
      "text": "o RESET_STREAM.SCTP:",
      "ja": "OのRESET_STREAM.SCTP："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Add/Reset Streams, Reset Association'",
      "ja": "1プリミティブ/イベントを渡します「を追加/ストリームをリセットして、協会をリセット」"
    },
    {
      "indent": 6,
      "text": "Parameters: sid and direction",
      "ja": "パラメータ：SIDと方向"
    },
    {
      "indent": 3,
      "text": "o RESET_STREAM-EVENT.SCTP:",
      "ja": "RESET_STREAM-EVENT.SCTP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Stream Reset' notification",
      "ja": "1プリミティブ/イベントを渡し：「ストリームのリセット」通知"
    },
    {
      "indent": 6,
      "text": "Parameters: information about the result of RESET_STREAM.SCTP",
      "ja": "パラメータ：RESET_STREAM.SCTPの結果についての情報"
    },
    {
      "indent": 6,
      "text": "Comments: this is issued when the procedure for resetting streams has completed.",
      "ja": "コメント：ストリームをリセットするための手続きが完了したとき、これが発行されます。"
    },
    {
      "indent": 3,
      "text": "o RESET_ASSOC.SCTP:",
      "ja": "OのRESET_ASSOC.SCTP："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Add/Reset Streams, Reset Association'",
      "ja": "1プリミティブ/イベントを渡します「を追加/ストリームをリセットして、協会をリセット」"
    },
    {
      "indent": 6,
      "text": "Parameters: information related to the extension, as defined in [RFC3260]",
      "ja": "パラメータ：[RFC3260]で定義されるように拡張に関連する情報、"
    },
    {
      "indent": 3,
      "text": "o RESET_ASSOC-EVENT.SCTP:",
      "ja": "RESET_ASSOC-EVENT.SCTP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Association Reset' notification",
      "ja": "協会のリセット \"通知：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Parameters: information about the result of RESET_ASSOC.SCTP",
      "ja": "パラメータ：RESET_ASSOC.SCTPの結果についての情報"
    },
    {
      "indent": 6,
      "text": "Comments: this is issued when the procedure for resetting an association has completed.",
      "ja": "コメント：関連付けをリセットするための手続きが完了したときにこれが発行されます。"
    },
    {
      "indent": 3,
      "text": "o ADD_STREAM.SCTP:",
      "ja": "ADD_STREAM.SCTP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Add/Reset Streams, Reset Association'",
      "ja": "1プリミティブ/イベントを渡します「を追加/ストリームをリセットして、協会をリセット」"
    },
    {
      "indent": 6,
      "text": "Parameters: number of outgoing and incoming streams to be added",
      "ja": "パラメータ：発信および着信ストリームの数を追加します"
    },
    {
      "indent": 3,
      "text": "o ADD_STREAM-EVENT.SCTP:",
      "ja": "ADD_STREAM-EVENT.SCTP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Stream Change' notification",
      "ja": "「ストリームの変更」通知：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Parameters: information about the result of ADD_STREAM.SCTP",
      "ja": "パラメータ：ADD_STREAM.SCTPの結果についての情報"
    },
    {
      "indent": 6,
      "text": "Comments: this is issued when the procedure for adding a stream has completed.",
      "ja": "コメント：ストリームを追加するための手順が完了したときにこれが発行されます。"
    },
    {
      "indent": 3,
      "text": "o SET_STREAM_SCHEDULER.SCTP:",
      "ja": "SET_STREAM_SCHEDULER.SCTP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Set Stream Scheduler'",
      "ja": "「SETストリームスケジューラ」：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Parameters: scheduler identifier",
      "ja": "パラメータ：スケジューラ識別子"
    },
    {
      "indent": 6,
      "text": "Comments: choice of First-Come, First-Served; Round-Robin; Round-Robin per Packet; Priority-Based; Fair Bandwidth; and Weighted Fair Queuing.",
      "ja": "コメント：先着順の選択。ラウンドロビン;パケットごとのラウンドロビン。優先順位に基づきます。公平な帯域幅;そして均等化キューイング。"
    },
    {
      "indent": 3,
      "text": "o CONFIGURE_STREAM_SCHEDULER.SCTP:",
      "ja": "O CONFIGURE_STREAM_SCHEDULER.SCTP："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Configure Stream Scheduler'",
      "ja": "「設定ストリームスケジューラ」：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Parameters: priority",
      "ja": "パラメータ：優先順位"
    },
    {
      "indent": 6,
      "text": "Comments: the priority value only applies when Priority-Based or Weighted Fair Queuing scheduling is chosen with SET_STREAM_SCHEDULER.SCTP. The meaning of the parameter differs between these two schedulers, but in both cases, it realizes some form of prioritization regarding how bandwidth is divided among streams.",
      "ja": "コメント：優先順位ベースまたは均等化キューイングスケジューリングはSET_STREAM_SCHEDULER.SCTPで選択された場合、優先度の値にのみ適用されます。パラメータの意味は、これら二つのスケジューラの間で異なりますが、どちらの場合には、それは帯域幅がストリームの間で分割する方法については、優先順位付けのいくつかのフォームを実現します。"
    },
    {
      "indent": 3,
      "text": "o SET_FLOWLABEL.SCTP:",
      "ja": "SET_FLOWLABEL.SCTP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Set IPv6 Flow Label'",
      "ja": "「設定したIPv6フローラベル」：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Parameters: flow label",
      "ja": "パラメータ：フローラベル"
    },
    {
      "indent": 6,
      "text": "Comments: this allows an application to change the IPv6 header's flow label field for outgoing packets on a path.",
      "ja": "コメント：これは、アプリケーションがパス上の発信パケットのIPv6ヘッダーのフローラベルフィールドを変更することができます。"
    },
    {
      "indent": 3,
      "text": "o AUTHENTICATION_NOTIFICATION-EVENT.SCTP:",
      "ja": "AUTHENTICATION_NOTIFICATION-EVENT.SCTP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Authentication' notification",
      "ja": "「認証」の通知：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Returns: information regarding key management",
      "ja": "鍵管理に関する情報：戻り値"
    },
    {
      "indent": 3,
      "text": "o CONFIG_SEND_BUFFER.SCTP:",
      "ja": "O CONFIG_SEND_BUFFER.SCTP："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Configure Send Buffer Size'",
      "ja": "1プリミティブ/イベントを渡し：「設定バッファサイズを送信」"
    },
    {
      "indent": 6,
      "text": "Parameters: size value in octets",
      "ja": "パラメータ：オクテットでサイズ値"
    },
    {
      "indent": 3,
      "text": "o CONFIG_RECEIVE_BUFFER.SCTP:",
      "ja": "O CONFIG_RECEIVE_BUFFER.SCTP："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Configure Receive Buffer Size'",
      "ja": "「設定受信バッファサイズを」：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Parameters: size value in octets",
      "ja": "パラメータ：オクテットでサイズ値"
    },
    {
      "indent": 6,
      "text": "Comments: this controls the receiver window.",
      "ja": "コメント：これは受信ウィンドウを制御します。"
    },
    {
      "indent": 3,
      "text": "o CONFIG_FRAGMENTATION.SCTP:",
      "ja": "O CONFIG_FRAGMENTATION.SCTP："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Configure Message Fragmentation'",
      "ja": "「設定メッセージの断片化」：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Parameters: one boolean value (enable/disable) and maximum fragmentation size (optional; default: PMTU)",
      "ja": "パラメータ：1つのブール値（有効/無効）と最大断片サイズ（オプション;デフォルト：PMTU）"
    },
    {
      "indent": 6,
      "text": "Comments: if fragmentation is enabled, messages exceeding the maximum fragmentation size will be fragmented. If fragmentation is disabled, trying to send a message that exceeds the maximum fragmentation size will produce an error.",
      "ja": "コメント：断片化が有効になっている場合は、最大のフラグメンテーションサイズを超えるメッセージが断片化されます。フラグメンテーションが無効になっている場合は、最大のフラグメンテーションサイズを超えるメッセージを送信しようとすると、エラーが生成されます。"
    },
    {
      "indent": 3,
      "text": "o CONFIG_PMTUD.SCTP:",
      "ja": "O CONFIG_PMTUD.SCTP："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Configure Path MTU Discovery'",
      "ja": "「設定のパスMTUディスカバリー」：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Parameters: one boolean value (PMTUD on/off) and PMTU value (optional)",
      "ja": "パラメータ：1つのブール値（オン/オフPMTUD）とPMTU値（オプション）"
    },
    {
      "indent": 6,
      "text": "Returns: PMTU value",
      "ja": "戻り値：PMTU値"
    },
    {
      "indent": 6,
      "text": "Comments: this returns a meaningful PMTU value when PMTUD is enabled (the boolean is true), and the PMTU value can be set if PMTUD is disabled (the boolean is false).",
      "ja": "コメント：これはPMTUDは（ブール値がfalse）（ブール値がtrueである）が有効になっている、とPMTUDが無効になっている場合PMTU値を設定することができ有意義なPMTU値を返します。"
    },
    {
      "indent": 3,
      "text": "o CONFIG_DELAYED_SACK.SCTP:",
      "ja": "O CONFIG_DELAYED_SACK.SCTP："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Configure Delayed SACK Timer'",
      "ja": "「設定遅延SACKタイマー」：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Parameters: one boolean value (delayed SACK on/off); timer value (optional); and number of packets to wait for (default 2)",
      "ja": "パラメータ：1つのブール値（オン/オフ遅れSACK）。タイマ値（オプション）。パケットの数は（デフォルト2）を待機します"
    },
    {
      "indent": 6,
      "text": "Comments: if delayed SACK is enabled, SCTP will send a SACK either upon receiving the provided number of packets or when the timer expires, whatever occurs first.",
      "ja": "コメント：遅れSACKが有効になっている場合、SCTPは、どちらかのタイマーが満了したときに、何が最初に発生またはパケットの提供数を受信すると、SACKを送信します。"
    },
    {
      "indent": 3,
      "text": "o CONFIG_RTO.SCTP:",
      "ja": "O CONFIG_RTO.SCTP："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Configure RTO Calculation'",
      "ja": "1プリミティブ/イベントを渡し：「RTOの計算を設定します」"
    },
    {
      "indent": 6,
      "text": "Parameters: init (optional); min (optional); and max (optional)",
      "ja": "パラメータ：INIT（オプション）。分（オプション）。そして、max（オプション）"
    },
    {
      "indent": 6,
      "text": "Comments: this adjusts the initial, minimum, and maximum RTO values.",
      "ja": "コメント：これは最初の、最小値、および最大RTO値を調整します。"
    },
    {
      "indent": 3,
      "text": "o SET_COOKIE_LIFE.SCTP:",
      "ja": "SET_COOKIE_LIFE.SCTP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Set Cookie Life Value'",
      "ja": "1プリミティブ/イベントを渡し：「設定されたCookieライフ値」"
    },
    {
      "indent": 6,
      "text": "Parameters: cookie life value",
      "ja": "パラメータ：クッキーの寿命値"
    },
    {
      "indent": 3,
      "text": "o SET_MAX_BURST.SCTP:",
      "ja": "SET_MAX_BURST.SCTP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Set Maximum Burst'",
      "ja": "「設定した最大バースト」：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Parameters: max burst value",
      "ja": "パラメータ：最大バースト値"
    },
    {
      "indent": 6,
      "text": "Comments: not all implementations allow values above the default of 4.",
      "ja": "コメント：いないすべての実装4のデフォルト上記の値を許可します。"
    },
    {
      "indent": 3,
      "text": "o SET_PARTIAL_DELIVERY_POINT.SCTP:",
      "ja": "SET_PARTIAL_DELIVERY_POINT.SCTP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Set Partial Delivery Point'",
      "ja": "1プリミティブ/イベントを渡し：「部分的な配信ポイントを設定します」"
    },
    {
      "indent": 6,
      "text": "Parameters: partial delivery point (integer)",
      "ja": "パラメータ：部分的送達点（整数）"
    },
    {
      "indent": 6,
      "text": "Comments: this parameter must be smaller or equal to the socket receive buffer size.",
      "ja": "コメント：このパラメータは、受信バッファサイズを小さくまたはソケットに等しくなければなりません。"
    },
    {
      "indent": 3,
      "text": "o SET_CHECKSUM_ENABLED.UDP:",
      "ja": "SET_CHECKSUM_ENABLED.UDP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Checksum_Enabled'",
      "ja": "'Checksum_Enabled'：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Parameters: 0 when zero checksum is used at sender, 1 for checksum at sender (default)",
      "ja": "パラメータ：0ゼロチェックサムは、送信側でチェックサムのために、送信者、1で使用されている（デフォルト）"
    },
    {
      "indent": 3,
      "text": "o SET_CHECKSUM_REQUIRED.UDP:",
      "ja": "SET_CHECKSUM_REQUIRED.UDP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Require_Checksum'",
      "ja": "'Require_Checksum'：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Parameter: 0 to allow zero checksum, 1 when a non-zero checksum is required (default) at the receiver",
      "ja": "パラメータ：0非ゼロチェックサムが受信機で（デフォルト）が必要である場合、ゼロチェックサム、1を可能にします"
    },
    {
      "indent": 3,
      "text": "o SET_CHECKSUM_COVERAGE.UDP-Lite:",
      "ja": "SET_CHECKSUM_COVERAGE.UDP-LiteのO："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Set_Checksum_Coverage'",
      "ja": "'Set_Checksum_Coverage'：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Parameters: coverage length at sender (default maximum coverage)",
      "ja": "パラメータ：送信者のカバレッジ長さ（デフォルトの最大のカバレッジ）"
    },
    {
      "indent": 3,
      "text": "o SET_MIN_CHECKSUM_COVERAGE.UDP-Lite:",
      "ja": "SET_MIN_CHECKSUM_COVERAGE.UDP-LiteのO："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Set_Min_Coverage'",
      "ja": "'Set_Min_Coverage'：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Parameter: coverage length at receiver (default minimum coverage)",
      "ja": "パラメータ：受信機でのカバレッジ長さ（デフォルトの最小のカバレッジ）"
    },
    {
      "indent": 3,
      "text": "o SET_DF.UDP(-Lite):",
      "ja": "Oのsetadaphaupa（ライト）："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive event: 'Set_DF'",
      "ja": "「Set_DF」：1プリミティブ・イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Parameter: 0 when DF is not set (default) in the IPv4 header, 1 when DF is set",
      "ja": "パラメータ：DFが設定されている場合0 DFは、IPv4ヘッダ、1（デフォルト）に設定されていません"
    },
    {
      "indent": 3,
      "text": "o GET_MMS_S.UDP(-Lite):",
      "ja": "O GET_MMS_S.UDP（-Lite）："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive event: 'Get_MM_S'",
      "ja": "「Get_MM_S」：1プリミティブ・イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Comments: this retrieves the maximum transport-message size that may be sent using a non-fragmented IP packet from the configured interface.",
      "ja": "コメント：これは、設定されたインターフェイスからの非断片化IPパケットを用いて送信することができる最大トランスポートメッセージのサイズを取得します。"
    },
    {
      "indent": 3,
      "text": "o GET_MMS_R.UDP(-Lite):",
      "ja": "O GET_MMS_R.UDP（-Lite）："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive event: 'Get_MMS_R'",
      "ja": "「Get_MMS_R」：1プリミティブ・イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Comments: this retrieves the maximum transport-message size that may be received from the configured interface.",
      "ja": "コメント：これは、構成されたインタフェースから受信することができる最大トランスポートメッセージのサイズを取得します。"
    },
    {
      "indent": 3,
      "text": "o SET_TTL.UDP(-Lite) (IPV6_UNICAST_HOPS):",
      "ja": "O SET_TTL.UDP（-Lite）（IPV6_UNICAST_HOPS）："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Set_TTL' and 'Set_IPV6_Unicast_Hops'",
      "ja": "'Set_TTL' と 'Set_IPV6_Unicast_Hops'：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Parameters: IPv4 TTL value or IPv6 Hop Count value",
      "ja": "パラメータ：IPv4のTTL値またはIPv6のホップカウント値"
    },
    {
      "indent": 6,
      "text": "Comments: this allows an application to change the IPv4 TTL of IPv6 Hop Count value for outgoing UDP(-Lite) datagrams.",
      "ja": "コメント：これは、発信UDP（-Lite）データグラムのIPv6ホップカウント値のIPv4のTTLを変更するアプリケーションを可能にします。"
    },
    {
      "indent": 3,
      "text": "o GET_TTL.UDP(-Lite) (IPV6_UNICAST_HOPS):",
      "ja": "O GET_TTL.UDP（-Lite）（IPV6_UNICAST_HOPS）："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Get_TTL' and 'Get_IPV6_Unicast_Hops'",
      "ja": "'Get_TTL' と 'Get_IPV6_Unicast_Hops'：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Returns: IPv4 TTL value or IPv6 Hop Count value",
      "ja": "戻り値：IPv4のTTL値またはIPv6のホップカウント値"
    },
    {
      "indent": 6,
      "text": "Comments: this allows an application to read the IPv4 TTL of the IPv6 Hop Count value from a received UDP(-Lite) datagram.",
      "ja": "コメント：これは、アプリケーションが受信したUDP（-Lite）データグラムからIPv6のホップカウント値のIPv4のTTLを読み取ることができます。"
    },
    {
      "indent": 3,
      "text": "o SET_ECN.UDP(-Lite):",
      "ja": "Oのsetaesinaupa（ライト）："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Set_ECN'",
      "ja": "'Set_ECN'：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Parameters: ECN value",
      "ja": "パラメータ：ECN値"
    },
    {
      "indent": 6,
      "text": "Comments: this allows a UDP(-Lite) application to set the Explicit Congestion Notification (ECN) code point field for outgoing UDP(-Lite) datagrams. It defaults to sending '00'.",
      "ja": "コメント：これは、発信UDP（-Lite）データグラムの明示的輻輳通知（ECN）コードポイントフィールドを設定するにはUDP（-Lite）適用を可能にします。それは「00」を送信するデフォルト。"
    },
    {
      "indent": 3,
      "text": "o GET_ECN.UDP(-Lite):",
      "ja": "O GET_ECN.UDP（-Lite）："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Get_ECN'",
      "ja": "'Get_ECN'：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Parameters: ECN value",
      "ja": "パラメータ：ECN値"
    },
    {
      "indent": 6,
      "text": "Comments: this allows a UDP(-Lite) application to read the ECN code point field from a received UDP(-Lite) datagram.",
      "ja": "コメント：これは、受信されたUDP（-Lite）データグラムからECNコードポイントフィールドを読み取るためのUDP（-Lite）アプリケーションを可能にします。"
    },
    {
      "indent": 3,
      "text": "o SET_IP_OPTIONS.UDP(-Lite):",
      "ja": "O SET_IP_OPTIONS.UDP（-Lite）："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Set_IP_Options'",
      "ja": "'Set_IP_Options'：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Parameters: options",
      "ja": "パラメータ：オプション"
    },
    {
      "indent": 6,
      "text": "Comments: this allows a UDP(-Lite) application to set IP options for outgoing UDP(-Lite) datagrams. These options can at least be the Source Route, Record Route, and Timestamp option.",
      "ja": "コメント：これは、発信UDP（-Lite）データグラムのIPオプションを設定するにはUDP（-Lite）適用を可能にします。これらのオプションは、少なくともソースルート、経路記録、およびタイムスタンプオプションをすることができます。"
    },
    {
      "indent": 3,
      "text": "o GET_IP_OPTIONS.UDP(-Lite):",
      "ja": "O GET_IP_OPTIONS.UDP（-Lite）："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Get_IP_Options'",
      "ja": "'Get_IP_Options'：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Returns: options",
      "ja": "戻り値：オプション"
    },
    {
      "indent": 6,
      "text": "Comments: this allows a UDP(-Lite) application to receive any IP options that are contained in a received UDP(-Lite) datagram.",
      "ja": "コメント：これは、受信したUDP（-Lite）データグラムに含まれている任意のIPオプションを受信するUDP（-Lite）適用を可能にします。"
    },
    {
      "indent": 3,
      "text": "o CONFIGURE.LEDBAT:",
      "ja": "O CONFIGURE.LEDBAT："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: N/A",
      "ja": "1プリミティブ/イベントを渡し：N / A"
    },
    {
      "indent": 6,
      "text": "Parameters: enable (boolean); target; allowed_increase; gain_inc; gain_dec; base_history; current_filter; init_cwnd; and min_cwnd",
      "ja": "パラメータ：（boolean）を有効にします。ターゲット; allowed_increase; gain_inc; gain_dec; base_history; current_filter; init_cwnd;そして、min_cwnd"
    },
    {
      "indent": 6,
      "text": "Comments: 'enable' is a newly invented parameter that enables or disables the whole LEDBAT service.",
      "ja": "コメント：「有効」は全体LEDBATサービスを有効または無効に新たに発明するパラメータです。"
    },
    {
      "indent": 3,
      "text": "TERMINATION:",
      "ja": "終了："
    },
    {
      "indent": 3,
      "text": "Gracefully or forcefully closing a connection or being informed about this event happening.",
      "ja": "正常または強制的に接続を閉じるか、このイベントが起こって知らされています。"
    },
    {
      "indent": 3,
      "text": "o CLOSE.TCP:",
      "ja": "CLOSE.TCP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Close'",
      "ja": "「閉じる」：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Comments: this terminates the sending side of a connection after reliably delivering all remaining data.",
      "ja": "コメント：これは確実に残りのすべてのデータを配信した後、接続の送信側を終了します。"
    },
    {
      "indent": 3,
      "text": "o CLOSE.SCTP:",
      "ja": "CLOSE.SCTP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Shutdown'",
      "ja": "「シャットダウン」：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Comments: this terminates a connection after reliably delivering all remaining data.",
      "ja": "コメント：これは確実に残りのすべてのデータを配信した後、接続を終了します。"
    },
    {
      "indent": 3,
      "text": "o ABORT.TCP:",
      "ja": "ABORT.TCP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Abort'",
      "ja": "1プリミティブ/イベントを渡す：「中止」"
    },
    {
      "indent": 6,
      "text": "Comments: this terminates a connection without delivering remaining data and sends an error message to the other side.",
      "ja": "コメント：これは、残りのデータを配信せずに接続を終了し、他方の側にエラーメッセージを送信します。"
    },
    {
      "indent": 3,
      "text": "o ABORT.SCTP:",
      "ja": "ABORT.SCTP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Abort'",
      "ja": "1プリミティブ/イベントを渡す：「中止」"
    },
    {
      "indent": 6,
      "text": "Parameters: abort reason to be given to the peer (optional)",
      "ja": "パラメータ：ピア（オプション）に与えられる理由をアボート"
    },
    {
      "indent": 6,
      "text": "Comments: this terminates a connection without delivering remaining data and sends an error message to the other side.",
      "ja": "コメント：これは、残りのデータを配信せずに接続を終了し、他方の側にエラーメッセージを送信します。"
    },
    {
      "indent": 3,
      "text": "o ABORT.UDP(-Lite):",
      "ja": "O ABORT.UDP（-Lite）："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive event: 'Close'",
      "ja": "1プリミティブ・イベントを渡します。「閉じます」"
    },
    {
      "indent": 6,
      "text": "Comments: this terminates a connection without delivering remaining data. No further UDP(-Lite) datagrams are sent/received for this transport service instance.",
      "ja": "コメント：これは、残りのデータを配信せずに接続を終了します。さらなるUDP（-Lite）データグラムは、このトランスポート・サービス・インスタンスの受信/送信されません。"
    },
    {
      "indent": 3,
      "text": "o TIMEOUT.TCP:",
      "ja": "OのTIMEOUT.TCP："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'User Timeout' event",
      "ja": "1プリミティブ/イベントを渡し：「ユーザーのタイムアウト」イベント"
    },
    {
      "indent": 6,
      "text": "Comments: the application is informed that the connection is aborted. This event is executed on expiration of the timeout set in CONNECTION.ESTABLISHMENT.CONNECT.TCP (possibly adjusted in CONNECTION.MAINTENANCE.CHANGE_TIMEOUT.TCP).",
      "ja": "コメント：アプリケーションは、接続が中断されたことを知らされます。このイベントは、（おそらくCONNECTION.MAINTENANCE.CHANGE_TIMEOUT.TCPで調整）CONNECTION.ESTABLISHMENT.CONNECT.TCPに設定されたタイムアウトの満了で実行されます。"
    },
    {
      "indent": 3,
      "text": "o TIMEOUT.SCTP:",
      "ja": "TIMEOUT.SCTP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Communication Lost' event",
      "ja": "「コミュニケーションロスト」イベント：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Comments: the application is informed that the connection is aborted. This event is executed on expiration of the timeout that should be enabled by default (see the beginning of Section 8.3 in [RFC4960]) and was possibly adjusted in CONNECTION.MAINTENANCE.CHANGE_TIMEOOUT.SCTP.",
      "ja": "コメント：アプリケーションは、接続が中断されたことを知らされます。このイベントは、デフォルトで有効にする必要があり、タイムアウトの満了上で実行される（[RFC4960]でセクション8.3の始まりを参照）、おそらくCONNECTION.MAINTENANCE.CHANGE_TIMEOOUT.SCTPに調整しました。"
    },
    {
      "indent": 3,
      "text": "o ABORT-EVENT.TCP:",
      "ja": "O ABORT-EVENT.TCP："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: not specified",
      "ja": "1プリミティブ/イベントを渡します。指定されていません"
    },
    {
      "indent": 3,
      "text": "o ABORT-EVENT.SCTP:",
      "ja": "O ABORT-EVENT.SCTP："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Communication Lost' event",
      "ja": "「コミュニケーションロスト」イベント：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Returns: abort reason from the peer (if available)",
      "ja": "戻り値：（利用可能な場合）ピアから理由を中止"
    },
    {
      "indent": 6,
      "text": "Comments: the application is informed that the other side has aborted the connection using CONNECTION.TERMINATION.ABORT.SCTP.",
      "ja": "コメント：アプリケーションは、他の側はCONNECTION.TERMINATION.ABORT.SCTPを使用して接続を中止されたことが通知されます。"
    },
    {
      "indent": 3,
      "text": "o CLOSE-EVENT.TCP:",
      "ja": "CLOSE-EVENT.TCP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: not specified",
      "ja": "1プリミティブ/イベントを渡します。指定されていません"
    },
    {
      "indent": 3,
      "text": "o CLOSE-EVENT.SCTP:",
      "ja": "CLOSE-EVENT.SCTP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Shutdown Complete' event",
      "ja": "1プリミティブ/イベントを渡し：「シャットダウンコンプリート」イベント"
    },
    {
      "indent": 6,
      "text": "Comments: the application is informed that CONNECTION.TERMINATION.CLOSE.SCTP was successfully completed.",
      "ja": "コメント：アプリケーションがCONNECTION.TERMINATION.CLOSE.SCTPが正常に完了したことを知らされます。"
    },
    {
      "indent": 0,
      "text": "4.2. DATA-Transfer-Related Primitives",
      "section_title": true,
      "ja": "4.2. データ転送関連のプリミティブ"
    },
    {
      "indent": 3,
      "text": "All primitives in this section refer to an existing connection, i.e., a connection that was either established or made available for receiving data (although this is optional for the primitives of UDP(-Lite)). In addition to the listed parameters, all sending primitives contain a reference to a data block, and all receiving primitives contain a reference to available buffer space for the data. Note that CONNECT.TCP and LISTEN.TCP in the ESTABLISHMENT and AVAILABILITY categories also allow to transfer data (an optional user message) before the connection is fully established.",
      "ja": "このセクションのすべてのプリミティブは、既存の接続、すなわち、いずれかの確立された、または（これはUDP（-Lite）のプリミティブのためのオプションであるが）データを受信するために利用可能にされた接続を指します。列挙されたパラメータに加えて、すべての送信プリミティブは、データブロックへの参照を含む、すべての受信プリミティブは、データのために使用可能なバッファ空間への参照を含みます。 CONNECT.TCPとLISTEN.TCP確立におよび可用性のカテゴリは、接続が完全に確立される前に、データ（オプションのユーザメッセージ）を転送することを可能にすることに留意されたいです。"
    },
    {
      "indent": 3,
      "text": "o SEND.TCP:",
      "ja": "SEND.TCP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Send'",
      "ja": "1プリミティブ/イベントを渡し：「送信」"
    },
    {
      "indent": 6,
      "text": "Parameters: timeout (optional); current_key (optional); and rnext_key (optional)",
      "ja": "パラメータ：タイムアウト（オプション）。 current_key（オプション）。そしてrnext_key（オプション）"
    },
    {
      "indent": 6,
      "text": "Comments: this gives TCP a data block for reliable transmission to the TCP on the other side of the connection. The timeout can be configured with this call (see also CONNECTION.MAINTENANCE.CHANGE_TIMEOUT.TCP). 'current_key' and 'rnext_key' are authentication parameters that can be configured with this call (see also CONNECTION.MAINTENANCE.SET_AUTH.TCP).",
      "ja": "コメント：これはTCPにコネクションの反対側のTCPへの信頼性の高い伝送のためのデータ・ブロックを提供します。タイムアウトがこの呼び出しで設定することができます（また、CONNECTION.MAINTENANCE.CHANGE_TIMEOUT.TCPを参照してください）。 「current_key」と「rnext_key」はこのコール（もCONNECTION.MAINTENANCE.SET_AUTH.TCPを参照）で構成することができ、認証パラメータです。"
    },
    {
      "indent": 3,
      "text": "o SEND.SCTP:",
      "ja": "SEND.SCTP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Send'",
      "ja": "1プリミティブ/イベントを渡し：「送信」"
    },
    {
      "indent": 6,
      "text": "Parameters: stream number; context (optional); socket (optional);\nunordered flag (optional); no-bundle flag (optional); payload\nprotocol-id (optional); pr-policy (optional) pr-value (optional);\nsack-immediately flag (optional); and key-id (optional)",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Comments: this gives SCTP a data block for transmission to the SCTP on the other side of the connection (SCTP association). The 'stream number' denotes the stream to be used. The 'context' number can later be used to refer to the correct message when an error is reported. The 'socket' can be used to state which path should be preferred, if there are multiple paths available (see also CONNECTION.MAINTENANCE.SETPRIMARY.SCTP). The data block can be delivered out of order if the 'unordered' flag is set. The 'no-bundle flag' can be set to indicate a preference to avoid bundling. The 'payload protocol-id' is a number that will, if provided, be handed over to the receiving application. Using pr-policy and pr-value, the level of reliability can be controlled. The 'sack-immediately' flag can be used to indicate that the peer should not delay the sending of a SACK corresponding to the provided user message. If specified, the provided key-id is used for authenticating the user message.",
      "ja": "コメント：これは、SCTPを接続（SCTPアソシエーション）の反対側にSCTPへの伝送のためにデータブロックを与えます。 「ストリーム番号」は、使用するストリームを示しています。 「コンテキスト」の数は、後でエラーが報告されるときに正しいメッセージを参照するために使用することができます。 「ソケット」（またCONNECTION.MAINTENANCE.SETPRIMARY.SCTP参照）利用可能な複数のパスが存在する場合、好ましいすべき経路述べるのに使用することができます。 「無秩序」フラグがセットされている場合、データブロックは、順不同で送達することができます。 「非バンドルフラグが」結束を回避する嗜好を示すように設定することができます。 「ペイロードプロトコルID」は、提供されている場合、受信側アプリケーションに渡さされる数です。 PR-ポリシーおよびPR-値を使用して、信頼性のレベルを制御することができます。 「袋直ちに」フラグは、ピアが提供されたユーザー・メッセージに対応するSACKの送信を遅らせるべきではないことを示すために使用することができます。指定した場合、提供される鍵IDは、ユーザ・メッセージを認証するために使用されます。"
    },
    {
      "indent": 3,
      "text": "o SEND.UDP(-Lite):",
      "ja": "O SEND.UDP（-Lite）："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Send'",
      "ja": "1プリミティブ/イベントを渡し：「送信」"
    },
    {
      "indent": 6,
      "text": "Parameters: IP address and port number of the destination endpoint (optional if connected)",
      "ja": "パラメータ：宛先エンドポイントのIPアドレスとポート番号（オプション接続されている場合）"
    },
    {
      "indent": 6,
      "text": "Comments: this provides a message for unreliable transmission using UDP(-Lite) to the specified transport address. The IP address and port number may be omitted for connected UDP(-Lite) sockets. All CONNECTION.MAINTENANCE.SET_*.UDP(-Lite) primitives apply per message sent.",
      "ja": "コメント：これは指定されたトランスポートアドレスにUDP（-Lite）を使用して、信頼できない送信用のメッセージを提供します。 IPアドレスとポート番号は、接続されたUDP（-Lite）ソケットのために省略されてもよいです。すべてのCONNECTION.MAINTENANCE.SET _ *。UDP（-Lite）プリミティブは、送信されたメッセージごとに適用されます。"
    },
    {
      "indent": 3,
      "text": "o RECEIVE.TCP:",
      "ja": "OのRECEIVE.TCP："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Receive'",
      "ja": "1プリミティブ/イベントを渡す：「受信」"
    },
    {
      "indent": 6,
      "text": "Parameters: current_key (optional) and rnext_key (optional)",
      "ja": "パラメータ：current_key（別売）とrnext_key（オプション）"
    },
    {
      "indent": 6,
      "text": "Comments: 'current_key' and 'rnext_key' are authentication parameters that can be read with this call (see also CONNECTION.MAINTENANCE.GET_AUTH.TCP).",
      "ja": "コメント：「current_key」と「rnext_keyは」（もCONNECTION.MAINTENANCE.GET_AUTH.TCPを参照してください）このコールで読み取ることができる認証パラメータです。"
    },
    {
      "indent": 3,
      "text": "o RECEIVE.SCTP:",
      "ja": "OのRECEIVE.SCTP："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Data Arrive' notification, followed by 'Receive'",
      "ja": "「受信」に続いて、通知を「データが到着」：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Parameters: stream number (optional)",
      "ja": "パラメータ：ストリーム番号（オプション）"
    },
    {
      "indent": 6,
      "text": "Returns: stream sequence number (optional) and partial flag (optional)",
      "ja": "戻り値：ストリーム・シーケンス番号（オプション）と部分フラグ（オプション）"
    },
    {
      "indent": 6,
      "text": "Comments: if the 'stream number' is provided, the call to receive only receives data on one particular stream. If a partial message arrives, this is indicated by the 'partial flag', and then the 'stream sequence number' must be provided such that an application can restore the correct order of data blocks that comprise an entire message.",
      "ja": "コメント：「ストリーム数」が提供されている場合、受信するための呼び出しが唯一の特定のストリーム上のデータを受け取ります。部分的なメッセージが到着した場合、これは「部分的なフラグ」によって示され、そして次に「ストリーム・シーケンス番号」は、アプリケーションがメッセージ全体を含むデータブロックの正しい順序を復元することができるように提供されなければなりません。"
    },
    {
      "indent": 3,
      "text": "o RECEIVE.UDP(-Lite):",
      "ja": "O RECEIVE.UDP（-Lite）："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Receive'",
      "ja": "1プリミティブ/イベントを渡す：「受信」"
    },
    {
      "indent": 6,
      "text": "Parameters: buffer for received datagram",
      "ja": "パラメータ：受信したデータグラムのためのバッファ"
    },
    {
      "indent": 6,
      "text": "Comments: all CONNECTION.MAINTENANCE.GET_*.UDP(-Lite) primitives apply per message received.",
      "ja": "コメント：すべてのCONNECTION.MAINTENANCE.GET _ * UDP（-Lite）プリミティブは、受信したメッセージごとに適用されます。"
    },
    {
      "indent": 3,
      "text": "o SENDFAILURE-EVENT.SCTP:",
      "ja": "SENDFAILURE-EVENT.SCTP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Send Failure' notification, optionally followed by 'Receive Unsent Message' or 'Receive Unacknowledged Message'",
      "ja": "1プリミティブ/イベントを渡します。必要に応じて続い通知を、「失敗を送る」「未送信のメッセージを受信」や「未確認のメッセージが表示されます」"
    },
    {
      "indent": 6,
      "text": "Returns: cause code; context; and unsent or unacknowledged message (optional)",
      "ja": "戻り値：原因コード。状況;そして未送信または未確認メッセージ（オプション）"
    },
    {
      "indent": 6,
      "text": "Comments: 'cause code' indicates the reason of the failure, and 'context' is the context number if such a number has been provided in DATA.SEND.SCTP, for later use with 'Receive Unsent Message' or 'Receive Unacknowledged Message', respectively. These primitives can be used to retrieve the unsent or unacknowledged message (or part of the message, in case a part was delivered) if desired.",
      "ja": "コメント：「原因コード」失敗の理由を示し、「コンテキスト」は「未送信のメッセージを受信」や「未確認のメッセージが表示される」ように番号が付き、後の使用のために、DATA.SEND.SCTPで提供されている場合は、コンテキスト番号です、それぞれ。所望であれば、これらのプリミティブは、（場合に一部が配信された、またはメッセージの一部）、未送信または未確認メッセージを取得するために使用することができます。"
    },
    {
      "indent": 3,
      "text": "o SEND_FAILURE.UDP(-Lite):",
      "ja": "O SEND_FAILURE.UDP（-Lite）："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Send'",
      "ja": "1プリミティブ/イベントを渡し：「送信」"
    },
    {
      "indent": 6,
      "text": "Comments: this may be used to probe for the effective PMTU when using in combination with the 'MAINTENANCE.SET_DF' primitive.",
      "ja": "コメント：これは「MAINTENANCE.SET_DF」原始的と組み合わせて使用​​する場合に有効PMTUのためにプローブするために使用することができます。"
    },
    {
      "indent": 3,
      "text": "o SENDER_DRY-EVENT.SCTP:",
      "ja": "SENDER_DRY-EVENT.SCTP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Sender Dry' notification",
      "ja": "1プリミティブ/イベントを渡し：「差出人ドライ」通知"
    },
    {
      "indent": 6,
      "text": "Comments: this informs the application that the stack has no more user data to send.",
      "ja": "コメント：これはスタックが送信するためにこれ以上のユーザデータを持つアプリケーションに通知します。"
    },
    {
      "indent": 3,
      "text": "o PARTIAL_DELIVERY_ABORTED-EVENT.SCTP:",
      "ja": "PARTIAL_DELIVERY_ABORTED-EVENT.SCTP O："
    },
    {
      "indent": 6,
      "text": "Pass 1 primitive/event: 'Partial Delivery Aborted' notification",
      "ja": "「中止に一部配達」通知：1プリミティブ/イベントを渡します"
    },
    {
      "indent": 6,
      "text": "Comments: this informs the receiver of a partial message that the further delivery of the message has been aborted.",
      "ja": "コメント：これは、メッセージのさらなる配信が中断された部分的なメッセージの受信を通知します。"
    },
    {
      "indent": 0,
      "text": "5. Pass 3",
      "section_title": true,
      "ja": "5.パス3"
    },
    {
      "indent": 3,
      "text": "This section presents the superset of all transport features in all protocols that were discussed in the preceding sections, based on the list of primitives in pass 2 but also on text in pass 1 to include transport features that can be configured in one protocol and are static properties in another (congestion control, for example). Again, some minor details are omitted for the sake of generalization -- e.g., TCP may provide various different IP options, but only source route is mandatory to implement, and this detail is not visible in the pass 3 transport feature \"Specify IP options\". As before, \"UDP(-Lite)\" represents both UDP and UDP-Lite, and \"TCP\" refers to both TCP and MPTCP.",
      "ja": "このセクションでは、一つのプロトコルで構成され、静的であることができるトランスポート機能を含むように、パス2におけるプリミティブのリストになく、パス1のテキストに基づいて、前のセクションで説明したすべてのプロトコルですべてのトランスポート機能のスーパーセットを提供します別のプロパティ（例えば、輻輳制御）。ここでも、いくつかのマイナーな詳細が一般化のために省略されている - 例えば、TCPは、様々な異なるIPオプションを提供することができるが、唯一のソースルートを実装するために必須であり、この詳細は、パス3のトランスポート機能に表示されていない「IPオプションを指定します」 。前と同じように、 \"UDP（-Lite）は、\" UDPとUDP-Liteの両方を表し、 \"TCPは、\" TCPおよびMPTCPの両方を意味します。"
    },
    {
      "indent": 0,
      "text": "5.1. CONNECTION-Related Transport Features",
      "section_title": true,
      "ja": "5.1. 接続関連のトランスポート機能"
    },
    {
      "indent": 3,
      "text": "ESTABLISHMENT: Active creation of a connection from one transport endpoint to one or more transport endpoints.",
      "ja": "設立：一の以上のトランスポートエンドポイントに一つのトランスポートエンドポイントからの接続のアクティブ作成。"
    },
    {
      "indent": 3,
      "text": "o Connect Protocols: TCP, SCTP, and UDP(-Lite)",
      "ja": "O接続プロトコル：TCP、SCTP、およびUDP（-Lite）"
    },
    {
      "indent": 3,
      "text": "o Specify which IP options must always be used Protocols: TCP and UDP(-Lite)",
      "ja": "TCPとUDP（-Lite）：O IPオプションは常にプロトコルを使用しなければならないかを指定"
    },
    {
      "indent": 3,
      "text": "o Request multiple streams Protocols: SCTP",
      "ja": "SCTP：O複数のストリームプロトコルをリクエスト"
    },
    {
      "indent": 3,
      "text": "o Limit the number of inbound streams Protocols: SCTP",
      "ja": "SCTP：Oインバウンドストリームプロトコルの数を制限"
    },
    {
      "indent": 3,
      "text": "o Specify number of attempts and/or timeout for the first establishment message Protocols: TCP and SCTP",
      "ja": "TCPとSCTP：O試行及び/又は第一確立メッセージプロトコルのタイムアウトの数を指定"
    },
    {
      "indent": 3,
      "text": "o Obtain multiple sockets Protocols: SCTP",
      "ja": "SCTP：O複数のソケットプロトコルを取得"
    },
    {
      "indent": 3,
      "text": "o Disable MPTCP Protocols: MPTCP",
      "ja": "Oを無効MPTCPプロトコル：MPTCP"
    },
    {
      "indent": 3,
      "text": "o Configure authentication Protocols: TCP and SCTP Comments: with TCP, this allows the configuration of MKTs. In SCTP, this allows the specification of which chunk types must always be authenticated. DATA, ACK, etc., are different 'chunks' in SCTP; one or more chunks may be included in a single packet.",
      "ja": "Oの設定認証プロトコル：TCPとSCTPのコメント：TCPで、これはMKTsを設定できます。 SCTPでは、これはチャンクタイプは常に認証しなくてはならなくなるのを指定できます。 DATA、ACKなどは、SCTPにおける異なる「チャンク」であり、一つ以上のチャンクは一つのパケットに含まれていてもよいです。"
    },
    {
      "indent": 3,
      "text": "o Indicate an Adaptation Layer (via an adaptation code point) Protocols: SCTP",
      "ja": "Oプロトコル（適応コードポイントを介して）アダプテーションレイヤを示しますSCTP"
    },
    {
      "indent": 3,
      "text": "o Request to negotiate interleaving of user messages Protocols: SCTP",
      "ja": "ユーザメッセージプロトコルのインターリーブを交渉するO要求：SCTP"
    },
    {
      "indent": 3,
      "text": "o Hand over a message to reliably transfer (possibly multiple times) before connection establishment Protocols: TCP",
      "ja": "TCP：確実コネクション確立プロトコルの前に（おそらく複数回）転送するメッセージを引き渡すO"
    },
    {
      "indent": 3,
      "text": "o Hand over a message to reliably transfer during connection establishment Protocols: SCTP",
      "ja": "SCTP：O確実に接続確立プロトコル中に転送するメッセージを引き渡します"
    },
    {
      "indent": 3,
      "text": "o Enable UDP encapsulation with a specified remote UDP port number Protocols: SCTP",
      "ja": "SCTPます。o指定されたリモートUDPポート番号プロトコルとUDPカプセル化を有効にします"
    },
    {
      "indent": 3,
      "text": "AVAILABILITY:",
      "ja": "可用性："
    },
    {
      "indent": 3,
      "text": "Preparing to receive incoming connection requests.",
      "ja": "着信接続要求を受信するための準備。"
    },
    {
      "indent": 3,
      "text": "o Listen, 1 specified local interface Protocols: TCP, SCTP, and UDP(-Lite)",
      "ja": "TCP、SCTP、およびUDP（-Lite）：O、1つの指定されたローカルインタフェースプロトコルを聞きます"
    },
    {
      "indent": 3,
      "text": "o Listen, N specified local interfaces Protocols: SCTP",
      "ja": "O聞く、Nはローカルインタフェースプロトコルを指定：SCTP"
    },
    {
      "indent": 3,
      "text": "o Listen, all local interfaces Protocols: TCP, SCTP, and UDP(-Lite)",
      "ja": "TCP、SCTP、およびUDP（-Lite）：O、すべてのローカルインターフェイスのプロトコルを聞きます"
    },
    {
      "indent": 3,
      "text": "o Obtain requested number of streams Protocols: SCTP",
      "ja": "SCTP：Oストリームプロトコルの要求数を取得"
    },
    {
      "indent": 3,
      "text": "o Limit the number of inbound streams Protocols: SCTP",
      "ja": "SCTP：Oインバウンドストリームプロトコルの数を制限"
    },
    {
      "indent": 3,
      "text": "o Specify which IP options must always be used Protocols: TCP and UDP(-Lite)",
      "ja": "TCPとUDP（-Lite）：O IPオプションは常にプロトコルを使用しなければならないかを指定"
    },
    {
      "indent": 3,
      "text": "o Disable MPTCP Protocols: MPTCP",
      "ja": "Oを無効MPTCPプロトコル：MPTCP"
    },
    {
      "indent": 3,
      "text": "o Configure authentication Protocols: TCP and SCTP Comments: with TCP, this allows the configuration of MKTs. In SCTP, this allows the specification of which chunk types must always be authenticated. DATA, ACK, etc., are different 'chunks' in SCTP; one or more chunks may be included in a single packet.",
      "ja": "Oの設定認証プロトコル：TCPとSCTPのコメント：TCPで、これはMKTsを設定できます。 SCTPでは、これはチャンクタイプは常に認証しなくてはならなくなるのを指定できます。 DATA、ACKなどは、SCTPにおける異なる「チャンク」であり、一つ以上のチャンクは一つのパケットに含まれていてもよいです。"
    },
    {
      "indent": 3,
      "text": "o Indicate an Adaptation Layer (via an adaptation code point) Protocols: SCTP",
      "ja": "Oプロトコル（適応コードポイントを介して）アダプテーションレイヤを示しますSCTP"
    },
    {
      "indent": 3,
      "text": "MAINTENANCE:",
      "ja": "メンテナンス："
    },
    {
      "indent": 3,
      "text": "Adjustments made to an open connection, or notifications about it.",
      "ja": "オープン接続のための調整、またはそれに関する通知。"
    },
    {
      "indent": 3,
      "text": "o Change timeout for aborting connection (using retransmit limit or time value) Protocols: TCP and SCTP",
      "ja": "（再送制限または時間値を使用して）接続プロトコルを中止するためのO変更タイムアウト：TCPとSCTP"
    },
    {
      "indent": 3,
      "text": "o Suggest timeout to the peer Protocols: TCP",
      "ja": "Oピア・プロトコルにタイムアウトを提案する：TCPを"
    },
    {
      "indent": 3,
      "text": "o Disable Nagle algorithm Protocols: TCP and SCTP",
      "ja": "Oを無効にNagleアルゴリズムプロトコル：TCPとSCTP"
    },
    {
      "indent": 3,
      "text": "o Request an immediate heartbeat, returning success/failure Protocols: SCTP",
      "ja": "O成功/失敗のプロトコルを返して、すぐにハートビートをリクエスト：SCTPを"
    },
    {
      "indent": 3,
      "text": "o Notification of excessive retransmissions (early warning below abortion threshold) Protocols: TCP",
      "ja": "過度の再送信（妊娠中絶の閾値未満の早期警告）プロトコルのO通知：TCP"
    },
    {
      "indent": 3,
      "text": "o Add path Protocols: MPTCP and SCTP MPTCP Parameters: source-IP; source-Port; destination-IP; and destination-Port SCTP Parameters: local IP address",
      "ja": "Oパスのプロトコルを追加します。MPTCPとSCTP MPTCPパラメータ：source-IP;ソースポート。宛先IP;そして、宛先ポートSCTPパラメータ：ローカルIPアドレス"
    },
    {
      "indent": 3,
      "text": "o Remove path Protocols: MPTCP and SCTP MPTCP Parameters: source-IP; source-Port; destination-IP; and destination-Port SCTP Parameters: local IP address",
      "ja": "Oパスのプロトコルを削除します。MPTCPとSCTP MPTCPパラメータ：source-IP;ソースポート。宛先IP;そして、宛先ポートSCTPパラメータ：ローカルIPアドレス"
    },
    {
      "indent": 3,
      "text": "o Set primary path Protocols: SCTP",
      "ja": "SCTP：Oプライマリパスプロトコルを設定します。"
    },
    {
      "indent": 3,
      "text": "o Suggest primary path to the peer Protocols: SCTP",
      "ja": "SCTP：Oピアプロトコルにプライマリパスを提案"
    },
    {
      "indent": 3,
      "text": "o Configure Path Switchover Protocols: SCTP",
      "ja": "O設定パス切り替えプロトコル：SCTP"
    },
    {
      "indent": 3,
      "text": "o Obtain status (query or notification) Protocols: SCTP and MPTCP SCTP parameters: association connection state; destination transport address list; destination transport address reachability states; current local and peer receiver window sizes; current local congestion window sizes; number of unacknowledged DATA chunks; number of DATA chunks pending receipt; primary path; most recent SRTT on primary path; RTO on primary path; SRTT and RTO on other destination addresses; MTU per path; and interleaving supported yes/no MPTCP parameters: subflow-list (identified by source-IP; source-Port; destination-IP; and destination-Port)",
      "ja": "SCTPとMPTCP SCTPパラメータ：O（クエリまたは通知）プロトコルステータスを取得関連付け接続状態を、先輸送アドレスリスト。先のトランスポートアドレスの到達可能性の状態;現在のローカルピア受信ウィンドウサイズ。現在のローカル輻輳ウィンドウサイズ。未確認のDATAチャンクの数。領収書を保留中のDATAチャンクの数。プライマリパス;プライマリパスの最新SRTT。プライマリパス上のRTO。他の宛先アドレスにSRTTとRTO。パスごとのMTU;そして、インタリーブはサポートはい/いいえMPTCPパラメータ：サブフロー・リスト（ソースIPで識別される、ソースポート、宛先IP、および宛先ポート）"
    },
    {
      "indent": 3,
      "text": "o Specify DSCP field Protocols: TCP, SCTP, and UDP(-Lite)",
      "ja": "TCP、SCTP、およびUDP（-Lite）：O DSCPフィールドプロトコルを指定します"
    },
    {
      "indent": 3,
      "text": "o Notification of ICMP error message arrival Protocols: TCP and UDP(-Lite)",
      "ja": "ICMPエラーメッセージの到着プロトコルのO通知：TCPとUDP（-Lite）"
    },
    {
      "indent": 3,
      "text": "o Change authentication parameters Protocols: TCP and SCTP",
      "ja": "TCPとSCTP：O認証パラメータプロトコルを変更"
    },
    {
      "indent": 3,
      "text": "o Obtain authentication information Protocols: TCP and SCTP",
      "ja": "TCPとSCTPます。o認証情報プロトコルを入手"
    },
    {
      "indent": 3,
      "text": "o Reset Stream Protocols: SCTP",
      "ja": "Oストリームプロトコルをリセットします。SCTP"
    },
    {
      "indent": 3,
      "text": "o Notification of Stream Reset Protocols: STCP",
      "ja": "ストリームをリセットプロトコルのO通知：STCP"
    },
    {
      "indent": 3,
      "text": "o Reset Association Protocols: SCTP",
      "ja": "O協会プロトコルをリセットします。SCTP"
    },
    {
      "indent": 3,
      "text": "o Notification of Association Reset Protocols: STCP",
      "ja": "協会リセットプロトコルのO通知：STCP"
    },
    {
      "indent": 3,
      "text": "o Add Streams Protocols: SCTP",
      "ja": "Oストリームプロトコルを追加します。SCTP"
    },
    {
      "indent": 3,
      "text": "o Notification of Added Stream Protocols: STCP",
      "ja": "追加されたストリームプロトコルのO通知：STCP"
    },
    {
      "indent": 3,
      "text": "o Choose a scheduler to operate between streams of an association Protocols: SCTP",
      "ja": "O関連プロトコルのストリーム間で動作するスケジューラを選択します。SCTP"
    },
    {
      "indent": 3,
      "text": "o Configure priority or weight for a scheduler Protocols: SCTP",
      "ja": "Oスケジューラプロトコルの優先順位やウェイトを設定します。SCTP"
    },
    {
      "indent": 3,
      "text": "o Specify IPv6 flow label field Protocols: SCTP",
      "ja": "OのIPv6フローラベルフィールドのプロトコルを指定します。SCTP"
    },
    {
      "indent": 3,
      "text": "o Configure send buffer size Protocols: SCTP",
      "ja": "Oの設定は、バッファサイズのプロトコルを送る：SCTPを"
    },
    {
      "indent": 3,
      "text": "o Configure receive buffer (and rwnd) size Protocols: SCTP",
      "ja": "SCTP：Oの設定は、バッファ（及びRWND）サイズプロトコルを受けます"
    },
    {
      "indent": 3,
      "text": "o Configure message fragmentation Protocols: SCTP",
      "ja": "SCTP：Oメッセージの断片化プロトコルを設定"
    },
    {
      "indent": 3,
      "text": "o Configure PMTUD Protocols: SCTP",
      "ja": "設定PMTUDプロトコル○：SCTP"
    },
    {
      "indent": 3,
      "text": "o Configure delayed SACK timer Protocols: SCTP",
      "ja": "Oの設定遅れSACKタイマープロトコル：SCTP"
    },
    {
      "indent": 3,
      "text": "o Set Cookie life value Protocols: SCTP",
      "ja": "Oクッキーライフ値プロトコルを設定します。SCTP"
    },
    {
      "indent": 3,
      "text": "o Set maximum burst Protocols: SCTP",
      "ja": "SCTP：O最大バーストプロトコルを設定します。"
    },
    {
      "indent": 3,
      "text": "o Configure size where messages are broken up for partial delivery Protocols: SCTP",
      "ja": "メッセージは、部分配信プロトコルのために分割されているOの設定サイズ：SCTP"
    },
    {
      "indent": 3,
      "text": "o Disable checksum when sending Protocols: UDP",
      "ja": "プロトコルを送信する際、Oチェックサムを無効にする：UDPを"
    },
    {
      "indent": 3,
      "text": "o Disable checksum requirement when receiving Protocols: UDP",
      "ja": "プロトコルを受信したときにOチェックサム要件を無効にする：UDPを"
    },
    {
      "indent": 3,
      "text": "o Specify checksum coverage used by the sender Protocols: UDP-Lite",
      "ja": "O送信者のプロトコルで使用されるチェックサム適用範囲を指定：UDP-Liteの"
    },
    {
      "indent": 3,
      "text": "o Specify minimum checksum coverage required by receiver Protocols: UDP-Lite",
      "ja": "O受信プロトコルで必要な最小のチェックサム適用範囲を指定：UDP-Liteの"
    },
    {
      "indent": 3,
      "text": "o Specify DF field Protocols: UDP(-Lite)",
      "ja": "O DFフィールドプロトコルを指定します：UDP（-Lite）"
    },
    {
      "indent": 3,
      "text": "o Get max. transport-message size that may be sent using a non-fragmented IP packet from the configured interface Protocols: UDP(-Lite)",
      "ja": "O最大を取得します。構成インタフェースプロトコルからの非断片化IPパケットを用いて送信することができるトランスポートメッセージサイズ：UDP（-Lite）"
    },
    {
      "indent": 3,
      "text": "o Get max. transport-message size that may be received from the configured interface Protocols: UDP(-Lite)",
      "ja": "O最大を取得します。構成インタフェースプロトコルから受信することができるトランスポートメッセージサイズ：UDP（-Lite）"
    },
    {
      "indent": 3,
      "text": "o Specify TTL/Hop Count field Protocols: UDP(-Lite)",
      "ja": "O TTL /ホップカウントフィールドプロトコルを指定します：UDP（-Lite）"
    },
    {
      "indent": 3,
      "text": "o Obtain TTL/Hop Count field Protocols: UDP(-Lite)",
      "ja": "O TTL /ホップカウントフィールドプロトコルを取得します。UDP（-Lite）"
    },
    {
      "indent": 3,
      "text": "o Specify ECN field Protocols: UDP(-Lite)",
      "ja": "O ECNフィールドプロトコルを指定します：UDP（-Lite）"
    },
    {
      "indent": 3,
      "text": "o Obtain ECN field Protocols: UDP(-Lite)",
      "ja": "O ECNフィールドプロトコルを取得します。UDP（-Lite）"
    },
    {
      "indent": 3,
      "text": "o Specify IP options Protocols: UDP(-Lite)",
      "ja": "O IPオプションのプロトコルを指定します：UDP（-Lite）"
    },
    {
      "indent": 3,
      "text": "o Obtain IP options Protocols: UDP(-Lite)",
      "ja": "O IPオプションのプロトコルを取得します。UDP（-Lite）"
    },
    {
      "indent": 3,
      "text": "o Enable and configure \"Low Extra Delay Background Transfer\" Protocols: A protocol implementing the LEDBAT congestion control mechanism",
      "ja": "O「低余分な遅延のバックグラウンド転送」プロトコルを有効にし、設定します。LEDBATの輻輳制御機構を実装するプロトコル"
    },
    {
      "indent": 3,
      "text": "TERMINATION:",
      "ja": "終了："
    },
    {
      "indent": 3,
      "text": "Gracefully or forcefully closing a connection, or being informed about this event happening.",
      "ja": "正常または強制的に接続を閉じる、またはこのイベントが起こって知らされています。"
    },
    {
      "indent": 3,
      "text": "o Close after reliably delivering all remaining data, causing an event informing the application on the other side Protocols: TCP and SCTP Comments: a TCP endpoint locally only closes the connection for sending; it may still receive data afterwards.",
      "ja": "O閉じる確実に相手側のプロトコル上のアプリケーションを知らせるイベント引き起こし、残りのすべてのデータを配信した後：TCPとSCTPコメント：TCPエンドポイントは、ローカルにのみ送信するための接続を閉じします。それはまだ、その後データを受信することができます。"
    },
    {
      "indent": 3,
      "text": "o Abort without delivering remaining data, causing an event that informs the application on the other side Protocols: TCP and SCTP",
      "ja": "TCPとSCTP：O中止反対側プロトコルにアプリケーションに通知イベントを引き起こし、残りのデータを配信せずに"
    },
    {
      "indent": 6,
      "text": "Comments: in SCTP, a reason can optionally be given by the application on the aborting side, which can then be received by the application on the other side.",
      "ja": "コメント：SCTP、必要に応じて、他の側のアプリケーションによって受信することができる中止側のアプリケーション、で与えられる理由です。"
    },
    {
      "indent": 3,
      "text": "o Abort without delivering remaining data, not causing an event that informs the application on the other side Protocols: UDP(-Lite)",
      "ja": "Oアボート反対側プロトコルにアプリケーションに通知するイベントが発生しない、残りのデータを配信せず：UDP（-Lite）"
    },
    {
      "indent": 3,
      "text": "o Timeout event when data could not be delivered for too long Protocols: TCP and SCTP Comments: the timeout is configured with CONNECTION.MAINTENANCE \"Change timeout for aborting connection (using retransmit limit or time value)\".",
      "ja": "Oデータが長すぎるのプロトコルで配信することができませんでしたタイムアウトイベント：TCPとSCTPコメント：タイムアウトがCONNECTION.MAINTENANCE「接続を中止する（再送制限や時間値を使用して）ための変更のタイムアウト」で設定されています。"
    },
    {
      "indent": 0,
      "text": "5.2. DATA-Transfer-Related Transport Features",
      "section_title": true,
      "ja": "5.2. データ転送関連のトランスポート機能"
    },
    {
      "indent": 3,
      "text": "All transport features in this section refer to an existing connection, i.e., a connection that was either established or made available for receiving data. Note that TCP allows the transfer of data (a single optional user message, possibly arriving multiple times) before the connection is fully established. Reliable data transfer entails delay -- e.g., for the sender to wait until it can transmit data or due to retransmission in case of packet loss.",
      "ja": "このセクションのすべてのトランスポート機能は、既存の接続、すなわち、いずれかの確立やデータを受信するために利用可能にされた接続を指します。接続が完全に確立される前に、TCPは、（おそらくは複数回到着、単一オプションのユーザメッセージ）データの転送を可能にすることに留意されたいです。信頼性の高いデータ転送遅延を伴う - 例えば、それはパケット損失の場合にデータを送信または再送信に起因することができるまで、送信者が待機します。"
    },
    {
      "indent": 0,
      "text": "5.2.1. Sending Data",
      "section_title": true,
      "ja": "5.2.1. データの送信"
    },
    {
      "indent": 3,
      "text": "All transport features in this section are provided by DATA.SEND from pass 2. DATA.SEND is given a data block from the application, which here we call a \"message\" if the beginning and end of the data block can be identified at the receiver, and \"data\" otherwise.",
      "ja": "このセクションのすべてのトランスポート機能は、データブロックの最初と最後がで識別することができれば、我々は「メッセージ」と呼んで、ここでのアプリケーションからのデータブロックを、与えられたパス2 DATA.SENDからDATA.SENDによって提供されています受信機、およびそれ以外の場合は、「データ」。"
    },
    {
      "indent": 3,
      "text": "o Reliably transfer data, with congestion control Protocols: TCP",
      "ja": "O確実輻輳制御プロトコルで、データを転送：TCPを"
    },
    {
      "indent": 3,
      "text": "o Reliably transfer a message, with congestion control Protocols: SCTP",
      "ja": "SCTP：O確実輻輳制御プロトコルでメッセージを転送します"
    },
    {
      "indent": 3,
      "text": "o Unreliably transfer a message, with congestion control Protocols: SCTP",
      "ja": "SCTP：O信頼できない輻輳制御プロトコルでメッセージを転送します"
    },
    {
      "indent": 3,
      "text": "o Unreliably transfer a message, without congestion control Protocols: UDP(-Lite)",
      "ja": "O信頼できない輻輳制御プロトコルなしで、メッセージを転送：UDP（-Lite）"
    },
    {
      "indent": 3,
      "text": "o Configurable Message Reliability Protocols: SCTP",
      "ja": "O設定可能なメッセージの信頼性プロトコル：SCTP"
    },
    {
      "indent": 3,
      "text": "o Choice of stream Protocols: SCTP",
      "ja": "ストリームプロトコルのO選択：SCTP"
    },
    {
      "indent": 3,
      "text": "o Choice of path (destination address) Protocols: SCTP",
      "ja": "Oパスの選択（送信先アドレス）プロトコル：SCTP"
    },
    {
      "indent": 3,
      "text": "o Ordered message delivery (potentially slower than unordered) Protocols: SCTP",
      "ja": "O順序メッセージ配信（順不同よりも潜在的に遅い）プロトコル：SCTP"
    },
    {
      "indent": 3,
      "text": "o Unordered message delivery (potentially faster than ordered) Protocols: SCTP and UDP(-Lite)",
      "ja": "O順不同メッセージ配信（潜在的に速くよりも命じた）プロトコル：SCTPとUDP（-Lite）"
    },
    {
      "indent": 3,
      "text": "o Request not to bundle messages Protocols: SCTP",
      "ja": "SCTP：Oリクエストメッセージプロトコルをバンドルしません"
    },
    {
      "indent": 3,
      "text": "o Specifying a 'payload protocol-id' (handed over as such by the receiver) Protocols: SCTP",
      "ja": "プロトコル（受信機によってそのように引き渡さ）「ペイロードプロトコル-ID」を指定O：SCTP"
    },
    {
      "indent": 3,
      "text": "o Specifying a key identifier to be used to authenticate a message Protocols: SCTP",
      "ja": "SCTP：メッセージプロトコルを認証するために使用されるキー識別子を指定するO"
    },
    {
      "indent": 3,
      "text": "o Request not to delay the acknowledgement (SACK) of a message Protocols: SCTP",
      "ja": "SCTP：O要求肯定応答メッセージプロトコルの（SACK）を遅延させません"
    },
    {
      "indent": 0,
      "text": "5.2.2. Receiving Data",
      "section_title": true,
      "ja": "5.2.2. データ受信中"
    },
    {
      "indent": 3,
      "text": "All transport features in this section are provided by DATA.RECEIVE from pass 2. DATA.RECEIVE fills a buffer provided by the application, with what here we call a \"message\" if the beginning and end of the data block can be identified at the receiver, and \"data\" otherwise.",
      "ja": "このセクションのすべてのトランスポート機能は、パス2 DATA.RECEIVEからDATA.RECEIVEによって提供されたデータブロックの最初と最後がで識別することができれば、我々は「メッセージ」と呼ぶここで何して、アプリケーションが提供するバッファを埋めます受信機、およびそれ以外の場合は、「データ」。"
    },
    {
      "indent": 3,
      "text": "o Receive data (with no message delimiting) Protocols: TCP",
      "ja": "TCP：O（メッセージなしの区切りで）プロトコルデータを受信"
    },
    {
      "indent": 3,
      "text": "o Receive a message Protocols: SCTP and UDP(-Lite)",
      "ja": "Oメッセージプロトコルを受信：SCTPとUDP（-Lite）"
    },
    {
      "indent": 3,
      "text": "o Choice of stream to receive from Protocols: SCTP",
      "ja": "ストリームの選択Oプロトコルから受信する：SCTPを"
    },
    {
      "indent": 3,
      "text": "o Information about partial message arrival Protocols: SCTP Comments: in SCTP, partial messages are combined with a stream sequence number so that the application can restore the correct order of data blocks an entire message consists of.",
      "ja": "O部分的メッセージ到着プロトコルに関する情報：SCTPコメント：アプリケーションは、メッセージ全体がから成るデータブロックの正しい順序を復元できるようにSCTPに、部分的メッセージは、ストリーム・シーケンス番号と組み合わされます。"
    },
    {
      "indent": 0,
      "text": "5.2.3. Errors",
      "section_title": true,
      "ja": "5.2.3. エラー"
    },
    {
      "indent": 3,
      "text": "This section describes sending failures that are associated with a specific call to DATA.SEND from pass 2.",
      "ja": "このセクションでは、パス2からDATA.SENDに特定のコールに関連付けられている障害を送信記述する。"
    },
    {
      "indent": 3,
      "text": "o Notification of an unsent (part of a) message Protocols: SCTP and UDP(-Lite)",
      "ja": "Oメッセージプロトコル未送信（Aの部分）の通知：SCTP及びUDP（-Lite）"
    },
    {
      "indent": 3,
      "text": "o Notification of an unacknowledged (part of a) message Protocols: SCTP",
      "ja": "メッセージプロトコル未確認（Aの部分）のO通知：SCTP"
    },
    {
      "indent": 3,
      "text": "o Notification that the stack has no more user data to send Protocols: SCTP",
      "ja": "スタックはプロトコルを送信するためにこれ以上のユーザデータを持っていないO通知：SCTP"
    },
    {
      "indent": 3,
      "text": "o Notification to a receiver that a partial message delivery has been aborted Protocols: SCTP",
      "ja": "部分的なメッセージ配信のプロトコルを中止されたことを受信機に通知O：SCTP"
    },
    {
      "indent": 0,
      "text": "6. IANA Considerations",
      "section_title": true,
      "ja": "6. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "This document does not require any IANA actions.",
      "ja": "このドキュメントは、IANAのアクションを必要としません。"
    },
    {
      "indent": 0,
      "text": "7. Security Considerations",
      "section_title": true,
      "ja": "7.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "Authentication, confidentiality protection, and integrity protection are identified as transport features [RFC8095]. These transport features are generally provided by a protocol or layer on top of the transport protocol; none of the transport protocols considered in this document provides these transport features on its own. Therefore, these transport features are not considered in this document, with the exception of native authentication capabilities of TCP and SCTP for which the security considerations in [RFC5925] and [RFC4895] apply.",
      "ja": "認証、機密性保護、および完全性保護は、トランスポート機能[RFC8095]として識別されています。これらの輸送機能は、一般に、トランスポートプロトコルの上にプロトコルまたはレイヤによって提供されます。この文書で考慮トランスポートプロトコルのどれもが自分自身でこれらのトランスポート機能を提供しません。したがって、これらの輸送機能は、[RFC5925]と[RFC4895]のセキュリティの考慮事項が適用されるTCPのネイティブ認証機能の例外とSCTPで、このドキュメントでは考慮されません。"
    },
    {
      "indent": 3,
      "text": "Security considerations for the use of UDP and UDP-Lite are provided in the referenced RFCs. Security guidance for application usage is provided in the UDP Guidelines [RFC8085].",
      "ja": "UDPとUDP-Liteの使用のためのセキュリティの考慮事項を参照RFCで提供されています。アプリケーションの使用のためのセキュリティガイダンスはUDPガイドライン[RFC8085]で提供されています。"
    },
    {
      "indent": 0,
      "text": "8. References",
      "section_title": true,
      "ja": "8.参照文献"
    },
    {
      "indent": 0,
      "text": "8.1. Normative References",
      "section_title": true,
      "ja": "8.1. 引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC0793] Postel, J., \"Transmission Control Protocol\", STD 7, RFC 793, DOI 10.17487/RFC0793, September 1981, <https://www.rfc-editor.org/info/rfc793>.",
      "ja": "[RFC0793]ポステル、J.、 \"伝送制御プロトコル\"、STD 7、RFC 793、DOI 10.17487 / RFC0793、1981年9月、<https://www.rfc-editor.org/info/rfc793>。"
    },
    {
      "indent": 3,
      "text": "[RFC1122] Braden, R., Ed., \"Requirements for Internet Hosts - Communication Layers\", STD 3, RFC 1122, DOI 10.17487/RFC1122, October 1989, <https://www.rfc-editor.org/info/rfc1122>.",
      "ja": "[RFC1122]ブレーデン、R.、エド、 \"インターネットホストのための要件 - 通信層\"。、STD 3、RFC 1122、DOI 10.17487 / RFC1122、1989年10月、<https://www.rfc-editor.org/info/ RFC1122>。"
    },
    {
      "indent": 3,
      "text": "[RFC3758] Stewart, R., Ramalho, M., Xie, Q., Tuexen, M., and P. Conrad, \"Stream Control Transmission Protocol (SCTP) Partial Reliability Extension\", RFC 3758, DOI 10.17487/RFC3758, May 2004, <https://www.rfc-editor.org/info/rfc3758>.",
      "ja": "[RFC3758]スチュワート、R.、Ramalho、M.、謝、Q.、Tuexen、M.、およびP.コンラッド、 \"ストリーム制御伝送プロトコル（SCTP）部分信頼拡張子\"、RFC 3758、DOI 10.17487 / RFC3758、月2004年、<https://www.rfc-editor.org/info/rfc3758>。"
    },
    {
      "indent": 3,
      "text": "[RFC4895] Tuexen, M., Stewart, R., Lei, P., and E. Rescorla, \"Authenticated Chunks for the Stream Control Transmission Protocol (SCTP)\", RFC 4895, DOI 10.17487/RFC4895, August 2007, <https://www.rfc-editor.org/info/rfc4895>.",
      "ja": "[RFC4895] Tuexen、M.、スチュワート、R.、レイ、P.、およびE.レスコラ、 \"ストリーム制御伝送プロトコル（SCTP）に対して認証チャンク\"、RFC 4895、DOI 10.17487 / RFC4895、2007年8月、<HTTPS ：//www.rfc-editor.org/info/rfc4895>。"
    },
    {
      "indent": 3,
      "text": "[RFC4960] Stewart, R., Ed., \"Stream Control Transmission Protocol\", RFC 4960, DOI 10.17487/RFC4960, September 2007, <https://www.rfc-editor.org/info/rfc4960>.",
      "ja": "[RFC4960]スチュワート、R.、エド。、 \"ストリーム制御伝送プロトコル\"、RFC 4960、DOI 10.17487 / RFC4960、2007年9月、<https://www.rfc-editor.org/info/rfc4960>。"
    },
    {
      "indent": 3,
      "text": "[RFC5061] Stewart, R., Xie, Q., Tuexen, M., Maruyama, S., and M. Kozuka, \"Stream Control Transmission Protocol (SCTP) Dynamic Address Reconfiguration\", RFC 5061, DOI 10.17487/RFC5061, September 2007, <https://www.rfc-editor.org/info/rfc5061>.",
      "ja": "[RFC5061]スチュワート、R.、謝、Q.、Tuexen、M.、丸山、S.、およびM.小塚、 \"ストリーム制御伝送プロトコル（SCTP）動的アドレス再構成\"、RFC 5061、DOI 10.17487 / RFC5061、月2007年、<https://www.rfc-editor.org/info/rfc5061>。"
    },
    {
      "indent": 3,
      "text": "[RFC5482] Eggert, L. and F. Gont, \"TCP User Timeout Option\", RFC 5482, DOI 10.17487/RFC5482, March 2009, <https://www.rfc-editor.org/info/rfc5482>.",
      "ja": "[RFC5482]エッゲルト、L.およびF. Gont、 \"TCPユーザのタイムアウト・オプション\"、RFC 5482、DOI 10.17487 / RFC5482、2009年3月、<https://www.rfc-editor.org/info/rfc5482>。"
    },
    {
      "indent": 3,
      "text": "[RFC5925] Touch, J., Mankin, A., and R. Bonica, \"The TCP Authentication Option\", RFC 5925, DOI 10.17487/RFC5925, June 2010, <https://www.rfc-editor.org/info/rfc5925>.",
      "ja": "[RFC5925]をタッチし、J.、マンキン、A.、およびR. Bonica、 \"TCP認証オプション\"、RFC 5925、DOI 10.17487 / RFC5925、2010年6月、<https://www.rfc-editor.org/info / rfc5925>。"
    },
    {
      "indent": 3,
      "text": "[RFC6182] Ford, A., Raiciu, C., Handley, M., Barre, S., and J. Iyengar, \"Architectural Guidelines for Multipath TCP Development\", RFC 6182, DOI 10.17487/RFC6182, March 2011, <https://www.rfc-editor.org/info/rfc6182>.",
      "ja": "[RFC6182]フォード、A.、Raiciu、C.、ハンドレー、M.、バール、S.、およびJ.アイアンガー、 \"マルチパスTCP開発のための建築ガイドライン\"、RFC 6182、DOI 10.17487 / RFC6182、2011年3月<HTTPS ：//www.rfc-editor.org/info/rfc6182>。"
    },
    {
      "indent": 3,
      "text": "[RFC6458] Stewart, R., Tuexen, M., Poon, K., Lei, P., and V. Yasevich, \"Sockets API Extensions for the Stream Control Transmission Protocol (SCTP)\", RFC 6458, DOI 10.17487/RFC6458, December 2011, <https://www.rfc-editor.org/info/rfc6458>.",
      "ja": "[RFC6458]スチュワート、R.、Tuexen、M.、プーン、K.、レイ、P.、およびV. Yasevich、DOI 10.17487 / RFC6458、RFC 6458、 \"ストリーム制御伝送プロトコル（SCTP）のためのソケットAPIの拡張機能\" 、2011年12月、<https://www.rfc-editor.org/info/rfc6458>。"
    },
    {
      "indent": 3,
      "text": "[RFC6525] Stewart, R., Tuexen, M., and P. Lei, \"Stream Control Transmission Protocol (SCTP) Stream Reconfiguration\", RFC 6525, DOI 10.17487/RFC6525, February 2012, <https://www.rfc-editor.org/info/rfc6525>.",
      "ja": "[RFC6525]スチュワート、R.、Tuexen、M.、およびP.レイ、 \"ストリーム制御伝送プロトコル（SCTP）ストリーム再構成\"、RFC 6525、DOI 10.17487 / RFC6525、2012年2月、<HTTPS：//www.rfc- editor.org/info/rfc6525>。"
    },
    {
      "indent": 3,
      "text": "[RFC6817] Shalunov, S., Hazel, G., Iyengar, J., and M. Kuehlewind, \"Low Extra Delay Background Transport (LEDBAT)\", RFC 6817, DOI 10.17487/RFC6817, December 2012, <https://www.rfc-editor.org/info/rfc6817>.",
      "ja": "[RFC6817] Shalunov、S.、ヘーゼル、G.、アイアンガー、J.、およびM. Kuehlewind、 \"低余分な遅延の背景トランスポート（LEDBAT）\"、RFC 6817、DOI 10.17487 / RFC6817、2012年12月、<https：//でwww.rfc-editor.org/info/rfc6817>。"
    },
    {
      "indent": 3,
      "text": "[RFC6824] Ford, A., Raiciu, C., Handley, M., and O. Bonaventure, \"TCP Extensions for Multipath Operation with Multiple Addresses\", RFC 6824, DOI 10.17487/RFC6824, January 2013, <https://www.rfc-editor.org/info/rfc6824>.",
      "ja": "[RFC6824]フォード、A.、Raiciu、C.、ハンドリー、M.、およびO.ボナベンチャー、 \"複数のアドレスを持つマルチパス操作のためのTCP拡張機能\"、RFC 6824、DOI 10.17487 / RFC6824、2013年1月、<https：//でwww.rfc-editor.org/info/rfc6824>。"
    },
    {
      "indent": 3,
      "text": "[RFC6897] Scharf, M. and A. Ford, \"Multipath TCP (MPTCP) Application Interface Considerations\", RFC 6897, DOI 10.17487/RFC6897, March 2013, <https://www.rfc-editor.org/info/rfc6897>.",
      "ja": "[RFC6897]シャーフ、M.及びA.フォード、 \"マルチTCP（MPTCP）アプリケーションインターフェースに関する考慮事項\"、RFC 6897、DOI 10.17487 / RFC6897、2013年3月、<https://www.rfc-editor.org/info/rfc6897 >。"
    },
    {
      "indent": 3,
      "text": "[RFC6951] Tuexen, M. and R. Stewart, \"UDP Encapsulation of Stream Control Transmission Protocol (SCTP) Packets for End-Host to End-Host Communication\", RFC 6951, DOI 10.17487/RFC6951, May 2013, <https://www.rfc-editor.org/info/rfc6951>.",
      "ja": "[RFC6951] Tuexen、M.とR.スチュワート、RFC 6951、DOI 10.17487 / RFC6951、2013年5月、<https \"のストリーム制御伝送プロトコル（SCTP）エンドホストへのエンドホスト通信用パケットのUDPカプセル化\"：/ /www.rfc-editor.org/info/rfc6951>。"
    },
    {
      "indent": 3,
      "text": "[RFC7053] Tuexen, M., Ruengeler, I., and R. Stewart, \"SACK-IMMEDIATELY Extension for the Stream Control Transmission Protocol\", RFC 7053, DOI 10.17487/RFC7053, November 2013, <https://www.rfc-editor.org/info/rfc7053>.",
      "ja": "[RFC7053] Tuexen、M.、Ruengeler、I.、およびR.スチュワート、 \"SACK-すぐにストリーム制御伝送プロトコルのための拡張\"、RFC 7053、DOI 10.17487 / RFC7053、2013年11月、<HTTPS：//www.rfc -editor.org/info/rfc7053>。"
    },
    {
      "indent": 3,
      "text": "[RFC7413] Cheng, Y., Chu, J., Radhakrishnan, S., and A. Jain, \"TCP Fast Open\", RFC 7413, DOI 10.17487/RFC7413, December 2014, <https://www.rfc-editor.org/info/rfc7413>.",
      "ja": "[RFC7413]チェン、Y.、チュー、J.、ラダクリシュナン、S.、およびA.ジェイン、 \"TCP高速開く\"、RFC 7413、DOI 10.17487 / RFC7413、2014年12月、<HTTPS：//www.rfc-editor .ORG /情報/ rfc7413>。"
    },
    {
      "indent": 3,
      "text": "[RFC7496] Tuexen, M., Seggelmann, R., Stewart, R., and S. Loreto, \"Additional Policies for the Partially Reliable Stream Control Transmission Protocol Extension\", RFC 7496, DOI 10.17487/RFC7496, April 2015, <https://www.rfc-editor.org/info/rfc7496>.",
      "ja": "[RFC7496] Tuexen、M.、Seggelmann、R.、スチュワート、R.、およびS.ロレート、 \"部分的に信頼性の高いストリーム制御伝送プロトコル拡張のために追加のポリシー\"、RFC 7496、DOI 10.17487 / RFC7496、2015年4月、<HTTPS ：//www.rfc-editor.org/info/rfc7496>。"
    },
    {
      "indent": 3,
      "text": "[RFC7829] Nishida, Y., Natarajan, P., Caro, A., Amer, P., and K. Nielsen, \"SCTP-PF: A Quick Failover Algorithm for the Stream Control Transmission Protocol\", RFC 7829, DOI 10.17487/RFC7829, April 2016, <https://www.rfc-editor.org/info/rfc7829>.",
      "ja": "[RFC7829]西田、Y.、Natarajan、P.、カロ、A.、アメル、P.、およびK.ニールセン、 \"SCTP-PF：ストリーム制御伝送プロトコルのためのクイック・フェイルオーバアルゴリズム\"、RFC 7829、DOI 10.17487 / RFC7829、2016年4月、<https://www.rfc-editor.org/info/rfc7829>。"
    },
    {
      "indent": 3,
      "text": "[RFC8085] Eggert, L., Fairhurst, G., and G. Shepherd, \"UDP Usage Guidelines\", BCP 145, RFC 8085, DOI 10.17487/RFC8085, March 2017, <https://www.rfc-editor.org/info/rfc8085>.",
      "ja": "[RFC8085]エッゲルト、L.、Fairhurst、G.、およびG.シェパード、 \"UDP使用上の注意事項\"、BCP 145、RFC 8085、DOI 10.17487 / RFC8085、2017年3月、<https://www.rfc-editor.org /情報/ rfc8085>。"
    },
    {
      "indent": 3,
      "text": "[RFC8260] Stewart, R., Tuexen, M., Loreto, S., and R. Seggelmann, \"Stream Schedulers and User Message Interleaving for the Stream Control Transmission Protocol\", RFC 8260, DOI 10.17487/RFC8260, November 2017, <https://www.rfc-editor.org/info/rfc8260>.",
      "ja": "[RFC8260]スチュワート、R.、Tuexen、M.、ロレート、S.、およびR. Seggelmann、 \"ストリームスケジューラおよびストリーム制御伝送プロトコルのインターリービングユーザメッセージ\"、RFC 8260、DOI 10.17487 / RFC8260、2017年11月、< https://www.rfc-editor.org/info/rfc8260>。"
    },
    {
      "indent": 3,
      "text": "[RFC8304] Fairhurst, G. and T. Jones, \"Transport Features of the User Datagram Protocol (UDP) and Lightweight UDP (UDP-Lite)\", RFC 8304, DOI 10.17487/RFC8304, February 2018, <https://www.rfc-editor.org/info/rfc8304>.",
      "ja": "[RFC8304] Fairhurst、G.およびT.ジョーンズ、RFC 8304、DOI 10.17487 / RFC8304 \"UDP（User Datagram Protocol）と軽量UDP（UDP-Liteの）の輸送機能\"、2018年2月、<https：//でWWW .rfc-editor.org /情報/ rfc8304>。"
    },
    {
      "indent": 0,
      "text": "8.2. Informative References",
      "section_title": true,
      "ja": "8.2. 参考文献"
    },
    {
      "indent": 3,
      "text": "[RFC0854] Postel, J. and J. Reynolds, \"Telnet Protocol Specification\", STD 8, RFC 854, DOI 10.17487/RFC0854, May 1983, <https://www.rfc-editor.org/info/rfc854>.",
      "ja": "[RFC0854]ポステル、J.、およびJ.レイノルズ、 \"テルネットプロトコル仕様\"、STD 8、RFC 854、DOI 10.17487 / RFC0854、1983年5月、<https://www.rfc-editor.org/info/rfc854>。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <https://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<https://www.rfc-editor.org/info/ RFC2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC2474] Nichols, K., Blake, S., Baker, F., and D. Black, \"Definition of the Differentiated Services Field (DS Field) in the IPv4 and IPv6 Headers\", RFC 2474, DOI 10.17487/RFC2474, December 1998, <https://www.rfc-editor.org/info/rfc2474>.",
      "ja": "[RFC2474]ニコルズ、K.、ブレイク、S.、ベイカー、F.、およびD.ブラック、 \"IPv4とIPv6ヘッダーの差別化されたサービス分野（DSフィールド）の定義\"、RFC 2474、DOI 10.17487 / RFC2474、 1998年12月、<https://www.rfc-editor.org/info/rfc2474>。"
    },
    {
      "indent": 3,
      "text": "[RFC2475] Blake, S., Black, D., Carlson, M., Davies, E., Wang, Z., and W. Weiss, \"An Architecture for Differentiated Services\", RFC 2475, DOI 10.17487/RFC2475, December 1998, <https://www.rfc-editor.org/info/rfc2475>.",
      "ja": "[RFC2475]ブレイク、S.、ブラ​​ック、D.、カールソン、M.、デイヴィス、E.、王、Z.、およびW.ワイス、 \"差別化サービスのためのアーキテクチャ\"、RFC 2475、DOI 10.17487 / RFC2475、12月1998年、<https://www.rfc-editor.org/info/rfc2475>。"
    },
    {
      "indent": 3,
      "text": "[RFC3260] Grossman, D., \"New Terminology and Clarifications for Diffserv\", RFC 3260, DOI 10.17487/RFC3260, April 2002, <https://www.rfc-editor.org/info/rfc3260>.",
      "ja": "[RFC3260]グロスマン、D.、 \"Diffservのための新しい用語と明確化\"、RFC 3260、DOI 10.17487 / RFC3260、2002年4月、<https://www.rfc-editor.org/info/rfc3260>。"
    },
    {
      "indent": 3,
      "text": "[RFC5461] Gont, F., \"TCP's Reaction to Soft Errors\", RFC 5461, DOI 10.17487/RFC5461, February 2009, <https://www.rfc-editor.org/info/rfc5461>.",
      "ja": "[RFC5461] Gont、F.、 \"ソフトエラーへのTCPの反応\"、RFC 5461、DOI 10.17487 / RFC5461、2009年2月、<https://www.rfc-editor.org/info/rfc5461>。"
    },
    {
      "indent": 3,
      "text": "[RFC6093] Gont, F. and A. Yourtchenko, \"On the Implementation of the TCP Urgent Mechanism\", RFC 6093, DOI 10.17487/RFC6093, January 2011, <https://www.rfc-editor.org/info/rfc6093>.",
      "ja": "[RFC6093] Gont、F.およびA. Yourtchenko、RFC 6093 \"TCP緊急機構の実現について\"、DOI 10.17487 / RFC6093、2011年1月、<https://www.rfc-editor.org/info/rfc6093 >。"
    },
    {
      "indent": 3,
      "text": "[RFC7414] Duke, M., Braden, R., Eddy, W., Blanton, E., and A. Zimmermann, \"A Roadmap for Transmission Control Protocol (TCP) Specification Documents\", RFC 7414, DOI 10.17487/RFC7414, February 2015, <https://www.rfc-editor.org/info/rfc7414>.",
      "ja": "[RFC7414]デューク、M.、ブレーデン、R.、エディ、W.、ブラントン、E.、およびA.ツィンマーマン、RFC 7414、DOI 10.17487 / RFC7414、 \"伝送制御プロトコル（TCP）仕様書のためのロードマップ\" 2015年2月、<https://www.rfc-editor.org/info/rfc7414>。"
    },
    {
      "indent": 3,
      "text": "[RFC7657] Black, D., Ed. and P. Jones, \"Differentiated Services (Diffserv) and Real-Time Communication\", RFC 7657, DOI 10.17487/RFC7657, November 2015, <https://www.rfc-editor.org/info/rfc7657>.",
      "ja": "[RFC7657]ブラック、D.、エド。そして、P.ジョーンズ、 \"差別化サービス（DiffServ）のリアルタイムコミュニケーション\"、RFC 7657、DOI 10.17487 / RFC7657、2015年11月、<https://www.rfc-editor.org/info/rfc7657>。"
    },
    {
      "indent": 3,
      "text": "[RFC8095] Fairhurst, G., Ed., Trammell, B., Ed., and M. Kuehlewind, Ed., \"Services Provided by IETF Transport Protocols and Congestion Control Mechanisms\", RFC 8095, DOI 10.17487/RFC8095, March 2017, <https://www.rfc-editor.org/info/rfc8095>.",
      "ja": "[RFC8095] Fairhurst、G.編、トラメル、B.、編、及びM. Kuehlewind、エド。、RFC 8095、DOI 10.17487 / RFC8095、2017年3月、 \"IETFトランスポートプロトコル及び輻輳制御メカニズムによって提供されるサービス\" 、<https://www.rfc-editor.org/info/rfc8095>。"
    },
    {
      "indent": 3,
      "text": "[TAPS-MINSET] Welzl, M. and S. Gjessing, \"A Minimal Set of Transport Services for TAPS Systems\", Work in Progress, draft-ietf-taps-minset-01, February 2018.",
      "ja": "[TAPS-MINSET] Welzl、M.とS. Gjessing、 \"TAPSシステムの転送サービスの最小セット\" が進行中で働いて、ドラフト-IETF-タップ-minset-01、2018年2月。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Overview of RFCs Used as Input for Pass 1",
      "ja": "パス1の入力として使用RFCの付録A.概要"
    },
    {
      "indent": 3,
      "text": "TCP: [RFC0793], [RFC1122], [RFC5482], [RFC5925], and [RFC7413].",
      "ja": "TCP：[RFC0793]、[RFC1122]、[RFC5482]、[RFC5925]、および[RFC7413]。"
    },
    {
      "indent": 3,
      "text": "MPTCP: [RFC6182], [RFC6824], and [RFC6897].",
      "ja": "MPTCP：[RFC6182]、[RFC6824]、および[RFC6897]。"
    },
    {
      "indent": 3,
      "text": "SCTP: RFCs without a sockets API specification: [RFC3758], [RFC4895], [RFC4960], and [RFC5061].",
      "ja": "SCTP：[RFC3758]、[RFC4895]、[RFC4960]及び[RFC5061]：ソケットAPI仕様無しのRFC。"
    },
    {
      "indent": 15,
      "text": "RFCs that include a sockets API specification:\n[RFC6458], [RFC6525], [RFC6951], [RFC7053], [RFC7496],\nand [RFC7829].",
      "raw": true
    },
    {
      "indent": 3,
      "text": "UDP(-Lite): See [RFC8304].",
      "ja": "UDP（-Lite）：[RFC8304]を参照してください。"
    },
    {
      "indent": 3,
      "text": "LEDBAT: [RFC6817].",
      "ja": "LEDBAT：[RFC6817]。"
    },
    {
      "indent": 0,
      "text": "Appendix B. How This Document Was Developed",
      "ja": "この文書は、開発された方法は、付録B."
    },
    {
      "indent": 3,
      "text": "This section gives an overview of the method that was used to develop this document. It was given to contributors for guidance, and it can be helpful for future updates or extensions.",
      "ja": "このセクションでは、この文書を開発するために使用された方法の概要を説明します。それは、指導のための貢献者に与えられた、そしてそれは今後のアップデートや機能拡張のために役立つことができます。"
    },
    {
      "indent": 3,
      "text": "This document is only concerned with transport features that are explicitly exposed to applications via primitives. It also strictly follows RFC text: if a transport feature is truly relevant for an application, the RFCs should say so, and they should describe how to use and configure it. Thus, the approach followed for developing this document was to identify the right RFCs, then analyze and process their text.",
      "ja": "この文書は、明示的にプリミティブを経由してアプリケーションに公開されているトランスポート機能を備えた唯一の懸念です。また、厳密にRFCテキストを次の：トランスポート機能は、アプリケーションのために本当に関連している場合は、RFCはそう言うべき、と彼らはそれを使用して設定する方法について説明しなければなりません。このように、アプローチは、そのテキストを分析し、処理した後、右のRFCを同定することであったこの文書を開発するために行きました。"
    },
    {
      "indent": 3,
      "text": "Primitives that \"MAY\" be implemented by a transport protocol were excluded. To be included, the minimum requirement level for a primitive to be implemented by a protocol was \"SHOULD\". Where style requirement levels as described in [RFC2119] are not used, primitives were excluded when they are described in conjunction with statements like, e.g., \"some implementations also provide\" or \"an implementation may also\". Excluded primitives or parameters were briefly described in a dedicated subsection.",
      "ja": "トランスポートプロトコルによって実装される「MAY」プリミティブは除外しました。含まれるように、プロトコルによって実装されるプリミティブの最小要件のレベルが「SHOULD」でした。 [RFC2119]に記載されているようにスタイルの要求レベルが使用されない場合、それらは、例えば、「いくつかの実装も提供する」または「インプリメンテーションはまた」を、のような文で説明されている場合、プリミティブは除外しました。除外されたプリミティブまたはパラメータを簡単に専用のサブセクションで説明されました。"
    },
    {
      "indent": 3,
      "text": "Pass 1: This began by identifying text that talks about primitives. An API specification, abstract or not, obviously describes primitives -- but we are not *only* interested in API specifications. The text describing the 'Send' primitive in the API specified in [RFC0793],",
      "ja": "1を渡します。これは、プリミティブについて語っテキストを識別することから始めました。 API仕様、抽象的かどうか、明らかにプリミティブを記述する - しかし、我々は、API仕様の*だけ*興味を持っていません。 [RFC0793]で指定されたAPIでプリミティブ「送信」記述したテキスト、"
    },
    {
      "indent": 3,
      "text": "for instance, does not say that data transfer is reliable. TCP's reliability is clear, however, from this text in Section 1 of [RFC0793]:",
      "ja": "例えば、データ転送が信頼性があると言うことはありません。 TCPの信頼性は、[RFC0793]のセクション1で、このテキストから、しかし、明確です："
    },
    {
      "indent": 6,
      "text": "The Transmission Control Protocol (TCP) is intended for use as a highly reliable host-to-host protocol between hosts in packet-switched computer communication networks, and in interconnected systems of such networks.",
      "ja": "伝送制御プロトコル（TCP）は、パケット交換コンピュータ通信ネットワークにおいて、そのようなネットワークの相互接続システムのホストとの間の信頼性の高いホスト間プロトコルとして使用するために意図されています。"
    },
    {
      "indent": 3,
      "text": "Some text for the pass 1 subsections was developed by copying and pasting all the relevant text parts from the relevant RFCs then adjusting the terminology to match that in Section 2 and shortening phrasing to match the general style of the document. An effort was made to formulate everything as a primitive description such that the primitive descriptions became as complete as possible (e.g., the 'SEND.TCP' primitive in pass 2 is explicitly described as reliably transferring data); text that is relevant for the primitives presented in this pass but still does not fit directly under any primitive was used in a subsection's introduction.",
      "ja": "パス1つのサブセクションのためのいくつかのテキストは、第2節でそれと一致する用語を調整し、文書の一般的なスタイルにマッチするフレーズを短くし、関連するRFCから関連するすべてのテキスト部分をコピーして貼り付けによって開発されました。努力は、プリミティブの説明は可能な限り完全になるように原始的な説明（例えば、「SEND.TCP」プリミティブパス2には明示的に確実にデータを転送記載されている）などのすべてを配合しました。このパスで提示プリミティブに関連するが、それでもすべてのプリミティブの直下に収まらないテキストは、サブセクションの冒頭で使用されました。"
    },
    {
      "indent": 3,
      "text": "Pass 2: The main goal of this pass is unification of primitives. As input, only text from pass 1 was used (no exterior sources). The list in pass 2 is not arranged by protocol (i.e., \"first protocol X, here are all the primitives; then protocol Y, here are all the primitives, ...\") but by primitive (i.e., \"primitive A, implemented this way in protocol X, this way in protocol Y, ...\"). It was a goal to obtain as many similar pass 2 primitives as possible. For instance, this was sometimes achieved by not always maintaining a 1:1 mapping between pass 1 and pass 2 primitives, renaming primitives, etc. For every new primitive, the already-existing primitives were considered to try to make them as coherent as possible.",
      "ja": "2パス：このパスの主な目標は、プリミティブの統一です。入力として、パス1からのテキストのみが（NO外部ソース）を使用しました。パス2のリストは、プロトコルによって配置されていない（すなわち、「ここで第1のプロトコルのX、全てのプリミティブであり、次いで、プロトコルYは、ここでは、すべてのプリミティブです...」）が、プリミティブ（すなわち、「プリミティブA、実装によってプロトコルXでこのように、プロトコルYでこのようにして、... \"）。できるだけ多くの類似したパス2つのプリミティブを取得することが目的でした。例えば、これは時々、常に1維持していないことによって達成された：すべての新しいプリミティブについてなど、プリミティブの名前を変更し、パス1との間に1のマッピングをし、2つのプリミティブを渡し、既存のプリミティブは、可能な限りそれらをコヒーレントにしようと考えました。 。"
    },
    {
      "indent": 3,
      "text": "For each primitive, the following style was used:",
      "ja": "各プリミティブについて、次のスタイルを使用しました："
    },
    {
      "indent": 3,
      "text": "o PRIMITIVENAME.PROTOCOL: Pass 1 primitive/event: Parameters: Returns: Comments:",
      "ja": "PRIMITIVENAME.PROTOCOL O：1プリミティブ/イベントを渡します。パラメータ：戻り値：コメント："
    },
    {
      "indent": 3,
      "text": "The entries \"Parameters\", \"Returns\", and \"Comments\" were skipped when a primitive had no parameters, no described return value, or no comments seemed necessary, respectively. Optional parameters are followed by \"(optional)\". When known, default values were provided.",
      "ja": "プリミティブがパラメータ、ノー説明戻り値を持っていない、またはコメントは、それぞれ、必要に応じて見えたときのエントリ「パラメータ」、「戻り値」、および「コメント」はスキップされました。オプションのパラメータは、「（別売）」が続いています。知られている場合は、デフォルト値が提供されました。"
    },
    {
      "indent": 3,
      "text": "Pass 3: The main point of this pass is to identify transport features that are the result of static properties of protocols, for which all protocols have to be listed together; this is then the final list of all available transport features. This list was primarily based on text from pass 2, with additional input from pass 1 (but no external sources).",
      "ja": "3合格：このパスの主なポイントは、すべてのプロトコルが一緒に表示されなければならない対象のプロトコルの静的プロパティ、の結果であるトランスポート機能を同定することです。これは、すべての使用可能なトランスポート機能の最終的なリストです。このリストは、主に、パス1（ただし、外部ソース）からの追加の入力と、パス2からのテキストに基づいていました。"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "The authors would like to thank (in alphabetical order) Bob Briscoe, Spencer Dawkins, Aaron Falk, David Hayes, Karen Nielsen, Tommy Pauly, Joe Touch, and Brian Trammell for providing valuable feedback on this document. We especially thank Christoph Paasch for providing input related to Multipath TCP and Gorry Fairhurst and Tom Jones for providing input related to UDP(-Lite). This work has received funding from the European Union's Horizon 2020 research and innovation programme under grant agreement No. 644334 (NEAT).",
      "ja": "作者はこのドキュメントの貴重なフィードバックを提供する（アルファベット順）ボブ・ブリスコー、スペンサードーキンスアーロンフォーク、デビッド・ヘイズ、カレン・ニールセン、トミーポーリー、ジョー・タッチ、そしてブライアン・トラメルに感謝したいと思います。我々は、特にUDP（-Lite）に関連する入力を提供するためのマルチパスTCPとGorry Fairhurstとトム・ジョーンズに関連する入力を提供するためのクリストフPaaschに感謝します。この作品は、付与契約番号644334（NEAT）の下で、欧州連合（EU）のホライゾン2020年の研究と技術革新プログラムから資金提供を受けています。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Michael Welzl University of Oslo PO Box 1080 Blindern Oslo N-0316 Norway",
      "ja": "オスロ私書箱1080 BlindernオスロN-0316ノルウェーのマイケル・Welzl大学"
    },
    {
      "indent": 3,
      "text": "Email: michawe@ifi.uio.no",
      "ja": "メール：michawe@ifi.uio.no"
    },
    {
      "indent": 3,
      "text": "Michael Tuexen Muenster University of Applied Sciences Stegerwaldstrasse 39 Steinfurt 48565 Germany",
      "ja": "応用科学Stegerwaldstrasse 39シュタインフルト48565ドイツのマイケルTuexenミュンスター大学"
    },
    {
      "indent": 3,
      "text": "Email: tuexen@fh-muenster.de",
      "ja": "メール：tuexen@fh-muenster.de"
    },
    {
      "indent": 3,
      "text": "Naeem Khademi University of Oslo PO Box 1080 Blindern Oslo N-0316 Norway",
      "ja": "オスロ私書箱のNaeem Khademi大学1080 BlindernオスロN-0316ノルウェー"
    },
    {
      "indent": 3,
      "text": "Email: naeemk@ifi.uio.no",
      "ja": "メール：naeemk@ifi.uio.no"
    }
  ]
}