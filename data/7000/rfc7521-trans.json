{
  "title": {
    "text": "RFC 7521 - Assertion Framework for OAuth 2.0 Client Authentication and Authorization Grants",
    "ja": "RFC 7521 - OAuth 2.0のクライアント認証と承認のための補助金アサーションフレームワーク"
  },
  "number": 7521,
  "created_at": "2019-10-29 17:15:52.855847+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                       B. Campbell\nRequest for Comments: 7521                                 Ping Identity\nCategory: Standards Track                                   C. Mortimore\nISSN: 2070-1721                                               Salesforce\n                                                                M. Jones\n                                                               Y. Goland\n                                                               Microsoft\n                                                                May 2015",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Assertion Framework for OAuth 2.0 Client Authentication and\n                    Authorization Grants",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This specification provides a framework for the use of assertions with OAuth 2.0 in the form of a new client authentication mechanism and a new authorization grant type. Mechanisms are specified for transporting assertions during interactions with a token endpoint; general processing rules are also specified.",
      "ja": "この仕様は、新たなクライアント認証メカニズムと新しい承認許可タイプの形でのOAuth 2.0でのアサーションを使用するためのフレームワークを提供します。メカニズムはトークンエンドポイントとの相互作用の中にアサーションを輸送するために指定されています。一般的な処理ルールも指定されています。"
    },
    {
      "indent": 3,
      "text": "The intent of this specification is to provide a common framework for OAuth 2.0 to interwork with other identity systems using assertions and to provide alternative client authentication mechanisms.",
      "ja": "本明細書の意図はOAuth 2.0のアサーションを使用して、他のIDシステムと連動して、別のクライアント認証メカニズムを提供するための共通フレームワークを提供することです。"
    },
    {
      "indent": 3,
      "text": "Note that this specification only defines abstract message flows and processing rules. In order to be implementable, companion specifications are necessary to provide the corresponding concrete instantiations.",
      "ja": "この仕様のみ抽象メッセージ・フローと処理規則を定義することに留意されたいです。実現可能であるためには、コンパニオン仕様は対応する具体的なインスタンスを提供するために必要です。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 5741のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc7521.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc7521で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2015 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2015 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................3\n2. Notational Conventions ..........................................4\n3. Framework .......................................................4\n4. Transporting Assertions .........................................7\n   4.1. Using Assertions as Authorization Grants ...................7\n        4.1.1. Error Responses .....................................8\n   4.2. Using Assertions for Client Authentication .................9\n        4.2.1. Error Responses ....................................10\n5. Assertion Content and Processing ...............................10\n   5.1. Assertion Metamodel .......................................10\n   5.2. General Assertion Format and Processing Rules .............12\n6. Common Scenarios ...............................................12\n   6.1. Client Authentication .....................................13\n   6.2. Client Acting on Behalf of Itself .........................13\n   6.3. Client Acting on Behalf of a User .........................13\n        6.3.1. Client Acting on Behalf of an Anonymous User .......14\n7. Interoperability Considerations ................................14\n8. Security Considerations ........................................15\n   8.1. Forged Assertion ..........................................15\n   8.2. Stolen Assertion ..........................................15\n   8.3. Unauthorized Disclosure of Personal Information ...........16\n   8.4. Privacy Considerations ....................................17\n9. IANA Considerations ............................................17\n   9.1. \"assertion\" Parameter Registration ........................17\n   9.2. \"client_assertion\" Parameter Registration .................18\n   9.3. \"client_assertion_type\" Parameter Registration ............18\n10. References ....................................................18\n   10.1. Normative References .....................................18\n   10.2. Informative References ...................................18\nAcknowledgements ..................................................20\nAuthors' Addresses ................................................20",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "An assertion is a package of information that facilitates the sharing of identity and security information across security domains. Section 3 provides a more detailed description of the concept of an assertion for the purpose of this specification.",
      "ja": "アサーションは、セキュリティドメイン間でアイデンティティとセキュリティ情報の共有を容易にする情報のパッケージです。第3節では、本明細書の目的のためのアサーションの概念のより詳細な説明を提供します。"
    },
    {
      "indent": 3,
      "text": "OAuth 2.0 [RFC6749] is an authorization framework that enables a third-party application to obtain limited access to a protected HTTP resource. In OAuth, those third-party applications are called clients; they access protected resources by presenting an access token to the HTTP resource. Access tokens are issued to clients by an authorization server with the (sometimes implicit) approval of the resource owner. These access tokens are typically obtained by exchanging an authorization grant, which represents the authorization granted by the resource owner (or by a privileged administrator). Several authorization grant types are defined to support a wide range of client types and user experiences. OAuth also provides an extensibility mechanism for defining additional grant types, which can serve as a bridge between OAuth and other protocol frameworks.",
      "ja": "OAuth 2.0の[RFC6749]は保護されたHTTPリソースへの制限付きアクセスを得るために、サードパーティのアプリケーションを可能にする許可フレームワークです。 OAuthのでは、これらのサードパーティ製のアプリケーションは、クライアントと呼ばれます。彼らは、HTTPリソースへのアクセストークンを提示することによって保護されたリソースにアクセスします。アクセストークンは、リソースの所有者の（場合によっては暗黙の）承認と認証サーバによってクライアントに発行されています。これらのアクセストークンは、典型的には、（特権管理者または）リソース所有者によって許可権限を表す権限付与を交換することによって得られます。いくつかの権限付与タイプは、クライアントの種類とユーザー体験の広い範囲をサポートするために定義されています。 OAuthのものOAuthと他のプロトコルのフレームワークとの間のブリッジとして機能することができる付加的なグラントタイプを定義するための拡張メカニズムを提供します。"
    },
    {
      "indent": 3,
      "text": "This specification provides a general framework for the use of assertions as authorization grants with OAuth 2.0. It also provides a framework for assertions to be used for client authentication. It provides generic mechanisms for transporting assertions during interactions with an authorization server's token endpoint as well as general rules for the content and processing of those assertions. The intent is to provide an alternative client authentication mechanism (one that doesn't send client secrets) and to facilitate the use of OAuth 2.0 in client-server integration scenarios, where the end user may not be present.",
      "ja": "この仕様はOAuth 2.0の持つ認可グラントとしてアサーションを使用するための一般的なフレームワークを提供します。また、クライアントの認証に使用するアサーションのためのフレームワークを提供します。これは、これらのアサーションの内容及び処理のための認証サーバのトークンエンドポイントとの相互作用だけでなく、一般的な規則中にアサーションを輸送するための汎用的なメカニズムを提供します。意図は別のクライアント認証メカニズム（クライアント秘密を送信しないもの）を提供し、エンドユーザが存在しないことがあり、クライアント - サーバ統合シナリオでのOAuth 2.0の使用を容易にすることです。"
    },
    {
      "indent": 3,
      "text": "This specification only defines abstract message flows and processing rules. In order to be implementable, companion specifications are necessary to provide the corresponding concrete instantiations. For instance, \"Security Assertion Markup Language (SAML) 2.0 Profile for OAuth 2.0 Client Authentication and Authorization Grants\" [RFC7522] defines a concrete instantiation for Security Assertion Markup Language (SAML) 2.0 Assertions and \"JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants\" [RFC7523] defines a concrete instantiation for JWTs.",
      "ja": "この仕様は、抽象メッセージ・フローと処理規則を定義します。実現可能であるためには、コンパニオン仕様は対応する具体的なインスタンスを提供するために必要です。例えば、「セキュリティアサーションマークアップ言語（SAML）OAuth 2.0のクライアント認証と認可グラント2.0プロファイル」[RFC7522]は、セキュリティアサーションマークアップ言語（SAML）のOAuth 2.0アサーションおよび「JSONウェブトークン（JWT）プロファイルの具体的なインスタンスを定義します2.0クライアント認証と認可グラント」[RFC7523]はJWTsための具体的なインスタンスを定義します。"
    },
    {
      "indent": 3,
      "text": "Note: The use of assertions for client authentication is orthogonal to and separable from using assertions as an authorization grant. They can be used either in combination or separately. Client assertion authentication is nothing more than an alternative way for a client to authenticate to the token endpoint and must be used in conjunction with some grant type to form a complete and meaningful protocol request. Assertion authorization grants may be used with or without client authentication or identification. Whether or not client authentication is needed in conjunction with an assertion authorization grant, as well as the supported types of client authentication, are policy decisions at the discretion of the authorization server.",
      "ja": "注意：クライアント認証のためのアサーションの使用が承認助成金としてアサーションを使用してからに直交し、分離可能です。これらは組み合わせて、または別々のいずれかを使用することができます。クライアントアサーション認証は、トークンエンドポイントに認証するためのクライアントのための別の方法以外の何ものでもありませんし、完全かつ有意義なプロトコル要求を形成するために、いくつかの助成金型と組み合わせて使用​​する必要があります。アサーション承認助成金は、クライアント認証または識別の有無にかかわらず使用することができます。クライアント認証がアサーション認可助成金と併せて、だけでなく、クライアント認証のサポートされているタイプで必要とされるかどうかは、認証サーバの裁量で政策決定があります。"
    },
    {
      "indent": 0,
      "text": "2. Notational Conventions",
      "section_title": true,
      "ja": "2.表記規則"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はあります[RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 3,
      "text": "Throughout this document, values are quoted to indicate that they are to be taken literally. When using these values in protocol messages, the quotes must not be used as part of the value.",
      "ja": "このドキュメントでは、値が、彼らは文字通りに解釈されるべきであることを示すために引用されています。プロトコルメッセージでこれらの値を使用する場合、引用符は、値の一部として使用してはなりません。"
    },
    {
      "indent": 0,
      "text": "3. Framework",
      "section_title": true,
      "ja": "3.フレームワーク"
    },
    {
      "indent": 3,
      "text": "An assertion is a package of information that allows identity and security information to be shared across security domains. An assertion typically contains information about a subject or principal, information about the party that issued the assertion and when was it issued, and the conditions under which the assertion is to be considered valid, such as when and where it can be used.",
      "ja": "アサーションは、アイデンティティとセキュリティ情報は、セキュリティドメイン間で共有することを可能にする情報のパッケージです。アサーションは、典型的には、いつ、どこでそれを使用することができますように、被写体や校長、アサーションを発行したときに、それが発行されたパーティーについての情報、およびアサーションが有効とみなされるべき条件に関する情報が含まれています。"
    },
    {
      "indent": 3,
      "text": "The entity that creates and signs or integrity-protects the assertion is typically known as the \"Issuer\", and the entity that consumes the assertion and relies on its information is typically known as the \"Relying Party\". In the context of this document, the authorization server acts as a relying party.",
      "ja": "作成し、看板やアサーションを整合性は、保護されたエンティティは、典型的には、「発行者」として知られ、アサーションを消費し、その情報に依存している実体は、典型的には、「依拠当事者」として知られています。この文書の文脈では、認証サーバは、証明書利用者として機能します。"
    },
    {
      "indent": 3,
      "text": "Assertions used in the protocol exchanges defined by this specification MUST always be integrity protected using a digital signature or Message Authentication Code (MAC) applied by the issuer, which authenticates the issuer and ensures integrity of the assertion content. In many cases, the assertion is issued by a third party, and it must be protected against tampering by the client that presents it. An assertion MAY additionally be encrypted, preventing unauthorized parties (such as the client) from inspecting the content.",
      "ja": "この仕様で定義されたプロトコル交換に使用されるアサーションは常に完全性発行者を認証し、アサーション・コンテンツの完全性を保証する発行者によって適用デジタル署名又はメッセージ認証コード（MAC）を使用して保護されなければなりません。多くの場合、アサーションは、第三者が発行され、それを提示し、クライアントによる改ざんから保護されなければなりません。アサーションは、さらにコンテンツを検査するから（クライアントなど）権限のない者を防止、暗号化されてもよいです。"
    },
    {
      "indent": 3,
      "text": "Although this document does not define the processes by which the client obtains the assertion (prior to sending it to the authorization server), there are two common patterns described below.",
      "ja": "この文書は、クライアントが（認証サーバに送信する前に）アサーションを取得することにより、プロセスを定義しませんが、以下の2つの一般的なパターンがあります。"
    },
    {
      "indent": 3,
      "text": "In the first pattern, depicted in Figure 1, the client obtains an assertion from a third-party entity capable of issuing, renewing, transforming, and validating security tokens. Typically, such an entity is known as a \"security token service\" (STS) or just \"token service\", and a trust relationship (usually manifested in the exchange of some kind of key material) exists between the token service and the relying party. The token service is the assertion issuer; its role is to fulfill requests from clients, which present various credentials, and mint assertions as requested, fill them with appropriate information, and integrity-protect them with a signature or message authentication code. WS-Trust [OASIS.WS-Trust] is one available standard for requesting security tokens (assertions).",
      "ja": "図1に示す第1パターンでは、クライアントは、発行更新、変換、およびセキュリティトークンを検証することが可能なサードパーティエンティティからアサーションを取得します。典型的には、このようなエンティティは、「セキュリティトークンサービス」（STS）又は単に「トークンサービス」として知られており、（通常は鍵材料のいくつかの種類の交換に現れる）信頼関係は、トークンサービスと依拠当事者の間に存在しています。トークンサービスは、アサーションの発行者です。その役割は、要求されたとして、存在する様々な資格証明書、およびミントアサーションクライアントからの要求を満たす適切な情報でそれらを記入し、署名やメッセージ認証コードでそれらを整合性を保護することです。 WS-Trustの[OASIS.WS-信頼]セキュリティトークン（アサーション）を要求するための1つの利用可能な規格です。"
    },
    {
      "indent": 5,
      "text": "Relying\nParty                     Client                   Token Service\n  |                          |                         |\n  |                          |  1) Request Assertion   |\n  |                          |------------------------>|\n  |                          |                         |\n  |                          |  2) Assertion           |\n  |                          |<------------------------|\n  |    3) Assertion          |                         |\n  |<-------------------------|                         |\n  |                          |                         |\n  |    4) OK or Failure      |                         |\n  |------------------------->|                         |\n  |                          |                         |\n  |                          |                         |",
      "raw": true
    },
    {
      "indent": 16,
      "text": "Figure 1: Assertion Created by Third Party",
      "ja": "図1：サードパーティによって作成されたアサーション"
    },
    {
      "indent": 3,
      "text": "In the second pattern, depicted in Figure 2, the client creates assertions locally. To apply the signatures or message authentication codes to assertions, it has to obtain key material: either symmetric keys or asymmetric key pairs. The mechanisms for obtaining this key material are beyond the scope of this specification.",
      "ja": "図2に示す第2のパターンでは、クライアントは、ローカルアサーションを作成します。アサーションに署名又はメッセージ認証コードを適用するには、鍵材料を入手しなければならない：対称鍵または非対称鍵ペアのいずれか。この鍵材料を得るための機構は、本明細書の範囲外です。"
    },
    {
      "indent": 3,
      "text": "Although assertions are usually used to convey identity and security information, self-issued assertions can also serve a different purpose. They can be used to demonstrate knowledge of some secret, such as a client secret, without actually communicating the secret directly in the transaction. In that case, additional information included in the assertion by the client itself will be of limited value to the relying party, and for this reason, only a bare minimum of information is typically included in such an assertion, such as information about issuing and usage conditions.",
      "ja": "アサーションは通常、IDとセキュリティ情報を伝えるために使用されていますが、自己発行アサーションは、異なる目的を果たすことができます。彼らは、実際の取引に直接秘密を伝えることなく、クライアントの秘密など、いくつかの秘密の知識を証明するために使用することができます。その場合には、クライアント自身がアサーションに含まれる付加情報を依拠当事者に制限値であろう、そしてこの理由のために、情報の唯一の最低限は、典型的には、発行に関する情報や使用状況など、そのようなアサーションに含まれています条件。"
    },
    {
      "indent": 5,
      "text": "Relying\nParty                     Client\n  |                          |\n  |                          | 1) Create\n  |                          |    Assertion\n  |                          |--------------+\n  |                          |              |\n  |                          | 2) Assertion |\n  |                          |<-------------+\n  |    3) Assertion          |\n  |<-------------------------|\n  |                          |\n  |    4) OK or Failure      |\n  |------------------------->|\n  |                          |\n  |                          |",
      "raw": true
    },
    {
      "indent": 22,
      "text": "Figure 2: Self-Issued Assertion",
      "ja": "図2：自己発行アサーション"
    },
    {
      "indent": 3,
      "text": "Deployments need to determine the appropriate variant to use based on the required level of security, the trust relationship between the entities, and other factors.",
      "ja": "展開では、セキュリティの必要なレベル、エンティティ間の信頼関係、およびその他の要因に基づいて使用するための適切なバリアントを決定する必要があります。"
    },
    {
      "indent": 3,
      "text": "From the perspective of what must be done by the entity presenting the assertion, there are two general types of assertions:",
      "ja": "アサーションを提示するエンティティによって行われなければならないものの観点から、アサーションの2つの一般的なタイプがあります。"
    },
    {
      "indent": 3,
      "text": "1. Bearer Assertions: Any entity in possession of a bearer assertion (the bearer) can use it to get access to the associated resources (without demonstrating possession of a cryptographic key). To prevent misuse, bearer assertions need to be protected from disclosure in storage and in transport. Secure communication channels are required between all entities to avoid leaking the assertion to unauthorized parties.",
      "ja": "1.ベアラアサーション：ベアラアサーション（ベアラ）の所有する任意のエンティティは（暗号鍵の所有を証明せず）に関連したリソースへのアクセスを得るためにそれを使用することができます。誤用を防止するために、ベアラ・アサーションは、貯蔵および輸送に開示から保護する必要があります。セキュアな通信チャネルは、権限のない者にアサーションを漏洩しないように、すべてのエンティティとの間で必要とされています。"
    },
    {
      "indent": 3,
      "text": "2. Holder-of-Key Assertions: To access the associated resources, the entity presenting the assertion must demonstrate possession of additional cryptographic material. The token service thereby binds a key identifier to the assertion, and the client has to demonstrate to the relying party that it knows the key corresponding to that identifier when presenting the assertion.",
      "ja": "2.ホルダー-のキーアサーション：関連したリソースにアクセスするには、アサーションを提示するエンティティは、追加の暗号化材料の所有を実証しなければなりません。トークンサービスは、これにより、アサーションの鍵識別子を結合し、クライアントはそれがアサーションを提示するとき、その識別子に対応する鍵を知っている証明書利用者に実証しています。"
    },
    {
      "indent": 3,
      "text": "The protocol parameters and processing rules defined in this document are intended to support a client presenting a bearer assertion to an authorization server. They are not directly suitable for use with holder-of-key assertions. While they could be used as a baseline for a holder-of-key assertion system, there would be a need for additional mechanisms (to support proof-of-possession of the secret key), and possibly changes to the security model (e.g., to relax the requirement for an Audience).",
      "ja": "この文書で定義されたプロトコルパラメータと処理ルールは、認証サーバへのベアラアサーションを提示するクライアントをサポートすることを意図しています。彼らは、ホルダのキーアサーションで使用するために直接適していません。彼らはホルダのキーアサーション・システム用のベースラインとして使用することができますが、追加的なメカニズムの必要性があるだろう（実証の所持秘密鍵のをサポートするために）、そしておそらくセキュリティモデル（例えば、への変更対象読者のための要件を緩和します）。"
    },
    {
      "indent": 0,
      "text": "4. Transporting Assertions",
      "section_title": true,
      "ja": "4.輸送アサーション"
    },
    {
      "indent": 3,
      "text": "This section defines HTTP parameters for transporting assertions during interactions with a token endpoint of an OAuth authorization server. Because requests to the token endpoint result in the transmission of clear-text credentials (in both the HTTP request and response), all requests to the token endpoint MUST use Transport Layer Security (TLS), as mandated in Section 3.2 of OAuth 2.0 [RFC6749].",
      "ja": "このセクションでは、OAuthの認証サーバのトークンエンドポイントとの相互作用の中にアサーションを輸送するためのHTTPパラメータを定義します。 OAuth 2.0の[RFC6749の3.2節で義務付けられ（HTTP要求と応答の両方で）クリアテキストの資格情報の伝送におけるトークンエンドポイントの結果への要求は、トークンエンドポイントへのすべての要求は、トランスポート層セキュリティ（TLS）を使用しなければならないので、 ]。"
    },
    {
      "indent": 0,
      "text": "4.1. Using Assertions as Authorization Grants",
      "section_title": true,
      "ja": "4.1。認可の補助金としてアサーションを使用して"
    },
    {
      "indent": 3,
      "text": "This section defines the use of assertions as authorization grants, based on the definition provided in Section 4.5 of OAuth 2.0 [RFC6749]. When using assertions as authorization grants, the client includes the assertion and related information using the following HTTP request parameters:",
      "ja": "このセクションでは、OAuth 2.0の[RFC6749]のセクション4.5に提供される定義に基づいて、権限付与としてアサーションの使用を規定します。承認の助成金としてアサーションを使用する場合、クライアントは、アサーションと、次のHTTPリクエスト・パラメータを使用して、関連する情報が含まれています。"
    },
    {
      "indent": 3,
      "text": "grant_type REQUIRED. The format of the assertion as defined by the authorization server. The value will be an absolute URI.",
      "ja": "REQUIREDをgrant_type。認証サーバで定義されたアサーションの形式。値は絶対URIになります。"
    },
    {
      "indent": 3,
      "text": "assertion REQUIRED. The assertion being used as an authorization grant. Specific serialization of the assertion is defined by profile documents.",
      "ja": "アサーションREQUIRED。アサーションは、許可助成金として使用されています。アサーションの具体的な直列化は、プロファイル文書によって定義されます。"
    },
    {
      "indent": 3,
      "text": "scope OPTIONAL. The requested scope as described in Section 3.3 of OAuth 2.0 [RFC6749]. When exchanging assertions for access tokens, the authorization for the token has been previously granted through some out-of-band mechanism. As such, the requested scope MUST be equal to or less than the scope originally granted to the authorized accessor. The authorization server MUST limit the scope of the issued access token to be equal to or less than the scope originally granted to the authorized accessor.",
      "ja": "スコープオプション。 OAuth 2.0のセクション3.3 [RFC6749]で説明されるように要求された範囲。アクセストークンのためのアサーションを交換する場合は、トークンの承認が以前にいくつかのアウトオブバンドメカニズムを介して付与されています。このように、要求された範囲に等しいか元々認可アクセサに付与された範囲未満でなければなりません。認証サーバと同じか、もともと許可されたアクセサに与えられた範囲よりも小さくなるように発行されたアクセストークンの範囲を制限しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Authentication of the client is optional, as described in Section 3.2.1 of OAuth 2.0 [RFC6749], and consequently, the \"client_id\" is only needed when a form of client authentication that relies on the parameter is used.",
      "ja": "OAuth 2.0の[RFC6749]のセクション3.2.1に記載し、その結果、「CLIENT_ID」は唯一のパラメータに依存して、クライアント認証の形式を使用する場合に必要とされるようにクライアントの認証は、任意です。"
    },
    {
      "indent": 3,
      "text": "The following example demonstrates an assertion being used as an authorization grant (with extra line breaks for display purposes only):",
      "ja": "次の例は、（表示のみの目的のための余分な改行を含む）、認可付与として使用されているアサーションを示しています。"
    },
    {
      "indent": 5,
      "text": "POST /token HTTP/1.1 Host: server.example.com Content-Type: application/x-www-form-urlencoded",
      "ja": "POST /トークンHTTP / 1.1ホスト：server.example.comのContent-Type：アプリケーション/ x-www-form-urlencodedで"
    },
    {
      "indent": 5,
      "text": "grant_type=urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Asaml2-bearer& assertion=PHNhbWxwOl...[omitted for brevity]...ZT4",
      "ja": "grant_type = URN％3Aietf％3Aparams％3Aoauth％3Agrant型％3Asaml2ベアラ・アサーション= PHNhbWxwOl ... [簡潔にするために省略] ... ZT4"
    },
    {
      "indent": 3,
      "text": "An assertion used in this context is generally a short-lived representation of the authorization grant, and authorization servers SHOULD NOT issue access tokens with a lifetime that exceeds the validity period of the assertion by a significant period. In practice, that will usually mean that refresh tokens are not issued in response to assertion grant requests, and access tokens will be issued with a reasonably short lifetime. Clients can refresh an expired access token by requesting a new one using the same assertion, if it is still valid, or with a new assertion.",
      "ja": "この文脈で使用アサーションは、一般的に、認可付与の短命表現であり、及び認可サーバは、重要な期間でアサーションの有効期間を超えて存続してアクセストークンを発行するべきではありません。実際には、それは通常、リフレッシュトークンが付与要求をアサートされたことに応答して発行されていないことを意味し、アクセストークンは、適度に短い寿命が発行されます。それはまだ有効、または新しいアサーションである場合、クライアントは、同じアサーションを使用して新しいものを要求することにより、期限切れのアクセストークンをリフレッシュすることができます。"
    },
    {
      "indent": 3,
      "text": "An IETF URN for use as the \"grant_type\" value can be requested using the template in [RFC6755]. A URN of the form urn:ietf:params:oauth:grant-type:* is suggested.",
      "ja": "「grant_type」値として使用するためのIETF URNは、[RFC6755]でテンプレートを使用して要求することができます。フォーム骨壷のURN：IETF：のparams：OAuthの：助成金型：*が示唆されました。"
    },
    {
      "indent": 0,
      "text": "4.1.1. Error Responses",
      "section_title": true,
      "ja": "4.1.1。エラーレスポンス"
    },
    {
      "indent": 3,
      "text": "If an assertion is not valid or has expired, the authorization server constructs an error response as defined in OAuth 2.0 [RFC6749]. The value of the \"error\" parameter MUST be the \"invalid_grant\" error code. The authorization server MAY include additional information regarding the reasons the assertion was considered invalid using the \"error_description\" or \"error_uri\" parameters.",
      "ja": "アサーションが有効でないか、有効期限が切れている場合はOAuth 2.0 [RFC6749]で定義されるように、認証サーバはエラー応答を構築します。 「エラー」パラメータの値が「invalid_grant」エラーコードでなければなりません。認証サーバは、アサーションが「しましたerror_description」または「error_uri」パラメータを使用して無効であると考えられた理由のに関する追加情報を含むことができます。"
    },
    {
      "indent": 3,
      "text": "For example:",
      "ja": "例えば："
    },
    {
      "indent": 5,
      "text": "HTTP/1.1 400 Bad Request Content-Type: application/json Cache-Control: no-store",
      "ja": "HTTP / 1.1 400不正なリクエストのContent-Type：アプリケーション/ JSONののCache-Control：無店舗"
    },
    {
      "indent": 5,
      "text": "{ \"error\":\"invalid_grant\", \"error_description\":\"Audience validation failed\" }",
      "ja": "{ \"エラー\"： \"invalid_grant\"、 \"ましたerror_description\"： \"オーディエンスの検証に失敗しました\"}"
    },
    {
      "indent": 0,
      "text": "4.2. Using Assertions for Client Authentication",
      "section_title": true,
      "ja": "4.2。クライアント認証のためのアサーションを使用して"
    },
    {
      "indent": 3,
      "text": "The following section defines the use of assertions as client credentials as an extension of Section 2.3 of OAuth 2.0 [RFC6749]. When using assertions as client credentials, the client includes the assertion and related information using the following HTTP request parameters:",
      "ja": "次のセクションでは、OAuth 2.0の[RFC6749]のセクション2.3の拡張としてクライアント資格情報としてのアサーションの使用を規定します。クライアントの資格情報としてアサーションを使用する場合、クライアントは、アサーションと、次のHTTPリクエスト・パラメータを使用して、関連する情報が含まれています。"
    },
    {
      "indent": 3,
      "text": "client_assertion_type REQUIRED. The format of the assertion as defined by the authorization server. The value will be an absolute URI.",
      "ja": "REQUIREDをclient_assertion_type。認証サーバで定義されたアサーションの形式。値は絶対URIになります。"
    },
    {
      "indent": 3,
      "text": "client_assertion REQUIRED. The assertion being used to authenticate the client. Specific serialization of the assertion is defined by profile documents.",
      "ja": "client_assertionが必要です。アサーションは、クライアントを認証するために使用されています。アサーションの具体的な直列化は、プロファイル文書によって定義されます。"
    },
    {
      "indent": 3,
      "text": "client_id OPTIONAL. The client identifier as described in Section 2.2 of OAuth 2.0 [RFC6749]. The \"client_id\" is unnecessary for client assertion authentication because the client is identified by the subject of the assertion. If present, the value of the \"client_id\" parameter MUST identify the same client as is identified by the client assertion.",
      "ja": "オプションCLIENT_ID。 OAuth 2.0の[RFC6749]のセクション2.2で説明したようにクライアント識別子。クライアントは、アサーションの対象で識別されるため、「client_idのは、」クライアントのアサーションの認証には不要です。存在する場合、クライアントのアサーションによって識別されるよう、「CLIENT_ID」パラメータの値は、同じクライアントを特定しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The following example demonstrates a client authenticating using an assertion during an access token request, as defined in Section 4.1.3 of OAuth 2.0 [RFC6749] (with extra line breaks for display purposes only):",
      "ja": "OAuth 2.0の（表示のみの目的のための余分な改行を有する）[RFC6749]のセクション4.1.3で定義されるように、以下の例では、アクセストークンの要求時にアサーションを使用して認証するクライアントを示しています。"
    },
    {
      "indent": 5,
      "text": "POST /token HTTP/1.1 Host: server.example.com Content-Type: application/x-www-form-urlencoded",
      "ja": "POST /トークンHTTP / 1.1ホスト：server.example.comのContent-Type：アプリケーション/ x-www-form-urlencodedで"
    },
    {
      "indent": 5,
      "text": "grant_type=authorization_code& code=n0esc3NRze7LTCu7iYzS6a5acc3f0ogp4& client_assertion_type=urn%3Aietf%3Aparams%3Aoauth %3Aclient-assertion-type%3Asaml2-bearer& client_assertion=PHNhbW...[omitted for brevity]...ZT",
      "ja": "grant_type = authorization_code＆コード= n0esc3NRze7LTCu7iYzS6a5acc3f0ogp4＆client_assertion_type = URN％3Aietf％3Aparams％3Aoauth％3Aclientアサーション型％3Asaml2ベアラ＆client_assertion = PHNhbW ... [簡潔にするために省略] ... ZT"
    },
    {
      "indent": 3,
      "text": "Token endpoints can differentiate between assertion-based credentials and other client credential types by looking for the presence of the \"client_assertion\" and \"client_assertion_type\" parameters, which will only be present when using assertions for client authentication.",
      "ja": "トークンエンドポイントは、クライアント認証のためのアサーションを使用している場合にのみ存在することになる「client_assertion」と「client_assertion_type」パラメータの存在を探すことにより、アサーションベースの資格情報や他のクライアント資格情報の種類を区別することができます。"
    },
    {
      "indent": 3,
      "text": "An IETF URN for use as the \"client_assertion_type\" value may be requested using the template in [RFC6755]. A URN of the form urn:ietf:params:oauth:client-assertion-type:* is suggested.",
      "ja": "「client_assertion_type」値として使用するためのIETF URNは、[RFC6755]でテンプレートを使用して要求してもよいです。 IETF：：のparams：OAuthのクライアント・アサーション型：フォーム骨壷のURN *が示唆されました。"
    },
    {
      "indent": 0,
      "text": "4.2.1. Error Responses",
      "section_title": true,
      "ja": "4.2.1。エラーレスポンス"
    },
    {
      "indent": 3,
      "text": "If an assertion is invalid for any reason or if more than one client authentication mechanism is used, the authorization server constructs an error response as defined in OAuth 2.0 [RFC6749]. The value of the \"error\" parameter MUST be the \"invalid_client\" error code. The authorization server MAY include additional information regarding the reasons the client assertion was considered invalid using the \"error_description\" or \"error_uri\" parameters.",
      "ja": "アサーションは、何らかの理由で無効であるか、または複数のクライアント認証メカニズムが使用される場合のOAuth 2.0 [RFC6749]で定義されるように、認証サーバはエラー応答を構築する場合。 「エラー」パラメータの値が「invalid_client」エラーコードでなければなりません。認証サーバは、クライアントの主張は「しましたerror_description」または「error_uri」パラメータを使用して無効であると考えられた理由のに関する追加情報を含むことができます。"
    },
    {
      "indent": 3,
      "text": "For example:",
      "ja": "例えば："
    },
    {
      "indent": 5,
      "text": "HTTP/1.1 400 Bad Request Content-Type: application/json Cache-Control: no-store",
      "ja": "HTTP / 1.1 400不正なリクエストのContent-Type：アプリケーション/ JSONののCache-Control：無店舗"
    },
    {
      "indent": 5,
      "text": "{ \"error\":\"invalid_client\" \"error_description\":\"assertion has expired\" }",
      "ja": "{ \"エラー\"： \"invalid_client\" \"ましたerror_description\"： \"アサーションが満了しました\"}"
    },
    {
      "indent": 0,
      "text": "5. Assertion Content and Processing",
      "section_title": true,
      "ja": "5.アサーションの内容と処理"
    },
    {
      "indent": 3,
      "text": "This section provides a general content and processing model for the use of assertions in OAuth 2.0 [RFC6749].",
      "ja": "このセクションでは、OAuth 2.0の[RFC6749]でアサーションを使用するための一般的な内容及び処理モデルを提供します。"
    },
    {
      "indent": 0,
      "text": "5.1. Assertion Metamodel",
      "section_title": true,
      "ja": "5.1。アサーションメタモデル"
    },
    {
      "indent": 3,
      "text": "The following are entities and metadata involved in the issuance, exchange, and processing of assertions in OAuth 2.0. These are general terms, abstract from any particular assertion format. Mappings of these terms into specific representations are provided by profiles of this specification.",
      "ja": "次のOAuth 2.0のアサーションの発行、交換、および処理に関与するエンティティとメタデータです。これらは、いずれかの特定のアサーション・フォーマットから抽象的一般的な用語です。具体的な表現にこれらの用語のマッピングは、本明細書のプロファイルによって提供されています。"
    },
    {
      "indent": 3,
      "text": "Issuer A unique identifier for the entity that issued the assertion. Generally, this is the entity that holds the key material used to sign or integrity-protect the assertion. Examples of issuers are OAuth clients (when assertions are self-issued) and third-party security token services. If the assertion is self-issued, the Issuer value is the client identifier. If the assertion was issued by a security token service (STS), the Issuer should identify the STS in a manner recognized by the authorization server. In the absence of an application profile specifying otherwise, compliant applications MUST compare Issuer values using the Simple String Comparison method defined in Section 6.2.1 of RFC 3986 [RFC3986].",
      "ja": "アサーションを発行したエンティティの一意の識別子を発行者。一般的に、これは、アサーションに署名するか、整合性を保護するために使用されるキーマテリアルを保持するエンティティです。およびサードパーティのセキュリティトークンサービス（アサーションは自己発行されたときに）発行体の例としては、OAuthのクライアントです。アサーションが自己発行された場合、発行者の値は、クライアント識別子です。アサーションは、セキュリティトークンサービス（STS）によって発行された場合、発行者は、認証サーバによって認識方法でSTSを特定する必要があります。そうでなければ特定のアプリケーションプロファイルの非存在下で、対応アプリケーションは、RFC 3986 [RFC3986]のセクション6.2.1で定義された単純な文字列比較方法を使用して発行者の値を比較しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Subject A unique identifier for the principal that is the subject of the assertion.",
      "ja": "アサーションの対象である主要の一意の識別子を施します。"
    },
    {
      "indent": 6,
      "text": "* When using assertions for client authentication, the Subject identifies the client to the authorization server using the value of the \"client_id\" of the OAuth client.",
      "ja": "クライアント認証のためのアサーションを使用する場合は*、件名にはOAuthのクライアントの「CLIENT_ID」の値を使用して認証サーバにクライアントを識別します。"
    },
    {
      "indent": 6,
      "text": "* When using assertions as an authorization grant, the Subject identifies an authorized accessor for which the access token is being requested (typically, the resource owner or an authorized delegate).",
      "ja": "認可グラントとしてアサーションを使用する場合*、件名、アクセストークンが要求されている認可アクセッサを特定する（典型的には、リソースの所有者または権限委譲）。"
    },
    {
      "indent": 3,
      "text": "Audience A value that identifies the party or parties intended to process the assertion. The URL of the token endpoint, as defined in Section 3.2 of OAuth 2.0 [RFC6749], can be used to indicate that the authorization server is a valid intended audience of the assertion. In the absence of an application profile specifying otherwise, compliant applications MUST compare the Audience values using the Simple String Comparison method defined in Section 6.2.1 of RFC 3986 [RFC3986].",
      "ja": "観客アサーションを処理することを目的と当事者を識別する値。トークンエンドポイントのURLは、OAuth 2.0のセクション3.2 [RFC6749]で定義されるように、認証サーバは、アサーションの有効な対象読者であることを示すために使用することができます。そうでなければ特定のアプリケーションプロファイルの非存在下で、対応アプリケーションは、RFC 3986 [RFC3986]のセクション6.2.1で定義された単純な文字列比較方法を使用して、視聴者の値を比較しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Issued At The time at which the assertion was issued. While the serialization may differ by assertion format, it is REQUIRED that the time be expressed in UTC with no time zone component.",
      "ja": "アサーションが発行された時点で発行されました。シリアライゼーションは、アサーション・フォーマットによって異なるかもしれないが、時間がない時間帯成分とUTCで発現させることが必要です。"
    },
    {
      "indent": 3,
      "text": "Expires At The time at which the assertion expires. While the serialization may differ by assertion format, it is REQUIRED that the time be expressed in UTC with no time zone component.",
      "ja": "アサーションが期限切れになる時点で期限切れとなります。シリアライゼーションは、アサーション・フォーマットによって異なるかもしれないが、時間がない時間帯成分とUTCで発現させることが必要です。"
    },
    {
      "indent": 3,
      "text": "Assertion ID A nonce or unique identifier for the assertion. The Assertion ID may be used by implementations requiring message de-duplication for one-time use assertions. Any entity that assigns an identifier MUST ensure that there is negligible probability for that entity or any other entity to accidentally assign the same identifier to a different data object.",
      "ja": "アサーションIDアサーションのためのnonceまたは一意の識別子。アサーションIDは、1回の使用のアサーションのメッセージ重複を必要と実装によって使用されてもよいです。識別子を割り当てる任意のエンティティは、そのエンティティまたは誤っ異なるデータ・オブジェクトに同じ識別子を割り当てるための任意の他のエンティティの無視できる確率があることを確認しなければなりません。"
    },
    {
      "indent": 0,
      "text": "5.2. General Assertion Format and Processing Rules",
      "section_title": true,
      "ja": "5.2。一般的なアサーションフォーマットおよび処理ルール"
    },
    {
      "indent": 3,
      "text": "The following are general format and processing rules for the use of assertions in OAuth:",
      "ja": "OAuthのでアサーションを使用するための一般的なフォーマットおよび処理規則は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "o The assertion MUST contain an Issuer. The Issuer identifies the entity that issued the assertion as recognized by the authorization server. If an assertion is self-issued, the Issuer MUST be the value of the client's \"client_id\".",
      "ja": "Oアサーションは、発行者を含まなければなりません。発行者は、認証サーバによって認識されるアサーションを発行したエンティティを識別する。アサーションが自己発行された場合、発行者は、クライアントの「CLIENT_ID」の値でなければなりません。"
    },
    {
      "indent": 3,
      "text": "o The assertion MUST contain a Subject. The Subject typically identifies an authorized accessor for which the access token is being requested (i.e., the resource owner or an authorized delegate) but, in some cases, may be a pseudonymous identifier or other value denoting an anonymous user. When the client is acting on behalf of itself, the Subject MUST be the value of the client's \"client_id\".",
      "ja": "Oアサーションは、件名を含まなければなりません。対象は、典型的には、アクセストークンが要求されている認可アクセッサを識別する（すなわち、リソースの所有者または権限委譲）しかし、いくつかのケースでは、匿名ユーザを示す変名識別子または他の値であってもよいです。クライアントは、自身の代理として行動した場合、件名は、クライアントの「CLIENT_ID」の値でなければなりません。"
    },
    {
      "indent": 3,
      "text": "o The assertion MUST contain an Audience that identifies the authorization server as the intended audience. The authorization server MUST reject any assertion that does not contain its own identity as the intended audience.",
      "ja": "Oアサーションは、対象読者として認証サーバを特定聴衆を含まなければなりません。認証サーバは、対象読者として、独自のアイデンティティを含んでいない任意の主張を拒絶しなければなりません。"
    },
    {
      "indent": 3,
      "text": "o The assertion MUST contain an Expires At entity that limits the time window during which the assertion can be used. The authorization server MUST reject assertions that have expired (subject to allowable clock skew between systems). Note that the authorization server may reject assertions with an Expires At attribute value that is unreasonably far in the future.",
      "ja": "O含まなければなりませんアサーションは、アサーションを使用することが可能な時間窓を制限するエンティティにおける有効期限。認証サーバは、（システム間の許容クロック・スキューの対象を）有効期限が切れているの主張を拒絶しなければなりません。不当に遠い将来である属性値で期限切れと認証サーバがアサーションを拒否することができることに注意してください。"
    },
    {
      "indent": 3,
      "text": "o The assertion MAY contain an Issued At entity containing the UTC time at which the assertion was issued.",
      "ja": "Oアサーションは、アサーションが発行されたときのUTC時刻を含むエンティティで発行含むかもしれません。"
    },
    {
      "indent": 3,
      "text": "o The authorization server MUST reject assertions with an invalid signature or MAC. The algorithm used to validate the signature or message authentication code and the mechanism for designating the secret used to generate the signature or message authentication code over the assertion are beyond the scope of this specification.",
      "ja": "O認証サーバが無効の署名またはMACとの主張を拒絶しなければなりません。署名又はメッセージ認証コードとアサーション上署名又はメッセージ認証コードを生成するために使用される秘密を指定するためのメカニズムを検証するために使用されるアルゴリズムは、本明細書の範囲外です。"
    },
    {
      "indent": 0,
      "text": "6. Common Scenarios",
      "section_title": true,
      "ja": "6.一般的なシナリオ"
    },
    {
      "indent": 3,
      "text": "The following provides additional guidance, beyond the format and processing rules defined in Sections 4 and 5, on assertion use for a number of common use cases.",
      "ja": "以下は一般的な使用事例数のアサーション使用に、セクション4および5で定義されたフォーマットと処理ルールを超えて、追加的なガイダンスを提供します。"
    },
    {
      "indent": 0,
      "text": "6.1. Client Authentication",
      "section_title": true,
      "ja": "6.1。クライアント認証"
    },
    {
      "indent": 3,
      "text": "A client uses an assertion to authenticate to the authorization server's token endpoint by using the \"client_assertion_type\" and \"client_assertion\" parameters as defined in Section 4.2. The Subject of the assertion identifies the client. If the assertion is self-issued by the client, the Issuer of the assertion also identifies the client.",
      "ja": "クライアントは、セクション4.2で定義されている「client_assertion_type」と「client_assertion」パラメータを使用して認証サーバーのトークンエンドポイントに認証するためのアサーションを使用しています。アサーションの件名は、クライアントを識別します。アサーションが自己発行したクライアントである場合は、アサーションの発行者は、クライアントを識別します。"
    },
    {
      "indent": 3,
      "text": "The example in Section 4.2 shows a client authenticating using an assertion during an access token request.",
      "ja": "セクション4.2の例では、アクセストークンの要求時にアサーションを使用してクライアント認証を示しています。"
    },
    {
      "indent": 0,
      "text": "6.2. Client Acting on Behalf of Itself",
      "section_title": true,
      "ja": "6.2。自体のために行動するクライアント"
    },
    {
      "indent": 3,
      "text": "When a client is accessing resources on behalf of itself, it does so in a manner analogous to the Client Credentials Grant defined in Section 4.4 of OAuth 2.0 [RFC6749]. This is a special case that combines both the authentication and authorization grant usage patterns. In this case, the interactions with the authorization server should be treated as using an assertion for Client Authentication according to Section 4.2, while using the \"grant_type\" parameter with the value \"client_credentials\" to indicate that the client is requesting an access token using only its client credentials.",
      "ja": "クライアントは、自身に代わってリソースにアクセスしている場合は、OAuth 2.0の[RFC6749]のセクション4.4で定義されたクライアントの資格情報グラントと同様の方法でそうします。これは、認証と承認の許可使用パターンの両方を兼ね備えた特殊なケースです。クライアントのみを使用してアクセストークンを要求していることを示すために「client_credentials」値と「grant_type」パラメータを使用しながらこの場合、認証サーバとの相互作用は、セクション4.2に従ってクライアント認証のためのアサーションを使用するものとして扱われるべきですそのクライアントの資格情報。"
    },
    {
      "indent": 3,
      "text": "The following example demonstrates an assertion being used for a client credentials access token request, as defined in Section 4.4.2 of OAuth 2.0 [RFC6749] (with extra line breaks for display purposes only):",
      "ja": "次の例では、OAuth 2.0の（表示のみの目的のための余分な改行を有する）[RFC6749]のセクション4.4.2で定義されるようにクライアントの資格情報は、トークン要求をアクセスするために使用されるアサーションを示しています"
    },
    {
      "indent": 5,
      "text": "POST /token HTTP/1.1 Host: server.example.com Content-Type: application/x-www-form-urlencoded",
      "ja": "POST /トークンHTTP / 1.1ホスト：server.example.comのContent-Type：アプリケーション/ x-www-form-urlencodedで"
    },
    {
      "indent": 5,
      "text": "grant_type=client_credentials& client_assertion_type=urn%3Aietf%3Aparams%3Aoauth %3Aclient-assertion-type%3Asaml2-bearer& client_assertion=PHNhbW...[omitted for brevity]...ZT",
      "ja": "grant_type = client_credentials＆client_assertion_type = URN％3Aietf％3Aparams％3Aoauth％3Aclientアサーション型％3Asaml2ベアラ＆client_assertion = PHNhbW ... [簡潔にするために省略] ... ZT"
    },
    {
      "indent": 0,
      "text": "6.3. Client Acting on Behalf of a User",
      "section_title": true,
      "ja": "6.3。ユーザーの代わりに動作クライアント"
    },
    {
      "indent": 3,
      "text": "When a client is accessing resources on behalf of a user, it does so by using the \"grant_type\" and \"assertion\" parameters as defined in Section 4.1. The Subject identifies an authorized accessor for which the access token is being requested (typically, the resource owner or an authorized delegate).",
      "ja": "クライアントがユーザーに代わってリソースにアクセスしている場合は、セクション4.1で定義されている「grant_type」と「アサーション」パラメータを使用することにより、そのようにします。テーマは、アクセストークンが要求されている認可アクセッサを特定する（典型的には、リソースの所有者または権限委譲）。"
    },
    {
      "indent": 3,
      "text": "The example in Section 4.1 shows a client making an access token request using an assertion as an authorization grant.",
      "ja": "4.1節の例では、認可助成金としてアサーションを使用してアクセストークン要求を行ったクライアントを示しています。"
    },
    {
      "indent": 0,
      "text": "6.3.1. Client Acting on Behalf of an Anonymous User",
      "section_title": true,
      "ja": "6.3.1。匿名ユーザーに代わって動作するクライアント"
    },
    {
      "indent": 3,
      "text": "When a client is accessing resources on behalf of an anonymous user, a mutually agreed-upon Subject identifier indicating anonymity is used. The Subject value might be an opaque persistent or transient pseudonymous identifier for the user or be an agreed-upon static value indicating an anonymous user (e.g., \"anonymous\"). The authorization may be based upon additional criteria, such as additional attributes or claims provided in the assertion. For example, a client might present an assertion from a trusted issuer asserting that the bearer is over 18 via an included claim. In this case, no additional information about the user's identity is included, yet all the data needed to issue an access token is present.",
      "ja": "クライアントは、匿名ユーザーに代わってリソースにアクセスしている場合は、相互に合意したサブジェクト識別子が使用されている匿名性を示しています。テーマ値は、匿名ユーザ（例えば、「匿名」）を示すユーザ又は合意される静的な値のために不透明永続的または一時変名識別子であるかもしれません。許可は、アサーション内に設けられた追加の属性または特許請求の範囲のような追加の基準、に基づくことができます。例えば、クライアントは、ベアラが含まれる請求項介して18以上であることを主張する、信頼できる発行元からの主張を提示するかもしれません。この場合、ユーザのアイデンティティについての追加情報が含まれていない、まだアクセストークンを発行するために必要なすべてのデータが存在しています。"
    },
    {
      "indent": 3,
      "text": "More information about anonymity, pseudonymity, and privacy considerations in general can be found in [RFC6973].",
      "ja": "一般的には匿名性、偽名、およびプライバシーの考慮事項の詳細については、[RFC6973]で見つけることができます。"
    },
    {
      "indent": 0,
      "text": "7. Interoperability Considerations",
      "section_title": true,
      "ja": "7.相互運用性に関する注意事項"
    },
    {
      "indent": 3,
      "text": "This specification defines a framework for using assertions with OAuth 2.0. However, as an abstract framework in which the data formats used for representing many values are not defined, on its own, this specification is not sufficient to produce interoperable implementations.",
      "ja": "この仕様はOAuth 2.0のでアサーションを使用するためのフレームワークを定義します。しかし、多くの値を表すために使用されるデータフォーマットは、独自に定義されていない抽象的枠組みとして、本明細書では相互運用可能な実装を生成するのに十分ではありません。"
    },
    {
      "indent": 3,
      "text": "Two other specifications that profile this framework for specific assertions have been developed: [RFC7522] uses SAML 2.0 Assertions and [RFC7523] uses JSON Web Tokens (JWTs). These two instantiations of this framework specify additional details about the assertion encoding and processing rules for using those kinds of assertions with OAuth 2.0.",
      "ja": "特定のアサーションは、このフレームワークのプロファイルを他の二つの規格が開発されている：[RFC7522]はSAML 2.0アサーション及び[RFC7523]を使用してJSONウェブトークン（JWTs）を使用します。このフレームワークのこれらの二つのインスタンスは、OAuth 2.0のアサーションとのこれらの種類を使用するためのアサーション符号化及び処理ルールに関する追加の詳細を指定します。"
    },
    {
      "indent": 3,
      "text": "However, even when profiled for specific assertion types, agreements between system entities regarding identifiers, keys, and endpoints are required in order to achieve interoperable deployments. Specific items that require agreement are as follows: values for the Issuer and Audience identifiers, supported assertion and client authentication types, the location of the token endpoint, the key used to apply and verify the digital signature or MAC over the assertion, one-time use restrictions on assertions, maximum assertion lifetime allowed, and the specific Subject and attribute requirements of the assertion. The exchange of such information is explicitly out of the scope of this specification. Deployments for particular trust frameworks, circles of trust, or other uses cases will need to agree among the participants on the kinds of values to be used for some abstract fields defined by this specification. In some cases, additional profiles may be created that constrain or prescribe these values or specify how they are to be exchanged. The \"OAuth 2.0 Dynamic Client Registration Core Protocol\" [OAUTH-DYN-REG] is one such profile that enables OAuth Clients to register metadata about themselves at an authorization server.",
      "ja": "しかし、特定のアサーション・タイプに対してプロファイリング場合でも、識別子、キー、およびエンドポイントに関するシステムエンティティ間の協定は、相互運用可能な展開を実現するために必要とされています。次のように合意を必要とする特定の項目は、次のとおり発行者と閲覧者識別子の値は、サポートされているアサーションとクライアントの認証タイプ、トークンエンドポイントの位置、アサーションを介してデジタル署名またはMACを適用して検証するために使用されるキー、ワンタイムアサーションの使用制限は、最大アサーション寿命が許可され、かつ特定の件名や主張の要件を属性。そのような情報の交換は、この仕様の範囲の外に、明示的です。特定の信頼フレームワーク、信頼の円、または他の用途の例のための配備は、この仕様で定義されているいくつかの抽象フィールドに使用する値の種類の参加者の間で合意する必要があります。いくつかのケースでは、追加のプロファイルは、拘束したり、これらの値を処方したり、それらを交換する方法を指定を作成することができます。 「OAuth 2.0の動的なクライアント登録コアプロトコル」[OAuthの-DYN-REG]は認証サーバで自分自身に関するメタデータを登録するためのOAuthクライアントを可能にするものなのプロファイルです。"
    },
    {
      "indent": 0,
      "text": "8. Security Considerations",
      "section_title": true,
      "ja": "8.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "This section discusses security considerations that apply when using assertions with OAuth 2.0 as described in this document. As discussed in Section 3, there are two different ways to obtain assertions: either as self-issued or obtained from a third-party token service. While the actual interactions for obtaining an assertion are outside the scope of this document, the details are important from a security perspective. Section 3 discusses the high-level architectural aspects. Many of the security considerations discussed in this section are applicable to both the OAuth exchange as well as the client obtaining the assertion.",
      "ja": "このセクションでは、この文書で説明したようにOAuth 2.0とアサーションを使用する場合に適用されるセキュリティ上の考慮事項について説明します。自己発行などまたはサードパーティのトークンサービスから取得したいずれか：第3節で述べたように、アサーションを取得するには、2つの異なる方法があります。アサーションを得るための実際の相互作用が、この文書の範囲外であるが、詳細は、セキュリティの観点から重要です。第3節では、高レベルのアーキテクチャの側面を説明します。このセクションで説明したセキュリティの考慮事項の多くは、OAuthの交換だけでなく、アサーションを取得するクライアントの両方に適用されます。"
    },
    {
      "indent": 3,
      "text": "The remainder of this section focuses on the exchanges that concern presenting an assertion for client authentication and for the authorization grant.",
      "ja": "このセクションの残りの部分は、クライアント認証用と承認の付与のためのアサーションを提示懸念の交流に焦点を当てています。"
    },
    {
      "indent": 0,
      "text": "8.1. Forged Assertion",
      "section_title": true,
      "ja": "8.1。鍛造アサーション"
    },
    {
      "indent": 3,
      "text": "Threat: An adversary could forge or alter an assertion in order to obtain an access token (in the case of the authorization grant) or to impersonate a client (in the case of the client authentication mechanism).",
      "ja": "脅威：敵は偽造または（認証付与の場合）アクセストークンを取得するか、（クライアント認証メカニズムの場合）クライアントを偽装するために、アサーションを変更することができます。"
    },
    {
      "indent": 3,
      "text": "Countermeasures: To avoid this kind of attack, the entities must assure that proper mechanisms for protecting the integrity of the assertion are employed. This includes the issuer digitally signing the assertion or computing a MAC over the assertion.",
      "ja": "対策：この種の攻撃を回避するためには、エンティティは、アサーションの完全性を保護するための適切なメカニズムが採用されていることを保証しなければなりません。これは、発行者がデジタルアサーションに署名するか、アサーションの上にMACを計算しています。"
    },
    {
      "indent": 0,
      "text": "8.2. Stolen Assertion",
      "section_title": true,
      "ja": "8.2。盗まれたアサーション"
    },
    {
      "indent": 3,
      "text": "Threat: An adversary may be able obtain an assertion (e.g., by eavesdropping) and then reuse it (replay it) at a later point in time.",
      "ja": "脅威：敵対者は、（盗聴することによって、例えば）アサーションを得ることができ、その後、後の時点で（それを再生する）、それを再利用することができます。"
    },
    {
      "indent": 3,
      "text": "Countermeasures: The primary mitigation for this threat is the use of secure communication channels with server authentication for all network exchanges.",
      "ja": "対策：この脅威の主な緩和策は、すべてのネットワークの交換のためのサーバー認証でセキュアな通信チャネルを使用することです。"
    },
    {
      "indent": 6,
      "text": "An assertion may also contain several elements to prevent replay attacks. There is, however, a clear trade-off between reusing an assertion for multiple exchanges and obtaining and creating new, fresh assertions.",
      "ja": "アサーションはまた、リプレイ攻撃を防ぐために、いくつかの要素が含まれていてもよいです。複数の交換のためのアサーションを再利用して取得して、新しい、新鮮なアサーションを作成する間に明確なトレードオフは、しかし、があります。"
    },
    {
      "indent": 6,
      "text": "Authorization servers and resource servers may use a combination of the Assertion ID and Issued At/Expires At attributes for replay protection. Previously processed assertions may be rejected based on the Assertion ID. The addition of the validity window relieves the authorization server from maintaining an infinite state table of processed Assertion IDs.",
      "ja": "認証サーバーとリソースサーバーは、アサーションIDの組み合わせを使用してで発行可能/再生保護のための属性で期限が切れます。以前に処理されたアサーションは、アサーションIDに基づいて拒否することができます。有効ウィンドウの添加は、処理アサーションIDの無限の状態テーブルを維持することから、認証サーバを軽減します。"
    },
    {
      "indent": 0,
      "text": "8.3. Unauthorized Disclosure of Personal Information",
      "section_title": true,
      "ja": "8.3。個人情報の不正な開示"
    },
    {
      "indent": 3,
      "text": "Threat: The ability for other entities to obtain information about an individual, such as authentication information, role in an organization, or other authorization-relevant information, raises privacy concerns.",
      "ja": "脅威：このよう認証情報、組織内の役割、または他の認証関連情報として、個別の情報を取得するために他のエンティティのための能力は、プライバシーの問題を提起します。"
    },
    {
      "indent": 3,
      "text": "Countermeasures: To address this threat, two cases need to be differentiated:",
      "ja": "対策：この脅威に対処するために、2つのケースが区別される必要があります。"
    },
    {
      "indent": 6,
      "text": "First, a third party that did not participate in any of the exchange is prevented from eavesdropping on the content of the assertion by employing confidentiality protection of the exchange using TLS. This ensures that an eavesdropper on the wire is unable to obtain information. However, this does not prevent legitimate protocol entities from obtaining information that they are not allowed to possess from assertions. Some assertion formats allow for the assertion to be encrypted, preventing unauthorized parties from inspecting the content.",
      "ja": "まず、為替のいずれかに参加しなかった第三者は、TLSを使用してExchangeの機密保護を使用することによって、アサーションの内容に盗聴を防止することができます。これは、ワイヤ上の盗聴者が情報を入手することができないことを保証します。しかし、これは彼らがアサーションから所持を許可されていないことの情報を取得する正当なプロトコルエンティティを防ぐことはできません。アサーションを暗号化するためのいくつかのアサーションフォーマットは、コンテンツを検査する権限のないパーティーを防止できます。"
    },
    {
      "indent": 6,
      "text": "Second, an authorization server may obtain an assertion that was created by a third-party token service and that token service may have placed attributes into the assertion. To mitigate potential privacy problems, prior consent for the release of such attribute information from the resource owner should be obtained. OAuth itself does not directly provide such capabilities, but this consent approval may be obtained using other identity management protocols or user consent interactions; it may also be obtained in an out-of-band fashion.",
      "ja": "第二に、サードパーティのトークンサービスとそのトークンサービスによって作成されたアサーションを得ることができる認証サーバは、アサーションに属性を置いている場合があります。潜在的なプライバシーの問題を軽減するには、リソースの所有者から、このような属性情報のリリースのための事前の同意を得るべきです。 OAuthの自身が直接、このような機能を提供していませんが、この同意の承認が他のID管理プロトコルやユーザーの同意の相互作用を用いて得ることができます。それはまた、アウト・オブ・バンド方式で得ることができます。"
    },
    {
      "indent": 6,
      "text": "For the cases where a third-party token service creates assertions to be used for client authentication, privacy concerns are typically lower, since many of these clients are Web servers rather than individual devices operated by humans. If the assertions are used for client authentication of devices or software that can be closely linked to end users, then privacy protection safeguards need to be taken into consideration.",
      "ja": "これらのクライアントの多くは、Webサーバーではなく、人間が操作する個々のデバイスであるため、サードパーティのトークンサービスがクライアントの認証に使用するアサーションを作成する例については、プライバシーの問題は、一般的に低いです。アサーションは密接にエンドユーザーにリンクすることができるデバイスやソフトウェアのクライアント認証に使用されている場合は、プライバシー保護の保障措置を考慮する必要があります。"
    },
    {
      "indent": 6,
      "text": "Further guidance on privacy friendly protocol design can be found in [RFC6973].",
      "ja": "プライバシー優しいプロトコルの設計上のさらなるガイダンスは、[RFC6973]で見つけることができます。"
    },
    {
      "indent": 0,
      "text": "8.4. Privacy Considerations",
      "section_title": true,
      "ja": "8.4。プライバシーの考慮事項"
    },
    {
      "indent": 3,
      "text": "An assertion may contain privacy-sensitive information and, to prevent disclosure of such information to unintended parties, should only be transmitted over encrypted channels, such as TLS. In cases where it is desirable to prevent disclosure of certain information to the client, the assertion (or portions of it) should be encrypted to the authorization server.",
      "ja": "アサーションは、プライバシー、機密情報が含まれていてもよいと、意図しない相手にそのような情報の開示を防ぐために、唯一のTLSなどの暗号化されたチャネルを、介して送信されなければなりません。クライアントに特定の情報の開示を防止することが望ましい場合には、アサーション（またはその一部）は、認証サーバに暗号化されるべきです。"
    },
    {
      "indent": 3,
      "text": "Deployments should determine the minimum amount of information necessary to complete the exchange and include only such information in the assertion. In some cases, the Subject identifier can be a value representing an anonymous or pseudonymous user, as described in Section 6.3.1.",
      "ja": "展開は、交換を完了するために必要な情報の最小量を決定し、主張にのみ、そのような情報を含むべきです。いくつかの場合では、対象識別子は、セクション6.3.1で説明したように、匿名またはペンネームユーザを表す値であってもよいです。"
    },
    {
      "indent": 0,
      "text": "9. IANA Considerations",
      "section_title": true,
      "ja": "9. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "This section registers three values, as listed in the subsections below, in the IANA \"OAuth Parameters\" registry established by RFC 6749 [RFC6749].",
      "ja": "以下のサブセクションに記載されているように、このセクションでは、RFC 6749 [RFC6749]によって確立IANA「OAuthのパラメータ」レジストリに、三つの値を登録します。"
    },
    {
      "indent": 0,
      "text": "9.1. \"assertion\" Parameter Registration",
      "section_title": true,
      "ja": "9.1。 「アサーション」パラメータの登録"
    },
    {
      "indent": 3,
      "text": "o Name: assertion",
      "ja": "O名：アサーション"
    },
    {
      "indent": 3,
      "text": "o Parameter Usage Location: token request",
      "ja": "Oパラメータ使用場所：トークン要求"
    },
    {
      "indent": 3,
      "text": "o Change Controller: IESG",
      "ja": "Oの変更コントローラ：IESG"
    },
    {
      "indent": 3,
      "text": "o Specification Document(s): RFC 7521",
      "ja": "O仕様書（S）：RFC 7521"
    },
    {
      "indent": 0,
      "text": "9.2. \"client_assertion\" Parameter Registration",
      "section_title": true,
      "ja": "9.2。 「client_assertion」パラメータ登録"
    },
    {
      "indent": 3,
      "text": "o Name: client_assertion",
      "ja": "O名：client_assertion"
    },
    {
      "indent": 3,
      "text": "o Parameter Usage Location: token request",
      "ja": "Oパラメータ使用場所：トークン要求"
    },
    {
      "indent": 3,
      "text": "o Change Controller: IESG",
      "ja": "Oの変更コントローラ：IESG"
    },
    {
      "indent": 3,
      "text": "o Specification Document(s): RFC 7521",
      "ja": "O仕様書（S）：RFC 7521"
    },
    {
      "indent": 0,
      "text": "9.3. \"client_assertion_type\" Parameter Registration",
      "section_title": true,
      "ja": "9.3。 「client_assertion_type」パラメータ登録"
    },
    {
      "indent": 3,
      "text": "o Name: client_assertion_type",
      "ja": "O名：client_assertion_type"
    },
    {
      "indent": 3,
      "text": "o Parameter Usage Location: token request",
      "ja": "Oパラメータ使用場所：トークン要求"
    },
    {
      "indent": 3,
      "text": "o Change Controller: IESG",
      "ja": "Oの変更コントローラ：IESG"
    },
    {
      "indent": 3,
      "text": "o Specification Document(s): RFC 7521",
      "ja": "O仕様書（S）：RFC 7521"
    },
    {
      "indent": 0,
      "text": "10. References",
      "section_title": true,
      "ja": "10.参考文献"
    },
    {
      "indent": 0,
      "text": "10.1. Normative References",
      "section_title": true,
      "ja": "10.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <http://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<http://www.rfc-editor.org/info/ RFC2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC3986] Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform Resource Identifier (URI): Generic Syntax\", STD 66, RFC 3986, DOI 10.17487/RFC3986, January 2005, <http://www.rfc-editor.org/info/rfc3986>.",
      "ja": "[RFC3986]バーナーズ - リー、T.、フィールディング、R.、およびL. Masinter、 \"ユニフォームリソース識別子（URI）：汎用構文\"、STD 66、RFC 3986、DOI 10.17487 / RFC3986、2005年1月<HTTP：/ /www.rfc-editor.org/info/rfc3986>。"
    },
    {
      "indent": 3,
      "text": "[RFC6749] Hardt, D., Ed., \"The OAuth 2.0 Authorization Framework\", RFC 6749, DOI 10.17487/RFC6749, October 2012, <http://www.rfc-editor.org/info/rfc6749>.",
      "ja": "[RFC6749]ハルト、D.編、 \"OAuth 2.0の認証フレームワーク\"、RFC 6749、DOI 10.17487 / RFC6749、2012年10月、<http://www.rfc-editor.org/info/rfc6749>。"
    },
    {
      "indent": 0,
      "text": "10.2. Informative References",
      "section_title": true,
      "ja": "10.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[OASIS.WS-Trust] Nadalin, A., Ed., Goodner, M., Ed., Gudgin, M., Ed., Barbir, A., Ed., and H. Granqvist, Ed., \"WS-Trust\", February 2009, <http://docs.oasis-open.org/ws-sx/ ws-trust/v1.4/ws-trust.html>.",
      "ja": "[OASIS.WSトラスト] Nadalin、A.編、Goodner、M.編、Gudgin、M.編、Barbir、A.編、及びH. Granqvist、編、「WS-トラスト」、2009年2月、<http://docs.oasis-open.org/ws-sx/ WS-信託/ V1.4 / WS-trust.html>。"
    },
    {
      "indent": 3,
      "text": "[OAUTH-DYN-REG] Richer, J., Ed., Jones, M., Bradley, J., Machulak, M., and P. Hunt, \"OAuth 2.0 Dynamic Client Registration Protocol\", Work in Progress, draft-ietf-oauth-dyn-reg-29, May 2015.",
      "ja": "[OAuthの-DYN-REG]豊かな、J.、編、ジョーンズ、M.、ブラッドリー、J.、Machulak、M.、およびP.ハント、 \"OAuth 2.0のダイナミッククライアント登録プロトコル\"、ProgressのWork、draft- IETF-OAuthの-DYN-REG-29、2015年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC6755] Campbell, B. and H. Tschofenig, \"An IETF URN Sub-Namespace for OAuth\", RFC 6755, DOI 10.17487/RFC6755, October 2012, <http://www.rfc-editor.org/info/rfc6755>.",
      "ja": "[RFC6755]キャンベル、B.及びH. Tschofenig、 \"OAuthのた​​めのIETF URNサブ名前空間\"、RFC 6755、DOI 10.17487 / RFC6755、2012年10月、<http://www.rfc-editor.org/info/rfc6755 >。"
    },
    {
      "indent": 3,
      "text": "[RFC6973] Cooper, A., Tschofenig, H., Aboba, B., Peterson, J., Morris, J., Hansen, M., and R. Smith, \"Privacy Considerations for Internet Protocols\", RFC 6973, DOI 10.17487/RFC6973, July 2013, <http://www.rfc-editor.org/info/rfc6973>.",
      "ja": "[RFC6973]クーパー、A.、Tschofenig、H.、Aboba、B.、ピーターソン、J.、モリス、J.、ハンセン、M.、およびR.スミス、 \"インターネットプロトコルのためのプライバシーの考慮事項\"、RFC 6973、DOI 10.17487 / RFC6973、2013年7月、<http://www.rfc-editor.org/info/rfc6973>。"
    },
    {
      "indent": 3,
      "text": "[RFC7522] Campbell, B., Mortimore, C., and M. Jones, \"Security Assertion Markup Language (SAML) 2.0 Profile for OAuth 2.0 Client Authentication and Authorization Grants\", RFC 7522, DOI 10.17487/RFC7522, May 2015, <http://www.rfc-editor.org/info/rfc7522>.",
      "ja": "[RFC7522]キャンベル、B.、Mortimore、C.、およびM.ジョーンズ、 \"セキュリティアサーションマークアップ言語（SAML）OAuth 2.0のクライアント認証と認可グラント2.0プロファイル\"、RFC 7522、DOI 10.17487 / RFC7522、2015年5月、< http://www.rfc-editor.org/info/rfc7522>。"
    },
    {
      "indent": 3,
      "text": "[RFC7523] Jones, M., Campbell, B., and C. Mortimore, \"JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants\", RFC 7523, DOI 10.17487/RFC7523, May 2015, <http://www.rfc-editor.org/info/rfc7523>.",
      "ja": "[RFC7523]ジョーンズ、M.、キャンベル、B.、およびC. Mortimore、RFC 7523 \"OAuth 2.0のクライアント認証と認可グラントのためのJSONウェブトークン（JWT）プロファイル\"、DOI 10.17487 / RFC7523、2015年5月、<HTTP： //www.rfc-editor.org/info/rfc7523>。"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "The authors wish to thank the following people who have influenced or contributed to this specification: Paul Madsen, Eric Sachs, Jian Cai, Tony Nadalin, Hannes Tschofenig, the authors of the OAuth WRAP specification, and the members of the OAuth working group.",
      "ja": "ポール・マドセン、エリック・サックス、建カイ、トニーNadalin、ハンネスTschofenig、OAuthのWRAP仕様の作者、およびOAuthのワーキンググループのメンバー：著者は、この仕様に影響を与えたり貢献した以下の方々に感謝したいです。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Brian Campbell Ping Identity",
      "ja": "ブライアン・キャンベルピング・アイデンティティ"
    },
    {
      "indent": 3,
      "text": "EMail: brian.d.campbell@gmail.com",
      "ja": "メールアドレス：brian.d.campbell@gmail.com"
    },
    {
      "indent": 3,
      "text": "Chuck Mortimore Salesforce.com",
      "ja": "チャックMortimore Salesforce.com"
    },
    {
      "indent": 3,
      "text": "EMail: cmortimore@salesforce.com",
      "ja": "メールアドレス：cmortimore@salesforce.com"
    },
    {
      "indent": 3,
      "text": "Michael B. Jones Microsoft",
      "ja": "マイケルB.ジョーンズマイクロソフト"
    },
    {
      "indent": 3,
      "text": "EMail: mbj@microsoft.com URI: http://self-issued.info/",
      "ja": "電子メール：mbj@microsoft.com URI：http://self-issued.info/"
    },
    {
      "indent": 3,
      "text": "Yaron Y. Goland Microsoft",
      "ja": "ヤロンY. Golandマイクロソフト"
    },
    {
      "indent": 3,
      "text": "EMail: yarong@microsoft.com",
      "ja": "メールアドレス：yarong@microsoft.com"
    }
  ]
}