{
  "title": {
    "text": "RFC 7427 - Signature Authentication in the Internet Key Exchange Version 2 (IKEv2)",
    "ja": "RFC 7427 - インターネット鍵交換バージョン2（IKEv2の）で署名認証"
  },
  "number": 7427,
  "created_at": "2019-11-02 01:15:35.388362+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                        T. Kivinen\nRequest for Comments: 7427                                 INSIDE Secure\nUpdates: 7296                                                  J. Snyder\nCategory: Standards Track                                       Opus One\nISSN: 2070-1721                                             January 2015",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Signature Authentication in the Internet Key Exchange Version 2 (IKEv2)",
      "ja": "インターネット鍵交換バージョン2（IKEv2の）で署名認証"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "The Internet Key Exchange Version 2 (IKEv2) protocol has limited support for the Elliptic Curve Digital Signature Algorithm (ECDSA). The current version only includes support for three Elliptic Curve groups, and there is a fixed hash algorithm tied to each group. This document generalizes IKEv2 signature support to allow any signature method supported by PKIX and also adds signature hash algorithm negotiation. This is a generic mechanism and is not limited to ECDSA; it can also be used with other signature algorithms.",
      "ja": "インターネット鍵交換バージョン2（IKEv2の）プロトコルは、楕円曲線デジタル署名アルゴリズム（ECDSA）を限定的にサポートしています。現在のバージョンは3つのだけ楕円曲線グループのサポートが含まれ、各グループに関連付けられた固定ハッシュアルゴリズムがあります。この文書では、PKIXでサポートされている任意の署名方式を可能にするためのIKEv2署名のサポートを一般化しても、署名ハッシュアルゴリズムのネゴシエーションを追加します。これは一般的なメカニズムであるとECDSAに限定されるものではありません。また、他の署名アルゴリズムと共に使用することができます。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 5741のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc7427.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc7427で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2015 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2015 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2\n2.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   4\n3.  Authentication Payload  . . . . . . . . . . . . . . . . . . .   4\n4.  Hash Algorithm Notification . . . . . . . . . . . . . . . . .   6\n5.  Selecting the Public Key Algorithm  . . . . . . . . . . . . .   7\n6.  Security Considerations . . . . . . . . . . . . . . . . . . .   8\n7.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   9\n8.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  10\n  8.1.  Normative References  . . . . . . . . . . . . . . . . . .  10\n  8.2.  Informative References  . . . . . . . . . . . . . . . . .  10\nAppendix A.  Commonly Used ASN.1 Objects  . . . . . . . . . . . .  12\n  A.1.  PKCS#1 1.5 RSA Encryption . . . . . . . . . . . . . . . .  12\n    A.1.1.  sha1WithRSAEncryption . . . . . . . . . . . . . . . .  12\n    A.1.2.  sha256WithRSAEncryption . . . . . . . . . . . . . . .  12\n    A.1.3.  sha384WithRSAEncryption . . . . . . . . . . . . . . .  13\n    A.1.4.  sha512WithRSAEncryption . . . . . . . . . . . . . . .  13\n  A.2.  DSA . . . . . . . . . . . . . . . . . . . . . . . . . . .  13\n    A.2.1.  dsa-with-sha1 . . . . . . . . . . . . . . . . . . . .  13\n    A.2.2.  dsa-with-sha256 . . . . . . . . . . . . . . . . . . .  14\n  A.3.  ECDSA . . . . . . . . . . . . . . . . . . . . . . . . . .  14\n    A.3.1.  ecdsa-with-sha1 . . . . . . . . . . . . . . . . . . .  14\n    A.3.2.  ecdsa-with-sha256 . . . . . . . . . . . . . . . . . .  14\n    A.3.3.  ecdsa-with-sha384 . . . . . . . . . . . . . . . . . .  15\n    A.3.4.  ecdsa-with-sha512 . . . . . . . . . . . . . . . . . .  15\n  A.4.  RSASSA-PSS  . . . . . . . . . . . . . . . . . . . . . . .  15\n    A.4.1.  RSASSA-PSS with Empty Parameters  . . . . . . . . . .  15\n    A.4.2.  RSASSA-PSS with Default Parameters  . . . . . . . . .  16\n    A.4.3.  RSASSA-PSS with SHA-256 . . . . . . . . . . . . . . .  17\nAppendix B.  IKEv2 Payload Example  . . . . . . . . . . . . . . .  17\n  B.1.  sha1WithRSAEncryption . . . . . . . . . . . . . . . . . .  17\nAcknowledgements  . . . . . . . . . . . . . . . . . . . . . . . .  18\nAuthors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  18",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "This document adds a new IKEv2 [RFC7296] authentication method to support signature methods in a more general way. The current signature-based authentication methods in IKEv2 are per algorithm, i.e., there is one for RSA digital signatures, one for DSS digital signatures (using SHA-1), and three for different ECDSA curves, each tied to exactly one hash algorithm. This design is cumbersome when more signature algorithms, hash algorithms, and elliptic curves need to be supported: o In IKEv2, authentication using RSA digital signatures calls for padding based on RSASSA-PKCS1-v1_5, although the newer RSASSA-PSS padding method is now recommended. (See Section 5 of \"Additional Algorithms and Identifiers for RSA Cryptography for use in PKIX Profile\" [RFC4055].)",
      "ja": "この文書では、より一般的な方法で署名方式をサポートするために、新しいのIKEv2 [RFC7296]認証方式を追加します。 IKEv2の中の現在の署名ベースの認証方法は、アルゴリズムごとである、すなわち、RSAデジタル署名、DSSデジタル署名のいずれかのものがある（使用SHA-1）、及び異なるECDSA曲線のための3つ、正確に1つのハッシュアルゴリズムに関連付けられた各。 IKEv2の中のO、RSAデジタル署名を用いて認証がRSASSA-PKCS1-v1_5のに基づいてパディングを求め、新しいRSASSA-PSSパディング法は今であるが：より多くの署名アルゴリズム、ハッシュアルゴリズム、及び楕円曲線をサポートする必要がある場合、この設計は煩雑ですお勧め。 （「PKIXプロファイルで使用するRSA暗号のための追加のアルゴリズムと識別子」[RFC4055]のセクション5を参照してください。）"
    },
    {
      "indent": 3,
      "text": "o With ECDSA and the Digital Signature Standard (DSS), there is no way to extract the hash algorithm from the signature. Thus, for each new hash function to be supported with ECDSA or DSA, new authentication methods would be needed. Support for new hash functions is particularly needed for DSS, because the current restriction to SHA-1 limits its security, meaning there is no point of using long keys with SHA-1.",
      "ja": "ECDSAとデジタル署名標準（DSS）を用いてO、署名のハッシュアルゴリズムを抽出する方法はありません。このように、ECDSAまたはDSAでサポートされるそれぞれの新しいハッシュ関数のために、新しい認証方法が必要とされるであろう。 SHA-1への電流の制限はSHA-1との長いキーを使用することのない点がないことを意味、そのセキュリティを制限するので、新しいハッシュ関数のサポートは特に、DSSのために必要とされています。"
    },
    {
      "indent": 3,
      "text": "o The tying of ECDSA authentication methods to particular elliptic curve groups requires definition of additional methods for each new group. The combination of new ECDSA groups and hash functions will cause the number of required authentication methods to become unmanageable. Furthermore, the restriction of ECDSA authentication to a specific group is inconsistent with the approach taken with DSS.",
      "ja": "O特定の楕円曲線群にECDSA認証方法の結束は、各新しいグループのための追加方法の定義を必要とします。新しいECDSAグループとハッシュ関数の組み合わせが必要な認証方法の数が管理不能になる場合があります。さらに、特定のグループにECDSA認証の制限は、DSSで撮影されたアプローチと矛盾します。"
    },
    {
      "indent": 3,
      "text": "With the selection of SHA-3, it might be possible that a signature method can be used with either SHA-3 or SHA-2. This means that a new mechanism for negotiating the hash algorithm for a signature algorithm is needed.",
      "ja": "SHA-3の選択と、署名方式はSHA-3またはSHA-2のいずれかと共に使用することができることは可能かもしれません。これは、署名アルゴリズムのハッシュアルゴリズムを交渉するための新しいメカニズムが必要であることを意味します。"
    },
    {
      "indent": 3,
      "text": "This document specifies two things:",
      "ja": "この文書では、二つのことを指定します。"
    },
    {
      "indent": 3,
      "text": "1. A new authentication method that includes enough information inside the Authentication payload data so the signature hash algorithm can be extracted (see Section 3).",
      "ja": "1.署名ハッシュアルゴリズム（セクション3参照）を抽出することができるように、認証ペイロードデータの内部に十分な情報を含む新しい認証方法。"
    },
    {
      "indent": 3,
      "text": "2. A method to indicate supported signature hash algorithms (see Section 4). This allows the peer to know which hash algorithms are supported by the other end and use one of them (provided one is allowed by policy). There is no requirement to actually negotiate one common hash algorithm, as different hash algorithms can be used in different directions if needed.",
      "ja": "2.サポートされている署名のハッシュアルゴリズムを示すための方法（セクション4を参照）。これは、ピアが他方の端部によって支持されているハッシュアルゴリズムを知っているし、それらのいずれか（いずれかを提供ポリシーによって許可されている）を使用することを可能にします。必要に応じて、異なるハッシュアルゴリズムが異なる方向で使用することができるよう、実際に、一つの共通ハッシュアルゴリズムを交渉する必要はありません。"
    },
    {
      "indent": 3,
      "text": "The new digital signature method is flexible enough to include all current signature methods (RSA, DSA, ECDSA, RSASSA-PSS, etc.) and add new methods (ECGDSA, ElGamal, etc.) in the future. To support this flexibility, the signature algorithm is specified in the same way that PKIX [RFC5280] specifies the signature of the Digital Certificate, by placing a simple ASN.1 object before the actual signature data. This ASN.1 object contains an OID specifying the algorithm and associated parameters. When an IKEv2 implementation supports a fixed set of signature methods with commonly used parameters, it is acceptable for the implementation to treat the ASN.1 object as a binary blob that can be compared against the fixed set of known values. IKEv2 implementations can also parse the ASN.1 and extract the signature algorithm and associated parameters.",
      "ja": "新しいデジタル署名方式は、すべての現在の署名方式（RSA、DSA、ECDSA、RSASSA-PSSなど）を含む、将来的に新規な方法（ECGDSA、エルガマル、等）を追加するのに十分に柔軟です。この柔軟性をサポートするために、署名アルゴリズムは、PKIX [RFC5280]は、実際の署名データの前に簡単なASN.1オブジェクトを配置することにより、デジタル証明書の署名を指定するのと同じ方法で指定されています。このASN.1オブジェクトは、アルゴリズムと関連するパラメータを指定するOIDが含まれています。 IKEv2の実装が一般的に使用されるパラメータを持つ署名方式の固定セットをサポートしている場合、それは既知の値の固定セットと比較することができるバイナリBLOBとしてASN.1オブジェクトを治療するための実装のために許容可能です。 IKEv2の実装はまた、ASN.1を解析し、署名アルゴリズムと関連するパラメータを抽出することができます。"
    },
    {
      "indent": 0,
      "text": "2. Terminology",
      "section_title": true,
      "ja": "2.用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はあります[RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "3. Authentication Payload",
      "section_title": true,
      "ja": "3.認証ペイロード"
    },
    {
      "indent": 3,
      "text": "This document specifies a new \"Digital Signature\" authentication method. This method can be used with any type of signature. As the authentication methods are not negotiated in IKEv2, the peer is only allowed to use this authentication method if the Notify payload of type SIGNATURE_HASH_ALGORITHMS has been sent and received by each peer.",
      "ja": "この文書は、新しい「デジタル署名」の認証方法を指定します。この方法は、署名の任意のタイプで使用することができます。認証方法は、IKEv2の中で交渉されていないとして、ピアのみ型SIGNATURE_HASH_ALGORITHMSのペイロードを通知する場合は、この認証方法を使用することが許可されている各ピアによって送信され、受信されています。"
    },
    {
      "indent": 3,
      "text": "In this authentication method, the Authentication Data field inside the Authentication payload does not just include the signature value, as do other existing IKEv2 Authentication payloads. Instead, the signature value is prefixed with an ASN.1 object indicating the algorithm used to generate the signature. The ASN.1 object contains the algorithm identification OID, which identifies both the signature algorithm and the hash used when calculating the signature. In addition to the OID, the ASN.1 object can contain optional parameters that might be needed for algorithms such as RSASSA-PSS (see Section 8.1 of [RFC3447]).",
      "ja": "他の既存のIKEv2認証ペイロードがそうであるように、この認証方法において、認証ペイロード内の認証データフィールドは単に、署名値を含んでいません。代わりに、署名値は、署名を生成するために使用されるアルゴリズムを示すASN.1オブジェクトが付いています。 ASN.1オブジェクトは署名アルゴリズム及び署名を計算する際に使用されるハッシュの両方を識別するアルゴリズム識別OIDを含んでいます。 OIDに加えて、ASN.1オブジェクトは、RSASSA-PSS（[RFC3447]のセクション8.1を参照）のようなアルゴリズムのために必要とされるかもしれないオプションのパラメータを含むことができます。"
    },
    {
      "indent": 3,
      "text": "To make implementations easier, the ASN.1 object is prefixed by the 8-bit length field. This length field allows simple implementations to know the length of the ASN.1 object without the need to parse it, so they can use it as a binary blob to be compared against known signature algorithm ASN.1 objects. Thus, simple implementations may not need to be able to parse or generate ASN.1 objects. See Appendix A for commonly used ASN.1 objects.",
      "ja": "実装を容易にするために、ASN.1オブジェクトは、8ビット長のフィールドで始まるれます。この長さフィールドは、単純な実装がそれを解析する必要なしにASN.1オブジェクトの長さを知ることができるので、それらは、既知の署名アルゴリズムのASN.1オブジェクトと比較するバイナリBLOBとして使用することができます。したがって、単純な実装では、解析またはASN.1オブジェクトを生成できるようにする必要はないかもしれません。一般的に使用されるASN.1オブジェクトについては、付録Aを参照してください。"
    },
    {
      "indent": 3,
      "text": "The ASN.1 used here is the same ASN.1 used in the AlgorithmIdentifier of PKIX (see Section 4.1.1.2 of [RFC5280]), encoded using distinguished encoding rules (DER) [CCITT.X690.2002]. The algorithm OID inside the ASN.1 specifies the signature algorithm and the hash function, both of which are needed for signature verification.",
      "ja": "ここで使用されるASN.1は（[RFC5280]のセクション4.1.1.2を参照）PKIXののAlgorithmIdentifierで使用したのと同じASN.1である、[CCITT.X690.2002]（DER）識別符号化規則を使用してエンコード。 ASN.1内部アルゴリズムOIDは、署名アルゴリズム及び署名検証のために必要とされているどちらのハッシュ関数を指定します。"
    },
    {
      "indent": 3,
      "text": "Currently, only the RSASSA-PSS signature algorithm uses the optional parameters. For other signature algorithms, the parameters are either NULL or missing. Note that for some algorithms there are two possible ASN.1 encodings, one with optional parameters included but set to NULL and the other where the optional parameters are omitted. These dual encodings exist because of the way those algorithms are specified. When encoding the ASN.1, implementations SHOULD use the preferred format called for by the algorithm specification. If the algorithm specification says \"preferredPresent\", then the parameters object needs to be present, although it will be NULL if no parameters are specified. If the algorithm specification says \"preferredAbsent\", then the entire optional parameters object is missing.",
      "ja": "現在、唯一のRSASSA-PSS署名アルゴリズムは、オプションのパラメータを使用しています。他の署名アルゴリズムのために、パラメータがNULLまたは行方不明のいずれかです。いくつかのアルゴリズムのための二つの可能なASN.1符号化があることに注意してください、オプションのパラメータを有するものが含まれるがNULLに設定され、オプションのパラメータが省略される他。これらのデュアルエンコーディングがあるため、これらのアルゴリズムが指定されている方法で存在します。 ASN.1をコードする場合、実装は、アルゴリズムの仕様によって要求される好適なフォーマットを使用すべきです。アルゴリズムの仕様は「preferredPresent」と言う場合にはパラメータを指定しない場合、それはNULLになりますが、その後、パラメータオブジェクトは、存在する必要があります。アルゴリズムの仕様は「preferredAbsent」と言う場合には、全体のオプションパラメータオブジェクトがありません。"
    },
    {
      "indent": 3,
      "text": "The Authentication payload is defined in IKEv2 as follows:",
      "ja": "次のように認証ペイロードは、IKEv2の中で定義されます。"
    },
    {
      "indent": 6,
      "text": "                     1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| Next Payload  |C|  RESERVED   |         Payload Length        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| Auth Method   |                RESERVED                       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n~                      Authentication Data                      ~\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 18,
      "text": "Figure 1: Authentication Payload Format",
      "ja": "図1：認証ペイロードフォーマット"
    },
    {
      "indent": 3,
      "text": "o Auth Method (1 octet) - Specifies the method of authentication used.",
      "ja": "O認証方法（1つのオクテット） - 使用される認証方法を指定します。"
    },
    {
      "indent": 6,
      "text": "Mechanism                              Value\n-----------------------------------------------------------------\nDigital Signature                      14",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Computed as specified in Section 2.15 of [RFC7296] using a private key associated with the public key sent in the Certificate payload and using one of the hash algorithms sent by the other end in the Notify payload of type SIGNATURE_HASH_ALGORITHMS. If both ends send and receive SIGNATURE_HASH_ALGORITHMS Notify payloads, and signature authentication is to be used, then the authentication method specified in this Authentication payload MUST be used. The format of the Authentication Data field is different from other Authentication methods and is specified below.",
      "ja": "証明書ペイロードに、タイプSIGNATURE_HASH_ALGORITHMSの通知ペイロードにもう一方の端によって送信されたハッシュアルゴリズムのいずれかを使用して送信された公開鍵に関連する秘密鍵を使用して、[RFC7296]のセクション2.15で指定されるように計算されました。両端が送信しSIGNATURE_HASH_ALGORITHMSはペイロードを通知受け取り、署名認証を使用する場合、この認証ペイロードで指定された認証方法が使用されなければなりません。認証データフィールドのフォーマットは、他の認証方法とは異なり、以下に規定されます。"
    },
    {
      "indent": 3,
      "text": "o Authentication Data (variable length) - See Section 2.15 of [RFC7296]. For \"Digital Signature\" format, the Authentication Data is formatted as follows:",
      "ja": "認証データO（可変長） -  [RFC7296]のセクション2.15を参照してください。以下のように「デジタル署名」形式の場合は、認証データがフォーマットされます。"
    },
    {
      "indent": 6,
      "text": "                     1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| ASN.1 Length  | AlgorithmIdentifier ASN.1 object              |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n~        AlgorithmIdentifier ASN.1 object continuing            ~\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n~                         Signature Value                       ~\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 19,
      "text": "Figure 2: Authentication Data Format",
      "ja": "図2：認証データフォーマット"
    },
    {
      "indent": 6,
      "text": "* ASN.1 Length (1 octet) - This field contains the length of the ASN.1-encoded AlgorithmIdentifier object.",
      "ja": "* ASN.1長（1つのオクテット） - このフィールドは、ASN.1エンコードのAlgorithmIdentifierオブジェクトの長さを含みます。"
    },
    {
      "indent": 6,
      "text": "* Algorithm Identifier (variable length) - This field contains the AlgorithmIdentifier ASN.1 object.",
      "ja": "*アルゴリズム識別子（可変長） - このフィールドは、ASN.1のAlgorithmIdentifierオブジェクトを含みます。"
    },
    {
      "indent": 6,
      "text": "* Signature Value (variable length) - This field contains the actual signature value.",
      "ja": "*署名値（可変長） - このフィールドは、実際の署名値を含んでいます。"
    },
    {
      "indent": 6,
      "text": "There is no padding between the ASN.1 object and the signature value. For hash truncation, the method specified in ANSI X9.62:2005 [X9.62] MUST be used.",
      "ja": "ASN.1オブジェクトと署名値との間にパディングが存在しません。ハッシュトランケーションのために、ANSI X9.62に規定する方法：2005 [X9.62]は使用しなければなりません。"
    },
    {
      "indent": 0,
      "text": "4. Hash Algorithm Notification",
      "section_title": true,
      "ja": "4.ハッシュアルゴリズムの通知"
    },
    {
      "indent": 3,
      "text": "The supported hash algorithms that can be used for the signature algorithms are indicated with a Notify payload of type SIGNATURE_HASH_ALGORITHMS sent inside the IKE_SA_INIT exchange.",
      "ja": "署名アルゴリズムのために使用することができるサポートされているハッシュアルゴリズムは、IKE_SA_INIT交換内部に送ら型SIGNATURE_HASH_ALGORITHMSの通知ペイロードで示されています。"
    },
    {
      "indent": 3,
      "text": "This notification also implicitly indicates support of the new \"Digital Signature\" algorithm method, as well as the list of hash functions supported by the sending peer.",
      "ja": "この通知はまた、暗黙のうちに新しい「デジタル署名」アルゴリズム方法のサポートだけでなく、送信側ピアでサポートされているハッシュ関数のリストを示します。"
    },
    {
      "indent": 3,
      "text": "Both ends send their list of supported hash algorithms. When calculating the digital signature, a peer MUST pick one algorithm sent by the other peer. Note that different algorithms can be used in different directions. The algorithm OID indicating the selected hash algorithm (and signature algorithm) used when calculating the signature is sent inside the Authentication Data field of the Authentication payload (with Auth Method of \"Digital Signature\" as defined above).",
      "ja": "両端がサポートされたハッシュアルゴリズムの自分のリストを送信します。デジタル署名を計算する場合、ピアは他のピアによって送信されたつのアルゴリズムを選択しなければなりません。異なるアルゴリズムは異なる方向に使用することができることに留意されたいです。署名を算出する際に使用される選択されたハッシュアルゴリズム（および署名アルゴリズム）を示すアルゴリズムOIDは（上記で定義した「デジタル署名」の認証方法を用いて）認証ペイロードの認証データフィールド内に送られます。"
    },
    {
      "indent": 6,
      "text": "                     1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| Next Payload  |C|  RESERVED   |         Payload Length        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Protocol ID  |   SPI Size    |      Notify Message Type      |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n~                Security Parameter Index (SPI)                 ~\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n~                       Notification Data                       ~\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 22,
      "text": "Figure 3: Notify Payload Format",
      "ja": "図3：通知ペイロードフォーマット"
    },
    {
      "indent": 3,
      "text": "The Notify payload format is defined in Section 3.10 of [RFC7296]. When a Notify payload of type SIGNATURE_HASH_ALGORITHMS is sent, the Protocol ID field is set to 0, the SPI Size is set to 0, and the Notify Message Type is set to 16431.",
      "ja": "通知ペイロードフォーマットは、[RFC7296]のセクション3.10に定義されています。タイプSIGNATURE_HASH_ALGORITHMSの通知ペイロードが送信されると、プロトコルIDフィールドは0に設定され、SPIサイズが0に設定され、通知メッセージタイプが16431に設定されています。"
    },
    {
      "indent": 3,
      "text": "The Notification Data field contains the list of 16-bit hash algorithm identifiers from the Hash Algorithm Identifiers of IANA's \"Internet Key Exchange Version 2 (IKEv2) Parameters\" registry. There is no padding between the hash algorithm identifiers.",
      "ja": "通知データフィールドは、IANAの「インターネットキー交換バージョン2（IKEv2の）パラメータ」レジストリのハッシュアルゴリズム識別子から16ビットのハッシュアルゴリズム識別子のリストが含まれています。ハッシュアルゴリズム識別子の間にパディングはありません。"
    },
    {
      "indent": 0,
      "text": "5. Selecting the Public Key Algorithm",
      "section_title": true,
      "ja": "5.公開鍵アルゴリズムを選択します"
    },
    {
      "indent": 3,
      "text": "This specification does not provide a way for the peers to indicate the public/private key pair types they have. This raises the question of how the responder selects a public/private key pair type that the initiator supports. This information can be found by several methods.",
      "ja": "この仕様は、ピアは、彼らが持っている公開鍵/秘密鍵のペアの種類を示すための方法を提供していません。これは、応答は、イニシエータがサポートしている公開鍵/秘密鍵のペアの種類を選択する方法の問題を提起します。この情報は、いくつかの方法により求めることができます。"
    },
    {
      "indent": 3,
      "text": "One method to signal the key the initiator wants the responder to use is to indicate that in the IDr (Identification - Responder) payload of the IKE_AUTH request sent by the initiator. In this case, the initiator indicates that it wants the responder to use a particular public/private key pair by sending an IDr payload that indicates that information. In this case, the responder has different identities configured, with each of those identities associated to a public/ private key or key type.",
      "ja": "イニシエータによって送信されたIKE_AUTH要求のペイロード - イニシエータは、応答者が使用したいキーを通知するための一つの方法は、IDR（レスポンダ識別）にそれを示すことです。この場合、イニシエータは、それがその情報を示しIDRペイロードを送信することにより、特定の公開鍵/秘密鍵のペアを使用するようにレスポンダを望んでいることを示しています。この場合、レスポンダは異なるアイデンティティは、公開/秘密鍵または鍵のタイプに関連したアイデンティティの各々に、構成しています。"
    },
    {
      "indent": 3,
      "text": "Another method to ascertain the key the initiator wants the responder to use is through a Certificate Request payload sent by the initiator. For example, the initiator could indicate in the",
      "ja": "イニシエータはレスポンダが使用したいキーを確認する別の方法は、イニシエータによって送信された証明書要求ペイロードを介して行われます。例えば、イニシエータはで示している可能性があり"
    },
    {
      "indent": 3,
      "text": "Certificate Request payload that it trusts a certificate authority certificate signed by an ECDSA key. This indication implies that the initiator can process ECDSA signatures, which means that the responder can safely use ECDSA keys when authenticating.",
      "ja": "それはECDSAキーによって署名された認証局の証明書を信頼する証明書要求ペイロード。この指示は、イニシエータは、認証時応答者が安全にECDSAキーを使用することができることを意味し、ECDSA署名を処理することができることを意味します。"
    },
    {
      "indent": 3,
      "text": "A third method is for the responder to check the key type used by the initiator and use the same key type that the initiator used. This method does not work if the initiator is using shared secret or Extensible Authentication Protocol (EAP) authentication (i.e., is not using public keys). If the initiator is using public key authentication, this method is the best way for the responder to ascertain the type of key the initiator supports.",
      "ja": "レスポンダがイニシエータによって使用されるキーの種類を確認し、開始剤が使用されるのと同じキータイプを使用するための第3の方法です。イニシエータは、共有秘密または拡張認証プロトコル（EAP）認証（即ち、公開鍵を使用していない）を使用している場合、このメソッドは機能しません。イニシエータは、公開鍵認証を使用している場合は、この方法は、レスポンダがイニシエータがサポートしているキーの種類を確認するための最良の方法です。"
    },
    {
      "indent": 3,
      "text": "If the initiator uses a public key type that the responder does not support, the responder replies with a Notify message with error type AUTHENTICATION_FAILED. If the initiator has multiple different keys, it may try a different key (and perhaps a different key type) until it finds a key that the other end accepts. The initiator can also use the Certificate Request payload sent by the responder to help decide which public key should be tried. In normal cases, when the initiator has multiple public keys, out-of-band configuration is used to select a public key for each connection.",
      "ja": "イニシエータがレスポンダがサポートされていないことを公開鍵のタイプを使用している場合、レスポンダはエラータイプAU​​THENTICATION_FAILEDと通知メッセージで応答します。イニシエータは、複数の異なるキーを有している場合は、もう一方の端が受け入れる鍵が見つかるまで、異なる鍵（おそらく異なるキータイプ）を試みることができます。イニシエータは、公開鍵が試されるべき決定に役立つ応答者によって送られた証明書要求ペイロードを使用することができます。イニシエータは、複数の公開鍵を有する場合、通常の場合には、アウトオブバンド構成は、各接続のための公開鍵を選択するために使用されます。"
    },
    {
      "indent": 0,
      "text": "6. Security Considerations",
      "section_title": true,
      "ja": "6.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "Tables 2 and 3 of the \"Recommendations for Key Management\" [NIST800-57] give recommendations for how to select suitable hash functions for the signature.",
      "ja": "「キー管理のための推奨事項」[NIST800-57]署名のために、適切なハッシュ関数を選択する方法のための勧告を与えるの表2、表3。"
    },
    {
      "indent": 3,
      "text": "This new digital signature method does not tie the Elliptic Curve to a specific hash function, which was done in the old IKEv2 ECDSA methods. This means it is possible to mix different security levels. For example, it is possible to use a 512-bit Elliptic Curve with SHA1. This means that the security of the authentication method is the security of the weakest component (signature algorithm, hash algorithm, or curve). This complicates the security analysis of the system.",
      "ja": "この新しいデジタル署名方式は、古いのIKEv2 ECDSAの方法で行われた特定のハッシュ関数に楕円曲線を結ぶものではありません。異なるセキュリティレベルを混在させることも可能であることを意味します。例えば、SHA1と512ビットの楕円曲線を使用することが可能です。これは、認証方式のセキュリティが最も弱い成分（署名アルゴリズム、ハッシュアルゴリズム、または曲線）のセキュリティであることを意味します。これは、システムのセキュリティ分析を複雑にします。"
    },
    {
      "indent": 3,
      "text": "IKEv2 peers have a series of policy databases (see Section 4.4 of [RFC4301]) that define which security algorithms and methods should be used during establishment of security associations. To help end users select the desired security levels for communications protected by IPsec, implementers may wish to provide a mechanism in the IKE policy databases to limit the mixing of security levels or to restrict combinations of protocols.",
      "ja": "IKEv2ピアは、セキュリティアソシエーションの確立の間に使用されるべきセキュリティアルゴリズムおよび方法を定義するポリシー・データベースの一連の（[RFC4301]のセクション4.4を参照）を有します。エンドユーザがIPSecで保護された通信のために必要なセキュリティレベルを選択するのに役立つために、実装は、セキュリティレベルの混合を制限するために、またはプロトコルの組み合わせを制限するためにIKEポリシーデータベースのメカニズムを提供することを望むかもしれません。"
    },
    {
      "indent": 3,
      "text": "Security downgrade attacks, where more secure methods are deleted or modified from a payload by a man-in-the-middle to force lower levels of security, are not a significant concern in IKEv2 Authentication payloads, as discussed in this RFC. This is because a modified AUTH payload will be detected when the peer computes a signature over the IKE messages.",
      "ja": "このRFCで説明したように、より安全な方法は、セキュリティの低いレベルを強制するのman-in-the-middleによりペイロードから削除または変更されたセキュリティダウングレード攻撃は、IKEv2の認証ペイロードに重要な関心事ではありません。ピアがIKEメッセージ上の署名を計算するときに変更AUTHペイロードが検出されるからです。"
    },
    {
      "indent": 3,
      "text": "One specific class of downgrade attacks requires selection of catastrophically weak ciphers. In this type of attack, the man-in-the-middle attacker is able to \"break\" the cryptography in real time. This type of downgrade attack should be blocked by policy regarding cipher algorithm selection, as discussed above.",
      "ja": "ダウングレード攻撃の一つの特定のクラスは壊滅的に弱い暗号の選択が必要です。この種の攻撃では、のman-in-the-middle攻撃者がリアルタイムに暗号を \"壊す\" することができます。上述したようにダウングレードこのタイプの攻撃は、暗号アルゴリズムの選択に関するポリシーによってブロックされなければなりません。"
    },
    {
      "indent": 3,
      "text": "The hash algorithm registry does not include MD5 as a supported hash algorithm, as it is not considered safe enough for signature use [WY05].",
      "ja": "それは署名の使用[WY05]のために十分に安全と見なされていないとして、ハッシュアルゴリズムレジストリは、サポートされるハッシュアルゴリズムとしてMD5が含まれていません。"
    },
    {
      "indent": 3,
      "text": "The current IKEv2 protocol uses RSASSA-PKCS1-v1_5, which has known security vulnerabilities [KA08] [ME01] and does not allow using newer padding methods such as RSASSA-PSS. The new method described in this RFC allows the use of other padding methods.",
      "ja": "現在のIKEv2プロトコルは、セキュリティの脆弱性[KA08] [ME01]知っていると、このようなRSASSA-PSSなどの新しいパディング方法を使用して許可しないRSASSA-PKCS1-v1_5のを、使用します。このRFCで説明する新しい方法は、他のパディング方法の使用を可能にします。"
    },
    {
      "indent": 3,
      "text": "The current IKEv2 protocol only allows use of normal DSA with SHA-1, which means the security of the authentication is limited to the security of SHA-1. This new method allows using longer keys and longer hashes with DSA.",
      "ja": "現在のIKEv2プロトコルは、SHA-1、認証のセキュリティは、SHA-1のセキュリティに限定される意味で、通常のDSAの使用を可能にします。この新しい方法は、長いキーとDSAと長いハッシュを使用できます。"
    },
    {
      "indent": 0,
      "text": "7. IANA Considerations",
      "section_title": true,
      "ja": "7. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "This document creates a new IANA registry for IKEv2 Hash Algorithms. Changes and additions to this registry are by Expert Review [RFC5226].",
      "ja": "この文書では、IKEv2のハッシュアルゴリズムのための新しいIANA登録を作成します。このレジストリの変更や追加は、専門家レビュー[RFC5226]です。"
    },
    {
      "indent": 3,
      "text": "The initial values of this registry are:",
      "ja": "このレジストリの初期値は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "Hash Algorithm                       Value\n--------------                       -----\nRESERVED                             0\nSHA1                                 1\nSHA2-256                             2\nSHA2-384                             3\nSHA2-512                             4",
      "raw": true
    },
    {
      "indent": 3,
      "text": "MD5 is not included in the hash algorithm list, as it is not considered safe enough for signature hash uses.",
      "ja": "それは、署名のハッシュの用途のために十分に安全と見なされていないとしてMD5は、ハッシュアルゴリズムリストに含まれていません。"
    },
    {
      "indent": 3,
      "text": "Values 5-1023 are Unassigned. Values 1024-65535 are reserved for Private Use among mutually consenting parties.",
      "ja": "値は5から1023が割り当てられていません。値は1024〜65535は、互いに同意当事者間の私的使用のために予約されています。"
    },
    {
      "indent": 3,
      "text": "This specification also adds a new value for SIGNATURE_HASH_ALGORITHMS (16431) to the \"IKEv2 Notify Message Types - Status Types\" registry and adds a new value for Digital Signature (14) to the \"IKEv2 Authentication Method\" registry.",
      "ja": "また、この仕様は、「IKEv2のメッセージタイプを通知 - ステータスタイプ」にSIGNATURE_HASH_ALGORITHMS（16431）の新しい値を追加し、レジストリと「IKEv2の認証方法」レジストリにデジタル署名（14）の新しい値を追加します。"
    },
    {
      "indent": 0,
      "text": "8. References",
      "section_title": true,
      "ja": "8.参照文献"
    },
    {
      "indent": 0,
      "text": "8.1. Normative References",
      "section_title": true,
      "ja": "8.1. 引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997, <http://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月、<http://www.rfc-editor.org/info/rfc2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC5280] Cooper, D., Santesson, S., Farrell, S., Boeyen, S., Housley, R., and W. Polk, \"Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile\", RFC 5280, May 2008, <http://www.rfc-editor.org/info/rfc5280>.",
      "ja": "[RFC5280]クーパー、D.、Santesson、S.、ファレル、S.、Boeyen、S.、Housley氏、R.、およびW.ポーク、「インターネットX.509公開鍵暗号基盤証明書と証明書失効リスト（CRL）のプロフィール」、RFC 5280、2008年5月、<http://www.rfc-editor.org/info/rfc5280>。"
    },
    {
      "indent": 3,
      "text": "[RFC7296] Kaufman, C., Hoffman, P., Nir, Y., Eronen, P., and T. Kivinen, \"Internet Key Exchange Protocol Version 2 (IKEv2)\", RFC 7296, October 2014, <http://www.rfc-editor.org/info/rfc7296>.",
      "ja": "[RFC7296]カウフマン、C.、ホフマン、P.、ニール、Y.、Eronen、P.、およびT. Kivinen、 \"インターネット鍵交換プロトコルバージョン2（IKEv2の）\"、RFC 7296、2014年10月、<のhttp：/ /www.rfc-editor.org/info/rfc7296>。"
    },
    {
      "indent": 0,
      "text": "8.2. Informative References",
      "section_title": true,
      "ja": "8.2. 参考文献"
    },
    {
      "indent": 3,
      "text": "[CCITT.X690.2002] International Telephone and Telegraph Consultative Committee, \"ASN.1 encoding rules: Specification of basic encoding Rules (BER), Canonical encoding rules (CER) and Distinguished encoding rules (DER)\", CCITT Recommendation X.690, July 2002.",
      "ja": "[CCITT.X690.2002]国際電信電話諮問委員会、「ASN.1エンコーディング規則：基本的な符号化規則（BER）、Canonicalの符号化規則（CER）との識別符号化規則（DER）の仕様」、CCITT勧告X.690 、2002年7月。"
    },
    {
      "indent": 3,
      "text": "[KA08] Kuehn, U., Pyshkin, A., Tews, E., and R. Weinmann, \"Variants of Bleichenbacher's Low-Exponent Attack on PKCS#1 RSA Signatures\", Proceedings of Sicherheit 2008, pp.97-109, 2008.",
      "ja": "[KA08]キューン、U.、Pyshkin、A.、TEWS、E.、およびR. Weinmann、Sicherheit 2008、pp.97-109の議事録 \"PKCS＃1 RSA署名にBleichenbacherのの低指数攻撃の変異体\"、 2008。"
    },
    {
      "indent": 3,
      "text": "[ME01] Menezes, A., \"Evaluation of Security Level of Cryptography: RSA-OAEP, RSA-PSS, RSA Signature\", December 2001.",
      "ja": "[ME01]メネゼス、A.、 \"暗号化のセキュリティレベルの評価：RSA-OAEP、RSA-PSS、RSA署名\"、2001年12月。"
    },
    {
      "indent": 3,
      "text": "[NIST800-57] Barker, E., Barker, W., Burr, W., Polk, W., and M. Smid, \"Recommendation for Key Management - Part 1: General (Revised)\", NIST Special Publication 800-57, March 2007.",
      "ja": "[NIST 800-57]バーカー、E.、バーカー、W.、バリ、W.、ポーク、W.、およびM. SMID、 \"キー管理のための提言 - パート1：一般（改訂）\"、は、NIST Special Publication 800 -57、2007年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC3279] Bassham, L., Polk, W., and R. Housley, \"Algorithms and Identifiers for the Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile\", RFC 3279, April 2002, <http://www.rfc-editor.org/info/rfc3279>.",
      "ja": "[RFC3279] Bassham、L.、ポーク、W.、およびR. Housley氏、RFC 3279、2002年4月、<HTTP \"インターネットX.509公開鍵暗号基盤証明書と証明書失効リスト（CRL）プロフィールのためのアルゴリズムと識別子\" ：//www.rfc-editor.org/info/rfc3279>。"
    },
    {
      "indent": 3,
      "text": "[RFC3447] Jonsson, J. and B. Kaliski, \"Public-Key Cryptography Standards (PKCS) #1: RSA Cryptography Specifications Version 2.1\", RFC 3447, February 2003, <http://www.rfc-editor.org/info/rfc3447>.",
      "ja": "[RFC3447]ジョンソン、J.とB. Kaliski、 \"公開鍵暗号規格（PKCS）＃1：RSA暗号仕様バージョン2.1\"、RFC 3447、2003年2月、<http://www.rfc-editor.org/情報/ RFC3447>。"
    },
    {
      "indent": 3,
      "text": "[RFC4055] Schaad, J., Kaliski, B., and R. Housley, \"Additional Algorithms and Identifiers for RSA Cryptography for use in the Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile\", RFC 4055, June 2005, <http://www.rfc-editor.org/info/rfc4055>.",
      "ja": "[RFC4055] Schaad、J.、Kaliski、B.、およびR. Housley氏、 \"インターネットX.509公開鍵暗号基盤証明書と証明書失効リスト（CRL）プロフィールで使用するRSA暗号のための追加のアルゴリズムと識別子\"、RFC 4055 、2005年6月、<http://www.rfc-editor.org/info/rfc4055>。"
    },
    {
      "indent": 3,
      "text": "[RFC4301] Kent, S. and K. Seo, \"Security Architecture for the Internet Protocol\", RFC 4301, December 2005, <http://www.rfc-editor.org/info/rfc4301>.",
      "ja": "[RFC4301]ケント、S.とK. Seo、 \"インターネットプロトコルのためのセキュリティアーキテクチャ\"、RFC 4301、2005年12月、<http://www.rfc-editor.org/info/rfc4301>。"
    },
    {
      "indent": 3,
      "text": "[RFC5226] Narten, T. and H. Alvestrand, \"Guidelines for Writing an IANA Considerations Section in RFCs)\", BCP 26, RFC 5226, May 2008, <http://www.rfc-editor.org/info/rfc5226>.",
      "ja": "[RFC5226] Narten氏、T.とH. Alvestrand、 \"RFCsにIANA問題部に書くためのガイドライン）\"、BCP 26、RFC 5226、2008年5月、<http://www.rfc-editor.org/info/rfc5226 >。"
    },
    {
      "indent": 3,
      "text": "[RFC5480] Turner, S., Brown, D., Yiu, K., Housley, R., and T. Polk, \"Elliptic Curve Cryptography Subject Public Key Information\", RFC 5480, March 2009, <http://www.rfc-editor.org/info/rfc5480>.",
      "ja": "[RFC5480]ターナー、S.、ブラ​​ウン、D.、耀輝、K.、Housley氏、R.、およびT.ポーク、 \"楕円曲線暗号件名公開鍵情報\"、RFC 5480、2009年3月、<のhttp：// WWW .rfc-editor.org /情報/ rfc5480>。"
    },
    {
      "indent": 3,
      "text": "[RFC5758] Dang, Q., Santesson, S., Moriarty, K., Brown, D., and T. Polk, \"Internet X.509 Public Key Infrastructure: Additional Algorithms and Identifiers for DSA and ECDSA\", RFC 5758, January 2010, <http://www.rfc-editor.org/info/rfc5758>.",
      "ja": "[RFC5758]ダン、Q.、Santesson、S.、モリアーティ、K.、ブラウン、D.、およびT.ポーク、 \"インターネットX.509公開鍵インフラストラクチャ：DSAとECDSAのための追加のアルゴリズムと識別子\"、RFC 5758、 2010年1月、<http://www.rfc-editor.org/info/rfc5758>。"
    },
    {
      "indent": 3,
      "text": "[RFC5912] Hoffman, P. and J. Schaad, \"New ASN.1 Modules for the Public Key Infrastructure Using X.509 (PKIX)\", RFC 5912, June 2010, <http://www.rfc-editor.org/info/rfc5912>.",
      "ja": "[RFC5912]ホフマン、P.およびJ. Schaad、RFC 5912、2010年6月、< \"公開鍵インフラストラクチャの使用X.509（PKIX）のための新しいASN.1モジュール\" http://www.rfc-editor.org /情報/ rfc5912>。"
    },
    {
      "indent": 3,
      "text": "[WY05] Wang, X. and H. Yu, \"How to break MD5 and other hash functions\", Proceedings of EuroCrypt 2005, Lecture Notes in Computer Science Vol. 3494, 2005.",
      "ja": "[WY05]王、X.およびH.ユーは、EUROCRYPT 2005の議事録、コンピュータサイエンス巻で講義ノート「はどのようMD5および他のハッシュ関数を破ります」。 3494、2005。"
    },
    {
      "indent": 3,
      "text": "[X9.62] American National Standards Institute, \"Public Key Cryptography for the Financial Services Industry: The Elliptic Curve Digital Signature Algorithm (ECDSA)\", ANSI X9.62, November 2005.",
      "ja": "[X9.62]米国規格協会、「金融サービス業界向け公開鍵暗号：楕円曲線デジタル署名アルゴリズム（ECDSA）」、ANSI X9.62、2005年11月。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Commonly Used ASN.1 Objects",
      "ja": "付録A.一般的に使用されるASN.1オブジェクト"
    },
    {
      "indent": 3,
      "text": "This section lists commonly used ASN.1 objects in binary form. This section is not normative, and these values should only be used as examples. If the ASN.1 object listed in Appendix A and the ASN.1 object specified by the algorithm differ, then the algorithm specification must be used. These values are taken from \"New ASN.1 Modules for the Public Key Infrastructure Using X.509 (PKIX)\" [RFC5912].",
      "ja": "このセクションでは、一般的にバイナリ形式でASN.1オブジェクトを使用していました。このセクションでは、規範的ではなく、これらの値は例としてのみ使用されるべきです。付録Aに記載されているASN.1オブジェクトとアルゴリズムで指定されたASN.1オブジェクトが異なる場合、アルゴリズムの仕様が使用されなければなりません。これらの値は、[RFC5912]「X.509（PKIX）を使用して、公開鍵インフラストラクチャのための新しいASN.1モジュール」から取られています。"
    },
    {
      "indent": 0,
      "text": "A.1. PKCS#1 1.5 RSA Encryption",
      "ja": "A.1。 PKCS＃1 1.5 RSA暗号化"
    },
    {
      "indent": 3,
      "text": "The algorithm identifiers here include several different ASN.1 objects with different hash algorithms. This document only includes the commonly used ones, i.e., the ones using SHA-1 or SHA-2 as the hash function. Some other algorithms (such as MD2 and MD5) are not safe enough to be used as signature hash algorithms and are omitted. The IANA registry does not have code points for these other algorithms with RSA Encryption. Note that there are no optional parameters in any of these algorithm identifiers, but all included here need NULL optional parameters present in the ASN.1.",
      "ja": "ここでのアルゴリズム識別子は、異なるハッシュアルゴリズムと、いくつかの異なったASN.1オブジェクトが含まれます。この文書は、一般的に使用されるもの、すなわち、ハッシュ関数としてSHA-1やSHA-2を使用するものを含みます。 （例えばMD2とMD5のような）いくつかの他のアルゴリズムは、署名ハッシュアルゴリズムとして使用するのに十分に安全ではなく、省略されています。 IANAレジストリは、RSA暗号化とこれらの他のアルゴリズムのためのコードポイントを持っていません。これらのアルゴリズム識別子のいずれにもオプションのパラメータが存在しないことに注意してください、すべてがここに含まASN.1に存在NULLオプションのパラメータを必要としています。"
    },
    {
      "indent": 3,
      "text": "See \"Algorithms and Identifiers for PKIX Profile\" [RFC3279] and \"Additional Algorithms and Identifiers for RSA Cryptography for use in the Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile\" [RFC4055] for more information.",
      "ja": "詳細については、「インターネットX.509公開鍵暗号基盤証明書と証明書失効リスト（CRL）プロフィールで使用するRSA暗号のための追加のアルゴリズムと識別子」「アルゴリズムと識別子PKIXプロフィール」[RFC3279]と[RFC4055]を参照してください。"
    },
    {
      "indent": 0,
      "text": "A.1.1. sha1WithRSAEncryption",
      "ja": "A.1.1。 sha1WithRSAEncryption"
    },
    {
      "indent": 3,
      "text": "sha1WithRSAEncryption OBJECT IDENTIFIER ::= { iso(1) member-body(2)\nus(840) rsadsi(113549) pkcs(1) pkcs-1(1) 5 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Parameters are required, and they must be NULL.",
      "ja": "パラメータが要求されている、と彼らはNULLでなければなりません。"
    },
    {
      "indent": 3,
      "text": "Name = sha1WithRSAEncryption, oid = 1.2.840.113549.1.1.5 Length = 15 0000: 300d 0609 2a86 4886 f70d 0101 0505 00",
      "ja": "NAME = sha1WithRSAEncryption、OID = 1.2.840.113549.1.1.5長さ= 15 0000：300D 0609 2a86 4886 F70D 0101 0505 00"
    },
    {
      "indent": 0,
      "text": "A.1.2. sha256WithRSAEncryption",
      "ja": "A.1.2。 sha256WithRSAEncryption"
    },
    {
      "indent": 3,
      "text": "sha256WithRSAEncryption OBJECT IDENTIFIER ::= { pkcs-1 11 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Parameters are required, and they must be NULL.",
      "ja": "パラメータが要求されている、と彼らはNULLでなければなりません。"
    },
    {
      "indent": 3,
      "text": "Name = sha256WithRSAEncryption, oid = 1.2.840.113549.1.1.11 Length = 15 0000: 300d 0609 2a86 4886 f70d 0101 0b05 00",
      "ja": "NAME = sha256WithRSAEncryption、OID = 1.2.840.113549.1.1.11長さ= 15 0000：300D 0609 2a86 4886 F70D 0101 0b05 00"
    },
    {
      "indent": 0,
      "text": "A.1.3. sha384WithRSAEncryption",
      "ja": "A.1.3。 sha384WithRSAEncryption"
    },
    {
      "indent": 3,
      "text": "sha384WithRSAEncryption OBJECT IDENTIFIER ::= { pkcs-1 12 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Parameters are required, and they must be NULL.",
      "ja": "パラメータが要求されている、と彼らはNULLでなければなりません。"
    },
    {
      "indent": 3,
      "text": "Name = sha384WithRSAEncryption, oid = 1.2.840.113549.1.1.12 Length = 15 0000: 300d 0609 2a86 4886 f70d 0101 0c05 00",
      "ja": "NAME = sha384WithRSAEncryption、OID = 1.2.840.113549.1.1.12長さ= 15 0000：300D 0609 2a86 4886 F70D 0101 0c05 00"
    },
    {
      "indent": 0,
      "text": "A.1.4. sha512WithRSAEncryption",
      "ja": "A.1.4。 sha512WithRSAEncryption"
    },
    {
      "indent": 3,
      "text": "sha512WithRSAEncryption OBJECT IDENTIFIER ::= { pkcs-1 13 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Parameters are required, and they must be NULL.",
      "ja": "パラメータが要求されている、と彼らはNULLでなければなりません。"
    },
    {
      "indent": 3,
      "text": "Name = sha512WithRSAEncryption, oid = 1.2.840.113549.1.1.13 Length = 15 0000: 300d 0609 2a86 4886 f70d 0101 0d05 00",
      "ja": "NAME = sha512WithRSAEncryption、OID = 1.2.840.113549.1.1.13長さ= 15 0000：300D 0609 2a86 4886 F70D 0101 0d05 00"
    },
    {
      "indent": 0,
      "text": "A.2. DSA",
      "ja": "A.2。 DSA"
    },
    {
      "indent": 3,
      "text": "With DSA algorithms, optional parameters are always omitted. Only algorithm combinations for DSA that are listed in the IANA registry are included.",
      "ja": "DSAアルゴリズムでは、オプションのパラメータは常に省略されています。 IANAレジストリに記載されていますDSAのための唯一のアルゴリズムの組み合わせが含まれています。"
    },
    {
      "indent": 3,
      "text": "See \"Algorithms and Identifiers for PKIX Profile\" [RFC3279] and \"PKIX Additional Algorithms and Identifiers for DSA and ECDSA\" [RFC5758] for more information.",
      "ja": "詳細については、[RFC5758]「アルゴリズムと識別子PKIXプロフィール」[RFC3279]と「DSAとECDSAのためのPKIX追加のアルゴリズムと識別子」を参照してください。"
    },
    {
      "indent": 0,
      "text": "A.2.1. dsa-with-sha1",
      "ja": "A.2.1。 DSA-と-SHA1"
    },
    {
      "indent": 3,
      "text": "dsa-with-sha1 OBJECT IDENTIFIER ::= { iso(1) member-body(2) us(840)\nx9-57(10040) x9algorithm(4) 3 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Parameters are absent.",
      "ja": "パラメータが存在しません。"
    },
    {
      "indent": 3,
      "text": "Name = dsa-with-sha1, oid = 1.2.840.10040.4.3 Length = 11 0000: 3009 0607 2a86 48ce 3804 03",
      "ja": "名前= DSA-と-SHA1、OID = 1.2.840.10040.4.3長さ= 11 0000：3009 0607 2a86 48ce 3804 03"
    },
    {
      "indent": 0,
      "text": "A.2.2. dsa-with-sha256",
      "ja": "A.2.2。 DSA-と-SHA256"
    },
    {
      "indent": 3,
      "text": "dsa-with-sha256 OBJECT IDENTIFIER ::= { joint-iso-ccitt(2)\ncountry(16) us(840) organization(1) gov(101) csor(3) algorithms(4)\nid-dsa-with-sha2(3) 2 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Parameters are absent.",
      "ja": "パラメータが存在しません。"
    },
    {
      "indent": 3,
      "text": "Name = dsa-with-sha256, oid = 2.16.840.1.101.3.4.3.2 Length = 13 0000: 300b 0609 6086 4801 6503 0403 02",
      "ja": "名前= DSA-WITH-SHA256、OID = 2.16.840.1.101.3.4.3.2長さ= 13 0000：300B 0609 6086 4801 6503 0403 02"
    },
    {
      "indent": 0,
      "text": "A.3. ECDSA",
      "ja": "A.3。 ECDSA"
    },
    {
      "indent": 3,
      "text": "With ECDSA algorithms, the optional parameters are always omitted. Only algorithm combinations for the ECDSA listed in the IANA registry are included.",
      "ja": "ECDSAアルゴリズムでは、オプションのパラメータは常に省略されています。 IANAレジストリに記載されているECDSAのための唯一のアルゴリズムの組み合わせが含まれています。"
    },
    {
      "indent": 3,
      "text": "See \"Elliptic Curve Cryptography Subject Public Key Information\" [RFC5480], \"Algorithms and Identifiers for PKIX Profile\" [RFC3279], and \"PKIX Additional Algorithms and Identifiers for DSA and ECDSA\" [RFC5758] for more information.",
      "ja": "詳細については、[RFC5758]、「PKIXプロファイルのためのアルゴリズムと識別子」を[RFC5480]「サブジェクト公開鍵情報に楕円曲線暗号」を参照してください[RFC3279]、および「DSAとECDSAのためのPKIX追加のアルゴリズムと識別子」。"
    },
    {
      "indent": 0,
      "text": "A.3.1. ecdsa-with-sha1",
      "ja": "A.3.1。 ECDSA-と-SHA1"
    },
    {
      "indent": 3,
      "text": "ecdsa-with-SHA1 OBJECT IDENTIFIER ::= { iso(1) member-body(2) us(840)\nansi-X9-62(10045) signatures(4) 1 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Parameters are absent.",
      "ja": "パラメータが存在しません。"
    },
    {
      "indent": 3,
      "text": "Name = ecdsa-with-sha1, oid = 1.2.840.10045.4.1 Length = 11 0000: 3009 0607 2a86 48ce 3d04 01",
      "ja": "名前= ECDSA-WITH-SHA1、OID = 1.2.840.10045.4.1長さ= 11 0000：3009 0607 2a86 48ce 3d04 01"
    },
    {
      "indent": 0,
      "text": "A.3.2. ecdsa-with-sha256",
      "ja": "A.3.2。 ECDSA-と-SHA256"
    },
    {
      "indent": 3,
      "text": "ecdsa-with-SHA256 OBJECT IDENTIFIER ::= { iso(1) member-body(2)\nus(840) ansi-X9-62(10045) signatures(4) ecdsa-with-SHA2(3) 2 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Parameters are absent.",
      "ja": "パラメータが存在しません。"
    },
    {
      "indent": 3,
      "text": "Name = ecdsa-with-sha256, oid = 1.2.840.10045.4.3.2 Length = 12 0000: 300a 0608 2a86 48ce 3d04 0302",
      "ja": "名前は= ECDSA-WITH-SHA256、OID = 1.2.840.10045.4.3.2長さ= 12 0000：300A 0608 2a86 48ce 3d04 0302"
    },
    {
      "indent": 0,
      "text": "A.3.3. ecdsa-with-sha384",
      "ja": "A.3.3。 ECDSA-と-SHA384"
    },
    {
      "indent": 3,
      "text": "ecdsa-with-SHA384 OBJECT IDENTIFIER ::= { iso(1) member-body(2)\nus(840) ansi-X9-62(10045) signatures(4) ecdsa-with-SHA2(3) 3 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Parameters are absent.",
      "ja": "パラメータが存在しません。"
    },
    {
      "indent": 3,
      "text": "Name = ecdsa-with-sha384, oid = 1.2.840.10045.4.3.3 Length = 12 0000: 300a 0608 2a86 48ce 3d04 0303",
      "ja": "名前は= ECDSA-WITH-SHA384、OID = 1.2.840.10045.4.3.3長さ= 12 0000：300A 0608 2a86 48ce 3d04 0303"
    },
    {
      "indent": 0,
      "text": "A.3.4. ecdsa-with-sha512",
      "ja": "A.3.4。 ECDSA-と-SHA512"
    },
    {
      "indent": 3,
      "text": "ecdsa-with-SHA512 OBJECT IDENTIFIER ::= { iso(1) member-body(2)\nus(840) ansi-X9-62(10045) signatures(4) ecdsa-with-SHA2(3) 4 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Parameters are absent.",
      "ja": "パラメータが存在しません。"
    },
    {
      "indent": 3,
      "text": "Name = ecdsa-with-sha512, oid = 1.2.840.10045.4.3.4 Length = 12 0000: 300a 0608 2a86 48ce 3d04 0304",
      "ja": "名前は= ECDSA-WITH-SHA512、OID = 1.2.840.10045.4.3.4長さ= 12 0000：300A 0608 2a86 48ce 3d04 0304"
    },
    {
      "indent": 0,
      "text": "A.4. RSASSA-PSS",
      "ja": "A.4。 RSASSA-PSS"
    },
    {
      "indent": 3,
      "text": "With RSASSA-PSS, the algorithm object identifier must always be id-RSASSA-PSS, and the hash function and padding parameters are conveyed in the parameters (which are not optional in this case). See Additional RSA Algorithms and Identifiers [RFC4055] for more information.",
      "ja": "RSASSA-PSSと、アルゴリズムのオブジェクト識別子は常にID-RSASSA-PSSでなければならず、ハッシュ関数とパディングパラメータ（この場合はオプションではない）のパラメータに搬送されます。詳細については、追加RSAアルゴリズムと識別子[RFC4055]を参照してください。"
    },
    {
      "indent": 0,
      "text": "A.4.1. RSASSA-PSS with Empty Parameters",
      "ja": "A.4.1。空のパラメータを指定したRSASSA-PSS"
    },
    {
      "indent": 3,
      "text": "id-RSASSA-PSS OBJECT IDENTIFIER ::= { pkcs-1 10 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Parameters are empty, but the ASN.1 part of the sequence must be present. This means default parameters are used.",
      "ja": "パラメータは空ですが、シーケンスのASN.1部分が存在しなければなりません。これは、デフォルトのパラメータが使用されることを意味します。"
    },
    {
      "indent": 3,
      "text": "0000 : SEQUENCE 0002 : OBJECT IDENTIFIER RSASSA-PSS (1.2.840.113549.1.1.10) 000d : SEQUENCE",
      "ja": "0000：SEQUENCE 0002：OBJECT IDENTIFIER RSASSA-PSS（1.2.840.113549.1.1.10）000D：SEQUENCE"
    },
    {
      "indent": 3,
      "text": "Length = 15 0000: 300d 0609 2a86 4886 f70d 0101 0a30 00",
      "ja": "長さ= 15 0000：300D 0609 2a86 4886 F70D 0101 0a30 00"
    },
    {
      "indent": 0,
      "text": "A.4.2. RSASSA-PSS with Default Parameters",
      "ja": "A.4.2。デフォルトパラメータとRSASSA-PSS"
    },
    {
      "indent": 3,
      "text": "id-RSASSA-PSS OBJECT IDENTIFIER ::= { pkcs-1 10 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Here the parameters are present and contain the default parameters, i.e., hashAlgorithm of SHA-1, maskGenAlgorithm of mgf1SHA1, saltLength of 20, and trailerField of 1.",
      "ja": "ここでパラメータが存在し、デフォルトのパラメータ、すなわち、SHA-1のhashAlgorithm、mgf1SHA1のmaskGenAlgorithm、20のsaltLength、及び1のtrailerFieldを含みます。"
    },
    {
      "indent": 3,
      "text": "0000 : SEQUENCE 0002 : OBJECT IDENTIFIER RSASSA-PSS (1.2.840.113549.1.1.10) 000d : SEQUENCE 000f : CONTEXT 0 0011 : SEQUENCE 0013 : OBJECT IDENTIFIER id-sha1 (1.3.14.3.2.26) 001a : NULL 001c : CONTEXT 1 001e : SEQUENCE 0020 : OBJECT IDENTIFIER 1.2.840.113549.1.1.8 002b : SEQUENCE 002d : OBJECT IDENTIFIER id-sha1 (1.3.14.3.2.26) 0034 : NULL 0036 : CONTEXT 2 0038 : INTEGER 0x14 (5 bits) 003b : CONTEXT 3 003d : INTEGER 0x1 (1 bits)",
      "ja": "0000：SEQUENCE 0002：オブジェクト識別子RSASSA-PSS（1.2.840.113549.1.1.10）000D：SEQUENCE 000F：CONTEXT 0 0011：SEQUENCE 0013：オブジェクト識別子ID-SHA1（1.3.14.3.2.26）001A：NULL 001C：CONTEXT 1 001E：SEQUENCE 0020：オブジェクト識別子1.2.840.113549.1.1.8 002B：SEQUENCE 002D：オブジェクト識別子ID-SHA1（1.3.14.3.2.26）0034：NULL 0036：CONTEXT 2 0038：INTEGER 0x14の（5ビット）003B：CONTEXT 3 003D：INTEGERの0x1の（1ビット）"
    },
    {
      "indent": 3,
      "text": "Name = RSASSA-PSS with default parameters, oid = 1.2.840.113549.1.1.10 Length = 64 0000: 303e 0609 2a86 4886 f70d 0101 0a30 31a0 0010: 0b30 0906 052b 0e03 021a 0500 a118 3016 0020: 0609 2a86 4886 f70d 0101 0830 0906 052b 0030: 0e03 021a 0500 a203 0201 14a3 0302 0101",
      "ja": "名前= RSASSA-PSSデフォルトパラメータ、OID = 1.2.840.113549.1.1.10長さ= 64 0000を持つ：303E 0609 2a86 4886 F70D 0101 0a30 31a0 0010：0b30 0906 052b 0e03 021a 0500 A118 3016 0020：0609 2a86 4886 F70D 0101 0830 0906 052b 0030：0e03 021a 0500 A203 0201 14A3 0302 0101"
    },
    {
      "indent": 0,
      "text": "A.4.3. RSASSA-PSS with SHA-256",
      "ja": "A.4.3。 SHA-256とRSASSA-PSS"
    },
    {
      "indent": 3,
      "text": "id-RSASSA-PSS OBJECT IDENTIFIER ::= { pkcs-1 10 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Here the parameters are present and contain hashAlgorithm of SHA-256, maskGenAlgorithm of SHA-256, saltLength of 32, and trailerField of 1.",
      "ja": "ここでパラメータが存在し、SHA-256のhashAlgorithm、SHA-256のmaskGenAlgorithm、32のsaltLength、及び1のtrailerFieldを含みます。"
    },
    {
      "indent": 3,
      "text": "0000 : SEQUENCE 0002 : OBJECT IDENTIFIER RSASSA-PSS (1.2.840.113549.1.1.10) 000d : SEQUENCE 000f : CONTEXT 0 0011 : SEQUENCE 0013 : OBJECT IDENTIFIER id-sha256 (2.16.840.1.101.3.4.2.1) 001e : NULL 0020 : CONTEXT 1 0022 : SEQUENCE 0024 : OBJECT IDENTIFIER 1.2.840.113549.1.1.8 002f : SEQUENCE 0031 : OBJECT IDENTIFIER id-sha256 (2.16.840.1.101.3.4.2.1) 003c : NULL 003e : CONTEXT 2 0040 : INTEGER 0x20 (6 bits) 0043 : CONTEXT 3 0045 : INTEGER 0x1 (1 bits)",
      "ja": "0000：SEQUENCE 0002：オブジェクト識別子RSASSA-PSS（1.2.840.113549.1.1.10）000D：SEQUENCE 000F：CONTEXT 0 0011：SEQUENCE 0013：オブジェクト識別子ID-SHA256（2.16.840.1.101.3.4.2.1）001E：NULL 0020：CONTEXT 1 0022：SEQUENCE 0024：オブジェクト識別子1.2.840.113549.1.1.8 002F：SEQUENCE 0031：オブジェクトの識別子ID-SHA256（2.16.840.1.101.3.4.2.1）003C：NULL 003E：CONTEXT 2 0040：INTEGERの0x20 （6ビット）0043：CONTEXT 3 0045：INTEGERの0x1の（1ビット）"
    },
    {
      "indent": 3,
      "text": "Name = RSASSA-PSS with sha-256, oid = 1.2.840.113549.1.1.10 Length = 72 0000: 3046 0609 2a86 4886 f70d 0101 0a30 39a0 0010: 0f30 0d06 0960 8648 0165 0304 0201 0500 0020: a11c 301a 0609 2a86 4886 f70d 0101 0830 0030: 0d06 0960 8648 0165 0304 0201 0500 a203 0040: 0201 20a3 0302 0101",
      "ja": "名前= RSASSA-PSS SHA-256、OID = 1.2.840.113549.1.1.10長さ= 72 0000を有する：3046 0609 2a86 4886 F70D 0101 0a30 39a0 0010：0f30 0d06 0960 8648 0165 0304 0201 0500 0020：A11Cの301A 0609 2a86 4886 F70D 0101 0830 0030：0201 20A3 0302 0101：0960 8648 0165 0304 0201 0500 A203 0040 0d06"
    },
    {
      "indent": 0,
      "text": "Appendix B. IKEv2 Payload Example",
      "ja": "付録B. IKEv2のペイロードの例"
    },
    {
      "indent": 0,
      "text": "B.1. sha1WithRSAEncryption",
      "ja": "B.1。 sha1WithRSAEncryption"
    },
    {
      "indent": 3,
      "text": "The IKEv2 AUTH payload would start like this:",
      "ja": "IKEv2のAUTHペイロードは次のように起動します："
    },
    {
      "indent": 3,
      "text": "00000000: NN00 00LL 0e00 0000 0f30 0d06 092a 8648 00000010: 86f7 0d01 0105 0500 ....",
      "ja": "00000000：NN00 00LL 0e00 0000 0f30 0d06 092a 8648 00000010：86f7の0d01 0105 0500 ...."
    },
    {
      "indent": 3,
      "text": "Where the NN will be the next payload type (i.e., the value depends on the next payload after this Authentication payload), the LL will be the length of this payload, and after the sha1WithRSAEncryption ASN.1 block (15 bytes) there will be the actual signature, which is omitted here.",
      "ja": "NNは、次ペイロードタイプ（すなわち、値がこの認証ペイロードの後の次のペイロードに依存する）であろう場合、LLは、このペイロードの長さとなり、sha1WithRSAEncryptionのASN.1ブロック（15バイト）の後があるだろうここでは省略されている実際の署名、。"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Most of this work was based on the work done in the IPsecME design team for the ECDSA. The design team members were: Dan Harkins, Johannes Merkle, Tero Kivinen, David McGrew, and Yoav Nir.",
      "ja": "この作品のほとんどは、ECDSA用IPsecMEのデザインチームで行われた作業に基づいていました。設計チームのメンバーは次の通りであった：ダンハーキンズ、ヨハネス・マークル、TERO Kivinen、デビッドマグリュー、およびヨアフニール。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Tero Kivinen INSIDE Secure Eerikinkatu 28 Helsinki FI-00180 Finland",
      "ja": "TERO Kivinen INSIDEはEerikinkatu 28 FI-00180ヘルシンキフィンランドセキュア"
    },
    {
      "indent": 3,
      "text": "EMail: kivinen@iki.fi",
      "ja": "メールアドレス：kivinen@iki.fi"
    },
    {
      "indent": 3,
      "text": "Joel Snyder Opus One 1404 East Lind Road Tucson, AZ 85719",
      "ja": "ジョエル・スナイダーオーパスワン1404東リンドロードツーソン、AZ 85719"
    },
    {
      "indent": 3,
      "text": "Phone: +1 520 324 0494 EMail: jms@opus1.com",
      "ja": "電話：+1 520 324 0494 Eメール：jms@opus1.com"
    }
  ]
}