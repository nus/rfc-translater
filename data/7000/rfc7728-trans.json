{
  "title": {
    "text": "RFC 7728 - RTP Stream Pause and Resume",
    "ja": "RFC 7728 - RTPストリームの一時停止と再開"
  },
  "number": 7728,
  "created_at": "2019-11-01 16:35:43.773294+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                         B. Burman\nRequest for Comments: 7728                                      A. Akram\nUpdates: 5104                                                   Ericsson\nCategory: Standards Track                                        R. Even\nISSN: 2070-1721                                      Huawei Technologies\n                                                           M. Westerlund\n                                                                Ericsson\n                                                           February 2016",
      "raw": true
    },
    {
      "indent": 22,
      "text": "RTP Stream Pause and Resume",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "With the increased popularity of real-time multimedia applications, it is desirable to provide good control of resource usage, and users also demand more control over communication sessions. This document describes how a receiver in a multimedia conversation can pause and resume incoming data from a sender by sending real-time feedback messages when using the Real-time Transport Protocol (RTP) for real-time data transport. This document extends the Codec Control Message (CCM) RTP Control Protocol (RTCP) feedback package by explicitly allowing and describing specific use of existing CCMs and adding a group of new real-time feedback messages used to pause and resume RTP data streams. This document updates RFC 5104.",
      "ja": "リアルタイムマルチメディアアプリケーションの人気が上昇すると、リソース使用量の良好な制御を提供することが望ましい、とユーザーも通信セッションをより細かく制御を要求します。この文書では、マルチメディアの会話の中で受信機は、リアルタイムのデータ転送のためのリアルタイムトランスポートプロトコル（RTP）を使用した場合、リアルタイムのフィードバックメッセージを送信することにより、送信者からの入力データを一時停止し、再開することができます方法について説明します。この文書は、明示的に許可すると、既存のCCMの特定の使用を説明し、一時停止して、RTPデータストリームを再開するために使用される新しいリアルタイムのフィードバックメッセージのグループを追加することにより、コーデック制御メッセージ（CCM）RTP制御プロトコル（RTCP）フィードバックパッケージを拡張します。この文書は、RFC 5104に更新します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 5741のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc7728.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc7728で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2016 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2016 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 3,
      "text": "This document may contain material from IETF Documents or IETF Contributions published or made publicly available before November 10, 2008. The person(s) controlling the copyright in some of this material may not have granted the IETF Trust the right to allow modifications of such material outside the IETF Standards Process. Without obtaining an adequate license from the person(s) controlling the copyright in such materials, this document may not be modified outside the IETF Standards Process, and derivative works of it may not be created outside the IETF Standards Process, except to format it for publication as an RFC or to translate it into languages other than English.",
      "ja": "この材料の一部がIETFトラストにこのような材料の変更を許可する権利を与えられていない可能性がありますにこの文書は、2008年、IETFドキュメントまたは11月10日以前に発行または公開さIETF貢献から著作権を支配する者（複数可）材料を含んでいてもよいですIETF標準化プロセスの外。そのような材料の著作権を管理者（単数または複数）から適切なライセンスを取得することなく、この文書は、IETF標準化過程の外側修正されないかもしれません、そして、それの派生物は、IETF標準化過程の外側に作成されない場合があり、それをフォーマットする以外出版RFCとして、英語以外の言語に翻訳します。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   4\n2.  Definitions . . . . . . . . . . . . . . . . . . . . . . . . .   5\n  2.1.  Abbreviations . . . . . . . . . . . . . . . . . . . . . .   5\n  2.2.  Terminology . . . . . . . . . . . . . . . . . . . . . . .   6\n  2.3.  Requirements Language . . . . . . . . . . . . . . . . . .   7\n3.  Use Cases . . . . . . . . . . . . . . . . . . . . . . . . . .   8\n  3.1.  Point to Point  . . . . . . . . . . . . . . . . . . . . .   8\n  3.2.  RTP Mixer to Media Sender . . . . . . . . . . . . . . . .   9\n  3.3.  RTP Mixer to Media Sender in Point to Multipoint  . . . .  10\n  3.4.  Media Receiver to RTP Mixer . . . . . . . . . . . . . . .  11\n  3.5.  Media Receiver to Media Sender across RTP Mixer . . . . .  11\n4.  Design Considerations . . . . . . . . . . . . . . . . . . . .  12\n  4.1.  Real-Time Nature  . . . . . . . . . . . . . . . . . . . .  12\n  4.2.  Message Direction . . . . . . . . . . . . . . . . . . . .  12\n  4.3.  Apply to Individual Sources . . . . . . . . . . . . . . .  12\n  4.4.  Consensus . . . . . . . . . . . . . . . . . . . . . . . .  13\n  4.5.  Message Acknowledgments . . . . . . . . . . . . . . . . .  13\n  4.6.  Request Retransmission  . . . . . . . . . . . . . . . . .  14\n  4.7.  Sequence Numbering  . . . . . . . . . . . . . . . . . . .  14\n  4.8.  Relation to Other Solutions . . . . . . . . . . . . . . .  14\n5.  Solution Overview . . . . . . . . . . . . . . . . . . . . . .  15\n  5.1.  Expressing Capability . . . . . . . . . . . . . . . . . .  16\n  5.2.  PauseID . . . . . . . . . . . . . . . . . . . . . . . . .  16\n  5.3.  Requesting to Pause . . . . . . . . . . . . . . . . . . .  17\n  5.4.  Media Sender Pausing  . . . . . . . . . . . . . . . . . .  18\n  5.5.  Requesting to Resume  . . . . . . . . . . . . . . . . . .  19\n  5.6.  TMMBR/TMMBN Considerations  . . . . . . . . . . . . . . .  20\n6.  Participant States  . . . . . . . . . . . . . . . . . . . . .  22\n  6.1.  Playing State . . . . . . . . . . . . . . . . . . . . . .  22\n  6.2.  Pausing State . . . . . . . . . . . . . . . . . . . . . .  22\n  6.3.  Paused State  . . . . . . . . . . . . . . . . . . . . . .  23\n    6.3.1.  RTCP BYE Message  . . . . . . . . . . . . . . . . . .  24\n    6.3.2.  SSRC Time-Out . . . . . . . . . . . . . . . . . . . .  24\n  6.4.  Local Paused State  . . . . . . . . . . . . . . . . . . .  24\n7.  Message Format  . . . . . . . . . . . . . . . . . . . . . . .  26\n8.  Message Details . . . . . . . . . . . . . . . . . . . . . . .  28\n  8.1.  PAUSE . . . . . . . . . . . . . . . . . . . . . . . . . .  29\n  8.2.  PAUSED  . . . . . . . . . . . . . . . . . . . . . . . . .  30\n  8.3.  RESUME  . . . . . . . . . . . . . . . . . . . . . . . . .  31\n  8.4.  REFUSED . . . . . . . . . . . . . . . . . . . . . . . . .  32\n  8.5.  Transmission Rules  . . . . . . . . . . . . . . . . . . .  32\n9.  Signaling . . . . . . . . . . . . . . . . . . . . . . . . . .  33\n  9.1.  Offer/Answer Use  . . . . . . . . . . . . . . . . . . . .  37\n  9.2.  Declarative Use . . . . . . . . . . . . . . . . . . . . .  39",
      "raw": true
    },
    {
      "indent": 3,
      "text": "10. Examples  . . . . . . . . . . . . . . . . . . . . . . . . . .  39\n  10.1.  Offer/Answer . . . . . . . . . . . . . . . . . . . . . .  40\n  10.2.  Point-to-Point Session . . . . . . . . . . . . . . . . .  41\n  10.3.  Point to Multipoint Using Mixer  . . . . . . . . . . . .  45\n  10.4.  Point to Multipoint Using Translator . . . . . . . . . .  47\n11. IANA Considerations . . . . . . . . . . . . . . . . . . . . .  50\n12. Security Considerations . . . . . . . . . . . . . . . . . . .  50\n13. References  . . . . . . . . . . . . . . . . . . . . . . . . .  52\n  13.1.  Normative References . . . . . . . . . . . . . . . . . .  52\n  13.2.  Informative References . . . . . . . . . . . . . . . . .  53\nAcknowledgments . . . . . . . . . . . . . . . . . . . . . . . . .  54\nContributors  . . . . . . . . . . . . . . . . . . . . . . . . . .  54\nAuthors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  55",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "As real-time communication attracts more people, more applications are created; multimedia conversation applications is one example. Multimedia conversation further exists in many forms, for example, peer-to-peer chat application and multiparty video conferencing controlled by central media nodes, such as RTP Mixers.",
      "ja": "リアルタイム通信は、より多くの人々を魅了し、より多くのアプリケーションが作成されます。マルチメディアの会話のアプリケーションの一例です。マルチメディアの会話は、さらに、例えば、ピア・ツー・ピアチャットアプリケーションや、RTPミキサーなどの中央メディア・ノードによって制御されるマルチパーティのビデオ会議、多くの形態で存在します。"
    },
    {
      "indent": 3,
      "text": "Multimedia conferencing may involve many participants; each has its own preferences for the communication session, not only at the start but also during the session. This document describes several scenarios in multimedia communication where a conferencing node or participant chooses to temporarily pause an incoming RTP [RFC3550] stream and later resume it when needed. The receiver does not need to terminate or inactivate the RTP session and start all over again by negotiating the session parameters, for example, using SIP [RFC3261] with the Session Description Protocol (SDP) [RFC4566] offer/answer [RFC3264].",
      "ja": "マルチメディア会議は、多くの参加者を含むことができます。それぞれが開始時だけでなく、セッションの間だけでなく、通信セッションのために、自身の好みを持っています。この文書では、会議ノードまたは参加者が一時的に入ってくるRTP [RFC3550]のストリームを一時停止し、後で必要なときにそれを再開することを選択したマルチメディア通信にいくつかのシナリオを説明しています。受信機は、終了または不活性化するRTPセッション及びセッション記述プロトコル（SDP）[RFC4566]のオファー/アンサー[RFC3264]とSIP [RFC3261]を使用して、例えば、セッションパラメータをネゴシエートすることによってもう一度開始する必要はありません。"
    },
    {
      "indent": 3,
      "text": "Centralized nodes, like RTP Mixers or Multipoint Control Units (MCUs) that use either logic based on voice activity, other measurements, or user input could reduce the resources consumed in both the sender and the network by temporarily pausing the RTP streams that aren't required by the RTP Mixer. If the number of conference participants are greater than what the conference logic has chosen to present simultaneously to receiving participants, some participant RTP streams sent to the RTP Mixer may not need to be forwarded to any other participant. Those RTP streams could then be temporarily paused. This becomes especially useful when the media sources are provided in multiple encoding versions (Simulcast) [SDP-SIMULCAST] or with Multi-Session Transmission (MST) of scalable encoding such as Scalable Video Coding (SVC) [RFC6190]. There may be some of the",
      "ja": "音声活動、他の測定値、またはユーザ入力に基づいて論理のいずれかを使用するRTPミキサーまたはマルチポイントコントロールユニット（マイコン）のような集中型のノードは、一時的でないRTPストリームを一時停止することにより、送信者とネットワークの両方で消費されるリソースを減らすことができますRTPミキサーで必要とされます。会議参加者の数は、会議のロジックは、参加者の受信に同時に提示することを選択したものよりも大きい場合には、RTPミキサーに送られた一部の参加者RTPストリームは、他の参加者に転送する必要はないかもしれません。これらのRTPストリームは、その後一時的に停止することができます。メディアソースは、複数の符号化バージョンで提供されている場合、これは特に有用となる（サイマルキャスト）[SDP-サイマル]またはそのようなスケーラブルビデオなどのスケーラブル符号化のマルチセッション送信（MST）コーディング（SVC）[RFC6190]を有します。いくつかのがあるかもしれません"
    },
    {
      "indent": 3,
      "text": "defined encodings or a combination of scalable layers that are not used or cannot be used all of the time. As an example, a centralized node may choose to pause such unused RTP streams without being explicitly requested to do so, maybe due to temporarily limited network or processing resources. It may then also send an explicit indication that the streams are paused.",
      "ja": "定義されたエンコーディングまたは使用されていないか、時間のすべてを使用することはできませんスケーラブルな層の組み合わせ。一例として、集中ノードは、未使用のRTPが明示的に多分起因一時的に制限されたネットワークまたは処理リソースに、そうすることを要求されずにストリームを一時停止することを選択することができます。その後も、ストリームが一時停止されていることを明示的に指示を送信することができます。"
    },
    {
      "indent": 3,
      "text": "As the set of RTP streams required at any given point in time is highly dynamic in such scenarios, using the out-of-band signaling channel for pausing, and even more importantly resuming, an RTP stream is difficult due to the performance requirements. Instead, the pause and resume signaling should be in the media plane and go directly between the affected nodes. When using RTP [RFC3550] for media transport, using \"Extended RTP Profile for Real-time Transport Control Protocol (RTCP)-Based Feedback (RTP/AVPF)\" [RFC4585] appears appropriate. No currently existing RTCP feedback message explicitly supports pausing and resuming an incoming RTP stream. As this affects the generation of packets and may even allow the encoding process to be paused, the functionality appears to match Codec Control Messages (CCMs) in the RTP Audio-Visual Profile with Feedback (AVPF) [RFC5104]. This document defines the solution as a CCM extension.",
      "ja": "RTPのセットは、任意の時点で必要なストリームとして一時停止、およびさらに重要な再開するためのアウトオブバンドシグナリングチャネルを使用して、そのようなシナリオで非常に動的であり、RTPストリームが原因性能要件に困難です。代わりに、一時停止と再開シグナリングはメディアプレーンである必要があり、影響を受けるノード間で直接アクセスしてください。メディア転送のためにRTP [RFC3550]を使用する場合は、[RFC4585]「リアルタイムトランスポート制御プロトコル（RTCP）ベースのフィードバック（RTP / AVPF）の拡張RTPプロファイル」を使用することは適切で表示されます。いいえ、現在、既存のRTCPフィードバックメッセージは、明示的に入ってくるRTPストリームを一時停止し、再開サポートしていません。これはパケットの生成に影響を及ぼし、さらに符号化処理を一時停止することを可能にすることができるように、機能がフィードバック（AVPF）[RFC5104]でRTPオーディオビジュアルプロファイルにおけるコーデック制御メッセージ（CCMS）と一致するように見えます。この文書では、CCMの拡張としてソリューションを定義します。"
    },
    {
      "indent": 3,
      "text": "The Temporary Maximum Media Bitrate Request (TMMBR) message of CCM is used by video conferencing systems for flow control. It is desirable to be able to use that method with a bitrate value of zero for pause, whenever possible. This specification updates RFC 5104 by adding the new pause and resume semantics to the TMMBR and Temporary Maximum Media Bitrate Notification (TMMBN) messages.",
      "ja": "CCMの一時的な最大のメディアビットレート要求（TMMBR）メッセージは、フロー制御のためのビデオ会議システムで使用されています。可能な限り、一時停止のためのゼロのビットレート値と、その方法を使用できることが望ましいです。新しい一時停止を追加し、TMMBRと一時的な最大ビットレートメディア通知（TMMBN）メッセージにセマンティクスを再開することにより、この仕様の更新RFC 5104。"
    },
    {
      "indent": 0,
      "text": "2. Definitions",
      "section_title": true,
      "ja": "2.定義"
    },
    {
      "indent": 0,
      "text": "2.1. Abbreviations",
      "section_title": true,
      "ja": "2.1. 略語"
    },
    {
      "indent": 3,
      "text": "AVPF: Audio-Visual Profile with Feedback (RFC 4585)",
      "ja": "AVPF：フィードバック付きオーディオビジュアルプロファイル（RFC 4585）"
    },
    {
      "indent": 3,
      "text": "CCM: Codec Control Message (RFC 5104)",
      "ja": "CCM：コーデックコントロールメッセージ（RFC 5104）"
    },
    {
      "indent": 3,
      "text": "CNAME: Canonical Name (RTCP Source Description)",
      "ja": "CNAME：正規名（RTCPソース説明）"
    },
    {
      "indent": 3,
      "text": "CSRC: Contributing Source (RTP)",
      "ja": "CSRC：貢献ソース（RTP）"
    },
    {
      "indent": 3,
      "text": "FCI: Feedback Control Information (AVPF)",
      "ja": "FCI：フィードバック制御情報（AVPF）"
    },
    {
      "indent": 3,
      "text": "FIR: Full Intra Refresh (CCM)",
      "ja": "FIR：フルイントラリフレッシュ（CCM）"
    },
    {
      "indent": 3,
      "text": "FMT: Feedback Message Type (AVPF)",
      "ja": "FMT：フィードバックメッセージの種類（AVPF）"
    },
    {
      "indent": 3,
      "text": "MCU: Multipoint Control Unit",
      "ja": "MCU：マルチポイントコントロールユニット"
    },
    {
      "indent": 3,
      "text": "MTU: Maximum Transfer Unit",
      "ja": "MTU：最大転送単位"
    },
    {
      "indent": 3,
      "text": "PT: Payload Type (RTP)",
      "ja": "PT：ペイロードタイプ（RTP）"
    },
    {
      "indent": 3,
      "text": "RTP: Real-time Transport Protocol (RFC 3550)",
      "ja": "RTP：リアルタイムトランスポートプロトコル（RFC 3550）"
    },
    {
      "indent": 3,
      "text": "RTCP: RTP Control Protocol (RFC 3550)",
      "ja": "RTCP：RTP制御プロトコル（RFC 3550）"
    },
    {
      "indent": 3,
      "text": "RTCP RR: RTCP Receiver Report",
      "ja": "RTCPのRR：RTCP受信レポート"
    },
    {
      "indent": 3,
      "text": "RTCP SR: RTCP Sender Report",
      "ja": "RTCPのSR：RTCP送信レポート"
    },
    {
      "indent": 3,
      "text": "SDP: Session Description Protocol (RFC 4566)",
      "ja": "SDP：セッション記述プロトコル（RFC 4566）"
    },
    {
      "indent": 3,
      "text": "SIP: Session Initiation Protocol (RFC 3261)",
      "ja": "SIP：セッション開始プロトコル（RFC 3261）"
    },
    {
      "indent": 3,
      "text": "SSRC: Synchronization Source (RTP)",
      "ja": "SSRC：同期ソース（RTP）"
    },
    {
      "indent": 3,
      "text": "SVC: Scalable Video Coding",
      "ja": "SVC：スケーラブルビデオ符号化"
    },
    {
      "indent": 3,
      "text": "TMMBR: Temporary Maximum Media Bitrate Request (CCM)",
      "ja": "TMMBR：一時的な最大のメディアビットレート要求（CCM）"
    },
    {
      "indent": 3,
      "text": "TMMBN: Temporary Maximum Media Bitrate Notification (CCM)",
      "ja": "TMMBN：一時的な最大のメディアビットレート通知（CCM）"
    },
    {
      "indent": 3,
      "text": "UA: User Agent (SIP)",
      "ja": "UA：ユーザエージェント（SIP）"
    },
    {
      "indent": 3,
      "text": "UDP: User Datagram Protocol (RFC 768)",
      "ja": "UDP：ユーザデータグラムプロトコル（RFC 768）"
    },
    {
      "indent": 0,
      "text": "2.2. Terminology",
      "section_title": true,
      "ja": "2.2. 用語"
    },
    {
      "indent": 3,
      "text": "In addition to the following, the definitions from RTP [RFC3550], AVPF [RFC4585], CCM [RFC5104], and RTP Taxonomy [RFC7656] also apply in this document.",
      "ja": "以下に加えて、RTP [RFC3550]、AVPF [RFC4585]、CCM [RFC5104]、およびRTP分類[RFC7656]の定義は、この文書に適用されます。"
    },
    {
      "indent": 3,
      "text": "Feedback Messages: CCM [RFC5104] categorized different RTCP feedback messages into four types: Request, Command, Indication, and Notification. This document places the PAUSE and RESUME messages into the Request category, PAUSED as an Indication, and REFUSED as a Notification.",
      "ja": "フィードバックメッセージ：要求、コマンド、表示、および通知：CCM [RFC5104]は4つのタイプに異なるRTCPフィードバックメッセージを分類しました。この文書では、要求のカテゴリにPAUSEとRESUMEメッセージを置く指標としてPAUSED、および通知として拒否しました。"
    },
    {
      "indent": 6,
      "text": "PAUSE: Request from an RTP stream receiver to pause a stream",
      "ja": "PAUSE：ストリームを一時停止するためのRTPストリームの受信機からの要求"
    },
    {
      "indent": 6,
      "text": "RESUME: Request from an RTP stream receiver to resume a paused stream",
      "ja": "RESUME：一時停止ストリームを再開するRTPストリーム受信機からのリクエスト"
    },
    {
      "indent": 6,
      "text": "PAUSED: Indication from an RTP stream sender that a stream is paused",
      "ja": "PAUSED：ストリームが一時停止されたRTPストリームの送信者からの指示"
    },
    {
      "indent": 6,
      "text": "REFUSED: Notification from an RTP stream sender that a PAUSE or RESUME request will not be honored",
      "ja": "REFUSED：PAUSEまたはRESUME要求が受け入れられないことをRTPストリームの送信者からの通知"
    },
    {
      "indent": 3,
      "text": "Mixer: The intermediate RTP node that receives an RTP stream from different endpoints, combines them to make one RTP stream, and forwards them to destinations, in the sense described for Topo-Mixer in \"RTP Topologies\" [RFC7667].",
      "ja": "ミキサー：「RTPトポロジ」[RFC7667]にTOPO-ミキサについて記載した意味で、異なるエンドポイントからRTPストリームを受信する1つのRTPストリームを作るためにそれらを結合し、そして宛先に転送中間RTPノード。"
    },
    {
      "indent": 3,
      "text": "Participant: A member that is part of an RTP session, acting as the receiver, sender, or both.",
      "ja": "参加者：受信、送信、またはその両方として機能する、RTPセッションの一部である部材。"
    },
    {
      "indent": 3,
      "text": "Paused sender: An RTP stream sender that has stopped its transmission, i.e., no other participant receives its RTP transmission, based on having received either a PAUSE request, defined in this specification, or a local decision.",
      "ja": "すなわち、他の参加者は、本明細書で定義された一時停止要求、またはローカル決定のいずれかを受信したに基づいてRTP伝送を受信しない、その送信を停止したRTPストリームの送信者：送信者を一時停止。"
    },
    {
      "indent": 3,
      "text": "Pausing receiver: An RTP stream receiver that sends a PAUSE request, defined in this specification, to another participant(s).",
      "ja": "休止レシーバ：他の参加者（複数可）に、本明細書で定義された一時停止要求を送信するRTPストリームの受信機。"
    },
    {
      "indent": 3,
      "text": "Stream: Used as a short term for RTP stream, unless otherwise noted.",
      "ja": "ストリーム：特に断りがない限り、RTPストリームのための短期的として使用されます。"
    },
    {
      "indent": 3,
      "text": "Stream receiver: Short for RTP stream receiver; the RTP entity responsible for receiving an RTP stream, usually a Media Depacketizer.",
      "ja": "ストリーム受信：RTPストリーム受信機のためのショート。 RTPストリーム、通常はメディアデパケッタイザを受信するための責任RTPエンティティ。"
    },
    {
      "indent": 3,
      "text": "Stream sender: Short for RTP stream sender; the RTP entity responsible for creating an RTP stream, usually a Media Packetizer.",
      "ja": "ストリーム送信者：RTPストリームの送信者のためのショート。 RTPストリーム、通常はメディアパケタイザの作成を担当するRTPエンティティ。"
    },
    {
      "indent": 0,
      "text": "2.3. Requirements Language",
      "section_title": true,
      "ja": "2.3. 要件言語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119 [RFC2119].",
      "ja": "キーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、 \"SHALL\"、 \"SHOULD\"、 \"ないもの\"、 \"推奨\" \"ない（SHOULD NOT）\"、 \"MAY\"、 \"推奨NOT\"、および「OPTIONAL RFC 2119 [RFC2119]に記載されているように「この文書に解釈されるべきです。"
    },
    {
      "indent": 0,
      "text": "3. Use Cases",
      "section_title": true,
      "ja": "3.ユースケース"
    },
    {
      "indent": 3,
      "text": "This section discusses the main use cases for RTP stream pause and resume.",
      "ja": "このセクションでは、RTPストリームの一時停止と再開のための主な使用例について説明します。"
    },
    {
      "indent": 3,
      "text": "The RTCWEB WG's use case and requirements document [RFC7478] defines the following API requirements in Appendix A, which is also used by the W3C WebRTC WG:",
      "ja": "RTCWEB WGのユースケースと要件ドキュメント[RFC7478]はまた、W3CのWebRTC WGで使用され、付録A、で、次のAPIの要件を定義しています。"
    },
    {
      "indent": 3,
      "text": "A8 The web API must provide means for the web application to mute/ unmute a stream or stream component(s). When a stream is sent to a peer, mute status must be preserved in the stream received by the peer.",
      "ja": "A8は、Web APIは、ミュート/ミュート解除ストリームまたはストリーム成分（複数可）へのWebアプリケーションのための手段を提供しなければなりません。ストリームはピアに送信されると、ミュート状態はピアによって受信されたストリームに保存されなければなりません。"
    },
    {
      "indent": 3,
      "text": "A9 The web API must provide means for the web application to cease the sending of a stream to a peer.",
      "ja": "A9のWeb APIは、ピアへのストリームの送信を中止するには、Webアプリケーションのための手段を提供しなければなりません。"
    },
    {
      "indent": 3,
      "text": "This document provides means to optimize transport usage by stopping the sending of muted streams and starting the sending of streams again when unmuted. Here, it is assumed that \"mute\" above can be taken to apply also to media other than audio. At the time of publication for this specification, the RTCWEB WG did not specify any pause/resume functionality.",
      "ja": "この文書では、ミュートストリームの送信を停止したときにミュート再度ストリームの送信を開始することによってトランスポートの使用を最適化するための手段を提供します。ここでは、上記の「ミュート」は、音声以外のメディアにも適用するために撮影することができたとします。この仕様のための公開時点で、RTCWEB WGは、任意の一時停止/再開機能が指定されていませんでした。"
    },
    {
      "indent": 0,
      "text": "3.1. Point to Point",
      "section_title": true,
      "ja": "3.1. ポイントからポイントへ"
    },
    {
      "indent": 3,
      "text": "This is the most basic use case with an RTP session containing two endpoints. Each endpoint sends one or more streams.",
      "ja": "これは、2つのエンドポイントを含むRTPセッションでの最も基本的なユースケースです。各エンドポイントは、1つ以上のストリームを送信します。"
    },
    {
      "indent": 28,
      "text": "+---+         +---+\n| A |<------->| B |\n+---+         +---+",
      "raw": true
    },
    {
      "indent": 25,
      "text": "Figure 1: Point to Point",
      "ja": "図1：ポイントツーポイント"
    },
    {
      "indent": 3,
      "text": "The usage of RTP stream pause in this use case is to temporarily halt delivery of streams that the sender provides but the receiver does not currently use. This can, for example, be due to minimized applications where the video stream is not actually shown on any display, or it is not used in any other way, such as being recorded. In this case, since there is only a single receiver of the stream, pausing or resuming a stream does not impact anyone else other than the sender and the single receiver of that stream.",
      "ja": "このユースケースでRTPストリーム休止の使用を一時的に受信機が現在使用しないが、送信者が提供するストリームの配信を停止することです。これは、例えば、記録されているようなビデオストリームが実際にディスプレイに表示されていない、またはそれは他の方法で使用されていない最小化アプリケーションに起因することができます。この場合、ストリームの唯一の単一の受信機が存在するため、ストリームを一時停止または再開すると、送信者とそのストリームの単一の受信機以外の他の誰に影響を与えません。"
    },
    {
      "indent": 0,
      "text": "3.2. RTP Mixer to Media Sender",
      "section_title": true,
      "ja": "3.2. メディアSenderへのRTPミキサー"
    },
    {
      "indent": 3,
      "text": "One of the most commonly used topologies in centralized conferencing is based on the RTP Mixer [RFC7667]. The main reason for this is that it provides a very consistent view of the RTP session towards each participant. That is accomplished through the Mixer originating its own streams, identified by distinct SSRC values, and any RTP streams sent to the participants will be sent using those SSRC values. If the Mixer wants to identify the underlying media sources for its conceptual streams, it can identify them using CSRC. The stream the Mixer provides can be an actual mix of multiple media sources, but it might also be switching received streams as described in Sections 3.6 - 3.8 of \"RTP Topologies\" [RFC7667].",
      "ja": "集中型の会議の中で最も一般的に使用されるトポロジーの一つは、RTPミキサー[RFC7667]に基づいています。この主な理由は、それが各参加者に向けたRTPセッションの非常に一貫性のあるビューを提供することです。それは、それ自身のストリームを発信ミキサーを通して達成異なるSSRC値によって識別され、参加者に送信されたRTPストリームは、それらのSSRC値を使用して送信されています。ミキサーは、その概念のストリームのための基礎となるメディアソースを特定したい場合は、CSRCを使用してそれらを識別することができます。 [RFC7667] 3.8「RTPトポロジ」の - ストリームミキサーは、複数のメディア・ソースの実際の混合物とすることができる提供するが、セクション3.6で説明したように、それはまた、受信されたストリームを切り替えるかもしれません。"
    },
    {
      "indent": 20,
      "text": "+---+      +-----------+      +---+\n| A |<---->|           |<---->| B |\n+---+      |           |      +---+\n           |   Mixer   |\n+---+      |           |      +---+\n| C |<---->|           |<---->| D |\n+---+      +-----------+      +---+",
      "raw": true
    },
    {
      "indent": 20,
      "text": "Figure 2: RTP Mixer in Unicast Only",
      "ja": "図2：ユニキャストでRTPミキサーのみ"
    },
    {
      "indent": 3,
      "text": "Which streams from clients B, C, and D that are delivered to a given receiver, A, can depend on several things:",
      "ja": "所与の受信機に配信されるクライアントB、C、およびDから流れており、Aは、いくつかに依存し得ます。"
    },
    {
      "indent": 3,
      "text": "o The RTP Mixer's own logic and measurements, such as voice activity on the incoming audio streams.",
      "ja": "RTPミキサー自身のロジックなど、着信オーディオストリーム上で音声アクティビティとして測定、O。"
    },
    {
      "indent": 3,
      "text": "o The number of sent media sources exceed what is reasonable to present simultaneously at any given receiver.",
      "ja": "oを送信されたメディアソースの数は、任意の所与の受信機に同時に存在することは合理的であるものを上回ります。"
    },
    {
      "indent": 3,
      "text": "o A human controlling the conference that determines how the media should be mixed. This would be more common in lecture or similar applications where regular listeners may be prevented from breaking into the session unless approved by the moderator.",
      "ja": "O人間は、メディアが混合されなければならないかを決定する会議を制御します。これは、モデレータが承認しない限り、定期的にリスナーがセッションに侵入することを防止することができるより多くの講義では、共通または類似のアプリケーションになります。"
    },
    {
      "indent": 3,
      "text": "o The streams may also be part of a Simulcast [SDP-SIMULCAST] or scalable encoded (for Multi-Session Transmission) [RFC6190], thus providing multiple versions that can be delivered by the RTP stream sender.",
      "ja": "Oストリームは、サイマルキャスト[SDP-サイマルキャスト]または（マルチセッション送信用）スケーラブル符号化[RFC6190]の一部である、従ってRTPストリーム送信者によって送達することができる複数のバージョンを提供してもよいです。"
    },
    {
      "indent": 3,
      "text": "These examples indicate that there are numerous reasons why a particular stream would not currently be in use but must be available for use at very short notice if any dynamic event occurs that causes a different stream selection to be done in the Mixer.",
      "ja": "これらの例は、特定のストリームが現在使用中ではないだろうが、任意の動的イベントが異なるストリーム選択はミキサーで行われることになり、その発生した場合、非常に短期間で使用可能でなければならない多数の理由があることを示しています。"
    },
    {
      "indent": 3,
      "text": "Because of this, it would be highly beneficial if the Mixer could request the RTP stream sender to pause a particular stream. The Mixer also needs to be able to request the RTP stream sender to resume delivery with minimal delay.",
      "ja": "ミキサーは、特定のストリームを一時停止するRTPストリームを送信者に要求することができれば、このため、それは非常に有益であろう。ミキサーはまた、最小の遅延で配信を再開するためにRTPストリームの送信者を要求できるようにする必要があります。"
    },
    {
      "indent": 3,
      "text": "In some cases, especially when the Mixer sends multiple RTP streams per receiving client, there may be situations that make it desirable for the Mixer to pause some of its sent RTP streams, even without being explicitly asked to do so by the receiving client. Such situations can, for example, be caused by a temporary lack of available Mixer network or processing resources. An RTP stream receiver that no longer receives an RTP stream could interpret this as an error condition and try to take action to re-establish the RTP stream. Such action would likely be undesirable if the RTP stream was in fact deliberately paused by the Mixer. Undesirable RTP stream receiver actions could be avoided if the Mixer is able to explicitly indicate that an RTP stream is deliberately paused.",
      "ja": "ミキサーは、複数のRTPがクライアントを受け取るごとにストリーム送信する場合は特に、いくつかのケースでは、それは望ましいミキサーでも明示的に受信するクライアントによってそうするように頼まれることなく、その送信されたRTPのいくつかのストリームを一時停止できるようにするための状況があるかもしれません。このような状況は、例えば、利用できるミキサーネットワークや処理リソースの一時的な不足によって発生することができます。もはやRTPストリームを受信RTPストリームの受信機は、エラー条件としてこれを解釈し、RTPストリームを再確立するために行動を取るように試みることができます。 RTPストリームは、実際に意図的ミキサーによって一時停止された場合、このような行動は、おそらく望ましくないであろう。ミキサーは、RTPストリームが意図的に一時停止していることを明示的に示すことができる場合は、望ましくないRTPストリームの受信機の動作を避けることができました。"
    },
    {
      "indent": 3,
      "text": "Just as for point to point (Section 3.1), there is only a single receiver of the stream, the RTP Mixer, and pausing or resuming a stream does not affect anyone else other than the sender and single receiver of that stream.",
      "ja": "ただ、ポイント（3.1節）へのポイントのように、唯一の単一のストリーム、RTPミキサーの受信機、および一時停止またはストリームを再開すると、送信者とそのストリームの単一の受信機以外の他の誰に影響を与えませんがあります。"
    },
    {
      "indent": 0,
      "text": "3.3. RTP Mixer to Media Sender in Point to Multipoint",
      "section_title": true,
      "ja": "3.3. ポイントツーマルチポイントでRTPミキサーメディアへの送信者"
    },
    {
      "indent": 3,
      "text": "This use case is similar to the previous section; however, the RTP Mixer is involved in three domains that need to be separated: the Multicast Network (including participants A and C), participant B, and participant D. The difference from above is that A and C share a multicast domain, which is depicted below.",
      "ja": "このユースケースは、前のセクションと同様です。上記の相違点は、AとCがマルチキャストドメインを共有していることであるマルチキャストネットワーク、参加者B、及び参加者D.（参加者AおよびCを含む）：ただし、RTPミキサーを分離する必要が三つのドメインに関与しています下記に示します。"
    },
    {
      "indent": 13,
      "text": "           +-----+\n+---+     /       \\     +-----------+      +---+\n| A |<---/         \\    |           |<---->| B |\n+---+   /   Multi-  \\   |           |      +---+\n       +    cast     +->|   Mixer   |\n+---+   \\  Network  /   |           |      +---+\n| C |<---\\         /    |           |<---->| D |\n+---+     \\       /     +-----------+      +---+\n           +-----+",
      "raw": true
    },
    {
      "indent": 16,
      "text": "Figure 3: RTP Mixer in Point to Multipoint",
      "ja": "図3：RTPミキサーポイントでは、マルチします"
    },
    {
      "indent": 3,
      "text": "If the RTP Mixer pauses a stream from A, it will not only pause the stream towards itself but will also stop the stream from arriving to C, which C is heavily impacted by, might not approve of, and should thus have a say on.",
      "ja": "RTPミキサーは、Aからストリームを一時停止した場合、それは自分自身に向けてストリームを一時停止するだけでなく、Cが重くにより影響を受けされて、を承認しない場合がありますので、上の発言権を持っている必要があり、Cへの到着からのストリームを停止します。"
    },
    {
      "indent": 3,
      "text": "If the Mixer resumes a paused stream from A, it will be resumed also towards C. In this case, if C is not interested, it can simply ignore the stream and is not impacted as much as above.",
      "ja": "ミキサーAから一時停止ストリームを再開した場合、Cが興味を持っていない場合には、それは単にストリームを無視することができ、上記のような限り影響を受けないが、この場合にはC.向かっも再開されます。"
    },
    {
      "indent": 3,
      "text": "In this use case, there are several receivers of a stream, and the Mixer must take special care so as not to pause a stream that is still wanted by some receivers.",
      "ja": "このユースケースでは、そこにストリームのいくつかの受信機があり、まだいくつかの受信機で指名手配されたストリームを一時停止しないようにミキサーには、特別な注意を払う必要があります。"
    },
    {
      "indent": 0,
      "text": "3.4. Media Receiver to RTP Mixer",
      "section_title": true,
      "ja": "3.4.  RTPミキサーにメディアレシーバー"
    },
    {
      "indent": 3,
      "text": "In this use case, the direction of the request to pause is the opposite compared to the two previous use cases. An endpoint in Figure 2 could potentially request to pause the delivery of a given stream. Possible reasons include those in the point-to-point case (Section 3.1) above.",
      "ja": "このユースケースでは、一時停止要求の方向は、前の2つのユースケースと比較して反対です。図2のエンドポイントは、潜在的に指定されたストリームの配信を一時停止するように要求することができます。考えられる理由は、上記のポイント・ツー・ポイントの場合（3.1節）のものが挙げられます。"
    },
    {
      "indent": 3,
      "text": "When the RTP Mixer is only connected to individual unicast paths, the use case and any considerations are identical to the point-to-point use case.",
      "ja": "RTPミキサは、個々のユニキャスト経路にのみ接続されている場合、ユースケースと任意の考慮事項は、ポイントツーポイントユースケースと同一です。"
    },
    {
      "indent": 3,
      "text": "However, when the endpoint requesting stream pause is connected to the RTP Mixer through a multicast network, such as A or C in Figure 3, the use case instead becomes identical to the one in Section 3.3, only with reverse direction of the streams and pause/ resume requests.",
      "ja": "ストリームの一時停止を要求するエンドポイントが図3のようなA又はCのようなマルチキャストネットワークを介してRTPミキサに接続されている場合しかし、ユースケースは、代わりにだけ逆の流れの方向と休止して、3.3節のものと同じになります/リクエストを再開します。"
    },
    {
      "indent": 0,
      "text": "3.5. Media Receiver to Media Sender across RTP Mixer",
      "section_title": true,
      "ja": "3.5.  RTPミキサー間でメディアSenderへのメディアレシーバー"
    },
    {
      "indent": 3,
      "text": "An endpoint, like A in Figure 2, could potentially request to pause the delivery of a given stream, like one of B's, over any of the SSRCs used by the Mixer by sending a pause request for the CSRC identifying the stream. However, the authors are of the opinion that this is not a suitable solution for several reasons:",
      "ja": "エンドポイントは、図2のAのように、潜在的にCSRCストリームを識別するための一時停止要求を送信することによって、ミキサーによって使用SSRCsのいずれかの上に、Bさんのように、指定されたストリームの配信を一時停止するように要求することができます。しかし、著者は、これはいくつかの理由のために適切な解決策ではないという意見です。"
    },
    {
      "indent": 3,
      "text": "1. The Mixer might not include CSRC in its stream indications.",
      "section_title": true,
      "ja": "1.ミキサーは、そのストリームの適応症でCSRCが含まれない場合があります。"
    },
    {
      "indent": 3,
      "text": "2. An endpoint cannot rely on the CSRC to correctly identify the stream to be paused when the delivered media is some type of mix. A more elaborate stream identification solution is needed to support this in the general case.",
      "ja": "2.エンドポイントが正常に配信されるメディアミックスのいくつかのタイプであるときに一時停止するストリームを識別するために、CSRCに頼ることはできません。より精巧なストリーム識別ソリューションは、一般的なケースでは、これをサポートするために必要とされます。"
    },
    {
      "indent": 3,
      "text": "3. The endpoint cannot determine if a given stream is still needed by the RTP Mixer to deliver to another session participant.",
      "ja": "指定されたストリームが別のセッション参加者に配信するRTPミキサーで必要とされている場合3.エンドポイントは判断できません。"
    },
    {
      "indent": 3,
      "text": "Due to the above reasons, we exclude this use case from further consideration.",
      "ja": "上記の理由のために、我々はさらに検討から、このユースケースを除外します。"
    },
    {
      "indent": 0,
      "text": "4. Design Considerations",
      "section_title": true,
      "ja": "4.設計上の考慮事項"
    },
    {
      "indent": 3,
      "text": "This section describes the requirements that this specification needs to meet.",
      "ja": "このセクションでは、この仕様を満たすために必要な要件について説明します。"
    },
    {
      "indent": 0,
      "text": "4.1. Real-Time Nature",
      "section_title": true,
      "ja": "4.1. リアルタイム性"
    },
    {
      "indent": 3,
      "text": "The first section (Section 1) of this specification describes some possible reasons why a receiver may pause an RTP sender. Pausing and resuming is time dependent, i.e., a receiver may choose to pause an RTP stream for a certain duration, after which the receiver may want the sender to resume. This time dependency means that the messages related to pause and resume must be transmitted to the sender in a timely fashion in order for them to be purposeful. The pause operation is arguably not as time critical as the resume operation, since it mainly provides a reduction of resource usage. Timely handling of the resume operation is, however, likely to directly impact the end-user's perceived quality experience, since it affects the availability of media that the user expects to receive more or less instantly. It may also be highly desirable for a receiver to quickly learn that an RTP stream is intentionally paused on the RTP sender's own behalf.",
      "ja": "本明細書の最初のセクション（セクション1）は、受信機はRTP送信機を一時停止することができる理由をいくつかの可能な理由を説明しています。一時停止および再開することは時間依存性である、すなわち、受信機は、受信機が、送信者が再開したい場合があり、その後一定時間、のためのRTPストリームを一時停止することを選択することができます。この時間依存性は、一時停止や再開に関連するメッセージは、それらが意図されるためにタイムリーに発信者に送信されなければならないことを意味します。それは主にリソース使用量の削減を提供するので、一時停止操作は、時間として間違いなく再開操作として重要ではありません。それは、ユーザは、多かれ少なかれ即座に受け取ることを想定しているメディアの可用性に影響を与えるので、再開操作のタイムリーな取り扱いは、しかし、直接エンドユーザーの知覚品質の経験に影響を与える可能性があります。受信機はすぐにRTPストリームが意図的にRTPの送信者自身に代わって一時停止していることを学習することも非常に望ましいかもしれません。"
    },
    {
      "indent": 0,
      "text": "4.2. Message Direction",
      "section_title": true,
      "ja": "4.2. メッセージの方向"
    },
    {
      "indent": 3,
      "text": "It is the responsibility of an RTP stream receiver that wants to pause or resume a stream from the sender(s) to transmit PAUSE and RESUME messages. An RTP stream sender that wants to pause itself can often simply do it, but sometimes this will adversely affect the receiver and an explicit indication that the RTP stream is paused may then help. Any indication that an RTP stream is paused is the responsibility of the RTP stream sender and may in some cases not even be needed by the stream receiver.",
      "ja": "これは、PAUSEとRESUMEメッセージを送信するために、送信者（複数可）からのストリームを一時停止または再開したいRTPストリーム受信機の責任です。自分自身を一時停止したいRTPストリームの送信者は、多くの場合、単純にそれを行うことができますが、時にはこれは悪レシーバおよびRTPストリームが一時停止されていることを明示が、その後役立つことが影響します。 RTPストリームが一時停止されていること兆候はRTPストリームの送信者の責任であり、いくつかのケースでも、ストリーム受信機によって必要とされなくてもよいです。"
    },
    {
      "indent": 0,
      "text": "4.3. Apply to Individual Sources",
      "section_title": true,
      "ja": "4.3. 個々のソースに適用されます"
    },
    {
      "indent": 3,
      "text": "The PAUSE and RESUME messages apply to single RTP streams identified by their SSRC, which means the receiver targets the sender's SSRC in the PAUSE and RESUME requests. If a paused sender starts sending with a new SSRC, the receivers will need to send a new PAUSE request in order to pause it. PAUSED indications refer to a single one of the sender's own paused SSRC.",
      "ja": "PAUSEおよびRESUMEメッセージは、単一のRTPに適用され、受信機がPAUSEとRESUME要求で送信者のSSRCを対象に意味彼らのSSRCによって識別ストリーム。一時停止した送信者が新しいSSRCで送信を開始した場合、受信機は、それを一時停止するために、新しいPAUSE要求を送信する必要があります。 PAUSEDの適応症は、送信者自身の一時停止SSRCの単一のものを参照してください。"
    },
    {
      "indent": 0,
      "text": "4.4. Consensus",
      "section_title": true,
      "ja": "4.4. コンセンサス"
    },
    {
      "indent": 3,
      "text": "An RTP stream sender should not pause an SSRC that some receiver still wishes to receive.",
      "ja": "RTPストリームの送信者は、いくつかの受信機がまだ受信したいというSSRCを一時停止するべきではありません。"
    },
    {
      "indent": 3,
      "text": "The reason is that in RTP topologies where the stream is shared between multiple receivers, a single receiver on that shared network must not single-handedly cause the stream to be paused without letting all other receivers voice their opinions on whether or not the stream should be paused. Such shared networks can, for example, be multicast, a mesh with a joint RTP session, or a transport Translator-based network. A consequence of this is that a newly joining receiver first needs to learn the existence of paused streams and secondly should be able to resume any paused stream. A newly joining receiver can, for example, be detected through an RTCP Receiver Report containing both a new SSRC and a CNAME that does not already occur in the session. Any single receiver wanting to resume a stream should also cause it to be resumed. An important exception to this is when the RTP stream sender is aware of conditions that make it desirable or even necessary to pause the RTP stream on its own behalf, without being explicitly asked to do so. Such local consideration in the RTP sender takes precedence over RTP receiver wishes to receive the stream.",
      "ja": "その理由は、ストリームは、複数の受信機間で共有されているRTPトポロジでは、その共有ネットワーク上の単一の受信機が単独で他のすべての受信機がストリームであるべきかどうかについて意見を表明せずにストリームが一時停止させてはならないということです一時停止しました。そのような共有ネットワークは、例えば、関節RTPセッション、または輸送翻訳ベースのネットワークとメッシュマルチキャストすることができます。この結果は、新たに参加する受信機が最初の一時停止ストリームの存在を学習する必要があり、第二に任意の一時停止ストリームを再開することができるはずです。新たに参加受信器は、例えば、既にセッションで発生していない新しいSSRC及びCNAME両方を含むRTCPレシーバレポートを介して検出することができます。ストリームを再開したい任意の単一の受信機はまた、再開させなければなりません。 RTPストリームの送信者が明示的にそうするように頼まれることなく、それが望ましいか、独自に代わってRTPストリームを一時停止する必要さえ作るの条件を認識しているとき、これに対する重要な例外があります。 RTP受信機がストリームを受信することを望む上RTP送信機において、ローカル配慮が優先されます。"
    },
    {
      "indent": 0,
      "text": "4.5. Message Acknowledgments",
      "section_title": true,
      "ja": "4.5. メッセージ謝辞"
    },
    {
      "indent": 3,
      "text": "RTP and RTCP does not guarantee reliable data transmission. It uses whatever assurance the lower-layer transport protocol can provide. However, this is commonly UDP that provides no reliability guarantees. Thus, it is possible that a PAUSE and/or RESUME message transmitted from an RTP endpoint does not reach its destination, i.e., the targeted RTP stream sender. When PAUSE or RESUME reaches the RTP stream sender and is effective, i.e., an active RTP stream sender pauses or a resuming RTP stream sender has media data to transmit, it is immediately seen from the arrival or non-arrival of RTP packets for that RTP stream. Thus, no explicit acknowledgments are required in this case.",
      "ja": "RTPとRTCPは、信頼性の高いデータ伝送を保証するものではありません。これは、下位層のトランスポートプロトコルが提供できるものは何でも保証使用しています。しかし、これは一般的に何の信頼性の保証を提供していないUDPです。したがって、PAUSE及び/又はRTPエンドポイントから送信された再開メッセージがその宛先に到達しないこと、すなわち、標的RTPストリームセンダが可能です。 PAUSEまたはRESUMEは、RTPストリームの送信者に到達し、有効である場合、すなわち、アクティブRTPストリームの送信者が一時停止または再開RTPストリームの送信者が送信するメディアデータを有し、それは直ちに到着又はそのRTPのためのRTPパケットの非到着から見ましたストリーム。このように、明示的な確認応答が、この場合には必要ありません。"
    },
    {
      "indent": 3,
      "text": "In some cases, when a PAUSE or RESUME message reaches the RTP stream sender, it will not be able to pause or resume the stream due to some local consideration, for example, lack of data to transmit. In this error condition, a negative acknowledgment may be needed to avoid unnecessary retransmission of requests (Section 4.6).",
      "ja": "一時停止または再開メッセージは、RTPストリームの送信者に到達したときにいくつかの場合において、例えば、何らかのローカル考慮に送信すべきデータの欠如ストリームを一時停止または再開することはできません。このエラー状態では、否定応答は要求（4.6節）の不必要な再送信を回避するために必要な場合があります。"
    },
    {
      "indent": 0,
      "text": "4.6. Request Retransmission",
      "section_title": true,
      "ja": "4.6. リクエスト再送信"
    },
    {
      "indent": 3,
      "text": "When the stream is not affected as expected by a PAUSE or RESUME request, the request may have been lost and the sender of the request will need to retransmit it. The retransmission should take the round-trip time into account, and will also need to take the normal RTCP bandwidth and timing rules applicable to the RTP session into account, when scheduling retransmission of feedback.",
      "ja": "PAUSEまたはRESUME要求で期待通りの流れが影響を受けていない場合は、要求が失われた可能性があり、要求の送信者は、それを再送信する必要があります。再送は考慮に往復時間を取る必要があり、およびフィードバックの再送信をスケジュールするときにも、考慮にRTPセッションに適用される通常のRTCP帯域幅とタイミングのルールを取る必要があります。"
    },
    {
      "indent": 3,
      "text": "When it comes to resume requests or unsolicited paused indications that are more time critical, the best performance may be achieved by repeating the message as often as possible until a sufficient number have been sent to reach a high probability of message delivery or at an explicit indication that the message was delivered. For resume requests, such explicit indication can be delivery of the RTP stream being requested to be resumed.",
      "ja": "それが要求する以上の時間が重要であり、迷惑一時停止の表示を再開するために来たときに十分な数がメッセージ配信の高い確率に到達するために送られたか明示にされるまで、最高のパフォーマンスができるだけ頻繁にメッセージを繰り返すことによって達成することができますメッセージが配信されたこと。再開要求に対して、そのような明示的な指示は、RTPストリームの配信を再開することを要求されることができます。"
    },
    {
      "indent": 0,
      "text": "4.7. Sequence Numbering",
      "section_title": true,
      "ja": "4.7. シーケンス番号"
    },
    {
      "indent": 3,
      "text": "A PAUSE request message will need to have a sequence number to separate retransmissions from new requests. A retransmission keeps the sequence number unchanged, while it is incremented every time a new PAUSE request is transmitted that is not a retransmission of a previous request.",
      "ja": "PAUSE要求メッセージは、新しい要求からの再送信を分離するためのシーケンス番号を持っている必要があります。それは前の要求の再送信ではない新しいPAUSE要求が送信されるたびにインクリメントされながら再送信は、シーケンス番号がそのまま保持します。"
    },
    {
      "indent": 3,
      "text": "Since RESUME always takes precedence over PAUSE and is even allowed to avoid pausing a stream, there is a need to keep strict ordering of PAUSE and RESUME. Thus, RESUME needs to share sequence number space with PAUSE and implicitly reference which PAUSE it refers to. For the same reasons, the explicit PAUSED indication also needs to share sequence number space with PAUSE and RESUME.",
      "ja": "RESUMEは常にPAUSEよりも優先され、さらにはストリームを一時停止を避けるために許可されているので、PAUSEおよびRESUMEの厳密な順序付けを維持する必要があります。したがって、RESUMEはPAUSEとシーケンス番号空間を共有し、暗黙的にそれが参照するPAUSE参照する必要があります。同じ理由で、明示的なPAUSED表示もPAUSEおよびRESUMEとシーケンス番号空間を共有する必要があります。"
    },
    {
      "indent": 0,
      "text": "4.8. Relation to Other Solutions",
      "section_title": true,
      "ja": "4.8. 他のソリューションとの関係"
    },
    {
      "indent": 3,
      "text": "A performance comparison between SIP/SDP and RTCP signaling technologies was made and included in draft versions of this specification. Using SIP and SDP to carry pause and resume information means that they will need to traverse the entire signaling path to reach the signaling destination (either the remote endpoint or the entity controlling the RTP Mixer) across any signaling proxies that potentially also have to process the SDP content to determine if they are expected to act on it. The amount of bandwidth required for a signaling solution based on SIP/SDP is in the order of at least 10 times more than an RTCP-based solution. Especially for a UA sitting on mobile wireless access, this will risk introducing delays that are too long (Section 4.1) to provide a good user experience, and the bandwidth cost may also be considered infeasible compared to an RTCP-based solution. RTCP data sent through the media path, which is likely shorter (contains fewer intermediate nodes) than the signaling path, may have to traverse a few intermediate nodes anyway. The amount of processing and buffering required in intermediate nodes to forward those RTCP messages is, however, believed to be significantly less than for intermediate nodes in the signaling path. Based on those considerations, RTCP is chosen as the signaling protocol for the pause and resume functionality.",
      "ja": "SIP / SDPとRTCPシグナリング技術との性能比較を行うと、この仕様のドラフトバージョンに含まれていました。ポーズを運び、情報を再開するためにSIP及びSDPを使用すると、それらは潜在的に処理しなければならない任意のシグナリングプロキシ横切っシグナリング宛先（リモートエンドポイントまたはRTPミキサーを制御するエンティティのいずれか）に到達するために全体のシグナリング経路を横断する必要があることを意味します彼らはそれに基づいて行動することが期待されているかどうかを判断するためにSDPコンテンツ。 SIP / SDPに基づいて、シグナリング・ソリューションに必要な帯域幅の量は、RTCPベースのソリューションよりも少なくとも10倍程度です。特に、モバイル無線アクセスの上に座ってUAのために、これは優れたユーザーエクスペリエンスを提供するために、長すぎる遅延（4.1節）を導入し、帯域幅コストもRTCPベースのソリューションに比べて実行不可能と考えられ得るリスクます。シグナリングパスよりも（より少ない中間ノードを含む）の可能性が短いメディア経路を介して送信されたRTCPデータは、とにかく、いくつかの中間ノードを通過する必要があります。これらのRTCPメッセージを転送する中間ノードに必要な処理及びバッファリングの量は、しかしながら、シグナリング経路における中間ノードの場合よりも有意に低いと考えられています。これらの考慮事項に基づいて、RTCPは休止と再開機能のためのシグナリングプロトコルとして選択されます。"
    },
    {
      "indent": 0,
      "text": "5. Solution Overview",
      "section_title": true,
      "ja": "5.ソリューションの概要"
    },
    {
      "indent": 3,
      "text": "The proposed solution implements pause and resume functionality based on sending AVPF RTCP feedback messages from any RTP session participant that wants to pause or resume a stream targeted at the stream sender, as identified by the sender SSRC.",
      "ja": "提案された解決策は、送信者のSSRCによって識別されるように、ストリームの送信者を対象としたストリームを一時停止または再開したい任意のRTPセッションの参加者からAVPF RTCPフィードバックメッセージの送信に基づいて、一時停止と再開の機能を実装しています。"
    },
    {
      "indent": 3,
      "text": "This solution reuses CCM TMMBR and TMMBN [RFC5104] to the extent possible and defines a small set of new RTCP feedback messages where new semantics is needed.",
      "ja": "この溶液を可能な限りCCM TMMBRとTMMBN [RFC5104]を再利用し、新しい意味論が必要とされる新たなRTCPフィードバックメッセージの小さなセットを定義します。"
    },
    {
      "indent": 3,
      "text": "A single feedback message specification is used to implement the new messages. The message consists of a number of Feedback Control Information (FCI) blocks, where each block can be a PAUSE request, a RESUME request, a PAUSED indication, a REFUSED notification, or an extension to this specification. This structure allows a single feedback message to handle pause functionality on a number of streams.",
      "ja": "単一のフィードバックメッセージ仕様は、新しいメッセージを実装するために使用されます。メッセージは、各ブロックは、一時停止要求、再開要求、一時停止指示拒否通知、または本明細書に拡張することができるフィードバック制御情報（FCI）ブロックの数、から成ります。この構造は、ストリームの数に一時停止機能を処理するために単一のフィードバック・メッセージを可能にします。"
    },
    {
      "indent": 3,
      "text": "The PAUSED functionality is also defined in such a way that it can be used as a standalone by the RTP stream sender to indicate a local decision to pause, and it can inform any receiver of the fact that halting media delivery is deliberate and which RTP packet was the last transmitted.",
      "ja": "一時停止機能はまた、一時停止するローカル決定を示すために、RTPストリーム送信者がスタンドアローンとして使用することができ、それがメディアの配信を停止することは意図的であるという事実の受信を通知し、どのRTPパケットができるように定義されています送信された最後でした。"
    },
    {
      "indent": 3,
      "text": "Special considerations that apply when using TMMBR/TMMBN for pause and resume purposes are described in Section 5.6. This specification applies to both the new messages defined herein as well as their TMMBR/TMMBN counterparts, except when explicitly stated otherwise. An obvious exception is any reference to the message parameters that are only available in the messages defined here. For example, any reference to PAUSE in the text below is equally applicable to TMMBR 0, and any reference to PAUSED is equally applicable to TMMBN 0. Therefore, and for brevity, TMMBR/TMMBN will not be mentioned in the text, unless there is specific reason to do so.",
      "ja": "一時停止と再開の目的のためにTMMBR / TMMBNを使用する際に適用される特別な考慮事項は、セクション5.6で説明されています。この仕様は、特に明記する場合を除き、新たに本明細書中で定義されたメッセージだけでなく、彼らのTMMBR / TMMBNの対応の両方に適用されます。明らかな例外は、ここで定義されたメッセージでのみ利用可能なメッセージパラメータへの参照です。例えば、以下のテキストで一時停止する任意の参照は、TMMBR 0に等しく適用可能であり、そしてPAUSEDへの言及は、そこでTMMBN 0に等しく適用可能であり、そこでない限り簡潔にするために、TMMBR / TMMBNは、本文中に言及されませんそうする具体的な理由。"
    },
    {
      "indent": 3,
      "text": "This section is intended to be explanatory and therefore intentionally contains no mandatory statements. Such statements can instead be found in other parts of this specification.",
      "ja": "このセクションでは、説明を意図し、したがって、意図的に何の義務的な文が含まれていません。このような文ではなく、本明細書の他の部分で見つけることができます。"
    },
    {
      "indent": 0,
      "text": "5.1. Expressing Capability",
      "section_title": true,
      "ja": "5.1. 表現能力"
    },
    {
      "indent": 3,
      "text": "An endpoint can use an extension to CCM SDP signaling to declare capability to understand the messages defined in this specification. Capability to understand only a subset of messages is possible, to support partial implementation, which is specifically believed to be feasible for the 'RTP Mixer to Media Sender' use case (Section 3.2). In that use case, only the RTP Mixer has capability to request the media sender to pause or resume. Consequently, in that same use case, only the media sender has capability to pause and resume its sent streams based on requests from the RTP Mixer. Allowing for partial implementation of this specification is not believed to hamper interoperability, as long as the subsets are well defined and describe a consistent functionality, including a description of how a more capable implementation must perform fallback.",
      "ja": "エンドポイントは、この仕様で定義されたメッセージを理解する機能を宣言するために、シグナリングCCM SDPへの拡張を使用することができます。メッセージのサブセットのみを理解する能力は、具体的なユースケース（3.2節）「メディアの送信者へのRTPミキサー」の実現可能であると考えられる部分的な実装をサポートすることが可能です。そのユースケースでは、唯一のRTPミキサーは、一時停止または再開するメディア送信元を要求する能力を持っています。その結果、同じユースケースでは、唯一のメディア送信者はRTPミキサーからの要求に基づいて送信されるストリームを一時停止し、再開する機能を備えています。本明細書の部分的な実装を可能にするが、より多くの可能な実装は、フォールバックを実行しなければならない方法の説明を含む、サブセットが明確に定義されている限り、相互運用性を阻害し、一貫性のある機能を説明するために考えられません。"
    },
    {
      "indent": 3,
      "text": "For the case when TMMBR/TMMBN are used for pause and resume purposes, it is possible to explicitly express joint support for TMMBR and TMMBN, but not for TMMBN only.",
      "ja": "TMMBR / TMMBNが一時停止と再開の目的で使用される場合のために、明示的ではないTMMBNに対してのみ、TMMBRとTMMBNの共同サポートを表現することができます。"
    },
    {
      "indent": 0,
      "text": "5.2. PauseID",
      "section_title": true,
      "ja": "5.2.  PafseID"
    },
    {
      "indent": 3,
      "text": "All messages defined in this specification (Section 8) contain a PauseID, satisfying the design consideration on sequence numbering (Section 4.7). This PauseID is scoped by and thus a property of the targeted RTP stream (SSRC) and is not only a sequence number for individual messages. Instead, it numbers an entire \"pause and resume operation\" for the RTP stream, typically keeping PauseID constant for multiple, related messages. The PauseID value used during such operation is called the current PauseID. A new \"pause and resume operation\" is defined to start when the RTP stream sender resumes the RTP stream after it was being paused. The current PauseID is then incremented by one in modulo arithmetic. In the subsequent descriptions below, it is sometimes necessary to refer to PauseID values that were already used as the current PauseID, which is denoted as the past PauseID. It should be noted that since PauseID uses modulo arithmetic, a past PauseID may have a larger value than the current PauseID. Since PauseID uses modulo arithmetic, it is also useful to define what PauseID values are considered \"past\" to clearly separate it from what could be considered \"future\" PauseID values. Half of the entire PauseID value range is chosen to represent a past PauseID, while a quarter of the PauseID value range is chosen to represent future values. The remaining quarter of the PauseID value range is intentionally left undefined in that respect.",
      "ja": "この仕様書（第8節）で定義されたすべてのメッセージはシーケンス番号（4.7節）に設計上の考慮事項を満たす、PauseIDが含まれています。このPauseIDはでスコープので、目標とRTPストリーム（SSRC）の性質および個々のメッセージのシーケンス番号だけではないです。代わりに、それは通常、複数の数字、関連するメッセージPauseID一定に保ち、RTPストリームのために「操作を一時停止し、再開」全体を。このような動作中に使用されるPauseID値は、現在のPauseID呼ばれます。新しい「一時停止と再開の操作は、」それが一時停止された後にRTPストリームの送信者はRTPストリームを再開したときに起動するように定義されています。現在PauseIDは次いでモジュロ演算に1だけインクリメントされます。以下以降の説明では、既に過去PauseIDとして示される電流PauseIDとして用いたPauseID値を参照することが時には必要です。 PauseIDはモジュロ演算を使用しているため、過去PauseIDが現在PauseIDよりも大きな値を有していてもよいことに留意すべきです。 PauseIDはモジュロ演算を使用しているので、値が「過去」はっきりと「未来」PauseID値と考えることができるものからそれを分離するために考えられているPauseIDものを定義するのにも有用です。 PauseID値範囲の四半期は、将来の値を表すために選択されている間全体PauseID値範囲の半分は、過去PauseIDを表すために選択されます。 PauseID値範囲の残りの四分の一は、意図的にその点に未定義のままされています。"
    },
    {
      "indent": 0,
      "text": "5.3. Requesting to Pause",
      "section_title": true,
      "ja": "5.3. 一時停止を要求します"
    },
    {
      "indent": 3,
      "text": "An RTP stream receiver can choose to send a PAUSE request at any time, subject to AVPF timing rules.",
      "ja": "RTPストリームの受信機は、AVPFタイミング規則に従ういつでもPAUSE要求を、送信するように選択することができます。"
    },
    {
      "indent": 3,
      "text": "The PAUSE request contains the current PauseID (Section 5.2).",
      "ja": "PAUSE要求は、現在のPauseID（5.2節）が含まれています。"
    },
    {
      "indent": 3,
      "text": "When a non-paused RTP stream sender receives the PAUSE request, it continues to send the RTP stream while waiting for some time to allow other RTP stream receivers in the same RTP session that saw this PAUSE request to disapprove by sending a RESUME (Section 5.5) for the same stream and with the same current PauseID as in the PAUSE being disapproved. If such a disapproving RESUME arrives at the RTP stream sender during the hold-off period before the stream is paused, the pause is not performed. In point-to-point configurations, the hold-off period may be set to zero. Using a hold-off period of zero is also appropriate when using TMMBR 0 and is in line with the semantics for that message.",
      "ja": "非ポーズRTPストリームの送信者はPAUSE要求を受信するとRESUME（5.5節を送信することにより、不承認には、このPAUSE要求を見て、同じRTPセッションで他のRTPストリーム受信機を可能にするためにいくつかの時間を待っている間、それはRTPストリームを送信し続け）同じストリームおよび不承認さPAUSEと同じ電流PauseID有します。ストリームが一時停止される前に、このような非難のRESUMEは、ホールドオフ期間中にRTPストリームの送信者に到達した場合は、一時停止は行われません。ポイントツーポイント構成では、ホールドオフ期間がゼロに設定されてもよいです。ゼロのホールドオフ期間を使用することTMMBR 0を使用する場合にも適切であり、そのメッセージの意味論に沿ったものです。"
    },
    {
      "indent": 3,
      "text": "If the RTP stream sender receives further PAUSE requests with the current PauseID while waiting as described above, those additional requests are ignored.",
      "ja": "上記のように待っている間にRTPストリームの送信者は、現在のPauseIDでさらにPAUSE要求を受信した場合、これらの追加の要求は無視されます。"
    },
    {
      "indent": 3,
      "text": "If the PAUSE request is lost before it reaches the RTP stream sender, it will be discovered by the RTP stream receiver because it continues to receive the RTP stream. It will also not see any PAUSED indication (Section 5.4) for the stream. The same condition can be caused by the RTP stream sender having received a disapproving RESUME from stream receiver A for a PAUSE request sent by stream sender B, except that the PAUSE sender (B) did not receive the RESUME (from A) and may instead think that the PAUSE was lost. In both cases, a PAUSE request can be retransmitted using the same current PauseID. If using TMMBR 0, the request MAY be retransmitted when the requester fails to receive a TMMBN 0 confirmation.",
      "ja": "それはRTPストリームの送信者に到達する前に、PAUSE要求が失われた場合、それはRTPストリームを受信し続けているので、それはRTPストリームの受信機によって検出されます。また、ストリームの任意のPAUSED表示（5.4節）には表示されません。 PAUSE送信者（B）は（Aから）RESUMEを受けず、その代わりかもしれなかったこと以外は同じ条件で、ストリーム送信者Bによって送信されたPAUSE要求のストリームの受信機Aから不承認のRESUMEを受信したRTPストリームの送信者によって引き起こされる可能性がPAUSEが失われたと思います。どちらの場合も、PAUSE要求は同じ電流PauseIDを使用して再送信することができます。 TMMBR 0を使用している場合、要求は、要求側がTMMBN 0確認を受信するために失敗したときに再送信されても​​よいです。"
    },
    {
      "indent": 3,
      "text": "If the pending stream pause is aborted due to a disapproving RESUME, the pause and resume operation for that PauseID is concluded, the current PauseID is updated, and any new PAUSE must therefore use the new current PauseID to be effective.",
      "ja": "保留中のストリームの一時停止が原因非難を再開するために中断された場合、そのPauseIDのための一時停止と再開の操作は、現在のPauseIDが更新され、締結されているので、新しい現在PauseIDを使用する必要があります任意の新しいPAUSEが有効であることが。"
    },
    {
      "indent": 3,
      "text": "An RTP stream sender receiving a PAUSE not using the current PauseID informs the RTP stream receiver sending the ineffective PAUSE of this condition by sending a REFUSED notification that contains the current PauseID value.",
      "ja": "現在PauseIDを使用していないPAUSEを受信したRTPストリームの送信者が現在PauseID値を含むREFUSED通知を送信することにより、この状態の無効PAUSEを送信するRTPストリームの受信を通知します。"
    },
    {
      "indent": 3,
      "text": "A situation where an ineffective PauseID is chosen can appear when a new RTP stream receiver joins a session and wants to PAUSE a stream but does not yet know the current PauseID to use. The REFUSED notification will then provide sufficient information to create a valid PAUSE. The required extra signaling round trip is not considered harmful, since it is assumed that pausing a stream is not time critical (Section 4.1).",
      "ja": "新しいRTPストリームの受信機がセッションに参加し、ストリームを一時停止したいが、まだ現在のPauseIDが使用することを知らない場合、無効PauseIDが選択されている状況が表示されます。 REFUSED通知は、有効なPAUSEを作成するための十分な情報を提供します。ストリームを一時停止する時間（4.1節）重要ではないことを想定しているために必要な追加のシグナリングの往復は、有害とみなされていません。"
    },
    {
      "indent": 3,
      "text": "There may be local considerations making it impossible or infeasible to pause the stream, and the RTP stream sender can then respond with a REFUSED. In this case, if the used current PauseID would otherwise have been effective, REFUSED contains the same current PauseID as in the PAUSE request. Note that when using TMMBR 0 as PAUSE, that request cannot be refused (TMMBN > 0) due to the existing restriction in Section 4.2.2.2 of [RFC5104] that TMMBN shall contain the current bounding set, and the fact that a TMMBR 0 will always be the most restrictive point in any bounding set, regardless of the bounding set overhead value.",
      "ja": "そこには不可能または実行不可能なストリームを一時停止することローカルの配慮であってもよく、RTPストリームの送信者は、その後、REFUSEDで応答することができます。この場合、現在使用されているPauseIDがそうでなければ有効であったならば、PAUSE要求と同じ現在のPauseIDが含まれて拒否しました。 TMMBR 0れることによりTMMBN現在のバウンディングセットを含まなければならないことは[RFC5104]のセクション4.2.2.2に既存の制限（0> TMMBN）PAUSEとしてTMMBR 0を使用する場合、その要求を拒否することができないことに注意してください、そして事実関係なく、常にバウンディングセットオーバーヘッド値の、いずれかのバウンディングセットの中で最も制限のポイントです。"
    },
    {
      "indent": 3,
      "text": "If the RTP stream sender receives several identical PAUSE requests for an RTP stream that was already responded to at least once with REFUSED and the condition causing REFUSED remains, those additional REFUSED notifications should be sent with regular RTCP timing. A single REFUSED can respond to several identical PAUSE requests.",
      "ja": "RTPストリームの送信者は、すでに少なくとも一度は拒否し、条件が拒否遺骨の原因とに反応したRTPストリームのための複数の同一PAUSE要求を受信した場合、これらの追加REFUSEDの通知は、通常のRTCPタイミングで送信する必要があります。シングルには、いくつかの同一のPAUSE要求に応答することができます拒否しました。"
    },
    {
      "indent": 0,
      "text": "5.4. Media Sender Pausing",
      "section_title": true,
      "ja": "5.4. メディアブロード一時停止"
    },
    {
      "indent": 3,
      "text": "An RTP stream sender can choose to pause the stream at any time. This can be either a result of receiving a PAUSE or based on some local sender consideration. When it does, it sends a PAUSED indication, containing the current PauseID. Note that the current PauseID in an unsolicited PAUSED (without having received a PAUSE) is incremented compared to a previously sent PAUSED. It also sends the PAUSED indication in the next two regular RTCP reports, given that the pause condition is then still effective.",
      "ja": "RTPストリームの送信者は、いつでもストリームを一時停止することを選択できます。これは、いくつかのローカル送信者の考察に基づいてPAUSEかを受信した結果のいずれかになります。それがない場合は、現在のPauseIDを含む、PAUSED表示を送信します。 （PAUSEを受信せず）迷惑PAUSEDにおける電流PauseIDが以前に送信されPAUSEDに比べてインクリメントされることに留意されたいです。また、休止状態がまだ続い効果的であることを考えると、次の2つの正規のRTCPレポートで一時停止の指示を送信します。"
    },
    {
      "indent": 3,
      "text": "There is no reply to a PAUSED indication; it is simply an explicit indication of the fact that an RTP stream is paused. This can be helpful for the RTP stream receiver, for example, to quickly understand that transmission is deliberately and temporarily suspended and no specific corrective action is needed.",
      "ja": "PAUSED表示に返事はありません。それは単にRTPストリームが一時停止されているという事実の明示です。 RTPストリームの受信機は、例えば、すぐに送信が意図的かつ一時的に停止されていることを理解し、具体的な是正措置を必要としないために役立ちます。"
    },
    {
      "indent": 3,
      "text": "The RTP stream sender may want to apply some local consideration to exactly when the RTP stream is paused, for example, completing some media unit or a forward error correction block, before pausing the stream.",
      "ja": "RTPストリームの送信者は、RTPストリームが一時停止されたときにストリームを一時停止する前に、いくつかのメディアユニットや前方誤り訂正ブロックを完了、例えば、正確にいくつかの地元の配慮を適用することもできます。"
    },
    {
      "indent": 3,
      "text": "The PAUSED indication also contains information about the RTP extended highest sequence number when the pause became effective. This provides RTP stream receivers with firsthand information that allows them to know whether they lost any packets just before the stream paused or when the stream is resumed again. This allows RTP stream receivers to quickly and safely take into account that the stream is paused in, for example, retransmission or congestion control algorithms.",
      "ja": "PAUSEDの表示も一時停止が有効になったとき、RTPの情報は最高のシーケンス番号を拡張含まれています。これは、彼らがストリームが一時停止またはストリームが再び再開されたときに直前に任意のパケットを失ったかどうかを知ることができますじかに情報をRTPストリーム受信機を提供します。これは、RTPストリームの受信機は、迅速かつ安全にストリームは、例えば、再送信または輻輳制御アルゴリズムのために、中に一時停止していることを考慮することができます。"
    },
    {
      "indent": 3,
      "text": "If the RTP stream sender receives PAUSE requests with the current PauseID while the stream is already paused, those requests are ignored.",
      "ja": "RTPストリームの送信者はストリームがすでに一時停止している間、現在のPauseIDとの要求を一時停止する受信した場合、これらの要求は無視されます。"
    },
    {
      "indent": 3,
      "text": "As long as the stream is being paused, the PAUSED indication MAY be sent together with any regular RTCP Sender Report (SR) or Receiver Report (RR). Including PAUSED in this way allows RTP stream receivers to join while the stream is paused and to quickly know that there is a paused stream, what the last sent extended RTP sequence number is, and what the current PauseID is, which enables them to construct valid PAUSE and RESUME requests at a later stage.",
      "ja": "限り、ストリームが一時停止されているように、一時停止指示は、任意の規則的なRTCP送信者レポート（SR）またはレシーバレポート（RR）と一緒に送信されるかもしれません。この方法で一時停止を含むことRTPストリーム受信機はストリームを一時停止している間に参加するとすぐに一時停止ストリーム、最後の拡張送られたRTPシーケンス番号が何であるか、そしてそれらを可能にするもの、現在PauseIDがあることは、有効な構築する存在であることを知ることができます後の段階で一時停止と再開を要求。"
    },
    {
      "indent": 3,
      "text": "When the RTP stream sender learns that a new endpoint has joined the RTP session, for example, by a new SSRC and a CNAME that was not previously seen in the RTP session, it should send PAUSED indications for all its paused streams at its earliest opportunity. In addition, it should continue to include PAUSED indications in at least two regular RTCP reports.",
      "ja": "RTPストリームの送信者が新しいエンドポイントは、RTPセッションに参加したことを学習すると、例えば、以前にRTPセッションでは見られなかった新しいSSRC及びCNAMEで、それはその早い機会に、すべての一時停止されたストリーム、一時停止指示を送信する必要があります。また、それは、少なくとも2つの正規のRTCPレポートで一時停止の表示が含まれるように継続すべきです。"
    },
    {
      "indent": 0,
      "text": "5.5. Requesting to Resume",
      "section_title": true,
      "ja": "5.5. 再開を要求します"
    },
    {
      "indent": 3,
      "text": "An RTP stream receiver can request the RTP stream sender to resume a stream with a RESUME request at any time, subject to AVPF timing rules. The RTP stream receiver must include the current PauseID in the RESUME request for it to be effective.",
      "ja": "RTPストリームの受信機は、AVPFタイミング規則に従ういつでも再開要求でストリームを再開するRTPストリームを送信者に要求することができます。それが有効であるためにRTPストリームの受信機は、再開要求で現在PauseIDを含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "A pausing RTP stream sender that receives a RESUME including the current PauseID resumes the stream at the earliest opportunity. Receiving RESUME requests for a stream that is not paused does not require any action and can be ignored.",
      "ja": "現在PauseID含むRESUMEを受けて一時停止RTPストリームの送信者は、早い機会にストリームを再開します。一時停止されていないストリームのためのRESUME要求を受信すると、任意のアクションを必要とせず、無視することができます。"
    },
    {
      "indent": 3,
      "text": "There may be local considerations at the RTP stream sender, for example, that the media device is not ready, making it temporarily impossible to resume the stream at that point in time, and the RTP stream sender can then respond with a REFUSED containing the current PauseID. When receiving such REFUSED with a current PauseID identical to the one in the sent RESUME, RTP stream receivers should avoid sending further RESUME requests for some reasonable amount of time to allow the condition to clear. An RTP stream sender having sent a REFUSED SHOULD resume the stream through local considerations (see below) when the condition that caused the REFUSED is no longer true.",
      "ja": "そこその時点でストリームを再開することが一時的にできなくなって、メディアデバイスの準備ができていないこと、例えば、RTPストリームの送信元で地元の検討事項であってもよく、RTPストリームの送信者は、REFUSED電流を含むで応答することができますPauseID。送信されRESUMEのものと同一の電流PauseIDでREFUSEDなどを受信すると、RTPストリームの受信機は、条件がクリアできるようにするための時間のいくつかの合理的な量のために、さらにRESUME要求を送信することは避けてください。 REFUSEDの原因となった条件がもはや真であるときREFUSED送信したRTPストリームの送信者は、（下記参照）は、ローカルの配慮を通じてストリームを再開してはなりません。"
    },
    {
      "indent": 3,
      "text": "If the RTP stream sender receives several identical RESUME requests for an RTP stream that was already at least once responded to with REFUSED and the condition causing REFUSED remains, those additional REFUSED notifications should be sent with regular RTCP timing. A single REFUSED can respond to several identical RESUME requests.",
      "ja": "RTPストリームの送信者は、すでに少なくとも一度REFUSEDで応答し、REFUSED遺骨の原因となった状態れたRTPストリームのためのいくつかの同一のRESUME要求を受信した場合、これらの追加REFUSEDの通知は、通常のRTCPタイミングで送信する必要があります。シングルには、いくつかの同一のRESUME要求に応答することができます拒否しました。"
    },
    {
      "indent": 3,
      "text": "A pausing RTP stream sender can apply local considerations and can resume a paused RTP stream at any time. If TMMBR 0 was used to pause the RTP stream, resumption is prevented by protocol, even if the RTP sender would like to resume due to local considerations. If TMMBR/ TMMBN signaling is used, the RTP stream is paused due to local considerations (Section 5.4), and the RTP stream sender thus owns the TMMBN bounding set, the RTP stream can be resumed due to local considerations.",
      "ja": "一時停止RTPストリームの送信者は、地元の考慮事項を適用することができ、いつでも一時停止RTPストリームを再開することができます。 TMMBR 0は、RTPストリームを一時停止するために使用された場合はRTPの送信者は地元の配慮のために再開したい場合でも、再開は、プロトコルによって阻止されます。 TMMBR / TMMBNシグナリングが使用される場合、RTPストリームは、局所的な考慮事項（5.4）に一時停止し、RTPストリームの送信者は、このようTMMBN境界セットを所有している、RTPストリームは、局所的な考慮事項に再開することができます。"
    },
    {
      "indent": 3,
      "text": "When resuming a paused stream, especially for media that makes use of temporal redundancy between samples such as video, it may not be appropriate to use such temporal dependency in the encoding between samples taken before the pause and at the time instant the stream is resumed. Should such temporal dependency between media samples before and after the media was paused be used by the RTP stream sender, it requires the RTP stream receiver to have saved the samples from before the pause for successful continued decoding when resuming. The use of this temporal dependency of media samples from before the pause is left up to the RTP stream sender. If temporal dependency on samples from before the pause is not used when the RTP stream is resumed, the first encoded sample after the pause will not contain any temporal dependency on samples before the pause (for video it may be a so-called intra picture). If temporal dependency on samples from before the pause is used by the RTP stream sender when resuming, and if the RTP stream receiver did not save any sample from before the pause, the RTP stream receiver can use a FIR request [RFC5104] to explicitly ask for a sample without temporal dependency (for video a so-called intra picture), even at the same time as sending the RESUME.",
      "ja": "ビデオなどのサンプル間の時間的冗長性を利用し、特にメディアの一時停止ストリームを再開するとき、一時停止前と流れが再開される時点で採取されたサンプル間の符号化にかかる時間的な依存関係を使用することが適切ではないかもしれません。前培地試料との間のこのような時間的依存性はすべきであり、メディアがRTPストリームの送信者によって使用される一時停止された後、それが再開するとき、RTPストリームの受信に成功した継続的な復号化のために一時停止する前からのサンプルを保存したする必要があります。一時停止前からメディアサンプルのこの一時的な依存関係の使用は、RTPストリームの送信者に任されています。 RTPストリームが再開されたときに、一時停止前からのサンプルに時間的依存性を使用しない場合は、一時停止後に第1の符号化されたサンプルは、休止前のサンプル上の任意の時間依存性を含まない（ビデオのためには、いわゆるイントラピクチャであってもよいです） 。一時停止前からのサンプルの時間的依存性がRTPストリームの送信者によって使用されている場合再開するとき、およびRTPストリームの受信機が一時停止する前から任意のサンプルを保存しなかった場合は、RTPストリームの受信機は、明示的に依頼するFIR要求[RFC5104]を使用することができます時間依存せずに試料のため（ビデオのイントラピクチャと呼ばれる）も履歴書を送信すると同時に。"
    },
    {
      "indent": 0,
      "text": "5.6. TMMBR/TMMBN Considerations",
      "section_title": true,
      "ja": "5.6.  TMMBR / TMMBNの考慮事項"
    },
    {
      "indent": 3,
      "text": "As stated above, TMMBR/TMMBN may be used to provide pause and resume functionality for the point-to-point case. If the topology is not point to point, TMMBR/TMMBN cannot safely be used for pause or resume. This use is expected to be mainly for interworking with implementations that don't support the messages defined in this specification (Section 8) but make use of TMMBR/TMMBN to achieve a similar effect.",
      "ja": "上述したように、TMMBR / TMMBNポーズを提供し、ポイントツーポイントのケースのための機能を再開するために使用されてもよいです。トポロジーがポイントを指していない場合は、TMMBR / TMMBNは安全に一時停止または再開するには使用できません。この使用は、本明細書（第8節）で定義されたメッセージをサポートしていますが、同様の効果を達成するためにTMMBR / TMMBNを使用しない実装との相互動作のために主になることが期待されます。"
    },
    {
      "indent": 3,
      "text": "This is a brief summary of what functionality is provided when using TMMBR/TMMBN:",
      "ja": "これはTMMBR / TMMBNを使用する際に提供されるものの機能の概要です。"
    },
    {
      "indent": 3,
      "text": "TMMBR 0: Corresponds to PAUSE, without the requirement for any hold-off period to wait for RESUME before pausing the RTP stream.",
      "ja": "TMMBR 0：RTPストリームを一時停止する前にRESUMEを待つ任意のホールドオフ期間を必要とせずに、一時停止するには対応しています。"
    },
    {
      "indent": 3,
      "text": "TMMBR > 0: Corresponds to RESUME when the RTP stream was previously paused with TMMBR 0. Since there is only a single RTP stream receiver, there is no need for the RTP stream sender to delay resuming the stream until after sending TMMBN > 0 or to apply the hold-off period specified in [RFC5104] before increasing the bitrate from zero. The bitrate value used when resuming after pausing with TMMBR 0 is either according to known limitations or based on starting a stream with the configured maximum for the stream or session, for example, given by \"b=\" line in SDP.",
      "ja": "TMMBR> 0：単一のRTPストリームの受信機があるのでRTPストリームが以前にTMMBR 0で一時停止された場合、RTPストリームの送信者がまでTMMBN> 0を送信した後、またはにストリームを再開遅延させる必要がない再開するに対応ゼロからビットレートを増加させる前に、[RFC5104]で指定されたホールドオフ時間を適用します。既知の制限に係るまたはストリームまたはセッションのために構成された最大値を有するストリームを開始するに基づいているいずれかのTMMBR 0と一時停止した後に再開するときに使用されるビットレート値は、例えば、SDPの「B =」行によって与えられます。"
    },
    {
      "indent": 3,
      "text": "TMMBN 0: Corresponds to PAUSED when the RTP stream was paused with TMMBR 0 but may, just as PAUSED, also be used unsolicited. An unsolicited RTP stream pause based on local sender considerations uses the RTP stream's own SSRC as the TMMBR restriction owner in the TMMBN message bounding set. It also corresponds to a REFUSED notification when a stream is requested to be resumed with TMMBR > 0, thus resulting in the stream sender becoming the owner of the bounding set in the TMMBN message.",
      "ja": "TMMBN 0：RTPストリームがTMMBR 0で一時停止されましたが、ちょうどPAUSEDとして、また迷惑を使用することができるときPAUSEDに対応します。ローカル送信者の考慮事項に基づいて、迷惑RTPストリームの一時停止がTMMBNメッセージバウンディングセットでTMMBR制限所有者としてRTPストリーム自身のSSRCを使用しています。また、ストリームがこのようTMMBNメッセージに設定された境界の所有者になってストリームの送信者をもたらす、TMMBR> 0で再開するように要求されるREFUSED通知に相当します。"
    },
    {
      "indent": 3,
      "text": "TMMBN > 0: Cannot be used as a REFUSED notification when a stream is requested to be paused with TMMBR 0, for reasons stated in Section 5.3.",
      "ja": "TMMBN> 0：ストリームは5.3節で述べた理由から、TMMBR 0で一時停止するように要求されたときにREFUSED通知として使用することはできません。"
    },
    {
      "indent": 0,
      "text": "6. Participant States",
      "section_title": true,
      "ja": "6.参加国"
    },
    {
      "indent": 3,
      "text": "This document introduces three new states for a stream in an RTP sender, according to the figure and subsections below. Any references to PAUSE, PAUSED, RESUME, and REFUSED in this section SHALL be taken to apply to the extent possible also when TMMBR/TMMBN are used (Section 5.6) for this functionality.",
      "ja": "この文書では、次の図およびサブセクションによると、RTP送信者にストリームするための3つの新しい状態を導入しています。任意の一時停止する参照一時停止、再開、およびこのセクションで拒否しTMMBR / TMMBNも可能な範囲に適用する講じなければならないが、この機能のために（セクション5.6）が使用されます。"
    },
    {
      "indent": 4,
      "text": "     +------------------------------------------------------+\n     |                     Received RESUME                  |\n     v                                                      |\n+---------+ Received PAUSE  +---------+ Hold-off period +--------+\n| Playing |---------------->| Pausing |---------------->| Paused |\n|         |<----------------|         |                 |        |\n+---------+ Received RESUME +---------+                 +--------+\n  ^     |                        | PAUSE decision           |\n  |     |                        v                          |\n  |     |  PAUSE decision   +---------+    PAUSE decision   |\n  |     +------------------>| Local   |<--------------------+\n  +-------------------------| Paused  |\n          RESUME decision   +---------+",
      "raw": true
    },
    {
      "indent": 19,
      "text": "Figure 4: RTP Pause States in Sender",
      "ja": "図4：RTPは、送信者に国を一時停止"
    },
    {
      "indent": 0,
      "text": "6.1. Playing State",
      "section_title": true,
      "ja": "6.1. 国家を再生します"
    },
    {
      "indent": 3,
      "text": "This state is not new but is the normal media sending state from [RFC3550]. When entering the state, the current PauseID MUST be incremented by one in modulo arithmetic. The RTP sequence number for the first packet sent after a pause SHALL be incremented by one compared to the highest RTP sequence number sent before the pause. The first RTP timestamp for the first packet sent after a pause SHOULD be set according to capture times at the source, meaning the RTP timestamp difference compared to before the pause reflects the time the RTP stream was paused.",
      "ja": "この状態は新しいものではありませんが、[RFC3550]から状態を送信して、通常のメディアです。状態に入るとき、現在のPauseIDはモジュロ演算でインクリメントされなければなりません。休止後に送信される最初のパケットのRTPシーケンス番号は、一時停止前に送信され、最高のRTPシーケンス番号と比較して、1つずつインクリメントさSHALL。休止後に送信される最初のパケットの最初のRTPタイムスタンプはポーズRTPストリームが一時停止された時間を反映する前に比べてRTPタイムスタンプの差を意味し、ソースで捕捉時間に応じて設定されるべきです。"
    },
    {
      "indent": 0,
      "text": "6.2. Pausing State",
      "section_title": true,
      "ja": "6.2. 一時停止状態"
    },
    {
      "indent": 3,
      "text": "In this state, the RTP stream sender has received at least one PAUSE message for the stream in question. The RTP stream sender SHALL wait during a hold-off period for the possible reception of RESUME messages for the RTP stream being paused before actually pausing RTP stream transmission. The hold-off period to wait SHALL be long enough to allow another RTP stream receiver to respond to the PAUSE with a RESUME, if it determines that it would not like to see the stream paused. This hold-off period is determined by the formula:",
      "ja": "この状態では、RTPストリームの送信者は、問題のストリームのための少なくとも一つのPAUSEメッセージを受信しました。 RTPストリームのRESUMEメッセージの可能な受信のためのホールドオフ期間中に待つものとRTPストリームの送信者は、実際にRTPストリームの送信を一時停止する前に一時停止されています。それは、ストリームが一時停止見て好きではないだろうと判断した場合に待機するホールドオフ期間は、別のRTPストリームの受信機は、RESUMEとPAUSEへの対応を可能にするのに十分な長されなければなりません。このホールド・オフ期間は、以下の式によって決定されます。"
    },
    {
      "indent": 6,
      "text": "2 * RTT + T_dither_max,",
      "ja": "2 * RTT + T_dither_max、"
    },
    {
      "indent": 3,
      "text": "where RTT is the longest round trip known to the RTP stream sender and T_dither_max is defined in Section 3.4 of [RFC4585]. The hold-off period MAY be set to 0 by some signaling (Section 9) means when it can be determined that there is only a single receiver, for example, in point to point or some unicast situations.",
      "ja": "RTTは、RTPストリームの送信者に知られている最長の往復で、T_dither_maxは、[RFC4585]の3.4節で定義されます。ホールドオフ期間は、いくつかのシグナル（セクション9）で0に設定されるかもしれそれだけ、例えば、ポイントにポイントする単一の受信機またはいくつかのユニキャスト状況があると判断できる場合を意味します。"
    },
    {
      "indent": 3,
      "text": "If the RTP stream sender has set the hold-off period to 0 and receives information that it was an incorrect decision and that there are in fact several receivers of the stream, it MUST change the hold-off period to be based on the above formula instead.",
      "ja": "RTPストリームの送信者が0にホールドオフ時間を設定し、それが間違った決断だったとストリームのいくつかの受信機が実際に存在しているという情報を受信して​​いる場合、それは上記の式に基づいているとホールドオフ期間を変更する必要があります代わりに。"
    },
    {
      "indent": 3,
      "text": "An RTP stream sender SHOULD use the following criteria to determine if there is only a single receiver, unless it has explicit and more reliable information:",
      "ja": "それが明示的に、より信頼性の高い情報を持っていない限り、RTPストリームの送信者は、唯一の単一の受信機があるかどうかを決定するために以下の基準を使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "o Observing only a single CNAME across all received SSRCs (CNAMEs for received CSRCs are insignificant), or",
      "ja": "すべてにわたって単一のCNAMEを観察O（受信CSRCsためのCNAMEは無意味である）SSRCsを受け、又は"
    },
    {
      "indent": 3,
      "text": "o If RTCP reporting groups [MULTI-STREAM-OPT] is used, observing only a single, endpoint external RTCP reporting group.",
      "ja": "O RTCP報告基[MULTI-STREAM-OPT]は単一のエンドポイントの外部RTCPレポート群を観察し、使用されている場合。"
    },
    {
      "indent": 0,
      "text": "6.3. Paused State",
      "section_title": true,
      "ja": "6.3. 一時停止状態"
    },
    {
      "indent": 3,
      "text": "An RTP stream is in paused state when the sender pauses its transmission after receiving at least one PAUSE message and the hold-off period has passed without receiving any RESUME message for that stream. Pausing transmission SHOULD only be done when reaching an appropriate place to pause in the stream, like a media boundary that avoids a media receiver to trigger repair or concealment actions.",
      "ja": "RTPストリームは、送信者が少なくとも一つPAUSEメッセージを受信した後にその送信を一時停止、ホールドオフ期間は、そのストリームのための任意の再開メッセージを受信することなく通過したときに一時停止状態になっています。修理または隠蔽アクションをトリガするために、メディアレシーバを回避メディア境界のように、ストリームに一時停止するための適切な場所に到達したときに一時停止送信のみ行われるべきです。"
    },
    {
      "indent": 3,
      "text": "When entering the state, the RTP stream sender SHALL send a PAUSED indication to all known RTP stream receivers, and SHALL also repeat PAUSED in the next two regular RTCP reports, as long as it is then still in paused state.",
      "ja": "状態に入ると、RTPストリームの送信者は、すべての既知のRTPストリームの受信機にPAUSED表示を送信しなければならない、とも限り、それは一時停止状態のまま、その後あるとして、次の2つの正規のRTCPレポートで一時停止を繰り返しものとします。"
    },
    {
      "indent": 3,
      "text": "Pausing an RTP stream MUST NOT affect the sending of RTP keepalive [RFC6263][RFC5245] applicable to that RTP stream.",
      "ja": "RTPストリームを一時停止すると、そのRTPストリームに適用されるRTPキープアライブ[RFC6263] [RFC5245]の送信に影響してはいけません。"
    },
    {
      "indent": 3,
      "text": "The following subsections discuss some potential issues when an RTP sender goes into paused state. These conditions are also valid if an RTP Translator is used in the communication. When an RTP Mixer implementing this specification is involved between the participants (which forwards the stream by marking the RTP data with its own SSRC), it SHALL be a responsibility of the Mixer to control sending PAUSE and RESUME requests to the sender. The below conditions also apply to the sender and receiver parts of the RTP Mixer, respectively.",
      "ja": "RTPの送信者が一時停止状態になった場合は、以下のサブセクションでは、いくつかの潜在的な問題を議論します。 RTP翻訳者が通信に使用されている場合は、これらの条件にも有効です。この仕様を実装するRTPミキサーは（自身のSSRCとRTPデータをマーキングすることにより、ストリームを転送します）参加者の間で関与している場合は、送信者にPAUSEとRESUME要求を送信制御するミキサーの責任です。以下の条件は、それぞれ、RTPミキサの送信側と受信側の部分に適用されます。"
    },
    {
      "indent": 0,
      "text": "6.3.1. RTCP BYE Message",
      "section_title": true,
      "ja": "6.3.1.  RTCP BYEメッセージ"
    },
    {
      "indent": 3,
      "text": "When a participant leaves the RTP session, it sends an RTCP BYE message. In addition to the semantics described in Sections 6.3.4 and 6.3.7 of RTP [RFC3550], the following two conditions MUST also be considered when an RTP participant sends an RTCP BYE message:",
      "ja": "参加者はRTPセッションを離れたとき、それはRTCP BYEメッセージを送信します。 RTP参加者がRTCP BYEメッセージを送信するとき、セクション6.3.4及びRTPの6.3.7に記載の意味論[RFC3550]に加えて、以下の2つの条件をも考慮しなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If a paused sender sends an RTCP BYE message, receivers observing this SHALL NOT send further PAUSE or RESUME requests to it.",
      "ja": "一時停止して、送信者がRTCP BYEメッセージを送信する場合、O、これを観測する受信機はそれにさらにPAUSEまたはRESUME要求を送信してはなりません。"
    },
    {
      "indent": 3,
      "text": "o Since a sender pauses its transmission on receiving the PAUSE requests from any receiver in a session, the sender MUST keep record of which receiver caused the RTP stream to pause. If that receiver sends an RTCP BYE message observed by the sender, the sender SHALL resume the RTP stream. No receivers that were in the RTP session when the stream was paused objected that the stream was paused, but if there were so far undetected receivers added to the session during pause, those may not have learned about the existence of the paused stream because either there was no PAUSED sent for the paused RTP stream or those receivers did not support PAUSED. Resuming the stream when the pausing party leaves the RTP session allows those potentially undetected receivers to learn that the stream exists.",
      "ja": "送信者は、セッション内の任意の受信機からのポーズ要求を受信すると、その送信を一時停止するので、O、送信者は、RTPストリームが一時停止させ、受信機の記録を保持しなければなりません。その受信機は、送信者によって観察されたRTCP BYEメッセージを送信すると、送信者は、RTPストリームを再開するものとします。ストリームが一時停止されたとき、RTPセッションにあったいかなる受信機は、ストリームが一時停止されたことを反対していないが、これまでに検出されない受信機が一時停止中のセッションに追加があった場合、それらが理由のいずれかが一時停止されたストリームの存在を知ったていない可能性があります何PAUSEDは一時停止RTPストリームのために送信されなかったか、それらの受信機が一時停止をサポートしていませんでした。一時停止当事者がRTPセッションを離れると、ストリームを再開すると、それらの潜在的に検出されない受信機は、ストリームが存在することを学ぶことができます。"
    },
    {
      "indent": 0,
      "text": "6.3.2. SSRC Time-Out",
      "section_title": true,
      "ja": "6.3.2.  SSRCタイムアウト"
    },
    {
      "indent": 3,
      "text": "Section 6.3.5 in RTP [RFC3550] describes the SSRC time-out of an RTP participant. Every RTP participant maintains a sender and receiver list in a session. If a participant does not get any RTP or RTCP packets from some other participant for the last five RTCP reporting intervals, it removes that participant from the receiver list. Any streams that were paused by that removed participant SSRC SHALL be resumed.",
      "ja": "RTP [RFC3550]セクション6.3.5には、RTP参加者のSSRCタイムアウトを記述しています。すべてのRTPの参加者は、セッション中に、送信者と受信者のリストを保持します。参加者は、最後の5つのRTCP報告間隔のためのいくつかの他の参加者からの任意のRTPまたはRTCPパケットを取得していない場合は、受信機のリストからその参加者を削除します。その削除参加者SSRCによって一時停止されたすべてのストリームが再開されるものとします。"
    },
    {
      "indent": 0,
      "text": "6.4. Local Paused State",
      "section_title": true,
      "ja": "6.4. ローカル一時停止状態"
    },
    {
      "indent": 3,
      "text": "This state can be entered at any time, based on local decision from the RTP stream sender. Pausing transmission SHOULD only be done when reaching an appropriate place to pause in the stream, like a media boundary that avoids a media receiver to trigger repair or concealment actions.",
      "ja": "この状態は、RTPストリームの送信者からローカルの決定に基づいて、いつでも入力できます。修理または隠蔽アクションをトリガするために、メディアレシーバを回避メディア境界のように、ストリームに一時停止するための適切な場所に到達したときに一時停止送信のみ行われるべきです。"
    },
    {
      "indent": 3,
      "text": "As with paused state (Section 6.3), the RTP stream sender SHALL send a PAUSED indication to all known RTP stream receivers, when entering the state, unless the stream was already in paused state (Section 6.3). Such PAUSED indication SHALL be repeated a sufficient",
      "ja": "状態に入るとき、ストリームが一時停止状態（セクション6.3）に既にあった場合を除き、一時停止状態（セクション6.3）のように、RTPストリームの送信者は、すべての既知のRTPストリームの受信機に一時停止指示を送信しなければなりません。そのようなPAUSED指示が十分繰り返さなければなりません"
    },
    {
      "indent": 3,
      "text": "number of times to reach a high probability that the message is correctly delivered, stopping such repetition whenever leaving the state.",
      "ja": "メッセージが正しく状態を残したときに、このような反復を停止、配信されていることを高い確率に到達する回数。"
    },
    {
      "indent": 3,
      "text": "When using TMMBN 0 as a PAUSED indication and when already in paused state, the actions when entering local paused state depends on the bounding set overhead value in the received TMMBR 0 that caused the paused state and the bounding set overhead value used in (the RTP stream sender's own) TMMBN 0:",
      "ja": "PAUSED指標としてTMMBN 0を使用したときに既に一時停止状態では、ローカル一時停止状態に入ること境界に依存するアクションが一時停止状態との境界は、（RTPで使用されるオーバーヘッド値を設定する原因となった受信TMMBR 0においてオーバーヘッド値を設定しますストリームの送信者自身）TMMBN 0："
    },
    {
      "indent": 3,
      "text": "TMMBN 0 overhead <= TMMBR 0 overhead: The RTP stream sender SHALL NOT send any new TMMBN 0 replacing that active (more restrictive) bounding set, even if entering local paused state.",
      "ja": "TMMBN 0オーバーヘッド<= TMMBR 0オーバーヘッド：RTPストリームの送信者は地元の一時停止状態に入った場合でも、そのアクティブ（より制限）バウンディングセットを交換し、新しいTMMBN 0を送信してはなりません。"
    },
    {
      "indent": 3,
      "text": "TMMBN 0 overhead > TMMBR 0 overhead: The RTP stream sender SHALL send TMMBN 0 with itself in the TMMBN bounding set when entering local paused state.",
      "ja": "TMMBN 0オーバーヘッド> TMMBR 0オーバーヘッド：ローカル一時停止状態に入ったときにRTPストリームの送信者がTMMBNバウンディングセットに自身とTMMBN 0を送信しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The case above, when using TMMBN 0 as a PAUSED indication, being in local paused state, and having received a TMMBR 0 with a bounding set overhead value greater than the value the RTP stream sender would itself use in a TMMBN 0, requires further consideration and is for clarity henceforth referred to as \"restricted local paused state\".",
      "ja": "この場合、ローカル一時停止状態にある一時停止指示としてTMMBN 0を使用して、及びRTPストリーム送信者は自身がTMMBN 0で使用する値よりも大きいオーバーヘッド値を設定する境界とTMMBR 0を受信した、更なる検討が必要そして明確にするため以下「制限されたローカル一時停止状態」と呼ぶことにします。"
    },
    {
      "indent": 3,
      "text": "As indicated in Figure 4, local paused state has higher precedence than paused state (Section 6.3), and RESUME messages alone cannot resume a paused RTP stream as long as the local decision still applies. An RTP stream sender in local paused state is responsible for leaving the state whenever the conditions that caused the decision to enter the state no longer apply.",
      "ja": "図4に示されるように、ローカル一時停止状態は、ポーズ状態（6.3）よりも高い優先順位を有し、単独でメッセージを再開する限りローカル決定が依然として適用される一時停止RTPストリームを再開することはできません。地元の一時停止状態でのRTPストリームの送信者は、状態を残すための責任がある時はいつでも、もはや状態に入る適用する決定を引き起こした条件。"
    },
    {
      "indent": 3,
      "text": "If the RTP stream sender is in restricted local paused state, it cannot leave that state until the TMMBR 0 limit causing the state is removed by a TMMBR > 0 (RESUME). If the RTP stream sender then needs to stay in local paused state due to local considerations, it MAY continue pausing the RTP stream by entering local paused state and MUST then act accordingly, including sending a TMMBN 0 with itself in the bounding set.",
      "ja": "RTPストリームの送信者が制限されたローカル一時停止状態にある場合は、状態を引き起こすTMMBR 0制限はTMMBR> 0（RESUME）によって除去されるまでその状態のままにすることができません。 RTPストリームの送信者は、その後、局所的な考慮事項にローカル一時停止状態に滞在する必要がある場合は、ローカルの一時停止状態を入力することにより、RTPストリームを一時停止し続け、次いでバウンディングセットに自身とTMMBN 0を送信するなど、それに応じて行動しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Pausing an RTP stream MUST NOT affect the sending of RTP keepalive [RFC6263][RFC5245] applicable to that RTP stream.",
      "ja": "RTPストリームを一時停止すると、そのRTPストリームに適用されるRTPキープアライブ[RFC6263] [RFC5245]の送信に影響してはいけません。"
    },
    {
      "indent": 3,
      "text": "When leaving the local paused state, the stream state SHALL become Playing, regardless of whether or not there were any RTP stream receivers that sent PAUSE for that stream during the local paused state, effectively clearing the RTP stream sender's memory for that stream.",
      "ja": "地元の一時停止状態を離れるときは、ストリームの状態にかかわらず、効果的にそのストリームのためのRTPストリームの送信者の記憶をクリア、地元の一時停止状態の間に、そのストリームのためにPAUSEを送信されたRTPストリームの受信機があったかどうかの、プレイになるものとします。"
    },
    {
      "indent": 0,
      "text": "7. Message Format",
      "section_title": true,
      "ja": "7.メッセージフォーマット"
    },
    {
      "indent": 3,
      "text": "Section 6 of AVPF [RFC4585] defines three types of low-delay RTCP feedback messages, i.e., transport-layer, payload-specific, and application-layer feedback messages. This document defines a new transport-layer feedback message, which is further subtyped into either a PAUSE request, a RESUME request, a PAUSED indication, or a REFUSED notification.",
      "ja": "AVPF [RFC4585]のセクション6は、低遅延RTCPフィードバックメッセージ、すなわち、トランスポート層、ペイロード特有の、及びアプリケーション層フィードバックメッセージの三種類を定義します。この文書は、さらに、一時停止要求、再開要求、一時停止指示、または拒絶通知のいずれかにサブタイプされた新しいトランスポート層フィードバックメッセージを、定義します。"
    },
    {
      "indent": 3,
      "text": "The transport-layer feedback messages are identified by having the RTCP payload type be RTPFB (205) as defined by AVPF [RFC4585]. This transport-layer feedback message, containing one or more of the subtyped messages, is henceforth referred to as the PAUSE-RESUME message. The specific FCI format is identified by a Feedback Message Type (FMT) value in a common packet header for the feedback message defined in Section 6.1 of AVPF [RFC4585]. The PAUSE-RESUME transport-layer feedback message FCI is identified by FMT value = 9.",
      "ja": "トランスポート層フィードバックメッセージは、RTCPペイロードタイプはRTPFBを有することによって同定される（205）AVPF [RFC4585]によって定義されます。サブタイプメッセージの一つ以上を含有し、このトランスポート層フィードバックメッセージは、今後PAUSE再開メッセージと呼ばれます。特定のFCIフォーマットはAVPF [RFC4585]のセクション6.1で定義されたフィードバック・メッセージのための共通のパケットヘッダにフィードバックメッセージタイプ（FMT）値によって識別されます。 PAUSE-RESUMEトランスポート層フィードバックメッセージFCIは、FMT値= 9によって識別されます。"
    },
    {
      "indent": 3,
      "text": "The Common Packet Format for feedback messages defined by AVPF [RFC4585] is:",
      "ja": "AVPF [RFC4585]で定義されたフィードバックメッセージのための一般的なパケットフォーマットは以下のとおりです。"
    },
    {
      "indent": 5,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|V=2|P|   FMT   |       PT      |          Length               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                  SSRC of packet sender                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                  SSRC of media source                         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n:            Feedback Control Information (FCI)                 :\n:                                                               :",
      "raw": true
    },
    {
      "indent": 11,
      "text": "Figure 5: AVPF Common Feedback Message Packet Format",
      "ja": "図5：AVPF一般的なフィードバックメッセージパケットのフォーマット"
    },
    {
      "indent": 3,
      "text": "For the PAUSE-RESUME message defined in this memo, the following interpretations of the packet fields apply:",
      "ja": "このメモで定義されたPAUSE-RESUMEメッセージの場合は、パケットフィールドの以下の解釈が適用されます。"
    },
    {
      "indent": 3,
      "text": "FMT: The FMT value identifying the PAUSE-RESUME FCI: 9",
      "ja": "FMT：PAUSE-RESUME FCIを識別するFMT値：9"
    },
    {
      "indent": 3,
      "text": "PT: Payload Type = 205 (RTPFB)",
      "ja": "PT：ペイロードタイプ= 205（RTPFB）"
    },
    {
      "indent": 3,
      "text": "Length: As defined by AVPF, i.e., the length of this packet in 32-bit words minus one, including the header and any padding.",
      "ja": "長さ：ヘッダおよびパディングを含む、AVPF、即ち、32ビットワードから1を引いたもので、このパケットの長さによって定義された通りです。"
    },
    {
      "indent": 3,
      "text": "SSRC of packet sender: The SSRC of the RTP session participant sending the messages in the FCI. Note, for endpoints that have multiple SSRCs in an RTP session, any of its SSRCs MAY be used to send any of the pause message types.",
      "ja": "パケットの送信者のSSRC：FCIでメッセージを送信するRTPセッションの参加者のSSRC。そのSSRCsのいずれかが一時停止メッセージタイプのいずれかを送信するために使用され得る、RTPのセッションで複数のSSRCsを持っているエンドポイントのため、注意してください。"
    },
    {
      "indent": 3,
      "text": "SSRC of media source: Not used; SHALL be set to 0. The FCI identifies the SSRC the message is targeted for.",
      "ja": "メディアソースのSSRC：使用しません。 0に設定されるFCIは、メッセージのために標的化されるSSRCを識別する。"
    },
    {
      "indent": 3,
      "text": "The FCI field consists of one or more PAUSE, RESUME, PAUSED, or REFUSED messages or any future extension. These messages have the following FCI format:",
      "ja": "FCIフィールドは、一つ以上の一時停止、再開、一時停止または拒絶メッセージまたは任意の将来の拡張で構成されています。これらのメッセージは、次のFCIの形式になります。"
    },
    {
      "indent": 5,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                           Target SSRC                         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| Type  |  Res  | Parameter Len |           PauseID             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n:                         Type Specific                         :\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 7,
      "text": "Figure 6: Syntax of FCI Entry in the PAUSE and RESUME Message",
      "ja": "図6：PAUSEとRESUMEメッセージにおけるFCIエントリの構文"
    },
    {
      "indent": 3,
      "text": "The FCI fields have the following definitions:",
      "ja": "FCIフィールドは、以下の定義を有します："
    },
    {
      "indent": 3,
      "text": "Target SSRC (32 bits): For a PAUSE-RESUME message, this value is the SSRC that the request is intended for. For PAUSED, it MUST be the SSRC being paused. If pausing is the result of a PAUSE request, the value in PAUSED is effectively the same as Target SSRC in a related PAUSE request. For REFUSED, it MUST be the Target SSRC of the PAUSE or RESUME request that cannot change state. A CSRC MUST NOT be used as a target as the interpretation of such a request is unclear.",
      "ja": "ターゲットSSRC（32ビット）：PAUSE再開メッセージの場合、この値は、要求が意図されていることSSRCあります。 PAUSEDの場合、それは一時停止されているSSRCでなければなりません。一時停止は、一時停止要求の結果である場合には一時停止の値を効果的に関連する一時停止要求でターゲットSSRCと同じです。 REFUSEDの場合は、状態を変更することはできませんPAUSEまたはRESUME要求の対象SSRCでなければなりません。 CSRCは、そのような要求の解釈は不明であるとして、ターゲットとして使用することはできません。"
    },
    {
      "indent": 3,
      "text": "Type (4 bits): The pause feedback type. The values defined in this specification are as follows:",
      "ja": "タイプ（4ビット）：休止帰還型。次のように本明細書で定義される値です。"
    },
    {
      "indent": 6,
      "text": "0: PAUSE request message.",
      "ja": "0：PAUSE要求メッセージ。"
    },
    {
      "indent": 6,
      "text": "1: RESUME request message.",
      "ja": "1：RESUME要求メッセージ。"
    },
    {
      "indent": 6,
      "text": "2: PAUSED indication message.",
      "ja": "2：一時停止指示メッセージ。"
    },
    {
      "indent": 6,
      "text": "3: REFUSED notification message.",
      "ja": "3：通知メッセージを拒否しました。"
    },
    {
      "indent": 6,
      "text": "4-15: Reserved for future use. FCI fields with these Type values SHALL be ignored on reception by receivers and MUST NOT be used by senders implementing this specification.",
      "ja": "4-15：将来の使用のために予約されています。これらのタイプの値を持つFCIフィールドは、受信機によって受信時に無視されると、この仕様を実装する送信者によって使用してはいけません。"
    },
    {
      "indent": 3,
      "text": "Res: (4 bits): Type Specific reserved. It SHALL be ignored by receivers implementing this specification and MUST be set to 0 by senders implementing this specification.",
      "ja": "RES：（4ビット）：タイプ固有予約。これは、この仕様を実装する受信機によって無視されなければならず、この仕様を実装する送信者によって0に設定しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Parameter Len (8 bits): Length of the Type Specific field in 32-bit words. MAY be 0.",
      "ja": "パラメータレン（8ビット）：32ビットワードにおいて型特異フィールドの長さ。 0であってもよいです。"
    },
    {
      "indent": 3,
      "text": "PauseID (16 bits): Message sequence identification, as described in Section 5.2. SHALL be incremented by one modulo 2^16 for each new PAUSE message, unless the message is retransmitted. The initial value SHOULD be 0. The PauseID is scoped by the Target SSRC, meaning that PAUSE, RESUME, and PAUSED messages therefore share the same PauseID space for a specific Target SSRC.",
      "ja": "PauseID（16ビット）：メッセージシーケンス識別子、セクション5.2に記載されているように。メッセージが再送されない限り、それぞれの新しいPAUSEメッセージのために1つのモジュロ2 ^ 16ずつ増加するものとします。初期値は0 PauseIDを一時停止、再開、および一時停止メッセージは、従って、特定の標的SSRCに対して同じPauseID空間を共有することを意味し、ターゲットSSRCによってスコープされるべきです。"
    },
    {
      "indent": 3,
      "text": "Type Specific (variable): Defined per pause feedback type. MAY be empty. A receiver implementing this specification MUST be able to skip and ignore any unknown Type Specific data, even for Type values defined in this specification.",
      "ja": "型特異的（可変）：休止フィードバックタイプごとに定義。空でもよいです。この仕様を実装する受信機であっても、本明細書で定義されたタイプの値について、任意の未知のタイプに固有のデータをスキップして無視できなければなりません。"
    },
    {
      "indent": 0,
      "text": "8. Message Details",
      "section_title": true,
      "ja": "8.メッセージの詳細"
    },
    {
      "indent": 3,
      "text": "This section contains detailed explanations of each message defined in this specification. All transmissions of requests and indications are governed by the transmission rules as defined by Section 8.5.",
      "ja": "このセクションでは、本明細書で定義された各メッセージの詳細な説明を含んでいます。セクション8.5で定義されるように要求し、表示のすべての送信は、送信規則によって支配されています。"
    },
    {
      "indent": 3,
      "text": "Any references to PAUSE, PAUSED, RESUME, and REFUSED in this section SHALL be taken to apply to the extent possible and also when TMMBR/ TMMBN are used (Section 5.6) for this functionality. TMMBR/TMMBN MAY be used instead of the messages defined in this specification when the effective topology is point to point. This use is expected to be mainly for interworking with implementations that don't support the messages defined in this specification but make use of TMMBR/TMMBN to achieve a similar effect. If either sender or receiver learns that the topology is not point to point, TMMBR/TMMBN MUST NOT be used for pause/resume functionality. If the messages defined in this specification are supported in addition to TMMBR/TMMBN by all involved parties, pause/resume signaling MUST use messages from this specification. If the topology is not point to point and the messages defined in this specification are not supported, pause/ resume functionality with TMMBR/TMMBN MUST NOT be used.",
      "ja": "任意の一時停止する参照一時停止、再開、およびこのセクションでREFUSED程度まで可能適用するものと解釈し、またTMMBR / TMMBNするものとし、この機能のために（セクション5.6）が使用されます。 TMMBR / TMMBN代わりに有効なトポロジーがポイントツーポイントである場合、本明細書中で定義されたメッセージを用いてもよいです。この使用はこの仕様で定義されたメッセージをサポートしていますが、同様の効果を達成するためにTMMBR / TMMBNを使用しない実装と相互作用のために主になることが期待されます。送信者または受信者のいずれかが、トポロジーがポイントツーポイントされていないことを認識した場合、TMMBR / TMMBNは、一時停止/再開機能のために使用してはいけません。この仕様で定義されたメッセージは、すべての関係者によるTMMBR / TMMBNに加えて、サポートされている場合は、一時停止/再開シグナリングは、この仕様書からのメッセージを使用しなければなりません。トポロジーがポイントツーポイントではなく、この仕様で定義されたメッセージがサポートされていない場合は、TMMBR / TMMBNと一時停止/再開機能を使用してはいけません。"
    },
    {
      "indent": 3,
      "text": "For the scope of this specification, a past PauseID (Section 5.2) is defined as having a value between and including (PauseID - 2^15) MOD 2^16 and (PauseID - 1) MOD 2^16, where \"MOD\" is the modulo operator.",
      "ja": "MOD 2 ^ 16（PauseID  -  1）MOD 2 ^ 16、 \"MOD\" である - 本明細書の範囲のために、過去PauseID（セクション5.2）は、（2 ^ 15 PauseID）などとの間の値を有するものとして定義されますモジュロ演算子。"
    },
    {
      "indent": 3,
      "text": "Similarly, a future PauseID is defined as having a value between and including (PauseID + 1) MOD 2^16 and (PauseID + 2^14) MOD 2^16. It is intentional that future PauseID is not defined as the entire range outside that of past PauseID. The remaining range of PauseID is simply \"not current\".",
      "ja": "同様に、将来PauseIDは、間の値を有する（PauseID + 1）MOD 2 ^ 16（PauseID + 2 ^ 14）MOD 2 ^ 16を含むものとして定義されます。将来のPauseIDが過去PauseIDのその外の全範囲として定義されていないことを意図的なものです。 PauseIDの残りの範囲は、単に「現在のではない」です。"
    },
    {
      "indent": 0,
      "text": "8.1. PAUSE",
      "section_title": true,
      "ja": "8.1.  PAUSE"
    },
    {
      "indent": 3,
      "text": "An RTP stream receiver MAY schedule PAUSE for transmission at any time.",
      "ja": "RTPストリームの受信機は、いつでも送信のために一時停止をスケジュールすることができます。"
    },
    {
      "indent": 3,
      "text": "PAUSE has no defined Type Specific parameters.",
      "ja": "PAUSEには定義されたタイプ固有のパラメータはありません。"
    },
    {
      "indent": 3,
      "text": "PauseID SHOULD be the current PauseID, as indicated by PAUSED (Section 8.2), REFUSED (Section 8.4), or implicitly determined by previously received PAUSE or RESUME (Section 8.3) requests. A randomly chosen PauseID MAY be used if it was not possible to retrieve current PauseID information, in which case the PAUSE will either succeed or the current PauseID can be found in the returned REFUSED (Section 8.4).",
      "ja": "PAUSED（セクション8.2）によって示されるようにPauseIDは、現在PauseIDされるべきである（セクション8.4）を拒否し、または暗黙的に、以前に受信したポーズまたはRESUME（セクション8.3）の要求によって決定されます。現在のPauseID情報を取得することができなかった場合は、ランダムに選ばれたPauseIDは、使用されるかもしれPAUSEが成功するか、その場合、または現在のPauseIDが返さREFUSED（8.4節）に記載されています。"
    },
    {
      "indent": 3,
      "text": "It can be noted that as a result of what is described in Section 6.1, PauseID is incremented by one, in modulo arithmetic, for each PAUSE request that is not a retransmission, compared to what was used in the last PAUSED indication sent by the media sender. PauseID in the message is supposed to match current PauseID at the RTP stream sender.",
      "ja": "セクション6.1に記載されているものの結果として、PauseIDがメディアによって送信された最後のPAUSED表示に使用したものと比較して、再送ない各PAUSE要求に対して、モジュロ演算では、1だけインクリメントされることに留意することができます送信者。メッセージ内PauseIDは、RTPストリームの送信者で現在PauseIDに一致するようになっています。"
    },
    {
      "indent": 3,
      "text": "If an RTP stream receiver that sent a PAUSE with a certain PauseID for a Target SSRC receives a RESUME or a REFUSED with the same PauseID for the same Target SSRC, it is RECOMMENDED that it refrains from scheduling further PAUSE requests for some appropriate time. This is because the RESUME indicates that there are other receivers that still wish to receive the stream, and the REFUSED indicates that the RTP stream sender is currently not able to pause the stream. What is an appropriate time can vary from application to application and will also depend on the importance of achieving the bandwidth saving, but 2-5 regular RTCP intervals is expected to be appropriate.",
      "ja": "ターゲットSSRCための特定のPauseIDとPAUSEを送信したRTPストリームの受信機は、同じ標的SSRCに対して同じPauseIDでREFUSED RESUMEまたは受信した場合、いくつかの適切な時間のためにさらにPAUSE要求をスケジューリング控えることが推奨されます。 RESUMEはまだストリームを受信したい、他の受信機があることを示しており、REFUSED RTPストリームの送信者は、現在のストリームを一時停止することはできないことを示しているためです。適切な時間は、アプリケーションごとに異なりことができ、また、帯域幅の節約を達成することの重要性に依存するが、2-5通常のRTCP間隔が適切であることが予想されているものです。"
    },
    {
      "indent": 3,
      "text": "If the targeted RTP stream does not pause, if no PAUSED indication with a future PauseID compared to the one used in PAUSE is received, and if no REFUSED with the current or a future PauseID is received within 2 * RTT + T_dither_max, the PAUSE MAY be scheduled for retransmission, using the same current PauseID. RTT is the observed round trip to the RTP stream sender, and T_dither_max is defined in Section 3.4 of [RFC4585]. An RTP stream receiver in a bi-directional RTP communication will generally have an RTT estimate to the RTP stream sender, e.g., from RTCP SR/RR as described in Section 6.4 of",
      "ja": "標的RTPストリームが一時停止されない場合は、未来とはPAUSED指示がPAUSEで使用されるものに比べPauseIDない場合に受信され、無* 2内の現在または将来のPauseIDが受信されるとREFUSED RTT + T_dither_max、PAUSE可能性がある場合同じ電流PauseIDを使用して、再送信のためにスケジュールすること。 RTTは、RTPストリームの送信者に観察往復で、T_dither_maxは、[RFC4585]の3.4節で定義されています。セクション6.4で説明したように、双方向RTP通信でRTPストリームの受信機は、一般のRTCP SR / RRから、例えば、RTPストリームの送信者にRTT推定値を有するであろう"
    },
    {
      "indent": 3,
      "text": "[RFC3550]. However, RTP stream receivers that don't send any RTP streams will lack an RTT estimate unless they use additional mechanisms, such as the \"Receiver Reference Time Report Block\" part of RTCP XR [RFC3611]. RTP stream receivers that lack an RTT estimate to the sender SHOULD use 500 ms as the default value.",
      "ja": "[RFC3550]。彼らは、このようなRTCP XR [RFC3611]の「レシーバのリファレンス・タイムレポート・ブロック」の部分などの追加のメカニズムを、使用しない限りしかし、任意のRTPストリームを送信しないRTPストリーム受信機はRTT推定を欠くことになります。送信者にRTT推定値が不足しているRTPストリーム受信機は、デフォルト値として500ミリを使用すべきです。"
    },
    {
      "indent": 3,
      "text": "When an RTP stream sender in playing state (Section 6.1) receives a PAUSE with the current PauseID, and unless local considerations currently make it impossible to pause the stream, it SHALL enter pausing state (Section 6.2) and act accordingly.",
      "ja": "状態（6.1節）を再生中にRTPストリームの送信者は、現在のPauseIDとPAUSEを受け、地元の考察は、現在、それは不可能ストリームを一時停止するに作る場合を除き、それは一時停止状態（6.2節）を入力し、それに応じて行動するとき。"
    },
    {
      "indent": 3,
      "text": "If an RTP stream sender receives a PAUSE with the current PauseID while in pausing, paused (Section 6.3), or local paused (Section 6.4) states, the received PAUSE SHALL be ignored.",
      "ja": "RTPストリームの送信者が現在PauseIDとPAUSEを受信した場合、一時停止中、（セクション6.3）、またはローカル一時停止（6.4節）の状態を一時停止しながら、受信したPAUSEを無視します。"
    },
    {
      "indent": 0,
      "text": "8.2. PAUSED",
      "section_title": true,
      "ja": "8.2.  PAUSED"
    },
    {
      "indent": 3,
      "text": "The PAUSED indication, if supported, MUST be sent whenever entering paused state (Section 6.3) or local paused state (Section 6.4).",
      "ja": "一時停止状態（セクション6.3）またはローカル停止状態（セクション6.4）に入るたびに一時停止指示は、サポートされている場合、送信されなければなりません。"
    },
    {
      "indent": 3,
      "text": "PauseID in the PAUSED message MUST contain the current PauseID that can be included in a subsequent RESUME (Section 8.3). For local paused state, this means that PauseID in the message is the current PauseID, just as if the RTP stream sender had sent a PAUSE to itself.",
      "ja": "一時停止メッセージ内PauseIDは、後続のRESUME（セクション8.3）に含めることができる電流PauseIDを含まなければなりません。地元の一時停止状態の場合、これはメッセージでPauseIDは、RTPストリームの送信者が自身にPAUSEを送った場合と同様に、現在のPauseIDであることを意味します。"
    },
    {
      "indent": 3,
      "text": "PAUSED SHALL contain a fixed-length 32-bit parameter at the start of the Type Specific field with the extended RTP sequence number of the last RTP packet sent before the RTP stream was paused, in the same format as the extended highest sequence number received (Section 6.4.1 of [RFC3550]).",
      "ja": "PAUSEDは（拡張最高シーケンス番号が受信されたのと同じ形式で、一時停止されたRTPストリームの前に送信された最後のRTPパケットの拡張RTPシーケンス番号を有するタイプ特定フィールドの開始時に、固定長32ビットのパラメータを含まなければなりません[RFC3550]のセクション6.4.1）。"
    },
    {
      "indent": 3,
      "text": "After having entered paused or local paused state and thus having sent PAUSED once, PAUSED MUST also be included in (at least) the next two regular RTCP reports, given that the pause condition is then still effective.",
      "ja": "一度PAUSED送信したこうして入力一時停止またはローカルの一時停止状態を有するとした後に一時停止も含まなければならないで（少なくとも）次の2つの正規RTCPは休止状態がまだ次に有効であることを考えると、報告しています。"
    },
    {
      "indent": 3,
      "text": "PAUSED indications MAY be retransmitted, subject to transmission rules (Section 8.5), to increase the probability that the message reaches the receiver in a timely fashion. This can be especially important when entering local paused state. The number of repetitions to use could be tuned to observed loss rate and desired loss probability, for example, based on RTCP reports received from the intended message target.",
      "ja": "PAUSED指示は、メッセージがタイムリーに受信機に到達する確率を高めるために、送信ルール（セクション8.5）に従う、再送されるかもしれません。地元の一時停止状態に入ったときに、これは特に重要になることがあります。使用する繰り返しの数が意図されたメッセージをターゲットから受信したRTCPレポートに基づいて、例えば、観察された損失率と所望の損失確率に同調することができます。"
    },
    {
      "indent": 3,
      "text": "While remaining in paused or local paused states, PAUSED MAY be included in all compound RTCP reports, as long as the negotiated RTCP bandwidth is not exceeded.",
      "ja": "一時停止またはローカルの一時停止の状態で残っているものの、PAUSEDは限り交渉しRTCP帯域幅を超えないよう、すべての化合物のRTCPレポートに含まれるかもしれません。"
    },
    {
      "indent": 3,
      "text": "When in paused or local paused states, whenever the RTP stream sender learns that there are endpoints that did not previously receive the stream, for example, by RTCP reports with an SSRC and a CNAME that were not previously seen in the RTP session, it is RECOMMENDED to send PAUSED at the earliest opportunity and also to include it in (at least) the next two regular RTCP reports, given that the pause condition is then still effective.",
      "ja": "一時停止またはローカルの一時停止の状態で、いつでもRTPストリームの送信者が以前にストリームを受信して​​いないエンドポイントがあることを学習すると、例えば、RTCPによって以前にRTPセッションでは見られなかったSSRC及びCNAMEを報告し、それがあります早い機会で一時停止を送信し、また、（少なくとも）でそれを含めるように推奨される次の2つの正規RTCPは、休止状態がまだ続い効果的であることを考えると、報告します。"
    },
    {
      "indent": 0,
      "text": "8.3. RESUME",
      "section_title": true,
      "ja": "8.3. 履歴書"
    },
    {
      "indent": 3,
      "text": "An RTP stream receiver MAY schedule RESUME for transmission whenever it wishes to resume a paused stream or disapprove a stream from being paused.",
      "ja": "それは一時停止されるのストリームを一時停止ストリームを再開または不承認を望むたびにRTPストリームの受信機は、送信のためRESUMEをスケジュールすることができます。"
    },
    {
      "indent": 3,
      "text": "PauseID SHOULD be the current PauseID, as indicated by PAUSED (Section 8.2) or implicitly determined by previously received PAUSE (Section 8.1) or RESUME requests. A randomly chosen PauseID MAY be used if it was not possible to retrieve current PauseID information, in which case the RESUME will either succeed or the current PauseID can be found in a returned REFUSED (Section 8.4).",
      "ja": "PAUSED（セクション8.2）で示されるまたは暗黙的に、以前に受信したポーズ（8.1節）またはRESUME要求によって決定されるようPauseIDは、現在PauseIDであるべきです。現在のPauseID情報を取得することができなかった場合は、ランダムに選ばれたPauseIDは、使用されるかもしれRESUMEが成功するか、その場合、または現在のPauseIDが返さREFUSED（8.4節）に記載されています。"
    },
    {
      "indent": 3,
      "text": "If an RTP stream receiver that sent a RESUME with a certain PauseID receives a REFUSED with the same PauseID, it is RECOMMENDED that it refrains from scheduling further RESUME requests for some appropriate time since the REFUSE indicates that it is currently not possible to resume the stream. What is an appropriate time can vary from application to application and will also depend on the importance of resuming the stream, but 1-2 regular RTCP intervals is expected to be appropriate.",
      "ja": "特定PauseIDとRESUMEを送信したRTPストリームの受信機が受信した場合、同じPauseIDと拒否し、REFUSEは、ストリームを再開することはできないことを示しているので、いくつかの適切な時間のためにさらにRESUME要求をスケジューリング控えることが推奨されます。適切な時間は、アプリケーションごとに異なりことができ、また、ストリームを再開することの重要性に依存するが、1-2通常のRTCP間隔が適切であることが予想されているものです。"
    },
    {
      "indent": 3,
      "text": "RESUME requests MAY be retransmitted, subject to transmission rules (Section 8.5), to increase the probability that the message reaches the receiver in a timely fashion. The number of repetitions to use could be tuned to observed loss rate and desired loss probability, for example, based on RTCP reports received from the intended message target. Such retransmission SHOULD stop as soon as RTP packets from the targeted stream are received or when a REFUSED with the current PauseID for the targeted RTP stream is received.",
      "ja": "RESUME要求は、メッセージがタイムリーに受信機に到達する確率を高めるために、送信ルール（セクション8.5）に従う、再送されるかもしれません。使用する繰り返しの数が意図されたメッセージをターゲットから受信したRTCPレポートに基づいて、例えば、観察された損失率と所望の損失確率に同調することができます。このような再送信は、ターゲットストリームからRTPパケットを受信して​​いるか、目標とRTPストリームの現在のPauseIDを拒否し受信するとすぐに停止する必要があります。"
    },
    {
      "indent": 3,
      "text": "RESUME has no defined Type Specific parameters.",
      "ja": "RESUMEには定義されたタイプ固有のパラメータはありません。"
    },
    {
      "indent": 3,
      "text": "When an RTP stream sender in pausing (Section 6.2), paused (Section 6.3), or local paused state (Section 6.4) receives a RESUME with the current PauseID, and unless local considerations currently make it impossible to resume the stream, it SHALL enter playing state (Section 6.1) and act accordingly. If the RTP stream sender is incapable of honoring a RESUME request with the current PauseID, or if it receives a RESUME request with a PauseID that is not the current PauseID while in paused or pausing state, the RTP stream sender SHALL schedule a REFUSED message for transmission as specified below.",
      "ja": "一時停止中のRTPストリームの送信者は（セクション6.2）、一時停止した場合（6.3節）、またはローカル一時停止状態（6.4節）は、現在のPauseIDとRESUMEを受け、地元の考察は、現在、それは不可能ストリームを再開するために作る場合を除き、それが入ること状態（6.1節）を再生し、それに応じて行動します。 RTPストリームの送信者は、現在のPauseIDと再開要求を尊重することができない、またはそれが一時停止または一時停止状態にある間に電流PauseIDないPauseIDと再開要求を受信した場合、RTPストリームの送信者が用REFUSEDメッセージをスケジュールするものとした場合下記の指定されたトランスミッション。"
    },
    {
      "indent": 3,
      "text": "If an RTP stream sender in playing state receives a RESUME containing either the current PauseID or a past PauseID, the received RESUME SHALL be ignored.",
      "ja": "状態を遊んでRTPストリームの送信者は、現在のPauseIDまたは過去PauseIDのいずれかを含むRESUMEを受信した場合、受信RESUMEは無視されなければなりません。"
    },
    {
      "indent": 0,
      "text": "8.4. REFUSED",
      "section_title": true,
      "ja": "8.4.  REFUSED"
    },
    {
      "indent": 3,
      "text": "If an RTP stream sender receives a PAUSE (Section 8.1) or RESUME (Section 8.3) request containing the current PauseID, where the requested action cannot be fulfilled by the RTP stream sender due to some local consideration, it SHALL schedule transmission of a REFUSED notification containing the current PauseID from the rejected request.",
      "ja": "RTPストリームの送信者が何らかのローカル考慮にPAUSE（8.1節）またはRESUME（セクション8.3）要求されたアクションは、RTPストリームの送信者によって満たすことができない現在PauseIDを含む要求を受信した場合、それは拒否通知の送信をスケジュールSHALL拒否されたリクエストから現在PauseIDを含みます。"
    },
    {
      "indent": 3,
      "text": "REFUSED has no defined Type Specific parameters.",
      "ja": "REFUSEDには定義されたタイプ固有のパラメータはありません。"
    },
    {
      "indent": 3,
      "text": "If an RTP stream sender receives a PAUSE or RESUME request with a PauseID that is not the current PauseID, it SHALL schedule a REFUSED notification containing the current PauseID, except if the RTP stream sender is in playing state and receives a RESUME with a past PauseID, in which case the RESUME SHALL be ignored.",
      "ja": "RTPストリームの送信者は、現在のPauseIDないPauseIDとPAUSEまたはRESUME要求を受信した場合、それは、現在のPauseIDを含むREFUSED通知をスケジュールするものとRTPストリームの送信者が状態を演奏しており、過去PauseIDでRESUMEを受信した場合を除き、その場合、RESUMEは無視されます。"
    },
    {
      "indent": 3,
      "text": "If several PAUSE or RESUME requests that would render identical REFUSED notifications are received before the scheduled REFUSED is sent, duplicate REFUSED notifications MUST NOT be scheduled for transmission. This effectively lets a single REFUSED respond to several ineffective PAUSE or RESUME requests.",
      "ja": "いくつかのPAUSEまたはスケジュールREFUSED前に同じREFUSED通知が受信され、レンダリングされRESUME要求が送信された場合、REFUSED通知が送信のためにスケジュールされてはならない重複します。これは、効果的に、いくつかの無効PAUSEまたはRESUME要求に単一REFUSED応答をすることができます。"
    },
    {
      "indent": 3,
      "text": "An RTP stream receiver that sent a PAUSE or RESUME request and receives a REFUSED containing the same PauseID as in the request SHOULD refrain from sending an identical request for some appropriate time to allow the condition that caused REFUSED to clear. For PAUSE, an appropriate time is suggested in Section 8.1. For RESUME, an appropriate time is suggested in Section 8.3.",
      "ja": "一時停止または再開要求を送信し、REFUSED要求と同じPauseIDを含む受信RTPストリームの受信機は、クリアすることを拒否した原因となった条件を可能にするために、いくつかの適切な時間のために同じ要求を送信を控えるべきです。 PAUSEのために、適切な時間は、8.1節で提案されます。 RESUMEのために、適切な時間は、8.3節で提案されます。"
    },
    {
      "indent": 3,
      "text": "An RTP stream receiver that sent a PAUSE or RESUME request and receives a REFUSED containing a PauseID different from the request MAY schedule another request using the PauseID from the REFUSED notification.",
      "ja": "一時停止または再開要求を送信し、REFUSEDリクエスト異なるPauseIDが拒否通知からPauseIDを使用して別の要求をスケジュールすることができる含んを受信するRTPストリームの受信機。"
    },
    {
      "indent": 0,
      "text": "8.5. Transmission Rules",
      "section_title": true,
      "ja": "8.5. 転送ルール"
    },
    {
      "indent": 3,
      "text": "The transmission of any RTCP feedback messages defined in this specification MUST follow the normal AVPF-defined timing rules and depend on the session's mode of operation.",
      "ja": "この仕様で定義された任意のRTCPフィードバックメッセージの送信は、通常のAVPFに定義されたタイミングルールに従うと、操作のセッションのモードに依存しなければなりません。"
    },
    {
      "indent": 3,
      "text": "All messages defined in this specification, as well as TMMBR/TMMBN used for pause/resume purposes (Section 5.6), can use either Regular, Early, or Immediate timings but should make a trade-off between timely transmission (Section 4.1) and RTCP bandwidth consumption. This can be achieved by taking the following into consideration:",
      "ja": "すべてこの仕様で定義されたメッセージだけでなく、TMMBR / TMMBNは、一時停止/再開の目的のために使用（5.6節）、初期の、定期的な、または即時のいずれかのタイミングを使用することができますが、タイムリーな伝送（4.1節）とRTCPの間のトレードオフを行う必要があります帯域幅の消費。これを考慮に以下を取ることによって達成することができます。"
    },
    {
      "indent": 3,
      "text": "o It is recommended that PAUSE use Early or Immediate timing, except for retransmissions where RTCP bandwidth can motivate the use of Regular timing.",
      "ja": "Oそれは、早期または即時タイミング、RTCP帯域幅が正規のタイミングの使用を動機づけることができ、再送信を除いてそのPAUSEの使用を推奨します。"
    },
    {
      "indent": 3,
      "text": "o The first transmission of PAUSED for each (non-wrapped) PauseID is recommended to be sent with Immediate or Early timing to stop unnecessary repetitions of PAUSE. It is recommended that subsequent transmissions of PAUSED for that PauseID use Regular timing to avoid excessive PAUSED RTCP bandwidth caused by multiple PAUSE requests.",
      "ja": "それぞれが休止の最初の送信O（非包ま）PauseIDはPAUSEの不必要な繰り返しを停止する即時または早いタイミングで送信することが推奨されます。そのPauseID、一時停止のその後の送信は、複数のPAUSE要求によって引き起こされる過度PAUSED RTCP帯域幅を避けるために、定期的なタイミングを使用することをお勧めします。"
    },
    {
      "indent": 3,
      "text": "o It is recommended that unsolicited PAUSED (sent when entering local paused state (Section 6.4)) always use Immediate or Early timing, until PAUSED for that PauseID is considered delivered at least once to all receivers of the paused RTP stream, to avoid RTP stream receivers that take unnecessary corrective action when the RTP stream is no longer received, after which it is recommended that PAUSE uses Regular timing (as for PAUSED triggered by PAUSE above).",
      "ja": "OそのPauseID、一時停止がRTPストリームを避けるために、一時停止したRTPストリームのすべての受信機に少なくとも一度配信とみなされるまで（現地一時停止状態（6.4節）を入力するときに送信される）迷惑PAUSEDは常に、即時または早期タイミングを使用することをお勧めします一時停止（PAUSED用として上記PAUSEによってトリガ）定期的タイミングを使用することが推奨された後にRTPストリームがもはや受信される不要な是正措置をとる受信機。"
    },
    {
      "indent": 3,
      "text": "o RESUME is often time critical, and it is recommended that it always uses Immediate or Early timing.",
      "ja": "O RESUMEは、多くの場合、時間が重要であり、それは常に即時または早期タイミングを使用することをお勧めします。"
    },
    {
      "indent": 3,
      "text": "o The first transmission of REFUSED for each (non-wrapped) PauseID is recommended to be sent with Immediate or Early timing to stop unnecessary repetitions of PAUSE or RESUME. It is recommended that subsequent REFUSED notifications for that PauseID use Regular timing to avoid excessive REFUSED RTCP bandwidth caused by multiple unreasonable requests.",
      "ja": "各（非包ま）PauseIDためREFUSEDの最初の送信oを一時停止または再開の不要な繰り返しを停止する即時または早いタイミングで送信することが推奨されます。そのPauseIDに対する後続のREFUSED通知は、複数の不合理な要求によって引き起こされる過度のREFUSED RTCP帯域幅を避けるために、定期的なタイミングを使用することをお勧めします。"
    },
    {
      "indent": 0,
      "text": "9. Signaling",
      "section_title": true,
      "ja": "9.シグナリング"
    },
    {
      "indent": 3,
      "text": "The capability of handling messages defined in this specification MAY be exchanged at a higher layer such as SDP. This document extends the \"rtcp-fb\" attribute defined in Section 4 of AVPF [RFC4585] to include the request for pause and resume. This specification follows all the rules defined in AVPF [RFC4585] and CCM [RFC5104] for an \"rtcp-fb\" attribute relating to the payload type in a session description.",
      "ja": "本明細書で定義されたメッセージを処理する能力は、SDPのような上位層に交換することができます。この文書は、一時停止及び再開の要求を含むことAVPF [RFC4585]のセクション4で定義された「RTCP-FB」属性を拡張します。この仕様は、セッション記述におけるペイロードタイプに関連する「RTCP-FB」属性のAVPF [RFC4585]及びCCM [RFC5104]で定義されたすべてのルールに従います。"
    },
    {
      "indent": 3,
      "text": "This specification defines a new parameter \"pause\" to the \"ccm\" feedback value defined in CCM [RFC5104], representing the capability to understand the RTCP feedback message and all of the defined FCIs of PAUSE, RESUME, PAUSED, and REFUSED.",
      "ja": "この仕様は、RTCPフィードバックメッセージと一時停止、再開一時停止の定義[シスの全てを理解しREFUSEDする能力を表す、CCM [RFC5104]で定義された「CCM」フィードバック値に新しいパラメータ「一時停止」を定義します。"
    },
    {
      "indent": 6,
      "text": "Note: When TMMBR 0 / TMMBN 0 are used to implement pause and resume functionality (with the restrictions described in this specification), signaling the \"rtcp-fb\" attribute with the \"ccm\" and \"tmmbr\" parameters is sufficient and no further signaling is necessary. There is, however, no guarantee that TMMBR/TMMBN implementations predating this specification work exactly as described here when used with a bitrate value of 0.",
      "ja": "注：TMMBR 0 / TMMBN 0「CCM」及び「tmmbr」パラメータと「RTCP-FB」属性をシグナリング、一時停止を実装し（制限事項が本明細書に記載して）機能を再開するために使用される場合十分でなく、更なるシグナリング必要です。 0のビットレート値で使用する場合、ここで説明したようTMMBR / TMMBNの実装は、まさにこの仕様の作業をより以前の保証は、しかし、ありません。"
    },
    {
      "indent": 3,
      "text": "The \"pause\" parameter has two optional attributes, which are \"nowait\" and \"config\":",
      "ja": "「一時停止」パラメータが「NOWAIT」と「設定」されている2つのオプションの属性を持っています："
    },
    {
      "indent": 3,
      "text": "o \"nowait\" indicates that the hold-off period defined in Section 6.2 can be set to 0, reducing the latency before the stream can be paused after receiving a PAUSE request. This condition occurs when there will only be a single receiver per direction in the RTP session, for example, in point-to-point sessions. It is also possible to use in scenarios using unidirectional media. The conditions that allow \"nowait\" to be set (Section 6.2) also indicate that it would be possible to use CCM TMMBR/TMMBN as pause/resume signaling.",
      "ja": "O「NOWAITは、」ストリームが一時停止要求を受信した後に一時停止することができる前に、待ち時間を低減する、セクション6.2で定義されたホールドオフ期間を0に設定することができることを示しています。唯一のRTPセッションにおいて、例えば、ポイント・ツー・ポイントセッション方向ごとに単一の受信機が存在することになる場合、この状態が発生します。一方向のメディアを使用したシナリオで使用することも可能です。 「NOWAIT」が設定されることを可能にする条件（セクション6.2）はまた、一時停止/再開シグナルとしてCCM TMMBR / TMMBNを使用することが可能であることを示しています。"
    },
    {
      "indent": 3,
      "text": "o \"config\" allows for partial implementation of this specification according to the different roles in the use-cases section (Section 3) and takes a value that describes what subset is implemented:",
      "ja": "O「設定は、」ユースケースのセクション（セクション3）において異なる役割に応じて、本明細書の部分的な実装を可能にし、サブセットが実装されているものについて説明した値をとります。"
    },
    {
      "indent": 6,
      "text": "1 Full implementation of this specification. This is the default configuration. A missing \"config\" pause attribute MUST be treated equivalent to providing a \"config\" value of 1.",
      "ja": "この仕様の1つのフル実装。これがデフォルトの設定です。欠落している「設定」ポーズ属性は1の「設定」の値を提供することに等価で処理しなければなりません。"
    },
    {
      "indent": 6,
      "text": "2 The implementation intends to send PAUSE and RESUME requests for received RTP streams and is thus also capable of receiving PAUSED and REFUSED. It does not support receiving PAUSE and RESUME requests, but it may pause sent RTP streams due to local considerations and then intend to send PAUSED for them.",
      "ja": "2インプリメンテーションは、受信したRTPストリームの一時停止と再開の要求を送信しようとし、また、したがって一時停止しREFUSEDを受信することができます。これは、受信PAUSEおよびRESUME要求をサポートしていませんが、それは、局所的な考慮事項にRTPストリームを送信し、その後、彼らのためにPAUSEDを送信するつもり一時停止することがあります。"
    },
    {
      "indent": 6,
      "text": "3 The implementation supports receiving PAUSE and RESUME requests targeted for RTP streams it sends. It will send PAUSED and REFUSED as needed. The node will not send any PAUSE and RESUME requests but supports and desires receiving PAUSED if received RTP streams are paused.",
      "ja": "3実装はRTPは、送信するストリームを対象PAUSEおよびRESUME要求を受けてサポートしています。これは、一時停止し、必要に応じてREFUSED送信されます。ノードは、任意のPAUSEとRESUME要求が、受信したRTPストリームが一時停止されている場合PAUSED受信をサポートして欲望を送信しません。"
    },
    {
      "indent": 6,
      "text": "4 The implementation intends to send PAUSE and RESUME requests for received RTP streams and is thus also capable of receiving PAUSED and REFUSED. It cannot pause any RTP streams it sends, and thus does not support receiving PAUSE and RESUME requests, and it also does not support sending PAUSED indications.",
      "ja": "4実装は、受信したRTPストリームの一時停止と再開の要求を送信しようとし、また、したがって一時停止しREFUSEDを受信することができます。これは、任意のRTPは、それが受信PAUSEおよびRESUME要求をサポートしていませんので、送信、およびストリーム一時停止することはできません、それはまた、PAUSED兆候の送信をサポートしていません。"
    },
    {
      "indent": 6,
      "text": "5 The implementation supports receiving PAUSE and RESUME requests targeted for RTP streams it sends. It will send PAUSED and REFUSED as needed. It does not support sending PAUSE and RESUME requests to pause received RTP streams, and it also does not support receiving PAUSED indications.",
      "ja": "5実装はRTPは、送信するストリームを対象PAUSEおよびRESUME要求を受けてサポートしています。これは、一時停止し、必要に応じてREFUSED送信されます。これは、受信したRTPストリームを一時停止するにはPAUSEとRESUME要求を送信をサポートしていません、それはまた、PAUSED指摘を受けて対応していません。"
    },
    {
      "indent": 6,
      "text": "6 The implementation supports sent and received RTP streams being paused due to local considerations and thus supports sending and receiving PAUSED indications.",
      "ja": "6実装では、送信され、RTPが局部考慮したがってPAUSED指示を送受信支持体に一時停止されるストリーム受信をサポートしています。"
    },
    {
      "indent": 6,
      "text": "7 The implementation supports and desires to receive PAUSED indications for received RTP streams but does not pause or send PAUSED indications for sent RTP streams. It does not support any other messages defined in this specification.",
      "ja": "7実装はサポートしており、受信したRTPストリーム、一時停止指示を受信することを望むが、一時停止またはRTPストリームを送信し、一時停止指示を送信しません。これは、この仕様で定義されている他のメッセージをサポートしていません。"
    },
    {
      "indent": 6,
      "text": "8 The implementation supports pausing sent RTP streams and sending PAUSED indications for them but does not support receiving PAUSED indications for received RTP streams. It does not support any other messages defined in this specification.",
      "ja": "8実装が一時停止をサポートRTPストリームを送信し、彼らのためにPAUSED指摘を送るが、受信したRTPストリームのためPAUSED適応症の受信をサポートしていません。これは、この仕様で定義されている他のメッセージをサポートしていません。"
    },
    {
      "indent": 3,
      "text": "All implementers of this specification are encouraged to include full support for all messages (\"config=1\"), but it is recognized that this is sometimes not meaningful for implementations operating in an environment where only parts of the functionality provided by this specification are needed. The above defined \"config\" functionality subsets provide a trade-off between completeness and the need for implementation interoperability, achieving at least a level of functionality corresponding to what is desired by the least-capable party when used as specified here. Implementing any functionality subsets other than those defined above is NOT RECOMMENDED.",
      "ja": "この仕様のすべての実装者は、すべてのメッセージ（「= 1設定」）を完全にサポートを含めることが奨励されているが、この仕様によって提供される機能の一部のみが必要とされている環境で動作する実装のために、時には意味がないことが認識されています。上記で定義された「設定」機能のサブセットは、ここで指定されるように使用される場合、少なくとも対応者によって所望されるものに対応する機能の少なくともレベルを達成し、完全性及び実装の相互運用性のための必要性の間のトレードオフを提供します。上記で定義されたもの以外の任意の機能のサブセットを実装することは推奨されません。"
    },
    {
      "indent": 3,
      "text": "When signaling a \"config\" value other than 1, an implementation MUST ignore non-supported messages on reception and SHOULD omit sending messages not supported by the remote peer. One example where it can be motivated to send messages that some receivers do not support is when there are multiple message receivers with different message support (different \"config\" values). That approach avoids letting the least-capable receiver limit the functionality provided to others. The below table summarizes per-message send and receive support for the different \"config\" pause attribute values (\"X\" indicating support and \"-\" indicating non-support):",
      "ja": "1以外の「設定」の値をシグナリングする場合、実装は、受信時にサポートされていないメッセージを無視しなければならなくて、リモートピアによってサポートされていないメッセージの送信を省略すべきです。異なるメッセージのサポート（異なる「設定」の値）を持つ複数のメッセージ受信者がある場合、いくつかの受信機がサポートしていないメッセージを送信するように動機づけられることができる一つの例があります。このアプローチは、最小可能な受信機が他の人に提供される機能を制限させることを回避します。以下の表は、異なる「設定」ポーズごとのメッセージ送受信支持体（「 - 」のサポートを示す「X」と、非サポートを示す）属性値を要約したものです。"
    },
    {
      "indent": 5,
      "text": "+---+-----------------------------+-----------------------------+\n| # | Send                        | Receive                     |\n|   | PAUSE RESUME PAUSED REFUSED | PAUSE RESUME PAUSED REFUSED |\n+---+-----------------------------+-----------------------------+\n| 1 |   X      X      X      X    |   X      X      X      X    |\n| 2 |   X      X      X      -    |   -      -      X      X    |\n| 3 |   -      -      X      X    |   X      X      X      -    |\n| 4 |   X      X      -      -    |   -      -      X      X    |\n| 5 |   -      -      X      X    |   X      X      -      -    |\n| 6 |   -      -      X      -    |   -      -      X      -    |\n| 7 |   -      -      -      -    |   -      -      X      -    |\n| 8 |   -      -      X      -    |   -      -      -      -    |\n+---+-----------------------------+-----------------------------+",
      "raw": true
    },
    {
      "indent": 8,
      "text": "Figure 7: Supported Messages for Different \"config\" Values",
      "ja": "図7：別の「設定」の値のためにサポートされているメッセージ"
    },
    {
      "indent": 3,
      "text": "In the above description of partial implementations, \"config\" values 2 and 4 correspond to the RTP Mixer in the 'RTP Mixer to Media Sender' use case (Section 3.2), and \"config\" values 3 and 5 correspond to the media sender in that same use case. For that use case, it should be clear that an RTP Mixer implementing only \"config\" values 3 or 5 will not provide a working solution. Similarly, for that use case, a media sender implementing only \"config\" values 2 or 4 will not provide a working solution. Both the RTP Mixer and the media sender will of course work when implementing the full set of messages, corresponding to \"config=1\".",
      "ja": "部分的な実装の上記の説明では、「設定」の値2とユースケースのメディア送信元へのRTPミキサー 'でRTPミキサ4相当（セクション3.2）、および「設定」の値3とメディア送信元に対応する5でその同じユースケース。そのユースケースの場合、それだけで「設定」の値3または5を実装するRTPミキサーは実用的なソリューションを提供しないであろうことは明らかです。同様に、そのユースケースのために、唯一の「設定」の値2または4を実装するメディア送付者は、作業溶液を提供しないであろう。 RTPミキサーとコースワークのメディア送信元の意志「= 1設定」に対応し、メッセージのフルセットを実装両方。"
    },
    {
      "indent": 3,
      "text": "A partial implementation is not suitable for pause/resume support between cascaded RTP Mixers, but it would require support corresponding to \"config=1\" between such RTP Mixers. This is because an RTP Mixer is then also a media sender towards the other RTP Mixer, requiring support for the union of \"config\" values 2 and 3 or \"config\" values 4 and 5, which effectively becomes \"config=1\".",
      "ja": "部分的な実装は、カスケード接続されたRTPミキサー間の休止/再開支援には適していないが、それはそのようなRTPミキサー間「= 1設定」に対応するサポートを必要とするであろう。 RTPミキサーが有効となる「設定」値2及び3又は「設定」値は4と5の組合は、「コンフィグ= 1」のサポートを必要とする、また、他のRTPミキサに向かってメディア送信元であるからです。"
    },
    {
      "indent": 3,
      "text": "As can be seen from Figure 7 above, \"config\" values 2 and 3 differ from \"config\" values 4 and 5 only in that in the latter, the PAUSE/ RESUME message sender (e.g., the RTP Mixer side) does not support local pause (Section 6.4) for any of its own streams and therefore also does not support sending PAUSED.",
      "ja": "上記の図7から分かるように、「設定」の値2及び3は、後者、一時停止/再開メッセージの送信者（例えば、RTPミキサー側）にのみ、図4及び図5は、ローカルサポートしていない「設定」値と異なりますPAUSEDの送信をサポートしていませんので、また、独自のストリームのいずれかの（6.4節）を一時停止。"
    },
    {
      "indent": 3,
      "text": "Partial implementations that only support local pause functionality can declare this capability through \"config\" values 6-8.",
      "ja": "唯一のローカルの一時停止機能をサポートして部分的な実装は、「設定」の値6-8を通じて、この機能を宣言することができます。"
    },
    {
      "indent": 3,
      "text": "Viable fallback rules between different \"config\" values are described in Section 9.1 and Figure 9.",
      "ja": "異なる「設定」の値の間の実行可能な代替規則は、セクション9.1および図9に記載されています。"
    },
    {
      "indent": 3,
      "text": "This is the resulting ABNF [RFC5234], extending the existing ABNF in Section 7.1 of CCM [RFC5104]:",
      "ja": "これは、得られたABNF [RFC5234]、CCM [RFC5104]のセクション7.1で既存のABNFを延びます。"
    },
    {
      "indent": 3,
      "text": "rtcp-fb-ccm-param =/ SP \"pause\" *(SP pause-attr) pause-attr = pause-config ; partial message support / \"nowait\" ; no hold-off period / byte-string ; for future extensions pause-config = \"config=\" pause-config-value pause-config-value = 1*2DIGIT ; byte-string as defined in RFC 4566",
      "ja": "RTCP-FB-CCM-PARAM = / SP \"休止\" *（SPポーズATTR）一時停止、ATTR =一時停止-configと;部分的なメッセージのサポート/「NOWAIT」。何のホールドオフ期間/バイト列ません。将来の拡張のために一時停止-config設定を= \"設定=\" 一時停止-config設定値のポーズ設定値= 1 * 2DIGIT。 RFC 4566で定義されたバイト列"
    },
    {
      "indent": 30,
      "text": "Figure 8: ABNF",
      "ja": "図8：ABNF"
    },
    {
      "indent": 3,
      "text": "An endpoint implementing this specification and using SDP to signal capability SHOULD indicate the new \"pause\" parameter with \"ccm\" signaling but MAY instead use existing \"ccm tmmbr\" signaling [RFC5104] if the limitations in functionality when using TMMBR/TMMBN as described in this specification (Section 5.6) are considered acceptable. In that case, no partial message support is possible. The messages from this specification (Section 8) SHOULD NOT be used towards receivers that did not declare capability to receive those messages.",
      "ja": "エンドポイントこの仕様を実装し、シグナリング「CCM」と新しい「一時停止」パラメータを示すべき能力を知らせるためにSDPを使用してが、機能に制限がTMMBR / TMMBNを使用する場合場合で説明したように代わりに既存の「CCMのtmmbr」シグナリング[RFC5104]を使用するかもしれこの仕様（5.6節）が許容できると考えられています。その場合には、部分的なメッセージのサポートは可能ではありません。この仕様書（第8節）からのメッセージは、それらのメッセージを受信する機能を宣言していない受信機に向けて使用されるべきではありません。"
    },
    {
      "indent": 3,
      "text": "The pause functionality can normally be expected to work independently of the payload type. However, there might exist situations where an endpoint needs to restrict or at least configure the capabilities differently depending on the payload type carrying the media stream. Reasons for this might relate to capabilities to correctly handle media boundaries and avoid any pause or resume operation to occur where it would leave a receiver or decoder with no choice than to attempt to repair or discard the media received just prior to or at the point of resuming.",
      "ja": "ポーズ機能は、通常、独立して、ペイロードタイプの動作が期待できます。しかし、エンドポイントが制限または少なくともメディアストリームを運ぶペイロードタイプに応じて異なる機能を設定する必要がある状況が存在する可能性があります。この理由は、正しくメディアを修復するか、破棄しようとするよりも、メディアの境界を処理し、任意の一時停止を避けるか、それは選択の余地を受信機やデコーダを残してどこに発生する動作を再開するための機能に関連する可能性がある直前またはの時点で受信再開。"
    },
    {
      "indent": 3,
      "text": "There MUST NOT be more than one \"a=rtcp-fb\" line with \"pause\" applicable to a single payload type in the SDP, unless the additional line uses \"*\" as the payload type, in which case \"*\" SHALL be interpreted as applicable to all listed payload types that do not have an explicit \"pause\" specification. The \"config\" pause attribute MUST NOT appear more than once for each \"pause\" CCM parameter. The \"nowait\" pause attribute MUST NOT appear more than once for each \"pause\" CCM parameter.",
      "ja": "複数の「A = RTCP-FB」行は、追加の行は使用しない限り、その場合には「*」でなければならない、ペイロードタイプとして「*」、SDP内の単一のペイロード・タイプに適用可能な「一時停止」とがあってはなりません明示的に「一時停止」の仕様を持っていないすべて記載されているペイロードタイプに該当すると解釈。 「設定」pause属性は、それぞれの「一時停止」CCMパラメータに対して複数回現れてはなりません。 「NOWAIT」pause属性は、それぞれの「一時停止」CCMパラメータに対して複数回現れてはなりません。"
    },
    {
      "indent": 0,
      "text": "9.1. Offer/Answer Use",
      "section_title": true,
      "ja": "9.1. オファー/回答の使用"
    },
    {
      "indent": 3,
      "text": "An offerer implementing this specification needs to include the \"pause\" CCM parameter with a suitable configuration attribute (\"config\") in the SDP, according to what messages it intends to send and desires to receive in the session.",
      "ja": "この仕様を実装するオファー側は、それが送信しようとのセッションで受信しようとするどのようなメッセージによると、SDPに適した構成属性（「設定」）と「一時停止」CCMパラメータを含める必要があります。"
    },
    {
      "indent": 3,
      "text": "In SDP offer/answer, the \"config\" pause attribute and its message directions are interpreted based on the agent providing the SDP. The offerer is described in an offer, and the answerer is described in an answer.",
      "ja": "SDPオファー/アンサーでは、「設定」pause属性とそのメッセージの方向は、SDPを提供するエージェントに基づいて解釈されています。オファー側は、提供に記載されており、回答は答えに記載されています。"
    },
    {
      "indent": 3,
      "text": "An answerer receiving an offer with a \"pause\" CCM line and a \"config\" pause attribute with a certain value, describing a certain capability to send and receive messages, MAY change the \"config\" pause attribute value in the answer to another configuration. The permitted answers are listed in the below table.",
      "ja": "別の構成への回答で「設定」pause属性値を変更することができ、メッセージを送受信するために、特定の機能を記述し、「一時停止」CCMラインと一定の値を持つ「設定」pause属性との申し出を受けた回答。許可の回答は、以下の表に記載されています。"
    },
    {
      "indent": 6,
      "text": "SDP Offer \"config\" value | Permitted SDP Answer \"config\" values\n-------------------------+-------------------------------------\n             1           | 1, 2, 3, 4, 5, 6, 7, 8\n             2           | 3, 4, 5, 6, 7, 8\n             3           | 2, 4, 5, 6, 7, 8\n             4           | 5, 6, 7, 8\n             5           | 4, 6, 7, 8\n             6           | 6, 7, 8\n             7           | 8\n             8           | 7",
      "raw": true
    },
    {
      "indent": 17,
      "text": "Figure 9: \"config\" Values in Offer/Answer",
      "ja": "図9：オファー/回答では、「設定」の値"
    },
    {
      "indent": 3,
      "text": "An offer or answer omitting the \"config\" pause attribute MUST be interpreted as equivalent to \"config=1\". Implementations of this specification MUST NOT use any \"config\" values other than those defined above in an offer or answer and MUST remove the \"pause\" CCM line in the answer when receiving an offer with a \"config\" value it does not understand. In all cases, the answerer MAY also completely remove any \"pause\" CCM line to indicate that it does not understand or desire to use any pause functionality for the affected payload types.",
      "ja": "オファーまたは「設定」ポーズ属性を省略答えは「コンフィグ= 1」に相当すると解釈されなければなりません。この仕様の実装は、提供または回答に上記で定義されたもの以外の任意の「設定」の値を使用してはならない、それは理解していない「設定」の値との申し出を受けたときの答えに「一時停止」CCM行を削除する必要があります。すべての場合において、回答も完全には理解したり、影響を受けたペイロードタイプのための任意のポーズ機能を使用することを望んでいないことを示すために、任意の「一時停止」CCM行を削除することができます。"
    },
    {
      "indent": 3,
      "text": "If the offerer believes that itself and the intended answerer are likely the only endpoints in the RTP session, it MAY include the \"nowait\" pause attribute on the \"pause\" line in the offer. If an answerer receives the \"nowait\" pause attribute on the \"pause\" line in the SDP, and if it has information that the offerer and itself are not the only endpoints in the RTP session, it MUST NOT include any \"nowait\" pause attribute on its \"pause\" line in the SDP answer. The answerer MUST NOT add \"nowait\" on the \"pause\" line in the answer unless it is present on the \"pause\" line in the offer. If both offer and answer contain a \"nowait\" pause attribute, then the hold-off period is configured to 0 at both the offerer and answerer.",
      "ja": "オファー側は、自身と意図した回答は、RTPセッションにおけるエンドポイントだけがそうであると信じているならば、それは提供の「一時停止」の行に「NOWAIT」pause属性を含むかもしれません。回答は、SDPの「一時停止」の行に「NOWAIT」pause属性を受け取り、そしてそれは、オファー自体がRTPセッションにおけるエンドポイントだけではないという情報を持っている場合、それはどんな「NOWAIT」pause属性を含めることはできません場合SDPアンサーでの「一時停止」の行に。それは提供の「一時停止」のライン上に存在しない限り回答は答えで「一時停止」の行に「NOWAIT」を追加してはなりません。申し出と答えの両方が「NOWAIT」pause属性が含まれている場合は、ホールドオフ期間がオファー側とアンサーの両方で0に設定されています。"
    },
    {
      "indent": 3,
      "text": "Unknown pause attributes MUST be ignored in the offer and MUST then be omitted from the answer.",
      "ja": "未知のポーズ属性が提供して無視しなければなりませんし、その後の答えから省略しなければなりません。"
    },
    {
      "indent": 3,
      "text": "If both \"pause\" and \"tmmbr\" are present in the offer, both MAY be included also in the answer, in which case TMMBR/TMMBN MUST NOT be used for pause/resume purposes (with a bitrate value of 0), to avoid signaling ambiguity.",
      "ja": "「一時停止」と「tmmbr」の両方を提供中に存在している場合は、両方がTMMBR / TMMBNを避けるために、（0のビットレート値で）一時停止/再開の目的に使用してはいけません、その場合には答え、にも含まれるかもしれあいまいさを知らせます。"
    },
    {
      "indent": 0,
      "text": "9.2. Declarative Use",
      "section_title": true,
      "ja": "9.2. 宣言型の使用"
    },
    {
      "indent": 3,
      "text": "In declarative use, the SDP is used to configure the node receiving the SDP. This has implications on the interpretation of the SDP signaling extensions defined in this specification.",
      "ja": "宣言的使用では、SDPは、SDPを受信するノードを構成するために使用されます。これは、この仕様で定義されたSDPシグナリング拡張の解釈に影響を与えます。"
    },
    {
      "indent": 3,
      "text": "First, the \"config\" pause attribute and its message directions are interpreted based on the node receiving the SDP, and it describes the RECOMMENDED level of operation. If the joining client does not support the indicated \"config\" value, some RTP session stream optimizations may not be possible in that some RTP streams will not be paused by the joining client, and/or the joining client may not be able to resume and receive wanted streams because they are paused.",
      "ja": "まず、「設定」ポーズ属性とそのメッセージの方向は、SDPを受信したノードに基づいて解釈され、それが動作の推奨レベルを記述する。参加するクライアントが示されている「設定」の値をサポートしていない場合は、いくつかのRTPストリームが参加し、クライアントによって一時停止されず、および/または加入クライアントが再開し、できないかもしれないという点で、いくつかのRTPセッションの流れの最適化ができない場合があります彼らは一時停止されているので、望んでいたストリームを受信します。"
    },
    {
      "indent": 3,
      "text": "Second, the \"nowait\" pause attribute, if included, is followed as specified. It is the responsibility of the declarative SDP sender to determine if a configured node will participate in a session that will be point to point, based on the usage. For example, a conference client being configured for an any source multicast session using the Session Announcement Protocol (SAP) [RFC2974] will not be in a point-to-point session, thus \"nowait\" cannot be included. A Real-Time Streaming Protocol (RTSP) [RFC2326] client receiving a declarative SDP may very well be in a point-to-point session, although it is highly doubtful that an RTSP client would need to support this specification, considering the inherent PAUSE support in RTSP.",
      "ja": "第二に、「NOWAIT」pause属性、含まれている場合、指定されたように続いています。構成されたノードは、使用状況に基づいて、ポイントツーポイントになりますセッションに参加するかどうかを判断するために、宣言SDP送信者の責任です。例えば、会議クライアントは、このように「NOWAIT」を含めることができない、ポイント・ツー・ポイントセッションでなくなり、セッションアナウンスメントプロトコル（SAP）[RFC2974]を使用して、任意のソースマルチキャストセッションのために構成されています。 RTSPクライアントが本来のPAUSEを考慮し、この仕様をサポートする必要があることが非常に疑わしいですが、宣言SDPを受けてリアルタイムストリーミングプロトコル（RTSP）[RFC2326]クライアントは非常によく、ポイントツーポイントセッションであってもよく、 RTSPでサポート。"
    },
    {
      "indent": 3,
      "text": "Unknown pause attributes MUST be ignored.",
      "ja": "未知の一時停止の属性を無視しなければなりません。"
    },
    {
      "indent": 3,
      "text": "If both \"pause\" and \"tmmbr\" are present in the SDP, TMMBR/TMMBN MUST NOT be used for pause/resume purposes (with a bitrate value of 0) to avoid signaling ambiguity.",
      "ja": "「一時停止」と「tmmbr」の両方がSDP内に存在する場合、TMMBR / TMMBNは、曖昧さを避けるために、シグナリング（0のビットレート値で）一時停止/再開のために使用してはいけません。"
    },
    {
      "indent": 0,
      "text": "10. Examples",
      "section_title": true,
      "ja": "10例"
    },
    {
      "indent": 3,
      "text": "The following examples show use of PAUSE and RESUME messages, including use of offer/answer:",
      "ja": "次の例では、オファー/アンサーの使用を含む、PAUSEおよびRESUMEメッセージの使用を示しています。"
    },
    {
      "indent": 3,
      "text": "1. Offer/Answer",
      "section_title": true,
      "ja": "1.オファー/回答"
    },
    {
      "indent": 3,
      "text": "2. Point-to-Point Session",
      "section_title": true,
      "ja": "2.ポイントツーポイントセッション"
    },
    {
      "indent": 3,
      "text": "3. Point to Multipoint using Mixer",
      "section_title": true,
      "ja": "ミキサーを使用して対多3.ポイント"
    },
    {
      "indent": 3,
      "text": "4. Point to Multipoint using Relay",
      "section_title": true,
      "ja": "4.ポイントはリレーを使用して対多"
    },
    {
      "indent": 0,
      "text": "10.1. Offer/Answer",
      "section_title": true,
      "ja": "10.1. オファー/回答"
    },
    {
      "indent": 3,
      "text": "The below figures contain an example of how to show support for pausing and resuming the streams, as well as indicating whether or not the hold-off period can be set to 0.",
      "ja": "以下の図は、一時停止と再開の流れを、ならびにホールドオフ期間を0に設定することができるか否かを示すためのサポートを表示する方法の例を含みます。"
    },
    {
      "indent": 3,
      "text": "v=0 o=alice 3203093520 3203093520 IN IP4 alice.example.com s=Pausing Media t=0 0 c=IN IP4 alice.example.com m=audio 49170 RTP/AVPF 98 99 a=rtpmap:98 G719/48000 a=rtpmap:99 PCMA/8000 a=rtcp-fb:* ccm pause nowait",
      "ja": "V = 0 0 =アリス3203093520 3203093520 IN IP4 alice.example.com S =一時停止メディアT = 0、C = IN IP4 alice.example.com M =オーディオ49170 RTP / AVPF 98 99 = rtpmap：98 G719 / 48000 = rtpmap：99 PCMA / 8000 =のRTCP-FB：* CCMポーズNOWAIT"
    },
    {
      "indent": 11,
      "text": "Figure 10: SDP Offer with Pause and Resume Capability",
      "ja": "図10：一時停止と再開機能を持つSDPオファー"
    },
    {
      "indent": 3,
      "text": "The offerer supports all of the messages defined in this specification, leaving out the optional \"config\" pause attribute. The offerer also believes that it will be the sole receiver of the answerer's stream as well as that the answerer will be the sole receiver of the offerer's stream and thus includes the \"nowait\" pause attribute for the \"pause\" parameter.",
      "ja": "オファー側は、オプションの「設定」pause属性を除外し、この仕様で定義されたメッセージのすべてをサポートしています。オファー側はまた、回答がオファー側の流れの唯一の受信機であること、したがって、「一時停止」パラメータに「NOWAIT」pause属性が含まれることだけでなく、回答者の流れの唯一の受信機になると考えています。"
    },
    {
      "indent": 3,
      "text": "This is the SDP answer:",
      "ja": "これはSDP答えです。"
    },
    {
      "indent": 3,
      "text": "v=0 o=bob 293847192 293847192 IN IP4 bob.example.com s=- t=0 0 c=IN IP4 bob.example.com m=audio 49202 RTP/AVPF 98 a=rtpmap:98 G719/48000 a=rtcp-fb:98 ccm pause config=2",
      "ja": "V = 0 0 =ボブ293847192 293847192 IN IP4 bob.example.com S =  -  T = 0、C = IN IP4 bob.example.com M =オーディオ49202 RTP / AVPF 98 = rtpmap：98 G719 / 48000 = RTCP -fb：98 CCMポーズ設定= 2"
    },
    {
      "indent": 10,
      "text": "Figure 11: SDP Answer with Pause and Resume Capability",
      "ja": "図11：一時停止および再開機能を備えたSDPアンサー"
    },
    {
      "indent": 3,
      "text": "The answerer will not allow its sent streams to be paused or resumed and thus restricts the answer to indicate \"config=2\". It also supports pausing its own RTP streams due to local considerations, which is why \"config=2\" is chosen rather than \"config=4\". The answerer somehow knows that it will not be a point-to-point RTP session and has therefore removed \"nowait\" from the \"pause\" line, meaning that the offerer must use a non-zero hold-off period when being requested to pause the stream.",
      "ja": "回答は、その送信されたストリームが一時停止または再開することができ、したがって、「コンフィグ= 2」を示すために答えを制限しません。また、「設定= 2」ではなく、「コンフィグ= 4」より選ばれる理由である、独自のRTPは、局所的な考慮事項にストリームを一時停止をサポートしています。回答は何とかそれはポイントツーポイントのRTPセッションではありませんので、一時停止を要求されたときに、オファーが非ゼロホールドオフ期間を使用しなければならないことを意味し、「一時停止」行から「NOWAIT」を削除したことを知っていますストリーム。"
    },
    {
      "indent": 3,
      "text": "When using TMMBR 0 / TMMBN 0 to achieve pause and resume functionality, there are no differences in SDP compared to CCM [RFC5104]; therefore, no such examples are included here.",
      "ja": "休止及び再開の機能を実現するためにTMMBR 0 / TMMBN 0を使用する場合、CCM [RFC5104]に比べSDPに差はありません。そのため、そのような例はここに含まれていません。"
    },
    {
      "indent": 0,
      "text": "10.2. Point-to-Point Session",
      "section_title": true,
      "ja": "10.2. ポイントツーポイントセッション"
    },
    {
      "indent": 3,
      "text": "This is the most basic scenario, which involves two participants, each acting as a sender and/or receiver. Any RTP data receiver sends PAUSE or RESUME messages to the sender, which pauses or resumes transmission accordingly. The hold-off period before pausing a stream is 0.",
      "ja": "これは、各送信者および/または受信機として動作し、2人の参加者が関与する最も基本的なシナリオです。任意のRTPデータ受信機は一時停止または一時停止または相応送信を再開する送信者にメッセージを再開送ります。ストリームを一時停止する前に、ホールドオフ期間が0です。"
    },
    {
      "indent": 11,
      "text": "+---------------+                   +---------------+\n|  RTP Sender   |                   | RTP Receiver  |\n+---------------+                   +---------------+\n       :           t1: RTP data           :\n       | -------------------------------> |\n       |           t2: PAUSE(3)           |\n       | <------------------------------- |\n       |       < RTP data paused >        |\n       |           t3: PAUSED(3)          |\n       | -------------------------------> |\n       :       < Some time passes >       :\n       |           t4: RESUME(3)          |\n       | <------------------------------- |\n       |           t5: RTP data           |\n       | -------------------------------> |\n       :       < Some time passes >       :\n       |           t6: PAUSE(4)           |\n       | <------------------------------- |\n       |       < RTP data paused >        |\n       |           t7: PAUSED(4)          |\n       | -------------------------------> |\n       :                                  :",
      "raw": true
    },
    {
      "indent": 10,
      "text": "Figure 12: Pause and Resume Operation in Point to Point",
      "ja": "図12：ポイントツーポイントの動作を一時停止と再開"
    },
    {
      "indent": 3,
      "text": "Figure 12 shows the basic pause and resume operation in a point-to-point scenario. At time t1, an RTP sender sends data to a receiver. At time t2, the RTP receiver requests the sender to pause the stream, using PauseID 3 (which it knew since before in this example). The sender pauses the data and replies with a PAUSED containing the same PauseID. Some time later (at time t4), the receiver requests the sender to resume, which resumes its transmission. The next PAUSE, sent at time t6, contains an updated PauseID (4), with a corresponding PAUSED being sent at time t7.",
      "ja": "図12は、ポイントツーポイントシナリオにおける基本ポーズ及び再開操作を示します。時刻t1において、RTP送信者は、受信機にデータを送信します。時刻t2において、RTP受信機は、（この例では前から知っていた）PauseID 3を使用して、ストリームを一時停止するために、送信者に要求します。送信者は、データを一時停止し、PAUSEDが同じPauseIDを含むで応答します。後でいくつかの時間（時刻t4）は、受信機は、その送信を再開再開する送信者を、要求します。時刻t6で送信次PAUSEは、一時停止時刻t7で送信される対応する、更新PauseID（4）を含みます。"
    },
    {
      "indent": 11,
      "text": "+---------------+                   +---------------+\n|  RTP Sender   |                   | RTP Receiver  |\n+---------------+                   +---------------+\n       :           t1: RTP data           :\n       | -------------------------------> |\n       |           t2: TMMBR 0            |\n       | <------------------------------- |\n       |       < RTP data paused >        |\n       |           t3: TMMBN 0            |\n       | -------------------------------> |\n       :       < Some time passes >       :\n       |           t4: TMMBR 150000       |\n       | <------------------------------- |\n       |           t5: RTP data           |\n       | -------------------------------> |\n       :       < Some time passes >       :\n       |           t6: TMMBR 0            |\n       | <------------------------------- |\n       |       < RTP data paused >        |\n       |           t7: TMMBN 0            |\n       | -------------------------------> |\n       :                                  :",
      "raw": true
    },
    {
      "indent": 12,
      "text": "Figure 13: TMMBR Pause and Resume in Point to Point",
      "ja": "図13：TMMBRの一時停止や、ポイントツーポイントで再開"
    },
    {
      "indent": 3,
      "text": "Figure 13 describes the same point-to-point scenario as above, but using TMMBR/TMMBN signaling.",
      "ja": "図13は、上記と同じポイントツーポイントシナリオを説明するが、TMMBR / TMMBNシグナリングを使用して。"
    },
    {
      "indent": 11,
      "text": "+---------------+                 +----------------+\n| RTP Sender A  |                 | RTP Receiver B |\n+---------------+                 +----------------+\n       :           t1: RTP data           :\n       | -------------------------------> |\n       |       < RTP data paused >        |\n       |           t2: TMMBN {A:0}        |\n       | -------------------------------> |\n       :       < Some time passes >       :\n       |           t3: TMMBR 0            |\n       | <------------------------------- |\n       |           t4: TMMBN {A:0,B:0}    |\n       | -------------------------------> |\n       :       < Some time passes >       :\n       |           t5: TMMBN {B:0}        |\n       | -------------------------------> |\n       :       < Some time passes >       :\n       |           t6: TMMBR 80000        |\n       | <------------------------------- |\n       |           t7: RTP data           |\n       | -------------------------------> |\n       :                                  :",
      "raw": true
    },
    {
      "indent": 17,
      "text": "Figure 14: Unsolicited PAUSED Using TMMBN",
      "ja": "図14：未承諾PAUSEDはTMMBNを使用して"
    },
    {
      "indent": 3,
      "text": "Figure 14 describes the case when an RTP stream sender (A) chooses to pause an RTP stream due to local considerations. Both A and the RTP stream receiver (B) use TMMBR/TMMBN signaling for pause/resume purposes. A decides to pause the RTP stream at time t2 and uses TMMBN 0 to signal PAUSED, including itself in the TMMBN bounding set. At time t3, despite the fact that the RTP stream is still paused, B decides that it is no longer interested in receiving the RTP stream and signals PAUSE by sending a TMMBR 0. As a result of that, the bounding set now contains both A and B, and A sends out a new TMMBN reflecting that. After a while, at time t5, the local considerations that caused A to pause the RTP stream no longer apply, causing it to remove itself from the bounding set and to send a new TMMBN indicating this. At time t6, B decides that it is now interested in receiving the RTP stream again and signals RESUME by sending a TMMBR containing a bitrate value greater than 0, causing A to resume sending RTP data.",
      "ja": "RTPストリームの送信者（A）が局部考慮にRTPストリームを一時停止することを選択した場合図14は、ケースが記載されています。 AとRTPストリームの受信機（B）の両方が一時停止/再開のためにシグナリングTMMBR / TMMBNを使用します。 Aは、時刻t2でRTPストリームを一時停止することを決定し、TMMBN 0 TMMBN境界セットに自身を含む一時停止を通知するために使用します。時刻t3において、RTPストリームがまだ一時停止しているという事実にもかかわらず、Bは、それがもはやその結果TMMBR 0を送信することにより、RTPストリームおよび信号PAUSEを受信することに関心があると判断していない、境界は今、両方のAが含まれている設定しましたそしてB、及びAは、それを反映した新しいTMMBNを送出します。しばらくして、時刻t5で、地元の配慮、それはバウンディングセットから自分自身を削除するには、これを示す新しいTMMBNを送信させ、RTPストリームは適用されません一時停止させています。時刻t6において、Bは、AがRTPデータの送信を再開させ、0よりも大きなビットレート値を含むTMMBRを送信することによって、今再びRTPストリームを受信することに関心があると信号RESUMEと判断します。"
    },
    {
      "indent": 9,
      "text": "+---------------+                       +---------------+\n|  RTP Sender   |                       | RTP Receiver  |\n+---------------+                       +---------------+\n       :           t1: RTP data                :\n       | ------------------------------------> |\n       |                   t2: PAUSE(7), lost  |\n       |                   <---X-------------- |\n       |                                       |\n       |           t3: RTP data                |\n       | ------------------------------------> |\n       :                                       :\n       |   < Time-out, still receiving data >  |\n       |           t4: PAUSE(7)                |\n       | <------------------------------------ |\n       |          < RTP data paused >          |\n       |           t5: PAUSED(7)               |\n       | ------------------------------------> |\n       :          < Some time passes >         :\n       |                   t6: RESUME(7), lost |\n       |                   <---X-------------- |\n       |           t7: RESUME(7)               |\n       | <------------------------------------ |\n       |           t8: RTP data                |\n       | ------------------------------------> |\n       |           t9: RESUME(7)               |\n       | <------------------------------------ |\n       :                                       :",
      "raw": true
    },
    {
      "indent": 9,
      "text": "Figure 15: Pause and Resume Operation with Messages Lost",
      "ja": "図15：失われたメッセージで操作を一時停止と再開"
    },
    {
      "indent": 3,
      "text": "Figure 15 describes what happens if a PAUSE message from an RTP stream receiver does not reach the RTP stream sender. After sending a PAUSE message, the RTP stream receiver waits for a time-out to detect if the RTP stream sender has paused the data transmission or has sent a PAUSED indication according to the rules discussed in Section 6.3. As the PAUSE message is lost on the way (at time t2), RTP data continues to reach to the RTP stream receiver. When the timer expires, the RTP stream receiver schedules a retransmission of the PAUSE message, which is sent at time t4. If the PAUSE message now reaches the RTP stream sender, it pauses the RTP stream and replies with PAUSED.",
      "ja": "図15は、RTPストリームの受信機からPAUSEメッセージは、RTPストリームの送信者に到達しない場合は何が起こるかを説明します。 PAUSEメッセージを送信した後、RTPストリームの受信機は、RTPストリーム送信側がデータ送信を一時停止しているか、またはセクション6.3で説明したルールに従ってPAUSED指示を送信したかどうかを検出するためにタイムアウトを待ちます。 PAUSEメッセージが（時刻t2）途中で失われたように、RTPデータは、RTPストリームの受信機に到達し続けます。タイマが満了すると、RTPストリームの受信スケジュール時刻t4において送信されるPAUSEメッセージの再送。 PAUSEメッセージは、現在RTPストリームの送信元に達した場合、それはRTPストリームを一時停止し、PAUSEDで応答します。"
    },
    {
      "indent": 3,
      "text": "At time t6, the RTP stream receiver wishes to resume the stream again and sends a RESUME, which is lost. This does not cause any severe effect, since there is no requirement to wait until further RESUME requests are sent, and another RESUME is sent already at time t7, which now reaches the RTP stream sender that consequently resumes the stream at time t8. The time interval between t6 and t7 can vary but may, for example, be one RTCP feedback transmission interval as determined by the AVPF rules.",
      "ja": "時刻t6において、RTPストリームの受信機は、再びストリームを再開したいと失われたRESUMEを送信します。さらにRESUME要求が送信され、別のRESUMEは、現在、その結果、時刻t8でストリームを再開RTPストリームの送信者に到達した時刻t7、時すでに送信されるまで待機する必要性がないので、これは、任意の深刻な影響が発生することはありません。 T6とT7との間の時間間隔は変えることができるが、AVPFルールによって決定されるように、例えば、1つのRTCPフィードバックを送信する時間間隔であってもよいです。"
    },
    {
      "indent": 3,
      "text": "The RTP stream receiver did not realize that the RTP stream was resumed in time to stop yet another scheduled RESUME from being sent at time t9. This is, however, harmless since RESUME contains a past PauseID and will be ignored by the RTP stream sender. It will also not cause the RTP stream to be resumed even if the stream was paused again based on a PAUSE from some other receiver before receiving the RESUME, since the current PauseID was updated compared to the one in the stray RESUME, which contains a past PauseID and will be ignored by the RTP stream sender.",
      "ja": "RTPストリームの受信機は、RTPストリームが時刻t9で送信されてからさらに別の予定のRESUMEを停止する時間内に再開されたことを認識しませんでした。 RESUMEは過去PauseIDが含まれており、RTPストリームの送信者によって無視されるので、これは、しかし、無害です。また、現在のPauseIDが過去に含まれている浮遊RESUMEでは、1つに比べて更新されましたので、ストリームは、RESUMEを受信する前に、いくつかの他の受信機からのPAUSEに基づいて、再び一時停止した場合でも、RTPストリームが再開されることはありませんPauseIDとは、RTPストリームの送信者によって無視されます。"
    },
    {
      "indent": 12,
      "text": "+---------------+                 +---------------+\n|  RTP Sender   |                 | RTP Receiver  |\n+---------------+                 +---------------+\n       :           t1: RTP data          :\n       | ------------------------------> |\n       |           t2: PAUSE(11)         |\n       | <------------------------------ |\n       |                                 |\n       |    < Cannot pause RTP data >    |\n       |           t3: REFUSED(11)       |\n       | ------------------------------> |\n       |                                 |\n       |           t4: RTP data          |\n       | ------------------------------> |\n       :                                 :",
      "raw": true
    },
    {
      "indent": 11,
      "text": "Figure 16: Pause Request is Refused in Point to Point",
      "ja": "図16：一時停止要求は、ポイントツーポイントで拒否されます"
    },
    {
      "indent": 3,
      "text": "In Figure 16, the receiver requests to pause the sender, which refuses to pause due to some consideration local to the sender and responds with a REFUSED message.",
      "ja": "図16において、受信要求が原因送信者にローカルいくつかの考慮に一時停止することを拒否し、REFUSEDメッセージで応答送信者を、一時停止します。"
    },
    {
      "indent": 0,
      "text": "10.3. Point to Multipoint Using Mixer",
      "section_title": true,
      "ja": "10.3. ミキサーを使用してポイントツーマルチポイント"
    },
    {
      "indent": 3,
      "text": "An RTP Mixer is an intermediate node connecting different transport-level clouds. The Mixer receives streams from different RTP sources, selects or combines them based on the application's needs, and forwards the generated stream(s) to the destination. The Mixer typically puts its own SSRC(s) in RTP data packets instead of the original source(s).",
      "ja": "RTPミキサは、異なるトランスポートレベルの雲を接続する中間ノードです。ミキサーは、選択またはアプリケーションのニーズに基づいて、それらを組み合わせ、異なるRTPソースからストリームを受信し、宛先に生成されたストリーム（単数または複数）を転送します。ミキサーは、典型的には、代わりに、元のソース（S）のRTPデータパケットに独自のSSRC（単数または複数）を置きます。"
    },
    {
      "indent": 3,
      "text": "The Mixer keeps track of all the streams delivered to the Mixer and how they are currently used. In this example, Mixer (M) selects the video stream to deliver to the RTP stream receiver (R) based on the voice activity of the RTP stream senders (S1 and S2). The video stream will be delivered to R using M's SSRC and with a CSRC indicating the original source.",
      "ja": "ミキサーはミキサーに配信されるすべてのストリームを追跡し、それらが現在どのように使用されています。この例では、ミキサー（M）は、RTPストリームの送信者（S1及びS2）の音声活動に基づいて、RTPストリームの受信機（R）に配信するビデオストリームを選択します。ビデオストリームは、MのSSRCを使用して、元のソースを示すCSRCとRに配信されます。"
    },
    {
      "indent": 3,
      "text": "Note that PauseID is not of any significance for the example and is therefore omitted in the description.",
      "ja": "PauseIDは、例えば、任意の重要ではないので説明は省略されることに注意してください。"
    },
    {
      "indent": 5,
      "text": "+-----+            +-----+            +-----+            +-----+\n|  R  |            |  M  |            | S1  |            | S2  |\n+-----+            +-----+            +-----+            +-----+\n   :                  :   t1:RTP(S1)     :                  :\n   |   t2:RTP(M:S1)   |<-----------------|                  |\n   |<-----------------|                  |                  |\n   |                  |   t3:RTP(S2)     |                  |\n   |                  |<------------------------------------|\n   |                  |   t4: PAUSE(S2)  |                  |\n   |                  |------------------------------------>|\n   |                  |                  |  t5: PAUSED(S2)  |\n   |                  |<------------------------------------|\n   |                  |                  | <S2:No RTP to M> |\n   |                  |   t6: RESUME(S2) |                  |\n   |                  |------------------------------------>|\n   |                  |                  |  t7: RTP to M    |\n   |                  |<------------------------------------|\n   |   t8:RTP(M:S2)   |                  |                  |\n   |<-----------------|                  |                  |\n   |                  |   t9:PAUSE(S1)   |                  |\n   |                  |----------------->|                  |\n   |                  |   t10:PAUSED(S1) |                  |\n   |                  |<-----------------|                  |\n   |                  | <S1:No RTP to M> |                  |\n   :                  :                  :                  :",
      "raw": true
    },
    {
      "indent": 5,
      "text": "Figure 17: Pause and Resume Operation for a Voice-Activated Mixer",
      "ja": "図17：音声活性化ミキサーの操作を一時停止と再開"
    },
    {
      "indent": 3,
      "text": "The session starts at t1 with S1 being the most active speaker and thus being selected as the single video stream to be delivered to R (t2) using M's SSRC but with S1 as the CSRC (indicated after the colon in the figure). Then S2 joins the session at t3 and starts delivering an RTP stream to M. As S2 has less voice activity then S1, M decides to pause S2 at t4 by sending S2 a PAUSE request. At t5, S2 acknowledges with PAUSED and at the same instant stops delivering RTP to M. At t6, the user at S2 starts speaking and becomes the most active speaker and M decides to switch the video stream to S2 and therefore quickly sends a RESUME request to S2. At t7, S2 has received the RESUME request and acts on it by resuming RTP stream delivery to M. When the RTP stream from t7 arrives at M, it switches this RTP stream into its SSRC (M) at t8 and changes the CSRC to S2. As S1 now becomes unused, M issues a PAUSE request to S1 at t9, which is acknowledged at t10 with PAUSED, and the RTP stream from S1 stops being delivered.",
      "ja": "セッションS1が最もアクティブスピーカであるので、R（T2）に配信される単一のビデオストリームとして選択されるMのSSRCを使用してが、CSRC（図中のコロンの後に示されている）などのS1とT1で開始します。その後、S2は、t3で、セッションに参加し、S2が少ない音声活性を有するようにMにRTPストリームを配信開始し、その後S1、MはS2に一時停止要求を送信することによって、t4でS2を一時停止することを決定します。 t5において、S2は、S2で、ユーザが話しを開始しt6においてM.にRTPの提供を停止しPAUSEDで、同じ瞬間に認識し、最もアクティブスピーカーになり、MはS2にビデオストリームを切り替えることを決定し、したがって、迅速RESUME要求を送信しますS2へ。 t7において、S2は、T7からRTPストリームがMに到達すると、それはt8でそのSSRC（M）には、このRTPストリームを切り替えてS2にCSRCを変更MにRTPストリームの配信を再開することにより、その上に再開要求及び作用を受けました。 S1は、現在未使用となるように、Mが一時停止とt10で認められているt9においてS1に一時停止要求を発行し、S1からRTPストリームが配信されて停止します。"
    },
    {
      "indent": 0,
      "text": "10.4. Point to Multipoint Using Translator",
      "section_title": true,
      "ja": "10.4. 翻訳を使用してポイントツーマルチポイント"
    },
    {
      "indent": 3,
      "text": "A transport Relay in an RTP session forwards the message from one peer to all the others. Unlike Mixer, the Relay does not mix the streams or change the SSRC of the messages or RTP media. These examples are to show that the messages defined in this specification can be safely used also in a transport Relay case. The parentheses in the figures contains (Target SSRC, PauseID) information for the messages defined in this specification.",
      "ja": "RTPセッションにおいてトランスポートリレーは、一つのピアから他のすべてのメッセージを転送します。ミキサーとは異なり、リレーは、ストリームを混ぜたり、メッセージのSSRCやRTPメディアは変更されません。これらの例は、この仕様で定義されたメッセージが安全に輸送リレーの場合にも使用することができることを示すことです。図中の括弧は、本明細書で定義されたメッセージのための（ターゲットSSRC、PauseID）情報が含まれています。"
    },
    {
      "indent": 10,
      "text": "+-------------+     +-------------+     +-------------+\n|  Sender(S)  |     |    Relay    |     | Receiver(R) |\n+-------------+     +-------------+     +-------------+\n       : t1: RTP(S)        :                   :\n       |------------------>|                   |\n       |                   | t2: RTP (S)       |\n       |                   |------------------>|\n       |                   | t3: PAUSE(S,3)    |\n       |                   |<------------------|\n       | t4:PAUSE(S,3)     |                   |\n       |<------------------|                   |\n       : <Sender waiting for possible RESUME>  :\n       |          < RTP data paused >          |\n       | t5: PAUSED(S,3)   |                   |\n       |------------------>|                   |\n       |                   | t6: PAUSED(S,3)   |\n       |                   |------------------>|\n       :                   :                   :\n       |                   | t7: RESUME(S,3)   |\n       |                   |<------------------|\n       | t8: RESUME(S,3)   |                   |\n       |<------------------|                   |\n       | t9: RTP (S)       |                   |\n       |------------------>|                   |\n       |                   | t10: RTP (S)      |\n       |                   |------------------>|\n       :                   :                   :",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Figure 18: Pause and Resume Operation between Two Participants Using a Relay",
      "ja": "図18：リレーを使用して2人の参加者の間で運転を一時停止と再開"
    },
    {
      "indent": 3,
      "text": "Figure 18 describes how a Relay can help the receiver (R) in pausing and resuming the sender (S). S sends RTP data to R through the Relay, which just forwards the data without modifying the SSRCs. R sends a PAUSE request to S which, in this example, knows that there may be more receivers of the stream and waits a non-zero hold-off period to see if there is any other receiver that wants to receive the data, and when no disapproving RESUME messages are received, it pauses itself and replies with PAUSED. Similarly R resumes S by sending a RESUME request through the Relay. Since this describes only a single pause and resume operation for a single RTP stream sender, all messages use a single PauseID; in this example, it's three.",
      "ja": "図18は、リレーが送信者（S）を一時停止し、再開に受信機（R）を助けることができる方法について説明します。 Sは単にSSRCsを変更せずにデータを転送するリレーを介してRにRTPデータを送信します。 Rは、この例では、ストリームの複数の受信機が存在し得ることを知っており、データを受信することを望む他の受信機が存在するかどうかを確認するために、非ゼロホールドオフ期間を待つ、SにPAUSE要求を送信し、そして場合何の非難のRESUMEメッセージは、それ自体を一時停止し、PAUSEDで応答し、受信されません。同様にRは、リレーを介して再開要求を送信することにより、Sを再開する。これは、単一のRTPストリームの送信者のみに単一の一時停止と再開の操作を説明しているので、すべてのメッセージは、単一のPauseIDを使用します。この例では、それは3です。"
    },
    {
      "indent": 5,
      "text": "+-----+            +-----+            +-----+            +-----+\n|  S  |            | Rel |            | R1  |            | R2  |\n+-----+            +-----+            +-----+            +-----+\n   : t1:RTP(S)        :                  :                  :\n   |----------------->|                  |                  |\n   |                  | t2:RTP(S)        |                  |\n   |                  |----------------->------------------>|\n   |                  | t3:PAUSE(S,7)    |                  |\n   |                  |<-----------------|                  |\n   | t4:PAUSE(S,7)    |                  |                  |\n   |<-----------------|------------------------------------>|\n   |                  |                  |   t5:RESUME(S,7) |\n   |                  |<------------------------------------|\n   | t6:RESUME(S,7)   |                  |                  |\n   |<-----------------|----------------->|                  |\n   |                  | <RTP stream continues to R1 and R2> |\n   |                  |                  |   t7: PAUSE(S,8) |\n   |                  |<------------------------------------|\n   | t8:PAUSE(S,8)    |                  |                  |\n   |<-----------------|----------------->|                  |\n   :                  :                  :                  :\n   | < Pauses RTP stream >               |                  |\n   | t9:PAUSED(S,8)   |                  |                  |\n   |----------------->|                  |                  |\n   |                  | t10:PAUSED(S,8)  |                  |\n   |                  |----------------->------------------>|\n   :                  :                  :                  :\n   |                  | t11:RESUME(S,8)  |                  |\n   |                  |<-----------------|                  |\n   | t12:RESUME(S,8)  |                  |                  |\n   |<-----------------|------------------------------------>|\n   | t13:RTP(S)       |                  |                  |\n   |----------------->|                  |                  |\n   |                  | t14:RTP(S)       |                  |\n   |                  |----------------->------------------>|\n   :                  :                  :                  :",
      "raw": true
    },
    {
      "indent": 5,
      "text": "Figure 19: Pause and Resume Operation between One Sender and Two Receivers through Relay",
      "ja": "図19：リレーを通じて一つの送信者と二つの受信機間の動作を一時停止と再開"
    },
    {
      "indent": 3,
      "text": "Figure 19 explains the pause and resume operations when a transport Relay (Rel) is involved between a sender (S) and two receivers (R1 and R2) in an RTP session. Each message exchange is represented by the time it happens. At time t1, S starts sending an RTP stream to Rel, which forwards it to R1 and R2. R1 and R2 receives RTP data from Rel at t2. At this point, both R1 and R2 will send RTCP Receiver Reports to S informing that they received S's stream.",
      "ja": "図19は、一時停止を説明し、輸送リレー（相対）は送信者（S）とRTPセッションに2つの受信機（R1およびR2）の間に含まれている場合の動作を再開する。各メッセージ交換は、それが起こる時間で表されます。時刻t1において、Sは、R1とR2に転送のRelにRTPストリームの送信を開始します。 R1及びR2は、t2でのRelからRTPデータを受信します。この時点では、R1とR2の両方がRTCPレシーバは、彼らがSのストリームを受信したことを知らせるSにレポート送信されます。"
    },
    {
      "indent": 3,
      "text": "After some time (at t3), R1 chooses to pause the stream. On receiving the PAUSE request from R1 at t4, S knows that there is at least one receiver that may still want to receive the data and uses a non-zero hold-off period to wait for possible RESUME messages. R2 did also receive the PAUSE request at time t4 and since it still wants to receive the stream, it sends a RESUME for it at time t5, which is forwarded to sender S by Rel. S sees the RESUME at time t6 and continues to send data to Rel, which forwards it to both R1 and R2. At t7, R2 chooses to pause the stream by sending a PAUSE request with an updated PauseID. S still knows that there is more than one receiver (R1 and R2) that may want the stream and again waits a non-zero hold-off period, after which, and not having received any disapproving RESUME messages, it concludes that the stream must be paused. S now stops sending the stream and replies with PAUSED to R1 and R2. When any of the receivers (R1 or R2) choose to resume the stream from S, in this example R1, it sends a RESUME request to S (also seen by R2). S immediately resumes the stream.",
      "ja": "（t3において）いくつかの時間後、R1は、ストリームを一時停止することを選択しました。 t4でR1からPAUSE要求を受信すると、Sは、まだデータを受信したいことがあり、少なくとも一つの受信機があることを知っているし、可能RESUMEメッセージを待つために非ゼロホールドオフ期間を使用しています。 R2はまた、時刻t4でPAUSE要求を受けなかったし、それがまだストリームを受信したいので、のRelにより、送信者Sに転送された時刻t5、でそれのためのRESUMEを送信します。 Sは、時刻t6でRESUMEを見て、R1とR2の両方に転送するのRelにデータを送信し続けます。 t7において、R2は更新PauseIDとPAUSE要求を送信することにより、ストリームを一時停止することを選択しました。 Sは、まだそれが終了し、その後、任意の不承認再開メッセージを受信して​​いない、ストリームをすることができ、複数の受信機（R1及びR2）があることを知っていると、再び非ゼロホールドオフ期間を待つことストリームマスト一時停止します。 Sは現在のストリームの送信を停止し、R1とR2にPAUSEDで応答します。受信機（R1またはR2）のいずれかが、この例ではR1、Sからストリームを再開することを選択した場合、それは（また、R2によって見られる）Sへの再開要求を送信します。 Sはすぐにストリームを再開します。"
    },
    {
      "indent": 3,
      "text": "Consider also an RTP session that includes one or more receivers, paused sender(s), and a Relay. Further assume that a new participant joins the session, which is not aware of the paused sender(s). On receiving knowledge about the newly joined participant, e.g., any RTP traffic or RTCP report (i.e., either SR or RR) from the newly joined participant, the paused sender(s) immediately sends PAUSED indications for the paused streams since there is now a receiver in the session that did not pause the sender(s) and may want to receive the streams. Having this information, the newly joined participant has the same possibility as any other participant to resume the paused streams.",
      "ja": "送信者（単数または複数）を一時停止し、また、1つ以上の受信機を含むRTPセッションを考えると、リレー。さらに、新たな参加者が一時停止し、送信者（複数可）を認識していないセッションを、参加していることを前提としています。今そこにあることから、新たに参加し、参加者から、新たに参加し、参加者についての知識、例えば、任意のRTPトラフィックやRTCPレポート（すなわち、SRやRRのいずれか）を受信すると、一時停止した送信者（複数可）すぐに一時停止したストリームのPAUSED適応症を送信します送信者（複数可）を一時停止していなかったとストリームを受信することができますセッションで受信機。この情報を備え、新たに参加し、参加者は、一時停止ストリームを再開するための他の参加者と同じ可能性を有します。"
    },
    {
      "indent": 0,
      "text": "11. IANA Considerations",
      "section_title": true,
      "ja": "11. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "Per this specification, IANA has made the following registrations:",
      "ja": "この仕様に従って、IANAは、以下の登録をしました。"
    },
    {
      "indent": 3,
      "text": "1. A new value for media stream pause/resume has been registered in the \"FMT Values for RTPFB Payload Types\" registry located at the time of publication at: <http://www.iana.org/assignments/rtp-parameters>",
      "ja": "<http://www.iana.org/assignments/rtp-parameters> 1.メディアストリームの一時停止/再開のための新しい値がで発行時点のものであり、レジストリ「RTPFBペイロードタイプのためのFMT値」に登録されています"
    },
    {
      "indent": 7,
      "text": "Value: 9",
      "ja": "値：9"
    },
    {
      "indent": 7,
      "text": "Name: PAUSE-RESUME",
      "ja": "名前：PAUSE-RESUME"
    },
    {
      "indent": 7,
      "text": "Long Name: Media Pause/Resume",
      "ja": "ロング名前：メディアの一時停止/再開"
    },
    {
      "indent": 7,
      "text": "Reference: RFC 7728",
      "ja": "参考：RFC 7728"
    },
    {
      "indent": 3,
      "text": "2. A new value \"pause\" to be registered with IANA in the \"Codec Control Messages\" registry located at the time of publication at: <http://www.iana.org/assignments/sdp-parameters>",
      "ja": "2で発行時位置「コーデックコントロールメッセージ」レジストリにIANAに登録される新しい値「一時停止」：<http://www.iana.org/assignments/sdp-parameters>"
    },
    {
      "indent": 7,
      "text": "Value Name: pause",
      "ja": "値の名前：一時停止"
    },
    {
      "indent": 7,
      "text": "Long Name: Media Pause/Resume",
      "ja": "ロング名前：メディアの一時停止/再開"
    },
    {
      "indent": 7,
      "text": "Usable with: ccm",
      "ja": "CCM：で使用可能"
    },
    {
      "indent": 7,
      "text": "Reference: RFC 7728",
      "ja": "参考：RFC 7728"
    },
    {
      "indent": 0,
      "text": "12. Security Considerations",
      "section_title": true,
      "ja": "12.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "This document extends CCM [RFC5104] and defines new messages, i.e., PAUSE, RESUME, PAUSED, and REFUSED. The exchange of these new messages has some security implications, which need to be addressed by the user.",
      "ja": "この文書では、CCM [RFC5104]を延びており、新たなメッセージを定義、すなわち、一時停止、再開、一時停止、および拒否しました。これらの新しいメッセージの交換は、ユーザーが対処する必要があるいくつかのセキュリティ上の影響を、持っています。"
    },
    {
      "indent": 3,
      "text": "The messages defined in this specification can have a substantial impact on the perceived media quality if used in a malicious way. First of all, there is the risk for Denial of Service (DoS) on any RTP session that uses the PAUSE-RESUME functionality. By injecting one or more PAUSE requests into the RTP session, an attacker can potentially prevent any media from flowing, especially when the hold-off period is zero. The injection of PAUSE messages is quite simple, requiring knowledge of the SSRC and the PauseID. This information is visible to an on-path attacker unless RTCP messages are encrypted. Even off-path attacks are possible as signaling messages often carry the SSRC value, while the 16-bit PauseID has to be guessed or tried. The way of protecting the RTP session from these injections is to perform source authentication combined with message integrity to prevent other than intended session participants from sending these messages. The security solution should provide replay protection. Otherwise, if a session is long lived enough for the PauseID value to wrap, an attacker could replay old messages at the appropriate time to influence the media sender state. There exist several different choices for securing RTP sessions to prevent this type of attack. The Secure Real-time Transport Protocol (SRTP) is the most common, but also other methods exist as discussed in \"Options for Securing RTP Sessions\" [RFC7201].",
      "ja": "悪質な方法で使用する場合は、この仕様で定義されたメッセージは、知覚されるメディアの品質に大きな影響を持つことができます。まず、PAUSE-RESUME機能を使用するすべてのRTPセッションにサービス拒否（DoS）のためのリスクがあります。 RTPセッションに一つ以上の一時停止要求を注入することにより、攻撃者は、ホールドオフ期間がゼロである場合は特に、流れから任意のメディアを防止することができます。 PAUSEメッセージの注入は、SSRCとPauseIDの知識を必要とする、非常に簡単です。 RTCPメッセージが暗号化されていない限り、この情報は、上のパス攻撃者に見えています。オフパス攻撃は16ビットPauseIDが推測又は試みなければならないしながら、多くの場合、SSRC値を運ぶシグナリングメッセージとして可能です。これらの注入からRTPセッションを保護する方法は、これらのメッセージを送信するから、他の意図したよりもセッション参加者を防ぐために、メッセージの整合性と組み合わせたソース認証を実行することです。セキュリティソリューションは、リプレイ保護を提供する必要があります。セッションが長いラップするPauseID値のために十分に住んでいたされている場合それ以外の場合は、攻撃者がメディアの送信者の状態に影響を与えるために適切な時に古いメッセージを再生することができます。この種の攻撃を防ぐために、RTPセッションを確保するためのいくつかのさまざまな選択肢が存在します。セキュアリアルタイムトランスポートプロトコル（SRTP）が最も一般的であるが、[RFC7201]「RTPセッションを確保するためのオプション」で説明したように、他の方法が存在します。"
    },
    {
      "indent": 3,
      "text": "Most of the methods for securing RTP, however, do not provide source authentication of each individual participant in a multiparty use case. In case one of the session participants is malicious, it can wreck significant havoc within the RTP session and similarly cause a DoS on the RTP session from within. That damage can also be attempted to be obfuscated by having the attacker impersonate other endpoints within the session. These attacks can be mitigated by using a solution that provides true source authentication of all participants' RTCP packets. However, that has other implications. For multiparty sessions including a middlebox, that middlebox is RECOMMENDED to perform checks on all forwarded RTCP packets so that each participant only uses its set of SSRCs to prevent the attacker from utilizing another participant's SSRCs. An attacker that can send a PAUSE request that does not reach any participants other than the media sender can cause a stream to be paused without providing opportunity for opposition. This is mitigated in multiparty topologies that ensure that requests are seen by all or most of the RTP session participants, enabling these participants to send a RESUME. In topologies with middleboxes that consume and process PAUSE requests, the middlebox can also mitigate such behavior as it will commonly not generate or forward a PAUSE message if it knows of another participant having use for the media stream.",
      "ja": "RTPを確保するための方法の多くは、しかし、マルチパーティのユースケースでは、個々の参加者の元認証を提供しません。場合は、セッション参加者の一人は、それがRTPセッション内の重要な大混乱を台無しと同様に内からRTPセッションにDoS攻撃を引き起こす可能性があり、悪意のあるです。その損傷はまた、攻撃者はセッション内の他のエンドポイントを偽装したことにより、難読化しようとすることができます。これらの攻撃は、すべての参加者のRTCPパケットの真の源認証を提供するソリューションを使用することによって緩和することができます。しかし、それは他の意味を持っています。ミドル含め、マルチパーティセッションでは、そのミドルは、各参加者が唯一の他の参加者のSSRCsを利用し、攻撃者を防ぐためにSSRCsのセットを使用するように、すべての転送RTCPパケットのチェックを実行することをお勧めします。メディアの送信者以外の参加者には到達しないPAUSE要求を送信することができ、攻撃者は、ストリームは、反対のための機会を設けることなく、一時停止させることができます。これは、要求がRESUMEを送信するためにこれらの参加を可能にする、RTPセッションの参加者のすべてまたは大部分で見られることを保証する、マルチパーティトポロジに軽減されます。それはメディアストリームのために使用した別の参加者を知っているならば、それは一般的にPAUSEメッセージを生成したり、転送しませんように消費ミドルボックスとプロセスPAUSE要求にトポロジでは、ミドルにも、そのような行動を軽減することができます。"
    },
    {
      "indent": 3,
      "text": "The above text has been focused on using the PAUSE message as the tool for malicious impact on the RTP session. That is because of the greater impact from denying users access to RTP media streams. In contrast, if an attacker attempts to use RESUME in a malicious purpose, it will result in the media streams being delivered. However, such an attack basically prevents the use of the pause and resume functionality. Thus, it potentially forces a reduction of the media quality due to limitation in available resources, like bandwidth that must be shared.",
      "ja": "上記のテキストは、RTPセッション上の悪質な影響のためのツールとして、PAUSEメッセージを使用して注目されています。つまりためのRTPメディアストリームへのユーザーのアクセスを拒否するから大きな影響です。攻撃者が悪意のある目的でRESUMEを使用しようとは対照的に、それはメディアストリームが配信されることになります。しかし、このような攻撃は基本的に一時停止と再開機能の使用を防止します。したがって、それは潜在的に共有されなければならない帯域幅のように、利用可能なリソースの制限によるメディア品質の削減を強制します。"
    },
    {
      "indent": 3,
      "text": "The session establishment signaling is also a potential venue of attack, as that can be used to prevent the enabling of pause and resume functionality by modifying the signaling messages. The above mitigation of attacks based on source authentication also requires the signaling system to securely handle identities and assert that only the intended identities are allowed into the RTP session and provided with the relevant security contexts.",
      "ja": "そのシグナリングメッセージを修正することによって、一時停止および再開機能の有効化を防止するために使用することができるようにセッション確立シグナリングは、また、攻撃の潜在的な場所です。ソース認証に基づいた攻撃の上記の緩和にもしっかりとアイデンティティを処理し、唯一の目的とするアイデンティティはRTPセッションに許可されると、関連するセキュリティコンテキストを備えていることを主張するシグナリングシステムが必要です。"
    },
    {
      "indent": 0,
      "text": "13. References",
      "section_title": true,
      "ja": "13.参考文献"
    },
    {
      "indent": 0,
      "text": "13.1. Normative References",
      "section_title": true,
      "ja": "13.1. 引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <http://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<http://www.rfc-editor.org/info/ RFC2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC3264] Rosenberg, J. and H. Schulzrinne, \"An Offer/Answer Model with Session Description Protocol (SDP)\", RFC 3264, DOI 10.17487/RFC3264, June 2002, <http://www.rfc-editor.org/info/rfc3264>.",
      "ja": "[RFC3264]ローゼンバーグ、J.、およびH. Schulzrinneと、RFC 3264、DOI 10.17487 / RFC3264、2002年6月 \"セッション記述プロトコル（SDP）とのオファー/アンサーモデル\"、<http://www.rfc-editor.org /情報/ RFC3264>。"
    },
    {
      "indent": 3,
      "text": "[RFC3550] Schulzrinne, H., Casner, S., Frederick, R., and V. Jacobson, \"RTP: A Transport Protocol for Real-Time Applications\", STD 64, RFC 3550, DOI 10.17487/RFC3550, July 2003, <http://www.rfc-editor.org/info/rfc3550>.",
      "ja": "[RFC3550] Schulzrinneと、H.、Casner、S.、フレデリック、R.、およびV.ヤコブソン、 \"RTP：リアルタイムアプリケーションのためのトランスポートプロトコル\"、STD 64、RFC 3550、DOI 10.17487 / RFC3550、2003年7月、 <http://www.rfc-editor.org/info/rfc3550>。"
    },
    {
      "indent": 3,
      "text": "[RFC4566] Handley, M., Jacobson, V., and C. Perkins, \"SDP: Session Description Protocol\", RFC 4566, DOI 10.17487/RFC4566, July 2006, <http://www.rfc-editor.org/info/rfc4566>.",
      "ja": "[RFC4566]ハンドリー、M.、ヤコブソン、V.、およびC.パーキンス、 \"SDP：セッション記述プロトコル\"、RFC 4566、DOI 10.17487 / RFC4566、2006年7月、<http://www.rfc-editor.org/情報/ RFC4566>。"
    },
    {
      "indent": 3,
      "text": "[RFC4585] Ott, J., Wenger, S., Sato, N., Burmeister, C., and J. Rey, \"Extended RTP Profile for Real-time Transport Control Protocol (RTCP)-Based Feedback (RTP/AVPF)\", RFC 4585, DOI 10.17487/RFC4585, July 2006, <http://www.rfc-editor.org/info/rfc4585>.",
      "ja": "[RFC4585]オット、J.、ウェンガー、S.、佐藤、N.、Burmeister、C.、およびJ.レイ「ベースのフィードバック（RTP / AVPF）リアルタイムトランスポート制御プロトコル（RTCP）の拡張RTPプロファイル」、RFC 4585、DOI 10.17487 / RFC4585、2006年7月、<http://www.rfc-editor.org/info/rfc4585>。"
    },
    {
      "indent": 3,
      "text": "[RFC5104] Wenger, S., Chandra, U., Westerlund, M., and B. Burman, \"Codec Control Messages in the RTP Audio-Visual Profile with Feedback (AVPF)\", RFC 5104, DOI 10.17487/RFC5104, February 2008, <http://www.rfc-editor.org/info/rfc5104>.",
      "ja": "[RFC5104]ウェンガー、S.、チャンドラ、U.、ウェスター、M.、およびB.ビルマ、RFC 5104 \"フィードバック（AVPF）とRTPオーディオビジュアルプロファイルにおけるコーデック制御メッセージ\"、DOI 10.17487は/ RFC5104 2月2008年、<http://www.rfc-editor.org/info/rfc5104>。"
    },
    {
      "indent": 3,
      "text": "[RFC5234] Crocker, D., Ed. and P. Overell, \"Augmented BNF for Syntax Specifications: ABNF\", STD 68, RFC 5234, DOI 10.17487/RFC5234, January 2008, <http://www.rfc-editor.org/info/rfc5234>.",
      "ja": "[RFC5234]クロッカー、D.、エド。そして、P. Overell、 \"構文仕様のための増大しているBNF：ABNF\"、STD 68、RFC 5234、DOI 10.17487 / RFC5234、2008年1月、<http://www.rfc-editor.org/info/rfc5234>。"
    },
    {
      "indent": 3,
      "text": "[RFC5245] Rosenberg, J., \"Interactive Connectivity Establishment (ICE): A Protocol for Network Address Translator (NAT) Traversal for Offer/Answer Protocols\", RFC 5245, DOI 10.17487/RFC5245, April 2010, <http://www.rfc-editor.org/info/rfc5245>.",
      "ja": "[RFC5245]ローゼンバーグ、J.、 \"インタラクティブ接続確立（ICE）：オファー/回答プロトコルのためのネットワークアドレス変換器（NAT）トラバーサルのための議定書\"、RFC 5245、DOI 10.17487 / RFC5245、2010年4月、<のhttp：// WWW .rfc-editor.org /情報/ rfc5245>。"
    },
    {
      "indent": 3,
      "text": "[RFC6263] Marjou, X. and A. Sollaud, \"Application Mechanism for Keeping Alive the NAT Mappings Associated with RTP / RTP Control Protocol (RTCP) Flows\", RFC 6263, DOI 10.17487/RFC6263, June 2011, <http://www.rfc-editor.org/info/rfc6263>.",
      "ja": "[RFC6263] Marjou、X.とA. Sollaud、DOI 10.17487 / RFC6263、2011年6月、<HTTP、RFC 6263、 \"RTP / RTP制御プロトコル（RTCP）フローとNATマッピング関連をアライブ維持するための塗布機構\"：// www.rfc-editor.org/info/rfc6263>。"
    },
    {
      "indent": 0,
      "text": "13.2. Informative References",
      "section_title": true,
      "ja": "13.2. 参考文献"
    },
    {
      "indent": 3,
      "text": "[MULTI-STREAM-OPT] Lennox, J., Westerlund, M., Wu, W., and C. Perkins, \"Sending Multiple Media Streams in a Single RTP Session: Grouping RTCP Reception Statistics and Other Feedback\", Work in Progress, draft-ietf-avtcore-rtp-multi-stream-optimisation-11, December 2015.",
      "ja": "[MULTI-STREAM-OPT]レノックス、J.、ウェスター、M.、呉、W.、およびC.パーキンス、「シングルRTPセッションで複数のメディアストリームを送信：グループ化RTCPレセプション統計やその他のフィードバック」、進行中の作業は、 、ドラフト-IETF-avtcore-RTP-マルチストリーム最適化-11、2015年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC2326] Schulzrinne, H., Rao, A., and R. Lanphier, \"Real Time Streaming Protocol (RTSP)\", RFC 2326, DOI 10.17487/RFC2326, April 1998, <http://www.rfc-editor.org/info/rfc2326>.",
      "ja": "[RFC2326] SchulzrinneとH.とラオとA.、およびR. Lanphier、 \"リアルタイムのストリーミングプロトコル（RTSP）\"、RFC 2326、DOI 10.17487 / RFC2326、1998年4月、<のhttp：//www.rfc-editor。組織/情報/ RFC2326>。"
    },
    {
      "indent": 3,
      "text": "[RFC2974] Handley, M., Perkins, C., and E. Whelan, \"Session Announcement Protocol\", RFC 2974, DOI 10.17487/RFC2974, October 2000, <http://www.rfc-editor.org/info/rfc2974>.",
      "ja": "[RFC2974]ハンドレー、M.、パーキンス、C.、およびE.ウィーラン、 \"セッション告知プロトコル\"、RFC 2974、DOI 10.17487 / RFC2974、2000年10月<http://www.rfc-editor.org/info/ rfc2974>。"
    },
    {
      "indent": 3,
      "text": "[RFC3261] Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston, A., Peterson, J., Sparks, R., Handley, M., and E. Schooler, \"SIP: Session Initiation Protocol\", RFC 3261, DOI 10.17487/RFC3261, June 2002, <http://www.rfc-editor.org/info/rfc3261>.",
      "ja": "[RFC3261]ローゼンバーグ、J.、Schulzrinneと、H.、カマリロ、G.、ジョンストン、A.、ピーターソン、J.、スパークス、R.、ハンドレー、M.、およびE.学生、 \"SIP：セッション開始プロトコル\" 、RFC 3261、DOI 10.17487 / RFC3261、2002年6月、<http://www.rfc-editor.org/info/rfc3261>。"
    },
    {
      "indent": 3,
      "text": "[RFC3611] Friedman, T., Ed., Caceres, R., Ed., and A. Clark, Ed., \"RTP Control Protocol Extended Reports (RTCP XR)\", RFC 3611, DOI 10.17487/RFC3611, November 2003, <http://www.rfc-editor.org/info/rfc3611>.",
      "ja": "[RFC3611]フリードマン、T.、エド。、カセレス、R.、エド。、およびA.クラーク、エド。、 \"RTP制御プロトコル拡張レポート（RTCP XR）\"、RFC 3611、DOI 10.17487 / RFC3611、2003年11月、 <http://www.rfc-editor.org/info/rfc3611>。"
    },
    {
      "indent": 3,
      "text": "[RFC6190] Wenger, S., Wang, Y., Schierl, T., and A. Eleftheriadis, \"RTP Payload Format for Scalable Video Coding\", RFC 6190, DOI 10.17487/RFC6190, May 2011, <http://www.rfc-editor.org/info/rfc6190>.",
      "ja": "[RFC6190]ウェンガー、S.、王、Y.、Schierl、T.、およびA. Eleftheriadis、 \"スケーラブルビデオ符号化のためのRTPペイロードフォーマット\"、RFC 6190、DOI 10.17487は/ RFC6190、2011年5月、<のhttp：// WWW .rfc-editor.org /情報/ rfc6190>。"
    },
    {
      "indent": 3,
      "text": "[RFC7201] Westerlund, M. and C. Perkins, \"Options for Securing RTP Sessions\", RFC 7201, DOI 10.17487/RFC7201, April 2014, <http://www.rfc-editor.org/info/rfc7201>.",
      "ja": "[RFC7201]ウェスター、M.とC.パーキンス、 \"RTPセッションを確保するためのオプション\"、RFC 7201、DOI 10.17487 / RFC7201、2014年4月、<http://www.rfc-editor.org/info/rfc7201>。"
    },
    {
      "indent": 3,
      "text": "[RFC7478] Holmberg, C., Hakansson, S., and G. Eriksson, \"Web Real-Time Communication Use Cases and Requirements\", RFC 7478, DOI 10.17487/RFC7478, March 2015, <http://www.rfc-editor.org/info/rfc7478>.",
      "ja": "[RFC7478] Holmbergの、C.、Hakansson、S.、およびG.エリクソン、 \"ウェブリアルタイム通信ユースケースと要件\"、RFC 7478、DOI 10.17487 / RFC7478、2015年3月、<のhttp：//www.rfc- editor.org/info/rfc7478>。"
    },
    {
      "indent": 3,
      "text": "[RFC7656] Lennox, J., Gross, K., Nandakumar, S., Salgueiro, G., and B. Burman, Ed., \"A Taxonomy of Semantics and Mechanisms for Real-Time Transport Protocol (RTP) Sources\", RFC 7656, DOI 10.17487/RFC7656, November 2015, <http://www.rfc-editor.org/info/rfc7656>.",
      "ja": "[RFC7656]レノックス、J.、グロス、K.、Nandakumar、S.、Salgueiro、G.、およびB.ビルマ、エド。、 \"リアルタイムトランスポートプロトコルのための意味論およびメカニズムの分類（RTP）ソース\"、 RFC 7656、DOI 10.17487 / RFC7656、2015年11月、<http://www.rfc-editor.org/info/rfc7656>。"
    },
    {
      "indent": 3,
      "text": "[RFC7667] Westerlund, M. and S. Wenger, \"RTP Topologies\", RFC 7667, DOI 10.17487/RFC7667, November 2015, <http://www.rfc-editor.org/info/rfc7667>.",
      "ja": "[RFC7667]ウェスター、M.およびS.ウェンガー、 \"RTPトポロジ\"、RFC 7667、DOI 10.17487 / RFC7667、2015年11月、<http://www.rfc-editor.org/info/rfc7667>。"
    },
    {
      "indent": 3,
      "text": "[SDP-SIMULCAST] Burman, B., Westerlund, M., Nandakumar, S., and M. Zanaty, \"Using Simulcast in SDP and RTP Sessions\", Work in Progress, draft-ietf-mmusic-sdp-simulcast-04, February 2016.",
      "ja": "[SDP-サイマル]ビルマ、B.、ウェスター、M.、Nandakumar、S.、およびM. Zanaty、 \"SDP及びRTPセッションにサイマルキャストを使用して\" 進行中で働いて、ドラフトIETF-MMUSIC-SDP-サイマル-04 、2016年2月。"
    },
    {
      "indent": 0,
      "text": "Acknowledgments",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Daniel Grondal made valuable contributions during the initial versions of this document. The authors would also like to thank Emil Ivov, Christian Groves, David Mandelberg, Meral Shirazipour, Spencer Dawkins, Bernard Aboba, and Ben Campbell, who provided valuable review comments.",
      "ja": "ダニエルGrondalは、このドキュメントの初期バージョンの中に貴重な貢献をしました。著者らはまた、貴重なレビューコメントを提供エミールIvov、クリスチャン・グローブス、デビッドMandelberg、Meral Shirazipour、スペンサードーキンスバーナードAboba、ベン・キャンベルを、感謝したいと思います。"
    },
    {
      "indent": 0,
      "text": "Contributors",
      "ja": "協力者"
    },
    {
      "indent": 3,
      "text": "Daniel Grondal contributed in the creation and writing of early versions of this specification. Christian Groves contributed significantly to the SDP \"config\" pause attribute and its use in offer/answer.",
      "ja": "ダニエルGrondalは、この仕様の初期バージョンの作成と書き込みに貢献しました。クリスチャン・グローブスは、SDP「設定」pause属性とオファー/アンサーでの使用に大きく貢献しました。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Bo Burman Ericsson Kistavagen 25 SE - 164 80 Kista Sweden",
      "ja": "ボービルマエリクソンKistavagen 25 SE  -  164 80シスタ、スウェーデン"
    },
    {
      "indent": 3,
      "text": "Email: bo.burman@ericsson.com",
      "ja": "メール：bo.burman@ericsson.com"
    },
    {
      "indent": 3,
      "text": "Azam Akram Ericsson Farogatan 6 SE - 164 80 Kista Sweden",
      "ja": "アザムアクラム・エリクソンFarogatan 6 SE  -  164 80シスタスウェーデン"
    },
    {
      "indent": 3,
      "text": "Phone: +46107142658 Email: akram.muhammadazam@gmail.com URI: www.ericsson.com",
      "ja": "電話番号：+46107142658 Eメール：akram.muhammadazam@gmail.com URI：www.ericsson.com"
    },
    {
      "indent": 3,
      "text": "Roni Even Huawei Technologies Tel Aviv Israel",
      "ja": "ロニでも華為技術テルアビブイスラエル"
    },
    {
      "indent": 3,
      "text": "Email: roni.even@mail01.huawei.com",
      "ja": "メール：roni.even@mail01.huawei.com"
    },
    {
      "indent": 3,
      "text": "Magnus Westerlund Ericsson Farogatan 6 SE - 164 80 Kista Sweden",
      "ja": "マグヌスウェスターエリクソンFärögatan6 SE  -  164 80シスタ、スウェーデン"
    },
    {
      "indent": 3,
      "text": "Phone: +46107148287 Email: magnus.westerlund@ericsson.com",
      "ja": "電話番号：+46107148287 Eメール：magnus.westerlund@ericsson.com"
    }
  ]
}