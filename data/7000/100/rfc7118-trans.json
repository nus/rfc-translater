{
  "title": {
    "text": "RFC 7118 - The WebSocket Protocol as a Transport for the Session Initiation Protocol (SIP)",
    "ja": "RFC 7118 - セッション開始プロトコルのトランスポートとしてのWebSocketプロトコル（SIP）"
  },
  "number": 7118,
  "created_at": "2019-10-28 19:40:02.870197+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                   I. Baz Castillo\nRequest for Comments: 7118                            J. Millan Villegas\nCategory: Standards Track                                      Versatica\nISSN: 2070-1721                                               V. Pascual\n                                                                  Quobis\n                                                            January 2014",
      "raw": true
    },
    {
      "indent": 13,
      "text": "The WebSocket Protocol as a Transport for the\n      Session Initiation Protocol (SIP)",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "The WebSocket protocol enables two-way real-time communication between clients and servers in web-based applications. This document specifies a WebSocket subprotocol as a reliable transport mechanism between Session Initiation Protocol (SIP) entities to enable use of SIP in web-oriented deployments.",
      "ja": "WebSocketプロトコルは、Webベースのアプリケーションにおけるクライアントとサーバ間の双方向リアルタイム通信を可能にします。この文書では、Web指向の展開でSIPの使用を可能にするためのセッション開始プロトコル（SIP）エンティティ間の信頼性のあるトランスポートメカニズムとしてのWebSocketのサブプロトコルを指定します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 5741のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc7118.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc7118で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2014 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2014 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3\n2.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   3\n  2.1.  Definitions . . . . . . . . . . . . . . . . . . . . . . .   3\n3.  The WebSocket Protocol  . . . . . . . . . . . . . . . . . . .   3\n4.  The WebSocket SIP Subprotocol . . . . . . . . . . . . . . . .   4\n  4.1.  Handshake . . . . . . . . . . . . . . . . . . . . . . . .   4\n  4.2.  SIP Encoding  . . . . . . . . . . . . . . . . . . . . . .   5\n5.  SIP WebSocket Transport . . . . . . . . . . . . . . . . . . .   6\n  5.1.  Via Transport Parameter . . . . . . . . . . . . . . . . .   6\n  5.2.  SIP URI Transport Parameter . . . . . . . . . . . . . . .   6\n  5.3.  Via \"received\" Parameter  . . . . . . . . . . . . . . . .   7\n  5.4.  SIP Transport Implementation Requirements . . . . . . . .   7\n  5.5.  Locating a SIP Server . . . . . . . . . . . . . . . . . .   8\n6.  Connection Keep-Alive . . . . . . . . . . . . . . . . . . . .   8\n7.  Authentication  . . . . . . . . . . . . . . . . . . . . . . .   8\n8.  Examples  . . . . . . . . . . . . . . . . . . . . . . . . . .  10\n  8.1.  Registration  . . . . . . . . . . . . . . . . . . . . . .  10\n  8.2.  INVITE Dialog through a Proxy . . . . . . . . . . . . . .  12\n9.  Security Considerations . . . . . . . . . . . . . . . . . . .  16\n  9.1.  Secure WebSocket Connection . . . . . . . . . . . . . . .  16\n  9.2.  Usage of \"sips\" Scheme  . . . . . . . . . . . . . . . . .  16\n10. IANA Considerations . . . . . . . . . . . . . . . . . . . . .  16\n  10.1.  Registration of the WebSocket SIP Subprotocol  . . . . .  16\n  10.2.  Registration of New NAPTR Service Field Values . . . . .  17\n  10.3.  SIP/SIPS URI Parameters Subregistry  . . . . . . . . . .  17\n  10.4.  Header Fields Subregistry  . . . . . . . . . . . . . . .  17\n  10.5.  Header Field Parameters and Parameter Values Subregistry  17\n  10.6.  SIP Transport Subregistry  . . . . . . . . . . . . . . .  18\n11. Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  18\n12. References  . . . . . . . . . . . . . . . . . . . . . . . . .  18\n  12.1.  Normative References . . . . . . . . . . . . . . . . . .  18\n  12.2.  Informative References . . . . . . . . . . . . . . . . .  19\nAppendix A.  Authentication Use Cases . . . . . . . . . . . . . .  21\n  A.1.  Just SIP Authentication . . . . . . . . . . . . . . . . .  21\n  A.2.  Just Web Authentication . . . . . . . . . . . . . . . . .  21\n  A.3.  Cookie-Based Authentication . . . . . . . . . . . . . . .  22\nAppendix B.  Implementation Guidelines  . . . . . . . . . . . . .  22\n  B.1.  SIP WebSocket Client Considerations . . . . . . . . . . .  23\n  B.2.  SIP WebSocket Server Considerations . . . . . . . . . . .  24",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "The WebSocket protocol [RFC6455] enables message exchange between clients and servers on top of a persistent TCP connection (optionally secured with Transport Layer Security (TLS) [RFC5246]). The initial protocol handshake makes use of HTTP [RFC2616] semantics, allowing the WebSocket protocol to reuse existing HTTP infrastructure.",
      "ja": "WebSocketプロトコル[RFC6455]は（必要に応じてトランスポート層セキュリティ（TLS）[RFC5246]で固定）永続的なTCP接続の上にクライアントとサーバ間のメッセージ交換を可能にします。初期プロトコルハンドシェークはのWebSocketプロトコルは、既存のHTTPインフラストラクチャを再利用することができ、HTTP [RFC2616]のセマンティクスを使用しています。"
    },
    {
      "indent": 3,
      "text": "Modern web browsers include a WebSocket client stack complying with the WebSocket API [WS-API] as specified by the W3C. It is expected that other client applications (those running in personal computers and devices such as smartphones) will also make a WebSocket client stack available. The specification in this document enables use of SIP in these scenarios.",
      "ja": "最新のWebブラウザは、W3Cによって指定されたのWebSocket API [WS-API]に準拠のWebSocketクライアント・スタックが含まれます。他のクライアント・アプリケーション（スマートフォンなどのパーソナルコンピュータやデバイスで実行されているもの）ものWebSocketクライアントスタックが利用できるようにすることが期待されます。このドキュメントの仕様では、これらのシナリオでSIPの使用を可能にします。"
    },
    {
      "indent": 3,
      "text": "This specification defines a WebSocket subprotocol (as defined in Section 1.9 of [RFC6455]) for transporting SIP messages between a WebSocket client and server, a reliable and message-boundary-preserving transport for SIP, and DNS Naming Authority Pointer (NAPTR) [RFC3403] service values and procedures for SIP entities implementing the WebSocket transport. Media transport is out of the scope of this document.",
      "ja": "この仕様は、のWebSocketクライアントとサーバ、SIPのための信頼性の高いメッセージ境界保存輸送、及び権限ポインタ（NAPTR）を命名DNS間のSIPメッセージを搬送するためのWebSocketサブプロトコル（[RFC6455]のセクション1.9で定義されるように）[RFC3403を定義します】サービス値とのWebSocket輸送を実現SIPエンティティのための手順。メディアトランスポートは、この文書の範囲外です。"
    },
    {
      "indent": 3,
      "text": "Section 3 in this specification relaxes the requirement in [RFC3261] by which the SIP server transport MUST add a \"received\" parameter in the top Via header in certain circumstances.",
      "ja": "本明細書におけるセクション3は、SIPサーバの輸送は、特定の状況では、ヘッダを介して上部に「受信」パラメータを追加しなければならないことにより、[RFC3261]に要件を緩和します。"
    },
    {
      "indent": 0,
      "text": "2. Terminology",
      "section_title": true,
      "ja": "2.用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はあります[RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "2.1. Definitions",
      "section_title": true,
      "ja": "2.1。定義"
    },
    {
      "indent": 3,
      "text": "SIP WebSocket Client: A SIP entity capable of opening outbound connections to WebSocket servers and communicating using the WebSocket SIP subprotocol as defined by this document.",
      "ja": "SIPのWebSocketクライアント：のWebSocketサーバーに発信接続を開き、このドキュメントによって定義されるようなWebSocket SIPサブプロトコルを使用して通信することができるSIPエンティティ。"
    },
    {
      "indent": 3,
      "text": "SIP WebSocket Server: A SIP entity capable of listening for inbound connections from WebSocket clients and communicating using the WebSocket SIP subprotocol as defined by this document.",
      "ja": "SIPのWebSocketサーバー：WebSocketのクライアントからの着信接続をリッスンし、この文書で定義されているのWebSocket SIPサブプロトコルを使用して通信することができるSIPエンティティ。"
    },
    {
      "indent": 0,
      "text": "3. The WebSocket Protocol",
      "section_title": true,
      "ja": "3.のWebSocketプロトコル"
    },
    {
      "indent": 3,
      "text": "The WebSocket protocol [RFC6455] is a transport layer on top of TCP (optionally secured with TLS [RFC5246]) in which both client and server exchange message units in both directions. The protocol defines a connection handshake, WebSocket subprotocol and extensions negotiation, a frame format for sending application and control data, a masking mechanism, and status codes for indicating disconnection causes.",
      "ja": "WebSocketのプロトコル[RFC6455]は両方向のTCPの上のトランスポート層（必要に応じてTLS [RFC5246]で固定）でクライアントとサーバの両方交換メッセージユニットです。プロトコルは、接続ハンドシェーク、WebSocketのサブプロトコル及び拡張ネゴシエーション、断線の原因を示すためのアプリケーションや制御データ、マスキング機構、およびステータスコードを送信するためのフレームフォーマットを定義します。"
    },
    {
      "indent": 3,
      "text": "The WebSocket connection handshake is based on HTTP [RFC2616] and utilizes the HTTP GET method with an \"Upgrade\" request. This is sent by the client and then answered by the server (if the negotiation succeeded) with an HTTP 101 status code. Once the handshake is completed, the connection upgrades from HTTP to the WebSocket protocol. This handshake procedure is designed to reuse the existing HTTP infrastructure. During the connection handshake, the client and server agree on the application protocol to use on top of the WebSocket transport. Such an application protocol (also known as a \"WebSocket subprotocol\") defines the format and semantics of the messages exchanged by the endpoints. This could be a custom protocol or a standardized one (as defined by the WebSocket SIP subprotocol in this document). Once the HTTP 101 response is processed, both the client and server reuse the underlying TCP connection for sending WebSocket messages and control frames to each other. Unlike plain HTTP, this connection is persistent and can be used for multiple message exchanges.",
      "ja": "WebSocketの接続ハンドシェイクは、HTTP [RFC2616]に基づいており、「アップグレード」の要求とHTTPのGETメソッドを利用しています。これは、クライアントから送信された後、HTTP 101ステータスコード（ネゴシエーションが成功した場合）、サーバーによって応答されます。ハンドシェイクが完了すると、WebSocketのプロトコルへのHTTP接続からのアップグレード。このハンドシェイク手順は、既存のHTTPインフラストラクチャを再利用するように設計されています。接続ハンドシェイク中に、クライアントとサーバは、WebSocketの輸送の上で使用するようにアプリケーションプロトコルに同意するものとします。 （また、「のWebSocketサブプロトコル」としても知られる）、アプリケーションプロトコルは、エンドポイントによって交換されるメッセージのフォーマット及びセマンティクスを定義します。これは、カスタムプロトコルまたは標準化された一方（本文書でのWebSocket SIPサブプロトコルによって定義される）とすることができます。 HTTP 101応答が処理されると、クライアントとサーバーの両方が相互にWebSocketのメッセージと制御フレームを送信するための基盤となるTCP接続を再利用します。普通HTTPとは異なり、この接続は永続的であり、複数のメッセージ交換のために使用することができます。"
    },
    {
      "indent": 3,
      "text": "WebSocket defines message units to be used by applications for the exchange of data, so it provides a message-boundary-preserving transport layer. These message units can contain either UTF-8 text or binary data and can be split into multiple WebSocket text/binary transport frames as needed by the WebSocket stack.",
      "ja": "WebSocketのデータ交換のためのアプリケーションが使用するメッセージユニットを定義し、それは、メッセージ境界保存輸送層を提供します。これらのメッセージユニットは、UTF-8テキストまたはバイナリデータのいずれかを含むことができ、WebSocketのスタックによって必要に応じて複数のWebSocketテキスト/バイナリトランスポートフレームに分割することができます。"
    },
    {
      "indent": 6,
      "text": "The WebSocket API [WS-API] for web browsers only defines callbacks to be invoked upon receipt of an entire message unit, regardless of whether it was received in a single WebSocket frame or split across multiple frames.",
      "ja": "ウェブブラウザ用のWebSocketのAPI [WS-APIは】のみにかかわらず、それが複数のフレームにわたって単一のWebSocketフレームまたは分割で受信されたかどうかの、全体のメッセージ部の受信時に呼び出されるコールバックを定義します。"
    },
    {
      "indent": 0,
      "text": "4. The WebSocket SIP Subprotocol",
      "section_title": true,
      "ja": "4. WebSocketのSIPサブプロトコル"
    },
    {
      "indent": 3,
      "text": "The term WebSocket subprotocol refers to an application-level protocol layered on top of a WebSocket connection. This document specifies the WebSocket SIP subprotocol for carrying SIP requests and responses through a WebSocket connection.",
      "ja": "用語用WebSocketサブプロトコルは、WebSocketの接続の上に階層化アプリケーションレベルのプロトコルを指します。この文書では、WebSocketの接続を介してSIPの要求と応答を運ぶためのWebSocket SIPサブプロトコルを指定します。"
    },
    {
      "indent": 0,
      "text": "4.1. Handshake",
      "section_title": true,
      "ja": "4.1。ハンドシェーク"
    },
    {
      "indent": 3,
      "text": "The SIP WebSocket Client and SIP WebSocket Server negotiate usage of the WebSocket SIP subprotocol during the WebSocket handshake procedure as defined in Section 1.3 of [RFC6455]. The client MUST",
      "ja": "[RFC6455]のセクション1.3で定義されているSIPのWebSocketクライアントとSIPのWebSocketサーバーがのWebSocketハンドシェーク手順の間のWebSocket SIPサブプロトコルの使用を交渉します。クライアントMUST"
    },
    {
      "indent": 3,
      "text": "include the value \"sip\" in the Sec-WebSocket-Protocol header in its handshake request. The 101 reply from the server MUST contain \"sip\" in its corresponding Sec-WebSocket-Protocol header.",
      "ja": "そのハンドシェーク要求にSEC-のWebSocketプロトコルヘッダの値「SIP」を含みます。サーバ101からの応答は、その対応する秒-のWebSocketプロトコルヘッダ内の「SIP」を含まなければなりません。"
    },
    {
      "indent": 6,
      "text": "The WebSocket client initiates a WebSocket connection when attempting to send a SIP request (unless there is an already established WebSocket connection for sending the SIP request). In case there is no HTTP 101 response during the WebSocket handshake, it is considered a transaction error as per [RFC3261], Section 8.1.3.1., \"Transaction Layer Errors\".",
      "ja": "SIPリクエストを送信しようとすると（SIPリクエストを送信するため、既に確立のWebSocket接続がある場合を除き）のWebSocketクライアントがWebSocketの接続を開始します。場合のWebSocketハンドシェイク中に何のHTTP 101応答がない、それは、[RFC3261]、セクション8.1.3.1。「トランザクション層エラー」に従ってトランザクションエラーと考えられています。"
    },
    {
      "indent": 3,
      "text": "Below is an example of a WebSocket handshake in which the client requests the WebSocket SIP subprotocol support from the server:",
      "ja": "以下は、クライアントがサーバからのWebSocket SIPサブプロトコルのサポートを要求するのWebSocketハンドシェイクの例です。"
    },
    {
      "indent": 5,
      "text": "GET / HTTP/1.1 Host: sip-ws.example.com Upgrade: websocket Connection: Upgrade Sec-WebSocket-Key: dGhlIHNhbXBsZSBub25jZQ== Origin: http://www.example.com Sec-WebSocket-Protocol: sip Sec-WebSocket-Version: 13",
      "ja": "GET / HTTP / 1.1ホスト：sip-ws.example.comアップグレード：WebSocketの接続：アップグレード秒-のWebSocket-キー：dGhlIHNhbXBsZSBub25jZQ ==原産地：http://www.example.com秒-のWebSocket-プロトコル：すする秒-のWebSocket -version：13"
    },
    {
      "indent": 3,
      "text": "The handshake response from the server accepting the WebSocket SIP subprotocol would look as follows:",
      "ja": "以下のようになりますWebSocketのSIPサブプロトコルを受付サーバからのハンドシェイクの応答："
    },
    {
      "indent": 5,
      "text": "HTTP/1.1 101 Switching Protocols Upgrade: websocket Connection: Upgrade Sec-WebSocket-Accept: s3pPLMBiTxaQ9kYGzzhZRbK+xOo= Sec-WebSocket-Protocol: sip",
      "ja": "プロトコルの切り替えHTTP / 1.1 101はアップグレード：WebSocketの接続：秒-のWebSocket-受け入れアップグレード：s3pPLMBiTxaQ9kYGzzhZRbK + xOo =秒-のWebSocket-プロトコル：SIPを"
    },
    {
      "indent": 3,
      "text": "Once the negotiation has been completed, the WebSocket connection is established and can be used for the transport of SIP requests and responses. Messages other than SIP requests and responses MUST NOT be transmitted over this connection.",
      "ja": "ネゴシエーションが完了すると、WebSocketの接続が確立されたSIPリクエストとレスポンスの輸送のために使用することができます。 SIP要求と応答以外のメッセージは、この接続を介して送信されてはなりません。"
    },
    {
      "indent": 0,
      "text": "4.2. SIP Encoding",
      "section_title": true,
      "ja": "4.2。 SIPエンコーディング"
    },
    {
      "indent": 3,
      "text": "WebSocket messages can be transported in either UTF-8 text frames or binary frames. SIP [RFC3261] allows both text and binary bodies in SIP requests and responses. Therefore, SIP WebSocket Clients and SIP WebSocket Servers MUST accept both text and binary frames.",
      "ja": "WebSocketのメッセージは、UTF-8のテキストフレームまたはバイナリフレームのいずれかで輸送することができます。 SIP [RFC3261] SIPの要求と応答にテキストとバイナリ体の両方を可能にします。そのため、SIPは、WebSocketのクライアントとSIPのWebSocketサーバーは、テキストとバイナリフレームの両方を受け入れなければなりません。"
    },
    {
      "indent": 6,
      "text": "If there is at least one non-UTF-8 symbol in the whole SIP message (including headers and the body), then the whole message MUST be sent within a WebSocket binary message. Given the nature of",
      "ja": "（ヘッダとボディを含む）全体のSIPメッセージ内の少なくとも1つの非UTF-8シンボルがある場合、メッセージ全体がWebSocketのバイナリメッセージ内で送信されなければなりません。の性質を考えると"
    },
    {
      "indent": 6,
      "text": "JavaScript and the WebSocket API, it is RECOMMENDED to use UTF-8 encoding (or ASCII, which is a subset of UTF-8) for SIP messages carried over a WebSocket connection.",
      "ja": "JavaScriptとのWebSocket APIは、のWebSocket接続を介して搬送されるSIPメッセージの（UTF-8のサブセットであるか、またはASCII）UTF-8エンコーディングを使用することが推奨されます。"
    },
    {
      "indent": 0,
      "text": "5. SIP WebSocket Transport",
      "section_title": true,
      "ja": "5. SIP WebSocketの交通"
    },
    {
      "indent": 3,
      "text": "WebSocket [RFC6455] is a reliable protocol; therefore, the SIP WebSocket subprotocol defined by this document is a reliable SIP transport. Thus, client and server transactions using WebSocket for transport MUST follow the procedures and timer values for reliable transports as defined in [RFC3261].",
      "ja": "WebSocketの[RFC6455]は信頼性の高いプロトコルです。そのため、このドキュメントで定義されたSIPのWebSocketサブプロトコルは、信頼性の高いSIPトランスポートです。 [RFC3261]で定義されているこのように、輸送のためのWebSocketを使用して、クライアントとサーバーのトランザクションは、信頼性の高いトランスポートのための手続きやタイマー値に従わなければなりません。"
    },
    {
      "indent": 3,
      "text": "Each SIP message MUST be carried within a single WebSocket message, and a WebSocket message MUST NOT contain more than one SIP message. Because the WebSocket transport preserves message boundaries, the use of the Content-Length header in SIP messages is not necessary when they are transported using the WebSocket subprotocol.",
      "ja": "各SIPメッセージは、単一のWebSocketメッセージ内で実施しなければならない、とのWebSocketメッセージは、複数のSIPメッセージを含んでいてはなりません。 WebSocketの輸送は、メッセージの境界を維持するので、それらはWebSocketのサブプロトコルを使用して搬送される際に、SIPメッセージのContent-Lengthヘッダの使用は必要ではありません。"
    },
    {
      "indent": 6,
      "text": "This simplifies the parsing of SIP messages for both clients and servers. There is no need to establish message boundaries using Content-Length headers between messages. Other SIP transports, such as UDP and the Stream Control Transmission Protocol (SCTP) [RFC4168], also provide this benefit.",
      "ja": "これは、クライアントとサーバの両方のためのSIPメッセージの構文解析を簡素化します。メッセージ間のContent-Lengthヘッダを使用してメッセージの境界を確立する必要はありません。そのようなUDPおよびストリーム制御伝送プロトコル（SCTP）のような他のSIPトランスポート、[RFC4168]、この利点を提供します。"
    },
    {
      "indent": 0,
      "text": "5.1. Via Transport Parameter",
      "section_title": true,
      "ja": "5.1。交通パラメータで"
    },
    {
      "indent": 3,
      "text": "Via header fields in SIP messages carry a transport protocol identifier. This document defines the value \"WS\" to be used for requests over plain WebSocket connections and \"WSS\" for requests over secure WebSocket connections (in which the WebSocket connection is established using TLS [RFC5246] with TCP transport).",
      "ja": "SIPメッセージのヘッダフィールドを介してトランスポート・プロトコル識別子を運びます。この文書では（のWebSocket接続がTCPトランスポートとTLS [RFC5246]を使用して確立される）セキュアなWebSocket接続を介した要求のために普通のWebSocket接続および「WSS」上の要求のために使用される値「WS」を定義します。"
    },
    {
      "indent": 3,
      "text": "The updated augmented BNF (Backus-Naur Form) [RFC5234] for this parameter is the following (the original BNF for this parameter can be found in [RFC3261], which was then updated by [RFC4168]):",
      "ja": "このパラメータの更新された拡張BNF（バッカス - ナウア記法）[RFC5234]は、以下の（それまでに更新された[RFC3261]に見出すことができるこのパラメータの元のBNF、[RFC4168]）です。"
    },
    {
      "indent": 5,
      "text": "transport =/ \"WS\" / \"WSS\"",
      "ja": "輸送= / \"WS\" / \"WSS\""
    },
    {
      "indent": 0,
      "text": "5.2. SIP URI Transport Parameter",
      "section_title": true,
      "ja": "5.2。 SIP URI交通パラメータ"
    },
    {
      "indent": 3,
      "text": "This document defines the value \"ws\" as the transport parameter value for a SIP URI [RFC3986] to be contacted using the SIP WebSocket subprotocol as transport.",
      "ja": "この文書では、トランスポートとしてSIPのWebSocketサブプロトコルを使用して接触するSIP URI [RFC3986]のためのトランスポートパラメータ値として値「WS」を定義します。"
    },
    {
      "indent": 3,
      "text": "The updated augmented BNF for this parameter is the following (the original BNF for this parameter can be found in [RFC3261]):",
      "ja": "このパラメータの更新された拡張BNF以下（このパラメータの元のBNFは、[RFC3261]に見出すことができる）です。"
    },
    {
      "indent": 5,
      "text": "transport-param =/ \"transport=\" \"ws\"",
      "ja": "輸送-PARAM = / \"トランスポート=\" \"WS\""
    },
    {
      "indent": 0,
      "text": "5.3. Via \"received\" Parameter",
      "section_title": true,
      "ja": "5.3。パラメータ「受信」を介して"
    },
    {
      "indent": 3,
      "text": "The following is stated in [RFC3261], Section 18.2.1, \"Receiving Requests\":",
      "ja": "以下は、[RFC3261]、セクション18.2.1、「要求を受け取る」に記載されています。"
    },
    {
      "indent": 6,
      "text": "When the server transport receives a request over any transport, it MUST examine the value of the \"sent-by\" parameter in the top Via header field value. If the host portion of the \"sent-by\" field contains a domain name, or if it contains an IP address that differs from the packet source address, the server MUST add a \"received\" parameter to that Via header field value. This parameter MUST contain the source address from which the packet was received.",
      "ja": "サーバートランスポートは任意のトランスポート上の要求を受信すると、ヘッダフィールド値のViaトップで、「送信されたバイ」パラメータの値を調べる必要があります。もしのホスト部「送らバイ」フィールドにドメイン名が含まれているか、それがパケットの送信元アドレスと異なったIPアドレスが含まれている場合、サーバは、ヘッダフィールドの値を経由してそれに「受信」パラメータを追加する必要があります。このパラメータは、パケットが受信された送信元アドレスを含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "The requirement of adding the \"received\" parameter does not fit well into the WebSocket protocol design. The WebSocket connection handshake reuses the existing HTTP infrastructure in which there could be an unknown number of HTTP proxies and/or TCP load balancers between the SIP WebSocket Client and Server, so the source address the server would write into the Via \"received\" parameter would be the address of the HTTP/TCP intermediary in front of it. This could reveal sensitive information about the internal topology of the server's network to the client.",
      "ja": "「受信」パラメータを追加の要件は、WebSocketのプロトコルの設計にうまく適合しません。 WebSocketの接続ハンドシェイクは、HTTPプロキシおよび/またはSIPのWebSocketクライアントとサーバー間のTCPロードバランサの未知数があるかもしれませんした既存のHTTPインフラストラクチャを再利用するので、サーバは経由に書くでしょう送信元アドレスは、パラメータが希望「受信しました」その前にHTTP / TCP仲介のアドレスで。これは、クライアントへのサーバーのネットワークの内部トポロジに関する機密情報を開示する可能性があります。"
    },
    {
      "indent": 3,
      "text": "Given the fact that SIP responses can only be sent over the existing WebSocket connection, the Via \"received\" parameter is of little use. Therefore, in order to allow hiding possible sensitive information about the SIP WebSocket Server's network, this document updates [RFC3261], Section 18.2.1 by stating:",
      "ja": "SIP応答は、既存のWebSocket接続を介して送信することができるという事実を考えると、VIAはパラメータはほとんど使用され、「受信しました」。したがって、示すことによってSIPのWebSocketサーバーのネットワーク、このドキュメントの更新[RFC3261]、セクション18.2.1についての可能な機密情報を隠す可能にするために："
    },
    {
      "indent": 6,
      "text": "When a SIP WebSocket Server receives a request, it MAY decide not to add a \"received\" parameter to the top Via header. Therefore, SIP WebSocket Clients MUST accept responses without such a parameter in the top Via header regardless of whether the Via \"sent-by\" field contains a domain name.",
      "ja": "SIPのWebSocketサーバーは要求を受信すると、それはViaヘッダ先頭に「受信」パラメータを追加しないことを決定してもよいです。したがって、SIPのWebSocketクライアントにかかわらず、「送られた - で、」フィールド経由でドメイン名が含まれているかどうかのViaヘッダートップにあるようなパラメータなしの応答を受け入れなければなりません。"
    },
    {
      "indent": 0,
      "text": "5.4. SIP Transport Implementation Requirements",
      "section_title": true,
      "ja": "5.4。 SIPトランスポート実装要件"
    },
    {
      "indent": 3,
      "text": "The following is stated in [RFC3261], Section 18, \"Transport\":",
      "ja": "以下は、[RFC3261]、セクション18、「トランスポート」に記載されています。"
    },
    {
      "indent": 6,
      "text": "All SIP elements MUST implement UDP and TCP. SIP elements MAY implement other protocols.",
      "ja": "すべてのSIPエレメントはUDPとTCPを実装しなければなりません。 SIP要素は、他のプロトコルを実装してもよいです。"
    },
    {
      "indent": 3,
      "text": "The specification of this transport enables SIP to be used as a session establishment protocol in scenarios where none of the other transport protocols defined for SIP can be used. Since some environments do not enable SIP elements to use UDP and TCP as SIP transport protocols, a SIP element acting as a SIP WebSocket Client is not mandated to implement support of UDP and TCP.",
      "ja": "このトランスポートの仕様は、SIPは、SIPのために定義された他のトランスポートプロトコルのいずれも使用することができないシナリオにおけるセッション確立プロトコルとして使用されることを可能にします。一部の環境では、SIPトランスポートプロトコルとしてUDPとTCPを使用するようにSIP要素を有効にしていないので、SIPのWebSocketクライアントとして動作するSIP要素は、UDPとTCPのサポートを実装するために義務付けられていません。"
    },
    {
      "indent": 0,
      "text": "5.5. Locating a SIP Server",
      "section_title": true,
      "ja": "5.5。 SIPサーバーの検索"
    },
    {
      "indent": 3,
      "text": "[RFC3263] specifies the procedures that should be followed by SIP entities for locating SIP servers. This specification defines the NAPTR service value \"SIP+D2W\" for SIP WebSocket Servers that support plain WebSocket connections and \"SIPS+D2W\" for SIP WebSocket Servers that support secure WebSocket connections.",
      "ja": "[RFC3263]はSIPサーバの位置を特定するためのSIPエンティティによって従うべき手続きを指定します。この仕様は、プレーンのWebSocket接続とセキュアのWebSocket接続をサポートするSIPのWebSocketサーバー用の「SIPS + D2W」をサポートするSIPのWebSocketサーバのNAPTRサービス価値「SIP + D2W」を定義します。"
    },
    {
      "indent": 6,
      "text": "At the time this document was written, DNS NAPTR/Service Record (SRV) queries could not be performed by commonly available WebSocket client stacks (in JavaScript engines and web browsers).",
      "ja": "この文書が書かれた時点では、DNS NAPTR /サービスレコード（SRV）クエリが（JavaScriptエンジンとWebブラウザで）一般に入手可能なのWebSocketクライアント・スタックによって実行することができませんでした。"
    },
    {
      "indent": 3,
      "text": "In the absence of DNS SRV resource records or an explicit port, the default port for a SIP URI using the \"sip\" scheme and the \"ws\" transport parameter is 80, and the default port for a SIP URI using the \"sips\" scheme and the \"ws\" transport parameter is 443.",
      "ja": "DNSのSRVリソースレコードが存在しない場合または明示的なポートでは、「SIP」方式と、「WS」トランスポート・パラメータを使用してSIP URIのデフォルトポートは80で、SIP URIのデフォルトポートは「一口」方式を使用して、そして「WS」トランスポート・パラメータが443です。"
    },
    {
      "indent": 0,
      "text": "6. Connection Keep-Alive",
      "section_title": true,
      "ja": "6.接続キープアライブ"
    },
    {
      "indent": 3,
      "text": "SIP WebSocket Clients and Servers may keep their WebSocket connections open by sending periodic WebSocket \"Ping\" frames as described in [RFC6455], Section 5.5.2.",
      "ja": "SIP用WebSocketクライアントとサーバーは、[RFC6455]で説明したように、周期のWebSocket「のPing」のフレームを送信することにより、オープン5.5.2項を自分のWebSocket接続を維持することがあります。"
    },
    {
      "indent": 6,
      "text": "The WebSocket API [WS-API] does not provide a mechanism for applications running in a web browser to control whether or not periodic WebSocket \"Ping\" frames are sent to the server. The implementation of such a keep-alive feature is the decision of each web browser manufacturer and may also depend on the configuration of the web browser.",
      "ja": "WebSocket API [WS-APIは、周期的なWebSocketを「ピング」フレームがサーバーに送信されているかどうかを制御するために、Webブラウザで実行されるアプリケーションのためのメカニズムを提供しません。このようキープアライブ機能の実装は、各Webブラウザメーカーの判断であり、また、Webブラウザの設定に依存してもよいです。"
    },
    {
      "indent": 3,
      "text": "The indication and use of the CRLF NAT keep-alive mechanism defined for SIP connection-oriented transports in [RFC5626], Section 3.5.1 or [RFC6223] are, of course, usable over the transport defined in this specification.",
      "ja": "指示と[RFC5626]でSIPの接続指向のトランスポートのために定義されCRLF NATキープアライブ機構を使用することは、セクション3.5.1、または[RFC6223]は、本明細書で定義されたトランスポートを介して使用可能な、もちろんです。"
    },
    {
      "indent": 0,
      "text": "7. Authentication",
      "section_title": true,
      "ja": "7.認証"
    },
    {
      "indent": 3,
      "text": "This section describes how authentication is achieved through the requirements in [RFC6455], [RFC6265], [RFC2617], and [RFC3261].",
      "ja": "このセクションでは、認証が[RFC6455]で要件、[RFC6265]、[RFC2617]、および[RFC3261]によって達成される方法を説明します。"
    },
    {
      "indent": 3,
      "text": "The WebSocket protocol [RFC6455] does not define an authentication mechanism; instead, it exposes the following text in Section 10.5, \"WebSocket Client Authentication\":",
      "ja": "WebSocketのプロトコル[RFC6455]は、認証メカニズムを定義していません。その代わり、それは、セクション10.5、「WebSocketのクライアント認証」に次のテキストを公開します。"
    },
    {
      "indent": 6,
      "text": "This protocol doesn't prescribe any particular way that servers can authenticate clients during the WebSocket handshake. The WebSocket server can use any client authentication mechanism available to a generic HTTP server, such as cookies, HTTP authentication, or TLS authentication.",
      "ja": "このプロトコルは、サーバがのWebSocketハンドシェイク中にクライアントを認証することができます任意の特定の方法を規定していません。 WebSocketのサーバは、クッキー、HTTP認証、またはTLS認証など、一般的なHTTPサーバに利用可能なクライアント認証メカニズムを使用することができます。"
    },
    {
      "indent": 3,
      "text": "The following list exposes mandatory-to-implement and optional mechanisms for SIP WebSocket Clients and Servers in order to get interoperability at the WebSocket authentication level:",
      "ja": "以下のリストは、WebSocketの認証レベルでの相互運用性を得るためにSIPのWebSocketクライアントとサーバーのために実装-必須およびオプションのメカニズムを公開します。"
    },
    {
      "indent": 3,
      "text": "o A SIP WebSocket Client MUST be ready to add a session cookie when it runs in a web browser (or behaves like a browser navigating a website) and has previously retrieved a session cookie from the web server whose URL domain matches the domain in the WebSocket URI. This mechanism is defined by [RFC6265].",
      "ja": "それはWebブラウザで実行されます（またはウェブサイトをナビゲートブラウザのように振る舞う）と以前にURLドメインウェブサーバからセッションクッキーを取得したのWebSocketでドメインが一致したとき、O SIPのWebSocketクライアントは、セッションクッキーを追加する準備ができなければならない（MUST） URI。このメカニズムは[RFC6265]で定義されます。"
    },
    {
      "indent": 3,
      "text": "o A SIP WebSocket Client MUST be ready to be challenged with an HTTP 401 status code [RFC2617] by the SIP WebSocket Server when performing the WebSocket handshake.",
      "ja": "O SIPのWebSocketクライアントはWebSocketのハンドシェイクを行う際SIP用WebSocketサーバによってHTTP 401ステータスコード[RFC2617]で攻撃する準備ができていなければなりません。"
    },
    {
      "indent": 3,
      "text": "o A SIP WebSocket Client MAY use TLS client authentication (when in a secure WebSocket connection) as an optional authentication mechanism.",
      "ja": "O SIPのWebSocketクライアントは、オプションの認証機構としてTLSクライアント認証を（セキュアのWebSocket接続で）を使用することができます。"
    },
    {
      "indent": 9,
      "text": "Note, however, that TLS client authentication in the WebSocket\nprotocol is governed by the rules of the HTTP protocol rather\nthan the rules of SIP.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o A SIP WebSocket Server MUST be ready to read session cookies when present in the WebSocket handshake request and use such a cookie value for determining whether the WebSocket connection has been initiated by an HTTP client navigating a website in the same domain (or subdomain) as the SIP WebSocket Server.",
      "ja": "SIPのWebSocketサーバーが存在する場合のWebSocketハンドシェイクリクエストにセッションCookieを読み取るとのWebSocket接続は、同じドメイン（またはサブドメイン）にウェブサイトをナビゲートするHTTPクライアントによって開始されたかどうかを決定するため、このようなクッキーの値を使用する準備ができなければなりませんO SIPのWebSocketサーバー。"
    },
    {
      "indent": 3,
      "text": "o A SIP WebSocket Server SHOULD be able to reject a WebSocket handshake request with an HTTP 401 status code by providing a Basic/Digest challenge as defined for the HTTP protocol.",
      "ja": "O SIP用WebSocketサーバーは、HTTPプロトコルについて定義した通りの基本/ダイジェストチャレンジを提供することにより、HTTP 401ステータスコードとのWebSocketハンドシェイク要求を拒否することができるべきです。"
    },
    {
      "indent": 3,
      "text": "Regardless of whether or not the SIP WebSocket Server requires authentication during the WebSocket handshake, authentication MAY be requested at the SIP level.",
      "ja": "かかわらず、SIPのWebSocketサーバーはWebSocketをハンドシェイク中に認証を必要とするかどうかの、認証は、SIPレベルで要求される場合があります。"
    },
    {
      "indent": 3,
      "text": "Some authentication use cases are exposed in Appendix A.",
      "ja": "一部の認証ユースケースは、付録Aにさらされています"
    },
    {
      "indent": 0,
      "text": "8. Examples",
      "section_title": true,
      "ja": "8.例"
    },
    {
      "indent": 0,
      "text": "8.1. Registration",
      "section_title": true,
      "ja": "8.1。登録"
    },
    {
      "indent": 3,
      "text": "Alice    (SIP WSS)    proxy.example.com\n|                             |\n|HTTP GET (WS handshake) F1   |\n|---------------------------->|\n|101 Switching Protocols F2   |\n|<----------------------------|\n|                             |\n|REGISTER F3                  |\n|---------------------------->|\n|200 OK F4                    |\n|<----------------------------|\n|                             |",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Alice loads a web page using her web browser and retrieves JavaScript code implementing the WebSocket SIP subprotocol defined in this document. The JavaScript code (a SIP WebSocket Client) establishes a secure WebSocket connection with a SIP proxy/registrar (a SIP WebSocket Server) at proxy.example.com. Upon WebSocket connection, Alice constructs and sends a SIP REGISTER request, including Outbound [RFC5626] and Globally Routable User Agent URI (GRUU) [RFC5627] support. Since the JavaScript stack in a browser has no way to determine the local address from which the WebSocket connection was made, this implementation uses a random \".invalid\" domain name for the Via header \"sent-by\" parameter and for the hostport of the URI in the Contact header (see Appendix B.1).",
      "ja": "アリスは、Webブラウザを使用してWebページをロードし、この文書で定義されたのWebSocket SIPサブプロトコルを実装するJavaScriptコードを取得します。 JavaScriptコード（SIPのWebSocketクライアント）proxy.example.comでSIPプロキシ/レジストラ（SIPのWebSocketサーバ）との安全のWebSocket接続を確立します。 WebSocketの接続時に、アリスは、構築物及びアウトバウンド[RFC5626]とグローバルにルーティング可能なユーザエージェントURI（GRUU）[RFC5627]のサポートを含むSIP REGISTER要求を送信します。ブラウザでJavaScriptのスタックはWebSocketの接続が行われたローカルアドレスを決定する方法がありませんので、この実装は、 『送られた - で、』パラメータとのホスト側のためにViaヘッダーのためのランダム「.invalid」ドメイン名を使用していますContactヘッダにおけるURI（付録B.1を参照してください）。"
    },
    {
      "indent": 3,
      "text": "Message details (authentication and Session Description Protocol (SDP) bodies are omitted for simplicity):",
      "ja": "メッセージの詳細（認証とセッション記述プロトコル（SDP）体は単純化のために省略されています）："
    },
    {
      "indent": 3,
      "text": "F1 HTTP GET (WS handshake) Alice -> proxy.example.com (TLS)",
      "ja": "F1 HTTP GET（WSハンドシェイク）アリス - > proxy.example.com（TLS）"
    },
    {
      "indent": 3,
      "text": "GET / HTTP/1.1 Host: proxy.example.com Upgrade: websocket Connection: Upgrade Sec-WebSocket-Key: dGhlIHNhbXBsZSBub25jZQ== Origin: https://www.example.com Sec-WebSocket-Protocol: sip Sec-WebSocket-Version: 13",
      "ja": "GET / HTTP / 1.1ホスト：proxy.example.comアップグレード：WebSocketの接続：dGhlIHNhbXBsZSBub25jZQ ==原産地：秒-のWebSocketキーをアップグレードhttps://www.example.com秒-のWebSocket-プロトコル：すする秒-のWebSocket-バージョン：13"
    },
    {
      "indent": 3,
      "text": "F2 101 Switching Protocols proxy.example.com -> Alice (TLS)",
      "ja": "F2 101スイッチングプロトコルproxy.example.com  - >アリス（TLS）"
    },
    {
      "indent": 3,
      "text": "HTTP/1.1 101 Switching Protocols Upgrade: websocket Connection: Upgrade Sec-WebSocket-Accept: s3pPLMBiTxaQ9kYGzzhZRbK+xOo= Sec-WebSocket-Protocol: sip",
      "ja": "プロトコルの切り替えHTTP / 1.1 101はアップグレード：WebSocketの接続：秒-のWebSocket-受け入れアップグレード：s3pPLMBiTxaQ9kYGzzhZRbK + xOo =秒-のWebSocket-プロトコル：SIPを"
    },
    {
      "indent": 3,
      "text": "F3 REGISTER Alice -> proxy.example.com (transport WSS)",
      "ja": "F3 REGISTERアリス - > proxy.example.com（輸送WSS）"
    },
    {
      "indent": 3,
      "text": "REGISTER sip:proxy.example.com SIP/2.0 Via: SIP/2.0/WSS df7jal23ls0d.invalid;branch=z9hG4bKasudf From: sip:alice@example.com;tag=65bnmj.34asd To: sip:alice@example.com Call-ID: aiuy7k9njasd CSeq: 1 REGISTER Max-Forwards: 70 Supported: path, outbound, gruu Contact: <sip:alice@df7jal23ls0d.invalid;transport=ws> ;reg-id=1 ;+sip.instance=\"<urn:uuid:f81-7dec-14a06cf1>\"",
      "ja": "SIP：alice@example.com;タグ= 65bnmj.34asdへ：SIP：alice@example.comコール;：proxy.example.com SIP / 2.0経由：ブランチ= z9hG4bKasudfからSIP / 2.0 / WSS df7jal23ls0d.invalid一口を登録-ID：aiuy7k9njasd用のCSeq：1 REGISTER最大フォワード：70サポート：パス、アウトバウンド、GRUU問い合わせ：<SIP：alice@df7jal23ls0d.invalid;輸送= WS>; REG-ID = 1; + sip.instance = \"<URN ：UUID：f81-7dec-14a06cf1>」"
    },
    {
      "indent": 3,
      "text": "F4 200 OK proxy.example.com -> Alice (transport WSS)",
      "ja": "F4 200 OK proxy.example.com  - >アリス（輸送WSS）"
    },
    {
      "indent": 3,
      "text": "SIP/2.0 200 OK Via: SIP/2.0/WSS df7jal23ls0d.invalid;branch=z9hG4bKasudf From: sip:alice@example.com;tag=65bnmj.34asd To: sip:alice@example.com;tag=12isjljn8 Call-ID: aiuy7k9njasd CSeq: 1 REGISTER Supported: outbound, gruu Contact: <sip:alice@df7jal23ls0d.invalid;transport=ws> ;reg-id=1 ;+sip.instance=\"<urn:uuid:f81-7dec-14a06cf1>\" ;pub-gruu=\"sip:alice@example.com;gr=urn:uuid:f81-7dec-14a06cf1\" ;temp-gruu=\"sip:87ash54=3dd.98a@example.com;gr\" ;expires=3600",
      "ja": "SIP / 2.0 200 OK経由：SIP / 2.0 / WSS df7jal23ls0d.invalid;ブランチ= z9hG4bKasudfから：SIP：alice@example.com;タグ= 65bnmj.34asdへ：SIP：alice@example.com;タグは=コールID 12isjljn8 ：aiuy7k9njasd用のCSeq：1レジスタサポート：アウトバウンド、GRUU問い合わせ：<SIP：alice@df7jal23ls0d.invalid;輸送= WS>; REG-ID = 1; + sip.instance = \"<URN：UUID：f81-7dec-14a06cf1> \";パブ-GRUU =\" SIP：alice@example.com; GR = URN：UUID：f81-7dec-14a06cf1\" ;​​ TEMP-GRUU = \"SIP：87ash54=3dd.98a@example.com; GR\"; =満了します3600"
    },
    {
      "indent": 0,
      "text": "8.2. INVITE Dialog through a Proxy",
      "section_title": true,
      "ja": "8.2。プロキシ経由ダイアログをINVITE"
    },
    {
      "indent": 3,
      "text": "Alice    (SIP WSS)    proxy.example.com    (SIP UDP)       Bob\n|                             |                             |\n|INVITE F1                    |                             |\n|---------------------------->|                             |\n|100 Trying F2                |                             |\n|<----------------------------|                             |\n|                             |INVITE F3                    |\n|                             |---------------------------->|\n|                             |200 OK F4                    |\n|                             |<----------------------------|\n|200 OK F5                    |                             |\n|<----------------------------|                             |\n|                             |                             |\n|ACK F6                       |                             |\n|---------------------------->|                             |\n|                             |ACK F7                       |\n|                             |---------------------------->|\n|                             |                             |\n|                 Bidirectional RTP Media                   |\n|<=========================================================>|\n|                             |                             |\n|                             |BYE F8                       |\n|                             |<----------------------------|\n|BYE F9                       |                             |\n|<----------------------------|                             |\n|200 OK F10                   |                             |\n|---------------------------->|                             |\n|                             |200 OK F11                   |\n|                             |---------------------------->|\n|                             |                             |",
      "raw": true
    },
    {
      "indent": 3,
      "text": "In the same scenario, Alice places a call to Bob's Address of Record (AOR). The SIP WebSocket Server at proxy.example.com acts as a SIP proxy, routing the INVITE to Bob's contact address (which happens to be using SIP transported over UDP). Bob answers the call and then terminates it.",
      "ja": "同じシナリオでは、アリスは、レコード（AOR）のボブのアドレスに電話をかけます。 proxy.example.comでSIP用WebSocketサーバ（UDPを介してトランスポートSIPを使用することを起こる）ボブの連絡先アドレスにINVITEをルーティング、SIPプロキシとして動作します。ボブがコールに応答し、それを終了します。"
    },
    {
      "indent": 3,
      "text": "Message details (authentication and SDP bodies are omitted for simplicity):",
      "ja": "メッセージの詳細（認証およびSDP体は単純化のために省略されています）："
    },
    {
      "indent": 3,
      "text": "F1 INVITE Alice -> proxy.example.com (transport WSS)",
      "ja": "F1 INVITEアリス - > proxy.example.com（輸送WSS）"
    },
    {
      "indent": 3,
      "text": "INVITE sip:bob@example.com SIP/2.0 Via: SIP/2.0/WSS df7jal23ls0d.invalid;branch=z9hG4bK56sdasks From: sip:alice@example.com;tag=asdyka899 To: sip:bob@example.com Call-ID: asidkj3ss CSeq: 1 INVITE Max-Forwards: 70 Supported: path, outbound, gruu Route: <sip:proxy.example.com:443;transport=ws;lr> Contact: <sip:alice@example.com ;gr=urn:uuid:f81-7dec-14a06cf1;ob> Content-Type: application/sdp",
      "ja": "SIP INVITE：bob@example.com SIP / 2.0を経由：SIP / 2.0 / WSSはdf7jal23ls0d.invalid;ブランチ= z9hG4bK56sdasksから：SIP：alice@example.com;へ= asdyka899タグ：SIP：bob@example.comはコールIDを：asidkj3ssのCSeqは：70サポート：パス、アウトバウンド、GRUUルート：最大前方にINVITE、1 <SIP：proxy.example.com：443;輸送= WSを、LR>連絡先：<SIP：alice@example.com; GR = URN：UUID：f81-7dec-14a06cf1; OB>のContent-Type：アプリケーション/ SDP"
    },
    {
      "indent": 3,
      "text": "F2 100 Trying proxy.example.com -> Alice (transport WSS)",
      "ja": "F2 100試行proxy.example.com  - >アリス（搬送WSS）"
    },
    {
      "indent": 3,
      "text": "SIP/2.0 100 Trying Via: SIP/2.0/WSS df7jal23ls0d.invalid;branch=z9hG4bK56sdasks From: sip:alice@example.com;tag=asdyka899 To: sip:bob@example.com Call-ID: asidkj3ss CSeq: 1 INVITE",
      "ja": "SIP /経由しようとすると2.0 100：SIP / 2.0 / WSSはdf7jal23ls0d.invalid;からブランチ= z9hG4bK56sdasks：SIP：alice@example.com;にタグ= asdyka899：SIP：bob@example.comはコールIDを：のCSeq asidkj3ss：1 INVITE"
    },
    {
      "indent": 3,
      "text": "F3 INVITE proxy.example.com -> Bob (transport UDP)",
      "ja": "F3 proxy.example.comをINVITE  - >ボブ（トランスポートUDP）"
    },
    {
      "indent": 3,
      "text": "INVITE sip:bob@203.0.113.22:5060 SIP/2.0 Via: SIP/2.0/UDP proxy.example.com;branch=z9hG4bKhjhjqw32c Via: SIP/2.0/WSS df7jal23ls0d.invalid;branch=z9hG4bK56sdasks Record-Route: <sip:proxy.example.com;transport=udp;lr>, <sip:h7kjh12s@proxy.example.com:443;transport=ws;lr> From: sip:alice@example.com;tag=asdyka899 To: sip:bob@example.com Call-ID: asidkj3ss CSeq: 1 INVITE Max-Forwards: 69 Supported: path, outbound, gruu Contact: <sip:alice@example.com ;gr=urn:uuid:f81-7dec-14a06cf1;ob> Content-Type: application/sdp",
      "ja": "bob@203.0.113.22：SIPのINVITE 5060 SIP / 2.0経由：SIP / 2.0 / UDP proxy.example.com;ブランチ= z9hG4bKhjhjqw32c経由：SIP / 2.0 / WSSはdf7jal23ls0d.invalid;ブランチ= z9hG4bK56sdasks録音-ルート：<SIP： proxy.example.com;輸送= UDP; LR>、<SIP：h7kjh12s@proxy.example.com：443;輸送= WS; LR>から：SIP：alice@example.com;タグ= asdyka899に：SIP：ボブ@ example.comコールIDを：asidkj3ssのCSeq：69サポート：パス、アウトバウンド、GRUU連絡先：マックス-前方にINVITE、1 <一口：alice@example.com;グラム= URN：UUID：f81-7dec-14a06cf1; OB>コンテンツタイプ：アプリケーション/ SDP"
    },
    {
      "indent": 3,
      "text": "F4 200 OK Bob -> proxy.example.com (transport UDP)",
      "ja": "F4 200 OKボブ - > proxy.example.com（トランスポートUDP）"
    },
    {
      "indent": 3,
      "text": "SIP/2.0 200 OK Via: SIP/2.0/UDP proxy.example.com;branch=z9hG4bKhjhjqw32c ;received=192.0.2.10 Via: SIP/2.0/WSS df7jal23ls0d.invalid;branch=z9hG4bK56sdasks Record-Route: <sip:proxy.example.com;transport=udp;lr>, <sip:h7kjh12s@proxy.example.com:443;transport=ws;lr> From: sip:alice@example.com;tag=asdyka899 To: sip:bob@example.com;tag=bmqkjhsd Call-ID: asidkj3ss CSeq: 1 INVITE Contact: <sip:bob@203.0.113.22:5060;transport=udp> Content-Type: application/sdp",
      "ja": "SIP / 2.0 200 OK経由：SIP / 2.0 / UDP proxy.example.com;分岐= z9hG4bKhjhjqw32c;受信= 192.0.2.10のVia：SIP / 2.0 / WSSはdf7jal23ls0d.invalid;分岐= z9hG4bK56sdasksレコードルート<SIP：プロキシ。 example.com;輸送= UDP; LR>、<SIP：h7kjh12s@proxy.example.com：SIP：ボブ@例; SIP：タグ= asdyka899にalice@example.com 443;輸送= WS>からLR .COM;タグ=-IDを呼び出しbmqkjhsd：asidkj3ssのCSeqを：連絡先を1 INVITE：<SIP：bob@203.0.113.22：5060;運輸= udpの>のContent-Type：アプリケーション/ SDP"
    },
    {
      "indent": 3,
      "text": "F5 200 OK proxy.example.com -> Alice (transport WSS)",
      "ja": "F5 200 OK proxy.example.com  - >アリス（輸送WSS）"
    },
    {
      "indent": 3,
      "text": "SIP/2.0 200 OK Via: SIP/2.0/WSS df7jal23ls0d.invalid;branch=z9hG4bK56sdasks Record-Route: <sip:proxy.example.com;transport=udp;lr>, <sip:h7kjh12s@proxy.example.com:443;transport=ws;lr> From: sip:alice@example.com;tag=asdyka899 To: sip:bob@example.com;tag=bmqkjhsd Call-ID: asidkj3ss CSeq: 1 INVITE Contact: <sip:bob@203.0.113.22:5060;transport=udp> Content-Type: application/sdp",
      "ja": "SIP / 2.0 200 OK経由：SIP / 2.0 / WSSはdf7jal23ls0d.invalid;分岐= z9hG4bK56sdasksレコードルート<SIP：proxy.example.com;輸送= UDP; LR>、<SIP：h7kjh12s@proxy.example.com： 443;トランスポート= wsを、LR>から：SIP：alice@example.com;タグ= asdyka899へ：SIP：bob@example.com;タグ=-IDを呼び出しbmqkjhsd：asidkj3ssのCSeqを：連絡先を1 INVITE：<SIP：ボブ@ 203.0.113.22:5060;transport=udp>のContent-Type：アプリケーション/ SDP"
    },
    {
      "indent": 3,
      "text": "F6 ACK Alice -> proxy.example.com (transport WSS)",
      "ja": "F6 ACKアリス - > proxy.example.com（輸送WSS）"
    },
    {
      "indent": 3,
      "text": "ACK sip:bob@203.0.113.22:5060;transport=udp SIP/2.0 Via: SIP/2.0/WSS df7jal23ls0d.invalid;branch=z9hG4bKhgqqp090 Route: <sip:h7kjh12s@proxy.example.com:443;transport=ws;lr>, <sip:proxy.example.com;transport=udp;lr>, From: sip:alice@example.com;tag=asdyka899 To: sip:bob@example.com;tag=bmqkjhsd Call-ID: asidkj3ss CSeq: 1 ACK Max-Forwards: 70",
      "ja": "ACKをSIP：bob@203.0.113.22：5060;輸送= UDP SIP / 2.0経由：SIP / 2.0 / WSSはdf7jal23ls0d.invalid;分岐が= z9hG4bKhgqqp090経路：<SIP：h7kjh12s@proxy.example.com：443;輸送= WS。 LR>、<SIP：proxy.example.com;運輸= UDP; LR>、から：SIP：alice@example.com;タグ= asdyka899へ：SIP：bob@example.com;タグ= bmqkjhsdコールID：asidkj3ss CSeq：1 ACKマックス・フォワード：70"
    },
    {
      "indent": 3,
      "text": "F7 ACK proxy.example.com -> Bob (transport UDP)",
      "ja": "F7 ACKのproxy.example.com  - >ボブ（輸送UDP）"
    },
    {
      "indent": 3,
      "text": "ACK sip:bob@203.0.113.22:5060;transport=udp SIP/2.0 Via: SIP/2.0/UDP proxy.example.com;branch=z9hG4bKhwpoc80zzx Via: SIP/2.0/WSS df7jal23ls0d.invalid;branch=z9hG4bKhgqqp090 From: sip:alice@example.com;tag=asdyka899 To: sip:bob@example.com;tag=bmqkjhsd Call-ID: asidkj3ss CSeq: 1 ACK Max-Forwards: 69",
      "ja": "ACKのSIP：bob@203.0.113.22：SIP / 2.0 / WSSはdf7jal23ls0d.invalid;からブランチ= z9hG4bKhgqqp090を：：SIP;：;ブランチ= z9hG4bKhwpoc80zzx経由SIP / 2.0 / UDP proxy.example.com 5060 = UDP SIP / 2.0を介して輸送：alice@example.com;タグ= asdyka899に：SIP：bob@example.com;タグ=コールID bmqkjhsd：asidkj3ssのCSeq：1 ACK最大フォワード：69"
    },
    {
      "indent": 3,
      "text": "F8 BYE Bob -> proxy.example.com (transport UDP)",
      "ja": "F8 BYEボブ - > proxy.example.com（トランスポートUDP）"
    },
    {
      "indent": 3,
      "text": "BYE sip:alice@example.com;gr=urn:uuid:f81-7dec-14a06cf1;ob SIP/2.0 Via: SIP/2.0/UDP 203.0.113.22;branch=z9hG4bKbiuiansd001 Route: <sip:proxy.example.com;transport=udp;lr>, <sip:h7kjh12s@proxy.example.com:443;transport=ws;lr> From: sip:bob@example.com;tag=bmqkjhsd To: sip:alice@example.com;tag=asdyka899 Call-ID: asidkj3ss CSeq: 1201 BYE Max-Forwards: 70",
      "ja": "BYEをSIP：alice@example.com; GR = URN：UUID：f81-7dec-14a06cf1; OB SIP / 2.0経由：SIP / 2.0 / UDP 203.0.113.22;分岐= z9hG4bKbiuiansd001経路：<SIP：proxy.example.com。輸送= UDP; LR>、<SIP：h7kjh12s@proxy.example.com：443;輸送= WS; LR>から：SIP：bob@example.com;、タグ= bmqkjhsd：SIP：alice@example.com;タグ= asdyka899コールID：asidkj3ssのCSeq：1201 BYEマックス・フォワード：70"
    },
    {
      "indent": 3,
      "text": "F9 BYE proxy.example.com -> Alice (transport WSS)",
      "ja": "F9 BYE proxy.example.com  - >アリス（輸送WSS）"
    },
    {
      "indent": 3,
      "text": "BYE sip:alice@example.com;gr=urn:uuid:f81-7dec-14a06cf1;ob SIP/2.0 Via: SIP/2.0/WSS proxy.example.com:443;branch=z9hG4bKmma01m3r5 Via: SIP/2.0/UDP 203.0.113.22;branch=z9hG4bKbiuiansd001 From: sip:bob@example.com;tag=bmqkjhsd To: sip:alice@example.com;tag=asdyka899 Call-ID: asidkj3ss CSeq: 1201 BYE Max-Forwards: 69",
      "ja": "BYEをSIP：alice@example.com; GR = URN：UUID：f81-7dec-14a06cf1; OB SIP / 2.0経由：SIP / 2.0 / WSS proxy.example.com:443;branch=z9hG4bKmma01m3r5のVia：SIP / 2.0 / UDP SIP：：; 203.0.113.22からブランチ= z9hG4bKbiuiansd001 bob@example.com;にタグ= bmqkjhsd：SIP：alice@example.com;タグ= asdyka899コール-ID：asidkj3ssのCSeq：1201 BYEマックス・フォワード：69"
    },
    {
      "indent": 3,
      "text": "F10 200 OK Alice -> proxy.example.com (transport WSS)",
      "ja": "F10 200 OKアリス - > proxy.example.com（輸送WSS）"
    },
    {
      "indent": 3,
      "text": "SIP/2.0 200 OK Via: SIP/2.0/WSS proxy.example.com:443;branch=z9hG4bKmma01m3r5 Via: SIP/2.0/UDP 203.0.113.22;branch=z9hG4bKbiuiansd001 From: sip:bob@example.com;tag=bmqkjhsd To: sip:alice@example.com;tag=asdyka899 Call-ID: asidkj3ss CSeq: 1201 BYE",
      "ja": "SIP / 2.0 200 OK経由：SIP / 2.0 / WSS proxy.example.com:443;branch=z9hG4bKmma01m3r5経由：;：SIP：SIP / 2.0 / UDP 203.0.113.22からブランチ= z9hG4bKbiuiansd001 bob@example.com;タグ= bmqkjhsd To：SIP：alice@example.com;タグ= asdyka899コール-ID：asidkj3ssのCSeq：1201 BYE"
    },
    {
      "indent": 3,
      "text": "F11 200 OK proxy.example.com -> Bob (transport UDP)",
      "ja": "F11 200 OK proxy.example.com  - >ボブ（輸送UDP）"
    },
    {
      "indent": 3,
      "text": "SIP/2.0 200 OK Via: SIP/2.0/UDP 203.0.113.22;branch=z9hG4bKbiuiansd001 From: sip:bob@example.com;tag=bmqkjhsd To: sip:alice@example.com;tag=asdyka899 Call-ID: asidkj3ss CSeq: 1201 BYE",
      "ja": "SIP / 2.0 200 OK経由：SIP / 2.0 / UDP 203.0.113.22;ブランチ= z9hG4bKbiuiansd001から：SIP：bob@example.com;タグ= bmqkjhsdへ：SIP：alice@example.com;タグ= asdyka899コールID：asidkj3ss CSeq：1201 BYE"
    },
    {
      "indent": 0,
      "text": "9. Security Considerations",
      "section_title": true,
      "ja": "9.セキュリティの考慮事項"
    },
    {
      "indent": 0,
      "text": "9.1. Secure WebSocket Connection",
      "section_title": true,
      "ja": "9.1。セキュアWebSocketの接続"
    },
    {
      "indent": 3,
      "text": "It is RECOMMENDED that the SIP traffic transported over a WebSocket communication be protected by using a secure WebSocket connection (using TLS [RFC5246] over TCP).",
      "ja": "WebSocketの通信を介して転送SIPトラフィックが（TCP上TLS [RFC5246]を使用して）セキュアのWebSocket接続を使用することによって保護されることが推奨されます。"
    },
    {
      "indent": 3,
      "text": "When establishing a connection using SIP over secure WebSocket transport, the client MUST authenticate the server using the server's certificate according to the WebSocket validation procedure in [RFC6455].",
      "ja": "安全なWebSocketのトランスポートを介してSIPを使用して接続を確立するとき、クライアントは[RFC6455]でのWebSocketの検証手順に従って、サーバーの証明書を使用してサーバーを認証しなければなりません。"
    },
    {
      "indent": 6,
      "text": "Server operators should note that this authentication procedure is different from the procedure for SIP domain certificates defined in [RFC5922]. Certificates that are appropriate for SIP over TLS over TCP will probably not be appropriate for SIP over secure WebSocket connections.",
      "ja": "サーバーオペレータは、この認証手続きは、[RFC5922]で定義されたSIPドメイン証明書の手順とは異なることに注意してください。 TCP上のTLS上でSIPのための適切な証明書は、おそらく安全なのWebSocket接続を介してSIPのために適切ではありません。"
    },
    {
      "indent": 0,
      "text": "9.2. Usage of \"sips\" Scheme",
      "section_title": true,
      "ja": "9.2。 「一口」スキームの使い方"
    },
    {
      "indent": 3,
      "text": "The \"sips\" scheme in a SIP URI dictates that the entire request path to the target be secure. If such a path includes a WebSocket connection, it MUST be a secure WebSocket connection.",
      "ja": "SIP URIの「SIPS」方式は、ターゲットに全体要求パスが安全であることを指示します。そのような経路は、WebSocketの接続が含まれている場合、それは安全なのWebSocket接続していなければなりません。"
    },
    {
      "indent": 0,
      "text": "10. IANA Considerations",
      "section_title": true,
      "ja": "10. IANAの考慮事項"
    },
    {
      "indent": 0,
      "text": "10.1. Registration of the WebSocket SIP Subprotocol",
      "section_title": true,
      "ja": "10.1。 WebSocketのSIPサブプロトコルの登録"
    },
    {
      "indent": 3,
      "text": "IANA has registered the WebSocket SIP subprotocol under the \"WebSocket Subprotocol Name\" registry with the following data:",
      "ja": "IANAは、次のデータを「WebSocketのサブプロトコル名」レジストリの下でのWebSocket SIPサブプロトコルを登録しています："
    },
    {
      "indent": 3,
      "text": "Subprotocol Identifier: sip",
      "ja": "サブプロトコル識別子：SIP"
    },
    {
      "indent": 3,
      "text": "Subprotocol Common Name: WebSocket Transport for SIP (Session Initiation Protocol)",
      "ja": "サブプロトコル一般名：SIP用のWebSocket交通（セッション開始プロトコル）"
    },
    {
      "indent": 3,
      "text": "Subprotocol Definition: [RFC7118]",
      "ja": "サブプロトコルの定義：[RFC7118]"
    },
    {
      "indent": 0,
      "text": "10.2. Registration of New NAPTR Service Field Values",
      "section_title": true,
      "ja": "10.2。新NAPTRサービスフィールド値の登録"
    },
    {
      "indent": 3,
      "text": "This document defines two new NAPTR service field values (SIP+D2W and SIPS+D2W) and IANA has registered these values under the \"Registry for the Session Initiation Protocol (SIP) NAPTR Resource Record Services Field\". The entries are as follows:",
      "ja": "この文書では、2つの新しいNAPTRサービスフィールド値（SIP + D2WとSIPS + D2W）を定義し、IANAは、「セッション開始プロトコル（SIP）NAPTRリソースレコードサービス分野のレジストリ」の下で、これらの値が登録されています。次のようにエントリは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "Services Field   Protocol   Reference\n--------------   --------   ---------\nSIP+D2W          WS         [RFC7118]\nSIPS+D2W         WS         [RFC7118]",
      "raw": true
    },
    {
      "indent": 0,
      "text": "10.3. SIP/SIPS URI Parameters Subregistry",
      "section_title": true,
      "ja": "10.3。 SIP / URIパラメータ副登録はSIPS"
    },
    {
      "indent": 3,
      "text": "IANA has added a reference to this document under the \"SIP/SIPS URI Parameters\" subregistry within the \"Session Initiation Protocol (SIP) Parameters\" registry:",
      "ja": "IANAの下、この文書への参照を追加した「セッション開始プロトコル（SIP）のパラメータ」レジストリ内の副登録「SIP / URIパラメータSIPS」："
    },
    {
      "indent": 3,
      "text": "Parameter Name   Predefined Values   Reference\n--------------   -----------------   ---------\ntransport        Yes                 [RFC3261][RFC7118]",
      "raw": true
    },
    {
      "indent": 0,
      "text": "10.4. Header Fields Subregistry",
      "section_title": true,
      "ja": "10.4。ヘッダフィールド副登録"
    },
    {
      "indent": 3,
      "text": "IANA has added a reference to this document under the \"Header Fields\" subregistry within the \"Session Initiation Protocol (SIP) Parameters\" registry:",
      "ja": "IANAは、「セッション開始プロトコル（SIP）のパラメータ」レジストリ内の「ヘッダフィールド」副登録の下で、この文書への参照を追加しました："
    },
    {
      "indent": 3,
      "text": "Header Name   compact   Reference\n-----------   -------   ---------\nVia           v         [RFC3261][RFC7118]",
      "raw": true
    },
    {
      "indent": 0,
      "text": "10.5. Header Field Parameters and Parameter Values Subregistry",
      "section_title": true,
      "ja": "10.5。ヘッダーフィールドパラメータとパラメータ値副登録"
    },
    {
      "indent": 3,
      "text": "IANA has added a reference to this document under the \"Header Field Parameters and Parameter Values\" subregistry within the \"Session Initiation Protocol (SIP) Parameters\" registry:",
      "ja": "IANAは、「セッション開始プロトコル（SIP）のパラメータ」レジストリ内「ヘッダーフィールドパラメータとパラメータ値」副登録の下で、この文書への参照を追加しました："
    },
    {
      "indent": 3,
      "text": "                              Predefined\nHeader Field  Parameter Name  Values  Reference\n------------  --------------  ------  ---------\nVia           received        No      [RFC3261][RFC7118]",
      "raw": true
    },
    {
      "indent": 0,
      "text": "10.6. SIP Transport Subregistry",
      "section_title": true,
      "ja": "10.6。 SIP交通副登録"
    },
    {
      "indent": 3,
      "text": "This document adds a new subregistry, \"SIP Transport\", to the \"Session Initiation Protocol (SIP) Parameters\" registry. Its format and initial values are as shown in the following table:",
      "ja": "この文書は、「セッション開始プロトコル（SIP）パラメータ」レジストリに新しい副登録、「SIPトランスポート」を追加します。次の表に示すようにそのフォーマット及び初期値は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "+------------+------------------------+\n| Transport  | Reference              |\n+------------+------------------------+\n| UDP        | [RFC3261]              |\n| TCP        | [RFC3261]              |\n| TLS        | [RFC3261]              |\n| SCTP       | [RFC3261], [RFC4168]   |\n| TLS-SCTP   | [RFC4168]              |\n| WS         | [RFC7118]              |\n| WSS        | [RFC7118]              |\n+------------+------------------------+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The policy for registration of values in this registry is \"Standards Action\" [RFC5226].",
      "ja": "このレジストリの値を登録するための方針は、「標準化アクション」[RFC5226]です。"
    },
    {
      "indent": 0,
      "text": "11. Acknowledgements",
      "section_title": true,
      "ja": "11.謝辞"
    },
    {
      "indent": 3,
      "text": "Special thanks to the following people who participated in discussions on the SIPCORE and RTCWEB WG mailing lists and contributed ideas and/or provided detailed reviews (the list is likely to be incomplete): Hadriel Kaplan, Paul Kyzivat, Robert Sparks, Adam Roach, Ranjit Avasarala, Xavier Marjou, Nataraju A. B., Martin Vopatek, Alexey Melnikov, Alan Johnston, Christer Holmberg, Salvatore Loreto, Kevin P. Fleming, Suresh Krishnan, Yaron Sheffer, Richard Barnes, Barry Leiba, Stephen Farrell, Ted Lemon, Benoit Claise, Pete Resnick, Binod P.G., and Saul Ibarra Corretge.",
      "ja": "SIPCOREとRTCWEB WGメーリングリストでの議論に参加し、アイデア、および/または提供する詳細なレビューを貢献した以下の方々に感謝します（リストは不完全である可能性が高い）：Hadrielカプラン、ポールKyzivat、ロバートスパークス、アダムローチ、ランジットAvasarala、ザビエルMarjou、Nataraju AB、マーティンVopatek、アレクセイ・メルニコフ、アラン・ジョンストン、クリステルHolmbergの、サルヴァトーレ・ロレート、ケビンP.フレミング、スレシュクリシュナン、ヤロンシェファー、リチャード・バーンズ、バリー・レイバ、スティーブン・ファレル、テッド・レモン、ブノワClaise、ピートレズニック、Binod PG、サウルイバラCorretge。"
    },
    {
      "indent": 0,
      "text": "12. References",
      "section_title": true,
      "ja": "12.参考文献"
    },
    {
      "indent": 0,
      "text": "12.1. Normative References",
      "section_title": true,
      "ja": "12.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC2617] Franks, J., Hallam-Baker, P., Hostetler, J., Lawrence, S., Leach, P., Luotonen, A., and L. Stewart, \"HTTP Authentication: Basic and Digest Access Authentication\", RFC 2617, June 1999.",
      "ja": "[RFC2617]フランクス、J.、ハラム・ベイカー、P.、Hostetler、J.、ローレンス、S.、リーチ、P.、Luotonen、A.、およびL.スチュワート、 \"HTTP認証：基本とダイジェストアクセス認証\" 、RFC 2617、1999年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC3261] Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston, A., Peterson, J., Sparks, R., Handley, M., and E. Schooler, \"SIP: Session Initiation Protocol\", RFC 3261, June 2002.",
      "ja": "[RFC3261]ローゼンバーグ、J.、Schulzrinneと、H.、カマリロ、G.、ジョンストン、A.、ピーターソン、J.、スパークス、R.、ハンドレー、M.、およびE.学生、 \"SIP：セッション開始プロトコル\" 、RFC 3261、2002年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC3263] Rosenberg, J. and H. Schulzrinne, \"Session Initiation Protocol (SIP): Locating SIP Servers\", RFC 3263, June 2002.",
      "ja": "[RFC3263]ローゼンバーグ、J.とH. Schulzrinneと、 \"セッション開始プロトコル（SIP）：SIPサーバの検索\"、RFC 3263、2002年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC3403] Mealling, M., \"Dynamic Delegation Discovery System (DDDS) Part Three: The Domain Name System (DNS) Database\", RFC 3403, October 2002.",
      "ja": "[RFC3403] Mealling、M.、 \"ダイナミックな委譲発見システム（DDDS）パート3：ドメインネームシステム（DNS）データベース\"、RFC 3403、2002年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC5226] Narten, T. and H. Alvestrand, \"Guidelines for Writing an IANA Considerations Section in RFCs\", BCP 26, RFC 5226, May 2008.",
      "ja": "[RFC5226] Narten氏、T.とH. Alvestrand、 \"RFCsにIANA問題部に書くためのガイドライン\"、BCP 26、RFC 5226、2008年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC5234] Crocker, D. and P. Overell, \"Augmented BNF for Syntax Specifications: ABNF\", STD 68, RFC 5234, January 2008.",
      "ja": "[RFC5234]クロッカー、D.、およびP. Overell、 \"構文仕様のための増大しているBNF：ABNF\"、STD 68、RFC 5234、2008年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC5246] Dierks, T. and E. Rescorla, \"The Transport Layer Security (TLS) Protocol Version 1.2\", RFC 5246, August 2008.",
      "ja": "[RFC5246]ダークス、T.およびE.レスコラ、 \"トランスポート層セキュリティ（TLS）プロトコルバージョン1.2\"、RFC 5246、2008年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC6265] Barth, A., \"HTTP State Management Mechanism\", RFC 6265, April 2011.",
      "ja": "[RFC6265]バース、A.、 \"HTTP状態管理機構\"、RFC 6265、2011年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC6455] Fette, I. and A. Melnikov, \"The WebSocket Protocol\", RFC 6455, December 2011.",
      "ja": "[RFC6455]たFette、I.およびA.メルニコフ、 \"WebSocketのプロトコル\"、RFC 6455、2011年12月。"
    },
    {
      "indent": 0,
      "text": "12.2. Informative References",
      "section_title": true,
      "ja": "12.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[RFC2606] Eastlake, D. and A. Panitz, \"Reserved Top Level DNS Names\", BCP 32, RFC 2606, June 1999.",
      "ja": "[RFC2606]イーストレイク、D.とA. Panitz、 \"予約トップレベルDNS名\"、BCP 32、RFC 2606、1999年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC2616] Fielding, R., Gettys, J., Mogul, J., Frystyk, H., Masinter, L., Leach, P., and T. Berners-Lee, \"Hypertext Transfer Protocol -- HTTP/1.1\", RFC 2616, June 1999.",
      "ja": "[RFC2616]フィールディング、R.、ゲティス、J.、モーグル、J.、Frystyk、H.、Masinter、L.、リーチ、P.、およびT.バーナーズ - リー、 \"ハイパーテキスト転送プロトコル -  HTTP / 1.1\" 、RFC 2616、1999年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC3327] Willis, D. and B. Hoeneisen, \"Session Initiation Protocol (SIP) Extension Header Field for Registering Non-Adjacent Contacts\", RFC 3327, December 2002.",
      "ja": "[RFC3327]ウィリス、D.とB. Hoeneisen、 \"セッション開始プロトコル非隣接コンタクトを登録するための（SIP）拡張ヘッダーフィールド\"、RFC 3327、2002年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC3986] Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform Resource Identifier (URI): Generic Syntax\", STD 66, RFC 3986, January 2005.",
      "ja": "[RFC3986]バーナーズ - リー、T.、フィールディング、R.、およびL. Masinter、 \"ユニフォームリソース識別子（URI）：汎用構文\"、STD 66、RFC 3986、2005年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC4168] Rosenberg, J., Schulzrinne, H., and G. Camarillo, \"The Stream Control Transmission Protocol (SCTP) as a Transport for the Session Initiation Protocol (SIP)\", RFC 4168, October 2005.",
      "ja": "、RFC 4168、2005年10月 \"セッション開始プロトコル（SIP）のためのトランスポートとしてストリーム制御伝送プロトコル（SCTP）\" [RFC4168]ローゼンバーグ、J.、Schulzrinneと、H.、およびG.カマリロ、。"
    },
    {
      "indent": 3,
      "text": "[RFC5626] Jennings, C., Mahy, R., and F. Audet, \"Managing Client-Initiated Connections in the Session Initiation Protocol (SIP)\", RFC 5626, October 2009.",
      "ja": "[RFC5626]ジェニングス、C.、マーイ、R.、およびF. Audet、RFC 5626、2009年10月 \"セッション開始プロトコル（SIP）におけるクライアント開始された接続の管理\"。"
    },
    {
      "indent": 3,
      "text": "[RFC5627] Rosenberg, J., \"Obtaining and Using Globally Routable User Agent URIs (GRUUs) in the Session Initiation Protocol (SIP)\", RFC 5627, October 2009.",
      "ja": "[RFC5627]ローゼンバーグ、J.、RFC 5627、2009年10月 \"セッション開始プロトコル（SIP）でグローバルにルーティング可能なユーザエージェントのURI（GRUUs）の取得と使用\" を参照してください。"
    },
    {
      "indent": 3,
      "text": "[RFC5922] Gurbani, V., Lawrence, S., and A. Jeffrey, \"Domain Certificates in the Session Initiation Protocol (SIP)\", RFC 5922, June 2010.",
      "ja": "[RFC5922] Gurbani、V.、ローレンス、S.、およびA.ジェフリー、 \"セッション開始プロトコル（SIP）にドメイン証明書\"、RFC 5922、2010年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC6223] Holmberg, C., \"Indication of Support for Keep-Alive\", RFC 6223, April 2011.",
      "ja": "[RFC6223] Holmbergの、C.、RFC 6223、2011年4月 \"キープアライブのサポートの表示\"。"
    },
    {
      "indent": 3,
      "text": "[WS-API] W3C and I. Hickson, Ed., \"The WebSocket API\", September 2012.",
      "ja": "[WS-API] W3CとI.ヒクソン、エド。、 \"のWebSocket API\"、2012年9月。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Authentication Use Cases",
      "ja": "付録A.認証ユースケース"
    },
    {
      "indent": 3,
      "text": "The sections below briefly describe some SIP over WebSocket scenarios in which authentication takes place in different ways.",
      "ja": "簡単に以下のセクションでは、認証は異なる方法で行われているのWebSocketのシナリオ上でいくつかのSIPについて説明します。"
    },
    {
      "indent": 0,
      "text": "A.1. Just SIP Authentication",
      "ja": "A.1。ただ、SIP認証"
    },
    {
      "indent": 3,
      "text": "SIP Private Branch Exchange (PBX) model A implements the SIP WebSocket transport defined by this specification. Its implementation is 100% website agnostic as it does not share information with the web server providing the HTML code to browsers, meaning that the SIP WebSocket Server (here, PBX model A) has no knowledge about web login activity within the website.",
      "ja": "SIP構内交換機（PBX）のモデルAは、この仕様で定義されたSIPのWebSocket輸送を実現します。それはSIPのWebSocketサーバー（ここでは、PBXモデルA）は、ウェブサイト内のWebログインの活動についての知識がないこと。つまり、ブラウザにHTMLコードを提供するウェブサーバと情報を共有しないように、その実装は、100％のウェブサイトとらわれません"
    },
    {
      "indent": 3,
      "text": "In this simple scenario, the SIP WebSocket Server does not inspect fields in the WebSocket handshake HTTP GET request such as the request URL, the Origin header value, the Host header value, or the Cookie header value (if present). However, some of those fields could be inspected for a minimal validation (i.e., PBX model A could require that the Origin header value contains a specific URL so just users navigating such a website would be able to establish a WebSocket connection with PBX model A).",
      "ja": "この単純なシナリオでは、SIPのWebSocketサーバは、要求URL、Originのヘッダ値、ホストヘッダー値、またはCookieヘッダの値（存在する場合）などのWebSocketハンドシェイクHTTP GETリクエストのフィールドを検査しません。しかし、これらのフィールドのいくつかは、最小限の検証のために検査することができ（すなわち、PBXモデルAは、Originヘッダーの値は、そのようなウェブサイトをナビゲートし、これだけのユーザーがPBXモデルAとのWebSocket接続を確立することができるだろう、特定のURLが含まれている必要があります） 。"
    },
    {
      "indent": 3,
      "text": "Once the WebSocket connection has been established, SIP authentication is requested by PBX model A for each SIP request coming over that connection. Therefore, SIP WebSocket Clients must be provisioned with their corresponding SIP password.",
      "ja": "WebSocketの接続が確立されると、SIP認証は、その接続を介して到来する各SIP要求のPBXモデルAによって要求されます。したがって、SIPのWebSocketクライアントは、それに対応するSIPのパスワードを使用してプロビジョニングする必要があります。"
    },
    {
      "indent": 0,
      "text": "A.2. Just Web Authentication",
      "ja": "A.2。ただ、Web認証"
    },
    {
      "indent": 3,
      "text": "A SIP-to-PSTN (Public Switched Telephone Network) provider offers telephony service for clients logged into its website. The provider does not want to expose SIP passwords into the web for security/ privacy reasons.",
      "ja": "SIPツーPSTN（公衆交換電話網）プロバイダは、そのウェブサイトにログインしているクライアントのための電話サービスを提供しています。プロバイダは、セキュリティ/プライバシー上の理由のためのウェブにSIPのパスワードを公開したくありません。"
    },
    {
      "indent": 3,
      "text": "Once the user is logged into the web, the web server provides him with a SIP identity (SIP URI) and a session temporary token string (along with the SIP WebSocket Client JavaScript application and SIP settings). The web server stores the SIP identity and session token into a database.",
      "ja": "ユーザーがウェブにログインすると、Webサーバは、SIPアイデンティティ（SIP URI）と（SIPのWebSocketクライアントJavaScriptアプリケーションとSIPの設定と一緒に）セッションの一時的なトークン文字列で彼を提供します。 WebサーバーはデータベースにSIPアイデンティティとセッショントークンを格納します。"
    },
    {
      "indent": 3,
      "text": "The web application adds the SIP identity and session token as URL query parameters in the WebSocket handshake request and attempts the connection. The SIP WebSocket Server inspects the handshake request and validates that the session token matches the value stored in the database for the given SIP identity. In case the value matches, the WebSocket connection gets \"authenticated\" for that SIP identity. The SIP WebSocket Client can then register and make calls. The SIP",
      "ja": "Webアプリケーションは、のWebSocketハンドシェイクリクエストでURLクエリパラメータとしてSIPアイデンティティとセッショントークンを追加し、接続を試みます。 SIPのWebSocket Serverは、ハンドシェイクリクエストを検査し、セッショントークンが与えられたSIPアイデンティティのためにデータベースに格納されている値と一致することを検証します。場合の値が一致し、WebSocketの接続は、そのSIPアイデンティティのために、「認証済み」を取得します。 SIPのWebSocketクライアントは、登録し、電話をかけることができます。 SIP"
    },
    {
      "indent": 3,
      "text": "WebSocket Server would, however, verify that the identity in those SIP requests (i.e., the From URI value) matches the SIP identity the WebSocket connection is associated to (otherwise, the SIP request is rejected).",
      "ja": "WebSocketのサーバーが、しかし、それらのSIPリクエストのIDが（すなわち、URI値から）のWebSocket接続が（そうでなければ、SIP要求が拒否される）に関連付けられているSIPアイデンティティと一致することを検証することになります。"
    },
    {
      "indent": 3,
      "text": "When the user performs a logout action in the web, the web server removes the SIP identity and session token tuple from the database and notifies the SIP WebSocket Server, which revokes and closes the WebSocket connection.",
      "ja": "ユーザーがウェブでログアウトアクションを実行すると、Webサーバは、データベースからのSIPアイデンティティとセッショントークンのタプルを削除し、取り消しとのWebSocket接続を閉じSIPのWebSocketサーバーに通知します。"
    },
    {
      "indent": 3,
      "text": "No SIP authentication takes place in this scenario.",
      "ja": "いいえSIP認証は、このシナリオでは行われません。"
    },
    {
      "indent": 0,
      "text": "A.3. Cookie-Based Authentication",
      "ja": "A.3。クッキーベースの認証"
    },
    {
      "indent": 3,
      "text": "The Apache web server comes with a new module: mod_sip_websocket. In port 80, the web server is configured to listen for both HTTP common requests and WebSocket handshake requests. Therefore, both the web server and the SIP WebSocket Server are co-located within the same host and same domain.",
      "ja": "mod_sip_websocket：Apache Webサーバは、新しいモジュールが付属しています。ポート80には、ウェブサーバは、HTTP、共通の要求とのWebSocketハンドシェイク要求の両方をリッスンするように設定されています。そのため、WebサーバとSIPのWebSocket Serverの両方が同じホストと同じドメイン内の同じ場所に配置されています。"
    },
    {
      "indent": 3,
      "text": "Once the user is logged into the web, he is provided with the SIP WebSocket Client JavaScript application and SIP settings. The HTTP 200 response after the login procedure also contains a session cookie [RFC6265]. The web application then attempts a WebSocket connection against the same URL/domain of the website, and thus the session cookie is automatically added by the browser into the WebSocket handshake request (as the WebSocket protocol [RFC6455] states).",
      "ja": "ユーザーがウェブにログインすると、彼はSIPのWebSocketクライアントJavaScriptアプリケーションとSIPの設定を備えています。ログイン手順の後にHTTP 200応答は、セッションクッキー[RFC6265]を含んでいます。ウェブアプリケーションは、ウェブサイトの同じURL /ドメインに対してのWebSocket接続を試み、したがって、セッションクッキーを自動的に（のWebSocketプロトコル[RFC6455]の状態のような）のWebSocketハンドシェイク要求にブラウザによって追加されます。"
    },
    {
      "indent": 3,
      "text": "The web server inspects the cookie value (as it would do for a common HTTP request containing a session cookie so that the login procedure is not required again). If the cookie is valid, the WebSocket connection is authorized. And, as in the previous use case, the connection is also associated with a specific SIP identity that must be satisfied by every SIP request coming over that connection.",
      "ja": "（ログイン手順が再び必要とされないように、それはセッションクッキーを含む一般的なHTTPリクエストのために行うように）Webサーバは、クッキー値を検査します。クッキーが有効であれば、WebSocketの接続が許可されています。そして、以前の使用の場合のように、接続はまた、その接続を介して来て、すべてのSIP要求が満たさなければならない特定のSIPアイデンティティと関連しています。"
    },
    {
      "indent": 3,
      "text": "No SIP authentication takes place in this scenario but just common cookie usage as widely deployed in the World Wide Web.",
      "ja": "いいえSIP認証は、このシナリオでは行われませんが、単に一般的なクッキーの使用は、広くは、ワールドワイドウェブで展開します。"
    },
    {
      "indent": 0,
      "text": "Appendix B. Implementation Guidelines",
      "ja": "付録B.の実装のガイドライン"
    },
    {
      "indent": 3,
      "text": "Let us assume a scenario in which the users access with their web browsers (probably behind NAT) an application provided by a server on an intranet, login by entering their user identifier and credentials, and retrieve a JavaScript application (along with the HTML) implementing a SIP WebSocket Client.",
      "ja": "私たちは、ユーザーが（おそらくNATの後ろに）自分のWebブラウザでアクセスするシナリオを想定してみましょう、イントラネット上のサーバが提供するアプリケーション、そのユーザ識別子と認証情報を入力して、ログイン、および（HTMLと一緒に）JavaScriptアプリケーションを取得する実装SIPのWebSocketクライアント。"
    },
    {
      "indent": 3,
      "text": "Such a SIP stack connects to a given SIP WebSocket Server (an outbound SIP proxy that also implements classic SIP transports such as UDP and TCP). The HTTP GET method request sent by the web browser for the WebSocket handshake includes a Cookie [RFC6265] header with the value previously provided by the server after the successful login procedure. The cookie value is then inspected by the WebSocket server to authorize the connection. Once the WebSocket connection is established, the SIP WebSocket Client performs a SIP registration to a SIP registrar server that is reachable through the proxy. After registration, the SIP WebSocket Client and Server exchange SIP messages as would normally be expected.",
      "ja": "そのようなSIPスタックは、所与のSIP用WebSocketサーバーに接続する（また、古典的なSIPを実装アウトバウンドSIPプロキシは、UDPおよびTCPなどのトランスポート）。 WebSocketハンドシェイクのためにウェブブラウザによって送信されたHTTP GETメソッド要求は、以前に成功したログイン手順の後にサーバによって提供された値を持つクッキー[RFC6265]ヘッダを含みます。クッキーの値は、接続を許可するためのWebSocketサーバーによって検査されます。 WebSocketの接続が確立されると、SIPのWebSocketクライアントは、プロキシを介して到達可能であるSIPレジストラサーバへのSIP登録を行います。登録した後に、SIPのWebSocketクライアントとサーバーの交換SIPメッセージの通常予想されるように。"
    },
    {
      "indent": 3,
      "text": "This scenario is quite similar to ones in which SIP user agents (UAs) behind NATs connect to a proxy and must reuse the same TCP connection for incoming requests (because they are not directly reachable by the proxy otherwise). In both cases, the SIP UAs are only reachable through the proxy to which they are connected.",
      "ja": "このシナリオでは、NATの背後にあるSIPユーザエージェント（UAS）のものと非常によく似てプロキシに接続し、（彼らはそれ以外の場合は、プロキシによって直接到達可能ではないので）、着信要求に同じTCP接続を再利用しなければならないです。両方の場合において、SIPのUAは、それらが接続されているプロキシを介してのみ到達可能です。"
    },
    {
      "indent": 3,
      "text": "The SIP Outbound extension [RFC5626] seems an appropriate solution for this scenario. Therefore, these SIP WebSocket Clients and the SIP registrar implement both the Outbound and Path [RFC3327] extensions, and the SIP proxy acts as an Outbound Edge Proxy (as defined in [RFC5626], Section 3.4).",
      "ja": "SIPアウトバウンド拡張[RFC5626]は、このシナリオのために適切なソリューションです。したがって、SIPプロキシは（[RFC5626]、セクション3.4で定義されるように）アウトバウンドエッジプロキシとして機能するこれらのWebSocket SIPクライアントとSIPレジストラが送信とパスの両方を実装する[RFC3327]の拡張機能、および。"
    },
    {
      "indent": 3,
      "text": "SIP WebSocket Clients in this scenario receive incoming SIP requests via the SIP WebSocket Server to which they are connected. Therefore, in some call transfer cases, the use of GRUU [RFC5627] (which should be implemented in both the SIP WebSocket Clients and SIP registrar) is valuable.",
      "ja": "このシナリオでは、SIP用WebSocketクライアントは、接続されているSIPのWebSocketサーバーを経由して着信SIP要求を受け取ります。したがって、一部のコール転送の場合には、（SIPのWebSocketクライアントとSIPレジストラの両方に実装されなければならない）GRUU [RFC5627]を使用することは価値があります。"
    },
    {
      "indent": 6,
      "text": "If a REFER request is sent to a third SIP user agent including the Contact URI of a SIP WebSocket Client as the target in its Refer-To header field, such a URI will be reachable by the third SIP UA only if it is a globally routable URI. GRUU (Globally Routable User Agent URI) is a solution for those scenarios and would cause the incoming request from the third SIP user agent to be sent to the SIP registrar, which would route the request to the SIP WebSocket Client via the Outbound Edge Proxy.",
      "ja": "REFER要求は、その参照の-ToヘッダーフィールドにターゲットとしてSIPのWebSocketクライアントの連絡先URIを含む第3のSIPユーザエージェントに送信される場合、そのようなURIは、グローバルにルーティング可能な場合にのみ、第三のSIP UAによって到達可能であろうURI。 GRUU（グローバルにルーティング可能なユーザエージェントURI）これらのシナリオのためのソリューションであり、SIPレジストラに送信する第三のSIPユーザエージェントからの着信要求を引き起こす、そのアウトバウンドエッジプロキシ経由でSIPのWebSocketクライアントへのルート要求をあろう。"
    },
    {
      "indent": 0,
      "text": "B.1. SIP WebSocket Client Considerations",
      "ja": "B.1。 SIPのWebSocketクライアントの考慮事項"
    },
    {
      "indent": 3,
      "text": "The JavaScript stack in web browsers does not have the ability to discover the local transport address used for originating WebSocket connections. A SIP WebSocket Client running in such an environment can construct a domain name consisting of a random token followed by the \".invalid\" top-level domain name, as stated in [RFC2606], and uses it within its Via and Contact headers.",
      "ja": "WebブラウザでJavaScriptのスタックは、WebSocketの接続を発信するために使用するローカルトランスポートアドレスを発見する能力を持っていません。このような環境で実行されているSIPのWebSocketクライアントは[RFC2606]で述べたように、トップレベルドメイン名を「.invalid」、およびそのビアと連絡先のヘッダー以内にそれを使用することで、その後のランダムなトークンからなるドメイン名を構築することができます。"
    },
    {
      "indent": 6,
      "text": "The Contact URI provided by SIP UAs requesting (and receiving) Outbound support is not used for routing requests to those UAs, thus it is safe to set a random domain in the Contact URI hostport.",
      "ja": "要求（および受信）SIPのUAによって提供される連絡先URIアウトバウンドサポートはこれらのUAに要求をルーティングするために使用されず、したがって、接触URIのホスト側でランダムドメインを設定しても安全です。"
    },
    {
      "indent": 3,
      "text": "Both the Outbound and GRUU specifications require a SIP UA to include a Uniform Resource Name (URN) in a \"+sip.instance\" parameter of the Contact header in which they include their SIP REGISTER requests. The client device is responsible for generating or collecting a suitable value for this purpose.",
      "ja": "どちらのアウトバウンドおよびGRUU仕様は、彼らがSIPのREGISTERリクエストが含まれている連絡先ヘッダの「+ sip.instance」パラメータで統一リソース名（URN）を含むようにSIP UAが必要です。クライアントデバイスは、この目的のために適切な値を生成または収集するための責任があります。"
    },
    {
      "indent": 6,
      "text": "In web browsers, it is difficult to generate or collect a suitable value to be used as an URN value from the browser itself. This scenario suggests that value is generated according to [RFC5626], Section 4.1 by the web application running in the browser the first time it loads the JavaScript SIP stack code, and then it is stored as a cookie within the browser.",
      "ja": "Webブラウザでは、ブラウザ自体からURN値として使用される適切な値を生成または収集することは困難です。このシナリオでは、値は[RFC5626]、ブラウザでは、JavaScriptのSIPスタックコードをロードし、それをブラウザ内のクッキーとして記憶されて初めて実行されているWebアプリケーションでセクション4.1に従って生成されることを示唆しています。"
    },
    {
      "indent": 0,
      "text": "B.2. SIP WebSocket Server Considerations",
      "ja": "B.2。 SIPのWebSocketサーバーの考慮事項"
    },
    {
      "indent": 3,
      "text": "The SIP WebSocket Server in this scenario behaves as a SIP Outbound Edge Proxy, which involves support for Outbound [RFC5626] and Path [RFC3327].",
      "ja": "このシナリオではSIPのWebSocket Serverはアウトバウンド[RFC5626]とパス[RFC3327]のためのサポートを含むSIPアウトバウンドエッジプロキシとして振る舞います。"
    },
    {
      "indent": 3,
      "text": "The proxy performs loose routing and remains in the path of dialogs as specified in [RFC3261]. If it did not do this, in-dialog requests would fail since SIP WebSocket Clients make use of their SIP WebSocket Server in order to send and receive SIP messages.",
      "ja": "プロキシは、ルーズルーティングを実行し、[RFC3261]で指定されるようにダイアログのパスに残ります。それはこれをしなかった場合はSIPのWebSocketクライアントは、SIPメッセージを送受信するために、そのSIPのWebSocketサーバーを利用することから、イン・ダイアログの要求は失敗します。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Inaki Baz Castillo Versatica Barakaldo, Basque Country Spain",
      "ja": "イニャキバズカスティージョVersaticaバラカルド、スペインのバスク地方"
    },
    {
      "indent": 3,
      "text": "EMail: ibc@aliax.net",
      "ja": "メールアドレス：ibc@aliax.net"
    },
    {
      "indent": 3,
      "text": "Jose Luis Millan Villegas Versatica Bilbao, Basque Country Spain",
      "ja": "ホセ・ルイス・ミランビジェガスVersaticaビルバオ、バスク国スペイン"
    },
    {
      "indent": 3,
      "text": "EMail: jmillan@aliax.net",
      "ja": "メールアドレス：jmillan@aliax.net"
    },
    {
      "indent": 3,
      "text": "Victor Pascual Quobis Spain",
      "ja": "ビクターパスカルQuobisスペイン"
    },
    {
      "indent": 3,
      "text": "EMail: victor.pascual@quobis.com",
      "ja": "メールアドレス：victor.pascual@quobis.com"
    }
  ]
}