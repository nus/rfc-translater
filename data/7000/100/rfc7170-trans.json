{
  "title": {
    "text": "RFC 7170 - Tunnel Extensible Authentication Protocol (TEAP) Version 1",
    "ja": "RFC 7170 - トンネル拡張認証プロトコル（TEAP）バージョン1"
  },
  "number": 7170,
  "created_at": "2019-10-29 13:56:15.968148+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                           H. Zhou\nRequest for Comments: 7170                                 N. Cam-Winget\nCategory: Standards Track                                     J. Salowey\nISSN: 2070-1721                                            Cisco Systems\n                                                                S. Hanna\n                                                   Infineon Technologies\n                                                                May 2014",
      "raw": true
    },
    {
      "indent": 7,
      "text": "Tunnel Extensible Authentication Protocol (TEAP) Version 1",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document defines the Tunnel Extensible Authentication Protocol (TEAP) version 1. TEAP is a tunnel-based EAP method that enables secure communication between a peer and a server by using the Transport Layer Security (TLS) protocol to establish a mutually authenticated tunnel. Within the tunnel, TLV objects are used to convey authentication-related data between the EAP peer and the EAP server.",
      "ja": "この文書では、1 TEAPピアと相互認証トンネルを確立するために、トランスポート層セキュリティ（TLS）プロトコルを使用して、サーバ間でセキュアな通信を可能にトンネルベースのEAPメソッドであるトンネル拡張認証プロトコル（TEAP）バージョンを定義します。トンネル内、TLVオブジェクトは、EAPピアとEAPサーバ間の認証に関連するデータを搬送するために使用されます。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 5741のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc7170.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc7170で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2014 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2014 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   5\n  1.1.  Specification Requirements  . . . . . . . . . . . . . . .   5\n  1.2.  Terminology . . . . . . . . . . . . . . . . . . . . . . .   6\n2.  Protocol Overview . . . . . . . . . . . . . . . . . . . . . .   6\n  2.1.  Architectural Model . . . . . . . . . . . . . . . . . . .   7\n  2.2.  Protocol-Layering Model . . . . . . . . . . . . . . . . .   8\n3.  TEAP Protocol . . . . . . . . . . . . . . . . . . . . . . . .   9\n  3.1.  Version Negotiation . . . . . . . . . . . . . . . . . . .   9\n  3.2.  TEAP Authentication Phase 1: Tunnel Establishment . . . .  10\n    3.2.1.  TLS Session Resume Using Server State . . . . . . . .  11\n    3.2.2.  TLS Session Resume Using a PAC  . . . . . . . . . . .  12\n    3.2.3.  Transition between Abbreviated and Full TLS Handshake  13\n  3.3.  TEAP Authentication Phase 2: Tunneled Authentication  . .  14\n    3.3.1.  EAP Sequences . . . . . . . . . . . . . . . . . . . .  14\n    3.3.2.  Optional Password Authentication  . . . . . . . . . .  15\n    3.3.3.  Protected Termination and Acknowledged Result\n            Indication  . . . . . . . . . . . . . . . . . . . . .  15\n  3.4.  Determining Peer-Id and Server-Id . . . . . . . . . . . .  16\n  3.5.  TEAP Session Identifier . . . . . . . . . . . . . . . . .  17\n  3.6.  Error Handling  . . . . . . . . . . . . . . . . . . . . .  17\n    3.6.1.  Outer-Layer Errors  . . . . . . . . . . . . . . . . .  18\n    3.6.2.  TLS Layer Errors  . . . . . . . . . . . . . . . . . .  18\n    3.6.3.  Phase 2 Errors  . . . . . . . . . . . . . . . . . . .  19\n  3.7.  Fragmentation . . . . . . . . . . . . . . . . . . . . . .  19\n  3.8.  Peer Services . . . . . . . . . . . . . . . . . . . . . .  20\n    3.8.1.  PAC Provisioning  . . . . . . . . . . . . . . . . . .  21\n    3.8.2.  Certificate Provisioning within the Tunnel  . . . . .  22\n    3.8.3.  Server Unauthenticated Provisioning Mode  . . . . . .  23\n    3.8.4.  Channel Binding . . . . . . . . . . . . . . . . . . .  23",
      "raw": true
    },
    {
      "indent": 3,
      "text": "4.  Message Formats . . . . . . . . . . . . . . . . . . . . . . .  24\n  4.1.  TEAP Message Format . . . . . . . . . . . . . . . . . . .  24\n  4.2.  TEAP TLV Format and Support . . . . . . . . . . . . . . .  26\n    4.2.1.  General TLV Format  . . . . . . . . . . . . . . . . .  28\n    4.2.2.  Authority-ID TLV  . . . . . . . . . . . . . . . . . .  29\n    4.2.3.  Identity-Type TLV . . . . . . . . . . . . . . . . . .  30\n    4.2.4.  Result TLV  . . . . . . . . . . . . . . . . . . . . .  31\n    4.2.5.  NAK TLV . . . . . . . . . . . . . . . . . . . . . . .  32\n    4.2.6.  Error TLV . . . . . . . . . . . . . . . . . . . . . .  33\n    4.2.7.  Channel-Binding TLV . . . . . . . . . . . . . . . . .  36\n    4.2.8.  Vendor-Specific TLV . . . . . . . . . . . . . . . . .  37\n    4.2.9.  Request-Action TLV  . . . . . . . . . . . . . . . . .  38\n    4.2.10. EAP-Payload TLV . . . . . . . . . . . . . . . . . . .  40\n    4.2.11. Intermediate-Result TLV . . . . . . . . . . . . . . .  41\n    4.2.12. PAC TLV Format  . . . . . . . . . . . . . . . . . . .  42\n      4.2.12.1.  Formats for PAC Attributes . . . . . . . . . . .  43\n      4.2.12.2.  PAC-Key  . . . . . . . . . . . . . . . . . . . .  44\n      4.2.12.3.  PAC-Opaque . . . . . . . . . . . . . . . . . . .  44\n      4.2.12.4.  PAC-Info . . . . . . . . . . . . . . . . . . . .  45\n      4.2.12.5.  PAC-Acknowledgement TLV  . . . . . . . . . . . .  47\n      4.2.12.6.  PAC-Type TLV . . . . . . . . . . . . . . . . . .  48\n    4.2.13. Crypto-Binding TLV  . . . . . . . . . . . . . . . . .  48\n    4.2.14. Basic-Password-Auth-Req TLV . . . . . . . . . . . . .  51\n    4.2.15. Basic-Password-Auth-Resp TLV  . . . . . . . . . . . .  52\n    4.2.16. PKCS#7 TLV  . . . . . . . . . . . . . . . . . . . . .  53\n    4.2.17. PKCS#10 TLV . . . . . . . . . . . . . . . . . . . . .  54\n    4.2.18. Trusted-Server-Root TLV . . . . . . . . . . . . . . .  55\n  4.3.  TLV Rules . . . . . . . . . . . . . . . . . . . . . . . .  56\n    4.3.1.  Outer TLVs  . . . . . . . . . . . . . . . . . . . . .  57\n    4.3.2.  Inner TLVs  . . . . . . . . . . . . . . . . . . . . .  57\n5.  Cryptographic Calculations  . . . . . . . . . . . . . . . . .  58\n  5.1.  TEAP Authentication Phase 1: Key Derivations  . . . . . .  58\n  5.2.  Intermediate Compound Key Derivations . . . . . . . . . .  59\n  5.3.  Computing the Compound MAC  . . . . . . . . . . . . . . .  61\n  5.4.  EAP Master Session Key Generation . . . . . . . . . . . .  61\n6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  62\n7.  Security Considerations . . . . . . . . . . . . . . . . . . .  66\n  7.1.  Mutual Authentication and Integrity Protection  . . . . .  67\n  7.2.  Method Negotiation  . . . . . . . . . . . . . . . . . . .  67\n  7.3.  Separation of Phase 1 and Phase 2 Servers . . . . . . . .  67\n  7.4.  Mitigation of Known Vulnerabilities and Protocol\n        Deficiencies  . . . . . . . . . . . . . . . . . . . . . .  68\n    7.4.1.  User Identity Protection and Verification . . . . . .  69\n    7.4.2.  Dictionary Attack Resistance  . . . . . . . . . . . .  70\n    7.4.3.  Protection against Man-in-the-Middle Attacks  . . . .  70\n    7.4.4.  PAC Binding to User Identity  . . . . . . . . . . . .  71",
      "raw": true
    },
    {
      "indent": 3,
      "text": "  7.5.  Protecting against Forged Cleartext EAP Packets . . . . .  71\n  7.6.  Server Certificate Validation . . . . . . . . . . . . . .  72\n  7.7.  Tunnel PAC Considerations . . . . . . . . . . . . . . . .  72\n  7.8.  Security Claims . . . . . . . . . . . . . . . . . . . . .  73\n8.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  74\n9.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  75\n  9.1.  Normative References  . . . . . . . . . . . . . . . . . .  75\n  9.2.  Informative References  . . . . . . . . . . . . . . . . .  76\nAppendix A.  Evaluation against Tunnel-Based EAP Method\n             Requirements . . . . . . . . . . . . . . . . . . . .  79\n  A.1.  Requirement 4.1.1: RFC Compliance . . . . . . . . . . . .  79\n  A.2.  Requirement 4.2.1: TLS Requirements . . . . . . . . . . .  79\n  A.3.  Requirement 4.2.1.1.1: Ciphersuite Negotiation  . . . . .  79\n  A.4.  Requirement 4.2.1.1.2: Tunnel Data Protection Algorithms   79\n  A.5.  Requirement 4.2.1.1.3: Tunnel Authentication and Key\n        Establishment . . . . . . . . . . . . . . . . . . . . . .  79\n  A.6.  Requirement 4.2.1.2: Tunnel Replay Protection . . . . . .  79\n  A.7.  Requirement 4.2.1.3: TLS Extensions . . . . . . . . . . .  80\n  A.8.  Requirement 4.2.1.4: Peer Identity Privacy  . . . . . . .  80\n  A.9.  Requirement 4.2.1.5: Session Resumption . . . . . . . . .  80\n  A.10. Requirement 4.2.2: Fragmentation  . . . . . . . . . . . .  80\n  A.11. Requirement 4.2.3: Protection of Data External to Tunnel   80\n  A.12. Requirement 4.3.1: Extensible Attribute Types . . . . . .  80\n  A.13. Requirement 4.3.2: Request/Challenge Response Operation .  80\n  A.14. Requirement 4.3.3: Indicating Criticality of Attributes .  80\n  A.15. Requirement 4.3.4: Vendor-Specific Support  . . . . . . .  81\n  A.16. Requirement 4.3.5: Result Indication  . . . . . . . . . .  81\n  A.17. Requirement 4.3.6: Internationalization of Display\n        Strings . . . . . . . . . . . . . . . . . . . . . . . . .  81\n  A.18. Requirement 4.4: EAP Channel-Binding Requirements . . . .  81\n  A.19. Requirement 4.5.1.1: Confidentiality and Integrity  . . .  81\n  A.20. Requirement 4.5.1.2: Authentication of Server . . . . . .  81\n  A.21. Requirement 4.5.1.3: Server Certificate Revocation\n        Checking  . . . . . . . . . . . . . . . . . . . . . . . .  81\n  A.22. Requirement 4.5.2: Internationalization . . . . . . . . .  81\n  A.23. Requirement 4.5.3: Metadata . . . . . . . . . . . . . . .  82\n  A.24. Requirement 4.5.4: Password Change  . . . . . . . . . . .  82\n  A.25. Requirement 4.6.1: Method Negotiation . . . . . . . . . .  82\n  A.26. Requirement 4.6.2: Chained Methods  . . . . . . . . . . .  82\n  A.27. Requirement 4.6.3: Cryptographic Binding with the TLS\n        Tunnel  . . . . . . . . . . . . . . . . . . . . . . . . .  82\n  A.28. Requirement 4.6.4: Peer-Initiated EAP Authentication  . .  82\n  A.29. Requirement 4.6.5: Method Metadata  . . . . . . . . . . .  82\nAppendix B.  Major Differences from EAP-FAST  . . . . . . . . . .  83\nAppendix C.  Examples . . . . . . . . . . . . . . . . . . . . . .  83\n  C.1.  Successful Authentication . . . . . . . . . . . . . . . .  83\n  C.2.  Failed Authentication . . . . . . . . . . . . . . . . . .  85\n  C.3.  Full TLS Handshake Using Certificate-Based Ciphersuite  .  86",
      "raw": true
    },
    {
      "indent": 5,
      "text": "C.4.  Client Authentication during Phase 1 with Identity\n      Privacy . . . . . . . . . . . . . . . . . . . . . . . . .  88\nC.5.  Fragmentation and Reassembly  . . . . . . . . . . . . . .  89\nC.6.  Sequence of EAP Methods . . . . . . . . . . . . . . . . .  91\nC.7.  Failed Crypto-Binding . . . . . . . . . . . . . . . . . .  94\nC.8.  Sequence of EAP Method with Vendor-Specific TLV Exchange   95\nC.9.  Peer Requests Inner Method after Server Sends Result TLV   97\nC.10. Channel Binding . . . . . . . . . . . . . . . . . . . . .  99",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "A tunnel-based Extensible Authentication Protocol (EAP) method is an EAP method that establishes a secure tunnel and executes other EAP methods under the protection of that secure tunnel. A tunnel-based EAP method can be used in any lower-layer protocol that supports EAP authentication. There are several existing tunnel-based EAP methods that use Transport Layer Security (TLS) [RFC5246] to establish the secure tunnel. EAP methods supporting this include Protected EAP (PEAP) [PEAP], EAP Tunneled Transport Layer Security (EAP-TTLS) [RFC5281], and EAP Flexible Authentication via Secure Tunneling (EAP-FAST) [RFC4851]. However, they all are either vendor-specific or informational, and the industry calls for a Standards Track tunnel-based EAP method. [RFC6678] outlines the list of requirements for a standard tunnel-based EAP method.",
      "ja": "トンネルベースの拡張認証プロトコル（EAP）メソッドは、安全なトンネルを確立し、そのセキュアトンネルの保護の下で他のEAPメソッドを実行するEAPメソッドです。トンネルベースのEAPメソッドはEAP認証をサポートする任意の下位層プロトコルで使用することができます。安全なトンネルを確立するために、トランスポート層セキュリティ（TLS）[RFC5246]を使用して、いくつかの既存のトンネルベースのEAP方法があります。これをサポートするEAPメソッドは、セキュアなトンネリング（EAP-FAST）[RFC4851]を介して、保護されたEAP（PEAP）[PEAP]、EAPトンネリングトランスポート層セキュリティ（EAP-TTLS）[RFC5281]及びEAP柔軟な認証を含みます。しかし、それらはすべて、ベンダー固有または情報のいずれかであり、業界では標準化過程トンネルベースのEAPメソッドの呼び出します。 [RFC6678]は、標準的なトンネルベースのEAPメソッドの要件のリストを概説します。"
    },
    {
      "indent": 3,
      "text": "Since its introduction, EAP-FAST [RFC4851] has been widely adopted in a variety of devices and platforms. It has been adopted by the EMU working group as the basis for the standard tunnel-based EAP method. This document describes the Tunnel Extensible Authentication Protocol (TEAP) version 1, based on EAP-FAST [RFC4851] with some minor changes to meet the requirements outlined in [RFC6678] for a standard tunnel-based EAP method.",
      "ja": "その導入以来、EAP-FAST [RFC4851]は、広くデバイスと様々なプラットフォームに採用されています。これは、標準的なトンネルベースのEAPメソッドのための基礎としてEMUワーキンググループによって採用されています。このドキュメントは、標準のトンネルベースのEAPメソッドに[RFC6678]に概説さ要件を満たすためにいくつかのマイナーな変更をEAP-FAST [RFC4851]に基づいて、トンネル拡張認証プロトコル（TEAP）バージョン1を記述する。"
    },
    {
      "indent": 0,
      "text": "1.1. Specification Requirements",
      "section_title": true,
      "ja": "1.1。仕様要件"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "キーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、 \"SHALL\"、 \"SHOULD\"、 \"ないもの\"、 \"推奨\" \"ない（SHOULD NOT）\"、 \"MAY\"、 \"推奨NOT\"、および「OPTIONAL 「本書では[RFC2119]で説明されるように解釈されるべきです。"
    },
    {
      "indent": 0,
      "text": "1.2. Terminology",
      "section_title": true,
      "ja": "1.2。用語"
    },
    {
      "indent": 3,
      "text": "Much of the terminology in this document comes from [RFC3748]. Additional terms are defined below:",
      "ja": "この文書に記載されている用語の多くは、[RFC3748]から来ています。追加の用語を以下に定義されています。"
    },
    {
      "indent": 3,
      "text": "Protected Access Credential (PAC)",
      "ja": "保護アクセス資格情報（PAC）"
    },
    {
      "indent": 6,
      "text": "Credentials distributed to a peer for future optimized network authentication. The PAC consists of a minimum of two components: a shared secret and an opaque element. The shared secret component contains the pre-shared key between the peer and the authentication server. The opaque part is provided to the peer and is presented to the authentication server when the peer wishes to obtain access to network resources. The opaque element and shared secret are used with TLS stateless session resumption defined in [RFC5077] to establish a protected TLS session. The secret key and opaque part may be distributed using [RFC5077] messages or using TLVs within the TEAP tunnel. Finally, a PAC may optionally include other information that may be useful to the peer.",
      "ja": "資格情報は、将来の最適化されたネットワーク認証のためにピアに配布します。共有シークレットと不透明な要素：PACは、2つの成分の最小値から成ります。共有秘密の成分は、ピアと認証サーバ間の事前共有キーを含んでいます。不透明部分はピアに提供され、ピアがネットワークリソースへのアクセスを得ることを望む場合、認証サーバに提示されます。不透明要素と共有秘密が保護されたTLSセッションを確立するために[RFC5077]で定義されたTLSステートレスセッション再開と共に使用されます。秘密鍵と不透明部分は[RFC5077]メッセージを使用するかTEAPトンネル内のTLVを用いて分散させることができます。最後に、PACは、必要に応じて、ピアに有用であり得る他の情報を含むことができます。"
    },
    {
      "indent": 3,
      "text": "Type-Length-Value (TLV)",
      "ja": "なType-Length-Value（TLV）"
    },
    {
      "indent": 6,
      "text": "The TEAP protocol utilizes objects in TLV format. The TLV format is defined in Section 4.2.",
      "ja": "TEAPプロトコルは、TLV形式のオブジェクトを利用しています。 TLVフォーマットはセクション4.2で定義されています。"
    },
    {
      "indent": 0,
      "text": "2. Protocol Overview",
      "section_title": true,
      "ja": "2.プロトコルの概要"
    },
    {
      "indent": 3,
      "text": "TEAP authentication occurs in two phases after the initial EAP Identity request/response exchange. In the first phase, TEAP employs the TLS [RFC5246] handshake to provide an authenticated key exchange and to establish a protected tunnel. Once the tunnel is established, the second phase begins with the peer and server engaging in further conversations to establish the required authentication and authorization policies. TEAP makes use of TLV objects to carry out the inner authentication, results, and other information, such as channel-binding information.",
      "ja": "TEAP認証が最初のEAPアイデンティティリクエスト/レスポンス交換後の2段階に分けて行われます。第一段階では、TEAPは、TLS [RFC5246]ハンドシェーク認証鍵交換を提供し、保護されたトンネルを確立することを採用しています。トンネルが確立されると、第二段階は、ピアとサーバが必要な認証および承認ポリシーを確立するために、さらに会話に従事することから始まります。 TEAPは、TLVオブジェクトの使用は、チャネルバインディング情報として内部認証結果、および他の情報を、行うことができます。"
    },
    {
      "indent": 3,
      "text": "TEAP makes use of the TLS SessionTicket extension [RFC5077], which supports TLS session resumption without requiring session-specific state stored at the server. In this document, the SessionTicket is referred to as the Protected Access Credential opaque data (or PAC-Opaque). The PAC-Opaque may be distributed through the use of the NewSessionTicket message or through a mechanism that uses TLVs within Phase 2 of TEAP. The secret key used to resume the session in TEAP is referred to as the Protected Access Credential key (or PAC-Key). When the NewSessionTicket message is used to distribute the PAC-Opaque, the PAC-Key is the master secret for the session. If TEAP",
      "ja": "TEAPは、サーバに保存されたセッション固有の状態を必要とすることなく、TLSセッション再開をサポートTLS SessionTicket拡張[RFC5077]を使用します。この文書では、SessionTicketは、保護されたアクセス資格不透明なデータ（またはPAC不透明）と呼ばれます。 PAC不透明はNewSessionTicketメッセージの使用を介して、またはTEAPのフェーズ2内のTLVを使用するメカニズムを介して配布することができます。 TEAPでセッションを再開するために使用される秘密鍵は、保護アクセス資格キー（またはPAC-キー）と呼ばれています。 NewSessionTicketメッセージはPAC-不透明を配布するために使用される場合、PAC-Keyがセッションのマスターシークレットです。 TEAPの場合"
    },
    {
      "indent": 3,
      "text": "Phase 2 is used to distribute the PAC-Opaque, then the PAC-Key is distributed along with the PAC-Opaque. TEAP implementations MUST support the [RFC5077] mechanism for distributing a PAC-Opaque, and it is RECOMMENDED that implementations support the capability to distribute the ticket and secret key within the TEAP tunnel.",
      "ja": "フェーズ2は、PAC-キーがPAC不透明と一緒に配布され、PAC不透明を配布するために使用されます。 TEAP実装は、PAC-不透明を配布する[RFC5077]メカニズムをサポートしなければなりません、実装がTEAPトンネル内チケットと秘密鍵を配布する能力をサポートすることが推奨されます。"
    },
    {
      "indent": 3,
      "text": "The TEAP conversation is used to establish or resume an existing session to typically establish network connectivity between a peer and the network. Upon successful execution of TEAP, the EAP peer and EAP server both derive strong session key material that can then be communicated to the network access server (NAS) for use in establishing a link-layer security association.",
      "ja": "TEAP会話は通常、ピアとネットワークの間のネットワーク接続を確立するために、既存のセッションを確立したり再開するために使用されます。 TEAP、EAPピアとEAPサーバが正常に実行すると、両方のその後リンク層セキュリティアソシエーションを確立する際に使用するためのネットワーク・アクセス・サーバ（NAS）に伝達することができる強力なセッション鍵を導出します。"
    },
    {
      "indent": 0,
      "text": "2.1. Architectural Model",
      "section_title": true,
      "ja": "2.1。アーキテクチャモデル"
    },
    {
      "indent": 3,
      "text": "The network architectural model for TEAP usage is shown below:",
      "ja": "TEAPの使用のためのネットワークアーキテクチャモデルを以下に示します。"
    },
    {
      "indent": 4,
      "text": "+----------+      +----------+      +----------+      +----------+\n|          |      |          |      |          |      |  Inner   |\n|   Peer   |<---->|  Authen- |<---->|   TEAP   |<---->|  Method  |\n|          |      |  ticator |      |  server  |      |  server  |\n|          |      |          |      |          |      |          |\n+----------+      +----------+      +----------+      +----------+",
      "raw": true
    },
    {
      "indent": 25,
      "text": "TEAP Architectural Model",
      "ja": "TEAPアーキテクチャモデル"
    },
    {
      "indent": 3,
      "text": "The entities depicted above are logical entities and may or may not correspond to separate network components. For example, the TEAP server and inner method server might be a single entity; the authenticator and TEAP server might be a single entity; or the functions of the authenticator, TEAP server, and inner method server might be combined into a single physical device. For example, typical IEEE 802.11 deployments place the authenticator in an access point (AP) while a RADIUS server may provide the TEAP and inner method server components. The above diagram illustrates the division of labor among entities in a general manner and shows how a distributed system might be constructed; however, actual systems might be realized more simply. The security considerations in Section 7.3 provide an additional discussion of the implications of separating the TEAP server from the inner method server.",
      "ja": "上に示したエンティティは、論理エンティティであり、又はネットワーク構成要素を分離するために対応してもしなくてもよいです。例えば、TEAPサーバとインナー方法サーバは、単一のエンティティであるかもしれません。オーセンティケータとTEAPサーバーは、単一のエンティティであるかもしれません。又は認証子、TEAPサーバ、及びインナー方法サーバの機能は、単一の物理デバイスに統合されるかもしれません。 RADIUSサーバは、TEAPとインナー方法サーバコンポーネントを提供することができるが、例えば、一般的なIEEE 802.11の展開は、アクセスポイント（AP）でオーセンティケータを配置します。上記の図は一般的な方法でエンティティ間分業を示し、分散システムを構築する方法を示し。しかし、実際のシステムでは、より簡単に実現される可能性があります。 7.3節では、セキュリティ上の考慮事項は、内部方式サーバからTEAPサーバーを分離する意味合いの追加的な議論を提供しています。"
    },
    {
      "indent": 0,
      "text": "2.2. Protocol-Layering Model",
      "section_title": true,
      "ja": "2.2。プロトコルレイヤリングモデル"
    },
    {
      "indent": 3,
      "text": "TEAP packets are encapsulated within EAP; EAP in turn requires a transport protocol. TEAP packets encapsulate TLS, which is then used to encapsulate user authentication information. Thus, TEAP messaging can be described using a layered model, where each layer encapsulates the layer above it. The following diagram clarifies the relationship between protocols:",
      "ja": "TEAPパケットは、EAP内に封入されています。ターンでのEAPは、トランスポートプロトコルが必要です。 TEAPパケットは、ユーザ認証情報をカプセル化するために使用されるTLSをカプセル化。したがって、TEAPメッセージングは​​、それぞれの層がその上の層をカプセル化する階層化モデルを用いて記述することができます。次の図は、プロトコル間の関係を明確に："
    },
    {
      "indent": 4,
      "text": "+---------------------------------------------------------------+\n|       Inner EAP Method     |     Other TLV information        |\n|---------------------------------------------------------------|\n|                 TLV Encapsulation (TLVs)                      |\n|---------------------------------------------------------------|\n|                TLS         |     Optional Outer TLVs          |\n|---------------------------------------------------------------|\n|                         TEAP                                  |\n|---------------------------------------------------------------|\n|                         EAP                                   |\n|---------------------------------------------------------------|\n|    Carrier Protocol (EAP over LAN, RADIUS, Diameter, etc.)    |\n+---------------------------------------------------------------+",
      "raw": true
    },
    {
      "indent": 26,
      "text": "Protocol-Layering Model",
      "ja": "プロトコルレイヤリングモデル"
    },
    {
      "indent": 3,
      "text": "The TLV layer is a payload with TLV objects as defined in Section 4.2. The TLV objects are used to carry arbitrary parameters between an EAP peer and an EAP server. All conversations in the TEAP protected tunnel are encapsulated in a TLV layer.",
      "ja": "セクション4.2で定義されるようなTLV層がTLVオブジェクトとペイロードです。 TLVオブジェクトは、EAPピアとEAPサーバとの間の任意のパラメータを運ぶために使用されます。 TEAP保護されたトンネル内のすべての会話は、TLV層中に封入されています。"
    },
    {
      "indent": 3,
      "text": "TEAP packets may include TLVs both inside and outside the TLS tunnel. The term \"Outer TLVs\" is used to refer to optional TLVs outside the TLS tunnel, which are only allowed in the first two messages in the TEAP protocol. That is the first EAP-server-to-peer message and first peer-to-EAP-server message. If the message is fragmented, the whole set of messages is counted as one message. The term \"Inner TLVs\" is used to refer to TLVs sent within the TLS tunnel. In TEAP Phase 1, Outer TLVs are used to help establish the TLS tunnel, but no Inner TLVs are used. In Phase 2 of the TEAP conversation, TLS records may encapsulate zero or more Inner TLVs, but no Outer TLVs.",
      "ja": "TEAPパケットは、TLSトンネル内と外の両方のTLVを含んでいてもよいです。用語「外側のTLVは、」のみTEAPプロトコルの最初の2つのメッセージで許可されているTLSトンネル外任意のTLVを指すために使用されます。すなわち、第一EAPサーバ・ツー・ピア・メッセージと第ピア・ツー・EAPサーバメッセージです。メッセージが断片化されている場合、メッセージの全体のセットは、1つのメッセージとしてカウントされます。用語「内側のTLVは、」TLSトンネル内で送信のTLVを指すために使用されます。 TEAPフェーズ1では、外部のTLVは、TLSトンネルの確立を支援するために使用されているが、何のインナーTLVが使用されていません。 TEAP会話のフェーズ2では、TLSレコードは、ゼロ以上の内側のTLV、ない外のTLVをカプセル化することができます。"
    },
    {
      "indent": 3,
      "text": "Methods for encapsulating EAP within carrier protocols are already defined. For example, IEEE 802.1X [IEEE.802-1X.2013] may be used to transport EAP between the peer and the authenticator; RADIUS [RFC3579] or Diameter [RFC4072] may be used to transport EAP between the authenticator and the EAP server.",
      "ja": "キャリアプロトコル内でEAPをカプセル化するための方法は、すでに定義されています。例えば、IEEE 802.1X [IEEE.802-1X.2013]ピアとオーセンティケータとの間のEAPを搬送するために使用することができます。 RADIUS [RFC3579]または直径[RFC4072]は、オーセンティケータとEAPサーバの間でEAPを搬送するために使用することができます。"
    },
    {
      "indent": 0,
      "text": "3. TEAP Protocol",
      "section_title": true,
      "ja": "3. TEAPプロトコル"
    },
    {
      "indent": 3,
      "text": "The operation of the protocol, including Phase 1 and Phase 2, is the topic of this section. The format of TEAP messages is given in Section 4, and the cryptographic calculations are given in Section 5.",
      "ja": "フェーズ1とフェーズ2を含むプロトコルの動作は、このセクションのトピックです。 TEAPメッセージのフォーマットはセクション4に記載されている、暗号計算は、セクション5に記載されています。"
    },
    {
      "indent": 0,
      "text": "3.1. Version Negotiation",
      "section_title": true,
      "ja": "3.1。バージョンネゴシエーション"
    },
    {
      "indent": 3,
      "text": "TEAP packets contain a 3-bit Version field, following the TLS Flags field, which enables future TEAP implementations to be backward compatible with previous versions of the protocol. This specification documents the TEAP version 1 protocol; implementations of this specification MUST use a Version field set to 1.",
      "ja": "TEAPパケットは、プロトコルの以前のバージョンと下位互換性があるように、将来のTEAPの実装を可能TLSフラグフィールド、以下、3ビットのバージョンフィールドを含みます。この仕様は、TEAPバージョン1プロトコルを文書化し、この仕様の実装は1に設定されVersion]フィールドを使用しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Version negotiation proceeds as follows:",
      "ja": "次のようにバージョン交渉が進行します："
    },
    {
      "indent": 3,
      "text": "1. In the first EAP-Request sent with EAP type=TEAP, the EAP server MUST set the Version field to the highest version it supports.",
      "ja": "1. EAPタイプ= TEAPで送信された最初のEAP要求では、EAPサーバはそれがサポートする最上位バージョンへのバージョンフィールドを設定しなければなりません。"
    },
    {
      "indent": 3,
      "text": "2a. If the EAP peer supports this version of the protocol, it responds with an EAP-Response of EAP type=TEAP, including the version number proposed by the TEAP server.",
      "ja": "図2（a）。 EAPピアがプロトコルのこのバージョンをサポートしている場合、それはTEAPサーバによって提案されたバージョン番号を含むEAPタイプ= TEAPのEAP-応答で応答します。"
    },
    {
      "indent": 3,
      "text": "2b. If the TEAP peer does not support the proposed version but supports a lower version, it responds with an EAP-Response of EAP type=TEAP and sets the Version field to its highest supported version.",
      "ja": "図2b。 TRAPピアが提案されているバージョンをサポートしていますが低いバージョンをサポートしていない場合は、EAPの種類= PEAPのEAP-応答で応答し、その最高のサポートされているバージョンにバージョンフィールドを設定します。"
    },
    {
      "indent": 3,
      "text": "2c. If the TEAP peer only supports versions higher than the version proposed by the TEAP server, then use of TEAP will not be possible. In this case, the TEAP peer sends back an EAP-Nak either to negotiate a different EAP type or to indicate no other EAP types are available.",
      "ja": "図2c。 TEAPピアが唯一のTEAPサーバによって提案されたバージョンよりも高いバージョンをサポートしている場合は、TEAPの使用することはできません。この場合、TEAPピアは異なるEAPタイプをネゴシエートするか、他のEAPタイプが利用可能でないことを示すためにいずれかのEAP-NAKを送り返します。"
    },
    {
      "indent": 3,
      "text": "3a. If the TEAP server does not support the version number proposed by the TEAP peer, it MUST either terminate the conversation with an EAP Failure or negotiate a new EAP type.",
      "ja": "図3（a）。 TRAPサーバのTRAPピアから提案されたバージョン番号をサポートしていない、それはEAP失敗との会話を終了するか、新しいEAPタイプを交渉する必要があります。"
    },
    {
      "indent": 3,
      "text": "3b. If the TEAP server does support the version proposed by the TEAP peer, then the conversation continues using the version proposed by the TEAP peer.",
      "ja": "図3b。 TEAPサーバは、TEAPピアから提案されたバージョンをサポートしている場合、その会話はTEAPピアから提案されたバージョンを使用し続けています。"
    },
    {
      "indent": 3,
      "text": "The version negotiation procedure guarantees that the TEAP peer and server will agree to the latest version supported by both parties. If version negotiation fails, then use of TEAP will not be possible, and another mutually acceptable EAP method will need to be negotiated if authentication is to proceed.",
      "ja": "バージョン交渉手順はTEAPピアおよびサーバは、両当事者によってサポートされている最新のバージョンに同意することが保証されます。バージョン交渉が失敗した場合、TEAPの使用ができなくなり、認証が進むのであれば、別の相互に受け入れ可能なEAP方式がネゴシエートする必要があります。"
    },
    {
      "indent": 3,
      "text": "The TEAP version is not protected by TLS and hence can be modified in transit. In order to detect a modification of the TEAP version, the peers MUST exchange the TEAP version number received during version negotiation using the Crypto-Binding TLV described in Section 4.2.13. The receiver of the Crypto-Binding TLV MUST verify that the version received in the Crypto-Binding TLV matches the version sent by the receiver in the TEAP version negotiation. If the Crypto-Binding TLV fails to be validated, then it is a fatal error and is handled as described in Section 3.6.3.",
      "ja": "TEAPバージョンはTLSによって保護されておらず、したがって転送中に変更することができます。 TEAPバージョンの変更を検出するために、ピアは、暗号バインディングTLVは、セクション4.2.13に記載の使用バージョンネゴシエーション中に受信TEAPバージョン番号を交換しなければなりません。暗号バインディングTLVの受信機は、暗号バインディングTLVに受信されたバージョンは、TEAPバージョンネゴシエーションに受信機によって送信されたバージョンと一致することを確認しなければなりません。暗号バインディングTLVを検証することに失敗した場合、それは致命的なエラーで、セクション3.6.3で説明したように処理されます。"
    },
    {
      "indent": 0,
      "text": "3.2. TEAP Authentication Phase 1: Tunnel Establishment",
      "section_title": true,
      "ja": "3.2。 TEAP認証フェーズ1：トンネルの確立"
    },
    {
      "indent": 3,
      "text": "TEAP relies on the TLS handshake [RFC5246] to establish an authenticated and protected tunnel. The TLS version offered by the peer and server MUST be TLS version 1.2 [RFC5246] or later. This version of the TEAP implementation MUST support the following TLS ciphersuites:",
      "ja": "TEAPは認証および保護されたトンネルを確立するために、TLSハンドシェイク[RFC5246]に依存しています。ピア及びサーバによって提供されるTLSバージョンは、TLSバージョン1.2 [RFC5246]以降でなければなりません。 TEAP実装のこのバージョンは、次のTLS暗号群をサポートする必要があります。"
    },
    {
      "indent": 6,
      "text": "TLS_RSA_WITH_AES_128_CBC_SHA [RFC5246]",
      "ja": "TLS_RSA_WITH_AES_128_CBC_SHA [RFC5246]"
    },
    {
      "indent": 6,
      "text": "TLS_DHE_RSA_WITH_AES_128_CBC_SHA [RFC5246]",
      "ja": "TLS_DHE_RSA_WITH_AES_128_CBC_SHA [RFC5246]"
    },
    {
      "indent": 3,
      "text": "This version of the TEAP implementation SHOULD support the following TLS ciphersuite:",
      "ja": "TEAP実装のこのバージョンは、次のTLS暗号スイートをサポートする必要があります。"
    },
    {
      "indent": 6,
      "text": "TLS_RSA_WITH_AES_256_CBC_SHA [RFC5246]",
      "ja": "TLS_RSA_WITH_AES_256_CBC_SHA [RFC5246]"
    },
    {
      "indent": 3,
      "text": "Other ciphersuites MAY be supported. It is REQUIRED that anonymous ciphersuites such as TLS_DH_anon_WITH_AES_128_CBC_SHA [RFC5246] only be used in the case when the inner authentication method provides mutual authentication, key generation, and resistance to man-in-the-middle and dictionary attacks. TLS ciphersuites that do not provide confidentiality MUST NOT be used. During the TEAP Phase 1 conversation, the TEAP endpoints MAY negotiate TLS compression. During TLS tunnel establishment, TLS extensions MAY be used. For instance, the Certificate Status Request extension [RFC6066] and the Multiple Certificate Status Request extension [RFC6961] can be used to leverage a certificate-status protocol such as Online Certificate Status Protocol (OCSP) [RFC6960] to check the validity of server certificates. TLS renegotiation indications defined in RFC 5746 [RFC5746] MUST be supported.",
      "ja": "他の暗号スイートをサポートすることができます。内部認証方式は、相互認証、鍵生成、のman-in-the-middle及び辞書攻撃に対する耐性を提供する場合、このようなTLS_DH_anon_WITH_AES_128_CBC_SHA [RFC5246]として匿名暗号スイートのみの場合に使用する必要があります。機密性を提供しないTLS暗号群を使用してはいけません。 TEAPフェーズ1の会話中に、TEAPエンドポイントはTLS圧縮を交渉することができます。 TLSトンネル確立時には、TLS拡張を使用することができます。たとえば、証明書のステータス要求拡張[RFC6066]と、複数の証明書のステータス要求拡張[RFC6961]は、このようなオンライン証明書状態プロトコル（OCSP）[RFC6960]サーバ証明書の有効性を確認するよう証明書状態プロトコルを活用するために使用することができます。 RFC 5746 [RFC5746]で定義されたTLS再ネゴシエーション指示をサポートしなければなりません。"
    },
    {
      "indent": 3,
      "text": "The EAP server initiates the TEAP conversation with an EAP request containing a TEAP/Start packet. This packet includes a set Start (S) bit, the TEAP version as specified in Section 3.1, and an authority identity TLV. The TLS payload in the initial packet is empty. The authority identity TLV (Authority-ID TLV) is used to provide the peer a hint of the server's identity that may be useful in helping the peer select the appropriate credential to use. Assuming that the peer supports TEAP, the conversation continues with the peer sending an EAP-Response packet with EAP type of TEAP with the Start (S) bit clear and the version as specified in Section 3.1. This message encapsulates one or more TLS handshake messages. If the TEAP version negotiation is successful, then the TEAP conversation continues until the EAP server and EAP peer are ready to enter Phase 2. When the full TLS handshake is performed, then the first payload of TEAP Phase 2 MAY be sent along with a server-finished handshake message to reduce the number of round trips.",
      "ja": "EAPサーバは、TEAP /開始パケットを含むEAP要求にTEAPの会話を開始します。このパケットは、集合・スタート（S）ビット、3.1節で指定されているようTEAPのバージョン、および権限のアイデンティティTLVを含んでいます。最初のパケットでTLSペイロードは空です。権限アイデンティティTLV（認証局-ID TLV）がピアにピアが使用する適切な資格情報を選択するうえで有用である可能性があるサーバーのIDのヒントを提供するために使用されます。ピアがTEAPをサポートしていると仮定すると、会話がスタート（S）ビットをクリアし、3.1節で指定されたバージョンでTEAPのEAPタイプでEAP-Responseパケットを送信するピアと続きます。このメッセージは、一の以上のTLSハンドシェイクメッセージをカプセル化します。 TEAPのバージョン交渉が成功した場合、EAPサーバとEAPピアがフェーズ2の完全なTLSハンドシェイクが実行されると、その後、TEAPフェーズ2の最初のペイロードは、サーバと一緒に送信されるかもしれないを入力する準備ができるまで、その後、TEAPの会話は継続します-finishedハンドシェイクメッセージは、ラウンドトリップの回数を削減します。"
    },
    {
      "indent": 3,
      "text": "TEAP implementations MUST support mutual peer authentication during tunnel establishment using the TLS ciphersuites specified in this section. The TEAP peer does not need to authenticate as part of the TLS exchange but can alternatively be authenticated through additional exchanges carried out in Phase 2.",
      "ja": "TEAP実装は、このセクションで指定されたTLSの暗号スイートを使用して、トンネル確立時の相互ピア認証をサポートしなければなりません。 TEAPピアはTLS交換の一部として認証する必要はなく、代わりに第2段階で行う追加の交換を介して認証することができます。"
    },
    {
      "indent": 3,
      "text": "The TEAP tunnel protects peer identity information exchanged during Phase 2 from disclosure outside the tunnel. Implementations that wish to provide identity privacy for the peer identity need to carefully consider what information is disclosed outside the tunnel prior to Phase 2. TEAP implementations SHOULD support the immediate renegotiation of a TLS session to initiate a new handshake message exchange under the protection of the current ciphersuite. This allows support for protection of the peer's identity when using TLS client authentication. An example of the exchanges using TLS renegotiation to protect privacy is shown in Appendix C.",
      "ja": "TEAPトンネルは、トンネルの外に開示からフェーズ2の間に交換ピア識別情報を保護します。ピアのアイデンティティのためのアイデンティティプライバシーを提供したい実装は慎重2. TEAPの実装を相に前にトンネルの外に開示されているものの情報を検討する必要があるの保護の下で新しいハンドシェイクメッセージの交換を開始するために、TLSセッションの即時再交渉をサポートすべきです現在の暗号スイート。 TLSクライアント認証を使用する場合は、ピアの識別情報の保護のためのサポートを可能にします。プライバシーを保護するためにTLSの再ネゴシエーションを使用して交換の例は、付録Cに示されています"
    },
    {
      "indent": 3,
      "text": "The following sections describe resuming a TLS session based on server-side or client-side state.",
      "ja": "次のセクションでは、サーバー側またはクライアント側の状態に基づいて、TLSセッションを再開記述する。"
    },
    {
      "indent": 0,
      "text": "3.2.1. TLS Session Resume Using Server State",
      "section_title": true,
      "ja": "3.2.1。 TLSセッションは、サーバーの状態を使用して再開します"
    },
    {
      "indent": 3,
      "text": "TEAP session resumption is achieved in the same manner TLS achieves session resume. To support session resumption, the server and peer minimally cache the Session ID, master secret, and ciphersuite. The peer attempts to resume a session by including a valid Session ID from a previous TLS handshake in its ClientHello message. If the server finds a match for the Session ID and is willing to establish a new connection using the specified session state, the server will respond with the same Session ID and proceed with the TEAP Phase 1 tunnel establishment based on a TLS abbreviated handshake. After a successful conclusion of the TEAP Phase 1 conversation, the conversation then continues on to Phase 2.",
      "ja": "TEAPセッション再開は、TLSがセッション再開を実現し、同じ方法で達成されます。セッション再開、サーバーをサポートし、するために最小限のピアセッションID、マスターシークレット、および暗号スイートをキャッシュします。ピアはそのClientHelloメッセージの前のTLSハンドシェイクから有効なセッションIDを含めてセッションを再開しようとします。サーバは、セッションIDの一致を検出し、指定されたセッション状態を使用して新しい接続を確立するために喜んであれば、サーバは同じセッションIDで応答し、TLS簡略握手をもとにTEAPフェーズ1つのトンネルの確立を進めてまいります。 TEAPフェーズ1人の会話の成功裡の妥結した後、会話はその後、フェーズ2への上に続いています。"
    },
    {
      "indent": 0,
      "text": "3.2.2. TLS Session Resume Using a PAC",
      "section_title": true,
      "ja": "3.2.2。 TLSセッションは、PACの使用を再開します"
    },
    {
      "indent": 3,
      "text": "TEAP supports the resumption of sessions based on server state being stored on the client side using the TLS SessionTicket extension techniques described in [RFC5077]. This version of TEAP supports the provisioning of a ticket called a Protected Access Credential (PAC) through the use of the NewSessionTicket handshake described in [RFC5077], as well as provisioning of a PAC inside the protected tunnel. Implementations MUST support the TLS Ticket extension [RFC5077] mechanism for distributing a PAC and may provide additional ways to provision the PAC, such as manual configuration. Since the PAC mentioned here is used for establishing the TLS tunnel, it is more specifically referred to as the Tunnel PAC. The Tunnel PAC is a security credential provided by the EAP server to a peer and comprised of:",
      "ja": "TEAPは、[RFC5077]に記載のTLS SessionTicket拡張技術を使用して、クライアント側に記憶されているサーバの状態に基づいて、セッションの再開をサポートします。 TEAPのこのバージョンは、保護されたトンネル内の[RFC5077]に記載NewSessionTicketハンドシェークを使用することによって保護されたアクセス資格情報（PAC）と呼ばれるチケットのプロビジョニング、ならびにPACのプロビジョニングをサポートします。実装は、PACを配布するためのTLSチケット拡張[RFC5077]メカニズムをサポートしなければならないし、そのような手動の構成として規定にPACを、追加の方法を提供することができます。ここで言及したPACは、TLSトンネルを確立するために使用されるので、より具体的にトンネルPACと呼ばれています。トンネルPACは、ピアにEAPサーバによって提供され、で構成されるセキュリティ証明書です。"
    },
    {
      "indent": 3,
      "text": "1. PAC-Key: this is the key used by the peer as the TLS master secret to establish the TEAP Phase 1 tunnel. The PAC-Key is a strong, high-entropy, at minimum 48-octet key and is typically the master secret from a previous TLS session. The PAC-Key is a secret and MUST be treated accordingly. Otherwise, if leaked, it could lead to user credentials being compromised if sent within the tunnel established using the PAC-Key. In the case that a PAC-Key is provisioned to the peer through another means, it MUST have its confidentiality and integrity protected by a mechanism, such as the TEAP Phase 2 tunnel. The PAC-Key MUST be stored securely by the peer.",
      "ja": "1. PACキー：これはTEAPフェーズ1つのトンネルを確立するためにTLSマスターシークレットとしてピアによって使用される鍵です。 PAC-Keyが最小48オクテットのキーで、強い、高エントロピーであり、通常は、前のTLSセッションからマスターシークレットです。 PAC-Keyが秘密であるし、それに応じて扱わなければなりません。 PAC-キーを使用して確立されたトンネル内で送信あればそうでない場合は、漏洩した場合、それはユーザーの資格情報が危険にさらされることにつながる可能性があります。 PACキーが別の手段を介してピアにプロビジョニングされている場合には、その機密性と完全性は、TEAPフェーズ2トンネルと、機構によって保護されなければなりません。 PAC-キーピアによって安全に格納されなければなりません。"
    },
    {
      "indent": 3,
      "text": "2. PAC-Opaque: this is a variable-length field containing the ticket that is sent to the EAP server during the TEAP Phase 1 tunnel establishment based on [RFC5077]. The PAC-Opaque can only be interpreted by the EAP server to recover the required information for the server to validate the peer's identity and authentication. The PAC-Opaque includes the PAC-Key and other TLS session parameters. It may contain the PAC's peer identity. The PAC-Opaque format and contents are specific to the PAC issuing server. The PAC-Opaque may be presented in the clear, so an attacker MUST NOT be able to gain useful information from the PAC-Opaque itself. The server issuing the PAC-Opaque needs to ensure it is protected with strong cryptographic keys and algorithms. The PAC-Opaque may be distributed using the NewSessionTicket message defined in [RFC5077], or it may be distributed through another mechanism such as the Phase 2 TLVs defined in this document.",
      "ja": "2. PAC不透明：これは[RFC5077]に基づいて、TEAPフェーズ1つのトンネル確立中のEAPサーバに送信されたチケットを含む可変長フィールドです。 PAC-不透明にのみピアのアイデンティティと認証を検証するために、サーバーに必要な情報を回復するためにEAPサーバによって解釈することができます。 PAC-Opaqueには、PAC-Keyと他のTLSセッションパラメータを含んでいます。これは、PACのピアのアイデンティティを含んでいてもよいです。 PAC-不透明な形式と内容は、PAC発行サーバに固有のものです。 PAC不透明なので、攻撃者はPAC-不透明自体から有用な情報を得ることが可能であってはなりません明確に提示されてもよいです。 PAC-不透明を発行するサーバーは、それが強力な暗号化キーとアルゴリズムで保護されていることを確認する必要があります。 PAC不透明は[RFC5077]で定義さNewSessionTicketメッセージを使用して分散させることができる、またはそれは、このような本文書で定義されたフェーズ2つのTLVとして別の機構を介して配布することができます。"
    },
    {
      "indent": 3,
      "text": "3. PAC-Info: this is an optional variable-length field used to provide, at a minimum, the authority identity of the PAC issuer. Other useful but not mandatory information, such as the PAC-Key lifetime, may also be conveyed by the PAC-issuing server to the peer during PAC provisioning or refreshment. PAC-Info is not included if the NewSessionTicket message is used to provision the PAC.",
      "ja": "3. PAC-情報：これは、最低でも、PACの発行者の権限のIDを提供するために使用されるオプションの可変長フィールドです。このようなPAC-Keyの寿命のような他の有用ではなく、必須の情報も、PACプロビジョニングまたはリフレッシュ中にピアにPAC-発行サーバによって搬送されてもよいです。 NewSessionTicketメッセージが提供PACに使用されている場合はPAC-情報が含まれていません。"
    },
    {
      "indent": 3,
      "text": "The use of the PAC is based on the SessionTicket extension defined in [RFC5077]. The EAP server initiates the TEAP conversation as normal. Upon receiving the Authority-ID TLV from the server, the peer checks to see if it has an existing valid PAC-Key and PAC-Opaque for the server. If it does, then it obtains the PAC-Opaque and puts it in the SessionTicket extension in the ClientHello. It is RECOMMENDED in TEAP that the peer include an empty Session ID in a ClientHello containing a PAC-Opaque. This version of TEAP supports the NewSessionTicket Handshake message as described in [RFC5077] for distribution of a new PAC, as well as the provisioning of PAC inside the protected tunnel. If the PAC-Opaque included in the SessionTicket extension is valid and the EAP server permits the abbreviated TLS handshake, it will select the ciphersuite from information within the PAC-Opaque and finish with the abbreviated TLS handshake. If the server receives a Session ID and a PAC-Opaque in the SessionTicket extension in a ClientHello, it should place the same Session ID in the ServerHello if it is resuming a session based on the PAC-Opaque. The conversation then proceeds as described in [RFC5077] until the handshake completes or a fatal error occurs. After the abbreviated handshake completes, the peer and the server are ready to commence Phase 2.",
      "ja": "PACの使用は[RFC5077]で定義さSessionTicket拡張に基づいています。 EAPサーバは通常どおりTEAPの会話を開始します。それは、サーバ用の既存の有効なPACキーとPAC-不透明を持っているかどうかを確認するために、サーバからの認証局-ID TLV、ピアチェックを受けました。それがない場合、それはPAC-不透明を取得したClientHelloでSessionTicket拡張子に入れます。ピアがPAC-不透明含有のClientHelloに空のセッションIDを含むことTEAPで推奨されています。新しいPACの分布、ならびに保護されたトンネル内のPACのプロビジョニングのために[RFC5077]に記載されているようにTEAPのこのバージョンはNewSessionTicketハンドシェイクメッセージをサポートします。 PAC-不透明でSessionTicket拡張が有効であり、EAPサーバが簡略TLSハンドシェイクを可能に含まれている場合、それはPAC-不透明内の情報から暗号スイートを選択し、簡略TLSハンドシェイクを終了します。サーバは、セッションIDとのClientHelloでSessionTicket拡張にPAC-不透明を受信した場合、それはPAC-不透明に基づいてセッションを再開した場合、それはのServerHelloで同じセッションIDを配置する必要があります。 [RFC5077]に記載されているように、ハンドシェイクが完了するか、または致命的なエラーが発生するまで、会話は、次に進みます。簡略ハンドシェイクが完了した後、ピアおよびサーバは、フェーズ2を開始する準備が整いました。"
    },
    {
      "indent": 0,
      "text": "3.2.3. Transition between Abbreviated and Full TLS Handshake",
      "section_title": true,
      "ja": "3.2.3。短縮および完全なTLSハンドシェイクの間の遷移"
    },
    {
      "indent": 3,
      "text": "If session resumption based on server-side or client-side state fails, the server can gracefully fall back to a full TLS handshake. If the ServerHello received by the peer contains an empty Session ID or a Session ID that is different than in the ClientHello, the server may fall back to a full handshake. The peer can distinguish the server's intent to negotiate a full or abbreviated TLS handshake by checking the next TLS handshake messages in the server response to the ClientHello. If ChangeCipherSpec follows the ServerHello in response to the ClientHello, then the server has accepted the session resumption and intends to negotiate the abbreviated handshake. Otherwise, the server intends to negotiate the full TLS handshake. A peer can request that a new PAC be provisioned after the full TLS handshake and mutual authentication of the peer and the server. A peer SHOULD NOT request that a new PAC be provisioned after the abbreviated handshake, as requesting a new session ticket based on resumed session is not permitted. In order to facilitate the fallback to a full handshake, the peer SHOULD include ciphersuites that allow for a full handshake and possibly PAC provisioning so the server can select one of these in case session resumption fails. An example of the transition is shown in Appendix C.",
      "ja": "サーバー側またはクライアント側の状態に基づいて、セッションの再開が失敗した場合、サーバーは正常バックフルTLSハンドシェイクに落ちることができます。ピアによって受信のServerHelloが空セッションIDやたClientHelloでは異なるセッションIDが含まれている場合、サーバは、完全なハンドシェイクにフォールバックすることができます。ピアはのClientHelloに対するサーバの応答の次のTLSハンドシェイクメッセージをチェックすることによって、完全または簡略TLSハンドシェイクを交渉するために、サーバの意図を区別することができます。 ChangeCipherSpecをはのClientHelloに応じてのServerHelloを以下の場合、サーバは、セッション再開を受け入れ、簡略ハンドシェイクを交渉する予定です。そうしないと、サーバーは、完全なTLSハンドシェイクを交渉する予定。ピアは新しいPACは、完全なTLSハンドシェイクとピアとサーバの相互認証後にプロビジョニングすることを要求することができます。ピアは、セッションが許可されていません再開に基づいて新しいセッションチケットを要求するように、新しいPACは、簡略ハンドシェイクの後にプロビジョニングすることを要求すべきでありません。セッションの再開が失敗した場合、サーバは、これらのいずれかを選択できるように、完全なハンドシェイクへのフォールバックを容易にするために、ピアは完全なハンドシェイクおよびおそらくPACプロビジョニングを可能にする暗号スイートを含むべきです。遷移の例は、付録Cに示されています"
    },
    {
      "indent": 0,
      "text": "3.3. TEAP Authentication Phase 2: Tunneled Authentication",
      "section_title": true,
      "ja": "3.3。 TEAP認証フェーズ2：トンネルされた認証"
    },
    {
      "indent": 3,
      "text": "The second portion of the TEAP authentication occurs immediately after successful completion of Phase 1. Phase 2 occurs even if both peer and authenticator are authenticated in the Phase 1 TLS negotiation. Phase 2 MUST NOT occur if the Phase 1 TLS handshake fails, as that will compromise the security as the tunnel has not been established successfully. Phase 2 consists of a series of requests and responses encapsulated in TLV objects defined in Section 4.2. Phase 2 MUST always end with a Crypto-Binding TLV exchange described in Section 4.2.13 and a protected termination exchange described in Section 3.3.3. The TLV exchange may include the execution of zero or more EAP methods within the protected tunnel as described in Section 3.3.1. A server MAY proceed directly to the protected termination exchange if it does not wish to request further authentication from the peer. However, the peer and server MUST NOT assume that either will skip inner EAP methods or other TLV exchanges, as the other peer might have a different security policy. The peer may have roamed to a network that requires conformance with a different authentication policy, or the peer may request the server take additional action (e.g., channel binding) through the use of the Request-Action TLV as defined in Section 4.2.9.",
      "ja": "TEAP認証の第二の部分は、ピアとオーセンティケータの両方がフェーズ1 TLSネゴシエーションで認証されていても1フェーズ2が発生したフェーズが正常に完了した直後に発生します。フェーズ1 TLSハンドシェイクが失敗した場合にトンネルが正常に確立されていないとして、それはセキュリティを脅かすだろうとフェーズ2は、発生してはなりません。フェーズ2は、セクション4.2で定義されたTLVオブジェクトにカプセル化された要求と応答の系列から成ります。フェーズ2は、常にセクション4.2.13、セクション3.3.3に記載の保護された終端交換に記載の暗号バインディングTLV交換で終わらなければなりません。セクション3.3.1に記載したようにTLV交換が保護されたトンネル内のゼロまたはそれ以上のEAPメソッドの実行を含むことができます。それはピアからさらに認証を要求したくない場合は、サーバーは、保護された終了交換に直接進むことができます。しかし、ピアおよびサーバは、他のピアが異なるセキュリティポリシーを持っているかもしれないとのいずれかが、内部EAPメソッドまたは他のTLV交換をスキップすると仮定してはいけません。ピアは異なる認証ポリシーの適合を必要とするネットワークにローミングしている場合があり、またはピアは、サーバが、セクション4.2.9で定義されるように要求アクションTLVの使用を介して追加のアクション（バインディング例えば、チャネル）を取る要求することができます。"
    },
    {
      "indent": 0,
      "text": "3.3.1. EAP Sequences",
      "section_title": true,
      "ja": "3.3.1。 EAPシーケンス"
    },
    {
      "indent": 3,
      "text": "EAP [RFC3748] prohibits use of multiple authentication methods within a single EAP conversation in order to limit vulnerabilities to man-in-the-middle attacks. TEAP addresses man-in-the-middle attacks through support for cryptographic protection of the inner EAP exchange and cryptographic binding of the inner authentication method(s) to the protected tunnel. EAP methods are executed serially in a sequence. This version of TEAP does not support initiating multiple EAP methods simultaneously in parallel. The methods need not be distinct. For example, EAP-TLS could be run twice as an inner method, first using machine credentials followed by a second instance using user credentials.",
      "ja": "EAP [RFC3748]はman-in-the-middle攻撃に対して脆弱性を制限するために、単一のEAPの会話内の複数の認証方法の使用を禁止します。 TEAPアドレスman-in-the-middle攻撃保護されたトンネルに内部認証方式（S）の結合の内部EAP交換及び暗号の暗号保護するためのサポートを通ります。 EAPメソッドは、順番に逐次実行されます。 TEAPのこのバージョンは、並行して同時に複数のEAPメソッドを開始しサポートしていません。方法は別個のものである必要はありません。例えば、EAP-TLSは、第1のユーザの資格情報を使用して第2のインスタンスに続くマシンの資格情報を使用して、内側の方法として、二回実行することができます。"
    },
    {
      "indent": 3,
      "text": "EAP method messages are carried within EAP-Payload TLVs defined in Section 4.2.10. If more than one method is going to be executed in the tunnel, then upon method completion, the server MUST send an Intermediate-Result TLV indicating the result. The peer MUST respond to the Intermediate-Result TLV indicating its result. If the result indicates success, the Intermediate-Result TLV MUST be accompanied by a Crypto-Binding TLV. The Crypto-Binding TLV is further discussed in Sections 4.2.13 and 5.3. The Intermediate-Result TLVs can be included with other TLVs such as EAP-Payload TLVs starting a new EAP conversation or with the Result TLV used in the protected termination exchange.",
      "ja": "EAPメソッドのメッセージは、セクション4.2.10で定義されたEAP-ペイロードのTLVの中に運ばれます。以上の方法は、方法の完了時に、トンネル内で実行されようとしている場合、サーバは、結果を示す中間結果のTLVを送信しなければなりません。ピアはその結果を示す中間結果TLVに反応しなければなりません。結果は成功を示している場合、中間結果TLVは、暗号バインディングTLVを添付しなければなりません。暗号バインディングTLVはさらに、セクション4.2.13および5.3に記載されています。中間-結果のTLVは、新しいEAPの会話を開始するようなEAP-ペイロードのTLVのような他のTLVまたは保護された終端交換に使用される結果TLVに含ませることができます。"
    },
    {
      "indent": 3,
      "text": "If both peer and server indicate success, then the method is considered complete. If either indicates failure, then the method is considered failed. The result of failure of an EAP method does not always imply a failure of the overall authentication. If one authentication method fails, the server may attempt to authenticate the peer with a different method.",
      "ja": "ピアとサーバーの両方が成功を示す場合、この方法が完了したと見なされます。どちらかが失敗したことを示している場合は、そのメソッドが失敗したと考えられています。 EAPメソッドの失敗の結果は、常に全体的な認証の失敗を意味するものではありません。つの認証方式が失敗した場合、サーバーは、別の方法でピアを認証するために試みることができます。"
    },
    {
      "indent": 0,
      "text": "3.3.2. Optional Password Authentication",
      "section_title": true,
      "ja": "3.3.2。オプションのパスワード認証"
    },
    {
      "indent": 3,
      "text": "The use of EAP-FAST-GTC as defined in RFC 5421 [RFC5421] is NOT RECOMMENDED with TEAPv1 because EAP-FAST-GTC is not compliant with EAP-GTC defined in [RFC3748]. Implementations should instead make use of the password authentication TLVs defined in this specification. The authentication server initiates password authentication by sending a Basic-Password-Auth-Req TLV defined in Section 4.2.14. If the peer wishes to participate in password authentication, then it responds with a Basic-Password-Auth-Resp TLV as defined in Section 4.2.15 that contains the username and password. If it does not wish to perform password authentication, then it responds with a NAK TLV indicating the rejection of the Basic-Password-Auth-Req TLV. Upon receiving the response, the server indicates the success or failure of the exchange using an Intermediate-Result TLV. Multiple round trips of password authentication requests and responses MAY be used to support some \"housecleaning\" functions such as a password or pin change before a user is authenticated.",
      "ja": "EAP-FAST-GTCは、[RFC3748]で定義されたEAP-GTCに準拠していないので、RFC 5421で定義されているEAP-FAST-GTCの使用は[RFC5421] TEAPv1と推奨されません。実装は、代わりにこの仕様で定義されたパスワード認証のTLVを利用する必要があります。認証サーバは、セクション4.2.14で定義された基本-パスワード認証-REQ TLVを送信することにより、パスワード認証を開始します。ピアは、パスワード認証に参加することを希望する場合は、ユーザー名とパスワードが含まれているセクション4.2.15で定義されるように、それは基本-パスワード認証-RespのTLVで応答します。それは、パスワード認証を実行したくない場合は、それは基本-パスワード認証-REQ TLVの拒否を示すNAK TLVで応答します。応答を受信すると、サーバは、中間結果TLVを使用して為替の成功または失敗を示します。パスワード認証要求と応答の複数の往復には、ユーザーが認証される前に、このようなパスワードまたはPINの変更など、いくつかの「大掃除」機能をサポートするために使用されるかもしれません。"
    },
    {
      "indent": 0,
      "text": "3.3.3. Protected Termination and Acknowledged Result Indication",
      "section_title": true,
      "ja": "3.3.3。保護された終了と肯定応答結果指示"
    },
    {
      "indent": 3,
      "text": "A successful TEAP Phase 2 conversation MUST always end in a successful Crypto-Binding TLV and Result TLV exchange. A TEAP server may initiate the Crypto-Binding TLV and Result TLV exchange without initiating any EAP conversation in TEAP Phase 2. After the final Result TLV exchange, the TLS tunnel is terminated, and a cleartext EAP Success or EAP Failure is sent by the server. Peers implementing TEAP MUST NOT accept a cleartext EAP Success or failure packet prior to the peer and server reaching synchronized protected result indication.",
      "ja": "成功TEAPフェーズ2の会話は常に成功暗号バインディングTLVで終わるとTLV交換をもたらさなければなりません。 TEAPサーバが暗号バインディングTLVを開始し、最終結果TLV交換後TEAPフェーズ2中の任意のEAPの会話を開始することなくTLV交換をもたらすことができる、TLSトンネルが終了し、平文EAP成功又はEAP失敗は、サーバによって送信されます。 TEAPを実装するピアは、前同期保護された結果指示に到達したピアとサーバにクリアテキストEAP成功または失敗パケットを受け入れてはいけません。"
    },
    {
      "indent": 3,
      "text": "The Crypto-Binding TLV exchange is used to prove that both the peer and server participated in the tunnel establishment and sequence of authentications. It also provides verification of the TEAP type, version negotiated, and Outer TLVs exchanged before the TLS tunnel establishment. The Crypto-Binding TLV MUST be exchanged and verified before the final Result TLV exchange, regardless of whether or not there is an inner EAP method authentication. The Crypto-Binding TLV and Intermediate-Result TLV MUST be included to perform cryptographic binding after each successful EAP method in a sequence of one or more EAP methods. The server may send the final Result TLV along with an Intermediate-Result TLV and a Crypto-Binding TLV to indicate its intention to end the conversation. If the peer requires nothing more from the server, it will respond with a Result TLV indicating success accompanied by a Crypto-Binding TLV and Intermediate-Result TLV if necessary. The server then tears down the tunnel and sends a cleartext EAP Success or EAP Failure.",
      "ja": "暗号バインディングTLV交換は、ピアとサーバの両方が認証のトンネル確立および配列に参加することを証明するために使用されます。またネゴシエートTEAPタイプ、バージョンの検証を提供し、及び外側のTLVは、TLSトンネルを確立する前に交換しました。暗号バインディングTLVにかかわらず内部EAPメソッド認証があるか否かの最終的な結果TLV交換の前に交換して検証されなければなりません。暗号バインディングTLV及び中間結果TLVは、一つ以上のEAPメソッドのシーケンスにおける各成功したEAPメソッドの後に暗号化結合を実行するために含まれなければなりません。サーバーは、会話を終了する意向を示すために、中間結果のTLVと暗号バインディングTLVと一緒に最終的な結果TLVを送信することができます。ピアは、サーバからのより多くの何を必要としない場合は、必要に応じて暗号バインディングTLVと中間結果TLVを伴う成功を示す結果TLVで応答します。その後、サーバはトンネルを切断し、クリアテキストEAP成功または失敗EAPを送信します。"
    },
    {
      "indent": 3,
      "text": "If the peer receives a Result TLV indicating success from the server, but its authentication policies are not satisfied (for example, it requires a particular authentication mechanism be run or it wants to request a PAC), it may request further action from the server using the Request-Action TLV. The Request-Action TLV is sent with a Status field indicating what EAP Success/Failure result the peer would expect if the requested action is not granted. The value of the Action field indicates what the peer would like to do next. The format and values for the Request-Action TLV are defined in Section 4.2.9.",
      "ja": "ピアは、サーバからの結果TLVを示すの成功を受けて、その認証ポリシーを満たしていない場合、それは使用してサーバからの更なる措置を要請することができる（例えば、それは特定の認証メカニズムを実行することが必要ですかそれはPACを要求したいです）リクエスト・アクションTLV。要求アクションTLVはEAP成功/失敗が要求されたアクションが許可されていない場合は、ピアが期待する結果と内容を示すステータス・フィールドで送信されます。 Actionフィールドの値は、ピアが次に何をしたいかを示します。リクエスト・アクションTLVのフォーマットと値は、セクション4.2.9で定義されています。"
    },
    {
      "indent": 3,
      "text": "Upon receiving the Request-Action TLV, the server may process the request or ignore it, based on its policy. If the server ignores the request, it proceeds with termination of the tunnel and sends the cleartext EAP Success or Failure message based on the Status field of the peer's Request-Action TLV. If the server honors and processes the request, it continues with the requested action. The conversation completes with a Result TLV exchange. The Result TLV may be included with the TLV that completes the requested action.",
      "ja": "リクエスト・アクションTLVを受信すると、サーバはリクエストを処理してもよいか、そのポリシーに基づいて、それを無視します。サーバーが要求を無視した場合、それはトンネルの終了に進み、ピアの要求アクションTLVのStatusフィールドに基づいて、クリアテキストEAP成功または失敗のメッセージを送信します。サーバーの名誉とリクエストを処理した場合、それは要求されたアクションを続行します。会話は結果TLV交換で完了します。結果TLVは、要求されたアクションを完了TLVに含まれていてもよいです。"
    },
    {
      "indent": 3,
      "text": "Error handling for Phase 2 is discussed in Section 3.6.3.",
      "ja": "フェーズ2のエラー処理は、セクション3.6.3で説明されています。"
    },
    {
      "indent": 0,
      "text": "3.4. Determining Peer-Id and Server-Id",
      "section_title": true,
      "ja": "3.4。ピアIDとサーバIDの決定"
    },
    {
      "indent": 3,
      "text": "The Peer-Id and Server-Id [RFC5247] may be determined based on the types of credentials used during either the TEAP tunnel creation or authentication. In the case of multiple peer authentications, all authenticated peer identities and their corresponding identity types (Section 4.2.3) need to be exported. In the case of multiple server authentications, all authenticated server identities need to be exported.",
      "ja": "ピアID及びサーバID [RFC5247]はTEAPトンネルの作成または認証のいずれかの間に使用される資格情報の種類に基づいて決定することができます。複数のピア認証の場合は、すべての認証済みのピアのアイデンティティとそれに対応するアイデンティティタイプ（4.2.3項）は、エクスポートする必要があります。複数のサーバー認証の場合は、すべての認証サーバーのIDをエクスポートする必要があります。"
    },
    {
      "indent": 3,
      "text": "When X.509 certificates are used for peer authentication, the Peer-Id is determined by the subject and subjectAltName fields in the peer certificate. As noted in [RFC5280]:",
      "ja": "X.509証明書がピア認証に使用される場合、ピアIDは、ピア証明書のサブジェクトとのsubjectAltNameフィールドによって決定されます。 [RFC5280]で述べたように："
    },
    {
      "indent": 5,
      "text": "The subject field identifies the entity associated with the public key stored in the subject public key field. The subject name MAY be carried in the subject field and/or the subjectAltName extension. . . . If subject naming information is present only in the subjectAltName extension (e.g., a key bound only to an email address or URI), then the subject name MUST be an empty sequence and the subjectAltName extension MUST be critical.",
      "ja": "サブジェクトフィールドは、サブジェクト公開鍵フィールドに格納された公開鍵に関連付けられたエンティティを識別する。サブジェクト名は、サブジェクトフィールドおよび/またはsubjectAltName拡張に行うことができます。 。 。 。対象の命名情報のみsubjectAltName拡張に存在している場合（例えば、キーは、電子メールアドレスまたはURIにのみバインド）、その後、サブジェクト名が空のシーケンスでなければならないとsubjectAltName拡張が重要でなければなりません。"
    },
    {
      "indent": 5,
      "text": "Where it is non-empty, the subject field MUST contain an X.500 distinguished name (DN).",
      "ja": "それが空でない場合は、サブジェクトフィールドは、X.500識別名（DN）を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "If an inner EAP method is run, then the Peer-Id is obtained from the inner method.",
      "ja": "内部EAPメソッドが実行されている場合、ピアIDは、内部の方法から得られます。"
    },
    {
      "indent": 3,
      "text": "When the server uses an X.509 certificate to establish the TLS tunnel, the Server-Id is determined in a similar fashion as stated above for the Peer-Id, e.g., the subject and subjectAltName fields in the server certificate define the Server-Id.",
      "ja": "サーバは、TLSトンネルを確立するために、X.509証明書を使用する場合、ピアIDについて上で述べたように、サーバIDは、同様の方法で決定され、例えば、サーバ証明書のサブジェクトとのsubjectAltNameフィールドは、サーバIDを定義します。"
    },
    {
      "indent": 0,
      "text": "3.5. TEAP Session Identifier",
      "section_title": true,
      "ja": "3.5。 TEAPセッション識別子"
    },
    {
      "indent": 3,
      "text": "The EAP session identifier [RFC5247] is constructed using the tls-unique from the Phase 1 outer tunnel at the beginning of Phase 2 as defined by Section 3.1 of [RFC5929]. The Session-Id is defined as follows:",
      "ja": "[RFC5929]のセクション3.1で定義されているようEAPセッション識別子[RFC5247]は、フェーズ2の開始時に、TLS-ユニークフェーズ1アウタートンネルからを使用して構築されています。次のようにセッションIdが定義されています。"
    },
    {
      "indent": 5,
      "text": "Session-Id = teap_type || tls-unique",
      "ja": "セッションId = teap_type || TLS-ユニーク"
    },
    {
      "indent": 5,
      "text": "where teap_type is the EAP Type assigned to TEAP",
      "ja": "teap_typeはTEAPにEAPタイプを割り当てられている場合"
    },
    {
      "indent": 5,
      "text": "tls-unique = tls-unique from the Phase 1 outer tunnel at the beginning of Phase 2 as defined by Section 3.1 of [RFC5929]",
      "ja": "[RFC5929]のセクション3.1で定義されているよう=のTLS-一意フェーズ1アウタートンネルから第2段階の開始時に、TLS-ユニーク"
    },
    {
      "indent": 5,
      "text": "|| means concatenation",
      "ja": "||連結を意味"
    },
    {
      "indent": 0,
      "text": "3.6. Error Handling",
      "section_title": true,
      "ja": "3.6。エラー処理"
    },
    {
      "indent": 3,
      "text": "TEAP uses the error-handling rules summarized below:",
      "ja": "TEAPをまとめると以下のエラー処理のルールを使用しています。"
    },
    {
      "indent": 3,
      "text": "1. Errors in the outer EAP packet layer are handled as defined in Section 3.6.1.",
      "ja": "セクション3.6.1で定義されるように、外側EAPパケット層においてエラーが処理されます。"
    },
    {
      "indent": 3,
      "text": "2. Errors in the TLS layer are communicated via TLS alert messages in all phases of TEAP.",
      "ja": "TLS層2.エラーがTEAPのすべての段階でTLSの警告メッセージを介して伝達されます。"
    },
    {
      "indent": 3,
      "text": "3. The Intermediate-Result TLVs carry success or failure indications of the individual EAP methods in TEAP Phase 2. Errors within the EAP conversation in Phase 2 are expected to be handled by individual EAP methods.",
      "ja": "前記中間結果ののTLVは、フェーズ2におけるEAPの会話内の2エラーは、個々のEAPメソッドによって処理されることが予想されるTEAP相における個々のEAPメソッドの成功または失敗の指示を運びます。"
    },
    {
      "indent": 3,
      "text": "4. Violations of the Inner TLV rules are handled using Result TLVs together with Error TLVs.",
      "ja": "インナーTLV規則の4違反は、エラーのTLVと一緒に結果TLVを使用して処理されます。"
    },
    {
      "indent": 3,
      "text": "5. Tunnel-compromised errors (errors caused by a failed or missing Crypto-Binding) are handled using Result TLVs and Error TLVs.",
      "ja": "5.トンネル損なわエラー（暗号バインディング失敗または不足によるエラー）が結果のTLVとエラーTLVを使用して処理されます。"
    },
    {
      "indent": 0,
      "text": "3.6.1. Outer-Layer Errors",
      "section_title": true,
      "ja": "3.6.1。外層のエラー"
    },
    {
      "indent": 3,
      "text": "Errors on the TEAP outer-packet layer are handled in the following ways:",
      "ja": "TEAP外側のパケットレイヤ上のエラーは、次の方法で処理されます。"
    },
    {
      "indent": 3,
      "text": "1. If Outer TLVs are invalid or contain unknown values, they will be ignored.",
      "ja": "1.外側のTLVが無効であるか、未知の値が含まれている場合、それらは無視されます。"
    },
    {
      "indent": 3,
      "text": "2. The entire TEAP packet will be ignored if other fields (version, length, flags, etc.) are inconsistent with this specification.",
      "ja": "2.全体TEAPパケットが無視され、他のフィールド（バージョン、長さ、フラグなど）を本明細書と矛盾している場合。"
    },
    {
      "indent": 0,
      "text": "3.6.2. TLS Layer Errors",
      "section_title": true,
      "ja": "3.6.2。 TLSレイヤエラー"
    },
    {
      "indent": 3,
      "text": "If the TEAP server detects an error at any point in the TLS handshake or the TLS layer, the server SHOULD send a TEAP request encapsulating a TLS record containing the appropriate TLS alert message rather than immediately terminating the conversation so as to allow the peer to inform the user of the cause of the failure and possibly allow for a restart of the conversation. The peer MUST send a TEAP response to an alert message. The EAP-Response packet sent by the peer may encapsulate a TLS ClientHello handshake message, in which case the TEAP server MAY allow the TEAP conversation to be restarted, or it MAY contain a TEAP response with a zero-length message, in which case the server MUST terminate the conversation with an EAP Failure packet. It is up to the TEAP server whether or not to allow restarts, and, if allowed, how many times the conversation can be restarted. Per TLS [RFC5246], TLS restart is only allowed for non-fatal alerts. A TEAP server implementing restart capability SHOULD impose a limit on the number of restarts, so as to protect against denial-of-service attacks. If the TEAP server does not allow restarts, it MUST terminate the conversation with an EAP Failure packet.",
      "ja": "TEAPサーバがTLSハンドシェイク又はTLS層の任意の時点でエラーを検出した場合、ピアは、通知することを可能にするように、サーバは直ちに会話を終了するのではなく、適切なTLS警告メッセージを含むTLSレコードを封入TEAP要求を送信すべきですおそらく障害の原因のユーザーと会話の再起動を可能にします。ピアは、警告メッセージにTEAP応答を送らなければなりません。ピアによって送信されたEAP-Responseパケットは、TEAPサーバは、TEAP会話を再開することを可能にすることができる場合にはTLSのClientHelloハンドシェイクメッセージをカプセル化することができる、またはそれはゼロ長のメッセージでTEAP応答を含んでいてもよく、その場合にサーバーは、EAP失敗パケットとの会話を終えなければなりません。これは、会話を再開することができます許可されていれば、何回、再起動を許可するようにTEAPサーバかどうか次第です、と。 TLS [RFC5246]あたり、TLSの再起動が唯一の非致命的な警告のために許可されています。サービス拒否（DoS）攻撃から保護するようにリスタート機能を実装しTEAPサーバは、再起動の回数に制限を課すべきです。 TEAP、サーバーが再起動を許可しない場合は、EAP失敗パケットとの会話を終えなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the TEAP peer detects an error at any point in the TLS layer, the TEAP peer SHOULD send a TEAP response encapsulating a TLS record containing the appropriate TLS alert message. The server may restart the conversation by sending a TEAP request packet encapsulating the",
      "ja": "TEAPピアがTLS層の任意の時点でエラーを検出した場合、TEAPピアが適切なTLS警告メッセージを含むTLSレコードを封入TEAP応答を送信すべきです。サーバは、カプセル化TEAP要求パケットを送信することによって、会話を再開して"
    },
    {
      "indent": 3,
      "text": "TLS HelloRequest handshake message. The peer may allow the TEAP conversation to be restarted, or it may terminate the conversation by sending a TEAP response with a zero-length message.",
      "ja": "TLS HelloRequest握手メッセージ。ピアはTEAP会話を再開することを可能にすることができる、またはそれはゼロ長のメッセージでTEAP応答を送信することによって会話を終了することができます。"
    },
    {
      "indent": 0,
      "text": "3.6.3. Phase 2 Errors",
      "section_title": true,
      "ja": "3.6.3。フェーズ2つのエラー"
    },
    {
      "indent": 3,
      "text": "Any time the peer or the server finds a fatal error outside of the TLS layer during Phase 2 TLV processing, it MUST send a Result TLV of failure and an Error TLV with the appropriate error code. For errors involving the processing of the sequence of exchanges, such as a violation of TLV rules (e.g., multiple EAP-Payload TLVs), the error code is Unexpected TLVs Exchanged. For errors involving a tunnel compromise, the error code is Tunnel Compromise Error. Upon sending a Result TLV with a fatal Error TLV, the sender terminates the TLS tunnel. Note that a server will still wait for a message from the peer after it sends a failure; however, the server does not need to process the contents of the response message.",
      "ja": "ピアまたはサーバがフェーズ2 TLV処理中TLS層の外側に致命的なエラーが見つかった時は、それが失敗し、適切なエラー・コードとエラーTLV結果TLVを送らなければなりません。そのようなTLVルールの違反として交換のシーケンスの処理を伴うエラーの場合（例えば、EAP-ペイロードのTLV複数）、エラーコードは、予期しないのTLVが交換されます。トンネルの妥協を伴うエラーの場合、エラーコードは、トンネル妥協エラーです。致命的なエラーTLVで結果TLVを送信すると、送信者は、TLSトンネルを終了します。それが失敗を送信した後、サーバーがまだピアからのメッセージをお待ちしておりますことに注意してください。ただし、サーバは、応答メッセージの内容を処理する必要はありません。"
    },
    {
      "indent": 3,
      "text": "For the inner method, retransmission is not needed and SHOULD NOT be attempted, as the Outer TLS tunnel can be considered a reliable transport. If there is a non-fatal error handling the inner method, instead of silently dropping the inner method request or response and not responding, the receiving side SHOULD use an Error TLV with error code Inner Method Error to indicate an error processing the current inner method. The side receiving the Error TLV MAY decide to start a new inner method instead or send back a Result TLV to terminate the TEAP authentication session.",
      "ja": "内部方式の場合、再送が必要とされていないと外側のTLSトンネルが信頼できる輸送とみなすことができるよう、試行されるべきではありません。非致命的なエラーがサイレントインナーメソッド要求または応答をドロップし、応答していないのではなく、内側の方法を扱うがある場合、受信側は、現在の内部メソッドの処理エラーを示すエラーコード内部方式エラーでエラーTLVを使用すべきです。エラーTLVを受信側ではなく、新たな内部メソッドを起動したり、TEAP認証セッションを終了するために結果TLVを返送するように決定することができます。"
    },
    {
      "indent": 3,
      "text": "If a server receives a Result TLV of failure with a fatal Error TLV, it MUST send a cleartext EAP Failure. If a peer receives a Result TLV of failure, it MUST respond with a Result TLV indicating failure. If the server has sent a Result TLV of failure, it ignores the peer response, and it MUST send a cleartext EAP Failure.",
      "ja": "サーバーが致命的なエラーTLVと失敗の結果TLVを受信した場合、それはクリアテキストEAP失敗を送らなければなりません。ピアが失敗の結果TLVを受信した場合、それが失敗したことを示す結果TLVで応じなければなりません。サーバは、障害の結果TLVを送信した場合には、ピア・レスポンスを無視し、それがクリアテキストEAP失敗を送らなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.7. Fragmentation",
      "section_title": true,
      "ja": "3.7。フラグメンテーション"
    },
    {
      "indent": 3,
      "text": "A single TLS record may be up to 16384 octets in length, but a TLS message may span multiple TLS records, and a TLS certificate message may, in principle, be as long as 16 MB. This is larger than the maximum size for a message on most media types; therefore, it is desirable to support fragmentation. Note that in order to protect against reassembly lockup and denial-of-service attacks, it may be desirable for an implementation to set a maximum size for one such group of TLS messages. Since a typical certificate chain is rarely longer than a few thousand octets, and no other field is likely to be anywhere near as long, a reasonable choice of maximum acceptable message length might be 64 KB. This is still a fairly large message packet size so a TEAP implementation MUST provide its own support for fragmentation and reassembly. Section 3.1 of [RFC3748] discusses determining the MTU usable by EAP, and Section 4.3 discusses retransmissions in EAP.",
      "ja": "単一TLSレコードの長さは、最大16384オクテットかもしれないが、TLSメッセージは、複数のTLSレコードにまたがること、およびTLS証明書メッセージは、原則的には、16メガバイトほどの長さであってもよいです。これは、ほとんどのメディアタイプでのメッセージの最大サイズよりも大きいです。したがって、断片化をサポートすることが望ましいです。実装はTLSメッセージのような一グループの最大サイズを設定するための再組み立てロックアップとサービス拒否攻撃から保護するために、それは望ましいかもしれないことに留意されたいです。典型的な証明書チェーンはめったに長い数千オクテットよりでなく、他のフィールドはどこにでもいる限り近くになりそうではありませんので、最大許容メッセージ長の合理的な選択は、64キロバイトかもしれません。 TEAP実装が断片化と再構築のための独自のサポートを提供しなければならないので、これはまだかなり大きなメッセージのパケットサイズです。 [RFC3748]のセクション3.1は、EAPが使用可能なMTU、およびEAPにおけるセクション4.3で説明再送信を決定について説明します。"
    },
    {
      "indent": 3,
      "text": "Since EAP is a lock-step protocol, fragmentation support can be added in a simple manner. In EAP, fragments that are lost or damaged in transit will be retransmitted, and since sequencing information is provided by the Identifier field in EAP, there is no need for a fragment offset field.",
      "ja": "EAPは、ロックステッププロトコルであるため、フラグメンテーションサポートを簡単に追加することができます。 EAPでは、輸送中に紛失または破損しているフラグメントが再送され、情報がEAPに識別子フィールドによって提供される配列決定しているので、フラグメントオフセットフィールドは必要ありません。"
    },
    {
      "indent": 3,
      "text": "TEAP fragmentation support is provided through the addition of flag bits within the EAP-Response and EAP-Request packets, as well as a Message Length field of four octets. Flags include the Length included (L), More fragments (M), and TEAP Start (S) bits. The L flag is set to indicate the presence of the four-octet Message Length field and MUST be set for the first fragment of a fragmented TLS message or set of messages. It MUST NOT be present for any other message. The M flag is set on all but the last fragment. The S flag is set only within the TEAP start message sent from the EAP server to the peer. The Message Length field is four octets and provides the total length of the message that may be fragmented over the data fields of multiple packets; this simplifies buffer allocation.",
      "ja": "TEAP断片化のサポートはEAP応答およびEAP-Requestパケット、ならびに4つのオクテットのメッセージ長フィールド内のフラグビットの付加を介して提供されます。フラグが（L）を含む長さ、複数のフラグメント（M）、およびTEAPスタート（S）ビットを含みます。 Lフラグが4オクテットメッセージ長フィールドの存在を示すために設定され、断片化されたTLSメッセージ又はメッセージのセットの最初の断片に設定しなければなりません。これは、他のメッセージのために存在してはなりません。 Mフラグが最後のフラグメント以外のすべてに設定されています。 SフラグがピアにEAPサーバから送信されたメッセージを起動するだけTEAP内に設定されています。メッセージ長フィールドは、4つのオクテットであり、複数のパケットのデータフィールド上に断片化することができるメッセージの全長を提供します。これは、バッファ割り当てを簡素化します。"
    },
    {
      "indent": 3,
      "text": "When a TEAP peer receives an EAP-Request packet with the M bit set, it MUST respond with an EAP-Response with EAP Type of TEAP and no data. This serves as a fragment ACK. The EAP server MUST wait until it receives the EAP-Response before sending another fragment. In order to prevent errors in processing of fragments, the EAP server MUST increment the Identifier field for each fragment contained within an EAP-Request, and the peer MUST include this Identifier value in the fragment ACK contained within the EAP-Response. Retransmitted fragments will contain the same Identifier value.",
      "ja": "TEAPピアがMビットが設定されたEAP-Requestパケットを受信すると、EAP TEAPの種類やデータのないEAP-応答で応答しなければなりません。これは、断片ACKとして機能します。それは別のフラグメントを送る前に、EAP-応答を受信するまで、EAPサーバは待たなければなりません。フラグメントの処理のエラーを防止するために、EAPサーバはEAP-要求内に含まれる各フラグメントの識別子フィールドをインクリメントしなければならない、とピアはEAPレスポンス内に含まれる断片のACKにおけるこの識別子の値を含まなければなりません。再送されたフラグメントは、同じ識別子の値が含まれます。"
    },
    {
      "indent": 3,
      "text": "Similarly, when the TEAP server receives an EAP-Response with the M bit set, it responds with an EAP-Request with EAP Type of TEAP and no data. This serves as a fragment ACK. The EAP peer MUST wait until it receives the EAP-Request before sending another fragment. In order to prevent errors in the processing of fragments, the EAP server MUST increment the Identifier value for each fragment ACK contained within an EAP-Request, and the peer MUST include this Identifier value in the subsequent fragment contained within an EAP-Response.",
      "ja": "TEAPサーバはMビットセットでEAP-応答を受信すると同様に、それはEAP TEAPの種類やデータのないEAP-要求に応答します。これは、断片ACKとして機能します。それは別のフラグメントを送る前に、EAP-Requestを受信するまで、EAPピアは待たなければなりません。フラグメントの処理のエラーを防止するために、EAPサーバはEAP-要求内に含まれる各断片ACKのための識別子の値をインクリメントしなければならない、とピアはEAPレスポンス内に含まれる後続の断片におけるこの識別子の値を含まなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.8. Peer Services",
      "section_title": true,
      "ja": "3.8。ピアサービス"
    },
    {
      "indent": 3,
      "text": "Several TEAP services, including server unauthenticated provisioning, PAC provisioning, certificate provisioning, and channel binding, depend on the peer trusting the TEAP server. Peers MUST authenticate the server before these peer services are used. TEAP peer implementations MUST have a configuration where authentication fails if server authentication cannot be achieved. In many cases, the server will want to authenticate the peer before providing these services as well.",
      "ja": "サーバー認証されていないプロビジョニング、PACプロビジョニング、証明書のプロビジョニング、およびチャネル結合を含むいくつかのTEAPのサービスは、TEAPサーバーを信頼ピアに依存しています。これらのピアのサービスが使用される前に、ピアはサーバを認証しなければなりません。 TEAPピアの実装は、サーバー認証が達成できない場合、認証に失敗したコンフィギュレーションを持たなければなりません。多くの場合、サーバーは、これらのサービスを提供する前に、ピアを認証することになるでしょう。"
    },
    {
      "indent": 3,
      "text": "TEAP peers MUST track whether or not server authentication has taken place. Server authentication results if the peer trusts the provided server certificate. Typically, this involves both validating the certificate to a trust anchor and confirming the entity named by the certificate is the intended server. Server authentication also results when the procedures in Section 3.2 are used to resume a session in which the peer and server were previously mutually authenticated. Alternatively, peer services can be used if an inner EAP method providing mutual authentication and an Extended Master Session Key (EMSK) is executed and cryptographic binding with the EMSK Compound Message Authentication Code (MAC) is correctly validated (Section 4.2.13). This is further described in Section 3.8.3.",
      "ja": "TEAPピアは、サーバー認証が行われたかどうかを追跡する必要があります。サーバーの認証結果ピアが提供するサーバー証明書を信頼している場合。通常、これは両方のトラストアンカーへの証明書を検証し、証明書で指定されたエンティティを確認することは意図されたサーバーである必要。 3.2節の手順は、ピアとサーバは、以前に相互認証されたセッションを再開するために使用されている場合、サーバーの認証にもなります。また、ピア・サービスは、内部EAPメソッドは、相互認証を提供する場合に使用することができ、拡張マスターセッションキー（EMSK）が実行され、暗号化は、メッセージ認証コード（MAC）が正しく検証されるEMSK化合物（セクション4.2.13）と結合されます。これはさらに、セクション3.8.3に記載されています。"
    },
    {
      "indent": 3,
      "text": "An additional complication arises when a tunnel method authenticates multiple parties such as authenticating both the peer machine and the peer user to the EAP server. Depending on how authentication is achieved, only some of these parties may have confidence in it. For example, if a strong shared secret is used to mutually authenticate the user and the EAP server, the machine may not have confidence that the EAP server is the authenticated party if the machine cannot trust the user not to disclose the shared secret to an attacker. In these cases, the parties who participate in the authentication need to be considered when evaluating whether to use peer services.",
      "ja": "トンネル方式は、EAPサーバにピア・マシンとピア・ユーザの​​両方を認証するよう複数の当事者を認証する場合、追加の複雑化が生じます。認証が達成される方法に応じて、のみこれらの当事者の一部は、それに自信を持つことができます。強力な共有秘密が相互にユーザとEAPサーバを認証するために使用されている場合、マシンが攻撃者に共有秘密を開示しないユーザーを信頼することはできません場合たとえば、マシンがEAPサーバが認証当事者であるという確信を持っていないかもしれません。これらのケースでは、認証に参加当事者は、ピア・サービスを使用するかどうかを評価する際に考慮する必要があります。"
    },
    {
      "indent": 0,
      "text": "3.8.1. PAC Provisioning",
      "section_title": true,
      "ja": "3.8.1。 PACプロビジョニング"
    },
    {
      "indent": 3,
      "text": "To request provisioning of a PAC, a peer sends a PAC TLV as defined in Section 4.2.12 containing a PAC Attribute as defined in Section 4.2.12.1 of PAC-Type set to the appropriate value. The peer MUST successfully authenticate the EAP server and validate the Crypto-Binding TLV as defined in Section 4.2.13 before issuing the request. The peer MUST send separate PAC TLVs for each type of PAC it wants to be provisioned. Multiple PAC TLVs can be sent in the same packet or in different packets. The EAP server will send the PACs after its internal policy has been satisfied, or it MAY ignore the request or request additional authentications if its policy dictates. The server MAY cache the request and provision the PACs requested after all of its internal policies have been satisfied. If a peer receives a PAC with an unknown type, it MUST ignore it.",
      "ja": "適切な値にPAC型セットのセクション4.2.12.1に定義されるようにPAC項目を含むセクション4.2.12で定義されるようにPACのプロビジョニングを要求するために、ピアはPAC TLVを送信します。ピアが正常にEAPサーバを認証し、要求を発行する前に、セクション4.2.13で定義されている暗号バインディングTLVを検証する必要があります。ピアは、プロビジョニングしたいPACの種類ごとに別々のPAC TLVを送らなければなりません。複数のPACのTLVは同じパケットまたは異なるパケットで送信することができます。 EAPサーバは、その内部の方針が満たされた後にPACを送信します、またはそれは、要求を無視するか、そのポリシーのおもむくままであれば、追加の認証を要求することができます。サーバーは、要求と提供その内部ポリシーのすべてが満たされた後に要求されたPACをキャッシュすることができます。ピアが未知のタイプでPACを受信した場合、それを無視しなければなりません。"
    },
    {
      "indent": 3,
      "text": "A PAC TLV containing a PAC-Acknowledge attribute MUST be sent by the peer to acknowledge the receipt of the Tunnel PAC. A PAC TLV containing a PAC-Acknowledge attribute MUST NOT be used by the peer to acknowledge the receipt of other types of PACs. If the peer receives a PAC TLV with an unknown attribute, it SHOULD ignore the unknown attribute.",
      "ja": "PAC-アクノリッジ属性を含むPAC TLVは、トンネルPACの受信を確認するために、ピアによって送らなければなりません。 PAC-アクノリッジ属性を含むPAC TLVは、PACを、他のタイプの受信を確認するために、ピアで使用してはいけません。ピアが未知の属性を持つPAC TLVを受信した場合、それは未知の属性を無視します。"
    },
    {
      "indent": 0,
      "text": "3.8.2. Certificate Provisioning within the Tunnel",
      "section_title": true,
      "ja": "3.8.2。トンネル内の証明書のプロビジョニング"
    },
    {
      "indent": 3,
      "text": "Provisioning of a peer's certificate is supported in TEAP by performing the Simple PKI Request/Response from [RFC5272] using PKCS#10 and PKCS#7 TLVs, respectively. A peer sends the Simple PKI Request using a PKCS#10 CertificateRequest [RFC2986] encoded into the body of a PKCS#10 TLV (see Section 4.2.17). The TEAP server issues a Simple PKI Response using a PKCS#7 [RFC2315] degenerate \"Certificates Only\" message encoded into the body of a PKCS#7 TLV (see Section 4.2.16), only after an authentication method has run and provided an identity proof on the peer prior to a certificate is being issued.",
      "ja": "ピアの証明書のプロビジョニングは、それぞれ、[RFC5272]を使用してPKCS＃10とPKCS＃7のTLV、より単純なPKI要求/応答を行うことにより、TEAPに支持されています。ピアは、PKCS＃10 TLV（セクション4.2.17を参照のこと）の本体内に符号化されたPKCS＃10 CertificateRequest [RFC2986]を使用して、単純なPKI要求を送信します。 TEAPサーバは、認証方式が実行され、提供した後にのみ、PKCS＃7 TLV（セクション4.2.16を参照のこと）の本体内に符号化されたPKCS＃7 [RFC2315]縮退「証明書のみ」メッセージを使用して、単純なPKI応答を発行します前証明書へのピアの身元証明が発行されています。"
    },
    {
      "indent": 3,
      "text": "In order to provide linking identity and proof-of-possession by including information specific to the current authenticated TLS session within the signed certification request, the peer generating the request SHOULD obtain the tls-unique value from the TLS subsystem as defined in \"Channel Bindings for TLS\" [RFC5929]. The TEAP peer operations between obtaining the tls_unique value through generation of the Certification Signing Request (CSR) that contains the current tls_unique value and the subsequent verification of this value by the TEAP server are the \"phases of the application protocol during which application-layer authentication occurs\" that are protected by the synchronization interoperability mechanism described in the interoperability note in \"Channel Bindings for TLS\" ([RFC5929], Section 3.1). When performing renegotiation, TLS \"secure_renegotiation\" [RFC5746] MUST be used.",
      "ja": "チャネルバインディング」で定義されるように署名された証明書要求内の現在の認証されたTLSセッションに固有の情報を含めることによって架橋識別とプルーフ・オブ・所有を提供するために、要求を生成するピアはTLSサブシステムからのTLS-一意の値を取得する必要がありますTLSのための」[RFC5929]。 TEAPサーバによって現在tls_unique値と、この値のその後の検証が含ま証明書署名要求（CSR）の生成を介してtls_unique値を取得する間TEAPピア動作は時アプリケーション層認証アプリケーションプロトコルの「相でありますTLSのチャネルバインディング 『（[RFC5929]、セクション3.1）」の相互運用性ノートに記載された同期相互運用メカニズムによって保護されている』が発生します。再ネゴシエーションを行うとき、TLS \"secure_renegotiation\" [RFC5746]は使用しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The tls-unique value is base-64-encoded as specified in Section 4 of [RFC4648], and the resulting string is placed in the certification request challengePassword field ([RFC2985], Section 5.4.1). The challengePassword field is limited to 255 octets (Section 7.4.9 of [RFC5246] indicates that no existing ciphersuite would result in an issue with this limitation). If tls-unique information is not embedded within the certification request, the challengePassword field MUST be empty to indicate that the peer did not include the optional channel-binding information (any value submitted is verified by the server as tls-unique information).",
      "ja": "[RFC4648]のセクション4で指定され、そして得られた文字列が認証要求challengePasswordフィールド（[RFC2985]、セクション5.4.1）内に配置されるように、TLS-一意の値は、ベース64符号化されます。 challengePasswordフィールドは255個のオクテット（[RFC5246]のセクション7.4.9は、既存の暗号スイートは、この制限の問題を生じないであろうことを示している）に制限されます。 TLS固有情報が認証要求内に埋め込まれていない場合、challengePasswordフィールドは、ピアは、オプションのチャネルバインディング情報（TLS固有情報としてサーバによって検証された提出した値）が含まれていなかったことを示すために空でなければなりません。"
    },
    {
      "indent": 3,
      "text": "The server SHOULD verify the tls-unique information. This ensures that the authenticated TEAP peer is in possession of the private key used to sign the certification request.",
      "ja": "サーバーは、TLS-固有の情報を確認する必要があります。これは、認証されたTEAPピアが証明書要求に署名するために使用される秘密鍵の所有であることを保証します。"
    },
    {
      "indent": 3,
      "text": "The Simple PKI Request/Response generation and processing rules of [RFC5272] SHALL apply to TEAP, with the exception of error conditions. In the event of an error, the TEAP server SHOULD respond with an Error TLV using the most descriptive error code possible; it MAY ignore the PKCS#10 request that generated the error.",
      "ja": "[RFC5272]の単純なPKI要求/応答の生成および処理ルールエラー条件を除いて、TEAPに適用しなければなりません。エラーが発生した場合には、TEAPサーバは、可能な限り最も詳細なエラーコードを使用してエラーTLVで応答する必要があります。それがエラーを生成しPKCS＃10要求を無視するかもしれません。"
    },
    {
      "indent": 0,
      "text": "3.8.3. Server Unauthenticated Provisioning Mode",
      "section_title": true,
      "ja": "3.8.3。サーバー非認証のプロビジョニングモード"
    },
    {
      "indent": 3,
      "text": "In Server Unauthenticated Provisioning Mode, an unauthenticated tunnel is established in Phase 1, and the peer and server negotiate an EAP method in Phase 2 that supports mutual authentication and key derivation that is resistant to attacks such as man-in-the-middle and dictionary attacks. This provisioning mode enables the bootstrapping of peers when the peer lacks the ability to authenticate the server during Phase 1. This includes both cases in which the ciphersuite negotiated does not provide authentication and in which the ciphersuite negotiated provides the authentication but the peer is unable to validate the identity of the server for some reason.",
      "ja": "サーバー認証されていないプロビジョニングモードでは、認証されていないトンネルは、フェーズ1で確立し、ピアとサーバは、のman-in-the-middle及び辞書などの攻撃に対して耐性で相互認証および鍵導出をサポートフェーズ2におけるEAPメソッドをネゴシエートされ攻撃。このプロビジョニングモードは、ピアがフェーズ1の間にサーバーを認証する能力を欠いているときは、このネゴシエート暗号スイートは認証を提供し、ネゴシエートされた暗号スイートは認証を提供するが、ピアがすることができないものでない、両方の場合を含むピアのブートストラップを可能にします何らかの理由でサーバーのIDを検証します。"
    },
    {
      "indent": 3,
      "text": "Upon successful completion of the EAP method in Phase 2, the peer and server exchange a Crypto-Binding TLV to bind the inner method with the outer tunnel and ensure that a man-in-the-middle attack has not been attempted.",
      "ja": "フェーズ2のEAPメソッドが正常に完了すると、ピア及びサーバ交換暗号バインディングTLVは、外側トンネルと内側の方法を結合し、man-in-the-middle攻撃が試みられていないことを確実にします。"
    },
    {
      "indent": 3,
      "text": "Support for the Server Unauthenticated Provisioning Mode is optional. The ciphersuite TLS_DH_anon_WITH_AES_128_CBC_SHA is RECOMMENDED when using Server Unauthenticated Provisioning Mode, but other anonymous ciphersuites MAY be supported as long as the TLS pre-master secret is generated from contribution from both peers. Phase 2 EAP methods used in Server Unauthenticated Provisioning Mode MUST provide mutual authentication, provide key generation, and be resistant to dictionary attack. Example inner methods include EAP-pwd [RFC5931] and EAP-EKE [RFC6124].",
      "ja": "サーバーの未認証のプロビジョニングモードのサポートはオプションです。サーバー非認証のプロビジョニングモードを使用するときに暗号スイートTLS_DH_anon_WITH_AES_128_CBC_SHAが推奨されますが、他の匿名の暗号スイートは限りTLSプレマスターシークレットは、両方のピアからの寄与から生成されるようサポートされるかもしれません。サーバー非認証のプロビジョニングモードで使用するフェーズ2つのEAPメソッドは、相互認証を提供するキーの生成を提供し、辞書攻撃に耐性でなければなりません。例えば、内側の方法は、EAP-PWD [RFC5931]及びEAP-EKE [RFC6124]を含みます。"
    },
    {
      "indent": 0,
      "text": "3.8.4. Channel Binding",
      "section_title": true,
      "ja": "3.8.4。チャネルバインディング"
    },
    {
      "indent": 3,
      "text": "[RFC6677] defines EAP channel bindings to solve the \"lying NAS\" and the \"lying provider\" problems, using a process in which the EAP peer gives information about the characteristics of the service provided by the authenticator to the Authentication, Authorization, and Accounting (AAA) server protected within the EAP method. This allows the server to verify the authenticator is providing information to the peer that is consistent with the information received from this authenticator as well as the information stored about this authenticator.",
      "ja": "[RFC6677]はEAPチャネルバインディングがEAPピアが認証、認可認証者によって提供されるサービスの特性に関する情報を提供しているプロセスを使用して、「嘘NAS」と「嘘プロバイダ」問題を解決するために定義され、およびアカウンティングEAPメソッド内で保護された（AAA）サーバ。これは、サーバがオーセンティケータが、このオーセンティケータ、ならびにこのオーセンティケータに関する格納された情報から受信した情報と一致しているピアに情報を提供されていることを確認することを可能にします。"
    },
    {
      "indent": 3,
      "text": "TEAP supports EAP channel binding using the Channel-Binding TLV defined in Section 4.2.7. If the TEAP server wants to request the channel-binding information from the peer, it sends an empty Channel-Binding TLV to indicate the request. The peer responds to the request by sending a Channel-Binding TLV containing a channel-binding message as defined in [RFC6677]. The server validates the channel-binding message and sends back a Channel-Binding TLV with a result code. If the server didn't initiate the channel-binding request and the peer still wants to send the channel-binding information to the server, it can do that by using the Request-Action TLV along with the Channel-Binding TLV. The peer MUST only send channel-binding information after it has successfully authenticated the server and established the protected tunnel.",
      "ja": "TEAPは、セクション4.2.7で定義されたチャンネル結合性TLVを使用して結合EAPチャネルをサポートしています。 TEAPサーバーがピアからチャンネル結合情報を要求したい場合は、その要求を示すために、空のチャンネル結合性TLVを送信します。ピアは、[RFC6677]で定義されるようにチャネル結合メッセージを含むチャネル・バインディングTLVを送信することにより要求に応答します。サーバは、チャネルバインディングメッセージを検証し、結果コードとチャネル・バインディングTLVを返送します。サーバは、チャネル結合要求を開始していないと、ピアがまだサーバにチャネル・バインディング情報を送信したい場合は、チャンネル・バインディングTLVとともにリクエスト・アクションTLVを使用していることを行うことができます。それが正常にサーバーを認証し、保護されたトンネルを確立した後、ピアは、チャネルバインディング情報を送信しなければなりません。"
    },
    {
      "indent": 0,
      "text": "4. Message Formats",
      "section_title": true,
      "ja": "4.メッセージフォーマット"
    },
    {
      "indent": 3,
      "text": "The following sections describe the message formats used in TEAP. The fields are transmitted from left to right in network byte order.",
      "ja": "以下のセクションでは、TEAPで使用されるメッセージフォーマットを記載しています。フィールドは、ネットワークバイト順に左から右に送信されます。"
    },
    {
      "indent": 0,
      "text": "4.1. TEAP Message Format",
      "section_title": true,
      "ja": "4.1。 TEAPメッセージフォーマット"
    },
    {
      "indent": 3,
      "text": "A summary of the TEAP Request/Response packet format is shown below.",
      "ja": "TEAP要求/応答パケットフォーマットの概要は以下の通りです。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Code      |   Identifier  |            Length             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Type      |   Flags | Ver |        Message Length         :\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n:         Message Length        |         Outer TLV Length\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n:     Outer TLV Length          |         TLS Data...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|       Outer TLVs...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Code",
      "ja": "コード"
    },
    {
      "indent": 6,
      "text": "The Code field is one octet in length and is defined as follows:",
      "ja": "Codeフィールドは、長さは1つのオクテットで、次のように定義されています。"
    },
    {
      "indent": 9,
      "text": "1 Request",
      "ja": "1つの要求"
    },
    {
      "indent": 9,
      "text": "2 Response",
      "ja": "2レスポンス"
    },
    {
      "indent": 3,
      "text": "Identifier",
      "ja": "識別"
    },
    {
      "indent": 6,
      "text": "The Identifier field is one octet and aids in matching responses with requests. The Identifier field MUST be changed on each Request packet. The Identifier field in the Response packet MUST match the Identifier field from the corresponding request.",
      "ja": "識別子フィールドは、リクエストとレスポンスのマッチングで1つのオクテットとエイズです。識別子フィールドは、各Requestパケットに変更する必要があります。応答パケット内の識別子フィールドは、対応する要求の識別子フィールドに一致しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "The Length field is two octets and indicates the length of the EAP packet including the Code, Identifier, Length, Type, Flags, Ver, Message Length, TLS Data, and Outer TLVs fields. Octets outside the range of the Length field should be treated as Data Link Layer padding and should be ignored on reception.",
      "ja": "長さフィールドは2つのオクテットで、コード、識別子、長さ、タイプ、フラグ、版、メッセージ長、TLSデータ、および外部のTLVフィールドを含むEAPパケットの長さを示します。長さフィールドの範囲外のオクテットは、データリンク層のパディングとして扱われるべきで、レセプションで無視しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Type",
      "ja": "タイプ"
    },
    {
      "indent": 6,
      "text": "55 for TEAP",
      "ja": "TEAP 55"
    },
    {
      "indent": 3,
      "text": "Flags",
      "ja": "国旗"
    },
    {
      "indent": 9,
      "text": " 0 1 2 3 4\n+-+-+-+-+-+\n|L M S O R|\n+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 6,
      "text": "L Length included; set to indicate the presence of the four-octet Message Length field. It MUST be present for the first fragment of a fragmented message. It MUST NOT be present for any other message.",
      "ja": "Lの長さが含まれ; 4オクテットのメッセージ長フィールドの存在を示すように設定。これは、断片化されたメッセージの最初のフラグメントのために存在していなければなりません。これは、他のメッセージのために存在してはなりません。"
    },
    {
      "indent": 6,
      "text": "M More fragments; set on all but the last fragment.",
      "ja": "M以上のフラグメント;最後のフラグメント以外のすべてに設定されました。"
    },
    {
      "indent": 6,
      "text": "S TEAP start; set in a TEAP Start message sent from the server to the peer.",
      "ja": "S TEAP開始。ピアにサーバーから送られたTEAP Startメッセージに設定してください。"
    },
    {
      "indent": 6,
      "text": "O Outer TLV length included; set to indicate the presence of the four-octet Outer TLV Length field. It MUST be present only in the initial request and response messages. If the initial message is fragmented, then it MUST be present only on the first fragment.",
      "ja": "OアウターTLVの長さが含まれます。 4オクテット外TLVの長さフィールドの存在を示すように設定。それだけで、最初の要求メッセージと応答メッセージ中に存在しなければなりません。初期メッセージは断片化されている場合、それは最初のフラグメント上に存在しなければなりません。"
    },
    {
      "indent": 6,
      "text": "R Reserved (MUST be zero and ignored upon receipt)",
      "ja": "Rリザーブ（ゼロ及び受信時に無視されなければなりません）"
    },
    {
      "indent": 3,
      "text": "Ver",
      "ja": "ビュー"
    },
    {
      "indent": 6,
      "text": "This field contains the version of the protocol. This document describes version 1 (001 in binary) of TEAP.",
      "ja": "このフィールドは、プロトコルのバージョンが含まれています。この文書は、TEAPのバージョン1（バイナリ001）を記述する。"
    },
    {
      "indent": 3,
      "text": "Message Length",
      "ja": "メッセージの長さ"
    },
    {
      "indent": 6,
      "text": "The Message Length field is four octets and is present only if the L bit is set. This field provides the total length of the message that may be fragmented over the data fields of multiple packets.",
      "ja": "メッセージ長フィールドは、4つのオクテットであり、Lビットが設定されている場合にのみ存在します。このフィールドは、複数のパケットのデータフィールド上に断片化することができるメッセージの全長を提供します。"
    },
    {
      "indent": 3,
      "text": "Outer TLV Length",
      "ja": "外側のTLVの長さ"
    },
    {
      "indent": 6,
      "text": "The Outer TLV Length field is four octets and is present only if the O bit is set. This field provides the total length of the Outer TLVs if present.",
      "ja": "外TLV長フィールドは4つのオクテットで、Oビットが設定されている場合にのみ存在しています。このフィールドが存在する場合外側のTLVの長さの合計を提供します。"
    },
    {
      "indent": 3,
      "text": "TLS Data",
      "ja": "TLSデータ"
    },
    {
      "indent": 6,
      "text": "When the TLS Data field is present, it consists of an encapsulated TLS packet in TLS record format. A TEAP packet with Flags and Version fields, but with zero length TLS Data field, is used to indicate TEAP acknowledgement for either a fragmented message, a TLS Alert message, or a TLS Finished message.",
      "ja": "TLSデータ・フィールドが存在する場合、それは、TLSレコード形式でカプセル化されたTLSパケットから成ります。 TEAPパケットは、フラグとバージョンフィールドを持つが、ゼロ長TLSデータフィールドと、断片化されたメッセージを、TLS警告メッセージ、またはTLS FinishedメッセージのいずれかのためのTEAP肯定応答を示すために使用されます。"
    },
    {
      "indent": 3,
      "text": "Outer TLVs",
      "ja": "外側のTLV"
    },
    {
      "indent": 6,
      "text": "The Outer TLVs consist of the optional data used to help establish the TLS tunnel in TLV format. They are only allowed in the first two messages in the TEAP protocol. That is the first EAP-server-to-peer message and first peer-to-EAP-server message. The start of the Outer TLVs can be derived from the EAP Length field and Outer TLV Length field.",
      "ja": "外側のTLVは、TLV形式でTLSトンネルの確立を支援するために使用される任意のデータで構成されています。彼らは唯一のTEAPプロトコルの最初の2つのメッセージで許可されています。すなわち、第一EAPサーバ・ツー・ピア・メッセージと第ピア・ツー・EAPサーバメッセージです。外のTLVの開始は、EAP Lengthフィールドと外側TLV Lengthフィールドから導出することができます。"
    },
    {
      "indent": 0,
      "text": "4.2. TEAP TLV Format and Support",
      "section_title": true,
      "ja": "4.2。 TEAP TLV形式とサポート"
    },
    {
      "indent": 3,
      "text": "The TLVs defined here are TLV objects. The TLV objects could be used to carry arbitrary parameters between an EAP peer and EAP server within the protected TLS tunnel.",
      "ja": "ここで定義されたTLVがTLVオブジェクトです。 TLVオブジェクトは、保護されたTLSトンネル内でEAPピアとEAPサーバとの間の任意のパラメータを運ぶために使用することができます。"
    },
    {
      "indent": 3,
      "text": "The EAP peer may not necessarily implement all the TLVs supported by the EAP server. To allow for interoperability, TLVs are designed to allow an EAP server to discover if a TLV is supported by the EAP peer using the NAK TLV. The mandatory bit in a TLV indicates whether support of the TLV is required. If the peer or server does not support a TLV marked mandatory, then it MUST send a NAK TLV in the response, and all the other TLVs in the message MUST be ignored. If an EAP peer or server finds an unsupported TLV that is marked as optional, it can ignore the unsupported TLV. It MUST NOT send a NAK TLV for a TLV that is not marked mandatory. If all TLVs in a message are marked optional and none are understood by the peer, then a NAK TLV or Result TLV could be sent to the other side in order to continue the conversation.",
      "ja": "EAPピアは必ずしもEAPサーバでサポートされているすべてのTLVを実装しない場合があります。相互運用性を確保するために、のTLVは、TLVは、NAK TLVを使用してEAPピアによってサポートされている場合、EAPサーバが発見できるように設計されています。 TLVに必須のビットは、TLVのサポートが必要であるかどうかを示します。ピアまたはTLVをサポートしていないサーバは必須マークされている場合、それは応答でNAK TLVを送らなければなりませんし、メッセージ内の他のすべてのTLVを無視しなければなりません。 EAPピアまたはサーバがオプションとしてマークされ、サポートされていないTLV見つけた場合、それはサポートされていないTLVを無視することができます。これは必須とマークされていないTLVのためのNAK TLVを送ってはいけません。メッセージ内のすべてのTLVはオプションでマークされ、どれがピアによって理解されていない場合、NAK TLVまたはTLVの結果は、会話を継続するために他の側に送信することができます。"
    },
    {
      "indent": 3,
      "text": "Note that a peer or server may support a TLV with the mandatory bit set but may not understand the contents. The appropriate response to a supported TLV with content that is not understood is defined by the individual TLV specification.",
      "ja": "ピアまたはサーバが必須ビットが設定されたTLVをサポートするかもしれませんが、内容を理解していないことに注意してください。理解されていないコンテンツでサポートTLVへの適切な応答は、個々のTLV仕様によって定義されます。"
    },
    {
      "indent": 3,
      "text": "EAP implementations compliant with this specification MUST support TLV exchanges as well as the processing of mandatory/optional settings on the TLV. Implementations conforming to this specification MUST support the following TLVs:",
      "ja": "この仕様に準拠EAP実装はTLV交換ならびにTLVに必須/オプション設定の処理をサポートしなければなりません。この仕様に準拠した実装は、次のTLVをサポートしなければなりません："
    },
    {
      "indent": 6,
      "text": "Authority-ID TLV",
      "ja": "認証局-ID TLV"
    },
    {
      "indent": 6,
      "text": "Identity-Type TLV",
      "ja": "アイデンティティ型TLV"
    },
    {
      "indent": 6,
      "text": "Result TLV",
      "ja": "結果TLV"
    },
    {
      "indent": 6,
      "text": "NAK TLV",
      "ja": "NAK TLV"
    },
    {
      "indent": 6,
      "text": "Error TLV",
      "ja": "エラーTLV"
    },
    {
      "indent": 6,
      "text": "Request-Action TLV",
      "ja": "要求アクションTLV"
    },
    {
      "indent": 6,
      "text": "EAP-Payload TLV",
      "ja": "EAP-ペイロードTLV"
    },
    {
      "indent": 6,
      "text": "Intermediate-Result TLV",
      "ja": "中間結果TLV"
    },
    {
      "indent": 6,
      "text": "Crypto-Binding TLV",
      "ja": "暗号バインディングTLV"
    },
    {
      "indent": 6,
      "text": "Basic-Password-Auth-Req TLV",
      "ja": "基本パスワード認証-REQ TLV"
    },
    {
      "indent": 6,
      "text": "Basic-Password-Auth-Resp TLV",
      "ja": "基本パスワード認証-RespのTLV"
    },
    {
      "indent": 0,
      "text": "4.2.1. General TLV Format",
      "section_title": true,
      "ja": "4.2.1。一般的なTLVのフォーマット"
    },
    {
      "indent": 3,
      "text": "TLVs are defined as described below. The fields are transmitted from left to right.",
      "ja": "TLVは、下記のように定義されています。フィールドは左から右に送信されます。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|M|R|            TLV Type       |            Length             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                              Value...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "M",
      "ja": "M"
    },
    {
      "indent": 6,
      "text": "0 Optional TLV",
      "ja": "0オプションのTLV"
    },
    {
      "indent": 6,
      "text": "1 Mandatory TLV",
      "ja": "1必須TLV"
    },
    {
      "indent": 3,
      "text": "R",
      "ja": "R"
    },
    {
      "indent": 6,
      "text": "Reserved, set to zero (0)",
      "ja": "ゼロに設定され、予約済み（0）"
    },
    {
      "indent": 3,
      "text": "TLV Type",
      "ja": "TLVタイプ"
    },
    {
      "indent": 6,
      "text": "A 14-bit field, denoting the TLV type. Allocated types include:",
      "ja": "TLVのタイプを示す14ビットのフィールド。割り当てられたタイプは、次のとおりです。"
    },
    {
      "indent": 6,
      "text": "0 Unassigned",
      "ja": "未割り当て0"
    },
    {
      "indent": 6,
      "text": "1 Authority-ID TLV (Section 4.2.2)",
      "ja": "1機関-ID TLV（4.2.2）"
    },
    {
      "indent": 6,
      "text": "2 Identity-Type TLV (Section 4.2.3)",
      "ja": "2アイデンティティ型TLV（4.2.3）"
    },
    {
      "indent": 6,
      "text": "3 Result TLV (Section 4.2.4)",
      "ja": "3結果TLV（4.2.4項）"
    },
    {
      "indent": 6,
      "text": "4 NAK TLV (Section 4.2.5)",
      "ja": "4 NAK TLV（セクション4.2.5）"
    },
    {
      "indent": 6,
      "text": "5 Error TLV (Section 4.2.6)",
      "ja": "5エラーTLV（4.2.6項）"
    },
    {
      "indent": 6,
      "text": "6 Channel-Binding TLV (Section 4.2.7)",
      "ja": "6チャネル・バインディングTLV（セクション4.2.7）"
    },
    {
      "indent": 6,
      "text": "7 Vendor-Specific TLV (Section 4.2.8)",
      "ja": "7ベンダー固有のTLV（セクション4.2.8）"
    },
    {
      "indent": 6,
      "text": "8 Request-Action TLV (Section 4.2.9)",
      "ja": "8要求アクションTLV（セクション4.2.9）"
    },
    {
      "indent": 6,
      "text": "9 EAP-Payload TLV (Section 4.2.10)",
      "ja": "9 EAP-TLVペイロード（セクション4.2.10）"
    },
    {
      "indent": 6,
      "text": "10 Intermediate-Result TLV (Section 4.2.11)",
      "ja": "10中間結果TLV（セクション4.2.11）"
    },
    {
      "indent": 6,
      "text": "11 PAC TLV (Section 4.2.12)",
      "ja": "11 PAC TLV（セクション4.2.12）"
    },
    {
      "indent": 6,
      "text": "12 Crypto-Binding TLV (Section 4.2.13)",
      "ja": "12暗号バインディングTLV（セクション4.2.13）"
    },
    {
      "indent": 6,
      "text": "13 Basic-Password-Auth-Req TLV (Section 4.2.14)",
      "ja": "13基本-パスワード認証-REQ TLV（セクション4.2.14）"
    },
    {
      "indent": 6,
      "text": "14 Basic-Password-Auth-Resp TLV (Section 4.2.15)",
      "ja": "14基本-パスワード認証-RespのTLV（セクション4.2.15）"
    },
    {
      "indent": 6,
      "text": "15 PKCS#7 TLV (Section 4.2.16)",
      "ja": "15のPKCS＃7 TLV（セクション4.2.16）"
    },
    {
      "indent": 6,
      "text": "16 PKCS#10 TLV (Section 4.2.17)",
      "ja": "16のPKCS＃10 TLV（セクション4.2.17）"
    },
    {
      "indent": 6,
      "text": "17 Trusted-Server-Root TLV (Section 4.2.18)",
      "ja": "17信頼-サーバールートTLV（セクション4.2.18）"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "The length of the Value field in octets.",
      "ja": "オクテットで値フィールドの長さ。"
    },
    {
      "indent": 3,
      "text": "Value",
      "ja": "値"
    },
    {
      "indent": 6,
      "text": "The value of the TLV.",
      "ja": "TLVの値。"
    },
    {
      "indent": 0,
      "text": "4.2.2. Authority-ID TLV",
      "section_title": true,
      "ja": "4.2.2。認証局-ID TLV"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|M|R|         TLV Type          |            Length             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                              ID...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "M",
      "ja": "M"
    },
    {
      "indent": 6,
      "text": "Mandatory, set to one (1)",
      "ja": "必須の、いずれかに設定（1）"
    },
    {
      "indent": 3,
      "text": "R",
      "ja": "R"
    },
    {
      "indent": 6,
      "text": "Reserved, set to zero (0)",
      "ja": "ゼロに設定され、予約済み（0）"
    },
    {
      "indent": 3,
      "text": "TLV Type",
      "ja": "TLVタイプ"
    },
    {
      "indent": 6,
      "text": "1 - Authority-ID",
      "ja": "1  - 権限-ID"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "The Length field is two octets and contains the length of the ID field in octets.",
      "ja": "長さフィールドは2つのオクテットで、オクテット内のIDフィールドの長さが含まれています。"
    },
    {
      "indent": 3,
      "text": "ID",
      "ja": "ID"
    },
    {
      "indent": 6,
      "text": "Hint of the identity of the server to help the peer to match the credentials available for the server. It should be unique across the deployment.",
      "ja": "サーバーで使用可能な資格情報と一致するピアを助けるために、サーバの身元のヒント。これは、展開全体で一意である必要があります。"
    },
    {
      "indent": 0,
      "text": "4.2.3. Identity-Type TLV",
      "section_title": true,
      "ja": "4.2.3。アイデンティティ型TLV"
    },
    {
      "indent": 3,
      "text": "The Identity-Type TLV allows an EAP server to send a hint to help the EAP peer select the right type of identity, for example, user or machine. TEAPv1 implementations MUST support this TLV. Only one Identity-Type TLV SHOULD be present in the TEAP request or response packet. The Identity-Type TLV request MUST come with an EAP-Payload TLV or Basic-Password-Auth-Req TLV. If the EAP peer does have an identity corresponding to the identity type requested, then the peer SHOULD respond with an Identity-Type TLV with the requested type. If the Identity-Type field does not contain one of the known values or if the EAP peer does not have an identity corresponding to the identity type requested, then the peer SHOULD respond with an Identity-Type TLV with the one of available identity types. If the server receives an identity type in the response that does not match the requested type, then the peer does not possess the requested credential type, and the server SHOULD proceed with authentication for the credential type proposed by the peer, proceed with requesting another credential type, or simply apply the network policy based on the configured policy, e.g., sending Result TLV with Failure.",
      "ja": "アイデンティティ・タイプTLVは​​EAPサーバがEAPピアは、たとえば、ユーザまたはマシンのIDの右の種類を、選択を助けるためにヒントを送信することができます。 TEAPv1実装は、このTLVをサポートしなければなりません。唯一のアイデンティティ-タイプTLVは​​、TEAP要求や応答パケット中に存在すべきです。アイデンティティ・タイプTLV要求は、EAP-ペイロードTLVまたは基本-パスワード認証-REQ TLVに来なければなりません。 EAPピアが要求されたアイデンティティのタイプに対応したアイデンティティを持っている場合は、ピアは、要求されたタイプでアイデンティティ・タイプTLVで応答する必要があります。 EAPピアが要求されたアイデンティティータイプに対応するIDを持っていない場合、アイデンティティ-Typeフィールドは、既知のいずれかの値が含まれたりしていない場合、ピアは、利用可能なアイデンティティのタイプのいずれかでアイデンティティ型TLVで応答する必要があります。サーバは要求された型と一致しない応答でIDタイプを受信した場合、ピアは、要求された資格情報の種類を所有していないと、サーバは、ピアによって提案された資格情報の種類の認証を続行別の資格情報を要求して進めるべきタイプ、または単純に設定されたポリシーに基づいてネットワークポリシーを適用し、例えば、故障で結果TLVを送信します。"
    },
    {
      "indent": 3,
      "text": "The Identity-Type TLV is defined as follows:",
      "ja": "次のようにアイデンティティ型TLVが定義されています。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|M|R|         TLV Type          |            Length             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|         Identity-Type         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "M",
      "ja": "M"
    },
    {
      "indent": 6,
      "text": "0 (Optional)",
      "ja": "0（オプション）"
    },
    {
      "indent": 3,
      "text": "R",
      "ja": "R"
    },
    {
      "indent": 6,
      "text": "Reserved, set to zero (0)",
      "ja": "ゼロに設定され、予約済み（0）"
    },
    {
      "indent": 3,
      "text": "TLV Type",
      "ja": "TLVタイプ"
    },
    {
      "indent": 6,
      "text": "2 - Identity-Type TLV",
      "ja": "2  - アイデンティティ - タイプTLV"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "2",
      "ja": "２"
    },
    {
      "indent": 3,
      "text": "Identity-Type",
      "ja": "アイデンティティ型"
    },
    {
      "indent": 6,
      "text": "The Identity-Type field is two octets. Values include:",
      "ja": "アイデンティティ-Typeフィールドは2つのオクテットです。値は次のとおりです。"
    },
    {
      "indent": 6,
      "text": "1 User",
      "ja": "1人のユーザー"
    },
    {
      "indent": 6,
      "text": "2 Machine",
      "ja": "2機"
    },
    {
      "indent": 0,
      "text": "4.2.4. Result TLV",
      "section_title": true,
      "ja": "4.2.4。結果TLV"
    },
    {
      "indent": 3,
      "text": "The Result TLV provides support for acknowledged success and failure messages for protected termination within TEAP. If the Status field does not contain one of the known values, then the peer or EAP server MUST treat this as a fatal error of Unexpected TLVs Exchanged. The behavior of the Result TLV is further discussed in Sections 3.3.3 and 3.6.3. A Result TLV indicating failure MUST NOT be accompanied by the following TLVs: NAK, EAP-Payload TLV, or Crypto-Binding TLV. The Result TLV is defined as follows:",
      "ja": "結果TLVはTEAP内の保護終了のために認め成功と失敗メッセージのサポートを提供します。 Statusフィールドには、既知のいずれかの値が含まれていない場合は、ピアまたはEAPサーバが交換さ予期しないのTLVの致命的なエラーとしてこれを扱わなければなりません。結果TLVの挙動はさらに、セクション3.3.3と3.6.3で説明されています。 NAK、EAP-ペイロードTLV、または暗号バインディングTLV：失敗を示す結果TLVは以下のTLVを伴ってはなりません。次のように結果TLVが定義されています。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|M|R|         TLV Type          |            Length             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             Status            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "M",
      "ja": "M"
    },
    {
      "indent": 6,
      "text": "Mandatory, set to one (1)",
      "ja": "必須の、いずれかに設定（1）"
    },
    {
      "indent": 3,
      "text": "R",
      "ja": "R"
    },
    {
      "indent": 6,
      "text": "Reserved, set to zero (0)",
      "ja": "ゼロに設定され、予約済み（0）"
    },
    {
      "indent": 3,
      "text": "TLV Type",
      "ja": "TLVタイプ"
    },
    {
      "indent": 6,
      "text": "3 - Result TLV",
      "ja": "3  -  TLVを結果"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "2",
      "ja": "２"
    },
    {
      "indent": 3,
      "text": "Status",
      "ja": "状態"
    },
    {
      "indent": 6,
      "text": "The Status field is two octets. Values include:",
      "ja": "Statusフィールドは2つのオクテットです。値は次のとおりです。"
    },
    {
      "indent": 6,
      "text": "1 Success",
      "ja": "1成功"
    },
    {
      "indent": 6,
      "text": "2 Failure",
      "ja": "2失敗"
    },
    {
      "indent": 0,
      "text": "4.2.5. NAK TLV",
      "section_title": true,
      "ja": "4.2.5。 NAK TLV"
    },
    {
      "indent": 3,
      "text": "The NAK TLV allows a peer to detect TLVs that are not supported by the other peer. A TEAP packet can contain 0 or more NAK TLVs. A NAK TLV should not be accompanied by other TLVs. A NAK TLV MUST NOT be sent in response to a message containing a Result TLV, instead a Result TLV of failure should be sent indicating failure and an Error TLV of Unexpected TLVs Exchanged. The NAK TLV is defined as follows:",
      "ja": "NAK TLVピアが他のピアによってサポートされていないTLVを検出することができます。 TEAPパケットは0以上のNAK TLVを含めることができます。 NAK TLVは、他のTLVを伴うことはないはずです。 NAK TLV結果TLVを含むメッセージに応答して送信してはいけません、故障の代わり結果TLVは、障害と予期のTLVのTLVが交換エラーを示す送信されるべきです。次のようにNAK TLVが定義されています。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|M|R|         TLV Type          |            Length             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          Vendor-Id                            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|            NAK-Type           |           TLVs...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "M",
      "ja": "M"
    },
    {
      "indent": 6,
      "text": "Mandatory, set to one (1)",
      "ja": "必須の、いずれかに設定（1）"
    },
    {
      "indent": 3,
      "text": "R",
      "ja": "R"
    },
    {
      "indent": 6,
      "text": "Reserved, set to zero (0)",
      "ja": "ゼロに設定され、予約済み（0）"
    },
    {
      "indent": 3,
      "text": "TLV Type",
      "ja": "TLVタイプ"
    },
    {
      "indent": 6,
      "text": "4 - NAK TLV",
      "ja": "4  -  NAK TLV"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": ">=6",
      "ja": "＞＝６"
    },
    {
      "indent": 3,
      "text": "Vendor-Id",
      "ja": "ベンダーID"
    },
    {
      "indent": 6,
      "text": "The Vendor-Id field is four octets and contains the Vendor-Id of the TLV that was not supported. The high-order octet is 0, and the low-order three octets are the Structure of Management",
      "ja": "ベンダーIDフィールドは4つのオクテットであり、サポートされていませんでしたTLVのベンダーIDが含まれています。上位オクテットは0であり、下位3オクテットは、経営の構造です"
    },
    {
      "indent": 6,
      "text": "Information (SMI) Network Management Private Enterprise Number of the Vendor in network byte order. The Vendor-Id field MUST be zero for TLVs that are not Vendor-Specific TLVs.",
      "ja": "ネットワークバイトオーダーでのベンダーの情報（SMI）ネットワーク管理プライベートエンタープライズ番号。ベンダーIDフィールドは、ベンダー固有のTLVがないTLVのためのゼロでなければなりません。"
    },
    {
      "indent": 3,
      "text": "NAK-Type",
      "ja": "NAK-タイプ"
    },
    {
      "indent": 6,
      "text": "The NAK-Type field is two octets. The field contains the type of the TLV that was not supported. A TLV of this type MUST have been included in the previous packet.",
      "ja": "NAK-Typeフィールドは2つのオクテットです。フィールドがサポートされていなかったTLVの種類が含まれています。このタイプのTLVは、前のパケットに含まれている必要があります。"
    },
    {
      "indent": 3,
      "text": "TLVs",
      "ja": "TLV"
    },
    {
      "indent": 6,
      "text": "This field contains a list of zero or more TLVs, each of which MUST NOT have the mandatory bit set. These optional TLVs are for future extensibility to communicate why the offending TLV was determined to be unsupported.",
      "ja": "このフィールドは必須ビットセットを持ってはいけません、それぞれがゼロ個以上のTLVのリストが含まれています。これらのオプションのTLVは、問題のTLVがサポートされていないことが決定された理由を通信するために、将来の拡張のためのものです。"
    },
    {
      "indent": 0,
      "text": "4.2.6. Error TLV",
      "section_title": true,
      "ja": "4.2.6。エラーTLV"
    },
    {
      "indent": 3,
      "text": "The Error TLV allows an EAP peer or server to indicate errors to the other party. A TEAP packet can contain 0 or more Error TLVs. The Error-Code field describes the type of error. Error codes 1-999 represent successful outcomes (informative messages), 1000-1999 represent warnings, and 2000-2999 represent fatal errors. A fatal Error TLV MUST be accompanied by a Result TLV indicating failure, and the conversation is terminated as described in Section 3.6.3.",
      "ja": "エラーTLVはEAPピアまたはサーバが相手にエラーを示すことができます。 TEAPパケットは0以上のエラーTLVを含めることができます。エラーコードフィールドには、エラーの種類を説明しています。エラーコード1〜999は、1000年から1999年には警告を表し、成功した成果（情報メッセージ）を表し、そして2000年から2999年には致命的なエラーを表します。致命的なエラーTLVは、失敗を示す結果TLVを添付しなければならない、とセクション3.6.3で説明したように会話を終了します。"
    },
    {
      "indent": 3,
      "text": "Many of the error codes below refer to errors in inner method processing that may be retrieved if made available by the inner method. Implementations MUST take care that error messages do not reveal too much information to an attacker. For example, the usage of error message 1031 (User account credentials incorrect) is NOT RECOMMENDED, because it allows an attacker to determine valid usernames by differentiating this response from other responses. It should only be used for troubleshooting purposes.",
      "ja": "以下のエラーコードの多くは、内部の方法で利用可能になる場合に取り出すことができるインナー法処理におけるエラーを指します。実装は、エラーメッセージが攻撃者にあまりにも多くの情報を明らかにしないことに注意しなければなりません。それは攻撃者が他の応答から、この応答を微分して、有効なユーザ名を決定することができますので、例えば、エラーメッセージ1031（間違ったユーザーアカウントの認証情報）の使用は、推奨されません。それだけでトラブルシューティングの目的のために使用すべきです。"
    },
    {
      "indent": 3,
      "text": "The Error TLV is defined as follows:",
      "ja": "以下のようにエラーTLVが定義されています。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|M|R|         TLV Type          |            Length             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                           Error-Code                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "M",
      "ja": "M"
    },
    {
      "indent": 6,
      "text": "Mandatory, set to one (1)",
      "ja": "必須の、いずれかに設定（1）"
    },
    {
      "indent": 3,
      "text": "R",
      "ja": "R"
    },
    {
      "indent": 6,
      "text": "Reserved, set to zero (0)",
      "ja": "ゼロに設定され、予約済み（0）"
    },
    {
      "indent": 3,
      "text": "TLV Type",
      "ja": "TLVタイプ"
    },
    {
      "indent": 6,
      "text": "5 - Error TLV",
      "ja": "5  - エラーTLV"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "4",
      "ja": "４"
    },
    {
      "indent": 3,
      "text": "Error-Code",
      "ja": "エラーコード"
    },
    {
      "indent": 6,
      "text": "The Error-Code field is four octets. Currently defined values for Error-Code include:",
      "ja": "エラー・コード・フィールドは4つのオクテットです。エラーコードのための現在定義されている値は次のとおりです。"
    },
    {
      "indent": 6,
      "text": "1 User account expires soon",
      "ja": "1つのユーザーアカウントがまもなく期限切れになります"
    },
    {
      "indent": 6,
      "text": "2 User account credential expires soon",
      "ja": "2ユーザーアカウントの資格情報はすぐに期限切れになります"
    },
    {
      "indent": 6,
      "text": "3 User account authorizations change soon",
      "ja": "3ユーザーアカウントの権限はすぐに変更します"
    },
    {
      "indent": 6,
      "text": "4 Clock skew detected",
      "ja": "検出された4クロック・スキュー"
    },
    {
      "indent": 6,
      "text": "5 Contact administrator",
      "ja": "5連絡先の管理者"
    },
    {
      "indent": 6,
      "text": "6 User account credentials change required",
      "ja": "6つのユーザー・アカウントの資格情報が必要な変更します"
    },
    {
      "indent": 6,
      "text": "1001 Inner Method Error",
      "ja": "1001インナーメソッドのエラー"
    },
    {
      "indent": 6,
      "text": "1002 Unspecified authentication infrastructure problem",
      "ja": "1002指定されていない認証インフラストラクチャの問題"
    },
    {
      "indent": 6,
      "text": "1003 Unspecified authentication failure",
      "ja": "1003指定されていない認証失敗"
    },
    {
      "indent": 6,
      "text": "1004 Unspecified authorization failure",
      "ja": "1004指定されていない認証の失敗"
    },
    {
      "indent": 6,
      "text": "1005 User account credentials unavailable",
      "ja": "1005のユーザーアカウントの資格情報を使用できません"
    },
    {
      "indent": 6,
      "text": "1006 User account expired",
      "ja": "1006ユーザーアカウントの有効期限が切れ"
    },
    {
      "indent": 6,
      "text": "1007 User account locked: try again later",
      "ja": "1007ユーザーアカウントロック：後で再試行してください"
    },
    {
      "indent": 6,
      "text": "1008 User account locked: admin intervention required",
      "ja": "1008ユーザーアカウントロック：管理者の介入が必要"
    },
    {
      "indent": 6,
      "text": "1009 Authentication infrastructure unavailable",
      "ja": "1009認証インフラストラクチャ利用できません"
    },
    {
      "indent": 6,
      "text": "1010 Authentication infrastructure not trusted",
      "ja": "1010認証インフラストラクチャが信頼されていません"
    },
    {
      "indent": 6,
      "text": "1011 Clock skew too great",
      "ja": "1011クロック・スキューが大きすぎます"
    },
    {
      "indent": 6,
      "text": "1012 Invalid inner realm",
      "ja": "1012無効なインナー分野"
    },
    {
      "indent": 6,
      "text": "1013 Token out of sync: administrator intervention required",
      "ja": "同期のうち1013トークン：管理者の介入が必要"
    },
    {
      "indent": 6,
      "text": "1014 Token out of sync: PIN change required",
      "ja": "1014年同期のうちトークン：PINの変更が必要"
    },
    {
      "indent": 6,
      "text": "1015 Token revoked",
      "ja": "1015トークンが取り消さ"
    },
    {
      "indent": 6,
      "text": "1016 Tokens exhausted",
      "ja": "1016個のトークン尽くさ"
    },
    {
      "indent": 6,
      "text": "1017 Challenge expired",
      "ja": "1017チャレンジが期限切れ"
    },
    {
      "indent": 6,
      "text": "1018 Challenge algorithm mismatch",
      "ja": "1018チャレンジアルゴリズムのミスマッチ"
    },
    {
      "indent": 6,
      "text": "1019 Client certificate not supplied",
      "ja": "1019クライアント証明書が付属していません"
    },
    {
      "indent": 6,
      "text": "1020 Client certificate rejected",
      "ja": "1020クライアント証明書が拒否"
    },
    {
      "indent": 6,
      "text": "1021 Realm mismatch between inner and outer identity",
      "ja": "内側と外側のアイデンティティとの間に1021レルムの不一致"
    },
    {
      "indent": 6,
      "text": "1022 Unsupported Algorithm In Certificate Signing Request",
      "ja": "1022サポートされていないアルゴリズムで証明書署名要求"
    },
    {
      "indent": 6,
      "text": "1023 Unsupported Extension In Certificate Signing Request",
      "ja": "1023サポートされていない拡張子で証明書署名要求"
    },
    {
      "indent": 6,
      "text": "1024 Bad Identity In Certificate Signing Request",
      "ja": "証明書署名要求で1024バート・アイデンティティ"
    },
    {
      "indent": 6,
      "text": "1025 Bad Certificate Signing Request",
      "ja": "1025不正な証明書署名要求"
    },
    {
      "indent": 6,
      "text": "1026 Internal CA Error",
      "ja": "1026内部CAエラー"
    },
    {
      "indent": 6,
      "text": "1027 General PKI Error",
      "ja": "1027一般的なPKIエラー"
    },
    {
      "indent": 6,
      "text": "1028 Inner method's channel-binding data required but not supplied",
      "ja": "1028インナー方式のチャネル結合データが必要ですが付属していません"
    },
    {
      "indent": 6,
      "text": "1029 Inner method's channel-binding data did not include required information",
      "ja": "1029インナー方式のチャネル結合データは、必要な情報が含まれていませんでした"
    },
    {
      "indent": 6,
      "text": "1030 Inner method's channel binding failed",
      "ja": "1030インナー方式のチャネルが失敗した結合"
    },
    {
      "indent": 6,
      "text": "1031 User account credentials incorrect [USAGE NOT RECOMMENDED]",
      "ja": "1031ユーザーアカウントの資格情報を誤って[USAGE推奨NOT]"
    },
    {
      "indent": 6,
      "text": "2001 Tunnel Compromise Error",
      "ja": "2001トンネル妥協エラー"
    },
    {
      "indent": 6,
      "text": "2002 Unexpected TLVs Exchanged",
      "ja": "2002予期しないのTLVを交換"
    },
    {
      "indent": 0,
      "text": "4.2.7. Channel-Binding TLV",
      "section_title": true,
      "ja": "4.2.7。チャネル結合性TLV"
    },
    {
      "indent": 3,
      "text": "The Channel-Binding TLV provides a mechanism for carrying channel-binding data from the peer to the EAP server and a channel-binding response from the EAP server to the peer as described in [RFC6677]. TEAPv1 implementations MAY support this TLV, which cannot be responded to with a NAK TLV. If the Channel-Binding data field does not contain one of the known values or if the EAP server does not support this TLV, then the server MUST ignore the value. The Channel-Binding TLV is defined as follows:",
      "ja": "チャネル・バインディングTLVはEAPサーバと[RFC6677]に記載されているように、ピアにEAPサーバからチャネル結合応答にピアからチャネル結合データを搬送するための機構を提供します。 TEAPv1の実装では、NAK TLVで応答することができないこのTLVをサポートすることができます。チャンネル・バインディングデータ・フィールドは、既知のいずれかの値が含まれていない場合、またはEAPサーバがこのTLVをサポートしていない場合、サーバは値を無視しなければなりません。次のようにチャンネル結合性TLVが定義されています。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|M|R|         TLV Type          |            Length             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|            Data ...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "M",
      "ja": "M"
    },
    {
      "indent": 6,
      "text": "0 (Optional)",
      "ja": "0（オプション）"
    },
    {
      "indent": 3,
      "text": "R",
      "ja": "R"
    },
    {
      "indent": 6,
      "text": "Reserved, set to zero (0)",
      "ja": "ゼロに設定され、予約済み（0）"
    },
    {
      "indent": 3,
      "text": "TLV Type",
      "ja": "TLVタイプ"
    },
    {
      "indent": 6,
      "text": "6 - Channel-Binding TLV",
      "ja": "6  - チャンネル結合性TLV"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "variable",
      "ja": "変数"
    },
    {
      "indent": 3,
      "text": "Data",
      "ja": "データ"
    },
    {
      "indent": 6,
      "text": "The data field contains a channel-binding message as defined in Section 5.3 of [RFC6677].",
      "ja": "[RFC6677]のセクション5.3で定義されるようなデータフィールドは、チャネルバインディングメッセージを含みます。"
    },
    {
      "indent": 0,
      "text": "4.2.8. Vendor-Specific TLV",
      "section_title": true,
      "ja": "4.2.8。ベンダー固有のTLV"
    },
    {
      "indent": 3,
      "text": "The Vendor-Specific TLV is available to allow vendors to support their own extended attributes not suitable for general usage. A Vendor-Specific TLV attribute can contain one or more TLVs, referred to as Vendor TLVs. The TLV type of a Vendor-TLV is defined by the vendor. All the Vendor TLVs inside a single Vendor-Specific TLV belong to the same vendor. There can be multiple Vendor-Specific TLVs from different vendors in the same message. Error handling in the Vendor TLV could use the vendor's own specific error-handling mechanism or use the standard TEAP error codes defined.",
      "ja": "ベンダー固有のTLVは、ベンダーが一般的な使用には適さない独自の拡張属性をサポートすることを可能にするために利用可能です。ベンダー固有のTLV属性は、ベンダーのTLVと呼ばれる1つまたは複数のTLVを含めることができます。ベンダーTLVのTLVタイプは、ベンダによって定義されています。単一ベンダー固有のTLV内のすべてのベンダーのTLVは、同じベンダーに属します。同じメッセージの異なるベンダーからの複数のベンダー固有のTLVが存在する場合があります。ベンダーTLVにエラー処理は、ベンダー固有のエラー処理メカニズムを使用するか、定義された標準TEAPのエラーコードを使用することができます。"
    },
    {
      "indent": 3,
      "text": "Vendor TLVs may be optional or mandatory. Vendor TLVs sent with Result TLVs MUST be marked as optional. If the Vendor-Specific TLV is marked as mandatory, then it is expected that the receiving side needs to recognize the vendor ID, parse all Vendor TLVs within, and deal with error handling within the Vendor-Specific TLV as defined by the vendor.",
      "ja": "ベンダーのTLVは、オプションか必須かもしれません。結果のTLVで送信されたベンダーのTLVは、オプションとしてマークされなければなりません。ベンダー固有のTLVを必須としてマークされている場合、受信側は、ベンダーIDを認識する必要があると予想され、内のすべてのベンダーTLVを解析し、ベンダーによって定義されているベンダー固有のTLV内でエラー処理を扱います。"
    },
    {
      "indent": 3,
      "text": "The Vendor-Specific TLV is defined as follows:",
      "ja": "次のようにベンダー固有のTLVが定義されています。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|M|R|         TLV Type          |            Length             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          Vendor-Id                            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                         Vendor TLVs....\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "M",
      "ja": "M"
    },
    {
      "indent": 6,
      "text": "0 or 1",
      "ja": "0または1"
    },
    {
      "indent": 3,
      "text": "R",
      "ja": "R"
    },
    {
      "indent": 6,
      "text": "Reserved, set to zero (0)",
      "ja": "ゼロに設定され、予約済み（0）"
    },
    {
      "indent": 3,
      "text": "TLV Type",
      "ja": "TLVタイプ"
    },
    {
      "indent": 6,
      "text": "7 - Vendor-Specific TLV",
      "ja": "7  - ベンダー固有のTLV"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "4 + cumulative length of all included Vendor TLVs",
      "ja": "全ての4 +累積長さはベンダーTLVを含めます"
    },
    {
      "indent": 3,
      "text": "Vendor-Id",
      "ja": "ベンダーID"
    },
    {
      "indent": 6,
      "text": "The Vendor-Id field is four octets and contains the Vendor-Id of the TLV. The high-order octet is 0, and the low-order 3 octets are the SMI Network Management Private Enterprise Number of the Vendor in network byte order.",
      "ja": "ベンダーIDフィールドは4つのオクテットであるとTLVのベンダーIDが含まれています。上位オクテットは0であり、下位3オクテットはネットワークバイトオーダーでのベンダーのSMIネットワーク管理プライベート・エンタープライズ番号です。"
    },
    {
      "indent": 3,
      "text": "Vendor TLVs",
      "ja": "ベンダーのTLV"
    },
    {
      "indent": 6,
      "text": "This field is of indefinite length. It contains Vendor-Specific TLVs, in a format defined by the vendor.",
      "ja": "このフィールドは、不定長さです。これは、ベンダーによって定義されたフォーマットで、ベンダー固有のTLVが含まれています。"
    },
    {
      "indent": 0,
      "text": "4.2.9. Request-Action TLV",
      "section_title": true,
      "ja": "4.2.9。要求アクションTLV"
    },
    {
      "indent": 3,
      "text": "The Request-Action TLV MAY be sent by both the peer and the server in response to a successful or failed Result TLV. It allows the peer or server to request the other side to negotiate additional EAP methods or process TLVs specified in the response packet. The receiving side MUST process this TLV. The processing for the TLV is as follows:",
      "ja": "要求アクションTLVは成功したか失敗した結果TLVに応じて、ピアとサーバの両方で送信されるかもしれません。これは、ピアまたはサーバが応答パケットに指定された追加のEAPメソッドまたはプロセスTLVを交渉するために他の側に要求することを可能にします。受信側はこのTLVを処理しなければなりません。次のようにTLVのための処理は次のとおりです。"
    },
    {
      "indent": 6,
      "text": "The receiving entity MAY choose to process any of the TLVs that are included in the message.",
      "ja": "受信エンティティは、メッセージに含まれたTLVのいずれかを処理するために選ぶかもしれません。"
    },
    {
      "indent": 6,
      "text": "If the receiving entity chooses NOT to process any TLV in the list, then it sends back a Result TLV with the same code in the Status field of the Request-Action TLV.",
      "ja": "受信エンティティは、リスト内の任意のTLVを処理しないことを選択した場合、それは、Request-アクションTLVのStatusフィールドに同じコードで結果TLVを送り返します。"
    },
    {
      "indent": 6,
      "text": "If multiple Request-Action TLVs are in the request, the session can continue if any of the TLVs in any Request-Action TLV are processed.",
      "ja": "複数のリクエスト・アクションのTLVがリクエストしている場合は任意のリクエスト・アクションTLV中のTLVのいずれかが処理されている場合、セッションは継続することができます。"
    },
    {
      "indent": 6,
      "text": "If multiple Request-Action TLVs are in the request and none of them is processed, then the most fatal status should be used in the Result TLV returned. If a status code in the Request-Action TLV is not understood by the receiving entity, then it should be treated as a fatal error.",
      "ja": "複数のリクエスト・アクションのTLVがリクエストにあり、それらのどれもが処理されていない場合は、最も致命的な状態がTLVが返される結果で使用されるべきです。要求アクションTLVのステータスコードが受信エンティティによって理解されていない場合、それは致命的なエラーとして扱われるべきです。"
    },
    {
      "indent": 6,
      "text": "After processing the TLVs or EAP method in the request, another round of Result TLV exchange would occur to synchronize the final status on both sides.",
      "ja": "要求内のTLVまたはEAPメソッドを処理した後、結果TLV交換の別のラウンドは、両側の最終状態を同期するために生じます。"
    },
    {
      "indent": 3,
      "text": "The peer or the server MAY send multiple Request-Action TLVs to the other side. Two Request-Action TLVs MUST NOT occur in the same TEAP packet if they have the same Status value. The order of processing multiple Request-Action TLVs is implementation dependent. If the receiving side processes the optional (non-fatal) items first, it is possible that the fatal items will disappear at a later time. If the receiving side processes the fatal items first, the communication time will be shorter.",
      "ja": "ピアまたはサーバが他の側に複数のリクエスト・アクションのTLVを送信することができます。彼らは同じステータス値を持っている場合、2つのリクエスト・アクションのTLVは同じTEAPパケットに発生してはなりません。複数のリクエスト・アクションTLVを処理する順序は実装依存です。受信側は、最初のオプション（非致命的）アイテムを処理する場合、致命的な項目は後で消えてしまう可能性があります。受信側は、最初の致命的な項目を処理した場合は、通信時間が短くなります。"
    },
    {
      "indent": 3,
      "text": "The peer or the server MAY return a new set of Request-Action TLVs after one or more of the requested items has been processed and the other side has signaled it wants to end the EAP conversation.",
      "ja": "ピアまたはサーバが要求されたアイテムの1つ以上が処理され、他側は、それがEAPの会話を終了したいと考えてい合図した後に要求アクションのTLVの新しいセットを返す場合があります。"
    },
    {
      "indent": 3,
      "text": "The Request-Action TLV is defined as follows:",
      "ja": "次のように要求アクションTLVが定義されています。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|M|R|         TLV Type          |            Length             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Status   |      Action    |                TLVs....\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+--+-+-+-+-+-+-+-+-+-+-+-+-",
      "raw": true
    },
    {
      "indent": 3,
      "text": "M",
      "ja": "M"
    },
    {
      "indent": 6,
      "text": "Mandatory, set to one (1)",
      "ja": "必須の、いずれかに設定（1）"
    },
    {
      "indent": 3,
      "text": "R",
      "ja": "R"
    },
    {
      "indent": 6,
      "text": "Reserved, set to zero (0)",
      "ja": "ゼロに設定され、予約済み（0）"
    },
    {
      "indent": 3,
      "text": "TLV Type",
      "ja": "TLVタイプ"
    },
    {
      "indent": 6,
      "text": "8 - Request-Action TLV",
      "ja": "8  - 要求アクションTLV"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "2 + cumulative length of all included TLVs",
      "ja": "全ての2 +累積長さがTLVを含めます"
    },
    {
      "indent": 3,
      "text": "Status",
      "ja": "状態"
    },
    {
      "indent": 6,
      "text": "The Status field is one octet. This indicates the result if the server does not process the action requested by the peer. Values include:",
      "ja": "Statusフィールドは1つのオクテットです。サーバは、ピアによって要求されたアクションを処理しない場合、これは結果を示しています。値は次のとおりです。"
    },
    {
      "indent": 6,
      "text": "1 Success",
      "ja": "1成功"
    },
    {
      "indent": 6,
      "text": "2 Failure",
      "ja": "2失敗"
    },
    {
      "indent": 3,
      "text": "Action",
      "ja": "アクション"
    },
    {
      "indent": 6,
      "text": "The Action field is one octet. Values include:",
      "ja": "アクションフィールドは1つのオクテットです。値は次のとおりです。"
    },
    {
      "indent": 6,
      "text": "1 Process-TLV",
      "ja": "1プロセス-TLV"
    },
    {
      "indent": 6,
      "text": "2 Negotiate-EAP",
      "ja": "2ネゴシエート-EAP"
    },
    {
      "indent": 3,
      "text": "TLVs",
      "ja": "TLV"
    },
    {
      "indent": 6,
      "text": "This field is of indefinite length. It contains TLVs that the peer wants the server to process.",
      "ja": "このフィールドは、不定長さです。これは、ピアは、サーバが処理したいというのTLVが含まれています。"
    },
    {
      "indent": 0,
      "text": "4.2.10. EAP-Payload TLV",
      "section_title": true,
      "ja": "4.2.10。 EAP-ペイロードTLV"
    },
    {
      "indent": 3,
      "text": "To allow piggybacking an EAP request or response with other TLVs, the EAP-Payload TLV is defined, which includes an encapsulated EAP packet and a list of optional TLVs. The optional TLVs are provided for future extensibility to provide hints about the current EAP authentication. Only one EAP-Payload TLV is allowed in a message. The EAP-Payload TLV is defined as follows:",
      "ja": "EAP要求または他のTLVで応答をピギーバックできるように、EAP-TLVペイロードは、カプセル化されたEAPパケットと任意のTLVのリストを含む、定義されています。オプションのTLVは、現在のEAP認証についてのヒントを提供するために、将来的な拡張のために提供されています。一つだけEAP-ペイロードTLVはメッセージで許可されています。次のようにEAP-ペイロードTLVが定義されています。"
    },
    {
      "indent": 3,
      "text": "0                   1                   2                   3\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|M|R|         TLV Type          |            Length             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          EAP packet...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                             TLVs...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "M",
      "ja": "M"
    },
    {
      "indent": 6,
      "text": "Mandatory, set to one (1)",
      "ja": "必須の、いずれかに設定（1）"
    },
    {
      "indent": 3,
      "text": "R",
      "ja": "R"
    },
    {
      "indent": 6,
      "text": "Reserved, set to zero (0)",
      "ja": "ゼロに設定され、予約済み（0）"
    },
    {
      "indent": 3,
      "text": "TLV Type",
      "ja": "TLVタイプ"
    },
    {
      "indent": 6,
      "text": "9 - EAP-Payload TLV",
      "ja": "9  -  EAP-ペイロードTLV"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "length of embedded EAP packet + cumulative length of additional TLVs",
      "ja": "埋め込まれたEAPパケット+追加のTLVの累積長さの長さ"
    },
    {
      "indent": 3,
      "text": "EAP packet",
      "ja": "EAPパケット"
    },
    {
      "indent": 6,
      "text": "This field contains a complete EAP packet, including the EAP header (Code, Identifier, Length, Type) fields. The length of this field is determined by the Length field of the encapsulated EAP packet.",
      "ja": "このフィールドはEAPヘッダー（コード、識別子、長さ、タイプ）フィールドを含む完全なEAPパケットを含んでいます。このフィールドの長さは、カプセル化されたEAPパケットの長さフィールドによって決定されます。"
    },
    {
      "indent": 3,
      "text": "TLVs",
      "ja": "TLV"
    },
    {
      "indent": 6,
      "text": "This (optional) field contains a list of TLVs associated with the EAP packet field. The TLVs MUST NOT have the mandatory bit set. The total length of this field is equal to the Length field of the EAP-Payload TLV, minus the Length field in the EAP header of the EAP packet field.",
      "ja": "この（オプション）フィールドは、EAPパケットフィールドに関連付けられているのTLVのリストが含まれています。 TLVが必須ビットセットを持ってはいけません。このフィールドの長さの合計は、EAP-TLVペイロードの長さフィールド、マイナスEAPパケットフィールドのEAPヘッダの長さフィールドに等しいです。"
    },
    {
      "indent": 0,
      "text": "4.2.11. Intermediate-Result TLV",
      "section_title": true,
      "ja": "4.2.11。中間結果TLV"
    },
    {
      "indent": 3,
      "text": "The Intermediate-Result TLV provides support for acknowledged intermediate Success and Failure messages between multiple inner EAP methods within EAP. An Intermediate-Result TLV indicating success MUST be accompanied by a Crypto-Binding TLV. The optional TLVs associated with this TLV are provided for future extensibility to provide hints about the current result. The Intermediate-Result TLV is defined as follows:",
      "ja": "中間結果TLVはEAP内の複数の内部EAPメソッドの間に認め中間の成功と失敗メッセージのサポートを提供します。成功を示す中間結果のTLVは、暗号バインディングTLVを添付しなければなりません。このTLVに関連したオプションのTLVは、現在の結果についてのヒントを提供するために、将来的な拡張のために提供されています。次のように中間結果TLVが定義されています。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|M|R|         TLV Type          |            Length             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             Status            |        TLVs...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "M",
      "ja": "M"
    },
    {
      "indent": 6,
      "text": "Mandatory, set to one (1)",
      "ja": "必須の、いずれかに設定（1）"
    },
    {
      "indent": 3,
      "text": "R",
      "ja": "R"
    },
    {
      "indent": 6,
      "text": "Reserved, set to zero (0)",
      "ja": "ゼロに設定され、予約済み（0）"
    },
    {
      "indent": 3,
      "text": "TLV Type",
      "ja": "TLVタイプ"
    },
    {
      "indent": 6,
      "text": "10 - Intermediate-Result TLV",
      "ja": "10  - 中間結果TLV"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "2 + cumulative length of the embedded associated TLVs",
      "ja": "2 +埋め込み関連のTLVの累積長さ"
    },
    {
      "indent": 3,
      "text": "Status",
      "ja": "状態"
    },
    {
      "indent": 6,
      "text": "The Status field is two octets. Values include:",
      "ja": "Statusフィールドは2つのオクテットです。値は次のとおりです。"
    },
    {
      "indent": 6,
      "text": "1 Success",
      "ja": "1成功"
    },
    {
      "indent": 6,
      "text": "2 Failure",
      "ja": "2失敗"
    },
    {
      "indent": 3,
      "text": "TLVs",
      "ja": "TLV"
    },
    {
      "indent": 6,
      "text": "This field is of indeterminate length and contains zero or more of the TLVs associated with the Intermediate Result TLV. The TLVs in this field MUST NOT have the mandatory bit set.",
      "ja": "このフィールドは、不定長さのものであり、中間結果TLVに関連付けられているのTLVのゼロまたはそれ以上が含まれています。この分野でのTLVは、必須のビットセットを持ってはいけません。"
    },
    {
      "indent": 0,
      "text": "4.2.12. PAC TLV Format",
      "section_title": true,
      "ja": "4.2.12。 PAC TLVのフォーマット"
    },
    {
      "indent": 3,
      "text": "The PAC TLV provides support for provisioning the Protected Access Credential (PAC). The PAC TLV carries the PAC and related information within PAC attribute fields. Additionally, the PAC TLV MAY be used by the peer to request provisioning of a PAC of the type specified in the PAC-Type PAC attribute. The PAC TLV MUST only be used in a protected tunnel providing encryption and integrity protection. A general PAC TLV format is defined as follows:",
      "ja": "PAC TLVは、保護されたアクセス資格情報（PAC）をプロビジョニングするためのサポートを提供します。 PAC TLVは、PACとPACの属性フィールド内の関連情報を運びます。また、PAC TLVは、PAC-タイプPAC属性で指定されたタイプのPACのプロビジョニングを要求するピアによって使用されてもよいです。 PAC TLVは唯一の暗号化と整合性の保護を提供する保護されたトンネルで使用されなければなりません。次のように一般的なPAC TLV形式が定義されます。"
    },
    {
      "indent": 3,
      "text": "0                   1                   2                   3\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|M|R|         TLV Type          |            Length             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        PAC Attributes...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "M",
      "ja": "M"
    },
    {
      "indent": 6,
      "text": "0 or 1",
      "ja": "0または1"
    },
    {
      "indent": 3,
      "text": "R",
      "ja": "R"
    },
    {
      "indent": 6,
      "text": "Reserved, set to zero (0)",
      "ja": "ゼロに設定され、予約済み（0）"
    },
    {
      "indent": 3,
      "text": "TLV Type",
      "ja": "TLVタイプ"
    },
    {
      "indent": 6,
      "text": "11 - PAC TLV",
      "ja": "11  -  PAC TLV"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "Two octets containing the length of the PAC Attributes field in octets.",
      "ja": "PACの長さを含む2つのオクテットは、オクテットのフィールド属性。"
    },
    {
      "indent": 3,
      "text": "PAC Attributes",
      "ja": "PAC属性"
    },
    {
      "indent": 6,
      "text": "A list of PAC attributes in the TLV format.",
      "ja": "PACのリストは、TLV形式の属性。"
    },
    {
      "indent": 0,
      "text": "4.2.12.1. Formats for PAC Attributes",
      "section_title": true,
      "ja": "4.2.12.1。 PAC属性のフォーマット"
    },
    {
      "indent": 3,
      "text": "Each PAC attribute in a PAC TLV is formatted as a TLV defined as follows:",
      "ja": "PAC TLV内の各PAC属性は以下のように定義されるTLVとしてフォーマットされています。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|            Type               |            Length             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                              Value...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Type",
      "ja": "タイプ"
    },
    {
      "indent": 6,
      "text": "The Type field is two octets, denoting the attribute type. Allocated types include:",
      "ja": "Typeフィールドは、属性タイプを表す、2つのオクテットです。割り当てられたタイプは、次のとおりです。"
    },
    {
      "indent": 9,
      "text": "1 - PAC-Key",
      "ja": "1  -  PAC-キー"
    },
    {
      "indent": 9,
      "text": "2 - PAC-Opaque",
      "ja": "2  -  PAC-不透明"
    },
    {
      "indent": 9,
      "text": "3 - PAC-Lifetime",
      "ja": "3  -  PAC-生涯"
    },
    {
      "indent": 9,
      "text": "4 - A-ID",
      "ja": "4  - -ID"
    },
    {
      "indent": 9,
      "text": "5 - I-ID",
      "ja": "5  -  I-ID"
    },
    {
      "indent": 9,
      "text": "6 - Reserved",
      "ja": "6  - 予約"
    },
    {
      "indent": 9,
      "text": "7 - A-ID-Info",
      "ja": "7  -  A-ID-情報"
    },
    {
      "indent": 9,
      "text": "8 - PAC-Acknowledgement",
      "ja": "8  -  PAC-謝辞"
    },
    {
      "indent": 9,
      "text": "9 - PAC-Info",
      "ja": "9  -  PAC-情報"
    },
    {
      "indent": 9,
      "text": "10 - PAC-Type",
      "ja": "10  -  PAC-タイプ"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "Two octets containing the length of the Value field in octets.",
      "ja": "オクテットで値フィールドの長さを含む2つのオクテット。"
    },
    {
      "indent": 3,
      "text": "Value",
      "ja": "値"
    },
    {
      "indent": 6,
      "text": "The value of the PAC attribute.",
      "ja": "PAC属性の値。"
    },
    {
      "indent": 0,
      "text": "4.2.12.2. PAC-Key",
      "section_title": true,
      "ja": "4.2.12.2。 PAC-キー"
    },
    {
      "indent": 3,
      "text": "The PAC-Key is a secret key distributed in a PAC attribute of type PAC-Key. The PAC-Key attribute is included within the PAC TLV whenever the server wishes to issue or renew a PAC that is bound to a key such as a Tunnel PAC. The key is a randomly generated octet string that is 48 octets in length. The generator of this key is the issuer of the credential, which is identified by the Authority Identifier (A-ID).",
      "ja": "PAC-KeyがタイプPAC-キーのPAC属性に分布する秘密鍵です。サーバは、このようなトンネルPACなどのキーにバインドされているPACを発行したり更新したい時はいつでもPAC-Key属性は、PAC TLV内に含まれています。キーの長さは48個のオクテットでランダムに生成されたオクテット文字列です。このキーの発生は、認証局識別子（A-ID）によって識別されるクレデンシャルの発行者です。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|            Type               |            Length             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n~                              Key                              ~\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Type",
      "ja": "タイプ"
    },
    {
      "indent": 6,
      "text": "1 - PAC-Key",
      "ja": "1  -  PAC-キー"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "2-octet length indicating the length of the key.",
      "ja": "鍵の長さを示す2オクテット長。"
    },
    {
      "indent": 3,
      "text": "Key",
      "ja": "キー"
    },
    {
      "indent": 6,
      "text": "The value of the PAC-Key.",
      "ja": "PAC-キーの値。"
    },
    {
      "indent": 0,
      "text": "4.2.12.3. PAC-Opaque",
      "section_title": true,
      "ja": "4.2.12.3。 PAC-不透明"
    },
    {
      "indent": 3,
      "text": "The PAC-Opaque attribute is included within the PAC TLV whenever the server wishes to issue or renew a PAC.",
      "ja": "サーバがPACを発行したり更新したい時はいつでもPAC-不透明な属性は、PAC TLV内に含まれています。"
    },
    {
      "indent": 3,
      "text": "The PAC-Opaque is opaque to the peer, and thus the peer MUST NOT attempt to interpret it. A peer that has been issued a PAC-Opaque by a server stores that data and presents it back to the server according to its PAC-Type. The Tunnel PAC is used in the ClientHello SessionTicket extension field defined in [RFC5077]. If a peer has opaque data issued to it by multiple servers, then it stores the data issued by each server separately according to the A-ID. This requirement allows the peer to maintain and use each opaque datum as an independent PAC pairing, with a PAC-Key mapping to a PAC-Opaque identified by the A-ID. As there is a one-to-one correspondence between the PAC-Key and PAC-Opaque, the peer determines the PAC-Key and corresponding PAC-Opaque based on the A-ID provided in the TEAP/Start message and the A-ID provided in the PAC-Info when it was provisioned with a PAC-Opaque.",
      "ja": "PAC-不透明ピアに不透明であるため、ピアはそれを解釈することを試みてはいけません。そのPAC-タイプに応じてサーバーに戻す、それをデータサーバーに格納することによってPAC-不透明を発行し、提示されたピア。トンネルPACは、[RFC5077]で定義されたClientHello SessionTicket拡張フィールドで使用されています。ピアが複数のサーバによってそれに発行した不透明なデータを持っている場合、それはA-IDに応じて個別に各サーバによって発行されたデータを格納します。この要件は、ピアがA-IDによって識別されるPAC-不透明にPAC-キーマッピングを用いて、独立したPACのペアとして各々不透明な基準を維持し、使用することを可能にします。 PACキーとPAC-不透明との間に1対1の対応が存在するように、ピアはTEAPに設けられたA-IDに基づいて、PACキーと対応するPAC不透過性を決定/メッセージとA-IDを開始それはPAC-不透明でプロビジョニングされたPAC-Infoで提供。"
    },
    {
      "indent": 3,
      "text": "The PAC-Opaque attribute format is summarized as follows:",
      "ja": "次のようにPAC-不透明属性の形式は要約されます。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|            Type               |            Length             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                              Value ...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Type",
      "ja": "タイプ"
    },
    {
      "indent": 6,
      "text": "2 - PAC-Opaque",
      "ja": "2  -  PAC-不透明"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "The Length field is two octets, which contains the length of the Value field in octets.",
      "ja": "Lengthフィールドは、オクテットで値フィールドの長さが含まれている2つのオクテット、です。"
    },
    {
      "indent": 3,
      "text": "Value",
      "ja": "値"
    },
    {
      "indent": 6,
      "text": "The Value field contains the actual data for the PAC-Opaque. It is specific to the server implementation.",
      "ja": "Valueフィールドは、PAC-不透明の実際のデータが含まれています。これは、サーバーの実装に固有のものです。"
    },
    {
      "indent": 0,
      "text": "4.2.12.4. PAC-Info",
      "section_title": true,
      "ja": "4.2.12.4。 PAC-情報"
    },
    {
      "indent": 3,
      "text": "The PAC-Info is comprised of a set of PAC attributes as defined in Section 4.2.12.1. The PAC-Info attribute MUST contain the A-ID, A-ID-Info, and PAC-Type attributes. Other attributes MAY be included in the PAC-Info to provide more information to the peer. The PAC-Info attribute MUST NOT contain the PAC-Key, PAC-Acknowledgement, PAC-Info, or PAC-Opaque attributes. The PAC-Info attribute is included within the PAC TLV whenever the server wishes to issue or renew a PAC.",
      "ja": "PAC-情報は、PACのセットで構成されているセクション4.2.12.1に定義された属性。 PAC-情報属性は、A-ID、-ID-情報、およびPAC-タイプの属性を含まなければなりません。他の属性は、ピアへのより多くの情報を提供するために、PAC-情報に含まれるかもしれません。 PAC-情報属性は、PAC-キー、PAC-謝辞、PAC-情報、またはPAC-不透明な属性を含んではなりません。サーバがPACを発行したり更新したい時はいつでもPAC-情報属性は、PAC TLV内に含まれています。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|            Type               |            Length             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                           Attributes...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Type",
      "ja": "タイプ"
    },
    {
      "indent": 6,
      "text": "9 - PAC-Info",
      "ja": "9  -  PAC-情報"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "2-octet field containing the length of the Attributes field in octets.",
      "ja": "オクテット単位の属性フィールドの長さを含む2オクテットフィールド。"
    },
    {
      "indent": 3,
      "text": "Attributes",
      "ja": "属性"
    },
    {
      "indent": 6,
      "text": "The Attributes field contains a list of PAC attributes. Each mandatory and optional field type is defined as follows:",
      "ja": "属性フィールドは、PAC属性のリストが含まれています。次のようにそれぞれの必須およびオプションのフィールドタイプが定義されます。"
    },
    {
      "indent": 6,
      "text": "3 - PAC-Lifetime",
      "ja": "3  -  PAC-生涯"
    },
    {
      "indent": 9,
      "text": "This is a 4-octet quantity representing the expiration time of the credential expressed as the number of seconds, excluding leap seconds, after midnight UTC, January 1, 1970. This attribute MAY be provided to the peer as part of the PAC-Info.",
      "ja": "うるう秒を除いた秒数が、真夜中のUTCの後、1970年1月1日この属性は、PAC-情報の一部として、ピアに提供することができるように、これは表現資格の有効期限を表す4オクテットの量です。"
    },
    {
      "indent": 6,
      "text": "4 - A-ID",
      "ja": "4  - -ID"
    },
    {
      "indent": 9,
      "text": "The A-ID is the identity of the authority that issued the PAC. The A-ID is intended to be unique across all issuing servers to avoid namespace collisions. The A-ID is used by the peer to determine which PAC to employ. The A-ID is treated as an opaque octet string. This attribute MUST be included in the PAC-Info attribute. The A-ID MUST match the Authority-ID the server used to establish the tunnel. One method for generating the A-ID is to use a high-quality random number generator to generate a random number. An alternate method would be to take the hash of the public key or public key certificate belonging to a server represented by the A-ID.",
      "ja": "A-IDは、PACを発行した機関のアイデンティティです。 A-IDは、名前空間の衝突を避けるために、すべての発行するサーバー全体で一意であることを意図しています。 A-IDは、PACを使用するかを決定するためにピアによって使用されます。 A-IDは、不透明なオクテット文字列として扱われます。この属性は、PAC-info属性に含まれなければなりません。 A-IDは、認証局-IDトンネルを確立するために使用されるサーバが一致しなければなりません。 A-IDを生成するための一つの方法は、乱数を生成するために、高品質の乱数発生器を使用することです。別の方法は、公開鍵又はA-IDで示されるサーバに属する公開鍵証明書のハッシュを取ることであろう。"
    },
    {
      "indent": 6,
      "text": "5 - I-ID",
      "ja": "5  -  I-ID"
    },
    {
      "indent": 9,
      "text": "Initiator Identifier (I-ID) is the peer identity associated with the credential. This identity is derived from the inner authentication or from the client-side authentication during tunnel establishment if inner authentication is not used. The server employs the I-ID in the TEAP Phase 2 conversation to validate that the same peer identity used to execute TEAP Phase 1 is also used in at minimum one inner authentication in TEAP Phase 2. If the server is enforcing the I-ID validation on the inner authentication, then the I-ID MUST be included in the PAC-Info, to enable the peer to also enforce a unique PAC for each unique user. If the I-ID is missing from the PAC-Info, it is assumed that the Tunnel PAC can be used for multiple users and the peer will not enforce the unique-Tunnel-PAC-per-user policy.",
      "ja": "イニシエータ識別子（I-ID）は、信任状に関連付けられているピアのアイデンティティです。内部認証を使用しない場合、この識別は、トンネル確立中に内部認証またはクライアント側の認証に由来します。サーバは、サーバがI-IDの検証を実施している場合TEAPフェーズ1を実行するために使用されるのと同じピア・アイデンティティはTEAPフェーズ2における最小の一つの内側の認証でものに使用されていることを検証するためにTEAPフェーズ2会話にI-IDを使用します内部認証には、I-IDは、各固有のユーザに一意のPACを実施するピアを可能にするために、PAC-情報に含まれなければなりません。 I-IDは、PAC-情報から欠落している場合は、トンネルPACは、複数のユーザーとのピアのために使用することができるものとするユニークな-トンネルPAC-、ユーザーごとのポリシーを強制しません。"
    },
    {
      "indent": 6,
      "text": "7 - A-ID-Info",
      "ja": "7  -  A-ID-情報"
    },
    {
      "indent": 9,
      "text": "Authority Identifier Information is intended to provide a user-friendly name for the A-ID. It may contain the enterprise name and server name in a human-readable format. This TLV serves as an aid to the peer to better inform the end user about the A-ID. The name is encoded in UTF-8 [RFC3629] format. This attribute MUST be included in the PAC-Info.",
      "ja": "権限識別子情報は、A-IDのためのユーザーフレンドリーな名前を提供することを意図しています。それは、人間が読める形式で、企業名とサーバー名が含まれていてもよいです。このTLVは、より良好なA-IDについてエンドユーザに通知するピアへの補助として機能します。名前は、UTF-8 [RFC3629]の形式で符号化されます。この属性は、PAC-情報に含まれなければなりません。"
    },
    {
      "indent": 6,
      "text": "10 - PAC-Type",
      "ja": "10  -  PAC-タイプ"
    },
    {
      "indent": 9,
      "text": "The PAC-Type is intended to provide the type of PAC. This attribute SHOULD be included in the PAC-Info. If the PAC-Type is not present, then it defaults to a Tunnel PAC (Type 1).",
      "ja": "PAC-TypeはPACの種類を提供することを意図しています。この属性は、PAC-情報に含まれるべきです。 PAC-Typeが存在しない場合、トンネルPAC（タイプ1）にデフォルト設定。"
    },
    {
      "indent": 0,
      "text": "4.2.12.5. PAC-Acknowledgement TLV",
      "section_title": true,
      "ja": "4.2.12.5。 PAC-謝辞TLV"
    },
    {
      "indent": 3,
      "text": "The PAC-Acknowledgement is used to acknowledge the receipt of the Tunnel PAC by the peer. The peer includes the PAC-Acknowledgement TLV in a PAC TLV sent to the server to indicate the result of the processing and storing of a newly provisioned Tunnel PAC. This TLV is only used when Tunnel PAC is provisioned.",
      "ja": "PAC-肯定応答がピアによってトンネルPACの受信を確認するために使用されます。ピアは、新たにプロビジョニングされたトンネルPACの処理及び格納の結果を示すためにサーバに送信PAC TLVにおけるPAC-肯定応答TLVを含みます。トンネルPACがプロビジョニングされたとき、このTLVにのみ使用されます。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|            Type               |            Length             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|            Result             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Type",
      "ja": "タイプ"
    },
    {
      "indent": 6,
      "text": "8 - PAC-Acknowledgement",
      "ja": "8  -  PAC-謝辞"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "The length of this field is two octets containing a value of 2.",
      "ja": "このフィールドの長さは2の値を含む2つのオクテットです。"
    },
    {
      "indent": 3,
      "text": "Result",
      "ja": "結果"
    },
    {
      "indent": 6,
      "text": "The resulting value MUST be one of the following:",
      "ja": "得られた値は、次のいずれかである必要があります"
    },
    {
      "indent": 9,
      "text": "1 - Success",
      "ja": "1  - 成功"
    },
    {
      "indent": 9,
      "text": "2 - Failure",
      "ja": "2  - 失敗"
    },
    {
      "indent": 0,
      "text": "4.2.12.6. PAC-Type TLV",
      "section_title": true,
      "ja": "4.2.12.6。 PAC-タイプTLV"
    },
    {
      "indent": 3,
      "text": "The PAC-Type TLV is a TLV intended to specify the PAC-Type. It is included in a PAC TLV sent by the peer to request PAC provisioning from the server. Its format is described below:",
      "ja": "PAC-タイプTLVは​​、TLVは、PAC-タイプを指定するためのものです。これは、サーバからPACプロビジョニングを要求するためにピアによって送信されたPAC TLVに含まれています。その形式は以下の通りであります："
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|            Type               |            Length             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|         PAC-Type              |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Type",
      "ja": "タイプ"
    },
    {
      "indent": 6,
      "text": "10 - PAC-Type",
      "ja": "10  -  PAC-タイプ"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "2-octet field with a value of 2.",
      "ja": "2の値を有する2オクテットフィールド。"
    },
    {
      "indent": 3,
      "text": "PAC-Type",
      "ja": "PAC-タイプ"
    },
    {
      "indent": 6,
      "text": "This 2-octet field defines the type of PAC being requested or provisioned. The following values are defined:",
      "ja": "この2オクテットフィールドは、要求またはプロビジョニングされるPACのタイプを定義します。次の値が定義されています。"
    },
    {
      "indent": 15,
      "text": "1 - Tunnel PAC",
      "ja": "1  - トンネルPAC"
    },
    {
      "indent": 0,
      "text": "4.2.13. Crypto-Binding TLV",
      "section_title": true,
      "ja": "4.2.13。暗号バインディングTLV"
    },
    {
      "indent": 3,
      "text": "The Crypto-Binding TLV is used to prove that both the peer and server participated in the tunnel establishment and sequence of authentications. It also provides verification of the TEAP type, version negotiated, and Outer TLVs exchanged before the TLS tunnel establishment.",
      "ja": "暗号バインディングTLVピアとサーバの両方が認証のトンネル確立および配列に参加することを証明するために使用されます。またネゴシエートTEAPタイプ、バージョンの検証を提供し、及び外側のTLVは、TLSトンネルを確立する前に交換しました。"
    },
    {
      "indent": 3,
      "text": "The Crypto-Binding TLV MUST be exchanged and verified before the final Result TLV exchange, regardless of whether there is an inner EAP method authentication or not. It MUST be included with the Intermediate-Result TLV to perform cryptographic binding after each successful EAP method in a sequence of EAP methods, before proceeding with another inner EAP method. The Crypto-Binding TLV is valid only if the following checks pass:",
      "ja": "暗号バインディングTLVにかかわらず内部EAPメソッド認証があるか否かの最終的な結果TLV交換の前に交換して検証されなければなりません。他の内部EAPメソッドを続行する前に、EAPメソッドのシーケンスにおける各成功したEAPメソッドの後に暗号化結合を実行するために中間結果TLVに含まれなければなりません。暗号バインディングTLVは、以下のチェックが合格した場合にのみ有効です。"
    },
    {
      "indent": 3,
      "text": "o The Crypto-Binding TLV version is supported.",
      "ja": "O暗号バインディングTLVのバージョンがサポートされています。"
    },
    {
      "indent": 3,
      "text": "o The MAC verifies correctly.",
      "ja": "oをMACが正しく検証します。"
    },
    {
      "indent": 3,
      "text": "o The received version in the Crypto-Binding TLV matches the version sent by the receiver during the EAP version negotiation.",
      "ja": "O暗号バインディングTLVに受信されたバージョンは、EAPバージョンネゴシエーション中に受信機によって送信されたバージョンと一致します。"
    },
    {
      "indent": 3,
      "text": "o The subtype is set to the correct value.",
      "ja": "Oサブタイプは正しい値に設定されています。"
    },
    {
      "indent": 3,
      "text": "If any of the above checks fails, then the TLV is invalid. An invalid Crypto-Binding TLV is a fatal error and is handled as described in Section 3.6.3",
      "ja": "上記のチェックのいずれかが失敗した場合、TLVは無効です。無効な暗号バインディングTLVは致命的なエラーであり、セクション3.6.3で説明したように処理されます"
    },
    {
      "indent": 3,
      "text": "The Crypto-Binding TLV is defined as follows:",
      "ja": "次のように暗号バインディングTLVが定義されています。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|M|R|         TLV Type          |            Length             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|    Reserved   |    Version    |  Received Ver.| Flags|Sub-Type|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n~                             Nonce                             ~\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n~                   EMSK Compound MAC                           ~\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n~                    MSK Compound MAC                           ~\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "M",
      "ja": "M"
    },
    {
      "indent": 6,
      "text": "Mandatory, set to one (1)",
      "ja": "必須の、いずれかに設定（1）"
    },
    {
      "indent": 3,
      "text": "R",
      "ja": "R"
    },
    {
      "indent": 6,
      "text": "Reserved, set to zero (0)",
      "ja": "ゼロに設定され、予約済み（0）"
    },
    {
      "indent": 3,
      "text": "TLV Type",
      "ja": "TLVタイプ"
    },
    {
      "indent": 6,
      "text": "12 - Crypto-Binding TLV",
      "ja": "12  - 暗号バインディングTLV"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "76",
      "ja": "７６"
    },
    {
      "indent": 3,
      "text": "Reserved",
      "ja": "予約済み"
    },
    {
      "indent": 6,
      "text": "Reserved, set to zero (0)",
      "ja": "ゼロに設定され、予約済み（0）"
    },
    {
      "indent": 3,
      "text": "Version",
      "ja": "版"
    },
    {
      "indent": 6,
      "text": "The Version field is a single octet, which is set to the version of Crypto-Binding TLV the TEAP method is using. For an implementation compliant with this version of TEAP, the version number MUST be set to one (1).",
      "ja": "バージョンフィールドは、TEAP方法が使用されている暗号バインディングTLVのバージョンに設定されている単一のオクテットです。 TEAPのこのバージョンに準拠した実装では、バージョン番号は1（1）に設定しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Received Ver",
      "ja": "受け取っ版"
    },
    {
      "indent": 6,
      "text": "The Received Ver field is a single octet and MUST be set to the TEAP version number received during version negotiation. Note that this field only provides protection against downgrade attacks, where a version of EAP requiring support for this TLV is required on both sides.",
      "ja": "受信Ver分野は、単一のオクテットで、バージョン交渉中に受信TEAPのバージョン番号に設定しなければなりません。このフィールドは、このTLVのサポートを必要とEAPのバージョンが両側に必要とされるダウングレード攻撃に対する保護を提供することに注意してください。"
    },
    {
      "indent": 3,
      "text": "Flags",
      "ja": "国旗"
    },
    {
      "indent": 6,
      "text": "The Flags field is four bits. Defined values include",
      "ja": "Flagsフィールドは4ビットです。定義された値は、"
    },
    {
      "indent": 6,
      "text": "1 EMSK Compound MAC is present",
      "ja": "MACが存在している1つのEMSK化合物"
    },
    {
      "indent": 6,
      "text": "2 MSK Compound MAC is present",
      "ja": "2 MSK化合物MACが存在します"
    },
    {
      "indent": 6,
      "text": "3 Both EMSK and MSK Compound MAC are present",
      "ja": "3 EMSK及びMSK化合MACの両方が存在しています"
    },
    {
      "indent": 3,
      "text": "Sub-Type",
      "ja": "サブタイプ"
    },
    {
      "indent": 6,
      "text": "The Sub-Type field is four bits. Defined values include",
      "ja": "サブタイプのフィールドは4ビットです。定義された値は、"
    },
    {
      "indent": 6,
      "text": "0 Binding Request",
      "ja": "0バインディング要求"
    },
    {
      "indent": 6,
      "text": "1 Binding Response",
      "ja": "1つのバインディングレスポンス"
    },
    {
      "indent": 3,
      "text": "Nonce",
      "ja": "使節"
    },
    {
      "indent": 6,
      "text": "The Nonce field is 32 octets. It contains a 256-bit nonce that is temporally unique, used for Compound MAC key derivation at each end. The nonce in a request MUST have its least significant bit set to zero (0), and the nonce in a response MUST have the same value as the request nonce except the least significant bit MUST be set to one (1).",
      "ja": "ナンス・フィールドは32オクテットです。これは、各端に化合物MAC鍵導出するために使用され、時間的に一意である256ビットのnonceを、含まれています。要求におけるノンスは、その最下位ビット（0）がゼロに設定されなければなりません、そして最下位ビットが1に設定されなければならない以外は応答におけるノンスは、要求ナンスと同じ値を持たなければならない（1）。"
    },
    {
      "indent": 3,
      "text": "EMSK Compound MAC",
      "ja": "EMSK化合物MAC"
    },
    {
      "indent": 6,
      "text": "The EMSK Compound MAC field is 20 octets. This can be the Server MAC (B1_MAC) or the Client MAC (B2_MAC). The computation of the MAC is described in Section 5.3.",
      "ja": "EMSK化合物MACフィールドは20オクテットです。これは、サーバーのMAC（B1_MAC）またはクライアントMAC（B2_MAC）することができます。 MACの計算は、セクション5.3に記載されています。"
    },
    {
      "indent": 3,
      "text": "MSK Compound MAC",
      "ja": "MSK化合物MAC"
    },
    {
      "indent": 6,
      "text": "The MSK Compound MAC field is 20 octets. This can be the Server MAC (B1_MAC) or the Client MAC (B2_MAC). The computation of the MAC is described in Section 5.3.",
      "ja": "MSK化合物MACフィールドは20オクテットです。これは、サーバーのMAC（B1_MAC）またはクライアントMAC（B2_MAC）することができます。 MACの計算は、セクション5.3に記載されています。"
    },
    {
      "indent": 0,
      "text": "4.2.14. Basic-Password-Auth-Req TLV",
      "section_title": true,
      "ja": "4.2.14。基本パスワード認証-REQ TLV"
    },
    {
      "indent": 3,
      "text": "The Basic-Password-Auth-Req TLV is used by the authentication server to request a username and password from the peer. It contains an optional user prompt message for the request. The peer is expected to obtain the username and password and send them in a Basic-Password-Auth-Resp TLV.",
      "ja": "基本-パスワード認証-REQ TLVは、ピアからのユーザー名とパスワードを要求する認証サーバによって使用されています。これは、要求のためのオプションのユーザープロンプトメッセージが含まれています。ピアは、ユーザー名とパスワードを取得し、基本的な-パスワード認証-RespのTLVでそれらを送信することが期待されます。"
    },
    {
      "indent": 3,
      "text": "The Basic-Password-Auth-Req TLV is defined as follows:",
      "ja": "次のように基本的な-パスワード認証-REQ TLVが定義されています。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|M|R|         TLV Type          |            Length             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   Prompt ....\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "M",
      "ja": "M"
    },
    {
      "indent": 6,
      "text": "0 (Optional)",
      "ja": "0（オプション）"
    },
    {
      "indent": 3,
      "text": "R",
      "ja": "R"
    },
    {
      "indent": 6,
      "text": "Reserved, set to zero (0)",
      "ja": "ゼロに設定され、予約済み（0）"
    },
    {
      "indent": 3,
      "text": "TLV Type",
      "ja": "TLVタイプ"
    },
    {
      "indent": 6,
      "text": "13 - Basic-Password-Auth-Req TLV",
      "ja": "13  - 基本-パスワード認証-REQ TLV"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "variable",
      "ja": "変数"
    },
    {
      "indent": 3,
      "text": "Prompt",
      "ja": "促す"
    },
    {
      "indent": 6,
      "text": "optional user prompt message in UTF-8 [RFC3629] format",
      "ja": "UTF-8 [RFC3629]の形式でオプションのユーザープロンプトメッセージ"
    },
    {
      "indent": 0,
      "text": "4.2.15. Basic-Password-Auth-Resp TLV",
      "section_title": true,
      "ja": "4.2.15。基本パスワード認証-RespのTLV"
    },
    {
      "indent": 3,
      "text": "The Basic-Password-Auth-Resp TLV is used by the peer to respond to a Basic-Password-Auth-Req TLV with a username and password. The TLV contains a username and password. The username and password are in UTF-8 [RFC3629] format.",
      "ja": "基本-パスワード認証-RespのTLVは、ユーザー名とパスワードを使用して基本的な-パスワード認証-REQ TLVに対応するために、ピアによって使用されます。 TLVは、ユーザー名とパスワードが含まれています。ユーザー名とパスワードは、UTF-8 [RFC3629]の形式です。"
    },
    {
      "indent": 3,
      "text": "The Basic-Password-Auth-Resp TLV is defined as follows:",
      "ja": "次のように基本的な-パスワード認証-RespのTLVが定義されています。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|M|R|         TLV Type          |            Length             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   Userlen     |             Username\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      ...     Username    ...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   Passlen     |             Password\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      ...     Password    ...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "M",
      "ja": "M"
    },
    {
      "indent": 6,
      "text": "0 (Optional)",
      "ja": "0（オプション）"
    },
    {
      "indent": 3,
      "text": "R",
      "ja": "R"
    },
    {
      "indent": 6,
      "text": "Reserved, set to zero (0)",
      "ja": "ゼロに設定され、予約済み（0）"
    },
    {
      "indent": 3,
      "text": "TLV Type",
      "ja": "TLVタイプ"
    },
    {
      "indent": 6,
      "text": "14 - Basic-Password-Auth-Resp TLV",
      "ja": "14  - 基本 - パスワード認証-RespのTLV"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "variable",
      "ja": "変数"
    },
    {
      "indent": 3,
      "text": "Userlen",
      "ja": "Userlen"
    },
    {
      "indent": 6,
      "text": "Length of Username field in octets",
      "ja": "オクテットでユーザー名フィールドの長さ"
    },
    {
      "indent": 3,
      "text": "Username",
      "ja": "ユーザー名"
    },
    {
      "indent": 6,
      "text": "Username in UTF-8 [RFC3629] format",
      "ja": "UTF-8 [RFC3629]の形式でユーザー名"
    },
    {
      "indent": 3,
      "text": "Passlen",
      "ja": "Päßler"
    },
    {
      "indent": 6,
      "text": "Length of Password field in octets",
      "ja": "オクテットのパスワードフィールドの長さ"
    },
    {
      "indent": 3,
      "text": "Password",
      "ja": "パスワード"
    },
    {
      "indent": 6,
      "text": "Password in UTF-8 [RFC3629] format",
      "ja": "UTF-8 [RFC3629]形式のパスワード"
    },
    {
      "indent": 0,
      "text": "4.2.16. PKCS#7 TLV",
      "section_title": true,
      "ja": "4.2.16。 PKCS＃7 TLV"
    },
    {
      "indent": 3,
      "text": "The PKCS#7 TLV is used by the EAP server to deliver certificate(s) to the peer. The format consists of a certificate or certificate chain in binary DER encoding [X.690] in a degenerate Certificates Only PKCS#7 SignedData Content as defined in [RFC5652].",
      "ja": "PKCS＃7 TLVピアの証明書（複数可）を送達するためにEAPサーバによって使用されます。 [RFC5652]で定義されるようにフォーマットのみPKCS＃7のSignedDataコンテンツ縮重証明書の[X.690]のバイナリDER符号化で証明書または証明書チェーンで構成されています。"
    },
    {
      "indent": 3,
      "text": "When used in response to a Trusted-Server-Root TLV request from the peer, the EAP server MUST send the PKCS#7 TLV inside a Trusted-Server-Root TLV. When used in response to a PKCS#10 certificate enrollment request from the peer, the EAP server MUST send the PKCS#7 TLV without a Trusted-Server-Root TLV. The PKCS#7 TLV is always marked as optional, which cannot be responded to with a NAK TLV. TEAP implementations that support the Trusted-Server-Root TLV or the PKCS#10 TLV MUST support this TLV. Peers MUST NOT assume that the certificates in a PKCS#7 TLV are in any order.",
      "ja": "ピアからの信頼されたサーバールートTLV要求に応じて使用される場合、EAPサーバは、信頼されたサーバールートTLV内部PKCS＃7 TLVを送らなければなりません。ピアからのPKCS＃10証明書の登録要求に応じて使用される場合、EAPサーバは、信頼されたサーバールートTLVなしPKCS＃7 TLVを送らなければなりません。 PKCS＃7は、TLVは、常にNAK TLVで応答することができない、オプションとしてマークされています。信頼-サーバールートTLVまたはTLVはこのTLVをサポートしなければならないPKCS＃10をサポートしていTEAP実装。ピアは、PKCS＃7 TLV内の証明書は、任意の順序であると仮定してはいけません。"
    },
    {
      "indent": 3,
      "text": "TEAP servers MAY return self-signed certificates. Peers that handle self-signed certificates or trust anchors MUST NOT implicitly trust these certificates merely due to their presence in the certificate bag. Note: Peers are advised to take great care in deciding whether to use a received certificate as a trust anchor. The authenticated nature of the tunnel in which a PKCS#7 bag is received can provide a level of authenticity to the certificates contained therein. Peers are advised to take into account the implied authority of the EAP server and to constrain the trust it can achieve through the trust anchor received in a PKCS#7 TLV.",
      "ja": "TEAPのサーバーは、自己署名証明書を返してもよいです。自己署名証明書または信頼アンカーを扱うピアは暗黙のうちに過ぎないため、証明書の袋に彼らの存在にこれらの証明書を信頼してはなりません。注意：ピアは、トラストアンカーとして受け取った証明書を使用するかどうかを決定する際に細心の注意を払うことをお勧めします。 PKCS＃7バッグは、その中に含まれる証明書の真正性のレベルを提供することができる受信されたトンネルの認証性質。ピアを考慮にEAPサーバの暗黙の権限を取るようにし、トラストアンカーは、PKCS＃7 TLVで受信して、それは達成することができ、信頼を制約することをお勧めします。"
    },
    {
      "indent": 3,
      "text": "The PKCS#7 TLV is defined as follows:",
      "ja": "次のようにPKCS＃7 TLVが定義されています。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|M|R|         TLV Type          |            Length             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|           PKCS#7 Data...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-++-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-",
      "raw": true
    },
    {
      "indent": 3,
      "text": "M",
      "ja": "M"
    },
    {
      "indent": 6,
      "text": "0 - Optional TLV",
      "ja": "0  - オプションTLV"
    },
    {
      "indent": 3,
      "text": "R",
      "ja": "R"
    },
    {
      "indent": 6,
      "text": "Reserved, set to zero (0)",
      "ja": "ゼロに設定され、予約済み（0）"
    },
    {
      "indent": 3,
      "text": "TLV Type",
      "ja": "TLVタイプ"
    },
    {
      "indent": 6,
      "text": "15 - PKCS#7 TLV",
      "ja": "15  -  PKCS＃7 TLV"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "The length of the PKCS#7 Data field.",
      "ja": "PKCS＃7データフィールドの長さ。"
    },
    {
      "indent": 3,
      "text": "PKCS#7 Data",
      "ja": "PKCS＃7データ"
    },
    {
      "indent": 6,
      "text": "This field contains the DER-encoded X.509 certificate or certificate chain in a Certificates-Only PKCS#7 SignedData message.",
      "ja": "このフィールドは、証明書のみのPKCS＃7のSignedDataメッセージ内DERエンコードX.509証明書または証明書チェーンを含んでいます。"
    },
    {
      "indent": 0,
      "text": "4.2.17. PKCS#10 TLV",
      "section_title": true,
      "ja": "4.2.17。 PKCS＃10 TLV"
    },
    {
      "indent": 3,
      "text": "The PKCS#10 TLV is used by the peer to initiate the \"simple PKI\" Request/Response from [RFC5272]. The format of the request is as specified in Section 6.4 of [RFC4945]. The PKCS#10 TLV is always marked as optional, which cannot be responded to with a NAK TLV.",
      "ja": "PKCS＃10 TLVは[RFC5272]から「単純PKI」要求/応答を開始するためにピアによって使用されます。 [RFC4945]のセクション6.4で指定されるようにリクエストの形式です。 PKCS＃10は、TLVは、常にNAK TLVで応答することができない、オプションとしてマークされています。"
    },
    {
      "indent": 3,
      "text": "The PKCS#10 TLV is defined as follows:",
      "ja": "次のようにPKCS＃10 TLVが定義されています。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|M|R|         TLV Type          |            Length             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|           PKCS#10 Data...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-++-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-",
      "raw": true
    },
    {
      "indent": 3,
      "text": "M",
      "ja": "M"
    },
    {
      "indent": 6,
      "text": "0 - Optional TLV",
      "ja": "0  - オプションTLV"
    },
    {
      "indent": 3,
      "text": "R",
      "ja": "R"
    },
    {
      "indent": 6,
      "text": "Reserved, set to zero (0)",
      "ja": "ゼロに設定され、予約済み（0）"
    },
    {
      "indent": 3,
      "text": "TLV Type",
      "ja": "TLVタイプ"
    },
    {
      "indent": 6,
      "text": "16 - PKCS#10 TLV",
      "ja": "16  -  PKCS＃10 TLV"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "The length of the PKCS#10 Data field.",
      "ja": "PKCS＃10データフィールドの長さ。"
    },
    {
      "indent": 3,
      "text": "PKCS#10 Data",
      "ja": "PKCS＃10データ"
    },
    {
      "indent": 6,
      "text": "This field contains the DER-encoded PKCS#10 certificate request.",
      "ja": "このフィールドは、DERでエンコードされたPKCS＃10証明書要求が含まれています。"
    },
    {
      "indent": 0,
      "text": "4.2.18. Trusted-Server-Root TLV",
      "section_title": true,
      "ja": "4.2.18。信頼できるサーバールートTLV"
    },
    {
      "indent": 3,
      "text": "Trusted-Server-Root TLV facilitates the request and delivery of a trusted server root certificate. The Trusted-Server-Root TLV can be exchanged in regular TEAP authentication mode or provisioning mode. The Trusted-Server-Root TLV is always marked as optional and cannot be responded to with a Negative Acknowledgement (NAK) TLV. The Trusted-Server-Root TLV MUST only be sent as an Inner TLV (inside the protection of the tunnel).",
      "ja": "信頼できるサーバールートTLVは、信頼できるサーバのルート証明書の要求と配信を容易にします。信頼-サーバールートTLVは、通常のTEAP認証モードまたはプロビジョニングモードで交換することができます。信頼-サーバールートTLVは、常にオプションとしてマークされ、否定応答（NAK）TLVで応答することはできません。信頼されたサーバールートTLVのみ（トンネルの保護内部）内部TLVとして送信しなければなりません。"
    },
    {
      "indent": 3,
      "text": "After the peer has determined that it has successfully authenticated the EAP server and validated the Crypto-Binding TLV, it MAY send one or more Trusted-Server-Root TLVs (marked as optional) to request the trusted server root certificates from the EAP server. The EAP server MAY send one or more root certificates with a Public Key Cryptographic System #7 (PKCS#7) TLV inside the Trusted-Server-Root TLV. The EAP server MAY also choose not to honor the request.",
      "ja": "ピアは、それが成功したEAPサーバを認証され、暗号バインディングTLVを検証していることを決定した後、それはEAPサーバから信頼されたサーバーのルート証明書を要求する（オプションとしてマーク）は、1つまたは複数の信頼できるサーバールートTLVを送るかもしれません。 EAPサーバは、Trusted-サーバールートTLV内の公開鍵暗号システム＃7（PKCS＃7）TLVを持つ1つ以上のルート証明書を送信することができます。 EAPサーバは、要求を受け入れないかもしれません。"
    },
    {
      "indent": 3,
      "text": "The Trusted-Server-Root TLV allows the peer to send a request to the EAP server for a list of trusted roots. The server may respond with one or more root certificates in PKCS#7 [RFC2315] format.",
      "ja": "信頼-サーバールートTLVは、ピアが信頼されたルートのリストについては、EAPサーバに要求を送信することができます。サーバーは、PKCS＃7 [RFC2315]形式で1つ以上のルート証明書で応答することができます。"
    },
    {
      "indent": 3,
      "text": "If the EAP server sets the credential format to PKCS#7-Server-Certificate-Root, then the Trusted-Server-Root TLV should contain the root of the certificate chain of the certificate issued to the EAP server packaged in a PKCS#7 TLV. If the server certificate is a self-signed certificate, then the root is the self-signed certificate.",
      "ja": "EAPサーバは、PKCS＃7  - サーバー証明書のルートに資格情報のフォーマットを設定した場合は、信頼できるサーバールートTLVは、PKCS＃7 TLVにパッケージEAPサーバに発行された証明書の証明書チェーンのルートが含まれている必要があります。サーバー証明書が自己署名証明書の場合、ルートは、自己署名証明書です。"
    },
    {
      "indent": 3,
      "text": "If the Trusted-Server-Root TLV credential format contains a value unknown to the peer, then the EAP peer should ignore the TLV.",
      "ja": "信頼-サーバールートTLV資格情報のフォーマットは、ピアへの未知の値が含まれている場合、EAPピアはTLVを無視すべきです。"
    },
    {
      "indent": 3,
      "text": "The Trusted-Server-Root TLV is defined as follows:",
      "ja": "次のように信頼され、サーバールートTLVが定義されています。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|M|R|         TLV Type          |            Length             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|           Credential-Format   |     Cred TLVs...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-++-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-",
      "raw": true
    },
    {
      "indent": 3,
      "text": "M",
      "ja": "M"
    },
    {
      "indent": 6,
      "text": "0 - Optional TLV",
      "ja": "0  - オプションTLV"
    },
    {
      "indent": 3,
      "text": "R",
      "ja": "R"
    },
    {
      "indent": 6,
      "text": "Reserved, set to zero (0)",
      "ja": "ゼロに設定され、予約済み（0）"
    },
    {
      "indent": 3,
      "text": "TLV Type",
      "ja": "TLVタイプ"
    },
    {
      "indent": 6,
      "text": "17 - Trusted-Server-Root TLV",
      "ja": "17  - 信頼され、サーバールートTLV"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": ">=2 octets",
      "ja": "> = 2つのバイト"
    },
    {
      "indent": 3,
      "text": "Credential-Format",
      "ja": "資格・フォーマット"
    },
    {
      "indent": 6,
      "text": "The Credential-Format field is two octets. Values include:",
      "ja": "資格・フォーマット・フィールドは2つのオクテットです。値は次のとおりです。"
    },
    {
      "indent": 6,
      "text": "1 - PKCS#7-Server-Certificate-Root",
      "ja": "1  -  PKCS＃7  - サーバー証明書のルート"
    },
    {
      "indent": 3,
      "text": "Cred TLVs",
      "ja": "私のTLV"
    },
    {
      "indent": 6,
      "text": "This field is of indefinite length. It contains TLVs associated with the credential format. The peer may leave this field empty when using this TLV to request server trust roots.",
      "ja": "このフィールドは、不定長さです。これは、資格情報のフォーマットに関連したTLVを含んでいます。サーバーの信頼の根を要求するために、このTLVを使用している場合、ピアは、このフィールドを空白のままにします。"
    },
    {
      "indent": 0,
      "text": "4.3. TLV Rules",
      "section_title": true,
      "ja": "4.3。 TLVルール"
    },
    {
      "indent": 3,
      "text": "To save round trips, multiple TLVs can be sent in a single TEAP packet. However, multiple EAP Payload TLVs, multiple Basic Password Authentication TLVs, or an EAP Payload TLV with a Basic Password Authentication TLV within one single TEAP packet is not supported in this version and MUST NOT be sent. If the peer or EAP server receives multiple EAP Payload TLVs, then it MUST terminate the connection with the Result TLV. The order of TLVs in TEAP does not matter, except one should always process the Identity-Type TLV before processing the EAP TLV or Basic Password Authentication TLV as the Identity-Type TLV is a hint to the type of identity that is to be authenticated.",
      "ja": "ラウンドトリップを保存するには、複数のTLVは、単一のTEAPのパケットで送信することができます。しかし、複数のEAPペイロードのTLV、複数の基本パスワード認証のTLV、または1つのTEAPパケット内の基本的なパスワード認証TLVとEAPペイロードTLVは、このバージョンではサポートされていないと送ってはいけません。ピアまたはEAPサーバは、複数のEAPペイロードTLVを受信した場合、それは結果TLVとの接続を終えなければなりません。 1は、常にアイデンティティ型TLVとして認証されるアイデンティティのタイプへのヒントEAP TLVまたは基本パスワード認証TLVをされて処理する前に、アイデンティティ・タイプTLVを処理する必要がある以外TEAPでのTLVの順序は、重要ではありません。"
    },
    {
      "indent": 3,
      "text": "The following define the meaning of the table entries in the sections below:",
      "ja": "次は、以下のセクションでテーブルエントリの意味を定義します。"
    },
    {
      "indent": 3,
      "text": "0 This TLV MUST NOT be present in the message.",
      "ja": "0このTLVは、メッセージ中に存在してはなりません。"
    },
    {
      "indent": 3,
      "text": "0+ Zero or more instances of this TLV MAY be present in the message.",
      "ja": "0+このTLVのゼロ以上のインスタンスがメッセージ中に存在してもよいです。"
    },
    {
      "indent": 3,
      "text": "0-1 Zero or one instance of this TLV MAY be present in the message.",
      "ja": "このTLVの0-1ゼロまたは1つのインスタンスがメッセージ中に存在してもよいです。"
    },
    {
      "indent": 3,
      "text": "1 Exactly one instance of this TLV MUST be present in the message.",
      "ja": "図1は、まさにこのTLVの1つのインスタンスは、メッセージ中に存在しなければなりません。"
    },
    {
      "indent": 0,
      "text": "4.3.1. Outer TLVs",
      "section_title": true,
      "ja": "4.3.1。外側のTLV"
    },
    {
      "indent": 3,
      "text": "The following table provides a guide to which TLVs may be included in the TEAP packet outside the TLS channel, which kind of packets, and in what quantity:",
      "ja": "次の表は、のTLVパケットの種類TLSチャネル、外部TRAPパケットに含まれてもよいためのガイドを提供し、どのような量で。"
    },
    {
      "indent": 3,
      "text": "Request Response Success Failure TLVs 0-1 0 0 0 Authority-ID 0-1 0-1 0 0 Identity-Type 0+ 0+ 0 0 Vendor-Specific",
      "ja": "要求応答成功失敗0+ 0+ 0 0ベンダー固有のTLV 0-1 0 0 0庁-ID 0-1 0-1 0 0アイデンティティ型"
    },
    {
      "indent": 3,
      "text": "Outer TLVs MUST be marked as optional. Vendor-TLVs inside Vendor-Specific TLV MUST be marked as optional when included in Outer TLVs. Outer TLVs MUST NOT be included in messages after the first two TEAP messages sent by peer and EAP-server respectively. That is the first EAP-server-to-peer message and first peer-to-EAP-server message. If the message is fragmented, the whole set of messages is counted as one message. If Outer TLVs are included in messages after the first two TEAP messages, they MUST be ignored.",
      "ja": "外側のTLVは、オプションとしてマークされなければなりません。外側のTLVに含まれるベンダー固有のTLV内のベンダーのTLVは、オプションとしてマークされなければなりません。外側のTLVは、それぞれのピアとEAP-サーバーから送信された最初の2つのTEAPのメッセージの後にメッセージに含まれてはいけません。すなわち、第一EAPサーバ・ツー・ピア・メッセージと第ピア・ツー・EAPサーバメッセージです。メッセージが断片化されている場合、メッセージの全体のセットは、1つのメッセージとしてカウントされます。外側のTLVは、最初の2つのTEAPのメッセージの後にメッセージに含まれている場合は、それらを無視しなければなりません。"
    },
    {
      "indent": 0,
      "text": "4.3.2. Inner TLVs",
      "section_title": true,
      "ja": "4.3.2。インナーのTLV"
    },
    {
      "indent": 3,
      "text": "The following table provides a guide to which Inner TLVs may be encapsulated in TLS in TEAP Phase 2, in which kind of packets, and in what quantity. The messages are as follows: Request is a TEAP Request, Response is a TEAP Response, Success is a message containing a successful Result TLV, and Failure is a message containing a failed Result TLV.",
      "ja": "次の表は、内部のTLVパケットのどのようなもので、どのような量で、TEAPフェーズ2でTLSでカプセル化することができるためのガイドを提供します。次のようにメッセージがあります。要求は、TEAPリクエストで、レスポンスはTEAP応答で、成功は成功した結果TLVを含むメッセージであり、失敗は失敗した結果TLVを含むメッセージです。"
    },
    {
      "indent": 3,
      "text": "Request Response Success Failure TLVs 0-1 0-1 0 0 Identity-Type 0-1 0-1 1 1 Result 0+ 0+ 0 0 NAK 0+ 0+ 0+ 0+ Error 0-1 0-1 0 0 Channel-Binding 0+ 0+ 0+ 0+ Vendor-Specific 0+ 0+ 0+ 0+ Request-Action 0-1 0-1 0 0 EAP-Payload 0-1 0-1 0-1 0-1 Intermediate-Result 0+ 0+ 0+ 0 PAC TLV 0-1 0-1 0-1 0-1 Crypto-Binding 0-1 0 0 0 Basic-Password-Auth-Req 0 0-1 0 0 Basic-Password-Auth-Resp 0-1 0 0-1 0 PKCS#7 0 0-1 0 0 PKCS#10 0-1 0-1 0-1 0 Trusted-Server-Root",
      "ja": "要求応答成功失敗のTLV 0-1 0-1 0 0アイデンティティ・タイプ0-1 0-1 1 2件の検索結果0+ 0+ 0 0 NAK 0+ 0+ 0+ 0+エラー0-1 0-1 0 0チャネル - 結合0+ 0+ 0+ 0+ベンダー固有0+ 0+ 0+ 0+要求アクション0-1 0-1 0 0 EAP-ペイロード0-1 0-1 0-1 0-1中間結果0+ 0+ 0+ 0 PAC TLV 0-1 0-1 0-1 0-1暗号バインディング0-1 0 0 0基本-パスワード認証-REQ 0 0-1 0 0基本-パスワード認証-Respの0-1 0 0-1 0 PKCS＃7 0 0-1 0 PKCS＃10 0-1 0-1 0-1 0信頼できるサーバールート"
    },
    {
      "indent": 3,
      "text": "NOTE: Vendor TLVs (included in Vendor-Specific TLVs) sent with a Result TLV MUST be marked as optional.",
      "ja": "注：TLVはオプションとしてマークされなければならない結果と一緒に送信ベンダーのTLV（ベンダー固有のTLVに含まれます）。"
    },
    {
      "indent": 0,
      "text": "5. Cryptographic Calculations",
      "section_title": true,
      "ja": "5.暗号計算"
    },
    {
      "indent": 3,
      "text": "For key derivation and crypto-binding, TEAP uses the Pseudorandom Function (PRF) and MAC algorithms negotiated in the underlying TLS session. Since these algorithms depend on the TLS version and ciphersuite, TEAP implementations need a mechanism to determine the version and ciphersuite in use for a particular session. The implementation can then use this information to determine which PRF and MAC algorithm to use.",
      "ja": "鍵導出および暗号結合について、TEAPは、擬似ランダム関数（PRF）を使用し、MACアルゴリズムは、基礎となるTLSセッションで交渉します。これらのアルゴリズムは、TLSバージョンと暗号スイートに依存するため、TEAP実装は、特定のセッションのために使用されているバージョンと暗号スイートを決定するためのメカニズムを必要とします。インプリメンテーションは、次に、PRFおよびMACアルゴリズムを使用するかを決定するために、この情報を使用することができます。"
    },
    {
      "indent": 0,
      "text": "5.1. TEAP Authentication Phase 1: Key Derivations",
      "section_title": true,
      "ja": "5.1。 TEAP認証フェーズ1：キー派生の"
    },
    {
      "indent": 3,
      "text": "With TEAPv1, the TLS master secret is generated as specified in TLS. If a PAC is used, then the master secret is obtained as described in [RFC5077].",
      "ja": "TLSに指定されているようTEAPv1では、TLSマスターシークレットが生成されます。 PACが使用される場合、[RFC5077]に記載されているように、マスタシークレットが得られます。"
    },
    {
      "indent": 3,
      "text": "TEAPv1 makes use of the TLS Keying Material Exporters defined in [RFC5705] to derive the session_key_seed. The label used in the derivation is \"EXPORTER: teap session key seed\". The length of the session key seed material is 40 octets. No context data is used in the export process.",
      "ja": "TEAPv1はsession_key_seedを導き出すために、[RFC5705]で定義されたTLS鍵材料輸出業者を利用します。導出に使用されるラベルは「：TEAPセッション鍵の種輸出」です。セッション鍵シード材料の長さが40オクテットです。いいえコンテキストデータはエクスポートプロセスで使用されていません。"
    },
    {
      "indent": 3,
      "text": "The session_key_seed is used by the TEAP authentication Phase 2 conversation to both cryptographically bind the inner method(s) to the tunnel as well as generate the resulting TEAP session keys. The other TLS keying materials are derived and used as defined in [RFC5246].",
      "ja": "session_key_seedは暗号トンネルにインナー方法（複数可）に結合するだけでなく、得られたTEAPセッション鍵を生成両方にTEAP認証フェーズ2の会話で使用されています。 [RFC5246]で定義されるように他のTLSキーイング材料が導出され、使用されています。"
    },
    {
      "indent": 0,
      "text": "5.2. Intermediate Compound Key Derivations",
      "section_title": true,
      "ja": "5.2。中間体化合物のキー派生の"
    },
    {
      "indent": 3,
      "text": "The session_key_seed derived as part of TEAP Phase 2 is used in TEAP Phase 2 to generate an Intermediate Compound Key (IMCK) used to verify the integrity of the TLS tunnel after each successful inner authentication and in the generation of Master Session Key (MSK) and Extended Master Session Key (EMSK) defined in [RFC3748]. Note that the IMCK MUST be recalculated after each successful inner EAP method.",
      "ja": "TEAPフェーズ2の一部として導出session_key_seed中間体複合キー（IMCK）を生成するTEAPフェーズ2で使用されて成功した各内部認証後にマスターセッションキー（MSK）の生成にTLSトンネルの整合性を検証するために使用されると[RFC3748]で定義されたマスターセッションキー（EMSK）を拡張。 IMCKが成功するたびに内部EAPメソッドの後に再計算しなければならないことに注意してください。"
    },
    {
      "indent": 3,
      "text": "The first step in these calculations is the generation of the base compound key, IMCK[n] from the session_key_seed, and any session keys derived from the successful execution of nth inner EAP methods. The inner EAP method(s) may provide Inner Method Session Keys (IMSKs), IMSK1..IMSKn, corresponding to inner method 1 through n.",
      "ja": "これらの計算の最初のステップは、ベース複合キー、session_key_seedからIMCK [n]は、n番目の内部EAPメソッドが正常に実行に由来する任意のセッションキーの生成です。内部EAPメソッド（複数可）は、Nを介してインナー方法1に対応し、内部方式セッション鍵（IMSKs）、IMSK1..IMSKnを提供することができます。"
    },
    {
      "indent": 3,
      "text": "If an inner method supports export of an Extended Master Session Key (EMSK), then the IMSK SHOULD be derived from the EMSK as defined in [RFC5295]. The usage label used is \"TEAPbindkey@ietf.org\", and the length is 64 octets. Optional data parameter is not used in the derivation.",
      "ja": "内部メソッドが拡張マスタセッションキー（EMSK）のエクスポートをサポートしている場合、次にIMSKは[RFC5295]で定義されるようにEMSKから導出されるべきです。使用用法ラベルは「TEAPbindkey@ietf.org」であり、長さが64オクテットです。オプションのデータパラメータが導出に使用されていません。"
    },
    {
      "indent": 5,
      "text": "IMSK = First 32 octets of TLS-PRF(EMSK, \"TEAPbindkey@ietf.org\" | \"\\0\" | 64)",
      "ja": "IMSK TLS-PRFの=最初の32個のオクテット（EMSK、 \"TEAPbindkey@ietf.org\" | \"\\ 0\" | 64）"
    },
    {
      "indent": 5,
      "text": "where \"|\" denotes concatenation, EMSK is the EMSK from the inner method, \"TEAPbindkey@ietf.org\" consists the ASCII value for the label \"TEAPbindkey@ietf.org\" (without quotes), \"\\0\" = is a NULL octet (0x00 in hex), length is the 2-octet unsigned integer in network byte order, and TLS-PRF is the PRF negotiated as part of TLS handshake [RFC5246].",
      "ja": "ここで、「|」連結を表し、EMSKはインナー方法からEMSKであり、「TEAPbindkey@ietf.orgは」（引用符なし）ラベル「TEAPbindkey@ietf.org」に対するASCII値、「\\ 0」=がNULLオクテットである（0×00にからなりますヘクス）、長さは、ネットワークバイト順に2オクテットの符号なし整数であり、TLS-PRFは、PRFはTLSハンドシェイク[RFC5246]の一部として交渉されます。"
    },
    {
      "indent": 3,
      "text": "If an inner method does not support export of an Extended Master Session Key (EMSK), then IMSK is the MSK of the inner method. The MSK is truncated at 32 octets if it is longer than 32 octets or padded to a length of 32 octets with zeros if it is less than 32 octets.",
      "ja": "内側の方法は、拡張マスターセッションキー（EMSK）のエクスポートをサポートしていない場合は、IMSKは、内部メソッドのMSKです。未満で32オクテットである場合、それはより長い32オクテット又はゼロで32オクテットの長さにパディングされた場合にMSKは32個のオクテットに切り詰められます。"
    },
    {
      "indent": 3,
      "text": "However, it's possible that the peer and server sides might not have the same capability to export EMSK. In order to maintain maximum flexibility while prevent downgrading attack, the following mechanism is in place.",
      "ja": "しかし、それは相手側とサーバー側がEMSKをエクスポートすると同じ機能を持っていないかもしれない可能性があります。ダウングレード攻撃を防ぐながら、最大限の柔軟性を維持するために、以下のようなメカニズムが整備されています。"
    },
    {
      "indent": 3,
      "text": "On the sender of the Crypto-Binding TLV side:",
      "ja": "暗号バインディングTLV側の送信者には："
    },
    {
      "indent": 5,
      "text": "If the EMSK is not available, then the sender computes the Compound MAC using the MSK of the inner method.",
      "ja": "EMSKが使用できない場合は、送信者は、内部メソッドのMSKを使用して化合物MACを計算します。"
    },
    {
      "indent": 5,
      "text": "If the EMSK is available and the sender's policy accepts MSK-based MAC, then the sender computes two Compound MAC values. The first is computed with the EMSK. The second one is computed using the MSK. Both MACs are then sent to the other side.",
      "ja": "EMSKが利用可能であり、送信者の政策は、MSKベースのMACを受け入れた場合、送信者は、2つの複合MAC値を計算します。最初はEMSKで計算されます。二つ目は、MSKを使用して計算されます。両方のMACは、他の側に送信されます。"
    },
    {
      "indent": 5,
      "text": "If the EMSK is available but the sender's policy does not allow downgrading to MSK-generated MAC, then the sender SHOULD only send EMSK-based MAC.",
      "ja": "EMSKが利用可能ですが、送信者のポリシーはMSK-生成されたMACにダウングレードすることはできません場合は、送信者にのみEMSKベースのMACを送るべきです。"
    },
    {
      "indent": 3,
      "text": "On the receiver of the Crypto-Binding TLV side:",
      "ja": "暗号バインディングTLV側の受信機に："
    },
    {
      "indent": 5,
      "text": "If the EMSK is not available and an MSK-based Compound MAC was sent, then the receiver validates the Compound MAC and sends back an MSK-based Compound MAC response.",
      "ja": "EMSKが利用可能とMACが送信されたMSK系化合物でない場合、受信機は、化合物MACを検証し、MSK系化合MACの応答を返します。"
    },
    {
      "indent": 5,
      "text": "If the EMSK is not available and no MSK-based Compound MAC was sent, then the receiver handles like an invalid Crypto-Binding TLV with a fatal error.",
      "ja": "EMSKが利用できないと何のMSK系化合MACが送信されなかった場合、受信機は、致命的なエラーで無効な暗号バインディングTLVのように処理します。"
    },
    {
      "indent": 5,
      "text": "If the EMSK is available and an EMSK-based Compound MAC was sent, then the receiver validates it and creates a response Compound MAC using the EMSK.",
      "ja": "EMSKが利用可能であり、EMSK系化合物MACが送信された場合、受信機はそれを検証しEMSKを使用して応答する化合物MACを生成します。"
    },
    {
      "indent": 5,
      "text": "If the EMSK is available but no EMSK-based Compound MAC was sent and its policy accepts MSK-based MAC, then the receiver validates it using the MSK and, if successful, generates and returns an MSK-based Compound MAC.",
      "ja": "EMSKが利用可能ですが、何のEMSK系化合物MACが送信されなかったし、そのポリシーはMSKベースのMACを受け入れた場合、受信機は、成功した場合には、MSKを使用して検証を生成し、MSK系化合MACを返します。"
    },
    {
      "indent": 5,
      "text": "If the EMSK is available but no EMSK Compound MAC was sent and its policy does not accept MSK-based MAC, then the receiver handles like an invalid Crypto-Binding TLV with a fatal error.",
      "ja": "EMSKが利用可能ですが、何のEMSK化合物MACが送信されなかったし、そのポリシーはMSKベースのMACを受け入れていない場合は、受信機は、致命的なエラーで無効な暗号バインディングTLVのように処理します。"
    },
    {
      "indent": 3,
      "text": "If the ith inner method does not generate an EMSK or MSK, then IMSKi is set to zero (e.g., MSKi = 32 octets of 0x00s). If an inner method fails, then it is not included in this calculation. The derivation of S-IMCK is as follows:",
      "ja": "i番目のインナー方法はEMSKまたはMSKを生成しない場合、IMSKiはゼロ（例えば、MSKI 0x00sの= 32オクテット）に設定されています。内側のメソッドが失敗した場合、それはこの計算には含まれていません。次のようにS-IMCKの導出です。"
    },
    {
      "indent": 6,
      "text": "S-IMCK[0] = session_key_seed For j = 1 to n-1 do IMCK[j] = TLS-PRF(S-IMCK[j-1], \"Inner Methods Compound Keys\", IMSK[j], 60) S-IMCK[j] = first 40 octets of IMCK[j] CMK[j] = last 20 octets of IMCK[j]",
      "ja": "S-IMCK J = 1の場合[0] = session_key_seed N-1にIMCK [j]はTLS-PRF =ん（S-IMCK [J-1]を、 \"内部方式化合キー\"、IMSK [J]、60）S -IMCK [J] = IMCKのIMCK [J] CMK [J] =最後の20オクテット[J]の最初の40個のオクテット"
    },
    {
      "indent": 3,
      "text": "where TLS-PRF is the PRF negotiated as part of TLS handshake [RFC5246].",
      "ja": "TLS-PRFは、TLSハンドシェイク[RFC5246]の一部として、PRFをネゴシエートされます。"
    },
    {
      "indent": 0,
      "text": "5.3. Computing the Compound MAC",
      "section_title": true,
      "ja": "5.3。化合物MACを計算します"
    },
    {
      "indent": 3,
      "text": "For authentication methods that generate keying material, further protection against man-in-the-middle attacks is provided through cryptographically binding keying material established by both TEAP Phase 1 and TEAP Phase 2 conversations. After each successful inner EAP authentication, EAP EMSK and/or MSKs are cryptographically combined with key material from TEAP Phase 1 to generate a Compound Session Key (CMK). The CMK is used to calculate the Compound MAC as part of the Crypto-Binding TLV described in Section 4.2.13, which helps provide assurance that the same entities are involved in all communications in TEAP. During the calculation of the Compound MAC, the MAC field is filled with zeros.",
      "ja": "鍵材料生成する認証方法については、man-in-the-middle攻撃に対するさらなる保護がTEAPフェーズ1およびTEAP位相の両方2会話によって確立された暗号結合鍵材料を介して提供されます。各成功した内部EAP認証後、EAP EMSK及び/又はたMSKを暗号化合セッション鍵（CMK）を生成するTEAPフェーズ1から鍵材料と組み合わされます。 CMKは、暗号バインディングTLVの一部として化合物MACを計算するために使用されるのと同じエンティティはTEAPにおけるすべての通信に関与しているという保証を提供するのに役立つセクション4.2.13に記載。化合物MACの計算の際、MACフィールドはゼロで満たされます。"
    },
    {
      "indent": 3,
      "text": "The Compound MAC computation is as follows:",
      "ja": "次のように化合物MACの計算は次のとおりです。"
    },
    {
      "indent": 6,
      "text": "CMK = CMK[j] Compound-MAC = MAC( CMK, BUFFER )",
      "ja": "CMK = CMK [J]の化合物、MAC = MAC（CMK、緩衝液）"
    },
    {
      "indent": 3,
      "text": "where j is the number of the last successfully executed inner EAP method, MAC is the MAC function negotiated in TLS 1.2 [RFC5246], and BUFFER is created after concatenating these fields in the following order:",
      "ja": "jが最後に正常に実行内部EAPメソッドの数であり、MACは、TLS 1.2 [RFC5246]で交渉MAC関数であり、緩衝液は次の順序でこれらのフィールドを連結した後に作成されます。"
    },
    {
      "indent": 3,
      "text": "1 The entire Crypto-Binding TLV attribute with both the EMSK and MSK Compound MAC fields zeroed out.",
      "ja": "1 EMSKとMSK化合物MACフィールドの両方で全体の暗号バインディングTLV属性がゼロに。"
    },
    {
      "indent": 3,
      "text": "2 The EAP Type sent by the other party in the first TEAP message.",
      "ja": "最初のTEAPのメッセージに他の当事者によって送られた2 EAPタイプ。"
    },
    {
      "indent": 3,
      "text": "3 All the Outer TLVs from the first TEAP message sent by EAP server to peer. If a single TEAP message is fragmented into multiple TEAP packets, then the Outer TLVs in all the fragments of that message MUST be included.",
      "ja": "3すべてのEAPサーバから送信された最初のTEAPメッセージから外側のTLVピアします。単一TEAPメッセージが複数TEAPパケットに断片化されている場合は、そのメッセージのすべてのフラグメントでは、外側のTLVを含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "4 All the Outer TLVs from the first TEAP message sent by the peer to the EAP server. If a single TEAP message is fragmented into multiple TEAP packets, then the Outer TLVs in all the fragments of that message MUST be included.",
      "ja": "4 EAPサーバにピアによって送信された最初のTEAPメッセージからすべての外部のTLV。単一TEAPメッセージが複数TEAPパケットに断片化されている場合は、そのメッセージのすべてのフラグメントでは、外側のTLVを含まなければなりません。"
    },
    {
      "indent": 0,
      "text": "5.4. EAP Master Session Key Generation",
      "section_title": true,
      "ja": "5.4。 EAPマスターセッションキー生成"
    },
    {
      "indent": 3,
      "text": "TEAP authentication assures the Master Session Key (MSK) and Extended Master Session Key (EMSK) output from the EAP method are the result of all authentication conversations by generating an Intermediate Compound Key (IMCK). The IMCK is mutually derived by the peer and the server as described in Section 5.2 by combining the MSKs from",
      "ja": "TEAP認証は、EAPメソッドからマスターセッションキー（MSK）および拡張マスターセッションキー（EMSK）出力を保証中間体化合物のキー（IMCK）を生成することにより、すべての認証の会話の結果です。セクション5.2で説明したようにIMCKは、相互からたMSKを組み合わせることによって、ピア及びサーバによって誘導されます"
    },
    {
      "indent": 3,
      "text": "inner EAP methods with key material from TEAP Phase 1. The resulting MSK and EMSK are generated as part of the IMCKn key hierarchy as follows:",
      "ja": "次のようにTEAPフェーズ1、得られたMSK及びEMSKから鍵材料と内部EAPメソッドがIMCKnキー階層の一部として生成されます。"
    },
    {
      "indent": 6,
      "text": "MSK = TLS-PRF(S-IMCK[j], \"Session Key Generating Function\", 64) EMSK = TLS-PRF(S-IMCK[j], \"Extended Session Key Generating Function\", 64)",
      "ja": "MSK = TLS-PRF（S-IMCK [j]は、 \"セッション鍵生成機能\"、64）EMSK = TLS-PRF（S-IMCK [j]は、 \"拡張セッション鍵生成機能\"、64）"
    },
    {
      "indent": 3,
      "text": "where j is the number of the last successfully executed inner EAP method.",
      "ja": "jが最後に正常に実行された内部EAPメソッドの数です。"
    },
    {
      "indent": 3,
      "text": "The EMSK is typically only known to the TEAP peer and server and is not provided to a third party. The derivation of additional keys and transportation of these keys to a third party are outside the scope of this document.",
      "ja": "EMSKは、典型的にのみTEAPピア及びサーバに知られており、第三者に提供されません。第三者への追加キーとこれらのキーの交通機関の由来は、この文書の範囲外です。"
    },
    {
      "indent": 3,
      "text": "If no EAP methods have been negotiated inside the tunnel or no EAP methods have been successfully completed inside the tunnel, the MSK and EMSK will be generated directly from the session_key_seed meaning S-IMCK = session_key_seed.",
      "ja": "何EAPメソッドがトンネル内ネゴシエートされていないまたは全くEAPメソッドが正常にトンネル内に完了されていない場合は、MSK及びEMSKはS-IMCK = session_key_seedを意味session_key_seedから直接生成されます。"
    },
    {
      "indent": 0,
      "text": "6. IANA Considerations",
      "section_title": true,
      "ja": "6. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "This section provides guidance to the Internet Assigned Numbers Authority (IANA) regarding registration of values related to the TEAP protocol, in accordance with BCP 26 [RFC5226].",
      "ja": "このセクションでは、BCP 26 [RFC5226]に従って、TEAPプロトコルに関連する値の登録に関してインターネット割り当て番号機関（IANA）へのガイダンスを提供します。"
    },
    {
      "indent": 3,
      "text": "The EAP Method Type number 55 has been assigned for TEAP.",
      "ja": "EAPメソッドタイプ番号55は、TEAPのために割り当てられています。"
    },
    {
      "indent": 3,
      "text": "The document defines a registry for TEAP TLV types, which may be assigned by Specification Required as defined in [RFC5226]. Section 4.2 defines the TLV types that initially populate the registry. A summary of the TEAP TLV types is given below:",
      "ja": "ドキュメントは[RFC5226]で定義されるように仕様が必要によって割り当てられてもよいTEAP TLVタイプ、レジストリを定義します。 4.2節では、最初はレジストリを移入TLVタイプを定義します。 TEAP TLVタイプの概要は以下の通りであります："
    },
    {
      "indent": 3,
      "text": "0 Unassigned",
      "ja": "未割り当て0"
    },
    {
      "indent": 3,
      "text": "1 Authority-ID TLV",
      "ja": "1機関-ID TLV"
    },
    {
      "indent": 3,
      "text": "2 Identity-Type TLV",
      "ja": "2アイデンティティ型TLV"
    },
    {
      "indent": 3,
      "text": "3 Result TLV",
      "ja": "3結果TLV"
    },
    {
      "indent": 3,
      "text": "4 NAK TLV",
      "ja": "4 NAK TLV"
    },
    {
      "indent": 3,
      "text": "5 Error TLV",
      "ja": "5エラーTLV"
    },
    {
      "indent": 3,
      "text": "6 Channel-Binding TLV",
      "ja": "6チャンネル結合性TLV"
    },
    {
      "indent": 3,
      "text": "7 Vendor-Specific TLV",
      "ja": "7ベンダー固有のTLV"
    },
    {
      "indent": 3,
      "text": "8 Request-Action TLV",
      "ja": "8要求アクションTLV"
    },
    {
      "indent": 3,
      "text": "9 EAP-Payload TLV",
      "ja": "9 EAP-ペイロードTLV"
    },
    {
      "indent": 3,
      "text": "10 Intermediate-Result TLV",
      "ja": "10中間結果TLV"
    },
    {
      "indent": 3,
      "text": "11 PAC TLV",
      "ja": "11 PAC TLV"
    },
    {
      "indent": 3,
      "text": "12 Crypto-Binding TLV",
      "ja": "12暗号バインディングTLV"
    },
    {
      "indent": 3,
      "text": "13 Basic-Password-Auth-Req TLV",
      "ja": "13基本-パスワード認証-REQ TLV"
    },
    {
      "indent": 3,
      "text": "14 Basic-Password-Auth-Resp TLV",
      "ja": "14基本-パスワード認証-RespのTLV"
    },
    {
      "indent": 3,
      "text": "15 PKCS#7 TLV",
      "ja": "15のPKCS＃7 TLV"
    },
    {
      "indent": 3,
      "text": "16 PKCS#10 TLV",
      "ja": "16のPKCS＃10 TLV"
    },
    {
      "indent": 3,
      "text": "17 Trusted-Server-Root TLV",
      "ja": "17信頼-サーバールートTLV"
    },
    {
      "indent": 3,
      "text": "The Identity-Type defined in Section 4.2.3 contains an identity type code that is assigned on a Specification Required basis as defined in [RFC5226]. The initial types defined are:",
      "ja": "セクション4.2.3で定義されたアイデンティティ-Typeが[RFC5226]で定義されている仕様は必須基づいて割り当てられたIDの種類のコードが含まれています。定義された初期のタイプは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "1 User",
      "ja": "1人のユーザー"
    },
    {
      "indent": 3,
      "text": "2 Machine",
      "ja": "2機"
    },
    {
      "indent": 3,
      "text": "The Result TLV defined in Section 4.2.4, Request-Action TLV defined in Section 4.2.9, and Intermediate-Result TLV defined in Section 4.2.11 contain a Status code that is assigned on a Specification Required basis as defined in [RFC5226]. The initial types defined are:",
      "ja": "結果4.2.4項で定義されたTLV、セクション4.2.9で定義されたリクエスト・アクションTLV、およびセクション4.2.11で定義された中間結果のTLVは、[RFC5226]で定義されている仕様は必須基づいて割り当てられたステータスコードが含まれています。定義された初期のタイプは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "1 Success",
      "ja": "1成功"
    },
    {
      "indent": 3,
      "text": "2 Failure",
      "ja": "2失敗"
    },
    {
      "indent": 3,
      "text": "The Error-TLV defined in Section 4.2.6 requires an error code. TEAP Error-TLV error codes are assigned based on a Specification Required basis as defined in [RFC5226]. The initial list of error codes is as follows:",
      "ja": "4.2.6項で定義されたエラー-TLVは、エラーコードが必要です。 TEAPエラー-TLVエラーコードは[RFC5226]で定義されるように仕様が必要基準に基づいて割り当てられます。以下のようなエラーコードの最初のリストは、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "1 User account expires soon",
      "ja": "1つのユーザーアカウントがまもなく期限切れになります"
    },
    {
      "indent": 3,
      "text": "2 User account credential expires soon",
      "ja": "2ユーザーアカウントの資格情報はすぐに期限切れになります"
    },
    {
      "indent": 3,
      "text": "3 User account authorizations change soon",
      "ja": "3ユーザーアカウントの権限はすぐに変更します"
    },
    {
      "indent": 3,
      "text": "4 Clock skew detected",
      "ja": "検出された4クロック・スキュー"
    },
    {
      "indent": 3,
      "text": "5 Contact administrator",
      "ja": "5連絡先の管理者"
    },
    {
      "indent": 3,
      "text": "6 User account credentials change required",
      "ja": "6つのユーザー・アカウントの資格情報が必要な変更します"
    },
    {
      "indent": 3,
      "text": "1001 Inner Method Error",
      "ja": "1001インナーメソッドのエラー"
    },
    {
      "indent": 3,
      "text": "1002 Unspecified authentication infrastructure problem",
      "ja": "1002指定されていない認証インフラストラクチャの問題"
    },
    {
      "indent": 3,
      "text": "1003 Unspecified authentication failure",
      "ja": "1003指定されていない認証失敗"
    },
    {
      "indent": 3,
      "text": "1004 Unspecified authorization failure",
      "ja": "1004指定されていない認証の失敗"
    },
    {
      "indent": 3,
      "text": "1005 User account credentials unavailable",
      "ja": "1005のユーザーアカウントの資格情報を使用できません"
    },
    {
      "indent": 3,
      "text": "1006 User account expired",
      "ja": "1006ユーザーアカウントの有効期限が切れ"
    },
    {
      "indent": 3,
      "text": "1007 User account locked: try again later",
      "ja": "1007ユーザーアカウントロック：後で再試行してください"
    },
    {
      "indent": 3,
      "text": "1008 User account locked: admin intervention required",
      "ja": "1008ユーザーアカウントロック：管理者の介入が必要"
    },
    {
      "indent": 3,
      "text": "1009 Authentication infrastructure unavailable",
      "ja": "1009認証インフラストラクチャ利用できません"
    },
    {
      "indent": 3,
      "text": "1010 Authentication infrastructure not trusted",
      "ja": "1010認証インフラストラクチャが信頼されていません"
    },
    {
      "indent": 3,
      "text": "1011 Clock skew too great",
      "ja": "1011クロック・スキューが大きすぎます"
    },
    {
      "indent": 3,
      "text": "1012 Invalid inner realm",
      "ja": "1012無効なインナー分野"
    },
    {
      "indent": 3,
      "text": "1013 Token out of sync: administrator intervention required",
      "ja": "同期のうち1013トークン：管理者の介入が必要"
    },
    {
      "indent": 3,
      "text": "1014 Token out of sync: PIN change required",
      "ja": "1014年同期のうちトークン：PINの変更が必要"
    },
    {
      "indent": 3,
      "text": "1015 Token revoked",
      "ja": "1015トークンが取り消さ"
    },
    {
      "indent": 3,
      "text": "1016 Tokens exhausted",
      "ja": "1016個のトークン尽くさ"
    },
    {
      "indent": 3,
      "text": "1017 Challenge expired",
      "ja": "1017チャレンジが期限切れ"
    },
    {
      "indent": 3,
      "text": "1018 Challenge algorithm mismatch",
      "ja": "1018チャレンジアルゴリズムのミスマッチ"
    },
    {
      "indent": 3,
      "text": "1019 Client certificate not supplied",
      "ja": "1019クライアント証明書が付属していません"
    },
    {
      "indent": 3,
      "text": "1020 Client certificate rejected",
      "ja": "1020クライアント証明書が拒否"
    },
    {
      "indent": 3,
      "text": "1021 Realm mismatch between inner and outer identity",
      "ja": "内側と外側のアイデンティティとの間に1021レルムの不一致"
    },
    {
      "indent": 3,
      "text": "1022 Unsupported Algorithm In Certificate Signing Request",
      "ja": "1022サポートされていないアルゴリズムで証明書署名要求"
    },
    {
      "indent": 3,
      "text": "1023 Unsupported Extension In Certificate Signing Request",
      "ja": "1023サポートされていない拡張子で証明書署名要求"
    },
    {
      "indent": 3,
      "text": "1024 Bad Identity In Certificate Signing Request",
      "ja": "証明書署名要求で1024バート・アイデンティティ"
    },
    {
      "indent": 3,
      "text": "1025 Bad Certificate Signing Request",
      "ja": "1025不正な証明書署名要求"
    },
    {
      "indent": 3,
      "text": "1026 Internal CA Error",
      "ja": "1026内部CAエラー"
    },
    {
      "indent": 3,
      "text": "1027 General PKI Error",
      "ja": "1027一般的なPKIエラー"
    },
    {
      "indent": 3,
      "text": "1028 Inner method's channel-binding data required but not supplied",
      "ja": "1028インナー方式のチャネル結合データが必要ですが付属していません"
    },
    {
      "indent": 3,
      "text": "1029 Inner method's channel-binding data did not include required information",
      "ja": "1029インナー方式のチャネル結合データは、必要な情報が含まれていませんでした"
    },
    {
      "indent": 3,
      "text": "1030 Inner method's channel binding failed",
      "ja": "1030インナー方式のチャネルが失敗した結合"
    },
    {
      "indent": 3,
      "text": "1031 User account credentials incorrect [USAGE NOT RECOMMENDED]",
      "ja": "1031ユーザーアカウントの資格情報を誤って[USAGE推奨NOT]"
    },
    {
      "indent": 3,
      "text": "2001 Tunnel Compromise Error",
      "ja": "2001トンネル妥協エラー"
    },
    {
      "indent": 3,
      "text": "2002 Unexpected TLVs Exchanged",
      "ja": "2002予期しないのTLVを交換"
    },
    {
      "indent": 3,
      "text": "The Request-Action TLV defined in Section 4.2.9 contains an action code that is assigned on a Specification Required basis as defined in [RFC5226]. The initial actions defined are:",
      "ja": "セクション4.2.9で定義されたリクエスト・アクションTLVは[RFC5226]で定義されている仕様は必須基づいて割り当てられたアクションコードが含まれています。定義された最初のアクションは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "1 Process-TLV",
      "ja": "1プロセス-TLV"
    },
    {
      "indent": 3,
      "text": "2 Negotiate-EAP",
      "ja": "2ネゴシエート-EAP"
    },
    {
      "indent": 3,
      "text": "The PAC Attribute defined in Section 4.2.12.1 contains a Type code that is assigned on a Specification Required basis as defined in [RFC5226]. The initial types defined are:",
      "ja": "セクション4.2.12.1で定義されたPAC属性は、[RFC5226]で定義されている仕様は必須基づいて割り当てられているタイプのコードが含まれています。定義された初期のタイプは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "1 PAC-Key",
      "ja": "1 PAC-キー"
    },
    {
      "indent": 3,
      "text": "2 PAC-Opaque",
      "ja": "2 PAC-不透明"
    },
    {
      "indent": 3,
      "text": "3 PAC-Lifetime",
      "ja": "3 PAC-寿命"
    },
    {
      "indent": 3,
      "text": "4 A-ID",
      "ja": "4 A-ID"
    },
    {
      "indent": 3,
      "text": "5 I-ID",
      "ja": "5 I-ID"
    },
    {
      "indent": 3,
      "text": "6 Reserved",
      "ja": "6予約"
    },
    {
      "indent": 3,
      "text": "7 A-ID-Info",
      "ja": "7 A-ID-情報"
    },
    {
      "indent": 3,
      "text": "8 PAC-Acknowledgement",
      "ja": "8 PAC-謝辞"
    },
    {
      "indent": 3,
      "text": "9 PAC-Info",
      "ja": "9 PAC-情報"
    },
    {
      "indent": 3,
      "text": "10 PAC-Type",
      "ja": "10 PAC-タイプ"
    },
    {
      "indent": 3,
      "text": "The PAC-Type defined in Section 4.2.12.6 contains a type code that is assigned on a Specification Required basis as defined in [RFC5226]. The initial type defined is:",
      "ja": "セクション4.2.12.6に定義されているPAC-タイプ[RFC5226]で定義されるように仕様が必要に基づいて割り当てられたタイプコードを含みます。定義された初期のタイプは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "1 Tunnel PAC",
      "ja": "1トンネルPAC"
    },
    {
      "indent": 3,
      "text": "The Trusted-Server-Root TLV defined in Section 4.2.18 contains a Credential-Format code that is assigned on a Specification Required basis as defined in [RFC5226]. The initial type defined is:",
      "ja": "セクション4.2.18で定義された信頼-サーバールートTLVは[RFC5226]で定義されている仕様は必須基づいて割り当てられている資格・フォーマットのコードが含まれています。定義された初期のタイプは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "1 PKCS#7-Server-Certificate-Root",
      "ja": "1つのPKCS＃7  - サーバー証明書のルート"
    },
    {
      "indent": 3,
      "text": "The various values under the Vendor-Specific TLV are assigned by Private Use and do not need to be assigned by IANA.",
      "ja": "ベンダー固有のTLVの下で様々な値がプライベート利用によって割り当てられ、IANAによって割り当てられている必要はありません。"
    },
    {
      "indent": 3,
      "text": "TEAP registers the label \"EXPORTER: teap session key seed\" in the TLS Exporter Label Registry [RFC5705]. This label is used in derivation as defined in Section 5.1.",
      "ja": "TLS輸出ラベルレジストリに[RFC5705]：TEAPは、ラベル「TEAPセッションキーシード輸出」を登録します。セクション5.1で定義されるように、このラベルは、導出に使用されています。"
    },
    {
      "indent": 3,
      "text": "TEAP registers a TEAP binding usage label from the \"User Specific Root Keys (USRK) Key Labels\" name space defined in [RFC5295] with a value \"TEAPbindkey@ietf.org\".",
      "ja": "TEAPは、「ユーザー固有のルートキー（USRK）キーラベル」から値[RFC5295]で定義された名前空間を「TEAPbindkey@ietf.org」TEAP結合の使用ラベルを登録します。"
    },
    {
      "indent": 0,
      "text": "7. Security Considerations",
      "section_title": true,
      "ja": "7.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "TEAP is designed with a focus on wireless media, where the medium itself is inherent to eavesdropping. Whereas in wired media an attacker would have to gain physical access to the wired medium, wireless media enables anyone to capture information as it is transmitted over the air, enabling passive attacks. Thus, physical security can not be assumed, and security vulnerabilities are far greater. The threat model used for the security evaluation of TEAP is defined in EAP [RFC3748].",
      "ja": "TEAPは、媒体自体が盗聴に固有の無線媒体、を中心に設計されています。有線媒体において、攻撃者は、有線媒体への物理的アクセスを獲得しなければならないのに対し、無線メディアは、それが受動的な攻撃を可能にする、空気を介して送信されるように、誰もが情報をキャプチャすることが可能となります。このように、物理的なセキュリティを想定することができず、セキュリティの脆弱性ははるかに大きいです。 TEAPのセキュリティ評価のために使用される脅威モデルは、EAP [RFC3748]で定義されています。"
    },
    {
      "indent": 0,
      "text": "7.1. Mutual Authentication and Integrity Protection",
      "section_title": true,
      "ja": "7.1。相互認証と完全性保護"
    },
    {
      "indent": 3,
      "text": "As a whole, TEAP provides message and integrity protection by establishing a secure tunnel for protecting the authentication method(s). The confidentiality and integrity protection is defined by TLS and provides the same security strengths afforded by TLS employing a strong entropy shared master secret. The integrity of the key generating authentication methods executed within the TEAP tunnel is verified through the calculation of the Crypto-Binding TLV. This ensures that the tunnel endpoints are the same as the inner method endpoints.",
      "ja": "全体として、TEAP認証方法（単数または複数）を保護するための安全なトンネルを確立することによって、メッセージと完全性保護を提供します。機密性と完全性保護はTLSによって定義され、強いエントロピー共有マスターシークレットを使用するTLSによって提供される同じセキュリティ強度を提供しています。 TEAPトンネル内で実行される鍵生成認証方法の完全性は、暗号バインディングTLVの計算によって確認されます。これは、トンネルエンドポイントは、内部方式エンドポイントと同じであることを保証します。"
    },
    {
      "indent": 3,
      "text": "The Result TLV is protected and conveys the true Success or Failure of TEAP, and it should be used as the indicator of its success or failure respectively. However, as EAP terminates with either a cleartext EAP Success or Failure, a peer will also receive a cleartext EAP Success or Failure. The received cleartext EAP Success or Failure MUST match that received in the Result TLV; the peer SHOULD silently discard those cleartext EAP Success or Failure messages that do not coincide with the status sent in the protected Result TLV.",
      "ja": "結果TLVは保護され、TEAPの真の成功または失敗を伝え、そしてそれは、それぞれ、その成功または失敗の指標として使用されるべきです。 EAPはクリアテキストEAP成功または失敗のいずれかで終了しかし、ピアも平文EAP成功または失敗を受信します。受信平文EAP成否は結果TLVで受信していることと一致しなければなりません。ピアは静かに保護された結果TLVで送信された状態と一致しないものを平文EAP成功または失敗のメッセージを破棄すべきです。"
    },
    {
      "indent": 0,
      "text": "7.2. Method Negotiation",
      "section_title": true,
      "ja": "7.2。メソッドのネゴシエーション"
    },
    {
      "indent": 3,
      "text": "As is true for any negotiated EAP protocol, NAK packets used to suggest an alternate authentication method are sent unprotected and, as such, are subject to spoofing. During unprotected EAP method negotiation, NAK packets may be interjected as active attacks to negotiate down to a weaker form of authentication, such as EAP-MD5 (which only provides one-way authentication and does not derive a key). Both the peer and server should have a method selection policy that prevents them from negotiating down to weaker methods. Inner method negotiation resists attacks because it is protected by the mutually authenticated TLS tunnel established. Selection of TEAP as an authentication method does not limit the potential inner authentication methods, so TEAP should be selected when available.",
      "ja": "任意ネゴシエートEAPプロトコルについても同様であるように、代替の認証方法を示唆するために使用されるNAKパケットのような、なりすましの対象となっている、保護されていない送信されています。保護されていないEAPメソッドのネゴシエーション中に、NAKパケットは、（一方向のみの認証を提供し、鍵を導出しない）EAP-MD5のように、認証のより弱い形態まで交渉するアクティブな攻撃としてinterjectedことができます。ピアとサーバの両方が弱い方法まで交渉からそれらを防ぐ方法の選択ポリシーを持っている必要があります。それが確立し、相互に認証されたTLSトンネルによって保護されているため、インナー方法の交渉は攻撃に抵抗します。認証方法としてTEAPの選択は、潜在的な内部認証方式を限定するものではないので、TEAPが利用可能な場合に選択されるべきです。"
    },
    {
      "indent": 3,
      "text": "An attacker cannot readily determine the inner EAP method used, except perhaps by traffic analysis. It is also important that peer implementations limit the use of credentials with an unauthenticated or unauthorized server.",
      "ja": "攻撃者が容易におそらくトラフィック分析によって除き、使用される内部EAP方式を決定することができません。ピア実装が認証されていないか、不正なサーバとの認証情報の使用を制限することも重要です。"
    },
    {
      "indent": 0,
      "text": "7.3. Separation of Phase 1 and Phase 2 Servers",
      "section_title": true,
      "ja": "7.3。フェーズ1とフェーズ2のサーバーの分離"
    },
    {
      "indent": 3,
      "text": "Separation of the TEAP Phase 1 from the Phase 2 conversation is NOT RECOMMENDED. Allowing the Phase 1 conversation to be terminated at a different server than the Phase 2 conversation can introduce vulnerabilities if there is not a proper trust relationship and protection for the protocol between the two servers. Some vulnerabilities include:",
      "ja": "フェーズ2の会話からTEAPフェーズ1の分離が推奨されていません。 2つのサーバー間のプロトコルのための適切な信頼関係と保護が存在しない場合は、フェーズ2の会話とは異なるサーバーで終了するフェーズ1の会話を許可すると、脆弱性を導入することができます。いくつかの脆弱性が含まれます："
    },
    {
      "indent": 3,
      "text": "o Loss of identity protection",
      "ja": "アイデンティティ保護のO損失"
    },
    {
      "indent": 3,
      "text": "o Offline dictionary attacks",
      "ja": "Oオフライン辞書攻撃"
    },
    {
      "indent": 3,
      "text": "o Lack of policy enforcement",
      "ja": "ポリシー適用のO欠如"
    },
    {
      "indent": 3,
      "text": "o Man-in-the-middle attacks (as described in [RFC7029])",
      "ja": "Oのman-in-the-middle攻撃（[RFC7029]に記載されているように）"
    },
    {
      "indent": 3,
      "text": "There may be cases where a trust relationship exists between the Phase 1 and Phase 2 servers, such as on a campus or between two offices within the same company, where there is no danger in revealing the inner identity and credentials of the peer to entities between the two servers. In these cases, using a proxy solution without end-to-end protection of TEAP MAY be used. The TEAP encrypting/decrypting gateway MUST, at a minimum, provide support for IPsec, TLS, or similar protection in order to provide confidentiality for the portion of the conversation between the gateway and the EAP server. In addition, separation of the inner and outer method servers allows for crypto-binding based on the inner method MSK to be thwarted as described in [RFC7029]. Implementation and deployment SHOULD adopt various mitigation strategies described in [RFC7029]. If the inner method is deriving EMSK, then this threat is mitigated as TEAP utilizes the mutual crypto-binding based on EMSK as described in [RFC7029].",
      "ja": "このようキャンパス内のまたは間のエンティティに内側のアイデンティティとピアの資格情報を明らかにすることで危険がない同じ会社内の2つのオフィス間のような信頼関係は、フェーズ1とフェーズ2つのサーバの間に存在する場合、あるかもしれません二つのサーバ。これらのケースでは、TEAPのエンド・ツー・エンドの保護なしでプロキシソリューションを使用すると、使用されるかもしれません。 TEAPは、ゲートウェイは、最小で、ゲートウェイとEAPサーバとの間の会話の部分の機密性を提供するためのIPsec、TLS、または同様の保護のためのサポートを提供しなければならない復号化/暗号化します。加えて、内側及び外側の方法サーバーの分離は、暗号バインディング[RFC7029]に記載されているように阻止する内部メソッドのMSKに基づいて可能にします。実装と展開は、[RFC7029]で説明した様々な緩和戦略を採用すべきです。内部メソッドがEMSK導出されている場合TEAP相互暗号結合[RFC7029]に記載されているようにEMSKに基づくを利用するように、この脅威が軽減されます。"
    },
    {
      "indent": 0,
      "text": "7.4. Mitigation of Known Vulnerabilities and Protocol Deficiencies",
      "section_title": true,
      "ja": "7.4。既知の脆弱性および議定書の不備の軽減"
    },
    {
      "indent": 3,
      "text": "TEAP addresses the known deficiencies and weaknesses in the EAP method. By employing a shared secret between the peer and server to establish a secured tunnel, TEAP enables:",
      "ja": "TEAPは、EAP方式で知られている欠陥や弱点に対処しています。ピアとセキュアトンネルを確立するため、サーバ間の共有秘密を使用することにより、TEAPができます"
    },
    {
      "indent": 3,
      "text": "o Per-packet confidentiality and integrity protection",
      "ja": "パケットごとの機密性と完全性の保護O"
    },
    {
      "indent": 3,
      "text": "o User identity protection",
      "ja": "Oユーザー・アイデンティティ保護"
    },
    {
      "indent": 3,
      "text": "o Better support for notification messages",
      "ja": "通知メッセージのためのより良いサポートO"
    },
    {
      "indent": 3,
      "text": "o Protected EAP inner method negotiation",
      "ja": "O保護されたEAP内部方式のネゴシエーション"
    },
    {
      "indent": 3,
      "text": "o Sequencing of EAP methods",
      "ja": "EAP方式のシーケンシングO"
    },
    {
      "indent": 3,
      "text": "o Strong mutually derived MSKs",
      "ja": "O強い相互由来たMSK"
    },
    {
      "indent": 3,
      "text": "o Acknowledged success/failure indication o Faster re-authentications through session resumption",
      "ja": "Oセッション再開を通して高速再認証の成功/失敗表示を認めました"
    },
    {
      "indent": 3,
      "text": "o Mitigation of dictionary attacks",
      "ja": "辞書攻撃の軽減O"
    },
    {
      "indent": 3,
      "text": "o Mitigation of man-in-the-middle attacks",
      "ja": "man-in-the-middle攻撃の緩和O"
    },
    {
      "indent": 3,
      "text": "o Mitigation of some denial-of-service attacks",
      "ja": "O軽減いくつかのサービス拒否攻撃"
    },
    {
      "indent": 3,
      "text": "It should be noted that in TEAP, as in many other authentication protocols, a denial-of-service attack can be mounted by adversaries sending erroneous traffic to disrupt the protocol. This is a problem in many authentication or key agreement protocols and is therefore noted for TEAP as well.",
      "ja": "TEAPで、他の多くの認証プロトコルのように、サービス拒否攻撃は、プロトコルを破壊する誤ったトラフィックを送信敵によってマウントできることに留意すべきです。これは、多くの認証または鍵合意プロトコルでの問題であるため、同様TEAPのために注目されます。"
    },
    {
      "indent": 3,
      "text": "TEAP was designed with a focus on protected authentication methods that typically rely on weak credentials, such as password-based secrets. To that extent, the TEAP authentication mitigates several vulnerabilities, such as dictionary attacks, by protecting the weak credential-based authentication method. The protection is based on strong cryptographic algorithms in TLS to provide message confidentiality and integrity. The keys derived for the protection relies on strong random challenges provided by both peer and server as well as an established key with strong entropy. Implementations should follow the recommendation in [RFC4086] when generating random numbers.",
      "ja": "TEAPは典型的には、パスワードベースの秘密のような弱資格情報、に依存している保護された認証方法に重点を置いて設計されました。その程度まで、TEAP認証が弱い資格ベースの認証方式を保護することにより、このような辞書攻撃などのいくつかの脆弱性を軽減します。保護は、メッセージの機密性と完全性を提供するために、TLSにおける強力な暗号化アルゴリズムに基づいています。保護のために引き出されたキーは、ピアとサーバだけでなく、強いエントロピーとの確立キーの両方が提供する強力なランダムな課題に依存しています。乱数を生成するときに、実装は[RFC4086]に勧告に従うべきです。"
    },
    {
      "indent": 0,
      "text": "7.4.1. User Identity Protection and Verification",
      "section_title": true,
      "ja": "7.4.1。ユーザーID保護と検証"
    },
    {
      "indent": 3,
      "text": "The initial identity request response exchange is sent in cleartext outside the protection of TEAP. Typically, the Network Access Identifier (NAI) [RFC4282] in the identity response is useful only for the realm of information that is used to route the authentication requests to the right EAP server. This means that the identity response may contain an anonymous identity and just contain realm information. In other cases, the identity exchange may be eliminated altogether if there are other means for establishing the destination realm of the request. In no case should an intermediary place any trust in the identity information in the identity response since it is unauthenticated and may not have any relevance to the authenticated identity. TEAP implementations should not attempt to compare any identity disclosed in the initial cleartext EAP Identity response packet with those Identities authenticated in Phase 2.",
      "ja": "初期のアイデンティティ要求応答交換は、TEAPの保護外にクリアテキストで送信されます。典型的には、アイデンティティ応答のネットワークアクセス識別子（NAI）[RFC4282]は唯一のルートを右EAPサーバに認証要求を使用する情報の分野に有用です。これはアイデンティティ応答が匿名IDが含まれているだけレルム情報を含んでもよいことを意味します。要求の宛先領域を確立するための他の手段がある場合以外の場合に、同一の交換が完全に排除されてもよいです。それが認証されていないで、認証されたIDに何らかの関連性を持っていない可能性があるため、いかなる場合にも、仲介所はアイデンティティ応答でID情報のいずれかの信頼すべき。 TEAP実装は、フェーズ2で認証されたものをアイデンティティとの最初の平文EAPアイデンティティ応答パケットに開示された任意のアイデンティティを比較しないでください。"
    },
    {
      "indent": 3,
      "text": "Identity request/response exchanges sent after the TEAP tunnel is established are protected from modification and eavesdropping by attackers.",
      "ja": "TEAPトンネルが確立された後に送信されたアイデンティティリクエスト/応答交換は、攻撃者によって修正し、盗聴から保護されています。"
    },
    {
      "indent": 3,
      "text": "Note that since TLS client certificates are sent in the clear, if identity protection is required, then it is possible for the TLS authentication to be renegotiated after the first server authentication. To accomplish this, the server will typically not request a certificate in the server_hello; then, after the server_finished message is sent and before TEAP Phase 2, the server MAY send a TLS hello_request. This allows the peer to perform client authentication by sending a client_hello if it wants to or send a no_renegotiation alert to the server indicating that it wants to continue with TEAP Phase 2 instead. Assuming that the peer permits renegotiation by sending a client_hello, then the server will respond with server_hello, certificate, and certificate_request messages. The peer replies with certificate, client_key_exchange, and certificate_verify messages. Since this renegotiation occurs within the encrypted TLS channel, it does not reveal client certificate details. It is possible to perform certificate authentication using an EAP method (for example, EAP-TLS) within the TLS session in TEAP Phase 2 instead of using TLS handshake renegotiation.",
      "ja": "TLSクライアント証明書が平文で送信されているので、ID保護が必要な場合は、TLS認証が最初のサーバ認証後に再交渉されるために、それが可能であることに注意してください。これを実現するために、サーバは、一般的にserver_helloで証明書を要求しません。 server_finishedメッセージが送信され、TEAPフェーズ2の前にされた後、その後、サーバはTLSのhello_requestを送信することができます。これは、ピアは、それがしたいかではなくTEAPフェーズ2を続行を希望していることを示しているサーバにno_renegotiationアラートを送信する場合CLIENT_HELLOを送信することにより、クライアント認証を実行することができます。ピアがCLIENT_HELLOを送信することにより、再交渉が可能になると仮定すると、サーバはserver_hello、証明書、および証明書要求メッセージで応答します。ピアは、証明書、client_key_exchange、およびcertificate_verifyメッセージで応答します。この再交渉は、暗号化されたTLSチャネル内で発生するので、それはクライアント証明書の詳細を明らかにしません。 TEAPフェーズ2の代わりにTLSハンドシェイク再ネゴシエーションを使用してTLSセッション内のEAPメソッド（例えば、EAP-TLS）を使用して、証明書認証を行うことができます。"
    },
    {
      "indent": 0,
      "text": "7.4.2. Dictionary Attack Resistance",
      "section_title": true,
      "ja": "7.4.2。辞書攻撃耐性"
    },
    {
      "indent": 3,
      "text": "TEAP was designed with a focus on protected authentication methods that typically rely on weak credentials, such as password-based secrets. TEAP mitigates dictionary attacks by allowing the establishment of a mutually authenticated encrypted TLS tunnel providing confidentiality and integrity to protect the weak credential-based authentication method.",
      "ja": "TEAPは典型的には、パスワードベースの秘密のような弱資格情報、に依存している保護された認証方法に重点を置いて設計されました。 TEAPは弱い資格ベースの認証方式を保護する機密性と完全性を提供する相互認証、暗号化されたTLSトンネルの確立を可能にすることにより、辞書攻撃を軽減します。"
    },
    {
      "indent": 0,
      "text": "7.4.3. Protection against Man-in-the-Middle Attacks",
      "section_title": true,
      "ja": "7.4.3。 man-in-the-middle攻撃からの保護"
    },
    {
      "indent": 3,
      "text": "Allowing methods to be executed both with and without the protection of a secure tunnel opens up a possibility of a man-in-the-middle attack. To avoid man-in-the-middle attacks it is recommended to always deploy authentication methods with the protection of TEAP. TEAP provides protection from man-in-the-middle attacks even if a deployment chooses to execute inner EAP methods both with and without TEAP protection. TEAP prevents this attack in two ways:",
      "ja": "方法は、セキュアトンネルの保護をとない場合の両方で実行できるようにすることは、man-in-the-middle攻撃の可能性を開きます。 man-in-the-middle攻撃を避けるために、常にTEAPの保護と認証方法を展開することをお勧めします。 TEAPは展開が持つとTEAP保護なしの両方の内部EAPメソッドを実行することを選択した場合でも、man-in-the-middle攻撃からの保護を提供します。 TEAPは、2つの方法でこの攻撃を防ぎます。"
    },
    {
      "indent": 3,
      "text": "1. By using the PAC-Key to mutually authenticate the peer and server during TEAP authentication Phase 1 establishment of a secure tunnel.",
      "ja": "互いにセキュアトンネルのTEAP認証フェーズ1個の確立中にピア及びサーバを認証するPAC-キーを使用して1。"
    },
    {
      "indent": 3,
      "text": "2. By using the keys generated by the inner authentication method (if the inner methods are key generating) in the crypto-binding exchange and in the generation of the key material exported by the EAP method described in Section 5.",
      "ja": "内部認証方式によって生成されたキーを使用して、2（インナーメソッドキー生成する場合）暗号結合引き換えに、セクション5に記載のEAPメソッドによってエクスポートされた鍵材料を生成しました。"
    },
    {
      "indent": 3,
      "text": "TEAP crypto binding does not guarantee man-in-the-middle protection if the client allows a connection to an untrusted server, such as in the case where the client does not properly validate the server's certificate. If the TLS ciphersuite derives the master secret solely from the contribution of secret data from one side of the conversation (such as ciphersuites based on RSA key transport), then an attacker who can convince the client to connect and engage in authentication can impersonate the client to another server even if a strong inner method is executed within the tunnel. If the TLS ciphersuite derives the master secret from the contribution of secrets from both sides of the conversation (such as in ciphersuites based on Diffie-Hellman), then crypto binding can detect an attacker in the conversation if a strong inner method is used.",
      "ja": "TEAP暗号は、クライアントが、そのようなクライアントが正しく、サーバーの証明書を検証しない場合のように、信頼されていないサーバへの接続を許可する場合のman-in-the-middle保護を保証するものではありませんバインディング。 TLS暗号スイートは、（例えばRSAキーの輸送に基づいて暗号スイートなど）、会話の片側から秘密のデータの寄与のみからマスターシークレットを導出した場合は、接続して認証に従事するために、クライアントを納得させることができ、攻撃者がクライアントを偽装することができます別のサーバーにあっても強いインナー方法は、トンネル内で実行されます。 TLSの暗号スイートは、（例えば、ディフィー・ヘルマンに基づいて暗号スイートにおけるような）会話の両側から秘密の寄与からマスタシークレットを導出する場合、強力な内部メソッドが使用される場合、暗号結合は、会話の中で攻撃を検出することができます。"
    },
    {
      "indent": 0,
      "text": "7.4.4. PAC Binding to User Identity",
      "section_title": true,
      "ja": "7.4.4。 PACは、ユーザーIDへのバインド"
    },
    {
      "indent": 3,
      "text": "A PAC may be bound to a user identity. A compliant implementation of TEAP MUST validate that an identity obtained in the PAC-Opaque field matches at minimum one of the identities provided in the TEAP Phase 2 authentication method. This validation provides another binding to ensure that the intended peer (based on identity) has successfully completed the TEAP Phase 1 and proved identity in the Phase 2 conversations.",
      "ja": "PACは、ユーザーIDに結合させることができます。 TEAPの準拠した実装は、PAC-不透明なフィールドにして得られた同一性はTEAPフェーズ2の認証方式で提供さアイデンティティの最小のものに一致することを検証する必要があります。この検証は、（IDに基づく）意図ピアが正常TEAPフェーズ1を完了し、フェーズ2会話に身元を証明していることを確認するために、別の結合を提供します。"
    },
    {
      "indent": 0,
      "text": "7.5. Protecting against Forged Cleartext EAP Packets",
      "section_title": true,
      "ja": "7.5。鍛造クリアテキストEAPパケットからの保護"
    },
    {
      "indent": 3,
      "text": "EAP Success and EAP Failure packets are, in general, sent in cleartext and may be forged by an attacker without detection. Forged EAP Failure packets can be used to attempt to convince an EAP peer to disconnect. Forged EAP Success packets may be used to attempt to convince a peer that authentication has succeeded, even though the authenticator has not authenticated itself to the peer.",
      "ja": "EAP成功と失敗EAPパケットは、一般的には、クリアテキストで送信され、検出されず、攻撃者によって偽造することができます。鍛造EAP失敗パケットを切断するEAPピアを説得しようとするために使用することができます。鍛造EAP成功パケットはオーセンティケータがピアに自分自身を認証していないにもかかわらず、認証が成功したことをピアを説得しようとするために使用することができます。"
    },
    {
      "indent": 3,
      "text": "By providing message confidentiality and integrity, TEAP provides protection against these attacks. Once the peer and authentication server (AS) initiate the TEAP authentication Phase 2, compliant TEAP implementations MUST silently discard all cleartext EAP messages, unless both the TEAP peer and server have indicated success or failure using a protected mechanism. Protected mechanisms include the TLS alert mechanism and the protected termination mechanism described in Section 3.3.3.",
      "ja": "メッセージの機密性と完全性を提供することにより、TEAPは、これらの攻撃に対する保護を提供します。ピアと、認証サーバ（AS）はTEAP認証フェーズ2を開始したらTEAPピアとサーバの両方が保護機構を用いて成功したか失敗したかを示していない限り、対応TEAP実装は静かに、すべてクリアテキストEAPメッセージを破棄しなければなりません。保護メカニズムは、TLSアラート機構およびセクション3.3.3に記載の保護終了機構を含みます。"
    },
    {
      "indent": 3,
      "text": "The success/failure decisions within the TEAP tunnel indicate the final decision of the TEAP authentication conversation. After a success/failure result has been indicated by a protected mechanism, the TEAP peer can process unprotected EAP Success and EAP Failure messages; however, the peer MUST ignore any unprotected EAP Success or Failure messages where the result does not match the result of the protected mechanism.",
      "ja": "TEAPトンネル内の成功/失敗の決定は、TEAP認証会話の最終決定を示しています。成功/失敗の結果は、保護メカニズムによって示された後、TEAPピアは保護されていないEAPの成功と失敗のEAPメッセージを処理することができます。しかし、ピアは、結果は、保護メカニズムの結果と一致しない保護されていないEAP成功または失敗のメッセージを無視しなければなりません。"
    },
    {
      "indent": 3,
      "text": "To abide by [RFC3748], the server sends a cleartext EAP Success or EAP Failure packet to terminate the EAP conversation. However, since EAP Success and EAP Failure packets are not retransmitted, the final packet may be lost. While a TEAP-protected EAP Success or EAP Failure packet should not be a final packet in a TEAP conversation, it may occur based on the conditions stated above, so an EAP peer should not rely upon the unprotected EAP Success and Failure messages.",
      "ja": "[RFC3748]を順守するために、サーバーは、EAPの会話を終了させるために平文EAP成功または失敗EAPパケットを送信します。 EAP成功と失敗EAPパケットを再送されていないので、最終的にパケットが失われることがあります。 TEAPで保護されたEAP成功または失敗EAPパケットは、TEAPの会話に最後のパケットではありませんが、それはそうEAPピアが保護されていないEAP成功と失敗のメッセージに頼るべきではない、上記の条件に基づいて発生することがあります。"
    },
    {
      "indent": 0,
      "text": "7.6. Server Certificate Validation",
      "section_title": true,
      "ja": "7.6。サーバー証明書の検証"
    },
    {
      "indent": 3,
      "text": "As part of the TLS negotiation, the server presents a certificate to the peer. The peer SHOULD verify the validity of the EAP server certificate and SHOULD also examine the EAP server name presented in the certificate in order to determine whether the EAP server can be trusted. When performing server certificate validation, implementations MUST provide support for the rules in [RFC5280] for validating certificates against a known trust anchor. In addition, implementations MUST support matching the realm portion of the peer's NAI against a SubjectAltName of type dNSName within the server certificate. However, in certain deployments, this might not be turned on. Please note that in the case where the EAP authentication is remote, the EAP server will not reside on the same machine as the authenticator, and therefore, the name in the EAP server's certificate cannot be expected to match that of the intended destination. In this case, a more appropriate test might be whether the EAP server's certificate is signed by a certification authority (CA) controlling the intended domain and whether the authenticator can be authorized by a server in that domain.",
      "ja": "TLSネゴシエーションの一部として、サーバーは、ピアに証明書を提示します。ピアは、EAPサーバ証明書の有効性を検証すべきであり、また、EAPサーバが信頼できるかどうかを判断するために、証明書に提示EAPサーバ名を調べる必要があります。サーバ証明書の検証を実行する場合、実装は知られているトラストアンカーに対して証明書を検証するための[RFC5280]の規則のためのサポートを提供しなければなりません。また、実装は、サーバ証明書内の式のdNSNameののSubjectAltNameに対してピアのNAIのレルム部分に一致するサポートしなければなりません。しかし、特定の展開では、これがオンになっていない可能性があります。 EAP認証がリモートである場合には、EAPサーバがオーセンティケータと同じマシン上に存在しません、したがって、EAPサーバの証明書の名前が意図した目的地のものと一致すると期待することはできませんのでご注意ください。この場合は、より適切なテストでは、EAPサーバの証明書は認証局（CA）意図ドメインを制御することにより、オーセンティケータは、そのドメイン内のサーバーによって許可できるかどうか署名されているかどうかであるかもしれません。"
    },
    {
      "indent": 0,
      "text": "7.7. Tunnel PAC Considerations",
      "section_title": true,
      "ja": "7.7。トンネルPACの考慮事項"
    },
    {
      "indent": 3,
      "text": "Since the Tunnel PAC is stored by the peer, special care should be given to the overall security of the peer. The Tunnel PAC MUST be securely stored by the peer to prevent theft or forgery of any of the Tunnel PAC components. In particular, the peer MUST securely store the PAC-Key and protect it from disclosure or modification. Disclosure of the PAC-Key enables an attacker to establish the TEAP tunnel; however, disclosure of the PAC-Key does not reveal the peer or server identity or compromise any other peer's PAC credentials. Modification of the PAC-Key or PAC-Opaque components of the Tunnel PAC may also lead to denial of service as the tunnel establishment will fail. The PAC-Opaque component is the effective TLS ticket extension used to establish the tunnel using the techniques of [RFC5077]. Thus, the security considerations defined by [RFC5077]",
      "ja": "トンネルPACがピアにより記憶されているので、特別なケアは、ピアの全体的なセキュリティを与えられるべきです。トンネルPACを確実にトンネルPACコンポーネントの任意の盗難や偽造を防止するためにピアによって記憶されなければなりません。具体的には、ピアは確実PACキーを格納する必要があり、本開示または改変からそれを保護します。 PAC-キーの開示は、TEAPトンネルを確立するために、攻撃者を可能にします。しかし、PAC-キーの開示は、他のピアのPACの資格情報をピアまたはサーバの身元を明らかにしたり妥協しません。トンネルの確立が失敗するとトンネルPACのPAC-キーまたはPAC-不透明なコンポーネントの変更も、サービス拒否につながる可能性があります。 PAC不透明成分は、[RFC5077]の技術を使用してトンネルを確立するために使用される有効なTLSチケット拡張です。したがって、[RFC5077]で定義されたセキュリティ上の考慮事項"
    },
    {
      "indent": 3,
      "text": "also apply to the PAC-Opaque. The PAC-Info may contain information about the Tunnel PAC such as the identity of the PAC issuer and the Tunnel PAC lifetime for use in the management of the Tunnel PAC. The PAC-Info should be securely stored by the peer to protect it from disclosure and modification.",
      "ja": "PAC-不透明にも適用されます。 PAC-情報は、PAC発行者の身元やトンネルPACの管理に使用するためにトンネルPACの有効期間としてトンネルPACについての情報が含まれていてもよいです。 PAC-INFOを確実開示および改変から保護するためにピアによって格納されるべきです。"
    },
    {
      "indent": 0,
      "text": "7.8. Security Claims",
      "section_title": true,
      "ja": "7.8。セキュリティクレーム"
    },
    {
      "indent": 3,
      "text": "This section provides the needed security claim requirement for EAP [RFC3748].",
      "ja": "このセクションでは、EAP [RFC3748]のために必要なセキュリティ主張の要件を提供します。"
    },
    {
      "indent": 3,
      "text": "Auth. mechanism: Certificate-based, shared-secret-based, and various tunneled authentication mechanisms.",
      "ja": "認証。メカニズム：証明書ベースの、共有秘密をベースとし、さまざまなトンネルされた認証メカニズム。"
    },
    {
      "indent": 3,
      "text": "Ciphersuite negotiation: Yes",
      "ja": "暗号スイートのネゴシエーション：はい"
    },
    {
      "indent": 3,
      "text": "Mutual authentication: Yes",
      "ja": "相互認証：はい"
    },
    {
      "indent": 3,
      "text": "Integrity protection: Yes. Any method executed within the TEAP tunnel is integrity protected. The cleartext EAP headers outside the tunnel are not integrity protected.",
      "ja": "整合性の保護：はい。 TEAPトンネル内で実行される任意の方法は、完全性が保護されています。トンネル外平文EAPヘッダーは完全性保護されていません。"
    },
    {
      "indent": 3,
      "text": "Replay protection: Yes",
      "ja": "リプレイ保護：はい"
    },
    {
      "indent": 3,
      "text": "Confidentiality: Yes",
      "ja": "機密性：はい"
    },
    {
      "indent": 3,
      "text": "Key derivation: Yes",
      "ja": "キー派生：はい"
    },
    {
      "indent": 3,
      "text": "Key strength: See Note 1 below.",
      "ja": "強み：1以下の注記を参照してください。"
    },
    {
      "indent": 3,
      "text": "Dictionary attack prot.: Yes",
      "ja": "辞書攻撃PROT：はい"
    },
    {
      "indent": 3,
      "text": "Fast reconnect: Yes",
      "ja": "高速再接続：はい"
    },
    {
      "indent": 3,
      "text": "Cryptographic binding: Yes",
      "ja": "暗号化は、バインディング：はい"
    },
    {
      "indent": 3,
      "text": "Session independence: Yes",
      "ja": "セッション独立：はい"
    },
    {
      "indent": 3,
      "text": "Fragmentation: Yes",
      "ja": "断片化：はい"
    },
    {
      "indent": 3,
      "text": "Key Hierarchy: Yes",
      "ja": "キー階層：はい"
    },
    {
      "indent": 3,
      "text": "Channel binding: Yes",
      "ja": "チャンネルは、バインディング：はい"
    },
    {
      "indent": 3,
      "text": "Notes",
      "ja": "ノート"
    },
    {
      "indent": 3,
      "text": "1. BCP 86 [RFC3766] offers advice on appropriate key sizes. The National Institute for Standards and Technology (NIST) also offers advice on appropriate key sizes in [NIST-SP-800-57]. [RFC3766], Section 5 advises use of the following required RSA or DH (Diffie-Hellman) module and DSA (Digital Signature Algorithm) subgroup size in bits for a given level of attack resistance in bits. Based on the table below, a 2048-bit RSA key is required to provide 112-bit equivalent key strength:",
      "ja": "1. BCP 86 [RFC3766]は、適切なキーのサイズについてアドバイスを提供しています。標準技術研究所（NIST）は、[NIST-SP-800-57]に適切なキーのサイズについてアドバイスを提供しています。 [RFC3766]は、第5節ではビットで攻撃耐性の所定のレベルのためのビットの次の必要なRSAまたはDH（ディフィー・ヘルマン）モジュールとDSA（デジタル署名アルゴリズム）サブグループサイズを使用することをアドバイス。以下の表に基づいて、2048ビットのRSA鍵は112ビットと等価のキー強度を提供するために必要とされます。"
    },
    {
      "indent": 7,
      "text": "Attack Resistance     RSA or DH Modulus            DSA subgroup\n (bits)                  size (bits)                size (bits)\n-----------------     -----------------            ------------\n   70                        947                        129\n   80                       1228                        148\n   90                       1553                        167\n  100                       1926                        186\n  150                       4575                        284\n  200                       8719                        383\n  250                      14596                        482",
      "raw": true
    },
    {
      "indent": 0,
      "text": "8. Acknowledgements",
      "section_title": true,
      "ja": "8.謝辞"
    },
    {
      "indent": 3,
      "text": "This specification is based on EAP-FAST [RFC4851], which included the ideas and efforts of Nancy Cam-Winget, David McGrew, Joe Salowey, Hao Zhou, Pad Jakkahalli, Mark Krischer, Doug Smith, and Glen Zorn of Cisco Systems, Inc.",
      "ja": "この仕様は、ナンシー・カム・ウィンゲット、デビッドマグリュー、ジョーSalowey、ハオ周、パッドJakkahalli、マーク・Krischer、ダグ・スミス、およびCisco Systems、Inc.のグレンツォルンのアイデアと努力が含まれて、EAP-FAST [RFC4851]に基づいています。"
    },
    {
      "indent": 3,
      "text": "The TLV processing was inspired from work on the Protected Extensible Authentication Protocol version 2 (PEAPv2) with Ashwin Palekar, Dan Smith, Sean Turner, and Simon Josefsson.",
      "ja": "TLV処理はのAshwin Palekar、ダン・スミス、ショーンターナー、およびサイモンJosefsson氏で保護された拡張認証プロトコルバージョン2（PEAPv2）上の仕事からインスピレーションを得ました。"
    },
    {
      "indent": 3,
      "text": "The method for linking identity and proof-of-possession by placing the tls-unique value in the challengePassword field of the CSR as described in Section 3.8.2 was inspired by the technique described in \"Enrollment over Secure Transport\" [RFC7030].",
      "ja": "セクション3.8.2に記載したようにCSRのchallengePasswordフィールドのTLS-一意の値を配置することによって識別とプルーフ・オブ・所持をリンクするための方法は、「セキュア・トランスポートを介して登録」[RFC7030]に記載された技術に触発されました。"
    },
    {
      "indent": 3,
      "text": "Helpful review comments were provided by Russ Housley, Jari Arkko, Ilan Frenkel, Jeremy Steiglitz, Dan Harkins, Sam Hartman, Jim Schaad, Barry Leiba, Stephen Farrell, Chris Lonvick, and Josh Howlett.",
      "ja": "参考レビューコメントはラスHousley、ヤリArkko、宜蘭フレンケル、ジェレミーSteiglitz、ダンハーキンズ、サム・ハートマン、ジムSchaad、バリー・レイバ、スティーブン・ファレル、クリスLonvick、そしてジョシュ・ハウレットによって提供されました。"
    },
    {
      "indent": 0,
      "text": "9. References",
      "section_title": true,
      "ja": "9.参考文献"
    },
    {
      "indent": 0,
      "text": "9.1. Normative References",
      "section_title": true,
      "ja": "9.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC3748] Aboba, B., Blunk, L., Vollbrecht, J., Carlson, J., and H. Levkowetz, \"Extensible Authentication Protocol (EAP)\", RFC 3748, June 2004.",
      "ja": "[RFC3748] Aboba、B.、ブルンク、L.、Vollbrecht、J.、カールソン、J.、およびH. Levkowetz、 \"拡張認証プロトコル（EAP）\"、RFC 3748、2004年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC5077] Salowey, J., Zhou, H., Eronen, P., and H. Tschofenig, \"Transport Layer Security (TLS) Session Resumption without Server-Side State\", RFC 5077, January 2008.",
      "ja": "[RFC5077] Salowey、J.、周、H.、Eronen、P.、およびH. Tschofenig、 \"サーバー側の状態なしのトランスポート層セキュリティ（TLS）セッション再開\"、RFC 5077、2008年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC5226] Narten, T. and H. Alvestrand, \"Guidelines for Writing an IANA Considerations Section in RFCs\", BCP 26, RFC 5226, May 2008.",
      "ja": "[RFC5226] Narten氏、T.とH. Alvestrand、 \"RFCsにIANA問題部に書くためのガイドライン\"、BCP 26、RFC 5226、2008年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC5246] Dierks, T. and E. Rescorla, \"The Transport Layer Security (TLS) Protocol Version 1.2\", RFC 5246, August 2008.",
      "ja": "[RFC5246]ダークス、T.およびE.レスコラ、 \"トランスポート層セキュリティ（TLS）プロトコルバージョン1.2\"、RFC 5246、2008年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC5295] Salowey, J., Dondeti, L., Narayanan, V., and M. Nakhjiri, \"Specification for the Derivation of Root Keys from an Extended Master Session Key (EMSK)\", RFC 5295, August 2008.",
      "ja": "[RFC5295] Salowey、J.、Dondeti、L.、ナラヤナン、V.、およびM. Nakhjiri、RFC 5295 \"拡張マスタセッションキー（EMSK）からルート鍵の導出のための仕様\"、2008年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC5705] Rescorla, E., \"Keying Material Exporters for Transport Layer Security (TLS)\", RFC 5705, March 2010.",
      "ja": "[RFC5705]レスコラ、E.、RFC 5705 \"トランスポート層セキュリティ（TLS）のための鍵材料輸出\"、2010年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC5746] Rescorla, E., Ray, M., Dispensa, S., and N. Oskov, \"Transport Layer Security (TLS) Renegotiation Indication Extension\", RFC 5746, February 2010.",
      "ja": "[RFC5746]レスコラ、E.、レイ、M.、Dispensa、S.、およびN. Oskov、 \"トランスポート層セキュリティ（TLS）再ネゴシエーション指示拡張子\"、RFC 5746、2010年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC5929] Altman, J., Williams, N., and L. Zhu, \"Channel Bindings for TLS\", RFC 5929, July 2010.",
      "ja": "[RFC5929]アルトマン、J.、ウィリアムズ、N.、およびL.朱、 \"TLSのチャネルバインディング\"、RFC 5929、2010年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC6677] Hartman, S., Clancy, T., and K. Hoeper, \"Channel-Binding Support for Extensible Authentication Protocol (EAP) Methods\", RFC 6677, July 2012.",
      "ja": "[RFC6677]ハートマン、S.、クランシー、T.、およびK. Hoeper、RFC 6677、2012年7月 \"拡張認証プロトコル（EAP）方式におけるチャネルバインディングサポート\"。"
    },
    {
      "indent": 0,
      "text": "9.2. Informative References",
      "section_title": true,
      "ja": "9.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[IEEE.802-1X.2013] IEEE, \"Local and Metropolitan Area Networks: Port-Based Network Access Control\", IEEE Standard 802.1X, December 2013.",
      "ja": "[IEEE.802-1X.2013] IEEE、「地方とメトロポリタンエリアネットワーク：ポートベースのネットワークアクセス制御」、IEEE標準802.1X、2013年12月。"
    },
    {
      "indent": 3,
      "text": "[NIST-SP-800-57] National Institute of Standards and Technology, \"Recommendation for Key Management\", NIST Special Publication 800-57, July 2012.",
      "ja": "[NIST-SP-800-57]米国国立標準技術研究所、 \"勧告キー管理のために\"、は、NIST Special Publication 800-57、2012年7月。"
    },
    {
      "indent": 3,
      "text": "[PEAP] Microsoft Corporation, \"[MS-PEAP]: Protected Extensible Authentication Protocol (PEAP)\", February 2014.",
      "ja": "[PEAP]マイクロソフトコーポレーション、 \"[MS-PEAP]：保護された拡張認証プロトコル（PEAP）\"、2014年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC2315] Kaliski, B., \"PKCS #7: Cryptographic Message Syntax Version 1.5\", RFC 2315, March 1998.",
      "ja": "[RFC2315] Kaliski、B.、 \"PKCS＃7：暗号メッセージ構文バージョン1.5\"、RFC 2315、1998年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC2985] Nystrom, M. and B. Kaliski, \"PKCS #9: Selected Object Classes and Attribute Types Version 2.0\", RFC 2985, November 2000.",
      "ja": "[RFC2985] Nystrom、M.とB. Kaliski、 \"PKCS＃9：選択したオブジェクトのクラスと属性タイプバージョン2.0\"、RFC 2985、2000年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC2986] Nystrom, M. and B. Kaliski, \"PKCS #10: Certification Request Syntax Specification Version 1.7\", RFC 2986, November 2000.",
      "ja": "[RFC2986] Nystrom、M.とB. Kaliski、 \"PKCS＃10：証明書要求の構文仕様バージョン1.7\"、RFC 2986、2000年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC3579] Aboba, B. and P. Calhoun, \"RADIUS (Remote Authentication Dial In User Service) Support For Extensible Authentication Protocol (EAP)\", RFC 3579, September 2003.",
      "ja": "[RFC3579] Aboba、B.およびP.カルフーン、 \"RADIUS（ユーザサービスにおけるリモート認証ダイヤル）拡張認証プロトコル（EAP）のサポート\"、RFC 3579、2003年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC3629] Yergeau, F., \"UTF-8, a transformation format of ISO 10646\", STD 63, RFC 3629, November 2003.",
      "ja": "[RFC3629] Yergeau、F.、 \"UTF-8、ISO 10646の変換フォーマット\"、STD 63、RFC 3629、2003年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC3766] Orman, H. and P. Hoffman, \"Determining Strengths For Public Keys Used For Exchanging Symmetric Keys\", BCP 86, RFC 3766, April 2004.",
      "ja": "[RFC3766]オーマン、H.、およびP.ホフマン、 \"対称鍵を交換するために使用公開鍵の強さを測定\"、BCP 86、RFC 3766、2004年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC4017] Stanley, D., Walker, J., and B. Aboba, \"Extensible Authentication Protocol (EAP) Method Requirements for Wireless LANs\", RFC 4017, March 2005.",
      "ja": "[RFC4017]スタンレー、D.、ウォーカー、J.、およびB. Aboba、 \"無線LANのための拡張認証プロトコル（EAP）メソッド要件\"、RFC 4017、2005年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC4072] Eronen, P., Hiller, T., and G. Zorn, \"Diameter Extensible Authentication Protocol (EAP) Application\", RFC 4072, August 2005.",
      "ja": "[RFC4072] Eronen、P.、ヒラー、T.、およびG.ゾルン、 \"直径拡張認証プロトコル（EAP）アプリケーション\"、RFC 4072、2005年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC4086] Eastlake, D., Schiller, J., and S. Crocker, \"Randomness Requirements for Security\", BCP 106, RFC 4086, June 2005.",
      "ja": "[RFC4086]イーストレーク、D.、シラー、J.、およびS.クロッカー、 \"セキュリティのためのランダム要件\"、BCP 106、RFC 4086、2005年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC4282] Aboba, B., Beadles, M., Arkko, J., and P. Eronen, \"The Network Access Identifier\", RFC 4282, December 2005.",
      "ja": "[RFC4282] Aboba、B.、Beadles、M.、Arkko、J.、およびP. Eronen、 \"ネットワークアクセス識別子\"、RFC 4282、2005年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC4648] Josefsson, S., \"The Base16, Base32, and Base64 Data Encodings\", RFC 4648, October 2006.",
      "ja": "[RFC4648] Josefsson氏、S.、 \"Base16、Base32、およびBase64でデータエンコーディング\"、RFC 4648、2006年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC4851] Cam-Winget, N., McGrew, D., Salowey, J., and H. Zhou, \"The Flexible Authentication via Secure Tunneling Extensible Authentication Protocol Method (EAP-FAST)\", RFC 4851, May 2007.",
      "ja": "[RFC4851]カムウィンゲット、N.、マグリュー、D.、Salowey、J.、およびH.周、RFC 4851、2007年5月 \"（EAP-FAST）セキュアなトンネリング拡張認証プロトコル方法を介してフレキシブル認証\"。"
    },
    {
      "indent": 3,
      "text": "[RFC4945] Korver, B., \"The Internet IP Security PKI Profile of IKEv1 /ISAKMP, IKEv2, and PKIX\", RFC 4945, August 2007.",
      "ja": "[RFC4945]コーバー、B.、RFC 4945、2007年8月 \"のIKEv1 / ISAKMP、IKEv2の、およびPKIXのインターネットIPセキュリティPKIプロファイル\"。"
    },
    {
      "indent": 3,
      "text": "[RFC4962] Housley, R. and B. Aboba, \"Guidance for Authentication, Authorization, and Accounting (AAA) Key Management\", BCP 132, RFC 4962, July 2007.",
      "ja": "[RFC4962] Housley氏、R。およびB. Aboba、 \"認証、許可、アカウンティング（AAA）キー管理のための指針\"、BCP 132、RFC 4962、2007年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC5247] Aboba, B., Simon, D., and P. Eronen, \"Extensible Authentication Protocol (EAP) Key Management Framework\", RFC 5247, August 2008.",
      "ja": "[RFC5247] Aboba、B.、サイモン、D.、およびP. Eronen、 \"拡張認証プロトコル（EAP）鍵管理フレームワーク\"、RFC 5247、2008年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC5272] Schaad, J. and M. Myers, \"Certificate Management over CMS (CMC)\", RFC 5272, June 2008.",
      "ja": "[RFC5272] Schaad、J.とM.マイヤーズ、 \"CMSオーバー証明書の管理（CMC）\"、RFC 5272、2008年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC5280] Cooper, D., Santesson, S., Farrell, S., Boeyen, S., Housley, R., and W. Polk, \"Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile\", RFC 5280, May 2008.",
      "ja": "[RFC5280]クーパー、D.、Santesson、S.、ファレル、S.、Boeyen、S.、Housley氏、R.、およびW.ポーク、「インターネットX.509公開鍵暗号基盤証明書と証明書失効リスト（CRL）のプロフィール」、RFC 5280、2008年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC5281] Funk, P. and S. Blake-Wilson, \"Extensible Authentication Protocol Tunneled Transport Layer Security Authenticated Protocol Version 0 (EAP-TTLSv0)\", RFC 5281, August 2008.",
      "ja": "[RFC5281]ファンク、P.とS.ブレーク - ウィルソン、 \"拡張認証プロトコルトンネル型トランスポート層セキュリティ認証プロトコルバージョン0（EAP-TTLSv0）\"、RFC 5281、2008年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC5421] Cam-Winget, N. and H. Zhou, \"Basic Password Exchange within the Flexible Authentication via Secure Tunneling Extensible Authentication Protocol (EAP-FAST)\", RFC 5421, March 2009.",
      "ja": "[RFC5421]カム・ウィンゲット、N.およびH.周、RFC 5421、2009月 \"セキュアなトンネリング拡張認証プロトコル（EAP-FAST）を介して柔軟な認証内の基本的なパスワードの交換\"。"
    },
    {
      "indent": 3,
      "text": "[RFC5652] Housley, R., \"Cryptographic Message Syntax (CMS)\", STD 70, RFC 5652, September 2009.",
      "ja": "[RFC5652] Housley氏、R.、 \"暗号メッセージ構文（CMS）\"、STD 70、RFC 5652、2009年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC5931] Harkins, D. and G. Zorn, \"Extensible Authentication Protocol (EAP) Authentication Using Only a Password\", RFC 5931, August 2010.",
      "ja": "[RFC5931]ハーキンとD.とG.ツォルン、 \"唯一のパスワードを使用して拡張認証プロトコル（EAP）認証\"、RFC 5931、2010年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC6066] Eastlake, D., \"Transport Layer Security (TLS) Extensions: Extension Definitions\", RFC 6066, January 2011.",
      "ja": "[RFC6066]イーストレイク、D.、 \"トランスポート層セキュリティ（TLS）拡張機能：拡張定義\"、RFC 6066、2011年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC6124] Sheffer, Y., Zorn, G., Tschofenig, H., and S. Fluhrer, \"An EAP Authentication Method Based on the Encrypted Key Exchange (EKE) Protocol\", RFC 6124, February 2011.",
      "ja": "[RFC6124]シェファー、Y.、ゾルン、G.、Tschofenig、H.、およびS. Fluhrer、RFC 6124、2011年2月 \"暗号化キー交換（EKE）プロトコルに基づくEAP認証方式\"。"
    },
    {
      "indent": 3,
      "text": "[RFC6678] Hoeper, K., Hanna, S., Zhou, H., and J. Salowey, \"Requirements for a Tunnel-Based Extensible Authentication Protocol (EAP) Method\", RFC 6678, July 2012.",
      "ja": "[RFC6678] Hoeper、K.、ハンナ、S.、周、H.、及びJ. Salowey、 \"トンネルベースの拡張認証プロトコル（EAP）メソッドのための要件\"、RFC 6678、2012年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC6960] Santesson, S., Myers, M., Ankney, R., Malpani, A., Galperin, S., and C. Adams, \"X.509 Internet Public Key Infrastructure Online Certificate Status Protocol - OCSP\", RFC 6960, June 2013.",
      "ja": "[RFC6960] Santesson、S.、マイヤーズ、M.、Ankney、R.、Malpani、A.、Galperin、S.、およびC.アダムス、 \"X.509のインターネット公開鍵暗号基盤のオンライン証明書状態プロトコル -  OCSP\"、RFC 6960、2013年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC6961] Pettersen, Y., \"The Transport Layer Security (TLS) Multiple Certificate Status Request Extension\", RFC 6961, June 2013.",
      "ja": "[RFC6961]ペター、Y.、 \"トランスポート層セキュリティ（TLS）複数の証明書ステータス要求拡張\"、RFC 6961、2013年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC7029] Hartman, S., Wasserman, M., and D. Zhang, \"Extensible Authentication Protocol (EAP) Mutual Cryptographic Binding\", RFC 7029, October 2013.",
      "ja": "[RFC7029]ハートマン、S.、ワッサーマン、M.、およびD.チャン、 \"拡張認証プロトコル（EAP）相互暗号バインディング\"、RFC 7029、2013年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC7030] Pritikin, M., Yee, P., and D. Harkins, \"Enrollment over Secure Transport\", RFC 7030, October 2013.",
      "ja": "[RFC7030] Pritikin、M.、イー、P.、およびD.ハーキンズ、 \"セキュアなトランスポート上で登録\"、RFC 7030、2013年10月。"
    },
    {
      "indent": 3,
      "text": "[X.690] ITU-T, \"ASN.1 encoding rules: Specification of Basic Encoding Rules (BER), Canonical Encoding Rules (CER) and Distinguished Encoding Rules (DER)\", ITU-T Recommendation X.690, November 2008.",
      "ja": "[X.690] ITU-T、 \"ASN.1符号化ルール：基本符号化規則（BER）、Canonicalの符号化規則（CER）と識別符号化規則（DER）の仕様\"、ITU-T勧告X.690 2008年11月。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Evaluation against Tunnel-Based EAP Method Requirements",
      "ja": "トンネルベースのEAPメソッド要件に対する付録A.評価"
    },
    {
      "indent": 3,
      "text": "This section evaluates all tunnel-based EAP method requirements described in [RFC6678] against TEAP version 1.",
      "ja": "このセクションでは、TEAPバージョン1に対して[RFC6678]に記載されているすべてのトンネルベースのEAPメソッドの要件を評価します。"
    },
    {
      "indent": 0,
      "text": "A.1. Requirement 4.1.1: RFC Compliance",
      "ja": "A.1。要件4.1.1：RFC準拠"
    },
    {
      "indent": 3,
      "text": "TEAPv1 meets this requirement by being compliant with RFC 3748 [RFC3748], RFC 4017 [RFC4017], RFC 5247 [RFC5247], and RFC 4962 [RFC4962]. It is also compliant with the \"cryptographic algorithm agility\" requirement by leveraging TLS 1.2 for all cryptographic algorithm negotiation.",
      "ja": "TEAPv1は、RFC 3748 [RFC3748]、RFC 4017 [RFC4017]、RFC 5247 [RFC5247]、およびRFC 4962 [RFC4962]に準拠していることで、この要件を満たしています。また、すべての暗号アルゴリズムのネゴシエーションのためにTLS 1.2を活用することで、「暗号アルゴリズムの俊敏性」の要件に準拠しています。"
    },
    {
      "indent": 0,
      "text": "A.2. Requirement 4.2.1: TLS Requirements",
      "ja": "A.2。要件4.2.1：TLSの要件"
    },
    {
      "indent": 3,
      "text": "TEAPv1 meets this requirement by mandating TLS version 1.2 support as defined in Section 3.2.",
      "ja": "TEAPv1は、3.2節で定義されたTLSバージョン1.2のサポートを義務化することで、この要件を満たしています。"
    },
    {
      "indent": 0,
      "text": "A.3. Requirement 4.2.1.1.1: Ciphersuite Negotiation",
      "ja": "A.3。要件4.2.1.1.1：も、Ciphersuite交渉"
    },
    {
      "indent": 3,
      "text": "TEAPv1 meets this requirement by using TLS to provide protected ciphersuite negotiation.",
      "ja": "TEAPv1は、保護された暗号スイートのネゴシエーションを提供するために、TLSを使用することによって、この要件を満たしています。"
    },
    {
      "indent": 0,
      "text": "A.4. Requirement 4.2.1.1.2: Tunnel Data Protection Algorithms",
      "ja": "A.4。要件4.2.1.1.2：トンネルデータ保護アルゴリズム"
    },
    {
      "indent": 3,
      "text": "TEAPv1 meets this requirement by mandating TLS_RSA_WITH_AES_128_CBC_SHA as a mandatory-to-implement ciphersuite as defined in Section 3.2.",
      "ja": "TEAPv1はセクション3.2で定義されるように強制的に実装暗号スイートとしてTLS_RSA_WITH_AES_128_CBC_SHAを義務付けることによって、この要件を満たしています。"
    },
    {
      "indent": 0,
      "text": "A.5. Requirement 4.2.1.1.3: Tunnel Authentication and Key Establishment",
      "ja": "A.5。要件4.2.1.1.3：トンネル認証と鍵確立"
    },
    {
      "indent": 3,
      "text": "TEAPv1 meets this requirement by mandating TLS_RSA_WITH_AES_128_CBC_SHA as a mandatory-to-implement ciphersuite that provides certificate-based authentication of the server and is approved by NIST. The mandatory-to-implement ciphersuites only include ciphersuites that use strong cryptographic algorithms. They do not include ciphersuites providing mutually anonymous authentication or static Diffie-Hellman ciphersuites as defined in Section 3.2.",
      "ja": "TEAPv1は、サーバの証明書ベースの認証を提供し、NISTによって承認された実装に必須の暗号スイートとしてTLS_RSA_WITH_AES_128_CBC_SHAを義務付けることで、この要件を満たしています。実装に必須の暗号スイートは、強力な暗号化アルゴリズムを使用する暗号スイートが含まれています。彼らは、3.2節で定義されるように、相互に匿名認証または静的のDiffie-Hellman暗号スイートを提供する暗号スイートが含まれていません。"
    },
    {
      "indent": 0,
      "text": "A.6. Requirement 4.2.1.2: Tunnel Replay Protection",
      "ja": "A.6。要件4.2.1.2：トンネルリプレイ保護"
    },
    {
      "indent": 3,
      "text": "TEAPv1 meets this requirement by using TLS to provide sufficient replay protection.",
      "ja": "TEAPv1は、十分な再生保護を提供するために、TLSを使用することによって、この要件を満たしています。"
    },
    {
      "indent": 0,
      "text": "A.7. Requirement 4.2.1.3: TLS Extensions",
      "ja": "A.7。要件4.2.1.3：TLS拡張機能"
    },
    {
      "indent": 3,
      "text": "TEAPv1 meets this requirement by allowing TLS extensions, such as TLS Certificate Status Request extension [RFC6066] and SessionTicket extension [RFC5077], to be used during TLS tunnel establishment.",
      "ja": "TEAPv1は、TLSトンネル確立中に使用されるTLS証明書のステータス要求拡張[RFC6066]とSessionTicket拡張[RFC5077]としてTLS拡張を可能にすることによって、この要件を満たしています。"
    },
    {
      "indent": 0,
      "text": "A.8. Requirement 4.2.1.4: Peer Identity Privacy",
      "ja": "A.8。要件4.2.1.4：ピアのアイデンティティプライバシー"
    },
    {
      "indent": 3,
      "text": "TEAPv1 meets this requirement by establishment of the TLS tunnel and protection identities specific to the inner method. In addition, the peer certificate can be sent confidentially (i.e., encrypted).",
      "ja": "TEAPv1は、内部方式に固有のTLSトンネルと保護アイデンティティの確立によって、この要件を満たしています。加えて、ピア証明書（すなわち、暗号化された）秘密に送信することができます。"
    },
    {
      "indent": 0,
      "text": "A.9. Requirement 4.2.1.5: Session Resumption",
      "ja": "A.9。要件4.2.1.5：セッション再開"
    },
    {
      "indent": 3,
      "text": "TEAPv1 meets this requirement by mandating support of TLS session resumption as defined in Section 3.2.1 and TLS session resume using a PAC as defined in Section 3.2.2 .",
      "ja": "TEAPv1は、3.2.2項で定義されたセクション3.2.1およびPACを使用して、TLSセッション再開で定義されたTLSセッション再開のサポートを義務付けることで、この要件を満たしています。"
    },
    {
      "indent": 0,
      "text": "A.10. Requirement 4.2.2: Fragmentation",
      "ja": "A.10。要件4.2.2：断片化"
    },
    {
      "indent": 3,
      "text": "TEAPv1 meets this requirement by leveraging fragmentation support provided by TLS as defined in Section 3.7.",
      "ja": "TEAPv1はセクション3.7で定義されるように、TLSによって提供フラグメンテーションサポートを活用することによって、この要件を満たしています。"
    },
    {
      "indent": 0,
      "text": "A.11. Requirement 4.2.3: Protection of Data External to Tunnel",
      "ja": "A.11。要件4.2.3：トンネルへのデータの外部の保護"
    },
    {
      "indent": 3,
      "text": "TEAPv1 meets this requirement by including the TEAP version number received in the computation of the Crypto-Binding TLV as defined in Section 4.2.13.",
      "ja": "TEAPv1はセクション4.2.13で定義されるように暗号バインディングTLVの計算で受信TEAPバージョン番号を含めることによって、この要件を満たしています。"
    },
    {
      "indent": 0,
      "text": "A.12. Requirement 4.3.1: Extensible Attribute Types",
      "ja": "A.12。要件4.3.1：拡張属性タイプ"
    },
    {
      "indent": 3,
      "text": "TEAPv1 meets this requirement by using an extensible TLV data layer inside the tunnel as defined in Section 4.2.",
      "ja": "TEAPv1は、セクション4.2で定義されるようにトンネル内の拡張可能TLVデータ層を使用することによって、この要件を満たしています。"
    },
    {
      "indent": 0,
      "text": "A.13. Requirement 4.3.2: Request/Challenge Response Operation",
      "ja": "A.13。要件4.3.2：リクエスト/レスポンスチャレンジ操作"
    },
    {
      "indent": 3,
      "text": "TEAPv1 meets this requirement by allowing multiple TLVs to be sent in a single EAP request or response packet, while maintaining the half-duplex operation typical of EAP.",
      "ja": "TEAPv1は、EAPの一般的な半二重動作を維持しつつ、複数のTLVは、単一のEAP要求または応答パケットで送信されるようにすることによって、この要件を満たしています。"
    },
    {
      "indent": 0,
      "text": "A.14. Requirement 4.3.3: Indicating Criticality of Attributes",
      "ja": "A.14。要件4.3.3：属性の重要度を示します"
    },
    {
      "indent": 3,
      "text": "TEAPv1 meets this requirement by having a mandatory bit in each TLV to indicate whether it is mandatory to support or not as defined in Section 4.2.",
      "ja": "TEAPv1は、セクション4.2で定義されるように、サポートしたりしないことが必須であるかどうかを示すために、各TLVに必須のビットを有することによって、この要件を満たしています。"
    },
    {
      "indent": 0,
      "text": "A.15. Requirement 4.3.4: Vendor-Specific Support",
      "ja": "A.15。要件4.3.4：ベンダー固有のサポート"
    },
    {
      "indent": 3,
      "text": "TEAPv1 meets this requirement by having a Vendor-Specific TLV to allow vendors to define their own attributes as defined in Section 4.2.8.",
      "ja": "TEAPv1は、セクション4.2.8で定義されているベンダーが独自の属性を定義することができるように、ベンダー固有のTLVを持っていることによって、この要件を満たしています。"
    },
    {
      "indent": 0,
      "text": "A.16. Requirement 4.3.5: Result Indication",
      "ja": "A.16。要件4.3.5：結果指示"
    },
    {
      "indent": 3,
      "text": "TEAPv1 meets this requirement by having a Result TLV to exchange the final result of the EAP authentication so both the peer and server have a synchronized state as defined in Section 4.2.4.",
      "ja": "TEAPv1はセクション4.2.4で定義されるように、ピアとサーバの両方が同期状態を有するように、EAP認証の最終結果を交換する結果TLVを有することによって、この要件を満たしています。"
    },
    {
      "indent": 0,
      "text": "A.17. Requirement 4.3.6: Internationalization of Display Strings",
      "ja": "A.17。要件4.3.6：表示文字列の国際化"
    },
    {
      "indent": 3,
      "text": "TEAPv1 meets this requirement by supporting UTF-8 format in the Basic-Password-Auth-Req TLV as defined in Section 4.2.14 and the Basic-Password-Auth-Resp TLV as defined in Section 4.2.15.",
      "ja": "TEAPv1セクション4.2.14および基本-パスワード-AUTH-RespをTLVで定義されるように、セクション4.2.15で定義されるように基本-パスワード-AUTH-REQ TLVでUTF-8形式をサポートすることによって、この要件を満たしています。"
    },
    {
      "indent": 0,
      "text": "A.18. Requirement 4.4: EAP Channel-Binding Requirements",
      "ja": "A.18。要件4.4：EAPチャンネル結合要件"
    },
    {
      "indent": 3,
      "text": "TEAPv1 meets this requirement by having a Channel-Binding TLV to exchange the EAP channel-binding data as defined in Section 4.2.7.",
      "ja": "TEAPv1はセクション4.2.7で定義されているEAPチャネル結合データを交換するためにチャネル・バインディングTLVを有することによって、この要件を満たしています。"
    },
    {
      "indent": 0,
      "text": "A.19. Requirement 4.5.1.1: Confidentiality and Integrity",
      "ja": "A.19。要件4.5.1.1：機密性と完全性"
    },
    {
      "indent": 3,
      "text": "TEAPv1 meets this requirement by running the password authentication inside a protected TLS tunnel.",
      "ja": "TEAPv1は、保護されたTLSトンネル内でパスワード認証を実行することによって、この要件を満たしています。"
    },
    {
      "indent": 0,
      "text": "A.20. Requirement 4.5.1.2: Authentication of Server",
      "ja": "A.20。要件4.5.1.2：サーバーの認証"
    },
    {
      "indent": 3,
      "text": "TEAPv1 meets this requirement by mandating authentication of the server before establishment of the protected TLS and then running inner password authentication as defined in Section 3.2.",
      "ja": "TEAPv1は、保護されたTLSの設立前に、サーバーの認証を義務化して、3.2節で定義されるように、内側パスワード認証を実行することによって、この要件を満たしています。"
    },
    {
      "indent": 0,
      "text": "A.21. Requirement 4.5.1.3: Server Certificate Revocation Checking",
      "ja": "A.21。要件4.5.1.3：サーバー証明書失効チェック"
    },
    {
      "indent": 3,
      "text": "TEAPv1 meets this requirement by supporting TLS Certificate Status Request extension [RFC6066] during tunnel establishment.",
      "ja": "TEAPv1は、トンネル確立中にTLS証明書のステータス要求拡張[RFC6066]をサポートすることによって、この要件を満たしています。"
    },
    {
      "indent": 0,
      "text": "A.22. Requirement 4.5.2: Internationalization",
      "ja": "A.22。要件4.5.2：国際"
    },
    {
      "indent": 3,
      "text": "TEAPv1 meets this requirement by supporting UTF-8 format in Basic-Password-Auth-Req TLV as defined in Section 4.2.14 and Basic-Password-Auth-Resp TLV as defined in Section 4.2.15.",
      "ja": "セクション4.2.15で定義されるように、セクション4.2.14と基本-パスワード-AUTH-RespをTLVに定義されてTEAPv1基本-パスワード-AUTH-REQ TLVでUTF-8形式をサポートすることによって、この要件を満たしています。"
    },
    {
      "indent": 0,
      "text": "A.23. Requirement 4.5.3: Metadata",
      "ja": "A.23。要件4.5.3：メタデータ"
    },
    {
      "indent": 3,
      "text": "TEAPv1 meets this requirement by supporting Identity-Type TLV as defined in Section 4.2.3 to indicate whether the authentication is for a user or a machine.",
      "ja": "セクション4.2.3で定義されるようTEAPv1認証は、ユーザまたはマシンのためのものであるかどうかを示すためにアイデンティティタイプTLVをサポートすることによって、この要件を満たしています。"
    },
    {
      "indent": 0,
      "text": "A.24. Requirement 4.5.4: Password Change",
      "ja": "A.24。要件4.5.4：パスワードの変更"
    },
    {
      "indent": 3,
      "text": "TEAPv1 meets this requirement by supporting multiple Basic-Password-Auth-Req TLV and Basic-Password-Auth-Resp TLV exchanges within a single EAP authentication, which allows \"housekeeping\"\" functions such as password change.",
      "ja": "TEAPv1は、パスワードの変更などの「ハウスキーピング」」機能を可能にする単一のEAP認証、内部に複数の基本-パスワード-AUTH-REQのTLVと基本-パスワード-AUTH-RespをTLV交換をサポートすることによって、この要件を満たしています。"
    },
    {
      "indent": 0,
      "text": "A.25. Requirement 4.6.1: Method Negotiation",
      "ja": "A.25。要件4.6.1：メソッドのネゴシエーション"
    },
    {
      "indent": 3,
      "text": "TEAPv1 meets this requirement by supporting inner EAP method negotiation within the protected TLS tunnel.",
      "ja": "TEAPv1は、保護TLSトンネル内の内部EAPメソッドのネゴシエーションをサポートすることによって、この要件を満たしています。"
    },
    {
      "indent": 0,
      "text": "A.26. Requirement 4.6.2: Chained Methods",
      "ja": "A.26。要件4.6.2：チェーンのメソッド"
    },
    {
      "indent": 3,
      "text": "TEAPv1 meets this requirement by supporting inner EAP method chaining within protected TLS tunnels as defined in Section 3.3.1.",
      "ja": "TEAPv1はセクション3.3.1で定義されるように保護されたTLSトンネル内連鎖内部EAPメソッドをサポートすることによって、この要件を満たしています。"
    },
    {
      "indent": 0,
      "text": "A.27. Requirement 4.6.3: Cryptographic Binding with the TLS Tunnel",
      "ja": "A.27。要件4.6.3：暗号化はTLSトンネルでバインディング"
    },
    {
      "indent": 3,
      "text": "TEAPv1 meets this requirement by supporting cryptographic binding of the inner EAP method keys with the keys derived from the TLS tunnel as defined in Section 4.2.13.",
      "ja": "TEAPv1はセクション4.2.13で定義されたTLSトンネルに由来するキーを持つ内部EAPメソッドキーの暗号結合をサポートすることによって、この要件を満たしています。"
    },
    {
      "indent": 0,
      "text": "A.28. Requirement 4.6.4: Peer-Initiated EAP Authentication",
      "ja": "A.28。要件4.6.4：ピアが開始するEAP認証"
    },
    {
      "indent": 3,
      "text": "TEAPv1 meets this requirement by supporting the Request-Action TLV as defined in Section 4.2.9 to allow a peer to initiate another inner EAP method.",
      "ja": "TEAPv1は、別の内部EAPメソッドを開始するピアを可能にするために、セクション4.2.9で定義されるように要求アクションTLVをサポートすることによって、この要件を満たしています。"
    },
    {
      "indent": 0,
      "text": "A.29. Requirement 4.6.5: Method Metadata",
      "ja": "A.29。要件4.6.5：メソッドのメタデータ"
    },
    {
      "indent": 3,
      "text": "TEAPv1 meets this requirement by supporting the Identity-Type TLV as defined in Section 4.2.3 to indicate whether the authentication is for a user or a machine.",
      "ja": "TEAPv1認証は、ユーザまたはマシンのためのものであるかどうかを示すために、セクション4.2.3で定義されるようにアイデンティティ型TLVをサポートすることによって、この要件を満たしています。"
    },
    {
      "indent": 0,
      "text": "Appendix B. Major Differences from EAP-FAST",
      "ja": "EAP-FASTから付録B.主な違い"
    },
    {
      "indent": 3,
      "text": "This document is a new standard tunnel EAP method based on revision of EAP-FAST version 1 [RFC4851] that contains improved flexibility, particularly for negotiation of cryptographic algorithms. The major changes are:",
      "ja": "この文書は、特に暗号アルゴリズムのネゴシエーションのために、改善された柔軟性を含有EAP-FASTバージョン1 [RFC4851]のリビジョンに基づいて新たな標準トンネルEAP方式です。主な変更点は以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "1. The EAP method name has been changed from EAP-FAST to TEAP; this change thus requires that a new EAP Type be assigned.",
      "ja": "1. EAPメソッド名は、TEAPにEAP-FASTから変更されています。この変更は、このように新しいEAPタイプが割り当てられることを必要とします。"
    },
    {
      "indent": 3,
      "text": "2. This version of TEAP MUST support TLS 1.2 [RFC5246].",
      "section_title": true,
      "ja": "2. TEAPのこのバージョンは、TLS 1.2 [RFC5246]をサポートしなければなりません。"
    },
    {
      "indent": 3,
      "text": "3. The key derivation now makes use of TLS keying material exporters [RFC5705] and the PRF and hash function negotiated in TLS. This is to simplify implementation and better support cryptographic algorithm agility.",
      "ja": "3.キー導出は今TLSで交渉TLS鍵材料輸出[RFC5705]とPRFとハッシュ関数を利用します。これは、実装とより良いサポート暗号アルゴリズムの機敏性を簡素化することです。"
    },
    {
      "indent": 3,
      "text": "4. TEAP is in full conformance with TLS ticket extension [RFC5077] as described in Section 3.2.2.",
      "ja": "4. TEAPは、セクション3.2.2に記載したようにTLSチケット拡張[RFC5077]に完全に準拠しています。"
    },
    {
      "indent": 3,
      "text": "5. Support is provided for passing optional Outer TLVs in the first two message exchanges, in addition to the Authority-ID TLV data in EAP-FAST.",
      "ja": "前記サポートはEAP-FASTに機関-ID TLVデータに加えて、最初の2回のメッセージ交換に任意アウターTLVを通過させるために設けられています。"
    },
    {
      "indent": 3,
      "text": "6. Basic password authentication on the TLV level has been added in addition to the existing inner EAP method.",
      "ja": "TLVレベル6.基本パスワード認証は、既存の内部EAPメソッドに加えて、追加されました。"
    },
    {
      "indent": 3,
      "text": "7. Additional TLV types have been defined to support EAP channel binding and metadata. They are the Identity-Type TLV and Channel-Binding TLVs, defined in Section 4.2.",
      "ja": "7.追加のTLVタイプは、EAPチャネル結合とメタデータをサポートするために定義されています。彼らは、セクション4.2で定義されたアイデンティティ型TLVとチャンネル結合性のTLV、です。"
    },
    {
      "indent": 0,
      "text": "Appendix C. Examples",
      "ja": "付録C.例"
    },
    {
      "indent": 0,
      "text": "C.1. Successful Authentication",
      "ja": "C.1。成功した認証"
    },
    {
      "indent": 3,
      "text": "The following exchanges show a successful TEAP authentication with basic password authentication and optional PAC refreshment. The conversation will appear as follows:",
      "ja": "以下の交換は、基本的なパスワード認証とオプションのPACのリフレッシュで成功TEAP認証を示しています。次のように会話が表示されます。"
    },
    {
      "indent": 7,
      "text": "Authenticating Peer     Authenticator\n-------------------     -------------\n                        <- EAP-Request/\n                        Identity\nEAP-Response/\nIdentity (MyID1) ->",
      "raw": true
    },
    {
      "indent": 31,
      "text": "<- EAP-Request/\nEAP-Type=TEAP, V=1\n(TEAP Start, S bit set, Authority-ID)",
      "raw": true
    },
    {
      "indent": 7,
      "text": "EAP-Response/ EAP-Type=TEAP, V=1 (TLS client_hello with PAC-Opaque in SessionTicket extension)->",
      "ja": "EAP応答/ EAP-タイプ= TEAP、V = 1（TLSはSessionTicket拡張におけるPAC不透明でCLIENT_HELLO） - >"
    },
    {
      "indent": 31,
      "text": "<- EAP-Request/\nEAP-Type=TEAP, V=1\n(TLS server_hello,\n(TLS change_cipher_spec,\n TLS finished)",
      "raw": true
    },
    {
      "indent": 7,
      "text": "EAP-Response/ EAP-Type=TEAP, V=1 -> (TLS change_cipher_spec, TLS finished)",
      "ja": "EAP応答/ EAP-タイプ= TEAP、V = 1  - >（TLSのchange_cipher_spec、TLSは終了）"
    },
    {
      "indent": 7,
      "text": "TLS channel established (messages sent within the TLS channel)",
      "ja": "TLSチャネル確立（TLSチャネル内で送信されるメッセージ）"
    },
    {
      "indent": 30,
      "text": "<- Basic-Password-Auth-Req TLV, Challenge",
      "ja": "< - 基本-パスワード認証-REQ TLV、チャレンジ"
    },
    {
      "indent": 7,
      "text": "Basic-Password-Auth-Resp TLV, Response with both username and password) ->",
      "ja": "基本パスワード認証-RespのTLV、ユーザー名とパスワードの両方に対応） - >"
    },
    {
      "indent": 7,
      "text": "optional additional exchanges (new pin mode, password change, etc.) ...",
      "ja": "オプションの追加交換（新しいピンモード、パスワードの変更、など）..."
    },
    {
      "indent": 28,
      "text": "<- Crypto-Binding TLV (Request),\n    Result TLV (Success),\n    (Optional PAC TLV)",
      "raw": true
    },
    {
      "indent": 7,
      "text": "Crypto-Binding TLV(Response), Result TLV (Success), (PAC-Acknowledgement TLV) ->",
      "ja": "暗号バインディングTLV（レスポンス）、TLV（成功）、（PAC-謝辞TLV）の結果 - >"
    },
    {
      "indent": 7,
      "text": "TLS channel torn down (messages sent in cleartext)",
      "ja": "取り壊さTLSチャネル（クリアテキストで送信されたメッセージ）"
    },
    {
      "indent": 31,
      "text": "<- EAP-Success",
      "ja": "< -  EAP-成功"
    },
    {
      "indent": 0,
      "text": "C.2. Failed Authentication",
      "ja": "C.2。失敗した認証"
    },
    {
      "indent": 3,
      "text": "The following exchanges show a failed TEAP authentication due to wrong user credentials. The conversation will appear as follows:",
      "ja": "以下のやり取りが原因間違ったユーザーの資格情報に失敗したTEAP認証を示しています。次のように会話が表示されます。"
    },
    {
      "indent": 7,
      "text": "Authenticating Peer     Authenticator\n-------------------     -------------\n                        <- EAP-Request/Identity",
      "raw": true
    },
    {
      "indent": 7,
      "text": "EAP-Response/ Identity (MyID1) ->",
      "ja": "EAP応答/アイデンティティ（MyID1） - >"
    },
    {
      "indent": 31,
      "text": "<- EAP-Request/\nEAP-Type=TEAP, V=1\n(TEAP Start, S bit set, Authority-ID)",
      "raw": true
    },
    {
      "indent": 7,
      "text": "EAP-Response/ EAP-Type=TEAP, V=1 (TLS client_hello with PAC-Opaque in SessionTicket extension)->",
      "ja": "EAP応答/ EAP-タイプ= TEAP、V = 1（TLSはSessionTicket拡張におけるPAC不透明でCLIENT_HELLO） - >"
    },
    {
      "indent": 31,
      "text": "<- EAP-Request/\nEAP-Type=TEAP, V=1\n(TLS server_hello,\n(TLS change_cipher_spec,\n TLS finished)",
      "raw": true
    },
    {
      "indent": 7,
      "text": "EAP-Response/ EAP-Type=TEAP, V=1 -> (TLS change_cipher_spec, TLS finished)",
      "ja": "EAP応答/ EAP-タイプ= TEAP、V = 1  - >（TLSのchange_cipher_spec、TLSは終了）"
    },
    {
      "indent": 7,
      "text": "TLS channel established (messages sent within the TLS channel)",
      "ja": "TLSチャネル確立（TLSチャネル内で送信されるメッセージ）"
    },
    {
      "indent": 30,
      "text": "<- Basic-Password-Auth-Req TLV, Challenge",
      "ja": "< - 基本-パスワード認証-REQ TLV、チャレンジ"
    },
    {
      "indent": 7,
      "text": "Basic-Password-Auth-Resp TLV, Response with both username and password) ->",
      "ja": "基本パスワード認証-RespのTLV、ユーザー名とパスワードの両方に対応） - >"
    },
    {
      "indent": 31,
      "text": "<- Result TLV (Failure)",
      "ja": "< - 結果TLV（失敗）"
    },
    {
      "indent": 7,
      "text": "Result TLV (Failure) ->",
      "ja": "結果TLV（失敗） - >"
    },
    {
      "indent": 7,
      "text": "TLS channel torn down (messages sent in cleartext)",
      "ja": "取り壊さTLSチャネル（クリアテキストで送信されたメッセージ）"
    },
    {
      "indent": 31,
      "text": "<- EAP-Failure",
      "ja": "< -  EAP-失敗"
    },
    {
      "indent": 0,
      "text": "C.3. Full TLS Handshake Using Certificate-Based Ciphersuite",
      "ja": "C.3。証明書ベースのCipherSuiteで使用して完全なTLSハンドシェイク"
    },
    {
      "indent": 3,
      "text": "In the case within TEAP Phase 1 where an abbreviated TLS handshake is tried, fails, and falls back to the certificate-based full TLS handshake, the conversation will appear as follows:",
      "ja": "次のように略記TLSハンドシェイクを試み失敗し、証明書ベースの完全なTLSハンドシェイクにフォールバックさTEAPフェーズ1内の場合には、会話が表示されます。"
    },
    {
      "indent": 6,
      "text": "Authenticating Peer    Authenticator\n-------------------    -------------\n                       <- EAP-Request/Identity\nEAP-Response/\nIdentity (MyID1) ->",
      "raw": true
    },
    {
      "indent": 6,
      "text": "// Identity sent in the clear. May be a hint to help route the authentication request to EAP server, instead of the full user identity.",
      "ja": "//平文で送信アイデンティティ。代わりに、完全なユーザー・アイデンティティの、ルートEAPサーバに認証要求を支援するためのヒントかもしれません。"
    },
    {
      "indent": 6,
      "text": " <- EAP-Request/ EAP-Type=TEAP, V=1 (TEAP Start, S bit set, Authority-ID) EAP-Response/ EAP-Type=TEAP, V=1 (TLS client_hello with PAC-Opaque in SessionTicket extension)->",
      "ja": "< -  EAP要求/ EAP-タイプ= TEAP、V = 1（TEAP起動し、Sビットが設定、認証局-ID）EAP応答/ EAP-タイプTEAPは、V = 1（TLSはSessionTicket拡張におけるPAC不透明でCLIENT_HELLO = ） - >"
    },
    {
      "indent": 6,
      "text": "// Peer sends PAC-Opaque of Tunnel PAC along with a list of ciphersuites supported. If the server rejects the PAC-Opaque, it falls through to the full TLS handshake.",
      "ja": "//ピアがサポートされているCipherSuiteのリストとともにトンネルPACのPAC-不透明を送信します。サーバはPAC-不透明を拒否した場合、それは完全なTLSハンドシェイクに通って落下します。"
    },
    {
      "indent": 30,
      "text": "<- EAP-Request/\nEAP-Type=TEAP, V=1\n(TLS server_hello,\n TLS certificate,\n[TLS server_key_exchange,]\n[TLS certificate_request,]\n TLS server_hello_done)",
      "raw": true
    },
    {
      "indent": 6,
      "text": "EAP-Response/ EAP-Type=TEAP, V=1 ([TLS certificate,] TLS client_key_exchange, [TLS certificate_verify,] TLS change_cipher_spec, TLS finished) -> <- EAP-Request/ EAP-Type=TEAP, V=1 (TLS change_cipher_spec, TLS finished, EAP-Payload-TLV[EAP-Request/ Identity])",
      "ja": "EAP応答/ EAP-タイプ= TEAP、V = 1（[TLS証明書] TLSのclient_key_exchange、[TLSのcertificate_verify、] TLSのchange_cipher_spec、TLS終了） - > < -  EAP要求/ EAP-タイプ= TEAP、V = 1 （TLSのchange_cipher_spec、TLSは、EAP-ペイロード-TLV [EAP要求/アイデンティティ]、終了しました）"
    },
    {
      "indent": 6,
      "text": "// TLS channel established (messages sent within the TLS channel)",
      "ja": "設立// TLSチャネル（TLSチャネル内で送信されるメッセージ）"
    },
    {
      "indent": 6,
      "text": "// First EAP Payload TLV is piggybacked to the TLS Finished as Application Data and protected by the TLS tunnel.",
      "ja": "//最初のEAPペイロードTLVは、アプリケーションデータとして終了し、TLSトンネルによって保護TLSにピギーバックされます。"
    },
    {
      "indent": 6,
      "text": "EAP-Payload-TLV [EAP-Response/Identity (MyID2)]->",
      "ja": "EAP-ペイロード-TLV [EAP応答/アイデンティティ（MyID2）]  - >"
    },
    {
      "indent": 6,
      "text": "// identity protected by TLS.",
      "ja": "// TLSで保護されたアイデンティティ。"
    },
    {
      "indent": 31,
      "text": "<- EAP-Payload-TLV\n[EAP-Request/EAP-Type=X]",
      "raw": true
    },
    {
      "indent": 6,
      "text": "EAP-Payload-TLV [EAP-Response/EAP-Type=X] ->",
      "ja": "EAP-ペイロード-TLV [EAP応答/ EAP-タイプ= X]  - >"
    },
    {
      "indent": 6,
      "text": "// Method X exchanges followed by Protected Termination",
      "ja": "保護された解約が続い//メソッドX交換"
    },
    {
      "indent": 27,
      "text": "<- Intermediate-Result-TLV (Success),\n    Crypto-Binding TLV (Request),\n    Result TLV (Success)",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Intermediate-Result-TLV (Success), Crypto-Binding TLV (Response), Result-TLV (Success) ->",
      "ja": "中間結果-TLV（成功）、暗号バインディングTLV（レスポンス）は、結果-TLV（成功） - >"
    },
    {
      "indent": 6,
      "text": "// TLS channel torn down (messages sent in cleartext)",
      "ja": "取り壊さ// TLSチャネル（クリアテキストで送信されたメッセージ）"
    },
    {
      "indent": 30,
      "text": "<- EAP-Success",
      "ja": "< -  EAP-成功"
    },
    {
      "indent": 0,
      "text": "C.4. Client Authentication during Phase 1 with Identity Privacy",
      "ja": "C.4。アイデンティティプライバシーとフェーズ1の間のクライアント認証"
    },
    {
      "indent": 3,
      "text": "In the case where a certificate-based TLS handshake occurs within TEAP Phase 1 and client certificate authentication and identity privacy is desired (and therefore TLS renegotiation is being used to transmit the peer credentials in the protected TLS tunnel), the conversation will appear as follows:",
      "ja": "次のように証明書ベースのTLSハンドシェイクがTEAPフェーズ1内で発生し、クライアント証明書認証と同一のプライバシーが要求される（したがって、TLS再ネゴシエーションが保護TLSトンネル内のピアの認証情報を送信するために使用されている）場合には、会話が表示されます："
    },
    {
      "indent": 6,
      "text": "Authenticating Peer     Authenticator\n-------------------     -------------\n                       <- EAP-Request/Identity\nEAP-Response/\nIdentity (MyID1) ->",
      "raw": true
    },
    {
      "indent": 6,
      "text": "// Identity sent in the clear. May be a hint to help route the authentication request to EAP server, instead of the full user identity.",
      "ja": "//平文で送信アイデンティティ。代わりに、完全なユーザー・アイデンティティの、ルートEAPサーバに認証要求を支援するためのヒントかもしれません。"
    },
    {
      "indent": 6,
      "text": " <- EAP-Request/ EAP-Type=TEAP, V=1 (TEAP Start, S bit set, Authority-ID) EAP-Response/ EAP-Type=TEAP, V=1 (TLS client_hello)-> <- EAP-Request/ EAP-Type=TEAP, V=1 (TLS server_hello, TLS certificate, [TLS server_key_exchange,] [TLS certificate_request,] TLS server_hello_done) EAP-Response/ EAP-Type=TEAP, V=1 (TLS client_key_exchange, TLS change_cipher_spec, TLS finished) -> <- EAP-Request/ EAP-Type=TEAP, V=1 (TLS change_cipher_spec, TLS finished, EAP-Payload-TLV[EAP-Request/ Identity])",
      "ja": "< -  EAP要求/ EAP-タイプ= TEAP、V = 1（TEAP起動し、Sビットセット、機関-ID）EAP応答/ EAP-タイプ= TEAP、V = 1（TLSのCLIENT_HELLO） - > < -  EAP-要求/ EAP-タイプ= TEAP、V = 1（TLSのserver_hello、TLS証明書、[TLSのserver_key_exchange、] [TLSの証明書要求、] TLSのserver_hello_done）EAP応答/ EAP-タイプ= TEAP、V = 1（TLSのclient_key_exchange、TLS change_cipher_spec 、TLS）が終了 - > < -  EAP要求/ EAP-タイプ= TEAP、V = 1（TLSのchange_cipher_spec、TLSが終了し、EAP-ペイロード-TLV [EAP要求/アイデンティティ]）"
    },
    {
      "indent": 6,
      "text": "// TLS channel established (EAP Payload messages sent within the TLS channel)",
      "ja": "// TLSチャネル確立（TLSチャネル内で送信されたEAPペイロードメッセージ）"
    },
    {
      "indent": 6,
      "text": "// peer sends TLS client_hello to request TLS renegotiation",
      "ja": "//ピアはTLSの再交渉を要求するためのTLS CLIENT_HELLOを送信します"
    },
    {
      "indent": 6,
      "text": "TLS client_hello ->",
      "ja": "TLSはCLIENT_HELLO  - >"
    },
    {
      "indent": 6,
      "text": " <- TLS server_hello, TLS certificate, [TLS server_key_exchange,] [TLS certificate_request,] TLS server_hello_done [TLS certificate,] TLS client_key_exchange, [TLS certificate_verify,] TLS change_cipher_spec, TLS finished ->",
      "ja": "< -  TLSのserver_hello、TLS証明書、[TLS server_key_exchange、] [TLSの証明書要求、] TLSのserver_hello_done [TLS証明書] TLSのclient_key_exchange、[TLSのcertificate_verify、] TLSのchange_cipher_spec、TLSが終了 - >"
    },
    {
      "indent": 30,
      "text": "<- TLS change_cipher_spec,\n   TLS finished,\n   Crypto-Binding TLV (Request),\n   Result TLV (Success)",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Crypto-Binding TLV (Response), Result-TLV (Success)) ->",
      "ja": "暗号バインディングTLV（レスポンス）、結果-TLV（成功）） - >"
    },
    {
      "indent": 6,
      "text": "//TLS channel torn down (messages sent in cleartext)",
      "ja": "取り壊さ// TLSチャネル（クリアテキストで送信されたメッセージ）"
    },
    {
      "indent": 30,
      "text": "<- EAP-Success",
      "ja": "< -  EAP-成功"
    },
    {
      "indent": 0,
      "text": "C.5. Fragmentation and Reassembly",
      "ja": "C.5。フラグメンテーションおよび再構成"
    },
    {
      "indent": 3,
      "text": "In the case where TEAP fragmentation is required, the conversation will appear as follows:",
      "ja": "次のようにTEAPの断片化が必要とされる場合には、会話が表示されます。"
    },
    {
      "indent": 6,
      "text": "Authenticating Peer     Authenticator\n-------------------     -------------\n                        <- EAP-Request/\n                        Identity\nEAP-Response/\nIdentity (MyID) ->\n                        <- EAP-Request/\n                        EAP-Type=TEAP, V=1\n                        (TEAP Start, S bit set, Authority-ID)",
      "raw": true
    },
    {
      "indent": 6,
      "text": "EAP-Response/ EAP-Type=TEAP, V=1 (TLS client_hello)->",
      "ja": "EAP応答/ EAP-タイプ= TEAP、V = 1（TLSのCLIENT_HELLO） - >"
    },
    {
      "indent": 30,
      "text": "<- EAP-Request/\nEAP-Type=TEAP, V=1\n(TLS server_hello,\n TLS certificate,\n[TLS server_key_exchange,]\n[TLS certificate_request,]\n TLS server_hello_done)\n(Fragment 1: L, M bits set)",
      "raw": true
    },
    {
      "indent": 6,
      "text": "EAP-Response/ EAP-Type=TEAP, V=1 ->",
      "ja": "EAP応答/ EAP-タイプ= TEAP、V = 1  - >"
    },
    {
      "indent": 6,
      "text": " <- EAP-Request/ EAP-Type=TEAP, V=1 (Fragment 2: M bit set) EAP-Response/ EAP-Type=TEAP, V=1 -> <- EAP-Request/ EAP-Type=TEAP, V=1 (Fragment 3) EAP-Response/ EAP-Type=TEAP, V=1 ([TLS certificate,] TLS client_key_exchange, [TLS certificate_verify,] TLS change_cipher_spec, TLS finished) (Fragment 1: L, M bits set)->",
      "ja": "< -  EAP要求/ EAP-タイプ= TEAP、V = 1（断片2：Mビットセット）EAP応答/ EAP-タイプ= TEAP、V = 1  - > < -  EAP要求/ EAP-タイプ= TEAP、 = 1（フラグメント3）EAP応答/ EAP-タイプ= TEAP、V = 1 V（：L、Mビットが設定フラグメント1）（[TLS証明書] TLSのclient_key_exchange、[TLSのcertificate_verify、] TLSのchange_cipher_spec、TLSは終了しました） - >"
    },
    {
      "indent": 6,
      "text": " <- EAP-Request/ EAP-Type=TEAP, V=1 EAP-Response/ EAP-Type=TEAP, V=1 (Fragment 2)-> <- EAP-Request/ EAP-Type=TEAP, V=1 (TLS change_cipher_spec, TLS finished, [EAP-Payload-TLV[ EAP-Request/Identity]])",
      "ja": "< -  EAP要求/ EAP-タイプ= TEAP、V = 1 EAP応答/ EAP-タイプ= TEAP、V = 1（断片2） - > < -  EAP要求/ EAP-タイプ= TEAP、V = 1（ TLSのchange_cipher_spec、TLSが終了し、[EAP-ペイロード-TLV [EAP要求/アイデンティティ]]）"
    },
    {
      "indent": 6,
      "text": "// TLS channel established (messages sent within the TLS channel)",
      "ja": "設立// TLSチャネル（TLSチャネル内で送信されるメッセージ）"
    },
    {
      "indent": 6,
      "text": "// First EAP Payload TLV is piggybacked to the TLS Finished as Application Data and protected by the TLS tunnel.",
      "ja": "//最初のEAPペイロードTLVは、アプリケーションデータとして終了し、TLSトンネルによって保護TLSにピギーバックされます。"
    },
    {
      "indent": 6,
      "text": "EAP-Payload-TLV [EAP-Response/Identity (MyID2)]->",
      "ja": "EAP-ペイロード-TLV [EAP応答/アイデンティティ（MyID2）]  - >"
    },
    {
      "indent": 6,
      "text": "// identity protected by TLS.",
      "ja": "// TLSで保護されたアイデンティティ。"
    },
    {
      "indent": 31,
      "text": "<- EAP-Payload-TLV\n[EAP-Request/EAP-Type=X]",
      "raw": true
    },
    {
      "indent": 6,
      "text": "EAP-Payload-TLV [EAP-Response/EAP-Type=X] ->",
      "ja": "EAP-ペイロード-TLV [EAP応答/ EAP-タイプ= X]  - >"
    },
    {
      "indent": 6,
      "text": "// Method X exchanges followed by Protected Termination",
      "ja": "保護された解約が続い//メソッドX交換"
    },
    {
      "indent": 27,
      "text": "<- Intermediate-Result-TLV (Success),\n    Crypto-Binding TLV (Request),\n    Result TLV (Success)",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Intermediate-Result-TLV (Success), Crypto-Binding TLV (Response), Result-TLV (Success) ->",
      "ja": "中間結果-TLV（成功）、暗号バインディングTLV（レスポンス）は、結果-TLV（成功） - >"
    },
    {
      "indent": 6,
      "text": "// TLS channel torn down (messages sent in cleartext)",
      "ja": "取り壊さ// TLSチャネル（クリアテキストで送信されたメッセージ）"
    },
    {
      "indent": 30,
      "text": "<- EAP-Success",
      "ja": "< -  EAP-成功"
    },
    {
      "indent": 0,
      "text": "C.6. Sequence of EAP Methods",
      "ja": "C.6。 EAPメソッドの順序"
    },
    {
      "indent": 3,
      "text": "When TEAP is negotiated with a sequence of EAP method X followed by method Y, the conversation will occur as follows:",
      "ja": "TEAPを方法Y続いEAP方式Xの配列とネゴシエートされた場合、以下のように、会話が発生します。"
    },
    {
      "indent": 6,
      "text": "Authenticating Peer     Authenticator\n-------------------     -------------\n                        <- EAP-Request/\n                        Identity\nEAP-Response/\nIdentity (MyID1) ->\n                        <- EAP-Request/\n                        EAP-Type=TEAP, V=1\n                        (TEAP Start, S bit set, Authority-ID)",
      "raw": true
    },
    {
      "indent": 6,
      "text": "EAP-Response/ EAP-Type=TEAP, V=1 (TLS client_hello)->",
      "ja": "EAP応答/ EAP-タイプ= TEAP、V = 1（TLSのCLIENT_HELLO） - >"
    },
    {
      "indent": 6,
      "text": " <- EAP-Request/ EAP-Type=TEAP, V=1 (TLS server_hello, TLS certificate, [TLS server_key_exchange,] [TLS certificate_request,] TLS server_hello_done) EAP-Response/ EAP-Type=TEAP, V=1 ([TLS certificate,] TLS client_key_exchange, [TLS certificate_verify,] TLS change_cipher_spec, TLS finished) -> <- EAP-Request/ EAP-Type=TEAP, V=1 (TLS change_cipher_spec, TLS finished, Identity-Type TLV, EAP-Payload-TLV[ EAP-Request/Identity])",
      "ja": "< -  EAP要求/ EAP-タイプ= TEAP、V = 1（TLSのserver_hello、TLS証明書、[TLSのserver_key_exchange、] [TLSの証明書要求、] TLSのserver_hello_done）EAP応答/ EAP-タイプ= TEAP、V = 1（[ > < -   -  TLS証明書] TLSのclient_key_exchange、[TLSのcertificate_verify、] TLSのchange_cipher_spec、TLS）が終了EAP要求/ EAP-タイプ= TEAP、V = 1（TLSのchange_cipher_spec、TLSは、アイデンティティタイプTLV、EAP-ペイロードを終え-TLV [EAP要求/アイデンティティ]）"
    },
    {
      "indent": 6,
      "text": "// TLS channel established (messages sent within the TLS channel)",
      "ja": "設立// TLSチャネル（TLSチャネル内で送信されるメッセージ）"
    },
    {
      "indent": 6,
      "text": "// First EAP Payload TLV is piggybacked to the TLS Finished as Application Data and protected by the TLS tunnel",
      "ja": "//最初のEAPペイロードTLVは、アプリケーションデータとして完成TLSにピギーバックし、TLSトンネルによって保護されています"
    },
    {
      "indent": 6,
      "text": "Identity_Type TLV EAP-Payload-TLV [EAP-Response/Identity] ->",
      "ja": "Identity_Type TLV EAP-ペイロード-TLV [EAP応答/アイデンティティ]  - >"
    },
    {
      "indent": 28,
      "text": "  <- EAP-Payload-TLV\n[EAP-Request/EAP-Type=X]",
      "raw": true
    },
    {
      "indent": 6,
      "text": "EAP-Payload-TLV [EAP-Response/EAP-Type=X] ->",
      "ja": "EAP-ペイロード-TLV [EAP応答/ EAP-タイプ= X]  - >"
    },
    {
      "indent": 13,
      "text": "// Optional additional X Method exchanges...",
      "ja": "//オプション追加のXメソッドの交換..."
    },
    {
      "indent": 28,
      "text": " <- EAP-Payload-TLV\n[EAP-Request/EAP-Type=X]",
      "raw": true
    },
    {
      "indent": 6,
      "text": "EAP-Payload-TLV [EAP-Response/EAP-Type=X]->",
      "ja": "EAP-ペイロード-TLV [EAP応答/ EAP-タイプ= X]  - >"
    },
    {
      "indent": 30,
      "text": "<- Intermediate Result TLV (Success),\n Crypto-Binding TLV (Request),\n Identity-Type TLV,\n EAP Payload TLV [EAP-Type=Y],",
      "raw": true
    },
    {
      "indent": 6,
      "text": "// Next EAP conversation started after successful completion of previous method X. The Intermediate-Result and Crypto-Binding TLVs are sent in next packet to minimize round trips. In this example, an identity request is not sent before negotiating EAP-Type=Y.",
      "ja": "//次のEAPの会話は、ラウンドトリップを最小限にするために中間結果と暗号バインディングのTLVは、次のパケットで送信され、以前の方法Xの正常に完了した後に開始しました。この例では、識別要求はEAPタイプ= Yをネゴシエートする前に送信されません。"
    },
    {
      "indent": 6,
      "text": "// Compound MAC calculated using keys generated from EAP method X and the TLS tunnel.",
      "ja": "//化合MAC EAPメソッドX及びTLSトンネルから生成されたキーを使用して計算しました。"
    },
    {
      "indent": 6,
      "text": "Intermediate Result TLV (Success), Crypto-Binding TLV (Response), EAP-Payload-TLV [EAP-Type=Y] ->",
      "ja": "中間結果TLV（成功）、暗号バインディングTLV（応答）、EAP-ペイロード-TLV [EAP-タイプ= Y]  - >"
    },
    {
      "indent": 13,
      "text": "// Optional additional Y Method exchanges...",
      "ja": "//オプション追加のYメソッドの交換..."
    },
    {
      "indent": 29,
      "text": "<- EAP Payload TLV [\nEAP-Type=Y]",
      "raw": true
    },
    {
      "indent": 6,
      "text": "EAP Payload TLV [EAP-Type=Y] ->",
      "ja": "EAPペイロードTLV [EAP-タイプ= Y]  - >"
    },
    {
      "indent": 29,
      "text": "<- Intermediate-Result-TLV (Success),\n  Crypto-Binding TLV (Request),\n  Result TLV (Success)",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Intermediate-Result-TLV (Success), Crypto-Binding TLV (Response), Result-TLV (Success) ->",
      "ja": "中間結果-TLV（成功）、暗号バインディングTLV（レスポンス）は、結果-TLV（成功） - >"
    },
    {
      "indent": 6,
      "text": "// Compound MAC calculated using keys generated from EAP methods X and Y and the TLS tunnel. Compound keys are generated using keys generated from EAP methods X and Y and the TLS tunnel.",
      "ja": "//化合MAC EAPメソッドのXとYとTLSトンネルから生成されたキーを使用して計算しました。複合キーはEAPメソッドXとYとTLSトンネルから生成されたキーを使用して生成されます。"
    },
    {
      "indent": 6,
      "text": "// TLS channel torn down (messages sent in cleartext)",
      "ja": "取り壊さ// TLSチャネル（クリアテキストで送信されたメッセージ）"
    },
    {
      "indent": 30,
      "text": "<- EAP-Success",
      "ja": "< -  EAP-成功"
    },
    {
      "indent": 0,
      "text": "C.7. Failed Crypto-Binding",
      "ja": "C.7。暗号バインディングに失敗しました"
    },
    {
      "indent": 3,
      "text": "The following exchanges show a failed crypto-binding validation. The conversation will appear as follows:",
      "ja": "以下の交換は失敗した暗号バインディング検証を示しています。次のように会話が表示されます。"
    },
    {
      "indent": 3,
      "text": "Authenticating Peer     Authenticator\n-------------------     -------------\n                        <- EAP-Request/\n                        Identity\nEAP-Response/\nIdentity (MyID1) ->\n                        <- EAP-Request/\n                        EAP-Type=TEAP, V=1\n                        (TEAP Start, S bit set, Authority-ID)",
      "raw": true
    },
    {
      "indent": 3,
      "text": "EAP-Response/ EAP-Type=TEAP, V=1 (TLS client_hello without PAC-Opaque in SessionTicket extension)-> <- EAP-Request/ EAP-Type=TEAP, V=1 (TLS Server Key Exchange TLS Server Hello Done) EAP-Response/ EAP-Type=TEAP, V=1 -> (TLS Client Key Exchange TLS change_cipher_spec, TLS finished)",
      "ja": "EAP応答/ EAP-タイプ= TEAP、V = 1（TLSのCLIENT_HELLO PAC-不透明SessionTicket拡張になし） - > < -  EAP要求/ EAP-タイプ= TEAP、V = 1（TLSサーバ鍵交換TLSサーバーこんにちは完了）EAP応答/ EAP-タイプ= TEAP、V = 1  - >（TLSクライアント鍵交換TLSのchange_cipher_spec、TLS）が終了"
    },
    {
      "indent": 27,
      "text": "<- EAP-Request/\nEAP-Type=TEAP, V=1\n(TLS change_cipher_spec\n TLS finished)\n EAP-Payload-TLV[\n EAP-Request/Identity])",
      "raw": true
    },
    {
      "indent": 6,
      "text": "// TLS channel established (messages sent within the TLS channel)",
      "ja": "設立// TLSチャネル（TLSチャネル内で送信されるメッセージ）"
    },
    {
      "indent": 6,
      "text": "// First EAP Payload TLV is piggybacked to the TLS Finished as Application Data and protected by the TLS tunnel.",
      "ja": "//最初のEAPペイロードTLVは、アプリケーションデータとして終了し、TLSトンネルによって保護TLSにピギーバックされます。"
    },
    {
      "indent": 3,
      "text": "EAP-Payload TLV/ EAP Identity Response ->",
      "ja": "EAP-ペイロードTLV / EAPアイデンティティ応答 - >"
    },
    {
      "indent": 26,
      "text": "<-  EAP Payload TLV, EAP-Request,\n    (EAP-MSCHAPV2, Challenge)",
      "raw": true
    },
    {
      "indent": 3,
      "text": "EAP Payload TLV, EAP-Response, (EAP-MSCHAPV2, Response) ->",
      "ja": "EAPペイロードTLV、EAP-応答、（EAP-MSCHAPV2、レスポンス） - >"
    },
    {
      "indent": 26,
      "text": "<-  EAP Payload TLV, EAP-Request,\n    (EAP-MSCHAPV2, Success Request)",
      "raw": true
    },
    {
      "indent": 3,
      "text": "EAP Payload TLV, EAP-Response, (EAP-MSCHAPV2, Success Response) ->",
      "ja": "EAPペイロードTLV、EAP-応答、（EAP-MSCHAPV2、成功レスポンス） - >"
    },
    {
      "indent": 24,
      "text": "<- Intermediate-Result-TLV (Success),\n    Crypto-Binding TLV (Request),\n       Result TLV (Success)",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Intermediate-Result-TLV (Success), Result TLV (Failure) Error TLV with (Error Code = 2001) ->",
      "ja": "中間結果-TLV（成功）、TLV（失敗）エラー（エラーコード= 2001）とのTLVを結果 - >"
    },
    {
      "indent": 3,
      "text": "// TLS channel torn down (messages sent in cleartext)",
      "ja": "取り壊さ// TLSチャネル（クリアテキストで送信されたメッセージ）"
    },
    {
      "indent": 27,
      "text": "<- EAP-Failure",
      "ja": "< -  EAP-失敗"
    },
    {
      "indent": 0,
      "text": "C.8. Sequence of EAP Method with Vendor-Specific TLV Exchange",
      "ja": "C.8。ベンダー固有のTLV ExchangeとのEAP方法のシーケンス"
    },
    {
      "indent": 3,
      "text": "When TEAP is negotiated with a sequence of EAP methods followed by a Vendor-Specific TLV exchange, the conversation will occur as follows:",
      "ja": "TEAPは、ベンダー固有のTLV交換続いEAPメソッドの順序と交渉された場合、以下のように、会話が発生します。"
    },
    {
      "indent": 6,
      "text": "Authenticating Peer     Authenticator\n-------------------     -------------\n                        <- EAP-Request/\n                        Identity\nEAP-Response/\nIdentity (MyID1) ->\n                        <- EAP-Request/\n                        EAP-Type=TEAP, V=1\n                        (TEAP Start, S bit set, Authority-ID)",
      "raw": true
    },
    {
      "indent": 6,
      "text": "EAP-Response/ EAP-Type=TEAP, V=1 (TLS client_hello)-> <- EAP-Request/ EAP-Type=TEAP, V=1 (TLS server_hello, TLS certificate, [TLS server_key_exchange,] [TLS certificate_request,] TLS server_hello_done)",
      "ja": "EAP応答/ EAP-タイプ= TEAP、V = 1（TLSのCLIENT_HELLO） - > < -  EAP要求/ EAP-タイプ= TEAP、V = 1（TLSのserver_hello、TLS証明書、[TLSのserver_key_exchange、] [TLSの証明書要求、 ] TLS server_hello_done）"
    },
    {
      "indent": 6,
      "text": "EAP-Response/ EAP-Type=TEAP, V=1 ([TLS certificate,] TLS client_key_exchange, [TLS certificate_verify,] TLS change_cipher_spec, TLS finished) -> <- EAP-Request/ EAP-Type=TEAP, V=1 (TLS change_cipher_spec, TLS finished, EAP-Payload-TLV[ EAP-Request/Identity])",
      "ja": "EAP応答/ EAP-タイプ= TEAP、V = 1（[TLS証明書] TLSのclient_key_exchange、[TLSのcertificate_verify、] TLSのchange_cipher_spec、TLS終了） - > < -  EAP要求/ EAP-タイプ= TEAP、V = 1 （TLSのchange_cipher_spec、TLSは、EAP-ペイロード-TLV [EAP要求/アイデンティティ]、終了しました）"
    },
    {
      "indent": 6,
      "text": "// TLS channel established (messages sent within the TLS channel)",
      "ja": "設立// TLSチャネル（TLSチャネル内で送信されるメッセージ）"
    },
    {
      "indent": 6,
      "text": "// First EAP Payload TLV is piggybacked to the TLS Finished as Application Data and protected by the TLS tunnel.",
      "ja": "//最初のEAPペイロードTLVは、アプリケーションデータとして終了し、TLSトンネルによって保護TLSにピギーバックされます。"
    },
    {
      "indent": 6,
      "text": "EAP-Payload-TLV [EAP-Response/Identity] ->",
      "ja": "EAP-ペイロード-TLV [EAP応答/アイデンティティ]  - >"
    },
    {
      "indent": 28,
      "text": "<- EAP-Payload-TLV\n[EAP-Request/EAP-Type=X]",
      "raw": true
    },
    {
      "indent": 6,
      "text": "EAP-Payload-TLV [EAP-Response/EAP-Type=X] ->",
      "ja": "EAP-ペイロード-TLV [EAP応答/ EAP-タイプ= X]  - >"
    },
    {
      "indent": 28,
      "text": " <- EAP-Payload-TLV\n[EAP-Request/EAP-Type=X]",
      "raw": true
    },
    {
      "indent": 6,
      "text": "EAP-Payload-TLV [EAP-Response/EAP-Type=X]->",
      "ja": "EAP-ペイロード-TLV [EAP応答/ EAP-タイプ= X]  - >"
    },
    {
      "indent": 30,
      "text": "<- Intermediate Result TLV (Success),\n Crypto-Binding TLV (Request),\n Vendor-Specific TLV,",
      "raw": true
    },
    {
      "indent": 6,
      "text": "// Vendor-Specific TLV exchange started after successful completion of previous method X. The Intermediate-Result and Crypto-Binding TLVs are sent with Vendor-Specific TLV in next packet to minimize round trips.",
      "ja": "//ベンダー固有のTLV交換は、以前の方法Xの正常に完了した後に中間結果を開始し、暗号バインディングのTLVラウンドトリップを最小限にするために次のパケットでのベンダー固有のTLVで送信されます。"
    },
    {
      "indent": 6,
      "text": "// Compound MAC calculated using keys generated from EAP method X and the TLS tunnel.",
      "ja": "//化合MAC EAPメソッドX及びTLSトンネルから生成されたキーを使用して計算しました。"
    },
    {
      "indent": 6,
      "text": "Intermediate Result TLV (Success), Crypto-Binding TLV (Response), Vendor-Specific TLV ->",
      "ja": "中間結果TLV（成功）、暗号バインディングTLV（レスポンス）、ベンダー固有のTLV  - >"
    },
    {
      "indent": 10,
      "text": "// Optional additional Vendor-Specific TLV exchanges...",
      "ja": "//オプションの追加ベンダー固有のTLV交換..."
    },
    {
      "indent": 29,
      "text": "<- Vendor-Specific TLV",
      "ja": "< - ベンダー固有のTLV"
    },
    {
      "indent": 6,
      "text": "Vendor-Specific TLV -> <- Result TLV (Success)",
      "ja": "ベンダー固有のTLV  - > < - 結果TLV（成功）"
    },
    {
      "indent": 6,
      "text": "Result-TLV (Success) ->",
      "ja": "結果-TLV（成功） - >"
    },
    {
      "indent": 6,
      "text": "// TLS channel torn down (messages sent in cleartext)",
      "ja": "取り壊さ// TLSチャネル（クリアテキストで送信されたメッセージ）"
    },
    {
      "indent": 30,
      "text": "<- EAP-Success",
      "ja": "< -  EAP-成功"
    },
    {
      "indent": 0,
      "text": "C.9. Peer Requests Inner Method after Server Sends Result TLV",
      "ja": "C.9。 Serverは結果TLVを送信した後、ピアは、内部方式を要求します"
    },
    {
      "indent": 3,
      "text": "In the case where the peer is authenticated during Phase 1 and the server sends back a Result TLV but the peer wants to request another inner method, the conversation will appear as follows:",
      "ja": "ピアがフェーズ1で認証された場合、サーバー内の結果TLVを送り返すが、ピアが他の内部メソッドを要求したい、次のように、会話が表示されます。"
    },
    {
      "indent": 6,
      "text": "Authenticating Peer    Authenticator\n-------------------    -------------\n                       <- EAP-Request/Identity\nEAP-Response/\nIdentity (MyID1) ->",
      "raw": true
    },
    {
      "indent": 6,
      "text": "// Identity sent in the clear. May be a hint to help route the authentication request to EAP server, instead of the full user identity.",
      "ja": "//平文で送信アイデンティティ。代わりに、完全なユーザー・アイデンティティの、ルートEAPサーバに認証要求を支援するためのヒントかもしれません。"
    },
    {
      "indent": 6,
      "text": " <- EAP-Request/ EAP-Type=TEAP, V=1 (TEAP Start, S bit set, Authority-ID) EAP-Response/ EAP-Type=TEAP, V=1 (TLS client_hello)-> <- EAP-Request/ EAP-Type=TEAP, V=1 (TLS server_hello, TLS certificate, [TLS server_key_exchange,] [TLS certificate_request,] TLS server_hello_done)",
      "ja": "< -  EAP要求/ EAP-タイプ= TEAP、V = 1（TEAP起動し、Sビットセット、機関-ID）EAP応答/ EAP-タイプ= TEAP、V = 1（TLSのCLIENT_HELLO） - > < -  EAP-要求/ EAP-タイプ= TEAP、V = 1（TLSのserver_hello、TLS証明書、[TLSのserver_key_exchange、] [TLSの証明書要求、] TLSのserver_hello_done）"
    },
    {
      "indent": 6,
      "text": "EAP-Response/ EAP-Type=TEAP, V=1 [TLS certificate,] TLS client_key_exchange, [TLS certificate_verify,] TLS change_cipher_spec, TLS finished -> <- EAP-Request/ EAP-Type=TEAP, V=1 (TLS change_cipher_spec, TLS finished, Crypto-Binding TLV (Request), Result TLV (Success))",
      "ja": "EAP応答/ EAP-タイプ= TEAP、V = 1 [TLS証明書] TLSのclient_key_exchangeは、[TLSのcertificate_verify、] TLSのchange_cipher_specは、TLSが終了 - > < -  EAP要求/ EAP-タイプ= TEAP、V = 1（TLS change_cipher_specは、TLSは暗号バインディングTLV（リクエスト）、終了し、）TLV（成功）結果"
    },
    {
      "indent": 6,
      "text": "// TLS channel established (TLV Payload messages sent within the TLS channel)",
      "ja": "// TLSチャネル確立（TLSチャネル内で送信されるTLVペイロードメッセージ）"
    },
    {
      "indent": 7,
      "text": "Crypto-Binding TLV(Response), Request-Action TLV (Status=Failure, Action=Negotiate-EAP)->",
      "ja": "暗号バインディングTLV（レスポンス）、リクエスト・アクションTLV（ステータス=失敗、アクション=ネゴシエート-EAP） - >"
    },
    {
      "indent": 28,
      "text": "<- EAP-Payload-TLV\n    [EAP-Request/Identity]",
      "raw": true
    },
    {
      "indent": 6,
      "text": "EAP-Payload-TLV [EAP-Response/Identity] ->",
      "ja": "EAP-ペイロード-TLV [EAP応答/アイデンティティ]  - >"
    },
    {
      "indent": 28,
      "text": "<- EAP-Payload-TLV\n[EAP-Request/EAP-Type=X]",
      "raw": true
    },
    {
      "indent": 6,
      "text": "EAP-Payload-TLV [EAP-Response/EAP-Type=X] ->",
      "ja": "EAP-ペイロード-TLV [EAP応答/ EAP-タイプ= X]  - >"
    },
    {
      "indent": 28,
      "text": " <- EAP-Payload-TLV\n[EAP-Request/EAP-Type=X]",
      "raw": true
    },
    {
      "indent": 6,
      "text": "EAP-Payload-TLV [EAP-Response/EAP-Type=X]->",
      "ja": "EAP-ペイロード-TLV [EAP応答/ EAP-タイプ= X]  - >"
    },
    {
      "indent": 30,
      "text": "<- Intermediate Result TLV (Success),\n   Crypto-Binding TLV (Request),\n   Result TLV (Success)",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Intermediate Result TLV (Success), Crypto-Binding TLV (Response), Result-TLV (Success)) ->",
      "ja": "中間結果TLV（成功）、暗号バインディングTLV（レスポンス）、結果-TLV（成功）） - >"
    },
    {
      "indent": 6,
      "text": "// TLS channel torn down (messages sent in cleartext)",
      "ja": "取り壊さ// TLSチャネル（クリアテキストで送信されたメッセージ）"
    },
    {
      "indent": 30,
      "text": "<- EAP-Success",
      "ja": "< -  EAP-成功"
    },
    {
      "indent": 0,
      "text": "C.10. Channel Binding",
      "ja": "C.10。チャネルバインディング"
    },
    {
      "indent": 3,
      "text": "The following exchanges show a successful TEAP authentication with basic password authentication and channel binding using a Request-Action TLV. The conversation will appear as follows:",
      "ja": "以下の交換は、基本的なパスワード認証とチャネルが要求アクションTLVを使用して結合して成功したTEAP認証を示しています。次のように会話が表示されます。"
    },
    {
      "indent": 7,
      "text": "Authenticating Peer     Authenticator\n-------------------     -------------\n                        <- EAP-Request/\n                        Identity\nEAP-Response/\nIdentity (MyID1) ->",
      "raw": true
    },
    {
      "indent": 31,
      "text": "<- EAP-Request/\nEAP-Type=TEAP, V=1\n(TEAP Start, S bit set, Authority-ID)",
      "raw": true
    },
    {
      "indent": 7,
      "text": "EAP-Response/ EAP-Type=TEAP, V=1 (TLS client_hello with PAC-Opaque in SessionTicket extension)->",
      "ja": "EAP応答/ EAP-タイプ= TEAP、V = 1（TLSはSessionTicket拡張におけるPAC不透明でCLIENT_HELLO） - >"
    },
    {
      "indent": 31,
      "text": "<- EAP-Request/\nEAP-Type=TEAP, V=1\n(TLS server_hello,\n(TLS change_cipher_spec,\n TLS finished)",
      "raw": true
    },
    {
      "indent": 7,
      "text": "EAP-Response/ EAP-Type=TEAP, V=1 -> (TLS change_cipher_spec, TLS finished)",
      "ja": "EAP応答/ EAP-タイプ= TEAP、V = 1  - >（TLSのchange_cipher_spec、TLSは終了）"
    },
    {
      "indent": 7,
      "text": "TLS channel established (messages sent within the TLS channel)",
      "ja": "TLSチャネル確立（TLSチャネル内で送信されるメッセージ）"
    },
    {
      "indent": 30,
      "text": "<- Basic-Password-Auth-Req TLV, Challenge",
      "ja": "< - 基本-パスワード認証-REQ TLV、チャレンジ"
    },
    {
      "indent": 7,
      "text": "Basic-Password-Auth-Resp TLV, Response with both username and password) ->",
      "ja": "基本パスワード認証-RespのTLV、ユーザー名とパスワードの両方に対応） - >"
    },
    {
      "indent": 7,
      "text": "optional additional exchanges (new pin mode, password change, etc.) ...",
      "ja": "オプションの追加交換（新しいピンモード、パスワードの変更、など）..."
    },
    {
      "indent": 28,
      "text": "<- Crypto-Binding TLV (Request),\n    Result TLV (Success),",
      "raw": true
    },
    {
      "indent": 7,
      "text": "Crypto-Binding TLV(Response), Request-Action TLV (Status=Failure, Action=Process-TLV, TLV=Channel-Binding TLV)->",
      "ja": "暗号バインディングTLV（レスポンス）、リクエスト・アクションTLV（ステータス=失敗、アクション=プロセス-TLV、TLV =チャネル結合性TLV） - >"
    },
    {
      "indent": 32,
      "text": "<- Channel-Binding TLV (Response),\nResult TLV (Success),",
      "raw": true
    },
    {
      "indent": 7,
      "text": "Result-TLV (Success) ->",
      "ja": "結果-TLV（成功） - >"
    },
    {
      "indent": 7,
      "text": "TLS channel torn down (messages sent in cleartext)",
      "ja": "取り壊さTLSチャネル（クリアテキストで送信されたメッセージ）"
    },
    {
      "indent": 31,
      "text": "<- EAP-Success",
      "ja": "< -  EAP-成功"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Hao Zhou Cisco Systems 4125 Highlander Parkway Richfield, OH 44286 US",
      "ja": "ハオ周シスコシステムズ4125ハイランダーパークウェイリッチフィールド、オハイオ州44286米国"
    },
    {
      "indent": 3,
      "text": "EMail: hzhou@cisco.com",
      "ja": "メールアドレス：hzhou@cisco.com"
    },
    {
      "indent": 3,
      "text": "Nancy Cam-Winget Cisco Systems 3625 Cisco Way San Jose, CA 95134 US",
      "ja": "ナンシー・カム・ウィンゲットシスコシステムズ3625のCiscoウェイサンノゼ、CA 95134米国"
    },
    {
      "indent": 3,
      "text": "EMail: ncamwing@cisco.com",
      "ja": "メールアドレス：ncamwing@cisco.com"
    },
    {
      "indent": 3,
      "text": "Joseph Salowey Cisco Systems 2901 3rd Ave Seattle, WA 98121 US",
      "ja": "ジョセフSaloweyシスコシステムズ2901年第三アベニューシアトル、WA 98121米国"
    },
    {
      "indent": 3,
      "text": "EMail: jsalowey@cisco.com",
      "ja": "メールアドレス：jsalowey@cisco.com"
    },
    {
      "indent": 3,
      "text": "Stephen Hanna Infineon Technologies 79 Parsons Street Brighton, MA 02135 US",
      "ja": "スティーブンハンナインフィニオンテクノロジーズ79パーソンズ・ストリートブライトン、MA 02135米国"
    },
    {
      "indent": 3,
      "text": "EMail: steve.hanna@infineon.com",
      "ja": "メールアドレス：steve.hanna@infineon.com"
    }
  ]
}