{
  "title": {
    "text": "RFC 7930 - Larger Packets for RADIUS over TCP",
    "ja": "RFC 7930 - TCP上のRADIUSのための大きなパケット"
  },
  "number": 7930,
  "created_at": "2019-11-02 03:15:38.992743+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                        S. Hartman\nRequest for Comments: 7930                             Painless Security\nUpdates: 6613                                                August 2016\nCategory: Experimental\nISSN: 2070-1721",
      "raw": true
    },
    {
      "indent": 19,
      "text": "Larger Packets for RADIUS over TCP",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "The RADIUS-over-TLS experiment described in RFC 6614 has opened RADIUS to new use cases where the 4096-octet maximum size limit of a RADIUS packet proves problematic. This specification extends the RADIUS-over-TCP experiment (RFC 6613) to permit larger RADIUS packets. This specification compliments other ongoing work to permit fragmentation of RADIUS authorization information. This document registers a new RADIUS code, an action that required IESG approval.",
      "ja": "RFC 6614に記載RADIUSオーバーTLS実験は、RADIUSパケットの4096オクテットの最大サイズの制限が問題証明新しいユースケースにRADIUSを開きました。この仕様は、より大きなRADIUSパケットを許可するRADIUSオーバーTCP実験（RFC 6613）に延びています。この仕様は、RADIUS認証情報の断片化を可能にするために、他の進行中の作業を補完します。この文書は、新しいRADIUSコード、IESGの承認を必要なアクションを登録します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for examination, experimental implementation, and evaluation.",
      "ja": "このドキュメントはインターネット標準化過程仕様ではありません。それは、検査、実験的な実装、および評価のために公開されています。"
    },
    {
      "indent": 3,
      "text": "This document defines an Experimental Protocol for the Internet community. This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Not all documents approved by the IESG are a candidate for any level of Internet Standard; see Section 2 of RFC 7841.",
      "ja": "この文書は、インターネットコミュニティのためにExperimentalプロトコルを定義します。このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。 IESGによって承認されていないすべての文書がインターネットStandardのどんなレベルの候補です。 RFC 7841のセクション2を参照してください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc7930.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc7930で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2016 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2016 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3\n  1.1.  Requirements Notation . . . . . . . . . . . . . . . . . .   3\n2.  Changes to Packet Processing  . . . . . . . . . . . . . . . .   4\n  2.1.  Status-Server Considerations  . . . . . . . . . . . . . .   4\n3.  Forward and Backward Compatibility  . . . . . . . . . . . . .   5\n  3.1.  Rationale . . . . . . . . . . . . . . . . . . . . . . . .   6\n  3.2.  Discovery . . . . . . . . . . . . . . . . . . . . . . . .   7\n4.  Protocol-Error Code . . . . . . . . . . . . . . . . . . . . .   7\n5.  Too Big Response  . . . . . . . . . . . . . . . . . . . . . .   7\n6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   8\n7.  Security Considerations . . . . . . . . . . . . . . . . . . .   9\n8.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   9\n  8.1.  Normative References  . . . . . . . . . . . . . . . . . .   9\n  8.2.  Informative References  . . . . . . . . . . . . . . . . .  10\nAcknowledgements  . . . . . . . . . . . . . . . . . . . . . . . .  10\nAuthor's Address  . . . . . . . . . . . . . . . . . . . . . . . .  10",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "The experiment with Remote Authentication Dial-In User Service (RADIUS) over Transport Layer Security (TLS) [RFC6614] provides strong confidentiality and integrity for RADIUS [RFC2865]. This enhanced security has opened new opportunities for using RADIUS to convey additional authorization information. As an example, [RFC7833] describes a mechanism for using RADIUS to carry Security Assertion Markup Language (SAML) messages in RADIUS. Many attributes carried in these SAML messages will require confidentiality or integrity such as that provided by TLS.",
      "ja": "リモート認証ダイヤルインユーザーサービス（RADIUS）トランスポート層セキュリティ（TLS）を超える[RFC6614]での実験では、RADIUS [RFC2865]のための強力な機密性と整合性を提供します。この強化されたセキュリティは、追加の認証情報を伝えるためにRADIUSを使用するための新しい機会をオープンしました。一例として、[RFC7833]はRADIUSでのSAML（Security Assertion Markup Language）メッセージを運ぶためにRADIUSを使用するための機構を記載しています。これらのSAMLメッセージで運ばれた多くの属性は、TLSによって提供されるような機密性や完全性を必要とします。"
    },
    {
      "indent": 3,
      "text": "These new use cases involve carrying additional information in RADIUS packets. The maximum packet length of 4096 octets is proving insufficient for some SAML messages and for other structures that may be carried in RADIUS.",
      "ja": "これらの新しいユースケースは、RADIUSパケットに追加情報を運ぶ伴います。 4096オクテットの最大パケット長は、いくつかのSAMLメッセージおよびRADIUSで実施することができる他の構造のために不十分証明されています。"
    },
    {
      "indent": 3,
      "text": "One approach is to fragment a RADIUS message across multiple packets at the RADIUS layer. RADIUS fragmentation [RFC7499] provides a mechanism to split authorization information across multiple RADIUS messages. That mechanism is necessary in order to split authorization information across existing unmodified proxies.",
      "ja": "一つのアプローチは、RADIUSレイヤで複数のパケットを横切ってRADIUSメッセージを断片化することです。 RADIUSフラグメンテーション[RFC7499]は複数のRADIUSメッセージを横切って認証情報を分割するための機構を提供します。そのメカニズムは、既存の未修正のプロキシ間で認証情報を分割するために必要です。"
    },
    {
      "indent": 3,
      "text": "However, there are some significant disadvantages to RADIUS fragmentation. First, RADIUS is a lock-step protocol, and only one fragment can be in transit at a time as part of a given request. Also, there is no current mechanism to discover the Path Maximum Transmission Unit (PMTU) across the entire path that the fragment will travel. As a result, fragmentation is likely both at the RADIUS layer and at the transport layer. When TCP is used, much better transport characteristics can be achieved by fragmentation only at the TCP layer. This specification provides a mechanism to achieve these better transport characteristics when TCP is used. As part of this specification, a new RADIUS code is registered.",
      "ja": "しかし、RADIUSの断片化にはいくつかの重大な欠点があります。まず、RADIUSは、ロックステッププロトコルであり、唯一の断片は、所与の要求の一部として時トランジットであることができます。また、断片が移動する経路全体を横切ってパス最大転送単位（PMTU）を発見するためには電流メカニズムは存在しません。その結果、フラグメンテーションは、RADIUS層でトランスポート層の両方可能性があります。 TCPを用いた場合、はるかに良好な輸送特性は、TCPレイヤでの断片化することによって達成することができます。この仕様は、TCPが使用されているこれらの優れた輸送特性を達成するためのメカニズムを提供します。本明細書の一部として、新しいRADIUSコードが登録されています。"
    },
    {
      "indent": 3,
      "text": "This specification is published as an Experimental specification because the TCP extensions to RADIUS are currently experimental. The need for this specification arises from operational experience with the TCP extensions. However, this specification introduces no new experimental evaluation criteria beyond those in the base TCP specification; this specification can be evaluated along with that one for advancement on the Standards Track.",
      "ja": "RADIUSへのTCP拡張は現在実験しているので、この仕様は実験的仕様として公開されています。この仕様の必要性はTCP拡張と運用経験から生じます。しかし、この仕様は、ベースTCP仕様のものを超えた全く新しい実験的な評価基準を導入していません。この仕様は、標準化過程の進歩のための1つに沿って評価することができます。"
    },
    {
      "indent": 0,
      "text": "1.1. Requirements Notation",
      "section_title": true,
      "ja": "1.1。要件表記"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はあります[RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "2. Changes to Packet Processing",
      "section_title": true,
      "ja": "パケット処理2.変更"
    },
    {
      "indent": 3,
      "text": "The maximum length of a RADIUS message is increased from 4096 to 65535. A RADIUS Server implementing this specification MUST be able to receive a RADIUS packet of maximum length. Servers MAY have a maximum size over which they choose to return an error, as discussed in Section 5, rather than processing a received packet; this size MUST be at least 4096 octets.",
      "ja": "RADIUSメッセージの最大長は、65535 A RADIUSサーバーは最大長のRADIUSパケットを受信できなければならないこの仕様の実装4096から増加しています。第5節で述べたように、サーバではなく、受信したパケットを処理するよりも、彼らはエラーを返すことを選択した上で最大の大きさを有していてもよいです。このサイズは、少なくとも4096個のオクテットでなければなりません。"
    },
    {
      "indent": 3,
      "text": "Clients implementing this specification MUST be able to receive a RADIUS packet of maximum length; that is, clients MUST NOT close a TCP connection simply because a large packet is sent over it. Clients MAY include the Response-Length attribute defined in Section 6 to indicate the maximum size of a packet that they can successfully process. Clients MAY silently discard a packet greater than some configured size; this size MUST be at least 4096 octets. Clients MUST NOT retransmit an unmodified request whose response is larger than the client can process, as subsequent responses will likely continue to be too large.",
      "ja": "この仕様を実装するクライアントは、最大長のRADIUSパケットを受信できなければなりません。大きなパケットがそれを介して送信されるので、つまり、クライアントは単純にTCPコネクションを閉じてはなりません。クライアントは、彼らが成功したプロセスをできるパケットの最大サイズを示すために、第6節で定義された応答長の属性を含むかもしれません。クライアントは黙っていくつか設定されたサイズよりも大きなパケットを捨てるかもしれ。このサイズは、少なくとも4096個のオクテットでなければなりません。その後の応答はおそらく大きすぎであり続けるようクライアントは、その応答を処理できるクライアントよりも大きくなっている無修正要求を再送してはなりません。"
    },
    {
      "indent": 3,
      "text": "Proxies MUST be able to receive a RADIUS packet of maximum length without closing the TCP connection. Proxies SHOULD be able to process and forward packets of maximum length. When a proxy receives a request over a transport with a 4096-octet maximum length and the proxy forwards that request over a transport with a larger maximum length, the proxy MUST include the Response-Length attribute with a value of 4096.",
      "ja": "プロキシは、TCP接続を閉じることなく、最大長のRADIUSパケットを受信できなければなりません。プロキシは、最大長のパケットを処理し、転送することができるべきです。プロキシは4096オクテットの最大長さとより大きな最大長さを有するトランスポートを介して要求プロキシ転送とトランスポートを介して要求を受信すると、プロキシは、4096の値を持つレスポンス長の属性を含まなければなりません。"
    },
    {
      "indent": 0,
      "text": "2.1. Status-Server Considerations",
      "section_title": true,
      "ja": "2.1。ステータス・サーバーの考慮事項"
    },
    {
      "indent": 3,
      "text": "This section extends processing of Status-Server messages as described in Sections 4.1 and 4.2 of [RFC5997].",
      "ja": "セクション4.1と[RFC5997]の4.2に記載されているように、このセクションでは、ステータス・サーバ・メッセージの処理を拡張します。"
    },
    {
      "indent": 3,
      "text": "Clients implementing this specification SHOULD include the Response-Length attribute in Status-Server requests. Servers are already required to ignore unknown attributes received in this message. By including the attribute, the client indicates how large of a response it can process to its Status-Server request. It is very unlikely that a response to Status-Server is greater than 4096 octets. However, the client also indicates support for this specification, which triggers the server behavior below.",
      "ja": "この仕様を実装するクライアントは、ステータス・サーバーのリクエストでレスポンス長属性を含めるべきです。サーバはすでにこのメッセージで受信し、未知の属性を無視する必要があります。属性を含めることで、クライアントは、そのステータス・サーバー要求に処理できる応答の方法を大示します。ステータス・サーバーへの応答が4096オクテットより大きいことはほとんどありません。ただし、クライアントは、以下のサーバの動作をトリガーこの仕様のサポートを示しています。"
    },
    {
      "indent": 3,
      "text": "If a server implementing this specification receives a Response-Length attribute in a Status-Server request, it MUST include a Response-Length attribute indicating the maximum size request it can process in its response to the Status-Server request.",
      "ja": "この仕様を実装するサーバはステータス・サーバーの要求で応答長の属性を受信した場合、それはステータス・サーバーの要求への応答で処理できる最大サイズの要求を示すレスポンス長の属性を含まなければなりません。"
    },
    {
      "indent": 0,
      "text": "3. Forward and Backward Compatibility",
      "section_title": true,
      "ja": "3.前方と後方互換性"
    },
    {
      "indent": 3,
      "text": "An implementation of [RFC6613] will silently discard any RADIUS packet larger than 4096 octets and will close the TCP connection. This section provides guidelines for interoperability with these implementations. These guidelines are stated at the SHOULD level. In some environments, support for large packets will be important enough that roaming or other agreements will mandate their support. In these environments, all implementations might be required to support this specification, thus removing the need for interoperability with RFC 6613. It is likely that these guidelines will be relaxed to the MAY level and support for this specification made a requirement if RADIUS over TLS and TCP are moved to the Standards Track in the future.",
      "ja": "[RFC6613]の実装は静かに4096オクテットより大きな任意のRADIUSパケットを破棄し、TCP接続を閉じます。このセクションでは、これらの実装との相互運用性のためのガイドラインを提供します。これらのガイドラインは、SHOULDレベルで計上されています。一部の環境では、大きなパケットのサポートは、ローミングやその他の契約は彼らのサポートを強制することは十分に重要になります。これらの環境では、すべての実装は、このようにこれらのガイドラインは、この仕様のためMAYレベルおよびサポートに緩和TLS上でRADIUS場合の要件を作ったとされる可能性があるRFC 6613.との相互運用性の必要性を取り除く、この仕様をサポートするために必要になる場合がありますTCPは、将来的には標準化過程に移動されます。"
    },
    {
      "indent": 3,
      "text": "Clients SHOULD provide configuration for the maximum size of a request sent to each server. Servers SHOULD provide configuration for the maximum size of a response sent to each client. If dynamic discovery mechanisms are supported, configuration SHOULD be provided for the default maximum size of RADIUS packets sent to clients and servers. If an implementation provides more granular configuration for some classes of dynamic resources, then the implementation SHOULD also provide configuration of default maximum packet sizes at the same granularity. As an example, an implementation that provided granular configuration for resources using a particular trust anchor or belonging to a particular roaming consortium SHOULD provide default packet size configuration at the same granularity.",
      "ja": "クライアントは、各サーバーに送信された要求の最大サイズの設定を提供する必要があります。サーバーは、各クライアントに送信される応答の最大サイズの設定を提供する必要があります。動的な検出メカニズムがサポートされている場合は、設定がクライアントとサーバに送信されたRADIUSパケットのデフォルトの最大サイズのために提供されるべきです。実装は、動的なリソースのいくつかのクラスのためのより細かい設定を提供する場合、その実装も同じ粒度で、デフォルトの最大パケットサイズの構成を提供する必要があります。例として、特定のトラストアンカーを使用したり、特定のローミングコンソーシアムに属するリソースのための粒状のコンフィギュレーションを提供する実装は、同じ粒度でデフォルトのパケットサイズ構成を提供する必要があります。"
    },
    {
      "indent": 3,
      "text": "If a client sends a request larger than 4096 octets and the TCP connection is closed without a response, the client SHOULD treat the request as if a \"Request Too Big\" error (Section 5) specifying a maximum size of 4096 is received. Clients or proxies sending multiple requests over a single TCP connection without waiting for responses SHOULD implement capability discovery as discussed in Section 3.2.",
      "ja": "クライアントが4096オクテットより大きく、TCP接続が応答せずに閉じられたリクエストを送信した場合4096の最大サイズを指定し、「要求が大きすぎます」というエラー（第5節）を受信したかのように、クライアントが要求を扱うべきです。 3.2節で述べたように応答を待たずに、単一のTCP接続で複数の要求を送信するクライアントやプロキシは、能力発見を実装する必要があります。"
    },
    {
      "indent": 3,
      "text": "By default, a server SHOULD NOT generate a response larger than 4096 octets. The Response-Length attribute MAY be included in a request to indicate that larger responses are acceptable. Other attributes or configurations MAY be used as an indicator that large responses are likely to be acceptable.",
      "ja": "デフォルトでは、サーバーは4096オクテットより大きな応答を生成するべきではありません。レスポンス・長さ属性は、より大きな応答が許容可能であることを示すために、要求に含まれるかもしれません。他の属性または構成は、大規模な応答が許容である可能性があることを示す指標として使用されるかもしれません。"
    },
    {
      "indent": 3,
      "text": "A proxy that implements both this specification and RADIUS fragmentation [RFC7499] SHOULD use RADIUS fragmentation when the following conditions are met:",
      "ja": "以下の条件が満たされたとき、本明細書及びRADIUSの断片の両方を実装するプロキシ[RFC7499]はRADIUSの断片を使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "1. A RADIUS packet is being forwarded towards a next hop whose configuration does not support a packet that large.",
      "ja": "1. A RADIUSパケットは、その構成大きなパケットをサポートしていない次のホップに向かって転送されています。"
    },
    {
      "indent": 3,
      "text": "2. RADIUS fragmentation can be used for the packet in question.",
      "section_title": true,
      "ja": "2. RADIUSの断片化が問題になっているパケットのために使用することができます。"
    },
    {
      "indent": 0,
      "text": "3.1. Rationale",
      "section_title": true,
      "ja": "3.1。理由"
    },
    {
      "indent": 3,
      "text": "The interoperability challenge appears at first significant. This specification proposes to introduce behavior where new implementations will fail to function with existing implementations.",
      "ja": "相互運用性の課題は、最初の重要なに表示されます。この仕様は、新しい実装は、既存の実装と機能しないだろう行動を導入することを提案しています。"
    },
    {
      "indent": 3,
      "text": "However, these capabilities are introduced to support new use cases. If an implementation has 10000 octets of attributes to send, it cannot, in general, trim down the response to something that can be sent. Under this specification, a large packet would be generated that will be silently discarded by an existing implementation. Without this specification, no packet is generated because the required attributes cannot be sent.",
      "ja": "しかし、これらの機能は、新しいユースケースをサポートするために導入されています。実装は送信するために、属性の10000個のオクテットを持っている場合、それは、一般的には、送信することができます何かに対する応答をダウントリムすることはできません。この仕様では、大きなパケットは黙って、既存の実装によって破棄されますが生成されます。必要な属性を送信することができないので、この仕様がないと、パケットが生成されません。"
    },
    {
      "indent": 3,
      "text": "The biggest risk to interoperability would be if requests and responses are expanded to include additional information that is not strictly necessary. So, avoiding creating situations where large packets are sent to existing implementations is mostly an operational matter. Interoperability is most impacted when the size of packets in existing use cases is significantly increased and least impacted when large packets are used for new use cases where the deployment is likely to require updated RADIUS implementations.",
      "ja": "要求と応答は厳密には必要ではない付加的な情報を含むように拡張されている場合は、相互運用性への最大のリスクは次のようになります。だから、大きなパケットが既存の実装に送信さ作成状況を回避することはほとんど運用の問題です。既存のユースケース内のパケットのサイズが大幅に増加し、大きなパケットは、展開が更新されたRADIUS実装を必要とする可能性がある新しいユースケースのために使用されたときに少なくとも影響を受けているときの相互運用性が最も影響を受けています。"
    },
    {
      "indent": 3,
      "text": "There is a special challenge for proxies or clients with a high request volume. When an implementation of RFC 6613 receives a packet that is too large, it closes the connection and does not respond to any requests in process. Such a client would lose requests and might find it difficult to distinguish \"Request Too Big\" situations from other failures. In these cases, the discovery mechanism described in Section 3.2 can be used.",
      "ja": "高い要求のボリュームとプロキシやクライアントのための特別な課題があります。 RFC 6613の実装が大きすぎるパケットを受信すると、接続を閉じ、プロセス内のすべての要求に応答しません。このようなクライアントが要求を失うことになるし、それが困難な他の障害からの「リクエストが大きすぎ」な状況を区別するために見つけるかもしれません。これらのケースでは、3.2節で説明した検出メカニズムを使用することができます。"
    },
    {
      "indent": 3,
      "text": "Also, RFC 6613 is an experiment. Part of running that experiment is to evaluate whether additional changes are required to RADIUS. A lower bar for interoperability should apply to changes to Experimental protocols than Standard protocols.",
      "ja": "また、RFC 6613は実験です。その実験を実行しているの一部は、追加の変更がRADIUSに必要とされているかどうかを評価することです。相互運用性のために下のバーは、標準的なプロトコルより実験的なプロトコルへの変更を適用する必要があります。"
    },
    {
      "indent": 3,
      "text": "This specification provides good facilities to enable implementations to understand packet size when proxying to/from Standards Track UDP RADIUS.",
      "ja": "この仕様はにプロキシする場合/標準化過程UDP RADIUSからのパケットサイズを理解するための実装を可能にするための優れた機能を提供します。"
    },
    {
      "indent": 0,
      "text": "3.2. Discovery",
      "section_title": true,
      "ja": "3.2。発見"
    },
    {
      "indent": 3,
      "text": "As discussed in Section 2.1, a client MAY send a Status-Server message to discover whether an authentication or accounting server supports this specification. The client includes a Response-Length attribute; this signals the server to include a Response-Length attribute indicating the maximum packet size the server can process. In this one instance, Response-Length indicates the size of a request that can be processed rather than a response.",
      "ja": "2.1節で述べたように、クライアントは、認証やアカウンティングサーバはこの仕様をサポートしているかどうかを発見するためにステータス・サーバーのメッセージを送信することができます。クライアントは、応答長の属性を含み、これは、サーバが処理できる最大パケットサイズを示す応答長の属性を含むようにサーバに信号を送ります。この一例では、応答長は応答ではなく、処理することができる要求のサイズを示しています。"
    },
    {
      "indent": 0,
      "text": "4. Protocol-Error Code",
      "section_title": true,
      "ja": "4.プロトコル・エラーコード"
    },
    {
      "indent": 3,
      "text": "This document defines a new RADIUS code, 52, called Protocol-Error. This packet code may be used in response to any request packet, such as Access-Request, Accounting-Request, CoA-Request, or Disconnect-Request. It is a response packet sent by a server to a client. The packet indicates to the client that the server is unable to process the request for some reason.",
      "ja": "この文書では、プロトコル・エラーと呼ばれる新しいRADIUSコード、52を、定義されています。このパケットコードは、アクセス要求、アカウンティング要求、アシルCoA  - 要求、又は切断-要求として、任意の要求パケットに応答して使用することができます。これは、サーバからクライアントに送信された応答パケットです。パケットは、サーバが何らかの理由で要求を処理することができないクライアントに示します。"
    },
    {
      "indent": 3,
      "text": "A Protocol-Error packet MUST contain an Original-Packet-Code attribute, along with an Error-Cause attribute. Other attributes MAY be included if desired. The Original-Packet-Code contains the code from the request that generated the protocol error so that clients can disambiguate requests with different codes and the same ID. Regardless of the original packet code, the RADIUS Server calculates the Message-Authenticator attribute as if the original packet were an Access-Request packet. The identifier is copied from the original request.",
      "ja": "プロトコル・エラー・パケットは、エラー原因の属性と一緒に、オリジナル・パケットCode属性を含まなければなりません。必要に応じて他の属性は含まれるかもしれません。オリジナル・パケットコードは、クライアントが異なるコードと同一のIDを持つリクエストを明確にすることができるようにプロトコルエラーを生成した要求からのコードを含んでいます。元のパケットは、アクセス要求パケットであるかのように関係なく、元のパケットのコードの、RADIUSサーバはMessage-Authenticatorアトリビュートを計算します。識別子は、元の要求からコピーされます。"
    },
    {
      "indent": 3,
      "text": "Clients processing Protocol-Error MUST ignore unknown or unexpected attributes.",
      "ja": "プロトコル・エラーを処理するクライアントは、不明または予期しない属性を無視しなければなりません。"
    },
    {
      "indent": 3,
      "text": "This RADIUS code is hop by hop. Proxies MUST NOT forward a Protocol-Error packet they receive.",
      "ja": "このRADIUSコードはホップでホップです。プロキシは、彼らが受け取るプロトコル・エラーパケットを転送してはなりません。"
    },
    {
      "indent": 0,
      "text": "5. Too Big Response",
      "section_title": true,
      "ja": "5.トゥービッグレスポンス"
    },
    {
      "indent": 3,
      "text": "When a RADIUS Server receives a request that is larger than can be processed, it generates a Protocol-Error response as follows:",
      "ja": "RADIUSサーバが処理できるよりも大きい要求を受信すると、以下のように、それはプロトコル・エラー応答を生成します。"
    },
    {
      "indent": 6,
      "text": "The code is Protocol-Error.",
      "ja": "コードは、プロトコル・エラーです。"
    },
    {
      "indent": 6,
      "text": "The Response-Length attribute MUST be included and its value is the maximum size of request that will be processed.",
      "ja": "レスポンス長属性が含まれなければならないし、その値が処理される要求の最大サイズです。"
    },
    {
      "indent": 6,
      "text": "The Error-Cause attribute is included with a value of 601.",
      "ja": "エラー原因の属性は、601の値に含まれています。"
    },
    {
      "indent": 6,
      "text": "The Original-Packet-Code attribute is copied from the request.",
      "ja": "オリジナル・パケット・コード属性が要求からコピーされます。"
    },
    {
      "indent": 3,
      "text": "Clients will not typically be able to adjust and resend requests when this error is received. In some cases, the client can fall back to RADIUS fragmentation. In other cases, this code will provide for better client error reporting and will avoid retransmitting requests guaranteed to fail.",
      "ja": "クライアントは一般的に調整し、このエラーを受信したときに要求を再送信することはできません。いくつかのケースでは、クライアントはバックRADIUSの断片化に落ちることができます。他の例では、このコードは、より良いクライアントエラー報告のために提供し、確実にエラーに再送要求を回避します。"
    },
    {
      "indent": 0,
      "text": "6. IANA Considerations",
      "section_title": true,
      "ja": "6. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "A new RADIUS Packet Type Code is registered in the \"RADIUS Packet Type Codes\" registry discussed in Section 2.1 of RFC 3575 [RFC3575]. The name is \"Protocol-Error\" and the code is 52.",
      "ja": "新しいRADIUSパケットタイプコードは、RFC 3575 [RFC3575]のセクション2.1で説明した「RADIUSパケットタイプコード」レジストリに登録されています。名前は、「プロトコル・エラー」で、コードは52です。"
    },
    {
      "indent": 3,
      "text": "The following RADIUS attribute Type values [RFC3575] are assigned. The assignment rules in Section 10.3 of [RFC6929] are used.",
      "ja": "次のRADIUS属性タイプ値[RFC3575]は割り当てられています。 [RFC6929]のセクション10.3に割り当て規則が使用されています。"
    },
    {
      "indent": 3,
      "text": "+----------------------+-----------+--------------------------------+\n| Name                 | Attribute | Description                    |\n+----------------------+-----------+--------------------------------+\n| Response-Length      | 241.3     | An attribute of type \"integer\" |\n|                      |           | per Section 5 of RFC 2865      |\n|                      |           | containing maximum response    |\n|                      |           | length.                        |\n|                      |           |                                |\n| Original-Packet-Code | 241.4     | An integer attribute           |\n|                      |           | containing the code from a     |\n|                      |           | packet resulting in a          |\n|                      |           | Protocol-Error response.       |\n+----------------------+-----------+--------------------------------+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The Response-Length attribute MAY be included in any RADIUS request. In this context, it indicates the maximum length of a response the client is prepared to receive. Values are between 4096 and 65535. The attribute MAY also be included in a response to a Status-Server message. In this case, the attribute indicates the maximum size RADIUS request that is permitted.",
      "ja": "レスポンス・長さ属性は、任意のRADIUS要求に含まれるかもしれません。この文脈では、クライアントが受信するように調製された応答の最大長さを示します。値は4096〜65535の属性もステータス・サーバーのメッセージへの応答に含まれるかもしれませいます。この場合、属性は、許可された最大サイズのRADIUS要求を示します。"
    },
    {
      "indent": 3,
      "text": "A new Error-Cause value is registered in the \"Values for RADIUS Attribute 101, Error-Cause Attribute\" registry at <http://www.iana.org/assignments/radius-types> for \"Response Too Big\" with value 601. The range of valid values for the Error-Cause attribute in the \"Values for RADIUS Attribute 101, Error-Cause Attribute\" registry originally defined in RFC 5176 are extended. Two new ranges are defined:",
      "ja": "新しいError-Cause値は、値601を持つ「レスポンスが大きすぎ」のための<http://www.iana.org/assignments/radius-types>で「RADIUSの値101を属性、エラー原因の属性」レジストリに登録されています。元々RFC 5176で定義されたレジストリ「RADIUS属性101、エラーの原因の属性の値」のエラー原因の属性の有効な値の範囲が拡張されています。二つの新しい範囲が定義されています。"
    },
    {
      "indent": 6,
      "text": "6xx fatal errors committed by a RADIUS server",
      "ja": "RADIUSサーバによって犯した6xx致命的なエラー"
    },
    {
      "indent": 6,
      "text": "7xx fatal errors committed by a RADIUS client",
      "ja": "RADIUSクライアントによってコミット7XX致命的なエラー"
    },
    {
      "indent": 0,
      "text": "7. Security Considerations",
      "section_title": true,
      "ja": "7.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "This specification updates [RFC6613] and will be used with [RFC6614]. When used over plain TCP, this specification creates new opportunities for an on-path attacker to impact availability. These attacks can be entirely mitigated by using TLS. If these attacks are acceptable, then this specification can be used over TCP without TLS.",
      "ja": "この仕様の更新[RFC6613]と[RFC6614]で使用されます。平野TCP上で使用する場合、この仕様は、可用性に影響を与える上のパス攻撃者のための新しい機会を作成します。これらの攻撃は完全にTLSを使用することによって緩和することができます。これらの攻撃は許容されている場合は、この仕様では、TLSなしでTCP上で使用することができます。"
    },
    {
      "indent": 0,
      "text": "8. References",
      "section_title": true,
      "ja": "8.参照文献"
    },
    {
      "indent": 0,
      "text": "8.1. Normative References",
      "section_title": true,
      "ja": "8.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <http://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<http://www.rfc-editor.org/info/ RFC2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC2865] Rigney, C., Willens, S., Rubens, A., and W. Simpson, \"Remote Authentication Dial In User Service (RADIUS)\", RFC 2865, DOI 10.17487/RFC2865, June 2000, <http://www.rfc-editor.org/info/rfc2865>.",
      "ja": "[RFC2865] Rigney、C.、ウィレンス、S.、ルーベン、A.、およびW.シンプソン、RFC 2865 \"ユーザーサービス（RADIUS）でリモート認証ダイヤル\"、DOI 10.17487 / RFC2865、2000年6月、<のhttp：/ /www.rfc-editor.org/info/rfc2865>。"
    },
    {
      "indent": 3,
      "text": "[RFC3575] Aboba, B., \"IANA Considerations for RADIUS (Remote Authentication Dial In User Service)\", RFC 3575, DOI 10.17487/RFC3575, July 2003, <http://www.rfc-editor.org/info/rfc3575>.",
      "ja": "[RFC3575] Aboba、B.、 \"RADIUSのためのIANAの考慮事項（ユーザサービスにおけるリモート認証ダイヤル）\"、RFC 3575、DOI 10.17487 / RFC3575、2003年7月、<http://www.rfc-editor.org/info/rfc3575 >。"
    },
    {
      "indent": 3,
      "text": "[RFC5997] DeKok, A., \"Use of Status-Server Packets in the Remote Authentication Dial In User Service (RADIUS) Protocol\", RFC 5997, DOI 10.17487/RFC5997, August 2010, <http://www.rfc-editor.org/info/rfc5997>.",
      "ja": "[RFC5997] DeKok、A.、 \"ユーザーサービス（RADIUS）プロトコルでリモート認証ダイヤルのStatus-Serverのパケットの使用\"、RFC 5997、DOI 10.17487 / RFC5997、2010年8月、<のhttp：//www.rfc-editor .ORG /情報/ rfc5997>。"
    },
    {
      "indent": 3,
      "text": "[RFC6613] DeKok, A., \"RADIUS over TCP\", RFC 6613, DOI 10.17487/RFC6613, May 2012, <http://www.rfc-editor.org/info/rfc6613>.",
      "ja": "[RFC6613] DeKok、A.、 \"TCP上のRADIUS\"、RFC 6613、DOI 10.17487 / RFC6613、2012年5月、<http://www.rfc-editor.org/info/rfc6613>。"
    },
    {
      "indent": 3,
      "text": "[RFC6614] Winter, S., McCauley, M., Venaas, S., and K. Wierenga, \"Transport Layer Security (TLS) Encryption for RADIUS\", RFC 6614, DOI 10.17487/RFC6614, May 2012, <http://www.rfc-editor.org/info/rfc6614>.",
      "ja": "[RFC6614]冬、S.、マッコーリー、M.、Venaas、S.、およびK. Wierenga、 \"RADIUSのためのトランスポート層セキュリティ（TLS）暗号化\"、RFC 6614、DOI 10.17487 / RFC6614、2012年5月、<のhttp：/ /www.rfc-editor.org/info/rfc6614>。"
    },
    {
      "indent": 3,
      "text": "[RFC6929] DeKok, A. and A. Lior, \"Remote Authentication Dial In User Service (RADIUS) Protocol Extensions\", RFC 6929, DOI 10.17487/RFC6929, April 2013, <http://www.rfc-editor.org/info/rfc6929>.",
      "ja": "[RFC6929] DeKok、A.とA. LIOR、RFC 6929、DOI 10.17487 / RFC6929、2013年4月、<http://www.rfc-editor.org/ \"ユーザーサービス（RADIUS）プロトコルの拡張機能でリモート認証ダイヤル\"情報/ rfc6929>。"
    },
    {
      "indent": 0,
      "text": "8.2. Informative References",
      "section_title": true,
      "ja": "8.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[RFC7499] Perez-Mendez, A., Ed., Marin-Lopez, R., Pereniguez-Garcia, F., Lopez-Millan, G., Lopez, D., and A. DeKok, \"Support of Fragmentation of RADIUS Packets\", RFC 7499, DOI 10.17487/RFC7499, April 2015, <http://www.rfc-editor.org/info/rfc7499>.",
      "ja": "[RFC7499]ペレス - メンデス、A.編、マリン - ロペス、R.、Pereniguez・ガルシア、F.、ロペス・ミラン、G.、ロペス、D.、およびA. DeKok、「RADIUSの断片化のサポートパケット」、RFC 7499、DOI 10.17487 / RFC7499、2015年4月、<http://www.rfc-editor.org/info/rfc7499>。"
    },
    {
      "indent": 3,
      "text": "[RFC7833] Howlett, J., Hartman, S., and A. Perez-Mendez, Ed., \"A RADIUS Attribute, Binding, Profiles, Name Identifier Format, and Confirmation Methods for the Security Assertion Markup Language (SAML)\", RFC 7833, DOI 10.17487/RFC7833, May 2016, <http://www.rfc-editor.org/info/rfc7833>.",
      "ja": "[RFC7833]ハウレット、J.、ハルトマン、S.、およびA.ペレス - メンデス、編、「RADIUS属性、結合、プロフィール、名前識別子フォーマット、およびセキュリティアサーションマークアップ言語（SAML）の確認方法」、 RFC 7833、DOI 10.17487 / RFC7833、2016年5月、<http://www.rfc-editor.org/info/rfc7833>。"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Sam Hartman's time on this document was funded by JANET as part of Project Moonshot.",
      "ja": "このドキュメントのサム・ハルトマンの時間は、プロジェクトMoonshotの一環として、JANETによって賄われていました。"
    },
    {
      "indent": 3,
      "text": "Alan DeKok provided valuable review and text for the Protocol-Error packet code.",
      "ja": "アランDeKokは、プロトコル・エラー・パケットのコードのための貴重なレビューとテキストを提供しました。"
    },
    {
      "indent": 3,
      "text": "Alejandro Perez Mendez provided valuable review comments.",
      "ja": "アレハンドロ・ペレス・メンデスは、貴重なレビューコメントを提供しました。"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Sam Hartman Painless Security",
      "ja": "サム・ハートマン無痛セキュリティ"
    },
    {
      "indent": 3,
      "text": "Email: hartmans-ietf@mit.edu",
      "ja": "メール：hartmans-ietf@mit.edu"
    }
  ]
}