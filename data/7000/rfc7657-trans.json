{
  "title": {
    "text": "RFC 7657 - Differentiated Services (Diffserv) and Real-Time Communication",
    "ja": "RFC 7657 - 差別化サービス（DiffServ）のとリアルタイム通信"
  },
  "number": 7657,
  "created_at": "2019-10-31 19:58:38.974926+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                     D. Black, Ed.\nRequest for Comments: 7657                                           EMC\nCategory: Informational                                         P. Jones\nISSN: 2070-1721                                                    Cisco\n                                                           November 2015",
      "raw": true
    },
    {
      "indent": 5,
      "text": "Differentiated Services (Diffserv) and Real-Time Communication",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This memo describes the interaction between Differentiated Services (Diffserv) network quality-of-service (QoS) functionality and real-time network communication, including communication based on the Real-time Transport Protocol (RTP). Diffserv is based on network nodes applying different forwarding treatments to packets whose IP headers are marked with different Diffserv Codepoints (DSCPs). WebRTC applications, as well as some conferencing applications, have begun using the Session Description Protocol (SDP) bundle negotiation mechanism to send multiple traffic streams with different QoS requirements using the same network 5-tuple. The results of using multiple DSCPs to obtain different QoS treatments within a single network 5-tuple have transport protocol interactions, particularly with congestion control functionality (e.g., reordering). In addition, DSCP markings may be changed or removed between the traffic source and destination. This memo covers the implications of these Diffserv aspects for real-time network communication, including WebRTC.",
      "ja": "このメモはリアルタイムトランスポートプロトコル（RTP）に基づいて、通信などの差別化サービス（DiffServ）のネットワークのサービス品質（QoS）機能とリアルタイムのネットワーク通信、間の相互作用を説明します。 DiffServのは、そのIPヘッダ別のDiffServコードポイント（DSCPを）でマークされたパケットに、異なる転送処理を適用するネットワークノードに基づいています。 WebRTCアプリケーションだけでなく、いくつかの会議アプリケーションは、複数のトラフィックが同じネットワーク5タプルを使用して、異なるQoS要件でストリームを送信するためにセッション記述プロトコル（SDP）バンドル交渉メカニズムを使用し始めています。単一のネットワーク5-タプル内の異なるQoS処理を得るために、複数のDSCPを使用した結果は、特に輻輳制御機能（例えば、並べ替え）と、トランスポートプロトコル相互作用を有します。また、DSCPマーキングは、トラフィック送信元と宛先の間で変更または削除されてもよいです。このメモはのWebRTCを含むリアルタイムのネットワーク通信のためのこれらのDiffserv側面の影響をカバーしています。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for informational purposes.",
      "ja": "このドキュメントはインターネット標準化過程仕様ではありません。それは、情報提供の目的のために公開されています。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Not all documents approved by the IESG are a candidate for any level of Internet Standard; see Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。 IESGによって承認されていないすべての文書がインターネットStandardのどんなレベルの候補です。 RFC 5741のセクション2を参照してください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc7657.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc7657で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2015 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2015 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3\n2.  Real-Time Communications  . . . . . . . . . . . . . . . . . .   3\n  2.1.  RTP Background  . . . . . . . . . . . . . . . . . . . . .   4\n  2.2.  RTP Multiplexing  . . . . . . . . . . . . . . . . . . . .   6\n3.  Differentiated Services (Diffserv)  . . . . . . . . . . . . .   7\n  3.1.  Diffserv Per-Hop Behaviors (PHBs) . . . . . . . . . . . .  10\n  3.2.  Traffic Classifiers and DSCP Remarking  . . . . . . . . .  10\n4.  Examples  . . . . . . . . . . . . . . . . . . . . . . . . . .  12\n5.  Diffserv Interactions . . . . . . . . . . . . . . . . . . . .  13\n  5.1.  Diffserv, Reordering, and Transport Protocols . . . . . .  13\n  5.2.  Diffserv, Reordering, and Real-Time Communication . . . .  15\n  5.3.  Drop Precedence and Transport Protocols . . . . . . . . .  16\n  5.4.  Diffserv and RTCP . . . . . . . . . . . . . . . . . . . .  17\n6.  Guidelines  . . . . . . . . . . . . . . . . . . . . . . . . .  18\n7.  Security Considerations . . . . . . . . . . . . . . . . . . .  19\n8.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  20\n  8.1.  Normative References  . . . . . . . . . . . . . . . . . .  20\n  8.2.  Informative References  . . . . . . . . . . . . . . . . .  22\nAcknowledgements  . . . . . . . . . . . . . . . . . . . . . . . .  26\nAuthors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  26",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "This memo describes the interactions between Differentiated Services (Diffserv) network quality-of-service (QoS) functionality [RFC2475] and real-time network communication, including communication based on the Real-time Transport Protocol (RTP) [RFC3550]. Diffserv is based on network nodes applying different forwarding treatments to packets whose IP headers are marked with different Diffserv Codepoints (DSCPs) [RFC2474]. In the past, distinct RTP streams have been sent over different transport-level flows, sometimes multiplexed with the RTP Control Protocol (RTCP). WebRTC applications, as well as some conferencing applications, are now using the Session Description Protocol (SDP) [RFC4566] bundle negotiation mechanism [SDP-BUNDLE] to send multiple traffic streams with different QoS requirements using the same network 5-tuple. The results of using multiple DSCPs to obtain different QoS treatments within a single network 5-tuple have transport protocol interactions, particularly with congestion control functionality (e.g., reordering). In addition, DSCP markings may be changed or removed between the traffic source and destination. This memo covers the implications of these Diffserv aspects for real-time network communication, including WebRTC traffic [WEBRTC-OVERVIEW].",
      "ja": "このメモはリアルタイムトランスポートプロトコル（RTP）[RFC3550]に基づいて、通信などの差別化サービス（DiffServ）のネットワークのサービス品質（QoS）機能[RFC2475]とリアルタイムのネットワーク通信、間の相互作用を説明します。 DiffServのは、そのIPヘッダ別のDiffServコードポイント（DSCPを）[RFC2474]でマークされたパケットに、異なる転送処理を適用するネットワークノードに基づいています。過去には、別個のRTPストリームは、RTP制御プロトコル（RTCP）と多重化時々、異なるトランスポートレベルのフローを介して送信されてきました。 WebRTCアプリケーションだけでなく、いくつかの会議アプリケーションは、今や複数のトラフィックが同じネットワーク5タプルを使用して、異なるQoS要件でストリームを送信するためにセッション記述プロトコル（SDP）[RFC4566]バンドルネゴシエーションメカニズム[SDP-BUNDLE]を使用しています。単一のネットワーク5-タプル内の異なるQoS処理を得るために、複数のDSCPを使用した結果は、特に輻輳制御機能（例えば、並べ替え）と、トランスポートプロトコル相互作用を有します。また、DSCPマーキングは、トラフィック送信元と宛先の間で変更または削除されてもよいです。このメモはのWebRTCトラフィック[のWebRTC-概要]などのリアルタイムネットワーク通信のためのこれらのDiffserv側面の影響をカバーしています。"
    },
    {
      "indent": 3,
      "text": "The memo is organized as follows. Background is provided in Section 2 on real-time communications and Section 3 on Differentiated Services. Section 4 describes some examples of Diffserv usage with real-time communications. Section 5 explains how use of Diffserv features interacts with both transport and real-time communications protocols and Section 6 provides guidance on Diffserv feature usage to control undesired interactions. Security considerations are discussed in Section 7.",
      "ja": "次のようにメモが編成されています。背景には、リアルタイムのコミュニケーションと差別化サービス上のセクション3のセクション2に設けられています。第4節では、リアルタイム通信でのDiffservの使用のいくつかの例を示します。第5節では、Diffservのの使用は輸送とリアルタイム通信プロトコルの両方と相互作用し、第6節は望ましくない相互作用を制御するためのDiffservの機能の使用状況に関するガイダンスを提供しています方法について説明します。セキュリティの考慮事項は、第7節で議論されています。"
    },
    {
      "indent": 0,
      "text": "2. Real-Time Communications",
      "section_title": true,
      "ja": "2.リアルタイムコミュニケーション"
    },
    {
      "indent": 3,
      "text": "Real-time communications enables communication in real time over an IP network using voice, video, text, content sharing, etc. It is possible to use more than one of these modes concurrently to provide a rich communication experience.",
      "ja": "リアルタイム通信は、豊かなコミュニケーション体験を提供するために、同時にこれらのモードを複数使用することが可能であるなど、音声、ビデオ、テキスト、コンテンツ共有を使用して、IPネットワーク上でリアルタイムにコミュニケーションを可能にします。"
    },
    {
      "indent": 3,
      "text": "A simple example of real-time communications is a voice call placed over the Internet where an audio stream is transmitted in each direction between two users. A more complex example is an immersive videoconferencing system that has multiple video screens, multiple cameras, multiple microphones, and some means of sharing content. For such complex systems, there may be multiple media and non-media streams transmitted via a single IP address and port or via multiple IP addresses and ports.",
      "ja": "リアルタイム通信の簡単な例は、オーディオストリームが二人のユーザ間の各方向に送信され、インターネット上に配置され音声通話です。より複雑な例では、複数のビデオスクリーン、複数のカメラ、複数のマイクロホン、及びコンテンツを共有するいくつかの手段を有する没入型ビデオ会議システムです。このような複雑なシステムの場合、単一のIPアドレスおよびポートを介して、または複数のIPアドレスとポートを介して送信される複数のメディアと非メディアストリームが存在してもよいです。"
    },
    {
      "indent": 0,
      "text": "2.1. RTP Background",
      "section_title": true,
      "ja": "2.1。 RTPの背景"
    },
    {
      "indent": 3,
      "text": "The most common protocol used for real-time media is RTP [RFC3550]. RTP defines a common encapsulation format and handling rules for real-time data transmitted over the Internet. Unfortunately, RTP terminology usage has been inconsistent. For example, RFC 7656 [RFC7656] on RTP terminology observes that:",
      "ja": "リアルタイムメディアのために使用される最も一般的なプロトコルは、RTP [RFC3550]です。 RTPは、インターネットを介して送信リアルタイムデータのための共通のカプセル化フォーマットおよび取り扱いのルールを定義します。残念ながら、RTPの用語の使用は、矛盾してきました。例えば、RTP用語にRFC 7656 [RFC7656]はことを観察します。"
    },
    {
      "indent": 6,
      "text": "RTP [RFC3550] uses media stream, audio stream, video stream, and a stream of (RTP) packets interchangeably, which are all RTP streams.",
      "ja": "RTP [RFC3550]は、メディアストリーム、オーディオストリーム、ビデオストリーム、およびすべてのRTPストリームである（RTP）互換的にパケットのストリームを使用します。"
    },
    {
      "indent": 3,
      "text": "Terminology in this memo is based on that RTP terminology document with the following terms being of particular importance (see that terminology document for full definitions):",
      "ja": "このメモでは、用語次の用語は、特に重要であることとそのRTP用語の文書に基づいています（完全な定義については、その用語のドキュメントを参照してください）："
    },
    {
      "indent": 3,
      "text": "Source Stream: A reference clock synchronized, time progressing, digital media stream.",
      "ja": "ソースストリーム：同期した基準クロック、時間進行し、デジタルメディアストリーム。"
    },
    {
      "indent": 3,
      "text": "RTP Stream: A stream of RTP packets containing media data, which may be source data or redundant data. The RTP stream is identified by an RTP synchronization source (SSRC) belonging to a particular RTP session. An RTP stream may be a secured RTP stream when RTP-based security is used.",
      "ja": "RTPストリーム：ソース・データまたは冗長データとすることができるメディアデータを含むRTPパケットのストリーム。 RTPストリームは、特定のRTPセッションに属するRTP同期ソース（SSRC）によって識別されます。 RTPストリームは、RTPベースのセキュリティが使用されている保護されたRTPストリームであってもよいです。"
    },
    {
      "indent": 3,
      "text": "In addition, this memo follows [RFC3550] in using the term \"SSRC\" to designate both the identifier of an RTP stream and the entity that sends that RTP stream.",
      "ja": "また、このメモは、RTPストリームの識別子と、そのRTPストリームを送信するエンティティの両方を指定する用語「SSRC」を使用して、[RFC3550]を以下。"
    },
    {
      "indent": 3,
      "text": "Media encoding and packetization of a source stream results in a source RTP stream plus zero or more redundancy RTP streams that provide resilience against loss of packets from the source RTP stream [RFC7656]. Redundancy information may also be carried in the same RTP stream as the encoded source stream, e.g., see Section 7.2 of [RFC5109]. With most applications, a single media type (e.g., audio) is transmitted within a single RTP session. However, it is possible to transmit multiple, distinct source streams over the same RTP session as one or more individual RTP streams. This is referred to as RTP multiplexing. In addition, an RTP stream may contain multiple source streams, e.g., components or programs in an MPEG Transport Stream [H.221].",
      "ja": "ソースRTPストリーム内のソース・ストリーム・結果プラスソースRTPストリーム[RFC7656]からのパケットの損失に対する回復力を提供するゼロ個以上の冗長RTPストリームのメディア符号化及びパケット。冗長情報は、例えば、[RFC5109]のセクション7.2を参照して、符号化されたソースストリームと同じRTPストリーム内で実施することができます。ほとんどの用途で、単一のメディアタイプ（例えば、オーディオ）は、単一のRTPセッション内で送信されます。しかし、1つ以上の個々のRTPストリームと同じRTPセッションを介して複数の、別個のソースストリームを送信することが可能です。これは、RTP多重化と呼ばれています。また、RTPストリームはMPEGトランスポートストリーム[H.221]で複数のソースストリーム、例えば、コンポーネントまたはプログラムを含んでいてもよいです。"
    },
    {
      "indent": 3,
      "text": "The number of source streams and RTP streams in an overall real-time interaction can be surprisingly large. In addition to a voice source stream and a video source stream, there could be separate source streams for each of the cameras or microphones on a videoconferencing system. As noted above, there might also be separate redundancy RTP streams that provide protection to a source RTP stream, using techniques such as forward error correction. Another example is simulcast transmission, where a video source stream can be transmitted as high resolution and low resolution RTP streams at the same time. In this case, a media processing function might choose to send one or both RTP streams onward to a receiver based on bandwidth availability or who the active speaker is in a multipoint conference. Lastly, a transmitter might send the same media content concurrently as two RTP streams using different encodings (e.g., video encoded as VP8 [RFC6386] in parallel with H.264 [H.264]) to allow a media processing function to select a media encoding that best matches the capabilities of the receiver.",
      "ja": "全体的なリアルタイムインタラクションソースストリームとRTPストリームの数は驚くほど大きくすることができます。音源ストリームとビデオ・ソース・ストリームに加えて、テレビ会議システムのカメラまたはマイクのそれぞれのための別個のソースストリームが存在し得ます。上述したように、また、順方向誤り訂正のような技術を使用して、ソースRTPストリームに保護を提供する別の冗長RTPストリームがあるかもしれません。別の例では、ビデオ・ソース・ストリームは、高解像度とRTPが同時にストリームを低解像度として送信することができる同報送信です。この場合、メディア処理機能は、1を送信することを選択するかもしれないまたは両方RTPは、帯域幅の可用性や人のアクティブスピーカーは、多地点会議であるに基づいて受信機に以降のストリーム。最後に、送信機は、異なるエンコーディングを使用して、2つのRTPストリーム（例えば、H.264 [264]と平行にVP8 [RFC6386]としてエンコードされたビデオ）をメディア処理機能は、メディアを選択することを可能にするように、同時に同一のメディアコンテンツを送信するかもしれません最高の受信機の能力と一致するエンコーディング。"
    },
    {
      "indent": 3,
      "text": "For the WebRTC protocol suite [WEBRTC-TRANSPORTS], an individual source stream is a MediaStreamTrack, and a MediaStream contains one or more MediaStreamTracks [W3C.WD-mediacapture-streams-20130903]. A MediaStreamTrack is transmitted as a source RTP stream plus zero or more redundant RTP streams, so a MediaStream that consists of one MediaStreamTrack is transmitted as a single source RTP stream plus zero or more redundant RTP streams. For more information on use of RTP in WebRTC, see [RTP-USAGE].",
      "ja": "WebRTCプロトコルスイート[のWebRTC-搬送]のため、個々のソースストリームがMediaStreamTrackあり、MediaStreamのは、一つ以上のMediaStreamTracks [W3C.WD-mediacaptureストリーム-20130903]を含有します。 MediaStreamTrackは、ソースRTPストリームに加えて、ゼロ以上の冗長RTPストリームとして送信されるので、1 MediaStreamTrackから成るMediaStreamのは、単一のソースRTPストリームに加えて、ゼロ以上の冗長RTPストリームとして送信されます。 WebRTCでRTPの使用の詳細については、[RTP-USAGE]を参照。"
    },
    {
      "indent": 3,
      "text": "RTP is usually carried over a datagram protocol, such as UDP [RFC768], UDP-Lite [RFC3828], or the Datagram Congestion Control Protocol (DCCP) [RFC4340]; UDP is most commonly used, but a non-datagram protocol (e.g., TCP [RFC793]) may also be used. Transport protocols other than UDP or UDP-Lite may also be used to transmit real-time data or near-real-time data. For example, the Stream Control Transmission Protocol (SCTP) [RFC4960] can be utilized to carry application-sharing or whiteboarding information as part of an overall interaction that includes real-time media. These additional transport protocols can be multiplexed with an RTP session via UDP encapsulation, thereby using a single pair of UDP ports.",
      "ja": "RTPは、通常、UDP [RFC768]、UDP-Liteは[RFC3828]、またはデータグラム輻輳制御プロトコル（DCCP）[RFC4340]として、データグラムプロトコルを介して行われます。 UDPは、最も一般的に使用されるが、非データグラムプロトコル（例えば、TCP [RFC793]）を使用してもよいです。 UDPまたはUDP-Liteの以外のトランスポートプロトコルは、リアルタイムデータまたはほぼリアルタイムのデータを送信するために使用することができます。例えば、ストリーム制御伝送プロトコル（SCTP）[RFC4960]は、リアルタイムメディアを含む全体的な相互作用の一部として、アプリケーション共有、またはホワイトボードの情報を運ぶために利用することができます。これらの追加のトランスポートプロトコルは、それによってUDPポートの単一のペアを使用して、UDPカプセル化を介してRTPセッションを多重化することができます。"
    },
    {
      "indent": 3,
      "text": "The WebRTC protocol suite encompasses a number of forms of multiplexing:",
      "ja": "WebRTCプロトコルスイートは、多重化の形の数を包含する。"
    },
    {
      "indent": 3,
      "text": "1. Individual source streams are carried in one or more individual RTP streams. These RTP streams can be multiplexed onto a single transport-layer flow or sent as separate transport-layer flows. This memo only considers the case where the RTP streams are to be multiplexed onto a single transport-layer flow, forming a single RTP session as described in [RFC3550];",
      "ja": "1.個々のソースストリームは、1つの以上の個々のRTPストリームで運ばれます。これらのRTPストリームは、単一のトランスポート・レイヤ・フロー上に多重化又は別個のトランスポート層のフローとして送信することができます。このメモは、RTPストリームは、[RFC3550]に記載されているように、単一のRTPセッションを形成し、単一のトランスポート・レイヤ・フローに多重化される場合を考えます。"
    },
    {
      "indent": 3,
      "text": "2. RTCP (see [RFC3550]) may be multiplexed onto the same transport-layer flow as the RTP streams with which it is associated, as described in [RFC5761], or it may be sent on a separate transport-layer flow;",
      "ja": "RTPは、それが[RFC5761]に記載されているように、関連している、またはそれは別個のトランスポート・レイヤ・フロー上で送信することができるとストリーム2. RTCPは、（[RFC3550]を参照）は、同じトランスポート・レイヤ・フロー上に多重化されてもよいです。"
    },
    {
      "indent": 3,
      "text": "3. An RTP session could be multiplexed with a single SCTP association over Datagram Transport Layer Security (DTLS) and with both Session Traversal Utilities for NAT (STUN) [RFC5389] and TURN [RFC5766] traffic into a single transport-layer flow as described in [RFC5764] with the updates in [SRTP-DTLS]. The STUN [RFC5389] and Traversal Using Relays around NAT (TURN) [RFC5766] protocols provide NAT/FW (Network Address Translator / Firewall) traversal and port mapping.",
      "ja": "3.アンRTPセッションは、データグラムトランスポート層セキュリティ（DTLS）上に単一のSCTPアソシエーションと多重化し、NATのためのセッショントラバーサルユーティリティ（STUN）の両方と[RFC5389]と記載されているように単一のトランスポート層流中に[RFC5766]トラフィックを回すことができます[SRTP-DTLS]でアップデートして、[RFC5764]インチSTUN [RFC5389]とトラバーサルNAT（TURN）の周りにリレーを使用して、[RFC5766]プロトコルは、NAT / FW（ネットワークアドレス翻訳/ファイアウォール）トラバーサルとポートマッピングを提供します。"
    },
    {
      "indent": 3,
      "text": "The resulting transport-layer flow is identified by a network 5-tuple, i.e., a combination of two IP addresses (source and destination), two ports (source and destination), and the transport protocol used (e.g., UDP). SDP bundle negotiation restrictions [SDP-BUNDLE] limit WebRTC to using at most a single DTLS session per network 5-tuple. In contrast to WebRTC use of a single SCTP association with DTLS, multiple SCTP associations can be directly multiplexed over a single UDP 5-tuple as specified in [RFC6951].",
      "ja": "得られたトランスポート層流（例えば、UDP）、すなわち、ネットワーク5タプルによって、2つのIPアドレス（ソースおよび宛先）と、2つのポート（ソースおよび宛先）の組み合わせを同定し、およびトランスポートプロトコルが使用されます。 SDPバンドルネゴシエーション制限ネットワーク5タプルあたり最も単一DTLSセッションで使用する[SDP-BUNDLE]限界のWebRTC。 [RFC6951]で指定されるようにDTLSを有する単一のSCTPアソシエーションののWebRTCの使用とは対照的に、複数のSCTPアソシエーションは、直接単UDP 5タプル上に多重化することができます。"
    },
    {
      "indent": 3,
      "text": "The STUN and TURN protocols were originally designed to use UDP as a transport; however, TURN has been extended to use TCP as a transport for situations in which UDP does not work [RFC6062]. When TURN selects use of TCP, the entire real-time communications session is carried over a single TCP connection (i.e., 5-tuple).",
      "ja": "STUNやTURNプロトコルは、もともとトランスポートとしてUDPを使用するように設計されました。ただし、TURNは、UDPが動作しないという状況のためのトランスポートとしてTCPを使用するように拡張[RFC6062]されています。 TURNは、TCPの使用を選択した場合、全体のリアルタイムの通信セッションは、単一のTCP接続（すなわち、5タプル）を介して搬送されます。"
    },
    {
      "indent": 3,
      "text": "For IPv6, addition of the flow label [RFC6437] to network 5-tuples results in network 6-tuples (or 7-tuples for bidirectional flows), but in practice, use of a flow label is unlikely to result in a finer-grain traffic subset than the corresponding network 5-tuple (e.g., the flow label is likely to represent the combination of two ports with use of the UDP protocol). For that reason, discussion in this document focuses on UDP 5-tuples.",
      "ja": "IPv6の、ネットワークにおける5-タプル結果6タプル（または双方向フローの7タプル）をネットワークに流れラベル[RFC6437]の添加のために、実際には、フローラベルの使用は、より細かい粒度を生じにくいです対応するネットワーク5-タプルよりトラフィック・サブセット（例えば、フローラベルは、UDPプロトコルを用いて、二つのポートの組み合わせを表す可能性が高いです）。そのため、このドキュメントの議論はUDP 5タプルに焦点を当てています。"
    },
    {
      "indent": 0,
      "text": "2.2. RTP Multiplexing",
      "section_title": true,
      "ja": "2.2。 RTP多重化"
    },
    {
      "indent": 3,
      "text": "Section 2.1 explains how source streams can be multiplexed in a single RTP session, which can in turn be multiplexed over UDP with packets generated by other transport protocols. This section provides background on why this level of multiplexing is desirable. The rationale in this section applies both to multiplexing of source streams in a single RTP session and multiplexing of an RTP session with traffic from other transport protocols via UDP encapsulation.",
      "ja": "2.1節では、ソースストリームが順番に他のトランスポートプロトコルによって生成されたパケットをUDP上で多重化することができ、単一のRTPセッションで多重化することができる方法を説明します。このセクションでは、多重化のこのレベルが望ましい理由の背景を提供します。このセクションの根拠は、UDPカプセル化を介して、他のトランスポートプロトコルからのトラフィックのRTPセッションの単一のRTPセッション及び多重ソースストリームの多重化の両方に適用されます。"
    },
    {
      "indent": 3,
      "text": "Multiplexing reduces the number of ports utilized for real-time and related communication in an overall interaction. While a single endpoint might have plenty of ports available for communication, this traffic often traverses points in the network that are constrained on the number of available ports or whose performance degrades as the number of ports in use increases. A good example is a NAT/FW device sitting at the network edge. As the number of simultaneous protocol sessions increases, so does the burden placed on these devices to provide port mapping.",
      "ja": "多重化は、リアルタイムおよび全体的な相互作用に関連する通信のために利用されるポートの数を減少させます。単一エンドポイントが通信のために使用可能なポートをたくさん持っているかもしれないが、このトラフィックは、多くの場合、パフォーマンスの使用増加のポートの数として低下利用できるポートまたは数に制約されているネットワーク内のポイントを横切ります。良い例は、ネットワークエッジに座っNAT / FWデバイスです。同時プロトコルセッションの数が増加するにつれて、ポートマッピングを提供するために、これらのデバイスの負担を行います。"
    },
    {
      "indent": 3,
      "text": "Another reason for multiplexing is to help reduce the time required to establish bidirectional communication. Since any two communicating users might be situated behind different NAT/FW devices, it is necessary to employ techniques like STUN and TURN along with Interactive Connectivity Establishment (ICE) [RFC5245] to get traffic to flow between the two devices [WEBRTC-TRANSPORTS]. Performing the tasks required by these protocols takes time, especially when multiple protocol sessions are involved. While tasks for different sessions can be performed in parallel, it is nonetheless necessary for applications to wait for all sessions to be opened before communication between two users can begin. Reducing the number of STUN/ICE/TURN steps reduces the likelihood of loss of a packet for one of these protocols; any such loss adds delay to setting up a communication session. Further, reducing the number of STUN/ICE/TURN tasks places a lower burden on the STUN and TURN servers.",
      "ja": "多重化のためのもう一つの理由は、双方向通信を確立するのに必要な時間を削減することです。任意の2人の通信のユーザーが異なるNAT / FWデバイスの背後に位置される場合がありますので、STUNのような技術を採用し、トラフィックが2つのデバイス間で流れるように取得するためにインタラクティブ接続確立（ICE）[RFC5245]と一緒にオンにする必要がある[のWebRTC-トランスポート] 。これらのプロトコルで必要なタスクを実行すると、複数のプロトコルのセッションが含まれている場合は特に、時間がかかります。異なるセッションのためのタスクを並行して行うことができるが、二人のユーザー間のコミュニケーションの前に開かれるすべてのセッションを待つアプリケーションを開始することができますのためにもかかわらず必要です。 STUN / ICE / TURNステップの数を減らすことは、これらのプロトコルのいずれかのパケットの損失の可能性を低下させます。どのような損失は、通信セッションをセットアップするに遅延を追加します。さらに、STUN / ICE / TURNタスクの数を減らすことSTUNの下負担を配置し、サーバの電源を入れます。"
    },
    {
      "indent": 3,
      "text": "Multiplexing may reduce the complexity and resulting load on an endpoint. A single instance of STUN/ICE/TURN is simpler to execute and manage than multiple instances STUN/ICE/TURN operations happening in parallel, as the latter require synchronization and create more complex failure situations that have to be cleaned up by additional code.",
      "ja": "多重化は、エンドポイント上の複雑さと結果の負荷を減らすことができます。後者は、同期を必要とし、追加のコードによってクリーンアップされなければならないより複雑な故障状況を作成するようにSTUN / ICE / TURNの単一のインスタンスは、複数のインスタンスよりも平行で起こっSTUN / ICE / TURN動作を実行し、管理することが簡単です。"
    },
    {
      "indent": 0,
      "text": "3. Differentiated Services (Diffserv)",
      "section_title": true,
      "ja": "3.差別化サービス（DiffServ）の"
    },
    {
      "indent": 3,
      "text": "The Diffserv architecture [RFC2475][RFC4594] is intended to enable scalable service discrimination in the Internet without requiring each node in the network to store per-flow state and participate in per-flow signaling. The services may be end to end or within a network; they include both those that can satisfy quantitative performance requirements (e.g., peak bandwidth) and those based on relative performance (e.g., \"class\" differentiation). Services can be constructed by a combination of well-defined building blocks deployed in network nodes that:",
      "ja": "DiffServアーキテクチャ[RFC2475]、[RFC4594]はフローごとの状態を保存し、フロー毎のシグナリングに参加するために、ネットワーク内の各ノードを必要とせずにインターネットにスケーラブルサービスの識別を可能にすることを意図しています。サービスは、ネットワーク内のエンドツーエンドことができます。彼らは、両方の定量的な性能要件（例えば、ピーク帯域幅）と相対的な性能（例えば、「クラス」、分化）をベースとするものを満たすことができるもの。サービスは、ネットワークノードに配備明確に定義されたビルディングブロックの組み合わせによって構成することができます。"
    },
    {
      "indent": 3,
      "text": "o classify traffic and set bits in an IP header field at network boundaries or hosts,",
      "ja": "Oトラフィックを分類し、ネットワーク境界またはホストにIPヘッダフィールド内のビットを設定し、"
    },
    {
      "indent": 3,
      "text": "o use those bits to determine how packets are forwarded by the nodes inside the network, and",
      "ja": "Oパケットがネットワーク内のノードによって転送される方法を決定するためにこれらのビットを使用し、そして"
    },
    {
      "indent": 3,
      "text": "o condition the marked packets at network boundaries in accordance with the requirements or rules of each service.",
      "ja": "O各サービスの要件や規則に従ってネットワーク境界でマークされたパケットを調整します。"
    },
    {
      "indent": 3,
      "text": "Traffic conditioning may include changing the DSCP in a packet (remarking it), delaying the packet (as a consequence of traffic shaping), or dropping the packet (as a consequence of traffic policing).",
      "ja": "トラフィック調整は、（それをリマーク）パケットのDSCPを変更する（トラフィックシェーピングの結果として）パケットを遅延させる、または（トラフィックポリシングの結果として）パケットをドロップ含んでもよいです。"
    },
    {
      "indent": 3,
      "text": "A network node that supports Diffserv includes a classifier that selects packets based on the value of the DS field in IP headers (the Diffserv codepoint or DSCP), along with buffer management and packet scheduling mechanisms capable of delivering the specific packet forwarding treatment indicated by the DS field value. Setting of the DS field and fine-grain conditioning of marked packets need only be performed at network boundaries; internal network nodes operate on traffic aggregates that share a DS field value, or in some cases, a small set of related values.",
      "ja": "Diffservのをサポートするネットワークノードは、で示される特定のパケット転送処理を送達することができるバッファ管理及びパケットスケジューリング機構と共に、IPヘッダー（DiffservのコードポイントまたはDSCP）におけるDSフィールドの値に基づいてパケットを選択するクラシファイアを含みますDSフィールドの値。 DSフィールドの設定とマークされたパケットのきめの細かい調整はネットワーク境界で実行することだけです。内部ネットワーク・ノードは、DSフィールドの値、またはいくつかのケースでは、関連する値の小さなセットを共有トラフィック凝集体上で動作します。"
    },
    {
      "indent": 3,
      "text": "The Diffserv architecture [RFC2475] maintains distinctions among:",
      "ja": "DiffServアーキテクチャ[RFC2475]は間の区別を維持します。"
    },
    {
      "indent": 3,
      "text": "o the QoS service provided to a traffic aggregate,",
      "ja": "Oトラフィックの集約に提供されるQoSサービス、"
    },
    {
      "indent": 3,
      "text": "o the conditioning functions and per-hop behaviors (PHBs) used to realize services,",
      "ja": "コンディショニング機能とホップごとの挙動（のPHB）Oサービスを実現するために使用されます、"
    },
    {
      "indent": 3,
      "text": "o the DSCP in the IP header used to mark packets to select a per-hop behavior, and",
      "ja": "ホップ単位動作を選択するためにパケットをマークするために使用されるIPヘッダ内のDSCP O、及び"
    },
    {
      "indent": 3,
      "text": "o the particular implementation mechanisms that realize a per-hop behavior.",
      "ja": "ホップ単位動作を実現する特定の実装機構O。"
    },
    {
      "indent": 3,
      "text": "This memo focuses on PHBs and the usage of DSCPs to obtain those behaviors. In a network node's forwarding path, the DSCP is used to map a packet to a particular forwarding treatment, or to a per-hop behavior (PHB) that specifies the forwarding treatment.",
      "ja": "このメモは、これらの行動を取得するのPHBとのDSCPの使用に焦点を当てています。ネットワーク・ノードの転送パスでは、DSCPは、特定の転送処理、または転送処理を指定するホップ単位動作（PHB）にパケットをマッピングするために使用されます。"
    },
    {
      "indent": 3,
      "text": "The specification of a PHB describes the externally observable forwarding behavior of a network node for network traffic marked with a DSCP that selects that PHB. In this context, \"forwarding behavior\" is a general concept - for example, if only one DSCP is used for all traffic on a link, the observable forwarding behavior (e.g., loss, delay, jitter) will often depend only on the loading of the link. To obtain useful behavioral differentiation, multiple traffic subsets are marked with different DSCPs for different PHBs for which node resources such as buffer space and bandwidth are allocated. PHBs provide the framework for a Diffserv network node to allocate resources to traffic subsets, with network-scope Differentiated Services constructed on top of this basic hop-by-hop resource allocation mechanism.",
      "ja": "PHBの仕様はPHBことを選択したDSCPでマークされたネットワークトラフィックのためのネットワークノードの外部から観察可能な転送動作を説明します。この文脈では、「転送動作は、」一般的な概念である - 唯一のDSCPは、リンク上のすべてのトラフィックのために使用されている場合など、観察可能な転送動作（例えば、ロス、遅延、ジッタ）は、多くの場合の負荷にのみ依存しますリンク。有用な行動分化を得るために、複数のトラフィック・サブセットは、バッファ空間及び帯域幅のようなノードのリソースが割り当てられたため、異なるのPHBに異なるのDSCPでマークされています。 PHBは、この基本的なホップバイホップリソース割り当て機構の上に構築されたネットワークスコープ差別化サービスと、トラフィック・サブセットにリソースを割り当てるためのDiffservネットワークノードのためのフレームワークを提供します。"
    },
    {
      "indent": 3,
      "text": "The codepoints (DSCPs) may be chosen from a small set of fixed values (the class selector codepoints), from a set of recommended values defined in PHB specifications, or from values that have purely local meanings to a specific network that supports Diffserv; in general, packets may be forwarded across multiple such networks between source and destination.",
      "ja": "コードポイント（DSCPを）はDiffservのをサポートする特定のネットワークに固定値（クラスセレクタコードポイント）の小さなセットから、PHB仕様で定義された推奨値のセットから、または純粋にローカルな意味を有する値から選択することができます。一般的に、パケットが送信元と宛先との間に複数のそのようなネットワークを介して転送されてもよいです。"
    },
    {
      "indent": 3,
      "text": "The mandatory DSCPs are the class selector codepoints as specified in [RFC2474]. The class selector codepoints (CS0-CS7) extend the deprecated concept of IP Precedence in the IPv4 header; three bits are added, so that the class selector DSCPs are of the form 'xxx000'. The all-zero DSCP ('000000' or CS0) is always assigned to a Default PHB that provides best-effort forwarding behavior, and the remaining class selector codepoints are intended to provide relatively better per-hop-forwarding behavior in increasing numerical order, but:",
      "ja": "必須のDSCPは、[RFC2474]で指定されたクラスセレクタコードポイントです。クラスセレクタコードポイント（CS0-CS7）は、IPv4ヘッダ内のIP優先順位の廃止予定の概念を拡張します。クラスセレクタのDSCPフォーム「xxx000」であるように、3ビットは、添加されます。 、すべてゼロのDSCP（「000000」またはCS0）は、常にベストエフォート転送動作を提供するデフォルトのPHBに割り当てられ、残りのクラスセレクタコードポイントは、数値昇順に比較的良好あたりホップ転送動作を提供することを意図していますしかし："
    },
    {
      "indent": 3,
      "text": "o A network endpoint cannot rely upon different class selector codepoints providing Differentiated Services via assignment to different PHBs, as adjacent class selector codepoints may use the same pool of resources on each network node in some networks. This generalizes to ranges of class selector codepoints, but with limits -- for example, CS6 and CS7 are often used for network control (e.g., routing) traffic [RFC4594] and hence are likely to provide better forwarding behavior under network load to prioritize network recovery from disruptions. There is no effective way for a network endpoint to determine which PHBs are selected by the class selector codepoints on a specific network, let alone end to end.",
      "ja": "隣接クラスセレクタコードポイントは、いくつかのネットワークにおける各ネットワーク・ノード上のリソースの同じプールを使用することができるようにOネットワークエンドポイントは、別のPHBに割り当て介し差別化サービスを提供する別のクラスセレクタコードポイントに依存することができません。これは、クラスセレクタコードポイントの範囲に一般化するが、制限に - 例えば、CS6及びCS7は、多くの場合、ネットワーク制御のために使用される（例えば、ルーティング）トラフィック[RFC4594]、したがってネットワークの優先順位を決定するために、ネットワーク負荷の下でより良い転送動作を提供する可能性があります混乱からの回復。 PHBは、特定のネットワーク上のクラスセレクタコードポイントによって選択されるかを決定するためにネットワークエンドポイントのための効果的な方法は、最後まで一人で最後を聞かせて、ありません。"
    },
    {
      "indent": 3,
      "text": "o CS1 ('001000') was subsequently designated as the recommended codepoint for the Lower Effort (LE) PHB [RFC3662]. An LE service forwards traffic with \"lower\" priority than best effort and can be \"starved\" by best-effort and other \"higher\" priority traffic. Not all networks offer an LE service, hence traffic marked with the CS1 DSCP may not receive lower effort forwarding; such traffic may be forwarded with a different PHB (e.g., the Default PHB), remarked to another DSCP (e.g., CS0) and forwarded accordingly, or dropped. A network endpoint cannot rely upon the presence of an LE service that is selected by the CS1 DSCP on a specific network, let alone end to end. Packets marked with the CS1 DSCP may be forwarded with best-effort service or another \"higher\" priority service; see [RFC2474]. See [RFC3662] for further discussion of the LE PHB and service.",
      "ja": "O CS1（ '001000'）は、続いて下努力のために推奨されるコードポイント（LE）PHB [RFC3662]としました。 「下」ベストエフォートよりも優先順位としてトラフィックを転送LEサービスはによってベストエフォート及びその他の「高い」優先順位のトラフィック「餓死」することができます。いないすべてのネットワークは、したがってCS1 DSCPでマークされたトラフィックが低く努力転送を受けることができない、LEサービスを提供しています。そのようなトラフィックは、異なるPHB（例えば、デフォルトのPHB）で転送されてもよい、別のDSCP（例えば、CS0）に注目し、それに応じて転送され、または削除。ネットワークエンドポイントは、特定のネットワーク上のCS1 DSCPによって選択されたLEサービスの存在に依存し、ましてや端へことができません。 CS1 DSCPでマークされたパケットは、ベストエフォート型のサービスまたは別の「高い」優先サービスで転送することができます。 [RFC2474]を参照してください。 LE PHBおよびサービスのさらなる議論のために[RFC3662]を参照。"
    },
    {
      "indent": 0,
      "text": "3.1. Diffserv Per-Hop Behaviors (PHBs)",
      "section_title": true,
      "ja": "3.1。 Diffservのホップ単位動作（のPHB）"
    },
    {
      "indent": 3,
      "text": "Although Differentiated Services is a general architecture that may be used to implement a variety of services, three fundamental forwarding behaviors (PHBs) have been defined and characterized for general use. These are:",
      "ja": "差別化サービスは、様々なサービスを実装するために使用され得る一般的なアーキテクチャであるが、3つの基本的な転送動作（のPHB）が定義され、一般的な使用のために特徴付けられています。これらは："
    },
    {
      "indent": 3,
      "text": "1. Default Forwarding (DF) for elastic traffic [RFC2474]. The Default PHB is always selected by the all-zero DSCP and provides best-effort forwarding.",
      "ja": "弾性トラフィック[RFC2474] 1.デフォルト転送（DF）。デフォルトのPHBは、常にすべてゼロDSCPによって選択され、ベストエフォート型の転送を提供しています。"
    },
    {
      "indent": 3,
      "text": "2. Assured Forwarding (AF) [RFC2597] to provide Differentiated Service to elastic traffic. Each instance of the AF behavior consists of three PHBs that differ only in drop precedence, e.g., AF11, AF12, and AF13; such a set of three AF PHBs is referred to as an AF class, e.g., AF1x. There are four defined AF classes, AF1x through AF4x, with higher numbered classes intended to receive better forwarding treatment than lower numbered classes. Use of multiple PHBs from a single AF class (e.g., AF1x) does not enable network traffic reordering within a single network 5-tuple, although such reordering may occur for other transient reasons (e.g., routing changes or ECMP rebalancing).",
      "ja": "2.保証転送（AF）[RFC2597]は、弾性トラフィックに差別化サービスを提供します。 AFの動作の各インスタンスは、ドロップ優先順位のみが異なる3つのPHB、例えば、AF11、AF12、AF13とから成ります。 3つのAFのPHBのそのようなセットは、AFクラス、例えば、AF1xと呼ばれます。大きい番号のクラスは、番号のクラスを下げるよりも優れた転送処理を受けるためのもので、4つの定義されたAFクラス、AF1xは、AF4xてあります。そのような並べ替えは、他の一過性の理由（例えば、ルーティングの変更やECMP・リバランス）が起こるかもしれないが、単一のAFクラス（例えば、AF1x）から複数のPHBの使用は、単一のネットワーク5-タプル内で並べ替えのネットワークトラフィックを可能にしません。"
    },
    {
      "indent": 3,
      "text": "3. Expedited Forwarding (EF) [RFC3246] intended for inelastic traffic. Beyond the basic EF PHB, the VOICE-ADMIT PHB [RFC5865] is an admission-controlled variant of the EF PHB. Both of these PHBs are based on preconfigured limited forwarding capacity; traffic in excess of that capacity is expected to be dropped.",
      "ja": "3.緊急転送（EF）[RFC3246]は非弾性トラフィックのために意図しました。基本EF PHB、VOICE-認めるPHB [RFC5865]を超えEF PHBのアドミッション制御の変形例です。これらのPHBの両方が事前設定された制限された転送容量に基づいています。その能力を超えるトラフィックがドロップされることが期待されます。"
    },
    {
      "indent": 0,
      "text": "3.2. Traffic Classifiers and DSCP Remarking",
      "section_title": true,
      "ja": "3.2。トラフィック分類子とDSCPポイント再"
    },
    {
      "indent": 3,
      "text": "DSCP markings are not end to end in general. Each network can make its own decisions about what PHBs to use and which DSCP maps to each PHB. While every PHB specification includes a recommended DSCP, and RFC 4594 [RFC4594] recommends their end-to-end usage, there is no requirement that every network support any PHBs (aside from the Default PHB for best-effort forwarding) or use any specific DSCPs, with the exception of the support requirements for the class selector codepoints (see RFC 2474 [RFC2474]). When Diffserv is used, the edge or boundary nodes of a network are responsible for ensuring that all traffic entering that network conforms to that network's policies for DSCP and PHB usage, and such nodes may change DSCP markings on traffic to achieve that result. As a result, DSCP remarking is possible at any network boundary, including the first network node that traffic sent by a host encounters. Remarking is also possible within a network, e.g., for traffic shaping.",
      "ja": "DSCPマーキングは、一般的にエンドツーエンドではありません。各ネットワークはのPHBを使用するかについて、独自の意思決定を行い、どのDSCPは、各PHBにマップすることができます。すべてのPHB仕様が推奨DSCP、およびRFC 4594を含むが[RFC4594]は、すべてのネットワークサポート（転送ベストエフォートのデフォルトPHBは別に）任意のPHBまたは任意の特定の使用要件がない、それらのエンド・ツー・エンドの使用を推奨しますクラスセレクタコードポイントのサポート要件を除いてのDSCP、（RFC 2474 [RFC2474]を参照）。 Diffservのを使用する場合、ネットワークのエッジまたは境界ノードは、そのネットワークに入るすべてのトラフィックがその結果を達成するために、トラフィックにDSCPマーキングを変更することができるDSCPとPHBの使用、及びそのようなノードのために、そのネットワークのポリシーに準拠することを保証する責任があります。結果として、DSCPの再マーキングは、トラフィックは、ホスト遭遇によって送信された第1のネットワークノードを含む、任意のネットワークの境界に可能です。再マーキングは、トラフィックシェーピングのために、例えば、ネットワーク内でも可能です。"
    },
    {
      "indent": 3,
      "text": "DSCP remarking is part of traffic conditioning; the traffic conditioning functionality applied to packets at a network node is determined by a traffic classifier [RFC2475]. Edge nodes of a Diffserv network classify traffic based on selected packet header fields; typical implementations do not look beyond the traffic's network 5-tuple in the IP and transport protocol headers (e.g., for SCTP or RTP encapsulated in UDP, header-based classification is unlikely to look beyond the outer UDP header). As a result, when multiple DSCPs are used for traffic that shares a network 5-tuple, remarking at a network boundary may result in all of the traffic being forwarded with a single DSCP, thereby removing any differentiation within the network 5-tuple downstream of the remarking location. Network nodes within a Diffserv network generally classify traffic based solely on DSCPs, but may perform finer-grain traffic conditioning similar to that performed by edge nodes.",
      "ja": "DSCPの再マーキングは、トラフィック調整の一部です。ネットワークノードでパケットに適用されるトラフィック調整機能は、トラフィック分類子[RFC2475]によって決定されます。 Diffservのネットワークのエッジノードは、選択されたパケットのヘッダフィールドに基づいてトラフィックを分類します。典型的な実装では、IPおよびトランスポートプロトコルヘッダ内のトラフィックのネットワーク5-タプルを越えて見ていない（例えば、UDPにカプセル化されたSCTP又はRTPのために、ヘッダーベースの分類は、外側UDPヘッダを越えて見にくいです）。複数のDSCPは、すべてのトラフィックをもたらすことができるネットワークの境界でリマーク、ネットワーク5-タプルを共有し、それによって下流のネットワーク5-タプル内の任意の分化を除去し、単一DSCPと転送されるトラフィックのために使用される結果としてリマーク場所。 Diffservのネットワーク内のネットワーク・ノードは、一般に、単独のDSCPに基づいてトラフィックを分類するが、エッジノードによって実行されるものと同様の細かい粒度のトラフィック調整を行うことができます。"
    },
    {
      "indent": 3,
      "text": "So, for two arbitrary network endpoints, there can be no assurance that the DSCP set at the source endpoint will be preserved and presented at the destination endpoint. Rather, it is quite likely that the DSCP will be set to zero (e.g., at the boundary of a network operator that distrusts or does not use the DSCP field) or to a value deemed suitable by an ingress classifier for whatever network 5-tuple it carries.",
      "ja": "だから、任意の二つのネットワークエンドポイントのために、ソースエンドポイントに設定DSCPが保存され、宛先エンドポイントで発表されるという保証はありません。むしろ、DSCPが（distrustsまたはDSCPフィールドを使用しないネットワークオペレータの境界に、例えば）または任意のネットワーク5-タプルのための入口クラシファイアによって適当と認める値にゼロに設定されることが非常に可能性がありますそれが運びます。"
    },
    {
      "indent": 3,
      "text": "In addition, remarking may remove application-level distinctions in forwarding behavior - e.g., if multiple PHBs within an AF class are used to distinguish different types of frames within a video RTP stream, token-bucket-based remarkers operating in color-blind mode (see [RFC2697] and [RFC2698] for examples) may remark solely based on flow rate and burst behavior, removing the drop precedence distinctions specified by the source.",
      "ja": "また、転送動作におけるアプリケーションレベルの区別を除去することができるリマーク - 例えば、AFクラス内の複数のPHBは、ビデオRTPストリーム内のフレームの異なるタイプを区別するために使用される場合、トークンバケットベースのカラーブラインドモードで動作remarkers（ [RFC2697]と例について[RFC2698]）は、ソースによって指定された廃棄優先順位の区別を除去し、流量及びバースト挙動に基づいてのみ発言できる参照。"
    },
    {
      "indent": 3,
      "text": "Backbone and other carrier networks may employ a small number of DSCPs (e.g., less than half a dozen) to manage a small number of traffic aggregates; hosts that use a larger number of DSCPs can expect to find that much of their intended differentiation is removed by such networks. Better results may be achieved when DSCPs are used to spread traffic among a smaller number of Diffserv-based traffic subsets or aggregates; see [DIFFSERV-INTERCON] for one proposal. This is of particular importance for MPLS-based networks due to the limited size of the Traffic Class (TC) field in an MPLS label [RFC5462] that is used to carry Diffserv information and the use of that TC field for other purposes, e.g., Explicit Congestion Notification (ECN) [RFC5129]. For further discussion on use of Diffserv with MPLS, see [RFC3270] and [RFC5127].",
      "ja": "バックボーンと他のキャリアネットワークは、トラフィック凝集体の少数を管理するためのDSCP（例えば、半分以下ダース）の小数を採用してもよいです。 DSCPのより多くを使用するホストは、その意図する分化の多くはこのようなネットワークによって除去されていることを見つけることを期待することができます。 DSCPをDiffservのベースのトラフィックサブセットまたは凝集体のより少ない数の間のトラフィックを分散するために使用される場合、より良い結果を達成することができます。 1つのプロポーザルに[DIFFSERV-インターコンチネンタル]を参照してください。これは、例えば、Diffservの情報および他の目的のためにそのTCフィールドの使用を運ぶために使用されるMPLSラベル[RFC5462]でのトラフィッククラス（TC）フィールドの限られたサイズにMPLSベースのネットワークのために特に重要です明示的輻輳通知（ECN）[RFC5129]。 MPLSとのDiffservの使用に関する詳細な説明については、[RFC3270]及び[RFC5127]を参照。"
    },
    {
      "indent": 0,
      "text": "4. Examples",
      "section_title": true,
      "ja": "4.例"
    },
    {
      "indent": 3,
      "text": "For real-time communications, one might want to mark the audio packets using EF and the video packets as AF41. However, a video conference receiving the audio packets significantly ahead of the video is not useful because lip sync is necessary between audio and video. It may still be desirable to send audio with a PHB that provides better service, because more reliable arrival of audio helps assure smooth audio rendering, which is often more important than fully faithful video rendering. There are also limits, as some devices have difficulties in synchronizing voice and video when packets that need to be rendered together arrive at significantly different times. It makes more sense to use different PHBs when the audio and video source streams do not share a strict timing relationship. For example, video content may be shared within a video conference via playback, perhaps of an unedited video clip that is intended to become part of a television advertisement. Such content sharing video does not need precise synchronization with video conference audio, and could use a different PHB, as content sharing video is more tolerant to jitter, loss, and delay.",
      "ja": "リアルタイム通信のために、一つはAF41としてEFおよびビデオパケットを使用してオーディオパケットをマークすることがあります。リップシンクは、オーディオとビデオの間に必要があるためしかし、かなり先にビデオの音声パケットを受信したビデオ会議は有用ではありません。オーディオのより信頼性の到着は、多くの場合、完全に忠実なビデオレンダリングよりも重要であるなめらかなオーディオレンダリングを保証するのに役立ちますので、まだ、より良いサービスを提供してPHBと音声を送信することが望ましい場合があります。一部のデバイスは、一緒にレンダリングする必要のあるパケットが大幅に異なる時間に到着したときに、音声とビデオの同期をとるのが困難を持っているとしての限界もあります。これは、オーディオとビデオソースストリームは、厳密なタイミング関係を共有していないときに別のPHBを使用する方が理にかなっています。例えば、ビデオコンテンツは、おそらくテレビ広告の一部となることを意図している未編集のビデオクリップの再生を介してビデオ会議内で共有することができます。このようなコンテンツ共有のビデオは、ビデオ会議の音声との正確な同期を必要とせず、コンテンツ共有のビデオは、ジッタ、ロス、遅延に寛容であるように、異なるPHBを使用することができます。"
    },
    {
      "indent": 3,
      "text": "Within a layered video RTP stream, ordering of frame communication is preferred, but importance of frame types varies, making use of PHBs with different drop precedences appropriate. For example, I-frames that contain an entire image are usually more important than P-frames that contain only changes from the previous image because loss of a P-frame (or part thereof) can be recovered (at the latest) via the next I-frame, whereas loss of an I-frame (or part thereof) may cause rendering problems for all of the P-frames that depend on the missing I-frame. For this reason, it is appropriate to mark I-frame packets with a PHB that has lower drop precedence than the PHB used for P-frames, as long as the PHBs preserve ordering among frames (e.g., are in a single AF class) - AF41 for I-frames and AF43 for P-frames is one possibility. Additional spatial and temporal layers beyond the base video layer could also be marked with higher drop precedence than the base video layer, as their loss reduces video quality, but does not disrupt video rendering.",
      "ja": "階層化ビデオRTPストリーム内で、フレーム通信の順序が好ましいが、フレームタイプの重要性は、適切な異なる廃棄優先順位とのPHBを利用して、変化します。例えば、画像全体を含むIフレームは、通常、次を介してPフレーム（またはその一部）の損失を回復することができるので（遅くとも）前の画像からの変更のみを含むPフレームよりも重要ですIフレーム、Iフレーム（またはその一部）の損失に対し、欠落Iフレームに依存するPフレームの全てに対して問題をレンダリング引き起こし得ます。このため、（例えば、単一のAFクラスである）限りのPHBは、フレーム間の順序を維持するように、Pフレームに使用PHBより低い廃棄優先順位を有するPHBとIフレームパケットをマークすることが適切です - P-フレームのIフレームとAF43のためのAF41は、1つの可能性です。その損失は、ビデオ品質は低下しますが、ビデオのレンダリングを破壊しないようにベースのビデオレイヤーを超える追加空間的および時間的な層も、ベースのビデオ層よりも高い廃棄優先順位をマークすることができます。"
    },
    {
      "indent": 3,
      "text": "Additional RTP streams in a real-time communication interaction could be marked with CS0 and carried as best-effort traffic. One example is real-time text transmitted as specified in RFC 4103 [RFC4103]. Best-effort forwarding suffices because such real-time text has loose timing requirements; RFC 4103 recommends sending text in chunks every 300 ms. Such text is technically real-time, but does not need a PHB promising better service than best effort, in contrast to audio or video.",
      "ja": "リアルタイム通信の相互作用における追加のRTPストリームはCS0とマークされ、などのベストエフォート型トラフィックを実行することができます。一例では、RFC 4103 [RFC4103]で指定されるように送信されたリアルタイムのテキストです。 、リアルタイムのテキストが緩んでタイミング要件を持っているので、ベストエフォート型の転送は足ります。 RFC 4103は、チャンク内のすべての300ミリ秒のテキストを送信するお勧めします。このようなテキストは、技術的にはリアルタイムではなく、オーディオやビデオとは対照的に、最善の努力よりも良いサービスを約束PHBを必要としません。"
    },
    {
      "indent": 3,
      "text": "A WebRTC application may use one or more RTP streams, as discussed above. In addition, it may use an SCTP-based data channel [DATA-CHAN] whose QoS treatment depends on the nature of the application. For example, best-effort treatment of data channels is likely to suffice for messaging, shared white board, and guided browsing applications, whereas latency-sensitive games might desire better QoS for their data channels.",
      "ja": "上述のようにのWebRTCアプリケーションは、一つ以上のRTPストリームを使用することができます。また、SCTPベースのデータチャネルを持つのQoS処理アプリケーションの性質に依存する[DATA-CHAN]を使用してもよいです。遅延の影響を受けやすいゲームが彼らのデータ・チャネルのためのより良いQoSを望む可能性があるのに対し、例えば、データチャネルのベストエフォート型の治療は、共有ホワイトボード、およびガイド付きブラウジングアプリケーションメッセージングのために十分可能性があります。"
    },
    {
      "indent": 0,
      "text": "5. Diffserv Interactions",
      "section_title": true,
      "ja": "5. Diffservの相互作用"
    },
    {
      "indent": 0,
      "text": "5.1. Diffserv, Reordering, and Transport Protocols",
      "section_title": true,
      "ja": "5.1。 Diffservの、並べ替え、およびトランスポートプロトコル"
    },
    {
      "indent": 3,
      "text": "Transport protocols provide data communication behaviors beyond those possible at the IP layer. An important example is that TCP [RFC793] provides reliable in-order delivery of data with congestion control. SCTP [RFC4960] provides additional properties such as preservation of message boundaries, and the ability to avoid head-of-line blocking that may occur with TCP.",
      "ja": "トランスポートプロトコルはIP層で可能なものを超えてデータ通信動作を提供します。重要な例は、TCPは、[RFC793]輻輳制御とデータの信頼性の順序配信を提供することです。 SCTP [RFC4960]は、メッセージ境界の保存、およびTCPで発生することがあり、ヘッドオブラインブロッキングを回避する能力などの追加の特性を提供します。"
    },
    {
      "indent": 3,
      "text": "In contrast, UDP [RFC768] is a basic unreliable datagram protocol that provides port-based multiplexing and demultiplexing on top of IP. Two other unreliable datagram protocols are UDP-Lite [RFC3828], a variant of UDP that may deliver partially corrupt payloads when errors occur, and DCCP [RFC4340], which provides a range of congestion control modes for its unreliable datagram service.",
      "ja": "対照的に、UDPは、[RFC768] IPの上でポートベースの多重分離を提供する基本的な信頼性のないデータグラムプロトコルです。他の二つの信頼性のないデータグラムプロトコルは、信頼性のないデータグラムサービスのための輻輳制御モードの範囲を提供するUDP-Liteは[RFC3828]、エラーが発生したときに、部分的に破損したペイロードを送達することができるUDPの変異体、およびDCCP [RFC4340]です。"
    },
    {
      "indent": 3,
      "text": "Transport protocols that provide reliable delivery (e.g., TCP, SCTP) are sensitive to network reordering of traffic. When a protocol that provides reliable delivery receives a packet other than the next expected packet, the protocol usually assumes that the expected packet has been lost and updates the peer, which often causes a retransmission. In addition, congestion control functionality in transport protocols (including DCCP) usually infers congestion when packets are lost. This creates additional sensitivity to significant network packet reordering, as such reordering may be (mis)interpreted as loss of the out-of-order packets, causing a congestion control response.",
      "ja": "信頼性の高い配信（例えば、TCP、SCTP）を提供するトランスポートプロトコルは、トラフィックの並べ替えをネットワークに敏感です。信頼できる配信を提供するプロトコルは、次の予想されるパケット以外のパケットを受信すると、プロトコルは通常予想されるパケットが失われたことを前提とし、多くの場合、再送を引き起こすピアを更新します。パケットが失われた場合に加えて、（DCCPを含む）トランスポートプロトコルの輻輳制御機能は、通常輻輳を推定します。そのような並べ替えは、（MIS）は、輻輳制御応答を引き起こす、アウトオブオーダーパケットの損失と解釈することができるので、これは、重大なネットワークパケット並べ替えに追加の感度を作成します。"
    },
    {
      "indent": 3,
      "text": "This sensitivity to reordering remains even when ECN [RFC3168] is in use, as ECN receivers are required to treat missing packets as potential indications of congestion, because:",
      "ja": "ECN [RFC3168]が使用されているときにECN受信機があるため、輻輳の潜在的な適応症として、欠落したパケットを処理するために必要とされる並べ替えにこの感度は、さえ残っています："
    },
    {
      "indent": 3,
      "text": "o Severe congestion may cause ECN-capable network nodes to drop packets, and",
      "ja": "O重度の輻輳がECN対応のネットワークノードはパケットをドロップさせ、そしてよいです"
    },
    {
      "indent": 3,
      "text": "o ECN traffic may be forwarded by network nodes that do not support ECN and hence drop packets to indicate congestion.",
      "ja": "O ECNトラフィックがECNをサポートし、したがって、輻輳を示すために、パケットをドロップしないネットワークノードによって転送されてもよいです。"
    },
    {
      "indent": 3,
      "text": "Congestion control is an important aspect of the Internet architecture; see [RFC2914] for further discussion.",
      "ja": "輻輳制御は、インターネットアーキテクチャの重要な側面です。さらなる議論のための[RFC2914]を参照してください。"
    },
    {
      "indent": 3,
      "text": "In general, marking packets with different DSCPs results in different PHBs being applied at nodes in the network, making reordering very likely due to use of different pools of forwarding resources for each PHB. This should not be done within a single network 5-tuple for current transport protocols, with the important exceptions of UDP and UDP-Lite.",
      "ja": "一般に、別のPHBに異なるのDSCP結果とマーキングパケットが原因各PHBの転送リソースの異なるプールの利用可能性が非常に高い並べ替えながら、ネットワーク内のノードに適用されます。これは、UDPとUDP-Liteの重要な例外を除いて、現在のトランスポートプロトコルのための単一のネットワーク5タプル以内に行うべきではありません。"
    },
    {
      "indent": 3,
      "text": "When PHBs that enable reordering are mixed within a single network 5-tuple, the effect is to mix QoS-based traffic classes within the scope of a single transport protocol connection or association. As these QoS-based traffic classes receive different network QoS treatments, they use different pools of network resources and hence may exhibit different levels of congestion. The result for congestion-controlled protocols is that a separate instance of congestion control functionality is needed per QoS-based traffic class. Current transport protocols support only a single instance of congestion control functionality for an entire connection or association; extending that support to multiple instances would add significant protocol complexity. Traffic in different QoS-based classes may use different paths through the network; this complicates path integrity checking in connection- or association-based protocols, as those paths may fail independently.",
      "ja": "並べ替えを有効にするのPHBは、単一のネットワーク5-タプル内で混合された場合、効果は、単一のトランスポートプロトコル接続または関連付けの範囲内でQoSベースのトラフィッククラスを混合することです。これらのQoSベースのトラフィッククラスは、異なるネットワークQoS処理を受信すると、彼らは、ネットワークリソースの異なるプールを使用するので、渋滞の異なるレベルを示すことができます。輻輳制御プロトコルのための結果は、輻輳制御機能の別のインスタンスは、QoSベースのトラフィッククラスごとに必要とされることです。現在のトランスポートプロトコルは、全体の接続または関連付けのための輻輳制御機能の単一インスタンスのみをサポートします。複数のインスタンスへの支援を拡大することは重要なプロトコルの複雑さを追加します。異なるQoSベースのクラス内のトラフィックは、ネットワークを介して異なるパスを使用してもよいです。これらのパスは、独立して失敗することがあり、これはconnection-または関連ベースのプロトコルで検査パスの整合性を複雑にします。"
    },
    {
      "indent": 3,
      "text": "The primary example where usage of multiple PHBs does not enable reordering within a single network 5-tuple is use of PHBs from a single AF class (e.g., AF1x). Traffic reordering within the scope of a network 5-tuple that uses a single PHB or AF class may occur for other transient reasons (e.g., routing changes or ECMP rebalancing).",
      "ja": "複数のPHBの使用は、単一のネットワーク5-タプル内で並べ替えを有効にしない主な例は、単一のAFクラス（例えば、AF1x）からのPHBの使用です。単一PHBを使用するか、AFクラスが他の一過性の理由（例えば、ルーティングの変更又はECMP・リバランス）が発生する可能性があり、ネットワーク5タプルの範囲内で並べ替えトラフィック。"
    },
    {
      "indent": 3,
      "text": "Reordering also affects other forms of congestion control, such as techniques for RTP congestion control that were under development when this memo was published; see [RMCAT-CC] for requirements. These techniques prefer use of a common (coupled) congestion controller for RTP streams between the same endpoints to reduce packet loss and delay by reducing competition for resources at any shared bottleneck.",
      "ja": "並べ替えはまた、このメモが公開されたとき、開発中だったRTPの輻輳制御のための技術として、輻輳制御の他の形態を、影響します。要件については、[RMCAT-CC]を参照してください。 RTPは、任意の共有ボトルネックでのリソースの競合を低減することにより、パケットロスや遅延を低減するために、同じエンドポイント間のストリームのためのこれらの技術は、一般的な（結合）輻輳制御装置を使用することを好みます。"
    },
    {
      "indent": 3,
      "text": "Shared bottlenecks can be detected via techniques such as correlation of one-way delay measurements across RTP streams. An alternate approach is to assume that the set of packets on a single network 5-tuple marked with DSCPs that do not enable reordering will utilize a common network path and common forwarding resources at each network node. Under that assumption, any bottleneck encountered by such packets is shared among all of them, making it safe to use a common (coupled) congestion controller (see [COUPLED-CC]). This is not a safe assumption when the packets involved are marked with DSCP values that enable reordering because a bottleneck may not be shared among all such packets (e.g., when the DSCP values result in use of different queues at a network node, but only one queue is a bottleneck).",
      "ja": "共有のボトルネックは、RTPストリームを横切って一方向遅延測定値の相関などの技術を介して検出することができます。別のアプローチは、単一のネットワーク上のパケットのセットが並べ替えを有効にしないのDSCPでマークされた5タプルは、各ネットワークノードで共通のネットワークパスと共通の転送リソースを利用すると仮定することです。その仮定の下では、このようなパケットが遭遇するすべてのボトルネックは、それが安全な共通（結合）輻輳制御装置を使用すること、それらのすべての間で共有されている（参照[共役型CC]）。ボトルネックは、DSCP値は、ネットワークノードで異なるキューを使用することになりますが、一つだけこのようなすべてのパケット（例えば、間で共有することはできませんので、これは関与パケットが並べ替えを有効にDSCP値でマークされている安全な仮定ではありませんキュー）がボトルネックとなっています。"
    },
    {
      "indent": 3,
      "text": "UDP and UDP-Lite are not sensitive to reordering in the network, because they do not provide reliable delivery or congestion control. On the other hand, when used to encapsulate other protocols (e.g., as UDP is used by WebRTC; see Section 2.1), the reordering considerations for the encapsulated protocols apply. For the specific usage of UDP by WebRTC, every encapsulated protocol (i.e., RTP, SCTP, and TCP) is sensitive to reordering as further discussed in this memo. In addition, [RFC5405] provides general guidelines for use of UDP (and UDP-Lite); the congestion control guidelines in that document apply to protocols encapsulated in UDP (or UDP-Lite).",
      "ja": "彼らは信頼性の高い配信や輻輳制御を提供しないため、UDPとUDP-Liteは、ネットワーク内の並べ替えに敏感ではありません。 （UDPは、のWebRTCによって使用される、例えば、セクション2.1を参照）一方、使用される場合、他のプロトコルをカプセル化し、カプセル化されたプロトコルの並べ替えの考慮事項が当てはまります。 WebRTC、すべてのカプセル化されたプロトコル（即ち、RTP、SCTP、およびTCP）によるUDPの特定の使用のためにさらにこのメモで説明したリオーダリングに敏感です。また、[RFC5405]はUDP（およびUDP-Liteの）を使用するための一般的なガイドラインを提供します。その文書での輻輳制御に関するガイドラインは、UDP（またはUDP-Liteの）中にカプセル化されたプロトコルに適用されます。"
    },
    {
      "indent": 0,
      "text": "5.2. Diffserv, Reordering, and Real-Time Communication",
      "section_title": true,
      "ja": "5.2。 Diffservの、並べ替え、およびリアルタイム通信"
    },
    {
      "indent": 3,
      "text": "Real-time communications are also sensitive to network reordering of packets. Such reordering may lead to unneeded retransmission and spurious retransmission control signals (such as NACK) in reliable delivery protocols (see Section 5.1). The degree of sensitivity depends on protocol or stream timers, in contrast to reliable delivery protocols that usually react to all reordering.",
      "ja": "リアルタイム通信は、パケットのネットワーク並べ替えに敏感です。そのような並べ替えは、（セクション5.1を参照）信頼できる配信プロトコルで（例えば、NACKのような）不要な再送とスプリアス再送制御信号をもたらし得ます。感度の程度は、通常、すべての並べ替えに対応信頼できる配信プロトコルとは対照的に、プロトコルまたはストリームタイマーに依存します。"
    },
    {
      "indent": 3,
      "text": "Receiver jitter buffers have important roles in the effect of reordering on real-time communications:",
      "ja": "レシーバのジッタバッファは、リアルタイム通信に並べ替えの効果に重要な役割を持っています："
    },
    {
      "indent": 3,
      "text": "o Minor packet reordering that is contained within a jitter buffer usually has no effect on rendering of the received RTP stream because packets that arrive out of order are retrieved in order from the jitter buffer for rendering.",
      "ja": "順不同で到着するパケットをレンダリングするためのジッタバッファから順に検索されるため、Oジッタバッファ内に含まれる小パケットの並べ替えは、通常、受信したRTPストリームのレンダリングに影響を及ぼしません。"
    },
    {
      "indent": 3,
      "text": "o Packet reordering that exceeds the capacity of a jitter buffer can cause user-perceptible quality problems (e.g., glitches, noise) for delay-sensitive communication, such as interactive conversations for which small jitter buffers are necessary to preserve human perceptions of real-time interaction. Interactive real-time communication implementations often discard data that is sufficiently late so that it cannot be rendered in source stream order, making retransmission counterproductive. For this reason, implementations of interactive real-time communication often do not use retransmission.",
      "ja": "Oジッタバッファの容量を超えたパケットの並び替えは、小さなジッタバッファは、リアルタイムの人間の知覚を維持するために必要であるため、対話型会話として、遅延に敏感な通信のためのユーザ知覚品質の問題（例えば、グリッチ、ノイズ）を引き起こす可能性がインタラクション。インタラクティブなリアルタイム通信の実装は、多くの場合、それは再送が逆作り、ソースストリームの順序でレンダリングすることができないように、十分に遅れているデータを破棄します。このため、インタラクティブなリアルタイム通信の実装は、多くの場合、再送を使用しないでください。"
    },
    {
      "indent": 3,
      "text": "o In contrast, replay of recorded media can tolerate significantly longer delays than interactive conversations, so replay is likely to use larger jitter buffers than interactive conversations. These larger jitter buffers increase the tolerance of replay to reordering by comparison to interactive conversations. The size of the jitter buffer imposes an upper bound on replay tolerance to reordering but does enable retransmission to be used when the jitter buffer is significantly larger than the amount of data that can be expected to arrive during the round-trip latency for retransmission.",
      "ja": "Oこれとは対照的に、記録されたメディアの再生には、対話型の会話よりも有意に長い遅延を許容することができますので、リプレイは、対話型の会話よりも大きなジッタバッファを使用する可能性があります。これらのより大きなジッタバッファは、インタラクティブな会話との比較によって並べ替えにリプレイの耐性を高めます。ジッタバッファのサイズは、並べ替えにリプレイ公差の上限を課すが、ジッタバッファは、再送信のための往復待ち時間の間に到着すると予想することができるデータの量よりも著しく大きい場合に使用される再送信を可能ありません。"
    },
    {
      "indent": 3,
      "text": "Network packet reordering has no effective upper bound and can exceed the size of any reasonable jitter buffer. In practice, the size of jitter buffers for replay is limited by external factors such as the amount of time that a human is willing to wait for replay to start.",
      "ja": "ネットワークパケットの並べ替えは、有効な上限がなく、合理的なジッタバッファのサイズを超えることができます。実際には、再生のためのジッタバッファのサイズは、人間が再生を開始するのを待つても構わないと思っている時間の量のような外部要因によって制限されます。"
    },
    {
      "indent": 0,
      "text": "5.3. Drop Precedence and Transport Protocols",
      "section_title": true,
      "ja": "5.3。ドロップ優先順位とトランスポートプロトコル"
    },
    {
      "indent": 3,
      "text": "Packets within the same network 5-tuple that use PHBs within a single AF class can be expected to draw upon the same forwarding resources on network nodes (e.g., use the same router queue), and hence use of multiple drop precedences within an AF class is not expected to cause latency variation. When PHBs within a single AF class are mixed within a flow, the resulting overall likelihood that packets will be dropped from that flow is a mix of the drop likelihoods of the PHBs involved.",
      "ja": "同じネットワーク内のパケットは、単一のAFクラス内のPHBを使用する5タプル（例えば、同一ルータのキューを使用して）ネットワークノード上で同じ転送リソースに描画することが期待、ひいてはAFクラス内の複数の廃棄優先順位を使用することができます待ち時間の変動を引き起こすことが予想されていません。単一のAFクラス内のPHBは、フロー内で混合される場合、パケットはその流れから削除される結果として得られる全体的な可能性は、関係のPHBのドロップ尤度の混合です。"
    },
    {
      "indent": 3,
      "text": "There are situations in which drop precedences should not be mixed. A simple example is that there is little value in mixing drop precedences within a TCP connection, because TCP's ordered delivery behavior results in any drop requiring the receiver to wait for the dropped packet to be retransmitted. Any resulting delay depends on the RTT and not the packet that was dropped. Hence a single DSCP should be used for all packets in a TCP connection.",
      "ja": "廃棄優先順位が混在すべきでない状況があります。単純な例では、ドロップされたパケットを待つために受信機を必要とする任意のドロップTCPの順序付けられた配信動作結果を再送信するためのTCP接続内の廃棄優先順位を混合するにはほとんど価値があるということです。結果として生じるいかなる遅延はRTTはなく落とされたパケットに依存します。したがって、単一のDSCPは、TCP接続のすべてのパケットに使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "As a consequence, when TCP is selected for NAT/FW traversal (e.g., by TURN), a single DSCP should be used for all traffic on that TCP connection. An additional reason for this recommendation is that packetization for STUN/ICE/TURN occurs before passing the resulting packets to TCP; TCP resegmentation may result in a different packetization on the wire, breaking any association between DSCPs and specific data to which they are intended to apply.",
      "ja": "TCPは、NAT / FWトラバーサルのために選択された場合、結果として、（例えば、TURNにより）、単一のDSCPは、TCP接続上のすべてのトラフィックのために使用されるべきです。 STUN / ICE / TURNは、TCPへの結果のパケットを渡す前に発生したため、この勧告のための追加的な理由は、パケットです。 TCPの再セグメンテーションは、それらが適用されることが意図されるのDSCPと特定データとの間の関連を壊す、ワイヤー上の異なるパケットを生じ得ます。"
    },
    {
      "indent": 3,
      "text": "SCTP [RFC4960] differs from TCP in a number of ways, including the ability to deliver messages in an order that differs from the order in which they were sent and support for unreliable streams. However, SCTP performs congestion control and retransmission across the entire association, and not on a per-stream basis. Although there may be advantages to using multiple drop precedence across SCTP streams or within an SCTP stream that does not use reliable ordered delivery, there is no practical operational experience in doing so (e.g., the SCTP sockets API [RFC6458] does not support use of more than one DSCP",
      "ja": "SCTP [RFC4960]は、彼らが信頼できないストリームのために送信され、サポートされた順序と異なる順序でメッセージを配信する機能など多くの方法でTCPとは異なります。しかしながら、SCTPは、全アソシエーションを横切っはなく、ストリーム単位で輻輳制御と再送を行います。 SCTPストリーム渡っや信頼性の高い注文の配信を使用していないSCTPストリーム内の複数の廃棄優先順位を使用する利点があるかもしれないが、例えば、SCTPソケットAPI [RFC6458]はの使用をサポートしていません（そうすることで実用的な運用経験はありません複数のDSCP"
    },
    {
      "indent": 3,
      "text": "for an SCTP association). As a consequence, the impacts on SCTP protocol and implementation behavior are unknown and difficult to predict. Hence a single DSCP should be used for all packets in an SCTP association, independent of the number or nature of streams in that association. Similar reasoning applies to a DCCP connection; a single DSCP should be used because the scope of congestion control is the connection and there is no operational experience with using more than one DSCP. This recommendation may be revised in the future if experiments, analysis, and operational experience provide compelling reasons to change it.",
      "ja": "SCTPアソシエーションのため）。その結果、SCTPプロトコルと実装の行動への影響は不明と予測することは困難です。したがって、単一のDSCPは、その関連したストリームの数や性質とは無関係に、SCTPアソシエーションのすべてのパケットのために使用されるべきです。同様の推論がDCCP接続に適用されます。輻輳制御の範囲が接続され、複数のDSCPを使用して何の運用経験がないため、単一のDSCPを使用する必要があります。実験、分析、および運用経験がそれを変更するには説得力のある理由が提供する場合、この勧告は、将来的に変更されることがあります。"
    },
    {
      "indent": 3,
      "text": "Guidance on transport protocol design and implementation to provide support for use of multiple PHBs and DSCPs in a transport protocol connection (e.g., DCCP) or transport protocol association (e.g., SCTP) is out of scope for this memo.",
      "ja": "トランスポートプロトコルの設計と実装に関するガイダンスは、トランスポートプロトコル接続（例えば、DCCP）またはトランスポート・プロトコル・アソシエーション（例えば、SCTP）このメモの範囲外であるに複数のPHBとのDSCPを使用するためのサポートを提供します。"
    },
    {
      "indent": 0,
      "text": "5.4. Diffserv and RTCP",
      "section_title": true,
      "ja": "5.4。 DiffservのとRTCP"
    },
    {
      "indent": 3,
      "text": "RTCP [RFC3550] is used with RTP to monitor quality of service and convey information about RTP session participants. A sender of RTCP packets that also sends RTP packets (i.e., originates an RTP stream) should use the same DSCP marking for both types of packets. If an RTCP sender doesn't send any RTP packets, it should mark its RTCP packets with the DSCP that it would use if it did send RTP packets with media similar to the RTP traffic that it receives. If the RTCP sender uses or would use multiple DSCPs that differ only in drop precedence for RTP, then it should use the DSCP with the least likelihood of drop for RTCP to increase the likelihood of RTCP packet delivery.",
      "ja": "RTCP [RFC3550]は、サービスの品質を監視し、RTPセッションの参加者についての情報を伝えるためにRTPで使用されます。また、RTPパケットを送信するRTCPパケットの送信元（すなわち、RTPストリームを発信）パケットの両方のタイプのマーキング同じDSCPを使用する必要があります。 RTCPの送信者が任意のRTPパケットを送信しない場合、それは、それが受信RTPトラフィックに似たメディアとRTPパケットを送信しなかった場合、それが使用することをDSCPとのRTCPパケットをマークする必要があります。 RTCPの送信者が使用していますかRTPのための廃棄優先順位のみが異なる複数のDSCPを使用する場合、それはRTCPパケットの配信の可能性を高めるためにRTCPのドロップの最も可能性とDSCPを使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "If the SDP bundle extension [SDP-BUNDLE] is used to negotiate sending multiple types of media in a single RTP session, then receivers will send separate RTCP reports for each type of media, using a separate SSRC for each media type; each RTCP report should be marked with the DSCP corresponding to the type of media handled by the reporting SSRC.",
      "ja": "SDPバンドル延長[SDP-束が単一のRTPセッションでメディアの複数のタイプを送信交渉するために使用される場合、受信機は、別個のRTCPは、各メディアタイプに対して個別のSSRCを使用して、メディアの種類ごとに報告送信されます。各RTCPレポートは、DSCPが報告SSRCで扱うメディアの種類に対応してマークする必要があります。"
    },
    {
      "indent": 3,
      "text": "This guidance may result in different DSCP markings for RTP streams and RTCP receiver reports about those RTP streams. The resulting variation in network QoS treatment by traffic direction is necessary to obtain representative round-trip time (RTT) estimates that correspond to the media path RTT, which may differ from the transport protocol RTT. RTCP receiver reports may be relatively infrequent, and hence the resulting RTT estimates are of limited utility for transport protocol congestion control (although those RTT estimates have other important uses; see [RFC3550]). For this reason, it is important that RTCP receiver reports sent by an SSRC receive the same network QoS treatment as the RTP stream being sent by that SSRC.",
      "ja": "このガイダンスは、RTPストリームと、それらのRTPストリームについてRTCPレシーバレポートの異なるDSCPマーキングをもたらすことができます。トラフィックの方向によって、ネットワークのQoS処理で得られた変化は、トランスポートプロトコルRTT異なっていてもよい媒体経路RTTに対応する代表的なラウンドトリップ時間（RTT）の推定値を得る必要があります。 RTCPレシーバレポートは比較的まれであってもよく、従って、得られたRTT推定値は、（それらのRTT推定値は、他の重要な用途を有するが、[RFC3550]を参照）トランスポートプロトコル輻輳制御のための限られた有用性のものです。このような理由から、SSRCによって送られたRTCPレシーバレポートはそのSSRCによって送信されたRTPストリームと同じネットワークのQoS処理を受けることが重要です。"
    },
    {
      "indent": 0,
      "text": "6. Guidelines",
      "section_title": true,
      "ja": "6.ガイドライン"
    },
    {
      "indent": 3,
      "text": "The only use of multiple standardized PHBs and DSCPs that does not enable network reordering among packets marked with different DSCPs is use of PHBs within a single AF class. All other uses of multiple PHBs and/or the class selector DSCPs enable network reordering of packets that are marked with different DSCPs. Based on this and the foregoing discussion, the guidelines in this section apply to use of Diffserv with real-time communications.",
      "ja": "別のDSCPでマークされたパケットのうち、ネットワーク並べ替えを有効にしない複数の標準化のPHBとのDSCPの使用のみでは、単一のAFクラス内のPHBを使用することです。複数のPHBおよび/またはクラスセレクタのDSCPのすべての他の用途が異なるのDSCPでマークされたパケットのネットワーク並べ替えを有効にします。これと上記の議論に基づいて、このセクションのガイドラインは、リアルタイム通信ではDiffservの使用に適用されます。"
    },
    {
      "indent": 3,
      "text": "Applications and other traffic sources (including RTP SSRCs):",
      "ja": "アプリケーションと（RTP SSRCsを含む）他のトラフィックソース："
    },
    {
      "indent": 3,
      "text": "o Should limit use of DSCPs within a single RTP stream to those whose corresponding PHBs do not enable packet reordering. If this is not done, significant network reordering may overwhelm implementation assumptions about reordering limits, e.g., jitter buffer size, causing poor user experiences (see Section 5.2). This guideline applies to all of the RTP streams that are within the scope of a common (coupled) congestion controller when that controller does not use per-RTP-stream measurements for bottleneck detection.",
      "ja": "Oは、その対応のPHBパケット並べ替えを有効にしていないものに、単一のRTPストリーム内のDSCPの使用を制限する必要があります。これが行われていない場合、重大なネットワークリオーダリング（セクション5.2を参照）、制限、例えば、ジッタバッファサイズを並べ替え乏しいユーザエクスペリエンスを引き起こす約実装仮定を圧倒することができます。このガイドラインは、コントローラがボトルネック検出ごとのRTPストリームの測定値を使用しない一般的な（結合）輻輳制御装置の範囲内に含まれるRTPストリームの全てに適用されます。"
    },
    {
      "indent": 3,
      "text": "o Should use a single DSCP for RTCP packets, which should be a DSCP used for RTP packets that are or would be sent by that SSRC (see Section 5.4).",
      "ja": "Oがあるか、またはそのSSRC（セクション5.4を参照）によって送信されるRTPパケットのために使用されるDSCPであるべき、RTCPパケットのための単一のDSCPを使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "o Should use a single DSCP for all packets within a reliable transport protocol session (e.g., TCP connection, SCTP association) or DCCP connection (see Sections 5.1 and 5.3). For SCTP, this requirement applies across the entire SCTP association, and not just to individual streams within an association. When TURN selects TCP for NAT/FW traversal, this guideline applies to all traffic multiplexed onto that TCP connection, in contrast to use of UDP for NAT/FW traversal.",
      "ja": "oは（例えば、TCP接続、SCTPアソシエーション）またはDCCP接続（セクション5.1および5.3を参照）信頼性の高いトランスポート・プロトコル・セッション内のすべてのパケットのための単一のDSCPを使用する必要があります。 SCTPのために、この要件は、アソシエーション内の個々のストリームに対してだけでなく、全体のSCTPアソシエーションを横切って適用されます。 TURNは、NAT / FW越えのためにTCPを選択すると、このガイドラインは、NAT / FW越えのためにUDPの使用とは対照的に、そのTCP接続上に多重化されるすべてのトラフィックに適用されます。"
    },
    {
      "indent": 3,
      "text": "o May use different DSCPs whose corresponding PHBs enable reordering within a single UDP or UDP-Lite 5-tuple, subject to the above constraints. The service differentiation provided by such usage is unreliable, as it may be removed or changed by DSCP remarking at network boundaries as described in Section 3.2 above.",
      "ja": "Oその対応のPHB上の制約を受ける、単一のUDPまたはUDP-Liteの5タプル内で並べ替えを有効に別のDSCPを使用してもよいです。それが除去または上記セクション3.2に記載されるようにDSCPは、ネットワークの境界でリマークによって変更することができるような使用によって提供されるサービスの差別化は、信頼できません。"
    },
    {
      "indent": 3,
      "text": "o Cannot rely on end-to-end preservation of DSCPs as network node remarking can change DSCPs and remove drop precedence distinctions (see Section 3.2). For example, if a source uses drop precedence distinctions within an AF class to identify different types of video frames, using those DSCP values at the receiver to identify frame type is inherently unreliable.",
      "ja": "Oネットワーク・ノード・再マーキングとしてのDSCPのエンド・ツー・エンドの保存に頼ることができない（3.2節を参照）のDSCPを変更し、廃棄優先順位の区別を削除することができます。ソースは、フレームタイプを識別するために受信機においてそれらのDSCP値を使用して、ビデオフレームの種類を識別するために、AFクラス内の優先順位の区別をドロップ使用する場合、例えば、本質的に信頼できません。"
    },
    {
      "indent": 3,
      "text": "o Should limit use of the CS1 codepoint to traffic for which best effort forwarding is acceptable, as network support for use of CS1 to select a \"less than best-effort\" PHB is inconsistent. Further, some networks may treat CS1 as providing \"better than best-effort\" forwarding behavior.",
      "ja": "oはベストエフォート型の転送は、「ベストエフォート未満」PHBは矛盾して選択するために、CS1を使用するためのネットワークサポートとして、許容されたトラフィックにCS1コードポイントの使用を制限する必要があります。さらに、いくつかのネットワークは「ベストエフォート型よりも優れた」転送動作を提供するものとしてCS1を扱うことがあります。"
    },
    {
      "indent": 3,
      "text": "There is no guidance in this memo on how network operators should differentiate traffic. Networks may support all of the PHBs discussed herein, classify EF and AFxx traffic identically, or even remark all traffic to best effort at some ingress points. Nonetheless, it is useful for applications and other traffic sources to provide finer granularity DSCP marking on packets for the benefit of networks that offer QoS service differentiation. A specific example is that traffic originating from a browser may benefit from QoS service differentiation in within-building and residential access networks, even if the DSCP marking is subsequently removed or simplified. This is because such networks and the boundaries between them are likely traffic bottleneck locations (e.g., due to customer aggregation onto common links and/or speed differences among links used by the same traffic).",
      "ja": "ネットワークオペレータは、トラフィックを差別化する方法で、このメモにはガイダンスはありません。ネットワークは、ここで議論のPHBのすべてをサポートして同一のEFとAFxxトラフィックを分類、あるいはいくつかの入口点で最善の努力へのすべてのトラフィックを再マーキングします。それにもかかわらず、QoSサービスの差別化を提供するネットワークの利益のために、パケットにマーキングより細かい粒度のDSCPを提供するために、アプリケーションやその他のトラフィックソースのために有用です。具体的な例では、トラフィックは、ブラウザから発信するDSCPマーキングは後に除去または簡略化されている場合でも、内・建物内のQoSサービスの差別化と住宅のアクセスネットワークから利益を得ることができるということです。このようなネットワークとそれらの間の境界は（共通リンクおよび/または同一のトラフィックが使用するリンク間の速度差に顧客の凝集による例えば、）可能性が高いトラフィックのボトルネック箇所あるためです。"
    },
    {
      "indent": 0,
      "text": "7. Security Considerations",
      "section_title": true,
      "ja": "7.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "The security considerations for all of the technologies discussed in this memo apply; in particular, see the security considerations for RTP in [RFC3550] and Diffserv in [RFC2474] and [RFC2475].",
      "ja": "このメモで議論した技術のすべてのためのセキュリティの考慮事項が適用されます。特に、[RFC2474]と[RFC2475]の[RFC3550]でRTPのためのセキュリティの考慮事項を参照してくださいとのDiffserv。"
    },
    {
      "indent": 3,
      "text": "Multiplexing of multiple protocols onto a single UDP 5-tuple via encapsulation has implications for network functionality that monitors or inspects individual protocol flows, e.g., firewalls and traffic monitoring systems. When implementations of such functionality lack visibility into encapsulated traffic (likely for many current implementations), it may be difficult or impossible to apply network security policy and associated controls at a finer granularity than the overall UDP 5-tuple.",
      "ja": "カプセル化を介して単一のUDP 5タプルへの複数のプロトコルの多重化は、個々のプロトコル・フロー、例えば、ファイアウォールや交通監視システムを監視または検査するネットワーク機能のための意味を持ちます。そのような機能の実装は、（多くの現在の実装の可能性が高い）カプセル化されたトラフィックの可視性を欠いている場合、全体的なUDP 5タプルより細かい粒度でネットワークセキュリティポリシーと関連する制御を適用することは困難または不可能であり得ます。"
    },
    {
      "indent": 3,
      "text": "Use of multiple DSCPs that enable reordering within an overall real-time communication interaction enlarges the set of network forwarding resources used by that interaction, thereby increasing exposure to resource depletion or failure, independent of whether the underlying cause is benign or malicious. This represents an increase in the effective attack surface of the interaction and is a consideration in selecting an appropriate degree of QoS differentiation among the components of the real-time communication interaction. See Section 3.3.2.1 of [RFC6274] for related discussion of DSCP security considerations.",
      "ja": "全体的なリアルタイム通信の相互作用の中に並べ替え可能にする複数のDSCPの使用は、それによって根本的な原因は、良性または悪意のあるであるかどうかの独立した資源の枯渇や故障、への露出を増やし、その相互作用によって使用されるネットワーク転送リソースのセットを拡大します。これは、相互作用の効果的な攻撃面の増加を表し、リアルタイム通信の相互作用のコンポーネント間のQoS差別化の適切な程度を選択する際に考慮すべき事項です。 DSCPのセキュリティに関する考慮事項の関連議論については[RFC6274]のセクション3.3.2.1を参照してください。"
    },
    {
      "indent": 3,
      "text": "Use of multiple DSCPs to provide differentiated QoS service may reveal information about the encrypted traffic to which different service levels are provided. For example, DSCP-based identification of RTP streams combined with packet frequency and packet size could reveal the type or nature of the encrypted source streams. The IP header used for forwarding has to be unencrypted for obvious reasons, and the DSCP likewise has to be unencrypted to enable different IP forwarding behaviors to be applied to different packets. The nature of encrypted traffic components can be disguised via encrypted dummy data padding and encrypted dummy packets, e.g., see the discussion of traffic flow confidentiality in [RFC4303]. Encrypted dummy packets could even be added in a fashion that an observer of the overall encrypted traffic might mistake for another encrypted RTP stream.",
      "ja": "差別化のQoSサービスを提供するために、複数のDSCPを使用すると、さまざまなサービスレベルが提供されているために暗号化されたトラフィックに関する情報を公開してもよいです。例えば、パケットの周波数とパケットサイズと組み合わせRTPのDSCPベース同定ストリームは、暗号化されたソースストリームの種類や性質を明らかにできました。転送に使用されるIPヘッダは、明白な理由のために暗号化されていないことがあり、DSCPは、同様に異なるパケットに適用される異なるIPフォワーディング動作を可能にするために暗号化されなければなりません。暗号化されたトラフィックの成分の性質は、例えば、[RFC4303]のトラフィックフロー機密性の議論を参照して、暗号化されたダミーデータをパディングし、暗号化されたダミーパケットを介して偽装することができます。暗号化されたダミーパケットであっても、全体の暗号化されたトラフィックの観察者が別の暗号化されたRTPストリームのための誤解かもしれないという形で追加することができます。"
    },
    {
      "indent": 0,
      "text": "8. References",
      "section_title": true,
      "ja": "8.参照文献"
    },
    {
      "indent": 0,
      "text": "8.1. Normative References",
      "section_title": true,
      "ja": "8.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC768] Postel, J., \"User Datagram Protocol\", STD 6, RFC 768, DOI 10.17487/RFC0768, August 1980, <http://www.rfc-editor.org/info/rfc768>.",
      "ja": "[RFC768]ポステル、J.、 \"ユーザ・データグラム・プロトコル\"、STD 6、RFC 768、DOI 10.17487 / RFC0768、1980年8月、<http://www.rfc-editor.org/info/rfc768>。"
    },
    {
      "indent": 3,
      "text": "[RFC793] Postel, J., \"Transmission Control Protocol\", STD 7, RFC 793, DOI 10.17487/RFC0793, September 1981, <http://www.rfc-editor.org/info/rfc793>.",
      "ja": "[RFC793]ポステル、J.、 \"伝送制御プロトコル\"、STD 7、RFC 793、DOI 10.17487 / RFC0793、1981年9月、<http://www.rfc-editor.org/info/rfc793>。"
    },
    {
      "indent": 3,
      "text": "[RFC2474] Nichols, K., Blake, S., Baker, F., and D. Black, \"Definition of the Differentiated Services Field (DS Field) in the IPv4 and IPv6 Headers\", RFC 2474, DOI 10.17487/RFC2474, December 1998, <http://www.rfc-editor.org/info/rfc2474>.",
      "ja": "[RFC2474]ニコルズ、K.、ブレイク、S.、ベイカー、F.、およびD.ブラック、 \"IPv4とIPv6ヘッダーの差別化されたサービス分野（DSフィールド）の定義\"、RFC 2474、DOI 10.17487 / RFC2474、 1998年12月、<http://www.rfc-editor.org/info/rfc2474>。"
    },
    {
      "indent": 3,
      "text": "[RFC2475] Blake, S., Black, D., Carlson, M., Davies, E., Wang, Z., and W. Weiss, \"An Architecture for Differentiated Services\", RFC 2475, DOI 10.17487/RFC2475, December 1998, <http://www.rfc-editor.org/info/rfc2475>.",
      "ja": "[RFC2475]ブレイク、S.、ブラ​​ック、D.、カールソン、M.、デイヴィス、E.、王、Z.、およびW.ワイス、 \"差別化サービスのためのアーキテクチャ\"、RFC 2475、DOI 10.17487 / RFC2475、12月1998年、<http://www.rfc-editor.org/info/rfc2475>。"
    },
    {
      "indent": 3,
      "text": "[RFC2597] Heinanen, J., Baker, F., Weiss, W., and J. Wroclawski, \"Assured Forwarding PHB Group\", RFC 2597, DOI 10.17487/RFC2597, June 1999, <http://www.rfc-editor.org/info/rfc2597>.",
      "ja": "[RFC2597] Heinanen、J.、ベーカー、F.、ワイス、W.、及びJ. Wroclawski、 \"保証転送PHBグループ\"、RFC 2597、DOI 10.17487 / RFC2597、1999年6月、<HTTP：//www.rfc- editor.org/info/rfc2597>。"
    },
    {
      "indent": 3,
      "text": "[RFC3246] Davie, B., Charny, A., Bennet, J., Benson, K., Le Boudec, J., Courtney, W., Davari, S., Firoiu, V., and D. Stiliadis, \"An Expedited Forwarding PHB (Per-Hop Behavior)\", RFC 3246, DOI 10.17487/RFC3246, March 2002, <http://www.rfc-editor.org/info/rfc3246>.",
      "ja": "[RFC3246]デイビー、B.、Charny、A.、ベネット、J.、ベンソン、K.、ルBoudec、J.、コートニー、W.、Davari、S.、Firoiu、V.、およびD. Stiliadis、 \"緊急転送PHB（ホップ単位動作）」、RFC 3246、DOI 10.17487 / RFC3246、2002年3月、<http://www.rfc-editor.org/info/rfc3246>。"
    },
    {
      "indent": 3,
      "text": "[RFC3550] Schulzrinne, H., Casner, S., Frederick, R., and V. Jacobson, \"RTP: A Transport Protocol for Real-Time Applications\", STD 64, RFC 3550, DOI 10.17487/RFC3550, July 2003, <http://www.rfc-editor.org/info/rfc3550>.",
      "ja": "[RFC3550] Schulzrinneと、H.、Casner、S.、フレデリック、R.、およびV.ヤコブソン、 \"RTP：リアルタイムアプリケーションのためのトランスポートプロトコル\"、STD 64、RFC 3550、DOI 10.17487 / RFC3550、2003年7月、 <http://www.rfc-editor.org/info/rfc3550>。"
    },
    {
      "indent": 3,
      "text": "[RFC3662] Bless, R., Nichols, K., and K. Wehrle, \"A Lower Effort Per-Domain Behavior (PDB) for Differentiated Services\", RFC 3662, DOI 10.17487/RFC3662, December 2003, <http://www.rfc-editor.org/info/rfc3662>.",
      "ja": "[RFC3662]、R.、ニコルズ、K.、およびK. Wehrleの祝福、 \"低級努力ドメイン単位の行動差別化サービスのための（PDB）\"、RFC 3662、DOI 10.17487 / RFC3662、2003年12月、<のhttp：// www.rfc-editor.org/info/rfc3662>。"
    },
    {
      "indent": 3,
      "text": "[RFC3828] Larzon, L-A., Degermark, M., Pink, S., Jonsson, L-E., Ed., and G. Fairhurst, Ed., \"The Lightweight User Datagram Protocol (UDP-Lite)\", RFC 3828, DOI 10.17487/RFC3828, July 2004, <http://www.rfc-editor.org/info/rfc3828>.",
      "ja": "[RFC3828] Larzon、LA。、Degermark、M.、ピンク、S.、ジョンソン、LE。、編、及びG. Fairhurst、編、 \"軽量ユーザーデータグラムプロトコル（UDP-Liteの）\"、RFC 3828、 DOI 10.17487 / RFC3828、2004年7月、<http://www.rfc-editor.org/info/rfc3828>。"
    },
    {
      "indent": 3,
      "text": "[RFC4340] Kohler, E., Handley, M., and S. Floyd, \"Datagram Congestion Control Protocol (DCCP)\", RFC 4340, DOI 10.17487/RFC4340, March 2006, <http://www.rfc-editor.org/info/rfc4340>.",
      "ja": "[RFC4340]コーラー、E.、ハンドリー、M.、およびS.フロイド、 \"データグラム輻輳制御プロトコル（DCCP）\"、RFC 4340、DOI 10.17487 / RFC4340、2006年3月、<のhttp：//www.rfc-editor。組織/情報/ RFC4340>。"
    },
    {
      "indent": 3,
      "text": "[RFC4960] Stewart, R., Ed., \"Stream Control Transmission Protocol\", RFC 4960, DOI 10.17487/RFC4960, September 2007, <http://www.rfc-editor.org/info/rfc4960>.",
      "ja": "[RFC4960]スチュワート、R.、エド。、 \"ストリーム制御伝送プロトコル\"、RFC 4960、DOI 10.17487 / RFC4960、2007年9月、<http://www.rfc-editor.org/info/rfc4960>。"
    },
    {
      "indent": 3,
      "text": "[RFC5405] Eggert, L. and G. Fairhurst, \"Unicast UDP Usage Guidelines for Application Designers\", BCP 145, RFC 5405, DOI 10.17487/RFC5405, November 2008, <http://www.rfc-editor.org/info/rfc5405>.",
      "ja": "[RFC5405]エッゲルト、L.とG. Fairhurst、 \"アプリケーションデザイナーのためのユニキャストUDPの使用上の注意事項\"、BCP 145、RFC 5405、DOI 10.17487 / RFC5405、2008年11月、<http://www.rfc-editor.org/info / rfc5405>。"
    },
    {
      "indent": 3,
      "text": "[RFC5865] Baker, F., Polk, J., and M. Dolly, \"A Differentiated Services Code Point (DSCP) for Capacity-Admitted Traffic\", RFC 5865, DOI 10.17487/RFC5865, May 2010, <http://www.rfc-editor.org/info/rfc5865>.",
      "ja": "[RFC5865]ベーカー、F.、ポーク、J.、およびM.ドリー、 \"差別化サービスコードポイント容量-是認トラフィックの（DSCP）\"、RFC 5865、DOI 10.17487 / RFC5865、2010年5月、<HTTP：// www.rfc-editor.org/info/rfc5865>。"
    },
    {
      "indent": 3,
      "text": "[RFC6951] Tuexen, M. and R. Stewart, \"UDP Encapsulation of Stream Control Transmission Protocol (SCTP) Packets for End-Host to End-Host Communication\", RFC 6951, DOI 10.17487/RFC6951, May 2013, <http://www.rfc-editor.org/info/rfc6951>.",
      "ja": "[RFC6951] Tuexen、M.とR.スチュワート、RFC 6951、DOI 10.17487 / RFC6951、2013年5月、<HTTP \"ストリーム制御伝送プロトコル（SCTP）エンドホストへのエンドホスト通信用パケットのUDPカプセル化\"：/ /www.rfc-editor.org/info/rfc6951>。"
    },
    {
      "indent": 3,
      "text": "[RFC7656] Lennox, J., Gross, K., Nandakumar, S., Salgueiro, G., and B. Burman, Ed., \"A Taxonomy of Semantics and Mechanisms for the Real-Time Transport Protocol (RTP) Sources\", RFC 7656, DOI 10.17487/RFC7656, November 2015, <http://www.rfc-editor.org/info/rfc7656>.",
      "ja": "[RFC7656]レノックス、J.、グロス、K.、Nandakumar、S.、Salgueiro、G.、およびB.ビルマ、エド。、 \"リアルタイムトランスポートプロトコルのための意味論およびメカニズムの分類（RTP）ソース\" 、RFC 7656、DOI 10.17487 / RFC7656、2015年11月、<http://www.rfc-editor.org/info/rfc7656>。"
    },
    {
      "indent": 0,
      "text": "8.2. Informative References",
      "section_title": true,
      "ja": "8.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[COUPLED-CC] Welzl, M., Islam, S., and S. Gjessing, \"Coupled congestion control for RTP media\", Work in Progress, draft-welzl-rmcat-coupled-cc-05, June 2015.",
      "ja": "[COUPLED-CC] Welzl、M.、イスラム教、S.、およびS. Gjessing、進行中で働いて、ドラフトwelzl-rmcat結合-CC-05、2015年6月 \"RTPメディア用結合輻輳制御\"。"
    },
    {
      "indent": 3,
      "text": "[DATA-CHAN] Jesup, R., Loreto, S., and M. Tuexen, \"WebRTC Data Channels\", Work in Progress, draft-ietf-rtcweb-data-channel-13, January 2015.",
      "ja": "[DATA-CHAN]ジェサップ、R.、ロレート、S.、およびM. Tuexen、 \"のWebRTCデータ・チャンネル\"、進行中で働いて、ドラフトIETF-rtcwebデータチャネル-13、2015年1月。"
    },
    {
      "indent": 3,
      "text": "[DIFFSERV-INTERCON] Geib, R., Ed. and D. Black, \"Diffserv interconnection classes and practice\", Work in Progress, draft-ietf-tsvwg-diffserv-intercon-03, October 2015.",
      "ja": "[DIFFSERV-インターコンチネンタル] Geib、R.、エド。そして、D.黒、 \"Diffservの相互接続クラスと実践\" が進行中で働いて、ドラフト-IETF-TSVWG-のDiffServ-インターコンチネンタル-03、2015年10月。"
    },
    {
      "indent": 3,
      "text": "[H.221] ITU-T, \"Frame structure for a 64 to 1920 kbit/s channel in audiovisual teleservices\", Recommendation H.221, March 2009.",
      "ja": "[H.221] ITU-T、TTC標準JT-H221、2009月 \"視聴覚テレサービスで64〜1920キロビット/秒チャネルのフレーム構造\"。"
    },
    {
      "indent": 3,
      "text": "[H.264] ITU-T, \"Advanced video coding for generic audiovisual services\", Recommendation H.264, February 2014.",
      "ja": "[264] ITU-T、勧告H.264、2014年2月 \"一般的な視聴覚サービスのための高度なビデオコーディング\"。"
    },
    {
      "indent": 3,
      "text": "[RFC2697] Heinanen, J. and R. Guerin, \"A Single Rate Three Color Marker\", RFC 2697, DOI 10.17487/RFC2697, September 1999, <http://www.rfc-editor.org/info/rfc2697>.",
      "ja": "[RFC2697] Heinanen、J.とR.ゲラン、 \"シングルレート3カラーマーカー\"、RFC 2697、DOI 10.17487 / RFC2697、1999年9月、<http://www.rfc-editor.org/info/rfc2697>。"
    },
    {
      "indent": 3,
      "text": "[RFC2698] Heinanen, J. and R. Guerin, \"A Two Rate Three Color Marker\", RFC 2698, DOI 10.17487/RFC2698, September 1999, <http://www.rfc-editor.org/info/rfc2698>.",
      "ja": "[RFC2698] Heinanen、J.とR.ゲラン、 \"二つのレート3カラーマーカー\"、RFC 2698、DOI 10.17487 / RFC2698、1999年9月、<http://www.rfc-editor.org/info/rfc2698>。"
    },
    {
      "indent": 3,
      "text": "[RFC2914] Floyd, S., \"Congestion Control Principles\", BCP 41, RFC 2914, DOI 10.17487/RFC2914, September 2000, <http://www.rfc-editor.org/info/rfc2914>.",
      "ja": "[RFC2914]フロイド、S.、 \"輻輳制御の原理\"、BCP 41、RFC 2914、DOI 10.17487 / RFC2914、2000年9月、<http://www.rfc-editor.org/info/rfc2914>。"
    },
    {
      "indent": 3,
      "text": "[RFC3168] Ramakrishnan, K., Floyd, S., and D. Black, \"The Addition of Explicit Congestion Notification (ECN) to IP\", RFC 3168, DOI 10.17487/RFC3168, September 2001, <http://www.rfc-editor.org/info/rfc3168>.",
      "ja": "\"IPへの明示的輻輳通知の追加（ECN）\" [RFC3168]ラマクリシュナン、K.、フロイド、S.、およびD.ブラック、RFC 3168、DOI 10.17487 / RFC3168、2001年9月、<のhttp：// WWW。 rfc-editor.org/info/rfc3168>。"
    },
    {
      "indent": 3,
      "text": "[RFC3270] Le Faucheur, F., Wu, L., Davie, B., Davari, S., Vaananen, P., Krishnan, R., Cheval, P., and J. Heinanen, \"Multi-Protocol Label Switching (MPLS) Support of Differentiated Services\", RFC 3270, DOI 10.17487/RFC3270, May 2002, <http://www.rfc-editor.org/info/rfc3270>.",
      "ja": "[RFC3270]ルFaucheur、F.、ウー、L.、デイビー、B.、Davari、S.、Vaananen、P.、クリシュナン、R.、シュヴァル、P.、およびJ. Heinanen、「マルチプロトコルラベルスイッチング（MPLS）差別化サービスのサポート」、RFC 3270、DOI 10.17487 / RFC3270、2002年5月、<http://www.rfc-editor.org/info/rfc3270>。"
    },
    {
      "indent": 3,
      "text": "[RFC4103] Hellstrom, G. and P. Jones, \"RTP Payload for Text Conversation\", RFC 4103, DOI 10.17487/RFC4103, June 2005, <http://www.rfc-editor.org/info/rfc4103>.",
      "ja": "[RFC4103]ヘルストローム、G.とP.ジョーンズ、 \"テキストの会話のためのRTPペイロード\"、RFC 4103、DOI 10.17487 / RFC4103、2005年6月、<http://www.rfc-editor.org/info/rfc4103>。"
    },
    {
      "indent": 3,
      "text": "[RFC4303] Kent, S., \"IP Encapsulating Security Payload (ESP)\", RFC 4303, DOI 10.17487/RFC4303, December 2005, <http://www.rfc-editor.org/info/rfc4303>.",
      "ja": "[RFC4303]ケント、S.、 \"IPカプセル化セキュリティペイロード（ESP）\"、RFC 4303、DOI 10.17487 / RFC4303、2005年12月、<http://www.rfc-editor.org/info/rfc4303>。"
    },
    {
      "indent": 3,
      "text": "[RFC4566] Handley, M., Jacobson, V., and C. Perkins, \"SDP: Session Description Protocol\", RFC 4566, DOI 10.17487/RFC4566, July 2006, <http://www.rfc-editor.org/info/rfc4566>.",
      "ja": "[RFC4566]ハンドリー、M.、ヤコブソン、V.、およびC.パーキンス、 \"SDP：セッション記述プロトコル\"、RFC 4566、DOI 10.17487 / RFC4566、2006年7月、<http://www.rfc-editor.org/情報/ RFC4566>。"
    },
    {
      "indent": 3,
      "text": "[RFC4594] Babiarz, J., Chan, K., and F. Baker, \"Configuration Guidelines for DiffServ Service Classes\", RFC 4594, DOI 10.17487/RFC4594, August 2006, <http://www.rfc-editor.org/info/rfc4594>.",
      "ja": "[RFC4594] Babiarz、J.、チャン、K.、およびF.ベイカー、 \"DiffServのサービスクラスの設定時の注意事項\"、RFC 4594、DOI 10.17487 / RFC4594、2006年8月、<http://www.rfc-editor.org /情報/ rfc4594>。"
    },
    {
      "indent": 3,
      "text": "[RFC5109] Li, A., Ed., \"RTP Payload Format for Generic Forward Error Correction\", RFC 5109, DOI 10.17487/RFC5109, December 2007, <http://www.rfc-editor.org/info/rfc5109>.",
      "ja": "[RFC5109]李、A.編、 \"一般的なフォワードエラー訂正のためのRTPペイロードフォーマット\"、RFC 5109、DOI 10.17487 / RFC5109、2007年12月、<http://www.rfc-editor.org/info/rfc5109> 。"
    },
    {
      "indent": 3,
      "text": "[RFC5127] Chan, K., Babiarz, J., and F. Baker, \"Aggregation of Diffserv Service Classes\", RFC 5127, DOI 10.17487/RFC5127, February 2008, <http://www.rfc-editor.org/info/rfc5127>.",
      "ja": "[RFC5127]チャン、K.、Babiarz、J.、およびF.ベイカー、 \"Diffservのサービスクラスの集約\"、RFC 5127、DOI 10.17487 / RFC5127、2008年2月、<http://www.rfc-editor.org/情報/ rfc5127>。"
    },
    {
      "indent": 3,
      "text": "[RFC5129] Davie, B., Briscoe, B., and J. Tay, \"Explicit Congestion Marking in MPLS\", RFC 5129, DOI 10.17487/RFC5129, January 2008, <http://www.rfc-editor.org/info/rfc5129>.",
      "ja": "[RFC5129]デイビー、B.、ブリスコー、B.、およびJ.テイ、 \"MPLSマーキング明示的輻輳\"、RFC 5129、DOI 10.17487 / RFC5129、2008年1月、<http://www.rfc-editor.org/情報/ rfc5129>。"
    },
    {
      "indent": 3,
      "text": "[RFC5245] Rosenberg, J., \"Interactive Connectivity Establishment (ICE): A Protocol for Network Address Translator (NAT) Traversal for Offer/Answer Protocols\", RFC 5245, DOI 10.17487/RFC5245, April 2010, <http://www.rfc-editor.org/info/rfc5245>.",
      "ja": "[RFC5245]ローゼンバーグ、J.、 \"インタラクティブ接続確立（ICE）：オファー/回答プロトコルのためのネットワークアドレス変換器（NAT）トラバーサルのための議定書\"、RFC 5245、DOI 10.17487 / RFC5245、2010年4月、<のhttp：// WWW .rfc-editor.org /情報/ rfc5245>。"
    },
    {
      "indent": 3,
      "text": "[RFC5389] Rosenberg, J., Mahy, R., Matthews, P., and D. Wing, \"Session Traversal Utilities for NAT (STUN)\", RFC 5389, DOI 10.17487/RFC5389, October 2008, <http://www.rfc-editor.org/info/rfc5389>.",
      "ja": "[RFC5389]ローゼンバーグ、J.、マーイ、R.、マシューズ、P.、およびD.翼、 \"NAT（STUN）のセッショントラバーサルユーティリティ\"、RFC 5389、DOI 10.17487 / RFC5389、2008年10月、<のhttp：// www.rfc-editor.org/info/rfc5389>。"
    },
    {
      "indent": 3,
      "text": "[RFC5462] Andersson, L. and R. Asati, \"Multiprotocol Label Switching (MPLS) Label Stack Entry: \"EXP\" Field Renamed to \"Traffic Class\" Field\", RFC 5462, DOI 10.17487/RFC5462, February 2009, <http://www.rfc-editor.org/info/rfc5462>.",
      "ja": "[RFC5462]アンデション、L.およびR. Asati、 \"マルチプロトコルラベルスイッチング（MPLS）ラベルスタックエントリ： \"EXPトラフィッククラス \"フィールド\"\" に改名フィールド\"、RFC 5462、DOI 10.17487 / RFC5462、2009年2月、<のhttp： //www.rfc-editor.org/info/rfc5462>。"
    },
    {
      "indent": 3,
      "text": "[RFC5761] Perkins, C. and M. Westerlund, \"Multiplexing RTP Data and Control Packets on a Single Port\", RFC 5761, DOI 10.17487/RFC5761, April 2010, <http://www.rfc-editor.org/info/rfc5761>.",
      "ja": "[RFC5761]パーキンス、C.とM.ウェスター、 \"シングルポートの多重化RTPデータおよび制御パケット\"、RFC 5761、DOI 10.17487 / RFC5761、2010年4月、<http://www.rfc-editor.org/info / rfc5761>。"
    },
    {
      "indent": 3,
      "text": "[RFC5764] McGrew, D. and E. Rescorla, \"Datagram Transport Layer Security (DTLS) Extension to Establish Keys for the Secure Real-time Transport Protocol (SRTP)\", RFC 5764, DOI 10.17487/RFC5764, May 2010, <http://www.rfc-editor.org/info/rfc5764>.",
      "ja": "[RFC5764]マグリュー、D.およびE.レスコラ、 \"データグラムトランスポート層セキュリティ（DTLS）トランスポート・プロトコル（SRTP）セキュアリアルタイムのための鍵を確立するための拡張\"、RFC 5764、DOI 10.17487 / RFC5764、2010年5月、<HTTPを：//www.rfc-editor.org/info/rfc5764>。"
    },
    {
      "indent": 3,
      "text": "[RFC5766] Mahy, R., Matthews, P., and J. Rosenberg, \"Traversal Using Relays around NAT (TURN): Relay Extensions to Session Traversal Utilities for NAT (STUN)\", RFC 5766, DOI 10.17487/RFC5766, April 2010, <http://www.rfc-editor.org/info/rfc5766>.",
      "ja": "[RFC5766]マーイ、R.、マシューズ、P.、およびJ.ローゼンバーグ、 \"トラバーサルNAT（TURN）の周りにリレーを使用してリレーNAT（STUN）のセッショントラバーサルユーティリティへの拡張\"、RFC 5766、DOI 10.17487 / RFC5766、4月2010年、<http://www.rfc-editor.org/info/rfc5766>。"
    },
    {
      "indent": 3,
      "text": "[RFC6062] Perreault, S., Ed. and J. Rosenberg, \"Traversal Using Relays around NAT (TURN) Extensions for TCP Allocations\", RFC 6062, DOI 10.17487/RFC6062, November 2010, <http://www.rfc-editor.org/info/rfc6062>.",
      "ja": "[RFC6062]ペロー、S.、エド。およびJ.ローゼンバーグ、 \"トラバーサルNAT周りリレーTCPの配分について（TURN）拡張機能の使用\"、RFC 6062、DOI 10.17487 / RFC6062、2010年11月、<http://www.rfc-editor.org/info/rfc6062>。"
    },
    {
      "indent": 3,
      "text": "[RFC6274] Gont, F., \"Security Assessment of the Internet Protocol Version 4\", RFC 6274, DOI 10.17487/RFC6274, July 2011, <http://www.rfc-editor.org/info/rfc6274>.",
      "ja": "[RFC6274] Gont、F.、 \"インターネットプロトコルバージョン4のセキュリティ評価\"、RFC 6274、DOI 10.17487 / RFC6274、2011年7月、<http://www.rfc-editor.org/info/rfc6274>。"
    },
    {
      "indent": 3,
      "text": "[RFC6386] Bankoski, J., Koleszar, J., Quillio, L., Salonen, J., Wilkins, P., and Y. Xu, \"VP8 Data Format and Decoding Guide\", RFC 6386, DOI 10.17487/RFC6386, November 2011, <http://www.rfc-editor.org/info/rfc6386>.",
      "ja": "[RFC6386] Bankoski、J.、Koleszar、J.、Quillio、L.、サロネン、J.、ウィルキンス、P.、およびY.徐、 \"VP8データフォーマットおよび復号化ガイド\"、RFC 6386、DOI 10.17487 / RFC6386、 2011年11月、<http://www.rfc-editor.org/info/rfc6386>。"
    },
    {
      "indent": 3,
      "text": "[RFC6437] Amante, S., Carpenter, B., Jiang, S., and J. Rajahalme, \"IPv6 Flow Label Specification\", RFC 6437, DOI 10.17487/RFC6437, November 2011, <http://www.rfc-editor.org/info/rfc6437>.",
      "ja": "[RFC6437] Amante、S.、大工、B.、江、S.、およびJ. Rajahalme、 \"IPv6のフローラベル仕様\"、RFC 6437、DOI 10.17487 / RFC6437、2011年11月、<のhttp：//www.rfc- editor.org/info/rfc6437>。"
    },
    {
      "indent": 3,
      "text": "[RFC6458] Stewart, R., Tuexen, M., Poon, K., Lei, P., and V. Yasevich, \"Sockets API Extensions for the Stream Control Transmission Protocol (SCTP)\", RFC 6458, DOI 10.17487/RFC6458, December 2011, <http://www.rfc-editor.org/info/rfc6458>.",
      "ja": "[RFC6458]スチュワート、R.、Tuexen、M.、プーン、K.、レイ、P.、およびV. Yasevich、DOI 10.17487 / RFC6458、RFC 6458、 \"ストリーム制御伝送プロトコル（SCTP）のためのソケットAPIの拡張機能\" 、2011年12月、<http://www.rfc-editor.org/info/rfc6458>。"
    },
    {
      "indent": 3,
      "text": "[RMCAT-CC] Jesup, R. and Z. Sarker, \"Congestion Control Requirements for Interactive Real-Time Media\", Work in Progress, draft-ietf-rmcat-cc-requirements-09, December 2014.",
      "ja": "[RMCAT-CC]ジェサップ、R.とZ. Sarker、 \"インタラクティブリアルタイムメディアのための輻輳制御要件\" が進行中で働いて、ドラフト-IETF-rmcat-CC-要件-09、2014年12月。"
    },
    {
      "indent": 3,
      "text": "[RTP-USAGE] Perkins, C., Westerlund, M., and J. Ott, \"Web Real-Time Communication (WebRTC): Media Transport and Use of RTP\", Work in Progress, draft-ietf-rtcweb-rtp-usage-25, June 2015.",
      "ja": "[RTP-USAGE]パーキンス、C.、ウェスター、M.、およびJ.オット、 \"ウェブのリアルタイムコミュニケーション（のWebRTC）：メディアトランスポートおよびRTPの使用\" が進行中で働いて、ドラフト-IETF-rtcweb-rtp-用法-25、2015年6月。"
    },
    {
      "indent": 3,
      "text": "[SDP-BUNDLE] Holmberg, C., Alvestrand, H., and C. Jennings, \"Negotiating Media Multiplexing Using the Session Description Protocol (SDP)\", Work in Progress, draft-ietf-mmusic-sdp-bundle-negotiation-23, July 2015.",
      "ja": "[SDP-BUNDLE] Holmbergの、C.、Alvestrand、H.、およびC.ジェニングス、 \"セッション記述プロトコル（SDP）を使用したメディアの多重化を交渉\" が進行中で働いて、ドラフト-IETF-MMUSIC-SDP-バンドルnegotiation- 23、2015年7月。"
    },
    {
      "indent": 3,
      "text": "[SRTP-DTLS] Petit-Huguenin, M. and G. Salgueiro, \"Multiplexing Scheme Updates for Secure Real-time Transport Protocol (SRTP) Extension for Datagram Transport Layer Security (DTLS)\", Work in Progress, draft-petithuguenin-avtcore-rfc5764-mux-fixes-02, March 2015.",
      "ja": "[SRTP-DTLS]プチHuguenin、M.およびG. Salgueiro、 \"多重方式のアップデートのためのセキュアなリアルタイム転送プロトコル（SRTP）データグラムトランスポート層セキュリティ（DTLS）のための拡張\" が進行中で働いて、ドラフトpetithuguenin-avtcore -rfc5764-MUX-修正-02、2015年3月。"
    },
    {
      "indent": 3,
      "text": "[W3C.WD-mediacapture-streams-20130903] Burnett, D., Bergkvist, A., Jennings, C., and A. Narayanan, \"Media Capture and Streams\", World Wide Web Consortium Recommendation WD-mediacapture-streams-20130903, September 2013, <http://www.w3.org/TR/2013/ WD-mediacapture-streams-20130903>.",
      "ja": "[W3C.WD-mediacaptureストリーム-20130903]バーネット、D.、Bergkvist、A.、ジェニングス、C.、およびA.ナラヤナン、 \"メディアのキャプチャとストリーム\"、World Wide Web Consortium（W3C）の勧告WD-mediacaptureストリーム-20130903 、2013年9月、<http://www.w3.org/TR/2013/ WD-mediacaptureストリーム-20130903>。"
    },
    {
      "indent": 3,
      "text": "[WEBRTC-OVERVIEW] Alvestrand, H., \"Overview: Real Time Protocols for Browser-based Applications\", Work in Progress, draft-ietf-rtcweb-overview-14, June 2015.",
      "ja": "[のWebRTC-概要] Alvestrand、H.、 \"概要：ブラウザベースのアプリケーションのためのリアルタイムプロトコル\" が進行中で働いて、ドラフト-IETF-rtcweb  - 概要 -  14、2015年6月。"
    },
    {
      "indent": 3,
      "text": "[WEBRTC-TRANSPORTS] Alvestrand, H., \"Transports for WebRTC\", Work in Progress, draft-ietf-rtcweb-transports-10, October 2015.",
      "ja": "[のWebRTC-トランスポート] Alvestrand、H.、 \"のWebRTCのためにトランスポート\" が進行中で働いて、ドラフト-IETF-rtcweb-トランスポート-10、2015年10月。"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "This memo is the result of many conversations that have occurred within the DART working group and other working groups in the RAI and Transport areas. Many thanks to Aamer Akhter, Harald Alvestrand, Fred Baker, Richard Barnes, Erin Bournival, Ben Campbell, Brian Carpenter, Spencer Dawkins, Keith Drage, Gorry Fairhurst, Ruediger Geib, Cullen Jennings, Jonathan Lennox, Karen Nielsen, Colin Perkins, James Polk, Robert Sparks, Tina Tsou, Michael Welzl, Dan York, and the DART WG participants for their reviews and comments.",
      "ja": "このメモはRAIと交通の分野でDARTワーキンググループや他のワーキンググループ内で発生した多くの会話の結果です。 Aamer Akhter、ハラルドAlvestrand、フレッド・ベイカー、リチャード・バーンズ、エリンBournival、ベン・キャンベル、ブライアン・カーペンター、スペンサードーキンスキース糖剤、Gorry Fairhurst、Ruediger Geib、カレン・ジェニングス、ジョナサン・レノックス、カレン・ニールセン、コリンパーキンス、ジェームズ・ポークに感謝、ロバート・スパークス、ティナツオウ、マイケルWelzl、ダン・ニューヨーク、そして彼らのレビューとコメントのためのDART WG参加。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "David Black (editor) EMC 176 South Street Hopkinton, MA 01748 United States",
      "ja": "デヴィッド・ブラック（エディタ）EMC 176サウスストリートホプキントン、MA 01748米国"
    },
    {
      "indent": 3,
      "text": "Phone: +1 508 293-7953 Email: david.black@emc.com",
      "ja": "電話：+1 508 293-7953 Eメール：david.black@emc.com"
    },
    {
      "indent": 3,
      "text": "Paul Jones Cisco 7025 Kit Creek Road Research Triangle Park, NC 27502 United States",
      "ja": "ポール・ジョーンズのCisco 7025キットクリーク道路リサーチトライアングルパーク、ノースカロライナ州27502米国"
    },
    {
      "indent": 3,
      "text": "Phone: +1 919 476 2048 Email: paulej@packetizer.com",
      "ja": "電話：+1 919 476 2048 Eメール：paulej@packetizer.com"
    }
  ]
}