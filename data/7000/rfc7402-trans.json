{
  "title": {
    "text": "RFC 7402 - Using the Encapsulating Security Payload (ESP) Transport Format with the Host Identity Protocol (HIP)",
    "ja": "RFC 7402 - ホスト識別プロトコル（HIP）とカプセル化セキュリティペイロード（ESP）トランスポートフォーマットを使用します"
  },
  "number": 7402,
  "created_at": "2019-11-01 16:23:35.497754+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                         P. Jokela\nRequest for Comments: 7402                  Ericsson Research NomadicLab\nObsoletes: 5202                                             R. Moskowitz\nCategory: Standards Track                                 HTT Consulting\nISSN: 2070-1721                                                 J. Melen\n                                            Ericsson Research NomadicLab\n                                                              April 2015",
      "raw": true
    },
    {
      "indent": 4,
      "text": "Using the Encapsulating Security Payload (ESP) Transport Format\n             with the Host Identity Protocol (HIP)",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This memo specifies an Encapsulating Security Payload (ESP) based mechanism for transmission of user data packets, to be used with the Host Identity Protocol (HIP). This document obsoletes RFC 5202.",
      "ja": "このメモは、カプセル化セキュリティペイロード（ESP）ユーザデータパケットを伝送するためのベースのメカニズムは、ホストアイデンティティプロトコル（HIP）で使用するように指定します。この文書はRFC 5202を廃止します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 5741のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc7402.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc7402で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2015 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2015 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................3\n2. Conventions Used in This Document ...............................4\n3. Using ESP with HIP ..............................................4\n   3.1. ESP Packet Format ..........................................5\n   3.2. Conceptual ESP Packet Processing ...........................5\n        3.2.1. Semantics of the Security Parameter Index (SPI) .....6\n   3.3. Security Association Establishment and Maintenance .........6\n        3.3.1. ESP Security Associations ...........................6\n        3.3.2. Rekeying ............................................7\n        3.3.3. Security Association Management .....................8\n        3.3.4. Security Parameter Index (SPI) ......................8\n        3.3.5. Supported Ciphers ...................................8\n        3.3.6. Sequence Number .....................................9\n        3.3.7. Lifetimes and Timers ................................9\n   3.4. IPsec and HIP ESP Implementation Considerations ............9\n        3.4.1. Data Packet Processing Considerations ..............10\n        3.4.2. HIP Signaling Packet Considerations ................10\n4. The Protocol ...................................................11\n   4.1. ESP in HIP ................................................11\n        4.1.1. IPsec ESP Transport Format Type ....................11\n        4.1.2. Setting Up an ESP Security Association .............11\n        4.1.3. Updating an Existing ESP SA ........................12\n5. Parameter and Packet Formats ...................................13\n   5.1. New Parameters ............................................13\n        5.1.1. ESP_INFO ...........................................13\n        5.1.2. ESP_TRANSFORM ......................................15\n        5.1.3. NOTIFICATION Parameter .............................16\n   5.2. HIP ESP Security Association Setup ........................17\n        5.2.1. Setup during Base Exchange .........................17\n   5.3. HIP ESP Rekeying ..........................................18\n        5.3.1. Initializing Rekeying ..............................19\n        5.3.2. Responding to the Rekeying Initialization ..........19\n   5.4. ICMP Messages .............................................20\n        5.4.1. Unknown SPI ........................................20\n6. Packet Processing ..............................................20\n   6.1. Processing Outgoing Application Data ......................20\n   6.2. Processing Incoming Application Data ......................21\n   6.3. HMAC and SIGNATURE Calculation and Verification ...........21\n   6.4. Processing Incoming ESP SA Initialization (R1) ............22\n   6.5. Processing Incoming Initialization Reply (I2) .............22\n   6.6. Processing Incoming ESP SA Setup Finalization (R2) ........23\n   6.7. Dropping HIP Associations .................................23\n   6.8. Initiating ESP SA Rekeying ................................23",
      "raw": true
    },
    {
      "indent": 3,
      "text": "   6.9. Processing Incoming UPDATE Packets ........................24\n        6.9.1. Processing UPDATE Packet: No Outstanding\n               Rekeying Request ...................................25\n   6.10. Finalizing Rekeying ......................................26\n   6.11. Processing NOTIFY Packets ................................26\n7. Keying Material ................................................27\n8. Security Considerations ........................................27\n9. IANA Considerations ............................................28\n10. References ....................................................29\n   10.1. Normative References .....................................29\n   10.2. Informative References ...................................30\nAppendix A. A Note on Implementation Options ......................32\nAppendix B. Bound End-to-End Tunnel Mode for ESP ..................32\n  B.1. Protocol Definition ........................................33\n       B.1.1. Changes to Security Association Data Structures .....33\n       B.1.2. Packet Format .......................................34\n       B.1.3. Cryptographic Processing ............................36\n       B.1.4. IP Header Processing ................................36\n       B.1.5. Handling of Outgoing Packets ........................37\n       B.1.6. Handling of Incoming Packets ........................38\n       B.1.7. Handling of IPv4 Options ............................39\nAcknowledgments ...................................................40\nAuthors' Addresses ................................................40",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "In the Host Identity Protocol Architecture [HIP-ARCH], hosts are identified with public keys. The Host Identity Protocol (HIP) [RFC7401] base exchange allows any two HIP-supporting hosts to authenticate each other and to create a HIP association between themselves. During the base exchange, the hosts generate a piece of shared keying material using an authenticated Diffie-Hellman exchange.",
      "ja": "ホストアイデンティティプロトコルアーキテクチャ[HIP-ARCH]では、ホストは、公開鍵と識別されます。ホストアイデンティティプロトコル（HIP）[RFC7401]塩基交換は、任意の2つのHIP支持ホストが互いを認証すると自身との間のHIPアソシエーションを作成することを可能にします。塩基交換の際に、ホストは、認証のDiffie-Hellman交換を使用して、共有鍵材料の一部を生成します。"
    },
    {
      "indent": 3,
      "text": "The HIP base exchange specification [RFC7401] does not describe any transport formats or methods for user data to be used during the actual communication; it only defines that it is mandatory to implement the Encapsulating Security Payload (ESP) [RFC4303] based transport format and method. This document specifies how ESP is used with HIP to carry actual user data.",
      "ja": "HIP基本交換仕様[RFC7401]は、任意のトランスポートフォーマットや実際の通信時に使用されるユーザデータのための方法を記載していません。それは、カプセル化セキュリティペイロード（ESP）[RFC4303]ベースのトランスポート・フォーマット及び方法を実装するために必須であることを規定しています。この文書では、ESPは、実際のユーザデータを運ぶためにHIPで使用される方法を指定します。"
    },
    {
      "indent": 3,
      "text": "To be more specific, this document specifies a set of HIP protocol extensions and their handling. Using these extensions, a pair of ESP Security Associations (SAs) is created between the hosts during the base exchange. The resulting ESP Security Associations use keys drawn from the keying material (KEYMAT) generated during the base exchange. After the HIP association and required ESP SAs have been established between the hosts, the user data communication is protected using ESP. In addition, this document specifies methods to update an existing ESP Security Association.",
      "ja": "具体的には、この文書では、HIPプロトコル拡張とその取り扱いのセットを指定します。これらの拡張機能を使用して、ESPセキュリティアソシエーション（SA）のペアは、塩基交換時にホスト間で作成されます。得られたESPセキュリティアソシエーションは、塩基交換中に生成鍵材料（KEYMAT）から引き出されたキーを使用します。ホストとの間で確立されてきたESP SAを必要HIPアソシエーション後、ユーザデータ通信は、ESPを使用して保護されています。また、この文書では、既存のESPセキュリティアソシエーションを更新する方法を指定します。"
    },
    {
      "indent": 3,
      "text": "It should be noted that representations of Host Identity are not carried explicitly in the headers of user data packets. Instead, the ESP Security Parameter Index (SPI) is used to indicate the right host context. The SPIs are selected during the HIP ESP setup exchange. For user data packets, ESP SPIs (in possible combination with IP addresses) are used indirectly to identify the host context, thereby avoiding any additional explicit protocol headers.",
      "ja": "ホストのアイデンティティの表現がユーザデータパケットのヘッダに明示的に行われていないことに留意すべきです。その代わり、ESPセキュリティパラメータインデックス（SPI）は、右のホストコンテキストを示すために使用されます。 SPIのは、HIP ESPのセットアップ交換の間に選択されています。ユーザ・データ・パケットのために、ESPのSPIは、（IPアドレスを持つことが可能と組み合わせて）、それにより追加の明示的なプロトコルヘッダーを回避する、ホスト・コンテキストを識別するために間接的に使用されます。"
    },
    {
      "indent": 3,
      "text": "HIP and ESP traffic have known issues with middlebox traversal (RFC 5207 [RFC5207]). Other specifications exist for operating HIP and ESP over UDP. (RFC 5770 [RFC5770] is an experimental specification, and others are being developed.) Middlebox traversal is out of scope for this document.",
      "ja": "HIPとESPトラフィックがミドルトラバーサル（RFC 5207 [RFC5207]）の問題を知られています。その他の仕様は、UDP上のオペレーティング・HIPとESPのために存在します。 （RFC 5770 [RFC5770]は実験的仕様であり、他のものが開発されている。）ミドルトラバーサルは、この文書の範囲外です。"
    },
    {
      "indent": 3,
      "text": "This document obsoletes RFC 5202.",
      "ja": "この文書はRFC 5202を廃止します。"
    },
    {
      "indent": 0,
      "text": "2. Conventions Used in This Document",
      "section_title": true,
      "ja": "この文書で使用される2.表記"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119 [RFC2119].",
      "ja": "この文書のキーワード \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", および \"OPTIONAL\" はRFC 2119 [RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "3. Using ESP with HIP",
      "section_title": true,
      "ja": "3. HIPでESPを使用して"
    },
    {
      "indent": 3,
      "text": "The HIP base exchange is used to set up a HIP association between two hosts. The base exchange provides two-way host authentication and key material generation, but it does not provide any means for protecting data communication between the hosts. In this document, we specify the use of ESP for protecting user data traffic after the HIP base exchange. Note that this use of ESP is intended only for host-to-host traffic; security gateways are not supported.",
      "ja": "HIP基本交換は、2つのホスト間のHIPアソシエーションを設定するために使用されています。塩基交換は双方向ホスト認証及び鍵材料の生成を提供し、それはホスト間のデータ通信を保護するための任意の手段を提供しません。この文書では、我々はHIP基本交換後のユーザデータトラフィックを保護するためのESPの使用を指定します。 ESPのこの使用は、唯一のホスト間のトラフィックのために意図されていることに注意してください。セキュリティゲートウェイがサポートされていません。"
    },
    {
      "indent": 3,
      "text": "To support ESP use, the HIP base exchange messages require some minor additions to the parameters transported. In the R1 packet, the Responder adds the possible ESP transforms in an ESP_TRANSFORM parameter before sending it to the Initiator. The Initiator gets the proposed transforms, selects one of those proposed transforms, and adds it to the I2 packet in an ESP_TRANSFORM parameter. In this I2 packet, the Initiator also sends the SPI value that it wants to be used for ESP traffic flowing from the Responder to the Initiator. This information is carried using the ESP_INFO parameter. When finalizing the ESP SA setup, the Responder sends its SPI value to the Initiator in the R2 packet, again using ESP_INFO.",
      "ja": "ESPの使用をサポートするために、HIP基本交換メッセージが輸送パラメータにいくつかのマイナーな追加を必要としています。 R1パケットでは、Responderは可能ESPは、イニシエータに送信する前にESP_TRANSFORMパラメータに変換追加されます。イニシエータは、提案されたトランスフォームを取得し、それらの提案の変換のいずれかを選択し、ESP_TRANSFORMパラメータでI2パケットに追加します。このI2パケットでは、イニシエータはまた、イニシエータとレスポンダから流れるESPトラフィックに使用することを希望するSPI値を送信します。この情報はESP_INFOパラメータを使用して行われます。 ESP SAの設定を確定する場合、Responderは再びESP_INFOを使用して、R2のパケットにイニシエータにそのSPI値を送信します。"
    },
    {
      "indent": 0,
      "text": "3.1. ESP Packet Format",
      "section_title": true,
      "ja": "3.1。 ESPパケットフォーマット"
    },
    {
      "indent": 3,
      "text": "The ESP specification [RFC4303] defines the ESP packet format for IPsec. The HIP ESP packet looks exactly the same as the IPsec ESP transport format packet. The semantics, however, are a bit different and are described in more detail in the next subsection.",
      "ja": "ESP仕様[RFC4303]はIPsecのESPパケットフォーマットを定義します。 HIP ESPパケットは、IPsec ESPトランスポートフォーマットのパケットとまったく同じに見えます。セマンティクスは、しかし、少し異なっており、次のサブセクションでより詳細に記載されています。"
    },
    {
      "indent": 0,
      "text": "3.2. Conceptual ESP Packet Processing",
      "section_title": true,
      "ja": "3.2。概念ESPパケット処理"
    },
    {
      "indent": 3,
      "text": "ESP packet processing can be implemented in different ways in HIP. It is possible to implement it in a way that a standards compliant, unmodified IPsec implementation [RFC4303] can be used in conjunction with some additional transport checksum processing above it, and if IP addresses are used as indexes to the right host context.",
      "ja": "ESPパケット処理は、HIPの異なる方法で実装することができます。標準に準拠し、修飾されていないIPsec実装[RFC4303]はその上にいくつかの追加の輸送チェックサム処理と組み合わせて使用​​することができ、IPアドレスが正しいホストコンテキストへのインデックスとして使用される場合、その方法でそれを実現することができます。"
    },
    {
      "indent": 3,
      "text": "When a standards compliant IPsec implementation that uses IP addresses in the Security Policy Database (SPD) and Security Association Database (SAD) is used, the packet processing may take the following steps. For outgoing packets, assuming that the upper-layer pseudo header has been built using IP addresses, the implementation recalculates upper-layer checksums using Host Identity Tags (HITs) and, after that, changes the packet source and destination addresses back to corresponding IP addresses. The packet is sent to the IPsec ESP for transport mode handling, and from there the encrypted packet is sent to the network. When an ESP packet is received, the packet is first put through the IPsec ESP transport mode handling, and after decryption, the source and destination IP addresses are replaced with HITs, and finally, upper-layer checksums are verified before passing the packet to the upper layer.",
      "ja": "セキュリティポリシーデータベース（SPD）とセキュリティアソシエーションデータベース（SAD）でIPアドレスを使用して標準に準拠IPsec実装を使用する場合は、パケット処理は、次の手順を実行することがあります。発信パケットのために、上位層疑似ヘッダはIPアドレスを使用して構築されていると仮定すると、実装は、ホストアイデンティティタグ（ヒット）を用いて上位層チェックサムを再計算し、その後、バック対応するIPアドレスへのパケットの送信元および宛先アドレスを変更します。パケットは、トランスポートモードの処理のためにIPsec ESPに送られ、そこから暗号化されたパケットがネットワークに送信されます。 ESPパケットを受信した場合、パケットは、最初のIPsec ESPトランスポートモードの処理に通され、復号後に、送信元と送信先のIPアドレスがヒットに置き換えられ、そして最後に、上位層チェックサムはにパケットを渡す前に検証されています上層。"
    },
    {
      "indent": 3,
      "text": "An alternative way to implement packet processing is the BEET (Bound End-to-End Tunnel) mode (see Appendix B). In BEET mode, the ESP packet is formatted as a transport mode packet, but the semantics of the connection are the same as for tunnel mode. The \"outer\" addresses of the packet are the IP addresses, and the \"inner\" addresses are the HITs. For outgoing traffic, after the packet has been encrypted, the packet's IP header is changed to a new one that contains IP addresses instead of HITs, and the packet is sent to the network. When the ESP packet is received, the SPI value, together with the integrity protection, allow the packet to be securely associated with the right HIT pair. The packet header is replaced with a new header containing HITs, and the packet is decrypted. BEET mode is completely internal for a host and doesn't require that the corresponding host implement it; instead, the corresponding host can have ESP transport mode and do HIT IP conversions outside ESP.",
      "ja": "パケット処理を実装するための別の方法はBEET（バウンドエンドツーエンドトンネル）モード（付録Bを参照）です。ビートモードでは、ESPパケットは、トランスポート・モード・パケットとしてフォーマットが、接続のセマンティクスは、トンネルモードの場合と同じであるています。パケットの「外側」のアドレスは、IPアドレスであり、「内側」のアドレスがヒットしています。パケットが暗号化された後、発信トラフィックの場合、パケットのIPヘッダではなくヒットのIPアドレスが含まれている新しいものに変更され、パケットがネットワークに送信されます。 ESPパケットが受信されると、SPI値、一緒に整合性の保護と、パケットはしっかりと右HITペアに関連付けることができます。パケットヘッダは、ヒットを含む新しいヘッダに置き換えられ、パケットが復号化されます。ビートモードは、ホストの完全に内部にあり、対応するホストは、それを実装することを必要としません。代わりに、対応するホストは、ESPトランスポートモードを持っており、ESP外HITのIP変換を行うことができます。"
    },
    {
      "indent": 0,
      "text": "3.2.1. Semantics of the Security Parameter Index (SPI)",
      "section_title": true,
      "ja": "3.2.1。セキュリティパラメータインデックス（SPI）のセマンティクス"
    },
    {
      "indent": 3,
      "text": "SPIs are used in ESP to find the right Security Association for received packets. The ESP SPIs have added significance when used with HIP; they are a compressed representation of a pair of HITs. Thus, SPIs MAY be used by intermediary systems in providing services like address mapping. Note that since the SPI has significance at the receiver, only the < DST, SPI >, where DST is a destination IP address, uniquely identifies the receiver HIT at any given point of time. The same SPI value may be used by several hosts. A single < DST, SPI > value may denote different hosts and contexts at different points of time, depending on the host that is currently reachable at the DST.",
      "ja": "SPIは、受信したパケットのために右のセキュリティアソシエーションを見つけるために、ESPで使用されています。 HIPで使用する場合ESPのSPIは、重要性を追加しました。彼らはヒットのペアの圧縮された表現です。したがって、SPIのは、アドレスマッピングのようなサービスを提供する仲介システムで使用されるかもしれません。 SPIためDSTは宛先IPアドレスである受信機のみ<DST、SPI>に意義があることに注意してください、一意の時間の任意の時点で受信機HITを識別する。同じSPI値が複数のホストによって使用されてもよいです。単一<DST、SPI>の値は、DSTに現在到達可能なホストに依存して、時間の異なる点で異なるホストとコンテキストを示すことができます。"
    },
    {
      "indent": 3,
      "text": "Each host selects for itself the SPI it wants to see in packets received from its peer. This allows it to select different SPIs for different peers. The SPI selection SHOULD be random; the rules of Section 2.1 of the ESP specification [RFC4303] must be followed. A different SPI SHOULD be used for each HIP exchange with a particular host; this is to avoid a replay attack. Additionally, when a host rekeys, the SPI MUST be changed. Furthermore, if a host changes over to use a different IP address, it MAY change the SPI.",
      "ja": "各ホストは、そのピアから受信したパケットで見たい自身のためにSPIを選択します。これは、異なるピアに対して異なるSPIを選択することができます。 SPIの選択はランダムである必要があります。 ESP仕様[RFC4303]のセクション2.1の規則に従わなければなりません。異なるSPIは、特定のホストと各HIP交換に使用されるべきです。これは、リプレイ攻撃を回避することです。また、時にホストキー更新、SPIを変更する必要があります。ホストは異なるIPアドレスを使用するように切り替わる場合はさらに、それはSPIを変更することがあります。"
    },
    {
      "indent": 3,
      "text": "One method for SPI creation that meets the above criteria would be to concatenate the HIT with a 32-bit random or sequential number, hash this (using SHA1), and then use the high-order 32 bits as the SPI.",
      "ja": "上記の基準を満たすSPIを作成するための一つの方法は、32ビットのランダム又は連続番号、ハッシュこの（使用SHA1）を有するHITを連結し、次にSPIとして上位32ビットを使用することであろう。"
    },
    {
      "indent": 3,
      "text": "The selected SPI is communicated to the peer in the third (I2) and fourth (R2) packets of the base HIP exchange. Changes in SPI are signaled with ESP_INFO parameters.",
      "ja": "選択されたSPIは、第三（I2）内のピアとベースHIP交換の第（R2）パケットに伝達されます。 SPIの変化はESP_INFOパラメータで通知されます。"
    },
    {
      "indent": 0,
      "text": "3.3. Security Association Establishment and Maintenance",
      "section_title": true,
      "ja": "3.3。セキュリティアソシエーションの確立とメンテナンス"
    },
    {
      "indent": 0,
      "text": "3.3.1. ESP Security Associations",
      "section_title": true,
      "ja": "3.3.1。 ESPセキュリティアソシエーション"
    },
    {
      "indent": 3,
      "text": "In HIP, ESP Security Associations are set up between the HIP nodes during the base exchange [RFC7401]. Existing ESP SAs can be updated later using UPDATE messages. The reason for updating the ESP SA later can be, for example, a need for rekeying the SA because of sequence number rollover.",
      "ja": "HIPにおいて、ESPセキュリティアソシエーションは、塩基交換[RFC7401]の間HIPノード間に設定されています。既存のESP SAはUPDATEメッセージを使用して、後で更新することができます。 ESP SAを更新する理由は、後に、例えば、あるため、シーケンス番号のロールオーバーのSAを再入力する必要ことができます。"
    },
    {
      "indent": 3,
      "text": "Upon setting up a HIP association, each association is linked to two ESP SAs, one for incoming packets and one for outgoing packets. The Initiator's incoming SA corresponds with the Responder's outgoing one, and vice versa. The Initiator defines the SPI for its incoming association, as defined in Section 3.2.1. This SA is herein called",
      "ja": "HIPの関連付けを設定する際に、各アソシエーションは、二つESP SAを、着信パケットのための1つのパケットと発信パケットのための1つに連結されています。イニシエータの着信SAはレスポンダの発信1、およびその逆に対応します。セクション3.2.1で定義されるようにイニシエータは、その着信アソシエーションのためにSPIを定義します。このSAは、本明細書で呼ばれています"
    },
    {
      "indent": 3,
      "text": "SA-RI, and the corresponding SPI is called SPI-RI. Respectively, the Responder's incoming SA corresponds with the Initiator's outgoing SA and is called SA-IR, with the SPI being called SPI-IR.",
      "ja": "SA-RI、および対応するSPIは、SPI-RIと呼ばれています。それぞれ、レスポンダの受信SAはSPIがSPI-IR呼び出されると、イニシエータの発信SAに対応し、SA-IRと呼ばれます。"
    },
    {
      "indent": 3,
      "text": "The Initiator creates SA-RI as a part of R1 processing, before sending out the I2, as explained in Section 6.4. The keys are derived from KEYMAT, as defined in Section 7. The Responder creates SA-RI as a part of I2 processing; see Section 6.5.",
      "ja": "イニシエータは、6.4節で説明したように、I2を送信する前に、R1処理の一環として、SA-RIを作成します。レスポンダはI2処理の一部として、SA-RIを生成項7で定義されたキーは、KEYMATから誘導されます。 6.5節を参照してください。"
    },
    {
      "indent": 3,
      "text": "The Responder creates SA-IR as a part of I2 processing, before sending out R2; see Section 6.5. The Initiator creates SA-IR when processing R2; see Section 6.6.",
      "ja": "レスポンダは、R2を送出する前に、I2の処理の一部として、SA-IRを作成します。 6.5節を参照してください。 R2を処理するときに開始剤SA-IRを作成します。 6.6節を参照してください。"
    },
    {
      "indent": 3,
      "text": "The initial session keys are drawn from the generated keying material, KEYMAT, after the HIP keys have been drawn as specified in [RFC7401].",
      "ja": "[RFC7401]で指定されるようにHIPキーが描画された後の最初のセッション鍵は、生成されたキーイング材料、KEYMATから引き出されます。"
    },
    {
      "indent": 3,
      "text": "When the HIP association is removed, the related ESP SAs MUST also be removed.",
      "ja": "HIPの関連付けが削除されると、関連するESP SAはまた、削除する必要があります。"
    },
    {
      "indent": 0,
      "text": "3.3.2. Rekeying",
      "section_title": true,
      "ja": "3.3.2。鍵の変更"
    },
    {
      "indent": 3,
      "text": "After the initial HIP base exchange and SA establishment, both hosts are in the ESTABLISHED state. There are no longer Initiator and Responder roles, and the association is symmetric. In this subsection, the party that initiates the rekey procedure is denoted with I' and the peer with R'.",
      "ja": "初期HIP基本交換とSAの確立後、両方のホストは、確立された状態にあります。そこイニシエータとレスポンダの役割はもはやありません、と関連が対称です。このサブセクションでは、キーの再生成手順を開始する当事者はIで示されている「とRとのピア」。"
    },
    {
      "indent": 3,
      "text": "An existing HIP-created ESP SA may need updating during the lifetime of the HIP association. This document specifies the rekeying of an existing HIP-created ESP SA, using the UPDATE message. The ESP_INFO parameter introduced above is used for this purpose.",
      "ja": "既存のHIP-作成されたESP SAは、HIP協会の存続期間中に更新する必要があるかもしれません。この文書では、UPDATEメッセージを使用して、既存のHIP-作成されたESP SAの再入力を指定します。上で紹介しESP_INFOパラメータは、この目的のために使用されます。"
    },
    {
      "indent": 3,
      "text": "I' initiates the ESP SA updating process when needed (see Section 6.8). It creates an UPDATE packet with required information and sends it to the peer node. The old SAs are still in use, local policy permitting.",
      "ja": "私は」（6.8節を参照）に必要なESP SAの更新処理を開始します。これは、必要な情報を持つUPDATEパケットを作成し、ピア・ノードに送信します。古いSAはまだ使用されている、ローカルポリシーが許可します。"
    },
    {
      "indent": 3,
      "text": "R', after receiving and processing the UPDATE (see Section 6.9), generates new SAs: SA-I'R' and SA-R'I'. It does not take the new outgoing SA into use, but still uses the old one, so there temporarily exist two SA pairs towards the same peer host. The SPI for the new outgoing SA, SPI-R'I', is specified in the received ESP_INFO parameter in the UPDATE packet. For the new incoming SA, R' generates the new SPI value, SPI-I'R', and includes it in the response UPDATE packet.",
      "ja": "R 'UPDATEを受信して​​処理した後は、（セクション6.9を参照）、新しいSAが生成：SA-I'R' とSA-R'I」。これは、一時的に同じピアのホストに向けて2 SAのペアが存在するので、そこに、利用されるように、新たな送信SAを取るが、それでも古いものを使用していません。新しい発信SAのSPIは、SPI-R'I」、UPDATEパケットで受信ESP_INFOパラメータで指定されています。新しい着信SAのために、R「は新しいSPI値、SPI-I'Rを生成」、および応答更新パケットでそれを含みます。"
    },
    {
      "indent": 3,
      "text": "When I' receives a response UPDATE from R', it generates new SAs, as described in Section 6.9: SA-I'R' and SA-R'I'. It starts using the new outgoing SA immediately.",
      "ja": "SA-I'R「とSA-R'I」I「はRからの応答UPDATEを受信した」とき、セクション6.9で説明したように、それは、新しいSAを生成します。それはすぐに新しい、発信SAを使用して開始します。"
    },
    {
      "indent": 3,
      "text": "R' starts using the new outgoing SA when it receives traffic on the new incoming SA or when it receives the UPDATE ACK confirming completion of rekeying. After this, R' can remove the old SAs. Similarly, when the I' receives traffic from the new incoming SA, it can safely remove the old SAs.",
      "ja": "R」は、新しい着信SA上のトラフィックを受信したときか、再入力の完了を確認UPDATE ACKを受信したときに、新たな送信SAを使用して開始します。この後、R」は、古いSAを削除することができます。私は「新しい着信SAからのトラフィックを受信したとき同様に、それが安全に、古いSAを削除することができます。"
    },
    {
      "indent": 0,
      "text": "3.3.3. Security Association Management",
      "section_title": true,
      "ja": "3.3.3。セキュリティアソシエーションの管理"
    },
    {
      "indent": 3,
      "text": "An SA pair is indexed by the 2 SPIs and 2 HITs (both local and remote HITs since a system can have more than one HIT). An inactivity timer is RECOMMENDED for all SAs. If the state dictates the deletion of an SA, a timer is set to allow for any late arriving packets.",
      "ja": "（システムが複数のHITを有することができるので、ローカルとリモートの両方のヒット）SA対が2つのSPIと2本のヒットによってインデックスされます。非アクティブタイマーは、すべてのSAにお勧めです。状態はSAの削除を指示した場合、タイマーは、任意の遅れて到着したパケットを許可するように設定されています。"
    },
    {
      "indent": 0,
      "text": "3.3.4. Security Parameter Index (SPI)",
      "section_title": true,
      "ja": "3.3.4。セキュリティパラメータインデックス（SPI）"
    },
    {
      "indent": 3,
      "text": "The SPIs in ESP provide a simple compression of the HIP data from all packets after the HIP exchange. This does require a per HIT-pair Security Association (and SPI), and a decrease of policy granularity over other Key Management Protocols like Internet Key Exchange (IKE) [RFC7296].",
      "ja": "ESPでのSPIは、HIP交換後のすべてのパケットからHIPデータの簡単な圧縮を提供しています。これはあたりHIT-ペアセキュリティアソシエーション（およびSPI）、およびインターネット鍵交換（IKE）[RFC7296]のような他のキー管理プロトコルで政策の粒度の減少を必要としません。"
    },
    {
      "indent": 3,
      "text": "When a host updates the ESP SA, it provides a new inbound SPI to and gets a new outbound SPI from its peer.",
      "ja": "ホストがESP SAを更新すると、それは新しいインバウンドSPIを提供し、そのピアから新しいアウトバウンドSPIを取得します。"
    },
    {
      "indent": 0,
      "text": "3.3.5. Supported Ciphers",
      "section_title": true,
      "ja": "3.3.5。サポートされている暗号"
    },
    {
      "indent": 3,
      "text": "All HIP implementations MUST support AES-128-CBC and AES-256-CBC [RFC3602]. If the Initiator does not support any of the transforms offered by the Responder, it should abandon the negotiation and inform the peer with a NOTIFY message about a non-supported transform.",
      "ja": "すべてのHIP実装は、AES-128-CBCとAES-256-CBC [RFC3602]をサポートしなければなりません。イニシエータは、レスポンダが提供するトランスフォームのいずれかをサポートしていない場合、それは交渉を放棄し、サポートされていない変換についてNOTIFYメッセージをピアに通知する必要があります。"
    },
    {
      "indent": 3,
      "text": "In addition to AES-128-CBC, all implementations SHOULD implement the ESP NULL encryption algorithm. When the ESP NULL encryption is used, it MUST be used together with SHA-256 authentication as specified in Section 5.1.2.",
      "ja": "AES-128-CBCに加えて、すべての実装は、ESP NULL暗号化アルゴリズムを実装する必要があります。 ESPのNULL暗号化を使用する場合は、セクション5.1.2で指定されるように、それはSHA-256認証と一緒に使用しなければなりません。"
    },
    {
      "indent": 3,
      "text": "When an authentication-only suite is used (NULL, AES-CMAC-96, and AES-GMAC are examples), the suite MUST NOT be accepted if offered by the peer unless the local policy configuration regarding the peer host is explicitly set to allow an authentication-only mode. This is to prevent sessions from being downgraded to an authentication-only mode when one side's policy requests privacy for the session.",
      "ja": "認証のみスイートを使用する場合、ピアホストに対するローカルポリシー設定が明示的に許可するように設定されていない限り、ピアによって提供される場合（NULLは、AES-CMAC-96、およびAES-GMACが例である）、スイートを受け入れてはいけません認証専用モード。これは、1つの側の方針は、セッションのプライバシーを要求したときに、認証専用モードに格下げされてからセッションを防ぐためです。"
    },
    {
      "indent": 0,
      "text": "3.3.6. Sequence Number",
      "section_title": true,
      "ja": "3.3.6。シーケンス番号"
    },
    {
      "indent": 3,
      "text": "The Sequence Number field is MANDATORY when ESP is used with HIP. Anti-replay protection MUST be used in an ESP SA established with HIP. When ESP is used with HIP, a 64-bit sequence number MUST be used. This means that each host MUST rekey before its sequence number reaches 2^64.",
      "ja": "ESPは、HIPで使用されたときにシーケンス番号フィールドは必須です。アンチリプレイ保護は、HIPで確立ESP SAで使用しなければなりません。 ESPは、HIPで使用する場合、64ビットのシーケンス番号を使用しなければなりません。これは、そのシーケンス番号が2 ^ 64に達する前に、各ホストがキー更新しなければならないことを意味します。"
    },
    {
      "indent": 3,
      "text": "When using a 64-bit sequence number, the higher 32 bits are NOT included in the ESP header, but are simply kept local to both peers. See [RFC4301].",
      "ja": "64ビットのシーケンス番号を使用する場合、上位32ビットは、ESPヘッダに含まれていない、単に両方のピアにローカルに維持されています。 [RFC4301]を参照してください。"
    },
    {
      "indent": 0,
      "text": "3.3.7. Lifetimes and Timers",
      "section_title": true,
      "ja": "3.3.7。寿命とタイマー"
    },
    {
      "indent": 3,
      "text": "HIP does not negotiate any lifetimes. All ESP lifetimes are local policy. The only lifetimes a HIP implementation MUST support are sequence number rollover (for replay protection), and SHOULD support timing out inactive ESP SAs. An SA times out if no packets are received using that SA. Implementations SHOULD support a configurable SA timeout value. Implementations MAY support lifetimes for the various ESP transforms. Each implementation SHOULD implement per-HIT configuration of the inactivity timeout, allowing statically configured HIP associations to stay alive for days, even when inactive.",
      "ja": "HIPは、任意の寿命を交渉しません。すべてのESPの寿命は、ローカルポリシーです。唯一のHIP実装がサポートしなければならない寿命が（再生保護のための）シーケンス番号のロールオーバーであり、非アクティブESP SAをタイミングをサポートすべきです。 SA回パケットがそのSAを使用して受信されない場合はアウト。実装は、設定SAのタイムアウト値をサポートする必要があります。実装は、様々なESPトランスフォームのための寿命をサポートするかもしれません。非アクティブ時に各実装でも、静的に設定されたHIP団体が日生きて滞在することができ、無活動タイムアウトのあたり-HITの構成を実装する必要があります。"
    },
    {
      "indent": 0,
      "text": "3.4. IPsec and HIP ESP Implementation Considerations",
      "section_title": true,
      "ja": "3.4。 IPsecとHIP ESP実装に関する考慮事項"
    },
    {
      "indent": 3,
      "text": "When HIP is run on a node where a standards compliant IPsec is used, some issues have to be considered.",
      "ja": "HIPは、標準に準拠したIPsecが使用されているノード上で実行されている場合、いくつかの問題を考慮しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The HIP implementation must be able to co-exist with other IPsec keying protocols. When the HIP implementation selects the SPI value, it may lead to a collision if not implemented properly. To avoid the possibility for a collision, the HIP implementation MUST ensure that the SPI values used for HIP SAs are not used for IPsec or other SAs, and vice versa.",
      "ja": "HIPの実装は、他のIPsecキーイングプロトコルと共存できなければなりません。 HIP実装がSPI値を選択すると、正しく実装されていない場合、それは衝突につながる可能性があります。衝突の可能性を回避するために、HIP実装はHIPのSAのために使用されるSPI値は、IPSecまたは他のSAS、およびその逆のために使用されていないことを確認しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Incoming packets using an SA that is not negotiated by HIP MUST NOT be processed as described in Section 3.2, paragraph 2. The SPI will identify the correct SA for packet decryption and MUST be used to identify that the packet has an upper-layer checksum that is calculated as specified in [RFC7401].",
      "ja": "セクション3.2で説明したようにHIPによって交渉されていないSAを使用して着信パケットを処理してはいけません、SPI 2段落は、パケット復号化のための正しいSAを識別し、パケットがその上位層チェックサムを持っていることを識別するために使用されなければなりません[RFC7401]で指定されるように計算されます。"
    },
    {
      "indent": 0,
      "text": "3.4.1. Data Packet Processing Considerations",
      "section_title": true,
      "ja": "3.4.1。データパケット処理の考慮事項"
    },
    {
      "indent": 3,
      "text": "For outbound traffic, the SPD (or coordinated SPDs, if there are two -- one for HIP and one for IPsec) MUST ensure that packets intended for HIP processing are given a HIP-enabled SA and that packets intended for IPsec processing are given an IPsec-enabled SA. The SP then MUST be bound to the matching SA, and non-HIP packets will not be processed by this SA. Data originating from a socket that is not using HIP MUST NOT have the checksum recalculated (as described in Section 3.2, paragraph 2), and data MUST NOT be passed to the SP or SA created by HIP.",
      "ja": "アウトバウンドトラフィックのために、SPD（二存在する場合または、のSPDをコーディネート -  HIP用とIPsecのためのもの）HIP処理のために意図されたパケットは、HIP対応SAおよびIPSec処理のために意図されたパケットが与えられていると仮定されていることを確認しなければなりませんIPsecの対応SA。 SPは、一致するSAにバインドする必要があり、かつ非HIPパケットは、このSAによって処理されることはありません。 （3.2節、第2項で説明したように）チェックサムが再計算されていてはなりませんHIPを使用していないソケットからのデータ、およびデータは、SPに渡してはならない（MUST NOT）やSAはHIPによって作成されました。"
    },
    {
      "indent": 3,
      "text": "It is possible that in the case of overlapping policies, the outgoing packet would be handled by both IPsec and HIP. In this case, it is possible that the HIP association is end to end, while the IPsec SA is for encryption between the HIP host and a security gateway. In the case of a security gateway ESP association, the ESP always uses tunnel mode.",
      "ja": "重複したポリシーの場合には、発信パケットは、IPsecとHIPの両方によって処理されることも可能です。この場合には、IPsec SAは、HIPホストとセキュリティゲートウェイとの間の暗号化にある間にHIPアソシエーションは、エンドツーエンドであることが可能です。セキュリティゲートウェイESPアソシエーションの場合、ESPは常にトンネルモードを使用します。"
    },
    {
      "indent": 3,
      "text": "In the case of IPsec tunnel mode, it is hard to see during the HIP SA processing if the IPsec ESP SA has the same final destination. Thus, traffic MUST be encrypted with both the HIP ESP SA and the IPsec SA when the IPsec ESP SA is used in tunnel mode.",
      "ja": "IPsecトンネルモードの場合には、IPsec ESP SAが同じ最終的な宛先を有する場合、HIP SA処理中に見ることは困難です。したがって、トラフィックは、HIP ESP SAとIPsec ESP SAがトンネルモードで使用されたIPsec SAの両方で暗号化されなければなりません。"
    },
    {
      "indent": 3,
      "text": "In the case of IPsec transport mode, the connection endpoints are the same. However, for HIP data packets it is not possible to avoid HIP SA processing, while mapping the HIP data packet's IP addresses to the corresponding HITs requires SPI values from the ESP header. In the case of a transport mode IPsec SA, the IPsec encryption MAY be skipped to avoid double encryption, if the local policy allows.",
      "ja": "IPsecトランスポートモードの場合には、接続エンドポイントが同じです。しかしながら、HIPデータパケットのためには、ESPヘッダのSPI値を必要と対応ヒットにHIPデータパケットのIPアドレスをマッピングしながら、HIP SAの処理を回避することは不可能です。ローカルポリシーで許可されている場合は、トランスポートモードのIPsec SAの場合には、IPsec暗号化は、二重の暗号化を避けるために省略してもよいです。"
    },
    {
      "indent": 0,
      "text": "3.4.2. HIP Signaling Packet Considerations",
      "section_title": true,
      "ja": "3.4.2。 HIPのシグナリングパケットの考慮事項"
    },
    {
      "indent": 3,
      "text": "In general, HIP signaling packets should follow the same processing as HIP data packets.",
      "ja": "一般的に、HIPシグナリングパケットはHIPデータパケットと同様の処理に従うべきです。"
    },
    {
      "indent": 3,
      "text": "In the case of IPsec tunnel mode, the HIP signaling packets are always encrypted using an IPsec ESP SA. Note that this hides the HIP signaling packets from the eventual HIP middleboxes on the path between the originating host and the security gateway.",
      "ja": "IPsecトンネルモードの場合には、HIPシグナリングパケットは、常ににIPsec ESP SAを使用して暗号化されています。これは、元のホストとセキュリティゲートウェイとの間の経路上の最終的なHIPの中間装置からHIPシグナリングパケットを非表示にすることに注意してください。"
    },
    {
      "indent": 3,
      "text": "In the case of IPsec transport mode, the HIP signaling packets MAY skip the IPsec ESP SA encryption if the local policy allows. This allows the eventual HIP middleboxes to handle the passing HIP signaling packets.",
      "ja": "ローカルポリシーが許可する場合IPsecトランスポートモードの場合には、HIPシグナリングパケットは、IPsec ESP SAの暗号化をスキップすることができます。これは、最終的なHIPのミドルボックスを渡しHIPシグナリングパケットを処理することができます。"
    },
    {
      "indent": 0,
      "text": "4. The Protocol",
      "section_title": true,
      "ja": "4.プロトコル"
    },
    {
      "indent": 3,
      "text": "In this section, the protocol for setting up an ESP association to be used with a HIP association is described.",
      "ja": "このセクションでは、HIPの関連で使用するESPの関連付けを設定するためのプロトコルが記載されています。"
    },
    {
      "indent": 0,
      "text": "4.1. ESP in HIP",
      "section_title": true,
      "ja": "4.1。 HIPでESP"
    },
    {
      "indent": 0,
      "text": "4.1.1. IPsec ESP Transport Format Type",
      "section_title": true,
      "ja": "4.1.1。 IPsecのESPトランスポートフォーマットの種類"
    },
    {
      "indent": 3,
      "text": "The HIP handshake signals the TRANSPORT_FORMAT_LIST parameter in the R1 and I2 messages. This parameter contains a list of the supported HIP transport formats of the sending host, in the order of preference. The transport format type for IPsec ESP is the type number of the ESP_TRANSFORM parameter, i.e., 4095.",
      "ja": "HIPハンドシェイクがR1とI2メッセージにTRANSPORT_FORMAT_LISTパラメータを知らせます。このパラメータは、優先順に、送信元ホストのサポートHIPのトランスポートフォーマットのリストが含まれています。 IPsecのESPのトランスポート・フォーマット・タイプはESP_TRANSFORMパラメータの種類数、すなわち、4095です。"
    },
    {
      "indent": 0,
      "text": "4.1.2. Setting Up an ESP Security Association",
      "section_title": true,
      "ja": "4.1.2。 ESPセキュリティアソシエーションの設定"
    },
    {
      "indent": 3,
      "text": "Setting up an ESP Security Association between hosts using HIP is performed by including parameters in the last three messages (R1, I2, and R2 messages) of the four-message HIP base exchange.",
      "ja": "HIPを使用してホスト間ESPセキュリティアソシエーションをセットアップは、4つのメッセージHIP基本交換の最後の3つのメッセージ（R1、I2、及びR2メッセージ）のパラメータを含めることによって行われます。"
    },
    {
      "indent": 13,
      "text": "Initiator Responder",
      "ja": "イニシエータレスポンダ"
    },
    {
      "indent": 19,
      "text": "                I1\n---------------------------------->",
      "raw": true
    },
    {
      "indent": 19,
      "text": "          R1: ESP_TRANSFORM\n<----------------------------------",
      "raw": true
    },
    {
      "indent": 19,
      "text": "    I2: ESP_TRANSFORM, ESP_INFO\n---------------------------------->",
      "raw": true
    },
    {
      "indent": 19,
      "text": "            R2: ESP_INFO\n<----------------------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The R1 message contains the ESP_TRANSFORM parameter, in which the sending host defines the possible ESP transforms it is willing to use for the ESP SA.",
      "ja": "R1メッセージは、送信側ホストは可能ESPは、ESP SAのために使用する意思がある変換定義するESP_TRANSFORMパラメータを含んでいます。"
    },
    {
      "indent": 3,
      "text": "Including the ESP_TRANSFORM parameter in the R1 message adds clarity to the TRANSPORT_FORMAT_LIST but may initiate negotiations for possibly unselected transforms. However, resource-constrained devices will most likely restrict support to a single transform for the sake of minimizing ROM overhead, and the additional parameter adds negligible overhead with unconstrained devices.",
      "ja": "R1メッセージ内ESP_TRANSFORMパラメータを含むことTRANSPORT_FORMAT_LISTに明瞭さを追加しますが、おそらく、未選択の変換のための交渉を開始することができます。ただし、リソースに制約のあるデバイスは、最も可能性の高い単一ROMのオーバーヘッドを最小限に抑え、そして追加のパラメータは、制約のないデバイスでは無視できるオーバーヘッドを追加するために変換するためにサポートが制限されます。"
    },
    {
      "indent": 3,
      "text": "The I2 message contains the response to an ESP_TRANSFORM received in the R1 message. The sender must select one of the proposed ESP transforms from the ESP_TRANSFORM parameter in the R1 message and include the selected one in the ESP_TRANSFORM parameter in the I2 packet. In addition to the transform, the host includes the ESP_INFO parameter containing the SPI value to be used by the peer host.",
      "ja": "I2メッセージは、R1メッセージで受信ESP_TRANSFORMに対する応答を含んでいます。送信者は、提案されたESPの1 R1メッセージにESP_TRANSFORMパラメータから変換を選択し、I2パケットでESP_TRANSFORMパラメータで選択された1つを含める必要があります。変換に加えて、ホストは、ピア・ホストによって使用されるSPI値を含むESP_INFOパラメータを含みます。"
    },
    {
      "indent": 3,
      "text": "In the R2 message, the ESP SA setup is finalized. The packet contains the SPI information required by the Initiator for the ESP SA.",
      "ja": "R2のメッセージでは、ESP SAの設定が確定されます。パケットはESP SAのイニシエータによって要求されるSPI情報が含まれています。"
    },
    {
      "indent": 0,
      "text": "4.1.3. Updating an Existing ESP SA",
      "section_title": true,
      "ja": "4.1.3。既存のESP SAを更新します"
    },
    {
      "indent": 3,
      "text": "The update process is accomplished using three messages. The HIP UPDATE message is used to update the parameters of an existing ESP SA. The UPDATE mechanism and message are defined in [RFC7401], and the additional parameters for updating an existing ESP SA are described here.",
      "ja": "更新プロセスは、3つのメッセージを使用して達成されます。 HIP UPDATEメッセージは、既存のESP SAのパラメータを更新するために使用されます。更新機構及びメッセージは、[RFC7401]で定義されており、既存のESP SAを更新するための追加のパラメータは、ここに記載されています。"
    },
    {
      "indent": 3,
      "text": "The following picture shows a typical exchange when an existing ESP SA is updated. Messages include SEQ and ACK parameters required by the UPDATE mechanism.",
      "ja": "既存のESP SAが更新された場合は、以下の画像は、典型的な交換を示します。メッセージは、更新機構によって必要とされる配列とACKパラメータを含みます。"
    },
    {
      "indent": 7,
      "text": "H1                                                        H2\n     UPDATE: SEQ, ESP_INFO [, DIFFIE_HELLMAN]\n   ----------------------------------------------------->",
      "raw": true
    },
    {
      "indent": 10,
      "text": "  UPDATE: SEQ, ACK, ESP_INFO [, DIFFIE_HELLMAN]\n<-----------------------------------------------------",
      "raw": true
    },
    {
      "indent": 10,
      "text": "  UPDATE: ACK\n----------------------------------------------------->",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The host willing to update the ESP SA creates and sends an UPDATE message. The message contains the ESP_INFO parameter containing the old SPI value that was used, the new SPI value to be used, and the index value for the keying material, giving the point from where the next keys will be drawn. If new keying material must be generated, the UPDATE message will also contain the DIFFIE_HELLMAN parameter defined in [RFC7401].",
      "ja": "ESP SAを更新して喜んでホストが作成し、UPDATEメッセージを送信します。メッセージには、次のキーが描画される場所からポイントを与えて、使用された古いSPI値、使用される新しいSPI値、及び鍵素材のインデックス値を含むESP_INFOパラメータが含まれています。新しい鍵素材を生成しなければならない場合は、UPDATEメッセージも[RFC7401]で定義されたDIFFIE_HELLMANパラメータが含まれています。"
    },
    {
      "indent": 3,
      "text": "The host receiving the UPDATE message requesting update of an existing ESP SA MUST reply with an UPDATE message. In the reply message, the host sends the ESP_INFO parameter containing the corresponding values: old SPI, new SPI, and the keying material index. If the incoming UPDATE contained a DIFFIE_HELLMAN parameter, the reply packet MUST also contain a DIFFIE_HELLMAN parameter.",
      "ja": "既存のESP SAの更新を要求する更新メッセージを受信したホストは、UPDATEメッセージで応答しなければなりません。古いSPI、新しいSPI、および鍵材料インデックス：応答メッセージでは、ホストは、対応する値を含むESP_INFOパラメータを送信します。入ってくるUPDATEがDIFFIE_HELLMANパラメータが含まれている場合は、応答パケットもDIFFIE_HELLMANパラメータを含まなければなりません。"
    },
    {
      "indent": 0,
      "text": "5. Parameter and Packet Formats",
      "section_title": true,
      "ja": "5.パラメータとパケット形式"
    },
    {
      "indent": 3,
      "text": "In this section, new and modified HIP parameters are presented, as well as modified HIP packets.",
      "ja": "このセクションでは、新規および改変HIPパラメータが提示、ならびに改変HIPパケットです。"
    },
    {
      "indent": 0,
      "text": "5.1. New Parameters",
      "section_title": true,
      "ja": "5.1。新しいパラメータ"
    },
    {
      "indent": 3,
      "text": "Two HIP parameters are defined for setting up ESP transport format associations in HIP communication and for rekeying existing ones. Also, the NOTIFICATION parameter, described in [RFC7401], has two error values defined for this specification.",
      "ja": "二つのHIPパラメータは、HIP通信でESPトランスポートフォーマットの関連付けを設定するために、既存のものを再入力するために定義されています。また、[RFC7401]に記載の通知パラメータは、本明細書のために定義された2つのエラー値を有しています。"
    },
    {
      "indent": 6,
      "text": "Parameter Type Length Data",
      "ja": "パラメータタイプ長データ"
    },
    {
      "indent": 6,
      "text": "ESP_INFO 65 12 Remote's old SPI, new SPI, and other info ESP_TRANSFORM 4095 variable ESP Encryption and Authentication Transform(s)",
      "ja": "ESP_INFO 65 12リモートの古いSPI、新しいSPI、およびその他の情報ESP_TRANSFORM 4095変数ESP暗号化と認証トランスフォーム（S）"
    },
    {
      "indent": 0,
      "text": "5.1.1. ESP_INFO",
      "section_title": true,
      "ja": "5.1.1。 ESP_INFO"
    },
    {
      "indent": 3,
      "text": "During the establishment and update of an ESP SA, the SPI value of both hosts must be transmitted between the hosts. In addition, hosts need the index value to the KEYMAT when they are drawing keys from the generated keying material. The ESP_INFO parameter is used to transmit the SPI values and the KEYMAT index information between the hosts.",
      "ja": "ESP SAの確立および更新中に、両方のホストのSPI値は、ホスト間で送信されなければなりません。それらが生成キーイング材料からキーを描画しているときに加えて、ホストはKEYMATにインデックス値を必要とします。 ESP_INFOパラメータはSPI値とホスト間KEYMATインデックス情報を送信するために使用されます。"
    },
    {
      "indent": 3,
      "text": "During the initial ESP SA setup, the hosts send the SPI value that they want the peer to use when sending ESP data to them. The value is set in the NEW SPI field of the ESP_INFO parameter. In the initial setup, an old value for the SPI does not exist; thus, the OLD SPI field value is set to zero. The OLD SPI field value may also be zero when additional SAs are set up between HIP hosts, e.g., in the case of multihomed HIP hosts [RFC5206]. However, such use is beyond the scope of this specification.",
      "ja": "最初のESP SAのセットアップ時に、ホストは、彼らがそれらにESPデータを送信するときにピアが使用するSPI値を送信します。値はESP_INFOパラメータのNEW SPIフィールドに設定されています。初期設定では、SPIの古い値は存在しません。従って、OLD SPIフィールドの値はゼロに設定されています。追加のSAがマルチホームHIPホスト[RFC5206]の場合には、例えば、HIPホスト間に設定されているときに、古いSPIフィールドの値がゼロであってもよいです。しかし、そのような使用は、本明細書の範囲を超えています。"
    },
    {
      "indent": 3,
      "text": "The KEYMAT index value points to the place in the KEYMAT from where the keying material for the ESP SAs is drawn. The KEYMAT index value is zero only when the ESP_INFO is sent during a rekeying process and new keying material is generated.",
      "ja": "ESP SAの鍵材料が描かれる場所からKEYMAT内の場所にKEYMAT指標値ポイント。 KEYMAT指標値はESP_INFOがリキー処理中に送信され、新しいキーイングマテリアルが生成された場合にのみゼロです。"
    },
    {
      "indent": 3,
      "text": "During the life of an SA established by HIP, one of the hosts may need to reset the Sequence Number to one and rekey. The reason for rekeying might be an approaching sequence number wrap in ESP, or a local policy on the use of a key. Rekeying ends the current SAs and starts new ones on both peers.",
      "ja": "HIPによって確立されたSAの寿命の間に、ホストの1は1とリキーにシーケンス番号をリセットする必要があります。再入力した理由は、ESPで近づいてシーケンス番号ラップ、またはキーの使用上のローカルポリシーであるかもしれません。鍵の再生成は、現在のSAを終了し、両方のピアで新しいものを開始します。"
    },
    {
      "indent": 3,
      "text": "During the rekeying process, the ESP_INFO parameter is used to transmit the changed SPI values and the keying material index.",
      "ja": "リキー処理中、ESP_INFOパラメータが変更SPI値及び鍵材料指標を送信するために使用されます。"
    },
    {
      "indent": 6,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             Type              |             Length            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|           Reserved            |         KEYMAT Index          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                            OLD SPI                            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                            NEW SPI                            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Type 65 Length 12 KEYMAT Index index, in bytes, where to continue to draw ESP keys from KEYMAT. If the packet includes a new Diffie-Hellman key and the ESP_INFO is sent in an UPDATE packet, the field MUST be zero. If the ESP_INFO is included in base exchange messages, the KEYMAT Index must have the index value of the point from where the ESP SA keys are drawn. Note that the length of this field limits the amount of keying material that can be drawn from KEYMAT. If that amount is exceeded, the packet MUST contain a new Diffie-Hellman key. OLD SPI old SPI for data sent to address(es) associated with this SA. If this is an initial SA setup, the OLD SPI value is zero. NEW SPI new SPI for data sent to address(es) associated with this SA.",
      "ja": "タイプ65の長さ12 KEYMATインデックスインデックス、バイト単位で、どこKEYMATからESPキーを描画するために続行します。パケットが含まれている場合は新しいDiffie-HellmanキーとESP_INFOがUPDATEパケットで送信され、フィールドはゼロでなければなりません。 ESP_INFOがベース交換メッセージに含まれている場合は、KEYMAT指数はESP SAキーが描かれているところから、ポイントのインデックス値を持っている必要があります。このフィールドの長さはKEYMATから引き出すことができる鍵材料の量を制限することに留意されたいです。その量を超えた場合、パケットは、新しいDiffie-Hellman鍵を含まなければなりません。アドレスに送られたデータのためのOLD SPI古いSPI（ES）は、このSAに関連付けられています。これは初期SAの設定がある場合は、OLD SPI値はゼロです。このSAに関連付けられたアドレスに送られたデータのためのNEW SPI新しいSPI（ES）。"
    },
    {
      "indent": 0,
      "text": "5.1.2. ESP_TRANSFORM",
      "section_title": true,
      "ja": "5.1.2。 ESP_TRANSFORM"
    },
    {
      "indent": 3,
      "text": "The ESP_TRANSFORM parameter is used during ESP SA establishment. The first party sends a selection of transform families in the ESP_TRANSFORM parameter, and the peer must select one of the proposed values and include it in the response ESP_TRANSFORM parameter.",
      "ja": "ESP_TRANSFORMパラメータは、ESP SAの確立時に使用されます。最初のパーティはESP_TRANSFORMパラメータに変換家族の選択を送信し、ピアが提案されている値のいずれかを選択し、応答ESP_TRANSFORMパラメータに含める必要があります。"
    },
    {
      "indent": 6,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             Type              |             Length            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|          Reserved             |           Suite ID #1         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|          Suite ID #2          |           Suite ID #3         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|          Suite ID #n          |             Padding           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Type 4095 Length length in octets, excluding Type, Length, and padding. Reserved zero when sent, ignored when received. Suite ID defines the ESP Suite to be used.",
      "ja": "タイプ、長さ、およびパディングを除く、オクテット単位で4095の長さの長さを入力します。受信時に無視され、送信されたときにゼロを予約。スイートIDを使用するESP Suiteを定義します。"
    },
    {
      "indent": 3,
      "text": "The following Suite IDs can be used:",
      "ja": "以下スイートIDが使用できます。"
    },
    {
      "indent": 12,
      "text": "Suite ID Value",
      "ja": "スイートID値"
    },
    {
      "indent": 12,
      "text": "RESERVED 0 [RFC7402] AES-128-CBC with HMAC-SHA1 1 [RFC3602], [RFC2404] DEPRECATED 2 [RFC7402] DEPRECATED 3 [RFC7402] DEPRECATED 4 [RFC7402] DEPRECATED 5 [RFC7402] DEPRECATED 6 [RFC7402] NULL with HMAC-SHA-256 7 [RFC2410], [RFC4868] AES-128-CBC with HMAC-SHA-256 8 [RFC3602], [RFC4868] AES-256-CBC with HMAC-SHA-256 9 [RFC3602], [RFC4868] AES-CCM-8 10 [RFC4309] AES-CCM-16 11 [RFC4309] AES-GCM with an 8-octet ICV 12 [RFC4106] AES-GCM with a 16-octet ICV 13 [RFC4106] AES-CMAC-96 14 [RFC4493], [RFC4494] AES-GMAC 15 [RFC4543]",
      "ja": "RESERVED 0 HMAC-SHA1 1 [RFC3602]、[RFC2404]とAES-128-CBC 2 [RFC7402]を非難[RFC7402]は3 [RFC7402]は4 [RFC7402]が5 [RFC7402]はHMACで6 [RFC7402] NULL非推奨非推奨非推奨非推奨しました-SHA-256 7 [RFC2410]、[RFC4868]とAES-128-CBC HMAC-SHA-256 8 [RFC3602]と[RFC4868] AES-256-CBC HMAC-SHA-256 9 [RFC3602]、[RFC4868] AES-CCM-8 10 [RFC4309] AES-CCM-16 11 [RFC4309] 8オクテットICV 12 [RFC4106] AES-GCM 16オクテットICV 13 [RFC4106] AES-CMAC-96 14とAES-GCM [RFC4493]、[RFC4494] AES-GMAC 15 [RFC4543]"
    },
    {
      "indent": 3,
      "text": "The sender of an ESP transform parameter MUST make sure that there are no more than six (6) Suite IDs in one ESP transform parameter. Conversely, a recipient MUST be prepared to handle received transform parameters that contain more than six Suite IDs. The limited number of Suite IDs sets the maximum size of the ESP_TRANSFORM parameter. As the default configuration, the ESP_TRANSFORM parameter MUST contain at least one of the mandatory Suite IDs. There MAY be a configuration option that allows the administrator to override this default.",
      "ja": "ESPの送信者は、変換パラメータを1 ESPには半年以上（6）スイートIDがパラメータが変換されていないことを確認する必要があります。逆に、受信者が半年以上スイートのIDが含まれている変換パラメータを受信処理するために準備しなければなりません。スイートIDの数は限られてESP_TRANSFORMパラメータの最大サイズを設定します。デフォルトの設定として、ESP_TRANSFORMパラメータは必須スイートIDの少なくとも一つを含まなければなりません。管理者は、このデフォルトを上書きすることを可能にする設定オプションがあるかもしれません。"
    },
    {
      "indent": 3,
      "text": "Mandatory implementations: AES-128-CBC with HMAC-SHA-256. NULL with HMAC-SHA-256 SHOULD also be supported (see also Section 3.3.5).",
      "ja": "必須の実装：HMAC-SHA-256、AES-128-CBC。 HMAC-SHA-256とのNULLはまた、（セクション3.3.5を参照）に支持されてください。"
    },
    {
      "indent": 3,
      "text": "Under some conditions, it is possible to use Traffic Flow Confidentiality (TFC) [RFC4303] with ESP in BEET mode. However, the definition of such an operation is left for future work and must be done in a separate specification.",
      "ja": "いくつかの条件下では、BEETモードのESPでのトラフィックフローの機密性（TFC）[RFC4303]を使用することが可能です。しかしながら、このような動作の定義は今後の作業のために残されていると別の仕様で行われなければなりません。"
    },
    {
      "indent": 0,
      "text": "5.1.3. NOTIFICATION Parameter",
      "section_title": true,
      "ja": "5.1.3。通知パラメータ"
    },
    {
      "indent": 3,
      "text": "The HIP base specification defines a set of NOTIFICATION error types. The following error types are required for describing errors in ESP Transform crypto suites during negotiation.",
      "ja": "HIP基本仕様は、通知エラータイプのセットを定義します。次のエラーの種類は、ESPでエラーがネゴシエーション中に暗号スイートを変換記述するために必要とされます。"
    },
    {
      "indent": 9,
      "text": "NOTIFICATION PARAMETER - ERROR TYPES     Value\n------------------------------------     -----",
      "raw": true
    },
    {
      "indent": 9,
      "text": "NO_ESP_PROPOSAL_CHOSEN 18",
      "ja": "NO_ESP_PROPOSAL_CHOSEN 18"
    },
    {
      "indent": 12,
      "text": "None of the proposed ESP Transform crypto suites was acceptable.",
      "ja": "暗号スイートを変換提案ESPのいずれも許容ませんでした。"
    },
    {
      "indent": 9,
      "text": "INVALID_ESP_TRANSFORM_CHOSEN 19",
      "ja": "INVALID_ESP_TRANSFORM_CHOSEN 19"
    },
    {
      "indent": 12,
      "text": "The ESP Transform crypto suite does not correspond to one offered by the Responder.",
      "ja": "ESPトランスフォーム暗号スイートは、レスポンダによって提供されるものに対応していません。"
    },
    {
      "indent": 0,
      "text": "5.2. HIP ESP Security Association Setup",
      "section_title": true,
      "ja": "5.2。 HIP ESPセキュリティアソシエーションの設定"
    },
    {
      "indent": 3,
      "text": "The ESP Security Association is set up during the base exchange. The following subsections define the ESP SA setup procedure using both base exchange messages (R1, I2, R2) and UPDATE messages.",
      "ja": "ESPセキュリティアソシエーションは、塩基交換時に設定されています。以下のサブセクションでは、両方の塩基交換メッセージ（R1、I2、R2）とUPDATEメッセージを使用してESP SAのセットアップ手順を定義します。"
    },
    {
      "indent": 0,
      "text": "5.2.1. Setup during Base Exchange",
      "section_title": true,
      "ja": "5.2.1。基本交換時のセットアップ"
    },
    {
      "indent": 0,
      "text": "5.2.1.1. Modifications in R1",
      "section_title": true,
      "ja": "5.2.1.1。 R1における修飾"
    },
    {
      "indent": 3,
      "text": "The ESP_TRANSFORM contains the ESP modes supported by the sender, in the order of preference. All implementations MUST support AES-128-CBC [RFC3602] with HMAC-SHA-256 [RFC4868].",
      "ja": "ESP_TRANSFORMは、優先順に、送信側でサポートされているESPモードが含まれています。すべての実装は、AES-128-CBC HMAC-SHA-256 [RFC3602]、[RFC4868]をサポートしなければなりません。"
    },
    {
      "indent": 3,
      "text": "The following figure shows the resulting R1 packet layout.",
      "ja": "次の図は、得られたR1パケットレイアウトを示しています。"
    },
    {
      "indent": 6,
      "text": "The HIP parameters for the R1 packet:",
      "ja": "R1パケットのHIPパラメータ："
    },
    {
      "indent": 6,
      "text": "IP ( HIP ( [ R1_COUNTER, ] PUZZLE, DIFFIE_HELLMAN, HIP_CIPHER, ESP_TRANSFORM, HOST_ID, [ ECHO_REQUEST, ] HIP_SIGNATURE_2 ) [, ECHO_REQUEST ])",
      "ja": "IP（HIP（[R1_COUNTER、】パズルDIFFIE_HELLMAN、HIP_CIPHER、ESP_TRANSFORM、HOST_ID、[ECHO_REQUEST、] HIP_SIGNATURE_2）、ECHO_REQUEST]）"
    },
    {
      "indent": 0,
      "text": "5.2.1.2. Modifications in I2",
      "section_title": true,
      "ja": "5.2.1.2。 I2における修飾"
    },
    {
      "indent": 3,
      "text": "The ESP_INFO contains the sender's SPI for this association as well as the KEYMAT index from where the ESP SA keys will be drawn. The old SPI value is set to zero.",
      "ja": "ESP_INFOは、送信者のこの関連付けのためのSPIと同様にESP SAキーが描画される場所からKEYMATインデックスが含まれています。古いSPI値はゼロに設定されています。"
    },
    {
      "indent": 3,
      "text": "The ESP_TRANSFORM contains the ESP mode selected by the sender of R1. All implementations MUST support AES-128-CBC [RFC3602] with HMAC-SHA-256 [RFC4868].",
      "ja": "ESP_TRANSFORMは、R1の送信者によって選択されたESPモードが含まれています。すべての実装は、AES-128-CBC HMAC-SHA-256 [RFC3602]、[RFC4868]をサポートしなければなりません。"
    },
    {
      "indent": 3,
      "text": "The following figure shows the resulting I2 packet layout.",
      "ja": "次の図は、得られたI2パケットレイアウトを示しています。"
    },
    {
      "indent": 6,
      "text": "The HIP parameters for the I2 packet:",
      "ja": "I2パケットのHIPパラメータ："
    },
    {
      "indent": 6,
      "text": "IP ( HIP ( ESP_INFO, [R1_COUNTER,] SOLUTION, DIFFIE_HELLMAN, HIP_CIPHER, ESP_TRANSFORM, ENCRYPTED { HOST_ID }, [ ECHO_RESPONSE ,] HMAC, HIP_SIGNATURE [, ECHO_RESPONSE] ) )",
      "ja": "IP（HIP（ESP_INFO、[R1_COUNTER、】溶液DIFFIE_HELLMAN、HIP_CIPHER、ESP_TRANSFORM、ENCRYPTED {HOST_ID}、[ECHO_RESPONSE、】HMAC、HIP_SIGNATURE [、ECHO_RESPONSE]））"
    },
    {
      "indent": 0,
      "text": "5.2.1.3. Modifications in R2",
      "section_title": true,
      "ja": "5.2.1.3。 R2の修正"
    },
    {
      "indent": 3,
      "text": "The R2 contains an ESP_INFO parameter, which has the SPI value of the sender of the R2 for this association. The ESP_INFO also has the KEYMAT index value specifying where the ESP SA keys are drawn.",
      "ja": "R2は、この関連付けのためのR2の送信者のSPI値を有するESP_INFOパラメータを含んでいます。 ESP_INFOもESP SAキーが描かれている指定KEYMATインデックス値を持っています。"
    },
    {
      "indent": 3,
      "text": "The following figure shows the resulting R2 packet layout.",
      "ja": "次の図は、得られたR2パケットレイアウトを示しています。"
    },
    {
      "indent": 6,
      "text": "The HIP parameters for the R2 packet:",
      "ja": "R2のパケットのためのHIPパラメータ："
    },
    {
      "indent": 6,
      "text": "IP ( HIP ( ESP_INFO, HMAC_2, HIP_SIGNATURE ) )",
      "ja": "IP（HIP（ESP_INFO、HMAC_2、HIP_SIGNATURE））"
    },
    {
      "indent": 0,
      "text": "5.3. HIP ESP Rekeying",
      "section_title": true,
      "ja": "5.3。 HIP ESP鍵の再生成"
    },
    {
      "indent": 3,
      "text": "In this section, the procedure for rekeying an existing ESP SA is presented.",
      "ja": "このセクションでは、既存のESP SAを再入力するための手順が提示されます。"
    },
    {
      "indent": 3,
      "text": "Conceptually, the process can be represented by the following message sequence using the host names I' and R' defined in Section 3.3.2. For simplicity, HMAC and HIP_SIGNATURE are not depicted, and DIFFIE_HELLMAN keys are optional. The UPDATE with ACK_I need not be piggybacked with the UPDATE with SEQ_R; it may be ACKed separately (in which case the sequence would include four packets).",
      "ja": "概念的には、プロセスは、I「及びR」は、セクション3.3.2で定義されたホスト名を使用して、次のメッセージシーケンスによって表すことができます。簡単にするために、HMACとHIP_SIGNATUREが描かれ、DIFFIE_HELLMANキーはオプションではありません。 ACK_IとUPDATEはSEQ_RとUPDATEで便乗する必要はありません。これは、（この場合、シーケンスは、4つのパケットを含むであろう）を別々ACKされてもよいです。"
    },
    {
      "indent": 11,
      "text": "I' R'",
      "ja": "I 'R'"
    },
    {
      "indent": 12,
      "text": "     UPDATE(ESP_INFO, SEQ_I, [DIFFIE_HELLMAN])\n----------------------------------->\n     UPDATE(ESP_INFO, SEQ_R, ACK_I, [DIFFIE_HELLMAN])\n<-----------------------------------\n     UPDATE(ACK_R)\n----------------------------------->",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Below, the first two packets in this figure are explained.",
      "ja": "以下は、この図の最初の2つのパケットが説明されています。"
    },
    {
      "indent": 0,
      "text": "5.3.1. Initializing Rekeying",
      "section_title": true,
      "ja": "5.3.1。初期化鍵の再生成"
    },
    {
      "indent": 3,
      "text": "When HIP is used with ESP, the UPDATE packet is used to initiate rekeying. The UPDATE packet MUST carry an ESP_INFO and MAY carry a DIFFIE_HELLMAN parameter.",
      "ja": "HIPは、ESPで使用される場合、UPDATEパケットは再入力を開始するために使用されます。 UPDATEパケットはESP_INFOを運ばなければなりませんし、DIFFIE_HELLMANパラメータを運ぶことができます。"
    },
    {
      "indent": 3,
      "text": "Intermediate systems that use the SPI will have to inspect HIP packets for those that carry rekeying information. The packet is signed for the benefit of the intermediate systems. Since intermediate systems may need the new SPI values, the contents cannot be encrypted.",
      "ja": "SPIを使用する中間システムを再入力情報を運ぶもののためのHIPパケットを検査する必要があります。パケットは中間システムの利益のために署名されます。中間システムは、新しいSPI値が必要になる場合がありますので、内容を暗号化することはできません。"
    },
    {
      "indent": 3,
      "text": "The following figure shows the contents of a rekeying initialization UPDATE packet.",
      "ja": "次の図は、再入力の初期化UPDATEパケットの内容を示しています。"
    },
    {
      "indent": 6,
      "text": "The HIP parameters for the UPDATE packet initiating rekeying:",
      "ja": "鍵の再生成を開始UPDATEパケットのためのHIPパラメータ："
    },
    {
      "indent": 6,
      "text": "IP ( HIP ( ESP_INFO, SEQ, [DIFFIE_HELLMAN, ] HMAC, HIP_SIGNATURE ) )",
      "ja": "IP（HIP（ESP_INFO、配列、[DIFFIE_HELLMAN、】HMAC、HIP_SIGNATURE））"
    },
    {
      "indent": 0,
      "text": "5.3.2. Responding to the Rekeying Initialization",
      "section_title": true,
      "ja": "5.3.2。鍵の再生成の初期化への対応"
    },
    {
      "indent": 3,
      "text": "The UPDATE ACK is used to acknowledge the received UPDATE rekeying initialization. The acknowledgment UPDATE packet MUST carry an ESP_INFO and MAY carry a DIFFIE_HELLMAN parameter.",
      "ja": "UPDATE ACKが受信したUPDATE再入力の初期化を確認するために使用されます。確認応答UPDATEパケットはESP_INFOを運ばなければなりませんし、DIFFIE_HELLMANパラメータを運ぶことができます。"
    },
    {
      "indent": 3,
      "text": "Intermediate systems that use the SPI will have to inspect HIP packets for packets carrying rekeying information. The packet is signed for the benefit of the intermediate systems. Since intermediate systems may need the new SPI values, the contents cannot be encrypted.",
      "ja": "SPIを使用する中間システムを再入力情報を搬送するパケットのためのHIPパケットを検査する必要があります。パケットは中間システムの利益のために署名されます。中間システムは、新しいSPI値が必要になる場合がありますので、内容を暗号化することはできません。"
    },
    {
      "indent": 3,
      "text": "The following figure shows the contents of a rekeying acknowledgment UPDATE packet.",
      "ja": "次の図は、再入力確認UPDATEパケットの内容を示しています。"
    },
    {
      "indent": 6,
      "text": "The HIP parameters for the UPDATE packet:",
      "ja": "UPDATEパケットのHIPパラメータ："
    },
    {
      "indent": 6,
      "text": "IP ( HIP ( ESP_INFO, SEQ, ACK, [ DIFFIE_HELLMAN, ] HMAC, HIP_SIGNATURE ) )",
      "ja": "IP（HIP（ESP_INFO、SEQ、ACK、[DIFFIE_HELLMAN、】HMAC、HIP_SIGNATURE））"
    },
    {
      "indent": 0,
      "text": "5.4. ICMP Messages",
      "section_title": true,
      "ja": "5.4。 ICMPメッセージ"
    },
    {
      "indent": 3,
      "text": "ICMP message handling is mainly described in the HIP base specification [RFC7401]. In this section, we describe the actions related to ESP security associations.",
      "ja": "ICMPメッセージの処理は、主にHIP基本仕様[RFC7401]に記載されています。このセクションでは、ESPセキュリティアソシエーションに関連するアクションを記述します。"
    },
    {
      "indent": 0,
      "text": "5.4.1. Unknown SPI",
      "section_title": true,
      "ja": "5.4.1。不明なSPI"
    },
    {
      "indent": 3,
      "text": "If a HIP implementation receives an ESP packet that has an unrecognized SPI number, it MAY respond (subject to rate limiting the responses) with an ICMP packet with type \"Parameter Problem\", with the pointer pointing to the beginning of the SPI field in the ESP header.",
      "ja": "HIP実装が認識されていないSPI番号を持つESPパケットを受信した場合、それは中のSPIフィールドの先頭を指すポインタで、型の「パラメータ問題」とICMPパケットで（レート応答を制限する対象）に応答するかもしれESPヘッダ。"
    },
    {
      "indent": 0,
      "text": "6. Packet Processing",
      "section_title": true,
      "ja": "6.パケット処理"
    },
    {
      "indent": 3,
      "text": "Packet processing is mainly defined in the HIP base specification [RFC7401]. This section describes the changes and new requirements for packet handling when the ESP transport format is used. Note that all HIP packets (currently protocol 139) MUST bypass ESP processing.",
      "ja": "パケット処理は、主にHIP基本仕様[RFC7401]で定義されています。このセクションでは、ESPのトランスポートフォーマットが使用されている変更やパケット処理のための新たな要件について説明します。すべてのHIPパケット（現在のプロトコル139）は、ESP処理を迂回しなければならないことに留意されたいです。"
    },
    {
      "indent": 0,
      "text": "6.1. Processing Outgoing Application Data",
      "section_title": true,
      "ja": "6.1。送信アプリケーションデータを処理"
    },
    {
      "indent": 3,
      "text": "Outgoing application data handling is specified in the HIP base specification [RFC7401]. When the ESP transport format is used, and there is an active HIP session for the given < source, destination > HIT pair, the outgoing datagram is protected using the ESP security association. The following additional steps define the conceptual processing rules for outgoing ESP protected datagrams.",
      "ja": "発信アプリケーションデータ処理は、HIP基本仕様[RFC7401]で指定されています。 ESPのトランスポートフォーマットが使用され、所与の<ソース、宛先> HITペアのアクティブHIPセッションが存在している場合、発信データグラムは、ESPセキュリティアソシエーションを使用して保護されています。以下の追加のステップは、発信ESP保護されたデータグラムのための概念的な処理規則を定義します。"
    },
    {
      "indent": 3,
      "text": "1. Detect the proper ESP SA using the HITs in the packet header or other information associated with the packet.",
      "ja": "1.パケットヘッダまたはパケットに関連付けられた他の情報にヒットを使用して適切なESP SAを検出します。"
    },
    {
      "indent": 3,
      "text": "2. Process the packet normally, as if the SA was a transport mode SA.",
      "ja": "2.プロセスパケット通常、SAは輸送モードSAであったかのように。"
    },
    {
      "indent": 3,
      "text": "3. Ensure that the outgoing ESP protected packet has proper IP header format, depending on the used IP address family, and proper IP addresses in its IP header, e.g., by replacing HITs left by the ESP processing. Note that this placement of proper IP addresses MAY also be performed at some other point in the stack, e.g., before ESP processing.",
      "ja": "3.発信ESP保護されたパケットは、ESP処理によって残されヒットを置換することにより、例えば、使用されるIPアドレスファミリに応じて、適切なIPヘッダのフォーマットを有し、そのIPヘッダ内の適切なIPアドレスことを確認してください。適切なIPアドレスのこの配置はまた、ESP処理の前に、例えば、スタック内の他のいくつかの時点で実行されてもよいことに注意してください。"
    },
    {
      "indent": 0,
      "text": "6.2. Processing Incoming Application Data",
      "section_title": true,
      "ja": "6.2。着信アプリケーションデータを処理"
    },
    {
      "indent": 3,
      "text": "Incoming HIP user data packets arrive as ESP protected packets. In the usual case, the receiving host has a corresponding ESP security association, identified by the SPI and destination IP address in the packet. However, if the host has crashed or otherwise lost its HIP state, it may not have such an SA.",
      "ja": "ESPは、パケットを保護するよう着信HIPのユーザデータパケットが到着します。通常の場合、受信ホストは、パケット内のSPIと宛先IPアドレスによって識別され、対応するESPセキュリティアソシエーションを有しています。ホストがクラッシュしたか、そうでなければそのHIP状態を失った場合は、そのようなSAを持っていないかもしれません。"
    },
    {
      "indent": 3,
      "text": "The basic incoming data handling is specified in the HIP base specification. Additional steps are required when ESP is used for protecting the data traffic. The following steps define the conceptual processing rules for incoming ESP protected datagrams targeted to an ESP security association created with HIP.",
      "ja": "基本的な着信データ処理は、HIP基本仕様で指定されています。 ESPは、データトラフィックを保護するために使用されている場合、追加の手順が必要です。次の手順は、HIPを用いて作成されたESPセキュリティアソシエーションを標的とする着信ESP保護されたデータグラムのための概念的な処理規則を定義します。"
    },
    {
      "indent": 3,
      "text": "1. Detect the proper ESP SA using the SPI. If the resulting SA is a non-HIP ESP SA, process the packet according to standard IPsec rules. If there are no SAs identified with the SPI, the host MAY send an ICMP packet as defined in Section 5.4. How to handle lost state is an implementation issue.",
      "ja": "1. SPIを使用して、適切なESP SAを検出します。得られたSAは、非HIP ESP SAである場合、標準のIPsec規則に従ってパケットを処理します。 SPIで識別されていないSAが存在しない場合は、セクション5.4で定義されているように、ホストは、ICMPパケットを送信することができます。失われた状態を処理する方法の実装上の問題です。"
    },
    {
      "indent": 3,
      "text": "2. If the SPI matches with an active HIP-based ESP SA, the IP addresses in the datagram are replaced with the HITs associated with the SPI. Note that this IP-address-to-HIT conversion step MAY also be performed at some other point in the stack, e.g., after ESP processing. Note also that if the incoming packet has IPv4 addresses, the packet must be converted to IPv6 format before replacing the addresses with HITs (such that the transport checksum will pass if there are no errors).",
      "ja": "2. SPIがアクティブHIPベースのESP SAと一致した場合、データグラム内のIPアドレスは、SPIに関連付けられたヒットに置き換えられます。このIPアドレス対HIT変換ステップは、また、ESP処理の後、例えば、スタック内の他のいくつかの時点で実行されてもよいことに留意されたいです。着信パケットがIPv4アドレスを持っている場合、パケットは（エラーがない場合、このような輸送チェックサムが合格すること）ヒットとアドレスを交換する前に、IPv6形式に変換する必要があることにも留意されたいです。"
    },
    {
      "indent": 3,
      "text": "3. The transformed packet is next processed normally by ESP, as if the packet were a transport mode packet. The packet may be dropped by ESP, as usual. In a typical implementation, the result of successful ESP decryption and verification is a datagram with the associated HITs as source and destination.",
      "ja": "パケットは、トランスポート・モード・パケットであるかのように3.形質パケットは次に、ESPによって正常に処理されます。パケットはいつものように、ESPによって落下することができます。典型的な実装では、成功したESP復号及び検証の結果は、ソースおよび宛先として関連するヒットとグラムです。"
    },
    {
      "indent": 3,
      "text": "4. The datagram is delivered to the upper layer. Demultiplexing the datagram to the right upper-layer socket is performed as usual, except that the HITs are used in place of IP addresses during the demultiplexing.",
      "ja": "4.データグラムを上位層に配信されます。右上位層のソケットにデータグラムを逆多重化することはヒットが分離時にIPアドレスの代わりに使用されていることを除いて、通常通りに行われます。"
    },
    {
      "indent": 0,
      "text": "6.3. HMAC and SIGNATURE Calculation and Verification",
      "section_title": true,
      "ja": "6.3。 HMACと署名計算と検証"
    },
    {
      "indent": 3,
      "text": "The new HIP parameters described in this document, ESP_INFO and ESP_TRANSFORM, must be protected using HMAC and signature calculations. In a typical implementation, they are included in R1, I2, R2, and UPDATE packet HMAC and SIGNATURE calculations as described in [RFC7401].",
      "ja": "この文書で説明した新しいHIPパラメータ、ESP_INFOとESP_TRANSFORMは、HMACと署名の計算を使用して保護されなければなりません。 [RFC7401]に記載されているように典型的な実装では、それらは、R1、I2、R2、及びUPDATEパケットHMAC署名の計算に含まれます。"
    },
    {
      "indent": 0,
      "text": "6.4. Processing Incoming ESP SA Initialization (R1)",
      "section_title": true,
      "ja": "6.4。処理着信ESP SAの初期化（R1）"
    },
    {
      "indent": 3,
      "text": "The ESP SA setup is initialized in the R1 message. The receiving host (Initiator) selects one of the ESP transforms from the presented values. If no suitable value is found, the negotiation is terminated. The selected values are subsequently used when generating and using encryption keys, and when sending the reply packet. If the proposed alternatives are not acceptable to the system, it may abandon the ESP SA establishment negotiation, or it may resend the I1 message within the retry bounds.",
      "ja": "ESP SAのセットアップは、R1メッセージで初期化されます。受信ホスト（イニシエータ）はESPの提示値から変換を選択します。もし適切な値が見つからない場合は、ネゴシエーションが終了されます。返信パケットを送信するときに生成した暗号鍵を使用して、いつ選択された値は、その後使用されています。提案された代替システムに受け入れられない場合は、ESP SA確立ネゴシエーションを放棄することができる、またはそれは再試行範囲内I1メッセージを再送信することができます。"
    },
    {
      "indent": 3,
      "text": "After selecting the ESP transform and performing other R1 processing, the system prepares and creates an incoming ESP security association. It may also prepare a security association for outgoing traffic, but since it does not have the correct SPI value yet, it cannot activate it.",
      "ja": "変換ESPを選択し、他のR1の処理を行った後、システムは、着信ESPセキュリティアソシエーションを作成し、作成します。また、発信トラフィックのためのセキュリティアソシエーションを作成することができるが、それはまだ正しいSPI値を持っていないので、それをアクティブにすることはできません。"
    },
    {
      "indent": 0,
      "text": "6.5. Processing Incoming Initialization Reply (I2)",
      "section_title": true,
      "ja": "6.5。処理着信初期返信（I2）"
    },
    {
      "indent": 3,
      "text": "The following steps are required to process the incoming ESP SA initialization replies in I2. The steps below assume that the I2 has been accepted for processing (e.g., has not been dropped due to HIT comparisons as described in [RFC7401]).",
      "ja": "次のステップは、I2で、着信ESP SAの初期化応答を処理するために必要とされています。以下の手順は、（例えば、[RFC7401]に記載されているように比較をヒットすることにより削除されていない）I2は、処理のために受理されたと仮定する。"
    },
    {
      "indent": 3,
      "text": "o The ESP_TRANSFORM parameter is verified, and it MUST contain a single value in the parameter; and it MUST match one of the values offered in the initialization packet.",
      "ja": "O ESP_TRANSFORMパラメータが検証され、それはパラメータに単一の値を含まなければなりません。それは初期化パケットで提供される値のいずれかと一致しなければなりません。"
    },
    {
      "indent": 3,
      "text": "o The ESP_INFO NEW SPI field is parsed to obtain the SPI that will be used for the Security Association outbound from the Responder and inbound to the Initiator. For this initial ESP SA establishment, the old SPI value MUST be zero. The KEYMAT Index field MUST contain the index value to the KEYMAT from where the ESP SA keys are drawn.",
      "ja": "O ESP_INFO NEW SPIフィールドがイニシエータにセキュリティアソシエーションレスポンダからのアウトバウンドとインバウンドのために使用されるSPIを取得するために解析されます。この最初のESP SAの確立のために、古いSPI値はゼロでなければなりません。 ESP SAキーが描かれているところからKEYMAT IndexフィールドはKEYMATにインデックス値を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "o The system prepares and creates both incoming and outgoing ESP security associations.",
      "ja": "Oシステムが準備し、着信と発信ESPセキュリティアソシエーションの両方を作成します。"
    },
    {
      "indent": 3,
      "text": "o Upon successful processing of the initialization reply message, the possible old Security Associations (as left over from an earlier incarnation of the HIP association) are dropped and the new ones are installed, and a finalizing packet, R2, is sent. Possible ongoing rekeying attempts are dropped.",
      "ja": "O初期化応答メッセージを正常に処理されると、可能性古いセキュリティアソシエーションは（HIP協会の以前の化身から残って）削除され、新しいものがインストールされ、ファイナライズパケット、R2は、送信されます。可能性のある継続的なキーの再発行の試みは廃棄されます。"
    },
    {
      "indent": 0,
      "text": "6.6. Processing Incoming ESP SA Setup Finalization (R2)",
      "section_title": true,
      "ja": "6.6。処理着信ESP SAのセットアップファイナライズ（R2）"
    },
    {
      "indent": 3,
      "text": "Before the ESP SA can be finalized, the ESP_INFO NEW SPI field is parsed to obtain the SPI that will be used for the ESP Security Association inbound to the sender of the finalization message R2. The system uses this SPI to create or activate the outgoing ESP security association used for sending packets to the peer.",
      "ja": "ESP SAが確定する前に、ESP_INFO NEW SPIフィールドはファイナライズメッセージR2の送信者にESPセキュリティアソシエーションのインバウンドのために使用されるSPIを取得するために解析されます。システムは、ピアにパケットを送信するために使用され、発信ESPセキュリティアソシエーションを作成したり、アクティブにするために、このSPIを使用しています。"
    },
    {
      "indent": 0,
      "text": "6.7. Dropping HIP Associations",
      "section_title": true,
      "ja": "6.7。 HIPの関連付けを削除"
    },
    {
      "indent": 3,
      "text": "When the system drops a HIP association, as described in the HIP base specification, the associated ESP SAs MUST also be dropped.",
      "ja": "システムは、HIPアソシエーションを低下すると、HIP基本仕様に記載されているように、関連するESP SAはまた、削除する必要があります。"
    },
    {
      "indent": 0,
      "text": "6.8. Initiating ESP SA Rekeying",
      "section_title": true,
      "ja": "6.8。 ESP SAの鍵の再生成を開始"
    },
    {
      "indent": 3,
      "text": "During ESP SA rekeying, the hosts draw new keys from the existing keying material, or new keying material is generated from where the new keys are drawn.",
      "ja": "ESP SAの再入力時には、ホストは新しいキーが描かれているところから生成されている既存のキーイングマテリアル、または新しい鍵素材から新しい鍵を描きます。"
    },
    {
      "indent": 3,
      "text": "A system may initiate the SA rekeying procedure at any time. It MUST initiate a rekey if its incoming ESP sequence counter is about to overflow. The system MUST NOT replace its keying material until the rekeying packet exchange successfully completes.",
      "ja": "システムは、いつでもSAのキー更新手順を開始することができます。その入ってくるESPシーケンスカウンタがオーバーフローしそうであるならば、それはキー再生成を開始しなければなりません。キーの再発行パケット交換が正常に完了するまで、システムはその鍵材料を置き換えてはなりません。"
    },
    {
      "indent": 3,
      "text": "Optionally, a system may include a new Diffie-Hellman key for use in new KEYMAT generation. New KEYMAT generation occurs prior to drawing the new keys.",
      "ja": "必要に応じて、システムは、新しいKEYMAT生成に使用するための新しいDiffie-Hellmanキーを含んでもよいです。新KEYMATの世代が新しいキーを描画する前に発生します。"
    },
    {
      "indent": 3,
      "text": "The rekeying procedure uses the UPDATE mechanism defined in [RFC7401]. Because each peer must update its half of the security association pair (including new SPI creation), the rekeying process requires that each side both send and receive an UPDATE. A system will then rekey the ESP SA when it has sent parameters to the peer and has received both an ACK of the relevant UPDATE message and corresponding peer's parameters. It may be that the ACK and the required HIP parameters arrive in different UPDATE messages. This is always true if a system does not initiate an ESP SA update but responds to an update request from the peer, and may also occur if two systems initiate update nearly simultaneously. In such a case, if the system has an outstanding update request, it saves the one parameter and waits for the other before completing rekeying.",
      "ja": "リキー手順は[RFC7401]で定義された更新メカニズムを使用します。各ピアは、（新しいSPIの作成を含む）セキュリティアソシエーションペアのその半分を更新する必要があるため、リキー処理は、各辺が更新を送信および受信の両方ことを必要とします。次に、システムは、それがピアにパラメータを送信したと関連UPDATEメッセージのACKおよび対応するピアのパラメータの両方を受信したときにESP SAをリキーします。これはACK、必要なHIPパラメータが異なるUPDATEメッセージに到着することであってもよいです。システムは、ESP SAの更新を開始するが、ピアからの更新要求に応答し、2つのシステムがほぼ同時に更新を開始した場合にも発生する可能性がない場合、これは常に真です。システムは、未処理の更新要求を有す​​る場合、このような場合に、それは一つのパラメータを保存し、キー更新を完了する前に他のを待ちます。"
    },
    {
      "indent": 3,
      "text": "The following steps define the processing rules for initiating an ESP SA update:",
      "ja": "次の手順では、ESP SAの更新を開始するための処理ルールを定義します。"
    },
    {
      "indent": 3,
      "text": "1. The system decides whether to continue to use the existing KEYMAT or to generate a new KEYMAT. In the latter case, the system MUST generate a new Diffie-Hellman public key.",
      "ja": "1.システムは、既存のKEYMATを使用するか、新しいKEYMATを生成するために継続するかどうかを決定します。後者の場合には、システムは、新しいDiffie-Hellman公開鍵を生成しなければなりません。"
    },
    {
      "indent": 3,
      "text": "2. The system creates an UPDATE packet, which contains the ESP_INFO parameter. In addition, the host may include the optional DIFFIE_HELLMAN parameter. If the UPDATE contains the DIFFIE_HELLMAN parameter, the KEYMAT Index in the ESP_INFO parameter MUST be zero, and the Diffie-Hellman Group ID must be unchanged from that used in the initial handshake. If the UPDATE does not contain DIFFIE_HELLMAN, the ESP_INFO KEYMAT Index MUST be greater than or equal to the index of the next byte to be drawn from the current KEYMAT.",
      "ja": "2.システムは、ESP_INFOパラメータが含まれているUPDATEパケットを作成します。加えて、ホストは、任意DIFFIE_HELLMANパラメータを含むことができます。 UPDATEがDIFFIE_HELLMANパラメータが含まれている場合は、ESP_INFOパラメータでKEYMAT指数はゼロでなければならない、およびDiffie-HellmanのグループIDは、最初のハンドシェイクで使用されるものと変わらないでなければなりません。 UPDATEがDIFFIE_HELLMANが含まれていない場合は、ESP_INFO KEYMAT指数はより大きいか、現在のKEYMATから引き出される次のバイトのインデックスに等しくなければなりません。"
    },
    {
      "indent": 3,
      "text": "3. The system sends the UPDATE packet. For reliability, the underlying UPDATE retransmission mechanism MUST be used.",
      "ja": "3.システムがUPDATEパケットを送信します。信頼性のために、基礎となるUPDATE再送メカニズムを使用しなければなりません。"
    },
    {
      "indent": 3,
      "text": "4. The system MUST NOT delete its existing SAs, but continue using them if its policy still allows. The rekeying procedure SHOULD be initiated early enough to make sure that the SA replay counters do not overflow.",
      "ja": "4.システムは、既存のSAを削除するが、その政策はまだ許可されている場合、それらを引き続き使用してはなりません。再入力手順は、SAのリプレイカウンタがオーバーフローしないことを確認するために早期に十分に開始すべきです。"
    },
    {
      "indent": 3,
      "text": "5. In case a protocol error occurs and the peer system acknowledges the UPDATE but does not itself send an ESP_INFO, the system may not finalize the outstanding ESP SA update request. To guard against this, a system MAY re-initiate the ESP SA update procedure after some time waiting for the peer to respond, or it MAY decide to abort the ESP SA after waiting for an implementation-dependent time. The system MUST NOT keep an outstanding ESP SA update request for an indefinite time.",
      "ja": "5.場合にプロトコルエラーが発生し、ピアシステム更新を認めるが、それ自体がESP_INFOを送信しない、システムが未処理ESP SA更新要求を完了しないことができます。これを防ぐために、システムは、ピアが応答する、またはそれは実装依存の時間を待ってからESP SAを中止することを決定することができるのを待っているいくつかの時間後にESP SAの更新手順を再開始することができます。システムは無期限のための優れたESP SAの更新要求を保つてはなりません。"
    },
    {
      "indent": 3,
      "text": "To simplify the state machine, a host MUST NOT generate new UPDATEs while it has an outstanding ESP SA update request, unless it is restarting the update process.",
      "ja": "それは優れたESP SAの更新要求を持っていながら、それは更新プロセスを再起動されない限り、ステートマシンを簡単にするために、ホストは、新しいアップデートを発生させてはいけません。"
    },
    {
      "indent": 0,
      "text": "6.9. Processing Incoming UPDATE Packets",
      "section_title": true,
      "ja": "6.9。着信UPDATEパケットを処理"
    },
    {
      "indent": 3,
      "text": "When a system receives an UPDATE packet, it must be processed if the following conditions hold (in addition to the generic conditions specified for UPDATE processing in Section 6.12 of [RFC7401]):",
      "ja": "システムは、更新パケットを受信したとき、次の条件が（[RFC7401]のセクション6.12に更新処理のために指定された一般的な条件に加えて）保持している場合、それは処理されなければなりません。"
    },
    {
      "indent": 3,
      "text": "1. A corresponding HIP association must exist. This is usually ensured by the underlying UPDATE mechanism.",
      "ja": "1.対応HIPアソシエーションが存在しなければなりません。これは通常、基礎となるUPDATEメカニズムによって保証されます。"
    },
    {
      "indent": 3,
      "text": "2. The state of the HIP association is ESTABLISHED or R2-SENT.",
      "section_title": true,
      "ja": "2. HIPアソシエーションの状態は、確立またはR2-送られます。"
    },
    {
      "indent": 3,
      "text": "If the above conditions hold, the following steps define the conceptual processing rules for handling the received UPDATE packet:",
      "ja": "上記の条件が成立した場合、次のステップは、受信された更新パケットを処理するための概念的な処理ルールを定義します。"
    },
    {
      "indent": 3,
      "text": "1. If the received UPDATE contains a DIFFIE_HELLMAN parameter, the received KEYMAT Index MUST be zero and the Group ID must match the Group ID in use on the association. If this test fails, the packet SHOULD be dropped and the system SHOULD log an error message.",
      "ja": "1.受信UPDATEがDIFFIE_HELLMANパラメータが含まれている場合は、受信KEYMAT指数はゼロでなければならないとグループIDは、アソシエーション上で使用中のグループIDと一致する必要があります。このテストが失敗した場合、パケットはドロップする必要があり、システムはエラー・メッセージをログに記録すべきです。"
    },
    {
      "indent": 3,
      "text": "2. If there is no outstanding rekeying request, the packet processing continues as specified in Section 6.9.1.",
      "ja": "2.未解決の再入力要求がない場合は、セクション6.9.1で指定されるように、パケット処理が継続されます。"
    },
    {
      "indent": 3,
      "text": "3. If there is an outstanding rekeying request, the UPDATE MUST be acknowledged, the received ESP_INFO (and possibly DIFFIE_HELLMAN) parameters must be saved, and the packet processing continues as specified in Section 6.10.",
      "ja": "3.未処理リキー要求があった場合、UPDATEが受信ESP_INFO（そしておそらくDIFFIE_HELLMAN）パラメータが保存されなければならない、そして、セクション6.10で指定されるように、パケット処理が継続、認めなければなりません。"
    },
    {
      "indent": 0,
      "text": "6.9.1. Processing UPDATE Packet: No Outstanding Rekeying Request",
      "section_title": true,
      "ja": "6.9.1。未解決の鍵の再生成要求：UPDATEパケットを処理"
    },
    {
      "indent": 3,
      "text": "The following steps define the conceptual processing rules for handling a received UPDATE packet with the ESP_INFO parameter:",
      "ja": "次の手順はESP_INFOパラメータを使用して受信された更新パケットを処理するための概念的な処理ルールを定義します。"
    },
    {
      "indent": 3,
      "text": "1. The system consults its policy to see if it needs to generate a new Diffie-Hellman key, and generates a new key (with same Group ID) if needed. The system records any newly generated or received Diffie-Hellman keys for use in KEYMAT generation upon finalizing the ESP SA update.",
      "ja": "1.システムは、それが新しいDiffie-Hellman鍵を生成する必要があるかどうかを確認するために方針を参照し、必要に応じて（同じグループIDを持つ）新しいキーを生成します。システムは、ESP SAの更新を確定する際KEYMAT生成に使用するための任意の新たに生成または受信のDiffie-Hellmanキーを記録します。"
    },
    {
      "indent": 3,
      "text": "2. If the system generated a new Diffie-Hellman key in the previous step, or if it received a DIFFIE_HELLMAN parameter, it sets the ESP_INFO KEYMAT Index to zero. Otherwise, the ESP_INFO KEYMAT Index MUST be greater than or equal to the index of the next byte to be drawn from the current KEYMAT. In this case, it is RECOMMENDED that the host use the KEYMAT Index requested by the peer in the received ESP_INFO.",
      "ja": "2.システムは、前のステップで新しいDiffie-Hellman鍵を生成し、またはそれはDIFFIE_HELLMANパラメータを受信した場合、それはゼロにESP_INFO KEYMATインデックスを設定した場合。そうでなければ、ESP_INFO KEYMAT索引以上現在KEYMATから引き出されるべき次のバイトのインデックスに等しくなければなりません。この場合、ホストが受信ESP_INFOでピアによって要求されたKEYMATインデックスを使用することをお勧めします。"
    },
    {
      "indent": 3,
      "text": "3. The system creates an UPDATE packet, which contains an ESP_INFO parameter and the optional DIFFIE_HELLMAN parameter. This UPDATE would also typically acknowledge the peer's UPDATE with an ACK parameter, although a separate UPDATE ACK may be sent.",
      "ja": "3.システムはESP_INFOパラメータおよびオプションDIFFIE_HELLMANパラメータが含まれている更新パケットを生成します。別のUPDATE ACKを送信することができるが、このアップデートでは、一般的に、ACKパラメーターを指定して、ピアのUPDATEを認めるだろう。"
    },
    {
      "indent": 3,
      "text": "4. The system sends the UPDATE packet and stores any received ESP_INFO and DIFFIE_HELLMAN parameters. At this point, it only needs to receive an acknowledgment for the newly sent UPDATE to finish the ESP SA update. In the usual case, the acknowledgment is handled by the underlying UPDATE mechanism.",
      "ja": "前記システムは、任意のESP_INFOとDIFFIE_HELLMANパラメータを受信したアップデートパケットとストアを送信します。この時点で、それが唯一のESP SAの更新を完了するために、新たに送信されるUPDATEに対する肯定応答を受信する必要があります。通常の場合、肯定応答は、基礎となる更新メカニズムによって処理されます。"
    },
    {
      "indent": 0,
      "text": "6.10. Finalizing Rekeying",
      "section_title": true,
      "ja": "6.10。ファイナライズ鍵の再生成"
    },
    {
      "indent": 3,
      "text": "A system finalizes rekeying when it has both received the corresponding UPDATE acknowledgment packet from the peer and successfully received the peer's UPDATE. The following steps are taken:",
      "ja": "それは、両方のピアから対応する更新確認応答パケットを受信し、正常にピアのUPDATEを受信したときに、システムは、キー更新を確定します。以下のステップがとられます："
    },
    {
      "indent": 3,
      "text": "1. If the received UPDATE messages contain a new Diffie-Hellman key, the system has a new Diffie-Hellman key due to initiating an ESP SA update, or both, the system generates a new KEYMAT. If there is only one new Diffie-Hellman key, the old existing key is used as the other key.",
      "ja": "1.受信したUPDATEメッセージは、新しいDiffie-Hellmanキーが含まれている場合、システムが原因ESP SAの更新を開始する、またはその両方に新しいDiffie-Hellman鍵を持って、システムが新しいKEYMATを生成します。一つだけ新しいDiffie-Hellmanキーがある場合は、古い既存のキーは他のキーとして使用されます。"
    },
    {
      "indent": 3,
      "text": "2. If the system generated a new KEYMAT in the previous step, it sets the KEYMAT Index to zero, independent of whether the received UPDATE included a Diffie-Hellman key or not. If the system did not generate a new KEYMAT, it uses the greater KEYMAT Index of the two (sent and received) ESP_INFO parameters.",
      "ja": "2.システムが前のステップで新しいKEYMATを生成した場合、受信したUPDATEがのDiffie-Hellmanキーを含めるか否かとは無関係に、ゼロにKEYMATランキングを設定します。システムが新しいKEYMATが生成されなかった場合、それは2つ（送受信された）ESP_INFOパラメータの大きなKEYMATインデックスを使用しています。"
    },
    {
      "indent": 3,
      "text": "3. The system draws keys for new incoming and outgoing ESP SAs, starting from the KEYMAT Index, and prepares new incoming and outgoing ESP SAs. The SPI for the outgoing SA is the new SPI value received in an ESP_INFO parameter. The SPI for the incoming SA was generated when the ESP_INFO was sent to the peer. The order of the keys retrieved from the KEYMAT during the rekeying process is similar to that described in Section 7. Note that only IPsec ESP keys are retrieved during the rekeying process, not the HIP keys.",
      "ja": "3.システムがKEYMATインデックスから始まる、新しい着信と発信ESP SAの鍵を描画し、新しい着信と発信ESP SAを準備します。送信SAのSPIはESP_INFOパラメータで受信した新しいSPI値です。 ESP_INFOがピアに送信されたときに、着信SAのSPIを生成しました。リキー処理中KEYMATから検索キーの順序のみのIPsec ESPキーがリキー処理ではなく、HIPキーの間に取得されることを第7ノートに記載されたものと同様です。"
    },
    {
      "indent": 3,
      "text": "4. The system starts to send to the new outgoing SA and prepares to start receiving data on the new incoming SA. Once the system receives data on the new incoming SA, it may safely delete the old SAs.",
      "ja": "4.システムは、新しい、発信SAに送信を開始し、新しい着信SA上のデータの受信を開始する準備をします。システムは新しい着信SA上のデータを受信すると、それが安全に、古いSAを削除することができます。"
    },
    {
      "indent": 0,
      "text": "6.11. Processing NOTIFY Packets",
      "section_title": true,
      "ja": "6.11。 NOTIFYパケットの処理"
    },
    {
      "indent": 3,
      "text": "The processing of NOTIFY packets is described in the HIP base specification.",
      "ja": "NOTIFYパケットの処理は、HIPベース明細書に記載されています。"
    },
    {
      "indent": 0,
      "text": "7. Keying Material",
      "section_title": true,
      "ja": "7.鍵材料"
    },
    {
      "indent": 3,
      "text": "The keying material is generated as described in the HIP base specification. During the base exchange, the initial keys are drawn from the generated material. After the HIP association keys have been drawn, the ESP keys are drawn in the following order:",
      "ja": "HIP基本仕様に記載されているようにキーイング材料が生成されます。塩基交換の際に、最初のキーが生成された材料から引き出されます。 HIP協会キーが描かれた後に、ESPのキーは、次の順序で描画されています。"
    },
    {
      "indent": 6,
      "text": "SA-gl ESP encryption key for HOST_g's outgoing traffic",
      "ja": "HOST_gの発信トラフィックのためのSA-GL ESP暗号化キー"
    },
    {
      "indent": 6,
      "text": "SA-gl ESP authentication key for HOST_g's outgoing traffic",
      "ja": "HOST_gの発信トラフィックのためのSA-GL ESP認証キー"
    },
    {
      "indent": 6,
      "text": "SA-lg ESP encryption key for HOST_l's outgoing traffic",
      "ja": "HOST_lの発信トラフィックのためのSA-LG ESP暗号化キー"
    },
    {
      "indent": 6,
      "text": "SA-lg ESP authentication key for HOST_l's outgoing traffic",
      "ja": "HOST_lの発信トラフィックのためのSA-LG ESP認証キー"
    },
    {
      "indent": 3,
      "text": "HOST_g denotes the host with the greater HIT value, and HOST_l denotes the host with the lower HIT value. When HIT values are compared, they are interpreted as positive (unsigned) 128-bit integers in network byte order.",
      "ja": "HOST_gが大きくHIT値を持つホストを示し、HOST_lは低いHIT値を持つホストを表します。 HIT値を比較すると、それらはネットワークバイト順に、正（符号なし）128ビット整数として解釈されます。"
    },
    {
      "indent": 3,
      "text": "The four HIP keys are only drawn from KEYMAT during a HIP I1->R2 exchange. Subsequent rekeys using UPDATE will only draw the four ESP keys from KEYMAT. Section 6.9 describes the rules for reusing or regenerating KEYMAT based on the rekeying.",
      "ja": "4つのHIPキーのみHIP I1-> R2交換中KEYMATから引き出されます。 UPDATEを使用して、その後のキー更新が唯一KEYMATから4つのESPキーを描画します。 6.9節は、再利用や再入力に基づいてKEYMATを再生するためのルールを説明しています。"
    },
    {
      "indent": 3,
      "text": "The number of bits drawn for a given algorithm is the \"natural\" size of the keys, as specified in Section 6.5 of [RFC7401].",
      "ja": "[RFC7401]のセクション6.5で指定されるように指定されたアルゴリズムで描かれたビットの数は、キーの「自然な」サイズです。"
    },
    {
      "indent": 0,
      "text": "8. Security Considerations",
      "section_title": true,
      "ja": "8.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "In this document, the usage of ESP [RFC4303] between HIP hosts to protect data traffic is introduced. The security considerations for ESP are discussed in the ESP specification.",
      "ja": "この文書では、HIPの間ESP [RFC4303]の使用量は、トラフィックが導入されたデータを保護するホスト。 ESPのためのセキュリティの考慮事項は、ESPの仕様で説明されています。"
    },
    {
      "indent": 3,
      "text": "There are different ways to establish an ESP Security Association between two nodes. This can be done, e.g., using IKE [RFC7296]. This document specifies how the Host Identity Protocol is used to establish ESP Security Associations.",
      "ja": "2つのノード間でESPセキュリティアソシエーションを確立するために、さまざまな方法があります。これは、IKE [RFC7296]を使用して、例えば、行うことができます。この文書では、ホストアイデンティティプロトコルはESPセキュリティアソシエーションを確立するために使用される方法を指定します。"
    },
    {
      "indent": 3,
      "text": "The following issues are new or have changed from the standard ESP usage:",
      "ja": "次の問題は、新しいされているか、または標準ESPの使用状況から変更されました："
    },
    {
      "indent": 3,
      "text": "o Initial keying material generation",
      "ja": "O初期鍵材料世代"
    },
    {
      "indent": 3,
      "text": "o Updating the keying material",
      "ja": "鍵素材を更新するO"
    },
    {
      "indent": 3,
      "text": "The initial keying material is generated using the Host Identity Protocol [RFC7401] using the Diffie-Hellman procedure. This document extends the usage of the UPDATE packet, defined in the base specification, to modify existing ESP SAs. The hosts may rekey, i.e., force the generation of new keying material using the Diffie-Hellman procedure. The initial setup of ESP SAs between the hosts is done during the base exchange, and the message exchange is protected using methods provided by the base exchange. Changes in connection parameters basically mean that the old ESP SA is removed and a new one is generated once the UPDATE message exchange has been completed. The message exchange is protected using the HIP association keys. Both HMAC and signing of packets are used.",
      "ja": "初期鍵材料は、ディフィー - ヘルマン・プロシージャを使用してホストアイデンティティプロトコル[RFC7401]を使用して生成されます。この文書では、既存のESP SAを変更するために、基本仕様で定義され、UPDATEパケットの使用を拡張します。ホストは、すなわち、リキーのDiffie-Hellman手順を使用して、新しいキーイングマテリアルの生成を強制することができます。ホスト間ESP SAの初期設定は、基本交換の間に行われ、メッセージ交換は、塩基交換によって提供される方法を使用して保護されています。接続パラメータの変更は、基本的には、UPDATEメッセージの交換が完了した後に、古いESP SAが削除され、新しいものが生成されていることを意味します。メッセージ交換は、HIP関連キーを使用して保護されています。 HMACとパケットの署名の両方が使用されています。"
    },
    {
      "indent": 0,
      "text": "9. IANA Considerations",
      "section_title": true,
      "ja": "9. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "The following changes to the \"Host Identity Protocol (HIP) Parameters\" registries have been made. In all cases, the changes updated the reference from [RFC5202] to this specification.",
      "ja": "「ホストアイデンティティプロトコル（HIP）パラメータ」レジストリに以下の変更が行われました。全ての場合において、変更は、本明細書に[RFC5202]から参照を更新します。"
    },
    {
      "indent": 3,
      "text": "This document defines two Parameter Types and two NOTIFY Message Types for the Host Identity Protocol [RFC7401].",
      "ja": "この文書では、2つのパラメータの種類を定義し、2はホスト識別プロトコル[RFC7401]のためのメッセージタイプを通知します。"
    },
    {
      "indent": 3,
      "text": "The parameters and their type numbers are defined in Sections 5.1.1 and 5.1.2, and they have been added to the \"Parameter Types\" namespace created by [RFC7401]. No new action regarding these values is required by this specification, other than updating the reference from [RFC5202] to this specification.",
      "ja": "パラメータとその種類数は、セクション5.1.1と5.1.2で定義されている、と彼らは[RFC7401]で作成された「パラメータタイプ」名前空間に追加されました。これらの値についての新たなアクションは、本明細書に[RFC5202]から参照を更新する以外、本明細書によって必要とされません。"
    },
    {
      "indent": 3,
      "text": "The new NOTIFICATION error types and their values are defined in Section 5.1.3, and they have been added to the \"Notify Message Types\" namespace created by [RFC7401]. No new action regarding these values is required by this specification, other than updating the reference from [RFC5202] to this specification.",
      "ja": "新しい通知エラーの種類とその値は、5.1.3項で定義されている、と彼らは[RFC7401]で作成された「NOTIFYメッセージタイプ」名前空間に追加されました。これらの値についての新たなアクションは、本明細書に[RFC5202]から参照を更新する以外、本明細書によって必要とされません。"
    },
    {
      "indent": 3,
      "text": "Section 5.1.2 of this document defines values for \"ESP Transform Suite IDs\", which are registered in a new IANA registry, with an \"IETF Review\" registration procedure [RFC5226] for new values.",
      "ja": "このドキュメントのセクション5.1.2には、新しい値については、「IETFレビュー」登録手続き[RFC5226]で新しいIANAレジストリに登録されている「ESPトランスフォームスイートのID」、の値を定義します。"
    },
    {
      "indent": 0,
      "text": "10. References",
      "section_title": true,
      "ja": "10.参考文献"
    },
    {
      "indent": 0,
      "text": "10.1. Normative References",
      "section_title": true,
      "ja": "10.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997, <http://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月、<http://www.rfc-editor.org/info/rfc2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC2404] Madson, C. and R. Glenn, \"The Use of HMAC-SHA-1-96 within ESP and AH\", RFC 2404, November 1998, <http://www.rfc-editor.org/info/rfc2404>.",
      "ja": "[RFC2404] Madson、C.およびR.グレン、 \"ESPおよびAH内HMAC-SHA-1-96の使用\"、RFC 2404、1998年11月、<http://www.rfc-editor.org/info/ rfc2404>。"
    },
    {
      "indent": 3,
      "text": "[RFC2410] Glenn, R. and S. Kent, \"The NULL Encryption Algorithm and Its Use With IPsec\", RFC 2410, November 1998, <http://www.rfc-editor.org/info/rfc2410>.",
      "ja": "[RFC2410]グレン、R.とS.ケント、 \"NULL暗号化アルゴリズムとIPsecでの使用\"、RFC 2410、1998年11月、<http://www.rfc-editor.org/info/rfc2410>。"
    },
    {
      "indent": 3,
      "text": "[RFC3602] Frankel, S., Glenn, R., and S. Kelly, \"The AES-CBC Cipher Algorithm and Its Use with IPsec\", RFC 3602, September 2003, <http://www.rfc-editor.org/info/rfc3602>.",
      "ja": "[RFC3602]フランケル、S.、グレン、R.、およびS.ケリー、 \"AES-CBC暗号アルゴリズムおよびIPSecでの使用\"、RFC 3602、2003年9月、<http://www.rfc-editor.org /情報/ rfc3602>。"
    },
    {
      "indent": 3,
      "text": "[RFC4106] Viega, J. and D. McGrew, \"The Use of Galois/Counter Mode (GCM) in IPsec Encapsulating Security Payload (ESP)\", RFC 4106, June 2005, <http://www.rfc-editor.org/ info/rfc4106>.",
      "ja": "[RFC4106] Viega、J.とD.マグリュー、 \"IPsecのカプセル化セキュリティペイロード（ESP）におけるガロア/カウンタモード（GCM）の使用\"、RFC 4106、2005年6月、<のhttp：//www.rfc-editor。組織/情報/ rfc4106>。"
    },
    {
      "indent": 3,
      "text": "[RFC4303] Kent, S., \"IP Encapsulating Security Payload (ESP)\", RFC 4303, December 2005, <http://www.rfc-editor.org/ info/rfc4303>.",
      "ja": "[RFC4303]ケント、S.、 \"IPカプセル化セキュリティペイロード（ESP）\"、RFC 4303、2005年12月、<http://www.rfc-editor.org/情報/ RFC4303>。"
    },
    {
      "indent": 3,
      "text": "[RFC4309] Housley, R., \"Using Advanced Encryption Standard (AES) CCM Mode with IPsec Encapsulating Security Payload (ESP)\", RFC 4309, December 2005, <http://www.rfc-editor.org/ info/rfc4309>.",
      "ja": "[RFC4309] Housley氏、R.、 \"IPsecのカプセル化セキュリティペイロード（ESP）でのAdvanced Encryption Standard（AES）CCMモードを使用した\"、RFC 4309、2005年12月、<http://www.rfc-editor.org/情報/ rfc4309 >。"
    },
    {
      "indent": 3,
      "text": "[RFC4493] Song, JH., Poovendran, R., Lee, J., and T. Iwata, \"The AES-CMAC Algorithm\", RFC 4493, June 2006, <http://www.rfc-editor.org/info/rfc4493>.",
      "ja": "[RFC4493]歌、JH。、Poovendran、R.、リー、J.、およびT.磐田、 \"AES-CMACアルゴリズム\"、RFC 4493、2006年6月、<http://www.rfc-editor.org/情報/ rfc4493>。"
    },
    {
      "indent": 3,
      "text": "[RFC4494] Song, JH., Poovendran, R., and J. Lee, \"The AES-CMAC-96 Algorithm and Its Use with IPsec\", RFC 4494, June 2006, <http://www.rfc-editor.org/info/rfc4494>.",
      "ja": "[RFC4494]ソング、JH、Poovendran、R.、およびJ.リー、 \"AES-CMAC-96アルゴリズムとIPsecでの使用\"、RFC 4494、2006年6月、<のhttp：。//www.rfc-editor。組織/情報/ rfc4494>。"
    },
    {
      "indent": 3,
      "text": "[RFC4543] McGrew, D. and J. Viega, \"The Use of Galois Message Authentication Code (GMAC) in IPsec ESP and AH\", RFC 4543, May 2006, <http://www.rfc-editor.org/info/rfc4543>.",
      "ja": "[RFC4543]マグリュー、D.とJ. Viega、 \"IPsecのESPとAHでガロアメッセージ認証コード（GMAC）の使用\"、RFC 4543、2006年5月、<http://www.rfc-editor.org/info / rfc4543>。"
    },
    {
      "indent": 3,
      "text": "[RFC4868] Kelly, S. and S. Frankel, \"Using HMAC-SHA-256, HMAC-SHA-384, and HMAC-SHA-512 with IPsec\", RFC 4868, May 2007, <http://www.rfc-editor.org/info/rfc4868>.",
      "ja": "[RFC4868]ケリー、S.とS.フランケル、 \"HMAC-SHA-256を使用して、HMAC-SHA-384、およびIPSecとHMAC-SHA-512\"、RFC 4868、2007年5月、<のhttp：//www.rfc -editor.org/info/rfc4868>。"
    },
    {
      "indent": 3,
      "text": "[RFC7401] Moskowitz, R., Ed., Heer, T., Jokela, P., and T. Henderson, \"Host Identity Protocol Version 2 (HIPv2)\", RFC 7401, April 2015, <http://www.rfc-editor.org/ info/rfc7401>.",
      "ja": "[RFC7401]モスコウィッツ、R.、エド、Heerさん、T.、Jokela、P.、およびT.ヘンダーソン、 \"ホストアイデンティティプロトコルバージョン2（HIPv2）\"、RFC 7401、2015年4月、<HTTP：// WWW。 rfc-editor.org/情報/ rfc7401>。"
    },
    {
      "indent": 0,
      "text": "10.2. Informative References",
      "section_title": true,
      "ja": "10.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[HIP-ARCH] Moskowitz, R., Ed., and M. Komu, \"Host Identity Protocol Architecture\", Work in Progress, draft-ietf-hip-rfc4423-bis-09, October 2014.",
      "ja": "[HIP-ARCH]モスコウィッツ、R.、エド。、およびM.こむ、 \"ホストアイデンティティプロトコルアーキテクチャ\" が進行中で働いて、ドラフト-IETF-ヒップrfc4423  - ビス -  09、2014年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC0791] Postel, J., \"Internet Protocol\", STD 5, RFC 791, September 1981, <http://www.rfc-editor.org/info/rfc791>.",
      "ja": "[RFC0791]ポステル、J.、 \"インターネットプロトコル\"、STD 5、RFC 791、1981年9月、<http://www.rfc-editor.org/info/rfc791>。"
    },
    {
      "indent": 3,
      "text": "[RFC4301] Kent, S. and K. Seo, \"Security Architecture for the Internet Protocol\", RFC 4301, December 2005, <http://www.rfc-editor.org/info/rfc4301>.",
      "ja": "[RFC4301]ケント、S.とK. Seo、 \"インターネットプロトコルのためのセキュリティアーキテクチャ\"、RFC 4301、2005年12月、<http://www.rfc-editor.org/info/rfc4301>。"
    },
    {
      "indent": 3,
      "text": "[RFC5202] Jokela, P., Moskowitz, R., and P. Nikander, \"Using the Encapsulating Security Payload (ESP) Transport Format with the Host Identity Protocol (HIP)\", RFC 5202, April 2008, <http://www.rfc-editor.org/info/rfc5202>.",
      "ja": "[RFC5202] Jokela、P.、モスコウィッツ、R.、およびP. Nikander、RFC 5202 \"ホスト識別プロトコル（HIP）とカプセル化セキュリティペイロード（ESP）トランスポートフォーマットの使用\" を、2008年4月、<のhttp：// www.rfc-editor.org/info/rfc5202>。"
    },
    {
      "indent": 3,
      "text": "[RFC5206] Nikander, P., Henderson, T., Vogt, C., and J. Arkko, \"End-Host Mobility and Multihoming with the Host Identity Protocol\", RFC 5206, April 2008, <http://www.rfc-editor.org/info/rfc5206>.",
      "ja": "[RFC5206] Nikander、P.、ヘンダーソン、T.、フォークト、C.、およびJ. Arkko、 \"ホストアイデンティティプロトコルとエンドホストモビリティとマルチホーミング\"、RFC 5206、2008年4月、<のhttp：// WWW。 rfc-editor.org/info/rfc5206>。"
    },
    {
      "indent": 3,
      "text": "[RFC5207] Stiemerling, M., Quittek, J., and L. Eggert, \"NAT and Firewall Traversal Issues of Host Identity Protocol (HIP) Communication\", RFC 5207, April 2008, <http://www.rfc-editor.org/info/rfc5207>.",
      "ja": "[RFC5207] Stiemerling、M.、Quittek、J.、およびL.エッゲルト、 \"NATやファイアウォール越えの問題ホストの識別プロトコル（HIP）コミュニケーション\"、RFC 5207、2008年4月、<のhttp：//www.rfc-editor .ORG /情報/ rfc5207>。"
    },
    {
      "indent": 3,
      "text": "[RFC5226] Narten, T. and H. Alvestrand, \"Guidelines for Writing an IANA Considerations Section in RFCs\", BCP 26, RFC 5226, May 2008, <http://www.rfc-editor.org/info/rfc5226>.",
      "ja": "[RFC5226] Narten氏、T.とH. Alvestrand、 \"RFCsにIANA問題部に書くためのガイドライン\"、BCP 26、RFC 5226、2008年5月、<http://www.rfc-editor.org/info/rfc5226> 。"
    },
    {
      "indent": 3,
      "text": "[RFC5770] Komu, M., Henderson, T., Tschofenig, H., Melen, J., and A. Keranen, \"Basic Host Identity Protocol (HIP) Extensions for Traversal of Network Address Translators\", RFC 5770, April 2010, <http://www.rfc-editor.org/info/rfc5770>.",
      "ja": "[RFC5770]こむ、M.、ヘンダーソン、T.、Tschofenig、H.、メレン、J.、およびA. Keranen、 \"基本的なホストアイデンティティプロトコル（HIP）ネットワークのトラバーサルのための拡張が翻訳をアドレス\"、RFC 5770、2010年4月、<http://www.rfc-editor.org/info/rfc5770>。"
    },
    {
      "indent": 3,
      "text": "[RFC7296] Kaufman, C., Hoffman, P., Nir, Y., Eronen, P., and T. Kivinen, \"Internet Key Exchange Protocol Version 2 (IKEv2)\", STD 79, RFC 7296, October 2014, <http://www.rfc-editor.org/info/rfc7296>.",
      "ja": "[RFC7296]カウフマン、C.、ホフマン、P.、ニール、Y.、Eronen、P.、およびT. Kivinen、 \"インターネット鍵交換プロトコルバージョン2（IKEv2の）\"、STD 79、RFC 7296、2014年10月、< http://www.rfc-editor.org/info/rfc7296>。"
    },
    {
      "indent": 0,
      "text": "Appendix A. A Note on Implementation Options",
      "ja": "インプリメンテーションオプションの付録A. A注"
    },
    {
      "indent": 3,
      "text": "It is possible to implement this specification in multiple different ways. As noted above, one possible way of implementing this is to rewrite IP headers below IPsec. In such an implementation, IPsec is used as if it was processing IPv6 transport mode packets, with the IPv6 header containing HITs instead of IP addresses in the source and destination address fields. In outgoing packets, after IPsec processing, the HITs are replaced with actual IP addresses, based on the HITs and the SPI. In incoming packets, before IPsec processing, the IP addresses are replaced with HITs, based on the SPI in the incoming packet. In such an implementation, all IPsec policies are based on HITs and the upper layers only see packets with HITs in the place of IP addresses. Consequently, support of HIP does not conflict with other uses of IPsec as long as the SPI spaces are kept separate. Appendix B describes another way to implement this specification.",
      "ja": "複数の異なる方法でこの仕様を実装することが可能です。上述したように、これを実現する1つの可能な方法は、IPsec以下のIPヘッダを書き換えることです。それはヒットの代わりに、送信元および宛先アドレスフィールド内のIPアドレスを含むIPv6ヘッダと、IPv6の転送モードパケットを処理したかのようにそのような実装では、IPsecが使用されます。発信パケットでは、IPsec処理の後、ヒットはヒットとSPIに基づいて、実際のIPアドレスに置き換えられます。着信パケットには、IPsec処理の前に、IPアドレスは、着信パケット内のSPIに基づいて、ヒットに置き換えられます。このような実装では、すべてのIPsecポリシーがヒットに基づいており、上位層は、IPアドレスの代わりにヒットを持つパケットを参照してください。その結果、HIPのサポートがあれば、SPIスペースが別々に保持されているようにIPsecの他の用途と競合しません。付録Bはこの仕様を実装するための別の方法を説明します。"
    },
    {
      "indent": 0,
      "text": "Appendix B. Bound End-to-End Tunnel Mode for ESP",
      "ja": "ESPのためのエンドツーエンドトンネルモードバウンド付録B."
    },
    {
      "indent": 3,
      "text": "This section introduces an alternative way of implementing the necessary functions for HIP ESP transport. Compared to the option of implementing the required address rewrites outside of IPsec, BEET has one implementation-level benefit. In a BEET-mode-based implementation, the address-rewriting information is kept in one place, at the SAD. On the other hand, when address rewriting is implemented separately, the implementation MUST make sure that the information in the SAD and the information in the separate address-rewriting database are kept in synchrony. As a result, the BEET-mode-based way of implementing this specification is RECOMMENDED over the separate implementation, as it binds the identities, encryption, and locators tightly together. It should be noted that implementing BEET mode doesn't require that corresponding hosts implement it, as the behavior is only visible internally in a host.",
      "ja": "このセクションでは、HIP ESPの輸送のために必要な機能を実現するための別の方法を紹介します。 IPsecの外の必要なアドレスの書き換えを実施するためのオプションに比べ、ビートは、一実装レベルの利点を有しています。 BEETモードベースの実装では、アドレス書き換え情報はSADで、一つの場所に保管されています。アドレス書き換えが別々に実装されている場合一方、実装はSADと別のアドレス書き換えデータベース内の情報の情報が同期して保持されていることを確認する必要があります。それはしっかりと一緒にアイデンティティ、暗号化、およびロケータをバインドする結果として、この仕様を実装するのBEETモードベースの方法は、個別の実装上で推奨されます。 BEETモードを実装する行動が内部ホストにのみ表示され、対応するホストは、それを実装することを必要としないことに留意すべきです。"
    },
    {
      "indent": 3,
      "text": "BEET mode is a combination of IPsec tunnel and transport modes, and it provides some of the features from both. HIP uses HITs as the \"inner\" addresses and IP addresses as \"outer\" addresses, like IP addresses are used in tunnel mode. Instead of tunneling packets between hosts, a conversion between inner and outer addresses is made at end hosts, and the inner address is never sent on the wire after the initial HIP negotiation. BEET provides IPsec transport mode syntax (no inner headers) with limited tunnel mode semantics (fixed logical inner addresses -- the HITs -- and changeable outer IP addresses).",
      "ja": "ビートモードは、IPsecトンネルとトランスポートモードの組み合わせであり、両方の機能のいくつかを提供します。 IPアドレスがトンネルモードで使用されるようなHIPは、「外側」アドレスと「内側」アドレスとIPアドレスとしてヒットを使用します。代わりに、ホスト間のトンネルパケットの内側と外側のアドレス間の変換は、エンドホストで行われ、そして内部アドレスが初期HIPネゴシエーション後にワイヤ上で送信されることはありません。 BEETは、限られたトンネルモードセマンティクス（ -  HITS  - 及び可変外側IPアドレス固定論理内アドレス）とのIPsecトランスポート・モード・シンタックス（NO内部ヘッダ）を提供します。"
    },
    {
      "indent": 0,
      "text": "B.1. Protocol Definition",
      "ja": "B.1。プロトコル定義"
    },
    {
      "indent": 3,
      "text": "In this section, we define the exact protocol formats and operations.",
      "ja": "このセクションでは、我々は、正確なプロトコルフォーマットと操作を定義します。"
    },
    {
      "indent": 0,
      "text": "B.1.1. Changes to Security Association Data Structures",
      "ja": "B.1.1。セキュリティアソシエーションデータ構造の変更"
    },
    {
      "indent": 3,
      "text": "A BEET mode Security Association contains the same data as a regular tunnel mode Security Association, with the exception that the inner selectors must be single addresses and cannot be subnets. The data includes the following:",
      "ja": "BEETモードセキュリティアソシエーションは、内部セレクタが単一のアドレスでなければならず、サブネットことができないことを除いて、通常のトンネルモードセキュリティアソシエーションと同じデータが含まれています。データには次のものが含まれます。"
    },
    {
      "indent": 3,
      "text": "o A pair of inner IP addresses.",
      "ja": "O内部IPアドレスのペア。"
    },
    {
      "indent": 3,
      "text": "o A pair of outer IP addresses.",
      "ja": "O外部IPアドレスのペア。"
    },
    {
      "indent": 3,
      "text": "o Cryptographic keys and other data as defined in Section 4.4.2 of RFC 4301 [RFC4301].",
      "ja": "暗号鍵及びその他のデータO RFC 4301 [RFC4301]のセクション4.4.2で定義された通りです。"
    },
    {
      "indent": 3,
      "text": "A conforming implementation MAY store the data in a way similar to a regular tunnel mode Security Association.",
      "ja": "準拠した実装では、通常のトンネルモードセキュリティ協会と同様にデータを格納することができます。"
    },
    {
      "indent": 3,
      "text": "Note that in a conforming implementation the inner and outer addresses MAY belong to different address families. All implementations that support both IPv4 and IPv6 SHOULD support both IPv4-over-IPv6 and IPv6-over-IPv4 tunneling.",
      "ja": "準拠した実装では、内側と外側のアドレスが別のアドレスファミリに属していてもよいことに注意してください。 IPv4とIPv6の両方をサポートするすべての実装は、IPv4オーバーのIPv6およびIPv6オーバーIPv4トンネリングの両方をサポートする必要があります。"
    },
    {
      "indent": 0,
      "text": "B.1.2. Packet Format",
      "ja": "B.1.2。パケットフォーマット"
    },
    {
      "indent": 3,
      "text": "The wire packet format is identical to the ESP transport mode wire format as defined in Section 3.1.1 of [RFC4303]. However, the resulting packet contains outer IP addresses instead of the inner IP addresses received from the upper layer. The construction of the outer headers is defined in Section 5.1.2 of RFC 4301 [RFC4301]. The following diagram illustrates ESP BEET mode positioning for typical IPv4 and IPv6 packets.",
      "ja": "[RFC4303]のセクション3.1.1で定義されたように、ワイヤパケットフォーマットは、ESPトランスポートモードのワイヤフォーマットと同一です。しかし、得られたパケットは、外側IPアドレスの代わりに、上位層から受信した内部IPアドレスを含みます。アウターヘッダの構成は、RFC 4301のセクション5.1.2 [RFC4301]で定義されています。以下の図は、典型的なIPv4およびIPv6パケットのESPビートモードの位置決めを示します。"
    },
    {
      "indent": 3,
      "text": "IPv4 INNER ADDRESSES\n--------------------",
      "raw": true
    },
    {
      "indent": 4,
      "text": "     BEFORE APPLYING ESP\n------------------------------\n| inner IP hdr  |     |      |\n|               | TCP | Data |\n------------------------------",
      "raw": true
    },
    {
      "indent": 4,
      "text": "     AFTER APPLYING ESP, OUTER v4 ADDRESSES\n----------------------------------------------------\n| outer IP hdr  |     |     |      |   ESP   | ESP |\n| (any options) | ESP | TCP | Data | Trailer | ICV |\n----------------------------------------------------\n                      |<---- encryption ---->|\n                |<-------- integrity ------->|",
      "raw": true
    },
    {
      "indent": 4,
      "text": "     AFTER APPLYING ESP, OUTER v6 ADDRESSES\n------------------------------------------------------\n| outer  | new ext |     |     |      |  ESP   | ESP |\n| IP hdr | hdrs    | ESP | TCP | Data | Trailer| ICV |\n------------------------------------------------------\n                         |<--- encryption ---->|\n                   |<------- integrity ------->|",
      "raw": true
    },
    {
      "indent": 3,
      "text": "IPv4 INNER ADDRESSES with options\n---------------------------------",
      "raw": true
    },
    {
      "indent": 4,
      "text": "     BEFORE APPLYING ESP\n------------------------------\n| inner IP hdr  |     |      |\n|  + options    | TCP | Data |\n------------------------------",
      "raw": true
    },
    {
      "indent": 4,
      "text": "     AFTER APPLYING ESP, OUTER v4 ADDRESSES\n----------------------------------------------------------\n| outer IP hdr  |     |     |     |      |   ESP   | ESP |\n| (any options) | ESP | PH  | TCP | Data | Trailer | ICV |\n----------------------------------------------------------\n                      |<------- encryption ------->|\n                |<----------- integrity ---------->|",
      "raw": true
    },
    {
      "indent": 4,
      "text": "     AFTER APPLYING ESP, OUTER v6 ADDRESSES\n------------------------------------------------------------\n| outer  | new ext |     |     |     |      |  ESP   | ESP |\n| IP hdr | hdrs    | ESP | PH  | TCP | Data | Trailer| ICV |\n------------------------------------------------------------\n                         |<------ encryption ------->|\n                   |<---------- integrity ---------->|",
      "raw": true
    },
    {
      "indent": 31,
      "text": "PH Pseudo Header for IPv4 options",
      "ja": "IPv4オプション用PH疑似ヘッダー"
    },
    {
      "indent": 3,
      "text": "IPv6 INNER ADDRESSES\n--------------------",
      "raw": true
    },
    {
      "indent": 4,
      "text": "     BEFORE APPLYING ESP\n------------------------------------------\n|              |  ext hdrs  |     |      |\n| inner IP hdr | if present | TCP | Data |\n------------------------------------------",
      "raw": true
    },
    {
      "indent": 4,
      "text": "     AFTER APPLYING ESP, OUTER v6 ADDRESSES\n--------------------------------------------------------------\n| outer  | new ext |     | dest |     |      |  ESP    | ESP |\n| IP hdr | hdrs    | ESP | opts.| TCP | Data | Trailer | ICV |\n--------------------------------------------------------------\n                                |<---- encryption ---->|\n                            |<------- integrity ------>|",
      "raw": true
    },
    {
      "indent": 4,
      "text": "     AFTER APPLYING ESP, OUTER v4 ADDRESSES\n----------------------------------------------------\n| outer  |     | dest |     |      |  ESP    | ESP |\n| IP hdr | ESP | opts.| TCP | Data | Trailer | ICV |\n----------------------------------------------------\n               |<------- encryption -------->|\n         |<----------- integrity ----------->|",
      "raw": true
    },
    {
      "indent": 0,
      "text": "B.1.3. Cryptographic Processing",
      "ja": "B.1.3。暗号処理"
    },
    {
      "indent": 3,
      "text": "The outgoing packets MUST be protected exactly as in ESP transport mode [RFC4303]. That is, the upper-layer protocol packet is wrapped into an ESP header, encrypted, and authenticated exactly as if regular transport mode was used. The resulting ESP packet is subject to IP header processing as defined in Appendices B.1.4 and B.1.5. The incoming ESP protected messages are verified and decrypted exactly as if regular transport mode was used. The resulting cleartext packet is subject to IP header processing as defined in Appendices B.1.4 and B.1.6.",
      "ja": "発信パケットは正確にESPトランスポートモード[RFC4303]のように保護しなければなりません。すなわち、上位層プロトコルパケットは、ESPヘッダに包まれた暗号化され、定期的な転送モードが使用されたかのように正確に認証されています。付録B.1.4およびB.1.5で定義されるように、得られたESPパケットは、IPヘッダ処理の対象となります。入ってくるESP保護されたメッセージを確認し、定期的な輸送モードを使用したかのように正確に復号化されます。付録B.1.4およびB.1.6で定義されるように、得られた平文のパケットは、IPヘッダ処理の対象となります。"
    },
    {
      "indent": 0,
      "text": "B.1.4. IP Header Processing",
      "ja": "B.1.4。 IPヘッダの処理"
    },
    {
      "indent": 3,
      "text": "The biggest difference between BEET mode and the other two modes is in IP header processing. In the regular transport mode, the IP header is kept intact. In the regular tunnel mode, an outer IP header is created on output and discarded on input. In BEET mode, the IP header is replaced with another one on both input and output.",
      "ja": "ビートモードと他の2つのモード間の最大の違いは、IPヘッダ処理です。定期的な輸送モードでは、IPヘッダーはそのまま維持されます。正規トンネルモードでは、外側のIPヘッダが出力に作成され、入力時に廃棄します。ビートモードでは、IPヘッダーは、入力と出力の両方に別のものに置き換えられます。"
    },
    {
      "indent": 3,
      "text": "On the BEET mode output side, the IP header processing MUST first ensure that the IP addresses in the original IP header contain the inner addresses as specified in the SA. This MAY be ensured by proper policy processing, and it is possible that no checks are needed at the time of SA processing. Once the IP header has been verified to contain the right IP inner addresses, it is discarded. A new IP header is created, using the fields of the discarded inner header (except the IP addresses) to populate the fields of the new outer header. The IP addresses in the new header MUST be the outer tunnel addresses.",
      "ja": "ビートモードの出力側に、IPヘッダ処理は、第1のSAで指定されるように、元のIPヘッダ内のIPアドレスが内部アドレスが含まれていることを確実にしなければなりません。これは、適切なポリシー処理によって確保することができる、何のチェックはSA処理時に必要とされないことも可能です。 IPヘッダは右IP内部アドレスが含まれていることが確認されたら、それは破棄されます。新しいIPヘッダは新しい外部ヘッダのフィールドを設定するために（IPアドレスを除く）廃棄内部ヘッダのフィールドを使用して、作成されます。新しいヘッダ内のIPアドレスは、外側のトンネル・アドレスでなければなりません。"
    },
    {
      "indent": 3,
      "text": "On the input side, the received IP header is simply discarded. Since the packet has been decrypted and verified, no further checks are necessary. A new IP header corresponding to a BEET mode inner header is created, using the fields of the discarded outer header (except the IP addresses) to populate the fields of the new inner header. The IP addresses in the new header MUST be the inner addresses.",
      "ja": "入力側では、受信したIPヘッダが単に廃棄されます。パケットが復号化され、検証されているので、これ以上のチェックは必要ありません。ビートモードインナーヘッダに対応する新しいIPヘッダは新しい内部ヘッダのフィールドを設定するために（IPアドレスを除く）廃棄外部ヘッダのフィールドを使用して、作成されます。新しいヘッダー内のIPアドレスは、内部アドレスでなければなりません。"
    },
    {
      "indent": 3,
      "text": "As the outer header fields are used as a hint for creating the inner header, it must be noted that the inner header differs as compared to a tunnel mode inner header. In BEET mode, the inner header will have the Time to Live (TTL), Don't Fragment (DF) bit, and other option values from the outer header. The TTL, DF bit, and other option values of the inner header MUST be processed by the stack.",
      "ja": "外部ヘッダフィールドが内部ヘッダを作成するためのヒントとして使用されるように、内部ヘッダは、トンネルモード内部ヘッダと比較して異なることに注意しなければなりません。ビートモードでは、内部ヘッダは、外側ヘッダからではないフラグメント（DF）ビット、および他のオプション値を行い、生存時間（TTL）を有するであろう。 TTL、DFビット、内部ヘッダの他のオプションの値は、スタックによって処理されなければなりません。"
    },
    {
      "indent": 0,
      "text": "B.1.5. Handling of Outgoing Packets",
      "ja": "B.1.5。発信パケットの取り扱い"
    },
    {
      "indent": 3,
      "text": "The outgoing BEET mode packets are processed as follows:",
      "ja": "次のように出て行くBEETモードパケットが処理されます。"
    },
    {
      "indent": 3,
      "text": "1. The system MUST verify that the IP header contains the inner source and destination addresses, exactly as defined in the SA. This verification MAY be explicit, or it MAY be implicit, for example, as a result of prior policy processing. Note that in some implementations there may be no real IP header at this time but the source and destination addresses may be carried out of band. If the source address is still unassigned, it SHOULD be ensured that the designated inner source address would be selected at a later stage.",
      "ja": "1.システムは、IPヘッダがSAで定義されたとおりに、内部ソースアドレスと宛先アドレスが含まれていることを確認しなければなりません。この検証は、明示的であってもよいし、前のポリシー処理の結果として、例えば、暗黙的であるかもしれ。いくつかの実装形態では、この時点では実際のIPヘッダが存在しなくてもよいが、送信元アドレスと宛先アドレスは、帯域外で行うことができることに留意されたいです。送信元アドレスがまだ割り当てられていない場合は、指定された内側の送信元アドレスは後の段階で選択されることを保証されるべきです。"
    },
    {
      "indent": 3,
      "text": "2. The IP payload (the contents of the packet beyond the IP header) is wrapped into an ESP header as defined in Section 3.3 of [RFC4303].",
      "ja": "[RFC4303]のセクション3.3で定義されるように前記IPペイロード（IPヘッダーを超えてパケットの内容）がESPヘッダに包まれています。"
    },
    {
      "indent": 3,
      "text": "3. A new IP header is constructed, replacing the original one. The new IP header MUST contain the outer source and destination addresses, as defined in the SA. Note that in some implementations there may be no real IP header at this time but the source and destination addresses may be carried out of band.",
      "ja": "3.新しいIPヘッダは、元のものを置換する、構成されています。 SAで定義されている新しいIPヘッダは、外側の送信元アドレスと宛先アドレスを含まなければなりません。いくつかの実装形態では、この時点では実際のIPヘッダが存在しなくてもよいが、送信元アドレスと宛先アドレスは、帯域外で行うことができることに留意されたいです。"
    },
    {
      "indent": 7,
      "text": "In the case where the source address must be left unassigned, it\nSHOULD be ensured that the right source address is selected at a\nlater stage.  Other than the addresses, it is RECOMMENDED that\nthe new IP header copies the fields from the original IP header.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "4. If there are any IPv4 options in the original packet, it is RECOMMENDED that they are discarded. If the inner header contains one or more options that need to be transported between the tunnel endpoints, the sender MUST encapsulate the options as defined in Appendix B.1.7.",
      "ja": "4.任意のIPv4オプションは、元のパケットである場合、それらが破棄されることが推奨されます。インナーヘッダはトンネルエンドポイント間で転送される必要がある1つ以上のオプションが含まれている場合は、付録B.1.7で定義されるように、送信者は、オプションをカプセル化しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Instead of literally discarding the IP header and constructing a new one, a conforming implementation MAY simply replace the addresses in an existing header. However, if the RECOMMENDED feature of allowing the inner and outer addresses from different address families is used, this simple strategy does not work.",
      "ja": "代わりに、文字通りIPヘッダを破棄して新しいものを構築する、適合実装は、単純に既存のヘッダー内のアドレスを交換することができます。別のアドレスファミリからの内側と外側のアドレスを許可する推奨機能が使用されている場合は、この単純な戦略では動作しません。"
    },
    {
      "indent": 0,
      "text": "B.1.6. Handling of Incoming Packets",
      "ja": "B.1.6。着信パケットの取り扱い"
    },
    {
      "indent": 3,
      "text": "The incoming BEET mode packets are processed as follows:",
      "ja": "次のように入ってくるBEETモードパケットが処理されます。"
    },
    {
      "indent": 3,
      "text": "1. The system MUST verify and decrypt the incoming packet successfully, as defined in Section 3.4 of [RFC4303]. If the verification or decryption fails, the packet MUST be discarded.",
      "ja": "1.システムが確認し、[RFC4303]のセクション3.4で定義されるように、正常に受信パケットを復号化しなければなりません。検証または復号化に失敗した場合、パケットは捨てなければなりません。"
    },
    {
      "indent": 3,
      "text": "2. The original IP header is simply discarded, without any checks. Since the ESP verification succeeded, the packet can be safely assumed to have arrived from the right sender.",
      "ja": "2.元のIPヘッダは、単に任意のチェックせずに、廃棄されます。 ESP検証が成功したので、パケットは安全に右送信者から到着したと仮定することができます。"
    },
    {
      "indent": 3,
      "text": "3. A new IP header is constructed, replacing the original one. The new IP header MUST contain the inner source and destination addresses, as defined in the SA. If the sender has set the ESP Next Header field to 94 and included the pseudo header as described in Appendix B.1.7, the receiver MUST include the options after the constructed IP header. Note that in some implementations the real IP header may have already been discarded and the source and destination addresses are carried out of band. In such a case, the out-of-band addresses MUST be the inner addresses. Other than the addresses, it is RECOMMENDED that the new IP header copies the fields from the original IP header.",
      "ja": "3.新しいIPヘッダは、元のものを置換する、構成されています。 SAで定義されている新しいIPヘッダは、内部ソースアドレスと宛先アドレスを含まなければなりません。付録B.1.7に記載のように送信者が94にESP次ヘッダフィールドを設定し、疑似ヘッダを含んでいる場合、受信機は、構築IPヘッダの後にオプションを含まなければなりません。いくつかの実装形態では、実IPヘッダが既に廃棄されていてもよく、送信元アドレスと宛先アドレスをバンドから搬出されることに留意されたいです。このような場合には、アウトオブバンドアドレスは、内部アドレスでなければなりません。アドレス以外に、それは新しいIPヘッダをコピーし、元のIPヘッダからのフィールドことが推奨されます。"
    },
    {
      "indent": 3,
      "text": "Instead of literally discarding the IP header and constructing a new one, a conforming implementation MAY simply replace the addresses in an existing header. However, if the RECOMMENDED feature of allowing the inner and outer addresses from different address families is used, this simple strategy does not work.",
      "ja": "代わりに、文字通りIPヘッダを破棄して新しいものを構築する、適合実装は、単純に既存のヘッダー内のアドレスを交換することができます。別のアドレスファミリからの内側と外側のアドレスを許可する推奨機能が使用されている場合は、この単純な戦略では動作しません。"
    },
    {
      "indent": 0,
      "text": "B.1.7. Handling of IPv4 Options",
      "ja": "B.1.7。 IPv4のオプションの取扱い"
    },
    {
      "indent": 3,
      "text": "In BEET mode, if IPv4 options are transported inside the tunnel, the sender MUST include a pseudo header after the ESP header. The pseudo header indicates that IPv4 options from the original packet are to be applied to the packet on the input side.",
      "ja": "IPv4オプションがトンネル内に輸送されている場合ビートモードでは、送信側はESPヘッダの後疑似ヘッダを含まなければなりません。疑似ヘッダは、元のパケットからIPv4オプションは、入力側のパケットに適用されることを示しています。"
    },
    {
      "indent": 3,
      "text": "The sender MUST set the Next Header field in the ESP header to 94. The resulting pseudo header, including the IPv4 options, MUST be padded to an 8-octet boundary. The padding length is expressed in octets; valid padding lengths are 0 or 4 octets, as the original IPv4 options are already padded to a 4-octet boundary. The padding MUST be filled with No Operation (NOP) options as defined in Section 3.1 (\"Internet Header Format\") of [RFC0791] (\"Internet Protocol\"). The padding is added in front of the original options to ensure that the receiver is able to reconstruct the original IPv4 datagram. The Header Length field contains the length of the IPv4 options, and padding in 8-octet units.",
      "ja": "送信側は、8オクテット境界に埋め込む必要があり、IPv4のオプションを含む、94にESPヘッダをもたらす疑似ヘッダを次ヘッダフィールドを設定しなければなりません。パディング長は、オクテット単位で表されます。オリジナルのIPv4オプションが既に4オクテット境界に埋め込まれるように、有効なパディングの長さは、0又は4オクテットです。 [RFC0791]（「インターネットプロトコル」）の3.1節（「インターネットヘッダー形式」）で定義されたパディングは動作なし（NOP）オプションで埋めなければなりません。パディングは、受信機がオリジナルのIPv4データグラムを再構築することが可能であることを確実にするために、元のオプションの前に添加されます。ヘッダ長フィールドは、IPv4オプションの長さを含み、8オクテット単位でパディング。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Next Header  |   Header Len  |    Pad Len    |   Reserved    |\n+---------------+---------------+-------------------------------+\n|                       Padding (if needed)                     |\n+---------------------------------------------------------------+\n|                            IPv4 options ...                   |\n|                                                               |\n+---------------------------------------------------------------+",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Next Header identifies the data following this header. Length in octets 8-bit unsigned integer. Length of the pseudo header in 8-octet units, not including the first 8 octets.",
      "ja": "次のヘッダは、このヘッダに続くデータを識別する。オクテット8ビットの符号なし整数の長さ。最初の8つのオクテットを含まない8オクテット単位で擬似ヘッダの長さ。"
    },
    {
      "indent": 3,
      "text": "The receiver MUST remove this pseudo header and padding as a part of BEET processing, in order to reconstruct the original IPv4 datagram. The IPv4 options included in the pseudo header MUST be added after the reconstructed IPv4 (inner) header on the receiving side.",
      "ja": "受信機は、オリジナルのIPv4データグラムを再構成するために、ビート処理の一部として、この疑似ヘッダおよびパディングを削除する必要があります。疑似ヘッダに含まれるIPv4オプションは、受信側で再構成されたIPv4の（内側の）ヘッダの後に追加されなければなりません。"
    },
    {
      "indent": 0,
      "text": "Acknowledgments",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "This document was separated from the base Host Identity Protocol specification in the beginning of 2005. Since then, a number of people have contributed to the text by providing comments and modification proposals. The list of people includes Tom Henderson, Jeff Ahrenholz, Jan Melen, Jukka Ylitalo, and Miika Komu. Especially, the authors want to thank Pekka Nikander for his invaluable contributions to the document since the first draft version. The authors also want to thank Charlie Kaufman for reviewing the document with his eye on the usage of crypto algorithms.",
      "ja": "この文書は、それ以来、2005年の初めにベースホスト識別プロトコル仕様から分離し、人々の数は、コメントと修正案を提供することで、テキストに貢献してきました。人のリストはトム・ヘンダーソン、ジェフAhrenholz、ジャンメレン、ユッカYlitalo、およびMiikaこむが含まれています。特に、著者は最初のドラフトのバージョンから文書への彼の貴重な貢献のためペッカNikanderに感謝したいと思います。著者らはまた、暗号アルゴリズムの使用状況に彼の目を持つ文書をレビューするチャーリー・カウフマンに感謝したいと思います。"
    },
    {
      "indent": 3,
      "text": "Due to the history of this document, most of the ideas are inherited from the base Host Identity Protocol specification. Thus, the list of people in the Acknowledgments section of that specification is also valid for this document. Many people have given valuable feedback, and our apologies to anyone whose name is missing.",
      "ja": "これによって文書の歴史に、アイデアのほとんどはベースホストアイデンティティプロトコル仕様から継承されます。このように、その仕様の謝辞セクションの人々のリストには、このドキュメントに対して有効です。多くの人々が貴重なフィードバックを与えている、と誰もが名前に私たちの謝罪がありません。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Petri Jokela Ericsson Research NomadicLab JORVAS FIN-02420 Finland",
      "ja": "ペトリJokelaエリクソン研究NomadicLab JORVAS FIN-02420フィンランド"
    },
    {
      "indent": 3,
      "text": "Phone: +358 9 299 1 EMail: petri.jokela@nomadiclab.com",
      "ja": "電話：+358 9 299 1 Eメール：petri.jokela@nomadiclab.com"
    },
    {
      "indent": 3,
      "text": "Robert Moskowitz HTT Consulting Oak Park, MI United States",
      "ja": "ロバート・モスコウィッツHTTコンサルティングオークパーク、MI、米国"
    },
    {
      "indent": 3,
      "text": "EMail: rgm@labs.htt-consult.com",
      "ja": "メールアドレス：rgm@labs.htt-consult.com"
    },
    {
      "indent": 3,
      "text": "Jan Melen Ericsson Research NomadicLab JORVAS FIN-02420 Finland",
      "ja": "ジャンメレンエリクソン研究NomadicLab JORVAS FIN-02420フィンランド"
    },
    {
      "indent": 3,
      "text": "Phone: +358 9 299 1 EMail: jan.melen@nomadiclab.com",
      "ja": "電話：+358 9 299 1 Eメール：jan.melen@nomadiclab.com"
    }
  ]
}