{
  "title": {
    "text": "RFC 7815 - Minimal Internet Key Exchange Version 2 (IKEv2) Initiator Implementation",
    "ja": "RFC 7815 - 最小限のインターネット鍵交換バージョン2（IKEv2の）イニシエータの実装"
  },
  "number": 7815,
  "created_at": "2019-11-02 03:34:50.744773+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                        T. Kivinen\nRequest for Comments: 7815                                 INSIDE Secure\nCategory: Informational                                       March 2016\nISSN: 2070-1721",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Minimal Internet Key Exchange Version 2 (IKEv2) Initiator Implementation",
      "ja": "最小限のインターネット鍵交換バージョン2（IKEv2の）イニシエータの実装"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document describes a minimal initiator version of the Internet Key Exchange version 2 (IKEv2) protocol for constrained nodes. IKEv2 is a component of IPsec used for performing mutual authentication and establishing and maintaining Security Associations (SAs). IKEv2 includes several optional features, which are not needed in minimal implementations. This document describes what is required from the minimal implementation and also describes various optimizations that can be done. The protocol described here is interoperable with a full IKEv2 implementation using shared secret authentication (IKEv2 does not require the use of certificate authentication). This minimal initiator implementation can only talk to a full IKEv2 implementation acting as the responder; thus, two minimal initiator implementations cannot talk to each other.",
      "ja": "この文書では、制約ノードのためのインターネットキー交換バージョン2（IKEv2）プロトコルの最小限のイニシエータのバージョンについて説明します。 IKEv2の相互認証を実行し、確立し、セキュリティアソシエーション（SA）を維持するために使用されるのIPsecの構成要素です。 IKEv2のは、最小限の実装に必要とされていないいくつかのオプション機能を、含まれています。この文書では、最小の実装から何が必要かを説明しても行うことができ、さまざまな最適化を説明しています。ここで説明するプロトコルは、（IKEv2のは、証明書認証を使用する必要はありません）共有の秘密の認証を使用して完全なIKEv2の実装と相互運用可能です。この最小限のイニシエータの実装は、応答側としてのみ、フルのIKEv2実装の演技に話すことができます。したがって、2つの最小限のイニシエータの実装は、お互いに話をすることはできません。"
    },
    {
      "indent": 3,
      "text": "This document does not update or modify RFC 7296 but provides a more compact description of the minimal version of the protocol. If this document and RFC 7296 conflict, then RFC 7296 is the authoritative description.",
      "ja": "この文書は、更新またはRFC 7296を変更するが、プロトコルの最小バージョンのよりコンパクトな説明を提供しません。このドキュメントおよびRFC 7296が競合する場合は、RFC 7296には、権威の記述です。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for informational purposes.",
      "ja": "このドキュメントはインターネット標準化過程仕様ではありません。それは、情報提供の目的のために公開されています。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Not all documents approved by the IESG are a candidate for any level of Internet Standard; see Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。 IESGによって承認されていないすべての文書がインターネットStandardのどんなレベルの候補です。 RFC 5741のセクション2を参照してください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc7815.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc7815で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2016 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2016 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 3,
      "text": "This document may contain material from IETF Documents or IETF Contributions published or made publicly available before November 10, 2008. The person(s) controlling the copyright in some of this material may not have granted the IETF Trust the right to allow modifications of such material outside the IETF Standards Process. Without obtaining an adequate license from the person(s) controlling the copyright in such materials, this document may not be modified outside the IETF Standards Process, and derivative works of it may not be created outside the IETF Standards Process, except to format it for publication as an RFC or to translate it into languages other than English.",
      "ja": "この材料の一部がIETFトラストにこのような材料の変更を許可する権利を与えられていない可能性がありますにこの文書は、2008年、IETFドキュメントまたは11月10日以前に発行または公開さIETF貢献から著作権を支配する者（複数可）材料を含んでいてもよいですIETF標準化プロセスの外。そのような材料の著作権を管理者（単数または複数）から適切なライセンスを取得することなく、この文書は、IETF標準化過程の外側修正されないかもしれません、そして、それの派生物は、IETF標準化過程の外側に作成されない場合があり、それをフォーマットする以外出版RFCとして、英語以外の言語に翻訳します。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   4\n  1.1.  Use Cases . . . . . . . . . . . . . . . . . . . . . . . .   5\n2.  Exchanges . . . . . . . . . . . . . . . . . . . . . . . . . .   5\n  2.1.  Initial Exchange  . . . . . . . . . . . . . . . . . . . .   5\n  2.2.  Other Exchanges . . . . . . . . . . . . . . . . . . . . .  12\n  2.3.  Generating Keying Material  . . . . . . . . . . . . . . .  12\n3.  Conformance Requirements  . . . . . . . . . . . . . . . . . .  13\n4.  Implementation Status . . . . . . . . . . . . . . . . . . . .  14\n5.  Security Considerations . . . . . . . . . . . . . . . . . . .  14\n6.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  15\n  6.1.  Normative References  . . . . . . . . . . . . . . . . . .  15\n  6.2.  Informative References  . . . . . . . . . . . . . . . . .  15\nAppendix A.  Header and Payload Formats . . . . . . . . . . . . .  17\n  A.1.  The IKE Header  . . . . . . . . . . . . . . . . . . . . .  17\n  A.2.  Generic Payload Header  . . . . . . . . . . . . . . . . .  19\n  A.3.  Security Association Payload  . . . . . . . . . . . . . .  21\n    A.3.1.  Proposal Substructure . . . . . . . . . . . . . . . .  23\n    A.3.2.  Transform Substructure  . . . . . . . . . . . . . . .  24\n    A.3.3.  Valid Transform Types by Protocol . . . . . . . . . .  26\n    A.3.4.  Transform Attributes  . . . . . . . . . . . . . . . .  26\n  A.4.  Key Exchange Payload  . . . . . . . . . . . . . . . . . .  27\n  A.5.  Identification Payloads . . . . . . . . . . . . . . . . .  27\n  A.6.  Certificate Payload . . . . . . . . . . . . . . . . . . .  29\n  A.7.  Certificate Request Payload . . . . . . . . . . . . . . .  30\n  A.8.  Authentication Payload  . . . . . . . . . . . . . . . . .  31\n  A.9.  Nonce Payload . . . . . . . . . . . . . . . . . . . . . .  31\n  A.10. Notify Payload  . . . . . . . . . . . . . . . . . . . . .  32\n    A.10.1.  Notify Message Types . . . . . . . . . . . . . . . .  33\n  A.11. Traffic Selector Payload  . . . . . . . . . . . . . . . .  34\n    A.11.1.  Traffic Selector . . . . . . . . . . . . . . . . . .  36\n  A.12. Encrypted Payload . . . . . . . . . . . . . . . . . . . .  37\nAppendix B.  Useful Optional Features . . . . . . . . . . . . . .  39\n  B.1.  IKE SA Delete Notification  . . . . . . . . . . . . . . .  39\n  B.2.  Raw Public Keys . . . . . . . . . . . . . . . . . . . . .  40\nAcknowledgements  . . . . . . . . . . . . . . . . . . . . . . . .  41\nAuthor's Address  . . . . . . . . . . . . . . . . . . . . . . . .  41",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "The Internet Protocol Suite is increasingly used on small devices with severe constraints on power, memory, and processing resources. This document describes a minimal IKEv2 implementation designed for use on such constrained nodes that is interoperable with \"Internet Key Exchange Protocol Version 2 (IKEv2)\" [RFC7296].",
      "ja": "インターネットプロトコルスイートは、ますますパワー、メモリ、および処理リソースに厳しい制約を持つ小型のデバイスで使用されています。この文書は、「インターネット鍵交換プロトコルバージョン2（IKEv2の）」[RFC7296]との相互運用が可能であるように制約ノード上で使用するために設計された最小限のIKEv2実装について説明します。"
    },
    {
      "indent": 3,
      "text": "A minimal IKEv2 implementation only supports the initiator end of the protocol. It only supports the initial IKE_SA_INIT and IKE_AUTH exchanges and does not initiate any other exchanges. It also replies with an empty (or error) message to all incoming requests.",
      "ja": "最小限のIKEv2の実装では、唯一のプロトコルのイニシエータ側をサポートしています。それだけで、最初のIKE_SA_INIT及びIKE_AUTH交換をサポートしており、他の交換を開始しません。また、すべての着信要求に空（またはエラー）メッセージで応答します。"
    },
    {
      "indent": 3,
      "text": "This means that most of the optional features of IKEv2 are left out: NAT traversal, IKE SA rekey, Child SA rekey, multiple Child SAs, deleting Child / IKE SAs, Configuration payloads, Extensible Authentication Protocol (EAP) authentication, COOKIEs, etc.",
      "ja": "これは、IKEv2ののオプション機能のほとんどが省略されていることを意味：NATトラバーサル、IKE SAのリキー、子SAの再入力、複数の子供のSA、子供/ IKE SAを削除、設定ペイロード、拡張認証プロトコル（EAP）認証、クッキーなどを"
    },
    {
      "indent": 3,
      "text": "Some optimizations can be done because of the limited set of supported features, and this text should not be considered for generic IKEv2 implementations (for example, Message IDs can be done as specified because minimal implementation is only sending out an IKE_SA_INIT and IKE_AUTH request and not any other request).",
      "ja": "指定された最小限の実装だけIKE_SA_INIT及びIKE_AUTHリクエストを送信していないされているので（例えば、メッセージIDを行うことができますいくつかの最適化があるため、サポートされる機能の限られたセットで行うことができ、そしてこのテキストは、一般的なIKEv2の実装のために考慮すべきではありません他のリクエスト）。"
    },
    {
      "indent": 3,
      "text": "This document is intended to be standalone, meaning everything needed to implement IKEv2 is copied here except the description of the cryptographic algorithms. The IKEv2 specification has lots of background information and rationale that has been omitted from this document.",
      "ja": "この文書は、IKEv2のは、暗号アルゴリズムの記述を除き、ここにコピーされた実装するために必要なすべてのものを意味し、スタンドアロンすることを意図しています。 IKEv2の仕様は、このドキュメントから省略された背景情報や根拠の多くを持っています。"
    },
    {
      "indent": 3,
      "text": "Numerous additional numeric values from IANA registries have been omitted from this document; only those which are of interest for a minimal implementation are listed.",
      "ja": "IANAレジストリから多数の追加の数値は、本書から省略されています。最小限の実装に関心のあるものは、記載されています。"
    },
    {
      "indent": 3,
      "text": "The main body of this document describes how to use the shared secret authentication in IKEv2, as it is easiest to implement. In some cases, that is not enough, and Appendix B.2 describes how to use raw public keys instead of shared secret authentication.",
      "ja": "このドキュメントの本体は、それが実現するのが最も簡単ですとして、IKEv2の中で共有される秘密の認証を使用する方法について説明します。いくつかのケースでは、それは十分ではありません、そして付録B.2ではなく、共有秘密認証の生の公開鍵を使用する方法について説明します。"
    },
    {
      "indent": 3,
      "text": "For more information, check the full IKEv2 specification in [RFC7296] and [IKEV2IANA].",
      "ja": "詳細については、[IKEV2IANA] [RFC7296]でフルのIKEv2仕様を確認して。"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119]. The term \"Constrained Node\" is defined in \"Terminology for Constrained-Node Networks\" [RFC7228].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はあります[RFC2119]に記載されているように解釈されます。用語「制約ノード」は「拘束ノードのネットワークのための用語」[RFC7228]で定義されています。"
    },
    {
      "indent": 0,
      "text": "1.1. Use Cases",
      "section_title": true,
      "ja": "1.1。ユースケース"
    },
    {
      "indent": 3,
      "text": "One use case for this kind of minimal implementation is in small devices doing machine-to-machine communication. In such environments, the node initiating connections can be very small, and the other end of the communication channel is some kind of larger device.",
      "ja": "最小限の実装のこの種の一つのユースケースは、マシン・ツー・マシン通信を行う小型の装置です。そのような環境では、接続を開始するノードは非常に小さくすることができ、通信チャネルの他方の端部は、より大きなデバイスのいくつかの種類です。"
    },
    {
      "indent": 3,
      "text": "An example of the small initiating node could be a remote garage door opener device, i.e., a device having buttons that open and close a garage door and that connects to the home area network server over a wireless link.",
      "ja": "小開始ノードの例は、リモートガレージドア開閉装置とすることができ、すなわち、開いてガレージのドアを閉じ、それは無線リンクを介してホーム・エリア・ネットワーク・サーバに接続するボタンを有する装置。"
    },
    {
      "indent": 3,
      "text": "Another example of such a device is some kind of sensor device, for example, a room temperature sensor, which sends periodic temperature data to some centralized node.",
      "ja": "そのような装置の他の例は、いくつかの集中ノードに定期的に温度データを送信するセンサ装置、例えば、室内温度センサのいくつかの種類です。"
    },
    {
      "indent": 3,
      "text": "Those devices usually sleep for a long time and only wake up periodically or because of user interaction. The data transfer is always initiated from that sleeping node when they wake up; after they send packets, there might be ACKs or other packets coming back before they go back to sleep. If some data needs to be transferred from a server node to the small device, it can be implemented by polling, i.e., the small node periodically polls for the server to see if it, for example, has some configuration changes or similar. While the device is sleeping, it will not maintain the IKEv2 SA. That is, it will always create the IKEv2 SA again when it wakes up. This means there is no need to do liveness checks for the server, as after the device wakes up again, the minimal implementation will start from the beginning again.",
      "ja": "これらのデバイスは、通常、長時間眠るだけ定期的に、またはユーザーとの対話のために目を覚まします。彼らが目を覚ますときに、データ転送は常にその眠っているノードから開始されます。彼らは、パケットを送信した後、彼らがスリープ状態に戻る前に、戻ってくるのACKまたは他のパケットがあるかもしれません。一部のデータは、小型デバイスに、サーバノードから転送する必要がある場合、例えば、いくつかの設定の変更や類似を持っている場合、サーバが参照するために、すなわち、小さなノードは定期的にポーリングし、ポーリングすることによって実現することができます。デバイスがスリープしているが、それはIKEv2のSAを維持しません。つまり、目覚めたときに、それは常に再びのIKEv2 SAが作成されます、です。これは、デバイスが再び目覚めた後、最小限の実装は再び最初から開始しますと、サーバーのための活動性チェックを行う必要がないことを意味します。"
    },
    {
      "indent": 0,
      "text": "2. Exchanges",
      "section_title": true,
      "ja": "2.交換"
    },
    {
      "indent": 0,
      "text": "2.1. Initial Exchange",
      "section_title": true,
      "ja": "2.1。初期交換"
    },
    {
      "indent": 3,
      "text": "All IKEv2 communications consist of pairs of messages: a request and a response. The pair is called an \"exchange\" and is sometimes called a \"request/response pair\". Every request requires a response.",
      "ja": "すべてのIKEv2通信はメッセージのペアで構成：リクエストとレスポンスを。ペアは、「交換」と呼ばれ、時には「要求/応答ペア」と呼ばれています。すべての要求は応答を必要とします。"
    },
    {
      "indent": 3,
      "text": "For every pair of IKEv2 messages, the initiator is responsible for retransmission in the event of a timeout. The responder MUST never retransmit a response unless it receives a retransmission of the request.",
      "ja": "IKEv2のメッセージのすべてのペアのために、イニシエータは、タイムアウトが発生した場合に再送信する責任があります。それは、要求の再送信を受信しない限り、応答者は応答を再送してはなりません。"
    },
    {
      "indent": 3,
      "text": "IKEv2 is a reliable protocol: the initiator MUST retransmit a request until it either receives a corresponding response or deems the IKE SA to have failed. A retransmission from the initiator MUST be bitwise identical to the original request. Retransmission times MUST increase exponentially.",
      "ja": "IKEv2の信頼性の高いプロトコルである：それはどちらかが対応する応答を受信するか、またはIKE SAが失敗したと判断するまで、開始要求を再送しなければなりません。イニシエータからの再送は、元の要求と同じビット単位なければなりません。再送回数は指数関数的に増加しなければなりません。"
    },
    {
      "indent": 3,
      "text": "IKEv2 is run over UDP port 500. All IKEv2 implementations MUST be able to send, receive, and process IKEv2 messages that are up to 1280 octets long. An implementation MUST accept incoming requests even if the source port is not 500 and MUST respond to the address and port from which the request was received.",
      "ja": "IKEv2のは最大1280個のオクテットが長いメッセージを500すべてのIKEv2実装は、送信、受信できなければならないUDPポート上で実行し、プロセスのIKEv2されます。実装では、送信元ポートが500ではない場合でも、着信要求を受け入れなければならないと要求を受信したアドレスとポートに応じなければなりません。"
    },
    {
      "indent": 3,
      "text": "The minimal implementation of IKEv2 only uses the first two exchanges, called IKE_SA_INIT and IKE_AUTH. These are used to create the IKE SA and the first Child SA. In addition to those messages, a minimal IKEv2 implementation needs to understand the CREATE_CHILD_SA request enough to generate a CREATE_CHILD_SA response containing the NO_ADDITIONAL_SAS error notify. It needs to understand the INFORMATIONAL request enough to generate an empty INFORMATIONAL response to it. There is no requirement to be able to respond to any other requests.",
      "ja": "IKEv2の最小限の実装は、IKE_SA_INIT及びIKE_AUTHと呼ばれる、最初の二つの交流を使用します。これらは、IKE SAと第一子SAを作成するために使用されています。それらのメッセージに加えて、最小限のIKEv2の実装はNO_ADDITIONAL_SASエラーが通知含むCREATE_CHILD_SA応答を生成するのに十分なCREATE_CHILD_SA要求を理解する必要があります。それに空のINFORMATIONAL応答を生成するのに十分な情報提供の要求を理解する必要があります。他のリクエストに応答することができるようにする必要はありません。"
    },
    {
      "indent": 3,
      "text": "All messages following the IKE_SA_INIT exchange are cryptographically protected using the cryptographic algorithms and keys negotiated in the IKE_SA_INIT exchange.",
      "ja": "IKE_SA_INIT交換を以下のすべてのメッセージは、暗号IKE_SA_INIT交換で交渉暗号化アルゴリズムとキーを使用して保護されています。"
    },
    {
      "indent": 3,
      "text": "Every IKEv2 message contains a Message ID as part of its fixed header. This Message ID is used to match up requests and responses and to identify retransmissions of messages.",
      "ja": "すべてのIKEv2メッセージは、その固定されたヘッダの一部としてメッセージIDを含んでいます。このメッセージIDは、要求と応答を一致するとメッセージの再送信を識別するために使用されます。"
    },
    {
      "indent": 3,
      "text": "Minimal implementations only need to support the role of initiator, so it typically only sends an IKE_SA_INIT request that, when answered, is followed by an IKE_AUTH. As those messages have fixed Message IDs (0 and 1), it does not need to keep track of its own Message IDs for outgoing requests after that.",
      "ja": "最小限の実装では、唯一の開始剤の役割をサポートする必要があるので、それは一般的にのみ、答えたときに、IKE_AUTHが続いているIKE_SA_INIT要求を送信します。これらのメッセージは、メッセージID（0と1）を固定してきたように、それがその後の発信要求に対して、独自のメッセージIDを追跡する必要はありません。"
    },
    {
      "indent": 3,
      "text": "Minimal implementations can also optimize Message ID handling of the incoming requests, as they do not need to protect incoming requests against replays. This is possible because minimal implementations will only return error or empty notification replies to incoming requests. This means that any of those incoming requests do not have any effect on the minimal implementation, thus processing them again does not cause any harm. Because of this, a minimal implementation can always answer a request coming in, with the same Message ID than what the request had, and then forget the request/response pair immediately. This means there is no need to keep track of Message IDs of the incoming requests.",
      "ja": "彼らはリプレイに対する着信要求を保護する必要がないよう、最小限の実装も、着信要求のメッセージIDの処理を最適化することができます。最小限の実装は着信要求のみにエラーまたは空の通知応答を返しますので、これは可能です。これは、これらの着信要求のいずれかが害を引き起こすことはありませんので、それらを再度処理し、最小限の実装に影響を及ぼさないことを意味します。このため、最小限の実装は常に要求が持っていたものよりも、同じメッセージIDで、入ってくるリクエストにお答えして、すぐにリクエスト/レスポンスのペアを忘れることができます。これは、着信要求のメッセージIDを追跡する必要がないことを意味します。"
    },
    {
      "indent": 3,
      "text": "In the following descriptions, the payloads contained in the message are indicated by the names listed below.",
      "ja": "以下の説明では、メッセージに含まれるペイロードは、下記の名称で示されています。"
    },
    {
      "indent": 3,
      "text": "Notation    Payload\n-----------------------------------------\nAUTH        Authentication\nCERTREQ     Certificate Request\nD           Delete\nHDR         IKE header (not a payload)\nIDi         Identification - Initiator\nIDr         Identification - Responder\nKE          Key Exchange\nNi, Nr      Nonce\nN           Notify\nSA          Security Association\nSK          Encrypted and Authenticated\nTSi         Traffic Selector - Initiator\nTSr         Traffic Selector - Responder",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The initial exchanges are as follows:",
      "ja": "次のように最初の交換は、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "Initiator                         Responder\n-------------------------------------------------------------------\nHDR(SPIi=xxx, SPIr=0, IKE_SA_INIT,\n    Flags: Initiator, Message ID=0),\n    SAi1, KEi, Ni  -->",
      "raw": true
    },
    {
      "indent": 22,
      "text": "<--  HDR(SPIi=xxx, SPIr=yyy, IKE_SA_INIT,\n         Flags: Response, Message ID=0),\n         SAr1, KEr, Nr, [CERTREQ]",
      "raw": true
    },
    {
      "indent": 3,
      "text": "HDR contains the Security Parameter Indexes (SPIs), version numbers, and flags of various sorts. Each endpoint chooses one of the two SPIs and MUST choose them so as to be unique identifiers of an IKE SA. An SPI value of zero is special: it indicates that the remote SPI value is not yet known by the sender.",
      "ja": "HDRは、セキュリティパラメータインデックス（SPIの）、バージョン番号、および様々な種類のフラグが含まれています。各エンドポイントは、2つのSPIのいずれかを選択し、IKE SAのユニークな識別子になるようにそれらを選択する必要があります。ゼロのSPI値は特別です：それは、リモートSPI値がまだ送信者によって知られていないことを示しています。"
    },
    {
      "indent": 3,
      "text": "Incoming IKEv2 packets are mapped to an IKE SA using only the packet's SPI, not using (for example) the source IP address of the packet.",
      "ja": "着信のIKEv2パケットは、（例えば）パケットの送信元IPアドレスを使用していない、唯一のパケットのSPIを使用して、IKE SAにマッピングされます。"
    },
    {
      "indent": 3,
      "text": "The SAi1 payload states the cryptographic algorithms the initiator supports for the IKE SA. The KEi and KEr payloads contain Diffie-Hellman values, and Ni and Nr are the nonces. The SAr1 contains the chosen cryptographic suite from the initiator's offered choices. A minimal implementation using shared secrets will ignore the CERTREQ payload.",
      "ja": "SAI1ペイロードは、イニシエータがIKE SAのためにサポートして暗号化アルゴリズムを述べています。たKEiとKERペイロードは、ディフィー - ヘルマン値を含み、NiとNrが一回だけです。 SAR1は、イニシエータの提供の選択肢から選ばれた暗号スイートが含まれています。共有秘密を使用して、最小限の実装はCERTREQペイロードを無視します。"
    },
    {
      "indent": 3,
      "text": "Minimal implementation will most likely support exactly one set of cryptographic algorithms, meaning the SAi1 payload will be static. It needs to check that the SAr1 received matches the proposal it sent.",
      "ja": "最小限の実装はSAI1ペイロードを意味する暗号化アルゴリズム、最も可能性の高いサポート正確に一つのセットは、静的になります。これは、SAR1は、それが送られた提案書と一致して受け取っていることを確認する必要があります。"
    },
    {
      "indent": 3,
      "text": "At this point in the negotiation, each party can generate SKEYSEED, from which all keys are derived for that IKE SA.",
      "ja": "交渉のこの時点で、各当事者は、すべてのキーがそのIKE SAのために誘導されたSKEYSEEDを生成することができます。"
    },
    {
      "indent": 3,
      "text": "SKEYSEED = prf(Ni | Nr, g^ir)",
      "ja": "SKEYSEED = PRF（ニッケル|いいえ、G ^ IR）"
    },
    {
      "indent": 3,
      "text": "{SK_d | SK_ai | SK_ar | SK_ei | SK_er | SK_pi | SK_pr } = prf+ (SKEYSEED, Ni | Nr | SPIi | SPIr )",
      "ja": "{SK_d | SK_ai | SK_ar | SK_ei | SK_、えー| SK_pi | SK_pr} = PRF +（SKEYSEED、ニッケル|番号| SPII | SPIR）"
    },
    {
      "indent": 3,
      "text": "prf+ (K,S) = T1 | T2 | T3 | T4 | ...",
      "ja": "+ PRF（K、C）= T1 | T2 | TK | PM | ..."
    },
    {
      "indent": 3,
      "text": "where: T1 = prf (K, S | 0x01) T2 = prf (K, T1 | S | 0x02) T3 = prf (K, T2 | S | 0x03) T4 = prf (K, T3 | S | 0x04) ...",
      "ja": "ここで、T1 = PRF（K、S | 0x01の）T2 = PRF（K、T1 | S | 0x02の）T3 = PRF（K、T2 | S | 0x03の）T4 = PRF（K、T3 | S | 0x04の）.. 。"
    },
    {
      "indent": 3,
      "text": "(indicating that the quantities SK_d, SK_ai, SK_ar, SK_ei, SK_er, SK_pi, and SK_pr are taken in order from the generated bits of the prf+). g^ir is the shared secret from the ephemeral Diffie-Hellman exchange. g^ir is represented as a string of octets in big endian order padded with zeros if necessary to make it the length of the modulus. Ni and Nr are the nonces, stripped of any headers.",
      "ja": "（数量SK_d、SK_ai、SK_ar、SK_ei、SK_、えー、SK_pi、及びSK_prはPRFの+の発生ビットから順に取り込まれることを示します）。 G ^ IRは短命のDiffie-Hellman交換からの共有秘密です。 G ^ IRは、モジュラスの長さにするために、必要に応じてゼロで埋めビッグエンディアンの順序でオクテット文字列として表されます。 NiとNrが任意のヘッダを剥奪ナンス、です。"
    },
    {
      "indent": 3,
      "text": "The SK_d is used for deriving new keys for the Child SAs. The SK_ai and SK_ar are used as a key to the integrity protection algorithm for authenticating the component messages of subsequent exchanges. The SK_ei and SK_er are used for encrypting (and of course decrypting) all subsequent exchanges. The SK_pi and SK_pr are used when generating an AUTH payload. The lengths of SK_d, SK_pi, and SK_pr MUST be the preferred key length of the Pseudorandom Function (PRF) agreed upon.",
      "ja": "SK_dは子供SAの新しいキーを導出するために使用されています。 SK_aiとSK_arは、後続の交換のコンポーネントメッセージを認証するための完全性保護アルゴリズムの鍵として使用されます。 SK_eiとSK_、えーは、暗号化（およびもちろん、復号化）、以降のすべての交換をするために使用されます。 AUTHペイロードを生成する際SK_piとSK_prが使用されます。 SK_d、SK_pi、及びSK_prの長さは、合意擬似ランダム関数（PRF）の好適なキーの長さでなければなりません。"
    },
    {
      "indent": 3,
      "text": "A separate SK_e and SK_a is computed for each direction. The keys used to protect messages from the original initiator are SK_ai and SK_ei. The keys used to protect messages in the other direction are SK_ar and SK_er. The notation SK { ... } indicates that these payloads are encrypted and integrity protected using that direction's SK_e and SK_a.",
      "ja": "別SK_eとSKは各方向について計算されます。元イニシエータからのメッセージを保護するために使用されるキーはSK_aiとSK_eiです。他の方向にメッセージを保護するために使用されるキーはSK_arとSK_、えーです。表記SK {...}は、これらのペイロードが暗号化と完全性がその方向のSK_eとSKを使用して保護されていることを示しています。"
    },
    {
      "indent": 3,
      "text": "Initiator                         Responder\n-------------------------------------------------------------------\nHDR(SPIi=xxx, SPIr=yyy, IKE_AUTH,\n    Flags: Initiator, Message ID=1),\n    SK {IDi, AUTH, SAi2, TSi, TSr,\n        N(INITIAL_CONTACT)}  -->",
      "raw": true
    },
    {
      "indent": 21,
      "text": "<--  HDR(SPIi=xxx, SPIr=yyy, IKE_AUTH, Flags:\n            Response, Message ID=1),\n            SK {IDr, AUTH, SAr2, TSi, TSr}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The initiator asserts its identity with the IDi payload, proves knowledge of the secret corresponding to IDi, and integrity protects the contents of the first message using the AUTH payload. The responder asserts its identity with the IDr payload, authenticates its identity, and protects the integrity of the second message with the AUTH payload.",
      "ja": "イニシエータは、IDiとペイロードとのアイデンティティをアサートし、IDIに対応する秘密の知識を証明し、そして完全性はAUTHペイロードを使用して第1のメッセージの内容を保護します。レスポンダは、IDRペイロードを持つアイデンティティを主張するそのアイデンティティを認証し、AUTHペイロードを有する第二のメッセージの完全性を保護します。"
    },
    {
      "indent": 3,
      "text": "As minimal implementation usually has only one host where it connects, that means it has only one shared secret. This means it does not need to care about the IDr payload that much. If the other end sends an AUTH payload that the initiator can verify using the shared secret it has, then it knows the other end is the peer it was configured to talk to.",
      "ja": "最小限の実装は、通常、それが接続されている1つのホストのみを持っているとして、それはそれは唯一の共有秘密を有することを意味します。これは、多くのIDRペイロードを気にする必要はないことを意味します。もう一方の端は、イニシエータは、それが持っている共有秘密鍵を使用して確認することができAUTHペイロードを送信した場合、それはもう一方の端は、それが話をするように構成された、ピアであることを知っています。"
    },
    {
      "indent": 3,
      "text": "In the IKE_AUTH request, the initiator sends the SA offer(s) in the SAi2 payload and the proposed Traffic Selectors (TSs) for the Child SA in the TSi and TSr payloads. The responder replies with the accepted offer in an SAr2 payload and with the selected Traffic Selectors. The selected Traffic Selectors may be a subset of what the initiator proposed.",
      "ja": "IKE_AUTH要求において、イニシエータはSAI2ペイロードとをTSiおよびTSrをペイロードに子SAのための提案されたトラフィックセレクタ（TSS）においてSAオファー（単数または複数）を送信します。レスポンダはSAR2ペイロードで、選択したトラフィックセレクタと受け入れの申し出で応答します。選択されたトラフィックセレクタは、イニシエータが提案されているもののサブセットであってもよいです。"
    },
    {
      "indent": 3,
      "text": "In the minimal implementation, both SA payloads and TS payloads are going to be mostly static. The SA payload will have the SPI value used in the Encapsulating Security Payload (ESP), but the algorithms are most likely going to be the one and only supported set. The TS payloads on the initiator end will most likely say from any to any, i.e., full wildcard ranges, or from the local IP to the remote IP. In the wildcard case, the responder quite often narrows the range down to the one IP address pair. Using a single IP address pair as the Traffic Selectors when sending the IKE_AUTH request will simplify processing as the responder will either accept the IP address pair or return an error. If wildcard ranges are used, there is a possibility that the responder will narrow the Traffic Selector range to range that is not acceptable by the initiator.",
      "ja": "最小限の実装では、両方のSAペイロードとTSペイロードは、主に静的なことを行っています。 SAペイロードは、カプセル化セキュリティペイロード（ESP）で使用されるSPI値を持つことになりますが、アルゴリズムは、ほとんど唯一のサポートセットであることを行っています。イニシエータ側のTSペイロードは、最も可能性の高いいずれかからのいずれかに言うだろう、すなわち、完全なワイルドカードは、またはローカルIPからのリモートIPの範囲です。ワイルドカードの場合、応答者はかなり多くの場合、1つのIPアドレスのペアまでの範囲を狭めます。応答者は、IPアドレスのペアを受け入れるか、またはエラーを返しますどちらかとIKE_AUTHリクエストを送信する際に、トラフィックセレクタのような単一のIPアドレスのペアを使用することで処理を簡素化します。ワイルドカード範囲が使用されている場合は、応答者はそれがイニシエータによって受け入れられない範囲にトラフィックセレクタの範囲を狭める可能性があります。"
    },
    {
      "indent": 3,
      "text": "The IKE_AUTH (and IKE_SA_INIT) response may contain multiple status notification payloads that can be ignored by minimal implementations.",
      "ja": "IKE_AUTH（およびIKE_SA_INIT）応答は、最小の実装では無視することができる複数の状態通知ペイロードを含んでいてもよいです。"
    },
    {
      "indent": 3,
      "text": "There can also be Vendor ID, Certificate, Certificate Request, or Configuration payloads, but any payload unknown to minimal implementations can simply be skipped over (response messages cannot have critical unsupported payloads).",
      "ja": "そこにもベンダーID、証明書、証明書要求、または設定ペイロードすることができますが、最小限の実装に未知の任意のペイロードは、単純に（応答メッセージは、重要なサポートされていないペイロードを持つことはできません）スキップすることができます。"
    },
    {
      "indent": 3,
      "text": "The exchange above includes N(INITIAL_CONTACT) notification in the request as that is quite commonly sent by a minimal implementation. It indicates to the other end that the initiator does not have any other IKE SAs between it and the responder, and if there is any left from previous runs, those can be deleted by the responder. As minimal implementations delete IKE SAs without sending IKE SA delete requests, this will help the responder to clean up leftover state.",
      "ja": "交換は、上記のことは、非常に一般最小実装によって送信される要求にN（INITIAL_CONTACT）通知を含みます。これは、イニシエータが、それと応答者の間で、他のIKE SAを持っていないもう一方の端に示し、以前の実行から任意の左がある場合、それらは応答者によって削除することができます。最小限の実装はIKE SA削除要求を送信せずにIKE SAを削除するように、これは残った状態をクリーンアップするために応答者を支援します。"
    },
    {
      "indent": 3,
      "text": "When using shared secret authentication, the peers are authenticated by having each calculating a Message Authentication Code (MAC) over a block of data:",
      "ja": "共有秘密認証を使用する場合、ピアは、それぞれがデータのブロック上にメッセージ認証コード（MAC）を計算有することによって認証されます。"
    },
    {
      "indent": 3,
      "text": "For the initiator: AUTH = prf( prf(Shared Secret, \"Key Pad for IKEv2\"), <InitiatorSignedOctets>) For the responder: AUTH = prf( prf(Shared Secret, \"Key Pad for IKEv2\"), <ResponderSignedOctets>)",
      "ja": "AUTH = PRF応答者のために（PRF（共有シークレット、 \"IKEv2のためのキーパッド\"）、<InitiatorSignedOctets>）：AUTH = PRF（PRF（共有シークレット、 \"IKEv2のためのキーパッド\"）、<ResponderSignedOctets>）イニシエータの"
    },
    {
      "indent": 3,
      "text": "The string \"Key Pad for IKEv2\" is 17 ASCII characters without null termination. The implementation can precalculate the inner prf and only store the output of it. This is possible because a minimal IKEv2 implementation usually only supports one PRF.",
      "ja": "文字列「IKEv2のためのキーパッドが」ヌル終了せずに17個のASCII文字です。実装は、内側PRFを事前計算し、それだけの出力を保存することができます。最小限のIKEv2実装は通常、一つだけPRFをサポートしているので、これは可能です。"
    },
    {
      "indent": 3,
      "text": "In the following calculations, IDi' and IDr' are the entire ID payloads excluding the fixed header, and the Ni and Nr are only the values, not the payloads containing it. Note that neither the nonce Ni/Nr nor the value prf(SK_pr, IDr')/prf(SK_pi, IDi') are transmitted.",
      "ja": "以下の計算では、IDI「およびIDR」が固定されたヘッダを除いた全体のIDペイロードであり、NiとNrが値だけではなく、それを含むペイロードです。どちらノンスのNi / Nrをも値PRF（SK_pr、IDR '）/ PRF（SK_pi、IDI'）が送信されないことに留意されたいです。"
    },
    {
      "indent": 3,
      "text": "The initiator signs the first message (IKE_SA_INIT request), starting with the first octet of the first SPI in the header and ending with the last octet of the last payload in that first message. Appended to this (for purposes of computing the signature) are the responder's nonce Nr and the value prf(SK_pi, IDi').",
      "ja": "イニシエータは、最初のメッセージ（IKE_SA_INIT要求）、ヘッダの最初のSPIの最初のオクテットで開始し、その最初のメッセージの最後のペイロードの最後のオクテットで終わるに署名します。 （署名を計算する目的のために）、これに添付レスポンダのナンスNRおよび値PRF（SK_pi、IDI」）です。"
    },
    {
      "indent": 3,
      "text": "For the responder, the octets to be signed start with the first octet of the first SPI in the header of the second message (IKE_SA_INIT response) and end with the last octet of the last payload in that second message. Appended to this are the initiator's nonce Ni and the value prf(SK_pr, IDr').",
      "ja": "応答者のために、署名されるべきオクテットが第2のメッセージ（IKE_SA_INIT応答）のヘッダ内の最初のSPIの最初のオクテットで開始し、その第2のメッセージの最後のペイロードの最後のオクテットで終わります。これに追加さイニシエータのナンスNiおよび値PRF（SK_pr、IDR '）です。"
    },
    {
      "indent": 3,
      "text": "The initiator's signed octets can be described as:",
      "ja": "イニシエータの署名オクテットは次のように説明することができます。"
    },
    {
      "indent": 3,
      "text": "InitiatorSignedOctets = RealMessage1 | NonceRData | MACedIDForI RealIKEHDR = SPIi | SPIr | . . . | Length RealMessage1 = RealIKEHDR | RestOfMessage1 NonceRPayload = PayloadHeader | NonceRData InitiatorIDPayload = PayloadHeader | RestOfInitIDPayload RestOfInitIDPayload = IDType | RESERVED | InitIDData MACedIDForI = prf(SK_pi, RestOfInitIDPayload)",
      "ja": "InitiatorSignedOctets = RealMessage1 | NonceRData | MACedIDForI RealIKEHDR = SPII | SPIR | 。 。 。 |長RealMessage1 = RealIKEHDR | RestOfMessage1 NonceRPayload = PayloadHeaderは| NonceRData InitiatorIDPayload = PayloadHeaderは| RestOfInitIDPayload RestOfInitIDPayload =のidtype | RESERVED | InitIDData MACedIDForI = PRF（SK_pi、RestOfInitIDPayload）"
    },
    {
      "indent": 3,
      "text": "The responder's signed octets can be described as:",
      "ja": "応答者の署名のオクテットは、次のように説明することができます。"
    },
    {
      "indent": 3,
      "text": "ResponderSignedOctets = RealMessage2 | NonceIData | MACedIDForR RealIKEHDR = SPIi | SPIr | . . . | Length RealMessage2 = RealIKEHDR | RestOfMessage2 NonceIPayload = PayloadHeader | NonceIData ResponderIDPayload = PayloadHeader | RestOfRespIDPayload RestOfRespIDPayload = IDType | RESERVED | RespIDData MACedIDForR = prf(SK_pr, RestOfRespIDPayload)",
      "ja": "ResponderSignedOctets = RealMessage2 | NonceIData | MACedIDForR RealIKEHDR = SPII | SPIR | 。 。 。 |長RealMessage2 = RealIKEHDR | RestOfMessage2 NonceIPayload = PayloadHeaderは| NonceIData ResponderIDPayload = PayloadHeaderは| RestOfRespIDPayload RestOfRespIDPayload =のidtype | RESERVED | RespIDData MACedIDForR = PRF（SK_pr、RestOfRespIDPayload）"
    },
    {
      "indent": 3,
      "text": "Note that all of the payloads inside the RestOfMessageX are included under the signature, including any payload types not listed in this document.",
      "ja": "RestOfMessageX内部ペイロードの全ては、この文書に記載されていない任意のペイロードタイプを含む、署名の下に含まれていることに留意されたいです。"
    },
    {
      "indent": 3,
      "text": "The initiator might also get an unauthenticated response back that has a notification payload with an error code inside. As that error code will be unauthenticated and may be faked, there is no need to do anything for those. A minimal implementation can simply ignore those errors and retransmit its request until it times out, and if that happens, then the IKE SA (and Child SA) creation failed.",
      "ja": "イニシエータはまた、内部のエラーコードで通知ペイロードを持つ認証されていないレスポンスバックを取得する可能性があります。そのエラーコードが認証されていないだろうし、偽造されるように、それらのために何かをする必要はありません。最小限の実装は、単にこれらのエラーを無視して、それまではタイムアウトにその要求を再送信し、それが起こる場合、IKE SA（と子供SA）することができます作成​​に失敗しました。"
    },
    {
      "indent": 3,
      "text": "The responder might also reply with an IKE_AUTH response packet that does not contain the payloads needed to set up a Child SA (SAr2, TSi, and TSr) but instead contain AUTH payload and an error. Minimal implementation that does not support the CREATE_CHILD_SA exchange cannot recover from this scenario. It can delete the IKE SA and start over from the beginning (which might fail again if this is a configuration error, or it might succeed if this was temporal failure).",
      "ja": "レスポンダはまた、子供SA（SAR2、をTSi、れ、TSR）を設定するために必要なペイロードが含まれているが、代わりにAUTHペイロードおよびエラーが含まれていませんIKE_AUTH応答パケットで応答することがあります。 CREATE_CHILD_SA交換をサポートしていない最小限の実装では、このシナリオから回復することはできません。これは、IKE SAを削除し、（これは設定エラーであれば、再び失敗する可能性があり、またはこれは一時的な障害が発生した場合、それは成功するかもしれない）最初からやり直すことができます。"
    },
    {
      "indent": 0,
      "text": "2.2. Other Exchanges",
      "section_title": true,
      "ja": "2.2。その他の交流"
    },
    {
      "indent": 3,
      "text": "Minimal implementations MUST be able to reply to INFORMATIONAL requests by sending back an empty INFORMATIONAL response:",
      "ja": "最小限の実装は空のINFORMATIONAL応答を送り返すことで、情報提供の要求に答えることができなければなりません。"
    },
    {
      "indent": 3,
      "text": "Minimal implementation            Other end\n-------------------------------------------------------------------\n                   <--  HDR(SPIi=xxx, SPIr=yyy, INFORMATIONAL,\n                               Flags: none,  Message ID=m),\n                               SK {...}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "HDR(SPIi=xxx, SPIr=yyy, INFORMATIONAL, Flags: Initiator | Response, Message ID=m), SK {} -->",
      "ja": "HDR（SPII = XXX、SPIR = YYY、INFORMATIONAL、フラグ：イニシエータ|応答、メッセージID = M）、SK {}  - >"
    },
    {
      "indent": 3,
      "text": "Minimal implementations MUST be able to reply to incoming CREATE_CHILD_SA requests. A typical implementation will reject the CREATE_CHILD_SA exchanges by sending a NO_ADDITIONAL_SAS error notify back:",
      "ja": "最小限の実装では、着信CREATE_CHILD_SA要求に答えることができなければなりません。典型的な実装はNO_ADDITIONAL_SASエラーがバック通知送信することによって、CREATE_CHILD_SA交換を拒否します。"
    },
    {
      "indent": 3,
      "text": "Minimal implementation            Other end\n-------------------------------------------------------------------\n                   <--  HDR(SPIi=xxx, SPIy=yyy, CREATE_CHILD_SA,\n                               Flags: none, Message ID=m),\n                               SK {...}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "HDR(SPIi=xxx, SPIr=yyy, CREATE_CHILD_SA, Flags: Initiator | Response, Message ID=m), SK {N(NO_ADDITIONAL_SAS)} -->",
      "ja": "HDR（SPII = XXX、SPIR = YYY、CREATE_CHILD_SA、フラグ：イニシエータ|応答、メッセージID = M）、SK {N（NO_ADDITIONAL_SAS）}  - >"
    },
    {
      "indent": 3,
      "text": "Note that INFORMATIONAL and CREATE_CHILD_SA requests might contain unsupported critical payloads, in which case a compliant implementation MUST ignore the request and send a response message back that has the UNSUPPORTED_CRITICAL_PAYLOAD notification. That notification payload data contains a 1-octet payload type of the unsupported critical payload.",
      "ja": "INFORMATIONALとCREATE_CHILD_SA要求が準拠した実装が要求を無視してUNSUPPORTED_CRITICAL_PAYLOAD通知を持って戻って応答メッセージを送らなければなりません。その場合には、サポートされていない重要なペイロードを、含まれている場合があります。その通知のペイロードデータは、サポートされていない重要なペイロードの1オクテットのペイロードタイプが含まれています。"
    },
    {
      "indent": 0,
      "text": "2.3. Generating Keying Material",
      "section_title": true,
      "ja": "2.3。生成鍵材料"
    },
    {
      "indent": 3,
      "text": "The keying material for the Child SA created by the IKE_AUTH exchange is generated as follows:",
      "ja": "次のようにIKE_AUTH交換によって作成された子SAのためのキーイング材料が生成されます。"
    },
    {
      "indent": 3,
      "text": "KEYMAT = prf+(SK_d, Ni | Nr)",
      "ja": "KEYMAT = PRF +（SK_d、ニッケル| NR）"
    },
    {
      "indent": 3,
      "text": "Where Ni and Nr are the nonces from the IKE_SA_INIT exchange.",
      "ja": "NiとNrがIKE_SA_INIT交換からのナンスどこにいます。"
    },
    {
      "indent": 3,
      "text": "A single CHILD_SA negotiation may result in multiple Security Associations. ESP and Authentication Header (AH) SAs exist in pairs (one in each direction), so two SAs are created in a single Child SA negotiation for them. The keying material for each Child SA MUST be taken from the expanded KEYMAT using the following rules:",
      "ja": "単一CHILD_SA交渉は、複数のセキュリティアソシエーションをもたらすことができます。 ESPおよび認証ヘッダ（AH）SAは対（各方向に1つずつ）に存在するので、2つのSAは、彼らのために単一の子SAのネゴシエーション中に作成されます。それぞれの子SAのための鍵材料は、次の規則を使用して拡張KEYMATから取らなければなりません。"
    },
    {
      "indent": 3,
      "text": "o All keys for SAs carrying data from the initiator to the responder are taken before SAs going from the responder to the initiator.",
      "ja": "Oレスポンダに、イニシエータからのデータを運ぶSAのすべてのキーは、SASイニシエータへの応答から行く前に撮影されています。"
    },
    {
      "indent": 3,
      "text": "o If an IPsec protocol requires multiple keys, the order in which they are taken from the SA's keying material needs to be described in the protocol's specification. For ESP and AH, [IPSECARCH] defines the order, namely: the encryption key (if any) MUST be taken from the first bits, and the integrity key (if any) MUST be taken from the remaining bits.",
      "ja": "IPsecプロトコルは、複数のキーを必要とする場合、O、彼らはSAのキーイングマテリアルから採取される順序は、プロトコルの仕様で説明される必要があります。順序を定義ESPとAHのために、[IPSECARCH]、すなわち：暗号化キー（もしあれば）は、最初のビットから取らなければならない、および完全性キー（もしあれば）は、残りのビットから取らなければなりません。"
    },
    {
      "indent": 3,
      "text": "Each cryptographic algorithm takes a fixed number of bits of keying material specified as part of the algorithm or negotiated in SA payloads.",
      "ja": "各暗号化アルゴリズムは、材料アルゴリズムの一部として指定又はSAペイロードでネゴシエートキーイングの固定ビット数を要します。"
    },
    {
      "indent": 0,
      "text": "3. Conformance Requirements",
      "section_title": true,
      "ja": "3.適合性要件"
    },
    {
      "indent": 3,
      "text": "For an implementation to be called conforming to the RFC 7296 specification, it MUST be possible to configure it to accept the following:",
      "ja": "RFC 7296仕様に準拠呼び出される実装の場合は、次のことを受け入れるように、それを構成することが可能でなければなりません。"
    },
    {
      "indent": 3,
      "text": "o Public Key Infrastructure using X.509 (PKIX) Certificates containing and signed by RSA keys of size 1024 or 2048 bits, where the ID passed is any of ID_KEY_ID, ID_FQDN, ID_RFC822_ADDR, or ID_DER_ASN1_DN.",
      "ja": "含有し、渡されたIDがID_KEY_ID、ID_FQDN、ID_RFC822_ADDR、又はID_DER_ASN1_DNのいずれかであるサイズ1024 2048ビットのRSA鍵で署名されたX.509（PKIX）証明書を使用して、公開鍵インフラストラクチャO。"
    },
    {
      "indent": 3,
      "text": "o Shared key authentication where the ID passed is any of ID_KEY_ID, ID_FQDN, or ID_RFC822_ADDR.",
      "ja": "O IDが渡された共有鍵認証がID_KEY_ID、ID_FQDN、又はID_RFC822_ADDRのいずれかです。"
    },
    {
      "indent": 3,
      "text": "o Authentication where the responder is authenticated using PKIX Certificates, and the initiator is authenticated using shared key authentication.",
      "ja": "O認証ここレスポンダはPKIX証明書を使用して認証され、イニシエータは、共有鍵認証を使用して認証されます。"
    },
    {
      "indent": 3,
      "text": "This document only supports the second bullet; it does not support PKIX Certificates at all. As full RFC 7296 responders must also support that shared key authentication, this allows a minimal implementation to be able to interoperate with all implementations that are compliant with RFC 7296.",
      "ja": "この文書では、唯一の二箇条書きをサポートしています。それがすべてでPKIX証明書をサポートしていません。完全なRFC 7296人の応答者はまた、その共有鍵認証をサポートしている必要がありますように、これは最小限の実装は、RFC 7296に準拠しているすべての実装と相互運用できるようにすることができます。"
    },
    {
      "indent": 3,
      "text": "PKIX Certificates are left out from the minimal implementation as those would add quite a lot of complexity to the implementation. The actual code changes needed in the IKEv2 protocol are small, but the certificate validation code would be more complex than the whole minimal IKEv2 implementation itself. If public-key-based authentication is needed for scalability reasons, then raw public keys would probably be the best compromise (see Appendix B.2).",
      "ja": "これらは、実装の複雑さのかなり多くを追加するようPKIX証明書は、最小限の実装から除外されています。 IKEv2のプロトコルに必要な実際のコード変化は小さいが、証明書検証コードは全体最小のIKEv2実装自体よりも複雑であろう。公開鍵ベースの認証は、スケーラビリティの理由のために必要とされる場合には、生の公開鍵は、おそらく最高の妥協点だろう（付録B.2を参照してください）。"
    },
    {
      "indent": 0,
      "text": "4. Implementation Status",
      "section_title": true,
      "ja": "4.実施状況"
    },
    {
      "indent": 3,
      "text": "This document describes a minimal implementation written by the author of this document. The minimal implementation supported the base IKE_SA_INIT and IKE_AUTH exchanges and successfully interoperated with a full IKEv2 server. This minimal implementation was presented in the Interconnecting Smart Objects with Internet Workshop in Prague in March 2011 [Kiv11]. This implementation was written as proof of concept in perl.",
      "ja": "この文書では、この文書の著者によって書かれた最小限の実装について説明します。最小限の実装は、基本IKE_SA_INIT及びIKE_AUTH交換をサポートし、成功したフルのIKEv2サーバとの相互運用します。この最小限の実装は、[Kiv11] 2011年3月にプラハのインターネットショップでコネクティングスマートオブジェクトに発表されました。この実装は、perlでコンセプトの証明として書かれていました。"
    },
    {
      "indent": 3,
      "text": "There was another proof-of-concept implementation written in python, which also interoperated with a full IKEv2 server.",
      "ja": "また、フルのIKEv2サーバとの相互運用pythonで書かれた別の概念実証の実装がありました。"
    },
    {
      "indent": 3,
      "text": "Both implementations were written just for demonstration purposes and included fixed configuration built into the code, and both also implemented ESP, ICMP, and IP layers to the level that was needed to send and receive one ICMP echo packet. Both implementations were about 1000 lines of code excluding cryptographic libraries but including ESP, ICMP, and IP layers.",
      "ja": "両方の実装は単なるデモンストレーション目的のために書かれたコードに組み込まれた固定構成が含まれており、双方は、一個のICMPエコーパケットを送信し、受信するために必要とされたレベルにESP、ICMP、およびIP層を実施しました。どちらの実装は、暗号化ライブラリ除くが、ESP、ICMP、およびIP層を含むコードの約1000行でした。"
    },
    {
      "indent": 0,
      "text": "5. Security Considerations",
      "section_title": true,
      "ja": "5.セキュリティについての考慮事項"
    },
    {
      "indent": 3,
      "text": "As this implements the same protocol as RFC 7296, this means all security considerations from it also apply to this document.",
      "ja": "これはRFC 7296と同じプロトコルを実装として、それはまた、この文書に適用されますから、これは、すべてのセキュリティ上の考慮事項を意味しています。"
    },
    {
      "indent": 0,
      "text": "6. References",
      "section_title": true,
      "ja": "6.参照"
    },
    {
      "indent": 0,
      "text": "6.1. Normative References",
      "section_title": true,
      "ja": "6.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <http://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<http://www.rfc-editor.org/info/ RFC2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC7296] Kaufman, C., Hoffman, P., Nir, Y., Eronen, P., and T. Kivinen, \"Internet Key Exchange Protocol Version 2 (IKEv2)\", STD 79, RFC 7296, DOI 10.17487/RFC7296, October 2014, <http://www.rfc-editor.org/info/rfc7296>.",
      "ja": "[RFC7296]コーフマン、C.、ホフマン、P.、ニール、Y.、Eronen、P.、およびT. Kivinen、 \"インターネット鍵交換プロトコルバージョン2（IKEv2の）\"、STD 79、RFC 7296、DOI 10.17487 / RFC7296 、2014年10月、<http://www.rfc-editor.org/info/rfc7296>。"
    },
    {
      "indent": 0,
      "text": "6.2. Informative References",
      "section_title": true,
      "ja": "6.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[EAI] Yang, A., Steele, S., and N. Freed, \"Internationalized Email Headers\", RFC 6532, DOI 10.17487/RFC6532, February 2012, <http://www.rfc-editor.org/info/rfc6532>.",
      "ja": "[EAI]ヤン、A.、スティール、S.、およびN.フリード、 \"国際電子メールヘッダ\"、RFC 6532、DOI 10.17487 / RFC6532、2012年2月、<http://www.rfc-editor.org/info/ rfc6532>。"
    },
    {
      "indent": 3,
      "text": "[IDNA] Klensin, J., \"Internationalized Domain Names for Applications (IDNA): Definitions and Document Framework\", RFC 5890, DOI 10.17487/RFC5890, August 2010, <http://www.rfc-editor.org/info/rfc5890>.",
      "ja": "[IDNA] Klensin、J.、 \"アプリケーション（IDNA）のための国際化ドメイン名：定義とドキュメントフレームワーク\"、RFC 5890、DOI 10.17487 / RFC5890、2010年8月、<http://www.rfc-editor.org/info/ rfc5890>。"
    },
    {
      "indent": 3,
      "text": "[IKEV2IANA] IANA, \"Internet Key Exchange Version 2 (IKEv2) Parameters\", <http://www.iana.org/assignments/ikev2-parameters>.",
      "ja": "[IKEV2IANA] IANA、 \"インターネット鍵交換バージョン2（IKEv2の）パラメータ\"、<http://www.iana.org/assignments/ikev2-parameters>。"
    },
    {
      "indent": 3,
      "text": "[IPSEARCH] Kent, S. and K. Seo, \"Security Architecture for the Internet Protocol\", RFC 4301, DOI 10.17487/RFC4301, December 2005, <http://www.rfc-editor.org/info/rfc4301>.",
      "ja": "[IPSEARCH]ケント、S.とK. Seo、 \"インターネットプロトコルのためのセキュリティアーキテクチャ\"、RFC 4301、DOI 10.17487 / RFC4301、2005年12月、<http://www.rfc-editor.org/info/rfc4301>。"
    },
    {
      "indent": 3,
      "text": "[Kiv11] Kivinen, T., \"Interconnecting Smart Objects with Internet Workshop 2011-03025; IKEv2 and Smart Objects\", March 2011, <https://www.iab.org/wp-content/IAB-uploads/2011/04/ Kivinen.pdf>.",
      "ja": "[Kiv11] Kivinen、T.、 \"インターネットワークショップ2011から03025でスマートオブジェクトの相互接続;のIKEv2とスマートオブジェクト\"、2011年3月、<https://www.iab.org/wp-content/IAB-uploads/2011/04 / Kivinen.pdf>。"
    },
    {
      "indent": 3,
      "text": "[MODES] National Institute of Standards and Technology, U.S. Department of Commerce, \"Recommendation for Block Cipher Modes of Operation\", SP 800-38A, 2001.",
      "ja": "[MODES]アメリカ国立標準技術研究所、米国商務省が、「操作のブロック暗号モードのための勧告」、SP 800-38A、2001。"
    },
    {
      "indent": 3,
      "text": "[PKCS1] Jonsson, J. and B. Kaliski, \"Public-Key Cryptography Standards (PKCS) #1: RSA Cryptography Specifications Version 2.1\", RFC 3447, DOI 10.17487/RFC3447, February 2003, <http://www.rfc-editor.org/info/rfc3447>.",
      "ja": "[PKCS1]ジョンソン、J.とB. Kaliski、 \"公開鍵暗号規格（PKCS）＃1：RSA暗号仕様バージョン2.1\"、RFC 3447、DOI 10.17487 / RFC3447、2003年2月、<のhttp：//www.rfc -editor.org/info/rfc3447>。"
    },
    {
      "indent": 3,
      "text": "[RFC5280] Cooper, D., Santesson, S., Farrell, S., Boeyen, S., Housley, R., and W. Polk, \"Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile\", RFC 5280, DOI 10.17487/RFC5280, May 2008, <http://www.rfc-editor.org/info/rfc5280>.",
      "ja": "[RFC5280]クーパー、D.、Santesson、S.、ファレル、S.、Boeyen、S.、Housley氏、R.、およびW.ポーク、「インターネットX.509公開鍵暗号基盤証明書と証明書失効リスト（CRL）のプロフィール」、RFC 5280、DOI 10.17487 / RFC5280、2008年5月、<http://www.rfc-editor.org/info/rfc5280>。"
    },
    {
      "indent": 3,
      "text": "[RFC5322] Resnick, P., Ed., \"Internet Message Format\", RFC 5322, DOI 10.17487/RFC5322, October 2008, <http://www.rfc-editor.org/info/rfc5322>.",
      "ja": "[RFC5322]レズニック、P.、エド。、 \"インターネットメッセージ形式\"、RFC 5322、DOI 10.17487 / RFC5322、2008年10月、<http://www.rfc-editor.org/info/rfc5322>。"
    },
    {
      "indent": 3,
      "text": "[RFC7228] Bormann, C., Ersue, M., and A. Keranen, \"Terminology for Constrained-Node Networks\", RFC 7228, DOI 10.17487/RFC7228, May 2014, <http://www.rfc-editor.org/info/rfc7228>.",
      "ja": "[RFC7228]ボルマン、C.、Ersue、M.、およびA. Keranen、 \"制約ノードのネットワークのための用語\"、RFC 7228、DOI 10.17487 / RFC7228、2014年5月、<http://www.rfc-editor.org /情報/ rfc7228>。"
    },
    {
      "indent": 3,
      "text": "[RFC7619] Smyslov, V. and P. Wouters, \"The NULL Authentication Method in the Internet Key Exchange Protocol Version 2 (IKEv2)\", RFC 7619, DOI 10.17487/RFC7619, August 2015, <http://www.rfc-editor.org/info/rfc7619>.",
      "ja": "[RFC7619] Smyslov、V.およびP. WOUTERS、 \"インターネット鍵交換プロトコルバージョン2（IKEv2の）中にNULL認証方法\"、RFC 7619、DOI 10.17487 / RFC7619、2015年8月、<のhttp：//www.rfc- editor.org/info/rfc7619>。"
    },
    {
      "indent": 3,
      "text": "[RFC7670] Kivinen, T., Wouters, P., and H. Tschofenig, \"Generic Raw Public-Key Support for IKEv2\", RFC 7670, DOI 10.17487/RFC7670, January 2016, <http://www.rfc-editor.org/info/rfc7670>.",
      "ja": "[RFC7670] Kivinen、T.、WOUTERS、P.、およびH. Tschofenig、 \"一般的な生の公開鍵のIKEv2のサポート\"、RFC 7670、DOI 10.17487 / RFC7670、2016年1月、<のhttp：//www.rfc-editor .ORG /情報/ rfc7670>。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Header and Payload Formats",
      "ja": "付録A.ヘッダとペイロードフォーマット"
    },
    {
      "indent": 3,
      "text": "This appendix describes actual packet payload formats. This is required to make the document self-contained. The descriptions are mostly copied from RFC 7296, and more information can be found from there.",
      "ja": "この付録では、実際のパケットのペイロードのフォーマットについて説明します。これは、文書は自己完結型にするために必要とされます。説明は、主にRFC 7296からコピーされ、より多くの情報がそこから見つけることができます。"
    },
    {
      "indent": 3,
      "text": "Various payloads contain RESERVED fields, and those MUST be sent as zero and MUST be ignored on receipt.",
      "ja": "様々なペイロードは予約フィールドを含み、それらは、ゼロとして送らなければならなくて、領収書の上で無視しなければなりません。"
    },
    {
      "indent": 3,
      "text": "All multi-octet fields representing integers are laid out in big endian order (also known as \"most significant byte first\" or \"network byte order\").",
      "ja": "整数を表すすべてのマルチオクテットのフィールドは、（また、「最も重要な最初のバイト」または「ネットワークバイト順序」として知られている）ビッグエンディアン順に配置されています。"
    },
    {
      "indent": 0,
      "text": "A.1. The IKE Header",
      "ja": "A.1。 IKEヘッダー"
    },
    {
      "indent": 3,
      "text": "Each IKEv2 message begins with the IKE header, denoted HDR in this document. Following the header are one or more IKE payloads each identified by a Next Payload field in the preceding payload. Payloads are identified in the order in which they appear in an IKE message by looking in the Next Payload field in the IKE header and, subsequently, according to the Next Payload field in the IKE payload itself until a Next Payload field of zero indicates that no payloads follow. If a payload of type \"Encrypted\" is found, that payload is decrypted and its contents parsed as additional payloads. An Encrypted payload MUST be the last payload in a packet, and an Encrypted payload MUST NOT contain another Encrypted payload.",
      "ja": "各IKEv2のメッセージは、IKEヘッダで始まり、この文書でHDRを表します。ヘッダに続いて、前のペイロード内の次のペイロードフィールドによって識別された1つのまたは複数のIKEペイロード各あります。ゼロの次にペイロードフィールドがないことを示すまでペイロードをIKEペイロード自体の次のペイロードフィールドに応じて、続いて、IKEヘッダ内の次のペイロードフィールドに探しによってそれらがIKEメッセージに表示される順序で同定されていますペイロードは続きます。タイプ「暗号化」のペイロードが見つかった場合、そのペイロードを解読し、その内容は、付加的なペイロードとして解析されます。暗号化されたペイロードは、パケットの最後のペイロードでなければならない、と暗号化されたペイロードは、別の暗号化されたペイロードを含めることはできません。"
    },
    {
      "indent": 3,
      "text": "The format of the IKE header is shown in Figure 1.",
      "ja": "IKEヘッダのフォーマットは図1に示されています。"
    },
    {
      "indent": 3,
      "text": "                     1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       IKE SA Initiator's SPI                  |\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       IKE SA Responder's SPI                  |\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Next Payload | MjVer | MnVer | Exchange Type |     Flags     |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          Message ID                           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                            Length                             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 20,
      "text": "Figure 1: IKE Header Format",
      "ja": "図1：IKEヘッダー形式"
    },
    {
      "indent": 3,
      "text": "o Initiator's SPI (8 octets) - A value chosen by the initiator to identify a unique IKE Security Association. This value MUST NOT be zero.",
      "ja": "OイニシエータのSPI（8つのオクテット） - ユニークなIKEセキュリティアソシエーションを識別するために、イニシエータによって選択された値。この値がゼロであってはなりません。"
    },
    {
      "indent": 3,
      "text": "o Responder's SPI (8 octets) - A value chosen by the responder to identify a unique IKE Security Association. This value MUST be zero in the first message of an IKE initial exchange.",
      "ja": "OレスポンダのSPI（8つのオクテット） - ユニークなIKEセキュリティアソシエーションを識別するために応答者によって選ばれた値。この値は、IKE初期の交換の最初のメッセージでゼロでなければなりません。"
    },
    {
      "indent": 3,
      "text": "o Next Payload (1 octet) - Indicates the type of payload that immediately follows the header. The format and value of each payload are defined below.",
      "ja": "O次にペイロード（1つのオクテット） - 直ちにヘッダに続くペイロードのタイプを示します。各ペイロードのフォーマットと値を以下に定義します。"
    },
    {
      "indent": 3,
      "text": "o Major Version (4 bits) - Indicates the major version of the IKE protocol in use. Implementations based on this version of IKE MUST set the major version to 2 and MUST drop the messages with a higher major version number.",
      "ja": "Oメジャーバージョン（4ビット） - 使用中のIKEプロトコルのメジャーバージョンを示します。 IKEのこのバージョンに基づく実装は2へのメジャーバージョンを設定しなければなりませんし、より高いメジャーバージョン番号とメッセージを削除する必要があります。"
    },
    {
      "indent": 3,
      "text": "o Minor Version (4 bits) - Indicates the minor version of the IKE protocol in use. Implementations based on this version of IKE MUST set the minor version to zero. They MUST ignore the minor version number of received messages.",
      "ja": "Oマイナーバージョン（4ビット） - 使用中のIKEプロトコルのマイナーバージョンを示します。 IKEのこのバージョンに基づく実装はゼロにマイナーバージョンを設定しなければなりません。彼らは、受信したメッセージのマイナーバージョン番号を無視しなければなりません。"
    },
    {
      "indent": 3,
      "text": "o Exchange Type (1 octet) - Indicates the type of exchange being used. This constrains the payloads sent in each message in an exchange.",
      "ja": "O交換タイプ（1つのオクテット） - 使用されている為替のタイプを示します。これは、交換で、各メッセージで送信されたペイロードを制約します。"
    },
    {
      "indent": 6,
      "text": "Exchange Type             Value\n----------------------------------\nIKE_SA_INIT               34\nIKE_AUTH                  35\nCREATE_CHILD_SA           36\nINFORMATIONAL             37",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o Flags (1 octet) - Indicates specific options that are set for the message. Presence of options is indicated by the appropriate bit in the flags field being set. The bits are as follows:",
      "ja": "Oフラグ（1つのオクテット） - メッセージに設定されている特定のオプションを示します。オプションの存在は、フラグフィールドに適切なビットをセットすることによって示されています。次のようにビットです。"
    },
    {
      "indent": 8,
      "text": "+-+-+-+-+-+-+-+-+\n|X|X|R|V|I|X|X|X|\n+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 6,
      "text": "In the description below, a bit being 'set' means its value is '1', while 'cleared' means its value is '0'. 'X' bits MUST be cleared when sending and MUST be ignored on receipt.",
      "ja": "以下の説明では、「セット」されているビットは「クリア」しながら、その値が「1」であることを意味し、その値が「0」であることを意味します。 「X」のビットが送信するときにきれいにしなければなりません、領収書の上で無視しなければなりません。"
    },
    {
      "indent": 6,
      "text": "* R (Response) - This bit indicates that this message is a response to a message containing the same Message ID. This bit MUST be cleared in all request messages and MUST be set in all responses. An IKEv2 endpoint MUST NOT generate a response to a message that is marked as being a response.",
      "ja": "* R（応答） - このビットは、このメッセージが同じメッセージIDを含むメッセージに対する応答であることを示しています。このビットは、すべての要求メッセージでクリアする必要がありますし、すべての応答に設定しなければなりません。 IKEv2のエンドポイントは応答としてマークされたメッセージに対する応答を生成してはなりません。"
    },
    {
      "indent": 6,
      "text": "* V (Version) - This bit indicates that the transmitter is capable of speaking a higher major version number of the protocol than the one indicated in the Major Version field. Implementations of IKEv2 MUST clear this bit when sending and MUST ignore it in incoming messages.",
      "ja": "* V（バージョン） - このビットは、送信機がメジャーバージョンフィールドに示されているものよりもプロトコルのより高いメジャーバージョン番号を話すことが可能であることを示しています。 IKEv2のの実装は、送信するときに、このビットをクリアしなければならなくて、受信メッセージでそれを無視しなければなりません。"
    },
    {
      "indent": 6,
      "text": "* I (Initiator) - This bit MUST be set in messages sent by the original initiator of the IKE SA and MUST be cleared in messages sent by the original responder. It is used by the recipient to determine which 8 octets of the SPI were generated by the recipient. This bit changes to reflect who initiated the last rekey of the IKE SA.",
      "ja": "* I（イニシエータ） - このビットは、IKE SAの元のイニシエータによって送信されたメッセージで設定する必要があり、元のレスポンダによって送信されたメッセージでクリアする必要があります。 SPIの8つのオクテットは、受信者によって生成されたかを決定するために受信者によって使用されます。このビットの変更は、IKE SAの最後の再入力を開始した方が反映されます。"
    },
    {
      "indent": 3,
      "text": "o Message ID (4 octets, unsigned integer) - Message identifier used to control retransmission of lost packets and matching of requests and responses. It is essential to the security of the protocol because it is used to prevent message replay attacks.",
      "ja": "OメッセージID（4つのオクテット、符号なし整数） - 失われたパケットと要求および応答のマッチングの再送信を制御するために使用されるメッセージ識別子。メッセージリプレイ攻撃を防ぐために使用されているので、それはプロトコルのセキュリティに不可欠です。"
    },
    {
      "indent": 3,
      "text": "o Length (4 octets, unsigned integer) - Length of the total message (header + payloads) in octets.",
      "ja": "オクテット内の全メッセージ（ヘッダ+ペイロード）の長さ -  O長（4つのオクテット、符号なし整数）。"
    },
    {
      "indent": 0,
      "text": "A.2. Generic Payload Header",
      "ja": "A.2。ジェネリックペイロードヘッダー"
    },
    {
      "indent": 3,
      "text": "Each IKE payload begins with a generic payload header, as shown in Figure 2. Figures for each payload below will include the generic payload header, but for brevity, the description of each field will be omitted.",
      "ja": "以下、各ペイロード2.数値は汎用ペイロード・ヘッダを含むであろう。図に示すように、各IKEペイロードは、汎用ペイロード・ヘッダで始まり、しかし簡潔にするために、各フィールドの説明は省略する。"
    },
    {
      "indent": 3,
      "text": "                     1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| Next Payload  |C|  RESERVED   |         Payload Length        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 22,
      "text": "Figure 2: Generic Payload Header",
      "ja": "図2：一般的なペイロードヘッダ"
    },
    {
      "indent": 3,
      "text": "The Generic Payload Header fields are defined as follows:",
      "ja": "次のようにジェネリックペイロードヘッダーフィールドが定義されています。"
    },
    {
      "indent": 3,
      "text": "o Next Payload (1 octet) - Identifier for the payload type of the next payload in the message. If the current payload is the last in the message, then this field will be zero. This field provides a \"chaining\" capability whereby additional payloads can be added to a message by appending each one to the end of the message and setting the Next Payload field of the preceding payload to indicate the new payload's type. An Encrypted payload, which must always be the last payload of a message, is an exception. It contains data structures in the format of additional payloads. In the header of an Encrypted payload, the Next Payload field is set to the payload type of the first contained payload (instead of zero); conversely, the Next Payload field of the last contained payload is set to zero). The payload type values needed for minimal implementations are listed here.",
      "ja": "O次にペイロード（1つのオクテット） - メッセージの次のペイロードのペイロードタイプの識別子。現在のペイロードがメッセージの最後である場合、このフィールドはゼロになります。このフィールドは、追加のペイロードは、メッセージの最後にそれぞれを追加し、新たなペイロードのタイプを示すために、先行ペイロードの次ペイロードフィールドを設定することにより、メッセージに追加することができる「連鎖」能力を提供します。常にメッセージの最後のペイロードでなければならない暗号化されたペイロードは、例外です。これは、追加のペイロードのフォーマットでデータ構造が含まれています。暗号化されたペイロードのヘッダに、次にペイロードフィールドは、（代わりにゼロの）最初含まペイロードのペイロードタイプに設定されています。逆に、最後に含まれるペイロードの次ペイロードフィールドはゼロに設定されます）。最小限の実装に必要なペイロードタイプの値は、ここに記載されています。"
    },
    {
      "indent": 6,
      "text": "Next Payload Type                Notation  Value\n--------------------------------------------------\nNo Next Payload                             0\nSecurity Association             SA         33\nKey Exchange                     KE         34\nIdentification - Initiator       IDi        35\nIdentification - Responder       IDr        36\nCertificate                      CERT       37\nCertificate Request              CERTREQ    38\nAuthentication                   AUTH       39\nNonce                            Ni, Nr     40\nNotify                           N          41\nDelete                           D          42\nTraffic Selector - Initiator     TSi        44\nTraffic Selector - Responder     TSr        45\nEncrypted and Authenticated      SK         46",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o Critical (1 bit) - MUST be set to zero if the sender wants the recipient to skip this payload if it does not understand the payload type code in the Next Payload field of the previous payload. MUST be set to 1 if the sender wants the recipient to reject this entire message if it does not understand the payload type. MUST be ignored by the recipient if the recipient understands the payload type code. MUST be set to zero for payload types defined in this document. Note that the critical bit applies to the current payload rather than the \"next\" payload whose type code appears in the first octet.",
      "ja": "Oクリティカル（1ビット） - 送信者は、以前のペイロードの次ペイロードフィールドにペイロードタイプコードを理解しない場合、受信者は、このペイロードをスキップしたい場合は、ゼロに設定しなければなりません。送信者は、それはペイロードタイプを理解していない場合は、受信者がこのメッセージ全体を拒否したい場合は、1に設定しなければなりません。受信者はペイロードタイプコードを理解している場合、受信者は無視しなければなりません。この文書で定義されたペイロードタイプのためにゼロに設定しなければなりません。重要なビットではなくタイプコード最初のオクテットに表示されます「次」のペイロードよりも、現在のペイロードに適用されることに注意してください。"
    },
    {
      "indent": 3,
      "text": "o Payload Length (2 octets, unsigned integer) - Length in octets of the current payload, including the generic payload header.",
      "ja": "Oペイロード長（2つのオクテットの符号なし整数） - 現在のペイロードのオクテットの長さ、ジェネリックペイロードヘッダーを含みます。"
    },
    {
      "indent": 0,
      "text": "A.3. Security Association Payload",
      "ja": "A.3。 SAペイロード"
    },
    {
      "indent": 3,
      "text": "The Security Association payload, denoted SA in this document, is used to negotiate attributes of a Security Association.",
      "ja": "セキュリティアソシエーションペイロードは、本文書にSAを表す、セキュリティアソシエーションの属性を交渉するために使用されます。"
    },
    {
      "indent": 3,
      "text": "An SA payload consists of one or more proposals. Each proposal includes one protocol. Each protocol contains one or more transforms -- each specifying a cryptographic algorithm. Each transform contains zero or more attributes (attributes are needed only if the Transform ID does not completely specify the cryptographic algorithm; currently, the only attribute is the Key Length attribute for variable-length ciphers, meaning there is exactly zero or one attribute).",
      "ja": "SAペイロードは、一の以上の提​​案で構成されています。各提案は1つのプロトコルが含まれています。暗号化アルゴリズムを指定する各 - 各プロトコルは、一つ以上の変換を含んでいます。 。それぞれは、ゼロ以上の属性含まれています（;現在、唯一の属性が正確にゼロまたは1つの属性がある意味、可変長暗号のキーの長さ属性である属性が必要とされているトランスフォームIDが完全に暗号化アルゴリズムを指定していない場合のみ）変換します"
    },
    {
      "indent": 3,
      "text": "The responder MUST choose a single suite, which may be any subset of the SA proposal following the rules below.",
      "ja": "レスポンダは、以下の規則以下SA提案の任意のサブセットであってもよい単一のスイートを選択する必要があります。"
    },
    {
      "indent": 3,
      "text": "Each proposal contains one protocol. If a proposal is accepted, the SA response MUST contain the same protocol. Each IPsec protocol proposal contains one or more transforms. Each transform contains a Transform Type. The accepted cryptographic suite MUST contain exactly one transform of each type included in the proposal. For example: if an ESP proposal includes transforms ENCR_3DES, ENCR_AES w/keysize 128, ENCR_AES w/keysize 256, AUTH_HMAC_MD5, and AUTH_HMAC_SHA, the accepted suite MUST contain one of the ENCR_ transforms and one of the AUTH_ transforms. Thus, six combinations are acceptable.",
      "ja": "各提案は、1つのプロトコルが含まれています。提案が受け入れられた場合、SA応答は、同じプロトコルを含まなければなりません。各IPsecプロトコルの提案は、一の以上の変換が含まれています。各トランスフォームタイプが含まれています変換します。受け入れられた暗号スイートは正確に一つの提案に含まれる各タイプの変換を含まなければなりません。例えば：ENCR_3DES、ENCR_AES 128をキーサイズ/ W、ENCR_AES 256、AUTH_HMAC_MD5、及びAUTH_HMAC_SHAをキーサイズ/ Wを変換ESPの提案が含まれている場合、受け入れられたスイートはENCR_変換の一方とAUTH_の変換を含まなければなりません。このように、6つの組み合わせが許容可能です。"
    },
    {
      "indent": 3,
      "text": "Minimal implementation can create very simple SA proposal, i.e., include one proposal, which contains exactly one transform for each Transform Type. It is important to only include one Diffie-Hellman group in the proposal, so there is no need to do INVALID_KE_PAYLOAD processing in responses.",
      "ja": "最小限の実装は非常に単純なSAの案を作成することができ、すなわち、正確に一つの各変換タイプのための変換が含ま1つの提案を、含まれています。提案で1のDiffie-Hellmanグループを含めるだけに重要であり、その応答でINVALID_KE_PAYLOAD処理を行う必要はありません。"
    },
    {
      "indent": 3,
      "text": "When parsing an SA, an implementation MUST check that the total Payload Length is consistent with the payload's internal lengths and counts. Proposals, Transforms, and Attributes each have their own variable-length encodings. They are nested such that the Payload Length of an SA includes the combined contents of the SA, Proposal, Transform, and Attribute information. The length of a Proposal includes the lengths of all Transforms and Attributes it contains. The length of a Transform includes the lengths of all Attributes it contains.",
      "ja": "SAを解析する場合、実装は総ペイロード長は、ペイロードの内部の長さと数と一致していることをチェックしなければなりません。提案、トランスフォーム、および属性はそれぞれ独自の可変長符号化を持っています。彼らは、SAのペイロード長がSAの組み合わせ内容を含むようにネストされ、提案は、変換、及び属性情報。提案の長さは、全ての変換の長さを含み、それに含まれる属性。変換の長さは、それに含まれるすべての属性の長さを含みます。"
    },
    {
      "indent": 3,
      "text": "Each Proposal/Protocol structure is followed by one or more transform structures. The number of different transforms is generally determined by the Protocol. AH generally has two transforms: Extended Sequence Numbers (ESNs) and an integrity check algorithm.",
      "ja": "各提案は、/プロトコル構造は、1つ以上の構造を変革が続いています。異なる変換の数は、一般的にプロトコルによって決定されます。拡張シーケンス番号（のESN）と整合性チェックアルゴリズム：AH、一般的に2つの変換があります。"
    },
    {
      "indent": 3,
      "text": "ESP generally has three: ESN, an encryption algorithm, and an integrity check algorithm. IKEv2 generally has four transforms: a Diffie-Hellman group, an integrity check algorithm, a PRF algorithm, and an encryption algorithm. For each Protocol, the set of permissible transforms is assigned Transform ID numbers, which appear in the header of each transform.",
      "ja": "ESN、暗号化アルゴリズム、および整合性チェックアルゴリズム：ESPは、一般的に3つのがあります。 Diffie-Hellmanグループ、整合性チェックアルゴリズム、PRFアルゴリズム、および暗号化アルゴリズム：IKEv2のは、一般に、4つの変換を持っています。各プロトコルに対して、許容変換のセットは、変換毎のヘッダに表示されるID番号を、変換が割り当てられます。"
    },
    {
      "indent": 3,
      "text": "If there are multiple transforms with the same Transform Type, the proposal is an OR of those transforms. If there are multiple transforms with different Transform Types, the proposal is an AND of the different groups.",
      "ja": "同じトランスフォームタイプを持つ複数の変換がある場合は、提案は、これらの変換のORです。トランスフォーム異なる種類の複数の変換がある場合は、この提案は、異なるグループのANDです。"
    },
    {
      "indent": 3,
      "text": "A given transform MAY have one or more Attributes. Attributes are necessary when the transform can be used in more than one way, as when an encryption algorithm has a variable key size. The transform would specify the algorithm, and the attribute would specify the key size. To propose alternate values for an attribute (for example, multiple key sizes for the AES encryption algorithm), an implementation MUST include multiple transforms with the same Transform Type each with a single Attribute.",
      "ja": "変換与えられた1つ以上の属性を持っているかもしれません。暗号化アルゴリズムは、変数のキーサイズを持っているときのように、複数の方法で使用することができたときに変換属性が必要です。変換アルゴリズムを指定することになり、そして属性がキーサイズを指定します。属性の代替値を提案すること（例えば、AES暗号化アルゴリズムのための複数のキーのサイズ）は、実装は、単一の属性と同じ変換タイプそれぞれ有する複数の変換を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "                     1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| Next Payload  |C|  RESERVED   |         Payload Length        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n~                          <Proposals>                          ~\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 12,
      "text": "Figure 3: Security Association Payload",
      "ja": "図3：SAペイロード"
    },
    {
      "indent": 3,
      "text": "o Proposals (variable) - One or more proposal substructures.",
      "ja": "Oの提案（変数） -  1つの以上の提​​案の基礎構造。"
    },
    {
      "indent": 0,
      "text": "A.3.1. Proposal Substructure",
      "ja": "A.3.1。提案下部構造"
    },
    {
      "indent": 3,
      "text": "                     1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| 0 (last) or 2 |   RESERVED    |         Proposal Length       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| Proposal Num  |  Protocol ID  |    SPI Size   |Num  Transforms|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n~                        SPI (variable)                         ~\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n~                        <Transforms>                           ~\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 12,
      "text": "Figure 4: Proposal Substructure",
      "ja": "図4：提案部分構造"
    },
    {
      "indent": 3,
      "text": "o 0 (last) or 2 (more) (1 octet) - Specifies whether this is the last Proposal Substructure in the SA.",
      "ja": "（もっと）0（最後）または2 O（1つのオクテット） - これはSA内の最後の提案下部構造であるかどうかを指定します。"
    },
    {
      "indent": 3,
      "text": "o Proposal Length (2 octets, unsigned integer) - Length of this proposal, including all transforms and attributes that follow.",
      "ja": "O提案長（2つのオクテットの符号なし整数） - この提案の長さ、続くすべての変換及び属性を含みます。"
    },
    {
      "indent": 3,
      "text": "o Proposal Num (1 octet) - When a proposal is made, the first proposal in an SA payload MUST be 1, and subsequent proposals MUST be one more than the previous proposal. When a proposal is accepted, the proposal number in the SA payload MUST match the number on the proposal sent that was accepted.",
      "ja": "O提案テンキー（1つのオクテット） - 提案がなされた場合、SAペイロードの最初の提案は1でなければなりません、そして後続の提案が前の提案よりも1つ多くなければなりません。提案が受け入れられると、SAペイロード内の提案の数が受け入れられた送られた提案の数と一致しなければなりません。"
    },
    {
      "indent": 3,
      "text": "o Protocol ID (1 octet) - Specifies the IPsec protocol identifier for the current negotiation.",
      "ja": "OプロトコルID（1オクテット） - 現在の交渉のためのIPsecプロトコル識別子を指定します。"
    },
    {
      "indent": 6,
      "text": "Protocol                Protocol ID\n-----------------------------------\nIKE                     1\nAH                      2\nESP                     3",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o SPI Size (1 octet) - For an initial IKE SA negotiation, this field MUST be zero; the SPI is obtained from the outer header. During subsequent negotiations, it is equal to the size, in octets, of the SPI of the corresponding protocol (8 for IKE and 4 for ESP and AH).",
      "ja": "O SPIサイズ（1つのオクテット） - 最初のIKE SAのネゴシエーションの場合、このフィールドはゼロでなければなりません。 SPIは、外部ヘッダから取得されます。その後のネゴシエーション中に、それは、（ESPおよびAHのためのIKE 8及び4）は、対応するプロトコルのSPIのオクテットで、サイズに等しいです。"
    },
    {
      "indent": 3,
      "text": "o Num Transforms (1 octet) - Specifies the number of transforms in this proposal.",
      "ja": "O民変換（1つのオクテット） - この提案における変換の数を指定します。"
    },
    {
      "indent": 3,
      "text": "o SPI (variable) - The sending entity's SPI. When the SPI Size field is zero, this field is not present in the Security Association payload.",
      "ja": "O SPI（変数） - 送信側エンティティのSPI。 SPIサイズフィールドがゼロの場合、このフィールドは、セキュリティアソシエーションペイロードに存在しません。"
    },
    {
      "indent": 3,
      "text": "o Transforms (variable) - One or more transform substructures.",
      "ja": "O変換（変数） -  1つ以上のサブ構造を変換します。"
    },
    {
      "indent": 0,
      "text": "A.3.2. Transform Substructure",
      "ja": "A.3.2。部分構造を変革"
    },
    {
      "indent": 3,
      "text": "                     1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| 0 (last) or 3 |   RESERVED    |        Transform Length       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|Transform Type |   RESERVED    |          Transform ID         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n~                      Transform Attributes                     ~\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 12,
      "text": "Figure 5: Transform Substructure",
      "ja": "図5：部分構造を変革"
    },
    {
      "indent": 3,
      "text": "o 0 (last) or 3 (more) (1 octet) - Specifies whether this is the last Transform Substructure in the Proposal.",
      "ja": "O（最後）または3（より）（1つのオクテット）0  - この提案の最後の変換部分構造であるかどうかを指定します。"
    },
    {
      "indent": 3,
      "text": "o Transform Length - The length (in octets) of the Transform Substructure including Header and Attributes.",
      "ja": "ヘッダおよび属性を含む変換部分構造の（オクテット）長さ -  O変換長。"
    },
    {
      "indent": 3,
      "text": "o Transform Type (1 octet) - The type of transform being specified in this transform. Different protocols support different Transform Types. For some protocols, some of the transforms may be optional. If a transform is optional and the initiator wishes to propose that the transform be omitted, no transform of the given type is included in the proposal. If the initiator wishes to make use of the transform optional to the responder, it includes a transform substructure with Transform ID = 0 as one of the options.",
      "ja": "この変換に指定された変換のタイプ -  Oタイプ（1オクテット）を形質転換。異なるプロトコルは異なる変換タイプをサポートしています。いくつかのプロトコルでは、変換のいくつかは任意です。変換オプションであり、開始剤は省略しても変換することを提案したい場合は、提案に含まれている所与のタイプの変換ありません。イニシエータがレスポンダに、オプションの変換を利用することを希望する場合は、オプションの1つとしてID = 0を変換して下部を変換含まれています。"
    },
    {
      "indent": 3,
      "text": "o Transform ID (2 octets) - The specific instance of the Transform Type being proposed.",
      "ja": "O ID（2つのオクテット）トランス - トランス型の特定のインスタンスが提案されています。"
    },
    {
      "indent": 3,
      "text": "The relevant Transform Type values are listed below. For more information see [RFC7296].",
      "ja": "関連するトランスフォームタイプ値は以下のとおりです。詳細については、[RFC7296]を参照してください。"
    },
    {
      "indent": 3,
      "text": "Description                     Trans.  Used In\n                                Type\n------------------------------------------------------------------\nEncryption Algorithm (ENCR)     1       IKE and ESP\nPseudorandom Function (PRF)     2       IKE\nIntegrity Algorithm (INTEG)     3       IKE, AH, optional in ESP\nDiffie-Hellman group (D-H)      4       IKE, optional in AH & ESP\nExtended Sequence Numbers (ESN) 5       AH and ESP",
      "raw": true
    },
    {
      "indent": 3,
      "text": "For Transform Type 1 (Encryption Algorithm), the relevant Transform IDs are listed below.",
      "ja": "変換タイプ1（暗号アルゴリズム）のために、関連するトランスフォームIDが以下に記載されています。"
    },
    {
      "indent": 3,
      "text": "Name                 Number\n---------------------------\nENCR_AES_CBC         12\nENCR_AES-CCM_8       14",
      "raw": true
    },
    {
      "indent": 3,
      "text": "For Transform Type 2 (Pseudorandom Function), the relevant Transform IDs are listed below.",
      "ja": "タイプ2（擬似ランダム関数）を形質転換するために、関連するトランスフォームIDが以下に記載されています。"
    },
    {
      "indent": 3,
      "text": "Name                        Number\n----------------------------------\nPRF_HMAC_SHA1               2",
      "raw": true
    },
    {
      "indent": 3,
      "text": "For Transform Type 3 (Integrity Algorithm), the relevant Transform IDs are listed below.",
      "ja": "変換タイプ3（インテグリティアルゴリズム）のために、関連するトランスフォームIDが以下に記載されています。"
    },
    {
      "indent": 3,
      "text": "Name                 Number\n---------------------------\nAUTH_HMAC_SHA1_96    2\nAUTH_AES_XCBC_96     5",
      "raw": true
    },
    {
      "indent": 3,
      "text": "For Transform Type 4 (Diffie-Hellman group), the relevant Transform IDs are listed below.",
      "ja": "変換タイプ4（のDiffie-Hellmanグループ）のために、関連するトランスフォームIDが以下に記載されています。"
    },
    {
      "indent": 3,
      "text": "Name               Number\n-------------------------\n1536-bit MODP      5\n2048-bit MODP      14",
      "raw": true
    },
    {
      "indent": 3,
      "text": "For Transform Type 5 (Extended Sequence Numbers), the relevant Transform IDs are listed below.",
      "ja": "タイプ5（拡張シーケンス番号）を形質転換するために、関連するトランスフォームIDが以下に記載されています。"
    },
    {
      "indent": 3,
      "text": "Name                               Number\n--------------------------------------------\nNo Extended Sequence Numbers       0\nExtended Sequence Numbers          1",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Note that an initiator who supports ESNs will usually include two ESN transforms, with values \"0\" and \"1\", in its proposals. A proposal containing a single ESN transform with value \"1\" means that using normal (non-extended) sequence numbers is not acceptable.",
      "ja": "ESNをサポートしているイニシエータは通常2 ESNはその提案には、値が「0」と「1」と、変換が含まれることに注意してください。値「1」に変換する単一のESNを含む提案は、（非拡張）通常のシーケンス番号を使用することは受け入れられないことを意味します。"
    },
    {
      "indent": 0,
      "text": "A.3.3. Valid Transform Types by Protocol",
      "ja": "A.3.3。プロトコルによって有効な変換タイプ"
    },
    {
      "indent": 3,
      "text": "The number and type of transforms that accompany an SA payload are dependent on the protocol in the SA itself. An SA payload proposing the establishment of an SA has the following mandatory and optional Transform Types. A compliant implementation MUST understand all mandatory and optional types for each protocol it supports (though it need not accept proposals with unacceptable suites). A proposal MAY omit the optional types if the only value for them it will accept is NONE.",
      "ja": "SAペイロードを伴う変換の数と種類は、SA自体はプロトコルに依存しています。 SAの確立を提案SAペイロードは、以下の必須およびオプションの変換タイプがあります。 （それが受け入れられないのスイートとの提案を受け入れる必要はありませんが）準拠の実装は、それがサポートするプロトコルごとに、すべての必須およびオプションのタイプを理解しなければなりません。それは受け入れる彼らのためにのみ値がNoneの場合提案は、オプションの種類を省略することができます。"
    },
    {
      "indent": 3,
      "text": "Protocol    Mandatory Types          Optional Types\n---------------------------------------------------\nIKE         ENCR, PRF, INTEG, D-H\nESP         ENCR, ESN                INTEG, D-H\nAH          INTEG, ESN               D-H",
      "raw": true
    },
    {
      "indent": 0,
      "text": "A.3.4. Transform Attributes",
      "ja": "A.3.4。属性の変換"
    },
    {
      "indent": 3,
      "text": "Transform Type 1 (Encryption Algorithm) transforms might include one transform attribute: Key Length.",
      "ja": "キーの長さを：タイプ1を変換（暗号化アルゴリズム）は、変換は、1つの属性を変換含まれる場合があります。"
    },
    {
      "indent": 3,
      "text": "                     1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|1|       Attribute Type        |        Attribute Value        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 19,
      "text": "Figure 6: Data Attributes",
      "ja": "図6：データ属性"
    },
    {
      "indent": 3,
      "text": "o Attribute Type (15 bits) - Unique identifier for each type of attribute (see below).",
      "ja": "O属性タイプ（15ビット） - 属性の種類ごとに一意の識別子（以下を参照）。"
    },
    {
      "indent": 3,
      "text": "o Attribute Value - Value of the attribute associated with the attribute type.",
      "ja": "O属性値 - 属性型に関連付けられている属性の値。"
    },
    {
      "indent": 3,
      "text": "Attribute Type         Value\n----------------------------\nKey Length (in bits)   14",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The Key Length attribute specifies the key length in bits (MUST use network byte order) for certain transforms as follows:",
      "ja": "次のようにキーの長さ属性は、特定の変換のためのビットでキーの長さを（ネットワークバイトオーダーを使用しなければならない）を指定します："
    },
    {
      "indent": 3,
      "text": "o The Key Length attribute MUST NOT be used with transforms that use a fixed-length key.",
      "ja": "Oキーの長さ属性は、固定長キーを使用して変換して使用してはいけません。"
    },
    {
      "indent": 3,
      "text": "o Some transforms specify that the Key Length attribute MUST be always included. For example, ENCR_AES_CBC.",
      "ja": "Oいくつかの変換は、キーの長さ属性が常に含まなければならないことを指定します。例えば、ENCR_AES_CBC。"
    },
    {
      "indent": 0,
      "text": "A.4. Key Exchange Payload",
      "ja": "A.4。鍵交換ペイロード"
    },
    {
      "indent": 3,
      "text": "                     1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| Next Payload  |C|  RESERVED   |         Payload Length        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   Diffie-Hellman Group Num    |           RESERVED            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n~                       Key Exchange Data                       ~\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 13,
      "text": "Figure 7: Key Exchange Payload Format",
      "ja": "図7：鍵交換ペイロードフォーマット"
    },
    {
      "indent": 3,
      "text": "A Key Exchange payload is constructed by copying one's Diffie-Hellman public value into the \"Key Exchange Data\" portion of the payload. The length of the Diffie-Hellman public value for modular exponentiation groups (MODPs) MUST be equal to the length of the prime modulus over which the exponentiation was performed, prepending zero bits to the value if necessary.",
      "ja": "鍵交換ペイロードは、ペイロードの「鍵交換データ」の部分に自分ののDiffie-Hellman公開値をコピーすることによって構築されます。べき乗剰余基（MODPs）にDiffie-Hellman公開値の長さは、べき乗を、必要に応じた値にゼロ・ビットを付加、行った先のプライムモジュラスの長さに等しくなければなりません。"
    },
    {
      "indent": 3,
      "text": "The Diffie-Hellman Group Num identifies the Diffie-Hellman group in which the Key Exchange Data was computed. This Diffie-Hellman Group Num MUST match a Diffie-Hellman group specified in a proposal in the SA payload that is sent in the same message.",
      "ja": "Diffie-HellmanのグループのNumキーExchangeデータが計算されたのDiffie-Hellmanグループを識別する。これのDiffie-HellmanのグループのNumは同じメッセージで送信されたSAペイロードに提案に指定されたDiffie-Hellmanグループと一致しなければなりません。"
    },
    {
      "indent": 0,
      "text": "A.5. Identification Payloads",
      "ja": "A.5。識別ペイロード"
    },
    {
      "indent": 3,
      "text": "The Identification payloads, denoted IDi and IDr in this document, allow peers to assert an identity to one another. When using the ID_IPV4_ADDR/ID_IPV6_ADDR identity types in IDi/IDr payloads, IKEv2 does not require this address to match the address in the IP header of IKEv2 packets or anything in the TSi/TSr payloads. The contents of IDi/IDr are used purely to fetch the policy and authentication data related to the other party. In minimal implementation, it might be easiest to always use KEY_ID type. This allows the ID payload to be static. Using an IP address has problems in environments where IP addresses are dynamically allocated.",
      "ja": "識別ペイロードは、ピアが相互にアイデンティティを主張することができ、この文書でIDiとし、IDRを表します。 IDiと/ IDRペイロードでID_IPV4_ADDR / ID_IPV6_ADDRのIDタイプを使用する場合は、IKEv2のはをTSi /のTSRペイロードでのIKEv2パケットか何かのIPヘッダ内のアドレスと一致するように、このアドレスを必要としません。 IDiと/ IDRの内容は、他の当事者に関連するポリシーと認証データをフェッチするために純粋に使用されています。最小限の実装では、それは常にKEY_ID型を使用するのが最も簡単かもしれません。これは、IDペイロードが静的にすることができます。 IPアドレスを使用すると、IPアドレスが動的に割り当てられている環境では問題があります。"
    },
    {
      "indent": 3,
      "text": "                     1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| Next Payload  |C|  RESERVED   |         Payload Length        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   ID Type     |                 RESERVED                      |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n~                   Identification Data                         ~\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 12,
      "text": "Figure 8: Identification Payload Format",
      "ja": "図8：識別ペイロードフォーマット"
    },
    {
      "indent": 3,
      "text": "o ID Type (1 octet) - Specifies the type of Identification being used.",
      "ja": "O IDタイプ（1つのオクテット） - 使用されている識別のタイプを指定します。"
    },
    {
      "indent": 3,
      "text": "o Identification Data (variable length) - Value, as indicated by the Identification Type. The length of the Identification Data is computed from the size in the ID payload header.",
      "ja": "O識別データ（可変長） - 識別タイプによって示されるように値。識別データの長さはIDペイロードヘッダの寸法から計算されます。"
    },
    {
      "indent": 3,
      "text": "The following table lists the assigned semantics for the Identification Type field.",
      "ja": "次の表は、識別Typeフィールドに割り当てられた意味を示しています。"
    },
    {
      "indent": 3,
      "text": "ID Type                           Value\n-------------------------------------------------------------------\nID_IPV4_ADDR                        1\n   A single four (4) octet IPv4 address.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ID_FQDN 2 A fully qualified domain name string. An example of an ID_FQDN is \"example.com\". The string MUST NOT contain any terminators (e.g., NULL, CR, etc.). All characters in the ID_FQDN are ASCII; for an \"internationalized domain name\", the syntax is as defined in [IDNA], for example, \"xn--tmonesimerkki-bfbb.example.net\".",
      "ja": "ID_FQDN 2完全修飾ドメイン名の文字列。 ID_FQDNの例は、「example.com」です。文字列は、任意のターミネーター（例えば、NULL、CRなど）を含んでいてはなりません。 ID_FQDNのすべての文字はASCIIです。 [IDNA]で定義されるように「国際化ドメイン名」のために、シンタックスは、例えば、「xn--tmonesimerkki-bfbb.example.net」、です。"
    },
    {
      "indent": 3,
      "text": "ID_RFC822_ADDR 3 A fully qualified RFC 822 email address string based [RFC5322]. An example of an ID_RFC822_ADDR is \"jsmith@example.com\". The string MUST NOT contain any terminators. Because of [EAI], implementations would be wise to treat this field as UTF-8-encoded text, not as pure ASCII.",
      "ja": "ID_RFC822_ADDR 3ベースの完全修飾RFC 822のメールアドレス文字列[RFC5322]。 ID_RFC822_ADDRの例は、「jsmith@example.com」です。文字列には任意のターミネータを含めることはできません。 [EAI]のので、実装は、UTF-8でエンコードされたテキスト、純粋なASCIIではないとして、この分野の治療のために賢明だろう。"
    },
    {
      "indent": 3,
      "text": "ID_IPV6_ADDR 5 A single sixteen (16) octet IPv6 address.",
      "ja": "ID_IPV6_ADDR 5つの16（16）オクテットのIPv6アドレス。"
    },
    {
      "indent": 3,
      "text": "ID_KEY_ID 11 An opaque octet stream that may be used to pass vendor-specific information necessary to do certain proprietary types of identification. Minimal implementation might use this type to send out a serial number or similar device-specific unique static Identification Data for the device.",
      "ja": "ID_KEY_ID 11識別の特定の独自の種類を行うために必要なベンダー固有の情報を渡すために使用することができる不透明なオクテットストリーム。最小限の実装では、デバイスのシリアル番号または同様のデバイス固有の一意の静的識別データを送信するために、このタイプを使用する場合があります。"
    },
    {
      "indent": 0,
      "text": "A.6. Certificate Payload",
      "ja": "A.6。証明書ペイロード"
    },
    {
      "indent": 3,
      "text": "                     1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| Next Payload  |C|  RESERVED   |         Payload Length        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| Cert Encoding |                                               |\n+-+-+-+-+-+-+-+-+                                               |\n~                       Certificate Data                        ~\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 13,
      "text": "Figure 9: Certificate Payload Format",
      "ja": "図9：証明書ペイロードフォーマット"
    },
    {
      "indent": 3,
      "text": "o Certificate Encoding (1 octet) - This field indicates the type of certificate or certificate-related information contained in the Certificate Data field.",
      "ja": "O証明書エンコーディング（1つのオクテット） - このフィールドは、証明書または証明書データフィールドに含まれる証明書に関連する情報のタイプを示します。"
    },
    {
      "indent": 6,
      "text": "Certificate Encoding                 Value\n----------------------------------------------------\nX.509 Certificate - Signature        4\nRaw Public Key                       15",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o Certificate Data (variable length) - Actual encoding of certificate data. The type of certificate is indicated by the Certificate Encoding field.",
      "ja": "O証明書データ（可変長） - 証明書データの実際のエンコーディング。証明書の種類は、証明書エンコーディングフィールドで示されています。"
    },
    {
      "indent": 3,
      "text": "The syntax of the types above are:",
      "ja": "上記のタイプの構文は以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "o \"X.509 Certificate - Signature\" contains a DER-encoded X.509 certificate whose public key is used to validate the sender's AUTH payload. Note that with this encoding, if a chain of certificates needs to be sent, multiple CERT payloads are used, only the first of which holds the public key used to validate the sender's AUTH payload.",
      "ja": "O「X.509証明書 - 署名」とは、その公開鍵を送信者のAUTHペイロードを検証するために使用されるDERエンコードされたX.509証明書が含まれています。送信者のAUTHペイロードを検証するために使用される公開鍵を保持している唯一の最初のもの、証明書のチェーンを送信する必要がある場合は、このエンコーディングで、複数のCERTペイロードが使用されていることに注意してください。"
    },
    {
      "indent": 3,
      "text": "o \"Raw Public Key\" contains a raw public key. In essence, the Certificate Payload contains the SubjectPublicKeyInfo part of the PKIX Certificate (see Section 4.1.2.7 of [RFC5280]). This is a quite simple ASN.1 object that contains mostly static parts before the actual public key values. See [RFC7670] for more information.",
      "ja": "O「生の公開鍵は、」生の公開鍵が含まれています。本質的には、証明書ペイロードは、PKIX証明書のSubjectPublicKeyInfoでの一部が含まれています（[RFC5280]のセクション4.1.2.7を参照）。これは、実際のパブリックキーの値の前にほとんどが静的な部分が含まれている非常にシンプルASN.1オブジェクトです。詳細については、[RFC7670]を参照してください。"
    },
    {
      "indent": 0,
      "text": "A.7. Certificate Request Payload",
      "ja": "A.7。証明書要求ペイロード"
    },
    {
      "indent": 3,
      "text": "                     1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| Next Payload  |C|  RESERVED   |         Payload Length        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| Cert Encoding |                                               |\n+-+-+-+-+-+-+-+-+                                               |\n~                    Certification Authority (CA)               ~\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 9,
      "text": "Figure 10: Certificate Request Payload Format",
      "ja": "図10：証明書要求ペイロードのフォーマット"
    },
    {
      "indent": 3,
      "text": "o Certificate Encoding (1 octet) - Contains an encoding of the type or format of certificate requested.",
      "ja": "O証明書エンコーディング（1つのオクテット） - 要求された証明書の種類または形式の符号化を含んでいます。"
    },
    {
      "indent": 3,
      "text": "o Certification Authority (variable length) - Contains an encoding of an acceptable certification authority for the type of certificate requested.",
      "ja": "O証明機関（可変長） - 要求された証明書の種類に許容認証局のエンコードが含まれています。"
    },
    {
      "indent": 3,
      "text": "The Certificate Encoding field has the same values as those defined by the certificate payload. The Certification Authority field contains an indicator of trusted authorities for this certificate type. The Certification Authority value is a concatenated list of SHA-1 hashes of the public keys of trusted Certification Authorities. Each is encoded as the SHA-1 hash of the Subject Public Key Info element (see Section 4.1.2.7 of [RFC5280]) from each Trust Anchor certificate. The 20-octet hashes are concatenated and included with no other formatting.",
      "ja": "証明書エンコーディングフィールドは、証明書ペイロードで定義したものと同じ値を持っています。認証局のフィールドには、この証明書の種類のための信頼できる当局の指標が含まれています。認証局値は、信頼できる認証局の公開鍵のSHA-1ハッシュの連結リストです。各々がサブジェクト公開鍵情報要素のSHA-1ハッシュとして符号化された各トラストアンカー証明書から（[RFC5280]のセクション4.1.2.7を参照）。 20オクテットのハッシュは連結しない他のフォーマットに含まれています。"
    },
    {
      "indent": 0,
      "text": "A.8. Authentication Payload",
      "ja": "A.8。認証ペイロード"
    },
    {
      "indent": 3,
      "text": "                     1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| Next Payload  |C|  RESERVED   |         Payload Length        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| Auth Method   |                RESERVED                       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n~                      Authentication Data                      ~\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 14,
      "text": "Figure 11: Authentication Payload Format",
      "ja": "図11：認証ペイロードフォーマット"
    },
    {
      "indent": 3,
      "text": "o Auth Method (1 octet) - Specifies the method of authentication used.",
      "ja": "O認証方法（1つのオクテット） - 使用される認証方法を指定します。"
    },
    {
      "indent": 3,
      "text": "Mechanism                              Value\n-----------------------------------------------------------------\nRSA Digital Signature                  1\n   Using an RSA private key with an RSASSA-PKCS1-v1_5 signature\n   scheme specified in [PKCS1]; see Section 2.15 of [RFC7296] for\n   details.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Shared Key Message Integrity Code 2 Computed as specified earlier using the shared key associated with the identity in the ID payload and the negotiated PRF.",
      "ja": "共有キーメッセージ整合性コード2コンピューIDペイロードでIDと交渉しPRFに関連した共有キーを使用して先に指定されています。"
    },
    {
      "indent": 3,
      "text": "o Authentication Data (variable length) - see Section 2.1.",
      "ja": "認証データO（可変長） - セクション2.1を参照してください。"
    },
    {
      "indent": 0,
      "text": "A.9. Nonce Payload",
      "ja": "A.9。ノンスペイロード"
    },
    {
      "indent": 3,
      "text": "                     1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| Next Payload  |C|  RESERVED   |         Payload Length        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n~                            Nonce Data                         ~\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 16,
      "text": "Figure 12: Nonce Payload Format",
      "ja": "図12：ナンスペイロードフォーマット"
    },
    {
      "indent": 3,
      "text": "o Nonce Data (variable length) - Contains the random data generated by the transmitting entity.",
      "ja": "O乱数データ（可変長） - 送信エンティティによって生成されたランダムデータが含ま。"
    },
    {
      "indent": 3,
      "text": "The size of the Nonce Data MUST be between 16 and 256 octets, inclusive. Nonce values MUST NOT be reused.",
      "ja": "乱数データのサイズは16と256オクテット、包括間でなければなりません。ノンス値は再利用してはいけません。"
    },
    {
      "indent": 0,
      "text": "A.10. Notify Payload",
      "ja": "A.10。ペイロードに通知"
    },
    {
      "indent": 3,
      "text": "The Notify payload, denoted N in this document, is used to transmit informational data, such as error conditions and state transitions, to an IKE peer. A Notify payload may appear in a response message (usually specifying why a request was rejected), in an INFORMATIONAL exchange (to report an error not in an IKE request), or in any other message to indicate sender capabilities or to modify the meaning of the request.",
      "ja": "本書ではNを付し、ペイロードを通知し、IKEピアに、そのようなエラー状態と状態遷移などの情報データを送信するために使用されます。通知ペイロードはINFORMATIONAL交換で、（通常は要求が拒否された理由を指定する）応答メッセージに表示されることがあります（IKE要求でないエラーを報告する）、または任意の他のメッセージに送信者の能力を示すために、またはの意味を変更しますリクエスト。"
    },
    {
      "indent": 3,
      "text": "                     1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| Next Payload  |C|  RESERVED   |         Payload Length        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Protocol ID  |   SPI Size    |      Notify Message Type      |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n~                Security Parameter Index (SPI)                 ~\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n~                       Notification Data                       ~\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 12,
      "text": "Figure 13: Notify Payload Format",
      "ja": "図13：ペイロードのフォーマットを通知します"
    },
    {
      "indent": 3,
      "text": "o Protocol ID (1 octet) - If this notification concerns an existing SA whose SPI is given in the SPI field, this field indicates the type of that SA. If the SPI field is empty, this field MUST be sent as zero and MUST be ignored on receipt.",
      "ja": "OプロトコルID（1つのオクテット） - この通知は、そのSPI SPIフィールドに与えられている既存のSAに関係する場合、このフィールドは、そのSAの種類を示します。 SPIフィールドが空の場合、このフィールドはゼロとして送らなければならなくて、領収書で無視しなければなりません。"
    },
    {
      "indent": 3,
      "text": "o SPI Size (1 octet) - Length in octets of the SPI as defined by the IPsec protocol ID or zero if no SPI is applicable. For a notification concerning the IKE SA, the SPI Size MUST be zero and the SPI field must be empty.",
      "ja": "何SPIが適用されない場合、IPsecプロトコルID、またはゼロによって定義されるSPIのオクテットの長さ -  O SPIサイズ（1つのオクテット）。 IKE SAに関する通知の場合、SPIサイズはゼロでなければならないとSPIフィールドが空でなければなりません。"
    },
    {
      "indent": 3,
      "text": "o Notify Message Type (2 octets) - Specifies the type of notification message.",
      "ja": "Oメッセージタイプ（2オクテット）を通知 - 通知メッセージのタイプを指定します。"
    },
    {
      "indent": 3,
      "text": "o SPI (variable length) - Security Parameter Index.",
      "ja": "O SPI（可変長） - セキュリティパラメータインデックス。"
    },
    {
      "indent": 3,
      "text": "o Notification Data (variable length) - Status or error data transmitted in addition to the Notify Message Type. Values for this field are type specific.",
      "ja": "O通知データ（可変長） - 通知メッセージタイプに加えて、送信ステータスまたはエラーデータ。このフィールドの値は、タイプ固有のものです。"
    },
    {
      "indent": 0,
      "text": "A.10.1. Notify Message Types",
      "ja": "A.10.1。メッセージタイプを通知します"
    },
    {
      "indent": 3,
      "text": "Notification information can be error messages specifying why an SA could not be established. It can also be status data that a process managing an SA database wishes to communicate with a peer process.",
      "ja": "通知情報は、SAを確立することができなかった理由を指定したエラーメッセージすることができます。それはまた、SAデータベースを管理プロセスは、ピア・プロセスと通信することを望む状況データとすることができます。"
    },
    {
      "indent": 3,
      "text": "Types in the range 0 - 16383 are intended for reporting errors. An implementation receiving a Notify payload with one of these types that it does not recognize in a response MUST assume that the corresponding request has failed entirely. Unrecognized error types in a request and status types in a request or response MUST be ignored, and they should be logged.",
      "ja": "範囲0におけるタイプ -  16383は、エラーを報告するために意図されています。それが応答で認識しないこれらのタイプのいずれかで通知ペイロードを受信実装は、対応する要求が完全に失敗したと仮定しなければなりません。要求または応答要求とステータスタイプで認識されないエラーの種類は無視されなければならない、と彼らはログに記録されなければなりません。"
    },
    {
      "indent": 3,
      "text": "Notify payloads with status types MAY be added to any message and MUST be ignored if not recognized. They are intended to indicate capabilities and, as part of SA negotiation, are used to negotiate non-cryptographic parameters.",
      "ja": "ステータスタイプと通知ペイロードは、任意のメッセージに追加されてもよいと認識されていない場合は無視しなければなりません。これらは、SAネゴシエーションの一部として、非暗号化パラメータを交渉するために使用され、能力を示すとすることを意図しています。"
    },
    {
      "indent": 3,
      "text": "NOTIFY messages: error types              Value\n-------------------------------------------------------------------\nUNSUPPORTED_CRITICAL_PAYLOAD              1\n    Indicates that the 1-octet payload type included in the\n    Notification Data field is unknown.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "INVALID_SYNTAX 7 Indicates the IKE message that was received was invalid because some type, length, or value was out of range or because the request was rejected for policy reasons. To avoid a Denial-of-Service (DoS) attack using forged messages, this status may only be returned for and in an encrypted packet if the Message ID and cryptographic checksum were valid. To avoid leaking information to someone probing a node, this status MUST be sent in response to any error not covered by one of the other status types. To aid debugging, more detailed error information should be written to a console or log.",
      "ja": "INVALID_SYNTAX 7は、いくつかのタイプ、長さ、または値が範囲外か、要求がポリシー上の理由で拒否されたためであったため、受信されたIKEメッセージが無効であったことを示します。メッセージIDと暗号チェックサムが有効であった場合、偽造メッセージを使用して、サービス拒否（DoS）攻撃を避けるために、この状況は唯一のため、暗号化パケットに返されることがあります。ノードのプロービング誰かに情報を漏洩しないようにするには、この状況は他のステータス・タイプのいずれかでカバーされていない任意のエラーに対応して送らなければなりません。デバッグを支援するために、より詳細なエラー情報は、コンソールまたはログに書き込む必要があります。"
    },
    {
      "indent": 3,
      "text": "NO_PROPOSAL_CHOSEN 14 None of the proposed crypto suites was acceptable. This can be sent in any case where the offered proposals are not acceptable for the responder.",
      "ja": "提案された暗号スイートのNO_PROPOSAL_CHOSEN 14いずれも許容ませんでした。これは、提供された提案は、応答者のために許容されないどのような場合に送信することができます。"
    },
    {
      "indent": 3,
      "text": "NO_ADDITIONAL_SAS 35 Specifies that the node is unwilling to accept any more Child SAs.",
      "ja": "NO_ADDITIONAL_SAS 35は、ノードが複数の子SAを受け入れること不本意であることを指定します。"
    },
    {
      "indent": 3,
      "text": "NOTIFY messages: status types            Value\n-------------------------------------------------------------------\nINITIAL_CONTACT                          16384\n    Asserts that this IKE SA is the only IKE SA currently active\n    between the authenticated identities.",
      "raw": true
    },
    {
      "indent": 0,
      "text": "A.11. Traffic Selector Payload",
      "ja": "A.11。トラフィックセレクタペイロード"
    },
    {
      "indent": 3,
      "text": "Traffic Selector (TS) payloads allow endpoints to communicate some of the information from their Security Policy Database (SPD) to their peers. TS payloads specify the selection criteria for packets that will be forwarded over the newly set up SA.",
      "ja": "トラフィックセレクタ（TS）ペイロードは、エンドポイントが仲間に彼らのセキュリティポリシーデータベース（SPD）からの情報の一部を通信できるようにします。 TSペイロードは、新たに設定SAを介して転送されるパケットの選択基準を指定します。"
    },
    {
      "indent": 3,
      "text": "                     1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| Next Payload  |C|  RESERVED   |         Payload Length        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| Number of TSs |                 RESERVED                      |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n~                       <Traffic Selectors>                     ~\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 12,
      "text": "Figure 14: Traffic Selectors Payload Format",
      "ja": "図14：トラフィックセレクタペイロードフォーマット"
    },
    {
      "indent": 3,
      "text": "o Number of TSs (1 octet) - Number of Traffic Selectors being provided.",
      "ja": "OのTSの番号（1つのオクテット） - 提供されるトラフィックセレクタの数。"
    },
    {
      "indent": 3,
      "text": "o Traffic Selectors (variable length) - One or more individual Traffic Selectors.",
      "ja": "Oトラフィックセレクタ（可変長） -  1つのまたは複数の個々のトラフィックセレクタ。"
    },
    {
      "indent": 3,
      "text": "The length of the Traffic Selector payload includes the TS header and all the Traffic Selectors.",
      "ja": "トラフィックセレクタペイロードの長さは、TSヘッダとすべてのトラフィックセレクタを含みます。"
    },
    {
      "indent": 3,
      "text": "There is no requirement that TSi and TSr contain the same number of individual Traffic Selectors. Thus, they are interpreted as follows: a packet matches a given TSi/TSr if it matches at least one of the individual selectors in TSi and at least one of the individual selectors in TSr.",
      "ja": "TSiとTSRは、個々のトラフィックセレクタの同じ番号を含む必要はありません。それをTSiの個々のセレクタのうちの少なくとも一方とTSRの個々のセレクタのうち少なくとも一つと一致する場合、パケットは、所与をTSi / TSrを一致します。次のようにこのように、それらが解釈されます。"
    },
    {
      "indent": 3,
      "text": "Two TS payloads appear in each of the messages in the exchange that creates a Child SA pair. Each TS payload contains one or more Traffic Selectors. Each Traffic Selector consists of an address range (IPv4 or IPv6), a port range, and an IP protocol ID.",
      "ja": "二つのTSペイロードは子SAのペアを作成し、引き換えにメッセージのそれぞれに表示されます。各TSペイロードは、一つ以上のトラフィックセレクタが含まれています。各トラフィックセレクタは、アドレス範囲（IPv4またはIPv6）、ポート範囲、およびIPプロトコルIDから成ります。"
    },
    {
      "indent": 3,
      "text": "The first of the two TS payloads is known as TSi (Traffic Selector - initiator). The second is known as TSr (Traffic Selector - responder). TSi specifies the source address of traffic forwarded from (or the destination address of traffic forwarded to) the initiator of the Child SA pair. TSr specifies the destination address of the traffic forwarded to (or the source address of the traffic forwarded from) the responder of the Child SA pair.",
      "ja": "2つのTSペイロードの最初のをTSi（ - イニシエータトラフィックセレクタ）として知られています。第二は、TSrを（ - 応答トラフィックセレクタ）として知られています。 TSIがから転送されたトラフィックの送信元アドレス（またはへ転送されたトラフィックの宛先アドレス）チャイルドSAペアの開始を指定します。 TSRはに転送されたトラフィック（又はから転送されたトラフィックの送信元アドレス）チャイルドSA対の応答の宛先アドレスを指定します。"
    },
    {
      "indent": 3,
      "text": "IKEv2 allows the responder to choose a subset of the traffic proposed by the initiator.",
      "ja": "IKEv2のは、応答がイニシエータによって提案されたトラフィックのサブセットを選択することができます。"
    },
    {
      "indent": 3,
      "text": "When the responder chooses a subset of the traffic proposed by the initiator, it narrows the Traffic Selectors to some subset of the initiator's proposal (provided the set does not become the null set). If the type of Traffic Selector proposed is unknown, the responder ignores that Traffic Selector, so that the unknown type is not returned in the narrowed set.",
      "ja": "レスポンダは、イニシエータによって提案されたトラフィックのサブセットを選択すると、それは、イニシエータの提案のいくつかのサブセットに交通セレクタを狭く（集合は空集合になっていません提供）。提案された交通セレクタの種類が不明な場合は、未知のタイプが狭くセットに返されないように、レスポンダは、そのトラフィックセレクタを無視します。"
    },
    {
      "indent": 3,
      "text": "To enable the responder to choose the appropriate range, if the initiator has requested the SA due to a data packet, the initiator SHOULD include as the first Traffic Selector in each TSi and TSr a very specific Traffic Selector including the addresses in the packet triggering the request. If the initiator creates the Child SA pair not in response to an arriving packet, but rather, say, upon startup, then there may be no specific addresses the initiator prefers for the initial tunnel over any other. In that case, the first values in TSi and TSr can be ranges rather than specific values.",
      "ja": "イニシエータが原因のデータパケットにSAを要求した場合は、適切な範囲を選択するために応答を可能にするために、イニシエータは、トリガーパケットの各をTSiとTSRの最初のトラフィックセレクタアドレスを含む非常に特定のトラフィックセレクタとして挙げられるべきです要求。イニシエータはむしろない到着したパケットに応じて、子SAのペアを作成しますが、場合、たとえば、起動時に、その後、イニシエータは、他の上に最初のトンネルに好む何の特定のアドレスが存在しない場合があります。その場合には、をTSiとTSRの最初の値は、範囲ではなく特定の値とすることができます。"
    },
    {
      "indent": 3,
      "text": "As minimal implementations might only support one SA, the Traffic Selectors will usually be from the initiator's IP address to the responder's IP address (i.e., no port or protocol selectors and only one range).",
      "ja": "最小限の実装は唯一のSAをサポートするかもしれないように、トラフィックセレクタは、通常、応答者のIPアドレス（すなわち、ポートまたはプロトコルなしセレクタとのみ1つの範囲）にイニシエータのIPアドレスからなります。"
    },
    {
      "indent": 0,
      "text": "A.11.1. Traffic Selector",
      "ja": "A.11.1。トラフィックセレクタ"
    },
    {
      "indent": 3,
      "text": "                     1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   TS Type     |IP Protocol ID |       Selector Length         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|           Start Port          |           End Port            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n~                         Starting Address                      ~\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n~                         Ending Address                        ~\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 15,
      "text": "Figure 15: Traffic Selector",
      "ja": "図15：トラフィックセレクタ"
    },
    {
      "indent": 3,
      "text": "o TS Type (1 octet) - Specifies the type of Traffic Selector.",
      "ja": "O TSタイプ（1つのオクテット） - トラフィックセレクタのタイプを指定します。"
    },
    {
      "indent": 3,
      "text": "o IP protocol ID (1 octet) - Value specifying an associated IP protocol ID (such as UDP, TCP, and ICMP). A value of zero means that the protocol ID is not relevant to this Traffic Selector -- the SA can carry all protocols.",
      "ja": "O IPプロトコルID（1つのオクテット） - （例えば、UDP、TCP、およびICMPなどの）関連するIPプロトコルIDを指定する値。ゼロの値は、プロトコルIDは、このトラフィックセレクタに関連していないことを意味 -  SAは、すべてのプロトコルを運ぶことができます。"
    },
    {
      "indent": 3,
      "text": "o Selector Length - Specifies the length of this Traffic Selector substructure including the header.",
      "ja": "Oセレクタの長さ - ヘッダーを含むこのトラフィックセレクタ下部構造の長さを指定します。"
    },
    {
      "indent": 3,
      "text": "o Start Port (2 octets, unsigned integer) - Value specifying the smallest port number allowed by this Traffic Selector. For protocols for which port is undefined (including protocol 0), or if all ports are allowed, this field MUST be zero.",
      "ja": "Oスタートポート（2つのオクテット、符号なし整数） - このトラフィックセレクタで許可されている最小のポート番号を指定する値。プロトコルのポートは、（プロトコル0を含む）定義されていない、またはすべてのポートが許可されている場合、このフィールドはゼロでなければならないため。"
    },
    {
      "indent": 3,
      "text": "o End Port (2 octets, unsigned integer) - Value specifying the largest port number allowed by this Traffic Selector. For protocols for which port is undefined (including protocol 0), or if all ports are allowed, this field MUST be 65535.",
      "ja": "エンドポートO（2つのオクテット、符号なし整数） - このトラフィックセレクタで許可されている最大のポート番号を指定する値。プロトコルのポートは、（プロトコル0を含む）定義されていない、またはすべてのポートが許可されている場合、このフィールドには65535でなければならないため。"
    },
    {
      "indent": 3,
      "text": "o Starting Address - The smallest address included in this Traffic Selector (length determined by TS Type).",
      "ja": "O開始アドレス - 最小のアドレスは（TSタイプによって決定される長さ）は、このトラフィックセレクタに含まれています。"
    },
    {
      "indent": 3,
      "text": "o Ending Address - The largest address included in this Traffic Selector (length determined by TS Type).",
      "ja": "O終了アドレス - 最大のアドレスは（TSタイプによって決定される長さ）は、このトラフィックセレクタに含まれています。"
    },
    {
      "indent": 3,
      "text": "The following table lists values for the Traffic Selector Type field and the corresponding Address Selector Data.",
      "ja": "トラフィックセレクタTypeフィールドのための次の表の値と対応するアドレスセレクタデータ。"
    },
    {
      "indent": 3,
      "text": "TS Type                            Value\n-------------------------------------------------------------------\nTS_IPV4_ADDR_RANGE                  7\n    A range of IPv4 addresses, represented by two 4-octet\n    values.  The first value is the beginning IPv4 address\n    (inclusive), and the second value is the ending IPv4 address\n    (inclusive).  All addresses falling between the two specified\n    addresses are considered to be within the list.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "TS_IPV6_ADDR_RANGE 8 A range of IPv6 addresses, represented by two 16-octet values. The first value is the beginning IPv6 address (inclusive), and the second value is the ending IPv6 address (inclusive). All addresses falling between the two specified addresses are considered to be within the list.",
      "ja": "TS_IPV6_ADDR_RANGE 8 2つの16オクテットの値によって表されるIPv6アドレスの範囲、。最初の値は最初のIPv6アドレス（包括的）で、2番目の値は終わるIPv6アドレス（包括的）です。 2つの指定されたアドレス間に入るすべてのアドレスは、リスト内にあると考えられます。"
    },
    {
      "indent": 0,
      "text": "A.12. Encrypted Payload",
      "ja": "A.12。暗号化されたペイロード"
    },
    {
      "indent": 3,
      "text": "The Encrypted payload, denoted as SK{...} in this document, contains other payloads in encrypted form.",
      "ja": "この文書に記載されているSK {...}として示さ暗号化されたペイロードは、暗号化された形式で他のペイロードを含んでいます。"
    },
    {
      "indent": 3,
      "text": "                     1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| Next Payload  |C|  RESERVED   |         Payload Length        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                     Initialization Vector                     |\n|       (length is block size for the encryption algorithm)     |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n~                    Encrypted IKE Payloads                     ~\n+               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|               |             Padding (0-255 octets)            |\n+-+-+-+-+-+-+-+-+                               +-+-+-+-+-+-+-+-+\n|                                               |  Pad Length   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n~                    Integrity Checksum Data                    ~\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 12,
      "text": "Figure 16: Encrypted Payload Format",
      "ja": "図16：暗号化されたペイロードフォーマット"
    },
    {
      "indent": 3,
      "text": "o Next Payload - The payload type of the first embedded payload. Note that this is an exception in the standard header format, since the Encrypted payload is the last payload in the message; therefore, the Next Payload field would normally be zero. But because the content of this payload is embedded payloads and there was no natural place to put the type of the first one, that type is placed here.",
      "ja": "O次にペイロード - 最初の埋め込みペイロードのペイロードタイプ。暗号化されたペイロードは、メッセージの最後のペイロードであるので、これは、標準ヘッダフォーマットで例外であることに注意してください。従って、次にペイロードフィールドは、通常はゼロになるであろう。しかし、このためにペイロードの内容は、ペイロードを埋め込まれており、最初のものの種類を置くためまったく自然な場所は、その型がここに配置され、ありませんでした。"
    },
    {
      "indent": 3,
      "text": "o Payload Length - Includes the lengths of the header, initialization vector (IV), Encrypted IKE payloads, Padding, Pad Length, and Integrity Checksum Data.",
      "ja": "Oペイロードの長さ - ヘッダの長さは、初期化ベクトル（IV）、暗号化されたIKEペイロード、パディング、パディング長、及び整合性チェックサムデータを含みます。"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector - For Cipher Block Chaining (CBC) mode ciphers, the length of the initialization vector (IV) is equal to the block length of the underlying encryption algorithm. Senders MUST select a new unpredictable IV for every message; recipients MUST accept any value. The reader is encouraged to consult [MODES] for advice on IV generation. In particular, using the final ciphertext block of the previous message is not considered unpredictable. For modes other than CBC, the IV format and processing is specified in the document specifying the encryption algorithm and mode.",
      "ja": "O初期化ベクトルは、 - 暗号ブロック連鎖（CBC）モード暗号の場合、初期化ベクトル（IV）の長さは、基礎となる暗号アルゴリズムのブロック長に等しいです。送信者は、メッセージごとに新しい予測不可能なIVを選択する必要があります。受信者は、任意の値を受け入れなければなりません。読者はIV世代上のアドバイスを[モード]に相談することが奨励されます。具体的には、前のメッセージの最後の暗号文ブロックを使用すると、予期しないとは見なされません。 CBC以外のモードの場合は、IV形式および処理は、暗号化アルゴリズムおよびモードを指定する文書に指定されています。"
    },
    {
      "indent": 3,
      "text": "o IKE payloads are as specified earlier in this section. This field is encrypted with the negotiated cipher.",
      "ja": "O IKEペイロードは、以前のように、このセクションで指定されています。このフィールドは、交渉された暗号で暗号化されています。"
    },
    {
      "indent": 3,
      "text": "o Padding MAY contain any value chosen by the sender and MUST have a length that makes the combination of the payloads, the Padding, and the Pad Length to be a multiple of the encryption block size. This field is encrypted with the negotiated cipher.",
      "ja": "Oパディングは送信者によって選択された任意の値を含んでいてもよく、ペイロードの組み合わせ、パディング、パッド長が暗号ブロックサイズの倍数であることができる長さでなければなりません。このフィールドは、交渉された暗号で暗号化されています。"
    },
    {
      "indent": 3,
      "text": "o Pad Length is the length of the Padding field. The sender SHOULD set the Pad Length to the minimum value that makes the combination of the payloads, the Padding, and the Pad Length a multiple of the block size, but the recipient MUST accept any length that results in proper alignment. This field is encrypted with the negotiated cipher.",
      "ja": "Oパッドの長さは、パディングフィールドの長さです。送信側はペイロード、パディングの組み合わせを行う最小値、およびパッド長ブロックサイズの倍数にパッドの長さを設定する必要がありますが、受信者が適切な位置合わせをもたらす任意の長さを受け入れなければなりません。このフィールドは、交渉された暗号で暗号化されています。"
    },
    {
      "indent": 3,
      "text": "o Integrity Checksum Data is the cryptographic checksum of the entire message starting with the Fixed IKE header through the Pad Length. The checksum MUST be computed over the encrypted message. Its length is determined by the integrity algorithm negotiated.",
      "ja": "O整合性チェックサムデータは、パッドの長さを介して固定IKEヘッダから始まるメッセージ全体の暗号チェックサムです。チェックサムは暗号化されたメッセージの上に計算しなければなりません。その長さは、ネゴシエート整合性アルゴリズムによって決定されます。"
    },
    {
      "indent": 0,
      "text": "Appendix B. Useful Optional Features",
      "ja": "付録B.便利なオプション機能"
    },
    {
      "indent": 3,
      "text": "There are some optional features of IKEv2, which might be useful for minimal implementations in some scenarios. Such features include raw public keys authentication and sending an IKE SA delete notification.",
      "ja": "いくつかのシナリオでは、最小限の実装のために役に立つかもしれないのIKEv2のいくつかのオプション機能があります。このような特徴は、生の公開鍵認証とIKE SAの削除通知を送信することが含まれます。"
    },
    {
      "indent": 0,
      "text": "B.1. IKE SA Delete Notification",
      "ja": "Ｂ。１。 いけ さ でぇて のちふぃかちおん"
    },
    {
      "indent": 3,
      "text": "In some scenarios, a minimal implementation device creates an IKE SA, sends one or few packets, perhaps gets some packets back, and then the device goes back to sleep, forgetting the IKE SA. In such scenarios, it would be nice for the minimal implementation to send the IKE SA delete notification to tell the other end that the IKE SA is going away, so it can free the resources.",
      "ja": "いくつかのシナリオでは、最小限の実装デバイスは、IKE SAを作成し、1つのまたは少数のパケットを送信し、おそらく戻っていくつかのパケットを取得し、その後、デバイスは、IKE SAを忘れて、スリープ状態に戻って行きます。このようなシナリオでは、それがリソースを解放することができますので、IKE SAが離れて起こっているもう一方の端を伝えるための通知を削除するIKE SAを送信するための最小限の実装のためにいいだろう。"
    },
    {
      "indent": 3,
      "text": "Deleting the IKE SA can be done by sending one packet with a fixed Message ID and with only one payload inside the Encrypted payload. The other end will send back an empty response:",
      "ja": "IKE SAを削除すると、固定メッセージIDとし、暗号化されたペイロード内の唯一のペイロードで1つのパケットを送信することにより行うことができます。もう一方の端には、空の応答を送り返します。"
    },
    {
      "indent": 3,
      "text": "Initiator                         Responder\n-------------------------------------------------------------------\nHDR(SPIi=xxx, SPIr=yyy, INFORMATIONAL,\n    Flags: Initiator, Message ID=2),\n    SK {D}  -->",
      "raw": true
    },
    {
      "indent": 22,
      "text": "<--  HDR(SPIi=xxx, SPIr=yyy, INFORMATIONAL,\n         Flags: Response, Message ID=2),\n         SK {}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The Delete payload format is:",
      "ja": "削除ペイロードの形式は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "                     1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| Next Payload  |C|  RESERVED   |         Payload Length        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| Protocol ID   |   SPI Size    |          Num of SPIs          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n~               Security Parameter Index(es) (SPI)              ~\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 15,
      "text": "Figure 17: Delete Payload Format",
      "ja": "図17：削除ペイロードのフォーマット"
    },
    {
      "indent": 3,
      "text": "o Protocol ID (1 octet) - Must be 1 for an IKE SA.",
      "ja": "OプロトコルID（1つのオクテット） -  IKE SAのための1でなければなりません。"
    },
    {
      "indent": 3,
      "text": "o SPI Size (1 octet) - Length in octets of the SPI as defined by the protocol ID. It MUST be zero for IKE (SPI is in the message header).",
      "ja": "O SPIサイズ（1つのオクテット） - プロトコルIDによって定義されるSPIのオクテット単位の長さ。これは、（SPIがメッセージヘッダにある）IKEのためにゼロでなければなりません。"
    },
    {
      "indent": 3,
      "text": "o Num of SPIs (2 octets, unsigned integer) - The number of SPIs contained in the Delete payload. This MUST be zero for IKE.",
      "ja": "OのSPIの民（2つのオクテットの符号なし整数） - 削除ペイロードに含まのSPIの数。これは、IKEのためにゼロでなければなりません。"
    },
    {
      "indent": 3,
      "text": "o Security Parameter Index(es) (variable length) - Identifies the specific Security Association(s) to delete. The length of this field is determined by the SPI Size and Num of SPIs fields. This field is empty for the IKE SA delete.",
      "ja": "Oセキュリティパラメータインデックス（ES）（可変長） - 削除するために、特定のセキュリティアソシエーション（複数可）を識別します。このフィールドの長さは、SPIのフィールドのSPIサイズとテンキーによって決定されます。 IKE SAが削除のために、このフィールドは空です。"
    },
    {
      "indent": 0,
      "text": "B.2. Raw Public Keys",
      "ja": "B.2。生の公開鍵"
    },
    {
      "indent": 3,
      "text": "In some scenarios, the shared secret authentication is not safe enough, as anybody who knows the secret can impersonate the server. If the shared secret is printed on the side of the device, then anybody who gets physical access to the device can read it. In such environments, public key authentication allows stronger authentication with minimal operational overhead. Certificate support is quite complex, and minimal implementations do not usually have need for them. Using Raw Public Keys is much simpler, and it scales similar to certificates. The fingerprint of the raw public key can still be distributed by, for example, printing it on the side of the device allowing setup similar to using a shared secret.",
      "ja": "いくつかのシナリオでは、共有秘密認証が秘密を知っている誰もが、サーバーを偽装することができますよう、十分に安全ではありません。共有秘密は、デバイスの側面に印刷されている場合は、そのデバイスに物理的にアクセスを取得します誰もがそれを読むことができます。このような環境では、公開鍵認証は、最小限の運用オーバーヘッドでより強力な認証を行うことができます。証明書のサポートは非​​常に複雑で、かつ最小限の実装は通常、彼らのために必要はありません。生の公開鍵を使用することは非常に簡単であり、それは、証明書に似て拡大縮小します。生の公開鍵の指紋は、まだ共有秘密を使用する同様のデバイス可能セットアップの側面上に印刷、例えば、によって分散させることができます。"
    },
    {
      "indent": 3,
      "text": "Raw public keys can also be used in a \"leap of faith\" or baby duck style initial setup, where the device imprints itself to the first device it sees when it boots up the first time. After that initial connection, it stores the fingerprint of the Raw Public Key of the server in its own configuration and verifies that it never changes (unless a \"reset to factory settings\" or similar command is issued).",
      "ja": "生の公開鍵は、「信仰の飛躍」や赤ちゃんアヒルのスタイルの初期設定、それは最初の時間を起動するとき、それは見て最初のデバイスへのデバイスのインプリント自体にも使用することができます。その最初の接続の後、それは独自の構成では、サーバーの生の公開鍵の指紋を格納し（「工場出荷時にリセットの設定」または類似のコマンドが発行されていない場合）、それは決して変わらないことを確認します。"
    },
    {
      "indent": 3,
      "text": "This changes the initial IKE_AUTH payloads as follows:",
      "ja": "これは、次のように初期IKE_AUTHペイロードを変更します。"
    },
    {
      "indent": 3,
      "text": "Initiator                         Responder\n-------------------------------------------------------------------\nHDR(SPIi=xxx, SPIr=yyy, IKE_AUTH,\n    Flags: Initiator, Message ID=1),\n    SK {IDi, CERT, AUTH, SAi2, TSi, TSr,\n        N(INITIAL_CONTACT)}  -->",
      "raw": true
    },
    {
      "indent": 21,
      "text": "<--  HDR(SPIi=xxx, SPIr=yyy, IKE_AUTH, Flags:\n            Response, Message ID=1),\n            SK {IDr, CERT, AUTH, SAr2, TSi, TSr}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The CERT payloads contain the raw public keys used to sign the hash of the InitiatorSignedOctects/ResponderSignedOctects when generating an AUTH payload. Minimal implementations should use SHA-1 as the hash function as that is the \"SHOULD\" support algorithm specified in RFC 7296, so it is the most likely one that is supported by all devices.",
      "ja": "CERTペイロードはAUTHペイロードを生成するときInitiatorSignedOctects / ResponderSignedOctectsのハッシュに署名するために使用される生の公開鍵を含みます。それは、RFC 7296で指定されたアルゴリズムをサポートする「べきである」であるとして、最小限の実装では、ハッシュ関数としてSHA-1を使用する必要があり、それは、すべてのデバイスによってサポートされている可能性が高いものです。"
    },
    {
      "indent": 3,
      "text": "Note that RFC 7296 already obsoleted the old Raw RSA Key method, and \"Generic Raw Public-Key Support for IKEv2\" [RFC7670] adds a new format to allow using any types of raw public keys with IKEv2. This document only specifies how to use the new format.",
      "ja": "そのRFCに注意してください7296はすでに古い生のRSAキー方式を廃止し、「IKEv2のための一般的な生の公開鍵サポート」[RFC7670]はIKEv2を持つ生の公開鍵のいずれかの種類を使用してできるようにする新しいフォーマットが追加されます。この文書は、新しい形式を使用する方法を指定します。"
    },
    {
      "indent": 3,
      "text": "In these setups, it might be possible that authenticating the server is not needed at all. If a minimal device is sending, for example, sensor information to the server, the server wants to verify that the sensor is who it claims to be using raw public keys, but the sensor does not really care who the server is. In such cases, the NULL authentication method [RFC7619] would be useful, as it allows devices to do one-way authentication.",
      "ja": "これらのセットアップでは、サーバーの認証には全く必要ないことも可能かもしれません。最小限のデバイスがサーバに、例えば、センサ情報を送信している場合、サーバはセンサーが、それは生の公開鍵を使用していると主張する人であることを確認したいと考えていますが、センサーは本当にサーバーが誰であるかを気にしません。それはデバイスが一方向認証を行うことを可能にするような場合には、NULL認証方式[RFC7619]は、有用であろう。"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Most of the content of this document is copied from RFC 7296.",
      "ja": "このドキュメントの内容のほとんどは、RFC 7296からコピーされます。"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Tero Kivinen INSIDE Secure Eerikinkatu 28 HELSINKI FI-00180 FINLAND",
      "ja": "TERO Kivinen INSIDEはEerikinkatu 28 FI-00180ヘルシンキ、フィンランドセキュア"
    },
    {
      "indent": 3,
      "text": "Email: kivinen@iki.fi",
      "ja": "メール：kivinen@iki.fi"
    }
  ]
}