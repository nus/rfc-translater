{
  "title": {
    "text": "RFC 7235 - Hypertext Transfer Protocol (HTTP/1.1): Authentication",
    "ja": "RFC 7235 - ハイパーテキスト転送プロトコル（HTTP / 1.1）：認証"
  },
  "number": 7235,
  "created_at": "2019-10-30 14:13:05.337800+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                  R. Fielding, Ed.\nRequest for Comments: 7235                                         Adobe\nObsoletes: 2616                                          J. Reschke, Ed.\nUpdates: 2617                                                 greenbytes\nCategory: Standards Track                                      June 2014\nISSN: 2070-1721",
      "raw": true
    },
    {
      "indent": 9,
      "text": "Hypertext Transfer Protocol (HTTP/1.1): Authentication",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypermedia information systems. This document defines the HTTP Authentication framework.",
      "ja": "ハイパーテキスト転送プロトコル（HTTP）は、分散、協調、ハイパーメディア情報システムのためのステートレスなアプリケーションレベルのプロトコルです。このドキュメントでは、HTTP認証フレームワークを定義します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 5741のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc7235.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc7235で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2014 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2014 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 3,
      "text": "This document may contain material from IETF Documents or IETF Contributions published or made publicly available before November 10, 2008. The person(s) controlling the copyright in some of this material may not have granted the IETF Trust the right to allow modifications of such material outside the IETF Standards Process. Without obtaining an adequate license from the person(s) controlling the copyright in such materials, this document may not be modified outside the IETF Standards Process, and derivative works of it may not be created outside the IETF Standards Process, except to format it for publication as an RFC or to translate it into languages other than English.",
      "ja": "この材料の一部がIETFトラストにこのような材料の変更を許可する権利を与えられていない可能性がありますにこの文書は、2008年、IETFドキュメントまたは11月10日以前に発行または公開さIETF貢献から著作権を支配する者（複数可）材料を含んでいてもよいですIETF標準化プロセスの外。そのような材料の著作権を管理者（単数または複数）から適切なライセンスを取得することなく、この文書は、IETF標準化過程の外側修正されないかもしれません、そして、それの派生物は、IETF標準化過程の外側に作成されない場合があり、それをフォーマットする以外出版RFCとして、英語以外の言語に翻訳します。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................3\n   1.1. Conformance and Error Handling .............................3\n   1.2. Syntax Notation ............................................3\n2. Access Authentication Framework .................................3\n   2.1. Challenge and Response .....................................3\n   2.2. Protection Space (Realm) ...................................5\n3. Status Code Definitions .........................................6\n   3.1. 401 Unauthorized ...........................................6\n   3.2. 407 Proxy Authentication Required ..........................6\n4. Header Field Definitions ........................................7\n   4.1. WWW-Authenticate ...........................................7\n   4.2. Authorization ..............................................8\n   4.3. Proxy-Authenticate .........................................8\n   4.4. Proxy-Authorization ........................................9\n5. IANA Considerations .............................................9\n   5.1. Authentication Scheme Registry .............................9\n        5.1.1. Procedure ...........................................9\n        5.1.2. Considerations for New Authentication Schemes ......10\n   5.2. Status Code Registration ..................................11\n   5.3. Header Field Registration .................................11\n6. Security Considerations ........................................12\n   6.1. Confidentiality of Credentials ............................12\n   6.2. Authentication Credentials and Idle Clients ...............12\n   6.3. Protection Spaces .........................................13\n7. Acknowledgments ................................................14\n8. References .....................................................14\n   8.1. Normative References ......................................14\n   8.2. Informative References ....................................14\nAppendix A. Changes from RFCs 2616 and 2617 .......................16\nAppendix B. Imported ABNF .........................................16\nAppendix C. Collected ABNF ........................................17\nIndex .............................................................18",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "HTTP provides a general framework for access control and authentication, via an extensible set of challenge-response authentication schemes, which can be used by a server to challenge a client request and by a client to provide authentication information. This document defines HTTP/1.1 authentication in terms of the architecture defined in \"Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing\" [RFC7230], including the general framework previously described in \"HTTP Authentication: Basic and Digest Access Authentication\" [RFC2617] and the related fields and status codes previously defined in \"Hypertext Transfer Protocol -- HTTP/1.1\" [RFC2616].",
      "ja": "HTTPは、認証情報を提供するためにクライアント要求及びクライアントに挑戦するためにサーバによって使用することができるチャレンジレスポンス認証方式の拡張可能なセットを介して、アクセス制御および認証のための一般的なフレームワークを提供します。以前に記載されている一般的なフレームワークを含む[RFC7230]、「HTTP認証：基本とダイジェストアクセス認証」：この文書では、「メッセージの構文およびルーティングハイパーテキスト転送プロトコル（HTTP / 1.1）」に定義されたアーキテクチャの観点からHTTP / 1.1の認証を定義します[RFC2617]及び関連分野とステータスコードは以前に「ハイパーテキスト転送プロトコル -  HTTP / 1.1」で定義された[RFC2616]。"
    },
    {
      "indent": 3,
      "text": "The IANA Authentication Scheme Registry (Section 5.1) lists registered authentication schemes and their corresponding specifications, including the \"basic\" and \"digest\" authentication schemes previously defined by RFC 2617.",
      "ja": "IANA認証スキームレジストリ（5.1節）のリストは、「基本」と以前RFC 2617で定義された認証スキームを「ダイジェスト」を含め、認証スキームおよびそれに対応する仕様を登録。"
    },
    {
      "indent": 0,
      "text": "1.1. Conformance and Error Handling",
      "section_title": true,
      "ja": "1.1. 適合性とエラー処理"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はあります[RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 3,
      "text": "Conformance criteria and considerations regarding error handling are defined in Section 2.5 of [RFC7230].",
      "ja": "適合基準およびエラー処理についての考察は、[RFC7230]のセクション2.5で定義されています。"
    },
    {
      "indent": 0,
      "text": "1.2. Syntax Notation",
      "section_title": true,
      "ja": "1.2. 構文記法"
    },
    {
      "indent": 3,
      "text": "This specification uses the Augmented Backus-Naur Form (ABNF) notation of [RFC5234] with a list extension, defined in Section 7 of [RFC7230], that allows for compact definition of comma-separated lists using a '#' operator (similar to how the '*' operator indicates repetition). Appendix B describes rules imported from other documents. Appendix C shows the collected grammar with all list operators expanded to standard ABNF notation.",
      "ja": "この仕様は次のように「＃」演算子を使用して、カンマ区切りのリストのコンパクトな定義を可能にする[RFC7230]のセクション7で定義されたリストの拡張子、と[RFC5234]の増補バッカス - ナウアフォーム（ABNF）の表記を（使用しますどのように「*」オペレータ）は繰り返しを示します。付録Bは、他の文書からインポートルールを説明します。付録Cには、標準のABNF表記に展開すべてのリスト演算子で収集した文法を示しています。"
    },
    {
      "indent": 0,
      "text": "2. Access Authentication Framework",
      "section_title": true,
      "ja": "2.アクセス認証フレームワーク"
    },
    {
      "indent": 0,
      "text": "2.1. Challenge and Response",
      "section_title": true,
      "ja": "2.1. チャレンジとレスポンス"
    },
    {
      "indent": 3,
      "text": "HTTP provides a simple challenge-response authentication framework that can be used by a server to challenge a client request and by a client to provide authentication information. It uses a case-insensitive token as a means to identify the authentication scheme, followed by additional information necessary for achieving authentication via that scheme. The latter can be either a comma-separated list of parameters or a single sequence of characters capable of holding base64-encoded information.",
      "ja": "HTTPは認証情報を提供するために、クライアントの要求に挑戦するためにサーバによって使用され、クライアントによってすることができ、単純なチャレンジ・レスポンス認証フレームワークを提供します。その方式による認証を実現するために必要な追加情報が続く認証方式を識別するための手段として、大文字と小文字を区別しないトークンを使用します。後者のパラメータのカンマ区切りリストまたはbase64で符号化された情報を保持することができる文字の単一配列のいずれかとすることができます。"
    },
    {
      "indent": 3,
      "text": "Authentication parameters are name=value pairs, where the name token is matched case-insensitively, and each parameter name MUST only occur once per challenge.",
      "ja": "認証パラメータは、名前のトークンが大文字と小文字を区別せずに一致さ名前=値のペアであり、各パラメータ名は、課題ごとに一度発生しなければなりません。"
    },
    {
      "indent": 5,
      "text": "auth-scheme = token",
      "ja": "auth-スキーム=トークン"
    },
    {
      "indent": 5,
      "text": "auth-param = token BWS \"=\" BWS ( token / quoted-string )",
      "ja": "auth-PARAM =トークンBWS \"=\" BWS（トークン/引用符で囲まれた文字列）"
    },
    {
      "indent": 5,
      "text": "token68 = 1*( ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\" / \"+\" / \"/\" ) *\"=\"",
      "ja": "token68 = 1 *（ALPHA / DIGIT / \" - \" \"\" / / \"_\" / \"〜\" / \"+\" / \"/\"）* \"=\""
    },
    {
      "indent": 3,
      "text": "The token68 syntax allows the 66 unreserved URI characters ([RFC3986]), plus a few others, so that it can hold a base64, base64url (URL and filename safe alphabet), base32, or base16 (hex) encoding, with or without padding, but excluding whitespace ([RFC4648]).",
      "ja": "token68構文それはbase64で、base64url（URLやファイル名安全なアルファベット）を保持することができるように、66予約されていないURI文字（[RFC3986]）、プラスいくつかの他のことができ、base32、またはbase16（16進数）エンコーディングでまたはパディングなししかし、空白（[RFC4648]）を除きます。"
    },
    {
      "indent": 3,
      "text": "A 401 (Unauthorized) response message is used by an origin server to challenge the authorization of a user agent, including a WWW-Authenticate header field containing at least one challenge applicable to the requested resource.",
      "ja": "401（不正な）応答メッセージは、要求されたリソースに適用可能な少なくとも一つのチャレンジを含むWWW-Authenticateヘッダフィールドを含むユーザエージェントの許可を、挑戦するオリジンサーバによって使用されます。"
    },
    {
      "indent": 3,
      "text": "A 407 (Proxy Authentication Required) response message is used by a proxy to challenge the authorization of a client, including a Proxy-Authenticate header field containing at least one challenge applicable to the proxy for the requested resource.",
      "ja": "407（プロキシ認証が必要）応答メッセージは、要求されたリソースのプロキシに適用少なくとも一つの挑戦を含むProxy-Authenticateヘッダフィールドを含むクライアントの許可を、挑戦するためにプロキシによって使用されています。"
    },
    {
      "indent": 5,
      "text": "challenge = auth-scheme [ 1*SP ( token68 / #auth-param ) ]",
      "ja": "チャレンジ= AUTH-スキーム[1 * SP（token68 /＃AUTH-PARAM）]"
    },
    {
      "indent": 6,
      "text": "Note: Many clients fail to parse a challenge that contains an unknown scheme. A workaround for this problem is to list well-supported schemes (such as \"basic\") first.",
      "ja": "注意：多くのクライアントが不明なスキームが含まれている課題を解析するために失敗します。この問題を回避するには、最初に（例えば、「基本」など）もサポート体系を一覧表示することです。"
    },
    {
      "indent": 3,
      "text": "A user agent that wishes to authenticate itself with an origin server -- usually, but not necessarily, after receiving a 401 (Unauthorized) -- can do so by including an Authorization header field with the request.",
      "ja": "401（不正）を受信した後、必ずしも通常ではなく、 -   - オリジンサーバに自身を認証することを望むユーザエージェントは、リクエストにAuthorizationヘッダフィールドを含むことによってこれを行うことができます。"
    },
    {
      "indent": 3,
      "text": "A client that wishes to authenticate itself with a proxy -- usually, but not necessarily, after receiving a 407 (Proxy Authentication Required) -- can do so by including a Proxy-Authorization header field with the request.",
      "ja": "407（プロキシ認証が必要）を受信した後、必ずしも通常ではなく、 -   - プロキシでそれ自体を認証することを望むクライアントは、要求にProxy-Authorizationヘッダフィールドを含むことによってこれを行うことができます。"
    },
    {
      "indent": 3,
      "text": "Both the Authorization field value and the Proxy-Authorization field value contain the client's credentials for the realm of the resource being requested, based upon a challenge received in a response (possibly at some point in the past). When creating their values, the user agent ought to do so by selecting the challenge with what it considers to be the most secure auth-scheme that it understands, obtaining credentials from the user as appropriate. Transmission of credentials within header field values implies significant security considerations regarding the confidentiality of the underlying connection, as described in Section 6.1.",
      "ja": "どちらのAuthorizationフィールド値とプロキシ-Authorizationフィールド値は、（おそらく過去のある時点で）応答で受信したチャレンジに基づいて、要求されたリソースのレルムのクライアントの資格情報が含まれています。その値を作成する場合、ユーザーエージェントは、それが適切なユーザーから資格情報を取得し、理解し、最も安全なのauth-スキームであることを考えるものと挑戦を選択することによって、そうするべきです。 6.1節で説明したように、ヘッダフィールド値内の資格情報の送信は、基になる接続の機密性に関する重大なセキュリティ上の考慮事項を意味します。"
    },
    {
      "indent": 5,
      "text": "credentials = auth-scheme [ 1*SP ( token68 / #auth-param ) ]",
      "ja": "資格=のAUTH-スキーム[1つの*のSP（token68 /＃AUTH-PARAM）]"
    },
    {
      "indent": 3,
      "text": "Upon receipt of a request for a protected resource that omits credentials, contains invalid credentials (e.g., a bad password) or partial credentials (e.g., when the authentication scheme requires more than one round trip), an origin server SHOULD send a 401 (Unauthorized) response that contains a WWW-Authenticate header field with at least one (possibly new) challenge applicable to the requested resource.",
      "ja": "資格情報を省略し、保護されたリソースに対する要求を受信すると、（例えば、不正なパスワード）を無効な資格情報または一部の資格情報（認証方式は、複数のラウンドトリップを必要とするとき、例えば）、オリジンサーバは401（無許可を送るべきであるが含まれています要求されたリソースに適用される少なくとも一つの（おそらく新しい）の挑戦をWWW-Authenticateヘッダフィールドを含む）応答。"
    },
    {
      "indent": 3,
      "text": "Likewise, upon receipt of a request that omits proxy credentials or contains invalid or partial proxy credentials, a proxy that requires authentication SHOULD generate a 407 (Proxy Authentication Required) response that contains a Proxy-Authenticate header field with at least one (possibly new) challenge applicable to the proxy.",
      "ja": "同様に、プロキシ認証情報を省略または無効なまたは部分的なプロキシ認証情報を含む要求を受信すると、認証を必要とするプロキシは、少なくとも一つの（おそらく新しい）とプロキシ認証ヘッダフィールドを含む407（プロキシ認証が必要）応答を生成する必要がありますプロキシへの適用に挑戦。"
    },
    {
      "indent": 3,
      "text": "A server that receives valid credentials that are not adequate to gain access ought to respond with the 403 (Forbidden) status code (Section 6.5.3 of [RFC7231]).",
      "ja": "403（禁止）ステータスコード（[RFC7231]のセクション6.5.3）で応答するべきアクセス権を取得するのに十分ではない有効な資格情報を受信するサーバー。"
    },
    {
      "indent": 3,
      "text": "HTTP does not restrict applications to this simple challenge-response framework for access authentication. Additional mechanisms can be used, such as authentication at the transport level or via message encapsulation, and with additional header fields specifying authentication information. However, such additional mechanisms are not defined by this specification.",
      "ja": "HTTPアクセス認証のためにこの簡単なチャレンジレスポンスフレームワークへの応用を制限するものではありません。付加的なメカニズムは、トランスポート・レベルまたはメッセージのカプセル化を介して、認証情報を指定する追加のヘッダフィールドと認証など、使用することができます。しかしながら、このような追加の機構は、本明細書によって定義されていません。"
    },
    {
      "indent": 0,
      "text": "2.2. Protection Space (Realm)",
      "section_title": true,
      "ja": "2.2. 保護空間（レルム）"
    },
    {
      "indent": 3,
      "text": "The \"realm\" authentication parameter is reserved for use by authentication schemes that wish to indicate a scope of protection.",
      "ja": "「領域」の認証パラメータは保護の範囲を示すために、希望する認証スキームで使用するために予約されています。"
    },
    {
      "indent": 3,
      "text": "A protection space is defined by the canonical root URI (the scheme and authority components of the effective request URI; see Section 5.5 of [RFC7230]) of the server being accessed, in combination with the realm value if present. These realms allow the protected resources on a server to be partitioned into a set of protection spaces, each with its own authentication scheme and/or authorization database. The realm value is a string, generally assigned by the origin server, that can have additional semantics specific to the authentication scheme. Note that a response can have multiple challenges with the same auth-scheme but with different realms.",
      "ja": "存在する場合レルム値と組み合わせて、アクセスされるサーバから、保護空間は、（[RFC7230]のセクション5.5を参照して有効なリクエストURIのスキームと権限コンポーネント）正規ルートURIによって定義されます。これらのレルムは、サーバー上の保護されたリソースは、保護スペースのセットに分割することを可能にする独自の認証スキームおよび/または認証データベースを持つ各。レルム値は、認証方式に固有の追加のセマンティクスを持つことができ、一般的にオリジンサーバによって割り当てられた文字列、です。応答は同じのauth-スキームが、異なるレルムで複数の課題を持つことができることに注意してください。"
    },
    {
      "indent": 3,
      "text": "The protection space determines the domain over which credentials can be automatically applied. If a prior request has been authorized, the user agent MAY reuse the same credentials for all other requests within that protection space for a period of time determined by the authentication scheme, parameters, and/or user preferences (such as a configurable inactivity timeout). Unless specifically allowed by the authentication scheme, a single protection space cannot extend outside the scope of its server.",
      "ja": "保護空間は、資格情報が自動的に適用することができ、その上のドメインを決定します。事前のリクエストが承認された場合、ユーザーエージェントは、（設定可能な無活動タイムアウトなど）の認証スキーム、パラメータ、および/またはユーザーの好みによって決定された時間の間、その保護空間内の他のすべての要求に対して同じ資格情報を再利用してもよい（MAY） 。特に認証スキームによって許可されていない限り、単一の保護領域は、そのサーバーの範囲外で拡張することはできません。"
    },
    {
      "indent": 3,
      "text": "For historical reasons, a sender MUST only generate the quoted-string syntax. Recipients might have to support both token and quoted-string syntax for maximum interoperability with existing clients that have been accepting both notations for a long time.",
      "ja": "歴史的な理由のために、送信者にのみ引用符で囲まれた文字列の構文を生成しなければなりません。受信者は、長い時間のために両方の表記を受け入れてきた既存のクライアントとの最大の相互運用性のためのトークンと引用符で囲まれた文字列の構文の両方をサポートする必要があります。"
    },
    {
      "indent": 0,
      "text": "3. Status Code Definitions",
      "section_title": true,
      "ja": "3.ステータスコードの定義"
    },
    {
      "indent": 0,
      "text": "3.1. 401 Unauthorized",
      "section_title": true,
      "ja": "3.1.  401無許可"
    },
    {
      "indent": 3,
      "text": "The 401 (Unauthorized) status code indicates that the request has not been applied because it lacks valid authentication credentials for the target resource. The server generating a 401 response MUST send a WWW-Authenticate header field (Section 4.1) containing at least one challenge applicable to the target resource.",
      "ja": "401（Unauthorized）ステータスコードは、ターゲット・リソースの有効な認証資格情報がないため、要求が適用されていないことを示しています。 401応答を生成するサーバは、ターゲットリソースに適用可能な少なくとも一つのチャレンジを含むWWW-Authenticateヘッダフィールド（4.1節）を送信しなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the request included authentication credentials, then the 401 response indicates that authorization has been refused for those credentials. The user agent MAY repeat the request with a new or replaced Authorization header field (Section 4.2). If the 401 response contains the same challenge as the prior response, and the user agent has already attempted authentication at least once, then the user agent SHOULD present the enclosed representation to the user, since it usually contains relevant diagnostic information.",
      "ja": "要求が認証資格情報が含まれている場合、401レスポンスは認証がこれらの資格情報のために拒否されたことを示しています。ユーザエージェントは、新しいまたは交換Authorizationヘッダフィールド（セクション4.2）を用いて要求を繰り返してもよいです。 401応答は、前の応答と同じチャレンジを含み、ユーザエージェントが既に少なくとも一回の認証を試みた場合、それは通常、関連する診断情報を含んでいるので、ユーザエージェントは、ユーザに囲まれた表現を提示しなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.2. 407 Proxy Authentication Required",
      "section_title": true,
      "ja": "3.2.  407プロキシ認証が必要"
    },
    {
      "indent": 3,
      "text": "The 407 (Proxy Authentication Required) status code is similar to 401 (Unauthorized), but it indicates that the client needs to authenticate itself in order to use a proxy. The proxy MUST send a Proxy-Authenticate header field (Section 4.3) containing a challenge applicable to that proxy for the target resource. The client MAY repeat the request with a new or replaced Proxy-Authorization header field (Section 4.4).",
      "ja": "407（プロキシ認証が必要）ステータスコードは401（Unauthorized）に似ていますが、それは、クライアントがプロキシを使用するために自分自身を認証する必要があることを示しています。プロキシは、ターゲットリソースのそのプロキシに適用チャレンジを含むプロキシ認証ヘッダフィールド（4.3節）を送信しなければなりません。クライアントは、新規または交換Proxy-Authorizationヘッダフィールド（4.4節）でリクエストを繰り返す事ができます。"
    },
    {
      "indent": 0,
      "text": "4. Header Field Definitions",
      "section_title": true,
      "ja": "4.ヘッダーフィールドの定義"
    },
    {
      "indent": 3,
      "text": "This section defines the syntax and semantics of header fields related to the HTTP authentication framework.",
      "ja": "このセクションでは、HTTP認証フレームワークに関連したヘッダフィールドの構文と意味論を定義します。"
    },
    {
      "indent": 0,
      "text": "4.1. WWW-Authenticate",
      "section_title": true,
      "ja": "4.1.  WWW認証"
    },
    {
      "indent": 3,
      "text": "The \"WWW-Authenticate\" header field indicates the authentication scheme(s) and parameters applicable to the target resource.",
      "ja": "「WWW認証」ヘッダフィールドは、認証方式（S）とターゲットリソースに適用可能なパラメータを示しています。"
    },
    {
      "indent": 5,
      "text": "WWW-Authenticate = 1#challenge",
      "ja": "WWW認証= 1＃挑戦"
    },
    {
      "indent": 3,
      "text": "A server generating a 401 (Unauthorized) response MUST send a WWW-Authenticate header field containing at least one challenge. A server MAY generate a WWW-Authenticate header field in other response messages to indicate that supplying credentials (or different credentials) might affect the response.",
      "ja": "401（不正な）応答を生成するサーバは、少なくとも一つのチャレンジを含むWWW-Authenticateヘッダフィールドを送らなければなりません。サーバーは、資格証明書（または別の資格情報）を供給すると、応答に影響を与える可能性があることを示すために、他の応答メッセージにWWW-Authenticateヘッダフィールドを生成してもよいです。"
    },
    {
      "indent": 3,
      "text": "A proxy forwarding a response MUST NOT modify any WWW-Authenticate fields in that response.",
      "ja": "応答を転送するプロキシはその応答における任意のWWW認証フィールドを変更してはいけません。"
    },
    {
      "indent": 3,
      "text": "User agents are advised to take special care in parsing the field value, as it might contain more than one challenge, and each challenge can contain a comma-separated list of authentication parameters. Furthermore, the header field itself can occur multiple times.",
      "ja": "ユーザエージェントは、それが複数の課題が含まれている可能性があるとして、フィールドの値を解析するには、特別な世話をすることをお勧めします、そして各チャレンジは、認証パラメータのカンマ区切りリストを含めることができます。また、ヘッダフィールド自体が複数回発生することができます。"
    },
    {
      "indent": 3,
      "text": "For instance:",
      "ja": "例えば："
    },
    {
      "indent": 5,
      "text": "WWW-Authenticate: Newauth realm=\"apps\", type=1, title=\"Login to \\\"apps\\\"\", Basic realm=\"simple\"",
      "ja": "WWW認証：Newauth分野= \"アプリケーション\"、タイプ= 1、タイトル= \"\\ APPS \"を\\にログイン\"\"、基本領域= \"\" シンプル"
    },
    {
      "indent": 3,
      "text": "This header field contains two challenges; one for the \"Newauth\" scheme with a realm value of \"apps\", and two additional parameters \"type\" and \"title\", and another one for the \"Basic\" scheme with a realm value of \"simple\".",
      "ja": "このヘッダーフィールドは、2つの課題が含まれています。 「アプリケーション」、および2つの追加パラメータの「タイプ」と「タイトル」、および「シンプル」のレルム値を持つ「ベーシック」スキームのためのもう一つのレルム値を持つ「Newauth」スキームの1。"
    },
    {
      "indent": 6,
      "text": "Note: The challenge grammar production uses the list syntax as well. Therefore, a sequence of comma, whitespace, and comma can be considered either as applying to the preceding challenge, or to be an empty entry in the list of challenges. In practice, this ambiguity does not affect the semantics of the header field value and thus is harmless.",
      "ja": "注：チャレンジ文法の生産が同様にリスト構文を使用しています。したがって、カンマ、空白、およびコンマの配列が先行チャレンジに適用すること、又は課題のリストに空のエントリであるとのいずれかとして考えることができます。実際には、この曖昧さは、ヘッダフィールド値のセマンティクスに影響を与えるため、無害ではありません。"
    },
    {
      "indent": 0,
      "text": "4.2. Authorization",
      "section_title": true,
      "ja": "4.2. 認定"
    },
    {
      "indent": 3,
      "text": "The \"Authorization\" header field allows a user agent to authenticate itself with an origin server -- usually, but not necessarily, after receiving a 401 (Unauthorized) response. Its value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.",
      "ja": "通常、必ずしもそうではないが、401（不正な）応答を受信した後に - 「承認」ヘッダフィールドには、ユーザエージェントがオリジンサーバに自身を認証することを可能にします。その値は、要求されたリソースのレルムのユーザエージェントの認証情報を含む資格情報で構成されています。"
    },
    {
      "indent": 5,
      "text": "Authorization = credentials",
      "ja": "認証資格情報="
    },
    {
      "indent": 3,
      "text": "If a request is authenticated and a realm specified, the same credentials are presumed to be valid for all other requests within this realm (assuming that the authentication scheme itself does not require otherwise, such as credentials that vary according to a challenge value or using synchronized clocks).",
      "ja": "要求が認証され、指定された領域されている場合は、同じ認証情報は、チャレンジ値に応じて、または同期を使用して変化させる証明書として、認証方式自体が他を必要としないと仮定すると（この領域内の他のすべての要求に対して有効であると推定されますクロック）。"
    },
    {
      "indent": 3,
      "text": "A proxy forwarding a request MUST NOT modify any Authorization fields in that request. See Section 3.2 of [RFC7234] for details of and requirements pertaining to handling of the Authorization field by HTTP caches.",
      "ja": "要求を転送プロキシはその要求のいずれかの認証フィールドを変更してはいけません。 HTTPキャッシュによりAuthorizationフィールドの取り扱いに関するの詳細と要件については、[RFC7234]の3.2節を参照してください。"
    },
    {
      "indent": 0,
      "text": "4.3. Proxy-Authenticate",
      "section_title": true,
      "ja": "4.3. プロキシ認証"
    },
    {
      "indent": 3,
      "text": "The \"Proxy-Authenticate\" header field consists of at least one challenge that indicates the authentication scheme(s) and parameters applicable to the proxy for this effective request URI (Section 5.5 of [RFC7230]). A proxy MUST send at least one Proxy-Authenticate header field in each 407 (Proxy Authentication Required) response that it generates.",
      "ja": "「プロキシ認証」ヘッダフィールドは、認証方式（S）と、この有効リクエストURI（[RFC7230]のセクション5.5）のためのプロキシに適用可能なパラメータを表す少なくとも一つの挑戦で構成されています。プロキシは、それが生成する各407（プロキシ認証が必要）応答して、少なくとも1つのプロキシ認証ヘッダフィールドを送らなければなりません。"
    },
    {
      "indent": 5,
      "text": "Proxy-Authenticate = 1#challenge",
      "ja": "プロキシ認証= 1＃挑戦"
    },
    {
      "indent": 3,
      "text": "Unlike WWW-Authenticate, the Proxy-Authenticate header field applies only to the next outbound client on the response chain. This is because only the client that chose a given proxy is likely to have the credentials necessary for authentication. However, when multiple proxies are used within the same administrative domain, such as office and regional caching proxies within a large corporate network, it is common for credentials to be generated by the user agent and passed through the hierarchy until consumed. Hence, in such a configuration, it will appear as if Proxy-Authenticate is being forwarded because each proxy will send the same challenge set.",
      "ja": "WWW認証とは異なり、Proxy-Authenticateヘッダフィールドは、応答チェーン上の次のアウトバウンドのクライアントにのみ適用されます。指定されたプロキシを選んだだけで、クライアントは認証に必要な資格情報を持っている可能性があるためです。複数のプロキシが大規模な企業ネットワーク内、オフィスや地域のキャッシングプロキシと同じ管理ドメイン内で使用されているとき、資格情報がユーザーエージェントによって生成され、階層を通過させるために消費されるまでしかし、それが一般的です。したがって、このような構成では、各プロキシが同じチャレンジセットを送信するため、プロキシ認証が転送されているかのように表示されます。"
    },
    {
      "indent": 3,
      "text": "Note that the parsing considerations for WWW-Authenticate apply to this header field as well; see Section 4.1 for details.",
      "ja": "WWW認証のための構文解析考察は同様にこのヘッダフィールドに適用されることに留意されたいです。詳細については、セクション4.1を参照してください。"
    },
    {
      "indent": 0,
      "text": "4.4. Proxy-Authorization",
      "section_title": true,
      "ja": "4.4. プロキシ認証"
    },
    {
      "indent": 3,
      "text": "The \"Proxy-Authorization\" header field allows the client to identify itself (or its user) to a proxy that requires authentication. Its value consists of credentials containing the authentication information of the client for the proxy and/or realm of the resource being requested.",
      "ja": "「プロキシ認証」ヘッダフィールドは、クライアントが認証を必要とするプロキシにそれ自体（又はそのユーザ）を識別することを可能にします。その値は、プロキシおよび/または要求されたリソースのレルムのクライアントの認証情報を含む資格情報で構成されています。"
    },
    {
      "indent": 5,
      "text": "Proxy-Authorization = credentials",
      "ja": "プロキシ認証資格情報="
    },
    {
      "indent": 3,
      "text": "Unlike Authorization, the Proxy-Authorization header field applies only to the next inbound proxy that demanded authentication using the Proxy-Authenticate field. When multiple proxies are used in a chain, the Proxy-Authorization header field is consumed by the first inbound proxy that was expecting to receive credentials. A proxy MAY relay the credentials from the client request to the next proxy if that is the mechanism by which the proxies cooperatively authenticate a given request.",
      "ja": "認証とは異なり、Proxy-Authorizationヘッダフィールドは唯一のプロキシ認証フィールドを使用して認証を要求し、次のインバウンドプロキシに適用されます。複数のプロキシをチェーンで使用される場合、Proxy-Authorizationヘッダフィールドは、認証情報を受信するように期待していた最初のインバウンドプロキシによって消費されます。それはプロキシが協調与えられた要求を認証するメカニズムがある場合、プロキシは、次のプロキシにクライアント要求から資格情報を中継することができます。"
    },
    {
      "indent": 0,
      "text": "5. IANA Considerations",
      "section_title": true,
      "ja": "5. IANAの考慮事項"
    },
    {
      "indent": 0,
      "text": "5.1. Authentication Scheme Registry",
      "section_title": true,
      "ja": "5.1. 認証スキームのレジストリ"
    },
    {
      "indent": 3,
      "text": "The \"Hypertext Transfer Protocol (HTTP) Authentication Scheme Registry\" defines the namespace for the authentication schemes in challenges and credentials. It has been created and is now maintained at <http://www.iana.org/assignments/http-authschemes>.",
      "ja": "「ハイパーテキスト転送プロトコル（HTTP）認証スキームのレジストリは」挑戦と資格証明書で認証スキームの名前空間を定義します。これは、作成されており、現在、<http://www.iana.org/assignments/http-authschemes>に維持されています。"
    },
    {
      "indent": 0,
      "text": "5.1.1. Procedure",
      "section_title": true,
      "ja": "5.1.1. 手順"
    },
    {
      "indent": 3,
      "text": "Registrations MUST include the following fields:",
      "ja": "登録は、次のフィールドを含める必要があります。"
    },
    {
      "indent": 3,
      "text": "o Authentication Scheme Name",
      "ja": "O認証スキームの名前"
    },
    {
      "indent": 3,
      "text": "o Pointer to specification text",
      "ja": "Oポインターは、テキストを仕様に"
    },
    {
      "indent": 3,
      "text": "o Notes (optional)",
      "ja": "Oノート（オプション）"
    },
    {
      "indent": 3,
      "text": "Values to be added to this namespace require IETF Review (see [RFC5226], Section 4.1).",
      "ja": "この名前空間に追加される値は、IETFレビュー（参照[RFC5226]、セクション4.1）が必要です。"
    },
    {
      "indent": 0,
      "text": "5.1.2. Considerations for New Authentication Schemes",
      "section_title": true,
      "ja": "5.1.2. 新しい認証方式のための考慮事項"
    },
    {
      "indent": 3,
      "text": "There are certain aspects of the HTTP Authentication Framework that put constraints on how new authentication schemes can work:",
      "ja": "新しい認証方式が動作することができますどのように制約を置くHTTP認証フレームワークの特定の側面があります。"
    },
    {
      "indent": 3,
      "text": "o HTTP authentication is presumed to be stateless: all of the information necessary to authenticate a request MUST be provided in the request, rather than be dependent on the server remembering prior requests. Authentication based on, or bound to, the underlying connection is outside the scope of this specification and inherently flawed unless steps are taken to ensure that the connection cannot be used by any party other than the authenticated user (see Section 2.3 of [RFC7230]).",
      "ja": "O HTTP認証はステートレスであると推定されています要求を認証するために必要なすべての情報は、事前のリクエストを思い出して、サーバーに依存するのではなく、要求に提供しなければなりません。認証（[RFC7230]のセクション2.3を参照）に基づいて、またはに結合し、ステップは接続が認証されたユーザー以外の者によって使用することができないことを保証するために取られない限り、根本的な接続は、本明細書と本質的に欠陥の範囲外であります。"
    },
    {
      "indent": 3,
      "text": "o The authentication parameter \"realm\" is reserved for defining protection spaces as described in Section 2.2. New schemes MUST NOT use it in a way incompatible with that definition.",
      "ja": "O認証パラメータ「レルム」は、セクション2.2で説明したように保護空間を定義するために予約されています。新制度は、​​その定義と互換性のない方法でそれを使用してはなりません。"
    },
    {
      "indent": 3,
      "text": "o The \"token68\" notation was introduced for compatibility with existing authentication schemes and can only be used once per challenge or credential. Thus, new schemes ought to use the auth-param syntax instead, because otherwise future extensions will be impossible.",
      "ja": "O「token68」の表記は、既存の認証方式との互換性のために導入され、唯一の課題や資格ごとに一度使用することができます。このように、新しいスキームは、そうでない場合は、将来の拡張が不可能になりますので、代わりのauth-のparamの構文を使用するべきです。"
    },
    {
      "indent": 3,
      "text": "o The parsing of challenges and credentials is defined by this specification and cannot be modified by new authentication schemes. When the auth-param syntax is used, all parameters ought to support both token and quoted-string syntax, and syntactical constraints ought to be defined on the field value after parsing (i.e., quoted-string processing). This is necessary so that recipients can use a generic parser that applies to all authentication schemes.",
      "ja": "Oの課題と資格情報の解析は、この仕様で定義され、新しい認証方式が変更することはできません。 AUTH-PARAM構文を使用する場合、すべてのパラメータは、両方のトークンと引用符で囲まれた文字列の構文をサポートするべき、および構文制約（即ち、引用符で囲まれた文字列処理）を解析した後、フィールドの値に定義されるべきです。受信者は、すべての認証方式に適用される一般的なパーサーを使用できるようにするために必要です。"
    },
    {
      "indent": 6,
      "text": "Note: The fact that the value syntax for the \"realm\" parameter is restricted to quoted-string was a bad design choice not to be repeated for new parameters.",
      "ja": "注意：「分野」パラメータの値の構文は、引用符で囲まれた文字列に制限されているという事実はない新しいパラメータのために繰り返されるのは悪い設計上の選択でした。"
    },
    {
      "indent": 3,
      "text": "o Definitions of new schemes ought to define the treatment of unknown extension parameters. In general, a \"must-ignore\" rule is preferable to a \"must-understand\" rule, because otherwise it will be hard to introduce new parameters in the presence of legacy recipients. Furthermore, it's good to describe the policy for defining new parameters (such as \"update the specification\" or \"use this registry\").",
      "ja": "新しいスキームのOの定義は、未知の拡張パラメータの治療を定義するべきです。それ以外の場合は、従来の受信者の存在下で、新しいパラメータを導入することは困難になるため、一般的には、「-無視しなければならない」のルールは、「理解しなければならない」ルールに好適です。さらに、それは（例えば、「仕様書を更新する」または「このレジストリを使用」など）新しいパラメータを定義するためのポリシーを記述するために良いことです。"
    },
    {
      "indent": 3,
      "text": "o Authentication schemes need to document whether they are usable in origin-server authentication (i.e., using WWW-Authenticate), and/or proxy authentication (i.e., using Proxy-Authenticate).",
      "ja": "O認証方式（すなわち、WWW認証を使用して）それらはオリジンサーバの認証に使用可能であるかどうかを文書化する必要があり、および/またはプロキシ認証（すなわち、プロキシ認証を使用して）。"
    },
    {
      "indent": 3,
      "text": "o The credentials carried in an Authorization header field are specific to the user agent and, therefore, have the same effect on HTTP caches as the \"private\" Cache-Control response directive (Section 5.2.2.6 of [RFC7234]), within the scope of the request in which they appear.",
      "ja": "Authorizationヘッダフィールド内で運ばクレデンシャルは範囲内、従って、「プライベート」のCache-Control応答指令（[RFC7234]のセクション5.2.2.6）としてHTTPキャッシュに同じ効果を持つ、ユーザーエージェントに固有のものとOそれらが現れる要求の。"
    },
    {
      "indent": 6,
      "text": "Therefore, new authentication schemes that choose not to carry credentials in the Authorization header field (e.g., using a newly defined header field) will need to explicitly disallow caching, by mandating the use of either Cache-Control request directives (e.g., \"no-store\", Section 5.2.1.5 of [RFC7234]) or response directives (e.g., \"private\").",
      "ja": "したがって、ないことを選択した新しい認証方式は、Authorizationヘッダフィールドに資格情報を運ぶために（例えば、新しく定義されたヘッダフィールドを使用して）明示的に（例えば、「無のCache-Control要求ディレクティブのいずれかの使用を義務付けることで、キャッシュを禁止する必要があります。店」、[RFC7234]のセクション5.2.1.5）または応答ディレクティブ（例えば、 \"）\" プライベート。"
    },
    {
      "indent": 0,
      "text": "5.2. Status Code Registration",
      "section_title": true,
      "ja": "5.2. ステータスコード登録"
    },
    {
      "indent": 3,
      "text": "The \"Hypertext Transfer Protocol (HTTP) Status Code Registry\" located at <http://www.iana.org/assignments/http-status-codes> has been updated with the registrations below:",
      "ja": "ある「ハイパーテキスト転送プロトコル（HTTP）ステータスコードレジストリ」<http://www.iana.org/assignments/http-status-codes>下記の登録で更新されました："
    },
    {
      "indent": 3,
      "text": "+-------+-------------------------------+-------------+\n| Value | Description                   | Reference   |\n+-------+-------------------------------+-------------+\n| 401   | Unauthorized                  | Section 3.1 |\n| 407   | Proxy Authentication Required | Section 3.2 |\n+-------+-------------------------------+-------------+",
      "raw": true
    },
    {
      "indent": 0,
      "text": "5.3. Header Field Registration",
      "section_title": true,
      "ja": "5.3. ヘッダーフィールドの登録"
    },
    {
      "indent": 3,
      "text": "HTTP header fields are registered within the \"Message Headers\" registry maintained at <http://www.iana.org/assignments/message-headers/>.",
      "ja": "HTTPヘッダフィールドは、<http://www.iana.org/assignments/message-headers/>に維持「メッセージヘッダ」レジストリ内に登録されています。"
    },
    {
      "indent": 3,
      "text": "This document defines the following HTTP header fields, so the \"Permanent Message Header Field Names\" registry has been updated accordingly (see [BCP90]).",
      "ja": "この文書は、次のHTTPヘッダーフィールドを定義するので、「永続的メッセージヘッダーフィールド名」レジストリ（[BCP90]参照）に応じて更新されました。"
    },
    {
      "indent": 3,
      "text": "+---------------------+----------+----------+-------------+\n| Header Field Name   | Protocol | Status   | Reference   |\n+---------------------+----------+----------+-------------+\n| Authorization       | http     | standard | Section 4.2 |\n| Proxy-Authenticate  | http     | standard | Section 4.3 |\n| Proxy-Authorization | http     | standard | Section 4.4 |\n| WWW-Authenticate    | http     | standard | Section 4.1 |\n+---------------------+----------+----------+-------------+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The change controller is: \"IETF (iesg@ietf.org) - Internet Engineering Task Force\".",
      "ja": "変更コントローラは次のとおりです。「IETF（iesg@ietf.org） - インターネットエンジニアリングタスクフォース」。"
    },
    {
      "indent": 0,
      "text": "6. Security Considerations",
      "section_title": true,
      "ja": "6.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "This section is meant to inform developers, information providers, and users of known security concerns specific to HTTP authentication. More general security considerations are addressed in HTTP messaging [RFC7230] and semantics [RFC7231].",
      "ja": "このセクションでは、開発者、情報提供者、およびHTTP認証に固有の既知のセキュリティ上の懸念のユーザーに通知するものとします。もっと一般的なセキュリティ上の考慮事項は、HTTPメッセージ[RFC7230]と意味論[RFC7231]で扱われています。"
    },
    {
      "indent": 3,
      "text": "Everything about the topic of HTTP authentication is a security consideration, so the list of considerations below is not exhaustive. Furthermore, it is limited to security considerations regarding the authentication framework, in general, rather than discussing all of the potential considerations for specific authentication schemes (which ought to be documented in the specifications that define those schemes). Various organizations maintain topical information and links to current research on Web application security (e.g., [OWASP]), including common pitfalls for implementing and using the authentication schemes found in practice.",
      "ja": "HTTP認証のトピックに関するすべては、セキュリティの考慮事項ですので、下記の注意事項のリストは網羅的なものではありません。また、一般的には、認証フレームワークに関するセキュリティ上の考慮事項に限定されるのではなく、（ものスキームを定義する仕様に文書化されるべき）特定の認証方式のための潜在的な考慮事項の全てを議論します。様々な組織が実際に見つかった認証スキームを実装し、使用するための一般的な落とし穴を含むWebアプリケーション・セキュリティ（例えば、[OWASP]）上の現在の研究への局所情報とリンクを維持します。"
    },
    {
      "indent": 0,
      "text": "6.1. Confidentiality of Credentials",
      "section_title": true,
      "ja": "6.1. 資格情報の機密性"
    },
    {
      "indent": 3,
      "text": "The HTTP authentication framework does not define a single mechanism for maintaining the confidentiality of credentials; instead, each authentication scheme defines how the credentials are encoded prior to transmission. While this provides flexibility for the development of future authentication schemes, it is inadequate for the protection of existing schemes that provide no confidentiality on their own, or that do not sufficiently protect against replay attacks. Furthermore, if the server expects credentials that are specific to each individual user, the exchange of those credentials will have the effect of identifying that user even if the content within credentials remains confidential.",
      "ja": "HTTP認証フレームワークは、資格情報の機密性を維持するための単一のメカニズムを定義しません。代わりに、各認証方式は、認証情報が送信前に符号化される方法を定義します。これは、将来の認証方式を開発するための柔軟性を提供していますが、それは自分自身に何の機密性を提供しない、またはそれは十分にリプレイ攻撃を防御していない既存の方式の保護のためには不十分です。サーバは、各ユーザに固有の資格情報を期待している場合、さらに、それらの資格情報の交換は、資格情報内のコンテンツが機密のままであっても、そのユーザーを特定の効果を有するであろう。"
    },
    {
      "indent": 3,
      "text": "HTTP depends on the security properties of the underlying transport-or session-level connection to provide confidential transmission of header fields. In other words, if a server limits access to authenticated users using this framework, the server needs to ensure that the connection is properly secured in accordance with the nature of the authentication scheme used. For example, services that depend on individual user authentication often require a connection to be secured with TLS (\"Transport Layer Security\", [RFC5246]) prior to exchanging any credentials.",
      "ja": "HTTPヘッダフィールドの親展送信を提供するために、基礎となるトランスポートまたはセッション・レベル接続のセキュリティ特性に依存します。認証されたユーザへのサーバのアクセスを制限しますが、このフレームワークを使用して、言い換えれば、サーバは、接続が適切に使用される認証スキームの性質に応じて固定されていることを確認する必要があります。例えば、個々のユーザ認証に依存するサービスは、多くの場合、以前のいずれかの資格情報を交換するTLS（「トランスポート層セキュリティ」、[RFC5246]）で固定する接続が必要です。"
    },
    {
      "indent": 0,
      "text": "6.2. Authentication Credentials and Idle Clients",
      "section_title": true,
      "ja": "6.2. 認証資格とアイドル状態のクライアント"
    },
    {
      "indent": 3,
      "text": "Existing HTTP clients and user agents typically retain authentication information indefinitely. HTTP does not provide a mechanism for the origin server to direct clients to discard these cached credentials, since the protocol has no awareness of how credentials are obtained or managed by the user agent. The mechanisms for expiring or revoking credentials can be specified as part of an authentication scheme definition.",
      "ja": "既存のHTTPクライアントとユーザエージェントは、一般的に無期限に認証情報を保持します。 HTTPプロトコルは、資格情報がユーザエージェントによって得られるか、または管理する方法のない意識を持っていないので、これらのキャッシュされた資格情報を破棄し、直接クライアントにオリジンサーバのためのメカニズムを提供していません。資格証明を期限切れや失効のためのメカニズムは、認証方式の定義の一部として指定することができます。"
    },
    {
      "indent": 3,
      "text": "Circumstances under which credential caching can interfere with the application's security model include but are not limited to:",
      "ja": "資格情報のキャッシュは、アプリケーションのセキュリティモデルに干渉する可能性がある状況には、これらに限定されません："
    },
    {
      "indent": 3,
      "text": "o Clients that have been idle for an extended period, following which the server might wish to cause the client to re-prompt the user for credentials.",
      "ja": "長時間アイドル状態になっているOクライアント、サーバはクライアントが資格情報を再要求したユーザに起こすことを望むかもしれません、以下の通りです。"
    },
    {
      "indent": 3,
      "text": "o Applications that include a session termination indication (such as a \"logout\" or \"commit\" button on a page) after which the server side of the application \"knows\" that there is no further reason for the client to retain the credentials.",
      "ja": "O（例えば、「ログアウト」として、またはページ上のボタンを「コミット」）セッション終了表示を含むアプリケーションのアプリケーションのサーバ側の後は、クライアントが認証情報を保持するためのさらなる理由がないことを「知っています」。"
    },
    {
      "indent": 3,
      "text": "User agents that cache credentials are encouraged to provide a readily accessible mechanism for discarding cached credentials under user control.",
      "ja": "資格情報をキャッシュするユーザエージェントは、ユーザの管理下にキャッシュされた資格情報を破棄するために容易にアクセスできる仕組みを提供することが奨励されています。"
    },
    {
      "indent": 0,
      "text": "6.3. Protection Spaces",
      "section_title": true,
      "ja": "6.3. 保護スペース"
    },
    {
      "indent": 3,
      "text": "Authentication schemes that solely rely on the \"realm\" mechanism for establishing a protection space will expose credentials to all resources on an origin server. Clients that have successfully made authenticated requests with a resource can use the same authentication credentials for other resources on the same origin server. This makes it possible for a different resource to harvest authentication credentials for other resources.",
      "ja": "単に保護空間を確立するため、「領域」のメカニズムに依存している認証方式は、オリジンサーバ上のすべてのリソースに資格情報を公開します。成功したリソースで認証要求をしたクライアントは、同じオリジンサーバ上の他のリソースに同じ認証資格情報を使用することができます。別のリソースが他のリソースのための認証情報を収穫するためにこれを可能にします。"
    },
    {
      "indent": 3,
      "text": "This is of particular concern when an origin server hosts resources for multiple parties under the same canonical root URI (Section 2.2). Possible mitigation strategies include restricting direct access to authentication credentials (i.e., not making the content of the Authorization request header field available), and separating protection spaces by using a different host name (or port number) for each party.",
      "ja": "これは、特に懸念されるときに、同じ正規のルートURIの下に複数の関係者のためのオリジンサーバのホストのリソース（2.2節）。可能な軽減戦略は、認証証明書（すなわち、利用可能Authorizationリクエストヘッダフィールドの内容をしていない）への直接アクセスを制限し、各当事者のために別のホスト名（またはポート番号）を使用して、保護空間を分離しています。"
    },
    {
      "indent": 0,
      "text": "7. Acknowledgments",
      "section_title": true,
      "ja": "7.謝辞"
    },
    {
      "indent": 3,
      "text": "This specification takes over the definition of the HTTP Authentication Framework, previously defined in RFC 2617. We thank John Franks, Phillip M. Hallam-Baker, Jeffery L. Hostetler, Scott D. Lawrence, Paul J. Leach, Ari Luotonen, and Lawrence C. Stewart for their work on that specification. See Section 6 of [RFC2617] for further acknowledgements.",
      "ja": "この仕様は、以前に我々はジョン・フランクス、フィリップM.ハラム - ベイカー、ジェフリーL. Hostetler、スコット・D.ローレンス、ポール・J.リーチ、アリ・ルオトナン、およびローレンスに感謝RFC 2617で定義され、HTTP認証フレームワークの定義を引き継ぎその仕様上の自分の仕事のためのC.スチュワート。さらに受信確認のために[RFC2617]のセクション6を参照してください。"
    },
    {
      "indent": 3,
      "text": "See Section 10 of [RFC7230] for the Acknowledgments related to this document revision.",
      "ja": "この文書の改訂に関連する謝辞のために[RFC7230]のセクション10を参照してください。"
    },
    {
      "indent": 0,
      "text": "8. References",
      "section_title": true,
      "ja": "8.参照文献"
    },
    {
      "indent": 0,
      "text": "8.1. Normative References",
      "section_title": true,
      "ja": "8.1. 引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC5234] Crocker, D., Ed. and P. Overell, \"Augmented BNF for Syntax Specifications: ABNF\", STD 68, RFC 5234, January 2008.",
      "ja": "[RFC5234]クロッカー、D.、エド。そして、P. Overell、 \"構文仕様のための増大しているBNF：ABNF\"、STD 68、RFC 5234、2008年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC7230] Fielding, R., Ed. and J. Reschke, Ed., \"Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing\", RFC 7230, June 2014.",
      "ja": "[RFC7230]フィールディング、R.、エド。 。とJ. Reschke、エド、 \"ハイパーテキスト転送プロトコル（HTTP / 1.1）：メッセージの構文とルーティング\"、RFC 7230、2014年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC7231] Fielding, R., Ed. and J. Reschke, Ed., \"Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content\", RFC 7231, June 2014.",
      "ja": "[RFC7231]フィールディング、R.、エド。そして、J. Reschke、エド、 \"ハイパーテキスト転送プロトコル（HTTP / 1.1）：セマンティクスおよびコンテンツ\"、RFC 7231、2014年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC7234] Fielding, R., Ed., Nottingham, M., Ed., and J. Reschke, Ed., \"Hypertext Transfer Protocol (HTTP/1.1): Caching\", RFC 7234, June 2014.",
      "ja": "[RFC7234]フィールディング、R.、エド、ノッティンガム、M.、エド、及びJ. Reschke、編、 \"ハイパーテキスト転送プロトコル（HTTP / 1.1）：キャッシュ\"。。。、RFC 7234、2014年6月。"
    },
    {
      "indent": 0,
      "text": "8.2. Informative References",
      "section_title": true,
      "ja": "8.2. 参考文献"
    },
    {
      "indent": 3,
      "text": "[BCP90] Klyne, G., Nottingham, M., and J. Mogul, \"Registration Procedures for Message Header Fields\", BCP 90, RFC 3864, September 2004.",
      "ja": "[BCP90] Klyne、G.、ノッティンガム、M.、およびJ.モーグル、 \"メッセージヘッダフィールドの登録手順\"、BCP 90、RFC 3864、2004年9月。"
    },
    {
      "indent": 3,
      "text": "[OWASP] van der Stock, A., Ed., \"A Guide to Building Secure Web Applications and Web Services\", The Open Web Application Security Project (OWASP) 2.0.1, July 2005, <https://www.owasp.org/>.",
      "ja": "[OWASP]ファンデ証券、A.、エド、 \"セキュアなWebアプリケーションやWebサービスを構築するガイド\"、オープンWebアプリケーションセキュリティプロジェクト（OWASP）2.0.1、2005年7月、<HTTPS：。//www.owasp .ORG />。"
    },
    {
      "indent": 3,
      "text": "[RFC2616] Fielding, R., Gettys, J., Mogul, J., Frystyk, H., Masinter, L., Leach, P., and T. Berners-Lee, \"Hypertext Transfer Protocol -- HTTP/1.1\", RFC 2616, June 1999.",
      "ja": "[RFC2616]フィールディング、R.、ゲティス、J.、モーグル、J.、Frystyk、H.、Masinter、L.、リーチ、P.、およびT.バーナーズ - リー、 \"ハイパーテキスト転送プロトコル -  HTTP / 1.1\" 、RFC 2616、1999年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC2617] Franks, J., Hallam-Baker, P., Hostetler, J., Lawrence, S., Leach, P., Luotonen, A., and L. Stewart, \"HTTP Authentication: Basic and Digest Access Authentication\", RFC 2617, June 1999.",
      "ja": "[RFC2617]フランクス、J.、ハラム・ベイカー、P.、Hostetler、J.、ローレンス、S.、リーチ、P.、Luotonen、A.、およびL.スチュワート、 \"HTTP認証：基本とダイジェストアクセス認証\" 、RFC 2617、1999年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC3986] Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform Resource Identifier (URI): Generic Syntax\", STD 66, RFC 3986, January 2005.",
      "ja": "[RFC3986]バーナーズ - リー、T.、フィールディング、R.、およびL. Masinter、 \"ユニフォームリソース識別子（URI）：汎用構文\"、STD 66、RFC 3986、2005年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC4648] Josefsson, S., \"The Base16, Base32, and Base64 Data Encodings\", RFC 4648, October 2006.",
      "ja": "[RFC4648] Josefsson氏、S.、 \"Base16、Base32、およびBase64でデータエンコーディング\"、RFC 4648、2006年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC5226] Narten, T. and H. Alvestrand, \"Guidelines for Writing an IANA Considerations Section in RFCs\", BCP 26, RFC 5226, May 2008.",
      "ja": "[RFC5226] Narten氏、T.とH. Alvestrand、 \"RFCsにIANA問題部に書くためのガイドライン\"、BCP 26、RFC 5226、2008年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC5246] Dierks, T. and E. Rescorla, \"The Transport Layer Security (TLS) Protocol Version 1.2\", RFC 5246, August 2008.",
      "ja": "[RFC5246]ダークス、T.およびE.レスコラ、 \"トランスポート層セキュリティ（TLS）プロトコルバージョン1.2\"、RFC 5246、2008年8月。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Changes from RFCs 2616 and 2617",
      "ja": "RFC 2616および2617からの変更点付録A."
    },
    {
      "indent": 3,
      "text": "The framework for HTTP Authentication is now defined by this document, rather than RFC 2617.",
      "ja": "HTTP認証のためのフレームワークは、現在ではなくRFC 2617より、本文書によって定義されます。"
    },
    {
      "indent": 3,
      "text": "The \"realm\" parameter is no longer always required on challenges; consequently, the ABNF allows challenges without any auth parameters. (Section 2)",
      "ja": "「レルム」パラメータは、もはや常に挑戦に必要とされません。その結果、ABNFは、任意の認証パラメータを指定せずに挑戦することができます。 （第2節）"
    },
    {
      "indent": 3,
      "text": "The \"token68\" alternative to auth-param lists has been added for consistency with legacy authentication schemes such as \"Basic\". (Section 2)",
      "ja": "auth-のparamリストへの「token68」の代替は、このような「基本」として、従来の認証方式との整合性のために追加されました。 （第2節）"
    },
    {
      "indent": 3,
      "text": "This specification introduces the Authentication Scheme Registry, along with considerations for new authentication schemes. (Section 5.1)",
      "ja": "この仕様は、新たな認証方式のための配慮とともに、認証スキームレジストリを紹介します。 （5.1節）"
    },
    {
      "indent": 0,
      "text": "Appendix B. Imported ABNF",
      "ja": "付録B.インポートABNF"
    },
    {
      "indent": 3,
      "text": "The following core rules are included by reference, as defined in Appendix B.1 of [RFC5234]: ALPHA (letters), CR (carriage return), CRLF (CR LF), CTL (controls), DIGIT (decimal 0-9), DQUOTE (double quote), HEXDIG (hexadecimal 0-9/A-F/a-f), LF (line feed), OCTET (any 8-bit sequence of data), SP (space), and VCHAR (any visible US-ASCII character).",
      "ja": "[RFC5234]の付録B.1で定義されるように以下のコアルールは、参照することにより含まれる：ALPHA（文字）、CR（キャリッジリターン）、CRLF（CR LF）、CTL（コントロール）、数字（小数0-9） 、DQUOTE（二重引用符）、HEXDIG（16進数0-9 / AF / AF）、LF（ラインフィード）、OCTET（データの8ビットシーケンス）、SP（空間）、及びVCHAR（目に見えるUS-ASCII文字）。"
    },
    {
      "indent": 3,
      "text": "The rules below are defined in [RFC7230]:",
      "ja": "以下[RFC7230]で定義されたルール。"
    },
    {
      "indent": 5,
      "text": "BWS = <BWS, see [RFC7230], Section 3.2.3> OWS = <OWS, see [RFC7230], Section 3.2.3> quoted-string = <quoted-string, see [RFC7230], Section 3.2.6> token = <token, see [RFC7230], Section 3.2.6>",
      "ja": "BWS = <BWS、参照[RFC7230]、セクション3.2.3> OWS = <OWS、参照[RFC7230]、セクション3.2.3>引用符で囲んだ文字列= <引用符で囲まれた文字列、[RFC7230]を見てください、セクション3.2.6>トークン= <トークン、[RFC7230]を参照して、セクション3.2.6>"
    },
    {
      "indent": 0,
      "text": "Appendix C. Collected ABNF",
      "ja": "付録C.はABNFを収集しました"
    },
    {
      "indent": 3,
      "text": "In the collected ABNF below, list rules are expanded as per Section 1.2 of [RFC7230].",
      "ja": "以下収集ABNFにおいて、リストルールは、[RFC7230]のセクション1.2に従って展開されます。"
    },
    {
      "indent": 3,
      "text": "Authorization = credentials",
      "ja": "認証資格情報="
    },
    {
      "indent": 3,
      "text": "BWS = <BWS, see [RFC7230], Section 3.2.3>",
      "ja": "BUS = <BUS、溶接[RFC7230]、セクション3.2.3>"
    },
    {
      "indent": 3,
      "text": "OWS = <OWS, see [RFC7230], Section 3.2.3>",
      "ja": "OWS = <OWS、[RFC7230]を見てください、セクション3.2.3>"
    },
    {
      "indent": 3,
      "text": "Proxy-Authenticate = *( \",\" OWS ) challenge *( OWS \",\" [ OWS challenge ] ) Proxy-Authorization = credentials",
      "ja": "プロキシ認証= *（ \"\" OWS）チャレンジ*（OWS \"\" [OWSの挑戦]）プロキシ認証資格情報="
    },
    {
      "indent": 3,
      "text": "WWW-Authenticate = *( \",\" OWS ) challenge *( OWS \",\" [ OWS challenge ] )",
      "ja": "WWW認証= *（ \"\" OWS）チャレンジ*（OWS \"\" [OWSの挑戦]）"
    },
    {
      "indent": 3,
      "text": "auth-param = token BWS \"=\" BWS ( token / quoted-string ) auth-scheme = token",
      "ja": "auth-PARAM =トークンBWS \"=\" BWS（トークン/引用符で囲まれた文字列）のauth-スキーム=トークン"
    },
    {
      "indent": 3,
      "text": "challenge = auth-scheme [ 1*SP ( token68 / [ ( \",\" / auth-param ) *( OWS \",\" [ OWS auth-param ] ) ] ) ] credentials = auth-scheme [ 1*SP ( token68 / [ ( \",\" / auth-param ) *( OWS \",\" [ OWS auth-param ] ) ] ) ]",
      "ja": "チャレンジ= AUTH-スキーム[1つの*のSP（token68 / [（ \"\" / AUTH-PARAM）*（OWS \"\" [OWS AUTH-PARAM]）]）]クレデンシャル=のAUTH-スキーム[1つの*のSP（token68 / [（ \"\" / AUTH-PARAM）*（OWS \"\" [OWS AUTH-PARAM]）]）]"
    },
    {
      "indent": 3,
      "text": "quoted-string = <quoted-string, see [RFC7230], Section 3.2.6>",
      "ja": "引用符で囲んだ文字列= <引用符で囲まれた文字列、[RFC7230]を見てください、セクション3.2.6>"
    },
    {
      "indent": 3,
      "text": "token = <token, see [RFC7230], Section 3.2.6> token68 = 1*( ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\" / \"+\" / \"/\" ) *\"=\"",
      "ja": "トークン= <トークン、参照[RFC7230]、セクション3.2.6> token68 = 1 *（ALPHA / DIGIT / \" - \" \"\" / / \"_\" / \"〜\" / \"+\" / \"/\"）*」 =」"
    },
    {
      "indent": 0,
      "text": "Index",
      "ja": "指数"
    },
    {
      "indent": 3,
      "text": "4 401 Unauthorized (status code) 6 407 Proxy Authentication Required (status code) 6",
      "ja": "4不正401（ステータスコード）6 407プロキシ認証が必要（ステータスコード）6"
    },
    {
      "indent": 3,
      "text": "A Authorization header field 8",
      "ja": "Authorizationヘッダフィールド8"
    },
    {
      "indent": 3,
      "text": "C Canonical Root URI 5",
      "ja": "C正規ルートURI 5"
    },
    {
      "indent": 3,
      "text": "G Grammar auth-param 4 auth-scheme 4 Authorization 8 challenge 4 credentials 5 Proxy-Authenticate 8 Proxy-Authorization 9 token68 4 WWW-Authenticate 7",
      "ja": "G文法AUTH-PARAM 4 AUTH-スキーム4認可8チャレンジ4つのクレデンシャル5プロキシ認証8プロキシ認証9 token68 4 WWW認証7"
    },
    {
      "indent": 3,
      "text": "P Protection Space 5 Proxy-Authenticate header field 8 Proxy-Authorization header field 9",
      "ja": "P保護空間5プロキシ認証ヘッダフィールド8 Proxy-Authorizationヘッダフィールド9"
    },
    {
      "indent": 3,
      "text": "R Realm 5",
      "ja": "Rレルム5"
    },
    {
      "indent": 3,
      "text": "W WWW-Authenticate header field 7",
      "ja": "W WWW-Authenticateヘッダフィールド7"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Roy T. Fielding (editor) Adobe Systems Incorporated 345 Park Ave San Jose, CA 95110 USA",
      "ja": "ロイT.フィールディング（編集者）Adobe Systems Incorporated（アドビシステムズ社）345パークアベニューサンノゼ、CA 95110 USA"
    },
    {
      "indent": 3,
      "text": "EMail: fielding@gbiv.com URI: http://roy.gbiv.com/",
      "ja": "電子メール：fielding@gbiv.com URI：http://roy.gbiv.com/"
    },
    {
      "indent": 3,
      "text": "Julian F. Reschke (editor) greenbytes GmbH Hafenweg 16 Muenster, NW 48155 Germany",
      "ja": "ジュリアンF. Reschke（エディタ）greenbytes社Hafenweg 16ミュンスター、NW 48155ドイツ"
    },
    {
      "indent": 3,
      "text": "EMail: julian.reschke@greenbytes.de URI: http://greenbytes.de/tech/webdav/",
      "ja": "電子メール：julian.reschke@greenbytes.de URI：http://greenbytes.de/tech/webdav/"
    }
  ]
}