{
  "title": {
    "text": "RFC 7415 - Session Initiation Protocol (SIP) Rate Control",
    "ja": "RFC 7415 - セッション開始プロトコル（SIP）レート制御"
  },
  "number": 7415,
  "created_at": "2019-11-01 20:43:12.745082+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                           E. Noel\nRequest for Comments: 7415                                     AT&T Labs\nCategory: Standards Track                                    P. Williams\nISSN: 2070-1721                                     BT Innovate & Design\n                                                           February 2015",
      "raw": true
    },
    {
      "indent": 13,
      "text": "Session Initiation Protocol (SIP) Rate Control",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "The prevalent use of the Session Initiation Protocol (SIP) in Next Generation Networks necessitates that SIP networks provide adequate control mechanisms to maintain transaction throughput by preventing congestion collapse during traffic overloads. A loss-based solution to remedy known vulnerabilities of the SIP 503 (Service Unavailable) overload control mechanism has already been proposed. Using the same signaling, this document proposes a rate-based control scheme to complement the loss-based control scheme.",
      "ja": "次世代ネットワークにおけるセッション開始プロトコル（SIP）の優勢な使用は、SIPネットワークが、トラフィック過負荷時の輻輳崩壊を防止することによって、トランザクション・スループットを維持するために十分な制御機構を提供することを必要とします。 SIP 503（サービス利用不可）過負荷制御機構の既知の脆弱性を改善する損失ベースのソリューションは、既に提案されています。同じシグナリングを使用して、この文書は、損失ベースの制御スキームを補完するレートベースの制御方式を提案します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 5741のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc7415.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc7415で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2015 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2015 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................2\n2. Terminology .....................................................3\n3. Rate-Based Algorithm Scheme .....................................3\n   3.1. Overview ...................................................3\n   3.2. Via Header Field Parameters for Overload Control ...........4\n   3.3. Client and Server Rate-Based Control Algorithm Selection ...4\n   3.4. Server Operation ...........................................5\n   3.5. Client Operation ...........................................6\n        3.5.1. Default Algorithm ...................................6\n        3.5.2. Priority Treatment ..................................9\n        3.5.3. Optional Enhancement: Avoidance of Resonance .......10\n4. Example ........................................................12\n5. Syntax .........................................................13\n6. Security Considerations ........................................13\n7. IANA Considerations ............................................13\n8. References .....................................................14\n   8.1. Normative References ......................................14\n   8.2. Informative References ....................................14\nAcknowledgments ...................................................14\nContributors ......................................................14\nAuthors' Addresses ................................................15",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "The use of SIP [RFC3261] in large-scale Next Generation Networks requires that SIP-based networks provide adequate control mechanisms for handling traffic growth. In particular, SIP networks must be able to handle traffic overloads gracefully, maintaining transaction throughput by preventing congestion collapse.",
      "ja": "大規模な次世代ネットワークにおけるSIP [RFC3261]を使用することは、SIPベースのネットワークトラフィックの増加を処理するための適切な制御機構を提供することを要求します。具体的には、SIPネットワークが輻輳崩壊を防止することによって、トランザクション・スループットを維持し、正常トラフィックの過負荷を処理できなければなりません。"
    },
    {
      "indent": 3,
      "text": "A promising SIP-based overload control solution has been proposed in [RFC7339]. That solution provides a communication scheme for overload control algorithms. It also includes a default loss-based overload control algorithm that makes it possible for a set of clients to limit offered load towards an overloaded server. However, such a loss control algorithm is sensitive to variations in load so that any increase in load would be directly reflected by the clients in the offered load presented to the overloaded servers. More importantly, a loss-based control scheme cannot guarantee an upper bound on the load from the clients towards an overloaded server and requires frequent updates that may have implications for stability.",
      "ja": "有望なSIPベースの過負荷制御ソリューションは、[RFC7339]に提案されています。その溶液は、過負荷制御アルゴリズムのための通信方式を提供します。また、クライアントのセットが過負荷状態のサーバに向けて提供された負荷を制限することが可能になり、デフォルトの損失ベースの過負荷制御アルゴリズムを含みます。しかしながら、このような損失の制御アルゴリズムは、負荷の増加が直接過負荷サーバに提示オファードロードにクライアントによって反映されるように、負荷の変動に敏感です。さらに重要なことは、損失ベースの制御方式は、過負荷状態のサーバに向けて、クライアントからの負荷の上限を保証し、安定性に影響を与える可能性があり頻繁に更新を必要とすることはできません。"
    },
    {
      "indent": 3,
      "text": "In accordance with the framework defined in [RFC7339], this document proposes an alternate overload control scheme: the rate-based overload control scheme. The rate-based control algorithm guarantees an upper bound on the rate, constant between server updates, of requests sent by clients towards an overloaded server. The trade-off is in terms of algorithmic complexity, since the overloaded server is more likely to use a different target (maximum rate) for each client than the loss-based approach.",
      "ja": "レートベースの過負荷制御方式：[RFC7339]で定義されたフレームワークによれば、この文書は、代替の過負荷制御方式を提案します。レートベースの制御アルゴリズムは、過負荷状態のサーバに向けて、クライアントによって送信された要求の、サーバーの更新の間に一定レートの上限を保証します。過負荷サーバは損失ベースのアプローチよりもクライアントごとに異なる目標（最大速度）を使用する可能性が高いので、トレードオフは、アルゴリズムの複雑さの点です。"
    },
    {
      "indent": 3,
      "text": "The proposed rate-based overload control algorithm mitigates congestion in SIP networks while adhering to the overload signaling scheme in [RFC7339] and presenting a rate-based control scheme as an optional alternative to the default loss-based control scheme in [RFC7339].",
      "ja": "[RFC7339]に過負荷シグナリング方式に付着して、[RFC7339]のデフォルトの損失ベースの制御スキームの任意の代替として、レートベースの制御方式を提示しながら、提案レートベースの過負荷制御アルゴリズムは、SIPネットワークにおける輻輳を軽減します。"
    },
    {
      "indent": 0,
      "text": "2. Terminology",
      "section_title": true,
      "ja": "2.用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はあります[RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 3,
      "text": "Unless otherwise specified, all SIP entities described in this document are assumed to support this specification.",
      "ja": "特に指定しない限り、この文書に記載されているすべてのSIPエンティティは、この仕様をサポートすることを想定しています。"
    },
    {
      "indent": 0,
      "text": "3. Rate-Based Algorithm Scheme",
      "section_title": true,
      "ja": "3.料金ベースのアルゴリズムスキーム"
    },
    {
      "indent": 0,
      "text": "3.1. Overview",
      "section_title": true,
      "ja": "3.1. 概要"
    },
    {
      "indent": 3,
      "text": "The server is the one protected by the overload control algorithm defined here, and the client is the one that throttles traffic towards the server.",
      "ja": "サーバーは、ここで定義された過負荷制御アルゴリズムによって保護されものであり、クライアントはサーバに向けて、トラフィックを絞るものです。"
    },
    {
      "indent": 3,
      "text": "Following the procedures defined in [RFC7339], the server and clients signal one another support for rate-based overload control.",
      "ja": "[RFC7339]で定義された手順に従って、サーバとクライアントは、レートベースの過負荷制御のための1つの別のサポートを知らせます。"
    },
    {
      "indent": 3,
      "text": "Then, periodically, the server relies on internal measurements (e.g., CPU utilization or queueing delay) to evaluate its overload state and estimate a target maximum SIP request rate in number of requests per second (as opposed to target percent loss in the case of loss-based control).",
      "ja": "その後、定期的に、サーバは、過負荷状態を評価し、秒あたりの要求の数に目標最大SIP要求率を推定する内部測定値（例えば、CPU使用率やキューイング遅延）に依存している（損失の場合の損失パーセントを標的とする対照的にベースコントロール）。"
    },
    {
      "indent": 3,
      "text": "When in overload, the server uses the \"oc\" parameter in the Via header field [RFC7339] of SIP responses in order to inform clients of its overload state and of the target maximum SIP request rate for that client.",
      "ja": "ときに過負荷で、サーバーは、その過負荷状態のとそのクライアントの目標最大SIP要求率のクライアントに通知するためにSIP応答のViaヘッダーフィールドにおける「OC」のパラメータ[RFC7339]を使用しています。"
    },
    {
      "indent": 3,
      "text": "Upon receiving the \"oc\" parameter with a target maximum SIP request rate, each client throttles new SIP requests towards the overloaded server.",
      "ja": "目標最大SIP要求率で「OC」のパラメータを受け取ると、各クライアントは、オーバーロード、サーバーへの新しいSIPリクエストを絞ります。"
    },
    {
      "indent": 0,
      "text": "3.2. Via Header Field Parameters for Overload Control",
      "section_title": true,
      "ja": "3.2. 過負荷制御のためのヘッダーフィールドパラメータで"
    },
    {
      "indent": 3,
      "text": "Four Via header parameters are defined in [RFC7339] and are summarized below:",
      "ja": "ヘッダパラメータで四つは[RFC7339]で定義され、以下に要約されます。"
    },
    {
      "indent": 3,
      "text": "o oc: Used by clients in SIP requests to indicate support for overload control per [RFC7339] and by servers to indicate the load reduction amount in the loss-based algorithm and the maximum rate, in messages per second, for the rate-based algorithm described here.",
      "ja": "O OC：レートベースのアルゴリズムのために、秒あたりのメッセージでは、損失ベースのアルゴリズムの負荷削減量と最大速度を示すために、[RFC7339]あたりの過負荷制御のためのサポートを示すために、SIPリクエストでクライアントが使用すると、サーバによって、ここで説明します。"
    },
    {
      "indent": 3,
      "text": "o oc-algo: Used by clients in SIP requests to advertise supported overload control algorithms and by servers to notify clients of the algorithm in effect. Supported values are loss (default) and rate (optional).",
      "ja": "O OC-アルゴ：サポートされている過負荷制御アルゴリズムを宣伝するためにSIPリクエスト内のクライアントによってその効果にアルゴリズムのクライアントに通知するために、サーバによって使用されます。サポートされる値は、損失（デフォルト）とレート（オプション）です。"
    },
    {
      "indent": 3,
      "text": "o oc-validity: Used by servers in SIP responses to indicate an interval of time (in milliseconds) that the load reduction should be in effect. A value of 0 is reserved for the server to stop overload control. A non-zero value is required in all other cases.",
      "ja": "OC-妥当性O：負荷の低減が有効でなければならないこと（ミリ秒単位）時間の間隔を示すために、SIP応答でサーバによって使用されます。 0の値は、過負荷制御を停止するサーバのために予約されています。非ゼロ値は、他のすべての場合に必要とされます。"
    },
    {
      "indent": 3,
      "text": "o oc-seq: A sequence number associated with the \"oc\" parameter.",
      "ja": "O OC-SEQ：「OC」パラメータに関連付けられたシーケンス番号。"
    },
    {
      "indent": 3,
      "text": "Consult Section 4 for an illustration of the usage of the \"oc\" parameter in the Via header field.",
      "ja": "Viaヘッダフィールドの「OC」パラメータの使用の実例については、セクション4を参照してください。"
    },
    {
      "indent": 0,
      "text": "3.3. Client and Server Rate-Based Control Algorithm Selection",
      "section_title": true,
      "ja": "3.3. クライアントとサーバーレートベースの制御アルゴリズムの選択"
    },
    {
      "indent": 3,
      "text": "Per [RFC7339], new clients indicate supported overload control algorithms to servers by inserting \"oc\" and \"oc-algo\", with the names of the supported algorithms, in the Via header field of SIP requests destined to servers. The inclusion by the client of the token \"rate\" indicates that the client supports a rate-based algorithm. Conversely, servers notify clients of the selected overload control algorithm through the \"oc-algo\" parameter in the Via header field of SIP responses to clients. The inclusion by the server of the token \"rate\" in the \"oc-algo\" parameter indicates that the rate-based algorithm has been selected by the server.",
      "ja": "パー[RFC7339]、新しいクライアントがサーバ宛てのSIPリクエストのViaヘッダーフィールドでは、サポートされているアルゴリズムの名前で、「OC」や「OC-アルゴ」を挿入することによって、サーバにサポートされ、過負荷制御アルゴリズムを示しています。トークン「率」のクライアントによって含めることは、クライアントがレートベースのアルゴリズムをサポートしていることを示しています。逆に、サーバは、クライアントへSIP応答のViaヘッダフィールドの「OC-アルゴ」パラメータを介して選択された過負荷制御アルゴリズムのクライアントに通知します。 「OC-アルゴ」パラメータでトークン「レート」のサーバによって包含は、レートベースのアルゴリズムは、サーバによって選択されたことを示します。"
    },
    {
      "indent": 3,
      "text": "Support of rate-based control MUST be indicated by clients including the token \"rate\" in the \"oc-algo\" list. Selection of rate-based control MUST be indicated by servers by setting \"oc-algo\" to the token \"rate\".",
      "ja": "レートベースのコントロールのサポートは、「OC-アルゴ」リスト内のトークン「率」などのクライアントで表示されなければなりません。レートベースのコントロールの選択は、トークン「率」に「OC-アルゴ」を設定することで、サーバによって示されなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.4. Server Operation",
      "section_title": true,
      "ja": "3.4. サーバーの運用"
    },
    {
      "indent": 3,
      "text": "The actual algorithm used by the server to determine its overload state and estimate a target maximum SIP request rate is beyond the scope of this document.",
      "ja": "その過負荷状態を判断し、目標最大SIP要求率を推定するためにサーバによって使用される実際のアルゴリズムは、この文書の範囲外です。"
    },
    {
      "indent": 3,
      "text": "However, the server MUST periodically evaluate its overload state and estimate a target SIP request rate beyond which it would become overloaded. The server must determine how it will allocate the target SIP request rate among its client. The server may set the same rate for every client or may set different rates for different clients.",
      "ja": "ただし、サーバーは定期的に過負荷状態を評価し、それが過負荷になるだろう、それを超えるターゲットSIP要求率を推定しなければなりません。サーバーは、そのクライアントの間で、対象のSIP要求レートを割り当てる方法を決定する必要があります。サーバーはすべてのクライアントのために同じレートを設定してもよいし、異なるクライアントのために異なるレートを設定することがあります。"
    },
    {
      "indent": 3,
      "text": "The maximum rate determined by the server for a client applies to the entire stream of SIP requests, even though throttling may only affect a particular subset of the requests, since as per [RFC7339] and REQ 13 of [RFC5390], request prioritization is a client's responsibility.",
      "ja": "クライアントのためにサーバによって決定された最大レートは、要求の優先順位付けは、[RFC7339]及び[RFC5390]のREQ 13の通りので絞りのみ、要求の特定のサブセットに影響を与える可能性があるにもかかわらず、SIPリクエストのストリーム全体に適用されますクライアントの責任。"
    },
    {
      "indent": 3,
      "text": "When setting the maximum rate for a particular client, the server may need to take into account the workload (e.g., CPU load per request) of the distribution of message types from that client. Furthermore, because the client may prioritize the specific types of messages it sends while under overload restriction, this distribution of message types may be different from the message distribution for that client under non-overload conditions (e.g., it could have either higher or lower CPU load).",
      "ja": "特定のクライアントのための最大速度を設定する場合、サーバは、クライアントからのメッセージタイプの分布（要求ごと例えば、CPU負荷）アカウントにワークロードを取る必要があるかもしれません。クライアントは、メッセージの特定の種類に優先順位を付けることができるので、また、過負荷制限の下で、メッセージ・タイプのこの分布は、非過負荷状態（例えば、下でそのクライアントのメッセージ配信とは異なるかもしれないが、それはより高いまたはより低いいずれかのCPUを有することができる送信します負荷）。"
    },
    {
      "indent": 3,
      "text": "Note that the \"oc\" parameter for the rate-based algorithm is an upper bound (in messages per second) on the traffic sent by the client to the server. The client may send traffic at a rate significantly lower than the upper bound for a variety of reasons.",
      "ja": "レートベースのアルゴリズムのための「OC」パラメータは、クライアントからサーバに送信されたトラフィックに（秒あたりのメッセージに）上限であることに注意してください。クライアントは、様々な理由のための上限よりも有意に低いレートでトラフィックを送信することができます。"
    },
    {
      "indent": 3,
      "text": "In other words, when multiple clients are being controlled by an overloaded server, at any given time, some clients may receive requests at a rate below their target (maximum) SIP request rate while others above that target rate. But the resulting request rate presented to the overloaded server will converge towards the target SIP request rate.",
      "ja": "複数のクライアントが過負荷サーバによって制御されている言い換えれば、任意の時点で、いくつかのクライアントは、その目標レート上記他ながら、それらの標的（最大）SIP要求レート以下のレートで要求を受信することができます。しかし、オーバーロードされたサーバーに提示した要求レートは、ターゲットSIP要求率に向かって収束します。"
    },
    {
      "indent": 3,
      "text": "Upon detection of overload and the determination to invoke overload controls, the server MUST follow the specifications in [RFC7339] to notify its clients of the allocated target SIP request rate and to notify them that rate-based control is in effect.",
      "ja": "過負荷および過負荷制御を起動する決意を検出すると、サーバは、割り当てられた目標SIP要求率の顧客に通知するために、レートベースの制御が有効であることを通知するために、[RFC7339]の規定に従わなければなりません。"
    },
    {
      "indent": 3,
      "text": "The server MUST use the \"oc\" parameter defined in [RFC7339] to send a target SIP request rate to each of its clients.",
      "ja": "サーバは、そのクライアントのそれぞれに目標SIP要求レートを送信するために[RFC7339]で定義された「OC」パラメータを使用しなければなりません。"
    },
    {
      "indent": 3,
      "text": "When a client supports the default loss-based algorithm and not the rate-based algorithm, the client would be handled in the same way as in Section 5.10.2 of [RFC7339].",
      "ja": "クライアントは、デフォルトの損失ベースのアルゴリズムではなくレートベースのアルゴリズムをサポートしている場合、クライアントは[RFC7339]のセクション5.10.2の場合と同じ方法で処理されるだろう。"
    },
    {
      "indent": 0,
      "text": "3.5. Client Operation",
      "section_title": true,
      "ja": "3.5. クライアント操作"
    },
    {
      "indent": 0,
      "text": "3.5.1. Default Algorithm",
      "section_title": true,
      "ja": "3.5.1. デフォルトのアルゴリズム"
    },
    {
      "indent": 3,
      "text": "In determining whether or not to transmit a specific message, the client may use any algorithm that limits the message rate to the \"oc\" parameter in units of messages per second. For ease of discussion, we define T = 1/[\"oc\" parameter] as the target inter-SIP request interval. The algorithm may be strictly deterministic, or it may be probabilistic. It may, or may not, have a tolerance factor to allow for short bursts, as long as the long-term rate remains below 1/T.",
      "ja": "特定のメッセージを送信するか否かを決定する際に、クライアントは、秒あたりのメッセージの単位で「OC」パラメータにメッセージレートを制限する任意のアルゴリズムを使用してもよいです。議論を容易にするために、我々は目標車間SIP要求間隔として、T = 1 / [「OC」パラメータ]を定義します。このアルゴリズムは、厳密に決定論的であってもよいし、確率的かもしれません。それであれば、長期レートは1 / T未満に留まるように、短いバーストを可能にするために、トレランスファクターを有していて、よいし、なくてもよいです。"
    },
    {
      "indent": 3,
      "text": "The algorithm may have provisions for prioritizing traffic in accordance with REQ 13 of [RFC5390].",
      "ja": "アルゴリズムは、[RFC5390]のREQ 13に応じてトラフィックを優先順位付けするための規定を有していてもよいです。"
    },
    {
      "indent": 3,
      "text": "If the algorithm requires other parameters (in addition to \"T\", which is 1/[\"oc\" parameter]), they may be set autonomously by the client, or they may be negotiated between client and server independently of the SIP-based overload control solution.",
      "ja": "アルゴリズムは、他のパラメータを必要とする場合（1 / [「OC」パラメータ]であり、「T」、に加えて）、彼らは、クライアントが自律的に設定することができる、またはそれらは独立してSIPベースのクライアントとサーバとの間で交渉されてもよいです過負荷制御ソリューション。"
    },
    {
      "indent": 3,
      "text": "In either case, the coordination is out of the scope of this document. The default algorithms presented here (one with and one without provisions for prioritizing traffic) are only examples.",
      "ja": "いずれの場合も、調整はこの文書の範囲外です。ここで紹介するデフォルトのアルゴリズム（トラフィックに優先順位を付けるための規定なしで1つずつ）が唯一の例です。"
    },
    {
      "indent": 3,
      "text": "To throttle new SIP requests at the rate specified by the \"oc\" parameter sent by the server to its clients, the client MAY use the proposed default algorithm for rate-based control or any other equivalent algorithm that forward messages in conformance with the upper bound of 1/T messages per second.",
      "ja": "そのクライアントにサーバから送られた「OC」パラメータで指定した速度で新しいSIPリクエストを絞るために、クライアントは、レートベースの制御のために提案されているデフォルトのアルゴリズムまたは上限に準拠してメッセージを転送する他の同等のアルゴリズムを使用するかもしれ毎秒1 / Tメッセージの。"
    },
    {
      "indent": 3,
      "text": "The default leaky bucket algorithm presented here is based on [ITU-T-I.371], Appendix A.2. The algorithm makes it possible for clients to deliver SIP requests at a rate specified by the \"oc\" parameter with the tolerance parameter TAU (preferably configurable).",
      "ja": "ここで紹介するデフォルトリーキーバケットアルゴリズムは[ITU-T-I.371]、付録A.2に基づいています。クライアントが許容パラメータTAU（好ましくは設定可能）と「OC」パラメータで指定した速度でSIP要求を提供するためのアルゴリズムは、それを可能にします。"
    },
    {
      "indent": 3,
      "text": "Conceptually, the leaky bucket algorithm can be viewed as a finite capacity bucket whose real-valued content drains out at a continuous rate of 1 unit of content per time unit and whose content increases by the increment T for each forwarded SIP request. T is computed as the inverse of the rate specified by the \"oc\" parameter, namely T = 1 / [\"oc\" parameter].",
      "ja": "概念的には、リーキーバケットアルゴリズムは、その実数値コンテンツ単位時間当たりのコンテンツの1つの単位の連続的な速度で排出し、その含有量が増加各転送SIP要求の増分Tによる有限の容量バケットとみなすことができます。 Tは「OC」パラメータ、すなわち、T = 1 / [「OC」パラメータ]で指定されたレートの逆数として計算されます。"
    },
    {
      "indent": 3,
      "text": "Note that when the \"oc\" parameter is 0 with a non-zero \"oc-validity\", then the client should reject 100% of SIP requests destined to the overload server. However, when the \"oc-validity\" value is 0, the client should immediately stop throttling.",
      "ja": "「OC」のパラメータが非ゼロ「OC-妥当性」と0のとき、クライアントが過負荷サーバ宛てのSIP要求の100％を拒否すべきであることに注意してください。 「OC-妥当性」の値が0であるときしかし、クライアントはすぐにスロットリングを停止する必要があります。"
    },
    {
      "indent": 3,
      "text": "If, at a new SIP request arrival, the content of the bucket is less than or equal to the limit value TAU, then the SIP request is forwarded to the server; otherwise, the SIP request is rejected.",
      "ja": "、新しいSIPリクエストの到着時に、バケットの内容は以下の限界値TAUに等しい場合、SIP要求がサーバに転送されます。そうでない場合は、SIP要求は拒否されます。"
    },
    {
      "indent": 3,
      "text": "Note that the capacity of the bucket (the upper bound of the counter) is (T + TAU).",
      "ja": "バケット（カウンタの上限）の容量は、（T + 1 TAU）であることに留意されたいです。"
    },
    {
      "indent": 3,
      "text": "The tolerance parameter TAU determines how close the long-term admitted rate is to an ideal control that would admit all SIP requests for arrival rates less than 1/T and then admit SIP requests precisely at the rate of 1/T for arrival rates above 1/T. In particular, at mean arrival rates close to 1/T, it determines the tolerance to deviation of the inter-arrival time from T (the larger TAU, the more tolerance to deviations from the inter-departure interval T).",
      "ja": "公差パラメータTAUは、長期入院率が少ない1 / Tよりも到着レートのためのすべてのSIP要求を許可した後、正確に1以上の到着レート1 / Tの割合でSIP要求を認めるであろう理想的な制御にどれだけ近いかを判断します/ T。具体的には、1 / Tに近い平均到着レートでは、T（大きいTAU、インター出発間隔Tからの偏差に対してより寛容）から到着時刻のずれに対する許容度を決定します。"
    },
    {
      "indent": 3,
      "text": "This deviation from the inter-departure interval influences the admitted rate burstiness or the number of consecutive SIP requests forwarded to the server (burst size proportional to TAU over the difference between 1/T and the arrival rate).",
      "ja": "インター出発間隔からのこの偏差は認めレートバーストまたはサーバ（1 / Tと到着率との差を超えるTAUに比例するバーストサイズ）に転送連続SIP要求の数に影響を与えます。"
    },
    {
      "indent": 3,
      "text": "In situations where clients are configured with some knowledge about the server (e.g., operator pre-provisioning), it can be beneficial to choose a value of TAU based on how many clients will be sending requests to the server.",
      "ja": "クライアントがサーバに関する何らかの知識を持って構成されている状況では（例えば、オペレータ事前プロビジョニング）は、サーバに要求を送信するクライアントの数に基づいて、TAUの値を選択することが有益であり得ます。"
    },
    {
      "indent": 3,
      "text": "Servers with a very large number of clients, each with a relatively small arrival rate, will generally benefit from a smaller value for TAU in order to limit queuing (and hence response times) at the server when subjected to a sudden surge of traffic from all clients. Conversely, a server with a relatively small number of clients, each with a proportionally larger arrival rate, will benefit from a larger value of TAU.",
      "ja": "すべてからのトラフィックの突然の急増を受けたときにクライアントの非常に大きな数を持つサーバーは、比較的小さな到達率とのそれぞれは、一般的にサーバに（ひいては応答時間）をキューイング制限するために、TAUの値を小さく恩恵を受けるクライアント。逆に、クライアントの数が比較的少ないサーバは、比例してより大きな到着レートの各々は、TAUの大きな値の恩恵を受ける。"
    },
    {
      "indent": 3,
      "text": "Once the control has been activated, at the arrival time of the k-th new SIP request, ta(k), the content of the bucket is provisionally updated to the value",
      "ja": "コントロールが起動された後、k番目の新しいSIPリクエストの到着時に、TA（k）は、バケットの内容を暫定値に更新します"
    },
    {
      "indent": 3,
      "text": "X' = X - (ta(k) - LCT)",
      "ja": "X = X  - （（K） -  LCT）"
    },
    {
      "indent": 3,
      "text": "where X is the value of the leaky bucket counter after arrival of the last forwarded SIP request, and LCT is the time at which the last SIP request was forwarded.",
      "ja": "ここで、Xは、最後に転送されたSIPリクエストの到着後リーキーバケットカウンタの値であり、LCTは、最後のSIP要求が転送された時刻です。"
    },
    {
      "indent": 3,
      "text": "If X' is less than or equal to the limit value TAU, then the new SIP request is forwarded, the leaky bucket counter X is set to X' (or to 0 if X' is negative) plus the increment T, and LCT is set to the current time ta(k). If X' is greater than the limit value TAU, then the new SIP request is rejected, and the values of X and LCT are unchanged.",
      "ja": "Xがあれば「よりも小さいか又は限界値TAUに等しく、新しいSIPリクエストが転送され、リーキーバケットカウンタXがXに設定されている」（または0にX「が負の場合）プラス増分T、及びLCTであります（K）TA現在の時刻に設定されます。 X」が制限値TAUよりも大きい場合には、新しいSIP要求が拒否され、XとLCTの値は変更されません。"
    },
    {
      "indent": 3,
      "text": "When the first response from the server has been received indicating control activation (oc-validity>0), LCT is set to the time of activation, and the leaky bucket counter is initialized to the parameter TAU0 (preferably configurable), which is 0 or larger but less than or equal to TAU.",
      "ja": "サーバからの最初の応答は、制御活性化（OC-有効性> 0）を示す受信した場合、LCTは、起動時に設定され、リーキーバケットカウンタは0又はパラメータTAU0（好ましくは設定可能）に初期化されます大きいが、以下TAUに等しいです。"
    },
    {
      "indent": 3,
      "text": "TAU can assume any positive real number value and is not necessarily bounded by T.",
      "ja": "TAUは、任意の正の実数の値を取ることができるし、必ずしもT.で囲まれていません"
    },
    {
      "indent": 3,
      "text": "TAU=4*T is a reasonable compromise between burst size and throttled rate adaptation at low offered rates.",
      "ja": "TAU = 4 * Tは、バーストサイズと低提供レートでレート適応を絞ら間の妥当な妥協です。"
    },
    {
      "indent": 3,
      "text": "Note that specification of a value for TAU and any communication or coordination between servers are beyond the scope of this document.",
      "ja": "TAUの値は、この文書の範囲を超えてサーバーとの間の任意の通信または協調の仕様に注意してください。"
    },
    {
      "indent": 3,
      "text": "A reference algorithm is shown below.",
      "ja": "基準アルゴリズムを以下に示します。"
    },
    {
      "indent": 3,
      "text": "No priority case:",
      "ja": "いいえ、優先度の場合ありません："
    },
    {
      "indent": 3,
      "text": "// T: inter-transmission interval, set to 1 / [\"oc\" parameter] // TAU: tolerance parameter // ta: arrival time of the most recent arrival received by the // client // LCT: arrival time of last SIP request that was sent to the server // (initialized to the first arrival time) // X: current value of the leaky bucket counter (initialized to // TAU0)",
      "ja": "toleranceパラメータ// TA：//クライアント// LCTが受信した最新の到着の到着時間：最後の到着時間// T：1 / [「OC」パラメータ] // TAUに設定間の送信間隔、 （最初の到着時間に初期化）サーバー//に送信されたSIPリクエスト// X：リーキーバケットカウンタの現在の値（TAU0を//に初期化）"
    },
    {
      "indent": 3,
      "text": "// After most recent arrival, calculate auxiliary variable Xp Xp = X - (ta - LCT);",
      "ja": ";  - （LCT TA  - ）//最新の到着後、補助変数XPのXPの= Xを算出します"
    },
    {
      "indent": 3,
      "text": "if (Xp <= TAU) {\n  // Transmit SIP request\n  // Update X and LCT\n  X = max (0, Xp) + T;\n  LCT = ta;\n} else {\n  // Reject SIP request\n  // Do not update X and LCT\n}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "3.5.2. Priority Treatment",
      "section_title": true,
      "ja": "3.5.2. 優先扱い"
    },
    {
      "indent": 3,
      "text": "As with the loss-based algorithm in [RFC7339], a client implementing the rate-based algorithm also prioritizes messages into two or more categories of requests, for example, requests that are candidates for reduction and requests that are not subject to reduction (except under extenuating circumstances when there aren't any messages in the first category that can be reduced).",
      "ja": "[RFC7339]の損失ベースのアルゴリズムと同様に、レートベースのアルゴリズムを実装するクライアントはまた、例えば、要求のうちの2つの以上のカテゴリに（ただし、還元を受けない還元及び要求のための候補であるリクエストメッセージを優先します酌量すべき状況下で減少させることができる最初のカテゴリのいずれかのメッセージが）存在しないとき。"
    },
    {
      "indent": 3,
      "text": "Accordingly, the proposed leaky bucket implementation is modified to support priority using two thresholds for SIP requests that are candidates for reduction. With two priorities, the proposed leaky bucket requires two thresholds: TAU1 and TAU2 (where TAU1 < TAU2):",
      "ja": "したがって、提案されたリーキーバケットの実装は、削減のための候補であるSIPリクエストのための2つの閾値を使用して優先順位をサポートするように変更されます。 TAU1とTAU2（TAU1 <TAU2）：2つの優先度では、提案されたリーキーバケットは、二つの閾値が必要です。"
    },
    {
      "indent": 3,
      "text": "o All new requests would be admitted when the leaky bucket counter is at or below TAU1.",
      "ja": "リーキーバケットカウンタがTAU1またはそれ以下であるとき、Oすべての新しい要求が認められます。"
    },
    {
      "indent": 3,
      "text": "o Only higher-priority requests would be admitted when the leaky bucket counter is between TAU1 and TAU2.",
      "ja": "リーキーバケットカウンタがTAU1とTAU2の間にあるとき、Oのみ優先度の高い要求が認められます。"
    },
    {
      "indent": 3,
      "text": "o All requests would be rejected when the bucket counter is at or above TAU2.",
      "ja": "バケットカウンタがTAU2で、または上回るときO要求はすべて拒否されます。"
    },
    {
      "indent": 3,
      "text": "This can be generalized to n priorities using n thresholds for n>2 in the obvious way.",
      "ja": "これは明白な方法でN> 2のために、n個のしきい値を使用してn個の優先順位に一般化することができます。"
    },
    {
      "indent": 3,
      "text": "With a priority scheme that relies on two tolerance parameters (TAU2 influences the priority traffic, and TAU1 influences the non-priority traffic), always set TAU1 < TAU2 (TAU is replaced by TAU1 and TAU2). Setting both tolerance parameters to the same value is equivalent to having no priority. TAU1 influences the admitted rate the same way as TAU does when no priority is set. The larger the difference between TAU1 and TAU2, the closer the control is to strict priority queueing.",
      "ja": "（TAU2がプライオリティトラフィックに影響を与える、とTAU1は、非優先トラフィックに影響を与える）2つの許容範囲のパラメータに依存している優先順位方式では、常にセットTAU1 <TAU2（TAUはTAU1とTAU2に置き換えられています）。同じ値に両方の公差パラメータを設定しても優先順位を有していないことと等価です。 TAU1が入院率に何の優先順位が設定されていないときTAUが行うと同じように影響を与えます。 TAU1とTAU2の間の差が大きいほど、制御近いは、厳密な優先キューイングです。"
    },
    {
      "indent": 3,
      "text": "TAU1 and TAU2 can assume any positive real number value and are not necessarily bounded by T.",
      "ja": "TAU1とTAU2は任意の正の実数値をとることができ、必ずしもT.で囲まれていません"
    },
    {
      "indent": 3,
      "text": "Reasonable values for TAU0, TAU1, and TAU2 are:",
      "ja": "TAU0、TAU1、およびTAU2のための合理的な値は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "o TAU0 = 0,",
      "ja": "TAU0 = 0、"
    },
    {
      "indent": 3,
      "text": "o TAU1 = 1/2 * TAU2, and",
      "ja": "TAU2 * = 1/2のTAU1、および"
    },
    {
      "indent": 3,
      "text": "o TAU2 = 10 * T.",
      "ja": "TAU2 = 10 * T"
    },
    {
      "indent": 3,
      "text": "Note that specification of a value for TAU1 and TAU2 and any communication or coordination between servers are beyond the scope of this document.",
      "ja": "TAU1とTAU2とサーバとの間の通信や調整の値の仕様に注意してください。この文書の範囲を超えています。"
    },
    {
      "indent": 3,
      "text": "A reference algorithm is shown below.",
      "ja": "基準アルゴリズムを以下に示します。"
    },
    {
      "indent": 3,
      "text": "Priority case:",
      "ja": "優先順位の場合："
    },
    {
      "indent": 3,
      "text": "// T: inter-transmission interval, set to 1 / [\"oc\" parameter] // TAU1: tolerance parameter of no-priority SIP requests // TAU2: tolerance parameter of priority SIP requests // ta: arrival time of the most recent arrival received by the // client // LCT: arrival time of last SIP request that was sent to the server // (initialized to the first arrival time) // X: current value of the leaky bucket counter (initialized to // TAU0)",
      "ja": "// TAU2非優先SIPリクエストの公差パラメータ：優先SIPリクエストの許容パラメータ// TA：ほとんどの到着時間// T：1 / [「OC」パラメータ] // TAU1にセット間の送信間隔//クライアント// LCTが受信した最新の到着：（最初の到着時間に初期化）サーバー//に送信された最後のSIPリクエストの到着時間// X：リーキーバケットカウンタの現在の値が（//に初期化TAU0）"
    },
    {
      "indent": 3,
      "text": "// After most recent arrival, calculate auxiliary variable Xp Xp = X - (ta - LCT);",
      "ja": ";  - （LCT TA  - ）//最新の到着後、補助変数XPのXPの= Xを算出します"
    },
    {
      "indent": 3,
      "text": "if (AnyRequestReceived && Xp <= TAU1) || (PriorityRequestReceived &&\nXp <= TAU2 && Xp > TAU1) {\n  // Transmit SIP request\n  // Update X and LCT\n  X = max (0, Xp) + T;\n  LCT = ta;\n} else {\n  // Reject SIP request\n  // Do not update X and LCT\n}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "3.5.3. Optional Enhancement: Avoidance of Resonance",
      "section_title": true,
      "ja": "3.5.3. オプションの拡張：共鳴の回避"
    },
    {
      "indent": 3,
      "text": "As the number of client sources of traffic increases or the throughput of the server decreases, the maximum rate admitted by each client needs to decrease; therefore, the value of T becomes larger. Under some circumstances (e.g., if the traffic arises very quickly simultaneously at many sources), the occupancies of each bucket can become synchronized, resulting in the admissions from each source being close in time and batched or having very 'peaky' arrivals at the server, which gives rise not only to control instability but also to very poor delays and even lost messages. An appropriate term for this is 'resonance' [Erramilli].",
      "ja": "トラフィックが増加またはサーバ減少のスループットのクライアント・ソースの数として、各クライアントによって認められた最大速度が減少する必要があります。従って、Tの値が大きくなります。状況によっては（例えば、トラフィックが多くのソースで同時に非常に迅速に発生した場合）、各バケットの占有率は、時間的に近接してバッチ処理であることや、サーバーで非常に「ピーキー」の到着を持つ各ソースからの入学で、その結果、同期状態になることができます、不安定性を制御するだけでなく、非常に貧弱な遅延とさえ失われたメッセージにするだけでなく、上昇を与えます。このため、適切な用語は、「共鳴」[Erramilli]です。"
    },
    {
      "indent": 3,
      "text": "If the network topology is such that resonance can occur, then a simple way to avoid resonance is to randomize the bucket occupancy at two appropriate points -- at the activation of control and whenever the bucket empties -- as described below.",
      "ja": "以下に説明するよう - 制御とたびに、バケットが空の起動時 - ネットワーク・トポロジは、共振が起こり得るようなものである場合は、共振を回避する簡単な方法は、二つの適切な点でバケット占有をランダム化することです。"
    },
    {
      "indent": 3,
      "text": "After updating the value of the leaky bucket to X', generate a value u as follows:",
      "ja": "次のように「Xへの漏出バケットの値を更新した後、値Uを生成します。"
    },
    {
      "indent": 5,
      "text": "if X' > 0, then u = 0",
      "ja": "もしX」> 0、その後、U = 0"
    },
    {
      "indent": 5,
      "text": "else if X' <= 0, then let u be set to a random value uniformly distributed between -1/2 and +1/2",
      "ja": "他X」<= 0の場合、Uは均一-1/2および+1/2の間に分布ランダム値に設定させた場合"
    },
    {
      "indent": 3,
      "text": "Then, only if the arrival is admitted, increase the bucket by an amount T + uT, which will therefore be just T if the bucket hadn't emptied or lie between T/2 and 3T/2 if it had.",
      "ja": "到着が認められる場合にのみ、その後、それが持っていた場合にはバケツが空またはT / 2と3T / 2の間にあるいなかった場合はそのためだけのTになります量T + UTによってバケットを増やします。"
    },
    {
      "indent": 3,
      "text": "This randomization should also be done when control is activated, i.e., instead of simply initializing the leaky bucket counter to TAU0, initialize it to TAU0 + uT, where u is uniformly distributed as above. Since activation would have been a result of response to a request sent by the client, the second term in this expression can be interpreted as being the bucket increment following that admission.",
      "ja": "コントロールがアクティブになったとき、このランダム化はまた、代わりに単にTAU0にリーキーバケットカウンタを初期化する、Uは一様に、上記のように分配されるTAU0 + UT、それを初期化する、すなわち、行うべきです。活性化は、クライアントによって送信された要求に対する応答の結果であったであろうから、この式における第二項は、入場以下バケットインクリメントであると解釈することができます。"
    },
    {
      "indent": 3,
      "text": "This method has the following characteristics:",
      "ja": "この方法は、以下の特徴があります。"
    },
    {
      "indent": 3,
      "text": "o If TAU0 is chosen to be equal to TAU and all sources activate control at the same time due to an extremely high request rate, then the time until the first request admitted by each client would be uniformly distributed over [0,T].",
      "ja": "各クライアントによって認め最初の要求を均一に[0、T]に分散されるまで、O場合TAU0は、時間、次いで、TAUに等しくなるように選択し、すべてのソースが非常に高い要求レートに起因同時にコントロールをアクティブします。"
    },
    {
      "indent": 3,
      "text": "o The maximum occupancy is TAU + (3/2)T, rather than TAU + T without randomization.",
      "ja": "最大占有oをランダム化せず、むしろTAU + TよりTAUの+（3/2）Tです。"
    },
    {
      "indent": 3,
      "text": "o For the special case of 'classic gapping' where TAU=0, then the minimum time between admissions is uniformly distributed over [T/2, 3T/2], and the mean time between admissions is the same, i.e., T+1/R where R is the request arrival rate.",
      "ja": "O TAU = 0は、その後入院の間の最小時間を均一に分布されている「古典ギャッピング」[T / 2を、3T / 2]、及び入院の間の平均時間の特殊なケースでは、+ 1 T即ち、同じです/ Rは、要求到着率であるR。"
    },
    {
      "indent": 3,
      "text": "o As high load randomization rarely occurs, there is no loss of precision of the admitted rate, even though the randomized 'phasing' of the buckets remains.",
      "ja": "Oなどの高負荷のランダム化はほとんど認め率の精度の損失はバケツのランダム化された「位相」は残っていても、存在しない、発生しません。"
    },
    {
      "indent": 0,
      "text": "4. Example",
      "section_title": true,
      "ja": "4.例"
    },
    {
      "indent": 3,
      "text": "The example in this section adapts the example in Section 6 of [RFC7339], where client P1 sends requests to a downstream server P2:",
      "ja": "このセクションの例では、クライアントP1は下流サーバP2に要求を送信する[RFC7339]の第6の例を適応させます。"
    },
    {
      "indent": 12,
      "text": "INVITE sips:user@example.com SIP/2.0",
      "ja": "一口にINVITE：user@example.com SIP / 2.0"
    },
    {
      "indent": 12,
      "text": "Via: SIP/2.0/TLS p1.example.net;",
      "ja": "ビア：SIP / 2.0 / TLS p1.example.net。"
    },
    {
      "indent": 13,
      "text": "branch=z9hG4bK2d4790.1;received=192.0.2.111;",
      "ja": "ブランチ= z9hG4bK2d4790.1は、受信= 192.0.2.111。"
    },
    {
      "indent": 13,
      "text": "oc;oc-algo=\"loss,rate\"",
      "ja": "OC、OC-アルゴ= \"損失、レート\""
    },
    {
      "indent": 12,
      "text": "...",
      "ja": "。。。"
    },
    {
      "indent": 12,
      "text": "SIP/2.0 100 Trying",
      "ja": "SIP / 2.0 100試行"
    },
    {
      "indent": 12,
      "text": "Via: SIP/2.0/TLS p1.example.net;",
      "ja": "ビア：SIP / 2.0 / TLS p1.example.net。"
    },
    {
      "indent": 13,
      "text": "branch=z9hG4bK2d4790.1;received=192.0.2.111;",
      "ja": "ブランチ= z9hG4bK2d4790.1は、受信= 192.0.2.111。"
    },
    {
      "indent": 13,
      "text": "oc=0;oc-algo=\"rate\";oc-validity=0;",
      "ja": "OC = 0; OC-アルゴ= \"率\"; OC-妥当性= 0;"
    },
    {
      "indent": 13,
      "text": "oc-seq=1282321615.781",
      "ja": "OC-SEQ = 1282321615.781"
    },
    {
      "indent": 12,
      "text": "...",
      "ja": "。。。"
    },
    {
      "indent": 3,
      "text": "The first message above is sent by P1 to P2. This message is a SIP request; because P1 supports overload control, it inserts the \"oc\" parameter in the topmost Via header field that it created. P1 supports two overload control algorithms: loss and rate.",
      "ja": "上記P2をP1によって送信される最初のメッセージ。このメッセージは、SIP要求です。 P1は、過負荷制御をサポートしているので、それが作成した最上位のViaヘッダーフィールドに「OC」のパラメータを挿入します。損失とレート：P1は、二つの過負荷制御アルゴリズムをサポートしています。"
    },
    {
      "indent": 3,
      "text": "The second message, a SIP response, shows the topmost Via header field amended by P2 according to this specification and sent to P1. Because P2 also supports overload control, it chooses the rate-based scheme and sends that back to P1 in the \"oc-algo\" parameter. It uses oc-validity=0 to indicate no overload control. In this example, \"oc=0\", but \"oc\" could be any value as \"oc\" is ignored when \"oc-validity=0\".",
      "ja": "第2のメッセージ、SIP応答は、最上位のViaヘッダーフィールドは、この仕様に従ってP2により修正及びP1に送ら示します。 P2はまた、過負荷制御をサポートしているため、それがレートベースのスキームを選択し、「OC-アルゴ」パラメータでそのバックP1に送信します。これは、過負荷制御がないことを示すために、OC-妥当性= 0を使用しています。この例では、「OC = 0」が、「OC」は、ときに「OC-有効= 0」、「OC」が無視されるような任意の値であってもよいです。"
    },
    {
      "indent": 3,
      "text": "At some later time, P2 starts to experience overload. It sends the following SIP message indicating P1 should send SIP requests at a rate no greater than or equal to 150 SIP requests per second and for a duration of 1,000 milliseconds.",
      "ja": "しばらくして、P2は、過負荷を体験して開始します。これはない以上、毎秒1,000ミリ秒の持続時間150件のSIPリクエストに等しい速度でSIPリクエストを送信する必要がP1を示す次のSIPメッセージを送信します。"
    },
    {
      "indent": 12,
      "text": "SIP/2.0 180 Ringing",
      "ja": "SIP / 2.0 180リンギング"
    },
    {
      "indent": 12,
      "text": "Via: SIP/2.0/TLS p1.example.net;",
      "ja": "ビア：SIP / 2.0 / TLS p1.example.net。"
    },
    {
      "indent": 13,
      "text": "branch=z9hG4bK2d4790.1;received=192.0.2.111;",
      "ja": "ブランチ= z9hG4bK2d4790.1は、受信= 192.0.2.111。"
    },
    {
      "indent": 13,
      "text": "oc=150;oc-algo=\"rate\";oc-validity=1000;",
      "ja": "OC = 150; OC-アルゴ= \"率\"; OC-妥当性= 1000;"
    },
    {
      "indent": 13,
      "text": "oc-seq=1282321615.782",
      "ja": "OC-SEQ = 1282321615.782"
    },
    {
      "indent": 13,
      "text": "...",
      "ja": "。。。"
    },
    {
      "indent": 0,
      "text": "5. Syntax",
      "section_title": true,
      "ja": "5.構文"
    },
    {
      "indent": 3,
      "text": "This specification extends the existing definition of the Via header field parameters of [RFC7339] as follows:",
      "ja": "以下、本明細書では[RFC7339]のViaヘッダフィールドパラメータの既存の定義を拡張します。"
    },
    {
      "indent": 3,
      "text": "algo-list =/ \"rate\"",
      "ja": "ALGOリスト= /「率」"
    },
    {
      "indent": 0,
      "text": "6. Security Considerations",
      "section_title": true,
      "ja": "6.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "Aside from the resonance concerns discussed in Section 3.5.3, this mechanism does not introduce any security concerns beyond the general overload control security issues discussed in [RFC7339]. Methods to mitigate the risk of resonance are discussed in Section 3.5.3.",
      "ja": "別に3.5.3項で述べた共鳴の懸念から、このメカニズムは[RFC7339]で議論一般的な過負荷制御のセキュリティ上の問題を越えたセキュリティ上の懸念を導入しません。共振のリスクを軽減する方法は、セクション3.5.3で説明されています。"
    },
    {
      "indent": 0,
      "text": "7. IANA Considerations",
      "section_title": true,
      "ja": "7. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "IANA has registered the \"oc-algo\" parameter of the Via header field in the \"Header Field Parameters and Parameter Values\" subregistry of the \"Session Initiation Protocol (SIP) Parameters\" registry. The entry appears as follows:",
      "ja": "IANAは、「セッション開始プロトコル（SIP）パラメータ」レジストリの「ヘッダーフィールドパラメータとパラメータ値」副登録にViaヘッダーフィールドの「OC-アルゴ」のパラメータが登録されています。次のようにエントリが表示されます。"
    },
    {
      "indent": 3,
      "text": "Header     Parameter     Predefined     References\nField      Name          Values\n___________________________________________________________",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Via oc-algo Yes [RFC7339] [RFC7415]",
      "ja": "経由OC-アルゴはい[RFC7339] [RFC7415]"
    },
    {
      "indent": 0,
      "text": "8. References",
      "section_title": true,
      "ja": "8.参照文献"
    },
    {
      "indent": 0,
      "text": "8.1. Normative References",
      "section_title": true,
      "ja": "8.1. 引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997, <http://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月、<http://www.rfc-editor.org/info/rfc2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC3261] Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston, A., Peterson, J., Sparks, R., Handley, M., and E. Schooler, \"SIP: Session Initiation Protocol\", RFC 3261, June 2002, <http://www.rfc-editor.org/info/rfc3261>.",
      "ja": "[RFC3261]ローゼンバーグ、J.、Schulzrinneと、H.、カマリロ、G.、ジョンストン、A.、ピーターソン、J.、スパークス、R.、ハンドレー、M.、およびE.学生、 \"SIP：セッション開始プロトコル\" 、RFC 3261、2002年6月、<http://www.rfc-editor.org/info/rfc3261>。"
    },
    {
      "indent": 3,
      "text": "[RFC5390] Rosenberg, J., \"Requirements for Management of Overload in the Session Initiation Protocol\", RFC 5390, December 2008, <http://www.rfc-editor.org/info/rfc5390>.",
      "ja": "[RFC5390]ローゼンバーグ、J.、 \"セッション開始プロトコルにおける過負荷の管理のための要件\"、RFC 5390、2008年12月、<http://www.rfc-editor.org/info/rfc5390>。"
    },
    {
      "indent": 3,
      "text": "[RFC7339] Gurbani, V., Ed., Hilt, V., and H. Schulzrinne, \"Session Initiation Protocol (SIP) Overload Control\", RFC 7339, September 2014, <http://www.rfc-editor.org/info/rfc7339>.",
      "ja": "[RFC7339] Gurbani、V.、編、柄、V.、およびH. Schulzrinneと、 \"セッション開始プロトコル（SIP）過負荷制御\"、RFC 7339、2014年9月、<http://www.rfc-editor.org /情報/ rfc7339>。"
    },
    {
      "indent": 0,
      "text": "8.2. Informative References",
      "section_title": true,
      "ja": "8.2. 参考文献"
    },
    {
      "indent": 3,
      "text": "[ITU-T-I.371] ITU-T, \"Traffic control and congestion control in B-ISDN\", ITU-T Recommendation I.371, March 2004.",
      "ja": "、ITU-T勧告I.371 [ITU-T-I.371] ITU-T、 \"B-ISDNにおけるトラヒック制御と輻輳制御\"、2004年3月。"
    },
    {
      "indent": 3,
      "text": "[Erramilli] Erramilli, A., and L. Forys, \"Traffic Synchronization Effects In Teletraffic Systems\", ITC-13, 1991.",
      "ja": "【Erramilli] Erramilli、A.、およびL. Forys、 \"トラヒックシステムにおけるトラフィック同期の影響\"、ITC-13、1991。"
    },
    {
      "indent": 0,
      "text": "Acknowledgments",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Many thanks to the following individuals for comments and feedback on this document: Richard Barnes, Keith Drage, Vijay Gurbany, Volker Hilt, Christer Holmberg, Winston Hong, Peter Yee, and James Yu.",
      "ja": "リチャード・バーンズ、キース糖剤、ビジェイGurbany、フォルカー柄、クリステルHolmbergの、ウィンストン香港、ピーター・イー、とジェームズゆう：この文書に関するコメントやフィードバックのために以下の個人に感謝します。"
    },
    {
      "indent": 0,
      "text": "Contributors",
      "ja": "協力者"
    },
    {
      "indent": 3,
      "text": "Significant contributions to this document were made by Janet Gunn.",
      "ja": "このドキュメントへの重要な貢献はジャネット・ガンによって作られました。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Eric Noel AT&T Labs 200 S Laurel Avenue Middletown, NJ 07747 United States",
      "ja": "エリック・ノエルAT＆T Labsの200 Sローレルアベニューミドルタウン、NJ 07747米国"
    },
    {
      "indent": 3,
      "text": "EMail: eric.noel@att.com",
      "ja": "メールアドレス：eric.noel@att.com"
    },
    {
      "indent": 3,
      "text": "Philip M. Williams BT Innovate & Design Ipswich, IP5 3RE United Kingdom",
      "ja": "フィリップ・M・ウィリアムズBTイノベート＆デザインイプスウィッチ、IP5 3REイギリス"
    },
    {
      "indent": 3,
      "text": "EMail: phil.m.williams@bt.com",
      "ja": "メールアドレス：phil.m.williams@bt.com"
    }
  ]
}