{
  "title": {
    "text": "RFC 7797 - JSON Web Signature (JWS) Unencoded Payload Option",
    "ja": "RFC 7797 - JSONのWeb署名（JWS）エンコードされていなかったペイロードオプション"
  },
  "number": 7797,
  "created_at": "2019-11-02 12:41:15.347280+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                          M. Jones\nRequest for Comments: 7797                                     Microsoft\nUpdates: 7519                                              February 2016\nCategory: Standards Track\nISSN: 2070-1721",
      "raw": true
    },
    {
      "indent": 11,
      "text": "JSON Web Signature (JWS) Unencoded Payload Option",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "JSON Web Signature (JWS) represents the payload of a JWS as a base64url-encoded value and uses this value in the JWS Signature computation. While this enables arbitrary payloads to be integrity protected, some have described use cases in which the base64url encoding is unnecessary and/or an impediment to adoption, especially when the payload is large and/or detached. This specification defines a means of accommodating these use cases by defining an option to change the JWS Signing Input computation to not base64url-encode the payload. This option is intended to broaden the set of use cases for which the use of JWS is a good fit.",
      "ja": "JSONウェブ署名（JWS）はbase64urlエンコード値としてJWSのペイロードを表し、JWS署名計算にこの値を使用します。これは完全性が保護されるべき任意のペイロードを可能にしながら、いくつかは、ペイロードが大きいおよび/または取り外された場合に特にbase64url符号化は、不要及び/又は採用する障害であるユースケースを記載しています。この仕様はないbase64urlエンコードにペイロードをJWS署名入力計算を変更するオプションを定義することによって、これらのユースケースを収容する手段を定義します。このオプションは、JWSの使用が適していたためにユースケースのセットを広げることを意図しています。"
    },
    {
      "indent": 3,
      "text": "This specification updates RFC 7519 by stating that JSON Web Tokens (JWTs) MUST NOT use the unencoded payload option defined by this specification.",
      "ja": "JSONウェブトークン（JWTs）はこの仕様で定義されたエンコードされていないペイロードオプションを使用してはならないことを知らせることにより、この仕様の更新RFC 7519。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 5741のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc7797.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc7797で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2016 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2016 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3\n  1.1.  Notational Conventions  . . . . . . . . . . . . . . . . .   3\n2.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   4\n3.  The \"b64\" Header Parameter  . . . . . . . . . . . . . . . . .   4\n4.  Examples  . . . . . . . . . . . . . . . . . . . . . . . . . .   5\n  4.1.  Example with Header Parameters {\"alg\":\"HS256\"}  . . . . .   6\n  4.2.  Example with Header Parameters\n        {\"alg\":\"HS256\",\"b64\":false,\"crit\":[\"b64\"]}  . . . . . . .   7\n5.  Unencoded Payload Content Restrictions  . . . . . . . . . . .   7\n  5.1.  Unencoded Detached Payload  . . . . . . . . . . . . . . .   8\n  5.2.  Unencoded JWS Compact Serialization Payload . . . . . . .   8\n  5.3.  Unencoded JWS JSON Serialization Payload  . . . . . . . .   8\n6.  Using \"crit\" with \"b64\" . . . . . . . . . . . . . . . . . . .   9\n7.  Intended Use by Applications  . . . . . . . . . . . . . . . .   9\n8.  Security Considerations . . . . . . . . . . . . . . . . . . .   9\n9.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  10\n  9.1.  JSON Web Signature and Encryption Header Parameter\n        Registration  . . . . . . . . . . . . . . . . . . . . . .  10\n    9.1.1.  Registry Contents . . . . . . . . . . . . . . . . . .  10\n10. References  . . . . . . . . . . . . . . . . . . . . . . . . .  10\n  10.1.  Normative References . . . . . . . . . . . . . . . . . .  10\n  10.2.  Informative References . . . . . . . . . . . . . . . . .  11\nAcknowledgements  . . . . . . . . . . . . . . . . . . . . . . . .  11\nAuthor's Address  . . . . . . . . . . . . . . . . . . . . . . . .  11",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "The \"JSON Web Signature (JWS)\" [JWS] specification defines the JWS Signing Input as the input to the digital signature or Message Authentication Code (MAC) computation, with the value ASCII(BASE64URL(UTF8(JWS Protected Header)) || '.' || BASE64URL(JWS Payload)). While this works well in practice for many use cases, including those accommodating arbitrary payload values, other use cases have been described in which base64url-encoding the payload is unnecessary and/or an impediment to adoption, particularly when the payload is large and/or detached.",
      "ja": "「JSONウェブ署名（JWS）は、」[JWS]仕様は、値ASCII（BASE64URL（UTF8（JWS保護ヘッダ））を用いて、デジタル署名又はメッセージ認証コード（MAC）演算への入力としてJWS署名の入力を規定|| '' || BASE64URL（JWSペイロード））。これは、これら収容任意ペイロード値を含む多くのユースケース、のために実際にはうまく機能するが、他のユースケースは、ペイロードは、ペイロードが大きいおよび/またはある場合は特に、不要及び/又は採用する障害であるbase64urlコードに記載されています取り外しました。"
    },
    {
      "indent": 3,
      "text": "This specification introduces a new JWS Header Parameter value that generalizes the JWS Signing Input computation in a manner that makes base64url-encoding the payload selectable and optional. The primary set of use cases where this enhancement may be helpful are those in which the payload may be very large and where means are already in place to enable the payload to be communicated between the parties without modifications. Appendix F of [JWS] describes how to represent JWSs with detached content, which would typically be used for these use cases.",
      "ja": "この仕様はbase64urlコードペイロードが選択及び任意せる方法でJWS署名入力演算を一般新しいJWSヘッダパラメータ値を導入します。この拡張が役立つかもしれないユースケースの一次組は、ペイロードが非常に大きく、ここで、手段は、修正なしで当事者間で通信されるペイロードを有効にする代わりに、既に存在することが可能なものです。 【JWS]の付録Fは、典型的には、これらのユースケースのために使用される独立したコンテンツとJWSsを表現する方法について説明します。"
    },
    {
      "indent": 3,
      "text": "The advantages of not having to base64url-encode a large payload are that allocation of the additional storage to hold the base64url-encoded form is avoided and the base64url-encoding computation never has to be performed. In summary, this option can help avoid unnecessary copying and transformations of the potentially large payload, resulting in sometimes significant space and time improvements for deployments.",
      "ja": "base64urlエンコード大きいペイロードする必要がないという利点がbase64url符号化された形態を保持するために追加のストレージの割り当てが回避されbase64urlコード計算が実行されなければならないことです。要約すると、このオプションは展開のため、時には重要な空間と時間の改善で、その結果、潜在的に大きなペイロードの不必要なコピーと変換を避けるのを助けることができます。"
    },
    {
      "indent": 0,
      "text": "1.1. Notational Conventions",
      "section_title": true,
      "ja": "1.1。表記規則"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in \"Key words for use in RFCs to Indicate Requirement Levels\" [RFC2119]. The interpretation should only be applied when the terms appear in all capital letters.",
      "ja": "キーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、 \"SHALL\"、 \"SHOULD\"、 \"ないもの\"、 \"推奨\" \"ない（SHOULD NOT）\"、 \"MAY\"、 \"推奨NOT\"、および「OPTIONAL要求レベルを示すためのRFCsにおける使用のためのキーワード 『[RFC2119]」に記載されているように、この文書で解釈されるべきです』。用語はすべて大文字で表示されたときの解釈にのみ適用されるべきです。"
    },
    {
      "indent": 3,
      "text": "BASE64URL(OCTETS) denotes the base64url encoding of OCTETS, per Section 2 of [JWS].",
      "ja": "BASE64URL（オクテット）JWS]のセクション2当たり、オクテットのbase64url符号化を示しています。"
    },
    {
      "indent": 3,
      "text": "UTF8(STRING) denotes the octets of the UTF-8 [RFC3629] representation of STRING, where STRING is a sequence of zero or more Unicode [UNICODE] characters.",
      "ja": "UTF8（文字列）は、文字列がゼロ以上のUnicode [UNICODE]の文字列である列のUTF-8 [RFC3629]表現のオクテットを表します。"
    },
    {
      "indent": 3,
      "text": "ASCII(STRING) denotes the octets of the ASCII [RFC20] representation of STRING, where STRING is a sequence of zero or more ASCII characters.",
      "ja": "ASCII（文字列）文字列は、ゼロ個以上のASCII文字のシーケンスであるSTRINGのASCII [RFC20]表現のオクテットを表します。"
    },
    {
      "indent": 3,
      "text": "The concatenation of two values A and B is denoted as A || B.",
      "ja": "二つの値A及びBの連結は、次のように表記する|| B."
    },
    {
      "indent": 0,
      "text": "2. Terminology",
      "section_title": true,
      "ja": "2.用語"
    },
    {
      "indent": 3,
      "text": "This specification uses the same terminology as the \"JSON Web Signature\" [JWS] and \"JSON Web Algorithms\" [JWA] specifications.",
      "ja": "本明細書では、「JSONウェブ署名」[JWS]および「JSONウェブアルゴリズム」[JWA】仕様と同じ用語を使用します。"
    },
    {
      "indent": 0,
      "text": "3. The \"b64\" Header Parameter",
      "section_title": true,
      "ja": "3.「B64」ヘッダパラメータ"
    },
    {
      "indent": 3,
      "text": "This Header Parameter modifies the JWS Payload representation and the JWS Signing Input computation in the following way:",
      "ja": "このヘッダパラメータは、次のようにJWSペイロード表現とJWS署名入力の計算を変更します。"
    },
    {
      "indent": 3,
      "text": "b64 The \"b64\" (base64url-encode payload) Header Parameter determines whether the payload is represented in the JWS and the JWS Signing Input as ASCII(BASE64URL(JWS Payload)) or as the JWS Payload value itself with no encoding performed. When the \"b64\" value is \"false\", the payload is represented simply as the JWS Payload value; otherwise, it is represented as ASCII(BASE64URL(JWS Payload)). The \"b64\" value is a JSON boolean, with a default value of \"true\". When used, this Header Parameter MUST be integrity protected; therefore, it MUST occur only within the JWS Protected Header. Use of this Header Parameter is OPTIONAL. If the JWS has multiple signatures and/or MACs, the \"b64\" Header Parameter value MUST be the same for all of them. Note that unless the payload is detached, many payload values would cause errors parsing the resulting JWSs, as described in Section 5.",
      "ja": "「B64」（base64urlエンコードペイロード）B64ヘッダパラメータは、ペイロードは、JWSで表され、JWSが行わない符号化とASCII（BASE64URL（JWSペイロード））として、またはJWSペイロード値そのものなどの入力を署名するかどうかを判定する。 「B64」の値が「偽」である場合、ペイロードは、単にJWSペイロード値として表されます。それ以外の場合は、ASCII（BASE64URL（JWSペイロード））として表されます。 「B64」の値が「真」のデフォルト値は、JSONのブール値です。使用する場合、このヘッダパラメータは、完全性保護されなければなりません。そのため、それだけでJWS保護されたヘッダ内で発生しなければなりません。このヘッダパラメータの使用は任意です。 JWSは、複数の署名および/またはMACを持っている場合は、「B64」ヘッダパラメータ値は、それらのすべてで同じでなければなりません。ペイロードが取り外されない限り、セクション5で説明したように、多くのペイロード値は、得られたJWSsを解析エラーを引き起こすことに留意されたいです。"
    },
    {
      "indent": 3,
      "text": "The following table shows the JWS Signing Input computation, depending upon the value of this parameter:",
      "ja": "次の表は、このパラメータの値に応じて、JWS署名入力計算を示しています。"
    },
    {
      "indent": 3,
      "text": "+-------+-----------------------------------------------------------+\n| \"b64\" | JWS Signing Input Formula                                 |\n+-------+-----------------------------------------------------------+\n| true  | ASCII(BASE64URL(UTF8(JWS Protected Header)) || '.' ||     |\n|       | BASE64URL(JWS Payload))                                   |\n|       |                                                           |\n| false | ASCII(BASE64URL(UTF8(JWS Protected Header)) || '.') ||    |\n|       | JWS Payload                                               |\n+-------+-----------------------------------------------------------+",
      "raw": true
    },
    {
      "indent": 0,
      "text": "4. Examples",
      "section_title": true,
      "ja": "4.例"
    },
    {
      "indent": 3,
      "text": "This section gives examples of JWSs showing the difference that using the \"b64\" Header Parameter makes. The examples all use the JWS Payload value [36, 46, 48, 50]. This octet sequence represents the ASCII characters \"$.02\"; its base64url-encoded representation is \"JC4wMg\".",
      "ja": "このセクションでは、ヘッダパラメータが作る「B64」を使用していることの違いを示すJWSsの例を示します。例はすべて[36、46、48、50] JWSペイロード値を使用します。このオクテットシーケンスは、ASCII文字「$ .02」を表します。そのbase64url-符号化された表現は、「JC4wMg」です。"
    },
    {
      "indent": 3,
      "text": "The following table shows a set of Header Parameter values without using a false \"b64\" Header Parameter value and a set using it, with the resulting JWS Signing Input values represented as ASCII characters:",
      "ja": "次の表は、得られたJWSはASCII文字として表される入力値を署名して、偽の「B64」ヘッダパラメータ値及びそれを用いたセットを使用することなく、ヘッダーパラメータ値のセットを示します。"
    },
    {
      "indent": 3,
      "text": "+-----------------------------+-------------------------------------+\n| JWS Protected Header        | JWS Signing Input Value             |\n+-----------------------------+-------------------------------------+\n| {\"alg\":\"HS256\"}             | eyJhbGciOiJIUzI1NiJ9.JC4wMg         |\n|                             |                                     |\n| {\"alg\":\"HS256\",\"b64\":false, | eyJhbGciOiJIUzI1NiIsImI2NCI6ZmFsc2U |\n| \"crit\":[\"b64\"]}             | sImNyaXQiOlsiYjY0Il19.$.02          |\n+-----------------------------+-------------------------------------+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "These examples use the Hash-based Message Authentication Code (HMAC) key from Appendix A.1 of [JWS], which is represented below as a JSON Web Key [JWK] (with line breaks within values for display purposes only):",
      "ja": "これらの例は、（表示のみの目的のために値内改行付き）JSONのWebキー[JWK]として以下に示されている[JWS]の付録A.1からハッシュベースのメッセージ認証コード（HMAC）キーを使用します。"
    },
    {
      "indent": 5,
      "text": "{ \"kty\":\"oct\", \"k\":\"AyM1SysPpbyDfgZld3umj1qzKObwVMkoqQ-EstJQLr_T-1qS0gZH75 aKtMN3Yj0iPS4hcgUuTwjAzZr1Z9CAow\" }",
      "ja": "{ \"KTY\"： \"10月\"、 \"K\"： \"AyM1SysPpbyDfgZld3umj1qzKObwVMkoqQ-EstJQLr_T-1qS0gZH75 aKtMN3Yj0iPS4hcgUuTwjAzZr1Z9CAow\"}"
    },
    {
      "indent": 3,
      "text": "The rest of this section shows complete representations for the two JWSs above.",
      "ja": "このセクションの残りの部分は、上記の二つのJWSsのための完全な表現を示しています。"
    },
    {
      "indent": 0,
      "text": "4.1. Example with Header Parameters {\"alg\":\"HS256\"}",
      "section_title": true,
      "ja": "4.1。ヘッダパラメータ{「HS256」「ALG」}の例"
    },
    {
      "indent": 3,
      "text": "The complete JWS representation for this example using the JWS Compact Serialization and a non-detached payload (with line breaks for display purposes only) is:",
      "ja": "JWSコンパクトシリアル化を使用して、この例の完全なJWS表現と（のみ表示目的のために改行を有する）非剥離ペイロードです。"
    },
    {
      "indent": 5,
      "text": "eyJhbGciOiJIUzI1NiJ9 . JC4wMg . 5mvfOroL-g7HyqJoozehmsaqmvTYGEq5jTI1gVvoEoQ",
      "ja": "eyJhbGciOiJIUzI1NiJ9。 JC4wMg。 5mvfOroL-g7HyqJoozehmsaqmvTYGEq5jTI1gVvoEoQ"
    },
    {
      "indent": 3,
      "text": "Note that this JWS uses only features defined by [JWS] and does not use the new \"b64\" Header Parameter. It is the \"control\" so that differences when it is used can be easily seen.",
      "ja": "このJWSのみ[JWS]で定義された機能と新しい「B64」ヘッダパラメータを使用していない使用することに注意してください。それが使用されている違いが見やすいように「コントロール」です。"
    },
    {
      "indent": 3,
      "text": "The equivalent representation for this example using the flattened JWS JSON Serialization is:",
      "ja": "平坦化されたJWS JSONシリアライズを使用して、この例の等価表現は次のとおりです。"
    },
    {
      "indent": 5,
      "text": "{ \"protected\": \"eyJhbGciOiJIUzI1NiJ9\", \"payload\": \"JC4wMg\", \"signature\": \"5mvfOroL-g7HyqJoozehmsaqmvTYGEq5jTI1gVvoEoQ\" }",
      "ja": "{ \"保護\"： \"eyJhbGciOiJIUzI1NiJ9\"、 \"ペイロード\"： \"JC4wMg\"、 \"署名\"： \"5mvfOroL-g7HyqJoozehmsaqmvTYGEq5jTI1gVvoEoQ\"}"
    },
    {
      "indent": 0,
      "text": "4.2. Example with Header Parameters {\"alg\":\"HS256\",\"b64\":false,\"crit\":[\"b64\"]}",
      "ja": "4.2。ヘッダパラメータ{ \"HS256\"、 \"B64\"：偽、 \"クリティカル\"： \"B64\" \"ALG\"}の例"
    },
    {
      "indent": 3,
      "text": "The complete JWS representation for this example using the JWS Compact Serialization and a detached payload (with line breaks for display purposes only) is:",
      "ja": "JWSコンパクトシリアル化及び（のみ表示目的のために改行で）取り外すペイロードを使用して、この例の完全なJWS表現です。"
    },
    {
      "indent": 5,
      "text": "eyJhbGciOiJIUzI1NiIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19 . . A5dxf2s96_n5FLueVuW1Z_vh161FwXZC4YLPff6dmDY",
      "ja": "eyJhbGciOiJIUzI1NiIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19。 。 A5dxf2s96_n5FLueVuW1Z_vh161FwXZC4YLPff6dmDY"
    },
    {
      "indent": 3,
      "text": "Note that the payload \"$.02\" cannot be represented in this JWS in its unencoded form because it contains a period ('.') character, which would cause parsing problems. This JWS is therefore shown with a detached payload.",
      "ja": "（「」）それはピリオドが含まれているため、ペイロード「$ .02」そのエンコードされていない形で、このJWSでは表現できないことに注意してください問題を解析する原因となる文字、。このJWSしたがって取り外さペイロードで示されています。"
    },
    {
      "indent": 3,
      "text": "The complete JWS representation for this example using the flattened JWS JSON Serialization and a non-detached payload is:",
      "ja": "平坦JWS JSON直列化および非剥離ペイロードを使用して、この例の完全なJWS表現です。"
    },
    {
      "indent": 5,
      "text": "{ \"protected\": \"eyJhbGciOiJIUzI1NiIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19\", \"payload\": \"$.02\", \"signature\": \"A5dxf2s96_n5FLueVuW1Z_vh161FwXZC4YLPff6dmDY\" }",
      "ja": "{ \"保護\"： \"eyJhbGciOiJIUzI1NiIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19\"、 \"ペイロード\"： \"$ .02\"、 \"署名\"： \"A5dxf2s96_n5FLueVuW1Z_vh161FwXZC4YLPff6dmDY\"}"
    },
    {
      "indent": 3,
      "text": "If using a detached payload with the JWS JSON Serialization, the \"payload\" element would be omitted.",
      "ja": "JWS JSONシリアライズで剥離ペイロードを使用する場合、「ペイロード」要素は省略されるであろう。"
    },
    {
      "indent": 0,
      "text": "5. Unencoded Payload Content Restrictions",
      "section_title": true,
      "ja": "5.暗号化されていないペイロードコンテンツの制限"
    },
    {
      "indent": 3,
      "text": "When the \"b64\" value is \"false\", different restrictions on the payload contents apply, depending upon the circumstances, as described in this section. The restrictions prevent the use of payload values that would cause errors parsing the resulting JWSs.",
      "ja": "「B64」の値が「偽」である場合、このセクションで説明したように、ペイロードの内容に異なる制限が、状況に応じて、適用します。制限は、得られJWSsを解析エラーを引き起こすペイロード値を使用することを防ぎます。"
    },
    {
      "indent": 3,
      "text": "Note that because the character sets that can be used for unencoded non-detached payloads differ between the two serializations, some JWSs using a \"b64\" value of \"false\" cannot be syntactically converted between the JWS JSON Serialization and the JWS Compact Serialization. See Section 8 for security considerations on using unencoded payloads.",
      "ja": "符号化されていない非剥離ペイロードのために使用することができる文字セットは、2つのシリアライゼーションの間で異なるため、の「B64」値を使用して、いくつかのJWSsが「偽」構文的JWS JSONシリアライズとJWSコンパクトシリアル化の間で変換することができないことに留意されたいです。エンコードされていないペイロードを使用して、セキュリティ上の考慮事項については、セクション8を参照してください。"
    },
    {
      "indent": 0,
      "text": "5.1. Unencoded Detached Payload",
      "section_title": true,
      "ja": "5.1。符号化されていない独立ペイロード"
    },
    {
      "indent": 3,
      "text": "Appendix F of [JWS] describes how to represent JWSs with detached content. A detached payload can contain any octet sequence representable by the application. The payload value will not cause problems parsing the JWS, since it is not represented as part of the JWS. If an application uses a content encoding when representing the payload, then it MUST specify whether the signature or MAC is performed over the content-encoded representation or over the unencoded content.",
      "ja": "[JWS]の付録Fは切り離されたコンテンツでJWSsを表現する方法を説明します。剥離ペイロードは、アプリケーションによって任意のオクテット列表現を含むことができます。それはJWSの一部として表現されていないので、ペイロード値は、JWSを解析する問題が発生することはありません。ペイロードを表す場合、アプリケーションは、コンテンツのエンコードを使用している場合、それは署名またはMACが、コンテンツ符号化された表現上又はエンコードされていないコンテンツ上で実行されているかどうかを指定しなければなりません。"
    },
    {
      "indent": 0,
      "text": "5.2. Unencoded JWS Compact Serialization Payload",
      "section_title": true,
      "ja": "5.2。エンコードされていないJWSコンパクトシリアルペイロード"
    },
    {
      "indent": 3,
      "text": "When using the JWS Compact Serialization, unencoded non-detached payloads using period ('.') characters would cause parsing errors; such payloads MUST NOT be used with the JWS Compact Serialization. Similarly, if a JWS using the JWS Compact Serialization and a non-detached payload is to be transmitted in a context that requires URL-safe characters, then the application MUST ensure that the payload contains only the URL-safe characters 'a'-'z', 'A'-'Z', '0'-'9', dash ('-'), underscore ('_'), and tilde ('~'). The payload value is the ASCII representation of the characters in the payload string. The ASCII space character and all printable ASCII characters other than period ('.') (those characters in the ranges %x20-2D and %x2F-7E) MAY be included in a non-detached payload using the JWS Compact Serialization, provided that the application can transmit the resulting JWS without modification.",
      "ja": "ピリオド（「」）を使用して、文字をエンコードされていない非デタッチペイロードをJWSコンパクトシリアル化を使用する場合は、エラーを解析する原因となります。このようペイロードはJWSコンパクトシリアル化して使用してはいけません。 JWSコンパクトシリアル化を使用して、JWSおよび非剥離ペイロードはURLセーフ文字を必要とするコンテキストで送信される場合、同様に、アプリケーションは、ペイロードのみURLセーフ文字「A'-」が含まれていることを確認しなければなりませんZ」、 'A'  -  'Z'、 '0'  -  '9'、ダッシュ（ ' - '）（_ '）、アンダー'、およびチルダ（ '〜'）。ペイロード値は、ペイロードの文字列の文字のASCII表現です。期間以外のASCIIのスペース文字と、すべての印刷可能なASCII文字（「」）JWSコンパクトシリアル化を使用して、非デタッチペイロードに含まれるかもしれ（x20-2Dおよび％x2F-7Eはレンジの％でこれらの文字は）、ということを提供しましたアプリケーションは変更せず、得られたJWSを送信することができます。"
    },
    {
      "indent": 3,
      "text": "No meaning or special semantics are attached to any characters in the payload. For instance, the percent ('%') character represents itself and is not used by JWS objects for percent-encoding [RFC3986]. Applications, of course, are free to utilize content-encoding rules of their choosing, provided that the encoded representations utilize only allowed payload characters.",
      "ja": "何の意味や特別な意味は、ペイロード内の任意の文字に接続されていません。例えば、パーセント（「％」）は、文字自体を表し、パーセントエンコーディング[RFC3986]のためにJWSオブジェクトによって使用されません。アプリケーションは、当然のことながら、彼らが選んだのコンテンツ符号化規則を利用するのは自由です、エンコードされた表現のみ許可されたペイロードの文字を利用することを提供します。"
    },
    {
      "indent": 0,
      "text": "5.3. Unencoded JWS JSON Serialization Payload",
      "section_title": true,
      "ja": "5.3。エンコードされていないJWS JSONシリアライズペイロード"
    },
    {
      "indent": 3,
      "text": "When using the JWS JSON Serialization, unencoded non-detached payloads must consist of the octets of the UTF-8 encoding of a sequence of Unicode code points that are representable in a JSON string. The payload value is determined after performing any JSON string escape processing, per Section 8.3 of RFC 7159 [RFC7159], and then UTF-8-encoding the resulting Unicode code points. This means, for instance, that these payloads represented as JSON strings are equivalent (\"$.02\", \"\\u0024.02\"). Unassigned Unicode code point values MUST NOT be used to represent the payload.",
      "ja": "JWS JSONシリアル化を使用する場合は、符号化されていない非剥離ペイロードはJSON文字列で表現されているUnicodeコードポイントの列のUTF-8エンコーディングのオクテットで構成されなければなりません。ペイロード値は、RFC 7159のセクション8.3 [RFC7159]あたり、任意のJSON文字列エスケープ処理を行った後に決定し、その後、得られたUnicodeコードポイントをUTF-8コード化されます。これは、JSON文字列として表され、これらのペイロードは（「$ .02」、「\\ u0024.02」）と同等であることを、例えば、意味しています。割り当てられていないUnicodeコードポイント値は、ペイロードを表すために使用してはいけません。"
    },
    {
      "indent": 0,
      "text": "6. Using \"crit\" with \"b64\"",
      "section_title": true,
      "ja": "6.「B64」と「クリティカル」を使用"
    },
    {
      "indent": 3,
      "text": "The \"crit\" Header Parameter MUST be included with \"b64\" in its set of values when using the \"b64\" Header Parameter to cause implementations not implementing \"b64\" to reject the JWS (instead of it being misinterpreted).",
      "ja": "（それは誤って解釈される代わりに）JWSを拒否するように、「B64」を実装していない実装を引き起こす「B64」ヘッダパラメータを使用する場合、「クリティカル」ヘッダパラメータは、値のセットで「B64」に含まれなければなりません。"
    },
    {
      "indent": 0,
      "text": "7. Intended Use by Applications",
      "section_title": true,
      "ja": "用途別7.使用目的"
    },
    {
      "indent": 3,
      "text": "Application profiles should specify whether \"b64\" with a \"false\" value is to be used by the application in each application context or not, with it then being consistently applied in each application context. For instance, an application that uses detached payloads might specify that \"b64\" with a \"false\" value always be used. It is NOT RECOMMENDED that this parameter value be dynamically varied with different payloads in the same application context.",
      "ja": "アプリケーションプロファイルは、「偽」の値と「B64」は、それが、その後一貫して各アプリケーションのコンテキストに適用されると、各アプリケーションのコンテキスト内のアプリケーションで使用するか否かを特定すべきです。例えば、一戸建てのペイロードを使用するアプリケーションは、「偽」の値を持つ「B64」は常に使用することを指定できます。このパラメータの値は、同じアプリケーションのコンテキストで異なるペイロードを持つ動的に変更することはお勧めしません。"
    },
    {
      "indent": 3,
      "text": "While it is legal to use \"b64\" with a \"true\" value, it is RECOMMENDED that \"b64\" simply be omitted in this case, since it would be selecting the behavior already specified in [JWS].",
      "ja": "それが「真」の値を「B64」を使用することが合法であるが、すでに[JWS]で指定された動作を選択することになるので、「B64」は、単に、この場合には省略することが推奨されます。"
    },
    {
      "indent": 3,
      "text": "For interoperability reasons, JSON Web Tokens [JWT] MUST NOT use \"b64\" with a \"false\" value.",
      "ja": "相互運用性の理由から、JSONウェブトークンは[JWT]「偽」の値を「B64」を使用してはなりません。"
    },
    {
      "indent": 0,
      "text": "8. Security Considerations",
      "section_title": true,
      "ja": "8.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "[JWS] base64url-encodes the JWS Payload to restrict the set of characters used to represent it so that the representation does not contain characters used for delimiters in JWS representations. Those delimiters are the period ('.') character for the JWS Compact Serialization and the double-quote ('\"') character for the JWS JSON Serialization. When the \"b64\" (base64url-encode payload) value is \"false\", these properties are lost. It then becomes the responsibility of the application to ensure that payloads only contain characters that will not cause parsing problems for the serialization used, as described in Section 5. The application also incurs the responsibility to ensure that the payload will not be modified during transmission.",
      "ja": "【JWS]表現は、JWS表現で区切り文字に使用される文字が含まれないように、それを表すために使用される文字のセットを制限するJWSペイロードをbase64urlを符号化します。これらの区切り文字は、B64 『偽『（base64urlエンコードペイロード）値である』期間JWSコンパクトシリアル化のための（」。『）文字と二重引用符（』\" '）JWS JSONシリアライゼーションの文字』です、これらのプロパティは失われます。これは、その後、ペイロードが唯一のアプリケーションはまた、ペイロードがないことを確認する責任を負う第5節で説明したように、使用のシリアル化のための問題を解析することはありません文字が含まれていることを保証するために、アプリケーションの責任となり送信中に変更すること。"
    },
    {
      "indent": 3,
      "text": "Note that if a JWS were to be created with a \"b64\" value of \"false\" without including the \"crit\" Header Parameter with \"b64\" in its set of values and it were to be received by an implementation not supporting the \"b64\" Header Parameter, then the signature or MAC would still verify but the recipient would believe that the intended JWS Payload value is the base64url decoding of the payload value received, rather than the payload value received itself. For example, if the payload value received were \"NDA1\", an implementation not supporting this extension would interpret the intended payload as being the base64url decoding of this value, which is \"405\". Requiring the use of the \"crit\" Header Parameter with \"b64\" in the set of values prevents this misinterpretation.",
      "ja": "JWSは、値のセットで「B64」と「クリティカル」ヘッダパラメータを含まない「偽」の「B64」値を使用して作成することがあったとならば、それは「B64に対応していない実装によって受信されるべきであったことに注意してください「ヘッダパラメータは、署名またはMACがまだ確認だろうが、受信者は、ペイロード値自体を受信するのではなく、意図JWSペイロード値は、受信したペイロード値のbase64url復号化であると考えているであろう。受信したペイロード値が「NDA1」であった場合、例えば、この拡張をサポートしない実装が「405」であり、この値は、のbase64url復号あるとして意図ペイロードを解釈します。値のセットで、「B64」と「クリティカル」ヘッダパラメータの使用を要求することは、この誤解を防ぐことができます。"
    },
    {
      "indent": 0,
      "text": "9. IANA Considerations",
      "section_title": true,
      "ja": "9. IANAの考慮事項"
    },
    {
      "indent": 0,
      "text": "9.1. JSON Web Signature and Encryption Header Parameter Registration",
      "section_title": true,
      "ja": "9.1。 JSONのWeb署名と暗号化ヘッダパラメータの登録"
    },
    {
      "indent": 3,
      "text": "This specification registers the \"b64\" Header Parameter defined in Section 3 in the IANA \"JSON Web Signature and Encryption Header Parameters\" registry [IANA.JOSE] established by [JWS].",
      "ja": "この仕様は、ヘッダパラメータ[IANA.JOSE] [JWS]によって確立IANA「JSONウェブ署名および暗号化ヘッダパラメータ」レジストリにセクション3で定義された「B64」を登録します。"
    },
    {
      "indent": 0,
      "text": "9.1.1. Registry Contents",
      "section_title": true,
      "ja": "9.1.1。レジストリの内容"
    },
    {
      "indent": 3,
      "text": "o Header Parameter Name: \"b64\" o Header Parameter Description: Base64url-Encode Payload o Header Parameter Usage Location(s): JWS o Change Controller: IESG o Specification Document(s): Section 3 of RFC 7797",
      "ja": "Oヘッダパラメータ名：ヘッダパラメータ説明O \"B64\"：Base64urlエンコードペイロードヘッダパラメータの使用場所（S）O：変更コントローラO JWS：仕様文書O IESG（S）：RFC 7797のセクション3"
    },
    {
      "indent": 0,
      "text": "10. References",
      "section_title": true,
      "ja": "10.参考文献"
    },
    {
      "indent": 0,
      "text": "10.1. Normative References",
      "section_title": true,
      "ja": "10.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[IANA.JOSE] IANA, \"JSON Object Signing and Encryption (JOSE)\", <http://www.iana.org/assignments/jose>.",
      "ja": "【IANA.JOSE] IANA、 \"JSONオブジェクトの署名と暗号化（JOSE）\"、<http://www.iana.org/assignments/jose>。"
    },
    {
      "indent": 3,
      "text": "[JWA] Jones, M., \"JSON Web Algorithms (JWA)\", RFC 7518, DOI 10.17487/RFC7518, May 2015, <http://www.rfc-editor.org/info/rfc7518>.",
      "ja": "【JOY】ジョーンズ、M.、 \"JSONウェブ暗号（JOY）\"、RFC 7518、DOI 10.17487 / RFC7518、2015年5月、<http://www.rfc-editor.org/info/rfc7518>。"
    },
    {
      "indent": 3,
      "text": "[JWS] Jones, M., Bradley, J., and N. Sakimura, \"JSON Web Signature (JWS)\", RFC 7515, DOI 10.17487/RFC7515, May 2015, <http://www.rfc-editor.org/info/rfc7515>.",
      "ja": "【JWS】ジョーンズ、M.、ブラッドリー、J。、およびN. Sakimura、 \"JSONウェブ署名（JWS）\"、RFC 7515、DOI 10.17487 / RFC7515、2015年5月、<http://www.rfc-editor.org /情報/ rfc7515>。"
    },
    {
      "indent": 3,
      "text": "[JWT] Jones, M., Bradley, J., and N. Sakimura, \"JSON Web Token (JWT)\", RFC 7519, DOI 10.17487/RFC7519, May 2015, <http://www.rfc-editor.org/info/rfc7519>.",
      "ja": "【JWT]ジョーンズ、M.、ブラッドリー、J。、およびN. Sakimura、 \"JSONウェブトークン（JWT）\"、RFC 7519、DOI 10.17487 / RFC7519、2015年5月、<http://www.rfc-editor.org /情報/ rfc7519>。"
    },
    {
      "indent": 3,
      "text": "[RFC20] Cerf, V., \"ASCII format for Network Interchange\", STD 80, RFC 20, October 1969, <http://www.rfc-editor.org/info/rfc20>.",
      "ja": "[RFC20]サーフ、V.、 \"ネットワークの交換のためのASCIIフォーマット\"、STD 80、RFC 20、1969年10月、<http://www.rfc-editor.org/info/rfc20>。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <http://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<http://www.rfc-editor.org/info/ RFC2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC3629] Yergeau, F., \"UTF-8, a transformation format of ISO 10646\", STD 63, RFC 3629, DOI 10.17487/RFC3629, November 2003, <http://www.rfc-editor.org/info/rfc3629>.",
      "ja": "[RFC3629] Yergeau、F.、 \"UTF-8、ISO 10646の変換フォーマット\"、STD 63、RFC 3629、DOI 10.17487 / RFC3629、2003年11月、<http://www.rfc-editor.org/info/ RFC3629>。"
    },
    {
      "indent": 3,
      "text": "[RFC7159] Bray, T., Ed., \"The JavaScript Object Notation (JSON) Data Interchange Format\", RFC 7159, DOI 10.17487/RFC7159, March 2014, <http://www.rfc-editor.org/info/rfc7159>.",
      "ja": "[RFC7159]ブレイ、T.、エド。、 \"JavaScriptのObject Notation（JSON）形式のデータ交換フォーマット\"、RFC 7159、DOI 10.17487 / RFC7159、2014年3月、<http://www.rfc-editor.org/info/ rfc7159>。"
    },
    {
      "indent": 3,
      "text": "[UNICODE] The Unicode Consortium, \"The Unicode Standard\", <http://www.unicode.org/versions/latest/>.",
      "ja": "[UNICODE]ユニコードコンソーシアム、 \"Unicode規格\"、<http://www.unicode.org/versions/latest/>。"
    },
    {
      "indent": 0,
      "text": "10.2. Informative References",
      "section_title": true,
      "ja": "10.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[JWK] Jones, M., \"JSON Web Key (JWK)\", RFC 7517, DOI 10.17487/RFC7517, May 2015, <http://www.rfc-editor.org/info/rfc7517>.",
      "ja": "[JWK]ジョーンズ、M.、 \"JSONのWebキー（JWK）\"、RFC 7517、DOI 10.17487 / RFC7517、2015年5月、<http://www.rfc-editor.org/info/rfc7517>。"
    },
    {
      "indent": 3,
      "text": "[RFC3986] Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform Resource Identifier (URI): Generic Syntax\", STD 66, RFC 3986, DOI 10.17487/RFC3986, January 2005, <http://www.rfc-editor.org/info/rfc3986>.",
      "ja": "[RFC3986]バーナーズ - リー、T.、フィールディング、R.、およびL. Masinter、 \"ユニフォームリソース識別子（URI）：汎用構文\"、STD 66、RFC 3986、DOI 10.17487 / RFC3986、2005年1月<HTTP：/ /www.rfc-editor.org/info/rfc3986>。"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Anders Rundgren, Richard Barnes, Phillip Hallam-Baker, Jim Schaad, Matt Miller, Martin Thomson, and others have all made the case for being able to use a representation of the payload that is not base64url encoded in contexts in which it safe to do so.",
      "ja": "アンダース・ラングレン、リチャード・バーンズ、フィリップハラム - ベイカー、ジムSchaad、マット・ミラー、マーティン・トムソン、その他はすべて、それが安全に行うためにコンテキストでエンコードbase64urlされていないペイロードの表現を使用することができることのためのケースを作りましたそう。"
    },
    {
      "indent": 3,
      "text": "Thanks to Sergey Beryozkin, Stephen Farrell, Benjamin Kaduk, James Manger, Kathleen Moriarty, Axel Nennker, Anders Rundgren, Nat Sakimura, Jim Schaad, Robert Sparks, and Matias Woloski for their reviews of the specification, and thanks to Vladimir Dzhuvinov for verifying the examples.",
      "ja": "仕様の彼らのレビューのためにセルゲイBeryozkin、スティーブン・ファレル、ベンジャミンKaduk、ジェームス・マンジェ、キャスリーン・モリアーティ、アクセルNennker、アンダース・ラングレン、ナットSakimura、ジムSchaad、ロバートスパークス、およびマティアスWoloskiのおかげで、および検証のためのウラジミールDzhuvinovに感謝例。"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Michael B. Jones Microsoft",
      "ja": "マイケルB.ジョーンズマイクロソフト"
    },
    {
      "indent": 3,
      "text": "Email: mbj@microsoft.com URI: http://self-issued.info/",
      "ja": "メール：mbj@microsoft.com URI：http://self-issued.info/"
    }
  ]
}