{
  "title": {
    "text": "RFC 7982 - Measurement of Round-Trip Time and Fractional Loss Using Session Traversal Utilities for NAT (STUN)",
    "ja": "RFC 7982 - 往復時間とNATのためのセッショントラバーサルユーティリティの使用フラクショナル損失の測定（STUN）"
  },
  "number": 7982,
  "created_at": "2019-11-03 01:38:47.579191+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                      P. Martinsen\nRequest for Comments: 7982                                      T. Reddy\nCategory: Standards Track                                          Cisco\nISSN: 2070-1721                                                  D. Wing",
      "raw": true
    },
    {
      "indent": 58,
      "text": "      V. Singh\n  callstats.io\nSeptember 2016",
      "raw": true
    },
    {
      "indent": 11,
      "text": "Measurement of Round-Trip Time and Fractional Loss\n Using Session Traversal Utilities for NAT (STUN)",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "A host with multiple interfaces needs to choose the best interface for communication. Oftentimes, this decision is based on a static configuration and does not consider the path characteristics, which may affect the user experience.",
      "ja": "複数のインタフェースを持つホストが通信を行うための最善のインターフェイスを選択する必要があります。多くの場合、この決定は、静的な構成に基づいており、ユーザーエクスペリエンスに影響を与える可能性があるパス特性を考慮しません。"
    },
    {
      "indent": 3,
      "text": "This document describes a mechanism for an endpoint to measure the path characteristics fractional loss and RTT using Session Traversal Utilities for NAT (STUN) messages.",
      "ja": "この文書では、NAT（STUN）メッセージのセッショントラバーサルユーティリティを使用してパス特性小数損失とRTTを測定するために、エンドポイントのメカニズムについて説明します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 7841.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 7841のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc7982.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc7982で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2016 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2016 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3\n2.  Notational Conventions  . . . . . . . . . . . . . . . . . . .   4\n3.  Measuring RTT and Fractional Loss . . . . . . . . . . . . . .   4\n  3.1.  TRANSACTION_TRANSMIT_COUNTER Attribute  . . . . . . . . .   4\n  3.2.  Usage in Requests . . . . . . . . . . . . . . . . . . . .   5\n  3.3.  Usage in Responses  . . . . . . . . . . . . . . . . . . .   5\n  3.4.  Example Operation . . . . . . . . . . . . . . . . . . . .   6\n4.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   7\n5.  Security Considerations . . . . . . . . . . . . . . . . . . .   7\n6.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   8\n  6.1.  Normative References  . . . . . . . . . . . . . . . . . .   8\n  6.2.  Informative References  . . . . . . . . . . . . . . . . .   9\nAcknowledgements  . . . . . . . . . . . . . . . . . . . . . . . .   9\nAuthors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  10",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "This document extends STUN [RFC5389] to make it possible to correlate STUN responses to specific requests when retransmits occur. This assists the client in determining path characteristics like round-trip time (RTT) and fractional packet loss.",
      "ja": "この文書では、再送が発生したときに特定の要求にSTUN応答を相関させることを可能にするためにSTUN [RFC5389]を拡張します。これは、ラウンドトリップ時間（RTT）と小数パケットロスのようなパス特性を決定する際に、クライアントを支援します。"
    },
    {
      "indent": 3,
      "text": "The TRANSACTION_TRANSMIT_COUNTER attribute introduced in Section 3.1 can be used in Interactive Connectivity Establishment (ICE) [RFC5245] connectivity checks (STUN Binding request and response). It can also be used with Traversal Using Relays around NAT (TURN) [RFC5766] by adding this attribute to Allocate requests and responses to measure loss and RTT between the client and the respective TURN server.",
      "ja": "セクション3.1で導入さTRANSACTION_TRANSMIT_COUNTER属性は[RFC5245]の接続性チェック（STUNバインディング要求および応答）インタラクティブ接続確立（ICE）で使用することができます。また、トラバーサルは、クライアントとそれぞれのTURNサーバー間の損失とRTTを測定するための要求と応答を割り当てるために、この属性を追加することにより、NAT（TURN）[RFC5766]の周りのリレーを使用して使用することができます。"
    },
    {
      "indent": 3,
      "text": "ICE is a mechanism commonly used in Voice over IP (VoIP) applications to traverse NATs, and it uses a static prioritization formula to order the candidate pairs and perform connectivity checks, in which the most preferred address pairs are tested first, and when a sufficiently good pair is discovered, that pair is used for communications and then further connectivity tests are stopped.",
      "ja": "ICEは、一般のNATを横断するIP（VOIP）アプリケーション、ボイスオーバーに使用される機構であり、最も好ましいのアドレスのペアが最初に試験された接続性チェックを候補ペアを注文し、実行するための静的な優先順位付け公式を使用し、いつ十分良いペアが発見され、そのペアは、通信に使用され、その後、さらに接続テストが停止されています。"
    },
    {
      "indent": 3,
      "text": "When multiple paths are available for communication, the endpoint sends ICE connectivity checks across each path (candidate pair). Choosing the path with the lowest round-trip time is a reasonable approach, but retransmits can cause an otherwise good path to appear flawed. However, STUN's retransmission algorithm [RFC5389] cannot determine the round-trip time (RTT) if a STUN request packet is retransmitted because each request and retransmission packet is identical. Further, several STUN requests may be sent before the connectivity between candidate pairs are ascertained (see Section 16 of [RFC5245]). To resolve the issue of identical request and response packets in a STUN transaction, this document changes the retransmission behavior for idempotent packets. Using the mechanism described herein, a client can determine RTT as well as get a hint regarding which path direction caused packet loss. This is achieved by defining a new STUN attribute and requires compliant STUN (TURN and ICE) endpoints to count request packets.",
      "ja": "複数のパスが通信のために利用可能である場合、エンドポイントは、各パス（候補ペア）を横切ってICE接続確認を送信します。最低のラウンドトリップ時間でパスを選択することは合理的なアプローチですが、再送には欠陥が表示されるようにそれ以外の場合は良いパスを引き起こす可能性があります。各要求および再送パケットは同一であるため、STUN要求パケットが再送される場合は、STUNの再送アルゴリズム[RFC5389]は、ラウンドトリップ時間（RTT）を測定することができません。候補ペア間の接続が確認される前に、さらに、いくつかのSTUN要求は（[RFC5245]のセクション16を参照）を送信することができます。 STUNトランザクションで同じ要求と応答パケットの問題を解決するには、この文書には、冪等のパケットの再送動作を変更します。本明細書に説明されたメカニズムを使用して、クライアントはRTTを決定するだけでなく、パス方向がパケット損失を引き起こしたかに関するヒントを得ることができます。これは、新しいSTUN属性を定義することによって達成し、要求パケットをカウントするために準拠したSTUN（TURNやICE）のエンドポイントを必要としています。"
    },
    {
      "indent": 3,
      "text": "The mechanisms described in this document can be used by the controlling agent to influence the ICE candidate pair selection. How ICE will actually use this information to improve the active candidate pair selection is outside the scope of this document.",
      "ja": "本書で説明されたメカニズムは、ICE候補ペアの選択に影響を与えるために、制御エージェントが使用することができます。 ICEは、実際にアクティブ候補ペアの選択は、このドキュメントの範囲外である改善するために、この情報を使用する方法。"
    },
    {
      "indent": 0,
      "text": "2. Notational Conventions",
      "section_title": true,
      "ja": "2.表記規則"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はあります[RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 3,
      "text": "This specification uses terminology defined in ICE [RFC5245] and STUN [RFC5389].",
      "ja": "この仕様は、ICE [RFC5245]とSTUN [RFC5389]で定義された用語を使用しています。"
    },
    {
      "indent": 0,
      "text": "3. Measuring RTT and Fractional Loss",
      "section_title": true,
      "ja": "3. RTTとフラクショナル損失を測定します"
    },
    {
      "indent": 3,
      "text": "This document defines a new comprehension-optional STUN attribute TRANSACTION_TRANSMIT_COUNTER with a STUN Type 0x8025. This type is in the comprehension-optional range, which means that STUN agents can safely ignore the attribute. If ICE is in use, it will fall back to normal procedures.",
      "ja": "この文書では、STUNタイプ0x8025を持つ新しい理解・オプションのSTUN属性TRANSACTION_TRANSMIT_COUNTERを定義します。このタイプは、STUNエージェントが安全に属性を無視することができることを意味理解・オプションの範囲です。 ICEを使用している場合、それは通常の手順にフォールバックします。"
    },
    {
      "indent": 3,
      "text": "If a client wishes to measure RTT, it inserts the TRANSACTION_TRANSMIT_COUNTER attribute in a STUN request. In this attribute, the client sends the number of times the STUN request is transmitted with the same transaction ID. The server would echo back the transmission count in the response so that the client can distinguish between STUN responses coming from retransmitted requests. Hence, the endpoint can use the STUN requests and responses to determine the round-trip time (RTT). The server may also convey the number of responses it has sent for the STUN request to the client. Further, this information enables the client to get a hint regarding in which direction the packet loss occurred. In some cases, it is impossible to distinguish between packet reordering and packet loss. However, if this information is collected as network metrics from several clients over a longer time period, it will be easier to detect a pattern that can provide useful information.",
      "ja": "クライアントはRTTを測定したい場合は、それはSTUN要求でTRANSACTION_TRANSMIT_COUNTER属性を挿入します。この属性では、クライアントはSTUN要求が同じトランザクションIDで送信された回数を送信します。クライアントが再送要求から来るSTUN応答を区別できるように、サーバーが応答して送信回数をエコーバックします。したがって、エンドポイントは、ラウンドトリップ時間（RTT）を決定するためにSTUN要求と応答を使用することができます。また、サーバは、クライアントへのSTUN要求を送信した応答の数を伝えることができます。さらに、この情報は、パケットロスが発生した方向にについてのヒントを得るために、クライアントを可能にします。いくつかのケースでは、パケットの並べ替えやパケット損失を区別することは不可能です。この情報は、長い時間をかけて複数のクライアントからのネットワークのメトリックとして収集された場合は、有用な情報を提供することができ、パターンを検出することが容易になります。"
    },
    {
      "indent": 0,
      "text": "3.1. TRANSACTION_TRANSMIT_COUNTER Attribute",
      "section_title": true,
      "ja": "3.1.  TRANSACTION_TRANSMIT_COUNTER属性"
    },
    {
      "indent": 3,
      "text": "The TRANSACTION_TRANSMIT_COUNTER attribute in a STUN request takes a 32-bit value. This document updates one of the STUN message structuring rules explained in Section 6 of [RFC5389] wherein retransmission of the same request reuses the same transaction ID and is bit-wise identical to the previous request. For idempotent packets, the Req and Resp fields in the TRANSACTION_TRANSMIT_COUNTER attribute will be incremented by 1 by the client or server for every transmission with the same transaction ID. Any retransmitted STUN request MUST be bit-wise identical to the previous request except for the values in the TRANSACTION_TRANSMIT_COUNTER attribute.",
      "ja": "STUN要求にTRANSACTION_TRANSMIT_COUNTER属性は32ビットの値をとります。この文書では、同じ要求の再送が同じトランザクションIDを再利用し、以前の要求に対してビット毎に同一である構造化規則は[RFC5389]のセクション6で説明STUNメッセージのいずれかを更新します。冪等のパケットの場合、TRANSACTION_TRANSMIT_COUNTER属性で必須とRespのフィールドが同じトランザクションIDを持つすべての伝送のために、クライアントまたはサーバによって1ずつインクリメントされます。どれ再送さSTUN要求はTRANSACTION_TRANSMIT_COUNTER属性の値を除いて、前の要求と同じビット単位でなければなりません。"
    },
    {
      "indent": 3,
      "text": "The IANA-assigned STUN type for the new attribute is 0x8025.",
      "ja": "新しい属性のためのIANAによって割り当てられたSTUNタイプが0x8025です。"
    },
    {
      "indent": 3,
      "text": "The format of the value in the TRANSACTION_TRANSMIT_COUNTER attribute in the request is:",
      "ja": "リクエストでTRANSACTION_TRANSMIT_COUNTER属性の値の形式は次のとおりです。"
    },
    {
      "indent": 7,
      "text": "0                   1                   2                   3\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|        Reserved (Padding)     |    Req        |     Resp      |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 8,
      "text": "Figure 1: TRANSACTION_TRANSMIT_COUNTER Attribute in Request",
      "ja": "図1：リクエストでTRANSACTION_TRANSMIT_COUNTER属性"
    },
    {
      "indent": 3,
      "text": "The fields are described below:",
      "ja": "フィールドは以下の通りであります："
    },
    {
      "indent": 3,
      "text": "Req: Number of times the request is transmitted with the same transaction ID to the server.",
      "ja": "必須：要求がサーバーに同じトランザクションIDで送信された回数。"
    },
    {
      "indent": 3,
      "text": "Resp: Number of times a response with the same transaction ID is sent from the server. MUST be set to zero in requests and ignored by the receiver.",
      "ja": "RESP：同じトランザクションIDを持つ応答は、サーバから送信された回数。リクエストにゼロに設定し、受信機で無視しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The padding is necessary to hit the 32-bit boundary needed for STUN attributes. The padding bits are ignored, but to allow for future reuse of these bits, they MUST be set to zero.",
      "ja": "パディングはSTUN属性のために必要な32ビット境界をヒットする必要があります。パディングビットは無視されますが、これらのビットの将来の再利用を可能にするために、彼らはゼロに設定しなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.2. Usage in Requests",
      "section_title": true,
      "ja": "3.2. 要求で使用"
    },
    {
      "indent": 3,
      "text": "When sending a STUN request, the TRANSACTION_TRANSMIT_COUNTER Attribute allows a client to indicate to the server that it wants to measure RTT and get a hint about the direction of any packet loss.",
      "ja": "STUNリクエストを送信する際、TRANSACTION_TRANSMIT_COUNTER属性は、クライアントが、それがRTTを測定し、任意のパケットロスの方向についてのヒントを取得したいサーバーに指示することができます。"
    },
    {
      "indent": 3,
      "text": "The client MUST populate the Req value in the TRANSACTION_TRANSMIT_COUNTER. This value MUST reflect the number of requests that have been transmitted to the server. Therefore, the initial value for the first request sent is 1. The first retransmit will set the value to 2 and so on.",
      "ja": "クライアントはTRANSACTION_TRANSMIT_COUNTERにおける必須値を移入する必要があります。この値は、サーバーに送信された要求の数を反映しなければなりません。したがって、送信された最初の要求は最初の再送1であるため、初期値はこれに値を2に設定します。"
    },
    {
      "indent": 3,
      "text": "The Resp field in the attribute MUST be set to zero in the request.",
      "ja": "属性にRespのフィールドは、リクエストにゼロに設定しなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.3. Usage in Responses",
      "section_title": true,
      "ja": "3.3. 応答の使い方"
    },
    {
      "indent": 3,
      "text": "When a server receives a STUN request that includes a TRANSACTION_TRANSMIT_COUNTER attribute, it processes the request as per the STUN protocol [RFC5389] plus the specific rules mentioned here. The server checks the following: o If the TRANSACTION_TRANSMIT_COUNTER attribute is not recognized, ignore the attribute because its type indicates that it is comprehension-optional. This should be the existing behavior as explained in Section 7.3 of [RFC5389].",
      "ja": "サーバはTRANSACTION_TRANSMIT_COUNTER属性を含むSTUN要求を受信すると、STUNプロトコル[RFC5389]に加え、ここで述べた特定のルールに従って要求を処理します。サーバーは、次のことをチェックします。TRANSACTION_TRANSMIT_COUNTER属性が認識されない場合、その型は、それが理解-オプションであることを示しているので、属性を無視oを。 [RFC5389]のセクション7.3で説明したようにこれは、既存の行動でなければなりません。"
    },
    {
      "indent": 3,
      "text": "o The server that supports the TRANSACTION_TRANSMIT_COUNTER attribute MUST echo back the Req field in the response using a TRANSACTION_TRANSMIT_COUNTER attribute.",
      "ja": "O TRANSACTION_TRANSMIT_COUNTER属性をサポートするサーバーは、TRANSACTION_TRANSMIT_COUNTER属性を使用して応答に必須フィールドをエコーバックしなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If the server is stateless or does not want to remember the transaction ID, then it populates value 0 for the Resp field in the TRANSACTION_TRANSMIT_COUNTER attribute sent in the response. If the server is stateful, then it populates the Resp field with the number of responses it has sent for the STUN request.",
      "ja": "サーバーはステートレスであるか、トランザクションIDを覚えてしたくない場合は、O、それは応答して送信さTRANSACTION_TRANSMIT_COUNTER属性にRespのフィールドの値が0に移入されます。サーバーがステートフルである場合、それはそれはSTUN要求のために送られた応答の数とRespのフィールドに移入されます。"
    },
    {
      "indent": 3,
      "text": "A client that receives a STUN response with a TRANSACTION_TRANSMIT_COUNTER can check the values in the Req field to accurately calculate the RTT if retransmits are occurring.",
      "ja": "TRANSACTION_TRANSMIT_COUNTERでSTUN応答を受信したクライアントは、再送が発生している場合は正確にRTTを計算するために必須のフィールドの値を確認することができます。"
    },
    {
      "indent": 3,
      "text": "If the server sending the STUN response is stateless, the value of the Resp field will always be 0. If the server keeps state of the numbers of STUN requests with that same transaction ID, the value will reflect how many packets the server has seen and responded to. This gives the client a hint about in which direction loss occurred. See Section 3.4 for more details.",
      "ja": "STUN応答を送信するサーバはステートレスである場合は、サーバーが同じトランザクションIDを持つSTUN要求の数の状態を維持した場合は、Respのフィールドの値は常に0になります、値は、サーバーが見てきたどのように多くのパケット反映されますと、に答えました。これは、クライアントにする方向損失が発生に関するヒントを提供します。詳細は、3.4節を参照してください。"
    },
    {
      "indent": 0,
      "text": "3.4. Example Operation",
      "section_title": true,
      "ja": "3.4. 動作例"
    },
    {
      "indent": 3,
      "text": "An example operation, when a server is stateful, is described in Figure 2. In the first case, all the requests and responses are received correctly.",
      "ja": "サーバはステートフルである場合、最初のケースでは、図2に記載されている動作例は、すべての要求および応答が正しく受信されています。"
    },
    {
      "indent": 3,
      "text": "In the case of upstream loss, the first request is lost, but the second one is received correctly. The client, upon receiving the response, notes that while two requests were sent, only one was received by the server. The server also realizes that the value in the Req field does not match the number of received requests, therefore one request was lost. This may also occur at startup in the presence of firewalls or NATs that block unsolicited incoming traffic.",
      "ja": "上流の損失の場合には、最初の要求は失われるが、第二の一方が正しく受信されています。クライアントは、応答を受信すると、2つの要求が送信された一方で、一つだけがサーバによって受信されたことを指摘しています。また、サーバは、必須フィールドの値が受け取った要求の数、したがって、一つのリクエストが失われたと一致しないことを実現しています。また、これは迷惑着信トラフィックをブロックするファイアウォールやNATの存在下で、起動時に発生する可能性があります。"
    },
    {
      "indent": 3,
      "text": "In the case of downstream loss, the responses get lost, the client expecting multiple responses notes that, while the server responded to three requests, only one response was received.",
      "ja": "下流の損失の場合には、応答が迷子に、複数の応答を期待して、クライアントは、サーバーが3つの要求に応えながら、唯一つの応答が受信された、と指摘します。"
    },
    {
      "indent": 3,
      "text": "In the case of loss in both directions, requests and responses get lost in tandem, the server notes that one request packet was not received, while the client expecting three responses received only one, and then it notes that one request and response packet were lost.",
      "ja": "両方向の損失の場合には、要求と応答は、タンデムで迷子に、サーバーは、3つの応答を期待して、クライアントが一つだけを受けながら、1つの要求パケットは、受信されなかったことを指摘し、それが一つのリクエストとレスポンスパケットが失われたことを指摘します。"
    },
    {
      "indent": 3,
      "text": "|     Normal    |  Upstream loss | Downstream loss | Both upstream &|\n|               |                |                 | downstream loss|\n| Client Server |  Client Server |  Client  Server |  Client Server |\n|+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+|\n| 1        1,1  |  1        x    |  1         1,1  |  1        x    |\n|   1,1         |                |    x            |                |\n|               |  2        2,1  |  2         2,2  |  2        2,1  |\n|               |    2,1         |    x            |    x           |\n|               |                |  3         3,3  |  3        3,2  |\n|               |                |    3,3          |    3,2         |",
      "raw": true
    },
    {
      "indent": 9,
      "text": "Figure 2: Retransmit Operation between Client and Server",
      "ja": "図2：クライアントとサーバー間の動作を再送"
    },
    {
      "indent": 3,
      "text": "Another example is when the client sends two requests but the second request arrives at the server before the first request because of out-of-order delivery. In this case, the stateful server populates value 1 for the Resp field in the TRANSACTION_TRANSMIT_COUNTER attribute sent in response to the second request and value 2 for the Resp field in the TRANSACTION_TRANSMIT_COUNTER attribute sent in response to the first request.",
      "ja": "クライアントは、2つの要求を送信しますが、2番目の要求があるため、アウトオブオーダー配信の最初の要求の前に、サーバーに到着したとき、もう一つの例です。この場合には、ステートフルなサーバは、最初の要求に応答して送信されたTRANSACTION_TRANSMIT_COUNTER属性にRespをフィールドの第2の要求値2に応答して送信TRANSACTION_TRANSMIT_COUNTER属性にRespをフィールドに値1を移入します。"
    },
    {
      "indent": 3,
      "text": "The intention with this mechanism is not to carry out comprehensive and accurate measurements regarding in what direction loss is occurring. In some cases, it might not be able to distinguish the difference between downstream loss and packet reordering.",
      "ja": "この機構を備えた意図は何が起きているかの方向損失に関する包括的かつ正確な測定を実施することではありません。いくつかのケースでは、下流の損失やパケット並べ替えの違いを区別することができない場合があります。"
    },
    {
      "indent": 0,
      "text": "4. IANA Considerations",
      "section_title": true,
      "ja": "4. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "This document defines the TRANSACTION_TRANSMIT_COUNTER STUN attribute, described in Section 3. IANA has allocated the comprehension-optional codepoint 0x8025 for this attribute.",
      "ja": "このドキュメントは、IANAは、この属性の理解・オプションのコードポイント0x8025を割り当てた第3節で説明TRANSACTION_TRANSMIT_COUNTER STUN属性を定義します。"
    },
    {
      "indent": 0,
      "text": "5. Security Considerations",
      "section_title": true,
      "ja": "5.セキュリティについての考慮事項"
    },
    {
      "indent": 3,
      "text": "Security considerations discussed in [RFC5389] are to be taken into account. STUN requires that the 96-bit transaction ID be uniformly and randomly chosen from the interval 0 .. 2**96-1, and be cryptographically strong. This is good enough security against an off-path attacker. An on-path attacker can either inject a fake response or modify the values in the TRANSACTION_TRANSMIT_COUNTER attribute to mislead the client and server. This attack can be mitigated using STUN authentication. As the",
      "ja": "[RFC5389]で議論セキュリティの考慮事項を考慮に入れるべきです。 STUNは、96ビットのトランザクションIDが均一かつランダムに間隔0 .. 2 ** 96-1から選択され、そして暗号強いことが必要です。これは、オフパス攻撃に対して良好な十分なセキュリティです。上のパス攻撃者が偽の応答を注入したり、クライアントとサーバーを欺くためにTRANSACTION_TRANSMIT_COUNTER属性の値を変更することができます。この攻撃は、STUN認証を使用して緩和することができます。として"
    },
    {
      "indent": 3,
      "text": "TRANSACTION_TRANSMIT_COUNTER is expected to be used between peers using ICE, and ICE uses a STUN short-term credential mechanism, the risk of an on-path attack influencing the messages is minimal. If the TRANSACTION_TRANSMIT_COUNTER is used with an Allocate request, one of the following mechanisms can be used to prevent attackers from trying to impersonate a TURN server and sending a bogus TRANSACTION_TRANSMIT_COUNTER attribute in the Allocate response: 1) the STUN long-term credential mechanism, 2) the STUN Extension for Third-Party Authorization [RFC7635], or 3) a TLS or DTLS connection between the TURN client and the TURN server. However, an attacker could corrupt, remove, or delay an ICE request or response, in order to discourage that path from being used.",
      "ja": "TRANSACTION_TRANSMIT_COUNTERは、ICEを使用してピアとの間で使用されると予想され、ICEはSTUN短期資格メカニズムを使用し、メッセージに影響を与える上で、パス攻撃のリスクは最小限に抑えられています。 1）STUN長期資格機構、2：TRANSACTION_TRANSMIT_COUNTERが割り当て要求と共に使用される場合、以下の機構の1つは、TURNサーバを偽装しようと割り当て応答して偽TRANSACTION_TRANSMIT_COUNTER属性を送信攻撃を防ぐために使用することができますサードパーティの認証[RFC7635]、またはTURNクライアントとTURNサーバー間の3）TLSまたはDTLS接続用）STUN拡張。しかし、攻撃者は、壊れ取り除くことができ、または使用されてから、そのパスを阻止するために、ICE要求または応答を遅らせます。"
    },
    {
      "indent": 3,
      "text": "If not encrypted, the information sent in any STUN packet can potentially be observed passively and used for reconnaissance and later attacks.",
      "ja": "暗号化されていない場合は、任意のSTUNパケットで送信された情報は、潜在的に受動的に観察し、偵察、後で攻撃に使用することができます。"
    },
    {
      "indent": 0,
      "text": "6. References",
      "section_title": true,
      "ja": "6.参照"
    },
    {
      "indent": 0,
      "text": "6.1. Normative References",
      "section_title": true,
      "ja": "6.1. 引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <http://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<http://www.rfc-editor.org/info/ RFC2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC5245] Rosenberg, J., \"Interactive Connectivity Establishment (ICE): A Protocol for Network Address Translator (NAT) Traversal for Offer/Answer Protocols\", RFC 5245, DOI 10.17487/RFC5245, April 2010, <http://www.rfc-editor.org/info/rfc5245>.",
      "ja": "[RFC5245]ローゼンバーグ、J.、 \"インタラクティブ接続確立（ICE）：オファー/回答プロトコルのためのネットワークアドレス変換器（NAT）トラバーサルのための議定書\"、RFC 5245、DOI 10.17487 / RFC5245、2010年4月、<のhttp：// WWW .rfc-editor.org /情報/ rfc5245>。"
    },
    {
      "indent": 3,
      "text": "[RFC5389] Rosenberg, J., Mahy, R., Matthews, P., and D. Wing, \"Session Traversal Utilities for NAT (STUN)\", RFC 5389, DOI 10.17487/RFC5389, October 2008, <http://www.rfc-editor.org/info/rfc5389>.",
      "ja": "[RFC5389]ローゼンバーグ、J.、マーイ、R.、マシューズ、P.、およびD.翼、 \"NAT（STUN）のセッショントラバーサルユーティリティ\"、RFC 5389、DOI 10.17487 / RFC5389、2008年10月、<のhttp：// www.rfc-editor.org/info/rfc5389>。"
    },
    {
      "indent": 3,
      "text": "[RFC5766] Mahy, R., Matthews, P., and J. Rosenberg, \"Traversal Using Relays around NAT (TURN): Relay Extensions to Session Traversal Utilities for NAT (STUN)\", RFC 5766, DOI 10.17487/RFC5766, April 2010, <http://www.rfc-editor.org/info/rfc5766>.",
      "ja": "[RFC5766]マーイ、R.、マシューズ、P.、およびJ.ローゼンバーグ、 \"トラバーサルNAT（TURN）の周りにリレーを使用してリレーNAT（STUN）のセッショントラバーサルユーティリティへの拡張\"、RFC 5766、DOI 10.17487 / RFC5766、4月2010年、<http://www.rfc-editor.org/info/rfc5766>。"
    },
    {
      "indent": 0,
      "text": "6.2. Informative References",
      "section_title": true,
      "ja": "6.2. 参考文献"
    },
    {
      "indent": 3,
      "text": "[RFC7635] Reddy, T., Patil, P., Ravindranath, R., and J. Uberti, \"Session Traversal Utilities for NAT (STUN) Extension for Third-Party Authorization\", RFC 7635, DOI 10.17487/RFC7635, August 2015, <http://www.rfc-editor.org/info/rfc7635>.",
      "ja": "[RFC7635]レディ、T.、パティル、P.、Ravindranath、R.、およびJ. Uberti、RFC 7635 \"のセッショントラバーサルユーティリティサードパーティ認証のためのNAT（STUN）の拡張のために\"、DOI 10.17487 / RFC7635、2015年8月、<http://www.rfc-editor.org/info/rfc7635>。"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Thanks to Brandon Williams, Simon Perreault, Aijun Wang, Martin Thomson, Oleg Moskalenko, Ram Mohan Ravindranath, Spencer Dawkins, Suresh Krishnan, Ben Campbell, Mirja Kuehlewind, Lionel Morand, Kathleen Moriarty, and Alissa Cooper for their valuable input and comments.",
      "ja": "ブランドン・ウィリアムス、サイモン・ペロー、Aijun王、マーティン・トムソン、オレグMoskalenko、ラムモハンRavindranath、スペンサードーキンススレシュクリシュナン、ベン・キャンベル、Mirja Kuehlewind、ライオネル・モラン、キャスリーン・モリアーティ、およびアリッサ・クーパーのおかげで貴重な入力とコメント。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Paal-Erik Martinsen Cisco Systems, Inc. Philip Pedersens vei 22 Lysaker, Akershus 1325 Norway",
      "ja": "PAAL-エリックMartinsenシスコシステムズ、株式会社フィリップ・ペダーセンの道22リサーカー、アーケシュフース1325ノルウェー"
    },
    {
      "indent": 3,
      "text": "Email: palmarti@cisco.com",
      "ja": "メール：palmarti@cisco.com"
    },
    {
      "indent": 3,
      "text": "Tirumaleswar Reddy Cisco Systems, Inc. Cessna Business Park, Varthur Hobli Sarjapur Marathalli Outer Ring Road Bangalore, Karnataka 560103 India",
      "ja": "Tirumaleswarレディシスコシステムズ、株式会社セスナビジネスパーク、Varthur HobliサリヤプールMarathalli外環状道路カルナータカ州バンガロール560103インド"
    },
    {
      "indent": 3,
      "text": "Email: tireddy@cisco.com",
      "ja": "メール：tireddy@cisco.com"
    },
    {
      "indent": 3,
      "text": "Dan Wing",
      "ja": "そしてウィング"
    },
    {
      "indent": 3,
      "text": "Email: dwing-ietf@fuggles.com",
      "ja": "メール：dwing-ietf@fuggles.com"
    },
    {
      "indent": 3,
      "text": "Varun Singh CALLSTATS I/O Oy Runeberginkatu 4c A 4 Helsinki 00100 Finland",
      "ja": "VARUNシンCALLSTATS I / OオイRuneberginkatu 4C A 4 00100ヘルシンキフィンランド"
    },
    {
      "indent": 3,
      "text": "Email: varun@callstats.io URI: https://www.callstats.io/about",
      "ja": "メール：varun@callstats.io URI：https://www.callstats.io/about"
    }
  ]
}