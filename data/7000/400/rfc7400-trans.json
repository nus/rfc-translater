{
  "title": {
    "text": "RFC 7400 - 6LoWPAN-GHC: Generic Header Compression for IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs)",
    "ja": "RFC 7400 - 6LoWPAN-GHC：低電力無線パーソナルエリアネットワーク上のIPv6のための一般的なヘッダ圧縮（6LoWPANs）"
  },
  "number": 7400,
  "created_at": "2019-11-01 14:20:35.591792+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                        C. Bormann\nRequest for Comments: 7400                       Universitaet Bremen TZI\nCategory: Standards Track                                  November 2014\nISSN: 2070-1721",
      "raw": true
    },
    {
      "indent": 7,
      "text": "     6LoWPAN-GHC: Generic Header Compression for IPv6\nover Low-Power Wireless Personal Area Networks (6LoWPANs)",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "RFC 6282 defines header compression in 6LoWPAN packets (where \"6LoWPAN\" refers to \"IPv6 over Low-Power Wireless Personal Area Network\"). The present document specifies a simple addition that enables the compression of generic headers and header-like payloads, without a need to define a new header compression scheme for each such new header or header-like payload.",
      "ja": "RFC 6282は、6LoWPANパケットにヘッダ圧縮を定義する（ここで「6LoWPAN」は、「低消費電力無線パーソナルエリアネットワーク上のIPv6」を指します）。本文書は、そのような各新しいヘッダまたはヘッダ状のペイロードのための新たなヘッダ圧縮スキームを定義する必要なしに、ジェネリックヘッダおよびヘッダのようなペイロードの圧縮を可能にする単純加算を指定します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 5741のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc7400.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc7400で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2014 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2014 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................2\n   1.1. The Header Compression Coupling Problem ....................2\n   1.2. Compression Approach .......................................3\n   1.3. Terminology ................................................3\n   1.4. Notation ...................................................4\n2. 6LoWPAN-GHC .....................................................4\n3. Integrating 6LoWPAN-GHC into 6LoWPAN-HC .........................6\n   3.1. Compressing Payloads (UDP and ICMPv6) ......................6\n   3.2. Compressing Extension Headers ..............................6\n   3.3. Indicating GHC Capability ..................................7\n   3.4. Using the 6CIO .............................................8\n4. IANA Considerations .............................................9\n5. Security Considerations ........................................10\n6. References .....................................................11\n   6.1. Normative References ......................................11\n   6.2. Informative References ....................................12\nAppendix A. Examples ..............................................14\nAcknowledgements ..................................................24\nAuthor's Address ..................................................24",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 0,
      "text": "1.1. The Header Compression Coupling Problem",
      "section_title": true,
      "ja": "1.1。ヘッダ圧縮カップリングの問題"
    },
    {
      "indent": 3,
      "text": "[RFC6282] defines a scheme for header compression in 6LoWPAN [RFC4944] packets; in this document, we refer to that scheme as 6LoWPAN Header Compression, or 6LoWPAN-HC (where \"6LoWPAN\" refers to \"IPv6 over Low-Power Wireless Personal Area Network\"). As with most header compression schemes, a new specification is necessary for every new kind of header that needs to be compressed. In addition, [RFC6282] does not define an extensibility scheme like the Robust Header Compression (ROHC) profiles defined in ROHC [RFC3095] [RFC5795]. This leads to the difficult situation in which 6LoWPAN-HC tended to be reopened and reexamined each time a new header receives consideration (or an old header is changed and reconsidered) in the 6LoWPAN/roll/CoRE cluster of IETF working groups. Although [RFC6282] was finally completed and published, the underlying problem remains unsolved.",
      "ja": "[RFC6282]は6LoWPAN [RFC4944]パケットのヘッダ圧縮スキームを定義します。この文書では、我々は6LoWPANヘッダ圧縮、または（「6LoWPAN」は「低消費電力ワイヤレス・パーソナル・エリア・ネットワーク上のIPv6」を指します）6LoWPAN-HCとそのスキームを参照してください。ほとんどのヘッダ圧縮方式と同様に、新しい仕様は、圧縮される必要があるヘッダーのすべての新しい種類のために必要です。また、[RFC6282]はROHC [RFC3095]、[RFC5795]で定義されたロバストヘッダ圧縮（ROHC）プロファイルのような拡張方式を定義していません。これは、6LoWPAN-HCは、IETFワーキンググループの6LoWPAN /ロール/コアクラスタに新しいヘッダが対価を受け取る（または古いヘッダを変更して再検討される）たびに再オープンする傾向があり、再検査することが困難な状況につながります。 [RFC6282]は最終的に完成し、出版されたものの、根本的な問題は未解決のまま。"
    },
    {
      "indent": 3,
      "text": "The purpose of the present contribution is to plug into [RFC6282] as is, using its Next Header Compression (NHC) concept. We add a slightly less efficient, but vastly more general, form of compression for headers of any kind and even for header-like payloads such as those exhibited by routing protocols, DHCP, etc.: Generic Header Compression (GHC). The objective is an extremely simple specification that can be defined on a single page and implemented in a small number of lines of code, as opposed to a general data compression scheme such as that defined in [RFC1951].",
      "ja": "本貢献の目的であるように、その次のページヘッダ圧縮（NHC）の概念を使用して、[RFC6282]にプラグインすることです。我々は、任意の種類のヘッダに、さらにそのようななどのルーティングプロトコル、DHCP、によって示されるもののようなヘッダのようなペイロードの圧縮の、わずかに低い効率が、大幅により一般的な形式を追加：ジェネリックヘッダ圧縮（GHC）。目的は、単一のページ上で定義され、例えば、[RFC1951]で定義されるような一般的なデータ圧縮方式とは対照的に、コードの行の数が少ないで実現することができる非常に簡単な仕様です。"
    },
    {
      "indent": 0,
      "text": "1.2. Compression Approach",
      "section_title": true,
      "ja": "1.2。圧縮アプローチ"
    },
    {
      "indent": 3,
      "text": "The basic approach of GHC's compression function is to define a bytecode for LZ77-style compression [LZ77]. The bytecode is a series of simple instructions for the decompressor to reconstitute the uncompressed payload. These instructions include:",
      "ja": "GHCの圧縮機能の基本的なアプローチは、LZ77スタイルの圧縮[LZ77]のためのバイトコードを定義することです。バイトコードは、非圧縮のペイロードを再構成するデコンプレッサのための簡単な一連の命令です。これらの命令は、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "o appending bytes to the reconstituted payload that are literally given with the instruction in the compressed data",
      "ja": "文字通り圧縮データに命令して説明されている再構成されたペイロードのバイトを付加O"
    },
    {
      "indent": 3,
      "text": "o appending a given number of zero bytes to the reconstituted payload",
      "ja": "再構成されたペイロードにゼロバイトの所与の数を追加O"
    },
    {
      "indent": 3,
      "text": "o appending bytes to the reconstituted payload by copying a contiguous sequence from the payload being reconstituted (\"backreferencing\")",
      "ja": "ペイロードからの連続した配列をコピーすることによって再構成されたペイロードバイトを付加することは、再構成されたO（「バックリファレンス」）"
    },
    {
      "indent": 3,
      "text": "o an ancillary instruction for setting up parameters for the backreferencing instruction in \"decompression variables\"",
      "ja": "O「解凍変数」にバックリファレンス命令のパラメータを設定するための補助的な指示"
    },
    {
      "indent": 3,
      "text": "o a stop code (optional; see Section 3.2)",
      "ja": "ストップコードO（任意; 3.2節を参照されたいです）"
    },
    {
      "indent": 3,
      "text": "The buffer for the reconstituted payload (\"destination buffer\") is prefixed by a predefined dictionary that can be used in the backreferencing as if it were a prefix of the payload. This predefined dictionary is built from the IPv6 addresses of the packet being reconstituted, followed by a static component, the \"static dictionary\".",
      "ja": "再構成されたペイロード（「宛先バッファ」）のバッファは、それがペイロードの接頭辞であるかのようにバックリファレンスで使用することができる事前定義された辞書が付けされます。パケットのIPv6アドレスから構築され、この事前定義された辞書は静的成分、「静的辞書」に続いて、再構成されています。"
    },
    {
      "indent": 3,
      "text": "As usual, this specification defines the decompressor operation in detail but leaves the detailed operation of the compressor open to implementation. The compressor can be implemented as with a classical LZ77 compressor, or it can be a simple protocol encoder that just makes use of known compression opportunities.",
      "ja": "いつものように、本明細書では詳細にデコンプレッサの動作を定義するが、実装にオープン圧縮機の詳細な動作を残します。圧縮機は、古典的なLZ77圧縮機と同様に実施することができる、またはそれは単に公知の圧縮の機会を利用する単純なプロトコルエンコーダとすることができます。"
    },
    {
      "indent": 0,
      "text": "1.3. Terminology",
      "section_title": true,
      "ja": "1.3。用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119 [RFC2119].",
      "ja": "キーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、 \"SHALL\"、 \"SHOULD\"、 \"ないもの\"、 \"推奨\" \"ない（SHOULD NOT）\"、 \"MAY\"、 \"推奨NOT\"、および「OPTIONAL RFC 2119 [RFC2119]に記載されているように「この文書に解釈されるべきです。"
    },
    {
      "indent": 3,
      "text": "The term \"byte\" is used in its now-customary sense as a synonym for \"octet\".",
      "ja": "用語「バイト」は「オクテット」の同義語としてその今、慣習的な意味で使用されています。"
    },
    {
      "indent": 3,
      "text": "Terms from [RFC7228] are used in Section 5.",
      "ja": "[RFC7228]から用語は第5節で使用されています。"
    },
    {
      "indent": 0,
      "text": "1.4. Notation",
      "section_title": true,
      "ja": "1.4。表記法"
    },
    {
      "indent": 3,
      "text": "This specification uses a trivial notation for code bytes and the bitfields in them, the meaning of which should be mostly obvious. More formally, the meaning of the notation is as follows:",
      "ja": "この仕様は、コードバイトのための些細な表記とその中のビットフィールドを使用して、の意味はほとんど明らかにする必要があります。次のようにより正式に、表記の意味は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "Potential values for the code bytes themselves are expressed by templates that represent 8-bit most-significant-bit-first binary numbers (without any special prefix), where 0 stands for 0, 1 for 1, and variable segments in these code byte templates are indicated by sequences of the same letter, such as kkkkkkk or ssss, the length of which indicates the length of the variable segment in bits.",
      "ja": "コードのための潜在的な値自体は、これらのコードバイトテンプレートで8ビット（特別な接頭辞なし）最上位ビットの第二進数0 0スタンド、1 1、および可変セグメントを表し、テンプレートにより表現されたバイト例えばKKKKKKK又はSSSSと同じ文字の配列によって示され、の長さをビット単位可変セグメントの長さを示します。"
    },
    {
      "indent": 3,
      "text": "In the notation of values derived from the code bytes, 0b is used as a prefix for expressing binary numbers in most-significant-bit-first notation (akin to the use of 0x for most-significant-digit-first hexadecimal numbers in the C programming language). Where the above-mentioned sequences of letters are then referenced in such a binary number in the text, the intention is that the value from these bitfields in the actual code byte be inserted.",
      "ja": "Cにおける最上位桁第16進数のための0Xの使用にコードバイトから導出された値の表記で、0Bは、最上位ビット最初の表記の進数を表現するための接頭辞として使用される（同種プログラミング言語）。文字の上記配列は、テキスト内のそのような2進数で参照されている場合、その意図は、実際のコード・バイトのこれらのビットフィールドから値を挿入することです。"
    },
    {
      "indent": 3,
      "text": "Example: The code byte template",
      "ja": "例：コード・バイト・テンプレート"
    },
    {
      "indent": 6,
      "text": "101nssss",
      "ja": "101nssss"
    },
    {
      "indent": 3,
      "text": "stands for a byte that starts (most-significant-bit-first) with the bits 1, 0, and 1, and continues with five variable bits, the first of which is referenced as \"n\" and the next four of which are referenced as \"ssss\". Based on this code byte template, a reference to",
      "ja": "（最上位ビット優先）ビット1,0、及び1で始まり、バイトを表し、参照される「N」との次の4として参照される第一れた5つの可変ビットを続行\"SSSS\" など。このコードバイトのテンプレートに基づいて、参照"
    },
    {
      "indent": 6,
      "text": "0b0ssss000",
      "ja": "0b0ssss000"
    },
    {
      "indent": 3,
      "text": "means a binary number composed from a zero bit; the four bits that are in the \"ssss\" field (for 101nssss, the four least significant bits) in the actual byte encountered, kept in the same order; and three more zero bits.",
      "ja": "ゼロ・ビットからなる2進数を意味します。遭遇した実際のバイトに「SSSS」フィールドにある4ビット（101nssssために、4つの最下位ビット）は、同じ順序に保ちます。そして3つのゼロビット。"
    },
    {
      "indent": 0,
      "text": "2. 6LoWPAN-GHC",
      "section_title": true,
      "ja": "2. 6LoWPAN-について"
    },
    {
      "indent": 3,
      "text": "The format of a GHC-compressed header or payload is a simple bytecode. A compressed header consists of a sequence of pieces, each of which begins with a code byte, which may be followed by zero or more bytes as its argument. Some code bytes cause bytes to be laid out in the destination buffer, and some simply modify some decompression variables.",
      "ja": "GHC圧縮ヘッダ又はペイロードの形式は、単純なバイトコードです。圧縮されたヘッダは、その引数としてゼロ以上のバイトが続くことができるコードのバイトで始まり、その各々の部分の配列、から成ります。いくつかのコードのバイトは、バイトは宛先バッファに配置させ、そしていくつかは、単にいくつかの解凍変数を変更します。"
    },
    {
      "indent": 3,
      "text": "At the start of decompressing a header or payload within an L2 packet (= fragment), the decompression variables \"sa\" and \"na\" are initialized as zero.",
      "ja": "ヘッダまたはペイロードL2パケット内（=断片）伸張、伸張変数「SA」の開始時にゼロに初期化されている「NA」。"
    },
    {
      "indent": 3,
      "text": "The code bytes are defined as follows (Table 1):",
      "ja": "（表1）を次のようにコードバイトが定義されています。"
    },
    {
      "indent": 3,
      "text": "+----------+---------------------------------------------+----------+\n| code     | Action                                      | Argument |\n| byte     |                                             |          |\n+----------+---------------------------------------------+----------+\n| 0kkkkkkk | Append k = 0b0kkkkkkk bytes of data in the  | k bytes  |\n|          | bytecode argument (k < 96)                  | of data  |\n|          |                                             |          |\n| 1000nnnn | Append 0b0000nnnn+2 bytes of zeroes         |          |\n|          |                                             |          |\n| 10010000 | stop code (end of compressed data; see      |          |\n|          | Section 3.2)                                |          |\n|          |                                             |          |\n| 101nssss | Set up extended arguments for a             |          |\n|          | backreference: sa += 0b0ssss000,            |          |\n|          | na += 0b0000n000                            |          |\n|          |                                             |          |\n| 11nnnkkk | Backreference: n = na+0b00000nnn+2;         |          |\n|          | s = 0b00000kkk+sa+n; append n bytes from    |          |\n|          | previously output bytes, starting s bytes   |          |\n|          | to the left of the current output pointer;  |          |\n|          | set sa = 0, na = 0                          |          |\n+----------+---------------------------------------------+----------+",
      "raw": true
    },
    {
      "indent": 13,
      "text": "Table 1: Bytecodes for Generic Header Compression",
      "ja": "表1：一般ヘッダー圧縮のためのバイトコード"
    },
    {
      "indent": 3,
      "text": "Note that the following bit combinations are reserved at this time:",
      "ja": "以下のビットの組み合わせは、この時点で予約されていることに注意してください："
    },
    {
      "indent": 3,
      "text": "o 011xxxxx",
      "ja": "O 011xxxxx"
    },
    {
      "indent": 3,
      "text": "o 1001nnnn (where 0b0000nnnn > 0)",
      "ja": "O 1001nnnn（ここ0b0000nnnn> 0）"
    },
    {
      "indent": 3,
      "text": "For the purposes of the backreferences, the expansion buffer is initialized with a predefined dictionary, at the end of which the reconstituted payload begins. This dictionary is composed of the source and destination IPv6 addresses of the packet being reconstituted, followed by a 16-byte static dictionary (Figure 1). These 48 dictionary bytes are therefore available for backreferencing but not copied into the final reconstituted payload.",
      "ja": "後方参照の目的のために、拡張バッファが再構成されたペイロードが開始するの終わりに、事前定義された辞書を用いて初期化されます。この辞書は、16バイトの静的辞書（図1）、続いて再構成されているパケットのソースおよび宛先IPv6アドレス、から構成されています。これら48の辞書バイトは、したがってバックリファレンスのために利用できるが、最終的な再構成されたペイロードにコピーされません。"
    },
    {
      "indent": 13,
      "text": "16 fe fd 17 fe fd 00 01 00 00 00 00 00 01 00 00",
      "ja": "16決議17決議00 01 00 00 00 00 00 01 00 00"
    },
    {
      "indent": 11,
      "text": "Figure 1: The 16 Bytes of Static Dictionary (in Hex)",
      "ja": "図1：（Hex中）静的辞書の16のバイト"
    },
    {
      "indent": 0,
      "text": "3. Integrating 6LoWPAN-GHC into 6LoWPAN-HC",
      "section_title": true,
      "ja": "3. 6LoWPAN-HCに6LoWPAN-GHCの統合"
    },
    {
      "indent": 3,
      "text": "6LoWPAN-GHC plugs in as an NHC format for 6LoWPAN-HC [RFC6282].",
      "ja": "6LoWPAN-GHCは、6LoWPAN-HC [RFC6282]のためNHC形式としてプラグ。"
    },
    {
      "indent": 0,
      "text": "3.1. Compressing Payloads (UDP and ICMPv6)",
      "section_title": true,
      "ja": "3.1。圧縮ペイロード（UDPおよびICMPv6の）"
    },
    {
      "indent": 3,
      "text": "By definition, GHC is generic and can be applied to different kinds of packets. Many of the examples given in Appendix A are for ICMPv6 packets; a single NHC value suffices to define an NHC format for ICMPv6 based on GHC (see below).",
      "ja": "定義によると、GHCは、汎用で、パケットの種類に適用することができます。付録Aで与えられた例の多くは、ICMPv6のパケットのためのものです。単一NHC値はGHC（下記参照）に基づいて、ICMPv6のためNHCフォーマットを定義すればよいです。"
    },
    {
      "indent": 3,
      "text": "In addition, it is useful to include an NHC format for UDP, as many header-like payloads (e.g., DHCPv6, Datagram Transport Layer Security (DTLS)) are carried in UDP. [RFC6282] already defines an NHC format for UDP (11110CPP). GHC uses an analogous NHC byte formatted as shown in Figure 2. The difference to the existing UDP NHC specification is that for 11010CPP NHC bytes, the UDP payload is not supplied literally but compressed by 6LoWPAN-GHC.",
      "ja": "また、UDP用NHC形式を含めることが有用である、などの多くのヘッダ状のペイロード（例えば、DHCPv6の、データグラムトランスポート層セキュリティ（DTLS））はUDPで運ばれます。 [RFC6282]は既にUDP（11110CPP）用NHCフォーマットを定義します。 GHCは、既存のUDP NHC仕様差が11010CPP NHCバイトのために、UDPペイロードが文字通りが、6LoWPAN、GHCで圧縮供給されないことである。図2に示すようにフォーマットされた類似NHCバイトを使用します。"
    },
    {
      "indent": 21,
      "text": "  0   1   2   3   4   5   6   7\n+---+---+---+---+---+---+---+---+\n| 1 | 1 | 0 | 1 | 0 | C |   P   |\n+---+---+---+---+---+---+---+---+",
      "raw": true
    },
    {
      "indent": 17,
      "text": "Figure 2: NHC Byte for UDP GHC (11010CPP)",
      "ja": "図2：UDP GHCためNHCバイト（11010CPP）"
    },
    {
      "indent": 3,
      "text": "To stay in the same general numbering space, we use 11011111 as the NHC byte for ICMPv6 GHC (Figure 3).",
      "ja": "同じ一般的なナンバリングスペースに滞在するために、我々は、ICMPv6のGHCのためNHCバイト（図3）として11011111を使用します。"
    },
    {
      "indent": 21,
      "text": "  0   1   2   3   4   5   6   7\n+---+---+---+---+---+---+---+---+\n| 1 | 1 | 0 | 1 | 1 | 1 | 1 | 1 |\n+---+---+---+---+---+---+---+---+",
      "raw": true
    },
    {
      "indent": 15,
      "text": "Figure 3: NHC Byte for ICMPv6 GHC (11011111)",
      "ja": "図3：ICMPv6のGHCためNHCバイト（11011111）"
    },
    {
      "indent": 0,
      "text": "3.2. Compressing Extension Headers",
      "section_title": true,
      "ja": "3.2。拡張ヘッダーの圧縮"
    },
    {
      "indent": 3,
      "text": "Compression of specific extension headers is added in a similar way (Figure 4) (however, probably only Extension Header ID (EID) 0 to 3 [RFC6282] need to be assigned). As there is no easy way to extract the Length field from the GHC-encoded header before decoding, this would make detecting the end of the extension header somewhat complex. The easiest (and most efficient) approach is to completely elide the Length field (in the same way NHC already elides the Next Header field in certain cases) and reconstruct it only on decompression. To serve as a terminator for the extension header, the bytecode 0b10010000 has been assigned as a stop code. Note that the stop code is only needed for extension headers, not for the final payloads discussed in the previous subsection, the decompression of which is automatically stopped by the end of the packet.",
      "ja": "特定の拡張ヘッダの圧縮は（図4）（3但し、おそらく唯一の拡張ヘッダID（EID）0 [RFC6282]が割り当てられる必要がある）と同様の方法で添加されます。復号前GHCエンコードヘッダの長さフィールドを抽出する簡単な方法がないので、これは多少複雑拡張ヘッダの終わりを検出することになるだろう。最も簡単な（そして最も効率的な）アプローチ完全に（NHCが既にある場合には次ヘッダフィールドをelides同様に）長さフィールドをElideの唯一減圧でそれを再構築することです。拡張ヘッダのためのターミネーターとして機能するように、バイトコード0b10010000は、ストップコードとして割り当てられています。停止コードのみ拡張ヘッダのためではなく、前のサブセクションで説明した最終的なペイロードのために必要とされる、の減圧を自動的パケットの終了により停止されることに留意されたいです。"
    },
    {
      "indent": 21,
      "text": "  0   1   2   3   4   5   6   7\n+---+---+---+---+---+---+---+---+\n| 1 | 0 | 1 | 1 |    EID    |NH |\n+---+---+---+---+---+---+---+---+",
      "raw": true
    },
    {
      "indent": 16,
      "text": "Figure 4: NHC Byte for Extension Header GHC",
      "ja": "図4：拡張ヘッダGHCのためNHCバイト"
    },
    {
      "indent": 0,
      "text": "3.3. Indicating GHC Capability",
      "section_title": true,
      "ja": "3.3。示すGHC能力"
    },
    {
      "indent": 3,
      "text": "The 6LoWPAN baseline includes just [RFC4944], [RFC6282], and [RFC6775] (see [Roadmap-6LoWPAN]). To enable the use of GHC towards a neighbor, a 6LoWPAN node needs to know that the neighbor implements it. While this can also simply be administratively required, a transition strategy as well as a way to support mixed networks is required.",
      "ja": "6LoWPANベースラインは（[ロードマップ-6LoWPAN]参照）だけ[RFC4944]、[RFC6282]及び[RFC6775]を含みます。隣人へのGHCの使用を有効にするには、6LoWPANノードは、隣人が、それを実装していることを知っている必要があります。これは、単に、管理に必要なことができるが、移行戦略、ならびに混合ネットワークをサポートする方法が必要です。"
    },
    {
      "indent": 3,
      "text": "One way to know that a neighbor does implement GHC is receiving a packet from that neighbor with GHC in it (\"implicit capability detection\"). However, there needs to be a way to bootstrap this, as nobody would ever start sending packets with GHC otherwise.",
      "ja": "隣人がGHCを実装していることを知るための一つの方法は、その中にGHC（「暗黙の機能の検出」）とその隣人からパケットを受信して​​います。誰もそうGHCでのパケットの送信を開始しないだろうしかし、これをブートストラップする方法が必要です。"
    },
    {
      "indent": 3,
      "text": "To minimize the impact on [RFC6775], we define a Neighbor Discovery (ND) option called the 6LoWPAN Capability Indication Option (6CIO), as illustrated in Figure 5. (For the fields marked by an underscore in Figure 5, see Section 3.4.)",
      "ja": "[RFC6775]への影響を最小限に抑えるために、我々は、図5に示すように、近隣探索（ND）オプションは、6LoWPAN機能表示オプション（6CIO）と呼ばれる定義（図5中下線でマークされたフィールドについては、セクション3.4を参照してください。 ）"
    },
    {
      "indent": 5,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Type      |   Length = 1  |_____________________________|G|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|_______________________________________________________________|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 11,
      "text": "Figure 5: 6LoWPAN Capability Indication Option (6CIO)",
      "ja": "図5：6LoWPAN能力表示オプション（6CIO）"
    },
    {
      "indent": 3,
      "text": "The G bit indicates whether the node sending the option is GHC capable.",
      "ja": "Gビットは、オプションを送信するノードは、GHCが可能であるかどうかを示します。"
    },
    {
      "indent": 3,
      "text": "Once a node receives either an explicit or implicit indication of GHC capability from another node, it may send GHC-compressed packets to that node. Where that capability has not been recently confirmed, similar to the way Packetization Layer Path MTU Discovery (PLPMTUD)",
      "ja": "ノードが他のノードからGHC能力の明示的または暗黙の指示のいずれかを受信すると、そのノードにGHC圧縮パケットを送信することができます。その機能は最近、道パケット化レイヤのパスMTUディスカバリ（PLPMTUD）に似て確認されていない場合は"
    },
    {
      "indent": 3,
      "text": "[RFC4821] finds out about changes in the network, a node SHOULD make use of Neighbor Unreachability Detection (NUD) failures to switch back to basic 6LoWPAN header compression [RFC6282].",
      "ja": "[RFC4821]は、ネットワーク内の変更について見つけ出し、ノードが基本6LoWPANヘッダー圧縮[RFC6282]に戻すために近隣到達不能検出（NUD）の失敗を利用するべきです。"
    },
    {
      "indent": 0,
      "text": "3.4. Using the 6CIO",
      "section_title": true,
      "ja": "3.4。 6CIOを使用して"
    },
    {
      "indent": 3,
      "text": "The 6CIO will typically only be sent in 6LoWPAN-ND Router Solicitation (RS) packets (which cannot themselves be GHC compressed unless the host desires to limit itself to talking to GHC-capable routers). The resulting 6LoWPAN-ND Router Advertisement (RA) can then already make use of GHC and thus indicate GHC capability implicitly, which in turn allows both nodes to use GHC in the 6LoWPAN-ND Neighbor Solicitation / Neighbor Advertisement (NS/NA) exchange.",
      "ja": "6CIOは、典型的にのみ6LoWPAN-NDルータ要請（RS）に送信されるパケット（ホストはGHC対応ルータに話に自分自身を制限することを希望しない限り、それ自体がGHCことができない圧縮されました）。得られた6LoWPAN-NDルータ広告（RA）を既にGHCを利用するので、今度は両方のノードは、6LoWPAN-ND近隣要請/近隣広告（NS / NA）交換でGHCを使用することを可能にする、暗黙的にGHC能力を示すことができます。"
    },
    {
      "indent": 3,
      "text": "The 6CIO can also be used for future options that need to be negotiated between 6LoWPAN peers; an IANA registry is used to assign the flags. Bits marked by underscores in Figure 5 are unassigned and available for future assignment. They MUST be sent as zero and MUST be ignored on reception until assigned by IANA. Length values larger than 1 MUST be accepted by implementations in order to enable future extensions; the additional bits in the option are then deemed unassigned in the same way. For the purposes of the IANA registry, the bits are numbered in most-significant-bit-first order from the 16th bit of the option onward: the 16th bit is flag number 0, the 31st bit (the G bit) is flag number 15, up to the 63rd bit for flag number 47. (Additional bits may also be used by a follow-on version of this document if some bit combinations that have been left unassigned here are then used in an upward-compatible manner.)",
      "ja": "6CIOも6LoWPANピア間で交渉する必要があり、将来の選択肢のために使用することができます。 IANAレジストリはフラグを割り当てるために使用されます。図5のアンダースコアでマークされたビットが割り当てられていないと、将来の割り当てのために利用可能です。彼らはゼロとして送らなければならなくて、IANAによって割り当てられるまで、受信時に無視しなければなりません。長さの値は1より大きく、将来の拡張を可能にするために実装によって受け入れなければなりません。オプションで追加のビットは、同じように割り当てられていないとみなされます。 IANAレジストリの目的のために、ビットは以降オプションの第16ビットから最上位ビット優先順に番号付けされている：16ビットフラグ番号0であり、31ビット（Gビット）フラグ番号15であります、フラグ番号47のために63ビットまで（ここで、割り当てられていない残されたいくつかのビットの組み合わせは、次に上位互換の方法で使用される場合は、追加のビットは、この文書の後続バージョンでも使用されてもよいです。）"
    },
    {
      "indent": 3,
      "text": "Flag numbers 0 to 7 are reserved for experimental use. They MUST NOT be used for actual deployments.",
      "ja": "フラグ番号0〜7は、実験的な使用のために予約されています。彼らは、実際の展開に使用してはいけません。"
    },
    {
      "indent": 3,
      "text": "Where the use of this option by other specifications or for experimental use is envisioned, the following items have to be kept in mind:",
      "ja": "その他の仕様によって、または実験的な使用のために、このオプションの使用が想定される場合は、以下の項目を念頭に置いておく必要があります："
    },
    {
      "indent": 3,
      "text": "o The option can be used in any ND packet.",
      "ja": "Oオプションは、任意のNDパケットに使用することができます。"
    },
    {
      "indent": 3,
      "text": "o Specific bits are set in the option to indicate that a capability is present in the sender. (There may be other ways to infer this information, as is the case in this specification.) Bit combinations may be used as desired. The absence of the capability _indication_ is signaled by setting these bits to zero; this does not necessarily mean that the capability is absent.",
      "ja": "O特定のビットは、能力が、送信者に存在することを示すために、オプションで設定されています。 （本明細書の場合のように、この情報を推定する他の方法が存在してもよい。）、所望のようにビットの組み合わせを使用することができます。ゼロにこれらのビットを設定することによりシグナリングされる_indication_能力の欠如。これは必ずしも機能が存在しないことを意味するものではありません。"
    },
    {
      "indent": 3,
      "text": "o The intention is not to modify the semantics of the specific ND packet carrying the option but to provide the general capability indication described above.",
      "ja": "O意図は、上記の一般的な機能の指標を提供するが、オプションを運ぶ特定のNDパケットのセマンティクスを変更していません。"
    },
    {
      "indent": 3,
      "text": "o Specifications have to be designed such that receivers that do not receive or do not process such a capability indication can still interoperate (presumably without exploiting the indicated capability).",
      "ja": "O仕様は、受信しないか、そのような能力の表示を処理しない受信機は依然として（表示能力を利用することなく、おそらく）相互運用できるように設計されなければなりません。"
    },
    {
      "indent": 3,
      "text": "o The option is meant to be used sparsely, i.e., once a sender has reason to believe the capability indication has been received, there is no longer a need to continue sending it.",
      "ja": "オプションは、まばらに使用されることを意図してoを送信者が受信されている機能の表示を信じる理由を持っていたら、すなわち、それを送信を継続する必要がなくなりました。"
    },
    {
      "indent": 0,
      "text": "4. IANA Considerations",
      "section_title": true,
      "ja": "4. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "IANA has added the assignments listed in Figure 6 in the \"LOWPAN_NHC Header Type\" registry (under \"IPv6 Low Power Personal Area Network Parameters\").",
      "ja": "IANAは「LOWPAN_NHCヘッダタイプ」レジストリ（下の「IPv6の低電力パーソナル・エリア・ネットワークパラメータ」）に、図6に記載されている割り当てを追加しました。"
    },
    {
      "indent": 11,
      "text": "10110EEN: Extension header GHC              [RFC7400]\n11010CPP: UDP GHC                           [RFC7400]\n11011111: ICMPv6 GHC                        [RFC7400]",
      "raw": true
    },
    {
      "indent": 16,
      "text": "Figure 6: IANA Assignments for the NHC Byte",
      "ja": "図6：NHC ByteのIANAの割り当て"
    },
    {
      "indent": 3,
      "text": "IANA has allocated ND option number 36 for the \"6LoWPAN Capability Indication Option (6CIO)\" ND option format in the \"IPv6 Neighbor Discovery Option Formats\" registry [RFC4861].",
      "ja": "IANAは、「IPv6の近隣探索オプション形式」レジストリ[RFC4861]に「6LoWPAN機能表示オプション（6CIO）」NDオプションフォーマットのNDオプション番号36を割り当てました。"
    },
    {
      "indent": 3,
      "text": "IANA has created a subregistry for \"6LoWPAN capability Bits\" under the \"Internet Control Message Protocol version 6 (ICMPv6) Parameters\" registry. The bits are assigned by giving their numbers as small, non-negative integers as defined in Section 3.4, in the range 0-47. The policy is \"IETF Review\" or \"IESG Approval\" [RFC5226]. The initial content of the registry is as shown in Figure 7:",
      "ja": "IANAは、「インターネット制御メッセージプロトコルバージョン6（ICMPv6の）パラメータ」レジストリの下に「6LoWPAN機能ビット」の副登録を作成しました。ビットは、セクション3.4で定義されるように範囲0から47で、小、非負整数としてその番号を与えることによって割り当てられます。ポリシーは、「IETFレビュー」または「IESG承認」[RFC5226]です。図7に示すように、レジストリの初期の内容は次のとおりです。"
    },
    {
      "indent": 10,
      "text": "  0-7: Reserved for Experimental Use         [RFC7400]\n 8-14: Unassigned\n   15: GHC capable bit (G bit)               [RFC7400]\n16-47: Unassigned",
      "raw": true
    },
    {
      "indent": 8,
      "text": "Figure 7: IANA Assignments for the 6LoWPAN Capability Bits",
      "ja": "図7：6LoWPAN能力ビットのためのIANA割り当て"
    },
    {
      "indent": 0,
      "text": "5. Security Considerations",
      "section_title": true,
      "ja": "5.セキュリティについての考慮事項"
    },
    {
      "indent": 3,
      "text": "The security considerations of [RFC4944] and [RFC6282] apply. As usual in protocols with packet parsing/construction, care must be taken in implementations to avoid buffer overflows and, in particular (with respect to the backreferencing), out-of-area references during decompression.",
      "ja": "[RFC4944]と[RFC6282]のセキュリティ上の考慮事項が適用されます。パケット解析/構造を持つプロトコルでいつものように、注意が特に減圧中、外のエリア参照（バックリファレンスに関して）、バッファオーバーフローを回避するために実装で採取しなければなりません。"
    },
    {
      "indent": 3,
      "text": "One additional consideration is that an attacker may send a forged packet that makes a second node believe a third victim node is GHC capable. If it is not, this may prevent packets sent by the second node from reaching the third node (at least until robustness features such as those discussed in Section 3.3 kick in).",
      "ja": "一つの追加の考慮事項は、攻撃者が第2のノードが第三の犠牲者ノードは、GHCが可能であると考えています偽造パケットを送信することです。そうでない場合、これは第3のノードに到達する（少なくともそのような節3.3キックで説明したものとロバスト性機能まで）第2のノードによって送信されたパケットを防ぐことができます。"
    },
    {
      "indent": 3,
      "text": "No mitigation is proposed (or known) for this attack, except that a victim node that does implement GHC is not vulnerable. However, with unsecured ND, a number of attacks with similar outcomes are already possible, so there is little incentive to make use of this additional attack. With secured ND, the 6CIO is also secured; nodes relying on secured ND therefore should use the 6CIO bidirectionally (and limit the implicit capability detection to secured ND packets carrying GHC) instead of basing their neighbor capability assumptions on receiving any kind of unprotected packet.",
      "ja": "いかなる緩和はGHCを実装し、被害者のノードが脆弱ではないことを除いて、この攻撃のために提案しない（または知られます）。しかし、無担保NDと、同様の成果と攻撃の数は既に可能であるため、この追加的な攻撃を利用するインセンティブがあります。セキュリティで保護されたNDと、6CIOも確保されています。したがって、保護されたNDに依存するノードが双方向6CIOを使用（および保護されたNDのGHCを運ぶパケットに暗黙能力検出限界）保護されていないパケットの任意の種類を受信する代わりに、それらの隣接能力仮定を基づかしなければなりません。"
    },
    {
      "indent": 3,
      "text": "As with any LZ77 scheme, decompression bombs (compressed packets crafted to expand so much that the decompressor is overloaded) are a problem. An attacker cannot send a GHC decompressor into a tight loop for too long, because the MTU will be reached quickly. Some amplification of an attack from inside the compressed link is possible, though. Using a constrained node in a constrained network as a DoS attack source is usually not very useful, though, except maybe against other nodes in that constrained network. The worst case for an attack to the outside is a not-so-constrained device using a (typically not-so-constrained) edge router to attack by forwarding out of its Ethernet interface. The worst-case amplification of GHC is 17, so an MTU-size packet can be generated from a 6LoWPAN packet of 76 bytes. The 6LoWPAN network is still constrained, so the amplification at the edge router turns an entire 250 kbit/s 802.15.4 network (assuming a theoretical upper bound of 225 kbit/s throughput to a single-hop adjacent node) into a 3.8 Mbit/s attacker.",
      "ja": "任意LZ77方式と同様に、減圧爆弾（減圧装置が過負荷であることをあまり拡大して細工された圧縮されたパケット）が問題です。 MTUはすぐに達することになるので、攻撃者は、あまりにも長い間タイトループにGHCデコンプレッサを送信することはできません。圧縮されたリンクの内側からの攻撃のいくつかの増幅は、しかし、可能です。 DoS攻撃元として制約ネットワークに拘束ノードを使用すると、多分その制約されたネットワーク内の他のノードに対して除き、しかし、通常は非常に有用ではありません。外部への攻撃のための最悪の場合には、そのイーサネットインタフェースから転送することによって攻撃する（典型的にはそれほど制約されていない）エッジルータを使用しない、いわゆる拘束装置です。 GHCの最悪の場合の増幅は17であるので、MTUサイズのパケットは、76バイトの6LoWPANパケットから生成することができます。エッジルータでの増幅は3.8に（単一ホップ隣接ノードに225キロビット/秒のスループットの理論的な上限を仮定して）全体の250キロビット/秒802.15.4ネットワークを回すよう6LoWPANネットワークは依然として、制約されるビット/ sの攻撃者。"
    },
    {
      "indent": 3,
      "text": "The amplification may be more important inside the 6LoWPAN, if there is a way to obtain reflection (otherwise, the packet is likely to simply stay compressed on the way and do little damage), e.g., by pinging a node using a decompression bomb, somehow keeping that node from re-compressing the ping response (which would probably require something more complex than simple runs of zeroes, so the worst-case amplification is likely closer to 9). Or, if there are nodes that do not support GHC, those can be attacked via a router that is then forced to decompress.",
      "ja": "反射を取得する方法があるかどう増幅は何とか、解凍爆弾を使用してノードをpingすることで、例えば、（そうでない場合、パケットは単純な方法で圧縮滞在する可能性があると少しダメージを与える）、6LoWPAN内側より重要であるかもしれません（おそらくゼロの簡単な実行よりも複雑なものを必要とするので、最悪の場合の増幅はおそらく9に近いでしょう）を再圧縮するping応答からそのノードを維持します。 GHCをサポートしていないノードがある場合は、それらはその後解凍することを余儀なくされたルータを経由して攻撃することができます。"
    },
    {
      "indent": 3,
      "text": "All these attacks are mitigated by some form of network access control.",
      "ja": "すべてのこれらの攻撃は、ネットワークアクセス制御のいくつかの形式によって軽減されています。"
    },
    {
      "indent": 3,
      "text": "In a 6LoWPAN stack, sensitive information will normally be protected by transport- or application-layer (or even IP-layer) security, which are all above the adaptation layer, leaving no sensitive information to compress at the GHC level. However, a 6LoWPAN deployment that entirely depends on Media Access Control (MAC) layer security may be vulnerable to attacks that exploit redundancy information disclosed by compression to recover information about secret values. The attacker would need to be in radio range to observe the compressed packets. Since compression is stateless, the attacker would need to entice the party sending the secret value to also send some value controlled (or at least usefully varying and knowable) by the attacker in (what becomes the first adaptation-layer fragment of) the same packet. This attack is fully mitigated by not exposing secret values to the adaptation layer or by not using GHC in deployments where this is done.",
      "ja": "6LoWPANスタックでは、機密情報は、通常、GHCレベルで圧縮するために機密情報を残さない、すべてのアダプテーション層の上方にあるtransport-またはアプリケーション層（あるいはIP層）セキュリティによって保護されるであろう。ただし、完全なセキュリティレイヤメディアアクセス制御（MAC）に依存6LoWPANの展開は秘密値に関する情報を回復するために圧縮によって開示された冗長情報を悪用した攻撃に対して脆弱である可能性があります。攻撃者は、圧縮されたパケットを観察するために無線範囲にあることが必要となります。圧縮はステートレスであるため、攻撃者は、（最初​​のアダプテーション層の断片となるもの）で攻撃者（または少なくとも有用変化と知り得る）制御されたいくつかの値を送信するために秘密の値を送信するパーティを誘惑するために同一のパケットを必要とします。この攻撃は、完全に適合層に秘密の値を暴露しないことにより、またはこれが行われる展開でGHCを使用していないことによって軽減されます。"
    },
    {
      "indent": 0,
      "text": "6. References",
      "section_title": true,
      "ja": "6.参照"
    },
    {
      "indent": 0,
      "text": "6.1. Normative References",
      "section_title": true,
      "ja": "6.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997, <http://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月、<http://www.rfc-editor.org/info/rfc2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC4861] Narten, T., Nordmark, E., Simpson, W., and H. Soliman, \"Neighbor Discovery for IP version 6 (IPv6)\", RFC 4861, September 2007, <http://www.rfc-editor.org/info/rfc4861>.",
      "ja": "[RFC4861] Narten氏、T.、Nordmarkと、E.、シンプソン、W.、およびH.ソリマン、 \"IPバージョン6（IPv6）の近隣探索\"、RFC 4861、2007年9月、<のhttp：//www.rfc- editor.org/info/rfc4861>。"
    },
    {
      "indent": 3,
      "text": "[RFC4944] Montenegro, G., Kushalnagar, N., Hui, J., and D. Culler, \"Transmission of IPv6 Packets over IEEE 802.15.4 Networks\", RFC 4944, September 2007, <http://www.rfc-editor.org/info/rfc4944>.",
      "ja": "[RFC4944]モンテネグロ、G.、クシャルナガル、N.、ホイ、J.、およびD. Culler、 \"IEEE 802.15.4ネットワークの上のIPv6パケットのトランスミッション\"、RFC 4944、2007年9月、<のhttp：//www.rfc -editor.org/info/rfc4944>。"
    },
    {
      "indent": 3,
      "text": "[RFC5226] Narten, T. and H. Alvestrand, \"Guidelines for Writing an IANA Considerations Section in RFCs\", BCP 26, RFC 5226, May 2008, <http://www.rfc-editor.org/info/rfc5226>.",
      "ja": "[RFC5226] Narten氏、T.とH. Alvestrand、 \"RFCsにIANA問題部に書くためのガイドライン\"、BCP 26、RFC 5226、2008年5月、<http://www.rfc-editor.org/info/rfc5226> 。"
    },
    {
      "indent": 3,
      "text": "[RFC6282] Hui, J. and P. Thubert, \"Compression Format for IPv6 Datagrams over IEEE 802.15.4-Based Networks\", RFC 6282, September 2011, <http://www.rfc-editor.org/info/rfc6282>.",
      "ja": "[RFC6282]ホイ、J.とP. Thubert、 \"IEEE 802.15.4ベースのネットワーク上のIPv6データグラムのための圧縮フォーマット\"、RFC 6282、2011年9月、<http://www.rfc-editor.org/info/rfc6282 >。"
    },
    {
      "indent": 3,
      "text": "[RFC6775] Shelby, Z., Chakrabarti, S., Nordmark, E., and C. Bormann, \"Neighbor Discovery Optimization for IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs)\", RFC 6775, November 2012, <http://www.rfc-editor.org/info/rfc6775>.",
      "ja": "[RFC6775]シェルビー、Z.、Chakrabarti、S.、Nordmarkと、E.、およびC.ボルマン、 \"低消費電力無線パーソナルエリアネットワーク上のIPv6（6LoWPANs）のための近隣探索の最適化\"、RFC 6775、2012年11月、<HTTP ：//www.rfc-editor.org/info/rfc6775>。"
    },
    {
      "indent": 0,
      "text": "6.2. Informative References",
      "section_title": true,
      "ja": "6.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[ICMPv6-ND] O'Flynn, C., \"ICMPv6/ND Compression for 6LoWPAN Networks\", Work in Progress, draft-oflynn-6lowpan-icmphc-00, July 2010.",
      "ja": "[ICMPv6の-ND] O'Flynn、C.、 \"6LoWPANネットワークのためのICMPv6 / ND圧縮\" が進行中で働いて、ドラフトoflynn-6lowpan-icmphc-00、2010年7月。"
    },
    {
      "indent": 3,
      "text": "[LZ77] Ziv, J. and A. Lempel, \"A Universal Algorithm for Sequential Data Compression\", IEEE Transactions on Information Theory, Vol. 23, No. 3, pp. 337-343, May 1977.",
      "ja": "[LZ77]ジブ、J.およびA.レンペル、「シーケンシャルデータ圧縮のためのユニバーサル・アルゴリズム」、情報理論、巻上のIEEEトランザクション。 23、第3号、頁337-343、1977年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC1951] Deutsch, P., \"DEFLATE Compressed Data Format Specification version 1.3\", RFC 1951, May 1996, <http://www.rfc-editor.org/info/rfc1951>.",
      "ja": "[RFC1951]ドイツ、P.、 \"DEFLATE圧縮データフォーマット仕様バージョン1.3\"、RFC 1951、1996年5月、<http://www.rfc-editor.org/info/rfc1951>。"
    },
    {
      "indent": 3,
      "text": "[RFC3095] Bormann, C., Burmeister, C., Degermark, M., Fukushima, H., Hannu, H., Jonsson, L-E., Hakenberg, R., Koren, T., Le, K., Liu, Z., Martensson, A., Miyazaki, A., Svanbro, K., Wiebke, T., Yoshimura, T., and H. Zheng, \"RObust Header Compression (ROHC): Framework and four profiles: RTP, UDP, ESP, and uncompressed\", RFC 3095, July 2001, <http://www.rfc-editor.org/info/rfc3095>.",
      "ja": "[RFC3095]ボルマン、C.、Burmeister、C.、Degermark、M.、福島、H.、ハンヌ、H.、ジョンソン、LE。、Hakenberg、R.、コレン、T.、ル、K.、劉、 Z.、Martenssonから、A.、宮崎、A.、Svanbro、K.、Wiebke、T.、吉村、T.、およびH.鄭、「ロバストヘッダ圧縮（ROHC）：フレームワークおよび4つのプロファイル：RTP、UDP、 ESP、および非圧縮」、RFC 3095、2001年7月、<http://www.rfc-editor.org/info/rfc3095>。"
    },
    {
      "indent": 3,
      "text": "[RFC4821] Mathis, M. and J. Heffner, \"Packetization Layer Path MTU Discovery\", RFC 4821, March 2007, <http://www.rfc-editor.org/info/rfc4821>.",
      "ja": "[RFC4821]マシス、M.とJ. Heffner、 \"パケット化レイヤのパスMTUディスカバリ\"、RFC 4821、2007年3月、<http://www.rfc-editor.org/info/rfc4821>。"
    },
    {
      "indent": 3,
      "text": "[RFC5795] Sandlund, K., Pelletier, G., and L-E. Jonsson, \"The RObust Header Compression (ROHC) Framework\", RFC 5795, March 2010, <http://www.rfc-editor.org/info/rfc5795>.",
      "ja": "[RFC5795] Sandlund、K.、ペルティエ、G.、およびL-E。ヨンソン、 \"ロバストヘッダ圧縮（ROHC）フレームワーク\"、RFC 5795、2010年3月、<http://www.rfc-editor.org/info/rfc5795>。"
    },
    {
      "indent": 3,
      "text": "[RFC6550] Winter, T., Thubert, P., Brandt, A., Hui, J., Kelsey, R., Levis, P., Pister, K., Struik, R., Vasseur, JP., and R. Alexander, \"RPL: IPv6 Routing Protocol for Low-Power and Lossy Networks\", RFC 6550, March 2012, <http://www.rfc-editor.org/info/rfc6550>.",
      "ja": "[RFC6550]冬、T.、Thubert、P.、ブラント、A.、ホイ、J.、ケルシー、R.、リーバイス、P.、ピスター教授、K.、Struik、R.、Vasseur、JP。、及びRアレクサンダー、 \"RPL：IPv6ルーティングプロトコルの低消費電力とロッシーネットワークの\"、RFC 6550、2012年3月、<http://www.rfc-editor.org/info/rfc6550>。"
    },
    {
      "indent": 3,
      "text": "[RFC7228] Bormann, C., Ersue, M., and A. Keranen, \"Terminology for Constrained-Node Networks\", RFC 7228, May 2014, <http://www.rfc-editor.org/info/rfc7228>.",
      "ja": "[RFC7228]ボルマン、C.、Ersue、M.、およびA. Keranen、 \"制約ノードのネットワークのための用語\"、RFC 7228、2014年5月、<http://www.rfc-editor.org/info/rfc7228> 。"
    },
    {
      "indent": 3,
      "text": "[Roadmap-6LoWPAN] Bormann, C., \"6LoWPAN Roadmap and Implementation Guide\", Work in Progress, draft-bormann-6lo-6lowpan-roadmap-00, October 2013.",
      "ja": "[ロードマップ -  6LoWPAN]ボルマン、C.、 \"6LoWPANロードマップと実装ガイド\" 進行中、仕事、ドラフト・ボルマン-6lo-6lowpan-ロードマップ-00、2013年10月。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Examples",
      "ja": "付録A.例"
    },
    {
      "indent": 3,
      "text": "This section demonstrates some relatively realistic examples derived from actual packet captures taken at previous interops.",
      "ja": "このセクションでは、前のinteropsで撮影した実際のパケットキャプチャから派生いくつかの比較的現実的な例を示しています。"
    },
    {
      "indent": 3,
      "text": "For the Routing Protocol for Low-Power and Lossy Networks (RPL) [RFC6550], Figure 8 shows a Destination-Oriented Directed Acyclic Graph (DODAG) Information Solicitation (DIS), a quite short RPL message that obviously cannot be improved much.",
      "ja": "低消費電力と非可逆ネットワークのためのルーティングプロトコル（RPL）[RFC6550]のために、図8は、宛先指向有向非循環グラフ（DODAG）情報要請（DIS）、明らかにはるかに向上させることができない非常に短いRPLメッセージを示します。"
    },
    {
      "indent": 3,
      "text": "IP header: 60 00 00 00 00 08 3a ff fe 80 00 00 00 00 00 00 02 1c da ff fe 00 20 24 ff 02 00 00 00 00 00 00 00 00 00 00 00 00 00 1a Payload: 9b 00 6b de 00 00 00 00 Dictionary: fe 80 00 00 00 00 00 00 02 1c da ff fe 00 20 24 ff 02 00 00 00 00 00 00 00 00 00 00 00 00 00 1a 16 fe fd 17 fe fd 00 01 00 00 00 00 00 01 00 00 copy: 04 9b 00 6b de 4 nulls: 82 Compressed: 04 9b 00 6b de 82 Was 8 bytes; compressed to 6 bytes, compression factor 1.33",
      "ja": "IPヘッダ：60 00 00 00 00 08 3A FE 00 FF FE 80 00 00 00 00 00 00 02 1CダFF 20 24 FF 02 00 00 00 00 00 00 00 00 00 00 00 00 00 1Aペイロード：9B 00 6B 00デ00 00 00辞書：00 00 00 02 1C FE 80 00 00 00は、DA FF FE 00 20 24 FF 02 00 00 00 00 00 00 00 00 00 00 00 00 00 1A 16 FEは17 FE 00 01 00 00 00 00 00 fdがfdが01 00 00コピー：82圧縮：4つのヌル・デ・04 9B 00 04 6B 9B 00 6Bド82が8つのバイトでした。 6バイト、圧縮係数1.33に圧縮"
    },
    {
      "indent": 22,
      "text": "Figure 8: A Simple RPL Example",
      "ja": "図8：簡単なRPL例"
    },
    {
      "indent": 3,
      "text": "Figure 9 shows a RPL DODAG Information Object, a longer RPL control message that is improved a bit more. Note that the compressed output exposes an inefficiency in the simple-minded compressor used to generate it; this does not devalue the example, since constrained nodes are quite likely to make use of simple-minded compressors.",
      "ja": "図9は、RPL DODAG情報オブジェクト、もう少し改善され、より長いRPL制御メッセージを示しています。圧縮された出力を生成するために使用される単純な志向圧縮機で非効率を露出させることに留意されたいです。拘束されたノードはシンプル志向コンプレッサーを利用することが非常に可能性があるので、これは、例を切り下げることはありません。"
    },
    {
      "indent": 3,
      "text": "IP header: 60 00 00 00 00 5c 3a ff fe 80 00 00 00 00 00 00 02 1c da ff fe 00 30 23 ff 02 00 00 00 00 00 00 00 00 00 00 00 00 00 1a Payload: 9b 01 7a 5f 00 f0 01 00 88 00 00 00 20 02 0d b8 00 00 00 00 00 00 00 ff fe 00 fa ce 04 0e 00 14 09 ff 00 00 01 00 00 00 00 00 00 00 08 1e 80 20 ff ff ff ff ff ff ff ff 00 00 00 00 20 02 0d b8 00 00 00 00 00 00 00 ff fe 00 fa ce 03 0e 40 00 ff ff ff ff 20 02 0d b8 00 00 00 00 Dictionary: fe 80 00 00 00 00 00 00 02 1c da ff fe 00 30 23 ff 02 00 00 00 00 00 00 00 00 00 00 00 00 00 1a 16 fe fd 17 fe fd 00 01 00 00 00 00 00 01 00 00 copy: 06 9b 01 7a 5f 00 f0 ref(9): 01 00 -> ref 11nnnkkk 0 7: c7 copy: 01 88 3 nulls: 81 copy: 04 20 02 0d b8 7 nulls: 85 ref(60): ff fe 00 -> ref 101nssss 0 7/11nnnkkk 1 1: a7 c9 copy: 08 fa ce 04 0e 00 14 09 ff ref(39): 00 00 01 00 00 -> ref 101nssss 0 4/11nnnkkk 3 2: a4 da 5 nulls: 83 copy: 06 08 1e 80 20 ff ff ref(2): ff ff -> ref 11nnnkkk 0 0: c0 ref(4): ff ff ff ff -> ref 11nnnkkk 2 0: d0 4 nulls: 82 ref(48): 20 02 0d b8 00 00 00 00 00 00 00 ff fe 00 fa ce -> ref 101nssss 1 4/11nnnkkk 6 0: b4 f0 copy: 03 03 0e 40 ref(9): 00 ff -> ref 11nnnkkk 0 7: c7 ref(28): ff ff ff -> ref 101nssss 0 3/11nnnkkk 1 1: a3 c9 ref(24): 20 02 0d b8 00 00 00 00 -> ref 101nssss 0 2/11nnnkkk 6 0: a2 f0 Compressed: 06 9b 01 7a 5f 00 f0 c7 01 88 81 04 20 02 0d b8 85 a7 c9 08 fa ce 04 0e 00 14 09 ff a4 da 83 06 08 1e 80 20 ff ff c0 d0 82 b4 f0 03 03 0e 40 c7 a3 c9 a2 f0 Was 92 bytes; compressed to 52 bytes, compression factor 1.77",
      "ja": "IPヘッダ：60 00 00 00 00 5C 3A FE 00 FF FE 80 00 00 00 00 00 00 02 1C DA FF 30 23 FF 02 00 00 00 00 00 00 00 00 00 00 00 00 00 1Aペイロード：9B 01 7aは5F 00 F0 01 00 88 00 00 00 20 02 0D B8 00 00 00 00 00 00 00 FF FE 00のFA CE 04 0E 00 14 09 FF 00 00 01 00 00 00 00 00 00 00 08 1E 80 20のFF FFのFF FF FF（フリップフロップ）のFF FF FF 00 00 00 00 20 02 0D B8 00 00 00 00 00 00 00 FF FE 00のFA CE 03 0E 40 00 FF FF FFのFFを20 02 0D B8を00 00 00 00辞書：FE 80 00 00 00 00 00 00 02 1C DA FF 02 00 00 00 00 00 00 00 00 00 FF FE 00 30 23 00 00 00 00 1A 16 FEは17 FE 00 fdがfdが01 00 00 00 00 00 01 00 00コピー：06 9B 01 7aは5F 00 F0 REF（9） C7コピー：01 88 3ヌル：81コピー：04 20 02 0D B8 7つのヌル：85 REF（60）：FE 00 FF  - > REF 101nssss 0~7 / 11nnnkkk 1：A7  - ：> REF 11nnnkkk 0 7 01 00 C9コピー：08 FA CE 04 0E 00 14 09 FF REF（39）：00 00 01 00 00  - > REF 101nssss 0 4 / 11nnnkkk 3 2：A4ダ5つのヌル：83コピー：06 08 1E 80 20 FF FFのREFを（ 2）のFF FF  - > REF 11nnnkkk 0：C0のREF（4）：FF FF FF FF  - > REF 11nnnkkk 2 0：D0 4ヌル：82 REF（48）：20 02 0D B8 00 00 00 00 00 00 00 FF FE 00 FAのCE  - > REF 101nssss 1~4 / 11nnnkkk 6 0：B4 F0コピー：03 03 0E 40 REF（9）：00 FF  - > REF 11nnnkkk 0~7：C7のREF（28 ）：FF FF FF  - > REF 101nssss 0~3 / 11nnnkkk 1：A3 C9 REF（24）：20 02 0DのB8 00 00 00 00  - > REF 101nssss 0 2 / 11nnnkkk 6 0：A2 F0圧縮：06 9B 01 7A 83の06 08 1E 80 20 FF FFのC0は82 B4 F0 03 03 0E 40 C7 A3 C9 A2 f0は92しD0 5F 00 F0のC7 01 88 81 04 20 02 0D B8 85 A7 C9 08 FA CE 04 0E 00 14 09 FF A4 DAバイト; 52バイト、圧縮係数1.77に圧縮"
    },
    {
      "indent": 22,
      "text": "Figure 9: A Longer RPL Example",
      "ja": "図9：長いRPL例"
    },
    {
      "indent": 3,
      "text": "Similarly, Figure 10 shows a RPL Destination Advertisement Object (DAO) message. One of the embedded addresses is copied right out of the pseudo-header; the other one is effectively converted from global to local by providing the prefix FE80 literally, inserting a number of nulls, and copying (some of) the Interface Identifier part again out of the pseudo-header. Note that a simple implementation would probably emit fewer nulls and copy the entire Interface Identifier; there are multiple ways to encode this 50-byte payload into 27 bytes.",
      "ja": "同様に、図10は、RPL先広告オブジェクト（DAO）メッセージを示しています。埋め込まれたアドレスの一つは右疑似ヘッダからコピーされます。他方を効果的疑似ヘッダから再度ヌルの数、およびコピー（の一部）インタフェース識別子部分を挿入し、文字通りプレフィックスFE80を提供することによって、グローバルからローカルに変換されます。単純な実装は、おそらく少数のヌルを放出し、全体のインタフェース識別子をコピーすることに注意してください。 27バイトに、この50バイトのペイロードを符号化する複数の方法があります。"
    },
    {
      "indent": 3,
      "text": "IP header: 60 00 00 00 00 32 3a ff 20 02 0d b8 00 00 00 00 00 00 00 ff fe 00 33 44 20 02 0d b8 00 00 00 00 00 00 00 ff fe 00 11 22 Payload: 9b 02 58 7d 01 80 00 f1 05 12 00 80 20 02 0d b8 00 00 00 00 00 00 00 ff fe 00 33 44 06 14 00 80 f1 00 fe 80 00 00 00 00 00 00 00 00 00 ff fe 00 11 22 Dictionary: 20 02 0d b8 00 00 00 00 00 00 00 ff fe 00 33 44 20 02 0d b8 00 00 00 00 00 00 00 ff fe 00 11 22 16 fe fd 17 fe fd 00 01 00 00 00 00 00 01 00 00 copy: 0c 9b 02 58 7d 01 80 00 f1 05 12 00 80 ref(60): 20 02 0d b8 00 00 00 00 00 00 00 ff fe 00 33 44 -> ref 101nssss 1 5/11nnnkkk 6 4: b5 f4 copy: 08 06 14 00 80 f1 00 fe 80 9 nulls: 87 ref(66): ff fe 00 11 22 -> ref 101nssss 0 7/11nnnkkk 3 5: a7 dd Compressed: 0c 9b 02 58 7d 01 80 00 f1 05 12 00 80 b5 f4 08 06 14 00 80 f1 00 fe 80 87 a7 dd Was 50 bytes; compressed to 27 bytes, compression factor 1.85",
      "ja": "IPヘッダ：20 02 0D B8 FF 60 00 00 00 00 32 3A 00 00 00 00 00 00 00 FF FE 00 33 44 20 02 0D B8 00 00 00 00 00 00 00 FF FE 00 11 22ペイロード：9B 02 58 7D​​ 01 80 00 F1 05 12 00 80 20 02 0D B8 00 00 00 00 00 00 00 FF FE 00 33 44 06 14 00 80 F1 00 FE 80 00 00 00 00 00 00 00 00 00 FF FE 00 11 22辞書：20 02 0D B8 00 00 00 00 00 00 00 FF FE 00 33 44 20 02 0DのB8 00 00 00 00 00 00 00 FF FE 00 11 22 16 FEは17 FE 00 01 00 00 00 00 00 01 00 00コピーfdがfdが：0C 9B 02 58 7D​​ 01 80 00 F1 05 12 00 80参考文献（60）：20 02 0D B8 00 00 00 00 00 00 00 FF FE 00 33 44  - > REF 101nssss 1~5 / 11nnnkkk 6 4：B5 F4コピー：08 06 14 00 80 F1 00 FE 80 9つのヌル：87 REF（66）：FE 00 11 22 FF  - > REF 101nssss 0~7 / 11nnnkkk 3~5：A7 DD圧縮：0C 9B 02 58 7D​​ 01 80 00 F1 05 12 00 80 B5 F4 08 06 14 00 80 F1 00 FE 80 87 A7 ddは50バイトでした。 27バイト、圧縮係数1.85に圧縮"
    },
    {
      "indent": 23,
      "text": "Figure 10: A RPL DAO Message",
      "ja": "図10：RPL DAOメッセージ"
    },
    {
      "indent": 3,
      "text": "Figure 11 shows the effect of compressing a simple ND neighbor solicitation.",
      "ja": "図11は、単純なNDの近隣要請を圧縮の効果を示しています。"
    },
    {
      "indent": 3,
      "text": "IP header: 60 00 00 00 00 30 3a ff 20 02 0d b8 00 00 00 00 00 00 00 ff fe 00 3b d3 fe 80 00 00 00 00 00 00 02 1c da ff fe 00 30 23 Payload: 87 00 a7 68 00 00 00 00 fe 80 00 00 00 00 00 00 02 1c da ff fe 00 30 23 01 01 3b d3 00 00 00 00 1f 02 00 00 00 00 00 06 00 1c da ff fe 00 20 24 Dictionary: 20 02 0d b8 00 00 00 00 00 00 00 ff fe 00 3b d3 fe 80 00 00 00 00 00 00 02 1c da ff fe 00 30 23 16 fe fd 17 fe fd 00 01 00 00 00 00 00 01 00 00 copy: 04 87 00 a7 68 4 nulls: 82 ref(40): fe 80 00 00 00 00 00 00 02 1c da ff fe 00 30 23 -> ref 101nssss 1 3/11nnnkkk 6 0: b3 f0 copy: 04 01 01 3b d3 4 nulls: 82 copy: 02 1f 02 5 nulls: 83 copy: 02 06 00 ref(24): 1c da ff fe 00 -> ref 101nssss 0 2/11nnnkkk 3 3: a2 db copy: 02 20 24 Compressed: 04 87 00 a7 68 82 b3 f0 04 01 01 3b d3 82 02 1f 02 83 02 06 00 a2 db 02 20 24 Was 48 bytes; compressed to 26 bytes, compression factor 1.85",
      "ja": "IPヘッダ：87 00 A7 68 00 20 02 0D B8 FF 60 00 00 00 00 30 3A 00 00 00 00 00 00 00 FF FE 00 3B D3 FE 80 00 00 00 00 00 00 02 1CダペイロードFE 00 30 23 FF 00 00 00 FE 80 00 00 00 00 00 00 02 1C DA FF FE 00 30 23 01 01 3B D3 00 00 00 00 1F 02 00 00 00 00 00 06 00 1C DA FE 00 20 24 FF辞書：20 02 0DのB8 00 00 00 00 00 00 00 FF FE 00 3B D3 FE 80 00 00 00 00 00 00 02 1C DA FE 00 30 23 16 FEは17 FE 00 01 00 00 00 00 00 01 00 00コピーfdがfdがFF：04 87 00 A7 68 4つのヌル：82 REF（40）：FE 80 00 00 00 00 00 00 02 1C DA FE 00 30 23 FF  - > REF 101nssss 1~3 / 11nnnkkk 6 0：B3 F0コピー：04 01 01 3B D3 4つのヌル：82コピー：02 1F 02 5ヌル：83コピー：02 06 00参考文献（24）：FE 00 FF 1Cダ - > REF 101nssss 0 2 / 11nnnkkk 3 3：A2 DBコピー：02 20 24圧縮：04 87 00 A7 68 82 B3 F0 04 01 01 3B D3 82 02 1F 02 83 02 06 00 A2のDB 02 20 24 48バイトでした。 26バイト、圧縮係数1.85に圧縮"
    },
    {
      "indent": 18,
      "text": "Figure 11: An ND Neighbor Solicitation",
      "ja": "図11：NDの近隣要請"
    },
    {
      "indent": 3,
      "text": "Figure 12 shows the compression of an ND neighbor advertisement.",
      "ja": "図12は、NDの近隣広告の圧縮を示しています。"
    },
    {
      "indent": 3,
      "text": "IP header: 60 00 00 00 00 30 3a fe fe 80 00 00 00 00 00 00 02 1c da ff fe 00 30 23 20 02 0d b8 00 00 00 00 00 00 00 ff fe 00 3b d3 Payload: 88 00 26 6c c0 00 00 00 fe 80 00 00 00 00 00 00 02 1c da ff fe 00 30 23 02 01 fa ce 00 00 00 00 1f 02 00 00 00 00 00 06 00 1c da ff fe 00 20 24 Dictionary: fe 80 00 00 00 00 00 00 02 1c da ff fe 00 30 23 20 02 0d b8 00 00 00 00 00 00 00 ff fe 00 3b d3 16 fe fd 17 fe fd 00 01 00 00 00 00 00 01 00 00 copy: 05 88 00 26 6c c0 3 nulls: 81 ref(56): fe 80 00 00 00 00 00 00 02 1c da ff fe 00 30 23 -> ref 101nssss 1 5/11nnnkkk 6 0: b5 f0 copy: 04 02 01 fa ce 4 nulls: 82 copy: 02 1f 02 5 nulls: 83 copy: 02 06 00 ref(24): 1c da ff fe 00 -> ref 101nssss 0 2/11nnnkkk 3 3: a2 db copy: 02 20 24 Compressed: 05 88 00 26 6c c0 81 b5 f0 04 02 01 fa ce 82 02 1f 02 83 02 06 00 a2 db 02 20 24 Was 48 bytes; compressed to 27 bytes, compression factor 1.78",
      "ja": "IPヘッダ：FE 00 30 23 20 02 0D B8 FF 60 00 00 00 00 30 3A FE FE 80 00 00 00 00 00 00 02 1C DA 00 00 00 00 00 00 00 FF FE 00 3B D3ペイロード：88 00 26 6C C0 FE 80 00 00 00：FE 00 30 23 02 01 FAのCE 00 00 00 00 1F 02 00 00 00 00 00 06 00 1C DA辞書FE 00 20 24 FF FF 00 00 00 FE 80 00 00 00 00 00 00 02 1C DA FE 00 30 23 20 02 0D B8 FF 00 00 00 02 1C DA FE 00 3B D3 16 FEは17 FE 00 01 00 00 00 00 00 01 00 00コピーfdがfdが00 00 00 00 00 00 00 FF：05 88 00 26 6CをC0 3つのヌル：81 REF（56）：FE 00 30 23 FF FE 80 00 00 00 00 00 00 02 1Cダ - > REF 101nssss 1~5 / 11nnnkkk 6 0：B5 F0コピー：04 02 01 FAのCE 4つのヌル：82コピー：02 1F 02 5ヌル：83コピー：02 06 00参考文献（24）：FE 00 FF 1Cダ - > REF 101nssss 0 2 / 11nnnkkk 3 3：A2 DBコピー：02 20 24圧縮：05 88 00 26 6C C0 81 B5 F0 04 02 01 FA CE 82 02 1F 02 83 02 06 00 A2のDB 02 20 24 48バイトでした。 27バイト、圧縮係数1.78に圧縮"
    },
    {
      "indent": 18,
      "text": "Figure 12: An ND Neighbor Advertisement",
      "ja": "図12：NDの近隣広告"
    },
    {
      "indent": 3,
      "text": "Figure 13 shows the compression of an ND router solicitation. Note that the relatively good compression is not caused by the many zero bytes in the link-layer address of this particular capture (which are unlikely to occur in practice): 7 of these 8 bytes are copied from the pseudo-header (the 8th byte cannot be copied, as the universal/ local bit needs to be inverted).",
      "ja": "図13は、NDのルータ要請の圧縮を示します。これらの8バイトの7疑似ヘッダからコピーされ（8バイト：比較的良好な圧縮が（実際には発生しにくい）、この特定の捕捉のリンク層アドレスに多くのゼロバイトによって引き起こされないことに注意してくださいユニバーサル/ローカルビット）を反転する必要として、コピーすることはできません。"
    },
    {
      "indent": 3,
      "text": "IP header: 60 00 00 00 00 18 3a ff fe 80 00 00 00 00 00 00 ae de 48 00 00 00 00 01 ff 02 00 00 00 00 00 00 00 00 00 00 00 00 00 02 Payload: 85 00 90 65 00 00 00 00 01 02 ac de 48 00 00 00 00 01 00 00 00 00 00 00 Dictionary: fe 80 00 00 00 00 00 00 ae de 48 00 00 00 00 01 ff 02 00 00 00 00 00 00 00 00 00 00 00 00 00 02 16 fe fd 17 fe fd 00 01 00 00 00 00 00 01 00 00 copy: 04 85 00 90 65 ref(11): 00 00 00 00 01 -> ref 11nnnkkk 3 6: de copy: 02 02 ac ref(50): de 48 00 00 00 00 01 -> ref 101nssss 0 5/11nnnkkk 5 3: a5 eb 6 nulls: 84 Compressed: 04 85 00 90 65 de 02 02 ac a5 eb 84 Was 24 bytes; compressed to 12 bytes, compression factor 2.00",
      "ja": "IPヘッダ：85 00 90 65 00 60 00 00 00 00 18 3A FE 80 00 00 00 00 00 00 AEド48 00 00 00 00 01 FF 02 00 00 00 00 00 00 00 00 00 00 00 00 00 02ペイロードFF 00 00 00 01 02 ACド48 00 00 00 00 01 00 00 00 00 00 00辞書：FE 80 00 00 00 00 00 00 AEド48 00 00 00 00 01 FF 02 00 00 00 00 00 00 00 00 00 00 00 > REF 11nnnkkk 3 6から00 00 00 00 01：デ・コピー：02 02交流REF 04 85 00 90 65参考文献（11）：00 00 02 16 FEは17 FE 00 01 00 00 00 00 00 01 00 00コピーをfdがfdが（50）：デ48 00 00 00 00 01  - > REF 101nssss 0~5 / 11nnnkkk 5 3：84圧縮：EB 6つのヌルA5 EB 84 A5 04 85 00 90 65 02 02ドACは24バイトでした。 12バイト、圧縮係数2.00に圧縮"
    },
    {
      "indent": 19,
      "text": "Figure 13: An ND Router Solicitation",
      "ja": "図13：NDルータ要請"
    },
    {
      "indent": 3,
      "text": "Figure 14 shows the compression of an ND router advertisement. The indefinite lifetime is compressed to four bytes by backreferencing; this could be improved (at the cost of minor additional decompressor complexity) by including some simple runlength mechanism.",
      "ja": "図14は、NDのルータ広告の圧縮を示しています。不定寿命はバックリファレンスにより4バイトに圧縮されます。これは、いくつかの単純なランレングスのメカニズムを含むことにより、（マイナーな追加の伸長器の複雑さのコストで）向上させることができました。"
    },
    {
      "indent": 3,
      "text": "IP header: 60 00 00 00 00 60 3a ff fe 80 00 00 00 00 00 00 10 34 00 ff fe 00 11 22 fe 80 00 00 00 00 00 00 ae de 48 00 00 00 00 01 Payload: 86 00 55 c9 40 00 0f a0 1c 5a 38 17 00 00 07 d0 01 01 11 22 00 00 00 00 03 04 40 40 ff ff ff ff ff ff ff ff 00 00 00 00 20 02 0d b8 00 00 00 00 00 00 00 00 00 00 00 00 20 02 40 10 00 00 03 e8 20 02 0d b8 00 00 00 00 21 03 00 01 00 00 00 00 20 02 0d b8 00 00 00 00 00 00 00 ff fe 00 11 22 Dictionary: fe 80 00 00 00 00 00 00 10 34 00 ff fe 00 11 22 fe 80 00 00 00 00 00 00 ae de 48 00 00 00 00 01 16 fe fd 17 fe fd 00 01 00 00 00 00 00 01 00 00 copy: 0c 86 00 55 c9 40 00 0f a0 1c 5a 38 17 2 nulls: 80 copy: 06 07 d0 01 01 11 22 4 nulls: 82 copy: 06 03 04 40 40 ff ff ref(2): ff ff -> ref 11nnnkkk 0 0: c0 ref(4): ff ff ff ff -> ref 11nnnkkk 2 0: d0 4 nulls: 82 copy: 04 20 02 0d b8 12 nulls: 8a copy: 04 20 02 40 10 ref(38): 00 00 03 -> ref 101nssss 0 4/11nnnkkk 1 3: a4 cb copy: 01 e8 ref(24): 20 02 0d b8 00 00 00 00 -> ref 101nssss 0 2/11nnnkkk 6 0: a2 f0 copy: 02 21 03 ref(84): 00 01 00 00 00 00 -> ref 101nssss 0 9/11nnnkkk 4 6: a9 e6 ref(40): 20 02 0d b8 00 00 00 00 00 00 00 -> ref 101nssss 1 3/11nnnkkk 1 5: b3 cd ref(128): ff fe 00 11 22 -> ref 101nssss 0 15/11nnnkkk 3 3: af db Compressed: 0c 86 00 55 c9 40 00 0f a0 1c 5a 38 17 80 06 07 d0 01 01 11 22 82 06 03 04 40 40 ff ff c0 d0 82 04 20 02 0d b8 8a 04 20 02 40 10 a4 cb 01 e8 a2 f0 02 21 03 a9 e6 b3 cd af db Was 96 bytes; compressed to 58 bytes, compression factor 1.66",
      "ja": "IPヘッダ：60 00 00 00 00 60 3A FF FE 80 00 00 00 00 00 00 10 34 00 FF FE 00 11 22 FE 80 00 00 00 00 00 00 AEド48 00 00 00 00 01ペイロード：86 00 55 C9 40 00 0F A0部1c 5aの38 17 00 00 07 D0 01 01 11 22 00 00 00 00 03 04 40 40 FFのFF FFのFF FF FFのFFのFFが00 00 00 00 20 02 0DのB8 00 00 00 00 00 00 00 00 00 00 00 00 20 02 40 10 00 00 03 E8 20 02 0D B8 00 00 00 00 21 03 00 01 00 00 00 00 20 02 0D B8 00 00 00 00 00 00 00 FF FE 00 11 22辞書：FE 80 00 00 00 00 00 0C 86 00 55 C9 40 00 00 10 34 00 FF FE 00 11 22 FE 80 00 00 00 00 00 00 AEド48 00 00 00 00 01 16は、Fe 17 FE 00 01 00 00 00 00 00 01 00 00コピーをfdがfdが0FのA0 1C 5aと38の17 2ヌル：80コピー：06 07 D0 01 01 11 22 4つのヌル：82コピー：06 03 04 40 40 FF FFのREF（2）のFF FF  - > REF 11nnnkkk 0：C0のREF（4 ）：FF FF FF FF  - > REF 11nnnkkk 2 0：D0 4ヌル：82コピー：04 20 02 0DのB8 12のヌル：8Aコピー：04 20 02 40 10 REF（38）：00 00 03  - > REF 101nssss 0 4 / 11nnnkkk 1~3：A4 CBコピー：01 E8 REF（24）：20 02 0D B8 00 00 00 00  - > REF 101nssss 0 2 / 11nnnkkk 6 0：A2 F0 C OPY：02 21 03参考文献（84）：00 01 00 00 00 00  - > REF 101nssss 0~9 / 11nnnkkk 4 6：A9 E6 REF（40）：20 02 0D B8 00 00 00 00 00 00 00  - > REF 101nssss 1 3 / 11nnnkkk 1~5：B3のCD REF（128）：FE 00 11 22 FF  - > REF 101nssss 0~15 / 11nnnkkk 3 3：AF圧縮DB：0C 86 00 55 C9 40 00 0F A0部1c 5aの38 17 80 06 07 D0 01 01 11 22 82 06 03 04 40 40 FF FFのC0は82 04 20 02 D0 0D B8 8A 04 20 02 40 10 A4 CB 01 E8のA2のF0 02 21 03 A9 E6 B3は、CD AF DBは96バイトでした。 58バイト、圧縮率1.66に圧縮"
    },
    {
      "indent": 19,
      "text": "Figure 14: An ND Router Advertisement",
      "ja": "図14：NDルーターアドバタイズ"
    },
    {
      "indent": 3,
      "text": "Figure 15 shows the compression of a DTLS application data packet with a net payload of 13 bytes of cleartext and 8 bytes of authenticator (note that the IP header is not relevant for this example and has been set to 0). This makes good use of the static dictionary and is quite effective crunching out the redundancy in the TLS_PSK_WITH_AES_128_CCM_8 header, leading to a net reduction by 15 bytes.",
      "ja": "図15は、平文の13のバイトとオーセンティケータの8バイトの正味ペイロードとDTLSアプリケーションデータパケットの圧縮を示す（IPヘッダは、この例に関連するものではなく、0に設定されていることに注意）。これは、静的辞書の活用を行い、15バイトで純減につながる、TLS_PSK_WITH_AES_128_CCM_8ヘッダ内の冗長性を噛み砕く非常に効果的です。"
    },
    {
      "indent": 3,
      "text": "IP header: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 Payload: 17 fe fd 00 01 00 00 00 00 00 01 00 1d 00 01 00 00 00 00 00 01 09 b2 0e 82 c1 6e b6 96 c5 1f 36 8d 17 61 e2 b5 d4 22 d4 ed 2b Dictionary: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 16 fe fd 17 fe fd 00 01 00 00 00 00 00 01 00 00 ref(13): 17 fe fd 00 01 00 00 00 00 00 01 00 -> ref 101nssss 1 0/11nnnkkk 2 1: b0 d1 copy: 01 1d ref(10): 00 01 00 00 00 00 00 01 -> ref 11nnnkkk 6 2: f2 copy: 15 09 b2 0e 82 c1 6e b6 96 c5 1f 36 8d 17 61 e2 copy: b5 d4 22 d4 ed 2b Compressed: b0 d1 01 1d f2 15 09 b2 0e 82 c1 6e b6 96 c5 1f 36 8d 17 61 e2 b5 d4 22 d4 ed 2b Was 42 bytes; compressed to 27 bytes, compression factor 1.56",
      "ja": "IPヘッダ：00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00ペイロード：17 FE 00 01 fdが00 00 00 00 00 01 00 1D 00 01 00 00 00 00 00 01 09 B2 0E 82 C1 6E B6を96 C5 1F 36 8D 17 61 E2のB5 D4 22 D4のED 2bの辞書：00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 16 FEは17 FE 00 01 00 00 00 00 00 01 00 00参考文献（13）fdがfdが17 FE 00 01 00 00 00をfdとし00 00 01 00  - > REF 101nssss 1 0 / 11nnnkkk 2 1：B0 D1コピー：01 1D REF（10）：00 01 00 00 00 00 00 01  - > REF 11nnnkkk 6 2：F2コピー：15 09 B2 0E 82 C1 6EのB6 96のC5 1F 36 8D 17 61 E2コピー：15 09 B2 0E 82 C1 01 1D F2 d1がB0 6E B6を96 C5 1F 36 8D 17 61 E2のB5 D4 22 D4 ED 2bは42バイトである：圧縮2B B5さd4 22 D4編; 27バイト、圧縮係数1.56に圧縮"
    },
    {
      "indent": 17,
      "text": "Figure 15: A DTLS Application Data Packet",
      "ja": "図15：DTLSアプリケーションデータパケット"
    },
    {
      "indent": 3,
      "text": "Figure 16 shows that the compression is slightly worse in a subsequent packet (containing 6 bytes of cleartext and 8 bytes of authenticator, yielding a net compression of 13 bytes). The total overhead does stay at a quite acceptable 8 bytes.",
      "ja": "図16は、圧縮（13バイトの正味の圧縮をもたらす、平文の6バイトとオーセンティケータの8つのバイトを含む）以降のパケットにわずかに悪化していることを示しています。総オーバーヘッドはかなり許容8バイトに泊まるん。"
    },
    {
      "indent": 3,
      "text": "IP header: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 Payload: 17 fe fd 00 01 00 00 00 00 00 05 00 16 00 01 00 00 00 00 00 05 ae a0 15 56 67 92 4d ff 8a 24 e4 cb 35 b9 Dictionary: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 16 fe fd 17 fe fd 00 01 00 00 00 00 00 01 00 00 ref(13): 17 fe fd 00 01 00 00 00 00 00 -> ref 101nssss 1 0/11nnnkkk 0 3: b0 c3 copy: 03 05 00 16 ref(10): 00 01 00 00 00 00 00 05 -> ref 11nnnkkk 6 2: f2 copy: 0e ae a0 15 56 67 92 4d ff 8a 24 e4 cb 35 b9 Compressed: b0 c3 03 05 00 16 f2 0e ae a0 15 56 67 92 4d ff 8a 24 e4 cb 35 b9 Was 35 bytes; compressed to 22 bytes, compression factor 1.59",
      "ja": "IPヘッダ：00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00ペイロード：17 FE 00 01 fdが00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 15 56 67 92 4D FF 8A 24 E4 CB 35 B9辞書A0 AE 00 00 00 00 00 05 00 16 00 01 00 00 00 00 00 05 00 00 00 00 00 00 00 00 00 00 00 00 00 00 16 FEは17 FE 00 01 00 00 00 00 00 01 00 00参考文献（13）fdがfdが17 FE 00 01 00 00 00 00 00 fdが - > REF 101nssss 1 0 / 11nnnkkk 0~3：B0 C3コピー：03 05 00 16参考文献（10）：00 01 00 00 00 00 00 05  - > REF 11nnnkkk 6 2：F2コピー：A0 15 56 67 92 4D FF 8A 24 E4 CB AE 0Eを35 B9圧縮：B0 C3 03 05 00 16 0EのF2用のAE A0 15 56 67 92 35 B9 35バイトの4D FF部8a 24 E4 CBました。 22バイト、圧縮係数1.59に圧縮"
    },
    {
      "indent": 14,
      "text": "Figure 16: Another DTLS Application Data Packet",
      "ja": "図16：別のDTLSのアプリケーションデータパケット"
    },
    {
      "indent": 3,
      "text": "Figure 17 shows the compression of a DTLS handshake message, here a client hello. There is little that can be compressed about the 32 bytes of randomness. Still, the net reduction is by 14 bytes.",
      "ja": "図17は、DTLS握手メッセージの圧縮を示し、ここではクライアントこんにちは。ランダムの32バイト程度に圧縮することができる少しがあります。それでも、純減は14バイトです。"
    },
    {
      "indent": 3,
      "text": "IP header: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 Payload: 16 fe fd 00 00 00 00 00 00 00 00 00 36 01 00 00 2a 00 00 00 00 00 00 00 2a fe fd 51 52 ed 79 a4 20 c9 62 56 11 47 c9 39 ee 6c c0 a4 fe c6 89 2f 32 26 9a 16 4e 31 7e 9f 20 92 92 00 00 00 02 c0 a8 01 00 Dictionary: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 16 fe fd 17 fe fd 00 01 00 00 00 00 00 01 00 00 ref(16): 16 fe fd -> ref 101nssss 0 1/11nnnkkk 1 5: a1 cd 9 nulls: 87 copy: 01 36 ref(16): 01 00 00 -> ref 101nssss 0 1/11nnnkkk 1 5: a1 cd copy: 01 2a 7 nulls: 85 copy: 23 2a fe fd 51 52 ed 79 a4 20 c9 62 56 11 47 c9 copy: 39 ee 6c c0 a4 fe c6 89 2f 32 26 9a 16 4e 31 7e copy: 9f 20 92 92 3 nulls: 81 copy: 05 02 c0 a8 01 00 Compressed: a1 cd 87 01 36 a1 cd 01 2a 85 23 2a fe fd 51 52 ed 79 a4 20 c9 62 56 11 47 c9 39 ee 6c c0 a4 fe c6 89 2f 32 26 9a 16 4e 31 7e 9f 20 92 92 81 05 02 c0 a8 01 00 Was 67 bytes; compressed to 53 bytes, compression factor 1.26",
      "ja": "IPヘッダ：00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00ペイロード：16 FE 00 00 fdが00 00 00 00 00 00 00 36 01 00 00 2（A）00 00 00 00 00 00 00図2a FE 51 52編fdが79 A4 20 C 9 62 56 11 47 C9 39 EE 6cとC0のA4 FE C6 89 2F 32 26 9A 16 4E 31 7E 9F 20 92 92 00 00 00 02 C0 A8 01 00ディクショナリ：00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 16 FEは17 fdがFE 00 01 00 00 00 00 00 01 00 00 REF（16）fdが16：FEはfdが - > REF 101nssss 0 1 / 11nnnkkk 1~5：A1 CD 9つのヌル：87コピー：01 36 REF（16）：01 00 00  - > REF 101nssss 0 1 / 11nnnkkk 1~5：A1 CDコピー：01 2A 7ヌルを85コピー：39 EE 6cはC0のA4 FE C6 89 2F 32：23 2A FE 51 52 ED 79 A4 20 C 9 62 56 11 47 C9コピーをfdが26 9A 16 4E 31 7Eコピー：81コピー：05 02 C0 A8 01 00圧縮：A1 CD 87 01 36 A1 CD 01 2A 85 23 2A FE 51 52 ED 79 A4 20 C9 62 56 11 fdが20の92 92 3ヌル9F 47 C9 39 EE 6cはC0 A4 FEは89 2F 32 26 9A 16 4E 31 7E 9F 20 92 92 81 05 02 C0 A8 01 00 C6は67ましたバイト; 53バイト、圧縮係数1.26に圧縮"
    },
    {
      "indent": 13,
      "text": "Figure 17: A DTLS Handshake Packet (Client Hello)",
      "ja": "図17：DTLSハンドシェイク・パケット（クライアントこんにちは）"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Colin O'Flynn has repeatedly insisted that some form of compression for ICMPv6 and ND packets might be beneficial. He actually wrote his own document, [ICMPv6-ND], which compresses better, but that document only addresses basic ICMPv6/ND and needs a much longer specification (around 17 pages of detailed specification, as compared to the single page of core specification here). This motivated the author to try something simple, yet general. Special thanks go to Colin for indicating that he indeed considers his document superseded by this one.",
      "ja": "コリン・O'Flynnを繰り返しICMPv6のとNDパケットの圧縮のいくつかのフォームが有益であるかもしれないことを主張してきました。彼は実際にはより良い圧縮し、彼自身の文書、[ICMPv6の-ND]を書いたが、その文書は、基本的なICMPv6の/ NDに対処し、ここではコア仕様の単一のページと比較して、詳細な仕様の17ページの周りに（はるかに長い仕様を必要とします）。これは単純な、まだ一般的な何かをしようとする作者の動機。特別な感謝は、彼が実際にこの1に取って代わら彼の文書を検討していることを示すためにコリンに行きます。"
    },
    {
      "indent": 3,
      "text": "The examples given are based on packet capture files that Colin O'Flynn, Owen Kirby, Olaf Bergmann, and others provided.",
      "ja": "与えられた例はコリン・O'Flynn、オーウェン・カービー、オラフ・バーグマン、そして他の人が与えられたパケットキャプチャファイルに基づいています。"
    },
    {
      "indent": 3,
      "text": "Using these files as a corpus, the static dictionary was developed, and the bit allocations validated, based on research by Sebastian Dominik.",
      "ja": "コーパスとしてこれらのファイルを使用して、静的辞書が開発された、およびビット割り当てはセバスチャン・ドミニクの研究に基づいて、検証しました。"
    },
    {
      "indent": 3,
      "text": "Erik Nordmark provided input that helped shape the 6CIO. Thomas Bjorklund proposed simplifying the predefined dictionary.",
      "ja": "エリックNordmarkとは6CIOを形作る助けた入力を提供します。トーマスBjorklundは、事前に定義された辞書を簡素化提案しました。"
    },
    {
      "indent": 3,
      "text": "Yoshihiro Ohba insisted on clarifying the notation used for the definition of the bytecodes and their bitfields. Ulrich Herberg provided some additional review and suggested expanding the introductory material, and with Hannes Tschofenig and Brian Haberman he helped come up with the IANA policy for the \"6LoWPAN capability bits\" assignments in the 6CIO.",
      "ja": "義弘大場はバイトコードとそのビットフィールドの定義に使用される表記法を明確に主張しました。ウルリッヒHerbergは、いくつかの追加のレビューを提供し、入門資料を拡大提案し、ハンネスTschofenigとブライアンハーバーマンと彼は「6LoWPAN機能ビット」6CIOで割り当てのIANAの方針を考え出す助けました。"
    },
    {
      "indent": 3,
      "text": "The IESG reviewers Richard Barnes and Stephen Farrell contributed topics to the Security Considerations section; they and Barry Leiba, as well as GEN-ART reviewer Vijay K. Gurbani, also provided editorial improvements.",
      "ja": "IESGの校閲リチャード・バーンズとステファン・ファレルは、Security Considerations部にトピックを拠出しました。彼らとバリー・レイバのほか、GEN-ART投稿者ビジェイK. Gurbaniは、また、編集の改善を提供します。"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Carsten Bormann Universitaet Bremen TZI Postfach 330440 D-28359 Bremen Germany",
      "ja": "カルステンボルマンUniversitaetブレーメンTZI POSTFACH 330440 D-28359ブレーメン、ドイツ"
    },
    {
      "indent": 3,
      "text": "Phone: +49-421-218-63921 EMail: cabo@tzi.org",
      "ja": "電話：+ 49-421-218-63921 Eメール：cabo@tzi.org"
    }
  ]
}