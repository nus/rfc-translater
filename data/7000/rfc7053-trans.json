{
  "title": {
    "text": "RFC 7053 - SACK-IMMEDIATELY Extension for the Stream Control Transmission Protocol",
    "ja": "RFC 7053 - ストリーム制御伝送プロトコルのためのSACK、すぐに拡張"
  },
  "number": 7053,
  "created_at": "2019-10-28 03:10:28.404328+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                         M. Tuexen\nRequest for Comments: 7053                                  I. Ruengeler\nUpdates: 4960                           Muenster Univ. of Appl. Sciences\nCategory: Standards Track                                     R. Stewart\nISSN: 2070-1721                                           Adara Networks\n                                                           November 2013",
      "raw": true
    },
    {
      "indent": 16,
      "text": "     SACK-IMMEDIATELY Extension for\nthe Stream Control Transmission Protocol",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document updates RFC 4960 by defining a method for the sender of a DATA chunk to indicate that the corresponding Selective Acknowledgment (SACK) chunk should be sent back immediately and should not be delayed. It is done by specifying a bit in the DATA chunk header, called the (I)mmediate bit, which can get set by either the Stream Control Transmission Protocol (SCTP) implementation or the application using an SCTP stack. Since unknown flags in chunk headers are ignored by SCTP implementations, this extension does not introduce any interoperability problems.",
      "ja": "DATAチャンクの送信者のための方法を定義することで、この文書の更新RFC 4960は、対応する選択的確認応答（SACK）チャンクが直ちに返送する必要があり、遅延されるべきでないことを示します。それはデータチャンクヘッダのビットを指定することによって行われ、ストリーム制御伝送プロトコル（SCTP）の実装又はSCTPスタックを使用してアプリケーションのいずれかによって設定され得ることができ（I）mmediateビットと呼ばれます。チャンクヘッダ中の未知のフラグがSCTP実装によって無視されているので、この拡張機能は、任意の相互運用性の問題を導入しません。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 5741のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc7053.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc7053で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2013 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2013 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . . . 2\n2.  Conventions . . . . . . . . . . . . . . . . . . . . . . . . . . 3\n3.  The (I)mmediate Bit in the DATA Chunk Header  . . . . . . . . . 3\n4.  Use Cases . . . . . . . . . . . . . . . . . . . . . . . . . . . 4\n  4.1.  Triggering at the Application Level . . . . . . . . . . . . 4\n  4.2.  Triggering at the SCTP Level  . . . . . . . . . . . . . . . 4\n5.  Procedures  . . . . . . . . . . . . . . . . . . . . . . . . . . 5\n  5.1.  Sender-Side Considerations  . . . . . . . . . . . . . . . . 5\n  5.2.  Receiver Side Considerations  . . . . . . . . . . . . . . . 5\n6.  Interoperability Considerations . . . . . . . . . . . . . . . . 5\n7.  Socket API Considerations . . . . . . . . . . . . . . . . . . . 5\n8.  IANA Considerations . . . . . . . . . . . . . . . . . . . . . . 6\n9.  Security Considerations . . . . . . . . . . . . . . . . . . . . 7\n10. Acknowledgments . . . . . . . . . . . . . . . . . . . . . . . . 7\n11. References  . . . . . . . . . . . . . . . . . . . . . . . . . . 7\n  11.1. Normative References  . . . . . . . . . . . . . . . . . . . 7\n  11.2. Informative References  . . . . . . . . . . . . . . . . . . 7",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "According to [RFC4960], the receiver of a DATA chunk should use delayed SACKs. This delay is completely controlled by the receiver of the DATA chunk and remains the default behavior.",
      "ja": "[RFC4960]によれば、データチャンクの受信機は、遅延袋を使用する必要があります。この遅延は、完全に、DATAチャンクの受信機によって制御され、デフォルトの動作のままです。"
    },
    {
      "indent": 3,
      "text": "In specific situations, the delaying of SACKs results in reduced performance of the protocol:",
      "ja": "特定の状況では、プロトコルの性能低下に袋の結果の遅延："
    },
    {
      "indent": 3,
      "text": "1. If such a situation can be detected by the receiver, the corresponding SACK can be sent immediately. For example, [RFC4960] recommends immediately sending the SACK if the receiver has detected message loss or message duplication.",
      "ja": "1.このような状況は、受信器によって検出することができる場合、対応するSACKを直ちに送信することができます。例えば、[RFC4960]は、受信機は、メッセージ損失またはメッセージの重複を検出した場合、すぐにSACKを送信することをお勧めします。"
    },
    {
      "indent": 3,
      "text": "2. However, if the situation can only be detected by the sender of the DATA chunk, [RFC4960] provides no method of avoiding a delay in sending the SACK. Examples of these situations include ones that require interaction with the application (e.g., applications using the SCTP_SENDER_DRY_EVENT, see Section 4.1) and ones that can be detected by the SCTP stack itself (e.g., closing the association, hitting window limits, or resetting streams, see Section 4.2).",
      "ja": "状況は唯一のデータチャンクの送信者によって検出することができる場合但し、[RFC4960]はSACKを送信における遅延を回避するいかなる方法を提供しません。これらの状況の例としては、アプリケーションとの対話を必要とするものが挙げられる（例えば、SCTP_SENDER_DRY_EVENTを使用するアプリケーションは、セクション4.1を参照）、（SCTPスタック自体によって検出することができるもの、例えば、アソシエーション、ウィンドウの制限を押す、またはストリームのリセットを閉じ、 ）4.2節を参照してください。"
    },
    {
      "indent": 3,
      "text": "To overcome the limitation described in the second case, this document describes a simple extension of the SCTP DATA chunk by defining a new flag, the \"I bit\". By setting this bit, the sender of a DATA chunk indicates that the corresponding SACK chunk should not be delayed.",
      "ja": "第二の場合で説明した制限を克服するために、このドキュメントは新しいフラグを定義することによって、SCTPデータチャンクの単純な拡張を記述し、「私は少し」。このビットを設定することにより、DATAチャンクの送信者は、対応するSACKチャンクが遅延されるべきでないことを示しています。"
    },
    {
      "indent": 0,
      "text": "2. Conventions",
      "section_title": true,
      "ja": "2.表記"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はあります[RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "3. The (I)mmediate Bit in the DATA Chunk Header",
      "section_title": true,
      "ja": "3.データチャンクのヘッダーに（即時ビット"
    },
    {
      "indent": 3,
      "text": "Figure 1 shows the extended DATA chunk.",
      "ja": "図1は、拡張データチャンクを示しています。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   Type = 0    |  Res  |I|U|B|E|           Length              |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                              TSN                              |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|        Stream Identifier      |     Stream Sequence Number    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                  Payload Protocol Identifier                  |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\\                                                               \\\n/                           User Data                           /\n\\                                                               \\\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 19,
      "text": "Figure 1: Extended DATA chunk format",
      "ja": "図1：拡張データチャンク形式"
    },
    {
      "indent": 3,
      "text": "The only difference between the DATA chunk in Figure 1 and the DATA chunk defined in [RFC4960] is the addition of the I bit in the flags field of the DATA chunk header.",
      "ja": "図1のデータチャンクと[RFC4960]で定義されたデータチャンクとの間の唯一の違いはデータチャンクヘッダのフラグフィールド内のIビットの付加です。"
    },
    {
      "indent": 3,
      "text": "[RFC4960] defines the Reserved field and specifies that these bits should be set to 0 by the sender and ignored by the receiver.",
      "ja": "[RFC4960]はReservedフィールドを定義し、これらのビットは送信者によって0に設定され、受信機によって無視されるべきことを指定します。"
    },
    {
      "indent": 0,
      "text": "4. Use Cases",
      "section_title": true,
      "ja": "4.ユースケース"
    },
    {
      "indent": 3,
      "text": "The setting of the I bit can either be triggered by the application using SCTP or by the SCTP stack itself. The following two subsections provide a non-exhaustive list of examples of how the I bit may be set.",
      "ja": "Iビットの設定は、いずれかのSCTPを使用するアプリケーションによって、またはSCTPスタック自体によってトリガすることができます。以下の2つのサブセクションには、Iビットをセットすることができる方法の例の非網羅的なリストを提供します。"
    },
    {
      "indent": 0,
      "text": "4.1. Triggering at the Application Level",
      "section_title": true,
      "ja": "4.1. アプリケーションレベルでのトリガ"
    },
    {
      "indent": 3,
      "text": "One example of a situation in which it may be desirable for an application to trigger the setting of the I bit involves the SCTP_SENDER_DRY_EVENT in the SCTP socket API [RFC6458]. Upper layers of SCTP that use the socket API as defined in [RFC6458] may subscribe to the SCTP_SENDER_DRY_EVENT to be notified as soon as no user data is outstanding. To avoid an unnecessary delay, the application can request that the I bit be set when sending the last user message before waiting for the event. This results in setting the I bit of the last DATA chunk corresponding to the user message; this is possible using the extension of the socket API described in Section 7.",
      "ja": "アプリケーションは、Iビットの設定をトリガすることが望ましい場合がある状況の一例は、SCTPソケットAPI [RFC6458]でSCTP_SENDER_DRY_EVENTを含みます。 [RFC6458]で定義されているソケットAPIを使用してSCTPの上層には、すぐにはユーザーデータが傑出していないと通知されるようにSCTP_SENDER_DRY_EVENTに加入することができます。イベントを待つ前に、最後のユーザーのメッセージを送信する際に、不要な遅延を回避するために、アプリケーションは、Iビットが設定されることを要求することができます。これは、ユーザ・メッセージに対応する最後のデータチャンクのIビットをセットすることになります。これは第7節で説明したソケットAPIの拡張機能を使用して可能です。"
    },
    {
      "indent": 0,
      "text": "4.2. Triggering at the SCTP Level",
      "section_title": true,
      "ja": "4.2.  SCTPレベルでのトリガ"
    },
    {
      "indent": 3,
      "text": "There are also situations in which the SCTP implementation can set the I bit without interacting with the upper layer.",
      "ja": "SCTP実装が上位層と相互作用することなく、Iビットを設定することが可能な状況もあります。"
    },
    {
      "indent": 3,
      "text": "If the association is in the SHUTDOWN-PENDING state, setting the I bit reduces the number of simultaneous associations for a busy server handling short-lived associations.",
      "ja": "協会はSHUTDOWN-PENDING状態になっている場合は、Iビットを設定すると、短命の関連を扱う忙しいサーバーの同時アソシエーションの数を減らします。"
    },
    {
      "indent": 3,
      "text": "Another case is where the sending of a DATA chunk fills the congestion or receiver window. Setting the I bit in these cases improves the throughput of the transfer.",
      "ja": "DATAチャンクの送信が輻輳又は受信ウィンドウを満たす場合、別の場合です。これらのケースでIビットを設定すると、転送のスループットを向上させます。"
    },
    {
      "indent": 3,
      "text": "If an SCTP association supports the SCTP Stream Reconfiguration extension defined in [RFC6525], the performance can be improved by setting the I bit when there are pending reconfiguration requests that require that there be no outstanding DATA chunks.",
      "ja": "SCTPアソシエーションは、[RFC6525]で定義されたSCTPストリーム再構成の拡張機能をサポートしている場合、パフォーマンスは全くの未処理データチャンクが存在しないことを要求する再構成要求が保留されている場合、Iビットを設定することによって改善することができます。"
    },
    {
      "indent": 0,
      "text": "5. Procedures",
      "section_title": true,
      "ja": "5.手順"
    },
    {
      "indent": 0,
      "text": "5.1. Sender-Side Considerations",
      "section_title": true,
      "ja": "5.1. 送信側の考慮事項"
    },
    {
      "indent": 3,
      "text": "Whenever the sender of a DATA chunk can benefit from the corresponding SACK chunk being sent back without delay, the sender MAY set the I bit in the DATA chunk header. Please note that why the sender has set the I bit is irrelevant to the receiver.",
      "ja": "DATAチャンクの送信者がバック遅延なく送信される対応するSACKチャンクから利益を得ることができるたびに、送信者はデータチャンクヘッダ内のIビットを設定することができます。送信者が設定した理由Iビットが受信機には無関係であることに注意してください。"
    },
    {
      "indent": 3,
      "text": "Reasons for setting the I bit include, but are not limited to (see Section 4 for the benefits):",
      "ja": "Iビットを設定するための理由は、（給付のセクション4を参照）が含まれ、これらに限定されません："
    },
    {
      "indent": 3,
      "text": "o The application requests to set the I bit of the last DATA chunk of a user message when providing the user message to the SCTP implementation (see Section 7).",
      "ja": "（セクション7参照）SCTP実装にユーザー・メッセージを提供する際に、ユーザメッセージの最後のデータチャンクのIビットを設定するためのアプリケーション要求O。"
    },
    {
      "indent": 3,
      "text": "o The sender is in the SHUTDOWN-PENDING state.",
      "ja": "O送信者はSHUTDOWN-PENDING状態になっています。"
    },
    {
      "indent": 3,
      "text": "o The sending of a DATA chunk fills the congestion or receiver window.",
      "ja": "DATAチャンクの送信oを輻輳又は受信ウィンドウを満たします。"
    },
    {
      "indent": 3,
      "text": "o The sending of an Outgoing SSN Reset Request Parameter or an SSN/ TSN Reset Request Parameter is pending, if the association supports the Stream Reconfiguration extension defined in [RFC6525].",
      "ja": "送信SSNリセットリクエストパラメータの送信、または関連付けが[RFC6525]で定義されたストリーム再構成の拡張機能をサポートしている場合/ TSNは、要求パラメータをリセットSSNは、保留されているO。"
    },
    {
      "indent": 0,
      "text": "5.2. Receiver Side Considerations",
      "section_title": true,
      "ja": "5.2. 受信機側の考慮事項"
    },
    {
      "indent": 3,
      "text": "Upon receipt of an SCTP packet containing a DATA chunk with the I bit set, the receiver SHOULD NOT delay the sending of the corresponding SACK chunk, i.e., the receiver SHOULD immediately respond with the corresponding SACK chunk.",
      "ja": "Iビットセットを有するデータチャンクを含むSCTPパケットを受信すると、受信機は、対応するSACKチャンクの送信を遅らせるべきではない、すなわち、受信機は直ちに対応SACKチャンクで応答すべきです。"
    },
    {
      "indent": 0,
      "text": "6. Interoperability Considerations",
      "section_title": true,
      "ja": "6.相互運用性に関する注意事項"
    },
    {
      "indent": 3,
      "text": "According to [RFC4960], the receiver of a DATA chunk with the I bit set should ignore this bit when it does not support the extension described in this document. Since the sender of the DATA chunk is able to handle this case, there is no requirement for negotiating the support of the feature described in this document.",
      "ja": "それは本書では説明拡張をサポートしていない場合、[RFC4960]によると、Iビットが設定されたDATAチャンクの受信機は、このビットを無視するべきです。 DATAチャンクの送信者がこのケースを扱うことができるので、このドキュメントで説明する機能のサポートを交渉する必要はありません。"
    },
    {
      "indent": 0,
      "text": "7. Socket API Considerations",
      "section_title": true,
      "ja": "7.ソケットAPIの考慮事項"
    },
    {
      "indent": 3,
      "text": "This section describes how the socket API defined in [RFC6458] is extended to provide a way for the application to set the I bit.",
      "ja": "このセクションでは、[RFC6458]で定義されたソケットAPIは、Iビットを設定するためのアプリケーションのための方法を提供するために拡張される方法について説明します。"
    },
    {
      "indent": 3,
      "text": "Please note that this section is informational only.",
      "ja": "このセクションは情報提供のみであることに注意してください。"
    },
    {
      "indent": 3,
      "text": "A socket API implementation based on [RFC6458] needs to be extended to allow the application to set the I bit of the last DATA chunk when sending each user message.",
      "ja": "[RFC6458]に基づいて、ソケットAPIの実装では、各ユーザのメッセージを送信するとき、アプリケーションは、最後のデータチャンクのIビットを設定することができるように拡張される必要があります。"
    },
    {
      "indent": 3,
      "text": "This can be done by setting a flag called SCTP_SACK_IMMEDIATELY in the snd_flags field of the struct sctp_sndinfo structure when using sctp_sendv() or sendmsg(). If the deprecated struct sctp_sndrcvinfo structure is used instead when calling sctp_send(), sctp_sendx(), or sendmsg(), the SCTP_SACK_IMMEDIATELY flag can be set in the sinfo_flags field. When using the deprecated function sctp_sendmsg(), the SCTP_SACK_IMMEDIATELY flag can be in the flags parameter.",
      "ja": "これはsctp_sendv（）またはsendmsgの（）を使用する場合、構造体sctp_sndinfo構造のsnd_flagsフィールドにSCTP_SACK_IMMEDIATELYと呼ばれるフラグを設定することによって行うことができます。非推奨の構造体にsctp_sndrcvinfo構造が代わりに使用された場合（）、sctp_sendx（）、またはsendmsgの（）sctp_sendを呼び出すとき、SCTP_SACK_IMMEDIATELYフラグがsinfo_flagsフィールドに設定することができます。 ）（非推奨関数sctp_sendmsgを使用する場合、SCTP_SACK_IMMEDIATELYフラグがフラグパラメータであってもよいです。"
    },
    {
      "indent": 0,
      "text": "8. IANA Considerations",
      "section_title": true,
      "ja": "8. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "Following the chunk flag registration procedure defined in [RFC6096], IANA has registered a new bit, the I bit, for the DATA chunk.",
      "ja": "[RFC6096]で定義されたチャンクフラグ登録手順に従い、IANAはDATAチャンクのため、新たなビット、Iビットが登録されています。"
    },
    {
      "indent": 3,
      "text": "The \"Chunk Flags\" registry for SCTP has been updated as described in the following table.",
      "ja": "次の表に示すようにSCTPのための「チャンクフラグ」レジストリが更新されました。"
    },
    {
      "indent": 29,
      "text": "DATA Chunk Flags",
      "ja": "データチャンクフラグ"
    },
    {
      "indent": 12,
      "text": "+------------------+-----------------+-----------+\n| Chunk Flag Value | Chunk Flag Name | Reference |\n+------------------+-----------------+-----------+\n| 0x01             | E bit           | [RFC4960] |\n| 0x02             | B bit           | [RFC4960] |\n| 0x04             | U bit           | [RFC4960] |\n| 0x08             | I bit           | [RFC7053] |\n| 0x10             | Unassigned      |           |\n| 0x20             | Unassigned      |           |\n| 0x40             | Unassigned      |           |\n| 0x80             | Unassigned      |           |\n+------------------+-----------------+-----------+",
      "raw": true
    },
    {
      "indent": 0,
      "text": "9. Security Considerations",
      "section_title": true,
      "ja": "9.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "See [RFC4960] for general security considerations for SCTP. In addition, a malicious sender can force its peer to send packets containing a SACK chunk for each received packet containing DATA chunks instead of every other received packet containing DATA chunks. This could impact the network, resulting in more packets sent on the network, or the peer, because the generating and sending of the packets has some processing cost. However, the additional packets can only contain the simplest SACK chunk (no gap reports, no duplicate TSNs), since in cases of packet drops or reordering in the network a SACK chunk would be sent immediately anyway. Therefore, this does not introduce a significant additional processing cost on the receiver side. This also does not result in more traffic in the network, because a receiver sending a SACK for every packet is already permitted.",
      "ja": "SCTPのための一般的なセキュリティ上の考慮事項については、[RFC4960]を参照してください。また、悪質な送信者ではなく、他のすべての受信パケットを含むデータチャンクのデータチャンクを含む各受信パケットのためのSACKチャンクを含むパケットを送信するピアを強制することができます。パケットの生成及び送信は、いくつかの処理コストを有するので、これは、ネットワーク上で送信される複数のパケットをもたらすネットワーク、またはピアに影響を与える可能性があります。しかし、追加のパケットは、パケットの例で低下したり、ネットワーク内の並べ替えので、SACKチャンクはすぐにとにかく送られる、（隙間は、重複するTSNを報告していない）最も簡単なSACKチャンクのみを含めることができます。したがって、これは、受信側の大幅な追加の処理コストを導入しません。パケットごとにSACKを送信する受信機がすでに許可されているので、これはまた、ネットワークでより多くのトラフィックにはなりません。"
    },
    {
      "indent": 0,
      "text": "10. Acknowledgments",
      "section_title": true,
      "ja": "10.謝辞"
    },
    {
      "indent": 3,
      "text": "The authors wish to thank Mark Allmann, Brian Bidulock, David Black, Anna Brunstrom, Gorry Fairhurst, Janardhan Iyengar, Kacheong Poon, and Michael Welzl for their invaluable comments.",
      "ja": "作者は彼らの貴重なコメントをマークAllmann、ブライアンBidulock、デビッドブラック、アンナBrunstrom、Gorry Fairhurst、Janardhanアイアンガー、Kacheongプーン、そしてマイケルWelzlに感謝したいです。"
    },
    {
      "indent": 0,
      "text": "11. References",
      "section_title": true,
      "ja": "11.参考文献"
    },
    {
      "indent": 0,
      "text": "11.1. Normative References",
      "section_title": true,
      "ja": "11.1. 引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC4960] Stewart, R., \"Stream Control Transmission Protocol\", RFC 4960, September 2007.",
      "ja": "[RFC4960]スチュワート、R.、 \"ストリーム制御伝送プロトコル\"、RFC 4960、2007年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC6096] Tuexen, M. and R. Stewart, \"Stream Control Transmission Protocol (SCTP) Chunk Flags Registration\", RFC 6096, January 2011.",
      "ja": "[RFC6096] Tuexen、M.とR.スチュワート、 \"ストリーム制御伝送プロトコル（SCTP）チャンクフラグの登録\"、RFC 6096、2011年1月。"
    },
    {
      "indent": 0,
      "text": "11.2. Informative References",
      "section_title": true,
      "ja": "11.2. 参考文献"
    },
    {
      "indent": 3,
      "text": "[RFC6458] Stewart, R., Tuexen, M., Poon, K., Lei, P., and V. Yasevich, \"Sockets API Extensions for the Stream Control Transmission Protocol (SCTP)\", RFC 6458, December 2011.",
      "ja": "[RFC6458]スチュワート、R.、Tuexen、M.、プーン、K.、レイ、P.、およびV. Yasevich、RFC 6458、2011年12月 \"ストリーム制御伝送プロトコル（SCTP）のためのソケットAPI拡張\"。"
    },
    {
      "indent": 3,
      "text": "[RFC6525] Stewart, R., Tuexen, M., and P. Lei, \"Stream Control Transmission Protocol (SCTP) Stream Reconfiguration\", RFC 6525, February 2012.",
      "ja": "[RFC6525]スチュワート、R.、Tuexen、M.、およびP.レイ、 \"ストリーム制御伝送プロトコル（SCTP）ストリーム再構成\"、RFC 6525、2012年2月。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Michael Tuexen Muenster University of Applied Sciences Stegerwaldstr. 39 48565 Steinfurt DE",
      "ja": "応用科学StegerwaldstrのマイケルTuexenミュンスター大学。 39 48565シュタインフルトDE"
    },
    {
      "indent": 3,
      "text": "EMail: tuexen@fh-muenster.de",
      "ja": "メールアドレス：tuexen@fh-muenster.de"
    },
    {
      "indent": 3,
      "text": "Irene Ruengeler Muenster University of Applied Sciences Stegerwaldstr. 39 48565 Steinfurt DE",
      "ja": "応用科学StegerwaldstrのアイリーンRüngelerミュンスター大学。 39 48565 Steinsfurt DE"
    },
    {
      "indent": 3,
      "text": "EMail: i.ruengeler@fh-muenster.de",
      "ja": "メールアドレス：i.ruengeler@fh-muenster.de"
    },
    {
      "indent": 3,
      "text": "Randall R. Stewart Adara Networks Chapin, SC 29036 US",
      "ja": "ランドールR.スチュワートアダラネットワークチャピン、SC 29036米国"
    },
    {
      "indent": 3,
      "text": "EMail: randall@lakerest.net",
      "ja": "メールアドレス：randall@lakerest.net"
    }
  ]
}