{
  "title": {
    "text": "RFC 7671 - The DNS-Based Authentication of Named Entities (DANE) Protocol: Updates and Operational Guidance",
    "ja": "RFC 7671 - 更新と運用ガイダンス：名前付きエンティティ（DANE）プロトコルのDNSベースの認証"
  },
  "number": 7671,
  "created_at": "2019-11-01 00:41:13.445438+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                       V. Dukhovni\nRequest for Comments: 7671                                     Two Sigma\nUpdates: 6698                                                W. Hardaker\nCategory: Standards Track                                        Parsons\nISSN: 2070-1721                                             October 2015",
      "raw": true
    },
    {
      "indent": 4,
      "text": "The DNS-Based Authentication of Named Entities (DANE) Protocol:\n                Updates and Operational Guidance",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document clarifies and updates the DNS-Based Authentication of Named Entities (DANE) TLSA specification (RFC 6698), based on subsequent implementation experience. It also contains guidance for implementers, operators, and protocol developers who want to use DANE records.",
      "ja": "その後の実装経験に基づいて、このドキュメントは明確にし、名前付きエンティティ（DANE）TLSA仕様（RFC 6698）のDNSベースの認証を更新し、。また、DANEレコードを使用する実装者、事業者、およびプロトコルの開発者のためのガイダンスが含まれています。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 5741のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc7671.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc7671で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2015 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2015 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................3\n   1.1. Terminology ................................................4\n2. DANE TLSA Record Overview .......................................5\n   2.1. Example TLSA Record ........................................6\n3. DANE TLS Requirements ...........................................6\n4. DANE Certificate Usage Selection Guidelines .....................7\n   4.1. Opportunistic Security and PKIX Usages .....................7\n   4.2. Interaction with Certificate Transparency ..................8\n   4.3. Switching from/to PKIX-TA/EE to/from DANE-TA/EE ............9\n5. Certificate-Usage-Specific DANE Updates and Guidelines ..........9\n   5.1. Certificate Usage DANE-EE(3) ...............................9\n   5.2. Certificate Usage DANE-TA(2) ..............................11\n   5.3. Certificate Usage PKIX-EE(1) ..............................15\n   5.4. Certificate Usage PKIX-TA(0) ..............................15\n6. Service Provider and TLSA Publisher Synchronization ............16\n7. TLSA Base Domain and CNAMEs ....................................18\n8. TLSA Publisher Requirements ....................................19\n   8.1. Key Rollover with Fixed TLSA Parameters ...................20\n   8.2. Switching to DANE-TA(2) from DANE-EE(3) ...................21\n   8.3. Switching to New TLSA Parameters ..........................22\n   8.4. TLSA Publisher Requirements: Summary ......................23\n9. Digest Algorithm Agility .......................................23\n10. General DANE Guidelines .......................................25\n   10.1. DANE DNS Record Size Guidelines ..........................25\n   10.2. Certificate Name Check Conventions .......................26\n   10.3. Design Considerations for Protocols Using DANE ...........27\n11. Note on DNSSEC Security .......................................28\n12. Summary of Updates to RFC 6698 ................................29\n13. Operational Considerations ....................................29\n14. Security Considerations .......................................30\n15. References ....................................................30\n   15.1. Normative References .....................................30\n   15.2. Informative References ...................................32\nAcknowledgements ..................................................33\nAuthors' Addresses ................................................33",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "The DNS-Based Authentication of Named Entities (DANE) specification [RFC6698] introduces the DNS \"TLSA\" resource record (RR) type (\"TLSA\" is not an acronym). TLSA records associate a certificate or a public key of an end-entity or a trusted issuing authority with the corresponding Transport Layer Security (TLS) [RFC5246] or Datagram Transport Layer Security (DTLS) [RFC6347] transport endpoint. DANE relies on the DNS Security Extensions (DNSSEC) [RFC4033]. DANE TLSA records validated by DNSSEC can be used to augment or replace the use of trusted public Certification Authorities (CAs).",
      "ja": "名前付きエンティティのDNSベース認証（DANE）仕様[RFC6698]（「TLSA」は頭字語ではない）DNS「TLSA」リソースレコード（RR）型導入します。 TLSAレコードは、証明書またはエンドエンティティの公開鍵または対応するトランスポート層セキュリティ（TLS）[RFC5246]またはデータグラムトランスポート層セキュリティ（DTLS）[RFC6347]のトランスポートエンドポイントとの信頼発行機関を関連付けます。 DANEはDNSセキュリティ拡張機能（DNSSEC）[RFC4033]に依存しています。 DNSSECによって検証DANE TLSAレコードが増補または信頼できる公共の証明機関（CA）の使用を置き換えるために使用することができます。"
    },
    {
      "indent": 3,
      "text": "The TLS and DTLS protocols provide secured TCP and UDP communication, respectively, over IP. In the context of this document, channel security is assumed to be provided by TLS or DTLS. By convention, \"TLS\" will be used throughout this document; unless otherwise specified, the text applies equally well to DTLS over UDP. Used without authentication, TLS provides protection only against eavesdropping through its use of encryption. With authentication, TLS also protects the transport against man-in-the-middle (MITM) attacks.",
      "ja": "TLSとDTLSプロトコルはIP上で、それぞれ、セキュアなTCPおよびUDP通信を提供します。この文書の文脈では、チャネルのセキュリティは、TLSまたはDTLSによって提供されているものとします。慣例により、「TLS」は、この文書全体で使用されます。特に指定がない限り、テキストはUDP上でDTLSにも同様に適用されます。認証なしで使用され、TLS暗号化の使用を通じてのみ盗聴に対する保護を提供します。認証では、TLSものman-in-the-middle（MITM）攻撃に対する輸送を保護します。"
    },
    {
      "indent": 3,
      "text": "[RFC6698] defines three TLSA record fields: the first with four possible values, the second with two, and the third with three. These yield 24 distinct combinations of TLSA record types. This document recommends a smaller set of best-practice combinations of these fields to simplify protocol design, implementation, and deployment.",
      "ja": "、4つの可能な値を持つ最初の二つを有する第二、三と第三：[RFC6698]は3つのTLSAレコードフィールドを定義します。これらはTLSAレコード・タイプの24個の異なる組み合わせを得ます。この文書では、プロトコル設計、実装、および展開を簡素化するために、これらのフィールドのベストプラクティスの組み合わせの小さなセットを推奨しています。"
    },
    {
      "indent": 3,
      "text": "This document explains and recommends DANE-specific strategies to simplify \"virtual hosting\", where a single Service Provider transport endpoint simultaneously supports multiple hosted Customer Domains.",
      "ja": "この文書は、単一のサービスプロバイダ輸送エンドポイントは、同時に複数のホストされたお客様のドメインをサポートしています「バーチャルホスティング」を、簡素化するDANE-具体的な戦略を説明し、推奨しています。"
    },
    {
      "indent": 3,
      "text": "Other related documents that build on [RFC6698] are [RFC7673] and [RFC7672].",
      "ja": "[RFC6698]の上に構築その他の関連文書は、[RFC7673]と[RFC7672]です。"
    },
    {
      "indent": 3,
      "text": "Section 12 summarizes the normative updates this document makes to [RFC6698].",
      "ja": "第12節は、この文書は[RFC6698]になります規範的なアップデートをまとめたもの。"
    },
    {
      "indent": 0,
      "text": "1.1. Terminology",
      "section_title": true,
      "ja": "1.1。用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "キーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、 \"SHALL\"、 \"SHOULD\"、 \"ないもの\"、 \"推奨\" \"ない（SHOULD NOT）\"、 \"MAY\"、 \"推奨NOT\"、および「OPTIONAL 「本書では[RFC2119]で説明されるように解釈されるべきです。"
    },
    {
      "indent": 3,
      "text": "The following terms are used throughout this document:",
      "ja": "以下の用語は、この文書全体で使用されています。"
    },
    {
      "indent": 3,
      "text": "Web PKI: The Public Key Infrastructure (PKI) model employed by browsers to authenticate web servers. This employs a set of trusted public CAs to vouch for the authenticity of public keys associated with a particular party (the subject).",
      "ja": "ウェブPKI：Webサーバを認証するためにブラウザが採用公開鍵インフラストラクチャ（PKI）モデル。これは、特定の政党（サブジェクト）に関連付けられている公開鍵の信憑性を保証するために、信頼できる公共のCAのセットを採用しています。"
    },
    {
      "indent": 3,
      "text": "Service Provider: A company or organization that offers to host a service on behalf of the owner of a Customer Domain. The original domain name associated with the service often remains under the control of the customer. Connecting applications may be directed to the Service Provider via a redirection RR. Example redirection records include MX, SRV, and CNAME. The Service Provider frequently provides services for many customers and needs to ensure that the TLS credentials presented to connecting applications authenticate it as a valid server for the requested domain.",
      "ja": "サービスプロバイダー：お客様のドメインの所有者に代わってサービスをホストするために提供する企業や組織。サービスに関連付けられている元のドメイン名は、多くの場合、顧客の管理下に残っています。接続するアプリケーションは、リダイレクトRRを経由してサービスプロバイダーを対象とすることができます。例のリダイレクトレコードはMX、SRV、およびCNAMEが含まれます。サービスプロバイダは、頻繁に多くの顧客にサービスを提供し、接続するアプリケーションに提示TLS証明書が要求されたドメインの有効なサーバーとしてそれを認証することを確認する必要があります。"
    },
    {
      "indent": 3,
      "text": "Customer Domain: As described above, a TLS client may be interacting with a service that is hosted by a third party. This document refers to the domain name used to locate the service (prior to any redirection) as the \"Customer Domain\".",
      "ja": "お客様のドメイン：前述したように、TLSクライアントは、第三者によってホストされているサービスと対話することができます。この文書では、「お客様ドメイン」として（前の任意のリダイレクトに）サービスを見つけるために使用されるドメイン名を参照します。"
    },
    {
      "indent": 3,
      "text": "TLSA Publisher: The entity responsible for publishing a TLSA record within a DNS zone. This zone will be assumed DNSSEC-signed and validatable to a trust anchor (TA), unless otherwise specified. If the Customer Domain is not outsourcing its DNS service, the TLSA Publisher will be the customer itself. Otherwise, the TLSA Publisher may be the operator of the outsourced DNS service.",
      "ja": "TLSA出版社：DNSゾーン内TLSAレコードを公開する責任主体。特に断りのない限り、このゾーンは、トラストアンカー（TA）にDNSSEC署名とvalidatableものとします。お客様のドメインがDNSサービスをアウトソーシングされていない場合は、TLSA出版社は、顧客自身になります。それ以外の場合は、TLSA Publisherは外部委託されたDNSサービスの事業者かもしれません。"
    },
    {
      "indent": 3,
      "text": "Public key: The term \"public key\" is shorthand for the subjectPublicKeyInfo component of a PKIX [RFC5280] certificate.",
      "ja": "公開鍵：用語「公開鍵」はPKIX [RFC5280]証明書のSubjectPublicKeyInfoで部品の省略形です。"
    },
    {
      "indent": 3,
      "text": "SNI: The Server Name Indication (SNI) TLS protocol extension allows a TLS client to request a connection to a particular service name of a TLS server ([RFC6066], Section 3). Without this TLS extension, a TLS server has no choice but to offer a certificate with a default list of server names, making it difficult to host multiple Customer Domains at the same IP-address-based TLS service endpoint (i.e., provide \"secure virtual hosting\").",
      "ja": "SNI：サーバ名表示（SNI）TLSプロトコル拡張は、TLSクライアントはTLSサーバー（[RFC6066]、セクション3）の特定のサービス名への接続を要求することができます。このTLS拡張がなければ、TLSサーバは（すなわち、仮想確保」を提供し、それが困難に同じIPアドレスベースのTLSサービスのエンドポイントに複数の顧客のドメインをホストすること、サーバ名のデフォルトリストで証明書を提供するしかありません）「ホスティング。"
    },
    {
      "indent": 3,
      "text": "TLSA parameters: In [RFC6698], the TLSA record is defined to consist of four fields. The first three of these are numeric parameters that specify the meaning of the data in the fourth and final field. This document refers to the first three fields as \"TLSA parameters\", or sometimes just \"parameters\" when obvious from context.",
      "ja": "TLSAパラメータ：[RFC6698]には、TLSAレコードは、4つのフィールドから成ると定義されます。これらの最初の3つは第四及び最終フィールドのデータの意味を指定する数値パラメータです。この文書では、文脈から明らか時には「TLSAパラメータ」、または単に「パラメータ」として最初の3つのフィールドを指します。"
    },
    {
      "indent": 3,
      "text": "TLSA base domain: Per Section 3 of [RFC6698], TLSA records are stored at a DNS domain name that is a combination of a port and protocol prefix and a \"base domain\". In [RFC6698], the \"base domain\" is the fully qualified domain name of the TLS server. This document modifies the TLSA record lookup strategy to prefer the fully CNAME-expanded name of the TLS server, provided that expansion is \"secure\" (DNSSEC validated) at each stage of the expansion, and TLSA records are published for this fully expanded name. Thus, the \"TLSA base domain\" is either the fully CNAME-expanded TLS server name or otherwise the initial fully qualified TLS server name, whichever is used in combination with a port and protocol prefix to obtain the TLSA RRset.",
      "ja": "TLSAベースドメイン：[RFC6698]のセクション3当たり、TLSAレコードはポートとプロトコルの接頭辞と「基本ドメイン」の組み合わせであるDNSドメイン名で保存されています。 [RFC6698]で、「基本ドメインは、」TLSサーバーの完全修飾ドメイン名です。この文書では、拡張の各段階で（DNSSECが検証）「安全な」された拡張を提供し、TLSサーバの完全CNAME-拡張名を好むTLSAレコード検索戦略を変更し、TLSAレコードは、この完全に拡張された名前のために公開されています。したがって、「TLSAベースドメインは、」完全CNAME拡張TLSサーバ名またはその他TLSA RRセットを得るために、ポートおよびプロトコルのプレフィックスと組み合わせて使用​​されているいずれかの初期の完全修飾TLSサーバー名、のいずれかです。"
    },
    {
      "indent": 0,
      "text": "2. DANE TLSA Record Overview",
      "section_title": true,
      "ja": "2. DANE TLSA録音の概要"
    },
    {
      "indent": 3,
      "text": "DANE TLSA [RFC6698] specifies a protocol for publishing TLS server certificate associations via DNSSEC [RFC4033] [RFC4034] [RFC4035]. DANE TLSA records consist of four fields. The record type is determined by the values of the first three fields, which this document refers to as the \"TLSA parameters\" to distinguish them from the fourth and last field. The numeric values of these parameters were given symbolic names in [RFC7218]. The four fields are as follows:",
      "ja": "DANE TLSA [RFC6698]はDNSSEC [RFC4033]、[RFC4034]、[RFC4035]を介して、TLSサーバー証明書の関連付けを公開するためのプロトコルを指定します。 DANE TLSAレコードには次の4つのフィールドで構成されています。レコードタイプは、このドキュメントが第四および最後のフィールドと区別するために「TLSAパラメータ」ともいう、最初の3つのフィールドの値によって決定されます。これらのパラメータの数値は、[RFC7218]のシンボル名を与えられました。以下のような4つのフィールドは、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "The Certificate Usage field: Section 2.1.1 of [RFC6698] specifies four values: PKIX-TA(0), PKIX-EE(1), DANE-TA(2), and DANE-EE(3). There is an additional private-use value: PrivCert(255), which, given its private scope, shall not be considered further in this document. All other values are reserved for use by future specifications.",
      "ja": "証明書の使用法の分野：PKIX-TA（0）、PKIX-EE（1）、DANE-TA（2）、及びDANE-EE（3）：[RFC6698]のセクション2.1.1は、4つの値を指定します。 PrivCert（255）、そのプライベート範囲を指定して、この文書でさらに考慮されてはならない、：追加の私的利用価値があります。他のすべての値は、将来の仕様で使用するために予約されています。"
    },
    {
      "indent": 3,
      "text": "The Selector field: Section 2.1.2 of [RFC6698] specifies two values: Cert(0) and SPKI(1). There is an additional private-use value: PrivSel(255). All other values are reserved for use by future specifications.",
      "ja": "セレクタフィールド：証明書（0）とSPKI（1）：[RFC6698]のセクション2.1.2は、2つの値を指定します。 PrivSel（255）：追加の私的利用価値があります。他のすべての値は、将来の仕様で使用するために予約されています。"
    },
    {
      "indent": 3,
      "text": "The Matching Type field: Section 2.1.3 of [RFC6698] specifies three values: Full(0), SHA2-256(1), and SHA2-512(2). There is an additional private-use value: PrivMatch(255). All other values are reserved for use by future specifications.",
      "ja": "マッチングタイプフィールド：フル（0）、SHA2-256（1）、及びSHA2-512（2）：[RFC6698]のセクション2.1.3の3つの値を指定します。 PrivMatch（255）：追加の私的利用価値があります。他のすべての値は、将来の仕様で使用するために予約されています。"
    },
    {
      "indent": 3,
      "text": "The Certificate Association Data field: See Section 2.1.4 of [RFC6698]. This field stores the full value or digest of the certificate or subject public key as determined by the matching type and selector, respectively.",
      "ja": "証明書協会のデータフィールド：[RFC6698]のセクション2.1.4を参照してください。このフィールドは、完全な値を格納するか、それぞれ、マッチングタイプ及び選択によって決定されるように証明書またはサブジェクト公開鍵のダイジェスト。"
    },
    {
      "indent": 3,
      "text": "In the Matching Type field, of the two digest algorithms -- SHA2-256(1) and SHA2-512(2) -- as of the time of this writing, only SHA2-256(1) is mandatory to implement. Clients SHOULD implement SHA2-512(2), but servers SHOULD NOT exclusively publish SHA2-512(2) digests. The digest algorithm agility protocol defined in Section 9 SHOULD be used by clients to decide how to process TLSA RRsets that employ multiple digest algorithms. Server operators MUST publish TLSA RRsets that are compatible (see Section 8) with digest algorithm agility (Section 9).",
      "ja": "マッチングTypeフィールドでは、二つのダイジェストアルゴリズム -  SHA2-256を（1）とSHA2-512（2） - これを書いている時のように、唯一SHA2-256（1）を実装することは必須です。クライアントは、（2）SHA2-512を実装する必要がありますが、サーバーは、専用のSHA2-512（2）ダイジェストを公開すべきではありません。第9条に規定されたダイジェストアルゴリズムアジリティプロトコルは、複数のダイジェストアルゴリズムを使用TLSAのRRセットを処理する方法を決定するためにクライアントによって使用されるべきです。サーバーオペレータは、ダイジェストアルゴリズムの俊敏性（第9節）と（セクション8を参照）互換性のあるTLSAのRRセットを公開する必要があります。"
    },
    {
      "indent": 0,
      "text": "2.1. Example TLSA Record",
      "section_title": true,
      "ja": "2.1。例TLSA録音"
    },
    {
      "indent": 3,
      "text": "In the example TLSA record below, the TLSA certificate usage is DANE-TA(2), the selector is Cert(0), and the matching type is SHA2-256(1). The last field is the Certificate Association Data field, which in this case contains the SHA2-256 digest of the server certificate.",
      "ja": "以下の例TLSAレコードに、TLSA証明書の使用はDANE-TA（2）、セレクタが証明書である（0）、及びマッチングタイプはSHA2-256である（1）。最後のフィールドは、この場合には、サーバ証明書のSHA2-256ダイジェストが含まれている証明書協会のデータフィールド、です。"
    },
    {
      "indent": 3,
      "text": "_25._tcp.mail.example.com. IN TLSA 2 0 1 ( E8B54E0B4BAA815B06D3462D65FBC7C0 CF556ECCF9F5303EBFBB77D022F834C0 )",
      "ja": "_25._tcp.mail.example.com。 TLSA IN 2 0 1（E8B54E0B4BAA815B06D3462D65FBC7C0 CF556ECCF9F5303EBFBB77D022F834C0）"
    },
    {
      "indent": 0,
      "text": "3. DANE TLS Requirements",
      "section_title": true,
      "ja": "3. DANE TLSの要件"
    },
    {
      "indent": 3,
      "text": "[RFC6698] does not discuss what versions of TLS are required when using DANE records. This document specifies that TLS clients that support DANE/TLSA MUST support at least TLS 1.0 and SHOULD support TLS 1.2 or later.",
      "ja": "[RFC6698]はDANEレコードを使用する場合に必要とされるTLSのどのバージョンについては説明しません。この文書では、DANE / TLSAをサポートするTLSクライアントが少なくともTLS 1.0をサポートしなければならないし、TLS 1.2以降をサポートするように指定します。"
    },
    {
      "indent": 3,
      "text": "TLS clients using DANE MUST support the SNI extension of TLS [RFC6066]. Servers MAY support SNI and respond with a matching certificate chain but MAY also ignore SNI and respond with a default certificate chain. When a server supports SNI but is not configured with a certificate chain that exactly matches the client's SNI extension, the server SHOULD respond with another certificate chain (a default or closest match). This is because clients might support more than one server name but can only put a single name in the SNI extension.",
      "ja": "DANEを使用してTLSクライアントはTLS [RFC6066]のSNI拡張をサポートしなければなりません。サーバはSNIをサポートし、一致する証明書チェーンで応答だけでなく、SNIを無視し、デフォルトの証明書チェーンで応答することができるかもしれません。サーバはSNIをサポートしていますが、正確に、クライアントのSNIの拡張子に一致する証明書チェーンを使用して構成されていない場合、サーバーは、別の証明書チェーン（デフォルトまたは最も近い一致）で応答する必要があります。クライアントが複数のサーバー名をサポートするかもしれませんが、唯一のSNI拡張に単一の名前を入れることができるからです。"
    },
    {
      "indent": 0,
      "text": "4. DANE Certificate Usage Selection Guidelines",
      "section_title": true,
      "ja": "4. DANE証明書の用途の選択のガイドライン"
    },
    {
      "indent": 3,
      "text": "As mentioned in Section 2, the TLSA Certificate Usage field takes one of four possible values. With PKIX-TA(0) and PKIX-EE(1), the validation of peer certificate chains requires additional preconfigured CA TAs that are mutually trusted by the operators of the TLS server and client. With DANE-TA(2) and DANE-EE(3), no preconfigured CA TAs are required and the published DANE TLSA records are sufficient to verify the peer's certificate chain.",
      "ja": "第2節で述べたように、TLSA証明書の使用分野は、4つの可能な値のいずれかをとります。 PKIX-TA（0）とPKIX-EEで（1）、ピア証明書チェーンの検証は、相互TLSサーバとクライアントの事業者から信頼されている追加の事前構成済みのCAのTAが必要です。 DANE-TA（2）とDANE-EE（3）、何ら事前設定されたCAのTAが必要とされず、公開DANE TLSAレコードは、ピアの証明書チェーンを検証するのに十分です。"
    },
    {
      "indent": 3,
      "text": "Standards for application protocols that employ DANE TLSA can specify more specific guidance than [RFC6698] or this document. Such application-specific standards need to carefully consider which set of DANE certificate usages to support. Simultaneous support for all four usages is NOT RECOMMENDED for DANE clients. When all four usages are supported, an attacker capable of compromising the integrity of DNSSEC needs only to replace the server's TLSA RRset with one that lists suitable DANE-EE(3) or DANE-TA(2) records, effectively bypassing any added verification via public CAs. In other words, when all four usages are supported, PKIX-TA(0) and PKIX-EE(1) offer only illusory incremental security over DANE-TA(2) and DANE-EE(3).",
      "ja": "DANE TLSAを採用するアプリケーションプロトコルの標準規格は、[RFC6698]または本書より具体的な指針を指定することができます。このようなアプリケーション固有の基準は慎重にどのDANE証明書使用のセットをサポートするために検討する必要があります。 4つのすべての用途のための同時サポートがDANEクライアントには推奨されません。すべての4つの用法がサポートされている場合は、DNSSECの完全性を損なうことのできる攻撃者は、適切なDANE-EEを示しています1で、サーバーのTLSA RRセットを交換する必要がある（3）またはDANE-TA（2）レコード、効果的に介して、任意の追加検証をバイパスパブリックCA。言い換えれば、すべての4つの用途がサポートされ、PKIX-TA（0）とPKIX-EEは、（1）DANE-TA（2）とDANE-EE（3）上のみ幻想増分セキュリティを提供します。"
    },
    {
      "indent": 3,
      "text": "Designs in which clients support just the DANE-TA(2) and DANE-EE(3) certificate usages are RECOMMENDED. With DANE-TA(2) and DANE-EE(3), clients don't need to track a large changing list of X.509 TAs in order to successfully authenticate servers whose certificates are issued by a CA that is brand new or not widely trusted.",
      "ja": "クライアントは、（3）証明書の使用が推奨されているだけDANE-TA（2）とDANE-EEをサポートする設計。 DANE-TA（2）とDANE-EEは、（3）、クライアントが成功した証明書新しいかそうでないCAによって発行されているサーバーを認証するために、X.509のTAの大きな変化リストを追跡する必要はありませんで広く信頼されました。"
    },
    {
      "indent": 3,
      "text": "The DNSSEC TLSA records for servers MAY include both sets of usages if the server needs to support a mixture of clients, some supporting one pair of usages and some the other.",
      "ja": "サーバはクライアントの混合物、使用法の一部支援1組といくつかの他のをサポートする必要がある場合は、サーバのためのDNSSEC TLSAレコードは、使用法の両方のセットを含むかもしれません。"
    },
    {
      "indent": 0,
      "text": "4.1. Opportunistic Security and PKIX Usages",
      "section_title": true,
      "ja": "4.1。日和見セキュリティとPKIX用途"
    },
    {
      "indent": 3,
      "text": "When the client's protocol design is based on \"Opportunistic Security\" (OS) [RFC7435] and the use of authentication is based on the presence of server TLSA records, it is especially important to avoid the PKIX-EE(1) and PKIX-TA(0) certificate usages.",
      "ja": "クライアントのプロトコルの設計は「日和見セキュリティ」（OS）[RFC7435]に基づいており、認証の使用は、サーバTLSAレコードの存在に基づいている場合、PKIX-EE（1）とPKIX-TAを避けるために特に重要です（0）証明書の使用。"
    },
    {
      "indent": 3,
      "text": "When authenticated TLS is used opportunistically based on the presence of DANE TLSA records and no secure TLSA records are present, unauthenticated TLS is used if possible, and if TLS is not possible, perhaps even cleartext. However, if usable secure TLSA records are published, then authentication MUST succeed. Also, outside the browser space, there is no preordained canon of trusted CAs, and in any case there is no security advantage in using PKIX-TA(0) or",
      "ja": "認証TLSが日和見DANE TLSAレコードなしセキュアTLSAレコードの存在に基づいて使用される場合、可能な場合、非認証TLSが存在使用されており、TLSが可能、おそらく平文でない場合。使用可能な安全なTLSAレコードが公開されている場合は、認証が成功しなければなりません。また、ブラウザ空間外、信頼できるCAのないpreordainedキヤノンは存在せず、どのような場合に使用してもセキュリティ上の利点が存在しないPKIX-TA（0）または"
    },
    {
      "indent": 3,
      "text": "PKIX-EE(1) when the DANE-TA(2) and DANE-EE(3) usages are also supported (as an attacker who can compromise DNS can replace the former with the latter).",
      "ja": "PKIX-EE（1）DANE-TA（2）とDANE-EE（3）用途も（DNSが後者と前者を置き換えることができ損なう可能性が攻撃者として）支持されています。"
    },
    {
      "indent": 3,
      "text": "Authentication via the PKIX-TA(0) and PKIX-EE(1) certificate usages is more brittle; the client and server need to happen to agree on a mutually trusted CA, but with OS the client is just trying to protect the communication channel at the request of the server and would otherwise be willing to use cleartext or unauthenticated TLS. The use of fragile mechanisms (like public CA authentication for some unspecified set of trusted CAs) is not sufficiently reliable for an OS client to honor the server's request for authentication. OS needs to be non-intrusive and to require few, if any, workarounds for valid but mismatched peers.",
      "ja": "PKIX-TA（0）とPKIX-EEを介して認証（1）証明書の使用は、より脆いです。クライアントとサーバが相互に信頼されたCAに同意する発生する必要がありますが、OSとクライアントはちょうどサーバーの要求に応じて通信チャネルを保護しようとしていると、そうでない場合は平文または認証されていないTLSを使用することをいといません。 OSのクライアントが認証のためのサーバの要求を尊重するために（信頼できるCAのいくつかの不特定のセットのためのパブリックCA認証のような）脆弱なメカニズムを使用することは十分に信頼できるものではありません。 OSは、非侵入すると有効ですが不一致ピアの、もしあれば、いくつかの回避策を必要とする必要があります。"
    },
    {
      "indent": 3,
      "text": "Because the PKIX-TA(0) and PKIX-EE(1) usages offer no more security and are more prone to failure, they are a poor fit for OS and SHOULD NOT be used in that context.",
      "ja": "PKIX-TA（0）とPKIX-EEは、（1）用法はこれ以上のセキュリティを提供しないと失敗しやすいので、それらはOSの貧適合していると、その文脈では使用しないでください。"
    },
    {
      "indent": 0,
      "text": "4.2. Interaction with Certificate Transparency",
      "section_title": true,
      "ja": "4.2。証明書の透明性との相互作用"
    },
    {
      "indent": 3,
      "text": "Certificate Transparency (CT) [RFC6962] defines an experimental approach that could be used to mitigate the risk of rogue or compromised public CAs issuing unauthorized certificates. This section clarifies the interaction of the experimental CT and DANE. This section may need to be revised in light of any future Standards Track version of CT.",
      "ja": "証明書の透明性（CT）[RFC6962]は、不正又は不正な証明書を発行損なわパブリックCAのリスクを軽減するために使用することができる実験的なアプローチを定義します。このセクションでは、実験的CTとDANEの相互作用を明らかにしています。このセクションでは、CTの任意の将来の標準化過程のバージョンに照らして改訂する必要があるかもしれません。"
    },
    {
      "indent": 3,
      "text": "When a server is authenticated via a DANE TLSA RR with TLSA certificate usage DANE-EE(3), the domain owner has directly specified the certificate associated with the given service without reference to any public CA. Therefore, when a TLS client authenticates the TLS server via a TLSA record with usage DANE-EE(3), CT checks SHOULD NOT be performed. Publication of the server certificate or public key (digest) in a TLSA record in a DNSSEC-signed zone by the domain owner assures the TLS client that the certificate is not an unauthorized certificate issued by a rogue CA without the domain owner's consent.",
      "ja": "サーバはTLSA証明書の使用DANE-EEとDANE TLSA RRを介して認証された場合（3）、ドメイン所有者は、パブリックCAに参照することなく、特定のサービスに関連付けられた証明書を直接指定していますしたがって、TLSクライアントはCT検査が行われるべきではない、（3）の使用DANE-EEとTLSAレコードを経由してTLSサーバを認証します。ドメイン所有者がDNSSEC署名済みゾーンでTLSAレコード内のサーバ証明書または公開鍵（ダイジェスト）の公表は、証明書は、ドメイン所有者の同意なしに不正なCAによって発行された証明書の不正ではないTLSクライアントを保証します。"
    },
    {
      "indent": 3,
      "text": "When a server is authenticated via a DANE TLSA record with TLSA usage DANE-TA(2) and the server certificate does not chain to a known public root CA, CT cannot apply (CT logs only accept chains that start with a known public root). Since TLSA certificate usage DANE-TA(2) is generally intended to support non-public TAs, TLS clients SHOULD NOT perform CT checks with usage DANE-TA(2).",
      "ja": "サーバはTLSAの使用DANE-TAとDANE TLSAレコードを介して認証された場合（2）とサーバー証明書は、チェーンが知られているパブリックルートCAにない、CTは（CTが知られている唯一の公開ルートで始まるチェーンを受け入れるログに記録）を適用することはできません。 TLSA証明書の使用DANE-TA（2）は、一般に、非公共のTAをサポートすることを意図されているので、TLSクライアントが使用DANE-TAとCT検査を行うべきではない（2）。"
    },
    {
      "indent": 3,
      "text": "With certificate usages PKIX-TA(0) and PKIX-EE(1), CT applies just as it would without DANE. TLSA records of this type only constrain which CAs are acceptable in PKIX validation. All checks used in the absence of DANE still apply when validating certificate chains with DANE PKIX-TA(0) and PKIX-EE(1) constraints.",
      "ja": "証明書の使用ではPKIX-TA（0）とPKIX-EEは、（1）、CTはちょうどそれがDANEせずに同じように適用されます。このタイプのTLSAレコードが唯一のCAがPKIX検証で許容されている制約します。 DANE PKIX-TA（0）とPKIX-EE（1）制約を証明書チェーンを検証するときDANEの非存在下で使用される全てのチェックが依然として適用されます。"
    },
    {
      "indent": 0,
      "text": "4.3. Switching from/to PKIX-TA/EE to/from DANE-TA/EE",
      "section_title": true,
      "ja": "4.3。 / PKIX-TAへ/ EEからの切り替え/ DANE-TA / EEから"
    },
    {
      "indent": 3,
      "text": "The choice of preferred certificate usages may need to change as an application protocol evolves. When transitioning between PKIX-TA/ PKIX-EE and DANE-TA/DANE-EE, clients begin to enable support for the new certificate usage values. If the new preferred certificate usages are PKIX-TA/EE, this requires installing and managing the appropriate set of CA TAs. During this time, servers will publish both types of TLSA records. At some later time, when the vast majority of servers have published the new preferred TLSA records, clients can stop supporting the legacy certificate usages. Similarly, servers can stop publishing legacy TLSA records once the vast majority of clients support the new certificate usages.",
      "ja": "好適な証明書の使用の選択は、アプリケーションプロトコルが発展するように変更する必要があるかもしれません。 PKIX-TA / PKIX-EEとDANE-TA / DANE-EEの間で移行する場合、クライアントは、新しい証明書の利用値のサポートを有効にし始めます。新しい好適な証明書の使用は、PKIX-TA / EEの場合は、これはCAのTAの適切なセットをインストールすると管理が必要です。この間、サーバはTLSAレコードの両方のタイプを公開します。しばらくして、サーバの大半は新しい優先TLSAレコードを公開しているとき、クライアントは、従来の証明書の使用をサポートして停止することができます。同様に、サーバはクライアントの大半は、新しい証明書の使用をサポートしていたら、レガシーTLSAレコードを公開停止することができます。"
    },
    {
      "indent": 0,
      "text": "5. Certificate-Usage-Specific DANE Updates and Guidelines",
      "section_title": true,
      "ja": "5.証明書の使用固有のDANEアップデートとガイドライン"
    },
    {
      "indent": 3,
      "text": "The four certificate usage values from the TLSA record -- DANE-EE(3), DANE-TA(2), PKIX-EE(1), and PKIX-TA(0) -- are discussed below.",
      "ja": "TLSAレコードからの4つの証明書の使用値 -  DANE-EE（3）、DANE-TA（2）、PKIX-EE（1）、およびPKIX-TA（0） - 以下に説明します。"
    },
    {
      "indent": 0,
      "text": "5.1. Certificate Usage DANE-EE(3)",
      "section_title": true,
      "ja": "5.1。証明書の使用DANE-EE（3）"
    },
    {
      "indent": 3,
      "text": "In this section, the meaning of DANE-EE(3) is updated from [RFC6698] to specify that peer identity matching and validity period enforcement are based solely on the TLSA RRset properties. This document also extends [RFC6698] to cover the use of DANE authentication of raw public keys [RFC7250] via TLSA records with certificate usage DANE-EE(3) and selector SPKI(1).",
      "ja": "このセクションでは、DANE-EE（3）の意味は、単にTLSA RRセット特性に基づいてそのピアのIDマッチング及び有効期間の強制を指定するために[RFC6698]から更新されます。この文書は、また、（3）証明書の使用DANE-EEとTLSAレコードを介して生の公開鍵のDANE認証の使用をカバーする[RFC6698]、[RFC7250]を延び、セレクタSPKI（1）。"
    },
    {
      "indent": 3,
      "text": "Authentication via certificate usage DANE-EE(3) TLSA records involves simply checking that the server's leaf certificate matches the TLSA record. In particular, the binding of the server public key to its name is based entirely on the TLSA record association. The server MUST be considered authenticated even if none of the names in the certificate match the client's reference identity for the server. This simplifies the operation of servers that host multiple Customer Domains, as a single certificate can be associated with multiple domains without having to match each of the corresponding reference identifiers.",
      "ja": "証明書の利用DANE-EE（3）TLSAレコードを介した認証は、単にサーバのリーフ証明書がTLSAレコードと一致することを確認する必要。具体的には、その名前のサーバ公開鍵の結合がTLSAレコード協会に完全に基づいています。サーバーは、証明書の名前のどれもが、サーバーのクライアントのリファレンスIDと一致しない場合でも、認証されたと見なされなければなりません。単一の証明書は、対応する参照識別子の各々に一致しなくても、複数のドメインに関連付けることができ、これは、複数の顧客のドメインのホストサーバの動作を簡略化します。"
    },
    {
      "indent": 3,
      "text": "; Multiple Customer Domains hosted by an example.net\n; Service Provider:\n;\nwww.example.com.              IN CNAME ex-com.example.net.\nwww.example.org.              IN CNAME ex-org.example.net.\n;\n; In the provider's DNS zone, a single certificate and TLSA\n; record support multiple Customer Domains, greatly simplifying\n; \"virtual hosting\".\n;\nex-com.example.net.           IN A 192.0.2.1\nex-org.example.net.           IN A 192.0.2.1\n_443._tcp.ex-com.example.net. IN CNAME tlsa._dane.example.net.\n_443._tcp.ex-org.example.net. IN CNAME tlsa._dane.example.net.\ntlsa._dane.example.net.       IN TLSA 3 1 1 e3b0c44298fc1c14...",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Also, with DANE-EE(3), the expiration date of the server certificate MUST be ignored. The validity period of the TLSA record key binding is determined by the validity period of the TLSA record DNSSEC signatures. Validity is reaffirmed on an ongoing basis by continuing to publish the TLSA record and signing the zone in which the record is contained, rather than via dates \"set in stone\" in the certificate. The expiration becomes a reminder to the administrator that it is likely time to rotate the key, but missing the date no longer causes an outage. When keys are rotated (for whatever reason), it is important to follow the procedures outlined in Section 8.",
      "ja": "また、DANE-EE（3）と、サーバ証明書の有効期限を無視しなければなりません。結合TLSAレコードキーの有効期間がTLSAレコードDNSSEC署名の有効期間によって決定されます。有効性は証明書に「石に設定されている」むしろ日付経由よりも、TLSAレコードを公開し続け、レコードが含まれているゾーンに署名することにより、継続的に再確認しています。有効期限は、キーを回転させる可能性が高い時間であることを管理者にリマインダーなりませんが、日付が不足していることは、もはや機能停止の原因となります。キーが（何らかの理由で）回転させると、第8節で概説した手順に従うことが重要です。"
    },
    {
      "indent": 3,
      "text": "If a server uses just DANE-EE(3) TLSA records and all its clients are DANE clients, the server need not employ SNI (i.e., it may ignore the client's SNI message) even when the server is known via multiple domain names that would otherwise require separate certificates. It is instead sufficient for the TLSA RRsets for all the domain names in question to match the server's default certificate. For application protocols where the server name is obtained indirectly via SRV records, MX records, or similar records, it is simplest to publish a single hostname as the target server name for all the hosted domains.",
      "ja": "サーバが使用している場合（3）TLSAレコードとそのすべてのクライアントは、SNIを採用する必要はないサーバは、サーバが複数のドメイン名を経由して知られている場合でも（すなわち、それは、クライアントのSNIのメッセージを無視してもよい）DANEクライアントですちょうどDANE-EEことだろうそうでない場合は、別の証明書が必要です。問題のすべてのドメイン名は、サーバのデフォルトの証明書と一致することがTLSAのRRセットのための代わりに十分なものです。サーバー名はSRVレコード、MXレコード、または類似のレコードを介して間接的に取得されたアプリケーションプロトコルの場合は、すべてのホストドメインのためのターゲット・サーバー名として単一のホスト名を公開するのが最も簡単です。"
    },
    {
      "indent": 3,
      "text": "In organizations where it is practical to make coordinated changes in DNS TLSA records before server key rotation, it is generally best to publish end-entity DANE-EE(3) certificate associations in preference to other choices of certificate usage. DANE-EE(3) TLSA records support multiple server names without SNI, don't suddenly stop working when leaf or intermediate certificates expire, and don't fail when a server operator neglects to include all the required issuer certificates in the server certificate chain.",
      "ja": "サーバキーローテーションの前にDNS TLSAレコードにおける協調変更を行うことが実用的である組織では、証明書の使用方法の他の選択肢に優先してエンドエンティティDANE-EE（3）証明書の関連付けを公開することが一般的に最高です。 TLSAレコードがSNIことなく、複数のサーバー名をサポート（3）DANE-EEは、葉または中間証明書の期限が切れたときに突然動作を停止していない、とサーバーのオペレータは、サーバ証明書チェーン内のすべての必要な発行者証明書が含まれるように無視したときに失敗しません。"
    },
    {
      "indent": 3,
      "text": "More specifically, it is RECOMMENDED that at most sites TLSA records published for DANE servers be \"DANE-EE(3) SPKI(1) SHA2-256(1)\" records. Selector SPKI(1) is chosen because it is compatible with raw public keys [RFC7250] and the resulting TLSA record need not change across certificate renewals with the same key. Matching type SHA2-256(1) is chosen because all DANE implementations are required to support SHA2-256. This TLSA record type easily supports hosting arrangements with a single certificate matching all hosted domains. It is also the easiest to implement correctly in the client.",
      "ja": "具体的には、ほとんどのサイトでDANEサーバー用に発行されTLSAレコードをすることをお勧めします \"DANE-EE（3）SPKI（1）SHA2-256（1）\" を記録。それは生の公開鍵[RFC7250]と互換性があり、結果として得られるTLSAレコードが同じキーで証明書の更新を横切って変更する必要がないので、セレクタSPKIは、（1）選択されます。全てデーン実装がSHA2-256をサポートするために必要とされるため、整合型SHA2-256（1）が選択されます。このTLSAレコードタイプは、簡単にすべてのホストされたドメインに一致する単一の証明書を持つホスティング手配をサポートします。また、クライアントで正しく実装するのが最も簡単です。"
    },
    {
      "indent": 3,
      "text": "Clients that support raw public keys can use DANE TLSA records with certificate usage DANE-EE(3) and selector SPKI(1) to authenticate servers that negotiate the use of raw public keys. Provided the server adheres to the requirements of Section 8, the fact that raw public keys are not compatible with any other TLSA record types will not get in the way of successful authentication. Clients that employ DANE to authenticate the peer server SHOULD NOT negotiate the use of raw public keys unless the server's TLSA RRset includes \"DANE-EE(3) SPKI(1)\" TLSA records.",
      "ja": "生の公開鍵をサポートするクライアントは、（1）生の公開鍵の使用を交渉のサーバーを認証するために証明書の使用方法DANE-EE（3）とセレクタSPKIでDANE TLSAレコードを使用することができます。サーバーは、第8章の要件に準拠して提供し、生の公開鍵は、他のTLSAレコード・タイプと互換性がないという事実は、認証が成功の邪魔にならないであろう。 DANEを採用するクライアントは、サーバーのTLSA RRセット「はDANE-EE（3）SPKI（1）」TLSAレコードが含まれていない限り、ピアサーバーは、生の公開鍵の使用を交渉するべきではありません認証します。"
    },
    {
      "indent": 3,
      "text": "While it is, in principle, also possible to authenticate raw public keys via \"DANE-EE(3) Cert(0) Full(0)\" records by extracting the public key from the certificate in DNS, extracting just the public key from a \"3 0 0\" TLSA record requires extra logic on clients that not all implementations are expected to provide. Servers that wish to support [RFC7250] raw public keys need to publish TLSA records with a certificate usage of DANE-EE(3) and a selector of SPKI(1).",
      "ja": "それからちょうど公開鍵を抽出し、DNSで証明書から公開鍵を抽出して、「DANE-EE（3）証明書（0）全（0）」の記録を経由して生の公開鍵を認証するためにも、原則的には、可能ではあるが「3 0 0」TLSAレコードは、すべての実装を提供することが期待されていないクライアントで余分なロジックが必要です。サポートしたいサーバ[RFC7250]生公開鍵はDANE-EE（3）の証明書の使用とSPKI（1）のセレクタとTLSAレコードを公開する必要があります。"
    },
    {
      "indent": 3,
      "text": "While DANE-EE(3) TLSA records are expected to be by far the most prevalent, as explained in Section 5.2, DANE-TA(2) records are a valid alternative for sites with many DANE services. Note, however, that virtual hosting is more complex with DANE-TA(2). Also, with DANE-TA(2), server operators MUST ensure that the server is configured with a sufficiently complete certificate chain and need to remember to replace certificates prior to their expiration dates.",
      "ja": "DANE-EEは、（3）TLSAレコードは、セクション5.2で説明したように、これまでで最も普及していることが予想される一方で、DANE-TA（2）レコードは、多くのDANEサービスとサイトの有効な代替です。バーチャルホストは、DANE-TA（2）と、より複雑であること、しかし、注意してください。また、DANE-TA（2）と、サーバーオペレータは、サーバが十分に完全な証明書チェーンを使用して構成し、その有効期限前に証明書を置き換えるために覚えておく必要があることを確認する必要があり。"
    },
    {
      "indent": 0,
      "text": "5.2. Certificate Usage DANE-TA(2)",
      "section_title": true,
      "ja": "5.2。証明書の使用DANE-TA（2）"
    },
    {
      "indent": 3,
      "text": "This section updates [RFC6698] by specifying a new operational requirement for servers publishing TLSA records with a usage of DANE-TA(2): such servers MUST include the TA certificate in their TLS server certificate message unless all such TLSA records are \"2 0 0\" records that publish the server certificate in full.",
      "ja": "DANE-TAの使用とサーバパブリッシングTLSAレコードのための新たな業務要件を指定することにより、このセクションの更新[RFC6698]（2）：このようなすべてのTLSAレコードが「2 0でない限り、そのようなサーバがそのTLSサーバ証明書メッセージにTA証明書を含まなければなりませんフルにサーバ証明書を発行0\" を記録。"
    },
    {
      "indent": 3,
      "text": "Some domains may prefer to avoid the operational complexity of publishing unique TLSA RRs for each TLS service. If the domain employs a common issuing CA to create certificates for multiple TLS services, it may be simpler to publish the issuing authority as a TA for the certificate chains of all relevant services. The TLSA query domain (TLSA base domain with port and protocol prefix labels) for each service issued by the same TA may then be set to a CNAME alias that points to a common TLSA RRset that matches the TA. For example:",
      "ja": "いくつかのドメインは、各TLSサービスのユニークなTLSAのRRを公開する操作の複雑さを避けるために好むかもしれません。ドメインが複数のTLSサービス用の証明書を作成するために、共通の発行CAを採用した場合、関連するすべてのサービスの証明書チェーンのためのTAとして発行機関を発行する方が簡単かもしれません。同じTAによって発行された各サービスのTLSAクエリードメイン（ポートおよびプロトコルプレフィックスラベル付きTLSAベースドメイン）をTAと一致する共通TLSA資源レコード集合を指すCNAMEエイリアスに設定することができます。例えば："
    },
    {
      "indent": 3,
      "text": "; Two servers, each with its own certificate, that share ; a common issuer (TA). ; www1.example.com. IN A 192.0.2.1 www2.example.com. IN A 192.0.2.2 _443._tcp.www1.example.com. IN CNAME tlsa._dane.example.com. _443._tcp.www2.example.com. IN CNAME tlsa._dane.example.com. tlsa._dane.example.com. IN TLSA 2 0 1 e3b0c44298fc1c14...",
      "ja": ";二つのサーバ、独自の証明書を持つ各、その共有。一般的な発行者（TA）。 ; www1.example.com。 192.0.2.1 www2.example.com、IN。 192.0.2.2 _443._tcp.www1.example.com、IN。 CNAME、IN tlsa._dane.example.com。 _443._tcp.www2.example.com。 CNAME、IN tlsa._dane.example.com。 tlsa._dane.example.com。 0 1 e3b0c44298fc1c14 TLSA IN 2 ..."
    },
    {
      "indent": 3,
      "text": "The above configuration simplifies server key rotation, because while the servers continue to receive new certificates from a CA matched by the shared (target of the CNAMEs) TLSA record, server certificates can be updated without making any DNS changes. As the list of active issuing CAs changes, the shared TLSA record will be updated (much less frequently) by the administrators who manage the CAs. Those administrators still need to perform TLSA record updates with care, as described in Section 8.",
      "ja": "サーバはTLSAレコードの共有（のCNAMEの対象）にマッチしたCAから新しい証明書を受信し続ける一方で、サーバ証明書は、任意のDNSの変更を加えることなく更新することができますので、上記の構成は、サーバーキーローテーションを簡素化します。アクティブ発行CAの変更のリストとして、共有TLSAレコードは、CAを管理する管理者が（あまり頻繁に）更新されます。これらの管理者は、まだ8章で説明したように、注意してTLSAレコードの更新を実行する必要があります。"
    },
    {
      "indent": 3,
      "text": "With usage DANE-TA(2), the server certificates will need to have names that match one of the client's reference identifiers (see [RFC6125]). When hosting multiple unrelated Customer Domains (that can't all appear in a single certificate), such a server SHOULD employ SNI to select the appropriate certificate to present to the client.",
      "ja": "使い方DANE-TAと（2）、サーバ証明書は、クライアントの参照識別子のいずれかを（[RFC6125]を参照）と一致する名前を持つ必要があります。 （つまり、単一の証明書に表示されていないすべてのことができます）複数の無関係な顧客のドメインをホストする場合、サーバはクライアントに提示するために、適切な証明書を選択するために、SNIを採用する必要があります。"
    },
    {
      "indent": 0,
      "text": "5.2.1. Recommended Record Combinations",
      "section_title": true,
      "ja": "5.2.1。推奨レコードの組み合わせ"
    },
    {
      "indent": 3,
      "text": "TLSA records with a matching type of Full(0) are NOT RECOMMENDED. While these potentially obviate the need to transmit the TA certificate in the TLS server certificate message, client implementations may not be able to augment the server certificate chain with the data obtained from DNS, especially when the TLSA record supplies a bare key (selector SPKI(1)). Since the server will need to transmit the TA certificate in any case, server operators SHOULD publish TLSA records with a matching type other than Full(0) and avoid potential DNS interoperability issues with large TLSA records containing full certificates or keys (see Section 10.1.1).",
      "ja": "（0）全のマッチング型とTLSAレコードが推奨されていません。これらは、潜在的にTLSサーバ証明書メッセージでTA証明書を送信する必要性を回避しながら、クライアントインプリメンテーションは、（TLSAレコードが裸キーを供給する特にDNSから得られたデータと、サーバ証明書チェーン（セレクタSPKIを増強することができないかもしれません1））。サーバはどのような場合にはTA証明書を送信する必要がありますので、サーバーオペレータは、全以外のマッチングタイプ（0）とTLSAレコードを公開し、（項10.1を参照してください完全な証明書や鍵を含む大きなTLSAレコードを持つ潜在的なDNSの相互運用性の問題を回避すべきです。 1）。"
    },
    {
      "indent": 3,
      "text": "TLSA Publishers employing DANE-TA(2) records SHOULD publish records with a selector of Cert(0). Such TLSA records are associated with the whole TA certificate, not just with the TA public key. In particular, when authenticating the peer certificate chain via such a TLSA record, the client SHOULD apply any relevant constraints from the TA certificate, such as, for example, path length constraints.",
      "ja": "DANE-TA（2）レコードは、証明書の選択を持つレコードを公開するべきで用いTLSA出版（0）。このようなTLSAレコードがないだけでTA公開鍵で、全体のTA証明書に関連付けられています。そのようなTLSAレコードを介して、ピア証明書チェーンを認証するとき、特に、クライアントは、例えば、経路長の制約、などのTA証明書から任意の関連する制約を適用すべきです。"
    },
    {
      "indent": 3,
      "text": "While a selector of SPKI(1) may also be employed, the resulting TLSA record will not specify the full TA certificate content, and elements of the TA certificate other than the public key become mutable. This may, for example, enable a subsidiary CA to issue a chain that violates the TA's path length or name constraints.",
      "ja": "SPKIのセレクタは、（1）も用いることができるが、得TLSAレコードは、完全なTA証明書の内容を指定し、変更可能になる公開鍵以外のTA証明書の要素ではないであろう。これは、例えば、TAの経路長や名前制約に違反するチェーンを発行する子会社CAを有効にすることができます。"
    },
    {
      "indent": 0,
      "text": "5.2.2. Trust Anchor Digests and Server Certificate Chain",
      "section_title": true,
      "ja": "5.2.2。トラストアンカーダイジェストとサーバー証明書チェーン"
    },
    {
      "indent": 3,
      "text": "With DANE-TA(2), a complication arises when the TA certificate is omitted from the server's certificate chain, perhaps on the basis of Section 7.4.2 of [RFC5246]:",
      "ja": "TA証明書がサーバの証明書チェーンから省略されたときにDANE-TA（2）と、合併症は、おそらく[RFC5246]のセクション7.4.2に基づいて、発生します。"
    },
    {
      "indent": 6,
      "text": "The sender's certificate MUST come first in the list. Each following certificate MUST directly certify the one preceding it. Because certificate validation requires that root keys be distributed independently, the self-signed certificate that specifies the root certificate authority MAY be omitted from the chain, under the assumption that the remote end must already possess it in order to validate it in any case.",
      "ja": "送信者の証明書は、リストの最初に来なければなりません。それぞれの次の証明書は直接それに先行するものを証明する必要があります。証明書の検証がルートキーが独立して分散されている必要があるため、ルート証明機関を指定し、自己署名証明書は、リモートエンドがすでにどのような場合に、それを検証するために、それを持っていなければならないという仮定の下で、チェーンから省略されるかもしれません。"
    },
    {
      "indent": 3,
      "text": "With TLSA certificate usage DANE-TA(2), there is no expectation that the client is preconfigured with the TA certificate. In fact, client implementations are free to ignore all locally configured TAs when processing usage DANE-TA(2) TLSA records and may rely exclusively on the certificates provided in the server's certificate chain. But, with a digest in the TLSA record, the TLSA record contains neither the full TA certificate nor the full public key. If the TLS server's certificate chain does not contain the TA certificate, DANE clients will be unable to authenticate the server.",
      "ja": "TLSA証明書の使用DANE-TA（2）、クライアントは、TA証明書を使用して事前に設定されていることは期待されていません。実際には、クライアントの実装は、使用DANE-TA（2）TLSAレコードを処理するときに、すべてのローカルに設定されたのTAを無視することで、サーバーの証明書チェーンで提供証明書のみに依拠することができます。しかし、TLSAレコード内のダイジェストと、TLSAレコードは、完全なTA証明書も完全な公開鍵も含みません。 TLSサーバーの証明書チェーンは、TA証明書が含まれていない場合は、DANEクライアントがサーバを認証することができません。"
    },
    {
      "indent": 3,
      "text": "TLSA Publishers that publish TLSA certificate usage DANE-TA(2) associations with a selector of SPKI(1) or with a digest-based matching type (not Full(0)) MUST ensure that the corresponding server is configured to also include the TA certificate in its TLS handshake certificate chain, even if that certificate is a self-signed root CA and would have been optional in the context of the existing public CA PKI.",
      "ja": "ダイジェストベースのマッチングタイプ（完全ではない（0））に対応するサーバが設定されていることを確認しなければならないとすることもTAを含む（1）又はSPKIのセレクタとTLSA証明書の使用DANE-TA（2）の関連付けを公開TLSA出版そのTLSハンドシェイク証明書チェーン内の証明書、その証明書が自己署名ルートCAで、既存のパブリックCAのPKIの文脈ではオプションであったであろう場合でも。"
    },
    {
      "indent": 3,
      "text": "Only when the server TLSA record includes a \"DANE-TA(2) Cert(0) Full(0)\" TLSA record containing a full TA certificate is the TA certificate optional in the server's TLS certificate message. This is also the only type of DANE-TA(2) record for which the client MUST be able to verify the server's certificate chain even if the TA certificate appears only in DNS and is absent from the TLS handshake server certificate message.",
      "ja": "サーバTLSAレコード「はDANE-TAを（2）証明書は、（0）全（0）」が含まれる場合にのみ、完全なTA証明書を含むTLSAレコードは、サーバのTLS証明書メッセージにオプションTA証明書です。これは、クライアントがTA証明書のみをDNSに表示され、TLSハンドシェイクサーバ証明書メッセージに存在しない場合でも、サーバーの証明書チェーンを検証することができなければならないためにDANE-TA（2）レコードの唯一のタイプです。"
    },
    {
      "indent": 0,
      "text": "5.2.3. Trust Anchor Public Keys",
      "section_title": true,
      "ja": "5.2.3。トラストアンカーの公開鍵"
    },
    {
      "indent": 3,
      "text": "TLSA records with TLSA certificate usage DANE-TA(2), selector SPKI(1), and a matching type of Full(0) publish the full public key of a TA via DNS. In Section 6.1.1 of [RFC5280], the definition of a TA consists of the following four parts:",
      "ja": "TLSAのTLSA証明書の使用DANE-TA（2）、セレクタSPKI（1）を持つレコード、およびフルのマッチングタイプ（0）DNSを介して、TAの完全な公開鍵を公開します。 [RFC5280]のセクション6.1.1において、TAの定義は、以下の4つの部分で構成されます。"
    },
    {
      "indent": 3,
      "text": "1. the trusted issuer name,",
      "section_title": true,
      "ja": "1.信頼された発行者名、"
    },
    {
      "indent": 3,
      "text": "2. the trusted public key algorithm,",
      "section_title": true,
      "ja": "2.信頼された公開鍵アルゴリズム、"
    },
    {
      "indent": 3,
      "text": "3. the trusted public key, and",
      "section_title": true,
      "ja": "3.信頼された公開鍵、および"
    },
    {
      "indent": 3,
      "text": "4. optionally, the trusted public key parameters associated with the public key.",
      "ja": "4.必要に応じて、公開鍵に関連付けられた信頼できる公開鍵のパラメータ。"
    },
    {
      "indent": 3,
      "text": "Items 2-4 are precisely the contents of the subjectPublicKeyInfo published in the TLSA record. The issuer name is not included in the subjectPublicKeyInfo.",
      "ja": "項目2-4正確TLSAレコードに掲載されたSubjectPublicKeyInfoでの内容です。発行者名はSubjectPublicKeyInfoでには含まれていません。"
    },
    {
      "indent": 3,
      "text": "With TLSA certificate usage DANE-TA(2), the client may not have the associated TA certificate and cannot generally verify whether or not a particular certificate chain is \"issued by\" the TA described in the TLSA record.",
      "ja": "TLSA証明書の使用DANE-TA（2）、クライアントは、関連するTA証明書を有していてもよく、一般に、特定の証明書チェーンは、TAがTLSAレコードに記載されている「によって発行」であるか否かを確認することができません。"
    },
    {
      "indent": 3,
      "text": "When the server certificate chain includes a CA certificate whose public key matches the TLSA record, the client can match that CA as the intended issuer. Otherwise, the client can only check that the topmost certificate in the server's chain is \"signed by\" the TA's public key in the TLSA record. Such a check may be difficult to implement and cannot be expected to be supported by all clients.",
      "ja": "サーバー証明書チェーンは、その公開鍵TLSAレコードに一致するCA証明書が含まれている場合、クライアントが意図した発行者としてそのCAを一致させることができます。そうでない場合、クライアントは、サーバーの連鎖の一番上の証明書がTLSAレコードにおけるTAの公開鍵「によって署名」されていることを確認することができます。このようなチェックは実装が困難であり、すべてのクライアントでサポートされていることを期待することはできません。"
    },
    {
      "indent": 3,
      "text": "Thus, servers cannot rely on \"DANE-TA(2) SPKI(1) Full(0)\" TLSA records to be sufficient to authenticate chains issued by the associated public key in the absence of a corresponding certificate in the server's TLS certificate message. Servers employing \"2 1 0\" TLSA records MUST include the corresponding TA certificate in their certificate chain.",
      "ja": "このように、サーバは、「（2）SPKI（1）全（0）DANE-TA」TLSAレコードは、サーバのTLS証明書メッセージに対応する証明書が存在しない場合に関連する公開鍵によって発行されたチェーンを認証するのに十分であるとに依存することはできません。 「2 1 0」TLSAレコードを使用サーバーは、その証明書チェーン内の対応するTA証明書を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "If none of the server's certificate chain elements match a public key specified in a TLSA record, and at least one \"DANE-TA(2) SPKI(1) Full(0)\" TLSA record is available, it is RECOMMENDED that clients check to see whether or not the topmost certificate in the chain is signed by the provided public key and has not expired, and in that case consider the server authenticated, provided the rest of the chain passes validation, including leaf certificate name checks.",
      "ja": "サーバの証明書チェーンの要素のどれもがTLSAレコードで指定された公開鍵と一致していないと、少なくとも1つの場合はTLSAレコードが利用可能である「DANE-TA（2）SPKIは、（1）（0）全を」、クライアントがに確認することをお勧めしチェーンの一番上の証明書が提供された公開鍵によって署名され、期限が切れていないかどうかを確認し、その場合には、サーバーが認証を検討し、チェーンの残りの部分を提供し、リーフ証明書の名前のチェックを含む、検証に合格。"
    },
    {
      "indent": 0,
      "text": "5.3. Certificate Usage PKIX-EE(1)",
      "section_title": true,
      "ja": "5.3。証明書の使用PKIX-EE（1）"
    },
    {
      "indent": 3,
      "text": "This certificate usage is similar to DANE-EE(3); but, in addition, PKIX verification is required. Therefore, name checks, certificate expiration, CT, etc. apply as they would without DANE.",
      "ja": "この証明書の使用は、DANE-EE（3）と同様です。しかし、加えて、PKIX検証が必要です。そのため、名前の確認など証明書の有効期限、CTは、彼らはDANEせずに同じように適用されます。"
    },
    {
      "indent": 0,
      "text": "5.4. Certificate Usage PKIX-TA(0)",
      "section_title": true,
      "ja": "5.4。証明書の使用PKIX-TA（0）"
    },
    {
      "indent": 3,
      "text": "This section updates [RFC6698] by specifying new client implementation requirements. Clients that trust intermediate certificates MUST be prepared to construct longer PKIX chains than would be required for PKIX alone.",
      "ja": "新しいクライアント実装要件を指定することにより、このセクションの更新[RFC6698]。中間証明書を信頼するクライアントは、単独のPKIXのために必要とされるよりも長いPKIXチェーンを構築するために準備しなければなりません。"
    },
    {
      "indent": 3,
      "text": "TLSA certificate usage PKIX-TA(0) allows a domain to publish constraints on the set of PKIX CAs trusted to issue certificates for its TLS servers. A PKIX-TA(0) TLSA record matches PKIX-verified trust chains that contain an issuer certificate (root or intermediate) that matches its Certificate Association Data field (typically a certificate or digest).",
      "ja": "TLSAの証明書の利用PKIX-TA（0）は、ドメインがPKIX CAのセットにそのTLSサーバ用の証明書を発行する信頼された制約を公開することができます。 PKIX-TA（0）TLSAレコードは、その証明書協会のデータフィールド（通常、証明書またはダイジェスト）に一致する発行者証明書（ルートまたは中間）を含有するPKIX検証信頼のチェーンと一致します。"
    },
    {
      "indent": 3,
      "text": "PKIX-TA(0) requires more complex coordination (than with DANE-TA(2) or DANE-EE(3)) between the Customer Domain and the Service Provider in hosting arrangements. Thus, this certificate usage is NOT RECOMMENDED when the Service Provider is not also the TLSA Publisher (at the TLSA base domain obtained via CNAMEs, SRV records, or MX records).",
      "ja": "PKIX-TA（0）（DANE-TA（2）またはDANE-EEよりも（3））、より複雑な調整が必要カスタマードメインとホスティング契約におけるサービスプロバイダの間で。このように、この証明書の利用は、サービスプロバイダーは（のCNAME、SRVレコード、またはMXレコードを介して取得TLSAベースドメインで）TLSA出版社もないときにはお勧めしません。"
    },
    {
      "indent": 3,
      "text": "TLSA Publishers who publish TLSA records for a particular public root CA will expect that clients will only accept chains anchored at that root. It is possible, however, that the client's trusted certificate store includes some intermediate CAs, either with or without the corresponding root CA. When a client constructs a trust chain leading from a trusted intermediate CA to the server leaf certificate, such a \"truncated\" chain might not contain the trusted root published in the server's TLSA record.",
      "ja": "特定の公開ルートCA用TLSAレコードを公開TLSA出版社は、クライアントが唯一そのルートにアンカーチェーンを受け入れることを期待しています。これは、対応するルートCAの有無にかかわらずどちらか、クライアントの信頼された証明書ストアは、いくつかの中間CAが含まれていること、しかし、可能ですクライアントがサーバのリーフ証明書に信頼され、中間CAから先頭の信頼チェーンを構築する場合、そのような「切り捨て」チェーンは、サーバーのTLSAレコードに掲載された信頼されたルートが含まれていない可能性があります。"
    },
    {
      "indent": 3,
      "text": "If the omitted root is also trusted, the client may erroneously reject the server chain if it fails to determine that the shorter chain it constructed extends to a longer trusted chain that matches the TLSA record. Thus, when matching a usage PKIX-TA(0) TLSA record, so long as no matching certificate has yet been found, a client MUST continue extending the chain even after any locally trusted certificate is found. If no TLSA records have matched any of the elements of the chain and the trusted certificate found is not self-issued, the client MUST attempt to build a longer chain in case a certificate closer to the root matches the server's TLSA record.",
      "ja": "省略ルートも信頼されている場合、それが構築短いチェーンがTLSAレコードに一致する長い、信頼チェーンに延びていることを決定するために失敗した場合、クライアントは誤ってサーバーのチェーンを拒否することができます。使用PKIX-TA（0）TLSAレコードに一致するときしたがって、限り一致する証明書がまだ見つかっていないように、クライアントはローカルに信頼できる証明書が発見された後であってもチェーンを延長継続しなければなりません。何TLSAレコードが連鎖し、見つかった信頼できる証明書の要素のいずれかが、自己発行でないマッチしていない場合は、クライアントが近いルートへの証明書は、サーバーのTLSAレコードと一致した場合には、より長いチェーンを構築しようとしなければなりません。"
    },
    {
      "indent": 0,
      "text": "6. Service Provider and TLSA Publisher Synchronization",
      "section_title": true,
      "ja": "6.サービスプロバイダとTLSA出版社の同期"
    },
    {
      "indent": 3,
      "text": "Whenever possible, the TLSA Publisher and the Service Provider should be the same entity. Otherwise, they need to coordinate changes to ensure that TLSA records published by the TLSA Publisher don't fall out of sync with the server certificate used by the Service Provider. Such coordination is difficult, and service outages will result when coordination fails.",
      "ja": "可能な限り、TLSA出版社やサービスプロバイダーは、同じエンティティである必要があります。そうでなければ、彼らはTLSA出版社が発行しTLSAレコードは、サービスプロバイダが使用するサーバー証明書と同期して落下しないことを確実にするために変更を調整する必要があります。このような調整は困難であり、調整が失敗したときにサービス停止が発生します。"
    },
    {
      "indent": 3,
      "text": "Publishing the TLSA record in the Service Provider's zone avoids the complexity of bilateral coordination of server certificate configuration and TLSA record management. Even when the TLSA RRset has to be published in the Customer Domain's DNS zone (perhaps the client application does not \"chase\" CNAMEs to the TLSA base domain), it is possible to employ CNAME records to delegate the content of the TLSA RRset to a domain operated by the Service Provider.",
      "ja": "サービスプロバイダーのゾーンにTLSAレコードを公開するサーバー証明書の構成とTLSA記録管理の二国間の調整の複雑さを避けることができます。 TLSA RRセットは、お客様のドメインのDNSゾーンに公開される場合であっても（おそらく、クライアントアプリケーションはしないTLSAベースドメインに「追いかける」のCNAME）、へTLSA RRセットの内容を委任するCNAMEレコードを使用することが可能ですサービスプロバイダによって運営ドメイン。"
    },
    {
      "indent": 3,
      "text": "Only certificate usages DANE-EE(3) and DANE-TA(2) work well with TLSA CNAMEs across organizational boundaries. With PKIX-TA(0) or PKIX-EE(1), the Service Provider would need to obtain certificates in the name of the Customer Domain from a suitable public CA (securely impersonate the customer), or the customer would need to provision the relevant private keys and certificates at the Service Provider's systems.",
      "ja": "証明書の使用DANE-EE（3）とDANE-TAのみ（2）組織の境界を越えてTLSAのCNAMEでうまく動作。 PKIX-TA（0）またはPKIX-EEは、（1）、サービスプロバイダは、適切なパブリックCAからお客様のドメインの名前で証明書を取得する必要があるだろうと（安全に顧客になりすまし）、または顧客が提供する必要がありますサービスプロバイダのシステムに関連する秘密鍵と証明書。"
    },
    {
      "indent": 3,
      "text": "Certificate Usage DANE-EE(3): In this case, the Service Provider can publish a single TLSA RRset that matches the server certificate or public key digest. The same RRset works for all Customer Domains because name checks do not apply with DANE-EE(3) TLSA records (see Section 5.1). A Customer Domain can create a CNAME record pointing to the TLSA RRset published by the Service Provider.",
      "ja": "証明書の使用DANE-EEは、（3）：この場合、サービスプロバイダは、サーバ証明書または公開鍵ダイジェストと一致する単一TLSA RRセットを公開することができます。名前のチェックはDANE-EEには適用されませんので、同じRRセットは、（3）TLSAレコード（5.1節を参照）、すべての顧客のドメインのために働きます。お客様のドメインは、サービスプロバイダによって公開されTLSA RRセットを指すCNAMEレコードを作成することができます。"
    },
    {
      "indent": 3,
      "text": "Certificate Usage DANE-TA(2): When the Service Provider operates a private CA, the Service Provider is free to issue a certificate bearing any customer's domain name. Without DANE, such a certificate would not pass trust verification, but with DANE, the customer's TLSA RRset that is aliased to the provider's TLSA RRset can delegate authority to the provider's CA for the corresponding service. The Service Provider can generate appropriate certificates for each customer and use the SNI information provided by clients to select the right certificate chain to present to each client.",
      "ja": "証明書の使用DANE-TA（2）：サービスプロバイダーは、プライベートCAを操作すると、サービスプロバイダは、あらゆる顧客のドメイン名を冠した証明書を発行して自由です。 DANEなく、このような証明書は、信頼の検証に合格しないだろうが、DANEで、プロバイダのTLSA RRセットにエイリアスされ、顧客のTLSA RRセットは、対応するサービスのプロバイダのCAに権限を委任することができます。サービスプロバイダは、顧客ごとに適切な証明書を生成し、各クライアントに提示する権利証明書チェーンを選択するために、クライアントによって提供さSNI情報を使用することができます。"
    },
    {
      "indent": 3,
      "text": "Below are example DNS records (assumed \"secure\" and shown without the associated DNSSEC information, such as record signatures) that illustrate both of the above models in the case of an HTTPS service whose clients all support DANE TLS. These examples work even with clients that don't \"chase\" CNAMEs when constructing the TLSA base domain (see Section 7 below).",
      "ja": "以下のクライアントすべてのサポートDANE TLS HTTPSサービスの場合には、上記モデルの両方を示す（例えばレコードシグネチャとして「安全」と関連したDNSSEC情報なしで示さ仮定、）例えば、DNSレコードがあります。これらの例は、さらにTLSAベースドメインを構築する際に（以下のセクション7を参照）がない「追撃」のCNAMEを行うクライアントで動作します。"
    },
    {
      "indent": 3,
      "text": "; The hosted web service is redirected via a CNAME alias.\n; The associated TLSA RRset is also redirected via a CNAME alias.\n;\n; Certificate usage DANE-EE(3) makes it possible to deploy\n; a single provider certificate for all Customer Domains.\n;\nwww1.example.com.            IN CNAME w1.example.net.\n_443._tcp.www1.example.com.  IN CNAME _443._tcp.w1.example.net.\n_443._tcp.w1.example.net.    IN TLSA 3 1 1 (\n                                8A9A70596E869BED72C69D97A8895DFA\n                                D86F300A343FECEFF19E89C27C896BC9 )",
      "raw": true
    },
    {
      "indent": 3,
      "text": ";\n; A CA at the provider can also issue certificates for each Customer\n; Domain and employ the DANE-TA(2) certificate usage to\n; designate the provider's CA as a TA.\n;\nwww2.example.com.            IN CNAME w2.example.net.\n_443._tcp.www2.example.com.  IN CNAME _443._tcp.w2.example.net.\n_443._tcp.w2.example.net.    IN TLSA 2 0 1 (\n                                C164B2C3F36D068D42A6138E446152F5\n                                68615F28C69BD96A73E354CAC88ED00C )",
      "raw": true
    },
    {
      "indent": 3,
      "text": "With protocols that support explicit transport redirection via DNS MX records, SRV records, or other similar records, the TLSA base domain is based on the redirected transport endpoint rather than the origin domain. With SMTP, for example, when an email service is hosted by a Service Provider, the Customer Domain's MX hostnames will point at the Service Provider's SMTP hosts. When the Customer Domain's DNS zone is signed, the MX hostnames can be securely used as the base domains for TLSA records that are published and managed by the Service Provider. For example (without the required DNSSEC information, such as record signatures):",
      "ja": "DNSのMXレコード、SRVレコード、または他の同様のレコードを介して、明示的な輸送のリダイレクトをサポートするプロトコルでは、TLSAベースドメインがリダイレクトトランスポートエンドポイントではなく、元のドメインに基づいています。 SMTPでは、例えば、電子メールサービスは、サービスプロバイダによってホストされているとき、お客様はドメインのMXホスト名は、サービスプロバイダのSMTPホストで指します。お客様のドメインのDNSゾーンが署名されている場合は、MXホスト名が確実に公開され、サービスプロバイダーによって管理されているTLSAレコードの基本ドメインとして使用することができます。例えば、（例えば、レコードの署名として必要DNSSEC情報なし）。"
    },
    {
      "indent": 3,
      "text": "; Hosted SMTP service. ; example.com. IN MX 0 mx1.example.net. example.com. IN MX 0 mx2.example.net. _25._tcp.mx1.example.net. IN TLSA 3 1 1 ( 8A9A70596E869BED72C69D97A8895DFA D86F300A343FECEFF19E89C27C896BC9 ) _25._tcp.mx2.example.net. IN TLSA 3 1 1 ( C164B2C3F36D068D42A6138E446152F5 68615F28C69BD96A73E354CAC88ED00C )",
      "ja": ";ホストされたSMTPサービス。 ; example.com。 MX 0 mx1.example.net、IN。 example.com。 MX 0 mx2.example.net、IN。 _25._tcp.mx1.example.net。 TLSA 3 1 1（8A9A70596E869BED72C69D97A8895DFA D86F300A343FECEFF19E89C27C896BC9）_25._tcp.mx2.example.net。 TLSA 3 1 1（C164B2C3F36D068D42A6138E446152F5 68615F28C69BD96A73E354CAC88ED00C）では、"
    },
    {
      "indent": 3,
      "text": "If redirection to the Service Provider's domain (via MX records, SRV records, or any similar mechanism) is not possible and aliasing of the TLSA record is not an option, then more complex coordination between the Customer Domain and Service Provider will be required. Either the Customer Domain periodically provides private keys and a corresponding certificate chain to the provider (after making appropriate changes in its TLSA records), or the Service Provider periodically generates the keys and certificates and needs to wait for matching TLSA records to be published by its Customer Domains before deploying newly generated keys and certificate chains. Section 7 below describes an approach that employs CNAME \"chasing\" to avoid the difficulties of coordinating key management across organizational boundaries.",
      "ja": "（MXレコード、SRVレコード、または任意の同様の機構を介して）サービスプロバイダのドメインへのリダイレクトは不可能であり、TLSAレコードのエイリアシングができない場合は、カスタマードメインとサービスプロバイダの間で、より複雑な調整が必要となります。どちらのお客様のドメインは、定期的に（そのTLSAレコードに適切な変更を行った後に）提供者に秘密鍵および対応する証明書チェーンを提供し、またはサービスプロバイダは、定期的に鍵と証明書を生成し、そのによって公開されるTLSAレコードに一致するのを待つ必要があります新しく生成された鍵と証明書チェーンを展開する前にお客様のドメイン。第7節は、以下の組織の境界を越え鍵管理の調整の難しさを避けるために、「追いかけ」CNAMEを採用したアプローチを説明しています。"
    },
    {
      "indent": 3,
      "text": "For further information about combining DANE and SRV, please see [RFC7673].",
      "ja": "DANEとSRVを組み合わせるの詳細については、[RFC7673]を参照してください。"
    },
    {
      "indent": 0,
      "text": "7. TLSA Base Domain and CNAMEs",
      "section_title": true,
      "ja": "7. TLSAベースのドメインとのCNAME"
    },
    {
      "indent": 3,
      "text": "When the application protocol does not support service location indirection via MX, SRV, or similar DNS records, the service may be redirected via a CNAME. A CNAME is a more blunt instrument for this purpose because, unlike an MX or SRV record, it remaps the entire origin domain to the target domain for all protocols.",
      "ja": "アプリケーションプロトコルはMX、SRV、または類似のDNSレコードを介してサービスロケーション間接をサポートしていない場合、サービスはCNAMEを介してリダイレクトされてもよいです。 MXまたはSRVレコードのとは違って、それはすべてのプロトコルのためのターゲットドメインに全体を元のドメインを再マッピングし、ので、CNAMEは、この目的のために、より鈍器です。"
    },
    {
      "indent": 3,
      "text": "The complexity of coordinating key management is largely eliminated when DANE TLSA records are found in the Service Provider's domain, as discussed in Section 6. Therefore, DANE TLS clients connecting to a server whose domain name is a CNAME alias SHOULD follow the CNAME \"hop by hop\" to its ultimate target host (noting at each step whether or not the CNAME is DNSSEC validated). If at each stage of CNAME expansion the DNSSEC validation status is \"secure\", the final target name SHOULD be the preferred base domain for TLSA lookups.",
      "ja": "したがって、第6節で説明したようにDANE TLSAレコードは、サービスプロバイダーのドメインで発見されたときに鍵管理を調整する複雑さを大幅に解消され、そのドメイン名CNAMEエイリアスでサーバーに接続してDANE TLSクライアントがでCNAME」ホップに従ってくださいその最終的なターゲットホストに「ホップ（CNAMEはDNSSECが検証されたか否かを各ステップで注目）。 CNAME拡張の各段階でDNSSEC検証ステータスが「セキュア」である場合、最終的なターゲット名がTLSA検索のための好ましいベースドメインであるべきです。"
    },
    {
      "indent": 3,
      "text": "Implementations failing to find a TLSA record using a base name of the final target of a CNAME expansion SHOULD issue a TLSA query using the original destination name. That is, the preferred TLSA base domain SHOULD be derived from the fully expanded name and, failing that, SHOULD be the initial domain name.",
      "ja": "CNAME拡大の最終ターゲットのベース名を使用してTLSAレコードを見つけることができない実装は、元の宛先名を使用してTLSAクエリを発行する必要があります。すなわち、好ましいTLSAベースドメインは完全に拡張名に由来し、最初のドメイン名であるべきことは、失敗すべきです。"
    },
    {
      "indent": 3,
      "text": "When the TLSA base domain is the result of \"secure\" CNAME expansion, the resulting domain name MUST be used as the HostName in the client's SNI extension and MUST be the primary reference identifier for peer certificate matching with certificate usages other than DANE-EE(3).",
      "ja": "TLSAベースドメインはCNAME拡張、得られたドメイン名は、クライアントのSNI拡張でホスト名として使用されなければならないとDANE-EE（以外の証明書の使用とピア証明書照合のための主要な参照識別子でなければなりません「固定」の結果である場合3）。"
    },
    {
      "indent": 3,
      "text": "Protocol-specific TLSA specifications may provide additional guidance or restrictions when following CNAME expansions.",
      "ja": "CNAME展開を以下のとき、プロトコル固有のTLSA仕様は、追加のガイダンスや制限を提供することができます。"
    },
    {
      "indent": 3,
      "text": "Though CNAMEs are illegal on the right-hand side of most indirection records, such as MX and SRV records, they are supported by some implementations. For example, if the MX or SRV host is a CNAME alias, some implementations may \"chase\" the CNAME. If they do, they SHOULD use the target hostname as the preferred TLSA base domain as described above (and, if the TLSA records are found there, also use the CNAME-expanded domain in SNI and certificate name checks).",
      "ja": "CNAMEは、MXとSRVレコードなど、ほとんどの間接レコードの右側に違法であるが、彼らはいくつかの実装でサポートされています。例えば、MXまたはSRVホストはCNAMEエイリアスである場合、いくつかの実施よい「チェイス」CNAME。彼らが行う場合、彼らは（もCNAME展開SNIにおけるドメインと証明書の名前のチェックを使用、TLSAのレコードが見つかった場合、および）上記のように好適TLSAベースドメインとして対象のホスト名を使用すべきです。"
    },
    {
      "indent": 0,
      "text": "8. TLSA Publisher Requirements",
      "section_title": true,
      "ja": "8. TLSA出版社の要件"
    },
    {
      "indent": 3,
      "text": "This section updates [RFC6698] by specifying that the TLSA Publisher MUST ensure that each combination of certificate usage, selector, and matching type in the server's TLSA RRset includes at least one record that matches the server's current certificate chain. TLSA records that match recently retired or yet-to-be-deployed certificate chains will be present during key rollover. Such past or future records MUST NOT at any time be the only records published for any given combination of usage, selector, and matching type. The TLSA record update process described below ensures that this requirement is met.",
      "ja": "TLSAパブリッシャーサーバーのTLSA RRセットにおける証明書の使用、セレクタ、及びマッチングタイプの各組み合わせは、サーバの現在の証明書チェーンと一致する少なくとも1つのレコードが含まれていることを確認しなければならないことを指定することで、このセクションの更新[RFC6698]。最近退職したか、まだツー・展開された証明書チェーンがキーロールオーバーの間に存在する一致TLSAレコード。このような過去や未来のレコードは、いつでも使用、セレクタ、およびマッチング型の任意の組み合わせのために発行されたレコードのみにすることはできません。下記のTLSAレコード更新プロセスは、この要件が満たされることを保証します。"
    },
    {
      "indent": 3,
      "text": "While a server is to be considered authenticated when its certificate chain is matched by any of the published TLSA records, not all clients support all combinations of TLSA record parameters. Some clients may not support some digest algorithms; others may either not support or exclusively support the PKIX certificate usages. Some clients may prefer to negotiate [RFC7250] raw public keys, which are only compatible with TLSA records whose certificate usage is DANE-EE(3) with selector SPKI(1). The only other TLSA record type that is potentially compatible with raw public keys is \"DANE-EE(3) Cert(0) Full(0)\", but support for raw public keys with that TLSA record type is not expected to be broadly implemented.",
      "ja": "サーバはその証明書チェーンが公開TLSAレコードのいずれかにマッチしているときに認証考慮する必要があるが、すべてのクライアントがTLSAレコードパラメータのすべての組み合わせをサポートしていません。一部のクライアントには、いくつかのダイジェストアルゴリズムをサポートしていないかもしれません。他の人は、いずれかのサポートや専用のPKIX証明書使用をサポートしていないかもしれません。一部のクライアントは、その証明書の使用セレクタSPKI（1）と（3）DANE-EEあるTLSAレコードのみに対応している[RFC7250]生公開鍵を交渉することを好むことができます。生の公開鍵と潜在的に互換性のある唯一の他TLSAレコードタイプは、「（3）証明書（0）全（0）DANE-EE」であり、それTLSAレコードタイプと生の公開鍵のためのサポートは、広く実装されることが期待されていません。"
    },
    {
      "indent": 3,
      "text": "A consequence of the above uncertainty as to which TLSA parameters are supported by any given client is that servers need to ensure that each and every parameter combination that appears in the TLSA RRset is, on its own, sufficient to match the server's current certificate chain. In particular, when deploying new keys or new parameter combinations, some care is required to not generate parameter combinations that only match past or future certificate chains (or raw public keys). The rest of this section explains how to update the TLSA RRset in a manner that ensures that the above requirement is met.",
      "ja": "TLSAパラメータは任意のクライアントによってサポートされているようにこれに上記の不確実性の結果は、サーバがTLSA RRセットに表示される各およびすべてのパラメータの組み合わせは、独自に、サーバーの現在の証明書チェーンと一致するのに十分であることを確認する必要があるということです。新しいキー、または新しいパラメータの組み合わせを展開するとき、特に、いくつかの注意が唯一の過去や未来の証明書チェーン（または生の公開鍵）と一致するパラメータの組み合わせを生成しないために必要とされます。このセクションの残りの部分は、上記の要件が満たされることを保証するようにしTLSA RRセットを更新する方法について説明します。"
    },
    {
      "indent": 0,
      "text": "8.1. Key Rollover with Fixed TLSA Parameters",
      "section_title": true,
      "ja": "8.1。固定TLSAパラメータを使用したキーロールオーバー"
    },
    {
      "indent": 3,
      "text": "The simplest case is key rollover while retaining the same set of published parameter combinations. In this case, TLSA records matching the existing server certificate chain (or raw public keys) are first augmented with corresponding records matching the future keys, at least two Times to Live (TTLs) or longer before the new chain is deployed. This allows the obsolete RRset to age out of client caches before the new chain is used in TLS handshakes. Once sufficient time has elapsed and all clients performing DNS lookups are retrieving the updated TLSA records, the server administrator may deploy the new certificate chain, verify that it works, and then remove any obsolete records matching the chain that is no longer active:",
      "ja": "公表されたパラメータの組み合わせの同じセットを維持しながら、最も簡単な場合は、キーロールオーバーです。この場合、既存のサーバー証明書チェーン（または生の公開鍵）と一致TLSAレコードが最初に新しいチェーンが展開される前に（のTTL）以上を生きて未来の鍵、少なくとも2倍に一致する対応するレコードで増補されています。新しいチェーンは、TLSハンドシェイクで使用される前に、これは、クライアントのキャッシュのうち、年齢に廃止されたRRセットすることができます。一度十分な時間が経過し、DNSルックアップを実行するすべてのクライアントが更新さTLSAレコードを取得している、サーバー管理者は、新しい証明書チェーンを展開し、それが動作することを確認した後、アクティブでなくなったチェーンに一致するすべての古くなったレコードを削除することがあります。"
    },
    {
      "indent": 3,
      "text": "; Initial TLSA RRset. ; _443._tcp.www.example.org. IN TLSA 3 1 1 01d09d19c2139a46...",
      "ja": ";初期TLSA RRセット。 ; _443._tcp.www.example.org。 1 1 01d09d19c2139a46 TLSA IN 3 ..."
    },
    {
      "indent": 3,
      "text": "; Transitional TLSA RRset published at least two TTLs before ; the actual key change. ; _443._tcp.www.example.org. IN TLSA 3 1 1 01d09d19c2139a46... _443._tcp.www.example.org. IN TLSA 3 1 1 7aa7a5359173d05b...",
      "ja": ";移行TLSA RRセットは前に少なくとも二つのTTLを公表しました。実際のキーの変更。 ; _443._tcp.www.example.org。 TLSA 3 1 1 01d09d19c2139a46 ... _443._tcp.www.example.org。 TLSA 3 1 1 7aa7a5359173d05b、IN ..."
    },
    {
      "indent": 3,
      "text": "; Final TLSA RRset after the key change. ; _443._tcp.www.example.org. IN TLSA 3 1 1 7aa7a5359173d05b...",
      "ja": ";キー変更後の最終TLSA RRセット。 ; _443._tcp.www.example.org。 TLSA 3 1 1 7aa7a5359173d05b、IN ..."
    },
    {
      "indent": 3,
      "text": "The next case to consider is adding or switching to a new combination of TLSA parameters. In this case, publish the new parameter combinations for the server's existing certificate chain first, and only then deploy new keys if desired:",
      "ja": "次に考慮すべき場合には、追加またはTLSAパラメータの新しい組み合わせに切り替えています。この場合、最初のサーバーの既存の証明書チェーンのための新しいパラメータの組み合わせを公開し、必要に応じてのみ、新しいキーを配置します："
    },
    {
      "indent": 3,
      "text": "; Initial TLSA RRset. ; _443._tcp.www.example.org. IN TLSA 1 1 1 01d09d19c2139a46...",
      "ja": ";初期TLSA RRセット。 ; _443._tcp.www.example.org。 1 1 01d09d19c2139a46 TLSA IN 1 ..."
    },
    {
      "indent": 3,
      "text": "; New TLSA RRset, same key re-published as DANE-EE(3). ; _443._tcp.www.example.org. IN TLSA 3 1 1 01d09d19c2139a46...",
      "ja": ";新TLSA RRセット、同じキーDANE-EE（3）として再出版しました。 ; _443._tcp.www.example.org。 1 1 01d09d19c2139a46 TLSA IN 3 ..."
    },
    {
      "indent": 0,
      "text": "8.2. Switching to DANE-TA(2) from DANE-EE(3)",
      "section_title": true,
      "ja": "8.2。 DANE-EEからDANE-TA（2）への切り替え（3）"
    },
    {
      "indent": 3,
      "text": "This section explains how to migrate to a new certificate chain and TLSA record with usage DANE-TA(2) from a self-signed server certificate and a \"DANE-EE(3) SPKI(1) SHA2-256(1)\" TLSA record. This example assumes that a new private key is generated in conjunction with transitioning to a new certificate issued by the desired TA.",
      "ja": "このセクションでは、使用DANE-TA（2）自己署名サーバ証明書とから「DANE-EE（3）SPKI（1）SHA2-256（1）」TLSAで新しい証明書チェーンとTLSAレコードに移行する方法について説明します記録。この例では、新しい秘密鍵を希望TAによって発行された新しい証明書への移行に伴って発生していることを前提としています。"
    },
    {
      "indent": 3,
      "text": "The original \"3 1 1\" TLSA record supports [RFC7250] raw public keys, and clients may choose to negotiate their use. The use of raw public keys rules out the possibility of certificate chain verification. Therefore, the transitional TLSA record for the planned DANE-TA(2) certificate chain is a \"3 1 1\" record that works even when raw public keys are used. The TLSA RRset is updated to use DANE-TA(2) only after the new chain is deployed and the \"3 1 1\" record matching the original key is dropped.",
      "ja": "オリジナルの「3 1 1」TLSAレコードサポート[RFC7250]生の公開鍵、およびクライアントがその使用を交渉することもできます。生の公開鍵を使用すると、証明書チェーンの検証の可能性を除外する。したがって、計画DANE-TA（2）証明書チェーンの移行TLSAレコードは生の公開鍵を用いた場合でも動作「3 1 1」のレコードです。 TLSA資源レコード集合はDANE-TAを使用するように更新される（2）新たなチェーンが展開され、元のキーに一致する「3 1 1」のレコードが削除された後にのみ。"
    },
    {
      "indent": 3,
      "text": "This process follows the requirement that each combination of parameters present in the RRset is always sufficient to validate the server. It avoids publishing a transitional TLSA RRset in which \"3 1 1\" matches only the current key and \"2 0 1\" matches only the future certificate chain, because these might not work reliably during the initial deployment of the new keys.",
      "ja": "このプロセスは、RRセット内に存在するパラメータの各組合せは、常にサーバを検証するのに十分である要件に従います。これらは、新しいキーの初期展開時に確実に動作しない場合がありますので、それは、「3 1 1」と「2 0 1」のみ、将来の証明書チェーンと一致するだけで、現在のキーと一致する過渡的TLSA RRセットを公開することを回避します。"
    },
    {
      "indent": 3,
      "text": "; Initial TLSA RRset. ; _443._tcp.www.example.org. IN TLSA 3 1 1 01d09d19c2139a46...",
      "ja": ";初期TLSA RRセット。 ; _443._tcp.www.example.org。 1 1 01d09d19c2139a46 TLSA IN 3 ..."
    },
    {
      "indent": 3,
      "text": "; Transitional TLSA RRset, published at least two TTLs before the ; actual key change. The new keys are issued by a DANE-TA(2) CA ; but are initially specified via a DANE-EE(3) association. ; _443._tcp.www.example.org. IN TLSA 3 1 1 01d09d19c2139a46... _443._tcp.www.example.org. IN TLSA 3 1 1 7aa7a5359173d05b...",
      "ja": ";暫定TLSA RRセット、前に少なくとも二つのTTLを公表。実際のキーの変更。新しいキーは、DANE-TA（2）CAによって発行されています。しかし、最初にDANE-EE（3）アソシエーションを介して指定されています。 ; _443._tcp.www.example.org。 TLSA 3 1 1 01d09d19c2139a46 ... _443._tcp.www.example.org。 TLSA 3 1 1 7aa7a5359173d05b、IN ..."
    },
    {
      "indent": 3,
      "text": "; The final TLSA RRset after the key change. Now that the old ; self-signed EE key is out of the picture, publish the issuing ; TA of the new chain. ; _443._tcp.www.example.org. IN TLSA 2 0 1 c57bce38455d9e3d...",
      "ja": ";キー変更後の最終TLSA RRセット。今、昔のこと。自己署名EEキーが発行を公開、画像の外にあります。新しいチェーンのTA。 ; _443._tcp.www.example.org。 TLSA 2 0 1 c57bce38455d9e3d、IN ..."
    },
    {
      "indent": 0,
      "text": "8.3. Switching to New TLSA Parameters",
      "section_title": true,
      "ja": "8.3。新TLSAパラメータへの切り替え"
    },
    {
      "indent": 3,
      "text": "When employing a new digest algorithm in the TLSA RRset, for compatibility with digest algorithm agility as specified in Section 9 below, administrators SHOULD publish the new digest algorithm with each combination of certificate usage and selector for each associated key or chain used with any other digest algorithm. When removing an algorithm, remove it entirely. Each digest algorithm employed SHOULD match the same set of chains (or raw public keys).",
      "ja": "TLSA RRセットに新しいダイジェストアルゴリズムを使用する場合、以下のセクション9で指定されるように、ダイジェストアルゴリズムアジリティとの互換性のために、管理者は、他のダイジェストで使用される各関連するキー又はチェーンの証明書の使用とセレクタの各組み合わせと新しいダイジェストアルゴリズムを公開するべきですアルゴリズム。アルゴリズムを取り外すときは、それを完全に削除します。用いる各ダイジェストアルゴリズムは、チェーン（または生の公開鍵）の同じセットと一致する必要があります。"
    },
    {
      "indent": 3,
      "text": "; Initial TLSA RRset with \"DANE-EE(3) SHA2-256(1)\" associations ; for two keys. ; _443._tcp.www.example.org. IN TLSA 3 1 1 01d09d19c2139a46... _443._tcp.www.example.org. IN TLSA 3 1 1 7aa7a5359173d05b...",
      "ja": "; \"DANE-EE（3）SHA2-256（1）\" 団体と初期TLSA RRセット。二つの鍵のため。 ; _443._tcp.www.example.org。 TLSA 3 1 1 01d09d19c2139a46 ... _443._tcp.www.example.org。 TLSA 3 1 1 7aa7a5359173d05b、IN ..."
    },
    {
      "indent": 3,
      "text": "; New TLSA RRset, also with SHA2-512(2) associations ; for each key. ; _443._tcp.www.example.org. IN TLSA 3 1 1 01d09d19c2139a46... _443._tcp.www.example.org. IN TLSA 3 1 2 d9947c35089310bc... _443._tcp.www.example.org. IN TLSA 3 1 1 7aa7a5359173d05b... _443._tcp.www.example.org. IN TLSA 3 1 2 89a7486a4b6ae714...",
      "ja": ";新TLSA RRセット、またSHA2-512（2）団体と。各キーの。 ; _443._tcp.www.example.org。 TLSA 3 1 1 01d09d19c2139a46 ... _443._tcp.www.example.org。 TLSA 3 1 2 d9947c35089310bc ... _443._tcp.www.example.org。 TLSA 3 1 1 7aa7a5359173d05b ... _443._tcp.www.example.org。 1 2 89a7486a4b6ae714 TLSA IN 3 ..."
    },
    {
      "indent": 0,
      "text": "8.4. TLSA Publisher Requirements: Summary",
      "section_title": true,
      "ja": "8.4。 TLSA出版社の要件：概要"
    },
    {
      "indent": 3,
      "text": "In summary, server operators updating TLSA records should make one change at a time. The individual safe changes are as follows:",
      "ja": "要約すると、TLSAレコードを更新サーバーオペレータは、一度に1つの変更を行う必要があります。次のように個々の安全な変更点は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "o Pre-publish new certificate associations that employ the same TLSA parameters (usage, selector, and matching type) as existing TLSA records, but match certificate chains that will be deployed in the near future.",
      "ja": "O新しい既存のTLSAレコードと同じTLSAパラメータ（使用、セレクタ、及び整合型）を採用証明書の関連付けが、近い将来に配備される一致証明書チェーンを事前公開。"
    },
    {
      "indent": 3,
      "text": "o Wait for stale TLSA RRsets to expire from DNS caches before configuring servers to use the new certificate chain.",
      "ja": "O新しい証明書チェーンを使用するようにサーバーを設定する前に、DNSキャッシュから期限切れに古いTLSAのRRセットを待ちます。"
    },
    {
      "indent": 3,
      "text": "o Remove TLSA records matching any certificate chains that are no longer deployed.",
      "ja": "Oもはや配備されているすべての証明書チェーンを一致TLSAレコードを削除します。"
    },
    {
      "indent": 3,
      "text": "o Publish TLSA RRsets in which all parameter combinations (certificate usage, selector, and matching type) present in the RRset match the same set of current and planned certificate chains.",
      "ja": "O資源レコード集合に存在する全てのパラメータの組み合わせ（証明書の使用、セレクタ、及びマッチングタイプ）現在および計画された証明書チェーンの同じセットに一致するTLSAの資源レコード集合を公開。"
    },
    {
      "indent": 3,
      "text": "The above steps are intended to ensure that at all times, and for each combination of usage, selector, and matching type, at least one TLSA record corresponds to the server's current certificate chain. Each combination of certificate usage, selector, and matching type in a server's TLSA RRset SHOULD NOT at any time (including unexpired RRsets in client caches) match only some combination of future or past certificate chains. As a result, no matter what combinations of usage, selector, and matching type may be supported by a given client, they will be sufficient to authenticate the server.",
      "ja": "上記のステップは、少なくとも一つTLSAレコードがサーバの現在の証明書チェーンに対応し、常に、使用、セレクタ、及びマッチングタイプの組み合わせ毎にそれを確実にするために意図されています。サーバーのTLSA RRセットでの証明書の使用方法、セレクタ、およびマッチング型の各組み合わせは、（クライアントキャッシュで有効期限内のRRセットを含む）任意の時点で、将来または過去の証明書チェーンの唯一のいくつかの組合せと一致すべきではありません。その結果、関係なく、与えられたクライアントによって支持することができるものを使用、セレクタ、およびマッチング型の組み合わせ、彼らがサーバーを認証するのに十分でなくなります。"
    },
    {
      "indent": 0,
      "text": "9. Digest Algorithm Agility",
      "section_title": true,
      "ja": "9.ダイジェストアルゴリズムアジリティ"
    },
    {
      "indent": 3,
      "text": "While [RFC6698] specifies multiple digest algorithms, it does not specify a protocol by which the client and TLSA record publisher can agree on the strongest shared algorithm. Such a protocol would allow the client and server to avoid exposure to deprecated weaker algorithms that are published for compatibility with less capable clients but that SHOULD be avoided when possible. Such a protocol is specified below.",
      "ja": "[RFC6698]は、複数のダイジェストアルゴリズムを指定しますが、それは、クライアントとTLSAレコードパブリッシャが最強の共有アルゴリズムに同意することができたことにより、プロトコルを指定しません。このようなプロトコルは、クライアントとサーバが少ない可能なクライアントとの互換性のために公開されますが、可能な場合、それは避けるべき非推奨弱いアルゴリズムへの露出を避けることが可能になります。そのようなプロトコルは、以下に規定されます。"
    },
    {
      "indent": 3,
      "text": "This section defines a protocol for avoiding deprecated digest algorithms when these are published in a peer's TLSA RRset alongside stronger digest algorithms. Note that this protocol never avoids RRs with a DANE matching type of Full(0), as these do not employ a digest algorithm that might someday be weakened by cryptanalysis.",
      "ja": "このセクションでは、これらが強いダイジェストアルゴリズムと一緒にピアのTLSA RRセットで公開されたときにダイジェストアルゴリズム非推奨回避するためのプロトコルを定義します。これらはいつか暗号解読によって弱体化される可能性がありますダイジェストアルゴリズムを採用していないとして、このプロトコルは、完全のDANEマッチングタイプ（0）とRRを回避したことがないことに注意してください。"
    },
    {
      "indent": 3,
      "text": "Client implementations SHOULD implement a default order of digest algorithms by strength. This order SHOULD be configurable by the administrator or user of the client software. If possible, a configurable mapping from numeric DANE TLSA matching types to underlying digest algorithms provided by the cryptographic library SHOULD be implemented to allow new matching types to be used with software that predates their introduction. Configurable ordering of digest algorithms SHOULD be extensible to any new digest algorithms.",
      "ja": "クライアントの実装は、強度によってダイジェストアルゴリズムのデフォルトの順序を実装する必要があります。この順序は、クライアントソフトウェアの管理者またはユーザーが設定可能であるべきです。可能な場合は、暗号化ライブラリが提供するダイジェストアルゴリズムを根本的に数値DANE TLSAマッチング種類から設定可能なマッピングは、新しいマッチングの種類は、その導入に先行ソフトウェアで使用できるようにするために実施されるべきです。ダイジェストアルゴリズムの設定可能な順序は、新しいダイジェストアルゴリズムに拡張可能であるべきです。"
    },
    {
      "indent": 3,
      "text": "To make digest algorithm agility possible, all published DANE TLSA RRsets MUST conform to the requirements of Section 8. Clients SHOULD use digest algorithm agility when processing the peer's DANE TLSA records. Algorithm agility is to be applied after first discarding any unusable or malformed records (unsupported digest algorithm, or incorrect digest length). For each usage and selector, the client SHOULD process only any usable records with a matching type of Full(0) and the usable records whose digest algorithm is considered by the client to be the strongest among usable records with the given usage and selector.",
      "ja": "可能なアルゴリズムの俊敏性をダイジェストにするために、公開されたすべてのDANE TLSA RRセットは8クライアントは、ピアのDANE TLSAレコードを処理するときに、アルゴリズムの俊敏性をダイジェスト使用すべきである節の要求事項に従わなければなりません。アルゴリズムの俊敏性は（サポートされていないダイジェストアルゴリズム、または不正長さをダイジェスト）最初の任意の使用できないか、不正な形式のレコードを破棄した後に適用されます。各使用セレクタのために、クライアントは、フル（0）とそのダイジェストアルゴリズムを与え使用セレクタで使用可能なレコードのうち最強であることがクライアントによって考慮され、使用可能なレコードのマッチングタイプでのみ使用可能な任意のレコードを処理しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Example: a client implements digest algorithm agility and prefers SHA2-512(2) over SHA2-256(1), while the server publishes an RRset that employs both digest algorithms as well as a Full(0) record.",
      "ja": "例：クライアントは、アルゴリズムアジリティダイジェスト実装し、サーバがアルゴリズム並びにフル（0）レコードを消化両方採用RRセットを公開しながら、SHA2-256上SHA2-512（2）（1）を好みます。"
    },
    {
      "indent": 3,
      "text": "_25._tcp.mail.example.com. IN TLSA 3 1 1 ( 3FE246A848798236DD2AB78D39F0651D 6B6E7CA8E2984012EB0A2E1AC8A87B72 ) _25._tcp.mail.example.com. IN TLSA 3 1 2 ( D4F5AF015B46C5057B841C7E7BAB759C BF029526D29520C5BE6A32C67475439E 54AB3A945D80C743347C9BD4DADC9D8D 57FAB78EAA835362F3CA07CCC19A3214 ) _25._tcp.mail.example.com. IN TLSA 3 1 0 ( 3059301306072A8648CE3D020106082A 8648CE3D0301070342000471CB1F504F 9E4B33971376C005445DACD33CD79A28 81C3DED1981F18E7AAA76609DD0E4EF2 8265C82703030AD60C5DBA6FB8A9397A C0FCF06D424C885D484887 )",
      "ja": "_25._tcp.mail.example.com。 TLSA 3 1 1（3FE246A848798236DD2AB78D39F0651D 6B6E7CA8E2984012EB0A2E1AC8A87B72）_25._tcp.mail.example.com。 TLSA 3 IN 1 2（D4F5AF015B46C5057B841C7E7BAB759C BF029526D29520C5BE6A32C67475439E 54AB3A945D80C743347C9BD4DADC9D8D 57FAB78EAA835362F3CA07CCC19A3214）_25._tcp.mail.example.com。 TLSA IN 3 1 0（3059301306072A8648CE3D020106082A 8648CE3D0301070342000471CB1F504F 9E4B33971376C005445DACD33CD79A28 81C3DED1981F18E7AAA76609DD0E4EF2 8265C82703030AD60C5DBA6FB8A9397A C0FCF06D424C885D484887）"
    },
    {
      "indent": 3,
      "text": "In this case, the client SHOULD accept a server public key that matches either the \"3 1 0\" record or the \"3 1 2\" record, but it SHOULD NOT accept keys that match only the weaker \"3 1 1\" record.",
      "ja": "この場合、クライアントは「3 1 0」レコードまたは「3 1 2」のレコードのいずれかに一致するサーバーの公開鍵を受け入れる必要があり、それだけで弱い「3 1 1」のレコードに一致するキーを受け入れるべきではありません。"
    },
    {
      "indent": 0,
      "text": "10. General DANE Guidelines",
      "section_title": true,
      "ja": "10.一般的なDANEガイドライン"
    },
    {
      "indent": 3,
      "text": "These guidelines provide guidance for using or designing protocols for DANE.",
      "ja": "これらのガイドラインは、DANEのためのプロトコルを使用するか、または設計するための指針を提供します。"
    },
    {
      "indent": 0,
      "text": "10.1. DANE DNS Record Size Guidelines",
      "section_title": true,
      "ja": "10.1。 DANE DNSレコードサイズのガイドライン"
    },
    {
      "indent": 3,
      "text": "Selecting a combination of TLSA parameters to use requires careful thought. One important consideration to take into account is the size of the resulting TLSA record after its parameters are selected.",
      "ja": "使用にTLSAパラメータの組み合わせを選択すると、慎重に検討する必要があります。そのパラメータが選択された後に考慮すべき一つの重要な考慮事項は、得られTLSAレコードのサイズです。"
    },
    {
      "indent": 0,
      "text": "10.1.1. UDP and TCP Considerations",
      "section_title": true,
      "ja": "10.1.1。 UDPとTCPの考慮事項"
    },
    {
      "indent": 3,
      "text": "Deployments SHOULD avoid TLSA record sizes that cause UDP fragmentation.",
      "ja": "展開はUDP断片化を引き起こすTLSAレコードサイズを避ける必要があります。"
    },
    {
      "indent": 3,
      "text": "Although DNS over TCP would provide the ability to more easily transfer larger DNS records between clients and servers, it is not universally deployed and is still prohibited by some firewalls. Clients that request DNS records via UDP typically only use TCP upon receipt of a truncated response in the DNS response message sent over UDP. Setting the Truncation (TC) bit (Section 4.1.1 of [RFC1035]) alone will be insufficient if the response containing the TC bit is itself fragmented.",
      "ja": "TCP経由のDNSをより簡単に、クライアントとサーバーの間で大きなDNSレコードを転送する機能を提供するが、それは普遍的に配備されておらず、まだいくつかのファイアウォールによって禁止されています。 UDP経由でDNSレコードを要求するクライアントは、一般的にのみUDPを介して送信されるDNS応答メッセージで切り捨て応答を受信すると、TCPを使用しています。 TCビットを含む応答が断片自体である場合にのみ切り捨て（TC）ビット（[RFC1035]のセクション4.1.1）を設定することは不十分であろう。"
    },
    {
      "indent": 0,
      "text": "10.1.2. Packet Size Considerations for TLSA Parameters",
      "section_title": true,
      "ja": "10.1.2。 TLSAパラメータのパケットサイズの考慮事項"
    },
    {
      "indent": 3,
      "text": "Server operators SHOULD NOT publish TLSA records using both a TLSA selector of Cert(0) and a TLSA matching type of Full(0), as even a single certificate is generally too large to be reliably delivered via DNS over UDP. Furthermore, two TLSA records containing full certificates will need to be published simultaneously during a certificate rollover, as discussed in Section 8.1.",
      "ja": "1つでも証明書は、一般的に確実UDP上にDNSを介して配信されるには大きすぎるようにサーバのオペレータは、証明書のTLSAセレクタ（0）とフルのTLSAマッチングタイプ（0）の両方を使用してTLSAレコードを公開するべきではありません。さらに、完全な証明書を含む2つのTLSAレコードは、8.1節で述べたように、証明書のロールオーバー時に同時に公表する必要があります。"
    },
    {
      "indent": 3,
      "text": "While TLSA records using a TLSA selector of SPKI(1) and a TLSA matching type of Full(0) (which publish the bare public keys, i.e., without the overhead of encapsulating the keys in an X.509 certificate) are generally more compact, these are also best avoided when significantly larger than their digests. Rather, servers SHOULD publish digest-based TLSA matching types in their TLSA records, in which case the complete corresponding certificate MUST be transmitted to the client in-band during the TLS handshake. The certificate (or raw public key) can be easily verified using the digest value.",
      "ja": "SPKIのTLSAセレクタを使用TLSAレコード（1）及び（X.509証明書にキーを封入するオーバーヘッドなしに、裸の公開鍵、すなわち公開）本文のTLSAマッチングタイプ（0）は、一般に、よりコンパクトでありながらそのダイジェストよりも有意に大きいとき、これらはまた、最高の回避されています。むしろ、サーバーは、完全な対応する証明書は、TLSハンドシェイク中に、帯域内のクライアントに送信する必要がある場合には、そのTLSA記録のダイジェストベースTLSA一致タイプを、公開する必要があります。証明書（または生公開鍵）を容易にダイジェスト値を用いて検証することができます。"
    },
    {
      "indent": 3,
      "text": "In summary, the use of a TLSA matching type of Full(0) is NOT RECOMMENDED, and a digest-based matching type, such as SHA2-256(1), SHOULD be used instead.",
      "ja": "要約すると、フル（0）のTLSAマッチングタイプの使用が推奨されておらず、そのようなSHA2-256などダイジェストベースのマッチングタイプは、（1）、代わりに使用されるべきです。"
    },
    {
      "indent": 0,
      "text": "10.2. Certificate Name Check Conventions",
      "section_title": true,
      "ja": "10.2。証明書の名前を確認する規則"
    },
    {
      "indent": 3,
      "text": "Certificates presented by a TLS server will generally contain a subjectAltName (SAN) extension or a Common Name (CN) element within the subject Distinguished Name (DN). The TLS server's DNS domain name is normally published within these elements, ideally within the SAN extension. (The use of the CN field for this purpose is deprecated.)",
      "ja": "TLSサーバによって提示された証明書は、一般のsubjectAltName（SAN）拡張または対象の識別名（DN）内の共通名（CN）要素を含むであろう。 TLSサーバーのDNSドメイン名は、通常、理想的なSANエクステンションの中に、これらの要素内で公開されています。 （この目的のためのCNフィールドを使用することが推奨されていません。）"
    },
    {
      "indent": 3,
      "text": "When a server hosts multiple domains at the same transport endpoint, the server's ability to respond with the right certificate chain is predicated on correct SNI information from the client. DANE clients MUST send the SNI extension with a HostName value of the base domain of the TLSA RRset.",
      "ja": "サーバーが同じトランスポートエンドポイントで複数のドメインをホストする場合は、右の証明書チェーンで応答するサーバーの機能は、クライアントからの正しいSNI情報に基づいています。 DANEクライアントはTLSA RRセットのベースドメインのホスト名の値を持つSNI拡張を送らなければなりません。"
    },
    {
      "indent": 3,
      "text": "With the exception of TLSA certificate usage DANE-EE(3), where name checks are not applicable (see Section 5.1), DANE clients MUST verify that the client has reached the correct server by checking that the server name is listed in the server certificate's SAN or CN (when still supported). The primary server name used for this comparison MUST be the TLSA base domain; however, additional acceptable names may be specified by protocol-specific DANE standards. For example, with SMTP, both the destination domain name and the MX hostname are acceptable names to be found in the server certificate (see [RFC7672]).",
      "ja": "名前のチェックは適用されませんTLSA証明書使用DANE-EE（3）、を除いて（セクション5.1を参照）、DANEクライアントは、クライアントがサーバー名がサーバ証明書の中に記載されていることを確認することで、正しいサーバーに到達していることを確かめなければなりません（まだサポートされている）SANまたはCN。この比較のために使用されるプライマリサーバ名がTLSAベースドメインでなければなりません。しかし、追加の許容名は、プロトコル固有のDANE規格によって指定することができます。例えば、SMTP、宛先ドメイン名とMXのホスト名の両方で（[RFC7672]を参照）、サーバ証明書に見出されるべき許容される名前です。"
    },
    {
      "indent": 3,
      "text": "It is the responsibility of the service operator, in coordination with the TLSA Publisher, to ensure that at least one of the TLSA records published for the service will match the server's certificate chain (either the default chain or the certificate that was selected based on the SNI information provided by the client).",
      "ja": "これは、（デフォルト鎖またはに基づいて選択された証明書のいずれかのサービスのために公開TLSAレコードの少なくとも一つは、サーバの証明書チェーンと一致することを確実にするために、TLSA出版社と連携して、サービス事業者の責任でありますクライアントが提供するSNI情報）。"
    },
    {
      "indent": 3,
      "text": "Given the DNSSEC-validated DNS records below:",
      "ja": "下記のDNSSEC検証さDNSレコードを考えます："
    },
    {
      "indent": 3,
      "text": "example.com. IN MX 0 mail.example.com. mail.example.com. IN A 192.0.2.1 _25._tcp.mail.example.com. IN TLSA 2 0 1 ( E8B54E0B4BAA815B06D3462D65FBC7C0 CF556ECCF9F5303EBFBB77D022F834C0 )",
      "ja": "example.com。 MX 0 mail.example.com、IN。 mail.example.com。 192.0.2.1 _25._tcp.mail.example.com、IN。 TLSA IN 2 0 1（E8B54E0B4BAA815B06D3462D65FBC7C0 CF556ECCF9F5303EBFBB77D022F834C0）"
    },
    {
      "indent": 3,
      "text": "The TLSA base domain is \"mail.example.com\" and is required to be the HostName in the client's SNI extension. The server certificate chain is required to be signed by a TA with the above certificate SHA2-256 digest. Finally, one of the DNS names in the server certificate is required to be either \"mail.example.com\" or \"example.com\" (this additional name is a concession to compatibility with prior practice; see [RFC7672] for details).",
      "ja": "TLSAベースドメインは「mail.example.com」であり、クライアントのSNI拡張内のホスト名であることが必要です。サーバ証明書チェーンは、上記証明書SHA2-256ダイジェストとTAによって署名される必要があります。最後に、サーバ証明書でDNS名のいずれかが（;詳細については、[RFC7672]を見てください、この追加の名前が前の練習との互換性のための譲歩である）「mail.example.com」または「example.com」のいずれかであることが必要です。"
    },
    {
      "indent": 3,
      "text": "[RFC6125] specifies the semantics of wildcards in server certificates for various application protocols. DANE does not change how wildcards are treated by any given application.",
      "ja": "[RFC6125]は、さまざまなアプリケーションプロトコルのためのサーバ証明書でワイルドカードの意味を指定します。 DANEは、ワイルドカードは、任意のアプリケーションによって処理されている方法を変更しません。"
    },
    {
      "indent": 0,
      "text": "10.3. Design Considerations for Protocols Using DANE",
      "section_title": true,
      "ja": "10.3。 DANEを使用するプロトコルの設計上の考慮事項"
    },
    {
      "indent": 3,
      "text": "When a TLS client goes to the trouble of authenticating a certificate chain presented by a TLS server, it will typically not continue to use that server in the event of authentication failure, or else authentication serves no purpose. Some clients may, at times, operate in an \"audit\" mode, where authentication failure is reported to the user or in logs as a potential problem, but the connection proceeds despite the failure. Nevertheless, servers publishing TLSA records MUST be configured to allow correctly configured clients to successfully authenticate their TLS certificate chains.",
      "ja": "TLSクライアントはTLSサーバによって提示された証明書チェーンを認証のトラブルになると、それは通常、認証失敗の事象において、そのサーバーを使用し続けないであろう、または他の認証が目的を達成しません。一部のクライアントは、時々、認証失敗をユーザーにまたは潜在的な問題などのログで報告された「監査」モードで動作しますが、失敗にもかかわらず、接続が進行することがあります。それにも関わらず、TLSAレコードを公開サーバが正しく設定されたクライアントが正常に彼らのTLS証明書チェーンを認証できるように設定する必要があります。"
    },
    {
      "indent": 3,
      "text": "A service with DNSSEC-validated TLSA records implicitly promises TLS support. When all the TLSA records for a service are found \"unusable\" due to unsupported parameter combinations or malformed certificate association data, DANE clients cannot authenticate the service certificate chain. When authenticated TLS is mandatory, the client MUST NOT connect to the associated server.",
      "ja": "DNSSEC検証さTLSAレコードを持つサービスは、暗黙的にTLSのサポートをお約束します。サービスのすべてのTLSAレコードが原因サポートされていないパラメータの組み合わせや不正な証明書対応データに「使用不可能」発見された場合、DANEクライアントは、サービスの証明書チェーンを認証することはできません。 TLSが必須で認証された場合は、クライアントが関連付けられているサーバーに接続してはなりません。"
    },
    {
      "indent": 3,
      "text": "If, on the other hand, the use of TLS and DANE is \"opportunistic\" [RFC7435], then when all TLSA records are unusable, the client SHOULD connect to the server via an unauthenticated TLS connection, and if TLS encryption cannot be established, the client MUST NOT connect to the server.",
      "ja": "一方、TLSとDANEの使用は「日和見主義」である場合は、[RFC7435]すべてTLSAレコードが使用できない場合は、その後、クライアントが認証されていないTLS接続を介してサーバーに接続する必要があり、およびTLS暗号化が確立できない場合クライアントがサーバーに接続することはできません。"
    },
    {
      "indent": 3,
      "text": "Standards for opportunistic DANE TLS specific to a particular application protocol may modify the above requirements. The key consideration is whether or not mandating the use of (unauthenticated) TLS even with unusable TLSA records is asking for more security than one can realistically expect. If expecting TLS support when unusable TLSA records are published is realistic for the application in question, then the application MUST avoid cleartext. If not realistic, then mandating TLS would cause clients (even in the absence of active attacks) to run into problems with various peers that do not interoperate \"securely enough\". That would create strong incentives to just disable Opportunistic Security and stick with cleartext.",
      "ja": "特定のアプリケーションプロトコルに固有の日和見DANE TLSの規格は上記の要件を変更することができます。重要な検討事項であっても使用できないTLSAレコードと（認証されていない）TLSの使用を義務付けることは1が現実的に期待できる以上のセキュリティを求めているかどうかではありません。使用不可能TLSAレコードが公開されているTLSのサポートを期待することは問題のアプリケーションのための現実的である場合、アプリケーションは平文を避けなければなりません。現実的でない場合には、義務TLSは「しっかりと十分な」相互運用できません。さまざまな仲間との問題に実行する（でも能動的な攻撃が存在しない状態で）クライアントを引き起こします。それはちょうど日和見セキュリティを無効にし、平文に固執する強いインセンティブを作成します。"
    },
    {
      "indent": 0,
      "text": "11. Note on DNSSEC Security",
      "section_title": true,
      "ja": "DNSSECセキュリティ上の注意11。"
    },
    {
      "indent": 3,
      "text": "Clearly, the security of the DANE TLSA PKI rests on the security of the underlying DNSSEC infrastructure. While this document is not a guide to DNSSEC security, a few comments may be helpful to TLSA implementers.",
      "ja": "明らかに、DANE TLSA PKIのセキュリティは、基礎となるDNSSECインフラストラクチャのセキュリティにかかっています。この文書はDNSSECのセキュリティへのガイドではありませんが、いくつかのコメントはTLSAの実装に役立つかもしれません。"
    },
    {
      "indent": 3,
      "text": "With the existing public CA Web PKI, name constraints are rarely used, and a public root CA can issue certificates for any domain of its choice. With DNSSEC, under the Registry/Registrar/Registrant model, the situation is different: only the registrar of record can update a domain's DS record [RFC4034] in the registry parent zone (in some cases, however, the registry is the sole registrar). With many Generic Top-Level Domains (gTLDs) for which multiple registrars compete to provide domains in a single registry, it is important to make sure that rogue registrars cannot easily initiate an unauthorized domain transfer and thus take over DNSSEC for the domain. DNS operators are advised to set a registrar lock on their domains to offer some protection against this possibility.",
      "ja": "既存のパブリックCAのWeb PKIでは、名前制約はほとんど使用されず、公共のルートCAは、その選択肢の任意のドメインの証明書を発行することができます。 DNSSECでは、レジストリ/レジストラ/登録者モデルで、状況が異なっている：レコードの唯一のレジストラは、レジストリの親ゾーンにドメインのDSレコード[RFC4034]を更新することができます（いくつかのケースでは、しかし、レジストリは唯一のレジストラです） 。複数のレジストラは、単一のレジストリにドメインを提供するために競争するために多くのジェネリックトップレベルドメイン（gTLDの）で、不正なレジストラーが簡単に不正なドメイン転送を開始するため、ドメインのためにDNSSECを引き継ぐことができないことを確認することが重要です。 DNS演算子は、この可能性に対して何らかの保護を提供するために自分のドメインのレジストラロックを設定することをお勧めします。"
    },
    {
      "indent": 3,
      "text": "When the registrar is also the DNS operator for the domain, one needs to consider whether or not the registrar will allow orderly migration of the domain to another registrar or DNS operator in a way that will maintain DNSSEC integrity. TLSA Publishers are advised to seek out a DNS hosting registrar that makes it possible to transfer domains to another hosting provider without disabling DNSSEC.",
      "ja": "レジストラは、ドメインのDNSオペレータである場合には、一つはレジストラがDNSSECの整合性を維持する方法で、別のレジストラまたはDNSオペレータにドメインの秩序ある移行を許可するかどうかを検討する必要があります。 TLSA出版社は、DNSSECを無効にせずに、別のホスティングプロバイダにドメインを転送することが可能となるレジストラをホストするDNSを模索することをお勧めします。"
    },
    {
      "indent": 3,
      "text": "DNSSEC-signed RRsets cannot be securely revoked before they expire. Operators need to plan accordingly and not generate signatures of excessively long duration. For domains publishing high-value keys, a signature lifetime (length of the \"signature validity period\" as described in Section 8.1 of [RFC4033]) of a few days is reasonable, and the zone can be re-signed daily. For domains with less critical data, a reasonable signature lifetime is a couple of weeks to a month, and the zone can be re-signed weekly.",
      "ja": "有効期限が切れる前に、DNSSEC署名付きRRセットが確実に取り消すことはできません。オペレータはそれに応じて計画し、過度に長い期間の署名を生成しないする必要があります。価値の高いキーを公開するドメインについては、数日の署名寿命（[RFC4033]のセクション8.1に記載されているように「署名有効期間」の長さ）が合理的であり、そしてゾーンは毎日再署名することができます。それほど重要なデータを持つドメインについては、合理的な署名の有効期間は、月に数週間で、そしてゾーンは毎週再署名することができます。"
    },
    {
      "indent": 3,
      "text": "Short signature lifetimes require tighter synchronization of primary and secondary nameservers, to make sure that secondary servers never serve records with expired signatures. They also limit the maximum time for which a primary server that signs the zone can be down. Therefore, short signature lifetimes are more appropriate for sites with dedicated operations staff, who can restore service quickly in case of a problem.",
      "ja": "ショート署名寿命は、セカンダリサーバが期限切れの署名を持つレコードを提供したことがないことを確認するために、プライマリとセカンダリネームサーバの緊密な同期を必要としています。彼らはまた、ゾーンに署名するプライマリサーバーがダウンすることができための最大時間を制限します。そのため、短い署名寿命が問題の場合にはサービスを迅速に復元することができ、専用の運用スタッフを持つサイト、より適しています。"
    },
    {
      "indent": 3,
      "text": "Monitoring is important. If a DNS zone is not re-signed in a timely manner, a major outage is likely, as the entire domain and all its sub-domains become \"bogus\".",
      "ja": "モニタリングは重要です。 DNSゾーンがタイムリーに再署名されていない場合は、主要な停電は、ドメイン全体として、可能性があり、そのすべてのサブドメインは「偽」になります。"
    },
    {
      "indent": 1,
      "text": "12. Summary of Updates to",
      "section_title": true,
      "ja": "アップデートの12.まとめ"
    },
    {
      "indent": 3,
      "text": "o Section 3 updates [RFC6698] to specify a requirement for clients to support at least TLS 1.0 and to support SNI.",
      "ja": "少なくともTLS 1.0をサポートし、SNIをサポートするために、クライアントの要件を指定するO部3つのアップデート[RFC6698]。"
    },
    {
      "indent": 3,
      "text": "o Section 4 explains that application support for all four certificate usages is NOT RECOMMENDED. The recommended design is to support just DANE-EE(3) and DANE-TA(2).",
      "ja": "O部4は、4つのすべての証明書の使用のためのアプリケーションのサポートが推奨されていないことを説明しています。推奨されるデザインは、ちょうどDANE-EE（3）とDANE-TAをサポートすることです（2）。"
    },
    {
      "indent": 3,
      "text": "o Section 5.1 updates [RFC6698] to specify that peer identity matching and validity period enforcement are based solely on the TLSA RRset properties. It also specifies DANE authentication of raw public keys [RFC7250] via TLSA records with certificate usage DANE-EE(3) and selector SPKI(1).",
      "ja": "ピアのアイデンティティマッチングと有効期間の執行を単独でTLSA RRセットのプロパティに基づいていることを指定するには、O第5.1アップデート[RFC6698]。また、（3）証明書の使用DANE-EEとTLSAレコードを介して生の公開鍵[RFC7250]のDANE認証を指定し、セレクタSPKI（1）。"
    },
    {
      "indent": 3,
      "text": "o Section 5.2 updates [RFC6698] to require that servers publishing digest TLSA records with a usage of DANE-TA(2) MUST include the TA certificate in their TLS server certificate message. This extends to the case of \"2 1 0\" TLSA records that publish a full public key.",
      "ja": "DANE-TAの使用にダイジェストTLSAレコードを公開サーバ（2）は、それらのTLSサーバ証明書メッセージにTA証明書を含まなければならないことを要求するOセクション5.2アップデート[RFC6698]。これは、完全な公開鍵を公開「2 1 0」TLSAレコードの場合にも拡張されます。"
    },
    {
      "indent": 3,
      "text": "o Section 5.4 observes that with usage PKIX-TA(0), clients may need to process extended trust chains beyond the first trusted issuer when that issuer is not self-signed.",
      "ja": "O 5.4節では、使用PKIX-TAと（0）、クライアントはその発行者が自己署名されていないときに最初に、信頼できる発行元を超えて拡張信頼チェーンを処理する必要があるかもしれないことを観察しています。"
    },
    {
      "indent": 3,
      "text": "o Section 7 recommends that DANE application protocols specify that, when possible, securely CNAME-expanded names be used to derive the TLSA base domain.",
      "ja": "O部7はデーンアプリケーションプロトコルが可能で、確実CNAME拡張名はTLSAベースドメインを導出するために使用された場合に、それを指定することをお勧めします。"
    },
    {
      "indent": 3,
      "text": "o Section 8 specifies a strategy for managing TLSA records that interoperates with DANE clients regardless of what subset of the possible TLSA record types (combinations of TLSA parameters) is supported by the client.",
      "ja": "O部8は、クライアントによってサポートされている可能TLSAレコードタイプのどのサブセット（TLSAパラメータの組み合わせ）にかかわらず、DANEクライアントとの相互運用TLSAレコードを管理するための戦略を指定します。"
    },
    {
      "indent": 3,
      "text": "o Section 9 specifies a digest algorithm agility protocol.",
      "ja": "O部9は、ダイジェストアルゴリズムの俊敏性プロトコルを指定します。"
    },
    {
      "indent": 3,
      "text": "o Section 10.1 recommends against the use of Full(0) TLSA records, as digest records are generally much more compact.",
      "ja": "レコードは、一般的にはるかにコンパクトでダイジェストとしてO部10.1は、全（0）TLSAレコードを使用しないことを推奨します。"
    },
    {
      "indent": 0,
      "text": "13. Operational Considerations",
      "section_title": true,
      "ja": "13.運用に関する注意事項"
    },
    {
      "indent": 3,
      "text": "The DNS TTL of TLSA records needs to be chosen with care. When an unplanned change in the server's certificate chain and TLSA RRset is required, such as when keys are compromised or lost, clients that cache stale TLSA records will fail to validate the certificate chain of the updated server. Publish TLSA RRsets with TTLs that are short enough to limit unplanned service disruption to an acceptable duration.",
      "ja": "TLSAレコードのDNSのTTLは注意して選択する必要があります。計画外のサーバーの証明書チェーンの変化とTLSA RRセットが必要な場合は、キーが漏洩または紛失された場合など、古いTLSAレコードをキャッシュクライアントが更新され、サーバーの証明書チェーンの検証に失敗します。許容可能な期間に予定外のサービス中断を制限するのに十分に短いTTLをしてTLSA RRセットを公開します。"
    },
    {
      "indent": 3,
      "text": "The signature lifetime (length of the signature validity period) for TLSA records SHOULD NOT be too long. Signed DNSSEC records can be replayed by an MITM attacker, provided the signatures have not yet expired. Shorter signature validity periods allow for faster invalidation of compromised keys. Zone refresh and expiration times for secondary nameservers often imply a lower bound on the signature validity period (Section 11). See Section 4.4.1 of [RFC6781].",
      "ja": "TLSAレコードの署名寿命（署名の有効期間の長さ）が長すぎるべきではありません。署名付きDNSSECレコードはMITM攻撃者によって再生することができ、署名がまだ有効期限が切れていない提供。短い署名有効期間は、妥協のキーの速い無効化を可能とします。二次ネームサーバのゾーンリフレッシュと有効期限の時間は、多くの場合、署名の有効期間（第11条）の下限を意味します。 [RFC6781]のセクション4.4.1を参照してください。"
    },
    {
      "indent": 0,
      "text": "14. Security Considerations",
      "section_title": true,
      "ja": "14.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "Application protocols that cannot use the existing public CA Web PKI may choose to not implement certain TLSA record types defined in [RFC6698]. If such records are published despite not being supported by the application protocol, they are treated as \"unusable\". When TLS is opportunistic, the client MAY proceed to use the server with mandatory unauthenticated TLS. This is stronger than opportunistic TLS without DANE, since in that case the client may also proceed with a cleartext connection. When TLS is not opportunistic, the client MUST NOT connect to the server.",
      "ja": "[RFC6698]で定義された特定のTLSAレコードタイプを実装していないウェブPKIはに選択することができ、既存のパブリックCAを使用することはできませんアプリケーションプロトコル。そのような記録は、アプリケーションプロトコルによってサポートされていないにも関わらず、公開されている場合は、「使用不可能」として扱われます。 TLSは日和見である場合には、クライアントが認証されていない必須TLSを使用してサーバを使用するように進むことができます。その場合には、クライアントはまた、平文接続で進むことから、これは、DANEなし日和見TLSよりも強力です。 TLSは日和見ない場合、クライアントはサーバーに接続してはなりません。"
    },
    {
      "indent": 3,
      "text": "Thus, when TLSA records are used with opportunistic protocols where PKIX-TA(0) and PKIX-EE(1) do not apply, the recommended protocol design is for servers to not publish such TLSA records, and for opportunistic TLS clients to use them to only enforce the use of (albeit unauthenticated) TLS but otherwise treat them as unusable. Of course, when PKIX-TA(0) and PKIX-EE(1) are supported by the application protocol, clients MUST implement these certificate usages as described in [RFC6698] and this document.",
      "ja": "このように、TLSAレコードはPKIX-TA日和見プロトコルで使用されている場合（0）とPKIX-EE（1）は適用されません、推奨されるプロトコルの設計は、サーバは、このようなTLSAレコードを公開しないようにするためのもので、日和見TLSクライアントのためにそれらを使用しますTLS（認証されていないとはいえ）の使用を強制するが、それ以外は使用できないとして扱います。 [RFC6698]この文書に記載されているように、もちろん、場合PKIX-TA（0）とPKIX-EE（1）アプリケーション・プロトコルでサポートされているが、クライアントはこれらの証明書の使用を実装しなければなりません。"
    },
    {
      "indent": 0,
      "text": "15. References",
      "section_title": true,
      "ja": "15.参考文献"
    },
    {
      "indent": 0,
      "text": "15.1. Normative References",
      "section_title": true,
      "ja": "15.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <http://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<http://www.rfc-editor.org/info/ RFC2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC4033] Arends, R., Austein, R., Larson, M., Massey, D., and S. Rose, \"DNS Security Introduction and Requirements\", RFC 4033, DOI 10.17487/RFC4033, March 2005, <http://www.rfc-editor.org/info/rfc4033>.",
      "ja": "[RFC4033]アレンズ、R.、Austeinと、R.、ラーソン、M.、マッシー、D.、およびS.ローズ、 \"DNSセキュリティ序論と要件\"、RFC 4033、DOI 10.17487 / RFC4033、2005年3月、<のhttp： //www.rfc-editor.org/info/rfc4033>。"
    },
    {
      "indent": 3,
      "text": "[RFC4034] Arends, R., Austein, R., Larson, M., Massey, D., and S. Rose, \"Resource Records for the DNS Security Extensions\", RFC 4034, DOI 10.17487/RFC4034, March 2005, <http://www.rfc-editor.org/info/rfc4034>.",
      "ja": "[RFC4034]アレンズ、R.、Austeinと、R.、ラーソン、M.、マッシー、D.、およびS.ローズ、 \"DNSセキュリティ拡張機能のためのリソースレコード\"、RFC 4034、DOI 10.17487 / RFC4034、2005年3月、< http://www.rfc-editor.org/info/rfc4034>。"
    },
    {
      "indent": 3,
      "text": "[RFC4035] Arends, R., Austein, R., Larson, M., Massey, D., and S. Rose, \"Protocol Modifications for the DNS Security Extensions\", RFC 4035, DOI 10.17487/RFC4035, March 2005, <http://www.rfc-editor.org/info/rfc4035>.",
      "ja": "[RFC4035]アレンズ、R.、Austeinと、R.、ラーソン、M.、マッシー、D.、およびS.ローズ、 \"DNSセキュリティ拡張のためのプロトコル変更\"、RFC 4035、DOI 10.17487 / RFC4035、2005年3月、< http://www.rfc-editor.org/info/rfc4035>。"
    },
    {
      "indent": 3,
      "text": "[RFC5246] Dierks, T. and E. Rescorla, \"The Transport Layer Security (TLS) Protocol Version 1.2\", RFC 5246, DOI 10.17487/RFC5246, August 2008, <http://www.rfc-editor.org/info/rfc5246>.",
      "ja": "[RFC5246]ダークス、T.およびE.レスコラ、 \"トランスポート層セキュリティ（TLS）プロトコルバージョン1.2\"、RFC 5246、DOI 10.17487 / RFC5246、2008年8月、<http://www.rfc-editor.org/info / RFC5246>。"
    },
    {
      "indent": 3,
      "text": "[RFC5280] Cooper, D., Santesson, S., Farrell, S., Boeyen, S., Housley, R., and W. Polk, \"Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile\", RFC 5280, DOI 10.17487/RFC5280, May 2008, <http://www.rfc-editor.org/info/rfc5280>.",
      "ja": "[RFC5280]クーパー、D.、Santesson、S.、ファレル、S.、Boeyen、S.、Housley氏、R.、およびW.ポーク、「インターネットX.509公開鍵暗号基盤証明書と証明書失効リスト（CRL）のプロフィール」、RFC 5280、DOI 10.17487 / RFC5280、2008年5月、<http://www.rfc-editor.org/info/rfc5280>。"
    },
    {
      "indent": 3,
      "text": "[RFC6066] Eastlake 3rd, D., \"Transport Layer Security (TLS) Extensions: Extension Definitions\", RFC 6066, DOI 10.17487/RFC6066, January 2011, <http://www.rfc-editor.org/info/rfc6066>.",
      "ja": "[RFC6066]イーストレイク3日、D.、 \"トランスポート層セキュリティ（TLS）拡張機能：拡張定義\"、RFC 6066、DOI 10.17487 / RFC6066、2011年1月、<http://www.rfc-editor.org/info/rfc6066> 。"
    },
    {
      "indent": 3,
      "text": "[RFC6125] Saint-Andre, P. and J. Hodges, \"Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)\", RFC 6125, DOI 10.17487/RFC6125, March 2011, <http://www.rfc-editor.org/info/rfc6125>.",
      "ja": "[RFC6125]サンアンドレ、P.およびJ.ホッジス、「表現およびTransport Layer Security（TLS）の文脈でインターネット公開鍵インフラストラクチャの使用X.509内のドメインベースのアプリケーションサービスのアイデンティティの検証（PKIX）証明書」、 RFC 6125、DOI 10.17487 / RFC6125、2011年3月、<http://www.rfc-editor.org/info/rfc6125>。"
    },
    {
      "indent": 3,
      "text": "[RFC6347] Rescorla, E. and N. Modadugu, \"Datagram Transport Layer Security Version 1.2\", RFC 6347, DOI 10.17487/RFC6347, January 2012, <http://www.rfc-editor.org/info/rfc6347>.",
      "ja": "[RFC6347]レスコラ、E.およびN. Modadugu、 \"データグラムトランスポート層セキュリティバージョン1.2\"、RFC 6347、DOI 10.17487 / RFC6347、2012年1月、<http://www.rfc-editor.org/info/rfc6347>。"
    },
    {
      "indent": 3,
      "text": "[RFC6698] Hoffman, P. and J. Schlyter, \"The DNS-Based Authentication of Named Entities (DANE) Transport Layer Security (TLS) Protocol: TLSA\", RFC 6698, DOI 10.17487/RFC6698, August 2012, <http://www.rfc-editor.org/info/rfc6698>.",
      "ja": "[RFC6698]ホフマン、P.およびJ. Schlyter、 \"名前付きエンティティ（DANE）トランスポート層セキュリティ（TLS）プロトコルのDNSベースの認証：TLSA\"、RFC 6698、DOI 10.17487 / RFC6698、2012年8月、<のhttp：/ /www.rfc-editor.org/info/rfc6698>。"
    },
    {
      "indent": 3,
      "text": "[RFC7218] Gudmundsson, O., \"Adding Acronyms to Simplify Conversations about DNS-Based Authentication of Named Entities (DANE)\", RFC 7218, DOI 10.17487/RFC7218, April 2014, <http://www.rfc-editor.org/info/rfc7218>.",
      "ja": "[RFC7218]グドムンソン、O.、RFC 7218 \"略語は、名前付きエンティティ（DANE）のDNSベースの認証についての会話を簡単にするために追加\"、DOI 10.17487 / RFC7218、2014年4月、<http://www.rfc-editor.org /情報/ rfc7218>。"
    },
    {
      "indent": 3,
      "text": "[RFC7250] Wouters, P., Ed., Tschofenig, H., Ed., Gilmore, J., Weiler, S., and T. Kivinen, \"Using Raw Public Keys in Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)\", RFC 7250, DOI 10.17487/RFC7250, June 2014, <http://www.rfc-editor.org/info/rfc7250>.",
      "ja": "[RFC7250] WOUTERS、P.、エド。、Tschofenig、H.、エド。、ギルモア、J.、ワイラー、S.、およびT. Kivinen、「生の公共トランスポート層セキュリティにおけるキー（TLS）を使用し、データグラムトランスポート層セキュリティ（DTLS）」、RFC 7250、DOI 10.17487 / RFC7250、2014年6月、<http://www.rfc-editor.org/info/rfc7250>。"
    },
    {
      "indent": 0,
      "text": "15.2. Informative References",
      "section_title": true,
      "ja": "15.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[RFC1035] Mockapetris, P., \"Domain names - implementation and specification\", STD 13, RFC 1035, DOI 10.17487/RFC1035, November 1987, <http://www.rfc-editor.org/info/rfc1035>.",
      "ja": "[RFC1035] Mockapetris、P.、 \"ドメイン名 - 実装及び仕様\"、STD 13、RFC 1035、DOI 10.17487 / RFC1035、1987年11月、<http://www.rfc-editor.org/info/rfc1035>。"
    },
    {
      "indent": 3,
      "text": "[RFC6781] Kolkman, O., Mekking, W., and R. Gieben, \"DNSSEC Operational Practices, Version 2\", RFC 6781, DOI 10.17487/RFC6781, December 2012, <http://www.rfc-editor.org/info/rfc6781>.",
      "ja": "[RFC6781] Kolkman、O.、Mekking、W.、およびR. Gieben、 \"DNSSEC運用・プラクティス、バージョン2\"、RFC 6781、DOI 10.17487 / RFC6781、2012年12月、<http://www.rfc-editor.org /情報/ rfc6781>。"
    },
    {
      "indent": 3,
      "text": "[RFC6962] Laurie, B., Langley, A., and E. Kasper, \"Certificate Transparency\", RFC 6962, DOI 10.17487/RFC6962, June 2013, <http://www.rfc-editor.org/info/rfc6962>.",
      "ja": "[RFC6962]ローリー、B.、ラングレー、A.、およびE.カスパー、 \"証明書の透明性\"、RFC 6962、DOI 10.17487 / RFC6962、2013年6月、<http://www.rfc-editor.org/info/rfc6962 >。"
    },
    {
      "indent": 3,
      "text": "[RFC7435] Dukhovni, V., \"Opportunistic Security: Some Protection Most of the Time\", RFC 7435, DOI 10.17487/RFC7435, December 2014, <http://www.rfc-editor.org/info/rfc7435>.",
      "ja": "[RFC7435] Dukhovni、V.、 \"日和見セキュリティ：時間のいくつかの保護ほとんど\"、RFC 7435、DOI 10.17487 / RFC7435、2014年12月、<http://www.rfc-editor.org/info/rfc7435>。"
    },
    {
      "indent": 3,
      "text": "[RFC7672] Dukhovni, V. and W. Hardaker, \"SMTP Security via Opportunistic DNS-Based Authentication of Named Entities (DANE) Transport Layer Security (TLS)\", RFC 7672, DOI 10.17487/RFC7672, October 2015, <http://www.rfc-editor.org/info/rfc7672>.",
      "ja": "[RFC7672] Dukhovni、V.とW. Hardaker、 \"SMTPセキュリティ名前付きエンティティの日和見DNSベースの認証（DANE）を介してトランスポート層セキュリティ（TLS）\"、RFC 7672、DOI 10.17487 / RFC7672、2015年10月、<のhttp：/ /www.rfc-editor.org/info/rfc7672>。"
    },
    {
      "indent": 3,
      "text": "[RFC7673] Finch, T., Miller, M., and P. Saint-Andre, \"Using DNS-Based Authentication of Named Entities (DANE) TLSA Records with SRV Records\", RFC 7673, DOI 10.17487/RFC7673, October 2015, <http://www.rfc-editor.org/info/rfc7673>.",
      "ja": "[RFC7673]フィンチ、T.、ミラー、M.、およびP.サンアンドレ、RFC 7673 \"名前付きエンティティSRVレコードを持つ（DANE）TLSAレコードのDNSベースの認証を使用\"、DOI 10.17487 / RFC7673、2015年10月、 <http://www.rfc-editor.org/info/rfc7673>。"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "The authors would like to thank Phil Pennock for his comments and advice on this document.",
      "ja": "作者はこのドキュメントの彼のコメントやアドバイスをフィル・ペノックに感謝したいと思います。"
    },
    {
      "indent": 3,
      "text": "Acknowledgements from Viktor: Thanks to Tony Finch, who finally prodded me into participating in DANE working group discussions. Thanks to Paul Hoffman, who motivated me to produce this document and provided feedback on early draft versions of it. Thanks also to Samuel Dukhovni for editorial assistance.",
      "ja": "おかげでようやくDANEワーキンググループディスカッションに参加するに私を突いたトニー・フィンチ、へ：ヴィクトルから謝辞。この文書を生成するために私を動機とそれの初期の草案にフィードバックを提供するポール・ホフマン、に感謝します。編集支援のためにも、サミュエルDukhovniに感謝します。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Viktor Dukhovni Two Sigma",
      "ja": "ビクタースピリチュアルSVRシグマ"
    },
    {
      "indent": 3,
      "text": "Email: ietf-dane@dukhovni.org",
      "ja": "メール：ietf-dane@dukhovni.org"
    },
    {
      "indent": 3,
      "text": "Wes Hardaker Parsons P.O. Box 382 Davis, CA 95617 United States",
      "ja": "ウェスHardakerパーソンズの私書箱382デイビス、CA 95617人の米国箱"
    },
    {
      "indent": 3,
      "text": "Email: ietf@hardakers.net",
      "ja": "メール：ietf@hardakers.net"
    }
  ]
}