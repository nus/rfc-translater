{
  "title": {
    "text": "RFC 7564 - PRECIS Framework: Preparation, Enforcement, and Comparison of Internationalized Strings in Application Protocols",
    "ja": "RFC 7564 - PRECISフレームワーク：調製、適用、およびアプリケーションプロトコルにおける国際化された文字列の比較"
  },
  "number": 7564,
  "created_at": "2019-10-30 12:28:39.184737+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                    P. Saint-Andre\nRequest for Comments: 7564                                          &yet\nObsoletes: 3454                                              M. Blanchet\nCategory: Standards Track                                       Viagenie\nISSN: 2070-1721                                                 May 2015",
      "raw": true
    },
    {
      "indent": 5,
      "text": "PRECIS Framework: Preparation, Enforcement, and Comparison of\n      Internationalized Strings in Application Protocols",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "Application protocols using Unicode characters in protocol strings need to properly handle such strings in order to enforce internationalization rules for strings placed in various protocol slots (such as addresses and identifiers) and to perform valid comparison operations (e.g., for purposes of authentication or authorization). This document defines a framework enabling application protocols to perform the preparation, enforcement, and comparison of internationalized strings (\"PRECIS\") in a way that depends on the properties of Unicode characters and thus is agile with respect to versions of Unicode. As a result, this framework provides a more sustainable approach to the handling of internationalized strings than the previous framework, known as Stringprep (RFC 3454). This document obsoletes RFC 3454.",
      "ja": "プロトコル文字列にUnicode文字を使用して、アプリケーションプロトコルが適切に（例えばアドレスや識別子などの）様々なプロトコルスロットに配置された文字列のための国際ルールを適用すると（認証または認可の目的のために、例えば）の有効な比較演算を実行するためにそのような文字列を処理する必要があります。この文書は、Unicode文字の特性に依存する方法で、国際化された文字列（「PRECIS」）の調製、実施、および比較を実行するアプリケーションプロトコルを可能にするフレームワークを定義し、したがって、ユニコードのバージョンに対してアジャイルです。結果として、このフレームワークは、のstringprep（RFC 3454）としても知られている以前のフレームワーク、より国際化文字列の取り扱いをより持続可能なアプローチを提供します。この文書はRFC 3454を廃止します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 5741のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc7564.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc7564で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2015 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2015 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................4\n2. Terminology .....................................................7\n3. Preparation, Enforcement, and Comparison ........................7\n4. String Classes ..................................................8\n   4.1. Overview ...................................................8\n   4.2. IdentifierClass ............................................9\n        4.2.1. Valid ...............................................9\n        4.2.2. Contextual Rule Required ...........................10\n        4.2.3. Disallowed .........................................10\n        4.2.4. Unassigned .........................................11\n        4.2.5. Examples ...........................................11\n   4.3. FreeformClass .............................................11\n        4.3.1. Valid ..............................................11\n        4.3.2. Contextual Rule Required ...........................12\n        4.3.3. Disallowed .........................................12\n        4.3.4. Unassigned .........................................12\n        4.3.5. Examples ...........................................12\n5. Profiles .......................................................13\n   5.1. Profiles Must Not Be Multiplied beyond Necessity ..........13\n   5.2. Rules .....................................................14\n        5.2.1. Width Mapping Rule .................................14\n        5.2.2. Additional Mapping Rule ............................14\n        5.2.3. Case Mapping Rule ..................................14\n        5.2.4. Normalization Rule .................................15\n        5.2.5. Directionality Rule ................................15\n   5.3. A Note about Spaces .......................................16\n6. Applications ...................................................17\n   6.1. How to Use PRECIS in Applications .........................17\n   6.2. Further Excluded Characters ...............................18\n   6.3. Building Application-Layer Constructs .....................18\n7. Order of Operations ............................................19",
      "raw": true
    },
    {
      "indent": 3,
      "text": "8. Code Point Properties ..........................................20\n9. Category Definitions Used to Calculate Derived Property ........22\n   9.1. LetterDigits (A) ..........................................23\n   9.2. Unstable (B) ..............................................23\n   9.3. IgnorableProperties (C) ...................................23\n   9.4. IgnorableBlocks (D) .......................................23\n   9.5. LDH (E) ...................................................23\n   9.6. Exceptions (F) ............................................23\n   9.7. BackwardCompatible (G) ....................................23\n   9.8. JoinControl (H) ...........................................24\n   9.9. OldHangulJamo (I) .........................................24\n   9.10. Unassigned (J) ...........................................24\n   9.11. ASCII7 (K) ...............................................24\n   9.12. Controls (L) .............................................24\n   9.13. PrecisIgnorableProperties (M) ............................24\n   9.14. Spaces (N) ...............................................25\n   9.15. Symbols (O) ..............................................25\n   9.16. Punctuation (P) ..........................................25\n   9.17. HasCompat (Q) ............................................25\n   9.18. OtherLetterDigits (R) ....................................25\n10. Guidelines for Designated Experts .............................26\n11. IANA Considerations ...........................................27\n   11.1. PRECIS Derived Property Value Registry ...................27\n   11.2. PRECIS Base Classes Registry .............................27\n   11.3. PRECIS Profiles Registry .................................28\n12. Security Considerations .......................................29\n   12.1. General Issues ...........................................29\n   12.2. Use of the IdentifierClass ...............................30\n   12.3. Use of the FreeformClass .................................30\n   12.4. Local Character Set Issues ...............................31\n   12.5. Visually Similar Characters ..............................31\n   12.6. Security of Passwords ....................................33\n13. Interoperability Considerations ...............................34\n   13.1. Encoding .................................................34\n   13.2. Character Sets ...........................................34\n   13.3. Unicode Versions .........................................34\n   13.4. Potential Changes to Handling of Certain Unicode\n         Code Points ..............................................34\n14. References ....................................................35\n   14.1. Normative References .....................................35\n   14.2. Informative References ...................................36\nAcknowledgements ..................................................40\nAuthors' Addresses ................................................40",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "Application protocols using Unicode characters [Unicode] in protocol strings need to properly handle such strings in order to enforce internationalization rules for strings placed in various protocol slots (such as addresses and identifiers) and to perform valid comparison operations (e.g., for purposes of authentication or authorization). This document defines a framework enabling application protocols to perform the preparation, enforcement, and comparison of internationalized strings (\"PRECIS\") in a way that depends on the properties of Unicode characters and thus is agile with respect to versions of Unicode.",
      "ja": "プロトコル文字列にUnicode文字[UNICODE]を使用してアプリケーションプロトコルを適切に（例えばアドレスや識別子などの）様々なプロトコルスロットに配置された文字列のための国際規則を適用すると、認証の目的のための有効な比較演算（例えば、実行するためにそのような文字列を処理する必要がありますまたは許可）。この文書は、Unicode文字の特性に依存する方法で、国際化された文字列（「PRECIS」）の調製、実施、および比較を実行するアプリケーションプロトコルを可能にするフレームワークを定義し、したがって、ユニコードのバージョンに対してアジャイルです。"
    },
    {
      "indent": 3,
      "text": "As described in the PRECIS problem statement [RFC6885], many IETF protocols have used the Stringprep framework [RFC3454] as the basis for preparing, enforcing, and comparing protocol strings that contain Unicode characters, especially characters outside the ASCII range [RFC20]. The Stringprep framework was developed during work on the original technology for internationalized domain names (IDNs), here called \"IDNA2003\" [RFC3490], and Nameprep [RFC3491] was the Stringprep profile for IDNs. At the time, Stringprep was designed as a general framework so that other application protocols could define their own Stringprep profiles. Indeed, a number of application protocols defined such profiles.",
      "ja": "PRECIS問題文[RFC6885]に記載されているように、多くのIETFプロトコルは、ASCII範囲外特に文字は[RFC20]、調製実施、およびUnicode文字を含むプロトコル文字列を比較するための基礎としてのstringprepフレームワーク[RFC3454]を使用しています。文字列準備フレームワークは国際化ドメイン名（IDN）のための独自技術での作業中に開発された、ここでは「IDNA2003」[RFC3490]と呼ばれ、NAMEPREP [RFC3491]はIDNのためのstringprepプロファイルでした。当時、文字列準備は、他のアプリケーションプロトコルは、独自のstringprepプロファイルを定義することができるように、一般的なフレームワークとして設計されました。確かに、アプリケーションプロトコルの数は、このようなプロファイルを定義しました。"
    },
    {
      "indent": 3,
      "text": "After the publication of [RFC3454] in 2002, several significant issues arose with the use of Stringprep in the IDN case, as documented in the IAB's recommendations regarding IDNs [RFC4690] (most significantly, Stringprep was tied to Unicode version 3.2). Therefore, the newer IDNA specifications, here called \"IDNA2008\" ([RFC5890], [RFC5891], [RFC5892], [RFC5893], [RFC5894]), no longer use Stringprep and Nameprep. This migration away from Stringprep for IDNs prompted other \"customers\" of Stringprep to consider new approaches to the preparation, enforcement, and comparison of internationalized strings, as described in [RFC6885].",
      "ja": "IDNの[RFC4690]に関するIABの勧告に記載されているように、2002年に[RFC3454]の公表後、いくつかの重要な問題は、（最も重要なのは、文字列準備がUnicodeバージョン3.2に縛られた）、IDNのケースでのstringprepを利用して生じました。そのため、新しいIDNA仕様は、ここ（[RFC5893]、[RFC5894]、[RFC5890]、[RFC5891]、[RFC5892]） \"IDNA2008\" と呼ばれ、もはや文字列準備やNAMEPREPを使用していません。 IDNのための離れのstringprepからのこの移行は、[RFC6885]で説明したように、国際化された文字列の準備、実施、および比較への新しいアプローチを検討するためのstringprepの他の「顧客」を促しました。"
    },
    {
      "indent": 3,
      "text": "This document defines a framework for a post-Stringprep approach to the preparation, enforcement, and comparison of internationalized strings in application protocols, based on several principles:",
      "ja": "この文書では、準備、実施、およびいくつかの原則に基づいて、アプリケーションプロトコル、中に国際化された文字列の比較にポストのstringprepアプローチのためのフレームワークを定義します。"
    },
    {
      "indent": 3,
      "text": "1. Define a small set of string classes that specify the Unicode characters (i.e., specific \"code points\") appropriate for common application protocol constructs.",
      "ja": "1.一般的なアプリケーションプロトコル構築物のための適切なUnicode文字（すなわち、特定の「コードポイント」）を指定する文字列クラスの小さなセットを定義します。"
    },
    {
      "indent": 3,
      "text": "2. Define each PRECIS string class in terms of Unicode code points and their properties so that an algorithm can be used to determine whether each code point or character category is (a) valid, (b) allowed in certain contexts, (c) disallowed, or (d) unassigned.",
      "ja": "アルゴリズムは、各コードポイントまたは文字カテゴリ（a）は有効、（B）特定のコンテキストで許可、（c）は許可されていないかどうかを決定するために使用することができるように2 Unicodeコードポイントとそれらの特性の点で各PRECISストリングクラスを定義、または（d）に割り当てられていません。"
    },
    {
      "indent": 3,
      "text": "3. Use an \"inclusion model\" such that a string class consists only of code points that are explicitly allowed, with the result that any code point not explicitly allowed is forbidden.",
      "ja": "3.文字列クラスのみ明示的に明示的に許可されていない任意のコードポイントが禁止され、その結果、許可されているコードポイントから成るように、「封入モデル」を使用。"
    },
    {
      "indent": 3,
      "text": "4. Enable application protocols to define profiles of the PRECIS string classes if necessary (addressing matters such as width mapping, case mapping, Unicode normalization, and directionality) but strongly discourage the multiplication of profiles beyond necessity in order to avoid violations of the \"Principle of Least Astonishment\".",
      "ja": "4. PRECIS文字列クラスのプロファイルを定義するアプリケーションプロトコルを有効にした場合が、強く「原則の違反を避けるために、必要以上のプロファイルの乗算を阻止する必要が（例えば幅マッピング、ケースマッピング、Unicode正規化、および方向性として取り組む事項） 「最小驚きの。"
    },
    {
      "indent": 3,
      "text": "It is expected that this framework will yield the following benefits:",
      "ja": "このフレームワークは、次のような利点が得られることが期待されます。"
    },
    {
      "indent": 3,
      "text": "o Application protocols will be agile with regard to Unicode versions.",
      "ja": "Oアプリケーション・プロトコルは、Unicodeのバージョンに関しては機敏になります。"
    },
    {
      "indent": 3,
      "text": "o Implementers will be able to share code point tables and software code across application protocols, most likely by means of software libraries.",
      "ja": "Oの実装者は、ソフトウェアライブラリの手段である可能性が最も高く、アプリケーションプロトコル間でコード・ポイント・テーブルやソフトウェアコードを共有することができるようになります。"
    },
    {
      "indent": 3,
      "text": "o End users will be able to acquire more accurate expectations about the characters that are acceptable in various contexts. Given this more uniform set of string classes, it is also expected that copy/paste operations between software implementing different application protocols will be more predictable and coherent.",
      "ja": "Oエンドユーザーは、さまざまなコンテキストで許容される文字について、より正確な期待を取得することができるようになります。文字列クラスのこのより均一なセットを考えると、また別のアプリケーションプロトコルを実装するソフトウェア間のコピー/ペースト操作がより予測可能かつ一貫性であることが期待されます。"
    },
    {
      "indent": 3,
      "text": "Whereas the string classes define the \"baseline\" code points for a range of applications, profiling enables application protocols to apply the string classes in ways that are appropriate for common constructs such as usernames [PRECIS-Users-Pwds], opaque strings such as passwords [PRECIS-Users-Pwds], and nicknames [PRECIS-Nickname]. Profiles are responsible for defining the handling of right-to-left characters as well as various mapping operations of the kind also discussed for IDNs in [RFC5895], such as case preservation or",
      "ja": "文字列クラスは、アプリケーションの範囲のための「ベースライン」のコードポイントを定義するのに対し、プロファイルは、ユーザ名[PRECIS-ユーザー-障害者]、パスワードなどの不透明な文字列などの一般的な構築物のために適切な方法で文字列クラスを適用するアプリケーションプロトコルを可能にします[PRECIS-ユーザー-障害者]、およびニックネーム[PRECIS-ニックネーム]。プロファイルは、このような場合の保存として、また、[RFC5895]でのIDNについて述べた種類の右から左への文字の取り扱いならびに様々なマッピング操作を定義する責任があるか、または"
    },
    {
      "indent": 3,
      "text": "lowercasing, Unicode normalization, mapping of certain characters to other characters or to nothing, and mapping of fullwidth and halfwidth characters.",
      "ja": "小文字、Unicode正規化、他の文字または何も特定の文字のマッピング、および全角と半角文字のマッピング。"
    },
    {
      "indent": 3,
      "text": "When an application applies a profile of a PRECIS string class, it transforms an input string (which might or might not be conforming) into an output string that definitively conforms to the profile. In particular, this document focuses on the resulting ability to achieve the following objectives:",
      "ja": "アプリケーションがPRECISストリングクラスのプロファイルを適用するとき、それは決定的プロファイルに準拠した出力文字列に（または適合されないことがあります可能性がある）入力文字列を変換します。特に、この文書は、以下の目的を達成するために、結果としての能力に焦点を当てています。"
    },
    {
      "indent": 3,
      "text": "a. Enforcing all the rules of a profile for a single output string (e.g., to determine if a string can be included in a protocol slot, communicated to another entity within a protocol, stored in a retrieval system, etc.).",
      "ja": "A。単一の出力文字列（例えば、文字列等、プロトコルスロットに含まれるプロトコル内の別のエンティティに伝え、検索システムに格納することができるかどうかを決定するために）のプロファイルのすべてのルールを施行。"
    },
    {
      "indent": 3,
      "text": "b. Comparing two output strings to determine if they are equivalent, typically through octet-for-octet matching to test for \"bit-string identity\" (e.g., to make an access decision for purposes of authentication or authorization as further described in [RFC6943]).",
      "ja": "B。それらは典型的にはオクテットのためのオクテット「ビットストリング同一性」をテストするためにマッチングにより、等価であるかどうかを決定するために2つの出力文字列を比較する（例えば、としてさらに記載認証または許可の目的のためにアクセス決定を行うために[RFC6943]） 。"
    },
    {
      "indent": 3,
      "text": "The opportunity to define profiles naturally introduces the possibility of a proliferation of profiles, thus potentially mitigating the benefits of common code and violating user expectations. See Section 5 for a discussion of this important topic.",
      "ja": "自然にプロファイルを定義する機会は、このように潜在的に共通のコードの利点を軽減し、ユーザーの期待に違反し、プロファイルの増殖の可能性を紹介します。この重要なトピックの議論については、セクション5を参照してください。"
    },
    {
      "indent": 3,
      "text": "In addition, it is extremely important for protocol designers and application developers to understand that the transformation of an input string to an output string is rarely reversible. As one relatively simple example, case mapping would transform an input string of \"StPeter\" to \"stpeter\", and information about the capitalization of the first and third characters would be lost. Similar considerations apply to other forms of mapping and normalization.",
      "ja": "また、出力文字列への入力文字列の変換はまれ可逆的であることを理解することは、プロトコルの設計者やアプリケーション開発者にとって非常に重要です。つの比較的単純な例として、ケースマッピングは、「stpeter」から「StPeter」の入力文字列を変換することになる、第1及び第3文字の大文字の情報が失われることになります。同様の考察は、マッピングおよび正規化の他の形態に適用されます。"
    },
    {
      "indent": 3,
      "text": "Although this framework is similar to IDNA2008 and includes by reference some of the character categories defined in [RFC5892], it defines additional character categories to meet the needs of common application protocols other than DNS.",
      "ja": "このフレームワークはIDNA2008と同様であり、参照することにより、[RFC5892]で定義された文字カテゴリの一部を含むが、それはDNS以外の一般的なアプリケーションプロトコルのニーズを満たすために、追加の文字カテゴリを定義します。"
    },
    {
      "indent": 3,
      "text": "The character categories and calculation rules defined under Sections 8 and 9 are normative and apply to all Unicode code points. The code point table that results from applying the character categories and calculation rules to the latest version of Unicode can be found in an IANA registry.",
      "ja": "部8,9の下に定義された文字カテゴリと計算規則は、規範的であり、すべてのUnicodeコードポイントに適用されます。ユニコードの最新バージョンに文字カテゴリと計算規則を適用した結果のコード・ポイント表は、IANAレジストリに記載されています。"
    },
    {
      "indent": 0,
      "text": "2. Terminology",
      "section_title": true,
      "ja": "2.用語"
    },
    {
      "indent": 3,
      "text": "Many important terms used in this document are defined in [RFC5890], [RFC6365], [RFC6885], and [Unicode]. The terms \"left-to-right\" (LTR) and \"right-to-left\" (RTL) are defined in Unicode Standard Annex #9 [UAX9].",
      "ja": "このドキュメントで使用される多くの重要な用語は、[RFC5890]で定義されている、[RFC6365]、[RFC6885]、および[ユニコード]。用語「右から左へ」「左から右」（LTR）及び（RTL）は、Unicode規格附属書＃9 [UAX9]で定義されています。"
    },
    {
      "indent": 3,
      "text": "As of the date of writing, the version of Unicode published by the Unicode Consortium is 7.0 [Unicode7.0]; however, PRECIS is not tied to a specific version of Unicode. The latest version of Unicode is always available [Unicode].",
      "ja": "執筆日現在、ユニコードコンソーシアムによって公開されたUnicodeのバージョンは7.0 [Unicode7.0]です。しかし、PRECISは、Unicodeの特定のバージョンに関連付けられていません。ユニコードの最新バージョンは、常に利用可能[ユニコード]です。"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "キーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、 \"SHALL\"、 \"SHOULD\"、 \"ないもの\"、 \"推奨\" \"ない（SHOULD NOT）\"、 \"MAY\"、 \"推奨NOT\"、および「OPTIONAL 「本書では[RFC2119]で説明されるように解釈されるべきです。"
    },
    {
      "indent": 0,
      "text": "3. Preparation, Enforcement, and Comparison",
      "section_title": true,
      "ja": "3.準備、施行、および比較"
    },
    {
      "indent": 3,
      "text": "This document distinguishes between three different actions that an entity can take with regard to a string:",
      "ja": "この文書では、企業は、文字列に関連して取ることができる3つの異なるアクションを区別します："
    },
    {
      "indent": 3,
      "text": "o Enforcement entails applying all of the rules specified for a particular string class or profile thereof to an individual string, for the purpose of determining if the string can be used in a given protocol slot.",
      "ja": "O強制文字列が与えられたプロトコルスロットで使用することができるかどうかを決定するために、個々の文字列に特定文字列クラスまたはそのプロファイルに指定されたルールのすべてを適用することを伴います。"
    },
    {
      "indent": 3,
      "text": "o Comparison entails applying all of the rules specified for a particular string class or profile thereof to two separate strings, for the purpose of determining if the two strings are equivalent.",
      "ja": "Oの比較は、2つの文字列が等価であるかどうかを決定するために、二つの別々の文字列に特定文字列クラスまたはそのプロファイルに指定されたルールのすべてを適用することを伴います。"
    },
    {
      "indent": 3,
      "text": "o Preparation entails only ensuring that the characters in an individual string are allowed by the underlying PRECIS string class.",
      "ja": "O調製のみ個々文字列内の文字は、基礎となるPRECISストリングクラスで許可されていることを保証することを伴います。"
    },
    {
      "indent": 3,
      "text": "In most cases, authoritative entities such as servers are responsible for enforcement, whereas subsidiary entities such as clients are responsible only for preparation. The rationale for this distinction is that clients might not have the facilities (in terms of device memory and processing power) to enforce all the rules regarding internationalized strings (such as width mapping and Unicode normalization), although they can more easily limit the repertoire of characters they offer to an end user. By contrast, it is assumed that a server would have more capacity to enforce the rules, and in any case acts as an authority regarding allowable strings in protocol slots such as addresses and endpoint identifiers. In addition, a client cannot necessarily be trusted to properly generate such strings, especially for security-sensitive contexts such as authentication and authorization.",
      "ja": "このようなクライアントとして子会社のエンティティだけの準備を担当しているのに対し、ほとんどのケースでは、サーバなどの権威あるエンティティは、執行を担当しています。この区別のための理論的根拠は、それらがより簡単のレパートリーを制限することができるが、クライアントが、（例えば幅マッピングおよびUnicode正規化など）国際文字列に関するすべてのルールを適用する（デバイスメモリおよび処理能力の点で）機能を持っていないかもしれないということです文字彼らは、エンドユーザーに提供します。対照的に、サーバがルールを適用するためのより多くの容量を有することが想定され、そしていずれの場合にも、そのようなアドレスとエンドポイント識別子のようなプロトコル・スロットに許容ストリングに関する権威として作用します。また、クライアントは必ずしも、特に、このような認証および承認などのセキュリティに敏感なコンテキストのために、適切な文字列を生成するために信頼することはできません。"
    },
    {
      "indent": 0,
      "text": "4. String Classes",
      "section_title": true,
      "ja": "4.文字列クラス"
    },
    {
      "indent": 0,
      "text": "4.1. Overview",
      "section_title": true,
      "ja": "4.1。概要"
    },
    {
      "indent": 3,
      "text": "Starting in 2010, various \"customers\" of Stringprep began to discuss the need to define a post-Stringprep approach to the preparation and comparison of internationalized strings other than IDNs. This community analyzed the existing Stringprep profiles and also weighed the costs and benefits of defining a relatively small set of Unicode characters that would minimize the potential for user confusion caused by visually similar characters (and thus be relatively \"safe\") vs. defining a much larger set of Unicode characters that would maximize the potential for user creativity (and thus be relatively \"expressive\"). As a result, the community concluded that most existing uses could be addressed by two string classes:",
      "ja": "2010年に開始し、文字列準備の様々な「顧客は」準備とのIDN以外の国際化された文字列の比較にポストのstringprepアプローチを定義する必要性を議論し始めました。このコミュニティは多くを定義する対既存のstringprepプロファイルを分析し、視覚的にも類似した文字によって引き起こされたユーザの混乱の可能性を最小（したがって、比較的「安全」であること）なり、Unicode文字の比較的小さなセットを定義するのコストと利益を秤量しましたユーザーの創造性の可能性を最大限に（したがって、比較的「表現力」こと）なり、Unicode文字の大きなセット。その結果、コミュニティは既存のほとんどの用途は、2つの文字列クラスによって対処することができることを結論付けました。"
    },
    {
      "indent": 3,
      "text": "IdentifierClass: a sequence of letters, numbers, and some symbols that is used to identify or address a network entity such as a user account, a venue (e.g., a chatroom), an information source (e.g., a data feed), or a collection of data (e.g., a file); the intent is that this class will minimize user confusion in a wide variety of application protocols, with the result that safety has been prioritized over expressiveness for this class.",
      "ja": "IdentifierClass：文字、数字のシーケンス、及びそのようなユーザアカウントとして識別またはネットワークエンティティをアドレス指定するために使用されるいくつかの記号、会場（例えば、チャットルーム）、情報源（例えば、データフィード）、又はデータの収集（例えば、ファイル）;その意図は、このクラスは、安全性はこのクラスの表現よりも優先されてきた、その結果、アプリケーションプロトコルの多種多様なユーザーの混乱を最小限に抑えるということです。"
    },
    {
      "indent": 3,
      "text": "FreeformClass: a sequence of letters, numbers, symbols, spaces, and other characters that is used for free-form strings, including passwords as well as display elements such as human-friendly nicknames for devices or for participants in a chatroom; the intent is that this class will allow nearly any Unicode character, with the result that expressiveness has been prioritized over safety for this class. Note well that protocol designers, application developers, service providers, and end users might not understand or be able to enter all of the characters that can be included in the FreeformClass -- see Section 12.3 for details.",
      "ja": "FreeformClass：パスワードだけでなく、このようなデバイスのためか、チャットルームの参加者のために人に優しいニックネームなどの表示素子を含む、自由形式の文字列に使用される文字、数字、記号、スペース、およびその他の文字の配列;その意図は、このクラスは表現がこのクラスの安全性よりも優先されてきた、その結果、ほぼすべてのUnicode文字を許可するということです。ほかのプロトコルの設計者、アプリケーション開発者、サービスプロバイダーなお、エンドユーザーが理解したりFreeformClassに含めることができる文字のすべてを入力することができない可能性があります - 詳細については、12.3項を参照してください。"
    },
    {
      "indent": 3,
      "text": "Future specifications might define additional PRECIS string classes, such as a class that falls somewhere between the IdentifierClass and the FreeformClass. At this time, it is not clear how useful such a class would be. In any case, because application developers are able to define profiles of PRECIS string classes, a protocol needing a construct between the IdentifierClass and the FreeformClass could define a restricted profile of the FreeformClass if needed.",
      "ja": "将来の仕様は、このようなIdentifierClassとFreeformClassの間のどこかに落ちクラスなどの追加PRECISの文字列クラスを定義することがあります。この時点では、そのようなクラスがあることだろうか便利明確ではありません。アプリケーション開発者はPRECIS文字列クラスのプロファイルを定義することができますので、必要に応じて、いずれの場合も、IdentifierClassとFreeformClass間の構造を必要とするプロトコルはFreeformClassの制限されたプロファイルを定義することができます。"
    },
    {
      "indent": 3,
      "text": "The following subsections discuss the IdentifierClass and FreeformClass in more detail, with reference to the dimensions described in Section 5 of [RFC6885]. Each string class is defined by the following behavioral rules:",
      "ja": "以下のサブセクションでは、[RFC6885]のセクション5に記載の寸法を参照して、より詳細にIdentifierClassとFreeformClassを議論します。各文字列クラスは、次の行動のルールによって定義されます。"
    },
    {
      "indent": 3,
      "text": "Valid: Defines which code points are treated as valid for the string.",
      "ja": "有効：コードポイントが文字列に対して有効として扱われる定義。"
    },
    {
      "indent": 3,
      "text": "Contextual Rule Required: Defines which code points are treated as allowed only if the requirements of a contextual rule are met (i.e., either CONTEXTJ or CONTEXTO).",
      "ja": "コンテキストルール必須：（即ち、CONTEXTJ又はCONTEXTOいずれか）コンテキストルールの要件が満たされている場合にのみ許可されるように、コードポイントが処理される定義。"
    },
    {
      "indent": 3,
      "text": "Disallowed: Defines which code points need to be excluded from the string.",
      "ja": "許可されていない：ポイントは、文字列から除外される必要があるコードを定義します。"
    },
    {
      "indent": 3,
      "text": "Unassigned: Defines application behavior in the presence of code points that are unknown (i.e., not yet designated) for the version of Unicode used by the application.",
      "ja": "未割り当て：アプリケーションによって使用されるユニコードのバージョンに（すなわち、まだ指定されていない）知られていないコードポイントの存在下でのアプリケーションの動作を定義します。"
    },
    {
      "indent": 3,
      "text": "This document defines the valid, contextual rule required, disallowed, and unassigned rules for the IdentifierClass and FreeformClass. As described under Section 5, profiles of these string classes are responsible for defining the width mapping, additional mappings, case mapping, normalization, and directionality rules.",
      "ja": "この文書は、許可されていない、必要な有効な、文脈ルール、およびIdentifierClassとFreeformClassのための未割り当てのルールを定義します。第5節で述べたように、これらの文字列クラスのプロファイルは、幅マッピング、追加のマッピング、ケースマッピング、正規化、および方向性ルールを定義する責任があります。"
    },
    {
      "indent": 0,
      "text": "4.2. IdentifierClass",
      "section_title": true,
      "ja": "4.2。 IdentifierClass"
    },
    {
      "indent": 3,
      "text": "Most application technologies need strings that can be used to refer to, include, or communicate protocol strings like usernames, filenames, data feed identifiers, and chatroom names. We group such strings into a class called \"IdentifierClass\" having the following features.",
      "ja": "ほとんどのアプリケーション技術は、ユーザ名、ファイル名、データフィード識別子、およびチャットルーム名などのプロトコル文字列を、参照含め、または通信に使用できる文字列を必要としています。以下のような特徴を有する「IdentifierClass」と呼ばれるクラスに当社グループのような文字列。"
    },
    {
      "indent": 0,
      "text": "4.2.1. Valid",
      "section_title": true,
      "ja": "4.2.1。妥当"
    },
    {
      "indent": 3,
      "text": "o Code points traditionally used as letters and numbers in writing systems, i.e., the LetterDigits (\"A\") category first defined in [RFC5892] and listed here under Section 9.1.",
      "ja": "伝統的に書き込みシステムにおける文字や数字として用いOコードポイント、すなわち、LetterDigits（「A」）カテゴリ最初の[RFC5892]で定義されており、セクション9.1の下にここに記載されています。"
    },
    {
      "indent": 3,
      "text": "o Code points in the range U+0021 through U+007E, i.e., the (printable) ASCII7 (\"K\") category defined under Section 9.11. These code points are \"grandfathered\" into PRECIS and thus are valid even if they would otherwise be disallowed according to the property-based rules specified in the next section.",
      "ja": "セクション9.11の下で定義され、すなわち（印刷可能）ASCII7（ \"K\"）カテゴリU + 007E、スルー範囲のOコードポイントU + 0021。これらのコードポイントはPRECISに「適用除外」、したがって、彼らはそうでなければ次のセクションで指定されたプロパティベースの規則に従って許可される場合にも有効です。"
    },
    {
      "indent": 6,
      "text": "Note: Although the PRECIS IdentifierClass reuses the LetterDigits category from IDNA2008, the range of characters allowed in the IdentifierClass is wider than the range of characters allowed in IDNA2008. The main reason is that IDNA2008 applies the Unstable category before the LetterDigits category, thus disallowing uppercase characters, whereas the IdentifierClass does not apply the Unstable category.",
      "ja": "注：PRECIS IdentifierClassはIDNA2008からLetterDigitsカテゴリを再利用しますが、IdentifierClassに使用できる文字の範囲は、IDNA2008に使用できる文字の範囲よりも広くなっています。主な理由は、IDNA2008はIdentifierClassが不安定なカテゴリが適用されないのに対し、このように、大文字を許可しない、LetterDigitsカテゴリの前に不安定なカテゴリが適用されることです。"
    },
    {
      "indent": 0,
      "text": "4.2.2. Contextual Rule Required",
      "section_title": true,
      "ja": "4.2.2。文脈ルール必須"
    },
    {
      "indent": 3,
      "text": "o A number of characters from the Exceptions (\"F\") category defined under Section 9.6 (see Section 9.6 for a full list).",
      "ja": "セクション9.6の下に定義された例外（「F」）カテゴリから文字の数O（完全なリストについては、セクション9.6を参照してください）。"
    },
    {
      "indent": 3,
      "text": "o Joining characters, i.e., the JoinControl (\"H\") category defined under Section 9.8.",
      "ja": "セクション9.8の下に定義された文字を結合、O、即ち、JoinControl（ \"H\"）のカテゴリ。"
    },
    {
      "indent": 0,
      "text": "4.2.3. Disallowed",
      "section_title": true,
      "ja": "4.2.3。許可されていません"
    },
    {
      "indent": 3,
      "text": "o Old Hangul Jamo characters, i.e., the OldHangulJamo (\"I\") category defined under Section 9.9.",
      "ja": "O旧ハングルの字母の文字、すなわち、セクション9.9の下で定義されたOldHangulJamo（「I」）のカテゴリ。"
    },
    {
      "indent": 3,
      "text": "o Control characters, i.e., the Controls (\"L\") category defined under Section 9.12.",
      "ja": "セクション9.12の下で定義されたOコントロール文字、すなわち、コントロール（「L」）のカテゴリ。"
    },
    {
      "indent": 3,
      "text": "o Ignorable characters, i.e., the PrecisIgnorableProperties (\"M\") category defined under Section 9.13.",
      "ja": "セクション9.13の下で定義されたO無視可能な文字、すなわち、PrecisIgnorableProperties（ \"M\"）カテゴリ。"
    },
    {
      "indent": 3,
      "text": "o Space characters, i.e., the Spaces (\"N\") category defined under Section 9.14.",
      "ja": "Oスペース文字、セクション9.14の下で定義され、すなわち、スペース（「N」）カテゴリ。"
    },
    {
      "indent": 3,
      "text": "o Symbol characters, i.e., the Symbols (\"O\") category defined under Section 9.15.",
      "ja": "O記号文字、すなわち、セクション9.15の下で定義されたシンボル（「O」）カテゴリ。"
    },
    {
      "indent": 3,
      "text": "o Punctuation characters, i.e., the Punctuation (\"P\") category defined under Section 9.16.",
      "ja": "O句読点文字、すなわち、セクション9.16の下で定義された句読点（「P」）カテゴリ。"
    },
    {
      "indent": 3,
      "text": "o Any character that has a compatibility equivalent, i.e., the HasCompat (\"Q\") category defined under Section 9.17. These code points are disallowed even if they would otherwise be valid according to the property-based rules specified in the previous section.",
      "ja": "互換性と同等の、セクション9.17の下で定義された、すなわち、HasCompat（「Q」）のカテゴリを持っている任意の文字O。彼らはそれ以外の場合は、前のセクションで指定されたプロパティベースのルールに従って有効になります場合でも、これらのコード・ポイントが禁止されています。"
    },
    {
      "indent": 3,
      "text": "o Letters and digits other than the \"traditional\" letters and digits allowed in IDNs, i.e., the OtherLetterDigits (\"R\") category defined under Section 9.18.",
      "ja": "O文字とのIDNで許可「伝統的な」文字と数字以外の数字、セクション9.18の下で定義され、すなわち、OtherLetterDigits（「R」）のカテゴリ。"
    },
    {
      "indent": 0,
      "text": "4.2.4. Unassigned",
      "section_title": true,
      "ja": "4.2.4。未割り当て"
    },
    {
      "indent": 3,
      "text": "Any code points that are not yet designated in the Unicode character set are considered unassigned for purposes of the IdentifierClass, and such code points are to be treated as disallowed. See Section 9.10.",
      "ja": "まだUnicode文字セットで指定されていないコードポイントはIdentifierClassの目的のために割り当てられていないと考えられ、そのようなコードポイントが禁止として扱われるべきです。セクション9.10を参照してください。"
    },
    {
      "indent": 0,
      "text": "4.2.5. Examples",
      "section_title": true,
      "ja": "4.2.5。例"
    },
    {
      "indent": 3,
      "text": "As described in the Introduction to this document, the string classes do not handle all issues related to string preparation and comparison (such as case mapping); instead, such issues are handled at the level of profiles. Examples for profiles of the IdentifierClass can be found in [PRECIS-Users-Pwds] (the UsernameCaseMapped and UsernameCasePreserved profiles).",
      "ja": "本書の概要で説明したように、文字列クラスは、文字列の準備と（そのような場合のマッピングなど）の比較に関連するすべての問題を処理しません。代わりに、そのような問題は、プロファイルのレベルで処理されています。 IdentifierClassのプロファイルの例は、[PRECIS-ユーザー-障害者（UsernameCaseMappedとUsernameCasePreservedプロファイル）に見出すことができます。"
    },
    {
      "indent": 0,
      "text": "4.3. FreeformClass",
      "section_title": true,
      "ja": "4.3。 FreeformClass"
    },
    {
      "indent": 3,
      "text": "Some application technologies need strings that can be used in a free-form way, e.g., as a password in an authentication exchange (see [PRECIS-Users-Pwds]) or a nickname in a chatroom (see [PRECIS-Nickname]). We group such things into a class called \"FreeformClass\" having the following features.",
      "ja": "いくつかのアプリケーション技術は、認証交換（[PRECIS-ユーザー-障害者]参照）やチャットルームでのニックネーム（[PRECIS-ニックネーム]を参照）でパスワードとして、例えば、自由形式の方法で使用することができます文字列が必要です。私たちは以下のような特徴を有する「FreeformClass」と呼ばれるクラスにグループのようなもの。"
    },
    {
      "indent": 6,
      "text": "Security Warning: As mentioned, the FreeformClass prioritizes expressiveness over safety; Section 12.3 describes some of the security hazards involved with using or profiling the FreeformClass.",
      "ja": "セキュリティ警告：前述のように、FreeformClassは、安全上の表現を優先し、 12.3節はFreeformClassを使用するか、プロファイリングに関与したセキュリティ上の危険のいくつかを説明します。"
    },
    {
      "indent": 6,
      "text": "Security Warning: Consult Section 12.6 for relevant security considerations when strings conforming to the FreeformClass, or a profile thereof, are used as passwords.",
      "ja": "セキュリティ警告：FreeformClassに準拠した文字列、またはこれらのプロファイルは、パスワードとして使用されている場合、関連するセキュリティ上の考慮事項については、セクション12.6を参照してください。"
    },
    {
      "indent": 0,
      "text": "4.3.1. Valid",
      "section_title": true,
      "ja": "4.3.1。妥当"
    },
    {
      "indent": 3,
      "text": "o Traditional letters and numbers, i.e., the LetterDigits (\"A\") category first defined in [RFC5892] and listed here under Section 9.1.",
      "ja": "伝統的な文字と数字O、即ち、LetterDigits（「A」）カテゴリ最初の[RFC5892]で定義されており、セクション9.1の下にここに記載されています。"
    },
    {
      "indent": 3,
      "text": "o Letters and digits other than the \"traditional\" letters and digits allowed in IDNs, i.e., the OtherLetterDigits (\"R\") category defined under Section 9.18.",
      "ja": "O文字とのIDNで許可「伝統的な」文字と数字以外の数字、セクション9.18の下で定義され、すなわち、OtherLetterDigits（「R」）のカテゴリ。"
    },
    {
      "indent": 3,
      "text": "o Code points in the range U+0021 through U+007E, i.e., the (printable) ASCII7 (\"K\") category defined under Section 9.11.",
      "ja": "セクション9.11の下で定義され、すなわち（印刷可能）ASCII7（ \"K\"）カテゴリU + 007E、スルー範囲のOコードポイントU + 0021。"
    },
    {
      "indent": 3,
      "text": "o Any character that has a compatibility equivalent, i.e., the HasCompat (\"Q\") category defined under Section 9.17.",
      "ja": "互換性と同等の、セクション9.17の下で定義された、すなわち、HasCompat（「Q」）のカテゴリを持っている任意の文字O。"
    },
    {
      "indent": 3,
      "text": "o Space characters, i.e., the Spaces (\"N\") category defined under Section 9.14.",
      "ja": "Oスペース文字、セクション9.14の下で定義され、すなわち、スペース（「N」）カテゴリ。"
    },
    {
      "indent": 3,
      "text": "o Symbol characters, i.e., the Symbols (\"O\") category defined under Section 9.15.",
      "ja": "O記号文字、すなわち、セクション9.15の下で定義されたシンボル（「O」）カテゴリ。"
    },
    {
      "indent": 3,
      "text": "o Punctuation characters, i.e., the Punctuation (\"P\") category defined under Section 9.16.",
      "ja": "O句読点文字、すなわち、セクション9.16の下で定義された句読点（「P」）カテゴリ。"
    },
    {
      "indent": 0,
      "text": "4.3.2. Contextual Rule Required",
      "section_title": true,
      "ja": "4.3.2。文脈ルール必須"
    },
    {
      "indent": 3,
      "text": "o A number of characters from the Exceptions (\"F\") category defined under Section 9.6 (see Section 9.6 for a full list).",
      "ja": "セクション9.6の下に定義された例外（「F」）カテゴリから文字の数O（完全なリストについては、セクション9.6を参照してください）。"
    },
    {
      "indent": 3,
      "text": "o Joining characters, i.e., the JoinControl (\"H\") category defined under Section 9.8.",
      "ja": "セクション9.8の下に定義された文字を結合、O、即ち、JoinControl（ \"H\"）のカテゴリ。"
    },
    {
      "indent": 0,
      "text": "4.3.3. Disallowed",
      "section_title": true,
      "ja": "4.3.3。許可されていません"
    },
    {
      "indent": 3,
      "text": "o Old Hangul Jamo characters, i.e., the OldHangulJamo (\"I\") category defined under Section 9.9.",
      "ja": "O旧ハングルの字母の文字、すなわち、セクション9.9の下で定義されたOldHangulJamo（「I」）のカテゴリ。"
    },
    {
      "indent": 3,
      "text": "o Control characters, i.e., the Controls (\"L\") category defined under Section 9.12.",
      "ja": "セクション9.12の下で定義されたOコントロール文字、すなわち、コントロール（「L」）のカテゴリ。"
    },
    {
      "indent": 3,
      "text": "o Ignorable characters, i.e., the PrecisIgnorableProperties (\"M\") category defined under Section 9.13.",
      "ja": "セクション9.13の下で定義されたO無視可能な文字、すなわち、PrecisIgnorableProperties（ \"M\"）カテゴリ。"
    },
    {
      "indent": 0,
      "text": "4.3.4. Unassigned",
      "section_title": true,
      "ja": "4.3.4。未割り当て"
    },
    {
      "indent": 3,
      "text": "Any code points that are not yet designated in the Unicode character set are considered unassigned for purposes of the FreeformClass, and such code points are to be treated as disallowed.",
      "ja": "まだUnicode文字セットで指定されていないコードポイントはFreeformClassの目的のために割り当てられていないと考えられ、そのようなコードポイントが禁止として扱われるべきです。"
    },
    {
      "indent": 0,
      "text": "4.3.5. Examples",
      "section_title": true,
      "ja": "4.3.5。例"
    },
    {
      "indent": 3,
      "text": "As described in the Introduction to this document, the string classes do not handle all issues related to string preparation and comparison (such as case mapping); instead, such issues are handled at the level of profiles. Examples for profiles of the FreeformClass can be found in [PRECIS-Users-Pwds] (the OpaqueString profile) and [PRECIS-Nickname] (the Nickname profile).",
      "ja": "本書の概要で説明したように、文字列クラスは、文字列の準備と（そのような場合のマッピングなど）の比較に関連するすべての問題を処理しません。代わりに、そのような問題は、プロファイルのレベルで処理されています。 FreeformClassのプロファイルの例は、[PRECIS-ユーザー-障害者（OpaqueStringプロファイル）と[PRECIS-ニックネーム（ニックネームプロファイル）に見出すことができます。"
    },
    {
      "indent": 0,
      "text": "5. Profiles",
      "section_title": true,
      "ja": "5.プロファイル"
    },
    {
      "indent": 3,
      "text": "This framework document defines the valid, contextual-rule-required, disallowed, and unassigned rules for the IdentifierClass and the FreeformClass. A profile of a PRECIS string class MUST define the width mapping, additional mappings (if any), case mapping, normalization, and directionality rules. A profile MAY also restrict the allowable characters above and beyond the definition of the relevant PRECIS string class (but MUST NOT add as valid any code points that are disallowed by the relevant PRECIS string class). These matters are discussed in the following subsections.",
      "ja": "このフレームワークドキュメントはIdentifierClassとFreeformClassに有効な、文脈ルール-必要禁止、および未割り当てルールを定義します。 PRECISストリングクラスのプロファイルは、幅マッピング、追加のマッピング（もしあれば）、ケースマッピング、正規化、および方向性ルールを定義しなければなりません。プロファイルは、関連PRECISの文字列クラスの定義は上記と超えて可能な文字を制限することができる（ただし、関連PRECIS文字列クラスで禁止されている任意のコードポイントを有効なものとして追加してはなりません）。これらの事項は、以下のサブセクションで説明されています。"
    },
    {
      "indent": 3,
      "text": "Profiles of the PRECIS string classes are registered with the IANA as described under Section 11.3. Profile names use the following convention: they are of the form \"Profilename of BaseClass\", where the \"Profilename\" string is a differentiator and \"BaseClass\" is the name of the PRECIS string class being profiled; for example, the profile of the FreeformClass used for opaque strings such as passwords is the OpaqueString profile [PRECIS-Users-Pwds].",
      "ja": "セクション11.3で説明したようPRECIS文字列クラスのプロファイルは、IANAに登録されています。プロファイル名には、次の規則を使用します。彼らは、「PROFILENAME」の文字列が差別化要因であり、「BaseClassのは、」プロファイルさPRECISの文字列クラスの名前です形「BaseClassののPROFILENAME」、です。例えば、FreeformClassのプロファイルは、パスワードなどの不透明な文字列に使用OpaqueStringプロファイル[PRECIS-ユーザー-障害者]です。"
    },
    {
      "indent": 0,
      "text": "5.1. Profiles Must Not Be Multiplied beyond Necessity",
      "section_title": true,
      "ja": "5.1。プロファイルは、必要以上に掛けあってはなりません"
    },
    {
      "indent": 3,
      "text": "The risk of profile proliferation is significant because having too many profiles will result in different behavior across various applications, thus violating what is known in user interface design as the \"Principle of Least Astonishment\".",
      "ja": "あまりにも多くのプロファイルを有するので、「原則最小の驚き」として、ユーザーインターフェイスのデザインで知られているもの違反し、様々なアプリケーション間で異なる動作になりますので、プロファイル増殖のリスクが重要です。"
    },
    {
      "indent": 3,
      "text": "Indeed, we already have too many profiles. Ideally we would have at most two or three profiles. Unfortunately, numerous application protocols exist with their own quirks regarding protocol strings. Domain names, email addresses, instant messaging addresses, chatroom nicknames, filenames, authentication identifiers, passwords, and other strings are already out there in the wild and need to be supported in existing application protocols such as DNS, SMTP, the Extensible Messaging and Presence Protocol (XMPP), Internet Relay Chat (IRC), NFS, the Internet Small Computer System Interface (iSCSI), the Extensible Authentication Protocol (EAP), and the Simple Authentication and Security Layer (SASL), among others.",
      "ja": "確かに、我々はすでにあまりにも多くのプロファイルを持っています。理想的には、せいぜい2つのまたは3つのプロファイルを持っているでしょう。残念ながら、数多くのアプリケーションプロトコルは、プロトコル文字列について、自分の癖で存在します。ドメイン名、電子メールアドレス、インスタントメッセージングアドレス、チャットルームのニックネーム、ファイル名、認証識別子、パスワード、およびその他の文字列は野生でそこに既にあり、そのようなDNS、SMTP、拡張可能なメッセージングとプレゼンスなどの既存のアプリケーション・プロトコルでサポートする必要がありますプロトコル（XMPP）、インターネットリレーチャット（IRC）、NFS、インターネット小型コンピュータシステムインタフェース（iSCSIの）、他の人の間で拡張認証プロトコル（EAP）、および簡易認証セキュリティー層（SASL）、。"
    },
    {
      "indent": 3,
      "text": "Nevertheless, profiles must not be multiplied beyond necessity.",
      "ja": "それにもかかわらず、プロファイルは必要以上掛けてはいけません。"
    },
    {
      "indent": 3,
      "text": "To help prevent profile proliferation, this document recommends sensible defaults for the various options offered to profile creators (such as width mapping and Unicode normalization). In addition, the guidelines for designated experts provided under Section 10 are meant to encourage a high level of due diligence regarding new profiles.",
      "ja": "プロフィールの増殖を防ぐために、この文書は、（幅マッピングおよびUnicodeの正規化など）のプロファイル作成者に提供される様々なオプションのための賢明なデフォルトを推奨しています。また、第10下に設けられた指定された専門家のためのガイドラインは、新しいプロファイルに関するデューデリジェンスの高いレベルを奨励することを意図しています。"
    },
    {
      "indent": 0,
      "text": "5.2. Rules",
      "section_title": true,
      "ja": "5.2。ルール"
    },
    {
      "indent": 0,
      "text": "5.2.1. Width Mapping Rule",
      "section_title": true,
      "ja": "5.2.1。幅マッピング・ルール"
    },
    {
      "indent": 3,
      "text": "The width mapping rule of a profile specifies whether width mapping is performed on the characters of a string, and how the mapping is done. Typically, such mapping consists of mapping fullwidth and halfwidth characters, i.e., code points with a Decomposition Type of Wide or Narrow, to their decomposition mappings; as an example, FULLWIDTH DIGIT ZERO (U+FF10) would be mapped to DIGIT ZERO (U+0030).",
      "ja": "プロファイルの幅マッピングルールは幅マッピングは、文字列の文字上で実行され、マッピングがどのように行われているかどうかを指定します。典型的には、このようなマッピングは、マッピング全角と半角文字で構成すなわち、その分解へのマッピング、広狭の分解タイプのコードポイント。一例として、FULLWIDTH DIGIT ZERO（U + FF10）はDIGIT ZERO（U + 0030）にマッピングされることになります。"
    },
    {
      "indent": 3,
      "text": "The normalization form specified by a profile (see below) has an impact on the need for width mapping. Because width mapping is performed as a part of compatibility decomposition, a profile employing either normalization form KD (NFKD) or normalization form KC (NFKC) does not need to specify width mapping. However, if Unicode normalization form C (NFC) is used (as is recommended) then the profile needs to specify whether to apply width mapping; in this case, width mapping is in general RECOMMENDED because allowing fullwidth and halfwidth characters to remain unmapped to their compatibility variants would violate the \"Principle of Least Astonishment\". For more information about the concept of width in East Asian scripts within Unicode, see Unicode Standard Annex #11 [UAX11].",
      "ja": "プロファイルによって指定された正規化形式（下記参照）幅マッピングの必要性に影響を与えます。幅マッピングが互換性分解の一部として実行されるため、KC（NFKC）形式の正規化形式KD（NFKD）または正規のいずれかを使用するプロファイルは、幅のマッピングを指定する必要はありません。 （推奨される）Unicode正規形C（NFC）を使用する場合は、プロファイルの幅マッピングを適用するかどうかを指定する必要があります。この場合には、幅マッピングは、一般的に全角と半角文字は「驚き最小の原則」に違反する彼らの互換性の変種にマッピングされていないままにすることができますので、推奨されます。 Unicodeの内、東アジアのスクリプトの幅の概念の詳細については、[UAX11] Unicode規格附属書＃11を参照。"
    },
    {
      "indent": 0,
      "text": "5.2.2. Additional Mapping Rule",
      "section_title": true,
      "ja": "5.2.2。追加のマッピング・ルール"
    },
    {
      "indent": 3,
      "text": "The additional mapping rule of a profile specifies whether additional mappings are performed on the characters of a string, such as:",
      "ja": "プロファイルの追加のマッピングルールは、追加のマッピングのような文字列の文字、上で実行されているかどうかを指定します。"
    },
    {
      "indent": 6,
      "text": "Mapping of delimiter characters (such as '@', ':', '/', '+', and '-')",
      "ja": "区切り文字のマッピング（ '：' など '@' など、 '/'、 '+'、および ' - '）"
    },
    {
      "indent": 6,
      "text": "Mapping of special characters (e.g., non-ASCII space characters to ASCII space or control characters to nothing).",
      "ja": "（何もASCIIスペースや制御文字など、非ASCIIスペース文字）特殊文字のマッピング。"
    },
    {
      "indent": 3,
      "text": "The PRECIS mappings document [PRECIS-Mappings] describes such mappings in more detail.",
      "ja": "PRECISマッピングドキュメント[PRECIS-マッピング]は、より詳細に、このようなマッピングを説明しています。"
    },
    {
      "indent": 0,
      "text": "5.2.3. Case Mapping Rule",
      "section_title": true,
      "ja": "5.2.3。ケースマッピング・ルール"
    },
    {
      "indent": 3,
      "text": "The case mapping rule of a profile specifies whether case mapping (instead of case preservation) is performed on the characters of a string, and how the mapping is applied (e.g., mapping uppercase and titlecase characters to their lowercase equivalents).",
      "ja": "プロファイルのケースマッピング規則は、文字列の文字に対して実行される場合のマッピング（代わりケース保存の）かどうかを指定し、マッピングが適用される方法（例えば、それらの小文字の等価物にマッピングする大文字及びタイトルケース文字）。"
    },
    {
      "indent": 3,
      "text": "If case mapping is desired (instead of case preservation), it is RECOMMENDED to use Unicode Default Case Folding as defined in the Unicode Standard [Unicode] (at the time of this writing, the algorithm is specified in Chapter 3 of [Unicode7.0]).",
      "ja": "ケースマッピングが（代わりにケースの保存の）望まれる場合には、Unicode標準[UNICODE]で定義されるように折りたたみUnicodeのデフォルトケースを使用することが推奨される（これを書いている時点で、アルゴリズムは[Unicode7.0の第3章で指定されています]）。"
    },
    {
      "indent": 6,
      "text": "Note: Unicode Default Case Folding is not designed to handle various localization issues (such as so-called \"dotless i\" in several Turkic languages). The PRECIS mappings document [PRECIS-Mappings] describes these issues in greater detail and defines a \"local case mapping\" method that handles some locale-dependent and context-dependent mappings.",
      "ja": "注意：Unicodeのデフォルトのケース折りたたみが（例えば、いくつかのテュルク系言語では、いわゆる「Iドットなし」など）様々なローカライズの問題を処理するように設計されていません。 PRECISマッピングドキュメント[PRECIS-マッピング]より詳細にこれらの問題を説明し、いくつかのロケールに依存して、コンテキスト依存のマッピングを処理する「ローカルケースマッピング」メソッドを定義しています。"
    },
    {
      "indent": 3,
      "text": "In order to maximize entropy and minimize the potential for false positives, it is NOT RECOMMENDED for application protocols to map uppercase and titlecase code points to their lowercase equivalents when strings conforming to the FreeformClass, or a profile thereof, are used in passwords; instead, it is RECOMMENDED to preserve the case of all code points contained in such strings and then perform case-sensitive comparison. See also the related discussion in Section 12.6 and in [PRECIS-Users-Pwds].",
      "ja": "エントロピーを最大化し、偽陽性の可能性を最小限にするために、FreeformClass、またはそのプロファイルに準拠する文字列は、パスワードで使用されているそれらの小文字の等価物に大文字とタイトルケースコードポイントをマップするアプリケーションプロトコルには推奨されません。代わりに、そのような文字列に含まれる全てのコードポイントのケースを保存した後、大文字と小文字を区別比較を実行することをお勧めします。また、セクション12.6でと[PRECIS-ユーザー-障害者]の関連の議論を参照してください。"
    },
    {
      "indent": 0,
      "text": "5.2.4. Normalization Rule",
      "section_title": true,
      "ja": "5.2.4。正規化ルール"
    },
    {
      "indent": 3,
      "text": "The normalization rule of a profile specifies which Unicode normalization form (D, KD, C, or KC) is to be applied (see Unicode Standard Annex #15 [UAX15] for background information).",
      "ja": "Unicode正規形（D、KD、C、またはKC）が適用されるプロファイルを指定の正規化ルール（背景情報についてはUnicode規格付属書＃15 [UAX15]を参照）。"
    },
    {
      "indent": 3,
      "text": "In accordance with [RFC5198], normalization form C (NFC) is RECOMMENDED.",
      "ja": "[RFC5198]に従って、C（NFC）形式の正規化が推奨されます。"
    },
    {
      "indent": 0,
      "text": "5.2.5. Directionality Rule",
      "section_title": true,
      "ja": "5.2.5。方向性ルール"
    },
    {
      "indent": 3,
      "text": "The directionality rule of a profile specifies how to treat strings containing what are often called \"right-to-left\" (RTL) characters (see Unicode Standard Annex #9 [UAX9]). RTL characters come from scripts that are normally written from right to left and are considered by Unicode to, themselves, have right-to-left directionality. Some strings containing RTL characters also contain \"left-to-right\" (LTR) characters, such as numerals, as well as characters without directional properties. Consequently, such strings are known as \"bidirectional strings\".",
      "ja": "プロファイルの方向性ルールは、多くの場合、「右から左」（RTL）の文字と呼ばれているものを含む文字列を処理する方法を指定します（Unicode標準の附属書＃9 [UAX9]を参照してください）。 RTL文字は、通常、右から左に書かれていると自分自身にUnicodeで考慮されるスクリプトから来右から左の方向性を持っています。 RTL文字を含むいくつかの文字列はまた、「左から右」（LTR）などの数字などの文字、だけでなく、方向性のない文字が含まれています。したがって、このような文字列は、「双方向文字列」として知られています。"
    },
    {
      "indent": 3,
      "text": "Presenting bidirectional strings in different layout systems (e.g., a user interface that is configured to handle primarily an RTL script vs. an interface that is configured to handle primarily an LTR script) can yield display results that, while predictable to those who understand the display rules, are counter-intuitive to casual users. In particular, the same bidirectional string (in PRECIS terms) might not be presented in the same way to users of those different layout systems, even though the presentation is consistent within any particular layout system. In some applications, these presentation differences might be considered problematic and thus the application designers might wish to restrict the use of bidirectional strings by specifying a directionality rule. In other applications, these presentation differences might not be considered problematic (this especially tends to be true of more \"free-form\" strings) and thus no directionality rule is needed.",
      "ja": "（例えば、主に主にLTRスクリプト処理するように設定されたインターフェイス対RTLスクリプトを処理するように設定されたユーザ・インタフェース）が表示結果をもたらすことができる別のレイアウトシステムにおいて、双方向の文字列を提示すること、しばらく表示を理解している人に予測可能ルールは、反直感的なカジュアルなユーザーにしています。具体的には、（PRECISに関して）同じ双方向ストリングは、プレゼンテーションは、任意の特定のレイアウトシステム内で一貫しているにもかかわらず、これらの異なるレイアウトシステムのユーザに同じ方法で提示されない場合があります。一部のアプリケーションでは、これらのプレゼンテーションの違いが問題視される可能性がありますので、アプリケーション設計者は、方向性ルールを指定することで、双方向の文字列の使用を制限したい場合があります。他のアプリケーションでは、これらのプレゼンテーションの違いが問題視されない場合があります（これは特に、より「自由形式」の文字列の真の傾向にある）ので、何の方向性ルールは必要ありません。"
    },
    {
      "indent": 3,
      "text": "The PRECIS framework does not directly address how to deal with bidirectional strings across all string classes and profiles, and does not define any new directionality rules, since at present there is no widely accepted and implemented solution for the safe display of arbitrary bidirectional strings beyond the Unicode bidirectional algorithm [UAX9]. Although rules for management and display of bidirectional strings have been defined for domain name labels and similar identifiers through the \"Bidi Rule\" specified in the IDNA2008 specification on right-to-left scripts [RFC5893], those rules are quite restrictive and are not necessarily applicable to all bidirectional strings.",
      "ja": "PRECISフレームワークは、直接、すべての文字列クラスとプロファイル間で双方向の文字列をどのように扱うか扱わない、そして現在を超えた任意の双方向の文字列の安全な表示には広く受け入れられ、実装ソリューションが存在しないので、新たな方向性規則を定義していませんUnicodeの双方向アルゴリズム[UAX9]。双方向の文字列の管理や表示のための規則は、右から左へのスクリプト[RFC5893]にIDNA2008仕様書で指定された「双方向ルール」を通じてドメイン名のラベルと同様の識別子のために定義されているが、これらのルールは非常に制限されているとは限りませんすべての双方向の文字列に適用されます。"
    },
    {
      "indent": 3,
      "text": "The authors of a PRECIS profile might believe that they need to define a new directionality rule of their own. Because of the complexity of the issues involved, such a belief is almost always misguided, even if the authors have done a great deal of careful research into the challenges of displaying bidirectional strings. This document strongly suggests that profile authors who are thinking about defining a new directionality rule think again, and instead consider using the \"Bidi Rule\" [RFC5893] (for profiles based on the IdentifierClass) or following the Unicode bidirectional algorithm [UAX9] (for profiles based on the FreeformClass or in situations where the IdentifierClass is not appropriate).",
      "ja": "PRECISプロファイルの作成者は、彼らが自分自身の新しい方向性ルールを定義する必要があると信じているかもしれません。そのため関係する問題の複雑さのため、そのような信念は、著者は、双方向の文字列を表示する際の課題に慎重に多くの研究を行っている場合でも、ほとんど常に見当違いです。この文書は強く、新たな方向性ルールの定義について考えているプロファイルの作成者は（のために（IdentifierClassに基づいてプロファイル用）、「双方向ルール」[RFC5893]を使用して、またはUnicode双方向アルゴリズム[UAX9]を以下の点を考慮代わりに、もう一度考えて、そしてことを示唆していますFreeformClass上またはIdentifierClassが適切でない状況）に基づいて、プロファイル。"
    },
    {
      "indent": 0,
      "text": "5.3. A Note about Spaces",
      "section_title": true,
      "ja": "5.3。スペースについての注意事項"
    },
    {
      "indent": 3,
      "text": "With regard to the IdentifierClass, the consensus of the PRECIS Working Group was that spaces are problematic for many reasons, including the following:",
      "ja": "IdentifierClassに関しては、PRECISワーキンググループのコンセンサスは、スペースには、以下を含む多くの理由で問題があるということでした。"
    },
    {
      "indent": 3,
      "text": "o Many Unicode characters are confusable with ASCII space.",
      "ja": "O多くのUnicode文字は、ASCIIスペースと混同しやすいです。"
    },
    {
      "indent": 3,
      "text": "o Even if non-ASCII space characters are mapped to ASCII space (U+0020), space characters are often not rendered in user interfaces, leading to the possibility that a human user might consider a string containing spaces to be equivalent to the same string without spaces.",
      "ja": "非ASCIIスペース文字をASCIIスペース（U + 0020）にマッピングされている場合でも、O、空白文字は、しばしば、人間のユーザが同じ文字列に相当するとスペースを含む文字列を検討するかもしれないという可能性につながる、ユーザインタフェースにレンダリングされていませんスペースなし。"
    },
    {
      "indent": 3,
      "text": "o In some locales, some devices are known to generate a character other than ASCII space (such as ZERO WIDTH JOINER, U+200D) when a user performs an action like hitting the space bar on a keyboard.",
      "ja": "O一部のロケールでは、いくつかのデバイスは、ユーザがキーボード上のスペースバーを押すようなアクションを実行するとき（例えばZERO WIDTH建具、U + 200Dなど）ASCIIスペース以外の文字を生成することが知られています。"
    },
    {
      "indent": 3,
      "text": "One consequence of disallowing space characters in the IdentifierClass might be to effectively discourage their use within identifiers created in newer application protocols; given the challenges involved with properly handling space characters (especially non-ASCII space characters) in identifiers and other protocol strings, the PRECIS Working Group considered this to be a feature, not a bug.",
      "ja": "IdentifierClassにスペース文字を許可しないの1つの結果は、効果的に新しいアプリケーションプロトコルで作成された識別子の中にその使用を阻止するかもしれません。適切識別子と他のプロトコル文字列に空白文字（特に非ASCIIスペース文字）を扱うに関わる課題を与えられ、PRECISワーキンググループは機能、ないかかわる問題であることを考えました。"
    },
    {
      "indent": 3,
      "text": "However, the FreeformClass does allow spaces, which enables application protocols to define profiles of the FreeformClass that are more flexible than any profiles of the IdentifierClass. In addition, as explained in Section 6.3, application protocols can also define application-layer constructs containing spaces.",
      "ja": "しかし、FreeformClassはIdentifierClassの任意のプロファイルよりも柔軟であるFreeformClassのプロファイルを定義するアプリケーションプロトコルを可能にする、空間を可能にし。また、セクション6.3で説明したように、アプリケーションプロトコルはまた、スペースを含むアプリケーション層の構造を定義することができます。"
    },
    {
      "indent": 0,
      "text": "6. Applications",
      "section_title": true,
      "ja": "6.アプリケーション"
    },
    {
      "indent": 0,
      "text": "6.1. How to Use PRECIS in Applications",
      "section_title": true,
      "ja": "6.1。アプリケーションでのPRECISを使用する方法"
    },
    {
      "indent": 3,
      "text": "Although PRECIS has been designed with applications in mind, internationalization is not suddenly made easy through the use of PRECIS. Application developers still need to give some thought to how they will use the PRECIS string classes, or profiles thereof, in their applications. This section provides some guidelines to application developers (and to expert reviewers of application protocol specifications).",
      "ja": "PRECISを念頭に置いてアプリケーションを設計してきたが、国際化は突然PRECISを使用して簡単に行われていません。アプリケーション開発者は、まだ彼らは自分のアプリケーションでは、そのPRECISの文字列クラス、またはプロファイルを使用する方法にいくつかの考えを与える必要があります。このセクションでは、アプリケーション開発者にいくつかのガイドラインを提供（およびアプリケーション・プロトコル仕様の専門家の査読に）。"
    },
    {
      "indent": 3,
      "text": "o Don't define your own profile unless absolutely necessary (see Section 5.1). Existing profiles have been designed for wide reuse. It is highly likely that an existing profile will meet your needs, especially given the ability to specify further excluded characters (Section 6.2) and to build application-layer constructs (see Section 6.3).",
      "ja": "絶対に必要な場合を除き、O（5.1節を参照）、独自のプロファイルを定義しないでください。既存のプロファイルは、広い再利用のために設計されています。 （6.3節を参照）、特に、さらに除外文字（セクション6.2）を指定すると、アプリケーション層の構造を構築する能力が与えられ、既存のプロファイルがニーズを満たす可能性が高いです。"
    },
    {
      "indent": 3,
      "text": "o Do specify:",
      "ja": "Oを指定してください："
    },
    {
      "indent": 6,
      "text": "* Exactly which entities are responsible for preparation, enforcement, and comparison of internationalized strings (e.g., servers or clients).",
      "ja": "*準備、実施、および国際化された文字列（例えば、サーバーまたはクライアント）の比較のために責任があるまさに実体。"
    },
    {
      "indent": 6,
      "text": "* Exactly when those entities need to complete their tasks (e.g., a server might need to enforce the rules of a profile before allowing a client to gain network access).",
      "ja": "これらのエンティティは、そのタスクを完了する必要がある場合*正確に（例えば、サーバは、クライアントがネットワークアクセスを得るために許可する前に、プロファイルの規則を施行する必要がある場合があります）。"
    },
    {
      "indent": 6,
      "text": "* Exactly which protocol slots need to be checked against which profiles (e.g., checking the address of a message's intended recipient against the UsernameCaseMapped profile [PRECIS-Users-Pwds] of the IdentifierClass, or checking the password of a user against the OpaqueString profile [PRECIS-Users-Pwds] of the FreeformClass).",
      "ja": "スロットは、それに対してチェックする必要があります*正確にどのプロトコル[例えば、UsernameCaseMappedプロファイルに対するメッセージの目的の受信者IdentifierClassの[PRECIS-ユーザー-障害者]のアドレスをチェックし、またはOpaqueStringプロファイルに対するユーザーのパスワードを確認する（プロファイルPRECIS-ユーザー・障害者FreeformClassの]）。"
    },
    {
      "indent": 6,
      "text": "See [PRECIS-Users-Pwds] and [XMPP-Addr-Format] for definitions of these matters for several applications.",
      "ja": "いくつかの用途のために、これらの問題の定義については、[PRECIS-ユーザー-障害者]と[XMPP-ADDR-フォーマット]を参照してください。"
    },
    {
      "indent": 0,
      "text": "6.2. Further Excluded Characters",
      "section_title": true,
      "ja": "6.2。また、除外文字"
    },
    {
      "indent": 3,
      "text": "An application protocol that uses a profile MAY specify particular code points that are not allowed in relevant slots within that application protocol, above and beyond those excluded by the string class or profile.",
      "ja": "上記および文字列クラスまたはプロファイルによって除外されるものを超えて、そのアプリケーションプロトコル内の関連するスロットに許可されていない特定のコードポイントを指定するかもしれプロファイルを使用するアプリケーションプロトコル。"
    },
    {
      "indent": 3,
      "text": "That is, an application protocol MAY do either of the following:",
      "ja": "これは、アプリケーションプロトコルは、次のいずれかを行うことができ、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "1. Exclude specific code points that are allowed by the relevant string class.",
      "ja": "1.関連する文字列クラスによって許可されている特定のコードポイントを除外する。"
    },
    {
      "indent": 3,
      "text": "2. Exclude characters matching certain Unicode properties (e.g., math symbols) that are included in the relevant PRECIS string class.",
      "ja": "2.関連PRECIS文字列クラスに含まれる特定のUnicodeの特性（例えば、数学記号）と一致する文字を除外する。"
    },
    {
      "indent": 3,
      "text": "As a result of such exclusions, code points that are defined as valid for the PRECIS string class or profile will be defined as disallowed for the relevant protocol slot.",
      "ja": "関連プロトコルスロットの禁止等除外の結果として、PRECIS文字列クラスまたはプロファイルの有効として定義されているコードポイントを定義します。"
    },
    {
      "indent": 3,
      "text": "Typically, such exclusions are defined for the purpose of backward compatibility with legacy formats within an application protocol. These are defined for application protocols, not profiles, in order to prevent multiplication of profiles beyond necessity (see Section 5.1).",
      "ja": "典型的には、このような除外は、アプリケーションプロトコル内のレガシーフォーマットとの下位互換性の目的のために定義されています。これらは、必要以上のプロファイルの増殖を防ぐために、アプリケーションプロトコルではなく、プロファイルのために定義されている（5.1節を参照してください）。"
    },
    {
      "indent": 0,
      "text": "6.3. Building Application-Layer Constructs",
      "section_title": true,
      "ja": "6.3。アプリケーション層の構築の構築"
    },
    {
      "indent": 3,
      "text": "Sometimes, an application-layer construct does not map in a straightforward manner to one of the base string classes or a profile thereof. Consider, for example, the \"simple user name\" construct in the Simple Authentication and Security Layer (SASL) [RFC4422]. Depending on the deployment, a simple user name might take the form of a user's full name (e.g., the user's personal name followed by a space and then the user's family name). Such a simple user name cannot be defined as an instance of the IdentifierClass or a profile thereof, since space characters are not allowed in the",
      "ja": "時々、アプリケーション層の構築は、基本文字列クラスの一つまたはそのプロファイルに簡単な方法でマッピングされません。例えば、「シンプルなユーザー名が」簡易認証セキュリティー層（SASL）[RFC4422]で構築し、考えてみましょう。展開によっては、簡単なユーザー名は、ユーザーのフルネーム（例えば、スペースに続いて、ユーザーの個人名と、ユーザーの姓）の形をとるかもしれません。スペース文字を追加することはできませんので、このような単純なユーザー名は、IdentifierClassのインスタンスまたはそのプロファイルとして定義することができません"
    },
    {
      "indent": 3,
      "text": "IdentifierClass; however, it could be defined using a space-separated sequence of IdentifierClass instances, as in the following ABNF [RFC5234] from [PRECIS-Users-Pwds]:",
      "ja": "IdentifierClass;しかし、[PRECIS-ユーザー-障害者]から以下のABNF [RFC5234]のように、IdentifierClassインスタンスのスペースで区切られた配列を使用して定義することができます。"
    },
    {
      "indent": 6,
      "text": "username   = userpart *(1*SP userpart)\nuserpart   = 1*(idbyte)\n             ;\n             ; an \"idbyte\" is a byte used to represent a\n             ; UTF-8 encoded Unicode code point that can be\n             ; contained in a string that conforms to the\n             ; PRECIS \"IdentifierClass\"\n             ;",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Similar techniques could be used to define many application-layer constructs, say of the form \"user@domain\" or \"/path/to/file\".",
      "ja": "同様の技術は、多くのアプリケーション層の構造を定義するために使用することができ、フォーム「ユーザー@ドメイン」または「/パス/に/ファイル」を言います。"
    },
    {
      "indent": 0,
      "text": "7. Order of Operations",
      "section_title": true,
      "ja": "事業の7.受注"
    },
    {
      "indent": 3,
      "text": "To ensure proper comparison, the rules specified for a particular string class or profile MUST be applied in the following order:",
      "ja": "適切な比較を確実にするために、特定の文字列クラスまたはプロファイルに指定されたルールは、次の順序で適用する必要があります。"
    },
    {
      "indent": 3,
      "text": "1. Width Mapping Rule",
      "section_title": true,
      "ja": "1.幅のマッピングルール"
    },
    {
      "indent": 3,
      "text": "2. Additional Mapping Rule",
      "section_title": true,
      "ja": "2.追加のマッピング・ルール"
    },
    {
      "indent": 3,
      "text": "3. Case Mapping Rule",
      "section_title": true,
      "ja": "3.ケースマッピング・ルール"
    },
    {
      "indent": 3,
      "text": "4. Normalization Rule",
      "section_title": true,
      "ja": "4.正規化ルール"
    },
    {
      "indent": 3,
      "text": "5. Directionality Rule",
      "section_title": true,
      "ja": "5.方向性ルール"
    },
    {
      "indent": 3,
      "text": "6. Behavioral rules for determining whether a code point is valid, allowed under a contextual rule, disallowed, or unassigned",
      "ja": "コード・ポイントは、有効なコンテキストルールの下で許可され、許可されていない、または割り当てられていないかどうかを決定するための前記行動ルール"
    },
    {
      "indent": 3,
      "text": "As already described, the width mapping, additional mapping, case mapping, normalization, and directionality rules are specified for each profile, whereas the behavioral rules are specified for each string class. Some of the logic behind this order is provided under Section 5.2.1 (see also the PRECIS mappings document [PRECIS-Mappings]).",
      "ja": "既に説明したように行動ルールが各文字列クラスに指定されている一方、幅マッピング、追加のマッピング、ケースマッピング、正規化、および方向性ルールは、各プロファイルに指定されています。この注文の背後にあるロジックの一部は、5.2.1項（もPRECISマッピングドキュメント[PRECIS-マッピング]を参照）の下で提供されています。"
    },
    {
      "indent": 0,
      "text": "8. Code Point Properties",
      "section_title": true,
      "ja": "8.コードポイントのプロパティ"
    },
    {
      "indent": 3,
      "text": "In order to implement the string classes described above, this document does the following:",
      "ja": "上記の文字列クラスを実装するためには、この文書には、次のことを行います。"
    },
    {
      "indent": 3,
      "text": "1. Reviews and classifies the collections of code points in the Unicode character set by examining various code point properties.",
      "ja": "1.レビューや様々なコードポイントのプロパティを調べることによって設定されたUnicode文字のコード・ポイントのコレクションを分類します。"
    },
    {
      "indent": 3,
      "text": "2. Defines an algorithm for determining a derived property value, which can vary depending on the string class being used by the relevant application protocol.",
      "ja": "2.関連アプリケーションプロトコルによって使用されている文字列クラスに応じて変えることができる派生プロパティの値を決定するためのアルゴリズムを定義します。"
    },
    {
      "indent": 3,
      "text": "This document is not intended to specify precisely how derived property values are to be applied in protocol strings. That information is the responsibility of the protocol specification that uses or profiles a PRECIS string class from this document. The value of the property is to be interpreted as follows.",
      "ja": "この文書は、派生プロパティの値は、プロトコル文字列に適用される正確にどのように指定することが意図されていません。この情報は、この文書からPRECIS文字列クラスを使用するか、プロファイルプロトコル仕様の責任です。プロパティの値は、以下のように解釈されるべきです。"
    },
    {
      "indent": 3,
      "text": "PROTOCOL VALID Those code points that are allowed to be used in any PRECIS string class (currently, IdentifierClass and FreeformClass). The abbreviated term \"PVALID\" is used to refer to this value in the remainder of this document.",
      "ja": "任意PRECIS文字列クラス（現在、IdentifierClass及びFreeformClass）で使用することが許可されているこれらのコードポイント有効なプロトコル。略語「PVALID」は、この文書の残りの部分でこの値を参照するために使用されます。"
    },
    {
      "indent": 3,
      "text": "SPECIFIC CLASS PROTOCOL VALID Those code points that are allowed to be used in specific string classes. In the remainder of this document, the abbreviated term *_PVAL is used, where * = (ID | FREE), i.e., either \"FREE_PVAL\" or \"ID_PVAL\". In practice, the derived property ID_PVAL is not used in this specification, since every ID_PVAL code point is PVALID.",
      "ja": "特定文字列クラスで使用することが許可されているこれらのコードポイントVALID特定のクラスのプロトコル。この文書の残りの部分において、略語* _PVALが使用され、* =（ID | FREE）、すなわち、いずれかの \"FREE_PVAL\" 又は \"ID_PVAL\"。すべてID_PVALコードポイントPVALIDあるので、実際には、派生プロパティID_PVALは、本明細書で使用されていません。"
    },
    {
      "indent": 3,
      "text": "CONTEXTUAL RULE REQUIRED Some characteristics of the character, such as its being invisible in certain contexts or problematic in others, require that it not be used in labels unless specific other characters or properties are present. As in IDNA2008, there are two subdivisions of CONTEXTUAL RULE REQUIRED -- the first for Join_controls (called \"CONTEXTJ\") and the second for other characters (called \"CONTEXTO\"). A character with the derived property value CONTEXTJ or CONTEXTO MUST NOT be used unless an appropriate rule has been established and the context of the character is consistent with that rule. The most notable of the CONTEXTUAL RULE REQUIRED characters are the Join Control characters U+200D ZERO WIDTH JOINER and U+200C ZERO WIDTH NON-JOINER, which have a derived property value of CONTEXTJ. See Appendix A of [RFC5892] for more information.",
      "ja": "特定の他の文字やプロパティが存在しない限り、そのようなその他の人では、特定の状況や問題に目に見えないものとして、文字のいくつかの特徴が必要CONTEXTUALルールは、それがラベルに使用しないことが必要です。 （「CONTEXTJ」と呼ばれる）Join_controlsための第1及び（「CONTEXTO」と呼ばれる）は、他の文字の第二 -  IDNA2008におけるように、2つの文脈ルールREQUIREDの下位区分があります。適切なルールが確立されている文字のコンテキストがその規則と一致しない限り、派生プロパティ値CONTEXTJ又はCONTEXTOの文字を使用してはいけません。文脈ルール必要な文字の最も注目すべきは、参加制御文字U + 200D ZERO WIDTH JOINERとCONTEXTJの派生プロパティ値を持つU + 200C ZERO WIDTH NON-JOINER、です。詳細については、[RFC5892]の付録Aを参照してください。"
    },
    {
      "indent": 3,
      "text": "DISALLOWED Those code points that are not permitted in any PRECIS string class.",
      "ja": "任意のPRECISの文字列クラスで許可されていないこれらのコードポイントをDISALLOWED。"
    },
    {
      "indent": 3,
      "text": "SPECIFIC CLASS DISALLOWED Those code points that are not to be included in one of the string classes but that might be permitted in others. In the remainder of this document, the abbreviated term *_DIS is used, where * = (ID | FREE), i.e., either \"FREE_DIS\" or \"ID_DIS\". In practice, the derived property FREE_DIS is not used in this specification, since every FREE_DIS code point is DISALLOWED.",
      "ja": "特定のクラスは、文字列クラスの一つに含まれるべきではないされているが、それは他の人に許可される可能性がありますこれらのコードポイントをDISALLOWED。この文書の残りの部分において、略語* _DISが使用され、* =（ID | FREE）、すなわち、いずれかの \"FREE_DIS\" 又は \"ID_DIS\"。すべてFREE_DISコードポイントが許可されていないので、実際には、派生プロパティFREE_DISは、本明細書で使用されていません。"
    },
    {
      "indent": 3,
      "text": "UNASSIGNED Those code points that are not designated (i.e., are unassigned) in the Unicode Standard.",
      "ja": "Unicode標準で指定されていないUNASSIGNEDこれらのコードポイント（すなわち、割り当てられていません）。"
    },
    {
      "indent": 3,
      "text": "The algorithm to calculate the value of the derived property is as follows (implementations MUST NOT modify the order of operations within this algorithm, since doing so would cause inconsistent results across implementations):",
      "ja": "次のように派生プロパティの値を計算するアルゴリズムは、（そうすることが実装間で一貫性のない結果を引き起こすので、実装は、このアルゴリズム内の操作の順序を変更してはいけません）です。"
    },
    {
      "indent": 3,
      "text": "If .cp. .in. Exceptions Then Exceptions(cp);\nElse If .cp. .in. BackwardCompatible Then BackwardCompatible(cp);\nElse If .cp. .in. Unassigned Then UNASSIGNED;\nElse If .cp. .in. ASCII7 Then PVALID;\nElse If .cp. .in. JoinControl Then CONTEXTJ;\nElse If .cp. .in. OldHangulJamo Then DISALLOWED;\nElse If .cp. .in. PrecisIgnorableProperties Then DISALLOWED;\nElse If .cp. .in. Controls Then DISALLOWED;\nElse If .cp. .in. HasCompat Then ID_DIS or FREE_PVAL;\nElse If .cp. .in. LetterDigits Then PVALID;\nElse If .cp. .in. OtherLetterDigits Then ID_DIS or FREE_PVAL;\nElse If .cp. .in. Spaces Then ID_DIS or FREE_PVAL;\nElse If .cp. .in. Symbols Then ID_DIS or FREE_PVAL;\nElse If .cp. .in. Punctuation Then ID_DIS or FREE_PVAL;\nElse DISALLOWED;",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The value of the derived property calculated can depend on the string class; for example, if an identifier used in an application protocol is defined as profiling the PRECIS IdentifierClass then a space character such as U+0020 would be assigned to ID_DIS, whereas if an identifier is defined as profiling the PRECIS FreeformClass then the character would be assigned to FREE_PVAL. For the sake of brevity, the designation \"FREE_PVAL\" is used herein, instead of the longer designation \"ID_DIS or FREE_PVAL\". In practice, the derived properties ID_PVAL and FREE_DIS are not used in this specification, since every ID_PVAL code point is PVALID and every FREE_DIS code point is DISALLOWED.",
      "ja": "算出した派生プロパティの値は、文字列クラスに依存することができます。例えば、アプリケーションプロトコルで使用される識別子は、識別子は、次に文字が割り当てられるPRECIS FreeformClassをプロファイルとして定義されている場合、一方U + 0020は、ID_DISに割り当てられるように、次いでスペース文字をPRECIS IdentifierClassをプロファイルとして定義されている場合FREE_PVALへ。簡潔にするために、記号「FREE_PVAL」が代わりに長く指定「ID_DIS又はFREE_PVAL」を、本明細書中で使用されます。すべてID_PVALコードポイントPVALIDであり、すべてFREE_DISコードポイントが許可されていないので、実際には、派生プロパティID_PVALとFREE_DISは、本明細書で使用されていません。"
    },
    {
      "indent": 3,
      "text": "Use of the name of a rule (such as \"Exceptions\") implies the set of code points that the rule defines, whereas the same name as a function call (such as \"Exceptions(cp)\") implies the value that the code point has in the Exceptions table.",
      "ja": "（そのような「例外」のような）ルールの名前を使用することは、（例えば、「例外（CP）」のような）関数呼び出しと同じ名前のに対してコードポイントがその値を意味し、ルールが定義するコードポイントのセットを意味します例外テーブルに持っています。"
    },
    {
      "indent": 3,
      "text": "The mechanisms described here allow determination of the value of the property for future versions of Unicode (including characters added after Unicode 5.2 or 7.0 depending on the category, since some categories mentioned in this document are simply pointers to IDNA2008 and therefore were defined at the time of Unicode 5.2). Changes in Unicode properties that do not affect the outcome of this process therefore do not affect this framework. For example, a character can have its Unicode General_Category value (at the time of this writing, see Chapter 4 of [Unicode7.0]) change from So to Sm, or from Lo to Ll, without affecting the algorithm results. Moreover, even if such changes were to result, the BackwardCompatible list (Section 9.7) can be adjusted to ensure the stability of the results.",
      "ja": "この文書に記載されたいくつかのカテゴリは、単にIDNA2008にポインタ従って時に定義しているので、ここで説明されたメカニズムは、ユニコード5.2または7.0カテゴリに応じて後に加え文字を含むユニコードの将来のバージョン（のプロパティの値の決定を可能にしますユニコード5.2の）。このプロセスの結果には影響しませんUnicodeプロパティの変更は、したがって、このフレームワークには影響を与えません。例えば、文字が（これを書いている時点で、[Unicode7.0]の第4章を参照してください）アルゴリズムの結果に影響を与えることなく、SMへ、またはローからのL1へsoからの変化を、そのユニコードGeneral_Category値を持つことができます。また、そのような変化が生じることがあったとしても、BackwardCompatibleリスト（セクション9.7）は、結果の安定性を確保するように調整することができます。"
    },
    {
      "indent": 0,
      "text": "9. Category Definitions Used to Calculate Derived Property",
      "section_title": true,
      "ja": "派生プロパティを計算するために使用される9カテゴリーの定義"
    },
    {
      "indent": 3,
      "text": "The derived property obtains its value based on a two-step procedure:",
      "ja": "派生プロパティは、2段階の手順に基づいてその値を取得します。"
    },
    {
      "indent": 3,
      "text": "1. Characters are placed in one or more character categories either (1) based on core properties defined by the Unicode Standard or (2) by treating the code point as an exception and addressing the code point based on its code point value. These categories are not mutually exclusive.",
      "ja": "1.文字は（1）例外として、コードポイントを処理し、そのコードポイント値に基づいてコード・ポイントをアドレス指定することによってUnicode標準又は（2）によって定義されたコアプロパティに基づいて、いずれか一つ以上の文字カテゴリに配置されます。これらのカテゴリは相互に排他的ではありません。"
    },
    {
      "indent": 3,
      "text": "2. Set operations are used with these categories to determine the values for a property specific to a given string class. These operations are specified under Section 8.",
      "ja": "2. Set操作は、指定された文字列クラスに固有のプロパティの値を決定するために、これらのカテゴリで使用されています。これらの操作は、セクション8で指定されています。"
    },
    {
      "indent": 6,
      "text": "Note: Unicode property names and property value names might have short abbreviations, such as \"gc\" for the General_Category property and \"Ll\" for the Lowercase_Letter property value of the gc property.",
      "ja": "注意：Unicodeプロパティ名とプロパティ値の名前は、GCプロパティのLOWERCASE_LETTERプロパティ値のGeneral_Categoryプロパティの「GC」と「LL」などの短い略語を、持っているかもしれません。"
    },
    {
      "indent": 3,
      "text": "In the following specification of character categories, the operation that returns the value of a particular Unicode character property for a code point is designated by using the formal name of that property (from the Unicode PropertyAliases.txt file [PropertyAliases] followed by \"(cp)\" for \"code point\". For example, the value of the General_Category property for a code point is indicated by General_Category(cp).",
      "ja": "文字カテゴリの以下の明細書、コードポイントがファイル[PropertyAliases]（CP」が続くユニコードPropertyAliases.txtから（そのプロパティの正式名称を用いて指定されているため、特定のUnicode文字プロパティの値を返す演算で）コードポイント 『」は、』例えば、コードポイントのGeneral_Categoryプロパティの値は、General_Category（CP）で示されています。"
    },
    {
      "indent": 3,
      "text": "The first ten categories (A-J) shown below were previously defined for IDNA2008 and are referenced from [RFC5892] to ease the understanding of how PRECIS handles various characters. Some of these categories are reused in PRECIS, and some of them are not; however, the lettering of categories is retained to prevent overlap and to ease implementation of both IDNA2008 and PRECIS in a single software application. The next eight categories (K-R) are specific to PRECIS.",
      "ja": "以下に示す第10のカテゴリ（-J）は、以前にIDNA2008のために定義し、PRECISは、様々な文字を処理する方法の理解を容易にするために[RFC5892]から参照されています。これらのカテゴリの一部は、PRECISに再利用され、そのうちのいくつかではありませんされています。しかし、カテゴリのレタリングは、重複を防止するために、単一のソフトウェアアプリケーションにIDNA2008とPRECISの両方の実装を容易にするために保持されます。次の8つのカテゴリ（K-R）は、PRECISに特異的です。"
    },
    {
      "indent": 0,
      "text": "9.1. LetterDigits (A)",
      "section_title": true,
      "ja": "9.1。 LetterDigits（A）"
    },
    {
      "indent": 3,
      "text": "This category is defined in Section 2.1 of [RFC5892] and is included by reference for use in PRECIS.",
      "ja": "このカテゴリには、[RFC5892]のセクション2.1で定義され、PRECISにおける使用のために参照により含まれます。"
    },
    {
      "indent": 0,
      "text": "9.2. Unstable (B)",
      "section_title": true,
      "ja": "9.2。不安定（B）"
    },
    {
      "indent": 3,
      "text": "This category is defined in Section 2.2 of [RFC5892]. However, it is not used in PRECIS.",
      "ja": "このカテゴリは、[RFC5892]のセクション2.2で定義されています。しかし、それはPRECISでは使用されません。"
    },
    {
      "indent": 0,
      "text": "9.3. IgnorableProperties (C)",
      "section_title": true,
      "ja": "9.3。 IgnorableProperties（C）"
    },
    {
      "indent": 3,
      "text": "This category is defined in Section 2.3 of [RFC5892]. However, it is not used in PRECIS.",
      "ja": "このカテゴリは、[RFC5892]のセクション2.3で定義されています。しかし、それはPRECISでは使用されません。"
    },
    {
      "indent": 3,
      "text": "Note: See the PrecisIgnorableProperties (\"M\") category below for a more inclusive category used in PRECIS identifiers.",
      "ja": "注意：PrecisIgnorableProperties（「M」）PRECIS識別子で使用されるより包括的なカテゴリの下にカテゴリを参照してください。"
    },
    {
      "indent": 0,
      "text": "9.4. IgnorableBlocks (D)",
      "section_title": true,
      "ja": "9.4。 IgnorableBlocks（D）"
    },
    {
      "indent": 3,
      "text": "This category is defined in Section 2.4 of [RFC5892]. However, it is not used in PRECIS.",
      "ja": "このカテゴリは、[RFC5892]のセクション2.4で定義されています。しかし、それはPRECISでは使用されません。"
    },
    {
      "indent": 0,
      "text": "9.5. LDH (E)",
      "section_title": true,
      "ja": "9.5。 LDH（E）"
    },
    {
      "indent": 3,
      "text": "This category is defined in Section 2.5 of [RFC5892]. However, it is not used in PRECIS.",
      "ja": "このカテゴリは、[RFC5892]のセクション2.5で定義されています。しかし、それはPRECISでは使用されません。"
    },
    {
      "indent": 3,
      "text": "Note: See the ASCII7 (\"K\") category below for a more inclusive category used in PRECIS identifiers.",
      "ja": "注意：ASCII7（「K」）PRECIS識別子で使用されるより包括的なカテゴリの下にカテゴリを参照してください。"
    },
    {
      "indent": 0,
      "text": "9.6. Exceptions (F)",
      "section_title": true,
      "ja": "9.6。例外（F）"
    },
    {
      "indent": 3,
      "text": "This category is defined in Section 2.6 of [RFC5892] and is included by reference for use in PRECIS.",
      "ja": "このカテゴリには、[RFC5892]のセクション2.6で定義され、PRECISにおける使用のために参照により含まれます。"
    },
    {
      "indent": 0,
      "text": "9.7. BackwardCompatible (G)",
      "section_title": true,
      "ja": "9.7。 BackwardCompatible（G）"
    },
    {
      "indent": 3,
      "text": "This category is defined in Section 2.7 of [RFC5892] and is included by reference for use in PRECIS.",
      "ja": "このカテゴリには、[RFC5892]のセクション2.7で定義され、PRECISにおける使用のために参照により含まれます。"
    },
    {
      "indent": 3,
      "text": "Note: Management of this category is handled via the processes specified in [RFC5892]. At the time of this writing (and also at the time that RFC 5892 was published), this category consisted of the empty set; however, that is subject to change as described in RFC 5892.",
      "ja": "注：このカテゴリの管理は、[RFC5892]で指定されたプロセスを経て処理されます。この記事の執筆時点では（そしてまた、そのRFC 5892が発行された時点で）、このカテゴリには空のセットで構成され、しかし、それは、RFC 5892に記載されるように変更されます。"
    },
    {
      "indent": 0,
      "text": "9.8. JoinControl (H)",
      "section_title": true,
      "ja": "9.8。 JoinControl（H）"
    },
    {
      "indent": 3,
      "text": "This category is defined in Section 2.8 of [RFC5892] and is included by reference for use in PRECIS.",
      "ja": "このカテゴリには、[RFC5892]のセクション2.8で定義され、PRECISにおける使用のために参照により含まれます。"
    },
    {
      "indent": 0,
      "text": "9.9. OldHangulJamo (I)",
      "section_title": true,
      "ja": "9.9。 OldHangulJamo（I）"
    },
    {
      "indent": 3,
      "text": "This category is defined in Section 2.9 of [RFC5892] and is included by reference for use in PRECIS.",
      "ja": "このカテゴリには、[RFC5892]のセクション2.9で定義され、PRECISにおける使用のために参照により含まれます。"
    },
    {
      "indent": 0,
      "text": "9.10. Unassigned (J)",
      "section_title": true,
      "ja": "9.10。未割り当て（J）"
    },
    {
      "indent": 3,
      "text": "This category is defined in Section 2.10 of [RFC5892] and is included by reference for use in PRECIS.",
      "ja": "このカテゴリには、[RFC5892]のセクション2.10で定義され、PRECISにおける使用のために参照により含まれます。"
    },
    {
      "indent": 0,
      "text": "9.11. ASCII7 (K)",
      "section_title": true,
      "ja": "9時11分。 ASCII7（K）"
    },
    {
      "indent": 3,
      "text": "This PRECIS-specific category consists of all printable, non-space characters from the 7-bit ASCII range. By applying this category, the algorithm specified under Section 8 exempts these characters from other rules that might be applied during PRECIS processing, on the assumption that these code points are in such wide use that disallowing them would be counter-productive.",
      "ja": "このPRECIS-特定のカテゴリには7ビットのASCIIの範囲からすべての印刷可能な、非空白文字で構成されています。このカテゴリを適用することにより、第8節の下に指定されたアルゴリズムは、これらのコードポイントがそれらを禁止することは逆効果になるよう広く使用されていることを前提に、PRECIS処理中に適用される可能性のある他のルールからこれらの文字を免除します。"
    },
    {
      "indent": 3,
      "text": "K: cp is in {0021..007E}",
      "ja": "K：CPは{0021..007E}であります"
    },
    {
      "indent": 0,
      "text": "9.12. Controls (L)",
      "section_title": true,
      "ja": "9.12。コントロール（L）"
    },
    {
      "indent": 3,
      "text": "This PRECIS-specific category consists of all control characters.",
      "ja": "このPRECIS-特定のカテゴリには、すべての制御文字で構成されています。"
    },
    {
      "indent": 3,
      "text": "L: Control(cp) = True",
      "ja": "L：コントロール（CP）=真"
    },
    {
      "indent": 0,
      "text": "9.13. PrecisIgnorableProperties (M)",
      "section_title": true,
      "ja": "9.13。 PrecisIgnorableProperties（M）"
    },
    {
      "indent": 3,
      "text": "This PRECIS-specific category is used to group code points that are discouraged from use in PRECIS string classes.",
      "ja": "このPRECIS特有のカテゴリはPRECIS文字列クラスで使用することは推奨されているグループコード・ポイントに使用されています。"
    },
    {
      "indent": 3,
      "text": "M: Default_Ignorable_Code_Point(cp) = True or Noncharacter_Code_Point(cp) = True",
      "ja": "M：Default_Ignorable_Code_Point（CP）はTrueまたはNoncharacter_Code_Point（CP）= = TRUE"
    },
    {
      "indent": 3,
      "text": "The definition for Default_Ignorable_Code_Point can be found in the DerivedCoreProperties.txt file [DerivedCoreProperties].",
      "ja": "Default_Ignorable_Code_Pointの定義はDerivedCoreProperties.txtファイル[DerivedCoreProperties]で見つけることができます。"
    },
    {
      "indent": 0,
      "text": "9.14. Spaces (N)",
      "section_title": true,
      "ja": "9.14。スペース（N）"
    },
    {
      "indent": 3,
      "text": "This PRECIS-specific category is used to group code points that are space characters.",
      "ja": "このPRECIS特有のカテゴリが空白文字であるグループコード・ポイントに使用されています。"
    },
    {
      "indent": 3,
      "text": "N: General_Category(cp) is in {Zs}",
      "ja": "IN：一般部門（CP）{} Zsのです"
    },
    {
      "indent": 0,
      "text": "9.15. Symbols (O)",
      "section_title": true,
      "ja": "９。１５。 Ｓｙｍぼｌｓ （お）"
    },
    {
      "indent": 3,
      "text": "This PRECIS-specific category is used to group code points that are symbols.",
      "ja": "このPRECIS特有のカテゴリは記号であるグループコード・ポイントに使用されています。"
    },
    {
      "indent": 3,
      "text": "O: General_Category(cp) is in {Sm, Sc, Sk, So}",
      "ja": "O：General_Category（CP）は{だからのSm、Scを、Skと、}であります"
    },
    {
      "indent": 0,
      "text": "9.16. Punctuation (P)",
      "section_title": true,
      "ja": "9.16。句読点（P）"
    },
    {
      "indent": 3,
      "text": "This PRECIS-specific category is used to group code points that are punctuation characters.",
      "ja": "このPRECIS特有のカテゴリは、句読点文字であるグループコード・ポイントに使用されています。"
    },
    {
      "indent": 3,
      "text": "P: General_Category(cp) is in {Pc, Pd, Ps, Pe, Pi, Pf, Po}",
      "ja": "P：General_Category（CP）は、{PC、PDと、PS、PE、パイ、Pfを、ポー}であります"
    },
    {
      "indent": 0,
      "text": "9.17. HasCompat (Q)",
      "section_title": true,
      "ja": "9.17。 HasCompat（Q）"
    },
    {
      "indent": 3,
      "text": "This PRECIS-specific category is used to group code points that have compatibility equivalents as explained in the Unicode Standard (at the time of this writing, see Chapters 2 and 3 of [Unicode7.0]).",
      "ja": "このPRECIS固有のカテゴリは、Unicode標準（これを書いている時点で、[Unicode7.0]の第2章と第3章を参照）で説明したように、互換性の等価物を有するグループコードポイントに使用されます。"
    },
    {
      "indent": 3,
      "text": "Q: toNFKC(cp) != cp",
      "ja": "Q：！toNFKC（CP）= CP"
    },
    {
      "indent": 3,
      "text": "The toNFKC() operation returns the code point in normalization form KC. For more information, see Section 5 of Unicode Standard Annex #15 [UAX15].",
      "ja": "toNFKC（）オペレーションは、KC形態正規のコードポイントを返します。詳細については、Unicode標準の附属書＃15 [UAX15]のセクション5を参照してください。"
    },
    {
      "indent": 0,
      "text": "9.18. OtherLetterDigits (R)",
      "section_title": true,
      "ja": "9.18。 OtherLetterDigits（R）"
    },
    {
      "indent": 3,
      "text": "This PRECIS-specific category is used to group code points that are letters and digits other than the \"traditional\" letters and digits grouped under the LetterDigits (A) class (see Section 9.1).",
      "ja": "このPRECIS固有のカテゴリはLetterDigitsの下にグループ化「伝統的な」文字と数字以外の文字と数字であるグループコードポイントに使用される（A）クラス（セクション9.1を参照します）。"
    },
    {
      "indent": 3,
      "text": "R: General_Category(cp) is in {Lt, Nl, No, Me}",
      "ja": "R：General_Category（CP）はである{LT、N1を、いいえ、ミー}"
    },
    {
      "indent": 0,
      "text": "10. Guidelines for Designated Experts",
      "section_title": true,
      "ja": "指定専門家のための10のガイドライン"
    },
    {
      "indent": 3,
      "text": "Experience with internationalization in application protocols has shown that protocol designers and application developers usually do not understand the subtleties and tradeoffs involved with internationalization and that they need considerable guidance in making reasonable decisions with regard to the options before them.",
      "ja": "アプリケーションプロトコルにおける国際化の経験は、プロトコル設計者やアプリケーション開発者は通常、国際化に関わる機微とトレードオフを理解し、彼らは彼らの前にオプションに関しては、合理的な意思決定を行うにはかなりの指導が必要であることをしないことが示されました。"
    },
    {
      "indent": 3,
      "text": "Therefore:",
      "ja": "したがって："
    },
    {
      "indent": 3,
      "text": "o Protocol designers are strongly encouraged to question the assumption that they need to define new profiles, since existing profiles are designed for wide reuse (see Section 5 for further discussion).",
      "ja": "Oプロトコルの設計者が強く、既存のプロファイルが広いリユース（さらなる議論については、セクション5を参照）のために設計されているので、彼らは新しいプロファイルを定義する必要があることを前提に疑問を奨励されています。"
    },
    {
      "indent": 3,
      "text": "o Those who persist in defining new profiles are strongly encouraged to clearly explain a strong justification for doing so, and to publish a stable specification that provides all of the information described under Section 11.3.",
      "ja": "新しいプロファイルを定義するに固執する人oを強くはっきりとそのようにするための強力な正当性を説明するために、および11.3項で説明したすべての情報を提供して安定した仕様を公開することをお勧めします。"
    },
    {
      "indent": 3,
      "text": "o The designated experts for profile registration requests ought to seek answers to all of the questions provided under Section 11.3 and to encourage applicants to provide a stable specification documenting the profile (even though the registration policy for PRECIS profiles is Expert Review and a stable specification is not strictly required).",
      "ja": "プロファイル登録要求のための指定された専門家は、11.3節の下に設けられた質問のすべてに答えを求めるようにして、プロファイルを文書安定した仕様を提供するために、申請を奨励するべきO（PRECISプロファイルの登録ポリシーエキスパートレビューで、安定した仕様があるにもかかわらず、厳密には）必須ではありません。"
    },
    {
      "indent": 3,
      "text": "o Developers of applications that use PRECIS are strongly encouraged to apply the guidelines provided under Section 6 and to seek out the advice of the designated experts or other knowledgeable individuals in doing so.",
      "ja": "O PRECISを使用するアプリケーションの開発者は、強く第6項の下で提供されるガイドラインを適用し、そうすることで指定された専門家や他の有識者の助言を模索することをお勧めします。"
    },
    {
      "indent": 3,
      "text": "o All parties are strongly encouraged to help prevent the multiplication of profiles beyond necessity, as described under Section 5.1, and to use PRECIS in ways that will minimize user confusion and insecure application behavior.",
      "ja": "Oすべての当事者が強く、5.1節で説明したように、必要以上のプロファイルの増殖を防ぎ、ユーザーの混乱と不安定なアプリケーションの動作を最小化する方法でPRECISを使用することを手助けすることをお勧めします。"
    },
    {
      "indent": 3,
      "text": "Internationalization can be difficult and contentious; designated experts, profile registrants, and application developers are strongly encouraged to work together in a spirit of good faith and mutual understanding to achieve rough consensus on profile registration requests and the use of PRECIS in particular applications. They are also encouraged to bring additional expertise into the discussion if that would be helpful in adding perspective or otherwise resolving issues.",
      "ja": "国際化は困難と論争することができます。指定された専門家は、プロファイルの登録者、およびアプリケーション開発者は強く、プロファイル登録要求と、特定のアプリケーションでPRECISの使用に関するラフコンセンサスを達成するために誠意と相互理解の精神で一緒に作業することが奨励されています。彼らはまた、それは視点を追加したり、それ以外の問題を解決するのに役立つだろう場合の議論の中に追加の専門知識を持って来ることをお勧めします。"
    },
    {
      "indent": 0,
      "text": "11. IANA Considerations",
      "section_title": true,
      "ja": "11. IANAの考慮事項"
    },
    {
      "indent": 0,
      "text": "11.1. PRECIS Derived Property Value Registry",
      "section_title": true,
      "ja": "11.1。プロパティ値レジストリ派生PRECIS"
    },
    {
      "indent": 3,
      "text": "IANA has created and now maintains the \"PRECIS Derived Property Value\" registry that records the derived properties for the versions of Unicode that are released after (and including) version 7.0. The derived property value is to be calculated in cooperation with a designated expert [RFC5226] according to the rules specified under Sections 8 and 9.",
      "ja": "IANAが作成され、今バージョン7.0を（を含む）の後にリリースされたUnicodeのバージョンの派生プロパティを記録した「PRECIS派生プロパティ値」レジストリを維持しています。誘導されたプロパティ値は、セクション8と9の下に指定された規則に従って指定された専門家[RFC5226]と協働して計算されます。"
    },
    {
      "indent": 3,
      "text": "The IESG is to be notified if backward-incompatible changes to the table of derived properties are discovered or if other problems arise during the process of creating the table of derived property values or during expert review. Changes to the rules defined under Sections 8 and 9 require IETF Review.",
      "ja": "IESGは、派生プロパティのテーブルへの後方互換性のない変更が発見された場合に通知されるか、他の問題が派生プロパティ値のや専門家の審査中にテーブルを作成する過程で発生した場合。セクション8と9の下で定義されたルールへの変更は、IETFレビューが必要です。"
    },
    {
      "indent": 0,
      "text": "11.2. PRECIS Base Classes Registry",
      "section_title": true,
      "ja": "11.2。 PRECIS基底クラスレジストリ"
    },
    {
      "indent": 3,
      "text": "IANA has created the \"PRECIS Base Classes\" registry. In accordance with [RFC5226], the registration policy is \"RFC Required\".",
      "ja": "IANAは「PRECIS基本クラス」のレジストリを作成しました。 [RFC5226]に従って、登録ポリシーは、「RFC必要」です。"
    },
    {
      "indent": 3,
      "text": "The registration template is as follows:",
      "ja": "次のように登録テンプレートは以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "Base Class: [the name of the PRECIS string class]",
      "ja": "基本クラス：[PRECIS文字列クラスの名前]"
    },
    {
      "indent": 3,
      "text": "Description: [a brief description of the PRECIS string class and its intended use, e.g., \"A sequence of letters, numbers, and symbols that is used to identify or address a network entity.\"]",
      "ja": "説明：[PRECISストリングクラスの簡単な説明とその使用目的、例えば、「文字、数字、およびネットワーク・エンティティを識別またはアドレス指定するために使用されるシンボルのシーケンス。」]"
    },
    {
      "indent": 3,
      "text": "Specification: [the RFC number]",
      "ja": "仕様：[RFC番号]"
    },
    {
      "indent": 3,
      "text": "The initial registrations are as follows:",
      "ja": "次のように初期登録は以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "Base Class: FreeformClass. Description: A sequence of letters, numbers, symbols, spaces, and other code points that is used for free-form strings. Specification: Section 4.3 of RFC 7564.",
      "ja": "基本クラス：FreeformClass。説明：自由形式の文字列に使用される文字、数字、記号、スペース、および他のコード・ポイントの配列。仕様：RFC 7564のセクション4.3。"
    },
    {
      "indent": 3,
      "text": "Base Class: IdentifierClass. Description: A sequence of letters, numbers, and symbols that is used to identify or address a network entity. Specification: Section 4.2 of RFC 7564.",
      "ja": "基本クラス：IdentifierClass。説明：ネットワークエンティティを識別またはアドレス指定するために使用される文字、数字、記号のシーケンス。仕様：RFC 7564のセクション4.2。"
    },
    {
      "indent": 0,
      "text": "11.3. PRECIS Profiles Registry",
      "section_title": true,
      "ja": "11.3。 JUSTプロファイルのレジストリ"
    },
    {
      "indent": 3,
      "text": "IANA has created the \"PRECIS Profiles\" registry to identify profiles that use the PRECIS string classes. In accordance with [RFC5226], the registration policy is \"Expert Review\". This policy was chosen in order to ease the burden of registration while ensuring that \"customers\" of PRECIS receive appropriate guidance regarding the sometimes complex and subtle internationalization issues related to profiles of PRECIS string classes.",
      "ja": "IANAは、PRECIS文字列クラスを使用するプロファイルを識別するために、「PRECISプロファイル」のレジストリを作成しました。 [RFC5226]に従って、登録ポリシーは、「エキスパートレビュー」です。このポリシーは、PRECISの「顧客が」PRECIS文字列クラスのプロファイルに関連し、時には複雑かつ微妙な国際問題に関する適切な指導を受けることを確保しながら、登録の負担を軽減するために選ばれました。"
    },
    {
      "indent": 3,
      "text": "The registration template is as follows:",
      "ja": "次のように登録テンプレートは以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "Name: [the name of the profile]",
      "ja": "名前：[プロファイル名]"
    },
    {
      "indent": 3,
      "text": "Base Class: [which PRECIS string class is being profiled]",
      "ja": "基本クラス：[PRECISの文字列クラスがプロファイルされています]"
    },
    {
      "indent": 3,
      "text": "Applicability: [the specific protocol elements to which this profile applies, e.g., \"Localparts in XMPP addresses.\"]",
      "ja": "適用：このプロファイルが適用される特定のプロトコル要素、例えば、「XMPPアドレスにおけるローカル部分。」]"
    },
    {
      "indent": 3,
      "text": "Replaces: [the Stringprep profile that this PRECIS profile replaces, if any]",
      "ja": "置き換え：[このPRECISプロファイルは置き換え文字列準備プロフィール、いかなる場合]"
    },
    {
      "indent": 3,
      "text": "Width Mapping Rule: [the behavioral rule for handling of width, e.g., \"Map fullwidth and halfwidth characters to their compatibility variants.\"]",
      "ja": "幅のマッピングルール：[幅の取扱いのための行動ルールは、例えば、「彼らの互換性の変種に全角と半角文字をマップします。」]"
    },
    {
      "indent": 3,
      "text": "Additional Mapping Rule: [any additional mappings that are required or recommended, e.g., \"Map non-ASCII space characters to ASCII space.\"]",
      "ja": "追加のマッピングルール：[必須または推奨されている任意の追加のマッピングは、例えば、「ASCII空間に非ASCIIスペース文字をマップします。」]"
    },
    {
      "indent": 3,
      "text": "Case Mapping Rule: [the behavioral rule for handling of case, e.g., \"Unicode Default Case Folding\"]",
      "ja": "ケースマッピングルール：[例処理のための行動のルール、例えば、「Unicodeのデフォルトケース折りたたみ」]"
    },
    {
      "indent": 3,
      "text": "Normalization Rule: [which Unicode normalization form is applied, e.g., \"NFC\"]",
      "ja": "正規化ルール：[Unicodeの正規化形態が適用され、例えば、「NFC」]"
    },
    {
      "indent": 3,
      "text": "Directionality Rule: [the behavioral rule for handling of right-to-left code points, e.g., \"The 'Bidi Rule' defined in RFC 5893 applies.\"]",
      "ja": "指向ルール：[右から左へのコードポイントの処理のための行動ルール、例えば、「RFC 5893で定義された 『双方向ルール』が適用されます。」]"
    },
    {
      "indent": 3,
      "text": "Enforcement: [which entities enforce the rules, and when that enforcement occurs during protocol operations]",
      "ja": "施行：[どのエンティティがルールを適用し、その施行は、プロトコル動作中に発生した場合]"
    },
    {
      "indent": 3,
      "text": "Specification: [a pointer to relevant documentation, such as an RFC or Internet-Draft]",
      "ja": "仕様：[関連ドキュメントへのポインタ、例えばRFCまたはインターネットドラフトとして]"
    },
    {
      "indent": 3,
      "text": "In order to request a review, the registrant shall send a completed template to the precis@ietf.org list or its designated successor.",
      "ja": "審査を要求するためには、登録者はprecis@ietf.orgリストまたはその指定後継に完成したテンプレートを送信しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Factors to focus on while defining profiles and reviewing profile registrations include the following:",
      "ja": "プロファイルを定義し、プロファイル登録を見直しながらに集中する要因には次のものがあります。"
    },
    {
      "indent": 3,
      "text": "o Would an existing PRECIS string class or profile solve the problem? If not, why not? (See Section 5.1 for related considerations.)",
      "ja": "O既存のPRECISの文字列クラスや問題を解決するためのプロファイルですか？そうでない場合は、なぜ？ （関連考慮事項については、5.1項を参照してください。）"
    },
    {
      "indent": 3,
      "text": "o Is the problem being addressed by this profile well defined?",
      "ja": "Oの問題が明確に定義され、このプロファイルによって対処されていますか？"
    },
    {
      "indent": 3,
      "text": "o Does the specification define what kinds of applications are involved and the protocol elements to which this profile applies?",
      "ja": "O仕様では、このプロファイルが適用される関与しているアプリケーションの種類をプロトコル要素を定義していますか？"
    },
    {
      "indent": 3,
      "text": "o Is the profile clearly defined?",
      "ja": "oは明確に定義されたプロファイルですか？"
    },
    {
      "indent": 3,
      "text": "o Is the profile based on an appropriate dividing line between user interface (culture, context, intent, locale, device limitations, etc.) and the use of conformant strings in protocol elements?",
      "ja": "Oは、ユーザインタフェース（培養、コンテキスト、意図、ロケール、デバイス制限、等）およびプロトコル要素に準拠した文字列の使用の間に適切な分割線に基づいてプロファイルですか？"
    },
    {
      "indent": 3,
      "text": "o Are the width mapping, case mapping, additional mappings, normalization, and directionality rules appropriate for the intended use?",
      "ja": "O幅マッピング、ケースマッピング、追加のマッピング、正規化されており、方向性は、意図された使用のために適切なルール？"
    },
    {
      "indent": 3,
      "text": "o Does the profile explain which entities enforce the rules, and when such enforcement occurs during protocol operations?",
      "ja": "Oプロファイルは、どのエンティティがルールを強制説明し、そのような強制はプロトコルの操作中に発生したときにしていますか？"
    },
    {
      "indent": 3,
      "text": "o Does the profile reduce the degree to which human users could be surprised or confused by application behavior (the \"Principle of Least Astonishment\")?",
      "ja": "Oプロファイルは、人間のユーザは、アプリケーションの動作（「驚き最小の原則」）に驚いたり混同される可能性の度合いを軽減していますか？"
    },
    {
      "indent": 3,
      "text": "o Does the profile introduce any new security concerns such as those described under Section 12 of this document (e.g., false positives for authentication or authorization)?",
      "ja": "Oプロファイルは、このドキュメントのセクション12の下に記載されたもののような新たなセキュリティ上の問題（認証や認可のために、例えば、偽陽性）を導入していますか？"
    },
    {
      "indent": 0,
      "text": "12. Security Considerations",
      "section_title": true,
      "ja": "12.セキュリティの考慮事項"
    },
    {
      "indent": 0,
      "text": "12.1. General Issues",
      "section_title": true,
      "ja": "12.1。一般的な問題"
    },
    {
      "indent": 3,
      "text": "If input strings that appear \"the same\" to users are programmatically considered to be distinct in different systems, or if input strings that appear distinct to users are programmatically considered to be \"the same\" in different systems, then users can be confused. Such confusion can have security implications, such as the false positives and false negatives discussed in [RFC6943]. One starting goal of work on the PRECIS framework was to limit the number of times that users are confused (consistent with the \"Principle of Least Astonishment\"). Unfortunately, this goal has been difficult to achieve given the large number of application protocols already in existence. Despite these difficulties, profiles should not be multiplied beyond necessity (see Section 5.1). In particular, application protocol designers should think long and hard before defining a new profile instead of using one that has already been defined, and if they decide to define a new profile then they should clearly explain their reasons for doing so.",
      "ja": "ユーザーに「同じ」が表示され、入力文字列がプログラムで異なるシステムで別個のものとみなされる場合は、ユーザーに明確な表示される入力文字列をプログラムであるとみなされた場合、または「同じ」異なるシステムでは、ユーザーが混乱することができます。そのような混乱は、[RFC6943]で説明した偽陽性および偽陰性のようなセキュリティ上の影響を有することができます。 PRECISフレームワーク上の作業の一つの出発の目標は、（「驚き最小の原則」と一致）、ユーザーが混乱していることを回数を制限することでした。残念ながら、この目標はすでに存在してアプリケーションプロトコルの多数を与え達成することは困難でした。これらの困難にもかかわらず、プロファイルは必要以上に乗じるべきではありません（セクション5.1を参照してください）。特に、アプリケーションプロトコルの設計者は、新しいプロファイルを定義する代わりに、すでに定義されているものを使用する前に、長いとハード考えなければならない、と彼らは新しいプロファイルを定義することを決定したならば、彼らは明らかにそうするために彼らの理由を説明しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The security of applications that use this framework can depend in part on the proper preparation, enforcement, and comparison of internationalized strings. For example, such strings can be used to make authentication and authorization decisions, and the security of an application could be compromised if an entity providing a given string is connected to the wrong account or online resource based on different interpretations of the string (again, see [RFC6943]).",
      "ja": "このフレームワークを使用するアプリケーションのセキュリティは適切な準備、実施、および国際化された文字列の比較に部分的に依存することができます。例えば、再び（このような文字列は、認証と認可の決定を行うために使用することができ、与えられた文字列を提供するエンティティは、文字列の異なる解釈に基づいて、間違ったアカウントまたはオンラインリソースに接続している場合、アプリケーションのセキュリティが危険にさらされる可能性があり、 [RFC6943]）を参照してください。"
    },
    {
      "indent": 3,
      "text": "Specifications of application protocols that use this framework are strongly encouraged to describe how internationalized strings are used in the protocol, including the security implications of any false positives and false negatives that might result from various enforcement and comparison operations. For some helpful guidelines, refer to [RFC6943], [RFC5890], [UTR36], and [UTS39].",
      "ja": "このフレームワークを使用するアプリケーションプロトコルの仕様が強く、様々な執行と比較操作から生じる可能性のある偽陽性と偽陰性のセキュリティへの影響を含め、プロトコルで使用されているか、国際化文字列を記述するために奨励されています。いくつかの有用なガイドラインについては、[UTS39]と、[RFC6943]、[RFC5890]、[UTR36]を参照してください。"
    },
    {
      "indent": 0,
      "text": "12.2. Use of the IdentifierClass",
      "section_title": true,
      "ja": "12.2。 IdentifierClassの使用"
    },
    {
      "indent": 3,
      "text": "Strings that conform to the IdentifierClass and any profile thereof are intended to be relatively safe for use in a broad range of applications, primarily because they include only letters, digits, and \"grandfathered\" non-space characters from the ASCII range; thus, they exclude spaces, characters with compatibility equivalents, and almost all symbols and punctuation marks. However, because such strings can still include so-called confusable characters (see Section 12.5), protocol designers and implementers are encouraged to pay close attention to the security considerations described elsewhere in this document.",
      "ja": "IdentifierClassとその彼らが唯一の文字、数字、およびASCIIの範囲から「適用除外」非空白文字が含まれる主な理由は、幅広いアプリケーションで使用するために、比較的安全であることが意図されている任意のプロファイルに準拠した文字列。このように、彼らはスペース、互換性の同等物を持つ文字、およびほとんどすべてのシンボルと句読点を除外する。このような文字列はまだ、いわゆる混同しやすい文字が（項12.5を参照）を含めることができますので、しかし、プロトコル設計者と実装者は、他の場所で、この文書で説明したセキュリティ上の考慮事項に細心の注意を払うことをお勧めします。"
    },
    {
      "indent": 0,
      "text": "12.3. Use of the FreeformClass",
      "section_title": true,
      "ja": "12.3。 FreeformClassの使用"
    },
    {
      "indent": 3,
      "text": "Strings that conform to the FreeformClass and many profiles thereof can include virtually any Unicode character. This makes the FreeformClass quite expressive, but also problematic from the perspective of possible user confusion. Protocol designers are hereby warned that the FreeformClass contains code points they might not understand, and are encouraged to profile the IdentifierClass wherever feasible; however, if an application protocol requires more code points than are allowed by the IdentifierClass, protocol designers are encouraged to define a profile of the FreeformClass that restricts the allowable code points as tightly as possible.",
      "ja": "FreeformClassと多くのプロファイルに準拠した文字列は、そのほとんどすべてのUnicode文字を含めることができます。これは、可能なユーザの混乱の観点からFreeformClassは非常に表情豊かでなく、問題のあるものにします。プロトコルの設計者は、ここにFreeformClassは、彼らが理解していない可能性がありますコードポイントが含まれていることを警告している、とどこ可能IdentifierClassをプロファイリングすることをお勧めします。アプリケーションプロトコルはIdentifierClassによって許可されているよりも多くのコードポイントを必要とする場合は、プロトコル設計者は、可能な限り密に許容コードポイントを制限FreeformClassのプロファイルを定義することが奨励されます。"
    },
    {
      "indent": 3,
      "text": "(The PRECIS Working Group considered the option of allowing \"superclasses\" as well as profiles of PRECIS string classes, but decided against allowing superclasses to reduce the likelihood of security and interoperability problems.)",
      "ja": "（PRECISワーキンググループは、「スーパークラス」だけでなく、PRECISの文字列クラスのプロファイルを可能にするオプションが考えられますが、スーパークラスは、セキュリティと相互運用性の問題の可能性を低減することが可能反対を決めました。）"
    },
    {
      "indent": 0,
      "text": "12.4. Local Character Set Issues",
      "section_title": true,
      "ja": "12.4。ローカル文字セットの問題"
    },
    {
      "indent": 3,
      "text": "When systems use local character sets other than ASCII and Unicode, this specification leaves the problem of converting between the local character set and Unicode up to the application or local system. If different applications (or different versions of one application) implement different rules for conversions among coded character sets, they could interpret the same name differently and contact different application servers or other network entities. This problem is not solved by security protocols, such as Transport Layer Security (TLS) [RFC5246] and the Simple Authentication and Security Layer (SASL) [RFC4422], that do not take local character sets into account.",
      "ja": "システムは、ローカルの文字はASCIIとUnicode以外の設定を使用すると、この仕様では、アプリケーションまたはローカルシステムまでのローカル文字セットとUnicode間の変換の問題を残しています。異なるアプリケーション（または1つのアプリケーションの異なるバージョン）がコード化文字セット間の変換のための異なるルールを実装する場合、それらは別々に同じ名前を解釈し、異なるアプリケーションサーバまたは他のネットワークエンティティに連絡ができます。この問題は、そのようなトランスポート層セキュリティ（TLS）[RFC5246]と、アカウントにローカルの文字セットを取らない簡易認証セキュリティー層（SASL）[RFC4422]、などのセキュリティプロトコルによって解決されていません。"
    },
    {
      "indent": 0,
      "text": "12.5. Visually Similar Characters",
      "section_title": true,
      "ja": "12.5。視覚的に類似文字"
    },
    {
      "indent": 3,
      "text": "Some characters are visually similar and thus can cause confusion among humans. Such characters are often called \"confusable characters\" or \"confusables\".",
      "ja": "一部の文字は、視覚的に類似しているため、ヒトの間に混乱を引き起こす可能性があります。このような文字は、多くの場合、「混同しやすい文字」または「confusables」と呼ばれています。"
    },
    {
      "indent": 3,
      "text": "The problem of confusable characters is not necessarily caused by the use of Unicode code points outside the ASCII range. For example, in some presentations and to some individuals the string \"ju1iet\" (spelled with DIGIT ONE, U+0031, as the third character) might appear to be the same as \"juliet\" (spelled with LATIN SMALL LETTER L, U+006C), especially on casual visual inspection. This phenomenon is sometimes called \"typejacking\".",
      "ja": "紛らわしい文字の問題は、必ずしもASCII範囲外のUnicodeコードポイントを使用することによって引き起こされていません。たとえば、文字列「ju1iet」いくつかのプレゼンテーションで、一部の個人に（DIGIT ONEで綴られ、U + 0031は、3番目の文字として）「ジュリエット」と同じように見えるかもしれません（LATIN SMALL LETTER L、U +と綴ら特にカジュアルな目視検査で006C）、。この現象は、時々「typejacking」と呼ばれています。"
    },
    {
      "indent": 3,
      "text": "However, the problem is made more serious by introducing the full range of Unicode code points into protocol strings. For example, the characters U+13DA U+13A2 U+13B5 U+13AC U+13A2 U+13AC U+13D2 from the Cherokee block look similar to the ASCII characters \"STPETER\" as they might appear when presented using a \"creative\" font family.",
      "ja": "しかし、問題は、プロトコル文字列にUnicodeコードポイントの全範囲を導入することにより、より深刻なります。提示されたとき、彼らは \"創造\" を使用して表示されることがありますたとえば、チェロキーブロックから文字U + 13DA U + 13A2 U + 13B5 U + 13AC U + 13A2 U + 13AC U + 13D2は、 \"STPETER\" ASCII文字に似てフォントファミリー。"
    },
    {
      "indent": 3,
      "text": "In some examples of confusable characters, it is unlikely that the average human could tell the difference between the real string and the fake string. (Indeed, there is no programmatic way to distinguish with full certainty which is the fake string and which is the real string; in some contexts, the string formed of Cherokee characters might be the real string and the string formed of ASCII characters might be the fake string.) Because PRECIS-compliant strings can contain almost any properly encoded Unicode code point, it can be relatively easy to fake or mimic some strings in systems that use the PRECIS framework. The fact that some strings are easily confused introduces security vulnerabilities of the kind that have also plagued the World Wide Web, specifically the phenomenon known as phishing.",
      "ja": "紛らわしい文字のいくつかの例では、平均的な人間は、本当の文字列と偽物の文字列の違いを見分けることができることはほとんどありません。 （実際に、偽の文字列で、これが本当の文字列で、フル確実に区別するプログラム的な方法はありません。一部のコンテキストでは、チェロキー文字で形成された文字列は、実際の文字列であるかもしれないし、ASCII文字で形成された文字列があるかもしれません偽の文字列。）PRECIS準拠の文字列は、ほぼすべて適切にエンコードされたUnicodeコードポイントを含めることができるため、それは偽物が比較的容易であるか、PRECISのフレームワークを使用するシステムでは、いくつかの文字列を模倣することができます。いくつかの文字列が簡単に混乱しているという事実も、ワールド・ワイド・ウェブ、フィッシングとして知られている、具体的現象を悩ませてきた種類のセキュリティ上の脆弱性を紹介します。"
    },
    {
      "indent": 3,
      "text": "Despite the fact that some specific suggestions about identification and handling of confusable characters appear in the Unicode Security Considerations [UTR36] and the Unicode Security Mechanisms [UTS39], it is also true (as noted in [RFC5890]) that \"there are no comprehensive technical solutions to the problems of confusable characters.\" Because it is impossible to map visually similar characters without a great deal of context (such as knowing the font families used), the PRECIS framework does nothing to map similar-looking characters together, nor does it prohibit some characters because they look like others.",
      "ja": "紛らわしい文字の識別および取り扱いに関するいくつかの具体的な提案はUnicodeのセキュリティの考慮事項[UTR36]およびUnicodeのセキュリティメカニズム[UTS39]に表示されているという事実にもかかわらず、それは、包括的ながない」という（[RFC5890]で述べたように）のも事実であります紛らわしい文字の問題への技術的ソリューションを提供します。」それは（そのように使用するフォントファミリを知っているような）コンテキストの多大せずに視覚的に類似の文字をマッピングすることは不可能であるため、PRECISフレームワークは、一緒に似て見える文字をマッピングするための何もしない、また、彼らは他の人のように見えるので、それはいくつかの文字を禁止ありません。"
    },
    {
      "indent": 3,
      "text": "Nevertheless, specifications for application protocols that use this framework are strongly encouraged to describe how confusable characters can be abused to compromise the security of systems that use the protocol in question, along with any protocol-specific suggestions for overcoming those threats. In particular, software implementations and service deployments that use PRECIS-based technologies are strongly encouraged to define and implement consistent policies regarding the registration, storage, and presentation of visually similar characters. The following recommendations are appropriate:",
      "ja": "それにもかかわらず、このフレームワークを使用するアプリケーションプロトコルの仕様は強く、それらの脅威を克服するためのプロトコル固有の提案とともに、問題のプロトコルを使用するシステムのセキュリティを侵害に悪用する方法を混同しやすい文字を説明することをお勧めします。特に、PRECISベースのテクノロジを使用するソフトウェアの実装とサービスの展開を強く視覚的に類似文字の登録、保管、およびプレゼンテーションに関する一貫したポリシーを定義し、実装することが奨励されます。以下の推奨が適切です："
    },
    {
      "indent": 3,
      "text": "1. An application service SHOULD define a policy that specifies the scripts or blocks of characters that the service will allow to be registered (e.g., in an account name) or stored (e.g., in a filename). Such a policy SHOULD be informed by the languages and scripts that are used to write registered account names; in particular, to reduce confusion, the service SHOULD forbid registration or storage of strings that contain characters from more than one script and SHOULD restrict registrations to characters drawn from a very small number of scripts (e.g., scripts that are well understood by the administrators of the service, to improve manageability).",
      "ja": "1.アプリケーション・サービスは、サービス（例えば、アカウント名）が登録または（例えば、ファイル名に）格納することを可能にするスクリプトまたは文字のブロックを指定するポリシーを定義する必要があります。このような政策は、登録されたアカウント名を記述するために使用されている言語やスクリプトによって知らされるべきです。具体的には、混乱を減らすために、サービスは、複数のスクリプトからの文字が含まれているとスクリプト（井戸の管理者が理解されているなど、スクリプトの非常に小さな数から引かれた文字への登録を制限する必要があり、文字列の登録や保管を禁止すべきです管理性を向上させるためのサービス、）。"
    },
    {
      "indent": 3,
      "text": "2. User-oriented application software SHOULD define a policy that specifies how internationalized strings will be presented to a human user. Because every human user of such software has a preferred language or a small set of preferred languages, the software SHOULD gather that information either explicitly from the user or implicitly via the operating system of the user's device. Furthermore, because most languages are typically represented by a single script or a small set of scripts, and because most scripts are typically contained in one or more blocks of characters, the software SHOULD warn the user when presenting a string that mixes characters from more than one script or block, or that uses characters outside the normal range of the user's preferred language(s). (Such a recommendation is not intended to discourage communication across different communities of language users; instead, it recognizes the existence of such communities and encourages due caution when presenting unfamiliar scripts or characters to human users.)",
      "ja": "2.ユーザー指向のアプリケーションソフトウェアは、人間のユーザに提示する方法を国際化された文字列を指定するポリシーを定義する必要があります。このようなソフトウェアのすべての人間のユーザが好みの言語や優先言語の小さなセットを持っているので、ソフトウェアは、ユーザーのデバイスのオペレーティングシステムを介して明示的にユーザーからまたは暗黙的にその情報を収集する必要があります。ほとんどの言語は、通常、単一のスクリプトまたはスクリプトの小さなセットで表現されているので、ほとんどのスクリプトは、通常の文字の一個の以上のブロックに含まれているため、より多くの文字をミックスした文字列を提示するときさらに、ソフトウェアは、ユーザーに警告すべきです1つのスクリプトまたはブロック、またはそれは、ユーザの好みの言語（複数可）の正常範囲外の文字を使用します。 （このような推奨は、言語のユーザーの異なるコミュニティを横切って通信を阻止するように意図されるのではなく、そのようなコミュニティの存在を認識して人間のユーザになじみのないスクリプトや文字を提示するときにより注意を促します。）"
    },
    {
      "indent": 3,
      "text": "The challenges inherent in supporting the full range of Unicode code points have in the past led some to hope for a way to programmatically negotiate more restrictive ranges based on locale, script, or other relevant factors; to tag the locale associated with a particular string; etc. As a general-purpose internationalization technology, the PRECIS framework does not include such mechanisms.",
      "ja": "Unicodeコードポイントの全範囲をサポートするに固有の課題は、過去にプログラムでロケール、スクリプト、またはその他の関連する要因に基づいて、より制限の範囲を交渉する方法を期待するためにいくつかを導いてきました。特定の文字列に関連付けられたロケールをタグ付けします。等の汎用国際化技術として、PRECISフレームワークは、このような機構を含んでいません。"
    },
    {
      "indent": 0,
      "text": "12.6. Security of Passwords",
      "section_title": true,
      "ja": "12.6。パスワードのセキュリティ"
    },
    {
      "indent": 3,
      "text": "Two goals of passwords are to maximize the amount of entropy and to minimize the potential for false positives. These goals can be achieved in part by allowing a wide range of code points and by ensuring that passwords are handled in such a way that code points are not compared aggressively. Therefore, it is NOT RECOMMENDED for application protocols to profile the FreeformClass for use in passwords in a way that removes entire categories (e.g., by disallowing symbols or punctuation). Furthermore, it is NOT RECOMMENDED for application protocols to map uppercase and titlecase code points to their lowercase equivalents in such strings; instead, it is RECOMMENDED to preserve the case of all code points contained in such strings and to compare them in a case-sensitive manner.",
      "ja": "パスワードの二つの目標は、エントロピーの量を最大化するために、偽陽性の可能性を最小限に抑えることです。これらの目標は、コードポイントの広い範囲を可能にすることによって、およびパスワードがコードポイントを積極的に比較されないような方法で処理されることを保証することによって部分的に達成することができます。したがって、（例えば、記号や句読点を禁止することにより）全カテゴリを除去する方法でパスワードに使用するためのFreeformClassをプロファイルするアプリケーションプロトコルのために推奨されません。さらに、アプリケーションプロトコルは、このような文字列での小文字の等価物に大文字とタイトルケースコードポイントをマップするには推奨されません。代わりに、そのような文字列に含まれる全てのコードポイントのケースを保存すると、大文字と小文字を区別した方法でそれらを比較することをお勧めします。"
    },
    {
      "indent": 3,
      "text": "That said, software implementers need to be aware that there exist tradeoffs between entropy and usability. For example, allowing a user to establish a password containing \"uncommon\" code points might make it difficult for the user to access a service when using an unfamiliar or constrained input device.",
      "ja": "これは、ソフトウェアの実装は、エントロピーと使いやすさの間にトレードオフが存在することを認識する必要があり、と述べました。例えば、ユーザが「珍しい」コードポイントを含むパスワードを設定できるようにすることが困難不慣れや制約の入力デバイスを使用している場合、ユーザーがサービスにアクセスできるようにするためかもしれません。"
    },
    {
      "indent": 3,
      "text": "Some application protocols use passwords directly, whereas others reuse technologies that themselves process passwords (one example of such a technology is the Simple Authentication and Security Layer [RFC4422]). Moreover, passwords are often carried by a sequence of protocols with backend authentication systems or data storage systems such as RADIUS [RFC2865] and the Lightweight Directory Access Protocol (LDAP) [RFC4510]. Developers of application protocols are encouraged to look into reusing these profiles instead of defining new ones, so that end-user expectations about passwords are consistent no matter which application protocol is used.",
      "ja": "他の人が自分自身は（そのような技術の一例は、簡易認証セキュリティー層[RFC4422]である）パスワードを処理する技術を再利用するのに対し、いくつかのアプリケーションプロトコルは、直接パスワードを使用しています。また、パスワードは、多くの場合、RADIUS [RFC2865]及びライトウェイトディレクトリアクセスプロトコル（LDAP）[RFC4510]としてバックエンド認証システムやデータ記憶システムとのプロトコルのシーケンスによって運ばれます。アプリケーションプロトコルの開発者は、パスワードに関するエンドユーザーの期待は関係なく使用されるアプリケーションプロトコル一致していないように、これらのプロファイルを再利用する代わりに、新しいものを定義するに見ることが奨励されています。"
    },
    {
      "indent": 3,
      "text": "In protocols that provide passwords as input to a cryptographic algorithm such as a hash function, the client will need to perform proper preparation of the password before applying the algorithm, since the password is not available to the server in plaintext form.",
      "ja": "パスワードがプレーンテキスト形式でサーバに利用できないので、このようなハッシュ関数などの暗号化アルゴリズムへの入力としてパスワードを提供したプロトコルでは、クライアントは、アルゴリズムを適用する前に、パスワードの適切な準備を実行する必要があります。"
    },
    {
      "indent": 3,
      "text": "Further discussion of password handling can be found in [PRECIS-Users-Pwds].",
      "ja": "パスワード処理のさらなる議論は[PRECIS-ユーザー-障害者]で見つけることができます。"
    },
    {
      "indent": 0,
      "text": "13. Interoperability Considerations",
      "section_title": true,
      "ja": "13.相互運用性に関する注意事項"
    },
    {
      "indent": 0,
      "text": "13.1. Encoding",
      "section_title": true,
      "ja": "13.1。エンコーディング"
    },
    {
      "indent": 3,
      "text": "Although strings that are consumed in PRECIS-based application protocols are often encoded using UTF-8 [RFC3629], the exact encoding is a matter for the application protocol that uses PRECIS, not for the PRECIS framework.",
      "ja": "PRECISベースのアプリケーションプロトコルで消費されている文字列は、多くの場合、UTF-8 [RFC3629]を使用してエンコードされているが、正確な符号化はしないPRECISフレームワークのため、PRECISを使用するアプリケーションプロトコルの問題です。"
    },
    {
      "indent": 0,
      "text": "13.2. Character Sets",
      "section_title": true,
      "ja": "13.2。文字セット"
    },
    {
      "indent": 3,
      "text": "It is known that some existing systems are unable to support the full Unicode character set, or even any characters outside the ASCII range. If two (or more) applications need to interoperate when exchanging data (e.g., for the purpose of authenticating a username or password), they will naturally need to have in common at least one coded character set (as defined by [RFC6365]). Establishing such a baseline is a matter for the application protocol that uses PRECIS, not for the PRECIS framework.",
      "ja": "いくつかの既存のシステムは、完全なUnicode文字セット、またはASCIIの範囲外であっても任意の文字をサポートすることができないことが知られています。データを交換するときに、2つ（またはそれ以上）のアプリケーションが相互運用する必要がある場合（例えば、ユーザ名またはパスワードを認証するために）、それらが自然に共通の少なくとも1つの符号化された文字セットを持っている必要があります（によって定義されるように[RFC6365]）。そのようなベースラインを確立することはないPRECISフレームワークのため、PRECISを使用するアプリケーションプロトコルの問題です。"
    },
    {
      "indent": 0,
      "text": "13.3. Unicode Versions",
      "section_title": true,
      "ja": "13.3。 Unicodeのバージョン"
    },
    {
      "indent": 3,
      "text": "Changes to the properties of Unicode code points can occur as the Unicode Standard is modified from time to time. For example, three code points underwent changes in their GeneralCategory between Unicode 5.2 (current at the time IDNA2008 was originally published) and Unicode 6.0, as described in [RFC6452]. Implementers might need to be aware that the treatment of these characters differs depending on which version of Unicode is available on the system that is using IDNA2008 or PRECIS. Other such differences might arise between the version of Unicode current at the time of this writing (7.0) and future versions.",
      "ja": "ユニコード規格は随時変更されるようにUnicodeコードポイントの特性に変化が生じる可能性があります。 [RFC6452]に記載されているように、例えば、3つのコード・ポイントは、ユニコード5.2（時間IDNA2008の電流が最初に公開された）とUnicode 6.0の間のそれらのGeneralCategoryの変化を受けました。実装者は、これらの文字の治療は、Unicodeのバージョンに応じて異なることに注意する必要があるかもしれませんIDNA2008またはPRECISを使用しているシステム上で使用可能です。他のそのような違いは、この書き込み（7.0）および将来のバージョンの時にUnicodeの現在のバージョンとの間で発生する可能性があります。"
    },
    {
      "indent": 0,
      "text": "13.4. Potential Changes to Handling of Certain Unicode Code Points",
      "section_title": true,
      "ja": "13.4。特定のUnicodeコードポイントの取扱いに電位変化"
    },
    {
      "indent": 3,
      "text": "As part of the review of Unicode 7.0 for IDNA, a question was raised about a newly added code point that led to a re-analysis of the normalization rules used by IDNA and inherited by this document (Section 5.2.4). Some of the general issues are described in [IAB-Statement] and pursued in more detail in [IDNA-Unicode].",
      "ja": "IDNAのUnicode 7.0の見直しの一環として、問題は、正規化ルールIDNAで使用され、この文書（5.2.4）によって継承の再分析につながっ新しく追加されたコード・ポイントについて提起されました。一般的な問題の一部は、[IAB文]に記載の[IDNAユニコード]でより詳細に追求されています。"
    },
    {
      "indent": 3,
      "text": "At the time of writing, these issues have yet to be settled. However, implementers need to be aware that this specification is likely to be updated in the future to address these issues. The potential changes include the following:",
      "ja": "執筆時点では、これらの問題が解決されていません。しかし、実装者はこの仕様は、これらの問題に対処するために、将来的に更新される可能性があることを認識する必要があります。潜在的な変更点は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "o The range of characters in the LetterDigits category (Sections 4.2.1 and 9.1) might be narrowed.",
      "ja": "oをLetterDigitsカテゴリ（セクション4.2.1と9.1）で文字の範囲を狭くすることがあります。"
    },
    {
      "indent": 3,
      "text": "o Some characters with special properties that are now allowed might be excluded.",
      "ja": "O今許可される特殊な性質を持つ一部の文字は除外される可能性があります。"
    },
    {
      "indent": 3,
      "text": "o More \"Additional Mapping Rules\" (Section 5.2.2) might be defined.",
      "ja": "Oより「追加のマッピング・ルール」（5.2.2）が定義されるかもしれません。"
    },
    {
      "indent": 3,
      "text": "o Alternative normalization methods might be added.",
      "ja": "O代替正規化メソッドが追加される可能性があります。"
    },
    {
      "indent": 3,
      "text": "Nevertheless, implementations and deployments that are sensitive to the advice given in this specification are unlikely to encounter significant problems as a consequence of these issues or potential changes -- specifically, the advice to use the more restrictive IdentifierClass whenever possible or, if using the FreeformClass, to allow only a restricted set of characters, particularly avoiding characters whose implications they do not actually understand.",
      "ja": "それにもかかわらず、この仕様で与えられたアドバイスに敏感な実装と展開は、これらの問題の結果として、または潜在的な変化として重大な問題に遭遇する可能性は低い - 可能な限り具体的には、アドバイスは、より制限IdentifierClassを使用するか、FreeformClassを使用している場合、特にその含意、彼らが実際に理解していない文字を避け、文字のみの制限されたセットを可能にします。"
    },
    {
      "indent": 0,
      "text": "14. References",
      "section_title": true,
      "ja": "14.参考文献"
    },
    {
      "indent": 0,
      "text": "14.1. Normative References",
      "section_title": true,
      "ja": "14.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC20] Cerf, V., \"ASCII format for network interchange\", STD 80, RFC 20, DOI 10.17487/RFC0020, October 1969, <http://www.rfc-editor.org/info/rfc20>.",
      "ja": "[RFC20]サーフ、V.、 \"ネットワークの交換のためのASCIIフォーマット\"、STD 80、RFC 20、DOI 10.17487 / RFC0020、1969年10月、<http://www.rfc-editor.org/info/rfc20>。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <http://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<http://www.rfc-editor.org/info/ RFC2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC5198] Klensin, J. and M. Padlipsky, \"Unicode Format for Network Interchange\", RFC 5198, DOI 10.17487/RFC5198, March 2008, <http://www.rfc-editor.org/info/rfc5198>.",
      "ja": "[RFC5198] Klensin、J.とM. Padlipsky、 \"ネットワークインターチェンジのUnicodeフォーマット\"、RFC 5198、DOI 10.17487 / RFC5198、2008年3月、<http://www.rfc-editor.org/info/rfc5198>。"
    },
    {
      "indent": 3,
      "text": "[RFC6365] Hoffman, P. and J. Klensin, \"Terminology Used in Internationalization in the IETF\", BCP 166, RFC 6365, DOI 10.17487/RFC6365, September 2011, <http://www.rfc-editor.org/info/rfc6365>.",
      "ja": "[RFC6365]ホフマン、P.及びJ. Klensin、 \"IETFで国際に使用される用語\"、BCP 166、RFC 6365、DOI 10.17487 / RFC6365、2011年9月<http://www.rfc-editor.org/info / rfc6365>。"
    },
    {
      "indent": 3,
      "text": "[Unicode] The Unicode Consortium, \"The Unicode Standard\", <http://www.unicode.org/versions/latest/>.",
      "ja": "[UNICODE]ユニコードコンソーシアム、 \"Unicode規格\"、<http://www.unicode.org/versions/latest/>。"
    },
    {
      "indent": 3,
      "text": "[Unicode7.0] The Unicode Consortium, \"The Unicode Standard, Version 7.0.0\", (Mountain View, CA: The Unicode Consortium, 2014 ISBN 978-1-936213-09-2), <http://www.unicode.org/versions/Unicode7.0.0/>.",
      "ja": "[Unicode7.0]はUnicodeコンソーシアム、 \"Unicode標準、バージョン7.0.0\"、（カリフォルニア州マウンテンビュー：ユニコードコンソーシアム、2014 ISBN 978-1-936213-09-2）、<のhttp：// WWW。 unicode.org/versions/Unicode7.0.0/>。"
    },
    {
      "indent": 0,
      "text": "14.2. Informative References",
      "section_title": true,
      "ja": "14.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[DerivedCoreProperties] The Unicode Consortium, \"DerivedCoreProperties-7.0.0.txt\", Unicode Character Database, February 2014, <http://www.unicode.org/Public/UCD/latest/ucd/ DerivedCoreProperties.txt>.",
      "ja": "[DerivedCoreProperties]はUnicodeコンソーシアム、 \"DerivedCoreProperties-7.0.0.txt\"、Unicode文字データベース、2014年2月、<http://www.unicode.org/Public/UCD/latest/ucd/ DerivedCoreProperties.txt>。"
    },
    {
      "indent": 3,
      "text": "[IAB-Statement] Internet Architecture Board, \"IAB Statement on Identifiers and Unicode 7.0.0\", February 2015, <https://www.iab.org/ documents/correspondence-reports-documents/ 2015-2/iab-statement-on-identifiers-and-unicode-7-0-0/>.",
      "ja": "[IAB-声明]インターネットアーキテクチャ委員会、 \"識別子およびUnicode 7.0.0のIAB声明\"、2015年2月、<https://www.iab.org/文書/対応-レポート・ドキュメント/ 2015から2 / IAB文-on-識別子-とユニコード-7-0-0 />。"
    },
    {
      "indent": 3,
      "text": "[IDNA-Unicode] Klensin, J. and P. Faltstrom, \"IDNA Update for Unicode 7.0.0\", Work in Progress, draft-klensin-idna-5892upd-unicode70-04, March 2015.",
      "ja": "[IDNA-ユニコード] Klensin、J.とP. Faltstrom、 \"ユニコード7.0.0用IDNA更新\" が進行中で働いて、2015年3月、ドラフトklensin-IDNA-5892upd-unicode70-04。"
    },
    {
      "indent": 3,
      "text": "[PRECIS-Mappings] Yoneya, Y. and T. Nemoto, \"Mapping characters for PRECIS classes\", Work in Progress, draft-ietf-precis-mappings-10, May 2015.",
      "ja": "[PRECIS-マッピング]米谷、Y.とT.根本、進行中で働いて、ドラフト-IETF-PRECIS-マッピング-10、2015年5月 \"PRECISクラスのマッピング文字\"。"
    },
    {
      "indent": 3,
      "text": "[PRECIS-Nickname] Saint-Andre, P., \"Preparation, Enforcement, and Comparison of Internationalized Strings Representing Nicknames\", Work in Progress, draft-ietf-precis-nickname-17, April 2015.",
      "ja": "[PRECIS-ニックネーム]サンアンドレ、P.、 \"準備、施行、およびニックネームを表現する国際化された文字列の比較\" が進行中で働いて、ドラフト-IETF-PRECIS-ニックネーム-17、2015年4月。"
    },
    {
      "indent": 3,
      "text": "[PRECIS-Users-Pwds] Saint-Andre, P. and A. Melnikov, \"Preparation, Enforcement, and Comparison of Internationalized Strings Representing Usernames and Passwords\", Work in Progress, draft-ietf-precis-saslprepbis-17, May 2015.",
      "ja": "[PRECIS-ユーザー-障害者]サンアンドレ、P.およびA.メルニコフ、 \"準備、施行、および国際化された文字列の比較は、ユーザ名とパスワードの表現\" が進行中で働いて、ドラフト-IETF-PRECIS-saslprepbis-17、2015年5月。"
    },
    {
      "indent": 3,
      "text": "[PropertyAliases] The Unicode Consortium, \"PropertyAliases-7.0.0.txt\", Unicode Character Database, November 2013, <http://www.unicode.org/Public/UCD/latest/ucd/ PropertyAliases.txt>.",
      "ja": "[PropertyAliases]はUnicodeコンソーシアム、 \"PropertyAliases-7.0.0.txt\"、Unicode文字データベース、2013年11月、<http://www.unicode.org/Public/UCD/latest/ucd/ PropertyAliases.txt>。"
    },
    {
      "indent": 3,
      "text": "[RFC2865] Rigney, C., Willens, S., Rubens, A., and W. Simpson, \"Remote Authentication Dial In User Service (RADIUS)\", RFC 2865, DOI 10.17487/RFC2865, June 2000, <http://www.rfc-editor.org/info/rfc2865>.",
      "ja": "[RFC2865] Rigney、C.、ウィレンス、S.、ルーベン、A.、およびW.シンプソン、RFC 2865 \"ユーザーサービス（RADIUS）でリモート認証ダイヤル\"、DOI 10.17487 / RFC2865、2000年6月、<のhttp：/ /www.rfc-editor.org/info/rfc2865>。"
    },
    {
      "indent": 3,
      "text": "[RFC3454] Hoffman, P. and M. Blanchet, \"Preparation of Internationalized Strings (\"stringprep\")\", RFC 3454, DOI 10.17487/RFC3454, December 2002, <http://www.rfc-editor.org/info/rfc3454>.",
      "ja": "[RFC3454]ホフマン、P.及びM.ブランシェ、 \"（文字列準備 \"）\"、RFC 3454国際化された文字列の調製\"、DOI 10.17487 / RFC3454、2002年12月、<http://www.rfc-editor.org/info/ RFC3454>。"
    },
    {
      "indent": 3,
      "text": "[RFC3490] Faltstrom, P., Hoffman, P., and A. Costello, \"Internationalizing Domain Names in Applications (IDNA)\", RFC 3490, DOI 10.17487/RFC3490, March 2003, <http://www.rfc-editor.org/info/rfc3490>.",
      "ja": "[RFC3490] Faltstrom、P.、ホフマン、P.、およびA.コステロ、 \"アプリケーションにおける国際化ドメイン名（IDNA）\"、RFC 3490、DOI 10.17487 / RFC3490、2003年3月、<のhttp：//www.rfc-editor .ORG /情報/ RFC3490>。"
    },
    {
      "indent": 3,
      "text": "[RFC3491] Hoffman, P. and M. Blanchet, \"Nameprep: A Stringprep Profile for Internationalized Domain Names (IDN)\", RFC 3491, DOI 10.17487/RFC3491, March 2003, <http://www.rfc-editor.org/info/rfc3491>.",
      "ja": "[RFC3491]ホフマン、P.及びM.ブランシェ、 \"NAMEPREP：国際化ドメイン名（IDN）のためのstringprepプロファイル\"、RFC 3491、DOI 10.17487 / RFC3491、2003年3月<http://www.rfc-editor.org /情報/ RFC3491>。"
    },
    {
      "indent": 3,
      "text": "[RFC3629] Yergeau, F., \"UTF-8, a transformation format of ISO 10646\", STD 63, RFC 3629, DOI 10.17487/RFC3629, November 2003, <http://www.rfc-editor.org/info/rfc3629>.",
      "ja": "[RFC3629] Yergeau、F.、 \"UTF-8、ISO 10646の変換フォーマット\"、STD 63、RFC 3629、DOI 10.17487 / RFC3629、2003年11月、<http://www.rfc-editor.org/info/ RFC3629>。"
    },
    {
      "indent": 3,
      "text": "[RFC4422] Melnikov, A., Ed., and K. Zeilenga, Ed., \"Simple Authentication and Security Layer (SASL)\", RFC 4422, DOI 10.17487/RFC4422, June 2006, <http://www.rfc-editor.org/info/rfc4422>.",
      "ja": "[RFC4422]メルニコフ、A.、エド、およびK. Zeilenga、エド、 \"簡易認証セキュリティー層（SASL）\"、RFC 4422、DOI 10.17487 / RFC4422、2006年6月、<のhttp：。。//www.rfc- editor.org/info/rfc4422>。"
    },
    {
      "indent": 3,
      "text": "[RFC4510] Zeilenga, K., Ed., \"Lightweight Directory Access Protocol (LDAP): Technical Specification Road Map\", RFC 4510, DOI 10.17487/RFC4510, June 2006, <http://www.rfc-editor.org/info/rfc4510>.",
      "ja": "[RFC4510] Zeilenga、K.、エド、 \"ライトウェイトディレクトリアクセスプロトコル（LDAP）：技術仕様ロードマップ\"。、RFC 4510、DOI 10.17487 / RFC4510、2006年6月、<http://www.rfc-editor.org/情報/ rfc4510>。"
    },
    {
      "indent": 3,
      "text": "[RFC4690] Klensin, J., Faltstrom, P., Karp, C., and IAB, \"Review and Recommendations for Internationalized Domain Names (IDNs)\", RFC 4690, DOI 10.17487/RFC4690, September 2006, <http://www.rfc-editor.org/info/rfc4690>.",
      "ja": "[RFC4690]、RFC 4690、DOI 10.17487 / RFC4690 Klensin、J.、Faltstrom、P.、カープ、C.、およびIAB、 \"国際化ドメイン名（IDNの）のレビューと提言\"、2006年9月、<のhttp：// www.rfc-editor.org/info/rfc4690>。"
    },
    {
      "indent": 3,
      "text": "[RFC5226] Narten, T. and H. Alvestrand, \"Guidelines for Writing an IANA Considerations Section in RFCs\", BCP 26, RFC 5226, DOI 10.17487/RFC5226, May 2008, <http://www.rfc-editor.org/info/rfc5226>.",
      "ja": "[RFC5226] Narten氏、T.とH. Alvestrand、 \"RFCsにIANA問題部に書くためのガイドライン\"、BCP 26、RFC 5226、DOI 10.17487 / RFC5226、2008年5月、<http://www.rfc-editor.org /情報/ RFC5226>。"
    },
    {
      "indent": 3,
      "text": "[RFC5234] Crocker, D., Ed., and P. Overell, \"Augmented BNF for Syntax Specifications: ABNF\", STD 68, RFC 5234, DOI 10.17487/RFC5234, January 2008, <http://www.rfc-editor.org/info/rfc5234>.",
      "ja": "\"構文仕様のための増大しているBNF：ABNF\" [RFC5234]クロッカー、D.、エド、およびP. Overell、。、STD 68、RFC 5234、DOI 10.17487 / RFC5234、2008年1月、<のhttp：//www.rfc-editor .ORG /情報/ RFC5234>。"
    },
    {
      "indent": 3,
      "text": "[RFC5246] Dierks, T. and E. Rescorla, \"The Transport Layer Security (TLS) Protocol Version 1.2\", RFC 5246, DOI 10.17487/RFC5246, August 2008, <http://www.rfc-editor.org/info/rfc5246>.",
      "ja": "[RFC5246]ダークス、T.およびE.レスコラ、 \"トランスポート層セキュリティ（TLS）プロトコルバージョン1.2\"、RFC 5246、DOI 10.17487 / RFC5246、2008年8月、<http://www.rfc-editor.org/info / RFC5246>。"
    },
    {
      "indent": 3,
      "text": "[RFC5890] Klensin, J., \"Internationalized Domain Names for Applications (IDNA): Definitions and Document Framework\", RFC 5890, DOI 10.17487/RFC5890, August 2010, <http://www.rfc-editor.org/info/rfc5890>.",
      "ja": "[RFC5890] Klensin、J.、 \"アプリケーション（IDNA）のための国際化ドメイン名：定義とドキュメントフレームワーク\"、RFC 5890、DOI 10.17487 / RFC5890、2010年8月、<http://www.rfc-editor.org/info/ rfc5890>。"
    },
    {
      "indent": 3,
      "text": "[RFC5891] Klensin, J., \"Internationalized Domain Names in Applications (IDNA): Protocol\", RFC 5891, DOI 10.17487/RFC5891, August 2010, <http://www.rfc-editor.org/info/rfc5891>.",
      "ja": "[RFC5891] Klensin、J.、 \"アプリケーション（IDNA）で国際化ドメイン名：プロトコル\"、RFC 5891、DOI 10.17487 / RFC5891、2010年8月、<http://www.rfc-editor.org/info/rfc5891>。"
    },
    {
      "indent": 3,
      "text": "[RFC5892] Faltstrom, P., Ed., \"The Unicode Code Points and Internationalized Domain Names for Applications (IDNA)\", RFC 5892, DOI 10.17487/RFC5892, August 2010, <http://www.rfc-editor.org/info/rfc5892>.",
      "ja": "[RFC5892] Faltstrom、P.、エド。、 \"Unicodeのコードポイントとアプリケーションのための国際化ドメイン名（IDNA）\"、RFC 5892、DOI 10.17487 / RFC5892、2010年8月、<http://www.rfc-editor.org /情報/ rfc5892>。"
    },
    {
      "indent": 3,
      "text": "[RFC5893] Alvestrand, H., Ed., and C. Karp, \"Right-to-Left Scripts for Internationalized Domain Names for Applications (IDNA)\", RFC 5893, DOI 10.17487/RFC5893, August 2010, <http://www.rfc-editor.org/info/rfc5893>.",
      "ja": "[RFC5893] Alvestrand、H.、エド、およびC.カープ、 \"アプリケーションのための国際化ドメイン名のために右から左スクリプト（IDNA）\"、RFC 5893、DOI 10.17487 / RFC5893、2010年8月、<のhttp：// www.rfc-editor.org/info/rfc5893>。"
    },
    {
      "indent": 3,
      "text": "[RFC5894] Klensin, J., \"Internationalized Domain Names for Applications (IDNA): Background, Explanation, and Rationale\", RFC 5894, DOI 10.17487/RFC5894, August 2010, <http://www.rfc-editor.org/info/rfc5894>.",
      "ja": "[RFC5894] Klensin、J.、 \"アプリケーション（IDNA）のための国際化ドメイン名：背景、説明、及び根拠\"、RFC 5894、DOI 10.17487 / RFC5894、2010年8月、<http://www.rfc-editor.org/情報/ rfc5894>。"
    },
    {
      "indent": 3,
      "text": "[RFC5895] Resnick, P. and P. Hoffman, \"Mapping Characters for Internationalized Domain Names in Applications (IDNA) 2008\", RFC 5895, DOI 10.17487/RFC5895, September 2010, <http://www.rfc-editor.org/info/rfc5895>.",
      "ja": "[RFC5895]レズニック、P.およびP.ホフマン、 \"アプリケーションにおける国際化ドメイン名のマッピング文字（IDNA）2008\"、RFC 5895、DOI 10.17487 / RFC5895、2010年9月、<http://www.rfc-editor.org /情報/ rfc5895>。"
    },
    {
      "indent": 3,
      "text": "[RFC6452] Faltstrom, P., Ed., and P. Hoffman, Ed., \"The Unicode Code Points and Internationalized Domain Names for Applications (IDNA) - Unicode 6.0\", RFC 6452, DOI 10.17487/RFC6452, November 2011, <http://www.rfc-editor.org/info/rfc6452>.",
      "ja": "[RFC6452] Faltstrom、P.、エド、およびP.ホフマン、エド、 \"アプリケーション（IDNA）のUnicodeコードポイントと国際化ドメイン名 - ユニコード6.0\"。。、RFC 6452、DOI 10.17487 / RFC6452、2011年11月、< http://www.rfc-editor.org/info/rfc6452>。"
    },
    {
      "indent": 3,
      "text": "[RFC6885] Blanchet, M. and A. Sullivan, \"Stringprep Revision and Problem Statement for the Preparation and Comparison of Internationalized Strings (PRECIS)\", RFC 6885, DOI 10.17487/RFC6885, March 2013, <http://www.rfc-editor.org/info/rfc6885>.",
      "ja": "[RFC6885]ブランシェ、M.及びA.サリバン、RFC 6885、DOI 10.17487 / RFC6885 \"国際化された文字列（PRECIS）の調製と比較するためのstringprepリビジョンと問題文\"、2013年3月、<HTTP：//www.rfc -editor.org/info/rfc6885>。"
    },
    {
      "indent": 3,
      "text": "[RFC6943] Thaler, D., Ed., \"Issues in Identifier Comparison for Security Purposes\", RFC 6943, DOI 10.17487/RFC6943, May 2013, <http://www.rfc-editor.org/info/rfc6943>.",
      "ja": "[RFC6943]ターラー、D.編、 \"セキュリティ目的のための識別子の比較では問題\"、RFC 6943、DOI 10.17487 / RFC6943、2013年5月、<http://www.rfc-editor.org/info/rfc6943>。"
    },
    {
      "indent": 3,
      "text": "[UAX11] Unicode Standard Annex #11, \"East Asian Width\", edited by Ken Lunde. An integral part of The Unicode Standard, <http://unicode.org/reports/tr11/>.",
      "ja": "[UAX11] Unicode規格附属書＃11、ケン・ランド編「東アジアの幅」、。 Unicode標準の不可欠な部分、<http://unicode.org/reports/tr11/>。"
    },
    {
      "indent": 3,
      "text": "[UAX15] Unicode Standard Annex #15, \"Unicode Normalization Forms\", edited by Mark Davis and Ken Whistler. An integral part of The Unicode Standard, <http://unicode.org/reports/tr15/>.",
      "ja": "【UAX15] Unicode規格付属書＃15、マーク・デイビスとケンウィスラー編「Unicode正規化フォーム」。 Unicode標準の不可欠な部分、<http://unicode.org/reports/tr15/>。"
    },
    {
      "indent": 3,
      "text": "[UAX9] Unicode Standard Annex #9, \"Unicode Bidirectional Algorithm\", edited by Mark Davis, Aharon Lanin, and Andrew Glass. An integral part of The Unicode Standard, <http://unicode.org/reports/tr9/>.",
      "ja": "[UAX9] Unicode標準の附属書＃9、マーク・デイビス、者Aharonラニン、そしてアンドリュー・グラス編 \"Unicodeの双方向アルゴリズム\"、。 Unicode標準の不可欠な部分、<http://unicode.org/reports/tr9/>。"
    },
    {
      "indent": 3,
      "text": "[UTR36] Unicode Technical Report #36, \"Unicode Security Considerations\", by Mark Davis and Michel Suignard, <http://unicode.org/reports/tr36/>.",
      "ja": "[UTR36]ユニコードのテクニカルレポート＃36、 \"Unicodeのセキュリティに関する考慮事項\"、マーク・デイビスとミシェルSuignardによって、<http://unicode.org/reports/tr36/>。"
    },
    {
      "indent": 3,
      "text": "[UTS39] Unicode Technical Standard #39, \"Unicode Security Mechanisms\", edited by Mark Davis and Michel Suignard, <http://unicode.org/reports/tr39/>.",
      "ja": "マーク・デイビスとミシェルSuignardで編集[UTS39] Unicodeの技術標準＃39、 \"Unicodeのセキュリティ機構\"、<http://unicode.org/reports/tr39/>。"
    },
    {
      "indent": 3,
      "text": "[XMPP-Addr-Format] Saint-Andre, P., \"Extensible Messaging and Presence Protocol (XMPP): Address Format\", Work in Progress, draft-ietf-xmpp-6122bis-22, May 2015.",
      "ja": "[XMPP-ADDR-フォーマット]サンアンドレ、P.、 \"拡張メッセージングおよびプレゼンスプロトコル（XMPP）：アドレス形式\" が進行中で働いて、ドラフト-IETF-XMPP-6122bis-22、2015年5月。"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "The authors would like to acknowledge the comments and contributions of the following individuals during working group discussion: David Black, Edward Burns, Dan Chiba, Mark Davis, Alan DeKok, Martin Duerst, Patrik Faltstrom, Ted Hardie, Joe Hildebrand, Bjoern Hoehrmann, Paul Hoffman, Jeffrey Hutzelman, Simon Josefsson, John Klensin, Alexey Melnikov, Takahiro Nemoto, Yoav Nir, Mike Parker, Pete Resnick, Andrew Sullivan, Dave Thaler, Yoshiro Yoneya, and Florian Zeitz.",
      "ja": "著者は、グループディスカッションを作業中に以下の個人のコメントと貢献に感謝します：デヴィッド・ブラック、エドワード・バーンズ、ダン・千葉、マーク・デイビス、アランDeKok、マーティンDuerst、パトリックFaltstrom、テッドハーディー、ジョー・ヒルデブラント、ビョルンHoehrmann、ポールホフマン、ジェフリーHutzelman、サイモンJosefsson氏、ジョン・クレンシン、アレクセイ・メルニコフ、隆弘根本、ヨアフニール、マイク・パーカー、ピート・レズニック、アンドリュー・サリバン、デーブターラー、芳郎米谷、フロリアンツァイツ。"
    },
    {
      "indent": 3,
      "text": "Special thanks are due to John Klensin and Patrik Faltstrom for their challenging feedback and detailed reviews.",
      "ja": "特別な感謝は彼らの挑戦的なフィードバックと詳細なレビューのためにジョン・クレンシンとパトリックFaltstromに起因するものです。"
    },
    {
      "indent": 3,
      "text": "Charlie Kaufman, Tom Taylor, and Tim Wicinski reviewed the document on behalf of the Security Directorate, the General Area Review Team, and the Operations and Management Directorate, respectively.",
      "ja": "チャーリー・カウフマン、トム・テイラー、そしてティムWicinskiはそれぞれ、セキュリティ総局、一般エリアレビューチーム、および運用と管理総局に代わって文書をレビューしました。"
    },
    {
      "indent": 3,
      "text": "During IESG review, Alissa Cooper, Stephen Farrell, and Barry Leiba provided comments that led to further improvements.",
      "ja": "IESGレビューの間、アリッサ・クーパー、スティーブン・ファレル、そしてバリー・レイバは、さらなる改善につながったコメントを提供しました。"
    },
    {
      "indent": 3,
      "text": "Some algorithms and textual descriptions have been borrowed from [RFC5892]. Some text regarding security has been borrowed from [RFC5890], [PRECIS-Users-Pwds], and [XMPP-Addr-Format].",
      "ja": "いくつかのアルゴリズムとテキスト記述は[RFC5892]から借りてきました。セキュリティに関するいくつかのテキストは、[RFC5890]、[PRECIS-ユーザー-障害者]、および[XMPP-ADDR-フォーマット]から借りてきました。"
    },
    {
      "indent": 3,
      "text": "Peter Saint-Andre wishes to acknowledge Cisco Systems, Inc., for employing him during his work on earlier draft versions of this document.",
      "ja": "ピーターサンアンドレはこのドキュメントの以前のドラフトバージョンの彼の仕事中に彼を採用するため、シスコシステムズ、株式会社を確認したいです。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Peter Saint-Andre &yet",
      "ja": "まだピーターサンアンドレ＆"
    },
    {
      "indent": 3,
      "text": "EMail: peter@andyet.com URI: https://andyet.com/",
      "ja": "電子メール：peter@andyet.com URI：https://andyet.com/"
    },
    {
      "indent": 3,
      "text": "Marc Blanchet Viagenie 246 Aberdeen Quebec, QC G1R 2E1 Canada",
      "ja": "マルク・ブランシェViagenie 246アバディーンケベック、QC G1R 2E1カナダ"
    },
    {
      "indent": 3,
      "text": "EMail: Marc.Blanchet@viagenie.ca URI: http://www.viagenie.ca/",
      "ja": "電子メール：Marc.Blanchet@viagenie.ca URI：http://www.viagenie.ca/"
    }
  ]
}