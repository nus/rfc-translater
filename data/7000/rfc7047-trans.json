{
  "title": {
    "text": "RFC 7047 - The Open vSwitch Database Management Protocol",
    "ja": "RFC 7047 - オープンvSwitchのデータベース管理プロトコル"
  },
  "number": 7047,
  "created_at": "2019-10-28 00:51:20.191426+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Independent Submission                                          B. Pfaff\nRequest for Comments: 7047                                 B. Davie, Ed.\nCategory: Informational                                     VMware, Inc.\nISSN: 2070-1721                                            December 2013",
      "raw": true
    },
    {
      "indent": 13,
      "text": "The Open vSwitch Database Management Protocol",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "Open vSwitch is an open-source software switch designed to be used as a vswitch (virtual switch) in virtualized server environments. A vswitch forwards traffic between different virtual machines (VMs) on the same physical host and also forwards traffic between VMs and the physical network. Open vSwitch is open to programmatic extension and control using OpenFlow and the OVSDB (Open vSwitch Database) management protocol. This document defines the OVSDB management protocol. The Open vSwitch project includes open-source OVSDB client and server implementations.",
      "ja": "オープンのvSwitchは、仮想サーバ環境における仮想スイッチ（仮想スイッチ）として使用するように設計されたオープン・ソース・ソフトウェア・スイッチです。同一の物理ホスト上の異なる仮想マシン（VM）との間のトラフィックを転送仮想スイッチ、また仮想マシンと物理ネットワーク間のトラフィックを転送します。オープンのvSwitchはオープンフローとOVSDB（オープンvSwitchのデータベース）管理プロトコルを使用してプログラム拡張及び制御に開放されています。この文書では、OVSDB管理プロトコルを定義します。オープンvSwitchのプロジェクトは、オープンソースOVSDBクライアントとサーバの実装が含まれています。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for informational purposes.",
      "ja": "このドキュメントはインターネット標準化過程仕様ではありません。それは、情報提供の目的のために公開されています。"
    },
    {
      "indent": 3,
      "text": "This is a contribution to the RFC Series, independently of any other RFC stream. The RFC Editor has chosen to publish this document at its discretion and makes no statement about its value for implementation or deployment. Documents approved for publication by the RFC Editor are not a candidate for any level of Internet Standard; see Section 2 of RFC 5741.",
      "ja": "これは、独立して、他のRFCストリームの、RFCシリーズへの貢献です。 RFC Editorはその裁量でこの文書を公開することを選択し、実装や展開のためにその値についての声明を出すていません。 RFC編集者によって公表のために承認されたドキュメントは、インターネット標準の任意のレベルの候補ではありません。 RFC 5741のセクション2を参照してください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc7047.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc7047で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2013 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2013 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................3\n   1.1. Requirements Language ......................................3\n   1.2. Terminology ................................................3\n2. System Overview .................................................4\n3. OVSDB Structure .................................................5\n   3.1. JSON Usage .................................................6\n   3.2. Schema Format ..............................................7\n4. Wire Protocol ..................................................12\n   4.1. RPC Methods ...............................................12\n        4.1.1. List Databases .....................................12\n        4.1.2. Get Schema .........................................13\n        4.1.3. Transact ...........................................13\n        4.1.4. Cancel .............................................16\n        4.1.5. Monitor ............................................16\n        4.1.6. Update Notification ................................18\n        4.1.7. Monitor Cancellation ...............................19\n        4.1.8. Lock Operations ....................................19\n        4.1.9. Locked Notification ................................21\n        4.1.10. Stolen Notification ...............................21\n        4.1.11. Echo ..............................................22\n5. Database Operations ............................................22\n   5.1. Notation ..................................................22\n   5.2. Operations ................................................27\n        5.2.1. Insert .............................................27\n        5.2.2. Select .............................................28\n        5.2.3. Update .............................................29\n        5.2.4. Mutate .............................................29\n        5.2.5. Delete .............................................30\n        5.2.6. Wait ...............................................31\n        5.2.7. Commit .............................................32\n        5.2.8. Abort ..............................................32\n        5.2.9. Comment ............................................32\n        5.2.10. Assert ............................................33\n6. IANA Considerations ............................................33\n7. Security Considerations ........................................33\n8. Acknowledgements ...............................................34\n9. References .....................................................34\n   9.1. Normative References ......................................34\n   9.2. Informative References ....................................34",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "In virtualized server environments, it is typically required to use a vswitch (virtual switch) to forward traffic between different virtual machines (VMs) on the same physical host and between VMs and the physical network. Open vSwitch [OVS] is an open-source software switch designed to be used as a vswitch in such environments. Open vSwitch (OVS) is open to programmatic extension and control using OpenFlow [OF-SPEC] and the OVSDB (Open vSwitch Database) management protocol. This document defines the OVSDB management protocol. The Open vSwitch project includes open-source OVSDB client and server implementations.",
      "ja": "仮想サーバ環境では、典型的には、同一の物理ホスト上とVMと物理ネットワークとの間の異なる仮想マシン（VM）との間でトラフィックを転送する仮想スイッチ（仮想スイッチ）を使用する必要があります。オープンのvSwitchは、[OVSこのような環境で仮想スイッチとして使用されるように設計されたオープン・ソース・ソフトウェア・スイッチです。オープンのvSwitch（OVS）は、オープンフロー[OF-SPEC]とOVSDB（オープンvSwitchのデータベース）管理プロトコルを使用してプログラム拡張及び制御に開放されています。この文書では、OVSDB管理プロトコルを定義します。オープンvSwitchのプロジェクトは、オープンソースOVSDBクライアントとサーバの実装が含まれています。"
    },
    {
      "indent": 3,
      "text": "The OVSDB management protocol uses JSON [RFC4627] for its wire format and is based on JSON-RPC version 1.0 [JSON-RPC].",
      "ja": "OVSDB管理プロトコルは、ワイヤフォーマットのJSON [RFC4627]を使用し、JSON-RPCバージョン1.0 [JSON-RPC]に基づいています。"
    },
    {
      "indent": 3,
      "text": "The schema of the Open vSwitch database is documented in [DB-SCHEMA]. This document specifies the protocol for interacting with that database for the purposes of managing and configuring Open vSwitch instances. The protocol specified in this document also provides means for discovering the schema in use, as described in Section 4.1.2.",
      "ja": "オープンvSwitchのデータベースのスキーマは、[DB-SCHEMA]に記載されています。この文書では、オープンvSwitchのインスタンスを管理および設定の目的のためにそのデータベースと対話するためのプロトコルを指定します。本書で指定されたプロトコルはまた、セクション4.1.2で説明したように、使用中のスキーマを発見するための手段を提供します。"
    },
    {
      "indent": 3,
      "text": "The OVSDB management protocol is intended to allow programmatic access to the Open vSwitch database as documented in [DB-SCHEMA]. This database holds the configuration for one Open vSwitch daemon. As currently defined, this information describes the switching behavior of a virtual switch and does not describe the behavior or configuration of a routing system. In the event that the schema is extended in a future release to cover elements of the routing system, implementers and operators need to be aware of the work of the IETF's I2RS working group that specifies protocols and data models for real-time or event driven interaction with the routing system.",
      "ja": "OVSDB管理プロトコルは、[DB-SCHEMA]に記載のようにオープンvSwitchのデータベースへのプログラムによるアクセスを許可することを意図しています。このデータベースは1つのオープンvSwitchのデーモンの設定を保持します。現在定義されているように、この情報は、仮想スイッチの切り替え動作について説明し、ルーティングシステムの動作または構成を記載していません。スキーマがルーティングシステムの要素をカバーするために、将来のリリースで拡張された場合には、実装者とオペレータは、リアルタイムまたはイベント駆動型の相互作用のためのプロトコルおよびデータ・モデルを指定するIETFのI2RSワーキンググループの作業に注意する必要がありますルーティングシステムを持ちます。"
    },
    {
      "indent": 0,
      "text": "1.1. Requirements Language",
      "section_title": true,
      "ja": "1.1。要件言語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はあります[RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "1.2. Terminology",
      "section_title": true,
      "ja": "1.2。用語"
    },
    {
      "indent": 3,
      "text": "UUID: Universally Unique Identifier. A 128-bit identifier that is unique in space and time [DCE].",
      "ja": "UUID：汎用一意識別子。空間及び時間内で一意である128ビットの識別子[DCE]。"
    },
    {
      "indent": 3,
      "text": "OVS: Open vSwitch. An open-source virtual switch.",
      "ja": "OVS：オープンのvSwitch。オープンソースの仮想スイッチ。"
    },
    {
      "indent": 3,
      "text": "OVSDB: The database that is used for the purpose of configuring OVS instances.",
      "ja": "OVSDB：OVSのインスタンスを設定する目的で使用されているデータベース。"
    },
    {
      "indent": 3,
      "text": "JSON: Javascript Object Notation [RFC4627].",
      "ja": "JSON：JavaScriptオブジェクト表記[RFC4627]。"
    },
    {
      "indent": 3,
      "text": "JSON-RPC: JSON Remote Procedure Call [JSON-RPC].",
      "ja": "JSON-RPC：JSONリモートプロシージャコール[JSON-RPC]。"
    },
    {
      "indent": 3,
      "text": "Durable: Reliably written to non-volatile storage (e.g., disk). OVSDB supports the option to specify whether or not transactions are durable.",
      "ja": "耐久性：確実に不揮発性記憶装置（例えば、ディスク）に書き込まれます。 OVSDBは、トランザクションが耐久性のあるかどうかを指定するオプションをサポートしています。"
    },
    {
      "indent": 3,
      "text": "Note that the JSON specification [RFC4627] provides precise definitions of a number of important terms such as JSON values, objects, arrays, numbers, and strings. In all cases, this document uses the definitions from [RFC4627].",
      "ja": "JSON仕様[RFC4627]は、そのようなJSON値、オブジェクト、配列、数値、文字列などの重要な多くの用語の正確な定義を提供することに留意されたいです。すべての場合において、この文書は[RFC4627]からの定義を使用しています。"
    },
    {
      "indent": 0,
      "text": "2. System Overview",
      "section_title": true,
      "ja": "2.システムの概要"
    },
    {
      "indent": 3,
      "text": "Figure 1 illustrates the main components of Open vSwitch and the interfaces to a control and management cluster. An OVS instance comprises a database server (ovsdb-server), a vswitch daemon (ovs-vswitchd), and, optionally, a module that performs fast-path forwarding. The \"management and control cluster\" consists of some number of managers and controllers. Managers use the OVSDB management protocol to manage OVS instances. An OVS instance is managed by at least one manager. Controllers use OpenFlow to install flow state in OpenFlow switches. An OVS instance can support multiple logical datapaths, referred to as \"bridges\". There is at least one controller for each OpenFlow bridge.",
      "ja": "図1は、制御および管理クラスタにオープンのvSwitchとインターフェースの主要構成要素を示します。 OVSインスタンスは、必要に応じて、データベース・サーバ（ovsdbサーバ）、仮想スイッチデーモン（OVS-vswitchd）、及び、高速パス転送を行うモジュールを含みます。 「管理と制御クラスタは、」経営者とコントローラのいくつかの数で構成されています。管理者は、OVSインスタンスを管理するためにOVSDB管理プロトコルを使用します。 OVSインスタンスは、少なくとも一つのマネージャーによって管理されています。コントローラは、オープンフロースイッチでフロー状態をインストールするには、オープンフローを使用します。 OVSインスタンスは「ブリッジ」と呼ばれる複数の論理データパスをサポートすることができます。各オープンフローブリッジの少なくとも1つのコントローラがあります。"
    },
    {
      "indent": 3,
      "text": "The OVSDB management interface is used to perform management and configuration operations on the OVS instance. Compared to OpenFlow, OVSDB management operations occur on a relatively long timescale. Examples of operations that are supported by OVSDB include:",
      "ja": "OVSDB管理インターフェイスは、OVSインスタンスの管理および設定操作を実行するために使用されます。オープンフローと比較すると、OVSDB管理操作は、比較的長い時間スケールで発生します。 OVSDBによってサポートされている操作の例としては、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "o Creation, modification, and deletion of OpenFlow datapaths (bridges), of which there may be many in a single OVS instance;",
      "ja": "単一OVSインスタンスに多く存在することができるのオープンフローデータパス（ブリッジ）のO作成、変更、および削除。"
    },
    {
      "indent": 3,
      "text": "o Configuration of the set of controllers to which an OpenFlow datapath should connect;",
      "ja": "オープンフローデータパスが接続するコントローラのセットのO構成。"
    },
    {
      "indent": 3,
      "text": "o Configuration of the set of managers to which the OVSDB server should connect;",
      "ja": "OVSDBサーバーが接続する管理職のセットのO構成。"
    },
    {
      "indent": 3,
      "text": "o Creation, modification, and deletion of ports on OpenFlow datapaths;",
      "ja": "オープンフローデータパスのポートのO作成、変更、削除。"
    },
    {
      "indent": 3,
      "text": "o Creation, modification, and deletion of tunnel interfaces on OpenFlow datapaths;",
      "ja": "オープンフローデータパス上のトンネルインターフェイスのO作成、変更、および削除。"
    },
    {
      "indent": 3,
      "text": "o Creation, modification, and deletion of queues;",
      "ja": "キューのO作成、変更、削除。"
    },
    {
      "indent": 3,
      "text": "o Configuration of QoS (quality of service) policies and attachment of those policies to queues; and",
      "ja": "QoSポリシーとキューにこれらのポリシーの添付ファイル（サービス品質）のO構成。そして"
    },
    {
      "indent": 3,
      "text": "o Collection of statistics.",
      "ja": "統計のOコレクション。"
    },
    {
      "indent": 3,
      "text": "OVSDB does not perform per-flow operations, leaving those instead to OpenFlow.",
      "ja": "OVSDBは、オープンフローの代わりに、それらを残して、フローごとの操作を実行しません。"
    },
    {
      "indent": 7,
      "text": "   +----------------------+\n   |      Control &       |\n   |     Management       |\n   |      Cluster         |\n   +----------------------+\n      |                \\\n      | OVSDB           \\ OpenFlow\n      | Mgmt             \\\n      |                   \\\n+============================================+\n| +--------------+       +--------------+    |\n| |              |       |              |    |\n| | ovsdb-server |-------| ovs-vswitchd |    |\n| |              |       |              |    |\n| +--------------+       +--------------+    |\n|                               |            |\n|                        +----------------+  |\n|                        | Forwarding Path|  |\n|                        +----------------+  |\n+============================================+",
      "raw": true
    },
    {
      "indent": 21,
      "text": "Figure 1: Open vSwitch Interfaces",
      "ja": "図1：オープンvSwitchのインタフェース"
    },
    {
      "indent": 3,
      "text": "Further information about the usage of the OVSDB management protocol is provided in [DB-SCHEMA].",
      "ja": "OVSDB管理プロトコルの使用に関するさらなる情報は、[DB-SCHEMA]で提供されます。"
    },
    {
      "indent": 0,
      "text": "3. OVSDB Structure",
      "section_title": true,
      "ja": "3. OVSDB構造"
    },
    {
      "indent": 3,
      "text": "This section outlines the overall structure of databases in OVSDB. As described here, the database is reasonably generic. For the complete and current description of the database schema as used in OVS, refer to [DB-SCHEMA]. See also Section 4.1.2 for information on how the OVSDB management protocol may be used to discover the schema currently in use.",
      "ja": "このセクションでは、OVSDB内のデータベースの全体構造を概説します。ここで説明したように、データベースが合理的に汎用的です。 OVSで使用されるデータベーススキーマの完全かつ現在の説明のために、[DB-SCHEMA]を指します。 OVSDB管理プロトコルは、現在使用中のスキーマを発見するために使用することができる方法についても情報のため、4.1.2項を参照してください。"
    },
    {
      "indent": 0,
      "text": "3.1. JSON Usage",
      "section_title": true,
      "ja": "3.1。 JSONの使い方"
    },
    {
      "indent": 3,
      "text": "OVSDB uses JSON [RFC4627] for both its schema format and its wire protocol format. The JSON implementation in Open vSwitch has the following limitations:",
      "ja": "OVSDBは、そのスキーマフォーマット及びそのワイヤプロトコルフォーマットの両方に対してJSON [RFC4627]を使用します。オープンのvSwitchでのJSONの実装は次の制限があります。"
    },
    {
      "indent": 3,
      "text": "o Null bytes (\\u0000) SHOULD NOT be used in strings.",
      "ja": "バイト（\\のU0000）ヌルoは、文字列では使用しないでください。"
    },
    {
      "indent": 3,
      "text": "o Only UTF-8 encoding is supported.",
      "ja": "OのみUTF-8エンコーディングがサポートされています。"
    },
    {
      "indent": 3,
      "text": "The descriptions below use the following shorthand notations for JSON values. Terminology follows [RFC4627].",
      "ja": "以下の説明は、JSON値のため、次の簡単な表記法を使用しています。用語は、[RFC4627]に従います。"
    },
    {
      "indent": 3,
      "text": "<string> A JSON string. Any Unicode string is allowed. Implementations SHOULD disallow null bytes.",
      "ja": "<文字列> JSON文字列。任意のUnicode文字列が許可されています。実装はNULLバイトを禁止すべきです。"
    },
    {
      "indent": 3,
      "text": "<id> A JSON string matching [a-zA-Z_][a-zA-Z0-9_]*. <id>s that begin with _ are reserved to the implementation and MUST NOT be used by the user.",
      "ja": "<ID> JSON文字列マッチング[-ZA-Z _] [-ZA-Z0-9 _] *。 _で始まる<ID> Sは、実装に予約されており、ユーザが使用してはいけません。"
    },
    {
      "indent": 3,
      "text": "<version> A JSON string that contains a version number that matches [0-9]+ \\.[0-9]+\\.[0-9]+",
      "ja": "<バージョン>と一致するバージョン番号[0-9] + \\が含まれているJSON文字列。[0-9] + \\。[0-9] +"
    },
    {
      "indent": 3,
      "text": "<boolean> A JSON true or false value.",
      "ja": "<ブール> JSON真または偽の値。"
    },
    {
      "indent": 3,
      "text": "<number> A JSON number.",
      "ja": "<番号> JSON番号。"
    },
    {
      "indent": 3,
      "text": "<integer> A JSON number with an integer value, within the range -(2**63)...+ (2**63)-1.",
      "ja": "<整数>範囲内の整数値を持つA JSON番号、 - （** 63 2）... +（** 63 2）-1。"
    },
    {
      "indent": 3,
      "text": "<json-value> Any JSON value.",
      "ja": "<JSON-value>は任意のJSON値。"
    },
    {
      "indent": 3,
      "text": "<nonnull-json-value> Any JSON value except null.",
      "ja": "<非null-JSON-値>ヌル以外のすべてのJSON値。"
    },
    {
      "indent": 3,
      "text": "<error> A JSON object with the following members:",
      "ja": "<エラー>以下のメンバーを持つJSONオブジェクト："
    },
    {
      "indent": 11,
      "text": "\"error\": <string>          required\n\"details\": <string>        optional",
      "raw": true
    },
    {
      "indent": 6,
      "text": "The value of the \"error\" member is a short string, specified in this document, that broadly indicates the class of the error. Most \"error\" strings are specific to contexts described elsewhere in this document, but the following \"error\" strings may appear in any context where an <error> is permitted:",
      "ja": "「エラー」メンバの値は広くエラーのクラスを示し、この文書で指定された短い文字列です。ほとんどの「エラー」の文字列は、本書の他の箇所に記載文脈に固有のものですが、次の「エラー」の文字列は<エラー>が許可されている任意のコンテキストで表示されることがあります。"
    },
    {
      "indent": 6,
      "text": "\"error\": \"resources exhausted\"\n   The operation requires more resources (memory, disk, CPU, etc.)\n   than are currently available to the database server.",
      "raw": true
    },
    {
      "indent": 6,
      "text": "\"error\": \"I/O error\"\n   Problems accessing the disk, network, or other required\n   resources prevented the operation from completing.",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Database implementations MAY use \"error\" strings not specified in this document to indicate errors that do not fit into any of the specified categories. Optionally, an <error> MAY include a \"details\" member, whose value is a string that describes the error in more detail for the benefit of a human user or administrator. This document does not specify the format or content of the \"details\" string. An <error> MAY also have other members that describe the error in more detail. This document does not specify the names or values of these members.",
      "ja": "データベースの実装では、指定したカテゴリのいずれにも適合しないエラーを示すために、この文書で指定されていない「エラー」の文字列を使用するかもしれません。必要に応じて、<エラー>は、その値が人間のユーザまたは管理者の利益のために、より詳細にエラーを説明する文字列である「詳細」部材を含むことができます。この文書では、「詳細」の文字列の形式や内容を指定していません。 <エラー>はまた、より詳細にエラーを説明し、他のメンバーを持っているかもしれません。この文書では、これらのメンバーの名前または値を指定していません。"
    },
    {
      "indent": 0,
      "text": "3.2. Schema Format",
      "section_title": true,
      "ja": "3.2。スキーマ形式"
    },
    {
      "indent": 3,
      "text": "An Open vSwitch configuration database consists of a set of tables, each of which has a number of columns and zero or more rows. A schema for the database is represented by <database-schema>, as described below.",
      "ja": "オープンvSwitchの構成データベースは、列及びゼロ以上の行の数をそれぞれ有するテーブルのセットからなります。以下に説明するようにデータベースのスキーマは、<データベーススキーマ>で表されます。"
    },
    {
      "indent": 3,
      "text": "<database-schema> A JSON object with the following members:",
      "ja": "<データベーススキーマ>次のメンバーとJSONオブジェクト。"
    },
    {
      "indent": 11,
      "text": "\"name\": <id>                            required\n\"version\": <version>                    required\n\"cksum\": <string>                       optional\n\"tables\": {<id>: <table-schema>, ...}   required",
      "raw": true
    },
    {
      "indent": 6,
      "text": "The \"name\" identifies the database as a whole. It must be provided to most JSON-RPC requests to identify the database being operated on.",
      "ja": "「名前」は、全体としてデータベースを識別します。これは、操作中のデータベースを識別するための最もJSON-RPCリクエストに提供されなければなりません。"
    },
    {
      "indent": 6,
      "text": "The \"version\" reports the version of the database schema. It is REQUIRED to be present. Open vSwitch semantics for \"version\" are described in [DB-SCHEMA]. Other schemas may use it differently.",
      "ja": "「バージョンは、」データベーススキーマのバージョンを報告します。なお、本であることが必要です。 「バージョン」のオープンvSwitchのセマンティクスは、[DB-SCHEMA]に記載されています。他のスキーマが異なり、それを使用することができます。"
    },
    {
      "indent": 6,
      "text": "The \"cksum\" optionally reports an implementation-defined checksum for the database schema. Its use is primarily as a tool for schema developers, and clients SHOULD ignore it.",
      "ja": "「cksumの」必要に応じてデータベーススキーマのための実装定義のチェックサムを報告します。その使用は、主に、スキーマの開発者のためのツールとしてであり、クライアントはそれを無視すべきです。"
    },
    {
      "indent": 6,
      "text": "The value of \"tables\" is a JSON object whose names are table names and whose values are <table-schema>s.",
      "ja": "「テーブル」の値は、名前テーブルの名前と値<テーブルスキーマ> SされているJSONオブジェクトです。"
    },
    {
      "indent": 3,
      "text": "<table-schema> A JSON object with the following members:",
      "ja": "<テーブルスキーマ>次のメンバーとJSONオブジェクト。"
    },
    {
      "indent": 9,
      "text": "\"columns\": {<id>: <column-schema>, ...}   required\n\"maxRows\": <integer>                      optional\n\"isRoot\": <boolean>                       optional\n\"indexes\": [<column-set>*]                optional",
      "raw": true
    },
    {
      "indent": 6,
      "text": "The value of \"columns\" is a JSON object whose names are column names and whose values are <column-schema>s.",
      "ja": "「列」の値は、名前列の名前と値<列スキーマ> SされているJSONオブジェクトです。"
    },
    {
      "indent": 6,
      "text": "Every table has the following columns whose definitions are not included in the schema:",
      "ja": "各テーブルには、その定義のスキーマに含まれていない次の列があります。"
    },
    {
      "indent": 9,
      "text": "\"_uuid\": This column, which contains exactly one UUID value, is initialized to a random value by the database engine when it creates a row. It is read-only, and its value never changes during the lifetime of a row.",
      "ja": "「_uuid」：それは行を作成するときに正確に一つのUUIDの値が含まれている。このカラムは、データベースエンジンによってランダムな値に初期化されます。これは、読み取り専用、およびその値は、行の存続期間中に変更されることはありません。"
    },
    {
      "indent": 9,
      "text": "\"_version\": Like \"_uuid\", this column contains exactly one UUID value, initialized to a random value by the database engine when it creates a row, and it is read-only. However, its value changes to a new random value whenever any other field in the row changes. Furthermore, its value is ephemeral: when the database is closed and reopened, or when the database process is stopped and then started again, each \"_version\" also changes to a new random value.",
      "ja": "「_versionは」：「_uuid」と同様に、この列は、行を作成するときに、データベースエンジンによってランダムな値に初期化正確に一つのUUIDの値が含まれ、それは読み取り専用です。しかし、新たなランダム値にその値が変化するたびに行変更に他のフィールド。データベースを閉じて再び開いたとき、またはデータベース・プロセスが停止し、再度開始されたときに、それぞれ「_version」も新しいランダムな値に変更します。また、その値は短命です。"
    },
    {
      "indent": 6,
      "text": "If \"maxRows\" is specified, as a positive integer, it limits the maximum number of rows that may be present in the table. This is a \"deferred\" constraint, enforced only at transaction commit time (see the \"transact\" request in Section 4.1.3). If \"maxRows\" is not specified, the size of the table is limited only by the resources available to the database server. \"maxRows\" constraints are enforced after unreferenced rows are deleted from tables with a false \"isRoot\".",
      "ja": "「のmaxRows」が指定されている場合は、正の整数として、それがテーブルに存在することができる最大行数を制限します。これは、トランザクションの強制「延期」制約は、（4.1.3項で「のTransact」要求を参照）コミット時です。 「maxRowsの」が指定されていない場合は、テーブルのサイズは、データベース・サーバに利用可能なリソースによって制限されます。参照されていない行は偽の「isRoot」を持つテーブルから削除された後、「maxRowsの」制約が適用されます。"
    },
    {
      "indent": 6,
      "text": "The \"isRoot\" boolean is used to determine whether rows in the table require strong references from other rows to avoid garbage collection. (See the discussion of \"strong\" and \"weak\" references below in the description of <base-type>.) If \"isRoot\" is specified as true, then rows in the table exist independent of any references (they can be thought of as part of the \"root set\" in a garbage collector). If \"isRoot\" is omitted or specified as false, then any given row in the table may exist only when there is at least one reference to it, with refType \"strong\", from a different row (in the same table or a different table). This is a \"deferred\" action: unreferenced rows in the table are deleted just before transaction commit.",
      "ja": "「isRoot」ブールは、テーブルの行は、ガベージコレクションを避けるために、他の行からの強い参照を必要とするかどうかを決定するために使用されます。 （<ベース型>の説明において以下「強」および「弱」の参照の説明を参照してください。）「isRootが」真として指定されている場合、テーブル内の行は、（それらが考えることができる任意の参考文献の独立した存在しますガベージコレクタの「ルート設定」）の一部として。 「isRoot」は省略または偽として指定されている場合refTypeと、「強い」は、少なくとも一つの基準が存在する場合にのみ、その後、テーブル内の任意の行が同じテーブルまたは別のテーブルに（異なる行から、存在してもよいです）。これは、「延期」アクションです：テーブル内の参照されていない行は、トランザクションのコミット直前に削除されます。"
    },
    {
      "indent": 6,
      "text": "For compatibility with schemas created before \"isRoot\" was introduced, if \"isRoot\" is omitted or false in every <table-schema> in a given <database-schema>, then every table is part of the root set.",
      "ja": "「isRootは」すべての<テーブルスキーマ>では省略またはfalseの場合、「isRoot」の前に作成されたスキーマとの互換性のために与えられた<データベース・スキーマ>で、導入された後、すべてのテーブルは、ルートセットの一部です。"
    },
    {
      "indent": 6,
      "text": "If \"indexes\" is specified, it must be an array of zero or more <column-set>s. A <column-set> is an array of one or more strings, each of which names a column. Each <column-set> is a set of columns whose values, taken together within any given row, must be unique within the table. This is a \"deferred\" constraint, enforced only at transaction commit time, after unreferenced rows are deleted and dangling weak references are removed. Ephemeral columns may not be part of indexes.",
      "ja": "「インデックス」が指定されている場合、それはゼロ以上の<カラムセット>の配列でなければなりません。 <カラムセット>は一つ以上のストリング、それぞれの名前の列の配列です。各<列セットは>値は、任意の所与の行内一緒になって、テーブル内で一意でなければならない列のセットです。これは、参照されていない行が削除され、ダングリング弱参照が除去された後にのみ取引で強制「延期」制約は、コミット時です。エフェメラル列は、インデックスの一部ではないかもしれません。"
    },
    {
      "indent": 3,
      "text": "<column-schema> A JSON object with the following members:",
      "ja": "<列スキーマ>次のメンバーとJSONオブジェクト。"
    },
    {
      "indent": 9,
      "text": "\"type\": <type>                            required\n\"ephemeral\": <boolean>                    optional\n\"mutable\": <boolean>                      optional",
      "raw": true
    },
    {
      "indent": 6,
      "text": "The \"type\" specifies the type of data stored in this column.",
      "ja": "「タイプ」は、この列に格納されているデータの種類を指定します。"
    },
    {
      "indent": 6,
      "text": "If \"ephemeral\" is specified as true, then this column's values are not guaranteed to be durable; they may be lost when the database restarts. A column whose type (either key or value) is a strong reference to a table that is not part of the root set is always durable, regardless of this value. (Otherwise, restarting the database could lose entire rows.)",
      "ja": "「はかない」が真として指定されている場合、この列の値は、耐久性のあることが保証されていません。データベースの再起動時に、彼らが失われることがあります。そのタイプ（キーまたは値のいずれか）ルートセットの一部ではないテーブルに強い参照ある列には関係なく、この値の、常に耐久性があります。 （そうでない場合は、データベースを再起動すると行全体を失う可能性があります。）"
    },
    {
      "indent": 6,
      "text": "If \"mutable\" is specified as false, then this column's values may not be modified after they are initially set with the \"insert\" operation.",
      "ja": "「可変」が偽として指定されている場合は、彼らが最初に「挿入」操作で設定された後、この列の値が変更されないかもしれません。"
    },
    {
      "indent": 3,
      "text": "<type> The type of a database column. Either an <atomic-type> or a JSON object that describes the type of a database column, with the following members:",
      "ja": "<タイプ>データベース列のタイプ。 <アトミック型>以下のメンバーと、データベース列のタイプを記述するJSONオブジェクトのいずれか："
    },
    {
      "indent": 9,
      "text": "\"key\": <base-type>                 required\n\"value\": <base-type>               optional\n\"min\": <integer>                   optional\n\"max\": <integer> or \"unlimited\"    optional",
      "raw": true
    },
    {
      "indent": 6,
      "text": "If \"min\" or \"max\" is not specified, each defaults to 1. If \"max\" is specified as \"unlimited\", then there is no specified maximum number of elements, although the implementation will enforce some limit. After considering defaults, \"min\" must be exactly 0 or exactly 1, \"max\" must be at least 1, and \"max\" must be greater than or equal to \"min\".",
      "ja": "「分」または「最大」が指定されていない場合、1にそれぞれデフォルトは「最大」は「無制限」として指定された場合、実装は、いくつかの制限を強制するが、要素のない指定された最大数はありません。デフォルト値を考慮し、「min」は、少なくとも1でなければならず、「最大」は「分」以上である必要があり、正確に0又は正確に1、「MAX」でなければなりません。"
    },
    {
      "indent": 6,
      "text": "If \"min\" and \"max\" are both 1 and \"value\" is not specified, the type is the scalar type specified by \"key\".",
      "ja": "「分」と「最大」の両方の1と「値」が指定されていないされている場合、タイプは「キー」によって指定されたスカラー型です。"
    },
    {
      "indent": 6,
      "text": "If \"min\" is not 1 or \"max\" is not 1, or both, and \"value\" is not specified, the type is a set of scalar type \"key\".",
      "ja": "「min」は1ないか、「最大」は1、またはその両方ではなく、「値」が指定されていない場合は、タイプはスカラ型「キー」のセットです。"
    },
    {
      "indent": 6,
      "text": "If \"value\" is specified, the type is a map from type \"key\" to type \"value\".",
      "ja": "「値」が指定されている場合は、タイプが「値」を入力するタイプの「鍵」からのマップです。"
    },
    {
      "indent": 3,
      "text": "<base-type> The type of a key or value in a database column. Either an <atomic-type> or a JSON object with the following members:",
      "ja": "<塩基型>データベースの列のキーまたは値のタイプ。 <アトミック型>以下部材とJSONオブジェクトのいずれか："
    },
    {
      "indent": 9,
      "text": "\"type\": <atomic-type>            required\n\"enum\": <value>                  optional\n\"minInteger\": <integer>          optional, integers only\n\"maxInteger\": <integer>          optional, integers only\n\"minReal\": <real>                optional, reals only\n\"maxReal\": <real>                optional, reals only\n\"minLength\": <integer>           optional, strings only\n\"maxLength\": <integer>           optional, strings only\n\"refTable\": <id>                 optional, UUIDs only\n\"refType\": \"strong\" or \"weak\"    optional, only with \"refTable\"",
      "raw": true
    },
    {
      "indent": 6,
      "text": "An <atomic-type> by itself is equivalent to a JSON object with a single member \"type\" whose value is the <atomic-type>.",
      "ja": "単独で<アトミック型>値<アトミック型>は単一の部材「タイプ」とJSONオブジェクトと等価です。"
    },
    {
      "indent": 6,
      "text": "\"enum\" may be specified as a <value> whose type is a set of one or more values specified for the member \"type\". If \"enum\" is specified, then the valid values of the <base-type> are limited to those in the <value>.",
      "ja": "「列挙」は、その型部材「タイプ」に指定された1つ以上の値のセットである。<値>のように指定することができます。 「列挙」を指定した場合、その後<塩基型>の有効な値は、<値>のものに限定されています。"
    },
    {
      "indent": 6,
      "text": "\"enum\" is mutually exclusive with the following constraints:",
      "ja": "「列挙型」とは、以下の制約と相互に排他的です。"
    },
    {
      "indent": 9,
      "text": "If \"type\" is \"integer\", then \"minInteger\" or \"maxInteger\" or both may also be specified, restricting the valid integer range. If both are specified, then \"maxInteger\" must be greater than or equal to \"minInteger\".",
      "ja": "「タイプ」が「整数」である場合、「minInteger」または「maxInteger」または両方はまた、有効な整数の範囲を制限する、指定されてもよいです。両方が指定されている場合、「maxInteger」は「minInteger」以上でなければなりません。"
    },
    {
      "indent": 9,
      "text": "If \"type\" is \"real\", then \"minReal\" or \"maxReal\" or both may also be specified, restricting the valid real range. If both are specified, then \"maxReal\" must be greater than or equal to \"minReal\".",
      "ja": "「タイプ」は、「本物」である場合には、「MINREAL」または「MAXREAL」または両方が、有効な本当の範囲を制限し、指定することができます。両方が指定されている場合、「MAXREAL」は、より大きいまたは「MINREAL」に等しくなければなりません。"
    },
    {
      "indent": 9,
      "text": "If \"type\" is \"string\", then \"minLength\" and \"maxLength\" or both may be specified, restricting the valid length of value strings. If both are specified, then \"maxLength\" must be greater than or equal to \"minLength\". String length is measured in characters.",
      "ja": "「タイプ」は「文字列」である場合には、「はminLength」と「maxLengthの」または両方の値は文字列の有効な長さを制限し、指定することができます。両方が指定されている場合、「maxLengthの」は、より大きいまたは「はminLength」に等しくなければなりません。文字列の長さは文字数で測定されます。"
    },
    {
      "indent": 9,
      "text": "If \"type\" is \"uuid\", then \"refTable\", if present, must be the name of a table within this database. If \"refTable\" is specified, then \"refType\" may also be specified. If \"refTable\" is set, the effect depends on \"refType\":",
      "ja": "「タイプ」は、「UUID」の場合、「refTable」、存在する場合は、このデータベース内のテーブルの名前でなければなりません。 「refTable」が指定されている場合は、「refType」も指定することができます。 「refTable」が設定されている場合、効果は「refType」に依存します。"
    },
    {
      "indent": 9,
      "text": "+ If \"refType\" is \"strong\" or if \"refType\" is omitted, the allowed UUIDs are limited to UUIDs for rows in the named table.",
      "ja": "+「refType」は「強い」または「refType」を省略した場合、許可されたUUIDは、指定したテーブル内の行のためのUUIDに限定されている場合。"
    },
    {
      "indent": 9,
      "text": "+ If \"refType\" is \"weak\", then any UUIDs are allowed, but UUIDs that do not correspond to rows in the named table will be automatically deleted. When this situation arises in a map, both the key and the value will be deleted from the map.",
      "ja": "「refType」は「弱い」の場合は+、その後、任意のUUIDが許可されていますが、名前のテーブルの行に対応していないUUIDが自動的に削除されます。この状況がマップで発生すると、キーと値の両方がマップから削除されます。"
    },
    {
      "indent": 6,
      "text": "\"refTable\" constraints are \"deferred\" constraints: they are enforced only at transaction commit time (see the \"transact\" request in Section 4.1.3). The other constraints on <base-type> are \"immediate\", enforced immediately by each operation.",
      "ja": "彼らは時間をコミットトランザクションのみで施行されます（4.1.3項で「のTransact」要求を参照してください）：「refTable」制約は「延期」制約です。 <塩基型>上の他の制約は、「即時」の各操作によって直ちに適用されます。"
    },
    {
      "indent": 3,
      "text": "<atomic-type> One of the strings \"integer\", \"real\", \"boolean\", \"string\", or \"uuid\", representing the specified scalar type.",
      "ja": "<アトミック型>文字列「整数」、「本物」、「ブール」、「文字列」の一つ、または指定されたスカラー型を表す、「UUID」。"
    },
    {
      "indent": 0,
      "text": "4. Wire Protocol",
      "section_title": true,
      "ja": "4.ワイヤプロトコル"
    },
    {
      "indent": 3,
      "text": "The database wire protocol is implemented in JSON-RPC 1.0 [JSON-RPC]. While the JSON-RPC specification allows a range of transports, implementations of this specification SHOULD operate directly over TCP. See Section 6 for discussion of the TCP port.",
      "ja": "データベースワイヤプロトコルは、JSON-RPC 1.0 [JSON-RPC]に実装されています。 JSON-RPC仕様はトランスポートの範囲を可能にしながら、この仕様の実装は、TCP上で直接動作しなければなりません。 TCPポートの議論については、セクション6を参照してください。"
    },
    {
      "indent": 0,
      "text": "4.1. RPC Methods",
      "section_title": true,
      "ja": "4.1。 RPCメソッド"
    },
    {
      "indent": 3,
      "text": "The following subsections describe the RPC methods that are supported. As described in the JSON-RPC 1.0 specification, each request comprises a string containing the name of the method, a (possibly null) array of parameters to pass to the method, and a request ID, which can be used to match the response to the request. Each response comprises a result object (non-null in the event of a successful invocation), an error object (non-null in the event of an error), and the ID of the matching request. More details on each method, its parameters, and its results are described below.",
      "ja": "以下のサブセクションでは、サポートされているRPCの方法が記載されています。 JSON-RPC 1.0仕様に記載されているように、各要求は、への応答を一致させるために使用することができるメソッドの名前を含む文字列、メソッドに渡すパラメータ（nullの可能性がある）アレイ、および要求IDを含みますリクエスト。各応答は、結果オブジェクト（非ヌル成功呼び出しの場合）、エラーオブジェクト（エラー発生時の非ヌル）、及びマッチング要求のIDを含みます。以上の各方法の詳細は、そのパラメータ、およびその結果を以下に記載します。"
    },
    {
      "indent": 3,
      "text": "An OVSDB server MUST implement all of the following methods. An OVSDB client MUST implement the \"Echo\" method and is otherwise free to implement whichever methods suit the implementation's needs.",
      "ja": "OVSDBサーバは、次の方法のすべてを実装しなければなりません。 OVSDBクライアントは、「エコー」メソッドを実装し、実装のニーズに合わせどちらのメソッドを実装するそう自由である必要があります。"
    },
    {
      "indent": 3,
      "text": "The operations that may be performed on the OVS database using these methods (e.g., the \"transact\" method) are described in Section 5.",
      "ja": "これらの方法（例えば、「のTransact」法）を使用して、OVSデータベース上で実行される動作は、セクション5に記載されています。"
    },
    {
      "indent": 0,
      "text": "4.1.1. List Databases",
      "section_title": true,
      "ja": "4.1.1。一覧データベース"
    },
    {
      "indent": 3,
      "text": "This operation retrieves an array whose elements are the names of the databases that can be accessed over this management protocol connection.",
      "ja": "この操作は、その要素がこの管理プロトコル接続を介してアクセスすることができるデータベースの名前である配列を検索します。"
    },
    {
      "indent": 3,
      "text": "The request object contains the following members:",
      "ja": "リクエストオブジェクトは、次のメンバーが含まれます。"
    },
    {
      "indent": 3,
      "text": "o  \"method\": \"list_dbs\"",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o  \"params\": []",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o \"id\": <nonnull-json-value>",
      "ja": "O \"ID\"：<NULL以外-jsonの値>"
    },
    {
      "indent": 3,
      "text": "The response object contains the following members:",
      "ja": "レスポンスオブジェクトには、次のメンバーが含まれます。"
    },
    {
      "indent": 3,
      "text": "o  \"result\": [<db-name>,...]",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o \"error\": null",
      "ja": "O「エラー」：ヌル"
    },
    {
      "indent": 3,
      "text": "o \"id\": same \"id\" as request",
      "ja": "O \"ID\"：要求と同じ \"ID\""
    },
    {
      "indent": 0,
      "text": "4.1.2. Get Schema",
      "section_title": true,
      "ja": "4.1.2。スキーマを取得"
    },
    {
      "indent": 3,
      "text": "This operation retrieves a <database-schema> that describes hosted database <db-name>.",
      "ja": "この操作では、<データベース・スキーマを>取得するホストされたデータベース<DB-name>を記述しています。"
    },
    {
      "indent": 3,
      "text": "The request object contains the following members:",
      "ja": "リクエストオブジェクトは、次のメンバーが含まれます。"
    },
    {
      "indent": 3,
      "text": "o  \"method\": \"get_schema\"",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o  \"params\": [<db-name>]",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o \"id\": <nonnull-json-value>",
      "ja": "O \"ID\"：<NULL以外-jsonの値>"
    },
    {
      "indent": 3,
      "text": "The response object contains the following members:",
      "ja": "レスポンスオブジェクトには、次のメンバーが含まれます。"
    },
    {
      "indent": 3,
      "text": "o \"result\": <database-schema>",
      "ja": "O「結果」：<データベーススキーマ>"
    },
    {
      "indent": 3,
      "text": "o \"error\": null",
      "ja": "O「エラー」：ヌル"
    },
    {
      "indent": 3,
      "text": "o \"id\": same \"id\" as request",
      "ja": "O \"ID\"：要求と同じ \"ID\""
    },
    {
      "indent": 3,
      "text": "In the event that the database named in the request does not exist, the server sends a JSON-RPC error response of the following form:",
      "ja": "要求で指定されたデータベースが存在しない場合には、サーバーは、次の形式のJSON-RPCエラー応答を送信します。"
    },
    {
      "indent": 3,
      "text": "o \"result\": null",
      "ja": "O「結果」：ヌル"
    },
    {
      "indent": 3,
      "text": "o  \"error\": \"unknown database\"",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o \"id\": same \"id\" as request",
      "ja": "O \"ID\"：要求と同じ \"ID\""
    },
    {
      "indent": 0,
      "text": "4.1.3. Transact",
      "section_title": true,
      "ja": "4.1.3。取引します"
    },
    {
      "indent": 3,
      "text": "This RPC method causes the database server to execute a series of operations in the specified order on a given database.",
      "ja": "このRPCメソッドは、指定されたデータベースで指定された順序で一連の動作を実行するデータベース・サーバを引き起こします。"
    },
    {
      "indent": 3,
      "text": "The request object contains the following members:",
      "ja": "リクエストオブジェクトは、次のメンバーが含まれます。"
    },
    {
      "indent": 3,
      "text": "o  \"method\": \"transact\"",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o  \"params\": [<db-name>, <operation>*]",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o \"id\": <nonnull-json-value>",
      "ja": "O \"ID\"：<NULL以外-jsonの値>"
    },
    {
      "indent": 3,
      "text": "The value of \"id\" MUST be unique among all in-flight transactions within the current JSON-RPC session. Otherwise, the server may return a JSON-RPC error.",
      "ja": "「ID」の値は、現在のJSON-RPCセッション内のすべての中のトランザクションの中で一意でなければなりません。そうしないと、サーバはJSON-RPCエラーを返すことがあります。"
    },
    {
      "indent": 3,
      "text": "The \"params\" array for this method consists of a <db-name> that identifies the database to which the transaction applies, followed by zero or more JSON objects, each of which represents a single database operation. Section 5 describes the valid operations. The database server executes each of the specified operations in the specified order, except if an operation fails, then the remaining operations are not executed. The set of operations is executed as a single atomic, consistent, isolated transaction. The transaction is committed if and only if every operation succeeds. Durability of the commit is not guaranteed unless the \"commit\" operation, with \"durable\" set to true, is included in the operation set. See Section 5 for more discussion of the database operations.",
      "ja": "この方法は、「paramsは」アレイは、単一のデータベース操作を表し、各々がゼロ以上のJSONオブジェクト、続いてトランザクションが適用されるデータベースを識別する<DB名>で構成されています。第5節では、有効な操作について説明します。データベースサーバは、残りの操作が実行されない、操作が失敗した場合を除き、指定された順序で指定された操作のそれぞれを実行します。操作のセットは、単一の原子、一貫性の、単離されたトランザクションとして実行されます。そして、すべての操作が成功した場合だけ、トランザクションがコミットされます。コミットの耐久性をtrueに設定し、「耐久性」が、操作セットに含まれていると、「コミット」操作しない限り、保証するものではありません。データベース操作のより多くの議論については、セクション5を参照してください。"
    },
    {
      "indent": 3,
      "text": "The response object contains the following members:",
      "ja": "レスポンスオブジェクトには、次のメンバーが含まれます。"
    },
    {
      "indent": 3,
      "text": "o  \"result\": [<object>*]",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o \"error\": null",
      "ja": "O「エラー」：ヌル"
    },
    {
      "indent": 3,
      "text": "o \"id\": same \"id\" as request",
      "ja": "O \"ID\"：要求と同じ \"ID\""
    },
    {
      "indent": 3,
      "text": "Regardless of whether errors occur in the database operations, the response is always a JSON-RPC response with null \"error\" and a \"result\" member that is an array with the same number of elements as \"params\". Each element of the \"result\" array corresponds to the same element of the \"params\" array. The \"result\" array elements may be interpreted as follows:",
      "ja": "かかわらず、エラーがデータベース操作で発生するかどうかの、応答は常にnull「エラー」と「のparams」と同じ数の要素を持つ配列である「結果」部材とJSON-RPC応答です。 「結果」配列の各要素は、「paramsは、」配列の同一要素に対応します。次のように「結果」配列要素を解釈することができます。"
    },
    {
      "indent": 3,
      "text": "o A JSON object that does not contain an \"error\" member indicates that the operation completed successfully. The specific members of the object are specified below in the descriptions of individual operations. Some operations do not produce any results, in which case the object will have no members.",
      "ja": "O「エラー」メンバーが含まれていないJSONオブジェクトは、操作が正常に完了したことを示しています。オブジェクトの特定のメンバーは、個々の操作の説明に以下に指定されています。一部の操作は、オブジェクトがメンバーを持ちません。その場合には任意の結果を、生成されません。"
    },
    {
      "indent": 3,
      "text": "o An <error> indicates that the matching operation completed with an error.",
      "ja": "<エラー> oを整合動作がエラーで終了したことを示しています。"
    },
    {
      "indent": 3,
      "text": "o A JSON null value indicates that the operation was not attempted because a prior operation failed.",
      "ja": "O JSONヌル値は、前の操作が失敗したため、操作が試行されなかったことを示しています。"
    },
    {
      "indent": 3,
      "text": "In general, \"result\" contains some number of successful results, possibly followed by an error, in turn followed by enough JSON null values to match the number of elements in \"params\". There is one exception: if all of the operations succeed, but the results cannot be committed, then \"result\" will have one more element than \"params\", with the additional element being an <error>. In this case, the possible \"error\" strings include the following:",
      "ja": "一般に、「結果」は、おそらくエラーが続く成功した結果のいくつかの数が、今度は「paramsは」内の要素の数と一致するのに十分なJSON null値が続く含ま。 1つの例外があります：すべての操作が成功したが、その結果をコミットすることができない場合は、「結果」の追加要素は<エラー>であることと、「のparams」よりも、もう一つの要素を持つことになります。この場合は、可能な「エラー」の文字列は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "\"error\": \"referential integrity violation\"\n   When the commit was attempted, a column's value referenced the\n   UUID for a row that did not exist in the table named by the\n   column's <base-type> key or value \"refTable\" that has a \"refType\"\n   of \"strong\".  (This can be caused by inserting a row that\n   references a nonexistent row, by deleting a row that is still\n   referenced by another row, by specifying the UUID for a row in the\n   wrong table, and other ways.)",
      "raw": true
    },
    {
      "indent": 3,
      "text": "\"error\": \"constraint violation\"\n   A number of situations can arise in which the attempted commit\n   would lead to a constraint on the database being violated.  (See\n   Section 3.2 for more discussion of constraints.)  These situations\n   include:",
      "raw": true
    },
    {
      "indent": 6,
      "text": "* The number of rows in a table exceeds the maximum number permitted by the table's \"maxRows\" value.",
      "ja": "*表内の行の数は、テーブルの「maxRowsの」値で許可された最大数を超えています。"
    },
    {
      "indent": 6,
      "text": "* Two or more rows in a table had the same values in the columns that comprise an index.",
      "ja": "*表中の二つ以上の行は、インデックスを構成する列に同じ値を持っていました。"
    },
    {
      "indent": 6,
      "text": "* A column with a <base-type> key or value \"refTable\" whose \"refType\" is \"weak\" became empty due to deletion(s), and this column is not allowed to be empty because its <type> has a \"min\" of 1. Such deletions may be the result of rows that it referenced being deleted (or never having existed, if the column's row was inserted within the transaction).",
      "ja": "「refType」「弱」であるによる欠失（単数または複数）に空になり、その<タイプ>」を有するため、この列が空であることを許可されていない<塩基型>キーまたは値「refTable」と*カラム1.このような欠失の分」とは、（列の行がトランザクション内に挿入された場合、または決して存在していた）が削除されていない参照の行の結果であり得ます。"
    },
    {
      "indent": 3,
      "text": "\"error\": \"resources exhausted\"\n   The operation requires more resources (memory, disk, CPU, etc.)\n   than are currently available to the database server.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "\"error\": \"I/O error\"\n   Problems accessing the disk, network, or other required resources\n   prevented the operation from completing.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "If \"params\" contains one or more \"wait\" operations, then the transaction may take an arbitrary amount of time to complete. The database implementation MUST be capable of accepting, executing, and replying to other transactions and other JSON-RPC requests while a transaction or transactions containing \"wait\" operations are outstanding on the same or different JSON-RPC sessions.",
      "ja": "「のparamsは、」1つ以上の操作を「待つ」が含まれている場合は、そのトランザクションが完了するまでに時間の任意の金額がかかる場合があります。データベース実装は、受け入れ実行、および動作は、同一または異なるJSON-RPCセッションに傑出している「待機」を含むトランザクションまたはトランザクションの間に、他のトランザクションおよび他のJSON-RPCリクエストに応答できなければなりません。"
    },
    {
      "indent": 0,
      "text": "4.1.4. Cancel",
      "section_title": true,
      "ja": "4.1.4。キャンセル"
    },
    {
      "indent": 3,
      "text": "The \"cancel\" method is a JSON-RPC notification, i.e., no matching response is provided. It instructs the database server to immediately complete or cancel the \"transact\" request whose \"id\" is the same as the notification's \"params\" value. The notification object has the following members:",
      "ja": "「キャンセル」方法は、JSON-RPC通知、すなわち、該当する応答が提供されていないです。それはすぐに完全なデータベース・サーバに指示するか、その「ID」通知の「のparams」値と同じである「のTransact」要求を取り消します。通知オブジェクトは、以下のメンバーがあります。"
    },
    {
      "indent": 3,
      "text": "o  \"method\": \"cancel\"",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o  \"params\": [the \"id\" for an outstanding request]",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o \"id\": null",
      "ja": "O \"ID\"：ヌル"
    },
    {
      "indent": 3,
      "text": "If the \"transact\" request can be completed immediately, then the server sends a response in the form described for \"transact\" (Section 4.1.3). Otherwise, the server sends a JSON-RPC error response of the following form:",
      "ja": "「のTransact」要求がすぐに完了できる場合、サーバは、「のTransact」（4.1.3項）について記載形式の応答を送信します。そうしないと、サーバーは、次の形式のJSON-RPCエラー応答を送信します。"
    },
    {
      "indent": 3,
      "text": "o \"result\": null",
      "ja": "O「結果」：ヌル"
    },
    {
      "indent": 3,
      "text": "o  \"error\": \"canceled\"",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o \"id\": the \"id\" member of the canceled request.",
      "ja": "O「である」：キャンセルリクエストの「ID」メンバー。"
    },
    {
      "indent": 3,
      "text": "The \"cancel\" notification itself has no reply.",
      "ja": "「キャンセル」通知自体には何の返事がありません。"
    },
    {
      "indent": 0,
      "text": "4.1.5. Monitor",
      "section_title": true,
      "ja": "4.1.5。モニター"
    },
    {
      "indent": 3,
      "text": "The \"monitor\" request enables a client to replicate tables or subsets of tables within an OVSDB database by requesting notifications of changes to those tables and by receiving the complete initial state of a table or a subset of a table. The request object has the following members:",
      "ja": "「モニター」の要求は、それらのテーブルへの変更の通知を要求することにより、テーブルの完全な初期状態やテーブルのサブセットを受信することによりOVSDBデータベース内のテーブルまたはテーブルのサブセットを複製するクライアントを可能にします。リクエスト・オブジェクトには、以下のメンバーがあります。"
    },
    {
      "indent": 3,
      "text": "o  \"method\": \"monitor\"",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o  \"params\": [<db-name>, <json-value>, <monitor-requests>]",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o \"id\": <nonnull-json-value>",
      "ja": "O \"ID\"：<NULL以外-jsonの値>"
    },
    {
      "indent": 3,
      "text": "The <json-value> parameter is used to match subsequent update notifications (see below) to this request. The <monitor-requests> object maps the name of the table to be monitored to an array of <monitor-request> objects.",
      "ja": "<JSON値>パラメータはこの要求に（下記参照）、その後の更新通知を一致させるために使用されます。 <モニター・リクエスト>オブジェクトは<モニター要求>オブジェクトの配列を監視するためのテーブルの名前をマップします。"
    },
    {
      "indent": 3,
      "text": "Each <monitor-request> is an object with the following members:",
      "ja": "各<モニター-要求>は、以下のメンバーを持つオブジェクトです。"
    },
    {
      "indent": 7,
      "text": "\"columns\": [<column>*]            optional\n\"select\": <monitor-select>        optional",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The columns, if present, define the columns within the table to be monitored. <monitor-select> is an object with the following members:",
      "ja": "列は、存在する場合、監視対象のテーブル内の列を定義します。 <モニターセレクト>は、以下のメンバーを持つオブジェクトです。"
    },
    {
      "indent": 7,
      "text": "\"initial\": <boolean>              optional\n\"insert\": <boolean>               optional\n\"delete\": <boolean>               optional\n\"modify\": <boolean>               optional",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The contents of this object specify how the columns or table are to be monitored, as explained in more detail below.",
      "ja": "このオブジェクトの内容は、列または表は、以下でより詳細に説明するように、監視されるべき方法を指定します。"
    },
    {
      "indent": 3,
      "text": "The response object has the following members:",
      "ja": "レスポンスオブジェクトには、次のメンバーがあります。"
    },
    {
      "indent": 3,
      "text": "o \"result\": <table-updates>",
      "ja": "O「結果」：<テーブルの更新>"
    },
    {
      "indent": 3,
      "text": "o \"error\": null",
      "ja": "O「エラー」：ヌル"
    },
    {
      "indent": 3,
      "text": "o \"id\": same \"id\" as request",
      "ja": "O \"ID\"：要求と同じ \"ID\""
    },
    {
      "indent": 3,
      "text": "The <table-updates> object is described in detail in Section 4.1.6. It contains the contents of the tables for which \"initial\" rows are selected. If no tables' initial contents are requested, then \"result\" is an empty object.",
      "ja": "<テーブル更新>オブジェクトは、セクション4.1.6に詳細に記載されています。これは、「初期」の行が選択されているテーブルの内容が含まれています。いいえテーブル初期の内容が要求されている場合は、 『結果は』空のオブジェクトです。"
    },
    {
      "indent": 3,
      "text": "Subsequently, when changes to the specified tables are committed, the changes are automatically sent to the client using the \"update\" monitor notification (see Section 4.1.6). This monitoring persists until the JSON-RPC session terminates or until the client sends a \"monitor_cancel\" JSON-RPC request.",
      "ja": "指定されたテーブルへの変更がコミットされた場合、その後、変更は自動的に「更新」モニター通知を使用してクライアントに送信されます（セクション4.1.6を参照してください）。 JSON-RPCセッションが終了するか、クライアントが「monitor_cancel」JSON-RPCリクエストを送信するまでになるまでこの監視は持続します。"
    },
    {
      "indent": 3,
      "text": "Each <monitor-request> specifies one or more columns and the manner in which the columns (or the entire table) are to be monitored. The \"columns\" member specifies the columns whose values are monitored. It MUST NOT contain duplicates. If \"columns\" is omitted, all columns in the table, except for \"_uuid\", are monitored. The circumstances in which an \"update\" notification is sent for a row within the table are determined by <monitor-select>:",
      "ja": "各<モニタ要求>は、1つ以上の列と列（またはテーブル全体）が監視されるべき方法を指定します。 「列」メンバーは、その値が監視されている列を指定します。これは、重複を含めることはできません。 「列」が省略された場合、テーブルのすべての列は、「_uuid」を除いて、監視されています。 「更新」通知はテーブル内の行のために送信される状況は、<モニターセレクト>によって決定されます。"
    },
    {
      "indent": 3,
      "text": "o If \"initial\" is omitted or true, every row in the table is sent as part of the response to the \"monitor\" request.",
      "ja": "「初期」省略または真である場合、O、表の各行は、「モニタ」要求への応答の一部として送信されます。"
    },
    {
      "indent": 3,
      "text": "o If \"insert\" is omitted or true, \"update\" notifications are sent for rows newly inserted into the table.",
      "ja": "「挿入」は省略または真されている場合は、O、「更新」の通知が新たにテーブルに挿入された行のために送信されます。"
    },
    {
      "indent": 3,
      "text": "o If \"delete\" is omitted or true, \"update\" notifications are sent for rows deleted from the table.",
      "ja": "O「削除」場合は省略されているか、本当の、「更新」の通知が表から削除された行のために送信されます。"
    },
    {
      "indent": 3,
      "text": "o If \"modify\" is omitted or true, \"update\" notifications are sent whenever a row in the table is modified.",
      "ja": "省略または真である「修正」した場合、テーブルの行が変更されるたびに、「更新」通知が送信され、O。"
    },
    {
      "indent": 3,
      "text": "If there is more than one <monitor-request> in an array, then each <monitor-request> in the array should specify both \"columns\" and \"select\", and the \"columns\" MUST be non-overlapping sets.",
      "ja": "複数の両方の「列」を指定し、「選択」する必要があり、アレイ内、アレイ内の<モニタ要求>各<モニタ要求>、及び「列」がある場合、非重複セットでなければなりません。"
    },
    {
      "indent": 0,
      "text": "4.1.6. Update Notification",
      "section_title": true,
      "ja": "4.1.6。アップデート通知"
    },
    {
      "indent": 3,
      "text": "The \"update\" notification is sent by the server to the client to report changes in tables that are being monitored following a \"monitor\" request as described above. The notification has the following members:",
      "ja": "「更新」通知が上記のように「モニター」の要求を次のように監視されているテーブルの変更を報告するためにサーバからクライアントに送信されます。通知には、以下のメンバーがあります。"
    },
    {
      "indent": 3,
      "text": "o  \"method\": \"update\"",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o  \"params\": [<json-value>, <table-updates>]",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o \"id\": null",
      "ja": "O \"ID\"：ヌル"
    },
    {
      "indent": 3,
      "text": "The <json-value> in \"params\" is the same as the value passed as the <json-value> in \"params\" for the corresponding \"monitor\" request. <table-updates> is an object that maps from a table name to a <table-update>. A <table-update> is an object that maps from the row's UUID to a <row-update> object. A <row-update> is an object with the following members:",
      "ja": "要求を「監視」に対応するため「のparams」で<JSON値>「のparams」で<JSON値>として渡された値と同じです。 <テーブルの更新> <テーブル更新>にテーブル名からマッピングするオブジェクトです。 <テーブル更新> <行更新>オブジェクトに行のUUIDからマッピングするオブジェクトです。 <行更新>は、以下のメンバーを持つオブジェクトです。"
    },
    {
      "indent": 4,
      "text": "\"old\": <row> present for \"delete\" and \"modify\" updates \"new\": <row> present for \"initial\", \"insert\", and \"modify\" updates",
      "ja": "「古い」：「削除」と「修正」アップデート「新」のための本<行>：<行>のための本、「挿入」、およびアップデートを「修正」「初期」"
    },
    {
      "indent": 3,
      "text": "The format of <row> is described in Section 5.1.",
      "ja": "<行>のフォーマットは、セクション5.1に記載されています。"
    },
    {
      "indent": 3,
      "text": "Each table in which one or more rows has changed (or whose initial view is being presented) is represented in <table-updates>. Each row that has changed (or whose initial view is being presented) is represented in its <table-update> as a member with its name taken from the row's \"_uuid\" member. The corresponding value is a <row-update>:",
      "ja": "1つまたは複数の行が変更された各テーブル（又はその初期ビュー提示されている）<テーブル更新>で表されています。変更された各行は（又は、その初期ビュー提示されている）の行の「_uuid」メンバーから取られ、その名前のメンバとしての<テーブル更新>で表されています。対応する値は<行更新>です。"
    },
    {
      "indent": 3,
      "text": "o The \"old\" member is present for \"delete\" and \"modify\" updates. For \"delete\" updates, each monitored column is included. For \"modify\" updates, the prior value of each monitored column whose value has changed is included (monitored columns that have not changed are represented in \"new\").",
      "ja": "O「古い」メンバーは、「削除」と更新を「修正」のために存在しています。 「削除」の更新については、監視対象の各列が含まれています。更新を「変更」するために、値変更された監視対象の各列の前の値は、（変更されていない監視列が「新しい」で表現される）が含まれます。"
    },
    {
      "indent": 3,
      "text": "o The \"new\" member is present for \"initial\", \"insert\", and \"modify\" updates. For \"initial\" and \"insert\" updates, each monitored column is included. For \"modify\" updates, the new value of each monitored column is included.",
      "ja": "O「新しい」メンバーが「変更」、「挿入」「初期」、および更新のための存在です。 「挿入」「初期」と更新については、監視対象の各列が含まれています。 「変更」の更新については、監視対象の各列の新しい値が含まれています。"
    },
    {
      "indent": 3,
      "text": "Note that initial views of rows are not presented in update notifications, but in the response object to the monitor request. The formatting of the <table-updates> object, however, is the same in either case.",
      "ja": "行の最初のビューが更新の通知で提示さが、監視要求に対する応答オブジェクトにされていないことに注意してください。 <テーブル更新>オブジェクトのフォーマットは、しかし、いずれの場合においても同様です。"
    },
    {
      "indent": 0,
      "text": "4.1.7. Monitor Cancellation",
      "section_title": true,
      "ja": "4.1.7。モニターのキャンセル"
    },
    {
      "indent": 3,
      "text": "The \"monitor_cancel\" request cancels a previously issued monitor request. The request object members are:",
      "ja": "「monitor_cancel」要求は、以前に発行された監視要求をキャンセルします。リクエストオブジェクトのメンバーは以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "o  \"method\": \"monitor_cancel\"",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o  \"params\": [<json-value>]",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o \"id\": <nonnull-json-value>",
      "ja": "O \"ID\"：<NULL以外-jsonの値>"
    },
    {
      "indent": 3,
      "text": "The <json-value> in \"params\" matches the <json-value> in \"params\" for the ongoing \"monitor\" request that is to be canceled. No more \"update\" messages will be sent for this table monitor. The response to this request has the following members:",
      "ja": "<JSON値>「のparams」でキャンセルされる継続的な「モニタ」リクエストに対して「paramsは」の<JSON値>を一致。これ以上の「更新」のメッセージは、この表のモニターのために送信されません。この要求への応答は以下のメンバーがあります。"
    },
    {
      "indent": 3,
      "text": "o  \"result\": {}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o \"error\": null",
      "ja": "O「エラー」：ヌル"
    },
    {
      "indent": 3,
      "text": "o \"id\": the request \"id\" member",
      "ja": "O「である」：リクエスト「ID」メンバー"
    },
    {
      "indent": 3,
      "text": "In the event that a monitor cancellation request refers to an unknown monitor request, an error response with the following members is returned:",
      "ja": "モニター解除要求が未知の監視要求を指しイベントでは、以下のメンバーとエラー応答が返されます。"
    },
    {
      "indent": 3,
      "text": "o \"result\": null",
      "ja": "O「結果」：ヌル"
    },
    {
      "indent": 3,
      "text": "o  \"error\": \"unknown monitor\"",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o \"id\": the request \"id\" member",
      "ja": "O「である」：リクエスト「ID」メンバー"
    },
    {
      "indent": 0,
      "text": "4.1.8. Lock Operations",
      "section_title": true,
      "ja": "4.1.8。ロック操作"
    },
    {
      "indent": 3,
      "text": "Three RPC methods, \"lock\", \"steal\", and \"unlock\", provide support to clients to perform locking operations on the database. The database server supports an arbitrary number of locks, each of which is identified by a client-defined ID. At any given time, each lock may have at most one owner. The precise usage of a lock is determined by the client. For example, a set of clients may agree that a certain table can only be written by the owner of a certain lock. OVSDB itself does not enforce any restrictions on how locks are used -- it simply ensures that a lock has at most one owner.",
      "ja": "三つのRPCメソッド、データベース上のロック操作を実行するために、クライアントへのサポートを提供し、「盗む」、「ロック」、および「アンロック」。データベースサーバは、クライアント定義IDによって識別されるそれぞれがロック、任意の数をサポートします。どの時点でも、各ロックは、最大1つの所有者であってもよいです。ロックの正確な使用方法は、クライアントによって決定されます。例えば、クライアントのセットは、特定のテーブルのみが特定のロックの所有者によって記述することができることに同意してもよいです。 OVSDB自体はロックが使用されている方法に特に制限はありません - それは単にロックが多くても1つの所有者であることを保証します。"
    },
    {
      "indent": 3,
      "text": "The RPC request objects have the following members:",
      "ja": "RPC要求オブジェクトは、以下のメンバーがあります。"
    },
    {
      "indent": 3,
      "text": "o  \"method\": \"lock\", \"steal\", or \"unlock\"",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o  \"params\": [<id>]",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o \"id\": <nonnull-json-value>",
      "ja": "O \"ID\"：<NULL以外-jsonの値>"
    },
    {
      "indent": 3,
      "text": "The response depends on the request and has the following members:",
      "ja": "応答は、要求に依存し、以下のメンバーがあります。"
    },
    {
      "indent": 3,
      "text": "o  \"result\": {\"locked\": boolean} for \"lock\"",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o  \"result\": {\"locked\": true} for \"steal\"",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o  \"result\": {} for \"unlock\"",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o \"error\": null",
      "ja": "O「エラー」：ヌル"
    },
    {
      "indent": 3,
      "text": "o \"id\": same \"id\" as request",
      "ja": "O \"ID\"：要求と同じ \"ID\""
    },
    {
      "indent": 3,
      "text": "The three methods operate as follows:",
      "ja": "次のように3つの方法が動作します。"
    },
    {
      "indent": 3,
      "text": "o \"lock\": The database will assign this client ownership of the lock as soon as it becomes available. When multiple clients request the same lock, they will receive it in first-come, first-served order.",
      "ja": "O「ロック」：データベースはすぐにそれが利用可能になるように、ロックのこのクライアントの所有権を割り当てます。複数のクライアントが同じロックを要求すると、彼らは先着順の順序でそれを受け取ることになります。"
    },
    {
      "indent": 3,
      "text": "o \"steal\": The database immediately assigns this client ownership of the lock. If there is an existing owner, it loses ownership.",
      "ja": "O「盗む」：データベースは、即座にロックのこのクライアントの所有権を割り当てます。既存の所有者が存在する場合、それは所有権を失います。"
    },
    {
      "indent": 3,
      "text": "o \"unlock\": If the client owns the lock, this operation releases it. If the client has requested ownership of the lock, this cancels the request.",
      "ja": "O「アンロック」：クライアントがロックを所有している場合、この操作は、それを解放します。クライアントは、ロックの所有権を要求した場合、これは要求をキャンセルします。"
    },
    {
      "indent": 6,
      "text": "(Closing or otherwise disconnecting a database client connection unlocks all of its locks.)",
      "ja": "（閉会あるいはデータベースクライアント接続を切断すると、そのロックのすべてのロックを解除します。）"
    },
    {
      "indent": 3,
      "text": "For any given lock, the client MUST alternate \"lock\" or \"steal\" operations with \"unlock\" operations. That is, if the previous operation on a lock was \"lock\" or \"steal\", it MUST be followed by an \"unlock\" operation, and vice versa.",
      "ja": "任意のロックのために、クライアントは、「ロック」又は「アンロック」操作で操作を「盗む」交互にしなければなりません。ロック上の前の操作が「ロック」または「盗む」であった場合には、それは「ロック解除」操作、およびその逆が続かなければならないれます。"
    },
    {
      "indent": 3,
      "text": "For a \"lock\" operation, the \"locked\" member in the response object is true if the lock has already been acquired and false if another client holds the lock and the client's request for it was queued. In the latter case, the client will be notified later with a \"locked\" message (Section 4.1.9) when acquisition succeeds.",
      "ja": "ロックが既に取得して偽されている場合は、別のクライアントがロックを保持し、そのため、クライアントの要求がキューに入れられた場合には、「ロック」動作のために、応答オブジェクトで「ロック」メンバーは本当です。後者の場合、クライアントは、取得に成功した「ロック」メッセージ（セクション4.1.9）と、後に通知されます。"
    },
    {
      "indent": 3,
      "text": "These requests complete and send a response quickly, without waiting. The \"locked\" and \"stolen\" notifications (see below) report asynchronous changes to ownership.",
      "ja": "これらの要求を完全と待つことなく、すぐに応答を送信します。 「ロック」と「盗まれた」の通知が（下記参照）所有権への非同期の変更を報告します。"
    },
    {
      "indent": 3,
      "text": "Note that the scope of a lock is a database server, not a database hosted by that server. A client may choose to implement a naming convention, such as \"<db-name>__<lock-name>\", which can effectively limit the scope of a lock to a particular database.",
      "ja": "ロックのスコープは、データベース・サーバではなく、そのサーバーによってホストされたデータベースであることに注意してください。クライアントは、このような「<DB名> __ <ロック名>」として、命名規則を実装することを選択でき、効果的に特定のデータベースへのロックの範囲を制限することができました。"
    },
    {
      "indent": 0,
      "text": "4.1.9. Locked Notification",
      "section_title": true,
      "ja": "4.1.9。ロックされた通知"
    },
    {
      "indent": 3,
      "text": "The \"locked\" notification is provided to notify a client that it has been granted a lock that it had previously requested with the \"lock\" method described above. The notification has the following members:",
      "ja": "「ロック」通知は、それが以前に上記の「ロック」の方法で要求していたロックを許可されたことをクライアントに通知するために提供されます。通知には、以下のメンバーがあります。"
    },
    {
      "indent": 3,
      "text": "o  \"method\": \"locked\"",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o  \"params\": [<id>]",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o \"id\": null",
      "ja": "O \"ID\"：ヌル"
    },
    {
      "indent": 3,
      "text": "\"Params\" contains the name of the lock that was given in the \"lock\" request. The notified client now owns the lock named in \"params\".",
      "ja": "「paramsが」「ロック」の要求に与えられたロックの名前が含まれています。通知を受けたクライアントは現在、「のparams」で指定されたロックを所有しています。"
    },
    {
      "indent": 3,
      "text": "The database server sends this notification after the reply to the corresponding \"lock\" request (but only if the \"locked\" member of the response was false) and before the reply to the client's subsequent \"unlock\" request.",
      "ja": "データベースサーバは、対応する「ロック」要求（ただし、レスポンスの「ロック」メンバーが偽だった場合のみ）に、クライアントのその後の「ロック解除」要求に対する応答の前に返信した後、この通知を送信します。"
    },
    {
      "indent": 0,
      "text": "4.1.10. Stolen Notification",
      "section_title": true,
      "ja": "4.1.10。盗まれた通知"
    },
    {
      "indent": 3,
      "text": "The \"stolen\" notification is provided to notify a client, which had previously obtained a lock, that another client has stolen ownership of that lock. The notification has the following members:",
      "ja": "「盗まれた」通知が別のクライアントがそのロックの所有権を盗まれたことが、以前にロックを取得していたクライアントに通知するために提供されます。通知には、以下のメンバーがあります。"
    },
    {
      "indent": 3,
      "text": "o  \"method\": \"stolen\"",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o  \"params\": [<id>]",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o \"id\": null",
      "ja": "O \"ID\"：ヌル"
    },
    {
      "indent": 3,
      "text": "The notified client no longer owns the lock named in \"params\". The client MUST still issue an \"unlock\" request before performing any subsequent \"lock\" or \"steal\" operation on the lock.",
      "ja": "通知を受けたクライアントは、もはや「のparams」で指定されたロックを所有していません。クライアントは、まだロックに、後続の「ロック」または「盗む」操作を実行する前に、「ロック解除」要求を発行しなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the client originally obtained the lock through a \"lock\" request, then it will automatically regain the lock later after the client that stole it releases it. (The database server will send the client a \"locked\" notification at that point to let it know.)",
      "ja": "クライアントが最初に「ロック」の要求によってロックを取得した場合、それは自動的にそれを解放盗んだクライアントの後に、後にロックを取り戻すだろう。 （データベース・サーバは、それが知っているように、その時点でクライアントに「ロック」通知が送信されます。）"
    },
    {
      "indent": 3,
      "text": "If the client originally obtained the lock through a \"steal\" request, the database server won't automatically reassign it ownership of the lock when it later becomes available. To regain ownership, the client must \"unlock\" and then \"lock\" or \"steal\" the lock again.",
      "ja": "クライアントは、もともと「盗む」要求によってロックを取得した場合、データベース・サーバは自動的にそれが後に使用可能になったロックの所有権を再割り当てしません。所有権を取り戻すために、クライアントが「アンロック」しなければならないとし、「ロック」または再びロックを「盗みます」。"
    },
    {
      "indent": 0,
      "text": "4.1.11. Echo",
      "section_title": true,
      "ja": "4.1.11。エコー"
    },
    {
      "indent": 3,
      "text": "The \"echo\" method can be used by both clients and servers to verify the liveness of a database connection. It MUST be implemented by both clients and servers. The members of the request are:",
      "ja": "「エコー」メソッドは、データベース接続の生存性を検証するために、クライアントとサーバーの両方で使用することができます。これは、クライアントとサーバの両方で実装されなければなりません。要求のメンバーは以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "o  \"method\": \"echo\"",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o \"params\": JSON array with any contents",
      "ja": "O「のparams」：いずれかの内容をJSON配列"
    },
    {
      "indent": 3,
      "text": "o \"id\": <json-value>",
      "ja": "O \"ID\"：<JSON-値>"
    },
    {
      "indent": 3,
      "text": "The response object has the following members:",
      "ja": "レスポンスオブジェクトには、次のメンバーがあります。"
    },
    {
      "indent": 3,
      "text": "o \"result\": same as \"params\"",
      "ja": "O「結果」：「のparams」と同じ"
    },
    {
      "indent": 3,
      "text": "o \"error\": null",
      "ja": "O「エラー」：ヌル"
    },
    {
      "indent": 3,
      "text": "o \"id\": the request \"id\" member",
      "ja": "O「である」：リクエスト「ID」メンバー"
    },
    {
      "indent": 0,
      "text": "5. Database Operations",
      "section_title": true,
      "ja": "5.データベースの操作"
    },
    {
      "indent": 3,
      "text": "This section describes the operations that may be specified in the \"transact\" method described in Section 4.1.3.",
      "ja": "このセクションは、セクション4.1.3に記載された「のTransact」方法で指定することができる動作を説明します。"
    },
    {
      "indent": 0,
      "text": "5.1. Notation",
      "section_title": true,
      "ja": "5.1。表記法"
    },
    {
      "indent": 3,
      "text": "We introduce the following notation for the discussion of operations.",
      "ja": "私たちは、業務の議論のために、次の表記法を紹介します。"
    },
    {
      "indent": 4,
      "text": "<db-name> An <id> that names a database. The valid <db-name>s can be obtained using a \"list_dbs\" request. The <db-name> is taken from the \"name\" member of <database-schema>.",
      "ja": "<DB名>アン<ID>という名前のデータベース。有効な<DB名> sが「list_dbs」要求を使用して取得することができます。 <DB名> <データベーススキーマ>の「名前」メンバから取られます。"
    },
    {
      "indent": 3,
      "text": "<table> An <id> that names a table.",
      "ja": "<表>アン<ID>という名前のテーブル。"
    },
    {
      "indent": 3,
      "text": "<column> An <id> that names a table column.",
      "ja": "<コラム>アン<ID>という名前のテーブルの列。"
    },
    {
      "indent": 3,
      "text": "<row> A JSON object that describes a table row or a subset of a table row. Each member is the name of a table column paired with the <value> of that column.",
      "ja": "<行>テーブルの行またはテーブルの行のサブセットを記述するJSONオブジェクト。各部材は、その列の<値>とペアテーブルの列の名前です。"
    },
    {
      "indent": 3,
      "text": "<value> A JSON value that represents the value of a column in a table row, one of <atom>, <set>, or <map>.",
      "ja": "<値>テーブルの行の列の値を表すJSON値、のいずれか<原子>、<設定>、または<地図>。"
    },
    {
      "indent": 3,
      "text": "<atom> A JSON value that represents a scalar value for a column, one of <string>, <number>, <boolean>, <uuid>, or <named-uuid>.",
      "ja": "<原子> JSON列のスカラー値を表す値の一つの<string>、<番号>、<ブール値>、<UUID>、または<名前付きUUID>。"
    },
    {
      "indent": 3,
      "text": "<set> Either an <atom>, representing a set with exactly one element, or a 2-element JSON array that represents a database set value. The first element of the array must be the string \"set\", and the second element must be an array of zero or more <atom>s giving the values in the set. All of the <atom>s must have the same type.",
      "ja": "<設定>いずれか<原子>、正確に1つの要素、またはデータベースの設定値を表す2要素JSONアレイとセットを表します。配列の最初の要素は、文字列「セット」でなければならず、第2の要素は、ゼロ以上の<原子> Sはセット内の値を与える配列でなければなりません。 <原子>のすべてが同じ型を持つ必要があります。"
    },
    {
      "indent": 3,
      "text": "<map> A 2-element JSON array that represents a database map value. The first element of the array must be the string \"map\", and the second element must be an array of zero or more <pair>s giving the values in the map. All of the <pair>s must have the same key and value types.",
      "ja": "<地図>データベースのマップ値を表す2要素JSON配列。配列の最初の要素は、文字列「マップ」でなければならず、第2の要素は、ゼロ以上の<ペア> sがマップ内の値を与える配列でなければなりません。 <ペア>のすべては同一のキーと値の型を持っている必要があります。"
    },
    {
      "indent": 6,
      "text": "(JSON objects are not used to represent <map> because JSON only allows string names in an object.)",
      "ja": "（JSONオブジェクトはJSONのみオブジェクトの文字列名を可能にするので、<地図>を表すために使用されていません。）"
    },
    {
      "indent": 3,
      "text": "<pair> A 2-element JSON array that represents a pair within a database map. The first element is an <atom> that represents the key, and the second element is an <atom> that represents the value.",
      "ja": "<ペア>データベース・マップ内のペアを表す2要素JSON配列。最初の要素はキーを表し、2番目の要素は値を表す<原子>である<原子>です。"
    },
    {
      "indent": 3,
      "text": "<uuid> A 2-element JSON array that represents a UUID. The first element of the array must be the string \"uuid\", and the second element must be a 36-character string giving the UUID in the format described by RFC 4122 [RFC4122]. For example, the following <uuid> represents the UUID 550e8400-e29b-41d4-a716-446655440000:",
      "ja": "<UUID> UUIDを表す2要素JSON配列。配列の最初の要素は、文字列「UUID」でなければならず、第2の要素は、RFC 4122 [RFC4122]で記述されたフォーマットでUUIDを与える36文字の文字列でなければなりません。例えば、<UUID>以下はUUID 550e8400-e29b-41d4-a716-446655440000を表します。"
    },
    {
      "indent": 6,
      "text": "[\"uuid\", \"550e8400-e29b-41d4-a716-446655440000\"]",
      "ja": "【 \"UUID\"、 \"550e8400-e29b-41d4-a716-446655440000\"]"
    },
    {
      "indent": 3,
      "text": "<named-uuid> A 2-element JSON array that represents the UUID of a row inserted in an \"insert\" operation within the same transaction. The first element of the array must be the string \"named-uuid\", and the second element should be the <id> specified as the \"uuid-name\" for an \"insert\" operation within the same transaction. For example, if an \"insert\" operation within this transaction specifies a \"uuid-name\" of \"myrow\", the following <named-uuid> represents the UUID created by that operation:",
      "ja": "<名前、UUID>同じトランザクション内で「挿入」オペレーションに挿入された行のUUIDを表す2要素JSON配列。配列の最初の要素は文字列「という名前-UUID」でなければならず、第2の要素は、同じトランザクション内の「挿入」オペレーションは、「UUID名」として指定された<ID>でなければなりません。このトランザクション内の「挿入」操作は「myrow」の「UUID-name」を指定した場合、次の<名前の-UUID>は、その操作によって作成されたUUIDを表します。"
    },
    {
      "indent": 6,
      "text": "[\"named-uuid\", \"myrow\"]",
      "ja": "[ \"という名前-UUID\"、 \"myrow\"]"
    },
    {
      "indent": 6,
      "text": "A <named-uuid> may be used anywhere a <uuid> is valid. This enables a single transaction to both insert a new row and then refer to that row using the \"uuid-name\" that was associated with that row when it was inserted. Note that the \"uuid-name\" is only meaningful within the scope of a single transaction.",
      "ja": "<名前の-UUID> <UUID>が有効でどこでも使用することができます。これは、新しい行を挿入し、それが挿入されたときに、その行に関連付けられた「UUID-name」を使用して、その行を参照の両方に単一のトランザクションを可能にします。 「UUID-nameは、」単一のトランザクションの範囲内でのみ意味があることに注意してください。"
    },
    {
      "indent": 3,
      "text": "<condition> A 3-element JSON array of the form [<column>, <function>, <value>] that represents a test on a column value. Except as otherwise specified below, <value> MUST have the same type as <column>. The meaning depends on the type of <column>:",
      "ja": "<条件>カラム値にテストを表すフォーム[<コラム>、<機能>、<値>]の3要素JSON配列。そうでない場合は、下記の<値>で指定された場合を除き、<カラム>と同じ型でなければなりません。意味は、<コラム>のタイプによって異なります。"
    },
    {
      "indent": 6,
      "text": "integer or real <function> must be \"<\", \"<=\", \"==\", \"!=\", \">=\", \">\", \"includes\", or \"excludes\".",
      "ja": "整数または実数<機能>でなければなりません \"<\"、 \"<=\"、 \"==\"、 \"！=\"、 \"> =\"、 \">\"、 \"含んでいる\"、または \"除外\"。"
    },
    {
      "indent": 9,
      "text": "The test is true if the column's value satisfies the relation <function> <value>, e.g., if the column has value 1 and <value> is 2, the test is true if <function> is \"<\", \"<=\", or \"!=\", but not otherwise.",
      "ja": "カラムは値1と<値>を持っている場合、列の値は、関係<機能> <値>、例えばを満たす場合、テストは、「<=」「<」<機能>がある場合、テストが真である2は、真であります、または \"！=\" ではなく、それ以外の場合は。"
    },
    {
      "indent": 9,
      "text": "\"includes\" is equivalent to \"==\"; \"excludes\" is equivalent to \"!=\".",
      "ja": "「含む」、「==」に相当します。 「除外」を「！=」に相当します。"
    },
    {
      "indent": 6,
      "text": "boolean or string or uuid <function> must be \"!=\", \"==\", \"includes\", or \"excludes\".",
      "ja": "ブールまたは文字列またはUUID <機能>でなければなりません「！=」、「==」、「含んでいる」、または「除外」。"
    },
    {
      "indent": 9,
      "text": "If <function> is \"==\" or \"includes\", the test is true if the column's value equals <value>. If <function> is \"!=\" or \"excludes\", the test is inverted.",
      "ja": "<機能>は「==」または「含み」であれば、列の値が<値>と等しい場合、テストが真です。 <機能>がある場合は、「！=」または「除外」、テストが反転しています。"
    },
    {
      "indent": 6,
      "text": "set or map <function> must be \"!=\", \"==\", \"includes\", or \"excludes\".",
      "ja": "セットまたはマップ<機能>でなければなりません「！=」、「==」、「含んでいる」、または「除外」。"
    },
    {
      "indent": 9,
      "text": "If <function> is \"==\", the test is true if the column's value contains exactly the same values (for sets) or pairs (for maps). If <function> is \"!=\", the test is inverted.",
      "ja": "<機能>は「==」である場合は、列の値がまったく同じ（セットの場合）の値または（マップの）ペアが含まれている場合、テストが真です。 <機能>がある場合は、「！=」、テストが反転しています。"
    },
    {
      "indent": 9,
      "text": "If <function> is \"includes\", the test is true if the column's value contains all of the values (for sets) or pairs (for maps) in <value>. The column's value may also contain other values or pairs.",
      "ja": "<機能>は「含まれる」されている場合は、列の値が<値>に（マップ用）（セットの場合）の値またはペアのすべてが含まれている場合、テストが真です。列の値は、他の値やペアが含まれていてもよいです。"
    },
    {
      "indent": 9,
      "text": "If <function> is \"excludes\", the test is true if the column's value does not contain any of the values (for sets) or pairs (for maps) in <value>. The column's value may contain other values or pairs not in <value>.",
      "ja": "<機能>は「除外」であれば、列の値が<値>に（マップ用）（セットの場合）値またはペアのいずれかが含まれていない場合、テストが真です。列の値がない<値>に他の値もしくはペアが含まれていてもよいです。"
    },
    {
      "indent": 9,
      "text": "If <function> is \"includes\" or \"excludes\", then the required type of <value> is slightly relaxed, in that it may have fewer than the minimum number of elements specified by the column's type. If <function> is \"excludes\", then the required type is additionally relaxed in that <value> may have more than the maximum number of elements specified by the column's type.",
      "ja": "<機能>は、「含む」または「除外」場合は、カラムのタイプにより指定された要素の最小数よりも少ない数を有することができるという点で、その後<値>の必要なタイプは、若干緩和されます。 <機能>は「除外」であれば、必要な型は、カラムのタイプにより指定された要素の最大数よりも多くを有し得ることを<値>にさらに緩和されます。"
    },
    {
      "indent": 3,
      "text": "<function> One of \"<\", \"<=\", \"==\", \"!=\", \">=\", \">\", \"includes\", or \"excludes\".",
      "ja": "<機能> \"<\"、 \"<=\"、 \"==\"、 \"！=\"、 \"> =\"、 \">\"、 \"含んでいる\"、または \"除外\" の一つ。"
    },
    {
      "indent": 3,
      "text": "<mutation> A 3-element JSON array of the form [<column>, <mutator>, <value>] that represents a change to a column value. Except as otherwise specified below, <value> must have the same type as <column>. The meaning depends on the type of <column>:",
      "ja": "<変異>列値への変化を表すフォーム[<コラム>、<ミューテータ>、<値>]の3要素JSON配列。そうでない場合は、下記の<値>で指定された場合を除き、<コラム>と同じ型を持つ必要があります。意味は、<コラム>のタイプによって異なります。"
    },
    {
      "indent": 6,
      "text": "integer or real <mutator> must be \"+=\", \"-=\", \"*=\", \"/=\", or (integer only) \"%=\". The value of <column> is changed to the sum, difference, product, quotient, or remainder, respectively, of <column> and <value>.",
      "ja": "\" -  =\"、 \"* =\"、 \"/ =\"、または（整数のみ） \"％=\" 整数または実数<ミューテータは> \"+ =\" でなければなりません。 <列>の値は、<カラム>と<値>を、それぞれ、和、差、積、商、または余りに変更されます。"
    },
    {
      "indent": 9,
      "text": "Constraints on <column> are ignored when parsing <value>.",
      "ja": "<値>を解析するとき、<コラム>上の制約は無視されます。"
    },
    {
      "indent": 6,
      "text": "boolean, string, or uuid No valid <mutator>s are currently defined for these types.",
      "ja": "ブール値、文字列、またはいいえ、有効な<ミューテータ>秒のuuidませんが、現在、これらのタイプのために定義されています。"
    },
    {
      "indent": 6,
      "text": "set Any <mutator> valid for the set's element type may be applied to the set, in which case the mutation is applied to each member of the set individually. <value> must be a scalar value of the same type as the set's element type, except that constraints are ignored when parsing <value>.",
      "ja": "任意の設定セットの要素型の有効な<ミューテータが>変異が個別セットの各メンバーに適用した場合にはセットに適用することができます。 <値> <値>を解析する際に制約が無視されることを除いて、セットの要素型と同じ型のスカラー値でなければなりません。"
    },
    {
      "indent": 9,
      "text": "If <mutator> is \"insert\", then each of the values in the set in <value> is added to <column> if it is not already present. The required type of <value> is slightly relaxed, in that it may have fewer than the minimum number of elements specified by the column's type.",
      "ja": "<ミューテータが>「挿入」である場合、それはまだ存在しない場合、<値>にセット中の各値は、<カラム>に追加されます。 <値>の必要なタイプは、それが列の型で指定された要素の最小数よりも少ない有することができるという点で、若干緩和されます。"
    },
    {
      "indent": 9,
      "text": "If <mutator> is \"delete\", then each of the values in the set in <value> is removed from <column> if it is present there. The required type is slightly relaxed in that <value> may have more or less than the maximum number of elements specified by the column's type.",
      "ja": "<ミューテータが>「削除」である場合、それが存在する場合、<値>にセット中の各値は、<カラム>から除去されます。必要なタイプは、<値>に若干緩和される列の型で指定された要素の最大数よりも多かれ少なかれを有していてもよいです。"
    },
    {
      "indent": 6,
      "text": "map <mutator> must be \"insert\" or \"delete\".",
      "ja": "マップ<ミューテーター>「挿入」または「削除」でなければなりません。"
    },
    {
      "indent": 9,
      "text": "If <mutator> is \"insert\", then each of the key-value pairs in the map in <value> is added to <column> only if its key is not already present. The required type of <value> is slightly relaxed, in that it may have fewer than the minimum number of elements specified by the column's type.",
      "ja": "<ミューテータは> <値>にマップ内のキーと値のペアの各次いで、「挿入」である場合、そのキーが既に存在しない場合にのみ、<カラム>に追加されます。 <値>の必要なタイプは、それが列の型で指定された要素の最小数よりも少ない有することができるという点で、若干緩和されます。"
    },
    {
      "indent": 9,
      "text": "If <mutator> is \"delete\", then <value> may have the same type as <column> (a map type), or it may be a set whose element type is the same as <column>'s key type:",
      "ja": "<ミューテータが>「削除」である場合には、<value>は、<カラム>（マップタイプ）と同じ型を有していてもよく、またはそれは、その要素タイプ<コラム>のキータイプと同じで設定してもよいです。"
    },
    {
      "indent": 9,
      "text": "+ If <value> is a map, the mutation deletes each key-value pair in <column> whose key and value equal one of the key-value pairs in <value>.",
      "ja": "<値>マップである場合は+、突然変異は、キーと<値>内のキーと値のペアのいずれかに等しい値<列>の各キーと値のペアを削除します。"
    },
    {
      "indent": 9,
      "text": "+ If <value> is a set, the mutation deletes each key-value pair in <column> whose key equals one of the values in <value>.",
      "ja": "+ <値>が設定されている場合、突然変異は、そのキー<値>の値の1に等しい<コラム>の各キーと値のペアを削除します。"
    },
    {
      "indent": 9,
      "text": "For \"delete\", <value> may have any number of elements, regardless of restrictions on the number of elements in <column>.",
      "ja": "「削除」の場合は、<value>は関係なく、<コラム>の要素数の制限の、任意の数の要素を有することができます。"
    },
    {
      "indent": 3,
      "text": "<mutator> One of \"+=\", \"-=\", \"*=\", \"/=\", \"%=\", \"insert\", or \"delete\".",
      "ja": "<ミューテータ>の一つ \"+ =\"、 \" -  =\"、 \"* =\"、 \"/ =\"、 \"％=\"、 \"挿入\"、または \"削除\"。"
    },
    {
      "indent": 0,
      "text": "5.2. Operations",
      "section_title": true,
      "ja": "5.2。オペレーション"
    },
    {
      "indent": 3,
      "text": "The operations that may be performed as part of a \"transact\" RPC request (see Section 4.1.3) are described in the following subsections. Each of these operations is a JSON object that may be included as one of the elements of the \"params\" array that is one of the elements of the \"transact\" request. The details of each object, its semantics, results, and possible errors are described below.",
      "ja": "「のTransact」RPC要求（セクション4.1.3を参照）の一部として実行される動作は、以下のサブセクションに記載されています。これらの操作の各々は、「のTransact」リクエストの要素の一つである「paramsは」アレイの要素の一つとして含まれてもよいJSONオブジェクトです。各オブジェクト、その意味論、結果、及び可能性のあるエラーの詳細については後述します。"
    },
    {
      "indent": 0,
      "text": "5.2.1. Insert",
      "section_title": true,
      "ja": "5.2.1。インサート"
    },
    {
      "indent": 3,
      "text": "The \"insert\" object contains the following members:",
      "ja": "「挿入」オブジェクトは、次のメンバーが含まれます。"
    },
    {
      "indent": 6,
      "text": "\"op\": \"insert\"          required\n\"table\": <table>        required\n\"row\": <row>            required\n\"uuid-name\": <id>       optional",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The corresponding result object contains the following member:",
      "ja": "対応する結果オブジェクトは、次のメンバーが含まれています。"
    },
    {
      "indent": 6,
      "text": "\"uuid\": <uuid>",
      "ja": "\"UUID\"：<UUID>"
    },
    {
      "indent": 3,
      "text": "The operation inserts \"row\" into \"table\". If \"row\" does not specify values for all the columns in \"table\", those columns receive default values. The default value for a column depends on its type. The default for a column whose <type> specifies a \"min\" of 0 is an empty set or empty map. Otherwise, the default is a single value or a single key-value pair, whose value(s) depend on its <atomic-type>:",
      "ja": "動作は「表」に「行」を挿入します。 「行」は「テーブル」のすべての列の値を指定しない場合は、それらの列にデフォルト値を受け取ります。列のデフォルト値は、その種類によって異なります。 <タイプ> 0の「分」を指定する列のデフォルトは、空のセットか、空のマップです。そうでない場合、デフォルトは、値（S）その<アトミック型>に依存する単一の値または単一のキーと値のペアは、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "o \"integer\" or \"real\": 0",
      "ja": "o「は、整数」または「本当」：0"
    },
    {
      "indent": 3,
      "text": "o \"boolean\": false",
      "ja": "O「ブール」：偽"
    },
    {
      "indent": 3,
      "text": "o  \"string\": \"\" (the empty string)",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o \"uuid\": 00000000-0000-0000-0000-000000000000",
      "ja": "O \"UUID\" 00000000-0000-0000-0000-000000000000"
    },
    {
      "indent": 3,
      "text": "The new row receives a new, randomly generated UUID. If \"uuid-name\" is supplied, then it is an error if <id> is not unique among the \"uuid-name\"s supplied on all the \"insert\" operations within this transaction. The UUID for the new row is returned as the \"uuid\" member of the result.",
      "ja": "新しい行が、新しい、ランダムに生成されたUUIDを受け取ります。 「UUID名が」供給されている場合は、<ID>は、このトランザクション内のすべての「挿入」操作に付属の「UUID-名」の中で一意でない場合、それは誤りです。新しい行のUUIDは、結果の「UUID」部材として返されます。"
    },
    {
      "indent": 3,
      "text": "The errors that may be returned are as follows:",
      "ja": "次のように返される可能性のあるエラーは以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "\"error\": \"duplicate uuid-name\"\n   The same \"uuid-name\" appears on another \"insert\" operation within\n   this transaction.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "\"error\": \"constraint violation\"\n   One of the values in \"row\" does not satisfy the immediate\n   constraints for its column's <base-type>.  This error will occur\n   for columns that are not explicitly set by \"row\" if the default\n   value does not satisfy the column's constraints.",
      "raw": true
    },
    {
      "indent": 0,
      "text": "5.2.2. Select",
      "section_title": true,
      "ja": "5.2.2。選択する"
    },
    {
      "indent": 3,
      "text": "The \"select\" object contains the following members:",
      "ja": "「選択」オブジェクトは、次のメンバーが含まれます。"
    },
    {
      "indent": 6,
      "text": "\"op\": \"select\"                required\n\"table\": <table>              required\n\"where\": [<condition>*]       required\n\"columns\": [<column>*]        optional",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The corresponding result object contains the following member:",
      "ja": "対応する結果オブジェクトは、次のメンバーが含まれています。"
    },
    {
      "indent": 6,
      "text": "\"rows\": [<row>*]",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The operation searches \"table\" for rows that match all the conditions specified in \"where\". If \"where\" is an empty array, every row in \"table\" is selected.",
      "ja": "「どこで」で指定されたすべての条件に一致する行の操作を検索し、「テーブル」。 「ここで」空の配列である場合、「テーブル」内のすべての行が選択されます。"
    },
    {
      "indent": 3,
      "text": "The \"rows\" member of the result is an array of objects. Each object corresponds to a matching row, with each column specified in \"columns\" as a member, the column's name as the member name, and its value as the member value. If \"columns\" is not specified, all the table's columns are included (including the internally generated \"_uuid\" and \"_version\" columns). If two rows of the result have the same values for all included columns, only one copy of that row is included in \"rows\". Specifying \"_uuid\" within \"columns\" will avoid dropping duplicates, since every row has a unique UUID.",
      "ja": "結果の「行」部材は、オブジェクトの配列です。各オブジェクトは、メンバー、メンバー名と列名、及びメンバ値として、その値として「列」で指定された各列に、一致する行に対応します。 「列」が指定されていない場合は、すべてのテーブルの列は、（内部で生成された「_uuid」と「_version」列を含む）が含まれています。結果の2つの行がすべて含まれた列に同じ値を持っている場合は、その行のコピーが1つだけ「行」に含まれています。すべての行が一意のUUIDを持っているので、「列」内「_uuid」を指定すると、重複を落とさないようになります。"
    },
    {
      "indent": 3,
      "text": "The ordering of rows within \"rows\" is unspecified.",
      "ja": "「行」内の行の順序は不定です。"
    },
    {
      "indent": 0,
      "text": "5.2.3. Update",
      "section_title": true,
      "ja": "5.2.3。更新"
    },
    {
      "indent": 3,
      "text": "The \"update\" object contains the following members:",
      "ja": "「更新」オブジェクトは、次のメンバーが含まれます。"
    },
    {
      "indent": 6,
      "text": "\"op\": \"update\"                required\n\"table\": <table>              required\n\"where\": [<condition>*]       required\n\"row\": <row>                  required",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The corresponding result object contains the following member:",
      "ja": "対応する結果オブジェクトは、次のメンバーが含まれています。"
    },
    {
      "indent": 6,
      "text": "\"count\": <integer>",
      "ja": "\"カウント\"：<整数>"
    },
    {
      "indent": 3,
      "text": "The operation updates rows in a table. It searches \"table\" for rows that match all the conditions specified in \"where\". For each matching row, it changes the value of each column specified in \"row\" to the value for that column specified in \"row\". The \"_uuid\" and \"_version\" columns of a table may not be directly updated with this operation. Columns designated read-only in the schema also may not be updated.",
      "ja": "操作は、テーブルの行を更新します。それは「どこ」に指定されたすべての条件に一致する行について、「表」を検索します。各マッチング行については、「行」で指定したカラムの値を「行」で指定された各列の値を変更します。表の「_uuid」と「_version」の列は、直接この操作で更新されないことがあります。指定された列は、読み取り専用にも更新されない場合があり、スキーマに。"
    },
    {
      "indent": 3,
      "text": "The \"count\" member of the result specifies the number of rows that matched.",
      "ja": "結果の「カウント」メンバーは、一致した行数を指定します。"
    },
    {
      "indent": 3,
      "text": "The error that may be returned is:",
      "ja": "返されることがありますエラーは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "\"error\": \"constraint violation\"\n   One of the values in \"row\" does not satisfy the immediate\n   constraints for its column's <base-type>.",
      "raw": true
    },
    {
      "indent": 0,
      "text": "5.2.4. Mutate",
      "section_title": true,
      "ja": "5.2.4。変異させます"
    },
    {
      "indent": 3,
      "text": "The \"mutate\" object contains the following members:",
      "ja": "オブジェクトは、以下のメンバーが含まれている「変異します」："
    },
    {
      "indent": 6,
      "text": "\"op\":  \"mutate\"               required\n\"table\": <table>              required\n\"where\": [<condition>*]       required\n\"mutations\": [<mutation>*]    required",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The corresponding result object contains the following member:",
      "ja": "対応する結果オブジェクトは、次のメンバーが含まれています。"
    },
    {
      "indent": 6,
      "text": "\"count\": <integer>",
      "ja": "\"カウント\"：<整数>"
    },
    {
      "indent": 3,
      "text": "The operation mutates rows in a table. It searches \"table\" for rows that match all the conditions specified in \"where\". For each matching row, it mutates its columns as specified by each <mutation> in \"mutations\", in the order specified.",
      "ja": "操作は、テーブル内の行を変異させます。それは「どこ」に指定されたすべての条件に一致する行について、「表」を検索します。指定された順序で、「変異」の各<突然変異>によって指定されるように、各マッチング行について、その列を変異します。"
    },
    {
      "indent": 3,
      "text": "The \"_uuid\" and \"_version\" columns of a table may not be directly modified with this operation. Columns designated read-only in the schema also may not be updated.",
      "ja": "表の「_uuid」および「_version」列は、直接操作で変更されないかもしれません。指定された列は、読み取り専用にも更新されない場合があり、スキーマに。"
    },
    {
      "indent": 3,
      "text": "The \"count\" member of the result specifies the number of rows that matched.",
      "ja": "結果の「カウント」メンバーは、一致した行数を指定します。"
    },
    {
      "indent": 3,
      "text": "The errors that may be returned are:",
      "ja": "返される可能性のあるエラーは以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "\"error\": \"domain error\" The result of the mutation is not mathematically defined, e.g., division by zero.",
      "ja": "「エラー」：「ドメインエラー」突然変異の結果は、数学的ゼロにより、例えば、分割を定義されていません。"
    },
    {
      "indent": 3,
      "text": "\"error\": \"range error\" The result of the mutation is not representable within the database's format, e.g., an integer result outside the range INT64_MIN...INT64_MAX or a real result outside the range -DBL_MAX...DBL_MAX.",
      "ja": "「エラー」：「範囲異常」とは、変異の結果は、例えば、データベースのフォーマット内の範囲INT64_MIN ... INT64_MAX又は範囲-DBL_MAX ... DBL_MAX外部実結果外部整数の結果を表現できません。"
    },
    {
      "indent": 3,
      "text": "\"error\": \"constraint violation\"\n   The mutation caused the column's value to violate a constraint,\n   e.g., it caused a column to have more or fewer values than are\n   allowed, an arithmetic operation caused a set or map to have\n   duplicate elements, or it violated a constraint specified by a\n   column's <base-type>.",
      "raw": true
    },
    {
      "indent": 0,
      "text": "5.2.5. Delete",
      "section_title": true,
      "ja": "5.2.5。削除"
    },
    {
      "indent": 3,
      "text": "The \"delete\" object contains the following members:",
      "ja": "「削除」オブジェクトは、次のメンバーが含まれます。"
    },
    {
      "indent": 6,
      "text": "\"op\":  \"delete\"               required\n\"table\": <table>              required\n\"where\": [<condition>*]       required",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The corresponding result object contains the following member:",
      "ja": "対応する結果オブジェクトは、次のメンバーが含まれています。"
    },
    {
      "indent": 6,
      "text": "\"count\": <integer>",
      "ja": "\"カウント\"：<整数>"
    },
    {
      "indent": 3,
      "text": "The operation deletes all the rows from \"table\" that match all the conditions specified in \"where\". The \"count\" member of the result specifies the number of deleted rows.",
      "ja": "動作は、「ここ」に指定されたすべての条件に一致する「テーブル」からすべての行を削除します。結果の「カウント」メンバーが削除された行数を指定します。"
    },
    {
      "indent": 0,
      "text": "5.2.6. Wait",
      "section_title": true,
      "ja": "5.2.6。待つ"
    },
    {
      "indent": 3,
      "text": "The \"wait\" object contains the following members:",
      "ja": "「待つ」オブジェクトは、次のメンバーが含まれます。"
    },
    {
      "indent": 6,
      "text": "\"op\": \"wait\"                        required\n\"timeout\": <integer>                optional\n\"table\": <table>                    required\n\"where\": [<condition>*]             required\n\"columns\": [<column>*]              required\n\"until\": \"==\" or \"!=\"               required\n\"rows\": [<row>*]                    required",
      "raw": true
    },
    {
      "indent": 3,
      "text": "There is no corresponding result object.",
      "ja": "該当する結果オブジェクトがありません。"
    },
    {
      "indent": 3,
      "text": "The operation waits until a condition becomes true.",
      "ja": "条件が真になるまで動作を待機します。"
    },
    {
      "indent": 3,
      "text": "If \"until\" is \"==\", it checks whether the query on \"table\" specified by \"where\" and \"columns\", which is evaluated in the same way as specified for \"select\", returns the result set specified by \"rows\". If it does, then the operation completes successfully. Otherwise, the entire transaction rolls back. It is automatically restarted later, after a change in the database makes it possible for the operation to succeed. The client will not receive a response until the operation permanently succeeds or fails.",
      "ja": "「まで」、「==」である場合、それは \"、「テーブル」にクエリが「選択」に指定されたのと同じ方法で評価される「場所」と「列」で指定されたかどうかをチェックすることにより、指定された結果セットを返します行」。それがない場合は、操作が正常に完了します。それ以外の場合は、トランザクション全体がロールバックされます。データベースの変更は、それが可能な操作が成功できるようになり後に自動的に、後で再起動されます。操作が永続的に成功または失敗するまでクライアントが応答を受信しません。"
    },
    {
      "indent": 3,
      "text": "If \"until\" is \"!=\", the sense of the test is negated. That is, as long as the query on \"table\" specified by \"where\" and \"columns\" returns \"rows\", the transaction will be rolled back and restarted later.",
      "ja": "場合である「まで」「！=」、テストの意味が否定されます。それは限り、「表」のクエリが「どこ」と「列」を返す「行」で指定され、トランザクションはロールバックされ、後に再起動されるように、です。"
    },
    {
      "indent": 3,
      "text": "If \"timeout\" is specified, then the transaction aborts after the specified number of milliseconds. The transaction is guaranteed to be attempted at least once before it aborts. A \"timeout\" of 0 will abort the transaction on the first mismatch.",
      "ja": "「タイムアウト」を指定した場合、トランザクションは、指定されたミリ秒数後に中止されます。トランザクションは、それが中断されます前に、少なくとも1回は試行されることが保証されます。 0の「タイムアウト」は、第1の不一致にトランザクションをアボートします。"
    },
    {
      "indent": 3,
      "text": "The error that may be returned is:",
      "ja": "返されることがありますエラーは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "\"error\": \"timed out\" The \"timeout\" was reached before the transaction was able to complete.",
      "ja": "「エラー」：トランザクションが完了することができたの前に、「タイムアウト」に達した「タイムアウトし」。"
    },
    {
      "indent": 0,
      "text": "5.2.7. Commit",
      "section_title": true,
      "ja": "5.2.7。コミット"
    },
    {
      "indent": 3,
      "text": "The \"commit\" object contains the following members:",
      "ja": "「コミット」オブジェクトは、次のメンバーが含まれます。"
    },
    {
      "indent": 6,
      "text": "\"op\": \"commit\"                      required\n\"durable\": <boolean>                required",
      "raw": true
    },
    {
      "indent": 3,
      "text": "There is no corresponding result object.",
      "ja": "該当する結果オブジェクトがありません。"
    },
    {
      "indent": 3,
      "text": "If \"durable\" is specified as true, then the transaction, if it commits, will be stored durably (to disk) before the reply is sent to the client. This operation with \"durable\" set to false is effectively a no-op.",
      "ja": "「耐久性」がtrueとして指定されている場合は応答がクライアントに送信される前に、そのトランザクション、それがコミットした場合、（ディスクへの）永続的に保存されます。 falseに設定された「耐久性」と、この操作は効果的に何もしません。"
    },
    {
      "indent": 3,
      "text": "The error that may be returned is:",
      "ja": "返されることがありますエラーは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "\"error\": \"not supported\"\n   When \"durable\" is true, this database implementation does not\n   support durable commits.",
      "raw": true
    },
    {
      "indent": 0,
      "text": "5.2.8. Abort",
      "section_title": true,
      "ja": "5.2.8。中絶"
    },
    {
      "indent": 3,
      "text": "The \"abort\" object contains the following member:",
      "ja": "「中止」オブジェクトは、次のメンバーが含まれています。"
    },
    {
      "indent": 6,
      "text": "\"op\": \"abort\" required",
      "ja": "「OP」：「中止」が必要"
    },
    {
      "indent": 3,
      "text": "There is no corresponding result object (the operation never succeeds).",
      "ja": "該当する結果オブジェクトは、（操作が成功したことはありません）がありません。"
    },
    {
      "indent": 3,
      "text": "The operation aborts the entire transaction with an error. This may be useful for testing.",
      "ja": "操作はエラーでトランザクション全体を中止します。これは、テストのために有用である可能性があります。"
    },
    {
      "indent": 3,
      "text": "The error that will be returned is:",
      "ja": "返されるエラーは、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "\"error\": \"aborted\"\n   This operation always fails with this error.",
      "raw": true
    },
    {
      "indent": 0,
      "text": "5.2.9. Comment",
      "section_title": true,
      "ja": "5.2.9。コメント"
    },
    {
      "indent": 3,
      "text": "The \"comment\" object contains the following members:",
      "ja": "「コメント」オブジェクトは、次のメンバーが含まれます。"
    },
    {
      "indent": 6,
      "text": "\"op\": \"comment\"                    required\n\"comment\": <string>                required",
      "raw": true
    },
    {
      "indent": 3,
      "text": "There is no corresponding result object.",
      "ja": "該当する結果オブジェクトがありません。"
    },
    {
      "indent": 3,
      "text": "The operation provides information to a database administrator on the purpose of a transaction. The ovsdb-server implementation, for example, adds comments in transactions that modify the database to the database journal. This can be helpful in debugging, e.g., when there are multiple clients writing to a database. An example of this can be seen in the ovs-vsctl tool, a command line tool that interacts with ovsdb-server. When performing operations on the database, it includes the command that was invoked (e.g., \"ovs-vsctl add-br br0\") as a comment in the transaction, which can then be seen in the journal alongside the changes that were made to the tables in the database.",
      "ja": "操作は、トランザクションの目的で、データベース管理者に情報を提供します。 ovsdbサーバの実装は、例えば、データベースのジャーナルにデータベースを変更するトランザクションのコメントを追加します。これは、データベースへの書き込みを複数のクライアントが存在する場合には、例えば、デバッグに役立ちます。この例は、OVS-vsctlツール、ovsdbサーバと対話するコマンドラインツールに見ることができます。データベース上で操作を実行すると、それが呼び出されたコマンドが含まれ（例えば、「OVS-vsctl追加-BR BR0」）、その後に行われた変更と一緒に雑誌で見ることができ、トランザクション内のコメントとして、データベース内のテーブル。"
    },
    {
      "indent": 0,
      "text": "5.2.10. Assert",
      "section_title": true,
      "ja": "5.2.10。アサート"
    },
    {
      "indent": 3,
      "text": "The assert object contains the following members:",
      "ja": "アサートオブジェクトは、次のメンバーが含まれます。"
    },
    {
      "indent": 6,
      "text": "\"op\": \"assert\"                     required\n\"lock\": <id>                       required",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Result object has no members.",
      "ja": "結果オブジェクトは、メンバーが存在しません。"
    },
    {
      "indent": 3,
      "text": "The assert operation causes the transaction to be aborted if the client does not own the lock named <id>.",
      "ja": "アサート操作は、クライアントが<ID>という名前のロックを所有していない場合に、トランザクションが中止されます。"
    },
    {
      "indent": 3,
      "text": "The error that may be returned is:",
      "ja": "返されることがありますエラーは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "\"error\": \"not owner\"\n   The client does not own the named lock.",
      "raw": true
    },
    {
      "indent": 0,
      "text": "6. IANA Considerations",
      "section_title": true,
      "ja": "6. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "IANA has assigned TCP port 6640 for this protocol. Earlier implementations of OVSDB used another port number, but compliant implementations should use the IANA-assigned number.",
      "ja": "IANAは、このプロトコルのためにTCPポート6640を割り当てています。 OVSDBの以前の実装では、別のポート番号を使用しますが、準拠する実装は、IANAによって割り当てられた番号を使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "IANA has updated the reference for port 6640 to point to this document.",
      "ja": "IANAはこのドキュメントを指すようにポート6640のための参照を更新しました。"
    },
    {
      "indent": 0,
      "text": "7. Security Considerations",
      "section_title": true,
      "ja": "7.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "The main security issue that needs to be addressed for the OVSDB protocol is the authentication, integrity, and privacy of communications between a client and server implementing this protocol. To provide such protection, an OVSDB connection SHOULD be secured using Transport Layer Security (TLS) [RFC5246]. The precise details of how clients and servers authenticate each other is highly dependent on the operating environment. It is often the case that",
      "ja": "OVSDBプロトコルに対処する必要がある主要なセキュリティ上の問題は、このプロトコルを実装し、クライアントとサーバ間の通信の認証、整合性、およびプライバシーのです。このような保護を提供するために、OVSDB接続はトランスポート層セキュリティ（TLS）[RFC5246]を使用して保護する必要があります。クライアントとサーバーが相互に認証する方法の正確な詳細は、動作環境に大きく依存しています。それはよくあること"
    },
    {
      "indent": 3,
      "text": "OVSDB clients and servers operate in a tightly controlled environment, e.g., on machines in a single data center where they communicate on an isolated management network.",
      "ja": "OVSDBクライアントとサーバは、それらが単離された管理ネットワーク上で通信する単一のデータセンター内のマシン上に、例えば、厳密に制御された環境で動作します。"
    },
    {
      "indent": 0,
      "text": "8. Acknowledgements",
      "section_title": true,
      "ja": "8.謝辞"
    },
    {
      "indent": 3,
      "text": "Thanks to Jeremy Stribling and Justin Pettit for their helpful input to this document.",
      "ja": "このドキュメントへの彼らの役に立つの入力のためのジェレミーStriblingとジャスティン・ペティットに感謝します。"
    },
    {
      "indent": 0,
      "text": "9. References",
      "section_title": true,
      "ja": "9.参考文献"
    },
    {
      "indent": 0,
      "text": "9.1. Normative References",
      "section_title": true,
      "ja": "9.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[DCE] \"DCE: Remote Procedure Call\", Open Group CAE Specification C309, ISBN 1-85912-041-5, August 1994.",
      "ja": "[DCE] \"DCE：リモートプロシージャコール\"、Open GroupのCAE仕様C309、ISBN 1-85912-041-5、1994年8月。"
    },
    {
      "indent": 3,
      "text": "[JSON-RPC] \"JSON-RPC Specification, Version 1.0\", <http://json-rpc.org/wiki/specification>.",
      "ja": "[JSON-RPC] \"JSON-RPC仕様バージョン1.0\"、<http://json-rpc.org/wiki/specification>。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC4122] Leach, P., Mealling, M., and R. Salz, \"A Universally Unique IDentifier (UUID) URN Namespace\", RFC 4122, July 2005.",
      "ja": "[RFC4122]リーチ、P.、Mealling、M.、およびR. Salzの、 \"汎用一意識別子（UUID）URN名前空間\"、RFC 4122、2005年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC4627] Crockford, D., \"The application/json Media Type for JavaScript Object Notation (JSON)\", RFC 4627, July 2006.",
      "ja": "[RFC4627]クロックフォード、D.、RFC 4627、2006年7月 \"JavaScriptのObject Notation（JSON）形式のためのアプリケーション/ JSONのメディアタイプ\"。"
    },
    {
      "indent": 3,
      "text": "[RFC5246] Dierks, T. and E. Rescorla, \"The Transport Layer Security (TLS) Protocol Version 1.2\", RFC 5246, August 2008.",
      "ja": "[RFC5246]ダークス、T.およびE.レスコラ、 \"トランスポート層セキュリティ（TLS）プロトコルバージョン1.2\"、RFC 5246、2008年8月。"
    },
    {
      "indent": 0,
      "text": "9.2. Informative References",
      "section_title": true,
      "ja": "9.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[DB-SCHEMA] \"Open vSwitch Database Schema\", <http://openvswitch.org/ovs-vswitchd.conf.db.5.pdf>.",
      "ja": "[DB-SCHEMA] \"オープンvSwitchのデータベーススキーマ\"、<http://openvswitch.org/ovs-vswitchd.conf.db.5.pdf>。"
    },
    {
      "indent": 3,
      "text": "[OF-SPEC] Open Networking Foundation, \"OpenFlow Switch Specification, version 1.3.3\", October 2013, <https://www.opennetworking.org>.",
      "ja": "[OF-SPEC]オープンネットワーク財団、 \"オープンフロースイッチの仕様、バージョン1.3.3\"、2013年10月、<https://www.opennetworking.org>。"
    },
    {
      "indent": 3,
      "text": "[OVS] \"Open vSwitch\", <http://openvswitch.org/>.",
      "ja": "[OVS] \"オープンのvSwitch\"、<http://openvswitch.org/>。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Ben Pfaff VMware, Inc. 3401 Hillview Ave. Palo Alto, CA 94304 USA",
      "ja": "ベンPfaff事件ヴイエムウェア株式会社3401ヒルビューアベニューパロアルト、CA 94304 USA"
    },
    {
      "indent": 3,
      "text": "EMail: blp@nicira.com",
      "ja": "メールアドレス：blp@nicira.com"
    },
    {
      "indent": 3,
      "text": "Bruce Davie (editor) VMware, Inc. 3401 Hillview Ave. Palo Alto, CA 94304 USA",
      "ja": "ブルース・デイビー（編集者）のVMware、Inc.の3401ヒルビューアベニューパロアルト、CA 94304 USA"
    },
    {
      "indent": 3,
      "text": "EMail: bsd@nicira.com",
      "ja": "メールアドレス：bsd@nicira.com"
    }
  ]
}