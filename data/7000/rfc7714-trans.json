{
  "title": {
    "text": "RFC 7714 - AES-GCM Authenticated Encryption in the Secure Real-time Transport Protocol (SRTP)",
    "ja": "RFC 7714 - セキュアリアルタイムトランスポートプロトコルでのAES-GCM認証済み暗号化（SRTP）"
  },
  "number": 7714,
  "created_at": "2019-11-01 13:03:02.261751+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                         D. McGrew\nRequest for Comments: 7714                           Cisco Systems, Inc.\nCategory: Standards Track                                        K. Igoe\nISSN: 2070-1721                                 National Security Agency\n                                                           December 2015",
      "raw": true
    },
    {
      "indent": 11,
      "text": "         AES-GCM Authenticated Encryption\nin the Secure Real-time Transport Protocol (SRTP)",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document defines how the AES-GCM Authenticated Encryption with Associated Data family of algorithms can be used to provide confidentiality and data authentication in the Secure Real-time Transport Protocol (SRTP).",
      "ja": "この文書では、アルゴリズムの関連するデータ・家族とAES-GCM認証済み暗号化はセキュアリアルタイム転送プロトコル（SRTP）で、機密性とデータ認証を提供するために使用することができる方法を定義します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 5741のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc7714.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc7714で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2015 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2015 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................3\n2. Conventions Used in This Document ...............................4\n3. Overview of the SRTP/SRTCP AEAD Security Architecture ...........4\n4. Terminology .....................................................5\n5. Generic AEAD Processing .........................................6\n   5.1. Types of Input Data ........................................6\n   5.2. AEAD Invocation Inputs and Outputs .........................6\n        5.2.1. Encrypt Mode ........................................6\n        5.2.2. Decrypt Mode ........................................7\n   5.3. Handling of AEAD Authentication ............................7\n6. Counter Mode Encryption .........................................7\n7. Unneeded SRTP/SRTCP Fields ......................................8\n   7.1. SRTP/SRTCP Authentication Tag Field ........................8\n   7.2. RTP Padding ................................................9\n8. AES-GCM Processing for SRTP .....................................9\n   8.1. SRTP IV Formation for AES-GCM ..............................9\n   8.2. Data Types in SRTP Packets ................................10\n   8.3. Handling Header Extensions ................................11\n   8.4. Prevention of SRTP IV Reuse ...............................12\n9. AES-GCM Processing of SRTCP Compound Packets ...................13\n   9.1. SRTCP IV Formation for AES-GCM ............................13\n   9.2. Data Types in Encrypted SRTCP Compound Packets ............14\n   9.3. Data Types in Unencrypted SRTCP Compound Packets ..........16\n   9.4. Prevention of SRTCP IV Reuse ..............................17\n10. Constraints on AEAD for SRTP and SRTCP ........................17\n11. Key Derivation Functions ......................................18\n12. Summary of AES-GCM in SRTP/SRTCP ..............................19\n13. Security Considerations .......................................20\n   13.1. Handling of Security-Critical Parameters .................20\n   13.2. Size of the Authentication Tag ...........................21\n14. IANA Considerations ...........................................21\n   14.1. SDES .....................................................21\n   14.2. DTLS-SRTP ................................................22\n   14.3. MIKEY ....................................................23\n15. Parameters for Use with MIKEY .................................23\n16. Some RTP Test Vectors .........................................24\n   16.1. SRTP AEAD_AES_128_GCM ....................................25\n        16.1.1. SRTP AEAD_AES_128_GCM Encryption ..................25\n        16.1.2. SRTP AEAD_AES_128_GCM Decryption ..................27\n        16.1.3. SRTP AEAD_AES_128_GCM Authentication Tagging ......29\n        16.1.4. SRTP AEAD_AES_128_GCM Tag Verification ............30\n   16.2. SRTP AEAD_AES_256_GCM ....................................31\n        16.2.1. SRTP AEAD_AES_256_GCM Encryption ..................31\n        16.2.2. SRTP AEAD_AES_256_GCM Decryption ..................33\n        16.2.3. SRTP AEAD_AES_256_GCM Authentication Tagging ......35\n        16.2.4. SRTP AEAD_AES_256_GCM Tag Verification ............36",
      "raw": true
    },
    {
      "indent": 3,
      "text": "17. RTCP Test Vectors .............................................37\n   17.1. SRTCP AEAD_AES_128_GCM Encryption and Tagging ............39\n   17.2. SRTCP AEAD_AES_256_GCM Verification and Decryption .......41\n   17.3. SRTCP AEAD_AES_128_GCM Tagging Only ......................43\n   17.4. SRTCP AEAD_AES_256_GCM Tag Verification ..................44\n18. References ....................................................45\n   18.1. Normative References .....................................45\n   18.2. Informative References ...................................47\nAcknowledgements ..................................................48\nAuthors' Addresses ................................................48",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "The Secure Real-time Transport Protocol (SRTP) [RFC3711] is a profile of the Real-time Transport Protocol (RTP) [RFC3550], which can provide confidentiality, message authentication, and replay protection to the RTP traffic and to the control traffic for RTP, the Real-time Transport Control Protocol (RTCP). It is important to note that the outgoing SRTP packets from a single endpoint may be originating from several independent data sources.",
      "ja": "セキュアリアルタイム転送プロトコル（SRTP）[RFC3711]はRTPトラフィックにし、制御トラフィックに機密性、メッセージ認証、および再生保護を提供することができ、リアルタイムトランスポートプロトコル（RTP）[RFC3550]のプロファイルであり、 RTPのために、リアルタイムトランスポート制御プロトコル（RTCP）。単一のエンドポイントからの発信SRTPパケットはいくつかの独立したデータソースから発信できることに留意することが重要です。"
    },
    {
      "indent": 3,
      "text": "Authenticated Encryption [BN00] is a form of encryption that, in addition to providing confidentiality for the Plaintext that is encrypted, provides a way to check its integrity and authenticity. Authenticated Encryption with Associated Data, or AEAD [R02], adds the ability to check the integrity and authenticity of some Associated Data (AD), also called \"Additional Authenticated Data\" (AAD), that is not encrypted. This specification makes use of the interface to a generic AEAD algorithm as defined in [RFC5116].",
      "ja": "認証された暗号化は、[BN00]は暗号化されて平文のための機密性を提供することに加えて、その整合性と信頼性を確認する方法を提供し、暗号化の形式です。関連するデータ、またはAEAD [R02]で暗号化、認証、暗号化されていないにも「追加認証されたデータ」（AAD）と呼ばれる、いくつかの関連するデータ（AD）の完全性と正当性をチェックする機能が、追加されます。 [RFC5116]で定義されるように、本明細書は、一般的なAEADアルゴリズムへのインタフェースを利用します。"
    },
    {
      "indent": 3,
      "text": "The Advanced Encryption Standard (AES) is a block cipher that provides a high level of security and can accept different key sizes. AES Galois/Counter Mode (AES-GCM) [GCM] is a family of AEAD algorithms based upon AES. This specification makes use of the AES versions that use 128-bit and 256-bit keys, which we call \"AES-128\" and \"AES-256\", respectively.",
      "ja": "高度暗号化標準（AES）は、高レベルのセキュリティを提供し、異なる鍵のサイズを受け入れることができるブロック暗号です。 AESガロア/カウンタモード（AES-GCM）は[GCM] AESに基づいAEADアルゴリズムのファミリーです。この仕様は、私たちは、それぞれ、「AES-128」と「AES-256」と呼ぶ128ビットおよび256ビットの鍵を使用するAESバージョンを使用しています。"
    },
    {
      "indent": 3,
      "text": "Any AEAD algorithm provides an intrinsic authentication tag. In many applications, the authentication tag is truncated to less than full length. In this specification, the authentication tag MUST NOT be truncated. The authentications tags MUST be a full 16 octets in length. When used in SRTP/SRTCP, AES-GCM will have two configurations:",
      "ja": "どれAEADアルゴリズムは、固有の認証タグを提供します。多くのアプリケーションでは、認証タグは、全長未満に切り捨てられます。本明細書では、認証タグを切り捨ててはなりません。認証タグの長さは、完全な16個のオクテットでなければなりません。 SRTP / SRTCPで使用する場合、AES-GCMは、次の2つの構成があります。"
    },
    {
      "indent": 6,
      "text": "AEAD_AES_128_GCM AES-128 with a 16-octet authentication tag AEAD_AES_256_GCM AES-256 with a 16-octet authentication tag",
      "ja": "AEAD_AES_128_GCM AES-128 16オクテットの認証タグ16オクテット認証タグAEAD_AES_256_GCM AES-256と"
    },
    {
      "indent": 3,
      "text": "The key size is set when the session is initiated and SHOULD NOT be altered.",
      "ja": "セッションが開始され、変更してはならないとき、キーサイズが設定されています。"
    },
    {
      "indent": 3,
      "text": "The Galois/Counter Mode of operation (GCM) is an AEAD mode of operation for block ciphers. GCM uses Counter Mode to encrypt the data, an operation that can be efficiently pipelined. Further, GCM authentication uses operations that are particularly well suited to efficient implementation in hardware, making it especially appealing for high-speed implementations, or for implementations in an efficient and compact circuit.",
      "ja": "操作のガロア/カウンタ・モード（GCM）は、ブロック暗号のための操作のAEADモードです。 GCMは、データを暗号化するために効率的にパイプライン化することができる動作をカウンタモードを使用します。さらに、GCM認証は、特に高速実装のために魅力的な、または効率的でコンパクトな回路に実装するための製造、ハードウェアで効率的な実装に特に適している操作を使用します。"
    },
    {
      "indent": 3,
      "text": "In summary, this document defines how to use an AEAD algorithm, particularly AES-GCM, to provide confidentiality and message authentication within SRTP and SRTCP packets.",
      "ja": "要約すると、この文書は、SRTPとSRTCPパケット内の機密性とメッセージ認証を提供するために、AEADアルゴリズム、特にAES-GCMを使用する方法を定義します。"
    },
    {
      "indent": 0,
      "text": "2. Conventions Used in This Document",
      "section_title": true,
      "ja": "この文書で使用される2.表記"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "キーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、 \"SHALL\"、 \"SHOULD\"、 \"ないもの\"、 \"推奨\" \"ない（SHOULD NOT）\"、 \"MAY\"、 \"推奨NOT\"、および「OPTIONAL 「本書では[RFC2119]で説明されるように解釈されるべきです。"
    },
    {
      "indent": 0,
      "text": "3. Overview of the SRTP/SRTCP AEAD Security Architecture",
      "section_title": true,
      "ja": "SRTP / SRTCP AEADセキュリティアーキテクチャの概要3。"
    },
    {
      "indent": 3,
      "text": "SRTP/SRTCP AEAD security is based upon the following principles:",
      "ja": "SRTP / SRTCP AEADセキュリティは、以下の原則に基づいています："
    },
    {
      "indent": 6,
      "text": "a) Both privacy and authentication are based upon the use of symmetric algorithms. An AEAD algorithm such as AES-GCM combines privacy and authentication into a single process.",
      "ja": "A）プライバシーと認証の両方は、対称アルゴリズムの使用に基づいています。例えばAES-GCMとしてAEADアルゴリズムは、単一のプロセスにプライバシーと認証を組み合わせました。"
    },
    {
      "indent": 6,
      "text": "b) A secret master key is shared by all participating endpoints -- both those originating SRTP/SRTCP packets and those receiving these packets. Any given master key MAY be used simultaneously by several endpoints to originate SRTP/SRTCP packets (as well as one or more endpoints using this master key to process inbound data).",
      "ja": "SRTP / SRTCPパケットを発信するもの、およびこれらのパケットを受信し、それらの両方 -  B）秘密マスタ鍵はすべての参加エンドポイントによって共有されています。任意の所与のマスタキー（インバウンド・データを処理するためにこのマスターキーを使用して、ならびに1つの以上のエンドポイント）SRTP / SRTCPパケットを発信するために、いくつかのエンドポイントで併用してもよいです。"
    },
    {
      "indent": 6,
      "text": "c) A Key Derivation Function (KDF) is applied to the shared master key value to form separate encryption keys, authentication keys, and salting keys for SRTP and for SRTCP (a total of six keys). This process is described in Section 4.3 of [RFC3711]. The master key MUST be at least as large as the encryption key derived from it. Since AEAD algorithms such as AES-GCM combine encryption and authentication into a single process, AEAD algorithms do not make use of separate authentication keys.",
      "ja": "C）鍵導出関数（KDF）は別の暗号鍵、認証鍵、およびSRTPおよびSRTCPのための塩析キー（6つのキーの合計）を形成するために、共有マスターキー値に適用されます。このプロセスは、[RFC3711]のセクション4.3に記載されています。マスターキーはそれから派生した暗号鍵と少なくとも同じ大きさでなければなりません。このようAES-GCMとしてAEADアルゴリズムは、単一のプロセスに暗号化と認証を組み合わせているので、AEADアルゴリズムは、別の認証キーを使用することはありません。"
    },
    {
      "indent": 6,
      "text": "d) Aside from making modifications to IANA registries to allow AES-GCM to work with Security Descriptions (SDES), Datagram Transport Layer Security for Secure RTP (DTLS-SRTP), and Multimedia Internet KEYing (MIKEY), the details of how the master key is established and shared between the participants are outside the scope of this document. Similarly, any mechanism for rekeying an existing session is outside the scope of the document.",
      "ja": "d）のほかにAES-GCMは、セキュリティ記述（SDES）、セキュアRTP（DTLS-SRTP）のためのデータグラムトランスポート層セキュリティ、およびマルチメディアインターネットキーイング（MIKEY）、どのようにマスターの詳細と連携できるようにするためにIANAレジストリに変更を加えることから、キーが確立され、参加者はこの文書の範囲外である間で共有されています。同様に、既存のセッションを再入力するための任意の機構は、文書の範囲外です。"
    },
    {
      "indent": 6,
      "text": "e) Each time an instantiation of AES-GCM is invoked to encrypt and authenticate an SRTP or SRTCP data packet, a new Initialization Vector (IV) is used. SRTP combines the 4-octet Synchronization Source (SSRC) identifier, the 4-octet Rollover Counter (ROC), and the 2-octet Sequence Number (SEQ) with the 12-octet encryption salt to form a 12-octet IV (see Section 8.1). SRTCP combines the SSRC and 31-bit SRTCP index with the encryption salt to form a 12-octet IV (see Section 9.1).",
      "ja": "e）のAES-GCMのインスタンス化はSRTPまたはSRTCPデータパケットを暗号化し、認証するために呼び出されるたびに、新しい初期化ベクトル（IV）が使用されています。 SRTPは12オクテットIVを形成するために、12オクテットの暗号化塩と4オクテットの同期ソース（SSRC）識別子、4オクテットロールオーバーカウンター（ROC）、及び2オクテットのシーケンス番号（SEQ）を組み合わせた（セクションを参照してください8.1）。 SRTCPは12オクテットIVを形成するために、暗号化塩とSSRC及び31ビットSRTCPインデックスを組み合わせた（セクション9.1を参照）。"
    },
    {
      "indent": 0,
      "text": "4. Terminology",
      "section_title": true,
      "ja": "4.用語"
    },
    {
      "indent": 3,
      "text": "The following terms have very specific meanings in the context of this RFC:",
      "ja": "以下の用語は、このRFCのコンテキストで非常に特定の意味があります。"
    },
    {
      "indent": 6,
      "text": "Instantiation: In AEAD, an instantiation is an (Encryption_key, salt) pair together with all of the data structures (for example, counters) needed for it to function properly. In SRTP/SRTCP, each endpoint will need two instantiations of the AEAD algorithm for each master key in its possession: one instantiation for SRTP traffic and one instantiation for SRTCP traffic.",
      "ja": "インスタンス化：AEADにおいて、インスタンスは、それが適切に機能するために必要な（例えば、カウンタ）データ構造のすべてと一緒に（Encryption_key、塩）のペアです。 SRTPトラフィックのための1つのインスタンス化とSRTCPトラフィックのための1つのインスタンス化：SRTP / SRTCPでは、各エンドポイントは、その保有する各マスターキーのAEADアルゴリズムの2のインスタンスが必要になります。"
    },
    {
      "indent": 6,
      "text": "Invocation: SRTP/SRTCP data streams are broken into packets. Each packet is processed by a single invocation of the appropriate instantiation of the AEAD algorithm.",
      "ja": "呼び出し：SRTP / SRTCPデータストリームをパケットに分割されています。各パケットはAEADアルゴリズムの適切なインスタンスの単一の呼び出しによって処理されます。"
    },
    {
      "indent": 3,
      "text": "In many applications, each endpoint will have one master key for processing outbound data but may have one or more separate master keys for processing inbound data.",
      "ja": "多くのアプリケーションでは、各エンドポイントは、アウトバウンドデータを処理するための一つのマスターキーを持っていますが、インバウンド・データを処理するための1つまたは複数の別個のマスターキーを有することができます。"
    },
    {
      "indent": 0,
      "text": "5. Generic AEAD Processing",
      "section_title": true,
      "ja": "5.ジェネリックAEAD処理"
    },
    {
      "indent": 0,
      "text": "5.1. Types of Input Data",
      "section_title": true,
      "ja": "5.1. 入力データの種類"
    },
    {
      "indent": 6,
      "text": "Associated Data: Data that is to be authenticated but not\n                 encrypted.",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Plaintext: Data that is to be both encrypted and authenticated.",
      "ja": "プレーンテキスト：データの両方に暗号化および認証されます。"
    },
    {
      "indent": 6,
      "text": "Raw Data: Data that is to be neither encrypted nor authenticated.",
      "ja": "生データ：データ暗号化されたことも、認証されてもされていません。"
    },
    {
      "indent": 3,
      "text": "Which portions of SRTP/SRTCP packets that are to be treated as Associated Data, which are to be treated as Plaintext, and which are to be treated as Raw Data are covered in Sections 8.2, 9.2, and 9.3.",
      "ja": "これは平文として扱われる関連付けられたデータとして扱われるべきであり、生データとして扱われるべきであるSRTP / SRTCPパケットの部分はセクション8.2、9.2、および9.3で覆われています。"
    },
    {
      "indent": 0,
      "text": "5.2. AEAD Invocation Inputs and Outputs",
      "section_title": true,
      "ja": "5.2.  AEAD呼び出しインプットとアウトプット"
    },
    {
      "indent": 0,
      "text": "5.2.1. Encrypt Mode",
      "section_title": true,
      "ja": "5.2.1. 暗号化モード"
    },
    {
      "indent": 6,
      "text": "Inputs:\n  Encryption_key              Octet string, either 16 or\n                                32 octets long\n  Initialization_Vector       Octet string, 12 octets long\n  Associated_Data             Octet string of variable length\n  Plaintext                   Octet string of variable length",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Outputs: Ciphertext* Octet string, length = length(Plaintext) + tag_length",
      "ja": "出力：暗号文*オクテット文字列、長さ=長さ（平文）+ TAG_LENGTH"
    },
    {
      "indent": 6,
      "text": "(*): In AEAD, the authentication tag in embedded in the ciphertext. When GCM is being used, the ciphertext consists of the encrypted Plaintext followed by the authentication tag.",
      "ja": "（*）：AEAD、暗号文に埋め込まれた認証タグに。 GCMを使用している場合、暗号文は、認証タグに続く暗号化された平文から成ります。"
    },
    {
      "indent": 0,
      "text": "5.2.2. Decrypt Mode",
      "section_title": true,
      "ja": "5.2.2. 復号化モード"
    },
    {
      "indent": 6,
      "text": "Inputs:\n  Encryption_key              Octet string, either 16 or\n                                32 octets long\n  Initialization_Vector       Octet string, 12 octets long\n  Associated_Data             Octet string of variable length\n  Ciphertext                  Octet string of variable length",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Outputs: Plaintext Octet string, length = length(Ciphertext) - tag_length Validity_Flag Boolean, TRUE if valid, FALSE otherwise",
      "ja": "出力：平文オクテット文字列、長さ=長さ（暗号文） -  TAG_LENGTH Validity_Flagブール、TRUE有効であれば、そうでなければFALSE"
    },
    {
      "indent": 0,
      "text": "5.3. Handling of AEAD Authentication",
      "section_title": true,
      "ja": "5.3.  AEAD認証の取り扱い"
    },
    {
      "indent": 3,
      "text": "AEAD requires that all incoming packets MUST pass AEAD authentication before any other action takes place. Plaintext and Associated Data MUST NOT be released until the AEAD authentication tag has been validated. Further, the ciphertext MUST NOT be decrypted until the AEAD tag has been validated.",
      "ja": "AEADは、他のアクションが起こる前に、すべての着信パケットがAEAD認証をパスしなければならないことが必要です。 AEAD認証タグが検証されるまでは平文と関連するデータがリリースされてはなりません。 AEADタグが検証されるまではさらに、暗号文を復号化してはなりません。"
    },
    {
      "indent": 3,
      "text": "Should the AEAD tag prove to be invalid, the packet in question is to be discarded and a Validation Error flag raised. Local policy determines how this flag is to be handled and is outside the scope of this document.",
      "ja": "AEADタグが無効であることを証明する必要があり、問題のパケットが破棄され、検証エラーフラグが発生することがあります。ローカルポリシーは、このフラグが処理されるべきであり、この文書の範囲外である方法を決定します。"
    },
    {
      "indent": 0,
      "text": "6. Counter Mode Encryption",
      "section_title": true,
      "ja": "6.カウンタモードの暗号化"
    },
    {
      "indent": 3,
      "text": "Each outbound packet uses a 12-octet IV and an encryption key to form two outputs:",
      "ja": "各アウトバウンドパケットには、2つの出力を形成するために、12オクテットIVと暗号化キーを使用しています。"
    },
    {
      "indent": 3,
      "text": "o a 16-octet first_key_block, which is used in forming the authentication tag, and",
      "ja": "認証タグを形成するのに使用される16オクテットfirst_key_block、O、及び"
    },
    {
      "indent": 3,
      "text": "o a keystream of octets, formed in blocks of 16 octets each",
      "ja": "16オクテットそれぞれのブロックに形成されたオクテットのキーストリーム、O"
    },
    {
      "indent": 3,
      "text": "The first 16-octet block of the key is saved for use in forming the authentication tag, and the remainder of the keystream is XORed to the Plaintext to form the cipher. This keystream is formed one block at a time by inputting the concatenation of a 12-octet IV (see Sections 8.1 and 9.1) with a 4-octet block to AES. The pseudocode below illustrates this process:",
      "ja": "キーの最初の16オクテットのブロックは、認証タグを形成する際に使用するために保存され、キーストリームの残りは暗号を形成するために、平文にXORされます。このキーストリームは、12オクテットIVの連結を入力することにより、一度に1ブロックずつ形成されているAESの4オクテットブロックと（セクション8.1および9.1を参照）。以下の擬似コードは、このプロセスを示しています。"
    },
    {
      "indent": 4,
      "text": "def GCM_keystream( Plaintext_len, IV, Encryption_key ): assert Plaintext_len <= (2**36) - 32 ## measured in octets key_stream = \"\" block_counter = 1 first_key_block = AES_ENC( data=IV||block_counter, key=Encryption_key ) while len(key_stream) < Plaintext_len: block_counter = block_counter + 1 key_block = AES_ENC( data=IV||block_counter, key=Encryption_key ) key_stream = key_stream||key_block key_stream = truncate( key_stream, Plaintext_len ) return( first_key_block, key_stream )",
      "ja": "DEF GCM_keystream（Plaintext_len、IV、Encryption_key）：アサートPlaintext_len <=（2 ** 36） -  32 ##オクテットで測定key_stream = \"\" block_counter = 1 first_key_block = AES_ENC（データ= IV || block_counter、キー= Encryption_key）一方LEN（key_stream）<Plaintext_len：block_counter = block_counter + 1 =なkey_block AES_ENC（データ= IV || block_counter、キー= Encryption_key）key_stream = key_stream ||なkey_block key_stream =切り捨てる（key_stream、Plaintext_len）リターン（first_key_block、key_stream）"
    },
    {
      "indent": 3,
      "text": "In theory, this keystream generation process allows for the encryption of up to (2^36) - 32 octets per invocation (i.e., per packet), far longer than is actually required.",
      "ja": "呼び出しごとに32個のオクテット（すなわち、パケットあたり）、はるかに長い、実際に必要とされるよりも、 - 理論的には、このキーストリーム生成処理は、最大（2 ^ 36）の暗号化を可能にします。"
    },
    {
      "indent": 3,
      "text": "With any counter mode, if the same (IV, Encryption_key) pair is used twice, precisely the same keystream is formed. As explained in Section 9.1 of [RFC3711], this is a cryptographic disaster. For GCM, the consequences are even worse, since such a reuse compromises GCM's integrity mechanism not only for the current packet stream but for all future uses of the current encryption_key.",
      "ja": "同じ（IV、Encryption_key）ペアが2回使用される場合、任意のカウンタモードでは、正確に同じ鍵ストリームが形成されます。 [RFC3711]のセクション9.1で説明したように、これは暗号災害です。こうした再利用は、現在のパケットストリームのためではなく、現在のencryption_keyのすべての将来の使用のためだけでなく、GCMの整合性のメカニズムを損なうので、GCMの場合、結果は、さらに悪化しています。"
    },
    {
      "indent": 0,
      "text": "7. Unneeded SRTP/SRTCP Fields",
      "section_title": true,
      "ja": "7.不要なSRTP / SRTCPフィールド"
    },
    {
      "indent": 3,
      "text": "AEAD Counter Mode encryption removes the need for certain existing SRTP/SRTCP mechanisms.",
      "ja": "AEADカウンタモードの暗号化は、特定の既存のSRTP / SRTCPメカニズムの必要性を取り除きます。"
    },
    {
      "indent": 0,
      "text": "7.1. SRTP/SRTCP Authentication Tag Field",
      "section_title": true,
      "ja": "7.1.  SRTP / SRTCP認証タグフィールド"
    },
    {
      "indent": 3,
      "text": "The AEAD message authentication mechanism MUST be the primary message authentication mechanism for AEAD SRTP/SRTCP. Additional SRTP/SRTCP authentication mechanisms SHOULD NOT be used with any AEAD algorithm, and the optional SRTP/SRTCP authentication tags are NOT RECOMMENDED and SHOULD NOT be present. Note that this contradicts Section 3.4 of [RFC3711], which makes the use of the SRTCP authentication tag field mandatory, but the presence of the AEAD authentication renders the older authentication methods redundant.",
      "ja": "AEADメッセージ認証メカニズムはAEAD SRTP / SRTCPのプライマリメッセージ認証メカニズムでなければなりません。追加のSRTP / SRTCP認証メカニズムがどのAEADアルゴリズムを使用してはなりませんし、オプションのSRTP / SRTCP認証タグが推奨されていませんし、存在すべきではありません。これは必須のSRTCP認証タグフィールドを利用する[RFC3711]のセクション3.4と矛盾するが、AEAD認証の存在は冗長古い認証方法をレンダリングすることに留意されたいです。"
    },
    {
      "indent": 6,
      "text": "Rationale: Some applications use the SRTP/SRTCP authentication tag as a means of conveying additional information, notably [RFC4771]. This document retains the authentication tag field primarily to preserve compatibility with these applications.",
      "ja": "理論的根拠：一部のアプリケーションでは、特に、[RFC4771]、追加の情報を伝達する手段としてSRTP / SRTCP認証タグを使用します。この文書では、これらのアプリケーションとの互換性を維持するために、主に認証タグフィールドを保持します。"
    },
    {
      "indent": 0,
      "text": "7.2. RTP Padding",
      "section_title": true,
      "ja": "7.2.  RTPパディング"
    },
    {
      "indent": 3,
      "text": "AES-GCM does not require that the data be padded out to a specific block size, reducing the need to use the padding mechanism provided by RTP. It is RECOMMENDED that the RTP padding mechanism not be used unless it is necessary to disguise the length of the underlying Plaintext.",
      "ja": "AES-GCMは、データがRTPによって提供されるパディング・メカニズムを使用する必要性を減少させる、特定のブロックサイズにパディングされることを必要としません。下にある平文の長さを偽装するために必要でない限り、RTPパディング機構が使用されないことが推奨されます。"
    },
    {
      "indent": 0,
      "text": "8. AES-GCM Processing for SRTP",
      "section_title": true,
      "ja": "SRTP 8. AES-GCM処理"
    },
    {
      "indent": 0,
      "text": "8.1. SRTP IV Formation for AES-GCM",
      "section_title": true,
      "ja": "8.1.  AES-GCMのためのSRTPのIVの形成"
    },
    {
      "indent": 17,
      "text": "  0  0  0  0  0  0  0  0  0  0  1  1\n  0  1  2  3  4  5  6  7  8  9  0  1\n+--+--+--+--+--+--+--+--+--+--+--+--+\n|00|00|    SSRC   |     ROC   | SEQ |---+\n+--+--+--+--+--+--+--+--+--+--+--+--+   |\n                                        |\n+--+--+--+--+--+--+--+--+--+--+--+--+   |\n|         Encryption Salt           |->(+)\n+--+--+--+--+--+--+--+--+--+--+--+--+   |\n                                        |\n+--+--+--+--+--+--+--+--+--+--+--+--+   |\n|       Initialization Vector       |<--+\n+--+--+--+--+--+--+--+--+--+--+--+--+",
      "raw": true
    },
    {
      "indent": 10,
      "text": "Figure 1: AES-GCM SRTP Initialization Vector Formation",
      "ja": "図1：AES-GCM SRTP初期ベクトルの形成"
    },
    {
      "indent": 3,
      "text": "The 12-octet IV used by AES-GCM SRTP is formed by first concatenating 2 octets of zeroes, the 4-octet SSRC, the 4-octet rollover counter (ROC), and the 2-octet sequence number (SEQ). The resulting 12-octet value is then XORed to the 12-octet salt to form the 12-octet IV.",
      "ja": "AES-GCMのSRTPで使用される12オクテットIVは、第2ゼロ個のオクテット、4オクテットSSRC、4オクテットのロールオーバカウンタ（ROC）、及び2オクテットのシーケンス番号（SEQ）を連結することによって形成されています。得られた12オクテットの値が12オクテットIVを形成するために、12オクテット塩に排他的論理和がとられます。"
    },
    {
      "indent": 0,
      "text": "8.2. Data Types in SRTP Packets",
      "section_title": true,
      "ja": "8.2.  SRTPパケット内のデータ型"
    },
    {
      "indent": 3,
      "text": "All SRTP packets MUST be both authenticated and encrypted. The data fields within the RTP packets are broken into Associated Data, Plaintext, and Raw Data, as follows (see Figure 2):",
      "ja": "すべてのSRTPパケットは認証および暗号化されなければなりません。次のようにRTPパケット内のデータフィールドは、関連するデータ、平文、生データに分割されている（図2参照）。"
    },
    {
      "indent": 6,
      "text": "Associated Data: The version V (2 bits), padding flag P (1 bit), extension flag X (1 bit), Contributing Source (CSRC) count CC (4 bits), marker M (1 bit), Payload Type PT (7 bits), sequence number (16 bits), timestamp (32 bits), SSRC (32 bits), optional CSRC identifiers (32 bits each), and optional RTP extension (variable length).",
      "ja": "関連するデータ：バージョンV（2ビット）、パディングフラグP（1ビット）、拡張フラグX（1ビット）、貢献ソース（CSRC）カウントCC（4ビット）、マーカM（1ビット）、ペイロードタイプPT（ 7ビット）、シーケンス番号（16ビット）、タイムスタンプ（32ビット）、SSRC（32ビット）、任意CSRC識別子（32ビットずつ）、および任意のRTP拡張子（可変長）。"
    },
    {
      "indent": 6,
      "text": "Plaintext: The RTP payload (variable length), RTP padding (if used, variable length), and RTP pad count (if used, 1 octet).",
      "ja": "平文：RTPペイロード（可変長）、RTPパディング（使用される場合、可変長）、およびRTPパッド数（使用される場合、1つのオクテット）。"
    },
    {
      "indent": 6,
      "text": "Raw Data: The optional variable-length SRTP Master Key Identifier (MKI) and SRTP authentication tag (whose use is NOT RECOMMENDED). These fields are appended after encryption has been performed.",
      "ja": "生データ：オプションの可変長SRTPマスターキー識別子（MKI）とSRTP認証タグ（その使用が推奨されていません）。暗号化が行われた後にこれらのフィールドが追加されます。"
    },
    {
      "indent": 4,
      "text": "    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nA  |V=2|P|X|  CC   |M|     PT      |       sequence number         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nA  |                           timestamp                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nA  |           synchronization source (SSRC) identifier            |\n   +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\nA  |      contributing source (CSRC) identifiers (optional)        |\nA  |                               ....                            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nA  |                   RTP extension (OPTIONAL)                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nP  |                          payload  ...                         |\nP  |                               +-------------------------------+\nP  |                               | RTP padding   | RTP pad count |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 16,
      "text": "P = Plaintext (to be encrypted and authenticated)\nA = Associated Data (to be authenticated only)",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Figure 2: Structure of an RTP Packet before Authenticated Encryption",
      "ja": "図2：認証された暗号化前のRTPパケットの構造"
    },
    {
      "indent": 3,
      "text": "Since the AEAD ciphertext is larger than the Plaintext by exactly the length of the AEAD authentication tag, the corresponding SRTP-encrypted packet replaces the Plaintext field with a slightly larger field containing the cipher. Even if the Plaintext field is empty, AEAD encryption must still be performed, with the resulting cipher consisting solely of the authentication tag. This tag is to be placed immediately before the optional variable-length SRTP MKI and SRTP authentication tag fields.",
      "ja": "AEAD暗号文がAEAD認証タグの正確長さ平文よりも大きいので、対応するSRTPで暗号化されたパケットは、暗号を含むわずかに大きいフィールドに平文フィールドを置き換えます。平文フィールドが空の場合でも、AEAD暗号化はまだ結果の暗号がもっぱら認証タグからなるとともに、実行する必要があります。このタグは、オプションの可変長SRTP MKIとSRTP認証タグフィールドの直前に配置されます。"
    },
    {
      "indent": 4,
      "text": "    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nA  |V=2|P|X|  CC   |M|     PT      |       sequence number         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nA  |                           timestamp                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nA  |           synchronization source (SSRC) identifier            |\n   +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\nA  |      contributing source (CSRC) identifiers (optional)        |\nA  |                               ....                            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nA  |                   RTP extension (OPTIONAL)                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nC  |                             cipher                            |\nC  |                               ...                             |\nC  |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nR  :                     SRTP MKI (OPTIONAL)                       :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nR  :           SRTP authentication tag (NOT RECOMMENDED)           :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 16,
      "text": "C = Ciphertext (encrypted and authenticated)\nA = Associated Data (authenticated only)\nR = neither encrypted nor authenticated, added\n    after Authenticated Encryption completed",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Figure 3: Structure of an SRTP Packet after Authenticated Encryption",
      "ja": "図3：認証暗号後のSRTPパケットの構造"
    },
    {
      "indent": 0,
      "text": "8.3. Handling Header Extensions",
      "section_title": true,
      "ja": "8.3. ヘッダ拡張の取り扱い"
    },
    {
      "indent": 3,
      "text": "RTP header extensions were first defined in [RFC3550]. [RFC6904] describes how these header extensions are to be encrypted in SRTP.",
      "ja": "RTPヘッダ拡張が最初に[RFC3550]で定義されました。 [RFC6904]は、これらのヘッダ拡張がSRTPで暗号化される方法を記載しています。"
    },
    {
      "indent": 3,
      "text": "When RFC 6904 is in use, a separate keystream is generated to encrypt selected RTP header extension elements. For the AEAD_AES_128_GCM algorithm, this keystream MUST be generated in the manner defined in [RFC6904], using the AES Counter Mode (AES-CM) transform. For the",
      "ja": "RFC 6904が使用中である場合、別個のキーストリームは、選択されたRTPヘッダ拡張要素を暗号化するために生成されます。 AEAD_AES_128_GCMアルゴリズムのために、このキーストリームはAESカウンタモード（AES-CM）の変換を用いて、[RFC6904]で定義されたように生成されなければなりません。のために"
    },
    {
      "indent": 3,
      "text": "AEAD_AES_256_GCM algorithm, the keystream MUST be generated in the manner defined for the AES_256_CM transform. The originator must perform any required header extension encryption before the AEAD algorithm is invoked.",
      "ja": "AEAD_AES_256_GCMアルゴリズム、キーストリームはAES_256_CM変換用に定義されたように生成されなければなりません。 AEADアルゴリズムが呼び出される前に、発信元は、必要なヘッダ拡張暗号化を実行する必要があります。"
    },
    {
      "indent": 3,
      "text": "As with the other fields contained within the RTP header, both encrypted and unencrypted header extensions are to be treated by the AEAD algorithm as Associated Data (AD). Thus, the AEAD algorithm does not provide any additional privacy for the header extensions, but it does provide integrity and authentication.",
      "ja": "RTPヘッダ内に含まれる他のフィールドと同様に、暗号化および暗号化されていない両方のヘッダ拡張子は、関連するデータ（AD）としてAEADアルゴリズムによって処理されます。したがって、AEADアルゴリズムは、ヘッダ拡張のための追加のプライバシーを提供していませんが、それは整合性と認証を提供します。"
    },
    {
      "indent": 0,
      "text": "8.4. Prevention of SRTP IV Reuse",
      "section_title": true,
      "ja": "8.4.  SRTP IV再利用の防止"
    },
    {
      "indent": 3,
      "text": "In order to prevent IV reuse, we must ensure that the (ROC,SEQ,SSRC) triple is never used twice with the same master key. The following two scenarios illustrate this issue:",
      "ja": "IVの再利用を防ぐために、我々は（ROC、SEQ、SSRC）はトリプル同じマスターキーを2度使用されることはありませんことを確認する必要があります。次の2つのシナリオでは、この問題を示しています。"
    },
    {
      "indent": 6,
      "text": "Counter Management: A rekey MUST be performed to establish a new master key before the (ROC,SEQ) pair cycles back to its original value. Note that this scenario implicitly assumes that either (1) the outgoing RTP process is trusted to not attempt to repeat a (ROC,SEQ) value or (2) the encryption process ensures that both the SEQ and ROC numbers of the packets presented to it are always incremented in the proper fashion. This is particularly important for GCM, since using the same (ROC,SEQ) value twice compromises the authentication mechanism. For GCM, the (ROC,SEQ) and SSRC values used MUST be generated or checked by either the SRTP implementation or a module (e.g., the RTP application) that can be considered equally trustworthy. While [RFC3711] allows the detection of SSRC collisions after they happen, SRTP using GCM with shared master keys MUST prevent an SSRC collision from happening even once.",
      "ja": "カウンター管理：リキーは元の値に戻す（ROC、SEQ）ペア・サイクルの前に新しいマスターキーを確立するために実行しなければなりません。このシナリオでは、暗黙のうちのいずれか（1）、発信RTPプロセスは（ROC、SEQ）値またはを繰り返すようにしようとしないために信頼されていることを前提としています（2）暗号化プロセスは、パケットのSEQとROCの両方の数字がそれに提示することを保証します常に適切な方法でインクリメントされています。同じ（ROC、配列）の値を使用すると、二回の認証メカニズムを損なうので、これは、GCMのために特に重要です。 GCM（ROC、SEQ）とSSRCに使用される値は、SRTP実装または同等に信頼できると考えることができるモジュール（例えば、RTPアプリケーション）のいずれかによって生成又はチェックしなければなりません。彼らは起こった後、[RFC3711]はSSRC衝突の検出を可能にしながら、共有マスターキーでGCMを使用してSRTPは一度も起きてからSSRCの衝突を防止しなければなりません。"
    },
    {
      "indent": 6,
      "text": "SSRC Management: For a given master key, the set of all SSRC values used with that master key must be partitioned into disjoint pools, one pool for each endpoint using that master key to originate outbound data. Each such originating endpoint MUST only issue SSRC values from the pool it has been assigned. Further, each originating endpoint MUST maintain a history of outbound SSRC identifiers that it has issued within the lifetime of the current master key, and when a new SSRC requests an SSRC identifier it MUST NOT be given an identifier that has been previously issued. A rekey MUST be performed before any of the originating endpoints using that master key exhaust their pools of SSRC values. Further, the identity of the entity giving out SSRC values MUST be verified, and the SSRC signaling MUST be integrity protected.",
      "ja": "SSRC管理：指定されたマスター鍵は、そのマスターキーで使用されるすべてのSSRC値のセットが互いに素のプールに分割する必要があり、送信データを発信するためにそのマスター鍵を使用して、各エンドポイントのために1つのプール。それぞれのそのような発信エンドポイントは、それが割り当てられているプールからのSSRC値を発行しなければなりません。さらに、各発信エンドポイントは、それが現在のマスターキーの有効期間内に発行しているアウトバウンドSSRC識別子の履歴を保持しなければならない、と新しいSSRCはSSRC識別子を要求したとき、それは、以前に発行された識別子を与えてはなりません。リキーは、マスター鍵排気SSRC値のそれらのプールを使用して発信元のエンドポイントのいずれかの前に行われなければなりません。さらに、SSRC値を配っエンティティの身元を確認する必要があり、かつSSRCシグナリングは、完全性が保護されなければなりません。"
    },
    {
      "indent": 0,
      "text": "9. AES-GCM Processing of SRTCP Compound Packets",
      "section_title": true,
      "ja": "SRTCP化合物パケットの9 AES-GCM処理"
    },
    {
      "indent": 3,
      "text": "All SRTCP compound packets MUST be authenticated, but unlike SRTP, SRTCP packet encryption is optional. A sender can select which packets to encrypt and indicates this choice with a 1-bit Encryption flag (located just before the 31-bit SRTCP index).",
      "ja": "すべてのSRTCP化合パケットが認証される必要がありますが、SRTPとは異なり、SRTCPパケットの暗号化はオプションです。送信者は、暗号化するパケットと（ちょうど31ビットSRTCPインデックスの前に位置する）、1ビットの暗号化フラグを使用してこの選択を指示する選択することができます。"
    },
    {
      "indent": 0,
      "text": "9.1. SRTCP IV Formation for AES-GCM",
      "section_title": true,
      "ja": "9.1.  AES-GCMのためのSRTCP IVの形成"
    },
    {
      "indent": 3,
      "text": "The 12-octet IV used by AES-GCM SRTCP is formed by first concatenating 2 octets of zeroes, the 4-octet SSRC identifier, 2 octets of zeroes, a single \"0\" bit, and the 31-bit SRTCP index. The resulting 12-octet value is then XORed to the 12-octet salt to form the 12-octet IV.",
      "ja": "AES-GCMのSRTCPによって使用される12オクテットIVは最初ゼロの2つのオクテット、4オクテットSSRC識別子、ゼロの2つのオクテット、単一の「0」ビット、および31ビットのSRTCPインデックスを連結することによって形成されています。得られた12オクテットの値が12オクテットIVを形成するために、12オクテット塩に排他的論理和がとられます。"
    },
    {
      "indent": 17,
      "text": "  0  1  2  3  4  5  6  7  8  9 10 11\n+--+--+--+--+--+--+--+--+--+--+--+--+\n|00|00|    SSRC   |00|00|0+SRTCP Idx|---+\n+--+--+--+--+--+--+--+--+--+--+--+--+   |\n                                        |\n+--+--+--+--+--+--+--+--+--+--+--+--+   |\n|         Encryption Salt           |->(+)\n+--+--+--+--+--+--+--+--+--+--+--+--+   |\n                                        |\n+--+--+--+--+--+--+--+--+--+--+--+--+   |\n|       Initialization Vector       |<--+\n+--+--+--+--+--+--+--+--+--+--+--+--+",
      "raw": true
    },
    {
      "indent": 14,
      "text": "Figure 4: SRTCP Initialization Vector Formation",
      "ja": "図4：SRTCP初期ベクトルの形成"
    },
    {
      "indent": 0,
      "text": "9.2. Data Types in Encrypted SRTCP Compound Packets",
      "section_title": true,
      "ja": "9.2. 暗号化されたSRTCP化合物パケットにデータの種類"
    },
    {
      "indent": 4,
      "text": "    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nA  |V=2|P|   RC    |  Packet Type  |            length             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nA  |           synchronization source (SSRC) of sender             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nP  |                         sender info                           :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nP  |                        report block 1                         :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nP  |                        report block 2                         :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nP  |                              ...                              :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nP  |V=2|P|   SC    |  Packet Type  |              length           |\n   +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\nP  |                          SSRC/CSRC_1                          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nP  |                           SDES items                          :\n   +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\nP  |                              ...                              :\n   +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\nA  |1|                         SRTCP index                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nR  |                  SRTCP MKI (optional) index                   :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nR  :           SRTCP authentication tag (NOT RECOMMENDED)          :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 16,
      "text": "P = Plaintext (to be encrypted and authenticated)\nA = Associated Data (to be authenticated only)\nR = neither encrypted nor authenticated, added after\n    encryption",
      "raw": true
    },
    {
      "indent": 11,
      "text": "Figure 5: AEAD SRTCP Inputs When Encryption Flag = 1 (The fields are defined in RFC 3550.)",
      "ja": "図5：AEAD SRTCP入力する暗号化フラグ= 1（フィールドは、RFC 3550で定義されています）"
    },
    {
      "indent": 3,
      "text": "When the Encryption flag is set to 1, the SRTCP packet is broken into Plaintext, Associated Data, and Raw (untouched) Data (as shown above in Figure 5):",
      "ja": "暗号化フラグが1にセットされたとき（図5に上記のように）、SRTCPパケットが平文、関連するデータ、およびRAW（そのまま）のデータに分割されます。"
    },
    {
      "indent": 6,
      "text": "Associated Data: The packet version V (2 bits), padding flag P (1 bit), reception report count RC (5 bits), Packet Type (8 bits), length (2 octets), SSRC (4 octets), Encryption flag (1 bit), and SRTCP index (31 bits).",
      "ja": "関連するデータ：パケットのバージョンV（2ビット）、パディングフラグP（1ビット）、受信レポートカウントRC（5ビット）、パケットタイプ（8ビット）、長さ（2つのオクテット）、SSRC（4つのオクテット）、暗号化フラグ（1ビット）、およびSRTCPインデックス（31ビット）。"
    },
    {
      "indent": 6,
      "text": "Raw Data: The optional variable-length SRTCP MKI and SRTCP authentication tag (whose use is NOT RECOMMENDED).",
      "ja": "生データ：オプションの可変長SRTCP MKIとSRTCP認証タグ（その使用が推奨されていません）。"
    },
    {
      "indent": 6,
      "text": "Plaintext: All other data.",
      "ja": "平文：他のすべてのデータ。"
    },
    {
      "indent": 3,
      "text": "Note that the Plaintext comes in one contiguous field. Since the AEAD cipher is larger than the Plaintext by exactly the length of the AEAD authentication tag, the corresponding SRTCP-encrypted packet replaces the Plaintext field with a slightly larger field containing the cipher. Even if the Plaintext field is empty, AEAD encryption must still be performed, with the resulting cipher consisting solely of the authentication tag. This tag is to be placed immediately before the Encryption flag and SRTCP index.",
      "ja": "平文が1つの連続したフィールドに来ることに注意してください。 AEAD暗号がAEAD認証タグの正確長さ平文よりも大きいので、対応するSRTCP暗号化パケットは、暗号化を含むわずかに大きいフィールドに平文フィールドを置き換えます。平文フィールドが空の場合でも、AEAD暗号化はまだ結果の暗号がもっぱら認証タグからなるとともに、実行する必要があります。このタグは、暗号化フラグとSRTCPインデックスの直前に置かれるべきです。"
    },
    {
      "indent": 0,
      "text": "9.3. Data Types in Unencrypted SRTCP Compound Packets",
      "section_title": true,
      "ja": "9.3. 暗号化されていないSRTCP化合物パケットにデータの種類"
    },
    {
      "indent": 4,
      "text": "    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nA  |V=2|P|   RC    |  Packet Type  |            length             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nA  |           synchronization source (SSRC) of sender             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nA  |                         sender info                           :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nA  |                        report block 1                         :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nA  |                        report block 2                         :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nA  |                              ...                              :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nA  |V=2|P|   SC    |  Packet Type  |              length           |\n   +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\nA  |                          SSRC/CSRC_1                          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nA  |                           SDES items                          :\n   +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\nA  |                              ...                              :\n   +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\nA  |0|                         SRTCP index                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nR  |                  SRTCP MKI (optional) index                   :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nR  :              authentication tag (NOT RECOMMENDED)             :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 16,
      "text": "A = Associated Data (to be authenticated only)\nR = neither encrypted nor authenticated, added after\n    encryption",
      "raw": true
    },
    {
      "indent": 11,
      "text": "Figure 6: AEAD SRTCP Inputs When Encryption Flag = 0",
      "ja": "図6：AEAD SRTCP入力暗号化フラグ= 0"
    },
    {
      "indent": 3,
      "text": "When the Encryption flag is set to 0, the SRTCP compound packet is broken into Plaintext, Associated Data, and Raw (untouched) Data, as follows (see Figure 6):",
      "ja": "暗号化フラグが0に設定されている場合、SRTCP化合物パケットは次のように（図6参照）、プレーンテキスト、関連するデータ、およびRAW（そのまま）のデータに分割されます。"
    },
    {
      "indent": 6,
      "text": "Plaintext: None.",
      "ja": "プレーンテキスト：なし。"
    },
    {
      "indent": 6,
      "text": "Raw Data: The variable-length optional SRTCP MKI and SRTCP authentication tag (whose use is NOT RECOMMENDED).",
      "ja": "生データ：可変長オプションSRTCP MKI及び（使用推奨されていません）SRTCP認証タグ。"
    },
    {
      "indent": 6,
      "text": "Associated Data: All other data.",
      "ja": "関連するデータ：他のすべてのデータ。"
    },
    {
      "indent": 3,
      "text": "Even though there is no ciphertext in this RTCP packet, AEAD encryption returns a cipher field that is precisely the length of the AEAD authentication tag. This cipher is to be placed before the Encryption flag and the SRTCP index in the authenticated SRTCP packet.",
      "ja": "このRTCPパケットには暗号文が存在しないにもかかわらず、AEADの暗号化は、正確にAEAD認証タグの長さである暗号化フィールドを返します。この暗号は、暗号化フラグと認証されたSRTCPパケットでSRTCPインデックスの前に置かれるべきです。"
    },
    {
      "indent": 0,
      "text": "9.4. Prevention of SRTCP IV Reuse",
      "section_title": true,
      "ja": "9.4.  SRTCP IV再利用の防止"
    },
    {
      "indent": 3,
      "text": "A new master key MUST be established before the 31-bit SRTCP index cycles back to its original value. Ideally, a rekey should be performed and a new master key put in place well before the SRTCP index cycles back to the starting value.",
      "ja": "新しいマスター鍵は、元の値に対して31ビットSRTCPインデックスサイクルの前に確立されなければなりません。理想的には、再入力を行う必要があり、新たなマスターキーはバック開始値によくSRTCPインデックスサイクルの前の場所に置きます。"
    },
    {
      "indent": 3,
      "text": "The comments on SSRC management in Section 8.4 also apply.",
      "ja": "8.4節でSSRC管理上のコメントにも適用されます。"
    },
    {
      "indent": 0,
      "text": "10. Constraints on AEAD for SRTP and SRTCP",
      "section_title": true,
      "ja": "SRTPとSRTCPのためAEAD 10.制約"
    },
    {
      "indent": 3,
      "text": "In general, any AEAD algorithm can accept inputs with varying lengths, but each algorithm can accept only a limited range of lengths for a specific parameter. In this section, we describe the constraints on the parameter lengths that any AEAD algorithm must support to be used in AEAD-SRTP. Additionally, we specify a complete parameter set for one specific family of AEAD algorithms, namely AES-GCM.",
      "ja": "一般に、任意AEADアルゴリズムは、様々な長さの入力を受け入れることができるが、各アルゴリズムは、特定のパラメータの長さの限られた範囲を受け入れることができます。ここでは、パラメータに制約を記述する任意のAEADアルゴリズムはAEAD-SRTPで使用されることをサポートしなければならないという長さ。さらに、我々はAEADアルゴリズム、すなわち、AES-GCMの特定の一人の家族のための完全なパラメータセットを指定します。"
    },
    {
      "indent": 3,
      "text": "All AEAD algorithms used with SRTP/SRTCP MUST satisfy the five constraints listed below:",
      "ja": "SRTP / SRTCPで使用されるすべてのAEADアルゴリズムは、下記の5つの制約を満たさなければなりません。"
    },
    {
      "indent": 3,
      "text": "Parameter  Meaning                  Value\n---------------------------------------------------------------------\nA_MAX      maximum Associated       MUST be at least 12 octets.\n           Data length",
      "raw": true
    },
    {
      "indent": 3,
      "text": "N_MIN minimum nonce (IV) MUST be 12 octets. length",
      "ja": "N_MIN最小ナンス（IV）は12個のオクテットでなければなりません。長さ"
    },
    {
      "indent": 3,
      "text": "N_MAX maximum nonce (IV) MUST be 12 octets. length",
      "ja": "N_MAX最大ナンス（IV）は12個のオクテットでなければなりません。長さ"
    },
    {
      "indent": 3,
      "text": "P_MAX maximum Plaintext GCM: MUST be <= 2^36 - 32 octets. length per invocation",
      "ja": "P_MAX最大平文GCMは： -  32オクテット<= 2 ^ 36でなければなりません。呼び出しあたりの長さ"
    },
    {
      "indent": 3,
      "text": "C_MAX maximum ciphertext GCM: MUST be <= 2^36 - 16 octets. length per invocation",
      "ja": "C_MAX最大暗号文GCM： -  16オクテット<= 2 ^ 36でなければなりません。呼び出しあたりの長さ"
    },
    {
      "indent": 3,
      "text": "For the sake of clarity, we specify three additional parameters:",
      "ja": "明確にするために、私たちは三つの追加のパラメータを指定します。"
    },
    {
      "indent": 6,
      "text": "AEAD authentication tag length MUST be 16 octets",
      "ja": "AEAD認証タグの長さは16個のオクテットでなければなりません"
    },
    {
      "indent": 6,
      "text": "Maximum number of invocations SRTP: MUST be at most 2^48 for a given instantiation SRTCP: MUST be at most 2^31",
      "ja": "呼び出しのSRTPの最大数：指定したインスタンス化SRTCPのために最大2 ^ 48でなければならない：最大2 ^ 31でなければなりません"
    },
    {
      "indent": 6,
      "text": "Block Counter size GCM: MUST be 32 bits",
      "ja": "ブロックカウンタサイズGCM：32ビットでなければなりません"
    },
    {
      "indent": 3,
      "text": "The reader is reminded that the ciphertext is longer than the Plaintext by exactly the length of the AEAD authentication tag.",
      "ja": "読者は、暗号文がAEAD認証タグの長さが正確で長い平文よりであることを思い出させています。"
    },
    {
      "indent": 0,
      "text": "11. Key Derivation Functions",
      "section_title": true,
      "ja": "11.鍵導出関数"
    },
    {
      "indent": 3,
      "text": "A Key Derivation Function (KDF) is used to derive all of the required encryption and authentication keys from a secret value shared by the endpoints. The AEAD_AES_128_GCM algorithm MUST use the (128-bit) AES_CM PRF KDF described in [RFC3711]. AEAD_AES_256_GCM MUST use the AES_256_CM_PRF KDF described in [RFC6188].",
      "ja": "鍵導出関数（KDF）は、エンドポイントによって共有秘密値から必要な暗号化および認証鍵の全てを導出するために使用されます。 AEAD_AES_128_GCMアルゴリズムは[RFC3711]に記載の（128ビット）AES_CM PRF KDFを使用しなければなりません。 AEAD_AES_256_GCMは[RFC6188]で説明AES_256_CM_PRF KDFを使用しなければなりません。"
    },
    {
      "indent": 0,
      "text": "12. Summary of AES-GCM in SRTP/SRTCP",
      "section_title": true,
      "ja": "SRTP / SRTCPにAES-GCMの12まとめ"
    },
    {
      "indent": 3,
      "text": "For convenience, much of the information about the use of the AES-GCM family of algorithms in SRTP is collected in the tables contained in this section.",
      "ja": "便宜上、SRTPにおけるアルゴリズムのAES-GCMファミリーの使用に関する情報の多くは、このセクションに含まれるテーブルに回収されます。"
    },
    {
      "indent": 3,
      "text": "The AES-GCM family of AEAD algorithms is built around the AES block cipher algorithm. AES-GCM uses AES-CM for encryption and Galois Message Authentication Code (GMAC) for authentication. A detailed description of the AES-GCM family can be found in [RFC5116]. The following members of the AES-GCM family may be used with SRTP/SRTCP:",
      "ja": "AEADアルゴリズムのAES-GCMファミリは、AESブロック暗号アルゴリズムを中心に構築されています。 AES-GCMは暗号化と認証のためのガロアメッセージ認証コード（GMAC）のためにAES-CMを使用しています。 AES-GCMファミリーの詳細な説明は、[RFC5116]に見出すことができます。 AES-GCMファミリーの以下のメンバーは、SRTP / SRTCPと一緒に使用することができます。"
    },
    {
      "indent": 5,
      "text": "Name                 Key Size      AEAD Tag Size      Reference\n================================================================\nAEAD_AES_128_GCM     16 octets     16 octets          [RFC5116]\nAEAD_AES_256_GCM     32 octets     16 octets          [RFC5116]",
      "raw": true
    },
    {
      "indent": 16,
      "text": "Table 1: AES-GCM Algorithms for SRTP/SRTCP",
      "ja": "表1：SRTP / SRTCPのためのAES-GCMアルゴリズム"
    },
    {
      "indent": 3,
      "text": "Any implementation of AES-GCM SRTP MUST support both AEAD_AES_128_GCM and AEAD_AES_256_GCM. Below, we summarize parameters associated with these two GCM algorithms:",
      "ja": "AES-GCMのSRTPのいずれかの実装では、AEAD_AES_128_GCMとAEAD_AES_256_GCMの両方をサポートしなければなりません。以下では、これら二つのGCMアルゴリズムに関連するパラメータを要約したものです。"
    },
    {
      "indent": 5,
      "text": "+--------------------------------+------------------------------+\n| Parameter                      | Value                        |\n+--------------------------------+------------------------------+\n| Master key length              | 128 bits                     |\n| Master salt length             | 96 bits                      |\n| Key Derivation Function        | AES_CM PRF [RFC3711]         |\n| Maximum key lifetime (SRTP)    | 2^48 packets                 |\n| Maximum key lifetime (SRTCP)   | 2^31 packets                 |\n| Cipher (for SRTP and SRTCP)    | AEAD_AES_128_GCM             |\n| AEAD authentication tag length | 128 bits                     |\n+--------------------------------+------------------------------+",
      "raw": true
    },
    {
      "indent": 16,
      "text": "Table 2: The AEAD_AES_128_GCM Crypto Suite",
      "ja": "表2：AEAD_AES_128_GCM暗号スイート"
    },
    {
      "indent": 5,
      "text": "+--------------------------------+------------------------------+\n| Parameter                      | Value                        |\n+--------------------------------+------------------------------+\n| Master key length              | 256 bits                     |\n| Master salt length             | 96 bits                      |\n| Key Derivation Function        | AES_256_CM_PRF [RFC6188]     |\n| Maximum key lifetime (SRTP)    | 2^48 packets                 |\n| Maximum key lifetime (SRTCP)   | 2^31 packets                 |\n| Cipher (for SRTP and SRTCP)    | AEAD_AES_256_GCM             |\n| AEAD authentication tag length | 128 bits                     |\n+--------------------------------+------------------------------+",
      "raw": true
    },
    {
      "indent": 16,
      "text": "Table 3: The AEAD_AES_256_GCM Crypto Suite",
      "ja": "表3：AEAD_AES_256_GCM暗号スイート"
    },
    {
      "indent": 0,
      "text": "13. Security Considerations",
      "section_title": true,
      "ja": "13.セキュリティの考慮事項"
    },
    {
      "indent": 0,
      "text": "13.1. Handling of Security-Critical Parameters",
      "section_title": true,
      "ja": "13.1. セキュリティ上重要なパラメータの取扱いについて"
    },
    {
      "indent": 3,
      "text": "As with any security process, the implementer must take care to ensure that cryptographically sensitive parameters are properly handled. Many of these recommendations hold for all SRTP cryptographic algorithms, but we include them here to emphasize their importance.",
      "ja": "すべてのセキュリティプロセスと同様に、実装者は、暗号敏感なパラメータが適切に処理されていることを確認するために注意を払う必要があります。これらの推奨事項の多くは、すべてのSRTP暗号化アルゴリズムのために保持するが、我々は彼らの重要性を強調するために、ここでそれらを含めます。"
    },
    {
      "indent": 3,
      "text": "- If the master salt is to be kept secret, it MUST be properly erased when no longer needed.",
      "ja": " - マスター塩は秘密にされる場合は、不要になったときに、それが適切に消去されなければなりません。"
    },
    {
      "indent": 3,
      "text": "- The secret master key and all keys derived from it MUST be kept secret. All keys MUST be properly erased when no longer needed.",
      "ja": " - 秘密のマスターキーと、そこから派生したすべてのキーは秘密にしなければなりません。不要になったときにすべてのキーが適切に消去されなければなりません。"
    },
    {
      "indent": 3,
      "text": "- At the start of each packet, the Block Counter MUST be reset to 1. The Block Counter is incremented after each block key has been produced, but it MUST NOT be allowed to exceed 2^32 - 1 for GCM. Note that even though the Block Counter is reset at the start of each packet, IV uniqueness is ensured by the inclusion of SSRC/ROC/SEQ or the SRTCP index in the IV. (The reader is reminded that the first block of key produced is reserved for use in authenticating the packet and is not used to encrypt Plaintext.)",
      "ja": " - 各パケットの開始時に、ブロックカウンタは、各ブロックキーが生成された後、ブロックカウンタをインクリメント1にリセットする必要があり、2 ^ 32超過させてはいけません -  GCMのための1。ブロックカウンタは、各パケットの開始時にリセットされていても、IVの一意のIVにおけるSSRC / ROC / SEQまたはSRTCPインデックスを含めることによって確保されることに留意されたいです。 （読者は、生成鍵の最初のブロックは、パケットを認証に使用するために予約されており、平文を暗号化するために使用されていないことに留意します。）"
    },
    {
      "indent": 3,
      "text": "- Each time a rekey occurs, the initial values of both the 31-bit SRTCP index and the 48-bit SRTP packet index (ROC||SEQ) MUST be saved in order to prevent IV reuse.",
      "ja": " - キーの再生成が発生するたびに、31ビットのSRTCPインデックスと48ビットのSRTPパケットインデックス（ROC || SEQ）の両方の初期値はIVの再利用を防止するために保存しなければなりません。"
    },
    {
      "indent": 3,
      "text": "- Processing MUST cease if either the 31-bit SRTCP index or the 48-bit SRTP packet index (ROC||SEQ) cycles back to its initial value. Processing MUST NOT resume until a new SRTP/SRTCP session has been established using a new SRTP master key. Ideally, a rekey should be done well before any of these counters cycle.",
      "ja": " -  31ビットSRTCPインデックスまたは48ビットSRTPパケットインデックス（ROC || SEQ）サイクルのいずれかの場合、処理は戻って、その初期値に停止しなければなりません。新しいSRTP / SRTCPセッションが新しいSRTPマスターキーを使用して確立されるまでの処理が再開してはなりません。理想的には、リキーは、これらのカウンタサイクルのいずれかの前によく行われるべきです。"
    },
    {
      "indent": 0,
      "text": "13.2. Size of the Authentication Tag",
      "section_title": true,
      "ja": "13.2. 認証タグのサイズ"
    },
    {
      "indent": 3,
      "text": "We require that the AEAD authentication tag be 16 octets, in order to effectively eliminate the risk of an adversary successfully introducing fraudulent data. Though other protocols may allow the use of truncated authentication tags, the consensus of the authors and the working group is that risks associated with using truncated AES-GCM tags are deemed too high to allow the use of truncated authentication tags in SRTP/SRTCP.",
      "ja": "私たちは、AEAD認証タグが効果的に成功した不正データを導入する敵の危険性を排除するために、16個のオクテットであることが必要です。他のプロトコルが切り捨て認証タグの使用を許可するかもしれないが、著者とワーキンググループのコンセンサスが切り捨てられAES-GCMタグを使用することに伴うリスクはSRTP / SRTCPで切り捨てられた認証タグの使用を可能にするのに十分に高いとみなされるということです。"
    },
    {
      "indent": 0,
      "text": "14. IANA Considerations",
      "section_title": true,
      "ja": "14. IANAの考慮事項"
    },
    {
      "indent": 0,
      "text": "14.1. SDES",
      "section_title": true,
      "ja": "14.1.  HERE"
    },
    {
      "indent": 3,
      "text": "\"Session Description Protocol (SDP) Security Descriptions for Media Streams\" [RFC4568] defines SRTP \"crypto suites\". A crypto suite corresponds to a particular AEAD algorithm in SRTP. In order to allow security descriptions to signal the use of the algorithms defined in this document, IANA has registered the following crypto suites in the \"SRTP Crypto Suite Registrations\" subregistry of the \"Session Description Protocol (SDP) Security Descriptions\" registry. The ABNF [RFC5234] syntax is as follows:",
      "ja": "「メディアストリームのセッション記述プロトコル（SDP）のセキュリティの説明」[RFC4568]はSRTP「暗号スイート」を定義します。暗号スイートは、SRTPにおける特定AEADアルゴリズムに相当します。セキュリティの説明は、この文書で定義されたアルゴリズムの使用を通知することを可能にするために、IANAは、「セッション記述プロトコル（SDP）のセキュリティの説明」レジストリの「SRTP暗号スイート登録」副登録に以下の暗号スイートを登録しています。 ABNF [RFC5234]の構文は次のとおりです。"
    },
    {
      "indent": 6,
      "text": "srtp-crypto-suite-ext = \"AEAD_AES_128_GCM\" / \"AEAD_AES_256_GCM\" / srtp-crypto-suite-ext",
      "ja": "SRTP-暗号スイート-EXT = \"AEAD_AES_128_GCM\" / \"AEAD_AES_256_GCM\" / SRTP-暗号スイート-EXT"
    },
    {
      "indent": 0,
      "text": "14.2. DTLS-SRTP",
      "section_title": true,
      "ja": "14.2.  DTLS、SRTP"
    },
    {
      "indent": 3,
      "text": "DTLS-SRTP [RFC5764] defines DTLS-SRTP \"SRTP protection profiles\". These profiles also correspond to the use of an AEAD algorithm in SRTP. In order to allow the use of the algorithms defined in this document in DTLS-SRTP, IANA has registered the following SRTP protection profiles:",
      "ja": "DTLS-SRTP [RFC5764]はDTLS、SRTP \"SRTP保護プロファイル\" を定義します。これらのプロファイルはまた、SRTPでAEADアルゴリズムの使用に対応しています。 DTLS-SRTPで、このドキュメントで定義されたアルゴリズムの使用を可能にするために、IANAは以下のSRTP保護プロファイルを登録しています："
    },
    {
      "indent": 9,
      "text": "SRTP_AEAD_AES_128_GCM    = {0x00, 0x07}\nSRTP_AEAD_AES_256_GCM    = {0x00, 0x08}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Below, we list the SRTP transform parameters for each of these protection profiles. Unless separate parameters for SRTP and SRTCP are explicitly listed, these parameters apply to both SRTP and SRTCP.",
      "ja": "以下に、私たちは、SRTPは、次の保護プロファイルのそれぞれのパラメータを変換リスト。 SRTPとSRTCPのための別のパラメータが明示的にリストされていない限り、これらのパラメータは、SRTPとSRTCPの両方に適用されます。"
    },
    {
      "indent": 4,
      "text": "SRTP_AEAD_AES_128_GCM cipher: AES_128_GCM cipher_key_length: 128 bits cipher_salt_length: 96 bits aead_auth_tag_length: 16 octets auth_function: NULL auth_key_length: N/A auth_tag_length: N/A maximum lifetime: at most 2^31 SRTCP packets and at most 2^48 SRTP packets",
      "ja": "SRTP_AEAD_AES_128_GCM暗号：AES_128_GCMのcipher_key_length：96ビットaead_auth_tag_length：16オクテットauth_functionを128ビットcipher_salt_length NULL auth_key_length：/ auth_tag_length N：N /最大存続時間：最大で2 ^ 31 SRTCPパケットと最大で2 ^ 48個のSRTPパケット"
    },
    {
      "indent": 4,
      "text": "SRTP_AEAD_AES_256_GCM cipher: AES_256_GCM cipher_key_length: 256 bits cipher_salt_length: 96 bits aead_auth_tag_length: 16 octets auth_function: NULL auth_key_length: N/A auth_tag_length: N/A maximum lifetime: at most 2^31 SRTCP packets and at most 2^48 SRTP packets",
      "ja": "SRTP_AEAD_AES_256_GCM暗号：AES_256_GCMのcipher_key_length：96ビットaead_auth_tag_length：16オクテットauth_functionを256ビットcipher_salt_length NULL auth_key_length：/ auth_tag_length N：N /最大存続時間：最大で2 ^ 31 SRTCPパケットと最大で2 ^ 48個のSRTPパケット"
    },
    {
      "indent": 3,
      "text": "Note that these SRTP protection profiles do not specify an auth_function, auth_key_length, or auth_tag_length, because all of these profiles use AEAD algorithms and thus do not use a separate auth_function, auth_key, or auth_tag. The term \"aead_auth_tag_length\" is used to emphasize that this refers to the authentication tag provided by the AEAD algorithm and that this tag is not located in the authentication tag field provided by SRTP/SRTCP.",
      "ja": "これらのプロファイルの全てがAEADアルゴリズムを使用するため、別々のauth_function、AUTH_KEY、またはauth_tagを使用していないので、これらのSRTP保護プロファイルは、auth_function、auth_key_length、またはauth_tag_lengthを指定していないことに注意してください。用語「aead_auth_tag_length」は、これがAEADアルゴリズムによってこのタグは、SRTP / SRTCPによって提供された認証タグフィールドに配置されていないことを提供された認証タグを意味することを強調するために使用されます。"
    },
    {
      "indent": 0,
      "text": "14.3. MIKEY",
      "section_title": true,
      "ja": "14.3.  MIKEY"
    },
    {
      "indent": 3,
      "text": "In accordance with \"MIKEY: Multimedia Internet KEYing\" [RFC3830], IANA maintains several subregistries under \"Multimedia Internet KEYing (MIKEY) Payload Name Spaces\". Per this document, additions have been made to two of the MIKEY subregistries.",
      "ja": "「MIKEY：マルチメディアインターネットキーイング」によると、[RFC3830]、IANAは、「マルチメディアインターネットキーイング（MIKEY）ペイロード名前空間」の下に、いくつかのsubregistriesを維持します。このドキュメントごとに、追加はマイキーsubregistriesのうちの2つに行われました。"
    },
    {
      "indent": 3,
      "text": "In the \"MIKEY Security Protocol Parameters\" subregistry, the following has been added:",
      "ja": "「MIKEYセキュリティプロトコルのパラメータ」副登録には、以下が追加されました："
    },
    {
      "indent": 6,
      "text": "Type | Meaning                         | Possible Values\n--------------------------------------------------------\n  20 | AEAD authentication tag length  | 16 octets",
      "raw": true
    },
    {
      "indent": 3,
      "text": "This list is, of course, intended for use with GCM. It is conceivable that new AEAD algorithms introduced at some point in the future may require a different set of authentication tag lengths.",
      "ja": "このリストは、当然のことながら、GCMで使用するためのものです。将来のある時点で導入された新しいAEADアルゴリズムは認証タグの長さの異なるセットを必要とし得ることが考えられます。"
    },
    {
      "indent": 3,
      "text": "In the \"Encryption algorithm (Value 0)\" subregistry (derived from Table 6.10.1.b of [RFC3830]), the following has been added:",
      "ja": "「暗号化アルゴリズム（値0）」（[RFC3830]の表6.10.1.b由来）副登録には、以下が追加されました。"
    },
    {
      "indent": 6,
      "text": "  SRTP Encr. | Value | Default Session   |  Default Auth.\n  Algorithm  |       | Encr. Key Length  |   Tag Length\n-----------------------------------------------------------\n  AES-GCM    |    6  |    16 octets      |  16 octets",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The encryption algorithm, session encryption key length, and AEAD authentication tag sizes received from MIKEY fully determine the AEAD algorithm to be used. The exact mapping is described in Section 15.",
      "ja": "暗号化アルゴリズム、セッションの暗号化キーの長さ、及びAEAD認証タグのサイズは、完全AEADアルゴリズムを使用するかを決定MIKEYから受け取りました。正確なマッピングはセクション15に記載されています。"
    },
    {
      "indent": 0,
      "text": "15. Parameters for Use with MIKEY",
      "section_title": true,
      "ja": "MIKEYで使用するための15のパラメータ"
    },
    {
      "indent": 3,
      "text": "MIKEY specifies the algorithm family separately from the key length (which is specified by the Session Encryption key length) and the authentication tag length (specified by the AEAD authentication tag length).",
      "ja": "MIKEYは、（セッション暗号化キーの長さによって指定されている）、キーの長さと（AEAD認証タグの長さで指定された）認証タグの長さとは別にアルゴリズムファミリを指定します。"
    },
    {
      "indent": 6,
      "text": "                     +------------+-------------+-------------+\n                     | Encryption | Encryption  |  AEAD Auth. |\n                     | Algorithm  | Key Length  |  Tag Length |\n                     +============+=============+=============+\nAEAD_AES_128_GCM     |  AES-GCM   | 16 octets   | 16 octets   |\n                     +------------+-------------+-------------+\nAEAD_AES_256_GCM     |  AES-GCM   | 32 octets   | 16 octets   |\n                     +============+=============+=============+",
      "raw": true
    },
    {
      "indent": 11,
      "text": "Table 4: Mapping MIKEY Parameters to AEAD Algorithms",
      "ja": "表4：AEADアルゴリズムへのマッピングMIKEYパラメータ"
    },
    {
      "indent": 3,
      "text": "Section 11 of this document restricts the choice of KDF for AEAD algorithms. To enforce this restriction in MIKEY, we require that the SRTP Pseudorandom Function (PRF) has value AES-CM whenever an AEAD algorithm is used. Note that, according to Section 6.10.1 of [RFC3830], the input key length of the KDF (i.e., the SRTP master key length) is always equal to the session encryption key length. This means, for example, that AEAD_AES_256_GCM will use AES_256_CM_PRF as the KDF.",
      "ja": "このドキュメントのセクション11は、AEADアルゴリズムのKDFの選択肢を制限します。 MIKEYでこの制限を強制するために、我々はAEADアルゴリズムが使用されるたびにSRTP擬似ランダム関数（PRF）が値AES-CMを有することを必要とします。 [RFC3830]、KDFの入力キーの長さのセクション6.10.1によると、なお（すなわち、SRTPマスタ鍵の長さ）は、常にセッション暗号キーの長さに等しいです。これはAEAD_AES_256_GCMはKDFとしてAES_256_CM_PRFを使用すること、例えば、意味しています。"
    },
    {
      "indent": 0,
      "text": "16. Some RTP Test Vectors",
      "section_title": true,
      "ja": "16.いくつかのRTPテストベクトル"
    },
    {
      "indent": 3,
      "text": "The examples in this section are all based upon the same RTP packet",
      "ja": "このセクションの例は、すべて同じRTPパケットに基づいています"
    },
    {
      "indent": 12,
      "text": "8040f17b 8041f8d3 5501a0b2 47616c6c\n69612065 7374206f 6d6e6973 20646976\n69736120 696e2070 61727465 73207472\n6573",
      "raw": true
    },
    {
      "indent": 3,
      "text": "consisting of a 12-octet header (8040f17b 8041f8d3 5501a0b2) and a 38-octet payload (47616c6c 69612065 7374206f 6d6e6973 20646976 69736120 696e2070 61727465 73207472 6573), which is just the ASCII string \"Gallia est omnis divisa in partes tres\". The salt used (51756964 2070726f 2071756f) comes from the ASCII string \"Quid pro quo\". The 16-octet (128-bit) key is 00 01 02 ... 0f, and the 32-octet (256-bit) key is 00 01 02 ... 1f. At the time this document was written, the RTP payload type (1000000 binary = 64 decimal) was an unassigned value.",
      "ja": "ちょうどASCII文字列 \"ガリアESTオムニdivisa partesのトレスに\" である12オクテットのヘッダ（8040f17b 8041f8d3 5501a0b2）および38オクテットのペイロード（47616c6c 69612065 7374206f 6d6e6973 20646976 69736120 61727465 73207472 696e2070 6573）、からなります。使用される塩は、（51756964 2070726f 2071756f）のASCII文字列「代償」から来ています。 16オクテット（128ビット）のキーが0F ... 00 01 02であり、32オクテット（256ビット）のキーは、1F ... 00 01 02です。この文書が書かれた時点で、RTPペイロードタイプ（1000000バイナリ= 64進）が割り当てられていない値でした。"
    },
    {
      "indent": 3,
      "text": "As shown in Section 8.1, the IV is formed by XORing two 12-octet values. The first 12-octet value is formed by concatenating two zero octets, the 4-octet SSRC (found in the ninth through 12th octets of the packet), the 4-octet rollover counter (ROC) maintained at each end of the link, and the 2-octet sequence number (SEQ) (found in the third and fourth octets of the packet). The second 12-octet value is the salt, a value that is held constant at least until the key is changed.",
      "ja": "8.1節に示されているように、IVは、2つの12オクテット値のXORをとることによって形成されます。第12オクテットの値が2つのゼロオクテット、4オクテットSSRC（パケットの第12オクテットを通して第で見つかった）を連結することによって形成され、4オクテットのロールオーバカウンタ（ROC）は、リンクの両端で維持、および（パケットの第三及び第四オクテットにある）2オクテットのシーケンス番号（SEQ）。第12オクテットの値は、塩、キーが変更される少なくともまで一定に保持される値です。"
    },
    {
      "indent": 8,
      "text": "      | Pad |   SSRC    |    ROC    | SEQ |\n       00 00 55 01 a0 b2 00 00 00 00 f1 7b\nsalt   51 75 69 64 20 70 72 6f 20 71 75 6f\n       ------------------------------------\n  IV   51 75 3c 65 80 c2 72 6f 20 71 84 14",
      "raw": true
    },
    {
      "indent": 3,
      "text": "All of the RTP examples use this IV.",
      "ja": "RTPの例はすべて、このIVを使用しています。"
    },
    {
      "indent": 0,
      "text": "16.1. SRTP AEAD_AES_128_GCM",
      "section_title": true,
      "ja": "16.1.  SRTP AEAD_AES_128_GCM"
    },
    {
      "indent": 0,
      "text": "16.1.1. SRTP AEAD_AES_128_GCM Encryption",
      "section_title": true,
      "ja": "16.1.1.  SRTP暗号化AEAD_AES_128_GCM"
    },
    {
      "indent": 3,
      "text": "Encrypting the following packet:",
      "ja": "次のパケットを暗号化："
    },
    {
      "indent": 8,
      "text": "8040f17b 8041f8d3 5501a0b2 47616c6c\n69612065 7374206f 6d6e6973 20646976\n69736120 696e2070 61727465 73207472\n6573",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Form the IV | Pad | SSRC | ROC | SEQ | 00 00 55 01 a0 b2 00 00 00 00 f1 7b salt: 51 75 69 64 20 70 72 6f 20 71 75 6f IV: 51 75 3c 65 80 c2 72 6f 20 71 84 14",
      "ja": "IVフォーム|パッド| SSRC | ROC | SEQ | 00 00 55 01 A0 B2 00 00 00 00 F1 7B塩：51 75 69 64 20 70 72 6F 20 71 75 6F IV：51 75 65 80 3C C2 72 6F 20 71 84 14"
    },
    {
      "indent": 3,
      "text": "Key: 00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f AAD: 8040f17b 8041f8d3 5501a0b2 PT: 47616c6c 69612065 7374206f 6d6e6973 20646976 69736120 696e2070 61727465 73207472 6573 IV: 51 75 3c 65 80 c2 72 6f 20 71 84 14 H: c6a13b37878f5b826f4f8162a1c8d879",
      "ja": "キー：00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F AAD：8040f17b 8041f8d3 5501a0b2 PT：47616c6c 69612065 7374206f 6d6e6973 20646976 69736120 696e2070 61727465 73207472 6573 IV：51 75 3C 65 80 C2 72 6F 20 71 84 14 H ：c6a13b37878f5b826f4f8162a1c8d879"
    },
    {
      "indent": 3,
      "text": "Encrypt the Plaintext block # 0 IV||blk_cntr: 51753c6580c2726f2071841400000002 key_block: b5 2c 8f cf 92 55 fe 09 df ce a6 73 f0 10 22 b9 plain_block: 47 61 6c 6c 69 61 20 65 73 74 20 6f 6d 6e 69 73 cipher_block: f2 4d e3 a3 fb 34 de 6c ac ba 86 1c 9d 7e 4b ca block # 1 IV||blk_cntr: 51753c6580c2726f2071841400000003 key_block: 9e 07 52 a3 64 5a 2f 4f 2b cb d4 0a 30 b5 a5 fe plain_block: 20 64 69 76 69 73 61 20 69 6e 20 70 61 72 74 65 cipher_block: be 63 3b d5 0d 29 4e 6f 42 a5 f4 7a 51 c7 d1 9b block # 2 IV||blk_cntr: 51753c6580c2726f2071841400000004 key_block: 45 fe 4e ad ed 40 0a 5d 1a f3 63 f9 0c e1 49 3b plain_block: 73 20 74 72 65 73 cipher_block: 36 de 3a df 88 33",
      "ja": "51753c6580c2726f2071841400000002なkey_block：B5 2cは8FのCF 73 F0 10 22 B9のplain_block A6 92 55 FE 09 DFのCE：47 61 6C 6C 69 61 20 65 73 74 20 6F 6D 6E 69 73 cipher_block：平文ブロック＃0 IV || blk_cntrを暗号化F2 4DのE3 A3のFB 34デ6C交流BA 86 1C 9D 7E 4B CAブロック＃1 IV || blk_cntr：51753c6580c2726f2071841400000003なkey_block：9E 07 52 A3 64 5A 2F 4F 2B CB D4の0A 30 B5、A5のFe plain_block：20 64 69 76 69 73 61 20 69 6E 20 70 61 72 74 65 cipher_block：である29 4E 6F 42 A5 F4 7aを51 C7 D1 9bとブロック＃2 IV || blk_cntr 63 3B D5の0D：51753c6580c2726f2071841400000004なkey_block：45のFe 4E広告編40 0A 5D 1aはF3 63 F9 0C e1を49 3B plain_block：73 20 74 72 65 73 cipher_block：36デ第3a DF 88 33"
    },
    {
      "indent": 3,
      "text": "Cipher before tag appended f24de3a3 fb34de6c acba861c 9d7e4bca be633bd5 0d294e6f 42a5f47a 51c7d19b 36de3adf 8833",
      "ja": "f24de3a3 fb34de6c acba861c 9d7e4bca be633bd5 0d294e6f 42a5f47a 51c7d19b 36de3adf 8833追加タグの前に暗号"
    },
    {
      "indent": 3,
      "text": "Compute the GMAC tag",
      "ja": "GMACタグを計算"
    },
    {
      "indent": 5,
      "text": "Process the AAD AAD word: 8040f17b8041f8d35501a0b200000000 partial hash: bcfb3d1d0e6e3e78ba45403377dba11b",
      "ja": "8040f17b8041f8d35501a0b200000000部分ハッシュ：bcfb3d1d0e6e3e78ba45403377dba11b AAD AADワードを処理"
    },
    {
      "indent": 5,
      "text": "Process the cipher cipher word: f24de3a3fb34de6cacba861c9d7e4bca partial hash: 0ebc0abe1b15b32fedd2b07888c1ef61 cipher word: be633bd50d294e6f42a5f47a51c7d19b partial hash: 438e5797011ea860585709a2899f4685 cipher word: 36de3adf883300000000000000000000 partial hash: 336fb643310d7bac2aeaa76247f6036d",
      "ja": "f24de3a3fb34de6cacba861c9d7e4bca部分ハッシュ：0ebc0abe1b15b32fedd2b07888c1ef61暗号言葉：部分ハッシュをbe633bd50d294e6f42a5f47a51c7d19b：438e5797011ea860585709a2899f4685暗号言葉：36de3adf883300000000000000000000部分ハッシュ：336fb643310d7bac2aeaa76247f6036d暗号の暗号単語を処理"
    },
    {
      "indent": 5,
      "text": "Process the length word length word: 00000000000000600000000000000130 partial hash: 1b964067078c408c4e442a8f015e5264",
      "ja": "00000000000000600000000000000130部分ハッシュ：：1b964067078c408c4e442a8f015e5264長さワード長ワードを処理"
    },
    {
      "indent": 3,
      "text": "Turn GHASH into GMAC GHASH: 1b 96 40 67 07 8c 40 8c 4e 44 2a 8f 01 5e 52 64 K0: 92 0b 3f 40 b9 3d 2a 1d 1c 8b 5c d1 e5 67 5e aa full GMAC: 89 9d 7f 27 be b1 6a 91 52 cf 76 5e e4 39 0c ce",
      "ja": "GMAC GHASHにGHASHを回す：01 5E 52 64 K0 8F 1B 96 40 67 07 8C 40 8C 4E 44 A：92 0B 3F 40 B9 3D 2A 1D 1C 8B 5C D1 E5 67 5E AA完全GMAC：27 7F 89（d）は、B1 6Aこと91 52 76 5E CF E4 39 0C CE"
    },
    {
      "indent": 3,
      "text": "Cipher with tag f24de3a3 fb34de6c acba861c 9d7e4bca be633bd5 0d294e6f 42a5f47a 51c7d19b 36de3adf 8833899d 7f27beb1 6a9152cf 765ee439 0cce",
      "ja": "タグ付き暗号f24de3a3 fb34de6c acba861c 9d7e4bca be633bd5 0d294e6f 42a5f47a 51c7d19b 36de3adf 8833899d 7f27beb1 6a9152cf 765ee439 0cce"
    },
    {
      "indent": 3,
      "text": "Encrypted and tagged packet: 8040f17b 8041f8d3 5501a0b2 f24de3a3 fb34de6c acba861c 9d7e4bca be633bd5 0d294e6f 42a5f47a 51c7d19b 36de3adf 8833899d 7f27beb1 6a9152cf 765ee439 0cce",
      "ja": "暗号化され、タグ付きパケット：8040f17b 8041f8d3 5501a0b2 f24de3a3 fb34de6c acba861c 9d7e4bca be633bd5 0d294e6f 42a5f47a 51c7d19b 36de3adf 8833899d 7f27beb1 6a9152cf 765ee439 0cce"
    },
    {
      "indent": 0,
      "text": "16.1.2. SRTP AEAD_AES_128_GCM Decryption",
      "section_title": true,
      "ja": "16.1.2.  SRTP AEAD_AES_128_GCMの復号化"
    },
    {
      "indent": 3,
      "text": "Decrypting the following packet:",
      "ja": "次のパケットを解読します："
    },
    {
      "indent": 8,
      "text": "8040f17b 8041f8d3 5501a0b2 f24de3a3\nfb34de6c acba861c 9d7e4bca be633bd5\n0d294e6f 42a5f47a 51c7d19b 36de3adf\n8833899d 7f27beb1 6a9152cf 765ee439\n0cce",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Form the IV | Pad | SSRC | ROC | SEQ | 00 00 55 01 a0 b2 00 00 00 00 f1 7b salt: 51 75 69 64 20 70 72 6f 20 71 75 6f IV: 51 75 3c 65 80 c2 72 6f 20 71 84 14",
      "ja": "IVフォーム|パッド| SSRC | ROC | SEQ | 00 00 55 01 A0 B2 00 00 00 00 F1 7B塩：51 75 69 64 20 70 72 6F 20 71 75 6F IV：51 75 65 80 3C C2 72 6F 20 71 84 14"
    },
    {
      "indent": 3,
      "text": "Key: 00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f AAD: 8040f17b 8041f8d3 5501a0b2 CT: f24de3a3 fb34de6c acba861c 9d7e4bca be633bd5 0d294e6f 42a5f47a 51c7d19b 36de3adf 8833899d 7f27beb1 6a9152cf 765ee439 0cce IV: 51 75 3c 65 80 c2 72 6f 20 71 84 14 H: c6a13b37878f5b826f4f8162a1c8d879",
      "ja": "キー：00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F AAD：8040f17b 8041f8d3 5501a0b2 CT：f24de3a3 fb34de6c acba861c 9d7e4bca be633bd5 0d294e6f 42a5f47a 51c7d19b 36de3adf 8833899d 7f27beb1 6a9152cf 765ee439 0cce IV：51 75 3C 65 80 C2 72 6F 20 71 84 14 H：c6a13b37878f5b826f4f8162a1c8d879"
    },
    {
      "indent": 3,
      "text": "Verify the received tag 89 9d 7f 27 be b1 6a 91 52 cf 76 5e e4 39 0c ce",
      "ja": "27 7F受信したタグ89 9DはB1 6A 91 52 CF 76 5E E4 39 0C CEことを確認し"
    },
    {
      "indent": 5,
      "text": "Process the AAD AAD word: 8040f17b8041f8d35501a0b200000000 partial hash: bcfb3d1d0e6e3e78ba45403377dba11b",
      "ja": "8040f17b8041f8d35501a0b200000000部分ハッシュ：bcfb3d1d0e6e3e78ba45403377dba11b AAD AADワードを処理"
    },
    {
      "indent": 5,
      "text": "Process the cipher cipher word: f24de3a3fb34de6cacba861c9d7e4bca partial hash: 0ebc0abe1b15b32fedd2b07888c1ef61 cipher word: be633bd50d294e6f42a5f47a51c7d19b partial hash: 438e5797011ea860585709a2899f4685 cipher word: 36de3adf883300000000000000000000 partial hash: 336fb643310d7bac2aeaa76247f6036d",
      "ja": "f24de3a3fb34de6cacba861c9d7e4bca部分ハッシュ：0ebc0abe1b15b32fedd2b07888c1ef61暗号言葉：部分ハッシュをbe633bd50d294e6f42a5f47a51c7d19b：438e5797011ea860585709a2899f4685暗号言葉：36de3adf883300000000000000000000部分ハッシュ：336fb643310d7bac2aeaa76247f6036d暗号の暗号単語を処理"
    },
    {
      "indent": 5,
      "text": "Process the length word length word: 00000000000000600000000000000130 partial hash: 1b964067078c408c4e442a8f015e5264",
      "ja": "00000000000000600000000000000130部分ハッシュ：：1b964067078c408c4e442a8f015e5264長さワード長ワードを処理"
    },
    {
      "indent": 3,
      "text": "Turn GHASH into GMAC GHASH: 1b 96 40 67 07 8c 40 8c 4e 44 2a 8f 01 5e 52 64 K0: 92 0b 3f 40 b9 3d 2a 1d 1c 8b 5c d1 e5 67 5e aa full GMAC: 89 9d 7f 27 be b1 6a 91 52 cf 76 5e e4 39 0c ce",
      "ja": "GMAC GHASHにGHASHを回す：01 5E 52 64 K0 8F 1B 96 40 67 07 8C 40 8C 4E 44 A：92 0B 3F 40 B9 3D 2A 1D 1C 8B 5C D1 E5 67 5E AA完全GMAC：27 7F 89（d）は、B1 6Aこと91 52 76 5E CF E4 39 0C CE"
    },
    {
      "indent": 5,
      "text": " Received tag = 899d7f27 beb16a91 52cf765e e4390cce Computed tag = 899d7f27 beb16a91 52cf765e e4390cce Received tag verified.",
      "ja": "受信したタグ= 899d7f27 beb16a91 52cf765e e4390cceコンピュータグ= 899d7f27 beb16a91 52cf765e e4390cce受信したタグを検証します。"
    },
    {
      "indent": 3,
      "text": "Decrypt the cipher block # 0 IV||blk_cntr: 51753c6580c2726f2071841400000002 key_block: b5 2c 8f cf 92 55 fe 09 df ce a6 73 f0 10 22 b9 cipher_block: f2 4d e3 a3 fb 34 de 6c ac ba 86 1c 9d 7e 4b ca plain_block: 47 61 6c 6c 69 61 20 65 73 74 20 6f 6d 6e 69 73 block # 1 IV||blk_cntr: 51753c6580c2726f2071841400000003 key_block: 9e 07 52 a3 64 5a 2f 4f 2b cb d4 0a 30 b5 a5 fe cipher_block: be 63 3b d5 0d 29 4e 6f 42 a5 f4 7a 51 c7 d1 9b plain_block: 20 64 69 76 69 73 61 20 69 6e 20 70 61 72 74 65 block # 2 IV||blk_cntr: 51753c6580c2726f2071841400000004 key_block: 45 fe 4e ad ed 40 0a 5d 1a f3 63 f9 0c e1 49 3b cipher_block: 36 de 3a df 88 33 plain_block: 73 20 74 72 65 73",
      "ja": "51753c6580c2726f2071841400000002なkey_block：B5 2cは8FのCF 73 F0 10 22 B9 cipher_block A6 92 55 FE 09 DFのCE：F2 4DのE3 A3のFB 34デ6C交流BA 86 1C 9D 7E 4Bカリフォルニアplain_block：暗号ブロック＃0 IV || blk_cntrを解読47 61 6C 6C 69 61 20 65 73 74 20 6F 6D 6E 69 73ブロック＃1 IV || blk_cntr：51753c6580c2726f2071841400000003なkey_block：9E 07 52 A3 64 5A 2F 4F 2B CB D4の0A 30 B5、A5のFe cipher_block：である63 3B D5の0D 29 4E 6F 42 A5 F4 7aを51 C7 D1 9bとのplain_block：20 64 69 76 69 73 61 20 69 6E 20 70 61 72 74 65ブロック＃2 IV || blk_cntr：51753c6580c2726f2071841400000004なkey_block：45 FE 4E広告編40 0A 5D 1aはF3 63 F9の0C e1を49 3B cipher_block：73 20 74 72 65 73 88 33 plain_block DF 36デ3A"
    },
    {
      "indent": 3,
      "text": "Verified and tagged packet: 47616c6c 69612065 7374206f 6d6e6973 20646976 69736120 696e2070 61727465 73207472 6573",
      "ja": "検証し、タグ付きパケット：47616c6c 69612065 7374206f 6d6e6973 20646976 69736120 61727465 73207472 696e2070 6573"
    },
    {
      "indent": 0,
      "text": "16.1.3. SRTP AEAD_AES_128_GCM Authentication Tagging",
      "section_title": true,
      "ja": "16.1.3.  SRTP AEAD_AES_128_GCM認証タグ付け"
    },
    {
      "indent": 3,
      "text": "Tagging the following packet:",
      "ja": "次のパケットをタグ付け："
    },
    {
      "indent": 8,
      "text": "8040f17b 8041f8d3 5501a0b2 47616c6c\n69612065 7374206f 6d6e6973 20646976\n69736120 696e2070 61727465 73207472\n6573",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Form the IV | Pad | SSRC | ROC | SEQ | 00 00 55 01 a0 b2 00 00 00 00 f1 7b salt: 51 75 69 64 20 70 72 6f 20 71 75 6f IV: 51 75 3c 65 80 c2 72 6f 20 71 84 14",
      "ja": "IVフォーム|パッド| SSRC | ROC | SEQ | 00 00 55 01 A0 B2 00 00 00 00 F1 7B塩：51 75 69 64 20 70 72 6F 20 71 75 6F IV：51 75 65 80 3C C2 72 6F 20 71 84 14"
    },
    {
      "indent": 3,
      "text": "Key: 00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f AAD: 8040f17b 8041f8d3 5501a0b2 47616c6c 69612065 7374206f 6d6e6973 20646976 69736120 696e2070 61727465 73207472 6573 IV: 51 75 3c 65 80 c2 72 6f 20 71 84 14 H: c6a13b37878f5b826f4f8162a1c8d879",
      "ja": "キー：00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F AAD：8040f17b 8041f8d3 5501a0b2 47616c6c 69612065 7374206f 6d6e6973 20646976 69736120 696e2070 61727465 73207472 6573 IV：51 75 3C 65 80 C2 72 6F 20 71 84 14 H：c6a13b37878f5b826f4f8162a1c8d879"
    },
    {
      "indent": 3,
      "text": "Compute the GMAC tag",
      "ja": "GMACタグを計算"
    },
    {
      "indent": 5,
      "text": "Process the AAD AAD word: 8040f17b8041f8d35501a0b247616c6c partial hash: 79f41fea34a474a77609d8925e9f2b22 AAD word: 696120657374206f6d6e697320646976 partial hash: 84093a2f85abf17ab37d3ce2f706138f AAD word: 69736120696e20706172746573207472 partial hash: ab2760fee24e6dec754739d8059cd144 AAD word: 65730000000000000000000000000000 partial hash: e84f3c55d287fc561c41d09a8aada4be",
      "ja": "8040f17b8041f8d35501a0b247616c6c部分ハッシュ：79f41fea34a474a77609d8925e9f2b22 AADワード：696120657374206f6d6e697320646976部分ハッシュ：69736120696e20706172746573207472部分ハッシュ：65730000000000000000000000000000部分ハッシュ：e84f3c55d287fc561c41d09a8aada4be AADワードab2760fee24e6dec754739d8059cd144 AADワード84093a2f85abf17ab37d3ce2f706138f AAD AADワードを処理"
    },
    {
      "indent": 5,
      "text": "Process the length word length word: 00000000000001900000000000000000 partial hash: b04200c26b81c98af55cc2eafccd1cbc",
      "ja": "00000000000001900000000000000000部分ハッシュ：：b04200c26b81c98af55cc2eafccd1cbc長さワード長ワードを処理"
    },
    {
      "indent": 3,
      "text": "Turn GHASH into GMAC GHASH: b0 42 00 c2 6b 81 c9 8a f5 5c c2 ea fc cd 1c bc K0: 92 0b 3f 40 b9 3d 2a 1d 1c 8b 5c d1 e5 67 5e aa full GMAC: 22 49 3f 82 d2 bc e3 97 e9 d7 9e 3b 19 aa 42 16",
      "ja": "GMAC GHASHにGHASHを回し：B0 42 00 C2 6bは81 C9 8aはF5 5cとC2はEAのFCのCD 1C BCのK0：92 0B 3F 40 B9 3D 2A 1D 1C 8bは図5c D1 E5 67 5eのAAフルGMAC：22 49 3F 82 D2 BCのE3 97 E9のD7 9E 3B 19 AA 42 16"
    },
    {
      "indent": 3,
      "text": "Cipher with tag 22493f82 d2bce397 e9d79e3b 19aa4216",
      "ja": "タグ付き暗号22493f82 d2bce397 e9d79e3b 19aa4216"
    },
    {
      "indent": 3,
      "text": "Tagged packet: 8040f17b 8041f8d3 5501a0b2 47616c6c 69612065 7374206f 6d6e6973 20646976 69736120 696e2070 61727465 73207472 65732249 3f82d2bc e397e9d7 9e3b19aa 4216",
      "ja": "タグ付きパケット：8040f17b 8041f8d3 5501a0b2 47616c6c 69612065 7374206f 6d6e6973 20646976 69736120 61727465 73207472 65732249 696e2070 3f82d2bc e397e9d7 9e3b19aa 4216"
    },
    {
      "indent": 0,
      "text": "16.1.4. SRTP AEAD_AES_128_GCM Tag Verification",
      "section_title": true,
      "ja": "16.1.4.  SRTP AEAD_AES_128_GCMタグの検証"
    },
    {
      "indent": 3,
      "text": "Verifying the following packet:",
      "ja": "次のパケットの検証："
    },
    {
      "indent": 8,
      "text": "8040f17b 8041f8d3 5501a0b2 47616c6c\n69612065 7374206f 6d6e6973 20646976\n69736120 696e2070 61727465 73207472\n65732249 3f82d2bc e397e9d7 9e3b19aa\n4216",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Form the IV | Pad | SSRC | ROC | SEQ | 00 00 55 01 a0 b2 00 00 00 00 f1 7b salt: 51 75 69 64 20 70 72 6f 20 71 75 6f IV: 51 75 3c 65 80 c2 72 6f 20 71 84 14",
      "ja": "IVフォーム|パッド| SSRC | ROC | SEQ | 00 00 55 01 A0 B2 00 00 00 00 F1 7B塩：51 75 69 64 20 70 72 6F 20 71 75 6F IV：51 75 65 80 3C C2 72 6F 20 71 84 14"
    },
    {
      "indent": 3,
      "text": "Key: 00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f AAD: 8040f17b 8041f8d3 5501a0b2 47616c6c 69612065 7374206f 6d6e6973 20646976 69736120 696e2070 61727465 73207472 6573 CT: 22493f82 d2bce397 e9d79e3b 19aa4216 IV: 51 75 3c 65 80 c2 72 6f 20 71 84 14 H: c6a13b37878f5b826f4f8162a1c8d879",
      "ja": "キー：00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F AAD：8040f17b 8041f8d3 5501a0b2 47616c6c 69612065 7374206f 6d6e6973 20646976 69736120 696e2070 61727465 73207472 6573 CT：22493f82 d2bce397 e9d79e3b 19aa4216 IV：51 75 3C 65 80 C2 72 6F 20 71 84 14 H：c6a13b37878f5b826f4f8162a1c8d879"
    },
    {
      "indent": 3,
      "text": "Verify the received tag 22 49 3f 82 d2 bc e3 97 e9 d7 9e 3b 19 aa 42 16",
      "ja": "受信したタグ22 49 3F 82 D2 BC E3 97 E9のD7 9E 3B 19 AA 42 16を確認"
    },
    {
      "indent": 5,
      "text": "Process the AAD AAD word: 8040f17b8041f8d35501a0b247616c6c partial hash: 79f41fea34a474a77609d8925e9f2b22 AAD word: 696120657374206f6d6e697320646976 partial hash: 84093a2f85abf17ab37d3ce2f706138f AAD word: 69736120696e20706172746573207472 partial hash: ab2760fee24e6dec754739d8059cd144 AAD word: 65730000000000000000000000000000 partial hash: e84f3c55d287fc561c41d09a8aada4be",
      "ja": "8040f17b8041f8d35501a0b247616c6c部分ハッシュ：79f41fea34a474a77609d8925e9f2b22 AADワード：696120657374206f6d6e697320646976部分ハッシュ：69736120696e20706172746573207472部分ハッシュ：65730000000000000000000000000000部分ハッシュ：e84f3c55d287fc561c41d09a8aada4be AADワードab2760fee24e6dec754739d8059cd144 AADワード84093a2f85abf17ab37d3ce2f706138f AAD AADワードを処理"
    },
    {
      "indent": 5,
      "text": "Process the length word length word: 00000000000001900000000000000000 partial hash: b04200c26b81c98af55cc2eafccd1cbc",
      "ja": "00000000000001900000000000000000部分ハッシュ：：b04200c26b81c98af55cc2eafccd1cbc長さワード長ワードを処理"
    },
    {
      "indent": 3,
      "text": "Turn GHASH into GMAC GHASH: b0 42 00 c2 6b 81 c9 8a f5 5c c2 ea fc cd 1c bc K0: 92 0b 3f 40 b9 3d 2a 1d 1c 8b 5c d1 e5 67 5e aa full GMAC: 22 49 3f 82 d2 bc e3 97 e9 d7 9e 3b 19 aa 42 16",
      "ja": "GMAC GHASHにGHASHを回し：B0 42 00 C2 6bは81 C9 8aはF5 5cとC2はEAのFCのCD 1C BCのK0：92 0B 3F 40 B9 3D 2A 1D 1C 8bは図5c D1 E5 67 5eのAAフルGMAC：22 49 3F 82 D2 BCのE3 97 E9のD7 9E 3B 19 AA 42 16"
    },
    {
      "indent": 5,
      "text": " Received tag = 22493f82 d2bce397 e9d79e3b 19aa4216 Computed tag = 22493f82 d2bce397 e9d79e3b 19aa4216 Received tag verified.",
      "ja": "検証タグ= 22493f82 d2bce397 e9d79e3b 19aa4216コンピュータグ= 22493f82 d2bce397 e9d79e3b 19aa4216受信したタグを受信しました。"
    },
    {
      "indent": 0,
      "text": "16.2. SRTP AEAD_AES_256_GCM",
      "section_title": true,
      "ja": "16.2.  SRTP AEAD_AES_256_GCM"
    },
    {
      "indent": 0,
      "text": "16.2.1. SRTP AEAD_AES_256_GCM Encryption",
      "section_title": true,
      "ja": "16.2.1.  SRTP暗号化AEAD_AES_256_GCM"
    },
    {
      "indent": 3,
      "text": "Encrypting the following packet:",
      "ja": "次のパケットを暗号化："
    },
    {
      "indent": 8,
      "text": "8040f17b 8041f8d3 5501a0b2 47616c6c\n69612065 7374206f 6d6e6973 20646976\n69736120 696e2070 61727465 73207472\n6573",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Form the IV | Pad | SSRC | ROC | SEQ | 00 00 55 01 a0 b2 00 00 00 00 f1 7b salt: 51 75 69 64 20 70 72 6f 20 71 75 6f IV: 51 75 3c 65 80 c2 72 6f 20 71 84 14",
      "ja": "IVフォーム|パッド| SSRC | ROC | SEQ | 00 00 55 01 A0 B2 00 00 00 00 F1 7B塩：51 75 69 64 20 70 72 6F 20 71 75 6F IV：51 75 65 80 3C C2 72 6F 20 71 84 14"
    },
    {
      "indent": 3,
      "text": "Key: 00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f AAD: 8040f17b 8041f8d3 5501a0b2 PT: 47616c6c 69612065 7374206f 6d6e6973 20646976 69736120 696e2070 61727465 73207472 6573 IV: 51 75 3c 65 80 c2 72 6f 20 71 84 14 H: f29000b62a499fd0a9f39a6add2e7780",
      "ja": "キー：00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F AAD：8040f17b 8041f8d3 5501a0b2 PT：47616c6c 69612065 7374206f 6d6e6973 20646976 69736120 696e2070 61727465 73207472 6573 IV：51 75 65 80 3C C2 72 6F 20 71 84 14 H：f29000b62a499fd0a9f39a6add2e7780"
    },
    {
      "indent": 3,
      "text": "Encrypt the Plaintext block # 0 IV||blk_cntr: 51753c6580c2726f2071841400000002 key_block: 75 d0 b2 14 c1 43 de 77 9c eb 58 95 5e 40 5a d9 plain_block: 47 61 6c 6c 69 61 20 65 73 74 20 6f 6d 6e 69 73 cipher_block: 32 b1 de 78 a8 22 fe 12 ef 9f 78 fa 33 2e 33 aa block # 1 IV||blk_cntr: 51753c6580c2726f2071841400000003 key_block: 91 e4 7b 4e f3 2b 83 d3 dc 65 0a 72 17 8d da 6a plain_block: 20 64 69 76 69 73 61 20 69 6e 20 70 61 72 74 65 cipher_block: b1 80 12 38 9a 58 e2 f3 b5 0b 2a 02 76 ff ae 0f block # 2 IV||blk_cntr: 51753c6580c2726f2071841400000004 key_block: 68 86 43 eb dd 08 07 98 16 3a 16 d5 e5 04 f6 3a plain_block: 73 20 74 72 65 73 cipher_block: 1b a6 37 99 b8 7b",
      "ja": "平文ブロック＃0 IVを暗号化|| blk_cntr：51753c6580c2726f2071841400000002なkey_block：75 D0 B2 14 C1 43ド77 9C EB 58 95 5E 40 5aはD9のplain_block：47 61 6C 6C 69 61 20 65 73 74 20 6F 6D 6E 69 73 cipher_block。 51753c6580c2726f2071841400000003なkey_block：91 E4 7B 4E F3 2B 83 D3 DC 65 0A 72 17 8Dダ6aはplain_block：20 64 69 76 69 78 FA 33 2E 33 AAブロック＃1 IV || blk_cntr 9F 78 A8 22 FE 12 EFド32 B1 73 61 20 69 6E 20 70 61 72 74 65 cipher_block：B1 80 12 38 9A 58 E2 F3 B5の0B 2aを02 76個のFF AE 0Fブロック＃2 IV || blk_cntr：51753c6580c2726f2071841400000004なkey_block：68 86 43 EB 08 07 98 16 3aとddを16 D5 E5 04 F6第3a plain_block：73 20 74 72 65 73 cipher_block：第1b A6 37 99 B8 7B"
    },
    {
      "indent": 3,
      "text": "Cipher before tag appended 32b1de78 a822fe12 ef9f78fa 332e33aa b1801238 9a58e2f3 b50b2a02 76ffae0f 1ba63799 b87b",
      "ja": "タグの前に暗号が追加さ32b1de78 a822fe12 ef9f78fa 332e33aa b1801238 9a58e2f3 b50b2a02 76ffae0f 1ba63799 b87b"
    },
    {
      "indent": 3,
      "text": "Compute the GMAC tag",
      "ja": "GMACタグを計算"
    },
    {
      "indent": 5,
      "text": "Process the AAD AAD word: 8040f17b8041f8d35501a0b200000000 partial hash: 0154dcb75485b71880e1957c877351bd",
      "ja": "8040f17b8041f8d35501a0b200000000部分ハッシュ：0154dcb75485b71880e1957c877351bd AAD AADワードを処理"
    },
    {
      "indent": 5,
      "text": "Process the cipher cipher word: 32b1de78a822fe12ef9f78fa332e33aa partial hash: c3f07db9a8b9cb4345eb07f793d322d2 cipher word: b18012389a58e2f3b50b2a0276ffae0f partial hash: 6d1e66fe32eb32ecd8906ceab09db996 cipher word: 1ba63799b87b00000000000000000000 partial hash: b3d1d2f1fa3b366619bc42cd2eedafee",
      "ja": "32b1de78a822fe12ef9f78fa332e33aa部分ハッシュ：c3f07db9a8b9cb4345eb07f793d322d2暗号言葉：部分ハッシュb18012389a58e2f3b50b2a0276ffae0f：6d1e66fe32eb32ecd8906ceab09db996暗号言葉：1ba63799b87b00000000000000000000部分ハッシュ：b3d1d2f1fa3b366619bc42cd2eedafee暗号の暗号単語を処理"
    },
    {
      "indent": 5,
      "text": "Process the length word length word: 00000000000000600000000000000130 partial hash: 7debf5fa1fac3bd318d5e1a7ee401091",
      "ja": "00000000000000600000000000000130部分ハッシュ：：7debf5fa1fac3bd318d5e1a7ee401091長さワード長ワードを処理"
    },
    {
      "indent": 3,
      "text": "Turn GHASH into GMAC GHASH: 7d eb f5 fa 1f ac 3b d3 18 d5 e1 a7 ee 40 10 91 K0: 07 48 2e cc c0 53 ed 63 e1 6e 99 df 39 e7 7c 82 full GMAC: 7a a3 db 36 df ff d6 b0 f9 bb 78 78 d7 a7 6c 13",
      "ja": "GMAC GHASHにGHASHを回し：D5 E1 A7 EE 7D EB F5 FA 1F交流3bはD3 18 40 10 91 K0：07 48 2E CC C0 53 ED 63 E1 6E 99 DF 39 E7 7C 82フルGMAC：7A A3 DB 36 DF FF D6 78 78 D7のA7 6cは13 BB B0 F9"
    },
    {
      "indent": 3,
      "text": "Cipher with tag 32b1de78 a822fe12 ef9f78fa 332e33aa b1801238 9a58e2f3 b50b2a02 76ffae0f 1ba63799 b87b7aa3 db36dfff d6b0f9bb 7878d7a7 6c13",
      "ja": "タグ付き暗号32b1de78 a822fe12 ef9f78fa 332e33aa b1801238 9a58e2f3 b50b2a02 76ffae0f 1ba63799 b87b7aa3 db36dfff d6b0f9bb 7878d7a7 6c13"
    },
    {
      "indent": 3,
      "text": "Encrypted and tagged packet: 8040f17b 8041f8d3 5501a0b2 32b1de78 a822fe12 ef9f78fa 332e33aa b1801238 9a58e2f3 b50b2a02 76ffae0f 1ba63799 b87b7aa3 db36dfff d6b0f9bb 7878d7a7 6c13",
      "ja": "暗号化され、タグ付きパケット：8040f17b 8041f8d3 5501a0b2 32b1de78 a822fe12 ef9f78fa 332e33aa b1801238 9a58e2f3 b50b2a02 76ffae0f 1ba63799 b87b7aa3 db36dfff d6b0f9bb 7878d7a7 6c13"
    },
    {
      "indent": 0,
      "text": "16.2.2. SRTP AEAD_AES_256_GCM Decryption",
      "section_title": true,
      "ja": "16.2.2.  SRTP AEAD_AES_256_GCMの復号化"
    },
    {
      "indent": 3,
      "text": "Decrypting the following packet:",
      "ja": "次のパケットを解読します："
    },
    {
      "indent": 8,
      "text": "8040f17b 8041f8d3 5501a0b2 32b1de78\na822fe12 ef9f78fa 332e33aa b1801238\n9a58e2f3 b50b2a02 76ffae0f 1ba63799\nb87b7aa3 db36dfff d6b0f9bb 7878d7a7\n6c13",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Form the IV | Pad | SSRC | ROC | SEQ | 00 00 55 01 a0 b2 00 00 00 00 f1 7b salt: 51 75 69 64 20 70 72 6f 20 71 75 6f IV: 51 75 3c 65 80 c2 72 6f 20 71 84 14",
      "ja": "IVフォーム|パッド| SSRC | ROC | SEQ | 00 00 55 01 A0 B2 00 00 00 00 F1 7B塩：51 75 69 64 20 70 72 6F 20 71 75 6F IV：51 75 65 80 3C C2 72 6F 20 71 84 14"
    },
    {
      "indent": 3,
      "text": "Key: 00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f AAD: 8040f17b 8041f8d3 5501a0b2 CT: 32b1de78 a822fe12 ef9f78fa 332e33aa b1801238 9a58e2f3 b50b2a02 76ffae0f 1ba63799 b87b7aa3 db36dfff d6b0f9bb 7878d7a7 6c13 IV: 51 75 3c 65 80 c2 72 6f 20 71 84 14 H: f29000b62a499fd0a9f39a6add2e7780",
      "ja": "キー：00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F AAD：8040f17b 8041f8d3 5501a0b2 CT：32b1de78 a822fe12 ef9f78fa 332e33aa b1801238 9a58e2f3 b50b2a02 76ffae0f 1ba63799 b87b7aa3 db36dfff d6b0f9bb 7878d7a7 6c13 IV：51 75 65 80 3C C2 72 6F 20 71 84 14 H：f29000b62a499fd0a9f39a6add2e7780"
    },
    {
      "indent": 3,
      "text": "Verify the received tag 7a a3 db 36 df ff d6 b0 f9 bb 78 78 d7 a7 6c 13",
      "ja": "受信したタグを検証7A A3 DB 36 DF FF D6 B0 F9 BB 78 78 D7 A7 6C 13"
    },
    {
      "indent": 5,
      "text": "Process the AAD AAD word: 8040f17b8041f8d35501a0b200000000 partial hash: 0154dcb75485b71880e1957c877351bd",
      "ja": "8040f17b8041f8d35501a0b200000000部分ハッシュ：0154dcb75485b71880e1957c877351bd AAD AADワードを処理"
    },
    {
      "indent": 5,
      "text": "Process the cipher cipher word: 32b1de78a822fe12ef9f78fa332e33aa partial hash: c3f07db9a8b9cb4345eb07f793d322d2 cipher word: b18012389a58e2f3b50b2a0276ffae0f partial hash: 6d1e66fe32eb32ecd8906ceab09db996 cipher word: 1ba63799b87b00000000000000000000 partial hash: b3d1d2f1fa3b366619bc42cd2eedafee",
      "ja": "32b1de78a822fe12ef9f78fa332e33aa部分ハッシュ：c3f07db9a8b9cb4345eb07f793d322d2暗号言葉：部分ハッシュb18012389a58e2f3b50b2a0276ffae0f：6d1e66fe32eb32ecd8906ceab09db996暗号言葉：1ba63799b87b00000000000000000000部分ハッシュ：b3d1d2f1fa3b366619bc42cd2eedafee暗号の暗号単語を処理"
    },
    {
      "indent": 5,
      "text": "Process the length word length word: 00000000000000600000000000000130 partial hash: 7debf5fa1fac3bd318d5e1a7ee401091",
      "ja": "00000000000000600000000000000130部分ハッシュ：：7debf5fa1fac3bd318d5e1a7ee401091長さワード長ワードを処理"
    },
    {
      "indent": 3,
      "text": "Turn GHASH into GMAC GHASH: 7d eb f5 fa 1f ac 3b d3 18 d5 e1 a7 ee 40 10 91 K0: 07 48 2e cc c0 53 ed 63 e1 6e 99 df 39 e7 7c 82 full GMAC: 7a a3 db 36 df ff d6 b0 f9 bb 78 78 d7 a7 6c 13",
      "ja": "GMAC GHASHにGHASHを回し：D5 E1 A7 EE 7D EB F5 FA 1F交流3bはD3 18 40 10 91 K0：07 48 2E CC C0 53 ED 63 E1 6E 99 DF 39 E7 7C 82フルGMAC：7A A3 DB 36 DF FF D6 78 78 D7のA7 6cは13 BB B0 F9"
    },
    {
      "indent": 5,
      "text": " Received tag = 7aa3db36 dfffd6b0 f9bb7878 d7a76c13 Computed tag = 7aa3db36 dfffd6b0 f9bb7878 d7a76c13 Received tag verified.",
      "ja": "受信したタグ= 7aa3db36 dfffd6b0 f9bb7878 d7a76c13コンピュータグ= 7aa3db36 dfffd6b0 f9bb7878 d7a76c13受信したタグを検証します。"
    },
    {
      "indent": 3,
      "text": "Decrypt the cipher block # 0 IV||blk_cntr: 51753c6580c2726f2071841400000002 key_block: 75 d0 b2 14 c1 43 de 77 9c eb 58 95 5e 40 5a d9 cipher_block: 32 b1 de 78 a8 22 fe 12 ef 9f 78 fa 33 2e 33 aa plain_block: 47 61 6c 6c 69 61 20 65 73 74 20 6f 6d 6e 69 73 block # 1 IV||blk_cntr: 51753c6580c2726f2071841400000003 key_block: 91 e4 7b 4e f3 2b 83 d3 dc 65 0a 72 17 8d da 6a cipher_block: b1 80 12 38 9a 58 e2 f3 b5 0b 2a 02 76 ff ae 0f plain_block: 20 64 69 76 69 73 61 20 69 6e 20 70 61 72 74 65 block # 2 IV||blk_cntr: 51753c6580c2726f2071841400000004 key_block: 68 86 43 eb dd 08 07 98 16 3a 16 d5 e5 04 f6 3a cipher_block: 1b a6 37 99 b8 7b plain_block: 73 20 74 72 65 73",
      "ja": "暗号ブロック＃0 IVを復号|| blk_cntr：51753c6580c2726f2071841400000002なkey_block：75 D0 B2 14 C1 43ド77 9C EB 58 95 5E 40 5aはD9のcipher_block：78 FA 33 2E 33のAA plain_block 9F 32 B1 78デA8 22 FE 12 EF： 47 61 6C 6C 69 61 20 65 73 74 20 6F 6D 6E 69 73ブロック＃1 IV || blk_cntr：51753c6580c2726f2071841400000003なkey_block：91 E4 7B 4E F3 2B 83 D3 DC 65 0A 72 17 8D DA 6aはcipher_block：80 12 38 9A B1 58個のE2 F3 B5の0B 2aを02 76 FF AE 0F plain_block：20 64 69 76 69 73 61 20 69 6E 20 70 61 72 74 65ブロック＃2 IV || blk_cntr：51753c6580c2726f2071841400000004なkey_block：68 86 43 EB ddは08 07 98 16 3A 16 D5 E5 04 F6第3a cipher_block：1BのA6 37 99 B8 7bとのplain_block：73 20 74 72 65 73"
    },
    {
      "indent": 3,
      "text": "Verified and tagged packet: 47616c6c 69612065 7374206f 6d6e6973 20646976 69736120 696e2070 61727465 73207472 6573",
      "ja": "検証し、タグ付きパケット：47616c6c 69612065 7374206f 6d6e6973 20646976 69736120 61727465 73207472 696e2070 6573"
    },
    {
      "indent": 0,
      "text": "16.2.3. SRTP AEAD_AES_256_GCM Authentication Tagging",
      "section_title": true,
      "ja": "16.2.3.  SRTP AEAD_AES_256_GCM認証タグ付け"
    },
    {
      "indent": 3,
      "text": "Tagging the following packet:",
      "ja": "次のパケットをタグ付け："
    },
    {
      "indent": 8,
      "text": "8040f17b 8041f8d3 5501a0b2 47616c6c\n69612065 7374206f 6d6e6973 20646976\n69736120 696e2070 61727465 73207472\n6573",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Form the IV | Pad | SSRC | ROC | SEQ | 00 00 55 01 a0 b2 00 00 00 00 f1 7b salt: 51 75 69 64 20 70 72 6f 20 71 75 6f IV: 51 75 3c 65 80 c2 72 6f 20 71 84 14",
      "ja": "IVフォーム|パッド| SSRC | ROC | SEQ | 00 00 55 01 A0 B2 00 00 00 00 F1 7B塩：51 75 69 64 20 70 72 6F 20 71 75 6F IV：51 75 65 80 3C C2 72 6F 20 71 84 14"
    },
    {
      "indent": 3,
      "text": "Key: 00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f AAD: 8040f17b 8041f8d3 5501a0b2 47616c6c 69612065 7374206f 6d6e6973 20646976 69736120 696e2070 61727465 73207472 6573 IV: 51 75 3c 65 80 c2 72 6f 20 71 84 14 H: f29000b62a499fd0a9f39a6add2e7780",
      "ja": "キー：00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F AAD：8040f17b 8041f8d3 5501a0b2 47616c6c 69612065 7374206f 6d6e6973 20646976 69736120 696e2070 61727465 73207472 6573 IV ：51 75 65 80 3C C2 72 6F 20 71 84 14 H：f29000b62a499fd0a9f39a6add2e7780"
    },
    {
      "indent": 3,
      "text": "Compute the GMAC tag",
      "ja": "GMACタグを計算"
    },
    {
      "indent": 5,
      "text": "Process the AAD AAD word: 8040f17b8041f8d35501a0b247616c6c partial hash: c059753e6763791762ca630d8ef97714 AAD word: 696120657374206f6d6e697320646976 partial hash: a4e3401e712900dc4f1d2303bc4b2675 AAD word: 69736120696e20706172746573207472 partial hash: 1c8c1af883de0d67878f379a19c65987 AAD word: 65730000000000000000000000000000 partial hash: 958462781aa8e8feacce6d93b54472ac",
      "ja": "69736120696e20706172746573207472部分ハッシュ：1c8c1af883de0d67878f379a19c65987 AADワード：65730000000000000000000000000000部分ハッシュ：958462781aa8e8feacce6d93b54472ac AADワードa4e3401e712900dc4f1d2303bc4b2675：8040f17b8041f8d35501a0b247616c6c部分ハッシュ：c059753e6763791762ca630d8ef97714のAADワード：696120657374206f6d6e697320646976部分ハッシュAAD AADワードを処理"
    },
    {
      "indent": 5,
      "text": "Process the length word length word: 00000000000001900000000000000000 partial hash: af2efb5dcfdb9900e7127721fdb56956",
      "ja": "00000000000001900000000000000000部分ハッシュ：：af2efb5dcfdb9900e7127721fdb56956長さワード長ワードを処理"
    },
    {
      "indent": 3,
      "text": "Turn GHASH into GMAC GHASH: af 2e fb 5d cf db 99 00 e7 12 77 21 fd b5 69 56 K0: 07 48 2e cc c0 53 ed 63 e1 6e 99 df 39 e7 7c 82 full GMAC: a8 66 d5 91 0f 88 74 63 06 7c ee fe c4 52 15 d4",
      "ja": "GMAC GHASHにGHASHを回す：07 48 2E CC C0 53 ED 63 E1 6E 99 DF 39 E7 7C 82フルGMAC：66 D5 91 0F 88 74 A8 99 00 E7 12 77 21 FD B5 69 56 K0 DB AF 2E FB 5D CF 63 06 7C EE FE C4 52 15 D4"
    },
    {
      "indent": 3,
      "text": "Cipher with tag a866d591 0f887463 067ceefe c45215d4",
      "ja": "タグ付き暗号a866d591 0f887463 067ceefe c45215d4"
    },
    {
      "indent": 3,
      "text": "Tagged packet: 8040f17b 8041f8d3 5501a0b2 47616c6c 69612065 7374206f 6d6e6973 20646976 69736120 696e2070 61727465 73207472 6573a866 d5910f88 7463067c eefec452 15d4",
      "ja": "タグ付きパケット：8040f17b 8041f8d3 5501a0b2 47616c6c 69612065 7374206f 6d6e6973 20646976 69736120 61727465 73207472 696e2070 6573a866 d5910f88 7463067c eefec452 15d4"
    },
    {
      "indent": 0,
      "text": "16.2.4. SRTP AEAD_AES_256_GCM Tag Verification",
      "section_title": true,
      "ja": "16.2.4.  SRTP AEAD_AES_256_GCMタグの検証"
    },
    {
      "indent": 3,
      "text": "Verifying the following packet:",
      "ja": "次のパケットの検証："
    },
    {
      "indent": 8,
      "text": "8040f17b 8041f8d3 5501a0b2 47616c6c\n69612065 7374206f 6d6e6973 20646976\n69736120 696e2070 61727465 73207472\n6573a866 d5910f88 7463067c eefec452\n15d4",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Form the IV | Pad | SSRC | ROC | SEQ | 00 00 55 01 a0 b2 00 00 00 00 f1 7b salt: 51 75 69 64 20 70 72 6f 20 71 75 6f IV: 51 75 3c 65 80 c2 72 6f 20 71 84 14",
      "ja": "IVフォーム|パッド| SSRC | ROC | SEQ | 00 00 55 01 A0 B2 00 00 00 00 F1 7B塩：51 75 69 64 20 70 72 6F 20 71 75 6F IV：51 75 65 80 3C C2 72 6F 20 71 84 14"
    },
    {
      "indent": 3,
      "text": "Key: 00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f AAD: 8040f17b 8041f8d3 5501a0b2 47616c6c 69612065 7374206f 6d6e6973 20646976 69736120 696e2070 61727465 73207472 6573 CT: a866d591 0f887463 067ceefe c45215d4 IV: 51 75 3c 65 80 c2 72 6f 20 71 84 14 H: f29000b62a499fd0a9f39a6add2e7780",
      "ja": "キー：00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F AAD：8040f17b 8041f8d3 5501a0b2 47616c6c 69612065 7374206f 6d6e6973 20646976 69736120 696e2070 61727465 73207472 6573 CT ：51 75 65 80 3C C2 72 6F 20 71 84 14 H：f29000b62a499fd0a9f39a6add2e7780 0f887463 067ceefe c45215d4 IV a866d591"
    },
    {
      "indent": 3,
      "text": "Verify the received tag a8 66 d5 91 0f 88 74 63 06 7c ee fe c4 52 15 d4",
      "ja": "66 D5 91 0F 88 74 63 06 7C EE FE C4 52 15 D4 A8受信したタグを検証します"
    },
    {
      "indent": 5,
      "text": "Process the AAD AAD word: 8040f17b8041f8d35501a0b247616c6c partial hash: c059753e6763791762ca630d8ef97714 AAD word: 696120657374206f6d6e697320646976 partial hash: a4e3401e712900dc4f1d2303bc4b2675 AAD word: 69736120696e20706172746573207472 partial hash: 1c8c1af883de0d67878f379a19c65987 AAD word: 65730000000000000000000000000000 partial hash: 958462781aa8e8feacce6d93b54472ac",
      "ja": "69736120696e20706172746573207472部分ハッシュ：1c8c1af883de0d67878f379a19c65987 AADワード：65730000000000000000000000000000部分ハッシュ：958462781aa8e8feacce6d93b54472ac AADワードa4e3401e712900dc4f1d2303bc4b2675：8040f17b8041f8d35501a0b247616c6c部分ハッシュ：c059753e6763791762ca630d8ef97714のAADワード：696120657374206f6d6e697320646976部分ハッシュAAD AADワードを処理"
    },
    {
      "indent": 5,
      "text": "Process the length word length word: 00000000000001900000000000000000 partial hash: af2efb5dcfdb9900e7127721fdb56956",
      "ja": "00000000000001900000000000000000部分ハッシュ：：af2efb5dcfdb9900e7127721fdb56956長さワード長ワードを処理"
    },
    {
      "indent": 3,
      "text": "Turn GHASH into GMAC GHASH: af 2e fb 5d cf db 99 00 e7 12 77 21 fd b5 69 56 K0: 07 48 2e cc c0 53 ed 63 e1 6e 99 df 39 e7 7c 82 full GMAC: a8 66 d5 91 0f 88 74 63 06 7c ee fe c4 52 15 d4",
      "ja": "GMAC GHASHにGHASHを回す：07 48 2E CC C0 53 ED 63 E1 6E 99 DF 39 E7 7C 82フルGMAC：66 D5 91 0F 88 74 A8 99 00 E7 12 77 21 FD B5 69 56 K0 DB AF 2E FB 5D CF 63 06 7C EE FE C4 52 15 D4"
    },
    {
      "indent": 5,
      "text": " Received tag = a866d591 0f887463 067ceefe c45215d4 Computed tag = a866d591 0f887463 067ceefe c45215d4 Received tag verified.",
      "ja": "受信したタグ= a866d591 0f887463 067ceefe c45215d4コンピュータグ= a866d591 0f887463 067ceefe c45215d4受信したタグを検証します。"
    },
    {
      "indent": 0,
      "text": "17. RTCP Test Vectors",
      "section_title": true,
      "ja": "17. RTCPテストベクトル"
    },
    {
      "indent": 3,
      "text": "The examples in this section are all based upon the same RTCP packet:",
      "ja": "このセクションの例は、すべて同じRTCPパケットに基づいています："
    },
    {
      "indent": 12,
      "text": "81c8000e 4d617273 4e545031 4e545031\n52545020 0000042a 0000eb98 4c756e61\ndeadbeef deadbeef deadbeef deadbeef\ndeadbeef",
      "raw": true
    },
    {
      "indent": 3,
      "text": "with 32-bit SRTCP index 000005d4.",
      "ja": "32ビットSRTCPインデックス000005d4有します。"
    },
    {
      "indent": 3,
      "text": "As shown in Section 9.1, the IV is formed by XORing two 12-octet values. The first 12-octet value is formed by concatenating two zero octets, the 4-octet SSRC (found in the fifth through eighth octets of the RTP packet), another two padding octets, and the 31-bit SRTCP index, right-justified in a 32-bit = 4-octet field with a single \"0\" bit prepended as padding. An example of SRTCP IV formation is shown below:",
      "ja": "セクション9.1に示されているように、IVは、2つの12オクテット値のXORをとることによって形成されます。第12オクテットの値は2つのゼロオクテット、4オクテットSSRC（RTPパケットの第八のオクテットを介して第五に見られる）、さらに2つのパディングオクテット、及び右詰め31ビットSRTCPインデックスを連結することによって形成されています単一の「0」ビットと32ビット= 4オクテットフィールドは、パディングとして付加します。 SRTCP IVの形成の例を以下に示します。"
    },
    {
      "indent": 7,
      "text": "      | Pad |   SSRC    | Pad |  0+SRTCP  |\n       00 00 4d 61 72 73 00 00 00 00 05 d4\nsalt   51 75 69 64 20 70 72 6f 20 71 75 6f\n       ------------------------------------\n  IV   51 75 24 05 52 03 72 6f 20 71 70 bb",
      "raw": true
    },
    {
      "indent": 3,
      "text": "In an SRTCP packet, a 1-bit Encryption flag is prepended to the 31-bit SRTCP index to form a 32-bit value we shall call the \"ESRTCP word\". The E-flag is one if the SRTCP packet has been encrypted and zero if it has been tagged but not encrypted. Note that the ESRTCP field is only present in an SRTCP packet, not in an RTCP packet. The full ESRTCP word is part of the AAD.",
      "ja": "SRTCPパケットに、1ビットの暗号化フラグは、我々が「ESRTCPワード」と呼ぶものとする32ビット値を形成するために、31ビットのSRTCPインデックスに付加されます。それがタグ付けされたが、暗号化されていないされている場合はE-フラグがSRTCPパケットが暗号化されている場合は1と0です。 ESRTCPフィールドがないRTCPパケットに、SRTCPパケットにのみ存在することに注意してください。フルESRTCPワードは、AADの一部です。"
    },
    {
      "indent": 3,
      "text": "When encrypting and tagging an RTCP packet (E-flag = 1), the SRTCP packet consists of the following fields in the following order:",
      "ja": "RTCPパケットを暗号化し、タグ付けするとき（Eフラグ= 1）、SRTCPパケットは以下の順序で以下のフィールドから構成されています。"
    },
    {
      "indent": 3,
      "text": "- The first 8 octets of the RTCP packet (part of the AAD).",
      "ja": " -  RTCPパケットの最初の8つのオクテット（AADの一部）。"
    },
    {
      "indent": 3,
      "text": "- The cipher.",
      "ja": " - 暗号。"
    },
    {
      "indent": 3,
      "text": "- The ESRTCP word (the final part of the AAD).",
      "ja": " -  ESRTCPワード（AADの最後の部分）。"
    },
    {
      "indent": 3,
      "text": "- Any Raw Data that might have been appended to the end of the original RTCP packet.",
      "ja": " - オリジナルのRTCPパケットの最後に追加された可能性がある生データ。"
    },
    {
      "indent": 3,
      "text": "Recall that AEAD treats the authentication tag as an integral part of the cipher, and in fact the authentication tag is the last 8 or 16 octets of the cipher.",
      "ja": "AEADは、暗号の不可欠な部分として、認証タグを扱い、実際には認証タグが暗号の最後の8つのまたは16オクテットであることを思い出してください。"
    },
    {
      "indent": 3,
      "text": "The reader is reminded that when the RTCP packet is to be tagged but not encrypted (E-flag = 0), GCM will produce a cipher that consists solely of the 8-octet or 16-octet authentication tag. The tagged SRTCP consists of the following fields in the order listed below:",
      "ja": "読者は、RTCPパケットがタグ付けされたが、暗号化されないことである場合（E-フラグ= 0）、GCMが単独8オクテットまたは16オクテットの認証タグで構成された暗号を生成することに留意します。タグ付けされたSRTCPは、下記の順序で、次のフィールドで構成されています。"
    },
    {
      "indent": 3,
      "text": "- All of the AAD, except for the ESRTCP word.",
      "ja": " -  ESRTCPの語を除き、AADのすべて、。"
    },
    {
      "indent": 3,
      "text": "- The cipher (= the authentication tag).",
      "ja": " - 暗号（=認証タグ）。"
    },
    {
      "indent": 3,
      "text": "- The ESRTCP word (the final part of the AAD).",
      "ja": " -  ESRTCPワード（AADの最後の部分）。"
    },
    {
      "indent": 3,
      "text": "- Any Raw Data that might have been appended to the end of the original RTCP packet.",
      "ja": " - オリジナルのRTCPパケットの最後に追加された可能性がある生データ。"
    },
    {
      "indent": 0,
      "text": "17.1. SRTCP AEAD_AES_128_GCM Encryption and Tagging",
      "section_title": true,
      "ja": "17.1.  SRTCP AEAD_AES_128_GCM暗号化とタグ付け"
    },
    {
      "indent": 3,
      "text": "Encrypting the following packet:",
      "ja": "次のパケットを暗号化："
    },
    {
      "indent": 8,
      "text": "81c8000d 4d617273 4e545031 4e545032\n52545020 0000042a 0000e930 4c756e61\ndeadbeef deadbeef deadbeef deadbeef\ndeadbeef",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Key size = 128 bits Tag size = 16 octets",
      "ja": "キーサイズ= 128ビットのタグのサイズ= 16個のオクテット"
    },
    {
      "indent": 3,
      "text": "Form the IV | Pad | SSRC | Pad | SRTCP | 00 00 4d 61 72 73 00 00 00 00 05 d4 salt: 51 75 69 64 20 70 72 6f 20 71 75 6f IV: 51 75 24 05 52 03 72 6f 20 71 70 bb",
      "ja": "IVフォーム|パッド| SSRC |パッド| SRTCP | 00 00 4D 61 72 73 00 00 00 00 05 D4塩：51 75 69 64 20 70 72 6F 20 71 75 6F IV：51 75 24 05 52 03 72 6F 20 71 70 BB"
    },
    {
      "indent": 3,
      "text": "Key: 00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f AAD: 81c8000d 4d617273 800005d4 PT: 4e545031 4e545032 52545020 0000042a 0000e930 4c756e61 deadbeef deadbeef deadbeef deadbeef deadbeef IV: 51 75 24 05 52 03 72 6f 20 71 70 bb H: c6a13b37878f5b826f4f8162a1c8d879",
      "ja": "キー：00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F AAD：81c8000d 4d617273 800005d4 PT：4e545031 4e545032 52545020 0000042a 0000e930 4c756e61 DEADBEEF DEADBEEF DEADBEEF DEADBEEF DEADBEEF IV：51 75 24 05 52 03 72 6F 20 71 70 BB H：c6a13b37878f5b826f4f8162a1c8d879"
    },
    {
      "indent": 3,
      "text": "Encrypt the Plaintext block # 0 IV||blk_cntr: 517524055203726f207170bb00000002 key_block: 2d bd 18 b4 92 8e e6 4e f5 73 87 46 2f 6b 7a b3 plain_block: 4e 54 50 31 4e 54 50 32 52 54 50 20 00 00 04 2a cipher_block: 63 e9 48 85 dc da b6 7c a7 27 d7 66 2f 6b 7e 99 block # 1 IV||blk_cntr: 517524055203726f207170bb00000003 key_block: 7f f5 29 c7 20 73 9d 4c 18 db 1b 1e ad a0 d1 35 plain_block: 00 00 e9 30 4c 75 6e 61 de ad be ef de ad be ef cipher_block: 7f f5 c0 f7 6c 06 f3 2d c6 76 a5 f1 73 0d 6f da block # 2 IV||blk_cntr: 517524055203726f207170bb00000004 key_block: 92 4d 25 a9 58 9d 83 02 d5 14 99 b4 e0 14 78 15 plain_block: de ad be ef de ad be ef de ad be ef cipher_block: 4c e0 9b 46 86 30 3d ed 0b b9 27 5b",
      "ja": "平文ブロック＃0 IVを暗号化|| blk_cntr：517524055203726f207170bb00000002なkey_block：2DのBD 18 B4 92 8E E6 4E F5 73 87 46 2F 6B 7aはB3のplain_block：4E 54 50 31 4E 54 50 32 52 54 50 20 00 00 04 2aはcipher_block。 63 E9 48 85 DCダB6 7cとのA7 27 D7 66 2F 6B 7E 99ブロック＃1 IV || blk_cntr：517524055203726f207170bb00000003なkey_block：7F F5 29 C7 20 73 9D 4C 18デシベル1B 1E広告35 plain_block D1 A0：00 00 E9 30 4C 75 6E 61ド広告であるEFデ広告EF cipher_blockこと：7F F5 C0 F7 6C 06 F3の2D C6 76 A5 F1 73 0D 6Fダブロック＃2 IV || blk_cntr：517524055203726f207170bb00000004なkey_block：92 4D 25 A9 58 9D 83 02 D5 14 99 B4 E0 14 78 15 plain_block：4C E0 9B 46 86 30 3DのED 0BのB9 27 5B：デ広告があることEFデ広告するEFデ広告がEF cipher_blockこと"
    },
    {
      "indent": 3,
      "text": "Cipher before tag appended 63e94885 dcdab67c a727d766 2f6b7e99 7ff5c0f7 6c06f32d c676a5f1 730d6fda 4ce09b46 86303ded 0bb9275b",
      "ja": "タグの前に暗号が追加さ63e94885 dcdab67c a727d766 2f6b7e99 7ff5c0f7 6c06f32d c676a5f1 730d6fda 4ce09b46 86303ded 0bb9275b"
    },
    {
      "indent": 3,
      "text": "Compute the GMAC tag",
      "ja": "GMACタグを計算"
    },
    {
      "indent": 5,
      "text": "Process the AAD AAD word: 81c8000d4d617273800005d400000000 partial hash: 085d6eb166c555aa62982f630430ec6e",
      "ja": "81c8000d4d617273800005d400000000部分ハッシュ：085d6eb166c555aa62982f630430ec6e AAD AADワードを処理"
    },
    {
      "indent": 5,
      "text": "Process the cipher cipher word: 63e94885dcdab67ca727d7662f6b7e99 partial hash: 8c9221be93466d68bbb16fa0d42b0187 cipher word: 7ff5c0f76c06f32dc676a5f1730d6fda partial hash: 221ebb044ec9fd0bf116d7780f198792 cipher word: 4ce09b4686303ded0bb9275b00000000 partial hash: 50f70b9ca110ab312dce212657328dae",
      "ja": "63e94885dcdab67ca727d7662f6b7e99部分ハッシュ：8c9221be93466d68bbb16fa0d42b0187暗号言葉：7ff5c0f76c06f32dc676a5f1730d6fda部分ハッシュ：221ebb044ec9fd0bf116d7780f198792暗号言葉：4ce09b4686303ded0bb9275b00000000部分ハッシュ：50f70b9ca110ab312dce212657328dae暗号の暗号単語を処理"
    },
    {
      "indent": 5,
      "text": "Process the length word length word: 00000000000000600000000000000160 partial hash: 7296107c9716534371dfc1a30c5ffeb5",
      "ja": "00000000000000600000000000000160部分ハッシュ：：7296107c9716534371dfc1a30c5ffeb5長さワード長ワードを処理"
    },
    {
      "indent": 3,
      "text": "Turn GHASH into GMAC GHASH: 72 96 10 7c 97 16 53 43 71 df c1 a3 0c 5f fe b5 K0: ba dc b4 24 01 d9 1e 6c b4 74 39 d1 49 86 14 6b full GMAC: c8 4a a4 58 96 cf 4d 2f c5 ab f8 72 45 d9 ea de",
      "ja": "GMAC GHASHにGHASHを回し：FE B5 K0 5F 72 96 10 7C 97 16 53 43 71 DF C1がA3の0C：BA DC B4 24 01 D9 1E部6cのB4 74 39 D1 49 86 14 6B完全GMAC：C8 4A A4 58 96 CF 4dと2F C5 AB F8 72 45 D9のEAデ"
    },
    {
      "indent": 3,
      "text": "Cipher with tag 63e94885 dcdab67c a727d766 2f6b7e99 7ff5c0f7 6c06f32d c676a5f1 730d6fda 4ce09b46 86303ded 0bb9275b c84aa458 96cf4d2f c5abf872 45d9eade",
      "ja": "タグ付き暗号63e94885 dcdab67c a727d766 2f6b7e99 7ff5c0f7 6c06f32d c676a5f1 730d6fda 4ce09b46 86303ded 0bb9275b c84aa458 96cf4d2f c5abf872 45d9eade"
    },
    {
      "indent": 3,
      "text": "Append the ESRTCP word with the E-flag set 63e94885 dcdab67c a727d766 2f6b7e99 7ff5c0f7 6c06f32d c676a5f1 730d6fda 4ce09b46 86303ded 0bb9275b c84aa458 96cf4d2f c5abf872 45d9eade 800005d4",
      "ja": "E-フラグを設定してESRTCPワードを追加63e94885 dcdab67c a727d766 2f6b7e99 7ff5c0f7 6c06f32d c676a5f1 730d6fda 4ce09b46 86303ded 0bb9275b c84aa458 96cf4d2f c5abf872 45d9eade 800005d4"
    },
    {
      "indent": 3,
      "text": "Encrypted and tagged packet: 81c8000d 4d617273 63e94885 dcdab67c a727d766 2f6b7e99 7ff5c0f7 6c06f32d c676a5f1 730d6fda 4ce09b46 86303ded 0bb9275b c84aa458 96cf4d2f c5abf872 45d9eade 800005d4",
      "ja": "暗号化され、パケットがタグ付き：81c8000d 4d617273 63e94885 dcdab67c a727d766 2f6b7e99 7ff5c0f7 6c06f32d c676a5f1 730d6fda 4ce09b46 86303ded 0bb9275b c84aa458 96cf4d2f c5abf872 45d9eade 800005d4"
    },
    {
      "indent": 0,
      "text": "17.2. SRTCP AEAD_AES_256_GCM Verification and Decryption",
      "section_title": true,
      "ja": "17.2.  SRTCP AEAD_AES_256_GCM検証と復号化"
    },
    {
      "indent": 3,
      "text": "Key size = 256 bits Tag size = 16 octets",
      "ja": "キーサイズ= 256ビットのタグのサイズ= 16個のオクテット"
    },
    {
      "indent": 5,
      "text": "Process the length word",
      "ja": "長さワードを処理"
    },
    {
      "indent": 3,
      "text": "Decrypting the following packet:",
      "ja": "次のパケットを解読します："
    },
    {
      "indent": 8,
      "text": "81c8000d 4d617273 d50ae4d1 f5ce5d30\n4ba297e4 7d470c28 2c3ece5d bffe0a50\na2eaa5c1 110555be 8415f658 c61de047\n6f1b6fad 1d1eb30c 4446839f 57ff6f6c\nb26ac3be 800005d4",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Key size = 256 bits Key size = 16 octets",
      "ja": "キーサイズ= 256ビットのキーサイズ= 16個のオクテット"
    },
    {
      "indent": 3,
      "text": "Form the IV | Pad | SSRC | Pad | SRTCP | 00 00 4d 61 72 73 00 00 00 00 05 d4 salt: 51 75 69 64 20 70 72 6f 20 71 75 6f IV: 51 75 24 05 52 03 72 6f 20 71 70 bb",
      "ja": "IVフォーム|パッド| SSRC |パッド| SRTCP | 00 00 4D 61 72 73 00 00 00 00 05 D4塩：51 75 69 64 20 70 72 6F 20 71 75 6F IV：51 75 24 05 52 03 72 6F 20 71 70 BB"
    },
    {
      "indent": 3,
      "text": "Key: 00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f AAD: 81c8000d 4d617273 800005d4 CT: d50ae4d1 f5ce5d30 4ba297e4 7d470c28 2c3ece5d bffe0a50 a2eaa5c1 110555be 8415f658 c61de047 6f1b6fad 1d1eb30c 4446839f 57ff6f6c b26ac3be IV: 51 75 24 05 52 03 72 6f 20 71 70 bb H: f29000b62a499fd0a9f39a6add2e7780",
      "ja": "キー：00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F AAD：81c8000d 4d617273 800005d4 CT：d50ae4d1 f5ce5d30 4ba297e4 7d470c28 2c3ece5d bffe0a50 a2eaa5c1 110555be 8415f658 c61de047 6f1b6fad 1d1eb30c 4446839f 57ff6f6c b26ac3be IV：51 75 24 05 52 03 72 20 71 6F 70のBB H：f29000b62a499fd0a9f39a6add2e7780"
    },
    {
      "indent": 3,
      "text": "Verify the received tag 1d 1e b3 0c 44 46 83 9f 57 ff 6f 6c b2 6a c3 be",
      "ja": "受信したタグ1D 1EのB3 0C 44 46 83 9F 57はFF 6F 6C B2 6A C3ことを確認し"
    },
    {
      "indent": 5,
      "text": "Process the AAD AAD word: 81c8000d4d617273800005d400000000 partial hash: 3ae5afd36dead5280b18950400176b5b",
      "ja": "81c8000d4d617273800005d400000000部分ハッシュ：3ae5afd36dead5280b18950400176b5b AAD AADワードを処理"
    },
    {
      "indent": 5,
      "text": "Process the cipher cipher word: d50ae4d1f5ce5d304ba297e47d470c28 partial hash: e90fab7546f6940781227227ac926ebe cipher word: 2c3ece5dbffe0a50a2eaa5c1110555be partial hash: 9b236807d8b2dab07583adce367aa88f cipher word: 8415f658c61de0476f1b6fad00000000 partial hash: e69313f423a75e3e0b7eb93321700e86",
      "ja": "d50ae4d1f5ce5d304ba297e47d470c28部分ハッシュを：暗号の暗号の単語を処理し、暗号単語をe90fab7546f6940781227227ac926ebe：部分ハッシュを2c3ece5dbffe0a50a2eaa5c1110555be：8415f658c61de0476f1b6fad00000000部分ハッシュ：e69313f423a75e3e0b7eb93321700e86暗号言葉9b236807d8b2dab07583adce367aa88f"
    },
    {
      "indent": 5,
      "text": "Process the length word length word: 00000000000000600000000000000160 partial hash: 3a284af2616fdf505faf37eec39fbc8b",
      "ja": "00000000000000600000000000000160部分ハッシュ：：3a284af2616fdf505faf37eec39fbc8b長さワード長ワードを処理"
    },
    {
      "indent": 3,
      "text": "Turn GHASH into GMAC GHASH: 3a 28 4a f2 61 6f df 50 5f af 37 ee c3 9f bc 8b K0: 27 36 f9 fe 25 29 5c cf 08 50 58 82 71 f5 7f 35 full GMAC: 1d 1e b3 0c 44 46 83 9f 57 ff 6f 6c b2 6a c3 be",
      "ja": "GMAC GHASHにGHASHを回し：3A 28 4A F2 61 6F DF 50 5F AF 37 EE C3 9F BC部8bのK0：35フルGMAC 7F 27 36 F9 FE 25 29 5C CF 08 50 58 82 71 F5：1D 1EのB3 0C 44 46 83 9F 57 FF 6F 6cとB2 6aになりC3"
    },
    {
      "indent": 5,
      "text": " Received tag = 1d1eb30c 4446839f 57ff6f6c b26ac3be Computed tag = 1d1eb30c 4446839f 57ff6f6c b26ac3be Received tag verified.",
      "ja": "受信したタグ= 1d1eb30c 4446839f 57ff6f6c b26ac3beコンピュータグ= 1d1eb30c 4446839f 57ff6f6c b26ac3be受信したタグを検証します。"
    },
    {
      "indent": 3,
      "text": "Decrypt the cipher block # 0 IV||blk_cntr: 517524055203726f207170bb00000002 key_block: 9b 5e b4 e0 bb 9a 0d 02 19 f6 c7 c4 7d 47 08 02 cipher_block: d5 0a e4 d1 f5 ce 5d 30 4b a2 97 e4 7d 47 0c 28 plain_block: 4e 54 50 31 4e 54 50 32 52 54 50 20 00 00 04 2a block # 1 IV||blk_cntr: 517524055203726f207170bb00000003 key_block: 2c 3e 27 6d f3 8b 64 31 7c 47 1b 2e cf a8 eb 51 cipher_block: 2c 3e ce 5d bf fe 0a 50 a2 ea a5 c1 11 05 55 be plain_block: 00 00 e9 30 4c 75 6e 61 de ad be ef de ad be ef block # 2 IV||blk_cntr: 517524055203726f207170bb00000004 key_block: 5a b8 48 b7 18 b0 5e a8 b1 b6 d1 42 3b 74 39 55 cipher_block: 84 15 f6 58 c6 1d e0 47 6f 1b 6f ad plain_block: de ad be ef de ad be ef de ad be ef",
      "ja": "517524055203726f207170bb00000002なkey_block：9B 5E B4 E0 BB 9A 0D 02 19 F6 C7 C4は7D 47 08 02 cipher_block：D5 0A E4 D1 F5のCE 5D 30 4B A2 97 E4 47 0C 28 7D plain_block：暗号ブロック＃0 IV || blk_cntrを解読4E 54 50 31 4E 54 50 32 52 54 50 20 00 00 04 2Aブロック＃1 IV || blk_cntr：2C 3EのCE 5dとのBF：517524055203726f207170bb00000003なkey_block：EB 51 cipher_block A8 2C 3E 27 6D F3 8B 64 31 7C 47 1B 2E CF FEは0A 50 A2 EA A5 C1 11 05 55 BE plain_block：517524055203726f207170bb00000004なkey_block：5A B8 48 B7 18 B0 5E A8、B1、B6 00ド広告30 4C 75 6E 61 00 E9はEFド広告であるEFブロック＃2 IV || blk_cntrことD1 42 3B 74 39 55 cipher_block：84 15 F6 58 C6 1DのE0 47 6F 1B 6F広告plain_block：デ広告EFド広告であるEFデ広告がEFであること"
    },
    {
      "indent": 3,
      "text": "Verified and decrypted packet: 81c8000d 4d617273 4e545031 4e545032 52545020 0000042a 0000e930 4c756e61 deadbeef deadbeef deadbeef deadbeef deadbeef",
      "ja": "検証し、復号化されたパケット：81c8000d 4d617273 4e545031 4e545032 52545020 0000042a 0000e930 4c756e61 DEADBEEF DEADBEEF DEADBEEF DEADBEEF DEADBEEF"
    },
    {
      "indent": 0,
      "text": "17.3. SRTCP AEAD_AES_128_GCM Tagging Only",
      "section_title": true,
      "ja": "17.3.  SRTCP AEAD_AES_128_GCMタギングのみ"
    },
    {
      "indent": 3,
      "text": "Tagging the following packet:",
      "ja": "次のパケットをタグ付け："
    },
    {
      "indent": 8,
      "text": "81c8000d 4d617273 4e545031 4e545032\n52545020 0000042a 0000e930 4c756e61\ndeadbeef deadbeef deadbeef deadbeef\ndeadbeef",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Key size = 128 bits Tag size = 16 octets",
      "ja": "キーサイズ= 128ビットのタグのサイズ= 16個のオクテット"
    },
    {
      "indent": 3,
      "text": "Form the IV | Pad | SSRC | Pad | SRTCP | 00 00 4d 61 72 73 00 00 00 00 05 d4 salt: 51 75 69 64 20 70 72 6f 20 71 75 6f IV: 51 75 24 05 52 03 72 6f 20 71 70 bb",
      "ja": "IVフォーム|パッド| SSRC |パッド| SRTCP | 00 00 4D 61 72 73 00 00 00 00 05 D4塩：51 75 69 64 20 70 72 6F 20 71 75 6F IV：51 75 24 05 52 03 72 6F 20 71 70 BB"
    },
    {
      "indent": 3,
      "text": "Key: 00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f AAD: 81c8000d 4d617273 4e545031 4e545032 52545020 0000042a 0000e930 4c756e61 deadbeef deadbeef deadbeef deadbeef deadbeef 000005d4 IV: 51 75 24 05 52 03 72 6f 20 71 70 bb H: c6a13b37878f5b826f4f8162a1c8d879",
      "ja": "キー：00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F AAD：81c8000d 4d617273 4e545031 4e545032 52545020 0000042a 0000e930 4c756e61 DEADBEEF DEADBEEF DEADBEEF DEADBEEF DEADBEEF 000005d4 IV：51 75 24 05 52 03 72 6F 20 71 70のBB H： c6a13b37878f5b826f4f8162a1c8d879"
    },
    {
      "indent": 3,
      "text": "Compute the GMAC tag",
      "ja": "GMACタグを計算"
    },
    {
      "indent": 5,
      "text": "Process the AAD AAD word: 81c8000d4d6172734e5450314e545032 partial hash: f8dbbe278e06afe17fb4fb2e67f0a22e AAD word: 525450200000042a0000e9304c756e61 partial hash: 6ccd900dfd0eb292f68f8a410d0648ec AAD word: deadbeefdeadbeefdeadbeefdeadbeef partial hash: 6a14be0ea384c6b746235ba955a57ff5 AAD word: deadbeef000005d40000000000000000 partial hash: cc81f14905670a1e37f8bc81a91997cd",
      "ja": "81c8000d4d6172734e5450314e545032部分ハッシュ：f8dbbe278e06afe17fb4fb2e67f0a22eのAADワード：525450200000042a0000e9304c756e61部分ハッシュ：6ccd900dfd0eb292f68f8a410d0648ec AADワード：部分ハッシュdeadbeefdeadbeefdeadbeefdeadbeef：6a14be0ea384c6b746235ba955a57ff5 AADワード：deadbeef000005d40000000000000000部分ハッシュ：cc81f14905670a1e37f8bc81a91997cd AAD AADワードを処理"
    },
    {
      "indent": 5,
      "text": "Process the length word length word: 00000000000001c00000000000000000 partial hash: 3ec16d4c3c0e90a59e91be415bd976d8",
      "ja": "00000000000001c00000000000000000部分ハッシュ：：3ec16d4c3c0e90a59e91be415bd976d8長さワード長ワードを処理"
    },
    {
      "indent": 3,
      "text": "Turn GHASH into GMAC GHASH: 3e c1 6d 4c 3c 0e 90 a5 9e 91 be 41 5b d9 76 d8 K0: ba dc b4 24 01 d9 1e 6c b4 74 39 d1 49 86 14 6b full GMAC: 84 1d d9 68 3d d7 8e c9 2a e5 87 90 12 5f 62 b3",
      "ja": "GMAC GHASHにGHASHを回し：3E C1が6D 4C 3C 0E 90 A5 9E 91 41 5B D9 76 D8 K0である：BA直流B4 24 01 D9 1E 6C B4 74 39 D1 49 86 14 6B完全GMAC：84の1D D9 68の3D D7部8e C9 2aのE5 87 90 12 5F 62 B3"
    },
    {
      "indent": 3,
      "text": "Cipher with tag 841dd968 3dd78ec9 2ae58790 125f62b3",
      "ja": "タグ付き暗号841dd968 3dd78ec9 2ae58790 125f62b3"
    },
    {
      "indent": 3,
      "text": "Tagged packet: 81c8000d 4d617273 4e545031 4e545032 52545020 0000042a 0000e930 4c756e61 deadbeef deadbeef deadbeef deadbeef deadbeef 841dd968 3dd78ec9 2ae58790 125f62b3 000005d4",
      "ja": "タグ付きパケット：81c8000d 4d617273 4e545031 4e545032 52545020 0000042a 0000e930 4c756e61 DEADBEEF DEADBEEF DEADBEEF DEADBEEF DEADBEEF 841dd968 3dd78ec9 2ae58790 125f62b3 000005d4"
    },
    {
      "indent": 0,
      "text": "17.4. SRTCP AEAD_AES_256_GCM Tag Verification",
      "section_title": true,
      "ja": "17.4.  SRTCP AEAD_AES_256_GCMタグの検証"
    },
    {
      "indent": 3,
      "text": "Key size = 256 bits Tag size = 16 octets",
      "ja": "キーサイズ= 256ビットのタグのサイズ= 16個のオクテット"
    },
    {
      "indent": 3,
      "text": " Process the length word Verifying the following packet:",
      "ja": "次のパケットを確認長さワードを処理します："
    },
    {
      "indent": 8,
      "text": "81c8000d 4d617273 4e545031 4e545032\n52545020 0000042a 0000e930 4c756e61\ndeadbeef deadbeef deadbeef deadbeef\ndeadbeef 91db4afb feee5a97 8fab4393\ned2615fe 000005d4",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Key size = 256 bits Key size = 16 octets",
      "ja": "キーサイズ= 256ビットのキーサイズ= 16個のオクテット"
    },
    {
      "indent": 3,
      "text": "Form the IV | Pad | SSRC | Pad | SRTCP | 00 00 4d 61 72 73 00 00 00 00 05 d4 salt: 51 75 69 64 20 70 72 6f 20 71 75 6f IV: 51 75 24 05 52 03 72 6f 20 71 70 bb",
      "ja": "IVフォーム|パッド| SSRC |パッド| SRTCP | 00 00 4D 61 72 73 00 00 00 00 05 D4塩：51 75 69 64 20 70 72 6F 20 71 75 6F IV：51 75 24 05 52 03 72 6F 20 71 70 BB"
    },
    {
      "indent": 3,
      "text": "Key: 00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f AAD: 81c8000d 4d617273 4e545031 4e545032 52545020 0000042a 0000e930 4c756e61 deadbeef deadbeef deadbeef deadbeef deadbeef 000005d4 CT: 91db4afb feee5a97 8fab4393 ed2615fe IV: 51 75 24 05 52 03 72 6f 20 71 70 bb H: f29000b62a499fd0a9f39a6add2e7780",
      "ja": "キー：00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F AAD：81c8000d 4d617273 4e545031 4e545032 52545020 0000042a 0000e930 4c756e61 DEADBEEF DEADBEEF DEADBEEF DEADBEEF DEADBEEF 000005d4 CT：91db4afb feee5a97 8fab4393 ed2615fe IV：51 75 24 05 52 03 72 20 71 6F 70のBB H：f29000b62a499fd0a9f39a6add2e7780"
    },
    {
      "indent": 3,
      "text": "Verify the received tag 91 db 4a fb fe ee 5a 97 8f ab 43 93 ed 26 15 fe",
      "ja": "受信したタグ91デシベル4A FB FE EE 5A 97 8F AB 43 93 ED 26 15 FEを確認"
    },
    {
      "indent": 5,
      "text": "Process the AAD AAD word: 81c8000d4d6172734e5450314e545032 partial hash: 7bc665c71676a5a5f663b3229af4b85c AAD word: 525450200000042a0000e9304c756e61 partial hash: 34ed77752703ab7d69f44237910e3bc0 AAD word: deadbeefdeadbeefdeadbeefdeadbeef partial hash: 74a59f1a99282344d64ab1c8a2be6cf8 AAD word: deadbeef000005d40000000000000000 partial hash: 126335c0baa7ab1b79416ceeb9f7a518",
      "ja": "81c8000d4d6172734e5450314e545032部分ハッシュ：7bc665c71676a5a5f663b3229af4b85cのAADワード：525450200000042a0000e9304c756e61部分ハッシュ：34ed77752703ab7d69f44237910e3bc0のAADワード：部分ハッシュdeadbeefdeadbeefdeadbeefdeadbeef：74a59f1a99282344d64ab1c8a2be6cf8 AADワード：deadbeef000005d40000000000000000部分ハッシュ：126335c0baa7ab1b79416ceeb9f7a518 AAD AADワードを処理"
    },
    {
      "indent": 5,
      "text": "Process the length word length word: 00000000000001c00000000000000000 partial hash: b6edb305dbc7065887fb1b119cd36acb",
      "ja": "00000000000001c00000000000000000部分ハッシュ：：b6edb305dbc7065887fb1b119cd36acb長さワード長ワードを処理"
    },
    {
      "indent": 3,
      "text": "Turn GHASH into GMAC GHASH: b6 ed b3 05 db c7 06 58 87 fb 1b 11 9c d3 6a cb K0: 27 36 f9 fe 25 29 5c cf 08 50 58 82 71 f5 7f 35 full GMAC: 91 db 4a fb fe ee 5a 97 8f ab 43 93 ed 26 15 fe",
      "ja": "GMAC GHASHにGHASHを回し：B6版B3を05デシベルのC7 06 58 87 FB 1B 11 9C D3 6aはCBのK0：35フルGMAC 7F 27 36 F9 FE 25 29 5C CF 08 50 58 82 71 F5：91デシベル4aをFBのFe EE 5aと97 8F AB 43 93 ED 26 15 FE"
    },
    {
      "indent": 5,
      "text": " Received tag = 91db4afb feee5a97 8fab4393 ed2615fe Computed tag = 91db4afb feee5a97 8fab4393 ed2615fe Received tag verified.",
      "ja": "受信したタグ= 91db4afb feee5a97 8fab4393 ed2615feコンピュータグ= 91db4afb feee5a97 8fab4393 ed2615fe受信したタグを検証します。"
    },
    {
      "indent": 3,
      "text": "Verified packet: 81c8000d 4d617273 4e545031 4e545032 52545020 0000042a 0000e930 4c756e61 deadbeef deadbeef deadbeef deadbeef deadbeef",
      "ja": "確認済みのパケット：81c8000d 4d617273 4e545031 4e545032 52545020 0000042a 0000e930 4c756e61 DEADBEEF DEADBEEF DEADBEEF DEADBEEF DEADBEEF"
    },
    {
      "indent": 0,
      "text": "18. References",
      "section_title": true,
      "ja": "18.参考文献"
    },
    {
      "indent": 0,
      "text": "18.1. Normative References",
      "section_title": true,
      "ja": "18.1. 引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <http://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<http://www.rfc-editor.org/info/ RFC2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC3550] Schulzrinne, H., Casner, S., Frederick, R., and V. Jacobson, \"RTP: A Transport Protocol for Real-Time Applications\", STD 64, RFC 3550, DOI 10.17487/RFC3550, July 2003, <http://www.rfc-editor.org/info/rfc3550>.",
      "ja": "[RFC3550] Schulzrinneと、H.、Casner、S.、フレデリック、R.、およびV.ヤコブソン、 \"RTP：リアルタイムアプリケーションのためのトランスポートプロトコル\"、STD 64、RFC 3550、DOI 10.17487 / RFC3550、2003年7月、 <http://www.rfc-editor.org/info/rfc3550>。"
    },
    {
      "indent": 3,
      "text": "[RFC3711] Baugher, M., McGrew, D., Naslund, M., Carrara, E., and K. Norrman, \"The Secure Real-time Transport Protocol (SRTP)\", RFC 3711, DOI 10.17487/RFC3711, March 2004, <http://www.rfc-editor.org/info/rfc3711>.",
      "ja": "[RFC3711] Baugher、M.、マグリュー、D.、Naslund、M.、カララ、E.、およびK. Norrman、 \"セキュアリアルタイムトランスポートプロトコル（SRTP）\"、RFC 3711、DOI 10.17487 / RFC3711、マーチ2004年、<http://www.rfc-editor.org/info/rfc3711>。"
    },
    {
      "indent": 3,
      "text": "[RFC3830] Arkko, J., Carrara, E., Lindholm, F., Naslund, M., and K. Norrman, \"MIKEY: Multimedia Internet KEYing\", RFC 3830, DOI 10.17487/RFC3830, August 2004, <http://www.rfc-editor.org/info/rfc3830>.",
      "ja": "[RFC3830] Arkko、J.、カララ、E.、リンドホルム、F.、Naslund、M.、およびK. Norrman、 \"MIKEY：マルチメディアインターネットキーイング\"、RFC 3830、DOI 10.17487 / RFC3830、2004年8月、<HTTP： //www.rfc-editor.org/info/rfc3830>。"
    },
    {
      "indent": 3,
      "text": "[RFC4568] Andreasen, F., Baugher, M., and D. Wing, \"Session Description Protocol (SDP) Security Descriptions for Media Streams\", RFC 4568, DOI 10.17487/RFC4568, July 2006, <http://www.rfc-editor.org/info/rfc4568>.",
      "ja": "[RFC4568]アンドレア、F.、Baugher、M.、およびD.翼、 \"メディア・ストリームのセッション記述プロトコル（SDP）のセキュリティの説明\"、RFC 4568、DOI 10.17487 / RFC4568、2006年7月、<のhttp：// WWW。 rfc-editor.org/info/rfc4568>。"
    },
    {
      "indent": 3,
      "text": "[RFC5116] McGrew, D., \"An Interface and Algorithms for Authenticated Encryption\", RFC 5116, DOI 10.17487/RFC5116, January 2008, <http://www.rfc-editor.org/info/rfc5116>.",
      "ja": "[RFC5116]マグリュー、D.、 \"認証暗号化のためのインタフェースとアルゴリズム\"、RFC 5116、DOI 10.17487 / RFC5116、2008年1月、<http://www.rfc-editor.org/info/rfc5116>。"
    },
    {
      "indent": 3,
      "text": "[RFC5234] Crocker, D., Ed., and P. Overell, \"Augmented BNF for Syntax Specifications: ABNF\", STD 68, RFC 5234, DOI 10.17487/RFC5234, January 2008, <http://www.rfc-editor.org/info/rfc5234>.",
      "ja": "\"構文仕様のための増大しているBNF：ABNF\" [RFC5234]クロッカー、D.、エド、およびP. Overell、。、STD 68、RFC 5234、DOI 10.17487 / RFC5234、2008年1月、<のhttp：//www.rfc-editor .ORG /情報/ RFC5234>。"
    },
    {
      "indent": 3,
      "text": "[RFC5764] McGrew, D. and E. Rescorla, \"Datagram Transport Layer Security (DTLS) Extension to Establish Keys for the Secure Real-time Transport Protocol (SRTP)\", RFC 5764, DOI 10.17487/RFC5764, May 2010, <http://www.rfc-editor.org/info/rfc5764>.",
      "ja": "[RFC5764]マグリュー、D.およびE.レスコラ、 \"データグラムトランスポート層セキュリティ（DTLS）トランスポート・プロトコル（SRTP）セキュアリアルタイムのための鍵を確立するための拡張\"、RFC 5764、DOI 10.17487 / RFC5764、2010年5月、<HTTPを：//www.rfc-editor.org/info/rfc5764>。"
    },
    {
      "indent": 3,
      "text": "[RFC6188] McGrew, D., \"The Use of AES-192 and AES-256 in Secure RTP\", RFC 6188, DOI 10.17487/RFC6188, March 2011, <http://www.rfc-editor.org/info/rfc6188>.",
      "ja": "[RFC6188]マグリュー、D.、 \"AES-192およびAES-256セキュアRTPでの使用\"、RFC 6188、DOI 10.17487 / RFC6188、2011年3月、<http://www.rfc-editor.org/info/ rfc6188>。"
    },
    {
      "indent": 3,
      "text": "[RFC6904] Lennox, J., \"Encryption of Header Extensions in the Secure Real-time Transport Protocol (SRTP)\", RFC 6904, DOI 10.17487/RFC6904, April 2013, <http://www.rfc-editor.org/info/rfc6904>.",
      "ja": "[RFC6904]レノックス、J.、 \"セキュアリアルタイムでのヘッダー拡張の暗号化トランスポートプロトコル（SRTP）\"、RFC 6904、DOI 10.17487 / RFC6904、2013年4月、<http://www.rfc-editor.org/情報/ rfc6904>。"
    },
    {
      "indent": 0,
      "text": "18.2. Informative References",
      "section_title": true,
      "ja": "18.2. 参考文献"
    },
    {
      "indent": 3,
      "text": "[BN00] Bellare, M. and C. Namprempre, \"Authenticated Encryption: Relations among notions and analysis of the generic composition paradigm\", Proceedings of ASIACRYPT 2000, Springer-Verlag, LNCS 1976, pp. 531-545, DOI 10.1007/3-540-44448-3_41, <http://www-cse.ucsd.edu/users/mihir/papers/oem.html>.",
      "ja": "[BN00]ベラー、M.とC. Namprempre、 \"認証暗号化：概念および汎用組成パラダイムの分析間の関係\"、ASIACRYPT 2000会報、シュプリンガー・フェアラーク、LNCS 1976、頁531から545、DOI 10.1007 / 3。 -540-44448-3_41、<http://www-cse.ucsd.edu/users/mihir/papers/oem.html>。"
    },
    {
      "indent": 3,
      "text": "[GCM] Dworkin, M., \"NIST Special Publication 800-38D: Recommendation for Block Cipher Modes of Operation: Galois/Counter Mode (GCM) and GMAC\", U.S. National Institute of Standards and Technology, November 2007, <http://csrc.nist.gov/publications/nistpubs/ 800-38D/SP-800-38D.pdf>.",
      "ja": "[GCM] Dworkin、M.、 \"は、NIST Special Publication 800-38D：オペレーションのブロック暗号モードのための推奨事項：ガロア/カウンタモード（GCM）とGMAC\"、米国立標準技術研究所、2007年11月、<のhttp：/ /csrc.nist.gov/publications/nistpubs/ 800-38D / SP-800-38D.pdf>。"
    },
    {
      "indent": 3,
      "text": "[R02] Rogaway, P., \"Authenticated-Encryption with Associated-Data\", ACM Conference on Computer and Communications Security (CCS'02), pp. 98-107, ACM Press, DOI 10.1145/586110.586125, September 2002, <http://www.cs.ucdavis.edu/~rogaway/papers/ad.html>.",
      "ja": "[R02] \"関連-データを使用した認証・暗号化\" Rogaway、P.、コンピュータおよび通信セキュリティ（CCS'02）、頁上のACM会議。98から107、ACMプレス、DOI 10.1145 / 586110.586125、2002年9月、<HTTP ：//www.cs.ucdavis.edu/~rogaway/papers/ad.html>。"
    },
    {
      "indent": 3,
      "text": "[RFC4771] Lehtovirta, V., Naslund, M., and K. Norrman, \"Integrity Transform Carrying Roll-Over Counter for the Secure Real-time Transport Protocol (SRTP)\", RFC 4771, DOI 10.17487/RFC4771, January 2007, <http://www.rfc-editor.org/info/rfc4771>.",
      "ja": "[RFC4771] Lehtovirta、V.、Naslund、M.、およびK. Norrman、RFC 4771、DOI 10.17487 / RFC4771、2007年1月 \"整合性セキュアリアルタイム転送プロトコル（SRTP）のためのロールオーバーカウンターを運ぶトランスフォーム\"、 <http://www.rfc-editor.org/info/rfc4771>。"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "The authors would like to thank Michael Peck, Michael Torla, Qin Wu, Magnus Westerlund, Oscar Ohllson, Woo-Hwan Kim, John Mattsson, Richard Barnes, Morris Dworkin, Stephen Farrell, and many other reviewers who provided valuable comments on earlier draft versions of this document.",
      "ja": "著者はマイケル・ペック、マイケル・トルラ、秦呉、マグヌスウェスター、オスカーOhllson、ウー煥キム、ジョン・マットソン、リチャード・バーンズ、モリスDworkin、スティーブン・ファレル、以前のドラフトバージョンの貴重なコメントを提供し、多くの他のレビューに感謝したいと思いますこのドキュメントの。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "David A. McGrew Cisco Systems, Inc. 510 McCarthy Blvd. Milpitas, CA 95035 United States Phone: (408) 525 8651",
      "ja": "デビッド・A.マグリューシスコシステムズ社510マッカーシーブルバードミルピタス、CA 95035米国電話：（408）525 8651"
    },
    {
      "indent": 3,
      "text": "Email: mcgrew@cisco.com URI: http://www.mindspring.com/~dmcgrew/dam.htm",
      "ja": "メール：mcgrew@cisco.com URI：http://www.mindspring.com/~dmcgrew/dam.htm"
    },
    {
      "indent": 3,
      "text": "Kevin M. Igoe NSA/CSS Commercial Solutions Center National Security Agency",
      "ja": "ケビンM. Igoe NSA / CSS商用ソリューションセンター国家安全保障局"
    },
    {
      "indent": 3,
      "text": "Email: mythicalkevin@yahoo.com",
      "ja": "メール：mythicalkevin@yahoo.com"
    }
  ]
}