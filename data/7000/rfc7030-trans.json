{
  "title": {
    "text": "RFC 7030 - Enrollment over Secure Transport",
    "ja": "RFC 7030 - セキュアなトランスポート上で登録"
  },
  "number": 7030,
  "created_at": "2019-10-27 19:42:21.342817+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                  M. Pritikin, Ed.\nRequest for Comments: 7030                           Cisco Systems, Inc.\nCategory: Standards Track                                    P. Yee, Ed.\nISSN: 2070-1721                                             AKAYLA, Inc.\n                                                         D. Harkins, Ed.\n                                                          Aruba Networks\n                                                            October 2013",
      "raw": true
    },
    {
      "indent": 20,
      "text": "Enrollment over Secure Transport",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport. This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates. It also supports client-generated public/private key pairs as well as key pairs generated by the CA.",
      "ja": "CMS上で証明書管理を使用しているクライアントのためのこのドキュメントプロファイルの証明書登録（CMC）は、安全な輸送を超えるメッセージ。入学を超えるセキュアな交通（EST）と呼ばれるこのプロファイルは、公開鍵基盤（PKI）クライアント証明書と関連付けられている認証局（CA）証明書を取得する必要があるクライアントを対象に、シンプルでありながら機能的な、証明書管理プロトコルを記述します。また、クライアントが生成した公開鍵/秘密鍵のペアだけでなく、CAによって生成されたキーペアをサポート"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 5741のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc7030.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc7030で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2013 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2013 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................3\n   1.1. Terminology ................................................4\n2. Operational Scenario Overviews ..................................5\n   2.1. Obtaining CA Certificates ..................................6\n   2.2. Initial Enrollment .........................................7\n        2.2.1. Certificate TLS Authentication ......................8\n        2.2.2. Certificate-Less TLS Authentication .................8\n        2.2.3. HTTP-Based Client Authentication ....................8\n   2.3. Client Certificate Reissuance ..............................8\n   2.4. Server Key Generation ......................................9\n   2.5. Full PKI Request Messages ..................................9\n   2.6. Certificate Signing Request (CSR) Attributes Request .......9\n3. Protocol Design and Layering ...................................10\n   3.1. Application Layer .........................................13\n   3.2. HTTP Layer ................................................14\n        3.2.1. HTTP Headers for Control ...........................15\n        3.2.2. HTTP URIs for Control ..............................16\n        3.2.3. HTTP-Based Client Authentication ...................17\n        3.2.4. Message Types ......................................19\n   3.3. TLS Layer .................................................20\n        3.3.1. TLS-Based Server Authentication ....................20\n        3.3.2. TLS-Based Client Authentication ....................21\n        3.3.3. Certificate-Less TLS Mutual Authentication .........21\n   3.4. Proof-of-Possession .......................................22\n   3.5. Linking Identity and POP Information ......................22\n   3.6. Server Authorization ......................................23\n        3.6.1. Client Use of Explicit TA Database .................24\n        3.6.2. Client Use of Implicit TA Database .................24\n   3.7. Client Authorization ......................................24\n4. Protocol Exchange Details ......................................25\n   4.1. Distribution of CA Certificates ...........................25",
      "raw": true
    },
    {
      "indent": 3,
      "text": "        4.1.1. Bootstrap Distribution of CA Certificates ..........25\n        4.1.2. CA Certificates Request ............................26\n        4.1.3. CA Certificates Response ...........................26\n   4.2. Client Certificate Request Functions ......................27\n        4.2.1. Simple Enrollment of Clients .......................28\n        4.2.2. Simple Re-enrollment of Clients ....................29\n        4.2.3. Simple Enroll and Re-enroll Response ...............29\n   4.3. Full CMC ..................................................30\n        4.3.1. Full CMC Request ...................................30\n        4.3.2. Full CMC Response ..................................30\n   4.4. Server-Side Key Generation ................................31\n        4.4.1. Server-Side Key Generation Request .................32\n               4.4.1.1. Requests for Symmetric Key\n                        Encryption of the Private Key .............32\n               4.4.1.2. Requests for Asymmetric Encryption\n                        of the Private Key ........................33\n        4.4.2. Server-Side Key Generation Response ................33\n   4.5. CSR Attributes ............................................35\n        4.5.1. CSR Attributes Request .............................35\n        4.5.2. CSR Attributes Response ............................35\n5. IANA Considerations ............................................37\n6. Security Considerations ........................................39\n7. References .....................................................41\n   7.1. Normative References ......................................41\n   7.2. Informative References ....................................43\nAppendix A. Operational Scenario Example Messages .................45\n  A.1. Obtaining CA Certificates ..................................45\n  A.2. CSR Attributes .............................................47\n  A.3. Enroll/Re-enroll ...........................................47\n  A.4. Server Key Generation ......................................50\nAppendix B. Contributors and Acknowledgements .....................52",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) [RFC5272] messages over a secure transport. Enrollment over Secure Transport (EST) describes the use of Transport Layer Security (TLS) 1.1 [RFC4346], 1.2 [RFC5246], or any future version) and Hypertext Transfer Protocol (HTTP) [RFC2616] to provide an authenticated and authorized channel for Simple Public Key Infrastructure (PKI) Requests and Responses [RFC5272].",
      "ja": "CMS（CMC）上で証明書の管理を使用しているクライアントのためのこのドキュメントプロファイルの証明書登録[RFC5272]の安全な輸送を超えるメッセージ。セキュアな交通（EST）を超える登録がために、認証と認可チャネルを提供するために、トランスポート層セキュリティ（TLS）1.1 [RFC4346]、1.2 [RFC5246]、または任意の将来のバージョン）とハイパーテキスト転送プロトコル（HTTP）[RFC2616]の使用が記載されています簡易公開鍵基盤（PKI）要求および応答[RFC5272]。"
    },
    {
      "indent": 3,
      "text": "Architecturally, the EST service is located between a Certification Authority (CA) and a client. It performs several functions traditionally allocated to the Registration Authority (RA) role in a PKI. The nature of communication between an EST server and a CA is not described in this document.",
      "ja": "アーキテクチャ的には、ESTサービスは、認証局（CA）とクライアントの間に位置しています。これは、伝統的にPKIにおける登録機関（RA）の役割に割り当てられたいくつかの機能を実行します。 ESTサーバとCA間の通信の性質は、本書に記載されていません。"
    },
    {
      "indent": 3,
      "text": "EST adopts the Certificate Management Protocol (CMP) [RFC4210] model for CA certificate rollover, but it does not use the CMP message syntax or protocol. EST servers are extensible in that new functions may be defined to provide additional capabilities not specified in CMC [RFC5272], and this document defines two such extensions: one for requesting Certificate Signing Request attributes and another for requesting server-generated keys.",
      "ja": "ESTは、CA証明書のロールオーバーのための証明書管理プロトコル（CMP）[RFC4210]のモデルを採用しているが、それはCMPメッセージ構文またはプロトコルを使用していません。 ESTサーバは、CMC [RFC5272]で指定されていない追加の機能を提供するように定義することができるという新たな機能で拡張可能であり、この文書は、2つのそのような拡張定義：証明書署名要求属性を要求するための1とサーバが生成した鍵を要求するための別のものを。"
    },
    {
      "indent": 3,
      "text": "EST specifies how to transfer messages securely via HTTP over TLS (HTTPS) [RFC2818], where the HTTP headers and media types are used in conjunction with TLS. HTTPS operates over TCP; this document does not specify EST over HTTP/Datagram Transport Layer Security/User Datagram Protocol (HTTP/DTLS/UDP). With a suitable specification for combining HTTP, DTLS, and UDP, there are no EST requirements that would prevent it from working over such a stack. Figure 1 shows how the layers build upon each other.",
      "ja": "ESTは、HTTPヘッダおよびメディアタイプがTLSと組み合わせて使用​​されているTLS（HTTPS）[RFC2818]、上にHTTPを介して確実にメッセージを転送する方法を指定します。 HTTPSは、TCP上で動作します。この文書では、HTTP /データグラムトランスポート層セキュリティ/ユーザーデータグラムプロトコル（HTTP / DTLS / UDP）を超えるESTを指定していません。 HTTPを結合するのに適した仕様で、DTLS、およびUDPは、スタック上の作業からそれを妨げる一切ESTの要件はありません。図1は、層が互いの上に構築する方法を示しています。"
    },
    {
      "indent": 3,
      "text": "EST Layering:",
      "ja": "階層化されています。"
    },
    {
      "indent": 3,
      "text": "Protocols:\n+--------------------------------------------+\n|                                            |\n| EST request/response messages              |\n|                                            |\n+--------------------------------------------+\n|                                            |\n| HTTP for message transfer and signaling    |\n|                                            |\n+--------------------------------------------+\n|                                            |\n| TLS for transport security                 |\n|                                            |\n+--------------------------------------------+\n|                                            |\n| TCP for transport                          |\n|                                            |\n+--------------------------------------------+",
      "raw": true
    },
    {
      "indent": 33,
      "text": "Figure 1",
      "ja": "図1"
    },
    {
      "indent": 0,
      "text": "1.1. Terminology",
      "section_title": true,
      "ja": "1.1. 用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "キーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、 \"SHALL\"、 \"SHOULD\"、 \"ないもの\"、 \"推奨\" \"ない（SHOULD NOT）\"、 \"MAY\"、 \"推奨NOT\"、および「OPTIONAL 「本書では[RFC2119]で説明されるように解釈されるべきです。"
    },
    {
      "indent": 3,
      "text": "It is assumed that the reader is familiar with the terms and concepts described in Public Key Cryptography Standard (PKCS) #10 [RFC2986], HTTPS [RFC2818], CMP [RFC4210], CMC [RFC5272][RFC5273][RFC5274], and TLS [RFC4346].",
      "ja": "読者は公開鍵暗号化標準（PKCS）＃10 [RFC2986]、HTTPS [RFC2818]、CMP [RFC4210]、CMC [RFC5272]、[RFC5273]、[RFC5274]に記載さ用語と概念に精通していると仮定されますTLS [RFC4346]。"
    },
    {
      "indent": 3,
      "text": "In addition to the terms defined in the terminology section of CMC [RFC5272], the following terms are defined for clarity:",
      "ja": "CMC [RFC5272]の用語セクションで定義された用語に加えて、以下の用語が明確化のために定義されています。"
    },
    {
      "indent": 3,
      "text": "EST CA: For certificate issuing services, the EST CA is reached through the EST server; the CA could be logically \"behind\" the EST server or embedded within it.",
      "ja": "ESTのCA：証明書発行サービスについては、EST CAは、ESTサーバを介して到達しました。 CAは、ESTサーバ「後ろ」に論理的であるか、またはその中に埋め込まれた可能性があります。"
    },
    {
      "indent": 3,
      "text": "Third-Party Trust Anchor: Any trust anchor (TA) that is not authoritative for the PKI hierarchy for which the EST server is providing services.",
      "ja": "サードパーティトラストアンカー：任意のトラストアンカー（TA）ESTサーバがサービスを提供されているPKI階層の権威ではありません。"
    },
    {
      "indent": 3,
      "text": "Explicit Trust Anchor: Any TA that is explicitly configured on the client or server for use during EST TLS authentication; for example, a TA that is manually configured on the EST client or bootstrapped as described in Section 4.1.1. (See more details in Sections 3.6 and 6.)",
      "ja": "明示的な信頼アンカー：どれTA明示的EST TLS認証時に使用するため、クライアントまたはサーバー上で構成されています。例えば、セクション4.1.1に記載したように手動ESTクライアント上で設定またはブートストラップされるTA。 （セクション3.6および6で詳細を参照してください）"
    },
    {
      "indent": 3,
      "text": "Implicit Trust Anchor: Any third-party TA that is available on the client or server for use during TLS authentication but is not specifically indicated for use during EST TLS authentication; for example, TAs commonly used by web browsers to authenticate web servers or TAs used by servers to authenticate manufacturer-installed client credentials (such as certificates populated into cable modems or routers in the factory). The authorization model for these TAs is different from the authorization model for Explicit Trust Anchors. (See more details in Sections 3.6.1, 3.6.2, and 6).",
      "ja": "暗黙の信頼アンカー：任意のサードパーティ製のTA TLS認証時に使用するために、クライアントまたはサーバ上で利用可能ですが、具体的EST TLS認証中に使用するために示されていません。例えば、TAは一般的に（例えば工場にケーブルモデムやルータに取り込ま証明書など）のメーカー、インストールされたクライアントの資格情報を認証するためにサーバが使用するWebサーバーまたはのTAを認証するために、Webブラウザで使用されます。これらのTAのための認可モデルは、明示的な信頼アンカーのための認可モデルとは異なります。 （セクション3.6.1、3.6.2で詳細を参照してください、そして6）。"
    },
    {
      "indent": 3,
      "text": "Certificate-Less TLS: Certificate-less TLS cipher suites provide a way to perform mutual authentication in situations where neither the client nor server have certificates or are willing to use them. The credential used for authentication is a word, phrase, code, or key that is shared between the client and server. The credential must be uniquely shared between the client and server in order to provide authentication of an individual client to an individual server.",
      "ja": "証明書レスTLS：証明書のないTLS暗号スイートは、クライアントとサーバーのいずれもが証明書を持っているか、それらを使用して喜んでいる状況で相互認証を実行する方法を提供します。認証に使用する資格情報は、クライアントとサーバーの間で共有されている単語、フレーズ、コード、またはキーです。資格は一意に​​個々のサーバに個々のクライアントの認証を提供するために、クライアントとサーバの間で共有されなければなりません。"
    },
    {
      "indent": 0,
      "text": "2. Operational Scenario Overviews",
      "section_title": true,
      "ja": "2.運用シナリオ概要"
    },
    {
      "indent": 3,
      "text": "This section provides an informative overview of the operational scenarios to better introduce the reader to the protocol discussion.",
      "ja": "このセクションでは、より良いプロトコルの議論を読者に紹介するための動作シナリオの有益な概要を説明します。"
    },
    {
      "indent": 3,
      "text": "Both the EST clients and server are configured with information that provides the basis for mutual authentication and for authorization. The specific initialization data depends on the methods available in the client and server, but it can include shared secrets, network service names and locations (e.g., a Uniform Resource Identifier (URI) [RFC3986]), trust anchor information (e.g., a CA certificate or a hash of a TA's certificate), and enrollment keys and certificates. Depending on an enterprise's acquisition and network management practices, some initialization may be performed by the vendor prior to delivery of client hardware and software. In that case, the client vendor may provide data, such as trust anchors, to the enterprise via a secure procedure. The distribution of this initial information is out of scope.",
      "ja": "ESTクライアントとサーバーの両方が相互認証と承認のための基礎を提供する情報で構成されています。 （例えば、統一資源識別子（URI）[RFC3986]）、トラストアンカー情報（例えば、CA固有の初期化データは、クライアントとサーバーで利用可能な方法に依存しますが、それは共有秘密、ネットワークサービスの名前と場所を含むことができ、証明書またはTAの証明書のハッシュ）、および登録鍵と証明書。企業の買収やネットワーク管理慣行によっては、いくつかの初期化前のクライアントのハードウェアおよびソフトウェアの配信にベンダーによって行われてもよいです。その場合、クライアント・ベンダーは、セキュアな手順を介して企業に、そのようなトラストアンカーのようなデータを、提供してもよいです。この初期情報の配信が範囲外です。"
    },
    {
      "indent": 3,
      "text": "Distribution of trust anchors and other certificates can be effected via the EST server. However, nothing can be inferred about the authenticity of this data until an out-of-band mechanism is used to verify them.",
      "ja": "トラストアンカーと他の証明書の配布は、ESTサーバを経由して行うことができます。アウトオブバンドメカニズムは、それらを確認するために使用されるまでは、何もこのデータの信憑性について推測することができません。"
    },
    {
      "indent": 3,
      "text": "Sections 2.1-2.3 very closely mirror the text of the Scenarios Appendix of [RFC6403] with such modifications as are appropriate for this profile. Sections 2.1-2.6, below, enumerate the set of EST functions (see Figure 5) and provide an informative overview of EST's capabilities.",
      "ja": "このプロファイルのために適切であるようにセクションは2.1~2.3、非常に密接にそのような変更を加えて、[RFC6403]のシナリオ付録のテキストを反映します。セクション2.1から2.6には、以下の、EST機能（図5を参照）のセットを列挙し、ESTの機能の有益な概要を提供します。"
    },
    {
      "indent": 3,
      "text": "The general client/server interaction proceeds as follows:",
      "ja": "次のように一般的なクライアント/サーバの相互作用が進行します："
    },
    {
      "indent": 6,
      "text": "The client initiates a TLS-secured HTTP session with an EST server.",
      "ja": "クライアントは、ESTサーバとTLSで保護されたHTTPセッションを開始します。"
    },
    {
      "indent": 6,
      "text": "A specific EST service is requested based on a portion of the URI used for the session.",
      "ja": "特定ESTサービスは、セッションのために使用さURIの部分に基づいて要求されます。"
    },
    {
      "indent": 6,
      "text": "The client and server authenticate each other.",
      "ja": "クライアントとサーバが互いを認証します。"
    },
    {
      "indent": 6,
      "text": "The client verifies that the server is authorized to serve this client.",
      "ja": "クライアントは、サーバがこのクライアントにサービスを提供するために許可されていることを確認します。"
    },
    {
      "indent": 6,
      "text": "The server verifies that the client is authorized to make use of this server and the request that the client has made.",
      "ja": "サーバーは、クライアントがこのサーバとクライアントが行ったリクエストを利用することを許可されていることを確認します。"
    },
    {
      "indent": 6,
      "text": "The server acts upon the client request.",
      "ja": "サーバーは、クライアントの要求に作用します。"
    },
    {
      "indent": 0,
      "text": "2.1. Obtaining CA Certificates",
      "section_title": true,
      "ja": "2.1.  CA証明書の取得"
    },
    {
      "indent": 3,
      "text": "The EST client can request a copy of the current EST CA certificate(s) from the EST server. The EST client is assumed to perform this operation before performing other operations.",
      "ja": "ESTクライアントは、ESTサーバから現在のEST CA証明書（複数可）のコピーを要求することができます。 ESTクライアントは、他の操作を実行する前にこの操作を実行すると想定されます。"
    },
    {
      "indent": 3,
      "text": "Throughout this document we assume the EST CA has a certificate that is used by the client to verify signed objects issued by the CA, e.g., certificates and certificate revocation lists (CRLs), and that a different certificate than the one used to verify signatures on certificates and CRLs is used when EST protocol communication requires additional encryption.",
      "ja": "このドキュメントでは、我々はESTのCAは、CAによって発行された署名したオブジェクトを検証するためにクライアントによって使用された証明書を持っていると仮定し、例えば、証明書と証明書失効リスト（CRL）、およびその上の署名を検証するために使用されるものとは異なる証明書ESTプロトコル通信は、追加の暗号化を必要とする場合、証明書とCRLが使用されています。"
    },
    {
      "indent": 3,
      "text": "The EST client authenticates and verifies the authorization scope of the EST server when requesting the current CA certificate(s). As detailed in Sections 3.3.1 and 3.3.3, available options include:",
      "ja": "ESTクライアントが認証され、現在のCA証明書を要求するESTサーバの認証範囲を検証します。セクション3.3.1と3.3.3で詳述したように、利用可能なオプションは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "o Verifying the EST server's HTTPS URI against the EST server's certificate using Implicit TAs (similar to a common HTTPS exchange). This allows the EST server and client to leverage existing TAs that might be known to the EST client.",
      "ja": "（共通HTTPS交換と同様に）暗黙のTAを使ってESTサーバーの証明書に対するESTサーバのHTTPS URIの確認、O。これは、ESTサーバとクライアントがESTクライアントに知られるかもしれない既存のTAを活用することができます。"
    },
    {
      "indent": 3,
      "text": "o The client can leverage a previously distributed trust anchor specific to the EST server. This allows the EST client to use an existing, potentially older, CA certificate to request a current CA certificate.",
      "ja": "Oクライアントは、ESTサーバーに固有以前に分散トラストアンカーを活用することができます。これは、ESTクライアントは、現在のCA証明書を要求するために、既存の、潜在的に古い、CA証明書を使用することができます。"
    },
    {
      "indent": 3,
      "text": "o For bootstrapping, the EST client can rely upon manual authentication performed by the end-user as detailed in Section 4.1.1.",
      "ja": "4.1.1項で説明するように、Oブートストラップのために、ESTのクライアントは、エンドユーザーによる手動認証に頼ることができます。"
    },
    {
      "indent": 3,
      "text": "o The client can leverage the binding of a shared credential to a specific EST server with a certificate-less TLS cipher suite.",
      "ja": "Oクライアントは、証明書のないTLS暗号スイートを持つ特定のESTサーバに共有資格の結合を活用することができます。"
    },
    {
      "indent": 3,
      "text": "Client authentication is not required for this exchange, so it is trivially supported by the EST server.",
      "ja": "それは自明ESTサーバーでサポートされているように、クライアント認証は、この交換は必要ありません。"
    },
    {
      "indent": 0,
      "text": "2.2. Initial Enrollment",
      "section_title": true,
      "ja": "2.2. 初期登録"
    },
    {
      "indent": 3,
      "text": "After authenticating an EST server and verifying that it is authorized to provide services to the client, an EST client can acquire a certificate for itself by submitting an enrollment request to that server.",
      "ja": "ESTサーバを認証し、クライアントにサービスを提供するために許可されていることを確認した後、ESTクライアントは、そのサーバに登録要求を提出することによって、自分自身のための証明書を取得することができます。"
    },
    {
      "indent": 3,
      "text": "The EST server authenticates and authorizes the EST client as specified in Sections 3.3.2, 3.3.3, and 3.7. The methods described in the normative text that are discussed in this overview include:",
      "ja": "ESTサーバが認証し、セクション3.3.2、3.3.3、および3.7に指定されているESTクライアントを許可します。この概要で説明されている規範的なテキストに記載された方法は、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "o TLS with a previously issued client certificate (e.g., an existing certificate issued by the EST CA);",
      "ja": "O以前に発行されたクライアント証明書とTLS（例えば、EST CAによって発行された既存の証明書）。"
    },
    {
      "indent": 3,
      "text": "o TLS with a previously installed certificate (e.g., manufacturer-installed certificate or a certificate issued by some other party);",
      "ja": "O以前にインストールされた証明書を使用してTLS（例えば、製造者、インストールされた証明書またはいくつかの他の当事者によって発行された証明書）。"
    },
    {
      "indent": 3,
      "text": "o Certificate-less TLS (e.g., with a shared credential distributed out-of-band);",
      "ja": "O証明レスTLS（例えば、共有秘密鍵証明書を用いてアウトオブバンド分散）。"
    },
    {
      "indent": 3,
      "text": "o HTTP-based with a username/password distributed out-of-band.",
      "ja": "Oアウトオブバンド分散のユーザー名/パスワードを使用してHTTPベース。"
    },
    {
      "indent": 0,
      "text": "2.2.1. Certificate TLS Authentication",
      "section_title": true,
      "ja": "2.2.1. 証明書TLS認証"
    },
    {
      "indent": 3,
      "text": "If the EST client has a previously installed certificate issued by a third-party CA, this certificate can be used to authenticate the client's request for a certificate from the EST server (if that CA is recognized by the EST server). An EST client responds to the EST server's TLS certificate request message with the existing certificate already held by the client. The EST server will verify the client's existing certificate and authorize the client's request as described in Section 3.3.2.",
      "ja": "ESTクライアントは、サードパーティのCAによって発行された以前にインストールした証明書を持っている場合は、この証明書は、（そのCAは、ESTサーバによって認識された場合）ESTサーバからの証明書のためのクライアントの要求を認証するために使用することができます。 ESTクライアントはすでにクライアントが保有する既存の証明書を持つESTサーバのTLS証明書要求メッセージに応答します。 ESTサーバは、クライアントの既存の証明書を確認し、3.3.2項で説明したように、クライアントの要求を承認します。"
    },
    {
      "indent": 0,
      "text": "2.2.2. Certificate-Less TLS Authentication",
      "section_title": true,
      "ja": "2.2.2. 証明書レスTLS認証"
    },
    {
      "indent": 3,
      "text": "The EST client and EST server can be mutually authenticated using a certificate-less TLS cipher suite (see Section 3.3.3).",
      "ja": "ESTクライアントとESTサーバが相互に（3.3.3項を参照）証明書レスTLS暗号スイートを使用して認証することができます。"
    },
    {
      "indent": 0,
      "text": "2.2.3. HTTP-Based Client Authentication",
      "section_title": true,
      "ja": "2.2.3.  HTTPベースのクライアント認証"
    },
    {
      "indent": 3,
      "text": "The EST server can optionally also request that the EST client submit a username/password using the HTTP Basic or Digest authentication methods (see Section 3.2.3). This approach is desirable if the EST client cannot be authenticated during the TLS handshake (see Section 3.3.2) or the EST server policy requires additional authentication information; see Section 3.2.3. In all cases, HTTP-based client authentication is only to be performed over a TLS-protected transport (see Section 3.3).",
      "ja": "ESTサーバは、（3.2.3を参照）ESTクライアントは、HTTP Basicまたはダイジェスト認証方法を使用して、ユーザー名/パスワードを提出することを要求するオプションですることができます。 ESTクライアントはTLSハンドシェイク中に認証できない場合は、このアプローチが望ましい（3.3.2項を参照）またはESTサーバポリシーは、追加の認証情報を要求します。 3.2.3項を参照してください。すべての場合において、HTTPベースのクライアント認証は、TLSで保護されたトランスポート（3.3節を参照）上で実行するだけです。"
    },
    {
      "indent": 0,
      "text": "2.3. Client Certificate Reissuance",
      "section_title": true,
      "ja": "2.3. クライアント証明書の再発行"
    },
    {
      "indent": 3,
      "text": "An EST client can renew/rekey its existing client certificate by submitting a re-enrollment request to an EST server.",
      "ja": "ESTクライアントは、ESTサーバに再登録要求を提出することによって、既存のクライアント証明書キーを再生成/更新することができます。"
    },
    {
      "indent": 3,
      "text": "When the current EST client certificate can be used for TLS client authentication (Section 3.3.2), the client presents this certificate to the EST server for client authentication. When the to be reissued EST client certificate cannot be used for TLS client authentication, any of the authentication methods used for initial enrollment can be used.",
      "ja": "現在のESTのクライアント証明書がTLSクライアント認証（3.3.2）のために使用することができる場合は、クライアントは、クライアント認証のためのESTサーバーにこの証明書を提示します。再発行するESTのクライアント証明書は、TLSクライアント認証に使用することができない場合は、最初の登録に使用する認証方法のうちのいずれかを使用することができます。"
    },
    {
      "indent": 3,
      "text": "For example, if the client has an alternative certificate issued by the EST CA that can be used for TLS client authentication, then it can be used.",
      "ja": "クライアントはTLSクライアント認証のために使用することができるESTのCAによって発行された代替の証明書を持っている場合たとえば、それは使用することができます。"
    },
    {
      "indent": 3,
      "text": "The certificate request message includes the same Subject and SubjectAltName as the current certificate. Name changes are requested as specified in Section 4.2.2.",
      "ja": "証明書要求メッセージは、現在の証明書と同じ件名とのSubjectAltNameを含みます。セクション4.2.2で指定された名前の変更が要求されています。"
    },
    {
      "indent": 0,
      "text": "2.4. Server Key Generation",
      "section_title": true,
      "ja": "2.4. サーバキーの生成"
    },
    {
      "indent": 3,
      "text": "The EST client can request a server-generated certificate and key pair (see Section 4.4).",
      "ja": "ESTクライアントは、サーバが生成した証明書とキーペアを（4.4節を参照）を要求することができます。"
    },
    {
      "indent": 0,
      "text": "2.5. Full PKI Request Messages",
      "section_title": true,
      "ja": "2.5. 完全なPKI要求メッセージ"
    },
    {
      "indent": 3,
      "text": "Full PKI Request [RFC5272] messages can be transported via EST using the Full CMC Request function. This affords access to functions not provided by the Simple Enrollment functions. Full PKI Request messages are defined in Sections 3.2 and 4.2 of [RFC5272]. See Section 4.3 for a discussion of how EST provides a transport for these messages.",
      "ja": "完全なPKI要求[RFC5272]メッセージ本文CMC要求機能を使用して、ESTを介して輸送することができます。これは、単純な登録機能によって提供されていない機能へのアクセスを提供します。完全なPKI要求メッセージは、セクション3.2と[RFC5272]の4.2で定義されています。 ESTは、これらのメッセージの転送をどのように提供するかについての議論については、セクション4.3を参照してください。"
    },
    {
      "indent": 0,
      "text": "2.6. Certificate Signing Request (CSR) Attributes Request",
      "section_title": true,
      "ja": "2.6. 証明書署名要求（CSR）は、要求属性"
    },
    {
      "indent": 3,
      "text": "Prior to sending an enrollment request to an EST server, an EST client can query the EST server for a set of additional attributes that the client is requested to use in a subsequent enrollment request.",
      "ja": "ESTサーバに登録要求を送信する前に、ESTのクライアントは、クライアントが、その後の登録要求で使用するように要求されていることを、追加属性のセットのためのESTサーバーを照会することができます。"
    },
    {
      "indent": 3,
      "text": "These attributes can provide additional descriptive information that the EST server cannot access itself, such as the Media Access Control (MAC) address of an interface of the EST client. Alternatively, these attributes can indicate the kind of enrollment request, such as a specific elliptic curve or a specific hash function that the client is expected to use when generating the CSR.",
      "ja": "これらの属性は、そのようなESTクライアントのインターフェースのメディアアクセス制御（MAC）アドレスとして、ESTサーバ自体にアクセスできないことを追加記述情報を提供することができます。あるいは、これらの属性は、特定楕円曲線またはCSRを生成するときにクライアントが使用するように期待される特定のハッシュ関数として、登録要求の種類を示すことができます。"
    },
    {
      "indent": 0,
      "text": "3. Protocol Design and Layering",
      "section_title": true,
      "ja": "3.プロトコルの設計と階層化"
    },
    {
      "indent": 3,
      "text": "Figure 2 provides an expansion of Figure 1, describing how the layers are used. Each aspect is described in more detail in the sections that follow.",
      "ja": "図2は、層が使用される方法を説明する、図1の拡大を提供します。各態様は、以下のセクションでより詳細に説明します。"
    },
    {
      "indent": 3,
      "text": "EST Layering:",
      "ja": "階層化されています。"
    },
    {
      "indent": 3,
      "text": "Protocols and uses:\n+----------------------------------------------------+\n|                                                    |\n| Message types:                                     |\n|   - \"Simple PKI\" messages                          |\n|     (incorporates proof-of-possession)             |\n|   - CA certificate retrieval                       |\n|   - \"Full PKI\" messages (OPTIONAL)                 |\n|     (incorporates proof-of-possession)             |\n|   - CSR Attributes Request (OPTIONAL)              |\n|   - Server-generated key request (OPTIONAL)        |\n|                                                    |\n+----------------------------------------------------+\n|                                                    |\n| HTTP:                                              |\n|   - HTTP headers and URIs for control              |\n|      - Content-Type headers specify message type   |\n|      - Headers for control/error messages          |\n|      - URIs for selecting functions                |\n|   - Basic or Digest authentication (OPTIONAL)      |\n|                                                    |\n+----------------------------------------------------+\n|                                                    |\n| TLS for transport security:                        |\n|   - Authentication of the EST server               |\n|   - Authentication of the EST client (OPTIONAL)    |\n|   - Provides communications integrity              |\n|     and confidentiality                            |\n|   - Supplies channel-binding [RFC5929] information |\n|     to link proof-of-identity with message-based   |\n|     proof-of-possession (OPTIONAL)                 |\n|                                                    |\n+----------------------------------------------------+",
      "raw": true
    },
    {
      "indent": 33,
      "text": "Figure 2",
      "ja": "図2"
    },
    {
      "indent": 3,
      "text": "Specifying HTTPS as the secure transport for enrollment messages introduces two \"layers\" to communicate authentication and control messages: TLS and HTTP.",
      "ja": "TLSやHTTP：登録メッセージのためのセキュアなトランスポートとしてHTTPSを指定すると、認証および制御メッセージを伝えるために、2つの「層」を紹介します。"
    },
    {
      "indent": 3,
      "text": "The TLS layer provides integrity and confidentiality during transport. The proof-of-identity is supplied by TLS handshake authentication and optionally also by the HTTP layer headers. The message type and control/error messages are included in the HTTP headers.",
      "ja": "TLS層は、輸送中の完全性と機密性を提供します。プルーフ・オブ・アイデンティティは、HTTP層ヘッダによって任意にTLSハンドシェイク認証によって供給されます。メッセージタイプと制御/エラーメッセージは、HTTPヘッダーに含まれています。"
    },
    {
      "indent": 3,
      "text": "CMC ([RFC5272], Section 3.1) notes that \"the Simple PKI Request MUST NOT be used if a proof-of-identity needs to be included\". Since the TLS and HTTP layers can provide proof-of-identity for EST clients and servers, the Simple PKI message types are used.",
      "ja": "CMC（[RFC5272]、セクション3.1）は、「実証のアイデンティティが含まれる必要がある場合は単純なPKI要求を使用してはいけません」と述べています。 TLSやHTTP層はESTのクライアントとサーバーのための実証のアイデンティティを提供することができますので、簡単なPKIメッセージタイプが使用されています。"
    },
    {
      "indent": 3,
      "text": "The TLS layer certificate exchange provides a method for authorizing client enrollment requests using existing certificates. Such certificates may have been issued by the CA (from which the client is requesting a certificate), or they may have been issued under a distinct PKI (e.g., an IEEE 802.1AR Initial Device Identifier (IDevID) [IDevID] credential).",
      "ja": "TLS層証明書交換は、既存の証明書を使用してクライアントの登録要求を許可するための方法を提供します。そのような証明書（クライアント証明書を要求された）CAによって発行されていてもよい、またはそれらは別個のPKI（例えば、IEEE 802.1AR初期デバイス識別子（IDevID）IDevID]信任状）の下で発行されていてもよいです。"
    },
    {
      "indent": 3,
      "text": "Proof-of-possession (POP) is a distinct issue from proof-of-identity and is included in the Simple PKI message type as described in Section 3.4. A method of linking proof-of-identity and proof-of-possession is described in Section 3.5.",
      "ja": "プルーフ・オブ・所持（POP）は、プルーフ・オブ・アイデンティティとは別個の問題であり、3.4節で説明したように単純なPKIメッセージタイプに含まれています。アイデンティティ証明とプルーフ・オブ・所持を連結する方法は、セクション3.5に記載されています。"
    },
    {
      "indent": 3,
      "text": "This document also defines transport for CMC [RFC5272] that complies with the CMC Transport Protocols [RFC5273]. CMC's POP and proof-of-identity mechanisms are defined in CMC, but the mechanisms here can also be used in conjunction with those mechanisms in \"Full PKI\" messages.",
      "ja": "この文書はまた、CMCトランスポートプロトコル[RFC5273]に準拠してCMC [RFC5272]のためのトランスポートを定義します。 CMCのPOPや実証のアイデンティティメカニズムはCMCで定義されているが、ここでの機構はまた、「フルPKI」のメッセージにそれらのメカニズムと組み合わせて使用​​することができます。"
    },
    {
      "indent": 3,
      "text": "During protocol exchanges, different certificates can be used. The following table provides an informative overview. End-entities can have one or more certificates of each type listed in Figure 3 and use one or more trust anchor databases of each type listed in Figure 4.",
      "ja": "プロトコル交換時には、異なる証明書を使用することができます。次の表は、有益な概要を提供します。エンドエンティティは、図3に示されている各タイプの1つ以上の証明書を持っており、図4に記載されている各タイプの1つの以上のトラストアンカーのデータベースを使用することができます。"
    },
    {
      "indent": 3,
      "text": "Certificates and their corresponding uses:\n+--------------+--------------------+-------------------------------+\n| Certificate  | Issuer             | Use and section references    |\n+==============+====================+===============================+\n| EST server   | The CA served by   | Presented by the EST server   |\n| certificate  | the EST server     | during the TLS handshake.     |\n|              |                    |                               |\n|              |                    | Section 3.3.1                 |\n+--------------+--------------------+-------------------------------+\n| EST server   | A CA               | Presented by the EST server   |\n| certificate  | authenticatable by | during the TLS handshake.     |\n|              | a third-party TA,  |                               |\n|              | e.g., a web server | Section 3.3.1 and             |\n|              | CA                 | Security Considerations       |\n+--------------+--------------------+-------------------------------+\n| Third-party  | A CA               | Presented by the EST client   |\n| EST client   | authenticatable by | to the EST server by clients  |\n| certificate  | a third-party TA,  | that have not yet enrolled.   |\n|              | e.g., a device     |                               |\n|              | manufacturer       | Section 3.3.2                 |\n+--------------+--------------------+-------------------------------+\n| EST client   | The CA served by   | Presented to the EST server   |\n| certificate  | the EST server     | during future EST operations. |\n|              |                    |                               |\n|              |                    | Section 3.3.2                 |\n+--------------+--------------------+-------------------------------+\n| End-entity   | The CA served by   | Clients can obtain certs      |\n| certificate  | the EST server     | that are intended for         |\n|              |                    | non-EST uses.  This includes  |\n|              |                    | certs that cannot be used     |\n|              |                    | for EST operations.           |\n|              |                    |                               |\n|              |                    | Section 4.2.3                 |\n+--------------+--------------------+-------------------------------+",
      "raw": true
    },
    {
      "indent": 33,
      "text": "Figure 3",
      "ja": "図3"
    },
    {
      "indent": 3,
      "text": "Trust anchor databases and their corresponding uses:\n+--------------+----------------------------------------------------+\n| TA database  | Use and section references                         |\n+==============+====================================================+\n| EST server   | EST servers use this TA database to authenticate   |\n| Explicit     | certificates issued by the EST CA, including EST   |\n| TA database  | client certificates during enroll/re-enroll        |\n|              | operations.                                        |\n|              |                                                    |\n|              | Section 3.3.2                                      |\n+--------------+----------------------------------------------------+\n| EST server   | EST servers use this TA database to authenticate   |\n| Implicit     | certificates issued by third-party TAs;            |\n| TA database  | e.g., EST client certificates issued by a device   |\n|              | manufacturer.                                      |\n|              | An Implicit TA database can be disabled.           |\n|              |                                                    |\n|              | Section 3.3.2                                      |\n+--------------+----------------------------------------------------+\n| EST client   | EST clients use this TA database to authenticate   |\n| Explicit     | certificates issued by the EST CA, including EST   |\n| TA database  | server certificates.                               |\n|              |                                                    |\n|              | Sections 3.1, 3.3.1, 3.6.1, and 4.1.1              |\n+--------------+----------------------------------------------------+\n| EST client   | EST clients use this TA database to                |\n| Implicit     | authenticate an EST server that uses an externally |\n| TA database  | issued certificate.                                |\n|              | An Implicit TA database can be disabled.           |\n|              |                                                    |\n|              | Sections 3.1, 3.3.1, 3.6.2, and                    |\n|              | Security Considerations                            |\n+--------------+----------------------------------------------------+",
      "raw": true
    },
    {
      "indent": 33,
      "text": "Figure 4",
      "ja": "図4"
    },
    {
      "indent": 0,
      "text": "3.1. Application Layer",
      "section_title": true,
      "ja": "3.1. アプリケーション層"
    },
    {
      "indent": 3,
      "text": "The EST client MUST be capable of generating and parsing Simple PKI messages (see Section 4.2). Generating and parsing Full PKI messages is OPTIONAL (see Section 4.3). The client MUST also be able to request CA certificates from the EST server and parse the returned \"bag\" of certificates (see Section 4.1). Requesting CSR attributes and parsing the returned list of attributes is OPTIONAL (see Section 4.5).",
      "ja": "ESTクライアントは、（4.2節を参照）シンプルなPKIメッセージを生成し、解析することができなければなりません。生成と完全なPKIメッセージを解析するには、（4.3節を参照）はオプションです。また、クライアントは、ESTサーバからCA証明書を要求し、証明書（セクション4.1を参照）の返された「バッグ」を解析できなければなりません。 CSR属性を要求すると、属性の返されたリストを解析すること（セクション4.5を参照）はオプションです。"
    },
    {
      "indent": 3,
      "text": "Details of the EST client application configuration are out of scope of the protocol discussion but are necessary for understanding the prerequisites of initiating protocol operations. The EST client is RECOMMENDED to be configured with TA databases for Section 3.3.1 or with a secret key for Section 3.3.3. Implementations conforming to this standard MUST provide the ability to designate Explicit TAs. For human usability reasons, a \"fingerprint\" of an Explicit TA database entry can be configured for bootstrapping as discussed in Section 4.1.1. Configuration of an Implicit TA database, perhaps by its inclusion within the EST client distribution or available from the operating system, provides flexibility along with the caveats detailed in Section 6. Implementations conforming to this standard MUST provide the ability to disable use of any Implicit TA database.",
      "ja": "ESTクライアントアプリケーションの構成の詳細については、プロトコルの議論の範囲外であるが、プロトコル動作を開始する前提条件を理解するために必要です。 ESTのクライアントが3.3.1または3.3.3のための秘密鍵でTAデータベースを使用して構成することを推奨します。この規格に準拠した実装は、明示のTAを指定する機能を提供しなければなりません。セクション4.1.1で説明したように人間の利便性の理由から、明示的なTAデータベースエントリの「指紋」はブートストラップ用に構成することができます。おそらく、オペレーティングシステムからのESTクライアント配布または使用可能な内のその包含によって暗黙TAデータベースの構成は、任意の暗黙TAの使用を無効にする能力を提供しなければなりません。この規格に準拠した第6の実施では詳述警告とともに柔軟性を提供しますデータベース。"
    },
    {
      "indent": 3,
      "text": "The EST client is configured with sufficient information to form the EST server URI. This can be the full operation path segment (e.g., https://www.example.com/.well-known/est/ or https://www.example.com/.well-known/est/arbitraryLabel1), or the EST client can be configured with a tuple composed of the authority portion of the URI along with the OPTIONAL label (e.g., \"www.example.com:80\" and \"arbitraryLabel1\") or just the authority portion of the URI.",
      "ja": "ESTクライアントは、ESTサーバURIを形成するのに十分な情報が設定されています。これは完全な動作経路セグメントであることができる（例えば、https://www.example.com/.well-known/est/又はhttps://www.example.com/.well-known/est/arbitraryLabel1）、又はESTクライアントは、オプションのラベル（例えば、「www.example.com:80」と「arbitraryLabel1」）またはURIのちょうど権限部分と一緒にURIの権限部分で構成タプルを使用して設定することができます。"
    },
    {
      "indent": 0,
      "text": "3.2. HTTP Layer",
      "section_title": true,
      "ja": "3.2.  HTTPレイヤ"
    },
    {
      "indent": 3,
      "text": "HTTP is used to transfer EST messages. URIs are defined for handling each media type (i.e., message type) as described in Section 3.2.2. HTTP is also used for client authentication services when TLS client authentication is not available, due to the lack of a client certificate suitable for use by TLS (see Section 3.2.3). HTTP authentication can also be used in addition to TLS client authentication if the EST server wishes additional authentication information, as noted in Section 2.2.3. Registered media types are used to convey EST messages as specified in Figure 6.",
      "ja": "HTTPは、ESTメッセージを転送するために使用されます。 URIは、セクション3.2.2に記載したように各メディアタイプ（すなわち、メッセージタイプ）を処理するために定義されています。 TLSクライアント認証は、TLSでの使用に適したクライアント証明書が不足しているため利用できない場合、HTTPは、（3.2.3項を参照）クライアント認証サービスに使用されます。 ESTサーバは、追加の認証情報を希望する場合は2.2.3項で述べたようにHTTP認証はまた、TLSクライアント認証に加えて使用することができます。登録されたメディアタイプは、図6に指定されているESTのメッセージを伝えるために使用されます。"
    },
    {
      "indent": 3,
      "text": "HTTP 1.1 [RFC2616] and above support persistent connections. As described in Section 8.1 of RFC 2616, persistent connections may be used to reduce network and processing loads associated with multiple HTTP requests. EST does not require or preclude persistent HTTP connections.",
      "ja": "HTTP 1.1 [RFC2616]と上記サポート持続的な接続。 RFC 2616のセクション8.1で説明したように、持続的な接続は、複数のHTTPリクエストに関連付けられたネットワーク及び処理負荷を軽減するために使用することができます。 ESTは、永続的なHTTP接続を必要とするか、または排除するものではありません。"
    },
    {
      "indent": 0,
      "text": "3.2.1. HTTP Headers for Control",
      "section_title": true,
      "ja": "3.2.1. コントロール用のHTTPヘッダ"
    },
    {
      "indent": 3,
      "text": "The HTTP Status value is used to communicate success or failure of an EST function. HTTP authentication is used by a client when requested by the server.",
      "ja": "HTTPステータス値がEST機能の成功または失敗を通信するために使用されます。サーバーによって要求されたときにHTTP認証は、クライアントによって使用されます。"
    },
    {
      "indent": 3,
      "text": "The media types specified in the HTTP Content-Type header indicate which EST message is being transferred. Media types used by EST are specified in Section 3.2.4.",
      "ja": "HTTPのContent-Typeヘッダで指定されたメディアタイプは、ESTメッセージが転送されているかを示します。 ESTで使用されるメディアタイプは、セクション3.2.4で指定されています。"
    },
    {
      "indent": 3,
      "text": "HTTP redirections (3xx status codes) to the same web origin (see [RFC6454]) SHOULD be handled by the client without user input so long as all applicable security checks (Sections 3.3 and 3.6) have been enforced on the initial connection. The client initiates a new TLS connection and performs all applicable security checks when redirected to other web origin servers. Redirections to other web origins require the EST client to obtain user input for non-GET or HEAD requests as specified in [RFC2616]. Additionally, if the client has already generated a CSR that includes linking identity and POP information (Section 3.5), then the CSR will need to be recreated to incorporate the tls-unique from the new, redirected session. Note: the key pair need not be regenerated. These are processing and interface burdens on the client. EST server administrators are advised to take this into consideration.",
      "ja": "同じウェブ原点へのHTTPリダイレクト（3xxのステータスコード）は（[RFC6454]参照）、初期接続に適用されているすべての適用可能なセキュリティチェック（セクション3.3および3.6）限り、ユーザ入力なしにクライアントによって処理されるべきです。クライアントが新しいTLS接続を開始し、他のウェブオリジンサーバにリダイレクトする場合は、該当するすべてのセキュリティチェックを実行します。他のウェブ起源へのリダイレクトは、[RFC2616]で指定されている非GETやHEADリクエストに対するユーザー入力を取得するためにESTクライアントが必要です。クライアントがすでにアイデンティティおよびPOP情報（3.5節）を結ぶ含んでCSRを生成した場合さらに、その後、CSRは、TLS-独自の新しい、リダイレクトセッションからを組み込むために再作成する必要があります。注意：鍵ペアを再生成する必要はありません。これらは、クライアント上での処理とのインタフェース負担です。 ESTサーバの管理者は、これを考慮するすることをお勧めします。"
    },
    {
      "indent": 0,
      "text": "3.2.2. HTTP URIs for Control",
      "section_title": true,
      "ja": "3.2.2. コントロール用のHTTPのURI"
    },
    {
      "indent": 3,
      "text": "The EST server MUST support the use of the path-prefix of \"/.well-known/\" as defined in [RFC5785] and the registered name of \"est\". Thus, a valid EST server URI path begins with \"https://www.example.com/.well-known/est\". Each EST operation is indicated by a path-suffix that indicates the intended operation:",
      "ja": "[RFC5785]と「EST」の登録名で定義されているESTサーバは「/.well-known/」のパス接頭辞の使用をサポートしなければなりません。このように、有効なESTサーバURIパスが「https://www.example.com/.well-known/est」で始まります。各EST操作が意図する動作を示すパス接尾辞によって示されています。"
    },
    {
      "indent": 3,
      "text": "Operations and their corresponding URIs:\n+------------------------+-----------------+-------------------+\n| Operation              |Operation path   | Details           |\n+========================+=================+===================+\n| Distribution of CA     | /cacerts        | Section 4.1       |\n| Certificates (MUST)    |                 |                   |\n+------------------------+-----------------+-------------------+\n| Enrollment of          | /simpleenroll   | Section 4.2       |\n| Clients (MUST)         |                 |                   |\n+------------------------+-----------------+-------------------+\n| Re-enrollment of       | /simplereenroll | Section 4.2.2     |\n| Clients (MUST)         |                 |                   |\n+------------------------+-----------------+-------------------+\n| Full CMC (OPTIONAL)    | /fullcmc        | Section 4.3       |\n+------------------------+-----------------+-------------------+\n| Server-Side Key        | /serverkeygen   | Section 4.4       |\n| Generation (OPTIONAL)  |                 |                   |\n+------------------------+-----------------+-------------------+\n| CSR Attributes         | /csrattrs       | Section 4.5       |\n| (OPTIONAL)             |                 |                   |\n+------------------------+-----------------+-------------------+",
      "raw": true
    },
    {
      "indent": 33,
      "text": "Figure 5",
      "ja": "図5"
    },
    {
      "indent": 3,
      "text": "The operation path (Figure 5) is appended to the path-prefix to form the URI used with HTTP GET or POST to perform the desired EST operation. An example valid URI absolute path for the \"/cacerts\" operation is \"/.well-known/est/cacerts\". To retrieve the CA's certificates, the EST client would use the following HTTP request-line:",
      "ja": "動作経路（図5）は、所望のESTの動作を実行するためにHTTP GETまたはPOSTと共に使用されるURIを形成するために、経路プレフィックスに追加されます。 「/のcacerts」動作のための例の有効なURIの絶対パスが「/.well-known/est/cacerts」です。 CAの証明書を取得するには、ESTクライアントは、次のHTTPリクエスト・ラインを使用します。"
    },
    {
      "indent": 3,
      "text": "GET /.well-known/est/cacerts HTTP/1.1",
      "ja": "GET /.well-known/est/cacerts HTTP / 1.1"
    },
    {
      "indent": 3,
      "text": "Likewise, to request a new certificate in this example scheme, the EST client would use the following request-line:",
      "ja": "同様に、この例の方式では、新しい証明書を要求するために、ESTクライアントは、次のリクエストラインを使用します。"
    },
    {
      "indent": 3,
      "text": "POST /.well-known/est/simpleenroll HTTP/1.1",
      "ja": "POST /.well-known/est/simpleenroll HTTP / 1.1"
    },
    {
      "indent": 3,
      "text": "The use of distinct operation paths simplifies implementation for servers that do not perform client authentication when distributing /cacerts responses.",
      "ja": "明確な操作パスの使用は/ cacertsに応答を配布する際に、クライアントの認証を実行しないサーバーの実装を簡素化します。"
    },
    {
      "indent": 3,
      "text": "An EST server MAY provide service for multiple CAs as indicated by an OPTIONAL additional path segment between the registered application name and the operation path. To avoid conflict, the CA label MUST NOT be the same as any defined operation path segment. The EST server MUST provide services regardless of whether the additional path segment is present. The following are three example valid URIs:",
      "ja": "登録されたアプリケーション名と操作軌跡との間の任意の追加のパスセグメントによって示されるようESTサーバが複数のCAにサービスを提供してもよいです。競合を避けるために、CAラベルは任意の定義された操作のパスセグメントと同じであってはなりません。 ESTサーバに関係なく、追加の経路セグメントが存在するか否かのサービスを提供しなければなりません。次は3例で、有効なURIは以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "1. https://www.example.com/.well-known/est/cacerts",
      "section_title": true,
      "ja": "１。 ｈっｔｐｓ：／／ｗっｗ。えぁｍｐぇ。こｍ／。うぇっｌーｋのｗん／えｓｔ／かせｒｔｓ"
    },
    {
      "indent": 3,
      "text": "2. https://www.example.com/.well-known/est/arbitraryLabel1/cacerts",
      "section_title": true,
      "ja": "２。 ｈっｔｐｓ：／／ｗっｗ。えぁｍｐぇ。こｍ／。うぇっｌーｋのｗん／えｓｔ／あｒびｔらｒｙぁべｌ１／かせｒｔｓ"
    },
    {
      "indent": 3,
      "text": "3. https://www.example.com/.well-known/est/arbitraryLabel2/cacerts",
      "section_title": true,
      "ja": "３。 ｈっｔｐｓ：／／ｗっｗ。えぁｍｐぇ。こｍ／。うぇっｌーｋのｗん／えｓｔ／あｒびｔらｒｙぁべｌ２／かせｒｔｓ"
    },
    {
      "indent": 3,
      "text": "In this specification, the distinction between enroll and renew/rekey is explicitly indicated by the HTTP URI. When requesting /fullcmc operations, CMC [RFC5272] uses the same messages for certificate renewal and certificate rekey.",
      "ja": "本明細書では、登録し、/キーの再生成を更新間の区別が明確にHTTP URIで示されています。 / fullcmc操作を要求するとき、CMC [RFC5272]は証明書の更新と証明書鍵再生成のために同じメッセージを使用します。"
    },
    {
      "indent": 3,
      "text": "An EST server can provide additional services using other URIs.",
      "ja": "ESTサーバは、他のURIを使用して付加的なサービスを提供することができます。"
    },
    {
      "indent": 0,
      "text": "3.2.3. HTTP-Based Client Authentication",
      "section_title": true,
      "ja": "3.2.3.  HTTPベースのクライアント認証"
    },
    {
      "indent": 3,
      "text": "The EST server MAY request HTTP-based client authentication. This request can be in addition to successful TLS client authentication (Section 3.3.2) if EST server policy requires additional authentication. (For example, the EST server may require that an EST client \"knows\" a password in addition to \"having\" an existing client certificate.) Or, HTTP-based client authentication can be an EST server policy-specified fallback in situations where the EST client did not successfully complete the TLS client authentication. (This might arise if the EST client is enrolling for the first time or if the certificates available to an EST client cannot be used for TLS client authentication.)",
      "ja": "ESTサーバは、HTTPベースのクライアント認証を要求することができます。 ESTサーバポリシーは、追加の認証が必要な場合は、この要求は成功したTLSクライアント認証（3.3.2）に加えて、することができます。 （例えば、ESTサーバは。ESTクライアントはほかにパスワードが既存のクライアント証明書「を有する」こと「知っている」ことを要求することができる）か、HTTPベースのクライアント認証は、状況におけるESTサーバポリシー指定のフォールバックすることができESTクライアントが正常にTLSクライアント認証を完了しませんでした。 （ESTクライアントが最初に登録されている場合やESTのクライアントが利用可能な証明書がTLSクライアント認証に使用することができない場合に発生する可能性があります。）"
    },
    {
      "indent": 3,
      "text": "HTTP Basic and Digest authentication MUST only be performed over TLS 1.1 [RFC4346] or later versions. NULL and anon cipher suites MUST NOT be used because they do not provide confidentiality or support mutual certificate-based or certificate-less authentication, respectively. As specified in \"Certificate Management over CMS (CMC): Transport Protocols\" [RFC5273], the server \"MUST NOT assume client support for any type of HTTP authentication such as cookies, Basic authentication, or Digest authentication\". Clients SHOULD support the Basic and Digest authentication mechanism.",
      "ja": "HTTP Basicおよびダイジェスト認証のみTLS 1.1 [RFC4346]またはそれ以降のバージョン上で実行されなければなりません。彼らはそれぞれ、機密性を提供するか、または相互証明書ベースまたは証明書レス認証をサポートしていないので、NULLとアノン暗号スイートを使用してはいけません。 「CMS（CMC）上で証明書の管理：トランスポートプロトコル」で指定されているように、[RFC5273]、サーバー「は、クッキー、基本認証とHTTP認証のいずれかのタイプのクライアントのサポートを想定し、または認証をダイジェストてはなりません」。クライアントは、基本とダイジェスト認証機構をサポートする必要があります。"
    },
    {
      "indent": 3,
      "text": "Servers that wish to use Basic and Digest authentication reject the HTTP request using the HTTP-defined WWW-Authenticate response-header ([RFC2616], Section 14.47). The client is expected to retry the request, including the appropriate Authorization Request header ([RFC2617], Section 3.2.2), if the client is capable of using the Basic or Digest authentication. If the client is not capable of retrying the request or it is not capable of Basic or Digest authentication, then the client MUST terminate the connection.",
      "ja": "基本とダイジェスト認証を使用するサーバーは、HTTP定義WWW認証応答ヘッダ（[RFC2616]、セクション14.47）を使用してHTTP要求を拒否する。クライアントは、基本またはダイジェスト認証を使用することが可能である場合、クライアントは、適切な認可要求ヘッダ（[RFC2617]、セクション3.2.2）を含む要求を再試行することが期待されます。クライアントが要求を再試行できないか、それがBasicまたはダイジェスト認証に対応していない場合、クライアントは接続を終えなければなりません。"
    },
    {
      "indent": 3,
      "text": "A client MAY set the username to the empty string (\"\") if it is presenting a password that is not associated with a username.",
      "ja": "それは、ユーザー名に関連付けられていないパスワードを提示している場合、クライアントは空の文字列（「」）にユーザ名を設定することができます。"
    },
    {
      "indent": 3,
      "text": "Support for HTTP-based client authentication has security ramifications as discussed in Section 6. The client MUST NOT respond to the server's HTTP authentication request unless the client has authorized the EST server (as per Section 3.6).",
      "ja": "クライアントが（セクション3.6に従って）ESTサーバを許可していない限り、クライアントは、サーバーのHTTP認証要求に応じてはいけません、セクション6で説明したようにHTTPベースのクライアント認証のサポートは、セキュリティの波及効果を持っています。"
    },
    {
      "indent": 0,
      "text": "3.2.4. Message Types",
      "section_title": true,
      "ja": "3.2.4. メッセージタイプ"
    },
    {
      "indent": 3,
      "text": "This document uses existing media types for the messages as specified by FTP and HTTP [RFC2585], application/pkcs10 [RFC5967], and CMC [RFC5272].",
      "ja": "FTPやHTTP [RFC2585]、アプリケーション/ PKCS10 [RFC5967]、およびCMC [RFC5272]で指定されたこの文書は、メッセージのためのメディアタイプを既存の使用します。"
    },
    {
      "indent": 3,
      "text": "For consistency with [RFC5273], each distinct EST message type uses an HTTP Content-Type header with a specific media type.",
      "ja": "[RFC5273]との整合性のために、それぞれ別個のESTメッセージタイプは、特定のメディアタイプのHTTPのContent-Typeヘッダを使用します。"
    },
    {
      "indent": 3,
      "text": "The EST messages and their corresponding media types for each operation are:",
      "ja": "各操作のESTメッセージとその対応するメディアの種類は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "+--------------------+--------------------------+-------------------+\n| Message type       | Request media type       | Request section(s)|\n|                    | Response media type(s)   | Response section  |\n| (per operation)    | Source(s) of types       |                   |\n+====================+==========================+===================+\n| Distribution of CA | N/A                      | Section 4.1       |\n| Certificates       | application/pkcs7-mime   | Section 4.1.1     |\n|                    | [RFC5751]                |                   |\n| /cacerts           |                          |                   |\n+--------------------+--------------------------+-------------------+\n| Client Certificate | application/pkcs10       | Sections 4.2/4.2.1|\n| Request Functions  | application/pkcs7-mime   | Section 4.2.2     |\n|                    | [RFC5967] [RFC5751]      |                   |\n| /simpleenroll      |                          |                   |\n| /simplereenroll    |                          |                   |\n+--------------------+--------------------------+-------------------+\n| Full CMC           | application/pkcs7-mime   | Section 4.3.1     |\n|                    | application/pkcs7-mime   | Section 4.3.2     |\n| /fullcmc           | [RFC5751]                |                   |\n+--------------------+--------------------------+-------------------+\n| Server-Side Key    | application/pkcs10       | Section 4.4.1     |\n| Generation         | multipart/mixed          | Section 4.4.2     |\n|                    | (application/pkcs7-mime &|                   |\n|                    | application/pkcs8)       |                   |\n|                    | [RFC5967] [RFC5751]      |                   |\n| /serverkeygen      | [RFC5958]                |                   |\n+--------------------+--------------------------+-------------------+\n| CSR Attributes     | N/A                      | Section 4.5.1     |\n|                    | application/csrattrs     | Section 4.5.2     |\n|                    | (This document)          |                   |\n| /csrattrs          |                          |                   |\n+--------------------+--------------------------+-------------------+",
      "raw": true
    },
    {
      "indent": 33,
      "text": "Figure 6",
      "ja": "図6"
    },
    {
      "indent": 0,
      "text": "3.3. TLS Layer",
      "section_title": true,
      "ja": "3.3.  TLSレイヤ"
    },
    {
      "indent": 3,
      "text": "TLS provides authentication, which in turn enables authorization decisions. The EST server and EST client are responsible for ensuring that an acceptable cipher suite is negotiated and that mutual authentication has been performed. TLS authentication is most commonly enabled with the use of certificates [RFC5280]. Alternately, certificate-less TLS authentication, where neither the client nor server present a certificate, is also an acceptable method for EST mutual authentication (Section 3.3.3). The EST server MUST be authenticated during the TLS handshake unless the client is requesting Bootstrap Distribution of CA certificates (Section 4.1.1) or Full CMC (Section 4.3).",
      "ja": "TLSは、順番に、認可の決定を可能にする、認証を提供します。 ESTサーバとESTクライアントが許容できる暗号スイートがネゴシエートされ、その相互認証が行われたことを確保する責任があります。 TLS認証は、最も一般的に、証明書[RFC5280]を使用して有効になっています。代わりに、クライアントとサーバーのいずれも、証明書を提示した証明書レスTLS認証は、また、EST相互認証（3.3.3）のための許容可能な方法です。クライアントは、CA証明書（4.1.1）または全CMC（4.3節）のブートストラップの配布を要求されない限り、ESTサーバがTLSハンドシェイク中に認証される必要があります。"
    },
    {
      "indent": 3,
      "text": "HTTPS [RFC2818] specifies how HTTP messages are carried over TLS. HTTPS MUST be used. TLS 1.1 [RFC4346] (or a later version) MUST be used for all EST communications. TLS session resumption [RFC5077] SHOULD be supported.",
      "ja": "HTTPS [RFC2818]はHTTPメッセージがTLS上で実行されている方法を指定します。 HTTPSを使用しなければなりません。 TLS 1.1 [RFC4346]（またはそれ以降のバージョン）は、すべてのESTの通信に使用されなければなりません。 TLSセッション再開[RFC5077]はサポートされる必要があります。"
    },
    {
      "indent": 3,
      "text": "TLS channel-binding information can be inserted into a certificate request, as detailed in Section 3.5, in order to provide the EST server with assurance that the authenticated TLS client has access to the private key for the certificate being requested. The EST server MUST implement Section 3.5.",
      "ja": "TLSチャネル・バインディング情報は、認証されたTLSクライアントが要求されている証明書の秘密キーへのアクセス権を持っていることを保証してESTサーバを提供するために、3.5節で詳述するように、証明書要求に挿入することができます。 ESTサーバは、セクション3.5を実装しなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.3.1. TLS-Based Server Authentication",
      "section_title": true,
      "ja": "3.3.1.  TLSベースのサーバーの認証"
    },
    {
      "indent": 3,
      "text": "TLS server authentication with certificates MUST be supported.",
      "ja": "証明書とTLSサーバ認証をサポートしなければなりません。"
    },
    {
      "indent": 3,
      "text": "The EST client authenticates the EST server as defined for the cipher suite negotiated. The following text provides details assuming a certificate-based cipher suite, such as the TLS 1.1 [RFC4346] mandatory cipher suite (TLS_RSA_WITH_3DES_EDE_CBC_SHA).",
      "ja": "ESTクライアントが交渉した暗号スイートのために定義されているESTサーバを認証します。次のテキストは、TLS 1.1 [RFC4346]必須の暗号スイート（TLS_RSA_WITH_3DES_EDE_CBC_SHA）などの証明書ベースの暗号スイートを、仮定の詳細を提供します。"
    },
    {
      "indent": 3,
      "text": "Certificate validation MUST be performed as per [RFC5280]. The EST server certificate MUST conform to the [RFC5280] certificate profile.",
      "ja": "証明書の検証は、[RFC5280]に従って実行されなければなりません。 ESTサーバ証明書は、[RFC5280]証明書プロファイルに従わなければなりません。"
    },
    {
      "indent": 3,
      "text": "The client validates the TLS server certificate using the EST client Explicit and, if enabled, Implicit TA database(s). The client MUST maintain a distinction between the use of Explicit and Implicit TA databases during authentication in order to support proper authorization. The EST client MUST perform authorization checks as specified in Section 3.6.",
      "ja": "クライアントは、明示的なESTクライアントを使用してTLSサーバ証明書を検証し、有効になっている場合、暗黙のTAデータベース（複数可）。クライアントは、適切な認証をサポートするために、認証時に明示的および暗黙的TAデータベースの使用の区別を維持しなければなりません。セクション3.6で指定されたESTクライアントは、認証チェックを実行しなければなりません。"
    },
    {
      "indent": 3,
      "text": "If certificate validation fails, the client MAY follow the procedure outlined in Section 4.1.1 for Bootstrap Distribution of CA certificates.",
      "ja": "証明書の検証が失敗した場合、クライアントは、CA証明書のブートストラップの配布については、セクション4.1.1に概説した手順に従うことができます。"
    },
    {
      "indent": 0,
      "text": "3.3.2. TLS-Based Client Authentication",
      "section_title": true,
      "ja": "3.3.2.  TLSベースのクライアント認証"
    },
    {
      "indent": 3,
      "text": "TLS client authentication is the RECOMMENDED method for identifying EST clients. HTTP-based client authentication (Section 3.2.3) MAY be used.",
      "ja": "TLSクライアント認証は、ESTクライアントを識別するための推奨される方法です。 HTTPベースのクライアント認証（3.2.3）を使用することができます。"
    },
    {
      "indent": 3,
      "text": "The EST server authenticates the EST client as defined for the cipher suite negotiated. The following text provides details assuming a certificate-based cipher suite such as the TLS 1.1 [RFC4346] mandatory cipher suite (TLS_RSA_WITH_3DES_EDE_CBC_SHA). The EST server MUST support certificate-based client authentication.",
      "ja": "交渉された暗号スイートのために定義されているESTサーバは、ESTクライアントを認証します。次のテキストは、TLS 1.1 [RFC4346]必須の暗号スイート（TLS_RSA_WITH_3DES_EDE_CBC_SHA）などの証明書ベースの暗号スイートを想定詳細を提供します。 ESTサーバは、証明書ベースのクライアント認証をサポートしなければなりません。"
    },
    {
      "indent": 3,
      "text": "Generally, the client will use an existing certificate for renew or rekey operations. If the certificate to be renewed or rekeyed is appropriate for the negotiated cipher suite, then the client MUST use it for the TLS handshake, otherwise the client SHOULD use an alternate certificate that is suitable for the cipher suite and contains the same subject identity information. When requesting an enroll operation, the client MAY use a client certificate issued by a third party to authenticate itself.",
      "ja": "一般的に、クライアントが更新またはキー更新操作のための既存の証明書を使用します。更新またはリキーする証明書は、ネゴシエートされた暗号スイートに適切である場合、クライアントは、他のクライアントが暗号スイートに適しており、同一の被写体識別情報を含む代替の証明書を使用する必要があり、TLSハンドシェイクのためにそれを使用しなければなりません。 [登録操作を要求する場合、クライアントが自身を認証する第三者によって発行されたクライアント証明書を使用するかもしれません。"
    },
    {
      "indent": 3,
      "text": "Certificate validation MUST be performed as per [RFC5280]. The EST client certificate MUST conform to the [RFC5280] certificate profile.",
      "ja": "証明書の検証は、[RFC5280]に従って実行されなければなりません。 ESTのクライアント証明書は、[RFC5280]証明書プロファイルに従わなければなりません。"
    },
    {
      "indent": 3,
      "text": "The server validates the TLS client certificate using the EST server Explicit and, if enabled, Implicit TA database(s). The server MUST maintain a distinction between the use of Explicit and Implicit TA databases during authentication in order to support proper authorization.",
      "ja": "サーバーは、明示的なESTサーバを使用して、TLSクライアント証明書を検証し、有効になっている場合、暗黙のTAデータベース（複数可）。サーバーは、適切な認証をサポートするために、認証時に明示的および暗黙的TAデータベースの使用の区別を維持しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The EST server MUST perform authorization checks as specified in Section 3.7.",
      "ja": "3.7節に指定されているESTサーバーは認証チェックを実行しなければなりません。"
    },
    {
      "indent": 3,
      "text": "If a client does not support TLS client authentication, then it MUST support HTTP-based client authentication (Section 3.2.3) or certificate-less TLS authentication (Section 3.3.3).",
      "ja": "クライアントはTLSクライアント認証をサポートしていない場合、それはHTTPベースのクライアント認証（3.2.3）または証明書レスTLS認証（3.3.3）をサポートしなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.3.3. Certificate-Less TLS Mutual Authentication",
      "section_title": true,
      "ja": "3.3.3. 証明書レスTLS相互認証"
    },
    {
      "indent": 3,
      "text": "Certificate-less TLS cipher suites provide a way to perform mutual authentication in situations where neither the client nor server have certificates, do not desire to use certificates, or do not have the trust anchors necessary to verify a certificate. The client and server MAY negotiate a certificate-less cipher suite for mutual authentication.",
      "ja": "証明書のないTLS暗号スイートは、証明書を使用することを望んでいない、クライアントとサーバーのいずれも、証書を持っている状況で相互認証を実行するための方法を提供し、または信頼関係を持っていないことの証明書を検証するために必要なアンカー。クライアントとサーバが相互認証用の証明書のない暗号スイートを交渉することができます。"
    },
    {
      "indent": 3,
      "text": "When using certificate-less mutual authentication in TLS for enrollment, the cipher suite MUST be based on a protocol that is resistant to dictionary attack and MUST be based on a zero knowledge protocol. Transport Layer Security-Secure Remote Password (TLS-SRP) cipher suites, i.e., those with _SRP_ in the name, listed in Section 2.7 of [RFC5054] are suitable for this purpose. Section 6 lists the characteristics of a cipher suite that are suitable for use in certificate-less mutual authentication for enrollment.",
      "ja": "入学のためのTLSにおける証明書のない相互認証を使用する場合、暗号スイートは、辞書攻撃に対して耐性であり、ゼロ知識プロトコルに基づいている必要がありプロトコルに基づいていなければなりません。 [RFC5054]のセクション2.7に記載されている、すなわちトランスポート層セキュリティ - セキュアリモートパスワード（TLS-SRP）の暗号スイート、名前に_SRP_を持つものは、この目的に適しています。第6章リスト登録の証明書なしの相互認証に使用するのに適している暗号スイートの特徴。"
    },
    {
      "indent": 3,
      "text": "Successful authentication using a certificate-less cipher suite proves knowledge of a pre-shared secret that implicitly authorizes a peer in the exchange.",
      "ja": "証明書のない暗号スイートを使用して成功した認証は、暗黙的交流にピアを認証する事前共有秘密の知識を証明しています。"
    },
    {
      "indent": 0,
      "text": "3.4. Proof-of-Possession",
      "section_title": true,
      "ja": "3.4. 実証の所持"
    },
    {
      "indent": 3,
      "text": "As defined in Section 2.1 of CMC [RFC5272], proof-of-possession (POP) \"refers to a value that can be used to prove that the private key corresponding to the public key is in the possession of and can be used by an end-entity\".",
      "ja": "CMC [RFC5272]のセクション2.1で定義されているように、プルーフ・オブ・所持（POP）「は、公開鍵に対応する秘密鍵がを所有していることを証明するために使用することができるとして使用することができる値でありますエンドエンティティ」。"
    },
    {
      "indent": 3,
      "text": "The signed enrollment request provides a signature-based proof-of-possession. The mechanism described in Section 3.5 strengthens this by optionally including \"Direct\"-based proof-of-possession [RFC5272] by including TLS session-specific information within the data covered by the enrollment request signature (thus linking the enrollment request to the authenticated end point of the TLS connection).",
      "ja": "署名された登録要求は、署名ベースのプルーフ・オブ・所有を提供します。セクション3.5で説明されたメカニズムは、必要に応じて「直接」ベースのプルーフ・オブ・所持[RFC5272]登録要求署名対象データ内のTLSセッション固有の情報を含めることによって（従って、認証端部に登録要求をリンクを含むことによって、これを強化しますTLS接続のポイント）。"
    },
    {
      "indent": 0,
      "text": "3.5. Linking Identity and POP Information",
      "section_title": true,
      "ja": "3.5. リンクアイデンティティとPOPの情報"
    },
    {
      "indent": 3,
      "text": "Server policy will determine whether clients are required to use the mechanism specified in this section. This specification provides a method of linking identity and proof-of-possession by including information specific to the current authenticated TLS session within the signed certification request. The client can determine if the server requires the linking of identity and POP by examining the CSR Attributes Response (see Section 4.5.2). Regardless of the CSR Attributes Response, clients SHOULD link identity and POP by embedding tls-unique information in the certification request. If tls-unique information is included by the client, the server MUST verify it. The EST server MAY reject requests without tls-unique information as indicated by server policy.",
      "ja": "サーバーポリシーは、クライアントが、このセクションで指定したメカニズムを使用するために必要かどうかを判断します。本明細書は、署名された証明書要求内の現在の認証されたTLSセッションに固有の情報を含めることによって識別とプルーフ・オブ・所持を連結する方法を提供します。サーバが応答を（4.5.2項を参照）属性CSRを調べることによって識別およびPOPのリンクを必要とする場合、クライアントが決定することができます。かかわらず、CSRの応答属性、クライアントが認証要求でTLS固有の情報を埋め込むことによって、アイデンティティとPOPをリンクする必要があります。 TLS固有の情報がクライアントによって含まれている場合、サーバはそれを確かめなければなりません。 ESTサーバは、サーバポリシーによって示されるように、TLS-固有の情報なしで要求を拒否するかもしれません。"
    },
    {
      "indent": 3,
      "text": "Linking identity and proof-of-possession proves to the server that the authenticated TLS client has possession of the private key associated with the certification request, and that the client was able to sign the certification request after the TLS session was established. This is an alternative to the \"Linking Identity and POP Information\" method defined by Section 6 of [RFC5272] that is available if Full PKI messages are used.",
      "ja": "アイデンティティと実証の所持をリンクする認証されたTLSクライアントが証明書要求に関連付けられた秘密鍵の所有を持つサーバーに証明し、そしてクライアントがTLSセッションが確立された後に証明書要求に署名することができたこと。これは完全なPKIメッセージが使用されている場合は利用可能である[RFC5272]のセクション6で定義される「リンクIDとPOP情報」方式に代わるものです。"
    },
    {
      "indent": 3,
      "text": "The client generating the CSR obtains the tls-unique value from the TLS subsystem as described in Channel Bindings for TLS [RFC5929]. The EST client operations between obtaining the tls-unique value through generation of the CSR that contains the current tls-unique value and the subsequent verification of this value by the EST server are the \"phases of the application protocol during which application-layer authentication occurs\"; these operations are protected by the synchronization interoperability mechanism described in the \"Channel Bindings for TLS\" interoperability notes in Section 3.1 of [RFC5929].",
      "ja": "TLS [RFC5929]のためのチャネルバインディングで説明したようにCSRを生成し、クライアントはTLSサブシステムからTLS-一意の値を取得します。 ESTサーバによって現在のTLS固有の値と、この値のその後の検証が含まCSRの生成を介してTLS-一意の値を取得する間ESTクライアント操作はアプリケーション層認証が発生し、その間アプリケーションプロトコルの「相であります「;これらの操作は、[RFC5929]の3.1節で「チャネルバインディングTLSのための」相互運用性ノートに記載の同期の相互運用性のメカニズムによって保護されています。"
    },
    {
      "indent": 3,
      "text": "When performing renegotiation, TLS \"secure_renegotiation\" [RFC5746] MUST be used.",
      "ja": "再ネゴシエーションを行うとき、TLS \"secure_renegotiation\" [RFC5746]は使用しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The tls-unique value is base64 encoded as specified in Section 4 of [RFC4648], and the resulting string is placed in the certification request challenge-password field ([RFC2985], Section 5.4.1). The challenge-password field is limited to 255 bytes (Section 7.4.9 of [RFC5246] indicates that no existing cipher suite would result in an issue with this limitation). If the challenge-password attribute is absent, the client did not include the optional channel-binding information (the presence of the challenge-password attribute indicates the inclusion of tls-unique information).",
      "ja": "TLS固有値は[RFC4648]のセクション4で指定されるようにbase64エンコードされ、そして得られた文字列が認証要求チャレンジパスワードフィールドに配置されている（[RFC2985]、セクション5.4.1）。チャレンジパスワードフィールドは、255バイト（[RFC5246]のセクション7.4.9既存の暗号スイートは、この制限の問題が生じないことを示す）に限定されています。チャレンジパスワード属性が存在しない場合、クライアントは（チャレンジ・パスワード属性の存在は、TLS-固有の情報を含めることを示します）、オプションチャンネル結合情報が含まれていませんでした。"
    },
    {
      "indent": 3,
      "text": "If the EST server makes use of a back-end infrastructure for processing, it is RECOMMENDED that the results of this verification be communicated. (For example, this communication might use the CMC [RFC5272] \"RA POP Witness Control\" in a CMC Full PKI Request message. Or, an EST server might TLS-authenticate an EST client as being a trusted infrastructure element that does not forward invalid requests. A detailed discussion of back-end processing is out of scope.)",
      "ja": "ESTサーバが処理のためのバックエンドインフラストラクチャを使用する場合は、この検証の結果を伝達することがあることを推奨します。 （例えば、この通信は、CMCのフルPKI RequestメッセージにCMC [RFC5272]「RA POP証人コントロール」を使用する場合があります。または、ESTサーバが不正転送しない信頼性の高いインフラストラクチャ要素としてESTクライアントをTLS-認証かもしれません要求。バックエンド処理の詳細な説明は範囲外です。）"
    },
    {
      "indent": 3,
      "text": "When rejecting requests, the EST server response is as described for all enroll responses (Section 4.2.3). If a Full PKI Response is included, the CMCFailInfo MUST be set to popFailed. If a human-readable reject message is included, it SHOULD include an informative text message indicating that the linking of identity and POP information is required.",
      "ja": "要求を拒否すると、ESTサーバの応答はすべてのために記載されているように応答（4.2.3）を登録します。完全なPKI応答が含まれている場合は、CMCFailInfoはpopFailedに設定しなければなりません。人間が読み取り可能なメッセージが含まれて拒否した場合、それはアイデンティティとPOP情報のリンクが必要であることを示す情報テキストメッセージを含めるべきです。"
    },
    {
      "indent": 0,
      "text": "3.6. Server Authorization",
      "section_title": true,
      "ja": "3.6. サーバー認証"
    },
    {
      "indent": 3,
      "text": "The client MUST check EST server authorization before accepting any server responses or responding to HTTP authentication requests.",
      "ja": "クライアントは、任意のサーバ応答を受け入れるまたはHTTP認証要求に応答する前に、ESTサーバーの承認をチェックしなければなりません。"
    },
    {
      "indent": 3,
      "text": "The EST client authorization method depends on which method was used to authenticate the server. When the Explicit TA database is used to authenticate the EST server, then Section 3.6.1 applies. When the Implicit TA database is used to authenticate the EST server, then",
      "ja": "ESTクライアント認証方法は、サーバーを認証するために使用された方法によって異なります。明示的なTAデータベースはESTサーバを認証するために使用された場合、その後3.6.1項が適用されます。暗黙TAデータベースはその後、ESTサーバを認証するために使用された場合"
    },
    {
      "indent": 3,
      "text": "Section 3.6.2 applies. Successful authentication using a certificate-less cipher suite implies authorization of the server.",
      "ja": "3.6.2項が適用されます。証明書のない暗号スイートを使用して成功した認証は、サーバーの認証を意味します。"
    },
    {
      "indent": 3,
      "text": "The client MAY perform bootstrapping as specified in Section 4.1.1 even if these checks fail.",
      "ja": "これらのチェックが失敗した場合でも、セクション4.1.1で指定されたクライアントは、ブートストラップを実行してもよいです。"
    },
    {
      "indent": 0,
      "text": "3.6.1. Client Use of Explicit TA Database",
      "section_title": true,
      "ja": "3.6.1. 明示的なTAデータベースのクライアントの使用"
    },
    {
      "indent": 3,
      "text": "When the EST client Explicit TA database is used to validate the EST server certificate, the client MUST check either the configured URI or the most recent HTTP redirection URI against the server's identity according to the rules specified in [RFC6125], Section 6.4, or the EST server certificate MUST contain the id-kp-cmcRA [RFC6402] extended key usage extension.",
      "ja": "ESTクライアント明示的なTAデータベースをESTサーバー証明書を検証するために使用された場合、クライアントは、[RFC6125]で指定されたルールに従ってサーバーのIDに対して構成URIまたは最新のHTTPリダイレクトURIのいずれかをチェックし、6.4節、またはしなければなりませんESTサーバ証明書は、ID-KP-cmcRA [RFC6402]拡張鍵使用拡張を含まなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.6.2. Client Use of Implicit TA Database",
      "section_title": true,
      "ja": "3.6.2. 暗黙TAデータベースのクライアントの使用"
    },
    {
      "indent": 3,
      "text": "When the EST client Implicit TA database is used to validate the EST server certificate, the client MUST check the configured URI and each HTTP redirection URI according to the rules specified in [RFC6125], Section 6.4. The provisioned URI or the most recent HTTP redirection URI provides the basis for authorization, and the server's authenticated identity confirms it is the authorized server.",
      "ja": "ESTクライアント暗黙TAデータベースがESTサーバ証明書を検証するために使用される場合、クライアントは、[RFC6125]で指定された規則に従って、セクション6.4を構成URIと各HTTPリダイレクトURIをチェックしなければなりません。プロビジョニングURIまたは最新のHTTPリダイレクトURIは認証のための基礎を提供し、サーバーの認証されたIDは、それが正規のサーバで確認しました。"
    },
    {
      "indent": 0,
      "text": "3.7. Client Authorization",
      "section_title": true,
      "ja": "3.7. クライアント許可"
    },
    {
      "indent": 3,
      "text": "The decision to issue a certificate to a client is always controlled by local CA policy. The EST server configuration reflects this CA policy. This document does not specify any constraints on such policy. EST provides the EST server access to each client's authenticated identity -- e.g., the TLS client's certificate in addition to any HTTP user authentication credentials -- to help in implementing such policy.",
      "ja": "クライアントに証明書を発行する決定は、常にローカルCAのポリシーによって制御されています。 ESTのサーバー構成では、このCAの方針を反映しています。この文書では、そのような政策上の任意の制約を指定しません。例えば、任意のHTTPユーザ認証の資格情報に加えて、TLSクライアントの証明書が -   - そのようなポリシーを実装するに支援するESTは、各クライアントの認証されたIDにESTサーバへのアクセスを提供します。"
    },
    {
      "indent": 3,
      "text": "If the client's certificate was issued by the EST CA, and it includes the id-kp-cmcRA [RFC6402] extended key usage extension, then the client is a Registration Authority (RA) as described in [RFC5272] and [RFC6402]. In this case, the EST server SHOULD apply authorization policy consistent with an RA client. For example, when handling /simpleenroll requests, the EST server could be configured to accept POP linking information that does not match the current TLS session because the authenticated EST client RA has verified this information when acting as an EST server (as specified in Section 3.5). More specific RA mechanisms are available if the EST client uses /fullcmc methods.",
      "ja": "クライアントの証明書がEST CAによって発行され、それがID-KP-cmcRA [RFC6402]の拡張鍵用途拡張が含まれている場合は、[RFC5272]と[RFC6402]で説明したように、クライアントは登録機関（RA）です。この場合、ESTサーバは、RAクライアントと一致認可ポリシーを適用する必要があります。 / simpleenrollリクエストを処理する際に、例えば、ESTサーバが認証ESTクライアントRAが確認されたため、3.5節に指定されている（ESTサーバとして動作する場合、この情報を、現在のTLSセッションと一致していないPOPのリンク情報を受け入れるように構成することができます）。 ESTクライアントは/ fullcmcメソッドを使用している場合、より具体的なRAのメカニズムが用意されています。"
    },
    {
      "indent": 0,
      "text": "4. Protocol Exchange Details",
      "section_title": true,
      "ja": "4.プロトコルの交換詳細"
    },
    {
      "indent": 3,
      "text": "Before processing a request, an EST server determines if the client is authorized to receive the requested services. Likewise, the client determines if it will make requests to the EST server. These authorization decisions are described in the next two sections. Assuming that both sides of the exchange are authorized, then the actual operations are as described in subsequent sections.",
      "ja": "クライアントが要求したサービスを受けることを許可された場合は、要求を処理する前に、ESTサーバが決定します。それはESTサーバへのリクエストを行います場合は同様に、クライアントが決定します。これらの許可の決定は、次の2つのセクションで説明されています。以降のセクションで説明するように交換の両側が許可されていると仮定すると、実際の動作です。"
    },
    {
      "indent": 0,
      "text": "4.1. Distribution of CA Certificates",
      "section_title": true,
      "ja": "4.1.  CA証明書の配布"
    },
    {
      "indent": 3,
      "text": "The EST client can request a copy of the current CA certificates. This function is generally performed before other EST functions.",
      "ja": "ESTクライアントは、現在のCA証明書のコピーを要求することができます。この機能は、一般的に他のEST機能の前に行われます。"
    },
    {
      "indent": 0,
      "text": "4.1.1. Bootstrap Distribution of CA Certificates",
      "section_title": true,
      "ja": "4.1.1.  CA証明書の配布ブートストラップ"
    },
    {
      "indent": 3,
      "text": "It is possible that the client was not configured with an Implicit TA database that allows a bootstrap installation of the Explicit TA database as described in 4.1.3. This section describes an alternate method by which minimally configured EST clients can populate their Explicit TA database.",
      "ja": "クライアントが4.1.3に記載のように明示的なTAデータベースのブートストラップインストールを可能にする暗黙TAデータベースと設定されていない可能性があります。このセクションでは、最小限の設定ESTのクライアントが明示的TAデータベースをポピュレートすることができることにより、別の方法を記載しています。"
    },
    {
      "indent": 3,
      "text": "If the EST client application does not specify either an Explicit TA database or an Implicit TA database, then the initial TLS server authentication and authorization will fail. The client MAY provisionally continue the TLS handshake to completion for the purposes of accessing the /cacerts or /fullcmc method. If the EST client continues with an unauthenticated connection, the client MUST extract the HTTP content data from the response (Sections 4.1.3 or 4.3.2) and engage a human user to authorize the CA certificate using out-of-band data such as a CA certificate \"fingerprint\" (e.g., a SHA-256 or SHA-512 [SHS] hash on the whole CA certificate). In a /fullcmc response, it is the Publish Trust Anchors control (CMC [RFC5272], Section 6.15) within the Full PKI Response that must be accepted manually. It is incumbent on the user to properly verify the TA information, or to provide the \"fingerprint\" data during configuration that is necessary to verify the TA information.",
      "ja": "ESTのクライアントアプリケーションが明示的なTAデータベースまたは暗黙TAデータベースのいずれかを指定しない場合は、初期TLSサーバ認証と認可は失敗します。クライアントは、暫定/のcacertsファイルまたは/ fullcmcメソッドにアクセスする目的のために完了するTLSハンドシェイクを継続してもよいです。 ESTクライアントが認証されていない接続を継続した場合、クライアントは、このような帯域外データを使用してCA証明書を許可する応答（セクション4.1.3または4.3.2）からHTTPコンテンツデータを抽出し、人間のユーザに係合しなければなりませんCA証明書の \"フィンガープリント\"（例えば、全体のCA証明書のSHA-256やSHA-512 [SHS]ハッシュ）。 / fullcmc応答して、それを手動で受け入れなければならない完全なPKI応答内の公開トラストアンカー制御（CMC [RFC5272]、セクション6.15）です。これは、ユーザ適切TA情報を確認する、またはTA情報を検証する必要があるコンフィギュレーション中に「指紋」データを提供することに現職です。"
    },
    {
      "indent": 3,
      "text": "HTTP authentication requests MUST NOT be responded to if the server has not been authenticated as specified in Section 3.3.1 or if the optional certificate-less authentication is used as specified in Section 3.3.3.",
      "ja": "HTTP認証要求は、セクション3.3.1に指定されているか、3.3.3項に指定されているオプションの証明レス認証が使用されている場合、サーバーが認証されていない場合に反応してはなりません。"
    },
    {
      "indent": 3,
      "text": "The EST client uses the /cacerts response to establish an Explicit Trust Anchor database for subsequent TLS authentication of the EST server. EST clients MUST NOT engage in any other protocol exchange until after the /cacerts response has been accepted and a new TLS session has been established (using TLS certificate-based authentication).",
      "ja": "ESTクライアントは、ESTサーバのその後のTLS認証のための明示的な信頼アンカーデータベースを確立するために、/ cacertsに応答を使用しています。 ESTクライアントは/応答が受け入れられていると、新たなTLSセッションが（TLS証明書ベースの認証を使用して）確立されたのcacerts後まで、他のプロトコル交換に従事してはなりません。"
    },
    {
      "indent": 0,
      "text": "4.1.2. CA Certificates Request",
      "section_title": true,
      "ja": "4.1.2.  CA証明書の要求"
    },
    {
      "indent": 3,
      "text": "EST clients request the EST CA TA database information of the CA (in the form of certificates) with an HTTPS GET message using an operation path of \"/cacerts\". EST clients and servers MUST support the /cacerts function. Clients SHOULD request an up-to-date response before stored information has expired in order to ensure the EST CA TA database is up to date.",
      "ja": "ESTクライアントは「/のcacerts」の動作経路を使用して、HTTPS GETメッセージで（証明書の形で）CAのEST CA TAデータベース情報を要求します。 ESTのクライアントとサーバは/ cacertsに機能をサポートしなければなりません。格納されている情報は、TAデータベースが最新であるESTのCAを確保するために経過する前にクライアントが最新の応答を要求する必要があります。"
    },
    {
      "indent": 3,
      "text": "The EST server SHOULD NOT require client authentication or authorization to reply to this request.",
      "ja": "ESTサーバは、この要求に応答するために、クライアント認証や承認を必要とすべきではありません。"
    },
    {
      "indent": 3,
      "text": "The client MUST authenticate the EST server, as specified in Section 3.3.1 if certificate-based authentication is used or Section 3.3.3 if the optional certificate-less authentication is used, and check the server's authorization as given in Section 3.6, or follow the procedure outlined in Section 4.1.1.",
      "ja": "セクション3.3.1で指定された証明書ベースの認証を使用したり、セクション3.3.3オプションの証明書レス認証が使用されている場合、およびセクション3.6で与えられたとして、サーバーの承認をチェック、または従わされている場合、クライアントは、ESTサーバを認証しなければなりません。 4.1.1項で説明した手順。"
    },
    {
      "indent": 0,
      "text": "4.1.3. CA Certificates Response",
      "section_title": true,
      "ja": "4.1.3.  CA証明書の回答"
    },
    {
      "indent": 3,
      "text": "If successful, the server response MUST have an HTTP 200 response code. Any other response code indicates an error and the client MUST abort the protocol.",
      "ja": "成功した場合、サーバーの応答がHTTP 200応答コードを持たなければなりません。その他の応答コードはエラーを示し、クライアントは、プロトコルを中止しなければなりません。"
    },
    {
      "indent": 3,
      "text": "A successful response MUST be a certs-only CMC Simple PKI Response, as defined in [RFC5272], containing the certificates described in the following paragraph. The HTTP content-type of \"application/pkcs7-mime\" is used. The Simple PKI Response is sent with a Content-Transfer-Encoding of \"base64\" [RFC2045].",
      "ja": "[RFC5272]で定義されるように成功した応答は、以下の段落に記載された証明書を含む、本命のみCMC単純なPKI応答していなければなりません。 「アプリケーション/ PKCS7-パントマイム」のHTTPコンテンツタイプが使用されています。シンプルなPKI応答は「BASE64」[RFC2045]のコンテンツ転送エンコードで送信されます。"
    },
    {
      "indent": 3,
      "text": "The EST server MUST include the current root CA certificate in the response. The EST server MUST include any additional certificates the client would need to build a chain from an EST CA-issued certificate to the current EST CA TA. For example, if the EST CA is a subordinate CA, then all the appropriate subordinate CA certificates necessary to build a chain to the root EST CA are included in the response.",
      "ja": "ESTサーバが応答で現在のルートCA証明書を含まなければなりません。 ESTサーバは、クライアントが現在のEST CA TAにESTのCAが発行した証明書からチェーンを構築する必要があります任意の追加の証明書を含まなければなりません。 EST CAは下位CAである場合、例えば、次にルートEST CAにチェーンを構築するために必要なすべての適切な下位のCA証明書は、応答に含まれています。"
    },
    {
      "indent": 3,
      "text": "The EST server SHOULD include the three \"Root CA Key Update\" certificates OldWithOld, OldWithNew, and NewWithOld in the response chain. These are defined in Section 4.4 of CMP [RFC4210]. The EST client MUST be able to handle these certificates in the response. The EST CA's most recent self-signed certificate (e.g., NewWithNew certificate) is self-signed and has the latest NotAfter date. If the",
      "ja": "ESTサーバが応答チェーンにおける3「ルートCAキー更新」の証明書OldWithOld、OldWithNew、およびNewWithOldを含むべきです。これらは、CMP [RFC4210]のセクション4.4で定義されています。 ESTクライアントは応答して、これらの証明書を処理できなければなりません。 EST CAの最新の自己署名証明書（例えば、NewWithNew証明書）は、自己署名され、最新の[NotAfter]の日付を持っています。もし"
    },
    {
      "indent": 3,
      "text": "EST server does not include these in the response, then after the current EST CA certificate expires, the EST clients will need to be reinitialized with the PKI using the Bootstrap Distribution of CA certificates (Section 4.1.1) method, which involves user interaction.",
      "ja": "ESTサーバは、ESTクライアントがCA証明書（4.1.1）ユーザーの操作を必要とする方法、のブートストラップの配布を使用してPKIを再初期化する必要があります、現在のEST CA証明書の有効期限が切れ、その後の後、応答でこれらが含まれていません。"
    },
    {
      "indent": 3,
      "text": "After out-of-band validation occurs, all the other certificates MUST be validated using normal [RFC5280] certificate path validation (using the most recent CA certificate as the TA) before they can be used to build certificate paths during certificate validation.",
      "ja": "アウトオブバンドの検証が発生した後、他のすべての証明書は、それらが証明書の検証中の証明書パスを構築するために使用することができる前に、（TAとして最新のCA証明書を使用して）通常の[RFC5280]認証パス検証を使用して検証されなければなりません。"
    },
    {
      "indent": 3,
      "text": "The EST client MUST store the extracted EST CA certificate as an Explicit TA database entry for subsequent EST server authentication. The EST client SHOULD disable use of Implicit TA database entries for this EST server now that an Explicit TA database entry is available. If the client disables the Implicit TA database, and if the EST server certificate was verified using an Implicit TA database entry, then the client MUST include the \"Trusted CA Indication\" extension in future TLS sessions [RFC6066]. This indicates to the server that only an EST server certificate authenticatable by the Explicit TA database entry is now acceptable (otherwise, the EST server might continue to use a server certificate that is only verifiable by a now disabled Implicit TA).",
      "ja": "ESTクライアントは、後続のESTサーバー認証の明示的なTAのデータベースエントリとして抽出されたESTのCA証明書を格納しなければなりません。 ESTクライアントは、明示的なTAデータベースエントリが利用可能であることを今、このESTサーバの暗黙のTAデータベースエントリの使用を無効にする必要があります。クライアントは、暗黙TAデータベースを無効にし、ESTサーバ証明書が暗黙TAデータベースのエントリを使用して検証した場合、クライアントは、将来のTLSセッション[RFC6066]で「信頼できるCAの表示」拡張子を含める必要があります。これは、明示的なTAデータベースエントリによってのみESTサーバ証明書の認証可能になりまし受け入れられるサーバー（そうでない場合は、ESTサーバは現在無効になっ暗黙TAによってのみ検証可能なサーバ証明書を使用し続けるかもしれません）に示します。"
    },
    {
      "indent": 3,
      "text": "The EST client SHOULD also make the CA Certificate response information available to the end-entity software for use when validating peer certificates.",
      "ja": "ピア証明書の検証時ESTクライアントはまた、使用のためにエンドエンティティソフトウェアへのCA証明書応答情報を利用できるようにすべきです。"
    },
    {
      "indent": 0,
      "text": "4.2. Client Certificate Request Functions",
      "section_title": true,
      "ja": "4.2. クライアント証明書要求機能"
    },
    {
      "indent": 3,
      "text": "EST clients request a certificate from the EST server with an HTTPS POST using the operation path value of \"/simpleenroll\". EST clients request a renew/rekey of existing certificates with an HTTP POST using the operation path value of \"/simplereenroll\". EST servers MUST support the /simpleenroll and /simplereenroll functions.",
      "ja": "ESTクライアントはHTTPS POSTが「/ simpleenroll」の動作経路値を用いてESTサーバから証明書を要求します。 ESTクライアントは、「/ simplereenroll」の動作パス値を使用してHTTP POSTで既存の証明書の更新/再入力を要求します。 ESTサーバは、/ simpleenrollおよび/ simplereenroll機能をサポートしなければなりません。"
    },
    {
      "indent": 3,
      "text": "It is RECOMMENDED that a client obtain the current CA certificates, as described in Section 4.1, before performing certificate request functions. This ensures that the client will be able to validate the EST server certificate. The client MUST authenticate the EST server as specified in Section 3.3.1 if certificate-based authentication is used or Section 3.3.3 if the optional certificate-less authentication is used. The client MUST verify the authorization of the EST server as specified in Section 3.6.",
      "ja": "証明書要求機能を実行する前に、4.1節で説明したように、クライアントは、現在のCA証明書を取得することをお勧めします。これは、クライアントがESTサーバ証明書を検証できるようになります。セクション3.3.1で指定されたオプションの証明書レス認証が使用されている場合は、証明書ベースの認証を使用するか、3.3.3項れている場合、クライアントは、ESTサーバーを認証する必要があります。セクション3.6で指定されたクライアントは、ESTサーバの許可を確かめなければなりません。"
    },
    {
      "indent": 3,
      "text": "The server MUST authenticate the client as specified in Section 3.3.2 if certificate-based authentication is used or Section 3.3.3 if the optional certificate-less authentication is used. The server MUST verify client authorization as specified in Section 3.7. The EST",
      "ja": "3.3.2項で指定されたオプションの証明書レス認証が使用されている場合は、証明書ベースの認証を使用するか、3.3.3項れている場合、サーバーはクライアントを認証しなければなりません。 3.7節で指定されたサーバーは、クライアントの許可を確かめなければなりません。 EST"
    },
    {
      "indent": 3,
      "text": "server MUST check the tls-unique value, as described in Section 3.5, if one is submitted by the client.",
      "ja": "1がクライアントによって提出された場合は、セクション3.5で説明したように、サーバは、TLS-一意の値をチェックしなければなりません。"
    },
    {
      "indent": 3,
      "text": "The server MAY accept a certificate request for manual authorization checking by an administrator. (Section 4.2.3 describes the use of an HTTP 202 response to the EST client if this occurs.)",
      "ja": "サーバーは、管理者が確認する手動認証のための証明書の要求を受け入れることができます。 （4.2.3項では、これが発生した場合、ESTクライアントにHTTP 202応答の使用を記載しています。）"
    },
    {
      "indent": 0,
      "text": "4.2.1. Simple Enrollment of Clients",
      "section_title": true,
      "ja": "4.2.1. クライアントの簡単な登録"
    },
    {
      "indent": 3,
      "text": "When HTTPS POSTing to /simpleenroll, the client MUST include a Simple PKI Request as specified in CMC [RFC5272], Section 3.1 (i.e., a PKCS #10 Certification Request [RFC2986]).",
      "ja": "simpleenroll /に投稿するときにHTTPSをCMC [RFC5272]、セクション3.1で指定されるように、クライアントは単純なPKI要求を含まなければならない（すなわち、PKCS＃10証明書要求[RFC2986]）。"
    },
    {
      "indent": 3,
      "text": "The Certification Signing Request (CSR) signature provides proof-of-possession of the client-possessed private key to the EST server. If the CSR KeyUsage extension indicates that the private key can be used to generate digital signatures, then the client MUST generate the CSR signature using the private key. If the key can be used to generate digital signatures but the requested CSR KeyUsage extension prohibits generation of digital signatures, then the CSR signature MAY still be generated using the private key, but the key MUST NOT be used for any other signature operations (this is consistent with the recommendations concerning submission of proof-of-possession to an RA or CA as described in [SP-800-57-Part-1]). The use of /fullcmc operations provides access to more advanced proof-of-possession methods that are used when the key pair cannot be used for digital signature generation (see Section 4.3).",
      "ja": "証明書署名要求（CSR）の署名証明-の所持ESTサーバへのクライアント所有する秘密鍵のを提供します。 CSRのKeyUsageエクステンションは、秘密鍵は、デジタル署名を生成するために使用することができることを示している場合、クライアントは秘密鍵を使用してCSRの署名を生成しなければなりません。鍵は、デジタル署名を生成するために使用することができるが、要求されたCSR KeyUsage拡張は、デジタル署名の生成を禁止し、その後（これはCSR署名は依然として秘密鍵を用いて生成することができるが、キーは、他の署名操作のために使用してはいけません場合[SP-800-57-パート1]に記載のようにRAまたはCAへのプルーフ・オブ・所有の提出に関する勧告）と一致します。 / fullcmc操作の使用は、鍵ペアは、デジタル署名の生成に使用することができない場合に使用される、より高度なプルーフ・オブ・所持方法へのアクセスを提供する（セクション4.3を参照）。"
    },
    {
      "indent": 3,
      "text": "The HTTP content-type of \"application/pkcs10\" is used here. The format of the message is as specified in [RFC5967] with a Content-Transfer-Encoding of \"base64\" [RFC2045].",
      "ja": "「アプリケーション/ PKCS10」のHTTPコンテンツタイプは、ここで使用されています。 「BASE64」[RFC2045]のコンテンツ転送エンコードと[RFC5967]で指定されたメッセージのフォーマットです。"
    },
    {
      "indent": 3,
      "text": "If the EST client authenticated using a previously installed certificate issued by a third-party CA (see Section 2.2.1), the client MAY include the ChangeSubjectName attribute, as defined in [RFC6402], in the CSR to request that the subjectName and SubjectAltName be changed in the new certificate.",
      "ja": "ESTクライアントは、サードパーティのCAによって発行された以前にインストールされた証明書を使用して認証した場合CSRに要求するために、[RFC6402]で定義されているように、クライアントは、ChangeSubjectName属性を含んでいてもよい（2.2.1項を参照）はサブジェクト名とのSubjectAltName新しい証明書に変更すること。"
    },
    {
      "indent": 3,
      "text": "The EST client MAY request additional certificates even when using an existing certificate in the TLS client authentication. For example, the client can use an existing certificate for TLS client authentication when requesting a certificate that cannot be used for TLS client authentication.",
      "ja": "TLSクライアント認証で既存の証明書を使用した場合でも、ESTクライアントは、追加の証明書を要求することができます。 TLSクライアント認証に使用することができない証明書を要求するときたとえば、クライアントがTLSクライアント認証のための既存の証明書を使用することができます。"
    },
    {
      "indent": 0,
      "text": "4.2.2. Simple Re-enrollment of Clients",
      "section_title": true,
      "ja": "4.2.2. クライアントのシンプルな再登録"
    },
    {
      "indent": 3,
      "text": "EST clients renew/rekey certificates with an HTTPS POST using the operation path value of \"/simplereenroll\".",
      "ja": "ESTクライアントは/更新「/ simplereenroll」の動作パス値を使用してHTTPS POSTでの証明書のリキー。"
    },
    {
      "indent": 3,
      "text": "A certificate request employs the same format as the \"simpleenroll\" request, using the same HTTP content-type. The request Subject field and SubjectAltName extension MUST be identical to the corresponding fields in the certificate being renewed/rekeyed. The ChangeSubjectName attribute, as defined in [RFC6402], MAY be included in the CSR to request that these fields be changed in the new certificate.",
      "ja": "証明書要求は、同一のHTTPコンテンツタイプを使用して、「simpleenroll」要求と同じ形式を採用しています。要求件名フィールドとsubjectAltName拡張は、証明書内の対応するフィールドに更新される/リキーと同一でなければなりません。 ChangeSubjectName属性は、[RFC6402]で定義されるように、これらのフィールドは、新しい証明書に変更することを要求するために、CSRに含まれるかもしれません。"
    },
    {
      "indent": 3,
      "text": "If the Subject Public Key Info in the certification request is the same as the current client certificate, then the EST server renews the client certificate. If the public key information in the certification request is different than the current client certificate, then the EST server rekeys the client certificate.",
      "ja": "認証要求でサブジェクト公開鍵情報は、現在のクライアント証明書と同じである場合には、ESTサーバは、クライアント証明書を更新します。証明書要求内の公開鍵の情報は、現在のクライアント証明書と異なる場合には、ESTサーバは、クライアント証明書をキー更新します。"
    },
    {
      "indent": 0,
      "text": "4.2.3. Simple Enroll and Re-enroll Response",
      "section_title": true,
      "ja": "4.2.3. シンプルで登録し、再登録応答"
    },
    {
      "indent": 3,
      "text": "If the enrollment is successful, the server response MUST contain an HTTP 200 response code with a content-type of \"application/pkcs7-mime\".",
      "ja": "登録が成功した場合、サーバーの応答は、「アプリケーション/ PKCS7-パントマイム」のコンテンツタイプとHTTP 200応答コードを含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "A successful response MUST be a certs-only CMC Simple PKI Response, as defined in [RFC5272], containing only the certificate that was issued. The HTTP content-type of \"application/pkcs7-mime\" with an smime-type parameter \"certs-only\" is used, as specified in [RFC5273].",
      "ja": "発行された証明書のみを含む、[RFC5272]で定義されている正常な応答は、本命のみCMCシンプルなPKI応答でなければなりません。 [RFC5273]で指定されるようにHTTP SMIME型パラメータを有する「アプリケーション/ PKCS7-MIME」のコンテンツ・タイプ「本命のみ」は、使用されています。"
    },
    {
      "indent": 3,
      "text": "The server MUST answer with a suitable 4xx or 5xx HTTP [RFC2616] error code when a problem occurs. A Simple PKI Response with an HTTP content-type of \"application/pkcs7-mime\" (see Section 4.3.2) MAY be included in the response data to convey an error response. If the content-type is not set, the response data MUST be a plaintext human-readable error message containing explanatory information describing why the request was rejected (for example, indicating that CSR attributes are incomplete).",
      "ja": "問題が発生した場合、サーバは、適切な4XXまたは5xxのHTTP [RFC2616]はエラーコードで応答しなければなりません。 「アプリケーション/ PKCS7-MIME」のHTTPコンテンツタイプ（セクション4.3.2を参照）を使用した単純なPKIの応答エラー応答を搬送する応答データに含まれるかもしれません。コンテンツ・タイプが設定されていない場合、応答データは、（例えば、CSR属性が不完全であることを示す）要求が拒否された理由を説明する説明情報を含む平文人間が読めるエラーメッセージでなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the server responds with an HTTP [RFC2616] 202, this indicates that the request has been accepted for processing but that a response is not yet available. The server MUST include a Retry-After header as defined for HTTP 503 responses. The server also MAY include informative human-readable content. The client MUST wait at least the specified \"retry-after\" time before repeating the same request. The client repeats the initial enrollment request after the appropriate \"retry-after\" interval has expired. The client SHOULD log or inform the end-user of this event. The server is responsible for maintaining all states necessary to recognize and handle retry operations as the client is stateless in this regard; it simply sends the same request repeatedly until it receives a different response code. All other return codes are handled as specified in HTTP [RFC2616].",
      "ja": "サーバは、HTTP [RFC2616] 202で応答した場合、この要求は処理のために受理されたことを示しているが、応答はまだ利用できないこと。 HTTP 503応答について定義した通りサーバが再試行後、ヘッダを含まなければなりません。また、サーバは、有益な人間が読めるコンテンツを含んでいてもよいです。クライアントは同じ要求を繰り返す前に、少なくとも指定された「再試行-後に」時間を待たなければなりません。クライアントは、適切な「リトライ-後の」間隔が経過した後の初期登録要求を繰り返します。クライアントは、ログインするか、このイベントのエンドユーザーに通知する必要があります。サーバが認識し、クライアントはこの点でステートレスであるなどの操作を再試行処理するために必要なすべての状態を維持する責任があります。それは別の応答コードを受信するまで、それは単に、繰り返し同じ要求を送信します。 HTTP [RFC2616]で指定されるように、他のすべての戻りコードは処理されます。"
    },
    {
      "indent": 3,
      "text": "If the client closes the TLS connections while waiting for the Retry-After time to expire, then the client initiates a new TLS connection and performs all applicable security checks. If the client has already generated a CSR that includes linking identity and POP information (Section 3.5), then the CSR will need to be recreated to incorporate the tls-unique from the new, redirected session. Note: the key pair need not be regenerated. These are processing and interface burdens on the client. EST server administrators are advised to take this into consideration.",
      "ja": "期限切れにリトライした後の時間を待っている間に、クライアントはTLS接続を閉じた場合、クライアントは新しいTLS接続を開始し、該当するすべてのセキュリティチェックを実行します。クライアントがすでにアイデンティティおよびPOP情報（3.5節）を結ぶ含んでCSRを生成した場合、CSRは、TLS-独自の新しい、リダイレクトセッションからを組み込むために再作成する必要があります。注意：鍵ペアを再生成する必要はありません。これらは、クライアント上での処理とのインタフェース負担です。 ESTサーバの管理者は、これを考慮するすることをお勧めします。"
    },
    {
      "indent": 3,
      "text": "The EST client MAY also make the certificate response, and associated private key, available to end-entity software for use as an end-entity certificate.",
      "ja": "ESTクライアントは、エンドエンティティ証明書として使用するためのソフトウェア・エンティティ端に利用できる証明書の応答、および関連する秘密鍵を、行うことができます。"
    },
    {
      "indent": 0,
      "text": "4.3. Full CMC",
      "section_title": true,
      "ja": "4.3. 全CMC"
    },
    {
      "indent": 3,
      "text": "An EST client can request a certificate from an EST server with an HTTPS POST using the operation path value of \"/fullcmc\". Support for the /fullcmc function is OPTIONAL for both clients and servers.",
      "ja": "ESTクライアントは、「/ fullcmc」の動作パス値を使用してHTTPS POSTとESTサーバーから証明書を要求することができます。 / fullcmc機能のサポートは、クライアントとサーバの両方のためのオプションです。"
    },
    {
      "indent": 0,
      "text": "4.3.1. Full CMC Request",
      "section_title": true,
      "ja": "4.3.1. 全CMC要求"
    },
    {
      "indent": 3,
      "text": "If the HTTP POST to /fullcmc is not a valid Full PKI Request, the server MUST reject the message. The HTTP content-type used is \"application/pkcs7-mime\" with an smime-type parameter \"CMC-request\", as specified in [RFC5273]. The body of the message is the binary value of the encoding of the PKI Request with a Content-Transfer-Encoding of \"base64\" [RFC2045].",
      "ja": "/ fullcmcへのHTTP POSTが有効な全PKI要求されていない場合、サーバーはメッセージを拒絶しなければなりません。 [RFC5273]で指定されるように使用されるHTTPコンテンツタイプは、SMIME型パラメータ \"CMC-要求\" と \"アプリケーション/ PKCS7-MIME\" です。メッセージの本文は、「BASE64」[RFC2045]のコンテンツ転送エンコードとPKIリクエストのエンコーディングのバイナリ値です。"
    },
    {
      "indent": 0,
      "text": "4.3.2. Full CMC Response",
      "section_title": true,
      "ja": "4.3.2. 全CMCの対応"
    },
    {
      "indent": 3,
      "text": "If the enrollment is successful, the server response MUST include an HTTP 200 response code with a content-type of \"application/pkcs7-mime\" as specified in [RFC5273]. The response data includes either the Simple PKI Response with an smime-type parameter of \"certs-only\" or the Full PKI Response with an smime-type parameter \"CMC-response\", as specified in Section 3.2.1 of [RFC5751]. The body of the message is the binary value of the encoding of the PKI Response with a Content-Transfer-Encoding of \"base64\" [RFC2045].",
      "ja": "登録が成功した場合、サーバ応答は[RFC5273]で指定されるように、「アプリケーション/ PKCS7-MIME」のコンテンツ・タイプとHTTP 200応答コードを含まなければなりません。 [RFC5751]のセクション3.2.1で指定された応答データは、「本命のみ」のSMIME型パラメータまたはSMIME型パラメータ「CMC-応答」との完全なPKI応答を有する単純なPKI応答のいずれかを含みます。メッセージの本文は、「BASE64」[RFC2045]のコンテンツ転送エンコードとPKI応答のエンコーディングのバイナリ値です。"
    },
    {
      "indent": 3,
      "text": "When rejecting a request, the server MUST specify either an HTTP 4xx error or an HTTP 5xx error. A CMC response with the content-type of \"application/pkcs7-mime\" MUST be included in the response data for any CMC error response.",
      "ja": "要求を拒否すると、サーバーは、HTTPの4xxエラーまたはHTTP 5xxのエラーのいずれかを指定しなければなりません。 「アプリケーション/ PKCS7-MIME」のコンテンツタイプを有するCMC応答は、任意のCMCエラー応答の応答データに含まれなければなりません。"
    },
    {
      "indent": 3,
      "text": "All other return codes are handled as specified in Section 4.2.3 or HTTP [RFC2616]. For example, a client interprets an HTTP 404 or 501 response to indicate that this service is not implemented.",
      "ja": "他のすべての戻りコードは、セクション4.2.3、またはHTTP [RFC2616]で指定されるように処理されます。例えば、クライアントは、このサービスが実装されていないことを示すために、HTTP 404または501応答を解釈します。"
    },
    {
      "indent": 0,
      "text": "4.4. Server-Side Key Generation",
      "section_title": true,
      "ja": "4.4. サーバー側のキー生成"
    },
    {
      "indent": 3,
      "text": "An EST client may request a private key and associated certificate from an EST server using an HTTPS POST with an operation path value of \"/serverkeygen\". Support for the /serverkeygen function is OPTIONAL.",
      "ja": "ESTクライアントは、「/ serverkeygen」の動作パス値でHTTPS POSTを使用して、ESTサーバから秘密鍵および関連する証明書を要求することができます。 / serverkeygen機能のサポートはオプションです。"
    },
    {
      "indent": 3,
      "text": "A client MUST authenticate an EST server, as specified in Section 3.3.1 if certificate-based authentication is used or Section 3.3.3 if the optional certificate-less authentication is used, and check the server's authorization as given in Section 3.6.",
      "ja": "クライアントは、セクション3.3.1で指定された証明書ベースの認証が使用されている場合、ESTサーバを認証したり、セクション3.3.3オプションの証明書レス認証が使用されている場合、およびセクション3.6で与えられたように、サーバーの認証をチェックしなければなりません。"
    },
    {
      "indent": 3,
      "text": "The EST server MUST authenticate the client, as specified in Section 3.3.2 if certificate-based authenticated is used or Section 3.3.3 if the optional certificate-less authentication is used, and check the client's authorization as given in Section 3.7. The EST server applies whatever authorization or logic it chooses to determine if the private key and certificate should be provided.",
      "ja": "証明書ベースの認証された場合は、セクション3.3.2に指定されているESTサーバは、クライアントを認証しなければならない使用または3.3.3オプションの証明書レス認証が使用されている場合、および3.7節で与えられたように、クライアントの許可をチェックしています。 ESTサーバは、秘密鍵と証明書を提供する必要があるかどうかを判断するために選択したものは何でも承認またはロジック適用されます。"
    },
    {
      "indent": 3,
      "text": "Cipher suites that have a NULL confidentiality algorithm MUST NOT be used as they will disclose the contents of an unprotected private key.",
      "ja": "彼らは保護されていない秘密鍵の内容を開示するようNULL機密性アルゴリズムを持っている暗号スイートを使用してはいけません。"
    },
    {
      "indent": 3,
      "text": "Proper random number and key generation [RFC4086] is a server implementation responsibility, and server archiving of generated keys is determined by CA policy. The key pair and certificate are transferred over the TLS session. The cipher suite used to return the private key and certificate MUST offer confidentiality commensurate with the private key being delivered to the client.",
      "ja": "適切な乱数と鍵の生成[RFC4086]は、サーバの実装の責任であり、かつ、生成されたキーのサーバーアーカイブは、CAのポリシーによって決定されます。鍵ペアと証明書は、TLSセッションを介して転送されます。秘密鍵と証明書を返すために使用される暗号スイートは、クライアントに配信された秘密鍵に見合った機密性を提供しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The EST client MAY request additional certificates even when using an existing certificate in the TLS client authentication. For example, the client can use an existing certificate for TLS client authentication when requesting a certificate that cannot be used for TLS client authentication.",
      "ja": "TLSクライアント認証で既存の証明書を使用した場合でも、ESTクライアントは、追加の証明書を要求することができます。 TLSクライアント認証に使用することができない証明書を要求するときたとえば、クライアントがTLSクライアント認証のための既存の証明書を使用することができます。"
    },
    {
      "indent": 0,
      "text": "4.4.1. Server-Side Key Generation Request",
      "section_title": true,
      "ja": "4.4.1. サーバー側の鍵生成要求"
    },
    {
      "indent": 3,
      "text": "The certificate request is HTTPS POSTed and is the same format as for the \"/simpleenroll\" and \"/simplereenroll\" path extensions with the same content-type and transfer encoding.",
      "ja": "証明書要求は、HTTPS転記され、「/ simpleenroll」と同じコンテンツタイプと転送符号化と「/ simplereenroll」パス拡張のと同じフォーマットです。"
    },
    {
      "indent": 3,
      "text": "In all respects, the server SHOULD treat the CSR as it would any enroll or re-enroll CSR; the only distinction here is that the server MUST ignore the public key values and signature in the CSR. These are included in the request only to allow re-use of existing codebases for generating and parsing such requests.",
      "ja": "それがCSRを任意の登録または再登録と同じようにすべての点では、サーバーは、CSRを扱うべきです。ここでの唯一の違いは、サーバーがCSRにおける公開鍵値と署名を無視しなければならないということです。これらは唯一のそのような要求を生成し、解析するために、既存のコードベースの再利用を許可する要求に含まれています。"
    },
    {
      "indent": 3,
      "text": "If the client desires to receive the private key with encryption that exists outside of and in addition to that of the TLS transport used by EST or if server policy requires that the key be delivered in such a form, the client MUST include an attribute in the CSR indicating the encryption key to be used. Both symmetric and asymmetric encryption are supported as described in the following subsections. The client MUST also include an SMIMECapabilities attribute ([RFC2633], Section 2.5) in the CSR to indicate the key encipherment algorithms the client is willing to use.",
      "ja": "クライアントは、外とESTで使用されるTLS輸送のそれに加えて存在しているか、サーバのポリシーはキーがそのような形で配信されることを必要とする場合、クライアントが属性を含まなければならない暗号と秘密鍵を受けようとする場合使用する暗号化キーを示しているCSR。以下のサブセクションで説明するように、対称および非対称暗号化の両方がサポートされています。クライアントは、クライアントが使用しても構わないと思っている鍵暗号アルゴリズムを示すCSRにおけるSMIMEケーパビリティの属性（[RFC2633]、セクション2.5）を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "It is strongly RECOMMENDED that the clients request that the returned private key be afforded the additional security of the Cryptographic Message Syntax (CMS) EnvelopedData in addition to the TLS-provided security to protect against unauthorized disclosure.",
      "ja": "強く、クライアントが返された秘密鍵が不正な開示から保護するためにTLSが提供するセキュリティに加えて、暗号メッセージ構文（CMS）のEnvelopedDataの追加のセキュリティを与えすることを要求することが推奨されます。"
    },
    {
      "indent": 0,
      "text": "4.4.1.1. Requests for Symmetric Key Encryption of the Private Key",
      "section_title": true,
      "ja": "4.4.1.1。秘密鍵の共通鍵暗号化のための要求"
    },
    {
      "indent": 3,
      "text": "To specify a symmetric encryption key to be used to encrypt the server-generated private key, the client MUST include a DecryptKeyIdentifier attribute (as defined in Section 2.2.5 of [RFC4108]) specifying the identifier of the secret key to be used by the server to encrypt the private key. While that attribute was originally designated for specifying a firmware encryption key, it exactly mirrors the requirements for specifying a secret key to encrypt a private key. If the server does not have a secret key matching the identifier specified by the client, the request MUST be terminated and an error returned to the client. Distribution of the key specified by the DecryptKeyIdentifier to the key generator and the client is outside the scope of this document.",
      "ja": "サーバが生成する秘密鍵を暗号化するために使用される対称暗号化キーを指定するには、クライアントがで使用する秘密鍵の識別子を指定する（[RFC4108]のセクション2.2.5で定義されている）DecryptKeyIdentifier属性を含まなければなりません秘密鍵を暗号化するためのサーバー。その属性は、もともとファームウェアの暗号化キーを指定するために指定されましたが、それは正確に秘密鍵を暗号化する秘密鍵を指定するための要件を反映しています。サーバがクライアントによって指定された識別子に一致する秘密鍵を持っていない場合、要求は終了し、エラーがクライアントに返さなければなりません。キージェネレータと、クライアントにDecryptKeyIdentifierで指定されたキーの配布は、この文書の範囲外です。"
    },
    {
      "indent": 0,
      "text": "4.4.1.2. Requests for Asymmetric Encryption of the Private Key",
      "section_title": true,
      "ja": "4.4.1.2。プライベートキーの非対称暗号化の要求"
    },
    {
      "indent": 3,
      "text": "To specify an asymmetric encryption key to be used to encrypt the server-generated private key, the client MUST include an AsymmetricDecryptKeyIdentifier attribute. The AsymmetricDecryptKeyIdentifier attribute is defined as:",
      "ja": "サーバが生成する秘密鍵を暗号化するために使用される非対称暗号化キーを指定するには、クライアントはAsymmetricDecryptKeyIdentifier属性を含まなければなりません。 AsymmetricDecryptKeyIdentifier属性は次のように定義されます"
    },
    {
      "indent": 3,
      "text": "id-aa-asymmDecryptKeyID OBJECT IDENTIFIER ::= {\n    id-aa 54 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The asymmetric-decrypt-key-identifier attribute values have ASN.1 type AsymmetricDecryptKeyIdentifier (where ASN.1 is defined in [X.680])::",
      "ja": "非対称復号鍵識別子値（ASN.1は[X.680]で定義されている）ASN.1型AsymmetricDecryptKeyIdentifierを有する属性::"
    },
    {
      "indent": 6,
      "text": "AsymmetricDecryptKeyIdentifier ::= OCTET STRING",
      "raw": true
    },
    {
      "indent": 3,
      "text": "If the server does not have a public key matching the identifier specified by the client, the request MUST be terminated and an error returned to the client. Distribution of the key specified by the AsymmetricDecryptKeyIdentifier to the key generator and the client is outside the scope of this document. If the key identified is bound to an X.509 certificate, then the key MUST either explicitly support keyTransport or keyAgreement or its use MUST be unrestricted.",
      "ja": "サーバがクライアントによって指定された識別子に一致する公開鍵を持っていない場合、要求は終了し、エラーがクライアントに返さなければなりません。キージェネレータと、クライアントにAsymmetricDecryptKeyIdentifierで指定されたキーの配布は、この文書の範囲外です。識別キーはX.509証明書にバインドされている場合は、キーが明示的にkeyTransportたりするKeyAgreementをサポートしなければならないか、その使用は無制限でなければなりません。"
    },
    {
      "indent": 0,
      "text": "4.4.2. Server-Side Key Generation Response",
      "section_title": true,
      "ja": "4.4.2. サーバー側の鍵生成応答"
    },
    {
      "indent": 3,
      "text": "If the request is successful, the server response MUST have an HTTP 200 response code with a content-type of \"multipart/mixed\" consisting of two parts: one part is the private key data and the other part is the certificate data.",
      "ja": "リクエストが成功した場合、サーバ応答は、2つの部分からなる「混合/マルチパート」のコンテンツタイプとHTTP 200応答コードを持つ必要があります一つの部分は、秘密鍵データであり、他の部分は、証明書データです。"
    },
    {
      "indent": 3,
      "text": "The format in which the private key data part is returned is dependent on whether the private key is being returned with additional encryption on top of that provided by TLS.",
      "ja": "秘密鍵データ部分が返されるフォーマットは、秘密鍵は、TLSによって提供されるものの上に追加の暗号化に戻されているかどうかに依存しています。"
    },
    {
      "indent": 3,
      "text": "If additional encryption is not being employed, the private key data MUST be placed in an \"application/pkcs8\". An \"application/pkcs8\" part consists of the base64-encoded DER-encoded [X.690] PrivateKeyInfo with a Content-Transfer-Encoding of \"base64\" [RFC2045].",
      "ja": "追加の暗号化が使用されていない場合は、秘密鍵データは、「アプリケーション/ PKCS8」に置かなければなりません。 「アプリケーション/ PKCS8」部「はBASE64」のコンテンツ転送エンコードとBase64でエンコードされたDER符号化された[X.690] PrivateKeyInfoで[RFC2045]から成ります。"
    },
    {
      "indent": 3,
      "text": "If additional encryption is being employed, the private key is placed inside of a CMS SignedData. The SignedData is signed by the party that generated the private key, which may or may not be the EST server or the EST CA. The SignedData is further protected by placing it inside of a CMS EnvelopedData, as described in Section 4 of [RFC5958]. The following list shows how the EncryptedData is used, depending on the type of protection key specified by the client.",
      "ja": "追加の暗号化が使用されている場合は、秘密鍵は、CMSのSignedDataの内側に配置されます。 SignedDataは、またはESTサーバまたはEST CA.であってもなくてもよい、秘密鍵を生成した当事者によって署名されています[RFC5958]のセクション4で説明したようにのSignedDataはさらに、CMS EnvelopedDataの内部に配置することによって保護されています。以下のリストははEncryptedDataがクライアントによって指定された保護キーの種類に応じて、使用されている方法を示しています。"
    },
    {
      "indent": 3,
      "text": "o If the client specified a symmetric encryption key to protect the server-generated private key, the EnvelopedData content is encrypted using the secret key identified in the request. The EnvelopedData RecipientInfo field MUST indicate the key-encryption kekri key management technique. The values are as follows: version is set to 4, key-encryption key identifier (kekid) is set to the value of the DecryptKeyIdentifier from Section 4.4.1.1; keyEncryptionAlgorithm is set to one of the key wrap algorithms that the client included in the SMIMECapabilities accompanying the request; and encryptedKey is the encrypted key.",
      "ja": "クライアントは、サーバが生成した秘密鍵を保護するために、対称暗号化キーを指定した場合は、O、EnvelopedDataのコンテンツは、要求の中で特定された秘密鍵を使って暗号化されています。 EnvelopedDataののRecipientInfoフィールドは、キー暗号kekri鍵管理技術を示さなければなりません。次のような値は、次のとおりバージョンが4に設定され、鍵暗号鍵識別子（kekid）は、セクション4.4.1.1からDecryptKeyIdentifierの値に設定されています。 keyEncryptionAlgorithmは、クライアントが要求を伴うSMIMEケーパビリティに含まれる鍵ラップアルゴリズムのいずれかに設定されています。そしてEncryptedKeyには、暗号化キーです。"
    },
    {
      "indent": 3,
      "text": "o If the client specified an asymmetric encryption key suitable for key transport operations to protect the server-generated private key, the EnvelopedData content is encrypted using a randomly generated symmetric encryption key. The cryptographic strength of the symmetric encryption key SHOULD be equivalent to the client-specified asymmetric key. The EnvelopedData RecipientInfo field MUST indicate the KeyTransRecipientInfo (ktri) key management technique. In KeyTransRecipientInfo, the RecipientIdentifier (rid) is either the subjectKeyIdentifier copied from the attribute defined in Section 4.4.1.2 or the server determines an associated issuerAndSerialNumber from the attribute; version is derived from the choice of rid [RFC5652], keyEncryptionAlgorithm is set to one of the key wrap algorithms that the client included in the SMIMECapabilities accompanying the request, and encryptedKey is the encrypted key.",
      "ja": "クライアントは、サーバが生成した秘密鍵を保護するための鍵の輸送業務に適した非対称暗号化キーを指定した場合は、O、EnvelopedDataのコンテンツは、ランダムに生成された対称暗号化キーを用いて暗号化されます。対称暗号鍵の暗号強度は、クライアントが指定した非対称鍵と同等であるべきです。 EnvelopedDataののRecipientInfoフィールドはKeyTransRecipientInfo（ktri）鍵管理技術を示さなければなりません。 KeyTransRecipientInfoにおいて、（RID）RecipientIdentifierのいずれかのセクション4.4.1.2で定義された属性からコピーsubjectKeyIdentifierであるか、またはサーバが属性から関連issuerAndSerialNumberを決定します。バージョンはRID [RFC5652]の選択に由来し、keyEncryptionAlgorithmは、クライアントが要求を伴うSMIMEケーパビリティに含まれる鍵ラップアルゴリズムのいずれかに設定し、EncryptedKeyには、暗号化キーです。"
    },
    {
      "indent": 3,
      "text": "o If the client specified an asymmetric encryption key suitable for key agreement operations to protect the server-generated private key, the EnvelopedData content is encrypted using a randomly generated symmetric encryption key. The cryptographic strength of the symmetric encryption key SHOULD be equivalent to the client-specified asymmetric key. The EnvelopedData RecipientInfo field MUST indicate the KeyAgreeRecipientInfo (kari) key management technique. In the KeyAgreeRecipientInfo type, version, originator, and user keying material (ukm) are as in [RFC5652], and keyEncryptionAlgorithm is set to one of the key wrap algorithms that the client included in the SMIMECapabilities accompanying the request. The recipient's key identifier is either copied from the attribute defined in Section 4.4.1.2 to subjectKeyIdentifier or the server determines an IssuerAndSerialNumber that corresponds to the value provided in the attribute.",
      "ja": "クライアントは、サーバが生成した秘密鍵を保護するために鍵合意の操作に適した非対称暗号化キーを指定した場合は、O、EnvelopedDataのコンテンツは、ランダムに生成された対称暗号化キーを用いて暗号化されます。対称暗号鍵の暗号強度は、クライアントが指定した非対称鍵と同等であるべきです。 EnvelopedDataののRecipientInfoフィールドはKeyAgreeRecipientInfo（がkari）鍵管理技術を示さなければなりません。 KeyAgreeRecipientInfoタイプ、バージョン、発信者、およびユーザ鍵材料（UKM）に[RFC5652]のようであり、そしてkeyEncryptionAlgorithmは、クライアントが要求を伴うSMIMEケーパビリティに含まれるキーラップアルゴリズムのいずれかに設定されています。受信者の鍵識別子がsubjectKeyIdentifierするセクション4.4.1.2で定義された属性からコピーされるか、またはサーバが属性で提供される値に対応IssuerAndSerialNumberを決定します。"
    },
    {
      "indent": 3,
      "text": "In all three additional encryption cases, the EnvelopedData is returned in the response as an \"application/pkcs7-mime\" part with an smime-type parameter of \"server-generated-key\" and a Content-Transfer-Encoding of \"base64\".",
      "ja": "すべての3つの追加の暗号化のケースでは、EnvelopedDataのは、「サーバー生成キー」と「BASE64」のコンテンツ転送エンコードのSMIME型パラメータを持つ「アプリケーション/ PKCS7-パントマイム」一部として応答で返されます。"
    },
    {
      "indent": 3,
      "text": "The certificate data part is an \"application/pkcs7-mime\" and exactly matches the certificate response to /simpleenroll.",
      "ja": "証明書データの一部は「アプリケーション/ PKCS7-パントマイム」であると正確に/ simpleenrollに証明書応答と一致します。"
    },
    {
      "indent": 3,
      "text": "When rejecting a request, the server MUST specify either an HTTP 4xx error or an HTTP 5xx error. If the content-type is not set, the response data MUST be a plaintext human-readable error message.",
      "ja": "要求を拒否すると、サーバーは、HTTPの4xxエラーまたはHTTP 5xxのエラーのいずれかを指定しなければなりません。コンテンツ・タイプが設定されていない場合、応答データは、平文人間が読めるエラーメッセージでなければなりません。"
    },
    {
      "indent": 0,
      "text": "4.5. CSR Attributes",
      "section_title": true,
      "ja": "4.5.  CSRの属性"
    },
    {
      "indent": 3,
      "text": "CA policy may allow inclusion of client-provided attributes in certificates that it issues, and some of these attributes may describe information that is not available to the CA. In addition, a CA may desire to certify a certain type of public key and a client may not have a priori knowledge of that fact. Therefore, clients SHOULD request a list of expected attributes that are required, or desired, by the CA in an enrollment request or if dictated by local policy.",
      "ja": "CAのポリシーは、それが発行する証明書には、クライアントが提供する属性を含めることを許すこと、およびこれらの属性のいくつかは、CAに入手できない情報を記述することができますまた、CAは、公開鍵とクライアントの特定のタイプは、その事実の事前の知識を持っていない可能性を証明することを望むかもしれません。そのため、クライアントは、ローカルポリシーによって決定される場合に必要な、または望ましい、CAによって登録要求や期待されている属性のリストを要求する必要があります。"
    },
    {
      "indent": 3,
      "text": "The EST server SHOULD NOT require client authentication or authorization to reply to this request.",
      "ja": "ESTサーバは、この要求に応答するために、クライアント認証や承認を必要とすべきではありません。"
    },
    {
      "indent": 3,
      "text": "Requesting CSR attributes is optional, but clients are advised that CAs may refuse enrollment requests that are not encoded according to the CA's policy.",
      "ja": "CSRの属性を要求すると、オプションですが、クライアントは、CAはCAのポリシーに従って符号化されていない登録要求を拒否することができることをお勧めします。"
    },
    {
      "indent": 0,
      "text": "4.5.1. CSR Attributes Request",
      "section_title": true,
      "ja": "4.5.1.  CSRは、リクエスト属性"
    },
    {
      "indent": 3,
      "text": "The EST client requests a list of CA-desired CSR attributes from the CA by sending an HTTPS GET message to the EST server with an operations path of \"/csrattrs\".",
      "ja": "ESTクライアントは、CA-希望CSR「/ csrattrs」の運用パスとESTサーバーにHTTPS GETメッセージを送信することにより、CAからの属性のリストを要求します。"
    },
    {
      "indent": 0,
      "text": "4.5.2. CSR Attributes Response",
      "section_title": true,
      "ja": "4.5.2.  CSRは、レスポンスの属性"
    },
    {
      "indent": 3,
      "text": "If locally configured policy for an authenticated EST client indicates a CSR Attributes Response is to be provided, the server response MUST include an HTTP 200 response code. An HTTP response code of 204 or 404 indicates that a CSR Attributes Response is not available. Regardless of the response code, the EST server and CA MAY reject any subsequent enrollment requests for any reason, e.g., incomplete CSR attributes in the request.",
      "ja": "認証されたESTクライアントのローカルに設定されたポリシーは、CSRはレスポンスが提供される属性を示している場合、サーバーの応答がHTTP 200応答コードを含まなければなりません。 204または404のHTTP応答コードは、CSR応答属性利用可能でないことを示しています。かかわらず、応答コードの、ESTサーバとCAが何らかの理由でそれ以降の登録要求を拒否するかもしれ、例えば、不完全なCSRは、要求の属性。"
    },
    {
      "indent": 3,
      "text": "Responses to attribute request messages MUST be encoded as the content-type of \"application/csrattrs\" with a Content-Transfer-Encoding of \"base64\" [RFC2045]. The syntax for application/csrattrs body is as follows:",
      "ja": "要求メッセージ属性に対する応答は「BASE64」[RFC2045]のコンテンツ転送エンコードと「アプリケーション/ csrattrs」のコンテンツタイプとして符号化されなければなりません。次のようにアプリケーション/ csrattrs本体の構文は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "CsrAttrs ::= SEQUENCE SIZE (0..MAX) OF AttrOrOID",
      "raw": true
    },
    {
      "indent": 3,
      "text": "AttrOrOID ::= CHOICE (oid OBJECT IDENTIFIER, attribute Attribute }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Attribute { ATTRIBUTE:IOSet } ::= SEQUENCE {\n     type   ATTRIBUTE.&id({IOSet}),\n     values SET SIZE(1..MAX) OF ATTRIBUTE.&Type({IOSet}{@type}) }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "An EST server includes zero or more OIDs or attributes [RFC2986] that it requests the client to use in the certification request. The client MUST ignore any OID or attribute it does not recognize. When the server encodes CSR Attributes as an empty SEQUENCE, it means that the server has no specific additional information it desires in a client certification request (this is functionally equivalent to an HTTP response code of 204 or 404).",
      "ja": "ESTサーバは、認証要求で使用するようにクライアントを要求していること、ゼロ以上のOIDまたは属性[RFC2986]を含んでいます。クライアントは、任意のOIDを無視するか、それが認識しない属性をしなければなりません。サーバは、CSRが空のシーケンスなどの属性コードする場合、それはサーバがクライアント証明書要求（これは、204または404のHTTP応答コードと機能的に同等である）に望む特別な付加的な情報を持っていないことを意味します。"
    },
    {
      "indent": 3,
      "text": "If the CA requires a particular crypto system or use of a particular signature scheme (e.g., certification of a public key based on a certain elliptic curve, or signing using a certain hash algorithm) it MUST provide that information in the CSR Attribute Response. If an EST server requires the linking of identity and POP information (see Section 3.5), it MUST include the challengePassword OID in the CSR Attributes Response.",
      "ja": "CAは、特定の暗号システムまたは特定の署名方式の使用を必要とする場合（例えば、特定の楕円曲線に基づいて、公開鍵の証明書は、または特定のハッシュアルゴリズムを使用して署名する）は、応答属性CSRにその情報を提供しなければなりません。 ESTサーバはアイデンティティとPOP情報（3.5節を参照）のリンクを必要とする場合、それがCSRでchallengePassword OIDは、レスポンスの属性を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "The structure of the CSR Attributes Response SHOULD, to the greatest extent possible, reflect the structure of the CSR it is requesting. Requests to use a particular signature scheme (e.g. using a particular hash function) are represented as an OID to be reflected in the SignatureAlgorithm of the CSR. Requests to use a particular crypto system (e.g., certification of a public key based on a certain elliptic curve) are represented as an attribute, to be reflected as the AlgorithmIdentifier of the SubjectPublicKeyInfo, with a type indicating the algorithm and the values indicating the particular parameters specific to the algorithm. Requests for descriptive information from the client are made by an attribute, to be represented as Attributes of the CSR, with a type indicating the [RFC2985] extensionRequest and the values indicating the particular attributes desired to be included in the resulting certificate's extensions.",
      "ja": "CSRの構造は、可能な限り、それは要求しているCSRの構造を反映している必要がありレスポンス属性。 （例えば、特定のハッシュ関数を使用して）特定の署名方式を使用する要求は、CSRののsignatureAlgorithmに反映されるべきOIDとして表されます。要求は、アルゴリズムを示すタイプと、（例えば、特定の楕円曲線に基づいて、公開鍵の証明書）がSubjectPublicKeyInfoでののAlgorithmIdentifierとして反映されるように、属性として表される特定の暗号システムを使用し、値は、特定のを示しますアルゴリズムに固有のパラメータ。クライアントからの記述情報のための要求は、[RFC2985] extensionRequest得られた証明書の拡張機能に含まれる所望の特定の属性を示す値を示すタイプと、CSRの属性として表現する、属性によって製造されます。"
    },
    {
      "indent": 3,
      "text": "The sequence is Distinguished Encoding Rules (DER) encoded [X.690] and then base64 encoded (Section 4 of [RFC4648]). The resulting text forms the application/csrattr body, without headers.",
      "ja": "配列は、識別符号化規則（DER）は[X.690]符号化され、次いで、base64エンコード（[RFC4648]のセクション4）です。結果として得られるテキストはヘッダなしで、アプリケーション/ csrattr体を形成します。"
    },
    {
      "indent": 3,
      "text": "For example, if a CA requests a client to submit a certification request containing the challengePassword (indicating that linking of identity and POP information is requested; see Section 3.5), an extensionRequest with the Media Access Control (MAC) address ([RFC2307]) of the client, and to use the secp384r1 elliptic curve and to sign with the SHA384 hash function. Then, it takes the following:",
      "ja": "CAはchallengePasswordを含む認証要求を提出するクライアントを要求した場合たとえば、（身元およびPOP情報のリンクが要求されていることを示す。参照3.5節）、メディアアクセス制御（MAC）アドレスを持つextensionRequest（[RFC2307]）クライアントの、およびsecp384r1楕円曲線を使用するとSHA384ハッシュ関数に署名します。その後、それは次のようになります："
    },
    {
      "indent": 9,
      "text": "OID: challengePassword (1.2.840.113549.1.9.7)",
      "ja": "OID：challengePassword（1.2.840.113549.1.9.7）"
    },
    {
      "indent": 9,
      "text": "Attribute: type = extensionRequest (1.2.840.113549.1.9.14) value = macAddress (1.3.6.1.1.1.1.22)",
      "ja": "属性：タイプ= extensionRequest（1.2.840.113549.1.9.14）値= MACADDRESS（1.3.6.1.1.1.1.22）"
    },
    {
      "indent": 9,
      "text": "Attribute: type = id-ecPublicKey (1.2.840.10045.2.1) value = secp384r1 (1.3.132.0.34)",
      "ja": "属性：タイプ= ID-ecPublicKey（1.2.840.10045.2.1）値= secp384r1（1.3.132.0.34）"
    },
    {
      "indent": 9,
      "text": "OID: ecdsaWithSHA384 (1.2.840.10045.4.3.3)",
      "ja": "ON：ecdsaWithSHA384（1.2.840.10045.4.3.3）"
    },
    {
      "indent": 3,
      "text": "and encodes them into an ASN.1 SEQUENCE to produce:",
      "ja": "そして生成するためのASN.1 SEQUENCEにそれらをコードします。"
    },
    {
      "indent": 7,
      "text": "30 41 06 09 2a 86 48 86 f7 0d 01 09 07 30 12 06 07 2a 86 48 ce 3d\n02 01 31 07 06 05 2b 81 04 00 22 30 16 06 09 2a 86 48 86 f7 0d 01\n09 0e 31 09 06 07 2b 06 01 01 01 01 16 06 08 2a 86 48 ce 3d 04 03\n03",
      "raw": true
    },
    {
      "indent": 3,
      "text": "and then base64 encodes the resulting ASN.1 SEQUENCE to produce:",
      "ja": "そしてその後、BASE64を生成するために、得られたASN.1配列をコードします。"
    },
    {
      "indent": 7,
      "text": "MEEGCSqGSIb3DQEJBzASBgcqhkjOPQIBMQcGBSuBBAAiMBYGCSqGSIb3DQEJDjEJ\nBgcrBgEBAQEWBggqhkjOPQQDAw==",
      "raw": true
    },
    {
      "indent": 0,
      "text": "5. IANA Considerations",
      "section_title": true,
      "ja": "5. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "Section 4.4.1.2 defines an OID that has been registered in an arc delegated by the IANA to the PKIX working group.",
      "ja": "セクション4.4.1.2は、PKIXワーキンググループにIANAによって委任されたアークに登録されているOIDを定義します。"
    },
    {
      "indent": 3,
      "text": "IANA has registered the following:",
      "ja": "IANAは以下を登録しています："
    },
    {
      "indent": 3,
      "text": "IANA updated the well-known URI registry with the following filled-in template from [RFC5785].",
      "ja": "IANAは[RFC5785]から以下の塗りつぶされたテンプレートで、よく知られたURIのレジストリを更新しました。"
    },
    {
      "indent": 6,
      "text": "URI suffix: est",
      "ja": "URIサフィックス：EST"
    },
    {
      "indent": 6,
      "text": "Change controller: IETF",
      "ja": "変更コントローラ：IETF"
    },
    {
      "indent": 3,
      "text": "IANA has updated the \"Application Media Types\" registry with the following filled-in templates from [RFC6838].",
      "ja": "IANAは[RFC6838]から以下の塗りつぶされたテンプレートと、「アプリケーションメディアタイプ」レジストリを更新しました。"
    },
    {
      "indent": 3,
      "text": "The media subtype for CSR attributes in a CSR Attributes Response is application/csrattrs.",
      "ja": "CSRのためのメディアサブタイプは、応答がアプリケーション/ csrattrsある属性CSRの属性。"
    },
    {
      "indent": 7,
      "text": "Type name: application",
      "ja": "型名：アプリケーション"
    },
    {
      "indent": 7,
      "text": "Subtype name: csrattrs",
      "ja": "サブタイプ名：csrattrs"
    },
    {
      "indent": 7,
      "text": "Required parameters: None",
      "ja": "必須パラメータ：なし"
    },
    {
      "indent": 7,
      "text": "Optional parameters: None",
      "ja": "オプションのパラメータ：なし"
    },
    {
      "indent": 7,
      "text": "Encoding considerations: binary;",
      "ja": "エンコードの考慮事項：バイナリ。"
    },
    {
      "indent": 7,
      "text": "Security Considerations:",
      "ja": "セキュリティの考慮事項："
    },
    {
      "indent": 9,
      "text": "Clients request a list of attributes that servers wish to be in certification requests. The request/response is normally done in a TLS-protected tunnel.",
      "ja": "クライアントは、サーバが認証要求であることを希望する属性のリストを要求します。要求/応答は、通常、TLSで保護されたトンネル内で行われます。"
    },
    {
      "indent": 7,
      "text": "Interoperability considerations: None",
      "ja": "相互運用性に関する注意事項：なし"
    },
    {
      "indent": 7,
      "text": "Published specification: This memo.",
      "ja": "公開された仕様：このメモ。"
    },
    {
      "indent": 7,
      "text": "Applications which use this media type: Enrollment over Secure Transport (EST)",
      "ja": "入学を超えるセキュアな交通（EST）：このメディアタイプを使用するアプリケーション"
    },
    {
      "indent": 7,
      "text": "Additional information:",
      "ja": "追加情報："
    },
    {
      "indent": 9,
      "text": "Magic number(s): None",
      "ja": "マジックナンバー（S）：なし"
    },
    {
      "indent": 9,
      "text": "File extension: .csrattrs",
      "ja": "ファイル拡張子：.csrattrs"
    },
    {
      "indent": 7,
      "text": "Person & email address to contact for further information:",
      "ja": "詳細のために連絡する人とEメールアドレス："
    },
    {
      "indent": 9,
      "text": "Dan Harkins <dharkins@arubanetworks.com>",
      "ja": "ダンハーキンズ<dharkins@arubanetworks.com>"
    },
    {
      "indent": 7,
      "text": "Restrictions on usage: None",
      "ja": "使用に関する制限：なし"
    },
    {
      "indent": 7,
      "text": "Author: Dan Harkins <dharkins@arubanetworks.com>",
      "ja": "著者：ダンハーキンズ<dharkins@arubanetworks.com>"
    },
    {
      "indent": 7,
      "text": "Intended usage: COMMON",
      "ja": "意図している用法：COMMON"
    },
    {
      "indent": 7,
      "text": "Change controller: The IESG <iesg@ietf.org>",
      "ja": "変更コントローラ：IESG <iesg@ietf.org>"
    },
    {
      "indent": 3,
      "text": "The application/pkcs7-mime content-type defines the optional \"smime-type\" parameter [RFC5751] with a set of specific values. This document adds another value, \"server-generated-key\", as the parameter value for Server-side Key Generation Response.",
      "ja": "アプリケーション/ PKCS7-MIMEコンテンツタイプは、特定の値のセットとオプションの「SMIME型」パラメータ[RFC5751]を定義します。このドキュメントでは、サーバー側の鍵生成応答のためのパラメータ値として、別の値、「サーバー生成キー」を追加します。"
    },
    {
      "indent": 0,
      "text": "6. Security Considerations",
      "section_title": true,
      "ja": "6.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "Support for Basic authentication, as specified in HTTP [RFC2617], allows the server access to a client's cleartext password. This provides support for legacy username/password databases but requires exposing the plaintext password to the EST server. Use of a PIN or one-time password can help mitigate such exposure, but it is RECOMMENDED that EST clients use such credentials only once to obtain a client certificate (that will be used during future interactions with the EST server).",
      "ja": "基本認証のサポートは、HTTP [RFC2617]で指定されるように、クライアントのクリアテキストパスワードへのサーバーアクセスを許可します。これは、従来のユーザー名/パスワードのデータベースをサポートしていますが、ESTサーバに平文のパスワードをさらす必要です。 PINまたはワンタイムパスワードの使用は、このようなリスクを軽減することができますが、ESTクライアントが（ESTサーバとの将来の対話中に使用されます）クライアント証明書を取得するために一度だけ、このような資格情報を使用することをお勧めします。"
    },
    {
      "indent": 3,
      "text": "When a client uses the Implicit TA database for certificate validation (see Section 3), then authorization proceeds as specified in Section 3.6.2. In this situation, the client has validated the server as being a responder that is certified by a third party for the URI configured, but it cannot verify that the responder is authorized to act as an RA for the PKI in which the client is trying to enroll. Clients using an Implicit Trust Anchor database are RECOMMENDED to use only TLS-based client authentication (to prevent exposing HTTP-based client authentication information). It is RECOMMENDED that such clients include \"Linking Identity and POP Information\" (Section 3.5) in requests (to prevent such requests from being forwarded to a real EST server by a man in the middle). It is RECOMMENDED that the Implicit Trust Anchor database used for EST server authentication be carefully managed to reduce the chance of a third-party CA with poor certification practices from being trusted. Disabling the Implicit Trust Anchor database after successfully receiving the Distribution of CA certificates response (Section 4.1.3) limits any vulnerability to the first TLS exchange.",
      "ja": "クライアントは、証明書の検証のための暗黙のTAデータベースを使用する場合、セクション3.6.2で指定されるように、認可が進む（セクション3を参照）。このような状況では、クライアントが構成されたURIのための第三者によって認定された応答者としてサーバーを検証したが、それは応答者は、クライアントがしようとしているPKIのためのRAとして機能する権限があることを確認することはできません入学。暗黙の信頼アンカーのデータベースを使用しているクライアントは、（HTTPベースのクライアント認証情報を暴露防止のために）だけTLSベースのクライアント認証を使用することをお勧めします。 （中間者によって実際のESTのサーバに転送されているから、このような要求を防ぐために）このようなクライアントが要求で「リンクのアイデンティティおよびPOP情報」（3.5節）を含めることをお勧めします。 ESTサーバの認証に使用する暗黙の信頼アンカーデータベースが信頼されているから貧しい認定実務にサードパーティのCAの機会を減らすために慎重に管理することが推奨されます。正常CA証明書応答（セクション4.1.3）の分布を受信した後に暗黙の信頼アンカーデータベースを無効にすると、最初のTLS交換への脆弱性を制限します。"
    },
    {
      "indent": 3,
      "text": "Certificate-less TLS cipher suites that maintain security and perform the mutual authentication necessary for enrollment have the following properties:",
      "ja": "セキュリティを維持し、入学のために必要な相互認証を行い、証明書のないTLS暗号スイートは、次のプロパティがあります。"
    },
    {
      "indent": 3,
      "text": "o the only information leaked by an active attack is whether or not a single guess of the secret is correct.",
      "ja": "Oアクティブな攻撃により漏洩した情報のみが秘密の一つの推測が正しいかどうかです。"
    },
    {
      "indent": 3,
      "text": "o any advantage an adversary gains is through interaction and not computation.",
      "ja": "O敵対者が獲得するどんな利点が相互作用していない計算することです。"
    },
    {
      "indent": 3,
      "text": "o it is possible to perform countermeasures, such as exponential backoff after a certain number of failed attempts, to frustrate repeated active attacks.",
      "ja": "O失敗の特定の番号の後にそのような指数バックオフのような対策を実行するために繰り返しアクティブ攻撃を挫折させることができます。"
    },
    {
      "indent": 3,
      "text": "Using a certificate-less cipher suite that does not have the properties listed above would render the results of enrollment void and potentially result in certificates being issued to unauthenticated and/or unauthorized entities.",
      "ja": "上記の性質が登録ボイドの結果をレンダリングし、潜在的に認証されていないおよび/または不正なエンティティに発行された証明書につながる持っていない証明書のない暗号スイートを使用しました。"
    },
    {
      "indent": 3,
      "text": "When using a certificate-less TLS cipher suite, the shared secret used for authentication and authorization cannot be shared with an entity that is not a party to the exchange: someone other than the client and the server. Any additional sharing of secrets voids the security afforded by a certificate-less cipher suite. Exposure of a shared secret used by a certificate-less cipher suite to a third party enables client impersonation that can result in corruption of a client's trust anchor database.",
      "ja": "クライアントとサーバー以外の誰か：証明書のないTLS暗号スイートを使用する場合は、認証と承認のために使用する共有秘密を交換する当事者ではないエンティティと共有することはできません。秘密の任意の追加の共有は、証明書のない暗号スイートによって提供されるセキュリティを無効になります。第三者への証明書のない暗号スイートによって使用される共有秘密の暴露は、クライアントのトラストアンカーデータベースの破損が発生する可能性があり、クライアントの偽装を可能にします。"
    },
    {
      "indent": 3,
      "text": "TLS cipher suites that include \"_EXPORT_\" and \"_DES_\" in their names MUST NOT be used. These ciphers do not offer a sufficient level of protection; 40-bit crypto in 2013 doesn't offer acceptable protection, and the use of DES is deprecated.",
      "ja": "名前に「_EXPORT_」と「_DES_」が含まれるTLS暗号スイートを使用してはいけません。これらの暗号は、保護の十分なレベルを提供していません。 2013年に40ビットの暗号化は、許容可能な保護を提供していない、とDESの使用が推奨されていません。"
    },
    {
      "indent": 3,
      "text": "As described in CMC, Section 6.7 of [RFC5272], \"For keys that can be used as signature keys, signing the certification request with the private key serves as a POP on that key pair\". The inclusion of tls-unique within the certification request links the proof-of-possession to the TLS proof-of-identity by enforcing that the POP operation occurred while the TLS session was active. This implies to the server that the authenticated client currently has access to the private key. If the authenticated client is known to have specific capabilities, such as hardware protection for authentication credentials and key storage, this implication is strengthened but not proven.",
      "ja": "CMC、[RFC5272]のセクション6.7に記載されているように、「署名鍵として使用することができる鍵のために、秘密鍵と証明書要求に署名すると、その鍵ペアにPOPとして機能します」。 TLS固有認証要求内の包含は、TLSセッションがアクティブであったポップ操作が発生したことを強制することによってTLSにプルーフ・オブ・アイデンティティのプルーフ・オブ・所持リンク。これは、認証されたクライアントが現在の秘密鍵へのアクセス権を持つサーバーへの暗示します。認証されたクライアントは、認証資格情報と鍵保管のためのハードウェア保護などの特定の機能を有することが知られている場合は、この含意は強化されますが証明されていません。"
    },
    {
      "indent": 3,
      "text": "The server-side key generation method allows keys to be transported over the TLS connection to the client without any application-layer protection. The distribution of private key material is inherently risky. Private key distribution uses the encryption mode of the negotiated TLS cipher suite. Keys are not protected by preferred key wrapping methods such as AES Key Wrap [RFC3394] or as specified in [RFC5958] as encryption of the private key beyond that provided by TLS is optional. It is RECOMMENDED that EST servers not support this operation by default. It is RECOMMENDED that clients not request this service unless there is a compelling operational benefit. Use of an Implicit Trust Anchor database is NOT RECOMMENDED when server-side key generation is employed. The use of an encrypted CMS Server-Side Key Generation Response is RECOMMENDED.",
      "ja": "サーバー側の鍵生成方法は、キーは任意のアプリケーション層の保護せずに、クライアントへのTLS接続を介して輸送することを可能にします。秘密鍵の材料の分布は本質的に危険です。秘密鍵の配布がネゴシエートTLS暗号スイートの暗号化モードを使用しています。キーはTLSはオプションですによって提供されるこのようなAESキーラップ[RFC3394]として、あるいはそれを超え、秘密鍵の暗号化として[RFC5958]で指定されたとして優先キーラッピング法により保護されていません。 ESTサーバは、デフォルトでは、この操作をサポートしないことをお勧めします。魅力的な運用の利点がある場合を除き、クライアントは、このサービスを要求しないことをお勧めします。サーバー側の鍵生成が採用されたときに暗黙の信頼アンカーデータベースの使用は推奨されません。暗号化されたCMSサーバー側鍵生成応答の使用が推奨されます。"
    },
    {
      "indent": 3,
      "text": "Regarding the CSR attributes that the CA may list for inclusion in an enrollment request, there are no real inherent security issues with the content being conveyed, but an adversary who is able to interpose herself into the conversation could exclude attributes that a server may want, include attributes that a server may not want, and render meaningless other attributes that a server may want.",
      "ja": "CSRは、CAが登録要求に含めるために表示されることがありと属性については、そこにコンテンツが搬送されていると本当の固有のセキュリティ上の問題はありませんが、サーバーが望む可能性のある属性を除外することができ、会話に身を介在させることが可能である敵、サーバーがしたい、とサーバーがしたいことが無意味な他の属性をレンダリングしない可能性があることの属性が含まれます。"
    },
    {
      "indent": 3,
      "text": "ASN.1 encoding rules (e.g., DER and BER) have a type-length-value structure, and it is easy to construct malicious content with invalid length fields that can cause buffer overrun conditions. ASN.1 encoding rules allow for arbitrary levels of nesting, which may make it possible to construct malicious content that will cause a stack overflow. Interpreters of ASN.1 structures should be aware of these issues and should take appropriate measures to guard against buffer overflows and stack overruns in particular, and malicious content in general.",
      "ja": "ASN.1符号化規則（例えば、DER及びBER）は、タイプレングス値の構造を有し、バッファオーバーラン状態を引き起こす可能性が無効な長さフィールドを持つ悪質なコンテンツを構築することは容易です。 ASN.1の符号化規則は、スタックオーバーフローが発生します悪意のあるコンテンツを構築することを可能にする可能性がある、ネストの任意のレベルを可能にします。 ASN.1構造の通訳は、これらの問題を認識しておく必要があり、バッファオーバーフロー、特にスタックオーバーラン、および一般的に悪質なコンテンツから保護するための適切な措置をとるべきです。"
    },
    {
      "indent": 0,
      "text": "7. References",
      "section_title": true,
      "ja": "7.参考"
    },
    {
      "indent": 0,
      "text": "7.1. Normative References",
      "section_title": true,
      "ja": "7.1. 引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2045] Freed, N. and N. Borenstein, \"Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies\", RFC 2045, November 1996.",
      "ja": "[RFC2045]解放され、N.とN. Borenstein、 \"マルチパーパスインターネットメールエクステンション（MIME）第一部：インターネットメッセージ本体のフォーマット\"、RFC 2045、1996年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC2585] Housley, R. and P. Hoffman, \"Internet X.509 Public Key Infrastructure Operational Protocols: FTP and HTTP\", RFC 2585, May 1999.",
      "ja": "[RFC2585] Housley氏、R.とP.ホフマン、 \"インターネットX.509公開鍵基盤運用プロトコル：FTPやHTTP\"、RFC 2585、1999年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC2616] Fielding, R., Gettys, J., Mogul, J., Frystyk, H., Masinter, L., Leach, P., and T. Berners-Lee, \"Hypertext Transfer Protocol -- HTTP/1.1\", RFC 2616, June 1999.",
      "ja": "[RFC2616]フィールディング、R.、ゲティス、J.、モーグル、J.、Frystyk、H.、Masinter、L.、リーチ、P.、およびT.バーナーズ - リー、 \"ハイパーテキスト転送プロトコル -  HTTP / 1.1\" 、RFC 2616、1999年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC2617] Franks, J., Hallam-Baker, P., Hostetler, J., Lawrence, S., Leach, P., Luotonen, A., and L. Stewart, \"HTTP Authentication: Basic and Digest Access Authentication\", RFC 2617, June 1999.",
      "ja": "[RFC2617]フランクス、J.、ハラム・ベイカー、P.、Hostetler、J.、ローレンス、S.、リーチ、P.、Luotonen、A.、およびL.スチュワート、 \"HTTP認証：基本とダイジェストアクセス認証\" 、RFC 2617、1999年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC2633] Ramsdell, B., \"S/MIME Version 3 Message Specification\", RFC 2633, June 1999.",
      "ja": "[RFC2633] Ramsdell、B.、 \"S / MIMEバージョン3メッセージ仕様\"、RFC 2633、1999年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC2986] Nystrom, M. and B. Kaliski, \"PKCS #10: Certification Request Syntax Specification Version 1.7\", RFC 2986, November 2000.",
      "ja": "[RFC2986] Nystrom、M.とB. Kaliski、 \"PKCS＃10：証明書要求の構文仕様バージョン1.7\"、RFC 2986、2000年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC3986] Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform Resource Identifier (URI): Generic Syntax\", STD 66, RFC 3986, January 2005.",
      "ja": "[RFC3986]バーナーズ - リー、T.、フィールディング、R.、およびL. Masinter、 \"ユニフォームリソース識別子（URI）：汎用構文\"、STD 66、RFC 3986、2005年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC4086] Eastlake, D., Schiller, J., and S. Crocker, \"Randomness Requirements for Security\", BCP 106, RFC 4086, June 2005.",
      "ja": "[RFC4086]イーストレーク、D.、シラー、J.、およびS.クロッカー、 \"セキュリティのためのランダム要件\"、BCP 106、RFC 4086、2005年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC4108] Housley, R., \"Using Cryptographic Message Syntax (CMS) to Protect Firmware Packages\", RFC 4108, August 2005.",
      "ja": "[RFC4108] Housley氏、R.、 \"ファームウェアパッケージを保護するために暗号メッセージ構文（CMS）の使用\"、RFC 4108、2005年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC4210] Adams, C., Farrell, S., Kause, T., and T. Mononen, \"Internet X.509 Public Key Infrastructure Certificate Management Protocol (CMP)\", RFC 4210, September 2005.",
      "ja": "[RFC4210]アダムス、C.、ファレル、S.、Kause、T.、およびT. Mononen、 \"インターネットX.509公開鍵基盤証明書管理プロトコル（CMP）\"、RFC 4210、2005年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC4346] Dierks, T. and E. Rescorla, \"The Transport Layer Security (TLS) Protocol Version 1.1\", RFC 4346, April 2006.",
      "ja": "[RFC4346]ダークス、T.およびE.レスコラ、 \"トランスポート層セキュリティ（TLS）プロトコルバージョン1.1\"、RFC 4346、2006年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC4648] Josefsson, S., \"The Base16, Base32, and Base64 Data Encodings\", RFC 4648, October 2006.",
      "ja": "[RFC4648] Josefsson氏、S.、 \"Base16、Base32、およびBase64でデータエンコーディング\"、RFC 4648、2006年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC5077] Salowey, J., Zhou, H., Eronen, P., and H. Tschofenig, \"Transport Layer Security (TLS) Session Resumption without Server-Side State\", RFC 5077, January 2008.",
      "ja": "[RFC5077] Salowey、J.、周、H.、Eronen、P.、およびH. Tschofenig、 \"サーバー側の状態なしのトランスポート層セキュリティ（TLS）セッション再開\"、RFC 5077、2008年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC5246] Dierks, T. and E. Rescorla, \"The Transport Layer Security (TLS) Protocol Version 1.2\", RFC 5246, August 2008.",
      "ja": "[RFC5246]ダークス、T.およびE.レスコラ、 \"トランスポート層セキュリティ（TLS）プロトコルバージョン1.2\"、RFC 5246、2008年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC5272] Schaad, J. and M. Myers, \"Certificate Management over CMS (CMC)\", RFC 5272, June 2008.",
      "ja": "[RFC5272] Schaad、J.とM.マイヤーズ、 \"CMSオーバー証明書の管理（CMC）\"、RFC 5272、2008年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC5273] Schaad, J. and M. Myers, \"Certificate Management over CMS (CMC): Transport Protocols\", RFC 5273, June 2008.",
      "ja": "[RFC5273] Schaad、J.とM.マイヤーズ、 \"CMS（CMC）以上の証明書の管理：トランスポートプロトコル\"、RFC 5273、2008年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC5274] Schaad, J. and M. Myers, \"Certificate Management Messages over CMS (CMC): Compliance Requirements\", RFC 5274, June 2008.",
      "ja": "[RFC5274] Schaad、J.とM.マイヤーズ、 \"CMS（CMC）以上の証明書管理メッセージ：コンプライアンス要件\"、RFC 5274、2008年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC5280] Cooper, D., Santesson, S., Farrell, S., Boeyen, S., Housley, R., and W. Polk, \"Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile\", RFC 5280, May 2008.",
      "ja": "[RFC5280]クーパー、D.、Santesson、S.、ファレル、S.、Boeyen、S.、Housley氏、R.、およびW.ポーク、「インターネットX.509公開鍵暗号基盤証明書と証明書失効リスト（CRL）のプロフィール」、RFC 5280、2008年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC5652] Housley, R., \"Cryptographic Message Syntax (CMS)\", STD 70, RFC 5652, September 2009.",
      "ja": "[RFC5652] Housley氏、R.、 \"暗号メッセージ構文（CMS）\"、STD 70、RFC 5652、2009年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC5746] Rescorla, E., Ray, M., Dispensa, S., and N. Oskov, \"Transport Layer Security (TLS) Renegotiation Indication Extension\", RFC 5746, February 2010.",
      "ja": "[RFC5746]レスコラ、E.、レイ、M.、Dispensa、S.、およびN. Oskov、 \"トランスポート層セキュリティ（TLS）再ネゴシエーション指示拡張子\"、RFC 5746、2010年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC5751] Ramsdell, B. and S. Turner, \"Secure/Multipurpose Internet Mail Extensions (S/MIME) Version 3.2 Message Specification\", RFC 5751, January 2010.",
      "ja": "[RFC5751] Ramsdell、B.、およびS.ターナー、 \"/セキュア多目的インターネットメール拡張（S / MIME）バージョン3.2メッセージ仕様\"、RFC 5751、2010年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC5785] Nottingham, M. and E. Hammer-Lahav, \"Defining Well-Known Uniform Resource Identifiers (URIs)\", RFC 5785, April 2010.",
      "ja": "[RFC5785]ノッティンガム、M.とE.ハンマー -  Lahav、 \"既知のUniform Resource Identifier（URI）を定義\"、RFC 5785、2010年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC5929] Altman, J., Williams, N., and L. Zhu, \"Channel Bindings for TLS\", RFC 5929, July 2010.",
      "ja": "[RFC5929]アルトマン、J.、ウィリアムズ、N.、およびL.朱、 \"TLSのチャネルバインディング\"、RFC 5929、2010年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC5958] Turner, S., \"Asymmetric Key Packages\", RFC 5958, August 2010.",
      "ja": "[RFC5958]ターナー、S.、 \"非対称鍵パッケージ\"、RFC 5958、2010年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC6066] Eastlake, D., \"Transport Layer Security (TLS) Extensions: Extension Definitions\", RFC 6066, January 2011.",
      "ja": "[RFC6066]イーストレイク、D.、 \"トランスポート層セキュリティ（TLS）拡張機能：拡張定義\"、RFC 6066、2011年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC6125] Saint-Andre, P. and J. Hodges, \"Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)\", RFC 6125, March 2011.",
      "ja": "[RFC6125]サンアンドレ、P.およびJ.ホッジス、「表現およびTransport Layer Security（TLS）の文脈でインターネット公開鍵インフラストラクチャの使用X.509内のドメインベースのアプリケーションサービスのアイデンティティの検証（PKIX）証明書」、 RFC 6125、2011年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC6402] Schaad, J., \"Certificate Management over CMS (CMC) Updates\", RFC 6402, November 2011.",
      "ja": "[RFC6402] Schaad、J.、 \"証明書の管理CMS（CMC）のアップデートオーバー\"、RFC 6402、2011年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC6454] Barth, A., \"The Web Origin Concept\", RFC 6454, December 2011.",
      "ja": "[RFC6454]バース、A.、 \"ウェブ起源コンセプト\"、RFC 6454、2011年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC6838] Freed, N., Klensin, J., and T. Hansen, \"Media Type Specifications and Registration Procedures\", BCP 13, RFC 6838, January 2013.",
      "ja": "[RFC6838]解放され、N.、Klensin、J.、およびT.ハンセン、 \"メディアタイプの仕様と登録手順\"、BCP 13、RFC 6838、2013年1月。"
    },
    {
      "indent": 3,
      "text": "[X.680] ITU-T Recommendation X.680 (2008) | ISO/IEC 8824-1:2008, \"Abstract Syntax Notation One (ASN.1): Specification of basic notation\", November 2008, <http://www.itu.int/rec/T-REC-X.680-200811-I/en>.",
      "ja": "[X.680] ITU-T勧告X.680（2008）| ISO / IEC 8824から1：2008、 \"抽象構文記法1（ASN.1）：基本的な表記法の仕様\"、2008年11月、<http://www.itu.int/rec/T-REC-X.680- 200811-I / EN>。"
    },
    {
      "indent": 3,
      "text": "[X.690] ITU-T Recommendation X.690 (2008) | ISO/IEC 8825-1:2008, \"ASN.1 encoding rules: Specification of Basic Encoding Rules (BER), Canonical Encoding Rules (CER) and Distinguished Encoding Rules (DER)\", November 2008, <http://www.itu.int/rec/T-REC-X.690-200811-I/en>.",
      "ja": "[X.690] ITU-T勧告X.690（2008）| ISO / IEC 8825から1：2008、 \"ASN.1の符号化規則：基本符号化規則（BER）の仕様、Canonicalの符号化規則（CER）、および顕著な符号化規則（DER）\"、2008年11月、<のhttp：// WWW。 itu.int/rec/T-REC-X.690-200811-I/en>。"
    },
    {
      "indent": 0,
      "text": "7.2. Informative References",
      "section_title": true,
      "ja": "7.2. 参考文献"
    },
    {
      "indent": 3,
      "text": "[IDevID] IEEE Standards Association, \"IEEE 802.1AR Secure Device Identifier\", December 2009, <http://standards.ieee.org/ findstds/standard/802.1AR-2009.html>.",
      "ja": "[IDevID] IEEE規格協会、 \"IEEE 802.1ARセキュアデバイス識別子\"、2009年12月、<http://standards.ieee.org/ findstds /標準/ 802.1AR-2009.html>。"
    },
    {
      "indent": 3,
      "text": "[RFC2307] Howard, L., \"An Approach for Using LDAP as a Network Information Service\", RFC 2307, March 1998.",
      "ja": "[RFC2307]ハワード、L.、1998年3月、RFC 2307 \"ネットワーク情報サービスとしてLDAPを使用するためのアプローチ\"。"
    },
    {
      "indent": 3,
      "text": "[RFC2818] Rescorla, E., \"HTTP Over TLS\", RFC 2818, May 2000.",
      "ja": "[RFC2818]レスコラ、E.、 \"TLSオーバーHTTP\"、RFC 2818、2000年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC2985] Nystrom, M. and B. Kaliski, \"PKCS #9: Selected Object Classes and Attribute Types Version 2.0\", RFC 2985, November 2000.",
      "ja": "[RFC2985] Nystrom、M.とB. Kaliski、 \"PKCS＃9：選択したオブジェクトのクラスと属性タイプバージョン2.0\"、RFC 2985、2000年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC3394] Schaad, J. and R. Housley, \"Advanced Encryption Standard (AES) Key Wrap Algorithm\", RFC 3394, September 2002.",
      "ja": "[RFC3394] Schaad、J.とR. Housley氏、 \"高度暗号化標準（AES）キーラップアルゴリズム\"、RFC 3394、2002年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC5054] Taylor, D., Wu, T., Mavrogiannopoulos, N., and T. Perrin, \"Using the Secure Remote Password (SRP) Protocol for TLS Authentication\", RFC 5054, November 2007.",
      "ja": "[RFC5054]テイラー、D.、呉、T.、Mavrogiannopoulos、N.、およびT.ペリン、 \"セキュアリモートパスワードの使い方（SRP）TLS認証のためのプロトコル\"、RFC 5054、2007年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC5967] Turner, S., \"The application/pkcs10 Media Type\", RFC 5967, August 2010.",
      "ja": "[RFC5967]ターナー、S.、 \"アプリケーション/ PKCS10メディアタイプ\"、RFC 5967、2010年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC6403] Zieglar, L., Turner, S., and M. Peck, \"Suite B Profile of Certificate Management over CMS\", RFC 6403, November 2011.",
      "ja": "[RFC6403]チーグラー、L.、ターナー、S.、およびM.ペック、 \"CMSを超える証明書管理のスイートBプロファイル\"、RFC 6403、2011年11月。"
    },
    {
      "indent": 3,
      "text": "[SHS] National Institute of Standards and Technology, \"Secure Hash Standard (SHS)\", Federal Information Processing Standard Publication 180-4, March 2012, <http://csrc.nist.gov/publications/fips/ fips180-4/fips-180-4.pdf>.",
      "ja": "[SHS]米国国立標準技術研究所、 \"セキュアハッシュ規格（SHS）\"、連邦情報処理標準出版180-4、2012年3月、<http://csrc.nist.gov/publications/fips/ fips180-4 / FIPS-180-4.pdf>。"
    },
    {
      "indent": 3,
      "text": "[SP-800-57-Part-1] National Institute of Standards and Technology, \"Recommendation for Key Management - Part 1: General (Revision 3)\", July 2012, <http://csrc.nist.gov/publications/nistpubs/800-57/ sp800-57_part1_rev3_general.pdf>.",
      "ja": "[SP-800-57-パート1]アメリカ国立標準技術研究所、 \"キー管理のための提言 - パート1：一般（改訂3）\"、2012年7月、<http://csrc.nist.gov/publications/ nistpubs / 800-57 / sp800-57_part1_rev3_general.pdf>。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Operational Scenario Example Messages",
      "ja": "付録A.動作シナリオの例メッセージ"
    },
    {
      "indent": 3,
      "text": "(Informative)",
      "ja": "（参考情報）"
    },
    {
      "indent": 3,
      "text": "This section expands on the Operational Scenario Overviews by providing detailed examples of the messages at each TLS layer.",
      "ja": "このセクションでは、各TLS層でメッセージの詳細な例を提供することによって、動作シナリオの概要を拡張します。"
    },
    {
      "indent": 0,
      "text": "A.1. Obtaining CA Certificates",
      "ja": "A.1。 CA証明書の取得"
    },
    {
      "indent": 3,
      "text": "The following is an example of a valid /cacerts exchange.",
      "ja": "以下は、有効/ cacerts鍵交換の一例です。"
    },
    {
      "indent": 3,
      "text": "During the initial TLS handshake, the client can ignore the optional server-generated \"certificate request\" and can instead proceed with the HTTP GET request:",
      "ja": "最初のTLSハンドシェイク中に、クライアントは、オプションのサーバー生成「証明書要求」を無視することができ、代わりにHTTP GETリクエストを進めることができます。"
    },
    {
      "indent": 3,
      "text": "GET /.well-known/est/cacerts HTTP/1.1\nUser-Agent: curl/7.22.0 (i686-pc-linux-gnu) libcurl/7.22.0 OpenS\nSL/1.0.1 zlib/1.2.3.4 libidn/1.23 librtmp/2.3\nHost: 192.0.2.1:8085\nAccept: */*",
      "raw": true
    },
    {
      "indent": 3,
      "text": "In response, the server provides the current CA certificates:",
      "ja": "応答では、サーバーは、現在のCA証明書を提供しています。"
    },
    {
      "indent": 3,
      "text": "HTTP/1.1 200 OK Status: 200 OK Content-Type: application/pkcs7-mime Content-Transfer-Encoding: base64 Content-Length: 4246",
      "ja": "HTTP / 1.1 200 OKステータス：200 OKのContent-Type：アプリケーション/ PKCS7-MIMEコンテンツ転送エンコード：base64でのContent-Length：4246"
    },
    {
      "indent": 3,
      "text": "MIIMOQYJKoZIhvcNAQcCoIIMKjCCDCYCAQExADALBgkqhkiG9w0BBwGgggwMMIIC +zCCAeOgAwIBAgIJAJpY3nUZO3qcMA0GCSqGSIb3DQEBBQUAMBsxGTAXBgNVBAMT EGVzdEV4YW1wbGVDQSBPd08wHhcNMTMwNTA5MDM1MzMxWhcNMTQwNTA5MDM1MzMx WjAbMRkwFwYDVQQDExBlc3RFeGFtcGxlQ0EgT3dPMIIBIjANBgkqhkiG9w0BAQEF AAOCAQ8AMIIBCgKCAQEAwDqpiHopaICubpRqbpEN7LqTIqWELFIA9qDDheHIKuyO HW/ZAP7Rl4S5ZU6gaLW/ksseBUxdmox3KNyvtyjehIofTu28eZWhgy6/LCEGWR3P K+fgPBA0l0JfJR/8oeXZa70oLVQc3hI4kCeqjFMs+biYH0vp/RluhftyZ5kzQyH1 EGsRkw1/qUKkTZ8PCF8VFlYfqmUoqsaRTyZbjII4J+Y6/jEG+p7QreW9zcz4sPe8 3c/uhwMLOWQkZtKsQtgo5CpfYMjuAmk4Q2joQq2vcxlc+WNKHf+wbrDb11ORZril 9ISlI94oumcRz3uBG1Yg7z83hdDfasmdfbp8gOSNFQIDAQABo0IwQDAPBgNVHRMB Af8EBTADAQH/MB0GA1UdDgQWBBQITTKxMqATXrfc4ffpCIbt6Gsz0jAOBgNVHQ8B Af8EBAMCAQYwDQYJKoZIhvcNAQEFBQADggEBACPnQPu5WReUGuCMS0nBOGa2tXh6 uZP4mS3J1qEfDePam/IiU9ssyYdcDwhVvKMoP4gI/yu4XFqhdpIoy/PyD4T15MT7 KADCxXkh5rM1IqMui7FvBKLWYGdy9sjEf90wAkBjHBe/TMO1NNw3uELyONSkHIvo X0pu6aPmm/moIMyGi46niFse1iWlXXldGLkOQsh0e7U+wpBX07QpOr2KB2+Yf+uA KY1SWzEG23bUxXlvcbUMgANDGj5r6z+niKL0VlApip/iCuVEEOcZ91UlmJjVLQWA x6ie+v84oM+pIojiGM0C4XWcVlKKEgcMOsN3S4lvm8Ptpq0GLoIJY8NTD20wggMD MIIB66ADAgECAgEBMA0GCSqGSIb3DQEBBQUAMBsxGTAXBgNVBAMTEGVzdEV4YW1w bGVDQSBPd08wHhcNMTMwNTA5MDM1MzMyWhcNMTQwNTA5MDM1MzMyWjAbMRkwFwYD",
      "ja": "MIIMOQYJKoZIhvcNAQcCoIIMKjCCDCYCAQExADALBgkqhkiG9w0BBwGgggwMMIIC + zCCAeOgAwIBAgIJAJpY3nUZO3qcMA0GCSqGSIb3DQEBBQUAMBsxGTAXBgNVBAMT EGVzdEV4YW1wbGVDQSBPd08wHhcNMTMwNTA5MDM1MzMxWhcNMTQwNTA5MDM1MzMx WjAbMRkwFwYDVQQDExBlc3RFeGFtcGxlQ0EgT3dPMIIBIjANBgkqhkiG9w0BAQEF AAOCAQ8AMIIBCgKCAQEAwDqpiHopaICubpRqbpEN7LqTIqWELFIA9qDDheHIKuyO HW / ZAP7Rl4S5ZU6gaLW / ksseBUxdmox3KNyvtyjehIofTu28eZWhgy6 / LCEGWR3P K + fgPBA0l0JfJR / 8oeXZa70oLVQc3hI4kCeqjFMs + biYH0vp / RluhftyZ5kzQyH1 EGsRkw1 / qUKkTZ8PCF8VFlYfqmUoqsaRTyZbjII4J + Y6 / JEG + p7QreW9zcz4sPe8 3C / uhwMLOWQkZtKsQtgo5CpfYMjuAmk4Q2joQq2vcxlc + WNKHf + wbrDb11ORZril 9ISlI94oumcRz3uBG1Yg7z83hdDfasmdfbp8gOSNFQIDAQABo0IwQDAPBgNVHRMB Af8EBTADAQH / MB0GA1UdDgQWBBQITTKxMqATXrfc4ffpCIbt6Gsz0jAOBgNVHQ8B Af8EBAMCAQYwDQYJKoZIhvcNAQEFBQADggEBACPnQPu5WReUGuCMS0nBOGa2tXh6 uZP4mS3J1qEfDePam / IiU9ssyYdcDwhVvKMoP4gI / yu4XFqhdpIoy / PyD4T15MT7 KADCxXkh5rM1IqMui7FvBKLWYGdy9sjEf90wAkBjHBe / TMO1NNw3uELyONSkHIvo X0pu6aPmm / moIMyGi46niFse1iWlXXldGLkOQsh0e7U + wpBX07QpOr2KB2 + Yfの+ uAでKY1SWzEG23bUxXlvcbUMgANDG j5r6z + niKL0VlApip / iCuVEEOcZ91UlmJjVLQWA x6ie + v84oM + pIojiGM0C4XWcVlKKEgcMOsN3S4lvm8Ptpq0GLoIJY8NTD20wggMD MIIB66ADAgECAgEBMA0GCSqGSIb3DQEBBQUAMBsxGTAXBgNVBAMTEGVzdEV4YW1w bGVDQSBPd08wHhcNMTMwNTA5MDM1MzMyWhcNMTQwNTA5MDM1MzMyWjAbMRkwFwYD"
    },
    {
      "indent": 3,
      "text": "VQQDExBlc3RFeGFtcGxlQ0EgTndPMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB CgKCAQEAnn3rZ3rMJHwf7MD9K4mubxHAvtdnrsQf5OfgtMhRIL4aePNhAdgPyj8C loxOgD3UTV+dQ1ViOzVxPN7acikoOnkIdRpjpOpkyMo+KkvHMQXGnQTbsMAv1qWt 9S12DMpo0GOA1e4Ge3ud5YPOTR/q6PvjN51IEwYKksG7CglwZwB+5JbwhYr2D/0u btGltriRVixPWrvt+wz/ITp5rcjh/8RS3LE8tQy3kTNhJF3Y/esR2sSgOiPNgIto CATysbaINEPr4MemqML4tDpR/aG9y+8Qe7s1LyMFvDletp2mmBykAC/7nOat/pwU lB0sN524D1XAgz8ZKvWrkh+ZaOr3hwIDAQABo1IwUDAOBgNVHQ8BAf8EBAMCBLAw HQYDVR0OBBYEFLHEaeZbowSn2Jejizu/uWqyMkI8MB8GA1UdIwQYMBaAFAhNMrEy oBNet9zh9+kIhu3oazPSMA0GCSqGSIb3DQEBBQUAA4IBAQCLDkL7aLNV6hSOkIqH q+shV9YLO56/tj00vY/jV5skgDHk5d0B+OGortKVuGa57+v0avTrlJns3bNW8Ntv zkDEhmd00Ak02aPsi4wRHLFgttUf9HdEHAuTkAESPTU43DiptjkfHhtBMfsFrCkd sxWzCz+prDOMHYfUEkhRVV++1zyGEX6ov1Ap2IU2p3E+ASihL/amxTEQAsbwjUTI R52zoL6nMPzpbKeZi2M0eEBVF8sDueA9Hjo6woLjgJqV0/yc5vC2HAxUOhx0cWTY GcRBgL/yOyQLKiY5TKBH951OjQ4vhF2HmcoO7DkcNLYJOge16ssx4ogBHul20VgF XJJjMIIDAzCCAeugAwIBAgIBAjANBgkqhkiG9w0BAQUFADAbMRkwFwYDVQQDExBl c3RFeGFtcGxlQ0EgTndOMB4XDTEzMDUwOTAzNTMzMloXDTE0MDUwOTAzNTMzMlow GzEZMBcGA1UEAxMQZXN0RXhhbXBsZUNBIE93TjCCASIwDQYJKoZIhvcNAQEBBQAD ggEPADCCAQoCggEBAMA6qYh6KWiArm6Uam6RDey6kyKlhCxSAPagw4XhyCrsjh1v 2QD+0ZeEuWVOoGi1v5LLHgVMXZqMdyjcr7co3oSKH07tvHmVoYMuvywhBlkdzyvn 4DwQNJdCXyUf/KHl2Wu9KC1UHN4SOJAnqoxTLPm4mB9L6f0ZboX7cmeZM0Mh9RBr EZMNf6lCpE2fDwhfFRZWH6plKKrGkU8mW4yCOCfmOv4xBvqe0K3lvc3M+LD3vN3P 7ocDCzlkJGbSrELYKOQqX2DI7gJpOENo6EKtr3MZXPljSh3/sG6w29dTkWa4pfSE pSPeKLpnEc97gRtWIO8/N4XQ32rJnX26fIDkjRUCAwEAAaNSMFAwDgYDVR0PAQH/ BAQDAgSwMB0GA1UdDgQWBBQITTKxMqATXrfc4ffpCIbt6Gsz0jAfBgNVHSMEGDAW gBSxxGnmW6MEp9iXo4s7v7lqsjJCPDANBgkqhkiG9w0BAQUFAAOCAQEALhDaE6Mp BINBsJozdbXlijrWxL1CSv8f4GwpUFk3CgZjibt/qW9UoaNR4E58yRopuEhjwFZK 2w8YtRqx8IZoFhcoLkpBDfgLLwhoztzbYvOVKQMidjBlkBEVNR5MWdrs7F/AxWuy iZ2+8AnR8GwqEIbCD0A7xIghmWEMh/BVI9C7GLqd6PxKrTAjuDfEpfdWhU/uYKmK cL3XDbSwr30j2EQyaTV/3W0Tn2UfuxdwDQ4ZJs9G+Mw50s7AG6CpISyOIFmX6/bU DpJXGLiLwfJ9C/aum9nylYuGCJ68BuTrCs9567KGfXEXI0mdFFCL7TaVR43kjsg3 c43kZ7369MeEZzCCAvswggHjoAMCAQICCQDprp3DmjOyETANBgkqhkiG9w0BAQUF ADAbMRkwFwYDVQQDExBlc3RFeGFtcGxlQ0EgTndOMB4XDTEzMDUwOTAzNTMzMloX DTE0MDUwOTAzNTMzMlowGzEZMBcGA1UEAxMQZXN0RXhhbXBsZUNBIE53TjCCASIw DQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJ5962d6zCR8H+zA/SuJrm8RwL7X Z67EH+Tn4LTIUSC+GnjzYQHYD8o/ApaMToA91E1fnUNVYjs1cTze2nIpKDp5CHUa Y6TqZMjKPipLxzEFxp0E27DAL9alrfUtdgzKaNBjgNXuBnt7neWDzk0f6uj74zed SBMGCpLBuwoJcGcAfuSW8IWK9g/9Lm7Rpba4kVYsT1q77fsM/yE6ea3I4f/EUtyx PLUMt5EzYSRd2P3rEdrEoDojzYCLaAgE8rG2iDRD6+DHpqjC+LQ6Uf2hvcvvEHu7 NS8jBbw5XradppgcpAAv+5zmrf6cFJQdLDeduA9VwIM/GSr1q5IfmWjq94cCAwEA AaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUscRp5lujBKfYl6OLO7+5 arIyQjwwDgYDVR0PAQH/BAQDAgEGMA0GCSqGSIb3DQEBBQUAA4IBAQBCz/CWdYvn GM/SdCdEiom5A1VxaW8nKgCWg/EyWtAIiaHQuViB+jTUAE9lona2MbJoFHW8U5e8 9dCP0rJpA9UYXXhWvFQzd5ZWpms4wUYt1j3gqqd36KorJIAuPigVng13yKytxM7c VmxQnh0aux3aEnEyRGAhGalHp0RaKdgPRzUaGtipJTNBkSV5S4kD4yDCPHMNbBu+ OcluerwEpbz6GvE7CpXl2jrTBZSqBsFelq0iz4kk9++9CnwZwrVgdzklhRfJ1Z4j NkLruwbQ+o4NvBZsXiKxNfn3K2o3SK8AuaEyDWkq18+5rjcfprRO8x4YTW+6mXPq jM0MAGNDEW+1oQAxAA==",
      "ja": "VQQDExBlc3RFeGFtcGxlQ0EgTndPMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB CgKCAQEAnn3rZ3rMJHwf7MD9K4mubxHAvtdnrsQf5OfgtMhRIL4aePNhAdgPyj8C loxOgD3UTV + dQ1ViOzVxPN7acikoOnkIdRpjpOpkyMo + KkvHMQXGnQTbsMAv1qWt 9S12DMpo0GOA1e4Ge3ud5YPOTR / q6PvjN51IEwYKksG7CglwZwB + 5JbwhYr2D / 0U btGltriRVixPWrvt + WZ / ITp5rcjh / 8RS3LE8tQy3kTNhJF3Y / esR2sSgOiPNgIto CATysbaINEPr4MemqML4tDpR / aG9y + 8Qe7s1LyMFvDletp2mmBykAC / 7nOat / PWU lB0sN524D1XAgz8ZKvWrkh + ZaOr3hwIDAQABo1IwUDAOBgNVHQ8BAf8EBAMCBLAw HQYDVR0OBBYEFLHEaeZbowSn2Jejizu / uWqyMkI8MB8GA1UdIwQYMBaAFAhNMrEy oBNet9zh9 + kIhu3oazPSMA0GCSqGSIb3DQEBBQUAA4IBAQCLDkL7aLNV6hSOkIqH Q + shV9YLO56 / tj00vY / jV5skgDHk5d0B + OGortKVuGa57 + v0avTrlJns3bNW8Ntv zkDEhmd00Ak02aPsi4wRHLFgttUf9HdEHAuTkAESPTU43DiptjkfHhtBMfsFrCkd sxWzCz prDOMHYfUEkhRVV + + + + 1zyGEX6ov1Ap2IU2p3E ASihL / amxTEQAsbwjUTI R52zoL6nMPzpbKeZi2M0eEBVF8sDueA9Hjo6woLjgJqV0 / yc5vC2HAxUOhx0cWTY GcRBgL / yOyQLKiY5TKBH951OjQ4vhF2HmcoO7DkcNLYJOge16ssx4ogBHul20VgF XJJjMIIDAzCCAeugAwIBAgIBAjANBgkqhkiG9w0BAQUFADAbMRkwFwYDVQQDExBl c3RFeGFtcGxlQ0EgTndOMB4XD TEzMDUwOTAzNTMzMloXDTE0MDUwOTAzNTMzMlow GzEZMBcGA1UEAxMQZXN0RXhhbXBsZUNBIE93TjCCASIwDQYJKoZIhvcNAQEBBQAD ggEPADCCAQoCggEBAMA6qYh6KWiArm6Uam6RDey6kyKlhCxSAPagw4XhyCrsjh1v 2QD 0ZeEuWVOoGi1v5LLHgVMXZqMdyjcr7co3oSKH07tvHmVoYMuvywhBlkdzyvn 4DwQNJdCXyUf + / + KHl2Wu9KC1UHN4SOJAnqoxTLPm4mB9L6f0ZboX7cmeZM0Mh9RBr EZMNf6lCpE2fDwhfFRZWH6plKKrGkU8mW4yCOCfmOv4xBvqe0K3lvc3M LD3vN3P 7ocDCzlkJGbSrELYKOQqX2DI7gJpOENo6EKtr3MZXPljSh3 / sG6w29dTkWa4pfSE pSPeKLpnEc97gRtWIO8 / N4XQ32rJnX26fIDkjRUCAwEAAaNSMFAwDgYDVR0PAQH / BAQDAgSwMB0GA1UdDgQWBBQITTKxMqATXrfc4ffpCIbt6Gsz0jAfBgNVHSMEGDAW gBSxxGnmW6MEp9iXo4s7v7lqsjJCPDANBgkqhkiG9w0BAQUFAAOCAQEALhDaE6Mp BINBsJozdbXlijrWxL1CSv8f4GwpUFk3CgZjibt / qW9UoaNR4E58yRopuEhjwFZK 2w8YtRqx8IZoFhcoLkpBDfgLLwhoztzbYvOVKQMidjBlkBEVNR5MWdrs7F / AxWuy iZ2 + 8AnR8GwqEIbCD0A7xIghmWEMh / BVI9C7GLqd6PxKrTAjuDfEpfdWhU / uYKmK cL3XDbSwr30j2EQyaTV / 3W0Tn2UfuxdwDQ4ZJs9G + Mw50s7AG6CpISyOIFmX6 / nFのDpJXGLiLwfJ9C / aum9nylYuGCJ68BuTrCs9567KGfXEXI0mdFFCL7TaVR43kjsg3 c43kZ7369MeEZzCCAvswggHjoAMCAQICCQDprp3DmjOyETANBg kqhkiG9w0BAQUF ADAbMRkwFwYDVQQDExBlc3RFeGFtcGxlQ0EgTndOMB4XDTEzMDUwOTAzNTMzMloX DTE0MDUwOTAzNTMzMlowGzEZMBcGA1UEAxMQZXN0RXhhbXBsZUNBIE53TjCCASIw DQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJ5962d6zCR8H +は10zA / SuJrm8RwL7X Z67EH + Tn4LTIUSC + GnjzYQHYD8o / ApaMToA91E1fnUNVYjs1cTze2nIpKDp5CHUa Y6TqZMjKPipLxzEFxp0E27DAL9alrfUtdgzKaNBjgNXuBnt7neWDzk0f6uj74zed SBMGCpLBuwoJcGcAfuSW8IWK9g / 9Lm7Rpba4kVYsT1q77fsM / yE6ea3I4f / EUtyx PLUMt5EzYSRd2P3rEdrEoDojzYCLaAgE8rG2iDRD6 + DHpqjC + LQ6Uf2hvcvvEHu7 NS8jBbw5XradppgcpAAv + 5zmrf6cFJQdLDeduA9VwIM / GSr1q5IfmWjq94cCAwEA AaNCMEAwDwYDVR0TAQH / BAUwAwEB / zAdBgNVHQ4EFgQUscRp5lujBKfYl6OLO7 + 5 arIyQjwwDgYDVR0PAQH / BAQDAgEGMA0GCSqGSIb3DQEBBQUAA4IBAQBCz / CWdYvn GM / SdCdEiom5A1VxaW8nKgCWg / EyWtAIiaHQuViB jTUAE9lona2MbJoFHW8U5e8 9dCP0rJpA9UYXXhWvFQzd5ZWpms4wUYt1j3gqqd36KorJIAuPigVng13yKytxM7c VmxQnh0aux3aEnEyRGAhGalHp0RaKdgPRzUaGtipJTNBkSV5S4kD4yDCPHMNbBu + + + + OcluerwEpbz6GvE7CpXl2jrTBZSqBsFelq0iz4kk9 9CnwZwrVgdzklhRfJ1Z4j NkLruwbQ o4NvBZsXiKxNfn3K2o3SK8AuaEyDWkq18 + + + 5rjcfprRO8x4YTW 6mXPq jM0MAGNDEW + == 1oQAxAA"
    },
    {
      "indent": 0,
      "text": "A.2. CSR Attributes",
      "ja": "A.2。 CSRの属性"
    },
    {
      "indent": 3,
      "text": "The following is an example of a valid /csrattrs exchange. During this exchange, the EST client authenticates itself using an existing certificate issued by the CA for which the EST server provides services.",
      "ja": "以下は、有効/ csrattrs交換の一例です。この交換時には、ESTクライアントは、ESTサーバがサービスを提供するためにCAによって発行された既存の証明書を使用して自身を認証します。"
    },
    {
      "indent": 3,
      "text": "The initial TLS handshake is identical to the enrollment example handshake. The HTTP GET request:",
      "ja": "最初のTLSハンドシェイクは、登録例ハンドシェイクと同じです。 HTTPのGETリクエスト："
    },
    {
      "indent": 3,
      "text": "GET /.well-known/est/csrattrs HTTP/1.1\nUser-Agent: curl/7.22.0 (i686-pc-linux-gnu) libcurl/7.22.0 OpenS\nSL/1.0.1 zlib/1.2.3.4 libidn/1.23 librtmp/2.3\nHost: 192.0.2.1:8085\nAccept: */*",
      "raw": true
    },
    {
      "indent": 3,
      "text": "In response, the server provides suggested attributes that are appropriate for the authenticated client. In this example, the EST server also includes two example attributes that the client would ignore unless the attribute type is known to the client:",
      "ja": "応答では、サーバーは認証されたクライアントに適した提案の属性を提供します。この例では、ESTサーバは、2つの例では、属性タイプがクライアントに知られていない限り、クライアントは無視するだろうと属性が含まれています。"
    },
    {
      "indent": 3,
      "text": "HTTP/1.1 200 OK Status: 200 OK Content-Type: application/csrattrs Content-Transfer-Encoding: base64 Content-Length: 171",
      "ja": "HTTP / 1.1 200 OKステータス：200 OKのContent-Type：アプリケーション/ csrattrsコンテンツ転送 - エンコード：base64でのContent-Length：171"
    },
    {
      "indent": 3,
      "text": "MHwGBysGAQEBARYwIgYDiDcBMRsTGVBhcnNlIFNFVCBhcyAyLjk5OS4xIGRhdGEG CSqGSIb3DQEJBzAsBgOINwIxJQYDiDcDBgOINwQTGVBhcnNlIFNFVCBhcyAyLjk5 OS4yIGRhdGEGCSskAwMCCAEBCwYJYIZIAWUDBAIC",
      "ja": "MHwGBysGAQEBARYwIgYDiDcBMRsTGVBhcnNlIFNFVCBhcyAyLjk5OS4xIGRhdGEG CSqGSIb3DQEJBzAsBgOINwIxJQYDiDcDBgOINwQTGVBhcnNlIFNFVCBhcyAyLjk5 OS4yIGRhdGEGCSskAwMCCAEBCwYJYIZIAWUDBAIC"
    },
    {
      "indent": 0,
      "text": "A.3. Enroll/Re-enroll",
      "ja": "A.3。登録/再登録"
    },
    {
      "indent": 3,
      "text": "The following is an example of a valid /simpleenroll exchange. The data messages for /simplereenroll are similar.",
      "ja": "以下は、有効/ simpleenroll為替の一例です。用/ simplereenrollデータメッセージは似ています。"
    },
    {
      "indent": 3,
      "text": "During this exchange, the EST client uses an out-of-band distributed username/password to authenticate itself to the EST server. This is the normal HTTP WWW-Authenticate behavior and is included here for informative purposes. When an existing TLS client certificate is used, the server might skip requesting the HTTP WWW-Authenticate header, such as during a /simplereenroll operation.",
      "ja": "この交換時には、ESTクライアントは、ESTサーバーに対して自身を認証するために、アウトオブバンド分散のユーザー名/パスワードを使用しています。これは通常のHTTP WWW認証の動作であり、有益な目的のためにここに含まれています。既存のTLSクライアント証明書を使用すると、サーバーは、/ simplereenroll運転中など、HTTP WWW-Authenticateヘッダを要求してスキップすることがあります。"
    },
    {
      "indent": 3,
      "text": "During the initial TLS handshake, the client can ignore the optional server-generated \"certificate request\" and can instead proceed with the HTTP POST request. In response to the initial HTTP POST attempt, the server requests WWW-Authenticate from the client (this might occur even if the client used a client certificate, as detailed in the normative text above):",
      "ja": "最初のTLSハンドシェイク中に、クライアントは、オプションのサーバー生成「証明書要求」を無視することができ、代わりにHTTP POSTリクエストを続行することができます。最初のHTTP POSTの試みに応答して、サーバは、（これは上記の規範的な文章で説明するように、クライアントは、クライアント証明書を使用した場合でも発生する可能性があります）クライアントからのWWW認証を要求します。"
    },
    {
      "indent": 3,
      "text": "HTTP/1.1 401 Unauthorized Content-Length: 0 WWW-Authenticate: Digest qop=\"auth\", realm=\"estrealm\", nonce=\"1368141352\"",
      "ja": "HTTP / 1.1 401権限のContent-Length：0 WWW認証：ダイジェストQOP = \"認証\"、領域= \"estrealm\"、ナンス= \"1368141352\""
    },
    {
      "indent": 3,
      "text": "In the subsequent HTTP POST, the username/password is included, along with the complete application/pkcs10 content:",
      "ja": "その後のHTTP POSTでは、ユーザー名/パスワードが完全なアプリケーション/ PKCS10のコンテンツとともに、含まれています："
    },
    {
      "indent": 3,
      "text": "POST /.well-known/est/simpleenroll HTTP/1.1\nAuthorization: Digest username=\"estuser\", realm=\"estrealm\", nonc\ne=\"1368141352\", uri=\"/.well-known/est/simpleenroll\", cnonce=\"M\nTYwMzg3\", nc=00000001, qop=\"auth\", response=\"144cc27f96046f1d70e\nb16db20f75f22\"\nHost: 192.0.2.1:8085\nAccept: */*\nContent-Type: application/pkcs10\nContent-Transfer-Encoding: base64\nContent-Length: 882",
      "raw": true
    },
    {
      "indent": 3,
      "text": "MIIChTCCAW0CAQAwHzEdMBsGA1UEAxMUZGVtb3N0ZXA0IDEzNjgxNDEzNTIwggEi MA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQClNp+kdz+Nj8XpEp9kaumWxDZ3 eFYJpQKz9ddD5e5OzUeCm103ZIXQIxc0eVtMCatnRr3dnZRCAxGjwbqoB3eKt29/ XSQffVv+odbyw0WdkQOIbntCQry8YdcBZ+8LjI/N7M2krmjmoSLmLwU2V4aNKf0Y MLR5Krmah3Ik31jmYCSvwTnv6mx6pr2pTJ82JavhTEIIt/fAYq1RYhkM1CXoBL+y hEoDanN7TzC94skfS3VV+f53J9SkUxTYcy1Rw0k3VXfxWwy+cSKEPREl7I6k0YeK tDEVAgBIEYM/L1S69RXTLujirwnqSRjOquzkAkD31BE961KZCxeYGrhxaR4PAgMB AAGgITAfBgkqhkiG9w0BCQcxEhMQK3JyQ2lyLzcrRVl1NTBUNDANBgkqhkiG9w0B AQUFAAOCAQEARBv0AJeXaHpl1MFIdzWqoi1dOCf6U+qaYWcBzpLADvJrPK1qx5pq wXM830A1O+7RvrFv+nyd6VF2rl/MrNp+IsKuA9LYWIBjVe/LXoBO8dB/KxrYl16c VUS+Yydi1m/a+DaftYSRGolMLtWeiqbc2SDBr2kHXW1TR130hIcpwmr29kC2Kzur 5thsuj276FGL1vPu0dRfGQfx4WWa9uAHBgz6tW37CepZsrUKe/0pfVhr2oHxApYh cHGBQDQHVTFVjHccdUjAXicrtbsVhU5o1lPv7f4lEApv3SBQmJcaq5O832BzHw7n PyMFcM15E9gtUVee5C62bVwuk/tbnGsbwQ==",
      "ja": "MIIChTCCAW0CAQAwHzEdMBsGA1UEAxMUZGVtb3N0ZXA0IDEzNjgxNDEzNTIwggEi MA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQClNp + KDZ + Nj8XpEp9kaumWxDZ3 eFYJpQKz9ddD5e5OzUeCm103ZIXQIxc0eVtMCatnRr3dnZRCAxGjwbqoB3eKt29 / XSQffVv + odbyw0WdkQOIbntCQry8YdcBZ + 8LjI / N7M2krmjmoSLmLwU2V4aNKf0Y MLR5Krmah3Ik31jmYCSvwTnv6mx6pr2pTJ82JavhTEIIt / fAYq1RYhkM1CXoBL + Y hEoDanN7TzC94skfS3VV + f53J9SkUxTYcy1Rw0k3VXfxWwy + cSKEPREl7I6k0YeK tDEVAgBIEYM / L1S69RXTLujirwnqSRjOquzkAkD31BE961KZCxeYGrhxaR4PAgMB AAGgITAfBgkqhkiG9w0BCQcxEhMQK3JyQ2lyLzcrRVl1NTBUNDANBgkqhkiG9w0B AQUFAAOCAQEARBv0AJeXaHpl1MFIdzWqoi1dOCf6U + qaYWcBzpLADvJrPK1qx5pq wXM830A1O + 7RvrFv + nyd6VF2rl / mRNPs + IsKuA9LYWIBjVe / LXoBO8dB / KxrYl16c SUV + Yydi1m / A + DaftYSRGolMLtWeiqbc2SDBr2kHXW1TR130hIcpwmr29kC2Kzur 5thsuj276FGL1vPu0dRfGQfx4WWa9uAHBgz6tW37CepZsrUKe / 0pfVhr2oHxApYh cHGBQDQHVTFVjHccdUjAXicrtbsVhU5o1lPv7f4lEApv3SBQmJcaq5O832BzHw7n PyMFcM15E9gtUVee5C62bVwuk / tbnGsbwQ =="
    },
    {
      "indent": 3,
      "text": "The EST server uses the username/password to perform authentication/authorization and responds with the issued certificate:",
      "ja": "ESTサーバは、認証/認可を実行するためにユーザ名/パスワードを使用して発行された証明書で応答します。"
    },
    {
      "indent": 3,
      "text": "HTTP/1.1 200 OK Status: 200 OK Content-Type: application/pkcs7-mime; smime-type=certs-only Content-Transfer-Encoding: base64 Content-Length: 1122",
      "ja": "HTTP / 1.1 200 OKステータス：200 OKのContent-Type：アプリケーション/ PKCS7-MIME; SMIME型=本命専用コンテンツ転送 - エンコード：base64でのContent-Length：1122"
    },
    {
      "indent": 3,
      "text": "MIIDOAYJKoZIhvcNAQcCoIIDKTCCAyUCAQExADALBgkqhkiG9w0BBwGgggMLMIID BzCCAe+gAwIBAgIBFTANBgkqhkiG9w0BAQUFADAbMRkwFwYDVQQDExBlc3RFeGFt cGxlQ0EgTndOMB4XDTEzMDUwOTIzMTU1M1oXDTE0MDUwOTIzMTU1M1owHzEdMBsG A1UEAxMUZGVtb3N0ZXA0IDEzNjgxNDEzNTIwggEiMA0GCSqGSIb3DQEBAQUAA4IB DwAwggEKAoIBAQClNp+kdz+Nj8XpEp9kaumWxDZ3eFYJpQKz9ddD5e5OzUeCm103 ZIXQIxc0eVtMCatnRr3dnZRCAxGjwbqoB3eKt29/XSQffVv+odbyw0WdkQOIbntC Qry8YdcBZ+8LjI/N7M2krmjmoSLmLwU2V4aNKf0YMLR5Krmah3Ik31jmYCSvwTnv 6mx6pr2pTJ82JavhTEIIt/fAYq1RYhkM1CXoBL+yhEoDanN7TzC94skfS3VV+f53 J9SkUxTYcy1Rw0k3VXfxWwy+cSKEPREl7I6k0YeKtDEVAgBIEYM/L1S69RXTLuji rwnqSRjOquzkAkD31BE961KZCxeYGrhxaR4PAgMBAAGjUjBQMA4GA1UdDwEB/wQE AwIEsDAdBgNVHQ4EFgQU/qDdB6ii6icQ8wGMXvy1jfE4xtUwHwYDVR0jBBgwFoAU scRp5lujBKfYl6OLO7+5arIyQjwwDQYJKoZIhvcNAQEFBQADggEBACmxg1hvL6+7 a+lFTARoxainBx5gxdZ9omSb0L+qL+4PDvg/+KHzKsDnMCrcU6M4YP5n0EDKmGa6 4lY8fbET4tt7juJg6ixb95/760Th0vuctwkGr6+D6ETTfqyHnrbhX3lAhnB+0Ja7 o1gv4CWxh1I8aRaTXdpOHORvN0SMXdcrlCys2vrtOl+LjR2a3kajJO6eQ5leOdzF QlZfOPhaLWen0e2BLNJI0vsC2Fa+2LMCnfC38XfGALa5A8e7fNHXWZBjXZLBCza3 rEs9Mlh2CjA/ocSC/WxmMvd+Eqnt/FpggRy+F8IZSRvBaRUCtGE1lgDmu6AFUxce R4POrT2xz8ChADEA",
      "ja": "mııdoayjkozıhvcnaqccoııdktccayucaqexadalbgkqhkig9w0bbwggggmlmııdbzcca A +gawıbagıbftanbgkqhkig9w0baqufadabmrkwfwydvqqdexblc3rfegftcgxlq0egtndomb4xdtezmduwotızmtu1m1oxdte0mduwotızmtu1m1owhzedmbsga1ueaxmuzgvtb3n0zxa0ıdeznjgxndezntıwggeima0gcsqgsıb3dqebaquaa4ıbdwawggekaoıbaqclnp+ Kdz + nj8xpep9kaumwxdz3efyjpqkz9ddd5e5ozuecm103zıxqıxc0evtmcatnrr3dnzrcaxgjwbqob3ekt29/ xsqffvv +odbyw0wdkqoıbntcqry8ydcbz + 8LJ /n7m2krmjmoslmlwu2v4ankf0ymlr5krmah3ık31jmycsvwtnv6mx6pr2ptj82javhteııt/ fayq1ryhkm1cxobl + yheodann7tzc94skfs3vv + F53 j9skuxtycy1rw0k3vxfxwwy +cskeprel7ı6k0yektdevagbıeym/awıesdadbgnvhq4efgqrwnqsrjoquzkakd31be961kzcxeygrhxar4pagmbaagjujbqma4ga1uddweb / WQE l1s69rxtluj / qddb6ii6icq8wgmxvy1jfe4xtuwhwydvr0jbbgwfoa scrp5lujbkfyl6olo7 +5arıyqjwwdqyjkozıhvcnaqefbqadggebacmxg1hvl6+ 7 + lftaroxainbx5gxdz9omsb0l + QL + 4pdvg / + khzksdnmcrcu6m4yp5n0edkmga6 4ly8fbet4tt7jujg6ixb95 / 760th0vuctwkgr6 d6ettfqyhnrbhx3lahnb + + + ljr2a3kajjo6eq5leodzfqlzfophalwen0e2blnjı0vsc20ja7o1gv4cwxh1ı8aratxdpohorvn0smxdcrlcys2vrtol F + 2lmcnfc38xfgala5a8e7fnhxwzbjxzlbcza3 res9mlh2cj A / OCSC / wxmmvd Eqnt + / +f8ızsrvbaructge1lgdmu6afuxfpggryにr4port2xz8chadeによって"
    },
    {
      "indent": 0,
      "text": "A.4. Server Key Generation",
      "ja": "A.4。サーバキーの生成"
    },
    {
      "indent": 3,
      "text": "The following is an example of a valid /serverkeygen exchange. During this exchange, the EST client authenticates itself using an existing certificate issued by the CA the EST server provides services for.",
      "ja": "以下は、有効/ serverkeygen交換の一例です。この交換時には、ESTクライアントは、ESTサーバがためのサービスを提供してCAによって発行された既存の証明書を使用して自身を認証します。"
    },
    {
      "indent": 3,
      "text": "The initial TLS handshake is identical to the enrollment example handshake. An example HTTP POSTed message is:",
      "ja": "最初のTLSハンドシェイクは、登録例ハンドシェイクと同じです。たとえば、HTTP投稿されたメッセージは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "POST /.well-known/est/serverkeygen HTTP/1.1\nHost: 192.0.2.1:8085\nAccept: */*\nExpect: 100-continue\nContent-Type: application/pkcs10\nContent-Transfer-Encoding: base64\nContent-Length: 963",
      "raw": true
    },
    {
      "indent": 3,
      "text": "MIICwTCCAakCAQAwWzE+MDwGA1UEAxM1c2VydmVyS2V5R2VuIHJlcSBieSBjbGll bnQgaW4gZGVtbyBzdGVwIDEyIDEzNjgxNDE5NTUxGTAXBgNVBAUTEFBJRDpXaWRn ZXQgU046MTAwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCvE1/6m4A/ 3/L32Suyzbf28LM9y8CQfp0aepa7o20BSfluvm8HXR44mlV+wpieM8H5n3Ub3RIo RUun/FllIzK9uV7UrkqJ3Yzmq2NOoTd4C+OPsV/RPTu873dhFrssDk3P4NIphlSS sSIkt5rhz7wYbCqCFR5Aphe/30Jx7D+xBI5Rs8e6vRS8IpuImh71BHiLfhq9AFhz 4ZJsOUSVpUmqUogFsM7SOQ6XI4dl+djhpjT+YTJ6hQ2PXrqdch3KsTQ8c6aKs+e2 5QJxh7O8JHVlPHo4YIxXtAYSutcbbTN5TXWFCWSrWDJ+zuMmk2yU+dio1oW7YR7V ftAvazJ3laQbAgMBAAGgITAfBgkqhkiG9w0BCQcxEhMQZEZzQVhtSm5qb2tCdER2 cjANBgkqhkiG9w0BAQUFAAOCAQEAR+I0EQB+hSjrLCAjnVH6bZdHUNGszIdwx1iu L4n+0XK3SfEzeOMkC4T74yFGKj3redS1Ht9atYUPb0D1Qi9Jf9Co8eLblo1l19A6 GaS798ofxIF0Pl0Dr6/GqjheqJEIbcDTAJq+kvDihyQ4GQnhosygIZHvKppQlebA gvp2RJSnMroPCe6RgTU9E2fmI9rin/9PyXeWFF1namp+lYbTGwjv1aE1ikhjCLlH veHhCdgOExPw+fqhKhHjp+0ZKBlo2bC3pqRWvDTiZuwt9UpFFfGtuxvpTp44oS/j M/965hWIw/5dshY/wQjIfYs07bbq2ERbpJiw9bAQY34gyoVmEQ==",
      "ja": "MIICwTCCAakCAQAwWzE + MDwGA1UEAxM1c2VydmVyS2V5R2VuIHJlcSBieSBjbGll bnQgaW4gZGVtbyBzdGVwIDEyIDEzNjgxNDE5NTUxGTAXBgNVBAUTEFBJRDpXaWRn ZXQgU046MTAwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCvE1 / 6m4A / 3 / L32Suyzbf28LM9y8CQfp0aepa7o20BSfluvm8HXR44mlV + wpieM8H5n3Ub3RIoラン/ FllIzK9uV7UrkqJ3Yzmq2NOoTd4C + OPsV / RPTu873dhFrssDk3P4NIphlSS sSIkt5rhz7wYbCqCFR5Aphe / 30Jx7D + xBI5Rs8e6vRS8IpuImh71BHiLfhq9AFhz 4ZJsOUSVpUmqUogFsM7SOQ6XI4dl + djhpjT + YTJ6hQ2PXrqdch3KsTQ8c6aKs + E2 5QJxh7O8JHVlPHo4YIxXtAYSutcbbTN5TXWFCWSrWDJ + zuMmk2yU + dio1oW7YR7V ftAvazJ3laQbAgMBAAGgITAfBgkqhkiG9w0BCQcxEhMQZEZzQVhtSm5qb2tCdER2 cjANBgkqhkiG9w0BAQUFAAOCAQEAR + I0EQB + hSjrLCAjnVH6bZdHUNGszIdwx1iu L4nと+ 0XK3SfEzeOMkC4T74yFGKj3redS1Ht9atYUPb0D1Qi9Jf9Co8eLblo1l19A6 GaS798ofxIF0Pl0Dr6 / GqjheqJEIbcDTAJq + kvDihyQ4GQnhosygIZHvKppQlebA gvp2RJSnMroPCe6RgTU9E2fmI9rin / 9PyXeWFF1namp lYbTGwjv1aE1ikhjCLlH veHhCdgOExPw + + + fqhKhHjp 0ZKBlo2bC3pqRWvDTiZuwt9UpFFfGtuxvpTp44oS / N / 965hWIw / 5dshY / wQjIfYs07bbq2ERbpJiw9bAQY34gyoVmEQ =="
    },
    {
      "indent": 3,
      "text": "Because the DecryptKeyIdentifier attribute is not included in this request, the response does not include additional encryption beyond the TLS session. The EST server response is:",
      "ja": "DecryptKeyIdentifier属性は、この要求に含まれていないため、応答がTLSセッションを超えた追加の暗号化が含まれていません。 ESTサーバーの応答は次のようになります。"
    },
    {
      "indent": 3,
      "text": "HTTP/1.1 200 OK Status: 200 OK Content-Type: multipart/mixed ; boundary=estServerExampleBoundary Content-Length: 3219",
      "ja": "HTTP / 1.1 200 OKステータス：200 OKのContent-Type：multipart / mixedの。境界= estServerExampleBoundaryのContent-Length：3219"
    },
    {
      "indent": 3,
      "text": "This is the preamble. It is to be ignored, though it is a handy place for estServer to include an explanatory note, including contact or support information. --estServerExampleBoundary Content-Type: application/pkcs8 Content-Transfer-Encoding: base64",
      "ja": "これは前文です。 estServerは、説明文を含める連絡先を含むか、情報をサポートするのは、それが便利な場所ですが、無視することがあります。 --estServerExampleBoundaryのContent-Type：アプリケーション/ PKCS8コンテンツ転送 - エンコード：BASE64"
    },
    {
      "indent": 3,
      "text": "MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDPwKtwJ7TjMgA+ Poj64V909ryql0foP1hU4Yq5y8/bOP5ZTe6ArgVhUye099Ac+dfdwpyP/DESiujU F/dS62Vck3UWNbnw+4O38FUp0enLbbjSTud48KpEW6+FzkeuAanPGZMA1wKyrYy9 rD5tQOOJU/CBVhUrITyYLZNYUe4agbpcR0wMtrRr2E58Mu8wQ80ryk6nkL7COk5Z IQdNRxldk7DFvpA85Yn1stumoGRtVLW51iXeTS1LtXwhuUb/j6Lds3vvAiJ2SiZ0 Y3rxPlnJVyFmR8Mf2TBOjzuFqva/VLD2ayQjgaGEjq2ZWHXelQAOZ6N3lrChojEK FGq93yOhAgMBAAECggEBALQ5az/nYjd5x9Y3f7NMUffwl+jRRfMHCMTRx/u4AEAo KBYm0hFVZZtxfM+z7xlD8G0Th6gs2hFA6gwcIlUPmiX+UaOLxht0xWaLGgYmcNAm BiCDjLBQ7xRQCWtlcK9WCA5+HBWtcEy6244rXxh+IyWd6NT6bXC165AEcX87y/e3 JFJ7XFNeDP656s2DmxSCci+iDte6SaEm7sJvYGu16qevJeMThcQcC9/rJjXkvpGL IKK2px5idad4Pb6+QHpqj3d4oM8djO6wYUvrH8XQLqAaF8Hd5lFWVU57nSYY+H79 GaNDTfRTUL6AXr7kmMsKVFOJ0JjZExUCVMZtGiqhB6UCgYEA639OtdWLZCzyZFMe p7VlRddoz0VAtrU2dxnEb4cWD8Gerg8uNvp8OG84gH+6MbPwz4ZYWKCgDFqyrAlw SF02n9Sovh93eoJ5latSbfeYUkLtB8L/HVk5/CBGEsV9MUkdMF0+B43YlhyEDyKW fX2+0UeHLFgRrfpSzP2cXduEieMCgYEA4db/SIrwN2+g1Gjo3oE09kd89VGjVRer srbcqc7DcPXP6Lw42sx96h4jVWWqHVo3DfwFBdUb1LH2cnVXQjgDUHdNdpl01cf/ BFYCFINi2qKMqiJYswkhYxZ1BLz/zuQTDbPFL2PgLniKFG2aFLrTS3S/tgeB5QwI RPigH3kfI6sCgYAPqsCJyFMlrvfRRNZdQewi4VnPsEPF4/hjpAs1gD8vfSoZWlkw vylUd9HCerzgYaA7rixieQ0sxTvtxhL6PXlM2NEBFQbV16hPFL6/IiG4F0u9oHNo eG8rHtqKlSjnBn4yoYFm70Dhe7QtbZelcaAoPCH6CUHj2St5B8ZHWDtREQKBgHNp wER+XIy4C2UByCANv9csaXulIOdXlXNbaCGPfOm5dWrm5ddLMf33MO9vaSRe+ku3 Q4nbgsGLwPp1ZQZ+QZNZpMi7W6306yp4GdAJ5Pb+oww/ST0VqW5OB7dILyK4A9S4 zkiNrf+Rsl8GM/vsDhc9rsuDwqofIAq/VHVBHNzJAoGBAOHQof5L6iGHOHcxLazx 4MGvRTpmzU/PX6Q3QxqpetEGFEDZAaL58L67SSS3fFBnKrVAidF6llC1bAH1aoRa fYHUDi45xBoroy0hBwrnTKRxppua4UK75FUH5PPJfR6cCvw5stRkzIevTZHhozkX pM7PYH/x4BiBmgQ3bhOqTp4H --estServerExampleBoundary Content-Type: application/pkcs7-mime; smime-type=certs-only Content-Transfer-Encoding: base64",
      "ja": "MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDPwKtwJ7TjMgA + Poj64V909ryql0foP1hU4Yq5y8 / bOP5ZTe6ArgVhUye099Ac + dfdwpyP / DESiujU F / dS62Vck3UWNbnw + 4O38FUp0enLbbjSTud48KpEW6 + FzkeuAanPGZMA1wKyrYy9 rD5tQOOJU / CBVhUrITyYLZNYUe4agbpcR0wMtrRr2E58Mu8wQ80ryk6nkL7COk5Z IQdNRxldk7DFvpA85Yn1stumoGRtVLW51iXeTS1LtXwhuUb / j6Lds3vvAiJ2SiZ0 Y3rxPlnJVyFmR8Mf2TBOjzuFqva / VLD2ayQjgaGEjq2ZWHXelQAOZ6N3lrChojEK FGq93yOhAgMBAAECggEBALQ5az / nYjd5x9Y3f7NMUffwl + jRRfMHCMTRx / u4AEAo KBYm0hFVZZtxfM + z7xlD8G0Th6gs2hFA6gwcIlUPmiX + UaOLxht0xWaLGgYmcNAm BiCDjLBQ7xRQCWtlcK9WCA5 + HBWtcEy6244rXxh + IyWd6NT6bXC165AEcX87y / E3 JFJ7XFNeDP656s2DmxSCci + iDte6SaEm7sJvYGu16qevJeMThcQcC9 / rJjXkvpGL IKK2px5idad4Pb6 + QHpqj3d4oM8djO6wYUvrH8XQLqAaF8Hd5lFWVU57nSYY + H79 GaNDTfRTUL6AXr7kmMsKVFOJ0JjZExUCVMZtGiqhB6UCgYEA639OtdWLZCzyZFMe p7VlRddoz0VAtrU2dxnEb4cWD8Gerg8uNvp8OG84gH + 6MbPwz4ZYWKCgDFqyrAlw SF02n9Sovh93eoJ5latSbfeYUkLtB8L / HVk5 / CBGEsV9MUkdMF0 + B43YlhyEDyKW FX2 + 0UeHLFgRrfpSzP2cXduEieMCgYEA4db / SIrwN2 + g1Gjo3oE09kd89VGjVRer srbcqc7DcPXP6Lw42sx96h4jV WWqHVo3DfwFBdUb1LH2cnVXQjgDUHdNdpl01cf / BFYCFINi2qKMqiJYswkhYxZ1BLz / zuQTDbPFL2PgLniKFG2aFLrTS3S / tgeB5QwI RPigH3kfI6sCgYAPqsCJyFMlrvfRRNZdQewi4VnPsEPF4 / hjpAs1gD8vfSoZWlkw vylUd9HCerzgYaA7rixieQ0sxTvtxhL6PXlM2NEBFQbV16hPFL6 / IiG4F0u9oHNo eG8rHtqKlSjnBn4yoYFm70Dhe7QtbZelcaAoPCH6CUHj2St5B8ZHWDtREQKBgHNp WER + XIy4C2UByCANv9csaXulIOdXlXNbaCGPfOm5dWrm5ddLMf33MO9vaSRe + ku3 Q4nbgsGLwPp1ZQZ + QZNZpMi7W6306yp4GdAJ5Pb + OWW / ST0VqW5OB7dILyK4A9S4 zkiNrf + Rsl8GM / vsDhc9rsuDwqofIAq / VHVBHNzJAoGBAOHQof5L6iGHOHcxLazx 4MGvRTpmzU / PX6Q3QxqpetEGFEDZAaL58L67SSS3fFBnKrVAidF6llC1bAH1aoRa fYHUDi45xBoroy0hBwrnTKRxppua4UK75FUH5PPJfR6cCvw5stRkzIevTZHhozkX pM7PYH / x4BiBmgQ3bhOqTp4H --estServerExampleBoundaryのContent-Type：アプリケーション/ PKCS7 -mime; SMIME型=本命専用コンテンツ転送 - エンコード：BASE64"
    },
    {
      "indent": 3,
      "text": "MIIDRQYJKoZIhvcNAQcCoIIDNjCCAzICAQExADALBgkqhkiG9w0BBwGgggMYMIID FDCCAfygAwIBAgIBFjANBgkqhkiG9w0BAQUFADAbMRkwFwYDVQQDExBlc3RFeGFt cGxlQ0EgTndOMB4XDTEzMDUwOTIzMjU1NloXDTE0MDUwOTIzMjU1NlowLDEqMCgG A1UEAxMhc2VydmVyc2lkZSBrZXkgZ2VuZXJhdGVkIHJlc3BvbnNlMIIBIjANBgkq hkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAz8CrcCe04zIAPj6I+uFfdPa8qpdH6D9Y VOGKucvP2zj+WU3ugK4FYVMntPfQHPnX3cKcj/wxEoro1Bf3UutlXJN1FjW58PuD t/BVKdHpy2240k7nePCqRFuvhc5HrgGpzxmTANcCsq2Mvaw+bUDjiVPwgVYVKyE8 mC2TWFHuGoG6XEdMDLa0a9hOfDLvMEPNK8pOp5C+wjpOWSEHTUcZXZOwxb6QPOWJ 9bLbpqBkbVS1udYl3k0tS7V8IblG/4+i3bN77wIidkomdGN68T5ZyVchZkfDH9kw To87har2v1Sw9mskI4GhhI6tmVh13pUADmejd5awoaIxChRqvd8joQIDAQABo1Iw UDAOBgNVHQ8BAf8EBAMCBLAwHQYDVR0OBBYEFKeZixu9F+appDX2SS5HaxmV6Jr4 MB8GA1UdIwQYMBaAFLHEaeZbowSn2Jejizu/uWqyMkI8MA0GCSqGSIb3DQEBBQUA A4IBAQBHhLmRAKrnTapqqBObDM9IQDQPuwW+fW1gYwZKlSm/IWIwHEZL1igXhpjj rf4xqpIkiJMmkaOeoXA8PFniX0/lZM9FQSM/j89CUf5dMoAqWj8s17xuXu9L/hVe XjjXHsL40WuDG6tMPN9vcT8tE3ruor608MKSHFX/NEM6+AaNVSUPTmB33BgYB1Wa E7pn3JMN6pjIxsHnF4pKi8qvoTSVVjaCEwUe8Q/fw1yvjoHoYJtyMn4v5Kb3Rt+m s8Yie1tcfVQrjQutqr34/IJsKdPziZwi92KZa+1958A6M9O/p5OI0up9ZXKg2DEC 1O9qT0GyYJ6sxAyKiGTOxk6jMddDoQAxAA== --estServerExampleBoundary-- This is the epilogue. It is also to be ignored.",
      "ja": "MIIDRQYJKoZIhvcNAQcCoIIDNjCCAzICAQExADALBgkqhkiG9w0BBwGgggMYMIID FDCCAfygAwIBAgIBFjANBgkqhkiG9w0BAQUFADAbMRkwFwYDVQQDExBlc3RFeGFt cGxlQ0EgTndOMB4XDTEzMDUwOTIzMjU1NloXDTE0MDUwOTIzMjU1NlowLDEqMCgG A1UEAxMhc2VydmVyc2lkZSBrZXkgZ2VuZXJhdGVkIHJlc3BvbnNlMIIBIjANBgkq hkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAz8CrcCe04zIAPj6I + uFfdPa8qpdH6D9Y VOGKucvP2zj + WU3ugK4FYVMntPfQHPnX3cKcj / wxEoro1Bf3UutlXJN1FjW58PuD T / BVKdHpy2240k7nePCqRFuvhc5HrgGpzxmTANcCsq2Mvaw + bUDjiVPwgVYVKyE8 mC2TWFHuGoG6XEdMDLa0a9hOfDLvMEPNK8pOp5C + wjpOWSEHTUcZXZOwxb6QPOWJ 9bLbpqBkbVS1udYl3k0tS7V8IblG / 4 + i3bN77wIidkomdGN68T5ZyVchZkfDH9kw To87har2v1Sw9mskI4GhhI6tmVh13pUADmejd5awoaIxChRqvd8joQIDAQABo1Iw UDAOBgNVHQ8BAf8EBAMCBLAwHQYDVR0OBBYEFKeZixu9F + appDX2SS5HaxmV6Jr4 MB8GA1UdIwQYMBaAFLHEaeZbowSn2Jejizu / uWqyMkI8MA0GCSqGSIb3DQEBBQUA A4IBAQBHhLmRAKrnTapqqBObDM9IQDQPuwW + fW1gYwZKlSm / IWIwHEZL1igXhpjj rf4xqpIkiJMmkaOeoXA8PFniX0 / lZM9FQSM / j89CUf5dMoAqWj8s17xuXu9L / HVE XjjXHsL40WuDG6tMPN9vcT8tE3ruor608MKSHFX / NEM6 + AaNVSUPTmB33BgYB1Wa E7pn3JMN6pjIxsHnF4pKi8qvo TSVVjaCEwUe8Q / fw1yvjoHoYJtyMn4v5Kb3Rt + M s8Yie1tcfVQrjQutqr34 / IJsKdPziZwi92KZa + 1958A6M9O / p5OI0up9ZXKg2DEC 1O9qT0GyYJ6sxAyKiGTOxk6jMddDoQAxAA == --estServerExampleBoundary--これはエピローグです。それは無視されることもあります。"
    },
    {
      "indent": 0,
      "text": "Appendix B. Contributors and Acknowledgements",
      "ja": "付録B.協力者と謝辞"
    },
    {
      "indent": 3,
      "text": "The editors would like to thank Stephen Kent, Vinod Arjun, Jan Vilhuber, Sean Turner, Russ Housley, and others for their feedback and prototypes of early versions of this document. Our thanks also go the authors of [RFC6403], around whose document we structured part of this specification.",
      "ja": "編集者は、彼らのフィードバックと、このドキュメントの初期バージョンのプロトタイプのためのスティーブン・ケント、ビノッドアルジュン、ヤンVilhuber、ショーン・ターナー、ラスHousley、および他の人に感謝したいと思います。私たちの感謝はまた、その文書、我々は本明細書の一部を構造化[RFC6403]の著者を、周りに行きます。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Max Pritikin (editor) Cisco Systems, Inc. 510 McCarthy Drive Milpitas, CA 95035 USA",
      "ja": "マックスPritikin（エディタ）は、Cisco Systems、Inc.の510マッカーシードライブミルピタス、CA 95035 USA"
    },
    {
      "indent": 3,
      "text": "EMail: pritikin@cisco.com",
      "ja": "メールアドレス：pritikin@cisco.com"
    },
    {
      "indent": 3,
      "text": "Peter E. Yee (editor) AKAYLA, Inc. 7150 Moorland Drive Clarksville, MD 21029 USA",
      "ja": "ピーター・E.イー（編集者）AKAYLA、Inc.の7150ムーアランドドライブクラークスビル、MD 21029 USA"
    },
    {
      "indent": 3,
      "text": "EMail: peter@akayla.com",
      "ja": "メールアドレス：peter@akayla.com"
    },
    {
      "indent": 3,
      "text": "Dan Harkins (editor) Aruba Networks 1322 Crossman Avenue Sunnyvale, CA 94089-1113 USA",
      "ja": "ダンハーキンズ（エディタ）アルバネットワークス1322クロスマンアベニューサニーベール、CA 94089から1113 USA"
    },
    {
      "indent": 3,
      "text": "EMail: dharkins@arubanetworks.com",
      "ja": "メールアドレス：dharkins@arubanetworks.com"
    }
  ]
}