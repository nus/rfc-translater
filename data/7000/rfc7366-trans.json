{
  "title": {
    "text": "RFC 7366 - Encrypt-then-MAC for Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)",
    "ja": "RFC 7366 - 暗号化-その後、-MACトランスポート層セキュリティ（TLS）およびデータグラムトランスポート層セキュリティ（DTLS）のために"
  },
  "number": 7366,
  "created_at": "2019-11-01 05:22:34.477408+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                        P. Gutmann\nRequest for Comments: 7366                        University of Auckland\nCategory: Standards Track                                 September 2014\nISSN: 2070-1721",
      "raw": true
    },
    {
      "indent": 8,
      "text": "Encrypt-then-MAC for Transport Layer Security (TLS) and\n        Datagram Transport Layer Security (DTLS)",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document describes a means of negotiating the use of the encrypt-then-MAC security mechanism in place of the existing MAC-then-encrypt mechanism in Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS). The MAC-then-encrypt mechanism has been the subject of a number of security vulnerabilities over a period of many years.",
      "ja": "この文書では、トランスポート層セキュリティ（TLS）およびデータグラムトランスポート層セキュリティ（DTLS）内の既存のMAC-その後、暗号化メカニズムの代わりに、暗号化、そして-MACのセキュリティメカニズムの使用を交渉する手段が記載されています。 MAC-当時の暗号化メカニズムは、長年にわたってセキュリティ脆弱性の数の対象となっています。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 5741のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc7366.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc7366で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2014 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2014 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2\n  1.1.  Conventions Used in This Document . . . . . . . . . . . .   2\n2.  Negotiating Encrypt-then-MAC  . . . . . . . . . . . . . . . .   2\n  2.1.  Rationale . . . . . . . . . . . . . . . . . . . . . . . .   3\n3.  Applying Encrypt-then-MAC . . . . . . . . . . . . . . . . . .   3\n  3.1.  Rehandshake Issues  . . . . . . . . . . . . . . . . . . .   5\n4.  Security Considerations . . . . . . . . . . . . . . . . . . .   6\n5.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   6\n6.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .   7\n7.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   7\n  7.1.  Normative References  . . . . . . . . . . . . . . . . . .   7\n  7.2.  Informative References  . . . . . . . . . . . . . . . . .   7",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "TLS [2] and DTLS [4] use a MAC-then-encrypt construction that was regarded as secure at the time the original Secure Socket Layer (SSL) protocol was specified in the mid-1990s, but that is no longer regarded as secure [5] [6]. This construction, as used in TLS and later DTLS, has been the subject of numerous security vulnerabilities and attacks stretching over a period of many years. This document specifies a means of switching to the more secure encrypt-then-MAC construction as part of the TLS/DTLS handshake, replacing the current MAC-then-encrypt construction. (In this document, \"MAC\" refers to \"Message Authentication Code\".)",
      "ja": "TLS [2]及びDTLS [4]は、元のSecure Socket Layer（SSL）プロトコルは、1990年代半ばに指定された時間にセキュアであるとみなされたMAC-次いで暗号化構成を使用し、それは、もはやセキュアとみなされません[5] [6]。この構造は、TLS、後DTLSで使用されるように、長年にわたって伸び多数のセキュリティ上の脆弱性や攻撃の対象となっています。このドキュメントは、TLS / DTLSハンドシェイクの一部として、より安全な暗号-THEN-MAC構造にスイッチング電流MAC-次いで、暗号化構成を交換する手段を指定します。 （この文書では、「MAC」とは、「メッセージ認証コード」を意味します。）"
    },
    {
      "indent": 0,
      "text": "1.1. Conventions Used in This Document",
      "section_title": true,
      "ja": "1.1. このドキュメントの表記規則"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [1].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はあります[1]に記載のように解釈されます。"
    },
    {
      "indent": 0,
      "text": "2. Negotiating Encrypt-then-MAC",
      "section_title": true,
      "ja": "2.交渉を暗号化し、その後、-MAC"
    },
    {
      "indent": 3,
      "text": "The use of encrypt-then-MAC is negotiated via TLS/DTLS extensions as defined in TLS [2]. On connecting, the client includes the encrypt_then_mac extension in its client_hello if it wishes to use encrypt-then-MAC rather than the default MAC-then-encrypt. If the server is capable of meeting this requirement, it responds with an encrypt_then_mac in its server_hello. The \"extension_type\" value for this extension SHALL be 22 (0x16), and the \"extension_data\" field of this extension SHALL be empty. The client and server MUST NOT use encrypt-then-MAC unless both sides have successfully exchanged encrypt_then_mac extensions.",
      "ja": "TLS [2]で定義されるように使用する暗号化は、その後、MACは、TLS / DTLS拡張を介して交渉されます。それはデフォルトのMAC-当時の暗号化ではなく、暗号化、そして-MACを使用したい場合は、接続には、クライアントはそのCLIENT_HELLOでencrypt_then_mac拡張子を含みます。サーバはこの要件を満たすことができるならば、それはそのserver_helloでencrypt_then_macで応答します。この拡張は、「EXTENSION_TYPE」値は22（0x16）でなければならない、この拡張の「拡大」フィールドは空でなければなりません。両側が正常encrypt_then_mac拡張を交換していない限り、クライアントとサーバが暗号化・その後、-MACを使用してはなりません。"
    },
    {
      "indent": 0,
      "text": "2.1. Rationale",
      "section_title": true,
      "ja": "2.1. 理由"
    },
    {
      "indent": 3,
      "text": "The use of TLS/DTLS extensions to negotiate an overall switch is preferable to defining new ciphersuites because the latter would result in a Cartesian explosion of suites, potentially requiring duplicating every single existing suite with a new one that uses encrypt-then-MAC. In contrast, the approach presented here requires just a single new extension type with a corresponding minimal-length extension sent by client and server.",
      "ja": "後者は、潜在的に暗号化-THEN-MACを使用して新しいものとすべての単一の既存のスイートを複製する必要、スイートのデカルト爆発につながるため、全体のスイッチを交渉するためにTLS / DTLS拡張の使用は、新しい暗号スイートを定義することが好ましいです。これとは対照的に、ここで紹介する方法は、クライアントとサーバから送られた、対応する最小限の長さの拡張子を持つただ一つの新しい拡張タイプが必要です。"
    },
    {
      "indent": 3,
      "text": "Another possibility for introducing encrypt-then-MAC would be to make it part of TLS 1.3; however, this would require the implementation and deployment of all of TLS 1.2 just to support a trivial code change in the order of encryption and MAC'ing. In contrast, deploying encrypt-then-MAC via the TLS/DTLS extension mechanism required changing less than a dozen lines of code in one implementation (not including the handling for the new extension type, which was a further 50 or so lines of code).",
      "ja": "暗号化-その後、-MACを導入するための別の可能性は、それTLS 1.3の一部にすることであろう。しかし、これは単に暗号化とMAC'ingの順に些細なコード変更をサポートするために、TLS 1.2のすべての実装と展開が必要となります。対照的に、TLS / DTLS拡張機構を介して暗号化-THEN-MACを展開する（コードのさらなる50本のまたはそう線た新しい拡張タイプの取り扱い、含まない）一の実施態様では、コードのダースライン未満の変化に必要な。"
    },
    {
      "indent": 3,
      "text": "The use of extensions precludes use with SSL 3.0, but then it's likely that anything still using that protocol, which is nearly two decades old, will be vulnerable to any number of other attacks anyway, so there seems little point in bending over backwards to accommodate SSL 3.0.",
      "ja": "エクステンションの使用は、SSL 3.0を使用して排除するが、それはほぼ二十年古いですが、まだそのプロトコルを使用して何が、とにかく他の攻撃の任意の数に対して脆弱になる可能性が高いですので、後方に曲げ少しポイントが対応するためにあるようですSSL 3.0。"
    },
    {
      "indent": 0,
      "text": "3. Applying Encrypt-then-MAC",
      "section_title": true,
      "ja": "3.暗号化-その後、-MACを適用します"
    },
    {
      "indent": 3,
      "text": "Once the use of encrypt-then-MAC has been negotiated, processing of TLS/DTLS packets switches from the standard:",
      "ja": "ネゴシエートされた暗号化-THEN-MACを使用すると、TLS / DTLSパケットの処理は、標準からのスイッチ。"
    },
    {
      "indent": 3,
      "text": "encrypt( data || MAC || pad )",
      "ja": "暗号化（データ|| || MACパッド）"
    },
    {
      "indent": 3,
      "text": "to the new:",
      "ja": "新へ："
    },
    {
      "indent": 3,
      "text": "encrypt( data || pad ) || MAC",
      "ja": "暗号化（データ||パッド）||マック"
    },
    {
      "indent": 3,
      "text": "with the MAC covering the entire packet up to the start of the MAC value. In TLS [2] notation, the MAC calculation for TLS 1.0 without the explicit Initialization Vector (IV) is:",
      "ja": "MACはMAC値の先頭にパケット全体のアップをカバーします。 TLS [2]の明示的な初期化ベクトル（IV）なしの表記、TLS 1.0のMAC計算です。"
    },
    {
      "indent": 3,
      "text": "MAC(MAC_write_key, seq_num + TLSCipherText.type + TLSCipherText.version + TLSCipherText.length + ENC(content + padding + padding_length));",
      "ja": "MAC（MAC_write_key、SEQ_NUM + TLSCipherText.type + TLSCipherText.version + TLSCipherText.length + ENC（コンテンツ+パディング+するpadding_length））。"
    },
    {
      "indent": 3,
      "text": "and for TLS 1.1 and greater with an explicit IV is:",
      "ja": "明示的なIVとのTLS 1.1と大きいためです。"
    },
    {
      "indent": 3,
      "text": "MAC(MAC_write_key, seq_num + TLSCipherText.type + TLSCipherText.version + TLSCipherText.length + IV + ENC(content + padding + padding_length));",
      "ja": "MAC（MAC_write_key、SEQ_NUM + TLSCipherText.type + TLSCipherText.version + TLSCipherText.length + IV + ENC（コンテンツ+パディング+するpadding_length））。"
    },
    {
      "indent": 3,
      "text": "(For DTLS, the sequence number is replaced by the combined epoch and sequence number as per DTLS [4].) The final MAC value is then appended to the encrypted data and padding. This calculation is identical to the existing one, with the exception that the MAC calculation is run over the payload ciphertext (the TLSCipherText PDU) rather than the plaintext (the TLSCompressed PDU).",
      "ja": "最終的なMAC値は、次に、暗号化されたデータとパディングに付加される（DTLSの場合、シーケンス番号はDTLS [4]の通り合成エポックとシーケンス番号に置き換えられています）。この計算は、MAC計算は、ペイロード暗号文（TLSCipherText PDU）よりもむしろ、平文（TLSCompressed PDU）上で実行されることを除いて、既存のものと同一です。"
    },
    {
      "indent": 3,
      "text": "The overall TLS packet [2] is then:",
      "ja": "[2]全体的なTLSパケットは次にあります。"
    },
    {
      "indent": 3,
      "text": "struct {\n       ContentType type;\n       ProtocolVersion version;\n       uint16 length;\n       GenericBlockCipher fragment;\n       opaque MAC;\n       } TLSCiphertext;",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The equivalent DTLS packet [4] is then:",
      "ja": "[4]等価DTLSパケットは次にあります。"
    },
    {
      "indent": 3,
      "text": "struct {\n       ContentType type;\n       ProtocolVersion version;\n       uint16 epoch;\n       uint48 sequence_number;\n       uint16 length;\n       GenericBlockCipher fragment;\n       opaque MAC;\n       } TLSCiphertext;",
      "raw": true
    },
    {
      "indent": 3,
      "text": "This is identical to the existing TLS/DTLS layout, with the only difference being that the MAC value is moved outside the encrypted data.",
      "ja": "これは、唯一の違いは、MAC値が暗号化されたデータの外に移動させることであると、既存のTLS / DTLSのレイアウトと同じです。"
    },
    {
      "indent": 3,
      "text": "Note from the GenericBlockCipher annotation that this only applies to standard block ciphers that have distinct encrypt and MAC operations. It does not apply to GenericStreamCiphers or to GenericAEADCiphers that already include integrity protection with the cipher. If a server receives an encrypt-then-MAC request extension from a client and then selects a stream or Authenticated Encryption with Associated",
      "ja": "これが唯一の明確な暗号化及びMAC演算を有する標準ブロック暗号に適用されるのGenericBlockCipher注釈から注意。それはGenericStreamCiphersに、またはすでに暗号化と完全性保護を含めるGenericAEADCiphersには適用されません。サーバはクライアントからの暗号化、そして-MAC要求の拡張子を受信し、関連を持つストリームまたは認証された暗号化を選択した場合"
    },
    {
      "indent": 3,
      "text": "Data (AEAD) ciphersuite, it MUST NOT send an encrypt-then-MAC response extension back to the client.",
      "ja": "データ（AEAD）暗号スイート、それは、クライアントに暗号化-THEN-MAC応答拡張子を送ってはいけません。"
    },
    {
      "indent": 3,
      "text": "Decryption reverses this processing. The MAC SHALL be evaluated before any further processing such as decryption is performed, and if the MAC verification fails, then processing SHALL terminate immediately. For TLS, a fatal bad_record_mac MUST be generated [2]. For DTLS, the record MUST be discarded, and a fatal bad_record_mac MAY be generated [4]. This immediate response to a bad MAC eliminates any timing channels that may be available through the use of manipulated packet data.",
      "ja": "復号化は、この処理を反転させます。 MACは、復号化が行われるような任意のさらなる処理の前に評価されるものとし、MAC検証が失敗した場合、処理は直ちに終了するもの。 TLSのために、致命的なbad_record_macが生成されなければならない[2]。 DTLSのために、レコードは捨てなければなりません、そして致命的なbad_record_mac [4]生成されてもよいです。悪いMACにこの即時応答を操作パケットデータを使用して利用できる任意のタイミングチャネルを排除します。"
    },
    {
      "indent": 3,
      "text": "Some implementations may prefer to use a truncated MAC rather than a full-length one. In this case, they MAY negotiate the use of a truncated MAC through the TLS truncated_hmac extension as defined in TLS-Ext [3].",
      "ja": "いくつかの実装は、完全長のものよりもむしろ切断型MACを使用することを好むかもしれません。 TLS-EXT [3]で定義されるように、この場合、それらは、TLS truncated_hmac拡張を通じて切り捨てMACの使用を交渉することができます。"
    },
    {
      "indent": 0,
      "text": "3.1. Rehandshake Issues",
      "section_title": true,
      "ja": "3.1. 再ハンドシェイクの問題"
    },
    {
      "indent": 3,
      "text": "The status of encrypt-then-MAC vs. MAC-then-encrypt can potentially change during one or more rehandshakes. Implementations SHOULD retain the current session state across all rehandshakes for that session. (In other words, if the mechanism for the current session is X, then the renegotiated session should also use X.) Although implementations SHOULD NOT change the state during a rehandshake, if they wish to be more flexible, then the following rules apply:",
      "ja": "MAC-その後、暗号化対暗号-その後、-MACの状態が潜在的に一つ以上のrehandshakes中に変更することができます。実装はそのセッションのすべてのrehandshakes渡って現在のセッション状態を保持する必要があります。実装が再ハンドシェイク時の状態を変化させてはならないが、それらをより柔軟にすることを希望する場合、（現在のセッションのためのメカニズムがXである場合つまり、次いで再交渉セッションはまた、Xを使用する必要があります）、次の規則が適用されます。"
    },
    {
      "indent": 3,
      "text": "+------------------+---------------------+--------------------------+\n| Current Session  |     Renegotiated    |      Action to take      |\n|                  |       Session       |                          |\n+------------------+---------------------+--------------------------+\n| MAC-then-encrypt |   MAC-then-encrypt  |        No change         |\n|                  |                     |                          |\n| MAC-then-encrypt |   Encrypt-then-MAC  |        Upgrade to        |\n|                  |                     |     Encrypt-then-MAC     |\n|                  |                     |                          |\n| Encrypt-then-MAC |   MAC-then-encrypt  |          Error           |\n|                  |                     |                          |\n| Encrypt-then-MAC |   Encrypt-then-MAC  |        No change         |\n+------------------+---------------------+--------------------------+",
      "raw": true
    },
    {
      "indent": 15,
      "text": "Table 1: Encrypt-then-MAC with Renegotiation",
      "ja": "表1：再ネゴシエーションと暗号化 - そして、MAC"
    },
    {
      "indent": 3,
      "text": "As the above table points out, implementations MUST NOT renegotiate a downgrade from encrypt-then-MAC to MAC-then-encrypt. Note that a client or server that doesn't wish to implement the mechanism-change-during-rehandshake ability can (as a client) not request a mechanism change and (as a server) deny the mechanism change.",
      "ja": "上記の表が指摘するように、実装は、MAC-THEN-暗号化する暗号化-THEN-MACからのダウングレードを再交渉してはいけません。メカニズム・変更時に、再ハンドシェイク機能を実装したくないクライアントまたはサーバーが（クライアントとして）メカニズムの変更を要求しないし、（サーバなど）のメカニズムの変更を拒否できることに注意してください。"
    },
    {
      "indent": 3,
      "text": "Note that these rules apply across potentially many rehandshakes. For example, if a session were in the encrypt-then-MAC state and a rehandshake selected a GenericAEADCiphers ciphersuite and a subsequent rehandshake then selected a MAC-then-encrypt ciphersuite, this would be an error since the renegotiation process has resulted in a downgrade from encrypt-then-MAC to MAC-then-encrypt (via the AEAD ciphersuite).",
      "ja": "これらのルールは、潜在的に多くのrehandshakes全体に適用されることに注意してください。たとえば、セッションが再ネゴシエーションプロセスがダウングレードをもたらしたので、暗号-THEN-MAC状態、および再ハンドシェイクはGenericAEADCiphersの暗号スイートを選択し、その後の再ハンドシェイクは、次にMAC-次いで、暗号化暗号スイートを選択し、これは誤りであろうしていた場合暗号-THEN-MACから（AEADの暗号スイートを介して）MAC-THEN-暗号化します。"
    },
    {
      "indent": 3,
      "text": "(As the text above has already pointed out, implementations SHOULD avoid having to deal with these ciphersuite calisthenics by retaining the initially negotiated mechanism across all rehandshakes.)",
      "ja": "（上記のテキストは、すでに指摘したように、実装はすべてrehandshakes渡って最初に交渉しメカニズムを保持することにより、これらの暗号スイート体操に対処することは避けるべきです。）"
    },
    {
      "indent": 3,
      "text": "If an upgrade from MAC-then-encrypt to encrypt-then-MAC is negotiated as per the second line in the table above, then the change will take place in the first message that follows the Change Cipher Spec (CCS) message. In other words, all messages up to and including the CCS will use MAC-then-encrypt, and then the message that follows will continue with encrypt-then-MAC.",
      "ja": "-THEN-MACを暗号化し、次に暗号化MACからのアップグレードは、上記の表の2行目ごとにネゴシエートされた場合、その変更は、変更暗号スペック（CCS）メッセージを次の最初のメッセージで行われます。言い換えれば、CCSを含むすべてのまでのメッセージとは、MAC-その後、暗号化を使用し、その後、次のメッセージが暗号化-その後、-MACを継続します。"
    },
    {
      "indent": 0,
      "text": "4. Security Considerations",
      "section_title": true,
      "ja": "4.セキュリティについての考慮事項"
    },
    {
      "indent": 3,
      "text": "This document defines encrypt-then-MAC, an improved security mechanism to replace the current MAC-then-encrypt one. Encrypt-then-MAC is regarded as more secure than the current mechanism [5] [6] and should mitigate or eliminate a number of attacks on the current mechanism, provided that the instructions on MAC processing given in Section 3 are applied.",
      "ja": "この文書は、暗号化-THEN-MAC、現在のMAC-THEN-暗号いずれかを交換する改善されたセキュリティ・メカニズムを定義します。 [5]現在の機構よりも安全とみなされ、次いで、MACを暗号化する[6]と現在のメカニズムに対する攻撃の数を軽減または排除する必要があり、第3節で与えられたMAC処理の手順が適用されることを条件とします。"
    },
    {
      "indent": 3,
      "text": "An active attacker who can emulate a client or server with extension intolerance may cause some implementations to fall back to older protocol versions that don't support extensions, which will in turn force a fallback to non-encrypt-then-MAC behaviour. A straightforward solution to this problem is to avoid fallback to older, less secure protocol versions. If fallback behaviour is unavoidable, then mechanisms to address this issue, which affects all capabilities that are negotiated via TLS extensions, are being developed by the TLS working group [7]. Anyone concerned about this type of attack should consult the TLS working group documents for guidance on appropriate defence mechanisms.",
      "ja": "拡張不耐症でクライアントまたはサーバをエミュレートすることができ、アクティブ攻撃者は、いくつかの実装が順番に非暗号化、そして-MACの動作へのフォールバックを強制する拡張をサポートしていない古いプロトコルバージョン、にフォールバックする可能性があります。この問題の簡単な解決策は、古い、安全性の低いプロトコルバージョンへのフォールバックを回避することです。フォールバック動作が避けられない場合は、TLS拡張を経て交渉されているすべての機能に影響を与え、この問題に対処するためのメカニズムは、[7] TLSワーキンググループによって開発されています。この種の攻撃を懸念誰もが適切な防御機構に関するガイダンスのためのTLSワーキンググループのドキュメントを参照する必要があります。"
    },
    {
      "indent": 0,
      "text": "5. IANA Considerations",
      "section_title": true,
      "ja": "5. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "IANA has added the extension code point 22 (0x16) for the encrypt_then_mac extension to the TLS \"ExtensionType Values\" registry as specified in TLS [2].",
      "ja": "TLS [2]で指定されるようにIANAは、TLS「ExtensionType値」レジストリにencrypt_then_mac拡張のための拡張コード・ポイント22（0x16）を加えました。"
    },
    {
      "indent": 0,
      "text": "6. Acknowledgements",
      "section_title": true,
      "ja": "6.謝辞"
    },
    {
      "indent": 3,
      "text": "The author would like to thank Martin Rex, Dan Shumow, and the members of the TLS mailing list for their feedback on this document.",
      "ja": "著者はマーティン・レックス、ダン・シュモウ、および本文書に彼らのフィードバックのためのTLSメーリングリストのメンバーに感謝したいと思います。"
    },
    {
      "indent": 0,
      "text": "7. References",
      "section_title": true,
      "ja": "7.参考"
    },
    {
      "indent": 0,
      "text": "7.1. Normative References",
      "section_title": true,
      "ja": "7.1. 引用規格"
    },
    {
      "indent": 3,
      "text": "[1] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[1]ブラドナーのは、S.は、BCP 14、RFC 2119、1997年3月の \"RFCsにおける使用のためのレベルを示すために\"。"
    },
    {
      "indent": 3,
      "text": "[2] Dierks, T. and E. Rescorla, \"The Transport Layer Security (TLS) Protocol Version 1.2\", RFC 5246, August 2008.",
      "ja": "[2]ダークス、T.およびE.レスコラ、 \"トランスポート層セキュリティ（TLS）プロトコルバージョン1.2\"、RFC 5246、2008年8月。"
    },
    {
      "indent": 3,
      "text": "[3] Eastlake, D., \"Transport Layer Security (TLS) Extensions: Extension Definitions\", RFC 6066, January 2011.",
      "ja": "[3]イーストレイク、D.、 \"トランスポート層セキュリティ（TLS）拡張機能：拡張定義\"、RFC 6066、2011年1月。"
    },
    {
      "indent": 3,
      "text": "[4] Rescorla, E. and N. Modadugu, \"Datagram Transport Layer Security Version 1.2\", RFC 6347, January 2012.",
      "ja": "[4]レスコラ、E.およびN. Modadugu、 \"データグラムトランスポート層セキュリティバージョン1.2\"、RFC 6347、2012年1月。"
    },
    {
      "indent": 0,
      "text": "7.2. Informative References",
      "section_title": true,
      "ja": "7.2. 参考文献"
    },
    {
      "indent": 3,
      "text": "[5] Bellare, M. and C. Namprempre, \"Authenticated Encryption: Relations among notions and analysis of the generic composition paradigm\", Proceedings of AsiaCrypt '00, Springer-Verlag LNCS No. 1976, p. 531, December 2000.",
      "ja": "[5]ベラー、M。およびC. Namprempreは、「認証された暗号化：概念および汎用組成パラダイムの分析間の関係」、AsiaCrypt '00、シュプリンガー・フェアラークLNCS番号1976、Pの議事。 531、2000年12月。"
    },
    {
      "indent": 3,
      "text": "[6] Krawczyk, H., \"The Order of Encryption and Authentication for Protecting Communications (or: How Secure Is SSL?)\", Proceedings of Crypto '01, Springer-Verlag LNCS No. 2139, p. 310, August 2001.",
      "ja": "[6] Krawczyk、H.は、「コミュニケーションを保護するための暗号化および認証の順序は、（または：SSLどのように安全ですか？）」、暗号'01の議事録、シュプリンガー・フェアラークLNCS号2139、P。 310、2001年8月。"
    },
    {
      "indent": 3,
      "text": "[7] Moeller, B. and A. Langley, \"TLS Fallback Signaling Cipher Suite Value (SCSV) for Preventing Protocol Downgrade Attacks\", Work in Progress, July 2014.",
      "ja": "[7]メラー、B.及びA.ラングレー、進行、2014年7月に、ワーク「TLSフォールバックシグナリング暗号スイート値（SCSV）プロトコルダウングレード攻撃を防止するための」。"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Peter Gutmann University of Auckland Department of Computer Science New Zealand",
      "ja": "コンピュータサイエンスニュージーランドのオークランド部門のピーター・ガットマン大学"
    },
    {
      "indent": 3,
      "text": "EMail: pgut001@cs.auckland.ac.nz",
      "ja": "メールアドレス：pgut001@cs.auckland.ac.nz"
    }
  ]
}