{
  "title": {
    "text": "RFC 5448 - Improved Extensible Authentication Protocol Method for 3rd Generation Authentication and Key Agreement (EAP-AKA')",
    "ja": "RFC 5448 - 第3世代認証及び鍵合意（EAP-AKA '）のための改良された拡張認証プロトコル方式"
  },
  "number": 5448,
  "created_at": "2019-10-28 04:35:52.523219+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                           J. Arkko\nRequest for Comments: 5448                                 V. Lehtovirta\nUpdates: 4187                                                   Ericsson\nCategory: Informational                                        P. Eronen\n                                                                   Nokia\n                                                                May 2009",
      "raw": true
    },
    {
      "indent": 7,
      "text": " Improved Extensible Authentication Protocol Method for\n3rd Generation Authentication and Key Agreement (EAP-AKA')",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This memo provides information for the Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited.",
      "ja": "このメモはインターネットコミュニティのための情報を提供します。それはどんな種類のインターネット標準を指定しません。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2009 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2009 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents in effect on the date of publication of this document (http://trustee.ietf.org/license-info). Please review these documents carefully, as they describe your rights and restrictions with respect to this document.",
      "ja": "この文書では、BCP 78と、この文書（http://trustee.ietf.org/license-info）の発行日に有効なIETFドキュメントに関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This specification defines a new EAP method, EAP-AKA', which is a small revision of the EAP-AKA (Extensible Authentication Protocol Method for 3rd Generation Authentication and Key Agreement) method. The change is a new key derivation function that binds the keys derived within the method to the name of the access network. The new key derivation mechanism has been defined in the 3rd Generation Partnership Project (3GPP). This specification allows its use in EAP in an interoperable manner. In addition, EAP-AKA' employs SHA-256 instead of SHA-1.",
      "ja": "この仕様は、EAP-AKA（第3世代認証及び鍵合意のための拡張認証プロトコル方法）の小改正新しいEAP方式、EAP-AKA」、メソッドを定義します。変更は、アクセスネットワークの名前にメソッド内で生成されたキーをバインドし、新たな鍵導出関数です。新しい鍵導出メカニズムは、第3世代パートナーシッププロジェクト（3GPP）で定義されています。この仕様は、相互運用可能な方法で、EAPでの使用を可能にします。また、EAP-AKAは、」SHA-256の代わりにSHA-1を使用します。"
    },
    {
      "indent": 3,
      "text": "This specification also updates RFC 4187, EAP-AKA, to prevent bidding down attacks from EAP-AKA'.",
      "ja": "また、この仕様は「EAP-AKAから競り下げ攻撃を防ぐためにRFC 4187、EAP-AKAを更新します。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  2\n2.  Requirements Language  . . . . . . . . . . . . . . . . . . . .  3\n3.  EAP-AKA' . . . . . . . . . . . . . . . . . . . . . . . . . . .  3\n  3.1.  AT_KDF_INPUT . . . . . . . . . . . . . . . . . . . . . . .  6\n  3.2.  AT_KDF . . . . . . . . . . . . . . . . . . . . . . . . . .  8\n  3.3.  Key Generation . . . . . . . . . . . . . . . . . . . . . . 10\n  3.4.  Hash Functions . . . . . . . . . . . . . . . . . . . . . . 12\n    3.4.1.  PRF' . . . . . . . . . . . . . . . . . . . . . . . . . 12\n    3.4.2.  AT_MAC . . . . . . . . . . . . . . . . . . . . . . . . 13\n    3.4.3.  AT_CHECKCODE . . . . . . . . . . . . . . . . . . . . . 13\n4.  Bidding Down Prevention for EAP-AKA  . . . . . . . . . . . . . 14\n5.  Security Considerations  . . . . . . . . . . . . . . . . . . . 15\n  5.1.  Security Properties of Binding Network Names . . . . . . . 18\n6.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 19\n  6.1.  Type Value . . . . . . . . . . . . . . . . . . . . . . . . 19\n  6.2.  Attribute Type Values  . . . . . . . . . . . . . . . . . . 19\n  6.3.  Key Derivation Function Namespace  . . . . . . . . . . . . 19\n7.  Contributors . . . . . . . . . . . . . . . . . . . . . . . . . 20\n8.  Acknowledgments  . . . . . . . . . . . . . . . . . . . . . . . 20\n9.  References . . . . . . . . . . . . . . . . . . . . . . . . . . 20\n  9.1.  Normative References . . . . . . . . . . . . . . . . . . . 20\n  9.2.  Informative References . . . . . . . . . . . . . . . . . . 21\nAppendix A.  Changes from RFC 4187 . . . . . . . . . . . . . . . . 23\nAppendix B.  Importance of Explicit Negotiation  . . . . . . . . . 23\nAppendix C.  Test Vectors  . . . . . . . . . . . . . . . . . . . . 24",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "This specification defines a new Extensible Authentication Protocol (EAP)[RFC3748] method, EAP-AKA', which is a small revision of the EAP-AKA method originally defined in [RFC4187]. What is new in EAP-AKA' is that it has a new key derivation function, specified in [3GPP.33.402]. This function binds the keys derived within the method to the name of the access network. This limits the effects of compromised access network nodes and keys. This specification defines the EAP encapsulation for AKA when the new key derivation mechanism is in use.",
      "ja": "本明細書は元々[RFC4187]で定義されたEAP-AKA方式の小改正新しい拡張認証プロトコル（EAP）[RFC3748]の方法、EAP-AKA」を定義します。何EAP-AKAで新しいのは、それが[3GPP.33.402]で指定された新しい鍵導出関数を、持っていることです。この機能は、アクセスネットワークの名前にメソッド内で生成されたキーをバインドします。これは、侵入アクセス・ネットワーク・ノードとキーの効果を制限します。新しい鍵導出メカニズムが使用されているときにこの仕様はAKAのためのEAPのカプセル化を定義します。"
    },
    {
      "indent": 3,
      "text": "3GPP has defined a number of applications for the revised AKA mechanism, some based on native encapsulation of AKA over 3GPP radio access networks and others based on the use of EAP.",
      "ja": "3GPP改訂AKAメカニズムのアプリケーション、EAPの使用に基づいて、3GPP無線アクセスネットワーク及び他上AKAのネイティブカプセル化に基づいて、いくつかの数を定義しています。"
    },
    {
      "indent": 3,
      "text": "For making the new key derivation mechanisms usable in EAP-AKA, additional protocol mechanisms are necessary. Given that RFC 4187 calls for the use of CK (the encryption key) and IK (the integrity key) from AKA, existing implementations continue to use these. Any change of the key derivation must be unambiguous to both sides in the protocol. That is, it must not be possible to accidentally connect old equipment to new equipment and get the key derivation wrong or attempt to use wrong keys without getting a proper error message. The change must also be secure against bidding down attacks that attempt to force the participants to use the least secure mechanism.",
      "ja": "EAP-AKAで使用可能な新しい鍵導出メカニズムを作るために、追加のプロトコルメカニズムが必要です。 AKAからのCK（暗号キー）とIK（健全性キー）を使用するためのRFC 4187を呼び出していることを考えると、既存の実装では、これらを継続して使用します。鍵導出の変更は、プロトコルの両側に明確なでなければなりません。つまり、誤って新しい機器に古い機器を接続して、間違ったキー導出を取得したり、適切なエラーメッセージを取得せずに間違ったキーを使用しようとすることは可能であってはならない、です。変更は、最も安全性のメカニズムを使用するために、参加者を強制しようとした攻撃をダウン入札に対して安全でなければなりません。"
    },
    {
      "indent": 3,
      "text": "This specification therefore introduces a variant of the EAP-AKA method, called EAP-AKA'. This method can employ the derived keys CK' and IK' from the 3GPP specification and updates the used hash function to SHA-256 [FIPS.180-2.2002]. But it is otherwise equivalent to RFC 4187. Given that a different EAP method type value is used for EAP-AKA and EAP-AKA', a mutually supported method may be negotiated using the standard mechanisms in EAP [RFC3748].",
      "ja": "この仕様は、したがって、EAP-AKA」と呼ばれるEAP-AKA方式の変異体を導入します。この方法は、3GPP仕様に由来する鍵CK「及びIK」を使用し、SHA-256 [FIPS.180-2.2002】するために使用されるハッシュ関数を更新することができます。それは異なるEAPメソッドタイプの値が相互に支持方法は、EAP [RFC3748]に標準メカニズムを使用してネゴシエートすることができるEAP-AKAとEAP-AKA」のために使用されることを考慮RFC 4187.にそうでないと等価です。"
    },
    {
      "indent": 6,
      "text": "Note: Appendix B explains why it is important to be explicit about the change of semantics for the keys, and why other approaches would lead to severe interoperability problems.",
      "ja": "注意：キーのセマンティクスの変更について明確にしておくことが重要である理由は、付録Bを説明し、なぜ他のアプローチは、深刻な相互運用性の問題につながります。"
    },
    {
      "indent": 3,
      "text": "The rest of this specification is structured as follows. Section 3 defines the EAP-AKA' method. Section 4 adds support to EAP-AKA to prevent bidding down attacks from EAP-AKA'. Section 5 explains the security differences between EAP-AKA and EAP-AKA'. Section 6 describes the IANA considerations and Appendix A explains what updates to RFC 4187 EAP-AKA have been made in this specification. Appendix B explains some of the design rationale for creating EAP-AKA'. Finally, Appendix C provides test vectors.",
      "ja": "次のようにこの仕様の残りの部分が構成されています。セクション3は、EAP-AKA」メソッドを定義します。第4章では、「EAP-AKAから競り下げ攻撃を防ぐためにEAP-AKAにサポートを追加します。第5節では、EAP-AKAおよびEAP-AKA」の間のセキュリティの違いについて説明します。第6節は、IANAの考慮事項について説明し、付録Aは、この仕様で作られているRFC 4187 EAP-AKAに更新について説明します。付録Bは、「EAP-AKAを作成するための設計根拠のいくつかを説明します。最後に、付録Cは、テストベクターを提供します。"
    },
    {
      "indent": 0,
      "text": "2. Requirements Language",
      "section_title": true,
      "ja": "2.必要な言語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はあります[RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "3. EAP-AKA'",
      "section_title": true,
      "ja": "3. EAP-AKA」"
    },
    {
      "indent": 3,
      "text": "EAP-AKA' is a new EAP method that follows the EAP-AKA specification [RFC4187] in all respects except the following:",
      "ja": "EAP-AKAは、」次を除くすべての点でEAP-AKA仕様[RFC4187]を次の新しいEAP方式です。"
    },
    {
      "indent": 3,
      "text": "o It uses the Type code 50, not 23 (which is used by EAP-AKA).",
      "ja": "Oそれは（EAP-AKAで使用されている）タイプコード50ではなく23を使用します。"
    },
    {
      "indent": 3,
      "text": "o It carries the AT_KDF_INPUT attribute, as defined in Section 3.1, to ensure that both the peer and server know the name of the access network.",
      "ja": "ピアとサーバの両方がアクセスネットワークの名前を知っていることを保証するために、3.1節で定義されているOこれは、AT_KDF_INPUT属性を運びます。"
    },
    {
      "indent": 3,
      "text": "o It supports key derivation function negotiation via the AT_KDF attribute (Section 3.2) to allow for future extensions.",
      "ja": "Oこれは、将来の拡張を可能にするためにAT_KDF属性（3.2節）を介して鍵導出関数ネゴシエーションをサポートしています。"
    },
    {
      "indent": 3,
      "text": "o It calculates keys as defined in Section 3.3, not as defined in EAP-AKA.",
      "ja": "セクション3.3で定義されるようにOそれは、EAP-AKAで定義されていないように、キーを計算します。"
    },
    {
      "indent": 3,
      "text": "o It employs SHA-256 [FIPS.180-2.2002], not SHA-1 [FIPS.180-1.1995] (Section 3.4).",
      "ja": "OそれはSHA-256 [FIPS.180-2.2002]ではなくSHA-1 [FIPS.180-1.1995]（セクション3.4）を用います。"
    },
    {
      "indent": 3,
      "text": "Figure 1 shows an example of the authentication process. Each message AKA'-Challenge and so on represents the corresponding message from EAP-AKA, but with EAP-AKA' Type code. The definition of these messages, along with the definition of attributes AT_RAND, AT_AUTN, AT_MAC, and AT_RES can be found in [RFC4187].",
      "ja": "図1は、認証処理の一例を示しています。ように各メッセージAKA'チャレンジとは、EAP-AKAから、しかし、EAP-AKA」タイプコードと対応するメッセージを表します。 AT_RAND、AT_AUTN、AT_MAC、およびAT_RESは[RFC4187]で見つけることができる属性の定義に沿って、これらのメッセージの定義は、。"
    },
    {
      "indent": 3,
      "text": " Peer                                                    Server\n    |                       EAP-Request/Identity             |\n    |<-------------------------------------------------------|\n    |                                                        |\n    |  EAP-Response/Identity                                 |\n    |  (Includes user's Network Access Identifier, NAI)      |\n    |------------------------------------------------------->|\n    |         +--------------------------------------------------+\n    |         | Server determines the network name and ensures   |\n    |         | that the given access network is authorized to   |\n    |         | use the claimed name.  The server then runs the  |\n    |         | AKA' algorithms generating RAND and AUTN, and    |\n    |         | derives session keys from CK' and IK'.  RAND and |\n    |         | AUTN are sent as AT_RAND and AT_AUTN attributes, |\n    |         | whereas the network name is transported in the   |\n    |         | AT_KDF_INPUT attribute.  AT_KDF signals the used |\n    |         | key derivation function.  The session keys are   |\n    |         | used in creating the AT_MAC attribute.           |\n    |         +--------------------------------------------------+\n    |                         EAP-Request/AKA'-Challenge     |\n    |        (AT_RAND, AT_AUTN, AT_KDF, AT_KDF_INPUT, AT_MAC)|\n    |<-------------------------------------------------------|\n+------------------------------------------------------+     |\n| The peer determines what the network name should be, |     |\n| based on, e.g., what access technology it is using.  |     |\n| The peer also retrieves the network name sent by     |     |\n| the network from the AT_KDF_INPUT attribute.  The    |     |\n| two names are compared for discrepancies, and if     |     |\n| necessary, the authentication is aborted.  Otherwise,|     |\n| the network name from AT_KDF_INPUT attribute is      |     |\n| used in running the AKA' algorithms, verifying AUTN  |     |\n| from AT_AUTN and MAC from AT_MAC attributes.  The    |     |\n| peer then generates RES.  The peer also derives      |     |\n| session keys from CK'/IK'.  The AT_RES and AT_MAC    |     |\n| attributes are constructed.                          |     |\n+------------------------------------------------------+     |\n    | EAP-Response/AKA'-Challenge                            |\n    | (AT_RES, AT_MAC)                                       |\n    |------------------------------------------------------->|\n    |         +-------------------------------------------------+\n    |         | Server checks the RES and MAC values received    |\n    |         | in AT_RES and AT_MAC, respectively.  Success     |\n    |         | requires both to be found correct.               |\n    |         +-------------------------------------------------+\n    |                                           EAP-Success  |\n    |<-------------------------------------------------------|",
      "raw": true
    },
    {
      "indent": 14,
      "text": "Figure 1: EAP-AKA' Authentication Process",
      "ja": "図1：EAP-AKA」認証プロセス"
    },
    {
      "indent": 3,
      "text": "EAP-AKA' can operate on the same credentials as EAP-AKA and employ the same identities. However, EAP-AKA' employs different leading characters than EAP-AKA for the conventions given in Section 4.1.1 of [RFC4187] for International Mobile Subscriber Identifier (IMSI) based usernames. EAP-AKA' MUST use the leading character \"6\" (ASCII 36 hexadecimal) instead of \"0\" for IMSI-based permanent usernames. All other usage and processing of the leading characters, usernames, and identities is as defined by EAP-AKA [RFC4187]. For instance, the pseudonym and fast re-authentication usernames need to be constructed so that the server can recognize them. As an example, a pseudonym could begin with a leading \"7\" character (ASCII 37 hexadecimal) and a fast re-authentication username could begin with \"8\" (ASCII 38 hexadecimal). Note that a server that implements only EAP-AKA may not recognize these leading characters. According to Section 4.1.4 of [RFC4187], such a server will re-request the identity via the EAP-Request/AKA-Identity message, making obvious to the peer that EAP-AKA and associated identity are expected.",
      "ja": "EAP-AKAは、」EAP-AKAと同じ資格情報を操作し、同じIDを採用することができます。しかしながら、EAP-AKAは、」国際移動加入者識別子（IMSI）に基づくユーザ名は[RFC4187]のセクション4.1.1で指定された規則のためにEAP-AKAは異なる先頭文字を使用します。 EAP-AKAは、」IMSI系永久ユーザ名の代わりに 『0』の先頭文字 『6』（ASCII 36進数）を使用する必要があります。 EAP-AKA [RFC4187]で定義されるように先頭の文字、ユーザ名、およびアイデンティティのすべての他の使用と処理です。例えば、仮名と速い再認証のユーザー名は、サーバーがそれらを認識できるように構成する必要があります。一例として、仮名は、先頭に「7」の文字（ASCII 37進）で始まる可能性があり、速い再認証ユーザ名は「8」（ASCII 38進）で始まる可能性があります。唯一のEAP-AKAを実装し、サーバーがこれらの主要な文字を認識しない場合があります。 [RFC4187]のセクション4.1.4によると、そのようなサーバは、再要求するEAP要求/ AKA-アイデンティティメッセージを介して識別、EAP-AKAと関連アイデンティティが期待されていることをピアに明らかとなります。"
    },
    {
      "indent": 0,
      "text": "3.1. AT_KDF_INPUT",
      "section_title": true,
      "ja": "3.1。 AT_KDF_INPUT"
    },
    {
      "indent": 3,
      "text": "The format of the AT_KDF_INPUT attribute is shown below.",
      "ja": "AT_KDF_INPUT属性の書式は以下に示されています。"
    },
    {
      "indent": 6,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| AT_KDF_INPUT  | Length        | Actual Network Name Length    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n.                        Network Name                           .\n.                                                               .\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The fields are as follows:",
      "ja": "次のようにフィールドは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "AT_KDF_INPUT",
      "ja": "AT_KDF_INPUT"
    },
    {
      "indent": 6,
      "text": "This is set to 23.",
      "ja": "これは23に設定されています。"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "The length of the attribute, calculated as defined in [RFC4187], Section 8.1.",
      "ja": "[RFC4187]で定義されるように計算された属性の長さは、セクション8.1。"
    },
    {
      "indent": 3,
      "text": "Actual Network Name Length",
      "ja": "実際のネットワーク名の長さ"
    },
    {
      "indent": 6,
      "text": "This is a 2 byte actual length field, needed due to the requirement that the previous field is expressed in multiples of 4 bytes per the usual EAP-AKA rules. The Actual Network Name Length field provides the length of the network name in bytes.",
      "ja": "これは、前のフィールドは、通常のEAP-AKAルール当たり4バイトの倍数で表現される要求に必要な2バイトの実際の長さフィールドです。実際のネットワーク名の長さフィールドは、バイト単位でネットワーク名の長さを提供します。"
    },
    {
      "indent": 3,
      "text": "Network Name",
      "ja": "ネットワーク名"
    },
    {
      "indent": 6,
      "text": "This field contains the network name of the access network for which the authentication is being performed. The name does not include any terminating null characters. Because the length of the entire attribute must be a multiple of 4 bytes, the sender pads the name with 1, 2, or 3 bytes of all zero bits when necessary.",
      "ja": "このフィールドには、認証が実行されているため、アクセスネットワークのネットワーク名が含まれています。名前は、任意の終端のnull文字が含まれていません。属性全体の長さが4バイトの倍数でなければならないため、送信者は、必要なすべてのゼロのビットの1、2、または3バイトの名前をパッド。"
    },
    {
      "indent": 3,
      "text": "Only the server sends the AT_KDF_INPUT attribute. Per [3GPP.33.402], the server always verifies the authorization of a given access network to use a particular name before sending it to the peer over EAP-AKA'. The value of the AT_KDF_INPUT attribute from the server MUST be non-empty. If it is empty, the peer behaves as if AUTN had been incorrect and authentication fails. See Section 3 and Figure 3 of [RFC4187] for an overview of how authentication failures are handled.",
      "ja": "サーバだけがAT_KDF_INPUT属性を送信します。パー[3GPP.33.402]は、サーバーは常にEAP-AKA」オーバーピアに送信する前に、特定の名前を使用するために与えられたアクセスネットワークの許可を検証します。サーバーからAT_KDF_INPUT属性の値が非空である必要があります。それが空の場合AUTNが間違っていたと、認証が失敗したかのように、ピアが動作します。認証失敗の処理方法の概要については、セクション3と[RFC4187]の図3を参照してください。"
    },
    {
      "indent": 3,
      "text": "In addition, the peer MAY check the received value against its own understanding of the network name. Upon detecting a discrepancy, the peer either warns the user and continues, or fails the authentication process. More specifically, the peer SHOULD have a configurable policy that it can follow under these circumstances. If the policy indicates that it can continue, the peer SHOULD log a warning message or display it to the user. If the peer chooses to proceed, it MUST use the network name as received in the AT_KDF_INPUT attribute. If the policy indicates that the authentication should fail, the peer behaves as if AUTN had been incorrect and authentication fails.",
      "ja": "また、ピアは、ネットワーク名の独自の理解に対する受信値をチェックすることができます。不一致を検出すると、ピアはいずれかをユーザに警告し続け、または認証プロセスに失敗しました。具体的には、ピアは、それがこのような状況の下で従うことができ、設定ポリシーを持っているべきです。ポリシーは、それが継続できることを示している場合、ピアは警告メッセージをログに記録したり、それをユーザーに表示されるはずです。ピアが続行することを選択した場合AT_KDF_INPUT属性で受信し、それがネットワーク名を使用しなければなりません。ポリシーは、認証が失敗したことを示している場合AUTNが間違っていたと、認証が失敗したかのように、ピアが動作します。"
    },
    {
      "indent": 3,
      "text": "The Network Name field contains a UTF-8 string. This string MUST be constructed as specified in [3GPP.24.302] for \"Access Network Identity\". The string is structured as fields separated by colons (:). The algorithms and mechanisms to construct the identity string depend on the used access technology.",
      "ja": "ネットワーク名フィールドには、UTF-8文字列が含まれています。 「アクセスネットワークID」の[3GPP.24.302]に指定されているこの文字列を構成しなければなりません。文字列は、コロン（:)で区切られたフィールドとして構成されています。アイデンティティ文字列を構築するためのアルゴリズムとメカニズムが使用されるアクセス技術に依存しています。"
    },
    {
      "indent": 3,
      "text": "On the network side, the network name construction is a configuration issue in an access network and an authorization check in the authentication server. On the peer, the network name is constructed based on the local observations. For instance, the peer knows which access technology it is using on the link, it can see information in a link-layer beacon, and so on. The construction rules specify how this information maps to an access network name. Typically, the network name consists of the name of the access technology, or the name of the access technology followed by some operator identifier that was advertised in a link-layer beacon. In all cases, [3GPP.24.302] is the normative specification for the construction in both the network and peer side. If the peer policy allows running EAP-AKA' over an access technology for which that specification does not provide network name construction rules, the peer SHOULD rely only on the information from the AT_KDF_INPUT attribute and not perform a comparison.",
      "ja": "ネットワーク側では、ネットワーク名の建設は、アクセスネットワーク内の構成の問題および認証サーバで認証チェックです。ピアでは、ネットワーク名はローカルの観察に基づいて構築されます。例えば、ピアは、それがリンク上で使用される技術にアクセスするかを知っている、それはそうでリンク層ビーコンの情報を見て、することができます。建設のルールは、この情報は、アクセスネットワーク名にマッピングする方法を指定します。典型的には、ネットワーク名は、アクセス技術の名前、またはリンク層のビーコンでアドバタイズされたいくつかのオペレータ識別子に続くアクセス技術の名前で構成されています。全ての場合において、[3GPP.24.302]ネットワークとピア側の両方の建設のための規範的な仕様です。ピアポリシーは、その仕様は、ネットワーク名の作成規則を提供しないためのアクセス技術にわたって「EAP-AKAを実行することができた場合、ピアは唯一AT_KDF_INPUT属性からの情報に依存しているとの比較を行うべきではありません。"
    },
    {
      "indent": 3,
      "text": "If a comparison of the locally determined network name and the one received over EAP-AKA' is performed on the peer, it MUST be done as follows. First, each name is broken down to the fields separated by colons. If one of the names has more colons and fields than the other one, the additional fields are ignored. The remaining sequences of fields are compared, and they match only if they are equal character by character. This algorithm allows a prefix match where the peer would be able to match \"\", \"FOO\", and \"FOO:BAR\" against the value \"FOO:BAR\" received from the server. This capability is important in order to allow possible updates to the specifications that dictate how the network names are constructed. For instance, if a peer knows that it is running on access technology \"FOO\", it can use the string \"FOO\" even if the server uses an additional, more accurate description, e.g., \"FOO:BAR\", that contains more information.",
      "ja": "局所的に決定されたネットワーク名の比較およびEAP-AKAにわたって受信された1つが」ピアで実行される場合、次のように行われなければなりません。まず、それぞれの名前はコロンで区切られたフィールドに分解されます。名前のいずれかが他のものよりもコロンとフィールドを持っている場合は、追加のフィールドは無視されます。フィールドの残りの配列を比較し、それらが文字によって同じ文字である場合にのみ一致します。このアルゴリズムは、ピアは「」、「FOOと一致することができるであろうプレフィックスマッチを可能に」、および「FOO：BAR FOO」値に対して「：BAR」は、サーバから受信しました。この機能は、ネットワーク名が構築されている方法を指示仕様に可能な更新を可能にするために重要です。ピアは、それがアクセス技術「FOO」で実行されていることを知っている場合たとえば、それは、サーバーが追加の、より正確な記述を使用している場合でも、文字列「foo」を使用することができ、例えば、「FOO：BAR」、より多くの情報が含まれています。"
    },
    {
      "indent": 3,
      "text": "The allocation procedures in [3GPP.24.302] ensure that conflicts potentially arising from using the same name in different types of networks are avoided. The specification also has detailed rules about how a client can determine these based on information available to the client, such as the type of protocol used to attach to the network, beacons sent out by the network, and so on. Information that the client cannot directly observe (such as the type or version of the home network) is not used by this algorithm.",
      "ja": "【3GPP.24.302]に割り当て手順は、潜在的に異なるタイプのネットワークに同じ名前を使用することから生じる競合が回避されていることを確認します。明細書はまた、ネットワークに接続するために使用されるプロトコルの種類として、クライアントは、クライアントが利用可能な情報に基づいてこれらを決定することができる方法についてのルールを詳述しており、ビーコンは、ように、ネットワークによって送信され、そして。クライアントが直接（例えば、ホームネットワークの種類やバージョンなど）を観察することができないという情報は、このアルゴリズムによって使用されていません。"
    },
    {
      "indent": 3,
      "text": "The AT_KDF_INPUT attribute MUST be sent and processed as explained above when AT_KDF attribute has the value 1. Future definitions of new AT_KDF values MUST define how this attribute is sent and processed.",
      "ja": "AT_KDF属性は新しいAT_KDF値の1今後の定義は、この属性が送られて処理される方法を定義しなければならない価値を持っている場合、上記で説明したようにAT_KDF_INPUT属性が送信され、処理しなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.2. AT_KDF",
      "section_title": true,
      "ja": "3.2。 AT_KDF"
    },
    {
      "indent": 3,
      "text": "AT_KDF is an attribute that the server uses to reference a specific key derivation function. It offers a negotiation capability that can be useful for future evolution of the key derivation functions.",
      "ja": "AT_KDFは、サーバが特定の鍵導出関数を参照するために使用する属性です。これは、鍵導出関数の将来の発展のために役立つことができネゴシエーション機能を提供しています。"
    },
    {
      "indent": 3,
      "text": "The format of the AT_KDF attribute is shown below.",
      "ja": "AT_KDF属性の書式は以下に示されています。"
    },
    {
      "indent": 6,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| AT_KDF        | Length        |    Key Derivation Function    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The fields are as follows:",
      "ja": "次のようにフィールドは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "AT_KDF",
      "ja": "AT_KDF"
    },
    {
      "indent": 6,
      "text": "This is set to 24.",
      "ja": "これは24に設定されています。"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "The length of the attribute, MUST be set to 1.",
      "ja": "属性の長さは、1に設定しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Key Derivation Function",
      "ja": "鍵導出関数"
    },
    {
      "indent": 6,
      "text": "An enumerated value representing the key derivation function that the server (or peer) wishes to use. Value 1 represents the default key derivation function for EAP-AKA', i.e., employing CK' and IK' as defined in Section 3.3.",
      "ja": "サーバー（またはピア）が使用したい鍵導出関数を示す列挙値。値1は、セクション3.3で定義されるように「すなわち、使用CK」及びIK」EAP-AKAのためのデフォルトのキー導出関数を表します。"
    },
    {
      "indent": 3,
      "text": "Servers MUST send one or more AT_KDF attributes in the EAP-Request/ AKA'-Challenge message. These attributes represent the desired functions ordered by preference, the most preferred function being the first attribute.",
      "ja": "サーバは、一つ以上のAT_KDFがEAP要求/ AKA'-Challengeメッセージに属性を送らなければなりません。これらの属性には、優先順に並べ所望の機能、最初の属性が最も好ましい機能を表します。"
    },
    {
      "indent": 3,
      "text": "Upon receiving a set of these attributes, if the peer supports and is willing to use the key derivation function indicated by the first attribute, the function is taken into use without any further negotiation. However, if the peer does not support this function or is unwilling to use it, it does not process the received EAP-Request/ AKA'-Challenge in any way except by responding with the EAP-Response/ AKA'-Challenge message that contains only one attribute, AT_KDF with the value set to the selected alternative. If there is no suitable alternative, the peer behaves as if AUTN had been incorrect and authentication fails (see Figure 3 of [RFC4187]). The peer fails the authentication also if there are any duplicate values within the list of AT_KDF attributes (except where the duplication is due to a request to change the key derivation function; see below for further information).",
      "ja": "ピアがサポートし、最初の属性によって示される鍵導出関数を使用する意思がある場合、これらの属性のセットを受信すると、関数は、任意のさらなる交渉することなく使用に取り込まれます。ピアがこの機能をサポートするか、それを使用するために不本意ではありませんしかし、もし、それが含まれているEAP応答/ AKA'チャレンジメッセージで応答することによって除き、どのような方法で、受信したEAP要求/ AKA'チャレンジを処理しません。 1つの属性だけ、選択された代替に設定した値とAT_KDF。もし適切な選択肢が存在しない場合、ピアはAUTNが間違っていたと、認証が失敗したかのように振る舞う（の図3を参照してください[RFC4187]）。 AT_KDFのリスト内の任意の重複する値がある場合、ピアは、認証に失敗した（;さらなる情報については以下を参照の複製は、鍵導出関数を変更する要求によるものである場合を除く）の属性。"
    },
    {
      "indent": 3,
      "text": "Upon receiving an EAP-Response/AKA'-Challenge with AT_KDF from the peer, the server checks that the suggested AT_KDF value was one of the alternatives in its offer. The first AT_KDF value in the message from the server is not a valid alternative. If the peer has replied with the first AT_KDF value, the server behaves as if AT_MAC of the response had been incorrect and fails the authentication. For an overview of the failed authentication process in the server side, see Section 3 and Figure 2 of [RFC4187]. Otherwise, the server re-sends the EAP-Response/AKA'-Challenge message, but adds the selected alternative to the beginning of the list of AT_KDF attributes and retains the entire list following it. Note that this means that the selected alternative appears twice in the set of AT_KDF values. Responding to the peer's request to change the key derivation function is the only legal situation where such duplication may occur.",
      "ja": "ピアからAT_KDFとEAP応答/ AKA'チャレンジを受信すると、提案AT_KDF値は、そのオファーに選択肢の1つのサーバーをチェックしたこと。サーバーからのメッセージの最初のAT_KDF値は有効な代替ではありません。ピアが最初AT_KDF値と答えた場合は、サーバが応答のAT_MACが間違っていたかのように動作し、認証に失敗しました。サーバ側で失敗した認証プロセスの概要については、[RFC4187]のセクション3と図2を参照。そうでない場合は、サーバーのEAP応答/ AKA'チャレンジメッセージを再送信しますが、AT_KDF属性のリストの先頭に選択された代替を追加し、それを以下のリスト全体を保持します。これは、選択された代替がAT_KDF値のセットに2回出現していることを意味することに注意してください。鍵導出関数を変更するには、ピアの要求に応答して、このような重複が発生する可能性が唯一の法的状況です。"
    },
    {
      "indent": 3,
      "text": "When the peer receives the new EAP-Request/AKA'-Challenge message, it MUST check that the requested change, and only the requested change, occurred in the list of AT_KDF attributes. If so, it continues with processing the received EAP-Request/AKA'-Challenge as specified in [RFC4187] and Section 3.1 of this document. If not, it behaves as if AT_MAC had been incorrect and fails the authentication. If the peer receives multiple EAP-Request/AKA'-Challenge messages with differing AT_KDF attributes without having requested negotiation, the peer MUST behave as if AT_MAC had been incorrect and fail the authentication.",
      "ja": "ピアは、新しいEAP要求/ AKA'-Challengeメッセージを受信すると、それは要求された変更、およびのみ要求された変更は、AT_KDF属性のリストで発生したことをチェックしなければなりません。そうである場合、それは[RFC4187]とこのドキュメントのセクション3.1で指定されるように、受信したEAP要求/ AKA'チャレンジの処理を継続します。そうでない場合、それはAT_MACが間違っていたかのように動作し、認証に失敗しました。ピアが受信した場合AT_KDFが異なる複数のEAP要求/ AKA'チャレンジメッセージが交渉を要求したことなく、属性、ピアはAT_MACが間違っていたかのように動作し、認証に失敗しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Note that the peer may also request sequence number resynchronization [RFC4187]. This happens after AT_KDF negotiation has already completed. An AKA'-Synchronization-Failure message is sent as a response to the newly received EAP-Request/AKA'-Challenge (the last message of the AT_KDF negotiation). The AKA'-Synchronization-Failure message MUST contain the AUTS parameter as specified in [RFC4187] and a copy the AT_KDF attributes as they appeared in the last message of the AT_KDF negotiation. If the AT_KDF attributes are found to differ from their earlier values, the peer and server MUST behave as if AT_MAC had been incorrect and fail the authentication.",
      "ja": "ピアはまた、シーケンス番号再同期[RFC4187]を要求してもよいことに留意されたいです。 AT_KDF交渉がすでに完了した後に発生します。 AKA'-同期失敗メッセージが新たに受信されたEAP要求/ AKA'チャレンジ（AT_KDFネゴシエーションの最後のメッセージ）に対する応答として送信されます。 [RFC4187]で指定された、彼らはAT_KDF交渉の最後のメッセージで登場し、コピーがAT_KDF属性としてAKA'-同期失敗メッセージはAUTSパラメータを含まなければなりません。 AT_KDF属性はその以前の値と異なることが分かった場合は、ピアとサーバはAT_MACが間違っていたかのように動作し、認証に失敗しなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.3. Key Generation",
      "section_title": true,
      "ja": "3.3。キー生成"
    },
    {
      "indent": 3,
      "text": "Both the peer and server MUST derive the keys as follows.",
      "ja": "次のように、ピアとサーバの両方が鍵を導出しなければなりません。"
    },
    {
      "indent": 3,
      "text": "AT_KDF set to 1",
      "ja": "1に設定AT_KDF"
    },
    {
      "indent": 6,
      "text": "In this case, MK is derived and used as follows:",
      "ja": "次のようにこの場合、MKが導出されて使用されます。"
    },
    {
      "indent": 7,
      "text": "MK = PRF'(IK'|CK',\"EAP-AKA'\"|Identity) K_encr = MK[0..127] K_aut = MK[128..383] K_re = MK[384..639] MSK = MK[640..1151] EMSK = MK[1152..1663]",
      "ja": "MK = PRF '（IK' | CK ' \"EAP-AKA'\" |アイデンティティ）K_encr = MC [0..127] K_aut = MC [128..383] K_re = MC [384..639] MSK = MK 【640..1151] EMSK = MC [1152..1663]"
    },
    {
      "indent": 3,
      "text": "Here [n..m] denotes the substring from bit n to m. PRF' is a new pseudo-random function specified in Section 3.4. The first 1664 bits from its output are used for K_encr (encryption key, 128 bits), K_aut (authentication key, 256 bits), K_re (re-authentication key, 256 bits), MSK (Master Session Key, 512 bits), and EMSK (Extended Master Session Key, 512 bits). These keys are used by the subsequent EAP-AKA' process. K_encr is used by the AT_ENCR_DATA attribute, and K_aut by the AT_MAC attribute. K_re is used later in this section. MSK and EMSK are outputs from a successful EAP method run [RFC3748].",
      "ja": "ここで[n..m] mのビットnからサブストリングを表します。 PRF」3.4節で指定された新しい擬似ランダム関数です。その出力から最初の1664ビットがK_encr（暗号鍵、128ビット）、K_aut（認証鍵、256ビット）、K_re（再認証キー、256ビット）、MSK（マスタセッション鍵、512ビット）のために使用され、 EMSK（拡張マスターセッションキー、512ビット）。これらのキーは、その後のEAP-AKA」のプロセスによって使用されています。 K_encrはAT_MAC属性によってAT_ENCR_DATA属性、およびK_autで使用されています。 K_reは、このセクションの後半で使用されています。 MSKとEMSKは成功したEAPメソッドの実行[RFC3748]からの出力です。"
    },
    {
      "indent": 3,
      "text": "IK' and CK' are derived as specified in [3GPP.33.402]. The functions that derive IK' and CK' take the following parameters: CK and IK produced by the AKA algorithm, and value of the Network Name field comes from the AT_KDF_INPUT attribute (without length or padding) .",
      "ja": "【3GPP.33.402]で指定されるようIK「およびCK」が導出されます。 IK「とCK」を導き出す機能は、次のパラメータを取る：CKとIK AKAアルゴリズムによって生成され、ネットワーク名フィールドの値は、（長さやパディングなし）AT_KDF_INPUT属性から来ています。"
    },
    {
      "indent": 3,
      "text": "The value \"EAP-AKA'\" is an eight-characters-long ASCII string. It is used as is, without any trailing NUL characters.",
      "ja": "値「EAP-AKA '」は8-文字長ASCII文字列です。任意の末尾のNUL文字なし、であるとして使用されています。"
    },
    {
      "indent": 3,
      "text": "Identity is the peer identity as specified in Section 7 of [RFC4187].",
      "ja": "[RFC4187]のセクション7で指定されアイデンティティは、ピアのアイデンティティです。"
    },
    {
      "indent": 3,
      "text": "When the server creates an AKA challenge and corresponding AUTN, CK, CK', IK, and IK' values, it MUST set the Authentication Management Field (AMF) separation bit to 1 in the AKA algorithm [3GPP.33.102]. Similarly, the peer MUST check that the AMF separation bit is set to 1. If the bit is not set to 1, the peer behaves as if the AUTN had been incorrect and fails the authentication.",
      "ja": "サーバはAKAチャレンジ及び対応AUTN、CK、CK「IK、及びIK」値を作成するとき、それは[3GPP.33.102] AKAアルゴリズムで1認証管理フィールド（AMF）分離ビットを設定しなければなりません。同様に、ピアは、ビットが1に設定されていない場合はAMF分離ビットが1に設定されていることをチェックしなければなりません、ピアはAUTNが間違っていたかのように動作し、認証に失敗しました。"
    },
    {
      "indent": 3,
      "text": "On fast re-authentication, the following keys are calculated:",
      "ja": "速い再認証では、次のキーが計算されます。"
    },
    {
      "indent": 7,
      "text": "MK = PRF'(K_re,\"EAP-AKA' re-auth\"|Identity|counter|NONCE_S)\nMSK  = MK[0..511]\nEMSK = MK[512..1023]",
      "raw": true
    },
    {
      "indent": 3,
      "text": "MSK and EMSK are the resulting 512-bit keys, taking the first 1024 bits from the result of PRF'. Note that K_encr and K_aut are not re-derived on fast re-authentication. K_re is the re-authentication key from the preceding full authentication and stays unchanged over any fast re-authentication(s) that may happen based on it. The value \"EAP-AKA' re-auth\" is a sixteen- characters-long ASCII string, again represented without any trailing NUL characters. Identity is the fast re-authentication identity, counter is the value from the AT_COUNTER attribute,",
      "ja": "MSK及びEMSKは、PRFの結果」から最初の1024ビットをとり、得られた512ビットのキーです。 K_encrとK_autが速い再認証に再誘導されたものではないことに注意してください。 K_reは、前の完全な認証の再認証鍵であり、それに基づいて起こる可能性のある高速再認証（S）の上にそのまま残ります。値「EAP-AKA」再認証は、」再び末尾のNUL文字なしで表さsixteen-文字長ASCII文字列です。アイデンティティが速い再認証のアイデンティティである、カウンタはAT_COUNTER属性から値であり、"
    },
    {
      "indent": 3,
      "text": "NONCE_S is the nonce value from the AT_NONCE_S attribute, all as specified in Section 7 of [RFC4187]. To prevent the use of compromised keys in other places, it is forbidden to change the network name when going from the full to the fast re-authentication process. The peer SHOULD NOT attempt fast re-authentication when it knows that the network name in the current access network is different from the one in the initial, full authentication. Upon seeing a re-authentication request with a changed network name, the server SHOULD behave as if the re-authentication identifier had been unrecognized, and fall back to full authentication. The server observes the change in the name by comparing where the fast re-authentication and full authentication EAP transactions were received at the Authentication, Authorization, and Accounting (AAA) protocol level.",
      "ja": "NONCE_S [RFC4187]のセクション7で指定されたすべてのように、AT_NONCE_S属性からノンス値です。他の場所で妥協のキーの使用を防止するためには、高速再認証プロセスにフルから行くときに、ネットワーク名を変更することは禁止されています。それは現在のアクセスネットワークにおけるネットワーク名は最初の、完全な認証の1と異なっていることを知っているときピアが速い再認証を試みるべきではありません。変更されたネットワーク名で再認証要求を見ると、サーバは再認証識別子が認識されていたかのように振る舞うべきであり、完全な認証にフォールバック。サーバは速い再認証および完全な認証EAPトランザクションを認証、許可、アカウンティング（AAA）プロトコルレベルで受信された場合に比較することにより、名前の変化を観察します。"
    },
    {
      "indent": 3,
      "text": "AT_KDF has any other value",
      "ja": "AT_KDFは、他の値を持っています"
    },
    {
      "indent": 6,
      "text": "Future variations of key derivation functions may be defined, and they will be represented by new values of AT_KDF. If the peer does not recognize the value, it cannot calculate the keys and behaves as explained in Section 3.2.",
      "ja": "鍵導出関数の将来の変形が定義されてもよい、と彼らはAT_KDFの新しい値によって表されます。ピアが値を認識しない場合は、キーを計算することはできませんし、3.2節で説明したように振舞います。"
    },
    {
      "indent": 3,
      "text": "AT_KDF is missing",
      "ja": "AT_KDFがありません"
    },
    {
      "indent": 6,
      "text": "The peer behaves as if the AUTN had been incorrect and MUST fail the authentication.",
      "ja": "AUTNが間違っていたとの認証に失敗しなければなりませんかのようにピアが動作します。"
    },
    {
      "indent": 3,
      "text": "If the peer supports a given key derivation function but is unwilling to perform it for policy reasons, it refuses to calculate the keys and behaves as explained in Section 3.2.",
      "ja": "ピアが与えられた鍵導出関数をサポートしていますが、ポリシー上の理由のためにそれを行うために不本意である場合、それは鍵を計算することを拒否し、3.2節で説明したように振舞います。"
    },
    {
      "indent": 0,
      "text": "3.4. Hash Functions",
      "section_title": true,
      "ja": "3.4。ハッシュ関数"
    },
    {
      "indent": 3,
      "text": "EAP-AKA' uses SHA-256 [FIPS.180-2.2002], not SHA-1 [FIPS.180-1.1995] as in EAP-AKA. This requires a change to the pseudo-random function (PRF) as well as the AT_MAC and AT_CHECKCODE attributes.",
      "ja": "EAP-AKAは、」EAP-AKAのように[FIPS.180-1.1995]ないSHA-1、[FIPS.180-2.2002] SHA-256を使用します。これは、擬似ランダム関数（PRF）だけでなく、AT_MACとAT_CHECKCODE属性を変更する必要があります。"
    },
    {
      "indent": 0,
      "text": "3.4.1. PRF'",
      "section_title": true,
      "ja": "3.4.1。 PRF」"
    },
    {
      "indent": 3,
      "text": "The PRF' construction is the same one IKEv2 uses (see Section 2.13 of [RFC4306]). The function takes two arguments. K is a 256-bit value and S is an octet string of arbitrary length. PRF' is defined as follows:",
      "ja": "PRF」の構成は同じもののIKEv2用途（[RFC4306]のセクション2.13を参照します）。この関数は2つの引数を取ります。 Kは、256ビットの値であり、Sは、任意の長さのオクテット列です。次のようにPRFが」が定義されています。"
    },
    {
      "indent": 3,
      "text": "PRF'(K,S) = T1 | T2 | T3 | T4 | ...",
      "ja": "PRF（K、C）= T1 | T2 | TK | PM | ..."
    },
    {
      "indent": 6,
      "text": "where: T1 = HMAC-SHA-256 (K, S | 0x01) T2 = HMAC-SHA-256 (K, T1 | S | 0x02) T3 = HMAC-SHA-256 (K, T2 | S | 0x03) T4 = HMAC-SHA-256 (K, T3 | S | 0x04) ...",
      "ja": "：T1 = HMAC-SHA-256（K、S | 0x01の）T2 = HMAC-SHA-256（K、T1 | S | 0x02の）T3 = HMAC-SHA-256（K、T2 | S | 0x03の）T4 = HMAC-SHA-256（K、T3 | S | 0x04の）..."
    },
    {
      "indent": 3,
      "text": "PRF' produces as many bits of output as is needed. HMAC-SHA-256 is the application of HMAC [RFC2104] to SHA-256.",
      "ja": "PRFは、」必要とされているように、出力のできるだけ多くのビットを生成します。 HMAC-SHA-256、SHA-256のHMAC [RFC2104]の適用です。"
    },
    {
      "indent": 0,
      "text": "3.4.2. AT_MAC",
      "section_title": true,
      "ja": "3.4.2。 AT_MAC"
    },
    {
      "indent": 3,
      "text": "When used within EAP-AKA', the AT_MAC attribute is changed as follows. The MAC algorithm is HMAC-SHA-256-128, a keyed hash value. The HMAC-SHA-256-128 value is obtained from the 32-byte HMAC-SHA-256 value by truncating the output to the first 16 bytes. Hence, the length of the MAC is 16 bytes.",
      "ja": "EAP-AKA」内で使用する場合、以下のように、AT_MAC属性が変更されます。 MACアルゴリズムはHMAC-SHA-256から128、鍵付きハッシュ値です。 HMAC-SHA-256から128までの値は、最初の16バイトに出力を切り捨てることによって、32バイトのHMAC-SHA-256の値から得られます。したがって、MACの長さは16バイトです。"
    },
    {
      "indent": 3,
      "text": "Otherwise, the use of AT_MAC in EAP-AKA' follows Section 10.15 of [RFC4187].",
      "ja": "それ以外の場合は、EAP-AKAでAT_MACの使用は」[RFC4187]のセクション10.15に従っています。"
    },
    {
      "indent": 0,
      "text": "3.4.3. AT_CHECKCODE",
      "section_title": true,
      "ja": "3.4.3。 AT_CHECKCODE"
    },
    {
      "indent": 3,
      "text": "When used within EAP-AKA', the AT_CHECKCODE attribute is changed as follows. First, a 32-byte value is needed to accommodate a 256-bit hash output:",
      "ja": "EAP-AKA」内で使用する場合は、次のようAT_CHECKCODE属性が変更されます。まず、32バイトの値は、256ビットのハッシュ出力に対応するために必要とされます。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| AT_CHECKCODE  | Length        |           Reserved            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n|                     Checkcode (0 or 32 bytes)                 |\n|                                                               |\n|                                                               |\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Second, the checkcode is a hash value, calculated with SHA-256 [FIPS.180-2.2002], over the data specified in Section 10.13 of [RFC4187].",
      "ja": "第二に、チェックコードは[RFC4187]のセクション10.13で指定されたデータに対するSHA-256 [FIPS.180-2.2002]で算出したハッシュ値です。"
    },
    {
      "indent": 0,
      "text": "4. Bidding Down Prevention for EAP-AKA",
      "section_title": true,
      "ja": "EAP-AKA 4.入札ダウン予防"
    },
    {
      "indent": 3,
      "text": "As discussed in [RFC3748], negotiation of methods within EAP is insecure. That is, a man-in-the-middle attacker may force the endpoints to use a method that is not the strongest that they both support. This is a problem, as we expect EAP-AKA and EAP-AKA' to be negotiated via EAP.",
      "ja": "[RFC3748]で説明したように、EAP内のメソッドのネゴシエーションが安全ではありません。それはのman-in-the-middle攻撃者は、彼らが両方サポート最強ではない方法を使用するようにエンドポイントを強制すること、です。我々はEAP-AKAおよびEAP-AKAは、」EAP経由で交渉されることを期待、これは問題です。"
    },
    {
      "indent": 3,
      "text": "In order to prevent such attacks, this RFC specifies a new mechanism for EAP-AKA that allows the endpoints to securely discover the capabilities of each other. This mechanism comes in the form of the AT_BIDDING attribute. This allows both endpoints to communicate their desire and support for EAP-AKA' when exchanging EAP-AKA messages. This attribute is not included in EAP-AKA' messages as defined in this RFC. It is only included in EAP-AKA messages. This is based on the assumption that EAP-AKA' is always preferable (see Section 5). If during the EAP-AKA authentication process it is discovered that both endpoints would have been able to use EAP-AKA', the authentication process SHOULD be aborted, as a bidding down attack may have happened.",
      "ja": "このような攻撃を防ぐために、このRFCは、エンドポイントがしっかりとお互いの能力を発見することを可能にするEAP-AKAのための新しいメカニズムを指定します。このメカニズムはAT_BIDDING属性の形式で提供されます。これは、EAP-AKAメッセージを交換するとき、両方のエンドポイントがEAP-AKA」の意欲とサポートを通信することができます。このRFCで定義されている。この属性は、EAP-AKA」メッセージに含まれていません。これは、唯一のEAP-AKAメッセージに含まれています。これは、EAP-AKAは」常に好適であるという仮定に基づいている（第5節参照）。 EAP-AKA認証プロセス中に両方のエンドポイントは、EAP-AKA」を使用することができたであろうことを発見した場合、競り下げ攻撃が起こったかもしれないとして、認証プロセスは、中止されるべきです。"
    },
    {
      "indent": 3,
      "text": "The format of the AT_BIDDING attribute is shown below.",
      "ja": "AT_BIDDING属性の書式は以下に示されています。"
    },
    {
      "indent": 6,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| AT_BIDDING    | Length        |D|          Reserved           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The fields are as follows:",
      "ja": "次のようにフィールドは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "AT_BIDDING",
      "ja": "AT_BIDDING"
    },
    {
      "indent": 6,
      "text": "This is set to 136.",
      "ja": "これは136に設定されています。"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "The length of the attribute, MUST be set to 1.",
      "ja": "属性の長さは、1に設定しなければなりません。"
    },
    {
      "indent": 3,
      "text": "D",
      "ja": "D"
    },
    {
      "indent": 6,
      "text": "This bit is set to 1 if the sender supports EAP-AKA', is willing to use it, and prefers it over EAP-AKA. Otherwise, it should be set to zero.",
      "ja": "送信者はEAP-AKAをサポートしている場合、このビットが」1に設定され、それを使用して喜んで、EAP-AKAの上にそれを好みます。それ以外の場合は、ゼロに設定する必要があります。"
    },
    {
      "indent": 3,
      "text": "Reserved",
      "ja": "予約済み"
    },
    {
      "indent": 6,
      "text": "This field MUST be set to zero when sent and ignored on receipt.",
      "ja": "送られて、領収書の上で無視する場合、このフィールドはゼロに設定しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The server sends this attribute in the EAP-Request/AKA-Challenge message. If the peer supports EAP-AKA', it compares the received value to its own capabilities. If it turns out that both the server and peer would have been able to use EAP-AKA' and preferred it over EAP-AKA, the peer behaves as if AUTN had been incorrect and fails the authentication (see Figure 3 of [RFC4187]). A peer not supporting EAP-AKA' will simply ignore this attribute. In all cases, the attribute is protected by the integrity mechanisms of EAP-AKA, so it cannot be removed by a man-in-the-middle attacker.",
      "ja": "サーバがEAP要求/ AKA-Challengeメッセージでこの属性を送信します。ピアは、EAP-AKA」をサポートしている場合、それは自身の能力に受信した値を比較します。それは、サーバおよびピアの両方がEAP-AKA」を使用することができたとEAP-AKAの上にそれを優先しているということが判明した場合、ピアはAUTNが間違っていたかのように動作し、認証に失敗した（の図3を参照してください[RFC4187]） 。 EAP-AKA」をサポートしていないピアは、単純にこの属性を無視します。すべての場合において、属性は、EAP-AKAの整合性メカニズムによって保護されているので、のman-in-the-middle攻撃者によって削除することはできません。"
    },
    {
      "indent": 3,
      "text": "Note that we assume (Section 5) that EAP-AKA' is always stronger than EAP-AKA. As a result, there is no need to prevent bidding \"down\" attacks in the other direction, i.e., attackers forcing the endpoints to use EAP-AKA'.",
      "ja": "我々はEAP-AKAはいつもEAP-AKAよりも強力であること（第5節）を前提としています。その結果、つまり、攻撃者は「EAP-AKAを使用するようにエンドポイントを強制的に、他の方向に入札「ダウン」の攻撃を防ぐために必要はありません。"
    },
    {
      "indent": 0,
      "text": "5. Security Considerations",
      "section_title": true,
      "ja": "5.セキュリティについての考慮事項"
    },
    {
      "indent": 3,
      "text": "A summary of the security properties of EAP-AKA' follows. These properties are very similar to those in EAP-AKA. We assume that SHA-256 is at least as secure as SHA-1. This is called the SHA-256 assumption in the remainder of this section. Under this assumption, EAP-AKA' is at least as secure as EAP-AKA.",
      "ja": "EAP-AKAのセキュリティプロパティの概要は、」次の。これらのプロパティは、EAP-AKAのものと非常に似ています。私たちは、SHA-256、SHA-1と少なくとも同程度に安全であることを前提としています。これは、このセクションの残りの部分にSHA-256の仮定と呼ばれます。この仮定の下では、EAP-AKAは、」EAP-AKAと少なくとも同じ安全です。"
    },
    {
      "indent": 3,
      "text": "If the AT_KDF attribute has value 1, then the security properties of EAP-AKA' are as follows:",
      "ja": "AT_KDF属性の値が1の場合は、次のように「EAP-AKAのセキュリティプロパティは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "Protected ciphersuite negotiation",
      "ja": "保護された暗号スイートのネゴシエーション"
    },
    {
      "indent": 6,
      "text": "EAP-AKA' has no ciphersuite negotiation mechanisms. It does have a negotiation mechanism for selecting the key derivation functions. This mechanism is secure against bidding down attacks. The negotiation mechanism allows changing the offered key derivation function, but the change is visible in the final EAP-Request/AKA'-Challenge message that the server sends to the peer. This message is authenticated via the AT_MAC attribute, and carries both the chosen alternative and the initially offered list. The peer refuses to accept a change it did not initiate. As a result, both parties are aware that a change is being made and what the original offer was.",
      "ja": "EAP-AKA」には暗号スイートネゴシエーションメカニズムを持っていません。これは、鍵導出機能を選択するための交渉メカニズムを持っています。このメカニズムは、競り下げ攻撃に対して安全です。ネゴシエーションメカニズムが提供される鍵導出関数を変更することができ、しかし変更は、サーバがピアに送信最終EAP要求/ AKA'-Challengeメッセージに表示されています。このメッセージはAT_MAC属性によって認証され、選択した代替と最初に提供され、リストの両方を運びます。ピアは、それが開始しなかった変更を受け入れることを拒否します。その結果、両当事者は、変更が行われていると、元のオファーは何だったことを認識しています。"
    },
    {
      "indent": 3,
      "text": "Mutual authentication",
      "ja": "相互認証"
    },
    {
      "indent": 6,
      "text": "Under the SHA-256 assumption, the properties of EAP-AKA' are at least as good as those of EAP-AKA in this respect. Refer to [RFC4187], Section 12 for further details.",
      "ja": "SHA-256の仮定の下で、EAP-AKA」の特性は、この点でEAP-AKAのものと少なくとも同程度に良好です。 [RFC4187]、詳細については、セクション12を参照してください。"
    },
    {
      "indent": 3,
      "text": "Integrity protection",
      "ja": "完全性保護"
    },
    {
      "indent": 6,
      "text": "Under the SHA-256 assumption, the properties of EAP-AKA' are at least as good (most likely better) as those of EAP-AKA in this respect. Refer to [RFC4187], Section 12 for further details. The only difference is that a stronger hash algorithm, SHA-256, is used instead of SHA-1.",
      "ja": "SHA-256の仮定の下で、EAP-AKA」の性質は、少なくともとして良い（最も可能性が高い、より良い）、この点でのEAP-AKAのものとされています。 [RFC4187]、詳細については、セクション12を参照してください。唯一の違いは、より強力なハッシュアルゴリズム、SHA-256、SHA-1の代わりに使用されていることです。"
    },
    {
      "indent": 3,
      "text": "Replay protection",
      "ja": "リプレイ保護"
    },
    {
      "indent": 6,
      "text": "Under the SHA-256 assumption, the properties of EAP-AKA' are at least as good as those of EAP-AKA in this respect. Refer to [RFC4187], Section 12 for further details.",
      "ja": "SHA-256の仮定の下で、EAP-AKA」の特性は、この点でEAP-AKAのものと少なくとも同程度に良好です。 [RFC4187]、詳細については、セクション12を参照してください。"
    },
    {
      "indent": 3,
      "text": "Confidentiality",
      "ja": "機密性"
    },
    {
      "indent": 6,
      "text": "The properties of EAP-AKA' are exactly the same as those of EAP-AKA in this respect. Refer to [RFC4187], Section 12 for further details.",
      "ja": "EAP-AKA」の特性は、まさにこの点でEAP-AKAのものと同じです。 [RFC4187]、詳細については、セクション12を参照してください。"
    },
    {
      "indent": 3,
      "text": "Key derivation",
      "ja": "鍵の導出"
    },
    {
      "indent": 6,
      "text": "EAP-AKA' supports key derivation with an effective key strength against brute force attacks equal to the minimum of the length of the derived keys and the length of the AKA base key, i.e., 128 bits or more. The key hierarchy is specified in Section 3.3.",
      "ja": "EAP-AKA」が導出鍵の長さとAKAベースキーの長さ、即ち、128ビット以上の最小値に等しいブルートフォース攻撃に対して有効鍵強度を有するキー導出をサポートします。キー階層は、3.3節で指定されています。"
    },
    {
      "indent": 6,
      "text": "The Transient EAP Keys used to protect EAP-AKA packets (K_encr, K_aut, K_re), the MSK, and the EMSK are cryptographically separate. If we make the assumption that SHA-256 behaves as a pseudo-random function, an attacker is incapable of deriving any non-trivial information about any of these keys based on the other keys. An attacker also cannot calculate the pre-shared secret from IK, CK, IK', CK', K_encr, K_aut, K_re, MSK, or EMSK by any practically feasible means.",
      "ja": "一過EAPキーはEAP-AKAパケット（K_encr、K_aut、K_re）、MSK及びEMSKは別個暗号いる保護するために使用されます。我々はSHA-256は、擬似ランダム関数として振る舞うという仮定をした場合、攻撃者が他のキーに基づいて、これらのキーのいずれかについての非自明な情報を引き出すことができません。攻撃者はまた、任意の実質的に実現可能な手段によって、IK、CK、IK「CK」、K_encr、K_aut、K_re、MSK、またはEMSKから事前共有秘密を計算することはできません。"
    },
    {
      "indent": 6,
      "text": "EAP-AKA' adds an additional layer of key derivation functions within itself to protect against the use of compromised keys. This is discussed further in Section 5.1.",
      "ja": "EAP-AKAは」妥協鍵の使用から保護するために自分自身の中に鍵導出関数の追加の層を追加します。これは、5.1節で詳しく説明されています。"
    },
    {
      "indent": 6,
      "text": "EAP-AKA' uses a pseudo-random function modeled after the one used in IKEv2 [RFC4306] together with SHA-256.",
      "ja": "EAP-AKA」は一緒にSHA-256とのIKEv2 [RFC4306]で使用したものをモデル擬似ランダム関数を使用します。"
    },
    {
      "indent": 3,
      "text": "Key strength",
      "ja": "強み"
    },
    {
      "indent": 6,
      "text": "See above.",
      "ja": "上記を参照。"
    },
    {
      "indent": 3,
      "text": "Dictionary attack resistance",
      "ja": "辞書攻撃耐性"
    },
    {
      "indent": 6,
      "text": "Under the SHA-256 assumption, the properties of EAP-AKA' are at least as good as those of EAP-AKA in this respect. Refer to [RFC4187], Section 12 for further details.",
      "ja": "SHA-256の仮定の下で、EAP-AKA」の特性は、この点でEAP-AKAのものと少なくとも同程度に良好です。 [RFC4187]、詳細については、セクション12を参照してください。"
    },
    {
      "indent": 3,
      "text": "Fast reconnect",
      "ja": "高速再接続"
    },
    {
      "indent": 6,
      "text": "Under the SHA-256 assumption, the properties of EAP-AKA' are at least as good as those of EAP-AKA in this respect. Refer to [RFC4187], Section 12 for further details. Note that implementations MUST prevent performing a fast reconnect across method types.",
      "ja": "SHA-256の仮定の下で、EAP-AKA」の特性は、この点でEAP-AKAのものと少なくとも同程度に良好です。 [RFC4187]、詳細については、セクション12を参照してください。実装は、メソッドタイプで高速再接続を行って予防しなければならないことに注意してください。"
    },
    {
      "indent": 3,
      "text": "Cryptographic binding",
      "ja": "暗号化は、結合します"
    },
    {
      "indent": 6,
      "text": "Note that this term refers to a very specific form of binding, something that is performed between two layers of authentication. It is not the same as the binding to a particular network name. The properties of EAP-AKA' are exactly the same as those of EAP-AKA in this respect, i.e., as it is not a tunnel method, this property is not applicable to it. Refer to [RFC4187], Section 12 for further details.",
      "ja": "この用語は結合の非常に具体的な形態は、認証の2つの層の間に行われるものをいいます。これは、特定のネットワーク名への結合と同じではありません。それはトンネル方式ではないようにEAP-AKAの特性は、」このプロパティは、それに適用されない、すなわち、この点でEAP-AKAのものと全く同じです。 [RFC4187]、詳細については、セクション12を参照してください。"
    },
    {
      "indent": 3,
      "text": "Session independence",
      "ja": "セッションの独立性"
    },
    {
      "indent": 6,
      "text": "The properties of EAP-AKA' are exactly the same as those of EAP-AKA in this respect. Refer to [RFC4187], Section 12 for further details.",
      "ja": "EAP-AKA」の特性は、まさにこの点でEAP-AKAのものと同じです。 [RFC4187]、詳細については、セクション12を参照してください。"
    },
    {
      "indent": 3,
      "text": "Fragmentation",
      "ja": "フラグメンテーション"
    },
    {
      "indent": 6,
      "text": "The properties of EAP-AKA' are exactly the same as those of EAP-AKA in this respect. Refer to [RFC4187], Section 12 for further details.",
      "ja": "EAP-AKA」の特性は、まさにこの点でEAP-AKAのものと同じです。 [RFC4187]、詳細については、セクション12を参照してください。"
    },
    {
      "indent": 3,
      "text": "Channel binding",
      "ja": "結合チャンネル"
    },
    {
      "indent": 6,
      "text": "EAP-AKA', like EAP-AKA, does not provide channel bindings as they're defined in [RFC3748] and [RFC5247]. New skippable attributes can be used to add channel binding support in the future, if required.",
      "ja": "それらは[RFC3748]と[RFC5247]で定義されているようEAP-AKAなどのEAP-AKA」は、チャネルバインディングを提供していません。新スキップ可能な属性が必要であれば、将来的にチャネルバインディングのサポートを追加するために使用することができます。"
    },
    {
      "indent": 6,
      "text": "However, including the Network Name field in the AKA' algorithms (which are also used for other purposes than EAP-AKA') provides a form of cryptographic separation between different network names, which resembles channel bindings. However, the network name does not typically identify the EAP (pass-through) authenticator. See the following section for more discussion.",
      "ja": "しかし、「（AKA EAP-AKA以外の目的にも使用される）アルゴリズム」におけるネットワーク名フィールドを含む、チャネルバインディングに似ている異なるネットワーク名との間の暗号分離の形態を提供します。ただし、ネットワーク名は、典型的には、EAP（パススルー）認証者を識別しません。より多くの議論については、以下のセクションを参照してください。"
    },
    {
      "indent": 0,
      "text": "5.1. Security Properties of Binding Network Names",
      "section_title": true,
      "ja": "5.1。バインディングネットワーク名のセキュリティのプロパティ"
    },
    {
      "indent": 3,
      "text": "The ability of EAP-AKA' to bind the network name into the used keys provides some additional protection against key leakage to inappropriate parties. The keys used in the protocol are specific to a particular network name. If key leakage occurs due to an accident, access node compromise, or another attack, the leaked keys are only useful when providing access with that name. For instance, a malicious access point cannot claim to be network Y if it has stolen keys from network X. Obviously, if an access point is compromised, the malicious node can still represent the compromised node. As a result, neither EAP-AKA' nor any other extension can prevent such attacks; however, the binding to a particular name limits the attacker's choices, allows better tracking of attacks, makes it possible to identify compromised networks, and applies good cryptographic hygiene.",
      "ja": "使用するキーにネットワーク名をバインドするEAP-AKA」の能力は、不適切な政党への鍵の漏洩に対するいくつかの追加の保護を提供します。プロトコルに使用されるキーは、特定のネットワーク名に特異的です。キーの漏洩事故、アクセスノードの妥協、または他の攻撃が原因で発生した場合は、その名前のアクセスを提供する場合、漏れた鍵は便利です。例えば、悪意のあるアクセスポイントは、アクセスポイントが危険にさらされている場合、悪意のあるノードが依然として損なわノードを表すことができ、当然ネットワークXから鍵を盗んだ場合、ネットワークYであると主張することはできません。その結果、どちらのEAP-AKA」やその他の拡張子は、このような攻撃を防ぐことができます。しかし、特定の名前への結合は、攻撃者の選択肢を制限し、攻撃のよりよい追跡を可能にする、妥協ネットワークを識別することが可能となり、かつ優れた暗号の衛生状態が適用されます。"
    },
    {
      "indent": 3,
      "text": "The server receives the EAP transaction from a given access network and verifies that the claim from the access network corresponds to the name that this access network should be using. It becomes impossible for an access network to claim over AAA that it is another access network. In addition, if the peer checks that the information it has received locally over the network-access link layer matches with the information the server has given it via EAP-AKA', it becomes impossible for the access network to tell one story to the AAA network and another one to the peer. These checks prevent some \"lying NAS\" (Network Access Server) attacks. For instance, a roaming partner, R, might claim that it is the home network H in an effort to lure peers to connect to itself. Such an attack would be beneficial for the roaming partner if it can attract more users, and damaging for the users if their access costs in R are higher than those in other alternative networks, such as H.",
      "ja": "サーバーは、指定されたアクセスネットワークからEAPトランザクションを受信して​​、アクセス網からの請求は、このアクセスネットワークを使用する必要がある名前に対応することを確認します。アクセスネットワークは、それが別のアクセスネットワークであることをAAAの上に主張することは不可能になります。ピアは、ネットワーク・アクセス・リンク層の上にローカルに受信した情報は、サーバが「EAP-AKAを経由して、それを与えている情報と一致することを確認した場合、アクセスネットワークは、AAAに1話をするために加えて、それは不可能になりますネットワークおよびピアへの別の1。これらのチェックは、いくつかの「嘘NAS」（ネットワークアクセスサーバ）攻撃を防ぎます。例えば、ローミングパートナー、Rは、それ自体に接続するためにピアを誘惑するための努力でホームネットワークHであることを主張するかもしれません。 Rでのアクセスコストは、H.など、他の代替のネットワークのものよりも高い場合には、このような攻撃は、ユーザーのために、それはより多くのユーザーを引き付けることができるならば、ローミングパートナーのために有益であり、損傷だろう"
    },
    {
      "indent": 3,
      "text": "Any attacker who gets hold of the keys CK and IK, produced by the AKA algorithm, can compute the keys CK' and IK' and, hence, the Master Key (MK) according to the rules in Section 3.3. The attacker could then act as a lying NAS. In 3GPP systems in general, the keys CK and IK have been distributed to, for instance, nodes in a visited access network where they may be vulnerable. In order to reduce this risk, the AKA algorithm MUST be computed with the AMF separation bit set to 1, and the peer MUST check that this is indeed the case whenever it runs EAP-AKA'. Furthermore, [3GPP.33.402] requires that no CK or IK keys computed in this way ever leave the home subscriber system.",
      "ja": "AKAアルゴリズムによって生成される鍵CKおよびIKのホールドを取得し、任意の攻撃者は、セクション3.3の規則に従って鍵CK「及びIK」と、したがって、マスター鍵（MK）を計算することができます。その後、攻撃者は嘘NASとして作用することができます。一般に3GPPシステムでは、鍵CK及びIKは、例えば、にそれらは脆弱である可能性がある訪問先アクセスネットワークのノードが分散されています。このリスクを低減するために、AKAアルゴリズムは、1に設定AMF分離ビットで計算されなければならない、それはEAP-AKAを実行するたびに、ピアは、」これは実際にそうであることを確認しなければなりません。さらに、[3GPP.33.402]何のCKまたは、このように計算されたIKキーは、これまでホーム加入者システムを残さないことが必要です。"
    },
    {
      "indent": 3,
      "text": "The additional security benefits obtained from the binding depend obviously on the way names are assigned to different access networks. This is specified in [3GPP.24.302]. See also [3GPP.23.003]. Ideally, the names allow separating each different access technology, each different access network, and each different NAS within a domain. If this is not possible, the full benefits may not be achieved. For instance, if the names identify just an access technology, use of compromised keys in a different technology can be prevented, but it is not possible to prevent their use by other domains or devices using the same technology.",
      "ja": "バインディングから取得した追加のセキュリティ上の利点は、名前が異なるアクセスネットワークに割り当てられている途中に明らかに依存しています。これは、[3GPP.24.302]で指定されています。 [3GPP.23.003]も参照してください。理想的には、名前がそれぞれ異なるアクセス技術、それぞれ異なるアクセスネットワーク、およびドメイン内の各異なるNASを分離することができます。これが不可能な場合は、完全な利点が得られないことがあります。名前だけでアクセス技術を識別した場合例えば、異なる技術で妥協キーを使用することを防止することができるが、同じ技術を使用して、他のドメインまたはデバイスがその使用を防止することはできません。"
    },
    {
      "indent": 0,
      "text": "6. IANA Considerations",
      "section_title": true,
      "ja": "6. IANAの考慮事項"
    },
    {
      "indent": 0,
      "text": "6.1. Type Value",
      "section_title": true,
      "ja": "6.1。タイプ値"
    },
    {
      "indent": 3,
      "text": "EAP-AKA' has the EAP Type value 50 in the Extensible Authentication Protocol (EAP) Registry under Method Types. Per Section 6.2 of [RFC3748], this allocation can be made with Designated Expert and Specification Required.",
      "ja": "EAP-AKAは、」メソッドの種類の拡張認証プロトコル（EAP）レジストリのEAPタイプ値50を有しています。 [RFC3748]の6.2節ごとに、この割り当ては、指定の専門家や仕様が必要で作ることができます。"
    },
    {
      "indent": 0,
      "text": "6.2. Attribute Type Values",
      "section_title": true,
      "ja": "6.2。タイプ属性値"
    },
    {
      "indent": 3,
      "text": "EAP-AKA' shares its attribute space and subtypes with EAP-SIM [RFC4186] and EAP-AKA [RFC4187]. No new registries are needed.",
      "ja": "EAP-AKAは、」EAP-SIM [RFC4186]およびEAP-AKA [RFC4187]でその属性空間とサブタイプを共有しています。新しいレジストリは必要ありません。"
    },
    {
      "indent": 3,
      "text": "However, a new Attribute Type value (23) in the non-skippable range has been assigned for AT_KDF_INPUT (Section 3.1) in the EAP-AKA and EAP-SIM Parameters registry under Attribute Types.",
      "ja": "しかし、非スキップ可能な範囲で新しい属性タイプ値（23）は、属性タイプの下でEAP-AKAおよびEAP-SIMパラメータレジストリにAT_KDF_INPUT（3.1節）のために割り当てられています。"
    },
    {
      "indent": 3,
      "text": "Also, a new Attribute Type value (24) in the non-skippable range has been assigned for AT_KDF (Section 3.2).",
      "ja": "また、非スキップ可能な範囲で新しい属性タイプ値（24）がAT_KDF（3.2節）のために割り当てられています。"
    },
    {
      "indent": 3,
      "text": "Finally, a new Attribute Type value (136) in the skippable range has been assigned for AT_BIDDING (Section 4).",
      "ja": "最後に、スキップ可能な範囲内の新しい属性タイプ値（136）をAT_BIDDING（セクション4）のために割り当てられています。"
    },
    {
      "indent": 0,
      "text": "6.3. Key Derivation Function Namespace",
      "section_title": true,
      "ja": "6.3。鍵導出関数の名前空間"
    },
    {
      "indent": 3,
      "text": "IANA has also created a new namespace for EAP-AKA' AT_KDF Key Derivation Function Values. This namespace exists under the EAP-AKA and EAP-SIM Parameters registry. The initial contents of this namespace are given below; new values can be created through the Specification Required policy [RFC5226].",
      "ja": "IANAはまた、EAP-AKA」AT_KDF鍵導出関数値に対する新しい名前空間を作成しました。この名前空間は、EAP-AKAおよびEAP-SIMパラメータのレジストリの下に存在します。この名前空間の初期の内容は以下の通りです。新しい値は仕様が必要ポリシー[RFC5226]を使用して作成することができます。"
    },
    {
      "indent": 3,
      "text": "Value      Description              Reference\n---------  ----------------------   ---------------\n0          Reserved                 [RFC5448]\n1          EAP-AKA' with CK'/IK'    [RFC5448]\n2-65535    Unassigned",
      "raw": true
    },
    {
      "indent": 0,
      "text": "7. Contributors",
      "section_title": true,
      "ja": "7.寄与"
    },
    {
      "indent": 3,
      "text": "The test vectors in Appendix C were provided by Yogendra Pal and Jouni Malinen, based on two independent implementations of this specification.",
      "ja": "付録Cのテストベクターは、本明細書の二つの独立した実装に基づいて、Yogendra PALおよびJouni Malinenによって提供されました。"
    },
    {
      "indent": 0,
      "text": "8. Acknowledgments",
      "section_title": true,
      "ja": "8.謝辞"
    },
    {
      "indent": 3,
      "text": "The authors would like to thank Guenther Horn, Joe Salowey, Mats Naslund, Adrian Escott, Brian Rosenberg, Laksminath Dondeti, Ahmad Muhanna, Stefan Rommer, Miguel Garcia, Jan Kall, Ankur Agarwal, Jouni Malinen, Brian Weis, Russ Housley, and Alfred Hoenes for their in-depth reviews and interesting discussions in this problem space.",
      "ja": "著者は、ギュンター・ホーン、ジョーSalowey、マッツ・ナズランド、エイドリアンEscott、ブライアン・ローゼンバーグ、Laksminath Dondeti、アフマドMuhanna、ステファンRommer、ミゲル・ガルシア、ヤンカル、はAnkur Agarwalさん、Jouni Malinen、ブライアン・ワイス、ラスHousley、およびアルフレッドに感謝したいと思います彼らの深いレビューと、この問題空間で興味深い議論のHoenes。"
    },
    {
      "indent": 0,
      "text": "9. References",
      "section_title": true,
      "ja": "9.参考文献"
    },
    {
      "indent": 0,
      "text": "9.1. Normative References",
      "section_title": true,
      "ja": "9.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[3GPP.24.302]      3GPP, \"3rd Generation Partnership Project;\n                   Technical Specification Group Core Network and\n                   Terminals; Access to the 3GPP Evolved Packet Core\n                   (EPC) via non-3GPP access networks; Stage 3;\n                   (Release 8)\", 3GPP Technical Specification 24.302,\n                   December 2008.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "[3GPP.33.102] 3GPP, \"3rd Generation Partnership Project; Technical Specification Group Services and System Aspects; 3G Security; Security architecture (Release 8)\", 3GPP Technical Specification 33.102, December 2008.",
      "ja": "[3GPP.33.102] 3GPP、「第3世代パートナーシッププロジェクト;技術仕様グループサービスおよびシステムアスペクト; 3Gセキュリティ;セキュリティアーキテクチャ（リリース8）」、3GPP技術仕様33.102、2008年12月。"
    },
    {
      "indent": 3,
      "text": "[3GPP.33.402] 3GPP, \"3GPP System Architecture Evolution (SAE); Security aspects of non-3GPP accesses; Release 8\", 3GPP Technical Specification 33.402, December 2008.",
      "ja": "[3GPP.33.402] 3GPPは、 \"3GPPシステムアーキテクチャエボリューション（SAE）;非3GPPのセキュリティの側面がアクセスし、リリース8\"、3GPP技術仕様33.402、2008年12月。"
    },
    {
      "indent": 3,
      "text": "[FIPS.180-2.2002] National Institute of Standards and Technology, \"Secure Hash Standard\", FIPS PUB 180-2, August 2002, <http://csrc.nist.gov/publications/ fips/fips180-2/fips180-2.pdf>.",
      "ja": "[FIPS.180-2.2002]アメリカ国立標準技術研究所、 \"セキュアハッシュ標準\"、FIPS PUB 180-2の、2002年8月、<http://csrc.nist.gov/publications/ FIPS / fips180-2 / fips180- 2.pdf>。"
    },
    {
      "indent": 3,
      "text": "[RFC2104] Krawczyk, H., Bellare, M., and R. Canetti, \"HMAC: Keyed-Hashing for Message Authentication\", RFC 2104, February 1997.",
      "ja": "[RFC2104] Krawczyk、H.、ベラー、M.、およびR.カネッティ、 \"HMAC：メッセージ認証のための鍵付きハッシュ化\"、RFC 2104、1997年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC3748] Aboba, B., Blunk, L., Vollbrecht, J., Carlson, J., and H. Levkowetz, \"Extensible Authentication Protocol (EAP)\", RFC 3748, June 2004.",
      "ja": "[RFC3748] Aboba、B.、ブルンク、L.、Vollbrecht、J.、カールソン、J.、およびH. Levkowetz、 \"拡張認証プロトコル（EAP）\"、RFC 3748、2004年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC4187] Arkko, J. and H. Haverinen, \"Extensible Authentication Protocol Method for 3rd Generation Authentication and Key Agreement (EAP-AKA)\", RFC 4187, January 2006.",
      "ja": "[RFC4187] Arkko、J.とH. Haverinen、 \"第3世代認証及び鍵合意（EAP-AKA）のための拡張認証プロトコル方式\"、RFC 4187、2006年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC5226] Narten, T. and H. Alvestrand, \"Guidelines for Writing an IANA Considerations Section in RFCs\", BCP 26, RFC 5226, May 2008.",
      "ja": "[RFC5226] Narten氏、T.とH. Alvestrand、 \"RFCsにIANA問題部に書くためのガイドライン\"、BCP 26、RFC 5226、2008年5月。"
    },
    {
      "indent": 0,
      "text": "9.2. Informative References",
      "section_title": true,
      "ja": "9.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[3GPP.23.003] 3GPP, \"3rd Generation Partnership Project; Technical Specification Group Core Network and Terminals; Numbering, addressing and identification (Release 8)\", 3GPP Draft Technical Specification 23.003, December 2008.",
      "ja": "[3GPP.23.003] 3GPPは、3GPPドラフト技術仕様23.003、2008年12月、「第3世代パートナーシップ・プロジェクト;技術仕様グループコアネットワークと端末はナンバリング、アドレッシングおよび識別（リリース8）」。"
    },
    {
      "indent": 3,
      "text": "[3GPP.35.208]      3GPP, \"3rd Generation Partnership Project;\n                   Technical Specification Group Services and System\n                   Aspects; 3G Security; Specification of the\n                   MILENAGE Algorithm Set: An example algorithm set\n                   for the 3GPP authentication and key generation\n                   functions f1, f1*, f2, f3, f4, f5 and f5*;\n                   Document 4: Design Conformance Test Data (Release\n                   8)\", 3GPP Technical Specification 35.208,\n                   December 2008.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "[FIPS.180-1.1995] National Institute of Standards and Technology, \"Secure Hash Standard\", FIPS PUB 180-1, April 1995, <http://www.itl.nist.gov/fipspubs/fip180-1.htm>.",
      "ja": "[FIPS.180-1.1995]アメリカ国立標準技術研究所、 \"セキュアハッシュ標準\"、FIPS PUB 180-1の、1995年4月、<http://www.itl.nist.gov/fipspubs/fip180-1.htm> 。"
    },
    {
      "indent": 3,
      "text": "[RFC4186] Haverinen, H. and J. Salowey, \"Extensible Authentication Protocol Method for Global System for Mobile Communications (GSM) Subscriber Identity Modules (EAP-SIM)\", RFC 4186, January 2006.",
      "ja": "[RFC4186] Haverinen、H.及びJ. Salowey、 \"移動通信用グローバルシステム（GSM）加入者識別モジュール（EAP-SIM）のための拡張認証プロトコル方法\"、RFC 4186、2006年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC4284] Adrangi, F., Lortz, V., Bari, F., and P. Eronen, \"Identity Selection Hints for the Extensible Authentication Protocol (EAP)\", RFC 4284, January 2006.",
      "ja": "[RFC4284] Adrangi、F.、Lortz、V.、バーリ、F.、およびP. Eronen、2006年1月、RFC 4284 \"アイデンティティの選択は、拡張認証プロトコル（EAP）のためのヒント\"。"
    },
    {
      "indent": 3,
      "text": "[RFC4306] Kaufman, C., \"Internet Key Exchange (IKEv2) Protocol\", RFC 4306, December 2005.",
      "ja": "[RFC4306]カウフマン、C.、 \"インターネットキーエクスチェンジ（IKEv2の）プロトコル\"、RFC 4306、2005年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC5113] Arkko, J., Aboba, B., Korhonen, J., and F. Bari, \"Network Discovery and Selection Problem\", RFC 5113, January 2008.",
      "ja": "[RFC5113] Arkko、J.、Aboba、B.、Korhonen、J.、およびF.バーリ、 \"ネットワーク探索と選択問題\"、RFC 5113、2008年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC5247] Aboba, B., Simon, D., and P. Eronen, \"Extensible Authentication Protocol (EAP) Key Management Framework\", RFC 5247, August 2008.",
      "ja": "[RFC5247] Aboba、B.、サイモン、D.、およびP. Eronen、 \"拡張認証プロトコル（EAP）鍵管理フレームワーク\"、RFC 5247、2008年8月。"
    },
    {
      "indent": 1,
      "text": "Appendix A. Changes from",
      "ja": "付録A.からの変更点"
    },
    {
      "indent": 3,
      "text": "The changes to RFC 4187 relate only to the bidding down prevention support defined in Section 4. In particular, this document does not change how the Master Key (MK) is calculated in RFC 4187 (it uses CK and IK, not CK' and IK'); neither is any processing of the AMF bit added to RFC 4187.",
      "ja": "RFC 4187への変更は、特に第4項に定義された入札ダウン防止のサポートにのみ関連し、この文書では、マスターキー（MK）はRFC 4187で計算方法を変更しません（それはCKとIKはなく、CK」とIKを使用しています「）;どちらAMFビットの任意の処理はRFC 4187に追加されていません。"
    },
    {
      "indent": 0,
      "text": "Appendix B. Importance of Explicit Negotiation",
      "ja": "明示的な交渉の付録B.重要性"
    },
    {
      "indent": 3,
      "text": "Choosing between the traditional and revised AKA key derivation functions is easy when their use is unambiguously tied to a particular radio access network, e.g., Long Term Evolution (LTE) as defined by 3GPP or evolved High Rate Packet Data (eHRPD) as defined by 3GPP2. There is no possibility for interoperability problems if this radio access network is always used in conjunction with new protocols that cannot be mixed with the old ones; clients will always know whether they are connecting to the old or new system.",
      "ja": "3GPPによって定義または3GPP2で定義された高速パケットデータ（eHRPD）の進化として、伝統的な改訂AKA鍵導出関数間で選択すると、その使用は明確に特定の無線アクセスネットワークに接続されていたときに、例えば、簡単であるロングタームエボリューション（LTE） 。この無線アクセスネットワークは、常に古いものと混合することができない新しいプロトコルと組み合わせて使用​​されている場合、相互運用性の問題のための可能性はありません。クライアントは常に彼らは古いか新しいシステムに接続しているかどうかを知ることができます。"
    },
    {
      "indent": 3,
      "text": "However, using the new key derivation functions over EAP introduces several degrees of separation, making the choice of the correct key derivation functions much harder. Many different types of networks employ EAP. Most of these networks have no means to carry any information about what is expected from the authentication process. EAP itself is severely limited in carrying any additional information, as noted in [RFC4284] and [RFC5113]. Even if these networks or EAP were extended to carry additional information, it would not affect millions of deployed access networks and clients attaching to them.",
      "ja": "しかし、EAPの上に新しい鍵導出関数を使用すると、正しいキー導出関数の選択がはるかに困難作り、分離の数度を導入しています。ネットワークの多くの異なるタイプのEAPを採用します。これらのネットワークのほとんどは、認証プロセスから期待されているかについての情報を運ぶための手段を持ちません。 [RFC4284]及び[RFC5113]に記載されているようにEAP自体は、任意の追加情報を運ぶに厳しく制限されます。これらのネットワークまたはEAPは追加の情報を運ぶために拡張されたとしても、それはそれらに付随展開アクセスネットワークとクライアントの何百万人に影響を与えません。"
    },
    {
      "indent": 3,
      "text": "Simply changing the key derivation functions that EAP-AKA [RFC4187] uses would cause interoperability problems with all of the existing implementations. Perhaps it would be possible to employ strict separation into domain names that should be used by the new clients and networks. Only these new devices would then employ the new key derivation mechanism. While this can be made to work for specific cases, it would be an extremely brittle mechanism, ripe to result in problems whenever client configuration, routing of authentication requests, or server configuration does not match expectations. It also does not help to assume that the EAP client and server are running a particular release of 3GPP network specifications. Network vendors often provide features from future releases early or do not provide all features of the current release. And obviously, there are many EAP and even some EAP-AKA implementations that are not bundled with the 3GPP network offerings. In general, these approaches are expected to lead to hard-to-diagnose problems and increased support calls.",
      "ja": "単にEAP-AKA [RFC4187]の使用は、既存の実装のすべてと相互運用性の問題を引き起こす鍵導出関数を変更します。多分新しいクライアントとネットワークで使用されるべきドメイン名に厳密に分離を採用することも可能です。のみ、これらの新しいデバイスは、新しい鍵導出メカニズムを採用するでしょう。これは、特定のケースのために働くようにすることができますが、クライアントの設定、認証要求のルーティング、またはサーバー構成が予想と一致していない時はいつでも、それは問題をもたらすのに熟した非常に脆いメカニズム、だろう。また、EAPクライアントとサーバは、3GPPネットワーク仕様の特定のリリースを実行していることを前提とする助けにはなりません。ネットワークベンダーは、多くの場合、早期将来のリリースからの機能を提供したり、現在のリリースのすべての機能を提供していません。そして明らかに、多くのEAPおよび3GPPネットワークの提供にバンドルされていなくても、いくつかのEAP-AKAの実装があります。一般的に、これらのアプローチは、ハード・診断することが問題につながることが期待されるとサポートコールを増加させています。"
    },
    {
      "indent": 0,
      "text": "Appendix C. Test Vectors",
      "ja": "付録C.テストベクトル"
    },
    {
      "indent": 3,
      "text": "Test vectors are provided below for four different cases. The test vectors may be useful for testing implementations. In the first two cases, we employ the Milenage algorithm and the algorithm configuration parameters (the subscriber key K and operator algorithm variant configuration value OP) from test set 19 in [3GPP.35.208].",
      "ja": "テストベクトルは、4つの異なる場合について、以下に提供されます。テストベクトルは、テストの実装のために有用であり得ます。最初の2つのケースでは、我々は試験からMilenageアルゴリズムとアルゴリズムの設定パラメータ（加入者鍵Kとオペレータアルゴリズムバリアント設定値OP）を使用する[3GPP.35.208]に19を設定します。"
    },
    {
      "indent": 3,
      "text": "The last two cases use artificial values as the output of AKA, and is useful only for testing the computation of values within EAP-AKA', not AKA itself.",
      "ja": "最後の2つのケースがAKAの出力として人工値を使用し、そしてだけでなくAKA自体、EAP-AKA」内の値の計算を試験するために有用です。"
    },
    {
      "indent": 3,
      "text": "Case 1",
      "ja": "ケース1"
    },
    {
      "indent": 6,
      "text": "The parameters for the AKA run are as follows:",
      "ja": "次のようにAKAの実行のためのパラメータは次のとおりです。"
    },
    {
      "indent": 9,
      "text": "Identity: \"0555444333222111\"",
      "ja": "アイデンティティ： \"0555444333222111\""
    },
    {
      "indent": 9,
      "text": "Network name: \"WLAN\"",
      "ja": "ネットワーク名：「WLAN」"
    },
    {
      "indent": 9,
      "text": "RAND: 81e9 2b6c 0ee0 e12e bceb a8d9 2a99 dfa5",
      "ja": "RAND：81e9 2b6c 0ee0 E12E bceb a8d9 2a99 DFA5"
    },
    {
      "indent": 9,
      "text": "AUTN: bb52 e91c 747a c3ab 2a5c 23d1 5ee3 51d5",
      "ja": "国土：bb52 e91c 747A c3ab 2a5c 23d1 5ee3 51d5"
    },
    {
      "indent": 9,
      "text": "IK: 9744 871a d32b f9bb d1dd 5ce5 4e3e 2e5a",
      "ja": "IK：9744 871AそれぞれD32B f9bb d1dd 5ce5 4e3e 2e5a"
    },
    {
      "indent": 9,
      "text": "CK: 5349 fbe0 9864 9f94 8f5d 2e97 3a81 c00f",
      "ja": "CK：5349 fbe0 9864 9f94 8f5d 2e97 3a81 c00f"
    },
    {
      "indent": 9,
      "text": "RES: 28d7 b0f2 a2ec 3de5",
      "ja": "RES：28d7 b0f2 a2ec 3de5"
    },
    {
      "indent": 6,
      "text": "Then the derived keys are generated as follows:",
      "ja": "次のように派生キーが生成されます。"
    },
    {
      "indent": 9,
      "text": "CK': 0093 962d 0dd8 4aa5 684b 045c 9edf fa04",
      "ja": "CK '：0093 962d 0dd8 4aa5 684B 045c 9edf FA04"
    },
    {
      "indent": 9,
      "text": "IK': ccfc 230c a74f cc96 c0a5 d611 64f5 a76c",
      "ja": "cc96 c0a5 D611の64f5のa76c a74f I」CCFC 230cと"
    },
    {
      "indent": 9,
      "text": "K_encr: 766f a0a6 c317 174b 812d 52fb cd11 a179",
      "ja": "K_encr：766f a0a6 c317 174B 812D 52fb CD11のa179"
    },
    {
      "indent": 9,
      "text": "K_aut: 0842 ea72 2ff6 835b fa20 3249 9fc3 ec23 c2f0 e388 b4f0 7543 ffc6 77f1 696d 71ea",
      "ja": "K_aut：0842 ea72 2ff6 835B FA20 3249 9fc3 EC23 c2f0 E388 b4f0 7543 ffc6 77f1 696d 71ea"
    },
    {
      "indent": 9,
      "text": "K_re: cf83 aa8b c7e0 aced 892a cc98 e76a 9b20 95b5 58c7 795c 7094 715c b339 3aa7 d17a",
      "ja": "K_re：cf83のaa8bのc7e0は892A cc98のe76a 9b20 95b5 58c7 795c 7094 715C b339の3aa7のd17aを出し抜か"
    },
    {
      "indent": 9,
      "text": "MSK: 67c4 2d9a a56c 1b79 e295 e345 9fc3 d187 d42b e0bf 818d 3070 e362 c5e9 67a4 d544 e8ec fe19 358a b303 9aff 03b7 c930 588c 055b abee 58a0 2650 b067 ec4e 9347 c75a",
      "ja": "MSK：67c4 2d9a a56c 1b79 e295 E345 9fc3 D187 d42b e0bf 818d 3070 e362 c5e9 67a4 d544 e8ec fe19 358A B303 9aff 03b7 c930 588c 055b ABEE 58a0 2650 B067のec4e 9347 c75a"
    },
    {
      "indent": 9,
      "text": "EMSK: f861 703c d775 590e 16c7 679e a387 4ada 8663 11de 2907 64d7 60cf 76df 647e a01c 313f 6992 4bdd 7650 ca9b ac14 1ea0 75c4 ef9e 8029 c0e2 90cd bad5 638b 63bc 23fb",
      "ja": "EMSK：f861の703Cのd775 590e 16c7 679e A387の4ada 8663 11DE 2907 64d7 60cf 76df 647e A01C 313F 6992 4bdd 7650 ca9b ac14 1ea0 75c4 ef9e 8029 c0e2 90cd bad5 638b 63bc 23fb"
    },
    {
      "indent": 3,
      "text": "Case 2",
      "ja": "ケース2"
    },
    {
      "indent": 6,
      "text": "The parameters for the AKA run are as follows:",
      "ja": "次のようにAKAの実行のためのパラメータは次のとおりです。"
    },
    {
      "indent": 9,
      "text": "Identity: \"0555444333222111\"",
      "ja": "アイデンティティ： \"0555444333222111\""
    },
    {
      "indent": 9,
      "text": "Network name: \"HRPD\"",
      "ja": "ネットワーク名：「HRPD」"
    },
    {
      "indent": 9,
      "text": "RAND: 81e9 2b6c 0ee0 e12e bceb a8d9 2a99 dfa5",
      "ja": "RAND：81e9 2b6c 0ee0 E12E bceb a8d9 2a99 DFA5"
    },
    {
      "indent": 9,
      "text": "AUTN: bb52 e91c 747a c3ab 2a5c 23d1 5ee3 51d5",
      "ja": "国土：bb52 e91c 747A c3ab 2a5c 23d1 5ee3 51d5"
    },
    {
      "indent": 9,
      "text": "IK: 9744 871a d32b f9bb d1dd 5ce5 4e3e 2e5a",
      "ja": "IK：9744 871AそれぞれD32B f9bb d1dd 5ce5 4e3e 2e5a"
    },
    {
      "indent": 9,
      "text": "CK: 5349 fbe0 9864 9f94 8f5d 2e97 3a81 c00f",
      "ja": "CK：5349 fbe0 9864 9f94 8f5d 2e97 3a81 c00f"
    },
    {
      "indent": 9,
      "text": "RES: 28d7 b0f2 a2ec 3de5",
      "ja": "RES：28d7 b0f2 a2ec 3de5"
    },
    {
      "indent": 6,
      "text": "Then the derived keys are generated as follows:",
      "ja": "次のように派生キーが生成されます。"
    },
    {
      "indent": 9,
      "text": "CK': 3820 f027 7fa5 f777 32b1 fb1d 90c1 a0da",
      "ja": "CK '：3820 f027 f777 7fa5の32B1は90c1 a0daをfb1d"
    },
    {
      "indent": 9,
      "text": "IK': db94 a0ab 557e f6c9 ab48 619c a05b 9a9f",
      "ja": "私はa0ab 557e f6c9 ab48 619c a05b 9a9f db94」"
    },
    {
      "indent": 9,
      "text": "K_encr: 05ad 73ac 915f ce89 ac77 e152 0d82 187b",
      "ja": "K_encr：05ad 73ac 915f ce89 ac77 E152 0d82 187B"
    },
    {
      "indent": 9,
      "text": "K_aut: 5b4a caef 62c6 ebb8 882b 2f3d 534c 4b35 2773 37a0 0184 f20f f25d 224c 04be 2afd",
      "ja": "K_aut：5b4aのCAEF 62c6 ebb8の882Bは、534C 37a0 4b35 2773 0184 f20f f25d 224cとの04beの2afdを2f3d"
    },
    {
      "indent": 9,
      "text": "K_re: 3f90 bf5c 6e5e f325 ff04 eb5e f653 9fa8 cca8 3981 94fb d00b e425 b3f4 0dba 10ac",
      "ja": "K_re：3f90 bf5c 6e5e f325 FF04 eb5e f653 9fa8 cca8 3981 94fbのd00b E425 b3f4 0dba 10AC"
    },
    {
      "indent": 9,
      "text": "MSK: 87b3 2157 0117 cd6c 95ab 6c43 6fb5 073f f15c f855 05d2 bc5b b735 5fc2 1ea8 a757 57e8 f86a 2b13 8002 e057 5291 3bb4 3b82 f868 a961 17e9 1a2d 95f5 2667 7d57 2900",
      "ja": "MSK：87b3 2157 0117 cd6cの95ab 6c43 6fb5 073f f15c f855 05d2 bc5b b735 5fc2 1ea8 A757 57e8 F86A 2b13 8002 E057 5291 3bb4 3b82 F868 A961 17e9 95f5は7d57 2900 2667を1a2d"
    },
    {
      "indent": 9,
      "text": "EMSK: c891 d5f2 0f14 8a10 0755 3e2d ea55 5c9c b672 e967 5f4a 66b4 bafa 0273 79f9 3aee 539a 5979 d0a0 042b 9d2a e28b ed3b 17a3 1dc8 ab75 072b 80bd 0c1d a612 466e 402c",
      "ja": "EMSK：c891 d5f2 8a10 0f14 0755 e967 b672 3e2d 5c9c 5F4 402Cに072b e28b ed3b 17a3 1dc8 ab75 80bd 0c1d A612 466に5979でd0a0の9D2の042b 539に0273でea55 79f9の3AEの成功を66b4へ"
    },
    {
      "indent": 3,
      "text": "Case 3",
      "ja": "ケース3"
    },
    {
      "indent": 6,
      "text": "The parameters for the AKA run are as follows:",
      "ja": "次のようにAKAの実行のためのパラメータは次のとおりです。"
    },
    {
      "indent": 11,
      "text": "Identity: \"0555444333222111\"",
      "ja": "アイデンティティ： \"0555444333222111\""
    },
    {
      "indent": 11,
      "text": "Network name: \"WLAN\"",
      "ja": "ネットワーク名：「WLAN」"
    },
    {
      "indent": 11,
      "text": "RAND: e0e0 e0e0 e0e0 e0e0 e0e0 e0e0 e0e0 e0e0",
      "ja": "RAND：e0e0 e0e0 e0e0 e0e0 e0e0 e0e0 e0e0 e0e0"
    },
    {
      "indent": 11,
      "text": "AUTN: a0a0 a0a0 a0a0 a0a0 a0a0 a0a0 a0a0 a0a0",
      "ja": "AUTN：a0a0 a0a0 a0a0 a0a0 a0a0 a0a0 a0a0 a0a0"
    },
    {
      "indent": 11,
      "text": "IK: b0b0 b0b0 b0b0 b0b0 b0b0 b0b0 b0b0 b0b0",
      "ja": "IK：b0b0 b0b0 b0b0 b0b0 b0b0 b0b0 b0b0 b0b0"
    },
    {
      "indent": 11,
      "text": "CK: c0c0 c0c0 c0c0 c0c0 c0c0 c0c0 c0c0 c0c0",
      "ja": "CK：c0c0 c0c0 c0c0 c0c0 c0c0 c0c0 c0c0 c0c0"
    },
    {
      "indent": 11,
      "text": "RES: d0d0 d0d0 d0d0 d0d0 d0d0 d0d0 d0d0 d0d0",
      "ja": "RES：d0d0 d0d0 d0d0 d0d0 d0d0 d0d0 d0d0 d0d0"
    },
    {
      "indent": 8,
      "text": "Then the derived keys are generated as follows:",
      "ja": "次のように派生キーが生成されます。"
    },
    {
      "indent": 11,
      "text": "CK': cd4c 8e5c 68f5 7dd1 d7d7 dfd0 c538 e577",
      "ja": "CK '：cd4c 8e5c 68f5 7dd1 D7D7 dfd0 c538 e577"
    },
    {
      "indent": 11,
      "text": "IK': 3ece 6b70 5dbb f7df c459 a112 80c6 5524",
      "ja": "I「3ece 6b70 5dbb f7df c459 A112 80c6 5524"
    },
    {
      "indent": 11,
      "text": "K_encr: 897d 302f a284 7416 488c 28e2 0dcb 7be4",
      "ja": "K_encr：897d 302F a284 7416 488c 28e2 0dcb 7be4"
    },
    {
      "indent": 11,
      "text": "K_aut: c407 00e7 7224 83ae 3dc7 139e b0b8 8bb5 58cb 3081 eccd 057f 9207 d128 6ee7 dd53",
      "ja": "K_aut：C407 00e7 7224 83ae 3dc7 139E b0b8 8bb5 58cb 3081 ECCD 057F 9207 D128 6ee7 dd53"
    },
    {
      "indent": 11,
      "text": "K_re: 0a59 1a22 dd8b 5b1c f29e 3d50 8c91 dbbd b4ae e230 5189 2c42 b6a2 de66 ea50 4473",
      "ja": "K_re：0a59 1a22 dd8b 5b1c f29e 3d50 8c91 dbbd b4ae E230 5189 2c42 b6a2 de66 EA50 4473"
    },
    {
      "indent": 11,
      "text": "MSK: 9f7d ca9e 37bb 2202 9ed9 86e7 cd09 d4a7 0d1a c76d 9553 5c5c ac40 a750 4699 bb89 61a2 9ef6 f3e9 0f18 3de5 861a d1be dc81 ce99 1639 1b40 1aa0 06c9 8785 a575 6df7",
      "ja": "MSK：9f7d ca9e 37bb 2202 9ed9 86e7 CD09 d4a7 0d1a c76d 9553 5c5c AC40のA750 4699 bb89 61A2 9ef6 f3e9 0f18 3de5 861A d1beのdc81のce99 1639 1b40 1aa0 06c9 8785 A575の6df7"
    },
    {
      "indent": 11,
      "text": "EMSK: 724d e00b db9e 5681 87be 3fe7 4611 4557 d501 8779 537e e37f 4d3c 6c73 8cb9 7b9d c651 bc19 bfad c344 ffe2 b52c a78b d831 6b51 dacc 5f2b 1440 cb95 1552 1cc7 ba23",
      "ja": "EMSK：724d e00b db9e 5681 87be 3fe7 4611 4557 D501 8779 537e E37F 4d3c 6c73 8cb9 7b9d C651 BC19 b​​fad c344 FFE2 b52c a78b D831 6b51 DACC 5f2b 1440 cb95 1552 1cc7 ba23"
    },
    {
      "indent": 3,
      "text": "Case 4",
      "ja": "ケース4"
    },
    {
      "indent": 6,
      "text": "The parameters for the AKA run are as follows:",
      "ja": "次のようにAKAの実行のためのパラメータは次のとおりです。"
    },
    {
      "indent": 11,
      "text": "Identity: \"0555444333222111\"",
      "ja": "アイデンティティ： \"0555444333222111\""
    },
    {
      "indent": 11,
      "text": "Network name: \"HRPD\"",
      "ja": "ネットワーク名：「HRPD」"
    },
    {
      "indent": 11,
      "text": "RAND: e0e0 e0e0 e0e0 e0e0 e0e0 e0e0 e0e0 e0e0",
      "ja": "RAND：e0e0 e0e0 e0e0 e0e0 e0e0 e0e0 e0e0 e0e0"
    },
    {
      "indent": 11,
      "text": "AUTN: a0a0 a0a0 a0a0 a0a0 a0a0 a0a0 a0a0 a0a0",
      "ja": "AUTN：a0a0 a0a0 a0a0 a0a0 a0a0 a0a0 a0a0 a0a0"
    },
    {
      "indent": 11,
      "text": "IK: b0b0 b0b0 b0b0 b0b0 b0b0 b0b0 b0b0 b0b0",
      "ja": "IK：b0b0 b0b0 b0b0 b0b0 b0b0 b0b0 b0b0 b0b0"
    },
    {
      "indent": 11,
      "text": "CK: c0c0 c0c0 c0c0 c0c0 c0c0 c0c0 c0c0 c0c0",
      "ja": "CK：c0c0 c0c0 c0c0 c0c0 c0c0 c0c0 c0c0 c0c0"
    },
    {
      "indent": 11,
      "text": "RES: d0d0 d0d0 d0d0 d0d0 d0d0 d0d0 d0d0 d0d0",
      "ja": "RES：d0d0 d0d0 d0d0 d0d0 d0d0 d0d0 d0d0 d0d0"
    },
    {
      "indent": 8,
      "text": "Then the derived keys are generated as follows:",
      "ja": "次のように派生キーが生成されます。"
    },
    {
      "indent": 11,
      "text": "CK': 8310 a71c e6f7 5488 9613 da8f 64d5 fb46",
      "ja": "CK '：8310のa71cのe6f7 5488 9613 da8f 64d5 fb46"
    },
    {
      "indent": 11,
      "text": "IK': 5adf 1436 0ae8 3819 2db2 3f6f cb7f 8c76",
      "ja": "I「5adf 1436 0ae8 3819 2db2 3f6f cb7f 8c76"
    },
    {
      "indent": 11,
      "text": "K_encr: 745e 7439 ba23 8f50 fcac 4d15 d47c d1d9",
      "ja": "K_encr：745e 7439 ba23 8f50 FCAC 4d15 d47c d1d9"
    },
    {
      "indent": 11,
      "text": "K_aut: 3e1d 2aa4 e677 025c fd86 2a4b e183 61a1 3a64 5765 5714 63df 833a 9759 e809 9879",
      "ja": "K_aut：3e1d 2aa4 025c e677 fd86 2a4b E183 61A1 3a64 5765 5714 833Aの63df 9759 e809 9879"
    },
    {
      "indent": 11,
      "text": "K_re: 99da 835e 2ae8 2462 576f e651 6fad 1f80 2f0f a119 1655 dd0a 273d a96d 04e0 fcd3",
      "ja": "K_re：99da 2ae8 2462 835e 576f e651 6fad 1f80 2f0f A119 1655 dd0a 273d a96d 04e0 FCD3"
    },
    {
      "indent": 11,
      "text": "MSK: c6d3 a6e0 ceea 951e b20d 74f3 2c30 61d0 680a 04b0 b086 ee87 00ac e3e0 b95f a026 83c2 87be ee44 4322 94ff 98af 26d2 cc78 3bac e75c 4b0a f7fd feb5 511b a8e4 cbd0",
      "ja": "MSK：cc78 3bac e75c 4b0a f7fd c6d3 a6e0 B20D 74f3 2c30 951e 61d0 680A 04b0 B086 ee87 00ac e3e0 b95f a026 83c2 26d2の98af 94ffの87beのee44 4322 feb5 511B a8e4 cbd0"
    },
    {
      "indent": 11,
      "text": "EMSK: 7fb5 6813 838a dafa 99d1 40c2 f198 f6da cebf b6af ee44 4961 1054 02b5 08c7 f363 352c b291 9644 b504 63e6 a693 5415 0147 ae09 cbc5 4b8a 651d 8787 a689 3ed8 536d",
      "ja": "EMSK：ee44 4961 1054 02b5 08c7 f363 352C b291 9644 B504の63e6のa693 b6af 7fb5 6813 838A大法99d1 40c2 f198のf6daのcebf 5415 0147 ae09のcbc5の4b8a 651D 8787 a689 3ed8 536d"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Jari Arkko Ericsson Jorvas 02420 Finland",
      "ja": "ヤリArkkoエリクソン02420 Jorvasフィンランド"
    },
    {
      "indent": 3,
      "text": "EMail: jari.arkko@piuha.net",
      "ja": "メールアドレス：jari.arkko@piuha.net"
    },
    {
      "indent": 3,
      "text": "Vesa Lehtovirta Ericsson Jorvas 02420 Finland",
      "ja": "VESA Lehtoエリクソンパワー02420 Jorvasフィンランド"
    },
    {
      "indent": 3,
      "text": "EMail: vesa.lehtovirta@ericsson.com",
      "ja": "メールアドレス：vesa.lehtovirta@ericsson.com"
    },
    {
      "indent": 3,
      "text": "Pasi Eronen Nokia Research Center P.O. Box 407 FIN-00045 Nokia Group Finland",
      "ja": "ノキア・リサーチセンター私書箱のパシEronenボックス407 FIN-00045 Nokiaのグループフィンランド"
    },
    {
      "indent": 3,
      "text": "EMail: pasi.eronen@nokia.com",
      "ja": "メールアドレス：pasi.eronen@nokia.com"
    }
  ]
}