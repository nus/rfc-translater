{
  "title": {
    "text": "RFC 5926 - Cryptographic Algorithms for the TCP Authentication Option (TCP-AO)",
    "ja": "RFC 5926 - TCP認証オプションのための暗号化アルゴリズム（TCP-AO）"
  },
  "number": 5926,
  "created_at": "2019-10-30 20:04:55.109685+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                       G. Lebovitz\nRequest for Comments: 5926                                       Juniper\nCategory: Standards Track                                    E. Rescorla\nISSN: 2070-1721                                                     RTFM\n                                                               June 2010",
      "raw": true
    },
    {
      "indent": 2,
      "text": "Cryptographic Algorithms for the TCP Authentication Option (TCP-AO)",
      "ja": "TCP認証オプションのための暗号化アルゴリズム（TCP-AO）"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "The TCP Authentication Option (TCP-AO) relies on security algorithms to provide authentication between two end-points. There are many such algorithms available, and two TCP-AO systems cannot interoperate unless they are using the same algorithms. This document specifies the algorithms and attributes that can be used in TCP-AO's current manual keying mechanism and provides the interface for future message authentication codes (MACs).",
      "ja": "TCP認証オプション（TCP-AO）は、2つのエンドポイント間の認証を提供するために、セキュリティ・アルゴリズムに依存しています。そこに多くのそのようなアルゴリズムが利用可能であり、それらが同じアルゴリズムを使用していない限り、2つのTCP-AOシステムは、相互運用することはできません。この文書では、TCP-AOの現在の手動キーイング機構で使用することができるアルゴリズムおよび属性を指定し、将来のメッセージ認証コード（MAC）のためのインタフェースを提供します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 5741のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc5926.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc5926で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2010 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2010 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................2\n2. Requirements ....................................................3\n   2.1. Requirements Language ......................................3\n   2.2. Algorithm Requirements .....................................3\n   2.3. Requirements for Future MAC Algorithms .....................3\n3. Algorithms Specified ............................................4\n   3.1. Key Derivation Functions (KDFs) ............................4\n        3.1.1. Concrete KDFs .......................................5\n               3.1.1.1. KDF_HMAC_SHA1 ..............................6\n               3.1.1.2. KDF_AES_128_CMAC ...........................7\n               3.1.1.3. Tips for User Interfaces Regarding KDFs ....9\n   3.2. MAC Algorithms .............................................9\n        3.2.1. The Use of HMAC-SHA-1-96 ...........................10\n        3.2.2. The Use of AES-128-CMAC-96 .........................11\n4. Security Considerations ........................................11\n5. IANA Considerations ............................................13\n6. Acknowledgements ...............................................13\n7. References .....................................................14\n   7.1. Normative References ......................................14\n   7.2. Informative References ....................................14",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "This document is a companion to [RFC5925]. Like most modern security protocols, TCP-AO allows users to choose which cryptographic algorithm(s) they want to use to meet their security needs.",
      "ja": "この文書では、[RFC5925]に仲間です。最新のセキュリティプロトコルと同様に、TCP-AOにより、ユーザーはセキュリティのニーズを満たすために使用したい暗号アルゴリズム（複数可）を選択することができます。"
    },
    {
      "indent": 3,
      "text": "TCP-AO provides cryptographic authentication and message integrity verification between two end-points. In order to accomplish this function, message authentication codes (MACs) are used, which then rely on shared keys. There are various ways to create MACs. The use of hash-based MACs (HMACs) is defined in [RFC2104]. The use of cipher-based MACs (CMACs) is defined in [NIST-SP800-38B].",
      "ja": "TCP-AOは、2つのエンドポイント間の暗号化、認証とメッセージの完全性の検証を提供します。この機能を達成するために、メッセージ認証コード（MAC）を共有鍵に依存した、使用されています。 MACを作成するための様々な方法があります。ハッシュベースのMac（HMACs）の使用は、[RFC2104]で定義されています。暗号ベースのMac（CMACs）の使用は、[NIST-SP800-38B]で定義されています。"
    },
    {
      "indent": 3,
      "text": "This RFC defines the general requirements for MACs used in TCP-AO, both for currently specified MACs and for any future specified MACs. It specifies two MAC algorithms required in all TCP-AO implementations. It also specifies two key derivation functions (KDFs) used to create the traffic keys used by the MACs. These KDFs are also required by all TCP-AO implementations.",
      "ja": "このRFCは、現在指定されたMACのためと将来の指定されたMac用の両方、TCP-AOで使用されるMACのための一般的な要件を定義します。これは、すべてのTCP-AOの実装に必要な2つのMACアルゴリズムを指定します。それはまたのMACで使用されるトラフィックキーを作成するために使用される二つの鍵導出関数（KDFs）を指定します。これらのKDFsは、すべてのTCP-AOの実装によって必要とされています。"
    },
    {
      "indent": 0,
      "text": "2. Requirements",
      "section_title": true,
      "ja": "2.要件"
    },
    {
      "indent": 0,
      "text": "2.1. Requirements Language",
      "section_title": true,
      "ja": "2.1. 要件言語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はあります[RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 3,
      "text": "When used in lowercase, these words convey their typical use in common language, and they are not to be interpreted as described in [RFC2119].",
      "ja": "小文字で使用される場合、これらの言葉は、共通言語での典型的な使用を伝え、それらは[RFC2119]に記載されているように解釈されるべきではありません。"
    },
    {
      "indent": 0,
      "text": "2.2. Algorithm Requirements",
      "section_title": true,
      "ja": "2.2. アルゴリズムの要件"
    },
    {
      "indent": 3,
      "text": "This is the initial specification of required cryptography for TCP-AO, and indicates two MAC algorithms and two KDFs. All four components MUST be implemented in order for the implementation to be fully compliant with this RFC.",
      "ja": "これは、TCP-AOのために必要な暗号化の初期の仕様であり、2つのMACアルゴリズムと2 KDFsを示しています。すべての4つのコンポーネントが実装はこのRFCに完全に準拠するようにするために実装する必要があります。"
    },
    {
      "indent": 3,
      "text": "The following table indicates the required MAC algorithms and KDFs for TCP-AO:",
      "ja": "次の表は、TCP-AOのために必要なMACアルゴリズムとKDFsを示しています。"
    },
    {
      "indent": 11,
      "text": "Requirement Authentication Algorithm",
      "ja": "要件認証アルゴリズム"
    },
    {
      "indent": 11,
      "text": "------------     ------------------------",
      "raw": true
    },
    {
      "indent": 11,
      "text": "MUST HMAC-SHA-1-96 [RFC2104][FIPS-180-3]",
      "ja": "HMAC-SHA-1-96 [RFC2104] [FIPS-180-3] MUST"
    },
    {
      "indent": 11,
      "text": "MUST AES-128-CMAC-96 [NIST-SP800-38B][FIPS197]",
      "ja": "MUST AES-128-CMAC-96 [NIST-SP800-38B] [FIPS197]"
    },
    {
      "indent": 11,
      "text": "Requirement Key Derivation Function (KDF)",
      "ja": "要件鍵導出関数（KDF）"
    },
    {
      "indent": 11,
      "text": "-------------    ------------------------",
      "raw": true
    },
    {
      "indent": 11,
      "text": "MUST KDF_HMAC_SHA1",
      "ja": "KDF_HMAC_SHA1なければなりません。"
    },
    {
      "indent": 11,
      "text": "MUST KDF_AES_128_CMAC",
      "ja": "MUST KDF_AES_128_CMAC"
    },
    {
      "indent": 3,
      "text": "For an explanation of why two MAC algorithms were mandated, see the Section 4.",
      "ja": "2つのMACアルゴリズムが義務付けられた理由については、第4章を参照してください。"
    },
    {
      "indent": 0,
      "text": "2.3. Requirements for Future MAC Algorithms",
      "section_title": true,
      "ja": "2.3. 今後のMACアルゴリズムの要件"
    },
    {
      "indent": 3,
      "text": "TCP-AO is intended to support cryptographic agility. As a result, this document includes recommendations in various places for future MAC and KDF algorithms when used for TCP-AO. For future MAC algorithms specifically, they SHOULD protect at least 2**48 messages with a collision probability of less than one in 10**9.",
      "ja": "TCP-AOは、暗号俊敏性をサポートすることを意図しています。 TCP-AOのために使用された場合、結果として、この文書は、将来のMACおよびKDFアルゴリズムのための様々な場所での勧告が含まれています。将来のMACアルゴリズムについて、具体的に、彼らは** 9 10未満1の衝突確率で少なくとも2 ** 48メッセージを保護する必要があります。"
    },
    {
      "indent": 0,
      "text": "3. Algorithms Specified",
      "section_title": true,
      "ja": "3.アルゴリズム指定"
    },
    {
      "indent": 3,
      "text": "TCP-AO requires two classes of cryptographic algorithms used on a particular connection, and refers to this document to define them both:",
      "ja": "TCP-AOは、特定の接続に使用される暗号アルゴリズムの2つのクラスを必要とし、それらの両方を定義するには、このドキュメントを参照します。"
    },
    {
      "indent": 7,
      "text": "(1)  Key Derivation Functions (KDFs), which name a pseudorandom\n     function (PRF) and use a Master_Key and some connection-\n     specific input with that PRF to produce Traffic_Keys, the\n     keys suitable for authenticating and integrity checking\n     individual TCP segments, as described in TCP-AO.",
      "raw": true
    },
    {
      "indent": 7,
      "text": "(2) Message Authentication Code (MAC) algorithms, which take a key and a message and produce an authentication tag that can be used to verify the integrity and authenticity of those messages.",
      "ja": "（2）キーとメッセージを取得し、それらのメッセージの完全性及び真正性を検証するために使用することができる認証タグを生成するメッセージ認証コード（MAC）アルゴリズムを、。"
    },
    {
      "indent": 3,
      "text": "In TCP-AO, these algorithms are always used in pairs. Each MAC algorithm MUST specify the KDF to be used with that MAC algorithm. However, a KDF MAY be used with more than one MAC algorithm.",
      "ja": "TCP-AOでは、これらのアルゴリズムは常にペアで使用されています。各MACアルゴリズムは、そのMACアルゴリズムで使用されるようにKDFを指定しなければなりません。しかし、KDFは、複数のMACアルゴリズムで使用されるかもしれません。"
    },
    {
      "indent": 0,
      "text": "3.1. Key Derivation Functions (KDFs)",
      "section_title": true,
      "ja": "3.1. 鍵導出関数（KDFs）"
    },
    {
      "indent": 3,
      "text": "TCP-AO's Traffic_Keys are derived using KDFs. The KDFs used in TCP-AO's current manual keying have the following interface:",
      "ja": "TCP-AOのTraffic_KeysはKDFsを使用して導出されています。 TCP-AOの現在の手動キー入力で使用KDFsは、次のインタフェースを持っています："
    },
    {
      "indent": 7,
      "text": "Traffic_Key = KDF_alg(Master_Key, Context, Output_Length)",
      "ja": "Traffic_Key = KDF_alg（master_keyに、コンテキスト、OUTPUT_LENGTH）"
    },
    {
      "indent": 3,
      "text": "where:",
      "ja": "どこ："
    },
    {
      "indent": 6,
      "text": "- KDF_alg: the specific pseudorandom function (PRF) that is the basic building block used in constructing the given Traffic_Key.",
      "ja": " -  KDF_alg：所与Traffic_Keyを構築する際に使用される基本的なビルディング・ブロックである特定の擬似ランダム関数（PRF）。"
    },
    {
      "indent": 6,
      "text": "- Master_Key: In TCP-AO's manual key mode, this is a key shared by both peers, entered via some interface to their respective configurations. The Master_Key is used as the seed for the KDF. We assume that this is a human-readable pre-shared key (PSK); thus, we assume it is of variable length. Master_Keys SHOULD be random, but might not be (e.g., badly chosen by the user). For interoperability, the management interface by which the PSK is configured MUST accept ASCII strings, and SHOULD also allow for the configuration of any arbitrary binary string in hexadecimal form. Other configuration methods MAY be supported.",
      "ja": " -  master_keyに：TCP-AOのマニュアルキーモードでは、これは、両方のピアが共有する鍵であり、それぞれの構成にはいくつかのインタフェースを介して入力されました。 master_keyには、KDFのためのシードとして使用されます。これは、人間が読み取り可能な事前共有キー（PSK）であることを前提としています。したがって、我々はそれが可変長であると仮定します。 Master_Keysはランダムであるべきであるが、（例えば、ひどくユーザによって選択される）ではないかもしれません。相互運用性のため、PSKが設定されていることにより、管理インターフェイスは、ASCII文字列を受け入れなければなりません、また、16進数形式で任意のバイナリ文字列の設定を可能にすべきです。その他の設定方法をサポートすることができます。"
    },
    {
      "indent": 6,
      "text": "- Context: A binary string containing information related to the specific connection for this derived keying material, as defined in [RFC5925], Section 5.2.",
      "ja": " - コンテキスト：[RFC5925]で定義されるように、この派生鍵材料、セクション5.2の特定の接続に関連する情報を含むバイナリ文字列。"
    },
    {
      "indent": 6,
      "text": "- Output_Length: The length, in bits, of the key that the KDF will produce. This length must be the size required for the MAC algorithm that will use the PRF result as a seed.",
      "ja": " -  OUTPUT_LENGTH：長さ、ビットで、鍵のKDFを生成すること。この長さは、シードとしてPRFの結果を使用するMACアルゴリズムのために必要な大きさでなければなりません。"
    },
    {
      "indent": 3,
      "text": "When invoked, a KDF generates a string of length Output_Length bits based on the Master_Key and context value. This result may then be used as a cryptographic key for any algorithm that takes an Output_Length length key. A KDF MAY specify a maximum Output_Length parameter.",
      "ja": "呼び出されたとき、KDFはmaster_keyに、コンテキスト値に基づいて、長OUTPUT_LENGTHビット列を生成します。この結果は、OUTPUT_LENGTH長キーをとる任意のアルゴリズムのための暗号キーとして使用することができます。 KDFは最大OUTPUT_LENGTHパラメータを指定するかもしれません。"
    },
    {
      "indent": 0,
      "text": "3.1.1. Concrete KDFs",
      "section_title": true,
      "ja": "3.1.1. コンクリートKDFs"
    },
    {
      "indent": 3,
      "text": "This document defines two KDF algorithms, each paired with a corresponding PRF algorithm as explained below:",
      "ja": "以下に説明するように、この文書は、それぞれが対応するPRFアルゴリズムと対をなす2つのKDFアルゴリズムを定義します。"
    },
    {
      "indent": 7,
      "text": "* KDF_HMAC_SHA1 based on PRF-HMAC-SHA1 [RFC2104][FIPS-180-3]",
      "ja": "PRF-HMAC-SHA1 [RFC2104] [FIPS-180-3]に基づい* KDF_HMAC_SHA1"
    },
    {
      "indent": 7,
      "text": "* KDF_AES_128_CMAC based on AES-CMAC-PRF-128 [NIST-SP800-38B][FIPS197]",
      "ja": "AES-CMAC-PRF-128 [NIST-SP800-38B]に基づいて、* KDF_AES_128_CMAC [FIPS197]"
    },
    {
      "indent": 3,
      "text": "Both of these KDFs are based on the iteration-mode KDFs specified in [NIST-SP800-108]. This means that they use an underlying pseudorandom function (PRF) with a fixed-length output, 128 bits in the case of the AES-CMAC, and 160 bits in the case of HMAC-SHA1. The KDF generates an arbitrary number of output bits by operating the PRF in a \"counter mode\", where each invocation of the PRF uses a different input block differentiated by a block counter.",
      "ja": "これらKDFsの両方が[NIST-SP800-108]で指定された反復モードKDFsに基づいています。これは、HMAC-SHA1の場合、固定長出力にAES-CMACの場合には128ビット、160ビット、基礎となる擬似ランダム関数（PRF）を使用することを意味します。 KDFは、PRFの各呼び出しは、ブロックカウンタによって区別異なる入力ブロックを使用して「カウンタモード」にPRFを操作することにより、出力ビットの任意の数を生成します。"
    },
    {
      "indent": 3,
      "text": "Each input block is constructed as follows:",
      "ja": "次のように各入力ブロックが構成されています。"
    },
    {
      "indent": 8,
      "text": "( i || Label || Context || Output_Length )",
      "ja": "（私はラベル|| ||コンテキストOUTPUT_LENGTHを||します）"
    },
    {
      "indent": 6,
      "text": "Where",
      "ja": "どこ"
    },
    {
      "indent": 6,
      "text": "- \"||\": For any X || Y, \"||\" represents a concatenation operation of the binary strings X and Y.",
      "ja": " -  \"||\"：任意のXについては|| Y、 \"||\"バイナリ文字列XとYの連結演算を表します"
    },
    {
      "indent": 6,
      "text": "- i: A counter, a binary string that is an input to each iteration of the PRF in counter mode. The counter \"i\" is represented in a single octet. The number of iterations will depend on the specific size of the Output_Length desired for a given MAC. \"i\" always starts = 1.",
      "ja": " -  I：カウンタ、カウンタモードにおけるPRFの各反復に入力されるバイナリ文字列。カウンタは、「私は、」単一のオクテットで表現されます。反復の数は、与えられたMACのための所望のOUTPUT_LENGTHの特定の大きさに依存するであろう。 \"i\" は常に1 =開始します。"
    },
    {
      "indent": 6,
      "text": "- Label: A binary string that clearly identifies the purpose of this KDF's derived keying material. For TCP-AO, we use the ASCII string \"TCP-AO\", where the last character is the capital letter \"O\", not to be confused with a zero. While this may seem like overkill in this specification since TCP-AO only describes one call to the KDF, it is included in order to comply with FIPS 140 certifications.",
      "ja": " - レーベル：明確にこのKDFの派生鍵素材の目的を特定するバイナリ文字列。 TCP-AOのために、我々は最後の文字が大文字の「O」で、ゼロと混同しないASCII文字列「TCP-AO」を、使用しています。 TCP-AOのみKDFへの1つの呼び出しを記述するので、これはこの仕様でやり過ぎのように思えるかもしれないが、それは、FIPS 140の認定に準拠するために含まれています。"
    },
    {
      "indent": 6,
      "text": "- Context: The context argument provided to the KDF interface, as described above in Section 3.1 .",
      "ja": " - コンテキスト：3.1節で上述したように、KDFインタフェースに提供コンテキスト引数。"
    },
    {
      "indent": 6,
      "text": "- Output_Length: The length, in bits, of the key that the KDF will produce. The Output_length is represented within two octets. This length must be the size required for the MAC algorithm that will use the PRF result as a seed.",
      "ja": " -  OUTPUT_LENGTH：長さ、ビットで、鍵のKDFを生成すること。 OUTPUT_LENGTHは、2つのオクテット内表されます。この長さは、シードとしてPRFの結果を使用するMACアルゴリズムのために必要な大きさでなければなりません。"
    },
    {
      "indent": 3,
      "text": "The output of multiple PRF invocations is simply concatenated. For the Traffic_Key, values of multiple PRF invocations are concatenated and truncated as needed to create a Traffic_Key of the desired length. For instance, if one were using KDF_HMAC_SHA1, which uses a 160-bit internal PRF to generate 320 bits of data, one would execute the PRF twice, once with i=1 and once with i=2. The result would be the entire output of the first invocation concatenated with the second invocation. For example,",
      "ja": "複数PRF呼び出しの出力は、単純に連結されています。所望の長さのTraffic_Keyを作成するために必要に応じてTraffic_Keyため、複数PRF呼び出しの値は、連結および切断されます。一つは、データの320ビットを生成するために、160ビットの内部PRFを使用KDF_HMAC_SHA1を、使用していた場合、例えば、一方が、I = 2で一度= Iで1回、2回1 PRFを実行してしまいます。結果は、2番目の呼び出しと連結最初の呼び出しの全体の出力であろう。例えば、"
    },
    {
      "indent": 2,
      "text": "Traffic_Key = KDF_alg(Master_Key, 1 || Label || Context || Output_length) || KDF_alg(Master_Key, 2 || Label || Context || Output_length)",
      "ja": "Traffic_Key = KDF_alg（master_keyに、1つの|| ||ラベルOUTPUT_LENGTH ||コンテキスト）|| KDF_alg（master_keyに、2 || ||ラベルOUTPUT_LENGTH ||コンテキスト）"
    },
    {
      "indent": 3,
      "text": "If the number of bits required is not an exact multiple of the output size of the PRF, then the output of the final invocation of the PRF is truncated as necessary.",
      "ja": "必要なビットの数は、PRFの出力サイズの倍数でない場合、PRFの最終呼び出しの出力は、必要に応じて切り捨てられます。"
    },
    {
      "indent": 0,
      "text": "3.1.1.1. KDF_HMAC_SHA1",
      "section_title": true,
      "ja": "3.1.1.1。 KDF_HMAC_SHA1"
    },
    {
      "indent": 3,
      "text": "For KDF_HMAC_SHA1:",
      "ja": "KDF_HMAC_SHA1の場合："
    },
    {
      "indent": 3,
      "text": "- PRF for KDF_alg: HMAC-SHA1 [RFC2104][FIPS-180-3].",
      "ja": " -  KDF_alg用PRF：HMAC-SHA1 [RFC2104] [FIPS-180-3]。"
    },
    {
      "indent": 3,
      "text": "- Use: HMAC-SHA1(Key, Input).",
      "ja": " - 使用：HMAC-SHA1（キー、入力）。"
    },
    {
      "indent": 3,
      "text": "- Key: Master_Key, configured by user, and passed to the KDF.",
      "ja": " - キー：master_keyに、ユーザーによって構成され、KDFに渡されます。"
    },
    {
      "indent": 3,
      "text": "- Input: ( i || Label || Context || Output_Length)",
      "ja": " - 入力：（I || ||ラベルコンテキスト|| OUTPUT_LENGTH）"
    },
    {
      "indent": 3,
      "text": "- Output_Length: 160 bits.",
      "ja": " -  OUTPUT_LENGTH：160ビット。"
    },
    {
      "indent": 3,
      "text": "- Result: Traffic_Key, used in the MAC function by TCP-AO.",
      "ja": " - 結果：TCP-AOでMAC機能で使用Traffic_Key、。"
    },
    {
      "indent": 0,
      "text": "3.1.1.2. KDF_AES_128_CMAC",
      "section_title": true,
      "ja": "3.1.1.2。 KDF_AES_128_CMAC"
    },
    {
      "indent": 3,
      "text": "For KDF_AES_128_CMAC:",
      "ja": "KDF_AES_128_CMACの場合："
    },
    {
      "indent": 3,
      "text": "- PRF for KDF_alg: AES-CMAC-PRF-128 [NIST-SP800-38B][FIPS197].",
      "ja": " -  KDF_alg用PRF：AES-CMAC-PRF-128 [NIST-SP800-38B] [FIPS197]。"
    },
    {
      "indent": 3,
      "text": "- Use: AES-CMAC(Key, Input).",
      "ja": " - 使用：AES-CMAC（キー、入力）。"
    },
    {
      "indent": 3,
      "text": "- Key: Master_Key (see usage below)",
      "ja": " - キー：master_keyに（下記の使用を参照してください）"
    },
    {
      "indent": 3,
      "text": "- Input: ( i || Label || Context || Output_Length)",
      "ja": " - 入力：（I || ||ラベルコンテキスト|| OUTPUT_LENGTH）"
    },
    {
      "indent": 3,
      "text": "- Output_Length: 128 bits.",
      "ja": " -  OUTPUT_LENGTH：128ビット。"
    },
    {
      "indent": 3,
      "text": "- Result: Traffic_Key, used in the MAC function by TCP-AO",
      "ja": " - 結果：TCP-AOでMAC機能で使用Traffic_Key、"
    },
    {
      "indent": 3,
      "text": "The Master_Key in TCP-AO's current manual keying mechanism is a shared secret, entered by an administrator. It is passed via an out-of-band mechanism between two devices, and often between two organizations. The shared secret does not have to be 16 octets, and the length may vary. However, AES_128_CMAC requires a key of exactly 16 octets (128 bits) in length. We could mandate that implementations force administrators to input Master_Keys of exactly 128-bit length when using AES_128_CMAC, and with sufficient randomness, but this places undue burden on the implementors and deployers. This specification RECOMMENDS that deployers use a randomly generated 128-bit string as the Master_Key, but acknowledges that deployers may not.",
      "ja": "TCP-AOの現在の手動キーイングメカニズムでmaster_keyには、管理者が入力した、共有秘密です。これは、2つの組織間で、多くの場合、2つのデバイス間の帯域外機構を介して渡され、されています。共有秘密鍵は16オクテットである必要はありません。また、長さが異なる場合があります。しかし、AES_128_CMACは長さが正確に16オクテット（128ビット）のキーを必要とします。私たちは、AES_128_CMACを使用した場合、正確に128ビット長の入力Master_Keysへの実装力の管理者を強制し、十分なランダム性を持つが、これは実装者とデプロイヤに過度の負担を課すことができます。この仕様は、デプロイヤがmaster_keyにようにランダムに生成された128ビットのビット列を使用することをお勧めしますが、デプロイヤではないことを認めています。"
    },
    {
      "indent": 3,
      "text": "To handle variable length Master_Keys, we use the same mechanism as described in [RFC4615], Section 3. First, we use AES_128_CMAC with a fixed key of all zeros as a \"randomness extractor\", while using the shared secret Master_Key, MK, as the message input, to produce a 128- bit key Derived_Master_Key (K). Second, we use the result as a key, and run AES-128_CMAC again, this time using the result K as the Key, and the true input block as the Input to yield the Traffic_Key (TK) used in the MAC over the message. The description follows:",
      "ja": "[RFC4615]、セクションまずで説明したように可変長Master_Keysを処理するために、我々は同じ機構を使用し、MK共有秘密master_keyにを使用しながら、我々はとして、「ランダム抽出」などのすべてのゼロの固定キーとAES_128_CMACを使用しますメッセージ入力、128ビット鍵Derived_Master_Key（K）を生成します。第二に、我々はキーとして結果を使用して、キーとして、結果K、およびメッセージの上にMACで使用Traffic_Key（TK）を生成する入力として、真の入力ブロックを使用して、再びこの時間をAES-128_CMACを実行します。説明は次の通りです。"
    },
    {
      "indent": 3,
      "text": "+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n+                        KDF-AES-128-CMAC                           +\n+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n+                                                                   +\n+ Input  : MK (Master_Key, the variable-length shared secret)       +\n+        : I (Input, i.e., the input data of the PRF)               +\n+        : MKlen (length of MK in octets)                           +\n+        : len (length of M in octets)                              +\n+ Output : TK (Traffic_Key, 128-bit Pseudo-Random Variable)         +\n+                                                                   +\n+-------------------------------------------------------------------+\n+ Variable: K (128-bit key for AES-CMAC)                            +\n+                                                                   +\n+ Step 1.   If MKlen is equal to 16                                 +\n+ Step 1a.  then                                                    +\n+               K := MK;                                            +\n+ Step 1b.  else                                                    +\n+               K := AES-CMAC(0^128, MK, MKlen);                    +\n+ Step 2.   TK := AES-CMAC(K, I, len);                              +\n+           return TK;                                              +\n+                                                                   +\n+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++",
      "raw": true
    },
    {
      "indent": 33,
      "text": "Figure 1",
      "ja": "図1"
    },
    {
      "indent": 3,
      "text": "In step 1, the 128-bit key, K, for AES-CMAC is derived as follows:",
      "ja": "ステップ1において、128ビット鍵、K、次のようにAES-CMACが誘導されるため。"
    },
    {
      "indent": 3,
      "text": "o If the Master_Key, MK, provided by the administrator is exactly 128 bits, then we use it as is.",
      "ja": "管理者が提供master_keyに、MKは、正確に128ビットである場合であるとして、O、そして我々はそれを使用しています。"
    },
    {
      "indent": 3,
      "text": "o If it is longer or shorter than 128 bits, then we derive the key K by applying the AES-CMAC algorithm using the 128-bit all-zero string as the key and MK as the input message. This step is described in 1b.",
      "ja": "それはより長い又はより短い128ビットである場合、O、我々は、入力メッセージとキーMKとして128ビットすべてゼロの文字列を使用してAES-CMACアルゴリズムを適用することにより、鍵Kを導き出します。このステップは、1bに記載されています。"
    },
    {
      "indent": 3,
      "text": "In step 2, we apply the AES-CMAC algorithm again, this time using K as the key and I as the input message.",
      "ja": "ステップ2において、我々は、入力メッセージとキーとIとしてKを使用して、再び、この時間をAES-CMACアルゴリズムを適用します。"
    },
    {
      "indent": 3,
      "text": "The output of this algorithm returns TK, the Traffic_Key, which is 128 bits and is suitable for use in the MAC function on each TCP segment of the connection.",
      "ja": "このアルゴリズムの出力は128ビットであり、接続の各TCPセグメント上のMAC機能に使用するのに適しているTK、Traffic_Keyを返します。"
    },
    {
      "indent": 0,
      "text": "3.1.1.3. Tips for User Interfaces Regarding KDFs",
      "section_title": true,
      "ja": "3.1.1.3。 KDFsに関してはユーザインタフェースのためのヒント"
    },
    {
      "indent": 3,
      "text": "This section provides suggested representations for the KDFs in implementation user interfaces (UIs). Following these guidelines across common implementations will make interoperability easier and simpler for deployers.",
      "ja": "このセクションでは、インプリメンテーションのユーザーインターフェイス（UI）でKDFsための提案の表現を提供します。一般的な実装間でこれらのガイドラインに従うことでデプロイヤのための相互運用性を容易かつ簡単になります。"
    },
    {
      "indent": 3,
      "text": "UIs SHOULD refer to the choice of KDF_HMAC_SHA1 as simply \"SHA1\".",
      "ja": "UIは単に「SHA1」としてKDF_HMAC_SHA1の選択を参照してください。"
    },
    {
      "indent": 3,
      "text": "UIs SHOULD refer to the choice of KDF_AES_128_CMAC as simply \"AES128\".",
      "ja": "UIは単に「AES128」としてKDF_AES_128_CMACの選択を参照してください。"
    },
    {
      "indent": 3,
      "text": "The initial IANA registry values reflect these two entries.",
      "ja": "初期のIANAレジストリ値は、これら2つのエントリを反映しています。"
    },
    {
      "indent": 3,
      "text": "UIs SHOULD use KDF_HMAC_SHA1 as the default selection in TCP-AO settings. KDF_HMAC_SHA1 is preferred at this time because it has wide support, being present in most implementations in the marketplace.",
      "ja": "UIはTCP-AOの設定で、デフォルトの選択としてKDF_HMAC_SHA1を使用すべきです。 KDF_HMAC_SHA1は、それが市場でほとんどの実装中に存在する、幅広い支持を持っているので、この時点で好ましいです。"
    },
    {
      "indent": 0,
      "text": "3.2. MAC Algorithms",
      "section_title": true,
      "ja": "3.2.  MACアルゴリズム"
    },
    {
      "indent": 3,
      "text": "Each MAC_alg defined for TCP-AO has three fixed elements as part of its definition:",
      "ja": "TCP-AOのために定義された各MAC_algは、その定義の一部として3つの固定要素を有します。"
    },
    {
      "indent": 3,
      "text": "- KDF_Alg: Name of the TCP-AO KDF algorithm used to generate the Traffic_Key.",
      "ja": " -  KDF_Alg：Traffic_Keyを生成するために使用されるTCP-AO KDFアルゴリズムの名前。"
    },
    {
      "indent": 3,
      "text": "- Key_Length: Length, in bits, required for the Traffic_Key used in this MAC.",
      "ja": " -  Key_Length：長さ、ビットで、このMACで使用Traffic_Keyために必要。"
    },
    {
      "indent": 3,
      "text": "- MAC_Length: The final length of the bits used in the TCP-AO MAC field. This value may be a truncation of the MAC function's original output length.",
      "ja": " -  MAC_Length：TCP-AO MACフィールドに使用されるビットの最終的な長さ。この値は、MAC機能のオリジナルの出力長の切り捨てかもしれません。"
    },
    {
      "indent": 3,
      "text": "MACs computed for TCP-AO have the following interface:",
      "ja": "TCP-AOのために計算されたMACは、次のインタフェースを持っています："
    },
    {
      "indent": 7,
      "text": "MAC = MAC_alg(Traffic_Key, Message)",
      "ja": "MAC = MAC_alg（Traffic_Key、メッセージ）"
    },
    {
      "indent": 3,
      "text": "where:",
      "ja": "どこ："
    },
    {
      "indent": 6,
      "text": "- MAC_alg: MAC Algorithm used.",
      "ja": " -  MAC_alg：MACアルゴリズムを使用しました。"
    },
    {
      "indent": 6,
      "text": "- Traffic_Key: Variable; the result of KDF.",
      "ja": " -  Traffic_Key：変数; KDFの結果。"
    },
    {
      "indent": 6,
      "text": "- Message The message to be authenticated, as specified in [RFC5925], Section 5.1.",
      "ja": " -  [RFC5925]で指定されるようにメッセージメッセージは、認証され、セクション5.1。"
    },
    {
      "indent": 3,
      "text": "This document specifies two MAC algorithm options for generating the MAC as used by TCP-AO:",
      "ja": "このドキュメントでは、TCP-AOで使用されるMACを生成するための2つのMACアルゴリズムのオプションを指定します。"
    },
    {
      "indent": 7,
      "text": "* HMAC-SHA-1-96 based on [RFC2104] and [FIPS-180-3].",
      "ja": "* HMAC-SHA-1-96 [RFC2104]と[FIPS-180-3]に基づきます。"
    },
    {
      "indent": 7,
      "text": "* AES-128-CMAC-96 based on [NIST-SP800-38B][FIPS197]",
      "ja": "* AES-128-CMAC-96 [NIST-SP800-38B] [FIPS197]に基づきます"
    },
    {
      "indent": 3,
      "text": "Both provide a high level of security and efficiency. The AES-128- CMAC-96 is potentially more efficient, particularly in hardware, but HMAC-SHA-1-96 is more widely used in Internet protocols and in most cases could be supported with little or no additional code in today's deployed software and devices.",
      "ja": "両方のセキュリティと効率の高いレベルを提供します。 AES-128 CMAC-96、特にハードウェアでは、潜在的に、より効率的ですが、HMAC-SHA-1-96をより広くインターネットプロトコルで、ほとんどの場合に使用されているが、今日の展開ソフトウェアでほとんど、あるいはまったく追加のコードでサポートすることができ、デバイス。"
    },
    {
      "indent": 3,
      "text": "An important aspect to note about these algorithms' definitions for use in TCP-AO is the fact that the MAC outputs are truncated to 96 bits. AES-128-CMAC-96 produces a 128-bit MAC, and HMAC SHA-1 produces a 160-bit result. The MAC output is then truncated to 96 bits to provide a reasonable trade-off between security and message size, for fitting into the TCP-AO option field.",
      "ja": "TCP-AOで使用するため、これらのアルゴリズムの定義について注意すべき重要な点は、MAC出力は96ビットに切り捨てられているという事実です。 AES-128-CMAC-96は、128ビットのMACを生成し、HMAC SHA-1は、160ビットの結果を生成します。 MACの出力は、TCP-AOオプションフィールドに嵌合するため、合理的なトレードオフセキュリティ及びメッセージサイズとを提供するために、96ビットに切り捨てられます。"
    },
    {
      "indent": 0,
      "text": "3.2.1. The Use of HMAC-SHA-1-96",
      "section_title": true,
      "ja": "3.2.1. 使用HMAC-SHA-1-96"
    },
    {
      "indent": 3,
      "text": "By definition, HMAC [RFC2104] requires a cryptographic hash function. SHA1 will be that hash function used for authenticating and providing integrity validation on TCP segments with HMAC.",
      "ja": "定義では、HMAC [RFC2104]は暗号ハッシュ関数が必要です。 SHA1は、HMACとTCPセグメント上の整合性の検証を認証し、提供するために使用されるハッシュ関数になります。"
    },
    {
      "indent": 3,
      "text": "The three fixed elements for HMAC-SHA-1-96 are:",
      "ja": "HMAC-SHA-1-96のための3つの固定要素は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "- KDF_Alg: KDF_HMAC_SHA1.",
      "ja": " -  KDF ALG：KDF HMAC_SHA1。"
    },
    {
      "indent": 3,
      "text": "- Key_Length: 160 bits.",
      "ja": " -  Key_Length：160ビット。"
    },
    {
      "indent": 3,
      "text": "- MAC_Length: 96 bits.",
      "ja": " -  MAC_Length：96ビット。"
    },
    {
      "indent": 3,
      "text": "For:",
      "ja": "ために："
    },
    {
      "indent": 8,
      "text": "MAC = MAC_alg (Traffic_Key, Message)",
      "ja": "MAC = MAC_alg（Traffic_Key、メッセージ）"
    },
    {
      "indent": 3,
      "text": "HMAC-SHA-1-96 for TCP-AO has the following values:",
      "ja": "HMAC-SHA-1-96 TCP-AOのためには、次の値があります。"
    },
    {
      "indent": 6,
      "text": "- MAC_alg: HMAC-SHA1.",
      "ja": " -  MAC_alg：HMAC-SHA1。"
    },
    {
      "indent": 6,
      "text": "- Traffic_Key: Variable; the result of the KDF.",
      "ja": " -  Traffic_Key：変数; KDFの結果。"
    },
    {
      "indent": 6,
      "text": "- Message: The message to be authenticated, as specified in [RFC5925], Section 5.1.",
      "ja": " - メッセージ：[RFC5925]で指定されたメッセージは、認証され、セクション5.1。"
    },
    {
      "indent": 0,
      "text": "3.2.2. The Use of AES-128-CMAC-96",
      "section_title": true,
      "ja": "3.2.2.  AES-128-CMAC-96の使用"
    },
    {
      "indent": 3,
      "text": "In the context of TCP-AO, when we say \"AES-128-CMAC-96\", we actually define a usage of AES-128 as a cipher-based MAC according to [NIST-SP800-38B].",
      "ja": "我々は、 \"AES-128-CMAC-96\" と発声TCP-AOの文脈において、我々は、実際には[NIST-SP800-38B]に記載の暗号ベースのMACとしてAES-128の使用を定義します。"
    },
    {
      "indent": 3,
      "text": "The three fixed elements for AES-128-CMAC-96 are:",
      "ja": "AES-128-CMAC-96のための3つの固定要素は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "- KDF_Alg: KDF_AES_128_CMAC.",
      "ja": " -  KDF_Alg：KDF_AES_128_CMAC。"
    },
    {
      "indent": 3,
      "text": "- Key_Length: 128 bits.",
      "ja": " -  Key_Length：128ビット。"
    },
    {
      "indent": 3,
      "text": "- MAC_Length: 96 bits.",
      "ja": " -  MAC_Length：96ビット。"
    },
    {
      "indent": 3,
      "text": "For:",
      "ja": "ために："
    },
    {
      "indent": 8,
      "text": "MAC = MAC_alg (Traffic_Key, Message)",
      "ja": "MAC = MAC_alg（Traffic_Key、メッセージ）"
    },
    {
      "indent": 3,
      "text": "AES-128-CMAC-96 for TCP-AO has the following values:",
      "ja": "TCP-AOのためのAES-128-CMAC-96は、以下の値を有します。"
    },
    {
      "indent": 6,
      "text": "- MAC_alg: AES-128-CMAC-96. [NIST-SP800-38B]",
      "ja": " -  MAC_alg：AES-128-CMAC-96。 [NIST-SP800-38B]"
    },
    {
      "indent": 6,
      "text": "- Traffic_Key: Variable; the result of the KDF.",
      "ja": " -  Traffic_Key：変数; KDFの結果。"
    },
    {
      "indent": 6,
      "text": "- Message: The message to be authenticated, as specified in [RFC5925], Section 5.1.",
      "ja": " - メッセージ：[RFC5925]で指定されたメッセージは、認証され、セクション5.1。"
    },
    {
      "indent": 0,
      "text": "4. Security Considerations",
      "section_title": true,
      "ja": "4.セキュリティについての考慮事項"
    },
    {
      "indent": 3,
      "text": "This document inherits all of the security considerations of the TCP-AO [RFC5925], the AES-CMAC [RFC4493], and the HMAC-SHA-1 [RFC2104] documents.",
      "ja": "このドキュメントでは、TCP-AO [RFC5925]のセキュリティ上の考慮事項、AES-CMAC [RFC4493]、およびHMAC-SHA-1 [RFC2104]の文書のすべてを継承します。"
    },
    {
      "indent": 3,
      "text": "The security of cryptography-based systems depends on both the strength of the cryptographic algorithms chosen and the strength of the keys used with those algorithms. The security also depends on the engineering of the protocol used by the system to ensure that there are no non-cryptographic ways to bypass the security of the overall system.",
      "ja": "暗号ベースのシステムのセキュリティは、選択された暗号化アルゴリズムの強度とそれらのアルゴリズムで使用されるキーの強さの両方に依存します。セキュリティは、また、システム全体のセキュリティをバイパスするいかなる非暗号化の方法が存在しないことを保証するためにシステムによって使用されるプロトコルのエンジニアリングに依存します。"
    },
    {
      "indent": 3,
      "text": "Care should also be taken to ensure that the selected key is unpredictable, avoiding any keys known to be weak for the algorithm in use. [RFC4086] contains helpful information on both key generation techniques and cryptographic randomness.",
      "ja": "ケアはまた、選択されたキーが使用されているアルゴリズムのために弱いことが知られている任意のキーを避け、予測不可能であることを保証するために取られるべきです。 [RFC4086]は、両方のキー生成技法と暗号ランダムに役立つ情報が含まれています。"
    },
    {
      "indent": 3,
      "text": "Note that in the composition of KDF_AES_128_CMAC, the PRF needs a 128-bit / 16-byte key as the seed. However, for convenience to the administrators/deployers, we did not want to force them to enter a",
      "ja": "KDF_AES_128_CMACの組成物において、PRFは、シードとして128ビット/ 16バイトのキーを必要とすることに注意してください。ただし、管理者/デプロイヤへの便宜のために、我々は入るためにそれらを強制したくありませんでした"
    },
    {
      "indent": 3,
      "text": "16-byte Master_Key. So we specified the sub-key routine that could handle a variable length Master_Key, one that might be less than 16 bytes. This does NOT mean that it is safe for administrators to use weak keys. Administrators are encouraged to follow [RFC4086] as listed above. We simply attempted to \"put a fence around foolishness\", as much as possible.",
      "ja": "16バイトmaster_keyに。だから我々は、可変長master_keyに、16バイト未満であるかもしれないものを扱うことができるサブキールーチンを指定しました。これにより、管理者は、弱いキーを使用することが安全であることを意味するものではありません。管理者は、上記のように[RFC4086]を辿ることが奨励されています。私たちは、単に可能な限り、「愚かさの周りに柵を置く」しようとしました。"
    },
    {
      "indent": 3,
      "text": "This document concerns itself with the selection of cryptographic algorithms for the use of TCP-AO. The algorithms identified in this document as \"MUST implement\" are not known to be broken at the current time, and cryptographic research so far leads us to believe that they will likely remain secure into the foreseeable future. Some of the algorithms may be found in the future to have properties significantly weaker than those that were believed at the time this document was produced. Expect that new revisions of this document will be issued from time to time. Be sure to search for more recent versions of this document before implementing.",
      "ja": "このドキュメントでは、TCP-AOを使用するための暗号アルゴリズムの選択で自分自身を懸念します。 「実装しなければならない」として、この文書で特定されたアルゴリズムは、現在の時点で破断することが知られており、暗号研究はこれまでのところ、彼らは可能性が予見可能な将来への安全なままであることを信じるように私たちをリードされていません。アルゴリズムのいくつかは、この文書が作成された時点で信じられていたものよりも有意に弱い性質を持っているために、将来的に見ることができます。この文書の新しいリビジョンが随時発行されることを期待しています。実装する前に、このドキュメントの最新バージョンを検索してください。"
    },
    {
      "indent": 3,
      "text": "NOTE EXPLAINING WHY TWO MAC ALGORITHMS WERE MANDATED:",
      "ja": "2つのMACアルゴリズムが義務付けられた理由を説明注："
    },
    {
      "indent": 3,
      "text": "Two MAC algorithms and two corresponding KDFs are mandated as a result of discussion in the TCPM WG, and in consultation with the Security Area Directors. SHA-1 was selected because it is widely deployed and currently has sufficient strength and reasonable computational cost, so it is a \"MUST\" for TCP-AO today. The security strength of SHA-1 HMACs should be sufficient for the foreseeable future, especially given that the tags are truncated to 96 bits.",
      "ja": "2つのMACアルゴリズムと対応する二つのKDFsはTCPM WGでの議論の結果として義務付け、およびセキュリティエリアの取締役との協議でいます。それが今日TCP-AOのための「MUST」であるので、それは広く、展開され、現在は十分な強度と合理的な計算コストを持っているので、SHA-1を選択しました。 SHA-1 HMACsのセキュリティ強度は、特にタグが96ビットに切り捨てられることを考えると、近い将来のために十分であるべきです。"
    },
    {
      "indent": 3,
      "text": "Recently exposed vulnerabilities in other MACs (e.g., MD5 or HMAC MD5) aren't practical on HMAC-SHA-1, but these types of analyses are mounting and could potentially pose a concern for HMAC forgery if they were significantly improved, over time. The security issues driving the migration from SHA-1 to SHA-256 for digital signatures [HMAC-ATTACK] do not immediately render SHA-1 weak for this application of SHA-1 in HMAC mode.",
      "ja": "他のMac最近露出した脆弱性（例えば、MD5またはHMAC MD5）はHMAC-SHA-1で実用的ではないが、分析のこれらのタイプは、装着され、それらが大幅に改善された場合、潜在的に時間をかけて、HMAC偽造に対する懸念をもたらす可能性があります。デジタル署名にSHA-1からSHA-256への移行を駆動するセキュリティ問題[HMAC-ATTACK]直ちにHMACモードでSHA-1のこのアプリケーションのSHA-1弱をレンダリングしません。"
    },
    {
      "indent": 3,
      "text": "AES-128 CMAC is considered to be a stronger algorithm than SHA-1, but may not yet have very wide implementation. AES-128 CMAC is also a \"MUST\" to implement, in order to drive vendors toward its use, and to allow for another MAC option, if SHA-1 were to be compromised.",
      "ja": "AES-128 CMACはSHA-1よりも強いアルゴリズムであると考えられているが、まだ非常に広い実装を有していなくてもよいです。 AES-128 CMACは、その使用に向けてベンダを駆動するため、およびSHA-1が損なわれるした場合、別のMACオプションを可能にするために、実装するために、「しなければならない」です。"
    },
    {
      "indent": 0,
      "text": "5. IANA Considerations",
      "section_title": true,
      "ja": "5. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "IANA has created the following registry (http://www.iana.org).",
      "ja": "IANAは、次のレジストリ（http://www.iana.org）を作成しました。"
    },
    {
      "indent": 3,
      "text": "Registry Name: Cryptographic Algorithms for TCP-AO Registration Procedure: RFC Publication after Expert Review",
      "ja": "レジストリ名：TCP-AOの登録手順のための暗号化アルゴリズム：エキスパートレビュー後のRFC公報"
    },
    {
      "indent": 3,
      "text": "Initial contents of this registry are:",
      "ja": "このレジストリの初期の内容は以下のとおりです。"
    },
    {
      "indent": 8,
      "text": " Algorithm      | Reference\n----------------|-----------\n SHA1           | [RFC5926]\n AES128         | [RFC5926]",
      "raw": true
    },
    {
      "indent": 0,
      "text": "6. Acknowledgements",
      "section_title": true,
      "ja": "6.謝辞"
    },
    {
      "indent": 3,
      "text": "Eric \"EKR\" Rescorla, who provided a ton of input and feedback, including a somewhat heavy re-write of Section 3.1.x, earning him an author slot on the document.",
      "ja": "彼の文書の著者スロットを獲得し、セクション3.1.xへのやや重い再書き込みなどの入力とフィードバックのトンを、提供エリック「EKR」レスコラ、。"
    },
    {
      "indent": 3,
      "text": "Paul Hoffman, from whose [RFC4308] I sometimes copied, to quickly create a first version here.",
      "ja": "その[RFC4308]私は時々コピーし、すぐにここに最初のバージョンを作成するからポール・ホフマン、。"
    },
    {
      "indent": 3,
      "text": "Tim Polk, whose email summarizing SAAG's guidance to TCPM on the two hash algorithms for TCP-AO is largely cut-and-pasted into various sections of this document.",
      "ja": "そのメールTCP-AOのための2つのハッシュアルゴリズムにTCPMにSAAGの指針をまとめたティム・ポークは、大部分がカットアンドペーストし、この文書のさまざまなセクションにされます。"
    },
    {
      "indent": 3,
      "text": "Jeff Schiller, Donald Eastlake, and the IPsec WG, whose [RFC4307] & [RFC4835] text was consulted and sometimes used in the Requirements Section 2 of this document.",
      "ja": "その[RFC4307]＆[RFC4835]テキストジェフ・シラー、ドナルドイーストレイク、およびIPsec WGは、相談、時には、この文書の要件第2節で使用されました。"
    },
    {
      "indent": 3,
      "text": "(In other words, I was truly only an editor of others' text in creating this document.)",
      "ja": "（言い換えれば、私は本当にこの文書を作成する際に他人のテキストの編集者だけでした。）"
    },
    {
      "indent": 3,
      "text": "Eric \"EKR\" Rescorla and Brian Weis, who brought to clarity the issues with the inputs to PRFs for the KDFs. EKR was also of great assistance in how to structure the text, as well as helping to guide good cryptographic decisions.",
      "ja": "エリック「EKR」レスコラとKDFsのためのPRFに明快に入力の問題をもたらしたブライアン・ワイス、。 EKRは、テキストを構造化、ならびに良好な暗号化の意思決定を導くために助け方には大きな支援のもありました。"
    },
    {
      "indent": 3,
      "text": "The TCPM working group, who put up with all us crypto and routing folks DoS'ing their WG for 2 years, and who provided reviews of this document.",
      "ja": "すべての私たちの暗号化およびルーティングの人々は2年間の彼らのWGをDoS'ingを我慢し、TCPMワーキンググループは、このドキュメントのレビューを提供します。"
    },
    {
      "indent": 0,
      "text": "7. References",
      "section_title": true,
      "ja": "7.参考"
    },
    {
      "indent": 0,
      "text": "7.1. Normative References",
      "section_title": true,
      "ja": "7.1. 引用規格"
    },
    {
      "indent": 3,
      "text": "[FIPS-180-3] FIPS Publication 180-3, \"Secured Hash Standard\", FIPS 180-3, October 2008.",
      "ja": "[FIPS-180-3] FIPS 180-3公報、 \"セキュアハッシュ標準\"、2008年10月、180-3をFIPS。"
    },
    {
      "indent": 3,
      "text": "[FIPS197] FIPS Publications 197, \"Advanced Encryption Standard (AES)\", FIPS 197, November 2001.",
      "ja": "[FIPS197] FIPS出版197、 \"AES（Advanced Encryption Standard）は、\" 2001年11月、197 FIPS。"
    },
    {
      "indent": 3,
      "text": "[NIST-SP800-108] National Institute of Standards and Technology, \"Recommendation for Key Derivation Using Pseudorandom Functions, NIST SP800-108\", SP 800- 108, October 2009.",
      "ja": "、SP 800- 108、2009年10月[NIST-SP800-108]米国国立標準技術研究所、 \"擬似ランダム関数を使用した鍵導出、NIST SP800-108のための勧告\"。"
    },
    {
      "indent": 3,
      "text": "[NIST-SP800-38B] National Institute of Standards and Technology, \"Recommendation for Block Cipher Modes of Operation: The CMAC Mode for Authentication\", SP 800-38B, May 2005.",
      "ja": "[NIST-SP800-38B]米国国立標準技術研究所、「オペレーションのブロック暗号モードのための推薦：認証のためのCMACモード」、SP 800-38B、2005年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC2104] Krawczyk, H., Bellare, M., and R. Canetti, \"HMAC: Keyed-Hashing for Message Authentication\", RFC 2104, February 1997.",
      "ja": "[RFC2104] Krawczyk、H.、ベラー、M.、およびR.カネッティ、 \"HMAC：メッセージ認証のための鍵付きハッシュ化\"、RFC 2104、1997年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC4493] Song, JH., Poovendran, R., Lee, J., and T. Iwata, \"The AES-CMAC Algorithm\", RFC 4493, June 2006.",
      "ja": "[RFC4493]歌、JH。、Poovendran、R.、リー、J.、およびT.磐田、 \"AES-CMACアルゴリズム\"、RFC 4493、2006年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC5925] Touch, J., Mankin, A., and R. Bonica, \"The TCP Authentication Option\", RFC 5925, June 2010.",
      "ja": "[RFC5925]をタッチし、J.、マンキン、A.、およびR. Bonica、 \"TCP認証オプション\"、RFC 5925、2010年6月。"
    },
    {
      "indent": 0,
      "text": "7.2. Informative References",
      "section_title": true,
      "ja": "7.2. 参考文献"
    },
    {
      "indent": 3,
      "text": "[HMAC-ATTACK] \"On the Security of HMAC and NMAC Based on HAVAL, MD4, MD5, SHA-0 and SHA-1\", <http:// www.springerlink.com/content/00w4v62651001303> , 2006, <http://eprint.iacr.org/2006/187>.",
      "ja": "\"HAVAL、MD4、MD5、SHA-0およびSHA-1に基づいてHMACとNMACのセキュリティについて\" [HMAC-ATTACK]、<のhttp：// www.springerlink.com/content/00w4v62651001303>、2006年、<HTTP ：//eprint.iacr.org/2006/187>。"
    },
    {
      "indent": 3,
      "text": "[RFC4086] Eastlake, D., Schiller, J., and S. Crocker, \"Randomness Requirements for Security\", BCP 106, RFC 4086, June 2005.",
      "ja": "[RFC4086]イーストレーク、D.、シラー、J.、およびS.クロッカー、 \"セキュリティのためのランダム要件\"、BCP 106、RFC 4086、2005年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC4307] Schiller, J., \"Cryptographic Algorithms for Use in the Internet Key Exchange Version 2 (IKEv2)\", RFC 4307, December 2005.",
      "ja": "[RFC4307]シラー、J.、 \"インターネット鍵交換バージョン2（IKEv2の）での使用のための暗号アルゴリズム\"、RFC 4307、2005年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC4308] Hoffman, P., \"Cryptographic Suites for IPsec\", RFC 4308, December 2005.",
      "ja": "[RFC4308]ホフマン、P.、 \"IPsecの暗号スイート\"、RFC 4308、2005年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC4615] Song, J., Poovendran, R., Lee, J., and T. Iwata, \"The Advanced Encryption Standard-Cipher-based Message Authentication Code-Pseudo-Random Function-128 (AES-CMAC-PRF-128) Algorithm for the Internet Key Exchange Protocol (IKE)\", RFC 4615, August 2006.",
      "ja": "[RFC4615]ソング、J.、Poovendran、R.、リー、J.、およびT.岩田、「高度暗号化標準暗号ベースのメッセージ認証コード、擬似ランダム関数-128（AES-CMAC-PRF-128インターネット鍵交換プロトコル（IKE）」、RFC 4615のための）アルゴリズム、2006年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC4835] Manral, V., \"Cryptographic Algorithm Implementation Requirements for Encapsulating Security Payload (ESP) and Authentication Header (AH)\", RFC 4835, April 2007.",
      "ja": "[RFC4835] Manral、V.、RFC 4835、2007年4月 \"カプセル化セキュリティペイロード（ESP）と認証ヘッダー（AH）のための暗号アルゴリズム実装要件\"。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Gregory Lebovitz Juniper Networks, Inc. 1194 North Mathilda Ave. Sunnyvale, CA 94089-1206 US",
      "ja": "グレゴリーLebovitzジュニパーネットワークス株式会社1194北マチルダアベニュー。サニーベール、CA 94089-1206米国"
    },
    {
      "indent": 3,
      "text": "Phone: EMail: gregory.ietf@gmail.com",
      "ja": "電話番号：Eメール：gregory.ietf@gmail.com"
    },
    {
      "indent": 3,
      "text": "Eric Rescorla RTFM, Inc. 2064 Edgewood Drive Palo Alto, CA 94303 US",
      "ja": "エリックレスコラRTFM、Inc.の2064エッジウッドドライブパロアルト、CA 94303米国"
    },
    {
      "indent": 3,
      "text": "Phone: 650-678-2350 EMail: ekr@rtfm.com",
      "ja": "電話：650-678-2350 Eメール：ekr@rtfm.com"
    }
  ]
}