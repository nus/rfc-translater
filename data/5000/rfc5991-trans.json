{
  "title": {
    "text": "RFC 5991 - Teredo Security Updates",
    "ja": "RFC 5991 - Teredoのセキュリティアップデート"
  },
  "number": 5991,
  "created_at": "2019-10-31 22:59:58.008574+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                         D. Thaler\nRequest for Comments: 5991                                     Microsoft\nUpdates: 4380                                                S. Krishnan\nCategory: Standards Track                                       Ericsson\nISSN: 2070-1721                                              J. Hoagland\n                                                                Symantec\n                                                          September 2010",
      "raw": true
    },
    {
      "indent": 24,
      "text": "Teredo Security Updates",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "The Teredo protocol defines a set of flags that are embedded in every Teredo IPv6 address. This document specifies a set of security updates that modify the use of this flags field, but are backward compatible.",
      "ja": "Teredoのプロトコルは、すべてのTeredo IPv6アドレスに埋め込まれているフラグのセットを定義します。この文書では、このフラグフィールドの使用を修正するセキュリティアップデートのセットを指定しますが、下位互換性があります。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 5741のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc5991.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc5991で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2010 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2010 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 3,
      "text": "This document may contain material from IETF Documents or IETF Contributions published or made publicly available before November 10, 2008. The person(s) controlling the copyright in some of this material may not have granted the IETF Trust the right to allow modifications of such material outside the IETF Standards Process. Without obtaining an adequate license from the person(s) controlling the copyright in such materials, this document may not be modified outside the IETF Standards Process, and derivative works of it may not be created outside the IETF Standards Process, except to format it for publication as an RFC or to translate it into languages other than English.",
      "ja": "この材料の一部がIETFトラストにこのような材料の変更を許可する権利を与えられていない可能性がありますにこの文書は、2008年、IETFドキュメントまたは11月10日以前に発行または公開さIETF貢献から著作権を支配する者（複数可）材料を含んでいてもよいですIETF標準化プロセスの外。そのような材料の著作権を管理者（単数または複数）から適切なライセンスを取得することなく、この文書は、IETF標準化過程の外側修正されないかもしれません、そして、それの派生物は、IETF標準化過程の外側に作成されない場合があり、それをフォーマットする以外出版RFCとして、英語以外の言語に翻訳します。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................2\n2. Terminology .....................................................3\n3. Specification ...................................................4\n   3.1. Random Address Flags .......................................4\n   3.2. Deprecation of Cone Bit ....................................6\n4. Security Considerations .........................................7\n5. Acknowledgments .................................................7\n6. References ......................................................8\n   6.1. Normative References .......................................8\n   6.2. Informative References .....................................8\nAppendix A.  Implementation Status .................................9\nAppendix B.  Resistance to Address Prediction ......................9",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "Teredo [RFC4380] defines a set of flags that are embedded in every Teredo IPv6 address. This document specifies a set of security updates that modify the use of this flags field, but are backwards compatible. This document updates RFC 4380.",
      "ja": "Teredoの[RFC4380]は、すべてのTeredoのIPv6アドレスに埋め込まれているフラグのセットを定義します。この文書では、このフラグフィールドの使用を修正するセキュリティアップデートのセットを指定しますが、後方互換性があります。この文書は、RFC 4380に更新します。"
    },
    {
      "indent": 3,
      "text": "The Flags field in a Teredo IPv6 address has 13 unused bits out of a total of 16 bits. To guard against address-scanning risks [RFC5157] from malicious users, this update randomizes 12 of the 13 unused bits when configuring the Teredo IPv6 address. Even if an attacker were able to determine the external (mapped) IPv4 address and port assigned by a NAT to the Teredo client, the attacker would still need to attack a range of 4,096 IPv6 addresses to determine the actual Teredo IPv6 address of the client.",
      "ja": "TeredoのIPv6アドレス内のフラグフィールドは、16ビットの合計のうち、13個の未使用ビットを有します。 TeredoのIPv6アドレスを設定する場合、悪意のあるユーザからのアドレス走査危険[RFC5157]を防ぐために、この更新は、13個の未使用ビット12をランダム化します。攻撃者は、TeredoクライアントへのNATによって割り当てられた外部（マッピング）されたIPv4アドレスとポートを決定することができたとしても、攻撃者はまだ4096のIPv6の範囲を攻撃する必要があるクライアントの実際のTeredoのIPv6アドレスを決定するのに対応しています。"
    },
    {
      "indent": 3,
      "text": "The cone bit in a Teredo IPv6 address indicates whether a peer needs to send Teredo control messages before communicating with a Teredo IPv6 address. Unfortunately, it may also have some value in terms of profiling to the extent that it reveals the security posture of the network. If the cone bit is set, an attacker may decide it is fruitful to port-scan the embedded external IPv4 address and others associated with the same organization, looking for open ports. Deprecating the cone bit prevents the a priori revelation of the security posture of the NAT.",
      "ja": "TeredoのIPv6アドレスにおけるコーンビットは、ピアがTeredoのIPv6アドレスと通信する前のTeredo制御メッセージを送信する必要があるかどうかを示します。残念ながら、それはまた、ネットワークのセキュリティの姿勢を明らかにする程度にプロファイリングの面でいくつかの値を有することができます。コーンビットがセットされている場合、攻撃者は、それが開いているポートを探して、同じ組織に関連付けられたポートスキャン埋め込まれた外部IPv4アドレスと他の人に実りあることを決定することができます。コーンビットを卑下することはNATのセキュリティ状況の先験的啓示を防ぐことができます。"
    },
    {
      "indent": 0,
      "text": "2. Terminology",
      "section_title": true,
      "ja": "2.用語"
    },
    {
      "indent": 3,
      "text": "This document uses the following terminology, for consistency with [RFC4380].",
      "ja": "この文書では、[RFC4380]との整合性のために、以下の用語を使用しています。"
    },
    {
      "indent": 3,
      "text": "Cone NAT: A NAT that maps all requests from the same internal IP address and port to the same external IP address and port. Furthermore, any external host can send a packet to the internal host by sending a packet to the mapped external address and port.",
      "ja": "コーンNAT：同じ外部IPアドレスとポートに同一の内部IPアドレスとポートからのすべての要求をマップするNAT。さらに、任意の外部のホストは、マップされた外部アドレスとポートにパケットを送信することにより、内部ホストにパケットを送信することができます。"
    },
    {
      "indent": 3,
      "text": "Indirect Bubble: A Teredo control message that is sent to another Teredo client via the destination's Teredo server, as specified in [RFC4380], Section 5.2.4.",
      "ja": "間接バブル：[RFC4380]で指定されているように、先のTeredoサーバーを介して他のTeredoクライアントに送信されるのTeredo制御メッセージ、5.2.4。"
    },
    {
      "indent": 3,
      "text": "Local Address/Port: The IPv4 address and UDP port from which a Teredo client sends Teredo packets. The local port is referred to as the Teredo service port in [RFC4380]. The local address of a node may or may not be globally routable because the node can be located behind one or more NATs.",
      "ja": "ローカルアドレス/ポート：TeredoクライアントからTeredoパケットを送信するから、IPv4アドレスとUDPポート。ローカルポートは、[RFC4380]でのTeredoサービスポートと呼ばれます。ノードは、1つまたは複数のNATの背後に配置することができるので、ノードのローカルアドレスまたはグローバルにルーティング可能であってもなくてもよいです。"
    },
    {
      "indent": 3,
      "text": "Mapped Address/Port: A global IPv4 address and a UDP port that results from the translation of a node's own local address/port by one or more NATs. The node learns these values through the Teredo protocol specified in [RFC4380]. The mapped address/port can be different for every peer with which a node tries to communicate.",
      "ja": "マップされたアドレス/ポート：グローバルIPv4アドレスと1つのまたは複数のNATにより、ノード自体のローカルアドレス/ポートの翻訳から得られるUDPポート。ノードは、[RFC4380]で指定のTeredoプロトコルを介してこれらの値を学習します。マッピングされたアドレス/ポートは、ノードが通信しようとしているとすべてのピアのために異なっていてもよいです。"
    },
    {
      "indent": 3,
      "text": "Network Address Translation (NAT): The process of converting between IP addresses used within an intranet or other private network and Internet IP addresses.",
      "ja": "ネットワークアドレス変換（NAT）：イントラネットまたは他のプライベートネットワークとインターネットのIPアドレス内で使用されるIPアドレスとの間で変換するプロセス。"
    },
    {
      "indent": 3,
      "text": "Peer: A Teredo client with which another Teredo client needs to communicate.",
      "ja": "ピア：別のTeredoクライアントが通信する必要のあるTeredoクライアント。"
    },
    {
      "indent": 3,
      "text": "Port-Preserving NAT: A NAT that translates a local address/port to a mapped address/port such that the mapped port has the same value as the local port, as long as that same mapped address/port has not already been used for a different local address/port.",
      "ja": "マッピングされたポートがある限り、同じマップされたアドレス/ポートが既に使用されていないとして、ローカルポートと同じ値を有するようにマッピングされたアドレス/ポートへのローカルアドレス/ポートを変換NAT：NATをポート保存異なるローカルアドレス/ポート。"
    },
    {
      "indent": 3,
      "text": "Public Address: An external global address used by a NAT.",
      "ja": "パブリックアドレス：NATで使用される外部グローバルアドレス。"
    },
    {
      "indent": 3,
      "text": "Restricted NAT: A NAT where all requests from the same internal IP address and port are mapped to the same external IP address and port. Unlike the cone NAT, an external host can send packets to an internal host (by sending a packet to the external mapped address and port) only if the internal host has first sent a packet to the external host.",
      "ja": "制限付きNAT：同じ内部IPアドレスとポートからのすべての要求が同じ外部IPアドレスとポートにマッピングされているNAT。コーンNATとは異なり、外部ホストが内部ホストは、外部ホストにパケットを最初に送信した場合にのみ（外部マッピングされたアドレスとポートにパケットを送信することによって）、内部ホストにパケットを送信することができます。"
    },
    {
      "indent": 3,
      "text": "Teredo Client: A node that implements the client parts of [RFC4380], has access to the IPv4 Internet, and wants to gain access to the IPv6 Internet.",
      "ja": "Teredoクライアント：[RFC4380]のクライアント部分を実装するノードは、IPv4インターネットへのアクセスを持っており、IPv6インターネットへのアクセスを得るために望んでいます。"
    },
    {
      "indent": 3,
      "text": "Teredo IPv6 Address: An IPv6 address that starts with the prefix 2001:0000:/32 and is formed as specified in Section 4 of [RFC4380].",
      "ja": "TeredoのIPv6アドレス：0000 :: / 32と[RFC4380]のセクション4で指定されるように形成されている接頭辞2001で始まるIPv6アドレス。"
    },
    {
      "indent": 3,
      "text": "Teredo Server: A node that has a globally routable address on the IPv4 Internet, and is used as a helper to provide IPv6 connectivity to Teredo clients.",
      "ja": "Teredoサーバー：IPv4インターネット上でグローバルにルーティング可能なアドレスを持ち、TeredoクライアントへのIPv6接続を提供するために、ヘルパーとして使用されているノード。"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119 [RFC2119].",
      "ja": "この文書のキーワード \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", および \"OPTIONAL\" はRFC 2119 [RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "3. Specification",
      "section_title": true,
      "ja": "3.仕様"
    },
    {
      "indent": 0,
      "text": "3.1. Random Address Flags",
      "section_title": true,
      "ja": "3.1。ランダムなアドレスフラグ"
    },
    {
      "indent": 3,
      "text": "Teredo addresses are structured, and some of the fields contained in them are fairly predictable. This makes the addresses themselves easier to predict and opens up a vulnerability.",
      "ja": "Teredoアドレスは、構造化され、それらに含まれるフィールドのいくつかはかなり予測しています。これ自体は容易に予測するアドレスを行い、脆弱性を開きます。"
    },
    {
      "indent": 3,
      "text": "Teredo prefix: This field is 32 bits and has a single IANA-assigned value.",
      "ja": "Teredoのプレフィックス：このフィールドは32ビットであり、単一のIANAによって割り当てられた値を有します。"
    },
    {
      "indent": 3,
      "text": "Server: This field is 32 bits and is set to the server in use. The server to use is generally statically configured on the client. This means that overall entropy of the server field will be low, i.e., that the server will not be hard to predict. Attackers could confine their guessing to the most popular server IP addresses.",
      "ja": "サーバー：このフィールドは32ビットで、使用中のサーバーに設定されています。使用するサーバーは、一般的に静的にクライアント上で設定されています。これは、サーバ・フィールドの全体のエントロピーは、サーバーが予測することは難しいことではないだろうということ、すなわち、低いことを意味します。攻撃者は、最も人気のあるサーバーのIPアドレスに自分の推測を閉じ込めることができます。"
    },
    {
      "indent": 3,
      "text": "Flags: The Flags field is 16 bits in length, but [RFC4380] provides for only one of these bits (the cone bit) to vary.",
      "ja": "フラグ：Flagsフィールドは、長さが16ビットであるが、[RFC4380]を変化させるこれらのビットのいずれか一方のみ（コーンビット）を提供します。"
    },
    {
      "indent": 3,
      "text": "Client port: This 16-bit field corresponds to the external port number assigned to the client's Teredo service port. Thus, the value of this field depends on two factors (the chosen Teredo service port and the NAT port assignment behavior), and it therefore is harder to predict the entropy this field will have. If clients tend to use a predictable port number and NATs are often port-preserving, then the port number can be rather predictable.",
      "ja": "クライアントポート：この16ビットのフィールドは、クライアントのTeredoサービスポートに割り当てられた外部ポート番号に対応しています。したがって、このフィールドの値は、2つの要因（選択されたTeredoサービスポートとNATポート割当動作）に依存し、したがって、このフィールドが持つエントロピーを予測することが困難です。クライアントは、予測可能なポート番号を使用する傾向があり、NATのは、多くの場合、ポート保存されている場合は、ポート番号ではなく、予測可能なことができます。"
    },
    {
      "indent": 3,
      "text": "Client IPv4 address: This 32-bit field corresponds to the external IPv4 address the NAT has assigned for the client port. In principle, this can be any address in the assigned part of the IPv4 unicast address space. However, if an attacker is looking for the address of a specific Teredo client, they will have to have the external IPv4 address pretty well narrowed down. Certain IPv4 address ranges could also become well known for having a higher concentration of Teredo clients, making it easier to find an arbitrary Teredo client. These addresses could correspond to large organizations that allow Teredo, such as a university or enterprise, or to Internet Service Providers that only provide their customers with RFC 1918 addresses.",
      "ja": "クライアントのIPv4アドレス：この32ビットのフィールドは、NATは、クライアントポートに割り当てられた外部IPv4アドレスに対応しています。原則として、これは、IPv4ユニキャストアドレス空間の割り当てられた部分で任意のアドレスを指定できます。攻撃者は、特定のTeredoクライアントのアドレスを探している場合は、彼らはかなり絞り込まれた外部IPv4アドレスを持っている必要があります。特定のIPv4アドレス範囲もそれが簡単に任意のTeredoクライアントを見つけるために作り、Teredoクライアントの濃度が高いためによく知られているになる可能性があります。これらのアドレスは、このような大学や企業などのTeredoを許可する大規模な組織への、または唯一のRFC 1918アドレスを顧客に提供し、インターネットサービスプロバイダに対応することができます。"
    },
    {
      "indent": 3,
      "text": "Optimizations in scanning can also reduce the number of addresses that need to be checked. For example, for addresses behind a cone NAT, it would likely be easy to probe if a specific port number is open on an IPv4 address, prior to trying to form a Teredo address for that address and port.",
      "ja": "スキャン時の最適化もチェックする必要があるアドレスの数を減らすことができます。例えば、コーンNATの背後にあるアドレスのために、おそらく特定のポート番号は、IPv4アドレスで開いている場合はその前のアドレスとポートのTeredoアドレスを形成しようとするには、プローブするのは簡単だろう。"
    },
    {
      "indent": 3,
      "text": "Hence, the Flags field specified in [RFC4380], Section 4 is updated as follows:",
      "ja": "従って、フラグフィールドは[RFC4380]で指定された次のように、第4節では、更新されます。"
    },
    {
      "indent": 6,
      "text": "                     1\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|C|z|Random1|U|G|    Random2    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "C: This flag is specified in [RFC4380], and its use is modified in Section 3.2 below.",
      "ja": "C：このフラグは、[RFC4380]で指定され、その使用は、以下のセクション3.2に修正されます。"
    },
    {
      "indent": 3,
      "text": "z: This flag is reserved. It MUST be set to zero when the address is constructed, as specified in [RFC4380].",
      "ja": "Z：このフラグは予約されています。アドレスが構成されている場合には、[RFC4380]で指定されるように、ゼロに設定しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Random1: MUST be set to a random value.",
      "ja": "Random1は：ランダムな値に設定しなければなりません。"
    },
    {
      "indent": 3,
      "text": "U: This flag is specified in [RFC4380].",
      "ja": "U：このフラグは、[RFC4380]で指定されています。"
    },
    {
      "indent": 3,
      "text": "G: This flag is specified in [RFC4380].",
      "ja": "G：このフラグは、[RFC4380]で指定されています。"
    },
    {
      "indent": 3,
      "text": "Random2: MUST be set to a random value.",
      "ja": "Random2は：ランダムな値に設定しなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.2. Deprecation of Cone Bit",
      "section_title": true,
      "ja": "3.2。コーンビットの廃止"
    },
    {
      "indent": 3,
      "text": "The qualification procedure is specified in [RFC4380], Section 5.2.1, and is modified as follows. Teredo clients SHOULD completely skip the first phase of the qualification procedure and implement only the second phase where it uses the Teredo link-local address with the cone bit set to zero. Consequently, a distinction between cone and restricted NATs can no longer be made. Teredo communication will still succeed, but at the expense of forcing peers to skip case 4 of the sending details specified in [RFC4380], Section 5.2.4. This will result in the same number of indirect bubbles being sent as if the other end were a peer behind a restricted NAT. Even though the peer behind the cone NAT does not need these indirect bubbles, it replies to these indirect bubbles just like it would to any other indirect bubbles. Skipping case 4 is already allowed for reliability reasons (as also specified in [RFC4380], Section 5.2.4), and hence this does not break interoperability, but the result of skipping the first phase of qualification is to force that behavior (which is less efficient, but potentially more reliable) to be taken by peers.",
      "ja": "認定手順は、[RFC4380]、セクション5.2.1で指定され、以下のように修正されます。 Teredoクライアントは、完全に資格の手続きの第一段階をスキップし、それがゼロに設定さコーンビットでのTeredoリンクローカルアドレスを使用するだけ第二相を実装する必要があります。その結果、コーンと制限付きNATの区別はもはや行うことはできません。 Teredo通信は、まだ成功しますが、強制的に仲間を犠牲にして、[RFC4380]で指定された送信の詳細は、セクション5.2.4の場合4をスキップします。これは、もう一方の端が制限付きNATの背後にあるピアであるかのように送られている間接的な泡の数が同じになります。コーンNATの背後にあるピアはこれらの間接的な気泡を必要としませんが、それはちょうどそれが、他の間接的な泡に相当するであろうように、これらの間接的な泡に返信します。である（（また、[RFC4380]、セクション5.2.4で指定されるように）スキップケース4は、既に信頼性の理由から許され、従ってこれは相互運用性を破壊しないが、資格の最初のフェーズをスキップした結果は、その動作を強制することです）あまり効率的ではなく、潜在的に、より信頼性の高いピアによって取られます。"
    },
    {
      "indent": 3,
      "text": "In addition, clients and relays SHOULD ignore the cone bit in the address of a Teredo peer and treat it as if it were always clear, as specified in [RFC4380], Section 5.2.4 (last paragraph).",
      "ja": "[RFC4380]で指定されるように加えて、クライアントとリレーは、5.2.4項（最後の段落を）のTeredoピアのアドレスにコーンビットを無視して、それが必ずしも明確であるかのように扱うべきです。"
    },
    {
      "indent": 3,
      "text": "Teredo servers MUST NOT ignore the cone bit for the following reasons.",
      "ja": "Teredoサーバーは、次の理由コーンビットを無視してはいけません。"
    },
    {
      "indent": 3,
      "text": "o The cone bit in the IPv6 source address of a Router Solicitation (RS) from a client controls what IPv4 source address the server should use when sending a Router Advertisement (RA). If this behavior is not preserved, legacy clients will conclude that they are behind a cone NAT even when they are not (because the client WILL receive the RA where previously it would not, since a cone bit set to 1 requires the server to respond from another IP address). They will then set their cone bit and lose connectivity.",
      "ja": "Oクライアントからのルータ要請のIPv6送信元アドレス（RS）でのコーンビットは、ルータ広告（RA）を送信するときにサーバーが使用すべきかのIPv4送信元アドレスを制御します。この動作が保存されていない場合は、レガシークライアントは、クライアントが1に設定され、コーンビットはサーバーを必要とするので、それはない、から反応するだろう以前にRAを受け取ることになりますので、彼らは（彼らがいない場合であっても、コーンNATの背後にあると結論します別のIPアドレス）。そして、彼らは彼らのコーンビットを設定し、接続を失います。"
    },
    {
      "indent": 3,
      "text": "o When the Teredo server sends RAs (or bubbles if it's also a relay), the cone bit in its own Teredo address is set, indicating that it doesn't require bubbles to reach it.",
      "ja": "（それはまた、リレーの場合や気泡）TeredoサーバーRASを送信すると、O、独自のTeredoアドレスでコーンビットは、それに到達するために気泡を必要としないことを示す、設定されています。"
    },
    {
      "indent": 0,
      "text": "4. Security Considerations",
      "section_title": true,
      "ja": "4.セキュリティについての考慮事項"
    },
    {
      "indent": 3,
      "text": "The basic threat model for Teredo is described in detail in [RFC4380], Section 7, but briefly, the goal is that a Teredo client should be as secure as if a host were directly attached to an untrusted Internet link. This document specifies updates to [RFC4380] that improve the security of the base Teredo mechanism regarding specific threats.",
      "ja": "Teredoのための基本的な脅威モデルは、セクション7、[RFC4380]で詳細に説明するが、簡単に、目標は、ホストが直接信頼されていないインターネットリンクに接続されているかのようTeredoクライアントは、として安全であるべきであるということです。この文書では、特定の脅威に関するベースのTeredoメカニズムのセキュリティを向上させる[RFC4380]への更新を指定します。"
    },
    {
      "indent": 3,
      "text": "IPv6 address scanning [RFC5157] by off-path attackers: The Teredo IPv6 Address format defined in [RFC4380], Section 4 makes it relatively easy for a malicious user to conduct an address-scan to determine IPv6 addresses by guessing the external (mapped) IPv4 address and port assigned to the Teredo client. The random address bits guard against address-scanning risks by providing a range of 4,096 IPv6 addresses per external IPv4 address/port. As a result, even if a malicious user were able to determine the external (mapped) IPv4 address and port assigned to the Teredo client, the malicious user would still need to attack a range of 4,096 IPv6 addresses to determine the actual Teredo IPv6 address of the client. Appendix B compares the address prediction resistance of a Teredo address following this specification to that of an address formed using standard IPv6 stateless address autoconfiguration [RFC4862].",
      "ja": "オフ・パス攻撃者によってIPv6アドレス走査[RFC5157]、[RFC4380]で定義のTeredo IPv6アドレス形式、セクション4は、（マッピングされた）外部を推測することにより、IPv6アドレスを決定するアドレススキャンを行うため、悪意のあるユーザにとっては比較的容易になりTeredoクライアントに割り当てられたIPv4アドレスとポート。ランダムアドレスビットは、外部IPv4アドレス/ポートあたり4096のIPv6アドレスの範囲を提供することにより、アドレス走査リスクを防ぎます。その結果、悪意のあるユーザーは、Teredoクライアントに割り当てられた外部（マッピング）されたIPv4アドレスとポートを決定することができたとしても、悪意のあるユーザーはまだ4096のIPv6の範囲を攻撃する必要があるの実際のTeredoのIPv6アドレスを決定するアドレスクライアント。付録Bは、標準のIPv6ステートレスアドレス自動設定[RFC4862]を使用して形成されたアドレスと、本明細書以下Teredoアドレスのアドレス予測抵抗を比較します。"
    },
    {
      "indent": 3,
      "text": "In order to prevent adversaries from easily guessing the values of the random bits and hence the address, the Random1 and Random2 bits in the Teredo Flags field MUST be constructed following the recommendations for random number generation as specified in [NIST-RANDOM] and [RFC4086].",
      "ja": "簡単ランダムビットひいてはアドレスの値を推測するから敵を防ぐために、TeredoのフラグフィールドにRandom1とRandom2ビットは[NIST-RANDOM]と[RFC4086で指定されるように乱数発生のための推奨事項を以下に構築されなければなりません]。"
    },
    {
      "indent": 3,
      "text": "Opening a hole in an enterprise firewall [TUNNEL-SEC]: Teredo is NOT RECOMMENDED as a solution for networks that wish to implement strict controls for what traffic passes to and from the Internet. Administrators of such networks may wish to filter all Teredo traffic at the boundaries of their networks.",
      "ja": "エンタープライズファイアウォール[TUNNEL-SEC]で穴を開け：Teredoはトラフィックおよびインターネットから通過する何のための厳密な制御を実現したいネットワークのためのソリューションとして推奨されていません。このようなネットワークの管理者は、ネットワークの境界ですべてのTeredoトラフィックをフィルタリングすることもできます。"
    },
    {
      "indent": 0,
      "text": "5. Acknowledgments",
      "section_title": true,
      "ja": "5.謝辞"
    },
    {
      "indent": 3,
      "text": "The authors would like to thank Remi Denis-Courmont, Fred Templin, Jordi Palet Martinez, James Woodyatt, Christian Huitema, Tom Yu, Jari Arkko, David Black, Tim Polk, and Sean Turner for reviewing earlier versions of this document and providing comments to make this document better. The authors would also like to thank Alfred Hoenes for a careful review of this document.",
      "ja": "作者はこのドキュメントの以前のバージョンを見直し、にコメントを提供するためのレミデニス・Courmont、フレッド・テンプリン、ジョルディPaletマルティネス、ジェームズWoodyatt、クリスチャンのHuitema、トム・ゆう、ヤリArkko、デビッド・ブラック、ティムポーク、そしてショーン・ターナーに感謝したいと思いますよりよいこの文書を作ります。著者らはまた、このドキュメントの慎重な検討のためのアルフレッドHoenesに感謝したいと思います。"
    },
    {
      "indent": 0,
      "text": "6. References",
      "section_title": true,
      "ja": "6.参照"
    },
    {
      "indent": 0,
      "text": "6.1. Normative References",
      "section_title": true,
      "ja": "6.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC4380] Huitema, C., \"Teredo: Tunneling IPv6 over UDP through Network Address Translations (NATs)\", RFC 4380, February 2006.",
      "ja": "[RFC4380]のHuitema、C.、 \"のTeredo：ネットワークアドレス変換を通じてUDP経由トンネリングのIPv6器（NAT）\"、RFC 4380、2006年2月。"
    },
    {
      "indent": 0,
      "text": "6.2. Informative References",
      "section_title": true,
      "ja": "6.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[NIST-RANDOM] \"NIST SP 800-90, Recommendation for Random Number Generation Using Deterministic Random Bit Generators\", March 2007, <http://csrc.nist.gov/publications/ nistpubs/800-90/SP800-90revised_March2007.pdf>.",
      "ja": "[NIST-RANDOM] \"NIST SP 800-90、決定論的ランダムビットジェネレータを使用して乱数生成のための勧告\"、2007年3月、<http://csrc.nist.gov/publications/ nistpubs / 800-90 / SP800-90revised_March2007。 PDF>。"
    },
    {
      "indent": 3,
      "text": "[RFC4086] Eastlake 3rd, D., Schiller, J., and S. Crocker, \"Randomness Requirements for Security\", BCP 106, RFC 4086, June 2005.",
      "ja": "[RFC4086]イーストレーク3、D.、シラー、J.、およびS.クロッカー、 \"セキュリティのためのランダム要件\"、BCP 106、RFC 4086、2005年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC4862] Thomson, S., Narten, T., and T. Jinmei, \"IPv6 Stateless Address Autoconfiguration\", RFC 4862, September 2007.",
      "ja": "[RFC4862]トムソン、S.、Narten氏、T.、およびT.神明、 \"IPv6のステートレスアドレス自動設定\"、RFC 4862、2007年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC5157] Chown, T., \"IPv6 Implications for Network Scanning\", RFC 5157, March 2008.",
      "ja": "[RFC5157]のchown、T.、 \"ネットワークスキャンのためのIPv6の影響\"、RFC 5157、2008年3月。"
    },
    {
      "indent": 3,
      "text": "[TUNNEL-SEC] Hoagland, J., Krishnan, S., and D. Thaler, \"Security Concerns With IP Tunneling\", Work in Progress, March 2010.",
      "ja": "[TUNNEL-SEC]ホーグランド、J.、クリシュナン、S.、およびD.ターラー、 \"IPトンネリングとセキュリティの懸念\"、進歩、2010年3月での作業。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Implementation Status",
      "ja": "付録A.実施状況"
    },
    {
      "indent": 3,
      "text": "Deprecation of the cone bit as specified in this document is implemented in Windows Vista and Windows Server 2008.",
      "ja": "この文書で指定されたコーンビットの廃止は、Windows VistaおよびWindows Server 2008に実装されています。"
    },
    {
      "indent": 3,
      "text": "The random flags specified in this document are implemented in Windows Vista SP1 and Windows Server 2008.",
      "ja": "この文書で指定されたランダムフラグは、Windows Vista SP1とWindows Server 2008に実装されています。"
    },
    {
      "indent": 3,
      "text": "All Windows implementations automatically disable Teredo if they detect that they are on a managed network with a domain controller.",
      "ja": "彼らは、ドメインコントローラで管理されたネットワーク上にあることを検出した場合、すべてのWindowsの実装は、自動的にのTeredoを無効にします。"
    },
    {
      "indent": 0,
      "text": "Appendix B. Resistance to Address Prediction",
      "ja": "予測に対処するために、付録B.抵抗"
    },
    {
      "indent": 3,
      "text": "This section compares the address prediction resistance of a Teredo address as compared to an address formed using IPv6 stateless address autoconfiguration (SLAAC) [RFC4862].",
      "ja": "このセクションでは、IPv6ステートレスアドレス自動設定（SLAAC）[RFC4862]を使用して形成されたアドレスと比較して、Teredoアドレスのアドレス予測抵抗を比較します。"
    },
    {
      "indent": 3,
      "text": "Let's assume that the attacker knows a Teredo client's external IPv4 address and Ethernet card's vendor. Since the attacker knows the client's external IPv4 address, he does not have to search this space. The attacker does not know the external port (16 bits) and the value of the random bits (12 bits), and he has to search this space. This gives the attacker a total search space of 28 bits (16+12). This compares very favorably with the 24 bits of search space required to find an address configured using SLAAC (when the Ethernet card's vendor is known) as described in Section 2.3 of [RFC5157]. Without the 12 random bits, the search space is limited to only 16 bits, and this is significantly worse than the 24 bits of search space provided by SLAAC.",
      "ja": "のは、攻撃者がTeredoクライアントの外部IPv4アドレスとEthernetカードのベンダーを知っていると仮定しよう。攻撃者は、クライアントの外部IPv4アドレスを知っているので、彼はこのスペースを検索する必要はありません。攻撃者は、外部ポート（16ビット）およびランダムビット（12ビット）の値を知らない、と彼はこのスペースを検索しています。これは、攻撃者は28ビット（16 + 12）の総探索空間を与えます。これは、[RFC5157]のセクション2.3に記載されているように（イーサネットカードのベンダーが知られている）SLAACを用いて構成されたアドレスを見つけるために必要な探索空間の24ビットと非常に匹敵します。 12ランダムビットことなく、探索空間は、16ビットに制限され、これはSLAACによって提供される探索空間の24ビットよりも有意に悪いです。"
    },
    {
      "indent": 3,
      "text": "As the knowledge of the attacker decreases, the number of bits of search space in both cases is likely to increase in a relatively similar fashion. The predictability of Teredo addresses will stay comparable to that of SLAAC addresses with the added 12 bits of search space, but will be significantly worse without the random bits.",
      "ja": "攻撃者の知識が減少するにつれて、両方の場合における探索空間のビット数は比較的類似の様式で増加する可能性があります。 Teredoアドレスの予測は、探索空間の追加12ビットでSLAACアドレスに匹敵するままになりますが、ランダムビットなしに大幅に悪くなります。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Dave Thaler Microsoft Corporation One Microsoft Way Redmond, WA 98052 USA",
      "ja": "デーブターラーマイクロソフト社1マイクロソフト道、レッドモンド、ワシントン98052 USA"
    },
    {
      "indent": 3,
      "text": "Phone: +1 425 703 8835 EMail: dthaler@microsoft.com",
      "ja": "電話：+1 425 703 8835 Eメール：dthaler@microsoft.com"
    },
    {
      "indent": 3,
      "text": "Suresh Krishnan Ericsson 8400 Decarie Blvd. Town of Mount Royal, QC Canada",
      "ja": "スレシュクリシュナンエリクソン8400 Decarie大通りマウントロイヤル、QCカナダの町"
    },
    {
      "indent": 3,
      "text": "Phone: +1 514 345 7900 x42871 EMail: suresh.krishnan@ericsson.com",
      "ja": "電話：+1 514 345 7900 x42871メール：suresh.krishnan@ericsson.com"
    },
    {
      "indent": 3,
      "text": "James Hoagland Symantec Corporation 350 Ellis St. Mountain View, CA 94043 USA",
      "ja": "ジェームズ・ホーグランドSymantec Corporationの350エリス聖マウンテンビュー、CA 94043 USA"
    },
    {
      "indent": 3,
      "text": "EMail: Jim_Hoagland@symantec.com URI: http://symantec.com/",
      "ja": "電子メール：Jim_Hoagland@symantec.com URI：http://symantec.com/"
    }
  ]
}