{
  "title": {
    "text": "RFC 5929 - Channel Bindings for TLS",
    "ja": "RFC 5929 - TLSのためのチャネルバインディング"
  },
  "number": 5929,
  "created_at": "2019-10-30 21:02:29.576338+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                         J. Altman\nRequest for Comments: 5929                              Secure Endpoints\nCategory: Standards Track                                    N. Williams\nISSN: 2070-1721                                                   Oracle\n                                                                  L. Zhu\n                                                   Microsoft Corporation\n                                                               July 2010",
      "raw": true
    },
    {
      "indent": 24,
      "text": "Channel Bindings for TLS",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document defines three channel binding types for Transport Layer Security (TLS), tls-unique, tls-server-end-point, and tls-unique-for-telnet, in accordance with RFC 5056 (On Channel Binding).",
      "ja": "この文書は、（チャンネル結合に）RFC 5056に基づいて、トランスポート層セキュリティ（TLS）、TLS-ユニーク、TLS-サーバー・エンドポイント、およびのための-telnetの固有-TLSのための3つのチャネル結合タイプを定義します。"
    },
    {
      "indent": 3,
      "text": "Note that based on implementation experience, this document changes the original definition of 'tls-unique' channel binding type in the channel binding type IANA registry.",
      "ja": "実装経験に基づいなお、この文書では、タイプIANAレジストリを結合チャネルの「TLS-ユニークな」チャネル結合タイプの元の定義を変更します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 5741のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc5929.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc5929で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2010 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2010 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 3,
      "text": "This document may contain material from IETF Documents or IETF Contributions published or made publicly available before November 10, 2008. The person(s) controlling the copyright in some of this material may not have granted the IETF Trust the right to allow modifications of such material outside the IETF Standards Process. Without obtaining an adequate license from the person(s) controlling the copyright in such materials, this document may not be modified outside the IETF Standards Process, and derivative works of it may not be created outside the IETF Standards Process, except to format it for publication as an RFC or to translate it into languages other than English.",
      "ja": "この材料の一部がIETFトラストにこのような材料の変更を許可する権利を与えられていない可能性がありますにこの文書は、2008年、IETFドキュメントまたは11月10日以前に発行または公開さIETF貢献から著作権を支配する者（複数可）材料を含んでいてもよいですIETF標準化プロセスの外。そのような材料の著作権を管理者（単数または複数）から適切なライセンスを取得することなく、この文書は、IETF標準化過程の外側修正されないかもしれません、そして、それの派生物は、IETF標準化過程の外側に作成されない場合があり、それをフォーマットする以外出版RFCとして、英語以外の言語に翻訳します。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................3\n2. Conventions Used in This Document ...............................3\n3. The 'tls-unique' Channel Binding Type ...........................3\n   3.1. Description ................................................3\n   3.2. Registration ...............................................4\n4. The 'tls-server-end-point' Channel Binding Type .................5\n   4.1. Description ................................................5\n   4.2. Registration ...............................................6\n5. The 'tls-unique-for-telnet' Channel Binding Type ................6\n   5.1. Description ................................................7\n   5.2. Registration ...............................................7\n6. Applicability of TLS Channel Binding Types ......................7\n7. Required Application Programming Interfaces ....................10\n8. Description of Backwards-Incompatible Changes Made\n   Herein to 'tls-unique' .........................................10\n9. IANA Considerations ............................................11\n10. Security Considerations .......................................11\n   10.1. Cryptographic Algorithm Agility ..........................12\n   10.2. On Disclosure of Channel Bindings Data by\n         Authentication Mechanisms ................................12\n11. References ....................................................13\n   11.1. Normative References .....................................13\n   11.2. Informative References ...................................14",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "Subsequent to the publication of \"On Channel Bindings\" [RFC5056], three channel binding types for Transport Layer Security (TLS) were proposed, reviewed, and added to the IANA channel binding type registry, all in accordance with [RFC5056]. Those channel binding types are: 'tls-unique', 'tls-server-end-point', and 'tls-unique-for-telnet'. It has become desirable to have these channel binding types re-registered through an RFC so as to make it easier to reference them, and to correct them to describe actual implementations. This document does just that. The authors of those three channel binding types have transferred, or have indicated that they will transfer, \"ownership\" of those channel binding types to the IESG.",
      "ja": "「オンチャネルバインディング」[RFC5056]の発表に続き、トランスポート層セキュリティ（TLS）のための3つのチャネル結合型は、提案見直し、[RFC5056]に従ってすべて、タイプレジストリを結合IANAチャンネルに追加されました。これらのチャネル結合タイプは次のとおりです。 'TLS-ユニーク'、 'TLS-サーバー・エンドポイント'、および 'TLS-ユニーク-用-のtelnet'。それは容易にそれらを参照することになるように、これらのチャネルバインディングタイプはRFCを介して再登録しているために、実際の実装を記述するためにそれらを修正することが望ましくなってきています。このドキュメントは、まさにそれを行います。これらの3つのチャネル結合型の著者は移転している、または彼らは、IESGへのバインディングタイプ、それらのチャンネルの「所有権」を譲渡することが示されています。"
    },
    {
      "indent": 3,
      "text": "We also provide some advice on the applicability of these channel binding types, as well as advice on when to use which. Additionally, we provide an abstract API that TLS implementors should provide, by which to obtain channel bindings data for a TLS connection.",
      "ja": "我々はまた、いくつかのこれらのチャネル結合タイプの適用上のアドバイスだけでなく、これを使用する際のアドバイスを提供します。さらに、当社は、TLSの実装は、提供すべきでTLS接続用のチャネルバインディングデータを取得するために、抽象APIを提供しています。"
    },
    {
      "indent": 3,
      "text": "WARNING: it turns out that the first implementor implemented and deployed something rather different than what was described in the IANA registration for 'tls-unique'. Subsequently, it was decided that we should adopt that form of 'tls-unique'. This means that this document makes a backwards-incompatible change to 'tls-unique'. See Section 8 for more details.",
      "ja": "警告：それは最初の実装は実装されており、「TLS-ユニークな」のIANA登録で説明したものではなく別の何かを展開していることが判明しました。その後、それは我々が「TLS-ユニークな」の形式を採用すべきことが決定されました。これは、このドキュメントでは、「TLS-ユニークな」と互換性のない変更を行うことを意味します。詳細については、セクション8を参照してください。"
    },
    {
      "indent": 0,
      "text": "2. Conventions Used in This Document",
      "section_title": true,
      "ja": "この文書で使用される2.表記"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はあります[RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "3. The 'tls-unique' Channel Binding Type",
      "section_title": true,
      "ja": "3.「TLS-ユニークな」チャンネルバインディングタイプ"
    },
    {
      "indent": 3,
      "text": "IANA updated the registration of the 'tls-unique' channel binding type to match the description below. There are material and substantial changes from the original registration, both in the description as well as registration meta-data (such as registration ownership).",
      "ja": "IANAは、以下の記述と一致するようにタイプを結合「TLS-ユニークな」チャンネルの登録を更新しました。説明ならびに（例えば、登録所有権など）、登録メタデータの両方元の登録から材料との実質的な変化があります。"
    },
    {
      "indent": 0,
      "text": "3.1. Description",
      "section_title": true,
      "ja": "3.1. 説明"
    },
    {
      "indent": 3,
      "text": "Description: The first TLS Finished message sent (note: the Finished struct, not the TLS record layer message containing it) in the most recent TLS handshake of the TLS connection being bound to (note: TLS connection, not session, so that the channel binding is specific to each connection regardless of whether session resumption is used). If TLS renegotiation takes place before the channel binding operation, then the first TLS Finished message sent of the latest/ inner-most TLS connection is used. Note that for full TLS handshakes, the first Finished message is sent by the client, while for abbreviated TLS handshakes (session resumption), the first Finished message is sent by the server.",
      "ja": "説明：（注：完成構造体ではなく、それを含むTLSレコード層メッセージ）送信された最初のTLS Finishedメッセージに結合しているTLS接続の最新のTLSハンドシェイクで（注：TLS接続ではなく、セッション、チャネルとなるよう結合）にかかわらず、セッション再開を使用するかどうかの各接続に対して特異的です。 TLS再ネゴシエーションがチャネル結合操作の前に行われる場合は、最初のTLS Finishedメッセージは/最新の最も内側のTLS接続が使用されているの送られました。略記TLSハンドシェイク（セッションの再開）のために、最初のFinishedメッセージがサーバによって送信されている間、完全なTLSハンドシェイクのために、最初のFinishedメッセージは、クライアントによって送信されることに留意されたいです。"
    },
    {
      "indent": 3,
      "text": "WARNING: The definition, security, and interoperability considerations of this channel binding type have changed since the original registration. Implementors should read the document that last updated this registration for more information.",
      "ja": "警告：このチャネル結合型の定義、セキュリティ、および相互運用性の考慮事項は、元の登録以降に変更されました。実装者は、詳細については、この登録を最後に更新した文書をお読みください。"
    },
    {
      "indent": 3,
      "text": "Interoperability note:",
      "ja": "相互運用性に関する注意："
    },
    {
      "indent": 6,
      "text": "This definition of 'tls-unique' means that a channel's bindings data may change over time, which in turn creates a synchronization problem should the channel's bindings data change between the time that the client initiates authentication with channel binding and the time that the server begins to process the client's first authentication message. If that happens, the authentication attempt will fail spuriously.",
      "ja": "今度は同期の問題を作成し、「TLS-ユニークな」のこの定義は、チャネルのバインディングデータは、時間の経過とともに変化する可能性があることを意味は、クライアントは、チャネルバインディングとサーバーが始まる時間との認証を開始した時刻との間のチャネルのバインディングデータの変更をすべきクライアントの最初の認証メッセージを処理します。その場合は、認証の試行が誤って失敗します。"
    },
    {
      "indent": 6,
      "text": "Based on the fact that while servers may request TLS renegotiation, only clients may initiate it, this synchronization problem can be avoided by clients and servers as follows: server applications MUST NOT request TLS renegotiation during phases of the application protocol during which application-layer authentication occurs. Client applications SHOULD NOT initiate TLS renegotiation between the start and completion of authentication.",
      "ja": "次のようにサーバはTLSの再交渉を要求することができる一方で、クライアントだけがそれを開始することができるという事実に基づくと、この同期の問題は、クライアントとサーバによって回避することができます。サーバーアプリケーションは、アプリケーションプロトコルの段階でTLSの再交渉を要求してはならない、どのアプリケーション層認証中発生しました。クライアントアプリケーションは、認証の開始と完了の間でTLS再交渉を開始すべきではありません。"
    },
    {
      "indent": 6,
      "text": "The rationale for making the server behavior a requirement while the client behavior is only a recommendation is that there typically exist TLS APIs for requesting renegotiation on the server side of a TLS connection, while many client TLS stacks do not provide fine-grained control over when TLS renegotiation occurs.",
      "ja": "クライアントの動作が唯一の勧告である一方で、サーバの動作に要件を作るための理論的根拠は、多くのクライアントがスタックがきめ細かく制御を提供していないTLSながら一般的に、TLS接続のサーバー側での再交渉を要求するためのTLSのAPIが存在することですTLS再ネゴシエーションが発生します。"
    },
    {
      "indent": 6,
      "text": "Application protocols SHOULD be designed in such a way that a server would never need to request TLS renegotiation immediately before or during application-layer authentication.",
      "ja": "アプリケーションプロトコルは、サーバがすぐにアプリケーション層認証の前または間にTLSの再交渉を要求する必要がないだろうように設計すべきです。"
    },
    {
      "indent": 0,
      "text": "3.2. Registration",
      "section_title": true,
      "ja": "3.2. 登録"
    },
    {
      "indent": 3,
      "text": "o Channel binding unique prefix: tls-unique",
      "ja": "TLS-ユニーク：Oチャネルは、固有の接頭辞を結合します"
    },
    {
      "indent": 3,
      "text": "o Channel binding type: unique",
      "ja": "Oチャネルバインディングのタイプ：ユニーク"
    },
    {
      "indent": 3,
      "text": "o Channel type: TLS [RFC5246]",
      "ja": "Oチャネルタイプ：TLS [RFC5246]"
    },
    {
      "indent": 3,
      "text": "o Published specification: <RFC 5929>",
      "ja": "O発行仕様：<RFC 5929>"
    },
    {
      "indent": 3,
      "text": "o Channel binding is secret: no",
      "ja": "O結合チャンネルは秘密です：いいえ"
    },
    {
      "indent": 3,
      "text": "o Description: <See specification>",
      "ja": "O説明：<仕様を参照してください>"
    },
    {
      "indent": 3,
      "text": "o Intended usage: COMMON",
      "ja": "O意図している用法：COMMON"
    },
    {
      "indent": 3,
      "text": "o Person and email address to contact for further information: Larry Zhu (larry.zhu@microsoft.com), Nicolas Williams (Nicolas.Williams@oracle.com).",
      "ja": "O Personと詳細のために連絡する電子メールアドレス：ラリー・朱（larry.zhu@microsoft.com）、ニコラス・ウィリアムズ（Nicolas.Williams@oracle.com）。"
    },
    {
      "indent": 3,
      "text": "o Owner/Change controller name and email address: IESG.",
      "ja": "O所有者/変更コントローラの名前と電子メールアドレス：IESG。"
    },
    {
      "indent": 3,
      "text": "o Expert reviewer name and contact information: IETF TLS WG (tls@ietf.org, failing that, ietf@ietf.org)",
      "ja": "Oエキスパートレビューアの名前と連絡先情報：IETF TLS WG（tls@ietf.org、ietf@ietf.org、ことを失敗）"
    },
    {
      "indent": 3,
      "text": "o Note: see the published specification for advice on the applicability of this channel binding type.",
      "ja": "O注：このチャネルバインディングタイプの適用可能性に関する助言のために公開された仕様を参照してください。"
    },
    {
      "indent": 0,
      "text": "4. The 'tls-server-end-point' Channel Binding Type",
      "section_title": true,
      "ja": "4.「TLS-サーバー・エンドポイント」チャンネルバインディングタイプ"
    },
    {
      "indent": 3,
      "text": "IANA updated the registration of the 'tls-server-end-point' channel binding type to match the description below. Note that the only material changes from the original registration are: the \"owner\" (now the IESG), the contacts, the published specification, and a note indicating that the published specification should be consulted for applicability advice. References were added to the description. All other fields of the registration are copied here for the convenience of readers.",
      "ja": "IANAは、以下の説明と一致する型を結合 'TLSサーバー・エンドポイントのチャネルの登録を更新します。公開された仕様は、適用のアドバイスのために相談する必要があることを示す「所有者」（今IESG）、連絡先、公開された仕様、およびノー​​ト：オリジナルの登録からのみ材料の変更があることに注意してください。参考文献は、説明を加えました。登録の他のすべてのフィールドは、読者の便宜のためにここにコピーされます。"
    },
    {
      "indent": 0,
      "text": "4.1. Description",
      "section_title": true,
      "ja": "4.1. 説明"
    },
    {
      "indent": 3,
      "text": "Description: The hash of the TLS server's certificate [RFC5280] as it appears, octet for octet, in the server's Certificate message. Note that the Certificate message contains a certificate_list, in which the first element is the server's certificate.",
      "ja": "説明：サーバーの証明書のメッセージでTLSサーバーの証明書が表示されたとして、[RFC5280]、オクテットのためのオクテットのハッシュ。 Certificateメッセージが最初の要素は、サーバーの証明書であるcertificate_listを、含まれていることに注意してください。"
    },
    {
      "indent": 3,
      "text": "The hash function is to be selected as follows:",
      "ja": "ハッシュ関数は、次のように選択されます。"
    },
    {
      "indent": 3,
      "text": "o if the certificate's signatureAlgorithm uses a single hash function, and that hash function is either MD5 [RFC1321] or SHA-1 [RFC3174], then use SHA-256 [FIPS-180-3];",
      "ja": "O証明書のsignatureAlgorithmは、単一のハッシュ関数を使用し、そのハッシュ関数は、MD5 [RFC1321]またはSHA-1 [RFC3174]のいずれかであり、次いで、SHA-256 [FIPS-180-3]を使用する場合、"
    },
    {
      "indent": 3,
      "text": "o if the certificate's signatureAlgorithm uses a single hash function and that hash function neither MD5 nor SHA-1, then use the hash function associated with the certificate's signatureAlgorithm;",
      "ja": "O証明書のsignatureAlgorithmは次に証明書のsignatureAlgorithmに関連付けられたハッシュ関数を使用して、単一のハッシュ関数とそのハッシュ関数MD5やSHA-1のどちらを使用する場合。"
    },
    {
      "indent": 3,
      "text": "o if the certificate's signatureAlgorithm uses no hash functions or uses multiple hash functions, then this channel binding type's channel bindings are undefined at this time (updates to is channel binding type may occur to address this issue if it ever arises).",
      "ja": "証明書ののsignatureAlgorithmは何のハッシュ関数を使用しない、または複数のハッシュ関数を使用している場合は、O、その後、このチャネルバインディングタイプのチャネル・バインディングは、この時点では不定です（更新はへのチャネル結合タイプは、それが今まで発生した場合、この問題に対処するために発生する可能性があります）。"
    },
    {
      "indent": 3,
      "text": "The reason for using a hash of the certificate is that some implementations need to track the channel binding of a TLS session in kernel-mode memory, which is often at a premium.",
      "ja": "証明書のハッシュを使用する理由は、いくつかの実装が貴重であることが多いカーネルモードメモリでTLSセッションの結合チャネルを、追跡する必要があるということです。"
    },
    {
      "indent": 0,
      "text": "4.2. Registration",
      "section_title": true,
      "ja": "4.2. 登録"
    },
    {
      "indent": 3,
      "text": "o Channel binding unique prefix: tls-server-end-point",
      "ja": "Oチャネルは独自の接頭辞を結合：TLS-サーバー・エンドポイント"
    },
    {
      "indent": 3,
      "text": "o Channel binding type: end-point",
      "ja": "Oチャネルバインディングタイプ：エンドポイント"
    },
    {
      "indent": 3,
      "text": "o Channel type: TLS [RFC5246]",
      "ja": "Oチャネルタイプ：TLS [RFC5246]"
    },
    {
      "indent": 3,
      "text": "o Published specification: <RFC 5929>",
      "ja": "O発行仕様：<RFC 5929>"
    },
    {
      "indent": 3,
      "text": "o Channel binding is secret: no",
      "ja": "O結合チャンネルは秘密です：いいえ"
    },
    {
      "indent": 3,
      "text": "o Description: <See specification>",
      "ja": "O説明：<仕様を参照してください>"
    },
    {
      "indent": 3,
      "text": "o Intended usage: COMMON",
      "ja": "O意図している用法：COMMON"
    },
    {
      "indent": 3,
      "text": "o Person and email address to contact for further information: Larry Zhu (larry.zhu@microsoft.com), Nicolas Williams (Nicolas.Williams@oracle.com).",
      "ja": "O Personと詳細のために連絡する電子メールアドレス：ラリー・朱（larry.zhu@microsoft.com）、ニコラス・ウィリアムズ（Nicolas.Williams@oracle.com）。"
    },
    {
      "indent": 3,
      "text": "o Owner/Change controller name and email address: IESG.",
      "ja": "O所有者/変更コントローラの名前と電子メールアドレス：IESG。"
    },
    {
      "indent": 3,
      "text": "o Expert reviewer name and contact information: IETF TLS WG (tls@ietf.org, failing that, ietf@ietf.org)",
      "ja": "Oエキスパートレビューアの名前と連絡先情報：IETF TLS WG（tls@ietf.org、ietf@ietf.org、ことを失敗）"
    },
    {
      "indent": 3,
      "text": "o Note: see the published specification for advice on the applicability of this channel binding type.",
      "ja": "O注：このチャネルバインディングタイプの適用可能性に関する助言のために公開された仕様を参照してください。"
    },
    {
      "indent": 0,
      "text": "5. The 'tls-unique-for-telnet' Channel Binding Type",
      "section_title": true,
      "ja": "5.「の-telnetの固有-TLS」チャンネルバインディングタイプ"
    },
    {
      "indent": 3,
      "text": "IANA updated the registration of the 'tls-unique-for-telnet' channel binding type to match the description below. Note that the only material changes from the original registration are: the \"owner\" (now the IESG), the contacts, the published specification, and a note indicating that the published specification should be consulted for applicability advice. The description is also clarified. We also moved the security considerations notes to the security considerations section of this document. All other fields of the registration are copied here for the convenience of readers.",
      "ja": "IANAは、以下の記述と一致するようにタイプを結合「TLS-ユニーク-ため、telnetの」チャンネルの登録を更新しました。公開された仕様は、適用のアドバイスのために相談する必要があることを示す「所有者」（今IESG）、連絡先、公開された仕様、およびノー​​ト：オリジナルの登録からのみ材料の変更があることに注意してください。説明も明らかにしています。また、この文書のセキュリティに関する考慮事項のセクションにセキュリティ上の考慮事項のメモを移動しました。登録の他のすべてのフィールドは、読者の便宜のためにここにコピーされます。"
    },
    {
      "indent": 0,
      "text": "5.1. Description",
      "section_title": true,
      "ja": "5.1. 説明"
    },
    {
      "indent": 3,
      "text": "Description: There is a proposal for adding a \"StartTLS\" extension to TELNET, and a channel binding extension for the various TELNET AUTH mechanisms whereby each side sends the other a \"checksum\" (MAC -- message authentication code) of their view of the channel's bindings. The client uses the TLS Finished messages (note: the Finished struct) sent by the client and server, each concatenated in that order and in their clear text form, of the first TLS handshake to which the connection is being bound. The server does the same but in the opposite concatenation order (server, then client).",
      "ja": "説明：そこTELNETに「StartTLSを」拡張を追加するための提案であり、（MAC  - メッセージ認証コード）各辺が他の「チェックサム」を送信することにより、様々なTELNETのAUTH機構の拡張を結合チャネルのビューのチャネルのバインディング。接続がバインドされている最初のTLSハンドシェイクのクライアントとサーバから送られ、そのためには、そのクリアテキスト形式で連結し、それぞれ、クライアントはTLS Finishedメッセージを（完成構造体に注意してください）を使用します。サーバーは同じですが、逆の連結順（サーバ、クライアント）で行われます。"
    },
    {
      "indent": 0,
      "text": "5.2. Registration",
      "section_title": true,
      "ja": "5.2. 登録"
    },
    {
      "indent": 3,
      "text": "o Channel binding unique prefix: tls-unique-for-telnet",
      "ja": "Oチャネルは、固有の接頭辞を結合：TLS-ユニーク-FOR-のtelnet"
    },
    {
      "indent": 3,
      "text": "o Channel binding type: unique",
      "ja": "Oチャネルバインディングのタイプ：ユニーク"
    },
    {
      "indent": 3,
      "text": "o Channel type: TLS [RFC5246]",
      "ja": "Oチャネルタイプ：TLS [RFC5246]"
    },
    {
      "indent": 3,
      "text": "o Published specification: <RFC 5929>",
      "ja": "O発行仕様：<RFC 5929>"
    },
    {
      "indent": 3,
      "text": "o Channel binding is secret: no",
      "ja": "O結合チャンネルは秘密です：いいえ"
    },
    {
      "indent": 3,
      "text": "o Description: <See specification>",
      "ja": "O説明：<仕様を参照してください>"
    },
    {
      "indent": 3,
      "text": "o Intended usage: COMMON",
      "ja": "O意図している用法：COMMON"
    },
    {
      "indent": 3,
      "text": "o Person and email address to contact for further information: Jeff Altman (jaltman@secure-endpoints.com), Nicolas Williams (Nicolas.Williams@oracle.com).",
      "ja": "O Personと詳細のために連絡する電子メールアドレス：ジェフ・アルトマン（jaltman@secure-endpoints.com）、ニコラス・ウィリアムズ（Nicolas.Williams@oracle.com）。"
    },
    {
      "indent": 3,
      "text": "o Owner/Change controller name and email address: IESG.",
      "ja": "O所有者/変更コントローラの名前と電子メールアドレス：IESG。"
    },
    {
      "indent": 3,
      "text": "o Expert reviewer name and contact information: IETF TLS WG (tls@ietf.org, failing that, ietf@ietf.org)",
      "ja": "Oエキスパートレビューアの名前と連絡先情報：IETF TLS WG（tls@ietf.org、ietf@ietf.org、ことを失敗）"
    },
    {
      "indent": 3,
      "text": "o Note: see the published specification for advice on the applicability of this channel binding type.",
      "ja": "O注：このチャネルバインディングタイプの適用可能性に関する助言のために公開された仕様を参照してください。"
    },
    {
      "indent": 0,
      "text": "6. Applicability of TLS Channel Binding Types",
      "section_title": true,
      "ja": "6.適用性TLSチャンネルの結合タイプ"
    },
    {
      "indent": 3,
      "text": "The 'tls-unique-for-telnet' channel binding type is only applicable to TELNET [RFC0854] and is available for all TLS connections.",
      "ja": "「TLS-ユニーク-ため、telnetの」チャネルバインディングタイプは、TELNET、[RFC0854]にのみ適用され、すべてのTLS接続に使用可能です。"
    },
    {
      "indent": 3,
      "text": "The 'tls-unique' channel binding type is available for all TLS connections, while 'tls-server-end-point' is only available when TLS cipher suites with server certificates are used, specifically: cipher suites that use the Certificate handshake message, which typically involve the use of PKIX [RFC5280]. For example, 'tls-server-end-point' is available when using TLS ciphers suites such as (this is not an exhaustive list):",
      "ja": "「TLS-サーバー・エンドポイントは、」サーバ証明書とTLS暗号スイートが使用されている場合のみ利用可能である一方、「TLS-ユニークな」チャネルバインディングのタイプとしては、具体的には、すべてのTLS接続のために提供されています：証明書ハンドシェイクメッセージを使用する暗号スイート、これは通常、PKIX [RFC5280]の使用を含みます。このような（これは網羅的なリストではない）のようなTLS暗号スイートを使用する場合、例えば、「TLSサーバエンドポイント」が利用可能です。"
    },
    {
      "indent": 3,
      "text": "o TLS_DHE_DSS_WITH_*",
      "ja": "* TLS_DHE_DSS_WITH_ O"
    },
    {
      "indent": 3,
      "text": "o TLS_DHE_RSA_WITH_*",
      "ja": "* TLS_DHE_RSA_WITH_ O"
    },
    {
      "indent": 3,
      "text": "o TLS_DH_DSS_WITH_*",
      "ja": "* TLS_DH_DSS_WITH_ O"
    },
    {
      "indent": 3,
      "text": "o TLS_DH_RSA_WITH_*",
      "ja": "* TLS_DH_RSA_WITH_ O"
    },
    {
      "indent": 3,
      "text": "o TLS_ECDHE_ECDSA_WITH_*",
      "ja": "* TLS_ECDHE_ECDSA_WITH_ O"
    },
    {
      "indent": 3,
      "text": "o TLS_ECDHE_RSA_WITH_*",
      "ja": "* TLS_ECDHE_RSA_WITH_ O"
    },
    {
      "indent": 3,
      "text": "o TLS_ECDH_ECDSA_WITH_*",
      "ja": "* TLS_ECDH_ECDSA_WITH_ O"
    },
    {
      "indent": 3,
      "text": "o TLS_ECDH_RSA_WITH_*",
      "ja": "* TLS_ECDH_RSA_WITH_ O"
    },
    {
      "indent": 3,
      "text": "o TLS_RSA_PSK_WITH_*",
      "ja": "* TLS_RSA_PSK_WITH_ O"
    },
    {
      "indent": 3,
      "text": "o TLS_RSA_WITH_*",
      "ja": "* TLS_RSA_WITH_ O"
    },
    {
      "indent": 3,
      "text": "o TLS_SRP_SHA_DSS_WITH_*",
      "ja": "* TLS_SRP_SHA_DSS_WITH_ O"
    },
    {
      "indent": 3,
      "text": "o TLS_SRP_SHA_RSA_WITH_*",
      "ja": "* TLS_SRP_SHA_RSA_WITH_ O"
    },
    {
      "indent": 3,
      "text": "but is not available when using TLS cipher suites such as (this is not an exhaustive list):",
      "ja": "そのような（これは完全なリストではありません）としてTLS暗号スイートを使用するときには使用できません。"
    },
    {
      "indent": 3,
      "text": "o TLS_DHE_PSK_WITH_*",
      "ja": "* TLS_DHE_PSK_WITH_ O"
    },
    {
      "indent": 3,
      "text": "o TLS_DH_anon_WITH_*",
      "ja": "O TLS_DH_anon_WITH_ *"
    },
    {
      "indent": 3,
      "text": "o TLS_ECDHE_PSK_WITH_*",
      "ja": "* TLS_ECDHE_PSK_WITH_ O"
    },
    {
      "indent": 3,
      "text": "o TLS_ECDH_anon_WITH_*",
      "ja": "O TLS_ECDH_anon_WITH_ *"
    },
    {
      "indent": 3,
      "text": "o TLS_KRB5_WITH_*",
      "ja": "* TLS_KRB5_WITH_ O"
    },
    {
      "indent": 3,
      "text": "o TLS_PSK_WITH_*",
      "ja": "* TLS_PSK_WITH_ O"
    },
    {
      "indent": 3,
      "text": "o TLS_SRP_SHA_WITH_*",
      "ja": "* TLS_SRP_SHA_WITH_ O"
    },
    {
      "indent": 3,
      "text": "'tls-server-end-point' is also not applicable for use with OpenPGP server certificates [RFC5081] [RFC4880] (since these don't use the Certificate handshake message).",
      "ja": "「TLSサーバエンドポイント」はまた、OpenPGPのサーバ証明書との使用に適用されません[RFC5081]、[RFC4880]（これらは、証明書ハンドシェイクメッセージを使用しないため）。"
    },
    {
      "indent": 3,
      "text": "Therefore, 'tls-unique' is applicable to more contexts than 'tls-server-end-point'. However, 'tls-server-end-point' may be used with existing TLS server-side proxies (\"concentrators\") without modification to the proxies, whereas 'tls-unique' may require firmware or software updates to server-side proxies. Therefore there may be cases where 'tls-server-end-point' may interoperate but where 'tls-unique' may not.",
      "ja": "そのため、「TLS-ユニーク」「は、TLSサーバー・エンドポイント」より多くのコンテキストに適用されます。 「TLS固有」がサーバ側プロキシにファームウェアまたはソフトウェアのアップデートが必要な場合があるが、「TLSサーバエンドポイント」は、プロキシを変更することなく、既存のTLSサーバ側プロキシ（「濃縮」）と共に使用することができます。したがって、「TLS-サーバー・エンドポイントは、」相互運用かもしれませんが、どこTLS-ユニーク」はないかもしれない場合があります。"
    },
    {
      "indent": 3,
      "text": "Also, authentication mechanisms may arise that depend on channel bindings to contribute entropy, in which case unique channel bindings would always have to be used in preference to end-point channel bindings. At this time there are no such mechanisms, though one such SASL mechanism has been proposed. Whether such mechanisms should be allowed is out of scope for this document.",
      "ja": "また、認証メカニズムは、固有のチャネル・バインディングは、常にチャネルバインディングポイント端に優先して使用されなければならない、その場合、エントロピーに寄与するために、チャネルバインディングに依存することが生じ得ます。そのようなSASL機構が提案されているものの、現時点では、そのような機構がありません。そのようなメカニズムを許可すべきかどうかは、この文書の範囲外です。"
    },
    {
      "indent": 3,
      "text": "For many applications, there may be two or more potentially applicable TLS channel binding types. Existing security frameworks (such as the GSS-API [RFC2743] or the SASL [RFC4422] GS2 framework [RFC5801]) and security mechanisms generally do not support negotiation of channel binding types. Therefore, application peers need to agree a priori as to what channel binding type to use (or agree to rules for deciding what channel binding type to use).",
      "ja": "多くの用途のために、二つ以上の潜在的に適用可能なTLSチャネル結合のタイプが存在してもよいです。セキュリティメカニズム（例えば、GSS-API [RFC2743]またはSASL [RFC4422] GS2フレームワーク[RFC5801]のような）既存のセキュリティフレームワークは、一般的にチャネルバインディングタイプのネゴシエーションをサポートしません。そのため、アプリケーションのピアは、どのような使用（または何チャネルを使用するタイプの結合を決定するための規則に同意）するタイプの結合チャネルへとアプリオリに同意する必要があります。"
    },
    {
      "indent": 3,
      "text": "The specifics of whether and how to negotiate channel binding types are beyond the scope of this document. However, it is RECOMMENDED that application protocols making use of TLS channel bindings, use 'tls-unique' exclusively, except, perhaps, where server-side proxies are common in deployments of an application protocol. In the latter case an application protocol MAY specify that 'tls-server-end-point' channel bindings must be used when available, with 'tls-unique' being used when 'tls-server-end-point' channel bindings are not available. Alternatively, the application may negotiate which channel binding type to use, or may make the choice of channel binding type configurable.",
      "ja": "そしてどのようにチャネルバインディングタイプを交渉するかどうかの詳細は、このドキュメントの範囲を超えています。サーバー側のプロキシは、アプリケーションプロトコルの展開で共通している場合は、おそらく、を除いしかし、TLSチャネルバインディングを利用するアプリケーションプロトコルは、専用の「TLS-ユニーク」を使用することをお勧めします。後者の場合、アプリケーションプロトコルが利用可能な場合「TLSサーバー・エンドポイントのチャネルバインディングは「TLS固有」 'は、TLSサーバー・エンドポイントのチャネルバインディングが使用できない場合に使用されていると共に、使用されなければならないことを指定することができます。代替的に、アプリケーションが使用するチャネルバインディングタイプを交渉することができる、またはチャネル結合タイプの選択は、構成することができます。"
    },
    {
      "indent": 3,
      "text": "Specifically, application protocol specifications MUST indicate at least one mandatory to implement channel binding type, MAY specify a negotiation protocol, MAY allow for out-of-band negotiation or configuration, and SHOULD have a preference for 'tls-unique' over 'tls-server-end-point'.",
      "ja": "具体的には、アプリケーションプロトコル仕様は、ネゴシエーションプロトコルを指定するかもしれアウトオブバンドネゴシエーションまたは構成を可能にすることができる、及び「TLS-オーバー「TLS固有」の嗜好を持っているべきである、少なくとも1つの必須のチャネルを実装する結合タイプを示さなければなりませんサーバー・エンドポイント」。"
    },
    {
      "indent": 0,
      "text": "7. Required Application Programming Interfaces",
      "section_title": true,
      "ja": "7.必要なアプリケーション・プログラミング・インタフェース"
    },
    {
      "indent": 3,
      "text": "TLS implementations supporting the use of 'tls-unique' and/or 'tls-unique-for-telnet' channel binding types MUST provide application programming interfaces by which applications (clients and servers both) may obtain the channel bindings for a TLS connection. Such interfaces may be expressed in terms of extracting the channel bindings data for a given connection and channel binding type. Alternatively, the implementor may provide interfaces by which to obtain the initial client Finished message, the initial server Finished message, and/or the server certificate (in a form that matches the description of the 'tls-server-end-point' channel binding type). In the latter case, the application has to have knowledge of the channel binding type descriptions from this document. This document takes no position on which form these application programming interfaces must take.",
      "ja": "「TLS固有」および/または「TLS固有-FOR-telnetの」チャネル結合型の使用をサポートするTLSの実装は、アプリケーション（クライアントとサーバの両方）は、TLS接続用チャネルバインディングを得ることができることにより、アプリケーション・プログラミング・インターフェースを提供しなければなりません。そのようなインターフェイスは、所与の接続チャネル結合型のチャネルバインディングデータを抽出する点で表すことができます。代替的に、実装は、結合「TLSサーバー・エンドポイントのチャネルの記述に一致する最初のクライアント終了メッセージ、初期サーバー終了メッセージ、及び/又は形態のサーバ証明書を（取得することにより、インターフェイスを提供してもよいですタイプ）。後者の場合、アプリケーションは、この文書のタイプの記述を結合チャネルの知識を有していなければなりません。この文書では、これらのアプリケーション・プログラミング・インタフェースは取る必要があります形成する上で何の位置を取りません。"
    },
    {
      "indent": 3,
      "text": "TLS implementations supporting TLS renegotiation SHOULD provide APIs that allow applications to control when renegotiation can take place. For example, a TLS client implementation may provide a \"callback\" interface to indicate that the server requested renegotiation, but may not start renegotiation until the application calls a function to indicate that now is a good time to renegotiate.",
      "ja": "TLS再ネゴシエーションをサポートするTLSの実装は、再交渉が行われることができるとき、アプリケーションが制御できるようにするAPIを提供する必要があります。例えば、TLSクライアントの実装では、サーバが再交渉を要求したことを示すために「コールバック」インターフェースを提供することができますが、アプリケーションは、今再交渉に良い時期であることを示すための関数を呼び出すまで再交渉を開始しないことがあります。"
    },
    {
      "indent": 0,
      "text": "8. Description of Backwards-Incompatible Changes Made Herein to 'tls-unique'",
      "ja": "「TLS-ユニークな」と互換性のない変更内容ここの8説明"
    },
    {
      "indent": 3,
      "text": "The original description of 'tls-unique' read as follows:",
      "ja": "以下のように「TLS-ユニークな」の元の記述を読みます："
    },
    {
      "indent": 6,
      "text": "|OLD| Description: The client's TLS Finished message (note: the |OLD| Finished struct) from the first handshake of the connection |OLD| (note: connection, not session, so that the channel binding |OLD| is specific to each connection regardless of whether session |OLD| resumption is used).",
      "ja": "| OLD |説明：クライアントのTLS Finishedメッセージ（注：| OLD |完成構造体）接続の最初のハンドシェークから| OLD | （注：接続ではなく、セッション、チャネルバインディングよう|古い|かかわらずかどうか、セッションの各接続に固有の| OLD |再開が使用されています）。"
    },
    {
      "indent": 21,
      "text": "Original 'tls-unique' description",
      "ja": "オリジナル「TLS-ユニークな」記述"
    },
    {
      "indent": 3,
      "text": "In other words: the client's Finished message from the first handshake of a connection, regardless of whether that handshake was a full or abbreviated handshake, and regardless of how many subsequent handshakes (renegotiations) might have followed.",
      "ja": "接続の最初のハンドシェークからクライアントのFinishedメッセージにかかわらず、そのハンドシェイクが完全または簡略握手であったかどうかの、とに関わらず続いている場合がありますどのように多く、その後の握手（再交渉）の：他の言葉で。"
    },
    {
      "indent": 3,
      "text": "As explained in Section 1, this is no longer the description of 'tls-unique', and the new description is not backwards compatible with the original except in the case of TLS connections where: a) only one handshake has taken place before application-layer authentication, and b) that one handshake was a full handshake.",
      "ja": "第1節で説明したように、これはもはや「TLS-ユニークな」の記述がなく、新しい説明は、TLS接続の場合を除いて、元との下位互換性がありません：a）の唯一のハンドシェイクが用途向けの前に行われました層認証、およびb）1つのハンドシェイクがいっぱい握手だったこと。"
    },
    {
      "indent": 3,
      "text": "This change has a number of implications:",
      "ja": "この変更は、意味合いの数があります。"
    },
    {
      "indent": 3,
      "text": "o Backwards-incompatibility. It is possible that some implementations of the original 'tls-unique' channel binding type have been deployed. We know of at least one TLS implementation that exports 'tls-unique' channel bindings with the original semantics, but we know of no deployed application using the same. Implementations of the original and new 'tls-unique' channel binding type will only interoperate when: a) full TLS handshakes are used, and b) TLS renegotiation is not used.",
      "ja": "O下位互換性がありません。オリジナルの「TLS-ユニークな」チャネル結合タイプのいくつかの実装が配備されている可能性があります。私たちは、輸出「TLS-ユニークな」オリジナルのセマンティクスを持つチャネルバインディングが、私たちはそれを利用した無配備されたアプリケーションの知っている少なくとも一つのTLSの実装を知っています。 a）は、完全なTLSハンドシェイクが使用され、およびb）TLSの再ネゴシエーションが使用されていません：元および新しい「TLS-ユニークな」チャネル結合タイプの実装は、ときにのみ相互運用します。"
    },
    {
      "indent": 3,
      "text": "o Security considerations -- see Section 10.",
      "ja": "Oセキュリティ上の考慮事項 - セクション10を参照してください。"
    },
    {
      "indent": 3,
      "text": "o Interoperability considerations. As described in Section 3, the new definition of the 'tls-unique' channel binding type has an interoperability problem that may result in spurious authentication failures unless the application implements one or both of the techniques described in that section.",
      "ja": "Oの相互運用性の考慮。第3節で説明したように、「TLS固有」チャネル結合型の新しい定義は、アプリケーションがそのセクションで説明した技術の1つまたは両方を実装しない限り、偽の認証の失敗をもたらすことができる相互運用性の問題があります。"
    },
    {
      "indent": 0,
      "text": "9. IANA Considerations",
      "section_title": true,
      "ja": "9. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "IANA updated three existing channel binding type registrations. See the rest of this document.",
      "ja": "IANAは、既存の3件のチャネル結合型の登録を更新しました。このドキュメントの残りの部分を参照してください。"
    },
    {
      "indent": 0,
      "text": "10. Security Considerations",
      "section_title": true,
      "ja": "10.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "The Security Considerations sections of [RFC5056], [RFC5246], and [RFC5746] apply to this document.",
      "ja": "[RFC5056]、[RFC5246]、および[RFC5746]のセキュリティの考慮事項のセクションでは、この文書に適用されます。"
    },
    {
      "indent": 3,
      "text": "The TLS Finished messages (see Section 7.4.9 of [RFC5246]) are known to both endpoints of a TLS connection and are cryptographically bound to it. For implementations of TLS that correctly handle renegotiation [RFC5746], each handshake on a TLS connection is bound to the preceding handshake, if any. Therefore, the TLS Finished messages can be safely used as a channel binding provided that the authentication mechanism doing the channel binding conforms to the requirements in [RFC5056]. Applications utilizing 'tls-unique' channel binding with TLS implementations without support for secure renegotiation [RFC5746] MUST ensure that ChangeCipherSpec has been used in any and all renegotiations prior to application-layer authentication, and MUST discard any knowledge learned from the server prior to the completion of application-layer authentication.",
      "ja": "TLS Finishedメッセージは、TLS接続の両方のエンドポイントに知られており、暗号それに結合している（[RFC5246]のセクション7.4.9を参照します）。任意正しく再交渉[RFC5746]を扱うTLSの実装のために、TLS接続の各ハンドシェイクは、前のハンドシェイクに結合されます。したがって、TLS Finishedメッセージは、安全に認証メカニズムは[RFC5056]での要件に適合する結合チャネルを行うことを条件とする結合チャネルとして使用することができます。安全な再交渉[RFC5746]のためのサポートなしでTLSの実装と結合する「TLS-ユニークな」チャンネルを利用するアプリケーションは、ChangeCipherSpecを前アプリケーション層認証に任意およびすべての再交渉で使用されていることを確認する必要があり、かつ任意の知識を捨てなければなりません前に、サーバーから学びましたアプリケーション層認証の完了。"
    },
    {
      "indent": 3,
      "text": "The server certificate, when present, is also cryptographically bound to the TLS connection through its use in key transport and/or authentication of the server (either by dint of its use in key transport, by its use in signing key agreement, or by its use in key agreement). Therefore, the server certificate is suitable as an end-point channel binding as described in [RFC5056].",
      "ja": "、また、暗号キーの輸送での使用によって、および/またはサーバの認証（いずれかのキー輸送におけるその使用のくぼみにより、鍵合意に署名におけるその使用により、またはそのことにより、TLS接続にバインドされている現在のサーバ証明書、 ）鍵合意に使用します。したがって、サーバ証明書は、[RFC5056]に記載されているように結合エンドポイントチャネルとして好適です。"
    },
    {
      "indent": 0,
      "text": "10.1. Cryptographic Algorithm Agility",
      "section_title": true,
      "ja": "10.1. 暗号アルゴリズムアジリティ"
    },
    {
      "indent": 3,
      "text": "The 'tls-unique' and 'tls-unique-for-telnet' channel binding types do not add any use of cryptography beyond that used by TLS itself. Therefore, these two channel binding types add no considerations with respect to cryptographic algorithm agility.",
      "ja": "「TLS-ユニーク」と「TLS-ユニーク-ため、telnetの」TLS自体が使用することを超えて、暗号化のいずれかの使用を追加しないタイプを結合チャネル。したがって、これらの二つのチャネル結合のタイプは、暗号アルゴリズムの俊敏性に関して一切考慮事項を追加しません。"
    },
    {
      "indent": 3,
      "text": "The 'tls-server-end-point' channel binding type consists of a hash of a server certificate. The reason for this is to produce manageably small channel binding data, as some implementations will be using kernel-mode memory (which is typically scarce) to store these. This use of a hash algorithm is above and beyond TLS's use of cryptography, therefore the 'tls-server-end-point' channel binding type has a security consideration with respect to hash algorithm agility. The algorithm to be used, however, is derived from the server certificate's signature algorithm as described in Section 4.1; to recap: use SHA-256 if the certificate signature algorithm uses MD5 or SHA-1, else use whatever hash function the certificate uses (unless the signature algorithm uses no hash functions or more than one hash function, in which case 'tls-server-end-point' is undefined). The construction of 'tls-server-end-point' channel bindings is not directly hash-agile (since no negotiation of hash function is provided for), but it is hash-agile nonetheless. The hash agility of 'tls-server-end-point' channel bindings derives from PKIX and TLS.",
      "ja": "「TLSサーバー・エンドポイントのチャネルバインディングタイプは、サーバ証明書のハッシュから成ります。この理由は、いくつかの実装は、これらを格納する（典型的には不足である）カーネルモードメモリを使用するように、管理可能小さなチャネル結合データを生成することです。ハッシュアルゴリズムの使用はしたがって、「TLS-サーバー・エンドポイント」チャネル結合タイプは、アルゴリズムの俊敏性をハッシュに対するセキュリティ上の配慮を持っている、上記と暗号のTLSの使用を超えています。セクション4.1で説明したように使用されるアルゴリズムは、しかし、サーバ証明書の署名アルゴリズムから導出されます。要約する：証明書の署名アルゴリズムは、ケースの「TLSサーバーのMD5またはSHA-1、どのようなハッシュ関数署名アルゴリズム無しハッシュ関数または複数のハッシュ関数を使用しない場合を除き、証明書の使用（他の使用を使用する場合、SHA-256を使用し末端点は、」定義されていません）。 （ハッシュ関数のない交渉をするために設けられていないので）「TLSサーバー・エンドポイントのチャネルバインディングの構成は、直接アジャイルハッシュされていないが、それにもかかわらずハッシュアジャイルです。 「TLS-サーバー・エンドポイント」チャネルバインディングのハッシュ敏捷性はPKIXおよびTLSに由来します。"
    },
    {
      "indent": 3,
      "text": "Current proposals for randomized signatures algorithms [RHASH] [NIST-SP.800-106.2009] use hash functions in their construction -- a single hash function in each algorithm. Therefore, the 'tls-server-end-point' channel binding type should be available even in cases where new signatures algorithms are used that are based on current randomized hashing proposals (but we cannot guarantee this, of course).",
      "ja": "各アルゴリズムでの単一のハッシュ関数を - ランダム化された署名アルゴリズム[RHASH] [NIST-SP.800-106.2009]その構造にハッシュ関数を使用するための現在の提案。そのため、「TLS-サーバー・エンドポイント」チャネル結合タイプでも（私たちは、もちろん、これを保証することはできません）現在の無作為化ハッシュの提案に基づいており、新たな署名アルゴリズムが使用されている場合に利用可能であるべきです。"
    },
    {
      "indent": 0,
      "text": "10.2. On Disclosure of Channel Bindings Data by Authentication Mechanisms",
      "ja": "10.2. 認証メカニズムによってチャネルバインディングデータの開示に"
    },
    {
      "indent": 3,
      "text": "When these channel binding types were first considered, one issue that some commenters were concerned about was the possible impact on the security of the TLS channel, of disclosure of the channel bindings data by authentication mechanisms. This can happen, for example, when an authentication mechanism transports the channel bindings data, with no confidentiality protection, over other transports (for example, in communicating with a trusted third party), or when the TLS channel provides no confidentiality protection and the authentication mechanism does not protect the confidentiality of the channel bindings data. This section considers that concern.",
      "ja": "これらのチャネルバインディングタイプを最初に考慮されたときに、いくつかのコメント投稿が懸念た1つの問題は、認証メカニズムによるチャネルバインディングデータの開示のTLSチャネルのセキュリティに影響可能でした。認証メカニズムは、（信頼できるサードパーティと通信する際に、例えば）他のトランスポート上で、無機密性保護と、チャネルバインディングデータを搬送するとき、これは、例えば、発生する可能性があり、またはTLSチャネルには機密保護と認証を提供しない場合メカニズムがチャネルバインディングデータの機密性を保護しません。このセクションでは、その懸念を考慮しています。"
    },
    {
      "indent": 3,
      "text": "When the TLS connection uses a cipher suite that does not provide confidentiality protection, the TLS Finished messages will be visible to eavesdroppers, regardless of what the authentication mechanism does. The same is true of the server certificate which, in any case, is generally visible to eavesdroppers. Therefore we must consider our choices of TLS channel bindings here to be safe to disclose by definition -- if that were not the case, then TLS with cipher suites that don't provide confidentiality protection would be unsafe. Furthermore, the TLS Finished message construction depends on the security of the TLS PRF, which in turn needs to be resistant to key recovery attacks, and we think that it is, as it is based on HMAC, and the master secret is, well, secret (and the result of key exchange).",
      "ja": "TLS接続は機密性保護を提供しない暗号スイートを使用する場合、TLS Finishedメッセージは関係なく、認証メカニズムが何をするかの、盗聴者に表示されます。同じことが、いずれの場合においても、盗聴者に一般的に表示され、サーバ証明書についても同様です。そこで我々は、定義により開示しても安全であることをここにTLSチャネルバインディングの私達の選択を考慮しなければならない - それはケースではありませんでした場合は、機密性保護を提供しない暗号スイートとTLSは安全ではないだろう。さらに、TLS Finishedメッセージの建設は、順番に鍵回復攻撃に対して耐性であることが必要であり、我々はそれがHMACに基づいているとして、それは、あると思いますし、マスター秘密は、まあ、あるTLS PRFのセキュリティに依存します秘密（鍵交換の結果）。"
    },
    {
      "indent": 3,
      "text": "Note too that in the case of an attempted active man-in-the-middle attack, the attacker will already possess knowledge of the TLS Finished messages for both inbound and outbound TLS channels (which will differ, given that the attacker cannot force them to be the same). No additional information is obtained by the attacker from the authentication mechanism's disclosure of channel bindings data -- the attacker already has it, even when cipher suites providing confidentiality protection are provided.",
      "ja": "未遂アクティブman-in-the-middle攻撃の場合、攻撃者は、すでに攻撃者がそれらを強制することはできませんことを考えると、異なるであろう（インバウンドとアウトバウンドの両方のTLSチャネル用のTLS Finishedメッセージの知識を有することになることにも注意してください）同じであること。機密保護を提供する暗号スイートを提供する場合であっても、攻撃者はすでにそれを持っている - 追加情報は、チャネルバインディングデータの認証メカニズムの開示からの攻撃者によって得られません。"
    },
    {
      "indent": 3,
      "text": "None of the channel binding types defined herein produce channel bindings data that must be kept secret. Moreover, none of the channel binding types defined herein can be expected to be private (known only to the end-points of the channel), except that the unique TLS channel binding types can be expected to be private when a cipher suite that provides confidentiality protection is used to protect the Finished message exchanges and the application data records containing application-layer authentication messages.",
      "ja": "本明細書に定義されるタイプの結合チャネルのいずれも秘密にしなければならないチャネルバインディングデータを生成しません。また、本明細書で定義されるチャネル結合型のいずれも暗号スイート機密性を提供する際に固有のTLSチャネルバインディングタイプはプライベートであると予想することができることを除いて、（のみチャネルのエンドポイントに知られている）、プライベートであると期待することはできません保護は、Finishedメッセージ交換とアプリケーション層の認証メッセージを含むアプリケーション・データ・レコードを保護するために使用されます。"
    },
    {
      "indent": 0,
      "text": "11. References",
      "section_title": true,
      "ja": "11.参考文献"
    },
    {
      "indent": 0,
      "text": "11.1. Normative References",
      "section_title": true,
      "ja": "11.1. 引用規格"
    },
    {
      "indent": 3,
      "text": "[FIPS-180-3] United States of America, National Institute of Standards and Technology, \"Secure Hash Standard\", Federal Information Processing Standard (FIPS) 180-3, October 2008.",
      "ja": "[FIPS-180-3]、アメリカの州、米国国立標準技術研究所、連邦情報処理標準（FIPS）180-3、2008年10月「ハッシュ標準セキュア」。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC5056] Williams, N., \"On the Use of Channel Bindings to Secure Channels\", RFC 5056, November 2007.",
      "ja": "\"チャネルを確保するチャネルバインディングの使用について\" [RFC5056]ウィリアムズ、N.、RFC 5056、2007年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC5246] Dierks, T. and E. Rescorla, \"The Transport Layer Security (TLS) Protocol Version 1.2\", RFC 5246, August 2008.",
      "ja": "[RFC5246]ダークス、T.およびE.レスコラ、 \"トランスポート層セキュリティ（TLS）プロトコルバージョン1.2\"、RFC 5246、2008年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC5746] Rescorla, E., Ray, M., Dispensa, S., and N. Oskov, \"Transport Layer Security (TLS) Renegotiation Indication Extension\", RFC 5746, February 2010.",
      "ja": "[RFC5746]レスコラ、E.、レイ、M.、Dispensa、S.、およびN. Oskov、 \"トランスポート層セキュリティ（TLS）再ネゴシエーション指示拡張子\"、RFC 5746、2010年2月。"
    },
    {
      "indent": 0,
      "text": "11.2. Informative References",
      "section_title": true,
      "ja": "11.2. 参考文献"
    },
    {
      "indent": 3,
      "text": "[NIST-SP.800-106.2009] National Institute of Standards and Technology, \"NIST Special Publication 800- 106: Randomized Hashing for Digital Signatures\", February 2009.",
      "ja": "[NIST-SP.800-106.2009]アメリカ国立標準技術研究所、 \"は、NIST Special Publication 800- 106：デジタル署名のための無作為化ハッシュ\"、2009年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC0854] Postel, J. and J. Reynolds, \"Telnet Protocol Specification\", STD 8, RFC 854, May 1983.",
      "ja": "[RFC0854]ポステル、J.、およびJ.レイノルズ、 \"テルネットプロトコル仕様\"、STD 8、RFC 854、1983年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC1321] Rivest, R., \"The MD5 Message-Digest Algorithm\", RFC 1321, April 1992.",
      "ja": "[RFC1321]のRivest、R.、 \"MD5メッセージダイジェストアルゴリズム\"、RFC 1321、1992年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC2743] Linn, J., \"Generic Security Service Application Program Interface Version 2, Update 1\", RFC 2743, January 2000.",
      "ja": "[RFC2743]リン、J.、 \"ジェネリックセキュリティーサービス適用業務プログラムインタフェースバージョン2、アップデート1\"、RFC 2743、2000年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC3174] Eastlake, D. and P. Jones, \"US Secure Hash Algorithm 1 (SHA1)\", RFC 3174, September 2001.",
      "ja": "[RFC3174]イーストレイク、D.とP.ジョーンズは、 \"米国は、ハッシュアルゴリズム1（SHA1）を確保\"、RFC 3174、2001年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC4422] Melnikov, A., Ed., and K. Zeilenga, Ed., \"Simple Authentication and Security Layer (SASL)\", RFC 4422, June 2006.",
      "ja": "[RFC4422]メルニコフ、A.編、およびK. Zeilenga、エド。、 \"簡易認証セキュリティー層（SASL）\"、RFC 4422、2006年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC4880] Callas, J., Donnerhacke, L., Finney, H., Shaw, D., and R. Thayer, \"OpenPGP Message Format\", RFC 4880, November 2007.",
      "ja": "[RFC4880]カラス、J.、Donnerhacke、L.、フィニー、H.、ショー、D.、およびR.セイヤー、 \"OpenPGPのメッセージフォーマット\"、RFC 4880、2007年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC5081] Mavrogiannopoulos, N., \"Using OpenPGP Keys for Transport Layer Security (TLS) Authentication\", RFC 5081, November 2007.",
      "ja": "[RFC5081] Mavrogiannopoulos、N.、RFC 5081、2007年11月 \"トランスポート層セキュリティ（TLS）認証のためのOpenPGPキーの使用\"。"
    },
    {
      "indent": 3,
      "text": "[RFC5280] Cooper, D., Santesson, S., Farrell, S., Boeyen, S., Housley, R., and W. Polk, \"Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile\", RFC 5280, May 2008.",
      "ja": "[RFC5280]クーパー、D.、Santesson、S.、ファレル、S.、Boeyen、S.、Housley氏、R.、およびW.ポーク、「インターネットX.509公開鍵暗号基盤証明書と証明書失効リスト（CRL）のプロフィール」、RFC 5280、2008年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC5801] Josefsson, S. and N. Williams, \"Using Generic Security Service Application Program Interface (GSS-API) Mechanisms in Simple Authentication and Security Layer (SASL): The GS2 Mechanism Family\", RFC 5801, July 2010.",
      "ja": "、RFC 5801、2010年7月： \"GS2メカニズム家族簡易認証セキュリティー層（SASL）で一般的なセキュリティサービスアプリケーションプログラムインタフェース（GSS-API）メカニズムを使用して\" [RFC5801] Josefsson氏、S.およびN.ウィリアムズ、。"
    },
    {
      "indent": 3,
      "text": "[RHASH] Halevi, S. and H. Krawczyk, \"Strengthening Digital Signatures via Randomized Hashing\", Work in Progress, October 2007.",
      "ja": "\"ランダム化ハッシュを経由してデジタル署名の強化\" [RHASH] Halevi、S.およびH. Krawczyk、進歩、2007年10月の作業。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Jeff Altman Secure Endpoints 255 W 94TH ST PHB New York, NY 10025 US",
      "ja": "ジェフアルトマンセキュアなエンドポイント255 W第94回ST PHBニューヨーク、NY 10025米国"
    },
    {
      "indent": 3,
      "text": "EMail: jaltman@secure-endpoints.com",
      "ja": "メールアドレス：jaltman@secure-endpoints.com"
    },
    {
      "indent": 3,
      "text": "Nicolas Williams Oracle 5300 Riata Trace Ct Austin, TX 78727 US",
      "ja": "ニコラス・ウィリアムズOracleの5300 RiataトレースのCtオースティン、TX 78727米国"
    },
    {
      "indent": 3,
      "text": "EMail: Nicolas.Williams@oracle.com",
      "ja": "メールアドレス：Nicolas.Williams@oracle.com"
    },
    {
      "indent": 3,
      "text": "Larry Zhu Microsoft Corporation One Microsoft Way Redmond, WA 98052 US",
      "ja": "ラリー朱マイクロソフト社1マイクロソフト道、レッドモンド、ワシントン98052米国"
    },
    {
      "indent": 3,
      "text": "EMail: larry.zhu@microsoft.com",
      "ja": "メールアドレス：larry.zhu@microsoft.com"
    }
  ]
}