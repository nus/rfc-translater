{
  "title": {
    "text": "RFC 5277 - NETCONF Event Notifications",
    "ja": "RFC 5277 - NETCONFイベント通知"
  },
  "number": 5277,
  "created_at": "2019-10-25 19:34:51.455387+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                        S. Chisholm\nRequest for Comments: 5277                                        Nortel\nCategory: Standards Track                                     H. Trevino\n                                                                   Cisco\n                                                               July 2008",
      "raw": true
    },
    {
      "indent": 22,
      "text": "NETCONF Event Notifications",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "ja": "この文書は、インターネットコミュニティのためのインターネット標準トラックプロトコルを指定し、改善のための議論と提案を要求します。このプロトコルの標準化状態と状態への「インターネット公式プロトコル標準」（STD 1）の最新版を参照してください。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document defines mechanisms that provide an asynchronous message notification delivery service for the Network Configuration protocol (NETCONF). This is an optional capability built on top of the base NETCONF definition. This document defines the capabilities and operations necessary to support this service.",
      "ja": "この文書では、ネットワーク構成プロトコル（NETCONF）のための非同期メッセージ通知配信サービスを提供するメカニズムを定義します。これはベースNETCONFの定義の上に構築されたオプション機能です。この文書では、このサービスをサポートするために必要な機能や操作を定義しています。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3\n  1.1.  Definition of Terms  . . . . . . . . . . . . . . . . . . .  3\n  1.2.  Motivation . . . . . . . . . . . . . . . . . . . . . . . .  4\n  1.3.  Event Notifications in NETCONF . . . . . . . . . . . . . .  5\n2.  Notification-Related Operations  . . . . . . . . . . . . . . .  5\n  2.1.  Subscribing to Receive Event Notifications . . . . . . . .  5\n    2.1.1.  <create-subscription>  . . . . . . . . . . . . . . . .  6\n  2.2.  Sending Event Notifications  . . . . . . . . . . . . . . .  9\n    2.2.1.  <notification> . . . . . . . . . . . . . . . . . . . .  9\n  2.3.  Terminating the Subscription . . . . . . . . . . . . . . .  9\n3.  Supporting Concepts  . . . . . . . . . . . . . . . . . . . . . 10\n  3.1.  Capabilities Exchange  . . . . . . . . . . . . . . . . . . 10\n    3.1.1.  Capability Identifier  . . . . . . . . . . . . . . . . 10\n    3.1.2.  Capability Example . . . . . . . . . . . . . . . . . . 10\n  3.2.  Event Streams  . . . . . . . . . . . . . . . . . . . . . . 10\n    3.2.1.  Event Stream Definition  . . . . . . . . . . . . . . . 12\n    3.2.2.  Event Stream Content Format  . . . . . . . . . . . . . 12\n    3.2.3.  Default Event Stream . . . . . . . . . . . . . . . . . 12\n    3.2.4.  Event Stream Sources . . . . . . . . . . . . . . . . . 12\n    3.2.5.  Event Stream Discovery . . . . . . . . . . . . . . . . 12\n  3.3.  Notification Replay  . . . . . . . . . . . . . . . . . . . 15\n    3.3.1.  Overview . . . . . . . . . . . . . . . . . . . . . . . 15\n    3.3.2.  Creating a Subscription with Replay  . . . . . . . . . 16\n  3.4.  Notification Management Schema . . . . . . . . . . . . . . 16\n  3.5.  Subscriptions Data . . . . . . . . . . . . . . . . . . . . 20\n  3.6.  Filter Mechanics . . . . . . . . . . . . . . . . . . . . . 20\n    3.6.1.  Filtering  . . . . . . . . . . . . . . . . . . . . . . 20\n  3.7.  Message Flow . . . . . . . . . . . . . . . . . . . . . . . 20\n4.  XML Schema for Event Notifications . . . . . . . . . . . . . . 22\n5.  Filtering Examples . . . . . . . . . . . . . . . . . . . . . . 26\n  5.1.  Subtree Filtering  . . . . . . . . . . . . . . . . . . . . 28\n  5.2.  XPATH Filters  . . . . . . . . . . . . . . . . . . . . . . 29\n6.  Interleave Capability  . . . . . . . . . . . . . . . . . . . . 30\n  6.1.  Description  . . . . . . . . . . . . . . . . . . . . . . . 30\n  6.2.  Dependencies . . . . . . . . . . . . . . . . . . . . . . . 30\n  6.3.  Capability Identifier  . . . . . . . . . . . . . . . . . . 30\n  6.4.  New Operations . . . . . . . . . . . . . . . . . . . . . . 31\n  6.5.  Modifications to Existing Operations . . . . . . . . . . . 31\n7.  Security Considerations  . . . . . . . . . . . . . . . . . . . 31\n8.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 32\n9.  Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . 33\n10. Normative References . . . . . . . . . . . . . . . . . . . . . 33",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "[NETCONF] can be conceptually partitioned into four layers:",
      "ja": "【NETCONF】概念的に4層に分割することができます。"
    },
    {
      "indent": 4,
      "text": "    Layer                            Example\n+-------------+      +-------------------------------------------+\n|   Content   |      |     Configuration data                    |\n+-------------+      +-------------------------------------------+\n          |                           |\n+-------------+      +-------------------------------------------+\n| Operations  |      |<get-config>, <edit-config>, <notification>|\n+-------------+      +-------------------------------------------+\n          |                           |                    |\n+-------------+      +-----------------------------+       |\n|     RPC     |      |    <rpc>, <rpc-reply>       |       |\n+-------------+      +-----------------------------+       |\n          |                           |                    |\n+-------------+      +-------------------------------------------+\n|  Transport  |      |   BEEP, SSH, SSL, console                 |\n|  Protocol   |      |                                           |\n+-------------+      +-------------------------------------------+",
      "raw": true
    },
    {
      "indent": 33,
      "text": "Figure 1",
      "ja": "図1"
    },
    {
      "indent": 3,
      "text": "This document defines mechanisms that provide an asynchronous message notification delivery service for the [NETCONF] protocol. This is an optional capability built on top of the base NETCONF definition. This memo defines the capabilities and operations necessary to support this service.",
      "ja": "この文書では、[NETCONF】プロトコルの非同期メッセージ通知配信サービスを提供するメカニズムを定義します。これはベースNETCONFの定義の上に構築されたオプション機能です。このメモは、このサービスをサポートするために必要な機能や操作を定義しています。"
    },
    {
      "indent": 0,
      "text": "1.1. Definition of Terms",
      "section_title": true,
      "ja": "1.1。用語の定義"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はあります[RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 3,
      "text": "Element: An [XML] Element.",
      "ja": "要素：[XML]要素。"
    },
    {
      "indent": 3,
      "text": "Subscription: An agreement and method to receive event notifications over a NETCONF session. A concept related to the delivery of notifications (if there are any to send) involving destination and selection of notifications. It is bound to the lifetime of a session.",
      "ja": "サブスクリプション：NETCONFセッションを介してイベント通知を受信することで合意し、方法。通知の送信先と選択を伴う通知の配信に関連する概念（送信するためにいずれかが存在する場合）。これは、セッションの有効期間にバインドされています。"
    },
    {
      "indent": 3,
      "text": "Operation: This term is used to refer to NETCONF protocol operations [NETCONF]. Within this document, operation refers to NETCONF protocol operations defined in support of NETCONF notifications.",
      "ja": "操作：この用語は、NETCONFプロトコル操作[NETCONF]を指すために使用されます。この文書内で、動作はNETCONF通知のサポートで定義されたNETCONFプロトコル操作を指します。"
    },
    {
      "indent": 3,
      "text": "Event: An event is something that happens that may be of interest - a configuration change, a fault, a change in status, crossing a threshold, or an external input to the system, for example. Often, this results in an asynchronous message, sometimes referred to as a notification or event notification, being sent to interested parties to notify them that this event has occurred.",
      "ja": "イベント：イベントは興味があるかもしれ起こるものです - 例えば、構成変更、障害、状態の変化、しきい値を超える、またはシステムへの外部入力、。しばしば、非同期メッセージ内のこの結果は、時々通知又はイベント通知と呼ばれる、このイベントが発生したことを通知するために関係者に送信されます。"
    },
    {
      "indent": 3,
      "text": "Replay: The ability to send/re-send previously logged notifications upon request. These notifications are sent asynchronously. This feature is implemented by the NETCONF server and invoked by the NETCONF client.",
      "ja": "リプレイ：送信/再送信機能は、以前の要求に応じて通知をログに記録しました。これらの通知は、非同期的に送信されます。この機能は、NETCONFサーバによって実装され、NETCONFクライアントによって呼び出されます。"
    },
    {
      "indent": 3,
      "text": "Stream: An event stream is a set of event notifications matching some forwarding criteria and available to NETCONF clients for subscription.",
      "ja": "ストリーム：イベントストリームは、サブスクリプションのためのいくつかの転送基準とNETCONFクライアントに利用可能に一致するイベント通知のセットです。"
    },
    {
      "indent": 3,
      "text": "Filter: A parameter that indicates which subset of all possible events are of interest. A filter is defined as one or more filter elements [NETCONF], each of which identifies a portion of the overall filter.",
      "ja": "フィルタ：関心のあるすべての可能なイベントのどのサブセットを示すパラメータ。フィルタは、フィルタ全体の部分を識別するそれぞれが1つ以上のフィルタ要素[NETCONF]、として定義されます。"
    },
    {
      "indent": 0,
      "text": "1.2. Motivation",
      "section_title": true,
      "ja": "1.2。動機"
    },
    {
      "indent": 3,
      "text": "The motivation for this work is to enable the sending of asynchronous messages that are consistent with the data model (content) and security model used within a NETCONF implementation.",
      "ja": "この作品のための動機は、NETCONF実装内で使用されるデータモデル（内容）とセキュリティモデルと一致している非同期メッセージの送信を可能にするためです。"
    },
    {
      "indent": 3,
      "text": "The scope of the work aims at meeting the following operational needs:",
      "ja": "仕事の範囲は、以下の運用上のニーズを満たすことを目指して："
    },
    {
      "indent": 3,
      "text": "o Initial release should ensure it supports notifications in support of configuration operations.",
      "ja": "O初期リリースでは、それが構成操作のサポートに通知をサポートして確認する必要があります。"
    },
    {
      "indent": 3,
      "text": "o It should be possible to use the same data model for notifications as for configuration operations.",
      "ja": "O設定操作用として、通知のために同じデータモデルを使用することが可能でなければなりません。"
    },
    {
      "indent": 3,
      "text": "o The solution should support a reasonable message size limit (i.e., not too short).",
      "ja": "溶液O（すなわち、あまりにも短い）妥当なメッセージサイズの制限をサポートしなければなりません。"
    },
    {
      "indent": 3,
      "text": "o The notifications should be carried over a connection-oriented delivery mechanism.",
      "ja": "O通知は、接続指向の配信機構を介して行うべきです。"
    },
    {
      "indent": 3,
      "text": "o A subscription mechanism for notifications should be provided. This takes into account that a NETCONF server does not send notifications before being asked to do so, and that it is the NETCONF client who initiates the flow of notifications.",
      "ja": "O通知にサブスクリプション機構が提供されるべきです。これは、NETCONFサーバがそうするように頼まれる前に通知を送信しないことを考慮に入れて、そしてそれは、通知の流れを開始NETCONFクライアントであること。"
    },
    {
      "indent": 3,
      "text": "o A filtering mechanism for sending notifications should be put in place within the NETCONF server.",
      "ja": "O通知を送信するためのフィルタリング機構は、NETCONFサーバ内の所定の位置に配置する必要があります。"
    },
    {
      "indent": 3,
      "text": "o The information contained in a notification should be sufficient so that it can be analyzed independent of the transport mechanism. In other words, the data content fully describes a notification; protocol information is not needed to understand a notification.",
      "ja": "それはトランスポート機構から独立して分析することができるようにO通知に含まれる情報は十分であるべきです。換言すれば、データの内容は、完全に通知を記載しています。プロトコル情報は、通知を理解することは必要ありません。"
    },
    {
      "indent": 3,
      "text": "o The server should have the capability to replay locally logged notifications.",
      "ja": "Oサーバがローカルで再生する通知をログに記録する機能を持っている必要があります。"
    },
    {
      "indent": 0,
      "text": "1.3. Event Notifications in NETCONF",
      "section_title": true,
      "ja": "1.3。 NETCONFでのイベント通知"
    },
    {
      "indent": 3,
      "text": "This memo defines a mechanism whereby the NETCONF client indicates interest in receiving event notifications from a NETCONF server by creating a subscription to receive event notifications. The NETCONF server replies to indicate whether the subscription request was successful and, if it was successful, begins sending the event notifications to the NETCONF client as the events occur within the system. These event notifications will continue to be sent until either the NETCONF session is terminated or the subscription terminates for some other reason. The event notification subscription allows a number of options to enable the NETCONF client to specify which events are of interest. These are specified when the subscription is created. Note that a subscription cannot be modified once created.",
      "ja": "このメモはNETCONFクライアントがイベントの通知を受信するためにサブスクリプションを作成することにより、NETCONFサーバからのイベントの通知を受け取ることに関心を示しせるメカニズムを定義します。 NETCONFサーバは、それが成功した場合、イベントがシステム内で発生するようNETCONFクライアントにイベント通知の送信を開始し、サブスクリプション要求が成功したかどうかを示すために、返信と。 NETCONFセッションが終了またはサブスクリプションは、他のいくつかの理由で終了されるかまで、これらのイベント通知が送信されていきます。イベント通知サブスクリプションは、オプションの数が注目されているどのイベントを指定するNETCONFクライアントを有効にすることができます。サブスクリプションが作成されると、これらが指定されています。サブスクリプションが作成され、一度に変更することができないことに注意してください。"
    },
    {
      "indent": 3,
      "text": "The NETCONF server MUST accept and process the <close-session> operation, even while the notification subscription is active. The NETCONF server MAY accept and process other commands; otherwise, they will be rejected and the server MUST send a 'resource-denied' error. A NETCONF server advertises support of the ability to process other commands via the :interleave capability.",
      "ja": "NETCONFサーバは、通知サブスクリプションがアクティブになっている間も、<クローズセッション>操作を受け入れ、処理しなければなりません。 NETCONFサーバは、他のコマンドを受け入れ、処理することができます。そうでない場合、彼らは拒否され、サーバが「リソース拒否」のエラーを送らなければなりません。インターリーブ機能：NETCONFサーバは経由して他のコマンドを処理する能力のサポートをアドバタイズします。"
    },
    {
      "indent": 0,
      "text": "2. Notification-Related Operations",
      "section_title": true,
      "ja": "2.通知関連の操作"
    },
    {
      "indent": 0,
      "text": "2.1. Subscribing to Receive Event Notifications",
      "section_title": true,
      "ja": "2.1。イベント通知を受信するためにサブスクライブ"
    },
    {
      "indent": 3,
      "text": "The event notification subscription is initiated by the NETCONF client and responded to by the NETCONF server. A subscription is bound to a single stream for the lifetime of the subscription. When the event notification subscription is created, the events of interest are specified.",
      "ja": "イベント通知サブスクリプションは、NETCONFクライアントによって開始され、NETCONFサーバによって応答されます。サブスクリプションは、サブスクリプションの有効期間のための単一のストリームにバインドされています。イベント通知サブスクリプションが作成されると、関心のイベントが指定されています。"
    },
    {
      "indent": 3,
      "text": "Content for an event notification subscription can be selected by applying user-specified filters.",
      "ja": "イベント通知予約のためのコンテンツは、ユーザーが指定したフィルタを適用することによって選択することができます。"
    },
    {
      "indent": 0,
      "text": "2.1.1. <create-subscription>",
      "section_title": true,
      "ja": "2.1.1。 <作成サブスクリプションを>"
    },
    {
      "indent": 3,
      "text": "Description:",
      "ja": "説明："
    },
    {
      "indent": 6,
      "text": "This operation initiates an event notification subscription that will send asynchronous event notifications to the initiator of the command until the subscription terminates.",
      "ja": "この操作は、サブスクリプションが終了するまで、コマンドのイニシエータに非同期イベント通知を送信するイベント通知サブスクリプションを開始します。"
    },
    {
      "indent": 3,
      "text": "Parameters:",
      "ja": "パラメーター："
    },
    {
      "indent": 6,
      "text": "Stream:",
      "ja": "ストリーム："
    },
    {
      "indent": 9,
      "text": "An optional parameter, <stream>, that indicates which stream of events is of interest. If not present, events in the default NETCONF stream will be sent.",
      "ja": "オプションのパラメータ、<ストリーム>、それが関心のあるイベントのストリームを示しています。存在しない場合は、デフォルトNETCONFストリーム内のイベントが送信されます。"
    },
    {
      "indent": 6,
      "text": "Filter:",
      "ja": "フィルタ："
    },
    {
      "indent": 9,
      "text": "An optional parameter, <filter>, that indicates which subset of all possible events is of interest. The format of this parameter is the same as that of the filter parameter in the NETCONF protocol operations. If not present, all events not precluded by other parameters will be sent. See section 3.6 for more information on filters.",
      "ja": "オプションのパラメータ、<フィルター>、それは、すべての可能なイベントのサブセットに関心があるかを示します。このパラメータの形式は、NETCONFプロトコル操作のフィルタパラメータと同じです。存在しない場合は、他のパラメータによって除外されないすべてのイベントが送信されます。フィルタの詳細については、セクション3.6を参照してください。"
    },
    {
      "indent": 6,
      "text": "Start Time:",
      "ja": "始まる時間："
    },
    {
      "indent": 9,
      "text": "A parameter, <startTime>, used to trigger the replay feature and indicate that the replay should start at the time specified. If <startTime> is not present, this is not a replay subscription. It is not valid to specify start times that are later than the current time. If the <startTime> specified is earlier than the log can support, the replay will begin with the earliest available notification. This parameter is of type dateTime and compliant to [RFC3339]. Implementations must support time zones.",
      "ja": "パラメータ、<開始時間startTime>は、再生機能をトリガするために使用され、再生が指定した時刻に開始すべきであることを示しています。 <startTimeの>が存在しない場合、これはリプレイサブスクリプションではありません。現在時刻よりも開始時間を指定することは有効ではありません。 <startTimeの>指定されたログがサポートできるよりも前である場合は、再生が早い可能な通知を開始します。このパラメータは、DateTime型で、[RFC3339]に準拠しています。実装はタイムゾーンをサポートしている必要があります。"
    },
    {
      "indent": 6,
      "text": "Stop Time:",
      "ja": "停止時間："
    },
    {
      "indent": 9,
      "text": "An optional parameter, <stopTime>, used with the optional replay feature to indicate the newest notifications of interest. If <stopTime> is not present, the notifications will continue until the subscription is terminated. Must be used with and be later than <startTime>. Values of <stopTime> in the future are valid. This parameter is of type dateTime and compliant to [RFC3339]. Implementations must support time zones.",
      "ja": "オプションのパラメータ、<時間stopTime>、興味のある最新の通知を示すために、オプションのリプレイ機能で使用。 <停止時間stopTime>が存在しない場合は、サブスクリプションが終了するまで、通知は継続されます。で使用すると、<startTimeの>よりも後にもしなければなりません。将来的には<停止時間stopTime>の値が有効です。このパラメータは、DateTime型で、[RFC3339]に準拠しています。実装はタイムゾーンをサポートしている必要があります。"
    },
    {
      "indent": 3,
      "text": "Positive Response:",
      "ja": "肯定的な反応："
    },
    {
      "indent": 6,
      "text": "If the NETCONF server can satisfy the request, the server sends an <ok> element.",
      "ja": "NETCONFサーバが要求を満たすことができる場合は、サーバーは、<OK>要素を送信します。"
    },
    {
      "indent": 3,
      "text": "Negative Response:",
      "ja": "否定応答："
    },
    {
      "indent": 6,
      "text": "An <rpc-error> element is included within the <rpc-reply> if the request cannot be completed for any reason. Subscription requests will fail if a filter with invalid syntax is provided or if the name of a non-existent stream is provided.",
      "ja": "要求が何らかの理由で完了できない場合は、<RPCエラー>要素は、<RPC-返信>内に含まれています。無効な構文を持つフィルタが用意されている場合または存在しないストリームの名前が提供された場合は、サブスクリプション要求は失敗します。"
    },
    {
      "indent": 6,
      "text": "If a <stopTime> is specified in a request without having specified a <startTime>, the following error is returned:",
      "ja": "<停止時間stopTime>が<startTimeの>を指定せずに要求に指定されている場合は、次のエラーが返されます。"
    },
    {
      "indent": 9,
      "text": "Tag: missing-element",
      "ja": "タグ：不足している要素"
    },
    {
      "indent": 9,
      "text": "Error-type: protocol",
      "ja": "エラー・タイプ：プロトコル"
    },
    {
      "indent": 9,
      "text": "Severity: error",
      "ja": "重大度：エラー"
    },
    {
      "indent": 9,
      "text": "Error-info: <bad-element>: startTime",
      "ja": "エラー情報：<悪い要素>：startTimeの"
    },
    {
      "indent": 9,
      "text": "Description: An expected element is missing.",
      "ja": "説明：必要な要素が欠落しています。"
    },
    {
      "indent": 6,
      "text": "If the optional replay feature is requested but it is not supported by the NETCONF server, the following error is returned:",
      "ja": "オプションの再生機能が要求されますが、NETCONFサーバでサポートされていない場合、次のエラーが返されます。"
    },
    {
      "indent": 9,
      "text": "Tag: operation-failed",
      "ja": "タグ：操作は、失敗しました"
    },
    {
      "indent": 9,
      "text": "Error-type: protocol",
      "ja": "エラー・タイプ：プロトコル"
    },
    {
      "indent": 9,
      "text": "Severity: error",
      "ja": "重大度：エラー"
    },
    {
      "indent": 9,
      "text": "Error-info: none",
      "ja": "エラー情報：なし"
    },
    {
      "indent": 9,
      "text": "Description: Request could not be completed because the requested operation failed for some reason not covered by any other error condition.",
      "ja": "説明：要求された操作は、他のエラー条件によってカバーされていない何らかの理由で失敗したため、要求を完了できませんでした。"
    },
    {
      "indent": 6,
      "text": "If a <stopTime> is requested that is earlier than the specified <startTime>, the following error is returned:",
      "ja": "<停止時間stopTime>が指定された<たstartTime>よりも前であることが要求される場合は、次のエラーが返されます。"
    },
    {
      "indent": 9,
      "text": "Tag: bad-element",
      "ja": "タグ：悪い要素"
    },
    {
      "indent": 9,
      "text": "Error-type: protocol",
      "ja": "エラー・タイプ：プロトコル"
    },
    {
      "indent": 9,
      "text": "Severity: error",
      "ja": "重大度：エラー"
    },
    {
      "indent": 9,
      "text": "Error-info: <bad-element>: stopTime",
      "ja": "エラー情報：<悪い要素>：時間stopTime"
    },
    {
      "indent": 9,
      "text": "Description: An element value is not correct; e.g., wrong type, out of range, pattern mismatch.",
      "ja": "説明：要素の値が正しくありません。例えば、間違った種類、範囲外、パターンが一致しません。"
    },
    {
      "indent": 6,
      "text": "If a <startTime> is requested that is later than the current time, the following error is returned:",
      "ja": "<startTimeの>は、現在時刻よりもその要求された場合、次のエラーが返されます。"
    },
    {
      "indent": 9,
      "text": "Tag: bad-element",
      "ja": "タグ：悪い要素"
    },
    {
      "indent": 9,
      "text": "Error-type: protocol",
      "ja": "エラー・タイプ：プロトコル"
    },
    {
      "indent": 9,
      "text": "Severity: error",
      "ja": "重大度：エラー"
    },
    {
      "indent": 9,
      "text": "Error-info: <bad-element>: startTime",
      "ja": "エラー情報：<悪い要素>：startTimeの"
    },
    {
      "indent": 9,
      "text": "Description: An element value is not correct; e.g., wrong type, out of range, pattern mismatch.",
      "ja": "説明：要素の値が正しくありません。例えば、間違った種類、範囲外、パターンが一致しません。"
    },
    {
      "indent": 0,
      "text": "2.1.1.1. Usage Example",
      "section_title": true,
      "ja": "2.1.1.1。使用例"
    },
    {
      "indent": 3,
      "text": "The following demonstrates creating a simple subscription. More complex examples can be found in section 5.",
      "ja": "以下は、単純なサブスクリプションを作成示しています。より複雑な例は、セクション5に見出すことができます。"
    },
    {
      "indent": 3,
      "text": "<netconf:rpc message-id=\"101\" xmlns:netconf=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <create-subscription xmlns=\"urn:ietf:params:xml:ns:netconf:notification:1.0\"> </create-subscription> </netconf:rpc>",
      "ja": "<NETCONF：RPCメッセージ-ID = \"101\" のxmlns：NETCONF = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <作成し、サブスクリプションのxmlns = \"URN：IETF：paramsは：XML：NS： NETCONF：通知：1.0\" > </作成するサブスクリプション> </ NETCONF：RPC>"
    },
    {
      "indent": 0,
      "text": "2.2. Sending Event Notifications",
      "section_title": true,
      "ja": "2.2。イベント通知を送信します"
    },
    {
      "indent": 3,
      "text": "Once the subscription has been set up, the NETCONF server sends the event notifications asynchronously over the connection.",
      "ja": "サブスクリプションが設定されたら、NETCONFサーバは、接続を介して非同期イベント通知を送信します。"
    },
    {
      "indent": 0,
      "text": "2.2.1. <notification>",
      "section_title": true,
      "ja": "2.2.1。 <お知らせ>"
    },
    {
      "indent": 3,
      "text": "Description:",
      "ja": "説明："
    },
    {
      "indent": 6,
      "text": "An event notification is sent to the client who initiated a <create-subscription> command asynchronously when an event of interest (i.e., meeting the specified filtering criteria) has occurred. An event notification is a complete and well-formed XML document. Note that <notification> is not a Remote Procedure Call (RPC) method but rather the top-level element identifying the one-way message as a notification.",
      "ja": "イベント通知は、目的のイベントが（すなわち、指定されたフィルタリング基準を満たすこと）が発生したときに非同期<作成サブスクリプション>コマンドを開始したクライアントに送信されます。イベント通知が完了し、整形式のXML文書です。 <通知>リモートプロシージャコール（RPC）メソッドむしろ通知として一方向メッセージを識別する最上位の要素ではないことに留意されたいです。"
    },
    {
      "indent": 3,
      "text": "Parameters:",
      "ja": "パラメーター："
    },
    {
      "indent": 6,
      "text": "eventTime",
      "ja": "イベント時刻"
    },
    {
      "indent": 9,
      "text": "The time the event was generated by the event source. This parameter is of type dateTime and compliant to [RFC3339]. Implementations must support time zones.",
      "ja": "時間は、イベントはイベントソースによって生成されました。このパラメータは、DateTime型で、[RFC3339]に準拠しています。実装はタイムゾーンをサポートしている必要があります。"
    },
    {
      "indent": 6,
      "text": "Also contains notification-specific tagged content, if any. With the exception of <eventTime>, the content of the notification is beyond the scope of this document.",
      "ja": "いずれの場合にも、通知固有のタグ付けされたコンテンツが含まれています。 <イベント時刻>の例外を除いて、通知の内容は、このドキュメントの範囲を超えています。"
    },
    {
      "indent": 3,
      "text": "Response:",
      "ja": "応答："
    },
    {
      "indent": 6,
      "text": "No response. Not applicable.",
      "ja": "応答なし。適用できません。"
    },
    {
      "indent": 0,
      "text": "2.3. Terminating the Subscription",
      "section_title": true,
      "ja": "2.3。契約の終了"
    },
    {
      "indent": 3,
      "text": "Closing of the event notification subscription can be done by using the <close-session> operation from the subscriptions session or terminating the NETCONF session ( <kill-session> ) or the underlying transport session from another session. If a stop time is provided when the subscription is created, the subscription will terminate after the stop time is reached. In this case, the NETCONF session will still be an active session.",
      "ja": "イベント通知予約の閉鎖は、NETCONFセッション（<キルセッション>）、または別のセッションから、基礎となるトランスポートセッションをサブスクリプション・セッションから<クローズセッション>操作を使用して、または終了することによって行うことができます。サブスクリプションが作成されたときに停止時間が提供されている場合は、停止時間に達した後、サブスクリプションは終了します。この場合、NETCONFセッションはまだアクティブなセッションになります。"
    },
    {
      "indent": 0,
      "text": "3. Supporting Concepts",
      "section_title": true,
      "ja": "3.サポートする概念"
    },
    {
      "indent": 0,
      "text": "3.1. Capabilities Exchange",
      "section_title": true,
      "ja": "3.1。機能交換"
    },
    {
      "indent": 3,
      "text": "The ability to process and send event notifications is advertised during the capability exchange between the NETCONF client and server.",
      "ja": "処理し、イベント通知を送信する機能は、NETCONFクライアントとサーバ間の能力交換中にアドバタイズされます。"
    },
    {
      "indent": 0,
      "text": "3.1.1. Capability Identifier",
      "section_title": true,
      "ja": "3.1.1。機能識別子"
    },
    {
      "indent": 3,
      "text": "\"urn:ietf:params:netconf:capability:notification:1.0\"",
      "ja": "\"URN：IETF：のparams：NETCONF：機能：通知：1.0\""
    },
    {
      "indent": 0,
      "text": "3.1.2. Capability Example",
      "section_title": true,
      "ja": "3.1.2。能力の例"
    },
    {
      "indent": 3,
      "text": "<hello xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <capabilities> <capability> urn:ietf:params:xml:ns:netconf:base:1.0 </capability> <capability> urn:ietf:params:netconf:capability:startup:1.0 </capability> <capability> urn:ietf:params:netconf:capability:notification:1.0 </capability> </capabilities> <session-id>4</session-id> </hello>",
      "ja": "<ハローのxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <機能> <機能> URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0 </機能> <機能> URN：IETF：のparams：NETCONF：機能：スタートアップ：1.0 </機能> <機能> URN：IETF：のparams：NETCONF：機能：通知：1.0 </機能> </機能> <セッションID> 4 </セッション-id> </こんにちは>"
    },
    {
      "indent": 0,
      "text": "3.2. Event Streams",
      "section_title": true,
      "ja": "3.2。イベントストリーム"
    },
    {
      "indent": 3,
      "text": "An event stream is defined as a set of event notifications matching some forwarding criteria.",
      "ja": "イベントストリームは、いくつかの転送条件に一致するイベント通知のセットとして定義されます。"
    },
    {
      "indent": 3,
      "text": "Figure 2 illustrates the notification flow and concepts identified in this document. It does not mandate and/or preclude an implementation. The following is observed from the diagram below: System components (c1..cn) generate event notifications that are passed to a central component for classification and distribution. The central component inspects each event notification and matches the event notification against the set of stream definitions. When a match occurs, the event notification is considered to be a member of that event stream (stream 1..stream n). An event notification may be part of multiple event streams.",
      "ja": "図2は、本文書で識別された通知の流れと概念を示す図です。これは、強制および/または実装を妨げるものではありません。以下は、以下の図から観察される：システム・コンポーネント（c1..cn）を分類および分配のために中心的なコンポーネントに渡されるイベント通知を生成します。中心的なコンポーネントは、各イベントの通知を検査し、ストリーム定義のセットに対するイベント通知を一致します。一致が発生したとき、イベント通知は、そのイベントストリーム（ストリーム1..streamのN）のメンバーであると考えられます。イベント通知は、複数のイベント・ストリームの一部であってもよいです。"
    },
    {
      "indent": 3,
      "text": "At some point after the NETCONF server receives the internal event from a stream, it is converted to an appropriate XML encoding by the server, and a <notification> element is ready to send to all NETCONF sessions subscribed to that stream.",
      "ja": "NETCONFサーバは、ストリームからの内部イベントを受信した後、いくつかの点で、それはサーバーによって適切なXMLエンコーディングに変換し、<通知>要素は、そのストリームに加入して、すべてのNETCONFセッションに送信する準備ができています。"
    },
    {
      "indent": 3,
      "text": "After generation of the <notification> element, access control is applied by the server. If a session does not have permission to receive the <notification>, then it is discarded for that session, and processing of the internal event is completed for that session.",
      "ja": "<通知>要素の生成後、アクセス制御サーバによって適用されます。セッションは、<通知>を受信する権限を持っていない場合、それはそのセッションのために廃棄され、内部イベントの処理は、そのセッションのために完成されています。"
    },
    {
      "indent": 3,
      "text": "When a NETCONF client subscribes to a given event stream, user-defined filter elements, if applicable, are applied to the event stream and matching event notifications are forwarded to the NETCONF server for distribution to subscribed NETCONF clients. A filter is transferred from the client to the server during the <create-subscription> operation and applied against each <notification> element generated by the stream. For more information on filtering, see Section 3.6.",
      "ja": "NETCONFクライアントが与えられたイベントストリームをサブスクライブするとき、ユーザ定義のフィルタ要素は、該当する場合、イベント・ストリームに適用され、一致するイベント通知をサブスクライブNETCONFクライアントに配布するためNETCONFサーバに転送されます。フィルタは、<作成サブスクリプション>運転中にクライアントからサーバに転送され、ストリームによって生成された各<通知>要素に対して適用されます。フィルタリングの詳細については、第3.6節を参照してください。"
    },
    {
      "indent": 3,
      "text": "A notification-logging service may also be available, in which case, the central component logs notifications. The NETCONF server may later retrieve logged notifications via the optional replay feature. For more information on replay, see section 3.3.",
      "ja": "通知ロギングサービスは、その場合には、中心的なコンポーネントは、通知をログに記録し、利用可能であってもよいです。 NETCONFサーバは、後に、オプションの再生機能を経由して記録された通知を検索することができます。リプレイの詳細については、セクション3.3を参照してください。"
    },
    {
      "indent": 3,
      "text": "+----+\n| c1 |----+             available streams\n+----+    |    +---------+\n+----+    |    |central  |-> stream 1\n| c2 |    +--->|event    |-> stream 2     filter  +-------+\n+----+    |    |processor|-> NETCONF stream ----->|NETCONF|\n ...      |    |         |-> stream n             |server |\nSystem    |    +---------+                        +-------+\nComponents|        |                                 /\\\n ...      |        |                                 ||\n+----+    |        |       (------------)            ||\n| cn |----+        |       (notification)            ||\n+----+             +-----> (  logging   )            ||\n                           (  service   )            ||\n                           (------------)            ||\n                                                     ||\n                                                     ||\n                                                     \\/\n                                                 +-------+\n                                                 |NETCONF|\n                                                 |client |\n                                                 +-------+",
      "raw": true
    },
    {
      "indent": 33,
      "text": "Figure 2",
      "ja": "図2"
    },
    {
      "indent": 0,
      "text": "3.2.1. Event Stream Definition",
      "section_title": true,
      "ja": "3.2.1。イベントストリームの定義"
    },
    {
      "indent": 3,
      "text": "Event streams are predefined on the managed device. The configuration of event streams is outside the scope of this document. However, it is envisioned that event streams are either pre-established by the vendor (pre-configured), user configurable (e.g., part of the device's configuration), or both. Device vendors may allow event stream configuration via the NETCONF protocol (i.e., <edit-config> operation).",
      "ja": "イベントストリームは、管理対象デバイス上であらかじめ定義されています。イベントストリームの構成は、この文書の範囲外です。しかし、イベントストリームであるいずれかのベンダによって予め確立されたことが想定される（事前に構成さ）、ユーザ設定（例えば、デバイスの設定の一部）、またはその両方。デバイスベンダはNETCONFプロトコル（すなわち、<編集設定>操作）を介して、イベントのストリーム構成を可能にすることができます。"
    },
    {
      "indent": 0,
      "text": "3.2.2. Event Stream Content Format",
      "section_title": true,
      "ja": "3.2.2。イベントストリームコンテンツのフォーマット"
    },
    {
      "indent": 3,
      "text": "The contents of all event streams made available to a NETCONF client (i.e., the notification sent by the NETCONF server) MUST be encoded in XML.",
      "ja": "NETCONFクライアントに利用可能となるすべてのイベントストリームの内容（すなわち、NETCONFサーバによって送信される通知）はXMLで符号化されなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.2.3. Default Event Stream",
      "section_title": true,
      "ja": "3.2.3。デフォルトイベントストリーム"
    },
    {
      "indent": 3,
      "text": "A NETCONF server implementation supporting the notification capability MUST support the \"NETCONF\" notification event stream. This stream contains all NETCONF XML event notifications supported by the NETCONF server. The exact string \"NETCONF\" is used during the advertisement of stream support during the <get> operation on <streams> and during the <create-subscription> operation. Definition of the event notifications and their contents, beyond the inclusion of <eventTime>, for this event stream is outside the scope of this document.",
      "ja": "通知機能をサポートしているNETCONFサーバの実装は、「NETCONF」通知イベント・ストリームをサポートしなければなりません。このストリームは、NETCONFサーバでサポートされているすべてのNETCONF XMLイベント通知が含まれています。正確な文字列「NETCONFは」<ストリーム>と<作成サブスクリプションを>動作中の<GET>運転中にストリームサポートの広告中に使用されます。イベント通知とその内容の定義は、<イベント時刻>を含めることを超えて、このイベントストリームは、このドキュメントの範囲外です。"
    },
    {
      "indent": 0,
      "text": "3.2.4. Event Stream Sources",
      "section_title": true,
      "ja": "3.2.4。イベントストリームソース"
    },
    {
      "indent": 3,
      "text": "With the exception of the default event stream (NETCONF), specification of additional event stream sources (e.g., Simple Network Management Protocol (SNMP), syslog) is outside the scope of this document. NETCONF server implementations may leverage any desired event stream source in the creation of supported event streams.",
      "ja": "デフォルトのイベント・ストリーム（NETCONF）を除き、追加のイベントストリームソースの仕様（例えば、簡易ネットワーク管理プロトコル（SNMP）、syslogが）、この文書の範囲外です。 NETCONFサーバ実装は、サポートされているイベントストリームの作成中に任意の所望のイベント・ストリーム・ソースを利用することができます。"
    },
    {
      "indent": 0,
      "text": "3.2.5. Event Stream Discovery",
      "section_title": true,
      "ja": "3.2.5。イベントストリームディスカバリー"
    },
    {
      "indent": 3,
      "text": "A NETCONF client retrieves the list of supported event streams from a NETCONF server using the <get> operation.",
      "ja": "NETCONFクライアントは、<GET>操作を使用して、NETCONFサーバからサポートされているイベントストリームのリストを取得します。"
    },
    {
      "indent": 0,
      "text": "3.2.5.1. Name Retrieval Using <get> Operation",
      "section_title": true,
      "ja": "3.2.5.1。 <GET>操作を用いた検索に名前を付け"
    },
    {
      "indent": 3,
      "text": "The list of available event streams is retrieved by requesting the <streams> subtree via a <get> operation. Available event streams for the requesting session are returned in the reply containing the <name> and <description> elements, where the <name> element is mandatory, and its value is unique within the scope of a NETCONF server. An empty reply is returned if there are no available event streams, due to user-specified filters on the <get> operation.",
      "ja": "使用可能なイベントストリームのリストは、<こちら>の操作を介した<ストリーム>サブツリーを要求することにより取得されます。使用可能なイベントを要求するセッションのためにストリームが、<名前>と<説明>要素を含む応答で返され、ここで、<name>要素は必須であり、その値はNETCONFサーバの範囲内でユニークです。 <GET>操作上のユーザーが指定したフィルタのために使用可能なイベントストリームは、存在しない場合は、空の応答が返されます。"
    },
    {
      "indent": 3,
      "text": "Additional information available about a stream includes whether notification replay is available and, if so, the timestamp of the earliest possible notification to replay.",
      "ja": "ストリームに関する利用可能な追加情報には、可能な限り早い通知のタイムスタンプが再生する場合は、通知のリプレイは、利用可能であるかどうかが含まれます。"
    },
    {
      "indent": 3,
      "text": "The following example shows retrieving the list of available event stream list using the <get> operation.",
      "ja": "次の例では、<GET>操作を使用して、使用可能なイベント・ストリームのリストのリストを取得表示されます。"
    },
    {
      "indent": 3,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <get> <filter type=\"subtree\"> <netconf xmlns=\"urn:ietf:params:xml:ns:netmod:notification\"> <streams/> </netconf> </filter> </get> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <GET> <フィルタタイプ= \"サブツリー\"> <NETCONFのxmlns = \"URN：IETF：paramsは：XML：NS：netmod：通知 \"> <ストリーム/> </ NETCONF> </フィルタ> </取得> </ RPC>"
    },
    {
      "indent": 3,
      "text": "The NETCONF server returns a list of event streams available for subscription: NETCONF, SNMP, and syslog-critical in this example.",
      "ja": "NETCONF、SNMP、およびsyslog-重要なこの例では：NETCONFサーバは、サブスクリプションで使用可能なイベントストリームのリストを返します。"
    },
    {
      "indent": 3,
      "text": "<rpc-reply message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <data> <netconf xmlns=\"urn:ietf:params:xml:ns:netmod:notification\"> <streams> <stream> <name>NETCONF</name> <description>default NETCONF event stream </description> <replaySupport>true</replaySupport> <replayLogCreationTime> 2007-07-08T00:00:00Z </replayLogCreationTime> </stream> <stream> <name>SNMP</name> <description>SNMP notifications</description> <replaySupport>false</replaySupport> </stream> <stream> <name>syslog-critical</name> <description>Critical and higher severity </description> <replaySupport>true</replaySupport> <replayLogCreationTime> 2007-07-01T00:00:00Z </replayLogCreationTime> </stream> </streams> </netconf> </data> </rpc-reply>",
      "ja": "<RPC返信メッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <データ> <NETCONFのxmlns = \"URN：IETF：paramsは：XML：NS：netmod ：通知 \"> <ストリーム> <ストリーム> <名前> NETCONF </名前> <説明>デフォルトNETCONFイベント・ストリーム</記述> <replaySupport>真</ replaySupport> <replayLogCreationTime> 2007-07-08T00：00：00Z < / replayLogCreationTime> </ストリーム> <ストリーム> <名前> SNMP </名前> <説明> SNMP通知</記述> <replaySupport>偽</ replaySupport> </ストリーム> <ストリーム> <名前>のsyslog-重要</名前> <説明>クリティカルより高い重大度</記述> <replaySupport>真</ replaySupport> <replayLogCreationTime> 2007-07-01T00：00：00Z </ replayLogCreationTime> </ストリーム> </ストリーム> </ NETCONF> < /データ> </ RPC返信>"
    },
    {
      "indent": 0,
      "text": "3.2.5.2. Event Stream Subscription",
      "section_title": true,
      "ja": "3.2.5.2。イベントストリームサブスクリプション"
    },
    {
      "indent": 3,
      "text": "A NETCONF client may request from the NETCONF server the list of event streams available to this session and then issue a <create-subscription> request with the desired event stream name. Omitting the event stream name from the <create-subscription> request results in subscription to the default NETCONF event stream.",
      "ja": "NETCONFクライアントは、NETCONFサーバからこのセッションで使用可能なイベントストリームのリストを要求し、目的のイベントストリームの名前で、<作成サブスクリプション>要求を発行することができます。デフォルトNETCONFイベントストリームへのサブスクリプションでは、<作成サブスクリプション>リクエストの結果から、イベント・ストリーム名を省略。"
    },
    {
      "indent": 0,
      "text": "3.2.5.2.1. Filtering Event Stream Contents",
      "section_title": true,
      "ja": "3.2.5.2.1。フィルタリングイベントストリームの内容"
    },
    {
      "indent": 3,
      "text": "The set of event notifications delivered in an event stream may be further refined by applying a user-specified filter supplied at subscription creation time ( <create-subscription> ). This is a transient filter associated with the event notification subscription and does not modify the event stream configuration. The filter element is applied against the contents of the <notification> wrapper and not the wrapper itself. See section 5 for examples. Either subtree or XPATH filtering can be used.",
      "ja": "イベントストリームで配信イベント通知のセットはさらに、サブスクリプションの作成時に供給されたユーザが指定したフィルタを適用することによって精製することができる（<作成サブスクリプション>）。これは、イベント通知のサブスクリプションに関連付けられた過渡フィルタであり、イベントストリームの設定を変更しません。フィルタ要素は、<通知>ラッパーとしないラッパー自体の内容に対して適用されます。例については、セクション5を参照してください。サブツリーまたはXPATHのフィルタリングのどちらかを使用することができます。"
    },
    {
      "indent": 3,
      "text": "XPATH support for the Notification capability is advertised as part of the normal XPATH capability advertisement. If XPATH support is advertised via the XPATH capability, then XPATH is supported for notification filtering. If this capability is not advertised, XPATH is not supported for notification filtering.",
      "ja": "通知機能のXPathのサポートは、通常のXPATH能力を広告の一部としてアドバタイズされます。 XPATHサポートがXPATH機能を経由して宣伝されている場合は、XPATHは、通知フィルタリングのためにサポートされています。この機能がアドバタイズされていない場合は、XPATHは、通知フィルタリングのためにサポートされていません。"
    },
    {
      "indent": 0,
      "text": "3.3. Notification Replay",
      "section_title": true,
      "ja": "3.3。通知リプレイ"
    },
    {
      "indent": 0,
      "text": "3.3.1. Overview",
      "section_title": true,
      "ja": "3.3.1。概要"
    },
    {
      "indent": 3,
      "text": "Replay is the ability to create an event subscription that will resend recently generated notifications, or in some cases send them for the first time to a particular NETCONF client. These notifications are sent the same way as normal notifications.",
      "ja": "リプレイは、最近発生した通知を再送信する、またはいくつかのケースでは、特定のNETCONFクライアントへの最初の時間のためにそれらを送信するイベントサブスクリプションを作成する機能です。これらの通知は、通常の通知と同じように送信されます。"
    },
    {
      "indent": 3,
      "text": "A replay of notifications is specified by including the optional <startTime> parameter to the subscription command, which indicates the start time of the replay. The end time is specified using the optional <stopTime> parameter. If not present, notifications will continue to be sent until the subscription is terminated.",
      "ja": "通知のリプレイはリプレイの開始時間を示し、サブスクリプション・コマンドのオプション<startTimeの>パラメータを含めることで指定されています。終了時刻は、オプションの<時間stopTime>パラメータを使用して指定されています。存在しない場合は、サブスクリプションが終了するまで、通知が送信されていきます。"
    },
    {
      "indent": 3,
      "text": "A notification stream that supports replay is not expected to have an unlimited supply of saved notifications available to accommodate any replay request. Clients can query <replayLogCreationTime> and <replayLogAgedTime> to learn about the availability of notifications for replay.",
      "ja": "再生をサポートしている通知ストリームは、任意の再生要求に対応するために利用できる保存された通知の無制限の供給が期待されていません。クライアントが照会することができます<replayLogCreationTime>と<replayLogAgedTime>再生のための通知の可用性について学習します。"
    },
    {
      "indent": 3,
      "text": "The actual number of stored notifications available for retrieval at any given time is a NETCONF server implementation-specific matter. Control parameters for this aspect of the feature are outside the scope of this document.",
      "ja": "任意の時点での検索のために利用可能な貯蔵された通知の実際の数は、NETCONFサーバの実装に固有の問題です。機能のこの局面のための制御パラメータは、この文書の範囲外です。"
    },
    {
      "indent": 3,
      "text": "Replay is dependent on a notification stream supporting some form of notification logging, although it puts no restrictions on the size or form of the log, or where it resides within the device. Whether or not a stream supports replay can be discovered by doing a <get> operation on the <streams> element of the Notification Management",
      "ja": "それは大きさやログの形、又はここで、デバイス内に常駐するには制限をかけないがリプレイでは、通知ログのいくつかのフォームを支持する通知ストリームに依存しています。ストリームは、再生が通知管理の<ストリーム>要素に<GET>操作を行うことによって発見することができますサポートしているか否かを"
    },
    {
      "indent": 3,
      "text": "Schema and looking at the value of the <replaySupport> object. This schema also provides the <replayLogCreationTime> element to indicate the earliest available logged notification.",
      "ja": "スキーマと<replaySupport>オブジェクトの値を見ています。このスキーマにも使用可能な最も古い記録された通知を示すために、<replayLogCreationTime>要素を提供します。"
    },
    {
      "indent": 0,
      "text": "3.3.2. Creating a Subscription with Replay",
      "section_title": true,
      "ja": "3.3.2。リプレイでのサブスクリプションを作成します"
    },
    {
      "indent": 3,
      "text": "This feature uses optional parameters to the <create-subscription> command called <startTime> and <stopTime>. <startTime> identifies the earliest date and time of interest for event notifications being replayed and also indicates that a subscription will be providing replay of notifications. Events generated before this time are not matched. <stopTime> specifies the latest date and time of interest for event notifications being replayed. If it is not present, then notifications will continue to be sent until the subscription is terminated.",
      "ja": "この機能は、<のstartTime>と呼ばれる<作成サブスクリプション>コマンドと<時間stopTime>にオプションのパラメータを使用しています。 <startTimeの>再生されて、イベント通知のための関心の最も早い日付と時刻を識別し、また、サブスクリプションは、通知のリプレイを提供することを示します。この時間より前に発生したイベントは一致していません。 <停止時間stopTime>が再生されているイベント通知のための関心の最新の日付と時刻を指定します。それが存在しない場合は、サブスクリプションが終了するまで、その通知が送信されていきます。"
    },
    {
      "indent": 3,
      "text": "Note that <startTime> and <stopTime> are associated with the time an event was generated by the event source.",
      "ja": "なお、<たstartTime>と<停止時間stopTime>イベントは、イベント・ソースによって生成された時間に関連付けられています。"
    },
    {
      "indent": 3,
      "text": "A <replayComplete> notification is sent to indicate that all of the replay notifications have been sent and must not be sent for any other reason. If this subscription has a stop time, then this session becomes a normal NETCONF session again. The NETCONF server will then accept <rpc> operations even if the server did not previously accept such operations due to lack of interleave support. In the case of a subscription without a stop time, after the <replayComplete> notification has been sent, it can be expected that any notifications generated since the start of the subscription creation will be sent, followed by notifications as they arise naturally within the system.",
      "ja": "<replayComplete>通知は、リプレイの通知のすべてが送信された、他の理由のために送られてはならないことを示すために送信されます。このサブスクリプションは、停止時間を持っている場合、このセッションは再び通常NETCONFセッションとなります。サーバが以前に起因するインターリーブサポートの欠如に、このような操作を受け入れなかった場合でも、NETCONFサーバは、<RPC>の操作を受け付けます。 <replayComplete>通知が送られた後、停止時間のないサブスクリプションの場合、彼らがシステム内で自然に発生するよう通知に続いて、サブスクリプションの作成を開始してから発生したすべての通知が送信されることを期待することができます。"
    },
    {
      "indent": 3,
      "text": "The <replayComplete> and <notificationComplete> notifications cannot be filtered out. They will always be sent on a replay subscription that specified a <startTime> and <stopTime>, respectively.",
      "ja": "<完全な再生>と<通知コンプリート>通知を除外することはできません。彼らは常に、それぞれ、<のstartTime>と<時間stopTime>を指定したリプレイサブスクリプションに送信されます。"
    },
    {
      "indent": 0,
      "text": "3.4. Notification Management Schema",
      "section_title": true,
      "ja": "3.4。通知管理スキーマ"
    },
    {
      "indent": 3,
      "text": "This Schema is used to learn about the event streams supported on the system. It also contains the definition of the <replayComplete> and <notificationComplete> notifications, which are sent to indicate that an event replay has sent all applicable notifications and that the subscription has terminated, respectively.",
      "ja": "このスキーマは、システムでサポートされているイベントストリームを学ぶために使用されます。また、イベントのリプレイが適用されるすべての通知を送信したことと、サブスクリプションは、それぞれ、終了したことを示すために送信され、<replayComplete>と<notificationComplete>通知の定義が含まれています。"
    },
    {
      "indent": 1,
      "text": "<?xml version=\"1.0\" encoding=\"UTF-8\"?> <xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:netconf=\"urn:ietf:params:xml:ns:netconf:base:1.0\" xmlns:ncEvent=\"urn:ietf:params:xml:ns:netconf:notification:1.0\" xmlns:manageEvent=\"urn:ietf:params:xml:ns:netmod:notification\" targetNamespace=\"urn:ietf:params:xml:ns:netmod:notification\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\" xml:lang=\"en\" version=\"1.0\"> <xs:annotation> <xs:documentation xml:lang=\"en\"> A schema that can be used to learn about current event streams. It also contains the replayComplete and notificationComplete notification. </xs:documentation> </xs:annotation>",
      "ja": "<XS <xmlのバージョン= \"1.0\" エンコード= \"UTF-8\"？>：スキーマのxmlns：XS = \"http://www.w3.org/2001/XMLSchema\" のxmlns：NETCONF = \"壷：IETF：のparams ：XML：NS：NETCONF：塩基：1.0\" のxmlns：ncEvent = \"URN：IETF：paramsは：XML：NS：NETCONF：通知：1.0\" のxmlns：manageEvent = \"URN：IETF：paramsは：XML：NS：netmod：通知\"のtargetNamespace =\" 壷：IETF：のparams：XML：NS：netmod：通知」のelementFormDefault = \"資格\" attributeFormDefault = \"修飾されていない\" XML：LANG = \"EN\" バージョン= \"1.0\"> <XS：注釈> <XS：ドキュメントXML：LANG =「EN」>現在のイベントストリームについて学ぶために使用することができスキーマ。また、replayCompleteとnotificationComplete通知が含まれています。 </ XS：ドキュメンテーション> </ XS：注釈>"
    },
    {
      "indent": 1,
      "text": "<xs:import namespace=\"http://www.w3.org/XML/1998/namespace\" schemaLocation=\"http://www.w3.org/2001/xml.xsd\"/> <xs:import namespace=\"urn:ietf:params:xml:ns:netconf:base:1.0\" schemaLocation=\"netconf.xsd\"/> <xs:import namespace= \"urn:ietf:params:xml:ns:netconf:notification:1.0\" schemaLocation=\"notification.xsd\"/>",
      "ja": "<XS：インポート名前空間= \"http://www.w3.org/XML/1998/namespace\" のschemaLocation = \"http://www.w3.org/2001/xml.xsd\" /> <XS：インポートの名前空間= \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\" のschemaLocation = \"netconf.xsd\" /> <XS：インポート名前空間= \"URN：IETF：paramsは：XML：NS：NETCONF：通知：1.0\" のschemaLocation = \"notification.xsd\" />"
    },
    {
      "indent": 1,
      "text": "<xs:element name=\"netconf\" type=\"manageEvent:Netconf\"/>",
      "ja": "<XS：要素名= \"NETCONF\" タイプ= \"manageEvent：NETCONF\" />"
    },
    {
      "indent": 1,
      "text": "<xs:complexType name=\"Netconf\"> <xs:sequence> <xs:element name=\"streams\" > <xs:annotation> <xs:documentation> The list of event streams supported by the system. When a query is issued, the returned set of streams is determined based on user privileges. </xs:documentation> </xs:annotation> <xs:complexType> <xs:sequence minOccurs=\"1\" maxOccurs=\"unbounded\"> <xs:element name=\"stream\"> <xs:annotation> <xs:documentation> Stream name, description, and other information. </xs:documentation> </xs:annotation> <xs:complexType> <xs:sequence>",
      "ja": "<XS：complexTypeの名前= \"NETCONF\"> <XS：シーケンス> <XS：要素名= \"ストリーム\"> <XS：注釈> <XS：ドキュメント>システムによってサポートされているイベントストリームのリスト。クエリが発行されると、ストリームの返されたセットは、ユーザーの権限に基づいて決定されます。 </ XS：ドキュメント> </ XS：注釈> <XS：complexTypeの> <XS：配列のminOccurs = \"1\" のmaxOccurs = \"無制限\"> <XS：要素名= \"ストリーム\"> <XS：注釈> <XS：ドキュメント>ストリームの名前、説明、およびその他の情報。 </ XS：ドキュメンテーション> </ XS：注釈> <XS：complexTypeの> <XS：シーケンス>"
    },
    {
      "indent": 21,
      "text": "<xs:element name=\"name\"\n        type=\"ncEvent:streamNameType\">\n   <xs:annotation>\n     <xs:documentation>\n       The name of the event stream.  If this is\n       the default NETCONF stream, this must have\n       the value \"NETCONF\".\n     </xs:documentation>\n   </xs:annotation>\n</xs:element>\n<xs:element name=\"description\"\n                    type=\"xs:string\">\n   <xs:annotation>\n     <xs:documentation>\n       A description of the event stream, including\n       such information as the type of events that\n       are sent over this stream.\n     </xs:documentation>\n   </xs:annotation>\n</xs:element>\n<xs:element name=\"replaySupport\"\n                    type=\"xs:boolean\">\n <xs:annotation>\n     <xs:documentation>\n       An indication of whether or not event replay\n       is available on this stream.\n     </xs:documentation>\n   </xs:annotation>\n</xs:element>\n<xs:element name=\"replayLogCreationTime\"\n               type=\"xs:dateTime\" minOccurs=\"0\">\n  <xs:annotation>\n    <xs:documentation>\n   The timestamp of the creation of the log\n   used to support the replay function on\n   this stream.\n   Note that this might be earlier then\n   the earliest available\n   notification in the log.  This object\n   is updated if the log resets\n   for some reason.  This\n   object MUST be present if replay is\n   supported.\n     </xs:documentation>\n   </xs:annotation>\n </xs:element>\n <xs:element name=\"replayLogAgedTime\"\n        type=\"xs:dateTime\" minOccurs=\"0\">",
      "raw": true
    },
    {
      "indent": 5,
      "text": " <xs:annotation> <xs:documentation> The timestamp of the last notification aged out of the log. This object MUST be present if replay is supported and any notifications have been aged out of the log. </xs:documentation> </xs:annotation> </xs:element> </xs:sequence> </xs:complexType> </xs:element> </xs:sequence> </xs:complexType> </xs:element> </xs:sequence> </xs:complexType>",
      "ja": "<XS：注釈> <XS：ドキュメント>ログのうち老人最後の通知のタイムスタンプ。再生がサポートされ、いずれかの通知がログの外にエージングされている場合は、このオブジェクトが存在しなければなりません。 </ XS：ドキュメント> </ XS：注釈> </ XS：要素> </ XS：配列> </ XS：complexTypeの> </ XS：要素> </ XS：配列> </ XS：complexTypeの> </ XS：要素> </ XS：シーケンス> </ XS：complexTypeの>"
    },
    {
      "indent": 5,
      "text": "<xs:complexType name=\"ReplayCompleteNotificationType\"> <xs:complexContent> <xs:extension base=\"ncEvent:NotificationContentType\"/> </xs:complexContent> </xs:complexType>",
      "ja": "<XS：complexTypeの名前= \"ReplayCompleteNotificationType\"> <XS：complexContentを> <XS：増設ベース= \"ncEvent：NotificationContentType\" /> </ XS：complexContentを> </ XS：complexTypeの>"
    },
    {
      "indent": 5,
      "text": "<xs:element name=\"replayComplete\" type=\"manageEvent:ReplayCompleteNotificationType\" substitutionGroup=\"ncEvent:notificationContent\"> <xs:annotation> <xs:documentation> This notification is sent to signal the end of a replay portion of a subscription. </xs:documentation> </xs:annotation> </xs:element>",
      "ja": "<XS：要素名= \"replayComplete\" タイプ= \"manageEvent：ReplayCompleteNotificationType\" のsubstitutionGroup = \"ncEvent：notificationContent\"> <XS：注釈> <XS：ドキュメント>この通知は、サブスクリプションの再生部分の終了を通知するために送られます。 </ XS：ドキュメンテーション> </ XS：注釈> </ XS：要素>"
    },
    {
      "indent": 5,
      "text": "<xs:complexType name=\"NotificationCompleteNotificationType\"> <xs:complexContent> <xs:extension base=\"ncEvent:NotificationContentType\"/> </xs:complexContent> </xs:complexType>",
      "ja": "<XS：complexTypeの名前= \"NotificationCompleteNotificationType\"> <XS：complexContentを> <XS：増設ベース= \"ncEvent：NotificationContentType\" /> </ XS：complexContentを> </ XS：complexTypeの>"
    },
    {
      "indent": 5,
      "text": "<xs:element name=\"notificationComplete\" type=\"manageEvent:NotificationCompleteNotificationType\" substitutionGroup=\"ncEvent:notificationContent\"> <xs:annotation> <xs:documentation> This notification is sent to signal the end of a notification subscription. It is sent in the case that stopTime was specified during the creation of the subscription. </xs:documentation> </xs:annotation> </xs:element>",
      "ja": "<XS：要素名= \"notificationComplete\" タイプ= \"manageEvent：NotificationCompleteNotificationType\" のsubstitutionGroup = \"ncEvent：notificationContent\"> <XS：注釈> <XS：ドキュメント>この通知は、通知サブスクリプションの終了を通知するために送信されます。これは、停止時間stopTimeは、サブスクリプションの作成時に指定した場合に送信されます。 </ XS：ドキュメンテーション> </ XS：注釈> </ XS：要素>"
    },
    {
      "indent": 1,
      "text": "</xs:schema>",
      "ja": "</ XS：スキーマ>"
    },
    {
      "indent": 0,
      "text": "3.5. Subscriptions Data",
      "section_title": true,
      "ja": "3.5。サブスクリプションデータ"
    },
    {
      "indent": 3,
      "text": "Subscriptions are non-persistent state information, and their lifetime is defined by their session or by the <stopTime> parameter.",
      "ja": "サブスクリプションは、非永続状態の情報であり、その寿命は、そのセッションでは<時間stopTime>パラメータによって定義されます。"
    },
    {
      "indent": 0,
      "text": "3.6. Filter Mechanics",
      "section_title": true,
      "ja": "3.6。フィルタの力学"
    },
    {
      "indent": 3,
      "text": "If a filter element is specified to look for data of a particular value, and the data item is not present within a particular event notification for its value to be checked against, the notification will be filtered out. For example, if one were to check for 'severity=critical' in a configuration event notification where this field was not supported, then the notification would be filtered out.",
      "ja": "フィルタエレメントは、特定の値のデータを検索するために指定され、データ項目が照合されるその値が特定のイベント通知内に存在しないれた場合、通知が除外されるであろう。 1は、このフィールドがサポートされていなかった、構成イベント通知内の「重要な重症度=」をチェックするようにした場合たとえば、その後、通知が除外されるだろう。"
    },
    {
      "indent": 3,
      "text": "For subtree filtering, a non-empty node set means that the filter matches. For XPath filtering, the mechanisms defined in [XPATH] should be used to convert the returned value to boolean.",
      "ja": "サブツリー・フィルタリングのための、非空のノードセットは、フィルタに一致することを意味します。 XPathのフィルタリングのために、[XPATH]で定義されたメカニズムは、ブールに戻り値を変換するために使用されるべきです。"
    },
    {
      "indent": 0,
      "text": "3.6.1. Filtering",
      "section_title": true,
      "ja": "3.6.1。フィルタリング"
    },
    {
      "indent": 3,
      "text": "Filtering is explicitly stated when the event notification subscription is created. This is specified via the 'filter' parameter. A Filter only exists as a parameter to the subscription.",
      "ja": "イベント通知サブスクリプションが作成されたときにフィルタリングを明示的に記述されます。これは、「フィルタ」パラメータで指定されています。フィルターは、サブスクリプションへのパラメータとして存在します。"
    },
    {
      "indent": 0,
      "text": "3.7. Message Flow",
      "section_title": true,
      "ja": "3.7。メッセージフロー"
    },
    {
      "indent": 3,
      "text": "The following figure depicts message flow between a NETCONF client (C) and NETCONF server (S) in order to create a subscription and begin the flow of notifications. This subscription specifies a <startTime>, so the server starts by replaying logged notifications. It is possible that many rpc/rpc-reply sequences occur before the subscription is created, but this is not depicted in the figure.",
      "ja": "次の図は、サブスクリプションを作成し、通知の流れを開始するためにNETCONFクライアント（C）と、NETCONFサーバ（S）間のメッセージフローを示しています。このサブスクリプションは、<のstartTime>を指定し、そのサーバーはログに記録された通知を再生することによって開始します。多くのRPC / RPC-応答配列はサブスクリプションが作成される前に発生するが、これは図には示されていない可能性があります。"
    },
    {
      "indent": 24,
      "text": "C                           S\n|                           |\n|  capability exchange      |\n|-------------------------->|\n|<------------------------->|\n|                           |\n|  <create-subscription>    | (startTime)\n|-------------------------->|\n|<--------------------------|\n|     <rpc-reply>           |\n|                           |\n|     <notification>        |\n|<--------------------------|\n|                           |\n|     <notification>        |\n|<--------------------------|\n|      <notification>       | (replayComplete)\n|<--------------------------|\n|                           |\n|                           |\n|                           |\n|     <notification>        |\n|<--------------------------|\n|                           |\n|                           |\n|     <notification>        |\n|<--------------------------|\n|                           |\n|                           |",
      "raw": true
    },
    {
      "indent": 33,
      "text": "Figure 3",
      "ja": "図3"
    },
    {
      "indent": 3,
      "text": "The following figure depicts message flow between a NETCONF client (C) and NETCONF server (S) in order to create a subscription and begin the flow of notifications. This subscription specified a <startTime> and <stopTime> so it starts by replaying logged notifications and then returns to be a normal command-response NETCONF session after the <replayComplete> and <notificationComplete> notifications are sent and it is available to process <rpc> requests. It is possible that many rpc/rpc-reply sequences occur before the subscription is created, but this is not depicted in the figure.",
      "ja": "次の図は、サブスクリプションを作成し、通知の流れを開始するためにNETCONFクライアント（C）と、NETCONFサーバ（S）間のメッセージフローを示しています。それが記録された通知を再生することによって開始し、<replayComplete>と<notificationComplete>通知が送信され、<RPC処理に利用可能ですされた後、通常のコマンド応答NETCONFセッションであることを返すように、このサブスクリプションは、<のstartTime>と<時間stopTime>を指定しました>要求。多くのRPC / RPC-応答配列はサブスクリプションが作成される前に発生するが、これは図には示されていない可能性があります。"
    },
    {
      "indent": 21,
      "text": "C                           S\n|                           |\n|  capability exchange      |\n|-------------------------->|\n|<------------------------->|\n|                           |\n|  <create-subscription>    | (startTime,\n|-------------------------->|  stopTime)\n|<--------------------------|\n|     <rpc-reply>           |\n|                           |\n|     <notification>        |\n|<--------------------------|\n|                           |\n|     <notification>        |\n|<--------------------------|\n|      <notification>       | (replayComplete)\n|<--------------------------|\n|      <notification>       |(notificationComplete)\n|<--------------------------|\n|                           |\n|                           |\n|                           |\n|          <rpc>            |\n|-------------------------->|\n|<--------------------------|\n|       <rpc-reply>         |\n|                           |",
      "raw": true
    },
    {
      "indent": 33,
      "text": "Figure 4",
      "ja": "図4"
    },
    {
      "indent": 0,
      "text": "4. XML Schema for Event Notifications",
      "section_title": true,
      "ja": "イベント通知のため4. XMLスキーマ"
    },
    {
      "indent": 3,
      "text": "The following [XMLSchema] defines NETCONF Event Notifications.",
      "ja": "[XMLスキーマ]以下NETCONFイベント通知を定義します。"
    },
    {
      "indent": 0,
      "text": "<?xml version=\"1.0\" encoding=\"UTF-8\"?> <xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns=\"urn:ietf:params:xml:ns:netconf:notification:1.0\" xmlns:netconf=\"urn:ietf:params:xml:ns:netconf:base:1.0\" targetNamespace= \"urn:ietf:params:xml:ns:netconf:notification:1.0\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\" xml:lang=\"en\">",
      "ja": "<？xml version = \"1.0\" エンコード= \"UTF-8\"？> <XS：スキーマのxmlns：XSの= \"http://www.w3.org/2001/XMLSchema\" のxmlns = \"壷：IETF：のparams：XML ：NS：NETCONF：通知：1.0\" のxmlns：NETCONF = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\" のtargetNamespace = \"URN：IETF：paramsは：XML：NS：NETCONF：通知：1.0\" のelementFormDefault = \"資格\" attributeFormDefault = \"修飾されていない\" XML：LANG = \"EN\">"
    },
    {
      "indent": 4,
      "text": "<!-- import standard XML definitions -->",
      "ja": "<！ - 輸入標準のXML定義 - >"
    },
    {
      "indent": 5,
      "text": "<xs:import namespace=\"http://www.w3.org/XML/1998/namespace\" schemaLocation=\"http://www.w3.org/2001/xml.xsd\"> <xs:annotation> <xs:documentation> This import accesses the xml: attribute groups for the xml:lang as declared on the error-message element. </xs:documentation> </xs:annotation> </xs:import>",
      "ja": "<XS：インポート名前空間= \"http://www.w3.org/XML/1998/namespace\" のschemaLocation = \"http://www.w3.org/2001/xml.xsd\"> <XS：注釈> <XS ：ドキュメント>このインポートは、XMLにアクセスします：XMLの属性グループ：langのエラー・メッセージの要素で宣言として。 </ XS：ドキュメンテーション> </ XS：注釈> </ XS：インポート>"
    },
    {
      "indent": 5,
      "text": "<!-- import base netconf definitions --> <xs:import namespace=\"urn:ietf:params:xml:ns:netconf:base:1.0\" schemaLocation=\"netconf.xsd\"/>",
      "ja": "<！ - 輸入ベースNETCONFの定義 - > <XS：インポートの名前空間= \"壷：IETF：のparams：XML：NS：NETCONF：ベース：1.0\" のschemaLocation = \"netconf.xsd\" />"
    },
    {
      "indent": 0,
      "text": "<!-- ************** Symmetrical Operations ********************-->",
      "ja": "<！ -  **************対称操作********************  - >"
    },
    {
      "indent": 5,
      "text": "<!-- <create-subscription> operation -->",
      "ja": "<！ -  <作成サブスクリプション>操作 - >"
    },
    {
      "indent": 4,
      "text": "<xs:complexType name=\"createSubscriptionType\"> <xs:complexContent> <xs:extension base=\"netconf:rpcOperationType\"> <xs:sequence> <xs:element name=\"stream\" type=\"streamNameType\" minOccurs=\"0\"> <xs:annotation> <xs:documentation> An optional parameter that indicates which stream of events is of interest. If not present, then events in the default NETCONF stream will be sent. </xs:documentation> </xs:annotation> </xs:element> <xs:element name=\"filter\" type=\"netconf:filterInlineType\" minOccurs=\"0\"> <xs:annotation> <xs:documentation> An optional parameter that indicates which subset of all possible events is of interest. The format of this parameter is the same as that of the filter parameter in the NETCONF protocol operations. If not present, all events not precluded by other parameters will be sent.",
      "ja": "<XS：complexTypeの名前= \"createSubscriptionType\"> <XS：complexContentを> <XS：増設ベース= \"NETCONF：rpcOperationType\"> <XS：配列> <XS：要素名= \"ストリーム\" タイプ= \"streamNameType\" のminOccurs = \"0 「> <XS：注釈> <XS：ドキュメント>興味のあるイベントのどの流れを示すオプションのパラメータ。存在しない場合、デフォルトNETCONFストリーム内のイベントが送信されます。 </ XS：ドキュメント> </ XS：注釈> </ XS：要素> <XS：要素名= \"フィルタ\" タイプ= \"NETCONF：filterInlineType\" のminOccurs = \"0\"> <XS：注釈> <XS：ドキュメント>すべての可能なイベントのどのサブセットを示すオプションのパラメータが重要です。このパラメータの形式は、NETCONFプロトコル操作のフィルタパラメータと同じです。存在しない場合は、他のパラメータによって除外されないすべてのイベントが送信されます。"
    },
    {
      "indent": 4,
      "text": " </xs:documentation> </xs:annotation> </xs:element> <xs:element name=\"startTime\" type=\"xs:dateTime\" minOccurs=\"0\" > <xs:annotation> <xs:documentation> A parameter used to trigger the replay feature indicating that the replay should start at the time specified. If start time is not present, this is not a replay subscription. </xs:documentation> </xs:annotation> </xs:element> <xs:element name=\"stopTime\" type=\"xs:dateTime\" minOccurs=\"0\" > <xs:annotation> <xs:documentation> An optional parameter used with the optional replay feature to indicate the newest notifications of interest. If stop time is not present, the notifications will continue until the subscription is terminated. Must be used with startTime. </xs:documentation> </xs:annotation> </xs:element> </xs:sequence> </xs:extension> </xs:complexContent> </xs:complexType> <xs:simpleType name=\"streamNameType\"> <xs:annotation> <xs:documentation> The name of an event stream. </xs:documentation> </xs:annotation> <xs:restriction base=\"xs:string\"/> </xs:simpleType>",
      "ja": "</ XS：ドキュメント> </ XS：注釈> </ XS：要素> <XS：要素名= \"のstartTime\" タイプ= \"XS：dateTimeの\" minOccurs属性= \"0\"> <XS：注釈> <XS：ドキュメント>パラメータは、再生が指定した時刻に開始すべきことを示す再生機能をトリガーするために使用されます。開始時間が存在しない場合、これはリプレイサブスクリプションではありません。 </ XS：ドキュメント> </ XS：注釈> </ XS：要素> <XS：要素名= \"停止時間stopTime\" タイプ= \"XS：dateTimeの\" minOccurs属性= \"0\"> <XS：注釈> <XS：ドキュメント>興味のある最新の通知を示すために、オプションのリプレイ機能で使用されるオプションのパラメータ。停止時間が存在しない場合、サブスクリプションが終了するまで、通知は継続されます。たstartTimeと一緒に使用する必要があります。 </ XS：ドキュメンテーション> </ XS：注釈> </ XS：要素> </ XS：シーケンス> </ XS：拡張> </ XS：complexContentを> </ XS：complexTypeの> <XS：単純型名= \"streamNameType 「> <XS：注釈> <XS：ドキュメント>イベント・ストリームの名前。 </ XS：ドキュメント> </ XS：注釈> <XS：制限ベース= \"XS：文字列\" /> </ XS：simpleTypeの>"
    },
    {
      "indent": 4,
      "text": "<xs:element name=\"create-subscription\" type=\"createSubscriptionType\" substitutionGroup=\"netconf:rpcOperation\"> <xs:annotation> <xs:documentation> The command to create a notification subscription. It takes as argument the name of the notification stream and filter. Both of those options limit the content of the subscription. In addition, there are two time-related parameters, startTime and stopTime, which can be used to select the time interval of interest to the notification replay feature. </xs:documentation> </xs:annotation> </xs:element>",
      "ja": "<XS：要素名= \"作成サブスクリプションを\" タイプ= \"createSubscriptionType\" のsubstitutionGroup = \"NETCONF：rpcOperation\"> <XS：注釈> <XS：ドキュメント>通知サブスクリプションを作成するコマンド。これは、引数として通知ストリームとフィルタの名前を取ります。これらのオプションのどちらも、サブスクリプションの内容を制限します。また、通知の再生機能に関心のある時間間隔を選択するために使用することができる2つの時間関連パラメータ、のstartTimeと停止時間stopTimeがあります。 </ XS：ドキュメンテーション> </ XS：注釈> </ XS：要素>"
    },
    {
      "indent": 0,
      "text": "<!-- ************** One-way Operations ******************-->",
      "ja": "<！ -  **************片道操作******************  - >"
    },
    {
      "indent": 5,
      "text": "<!-- <Notification> operation -->\n<xs:complexType name=\"NotificationContentType\"/>",
      "raw": true
    },
    {
      "indent": 4,
      "text": "<xs:element name=\"notificationContent\" type=\"NotificationContentType\" abstract=\"true\"/>",
      "ja": "<XS：要素名= \"notificationContent\" タイプ= \"NotificationContentType\" 抽象= \"真\" />"
    },
    {
      "indent": 4,
      "text": "<xs:complexType name=\"NotificationType\"> <xs:sequence> <xs:element name=\"eventTime\" type=\"xs:dateTime\"> <xs:annotation> <xs:documentation> The time the event was generated by the event source. </xs:documentation> </xs:annotation> </xs:element> <xs:element ref=\"notificationContent\"/> </xs:sequence> </xs:complexType>",
      "ja": "<XS：complexTypeの名前は= \"NotificationTypeを\"> <XS：シーケンス> <XS：要素名= \"イベント時刻\" タイプ= \"XS：dateTimeの\"> <XS：注釈> <XS：ドキュメント>イベントによって生成された時刻イベント・ソース。 </ XS：ドキュメント> </ XS：注釈> </ XS：要素> <XS：要素REF = \"notificationContent\" /> </ XS：配列> </ XS：complexTypeの>"
    },
    {
      "indent": 2,
      "text": " <xs:element name=\"notification\" type=\"NotificationType\"/> </xs:schema>",
      "ja": "<XS：要素名= \"通知\" タイプ= \"NotificationTypeを\" /> </ XS：スキーマ>"
    },
    {
      "indent": 0,
      "text": "5. Filtering Examples",
      "section_title": true,
      "ja": "5.フィルタリングの例"
    },
    {
      "indent": 3,
      "text": "The following section provides examples to illustrate the various methods of filtering content on an event notification subscription.",
      "ja": "次のセクションでは、イベント通知予約にフィルタリングコンテンツの様々な方法を説明するための例を提供します。"
    },
    {
      "indent": 3,
      "text": "In order to illustrate the use of filter expressions, it is necessary to assume some of the event notification content. The examples below assume that the event notification schema definition has an <event> element at the top level consisting of the event class (e.g., fault, state, config), reporting entity, and either severity or operational state.",
      "ja": "フィルタ式の使用を示すためには、イベント通知の内容の一部を想定する必要があります。以下の例は、イベント通知のスキーマ定義は、トップイベントクラスからなるレベル（例えば、障害、状態、設定）、エンティティを報告し、重症度または作動状態のどちらかで<イベント>要素を有していると仮定する。"
    },
    {
      "indent": 3,
      "text": "Examples in this section are generated from the following fictional Schema.",
      "ja": "このセクションの例は、以下の架空のスキーマから生成されます。"
    },
    {
      "indent": 3,
      "text": "<?xml version=\"1.0\" encoding=\"UTF-8\"?> <xs:schema targetNamespace=\"http://example.com/event/1.0\" xmlns=\"http://example.com/event/1.0\" elementFormDefault=\"qualified\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:ncEvent=\"urn:ietf:params:xml:ns:netconf:notification:1.0\">",
      "ja": "<？xml version = \"1.0\" エンコード= \"UTF-8\"？> <XS：スキーマのtargetNamespace = \"http://example.com/event/1.0\" のxmlns = \"http://example.com/event/1.0 \"のelementFormDefault =\" 資格」のxmlns：XS = \"http://www.w3.org/2001/XMLSchema\" のxmlns：ncEventは= \"壷：IETF：のparams：XML：NS：NETCONF：通知：1.0\">"
    },
    {
      "indent": 7,
      "text": "<xs:import namespace=\n    \"urn:ietf:params:xml:ns:netconf:notification:1.0\"\n    schemaLocation=\"notification.xsd\"/>",
      "raw": true
    },
    {
      "indent": 7,
      "text": "<xs:complexType name=\"eventType\"> <xs:complexContent> <xs:extension base=\"ncEvent:NotificationContentType\"> <xs:sequence> <xs:element name=\"eventClass\" /> <xs:element name=\"reportingEntity\"> <xs:complexType> <xs:sequence> <xs:any namespace=\"##any\" processContents=\"lax\"/> </xs:sequence> </xs:complexType> </xs:element> <xs:choice> <xs:element name=\"severity\"/> <xs:element name=\"operState\"/> </xs:choice> </xs:sequence> </xs:extension> </xs:complexContent> </xs:complexType>",
      "ja": "<XS：complexTypeの名前= \"のeventType\"> <XS：complexContentを> <XS：拡張ベース= \"ncEvent：NotificationContentType\"> <XS：配列> <XS：要素名= \"eventClass\" /> <XS：要素名=」 reportingEntity \"> <XS：complexTypeの> <XS：シーケンス> <XS：任意の名前空間=\" ##あらゆる」のprocessContents = \"緩い\" /> </ XS：シーケンス> </ XS：complexTypeの> </ XS：要素> < XS：選択> <XS：要素名= \"重要度\" /> <XS：要素名= \"operState\" /> </ XS：選択> </ XS：シーケンス> </ XS：拡張> </ XS：complexContentを> </ XS：complexTypeの>"
    },
    {
      "indent": 7,
      "text": "<xs:element name=\"event\" type=\"eventType\" substitutionGroup=\"ncEvent:notificationContent\"/>",
      "ja": "<XS：要素名= \"イベント\" タイプ= \"のeventType\" のsubstitutionGroup = \"ncEvent：notificationContent\" />"
    },
    {
      "indent": 3,
      "text": "</xs:schema>",
      "ja": "</ XS：スキーマ>"
    },
    {
      "indent": 3,
      "text": "The above fictional notification definition could result in the following sample notification list, which is used in the examples in this section.",
      "ja": "上記架空通知定義は、このセクションの例で使用される次のサンプル通知リスト、をもたらし得ます。"
    },
    {
      "indent": 3,
      "text": "<notification xmlns=\"urn:ietf:params:xml:ns:netconf:notification:1.0\"> <eventTime>2007-07-08T00:01:00Z</eventTime> <event xmlns=\"http://example.com/event/1.0\"> <eventClass>fault</eventClass> <reportingEntity> <card>Ethernet0</card> </reportingEntity> <severity>major</severity> </event> </notification>",
      "ja": "<通知のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：通知：1.0\"> <イベント時刻> 2007-07-08T00：01：00Z </イベント時刻> <イベントのxmlns = \"http://example.com /event/1.0\" > <eventClass>障害</ eventClass> <reportingEntity> <カード> Ethernet0に</カード> </ reportingEntity> <重要度>主要</重症度> </イベント> </通知>"
    },
    {
      "indent": 3,
      "text": "<notification xmlns=\"urn:ietf:params:xml:ns:netconf:notification:1.0\"> <eventTime>2007-07-08T00:02:00Z</eventTime> <event xmlns=\"http://example.com/event/1.0\"> <eventClass>fault</eventClass> <reportingEntity> <card>Ethernet2</card> </reportingEntity> <severity>critical</severity> </event> </notification>",
      "ja": "<通知のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：通知：1.0\"> <イベント時刻> 2007-07-08T00：02：00Z </イベント時刻> <イベントのxmlns = \"http://example.com /event/1.0\" > <eventClass>障害</ eventClass> <reportingEntity> <カード>イーサネット2 </カード> </ reportingEntity> <重要度>重要</重症度> </イベント> </通知>"
    },
    {
      "indent": 3,
      "text": "<notification xmlns=\"urn:ietf:params:xml:ns:netconf:notification:1.0\"> <eventTime>2007-07-08T00:04:00Z</eventTime> <event xmlns=\"http://example.com/event/1.0\"> <eventClass>fault</eventClass> <reportingEntity> <card>ATM1</card> </reportingEntity> <severity>minor</severity> </event> </notification>",
      "ja": "<通知のxmlns = \"壷：IETF：のparams：XML：NS：NETCONF：通知：1.0\"> <イベント時刻> 2007-07-08T00：04：00Z </イベント時刻> <イベントのxmlns = \"http://example.com /event/1.0\" > <eventClass>障害</ eventClass> <reportingEntity> <カード> ATM1 </カード> </ reportingEntity> <重要度>マイナー</重症度> </イベント> </通知>"
    },
    {
      "indent": 3,
      "text": "<notification xmlns=\"urn:ietf:params:xml:ns:netconf:notification:1.0\"> <eventTime>2007-07-08T00:10:00Z</eventTime> <event xmlns=\"http://example.com/event/1.0\"> <eventClass>state</eventClass> <reportingEntity> <card>Ethernet0</card> </reportingEntity> <operState>enabled</operState> </event> </notification>",
      "ja": "<通知のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：通知：1.0\"> <イベント時刻> 2007-07-08T00：10：00Z </イベント時刻> <イベントのxmlns = \"http://example.com /event/1.0\" > <eventClass>状態</ eventClass> <reportingEntity> <カード> Ethernet0に</カード> </ reportingEntity> <operState> </ operState> </イベント> </通知>有効"
    },
    {
      "indent": 0,
      "text": "5.1. Subtree Filtering",
      "section_title": true,
      "ja": "5.1。サブツリーのフィルタリング"
    },
    {
      "indent": 3,
      "text": "XML subtree filtering is not well-suited for creating elaborate filter definitions given that it only supports equality comparisons and application of the logical OR operators (e.g., in an event subtree, give me all event notifications that have severity=critical, severity=major, or severity=minor). Nevertheless, it may be used for defining simple event notification forwarding filters as shown below.",
      "ja": "XMLサブツリーフィルタリングは、私の重症度=重要、重大度=主要なを持っているすべてのイベント通知を与え、それが唯一のイベントサブツリーで、例えば（等価比較および論理OR演算子のアプリケーションをサポートしていることを与えられた精巧なフィルタ定義を作成するために非常に適していませんまたは重症度=マイナー）。それにもかかわらず、以下に示すように単純なイベント通知転送フィルタを定義するために使用することができます。"
    },
    {
      "indent": 3,
      "text": "The following example illustrates how to select fault events which have severities of critical, major, or minor. The filtering criteria evaluation is as follows:",
      "ja": "次の例では、クリティカル、メジャー、またはマイナーの重大度を持っている障害イベントを選択する方法を示しています。次のようにフィルタリング基準の評価は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "((fault & severity=critical) | (fault & severity=major) | (fault & severity=minor))",
      "ja": "（（障害＆重大度=）重要| =（障害＆重症度メジャー）|）（障害＆重大度=マイナー）"
    },
    {
      "indent": 8,
      "text": "<netconf:rpc netconf:message-id=\"101\"\n        xmlns:netconf=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n  <create-subscription\n      xmlns=\"urn:ietf:params:xml:ns:netconf:notification:1.0\">\n    <filter netconf:type=\"subtree\">\n      <event xmlns=\"http://example.com/event/1.0\">\n        <eventClass>fault</eventClass>\n        <severity>critical</severity>\n      </event>\n      <event xmlns=\"http://example.com/event/1.0\">\n        <eventClass>fault</eventClass>\n        <severity>major</severity>\n      </event>\n      <event xmlns=\"http://example.com/event/1.0\">\n        <eventClass>fault</eventClass>\n        <severity>minor</severity>\n      </event>\n    </filter>\n  </create-subscription>\n</netconf:rpc>",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The following example illustrates how to select state or config EventClasses or fault events that are related to card Ethernet0. The filtering criteria evaluation is as follows:",
      "ja": "次の例では、状態や設定EventClassesまたはカードをEthernet0に関連する障害イベントを選択する方法を示しています。次のようにフィルタリング基準の評価は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "( state | config | ( fault & ( card=Ethernet0)))",
      "ja": "（状態|設定|（障害＆（カード= Ethernet0の）））"
    },
    {
      "indent": 0,
      "text": "<netconf:rpc netconf:message-id=\"101\" xmlns:netconf=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <create-subscription xmlns=\"urn:ietf:params:xml:ns:netconf:notification:1.0\"> <filter netconf:type=\"subtree\"> <event xmlns=\"http://example.com/event/1.0\"> <eventClass>state</eventClass> </event> <event xmlns=\"http://example.com/event/1.0\"> <eventClass>config</eventClass> </event> <event xmlns=\"http://example.com/event/1.0\"> <eventClass>fault</eventClass> <reportingEntity> <card>Ethernet0</card> </reportingEntity> </event> </filter> </create-subscription> </netconf:rpc>",
      "ja": "<NETCONF：RPCのNETCONF：メッセージID = \"101\" のxmlns：NETCONF = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <作成し、サブスクリプションのxmlns = \"URN：IETF：paramsは：XML： NS：NETCONF：通知：1.0 \"> <フィルタNETCONF：タイプ=\" サブツリー \"> <イベントのxmlns =\" http://example.com/event/1.0\" > <eventClass>状態</ eventClass> </イベント> <イベントのxmlns = \"http://example.com/event/1.0\"> <eventClass>設定</ eventClass> </イベント> <イベントのxmlns = \"http://example.com/event/1.0\"> <eventClass>障害</ eventClass> <reportingEntity> <カード> Ethernet0に</カード> </ reportingEntity> </イベント> </フィルタ> </作成するサブスクリプション> </ NETCONF：RPC>"
    },
    {
      "indent": 0,
      "text": "5.2. XPATH Filters",
      "section_title": true,
      "ja": "5.2。 XPATHフィルター"
    },
    {
      "indent": 3,
      "text": "The following [XPATH] example illustrates how to select fault EventClass notifications that have severities of critical, major, or minor. The filtering criteria evaluation is as follows:",
      "ja": "以下の[XPATH]の例では、クリティカル、メジャー、またはマイナーの重大度を持つ障害EventClass通知を選択する方法を示しています。次のようにフィルタリング基準の評価は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "((fault) & ((severity=critical) | (severity=major) | (severity = minor)))",
      "ja": "（（障害）＆（（重大度=クリティカル）|（重大度=メジャー）|（重大度=マイナー）））"
    },
    {
      "indent": 6,
      "text": "<netconf:rpc netconf:message-id=\"101\" xmlns:netconf=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <create-subscription xmlns=\"urn:ietf:params:xml:ns:netconf:notification:1.0\"> <filter netconf:type=\"xpath\" xmlns:ex=\"http://example.com/event/1.0\" select=\"/ex:event[ex:eventClass='fault' and (ex:severity='minor' or ex:severity='major' or ex:severity='critical')]\"/> </create-subscription> </netconf:rpc>",
      "ja": "<NETCONF：RPCのNETCONF：メッセージID = \"101\" のxmlns：NETCONF = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <作成し、サブスクリプションのxmlns = \"URN：IETF：paramsは：XML： NS：NETCONF：通知：1.0 \"> <フィルタNETCONF：タイプ=\" のxpath \"のxmlns：EX = \"http://example.com/event/1.0\" を選択=\" / EX：イベント[例：eventClass = '障害'そして、（例：重大度= 'マイナー' または例：重大度= 'メジャー' またはex：重大度= '重要'）] \"/> </作成するサブスクリプション> </ NETCONF：RPC>"
    },
    {
      "indent": 3,
      "text": "The following example illustrates how to select state and config EventClasses or fault events of any severity that come from card Ethernet0. The filtering criteria evaluation is as follows:",
      "ja": "次の例では、状態と設定EventClassesまたはカードをEthernet0から来るあらゆる重症度の障害イベントを選択する方法を示しています。次のようにフィルタリング基準の評価は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "( state | config | (fault & card=Ethernet0))",
      "ja": "（状態|設定|（障害＆カード=をEthernet0））"
    },
    {
      "indent": 5,
      "text": "<netconf:rpc message-id=\"101\" xmlns:netconf=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <create-subscription xmlns=\"urn:ietf:params:xml:ns:netconf:notification:1.0\"> <filter netconf:type=\"xpath\" xmlns:ex=\"http://example.com/event/1.0\" select=\"/ex:event[ (ex:eventClass='state' or ex:eventClass='config') or ((ex:eventClass='fault' and ex:card='Ethernet0'))]\"/> </create-subscription> </netconf:rpc>",
      "ja": "<NETCONF：RPCメッセージ-ID = \"101\" のxmlns：NETCONF = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <作成し、サブスクリプションのxmlns = \"URN：IETF：paramsは：XML：NS： NETCONF：通知：1.0 \"> <フィルタNETCONF：タイプ=\" のXPath \"のxmlns：EX = \"http://example.com/event/1.0\" を選択=\" / EX：イベント[（例：eventClass = '状態' または例：eventClass = '設定'）または（（例：eventClass = '障害' と例：カード= 'をEthernet0'））] \"/> </作成するサブスクリプション> </ NETCONF：RPC>"
    },
    {
      "indent": 0,
      "text": "6. Interleave Capability",
      "section_title": true,
      "ja": "6.インターリーブ機能"
    },
    {
      "indent": 0,
      "text": "6.1. Description",
      "section_title": true,
      "ja": "6.1。説明"
    },
    {
      "indent": 3,
      "text": "The :interleave capability indicates that the NETCONF peer supports the ability to interleave other NETCONF operations within a notification subscription. This means the NETCONF server MUST receive, process, and respond to NETCONF requests on a session with an active notification subscription. This capability helps scalability by reducing the total number of NETCONF sessions required by a given operator or management application.",
      "ja": "：インターリーブ機能は、NETCONFピアが通知サブスクリプション内の他のNETCONFオペレーションをインターリーブする機能をサポートしていることを示しています。これは、NETCONFサーバは、プロセスを受信し、アクティブな通知サブスクリプションとのセッションにNETCONF要求に応答しなければならないことを意味します。この機能は、特定のオペレータや管理アプリケーションで必要とされるNETCONFセッションの合計数を減らすことで、スケーラビリティを支援します。"
    },
    {
      "indent": 0,
      "text": "6.2. Dependencies",
      "section_title": true,
      "ja": "6.2。依存関係"
    },
    {
      "indent": 3,
      "text": "This capability is dependent on the notification capability being supported.",
      "ja": "この機能はサポートされている通知機能に依存しています。"
    },
    {
      "indent": 0,
      "text": "6.3. Capability Identifier",
      "section_title": true,
      "ja": "6.3。機能識別子"
    },
    {
      "indent": 3,
      "text": "The :interleave capability is identified by the following capability string:",
      "ja": "：インターリーブ機能は、以下の機能文字列によって識別されます。"
    },
    {
      "indent": 3,
      "text": "urn:ietf:params:netconf:capability:interleave:1.0",
      "ja": "URN：IETF：のparams：NETCONF：機能：インターリーブ：1.0"
    },
    {
      "indent": 0,
      "text": "6.4. New Operations",
      "section_title": true,
      "ja": "6.4。新事業"
    },
    {
      "indent": 3,
      "text": "None.",
      "ja": "無し。"
    },
    {
      "indent": 0,
      "text": "6.5. Modifications to Existing Operations",
      "section_title": true,
      "ja": "6.5。既存事業への変更"
    },
    {
      "indent": 3,
      "text": "When a <create-subscription> is sent while another subscription is active on that session, the following error will be returned:",
      "ja": "別のサブスクリプションは、そのセッションでアクティブになっている間、<作成サブスクリプション>を送信されると、次のエラーが返されます。"
    },
    {
      "indent": 6,
      "text": "Tag: operation-failed",
      "ja": "タグ：操作は、失敗しました"
    },
    {
      "indent": 6,
      "text": "Error-type: protocol",
      "ja": "エラー・タイプ：プロトコル"
    },
    {
      "indent": 6,
      "text": "Severity: error",
      "ja": "重大度：エラー"
    },
    {
      "indent": 6,
      "text": "Error-info: none",
      "ja": "エラー情報：なし"
    },
    {
      "indent": 6,
      "text": "Description: Request could not be completed because the requested operation failed for some reason not covered by any other error condition.",
      "ja": "説明：要求された操作は、他のエラー条件によってカバーされていない何らかの理由で失敗したため、要求を完了できませんでした。"
    },
    {
      "indent": 0,
      "text": "7. Security Considerations",
      "section_title": true,
      "ja": "7.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "The security considerations from the base [NETCONF] document also apply to the Notification capability.",
      "ja": "ベース[NETCONF]文書からのセキュリティの考慮事項も通知機能に適用されます。"
    },
    {
      "indent": 3,
      "text": "The access control framework and the choice of transport will have a major impact on the security of the solution.",
      "ja": "アクセス制御フレームワークと輸送の選択は、ソリューションのセキュリティに大きな影響を持つことになります。"
    },
    {
      "indent": 3,
      "text": "The <notification> elements are never sent before the transport layer and the NETCONF layer, including capabilities exchange, have been established and the manager has been identified and authenticated.",
      "ja": "<通知>要素は、機能交換を含む、トランスポート層とNETCONF層の前に送信されることはありません確立されており、管理者が特定され、認証されています。"
    },
    {
      "indent": 3,
      "text": "It is recommended that care be taken to secure execution:",
      "ja": "注意が実行を確保するために取られることをお勧めします。"
    },
    {
      "indent": 3,
      "text": "o <create-subscription> invocation",
      "ja": "O <作成、サブスクリプション>呼び出し"
    },
    {
      "indent": 3,
      "text": "o <get> on read-only data models",
      "ja": "O <GET>読み取り専用のデータモデルに"
    },
    {
      "indent": 3,
      "text": "o <notification> content",
      "ja": "O <お知らせ>コンテンツ"
    },
    {
      "indent": 3,
      "text": "Secure execution means ensuring that a secure transport is used as well as ensuring that the user has sufficient authorization to perform the function they are requesting against the specific subset of NETCONF content involved. When a <get> is received that refers to the content defined in this memo, clients should only be able to view the content for which they have sufficient privileges. A create <create-subscription> operation can be considered like a deferred",
      "ja": "安全な実行は、安全な輸送は、ユーザが、彼らが関与NETCONFコンテンツの特定のサブセットに対して要求される機能を実行するための十分な権限を有することを確実と同様に使用されることを保証することを意味します。 <GET>は、このメモで定義されたコンテンツを参照する受信されると、クライアントは、彼らが十分な権限を持っているコンテンツを視聴することができるはずです。 A <作成サブスクリプションを>操作が延期のように考えることができるの作成"
    },
    {
      "indent": 3,
      "text": "<get>, and the content that different users can access may vary. This different access is reflected in the <notification> that different users are able to subscribe to.",
      "ja": "<GET>、およびさまざまなユーザーがアクセスできるコンテンツは変更される場合があります。この異なるアクセスは、異なるユーザーが購読することができること<通知>に反映されています。"
    },
    {
      "indent": 3,
      "text": "One potential security issue is the transport of data from non-NETCONF streams, such as syslog and SNMP. This data may be more vulnerable (or less vulnerable) when being transported over NETCONF than when being transported using the protocol normally used for transporting it, depending on the security credentials of the two subsystems. The NETCONF server is responsible for applying access control to stream content.",
      "ja": "一つの潜在的なセキュリティ問題がsyslogやSNMPなどの非NETCONFストリームからのデータの輸送です。このデータは、通常、2つのサブシステムのセキュリティ証明書に応じて、それを輸送するために使用されるプロトコルを使用して搬送されるときよりもNETCONF上に搬送されるときに、より脆弱（以下脆弱性）であってもよいです。 NETCONFサーバは、ストリームコンテンツへのアクセス制御を適用するための責任があります。"
    },
    {
      "indent": 3,
      "text": "The contents of notifications, as well as the names of event streams, may contain sensitive information and care should be taken to ensure that they are viewed only by authorized users. The NETCONF server MUST NOT include any content in a notification that the user is not authorized to view.",
      "ja": "通知の内容だけでなく、イベントストリームの名前は、機密情報を含む場合があり、注意が彼らは唯一許可されたユーザーによって閲覧されることを保証するために取られるべきです。 NETCONFサーバは、ユーザが閲覧を許可されていない通知のいずれかの内容を含んではいけません。"
    },
    {
      "indent": 3,
      "text": "If a subscription is created with a <stopTime>, the NETCONF session will return to being a normal command-response NETCONF session when the replay is completed. It is the responsibility of the NETCONF client to close this session when it is no longer of use.",
      "ja": "サブスクリプションが<停止時間stopTime>を使用して作成されている場合は、NETCONFセッションは再生が完了すると、通常のコマンド応答NETCONFセッションであることに戻ります。使用のもはやないとき、このセッションを閉じるには、NETCONFクライアントの責任です。"
    },
    {
      "indent": 3,
      "text": "If a malicious or buggy NETCONF client sends a number of <create-subscription> requests, then these subscriptions accumulate and may use up system resources. In such a situation, subscriptions can be terminated by terminating the suspect underlying NETCONF sessions using the <kill-session> operation.",
      "ja": "悪意のあるまたはバギーNETCONFクライアントは、<作成サブスクリプション>要求の数を送信した場合、これらのサブスクリプションを蓄積し、システムリソースを使用することができます。このような状況では、サブスクリプションは、<セッションを殺す>操作を使用して、疑わしい根本NETCONFセッションを終了することによって終了することができます。"
    },
    {
      "indent": 0,
      "text": "8. IANA Considerations",
      "section_title": true,
      "ja": "8. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "This document registers three URIs for the NETCONF XML namespace in the IETF XML registry [RFC3688].",
      "ja": "この文書は、IETF XMLレジストリ[RFC3688]でNETCONFのXML名前空間のための3つのURIを登録します。"
    },
    {
      "indent": 3,
      "text": "Following the format in RFC 3688, IANA has made the following registration. Note that the capability URNs are also compliant to section 10.3 of [NETCONF].",
      "ja": "RFC 3688でのフォーマットに続いて、IANAは、以下の登録をしました。機能壺も[NETCONF]のセクション10.3に準拠していることに注意してください。"
    },
    {
      "indent": 3,
      "text": "+--------------------+----------------------------------------------+\n| Index              | Capability Identifier                        |\n+--------------------+----------------------------------------------+\n| :notification      | urn:ietf:params:netconf:capability:          |\n|                    | notification:1.0                             |\n|                    |                                              |\n| :interleave        | urn:ietf:params:netconf:capability:          |\n|                    | interleave:1.0                               |\n+--------------------+----------------------------------------------+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "URI: urn:ietf:params:xml:ns:netmod:notification",
      "ja": "URI：URN：IETF：のparams：XML：NS：netmod：通知"
    },
    {
      "indent": 3,
      "text": "URI: urn:ietf:params:xml:ns:netconf:notification:1.0",
      "ja": "URI：URN：IETF：のparams：XML：NS：NETCONF：通知：1.0"
    },
    {
      "indent": 3,
      "text": "Registrant Contact: The IESG.",
      "ja": "登録者連絡先：IESG。"
    },
    {
      "indent": 3,
      "text": "XML: N/A, the requested URI is an XML namespace.",
      "ja": "XML：N / Aは、要求されたURIは、XML名前空間があります。"
    },
    {
      "indent": 3,
      "text": "In addition, IANA registered the XML Schema defined in Section 4.",
      "ja": "また、IANAはセクション4で定義されたXMLスキーマを登録しました。"
    },
    {
      "indent": 0,
      "text": "9. Acknowledgements",
      "section_title": true,
      "ja": "9.謝辞"
    },
    {
      "indent": 3,
      "text": "Thanks to Gilbert Gagnon, Greg Wilbur, and Kim Curran for providing their input into the early work on this document. In addition, the editors would like to acknowledge input at the Vancouver editing session from the following people: Orly Nicklass, James Balestriere, Yoshifumi Atarashi, Glenn Waters, Alexander Clemm, Dave Harrington, Dave Partain, Ray Atarashi, David Perkins, and the following additional people from the Montreal editing session: Balazs Lengyel, Phil Shafer, Rob Enns, Andy Bierman, Dan Romascanu, Bert Wijnen, Simon Leinen, Juergen Schoenwaelder, Hideki Okita, Vincent Cridlig, Martin Bjorklund, Olivier Festor, Radu State, Brian Trammell, and William Chow. We would also like to thank Li Yan for his numerous reviews, as well as Suresh Krishnan for his gen-art review of the document.",
      "ja": "このドキュメントの初期の作品に彼らの入力を提供するためのギルバート・ガニオン、グレッグ・ウィルバー、そしてキム・カランに感謝します。また、編集者は次の方々からバンクーバーの編集セッションで入力を確認したいと思います：オルリーNicklass、ジェームズBalestriere、義文Atarashi、グレン・ウォーターズ、アレクサンダーClemm、デイブ・ハリントン、デイブパーテイン、レイAtarashi、デビッド・パーキンス、および以下のモントリオールの編集セッションからの追加的な人々：バラージュLengyel、フィル・シェーファー、ロブエンス、アンディBierman、ダンRomascanu、バートWijnen、サイモンLeinen、ユルゲンSchoenwaelder、英樹沖田、ヴィンセントCridlig、マーティンBjorklund、オリヴィエFestor、ラドゥ州、ブライアン・トラメル、そしてウィリアム・チョウ。また、文書の彼の世代技術の審査のために彼の数多くのレビューのための李ヤン、同様のSureshクリシュナンに感謝したいと思います。"
    },
    {
      "indent": 0,
      "text": "10. Normative References",
      "section_title": true,
      "ja": "10.引用規格"
    },
    {
      "indent": 3,
      "text": "[NETCONF] Enns, R., Ed., \"NETCONF Configuration Protocol\", RFC 4741, December 2006.",
      "ja": "[NETCONF]エンス、R.、エド。、 \"NETCONF構成プロトコル\"、RFC 4741、2006年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC3339] Klyne, G., Ed. and C. Newman, \"Date and Time on the Internet: Timestamps\", RFC 3339, July 2002.",
      "ja": "[RFC3339] Klyne、G.、エド。そして、C.ニューマン、「インターネット上の日付と時刻：タイムスタンプ」、RFC 3339、2002年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC3688] Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688, January 2004.",
      "ja": "[RFC3688] Mealling、M.、 \"IETF XMLレジストリ\"、BCP 81、RFC 3688、2004年1月。"
    },
    {
      "indent": 3,
      "text": "[XML] World Wide Web Consortium, \"Extensible Markup Language (XML) 1.0\", W3C XML, February 1998, <http://www.w3.org/TR/1998/REC-xml-19980210>.",
      "ja": "[XML]ワールド・ワイド・ウェブ・コンソーシアム、 \"拡張マークアップ言語（XML）1.0\"、W3C XML、1998年2月、<http://www.w3.org/TR/1998/REC-xml-19980210>。"
    },
    {
      "indent": 3,
      "text": "[XMLSchema] Thompson, H., Beech, D., Maloney, M., and N. Mendelsohn, \"XML Schema Part 1: Structures Second Edition\", W3C http ://www.w3.org/TR/2004/REC-xmlschema-1-20041028/ structures.html, October 2004.",
      "ja": "[XMLスキーマ]トンプソン、H.、ブナ、D.、マロニー、M.、およびN.メンデルゾーン、 \"XMLスキーマパート1：構造第二版\"、W3Cのhttp：//www.w3.org/TR/2004/REC -xmlschema-1-20041028 / structures.html、2004年10月。"
    },
    {
      "indent": 3,
      "text": "[XPATH] Clark, J. and S. DeRose, \"XML Path Language (XPath) Version 1.0\", W3C http://www.w3.org/TR/1999/REC-xpath-19991116, November 1999.",
      "ja": "[XPATH]クラーク、J.とS. DeRose、 \"XMLパス言語（XPath）バージョン1.0\"、W3C http://www.w3.org/TR/1999/REC-xpath-19991116、1999年11月。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Sharon Chisholm Nortel 3500 Carling Ave Nepean, Ontario K2H 8E9 Canada",
      "ja": "シャロン・チザムノーテル3500カーリングアベニューオタワ、オンタリオK2H 8E9カナダ"
    },
    {
      "indent": 3,
      "text": "EMail: schishol@nortel.com",
      "ja": "メールアドレス：schishol@nortel.com"
    },
    {
      "indent": 3,
      "text": "Hector Trevino Cisco Suite 400 9155 E. Nichols Ave Englewood, CO 80112 USA",
      "ja": "ヘクタートレビノシスコスイート400 9155 E.ニコルズアベニューイングルウッド、CO 80112 USA"
    },
    {
      "indent": 3,
      "text": "EMail: htrevino@cisco.com",
      "ja": "メールアドレス：htrevino@cisco.com"
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The IETF Trust (2008).",
      "ja": "著作権（C）IETFトラスト（2008）。"
    },
    {
      "indent": 3,
      "text": "This document is subject to the rights, licenses and restrictions contained in BCP 78, and except as set forth therein, the authors retain all their rights.",
      "ja": "この文書では、BCP 78に含まれる権利と許可と制限の適用を受けており、その中の記載を除いて、作者は彼らのすべての権利を保有します。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein are provided on an \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書とここに含まれている情報は、基礎とCONTRIBUTOR「そのまま」、ORGANIZATION HE / SHEが表すまたはインターネットSOCIETY、（もしあれば）を後援し、IETF TRUST ANDインターネットエンジニアリングタスクフォース放棄ALLに設けられています。保証は、明示または黙示、この情報の利用および特定目的に対する権利または商品性または適合性の黙示の保証を侵害しない任意の保証がこれらに限定されません。"
    },
    {
      "indent": 0,
      "text": "Intellectual Property",
      "ja": "知的財産"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any Intellectual Property Rights or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; nor does it represent that it has made any independent effort to identify any such rights. Information on the procedures with respect to rights in RFC documents can be found in BCP 78 and BCP 79.",
      "ja": "IETFは、本書またはそのような権限下で、ライセンスがたりないかもしれない程度に記載された技術の実装や使用に関係すると主張される可能性があります任意の知的財産権やその他の権利の有効性または範囲に関していかなる位置を取りません利用可能です。またそれは、それがどのような権利を確認する独自の取り組みを行ったことを示すものでもありません。 RFC文書の権利に関する手続きの情報は、BCP 78およびBCP 79に記載されています。"
    },
    {
      "indent": 3,
      "text": "Copies of IPR disclosures made to the IETF Secretariat and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the IETF on-line IPR repository at http://www.ietf.org/ipr.",
      "ja": "IPRの開示のコピーが利用できるようにIETF事務局とライセンスの保証に行われた、または本仕様の実装者または利用者がそのような所有権の使用のための一般的なライセンスまたは許可を取得するために作られた試みの結果を得ることができますhttp://www.ietf.org/iprのIETFのオンラインIPRリポジトリから。"
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights that may cover technology that may be required to implement this standard. Please address the information to the IETF at ietf-ipr@ietf.org.",
      "ja": "IETFは、その注意にこの標準を実装するために必要とされる技術をカバーすることができる任意の著作権、特許または特許出願、またはその他の所有権を持ってすべての利害関係者を招待します。 ietf-ipr@ietf.orgのIETFに情報を記述してください。"
    }
  ]
}