{
  "title": {
    "text": "RFC 5833 - Control and Provisioning of Wireless Access Points (CAPWAP) Protocol Base MIB",
    "ja": "RFC 5833 - ワイヤレスアクセスポイントの管理およびプロビジョニング（CAPWAP）プロトコルベースMIB"
  },
  "number": 5833,
  "created_at": "2019-10-29 14:07:06.503559+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                       Y. Shi, Ed.\nRequest for Comments: 5833                  Hangzhou H3C Tech. Co., Ltd.\nCategory: Informational                                  D. Perkins, Ed.\nISSN: 2070-1721                                          C. Elliott, Ed.",
      "raw": true
    },
    {
      "indent": 58,
      "text": " Y. Zhang, Ed.\nFortinet, Inc.\n      May 2010",
      "raw": true
    },
    {
      "indent": 2,
      "text": "Control and Provisioning of Wireless Access Points (CAPWAP) Protocol Base MIB",
      "ja": "ワイヤレスアクセスポイントの管理およびプロビジョニング（CAPWAP）プロトコルベースMIB"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This memo defines a portion of the Management Information Base (MIB) for use with network management protocols. In particular, it describes the managed objects for modeling the Control And Provisioning of Wireless Access Points (CAPWAP) Protocol. This MIB module is presented as a basis for future work on the SNMP management of the CAPWAP protocol.",
      "ja": "このメモはネットワーク管理プロトコルと共に使用するための管理情報ベース（MIB）の一部を画定します。特に、ワ​​イヤレスアクセスポイント（CAPWAP）プロトコルの制御とプロビジョニングをモデル化するための管理オブジェクトについて説明します。このMIBモジュールはCAPWAPプロトコルのSNMP管理に関する今後の作業の基礎として提示されます。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for informational purposes.",
      "ja": "このドキュメントはインターネット標準化過程仕様ではありません。それは、情報提供の目的のために公開されています。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Not all documents approved by the IESG are a candidate for any level of Internet Standard; see Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。 IESGによって承認されていないすべての文書がインターネットStandardのどんなレベルの候補です。 RFC 5741のセクション2を参照してください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc5833.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc5833で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2010 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2010 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3\n2.  The Internet-Standard Management Framework . . . . . . . . . .  3\n3.  Terminology  . . . . . . . . . . . . . . . . . . . . . . . . .  3\n4.  Conventions  . . . . . . . . . . . . . . . . . . . . . . . . .  4\n5.  Overview . . . . . . . . . . . . . . . . . . . . . . . . . . .  5\n  5.1.  Requirements and Constraints . . . . . . . . . . . . . . .  5\n  5.2.  Wireless Binding MIB Modules . . . . . . . . . . . . . . .  5\n  5.3.  Design Objectives  . . . . . . . . . . . . . . . . . . . .  5\n  5.4.  Design Idea  . . . . . . . . . . . . . . . . . . . . . . .  6\n  5.5.  Mechanism of Reusing Wireless Binding MIB Modules  . . . .  6\n  5.6.  CAPWAP Protocol Wireless Binding MIB Module  . . . . . . .  7\n  5.7.  WTP Profile  . . . . . . . . . . . . . . . . . . . . . . .  7\n6.  Structure of the MIB Module  . . . . . . . . . . . . . . . . .  8\n7.  Relationship to Other MIB Modules  . . . . . . . . . . . . . .  9\n  7.1.  Relationship to SNMPv2-MIB Module  . . . . . . . . . . . .  9\n  7.2.  Relationship to IF-MIB Module  . . . . . . . . . . . . . .  9\n  7.3.  Relationship to ENTITY-MIB Module  . . . . . . . . . . . . 10\n  7.4.  Relationship to Wireless Binding MIB Modules . . . . . . . 10\n  7.5.  MIB Modules Required for IMPORTS . . . . . . . . . . . . . 10\n8.  Example of CAPWAP-BASE-MIB Module Usage  . . . . . . . . . . . 10\n9.  Definitions  . . . . . . . . . . . . . . . . . . . . . . . . . 14\n10. Security Considerations  . . . . . . . . . . . . . . . . . . . 69\n11. IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 70\n  11.1. IANA Considerations for CAPWAP-BASE-MIB Module . . . . . . 70\n  11.2. IANA Considerations for ifType . . . . . . . . . . . . . . 70\n12. Contributors . . . . . . . . . . . . . . . . . . . . . . . . . 70\n13. Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . 71\n14. References . . . . . . . . . . . . . . . . . . . . . . . . . . 71\n  14.1. Normative References . . . . . . . . . . . . . . . . . . . 71\n  14.2. Informative References . . . . . . . . . . . . . . . . . . 72",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "The CAPWAP Protocol [RFC5415] defines a standard, interoperable protocol, which enables an Access Controller (AC) to manage a collection of Wireless Termination Points (WTPs).",
      "ja": "CAPWAPプロトコル[RFC5415]はワイヤレス終端ポイント（WTPs）のコレクションを管理するためにアクセスコントローラ（AC）を可能にする標準的な、相互運用可能なプロトコルを定義します。"
    },
    {
      "indent": 3,
      "text": "This document defines a MIB module that can be used to manage the CAPWAP implementations. This MIB module covers both configuration and WTP status-monitoring aspects of CAPWAP, and provides a way to reuse MIB modules for any wireless technology. It presented as a basis for future work on a SNMP management of the CAPWAP protocol.",
      "ja": "この文書では、CAPWAP実装を管理するために使用することができるMIBモジュールを定義します。このMIBモジュールは構成やCAPWAPのWTP状態監視側面の両方をカバーし、任意の無線技術のためのMIBモジュールを再利用する方法を提供します。これは、CAPWAPプロトコルのSNMP管理に関する今後の作業の基礎として提示しました。"
    },
    {
      "indent": 0,
      "text": "2. The Internet-Standard Management Framework",
      "section_title": true,
      "ja": "2.インターネット標準管理フレームワーク"
    },
    {
      "indent": 3,
      "text": "For a detailed overview of the documents that describe the current Internet-Standard Management Framework, please refer to section 7 of RFC 3410 [RFC3410].",
      "ja": "現在のインターネット標準の管理フレームワークを記述したドキュメントの詳細な概要については、RFC 3410 [RFC3410]のセクション7を参照してください。"
    },
    {
      "indent": 3,
      "text": "Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB. MIB objects are generally accessed through the Simple Network Management Protocol (SNMP). Objects in the MIB are defined using the mechanisms defined in the Structure of Management Information (SMI). This memo specifies a MIB module that is compliant to the SMIv2, which is described in STD 58, RFC 2578 [RFC2578], STD 58, RFC 2579 [RFC2579], and STD 58, RFC 2580 [RFC2580].",
      "ja": "管理対象オブジェクトが仮想情報店を介してアクセスされ、管理情報ベースまたはMIBと呼ばれます。 MIBオブジェクトは、一般的に簡易ネットワーク管理プロトコル（SNMP）を介してアクセスされます。 MIBのオブジェクトは、管理情報（SMI）の構造で定義されたメカニズムを使用して定義されています。このメモは、STD 58、RFC 2578 [RFC2578]、STD 58、RFC 2579 [RFC2579]に記載されているのSMIv2、およびSTD 58、RFC 2580 [RFC2580]に準拠しているMIBモジュールを指定します。"
    },
    {
      "indent": 0,
      "text": "3. Terminology",
      "section_title": true,
      "ja": "3.用語"
    },
    {
      "indent": 3,
      "text": "This document uses terminology from the CAPWAP Protocol specification [RFC5415] and the Architecture Taxonomy for CAPWAP [RFC4118].",
      "ja": "この文書では、CAPWAPプロトコル仕様[RFC5415]やCAPWAPのためのアーキテクチャの分類[RFC4118]から用語を使用しています。"
    },
    {
      "indent": 3,
      "text": "Access Controller (AC): The network entity that provides WTP access to the network infrastructure in the data plane, control plane, management plane, or a combination therein.",
      "ja": "アクセスコントローラ（AC）：データプレーン、制御プレーン、管理プレーン、またはその中の組み合わせたネットワークインフラストラクチャにWTPへのアクセスを提供するネットワークエンティティ。"
    },
    {
      "indent": 3,
      "text": "Wireless Termination Point (WTP): The physical or network entity that contains an radio frequency (RF) antenna and wireless physical layer (PHY) to transmit and receive station traffic for wireless access networks.",
      "ja": "無線終端ポイント（WTP）：無線アクセス・ネットワークのためのステーショントラフィックを送受信するための無線周波数（RF）アンテナと無線物理層（PHY）を含有する物理的又はネットワークエンティティ。"
    },
    {
      "indent": 3,
      "text": "Control And Provisioning of Wireless Access Points (CAPWAP): It is a generic protocol defining AC and WTP control and data plane communication via a CAPWAP protocol transport mechanism. CAPWAP control messages, and optionally CAPWAP data messages, are secured using Datagram Transport Layer Security (DTLS) [RFC4347].",
      "ja": "制御およびワイヤレスアクセスポイントのプロビジョニング（CAPWAP）：これは、CAPWAPプロトコルトランスポート機構を介してACとWTP制御及びデータプレーンの通信を定義する一般的なプロトコルです。 CAPWAP制御メッセージ、および必要に応じてCAPWAPデータ・メッセージは、データグラムトランスポート層セキュリティ（DTLS）[RFC4347]を使用して固定されています。"
    },
    {
      "indent": 3,
      "text": "CAPWAP Control Channel: A bi-directional flow defined by the AC IP Address, WTP IP Address, AC control port, WTP control port, and the transport-layer protocol (UDP or UDP-Lite) over which CAPWAP control packets are sent and received.",
      "ja": "CAPWAP制御チャネル：CAPWAP制御パケットが送受信されるにわたってAC IPアドレス、WTP IPアドレス、AC制御ポート、WTP制御ポート、およびトランスポート層プロトコル（UDPまたはUDP-Liteの）によって定義された双方向フロー。"
    },
    {
      "indent": 3,
      "text": "CAPWAP Data Channel: A bi-directional flow defined by the AC IP Address, WTP IP Address, AC data port, WTP data port, and the transport-layer protocol (UDP or UDP-Lite) over which CAPWAP data packets are sent and received.",
      "ja": "CAPWAPデータチャネル：CAPWAPデータパケットが送信され、受信されるにわたってAC IPアドレス、WTP IPアドレス、ACデータポート、WTPデータポート、およびトランスポート層プロトコル（UDPまたはUDP-Liteの）によって定義された双方向フロー。"
    },
    {
      "indent": 3,
      "text": "Station (STA): A device that contains an interface to a wireless medium (WM).",
      "ja": "ステーション（STA）：無線媒体（WM）へのインターフェースを含むデバイス。"
    },
    {
      "indent": 3,
      "text": "Split and Local MAC: The CAPWAP protocol supports two modes of operation: Split and Local MAC (medium access control). In Split MAC mode, all Layer 2 wireless data and management frames are encapsulated via the CAPWAP protocol and exchanged between the AC and the WTPs. The Local MAC mode allows the data frames to be either locally bridged or tunneled as 802.3 frames.",
      "ja": "分割およびローカルMAC：スプリットとローカルMAC（媒体アクセス制御）：CAPWAPプロトコルは、2つの動作モードをサポートしています。スプリットMACモードでは、すべてのレイヤ2無線データ及び管理フレームは、CAPWAPプロトコルを介してカプセル化され、ACとWTPs間で交換しました。ローカルMACモードは、データ・フレームは、ローカルブリッジまたは802.3フレームとしてトンネリングできます。"
    },
    {
      "indent": 3,
      "text": "Wireless Binding: The CAPWAP protocol is independent of a specific WTP radio technology, as well its associated wireless link-layer protocol. Elements of the CAPWAP protocol are designed to accommodate the specific needs of each wireless technology in a standard way. Implementation of the CAPWAP protocol for a particular wireless technology MUST define a binding protocol for it, e.g., the binding for IEEE 802.11, provided in [RFC5416].",
      "ja": "無線バインディング：CAPWAPプロトコルは、特定のWTPの無線技術とは無関係である、ならびにそれに関連する無線リンク層プロトコル。 CAPWAPプロトコルの要素は、標準的な方法で、各無線技術の特定のニーズに対応するように設計されています。特定の無線技術のCAPWAPプロトコルの実装は、[RFC5416]に設けられ、IEEE 802.11のための結合、例えば、それのためにバインディング・プロトコルを定義しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Autonomous Wireless Local Area Network (WLAN) Architecture: It is the traditional autonomous WLAN architecture, in which each WTP is a single physical device that implements all the wireless services.",
      "ja": "自律型ワイヤレスローカルエリアネットワーク（WLAN）アーキテクチャ：それは、各WTPは、すべての無線サービスを実装して単一の物理デバイスである、伝統的な自律WLANアーキテクチャです。"
    },
    {
      "indent": 3,
      "text": "Centralized WLAN Architecture: It is an emerging hierarchical architecture utilizing one or more centralized controllers for managing a large number of WTP devices. It can be said that the full wireless functions are implemented across multiple physical network devices, namely, the WTPs and ACs.",
      "ja": "中央集中型WLANアーキテクチャ：それはWTPの多数のデバイスを管理するための1つのまたは複数の集中コントローラを利用新興階層アーキテクチャです。完全な無線機能は、複数の物理ネットワークデバイス、すなわち、WTPsおよびACSにわたって実装されているといえます。"
    },
    {
      "indent": 0,
      "text": "4. Conventions",
      "section_title": true,
      "ja": "4.表記"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119 [RFC2119].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はありますRFC 2119 [RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "5. Overview",
      "section_title": true,
      "ja": "5.概要"
    },
    {
      "indent": 0,
      "text": "5.1. Requirements and Constraints",
      "section_title": true,
      "ja": "5.1。要件と制約"
    },
    {
      "indent": 3,
      "text": "The CAPWAP Protocol MIB module (CAPWAP-BASE-MIB) is designed to:",
      "ja": "CAPWAPプロトコルMIBモジュール（CAPWAP-BASE-MIB）をするように設計されています。"
    },
    {
      "indent": 3,
      "text": "- Support centralized management and monitoring of WTPs from the AC in combination with the CAPWAP protocol;",
      "ja": " -  CAPWAPプロトコルとの組み合わせでサポート集中管理とACからWTPsのモニタリング。"
    },
    {
      "indent": 3,
      "text": "- Allow operators to make configurations for WTPs before and after they connect to the AC;",
      "ja": " - 彼らはACに接続する前と後の事業者がWTPsための設定を行うことができ、"
    },
    {
      "indent": 3,
      "text": "- Support querying of CAPWAP protocol parameters;",
      "ja": " -  CAPWAPプロトコルパラメータのサポートクエリ。"
    },
    {
      "indent": 3,
      "text": "- Support displaying of WTPs' current states and configurations;",
      "ja": " -  WTPsの現在の状態や構成の表示をサポート。"
    },
    {
      "indent": 3,
      "text": "- Provide basic property information about the AC, WTPs, radios, and stations, and their relationships;",
      "ja": " -  AC、WTPs、ラジオ、およびステーション、およびそれらの関係についての基本的なプロパティ情報を提供します。"
    },
    {
      "indent": 3,
      "text": "- Provide counters for events on WTPs and radios such as reboot and hardware failure;",
      "ja": " -  WTPsや、リブートやハードウェア障害などの無線のイベントのカウンタを提供します。"
    },
    {
      "indent": 3,
      "text": "- Provide various notifications such as channel up and join failure.",
      "ja": " - そのようなチャネルなどの各種通知を提供し、障害が参加。"
    },
    {
      "indent": 0,
      "text": "5.2. Wireless Binding MIB Modules",
      "section_title": true,
      "ja": "5.2。 MIBモジュールのバインドワイヤレス"
    },
    {
      "indent": 3,
      "text": "Other Standards Development Organizations (SDOs), such as IEEE, have already defined MIB modules for a specific wireless technology, e.g., IEEE 802.11 MIB module [IEEE.802-11.2007]. Such MIB modules are called wireless binding MIB modules.",
      "ja": "例えばIEEEなどの他の規格開発組織（のSDO）は、既に例えば、IEEE 802.11 MIBモジュール[IEEE.802-11.2007]、特定の無線技術のためのMIBモジュールを定義しています。このようなMIBモジュールはMIBモジュールを結合無線と呼ばれています。"
    },
    {
      "indent": 0,
      "text": "5.3. Design Objectives",
      "section_title": true,
      "ja": "5.3。設計目標"
    },
    {
      "indent": 3,
      "text": "This document introduces a mechanism to avoid redefining MIB objects in the existing MIB modules for a specific wireless technology, in other words, a mechanism to reuse wireless binding MIB modules defined by other SDOs.",
      "ja": "この文書は、言い換えれば、他のSDOによって定義された無線結合MIBモジュールを再利用するためのメカニズムを特定の無線技術のための既存のMIBモジュールでMIBオブジェクトを再定義しないようにする仕組みを導入しています。"
    },
    {
      "indent": 3,
      "text": "In summary, the CAPWAP-BASE-MIB module has the following design objectives:",
      "ja": "要約すると、CAPWAP-BASE-MIBモジュールは、次の設計目標を持っています："
    },
    {
      "indent": 3,
      "text": "- To implement an architecture that uses SNMP for the management and control of wireless networks, and answering the operator's requirements for centralized management, whatever the wireless devices are configured and deployed (centralized, autonomous, or some mix);",
      "ja": " - ワイヤレスネットワークの管理および制御のためにSNMPを使用していますアーキテクチャ、および集中管理のためのオペレータの要求に答えを実装するには、どのような無線デバイスは、（集中自律的、またはいくつかのミックス）に構成して展開されています。"
    },
    {
      "indent": 3,
      "text": "- To be consistent with the CAPWAP protocol;",
      "ja": " -  CAPWAPプロトコルと一致することを特徴とします。"
    },
    {
      "indent": 3,
      "text": "- To be independent of any wireless technologies and be able to reuse wireless binding MIB modules defined by other SDOs;",
      "ja": " - 任意の無線技術とは無関係であること及びその他のSDOによって定義された無線結合MIBモジュールを再利用できるようにすること。"
    },
    {
      "indent": 3,
      "text": "- To enable interoperability between vendors;",
      "ja": " - ベンダー間の相互運用性を有効にするには、"
    },
    {
      "indent": 3,
      "text": "- To meet the management requirements for the centralized WLAN architecture.",
      "ja": " - 集中型のWLANアーキテクチャの管理要件を満たすために。"
    },
    {
      "indent": 0,
      "text": "5.4. Design Idea",
      "section_title": true,
      "ja": "5.4。デザインのアイデア"
    },
    {
      "indent": 3,
      "text": "The basic design idea of the CAPWAP-BASE-MIB module is:",
      "ja": "CAPWAP-BASE-MIBモジュールの基本的なデザインのアイデアは、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "- The SNMP agent MUST be run on the AC devices and is not REQUIRED on the WTP devices. It follows the same model as the CAPWAP protocol: Centralized Control.",
      "ja": " -  SNMPエージェントは、ACデバイス上で実行する必要があり、WTPのデバイス上で必要とされていません。集中制御：それはCAPWAPプロトコルと同じモデルに従います。"
    },
    {
      "indent": 3,
      "text": "- It is designed to accommodate the specific needs of each wireless technology in a standard way. It is independent of any wireless technologies.",
      "ja": " - 標準的な方法で、各無線技術の特定のニーズに対応するように設計されています。これは、任意の無線技術とは無関係です。"
    },
    {
      "indent": 3,
      "text": "- The ifIndex [RFC2863] is used as a common index for corresponding interfaces in the CAPWAP-BASE-MIB and the MIB modules of specific wireless technologies.",
      "ja": " -  ifIndexの[RFC2863]は、特定の無線技術のCAPWAP-BASE-MIBおよびMIBモジュールの対応するインターフェイスのための共通の指標として使用されます。"
    },
    {
      "indent": 3,
      "text": "- The operator could manage and control the centralized WLAN architectures using multiple MIB modules defined by multiple SDOs, while keeping them loosely coupled.",
      "ja": " - 疎結合それらを維持しながら、オペレータは、複数のSDOによって定義された複数のMIBモジュールを使用して集中型WLANアーキテクチャを管理し、制御することができます。"
    },
    {
      "indent": 0,
      "text": "5.5. Mechanism of Reusing Wireless Binding MIB Modules",
      "section_title": true,
      "ja": "5.5。 MIBモジュールのバインド再利用ワイヤレスのメカニズム"
    },
    {
      "indent": 3,
      "text": "For any wireless technology, the configuration and management of radios are very important. As usual, wireless binding MIB modules support radio management on their own. For example, the MIB tables such as the dot11OperationTable [IEEE.802-11.2007] are able to support WTP radio configuration. These tables use the ifIndex as the index, and work well under autonomous WLAN architecture.",
      "ja": "任意の無線技術のために、無線の設定と管理は非常に重要です。いつものように、無線結合MIBモジュールは、独自に無線管理をサポートしています。例えば、そのようなdot11OperationTable [IEEE.802-11.2007]としてMIBテーブルはWTP無線構成をサポートすることができます。これらのテーブルには、インデックスとしてのifIndexを使用し、自律WLANアーキテクチャの下でうまく機能します。"
    },
    {
      "indent": 3,
      "text": "To reuse such wireless binding MIB modules is very important to centralized WLAN architectures. According to [RFC5415], a specific PHY radio could be identified by the combination of the identifiers of the WTP and radio (WTP ID + Radio ID), so the key point is to make use of the ifIndex idea and find a way to maintain the mappings between 'WTP ID + radio ID' and the ifIndex. As a generic mechanism, an ifIndex can identify an interface in an abstract way, and it does NOT care for the interface's PHY location (either on the WTP or AC). The AC can have WTP Virtual Radio Interfaces to logically represent PHY radios on the WTP. From the operator's perspective, it appears that PHY radios are located on the AC, and the PHY location of the",
      "ja": "このような無線結合MIBモジュールを再利用するには、集中型のWLANアーキテクチャにとって非常に重要です。 [RFC5415]によれば、特定のPHY無線はWTPと無線（WTP ID +ラジオID）の識別子の組み合わせによって同定することができるので、重要な点は、ifIndexのアイデアを利用し、維持するための方法を見つけることです「WTPのID +ラジオID」とifIndexの間のマッピング。一般的なメカニズムとして、ifIndexが抽象的にインタフェースを識別することができ、そしてそれはインターフェースのPHYの位置について（WTPまたはACのいずれか）気にしません。 ACは、論理的にWTPのPHYラジオを表現するためにWTP仮想ラジオのインターフェイスを持つことができます。オペレータの観点からは、PHYラジオがAC上に配置されているように見える、とのPHY場所"
    },
    {
      "indent": 3,
      "text": "WTP (radio) is hidden. The operator can operate radios through MIB tables with the ifIndex of a WTP Virtual Radio Interface. As a type of abstract interface, the WTP Virtual Radio Interface could be used by any wireless technology such as IEEE 802.11 and 802.16. The capwapBaseWirelessBindingTable in the CAPWAP-BASE-MIB module is used to store the mappings between the 'WTP ID + Radio ID' and the ifIndex.",
      "ja": "WTP（ラジオ）が隠されています。オペレータは、WTP仮想無線インターフェイスのifIndexの持つMIBテーブルを通じてラジオを操作することができます。抽象インタフェースの種類としては、WTP仮想無線インターフェイスは、IEEE 802.11や802.16など任意の無線技術によって使用することができます。 CAPWAP-BASE-MIBモジュールでcapwapBaseWirelessBindingTable「はWTP ID +ラジオID」とifIndexの間のマッピングを格納するために使用されます。"
    },
    {
      "indent": 0,
      "text": "5.6. CAPWAP Protocol Wireless Binding MIB Module",
      "section_title": true,
      "ja": "5.6。 CAPWAPプロトコルワイヤレスMIBモジュールのバインド"
    },
    {
      "indent": 3,
      "text": "According to the CAPWAP Protocol specification [RFC5415], when defining a binding for wireless technologies, the authors MUST include any necessary definitions for technology-specific messages and all technology-specific message elements for those messages. A CAPWAP binding protocol is required for a specific wireless binding technology, e.g., the protocol of [RFC5416] for IEEE 802.11 binding.",
      "ja": "無線技術のバインディングを定義するときにCAPWAPプロトコル仕様[RFC5415]によると、著者らは、技術固有のメッセージのために必要な定義およびそれらのメッセージのためのすべての技術固有のメッセージ要素を含まなければなりません。 CAPWAPプロトコルバインディングは、例えば、特定の無線結合技術は、IEEE 802.11の結合のために[RFC5416]のプロトコルが必要です。"
    },
    {
      "indent": 3,
      "text": "Sometimes, not all the technology-specific message elements in a CAPWAP binding protocol have MIB objects defined by other SDOs. For example, the protocol of [RFC5416] defines WLAN management. The WLAN refers to a logical component instantiated on a WTP device. A single physical WTP MAY operate a number of WLANs. Also, Local or Split MAC modes could be specified for a WLAN. The MAC mode for a WLAN is not in the scope of IEEE 802.11 [IEEE.802-11.2007]. In such cases, in addition to the existing wireless binding MIB modules defined by other SDOs, a CAPWAP protocol wireless binding MIB module is required to be defined for a wireless binding, e.g, the CAPWAP Protocol Binding MIB for IEEE 802.11 [RFC5834].",
      "ja": "時には、CAPWAPプロトコルバインディングではなく、すべての技術固有のメッセージ要素は、他のSDOによって定義されたMIBオブジェクトを持っています。例えば、[RFC5416]のプロトコルは、WLANの管理を規定しています。 WLANは、WTPデバイス上でインスタンスの論理コンポーネントを指します。単一の物理WTPは、WLANの数を操作することができます。また、MACローカルまたはスプリットモードがWLANに指定することができます。 WLANのMACモードは[IEEE.802-11.2007] IEEE 802.11の範囲ではありません。このような場合には、他のSDOによって定義されたMIBモジュールを結合既存の無線に加えて、MIBモジュールを結合CAPWAPプロトコル無線は、IEEE 802.11 [RFC5834]のためのMIB結合CAPWAPプロトコル、例えば、結合ワイヤレスのために定義する必要があります。"
    },
    {
      "indent": 0,
      "text": "5.7. WTP Profile",
      "section_title": true,
      "ja": "5.7。 WTPのプロフィール"
    },
    {
      "indent": 3,
      "text": "In a centralized WLAN architecture, a WTP profile is used to make configurations such as a static IP address for a WTP before and after it connects to the AC. It MUST contain the Base MAC address [RFC5415] of the WTP because the CAPWAP message received from the WTP contains the Base MAC address and the AC uses this Base MAC address to find the corresponding WTP profile.",
      "ja": "中央集中型WLANアーキテクチャでは、WTPプロファイルは、それがACに接続する前と後のようなWTPの静的IPアドレスなどの設定を行うために使用されます。これは、WTPから受信したCAPWAPメッセージベースのMACアドレスが含まれており、ACは、対応するWTPプロファイルを見つけるために、この基本MACアドレスを使用するため、ベースのMAC WTPの[RFC5415]に対処含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "Section 4.6.40 of [RFC5415] omits indicating that the WTP's Base MAC address MUST be included in the WTP Board Data message element. This is a known errata item [Err1832] and should be fixed in any future revision of RFC 5415.",
      "ja": "[RFC5415]のセクション4.6.40はWTPのベースMACアドレスがWTPボードデータメッセージ要素に含まれなければならないことを示す省略しています。これは、[Err1832】既知のエラッタ項目であり、RFC 5415の将来の改訂版で修正されるべきです。"
    },
    {
      "indent": 3,
      "text": "Another important function of WTP profile is to trigger the creation of WTP Virtual Radio Interfaces on the AC. To implement this function, a WTP profile MUST include the WTP's model number [RFC5415], which reflects the number of PHY radios on the WTP. In this way, the creation of a WTP profile triggers the AC to automatically create the same number of WTP Virtual Radio Interfaces corresponding to the WTP's PHY radios without manual intervention. With the ifIndexes of WTP Virtual Radio Interfaces, the operator could configure and manage the WTP's PHY radios through the wireless binding MIB modules.",
      "ja": "WTPプロファイルのもう一つの重要な機能は、AC上のWTPの仮想ラジオインターフェースの作成をトリガすることです。この機能を実装するには、WTPプロファイルは、WTPのPHYの無線の数を反映してWTPのモデル番号[RFC5415]を含まなければなりません。このように、WTPプロファイルの作成が自動的に手動の介入なしにWTPのPHYラジオに対応したWTP仮想ラジオ、同じ数のインターフェイスを作成するためにACをトリガします。 WTP仮想ラジオインタフェースのifIndexesでは、オペレータは、MIBモジュールを結合無線を通じてWTPのPHYラジオを構成および管理できます。"
    },
    {
      "indent": 0,
      "text": "6. Structure of the MIB Module",
      "section_title": true,
      "ja": "MIBモジュールの構造6"
    },
    {
      "indent": 3,
      "text": "The MIB objects are derived from the CAPWAP protocol document [RFC5415].",
      "ja": "MIBオブジェクトは、CAPWAPプロトコル文書[RFC5415]に由来します。"
    },
    {
      "indent": 3,
      "text": "1) capwapBaseAcNameListTable",
      "ja": "1）capwapBaseAcNameListTable"
    },
    {
      "indent": 6,
      "text": "The AC name list table is used to configure the AC name list.",
      "ja": "AC名の一覧表は、AC名リストを設定するために使用されます。"
    },
    {
      "indent": 3,
      "text": "2) capwapBaseMacAclTable",
      "ja": "2）capwapBaseMacAclTable"
    },
    {
      "indent": 6,
      "text": "The ACL table is used to configure stations' Access Control Lists (ACLs).",
      "ja": "ACLテーブルは、ステーションのアクセス制御リスト（ACL）を設定するために使用されます。"
    },
    {
      "indent": 3,
      "text": "3) capwapBaseWtpProfileTable",
      "ja": "3）capwapBaseWtpProfileTable"
    },
    {
      "indent": 6,
      "text": "The WTP profile table is used to configure WTP profiles for WTPs to be managed before they connect to the AC. An operator could change a WTP's current configuration by changing the values of parameters in the corresponding WTP profile, then the WTP could get the new configuration through the CAPWAP control channel.",
      "ja": "WTPプロファイルテーブルは、彼らがACに接続する前に管理することがWTPsためWTPプロファイルを設定するために使用されます。次に、オペレータは、WTPがCAPWAP制御チャネルを介して新しいコンフィギュレーションを得ることができ、対応するWTPプロファイルのパラメータの値を変更することによって、WTPの現在の設定を変更することができます。"
    },
    {
      "indent": 3,
      "text": "4) capwapBaseWtpStateTable",
      "ja": "4）capwapBaseWtpStateTable"
    },
    {
      "indent": 6,
      "text": "The state table of WTPs is used to indicate the AC's CAPWAP FSM state for each WTP, and helps the operator to query a WTP's current configuration.",
      "ja": "WTPsの状態テーブルには、各WTP用ACのCAPWAP FSMの状態を示すために使用され、WTPの現在の設定を照会するオペレータを助けています。"
    },
    {
      "indent": 3,
      "text": "5) capwapBaseWtpTable",
      "ja": "5）capwapBaseWtpTable"
    },
    {
      "indent": 6,
      "text": "The WTP table is used to display properties of the WTPs in running state.",
      "ja": "WTPテーブルは、走行状態にWTPsのプロパティを表示するために使用されます。"
    },
    {
      "indent": 3,
      "text": "6) capwapBaseWirelessBindingTable",
      "ja": "6）capwapBaseWirelessBindingTable"
    },
    {
      "indent": 6,
      "text": "The wireless binding table is used to display the mappings between WTP Virtual Radio Interfaces and PHY radios, and the wireless binding type for each PHY radio.",
      "ja": "無線バインディングテーブルはWTP仮想ラジオインターフェイスとPHYラジオ、各PHY無線の無線結合タイプ間のマッピングを表示するために使用されます。"
    },
    {
      "indent": 3,
      "text": "7) capwapBaseStationTable",
      "ja": "7）capwapBaseStationTable"
    },
    {
      "indent": 6,
      "text": "The station table is used for providing stations' basic property information.",
      "ja": "ステーションテーブルは、ステーションの基本的なプロパティ情報を提供するために使用されます。"
    },
    {
      "indent": 3,
      "text": "8) capwapBaseWtpEventsStatsTable",
      "ja": "8）capwapBaseWtpEventsStatsTable"
    },
    {
      "indent": 6,
      "text": "The WTP events statistic table is used for collecting WTP reboot count, link failure count, hardware failure count and so on.",
      "ja": "WTPイベント統計表はこれでWTPの再起動回数、リンク障害の回数、ハードウェア障害の数とを収集するために使用されています。"
    },
    {
      "indent": 3,
      "text": "9) capwapBaseRadioEventsStatsTable",
      "ja": "9）capwapBaseRadioEventsStatsTable"
    },
    {
      "indent": 6,
      "text": "The radio events statistic table is used for collecting radio reset count, channel change count, hardware failure count, and so on.",
      "ja": "ラジオイベント統計表には、その上のラジオのリセット回数、チャンネル変更回数、ハードウェア障害の回数を収集するために使用され、。"
    },
    {
      "indent": 0,
      "text": "7. Relationship to Other MIB Modules",
      "section_title": true,
      "ja": "他のMIBモジュール7.関係"
    },
    {
      "indent": 0,
      "text": "7.1. Relationship to SNMPv2-MIB Module",
      "section_title": true,
      "ja": "7.1。 SNMPv2の-MIBモジュールとの関係"
    },
    {
      "indent": 3,
      "text": "The CAPWAP-BASE-MIB module does not duplicate the objects of the 'system' group in the SNMPv2-MIB [RFC3418] that is defined as being mandatory for all systems, and the objects apply to the entity as a whole. The 'system' group provides identification of the management entity and certain other system-wide data.",
      "ja": "CAPWAP-BASE-MIBモジュールは、すべてのシステムのために必須であると定義されるのSNMPv2-MIB [RFC3418]の「システム」グループのオブジェクトと重複しない、およびオブジェクトは全体としてエンティティに適用されます。 「システム」グループは、管理エンティティの識別および特定の他のシステム全体のデータを提供します。"
    },
    {
      "indent": 0,
      "text": "7.2. Relationship to IF-MIB Module",
      "section_title": true,
      "ja": "7.2。 IF-MIBモジュールとの関係"
    },
    {
      "indent": 3,
      "text": "The Interfaces Group [RFC2863] defines generic managed objects for managing interfaces. This memo contains the media-specific extensions to the Interfaces Group for managing WTP PHY radios that are modeled as interfaces.",
      "ja": "インタフェースグループ[RFC2863]はインターフェイスを管理するための一般的な管理オブジェクトを定義します。このメモは、インターフェースとしてモデル化されているWTPのPHYラジオを管理するためのインターフェイスグループへのメディア固有の拡張機能が含まれています。"
    },
    {
      "indent": 3,
      "text": "The IF-MIB module is required to be supported on the AC. Each PHY radio on the WTP corresponds to a WTP Virtual Radio Interface on the AC. The WTP Virtual Radio Interface provides a way to configure the radio's parameters and query radio's traffic statistics, and reuse wireless binding modules defined by other SDOs. The interface MUST be modeled as an ifEntry, and ifEntry objects such as ifIndex, ifDescr, ifName, and ifAlias are to be used as per [RFC2863].",
      "ja": "IF-MIBモジュールはACでサポートする必要があります。 WTPの各PHYラジオはACにWTP仮想無線インターフェースに対応します。 WTP仮想無線インタフェースは、ラジオのパラメータとクエリラジオのトラフィック統計情報を設定、およびその他のSDOによって定義された無線結合モジュールを再利用する方法を提供します。インタフェースは、ifIndexの、のifDescr、のifName、などのifEntry、及びifEntryのオブジェクトとしてモデル化されなければならないとifAliasは[RFC2863]に従って使用されます。"
    },
    {
      "indent": 3,
      "text": "Also, as an ifIndex [RFC2863] is used as a common index for corresponding interfaces in the CAPWAP-BASE-MIB and specific wireless technologies MIB modules, the AC MUST have a mechanism that preserves the values of the ifIndexes in the ifTable at AC reboot.",
      "ja": "ifIndexの[RFC2863]はCAPWAP-BASE-MIBと特定の無線技術のMIBモジュールのインターフェイスに対応するための一般的な指標として使用される。また、ACはACの再起動時にifTableのifIndexesの値を保存するメカニズムがなければなりません。"
    },
    {
      "indent": 0,
      "text": "7.3. Relationship to ENTITY-MIB Module",
      "section_title": true,
      "ja": "7.3。 ENTITY-MIBモジュールとの関係"
    },
    {
      "indent": 3,
      "text": "The ENTITY-MIB module [RFC4133] meets the need for a standardized way of representing a single agent that supports multiple instances of one MIB. It could express a certain relationship between multiple entities and provide entity properties for each entity.",
      "ja": "ENTITY-MIBモジュール[RFC4133]一のMIBの複数のインスタンスをサポートする単一の薬剤を表す標準化された方法の必要性を満たします。これは、複数のエンティティ間の特定の関係を表現し、各エンティティのエンティティプロパティを提供することができます。"
    },
    {
      "indent": 3,
      "text": "In a centralized WLAN architecture, the SNMP agent runs on the AC and is not required on the WTP. With the ENTITY-MIB module on the AC, it could keep entity information such as firmware revision and software revision of the AC and WTPs. From the ENTITY-MIB module's perspective, the overall physical entity (AC) is a 'compound' of multiple physical entities (that is, the WTPs connected to AC), and all entities are each identified by a physical index. The capwapBaseWtpTable of the CAPWAP-BASE-MIB module uses the capwapBaseWtpPhyIndex object to store the mappings of WTP object between CAPWAP-BASE-MIB and ENTITY-MIB modules.",
      "ja": "中央集中型のWLANアーキテクチャでは、SNMPエージェントは、AC上で動作し、WTPには必要ありません。 AC上のENTITY-MIBモジュールでは、そのようなACとWTPsのファームウェアのリビジョンとソフトウェアリビジョンなどのエンティティ情報を保つことができます。 ENTITY-MIBモジュールの観点から、全体的な物理的実体（AC）は、複数の物理的なエンティティ（すなわち、ACに接続WTPsである）の「化合物」であり、すべてのエンティティが、各物理インデックスによって識別されます。 CAPWAP-BASE-MIBモジュールのcapwapBaseWtpTableはCAPWAP-BASE-MIBとENTITY-MIBモジュール間WTPオブジェクトのマッピングを格納するcapwapBaseWtpPhyIndexオブジェクトを使用します。"
    },
    {
      "indent": 3,
      "text": "By querying both the CAPWAP-BASE-MIB and ENTITY-MIB modules, operators could query the status and properties of the AC and WTPs. For example, they could get a WTP's current status through the CAPWAP-BASE-MIB module, and a WTP's software revision information through the ENTITY-MIB module. The CAPWAP-BASE-MIB module does not duplicate those objects defined in the ENTITY-MIB module.",
      "ja": "両方のCAPWAP-BASE-MIBとENTITY-MIBモジュールを照会することによって、オペレータは、ACとWTPsのステータスとプロパティを照会することができました。例えば、彼らはCAPWAP-BASE-MIBモジュールを介してWTPの現在の状態、およびENTITY-MIBモジュールを介してWTPのソフトウェアリビジョン情報を得ることができます。 CAPWAP-BASE-MIBモジュールは、ENTITY-MIBモジュールで定義されたこれらのオブジェクトを複製しません。"
    },
    {
      "indent": 0,
      "text": "7.4. Relationship to Wireless Binding MIB Modules",
      "section_title": true,
      "ja": "7.4。ワイヤレスバインディングMIBモジュールとの関係"
    },
    {
      "indent": 3,
      "text": "The wireless binding MIB module of a wireless technology (such as [IEEE.802-11.2007]) is required to be supported on the AC. The CAPWAP-BASE-MIB module is able to support any wireless binding. Through the ifIndexes of WTP Virtual Radio Interfaces, it provides a consistent and abstract way of reusing MIB objects in the wireless binding MIB modules. The CAPWAP-BASE-MIB module does not duplicate those objects defined in the wireless binding MIB modules.",
      "ja": "（例えば[IEEE.802-11.2007]のような）無線技術の無線結合MIBモジュールは、AC上に支持する必要があります。 CAPWAP-BASE-MIBモジュールは、任意の無線結合をサポートすることができます。 WTP仮想ラジオインタフェースのifIndexesを通じて、それはMIBモジュールを結合無線でMIBオブジェクトを再利用する一貫性のある抽象的な方法を提供します。 CAPWAP-BASE-MIBモジュールは、MIBモジュールを結合無線で定義されたオブジェクトを複製しません。"
    },
    {
      "indent": 0,
      "text": "7.5. MIB Modules Required for IMPORTS",
      "section_title": true,
      "ja": "7.5。 MIBモジュールは、輸入に必要な"
    },
    {
      "indent": 3,
      "text": "The following MIB module IMPORTS objects from SYSAPPL-MIB [RFC2287], SNMPv2-SMI [RFC2578], SNMPv2-TC [RFC2579], SNMPv2-CONF [RFC2580], IF-MIB [RFC2863], SNMP-FRAMEWORK-MIB [RFC3411], INET-ADDRESS-MIB [RFC4001], and ENTITY-MIB [RFC4133].",
      "ja": "次のMIBモジュールは、SYSAPPL-MIB [RFC2287]のSNMPv2-SMI [RFC2578]のSNMPv2-TC [RFC2579]のSNMPv2-CONF [RFC2580]からオブジェクトをインポートしIF-MIB [RFC2863]、SNMP-FRAMEWORK-MIB [RFC3411] 、INET-ADDRESS-MIB [RFC4001]、およびENTITY-MIB [RFC4133]。"
    },
    {
      "indent": 0,
      "text": "8. Example of CAPWAP-BASE-MIB Module Usage",
      "section_title": true,
      "ja": "CAPWAP-BASE-MIBモジュールの使用の8例"
    },
    {
      "indent": 3,
      "text": "Below, the IEEE 802.11 binding is used as an example of how the MIB modules operate.",
      "ja": "以下、IEEE 802.11は、MIBモジュールが動作する方法の例として使用される結合します。"
    },
    {
      "indent": 3,
      "text": "1) Create a WTP profile.",
      "ja": "1）WTPプロファイルを作成します。"
    },
    {
      "indent": 6,
      "text": "Suppose the WTP's Base MAC address is '00:01:01:01:01:00'. Create the WTP profile as follows:",
      "ja": "01：01：01：01：00' WTPのベースMACアドレスが00であると仮定します。次のようにWTPプロファイルを作成します。"
    },
    {
      "indent": 5,
      "text": "In capwapBaseWtpProfileTable { capwapBaseWtpProfileId = 1, capwapBaseWtpProfileName = 'WTP Profile 123456', capwapBaseWtpProfileWtpMacAddress = '00:01:01:01:01:00', capwapBaseWtpProfileWtpModelNumber = 'WTP123', capwapBaseWtpProfileWtpName = 'WTP 123456', capwapBaseWtpProfileWtpLocation = 'office', capwapBaseWtpProfileWtpStaticIpEnable = true(1), capwapBaseWtpProfileWtpStaticIpType = ipv4(1), capwapBaseWtpProfileWtpStaticIpAddress = '192.0.2.10', capwapBaseWtpProfileWtpNetmask = '255.255.255.0', capwapBaseWtpProfileWtpGateway = '192.0.2.1', capwapBaseWtpProfileWtpFallbackEnable = true(1), capwapBaseWtpProfileWtpEchoInterval = 30, capwapBaseWtpProfileWtpIdleTimeout = 300, capwapBaseWtpProfileWtpMaxDiscoveryInterval = 20, capwapBaseWtpProfileWtpReportInterval = 120, capwapBaseWtpProfileWtpStatisticsTimer = 120, capwapBaseWtpProfileWtpEcnSupport = limited(0) }",
      "ja": "01：01：01：01：00' 、capwapBaseWtpProfileWtpModelNumber = 'WTP123'、capwapBaseWtpProfileWtpName = 'WTP 123456'、capwapBaseWtpProfileWtpLocation = 'オフィス'、capwapBaseWtpProfileTableに{capwapBaseWtpProfileId = 1、capwapBaseWtpProfileName =、capwapBaseWtpProfileWtpMacAddress = '00 'WTPは123456プロフィール' capwapBaseWtpProfileWtpStaticIpEnable =真（1）、capwapBaseWtpProfileWtpStaticIpType = IPv4の（1）、capwapBaseWtpProfileWtpStaticIpAddress = '192.0.2.10'、capwapBaseWtpProfileWtpNetmask = '255.255.255.0'、capwapBaseWtpProfileWtpGateway = '192.0.2.1'、capwapBaseWtpProfileWtpFallbackEnableは=真（1）、capwapBaseWtpProfileWtpEchoInterval = 30、capwapBaseWtpProfileWtpIdleTimeout = 300、capwapBaseWtpProfileWtpMaxDiscoveryInterval = 20、capwapBaseWtpProfileWtpReportInterval = 120、capwapBaseWtpProfileWtpStatisticsTimer = 120、capwapBaseWtpProfileWtpEcnSupport =リミテッド（0）}"
    },
    {
      "indent": 6,
      "text": "Suppose the WTP with model number 'WTP123' has one PHY radio, which is identified by ID 1. The creation of this WTP profile triggers the AC to automatically create a WTP Virtual Radio Interface and add a new row object to the capwapBaseWirelessBindingTable without manual intervention. Suppose the ifIndex of the WTP Virtual Radio Interface is 10. The following information is stored in the capwapBaseWirelessBindingTable.",
      "ja": "モデル番号でWTPを仮定「WTP123は、」ID 1.このWTPプロファイルの作成が自動的にWTP仮想無線インタフェースを作成して、手動の介入なしcapwapBaseWirelessBindingTableに新しい行オブジェクトを追加するには、ACをトリガーで識別された1つのPHYラジオを持っています。 WTP仮想無線インターフェースのifIndexのは、以下の情報がcapwapBaseWirelessBindingTableに格納されている10であると仮定する。"
    },
    {
      "indent": 6,
      "text": "In capwapBaseWirelessBindingTable { capwapBaseWtpProfileId = 1, capwapBaseWirelessBindingRadioId = 1, capwapBaseWirelessBindingVirtualRadioIfIndex = 10, capwapBaseWirelessBindingType = dot11(2) }",
      "ja": "capwapBaseWirelessBindingTableにおける{capwapBaseWtpProfileId = 1、capwapBaseWirelessBindingRadioId = 1、capwapBaseWirelessBindingVirtualRadioIfIndex = 10、capwapBaseWirelessBindingType = DOT11（2）}"
    },
    {
      "indent": 6,
      "text": "The WTP Virtual Radio Interfaces on the AC correspond to the PHY radios on the WTP. The WTP Virtual Radio Interface is modeled by ifTable [RFC2863].",
      "ja": "ACのWTP仮想無線インターフェイスは、WTPのPHYの無線に対応しています。 WTP仮想無線インタフェースはifTableの[RFC2863]によってモデル化されます。"
    },
    {
      "indent": 6,
      "text": "In ifTable { ifIndex = 10, ifDescr = 'WTP Virtual Radio Interface', ifType = 254, ifMtu = 0, ifSpeed = 0, ifPhysAddress = '00:00:00:00:00:00', ifAdminStatus = true(1), ifOperStatus = false(0), ifLastChange = 0, ifInOctets = 0, ifInUcastPkts = 0, ifInDiscards = 0, ifInErrors = 0, ifInUnknownProtos = 0, ifOutOctets = 0, ifOutUcastPkts = 0, ifOutDiscards = 0, ifOutErrors = 0 }",
      "ja": "ifTableの{ifIndexの= 10、のifDescr = 'WTP仮想無線インタフェース'、ifTypeが= 254、ifMtu = 0、のifSpeed = 0、ますifPhysAddress = '00：00：00：00：00：00' 、のifAdminStatus =真（1） 、のifOperStatus =偽（0）、ifLastChange = 0、のifInOctets = 0、ifInUcastPkts = 0、ifInDiscards = 0、ifInErrors = 0、ifInUnknownProtos = 0、ifOutOctets = 0、ifOutUcastPkts = 0、ifOutDiscards = 0、ifOutErrors = 0}"
    },
    {
      "indent": 3,
      "text": "2) Query the ifIndexes of WTP Virtual Radio Interfaces.",
      "ja": "2）WTP仮想ラジオインタフェースのifIndexesを照会します。"
    },
    {
      "indent": 6,
      "text": "Before configuring PHY radios, the operator needs to get the ifIndexes of WTP Virtual Radio Interfaces corresponding to the PHY radios.",
      "ja": "PHYの無線を設定する前に、オペレータは、PHYラジオに対応したWTP仮想ラジオインタフェースのifIndexesを取得する必要があります。"
    },
    {
      "indent": 6,
      "text": "As capwapBaseWirelessBindingTable already stores the mappings between PHY radios (Radio IDs) and the ifIndexes of WTP Virtual Radio Interfaces, the operator can get the ifIndex information by querying this table. Such a query operation SHOULD run from radio ID 1 to radio ID 31 according to [RFC5415]), and stop when an invalid ifIndex value (0) is returned.",
      "ja": "capwapBaseWirelessBindingTableはすでにPHYラジオ（ラジオのID）とWTP仮想ラジオインタフェースのifIndexes間のマッピングを格納したように、オペレータは、このテーブルを照会することによって、ifIndexの情報を得ることができます。そのようなクエリ動作は、[RFC5415]）に係る無線ID 31に無線ID 1から実行し、無効のifIndex値（0）が返されたときに停止すべきです。"
    },
    {
      "indent": 6,
      "text": "This example uses capwapBaseWtpProfileId = 1 and capwapBaseWirelessBindingRadioId = 1 as inputs to query the capwapBaseWirelessBindingTable, and gets capwapBaseWirelessBindingVirtualRadioIfIndex = 10. Then it uses capwapBaseWtpProfileId = 1 and capwapBaseWirelessBindingRadioId = 2, and gets an invalid ifIndex value (0), so the query operation ends. This method gets not only the ifIndexes of WTP Virtual Radio Interfaces, but also the numbers of PHY radios. Besides checking whether the ifIndex value is valid, the operator SHOULD check whether the capwapBaseWirelessBindingType is the desired binding type.",
      "ja": "この例ではcapwapBaseWirelessBindingTableを照会するための入力としてcapwapBaseWtpProfileId = 1とcapwapBaseWirelessBindingRadioId = 1を使用し、そしてcapwapBaseWirelessBindingVirtualRadioIfIndex = 10そしてそれはcapwapBaseWtpProfileId = 1及びcapwapBaseWirelessBindingRadioId = 2を使用し、そして（0）無効ifIndex値を取得するため、クエリ操作が終了します。この方法では、WTP仮想ラジオインタフェースのifIndexes、だけでなく、PHYラジオの数字だけでなく、取得します。 ifIndex値が有効であるか否かをチェックするほか、オペレータがcapwapBaseWirelessBindingTypeが所望の結合タイプであるかどうかを確認する必要があります。"
    },
    {
      "indent": 3,
      "text": "3) Configure specific wireless binding parameters for a WTP Virtual Radio Interface.",
      "ja": "3）WTP仮想無線インターフェースのための特定の無線結合パラメータを設定します。"
    },
    {
      "indent": 6,
      "text": "This configuration is made on the AC through a specific wireless binding MIB module such as the IEEE 802.11 MIB module.",
      "ja": "この構成は、IEEE 802.11 MIBモジュールなどの特定無線結合MIBモジュールを介してACについて説明します。"
    },
    {
      "indent": 6,
      "text": "The following shows an example of configuring parameters for a WTP Virtual Radio Interface with ifIndex 10 through the IEEE 802.11 dot11OperationTable [IEEE.802-11.2007].",
      "ja": "以下は、IEEE 802.11 dot11OperationTable [IEEE.802-11.2007]を介してのifIndex 10とWTP仮想無線インターフェースのパラメータを設定する例を示しています。"
    },
    {
      "indent": 6,
      "text": "In dot11OperationTable { ifIndex = 10, dot11MACAddress = '00:00:00:00:00:00', dot11RTSThreshold = 2347, dot11ShortRetryLimit = 7, dot11LongRetryLimit = 4, dot11FragmentationThreshold = 256, dot11MaxTransmitMSDULifetime = 512, dot11MaxReceiveLifetime = 512, dot11ManufacturerID = 'capwap', dot11ProductID = 'capwap', dot11CAPLimit = 2, dot11HCCWmin = 0, dot11HCCWmax = 0, dot11HCCAIFSN = 1, dot11ADDBAResponseTimeout = 1, dot11ADDTSResponseTimeout = 1, dot11ChannelUtilizationBeaconInterval = 50, dot11ScheduleTimeout = 10, dot11DLSResponseTimeout = 10, dot11QAPMissingAckRetryLimit = 1, dot11EDCAAveragingPeriod = 5 }",
      "ja": "dot11OperationTable {ifIndexの= 10、dot11MACAddressに= '00：00：00：00：00：00' 、dot11RTSThreshold = 2347、dot11ShortRetryLimit = 7、dot11LongRetryLimit = 4、dot11FragmentationThreshold = 256、dot11MaxTransmitMSDULifetime = 512、dot11MaxReceiveLifetime = 512、dot11ManufacturerID = ' CAPWAP」、dot11ProductID = 'CAPWAP'、dot11CAPLimit = 2、dot11HCCWmin = 0、dot11HCCWmax = 0、dot11HCCAIFSN = 1、dot11ADDBAResponseTimeout = 1、dot11ADDTSResponseTimeout = 1、dot11ChannelUtilizationBeaconInterval = 50、dot11ScheduleTimeout = 10、dot11DLSResponseTimeout = 10、dot11QAPMissingAckRetryLimit = 1、dot11EDCAAveragingPeriod = 5}"
    },
    {
      "indent": 3,
      "text": "4) Get the current configuration status report from the WTP to the AC.",
      "ja": "4）ACへのWTPから現在の設定ステータスレポートを取得します。"
    },
    {
      "indent": 6,
      "text": "According to [RFC5415], before a WTP that has joined the AC gets configuration from the AC, it needs to report its current configuration status by sending a configuration status request message to the AC, which uses the message to update MIB objects on the AC. For example, for IEEE 802.11 binding, the AC updates data in the ifTable [RFC2863] and IEEE 802.11 MIB module, and so on, according to the message. For ifIndex 10, its ifOperStatus in ifTable is updated according to the current radio operational status in the CAPWAP message.",
      "ja": "[RFC5415]によれば、ACはACからコンフィギュレーションを取得参加したWTP前に、それがACにMIBオブジェクトを更新するために、メッセージを使用してACに設定ステータス要求メッセージを送信することにより、現在の構成の状態を報告する必要があります。例えば、結合IEEE 802.11のために、ifTableのAC更新データ[RFC2863]とIEEE 802.11 MIBモジュールなど、メッセージに従って。 ifIndexの10のために、ifTableのそれのifOperStatusは、CAPWAPメッセージで現在の無線動作状態に応じて更新されます。"
    },
    {
      "indent": 3,
      "text": "5) Query WTP and radio statistical data.",
      "ja": "5）クエリWTPとラジオ統計データ。"
    },
    {
      "indent": 6,
      "text": "After WTPs start to run, the operator could query WTP and radio statistical data through CAPWAP-BASE-MIB and the specific binding MIB module on the AC. For example, through dot11CountersTable in the IEEE 802.11 MIB module, the operator could query the counter data of a radio using the ifIndex of the corresponding WTP Virtual Radio Interface. With the capwapBaseWtpTable table in the CAPWAP-BASE-MIB module, the operator could query the properties of running WTPs.",
      "ja": "WTPsが実行を開始した後、オペレータは、CAPWAP-BASE-MIBおよびAC上の特定の結合のMIBモジュールを介してWTPとラジオ統計データを照会することができます。例えば、IEEE 802.11 MIBモジュールでdot11CountersTableを通じて、オペレータは、対応するWTP仮想無線インタフェースのifIndexのを使用して、無線のカウンタデータを照会することができました。 CAPWAP-BASE-MIBモジュールでcapwapBaseWtpTableテーブルでは、オペレータは、実行中のWTPsのプロパティを照会することができます。"
    },
    {
      "indent": 3,
      "text": "6) Run MIB operations through a CAPWAP protocol wireless binding MIB module.",
      "ja": "MIBモジュールを結合CAPWAPプロトコル無線を介して6）を実行MIB操作。"
    },
    {
      "indent": 6,
      "text": "For example, for the CAPWAP IEEE 802.11 binding protocol [RFC5416], some MIB operations such as MAC mode configuration for a WLAN depend on the CAPWAP Protocol Binding MIB for IEEE 802.11 [RFC5834]. For more information, refer to [RFC5834].",
      "ja": "例えば、CAPWAP、IEEE802.11バインディング・プロトコル[RFC5416]のために、そのようなWLANのMACモード設定などのいくつかのMIB操作はIEEE 802.11 [RFC5834]のためのMIB結合CAPWAPプロトコルに依存します。詳細については、[RFC5834]を参照。"
    },
    {
      "indent": 3,
      "text": "7) Query other properties of a WTP.",
      "ja": "7）クエリWTPの他の特性。"
    },
    {
      "indent": 6,
      "text": "The Operator could query MIB objects in the ENTITY-MIB [RFC4133] module by using the capwapBaseWtpPhyIndex in the capwapBaseWtpTable of CAPWAP-BASE-MIB module. The properties of a WTP such as software version, hardware version are available in the ENTITY-MIB module.",
      "ja": "オペレータは、CAPWAP-BASE-MIBモジュールのcapwapBaseWtpTableにcapwapBaseWtpPhyIndexを使用して、ENTITY-MIB [RFC4133]モジュール内のMIBオブジェクトを照会することができました。そのようなソフトウェアバージョン、ハードウェアバージョンとしてWTPの特性は、ENTITY-MIBモジュールに利用可能です。"
    },
    {
      "indent": 0,
      "text": "9. Definitions",
      "section_title": true,
      "ja": "9.定義"
    },
    {
      "indent": 0,
      "text": "CAPWAP-BASE-MIB DEFINITIONS ::= BEGIN",
      "raw": true
    },
    {
      "indent": 0,
      "text": "IMPORTS",
      "ja": "輸入"
    },
    {
      "indent": 3,
      "text": "PhysAddress, TEXTUAL-CONVENTION, TruthValue, DateAndTime, RowStatus FROM SNMPv2-TC LongUtf8String FROM SYSAPPL-MIB InterfaceIndex, ifGeneralInformationGroup FROM IF-MIB PhysicalIndex FROM ENTITY-MIB SnmpAdminString FROM SNMP-FRAMEWORK-MIB NOTIFICATION-GROUP, OBJECT-GROUP, MODULE-COMPLIANCE FROM SNMPv2-CONF MODULE-IDENTITY, OBJECT-TYPE, NOTIFICATION-TYPE, mib-2, Integer32, Unsigned32, Counter32, Gauge32, TimeTicks",
      "ja": "PhysAddress、TEXTUAL-CONVENTION、SYSAPPL-MIBますInterfaceIndex、ifGeneralInformationGroup FROM SNMPv2の-TC LongUtf8String FROMのTruthValue、のDateAndTime、RowStatusのFROM IF-MIB PhysicalIndex SNMP-FRAMEWORK-MIBのNOTIFICATION-GROUP、OBJECT-GROUP、MODULE-COMPLIANCE FROM ENTITY-MIBれるSnmpAdminString FROM SNMPv2の-CONF MODULE-IDENTITY、OBJECT-TYPE、NOTIFICATION-TYPE、MIB-2、構文Integer32、Unsigned32の、Counter32の、Gauge32、時間刻みFROM"
    },
    {
      "indent": 3,
      "text": " FROM SNMPv2-SMI InetAddressType, InetAddress FROM INET-ADDRESS-MIB;",
      "ja": "INET-ADDRESS-MIBからのSNMPv2-SMIのInetAddressType、InetAddressのFROM;"
    },
    {
      "indent": 0,
      "text": "capwapBaseMIB MODULE-IDENTITY LAST-UPDATED \"201004300000Z\" -- 30 April 2010 ORGANIZATION \"IETF Control And Provisioning of Wireless Access Points (CAPWAP) Working Group http://www.ietf.org/html.charters/capwap-charter.html\" CONTACT-INFO \"General Discussion: capwap@frascone.com To Subscribe: http://lists.frascone.com/mailman/listinfo/capwap",
      "ja": "capwapBaseMIBのMODULE-IDENTITY LAST-UPDATED \"201004300000Z\"  -  2010年4月30日ORGANIZATION \"IETFコントロールおよびワイヤレスアクセスポイントのプロビジョニング（CAPWAP）ワーキンググループhttp://www.ietf.org/html.charters/capwap-charter.html\" CONTACT-INFO「一般的なディスカッション：capwap@frascone.com登録：http://lists.frascone.com/mailman/listinfo/capwap"
    },
    {
      "indent": 9,
      "text": "Yang Shi (editor)\nHangzhou H3C Tech. Co., Ltd.\nBeijing R&D Center of H3C, Digital Technology Plaza\nNO. 9 Shangdi 9th Street, Haidian District\nBeijing  100085\nChina\nPhone: +86 010 82775276\nEmail: rishyang@gmail.com",
      "raw": true
    },
    {
      "indent": 9,
      "text": "David T. Perkins (editor) 228 Bayview Dr. San Carlos, CA 94070 USA Phone: +1 408 394-8702 Email: dperkins@dsperkins.com",
      "ja": "デヴィッドT.パーキンス（エディタ）228ベイビュー博士サンカルロス、CA 94070 USA電話：+1 408 394から8702 Eメール：dperkins@dsperkins.com"
    },
    {
      "indent": 9,
      "text": "Chris Elliott (editor) 1516 Kent St. Durham, NC 27707 USA Phone: +1 919-308-1216 Email: chelliot@pobox.com",
      "ja": "クリス・エリオット（編集者）1516ケントセントダーラム、NC 27707 USA電話：+1 919-308-1216電子メール：chelliot@pobox.com"
    },
    {
      "indent": 9,
      "text": "Yong Zhang (editor) Fortinet, Inc. 1090 Kifer Road Sunnyvale, CA 94086 USA Email: yzhang@fortinet.com\"",
      "ja": "ヨンチャン（編集者）フォーティネット株式会社1090なぜ道州サニーベール、CA 94086 USA Eメール：yzhang@fortinet.com \""
    },
    {
      "indent": 4,
      "text": "DESCRIPTION \"Copyright (c) 2010 IETF Trust and the persons identified as authors of the code. All rights reserved.",
      "ja": "DESCRIPTION「著作権（C）2010 IETF信託コードの作者として特定の人物。すべての権利を保有。"
    },
    {
      "indent": 9,
      "text": "Redistribution and use in source and binary forms, with or\nwithout modification, is permitted pursuant to, and subject\nto the license terms contained in, the Simplified BSD License\nset forth in Section 4.c of the IETF Trust's Legal Provisions\nRelating to IETF Documents\n(http://trustee.ietf.org/license-info).",
      "raw": true
    },
    {
      "indent": 9,
      "text": "This version of this MIB module is part of RFC 5833; see the RFC itself for full legal notices.",
      "ja": "このMIBモジュールのこのバージョンはRFC 5833の一部です。完全な適法な通知についてはRFC自体を参照してください。"
    },
    {
      "indent": 4,
      "text": "     This MIB module contains managed object definitions for\n     the CAPWAP Protocol.\"\nREVISION    \"201004300000Z\"\nDESCRIPTION\n    \"Initial version published as RFC 5833\"\n     ::= { mib-2 196 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "-- Textual Conventions",
      "ja": " - テキストの表記法"
    },
    {
      "indent": 0,
      "text": "CapwapBaseWtpProfileIdTC ::= TEXTUAL-CONVENTION\n    DISPLAY-HINT \"d\"\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier of a WTP profile.\"\n    SYNTAX      Unsigned32 (0..4096)",
      "raw": true
    },
    {
      "indent": 0,
      "text": "CapwapBaseWtpIdTC ::= TEXTUAL-CONVENTION\n    DISPLAY-HINT \"1x:\"\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier of a WTP instance.\n         As usual, the Base MAC address of the WTP is used.\"\n    SYNTAX      OCTET STRING (SIZE(6|8))",
      "raw": true
    },
    {
      "indent": 0,
      "text": "CapwapBaseStationIdTC ::= TEXTUAL-CONVENTION\n    DISPLAY-HINT \"1x:\"\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier of a station instance.\n         As usual, the MAC address of the station is used.\"\n    SYNTAX      OCTET STRING (SIZE(6|8))",
      "raw": true
    },
    {
      "indent": 0,
      "text": "CapwapBaseRadioIdTC ::= TEXTUAL-CONVENTION\n    DISPLAY-HINT \"d\"\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier of a radio on a WTP.\"\n    SYNTAX      Unsigned32 (1..31)",
      "raw": true
    },
    {
      "indent": 0,
      "text": "CapwapBaseTunnelModeTC ::= TEXTUAL-CONVENTION\n    STATUS      current\n    DESCRIPTION\n        \"Represents the tunneling modes of operation that are\n         supported by a WTP.\n         The WTP MAY support more than one option, represented by\n         the bit field below:\n           localBridging(0) - Local bridging mode\n           dot3Tunnel(1)    - 802.3 frame tunnel mode\n           nativeTunnel(2)  - Native frame tunnel mode\"\n    REFERENCE\n        \"Section 4.6.43 of CAPWAP Protocol Specification, RFC 5415.\"\n    SYNTAX      BITS {\n                  localBridging(0),\n                  dot3Tunnel(1),\n                  nativeTunnel(2)\n                }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "CapwapBaseMacTypeTC ::= TEXTUAL-CONVENTION\n    STATUS      current\n    DESCRIPTION\n        \"Represents the MAC mode of operation supported by a WTP.\n         The following enumerated values are supported:\n           localMAC(0) - Local-MAC mode\n           splitMAC(1) - Split-MAC mode\n           both(2)     - Both Local-MAC and Split-MAC\n         Note that the CAPWAP field [RFC5415] modeled by this\n         object takes zero as starting value; this MIB object\n         follows that rule.\"\n    REFERENCE\n        \"Section 4.6.44 of CAPWAP Protocol Specification, RFC 5415.\"\n    SYNTAX      INTEGER {\n                  localMAC(0),\n                  splitMAC(1),\n                  both(2)\n                }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "CapwapBaseChannelTypeTC::= TEXTUAL-CONVENTION\n    STATUS      current\n    DESCRIPTION\n        \"Represents the channel type for CAPWAP protocol.\n         The following enumerated values are supported:\n           data(1)    - Data channel\n           control(2) - Control channel\"\n    SYNTAX      INTEGER {\n                  data(1),\n                  control(2)\n                }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "CapwapBaseAuthenMethodTC ::= TEXTUAL-CONVENTION\n    STATUS      current\n    DESCRIPTION\n        \"Represents the authentication credential type for a WTP.\n         The following enumerated values are supported:\n           other(1) - Other method, for example, vendor specific\n           clear(2) - Clear text and no authentication\n           x509(3)  - X.509 certificate authentication\n           psk(4)   - Pre-Shared secret authentication\n         As a mandatory requirement, CAPWAP control channel\n         authentication SHOULD use DTLS, either by certificate or\n         PSK.  For data channel authentication, DTLS is optional.\"\n    SYNTAX      INTEGER {\n                  other(1),\n                  clear(2),\n                  x509(3),\n                  psk(4)\n                }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "-- Top-level components of this MIB module",
      "ja": " - このMIBモジュールのトップレベルのコンポーネント"
    },
    {
      "indent": 0,
      "text": "-- Notifications\ncapwapBaseNotifications OBJECT IDENTIFIER\n    ::= { capwapBaseMIB 0 }\n-- Tables, Scalars\ncapwapBaseObjects OBJECT IDENTIFIER\n    ::= { capwapBaseMIB 1 }\n-- Conformance\ncapwapBaseConformance OBJECT IDENTIFIER\n    ::= { capwapBaseMIB 2 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "-- AC Objects Group",
      "ja": " -  ACグループオブジェクト"
    },
    {
      "indent": 0,
      "text": "capwapBaseAc OBJECT IDENTIFIER\n    ::= { capwapBaseObjects 1 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpSessions OBJECT-TYPE\n    SYNTAX      Gauge32 (0..65535)\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the total number of WTPs that are connecting to\n         the AC.\"\n    REFERENCE\n        \"Section 4.6.1 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseAc 1 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpSessionsLimit  OBJECT-TYPE\n    SYNTAX      Unsigned32 (0..65535)\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents the maximum number of WTP sessions configured on\n         the AC.\n         The value of the object is persistent at restart/reboot.\"\n    REFERENCE\n        \"Section 4.6.1 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseAc 2 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseStationSessions  OBJECT-TYPE\n    SYNTAX      Gauge32 (0..65535)\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the total number of stations that are accessing\n         the wireless service provided by the AC.\"\n    REFERENCE\n        \"Section 4.6.1 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseAc 3 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseStationSessionsLimit  OBJECT-TYPE\n    SYNTAX      Unsigned32 (0..65535)\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents the maximum number of station sessions configured\n         on the AC.\n         The value of the object is persistent at restart/reboot.\"\n    REFERENCE\n        \"Section 4.6.1 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseAc 4 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseDataChannelDTLSPolicyOptions OBJECT-TYPE SYNTAX BITS { other(0), clear(1), dtls(2) } MAX-ACCESS read-only STATUS current DESCRIPTION \"The AC communicates its policy on the use of DTLS for the CAPWAP data channel. The AC MAY support more than one option, represented by the bit field below:",
      "ja": "capwapBaseDataChannelDTLSPolicyOptions OBJECT-TYPE構文BITS {他の（0）、クリ​​ア（1）、DTLS（2）} MAX-ACCESS read-only説明「ACは、CAPWAPデータチャネルのためのDTLSの使用に関する方針を通信する。AC以下のビットフィールドによって表される複数のオプションをサポートすることができます："
    },
    {
      "indent": 4,
      "text": "       other(0) - Other method, for example, vendor specific\n       clear(1) - Clear text\n       dtls(2)  - DTLS\"\nREFERENCE\n    \"Section 4.6.1 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseAc 5 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseControlChannelAuthenOptions  OBJECT-TYPE\n    SYNTAX      BITS {\n                  x509(0),\n                  psk(1)\n                }\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the authentication credential type supported by the\n         AC for CAPWAP control channel.\n         The AC MAY support more than one option, represented by the bit\n         field below:\n           x509(0) - X.509 certificate based\n           psk(1)  - Pre-Shared secret\"\n    REFERENCE\n        \"Section 4.6.1 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseAc 6 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "-- capwapBaseAcNameListTable table",
      "ja": " -  capwapBaseAcNameListTableテーブル"
    },
    {
      "indent": 0,
      "text": "capwapBaseAcNameListTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF CapwapBaseAcNameListEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A table of objects that configure the AC name list.\n         Values of all read-create objects in this table are\n         persistent at restart/reboot.\"\n    REFERENCE\n        \"Section 4.6.5 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseAc 9 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseAcNameListEntry  OBJECT-TYPE\n    SYNTAX      CapwapBaseAcNameListEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A set of objects that configures the AC name list.\"\n    INDEX { capwapBaseAcNameListId }\n    ::= { capwapBaseAcNameListTable 1 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "CapwapBaseAcNameListEntry ::= SEQUENCE {\n      capwapBaseAcNameListId          Unsigned32,\n      capwapBaseAcNameListName        LongUtf8String,\n      capwapBaseAcNameListPriority    Unsigned32,\n      capwapBaseAcNameListRowStatus   RowStatus\n    }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseAcNameListId OBJECT-TYPE\n    SYNTAX      Unsigned32 (1..255)\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier of an AC Name list.\"\n    ::= { capwapBaseAcNameListEntry 1 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseAcNameListName OBJECT-TYPE\n    SYNTAX      LongUtf8String (SIZE(1..512))\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the name of an AC, and it is expected to be\n         an UTF-8 encoded string.\"\n    REFERENCE\n        \"Section 4.6.5 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseAcNameListEntry 2 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseAcNameListPriority OBJECT-TYPE\n    SYNTAX      Unsigned32 (1..255)\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the priority order of the preferred AC.\n         For instance, the value of one (1) is used to set the primary\n         AC, the value of two (2) is used to set the secondary AC, etc.\"\n    REFERENCE\n        \"Section 4.6.5 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseAcNameListEntry 3 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseAcNameListRowStatus OBJECT-TYPE SYNTAX RowStatus MAX-ACCESS read-create STATUS current DESCRIPTION \"This object is used to create, modify, and/or delete a row in this table. The value of capwapBaseAcNameListName and capwapBaseAcNameListPriority can be changed when this object is in state 'active' or in 'notInService'.",
      "ja": "capwapBaseAcNameListRowStatus OBJECT-TYPE構文RowStatus MAX-ACCESS読作成ステータス現在の説明は「このオブジェクトは、作成、変更、および/またはこのテーブルの行を削除するのに使用される。このオブジェクトが状態にあるときcapwapBaseAcNameListNameとcapwapBaseAcNameListPriorityの値を変更することができます「アクティブ」または「notInServiceの」インチ"
    },
    {
      "indent": 4,
      "text": "     The capwapBaseAcNameListRowStatus may be changed to 'active'\n     if all the managed objects in the conceptual row with\n     MAX-ACCESS read-create have been assigned valid values.\"\n::= { capwapBaseAcNameListEntry 4 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "-- End of capwapBaseAcNameListTable table",
      "ja": " -  capwapBaseAcNameListTableテーブルの終わり"
    },
    {
      "indent": 0,
      "text": "-- capwapBaseMacAclTable table",
      "ja": " -  capwapBaseMacAclTableテーブル"
    },
    {
      "indent": 0,
      "text": "capwapBaseMacAclTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF CapwapBaseMacAclEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A table of objects that configure station Access Control\n         Lists (ACLs).\n         The WTP will not provide service to the MAC addresses\n         configured in this table.\n         Values of all read-create objects in this table are persistent\n         at AC restart/reboot.\"\n    REFERENCE\n        \"Section 4.6.7 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseAc 10 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseMacAclEntry  OBJECT-TYPE\n    SYNTAX      CapwapBaseMacAclEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A set of objects that configures station Access Control\n         Lists (ACLs).\"\n    INDEX { capwapBaseMacAclId }\n    ::= { capwapBaseMacAclTable 1 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "CapwapBaseMacAclEntry ::= SEQUENCE {\n      capwapBaseMacAclId           Unsigned32,\n      capwapBaseMacAclStationId    CapwapBaseStationIdTC,\n      capwapBaseMacAclRowStatus    RowStatus\n    }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseMacAclId OBJECT-TYPE\n    SYNTAX      Unsigned32\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier of an ACL.\"\n    ::= { capwapBaseMacAclEntry 1 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseMacAclStationId OBJECT-TYPE\n    SYNTAX      CapwapBaseStationIdTC\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the MAC address of a station to which WTPs will\n         no longer provides service.\"\n    REFERENCE\n        \"Section 4.6.7 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseMacAclEntry 2 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseMacAclRowStatus OBJECT-TYPE\n    SYNTAX      RowStatus\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"This object is used to create, modify, and/or delete a row\n         in this table.\n         The value of capwapBaseMacAclStationId can be changed when\n         this object is in state 'active' or in 'notInService'.\n         The capwapBaseMacAclRowStatus may be changed to 'active'\n         if all the managed objects in the conceptual row with\n         MAX-ACCESS read-create have been assigned valid values.\"\n    ::= { capwapBaseMacAclEntry 3 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "-- End of capwapBaseMacAclTable table",
      "ja": " -  capwapBaseMacAclTableテーブルの終わり"
    },
    {
      "indent": 0,
      "text": "-- End of AC Objects Group",
      "ja": " -  ACの終わりには、グループオブジェクト"
    },
    {
      "indent": 0,
      "text": "-- WTP Objects Group",
      "ja": " -  WTPグループオブジェクト"
    },
    {
      "indent": 0,
      "text": "capwapBaseWtps OBJECT IDENTIFIER\n    ::= { capwapBaseObjects 2 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "-- capwapBaseWtpProfileTable Table",
      "ja": " -  capwapBaseWtpProfileTable表"
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileTable OBJECT-TYPE SYNTAX SEQUENCE OF CapwapBaseWtpProfileEntry MAX-ACCESS not-accessible STATUS current DESCRIPTION \"A table of objects that configure WTP profiles for WTPs to be managed before they connect to the AC. An operator could change a WTP's configuration by changing the values of parameters in the corresponding WTP profile, then the WTP could get the new configuration through the CAPWAP control channel.",
      "ja": "CapwapBaseWtpProfileEntry MAX-ACCESSステータス現在の説明のcapwapBaseWtpProfileTable OBJECT-TYPE構文配列「彼らはACに接続する前に、管理対象となるWTPsためのWTPプロファイルを設定するオブジェクトのテーブル。オペレータは、の値を変更することによって、WTPの設定を変更することができます対応するWTPプロファイルのパラメータは、その後、WTPは、CAPWAP制御チャネルを介して新しいコンフィギュレーションを得ることができます。"
    },
    {
      "indent": 4,
      "text": "     Values of all read-create objects in this table are\n     persistent at restart/reboot.\"\n::= { capwapBaseWtps 1 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileEntry  OBJECT-TYPE\n    SYNTAX      CapwapBaseWtpProfileEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A set of objects that configures and displays a WTP profile.\"\n    INDEX { capwapBaseWtpProfileId }\n    ::= { capwapBaseWtpProfileTable 1 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "CapwapBaseWtpProfileEntry ::= SEQUENCE {\n      capwapBaseWtpProfileId                  CapwapBaseWtpProfileIdTC,\n      capwapBaseWtpProfileName                       SnmpAdminString,\n      capwapBaseWtpProfileWtpMacAddress              CapwapBaseWtpIdTC,\n      capwapBaseWtpProfileWtpModelNumber             SnmpAdminString,\n      capwapBaseWtpProfileWtpName                    LongUtf8String,\n      capwapBaseWtpProfileWtpLocation                LongUtf8String,\n      capwapBaseWtpProfileWtpStaticIpEnable          TruthValue,\n      capwapBaseWtpProfileWtpStaticIpType            InetAddressType,\n      capwapBaseWtpProfileWtpStaticIpAddress         InetAddress,\n      capwapBaseWtpProfileWtpNetmask                 InetAddress,\n      capwapBaseWtpProfileWtpGateway                 InetAddress,\n      capwapBaseWtpProfileWtpFallbackEnable          INTEGER,\n      capwapBaseWtpProfileWtpEchoInterval            Unsigned32,\n      capwapBaseWtpProfileWtpIdleTimeout             Unsigned32,\n      capwapBaseWtpProfileWtpMaxDiscoveryInterval    Unsigned32,\n      capwapBaseWtpProfileWtpReportInterval          Unsigned32,\n      capwapBaseWtpProfileWtpStatisticsTimer         Unsigned32,\n      capwapBaseWtpProfileWtpEcnSupport              INTEGER,\n      capwapBaseWtpProfileRowStatus                  RowStatus\n    }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileId OBJECT-TYPE\n    SYNTAX      CapwapBaseWtpProfileIdTC\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier of a WTP profile.\"\n    ::= { capwapBaseWtpProfileEntry 1 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileName OBJECT-TYPE SYNTAX SnmpAdminString MAX-ACCESS read-create STATUS current DESCRIPTION",
      "ja": "capwapBaseWtpProfileNameのOBJECT-TYPE SYNTAXれるSnmpAdminString MAX-ACCESSはリード作成しますステータス現在の説明"
    },
    {
      "indent": 4,
      "text": "    \"Represents the name of a WTP profile.\"\n::= { capwapBaseWtpProfileEntry 2 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpMacAddress  OBJECT-TYPE\n    SYNTAX      CapwapBaseWtpIdTC\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the Base MAC address of a WTP.\n         A WTP profile MUST contain the Base MAC address of the WTP\n         because the CAPWAP message received from the WTP contains\n         its Base MAC address and the AC uses the Base MAC address to\n         find the corresponding WTP profile.\n         Section 4.6.40 of [RFC5415] omits indicating that the WTP's\n         Base MAC address must be included in the WTP Board Data\n         message element.  This is a known errata item and should be\n         fixed in any future revision of the RFC 5415.\"\n    REFERENCE\n        \"Section 4.6.40 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpProfileEntry 3 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpModelNumber  OBJECT-TYPE\n    SYNTAX      SnmpAdminString\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the model number of a WTP.\n         A WTP profile MUST include the WTP's model number, which\n         reflects the number of Physical Layer (PHY) radios on the WTP.\n         In this way, the creation of a WTP profile triggers the AC\n         to automatically create the same number of WTP Virtual Radio\n         Interfaces corresponding to the WTP's PHY radios without\n         manual intervention.  With the ifIndexes of WTP Virtual\n         Radio Interfaces, the operator could configure and manage\n         the WTP's PHY radios through the wireless binding MIB\n         modules.\"\n    REFERENCE\n        \"Section 4.6.40 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpProfileEntry 4 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpName OBJECT-TYPE SYNTAX LongUtf8String (SIZE(1..512)) MAX-ACCESS read-create STATUS current DESCRIPTION \"Represents the name of the WTP.\" REFERENCE \"Section 4.6.45 of CAPWAP Protocol Specification, RFC 5415.\"",
      "ja": "capwapBaseWtpProfileWtpNameのOBJECT-TYPE SYNTAX LongUtf8String（SIZE（1..512））MAX-ACCESSはリード作成しますステータス現在の説明は \"WTPの名前を表します。\" REFERENCE \"CAPWAPプロトコル仕様のセクション4.6.45、RFC 5415.\""
    },
    {
      "indent": 4,
      "text": "::= { capwapBaseWtpProfileEntry 5 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpLocation  OBJECT-TYPE\n    SYNTAX      LongUtf8String (SIZE(1..1024))\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the location of the WTP.\"\n    REFERENCE\n        \"Section 4.6.30 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpProfileEntry 6 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpStaticIpEnable OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents whether the WTP SHOULD use a static IP address\n         or not.  A value of false disables the static IP address,\n         while a value of true enables it.\"\n    REFERENCE\n        \"Section 4.6.48 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpProfileEntry 7 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpStaticIpType OBJECT-TYPE\n    SYNTAX      InetAddressType {ipv4(1)}\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the static IP address type used by the WTP.\n         Only ipv4(1) is supported by the object.\n         Although the CAPWAP protocol [RFC5415] supports both IPv4\n         and IPv6, note that the CAPWAP field modeled by this\n         object does not support IPv6, so the object does not\n         support ipv6(2).\"\n    REFERENCE\n        \"Section 4.6.48 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpProfileEntry 8 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpStaticIpAddress OBJECT-TYPE\n    SYNTAX      InetAddress (SIZE(4))\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"When capwapBaseWtpProfileWtpStaticIpEnable is true,\n         it represents the static IP address to be assigned to the WTP.\n         The format of this IP address is determined by the\n         corresponding instance of object capwapBaseWtpProfileWtpStaticIpType.\"\n    REFERENCE\n        \"Section 4.6.48 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpProfileEntry 9 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpNetmask OBJECT-TYPE\n    SYNTAX      InetAddress (SIZE(4))\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"When capwapBaseWtpProfileWtpStaticIpEnable is true,\n         it represents the netmask to be assigned to the WTP.\n         The format of this netmask is determined by the\n         corresponding instance of object\n         capwapBaseWtpProfileWtpStaticIpType.\"\n    REFERENCE\n        \"Section 4.6.48 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpProfileEntry 10 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpGateway OBJECT-TYPE\n    SYNTAX      InetAddress (SIZE(4))\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"When capwapBaseWtpProfileWtpStaticIpEnable is true,\n         it represents the gateway to be assigned to the WTP.\n         The format of this IP address is determined by the\n         corresponding instance of object\n         capwapBaseWtpProfileWtpStaticIpType.\"\n    REFERENCE\n        \"Section 4.6.48 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpProfileEntry 11 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpFallbackEnable OBJECT-TYPE SYNTAX INTEGER { enabled(1), disabled(2) } MAX-ACCESS read-create STATUS current DESCRIPTION \"Represents whether to enable or disable automatic CAPWAP fallback in the event that a WTP detects its preferred AC and is not currently connected to it. The following enumerated values are supported: enabled(1) - The fallback mode is enabled disabled(2) - The fallback mode is disabled\" REFERENCE",
      "ja": "capwapBaseWtpProfileWtpFallbackEnable OBJECT-TYPE SYNTAX INTEGER {イネーブル（1）、無効（2）} MAX-ACCESSリード作成ステータス現在の説明は「WTPが好ましいACを検出し、現在でない場合に自動CAPWAPフォールバックを有効または無効にするかを示しますそれに接続された次の列挙された値がサポートされています：（1）有効 - フォールバックモードが無効になっている」REFERENCE  - フォールバックモードが無効（2）が有効になっています"
    },
    {
      "indent": 4,
      "text": "    \"Section 4.6.42 of CAPWAP Protocol Specification, RFC 5415.\"\nDEFVAL { enabled }\n ::= { capwapBaseWtpProfileEntry 12 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpEchoInterval OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS       \"second\"\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the minimum time, in seconds, between sending Echo\n         Request messages to the AC that the WTP has joined.\"\n    REFERENCE\n        \"Section 4.7.7 of CAPWAP Protocol Specification, RFC 5415.\"\n    DEFVAL { 30 }\n    ::= { capwapBaseWtpProfileEntry 13 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpIdleTimeout OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS       \"second\"\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the idle timeout value that the WTP SHOULD enforce\n         for its active stations.\"\n    REFERENCE\n        \"Section 4.7.8 of CAPWAP Protocol Specification, RFC 5415.\"\n    DEFVAL { 300 }\n    ::= { capwapBaseWtpProfileEntry 14 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpMaxDiscoveryInterval OBJECT-TYPE\n    SYNTAX      Unsigned32 (2..180)\n    UNITS       \"second\"\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the maximum time allowed between sending Discovery\n         Request messages, in seconds.\"\n    REFERENCE\n        \"Section 4.7.10 of CAPWAP Protocol Specification, RFC 5415.\"\n    DEFVAL { 20 }\n    ::= { capwapBaseWtpProfileEntry 15 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpReportInterval OBJECT-TYPE SYNTAX Unsigned32 UNITS \"second\" MAX-ACCESS read-create STATUS current",
      "ja": "capwapBaseWtpProfileWtpReportIntervalのOBJECT-TYPE SYNTAX Unsigned32のユニットは \"秒\" MAX-ACCESSはリード作成しますステータス現在の"
    },
    {
      "indent": 4,
      "text": "DESCRIPTION\n    \"Represents the interval for WTP to send the Decryption Error\n     report.\"\nREFERENCE\n    \"Section 4.7.11 of CAPWAP Protocol Specification, RFC 5415.\"\nDEFVAL { 120 }\n::= { capwapBaseWtpProfileEntry 16 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpStatisticsTimer OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS       \"second\"\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the interval the WTP uses between the WTP Event\n         Requests it transmits to the AC to communicate its statistics,\n         in seconds.\"\n    REFERENCE\n        \"Section 4.7.14 of CAPWAP Protocol Specification, RFC 5415.\"\n    DEFVAL { 120 }\n    ::= { capwapBaseWtpProfileEntry 17 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpEcnSupport OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  limited(0),\n                  fullAndLimited(1)\n                }\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the support for the Explicit Congestion Notification\n         (ECN) bits, as defined in [RFC3168].\n         The following enumerated values are supported:\n           limited(0)        - Limited ECN support\n           fullAndLimited(1) - Full and limited ECN support\n         Note that the CAPWAP field [RFC5415] modeled by this\n         object takes zero as starting value; this MIB object follows\n         that rule.\"\n    REFERENCE\n        \"Section 4.6.25 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpProfileEntry 18 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileRowStatus OBJECT-TYPE SYNTAX RowStatus MAX-ACCESS read-create STATUS current DESCRIPTION \"This object is used to create, modify, and/or delete a row",
      "ja": "capwapBaseWtpProfileRowStatus OBJECT-TYPE構文RowStatus MAX-ACCESS読作成ステータス現在の説明は「このオブジェクトは、作成、変更、及び/又は行を削除するのに使用され"
    },
    {
      "indent": 9,
      "text": "in this table.\nThe value of capwapBaseWtpProfileName,\ncapwapBaseWtpProfileWtpName and capwapBaseWtpProfileWtpLocation\ncan be changed when this object is in state 'active' or in\n'notInService'.\nThe other objects in a row can be modified only when the value\nof this object in the corresponding conceptual row is not\n'active'.  Thus, to modify one or more of the objects in\nthis conceptual row:\n     a. change the row status to 'notInService'\n     b. change the values of the row\n     c. change the row status to 'active'\nThe capwapBaseWtpProfileRowStatus may be changed to 'active'\nif the managed objects capwapBaseWtpProfileName,\ncapwapBaseWtpProfileWtpMacAddress,\ncapwapBaseWtpProfileWtpModelNumber,\ncapwapBaseWtpProfileWtpName, and\ncapwapBaseWtpProfileWtpLocation in the conceptual row\nhave been assigned valid values.",
      "raw": true
    },
    {
      "indent": 4,
      "text": "     Deleting a WTP profile in use will disconnect the WTP from\n     the AC.  So the network management system SHOULD\n     ask the operator to confirm such an operation.\n     When a WTP profile entry is removed from the table,\n     the corresponding WTP Virtual Radio Interfaces are also\n     removed from the capwapBaseWirelessBindingTable and\n     ifTable [RFC2863].\n     Also, the related object instances SHOULD be removed from\n     the wireless binding MIB modules such as the IEEE 802.11\n     MIB module [IEEE.802-11.2007].\"\n::= { capwapBaseWtpProfileEntry 19 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "-- End of capwapBaseWtpProfileTable table",
      "ja": " -  capwapBaseWtpProfileTableテーブルの終わり"
    },
    {
      "indent": 0,
      "text": "-- capwapBaseWtpStateTable table",
      "ja": " -  capwapBaseWtpStateTableテーブル"
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpStateTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF CapwapBaseWtpStateEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A table of objects that indicate the AC's CAPWAP FSM state\n         for each WTP, and helps the operator to query a WTP's\n         current configuration.\"\n    ::= { capwapBaseWtps 2 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpStateEntry OBJECT-TYPE",
      "ja": "capwapBaseWtpStateEntryのOBJECT-TYPE"
    },
    {
      "indent": 4,
      "text": "SYNTAX      CapwapBaseWtpStateEntry\nMAX-ACCESS  not-accessible\nSTATUS      current\nDESCRIPTION\n    \"A set of objects that displays the AC's CAPWAP FSM state\n     for each WTP.\n     Also, the operator could query the current configuration\n     of a WTP by using the identifier of the corresponding\n     WTP profile.\"\nINDEX { capwapBaseWtpStateWtpId }\n::= { capwapBaseWtpStateTable 1 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "CapwapBaseWtpStateEntry ::= SEQUENCE {\n      capwapBaseWtpStateWtpId                   CapwapBaseWtpIdTC,\n      capwapBaseWtpStateWtpIpAddressType        InetAddressType,\n      capwapBaseWtpStateWtpIpAddress            InetAddress,\n      capwapBaseWtpStateWtpLocalIpAddressType   InetAddressType,\n      capwapBaseWtpStateWtpLocalIpAddress       InetAddress,\n      capwapBaseWtpStateWtpBaseMacAddress       PhysAddress,\n      capwapBaseWtpState                        INTEGER,\n      capwapBaseWtpStateWtpUpTime               TimeTicks,\n      capwapBaseWtpStateWtpCurrWtpProfileId     CapwapBaseWtpProfileIdTC\n    }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpStateWtpId OBJECT-TYPE\n    SYNTAX      CapwapBaseWtpIdTC\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier of a WTP.\"\n    ::= { capwapBaseWtpStateEntry 1 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpStateWtpIpAddressType OBJECT-TYPE\n    SYNTAX      InetAddressType\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the IP address type of a WTP.\n         Only ipv4(1) and ipv6(2) are supported by the object.\"\n    ::= { capwapBaseWtpStateEntry 2 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpStateWtpIpAddress OBJECT-TYPE SYNTAX InetAddress MAX-ACCESS read-only STATUS current DESCRIPTION \"Represents the IP address of a WTP that corresponds to the IP address in the IP packet header.",
      "ja": "capwapBaseWtpStateWtpIpAddressのOBJECT-TYPE構文InetAddress MAX-ACCESS read-only説明は「IPパケットヘッダ内のIPアドレスに対応するWTPのIPアドレスを表します。"
    },
    {
      "indent": 4,
      "text": "     The format of this IP address is determined by\n     the corresponding instance of object\n     capwapBaseWtpStateWtpIpAddressType.\"\nREFERENCE\n    \"Section 4 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseWtpStateEntry 3 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpStateWtpLocalIpAddressType OBJECT-TYPE\n    SYNTAX      InetAddressType\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the local IP address type of a WTP.\n         Only ipv4(1) and ipv6(2) are supported by the object.\"\n    ::= { capwapBaseWtpStateEntry 4 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpStateWtpLocalIpAddress OBJECT-TYPE\n    SYNTAX      InetAddress\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the local IP address of a WTP and models the\n         CAPWAP Local IPv4 Address or CAPWAP Local IPv6 Address fields\n         [RFC5415].\n         If a Network Address Translation (NAT) device is present\n         between WTP and AC, the value of\n         capwapBaseWtpStateWtpLocalIpAddress will be different from the\n         value of capwapBaseWtpStateWtpIpAddress.\n         The format of this IP address is determined by\n         the corresponding instance of object\n         capwapBaseWtpStateWtpLocalIpAddressType.\"\n    REFERENCE\n        \"Sections 4.6.11 and 4.6.12 of CAPWAP Protocol Specification,\n         RFC 5415.\"\n    ::= { capwapBaseWtpStateEntry 5 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpStateWtpBaseMacAddress  OBJECT-TYPE\n    SYNTAX      PhysAddress (SIZE(6|8))\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the WTP's Base MAC Address, which MAY be\n         assigned to the primary Ethernet interface.\n         The instance of the object corresponds to the Base MAC Address\n         sub-element in the CAPWAP protocol [RFC5415].\"\n    REFERENCE\n        \"Section 4.6.40 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpStateEntry 6 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpState  OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  dtls(1),\n                  join(2),\n                  image(3),\n                  configure(4),\n                  dataCheck(5),\n                  run(6),\n                  reset(7),\n                  dtlsTeardown(8),\n                  unknown(9)\n                }\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the various possibilities of the AC's CAPWAP FSM\n         state for each WTP.\n         The following enumerated values are supported:\n           dtls(1)         - DTLS negotiation states, which include\n                             DTLS setup, authorize, DTLS connect\n           join(2)         - The WTP is joining with the AC\n           image(3)        - The WTP is downloading software\n           configure(4)    - The WTP is getting configuration from\n                             the AC\n           dataCheck(5)    - The AC is waiting for the Data Channel Keep\n                             Alive Packet\n           run(6)          - The WTP enters the running state\n           reset(7)        - The AC transmits a reset request message\n                             to the WTP\n           dtlsTeardown(8) - DTLS session is torn down\n           unknown(9)      - Operator already prepared configuration\n                             for the WTP, while the WTP has not\n                             contacted the AC until now\"\n    REFERENCE\n        \"Section 2.3.1 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpStateEntry 7 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpStateWtpUpTime  OBJECT-TYPE\n    SYNTAX      TimeTicks\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the time (in hundredths of a second) since the\n         WTP has been in the running state (corresponding to the\n         value run(6) of capwapBaseWtpState).\"\n    ::= { capwapBaseWtpStateEntry 8 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpStateWtpCurrWtpProfileId OBJECT-TYPE",
      "ja": "capwapBaseWtpStateWtpCurrWtpProfileIdのOBJECT-TYPE"
    },
    {
      "indent": 4,
      "text": "SYNTAX      CapwapBaseWtpProfileIdTC\nMAX-ACCESS  read-only\nSTATUS      current\nDESCRIPTION\n    \"Represents the current identifier of a WTP profile.\n     The operator could query a WTP's current configuration\n     with the identifier of a WTP profile.\"\n::= { capwapBaseWtpStateEntry 9 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "-- End of capwapBaseWtpStateTable Table",
      "ja": " -  capwapBaseWtpStateTableテーブルの末尾"
    },
    {
      "indent": 0,
      "text": "-- capwapBaseWtpTable Table",
      "ja": " -  capwapBaseWtpTable表"
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF CapwapBaseWtpEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A table of objects that display properties of the WTPs\n         in running state.\"\n    ::= { capwapBaseWtps 3 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEntry  OBJECT-TYPE\n    SYNTAX      CapwapBaseWtpEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A set of objects that displays properties of the WTPs\n         in running state.\"\n    INDEX { capwapBaseWtpCurrId }\n    ::= { capwapBaseWtpTable 1 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "CapwapBaseWtpEntry ::= SEQUENCE {\n      capwapBaseWtpCurrId                       CapwapBaseWtpIdTC,\n      capwapBaseWtpPhyIndex                     PhysicalIndex,\n      capwapBaseWtpBaseMacAddress               PhysAddress,\n      capwapBaseWtpTunnelModeOptions            CapwapBaseTunnelModeTC,\n      capwapBaseWtpMacTypeOptions               CapwapBaseMacTypeTC,\n      capwapBaseWtpDiscoveryType                INTEGER,\n      capwapBaseWtpRadiosInUseNum               Gauge32,\n      capwapBaseWtpRadioNumLimit                Unsigned32,\n      capwapBaseWtpRetransmitCount              Counter32\n    }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpCurrId OBJECT-TYPE SYNTAX CapwapBaseWtpIdTC MAX-ACCESS not-accessible",
      "ja": "capwapBaseWtpCurrIdのOBJECT-TYPE SYNTAX CapwapBaseWtpIdTCアクセス不可能なMAX-ACCESS"
    },
    {
      "indent": 4,
      "text": "STATUS      current\nDESCRIPTION\n    \"Represents the unique identifier of a WTP in running state.\"\n::= { capwapBaseWtpEntry 1 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpPhyIndex OBJECT-TYPE\n    SYNTAX      PhysicalIndex\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique physical index of a physical entity\n         in the ENTITY-MIB module [RFC4133].\n         Information about a specific WTP such as its software version\n         could be accessed through this index.\"\n    ::= { capwapBaseWtpEntry 2 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpBaseMacAddress  OBJECT-TYPE\n    SYNTAX      PhysAddress (SIZE(6|8))\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the WTP's Base MAC Address, which MAY be assigned\n         to the primary Ethernet interface.\n         The instance of the object corresponds to the Base MAC Address\n         sub-element in the CAPWAP protocol [RFC5415].\"\n    REFERENCE\n        \"Section 4.6.40 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpEntry 3 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpTunnelModeOptions  OBJECT-TYPE\n    SYNTAX      CapwapBaseTunnelModeTC\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the tunneling modes of operation supported by\n         the WTP.\"\n    REFERENCE\n        \"Section 4.6.43 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpEntry 4 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpMacTypeOptions OBJECT-TYPE SYNTAX CapwapBaseMacTypeTC MAX-ACCESS read-only STATUS current DESCRIPTION \"Represents the MAC mode of operation supported by the WTP.\" REFERENCE \"Section 4.6.44 of CAPWAP Protocol Specification, RFC 5415.\"",
      "ja": "capwapBaseWtpMacTypeOptionsのOBJECT-TYPE SYNTAX CapwapBaseMacTypeTC MAX-ACCESS read-onlyステータス現在の説明は \"WTPでサポートされている操作のMACモードを表します。\" REFERENCE \"CAPWAPプロトコル仕様のセクション4.6.44、RFC 5415.\""
    },
    {
      "indent": 4,
      "text": "::= { capwapBaseWtpEntry 5 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpDiscoveryType OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  unknown(0),\n                  staticConfig(1),\n                  dhcp(2),\n                  dns(3),\n                  acRef(4)\n                }\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents how the WTP discovers the AC.\n         The following enumerated values are supported:\n           unknown(0)      - Unknown\n           staticConfig(1) - Static configuration\n           dhcp(2)         - DHCP\n           dns(3)          - DNS\n           acRef(4)        - AC referral\n         Note that the CAPWAP field [RFC5415] modeled by this\n         object takes zero as starting value; this MIB object\n         follows that rule.\"\n    REFERENCE\n        \"Section 4.6.21 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpEntry 6 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpRadiosInUseNum OBJECT-TYPE\n    SYNTAX      Gauge32 (0..255)\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of radios in use on the WTP.\"\n    REFERENCE\n        \"Section 4.6.41 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpEntry 7 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpRadioNumLimit OBJECT-TYPE\n    SYNTAX      Unsigned32 (0..255)\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the maximum radio number supported by the WTP.\"\n    REFERENCE\n        \"Section 4.6.41 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpEntry 8 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpRetransmitCount OBJECT-TYPE",
      "ja": "capwapBaseWtpRetransmitCountのOBJECT-TYPE"
    },
    {
      "indent": 4,
      "text": "SYNTAX      Counter32\nUNITS       \"retransmissions\"\nMAX-ACCESS  read-only\nSTATUS      current\nDESCRIPTION\n    \"Represents the number of retransmissions for a given\n     CAPWAP packet.\"\nREFERENCE\n    \"Section 4.8.8 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseWtpEntry 9 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "-- End of capwapBaseWtpTable table",
      "ja": " -  capwapBaseWtpTableテーブルの終わり"
    },
    {
      "indent": 0,
      "text": "-- capwapBaseWirelessBindingTable Table",
      "ja": " -  capwapBaseWirelessBindingTable表"
    },
    {
      "indent": 0,
      "text": "capwapBaseWirelessBindingTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF CapwapBaseWirelessBindingEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A table of objects that display the mappings between\n         WTP Virtual Radio Interfaces and PHY radios, and the\n         wireless binding type for each PHY radio.\n         As capwapBaseWirelessBindingTable stores the mappings between\n         PHY radios (Radio IDs) and the ifIndexes of WTP Virtual Radio\n         Interfaces, the operator can get the ifIndex information by\n         querying this table.  Such a query operation SHOULD run from\n         radio ID 1 to radio ID 31 according to [RFC5415],\n         and stop when an invalid ifIndex value (0) is returned.\n         Values of all objects in this table are persistent at\n         restart/reboot.\"\n    ::= { capwapBaseWtps 4 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWirelessBindingEntry  OBJECT-TYPE\n    SYNTAX      CapwapBaseWirelessBindingEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A set of objects that displays the mapping between\n         a specific WTP Virtual Radio Interface and a PHY\n         radio, and the wireless binding type for the PHY radio.\"\n    INDEX {\n      capwapBaseWtpProfileId,\n      capwapBaseWirelessBindingRadioId\n    }\n    ::= { capwapBaseWirelessBindingTable 1 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "CapwapBaseWirelessBindingEntry ::= SEQUENCE {\n      capwapBaseWirelessBindingRadioId              CapwapBaseRadioIdTC,\n      capwapBaseWirelessBindingVirtualRadioIfIndex  InterfaceIndex,\n      capwapBaseWirelessBindingType                 INTEGER\n    }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWirelessBindingRadioId OBJECT-TYPE\n    SYNTAX      CapwapBaseRadioIdTC\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"Represents the identifier of a PHY radio on a WTP, which\n         is required to be unique on a WTP.\n         For example, WTP A and WTP B use a same value of\n         capwapBaseWirelessBindingRadioId for their first radio.\"\n    REFERENCE\n        \"Section 4.3 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWirelessBindingEntry 1 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWirelessBindingVirtualRadioIfIndex OBJECT-TYPE\n    SYNTAX      InterfaceIndex\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the index value that uniquely identifies a\n         WLAN Virtual Radio Interface.  The interface identified by\n         a particular value of this index is the same interface as\n         identified by the same value of the ifIndex.\n         Before WTPs contact the AC to get configuration,\n         the operator configures WTP profiles for them.\n         The creation of a WTP profile triggers the system to\n         automatically create a specific number of WTP Virtual Radio\n         Interfaces and add a new row object in the\n         capwapBaseWirelessBindingTable without manual intervention.\n         As most MIB modules use the ifIndex to identify an interface\n         for configuration and statistical data (for example, the IEEE\n         802.11 MIB module [IEEE.802-11.2007]), it will be easy to\n         reuse other wireless binding MIB modules through the WTP\n         Virtual Radio Interface in the Centralized WLAN\n         Architecture.\"\n    ::= { capwapBaseWirelessBindingEntry 2 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWirelessBindingType OBJECT-TYPE SYNTAX INTEGER { dot11(1), epc(3) } MAX-ACCESS read-only",
      "ja": "capwapBaseWirelessBindingTypeのOBJECT-TYPE SYNTAX INTEGER {DOT11（1）、EPC（3）} MAX-ACCESS読み取り専用"
    },
    {
      "indent": 4,
      "text": "STATUS      current\nDESCRIPTION\n    \"Represents the wireless binding type for the radio.\n     The following enumerated values are supported:\n       dot11(1) - IEEE 802.11\n       epc(3)   - EPCGlobal\"\nREFERENCE\n    \"Section 4.3 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseWirelessBindingEntry 3 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "-- End of capwapBaseWirelessBindingTable Table",
      "ja": " -  capwapBaseWirelessBindingTableテーブルの末尾"
    },
    {
      "indent": 0,
      "text": "-- capwapBaseStationTable Table",
      "ja": " -  capwapBaseStationTable表"
    },
    {
      "indent": 0,
      "text": "capwapBaseStationTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF CapwapBaseStationEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A table of objects that display stations that are accessing\n         the wireless service provided by the AC.\"\n    REFERENCE\n        \"Section 4.6.8 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtps 5 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseStationEntry OBJECT-TYPE\n    SYNTAX      CapwapBaseStationEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A set of objects that displays a station that is\n         associated with the specific radio on the WTP.\n         Note that in some cases such as roaming that a station may\n         simultaneously associate with two WTPs for some (short) time.\n         The MIB implementation MUST ensure there is only one valid\n         and meaningful entry for a specific station.\"\n    INDEX { capwapBaseStationId }\n    ::= { capwapBaseStationTable 1 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "CapwapBaseStationEntry ::= SEQUENCE {\n      capwapBaseStationId            CapwapBaseStationIdTC,\n      capwapBaseStationWtpId         CapwapBaseWtpIdTC,\n      capwapBaseStationWtpRadioId    CapwapBaseRadioIdTC,\n      capwapBaseStationAddedTime     DateAndTime,\n      capwapBaseStationVlanName      SnmpAdminString\n    }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseStationId OBJECT-TYPE\n    SYNTAX      CapwapBaseStationIdTC\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier of the station.\"\n    REFERENCE\n        \"Section 4.6.8 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseStationEntry 1 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseStationWtpId OBJECT-TYPE\n    SYNTAX      CapwapBaseWtpIdTC\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier of a WTP in running state.\"\n    ::= { capwapBaseStationEntry 2 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseStationWtpRadioId OBJECT-TYPE\n    SYNTAX      CapwapBaseRadioIdTC\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the identifier of a PHY radio on a WTP, which\n         is required to be unique on a WTP.\n         For example, WTP A and WTP B use a same value of\n         capwapBaseStationWtpRadioId for their first radio.\"\n    REFERENCE\n        \"Section 4.3 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseStationEntry 3 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseStationAddedTime OBJECT-TYPE\n    SYNTAX      DateAndTime\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the time when the station is added.\"\n    REFERENCE\n        \"Section 4.6.8 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseStationEntry 4 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseStationVlanName OBJECT-TYPE SYNTAX SnmpAdminString (SIZE(0..32)) MAX-ACCESS read-only STATUS current DESCRIPTION \"Represents VLAN name to which the station is associated.\" REFERENCE",
      "ja": "capwapBaseStationVlanName OBJECT-TYPE構文れるSnmpAdminString（SIZE（0 32））MAX-ACCESS read-only説明 \"ステーションが関連付けられているVLAN名を表します。\"参照"
    },
    {
      "indent": 4,
      "text": "    \"Section 4.6.8 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseStationEntry 5 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "-- End of capwapBaseStationTable Table",
      "ja": " -  capwapBaseStationTableテーブルの末尾"
    },
    {
      "indent": 0,
      "text": "-- capwapBaseWtpEventsStatsTable",
      "ja": " -  capwapBaseWtpEventsStatsTable"
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEventsStatsTable  OBJECT-TYPE\n    SYNTAX      SEQUENCE OF CapwapBaseWtpEventsStatsEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A table of objects that display the WTPs' events statistics.\"\n    REFERENCE\n        \"Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtps 6 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEventsStatsEntry  OBJECT-TYPE\n    SYNTAX      CapwapBaseWtpEventsStatsEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A set of objects that displays the events statistics\n         of a WTP.\"\n    REFERENCE\n        \"Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.\"\n    INDEX { capwapBaseWtpCurrId }\n    ::= { capwapBaseWtpEventsStatsTable 1 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "CapwapBaseWtpEventsStatsEntry ::= SEQUENCE {\n      capwapBaseWtpEventsStatsRebootCount            Counter32,\n      capwapBaseWtpEventsStatsInitCount              Counter32,\n      capwapBaseWtpEventsStatsLinkFailureCount       Counter32,\n      capwapBaseWtpEventsStatsSwFailureCount         Counter32,\n      capwapBaseWtpEventsStatsHwFailureCount         Counter32,\n      capwapBaseWtpEventsStatsOtherFailureCount      Counter32,\n      capwapBaseWtpEventsStatsUnknownFailureCount    Counter32,\n      capwapBaseWtpEventsStatsLastFailureType        INTEGER\n    }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEventsStatsRebootCount OBJECT-TYPE SYNTAX Counter32 MAX-ACCESS read-only STATUS current DESCRIPTION \"Represents the number of reboots that have occurred due to a WTP crash.",
      "ja": "capwapBaseWtpEventsStatsRebootCountのOBJECT-TYPE SYNTAXカウンタACCESS read-onlyステータス現在の説明は「WTPのクラッシュが原因で発生した再起動の回数を表します。"
    },
    {
      "indent": 4,
      "text": "     Note that the CAPWAP field [RFC5415] modeled by this counter\n     takes the value 65535 to indicate that the information is not\n     available on the WTP.  This MIB object does not follow this\n     behavior, which would not be standard in SMIv2.  If the WTP\n     does not have the information, the agent will not instantiate\n     the object.\"\nREFERENCE\n    \"Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseWtpEventsStatsEntry 1 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEventsStatsInitCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of reboots that have occurred at the\n         request of a CAPWAP protocol message, such as a change in\n         configuration that requires a reboot or an explicit CAPWAP\n         protocol reset request.\n         Note that the CAPWAP field [RFC5415] modeled by this counter\n         takes the value 65535 to indicate that the information is not\n         available on the WTP.  This MIB object does not follow this\n         behavior, which would not be standard in SMIv2.  If the WTP\n         does not have the information, the agent will not instantiate\n         the object.\"\n    REFERENCE\n        \"Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpEventsStatsEntry 2 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEventsStatsLinkFailureCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of times that a CAPWAP protocol\n         connection with an AC has failed due to link failures.\"\n    REFERENCE\n        \"Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpEventsStatsEntry 3 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEventsStatsSwFailureCount OBJECT-TYPE SYNTAX Counter32 MAX-ACCESS read-only STATUS current DESCRIPTION \"Represents the number of times that a CAPWAP protocol connection with an AC has failed due to software-related reasons.\"",
      "ja": "capwapBaseWtpEventsStatsSwFailureCountのOBJECT-TYPE SYNTAXカウンタACCESS read-only説明「AC有するCAPWAPプロトコル接続によるソフトウェア関連の理由で失敗した回数を表します。」"
    },
    {
      "indent": 4,
      "text": "REFERENCE\n    \"Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseWtpEventsStatsEntry 4 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEventsStatsHwFailureCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of times that a CAPWAP protocol\n         connection with an AC has failed due to hardware-related\n         reasons.\"\n    REFERENCE\n        \"Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpEventsStatsEntry 5 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEventsStatsOtherFailureCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of times that a CAPWAP protocol\n         connection with an AC has failed due to known reasons, other\n         than the AC-initiated, link, software or hardware failures.\"\n    REFERENCE\n        \"Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpEventsStatsEntry 6 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEventsStatsUnknownFailureCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of times that a CAPWAP protocol\n         connection with an AC has failed for unknown reasons.\"\n    REFERENCE\n        \"Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpEventsStatsEntry 7 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEventsStatsLastFailureType OBJECT-TYPE SYNTAX INTEGER { unsupported(0), acInit(1), linkFailure(2), swFailure(3), hwFailure(4), otherFailure(5), unknown(255)",
      "ja": "capwapBaseWtpEventsStatsLastFailureTypeのOBJECT-TYPE SYNTAX INTEGER {サポートされていない（0）、acInit（1）、あるlinkFailure（2）、swFailure（3）、hwFailure（4）、otherFailure（5）、不明（255）"
    },
    {
      "indent": 4,
      "text": "            }\nMAX-ACCESS  read-only\nSTATUS      current\nDESCRIPTION\n    \"Represents the failure type of the most recent WTP failure.\n     The following enumerated values are supported:\n       unsupported(0)  - Not supported\n       acInit(1)       - The AC initiated\n       linkFailure(2)  - Link failure\n       swFailure(3)    - Software failure\n       hwFailure(4)    - Hardware failure\n       otherFailure(5) - Other failure\n       unknown(255)    - Unknown (e.g., WTP doesn't keep track\n                         of info)\n     Note that the CAPWAP field [RFC5415] modeled by this\n     object takes zero as starting value; this MIB object\n     follows that rule.\"\nREFERENCE\n    \"Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseWtpEventsStatsEntry 8 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "-- End of capwapBaseWtpEventsStatsTable table",
      "ja": " -  capwapBaseWtpEventsStatsTableテーブルの終わり"
    },
    {
      "indent": 0,
      "text": "-- capwapBaseRadioEventsStatsTable table",
      "ja": " -  capwapBaseRadioEventsStatsTableテーブル"
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsTable  OBJECT-TYPE\n    SYNTAX      SEQUENCE OF CapwapBaseRadioEventsStatsEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A table of objects that display statistics on the radios'\n         behaviors and reasons why the WTP radio has been reset.\n         To get the events statistics of all radios on a specific WTP\n         (identified by the capwapBaseWtpCurrId), a query\n         operation SHOULD run from radio ID 1 to radio ID 31 until there\n         is no data returned.  The radio ID here corresponds to the\n         object capwapBaseRadioEventsWtpRadioId.  If the previous MIB\n         operations such as query on the capwapBaseWirelessBindingTable\n         know the exact value of each radio ID, the query operation on\n         the capwapBaseRadioEventsStatsTable could use that value\n         of Radio IDs.\"\n    REFERENCE\n        \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtps 7 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsEntry OBJECT-TYPE SYNTAX CapwapBaseRadioEventsStatsEntry",
      "ja": "capwapBaseRadioEventsStatsEntryのOBJECT-TYPE SYNTAX CapwapBaseRadioEventsStatsEntry"
    },
    {
      "indent": 4,
      "text": "MAX-ACCESS  not-accessible\nSTATUS      current\nDESCRIPTION\n    \"A set of objects that displays the statistical data of\n     events that happened on a specific radio of a WTP.\"\nINDEX { capwapBaseWtpCurrId, capwapBaseRadioEventsWtpRadioId }\n::= { capwapBaseRadioEventsStatsTable 1 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "CapwapBaseRadioEventsStatsEntry ::= SEQUENCE {\n      capwapBaseRadioEventsWtpRadioId             CapwapBaseRadioIdTC,\n      capwapBaseRadioEventsStatsResetCount             Counter32,\n      capwapBaseRadioEventsStatsSwFailureCount         Counter32,\n      capwapBaseRadioEventsStatsHwFailureCount         Counter32,\n      capwapBaseRadioEventsStatsOtherFailureCount      Counter32,\n      capwapBaseRadioEventsStatsUnknownFailureCount    Counter32,\n      capwapBaseRadioEventsStatsConfigUpdateCount      Counter32,\n      capwapBaseRadioEventsStatsChannelChangeCount     Counter32,\n      capwapBaseRadioEventsStatsBandChangeCount        Counter32,\n      capwapBaseRadioEventsStatsCurrNoiseFloor         Integer32,\n      capwapBaseRadioEventsStatsDecryptErrorCount      Counter32,\n      capwapBaseRadioEventsStatsLastFailureType        INTEGER\n    }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsWtpRadioId OBJECT-TYPE\n     SYNTAX      CapwapBaseRadioIdTC\n     MAX-ACCESS  not-accessible\n     STATUS      current\n     DESCRIPTION\n         \"Represents the identifier of a PHY radio on a WTP, which\n          is required to be unique on a WTP.\n          For example, WTP A and WTP B use the same value of\n          capwapBaseRadioEventsWtpRadioId for their first radio.\"\n     REFERENCE\n         \"Section 4.3 of CAPWAP Protocol Specification, RFC 5415.\"\n     ::= { capwapBaseRadioEventsStatsEntry 1 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsResetCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of times that the radio has been\n         reset.\"\n    REFERENCE\n        \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseRadioEventsStatsEntry 2 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsSwFailureCount OBJECT-TYPE",
      "ja": "capwapBaseRadioEventsStatsSwFailureCountのOBJECT-TYPE"
    },
    {
      "indent": 4,
      "text": "SYNTAX      Counter32\nMAX-ACCESS  read-only\nSTATUS      current\nDESCRIPTION\n    \"Represents the number of times that the radio has failed due\n     to software-related reasons.\"\nREFERENCE\n    \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseRadioEventsStatsEntry 3 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsHwFailureCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of times that the radio has failed due\n         to hardware-related reasons.\"\n    REFERENCE\n        \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseRadioEventsStatsEntry 4 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsOtherFailureCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of times that the radio has failed due to\n         known reasons, other than software or hardware failure.\"\n    REFERENCE\n        \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseRadioEventsStatsEntry 5 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsUnknownFailureCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of times that the radio has failed for\n         unknown reasons.\"\n    REFERENCE\n        \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseRadioEventsStatsEntry 6 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsConfigUpdateCount OBJECT-TYPE SYNTAX Counter32 MAX-ACCESS read-only STATUS current DESCRIPTION",
      "ja": "capwapBaseRadioEventsStatsConfigUpdateCountのOBJECT-TYPE SYNTAXカウンタACCESS read-onlyステータス現在の説明"
    },
    {
      "indent": 4,
      "text": "    \"Represents the number of times that the radio configuration has\n     been updated.\"\nREFERENCE\n    \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseRadioEventsStatsEntry 7 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsChannelChangeCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of times that the radio channel has\n         been changed.\"\n    REFERENCE\n        \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseRadioEventsStatsEntry 8 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsBandChangeCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of times that the radio has changed\n         frequency bands.\"\n    REFERENCE\n        \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseRadioEventsStatsEntry 9 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsCurrNoiseFloor OBJECT-TYPE\n    SYNTAX      Integer32\n    UNITS       \"dBm\"\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the noise floor of the radio receiver in units of\n         dBm.\"\n    REFERENCE\n        \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseRadioEventsStatsEntry 10 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsDecryptErrorCount OBJECT-TYPE SYNTAX Counter32 MAX-ACCESS read-only STATUS current DESCRIPTION \"Represents the number of decryption errors that have occurred on the WTP. Note that this field is only valid in cases where the WTP provides encryption/decryption services.\"",
      "ja": "capwapBaseRadioEventsStatsDecryptErrorCountのOBJECT-TYPE SYNTAXカウンタACCESS read-onlyステータス現在の説明は「WTPで発生した復号化エラーの数を表します。このフィールドは、WTPは、暗号化/復号化サービスを提供しています場合にのみ有効であることに注意してください。」"
    },
    {
      "indent": 4,
      "text": "REFERENCE\n    \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseRadioEventsStatsEntry 11 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsLastFailureType OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  unsupported(0),\n                  swFailure(1),\n                  hwFailure(2),\n                  otherFailure(3),\n                  unknown(255)\n                }\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the failure type of the most recent radio failure.\n         The following enumerated values are supported:\n           unsupported(0)  - Not supported\n           swFailure(1)    - Software failure\n           hwFailure(2)    - Hardware failure\n           otherFailure(3) - Other failure\n           unknown(255)    - Unknown\n         Note that the CAPWAP field [RFC5415] modeled by this\n         object takes zero as starting value; this MIB object follows\n         that rule.\"\n    REFERENCE\n        \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseRadioEventsStatsEntry 12 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "-- End of capwapBaseRadioEventsStatsTable table",
      "ja": " -  capwapBaseRadioEventsStatsTableテーブルの終わり"
    },
    {
      "indent": 0,
      "text": "-- End of WTP Objects Group",
      "ja": " -  WTPの終わりには、グループオブジェクト"
    },
    {
      "indent": 0,
      "text": "-- CAPWAP Base Parameters Group",
      "ja": " -  CAPWAP基本パラメータグループ"
    },
    {
      "indent": 0,
      "text": "capwapBaseParameters OBJECT IDENTIFIER\n    ::= { capwapBaseObjects 3 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseAcMaxRetransmit OBJECT-TYPE SYNTAX Unsigned32 MAX-ACCESS read-write STATUS current DESCRIPTION \"Represents the maximum number of retransmissions for a given CAPWAP packet before the link layer considers the peer dead. The value of the object is persistent at restart/reboot.\" REFERENCE",
      "ja": "capwapBaseAcMaxRetransmitのOBJECT-TYPE構文Unsigned32 MAX-ACCESSの読み取りと書き込みステータス現在の説明は「リンク層は、ピアが死んだ。オブジェクトの値が再起動/再起動時に永続的であると考える前に、与えられたCAPWAPパケットの再送信の最大数を表します。」参照"
    },
    {
      "indent": 4,
      "text": "    \"Section 4.8.7 of CAPWAP Protocol Specification, RFC 5415.\"\nDEFVAL { 5 }\n::= { capwapBaseParameters 1 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseAcChangeStatePendingTimer OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS       \"second\"\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents the maximum time, in seconds, the AC will wait\n         for the Change State Event Request from the WTP after having\n         transmitted a successful Configuration Status Response\n         message.\n         The value of the object is persistent at restart/reboot.\"\n    REFERENCE\n        \"Section 4.7.1 of CAPWAP Protocol Specification, RFC 5415.\"\n    DEFVAL { 25 }\n    ::= { capwapBaseParameters 2 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseAcDataCheckTimer OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS       \"second\"\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents The number of seconds the AC will wait for\n         the Data Channel Keep Alive, which is required by the\n         CAPWAP state machine's Data Check state.\n         The AC resets the state machine if this timer expires\n         prior to transitioning to the next state.\n         The value of the object is persistent at restart/reboot.\"\n    REFERENCE\n        \"Section 4.7.4 of CAPWAP Protocol Specification, RFC 5415.\"\n    DEFVAL { 30 }\n    ::= { capwapBaseParameters 3 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseAcDTLSSessionDeleteTimer OBJECT-TYPE SYNTAX Unsigned32 UNITS \"second\" MAX-ACCESS read-write STATUS current DESCRIPTION \"Represents the minimum time, in seconds, the AC MUST wait for DTLS session deletion. The value of the object is persistent at restart/reboot.\" REFERENCE \"Section 4.7.6 of CAPWAP Protocol Specification, RFC 5415.\"",
      "ja": "capwapBaseAcDTLSSessionDeleteTimerのOBJECT-TYPE構文Unsigned32 UNITSの「第二」MAX-ACCESS読み取りと書き込みステータス現在の説明「最小時間を表し、秒単位で、ACは、DTLSセッションの削除のために待たなければなりません。オブジェクトの値が再起動/再起動時に永続的です。」 REFERENCE \"CAPWAPプロトコル仕様の4.7.6項、RFC 5415.\""
    },
    {
      "indent": 4,
      "text": "DEFVAL { 5 }\n::= { capwapBaseParameters 4 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseAcEchoInterval OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS       \"second\"\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents the minimum time, in seconds, between sending Echo\n         Request messages to the AC with which the WTP has joined.\n         The value of the object is persistent at restart/reboot.\"\n    REFERENCE\n        \"Section 4.7.7 of CAPWAP Protocol Specification, RFC 5415.\"\n    DEFVAL { 30 }\n    ::= { capwapBaseParameters 5 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseAcRetransmitInterval OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS       \"second\"\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents the minimum time, in seconds, in which a\n         non-acknowledged CAPWAP packet will be retransmitted.\n         The value of the object is persistent at restart/reboot.\"\n    REFERENCE\n        \"Section 4.7.12 of CAPWAP Protocol Specification, RFC 5415.\"\n    DEFVAL { 3 }\n    ::= { capwapBaseParameters 6 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseAcSilentInterval OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS       \"second\"\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents the minimum time, in seconds, during which the AC\n         SHOULD ignore all CAPWAP and DTLS packets received from the\n         WTP that is in the Sulking state.\n         The value of the object is persistent at restart/reboot.\"\n    REFERENCE\n        \"Section 4.7.13 of CAPWAP Protocol Specification, RFC 5415.\"\n    DEFVAL { 30 }\n    ::= { capwapBaseParameters 7 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseAcWaitDTLSTimer OBJECT-TYPE SYNTAX Unsigned32 (30..4294967295)",
      "ja": "capwapBaseAcWaitDTLSTimerのOBJECT-TYPE構文Unsigned32（30..4294967295）"
    },
    {
      "indent": 4,
      "text": "UNITS       \"second\"\nMAX-ACCESS  read-write\nSTATUS      current\nDESCRIPTION\n    \"Represents the maximum time, in seconds, the AC MUST wait\n     without having received a DTLS Handshake message from an AC.\n     This timer MUST be greater than 30 seconds.\n     The value of the object is persistent at restart/reboot.\"\nREFERENCE\n    \"Section 4.7.15 of CAPWAP Protocol Specification, RFC 5415.\"\nDEFVAL { 60 }\n::= { capwapBaseParameters 8 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseAcWaitJoinTimer OBJECT-TYPE\n    SYNTAX      Unsigned32 (20..4294967295)\n    UNITS       \"second\"\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents the maximum time, in seconds, the AC will wait\n         after the DTLS session has been established until it receives\n         the Join Request from the WTP.  This timer MUST be greater\n         than 20 seconds.\n         The value of the object is persistent at restart/reboot.\"\n    REFERENCE\n        \"Section 4.7.16 of CAPWAP Protocol Specification, RFC 5415.\"\n    DEFVAL { 60 }\n    ::= { capwapBaseParameters 9 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseAcEcnSupport OBJECT-TYPE SYNTAX INTEGER { limited(0), fullAndLimited(1) } MAX-ACCESS read-write STATUS current DESCRIPTION \"Represents the support for the Explicit Congestion Notification (ECN) bits, as defined in [RFC3168]. The value of the object is persistent at restart/reboot. The following enumerated values are supported: limited(0) - Limited ECN support fullAndLimited(1) - Full and limited ECN support Note that the CAPWAP field [RFC5415] modeled by this object takes zero as starting value; this MIB object follows that rule.\" REFERENCE \"Section 4.6.25 of CAPWAP Protocol Specification, RFC 5415.\"",
      "ja": "capwapBaseAcEcnSupportのOBJECT-TYPE SYNTAX INTEGERは{限定（0）、fullAndLimited（1）} MAX-ACCESS読み取りと書き込みステータス現在の説明は「明示的輻輳通知（ECN）ビット、[RFC3168]で定義されている。値のためのサポートを表しオブジェクトは、再起動/再起動時に持続し、次の列挙値がサポートされています。リミテッド（0） - 限定ECNサポートfullAndLimited（1） - フルおよび限定ECNサポート注このオブジェクトがモデル化されたCAPWAPフィールド[RFC5415]を出発物質としてゼロをとること値;このMIBオブジェクトは、そのルールに従います「。 REFERENCE \"CAPWAPプロトコル仕様のセクション4.6.25、RFC 5415.\""
    },
    {
      "indent": 4,
      "text": "::= { capwapBaseParameters 10 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "-- End of CAPWAP Base Parameters Group",
      "ja": " -  CAPWAP基本パラメータグループの終わり"
    },
    {
      "indent": 0,
      "text": "-- CAPWAP Statistics Group",
      "ja": " -  CAPWAP統計グループ"
    },
    {
      "indent": 0,
      "text": "capwapBaseStats OBJECT IDENTIFIER\n    ::= { capwapBaseObjects 4 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseFailedDTLSAuthFailureCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of failed DTLS session establishment\n         attempts due to authentication failures.\"\n    REFERENCE\n        \"Section 4.8.3 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseStats 1 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseFailedDTLSSessionCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of failed DTLS session\n         establishment attempts.\"\n    REFERENCE\n        \"Section 4.8.4 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseStats 2 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "-- Notifications",
      "ja": " - 通知"
    },
    {
      "indent": 0,
      "text": "capwapBaseChannelUp NOTIFICATION-TYPE\n    OBJECTS     {\n                  capwapBaseNtfWtpId,\n                  capwapBaseNtfChannelType,\n                  capwapBaseNtfAuthenMethod\n                }\n    STATUS      current\n    DESCRIPTION\n        \"This notification is sent by the AC when a CAPWAP channel\n         is established.\n         The notification is separated for data or control channel.\"\n    ::= { capwapBaseNotifications 1 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseChannelDown NOTIFICATION-TYPE",
      "ja": "capwapBaseChannelDownのNOTIFICATION-TYPE"
    },
    {
      "indent": 4,
      "text": "OBJECTS     {\n              capwapBaseNtfWtpId,\n              capwapBaseNtfChannelType,\n              capwapBaseNtfChannelDownReason\n            }\nSTATUS      current\nDESCRIPTION\n    \"This notification is sent by the AC when a CAPWAP channel\n     is down.\n     The notification is separated for data or control channel.\"\n::= { capwapBaseNotifications 2 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseDecryptErrorReport NOTIFICATION-TYPE\n    OBJECTS     {\n                  capwapBaseNtfWtpId,\n                  capwapBaseNtfRadioId,\n                  capwapBaseNtfStationIdList\n                }\n    STATUS      current\n    DESCRIPTION\n        \"This notification is generated when a WTP has had a\n         decryption error since the last report.\"\n    REFERENCE\n        \"Section 4.6.17 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifications 3 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseJoinFailure NOTIFICATION-TYPE\n    OBJECTS     {\n                  capwapBaseNtfWtpId,\n                  capwapBaseNtfJoinFailureReason\n                }\n    STATUS      current\n    DESCRIPTION\n        \"This notification is generated when a WTP fails to join.\"\n    REFERENCE\n        \"Section 4.6.35 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifications 4 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseImageUpgradeFailure NOTIFICATION-TYPE OBJECTS { capwapBaseNtfWtpId, capwapBaseNtfImageFailureReason } STATUS current DESCRIPTION \"This notification is generated when a WTP fails to update the firmware image.\" REFERENCE",
      "ja": "capwapBaseImageUpgradeFailure NOTIFICATION-TYPEオブジェクト{capwapBaseNtfWtpId、capwapBaseNtfImageFailureReason} STATUS current DESCRIPTION \"この通知はWTPは、ファームウェアイメージを更新するために失敗したときに生成されます。\"参照"
    },
    {
      "indent": 4,
      "text": "    \"Section 4.6.35 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseNotifications 5 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseConfigMsgError NOTIFICATION-TYPE\n    OBJECTS     {\n                  capwapBaseNtfWtpId,\n                  capwapBaseNtfConfigMsgErrorType,\n                  capwapBaseNtfMsgErrorElements\n                }\n    STATUS      current\n    DESCRIPTION\n        \"This notification is generated when a WTP receives message\n         elements in the configuration management messages that it\n         is unable to apply locally.\"\n    REFERENCE\n        \"Section 4.6.35 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifications 6 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioOperableStatus NOTIFICATION-TYPE\n    OBJECTS     {\n                  capwapBaseNtfWtpId,\n                  capwapBaseNtfRadioId,\n                  capwapBaseNtfRadioOperStatusFlag,\n                  capwapBaseNtfRadioStatusCause\n                }\n    STATUS      current\n    DESCRIPTION\n        \"The notification is generated when a radio's operational state\n         has changed.\"\n    REFERENCE\n        \"Section 4.6.34 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifications 7 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseAuthenFailure NOTIFICATION-TYPE\n    OBJECTS     {\n                  capwapBaseNtfWtpId,\n                  capwapBaseNtfChannelType,\n                  capwapBaseNtfAuthenMethod,\n                  capwapBaseNtfAuthenFailureReason\n                }\n    STATUS      current\n    DESCRIPTION\n        \"This is notification of an authentication failure event\n         and provides the reason for it.\"\n    ::= { capwapBaseNotifications 8 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "-- Objects used only in notifications",
      "ja": " - オブジェクトは、通知にのみ使用しました"
    },
    {
      "indent": 0,
      "text": "-- Notification Objects\ncapwapBaseNotifyVarObjects OBJECT IDENTIFIER\n    ::= { capwapBaseObjects 5 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfWtpId OBJECT-TYPE\n    SYNTAX      CapwapBaseWtpIdTC\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier of a WTP.\"\n    ::= { capwapBaseNotifyVarObjects 1 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfRadioId OBJECT-TYPE\n    SYNTAX      CapwapBaseRadioIdTC\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents the identifier of a PHY radio on a WTP, which is\n         only required to be unique on a WTP.\n         For example, WTP A and WTP B can use the same value of\n         capwapBaseNtfRadioId for their first radio.\"\n    REFERENCE\n        \"Section 4.3 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifyVarObjects 2 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfChannelType OBJECT-TYPE\n    SYNTAX      CapwapBaseChannelTypeTC\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents the channel type for the CAPWAP protocol.\"\n    ::= { capwapBaseNotifyVarObjects 3 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfAuthenMethod OBJECT-TYPE\n    SYNTAX      CapwapBaseAuthenMethodTC\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents the authentication method for the CAPWAP Channel.\"\n    ::= { capwapBaseNotifyVarObjects 4 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfChannelDownReason OBJECT-TYPE SYNTAX INTEGER { timeout(1), rekeyFailure(2), acRebootWtp(3), dtlsError(4), maxRetransmit(5)",
      "ja": "capwapBaseNtfChannelDownReasonのOBJECT-TYPE SYNTAX INTEGER {タイムアウト（1）、rekeyFailure（2）、acRebootWtp（3）、dtlsError（4）、maxRetransmit（5）"
    },
    {
      "indent": 4,
      "text": "            }\nMAX-ACCESS  accessible-for-notify\nSTATUS      current\nDESCRIPTION\n    \"Represents the reason the channel is down.\n     The following enumerated values are supported:\n       timeout(1)       - The keepalive timed out\n       rekeyFailure(2)  - Rekey process failed; channel will be\n                          broken\n       acRebootWtp(3)   - The AC rebooted the WTP\n       dtlsError(4)     - DTLS notifications: DTLSAborted,\n                          DTLSReassemblyFailure, DTLSPeerDisconnect,\n                          or frequent DTLSDecapFailure\n       maxRetransmit(5) - The underlying reliable transport's\n                          RetransmitCount counter has reached the\n                          MaxRetransmit variable\"\n::= { capwapBaseNotifyVarObjects 5 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfStationIdList OBJECT-TYPE\n    SYNTAX      LongUtf8String (SIZE (6..1024))\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents a list of station MAC addresses separated by\n         semicolons.\"\n    REFERENCE\n        \"Section 4.6.17 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifyVarObjects 6 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfAuthenFailureReason OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  keyMismatch(1),\n                  invalidCert(2),\n                  reassemblyFailure(3),\n                  decapFailure(4),\n                  encapFailure(5),\n                  timeout(6),\n                  unknown(8)\n                }\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents the reason for WTP authorization failure.\n         The following enumerated values are supported:\n           keyMismatch(1)       - WTP's and AC's keys did not match\n           invalidCert(2)       - Certification is not valid\n           reassemblyFailure(3) - Fragment reassembly failure\n           decapFailure(4)      - Decapsulation error encapFailure(5)      - Encapsulation error\n           timeout(6)           - WaitDTLS timer timeout\n           unknown(8)           - Unknown reason\"\n    REFERENCE\n        \"Section 2.3.1 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifyVarObjects 7 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfRadioOperStatusFlag OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  operable(0),\n                  inoperable(1)\n                }\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents the operation status of a radio.\n         The following enumerated values are supported:\n           operable(0)   - The radio is operable\n           inoperable(1) - The radio is inoperable, and the\n                           capwapBaseNtfRadioStatusCause object\n                           gives the reason in detail\n         Note that the CAPWAP field [RFC5415] modeled by this\n         object takes zero as starting value; this MIB object\n         follows that rule.\"\n    REFERENCE\n        \"Section 4.6.34 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifyVarObjects 8 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfRadioStatusCause OBJECT-TYPE SYNTAX INTEGER { normal(0), hwError(1), swError(2), adminSet(3) } MAX-ACCESS accessible-for-notify STATUS current DESCRIPTION \"Represents the reason why the radio is out of service. The following enumerated values are supported: normal(0) - Normal status hwError(1) - Radio failure swError(2) - Software failure adminSet(3) - Administratively set Note that the CAPWAP field [RFC5415] modeled by this object takes zero as starting value; this MIB object follows that rule.\" REFERENCE",
      "ja": "capwapBaseNtfRadioStatusCauseのOBJECT-TYPE SYNTAX INTEGERは{正常（0）、hwError（1）、swError（2）、adminSet（3）} MAX-ACCESSアクセス可能のため、通知ステータス現在の説明は「無線がアウトオブサービスである理由を表します。以下の列挙値はサポートされている：（0）正常 - このオブジェクトがモデル化されたCAPWAPフィールド[RFC5415]はとしてゼロをとることが管理上設定注 - ラジオ故障swError（2） -   - ソフトウェア故障adminSet（3）（1）が正常状態hwError値を開始、このMIBオブジェクトがそのルールに従います「。参照"
    },
    {
      "indent": 4,
      "text": "    \"Section 4.6.34 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseNotifyVarObjects 9 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfJoinFailureReason  OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  unspecified(1),\n                  resDepletion(2),\n                  unknownSource(3),\n                  incorrectData(4),\n                  sessionIdInUse(5),\n                  unsupportedHw(6),\n                  unsupportedBinding(7)\n                }\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents the reason of join failure.\n         The following enumerated values are supported:\n           unspecified(1)        - Unspecified failure\n           resDepletion(2)       - Resource depletion\n           unknownSource(3)      - Unknown source\n           incorrectData(4)      - Incorrect data\n           sessionIdInUse(5)     - Session ID already in use\n           unsupportedHw(6)      - WTP hardware not supported\n           unsupportedBinding(7) - Binding not supported\"\n    REFERENCE\n        \"Section 4.6.35 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifyVarObjects 10 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfImageFailureReason  OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  invalidChecksum(1),\n                  invalidLength(2),\n                  other(3),\n                  inStorage(4)\n                }\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents the reason of image failure.\n         The following enumerated values are supported:\n           invalidChecksum(1) - Invalid checksum\n           invalidLength(2)   - Invalid data length\n           other(3)           - Other error\n           inStorage(4)       - Image already present\"\n    REFERENCE\n        \"Section 4.6.35 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifyVarObjects 11 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfConfigMsgErrorType  OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  unknownElement(1),\n                  unsupportedElement(2),\n                  unknownValue(3),\n                  unsupportedValue(4)\n                }\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents the type of configuration message error.\n         The following enumerated values are supported:\n           unknownElement(1)     - Unknown message element\n           unsupportedElement(2) - Unsupported message element\n           unknownValue(3)       - Unknown message element value\n           unsupportedValue(4)   - Unsupported message element value\"\n    REFERENCE\n        \"Section 4.6.36 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifyVarObjects 12 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfMsgErrorElements  OBJECT-TYPE\n    SYNTAX      SnmpAdminString\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents the message elements sent by the AC in the\n         Configuration Status Response message that caused the error.\"\n    REFERENCE\n        \"Section 4.6.36 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifyVarObjects 13 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "-- Notification Control\ncapwapBaseNotifyControlObjects OBJECT IDENTIFIER\n    ::= { capwapBaseObjects 6 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseChannelUpDownNotifyEnable  OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents whether the Channel Up / Channel Down notification\n         should be generated.\n         A value of true(1) means that the notification is enabled.\n         A value of false(2) means that the notification is disabled.\n         The value of the object is persistent at restart/reboot.\"\n    DEFVAL { false }\n    ::= { capwapBaseNotifyControlObjects 1 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseDecryptErrorNotifyEnable OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents whether the decryption error notification should\n         be generated.\n         A value of true(1) means that the notification is enabled.\n         A value of false(2) means that the notification is disabled.\n         The value of the object is persistent at restart/reboot.\"\n    DEFVAL { true }\n    ::= { capwapBaseNotifyControlObjects 2 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseJoinFailureNotifyEnable OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents whether the notification of a WTP join failure\n         should be generated.\n         A value of true(1) means that the notification is enabled.\n         A value of false(2) means that the notification is disabled.\n         The value of the object is persistent at restart/reboot.\"\n    DEFVAL { true }\n    ::= { capwapBaseNotifyControlObjects 3 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseImageUpgradeFailureNotifyEnable OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents whether the notification of a WTP image upgrade\n         failure should be generated.\n         A value of true(1) means that the notification is enabled.\n         A value of false(2) means that the notification is disabled.\n         The value of the object is persistent at restart/reboot.\"\n    DEFVAL { true }\n    ::= { capwapBaseNotifyControlObjects 4 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseConfigMsgErrorNotifyEnable OBJECT-TYPE SYNTAX TruthValue MAX-ACCESS read-write STATUS current DESCRIPTION \"Represents whether the notification of configuration message error should be generated. A value of true(1) means that the notification is enabled. A value of false(2) means that the notification is disabled.",
      "ja": "capwapBaseConfigMsgErrorNotifyEnable OBJECT-TYPEの構文のTruthValue MAX-ACCESS読み取りと書き込みステータス現在の説明「コンフィギュレーション・メッセージ・エラーの通知が生成されるべきか否かを示す。真の値（1）通知が有効であることを意味する。偽（2）手段の値通知が無効になっています。"
    },
    {
      "indent": 4,
      "text": "     The value of the object is persistent at restart/reboot.\"\nDEFVAL { false }\n::= { capwapBaseNotifyControlObjects 5 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioOperableStatusNotifyEnable OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents whether the notification of a radio's operational\n         state change should be generated.\n         A value of true(1) means that the notification is enabled.\n         A value of false(2) means that the notification is disabled.\n         The value of the object is persistent at restart/reboot.\"\n    DEFVAL { false }\n    ::= { capwapBaseNotifyControlObjects 6 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseAuthenFailureNotifyEnable OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents whether the notification of authentication failure\n         should be generated.\n         A value of true(1) means that the notification is enabled.\n         A value of false(2) means that the notification is disabled.\n         The value of the object is persistent at restart/reboot.\"\n    DEFVAL { true }\n    ::= { capwapBaseNotifyControlObjects 7 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "-- Module compliance",
      "ja": " - モジュールの遵守"
    },
    {
      "indent": 0,
      "text": "capwapBaseCompliances OBJECT IDENTIFIER\n    ::= { capwapBaseConformance 1 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseGroups OBJECT IDENTIFIER\n    ::= { capwapBaseConformance 2 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseCompliance MODULE-COMPLIANCE STATUS current DESCRIPTION \"Describes the requirements for conformance to the CAPWAP-BASE-MIB module.\"",
      "ja": "capwapBaseCompliance MODULE-COMPLIANCEステータス現在の説明は \"CAPWAP-BASE-MIBモジュールへの適合のための要件について説明します。\""
    },
    {
      "indent": 4,
      "text": "MODULE IF-MIB -- The Interfaces MIB, RFC 2863\nMANDATORY-GROUPS {\n   ifGeneralInformationGroup\n}",
      "raw": true
    },
    {
      "indent": 4,
      "text": "MODULE -- this module MANDATORY-GROUPS { capwapBaseAcNodeGroup, capwapBaseWtpProfileGroup, capwapBaseWtpStateGroup, capwapBaseWtpGroup, capwapBaseRadioGroup, capwapBaseStationGroup }",
      "ja": "MODULE  - このモジュールMANDATORY-GROUPS {capwapBaseAcNodeGroup、capwapBaseWtpProfileGroup、capwapBaseWtpStateGroup、capwapBaseWtpGroup、capwapBaseRadioGroup、capwapBaseStationGroup}"
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseAcNodeGroup2 DESCRIPTION \"The capwapBaseAcNodeGroup2 group is optional.\"",
      "ja": "GROUP capwapBaseAcNodeGroup2の説明は \"capwapBaseAcNodeGroup2グループはオプションです。\""
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseAcNameListGroup DESCRIPTION \"The capwapBaseAcNameListGroup group is optional.\"",
      "ja": "GROUP capwapBaseAcNameListGroupの説明は \"capwapBaseAcNameListGroupグループはオプションです。\""
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseMacAclsGroup DESCRIPTION \"The capwapBaseMacAclsGroup group is optional.\"",
      "ja": "GROUP capwapBaseMacAclsGroupの説明は \"capwapBaseMacAclsGroupグループはオプションです。\""
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseWtpProfileGroup2 DESCRIPTION \"The capwapBaseWtpProfileGroup2 group is optional.\"",
      "ja": "GROUP capwapBaseWtpProfileGroup2の説明は \"capwapBaseWtpProfileGroup2グループはオプションです。\""
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseWtpGroup2 DESCRIPTION \"The capwapBaseWtpGroup2 group is optional.\"",
      "ja": "GROUP capwapBaseWtpGroup2の説明は \"capwapBaseWtpGroup2グループはオプションです。\""
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseWtpEventsStatsGroup DESCRIPTION \"The capwapBaseWtpEventsStatsGroup group is optional.\"",
      "ja": "GROUP capwapBaseWtpEventsStatsGroupの説明は \"capwapBaseWtpEventsStatsGroupグループはオプションです。\""
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseRadioEventsStatsGroup DESCRIPTION \"The capwapBaseRadioEventsStatsGroup group is optional.\"",
      "ja": "GROUP capwapBaseRadioEventsStatsGroupの説明は \"capwapBaseRadioEventsStatsGroupグループはオプションです。\""
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseParametersGroup DESCRIPTION \"The capwapBaseParametersGroup group is optional.\"",
      "ja": "GROUP capwapBaseParametersGroupの説明は \"capwapBaseParametersGroupグループはオプションです。\""
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseStatsGroup DESCRIPTION \"The capwapBaseStatsGroup group is optional.\"",
      "ja": "GROUP capwapBaseStatsGroupの説明は \"capwapBaseStatsGroupグループはオプションです。\""
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseNotificationsGroup DESCRIPTION",
      "ja": "GROUP capwapBaseNotificationsGroup説明"
    },
    {
      "indent": 10,
      "text": "\"The capwapBaseNotificationsGroup group is optional.\"",
      "ja": "「capwapBaseNotificationsGroupグループはオプションです。」"
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseNotifyVarsGroup DESCRIPTION \"The capwapBaseNotifyVarsGroup group is optional. If capwapBaseNotificationsGroup is supported, this group must be implemented.\"",
      "ja": "GROUP capwapBaseNotifyVarsGroupの説明は「capwapBaseNotifyVarsGroupグループはオプションです。capwapBaseNotificationsGroupがサポートされている場合は、このグループが実施されなければなりません。」"
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseNotifyControlGroup\nDESCRIPTION\n   \"The capwapBaseNotifyControlGroup group is optional.\n    If capwapBaseNotificationsGroup is supported,\n    this group must be implemented.\"\n::= { capwapBaseCompliances 1 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseAcNodeGroup    OBJECT-GROUP\n    OBJECTS {\n      capwapBaseWtpSessions,\n      capwapBaseWtpSessionsLimit,\n      capwapBaseStationSessions,\n      capwapBaseStationSessionsLimit\n    }\n    STATUS  current\n    DESCRIPTION\n        \"A collection of objects that is used to represent\n         the basic properties of the AC from the CAPWAP\n         protocol perspective.\"\n    ::= { capwapBaseGroups 1 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseAcNodeGroup2   OBJECT-GROUP\n    OBJECTS {\n      capwapBaseDataChannelDTLSPolicyOptions,\n      capwapBaseControlChannelAuthenOptions\n     }\n    STATUS  current\n    DESCRIPTION\n        \"A collection of objects that is used to represent\n         the other properties (such as security) of the AC from\n         the CAPWAP protocol perspective.\"\n    ::= { capwapBaseGroups 2 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseAcNameListGroup OBJECT-GROUP OBJECTS { capwapBaseAcNameListName, capwapBaseAcNameListPriority, capwapBaseAcNameListRowStatus } STATUS current",
      "ja": "capwapBaseAcNameListGroupオブジェクト・グループオブジェクト{capwapBaseAcNameListName、capwapBaseAcNameListPriority、capwapBaseAcNameListRowStatus} STATUS電流"
    },
    {
      "indent": 4,
      "text": "DESCRIPTION\n    \"A collection of objects that is used to configure\n     the AC name list.\"\n::= { capwapBaseGroups 3 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseMacAclsGroup  OBJECT-GROUP\n    OBJECTS {\n      capwapBaseMacAclStationId,\n      capwapBaseMacAclRowStatus\n    }\n    STATUS  current\n    DESCRIPTION\n        \"A collection of objects that is used to configure\n         the stations ACL.\"\n    ::= { capwapBaseGroups 4 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileGroup    OBJECT-GROUP\n    OBJECTS {\n      capwapBaseWtpProfileName,\n      capwapBaseWtpProfileWtpMacAddress,\n      capwapBaseWtpProfileWtpModelNumber,\n      capwapBaseWtpProfileWtpName,\n      capwapBaseWtpProfileWtpLocation,\n      capwapBaseWtpProfileRowStatus\n    }\n    STATUS  current\n    DESCRIPTION\n        \"A collection of objects that is used to configure\n         the WTP profile.\"\n    ::= { capwapBaseGroups 5 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileGroup2 OBJECT-GROUP OBJECTS { capwapBaseWtpProfileWtpStaticIpEnable, capwapBaseWtpProfileWtpStaticIpType, capwapBaseWtpProfileWtpStaticIpAddress, capwapBaseWtpProfileWtpNetmask, capwapBaseWtpProfileWtpGateway, capwapBaseWtpProfileWtpFallbackEnable, capwapBaseWtpProfileWtpEchoInterval, capwapBaseWtpProfileWtpIdleTimeout, capwapBaseWtpProfileWtpMaxDiscoveryInterval, capwapBaseWtpProfileWtpReportInterval, capwapBaseWtpProfileWtpStatisticsTimer, capwapBaseWtpProfileWtpEcnSupport } STATUS current DESCRIPTION",
      "ja": "capwapBaseWtpProfileGroup2オブジェクト・グループオブジェクト{capwapBaseWtpProfileWtpStaticIpEnable、capwapBaseWtpProfileWtpStaticIpType、capwapBaseWtpProfileWtpStaticIpAddress、capwapBaseWtpProfileWtpNetmask、capwapBaseWtpProfileWtpGateway、capwapBaseWtpProfileWtpFallbackEnable、capwapBaseWtpProfileWtpEchoInterval、capwapBaseWtpProfileWtpIdleTimeout、capwapBaseWtpProfileWtpMaxDiscoveryInterval、capwapBaseWtpProfileWtpReportInterval、capwapBaseWtpProfileWtpStatisticsTimer、capwapBaseWtpProfileWtpEcnSupport} STATUSの現在の記述"
    },
    {
      "indent": 4,
      "text": "    \"A collection of optional objects that is used to\n     configure the WTP profile.\"\n::= { capwapBaseGroups 6 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpStateGroup    OBJECT-GROUP\n    OBJECTS {\n      capwapBaseWtpStateWtpIpAddressType,\n      capwapBaseWtpStateWtpIpAddress,\n      capwapBaseWtpStateWtpLocalIpAddressType,\n      capwapBaseWtpStateWtpLocalIpAddress,\n      capwapBaseWtpStateWtpBaseMacAddress,\n      capwapBaseWtpState,\n      capwapBaseWtpStateWtpUpTime,\n      capwapBaseWtpStateWtpCurrWtpProfileId\n    }\n    STATUS  current\n    DESCRIPTION\n        \"A collection of objects that is used to represent\n         the WTP's state information.\"\n    ::= { capwapBaseGroups 7 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpGroup    OBJECT-GROUP\n    OBJECTS {\n      capwapBaseWtpBaseMacAddress,\n      capwapBaseWtpTunnelModeOptions,\n      capwapBaseWtpMacTypeOptions,\n      capwapBaseWtpDiscoveryType,\n      capwapBaseWtpRadiosInUseNum,\n      capwapBaseWtpRadioNumLimit\n    }\n    STATUS  current\n    DESCRIPTION\n        \"A collection of objects that is used to represent\n         the properties information for the WTPs in running state.\"\n    ::= { capwapBaseGroups 8 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpGroup2   OBJECT-GROUP\n    OBJECTS {\n      capwapBaseWtpPhyIndex,\n      capwapBaseWtpRetransmitCount\n    }\n    STATUS  current\n    DESCRIPTION\n        \"A collection of optional objects that is used to represent\n         the properties of the WTPs in running state.\"\n    ::= { capwapBaseGroups 9 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioGroup OBJECT-GROUP",
      "ja": "capwapBaseRadioGroupのOBJECT-GROUP"
    },
    {
      "indent": 4,
      "text": "OBJECTS {\n  capwapBaseWirelessBindingVirtualRadioIfIndex,\n  capwapBaseWirelessBindingType\n}\nSTATUS  current\nDESCRIPTION\n    \"A collection of objects that is used to represent\n     the wireless binding type and the mappings between the\n     ifIndexes of WLAN Virtual Radio Interfaces and PHY radios.\"\n::= { capwapBaseGroups 10 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseStationGroup    OBJECT-GROUP\n    OBJECTS {\n      capwapBaseStationWtpId,\n      capwapBaseStationWtpRadioId,\n      capwapBaseStationAddedTime,\n      capwapBaseStationVlanName\n    }\n    STATUS  current\n    DESCRIPTION\n        \"A collection of objects that is used to represent\n         the stations' basic properties.\"\n    ::= { capwapBaseGroups 11 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEventsStatsGroup    OBJECT-GROUP\n    OBJECTS {\n      capwapBaseWtpEventsStatsRebootCount,\n      capwapBaseWtpEventsStatsInitCount,\n      capwapBaseWtpEventsStatsLinkFailureCount,\n      capwapBaseWtpEventsStatsSwFailureCount,\n      capwapBaseWtpEventsStatsHwFailureCount,\n      capwapBaseWtpEventsStatsOtherFailureCount,\n      capwapBaseWtpEventsStatsUnknownFailureCount,\n      capwapBaseWtpEventsStatsLastFailureType\n    }\n    STATUS  current\n    DESCRIPTION\n        \"A collection of objects that is used for collecting\n         WTP reboot count, link failure count, hardware failure\n         count, and so on.\"\n    ::= { capwapBaseGroups 12 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsGroup    OBJECT-GROUP\n    OBJECTS {\n      capwapBaseRadioEventsStatsResetCount,\n      capwapBaseRadioEventsStatsSwFailureCount,\n      capwapBaseRadioEventsStatsHwFailureCount,\n      capwapBaseRadioEventsStatsOtherFailureCount, capwapBaseRadioEventsStatsUnknownFailureCount,\n      capwapBaseRadioEventsStatsConfigUpdateCount,\n      capwapBaseRadioEventsStatsChannelChangeCount,\n      capwapBaseRadioEventsStatsBandChangeCount,\n      capwapBaseRadioEventsStatsCurrNoiseFloor,\n      capwapBaseRadioEventsStatsDecryptErrorCount,\n      capwapBaseRadioEventsStatsLastFailureType\n    }\n    STATUS  current\n    DESCRIPTION\n        \"A collection of objects that is used for collecting\n         radio reset count, channel change count, hardware failure\n         count, and so on\"\n    ::= { capwapBaseGroups 13 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseParametersGroup    OBJECT-GROUP\n    OBJECTS {\n      capwapBaseAcMaxRetransmit,\n      capwapBaseAcChangeStatePendingTimer,\n      capwapBaseAcDataCheckTimer,\n      capwapBaseAcDTLSSessionDeleteTimer,\n      capwapBaseAcEchoInterval,\n      capwapBaseAcRetransmitInterval,\n      capwapBaseAcSilentInterval,\n      capwapBaseAcWaitDTLSTimer,\n      capwapBaseAcWaitJoinTimer,\n      capwapBaseAcEcnSupport\n    }\n    STATUS  current\n    DESCRIPTION\n        \"Objects used for the CAPWAP protocol's parameters.\"\n    ::= { capwapBaseGroups 14 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseStatsGroup    OBJECT-GROUP\n    OBJECTS {\n      capwapBaseFailedDTLSAuthFailureCount,\n      capwapBaseFailedDTLSSessionCount\n    }\n    STATUS  current\n    DESCRIPTION\n        \"Objects used for collecting the CAPWAP protocol's statistics.\"\n    ::= { capwapBaseGroups 15 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseNotificationsGroup    NOTIFICATION-GROUP\n    NOTIFICATIONS {\n      capwapBaseChannelUp,\n      capwapBaseChannelDown,\n      capwapBaseDecryptErrorReport, capwapBaseJoinFailure,\n      capwapBaseImageUpgradeFailure,\n      capwapBaseConfigMsgError,\n      capwapBaseRadioOperableStatus,\n      capwapBaseAuthenFailure\n    }\n    STATUS  current\n    DESCRIPTION\n        \"A collection of notifications in this MIB module.\"\n    ::= { capwapBaseGroups 16 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseNotifyVarsGroup    OBJECT-GROUP\n    OBJECTS {\n      capwapBaseNtfWtpId,\n      capwapBaseNtfRadioId,\n      capwapBaseNtfChannelType,\n      capwapBaseNtfAuthenMethod,\n      capwapBaseNtfChannelDownReason,\n      capwapBaseNtfStationIdList,\n      capwapBaseNtfAuthenFailureReason,\n      capwapBaseNtfRadioOperStatusFlag,\n      capwapBaseNtfRadioStatusCause,\n      capwapBaseNtfJoinFailureReason,\n      capwapBaseNtfImageFailureReason,\n      capwapBaseNtfConfigMsgErrorType,\n      capwapBaseNtfMsgErrorElements\n    }\n    STATUS  current\n    DESCRIPTION\n        \"Objects used for notifications.\"\n    ::= { capwapBaseGroups 17 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "capwapBaseNotifyControlGroup OBJECT-GROUP\n    OBJECTS {\n      capwapBaseChannelUpDownNotifyEnable,\n      capwapBaseDecryptErrorNotifyEnable,\n      capwapBaseJoinFailureNotifyEnable,\n      capwapBaseImageUpgradeFailureNotifyEnable,\n      capwapBaseConfigMsgErrorNotifyEnable,\n      capwapBaseRadioOperableStatusNotifyEnable,\n      capwapBaseAuthenFailureNotifyEnable\n   }\n   STATUS  current\n   DESCRIPTION\n        \"Objects used to enable or disable notifications.\"\n   ::= { capwapBaseGroups 18 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "END",
      "ja": "終わり"
    },
    {
      "indent": 0,
      "text": "10. Security Considerations",
      "section_title": true,
      "ja": "10.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "There are a number of management objects defined in this MIB module with a MAX-ACCESS clause of read-write and/or read-create. Such objects MAY be considered sensitive or vulnerable in some network environments. The support for SET operations in a non-secure environment without proper protection can have a negative effect on network operations. The followings are the tables and objects and their sensitivity/vulnerability:",
      "ja": "読み書きおよび/またはリード作成のMAX-ACCESS句でこのMIBモジュールで定義された管理オブジェクトの数があります。このようなオブジェクトは、いくつかのネットワーク環境で敏感であるか、または脆弱とみなすことができます。適切な保護のない非安全な環境におけるSET操作のサポートはネットワーク操作のときにマイナスの影響を与える可能性があります。以下は、テーブルと、オブジェクトとそれらの感度/脆弱性です："
    },
    {
      "indent": 3,
      "text": "- Unauthorized changes to the capwapBaseWtProfileTable and writable objects under capwapBaseAcs group MAY disrupt allocation of resources in the network. For example, a WTP's static IP address could be changed by setting the capwapBaseWtpProfileWtpStaticIpAddress object.",
      "ja": " -  capwapBaseAcsグループの下capwapBaseWtProfileTableと書き込み可能なオブジェクトへの不正な変更は、ネットワーク内のリソースの割り当てを中断される場合があります。例えば、WTPの静的IPアドレスがcapwapBaseWtpProfileWtpStaticIpAddressオブジェクトを設定することにより変更することができました。"
    },
    {
      "indent": 3,
      "text": "- Unauthorized changes to writable objects under the capwapBaseAc group MAY disrupt allocation of resources in the network. For example, an invalid value for the capwapBaseWtpSessionsLimit object will increase the AC's traffic burden.",
      "ja": " -  capwapBaseAcグループの下に書き込み可能なオブジェクトへの不正な変更は、ネットワーク内のリソースの割り当てを中断される場合があります。例えば、capwapBaseWtpSessionsLimitオブジェクトの無効な値は、ACのトラフィックの負担が増加します。"
    },
    {
      "indent": 3,
      "text": "- Unauthorized changes to the capwapBaseMacAclTable MAY prevent legal stations from being able to access the network, while illegal stations are able to access it.",
      "ja": " - 不正なステーションがそれにアクセスすることができますしながら、capwapBaseMacAclTableへの不正な変更は、ネットワークにアクセスできることから、法的ステーションを防ぐことができます。"
    },
    {
      "indent": 3,
      "text": "- Unauthorized changes to writable objects under the capwapBaseParameters group MAY influence CAPWAP protocol behavior and status. For example, an invalid value set for the capwapBaseAcDataCheckTimer MAY influence the CAPWAP state machine.",
      "ja": " -  capwapBaseParametersグループの下に書き込み可能なオブジェクトへの不正な変更は、CAPWAPプロトコルの動作や状態に影響を与える可能性があります。例えば、capwapBaseAcDataCheckTimerに設定された無効な値は、CAPWAP、状態マシンに影響を与える可能性があります。"
    },
    {
      "indent": 3,
      "text": "Some of the readable objects in this MIB module (i.e., objects with a MAX-ACCESS other than not-accessible) MAY be considered sensitive or vulnerable in some network environments. It is thus important to control even GET and/or NOTIFY access to these objects and possibly to even encrypt the values of these objects when sending them over the network via SNMP. The followings are the tables and objects and their sensitivity/vulnerability:",
      "ja": "このMIBモジュールで読み取り可能なオブジェクトの一部（すなわち、アクセス可能ではない以外MAX-ACCESS持つオブジェクト）は、いくつかのネットワーク環境に敏感又は脆弱と考えることができます。 GETおよび/またはこれらのオブジェクトへのアクセスを通知し、おそらくSNMPを通してネットワークの上にそれらを送信する場合でも、これらのオブジェクトの値を暗号化するためにも、制御することが重要です。以下は、テーブルと、オブジェクトとそれらの感度/脆弱性です："
    },
    {
      "indent": 3,
      "text": "- The capwapBaseDataChannelDTLSPolicyOptions and capwapBaseControlChannelAuthenOptions under the capwapBaseAc group expose the current security option for CAPWAP data and control channels.",
      "ja": " -  capwapBaseAcグループの下capwapBaseDataChannelDTLSPolicyOptionsとcapwapBaseControlChannelAuthenOptionsはCAPWAPデータと制御チャネルの現在のセキュリティオプションを公開します。"
    },
    {
      "indent": 3,
      "text": "- The capwapBaseWtpTable exposes a WTP's important information like tunnel mode, MAC type, and so on.",
      "ja": " -  capwapBaseWtpTableはようにトンネルモード、MACタイプ、などWTPの重要な情報を公開します。"
    },
    {
      "indent": 3,
      "text": "- The capwapBaseWtpEventsStatsTable exposes a WTP's failure information.",
      "ja": " -  capwapBaseWtpEventsStatsTableはWTPの障害情報を公開します。"
    },
    {
      "indent": 3,
      "text": "- The capwapBaseRadioEventsStatsTable exposes a radio's failure information.",
      "ja": " -  capwapBaseRadioEventsStatsTableはラジオの故障情報を公開します。"
    },
    {
      "indent": 3,
      "text": "SNMP versions prior to SNMPv3 did not include adequate security. Even if the network itself is secure (for example by using IPsec), even then, there is no control as to who on the secure network is allowed to access and GET/SET (read/change/create/delete) the objects in this MIB module.",
      "ja": "SNMPv3の前のSNMPバージョンは十分なセキュリティを含んでいませんでした。ネットワーク自体が（IPsecを使って、例えば）安全であっても、その後も、安全なネットワーク上で/ SETにアクセスし、GETだれに許容されているかのように何の制御（読み取り/変更/作成/削除）この内のオブジェクトが存在しませんMIBモジュール。"
    },
    {
      "indent": 3,
      "text": "It is RECOMMENDED that implementers consider the security features as provided by the SNMPv3 framework (see [RFC3410], section 8), including full support for the SNMPv3 cryptographic mechanisms (for authentication and privacy).",
      "ja": "実装がSNMPv3フレームワークで提供するようにセキュリティ機能を考えることが推奨される（認証とプライバシーのために）SNMPv3の暗号化メカニズムの完全なサポートを含む、（[RFC3410]セクション8を参照）。"
    },
    {
      "indent": 3,
      "text": "Further, the deployment of SNMP versions prior to SNMPv3 is NOT RECOMMENDED. Instead, it is RECOMMENDED to deploy SNMPv3 and to enable cryptographic security. It is then a customer/operator responsibility to ensure that the SNMP entity giving access to an instance of this MIB module is properly configured to give access to the objects only to those principals (users) that have legitimate rights to indeed GET or SET (change/create/delete) them.",
      "ja": "さらに、SNMPv3の前のSNMPバージョンの展開はお勧めしません。代わりに、SNMPv3を展開すると、暗号化セキュリティを有効にすることをお勧めします。このMIBモジュールのインスタンスへのアクセスを与えるSNMP実体が適切にのみプリンシパル（ユーザ）にオブジェクトへのアクセスを提供するように設定されていることを確認するために、顧客/オペレータ責任実際にGETまたはSET（変化への正当な権利を有することです/）/削除、それらを作成します。"
    },
    {
      "indent": 0,
      "text": "11. IANA Considerations",
      "section_title": true,
      "ja": "11. IANAの考慮事項"
    },
    {
      "indent": 0,
      "text": "11.1. IANA Considerations for CAPWAP-BASE-MIB Module The MIB module in this document uses the following IANA-assigned OBJECT IDENTIFIER value recorded in the SMI Numbers registry:",
      "ja": "11.1。このドキュメントのCAPWAP-BASE-MIBモジュール] MIBモジュールはSMI番号のレジストリに記録されている以下のIANAによって割り当てられたオブジェクト識別子の値を使用するためのIANAの考慮事項："
    },
    {
      "indent": 8,
      "text": "Descriptor     OBJECT IDENTIFIER value\n----------     -----------------------\ncapwapBaseMIB  { mib-2 196 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "11.2. IANA Considerations for ifType",
      "section_title": true,
      "ja": "11.2。 ifTypeのためのIANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "IANA has assigned the following ifType:",
      "ja": "IANAは以下のifTypeを割り当てています："
    },
    {
      "indent": 7,
      "text": "Decimal   Name                   Description\n-------   ------------           -------------------------------\n254       capwapWtpVirtualRadio  WTP Virtual Radio Interface",
      "raw": true
    },
    {
      "indent": 0,
      "text": "12. Contributors",
      "section_title": true,
      "ja": "12.協力者"
    },
    {
      "indent": 3,
      "text": "This MIB module is based on contributions from Long Gao.",
      "ja": "このMIBモジュールは、ロングガオからの貢献に基づいています。"
    },
    {
      "indent": 0,
      "text": "13. Acknowledgements",
      "section_title": true,
      "ja": "13.謝辞"
    },
    {
      "indent": 3,
      "text": "Thanks to David Harrington, Dan Romascanu, Abhijit Choudhury, Bert Wijnen, and David L. Black for helpful comments on this document and guiding some technical solutions.",
      "ja": "このドキュメントの役に立つコメントについてデヴィッドハリントン、ダンRomascanu、Abhijitチョードリー、バートWijnen、とDavid L.ブラックのおかげで、いくつかの技術的な解決策を導きます。"
    },
    {
      "indent": 3,
      "text": "The authors also thank the following friends and coworkers: Fei Fang, Xuebin Zhu, Hao Song, Yu Liu, Sachin Dutta, Ju Wang, Hao Wang, Yujin Zhao, Haitao Zhang, Xiansen Cai, and Xiaolan Wan.",
      "ja": "飛牙、Xuebin朱、ハオ歌、ゆう劉、サチンDuttaさん、チュ王、ハオ王、ユージン趙、ハイタオ張、Xiansenカイ、およびXiaolanのワン：著者らはまた、次の友人や同僚に感謝します。"
    },
    {
      "indent": 0,
      "text": "14. References",
      "section_title": true,
      "ja": "14.参考文献"
    },
    {
      "indent": 0,
      "text": "14.1. Normative References",
      "section_title": true,
      "ja": "14.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC2287] Krupczak, C. and J. Saperia, \"Definitions of System-Level Managed Objects for Applications\", RFC 2287, February 1998.",
      "ja": "[RFC2287] Krupczak、C.とJ. Saperia、RFC 2287、1998年2月 \"アプリケーションのためのシステムレベルの管理オブジェクトの定義\"。"
    },
    {
      "indent": 3,
      "text": "[RFC2578] McCloghrie, K., Ed., Perkins, D., Ed., and J. Schoenwaelder, Ed., \"Structure of Management Information Version 2 (SMIv2)\", STD 58, RFC 2578, April 1999.",
      "ja": "[RFC2578] McCloghrie、K.、エド。、パーキンス、D.、編、及びJ. Schoenwaelder、編、STD 58、RFC 2578、 \"経営情報バージョン2（SMIv2）の構造\"、1999年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC2579] McCloghrie, K., Ed., Perkins, D., Ed., and J. Schoenwaelder, Ed., \"Textual Conventions for SMIv2\", STD 58, RFC 2579, April 1999.",
      "ja": "[RFC2579] McCloghrie、K.、エド。、パーキンス、D.、編、及びJ. Schoenwaelder、エド。、 \"SMIv2のためのテキストの表記法\"、STD 58、RFC 2579、1999年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC2580] McCloghrie, K., Perkins, D., and J. Schoenwaelder, \"Conformance Statements for SMIv2\", STD 58, RFC 2580, April 1999.",
      "ja": "[RFC2580] McCloghrie、K.、パーキンス、D.、およびJ. Schoenwaelder、 \"SMIv2のための適合性宣言\"、STD 58、RFC 2580、1999年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC2863] McCloghrie, K. and F. Kastenholz, \"The Interfaces Group MIB\", RFC 2863, June 2000.",
      "ja": "[RFC2863] McCloghrie、K.およびF. Kastenholzと、 \"インターフェイスグループMIB\"、RFC 2863、2000年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC3411] Harrington, D., Presuhn, R., and B. Wijnen, \"An Architecture for Describing Simple Network Management Protocol (SNMP) Management Frameworks\", STD 62, RFC 3411, December 2002.",
      "ja": "[RFC3411]ハリントン、D.、Presuhn、R.、およびB. Wijnenの、 \"簡易ネットワーク管理プロトコル（SNMP）管理フレームワークを記述するためのアーキテクチャ\"、STD 62、RFC 3411、2002年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC3418] Presuhn, R., \"Management Information Base (MIB) for the Simple Network Management Protocol (SNMP)\", STD 62, RFC 3418, December 2002.",
      "ja": "、STD 62、RFC 3418、2002年12月 \"簡易ネットワーク管理プロトコル（SNMP）管理情報ベース（MIB）\" [RFC3418] Presuhn、R.、。"
    },
    {
      "indent": 3,
      "text": "[RFC4001] Daniele, M., Haberman, B., Routhier, S., and J. Schoenwaelder, \"Textual Conventions for Internet Network Addresses\", RFC 4001, February 2005.",
      "ja": "[RFC4001]ダニエル、M.、ハーバーマン、B.、Routhier、S.、およびJ. Schoenwaelder、 \"インターネットネットワークアドレスのためのテキストの表記法\"、RFC 4001、2005年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC4133] Bierman, A. and K. McCloghrie, \"Entity MIB (Version 3)\", RFC 4133, August 2005.",
      "ja": "[RFC4133] Bierman、A.およびK. McCloghrie、 \"エンティティMIB（バージョン3）\"、RFC 4133、2005年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC5415] Calhoun, P., Montemurro, M., and D. Stanley, \"Control And Provisioning of Wireless Access Points (CAPWAP) Protocol Specification\", RFC 5415, March 2009.",
      "ja": "[RFC5415]、RFC 5415カルフーン、P.、モンテムッロ、M.、およびD.スタンレー、 \"ワイヤレスアクセスポイント（CAPWAP）プロトコル仕様の管理とプロビジョニング\"、2009年3月。"
    },
    {
      "indent": 0,
      "text": "14.2. Informative References",
      "section_title": true,
      "ja": "14.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[Err1832] RFC Errata, \"Errata ID 1832\", for RFC 5415, <http://www.rfc-editor.org>.",
      "ja": "【Err1832] RFC正誤表、 \"正誤表ID 1832\"、RFC 5415のために、<http://www.rfc-editor.org>。"
    },
    {
      "indent": 3,
      "text": "[IEEE.802-11.2007] \"Information technology - Telecommunications and information exchange between systems - Local and metropolitan area networks - Specific requirements - Part 11: Wireless LAN Medium Access Control (MAC) and Physical Layer (PHY) specifications\", IEEE Standard 802.11, 2007, <htt p://standards.ieee.org/getieee802/download/ 802.11-2007.pdf>.",
      "ja": "[IEEE.802-11.2007]「情報技術 - 地方とメトロポリタンエリアネットワーク -   - 電気通信及びシステム間の情報交換の具体的な要件 - パート11：無線LAN媒体アクセス制御（MAC）および物理層（PHY）仕様」、IEEE規格802.​​11 2007年、<HTT P：//standards.ieee.org/getieee802/download/ 802.11-2007.pdf>。"
    },
    {
      "indent": 3,
      "text": "[RFC3168] Ramakrishnan, K., Floyd, S., and D. Black, \"The Addition of Explicit Congestion Notification (ECN) to IP\", RFC 3168, September 2001.",
      "ja": "\"IPに明示的輻輳通知の添加（ECN）\" [RFC3168]ラマクリシュナン、K.、フロイド、S.、およびD.ブラック、RFC 3168、2001年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC3410] Case, J., Mundy, R., Partain, D., and B. Stewart, \"Introduction and Applicability Statements for Internet-Standard Management Framework\", RFC 3410, December 2002.",
      "ja": "[RFC3410]ケース、J.、マンディ、R.、パーテイン、D.、およびB.スチュワート、 \"インターネット標準の管理フレームワークのための序論と適用性声明\"、RFC 3410、2002年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC4118] Yang, L., Zerfos, P., and E. Sadot, \"Architecture Taxonomy for Control and Provisioning of Wireless Access Points (CAPWAP)\", RFC 4118, June 2005.",
      "ja": "[RFC4118]ヤン、L.、Zerfos、P.、およびE. Sadot、RFC 4118、2005年6月の \"コントロールおよびワイヤレスアクセスポイントのプロビジョニング（CAPWAP）のためのアーキテクチャ分類学\"。"
    },
    {
      "indent": 3,
      "text": "[RFC4347] Rescorla, E. and N. Modadugu, \"Datagram Transport Layer Security\", RFC 4347, April 2006.",
      "ja": "[RFC4347]レスコラ、E.およびN. Modadugu、 \"データグラムトランスポート層セキュリティ\"、RFC 4347、2006年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC5416] Calhoun, P., Montemurro, M., and D. Stanley, \"Control and Provisioning of Wireless Access Points (CAPWAP) Protocol Binding for IEEE 802.11\", RFC 5416, March 2009.",
      "ja": "[RFC5416]カルフーン、P.、モンテムッロ、M.、およびD.スタンレー、 \"コントロールおよびワイヤレスアクセスのプロビジョニングポイント（CAPWAP）IEEE 802.11のためのプロトコルバインディング\"、RFC 5416、2009年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC5834] Shi, Y., Ed., Perkins, D., Ed., Elliott, C., Ed., and Y. Zhang, Ed., \"Control and Provisioning of Wireless Access Points (CAPWAP) Protocol Binding MIB for IEEE 802.11\", RFC 5834, May 2010.",
      "ja": "[RFC5834]市、Y.、編、パーキンス、D.、編、エリオット、C.、編、及びY.チャン編、「コントロールおよび無線アクセスの提供ポイント（CAPWAP）プロトコルのMIB結合IEEE 802.11\" 、RFC 5834、2010年5月。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Yang Shi (editor) Hangzhou H3C Tech. Co., Ltd. Beijing R&D Center of H3C, Digital Technology Plaza NO. 9 Shangdi 9th Street, Haidian District Beijing 100085 China",
      "ja": "ヤン市（エディタ）杭州H3Cテック。株式会社は、H3Cの北京R＆Dセンター、デジタルテクノロジープラザNO。9上地第九ストリート、海淀区北京100085中国"
    },
    {
      "indent": 3,
      "text": "Phone: +86 010 82775276 EMail: rishyang@gmail.com",
      "ja": "電話：+86 010 82775276 Eメール：rishyang@gmail.com"
    },
    {
      "indent": 3,
      "text": "David T. Perkins (editor) 228 Bayview Dr. San Carlos, CA 94070 USA",
      "ja": "デヴィッドT.パーキンス（エディタ）228ベイビュー博士サンカルロス、CA 94070 USA"
    },
    {
      "indent": 3,
      "text": "Phone: +1 408 394-8702 EMail: dperkins@dsperkins.com",
      "ja": "電話：+1 408 394-8702 Eメール：dperkins@dsperkins.com"
    },
    {
      "indent": 3,
      "text": "Chris Elliott (editor) 1516 Kent St. Durham, NC 27707 USA",
      "ja": "クリス・エリオット（編集者）1516ケントセントダーラム、NC 27707 USA"
    },
    {
      "indent": 3,
      "text": "Phone: +1 919-308-1216 EMail: chelliot@pobox.com",
      "ja": "電話：+1 919-308-1216電子メール：chelliot@pobox.com"
    },
    {
      "indent": 3,
      "text": "Yong Zhang (editor) Fortinet, Inc. 1090 Kifer Road Sunnyvale, CA 94086 USA",
      "ja": "ヨンチャン（編集者）フォーティネット株式会社1090なぜ道州サニーベール、CA 94086 USA"
    },
    {
      "indent": 3,
      "text": "EMail: yzhang@fortinet.com",
      "ja": "メールアドレス：yzhang@fortinet.com"
    }
  ]
}