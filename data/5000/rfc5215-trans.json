{
  "title": {
    "text": "RFC 5215 - RTP Payload Format for Vorbis Encoded Audio",
    "ja": "RFC 5215 - VorbisのエンコードされたオーディオのためのRTPペイロードフォーマット"
  },
  "number": 5215,
  "created_at": "2019-10-24 20:54:28.159091+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                         L. Barbato\nRequest for Comments: 5215                                          Xiph\nCategory: Standards Track                                    August 2008",
      "raw": true
    },
    {
      "indent": 14,
      "text": "RTP Payload Format for Vorbis Encoded Audio",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "ja": "この文書は、インターネットコミュニティのためのインターネット標準トラックプロトコルを指定し、改善のための議論と提案を要求します。このプロトコルの標準化状態と状態への「インターネット公式プロトコル標準」（STD 1）の最新版を参照してください。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document describes an RTP payload format for transporting Vorbis encoded audio. It details the RTP encapsulation mechanism for raw Vorbis data and the delivery mechanisms for the decoder probability model (referred to as a codebook), as well as other setup information.",
      "ja": "この文書では、Vorbisのエンコードされたオーディオを輸送するためのRTPペイロード形式について説明します。これは、生Vorbisのデータと（コードブックと呼ばれる）デコーダ確率モデルのための送達機構、ならびに他の設定情報のためのRTPのカプセル化メカニズムを詳述します。"
    },
    {
      "indent": 3,
      "text": "Also included within this memo are media type registrations and the details necessary for the use of Vorbis with the Session Description Protocol (SDP).",
      "ja": "また、このメモの中に含まれるセッション記述プロトコル（SDP）とVorbisのを使用するために必要なメディアタイプの登録および詳細です。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3\n  1.1.  Conformance and Document Conventions . . . . . . . . . . .  3\n2.  Payload Format . . . . . . . . . . . . . . . . . . . . . . . .  3\n  2.1.  RTP Header . . . . . . . . . . . . . . . . . . . . . . . .  4\n  2.2.  Payload Header . . . . . . . . . . . . . . . . . . . . . .  5\n  2.3.  Payload Data . . . . . . . . . . . . . . . . . . . . . . .  6\n  2.4.  Example RTP Packet . . . . . . . . . . . . . . . . . . . .  8\n3.  Configuration Headers  . . . . . . . . . . . . . . . . . . . .  8\n  3.1.  In-band Header Transmission  . . . . . . . . . . . . . . .  9\n    3.1.1.  Packed Configuration . . . . . . . . . . . . . . . . . 10\n  3.2.  Out of Band Transmission . . . . . . . . . . . . . . . . . 12\n    3.2.1.  Packed Headers . . . . . . . . . . . . . . . . . . . . 12\n  3.3.  Loss of Configuration Headers  . . . . . . . . . . . . . . 13\n4.  Comment Headers  . . . . . . . . . . . . . . . . . . . . . . . 13\n5.  Frame Packetization  . . . . . . . . . . . . . . . . . . . . . 14\n  5.1.  Example Fragmented Vorbis Packet . . . . . . . . . . . . . 15\n  5.2.  Packet Loss  . . . . . . . . . . . . . . . . . . . . . . . 17\n6.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 18\n  6.1.  Packed Headers IANA Considerations . . . . . . . . . . . . 19\n7.  SDP Related Considerations . . . . . . . . . . . . . . . . . . 20\n  7.1.  Mapping Media Type Parameters into SDP . . . . . . . . . . 20\n    7.1.1.  SDP Example  . . . . . . . . . . . . . . . . . . . . . 21\n  7.2.  Usage with the SDP Offer/Answer Model  . . . . . . . . . . 22\n8.  Congestion Control . . . . . . . . . . . . . . . . . . . . . . 22\n9.  Example  . . . . . . . . . . . . . . . . . . . . . . . . . . . 22\n  9.1.  Stream Radio . . . . . . . . . . . . . . . . . . . . . . . 22\n10. Security Considerations  . . . . . . . . . . . . . . . . . . . 23\n11. Copying Conditions . . . . . . . . . . . . . . . . . . . . . . 23\n12. Acknowledgments  . . . . . . . . . . . . . . . . . . . . . . . 23\n13. References . . . . . . . . . . . . . . . . . . . . . . . . . . 24\n  13.1. Normative References . . . . . . . . . . . . . . . . . . . 24\n  13.2. Informative References . . . . . . . . . . . . . . . . . . 25",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "Vorbis is a general purpose perceptual audio codec intended to allow maximum encoder flexibility, thus allowing it to scale competitively over an exceptionally wide range of bit rates. At the high quality/ bitrate end of the scale (CD or DAT rate stereo, 16/24 bits), it is in the same league as MPEG-4 AAC. Vorbis is also intended for lower and higher sample rates (from 8kHz telephony to 192kHz digital masters) and a range of channel representations (monaural, polyphonic, stereo, quadraphonic, 5.1, ambisonic, or up to 255 discrete channels).",
      "ja": "Vorbisのは、このように、それはビットレートの非常に広い範囲にわたって競合拡張することができ、最大エンコーダの柔軟性を可能にすることを意図した汎用知覚オーディオコーデックです。スケール（CDまたはDATレートステレオ、16/24ビット）の高品質/ビットレートの端部には、MPEG-4 AACと同じリーグです。 Vorbisのはまた、より低いおよびより高いサンプル（8kHzの電話から192kHzのデジタルマスターに）レートとチャネル表現（モノラル、ポリフォニック、ステレオ、4チャンネル、5.1、ambisonic、または255個の離散チャネルまで）の範囲のために意図されています。"
    },
    {
      "indent": 3,
      "text": "Vorbis encoded audio is generally encapsulated within an Ogg format bitstream [RFC3533], which provides framing and synchronization. For the purposes of RTP transport, this layer is unnecessary, and so raw Vorbis packets are used in the payload.",
      "ja": "Vorbisのエンコードされたオーディオは、一般的にフレーミングおよび同期を提供するのOggフォーマットのビットストリーム[RFC3533]内に封入されています。 RTP輸送の目的のために、この層は不要であるので生Vorbisのパケットは、ペイロードに使用されています。"
    },
    {
      "indent": 0,
      "text": "1.1. Conformance and Document Conventions",
      "section_title": true,
      "ja": "1.1. 適合性およびドキュメントの表記規則"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14, [RFC2119] and indicate requirement levels for compliant implementations. Requirements apply to all implementations unless otherwise stated.",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はありますBCP 14、[RFC2119]に記載され、対応する実装の要求レベルを示すものと解釈されます。特に明記しない限り要件は、すべての実装に適用されます。"
    },
    {
      "indent": 3,
      "text": "An implementation is a software module that supports one of the media types defined in this document. Software modules may support multiple media types, but conformance is considered individually for each type.",
      "ja": "実装は、この文書で定義されたメディアタイプのいずれかをサポートするソフトウェアモジュールです。ソフトウェア・モジュールは、複数のメディアタイプをサポートするかもしれないが、適合は種類ごとに個別に考えられています。"
    },
    {
      "indent": 3,
      "text": "Implementations that fail to satisfy one or more \"MUST\" requirements are considered non-compliant. Implementations that satisfy all \"MUST\" requirements, but fail to satisfy one or more \"SHOULD\" requirements, are said to be \"conditionally compliant\". All other implementations are \"unconditionally compliant\".",
      "ja": "一つ以上を満たすことができない実装は、要件は非準拠とみなされ、「しなければなりません」。すべて満たす「MUST」要件が、1つ以上の「SHOULD」の要件を満たさない実装は、「条件付きで対応」であると言われています。他のすべての実装は、「無条件に対応」しています。"
    },
    {
      "indent": 0,
      "text": "2. Payload Format",
      "section_title": true,
      "ja": "2.ペイロードフォーマット"
    },
    {
      "indent": 3,
      "text": "For RTP-based transport of Vorbis-encoded audio, the standard RTP header is followed by a 4-octet payload header, and then the payload data. The payload headers are used to associate the Vorbis data with its associated decoding codebooks as well as indicate if the following packet contains fragmented Vorbis data and/or the number of whole Vorbis data frames. The payload data contains the raw Vorbis bitstream information. There are 3 types of Vorbis data; an RTP payload MUST contain just one of them at a time.",
      "ja": "VorbisのエンコードされたオーディオのRTPベースのトランスポートのために、標準的なRTPヘッダが4オクテットのペイロードヘッダに続いて、その後、ペイロードデータです。ペイロードヘッダは、その関連する復号化コードブックとVorbisのデータを関連付けるだけでなく、次のパケットが断片化さVorbisのデータ及び/又は全体Vorbisのデータフレームの数が含まれているかどうかを示すために使用されます。ペイロードデータは、生Vorbisのビットストリーム情報が含まれています。 Vorbisのデータの3種類があります。 RTPペイロードは一度に一つだけそれらのを含まなければなりません。"
    },
    {
      "indent": 0,
      "text": "2.1. RTP Header",
      "section_title": true,
      "ja": "2.1.  RTPヘッダー"
    },
    {
      "indent": 3,
      "text": "The format of the RTP header is specified in [RFC3550] and shown in Figure 1. This payload format uses the fields of the header in a manner consistent with that specification.",
      "ja": "RTPヘッダのフォーマットは、[RFC3550]で指定され、図1に示す本ペイロードフォーマットは、その仕様と一致する方法で、ヘッダのフィールドを使用しています。"
    },
    {
      "indent": 6,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|V=2|P|X|  CC   |M|     PT      |       sequence number         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                           timestamp                           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|           synchronization source (SSRC) identifier            |\n+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n|            contributing source (CSRC) identifiers             |\n|                              ...                              |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 27,
      "text": "Figure 1: RTP Header",
      "ja": "図1：RTPヘッダー"
    },
    {
      "indent": 3,
      "text": "The RTP header begins with an octet of fields (V, P, X, and CC) to support specialized RTP uses (see [RFC3550] and [RFC3551] for details). For Vorbis RTP, the following values are used.",
      "ja": "RTPヘッダは、特殊なRTPが使用する（詳細については[RFC3550]及び[RFC3551]を参照）をサポートするフィールドのオクテット（V、P、X、およびCC）で始まります。 VorbisのRTPの場合は、以下の値が使用されています。"
    },
    {
      "indent": 3,
      "text": "Version (V): 2 bits",
      "ja": "バージョン（V）：2ビット"
    },
    {
      "indent": 3,
      "text": "This field identifies the version of RTP. The version used by this specification is two (2).",
      "ja": "このフィールドは、RTPのバージョンを識別する。本明細書で使用されるバージョンは2である（2）。"
    },
    {
      "indent": 3,
      "text": "Padding (P): 1 bit",
      "ja": "パディング（P）：1ビット"
    },
    {
      "indent": 3,
      "text": "Padding MAY be used with this payload format according to Section 5.1 of [RFC3550].",
      "ja": "パディングは、[RFC3550]のセクション5.1に従って、このペイロードフォーマットと共に使用することができます。"
    },
    {
      "indent": 3,
      "text": "Extension (X): 1 bit",
      "ja": "拡張（X）：1ビット"
    },
    {
      "indent": 3,
      "text": "The Extension bit is used in accordance with [RFC3550].",
      "ja": "拡張ビットは、[RFC3550]に従って使用されます。"
    },
    {
      "indent": 3,
      "text": "CSRC count (CC): 4 bits",
      "ja": "CSRCカウント（CC）：4ビット"
    },
    {
      "indent": 3,
      "text": "The CSRC count is used in accordance with [RFC3550].",
      "ja": "CSRCカウントは、[RFC3550]に従って使用されています。"
    },
    {
      "indent": 3,
      "text": "Marker (M): 1 bit",
      "ja": "マーカー（M）：1ビット"
    },
    {
      "indent": 3,
      "text": "Set to zero. Audio silence suppression is not used. This conforms to Section 4.1 of [VORBIS-SPEC-REF].",
      "ja": "ゼロに設定してください。オーディオ沈黙抑制は使用されません。これは、[Vorbisの-SPEC-REF]のセクション4.1に準拠しています。"
    },
    {
      "indent": 3,
      "text": "Payload Type (PT): 7 bits",
      "ja": "ペイロードタイプ（PT）：7ビット"
    },
    {
      "indent": 3,
      "text": "An RTP profile for a class of applications is expected to assign a payload type for this format, or a dynamically allocated payload type SHOULD be chosen that designates the payload as Vorbis.",
      "ja": "アプリケーションのクラスのためのRTPプロファイルは、この形式のペイロードタイプを割り当てることが予想される、または動的に割り当てられたペイロードタイプは、Vorbisのようにペイロードを指定し、その選択されなければなりません。"
    },
    {
      "indent": 3,
      "text": "Sequence number: 16 bits",
      "ja": "配列番号：16ビット"
    },
    {
      "indent": 3,
      "text": "The sequence number increments by one for each RTP data packet sent, and may be used by the receiver to detect packet loss and to restore the packet sequence. This field is detailed further in [RFC3550].",
      "ja": "送信され、パケット損失を検出し、パケットシーケンスを復元するために受信機によって使用されてもよい各RTPデータパケットのための1つによるシーケンス番号をインクリメント。このフィールドは、[RFC3550]でさらに詳述されています。"
    },
    {
      "indent": 3,
      "text": "Timestamp: 32 bits",
      "ja": "タイムスタンプ：32ビット"
    },
    {
      "indent": 3,
      "text": "A timestamp representing the sampling time of the first sample of the first Vorbis packet in the RTP payload. The clock frequency MUST be set to the sample rate of the encoded audio data and is conveyed out-of-band (e.g., as an SDP parameter).",
      "ja": "RTPペイロードの最初のVorbisのパケットの最初のサンプルのサンプリング時間を表すタイムスタンプ。クロック周波数は、符号化されたオーディオデータのサンプルレートに設定されなければならないと（SDPパラメータとして、例えば）帯域外に搬送されます。"
    },
    {
      "indent": 3,
      "text": "SSRC/CSRC identifiers:",
      "ja": "SSRC / CSRC識別子："
    },
    {
      "indent": 3,
      "text": "These two fields, 32 bits each with one SSRC field and a maximum of 16 CSRC fields, are as defined in [RFC3550].",
      "ja": "[RFC3550]で定義されるように、これらの二つのフィールド、1つのSSRCフィールドとCSRC 16のフィールドの最大32ビットの各々が、あります。"
    },
    {
      "indent": 0,
      "text": "2.2. Payload Header",
      "section_title": true,
      "ja": "2.2. ペイロードヘッダー"
    },
    {
      "indent": 3,
      "text": "The 4 octets following the RTP Header section are the Payload Header. This header is split into a number of bit fields detailing the format of the following payload data packets.",
      "ja": "RTPヘッダー・セクションを以下の4つのオクテットはペイロードヘッダーです。このヘッダは、次のペイロード・データ・パケットのフォーマットを詳述ビットフィールドの数に分割されます。"
    },
    {
      "indent": 6,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                     Ident                     | F |VDT|# pkts.|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 25,
      "text": "Figure 2: Payload Header",
      "ja": "図2：ペイロードヘッダー"
    },
    {
      "indent": 3,
      "text": "Ident: 24 bits",
      "ja": "Ident：24ビット"
    },
    {
      "indent": 3,
      "text": "This 24-bit field is used to associate the Vorbis data to a decoding Configuration. It is stored as a network byte order integer.",
      "ja": "この24ビットのフィールドは、復号構成にVorbisのデータを関連付けるために使用されます。これは、ネットワークバイト順の整数として格納されています。"
    },
    {
      "indent": 3,
      "text": "Fragment type (F): 2 bits",
      "ja": "フラグメントタイプ（F）：2ビット"
    },
    {
      "indent": 3,
      "text": "This field is set according to the following list:",
      "ja": "このフィールドは、以下のリストに基づいて設定されます。"
    },
    {
      "indent": 6,
      "text": "0 = Not Fragmented",
      "ja": "0 =未断片化"
    },
    {
      "indent": 6,
      "text": "1 = Start Fragment",
      "ja": "1 =スタート断片"
    },
    {
      "indent": 6,
      "text": "2 = Continuation Fragment",
      "ja": "2 =継続フラグメント"
    },
    {
      "indent": 6,
      "text": "3 = End Fragment",
      "ja": "3 =エンドフラグメント"
    },
    {
      "indent": 3,
      "text": "Vorbis Data Type (VDT): 2 bits",
      "ja": "Vorbisのデータ型（VDT）：2ビット"
    },
    {
      "indent": 3,
      "text": "This field specifies the kind of Vorbis data stored in this RTP packet. There are currently three different types of Vorbis payloads. Each packet MUST contain only a single type of Vorbis packet (e.g., you must not aggregate configuration and comment packets in the same RTP payload).",
      "ja": "このフィールドは、このRTPパケットに格納されVorbisのデータの種類を指定します。 Vorbisのペイロードの3種類が現在ありません。各パケットは（例えば、あなたが同じRTPペイロード内の集計の構成とコメントパケットはならない）Vorbisのパケットの単一の種類を含まなければなりません。"
    },
    {
      "indent": 6,
      "text": "0 = Raw Vorbis payload",
      "ja": "0 =生Vorbisのペイロード"
    },
    {
      "indent": 6,
      "text": "1 = Vorbis Packed Configuration payload",
      "ja": "1 = Vorbisのパックド設定ペイロード"
    },
    {
      "indent": 6,
      "text": "2 = Legacy Vorbis Comment payload",
      "ja": "2 =レガシーVorbisのコメントペイロード"
    },
    {
      "indent": 6,
      "text": "3 = Reserved",
      "ja": "3 =予約"
    },
    {
      "indent": 3,
      "text": "The packets with a VDT of value 3 MUST be ignored.",
      "ja": "値3のVDTを持つパケットを無視しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The last 4 bits represent the number of complete packets in this payload. This provides for a maximum number of 15 Vorbis packets in the payload. If the payload contains fragmented data, the number of packets MUST be set to 0.",
      "ja": "最後の4ビットは、このペイロードにおける完全なパケットの数を表します。これは、ペイロード15のVorbisのパケットの最大数を提供します。ペイロードに断片化されたデータが含まれている場合、パケットの数が0に設定しなければなりません。"
    },
    {
      "indent": 0,
      "text": "2.3. Payload Data",
      "section_title": true,
      "ja": "2.3. ペイロードデータ"
    },
    {
      "indent": 3,
      "text": "Raw Vorbis packets are currently unbounded in length; application profiles will likely define a practical limit. Typical Vorbis packet sizes range from very small (2-3 bytes) to quite large (8-12 kilobytes). The reference implementation [LIBVORBIS] typically produces packets less than ~800 bytes, except for the setup header packets, which are ~4-12 kilobytes. Within an RTP context, to avoid fragmentation, the Vorbis data packet size SHOULD be kept sufficiently small so that after adding the RTP and payload headers, the complete RTP packet is smaller than the path MTU.",
      "ja": "生Vorbisのパケットの長さは現在、無制限です。アプリケーションプロファイルは、おそらく実用上の限界を定義します。典型的Vorbisのパケットサイズが非常に大きく（8〜12キロバイト）に非常に小さい（2~3バイト）の範囲です。リファレンス実装は、[LIBVORBIS]典型的に〜4〜12キロバイトであるセットアップヘッダパケットを除き、以下〜800バイトを超えるパケットを生成します。 RTPペイロードヘッダを追加した後、完全なRTPパケットが経路MTUよりも小さくなるように、RTPのコンテキスト内で、断片化を避けるために、Vorbisのデータ・パケット・サイズが十分に小さく保たれるべきです。"
    },
    {
      "indent": 6,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|            length             |       vorbis packet data     ..\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 23,
      "text": "Figure 3: Payload Data Header",
      "ja": "図3：ペイロードデータヘッダ"
    },
    {
      "indent": 3,
      "text": "Each Vorbis payload packet starts with a two octet length header, which is used to represent the size in bytes of the following data payload, and is followed by the raw Vorbis data padded to the nearest byte boundary, as explained by the Vorbis I Specification [VORBIS-SPEC-REF]. The length value is stored as a network byte order integer.",
      "ja": "各Vorbisのペイロードパケットは、次のデータペイロードのバイト単位のサイズを表すために使用される2つのオクテット長のヘッダで始まり、そしてVorbisのI仕様[により説明したように、最も近いバイト境界までパディング生Vorbisのデータが続きます。 Vorbisの-SPEC-REF]。長さの値は、ネットワークバイト順の整数として格納されています。"
    },
    {
      "indent": 3,
      "text": "For payloads that consist of multiple Vorbis packets, the payload data consists of the packet length followed by the packet data for each of the Vorbis packets in the payload.",
      "ja": "複数Vorbisのパケットから成るペイロードは、ペイロードデータは、ペイロードにVorbisのパケットのそれぞれのためのパケットデータが続くパケット長から成ります。"
    },
    {
      "indent": 3,
      "text": "The Vorbis packet length header is the length of the Vorbis data block only and does not include the length field.",
      "ja": "Vorbisのパケット長ヘッダのみVorbisのデータブロックの長さであり、長さフィールドを含んでいません。"
    },
    {
      "indent": 3,
      "text": "The payload packing of the Vorbis data packets MUST follow the guidelines set out in [RFC3551], where the oldest Vorbis packet occurs immediately after the RTP packet header. Subsequent Vorbis packets, if any, MUST follow in temporal order.",
      "ja": "Vorbisのデータパケットのペイロードにパッキングは最古VorbisのパケットがRTPパケットヘッダの直後に発生する[RFC3551]に記載されたガイドラインを、従わなければなりません。後続のVorbisのパケットは、もしあれば、時間的順序に従わなければなりません。"
    },
    {
      "indent": 3,
      "text": "Audio channel mapping is in accordance with the Vorbis I Specification [VORBIS-SPEC-REF].",
      "ja": "オーディオチャンネルマッピングがVorbisのI仕様[Vorbisの-SPEC-REF]によるものです。"
    },
    {
      "indent": 0,
      "text": "2.4. Example RTP Packet",
      "section_title": true,
      "ja": "2.4. 例RTPパケット"
    },
    {
      "indent": 3,
      "text": "Here is an example RTP payload containing two Vorbis packets.",
      "ja": "ここでは、2つのVorbisのパケットを含む実施例RTPペイロードです。"
    },
    {
      "indent": 6,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| 2 |0|0|  0    |0|      PT     |       sequence number         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|               timestamp (in sample rate units)                |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|           synchronisation source (SSRC) identifier            |\n+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n|            contributing source (CSRC) identifiers             |\n|                              ...                              |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                     Ident                     | 0 | 0 | 2 pks |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|            length             |          vorbis data         ..\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n..                        vorbis data                           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|            length             |   next vorbis packet data    ..\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n..                        vorbis data                          ..\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n..               vorbis data                    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 20,
      "text": "Figure 4: Example Raw Vorbis Packet",
      "ja": "図4：例生Vorbisのパケット"
    },
    {
      "indent": 3,
      "text": "The payload data section of the RTP packet begins with the 24-bit Ident field followed by the one octet bit field header, which has the number of Vorbis frames set to 2. Each of the Vorbis data frames is prefixed by the two octets length field. The Packet Type and Fragment Type are set to 0. The Configuration that will be used to decode the packets is the one indexed by the ident value.",
      "ja": "RTPパケットのペイロードデータ部は2 Vorbisのデータフレームの各々に設定さVorbisのフレーム数を有する1つのオクテットのビットフィールドヘッダは、2つのオクテットの長さフィールドによって前置され、続いて24ビットのIdentフィールドで始まります。パケットタイプとフラグメントタイプは、パケットを復号するために使用される設定は、IDENT値によって索引付けものである0に設定されています。"
    },
    {
      "indent": 0,
      "text": "3. Configuration Headers",
      "section_title": true,
      "ja": "3.コンフィギュレーションヘッダ"
    },
    {
      "indent": 3,
      "text": "Unlike other mainstream audio codecs, Vorbis has no statically configured probability model. Instead, it packs all entropy decoding configuration, Vector Quantization and Huffman models into a data block that must be transmitted to the decoder with the compressed data. A decoder also requires information detailing the number of audio channels, bitrates, and similar information to configure itself for a particular compressed data stream. These two blocks of information are often referred to collectively as the \"codebooks\" for a Vorbis stream, and are included as special \"header\" packets at the start of the compressed data. In addition, the Vorbis I specification [VORBIS-SPEC-REF] requires the presence of a comment header packet that gives simple metadata about the stream, but this information is not required for decoding the frame sequence.",
      "ja": "他の主流のオーディオコーデックとは異なり、Vorbisのは、何の静的確率モデルを構成していません。その代わりに、それは圧縮されたデータを用いて復号器に送信されなければならないデータブロックにすべてのエントロピー復号化構成、ベクトル量子化及びハフマンモデルパック。デコーダは、オーディオチャネル、ビットレート、および特定の圧縮データストリームのために自身を構成するための同様の情報の数を詳述する情報を必要とします。情報のこれら二つのブロックは、しばしば、Vorbisのストリームのための「コードブック」と総称され、圧縮されたデータの開始時に特別な「ヘッダ」パケットとして含まれます。また、VorbisのI仕様[Vorbisの-SPEC-REF]はストリームについての簡単なメタデータを与えるコメントヘッダパケットの存在を必要とするが、この情報はフレームシーケンスを復号するために必要とされません。"
    },
    {
      "indent": 3,
      "text": "Thus, these two codebook header packets must be received by the decoder before any audio data can be interpreted. These requirements pose problems in RTP, which is often used over unreliable transports.",
      "ja": "任意のオーディオデータを解釈することができる前に、このように、これら二つのコードブックヘッダパケットは、デコーダによって受信されなければなりません。これらの要件は、多くの場合、信頼性の低いトランスポート上で使用されているRTP、中に問題を提起します。"
    },
    {
      "indent": 3,
      "text": "Since this information must be transmitted reliably and, as the RTP stream may change certain configuration data mid-session, there are different methods for delivering this configuration data to a client, both in-band and out-of-band, which are detailed below. In order to set up an initial state for the client application, the configuration MUST be conveyed via the signalling channel used to set up the session. One example of such signalling is SDP [RFC4566] with the Offer/Answer Model [RFC3264]. Changes to the configuration MAY be communicated via a re-invite, conveying a new SDP, or sent in-band in the RTP channel. Implementations MUST support an in-band delivery of updated codebooks, and SHOULD support out-of-band codebook update using a new SDP file. The changes may be due to different codebooks as well as different bitrates of the RTP stream.",
      "ja": "RTPストリームは、特定のコンフィギュレーションデータの中間セッションを変更することができるように、この情報は、確実に伝送されなければならないので、以下に詳述されているバンドおよびアウトオブバンドの両方のクライアントにこのコンフィギュレーション・データを配信するための異なる方法が存在します。クライアントアプリケーションの初期状態を設定するために、コンフィギュレーションセッションをセットアップするために使用されるシグナリングチャネルを介して搬送されなければなりません。そのようなシグナリングの一例は、オファー/アンサーモデル[RFC3264]とSDP [RFC4566]です。コンフィギュレーションの変更は、を介して通信することができる再招待新しいSDPを運ぶ、またはRTPチャネルにインバンド送信します。実装は、更新されたコードブックのインバンドの配信をサポートしなければならない、と新しいSDPファイルを使用したアウトオブバンドコードブックの更新をサポートする必要があります。変更は、異なるコードブックと同様にRTPストリームの異なるビットレートに起因し得ます。"
    },
    {
      "indent": 3,
      "text": "For non-chained streams, the recommended Configuration delivery method is inside the Packed Configuration (Section 3.1.1) in the SDP as explained the Mapping Media Type Parameters into SDP (Section 7.1).",
      "ja": "マッピングメディアタイプパラメータSDP（セクション7.1）に説明したように、非連鎖ストリームの場合、推奨構成配信方法は、SDPにパック構成（セクション3.1.1）内にあります。"
    },
    {
      "indent": 3,
      "text": "The 24-bit Ident field is used to map which Configuration will be used to decode a packet. When the Ident field changes, it indicates that a change in the stream has taken place. The client application MUST have in advance the correct configuration. If the client detects a change in the Ident value and does not have this information, it MUST NOT decode the raw associated Vorbis data until it fetches the correct Configuration.",
      "ja": "24ビットのIdentフィールドが設定は、パケットを復号するために使用されるマッピングするために使用されます。 Identフィールドの変更は、それは流れの変化が行われたことを示しているとき。クライアントアプリケーションは、事前に正しい構成を持たなければなりません。クライアントはのIdent値の変化を検出し、この情報を持っていない場合、それは正しい設定をフェッチするまで、それは生の関連するVorbisのデータを復号化してはなりません。"
    },
    {
      "indent": 0,
      "text": "3.1. In-band Header Transmission",
      "section_title": true,
      "ja": "3.1. インバンドヘッダー送信"
    },
    {
      "indent": 3,
      "text": "The Packed Configuration (Section 3.1.1) Payload is sent in-band with the packet type bits set to match the Vorbis Data Type. Clients MUST be capable of dealing with fragmentation and periodic re-transmission of [RFC4588] the configuration headers. The RTP timestamp value MUST reflect the transmission time of the first data packet for which this configuration applies.",
      "ja": "パック構成（3.1.1項）ペイロードがVorbisのデータ型と一致するように設定パケットタイプビットで帯域内送信されます。クライアントは、コンフィギュレーションヘッダフラグメンテーションと[RFC4588]の定期的な再送信を扱うことができなければなりません。 RTPタイムスタンプの値は、この構成が適用される最初のデータパケットの伝送時間を反映しなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.1.1. Packed Configuration",
      "section_title": true,
      "ja": "3.1.1. パックの設定"
    },
    {
      "indent": 3,
      "text": "A Vorbis Packed Configuration is indicated with the Vorbis Data Type field set to 1. Of the three headers defined in the Vorbis I specification [VORBIS-SPEC-REF], the Identification and the Setup MUST be packed as they are, while the Comment header MAY be replaced with a dummy one.",
      "ja": "そのままVorbisのパック構成はVorbisのI仕様[Vorbisの-SPEC-REF]で定義された3つのヘッダの1に設定Vorbisのデータ型フィールドで示され、同定およびセットアップは、充填されなければならないコメントヘッダ一方ダミーの1に置き換えてもよいです。"
    },
    {
      "indent": 3,
      "text": "The packed configuration stores Xiph codec configurations in a generic way: the first field stores the number of the following packets minus one (count field), the next ones represent the size of the headers (length fields), and the headers immediately follow the list of length fields. The size of the last header is implicit.",
      "ja": "一般的な方法でパックの構成を格納Xiphコーデックの設定：最初のフィールドを格納するには、次のパケットマイナス1（カウント・フィールド）の数を、次のものは、ヘッダ（長さフィールド）の大きさを表し、ヘッダはすぐにリストに従ってください長さフィールドの。最後のヘッダのサイズは、暗黙的です。"
    },
    {
      "indent": 3,
      "text": "The count and the length fields are encoded using the following logic: the data is in network byte order; every byte has the most significant bit used as a flag, and the following 7 bits are used to store the value. The first 7 most significant bits are stored in the first byte. If there are remaining bits, the flag bit is set to 1 and the subsequent 7 bits are stored in the following byte. If there are remaining bits, set the flag to 1 and the same procedure is repeated. The ending byte has the flag bit set to 0. To decode, simply iterate over the bytes until the flag bit is set to 0. For every byte, the data is added to the accumulated value multiplied by 128.",
      "ja": "数および長さフィールドは、次のロジックを使用して符号化される：データは、ネットワークバイト順です。各バイトは、フラグとして使用される最上位ビットであり、以下の7ビット値を格納するために使用されます。最初の7つの最上位ビットは、最初のバイトに格納されます。残りのビットがある場合は、フラグビットが1に設定され、その後の7ビットは、次のバイトに格納されます。残りのビットが存在する場合、1にフラグを設定し、同じ手順が繰り返されます。フラグビットがすべてのバイトについては0に設定されるまで終了バイトは、フラグビットがデコードするために、単にバイトを反復0に設定されている、データは、128を乗じた累積値に加算されます。"
    },
    {
      "indent": 3,
      "text": "The headers are packed in the same order as they are present in Ogg [VORBIS-SPEC-REF]: Identification, Comment, Setup.",
      "ja": "識別、コメント、セットアップ：ヘッダは、彼らがオッグ[Vorbisの-SPEC-REF]に存在しているのと同じ順序でパックされています。"
    },
    {
      "indent": 3,
      "text": "The 2 byte length tag defines the length of the packed headers as the sum of the Configuration, Comment, and Setup lengths.",
      "ja": "2バイト長タグが設定、コメント、およびセットアップの長さの和としてパックヘッダの長さを規定します。"
    },
    {
      "indent": 6,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|V=2|P|X|  CC   |M|     PT      |             xxxx              |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                             xxxxx                             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|           synchronization source (SSRC) identifier            |\n+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n|            contributing source (CSRC) identifiers             |\n|                              ...                              |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                      Ident                    | 0 | 1 |      1|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|           length              | n. of headers |    length1    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|    length2    |                  Identification              ..\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n..                        Identification                       ..\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n..                        Identification                       ..\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n..                        Identification                       ..\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n..               Identification                 |    Comment   ..\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n..                            Comment                          ..\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n..                            Comment                          ..\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n..                            Comment                          ..\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n..           Comment            |             Setup            ..\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n..                            Setup                            ..\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n..                            Setup                            ..\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 19,
      "text": "Figure 5: Packed Configuration Figure",
      "ja": "図5：パックの構成図"
    },
    {
      "indent": 3,
      "text": "The Ident field is set with the value that will be used by the Raw Payload Packets to address this Configuration. The Fragment type is set to 0 because the packet bears the full Packed configuration. The number of the packet is set to 1.",
      "ja": "Identフィールドは、この設定に対処するために生のペイロードパケットで使用される値に設定されています。パケットがいっぱい詰まった構成を負担するので、フラグメントタイプは0に設定されています。パケットの数が1に設定されています。"
    },
    {
      "indent": 0,
      "text": "3.2. Out of Band Transmission",
      "section_title": true,
      "ja": "3.2. バンド伝送のうち、"
    },
    {
      "indent": 3,
      "text": "The following packet definition MUST be used when Configuration is inside in the SDP.",
      "ja": "設定は、SDPに内部である場合は、次のパケットの定義を使用しなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.2.1. Packed Headers",
      "section_title": true,
      "ja": "3.2.1. パックヘッダ"
    },
    {
      "indent": 3,
      "text": "As mentioned above, the RECOMMENDED delivery vector for Vorbis configuration data is via a retrieval method that can be performed using a reliable transport protocol. As the RTP headers are not required for this method of delivery, the structure of the configuration data is slightly different. The packed header starts with a 32-bit (network-byte ordered) count field, which details the number of packed headers that are contained in the bundle. The following shows the Packed header payload for each chained Vorbis stream.",
      "ja": "上述したように、Vorbisの構成データのための推奨送達ベクターは、信頼性の高いトランスポートプロトコルを使用して行うことができる検索方法を介して行われます。 RTPヘッダは、送達のこの方法のために必要とされないように、コンフィギュレーションデータの構造が若干異なっています。パックされたヘッダは、バンドルに含まれるパックヘッダの数を詳細に32ビット（ネットワークバイト順序付け）カウントフィールド、始まります。以下に、各連鎖Vorbisのストリームのためのパックヘッダのペイロードを示しています。"
    },
    {
      "indent": 6,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                     Number of packed headers                  |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          Packed header                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          Packed header                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 21,
      "text": "Figure 6: Packed Headers Overview",
      "ja": "図6：ランチヘッダ概要"
    },
    {
      "indent": 6,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                   Ident                       |    length    ..\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n..              | n. of headers |    length1    |    length2   ..\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n..              |             Identification Header            ..\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n.................................................................\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n..              |         Comment Header                       ..\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n.................................................................\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n..                        Comment Header                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          Setup Header                        ..\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n.................................................................\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n..                         Setup Header                         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 22,
      "text": "Figure 7: Packed Headers Detail",
      "ja": "図7：ランチヘッダの詳細"
    },
    {
      "indent": 3,
      "text": "The key difference between the in-band format and this one is that there is no need for the payload header octet. In this figure, the comment has a size bigger than 127 bytes.",
      "ja": "インバンド形式とこれの主な違いは、ペイロードヘッダオクテットの必要がないことです。この図では、コメントが127バイトより大きいサイズを持っています。"
    },
    {
      "indent": 0,
      "text": "3.3. Loss of Configuration Headers",
      "section_title": true,
      "ja": "3.3. コンフィギュレーションヘッダの損失"
    },
    {
      "indent": 3,
      "text": "Unlike the loss of raw Vorbis payload data, loss of a configuration header leads to a situation where it will not be possible to successfully decode the stream. Implementations MAY try to recover from an error by requesting again the missing Configuration or, if the delivery method is in-band, by buffering the payloads waiting for the Configuration needed to decode them. The baseline reaction SHOULD either be reset or end the RTP session.",
      "ja": "生Vorbisのペイロードデータの損失とは異なり、コンフィグレーションヘッダの損失は、正常にストリームを復号化することができなくなる事態を招きます。配信方法は、それらをデコードするために必要な設定を待っているペイロードをバッファリングすることによって、帯域内であれば実装は、再び行方不明の設定を要求することにより、エラーから回復しようとしたりするかもしれません。ベースライン反応は、いずれかのRTPセッションをリセットまたは終了されるべきです。"
    },
    {
      "indent": 0,
      "text": "4. Comment Headers",
      "section_title": true,
      "ja": "4.コメントヘッダ"
    },
    {
      "indent": 3,
      "text": "Vorbis Data Type flag set to 2 indicates that the packet contains the comment metadata, such as artist name, track title, and so on. These metadata messages are not intended to be fully descriptive but rather to offer basic track/song information. Clients MAY ignore it completely. The details on the format of the comments can be found in the Vorbis I Specification [VORBIS-SPEC-REF].",
      "ja": "2に設定Vorbisのデータタイプフラグは、パケットが、そのようなように、アーティスト名、トラックタイトル、およびとして、コメントのメタデータが含まれていることを示しています。これらのメタデータのメッセージは完全に記述することを意図していないのではなく、基本的なトラック/曲情報を提供します。クライアントはそれを完全に無視してもよいです。コメントの形式の詳細は、VorbisのI仕様[Vorbisの-SPEC-REF]に見出すことができます。"
    },
    {
      "indent": 6,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|V=2|P|X|  CC   |M|     PT      |             xxxx              |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                             xxxxx                             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|           synchronization source (SSRC) identifier            |\n+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n|            contributing source (CSRC) identifiers             |\n|                              ...                              |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                      Ident                    | 0 | 2 |      1|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|            length             |            Comment           ..\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n..                           Comment                           ..\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n..                           Comment                            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 25,
      "text": "Figure 8: Comment Packet",
      "ja": "図8：パケットコメント"
    },
    {
      "indent": 3,
      "text": "The 2-byte length field is necessary since this packet could be fragmented.",
      "ja": "このパケットがフラグメント化される可能性があるので2バイトの長さフィールドが必要です。"
    },
    {
      "indent": 0,
      "text": "5. Frame Packetization",
      "section_title": true,
      "ja": "5.フレームパケット化"
    },
    {
      "indent": 3,
      "text": "Each RTP payload contains either one Vorbis packet fragment or an integer number of complete Vorbis packets (up to a maximum of 15 packets, since the number of packets is defined by a 4-bit value).",
      "ja": "（パケットの数は4ビットの値によって定義されているので、15のパケットの最大まで）各RTPペイロードは、一のVorbisのパケット断片または完全なVorbisのパケットの整数のいずれかを含みます。"
    },
    {
      "indent": 3,
      "text": "Any Vorbis data packet that is less than path MTU SHOULD be bundled in the RTP payload with as many Vorbis packets as will fit, up to a maximum of 15, except when such bundling would exceed an application's desired transmission latency. Path MTU is detailed in [RFC1191] and [RFC1981].",
      "ja": "パスMTUよりも小さい任意のVorbisのデータパケットは、このようなバンドルは、アプリケーションの所望の送信待ち時間を超える場合を除いて、15の最大値まで、収まる限り多くVorbisのパケットのRTPペイロードにバンドルされるべきです。パスMTUは、[RFC1191]と[RFC1981]に詳述されています。"
    },
    {
      "indent": 3,
      "text": "A fragmented packet has a zero in the last four bits of the payload header. The first fragment will set the Fragment type to 1. Each fragment after the first will set the Fragment type to 2 in the payload header. The consecutive fragments MUST be sent without any other payload being sent between the first and the last fragment. The RTP payload containing the last fragment of the Vorbis packet will have the Fragment type set to 3. To maintain the correct sequence for fragmented packet reception, the timestamp field of fragmented packets MUST be the same as the first packet sent, with the sequence number incremented as normal for the subsequent RTP payloads; this will affect the RTCP jitter measurement. The length field shows the fragment length.",
      "ja": "断片化されたパケットは、ペイロードヘッダの最後の4ビットにゼロを有しています。最初のペイロード・ヘッダ2にフラグメントのタイプを設定します後の最初の断片が1に各フラグメントをフラグメント・タイプを設定します。連続的なフラグメントは、他のペイロードが最初と最後の断片の間で送信されることなく送信されなければなりません。 Vorbisのパケットの最後のフラグメントを含むRTPペイロードは、シーケンス番号と、断片化されたパケットのタイムスタンプフィールドは、送信された最初のパケットと同じでなければなりません、断片化されたパケットの受信のための正しい順序を維持するためには3に設定フラグメント型を有するであろう後続のRTPペイロードのために通常通りインクリメント。これは、RTCPのジッタ測定に影響を与えます。長さフィールドは、断片の長さを示しています。"
    },
    {
      "indent": 0,
      "text": "5.1. Example Fragmented Vorbis Packet",
      "section_title": true,
      "ja": "5.1. 例断片化Vorbisのパケット"
    },
    {
      "indent": 3,
      "text": "Here is an example of a fragmented Vorbis packet split over three RTP payloads. Each of them contains the standard RTP headers as well as the 4-octet Vorbis headers.",
      "ja": "ここでは3つのRTPペイロードで、断片化Vorbisのパケット分割の一例です。それらのそれぞれは、標準のRTPヘッダだけでなく、4オクテットVorbisのヘッダが含まれています。"
    },
    {
      "indent": 6,
      "text": "Packet 1:",
      "ja": "パケット1："
    },
    {
      "indent": 6,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|V=2|P|X|  CC   |M|     PT      |           1000                |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                            12345                              |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|           synchronization source (SSRC) identifier            |\n+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n|            contributing source (CSRC) identifiers             |\n|                              ...                              |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       Ident                   | 1 | 0 |      0|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             length            |            vorbis data       ..\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n..                        vorbis data                           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 14,
      "text": "Figure 9: Example Fragmented Packet (Packet 1)",
      "ja": "図9：例断片化パケット（パケット1）"
    },
    {
      "indent": 3,
      "text": "In this payload, the initial sequence number is 1000 and the timestamp is 12345. The Fragment type is set to 1, the number of packets field is set to 0, and as the payload is raw Vorbis data, the VDT field is set to 0.",
      "ja": "このペイロードでは、初期シーケンス番号は1000で、フラグメントタイプが1に設定されたタイムスタンプは12345、パケットのフィールドの数は0に設定され、ペイロードが生Vorbisのデータであるとして、VDTフィールドは0に設定されています。"
    },
    {
      "indent": 6,
      "text": "Packet 2:",
      "ja": "パケット2："
    },
    {
      "indent": 6,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|V=2|P|X|  CC   |M|     PT      |           1001                |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                             12345                             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|           synchronization source (SSRC) identifier            |\n+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n|            contributing source (CSRC) identifiers             |\n|                              ...                              |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       Ident                   | 2 | 0 |      0|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             length            |          vorbis data         ..\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n..                        vorbis data                           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 14,
      "text": "Figure 10: Example Fragmented Packet (Packet 2)",
      "ja": "図10：例断片化パケット（パケット2）"
    },
    {
      "indent": 3,
      "text": "The Fragment type field is set to 2, and the number of packets field is set to 0. For large Vorbis fragments, there can be several of these types of payloads. The maximum packet size SHOULD be no greater than the path MTU, including all RTP and payload headers. The sequence number has been incremented by one, but the timestamp field remains the same as the initial payload.",
      "ja": "フラグメント・タイプ・フィールドは2に設定され、パケットのフィールドの数が大きいVorbisの断片については0に設定され、ペイロードのこれらのタイプのいくつかがあり得ます。最大パケットサイズは、すべてのRTPペイロードヘッダを含む経路MTUよりも大きくてはなりません。シーケンス番号は1ずつインクリメントされていますが、タイムスタンプフィールドは、最初のペイロードと同じまま。"
    },
    {
      "indent": 6,
      "text": "Packet 3:",
      "ja": "パケット3："
    },
    {
      "indent": 6,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|V=2|P|X|  CC   |M|     PT      |           1002                |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                             12345                             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|           synchronization source (SSRC) identifier            |\n+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n|            contributing source (CSRC) identifiers             |\n|                              ...                              |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                      Ident                    | 3 | 0 |      0|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             length            |          vorbis data         ..\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n..                        vorbis data                           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 14,
      "text": "Figure 11: Example Fragmented Packet (Packet 3)",
      "ja": "図11：例断片化パケット（パケット3）"
    },
    {
      "indent": 3,
      "text": "This is the last Vorbis fragment payload. The Fragment type is set to 3 and the packet count remains set to 0. As in the previous payloads, the timestamp remains set to the first payload timestamp in the sequence and the sequence number has been incremented.",
      "ja": "これが最後のVorbisのフラグメントペイロードです。フラグメント型が3に設定され、パケットカウントが前のペイロードのように0に設定されたまま、タイムスタンプは、シーケンス内の最初のペイロードタイムスタンプに設定され、シーケンス番号がインクリメントされたままです。"
    },
    {
      "indent": 0,
      "text": "5.2. Packet Loss",
      "section_title": true,
      "ja": "5.2. パケットロス"
    },
    {
      "indent": 3,
      "text": "As there is no error correction within the Vorbis stream, packet loss will result in a loss of signal. Packet loss is more of an issue for fragmented Vorbis packets as the client will have to cope with the handling of the Fragment Type. In case of loss of fragments, the client MUST discard all the remaining Vorbis fragments and decode the incomplete packet. If we use the fragmented Vorbis packet example above and the first RTP payload is lost, the client MUST detect that the next RTP payload has the packet count field set to 0 and the Fragment type 2 and MUST drop it. The next RTP payload, which is the final fragmented packet, MUST be dropped in the same manner. If the missing RTP payload is the last, the two fragments received will be kept and the incomplete Vorbis packet decoded.",
      "ja": "Vorbisのストリーム内のエラー訂正がないように、パケット損失は、信号の損失をもたらします。クライアントは、フラグメントタイプの取り扱いに対処する必要がありますように、パケットロスが断片化さVorbisのパケットの問題の詳細です。フラグメントの損失の場合には、クライアントは、残りのすべてのVorbisのフラグメントを破棄し、不完全なパケットをデコードしなければなりません。私たちは、上記断片化Vorbisのパケットの例を使用し、最初のRTPペイロードが失われた場合、クライアントは次のRTPペイロードが0にパケット数フィールドセットとフラグメントの2型を持っていることを検出しなければならないし、それを削除する必要があります。最終フラグメントパケットで次のRTPペイロードは、同じ方法でドロップされなければなりません。不足しているRTPペイロードが最後である場合は、受信した2つの断片を維持し、不完全Vorbisのパケットが復号化されます。"
    },
    {
      "indent": 3,
      "text": "Loss of any of the Configuration fragment will result in the loss of the full Configuration packet with the result detailed in the Loss of Configuration Headers (Section 3.3) section.",
      "ja": "構成断片のいずれかの損失が設定ヘッダ（セクション3.3）節の損失に詳述結果に完全な設定パケットの損失をもたらすであろう。"
    },
    {
      "indent": 0,
      "text": "6. IANA Considerations",
      "section_title": true,
      "ja": "6. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "Type name: audio",
      "ja": "型名：オーディオ"
    },
    {
      "indent": 3,
      "text": "Subtype name: vorbis",
      "ja": "サブタイプ名：vorbisの"
    },
    {
      "indent": 3,
      "text": "Required parameters:",
      "ja": "必須パラメータ："
    },
    {
      "indent": 6,
      "text": "rate: indicates the RTP timestamp clock rate as described in RTP Profile for Audio and Video Conferences with Minimal Control [RFC3551].",
      "ja": "レート：最小量のコントロールがあるオーディオとビデオ会議のためのRTPプロフィールで説明したように、[RFC3551] RTPタイムスタンプのクロックレートを示します。"
    },
    {
      "indent": 6,
      "text": "channels: indicates the number of audio channels as described in RTP Profile for Audio and Video Conferences with Minimal Control [RFC3551].",
      "ja": "チャンネル：最小量のコントロールがあるオーディオとビデオ会議のためのRTPプロフィールで説明したように、[RFC3551]オーディオチャンネルの数を示します。"
    },
    {
      "indent": 6,
      "text": "configuration: the base64 [RFC4648] representation of the Packed Headers (Section 3.2.1).",
      "ja": "構成：パックヘッダ（3.2.1）のBASE64 [RFC4648]表現。"
    },
    {
      "indent": 3,
      "text": "Encoding considerations:",
      "ja": "エンコードの考慮事項："
    },
    {
      "indent": 6,
      "text": "This media type is framed and contains binary data.",
      "ja": "このメディアタイプは、フレームとバイナリデータが含まれています。"
    },
    {
      "indent": 3,
      "text": "Security considerations:",
      "ja": "セキュリティの考慮事項："
    },
    {
      "indent": 6,
      "text": "See Section 10 of RFC 5215.",
      "ja": "RFC 5215のセクション10を参照してください。"
    },
    {
      "indent": 3,
      "text": "Interoperability considerations:",
      "ja": "相互運用性の考慮事項："
    },
    {
      "indent": 6,
      "text": "None",
      "ja": "無し"
    },
    {
      "indent": 3,
      "text": "Published specification:",
      "ja": "公開された仕様："
    },
    {
      "indent": 6,
      "text": "RFC 5215",
      "ja": "RFC 5215"
    },
    {
      "indent": 6,
      "text": "Ogg Vorbis I specification: Codec setup and packet decode. Available from the Xiph website, http://xiph.org/",
      "ja": "Ogg VorbisのI仕様：コーデックのセットアップおよびパケット・デコード。 Xiphのウェブサイト、http://xiph.org/から入手可能"
    },
    {
      "indent": 3,
      "text": "Applications which use this media type:",
      "ja": "このメディアタイプを使用するアプリケーション："
    },
    {
      "indent": 6,
      "text": "Audio streaming and conferencing tools",
      "ja": "オーディオストリーミングと会議ツール"
    },
    {
      "indent": 3,
      "text": "Additional information:",
      "ja": "追加情報："
    },
    {
      "indent": 6,
      "text": "None",
      "ja": "無し"
    },
    {
      "indent": 3,
      "text": "Person & email address to contact for further information:",
      "ja": "詳細のために連絡する人とEメールアドレス："
    },
    {
      "indent": 6,
      "text": "Luca Barbato: <lu_zero@gentoo.org> IETF Audio/Video Transport Working Group",
      "ja": "ルカBarbato：<lu_zero@gentoo.org> IETFオーディオ/ビデオ輸送ワーキンググループ"
    },
    {
      "indent": 3,
      "text": "Intended usage:",
      "ja": "意図している用法："
    },
    {
      "indent": 6,
      "text": "COMMON",
      "ja": "一般"
    },
    {
      "indent": 3,
      "text": "Restriction on usage:",
      "ja": "使用に関する制限事項："
    },
    {
      "indent": 6,
      "text": "This media type depends on RTP framing, hence is only defined for transfer via RTP [RFC3550].",
      "ja": "このメディアタイプは、したがってのみRTP [RFC3550]を介して転送するために定義され、RTPフレーミングに依存します。"
    },
    {
      "indent": 3,
      "text": "Author:",
      "ja": "著者："
    },
    {
      "indent": 6,
      "text": "Luca Barbato",
      "ja": "ルカBarbato"
    },
    {
      "indent": 3,
      "text": "Change controller:",
      "ja": "コントローラを変更します。"
    },
    {
      "indent": 6,
      "text": "IETF AVT Working Group delegated from the IESG",
      "ja": "IETF AVT作業部会はIESGから委任しました"
    },
    {
      "indent": 0,
      "text": "6.1. Packed Headers IANA Considerations",
      "section_title": true,
      "ja": "6.1. パックヘッダIANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "The following IANA considerations refers to the split configuration Packed Headers (Section 3.2.1) used within RFC 5215.",
      "ja": "次のIANAの考慮は、RFC 5215内で使用される分割構成パックヘッダ（3.2.1）を指します。"
    },
    {
      "indent": 3,
      "text": "Type name: audio",
      "ja": "型名：オーディオ"
    },
    {
      "indent": 3,
      "text": "Subtype name: vorbis-config",
      "ja": "サブタイプ名：vorbisの-config設定"
    },
    {
      "indent": 3,
      "text": "Required parameters:",
      "ja": "必須パラメータ："
    },
    {
      "indent": 6,
      "text": "None",
      "ja": "無し"
    },
    {
      "indent": 3,
      "text": "Optional parameters:",
      "ja": "オプションのパラメータ："
    },
    {
      "indent": 6,
      "text": "None",
      "ja": "無し"
    },
    {
      "indent": 3,
      "text": "Encoding considerations:",
      "ja": "エンコードの考慮事項："
    },
    {
      "indent": 6,
      "text": "This media type contains binary data.",
      "ja": "このメディアタイプはバイナリデータが含まれています。"
    },
    {
      "indent": 3,
      "text": "Security considerations:",
      "ja": "セキュリティの考慮事項："
    },
    {
      "indent": 6,
      "text": "See Section 10 of RFC 5215.",
      "ja": "RFC 5215のセクション10を参照してください。"
    },
    {
      "indent": 3,
      "text": "Interoperability considerations:",
      "ja": "相互運用性の考慮事項："
    },
    {
      "indent": 6,
      "text": "None",
      "ja": "無し"
    },
    {
      "indent": 3,
      "text": "Published specification:",
      "ja": "公開された仕様："
    },
    {
      "indent": 6,
      "text": "RFC 5215",
      "ja": "RFC 5215"
    },
    {
      "indent": 3,
      "text": "Applications which use this media type:",
      "ja": "このメディアタイプを使用するアプリケーション："
    },
    {
      "indent": 6,
      "text": "Vorbis encoded audio, configuration data",
      "ja": "Vorbisのエンコードされたオーディオ、コンフィギュレーション・データ"
    },
    {
      "indent": 3,
      "text": "Additional information:",
      "ja": "追加情報："
    },
    {
      "indent": 6,
      "text": "None",
      "ja": "無し"
    },
    {
      "indent": 3,
      "text": "Person & email address to contact for further information:",
      "ja": "詳細のために連絡する人とEメールアドレス："
    },
    {
      "indent": 6,
      "text": "Luca Barbato: <lu_zero@gentoo.org> IETF Audio/Video Transport Working Group",
      "ja": "ルカBarbato：<lu_zero@gentoo.org> IETFオーディオ/ビデオ輸送ワーキンググループ"
    },
    {
      "indent": 3,
      "text": "Intended usage: COMMON",
      "ja": "意図している用法：COMMON"
    },
    {
      "indent": 3,
      "text": "Restriction on usage:",
      "ja": "使用に関する制限事項："
    },
    {
      "indent": 6,
      "text": "This media type doesn't depend on the transport.",
      "ja": "このメディアタイプは、トランスポートに依存しません。"
    },
    {
      "indent": 3,
      "text": "Author:",
      "ja": "著者："
    },
    {
      "indent": 6,
      "text": "Luca Barbato",
      "ja": "ルカBarbato"
    },
    {
      "indent": 3,
      "text": "Change controller:",
      "ja": "コントローラを変更します。"
    },
    {
      "indent": 6,
      "text": "IETF AVT Working Group delegated from the IESG",
      "ja": "IETF AVT作業部会はIESGから委任しました"
    },
    {
      "indent": 0,
      "text": "7. SDP Related Considerations",
      "section_title": true,
      "ja": "7. SDP関連の注意事項"
    },
    {
      "indent": 3,
      "text": "The following paragraphs define the mapping of the parameters described in the IANA considerations section and their usage in the Offer/Answer Model [RFC3264]. In order to be forward compatible, the implementation MUST ignore unknown parameters.",
      "ja": "以下の段落では、IANA問題部とオファー/アンサーモデル[RFC3264]でのそれらの使用で説明したパラメータのマッピングを定義します。前方互換であるために、実装は未知のパラメータを無視しなければなりません。"
    },
    {
      "indent": 0,
      "text": "7.1. Mapping Media Type Parameters into SDP",
      "section_title": true,
      "ja": "7.1.  SDPへのマッピングメディアタイプのパラメータ"
    },
    {
      "indent": 3,
      "text": "The information carried in the Media Type specification has a specific mapping to fields in the Session Description Protocol (SDP) [RFC4566], which is commonly used to describe RTP sessions. When SDP is used to specify sessions, the mapping are as follows: o The type name (\"audio\") goes in SDP \"m=\" as the media name.",
      "ja": "メディアタイプ仕様で搬送される情報は、一般的にRTPセッションを記述するために使用されるセッション記述プロトコル（SDP）[RFC4566]のフィールドに特定のマッピングを有します。 SDPは、セッションを指定するために使用される場合、以下のように、マッピングは、次のとおりタイプ名（「オーディオ」）Oメディア名としてSDP「M =」に進みます。"
    },
    {
      "indent": 3,
      "text": "o The subtype name (\"vorbis\") goes in SDP \"a=rtpmap\" as the encoding name.",
      "ja": "Oサブタイプ名（「Vorbisの」）は、符号化名としてSDPの「a = rtpmap」に進みます。"
    },
    {
      "indent": 3,
      "text": "o The parameter \"rate\" also goes in \"a=rtpmap\" as the clock rate.",
      "ja": "Oパラメータ「率」も、クロックレートとして「A = rtpmap」になります。"
    },
    {
      "indent": 3,
      "text": "o The parameter \"channels\" also goes in \"a=rtpmap\" as the channel count.",
      "ja": "パラメータ「チャンネル」Oもチャンネル数として「= rtpmap」になります。"
    },
    {
      "indent": 3,
      "text": "o The mandated parameters \"configuration\" MUST be included in the SDP \"a=fmtp\" attribute.",
      "ja": "O義務付けパラメータ「構成」はSDP「=のfmtp」属性に含まれなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the stream comprises chained Vorbis files and all of them are known in advance, the Configuration Packet for each file SHOULD be passed to the client using the configuration attribute.",
      "ja": "ストリームが連鎖Vorbisのファイルを含み、それらのすべてが予め分かっている場合は、各ファイルの構成パケットは、構成属性を使用してクライアントに渡す必要があります。"
    },
    {
      "indent": 3,
      "text": "The port value is specified by the server application bound to the address specified in the c= line. The channel count value specified in the rtpmap attribute SHOULD match the current Vorbis stream or should be considered the maximum number of channels to be expected. The timestamp clock rate MUST be a multiple of the sample rate; a different payload number MUST be used if the clock rate changes. The Configuration payload delivers the exact information, thus the SDP information SHOULD be considered a hint. An example is found below.",
      "ja": "ポートの値は、C =行で指定されたアドレスにバインドされたサーバ・アプリケーションによって指定されています。 rtpmap属性で指定されたチャネル・カウント値は、現在のVorbisのストリームと一致する必要がありますまたはチャネルの最大数が予想されると考えるべきです。タイムスタンプクロックレートは、サンプルレートの倍数でなければなりません。異なるペイロード番号は、クロック・レートが変化した場合に使用しなければなりません。設定ペイロードは、このようにSDP情報がヒントと見なされるべきであり、正確な情報を配信します。以下の例では、発見されました。"
    },
    {
      "indent": 0,
      "text": "7.1.1. SDP Example",
      "section_title": true,
      "ja": "7.1.1.  SDP例"
    },
    {
      "indent": 3,
      "text": "The following example shows a basic SDP single stream. The first configuration packet is inside the SDP; other configurations could be fetched at any time from the URIs provided. The following base64 [RFC4648] configuration string is folded in this example due to RFC line length limitations.",
      "ja": "次の例では、基本的なSDP単一のストリームを示しています。第一構成パケットは、SDP内にあります。他の構成は、提供のURIからいつでも取り出すことができました。以下BASE64 [RFC4648]の構成文字列が原因RFC線路長の制限この例で折り畳まれます。"
    },
    {
      "indent": 6,
      "text": "c=IN IP4 192.0.2.1",
      "ja": "IP4 192.0.2.1のC ="
    },
    {
      "indent": 6,
      "text": "m=audio RTP/AVP 98",
      "ja": "M =オーディオRTP / AVP 98"
    },
    {
      "indent": 6,
      "text": "a=rtpmap:98 vorbis/44100/2",
      "ja": "= rtpmap：98 Vorbisの/ 2分の44100"
    },
    {
      "indent": 6,
      "text": "a=fmtp:98 configuration=AAAAAZ2f4g9NAh4aAXZvcmJpcwA...;",
      "ja": "=のfmtp：98の構成= AAAAAZ2f4g9NAh4aAXZvcmJpcwA ...。"
    },
    {
      "indent": 3,
      "text": "Note that the payload format (encoding) names are commonly shown in uppercase. Media Type subtypes are commonly shown in lowercase. These names are case-insensitive in both places. Similarly, parameter names are case-insensitive both in Media Type types and in the default mapping to the SDP a=fmtp attribute. The a=fmtp line is a single line, even if it is shown as multiple lines in this document for clarity.",
      "ja": "ペイロード形式（符号化）の名前は、一般的に大文字で示されていることに留意されたいです。メディアタイプのサブタイプは、一般的に小文字で示されています。これらの名前は、両方の場所で大文字と小文字を区別しません。同様に、パラメータ名はメディアタイプの種類に及びSDPのA =のfmtp属性にデフォルトのマッピングの両方で大文字と小文字を区別しません。 A =のfmtp線は、それが明確にするために、この文書に記載されている複数の行として示されている場合でも、単一の線です。"
    },
    {
      "indent": 0,
      "text": "7.2. Usage with the SDP Offer/Answer Model",
      "section_title": true,
      "ja": "7.2.  SDPオファー/アンサーモデルと使用法"
    },
    {
      "indent": 3,
      "text": "There are no negotiable parameters. All of them are declarative.",
      "ja": "何の交渉パラメータはありません。それらのすべては、宣言されています。"
    },
    {
      "indent": 0,
      "text": "8. Congestion Control",
      "section_title": true,
      "ja": "8.輻輳制御"
    },
    {
      "indent": 3,
      "text": "The general congestion control considerations for transporting RTP data apply to Vorbis audio over RTP as well. See the RTP specification [RFC3550] and any applicable RTP profile (e.g., [RFC3551]). Audio data can be encoded using a range of different bit rates, so it is possible to adapt network bandwidth by adjusting the encoder bit rate in real time or by having multiple copies of content encoded at different bit rates.",
      "ja": "RTPデータを転送するための一般的な輻輳制御の検討事項は、同様にRTP上Vorbisのオーディオに適用されます。 RTP仕様[RFC3550]と該当RTPプロファイルを参照して（例えば、[RFC3551]）。オーディオデータは、異なるビットレートの範囲を使用して符号化することができるので、リアルタイムで符号化ビットレートを調整することによって、または異なるビットレートでエンコードされたコンテンツの複数のコピーを有することによって、ネットワーク帯域幅を適応させることが可能です。"
    },
    {
      "indent": 0,
      "text": "9. Example",
      "section_title": true,
      "ja": "9.例"
    },
    {
      "indent": 3,
      "text": "The following example shows a common usage pattern that MAY be applied in such a situation. The main scope of this section is to explain better usage of the transmission vectors.",
      "ja": "次の例では、このような状況にも適用することができる一般的な使用パターンを示しています。このセクションの主な範囲は、送信ベクトルのより良い使い方を説明することです。"
    },
    {
      "indent": 0,
      "text": "9.1. Stream Radio",
      "section_title": true,
      "ja": "9.1. ストリームラジオ"
    },
    {
      "indent": 3,
      "text": "This is one of the most common situations: there is one single server streaming content in multicast, and the clients may start a session at a random time. The content itself could be a mix of a live stream (as the webjockey's voice) and stored streams (as the music she plays).",
      "ja": "マルチキャストでストリーミングコンテンツを1台のサーバーがあり、クライアントはランダムな時間でセッションを開始することがあります。これは、最も一般的な状況のいずれかです。コンテンツ自体は（webjockeyの声など）、ライブストリームと（彼女が演じる音楽など）が格納されたストリームの組み合わせである可能性があります。"
    },
    {
      "indent": 3,
      "text": "In this situation, we don't know in advance how many codebooks we will use. The clients can join anytime and users expect to start listening to the content in a short time.",
      "ja": "このような状況で、我々はどのように使用するか、多くのコードブック事前に知りません。クライアントはいつでも参加することができ、ユーザーは短時間でコンテンツを聴き始めることを期待しています。"
    },
    {
      "indent": 3,
      "text": "Upon joining, the client will receive the current Configuration necessary to decode the current stream inside the SDP so that the decoding will start immediately after.",
      "ja": "入社時には、クライアントは、復号化が直後に開始されるように、SDP内の現在のストリームをデコードするのに必要な電流設定を受信します。"
    },
    {
      "indent": 3,
      "text": "When the streamed content changes, the new Configuration is sent in-band before the actual stream, and the Configuration that has to be sent inside the SDP is updated. Since the in-band method is unreliable, an out-of-band fallback is provided.",
      "ja": "ときにストリーミングコンテンツの変更、新しいコンフィギュレーションは、実際のストリームの前にバンド送信され、SDP内で送信する必要があり設定が更新されます。インバンド方式が信頼できないため、アウト・オブ・バンドフォールバックが提供されます。"
    },
    {
      "indent": 3,
      "text": "The client may choose to fetch the Configuration from the alternate source as soon as it discovers a Configuration packet got lost in-band, or use selective retransmission [RFC3611] if the server supports this feature.",
      "ja": "クライアントは、それが構成パケットがインバンド失われてしまった発見次第、代替ソースからのコンフィギュレーションを取得することを選択するか、サーバがこの機能をサポートしている場合、選択的再送信[RFC3611]を使用することができます。"
    },
    {
      "indent": 3,
      "text": "A server-side optimization would be to keep a hash list of the Configurations per session, which avoids packing all of them and sending the same Configuration with different Ident tags.",
      "ja": "サーバー側の最適化は、それらのすべてを梱包し、異なるのIdentタグと同じコンフィギュレーションを送信しませんセッションあたりの構成のハッシュリストを維持するだろう。"
    },
    {
      "indent": 3,
      "text": "A client-side optimization would be to keep a tag list of the Configurations per session and not process configuration packets that are already known.",
      "ja": "クライアント側の最適化は、セッションごとの設定のタグリストを維持し、すでに知られているコンフィギュレーション・パケットを処理しないことであろう。"
    },
    {
      "indent": 0,
      "text": "10. Security Considerations",
      "section_title": true,
      "ja": "10.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "RTP packets using this payload format are subject to the security considerations discussed in the RTP specification [RFC3550], the base64 specification [RFC4648], and the URI Generic syntax specification [RFC3986]. Among other considerations, this implies that the confidentiality of the media stream is achieved by using encryption. Because the data compression used with this payload format is applied end-to-end, encryption may be performed on the compressed data.",
      "ja": "このペイロードフォーマットを使用して、RTPパケットは、RTP仕様[RFC3550]で説明したセキュリティ上の考慮事項、BASE64仕様[RFC4648]、およびURIジェネリックシンタックス仕様[RFC3986]の対象となっています。他の考察の中で、これは、メディアストリームの機密性は、暗号化を使用することによって達成されることを意味します。このペイロードフォーマットに使用されるデータ圧縮は、エンドツーエンド印加されるため、暗号化は、圧縮されたデータに対して実行することができます。"
    },
    {
      "indent": 0,
      "text": "11. Copying Conditions",
      "section_title": true,
      "ja": "11.コピー条件"
    },
    {
      "indent": 3,
      "text": "The authors agree to grant third parties the irrevocable right to copy, use, and distribute the work, with or without modification, in any medium, without royalty, provided that, unless separate permission is granted, redistributed modified works do not contain misleading author, version, name of work, or endorsement information.",
      "ja": "著者は、第三者に個別の許可が付与されない限り、再配布修正作品は誤解を招く作者が含まれていない、という条件で、コピーの使用、および使用料なしで、いかなる媒体で、変更の有無にかかわらず、仕事を配布する取消不能の権利を、許可することに同意しますバージョン、仕事、または保証情報の名前。"
    },
    {
      "indent": 0,
      "text": "12. Acknowledgments",
      "section_title": true,
      "ja": "12.謝辞"
    },
    {
      "indent": 3,
      "text": "This document is a continuation of the following documents:",
      "ja": "このドキュメントでは、次のドキュメントの続きです。"
    },
    {
      "indent": 3,
      "text": "Moffitt, J., \"RTP Payload Format for Vorbis Encoded Audio\", February 2001.",
      "ja": "モフィット、J.、 \"VorbisのエンコードされたオーディオのためのRTPペイロードフォーマット\"、2001年2月。"
    },
    {
      "indent": 3,
      "text": "Kerr, R., \"RTP Payload Format for Vorbis Encoded Audio\", December 2004.",
      "ja": "カー、R.、 \"VorbisのエンコードされたオーディオのためのRTPペイロードフォーマット\"、2004年12月。"
    },
    {
      "indent": 3,
      "text": "The Media Type declaration is a continuation of the following document:",
      "ja": "メディアタイプ宣言は、以下の文書の続きです。"
    },
    {
      "indent": 3,
      "text": "Short, B., \"The audio/rtp-vorbis MIME Type\", January 2008.",
      "ja": "ショート、B.、 \"オーディオ/ RTP-vorbisのMIMEタイプ\"、2008年1月。"
    },
    {
      "indent": 3,
      "text": "Thanks to the AVT, Vorbis Communities / Xiph.Org Foundation including Steve Casner, Aaron Colwell, Ross Finlayson, Fluendo, Ramon Garcia, Pascal Hennequin, Ralph Giles, Tor-Einar Jarnbjo, Colin Law, John Lazzaro, Jack Moffitt, Christopher Montgomery, Colin Perkins, Barry Short, Mike Smith, Phil Kerr, Michael Sparks, Magnus Westerlund, David Barrett, Silvia Pfeiffer, Stefan Ehmann, Gianni Ceccarelli, and",
      "ja": "AVTのおかげで、スティーブCasner含むVorbisのコミュニティ/ Xiph.Org財団、アーロンColwell、ロスフィンレイソン、Fluendo、ラモン・ガルシア、パスカルHennequin、ラルフ・ジャイルズ、Torの-はEinar Jarnbjo、コリン・法律、ジョン・ラザロ、ジャック・モフィット、クリストファー・モンゴメリー、コリンパーキンス、バリー・ショート、マイク・スミス、フィル・カー、マイケル・スパークス、マグヌスウェスター、デヴィッド・バレット、シルビア・ファイファー、ステファンEhmann、ジャンニCeccarelli、および"
    },
    {
      "indent": 3,
      "text": "Alessandro Salvatori. Thanks to the LScube Group, in particular Federico Ridolfo, Francesco Varano, Giampaolo Mancini, Dario Gallucci, and Juan Carlos De Martin.",
      "ja": "アレッサンドロSalvatori。特にフレデリックルドルフでLScubeグループ、フランチェスコヴァラーノ、ジャンパオロ・マンシーニ、ダリオGallucci、とフアン・カルロス・デ・マーティンに感謝します。"
    },
    {
      "indent": 0,
      "text": "13. References",
      "section_title": true,
      "ja": "13.参考文献"
    },
    {
      "indent": 0,
      "text": "13.1. Normative References",
      "section_title": true,
      "ja": "13.1. 引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC1191] Mogul, J. and S. Deering, \"Path MTU discovery\", RFC 1191, November 1990.",
      "ja": "[RFC1191]ムガール人、J.とS.デアリング、 \"パスMTUディスカバリ\"、RFC 1191、1990年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC1981] McCann, J., Deering, S., and J. Mogul, \"Path MTU Discovery for IP version 6\", RFC 1981, August 1996.",
      "ja": "[RFC1981]マッキャン、J.、デアリング、S.、およびJ.ムガール人、RFC 1981、1996年8月 \"IPバージョン6のパスMTUディスカバリー\"。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC3264] Rosenberg, J. and H. Schulzrinne, \"An Offer/Answer Model with Session Description Protocol (SDP)\", RFC 3264, June 2002.",
      "ja": "[RFC3264]ローゼンバーグ、J.とH. Schulzrinneと、RFC 3264、2002年6月 \"セッション記述プロトコル（SDP）とのオファー/アンサーモデル\"。"
    },
    {
      "indent": 3,
      "text": "[RFC3550] Schulzrinne, H., Casner, S., Frederick, R., and V. Jacobson, \"RTP: A Transport Protocol for Real-Time Applications\", STD 64, RFC 3550, July 2003.",
      "ja": "[RFC3550] Schulzrinneと、H.、Casner、S.、フレデリック、R.、およびV.ヤコブソン、 \"RTP：リアルタイムアプリケーションのためのトランスポートプロトコル\"、STD 64、RFC 3550、2003年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC3551] Schulzrinne, H. and S. Casner, \"RTP Profile for Audio and Video Conferences with Minimal Control\", STD 65, RFC 3551, July 2003.",
      "ja": "[RFC3551] Schulzrinneと、H.とS. Casner、 \"最小量のコントロールがあるオーディオとビデオ会議システムのためのRTPプロフィール\"、STD 65、RFC 3551、2003年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC3986] Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform Resource Identifier (URI): Generic Syntax\", STD 66, RFC 3986, January 2005.",
      "ja": "[RFC3986]バーナーズ - リー、T.、フィールディング、R.、およびL. Masinter、 \"ユニフォームリソース識別子（URI）：汎用構文\"、STD 66、RFC 3986、2005年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC4566] Handley, M., Jacobson, V., and C. Perkins, \"SDP: Session Description Protocol\", RFC 4566, July 2006.",
      "ja": "[RFC4566]ハンドリー、M.、ヤコブソン、V.、およびC.パーキンス、 \"SDP：セッション記述プロトコル\"、RFC 4566、2006年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC4648] Josefsson, S., \"The Base16, Base32, and Base64 Data Encodings\", RFC 4648, October 2006.",
      "ja": "[RFC4648] Josefsson氏、S.、 \"Base16、Base32、およびBase64でデータエンコーディング\"、RFC 4648、2006年10月。"
    },
    {
      "indent": 3,
      "text": "[VORBIS-SPEC-REF] \"Ogg Vorbis I specification: Codec setup and packet decode. Available from the Xiph website, http://xiph.org/vorbis/doc/Vorbis_I_spec.html\".",
      "ja": "[Vorbisの-SPEC-REF] \"のOgg VorbisのI仕様：コーデックのセットアップおよびパケット・デコード可能なXiphのウェブサイト、http://xiph.org/vorbis/doc/Vorbis_I_spec.htmlから。\"。"
    },
    {
      "indent": 0,
      "text": "13.2. Informative References",
      "section_title": true,
      "ja": "13.2. 参考文献"
    },
    {
      "indent": 3,
      "text": "[LIBVORBIS] \"libvorbis: Available from the dedicated website, http://vorbis.com/\".",
      "ja": "[LIBVORBIS] \"libvorbis：専用ウェブサイト、http://vorbis.com/から利用可能\"。"
    },
    {
      "indent": 3,
      "text": "[RFC3533] Pfeiffer, S., \"The Ogg Encapsulation Format Version 0\", RFC 3533, May 2003.",
      "ja": "[RFC3533]ファイファー、S.、 \"オッグカプセル化形式のバージョン0\"、RFC 3533、2003年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC3611] Friedman, T., Caceres, R., and A. Clark, \"RTP Control Protocol Extended Reports (RTCP XR)\", RFC 3611, November 2003.",
      "ja": "[RFC3611]フリードマン、T.、カセレス、R.、およびA.クラーク、 \"RTP制御プロトコル拡張レポート（RTCP XR）\"、RFC 3611、2003年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC4588] Rey, J., Leon, D., Miyazaki, A., Varsa, V., and R. Hakenberg, \"RTP Retransmission Payload Format\", RFC 4588, July 2006.",
      "ja": "[RFC4588]レイ、J.、レオン、D.、宮崎、A.、Varsa、V.、およびR. Hakenberg、 \"RTP再送信ペイロードフォーマット\"、RFC 4588、2006年7月。"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Luca Barbato Xiph.Org Foundation",
      "ja": "ルカBarbato Xiph.Org財団"
    },
    {
      "indent": 3,
      "text": "EMail: lu_zero@gentoo.org URI: http://xiph.org/",
      "ja": "電子メール：lu_zero@gentoo.org URI：http://xiph.org/"
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The IETF Trust (2008).",
      "ja": "著作権（C）IETFトラスト（2008）。"
    },
    {
      "indent": 3,
      "text": "This document is subject to the rights, licenses and restrictions contained in BCP 78, and except as set forth therein, the authors retain all their rights.",
      "ja": "この文書では、BCP 78に含まれる権利と許可と制限の適用を受けており、その中の記載を除いて、作者は彼らのすべての権利を保有します。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein are provided on an \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書とここに含まれている情報は、基礎とCONTRIBUTOR「そのまま」、ORGANIZATION HE / SHEが表すまたはインターネットSOCIETY、（もしあれば）を後援し、IETF TRUST ANDインターネットエンジニアリングタスクフォース放棄ALLに設けられています。保証は、明示または黙示、この情報の利用および特定目的に対する権利または商品性または適合性の黙示の保証を侵害しない任意の保証がこれらに限定されません。"
    },
    {
      "indent": 0,
      "text": "Intellectual Property",
      "ja": "知的財産"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any Intellectual Property Rights or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; nor does it represent that it has made any independent effort to identify any such rights. Information on the procedures with respect to rights in RFC documents can be found in BCP 78 and BCP 79.",
      "ja": "IETFは、本書またはそのような権限下で、ライセンスがたりないかもしれない程度に記載された技術の実装や使用に関係すると主張される可能性があります任意の知的財産権やその他の権利の有効性または範囲に関していかなる位置を取りません利用可能です。またそれは、それがどのような権利を確認する独自の取り組みを行ったことを示すものでもありません。 RFC文書の権利に関する手続きの情報は、BCP 78およびBCP 79に記載されています。"
    },
    {
      "indent": 3,
      "text": "Copies of IPR disclosures made to the IETF Secretariat and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the IETF on-line IPR repository at http://www.ietf.org/ipr.",
      "ja": "IPRの開示のコピーが利用できるようにIETF事務局とライセンスの保証に行われた、または本仕様の実装者または利用者がそのような所有権の使用のための一般的なライセンスまたは許可を取得するために作られた試みの結果を得ることができますhttp://www.ietf.org/iprのIETFのオンラインIPRリポジトリから。"
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights that may cover technology that may be required to implement this standard. Please address the information to the IETF at ietf-ipr@ietf.org.",
      "ja": "IETFは、その注意にこの標準を実装するために必要とされる技術をカバーすることができる任意の著作権、特許または特許出願、またはその他の所有権を持ってすべての利害関係者を招待します。 ietf-ipr@ietf.orgのIETFに情報を記述してください。"
    }
  ]
}