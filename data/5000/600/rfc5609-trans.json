{
  "title": {
    "text": "RFC 5609 - State Machines for the Protocol for Carrying Authentication for Network Access (PANA)",
    "ja": "RFC 5609 - ネットワークアクセスの認証を実施するためのプロトコルのためのステートマシン（PANA）"
  },
  "number": 5609,
  "created_at": "2019-10-23 19:14:22.514879+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                    V. Fajardo, Ed.\nRequest for Comments: 5609                        Telcordia Technologies\nCategory: Informational                                          Y. Ohba\n                                                                 Toshiba\n                                                          R. Marin-Lopez\n                                                         Univ. of Murcia\n                                                             August 2009",
      "raw": true
    },
    {
      "indent": 3,
      "text": " State Machines for the Protocol for Carrying Authentication for Network Access (PANA)",
      "ja": "ネットワークアクセスの認証を実施するためのプロトコルのためのステートマシン（PANA）"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document defines the conceptual state machines for the Protocol for Carrying Authentication for Network Access (PANA). The state machines consist of the PANA Client (PaC) state machine and the PANA Authentication Agent (PAA) state machine. The two state machines show how PANA can interface with the Extensible Authentication Protocol (EAP) state machines. The state machines and associated models are informative only. Implementations may achieve the same results using different methods.",
      "ja": "この文書では、ネットワークアクセス（PANA）の認証を搬送するプロトコルの概念的な状態マシンを定義します。ステート・マシンは、PANAクライアント（PAC）、ステートマシンとPANA認証エージェント（PAA）、ステートマシンで構成されています。 2台の状態マシンは、PANAは、拡張認証プロトコル（EAP）ステートマシンとインターフェースすることができる方法を示しています。ステートマシンと関連したモデルのみ有益です。実装は異なる方法を使用して同じ結果を達成することができます。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This memo provides information for the Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited.",
      "ja": "このメモはインターネットコミュニティのための情報を提供します。それはどんな種類のインターネット標準を指定しません。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2009 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2009 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents in effect on the date of publication of this document (http://trustee.ietf.org/license-info). Please review these documents carefully, as they describe your rights and restrictions with respect to this document.",
      "ja": "この文書では、BCP 78と、この文書（http://trustee.ietf.org/license-info）の発行日に有効なIETFドキュメントに関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................3\n2. Terminology .....................................................3\n3. Interface between PANA and EAP ..................................3\n4. Document Authority ..............................................5\n5. Notations .......................................................5\n6. Common Rules ....................................................6\n   6.1. Common Procedures ..........................................6\n   6.2. Common Variables ...........................................9\n   6.3. Configurable Values .......................................10\n   6.4. Common Message Initialization Rules .......................10\n   6.5. Common Retransmission Rules ...............................10\n   6.6. Common State Transitions ..................................11\n7. PaC State Machine ..............................................12\n   7.1. Interface between PaC and EAP Peer ........................12\n        7.1.1. Delivering EAP Messages from PaC to EAP Peer .......12\n        7.1.2. Delivering EAP Messages from EAP Peer to PaC .......12\n        7.1.3. EAP Restart Notification from PaC to EAP Peer ......13\n        7.1.4. EAP Authentication Result Notification from\n               EAP Peer to PaC ....................................13\n        7.1.5. Alternate Failure Notification from PaC to\n               EAP Peer ...........................................13\n   7.2. Configurable Values .......................................13\n   7.3. Variables .................................................14\n   7.4. Procedures ................................................15\n   7.5. PaC State Transition Table ................................15\n8. PAA State Machine ..............................................21\n   8.1. Interface between PAA and EAP Authenticator ...............21\n        8.1.1. EAP Restart Notification from PAA to EAP\n               Authenticator ......................................21\n        8.1.2. Delivering EAP Responses from PAA to EAP\n               Authenticator ......................................22\n        8.1.3. Delivering EAP Messages from EAP\n               Authenticator to PAA ...............................22\n        8.1.4. EAP Authentication Result Notification from\n               EAP Authenticator to PAA ...........................22\n   8.2. Variables .................................................23\n   8.3. Procedures ................................................24\n   8.4. PAA State Transition Table ................................24\n9. Implementation Considerations ..................................29\n   9.1. PAA and PaC Interface to Service Management Entity ........29\n10. Security Considerations .......................................29\n11. Acknowledgments ...............................................29\n12. References ....................................................29\n   12.1. Normative References .....................................29\n   12.2. Informative References ...................................30",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "This document defines the state machines for the Protocol for Carrying Authentication for Network Access (PANA) [RFC5191]. There are state machines for the PANA Client (PaC) and for the PANA Authentication Agent (PAA). Each state machine is specified through a set of variables, procedures, and a state transition table. The state machines and associated models described in this document are informative only. Implementations may achieve similar results using different models and/or methods.",
      "ja": "この文書では、ネットワークアクセス（PANA）[RFC5191]の認証を実施するためのプロトコルの状態マシンを定義します。 PANAクライアント（PAC）用とPANA認証エージェント（PAA）のためのステートマシンがあります。各状態機械は、変数、プロシージャ、状態遷移表のセットを介して指定されています。このドキュメントで説明するステートマシンと関連したモデルのみ有益です。実装は、異なるモデル及び/又は方法を使用して同様の結果を達成することができます。"
    },
    {
      "indent": 3,
      "text": "A PANA protocol execution consists of several exchanges to carry authentication information. Specifically, EAP PDUs are transported inside PANA PDUs between PaC and PAA; that is, PANA represents a lower layer for EAP. Thus, a PANA state machine bases its execution on an EAP state machine execution and vice versa. Thus, this document also shows for each of PaC and PAA an interface between an EAP state machine and a PANA state machine and how this interface allows to exchange information between them. Thanks to this interface, a PANA state machine can be informed about several events generated in an EAP state machine and make its execution conditional to its events.",
      "ja": "PANAプロトコルの実行は、認証情報を運ぶために、いくつかの交換から成ります。具体的には、EAPのPDUは、PACとPAA間PANA PDUの内部に輸送されます。つまり、PANAはEAPのために下位レイヤを表します。したがって、PANA状態マシンはEAPステートマシンの実行、およびその逆にその実行を塩基です。したがって、この文書はまた、のPaCとPAA EAP状態マシンとPANA状態マシンとどのようにこのインタフェースは、それらの間で情報を交換することを可能にするとの間のインタフェースのそれぞれについて示しています。このインターフェースのおかげで、PANAステートマシンはEAPステートマシンで生成されたいくつかのイベントについて通知し、そのイベントにその実行を条件付きにすることができます。"
    },
    {
      "indent": 3,
      "text": "The details of EAP state machines are out of the scope of this document. Additional information can be found in [RFC4137]. Nevertheless, PANA state machines presented here have been coordinated with state machines shown by [RFC4137].",
      "ja": "EAPステートマシンの詳細は、この文書の範囲外です。追加情報は[RFC4137]で見つけることができます。それにもかかわらず、ここで紹介するPANAのステートマシンは、[RFC4137]で示されるステートマシンでコーディネートされています。"
    },
    {
      "indent": 3,
      "text": "This document, apart from defining PaC and PAA state machines and their interfaces to EAP state machines (running on top of PANA), provides some implementation considerations, taking into account that it is not a specification but an implementation guideline.",
      "ja": "この文書は、別に（PANAの上で実行されている）EAPステートマシンへのPaCとPAAのステートマシンとそのインタフェースを定義するから、それは仕様が、実装のガイドラインではないことを考慮して、いくつかの実装上の考慮事項を提供します。"
    },
    {
      "indent": 0,
      "text": "2. Terminology",
      "section_title": true,
      "ja": "2.用語"
    },
    {
      "indent": 3,
      "text": "This document reuses the terminology used in [RFC5191].",
      "ja": "この文書では、[RFC5191]で使用される用語を再利用します。"
    },
    {
      "indent": 0,
      "text": "3. Interface between PANA and EAP",
      "section_title": true,
      "ja": "PANAとEAPとの間に3インターフェイス"
    },
    {
      "indent": 3,
      "text": "PANA carries EAP messages exchanged between an EAP peer and an EAP authenticator (see Figure 1). Thus, a PANA state machine interacts with an EAP state machine.",
      "ja": "PANAはEAPメッセージをEAPピアとEAP認証器（図1参照）との間で交換運びます。したがって、PANA状態マシンはEAP状態マシンと相互作用します。"
    },
    {
      "indent": 3,
      "text": "Two state machines are defined in this document: the PaC state machine (see Section 7) and the PAA state machine (see Section 8). The definition of each state machine consists of a set of variables, procedures, and a state transition table. A subset of these variables and procedures defines the interface between a PANA state machine and an EAP state machine, and the state transition table defines the PANA state machine behavior based on results obtained through them.",
      "ja": "PACステートマシンとPAAのステートマシン（セクション7を参照）（セクション8を参照）：2台の状態マシンは、この文書で定義されています。各状態機械の定義は、変数、プロシージャ、状態遷移テーブルのセットからなります。これらの変数および手順のサブセットは、PANA状態マシンとEAP状態マシンとの間のインターフェースを定義し、状態遷移表は、それらを介して得られた結果に基づいて、PANA状態マシンの挙動を定義します。"
    },
    {
      "indent": 3,
      "text": "On the one hand, the PaC state machine interacts with an EAP peer state machine in order to carry out the PANA protocol on the PaC side. On the other hand, the PAA state machine interacts with an EAP authenticator state machine to run the PANA protocol on the PAA side.",
      "ja": "一方、のPAC状態マシンは、PAC側PANAプロトコルを実行するためにEAPピア状態機械と相互作用します。一方、PAA状態マシンはPAA側PANAプロトコルを実行するEAP認証ステートマシンと相互作用します。"
    },
    {
      "indent": 7,
      "text": "              Peer             |EAP            Auth\n              EAP    <---------|------------>  EAP\n             ^ |               |              ^ |\n             | |               | EAP-Message  | |  EAP-Message\nEAP-Message    | |EAP-Message  |                | |\n               | v             |PANA            | v\n              PaC    <---------|------------>  PAA",
      "raw": true
    },
    {
      "indent": 17,
      "text": "Figure 1: Interface between PANA and EAP",
      "ja": "図1：PANAとEAPとの間のインターフェース"
    },
    {
      "indent": 3,
      "text": "Thus, two interfaces are needed between PANA state machines and EAP state machines, namely:",
      "ja": "従って、2つのインターフェースは、すなわち、PANA状態マシンとEAPステートマシン間で必要とされています。"
    },
    {
      "indent": 3,
      "text": "o Interface between the PaC state machine and the EAP peer state machine",
      "ja": "PAC状態マシンとEAPピアステートマシン間のOインタフェース"
    },
    {
      "indent": 3,
      "text": "o Interface between the PAA state machine and the EAP authenticator state machine",
      "ja": "PAAステートマシンとEAP認証マシン間のOインタフェース"
    },
    {
      "indent": 3,
      "text": "In general, the PaC and PAA state machines present EAP messages to the EAP peer and authenticator state machines through the interface, respectively. The EAP peer and authenticator state machines process these messages and send EAP messages through the PaC and PAA state machines that are responsible for actually transmitting this message, respectively.",
      "ja": "一般に、それぞれインターフェースを介してEAPピアとオーセンティケータ状態マシンへのPaCとPAA状態マシン存在EAPメッセージ。 EAPピアとオーセンティケータステートマシンは、これらのメッセージを処理し、実際にはそれぞれ、このメッセージを送信するための責任があるのPaCとPAAステートマシンを通じてEAPメッセージを送信します。"
    },
    {
      "indent": 3,
      "text": "For example, [RFC4137] specifies four interfaces to lower layers: (i) an interface between the EAP peer state machine and a lower layer, (ii) an interface between the EAP standalone authenticator state machine and a lower layer, (iii) an interface between the EAP full authenticator state machine and a lower layer, and (iv) an interface between the EAP backend authenticator state machine and a lower layer. In this document, the PANA protocol is the lower layer of EAP and only the first three interfaces are of interest to PANA. The second and third interfaces are the same. In this regard, the EAP standalone authenticator or the EAP full authenticator and its state machine in [RFC4137] are referred to as the EAP authenticator and the EAP authenticator state machine, respectively, in this document. If an EAP peer and an EAP authenticator follow the state machines defined in [RFC4137], the interfaces between PANA and EAP could be based on that document. Detailed definition of interfaces between PANA and EAP are described in the subsequent sections.",
      "ja": "（I）EAPピア状態マシンと下部層との界面、（II）EAPスタンドアロン認証マシンと下層との間の界面を、（III）AN：例えば、[RFC4137]は下位層に4つのインタフェースを指定しますEAP完全認証マシンと下部層との界面、及びEAPバックエンド認証ステートマシンと下層との間の（iv）のインターフェース。この文書では、PANAプロトコルはEAPの下位層であり、最初の3つのインタフェースは、PANAに関心があります。第二及び第三のインターフェースは同じです。この点で、EAPオーセンティケータスタンドアロンまたはEAPフルオーセンティケータと[RFC4137]での状態機械は、本書では、それぞれ、EAP認証とEAP認証マシンと呼ばれます。 EAPピアとEAP認証は[RFC4137]で定義されたステートマシンに従っている場合、PANAとEAPとの間のインタフェースは、その文書に基づくことができます。 PANAとEAPとの間のインターフェースの詳細な定義は、後続のセクションで説明されています。"
    },
    {
      "indent": 0,
      "text": "4. Document Authority",
      "section_title": true,
      "ja": "4.文書の権限"
    },
    {
      "indent": 3,
      "text": "This document is intended to comply with the technical contents of any of the related documents ([RFC5191] and [RFC4137]). When there is a discrepancy, the related documents are considered authoritative and they take precedence over this document.",
      "ja": "この文書は、関連する文書（[RFC5191]と[RFC4137]）のいずれかの技術的な内容を遵守することを意図しています。不一致がある場合には、関連文書が権威とみなされ、彼らはこの文書よりも優先されます。"
    },
    {
      "indent": 0,
      "text": "5. Notations",
      "section_title": true,
      "ja": "5.表記"
    },
    {
      "indent": 3,
      "text": "The following state transition tables are completed mostly based on the conventions specified in [RFC4137]. The complete text is described below.",
      "ja": "以下の状態遷移表は、ほとんど[RFC4137]で指定された規則に基づいて完成されています。完全なテキストは以下の通りです。"
    },
    {
      "indent": 3,
      "text": "State transition tables are used to represent the operation of the protocol by a number of cooperating state machines each comprising a group of connected, mutually exclusive states. Only one state of each machine can be active at any given time.",
      "ja": "状態遷移テーブルは、接続され、相互に排他的な状態の基を含むステートマシンそれぞれ協働の数でプロトコルの動作を表すために使用されます。各マシンの唯一の状態は、任意の時点でアクティブにできます。"
    },
    {
      "indent": 3,
      "text": "All permissible transitions from a given state to other states and associated actions performed when the transitions occur are represented by using triplets of (exit condition, exit action, exit state). All conditions are expressions that evaluate to TRUE or FALSE; if a condition evaluates to TRUE, then the condition is met. A state \"ANY\" is a wildcard state that matches any state in each state machine except those explicitly enumerated as exception states. The exit conditions of a wildcard state are evaluated after all other exit conditions specific to the current state are met.",
      "ja": "他の状態と遷移が発生したときに実行関連するアクションの所与の状態からすべての許容遷移は（終了条件、終了動作、終了状態）のトリプレットを用いて表現されます。すべての条件がTRUEまたはFALSEに評価式です。条件がTRUEと評価される場合、その条件が満たされています。状態が「ANY」は、明示的に例外状態として列挙したもの以外の各ステートマシンにどのような状態に一致するワイルドカードの状態です。現在の状態に固有の他のすべての終了条件が満たされた後にワイルドカード状態の終了条件が評価されます。"
    },
    {
      "indent": 3,
      "text": "On exit from a state, the exit actions defined for the state and the exit condition are executed exactly once, in the order that they appear. (Note that the procedures defined in [RFC4137] are executed on entry to a state, which is one major difference from this document.) Each exit action is deemed to be atomic; i.e., execution of an exit action completes before the next sequential exit action starts to execute. No exit action executes outside of a state block. The exit actions in only one state block execute at a time even if the conditions for execution of state blocks in different state machines are satisfied. All exit actions in an executing state block complete execution before the transition to and execution of any other state blocks. The execution of any state block appears to be atomic with respect to the execution of any other state block, and the transition condition to that state from the previous state is TRUE when execution commences. The order of execution of state blocks in different state machines is undefined except as constrained by their transition conditions. A variable that is set to a particular value in a state block retains this value until a subsequent state block executes an exit action that modifies the value.",
      "ja": "状態からの出口で、状態や終了条件のために定義されたexitアクションは、それらが表示される順序で、一度だけ実行されます。 （[RFC4137]で定義された手順は、このドキュメントからの1つの大きな違いである状態へのエントリ上で実行されることに注意してください。）各出口動作がアトミックであるとみなされます。次のシーケンシャル出口アクションが実行を開始する前に、即ち、出口アクションの実行が完了する。何の出口アクションは、状態ブロックの外側で実行しません。 1つの状態しかブロックでexitアクションは、別のステートマシンの状態ブロックの実行条件が成立している場合でも、一度に実行されます。実行状態のブロックを完全に移行する前に実行し、任意の他の状態ブロックの実行中のすべての出口アクション。任意の状態ブロックの実行は、他の状態ブロックの実行に対してアトミックであるように見える、そして実行が始まるときに以前の状態からの状態への遷移条件がTRUEです。異なる状態マシンの状態ブロックの実行の順序は、それらの遷移条件によって制約される場合を除き定義されていません。その後の状態ブロックの値を変更する出口アクションを実行するまで、状態ブロック内の特定の値に設定されている変数は、この値を保持します。"
    },
    {
      "indent": 3,
      "text": "On completion of the transition from the previous state to the current state, all exit conditions occurring during the current state (including exit conditions defined for the wildcard state) are evaluated until an exit condition for that state is met.",
      "ja": "その状態の終了条件が満たされるまで、前の状態から現在の状態への遷移が完了すると、（ワイルドカードの状態に対して定義された終了条件を含む）は、現在の状態の間に発生するすべての終了条件が評価されます。"
    },
    {
      "indent": 3,
      "text": "Any event variable is set to TRUE when the corresponding event occurs and set to FALSE immediately after completion of the action associated with the current state and the event.",
      "ja": "任意のイベント変数は直ちに現在の状態とイベントに関連付けられたアクションの完了後に、対応するイベントが発生した場合にTRUEに設定され、FALSEに設定されています。"
    },
    {
      "indent": 3,
      "text": "The interpretation of the special symbols and operators used is defined in [RFC4137].",
      "ja": "使用される特殊記号及びオペレータの解釈は、[RFC4137]で定義されています。"
    },
    {
      "indent": 0,
      "text": "6. Common Rules",
      "section_title": true,
      "ja": "6.一般的なルール"
    },
    {
      "indent": 3,
      "text": "There are following procedures, variables, message initializing rules, and state transitions that are common to both the PaC and PAA state machines.",
      "ja": "次の手順で、変数、メッセージの初期化ルール、とPACとPAA状態マシンの両方に共通している状態遷移があります。"
    },
    {
      "indent": 3,
      "text": "Throughout this document, the character string \"PANA_MESSAGE_NAME\" matches any one of the abbreviated PANA message names, i.e., \"PCI\", \"PAR\", \"PAN\", \"PTR\", \"PTA\", \"PNR\", \"PNA\".",
      "ja": "本書では、文字列 \"PANA_MESSAGE_NAMEは\"、略しPANAメッセージ名のいずれかに一致する、すなわち、 \"PCI\"、 \"PAR\"、 \"PAN\"、 \"PTR\"、 \"PTA\"、 \"PNR\"、 \"PNA\"。"
    },
    {
      "indent": 0,
      "text": "6.1. Common Procedures",
      "section_title": true,
      "ja": "6.1。共通手順"
    },
    {
      "indent": 3,
      "text": "void None()",
      "ja": "空なし（）"
    },
    {
      "indent": 6,
      "text": "A null procedure, i.e., nothing is done.",
      "ja": "nullの手順は、すなわち、何もしません。"
    },
    {
      "indent": 3,
      "text": "void Disconnect()",
      "ja": "空の切断（）"
    },
    {
      "indent": 6,
      "text": "A procedure to delete the PANA session as well as the corresponding EAP session and authorization state.",
      "ja": "PANAセッションならびに対応するEAPセッションと承認の状態を削除する手順。"
    },
    {
      "indent": 3,
      "text": "boolean Authorize()",
      "ja": "ブール承認（）"
    },
    {
      "indent": 6,
      "text": "A procedure to create or modify authorization state. It returns TRUE if authorization is successful. Otherwise, it returns FALSE. It is assumed that Authorize() procedure of PaC state machine always returns TRUE. In the case that a non-key-generating EAP method is used but a PANA SA is required after successful authentication (generate_pana_sa() returns TRUE), Authorize() procedure must return FALSE.",
      "ja": "許可ステートを作成または変更する手順。これは、認証が成功した場合はtrueを返します。それ以外の場合はFALSEを返します。 PACのステートマシンの承認（）プロシージャは、常にTRUEを返すことが想定されます。非キー生成EAP方式が使用されているが、成功した認証（generate_pana_sa（）がtrueを返す）の後にPANA SAが必要である場合には、承認（）プロシージャはFALSEを返す必要があります。"
    },
    {
      "indent": 3,
      "text": "void Tx:PANA_MESSAGE_NAME[flag](AVPs)",
      "ja": "ボイドのTx：PANA_MESSAGE_NAME [フラグ]（のAVP）"
    },
    {
      "indent": 6,
      "text": "A procedure to send a PANA message to its peering PANA entity. The \"flag\" argument contains one or more flags (e.g., Tx:PAR[C]) to be set to the message, except for 'R' (Request) flag. The \"AVPs\" contains a list of names of optional AVPs to be inserted in the message, except for AUTH AVP.",
      "ja": "そのピアリングPANAエンティティにPANAメッセージを送信するための手順。 「R」（要求）フラグを除いて、メッセージに設定する：「フラグ」引数は、一の以上のフラグ（PAR [C]例えば、TX）を含有します。 「のAVPは、」AUTH AVPを除き、メッセージに挿入されるオプションのAVPの名前のリストが含まれています。"
    },
    {
      "indent": 6,
      "text": "This procedure includes the following action before actual transmission:",
      "ja": "この手順は、実際の送信前に、次のアクションが含まれています。"
    },
    {
      "indent": 13,
      "text": "if (flag==S)\n  PANA_MESSAGE_NAME.S_flag=Set;\nif (flag==C)\n  PANA_MESSAGE_NAME.C_flag=Set;\nif (flag==A)\n  PANA_MESSAGE_NAME.A_flag=Set;\nif (flag==P)\n  PANA_MESSAGE_NAME.P_flag=Set;\nPANA_MESSAGE_NAME.insert_avp(AVPs);\nif (key_available())\n  PANA_MESSAGE_NANE.insert_avp(\"AUTH\");",
      "raw": true
    },
    {
      "indent": 3,
      "text": "void TxEAP()",
      "ja": "TxEAPを無効（）"
    },
    {
      "indent": 6,
      "text": "A procedure to send an EAP message to the EAP state machine to which it interfaces.",
      "ja": "それはインタフェースたEAPステートマシンにEAPメッセージを送信する手順。"
    },
    {
      "indent": 3,
      "text": "void RtxTimerStart()",
      "ja": "RtxTimerStartを無効（）"
    },
    {
      "indent": 6,
      "text": "A procedure to start the retransmission timer, reset RTX_COUNTER variable to zero, and set an appropriate value to RTX_MAX_NUM variable. Note that RTX_MAX_NUM is assumed to be set to the same default value for all messages. However, implementations may also reset RTX_MAX_NUM in this procedure and its value may vary depending on the message that was sent.",
      "ja": "手順は、再送タイマを開始ゼロにRTX_COUNTER変数をリセットし、RTX_MAX_NUM変数に適切な値を設定します。 RTX_MAX_NUMは、すべてのメッセージに同じデフォルト値に設定されているものとすることに注意してください。しかし、実装は、この手順でRTX_MAX_NUMをリセットしてもよいし、その値が送信されたメッセージに応じて変えることができます。"
    },
    {
      "indent": 3,
      "text": "void RtxTimerStop()",
      "ja": "RtxTimerStopを無効（）"
    },
    {
      "indent": 6,
      "text": "A procedure to stop the retransmission timer.",
      "ja": "再送タイマーを停止する手順。"
    },
    {
      "indent": 3,
      "text": "void SessionTimerReStart(TIMEOUT)",
      "ja": "空SessionTimerReStart（TIMEOUT）"
    },
    {
      "indent": 6,
      "text": "A procedure to (re)start the PANA session timer. TIMEOUT specifies the expiration time associated with the session timer. Expiration of TIMEOUT will trigger a SESS_TIMEOUT event.",
      "ja": "（再）までの手順は、PANAセッションタイマーを開始します。 TIMEOUTは、セッションタイマーに関連付けられている有効期限を指定します。 TIMEOUTの有効期限はSESS_TIMEOUTイベントをトリガします。"
    },
    {
      "indent": 3,
      "text": "void SessionTimerStop()",
      "ja": "SessionTimerStopを無効（）"
    },
    {
      "indent": 6,
      "text": "A procedure to stop the current PANA session timer.",
      "ja": "現在のPANAセッションタイマーを停止する手順。"
    },
    {
      "indent": 3,
      "text": "void Retransmit()",
      "ja": "空再送信（）"
    },
    {
      "indent": 6,
      "text": "A procedure to retransmit a PANA message and increment RTX_COUNTER by one(1).",
      "ja": "PANAメッセージを再送信し、一方（1）によってRTX_COUNTERをインクリメントする手順。"
    },
    {
      "indent": 3,
      "text": "void EAP_Restart()",
      "ja": "EAP_Restartを無効（）"
    },
    {
      "indent": 6,
      "text": "A procedure to (re)start an EAP conversation resulting in the re-initialization of an existing EAP session.",
      "ja": "手順（再）既存のEAPセッションの再初期化をもたらすEAPの会話を開始します。"
    },
    {
      "indent": 3,
      "text": "void PANA_MESSAGE_NAME.insert_avp(\"AVP_NAME1\", \"AVP_NAME2\",...)",
      "ja": "無効PANA_MESSAGE_NAME.insert_avp（ \"AVP_NAME1\"、 \"AVP_NAME2\"、...）"
    },
    {
      "indent": 6,
      "text": "A procedure to insert AVPs for each specified AVP name in the list of AVP names in the PANA message. When an AVP name ends with \"*\", zero, one, or more AVPs are inserted; otherwise, one AVP is inserted.",
      "ja": "PANAのメッセージでAVP名のリストで指定された各AVP名のAVPを挿入するための手順。 AVP名が「*」、ゼロ、1つ、または複数のAVPで終了したときに挿入されます。それ以外の場合は、1つのAVPが挿入されています。"
    },
    {
      "indent": 3,
      "text": "boolean PANA_MESSAGE_NAME.exist_avp(\"AVP_NAME\")",
      "ja": "ブールPANA_MESSAGE_NAME.exist_avp（ \"AVP_NAME\"）"
    },
    {
      "indent": 6,
      "text": "A procedure that checks whether an AVP of the specified AVP name exists in the specified PANA message and returns TRUE if the specified AVP is found, otherwise returns FALSE.",
      "ja": "指定されたAVP名前のAVPが指定されたPANAメッセージに存在し、指定されたAVPが見つかった場合にTRUEを返すかどうかをチェックする手順は、そうでない場合はFALSEを返します。"
    },
    {
      "indent": 3,
      "text": "boolean generate_pana_sa()",
      "ja": "ぼおぇあん げねらて＿ぱな＿さ（）"
    },
    {
      "indent": 6,
      "text": "A procedure to check whether the EAP method being used generates keys and that a PANA SA will be established on successful authentication. For the PaC, the procedure is also used to check and match the PRF and Integrity algorithm AVPs advertised by the PAA in PAR[S] message. For the PAA, it is used to indicate whether a PRF and Integrity algorithm AVPs will be sent in the PAR[S]. This procedure will return TRUE if a PANA SA will be generated. Otherwise, it returns FALSE.",
      "ja": "EAPメソッドが使用されているかどうかを確認する手順は、キーを生成し、PANA SAが認証成功で確立されています。 PaCのために、手順は、PARでPAA [S]メッセージによってアドバタイズPRFと整合アルゴリズムAVPをチェックし、一致させるために使用されます。 PAAのために、PRFと整合性アルゴリズムのAVPは、PAR [S]で送信されるかどうかを示すために使用されます。 PANA SAが生成されます場合は、この手順では、TRUEを返します。それ以外の場合はFALSEを返します。"
    },
    {
      "indent": 3,
      "text": "boolean key_available()",
      "ja": "ブールkey_available（）"
    },
    {
      "indent": 6,
      "text": "A procedure to check whether the PANA session has a PANA_AUTH_KEY. If the state machine already has a PANA_AUTH_KEY, it returns TRUE. If the state machine does not have a PANA_AUTH_KEY, it tries to retrieve a Master Session Key (MSK) from the EAP entity. If an MSK is retrieved, it computes a PANA_AUTH_KEY from the MSK and returns TRUE. Otherwise, it returns FALSE.",
      "ja": "PANAセッションがPANA_AUTH_KEYを持っているかどうかを確認する手順。ステート・マシンはすでにPANA_AUTH_KEYを持っている場合は、TRUEを返します。ステートマシンがPANA_AUTH_KEYを持っていない場合は、EAPエンティティからマスターセッションキー（MSK）を取得しようとします。 MSKが取得される場合は、MSKからPANA_AUTH_KEYを計算し、TRUEを返します。それ以外の場合はFALSEを返します。"
    },
    {
      "indent": 0,
      "text": "6.2. Common Variables",
      "section_title": true,
      "ja": "6.2。一般的な変数"
    },
    {
      "indent": 3,
      "text": "PAR.RESULT_CODE",
      "ja": "PAR.RESULT_CODE"
    },
    {
      "indent": 6,
      "text": "This variable contains the Result-Code AVP value in the PANA-Auth-Request message in process. When this variable carries PANA_SUCCESS, it is assumed that the PAR message always contains an EAP-Payload AVP that carries an EAP-Success message.",
      "ja": "この変数は、プロセス内のPANA-AUTH-Requestメッセージで結果 - コードAVP値が含まれています。この変数はPANA_SUCCESSを運ぶ際には、PARメッセージは、常にEAP-Successメッセージを運ぶEAP-ペイロードAVPが含まれているものとします。"
    },
    {
      "indent": 3,
      "text": "NONCE_SENT",
      "ja": "NONCE_SENT"
    },
    {
      "indent": 6,
      "text": "This variable is set to TRUE to indicate that a Nonce-AVP has already been sent. Otherwise, it is set to FALSE.",
      "ja": "この変数は、ノンス-AVPが既に送信されたことを示すために、TRUEに設定されています。それ以外の場合はFALSEに設定されています。"
    },
    {
      "indent": 3,
      "text": "RTX_COUNTER",
      "ja": "RTX_COUNTER"
    },
    {
      "indent": 6,
      "text": "This variable contains the current number of retransmissions of the outstanding PANA message.",
      "ja": "この変数は、優れたPANAメッセージの再送信の現在の数が含まれています。"
    },
    {
      "indent": 3,
      "text": "Rx:PANA_MESSAGE_NAME[flag]",
      "ja": "RX：PANA_MESSAGE_NAME [フラグ]"
    },
    {
      "indent": 6,
      "text": "This event variable is set to TRUE when the specified PANA message is received from its peering PANA entity. The \"flag\" contains a flag (e.g., Rx:PAR[C]), except for 'R' (Request) flag.",
      "ja": "指定されたPANAメッセージは、そのピアリングPANAエンティティから受信されたときに、このイベント変数はTRUEに設定されています。 \"フラグ\" フラグが含まれている（例えば、受信：PAR [C]）、 'R'（要求）フラグを除きます。"
    },
    {
      "indent": 3,
      "text": "RTX_TIMEOUT",
      "ja": "RTX_TIMEOUT"
    },
    {
      "indent": 6,
      "text": "This event variable is set to TRUE when the retransmission timer is expired.",
      "ja": "再送タイマが満了しているときに、このイベント変数はTRUEに設定されています。"
    },
    {
      "indent": 3,
      "text": "REAUTH",
      "ja": "REAUTH"
    },
    {
      "indent": 6,
      "text": "This event variable is set to TRUE when an initiation of re-authentication phase is triggered. This event variable can only be set while in the OPEN state.",
      "ja": "再認証フェーズの開始がトリガされたときに、このイベント変数はTRUEに設定されています。 OPEN状態の間、このイベント変数にのみ設定することができます。"
    },
    {
      "indent": 3,
      "text": "TERMINATE",
      "ja": "TERMINATE"
    },
    {
      "indent": 6,
      "text": "This event variable is set to TRUE when initiation of PANA session termination is triggered. This event variable can only be set while in the OPEN state.",
      "ja": "PANAセッション終了の開始がトリガされたときに、このイベント変数はTRUEに設定されています。 OPEN状態の間、このイベント変数にのみ設定することができます。"
    },
    {
      "indent": 3,
      "text": "PANA_PING",
      "ja": "パンA_ping"
    },
    {
      "indent": 6,
      "text": "This event variable is set to TRUE when initiation of liveness test based on PANA-Notification exchange is triggered. This event variable can only be set while in the OPEN state.",
      "ja": "PANA-通知交換に基づく生存性試験の開始がトリガされたときに、このイベント変数はTRUEに設定されています。 OPEN状態の間、このイベント変数にのみ設定することができます。"
    },
    {
      "indent": 3,
      "text": "SESS_TIMEOUT",
      "ja": "SESS_TIMEOUT"
    },
    {
      "indent": 6,
      "text": "This event is variable is set to TRUE when the session timer has expired.",
      "ja": "セッションタイマが満了したときに、このイベントは、変数がTRUEに設定されています。"
    },
    {
      "indent": 3,
      "text": "LIFETIME_SESS_TIMEOUT",
      "ja": "LIFETIME_SESS_TIMEOUT"
    },
    {
      "indent": 6,
      "text": "Configurable value used by the PaC and PAA to close or disconnect an established session in the access phase. This variable indicates the expiration of the session and is set to the value of Session-Lifetime AVP if present in the last PANA-Auth-Request message in the case of the PaC. Otherwise, it is assumed that the value is infinite and therefore has no expiration. Expiration of LIFETIME_SESS_TIMEOUT will cause the event variable SESS_TIMEOUT to be set.",
      "ja": "設定可能な値は、アクセス・フェーズで確立されたセッションを終了または切断するのPaCとPAAが使用します。この変数は、セッションの有効期限を示すとPACの場合の最後のPANA-AUTH-Requestメッセージ内に存在する場合、セッション寿命AVPの値に設定されています。それ以外の場合は、値が無限大であり、したがって、有効期限を持っていないものとします。 LIFETIME_SESS_TIMEOUTの有効期限は、イベント変数SESS_TIMEOUTが設定されるようになります。"
    },
    {
      "indent": 3,
      "text": "ANY",
      "ja": "どれか"
    },
    {
      "indent": 6,
      "text": "This event variable is set to TRUE when any event occurs.",
      "ja": "いずれかのイベントが発生したときに、このイベント変数はTRUEに設定されています。"
    },
    {
      "indent": 0,
      "text": "6.3. Configurable Values",
      "section_title": true,
      "ja": "6.3。設定可能な値"
    },
    {
      "indent": 3,
      "text": "RTX_MAX_NUM",
      "ja": "RTX_MAX_NUM"
    },
    {
      "indent": 6,
      "text": "Configurable maximum for how many retransmissions should be attempted before aborting.",
      "ja": "どのように多くの再送信のための設定可能な最大値は、中止する前に試みるべきです。"
    },
    {
      "indent": 0,
      "text": "6.4. Common Message Initialization Rules",
      "section_title": true,
      "ja": "6.4。共通メッセージの初期化ルール"
    },
    {
      "indent": 3,
      "text": "When a message is prepared for sending, it is initialized as follows:",
      "ja": "メッセージを送るために準備されている場合、次のように初期化されます。"
    },
    {
      "indent": 3,
      "text": "o For a request message, R-flag of the header is set. Otherwise, R-flag is not set.",
      "ja": "要求メッセージのO、ヘッダのR-フラグが設定されています。そうでなければ、R-フラグがセットされていません。"
    },
    {
      "indent": 3,
      "text": "o Other message header flags are not set. They are set explicitly by specific state machine actions.",
      "ja": "Oその他のメッセージヘッダフラグが設定されていません。これらは、特定のステート・マシンの操作によって明示的に設定されています。"
    },
    {
      "indent": 3,
      "text": "o AVPs that are mandatory to be included in a message are inserted with appropriate values set.",
      "ja": "Oメッセージに含まれることが必須であるのAVPを設定し、適切な値が挿入されています。"
    },
    {
      "indent": 0,
      "text": "6.5. Common Retransmission Rules",
      "section_title": true,
      "ja": "6.5。一般的な再送信ルール"
    },
    {
      "indent": 3,
      "text": "The state machines defined in this document assume that the PaC and the PAA cache the last transmitted answer message. This scheme is described in Section 5.2 of [RFC5191]. When the PaC or PAA receives a retransmitted or duplicate request, it would be able to resend the corresponding answer without any aid from the EAP layer. However, to simplify the state machine description, this caching scheme is omitted in the state machines below. In the case that there is not a corresponding answer to a retransmitted request, the request will be handled by the corresponding state machine.",
      "ja": "この文書で定義されたステートマシンは、PACとPAAのキャッシュ最後に送信応答メッセージと仮定します。この方式は、[RFC5191]のセクション5.2に記載されています。 PaCまたはPAAが再送を受信するか、または要求を複製する場合は、EAP層から任意の助けを借りずに対応する回答を再送信することができるだろう。しかし、ステートマシンの説明を簡単にするために、このキャッシュスキームは、以下のステートマシンでは省略されています。再送された要求に対応する回答がないという場合には、要求は、対応する状態マシンによって処理されます。"
    },
    {
      "indent": 0,
      "text": "6.6. Common State Transitions",
      "section_title": true,
      "ja": "6.6。一般的な状態遷移"
    },
    {
      "indent": 3,
      "text": "The following transitions can occur at any state with exemptions explicitly noted.",
      "ja": "免除が明示的に指摘し、次の遷移がどのような状態で発生する可能性があります。"
    },
    {
      "indent": 3,
      "text": "----------\nState: ANY\n----------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Exit Condition           Exit Action                Exit State\n------------------------+--------------------------+------------\n- - - - - - - - - - - - - (Re-transmissions)- - - - - - - - - -\nRTX_TIMEOUT &&           Retransmit();              (no change)\nRTX_COUNTER<\nRTX_MAX_NUM\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n- - - - - - - (Reach maximum number of transmissions)- - - - - -\n(RTX_TIMEOUT &&          Disconnect();              CLOSED\n RTX_COUNTER>=\n RTX_MAX_NUM) ||\nSESS_TIMEOUT\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "raw": true
    },
    {
      "indent": 3,
      "text": "-------------------------\nState: ANY except INITIAL\n-------------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Exit Condition           Exit Action                Exit State\n------------------------+--------------------------+------------\n- - - - - - - - - - (liveness test initiated by peer)- - - - - -\nRx:PNR[P]                Tx:PNA[P]();               (no change)",
      "raw": true
    },
    {
      "indent": 3,
      "text": "-------------------------------\nState: ANY except WAIT_PNA_PING\n-------------------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Exit Condition           Exit Action                Exit State\n------------------------+--------------------------+------------\n- - - - - - - - - - - - (liveness test response) - - - - - - - -\nRx:PNA[P]                None();                    (no change)",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The following transitions can occur on any exit condition within the specified state.",
      "ja": "次の遷移が指定された状態内の任意の終了条件で発生する可能性があります。"
    },
    {
      "indent": 3,
      "text": "-------------\nState: CLOSED\n-------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Exit Condition           Exit Action                Exit State\n------------------------+--------------------------+------------\n- - - - - - - -(Catch all event on closed state) - - - - - - - -\nANY                      None();                    CLOSED\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "raw": true
    },
    {
      "indent": 0,
      "text": "7. PaC State Machine",
      "section_title": true,
      "ja": "7. PaCでステートマシン"
    },
    {
      "indent": 0,
      "text": "7.1. Interface between PaC and EAP Peer",
      "section_title": true,
      "ja": "7.1。 PaCとEAPピアとの間のインターフェイス"
    },
    {
      "indent": 3,
      "text": "This interface defines the interactions between a PaC and an EAP peer. The interface serves as a mechanism to deliver EAP messages for the EAP peer. It allows the EAP peer to receive EAP requests and send EAP responses via the PaC. It also provides a mechanism to notify the EAP peer of PaC events and a mechanism to receive notification of EAP peer events. The EAP message delivery mechanism as well as the event notification mechanism in this interface have direct correlation with the PaC state transition table entries. These message delivery and event notifications mechanisms occur only within the context of their associated states or exit actions.",
      "ja": "このインタフェースは、PACとEAPピアとの間の相互作用を規定します。インタフェースは、EAPピアのEAPメッセージを配信するためのメカニズムとして機能します。これは、EAPピアがEAP要求を受け取るとPACを経由してEAP応答を送信することができます。また、イベントのPACのEAPピアとEAPピアイベントの通知を受信するためのメカニズムを通知するためのメカニズムを提供します。 EAPメッセージ配信機構、ならびにこのインタフェースのイベント通知機構は、PACの状態遷移テーブルエントリとの直接的な相関関係を有しています。これらのメッセージ配信およびイベント通知機構は、それらに関連する状態またはexitアクションのコンテキスト内で発生します。"
    },
    {
      "indent": 0,
      "text": "7.1.1. Delivering EAP Messages from PaC to EAP Peer",
      "section_title": true,
      "ja": "7.1.1。 EAPピアへのPaCからのEAPメッセージを配信"
    },
    {
      "indent": 3,
      "text": "TxEAP() procedure in the PaC state machine serves as the mechanism to deliver EAP messages contained in PANA-Auth-Request messages to the EAP peer. This procedure is enabled only after an EAP restart event is notified to the EAP peer and before any event resulting in a termination of the EAP peer session. In the case where the EAP peer follows the EAP peer state machine defined in [RFC4137], TxEAP() procedure sets eapReq variable of the EAP peer state machine and puts the EAP request in eapReqData variable of the EAP peer state machine.",
      "ja": "PAC状態機械でTxEAP（）プロシージャは、EAPピアにPANA-AUTH-Requestメッセージに含まれるEAPメッセージを配信するためのメカニズムとして機能します。この手順は、EAP再起動イベントがEAPピアにし、EAPピアセッションの終了に起因するいかなるイベントの前に通知された後にのみ有効になります。 EAPピアが[RFC4137]で定義されたEAPピアステートマシンを以下の場合には、TxEAP（）プロシージャは、EAPピアステートマシンのeapReq変数を設定し、EAPピア状態マシンのeapReqData変数にEAP要求を置きます。"
    },
    {
      "indent": 0,
      "text": "7.1.2. Delivering EAP Messages from EAP Peer to PaC",
      "section_title": true,
      "ja": "7.1.2。 EAPピアからのPaCにEAPメッセージを届けます"
    },
    {
      "indent": 3,
      "text": "An EAP message is delivered from the EAP peer to the PaC via EAP_RESPONSE event variable. The event variable is set when the EAP peer passes the EAP message to its lower layer. In the case where the EAP peer follows the EAP peer state machine defined in [RFC4137], EAP_RESPONSE event variable refers to eapResp variable of the EAP peer state machine and the EAP message is contained in eapRespData variable of the EAP peer state machine.",
      "ja": "EAPメッセージはEAP_RESPONSEイベント変数を介してのPaCにEAPピアから配信されます。 EAPピアがその下位層にEAPメッセージを渡すときにイベント変数が設定されています。 EAPピアが[RFC4137]で定義されたEAPピアステートマシンを以下の場合には、EAP_RESPONSEイベント変数は、EAPピア状態マシンのeapResp変数を参照し、EAPメッセージをEAPピア状態マシンのeapRespData変数に含まれています。"
    },
    {
      "indent": 0,
      "text": "7.1.3. EAP Restart Notification from PaC to EAP Peer",
      "section_title": true,
      "ja": "7.1.3。 EAPピアへのPaCからEAPの再起動通知"
    },
    {
      "indent": 3,
      "text": "The EAP peer state machine defined in [RFC4137] has an initialization procedure before receiving an EAP message. To initialize the EAP state machine, the PaC state machine defines an event notification mechanism to send an EAP (re)start event to the EAP peer. The event notification is done via EAP_Restart() procedure in the initialization action of the PaC state machine.",
      "ja": "[RFC4137]で定義されたEAPピア状態マシンはEAPメッセージを受信する前に初期化手順を有します。 EAPステートマシンを初期化するために、のPAC状態マシンはEAPピアにEAP（再）起動イベントを送信するイベント通知機構を定義します。イベント通知は、のPAC状態マシンの初期化動作にEAP_Restart（）プロシージャを介して行われます。"
    },
    {
      "indent": 0,
      "text": "7.1.4. EAP Authentication Result Notification from EAP Peer to PaC",
      "section_title": true,
      "ja": "7.1.4。 EAPピアからのPaCに対するEAP認証結果通知"
    },
    {
      "indent": 3,
      "text": "In order for the EAP peer to notify the PaC of an EAP authentication result, EAP_SUCCESS and EAP_FAILURE event variables are defined. In the case where the EAP peer follows the EAP peer state machine defined in [RFC4137], EAP_SUCCESS and EAP_FAILURE event variables refer to eapSuccess and eapFail variables of the EAP peer state machine, respectively. In this case, if EAP_SUCCESS event variable is set to TRUE and an MSK is generated by the EAP authentication method in use, eapKeyAvailable variable is set to TRUE and eapKeyData variable contains the MSK. Note that EAP_SUCCESS and EAP_FAILURE event variables may be set to TRUE even before the PaC receives a PAR with a 'Complete' flag set from the PAA.",
      "ja": "EAP認証結果のPAC通知するEAPピアのために、EAP_SUCCESSとEAP_FAILUREイベント変数が定義されています。 EAPピアが[RFC4137]で定義されたEAPピアステートマシンを以下の場合には、EAP_SUCCESSとEAP_FAILUREイベント変数は、それぞれ、EAPピア状態マシンのeapSuccessとeapFail変数を参照します。 EAP_SUCCESSイベント変数がTRUEに設定され、MSKが使用されているEAP認証方式によって生成された場合この場合、eapKeyAvailable変数がTRUEに設定され、eapKeyData変数は、MSKを含んでいます。 EAP_SUCCESSとEAP_FAILUREイベント変数は、PACがPAAからセット「コンプリート」フラグでPARを受信する前であってもTRUEに設定することができることに注意してください。"
    },
    {
      "indent": 0,
      "text": "7.1.5. Alternate Failure Notification from PaC to EAP Peer",
      "section_title": true,
      "ja": "7.1.5。 EAPピアへのPaCからの代替障害通知"
    },
    {
      "indent": 3,
      "text": "alt_reject() procedure in the PaC state machine serves as the mechanism to deliver an authentication failure event to the EAP peer without accompanying an EAP message. In the case where the EAP peer follows the EAP peer state machine defined in [RFC4137], alt_reject() procedure sets altReject variable of the EAP peer state machine. Note that the EAP peer state machine in [RFC4137] also defines altAccept variable; however, it is never used in PANA in which EAP-Success messages are reliably delivered by the last PANA-Auth exchange.",
      "ja": "PAC状態機械でalt_reject（）プロシージャは、EAPメッセージを伴うことなく、EAPピアに認証失敗イベントを配信する機構として働きます。 EAPピアが[RFC4137]で定義されたEAPピアステートマシンを以下の場合には、alt_reject（）プロシージャは、EAPピアステートマシンのaltReject変数を設定します。 [RFC4137]でEAPピア状態マシンはまたaltAccept変数を定義することに注意してください。しかし、それはEAP-成功メッセージが確実に最後PANA-Authの交換によって配信されるPANAで使用されることはありません。"
    },
    {
      "indent": 0,
      "text": "7.2. Configurable Values",
      "section_title": true,
      "ja": "7.2。設定可能な値"
    },
    {
      "indent": 3,
      "text": "FAILED_SESS_TIMEOUT",
      "ja": "FAILED_SESS_TIMEOUT"
    },
    {
      "indent": 6,
      "text": "This is a configurable value that allows the PaC to determine whether a PaC authentication and authorization phase has stalled without an explicit EAP success or failure notification.",
      "ja": "これは、PACはのPAC認証および承認相は、明示的なEAPの成功または失敗の通知なしに失速したかどうかを判断することを可能にする設定可能な値です。"
    },
    {
      "indent": 0,
      "text": "7.3. Variables",
      "section_title": true,
      "ja": "7.3。変数の"
    },
    {
      "indent": 3,
      "text": "AUTH_USER",
      "ja": "AUTH_USER"
    },
    {
      "indent": 6,
      "text": "This event variable is set to TRUE when initiation of EAP-based (re-)authentication is triggered by the application.",
      "ja": "EAPベースの（再）認証の開始がアプリケーションによってトリガされたとき、このイベント変数はTRUEに設定されています。"
    },
    {
      "indent": 3,
      "text": "EAP_SUCCESS",
      "ja": "EAP_SUCCESS"
    },
    {
      "indent": 6,
      "text": "This event variable is set to TRUE when the EAP peer determines that an EAP conversation completes with success.",
      "ja": "EAPピアがEAPの会話が成功して完了したと判断したときに、このイベント変数はTRUEに設定されています。"
    },
    {
      "indent": 3,
      "text": "EAP_FAILURE",
      "ja": "EAP_FAILURE"
    },
    {
      "indent": 6,
      "text": "This event variable is set to TRUE when the EAP peer determines that an EAP conversation completes with failure.",
      "ja": "EAPピアがEAPの会話が正常に完了しなかったと判断したときに、このイベント変数はTRUEに設定されています。"
    },
    {
      "indent": 3,
      "text": "EAP_RESPONSE",
      "ja": "EAP_RESPONSE"
    },
    {
      "indent": 6,
      "text": "This event variable is set to TRUE when the EAP peer delivers an EAP message to the PaC. This event accompanies an EAP message received from the EAP peer.",
      "ja": "EAPピアによってPACへのEAPメッセージを配信するときに、このイベント変数はTRUEに設定されています。このイベントは、EAPピアから受信したEAPメッセージを伴います。"
    },
    {
      "indent": 3,
      "text": "EAP_RESP_TIMEOUT",
      "ja": "EAP_RESP_TIMEOUT"
    },
    {
      "indent": 6,
      "text": "This event variable is set to TRUE when the PaC that has passed an EAP message to the EAP layer does not receive a subsequent EAP message from the EAP layer in a given period. This provides a time limit for certain EAP methods where user interaction may be required.",
      "ja": "EAP層にEAPメッセージを通過したPACが所定の期間内のEAPレイヤから後続のEAPメッセージを受信しないときに、このイベント変数はTRUEに設定されています。これは、ユーザーとの対話が必要とされ得る特定のEAPメソッドのための時間制限を提供します。"
    },
    {
      "indent": 3,
      "text": "EAP_DISCARD",
      "ja": "EAP_DISCARD"
    },
    {
      "indent": 6,
      "text": "This event variable is set to TRUE when the EAP peer indicates that it has silently discarded the last received EAP-Request. This event does not accompany any EAP message. In the case where the EAP peer follows the EAP peer state machine defined in [RFC4137], this event variable refers to eapNoResp. Note that this specification does not support silently discarding EAP messages. They are treated as fatal errors instead. This may have an impact on denial-of-service resistance.",
      "ja": "このイベント変数は、EAPピアは、それが最後に受信EAP-Requestを黙って破棄したことを示す場合にTRUEに設定されています。このイベントは、任意のEAPメッセージを伴いません。 EAPピアが[RFC4137]で定義されたEAPピアステートマシンを以下の場合に、このイベント変数はeapNoRespを指します。この仕様はEAPメッセージを破棄静かにサポートしていないことに注意してください。彼らは代わりに致命的なエラーとして扱われます。これはサービス拒否の抵抗に影響を与えることができます。"
    },
    {
      "indent": 0,
      "text": "7.4. Procedures",
      "section_title": true,
      "ja": "7.4。手順"
    },
    {
      "indent": 3,
      "text": "boolean eap_piggyback()",
      "ja": "ブールeap_piggyback（）"
    },
    {
      "indent": 6,
      "text": "This procedure returns TRUE to indicate whether the next EAP response will be carried in the pending PAN message for optimization.",
      "ja": "この手順は、次のEAP応答が最適化のために保留中のPANメッセージで搬送されるかどうかを示すためにTRUEを返します。"
    },
    {
      "indent": 3,
      "text": "void alt_reject()",
      "ja": "空alt_reject（）"
    },
    {
      "indent": 6,
      "text": "This procedure informs the EAP peer of an authentication failure event without accompanying an EAP message.",
      "ja": "この手順は、EAPメッセージを伴わずに認証失敗イベントのEAPピアに通知します。"
    },
    {
      "indent": 3,
      "text": "void EAP_RespTimerStart()",
      "ja": "EAP_RespTimerStartを無効（）"
    },
    {
      "indent": 6,
      "text": "This is a procedure to start a timer to receive an EAP-Response from the EAP peer.",
      "ja": "これは、EAPピアからのEAP-応答を受信するためにタイマーを開始するための手順です。"
    },
    {
      "indent": 3,
      "text": "void EAP_RespTimerStop()",
      "ja": "EAP_RespTimerStopを無効（）"
    },
    {
      "indent": 6,
      "text": "This is a procedure to stop a timer to receive an EAP-Response from the EAP peer.",
      "ja": "これは、EAPピアからのEAP-応答を受信するためにタイマーを停止する手順です。"
    },
    {
      "indent": 0,
      "text": "7.5. PaC State Transition Table",
      "section_title": true,
      "ja": "7.5。 PaCで状態遷移表"
    },
    {
      "indent": 3,
      "text": "------------------------------\nState: INITIAL (Initial State)\n------------------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Initialization Action:",
      "ja": "初期化アクション："
    },
    {
      "indent": 5,
      "text": "NONCE_SENT=Unset;\nRTX_COUNTER=0;\nRtxTimerStop();",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Exit Condition           Exit Action                Exit State\n------------------------+--------------------------+-----------\n- - - - - - - - - - (PaC-initiated Handshake) - - - - - - - - -\nAUTH_USER                Tx:PCI[]();                INITIAL\n                         RtxTimerStart();\n                         SessionTimerReStart\n                           (FAILED_SESS_TIMEOUT);\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "raw": true
    },
    {
      "indent": 3,
      "text": "- - - - - - -(PAA-initiated Handshake, not optimized) - - - - -\nRx:PAR[S] &&             EAP_Restart();             WAIT_PAA\n!PAR.exist_avp           SessionTimerReStart\n(\"EAP-Payload\")              (FAILED_SESS_TIMEOUT);\n                         if (generate_pana_sa())\n                             Tx:PAN[S](\"PRF-Algorithm\",\n                                \"Integrity-Algorithm\");\n                         else\n                             Tx:PAN[S]();\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "raw": true
    },
    {
      "indent": 3,
      "text": "- - - - - - - -(PAA-initiated Handshake, optimized) - - - - - -\nRx:PAR[S] &&             EAP_Restart();             INITIAL\nPAR.exist_avp            TxEAP();\n(\"EAP-Payload\") &&       SessionTimerReStart\neap_piggyback()            (FAILED_SESS_TIMEOUT);",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Rx:PAR[S] &&             EAP_Restart();             WAIT_EAP_MSG\nPAR.exist_avp            TxEAP();\n(\"EAP-Payload\") &&       SessionTimerReStart\n!eap_piggyback()           (FAILED_SESS_TIMEOUT);\n                         if (generate_pana_sa())\n                             Tx:PAN[S](\"PRF-Algorithm\",\n                               \"Integrity-Algorithm\");\n                         else\n                             Tx:PAN[S]();",
      "raw": true
    },
    {
      "indent": 3,
      "text": "EAP_RESPONSE             if (generate_pana_sa())    WAIT_PAA\n                             Tx:PAN[S](\"EAP-Payload\",\n                               \"PRF-Algorithm\",\n                               \"Integrity-Algorithm\");\n                         else\n                             Tx:PAN[S](\"EAP-Payload\");\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "raw": true
    },
    {
      "indent": 3,
      "text": "---------------\nState: WAIT_PAA\n---------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Exit Condition           Exit Action                Exit State\n------------------------+--------------------------+------------\n- - - - - - - - - - - - - - -(PAR-PAN exchange) - - - - - - - -\nRx:PAR[] &&              RtxTimerStop();            WAIT_EAP_MSG\n!eap_piggyback()         TxEAP();\n                         EAP_RespTimerStart();\n                         if (NONCE_SENT==Unset) {\n                           NONCE_SENT=Set;\n                           Tx:PAN[](\"Nonce\");\n                         }\n                         else\n                           Tx:PAN[]();",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Rx:PAR[] &&              RtxTimerStop();            WAIT_EAP_MSG\neap_piggyback()          TxEAP();\n                         EAP_RespTimerStart();",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Rx:PAN[] RtxTimerStop(); WAIT_PAA",
      "ja": "RX：PAN [] RtxTimerStop（）。 WAIT_PAA"
    },
    {
      "indent": 3,
      "text": "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "ja": "ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー"
    },
    {
      "indent": 3,
      "text": "- - - - - - - - - - - - - - -(PANA result) - - - - - - - - - - Rx:PAR[C] && TxEAP(); WAIT_EAP_RESULT PAR.RESULT_CODE== PANA_SUCCESS",
      "ja": " -   -   -   -   -   -   -   -   -   -   -   -   -   -   - （PANA結果） -   -   -   -   -   -   -   -   -   - 受信：PAR [C] && TxEAP（）。 WAIT_EAP_RESULT PAR.RESULT_CODE == PANA_SUCCESS"
    },
    {
      "indent": 3,
      "text": "Rx:PAR[C] &&             if (PAR.exist_avp          WAIT_EAP_RESULT_\nPAR.RESULT_CODE!=          (\"EAP-Payload\"))         CLOSE\n  PANA_SUCCESS             TxEAP();\n                         else\n                            alt_reject();\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "raw": true
    },
    {
      "indent": 3,
      "text": "-------------------\nState: WAIT_EAP_MSG\n-------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Exit Condition           Exit Action                Exit State\n------------------------+--------------------------+------------\n- - - - - - - - - - (Return PAN/PAR from EAP) - - - - - - - - -\nEAP_RESPONSE &&          EAP_RespTimerStop()        WAIT_PAA\neap_piggyback()          if (NONCE_SENT==Unset) {\n                           Tx:PAN[](\"EAP-Payload\",\n                                    \"Nonce\");\n                           NONCE_SENT=Set;\n                         }\n                         else\n                           Tx:PAN[](\"EAP-Payload\");",
      "raw": true
    },
    {
      "indent": 3,
      "text": "EAP_RESPONSE &&          EAP_RespTimerStop()        WAIT_PAA\n!eap_piggyback()         Tx:PAR[](\"EAP-Payload\");\n                         RtxTimerStart();",
      "raw": true
    },
    {
      "indent": 3,
      "text": "EAP_RESP_TIMEOUT && Tx:PAN[](); WAIT_PAA eap_piggyback()",
      "ja": "EAP_RESP_TIMEOUT &&送信：PAN []（）; WAIT_PAAのeap_piggyback（）"
    },
    {
      "indent": 3,
      "text": "EAP_DISCARD &&           Tx:PAN[]();                CLOSED\neap_piggyback()          SessionTimerStop();\n                         Disconnect();",
      "raw": true
    },
    {
      "indent": 3,
      "text": "EAP_FAILURE || SessionTimerStop(); CLOSED (EAP_DISCARD && Disconnect(); !eap_piggyback()) - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "ja": "EAP_FAILURE || SessionTimerStop（）; CLOSED（EAP_DISCARD &&外し（）;！eap_piggyback（）） -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   - "
    },
    {
      "indent": 3,
      "text": "----------------------\nState: WAIT_EAP_RESULT\n----------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Exit Condition           Exit Action                Exit State\n------------------------+--------------------------+------------\n- - - - - - - - - - - - - (EAP Result) - - - - - - - - - - - - -\nEAP_SUCCESS             if (PAR.exist_avp           OPEN\n                           (\"Key-Id\"))\n                          Tx:PAN[C](\"Key-Id\");\n                        else\n                          Tx:PAN[C]();\n                        Authorize();\n                        SessionTimerReStart\n                          (LIFETIME_SESS_TIMEOUT);",
      "raw": true
    },
    {
      "indent": 3,
      "text": "EAP_FAILURE             Tx:PAN[C]();                CLOSED\n                        SessionTimerStop();\n                        Disconnect();\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "raw": true
    },
    {
      "indent": 3,
      "text": "----------------------------\nState: WAIT_EAP_RESULT_CLOSE\n----------------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Exit Condition           Exit Action                Exit State\n------------------------+--------------------------+------------\n- - - - - - - - - - - - - (EAP Result) - - - - - - - - - - - - -\nEAP_SUCCESS ||          if (EAP_SUCCESS &&         CLOSED\nEAP_FAILURE               PAR.exist_avp(\"Key-Id\"))\n                          Tx:PAN[C](\"Key-Id\");\n                        else\n                          Tx:PAN[C]();\n                        SessionTimerStop();\n                        Disconnect();\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "raw": true
    },
    {
      "indent": 3,
      "text": "-----------\nState: OPEN\n-----------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Exit Condition           Exit Action                Exit State\n------------------------+--------------------------+------------\n- - - - - - - - - - (liveness test initiated by PaC)- - - - - -\nPANA_PING                Tx:PNR[P]();               WAIT_PNA_PING\n                         RtxTimerStart();\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n- - - - - - - - - (re-authentication initiated by PaC)- - - - - -\nREAUTH                   NONCE_SENT=Unset;          WAIT_PNA_REAUTH\n                         Tx:PNR[A]();\n                         RtxTimerStart();\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "raw": true
    },
    {
      "indent": 3,
      "text": "- - - - - - - - - (re-authentication initiated by PAA)- - - - - -\nRx:PAR[]                 EAP_RespTimerStart();      WAIT_EAP_MSG\n                         TxEAP();\n                         if (!eap_piggyback())\n                           Tx:PAN[](\"Nonce\");\n                         else\n                           NONCE_SENT=Unset;\n                         SessionTimerReStart\n                           (FAILED_SESS_TIMEOUT);\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n- - - - - - - -(Session termination initiated by PAA) - - - - - -\nRx:PTR[]                 Tx:PTA[]();                CLOSED\n                         SessionTimerStop();\n                         Disconnect();\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n- - - - - - - -(Session termination initiated by PaC) - - - - - -\nTERMINATE                Tx:PTR[]();                SESS_TERM\n                         RtxTimerStart();\n                         SessionTimerStop();\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "raw": true
    },
    {
      "indent": 3,
      "text": "----------------------\nState: WAIT_PNA_REAUTH\n----------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Exit Condition           Exit Action                Exit State\n------------------------+--------------------------+------------\n- - - - - - - - -(re-authentication initiated by PaC) - - - - -\nRx:PNA[A]                RtxTimerStop();            WAIT_PAA\n                         SessionTimerReStart\n                           (FAILED_SESS_TIMEOUT);\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n- - - - - - - -(Session termination initiated by PAA) - - - - - -\nRx:PTR[]                 RtxTimerStop();            CLOSED\n                         Tx:PTA[]();\n                         SessionTimerStop();\n                         Disconnect();\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "raw": true
    },
    {
      "indent": 3,
      "text": "--------------------\nState: WAIT_PNA_PING\n--------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Exit Condition           Exit Action                Exit State\n------------------------+--------------------------+------------\n- - - - - - - - -(liveness test initiated by PaC) - - - - - - -\nRx:PNA[P]                RtxTimerStop();            OPEN\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "raw": true
    },
    {
      "indent": 3,
      "text": "- - - - - - - - - (re-authentication initiated by PAA)- - - - -\nRx:PAR[]                 RtxTimerStop();            WAIT_EAP_MSG\n                         EAP_RespTimerStart();\n                         TxEAP();\n                         if (!eap_piggyback())\n                           Tx:PAN[](\"Nonce\");\n                         else\n                           NONCE_SENT=Unset;\n                         SessionTimerReStart\n                           (FAILED_SESS_TIMEOUT);\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n- - - - - - - -(Session termination initiated by PAA) - - - - - -\nRx:PTR[]                 RtxTimerStop();            CLOSED\n                         Tx:PTA[]();\n                         SessionTimerStop();\n                         Disconnect();\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "raw": true
    },
    {
      "indent": 3,
      "text": "----------------\nState: SESS_TERM\n----------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Exit Condition           Exit Action                Exit State\n------------------------+--------------------------+------------\n- - - - - - - -(Session termination initiated by PaC) - - - - -\nRx:PTA[]                 Disconnect();              CLOSED\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "raw": true
    },
    {
      "indent": 0,
      "text": "8. PAA State Machine",
      "section_title": true,
      "ja": "8. PAAステートマシン"
    },
    {
      "indent": 0,
      "text": "8.1. Interface between PAA and EAP Authenticator",
      "section_title": true,
      "ja": "8.1。 PAAとEAP認証の間のインタフェース"
    },
    {
      "indent": 3,
      "text": "The interface between a PAA and an EAP authenticator provides a mechanism to deliver EAP messages for the EAP authenticator as well as a mechanism to notify the EAP authenticator of PAA events and to receive notification of EAP authenticator events. These message delivery and event notification mechanisms occur only within context of their associated states or exit actions.",
      "ja": "PAA及びEAPオーセンティケータとの間のインターフェースは、EAP認証ならびにPAAイベントのEAP認証を通知するとEAP認証イベントの通知を受信する機構にEAPメッセージを配信するためのメカニズムを提供します。これらのメッセージの配信およびイベント通知メカニズムは、それらに関連する状態またはexitアクションのコンテキスト内で発生します。"
    },
    {
      "indent": 0,
      "text": "8.1.1. EAP Restart Notification from PAA to EAP Authenticator",
      "section_title": true,
      "ja": "8.1.1。 PAAからのEAP認証にEAP再起動通知"
    },
    {
      "indent": 3,
      "text": "An EAP authenticator state machine defined in [RFC4137] has an initialization procedure before sending the first EAP request. To initialize the EAP state machine, the PAA state machine defines an event notification mechanism to send an EAP (re)start event to the EAP authenticator. The event notification is done via EAP_Restart() procedure in the initialization action of the PAA state machine.",
      "ja": "[RFC4137]で定義されたEAP認証ステートマシンは、第1のEAP要求を送信する前に初期化手順を有します。 EAPステートマシンを初期化するために、PAA状態マシンはEAPオーセンティケータにEAP（再）起動イベントを送信するイベント通知機構を定義します。イベント通知は、PAAステートマシンの初期化動作にEAP_Restart（）プロシージャを介して行われます。"
    },
    {
      "indent": 0,
      "text": "8.1.2. Delivering EAP Responses from PAA to EAP Authenticator",
      "section_title": true,
      "ja": "8.1.2。 EAP認証にPAAからEAP応答を実現"
    },
    {
      "indent": 3,
      "text": "TxEAP() procedure in the PAA state machine serves as the mechanism to deliver EAP-Responses contained in PANA-Auth-Answer messages to the EAP authenticator. This procedure is enabled only after an EAP restart event is notified to the EAP authenticator and before any event resulting in a termination of the EAP authenticator session. In the case where the EAP authenticator follows the EAP authenticator state machines defined in [RFC4137], TxEAP() procedure sets eapResp variable of the EAP authenticator state machine and puts the EAP response in eapRespData variable of the EAP authenticator state machine.",
      "ja": "PAA状態機械でTxEAP（）プロシージャは、EAP認証にPANA-AUTH-応答メッセージに含まれているEAP-応答を提供するためのメカニズムとして機能します。この手順は、EAPの再起動イベントは、EAP認証にとEAP認証セッションの終了に起因するいかなるイベントの前に通知された後にのみ有効になります。 EAP認証は、[RFC4137]で定義されたEAP認証ステートマシンを以下の場合には、TxEAP（）プロシージャは、EAP認証ステートマシンのeapResp変数を設定し、EAP認証ステートマシンのeapRespData変数にEAP応答を置きます。"
    },
    {
      "indent": 0,
      "text": "8.1.3. Delivering EAP Messages from EAP Authenticator to PAA",
      "section_title": true,
      "ja": "8.1.3。 PAAにEAP認証からEAPメッセージを届けます"
    },
    {
      "indent": 3,
      "text": "An EAP request is delivered from the EAP authenticator to the PAA via EAP_REQUEST event variable. The event variable is set when the EAP authenticator passes the EAP request to its lower layer. In the case where the EAP authenticator follows the EAP authenticator state machines defined in [RFC4137], EAP_REQUEST event variable refers to eapReq variable of the EAP authenticator state machine and the EAP request is contained in eapReqData variable of the EAP authenticator state machine.",
      "ja": "EAP要求がEAP_REQUESTイベント変数を経由してPAAにEAP認証から配信されます。 EAP認証は、その下位層にEAP要求を通過する際に、イベント変数が設定されています。 EAP認証は、[RFC4137]で定義されたEAP認証ステートマシンを以下の場合には、EAP_REQUESTイベント変数はeapReqのEAP認証マシンの変数とEAP要求はEAP認証ステートマシンのeapReqData変数に含まれていることをいいます。"
    },
    {
      "indent": 0,
      "text": "8.1.4. EAP Authentication Result Notification from EAP Authenticator to PAA",
      "ja": "8.1.4。 PAAへのEAP認証からEAP認証結果通知"
    },
    {
      "indent": 3,
      "text": "In order for the EAP authenticator to notify the PAA of the EAP authentication result, EAP_SUCCESS, EAP_FAILURE, and EAP_TIMEOUT event variables are defined. In the case where the EAP authenticator follows the EAP authenticator state machines defined in [RFC4137], EAP_SUCCESS, EAP_FAILURE, and EAP_TIMEOUT event variables refer to eapSuccess, eapFail, and eapTimeout variables of the EAP authenticator state machine, respectively. In this case, if EAP_SUCCESS event variable is set to TRUE, an EAP-Success message is contained in eapReqData variable of the EAP authenticator state machine, and additionally, eapKeyAvailable variable is set to TRUE and eapKeyData variable contains an MSK if the MSK is generated as a result of successful authentication by the EAP authentication method in use. Similarly, if EAP_FAILURE event variable is set to TRUE, an EAP-Failure message is contained in eapReqData variable of the EAP authenticator state machine. The PAA uses EAP_SUCCESS and EAP_FAILURE event variables as a trigger to send a PAR message to the PaC.",
      "ja": "EAP認証結果のPAAを通知するEAP認証のための順に、EAP_SUCCESS、EAP_FAILURE、及びEAP_TIMEOUTイベント変数が定義されています。 EAP認証は、[RFC4137]で定義されたEAP認証ステートマシンを以下の場合には、EAP_SUCCESS、EAP_FAILURE、及びEAP_TIMEOUTイベント変数は、それぞれ、EAP認証ステートマシンのeapSuccess、eapFail、及びeapTimeout変数を参照します。 EAP_SUCCESSイベント変数がTRUEに設定されている場合この場合、EAP-Successメッセージは、EAP認証ステートマシンのeapReqData変数に含まれ、さらに、eapKeyAvailable変数がTRUEに設定され、MSKが発生した場合eapKeyData変数はMSKを含んでいます使用中のEAP認証方式による認証が成功した結果として。 EAP_FAILUREイベント変数がTRUEに設定されている場合、同様に、EAP失敗メッセージは、EAP認証ステートマシンのeapReqData変数に含まれています。 PAAは、PACにPARメッセージを送信するためのトリガーとしてEAP_SUCCESSとEAP_FAILUREイベント変数を使用しています。"
    },
    {
      "indent": 0,
      "text": "8.2. Variables",
      "section_title": true,
      "ja": "8.2。変数の"
    },
    {
      "indent": 3,
      "text": "OPTIMIZED_INIT",
      "ja": "OPTIMIZED_INIT"
    },
    {
      "indent": 6,
      "text": "This variable indicates whether the PAA is able to piggyback an EAP-Request in the initial PANA-Auth-Request. Otherwise, it is set to FALSE.",
      "ja": "この変数は、PAAが初期PANA-AUTH-RequestにEAP-Requestをピギーバックすることが可能であるかどうかを示します。それ以外の場合はFALSEに設定されています。"
    },
    {
      "indent": 3,
      "text": "PAC_FOUND",
      "ja": "PAC_FOUND"
    },
    {
      "indent": 6,
      "text": "This variable is set to TRUE as a result of a PAA-initiated handshake.",
      "ja": "この変数は、PAA-開始ハンドシェークの結果としてTRUEに設定されています。"
    },
    {
      "indent": 3,
      "text": "REAUTH_TIMEOUT",
      "ja": "REAUTH_TIMEOUT"
    },
    {
      "indent": 6,
      "text": "This event variable is set to TRUE to indicate that the PAA initiates a re-authentication with the PaC. The re-authentication timeout should be set to a value less than the session timeout carried in the Session-Lifetime AVP if present.",
      "ja": "このイベント変数は、PAAがPaCでと再認証を開始することを示すために、TRUEに設定されています。再認証のタイムアウトが存在する場合、セッション・生涯AVPに運ばセッションタイムアウトよりも小さい値に設定する必要があります。"
    },
    {
      "indent": 3,
      "text": "EAP_SUCCESS",
      "ja": "EAP_SUCCESS"
    },
    {
      "indent": 6,
      "text": "This event variable is set to TRUE when an EAP conversation completes with success. This event accompanies an EAP-Success message passed from the EAP authenticator.",
      "ja": "EAPの会話が成功で終了したときに、このイベント変数はTRUEに設定されています。このイベントは、EAP認証から渡されたEAP-Successメッセージを伴います。"
    },
    {
      "indent": 3,
      "text": "EAP_FAILURE",
      "ja": "EAP_FAILURE"
    },
    {
      "indent": 6,
      "text": "This event variable is set to TRUE when an EAP conversation completes with failure. This event accompanies an EAP-Failure message passed from the EAP authenticator.",
      "ja": "EAPの会話が正常に完了しなかった場合、このイベント変数はTRUEに設定されています。このイベントは、EAP認証から渡されたEAP失敗メッセージを伴います。"
    },
    {
      "indent": 3,
      "text": "EAP_REQUEST",
      "ja": "EAP_REQUEST"
    },
    {
      "indent": 6,
      "text": "This event variable is set to TRUE when the EAP authenticator delivers an EAP Request to the PAA. This event accompanies an EAP-Request message received from the EAP authenticator.",
      "ja": "EAP認証がPAAにEAP要求を実現したときに、このイベント変数はTRUEに設定されています。このイベントは、EAP認証から受信したEAP-Requestメッセージを伴います。"
    },
    {
      "indent": 3,
      "text": "EAP_TIMEOUT",
      "ja": "EAP_TIMEOUT"
    },
    {
      "indent": 6,
      "text": "This event variable is set to TRUE when an EAP conversation times out without generating an EAP-Success or an EAP-Failure message. This event does not accompany any EAP message.",
      "ja": "このイベント変数がTRUEに設定されている場合、EAP-成功またはEAP失敗メッセージを生成せずにアウトEAPの会話の時間。このイベントは、任意のEAPメッセージを伴いません。"
    },
    {
      "indent": 3,
      "text": "EAP_DISCARD",
      "ja": "EAP_DISCARD"
    },
    {
      "indent": 6,
      "text": "This event variable is set to TRUE when the EAP authenticator indicates that it has silently discarded the last received EAP-Response message. This event does not accompany any EAP message. In the case where the EAP authenticator follows the EAP authenticator state machines defined in [RFC4137], this event variable refers to eapNoReq.",
      "ja": "EAP認証は、それが最後に受信したEAP-Responseメッセージを破棄黙っていることを示しているときに、このイベント変数はTRUEに設定されています。このイベントは、任意のEAPメッセージを伴いません。 EAP認証は、[RFC4137]で定義されたEAP認証ステートマシンを以下の場合に、このイベント変数はeapNoReqを指します。"
    },
    {
      "indent": 0,
      "text": "8.3. Procedures",
      "section_title": true,
      "ja": "8.3。手順"
    },
    {
      "indent": 3,
      "text": "boolean new_key_available()",
      "ja": "ブールnew_key_available（）"
    },
    {
      "indent": 6,
      "text": "This is a procedure to check whether the PANA session has a new PANA_AUTH_KEY. If the state machine already has a PANA_AUTH_KEY, it returns FALSE. If the state machine does not have a PANA_AUTH_KEY, it tries to retrieve an MSK from the EAP entity. If an MSK has been retrieved, it computes a PANA_AUTH_KEY from the MSK and returns TRUE. Otherwise, it returns FALSE.",
      "ja": "これは、PANAセッションが新しいPANA_AUTH_KEYを持っているかどうかを確認するための手順です。ステート・マシンはすでにPANA_AUTH_KEYを持っている場合、それはFALSEを返します。ステートマシンがPANA_AUTH_KEYを持っていない場合は、EAPエンティティからMSKを取得しようとします。 MSKは、検索された場合は、MSKからPANA_AUTH_KEYを計算し、TRUEを返します。それ以外の場合はFALSEを返します。"
    },
    {
      "indent": 0,
      "text": "8.4. PAA State Transition Table",
      "section_title": true,
      "ja": "8.4。 PAA状態遷移表"
    },
    {
      "indent": 3,
      "text": "------------------------------\nState: INITIAL (Initial State)\n------------------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Initialization Action:",
      "ja": "初期化アクション："
    },
    {
      "indent": 5,
      "text": "OPTIMIZED_INIT=Set|Unset;\nNONCE_SENT=Unset;\nRTX_COUNTER=0;\nRtxTimerStop();",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Exit Condition           Exit Action                Exit State\n------------------------+--------------------------+------------\n - - - - - - - - (PCI and PAA initiated PANA) - - - - - - - - -\n(Rx:PCI[] ||             if (OPTIMIZED_INIT ==      INITIAL\n PAC_FOUND)                  Set) {\n                           EAP_Restart();\n                           SessionTimerReStart\n                            (FAILED_SESS_TIMEOUT);\n                         }\n                         else {\n                           if (generate_pana_sa())\n                                Tx:PAR[S](\"PRF-Algorithm\",\n                                   \"Integrity-Algorithm\");\n                           else\n                                Tx:PAR[S]();",
      "raw": true
    },
    {
      "indent": 28,
      "text": "}",
      "ja": "｝"
    },
    {
      "indent": 3,
      "text": "EAP_REQUEST              if (generate_pana_sa())    INITIAL\n                             Tx:PAR[S](\"EAP-Payload\",\n                                \"PRF-Algorithm\",\n                                \"Integrity-Algorithm\");\n                         else\n                             Tx:PAR[S](\"EAP-Payload\");\n                         RtxTimerStart();\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "raw": true
    },
    {
      "indent": 3,
      "text": "- - - - - - - - - - - - - - (PAN Handling)  - - - - - - - - - -\nRx:PAN[S] &&             if (PAN.exist_avp          WAIT_EAP_MSG\n((OPTIMIZED_INIT ==         (\"EAP-Payload\"))\n  Unset) ||                TxEAP();\nPAN.exist_avp            else {\n  (\"EAP-Payload\"))         EAP_Restart();\n                           SessionTimerReStart\n                            (FAILED_SESS_TIMEOUT);\n                         }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Rx:PAN[S] && None(); WAIT_PAN_OR_PAR (OPTIMIZED_INIT == Set) && ! PAN.exist_avp (\"EAP-Payload\")",
      "ja": "RX：PAN [S] &&なし（）; WAIT_PAN_OR_PAR（OPTIMIZED_INIT ==セット）&&！ PAN.exist_avp（ \"EAP-ペイロード\"）"
    },
    {
      "indent": 3,
      "text": "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "ja": "ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー ー"
    },
    {
      "indent": 3,
      "text": "-------------------\nState: WAIT_EAP_MSG\n-------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Exit Condition           Exit Action                Exit State\n------------------------+--------------------------+------------\n- - - - - - - - - - - -(Receiving EAP-Request)- - - - - - - - -\nEAP_REQUEST              if (NONCE_SENT==Unset) {   WAIT_PAN_OR_PAR\n                           Tx:PAR[](\"Nonce\",\n                                    \"EAP-Payload\");\n                           NONCE_SENT=Set;\n                         }\n                         else\n                           Tx:PAR[](\"EAP-Payload\");\n                         RtxTimerStart();\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n- - - - - - - - - - -(Receiving EAP-Success/Failure) - - - - -\nEAP_FAILURE              PAR.RESULT_CODE =          WAIT_FAIL_PAN\n                           PANA_AUTHENTICATION_",
      "raw": true
    },
    {
      "indent": 28,
      "text": "      REJECTED;\nTx:PAR[C](\"EAP-Payload\");\nRtxTimerStart();\nSessionTimerStop();",
      "raw": true
    },
    {
      "indent": 3,
      "text": "EAP_SUCCESS &&           PAR.RESULT_CODE =          WAIT_SUCC_PAN\nAuthorize()                PANA_SUCCESS;\n                         if (new_key_available())\n                           Tx:PAR[C](\"EAP-Payload\",\n                                \"Key-Id\");\n                         else\n                           Tx:PAR[C](\"EAP-Payload\");\n                         RtxTimerStart();",
      "raw": true
    },
    {
      "indent": 3,
      "text": "EAP_SUCCESS &&           PAR.RESULT_CODE =          WAIT_FAIL_PAN\n!Authorize()               PANA_AUTHORIZATION_\n                             REJECTED;\n                         if (new_key_available())\n                           Tx:PAR[C](\"EAP-Payload\",\n                                \"Key-Id\");\n                         else\n                           Tx:PAR[C](\"EAP-Payload\");\n                         RtxTimerStart();\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n - - - - - (Receiving EAP-Timeout or invalid message) - - - - -\nEAP_TIMEOUT ||           SessionTimerStop();        CLOSED\nEAP_DISCARD              Disconnect();\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "raw": true
    },
    {
      "indent": 3,
      "text": "--------------------\nState: WAIT_SUCC_PAN\n--------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Event/Condition          Action                     Exit State\n------------------------+--------------------------+------------\n- - - - - - - - - - - - - (PAN Processing)- - - - - - - - - - -\nRx:PAN[C]                RtxTimerStop();            OPEN\n                         SessionTimerReStart\n                           (LIFETIME_SESS_TIMEOUT);\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "raw": true
    },
    {
      "indent": 3,
      "text": "--------------------\nState: WAIT_FAIL_PAN\n--------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Exit Condition           Exit Action                Exit State\n------------------------+--------------------------+------------\n- - - - - - - - - - - - - - (PAN Processing)- - - - - - - - - -",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Rx:PAN[C] RtxTimerStop(); CLOSED Disconnect(); - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "ja": "RX：PAN [C] RtxTimerStop（）。 CLOSED切断（）。 -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   - "
    },
    {
      "indent": 3,
      "text": "-----------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "State: OPEN\n-----------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Event/Condition          Action                     Exit State\n------------------------+--------------------------+------------\n- - - - - - - - (re-authentication initiated by PaC) - - - - - -\nRx:PNR[A]                NONCE_SENT=Unset;          WAIT_EAP_MSG\n                         EAP_Restart();\n                         Tx:PNA[A]();\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n- - - - - - - - (re-authentication initiated by PAA)- - - - - -\nREAUTH ||                NONCE_SENT=Unset;          WAIT_EAP_MSG\nREAUTH_TIMEOUT           EAP_Restart();",
      "raw": true
    },
    {
      "indent": 3,
      "text": "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n- - (liveness test based on PNR-PNA exchange initiated by PAA)-\nPANA_PING                Tx:PNR[P]();               WAIT_PNA_PING\n                         RtxTimerStart();\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n- - - - - - - - (Session termination initiated from PAA)- - - -\nTERMINATE                Tx:PTR[]();                SESS_TERM\n                         SessionTimerStop();\n                         RtxTimerStart();\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n- - - - - - - - (Session termination initiated from PaC)- - - -\nRx:PTR[]                 Tx:PTA[]();                CLOSED\n                         SessionTimerStop();\n                         Disconnect();\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "raw": true
    },
    {
      "indent": 3,
      "text": "--------------------\nState: WAIT_PNA_PING\n--------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Exit Condition           Exit Action                Exit State\n------------------------+--------------------------+------------\n- - - - - - - - - - - - - -(PNA processing) - - - - - - - - - -\nRx:PNA[P]                RtxTimerStop();            OPEN\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n- - - - - - - - (re-authentication initiated by PaC) - - - - - -\nRx:PNR[A]                RtxTimerStop();            WAIT_EAP_MSG\n                         NONCE_SENT=Unset;",
      "raw": true
    },
    {
      "indent": 3,
      "text": "                         EAP_Restart();\n                         Tx:PNA[A]();\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n- - - - - - - - (Session termination initiated from PaC)- - - -\nRx:PTR[]                 RtxTimerStop();            CLOSED\n                         Tx:PTA[]();\n                         SessionTimerStop();\n                         Disconnect();\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "raw": true
    },
    {
      "indent": 3,
      "text": "----------------------\nState: WAIT_PAN_OR_PAR\n----------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Exit Condition           Exit Action                Exit State\n------------------------+--------------------------+------------\n- - - - - - - - - - - - - (PAR Processing)- - - - - - - - - - -\nRx:PAR[]                 TxEAP();                   WAIT_EAP_MSG\n                         RtxTimerStop();\n                         Tx:PAN[]();\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n- - - - - - (Pass EAP Response to the EAP authenticator)- - - -\nRx:PAN[] &&              TxEAP();                   WAIT_EAP_MSG\nPAN.exist_avp            RtxTimerStop();\n(\"EAP-Payload\")\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n- - - - - - - - - - (PAN without an EAP response) - - - - - - -\nRx:PAN[] &&              RtxTimerStop();            WAIT_PAN_OR_PAR\n!PAN.exist_avp\n(\"EAP-Payload\")\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n- - - - - - - - - - - -(EAP retransmission) - - - - - - - - - -\nEAP_REQUEST              RtxTimerStop();            WAIT_PAN_OR_PAR\n                         Tx:PAR[](\"EAP-Payload\");\n                         RtxTimerStart();\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n- - - - - - - (EAP authentication timeout or failure)- - - - -\nEAP_FAILURE ||           RtxTimerStop();            CLOSED\nEAP_TIMEOUT ||           SessionTimerStop();\nEAP_DISCARD              Disconnect();\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "raw": true
    },
    {
      "indent": 3,
      "text": "----------------\nState: SESS_TERM\n----------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Exit Condition           Exit Action                Exit State\n------------------------+--------------------------+------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "- - - - - - - - - - - - - -(PTA processing) - - - - - - - - - - Rx:PTA[] RtxTimerStop(); CLOSED Disconnect(); - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "ja": " -   -   -   -   -   -   -   -   -   -   -   -   -   - （PTA処理） -   -   -   -   -   -   -   -   -   - 受信：PTA [] RtxTimerStop（）。 CLOSED切断（）。 -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   - "
    },
    {
      "indent": 0,
      "text": "9. Implementation Considerations",
      "section_title": true,
      "ja": "9.実装に関する考慮事項"
    },
    {
      "indent": 0,
      "text": "9.1. PAA and PaC Interface to Service Management Entity",
      "section_title": true,
      "ja": "9.1。サービス管理エンティティにPAAとPACインターフェース"
    },
    {
      "indent": 3,
      "text": "In general, it is assumed that each device or network equipment has a PANA protocol stack available for use by other modules within the device or network equipment. One such module is the Service Management Entity (SME). The SME is a generic term for modules that manage different services (including network protocols) that are installed on a device or equipment. To integrate the PANA protocol with the SME, it is recommended that a generic interface (i.e., the SME-PANA interface) between the SME and the PANA protocol stack be provided by the implementation. This interface should include common procedures such as startup, shutdown, and re-authenticate signals. It should also provide for extracting keying material. For the PAA, the SME-PANA interface should also provide a method for communicating filtering parameters to the Enforcement Point(s) when cryptographic filtering is used. The filtering parameters include keying material used for bootstrapping secured transport such as IPsec. When a PAA device interacts with the backend authentication server using a AAA protocol, its SME may also provide an interface to the AAA protocol to obtain authorization parameters such as the authorization lifetime and additional filtering parameters.",
      "ja": "一般的には、各デバイスまたはネットワーク機器は、デバイスまたはネットワーク機器内の他のモジュールによる使用のために利用可能なPANAプロトコルスタックを有していることが想定されます。そのようなモジュールは、サービス管理エンティティ（SME）です。 SMEは、デバイスや機器にインストールされている（ネットワークプロトコルを含む）異なるサービスを管理するモジュールの総称です。 SMEとPANAプロトコルを統合するには、SMEとPANAプロトコルスタックとの間の汎用インタフェース（即ち、SME-PANAインタフェース）は実装によって提供されることが推奨されます。このインタフェースは、起動、停止、および再認証信号として一般的な手順を含むべきです。また、鍵材料を抽出するために提供する必要があります。 PAAのために、SME-PANAインターフェースは、暗号フィルタリングが使用されて施行ポイント（複数可）にフィルタリングパラメータを通信するための方法を提供すべきです。フィルタリングパラメータは、IPsecなどのブートストラップセキュアトランスポートに使用されるキーイング材料を含みます。 PAA装置は、AAAプロトコルを使用してバックエンド認証サーバと対話するとき、そのSMEはまた、許可の有効期間及び追加のフィルタリングパラメータとして認可パラメータを取得するためにAAAプロトコルにインタフェースを提供することができます。"
    },
    {
      "indent": 0,
      "text": "10. Security Considerations",
      "section_title": true,
      "ja": "10.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "This document's intent is to describe the PANA state machines fully. To this end, any security concerns with this document are likely a reflection of security concerns with PANA itself.",
      "ja": "このドキュメントの意図を完全にPANAのステートマシンを記述することです。このため、このドキュメントでのセキュリティ上の懸念はおそらくPANA自体にセキュリティ上の懸念を反映しています。"
    },
    {
      "indent": 0,
      "text": "11. Acknowledgments",
      "section_title": true,
      "ja": "11.謝辞"
    },
    {
      "indent": 3,
      "text": "This work was started from state machines originally made by Dan Forsberg.",
      "ja": "この作品は、もともとダンフォースバーグによって作られたステートマシンから開始されました。"
    },
    {
      "indent": 0,
      "text": "12. References",
      "section_title": true,
      "ja": "12.参考文献"
    },
    {
      "indent": 0,
      "text": "12.1. Normative References",
      "section_title": true,
      "ja": "12.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC5191] Forsberg, D., Ohba, Y., Patil, B., Tschofenig, H., and A. Yegin, \"Protocol for Carrying Authentication for Network Access (PANA)\", RFC 5191, May 2008.",
      "ja": "[RFC5191]フォースバーグ、D.、オオバ、Y.、パティル、B.、Tschofenig、H.、およびA. Yegin、RFC 5191、2008年5月 \"ネットワークアクセス（PANA）の認証を搬送するプロトコル\"。"
    },
    {
      "indent": 0,
      "text": "12.2. Informative References",
      "section_title": true,
      "ja": "12.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[RFC4137] Vollbrecht, J., Eronen, P., Petroni, N., and Y. Ohba, \"State Machines for Extensible Authentication Protocol (EAP) Peer and Authenticator\", RFC 4137, August 2005.",
      "ja": "[RFC4137] Vollbrecht、J.、Eronen、P.、ペトローニ、N.、およびY.大場、 \"ステートマシン拡張のための認証プロトコル（EAP）ピアとオーセンティケータ\"、RFC 4137、2005年8月。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Victor Fajardo (editor) Telcordia Technologies 1 Telcordia Drive Piscataway, NJ 08854 USA",
      "ja": "ビクターファハルド（エディタ）のTelcordia Technologies社1のTelcordiaドライブピスカタウェイ、NJ 08854 USA"
    },
    {
      "indent": 3,
      "text": "Phone: +1 732 699 5368 EMail: vfajardo@research.telcordia.com",
      "ja": "電話：+1 732 699 5368 Eメール：vfajardo@research.telcordia.com"
    },
    {
      "indent": 3,
      "text": "Yoshihiro Ohba Toshiba Corporate Research and Development Center 1 Komukai-Toshiba-cho, Saiwai-ku Kawasaki, Kanagawa 212-8582 Japan",
      "ja": "よしひろ おｈば としば こｒぽらて れせあｒｃｈ あんｄ でゔぇぉｐめんｔ せんてｒ １ こむかいーとしばーちょ、 さいわいーく かわさき、 かながわ ２１２ー８５８２ じゃぱん"
    },
    {
      "indent": 3,
      "text": "Phone: +81 44 549 2230 EMail: yoshihiro.ohba@toshiba.co.jp",
      "ja": "電話：+81 44 549 2230 Eメール：yoshihiro.ohba@toshiba.co.jp"
    },
    {
      "indent": 3,
      "text": "Rafa Marin-Lopez University of Murcia Campus de Espinardo S/N, Facultad de Informatica Murcia 30100 Spain",
      "ja": "ムルシアEspinardoキャンパスのS / N、学校コンピューティングのムルシア30100スペインのラファエル・マリン・ロペス大学"
    },
    {
      "indent": 3,
      "text": "Phone: +34 868 888 501 EMail: rafa@um.es",
      "ja": "電話：+34 868 888 501 Eメール：rafa@um.es"
    }
  ]
}