{
  "title": {
    "text": "RFC 3852 - Cryptographic Message Syntax (CMS)",
    "ja": "RFC 3852 - 暗号メッセージ構文（CMS）"
  },
  "number": 3852,
  "created_at": "2019-10-24 07:13:06.106895+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                         R. Housley\nRequest for Comments: 3852                                Vigil Security\nObsoletes: 3369                                                July 2004\nCategory: Standards Track",
      "raw": true
    },
    {
      "indent": 19,
      "text": "Cryptographic Message Syntax (CMS)",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "このメモの位置付け"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "ja": "この文書は、インターネットコミュニティのためのインターネット標準トラックプロトコルを指定し、改善のための議論と提案を要求します。このプロトコルの標準化状態と状態への「インターネット公式プロトコル標準」（STD 1）の最新版を参照してください。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2004).",
      "ja": "著作権（C）インターネット協会（2004）。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document describes the Cryptographic Message Syntax (CMS). This syntax is used to digitally sign, digest, authenticate, or encrypt arbitrary message content.",
      "ja": "この文書は、暗号メッセージ構文（CMS）について説明します。この構文は、デジタル署名、ダイジェスト、認証、または任意のメッセージの内容を暗号化するために使用されます。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.   Introduction. . . . . . . . . . . . . . . . . . . . . . . . .  3\n     1.1.   Evolution of the CMS . . . . . . . . . . . . . . . . .  3\n            1.1.1.  Changes Since PKCS #7 Version 1.5. . . . . . .  3\n            1.1.2.  Changes Since RFC 2630 . . . . . . . . . . . .  4\n            1.1.3.  Changes Since RFC 3369 . . . . . . . . . . . .  4\n     1.2.  Terminology . . . . . . . . . . . . . . . . . . . . . .  5\n     1.3.  Version Numbers . . . . . . . . . . . . . . . . . . . .  5\n2.   General Overview. . . . . . . . . . . . . . . . . . . . . . .  5\n3.   General Syntax  . . . . . . . . . . . . . . . . . . . . . . .  6\n4.   Data Content Type . . . . . . . . . . . . . . . . . . . . . .  6\n5.   Signed-data Content Type. . . . . . . . . . . . . . . . . . .  7\n     5.1.   SignedData Type. . . . . . . . . . . . . . . . . . . .  8\n     5.2.   EncapsulatedContentInfo Type . . . . . . . . . . . . . 10\n            5.2.1.   Compatibility with PKCS #7. . . . . . . . . . 11\n     5.3.   SignerInfo Type. . . . . . . . . . . . . . . . . . . . 12\n     5.4.   Message Digest Calculation Process . . . . . . . . . . 14\n     5.5.   Signature Generation Process . . . . . . . . . . . . . 15\n     5.6.   Signature Verification Process . . . . . . . . . . . . 15\n6.   Enveloped-data Content Type . . . . . . . . . . . . . . . . . 16\n     6.1.   EnvelopedData Type . . . . . . . . . . . . . . . . . . 17",
      "raw": true
    },
    {
      "indent": 3,
      "text": "     6.2.   RecipientInfo Type . . . . . . . . . . . . . . . . . . 19\n            6.2.1.   KeyTransRecipientInfo Type. . . . . . . . . . 20\n            6.2.2.   KeyAgreeRecipientInfo Type. . . . . . . . . . 21\n            6.2.3.   KEKRecipientInfo Type . . . . . . . . . . . . 24\n            6.2.4.   PasswordRecipientInfo Type. . . . . . . . . . 25\n            6.2.5.   OtherRecipientInfo Type . . . . . . . . . . . 26\n     6.3.   Content-encryption Process . . . . . . . . . . . . . . 26\n     6.4.   Key-encryption Process . . . . . . . . . . . . . . . . 27\n7.   Digested-data Content Type. . . . . . . . . . . . . . . . . . 27\n8.   Encrypted-data Content Type . . . . . . . . . . . . . . . . . 28\n9.   Authenticated-data Content Type . . . . . . . . . . . . . . . 29\n     9.1.   AuthenticatedData Type . . . . . . . . . . . . . . . . 30\n     9.2.   MAC Generation . . . . . . . . . . . . . . . . . . . . 32\n     9.3.   MAC Verification . . . . . . . . . . . . . . . . . . . 33\n10.  Useful Types. . . . . . . . . . . . . . . . . . . . . . . . . 33\n     10.1.  Algorithm Identifier Types . . . . . . . . . . . . . . 33\n            10.1.1.  DigestAlgorithmIdentifier . . . . . . . . . . 34\n            10.1.2.  SignatureAlgorithmIdentifier. . . . . . . . . 34\n            10.1.3.  KeyEncryptionAlgorithmIdentifier. . . . . . . 34\n            10.1.4.  ContentEncryptionAlgorithmIdentifier. . . . . 34\n            10.1.5.  MessageAuthenticationCodeAlgorithm. . . . . . 35\n            10.1.6.  KeyDerivationAlgorithmIdentifier. . . . . . . 35\n     10.2.  Other Useful Types . . . . . . . . . . . . . . . . . . 35\n            10.2.1.  RevocationInfoChoices . . . . . . . . . . . . 35\n            10.2.2.  CertificateChoices. . . . . . . . . . . . . . 36\n            10.2.3.  CertificateSet. . . . . . . . . . . . . . . . 37\n            10.2.4.  IssuerAndSerialNumber . . . . . . . . . . . . 37\n            10.2.5.  CMSVersion. . . . . . . . . . . . . . . . . . 38\n            10.2.6.  UserKeyingMaterial. . . . . . . . . . . . . . 38\n            10.2.7.  OtherKeyAttribute . . . . . . . . . . . . . . 38\n11.  Useful Attributes . . . . . . . . . . . . . . . . . . . . . . 38\n     11.1.  Content Type . . . . . . . . . . . . . . . . . . . . . 39\n     11.2.  Message Digest . . . . . . . . . . . . . . . . . . . . 39\n     11.3.  Signing Time . . . . . . . . . . . . . . . . . . . . . 40\n     11.4.  Countersignature . . . . . . . . . . . . . . . . . . . 41\n12.  ASN.1 Modules . . . . . . . . . . . . . . . . . . . . . . . . 42\n     12.1.  CMS ASN.1 Module . . . . . . . . . . . . . . . . . . . 43\n     12.2.  Version 1 Attribute Certificate ASN.1 Module . . . . . 50\n13.  References  . . . . . . . . . . . . . . . . . . . . . . . . . 51\n     13.1.  Normative References . . . . . . . . . . . . . . . . . 51\n     13.2.  Informative References . . . . . . . . . . . . . . . . 52\n14.  Security Considerations . . . . . . . . . . . . . . . . . . . 53\n15.  Acknowledgments . . . . . . . . . . . . . . . . . . . . . . . 55\n16.  Author's Address. . . . . . . . . . . . . . . . . . . . . . . 55\n17.  Full Copyright Statement. . . . . . . . . . . . . . . . . . . 56",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "This document describes the Cryptographic Message Syntax (CMS). This syntax is used to digitally sign, digest, authenticate, or encrypt arbitrary message content.",
      "ja": "この文書は、暗号メッセージ構文（CMS）について説明します。この構文は、デジタル署名、ダイジェスト、認証、または任意のメッセージの内容を暗号化するために使用されます。"
    },
    {
      "indent": 3,
      "text": "The CMS describes an encapsulation syntax for data protection. It supports digital signatures and encryption. The syntax allows multiple encapsulations; one encapsulation envelope can be nested inside another. Likewise, one party can digitally sign some previously encapsulated data. It also allows arbitrary attributes, such as signing time, to be signed along with the message content, and provides for other attributes such as countersignatures to be associated with a signature.",
      "ja": "CMSは、データ保護のためのカプセル化構文について説明します。これは、デジタル署名と暗号化をサポートしています。構文は、複数のカプセル化することができます。 1つのカプセル化エンベロープは別の内側にネストすることができます。同様に、一方の当事者は、デジタルでいくつかの以前にカプセル化されたデータに署名することができます。また、そのような時間に署名等の任意の属性は、メッセージの内容と一緒に署名することができ、そしてそのような署名に関連付けられるcountersignaturesなどの他の属性を提供します。"
    },
    {
      "indent": 3,
      "text": "The CMS can support a variety of architectures for certificate-based key management, such as the one defined by the PKIX working group [PROFILE].",
      "ja": "CMSは、PKIXワーキンググループ[PROFILE]で定義されたものとして証明書ベースの鍵管理のためのアーキテクチャ、種々のを支援することができます。"
    },
    {
      "indent": 3,
      "text": "The CMS values are generated using ASN.1 [X.208-88], using BER-encoding [X.209-88]. Values are typically represented as octet strings. While many systems are capable of transmitting arbitrary octet strings reliably, it is well known that many electronic mail systems are not. This document does not address mechanisms for encoding octet strings for reliable transmission in such environments.",
      "ja": "CMS値は、BERコード[X.209-88]を使用して、[X.208-88] ASN.1を用いて生成されます。値は、典型的には、オクテット文字列として表されます。多くのシステムが確実に任意のオクテット文字列を送信することができるが、多くの電子メールシステムではないことが知られています。この文書では、そのような環境での信頼性の高い伝送のためのオクテット文字列を符号化するためのメカニズムには対応していません。"
    },
    {
      "indent": 0,
      "text": "1.1. Evolution of the CMS",
      "section_title": true,
      "ja": "1.1.  CMSの進化"
    },
    {
      "indent": 3,
      "text": "The CMS is derived from PKCS #7 version 1.5, which is documented in RFC 2315 [PKCS#7]. PKCS #7 version 1.5 was developed outside of the IETF; it was originally published as an RSA Laboratories Technical Note in November 1993. Since that time, the IETF has taken responsibility for the development and maintenance of the CMS. Today, several important IETF standards-track protocols make use of the CMS.",
      "ja": "CMSは、RFC 2315に記載されているPKCS＃7バージョン1.5、に由来する[PKCS＃7]。 PKCS＃7バージョン1.5は、IETFの外で開発されました。それは、もともとその時以来1993年11月にRSA研究所テクニカルノートとして公開された、IETFは、CMSの開発と保守のための責任を取りました。今日では、いくつかの重要なIETF標準トラックプロトコルは、CMSを利用します。"
    },
    {
      "indent": 3,
      "text": "This section describes the changes that the IETF has made to the CMS in each of the published versions.",
      "ja": "このセクションでは、IETFが公開されたバージョンのそれぞれにCMSに行われた変更について説明します。"
    },
    {
      "indent": 0,
      "text": "1.1.1. Changes Since PKCS #7 Version 1.5",
      "section_title": true,
      "ja": "1.1.1.  PKCS＃7バージョン1.5からの変更点"
    },
    {
      "indent": 3,
      "text": "RFC 2630 [CMS1] was the first version of the CMS on the IETF standards track. Wherever possible, backward compatibility with PKCS #7 version 1.5 is preserved; however, changes were made to accommodate version 1 attribute certificate transfer and to support algorithm independent key management. PKCS #7 version 1.5 included support only for key transport. RFC 2630 adds support for key agreement and previously distributed symmetric key-encryption key techniques.",
      "ja": "RFC 2630 [CMS1]はIETF標準トラック上のCMSの最初のバージョンでした。 PKCS＃7バージョン1.5で可能な下位互換性は維持されている場所。ただし、変更は、バージョン1属性証明書の転送に対応するために、アルゴリズムに依存しないキー管理をサポートするために作られました。 PKCS＃7バージョン1.5は、唯一の鍵の輸送のためのサポートが含まれています。 RFC 2630は、鍵の合意と以前に分配された左右対称キー暗号化キー・技術のサポートを追加します。"
    },
    {
      "indent": 1,
      "text": "1.1.2. Changes Since",
      "section_title": true,
      "ja": "1.1.2. 変化するため"
    },
    {
      "indent": 3,
      "text": "RFC 3369 [CMS2] obsoletes RFC 2630 [CMS1] and RFC 3211 [PWRI]. Password-based key management is included in the CMS specification, and an extension mechanism to support new key management schemes without further changes to the CMS is specified. Backward compatibility with RFC 2630 and RFC 3211 is preserved; however, version 2 attribute certificate transfer is added, and the use of version 1 attribute certificates is deprecated.",
      "ja": "RFC 3369 [CMS2]は、RFC 2630 [CMS1]およびRFC 3211 [PWRI]を時代遅れ。パスワードベースのキー管理は、CMSの仕様に含まれており、拡張機構が指定されているCMSにさらに変更することなく、新しい鍵管理方式をサポートすること。 RFC 2630およびRFC 3211との下位互換性が維持されます。しかし、バージョン2属性証明書の転送が追加され、バージョン1属性証明書の使用は推奨されています。"
    },
    {
      "indent": 3,
      "text": "S/MIME v2 signatures [OLDMSG], which are based on PKCS#7 version 1.5, are compatible with S/MIME v3 signatures [MSG], which are based on RFC 2630. However, there are some subtle compatibility issues with signatures based on PKCS #7 version 1.5. These issues are discussed in section 5.2.1. These issues remain with the current version of the CMS.",
      "ja": "PKCS＃7バージョン1.5に基づいてS / MIME v2の署名[OLDMSG]は、RFC 2630に基づいてS / MIME v3の署名[MSG]と互換性があるが、上のベースの署名との微妙な互換性の問題がありますPKCS＃7バージョン1.5。これらの問題はセクション5.2.1で説明されています。これらの問題は、CMSの現在のバージョンで残ります。"
    },
    {
      "indent": 3,
      "text": "Specific cryptographic algorithms are not discussed in this document, but they were discussed in RFC 2630. The discussion of specific cryptographic algorithms has been moved to a separate document [CMSALG]. Separation of the protocol and algorithm specifications allows the IETF to update each document independently. This specification does not require the implementation of any particular algorithms. Rather, protocols that rely on the CMS are expected to choose appropriate algorithms for their environment. The algorithms may be selected from [CMSALG] or elsewhere.",
      "ja": "特定の暗号化アルゴリズムは、このドキュメントで説明されていないが、それらは、特定の暗号アルゴリズムの議論は、別の文書[CMSALG]に移動されたRFC 2630で説明しました。プロトコルおよびアルゴリズム仕様の分離は、IETFは、それぞれ独立して文書を更新することを可能にします。この仕様は、特定のアルゴリズムの実装を必要としません。むしろ、CMSに依存しているプロトコルは、その環境に適したアルゴリズムを選択することが期待されています。アルゴリズムは[CMSALG]又は他の場所から選択することができます。"
    },
    {
      "indent": 1,
      "text": "1.1.3. Changes Since",
      "section_title": true,
      "ja": "1.1.3. 変化するため"
    },
    {
      "indent": 3,
      "text": "This document obsoletes RFC 3369 [CMS2]. As discussed in the previous section, RFC 3369 introduced an extension mechanism to support new key management schemes without further changes to the CMS. This document introduces a similar extension mechanism to support additional certificate formats and revocation status information formats without further changes to the CMS. These extensions are primarily documented in section 10.2.1 and section 10.2.2. Backward compatibility with earlier versions of the CMS is preserved.",
      "ja": "この文書はRFC 3369を廃止[CMS2]。前のセクションで説明したように、RFC 3369には、CMSにさらに変更することなく、新しい鍵管理方式をサポートするための拡張メカニズムを導入しました。この文書では、CMSにさらに変更することなく、追加の証明書フォーマットおよび失効状態情報のフォーマットをサポートするために、同様の拡張メカニズムを導入しています。これらの拡張機能は、主にセクション10.2.1および10.2.2項に記載されています。 CMSの以前のバージョンとの下位互換性は維持されます。"
    },
    {
      "indent": 3,
      "text": "The use of version numbers is described in section 1.3.",
      "ja": "バージョン番号の使用は、セクション1.3に記載されています。"
    },
    {
      "indent": 3,
      "text": "Since the publication of RFC 3369, a few errata have been noted. These errata are posted on the RFC Editor web site. These errors have been corrected in this document.",
      "ja": "RFC 3369の出版以来、いくつかの正誤表が注目されています。これらの正誤表は、RFC EditorのWebサイトに掲載されています。これらのエラーは、このドキュメントで修正されました。"
    },
    {
      "indent": 3,
      "text": "The text in section 11.4 that describes the counter signature unsigned attribute is clarified. Hopefully the revised text is clearer about the portion of the SignerInfo signature that is covered by a countersignature.",
      "ja": "未署名の属性が明確にされた対向署名を説明するセクション11.4内のテキスト。うまくいけば、改定テキストは副署で覆われているのSignerInfo署名の部分について明確です。"
    },
    {
      "indent": 0,
      "text": "1.2. Terminology",
      "section_title": true,
      "ja": "1.2. 用語"
    },
    {
      "indent": 3,
      "text": "In this document, the key words MUST, MUST NOT, REQUIRED, SHOULD, SHOULD NOT, RECOMMENDED, MAY, and OPTIONAL are to be interpreted as described in [STDWORDS].",
      "ja": "この文書では、キーワードは、REQUIREDは、MAY、推奨すべきでないてはいけませんしなければならない、とOPTIONALは[STDWORDS]で説明されるように解釈されるべきです。"
    },
    {
      "indent": 0,
      "text": "1.3. Version Numbers",
      "section_title": true,
      "ja": "1.3. バージョン番号"
    },
    {
      "indent": 3,
      "text": "Each of the major data structures includes a version number as the first item in the data structure. The version numbers are intended to avoid ASN.1 decode errors. Some implementations do not check the version number prior to attempting a decode, and if a decode error occurs, then the version number is checked as part of the error handling routine. This is a reasonable approach; it places error processing outside of the fast path. This approach is also forgiving when an incorrect version number is used by the sender.",
      "ja": "主要なデータ構造のそれぞれは、データ構造の最初の項目として、バージョン番号を含みます。バージョン番号は、ASN.1デコードエラーを回避することを意図しています。一部の実装では、前のデコードを試みるにバージョン番号を確認していない、とデコードエラーが発生した場合、バージョン番号は、エラー処理ルーチンの一部としてチェックされます。これは合理的なアプローチです。それは、高速パスの外のエラー処理を配置します。誤ったバージョン番号は、送信者が使用している場合は、このアプローチにも寛容です。"
    },
    {
      "indent": 3,
      "text": "Most of the initial version numbers were assigned in PKCS #7 version 1.5. Others were assigned when the structure was initially created. Whenever a structure is updated, a higher version number is assigned. However, to ensure maximum interoperability the higher version number is only used when the new syntax feature is employed. That is, the lowest version number that supports the generated syntax is used.",
      "ja": "初期のバージョン番号のほとんどは、PKCS＃7バージョン1.5に割り当てられました。構造が最初に作成されたときに他の人が割り当てられました。構造が更新されるたびに、上位バージョン番号が割り当てられます。新しい構文機能が採用されている場合しかし、最大の相互運用性を確保するために高いバージョン番号のみが使用されています。これは、生成された構文が使用されているサポートしている最低のバージョン番号です。"
    },
    {
      "indent": 0,
      "text": "2. General Overview",
      "section_title": true,
      "ja": "2.一般的な概要"
    },
    {
      "indent": 3,
      "text": "The CMS is general enough to support many different content types. This document defines one protection content, ContentInfo. ContentInfo encapsulates a single identified content type, and the identified type may provide further encapsulation. This document defines six content types: data, signed-data, enveloped-data, digested-data, encrypted-data, and authenticated-data. Additional content types can be defined outside this document.",
      "ja": "CMSは、多くの異なるコンテンツタイプをサポートするのに十分な一般的です。この文書では、ContentInfo、つの保護コンテンツを定義します。 ContentInfoは、単一の識別されたコンテンツ・タイプをカプセル化し、識別されたタイプは、さらにカプセル化を提供してもよいです。データ、署名されたデータ、エンベロープデータ、消化されたデータ、暗号化データ、及び認証データ：この文書は、6つのコンテンツタイプを定義します。追加のコンテンツタイプは、この文書の外で定義することができます。"
    },
    {
      "indent": 3,
      "text": "An implementation that conforms to this specification MUST implement the protection content, ContentInfo, and MUST implement the data, signed-data, and enveloped-data content types. The other content types MAY be implemented.",
      "ja": "この仕様に準拠した実装は、保護コンテンツ、ContentInfoを実装しなければならない、データ、署名されたデータ、及びエンベロープデータ・コンテンツ・タイプを実装しなければなりません。他のコンテンツタイプを実装することができます。"
    },
    {
      "indent": 3,
      "text": "As a general design philosophy, each content type permits single pass processing using indefinite-length Basic Encoding Rules (BER) encoding. Single-pass operation is especially helpful if content is large, stored on tapes, or is \"piped\" from another process. Single- pass operation has one significant drawback: it is difficult to perform encode operations using the Distinguished Encoding Rules (DER) [X.509-88] encoding in a single pass since the lengths of the various components may not be known in advance. However, signed attributes within the signed-data content type and authenticated attributes within the authenticated-data content type need to be transmitted in DER form to ensure that recipients can verify a content that contains one or more unrecognized attributes. Signed attributes and authenticated attributes are the only data types used in the CMS that require DER encoding.",
      "ja": "一般的な設計思想として、各コンテンツタイプが不定長の基本符号化規則（BER）符号化を用いてシングルパス処理を可能にします。シングルパス操作では、コンテンツが多い場合、特に便利ですテープに保存されている、または別のプロセスからの「パイプ」されます。シングルパス動作は、一つ重大な欠点を有している：様々な構成要素の長さが予め知られていないかもしれないので、単一のパスで符号化する識別符号化規則（DER）[X.509-88]を使用してエンコード動作を実行することは困難です。ただし、認証されたデータのコンテンツタイプ内で署名されたデータのコンテンツ・タイプと認証された属性内の属性に署名し、受信者は、1つ以上の認識されていない属性を含むコンテンツを検証できることを保証するために、DER形式で送信される必要があります。署名された属性と認証された属性は、DERエンコーディングを必要とCMSで使用されるデータ型のみです。"
    },
    {
      "indent": 0,
      "text": "3. General Syntax",
      "section_title": true,
      "ja": "3.一般的な構文"
    },
    {
      "indent": 3,
      "text": "The following object identifier identifies the content information type:",
      "ja": "以下のオブジェクト識別子は、コンテンツ情報のタイプを識別する。"
    },
    {
      "indent": 6,
      "text": "id-ct-contentInfo OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n   us(840) rsadsi(113549) pkcs(1) pkcs9(9) smime(16) ct(1) 6 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The CMS associates a content type identifier with a content. The syntax MUST have ASN.1 type ContentInfo:",
      "ja": "CMSは、コンテンツとコンテンツタイプ識別子を関連付けます。構文はASN.1タイプContentInfoを持っている必要があります。"
    },
    {
      "indent": 6,
      "text": "ContentInfo ::= SEQUENCE {\n  contentType ContentType,\n  content [0] EXPLICIT ANY DEFINED BY contentType }",
      "raw": true
    },
    {
      "indent": 6,
      "text": "ContentType ::= OBJECT IDENTIFIER",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The fields of ContentInfo have the following meanings:",
      "ja": "ContentInfoのフィールドは以下の意味があります。"
    },
    {
      "indent": 6,
      "text": "contentType indicates the type of the associated content. It is an object identifier; it is a unique string of integers assigned by an authority that defines the content type.",
      "ja": "contentTypeのは、関連するコンテンツのタイプを示します。これは、オブジェクト識別子です。それは、コンテンツタイプを定義する権威によって割り当てられた整数の一意の文字列です。"
    },
    {
      "indent": 6,
      "text": "content is the associated content. The type of content can be determined uniquely by contentType. Content types for data, signed-data, enveloped-data, digested-data, encrypted-data, and authenticated-data are defined in this document. If additional content types are defined in other documents, the ASN.1 type defined SHOULD NOT be a CHOICE type.",
      "ja": "コンテンツは、関連するコンテンツです。コンテンツの種類は、のcontentTypeによって一意に決定することができます。データ、署名データ、包まデータ、消化・データ、暗号化データ、および認証されたデータのコンテンツタイプは、この文書で定義されています。追加コンテンツタイプが他の文書で定義されている場合は、定義されたASN.1型はCHOICEタイプするべきではありません。"
    },
    {
      "indent": 0,
      "text": "4. Data Content Type",
      "section_title": true,
      "ja": "4.データコンテンツの種類"
    },
    {
      "indent": 3,
      "text": "The following object identifier identifies the data content type:",
      "ja": "以下のオブジェクト識別子は、データのコンテンツタイプを識別します。"
    },
    {
      "indent": 6,
      "text": "id-data OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n   us(840) rsadsi(113549) pkcs(1) pkcs7(7) 1 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The data content type is intended to refer to arbitrary octet strings, such as ASCII text files; the interpretation is left to the application. Such strings need not have any internal structure (although they could have their own ASN.1 definition or other structure).",
      "ja": "データのコンテンツタイプは、ASCIIテキストファイルなどの任意のオクテット文字列、を指すことが意図されます。解釈はアプリケーションに任されています。このような文字列は、（彼らは自分のASN.1定義または他の構造を持っている可能性が）任意の内部構造を持っている必要はありません。"
    },
    {
      "indent": 3,
      "text": "S/MIME uses id-data to identify MIME encoded content. The use of this content identifier is specified in RFC 2311 for S/MIME v2 [OLDMSG] and RFC 3851 for S/MIME v3.1 [MSG].",
      "ja": "S / MIMEは、MIMEエンコードされたコンテンツを識別するためのIDデータを使用します。このコンテンツ識別子の使用は、[MSG]はS / MIME v3.1のためのS / MIME V2 [OLDMSG]とRFC 3851は、RFC 2311で指定されています。"
    },
    {
      "indent": 3,
      "text": "The data content type is generally encapsulated in the signed-data, enveloped-data, digested-data, encrypted-data, or authenticated-data content type.",
      "ja": "データコンテンツタイプは、一般に、署名されたデータにエンベロープデータ、消化されたデータ、暗号化データ、または認証されたデータのコンテンツタイプをカプセル化されます。"
    },
    {
      "indent": 0,
      "text": "5. Signed-data Content Type",
      "section_title": true,
      "ja": "5.署名データコンテンツの種類"
    },
    {
      "indent": 3,
      "text": "The signed-data content type consists of a content of any type and zero or more signature values. Any number of signers in parallel can sign any type of content.",
      "ja": "署名されたデータのコンテンツタイプは、任意のタイプおよびゼロ以上の署名値の内容で構成されています。並行して署名者の任意の数のコンテンツの任意のタイプに署名することができます。"
    },
    {
      "indent": 3,
      "text": "The typical application of the signed-data content type represents one signer's digital signature on content of the data content type. Another typical application disseminates certificates and certificate revocation lists (CRLs).",
      "ja": "署名されたデータコンテンツタイプの典型的なアプリケーションは、データのコンテンツタイプのコンテンツ上の一人の署名者のデジタル署名を表します。別の典型的なアプリケーションは、証明書と証明書失効リスト（CRL）を発信しています。"
    },
    {
      "indent": 3,
      "text": "The process by which signed-data is constructed involves the following steps:",
      "ja": "データを締結するプロセスが構築され、以下のステップを含みます："
    },
    {
      "indent": 6,
      "text": "1. For each signer, a message digest, or hash value, is computed on the content with a signer-specific message-digest algorithm. If the signer is signing any information other than the content, the message digest of the content and the other information are digested with the signer's message digest algorithm (see Section 5.4), and the result becomes the \"message digest.\"",
      "ja": "各署名者1.、メッセージダイジェストまたはハッシュ値が、署名者固有のメッセージダイジェストアルゴリズムでコンテンツに計算されます。署名者は、コンテンツ以外の任意の情報に署名されている場合は、コンテンツやその他の情報のメッセージダイジェストは、署名者のメッセージダイジェストアルゴリズムで消化されている（5.4節を参照）、その結果は「メッセージダイジェスト」。"
    },
    {
      "indent": 6,
      "text": "2. For each signer, the message digest is digitally signed using the signer's private key.",
      "ja": "各署名者2.は、メッセージダイジェストは、デジタル署名者の秘密鍵を使って署名されています。"
    },
    {
      "indent": 6,
      "text": "3. For each signer, the signature value and other signer-specific information are collected into a SignerInfo value, as defined in Section 5.3. Certificates and CRLs for each signer, and those not corresponding to any signer, are collected in this step.",
      "ja": "セクション5.3で定義されるように3は、各署名者は、署名値と他の署名者固有の情報は、のSignerInfo値に集められます。証明書とCRL各署名者のために、任意の署名者に対応していないものは、このステップで収集されます。"
    },
    {
      "indent": 6,
      "text": "4. The message digest algorithms for all the signers and the SignerInfo values for all the signers are collected together with the content into a SignedData value, as defined in Section 5.1.",
      "ja": "4.メッセージは、セクション5.1で定義されるように、すべての署名者およびすべての署名者のためのSignerInfo値のアルゴリズムは、のSignedData値にコンテンツと一緒に収集されるダイジェスト。"
    },
    {
      "indent": 3,
      "text": "A recipient independently computes the message digest. This message digest and the signer's public key are used to verify the signature value. The signer's public key is referenced either by an issuer distinguished name along with an issuer-specific serial number or by a subject key identifier that uniquely identifies the certificate containing the public key. The signer's certificate can be included in the SignedData certificates field.",
      "ja": "受信者は、独立して、メッセージダイジェストを計算します。このメッセージダイジェストと署名者の公開鍵は、署名値を検証するために使用されています。署名者の公開鍵は、発行者識別名で発行者固有のシリアル番号と共に、または一意の公開鍵を含む証明書を識別するサブジェクトキー識別子のいずれかによって参照されています。署名者の証明書は、SignedDataの証明書フィールドに含めることができます。"
    },
    {
      "indent": 3,
      "text": "This section is divided into six parts. The first part describes the top-level type SignedData, the second part describes EncapsulatedContentInfo, the third part describes the per-signer information type SignerInfo, and the fourth, fifth, and sixth parts describe the message digest calculation, signature generation, and signature verification processes, respectively.",
      "ja": "このセクションでは、6つの部分に分割されています。最初の部分はトップレベルタイプのSignedDataを説明し、第二の部分はEncapsulatedContentInfo、第三の部分ごとの署名者情報のタイプのSignerInfoを記述し説明し、第5、第四、及び第六の部分は、メッセージ計算、署名生成、署名検証ダイジェスト説明しますそれぞれのプロセス、。"
    },
    {
      "indent": 0,
      "text": "5.1. SignedData Type",
      "section_title": true,
      "ja": "5.1.  SignedDataタイプ"
    },
    {
      "indent": 3,
      "text": "The following object identifier identifies the signed-data content type:",
      "ja": "以下のオブジェクト識別子は、署名されたデータコンテンツのタイプを識別する。"
    },
    {
      "indent": 6,
      "text": "id-signedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n   us(840) rsadsi(113549) pkcs(1) pkcs7(7) 2 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The signed-data content type shall have ASN.1 type SignedData:",
      "ja": "署名データのコンテンツタイプは、ASN.1タイプのSignedDataを持たなければなりません。"
    },
    {
      "indent": 6,
      "text": "SignedData ::= SEQUENCE {\n  version CMSVersion,\n  digestAlgorithms DigestAlgorithmIdentifiers,\n  encapContentInfo EncapsulatedContentInfo,\n  certificates [0] IMPLICIT CertificateSet OPTIONAL,\n  crls [1] IMPLICIT RevocationInfoChoices OPTIONAL,\n  signerInfos SignerInfos }",
      "raw": true
    },
    {
      "indent": 6,
      "text": "DigestAlgorithmIdentifiers ::= SET OF DigestAlgorithmIdentifier",
      "raw": true
    },
    {
      "indent": 6,
      "text": "SignerInfos ::= SET OF SignerInfo",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The fields of type SignedData have the following meanings:",
      "ja": "タイプのSignedDataのフィールドは以下の意味があります。"
    },
    {
      "indent": 6,
      "text": "version is the syntax version number. The appropriate value depends on certificates, eContentType, and SignerInfo. The version MUST be assigned as follows:",
      "ja": "バージョンは構文バージョン番号です。適切な値は、証明書、のeContentType、とのSignerInfoに依存します。次のようにバージョンが割り当てられなければなりません："
    },
    {
      "indent": 9,
      "text": "IF ((certificates is present) AND (any certificates with a type of other are present)) OR ((crls is present) AND (any crls with a type of other are present)) THEN version MUST be 5 ELSE IF (certificates is present) AND (any version 2 attribute certificates are present) THEN version MUST be 4 ELSE IF ((certificates is present) AND (any version 1 attribute certificates are present)) OR (any SignerInfo structures are version 3) OR (encapContentInfo eContentType is other than id-data) THEN version MUST be 3 ELSE version MUST be 1",
      "ja": "IF（）（証明書が存在する）と（他のタイプのいずれかの証明書が存在する）OR（（CRLが存在する）と（他のタイプの任意のCRLが存在する））THENバージョンが証明書である（IF 5 ELSEでなければなりませんAND（すべてのバージョン1つの属性証明書が存在している））OR（任意のSignerInfo構造は、バージョン3である）OR（encapContentInfoのeContentTypeである（THENバージョンがELSE 4 IF（（証明書が存在していなければなりませんどのバージョン2属性証明書が存在する））が存在）AND THENバージョンでなければなりません3 ELSEバージョンは1でなければなりません）IDデータ以外"
    },
    {
      "indent": 6,
      "text": "digestAlgorithms is a collection of message digest algorithm identifiers. There MAY be any number of elements in the collection, including zero. Each element identifies the message digest algorithm, along with any associated parameters, used by one or more signer. The collection is intended to list the message digest algorithms employed by all of the signers, in any order, to facilitate one-pass signature verification. Implementations MAY fail to validate signatures that use a digest algorithm that is not included in this set. The message digesting process is described in Section 5.4.",
      "ja": "digestAlgorithmsは、アルゴリズム識別子をメッセージダイジェストのコレクションです。ゼロを含むコレクションの要素、任意の数のがあるかもしれません。各要素は、1人のまたは複数の署名者によって使用される任意の関連パラメータと共に、メッセージダイジェストアルゴリズムを識別する。コレクションは、ワンパス署名検証を容易にするために、任意の順序で、署名者の全てによって使用さメッセージダイジェストアルゴリズムを一覧表示することを意図しています。実装はこのセットに含まれていないダイジェストアルゴリズムを使用して署名を検証するために失敗することがあります。メッセージ消化プロセスはセクション5.4に記載されています。"
    },
    {
      "indent": 6,
      "text": "encapContentInfo is the signed content, consisting of a content type identifier and the content itself. Details of the EncapsulatedContentInfo type are discussed in section 5.2.",
      "ja": "encapContentInfoコンテンツタイプ識別子とコンテンツ自体からなる、署名されたコンテンツです。 EncapsulatedContentInfoタイプの詳細は、セクション5.2に記載されています。"
    },
    {
      "indent": 6,
      "text": "certificates is a collection of certificates. It is intended that the set of certificates be sufficient to contain certification paths from a recognized \"root\" or \"top-level certification authority\" to all of the signers in the signerInfos field. There may be more certificates than necessary, and there may be certificates sufficient to contain certification paths from two or more independent top-level certification authorities. There may also be fewer certificates than necessary, if it is expected that recipients have an alternate means of obtaining necessary certificates (e.g., from a previous set of certificates). The signer's certificate MAY be included. The use of version 1 attribute certificates is strongly discouraged.",
      "ja": "証明書は、証明書のコレクションです。証明書のセットがsignerInfosフィールド内の署名者のすべてに認められ、「ルート」または「トップレベルの認証局」からの証明書パスを含むのに十分であることが意図されています。必要以上の証明書があるかもしれませんし、2つ以上の独立したトップレベルの証明機関から証明書パスを含むのに十分な証明書があるかもしれません。受信者が（証明書の前のセットから、例えば、）必要な証明書を得るための別の手段を有することが予想される場合にも、必要に応じてより少ない証明書が存在してもよいです。署名者の証明書が含まれるかもしれません。バージョン1の属性証明書の使用を強くお勧めします。"
    },
    {
      "indent": 6,
      "text": "crls is a collection of revocation status information. It is intended that the collection contain information sufficient to determine whether the certificates in the certificates field are valid, but such correspondence is not necessary. Certificate revocation lists (CRLs) are the primary source of revocation status information. There MAY be more CRLs than necessary, and there MAY also be fewer CRLs than necessary. signerInfos is a collection of per-signer information. There MAY be any number of elements in the collection, including zero. The details of the SignerInfo type are discussed in section 5.3. Since each signer can employ a digital signature technique and future specifications could update the syntax, all implementations MUST gracefully handle unimplemented versions of SignerInfo. Further, since all implementations will not support every possible signature algorithm, all implementations MUST gracefully handle unimplemented signature algorithms when they are encountered.",
      "ja": "CRLは、失効状態情報のコレクションです。コレクションは、証明書フィールド内の証明書が有効であるかどうかを決定するのに十分な情報が含まれているが、このような対応が必要ではないことを意図しています。証明書失効リスト（CRL）失効ステータス情報の主な源です。必要以上のCRLが存在してもよく、また、必要以上に少ないのCRLがあるかもしれません。 signerInfosごとの署名者情報の収集です。ゼロを含むコレクションの要素、任意の数のがあるかもしれません。 SignerInfoタイプの詳細は、セクション5.3に記載されています。構文各署名者は、デジタル署名技術を使用することができ、将来の仕様が更新可能性があるので、すべての実装が正常のSignerInfoの実装されていないバージョンを処理する必要があります。すべての実装が可能なすべての署名アルゴリズムをサポートしていないので、それらが発生した時にまた、すべての実装が優雅に実装されていない署名アルゴリズムを処理する必要があります。"
    },
    {
      "indent": 0,
      "text": "5.2. EncapsulatedContentInfo Type",
      "section_title": true,
      "ja": "5.2.  EncapsulatedContentInfoタイプ"
    },
    {
      "indent": 3,
      "text": "The content is represented in the type EncapsulatedContentInfo:",
      "ja": "コンテンツは、タイプEncapsulatedContentInfoで表されます。"
    },
    {
      "indent": 6,
      "text": "EncapsulatedContentInfo ::= SEQUENCE {\n  eContentType ContentType,\n  eContent [0] EXPLICIT OCTET STRING OPTIONAL }",
      "raw": true
    },
    {
      "indent": 6,
      "text": "ContentType ::= OBJECT IDENTIFIER",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The fields of type EncapsulatedContentInfo have the following meanings:",
      "ja": "タイプEncapsulatedContentInfoのフィールドは以下の意味があります。"
    },
    {
      "indent": 6,
      "text": "eContentType is an object identifier. The object identifier uniquely specifies the content type.",
      "ja": "eContentTypeはオブジェクト識別子です。オブジェクト識別子は、一意のコンテンツタイプを指定します。"
    },
    {
      "indent": 6,
      "text": "eContent is the content itself, carried as an octet string. The eContent need not be DER encoded.",
      "ja": "e-コンテンツは、オクテット文字列として実施し、コンテンツそのものです。 e-コンテンツは、DERエンコードである必要はありません。"
    },
    {
      "indent": 3,
      "text": "The optional omission of the eContent within the EncapsulatedContentInfo field makes it possible to construct \"external signatures.\" In the case of external signatures, the content being signed is absent from the EncapsulatedContentInfo value included in the signed-data content type. If the eContent value within EncapsulatedContentInfo is absent, then the signatureValue is calculated and the eContentType is assigned as though the eContent value was present.",
      "ja": "EncapsulatedContentInfoフィールド内のe-コンテンツのオプションの省略は構築することが可能になり、「外部の署名を。」外部署名の場合には、署名されたコンテンツは、署名されたデータのコンテンツタイプに含まEncapsulatedContentInfo値は存在しません。 EncapsulatedContentInfo内のe-コンテンツ値が存在しない場合、signatureValueが計算され、e-コンテンツの値が存在したものとしてのeContentTypeが割り当てられます。"
    },
    {
      "indent": 3,
      "text": "In the degenerate case where there are no signers, the EncapsulatedContentInfo value being \"signed\" is irrelevant. In this case, the content type within the EncapsulatedContentInfo value being \"signed\" MUST be id-data (as defined in section 4), and the content field of the EncapsulatedContentInfo value MUST be omitted.",
      "ja": "いかなる署名者が存在しない縮退した場合に、EncapsulatedContentInfo値は無関係である「符号付き」されています。この場合、EncapsulatedContentInfo値内のコンテンツタイプは、（セクション4で定義されるように）、IDデータでなければなりません「に署名」され、そしてEncapsulatedContentInfo値の内容フィールドを省略しなければなりません。"
    },
    {
      "indent": 0,
      "text": "5.2.1. Compatibility with PKCS #7",
      "section_title": true,
      "ja": "5.2.1.  PKCS＃7との互換性"
    },
    {
      "indent": 3,
      "text": "This section contains a word of warning to implementers that wish to support both the CMS and PKCS #7 [PKCS#7] SignedData content types.",
      "ja": "このセクションでは、CMSとPKCS＃7 [PKCS＃7]のSignedDataコンテンツタイプの両方をサポートしたい実装への警告の言葉が含まれています。"
    },
    {
      "indent": 3,
      "text": "Both the CMS and PKCS #7 identify the type of the encapsulated content with an object identifier, but the ASN.1 type of the content itself is variable in PKCS #7 SignedData content type.",
      "ja": "両方のCMSとPKCS＃7は、オブジェクト識別子を有するカプセル化されたコンテンツの種類を識別するが、コンテンツ自体のASN.1タイプは、PKCS＃7のSignedDataコンテンツタイプで可変です。"
    },
    {
      "indent": 3,
      "text": "PKCS #7 defines content as:",
      "ja": "PKCS＃7は、コンテンツを定義します。"
    },
    {
      "indent": 6,
      "text": "content [0] EXPLICIT ANY DEFINED BY contentType OPTIONAL",
      "ja": "コンテンツ[0] EXPLICIT任意のcontentTypeによって定義されます"
    },
    {
      "indent": 3,
      "text": "The CMS defines eContent as:",
      "ja": "CMSは、e-コンテンツをとして定義しています。"
    },
    {
      "indent": 6,
      "text": "eContent [0] EXPLICIT OCTET STRING OPTIONAL",
      "ja": "e-コンテンツ[0] EXPLICIT OCTET STRINGをOPTIONAL"
    },
    {
      "indent": 3,
      "text": "The CMS definition is much easier to use in most applications, and it is compatible with both S/MIME v2 and S/MIME v3. S/MIME signed messages using the CMS and PKCS #7 are compatible because identical signed message formats are specified in RFC 2311 for S/MIME v2 [OLDMSG] and RFC 3851 for S/MIME v3.1 [MSG]. S/MIME v2 encapsulates the MIME content in a Data type (that is, an OCTET STRING) carried in the SignedData contentInfo content ANY field, and S/MIME v3 carries the MIME content in the SignedData encapContentInfo eContent OCTET STRING. Therefore, in both S/MIME v2 and S/MIME v3, the MIME content is placed in an OCTET STRING and the message digest is computed over the identical portions of the content. That is, the message digest is computed over the octets comprising the value of the OCTET STRING, neither the tag nor length octets are included.",
      "ja": "CMSの定義は、ほとんどのアプリケーションで使用する方がはるかに簡単です、それはS / MIME v2およびS / MIME v3の両方と互換性があります。 S / MIMEは、CMSとPKCS＃7を使用してメッセージに署名し、同一の署名されたメッセージフォーマットはS / MIME v3.1のためのS / MIME V2 [OLDMSG]とRFC 3851は、RFC 2311で指定されているため[MSG]互換性があります。 S / MIME v2はSignedDataのcontentInfoコンテンツ内の任意のフィールドを行う（すなわち、オクテット列である）データ・タイプMIMEコンテンツをカプセル化し、S / MIME v3はSignedDataのencapContentInfo e-コンテンツOCTET文字列にMIMEコンテンツを運びます。したがって、両方のS / MIME v2およびS / MIME v3では、MIMEコンテンツはOCTET STRINGの中に配置され、メッセージダイジェストは、コンテンツの同じ部分にわたって計算されます。すなわち、メッセージダイジェストは、オクテット文字列の値を含むオクテットにわたって計算されていないが、どちらもタグも長さオクテットが含まれます。"
    },
    {
      "indent": 3,
      "text": "There are incompatibilities between the CMS and PKCS #7 SignedData types when the encapsulated content is not formatted using the Data type. For example, when an RFC 2634 [ESS] signed receipt is encapsulated in the CMS SignedData type, then the Receipt SEQUENCE is encoded in the SignedData encapContentInfo eContent OCTET STRING and the message digest is computed using the entire Receipt SEQUENCE encoding (including tag, length and value octets). However, if an RFC 2634 signed receipt is encapsulated in the PKCS #7 SignedData type, then the Receipt SEQUENCE is DER encoded [X.509-88] in the SignedData contentInfo content ANY field (a SEQUENCE, not an OCTET STRING). Therefore, the message digest is computed using only the value octets of the Receipt SEQUENCE encoding.",
      "ja": "カプセル化されたコンテンツは、データ型を使用してフォーマットされていない場合、CMSとPKCS＃7のSignedDataタイプの間の非互換性があります。例えば、RFC 2634 [ESS]が領収書を署名した場合（タグ、長さを含む次いで受領配列はSignedDataのencapContentInfo e-コンテンツオクテットSTRINGとダイジェスト全体レシートをコードする配列を使用して計算されたメッセージで符号化され、CMSのSignedDataタイプにカプセル化されそして、値のオクテット）。 RFC 2634は、領収書をPKCS＃7のSignedDataタイプにカプセル化され署名された場合は、次に入庫SEQUENCEはDERは、任意のフィールド（配列ではないオクテット文字列）のSignedData contentInfoコンテンツの[X.509-88】符号化されます。したがって、メッセージダイジェストは、レシートをコードする配列の値のみオクテットを使用して計算されます。"
    },
    {
      "indent": 3,
      "text": "The following strategy can be used to achieve backward compatibility with PKCS #7 when processing SignedData content types. If the implementation is unable to ASN.1 decode the SignedData type using the CMS SignedData encapContentInfo eContent OCTET STRING syntax, then the implementation MAY attempt to decode the SignedData type using the PKCS #7 SignedData contentInfo content ANY syntax and compute the message digest accordingly.",
      "ja": "以下の戦略は、のSignedDataコンテンツタイプを処理するときにPKCS＃7との下位互換性を実現するために使用することができます。実装はCMSのSignedData encapContentInfo e-コンテンツオクテット文字列構文を使用してのSignedDataタイプはASN.1デコードにできない場合、実装は、PKCS＃7のSignedData contentInfoコンテンツANY構文を使用してのSignedDataタイプの復号を試みると、メッセージがそれに応じてダイジェストを計算することができます。"
    },
    {
      "indent": 3,
      "text": "The following strategy can be used to achieve backward compatibility with PKCS #7 when creating a SignedData content type in which the encapsulated content is not formatted using the Data type. Implementations MAY examine the value of the eContentType, and then adjust the expected DER encoding of eContent based on the object identifier value. For example, to support Microsoft Authenticode [MSAC], the following information MAY be included:",
      "ja": "以下の戦略は、カプセル化されたコンテンツは、データタイプを使用してフォーマットされていないのSignedDataコンテンツタイプを作成するときにPKCS＃7との下位互換性を実現するために使用することができます。実装は、のeContentTypeの値を調べ、その後、オブジェクト識別子の値に基づいてe-コンテンツの期待DER符号化を調整することができます。たとえば、Microsoft Authenticodeの[MSAC]をサポートするために、次の情報が含まれるかもしれ。"
    },
    {
      "indent": 6,
      "text": "eContentType Object Identifier is set to { 1 3 6 1 4 1 311 2 1 4 }",
      "ja": "eContentTypeオブジェクト識別子は、{1 3 6 1 4 1 311 2 1 4}に設定されています"
    },
    {
      "indent": 6,
      "text": "eContent contains DER encoded Authenticode signing information",
      "ja": "e-コンテンツは、DERは、Authenticodeの情報に署名するエンコード含まれてい"
    },
    {
      "indent": 0,
      "text": "5.3. SignerInfo Type",
      "section_title": true,
      "ja": "5.3.  SignerInfoタイプ"
    },
    {
      "indent": 3,
      "text": "Per-signer information is represented in the type SignerInfo:",
      "ja": "ごとの署名者の情報は、タイプのSignerInfoで表されます。"
    },
    {
      "indent": 6,
      "text": "SignerInfo ::= SEQUENCE {\n  version CMSVersion,\n  sid SignerIdentifier,\n  digestAlgorithm DigestAlgorithmIdentifier,\n  signedAttrs [0] IMPLICIT SignedAttributes OPTIONAL,\n  signatureAlgorithm SignatureAlgorithmIdentifier,\n  signature SignatureValue,\n  unsignedAttrs [1] IMPLICIT UnsignedAttributes OPTIONAL }",
      "raw": true
    },
    {
      "indent": 6,
      "text": "SignerIdentifier ::= CHOICE {\n  issuerAndSerialNumber IssuerAndSerialNumber,\n  subjectKeyIdentifier [0] SubjectKeyIdentifier }",
      "raw": true
    },
    {
      "indent": 6,
      "text": "SignedAttributes ::= SET SIZE (1..MAX) OF Attribute",
      "raw": true
    },
    {
      "indent": 6,
      "text": "UnsignedAttributes ::= SET SIZE (1..MAX) OF Attribute",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Attribute ::= SEQUENCE {\n  attrType OBJECT IDENTIFIER,\n  attrValues SET OF AttributeValue }",
      "raw": true
    },
    {
      "indent": 6,
      "text": "AttributeValue ::= ANY",
      "raw": true
    },
    {
      "indent": 6,
      "text": "SignatureValue ::= OCTET STRING",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The fields of type SignerInfo have the following meanings:",
      "ja": "タイプのSignerInfoのフィールドは以下の意味があります。"
    },
    {
      "indent": 6,
      "text": "version is the syntax version number. If the SignerIdentifier is the CHOICE issuerAndSerialNumber, then the version MUST be 1. If the SignerIdentifier is subjectKeyIdentifier, then the version MUST be 3.",
      "ja": "バージョンは構文バージョン番号です。 SignerIdentifierがCHOICE issuerAndSerialNumberの場合、バージョンはSignerIdentifierがsubjectKeyIdentifierである場合、バージョンは3でなければならない1でなければなりません。"
    },
    {
      "indent": 6,
      "text": "sid specifies the signer's certificate (and thereby the signer's public key). The signer's public key is needed by the recipient to verify the signature. SignerIdentifier provides two alternatives for specifying the signer's public key. The issuerAndSerialNumber alternative identifies the signer's certificate by the issuer's distinguished name and the certificate serial number; the subjectKeyIdentifier identifies the signer's certificate by a key identifier. When an X.509 certificate is reference, the key identifier matches the X.509 subjectKeyIdentifier extension value. When other certificate formats are referenced, the documents that specify the certificate format and their use with the CMS must include details on matching the key identifier to the appropriate certificate field. Implementations MUST support the reception of the issuerAndSerialNumber and subjectKeyIdentifier forms of SignerIdentifier. When generating a SignerIdentifier, implementations MAY support one of the forms (either issuerAndSerialNumber or subjectKeyIdentifier) and always use it, or implementations MAY arbitrarily mix the two forms. However, subjectKeyIdentifier MUST be used to refer to a public key contained in a non-X.509 certificate.",
      "ja": "SIDは、署名者の証明書（およびそれによって、署名者の公開鍵）を指定します。署名者の公開鍵は、署名を検証するために受信者によって必要とされます。 SignerIdentifierは、署名者の公開鍵を指定するための2つの選択肢を提供します。 issuerAndSerialNumberの代替は、発行者の識別名と証明書のシリアル番号で署名者の証明書を識別します。 subjectKeyIdentifierは、キー識別子で署名者の証明書を識別します。 X.509証明書が基準である場合、キー識別子がX.509 subjectKeyIdentifier拡張値と一致します。他の証明書の形式が参照されている場合は、証明書のフォーマットとCMSとの使用を指定する文書は、適切な証明書のフィールドにキー識別子をマッチングに関する詳細を含める必要があります。実装はSignerIdentifierのissuerAndSerialNumberとsubjectKeyIdentifierフォームの受信をサポートしなければなりません。 SignerIdentifierを生成する場合、実装はフォーム（issuerAndSerialNumberまたはsubjectKeyIdentifierのいずれか）のいずれかをサポートし、常にそれを使用するか、または実装は、任意の2つの形式が混在場合があります。しかし、subjectKeyIdentifierは非X.509証明書に含まれる公開鍵を参照するために使用しなければなりません。"
    },
    {
      "indent": 6,
      "text": "digestAlgorithm identifies the message digest algorithm, and any associated parameters, used by the signer. The message digest is computed on either the content being signed or the content together with the signed attributes using the process described in section 5.4. The message digest algorithm SHOULD be among those listed in the digestAlgorithms field of the associated SignerData. Implementations MAY fail to validate signatures that use a digest algorithm that is not included in the SignedData digestAlgorithms set.",
      "ja": "digestAlgorithmは、署名者によって使用されるメッセージダイジェストアルゴリズム、および任意の関連するパラメータを識別する。メッセージダイジェストは、署名されるコンテンツまたはセクション5.4に記載した方法を使用して署名された属性と一緒にコンテンツのいずれかで計算されます。メッセージダイジェストアルゴリズムは、関連SignerDataのdigestAlgorithmsフィールドに列挙されたものの一つであるべきです。実装はSignedDataのdigestAlgorithmsセットに含まれていないダイジェストアルゴリズムを使用して署名を検証するために失敗することがあります。"
    },
    {
      "indent": 6,
      "text": "signedAttrs is a collection of attributes that are signed. The field is optional, but it MUST be present if the content type of the EncapsulatedContentInfo value being signed is not id-data. SignedAttributes MUST be DER encoded, even if the rest of the structure is BER encoded. Useful attribute types, such as signing time, are defined in Section 11. If the field is present, it MUST contain, at a minimum, the following two attributes:",
      "ja": "signedAttrsが署名された属性のコレクションです。フィールドはオプションであるが、署名されるEncapsulatedContentInfo値のコンテンツタイプは、IDデータでない場合、それが存在しなければなりません。 signedAttributesのは、構造体の残りの部分は、BERがエンコードされている場合でも、DERエンコードする必要があります。フィールドが存在する場合、このような時間に署名として有用な属性タイプは、セクション11で定義されている、それは、最低でも、次の2つの属性を含まなければなりません："
    },
    {
      "indent": 9,
      "text": "A content-type attribute having as its value the content type of the EncapsulatedContentInfo value being signed. Section 11.1 defines the content-type attribute. However, the content-type attribute MUST NOT be used as part of a countersignature unsigned attribute as defined in section 11.4.",
      "ja": "その値としてEncapsulatedContentInfo値のコンテンツタイプを有するコンテンツ・タイプ属性は、署名されます。 11.1は、コンテンツ・タイプの属性を定義します。セクション11.4で定義されているようしかし、コンテンツ・タイプ属性は、副署未署名の属性の一部として使用してはなりません。"
    },
    {
      "indent": 9,
      "text": "A message-digest attribute, having as its value the message digest of the content. Section 11.2 defines the message-digest attribute.",
      "ja": "メッセージダイジェスト価値コンテンツのメッセージダイジェストとして有する、属性。 11.2節は、メッセージダイジェスト属性を定義します。"
    },
    {
      "indent": 6,
      "text": "signatureAlgorithm identifies the signature algorithm, and any associated parameters, used by the signer to generate the digital signature.",
      "ja": "signatureAlgorithmは署名アルゴリズムを識別し、署名者によって使用される任意の関連するパラメータは、デジタル署名を生成します。"
    },
    {
      "indent": 6,
      "text": "signature is the result of digital signature generation, using the message digest and the signer's private key. The details of the signature depend on the signature algorithm employed.",
      "ja": "署名は、メッセージダイジェストと署名者の秘密鍵を使用して、デジタル署名生成の結果です。署名の詳細については、使用署名アルゴリズムに依存します。"
    },
    {
      "indent": 6,
      "text": "unsignedAttrs is a collection of attributes that are not signed. The field is optional. Useful attribute types, such as countersignatures, are defined in Section 11.",
      "ja": "unsignedAttrsが署名されていない属性のコレクションです。フィールドはオプションです。このようcountersignaturesとして有用な属性タイプは、セクション11で定義されています。"
    },
    {
      "indent": 3,
      "text": "The fields of type SignedAttribute and UnsignedAttribute have the following meanings:",
      "ja": "タイプSignedAttributeとUnsignedAttributeのフィールドは以下の意味があります。"
    },
    {
      "indent": 6,
      "text": "attrType indicates the type of attribute. It is an object identifier.",
      "ja": "ATTRTYPEは、属性の種類を示します。これは、オブジェクト識別子です。"
    },
    {
      "indent": 6,
      "text": "attrValues is a set of values that comprise the attribute. The type of each value in the set can be determined uniquely by attrType. The attrType can impose restrictions on the number of items in the set.",
      "ja": "attrValuesは、属性を構成する値のセットです。セット内の各値の種類はATTRTYPEによって一意に決定することができます。 ATTRTYPEは、セット内のアイテムの数に制限を課すことができます。"
    },
    {
      "indent": 0,
      "text": "5.4. Message Digest Calculation Process",
      "section_title": true,
      "ja": "5.4. メッセージダイジェストの計算処理"
    },
    {
      "indent": 3,
      "text": "The message digest calculation process computes a message digest on either the content being signed or the content together with the signed attributes. In either case, the initial input to the message digest calculation process is the \"value\" of the encapsulated content being signed. Specifically, the initial input is the encapContentInfo eContent OCTET STRING to which the signing process is applied. Only the octets comprising the value of the eContent OCTET STRING are input to the message digest algorithm, not the tag or the length octets.",
      "ja": "メッセージダイジェスト計算プロセスは、メッセージが署名された属性と一緒に署名されるコンテンツまたはコンテンツのいずれかでダイジェストを計算します。いずれの場合も、メッセージに初期入力演算処理をダイジェストは、署名されるカプセル化されたコンテンツの「値」です。具体的には、最初の入力は、署名プロセスが適用されるencapContentInfo e-コンテンツオクテット文字列です。 e-コンテンツオクテット文字列の値を含む唯一のオクテットは、メッセージに入力されたアルゴリズムではなく、タグまたは長さオクテットダイジェスト。"
    },
    {
      "indent": 3,
      "text": "The result of the message digest calculation process depends on whether the signedAttrs field is present. When the field is absent, the result is just the message digest of the content as described above. When the field is present, however, the result is the message digest of the complete DER encoding of the SignedAttrs value contained in the signedAttrs field. Since the SignedAttrs value, when present, must contain the content-type and the message-digest attributes, those values are indirectly included in the result. The content-type attribute MUST NOT be included in a countersignature unsigned attribute as defined in section 11.4. A separate encoding of the signedAttrs field is performed for message digest calculation. The IMPLICIT [0] tag in the signedAttrs is not used for the DER encoding, rather an EXPLICIT SET OF tag is used. That is, the DER encoding of the EXPLICIT SET OF tag, rather than of the IMPLICIT [0] tag, MUST be included in the message digest calculation along with the length and content octets of the SignedAttributes value.",
      "ja": "メッセージダイジェスト計算処理の結果は、signedAttrsフィールドが存在するかどうかに依存します。フィールドが存在しない場合、上述のように、結果は、コンテンツのほんのメッセージダイジェストです。フィールドが存在する場合、しかし、結果はsignedAttrsフィールドに含まSignedAttrs値の完全なDERエンコーディングのメッセージダイジェストです。 SignedAttrs値ので、存在する場合、コンテンツ・タイプとメッセージダイジェスト属性が含まれている必要があり、これらの値は、間接的に結果に含まれています。セクション11.4で定義されているコンテンツ・タイプの属性が副署未署名の属性に含んではいけません。 signedAttrsフィールドの別々の符号化はメッセージダイジェスト計算のために行われます。タグを明示的にSETが使用されているむしろsignedAttrsでIMPLICIT [0]タグは、DER符号化に使用されません。つまり、タグを明示的にSETのDER符号化であり、むしろIMPLICIT [0]タグのより、signedAttributesの値の長さと内容オクテットと共に計算ダイジェストメッセージに含まれなければなりません。"
    },
    {
      "indent": 3,
      "text": "When the signedAttrs field is absent, only the octets comprising the value of the SignedData encapContentInfo eContent OCTET STRING (e.g., the contents of a file) are input to the message digest calculation. This has the advantage that the length of the content being signed need not be known in advance of the signature generation process.",
      "ja": "signedAttrsフィールドが存在しない場合、のSignedData encapContentInfo e-コンテンツOCTET STRINGの値を含むのみオクテット（例えば、ファイルの内容）は、メッセージへの入力は、ダイジェスト計算です。これは、コンテンツの長さは、署名生成プロセスの事前に知られている必要はなく、署名されるという利点を有します。"
    },
    {
      "indent": 3,
      "text": "Although the encapContentInfo eContent OCTET STRING tag and length octets are not included in the message digest calculation, they are protected by other means. The length octets are protected by the nature of the message digest algorithm since it is computationally infeasible to find any two distinct message contents of any length that have the same message digest.",
      "ja": "encapContentInfo e-コンテンツOCTET STRINGタグと長さオクテットは、メッセージダイジェスト計算に含まれていないが、それらは他の手段によって保護されています。長さオクテットは、同じメッセージダイジェストを有する任意の長さのいずれか2つの別個のメッセージの内容を検索することが計算上不可能であるので、メッセージダイジェストアルゴリズムの性質によって保護されています。"
    },
    {
      "indent": 0,
      "text": "5.5. Signature Generation Process",
      "section_title": true,
      "ja": "5.5. 署名生成処理"
    },
    {
      "indent": 3,
      "text": "The input to the signature generation process includes the result of the message digest calculation process and the signer's private key. The details of the signature generation depend on the signature algorithm employed. The object identifier, along with any parameters, that specifies the signature algorithm employed by the signer is carried in the signatureAlgorithm field. The signature value generated by the signer MUST be encoded as an OCTET STRING and carried in the signature field.",
      "ja": "署名生成プロセスへの入力はメッセージダイジェスト計算過程と署名者の秘密鍵の結果を含んでいます。署名生成の詳細は、使用署名アルゴリズムに依存します。署名者によって使用される署名アルゴリズムを指定する任意のパラメータと共にオブジェクト識別子は、のsignatureAlgorithmフィールドで搬送されます。署名者によって生成された署名値は、OCTET STRINGとして符号化され、署名フィールドで運ばれなければなりません。"
    },
    {
      "indent": 0,
      "text": "5.6. Signature Verification Process",
      "section_title": true,
      "ja": "5.6. 署名検証プロセス"
    },
    {
      "indent": 3,
      "text": "The input to the signature verification process includes the result of the message digest calculation process and the signer's public key. The recipient MAY obtain the correct public key for the signer by any means, but the preferred method is from a certificate obtained from the SignedData certificates field. The selection and validation of the signer's public key MAY be based on certification path validation (see [PROFILE]) as well as other external context, but is beyond the scope of this document. The details of the signature verification depend on the signature algorithm employed.",
      "ja": "署名検証プロセスへの入力はメッセージダイジェスト計算過程と署名者の公開鍵の結果を含んでいます。受信者は、任意の手段によって、署名者の正しい公開鍵を取得することができるが、好ましい方法はSignedDataの証明書フィールドから取得した証明書です。署名者の公開鍵の選択および検証は、認証パス検証（[PROFILE]を参照）だけでなく、他の外部コンテキストに基づいていますが、このドキュメントの範囲を超えてもよい（MAY）。署名検証の詳細は、使用署名アルゴリズムに依存します。"
    },
    {
      "indent": 3,
      "text": "The recipient MUST NOT rely on any message digest values computed by the originator. If the SignedData signerInfo includes signedAttributes, then the content message digest MUST be calculated as described in section 5.4. For the signature to be valid, the message digest value calculated by the recipient MUST be the same as the value of the messageDigest attribute included in the signedAttributes of the SignedData signerInfo.",
      "ja": "受信者は発信元によって計算された任意のメッセージダイジェスト値当てにしてはいけません。 SignedDataのSignerInfoはsignedAttributesのが含まれている場合セクション5.4で説明したように、その後、コンテンツメッセージダイジェストを計算しなければなりません。有効であるために署名するために、受信者によって計算されたメッセージダイジェスト値のSignedDataのSignerInfoのsignedAttributesの中に含まれるのMessageDigest属性の値と同じでなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the SignedData signerInfo includes signedAttributes, then the content-type attribute value MUST match the SignedData encapContentInfo eContentType value.",
      "ja": "SignedDataのSignerInfoはsignedAttributesのが含まれている場合、コンテンツ・タイプの属性値はSignedDataのencapContentInfoのeContentType値と一致する必要があります。"
    },
    {
      "indent": 0,
      "text": "6. Enveloped-data Content Type",
      "section_title": true,
      "ja": "6.包まデータコンテンツの種類"
    },
    {
      "indent": 3,
      "text": "The enveloped-data content type consists of an encrypted content of any type and encrypted content-encryption keys for one or more recipients. The combination of the encrypted content and one encrypted content-encryption key for a recipient is a \"digital envelope\" for that recipient. Any type of content can be enveloped for an arbitrary number of recipients using any of the supported key management techniques for each recipient.",
      "ja": "包まデータのコンテンツタイプは、任意のタイプと1つまたは複数の受信者に対して暗号化されたコンテンツ暗号化キーの暗号化されたコンテンツで構成されています。受信者のための暗号化されたコンテンツと1暗号化されたコンテンツ暗号化キーの組み合わせは、その受取人のための「デジタル封筒」です。コンテンツの任意の種類は、各受信者のためにサポートされている鍵管理技術のいずれかを使用して、受信者の任意の数のために包むことができます。"
    },
    {
      "indent": 3,
      "text": "The typical application of the enveloped-data content type will represent one or more recipients' digital envelopes on content of the data or signed-data content types.",
      "ja": "エンベロープデータ・コンテンツ・タイプの典型的なアプリケーションは、データまたは署名されたデータのコンテンツタイプのコンテンツに1人以上の受信者のデジタル封筒を表すことになります。"
    },
    {
      "indent": 3,
      "text": "Enveloped-data is constructed by the following steps:",
      "ja": "包まデータは、以下のステップから構成されています。"
    },
    {
      "indent": 6,
      "text": "1. A content-encryption key for a particular content-encryption algorithm is generated at random.",
      "ja": "1.特定のコンテンツの暗号化アルゴリズムのためのコンテンツ暗号化キーはランダムに生成されます。"
    },
    {
      "indent": 6,
      "text": "2. The content-encryption key is encrypted for each recipient. The details of this encryption depend on the key management algorithm used, but four general techniques are supported:",
      "ja": "2.コンテンツ暗号化キーは、受信者ごとに暗号化されています。この暗号化の詳細については、使用するキー管理アルゴリズムに依存するが、4つの一般的な技術がサポートされています。"
    },
    {
      "indent": 9,
      "text": "key transport: the content-encryption key is encrypted in the recipient's public key;",
      "ja": "キートランスポート：コンテンツ暗号化キーは、受信者の公開鍵で暗号化されます。"
    },
    {
      "indent": 9,
      "text": "key agreement: the recipient's public key and the sender's private key are used to generate a pairwise symmetric key, then the content-encryption key is encrypted in the pairwise symmetric key;",
      "ja": "主要な協定：受信者の公開鍵と送信者の秘密鍵は、コンテンツ暗号化キーは、ペアワイズ対称鍵で暗号化されて、ペアワイズ対称鍵を生成するために使用されています。"
    },
    {
      "indent": 9,
      "text": "symmetric key-encryption keys: the content-encryption key is encrypted in a previously distributed symmetric key-encryption key; and",
      "ja": "対称キー暗号化キー：コンテンツ暗号化キーは以前に分配された左右対称鍵暗号鍵で暗号化されます。そして"
    },
    {
      "indent": 9,
      "text": "passwords: the content-encryption key is encrypted in a key-encryption key that is derived from a password or other shared secret value.",
      "ja": "パスワード：コンテンツ暗号化キーは、パスワードやその他の共有秘密値から導出されるキー暗号化キーで暗号化されています。"
    },
    {
      "indent": 6,
      "text": "3. For each recipient, the encrypted content-encryption key and other recipient-specific information are collected into a RecipientInfo value, defined in Section 6.2.",
      "ja": "各受信者3は、暗号化されたコンテンツ暗号化鍵と他の受信者に固有の情報は、セクション6.2で定義されたのRecipientInfo値に集められます。"
    },
    {
      "indent": 6,
      "text": "4. The content is encrypted with the content-encryption key. Content encryption may require that the content be padded to a multiple of some block size; see Section 6.3.",
      "ja": "4.コンテンツは、コンテンツの暗号鍵で暗号化されています。コンテンツの暗号化は、コンテンツがいくつかのブロックサイズの倍数に水増しすることを要求することができます。 6.3節を参照してください。"
    },
    {
      "indent": 6,
      "text": "5. The RecipientInfo values for all the recipients are collected together with the encrypted content to form an EnvelopedData value as defined in Section 6.1.",
      "ja": "5.すべての受信者のためのRecipientInfo値はセクション6.1で定義されるようにEnvelopedDataの値を形成するために一緒に暗号化されたコンテンツを用いて収集されます。"
    },
    {
      "indent": 6,
      "text": "A recipient opens the digital envelope by decrypting one of the encrypted content-encryption keys and then decrypting the encrypted content with the recovered content-encryption key.",
      "ja": "受信者は、暗号化されたコンテンツ暗号化キーのいずれかを解読し、その後回復し、コンテンツ暗号化キーで暗号化されたコンテンツを復号化することにより、デジタル封筒を開きます。"
    },
    {
      "indent": 6,
      "text": "This section is divided into four parts. The first part describes the top-level type EnvelopedData, the second part describes the per-recipient information type RecipientInfo, and the third and fourth parts describe the content-encryption and key-encryption processes.",
      "ja": "このセクションでは、4つの部分に分かれています。最初の部分はトップレベルタイプEnvelopedDataのを記述し、第二の部分は、受信者ごとの情報タイプのRecipientInfoを説明し、第3および第4の部分は、コンテンツの暗号化と鍵暗号化プロセスを記載しています。"
    },
    {
      "indent": 0,
      "text": "6.1. EnvelopedData Type",
      "section_title": true,
      "ja": "6.1.  EnvelopedDataのタイプ"
    },
    {
      "indent": 3,
      "text": "The following object identifier identifies the enveloped-data content type:",
      "ja": "以下のオブジェクト識別子は、エンベロープデータ・コンテンツ・タイプを識別する。"
    },
    {
      "indent": 6,
      "text": "id-envelopedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n    us(840) rsadsi(113549) pkcs(1) pkcs7(7) 3 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The enveloped-data content type shall have ASN.1 type EnvelopedData:",
      "ja": "包まデータのコンテンツタイプは、ASN.1タイプEnvelopedDataのを持っていなければなりません。"
    },
    {
      "indent": 4,
      "text": "EnvelopedData ::= SEQUENCE {\n version CMSVersion,\n originatorInfo [0] IMPLICIT OriginatorInfo OPTIONAL,\n recipientInfos RecipientInfos,\n encryptedContentInfo EncryptedContentInfo,\n unprotectedAttrs [1] IMPLICIT UnprotectedAttributes OPTIONAL }",
      "raw": true
    },
    {
      "indent": 4,
      "text": "OriginatorInfo ::= SEQUENCE {\n certs [0] IMPLICIT CertificateSet OPTIONAL,\n crls [1] IMPLICIT RevocationInfoChoices OPTIONAL }",
      "raw": true
    },
    {
      "indent": 4,
      "text": "RecipientInfos ::= SET SIZE (1..MAX) OF RecipientInfo",
      "raw": true
    },
    {
      "indent": 4,
      "text": "EncryptedContentInfo ::= SEQUENCE {\n contentType ContentType,\n contentEncryptionAlgorithm ContentEncryptionAlgorithmIdentifier,\n encryptedContent [0] IMPLICIT EncryptedContent OPTIONAL }",
      "raw": true
    },
    {
      "indent": 4,
      "text": "EncryptedContent ::= OCTET STRING",
      "raw": true
    },
    {
      "indent": 4,
      "text": "UnprotectedAttributes ::= SET SIZE (1..MAX) OF Attribute",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The fields of type EnvelopedData have the following meanings:",
      "ja": "タイプEnvelopedDataののフィールドは以下の意味があります。"
    },
    {
      "indent": 6,
      "text": "version is the syntax version number. The appropriate value depends on originatorInfo, RecipientInfo, and unprotectedAttrs. The version MUST be assigned as follows:",
      "ja": "バージョンは構文バージョン番号です。適切な値はoriginatorInfo、のRecipientInfo、およびunprotectedAttrsに依存します。次のようにバージョンが割り当てられなければなりません："
    },
    {
      "indent": 9,
      "text": "IF (originatorInfo is present) AND ((any certificates with a type of other are present) OR (any crls with a type of other are present)) THEN version is 4 ELSE IF ((originatorInfo is present) AND (any version 2 attribute certificates are present)) OR (any RecipientInfo structures include pwri) OR (any RecipientInfo structures include ori) THEN version is 3 ELSE IF (originatorInfo is absent) OR (unprotectedAttrs is absent) OR (all RecipientInfo structures are version 0) THEN version is 0 ELSE version is 2",
      "ja": "IF（originatorInfoが存在している）AND（（他のタイプのいずれかの証明書が存在する）OR（他のタイプの任意のCRLが存在する））THENバージョンがELSE 4 IF（（ori​​ginatorInfoが存在している）AND（すべてのバージョン2属性であります[証明書）が存在する）OR（任意のRecipientInfo構造は土木研究所を含む）OR（任意のRecipientInfo構造はORIを含む）THENバージョンoriginatorInfoが存在しないELSE 3（IFである）OR（unprotectedAttrs不在である）OR（すべてのRecipientInfo構造は、バージョン0である）バージョンであり0 ELSEバージョン2であります"
    },
    {
      "indent": 6,
      "text": "originatorInfo optionally provides information about the originator. It is present only if required by the key management algorithm. It may contain certificates and CRLs:",
      "ja": "originatorInfo任意に発信元の情報を提供します。鍵管理アルゴリズムによって必要とされる場合にのみ存在しています。これは、証明書とCRLが含まれる場合があります。"
    },
    {
      "indent": 9,
      "text": "certs is a collection of certificates. certs may contain originator certificates associated with several different key management algorithms. certs may also contain attribute certificates associated with the originator. The certificates contained in certs are intended to be sufficient for all recipients to build certification paths from a recognized",
      "ja": "本命の証明書のコレクションです。本命は、いくつかの異なる鍵管理アルゴリズムに関連した発信元の証明書が含まれていてもよいです。本命はまた、発信元に関連付けられている属性証明書が含まれていてもよいです。本命に含まれる証明書は、すべての受信者が認識から証明書パスを構築するために十分であることを意図しています"
    },
    {
      "indent": 9,
      "text": "\"root\" or \"top-level certification authority.\" However, certs may contain more certificates than necessary, and there may be certificates sufficient to make certification paths from two or more independent top-level certification authorities. Alternatively, certs may contain fewer certificates than necessary, if it is expected that recipients have an alternate means of obtaining necessary certificates (e.g., from a previous set of certificates).",
      "ja": "「ルート」または「トップレベルの認証機関。」しかし、本命は必要以上の証明書が含まれていてもよいし、2つ以上の独立したトップレベルの証明機関から証明書パスを作成するのに十分な証明書があるかもしれません。受信者が（証明書の前のセットから、例えば、）必要な証明書を得るための別の手段を有することが予想される場合あるいは、本命は、必要に応じてより少ない証明書を含んでいてもよいです。"
    },
    {
      "indent": 9,
      "text": "crls is a collection of CRLs. It is intended that the set contain information sufficient to determine whether or not the certificates in the certs field are valid, but such correspondence is not necessary. There MAY be more CRLs than necessary, and there MAY also be fewer CRLs than necessary.",
      "ja": "CRLは、CRLののコレクションです。セットが本命フィールド内の証明書が有効であるが、そのような対応が必要であるか否かを決定するのに十分な情報が含まれていることが意図されています。必要以上のCRLが存在してもよく、また、必要以上に少ないのCRLがあるかもしれません。"
    },
    {
      "indent": 6,
      "text": "recipientInfos is a collection of per-recipient information. There MUST be at least one element in the collection.",
      "ja": "recipientInfosは、受信者ごとの情報の収集です。コレクション内の少なくとも1つの要素がなければなりません。"
    },
    {
      "indent": 6,
      "text": "encryptedContentInfo is the encrypted content information.",
      "ja": "encryptedContentInfoは暗号化されたコンテンツの情報です。"
    },
    {
      "indent": 6,
      "text": "unprotectedAttrs is a collection of attributes that are not encrypted. The field is optional. Useful attribute types are defined in Section 11.",
      "ja": "unprotectedAttrsは暗号化されていない属性のコレクションです。フィールドはオプションです。役に立つ属性タイプはセクション11で定義されています。"
    },
    {
      "indent": 3,
      "text": "The fields of type EncryptedContentInfo have the following meanings:",
      "ja": "タイプEncryptedContentInfoのフィールドは以下の意味があります。"
    },
    {
      "indent": 6,
      "text": "contentType indicates the type of content.",
      "ja": "contentTypeのは、コンテンツの種類を示します。"
    },
    {
      "indent": 6,
      "text": "contentEncryptionAlgorithm identifies the content-encryption algorithm, and any associated parameters, used to encrypt the content. The content-encryption process is described in Section 6.3. The same content-encryption algorithm and content-encryption key are used for all recipients.",
      "ja": "contentEncryptionAlgorithmは、コンテンツ暗号化アルゴリズムを特定し、コンテンツを暗号化するために使用される任意の関連パラメータ、。コンテンツ暗号化処理は、6.3節に記載されています。同じコンテンツの暗号化アルゴリズムおよびコンテンツ暗号化キーは、すべての受信者に使用されます。"
    },
    {
      "indent": 6,
      "text": "encryptedContent is the result of encrypting the content. The field is optional, and if the field is not present, its intended value must be supplied by other means.",
      "ja": "暗号化コンテンツは、コンテンツを暗号化した結果です。フィールドはオプションで、フィールドが存在しない場合、その意図された値は、他の手段によって供給されなければなりません。"
    },
    {
      "indent": 3,
      "text": "The recipientInfos field comes before the encryptedContentInfo field so that an EnvelopedData value may be processed in a single pass.",
      "ja": "EnvelopedDataの値は、単一のパスで処理することができるようにのrecipientInfosフィールドはencryptedContentInfoフィールドの前に来ます。"
    },
    {
      "indent": 0,
      "text": "6.2. RecipientInfo Type",
      "section_title": true,
      "ja": "6.2.  RecipientInfoタイプ"
    },
    {
      "indent": 3,
      "text": "Per-recipient information is represented in the type RecipientInfo. RecipientInfo has a different format for each of the supported key management techniques. Any of the key management techniques can be used for each recipient of the same encrypted content. In all cases, the encrypted content-encryption key is transferred to one or more recipients.",
      "ja": "受信者ごとの情報は、タイプのRecipientInfoで表されます。 RecipientInfoは、サポートされている鍵管理技術のそれぞれに対して異なるフォーマットを持っています。鍵管理手法のいずれかが同じ暗号化されたコンテンツの受信者ごとに使用することができます。すべての場合において、暗号化されたコンテンツ暗号化キーは、1つまたは複数の受信者に転送されます。"
    },
    {
      "indent": 3,
      "text": "Since all implementations will not support every possible key management algorithm, all implementations MUST gracefully handle unimplemented algorithms when they are encountered. For example, if a recipient receives a content-encryption key encrypted in their RSA public key using RSA-OAEP and the implementation only supports RSA PKCS #1 v1.5, then a graceful failure must be implemented.",
      "ja": "すべての実装が可能なすべての鍵管理アルゴリズムをサポートしていますので、それらが発生したとき、すべての実装が優雅に非実装したアルゴリズムを処理する必要があります。受信者がRSA-OAEPを使用して自分のRSA公開鍵で暗号化されたコンテンツ暗号化キーを受け取り、実装が唯一のRSA PKCS＃1 v1.5のをサポートしている場合たとえば、その後、優雅な故障が実装する必要があります。"
    },
    {
      "indent": 3,
      "text": "Implementations MUST support key transport, key agreement, and previously distributed symmetric key-encryption keys, as represented by ktri, kari, and kekri, respectively. Implementations MAY support the password-based key management as represented by pwri. Implementations MAY support any other key management technique as represented by ori. Since each recipient can employ a different key management technique and future specifications could define additional key management techniques, all implementations MUST gracefully handle unimplemented alternatives within the RecipientInfo CHOICE, all implementations MUST gracefully handle unimplemented versions of otherwise supported alternatives within the RecipientInfo CHOICE, and all implementations MUST gracefully handle unimplemented or unknown ori alternatives.",
      "ja": "それぞれktri、がkari、及びkekri、で表されるように実装では、主要な輸送、鍵合意、および以前に分散対称鍵暗号化キーをサポートしなければなりません。土木研究所で表されるような実装は、パスワードベースのキー管理をサポートするかもしれません。 ORIによって表されるような実装は、他のキー管理技術をサポートするかもしれません。各受信者が異なる鍵管理技術及び将来の仕様が追加のキー管理技法を定義することができ、すべての実装が正常のRecipientInfo CHOICE以内に実装されていない代替案を処理する必要があります使用することができるので、すべての実装が正常のRecipientInfo CHOICE内さもなければサポートされている代替の実装されていないバージョンを処理し、すべてしなければなりません実装が優雅に実装されていないか、未知のori代替案を処理しなければなりません。"
    },
    {
      "indent": 12,
      "text": "RecipientInfo ::= CHOICE {\n  ktri KeyTransRecipientInfo,\n  kari [1] KeyAgreeRecipientInfo,\n  kekri [2] KEKRecipientInfo,\n  pwri [3] PasswordRecipientinfo,\n  ori [4] OtherRecipientInfo }",
      "raw": true
    },
    {
      "indent": 12,
      "text": "EncryptedKey ::= OCTET STRING",
      "raw": true
    },
    {
      "indent": 0,
      "text": "6.2.1. KeyTransRecipientInfo Type",
      "section_title": true,
      "ja": "6.2.1.  KeyTransRecipientInfoタイプ"
    },
    {
      "indent": 3,
      "text": "Per-recipient information using key transport is represented in the type KeyTransRecipientInfo. Each instance of KeyTransRecipientInfo transfers the content-encryption key to one recipient.",
      "ja": "キートランスポートを使用して、受信者ごとの情報は、タイプKeyTransRecipientInfoで表現されます。 KeyTransRecipientInfoの各インスタンスは、1つの受信者へのコンテンツ暗号化キーを転送します。"
    },
    {
      "indent": 6,
      "text": "KeyTransRecipientInfo ::= SEQUENCE {\n  version CMSVersion,  -- always set to 0 or 2\n  rid RecipientIdentifier,\n  keyEncryptionAlgorithm KeyEncryptionAlgorithmIdentifier,\n  encryptedKey EncryptedKey }",
      "raw": true
    },
    {
      "indent": 6,
      "text": "RecipientIdentifier ::= CHOICE {\n  issuerAndSerialNumber IssuerAndSerialNumber,\n  subjectKeyIdentifier [0] SubjectKeyIdentifier }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The fields of type KeyTransRecipientInfo have the following meanings:",
      "ja": "タイプKeyTransRecipientInfoのフィールドは以下の意味があります。"
    },
    {
      "indent": 6,
      "text": "version is the syntax version number. If the RecipientIdentifier is the CHOICE issuerAndSerialNumber, then the version MUST be 0. If the RecipientIdentifier is subjectKeyIdentifier, then the version MUST be 2.",
      "ja": "バージョンは構文バージョン番号です。 RecipientIdentifierがCHOICE issuerAndSerialNumberある場合、バージョンは0でなければなりませんRecipientIdentifierがsubjectKeyIdentifierである場合、バージョンが2でなければなりません。"
    },
    {
      "indent": 6,
      "text": "rid specifies the recipient's certificate or key that was used by the sender to protect the content-encryption key. The content-encryption key is encrypted with the recipient's public key. The RecipientIdentifier provides two alternatives for specifying the recipient's certificate, and thereby the recipient's public key. The recipient's certificate must contain a key transport public key. Therefore, a recipient X.509 version 3 certificate that contains a key usage extension MUST assert the keyEncipherment bit. The issuerAndSerialNumber alternative identifies the recipient's certificate by the issuer's distinguished name and the certificate serial number; the subjectKeyIdentifier identifies the recipient's certificate by a key identifier. When an X.509 certificate is referenced, the key identifier matches the X.509 subjectKeyIdentifier extension value. When other certificate formats are referenced, the documents that specify the certificate format and their use with the CMS must include details on matching the key identifier to the appropriate certificate field. For recipient processing, implementations MUST support both of these alternatives for specifying the recipient's certificate. For sender processing, implementations MUST support at least one of these alternatives.",
      "ja": "RIDは、コンテンツ暗号化キーを保護するために、送信者によって使用された受信者の証明書またはキーを指定します。コンテンツ暗号化キーは、受信者の公開鍵で暗号化されています。 RecipientIdentifierは、受信者の証明書、およびそれによって、受信者の公開鍵を指定するための2つの選択肢を提供します。受信者の証明書は、キー輸送公開鍵が含まれている必要があります。したがって、鍵使用拡張が含まれている受信者のX.509バージョン3証明書は、keyEnciphermentビットをアサートしなければなりません。 issuerAndSerialNumberの代替は、発行者の識別名と証明書のシリアル番号によって、受信者の証明書を識別します。 subjectKeyIdentifierはキー識別子によって、受信者の証明書を識別します。 X.509証明書が参照されると、キー識別子がX.509 subjectKeyIdentifier拡張値と一致します。他の証明書の形式が参照されている場合は、証明書のフォーマットとCMSとの使用を指定する文書は、適切な証明書のフィールドにキー識別子をマッチングに関する詳細を含める必要があります。受信者の処理のために、実装は、受信者の証明書を指定するためのこれらの選択肢の両方をサポートしなければなりません。送信者の処理のために、実装はこれらの選択肢のうちの少なくとも一つをサポートしなければなりません。"
    },
    {
      "indent": 6,
      "text": "keyEncryptionAlgorithm identifies the key-encryption algorithm, and any associated parameters, used to encrypt the content-encryption key for the recipient. The key-encryption process is described in Section 6.4.",
      "ja": "keyEncryptionAlgorithmは、キー暗号化アルゴリズムを識別し、任意の関連するパラメータは、受信者のためのコンテンツ暗号化キーを暗号化するために使用されます。鍵暗号化プロセスはセクション6.4に記載されています。"
    },
    {
      "indent": 6,
      "text": "encryptedKey is the result of encrypting the content-encryption key for the recipient.",
      "ja": "EncryptedKeyには、受信者のためのコンテンツ暗号化キーを暗号化した結果です。"
    },
    {
      "indent": 0,
      "text": "6.2.2. KeyAgreeRecipientInfo Type",
      "section_title": true,
      "ja": "6.2.2.  KeyAgreeRecipientInfoタイプ"
    },
    {
      "indent": 3,
      "text": "Recipient information using key agreement is represented in the type KeyAgreeRecipientInfo. Each instance of KeyAgreeRecipientInfo will transfer the content-encryption key to one or more recipients that use the same key agreement algorithm and domain parameters for that algorithm.",
      "ja": "鍵合意を使用して受信者情報は、タイプKeyAgreeRecipientInfoで表現されます。 KeyAgreeRecipientInfoの各インスタンスは、そのアルゴリズムのために同じ鍵合意アルゴリズムとドメインのパラメータを使用する1つまたは複数の受信者に、コンテンツ暗号化キーを転送します。"
    },
    {
      "indent": 6,
      "text": "KeyAgreeRecipientInfo ::= SEQUENCE {\n  version CMSVersion,  -- always set to 3\n  originator [0] EXPLICIT OriginatorIdentifierOrKey,\n  ukm [1] EXPLICIT UserKeyingMaterial OPTIONAL,\n  keyEncryptionAlgorithm KeyEncryptionAlgorithmIdentifier,\n  recipientEncryptedKeys RecipientEncryptedKeys }",
      "raw": true
    },
    {
      "indent": 6,
      "text": "OriginatorIdentifierOrKey ::= CHOICE {\n  issuerAndSerialNumber IssuerAndSerialNumber,\n  subjectKeyIdentifier [0] SubjectKeyIdentifier,\n  originatorKey [1] OriginatorPublicKey }",
      "raw": true
    },
    {
      "indent": 6,
      "text": "OriginatorPublicKey ::= SEQUENCE {\n  algorithm AlgorithmIdentifier,\n  publicKey BIT STRING }",
      "raw": true
    },
    {
      "indent": 6,
      "text": "RecipientEncryptedKeys ::= SEQUENCE OF RecipientEncryptedKey",
      "raw": true
    },
    {
      "indent": 6,
      "text": "RecipientEncryptedKey ::= SEQUENCE {\n  rid KeyAgreeRecipientIdentifier,\n  encryptedKey EncryptedKey }",
      "raw": true
    },
    {
      "indent": 6,
      "text": "KeyAgreeRecipientIdentifier ::= CHOICE {\n  issuerAndSerialNumber IssuerAndSerialNumber,\n  rKeyId [0] IMPLICIT RecipientKeyIdentifier }",
      "raw": true
    },
    {
      "indent": 6,
      "text": "RecipientKeyIdentifier ::= SEQUENCE {\n  subjectKeyIdentifier SubjectKeyIdentifier,\n  date GeneralizedTime OPTIONAL,\n  other OtherKeyAttribute OPTIONAL }",
      "raw": true
    },
    {
      "indent": 6,
      "text": "SubjectKeyIdentifier ::= OCTET STRING",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The fields of type KeyAgreeRecipientInfo have the following meanings:",
      "ja": "タイプKeyAgreeRecipientInfoのフィールドは以下の意味があります。"
    },
    {
      "indent": 6,
      "text": "version is the syntax version number. It MUST always be 3.",
      "ja": "バージョンは構文バージョン番号です。それは、常に3でなければなりません。"
    },
    {
      "indent": 6,
      "text": "originator is a CHOICE with three alternatives specifying the sender's key agreement public key. The sender uses the corresponding private key and the recipient's public key to generate a pairwise key. The content-encryption key is encrypted in the pairwise key. The issuerAndSerialNumber alternative identifies the sender's certificate, and thereby the sender's public key, by the issuer's distinguished name and the certificate serial number. The subjectKeyIdentifier alternative identifies the sender's certificate, and thereby the sender's public key, by a key identifier. When an X.509 certificate is referenced, the key identifier matches the X.509 subjectKeyIdentifier extension value. When other certificate formats are referenced, the documents that specify the certificate format and their use with the CMS must include details on matching the key identifier to the appropriate certificate field. The originatorKey alternative includes the algorithm identifier and sender's key agreement public key. This alternative permits originator anonymity since the public key is not certified. Implementations MUST support all three alternatives for specifying the sender's public key.",
      "ja": "発信者は送信者の主要な協定公開鍵を指定する3つの選択肢を持つCHOICEです。送信者は、鍵ペアを生成するために対応する秘密鍵と受信者の公開鍵を使用しています。コンテンツ暗号化キーは、ペアワイズ鍵で暗号化されます。 issuerAndSerialNumberの代替は、発行者の識別名と証明書のシリアル番号で、送信者の証明書、およびそれによって、送信者の公開鍵を識別します。 subjectKeyIdentifier代替はキー識別子により、送信者の証明書、およびそれによって、送信者の公開鍵を識別します。 X.509証明書が参照されると、キー識別子がX.509 subjectKeyIdentifier拡張値と一致します。他の証明書の形式が参照されている場合は、証明書のフォーマットとCMSとの使用を指定する文書は、適切な証明書のフィールドにキー識別子をマッチングに関する詳細を含める必要があります。 originatorKeyの代替は、アルゴリズム識別子と送信者の主要な協定公開鍵を含んでいます。公開鍵が認証されていないので、この選択肢は、発信者の匿名性を可能にします。実装は、送信者の公開鍵を指定するためのすべての3つの選択肢をサポートしなければなりません。"
    },
    {
      "indent": 6,
      "text": "ukm is optional. With some key agreement algorithms, the sender provides a User Keying Material (UKM) to ensure that a different key is generated each time the same two parties generate a pairwise key. Implementations MUST accept a KeyAgreeRecipientInfo SEQUENCE that includes a ukm field. Implementations that do not support key agreement algorithms that make use of UKMs MUST gracefully handle the presence of UKMs.",
      "ja": "UKMはオプションです。いくつかの主要な協定アルゴリズムを使用すると、送信者は、別のキーが同じ2人の当事者が鍵ペアを生成するたびに生成されることを保証するために、ユーザ鍵材料（UKM）を提供します。実装はUKMフィールドを含むKeyAgreeRecipientInfoシーケンスを受け入れなければなりません。 UKMsの使用は優雅UKMsの存在を処理する必要があります作る鍵合意アルゴリズムをサポートしない実装。"
    },
    {
      "indent": 6,
      "text": "keyEncryptionAlgorithm identifies the key-encryption algorithm, and any associated parameters, used to encrypt the content-encryption key with the key-encryption key. The key-encryption process is described in Section 6.4.",
      "ja": "keyEncryptionAlgorithmは、キー暗号化アルゴリズムを識別し、任意の関連するパラメータは、鍵暗号化鍵でコンテンツ暗号化キーを暗号化するために使用されます。鍵暗号化プロセスはセクション6.4に記載されています。"
    },
    {
      "indent": 6,
      "text": "recipientEncryptedKeys includes a recipient identifier and encrypted key for one or more recipients. The KeyAgreeRecipientIdentifier is a CHOICE with two alternatives specifying the recipient's certificate, and thereby the recipient's public key, that was used by the sender to generate a pairwise key-encryption key. The recipient's certificate must contain a key agreement public key. Therefore, a recipient X.509 version 3 certificate that contains a key usage extension MUST assert the keyAgreement bit. The content-encryption key is encrypted in the pairwise key-encryption key. The issuerAndSerialNumber alternative identifies the recipient's certificate by the issuer's distinguished name and the certificate serial number; the RecipientKeyIdentifier is described below. The encryptedKey is the result of encrypting the content-encryption key in the pairwise key-encryption key generated using the key agreement algorithm. Implementations MUST support both alternatives for specifying the recipient's certificate.",
      "ja": "recipientEncryptedKeysは、受信者識別子と1つのまたは複数の受信者用の暗号化キーが含まれています。 KeyAgreeRecipientIdentifierは、ペアワイズ鍵暗号鍵を生成するために、送信者によって使用された2つの受信者の証明書を指定する選択肢、およびそれによって、受信者の公開鍵、とCHOICEです。受信者の証明書は、鍵協定公開鍵が含まれている必要があります。したがって、鍵使用拡張が含まれている受信者のX.509バージョン3証明書がするKeyAgreementビットをアサートしなければなりません。コンテンツ暗号化キーは、鍵ペア暗号化キーで暗号化されています。 issuerAndSerialNumberの代替は、発行者の識別名と証明書のシリアル番号によって、受信者の証明書を識別します。 RecipientKeyIdentifierは以下の通りです。 EncryptedKeyには鍵合意アルゴリズムを使用して生成されたペアワイズキー暗号化キーのコンテンツ暗号化キーを暗号化した結果です。実装は、受信者の証明書を指定するための両方の選択肢をサポートしなければなりません。"
    },
    {
      "indent": 3,
      "text": "The fields of type RecipientKeyIdentifier have the following meanings:",
      "ja": "型RecipientKeyIdentifierのフィールドは以下の意味があります。"
    },
    {
      "indent": 6,
      "text": "subjectKeyIdentifier identifies the recipient's certificate by a key identifier. When an X.509 certificate is referenced, the key identifier matches the X.509 subjectKeyIdentifier extension value. When other certificate formats are referenced, the documents that specify the certificate format and their use with the CMS must include details on matching the key identifier to the appropriate certificate field.",
      "ja": "subjectKeyIdentifierはキー識別子によって、受信者の証明書を識別します。 X.509証明書が参照されると、キー識別子がX.509 subjectKeyIdentifier拡張値と一致します。他の証明書の形式が参照されている場合は、証明書のフォーマットとCMSとの使用を指定する文書は、適切な証明書のフィールドにキー識別子をマッチングに関する詳細を含める必要があります。"
    },
    {
      "indent": 6,
      "text": "date is optional. When present, the date specifies which of the recipient's previously distributed UKMs was used by the sender.",
      "ja": "日付はオプションです。存在する場合、日付は、送信者によって使用された受信者の以前に配布さUKMsのかを指定します。"
    },
    {
      "indent": 6,
      "text": "other is optional. When present, this field contains additional information used by the recipient to locate the public keying material used by the sender.",
      "ja": "他はオプションです。存在する場合、このフィールドは、送信者によって使用された公開鍵素材を見つけるために受信者によって使用される追加情報が含まれています。"
    },
    {
      "indent": 0,
      "text": "6.2.3. KEKRecipientInfo Type",
      "section_title": true,
      "ja": "6.2.3.  KEKRecipientInfoタイプ"
    },
    {
      "indent": 3,
      "text": "Recipient information using previously distributed symmetric keys is represented in the type KEKRecipientInfo. Each instance of KEKRecipientInfo will transfer the content-encryption key to one or more recipients who have the previously distributed key-encryption key.",
      "ja": "以前に分散対称鍵を使用して受信者情報は、タイプKEKRecipientInfoに示されています。 KEKRecipientInfoの各インスタンスは、以前に分配されたキー暗号化キーを持っている1人または複数の受信者に、コンテンツ暗号化キーを転送します。"
    },
    {
      "indent": 6,
      "text": "KEKRecipientInfo ::= SEQUENCE {\n  version CMSVersion,  -- always set to 4\n  kekid KEKIdentifier,\n  keyEncryptionAlgorithm KeyEncryptionAlgorithmIdentifier,\n  encryptedKey EncryptedKey }",
      "raw": true
    },
    {
      "indent": 6,
      "text": "KEKIdentifier ::= SEQUENCE {\n  keyIdentifier OCTET STRING,\n  date GeneralizedTime OPTIONAL,\n  other OtherKeyAttribute OPTIONAL }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The fields of type KEKRecipientInfo have the following meanings:",
      "ja": "タイプKEKRecipientInfoのフィールドは以下の意味があります。"
    },
    {
      "indent": 6,
      "text": "version is the syntax version number. It MUST always be 4.",
      "ja": "バージョンは構文バージョン番号です。それは常に4でなければなりません。"
    },
    {
      "indent": 6,
      "text": "kekid specifies a symmetric key-encryption key that was previously distributed to the sender and one or more recipients.",
      "ja": "kekidは、以前の送信者と1人のまたは複数の受信者に配布された対称鍵暗号化キーを指定します。"
    },
    {
      "indent": 6,
      "text": "keyEncryptionAlgorithm identifies the key-encryption algorithm, and any associated parameters, used to encrypt the content-encryption key with the key-encryption key. The key-encryption process is described in Section 6.4.",
      "ja": "keyEncryptionAlgorithmは、キー暗号化アルゴリズムを識別し、任意の関連するパラメータは、鍵暗号化鍵でコンテンツ暗号化キーを暗号化するために使用されます。鍵暗号化プロセスはセクション6.4に記載されています。"
    },
    {
      "indent": 6,
      "text": "encryptedKey is the result of encrypting the content-encryption key in the key-encryption key.",
      "ja": "EncryptedKeyには、キー暗号化キーのコンテンツ暗号化キーを暗号化した結果です。"
    },
    {
      "indent": 3,
      "text": "The fields of type KEKIdentifier have the following meanings:",
      "ja": "タイプKEKIdentifierのフィールドは以下の意味があります。"
    },
    {
      "indent": 6,
      "text": "keyIdentifier identifies the key-encryption key that was previously distributed to the sender and one or more recipients.",
      "ja": "keyIdentifierは以前に、送信者と1人のまたは複数の受信者に配布されたキー暗号化キーを識別します。"
    },
    {
      "indent": 6,
      "text": "date is optional. When present, the date specifies a single key-encryption key from a set that was previously distributed.",
      "ja": "日付はオプションです。存在する場合、日付が以前に配布されたセットからの単一のキー暗号化キーを指定します。"
    },
    {
      "indent": 6,
      "text": "other is optional. When present, this field contains additional information used by the recipient to determine the key-encryption key used by the sender.",
      "ja": "他はオプションです。存在する場合、このフィールドは、送信者によって使用されるキー暗号化キーを決定するために受信者によって使用される追加的な情報が含まれています。"
    },
    {
      "indent": 0,
      "text": "6.2.4. PasswordRecipientInfo Type",
      "section_title": true,
      "ja": "6.2.4.  PasswordRecipientInfoタイプ"
    },
    {
      "indent": 3,
      "text": "Recipient information using a password or shared secret value is represented in the type PasswordRecipientInfo. Each instance of PasswordRecipientInfo will transfer the content-encryption key to one or more recipients who possess the password or shared secret value.",
      "ja": "パスワードまたは共有秘密値を使用して受信者情報がタイプPasswordRecipientInfoで表現されます。 PasswordRecipientInfoの各インスタンスは、パスワードまたは共有秘密値を有している1つまたは複数の受信者に、コンテンツ暗号化キーを転送します。"
    },
    {
      "indent": 3,
      "text": "The PasswordRecipientInfo Type is specified in RFC 3211 [PWRI]. The PasswordRecipientInfo structure is repeated here for completeness.",
      "ja": "PasswordRecipientInfoタイプは、RFC 3211 [PWRI]で指定されています。 PasswordRecipientInfo構造は完全を期すためにここで繰り返されます。"
    },
    {
      "indent": 6,
      "text": "PasswordRecipientInfo ::= SEQUENCE {\n  version CMSVersion,   -- Always set to 0\n  keyDerivationAlgorithm [0] KeyDerivationAlgorithmIdentifier\n                               OPTIONAL,\n  keyEncryptionAlgorithm KeyEncryptionAlgorithmIdentifier,\n  encryptedKey EncryptedKey }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The fields of type PasswordRecipientInfo have the following meanings:",
      "ja": "タイプPasswordRecipientInfoのフィールドは以下の意味があります。"
    },
    {
      "indent": 6,
      "text": "version is the syntax version number. It MUST always be 0.",
      "ja": "バージョンは構文バージョン番号です。それは、常に0でなければなりません。"
    },
    {
      "indent": 6,
      "text": "keyDerivationAlgorithm identifies the key-derivation algorithm, and any associated parameters, used to derive the key-encryption key from the password or shared secret value. If this field is absent, the key-encryption key is supplied from an external source, for example a hardware crypto token such as a smart card.",
      "ja": "keyDerivationAlgorithmは、キー導出アルゴリズムを識別し、パスワードまたは共有秘密値からキー暗号化キーを導出するために使用される任意の関連パラメータ、。このフィールドが存在しない場合は、キー暗号化キーは、スマートカードなど例えば、外部ソースからのハードウェア暗号化トークンを供給されています。"
    },
    {
      "indent": 6,
      "text": "keyEncryptionAlgorithm identifies the encryption algorithm, and any associated parameters, used to encrypt the content-encryption key with the key-encryption key.",
      "ja": "keyEncryptionAlgorithmは、暗号化アルゴリズムを識別し、任意の関連するパラメータは、鍵暗号化鍵でコンテンツ暗号化キーを暗号化するために使用されます。"
    },
    {
      "indent": 6,
      "text": "encryptedKey is the result of encrypting the content-encryption key with the key-encryption key.",
      "ja": "EncryptedKeyには、キー暗号化キーと、コンテンツ暗号化キーを暗号化した結果です。"
    },
    {
      "indent": 0,
      "text": "6.2.5. OtherRecipientInfo Type",
      "section_title": true,
      "ja": "6.2.5.  OtherRecipientInfoタイプ"
    },
    {
      "indent": 3,
      "text": "Recipient information for additional key management techniques are represented in the type OtherRecipientInfo. The OtherRecipientInfo type allows key management techniques beyond key transport, key agreement, previously distributed symmetric key-encryption keys, and password-based key management to be specified in future documents. An object identifier uniquely identifies such key management techniques.",
      "ja": "追加のキー管理技術の受信者情報は、タイプOtherRecipientInfoで表現されています。 OtherRecipientInfoタイプは、キー輸送を超え鍵管理技術、鍵合意、以前に分配された左右対称キー暗号化キー、および将来の文書で指定するパスワードベースのキー管理を行うことができます。オブジェクト識別子は一意にそのような鍵管理技術を識別する。"
    },
    {
      "indent": 6,
      "text": "OtherRecipientInfo ::= SEQUENCE {\n  oriType OBJECT IDENTIFIER,\n  oriValue ANY DEFINED BY oriType }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The fields of type OtherRecipientInfo have the following meanings:",
      "ja": "タイプOtherRecipientInfoのフィールドは以下の意味があります。"
    },
    {
      "indent": 6,
      "text": "oriType identifies the key management technique.",
      "ja": "oriTypeは、鍵管理技術を識別します。"
    },
    {
      "indent": 6,
      "text": "oriValue contains the protocol data elements needed by a recipient using the identified key management technique.",
      "ja": "oriValueは、識別された鍵管理技術を使用して受信者によって必要とされるプロトコルデータ要素を含みます。"
    },
    {
      "indent": 0,
      "text": "6.3. Content-encryption Process",
      "section_title": true,
      "ja": "6.3. コンテンツの暗号化プロセス"
    },
    {
      "indent": 3,
      "text": "The content-encryption key for the desired content-encryption algorithm is randomly generated. The data to be protected is padded as described below, then the padded data is encrypted using the content-encryption key. The encryption operation maps an arbitrary string of octets (the data) to another string of octets (the ciphertext) under control of a content-encryption key. The encrypted data is included in the EnvelopedData encryptedContentInfo encryptedContent OCTET STRING.",
      "ja": "所望のコンテンツ暗号化アルゴリズムのためのコンテンツ暗号化キーがランダムに生成されます。後述のように保護されるべきデータは、パディングデータは、コンテンツ暗号化キーを用いて暗号化され、パディングされます。暗号化操作は、コンテンツ暗号化鍵の制御下で、オクテットの別の文字列（暗号文）オクテット（データ）の任意の文字列をマッピングします。暗号化されたデータはEnvelopedDataのencryptedContentInfo暗号化コンテンツのオクテット文字列に含まれています。"
    },
    {
      "indent": 3,
      "text": "Some content-encryption algorithms assume the input length is a multiple of k octets, where k is greater than one. For such algorithms, the input shall be padded at the trailing end with k-(lth mod k) octets all having value k-(lth mod k), where lth is the length of the input. In other words, the input is padded at the trailing end with one of the following strings:",
      "ja": "いくつかのコンテンツ暗号化アルゴリズムは、入力された長さkが1より大きいKオクテットの倍数であると仮定する。そのようなアルゴリズムのために、入力は、K-（LTH MOD K）と後端にパディングLTHは、入力の長さを有する全ての値K-（LTH MOD k）をオクテットなければなりません。換言すれば、入力は、以下のいずれかの文字列と後端にパディングされます。"
    },
    {
      "indent": 12,
      "text": "         01 -- if lth mod k = k-1\n      02 02 -- if lth mod k = k-2\n          .\n          .\n          .\nk k ... k k -- if lth mod k = 0",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The padding can be removed unambiguously since all input is padded, including input values that are already a multiple of the block size, and no padding string is a suffix of another. This padding method is well defined if and only if k is less than 256.",
      "ja": "すべての入力が既に、ブロックサイズの倍数である入力値を含む、パディングされるので、パディングを明確に除去することができ、パディング列は、別の接尾辞ではありません。このパディング法は、十分に定義されている場合、kは256未満である場合にのみ。"
    },
    {
      "indent": 0,
      "text": "6.4. Key-encryption Process",
      "section_title": true,
      "ja": "6.4. キーの暗号化プロセス"
    },
    {
      "indent": 3,
      "text": "The input to the key-encryption process -- the value supplied to the recipient's key-encryption algorithm -- is just the \"value\" of the content-encryption key.",
      "ja": "鍵暗号化プロセスへの入力 - 受信者の鍵暗号化アルゴリズムに供給された値は - ちょうど、コンテンツ暗号化キーの「値」です。"
    },
    {
      "indent": 3,
      "text": "Any of the aforementioned key management techniques can be used for each recipient of the same encrypted content.",
      "ja": "前述の鍵管理技術のいずれかは、同じ暗号化コンテンツの各受取人のために使用することができます。"
    },
    {
      "indent": 0,
      "text": "7. Digested-data Content Type",
      "section_title": true,
      "ja": "7.消化・データのコンテンツタイプ"
    },
    {
      "indent": 3,
      "text": "The digested-data content type consists of content of any type and a message digest of the content.",
      "ja": "消化されたデータのコンテンツタイプは、任意のタイプのコンテンツおよびメッセージコンテンツのダイジェストで構成されています。"
    },
    {
      "indent": 3,
      "text": "Typically, the digested-data content type is used to provide content integrity, and the result generally becomes an input to the enveloped-data content type.",
      "ja": "典型的には、消化されたデータのコンテンツタイプは、コンテンツの完全性を提供するために使用され、その結果は、一般に、エンベロープデータ・コンテンツ・タイプへの入力となります。"
    },
    {
      "indent": 3,
      "text": "The following steps construct digested-data:",
      "ja": "次の手順では、消化されたデータを構築します："
    },
    {
      "indent": 6,
      "text": "1. A message digest is computed on the content with a message-digest algorithm.",
      "ja": "1.メッセージダイジェストがメッセージダイジェストアルゴリズムでコンテンツに計算されます。"
    },
    {
      "indent": 6,
      "text": "2. The message-digest algorithm and the message digest are collected together with the content into a DigestedData value.",
      "ja": "2.メッセージダイジェストアルゴリズムとメッセージダイジェストをDigestedData値にコンテンツとともに収集されます。"
    },
    {
      "indent": 3,
      "text": "A recipient verifies the message digest by comparing the message digest to an independently computed message digest.",
      "ja": "受信者は、メッセージがメッセージは、独立して計算されたメッセージダイジェストとダイジェストと比較することによってダイジェストを検証します。"
    },
    {
      "indent": 3,
      "text": "The following object identifier identifies the digested-data content type:",
      "ja": "以下のオブジェクト識別子は、消化されたデータコンテンツのタイプを識別する。"
    },
    {
      "indent": 6,
      "text": "id-digestedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n    us(840) rsadsi(113549) pkcs(1) pkcs7(7) 5 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The digested-data content type shall have ASN.1 type DigestedData:",
      "ja": "消化されたデータのコンテンツタイプは、ASN.1タイプDigestedDataを持たなければなりません。"
    },
    {
      "indent": 6,
      "text": "DigestedData ::= SEQUENCE {\n  version CMSVersion,\n  digestAlgorithm DigestAlgorithmIdentifier,\n  encapContentInfo EncapsulatedContentInfo,\n  digest Digest }",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Digest ::= OCTET STRING",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The fields of type DigestedData have the following meanings:",
      "ja": "タイプDigestedDataのフィールドは以下の意味があります。"
    },
    {
      "indent": 6,
      "text": "version is the syntax version number. If the encapsulated content type is id-data, then the value of version MUST be 0; however, if the encapsulated content type is other than id-data, then the value of version MUST be 2.",
      "ja": "バージョンは構文バージョン番号です。カプセル化されたコンテンツタイプは、IDデータである場合、バージョンの値が0でなければなりません。カプセル化されたコンテンツタイプは、IDデータ以外である場合は、次に、バージョンの値が2でなければなりません。"
    },
    {
      "indent": 6,
      "text": "digestAlgorithm identifies the message digest algorithm, and any associated parameters, under which the content is digested. The message-digesting process is the same as in Section 5.4 in the case when there are no signed attributes.",
      "ja": "digestAlgorithmコンテンツが消化されるの下で、メッセージダイジェストアルゴリズム、および任意の関連するパラメータを識別する。メッセージ消化プロセスには署名された属性が存在しない場合には5.4と同じです。"
    },
    {
      "indent": 6,
      "text": "encapContentInfo is the content that is digested, as defined in section 5.2.",
      "ja": "encapContentInfoはセクション5.2で定義されるように、消化されたコンテンツです。"
    },
    {
      "indent": 6,
      "text": "digest is the result of the message-digesting process.",
      "ja": "ダイジェストは、メッセージ消化プロセスの結果です。"
    },
    {
      "indent": 3,
      "text": "The ordering of the digestAlgorithm field, the encapContentInfo field, and the digest field makes it possible to process a DigestedData value in a single pass.",
      "ja": "digestAlgorithmフィールドの順序、encapContentInfoフィールド、およびダイジェストフィールドは、単一のパスでDigestedData値を処理することが可能となります。"
    },
    {
      "indent": 0,
      "text": "8. Encrypted-data Content Type",
      "section_title": true,
      "ja": "8.暗号化されたデータのコンテンツタイプ"
    },
    {
      "indent": 3,
      "text": "The encrypted-data content type consists of encrypted content of any type. Unlike the enveloped-data content type, the encrypted-data content type has neither recipients nor encrypted content-encryption keys. Keys MUST be managed by other means.",
      "ja": "暗号化されたデータのコンテンツタイプは、任意のタイプの暗号化されたコンテンツで構成されています。包まデータのコンテンツタイプとは異なり、暗号化されたデータのコンテンツタイプはどちらも受信者も暗号化されたコンテンツ暗号化キーを持っています。キーは、他の手段によって管理されなければなりません。"
    },
    {
      "indent": 3,
      "text": "The typical application of the encrypted-data content type will be to encrypt the content of the data content type for local storage, perhaps where the encryption key is derived from a password.",
      "ja": "暗号化されたデータコンテンツタイプの典型的なアプリケーションは、暗号鍵がパスワードから導出され、おそらく、ローカルストレージのデータコンテンツタイプのコンテンツを暗号化するであろう。"
    },
    {
      "indent": 3,
      "text": "The following object identifier identifies the encrypted-data content type:",
      "ja": "以下のオブジェクト識別子は、暗号化データのコンテンツタイプを識別します。"
    },
    {
      "indent": 6,
      "text": "id-encryptedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n    us(840) rsadsi(113549) pkcs(1) pkcs7(7) 6 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The encrypted-data content type shall have ASN.1 type EncryptedData:",
      "ja": "暗号化されたデータのコンテンツタイプは、ASN.1タイプはEncryptedDataを持たなければなりません。"
    },
    {
      "indent": 6,
      "text": "EncryptedData ::= SEQUENCE {\n  version CMSVersion,\n  encryptedContentInfo EncryptedContentInfo,\n  unprotectedAttrs [1] IMPLICIT UnprotectedAttributes OPTIONAL }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The fields of type EncryptedData have the following meanings:",
      "ja": "型はEncryptedDataのフィールドは以下の意味があります。"
    },
    {
      "indent": 6,
      "text": "version is the syntax version number. If unprotectedAttrs is present, then version MUST be 2. If unprotectedAttrs is absent, then version MUST be 0.",
      "ja": "バージョンは構文バージョン番号です。 unprotectedAttrsが存在する場合、バージョンがunprotectedAttrsが存在しない場合、バージョンは0でなければなりません2でなければなりません。"
    },
    {
      "indent": 6,
      "text": "encryptedContentInfo is the encrypted content information, as defined in Section 6.1.",
      "ja": "encryptedContentInfoは、セクション6.1で定義されるように、暗号化されたコンテンツ情報です。"
    },
    {
      "indent": 6,
      "text": "unprotectedAttrs is a collection of attributes that are not encrypted. The field is optional. Useful attribute types are defined in Section 11.",
      "ja": "unprotectedAttrsは暗号化されていない属性のコレクションです。フィールドはオプションです。役に立つ属性タイプはセクション11で定義されています。"
    },
    {
      "indent": 0,
      "text": "9. Authenticated-data Content Type",
      "section_title": true,
      "ja": "9.認証データコンテンツの種類"
    },
    {
      "indent": 3,
      "text": "The authenticated-data content type consists of content of any type, a message authentication code (MAC), and encrypted authentication keys for one or more recipients. The combination of the MAC and one encrypted authentication key for a recipient is necessary for that recipient to verify the integrity of the content. Any type of content can be integrity protected for an arbitrary number of recipients.",
      "ja": "認証されたデータのコンテンツタイプは、任意のタイプ、メッセージ認証コード（MAC）、および1つまたは複数の受信者に対して暗号化された認証キーの内容で構成されています。その受信者は、コンテンツの完全性を検証するためにMACと受信者のための1つの暗号化認証キーの組み合わせが必要です。コンテンツの任意のタイプは、整合性の受信者の任意の数のために保護することができます。"
    },
    {
      "indent": 3,
      "text": "The process by which authenticated-data is constructed involves the following steps:",
      "ja": "認証データが構築されるプロセスは、以下の工程を含みます："
    },
    {
      "indent": 6,
      "text": "1. A message-authentication key for a particular message-authentication algorithm is generated at random.",
      "ja": "1.特定のメッセージ認証アルゴリズムのためのメッセージ認証鍵はランダムに生成されます。"
    },
    {
      "indent": 6,
      "text": "2. The message-authentication key is encrypted for each recipient. The details of this encryption depend on the key management algorithm used.",
      "ja": "2.メッセージ認証キーは、受信者ごとに暗号化されています。この暗号化の詳細については、使用するキー管理アルゴリズムによって異なります。"
    },
    {
      "indent": 6,
      "text": "3. For each recipient, the encrypted message-authentication key and other recipient-specific information are collected into a RecipientInfo value, defined in Section 6.2.",
      "ja": "3.各受信者について、暗号化されたメッセージ認証キーと他の受信者に固有の情報はセクション6.2で定義されたのRecipientInfo値に集められます。"
    },
    {
      "indent": 6,
      "text": "4. Using the message-authentication key, the originator computes a MAC value on the content. If the originator is authenticating any information in addition to the content (see Section 9.2), a message digest is calculated on the content, the message digest of the content and the other information are authenticated using the message-authentication key, and the result becomes the \"MAC value.\"",
      "ja": "4.メッセージ認証キーを使用して、発信者はコンテンツのMAC値を計算します。発信者が（セクション9.2を参照）コンテンツに加えて、任意の情報を認証された場合、メッセージダイジェストは、コンテンツに基づいて計算され、コンテンツおよび他の情報のメッセージダイジェストは、メッセージ認証キーを使用して認証され、その結果はとなります「MAC値。」"
    },
    {
      "indent": 0,
      "text": "9.1. AuthenticatedData Type",
      "section_title": true,
      "ja": "9.1. 認証されたデータ・タイプ"
    },
    {
      "indent": 3,
      "text": "The following object identifier identifies the authenticated-data content type:",
      "ja": "以下のオブジェクト識別子は、認証されたデータコンテンツのタイプを識別する。"
    },
    {
      "indent": 6,
      "text": "id-ct-authData OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n   us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16)\n   ct(1) 2 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The authenticated-data content type shall have ASN.1 type AuthenticatedData:",
      "ja": "認証されたデータのコンテンツタイプは、ASN.1タイプAuthenticatedDataを持たなければなりません。"
    },
    {
      "indent": 6,
      "text": "AuthenticatedData ::= SEQUENCE {\n  version CMSVersion,\n  originatorInfo [0] IMPLICIT OriginatorInfo OPTIONAL,\n  recipientInfos RecipientInfos,\n  macAlgorithm MessageAuthenticationCodeAlgorithm,\n  digestAlgorithm [1] DigestAlgorithmIdentifier OPTIONAL,\n  encapContentInfo EncapsulatedContentInfo,\n  authAttrs [2] IMPLICIT AuthAttributes OPTIONAL,\n  mac MessageAuthenticationCode,\n  unauthAttrs [3] IMPLICIT UnauthAttributes OPTIONAL }",
      "raw": true
    },
    {
      "indent": 6,
      "text": "AuthAttributes ::= SET SIZE (1..MAX) OF Attribute",
      "raw": true
    },
    {
      "indent": 6,
      "text": "UnauthAttributes ::= SET SIZE (1..MAX) OF Attribute",
      "raw": true
    },
    {
      "indent": 6,
      "text": "MessageAuthenticationCode ::= OCTET STRING",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The fields of type AuthenticatedData have the following meanings:",
      "ja": "タイプAuthenticatedDataのフィールドは以下の意味があります。"
    },
    {
      "indent": 6,
      "text": "version is the syntax version number. The version MUST be assigned as follows:",
      "ja": "バージョンは構文バージョン番号です。次のようにバージョンが割り当てられなければなりません："
    },
    {
      "indent": 9,
      "text": "IF (originatorInfo is present) AND ((any certificates with a type of other are present) OR (any crls with a type of other are present)) THEN version is 3 ELSE IF ((originatorInfo is present) AND (any version 2 attribute certificates are present)) THEN version is 1 ELSE version is 0",
      "ja": "IF（originatorInfoが存在している）AND（（他のタイプのいずれかの証明書が存在する）OR（他のタイプの任意のCRLが存在する））THENバージョンがELSE 3 IF（（ori​​ginatorInfoが存在している）AND（すべてのバージョン2属性であります証明書）が存在している）THENバージョン1つのELSEバージョンである0"
    },
    {
      "indent": 6,
      "text": "originatorInfo optionally provides information about the originator. It is present only if required by the key management algorithm. It MAY contain certificates, attribute certificates, and CRLs, as defined in Section 6.1.",
      "ja": "originatorInfo任意に発信元の情報を提供します。鍵管理アルゴリズムによって必要とされる場合にのみ存在しています。 6.1節で定義されたように、それは、証明書、属性証明書、およびCRLを含むかもしれません。"
    },
    {
      "indent": 6,
      "text": "recipientInfos is a collection of per-recipient information, as defined in Section 6.1. There MUST be at least one element in the collection.",
      "ja": "recipientInfos 6.1節で定義されるように、受信者ごとの情報の収集です。コレクション内の少なくとも1つの要素がなければなりません。"
    },
    {
      "indent": 6,
      "text": "macAlgorithm is a message authentication code (MAC) algorithm identifier. It identifies the MAC algorithm, along with any associated parameters, used by the originator. Placement of the macAlgorithm field facilitates one-pass processing by the recipient.",
      "ja": "macAlgorithmは、メッセージ認証コード（MAC）アルゴリズム識別子です。これは、発信者によって使用される任意の関連するパラメータとともに、MACアルゴリズムを識別する。 macAlgorithmフィールドの配置は、受信者によりワンパス処理を容易にします。"
    },
    {
      "indent": 6,
      "text": "digestAlgorithm identifies the message digest algorithm, and any associated parameters, used to compute a message digest on the encapsulated content if authenticated attributes are present. The message digesting process is described in Section 9.2. Placement of the digestAlgorithm field facilitates one-pass processing by the recipient. If the digestAlgorithm field is present, then the authAttrs field MUST also be present.",
      "ja": "digestAlgorithmは、メッセージダイジェストアルゴリズムを識別し、認証された属性が存在する場合、メッセージを計算するために使用される任意の関連するパラメータは、カプセル化されたコンテンツにダイジェスト。メッセージ消化プロセスはセクション9.2に記載されています。 digestAlgorithmフィールドの配置は、受信者によりワンパス処理を容易にします。 digestAlgorithmフィールドが存在する場合、authAttrsフィールドも存在しなければなりません。"
    },
    {
      "indent": 6,
      "text": "encapContentInfo is the content that is authenticated, as defined in section 5.2.",
      "ja": "encapContentInfoはセクション5.2で定義されるように、認証されるコンテンツです。"
    },
    {
      "indent": 6,
      "text": "authAttrs is a collection of authenticated attributes. The authAttrs structure is optional, but it MUST be present if the content type of the EncapsulatedContentInfo value being authenticated is not id-data. If the authAttrs field is present, then the digestAlgorithm field MUST also be present. The AuthAttributes structure MUST be DER encoded, even if the rest of the structure is BER encoded. Useful attribute types are defined in Section 11. If the authAttrs field is present, it MUST contain, at a minimum, the following two attributes:",
      "ja": "authAttrsは、認証された属性のコレクションです。 authAttrs構造は任意であるが、認証されEncapsulatedContentInfo値のコンテンツタイプではなく、IDデータである場合、それが存在しなければなりません。 authAttrsフィールドが存在する場合、digestAlgorithmフィールドも存在しなければなりません。 AuthAttributes構造は、DERは、構造の残りの部分はBER符号化であっても、符号化されなければなりません。 authAttrsフィールドが存在する場合に有用な属性タイプはセクション11で定義されている、それは、最低でも、次の2つの属性を含まなければなりません："
    },
    {
      "indent": 9,
      "text": "A content-type attribute having as its value the content type of the EncapsulatedContentInfo value being authenticated. Section 11.1 defines the content-type attribute.",
      "ja": "その値としてEncapsulatedContentInfo値のコンテンツタイプを有するコンテンツ・タイプ属性が認証されます。 11.1は、コンテンツ・タイプの属性を定義します。"
    },
    {
      "indent": 9,
      "text": "A message-digest attribute, having as its value the message digest of the content. Section 11.2 defines the message-digest attribute.",
      "ja": "メッセージダイジェスト価値コンテンツのメッセージダイジェストとして有する、属性。 11.2節は、メッセージダイジェスト属性を定義します。"
    },
    {
      "indent": 6,
      "text": "mac is the message authentication code.",
      "ja": "MACは、メッセージ認証コードです。"
    },
    {
      "indent": 6,
      "text": "unauthAttrs is a collection of attributes that are not authenticated. The field is optional. To date, no attributes have been defined for use as unauthenticated attributes, but other useful attribute types are defined in Section 11.",
      "ja": "unauthAttrsが認証されていない属性のコレクションです。フィールドはオプションです。現在までに、何の属性が認証されていない属性として使用するために定義されていないが、他の有用な属性タイプはセクション11で定義されています。"
    },
    {
      "indent": 0,
      "text": "9.2. MAC Generation",
      "section_title": true,
      "ja": "9.2.  MACジェネレーション"
    },
    {
      "indent": 3,
      "text": "The MAC calculation process computes a message authentication code (MAC) on either the content being authenticated or a message digest of content being authenticated together with the originator's authenticated attributes.",
      "ja": "MAC演算処理が認証されるコンテンツ又はコンテンツのダイジェストが発信者の認証属性と共に認証されるメッセージのいずれかにメッセージ認証コード（MAC）を計算します。"
    },
    {
      "indent": 3,
      "text": "If authAttrs field is absent, the input to the MAC calculation process is the value of the encapContentInfo eContent OCTET STRING. Only the octets comprising the value of the eContent OCTET STRING are input to the MAC algorithm; the tag and the length octets are omitted. This has the advantage that the length of the content being authenticated need not be known in advance of the MAC generation process.",
      "ja": "authAttrsフィールドが存在しない場合、MAC計算処理への入力はencapContentInfo e-コンテンツオクテット文字列の値です。 e-コンテンツオクテット文字列の値を含むのみオクテットはMACアルゴリズムに入力されます。タグと長さオクテットを省略しています。これは、コンテンツの長さは、MAC生成プロセスの事前に知られている必要はなく、認証されるという利点を有します。"
    },
    {
      "indent": 3,
      "text": "If authAttrs field is present, the content-type attribute (as described in Section 11.1) and the message-digest attribute (as described in section 11.2) MUST be included, and the input to the MAC calculation process is the DER encoding of authAttrs. A separate encoding of the authAttrs field is performed for message digest calculation. The IMPLICIT [2] tag in the authAttrs field is not used for the DER encoding, rather an EXPLICIT SET OF tag is used. That is, the DER encoding of the SET OF tag, rather than of the IMPLICIT [2] tag, is to be included in the message digest calculation along with the length and content octets of the authAttrs value.",
      "ja": "authAttrsフィールドが存在する場合、コンテンツタイプ属性（セクション11.1に記載されているように）、メッセージダイジェスト属性（セクション11.2に記載されているように）を含まなければなりません、及びMAC演算処理への入力はauthAttrsのDER符号化です。 authAttrsフィールドの別々の符号化はメッセージダイジェスト計算のために行われます。タグを明示的にSETが使用されているむしろauthAttrsフィールドにIMPLICIT [2]タグは、DER符号化に使用されません。つまり、むしろIMPLICIT [2]タグのより、タグのセットのDER符号化であるauthAttrs値の長さと内容オクテットと共に計算ダイジェストメッセージに含まれるべきです。"
    },
    {
      "indent": 3,
      "text": "The message digest calculation process computes a message digest on the content being authenticated. The initial input to the message digest calculation process is the \"value\" of the encapsulated content being authenticated. Specifically, the input is the encapContentInfo eContent OCTET STRING to which the authentication process is applied. Only the octets comprising the value of the encapContentInfo eContent OCTET STRING are input to the message digest algorithm, not the tag or the length octets. This has the advantage that the length of the content being authenticated need not be known in advance. Although the encapContentInfo eContent OCTET STRING tag and length octets are not included in the message digest calculation, they are still protected by other means. The length octets are protected by the nature of the message digest algorithm since it is computationally infeasible to find any two distinct contents of any length that have the same message digest.",
      "ja": "メッセージダイジェスト計算プロセスは、メッセージが認証されているコンテンツにダイジェストを計算します。メッセージダイジェスト計算過程への初期入力が認証されるカプセル化されたコンテンツの「値」です。具体的には、入力は、認証処理が適用されるencapContentInfo e-コンテンツオクテット文字列です。 encapContentInfo e-コンテンツオクテット文字列の値を含む唯一のオクテットは、メッセージに入力されたアルゴリズムではなく、タグまたは長さオクテットダイジェスト。これは、コンテンツの長さは、事前に知る必要はない認証されるという利点があります。 encapContentInfo e-コンテンツOCTET STRINGタグと長さオクテットは、メッセージダイジェスト計算に含まれていないが、それらはまだ他の手段によって保護されています。長さオクテットは、同じメッセージダイジェストを有する任意の長さのいずれか2つの別個のコンテンツを見つけることが計算上不可能であるので、メッセージダイジェストアルゴリズムの性質によって保護されています。"
    },
    {
      "indent": 3,
      "text": "The input to the MAC calculation process includes the MAC input data, defined above, and an authentication key conveyed in a recipientInfo structure. The details of MAC calculation depend on the MAC algorithm employed (e.g., HMAC). The object identifier, along with any parameters, that specifies the MAC algorithm employed by the originator is carried in the macAlgorithm field. The MAC value generated by the originator is encoded as an OCTET STRING and carried in the mac field.",
      "ja": "MAC演算処理への入力は、上記で定義されたMACの入力データとのRecipientInfo構造に搬送認証キーを含みます。 MAC計算の詳細（例えば、HMAC）を使用MACアルゴリズムに依存します。発信元によって用いられるMACアルゴリズムを指定する任意のパラメータと共にオブジェクト識別子は、macAlgorithmフィールドで搬送されます。発信元によって生成されたMAC値は、OCTET STRINGとして符号化され、MACフィールドで搬送されます。"
    },
    {
      "indent": 0,
      "text": "9.3. MAC Verification",
      "section_title": true,
      "ja": "9.3.  MAC検証"
    },
    {
      "indent": 3,
      "text": "The input to the MAC verification process includes the input data (determined based on the presence or absence of the authAttrs field, as defined in 9.2), and the authentication key conveyed in recipientInfo. The details of the MAC verification process depend on the MAC algorithm employed.",
      "ja": "MAC検証プロセスへの入力は、入力データ（9.2で定義されるように、authAttrsフィールドの有無に基づいて決定される）、及びのRecipientInfoに搬送認証キーを含みます。 MAC検証プロセスの詳細については、使用MACアルゴリズムによって異なります。"
    },
    {
      "indent": 3,
      "text": "The recipient MUST NOT rely on any MAC values or message digest values computed by the originator. The content is authenticated as described in section 9.2. If the originator includes authenticated attributes, then the content of the authAttrs is authenticated as described in section 9.2. For authentication to succeed, the MAC value calculated by the recipient MUST be the same as the value of the mac field. Similarly, for authentication to succeed when the authAttrs field is present, the content message digest value calculated by the recipient MUST be the same as the message digest value included in the authAttrs message-digest attribute.",
      "ja": "受信者は発信元によって計算された任意のMAC値またはメッセージダイジェスト値当てにしてはいけません。セクション9.2で説明したようにコンテンツが認証されます。発信者が認証された属性が含まれている場合セクション9.2で説明したように、その後authAttrsのコンテンツが認証されます。認証が成功するためには、受信者によって算出したMAC値は、MACフィールドの値と同じでなければなりません。同様に、authAttrsフィールドが存在する場合に成功する認証のために、受信者によって算出コンテンツのメッセージダイジェスト値がauthAttrsメッセージダイジェスト属性に含まれるメッセージダイジェスト値と同じでなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the AuthenticatedData includes authAttrs, then the content-type attribute value MUST match the AuthenticatedData encapContentInfo eContentType value.",
      "ja": "AuthenticatedDataはauthAttrsが含まれている場合、コンテンツ・タイプの属性値はAuthenticatedData encapContentInfoのeContentType値と一致する必要があります。"
    },
    {
      "indent": 0,
      "text": "10. Useful Types",
      "section_title": true,
      "ja": "10.有用なタイプ"
    },
    {
      "indent": 3,
      "text": "This section is divided into two parts. The first part defines algorithm identifiers, and the second part defines other useful types.",
      "ja": "このセクションでは、2つの部分に分かれています。最初の部分は、アルゴリズム識別子を定義し、第2の部分は、他の有用なタイプを定義します。"
    },
    {
      "indent": 0,
      "text": "10.1. Algorithm Identifier Types",
      "section_title": true,
      "ja": "10.1. アルゴリズム識別子データ型"
    },
    {
      "indent": 3,
      "text": "All of the algorithm identifiers have the same type:",
      "ja": "アルゴリズム識別子のすべてが同じ型を持っています："
    },
    {
      "indent": 3,
      "text": "AlgorithmIdentifier. The definition of AlgorithmIdentifier is taken from X.509 [X.509-88].",
      "ja": "AlgorithmIdentifier。 AlgorithmIdentifierの定義はX.509 [X.509-88]から取られます。"
    },
    {
      "indent": 3,
      "text": "There are many alternatives for each algorithm type.",
      "ja": "各アルゴリズムのタイプのための多くの選択肢があります。"
    },
    {
      "indent": 0,
      "text": "10.1.1. DigestAlgorithmIdentifier",
      "section_title": true,
      "ja": "10.1.1.  DigestAlgorithmIdentifier"
    },
    {
      "indent": 3,
      "text": "The DigestAlgorithmIdentifier type identifies a message-digest algorithm. Examples include SHA-1, MD2, and MD5. A message-digest algorithm maps an octet string (the content) to another octet string (the message digest).",
      "ja": "DigestAlgorithmIdentifierタイプは、メッセージダイジェストアルゴリズムを識別する。例としては、SHA-1、MD2、MD5とを含みます。メッセージダイジェストアルゴリズムは、別のオクテット列（メッセージダイジェスト）をオクテットストリング（コンテンツ）をマッピングします。"
    },
    {
      "indent": 6,
      "text": "DigestAlgorithmIdentifier ::= AlgorithmIdentifier",
      "raw": true
    },
    {
      "indent": 0,
      "text": "10.1.2. SignatureAlgorithmIdentifier",
      "section_title": true,
      "ja": "10.1.2. 署名アルゴリズム識別子"
    },
    {
      "indent": 3,
      "text": "The SignatureAlgorithmIdentifier type identifies a signature algorithm. Examples include RSA, DSA, and ECDSA. A signature algorithm supports signature generation and verification operations. The signature generation operation uses the message digest and the signer's private key to generate a signature value. The signature verification operation uses the message digest and the signer's public key to determine whether or not a signature value is valid. Context determines which operation is intended.",
      "ja": "SignatureAlgorithmIdentifierタイプは署名アルゴリズムを識別する。例としては、RSA、DSA、およびECDSAが含まれます。署名アルゴリズムは、署名生成および検証動作をサポートします。署名生成操作は、署名値を生成するメッセージダイジェストと署名者の秘密鍵を使用しています。署名検証処理は、署名値が有効であるか否かを判断するメッセージダイジェストと署名者の公開鍵を使用しています。コンテキストが意図された動作を決定します。"
    },
    {
      "indent": 6,
      "text": "SignatureAlgorithmIdentifier ::= AlgorithmIdentifier",
      "raw": true
    },
    {
      "indent": 0,
      "text": "10.1.3. KeyEncryptionAlgorithmIdentifier",
      "section_title": true,
      "ja": "10.1.3. キーの暗号化アルゴリズム識別子"
    },
    {
      "indent": 3,
      "text": "The KeyEncryptionAlgorithmIdentifier type identifies a key-encryption algorithm used to encrypt a content-encryption key. The encryption operation maps an octet string (the key) to another octet string (the encrypted key) under control of a key-encryption key. The decryption operation is the inverse of the encryption operation. Context determines which operation is intended.",
      "ja": "KeyEncryptionAlgorithmIdentifierタイプは、コンテンツ暗号化キーを暗号化するために使用されるキー暗号化アルゴリズムを特定します。暗号化操作は、キー暗号化キーの制御下に別のオクテット文字列（暗号化キー）にオクテット文字列（キー）をマップします。復号化操作は、暗号化操作の逆です。コンテキストが意図された動作を決定します。"
    },
    {
      "indent": 3,
      "text": "The details of encryption and decryption depend on the key management algorithm used. Key transport, key agreement, previously distributed symmetric key-encrypting keys, and symmetric key-encrypting keys derived from passwords are supported.",
      "ja": "暗号化と復号化の詳細については、使用するキー管理アルゴリズムによって異なります。主な交通機関、主要な協定は、以前に対称鍵暗号化キーを配布し、パスワードから導出対称キー暗号化キーがサポートされています。"
    },
    {
      "indent": 6,
      "text": "KeyEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier",
      "raw": true
    },
    {
      "indent": 0,
      "text": "10.1.4. ContentEncryptionAlgorithmIdentifier",
      "section_title": true,
      "ja": "10.1.4. コンテンツ暗号化アルゴリズムの識別子"
    },
    {
      "indent": 3,
      "text": "The ContentEncryptionAlgorithmIdentifier type identifies a content-encryption algorithm. Examples include Triple-DES and RC2. A content-encryption algorithm supports encryption and decryption operations. The encryption operation maps an octet string (the plaintext) to another octet string (the ciphertext) under control of a content-encryption key. The decryption operation is the inverse of the encryption operation. Context determines which operation is intended.",
      "ja": "ContentEncryptionAlgorithmIdentifierタイプは、コンテンツの暗号化アルゴリズムを特定します。例としては、トリプルDESとRC2が含まれます。コンテンツ暗号化アルゴリズムは、暗号化と復号化の操作をサポートしています。暗号化操作は、コンテンツ暗号化鍵の制御下で、他のオクテット文字列（暗号文）にオクテット文字列（平文）をマップします。復号化操作は、暗号化操作の逆です。コンテキストが意図された動作を決定します。"
    },
    {
      "indent": 6,
      "text": "ContentEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier",
      "raw": true
    },
    {
      "indent": 0,
      "text": "10.1.5. MessageAuthenticationCodeAlgorithm",
      "section_title": true,
      "ja": "10.1.5.  MessageAuthenticationCodeAlgorithm"
    },
    {
      "indent": 3,
      "text": "The MessageAuthenticationCodeAlgorithm type identifies a message authentication code (MAC) algorithm. Examples include DES-MAC and HMAC-SHA-1. A MAC algorithm supports generation and verification operations. The MAC generation and verification operations use the same symmetric key. Context determines which operation is intended.",
      "ja": "MessageAuthenticationCodeAlgorithmタイプは、メッセージ認証コード（MAC）アルゴリズムを識別する。例としては、DES-MACとHMAC-SHA-1を含みます。 MACアルゴリズムは、生成と検証操作をサポートしています。 MAC生成と検証操作は同じ対称鍵を使用しています。コンテキストが意図された動作を決定します。"
    },
    {
      "indent": 6,
      "text": "MessageAuthenticationCodeAlgorithm ::= AlgorithmIdentifier",
      "raw": true
    },
    {
      "indent": 0,
      "text": "10.1.6. KeyDerivationAlgorithmIdentifier",
      "section_title": true,
      "ja": "10.1.6. キー導出アルゴリズム識別子"
    },
    {
      "indent": 3,
      "text": "The KeyDerivationAlgorithmIdentifier type is specified in RFC 3211 [PWRI]. The KeyDerivationAlgorithmIdentifier definition is repeated here for completeness.",
      "ja": "KeyDerivationAlgorithmIdentifierタイプは、RFC 3211 [PWRI]で指定されています。 KeyDerivationAlgorithmIdentifier定義は、完全を期すためにここで繰り返されます。"
    },
    {
      "indent": 3,
      "text": "Key derivation algorithms convert a password or shared secret value into a key-encryption key.",
      "ja": "キー導出アルゴリズムは、キー暗号化キーにパスワードまたは共有秘密値を変換します。"
    },
    {
      "indent": 6,
      "text": "KeyDerivationAlgorithmIdentifier ::= AlgorithmIdentifier",
      "raw": true
    },
    {
      "indent": 0,
      "text": "10.2. Other Useful Types",
      "section_title": true,
      "ja": "10.2. 他の有用なタイプ"
    },
    {
      "indent": 3,
      "text": "This section defines types that are used other places in the document. The types are not listed in any particular order.",
      "ja": "このセクションでは、ドキュメント内の他の場所に使用されているタイプを定義します。タイプは、特定の順序で表示されていません。"
    },
    {
      "indent": 0,
      "text": "10.2.1. RevocationInfoChoices",
      "section_title": true,
      "ja": "10.2.1.  RevocationInfoChoices"
    },
    {
      "indent": 3,
      "text": "The RevocationInfoChoices type gives a set of revocation status information alternatives. It is intended that the set contain information sufficient to determine whether the certificates and attribute certificates with which the set is associated are revoked. However, there MAY be more revocation status information than necessary or there MAY be less revocation status information than necessary. X.509 Certificate revocation lists (CRLs) [X.509-97] are the primary source of revocation status information, but any other revocation information format can be supported. The OtherRevocationInfoFormat alternative is provided to support any other revocation information format without further modifications to the CMS. For example, Online Certificate Status Protocol (OCSP) Responses [OCSP] can be supported using the OtherRevocationInfoFormat.",
      "ja": "RevocationInfoChoicesタイプが失効ステータス情報の選択肢のセットを提供します。セットはセットが関連付けられている証明書と属性証明書が失効しているかどうかを決定するのに十分な情報が含まれていることが意図されています。しかし、必要以上に失効状態情報が存在してもよく、または必要に応じてより少ない失効ステータス情報があるかもしれません。 X.509証明書失効リスト（CRL）X.509-97]は、失効ステータス情報の主要なソースであるが、他の失効情報のフォーマットをサポートすることができます。 OtherRevocationInfoFormat代替は、CMSにさらに修飾することなく、他の失効情報のフォーマットをサポートするために設けられています。たとえば、オンライン証明書状態プロトコル（OCSP）の応答は、[OCSP] OtherRevocationInfoFormatを使用してサポートすることができます。"
    },
    {
      "indent": 3,
      "text": "The CertificateList may contain a CRL, an Authority Revocation List (ARL), a Delta CRL, or an Attribute Certificate Revocation List. All of these lists share a common syntax.",
      "ja": "CertificateListのは、CRL、認証局失効リスト（ARL）、デルタCRL、または属性証明書失効リストが含まれていてもよいです。これらのリストのすべてが共通の構文を共有しています。"
    },
    {
      "indent": 3,
      "text": "The CertificateList type gives a certificate revocation list (CRL). CRLs are specified in X.509 [X.509-97], and they are profiled for use in the Internet in RFC 3280 [PROFILE].",
      "ja": "CertificateListのタイプは、証明書失効リスト（CRL）を与えます。 CRLはX.509 [X.509-97]で指定されており、これらはRFC 3280 [PROFILE]で、インターネットでの使用のために紹介されます。"
    },
    {
      "indent": 3,
      "text": "The definition of CertificateList is taken from X.509.",
      "ja": "CertificateListの定義はX.509から取られています。"
    },
    {
      "indent": 6,
      "text": "RevocationInfoChoices ::= SET OF RevocationInfoChoice",
      "raw": true
    },
    {
      "indent": 6,
      "text": "RevocationInfoChoice ::= CHOICE {\n  crl CertificateList,\n  other [1] IMPLICIT OtherRevocationInfoFormat }",
      "raw": true
    },
    {
      "indent": 6,
      "text": "OtherRevocationInfoFormat ::= SEQUENCE {\n  otherRevInfoFormat OBJECT IDENTIFIER,\n  otherRevInfo ANY DEFINED BY otherRevInfoFormat }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "10.2.2. CertificateChoices",
      "section_title": true,
      "ja": "10.2.2.  CertificateChoices"
    },
    {
      "indent": 3,
      "text": "The CertificateChoices type gives either a PKCS #6 extended certificate [PKCS#6], an X.509 certificate, a version 1 X.509 attribute certificate (ACv1) [X.509-97], a version 2 X.509 attribute certificate (ACv2) [X.509-00], or any other certificate format. The PKCS #6 extended certificate is obsolete. The PKCS #6 certificate is included for backward compatibility, and PKCS #6 certificates SHOULD NOT be used. The ACv1 is also obsolete. ACv1 is included for backward compatibility, and ACv1 SHOULD NOT be used. The Internet profile of X.509 certificates is specified in the \"Internet X.509 Public Key Infrastructure: Certificate and CRL Profile\" [PROFILE]. The Internet profile of ACv2 is specified in the \"An Internet Attribute Certificate Profile for Authorization\" [ACPROFILE]. The OtherCertificateFormat alternative is provided to support any other certificate format without further modifications to the CMS.",
      "ja": "CertificateChoicesタイプは、X.509証明書、バージョン1 X.509属性証明書（ACV1）X.509-97]、バージョン2 X.509属性証明書PKCS＃6拡張証明書[6のPKCS＃]のいずれかを与えます（ACv2）X.509-00]、または任意の他の証明書フォーマット。 PKCS＃6の拡張証明書が廃止されました。 PKCS＃6証明書は、下位互換性のために含まれ、およびPKCS＃6証明書が使用されるべきではありません。 ACV1も廃止されました。 ACV1は、下位互換性のために含まれ、そしてACV1は使うべきではありません。 [PROFILE]：X.509証明書のインターネットプロファイルは、「証明書とCRLプロフィールインターネットX.509公開鍵インフラストラクチャ」に指定されています。 ACv2のインターネットプロファイルは、[ACPROFILE]「認可のためのインターネット属性証明書プロフィール」に指定されています。 OtherCertificateFormat代替は、CMSにさらに修飾することなく、他の証明書の形式をサポートするために設けられています。"
    },
    {
      "indent": 3,
      "text": "The definition of Certificate is taken from X.509.",
      "ja": "証明書の定義はX.509から取られています。"
    },
    {
      "indent": 3,
      "text": "The definitions of AttributeCertificate are taken from X.509-1997 and X.509-2000. The definition from X.509-1997 is assigned to AttributeCertificateV1 (see section 12.2), and the definition from X.509-2000 is assigned to AttributeCertificateV2.",
      "ja": "AttributeCertificateの定義はX.509-1997とX.509-2000から取得されます。 X.509-1997から定義はAttributeCertificateV1（セクション12.2を参照）に割り当てられ、X.509-2000から定義はAttributeCertificateV2に割り当てられます。"
    },
    {
      "indent": 6,
      "text": "CertificateChoices ::= CHOICE {\n certificate Certificate,\n extendedCertificate [0] IMPLICIT ExtendedCertificate, -- Obsolete\n v1AttrCert [1] IMPLICIT AttributeCertificateV1,       -- Obsolete\n v2AttrCert [2] IMPLICIT AttributeCertificateV2,\n other [3] IMPLICIT OtherCertificateFormat }",
      "raw": true
    },
    {
      "indent": 6,
      "text": "OtherCertificateFormat ::= SEQUENCE {\n otherCertFormat OBJECT IDENTIFIER,\n otherCert ANY DEFINED BY otherCertFormat }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "10.2.3. CertificateSet",
      "section_title": true,
      "ja": "10.2.3. 証明書群"
    },
    {
      "indent": 3,
      "text": "The CertificateSet type provides a set of certificates. It is intended that the set be sufficient to contain certification paths from a recognized \"root\" or \"top-level certification authority\" to all of the sender certificates with which the set is associated. However, there may be more certificates than necessary, or there MAY be fewer than necessary.",
      "ja": "証明書群タイプは、証明書のセットを提供します。セットはセットが関連付けられている送信者の証明書のすべてに認められ、「ルート」または「トップレベルの認証局」からの証明書パスを含むのに十分であることが意図されています。しかし、必要以上の証明書があるかもしれない、あるいは必要に応じてより少ないがあるかもしれません。"
    },
    {
      "indent": 3,
      "text": "The precise meaning of a \"certification path\" is outside the scope of this document. However, [PROFILE] provides a definition for X.509 certificates. Some applications may impose upper limits on the length of a certification path; others may enforce certain relationships between the subjects and issuers of certificates within a certification path.",
      "ja": "「証明書パス」の正確な意味は、この文書の範囲外です。ただし、[PROFILE]はX.509証明書の定義を提供します。一部のアプリケーションは、認証パスの長さに上限を課すことができます。他のものは、証明書パス内の証明書のサブジェクトと発行者との間の特定の関係を強制することができます。"
    },
    {
      "indent": 6,
      "text": "CertificateSet ::= SET OF CertificateChoices",
      "raw": true
    },
    {
      "indent": 0,
      "text": "10.2.4. IssuerAndSerialNumber",
      "section_title": true,
      "ja": "10.2.4.  IssuerAndSerialNumber"
    },
    {
      "indent": 3,
      "text": "The IssuerAndSerialNumber type identifies a certificate, and thereby an entity and a public key, by the distinguished name of the certificate issuer and an issuer-specific certificate serial number.",
      "ja": "IssuerAndSerialNumberタイプは、証明書発行者および発行者固有の証明書のシリアル番号の識別名によって、証明書、およびそれによってエンティティ及び公開鍵を識別する。"
    },
    {
      "indent": 3,
      "text": "The definition of Name is taken from X.501 [X.501-88], and the definition of CertificateSerialNumber is taken from X.509 [X.509-97].",
      "ja": "名前の定義はX.501 [X.501-88]から取られ、そしてCertificateSerialNumberの定義は、[X.509-97] X.509から取られます。"
    },
    {
      "indent": 6,
      "text": "IssuerAndSerialNumber ::= SEQUENCE {\n  issuer Name,\n  serialNumber CertificateSerialNumber }",
      "raw": true
    },
    {
      "indent": 6,
      "text": "CertificateSerialNumber ::= INTEGER",
      "raw": true
    },
    {
      "indent": 0,
      "text": "10.2.5. CMSVersion",
      "section_title": true,
      "ja": "10.2.5.  CMSVersion"
    },
    {
      "indent": 3,
      "text": "The CMSVersion type gives a syntax version number, for compatibility with future revisions of this specification.",
      "ja": "CMSVersionタイプはこの仕様の今後の改正との互換性のため、構文バージョン番号を与えます。"
    },
    {
      "indent": 6,
      "text": "CMSVersion ::= INTEGER\n               { v0(0), v1(1), v2(2), v3(3), v4(4), v5(5) }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "10.2.6. UserKeyingMaterial",
      "section_title": true,
      "ja": "10.2.6.  UserKeyingMaterial"
    },
    {
      "indent": 3,
      "text": "The UserKeyingMaterial type gives a syntax for user keying material (UKM). Some key agreement algorithms require UKMs to ensure that a different key is generated each time the same two parties generate a pairwise key. The sender provides a UKM for use with a specific key agreement algorithm.",
      "ja": "UserKeyingMaterialタイプは、ユーザーの鍵材料（UKM）の構文を示します。いくつかの鍵合意アルゴリズムが異なるキーが同じ2人の当事者が鍵ペアを生成するたびに生成されることを保証するためにUKMsが必要です。送信者は、特定のキー合意アルゴリズムで使用するためのUKMを提供します。"
    },
    {
      "indent": 6,
      "text": "UserKeyingMaterial ::= OCTET STRING",
      "raw": true
    },
    {
      "indent": 0,
      "text": "10.2.7. OtherKeyAttribute",
      "section_title": true,
      "ja": "10.2.7.  OtherKeyAttribute"
    },
    {
      "indent": 3,
      "text": "The OtherKeyAttribute type gives a syntax for the inclusion of other key attributes that permit the recipient to select the key used by the sender. The attribute object identifier must be registered along with the syntax of the attribute itself. Use of this structure should be avoided since it might impede interoperability.",
      "ja": "OtherKeyAttributeタイプは、送信者が使用するキーを選択するために、受信者を許可し、他のキー属性を含めるための構文を示します。属性オブジェクト識別子は、属性自体の構文と一緒に登録する必要があります。それは、相互運用性を妨げる可能性があるので、この構造の使用は避けるべきです。"
    },
    {
      "indent": 6,
      "text": "OtherKeyAttribute ::= SEQUENCE {\n  keyAttrId OBJECT IDENTIFIER,\n  keyAttr ANY DEFINED BY keyAttrId OPTIONAL }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "11. Useful Attributes",
      "section_title": true,
      "ja": "11.便利な属性"
    },
    {
      "indent": 3,
      "text": "This section defines attributes that may be used with signed-data, enveloped-data, encrypted-data, or authenticated-data. The syntax of Attribute is compatible with X.501 [X.501-88] and RFC 3280 [PROFILE]. Some of the attributes defined in this section were originally defined in PKCS #9 [PKCS#9]; others were originally defined in a previous version of this specification [CMS1]. The attributes are not listed in any particular order.",
      "ja": "このセクションでは、署名されたデータ、エンベロープデータ、暗号化データ、または認証されたデータと共に使用することができる属性を定義します。属性の構文は、X.501 [X.501-88]およびRFC 3280 [PROFILE]と互換性があります。このセクションで定義された属性のいくつかは、もともとPKCS＃9で定義された[PKCS＃9]。他のものは本来、本明細書[CMS1]の以前のバージョンで定義されました。属性は、特定の順序で表示されていません。"
    },
    {
      "indent": 3,
      "text": "Additional attributes are defined in many places, notably the S/MIME Version 3 Message Specification [MSG] and the Enhanced Security Services for S/MIME [ESS], which also include recommendations on the placement of these attributes.",
      "ja": "追加の属性は、多くの場所で定義されており、特にS / MIMEバージョン3メッセージ仕様[MSG]とS / MIMEのためのセキュリティ強化サービス[ESS]は、また、これらの属性の配置に関する推奨事項が含まれています。"
    },
    {
      "indent": 0,
      "text": "11.1. Content Type",
      "section_title": true,
      "ja": "11.1. コンテンツの種類"
    },
    {
      "indent": 3,
      "text": "The content-type attribute type specifies the content type of the ContentInfo within signed-data or authenticated-data. The content-type attribute type MUST be present whenever signed attributes are present in signed-data or authenticated attributes present in authenticated-data. The content-type attribute value MUST match the encapContentInfo eContentType value in the signed-data or authenticated-data.",
      "ja": "コンテンツ・タイプの属性タイプは署名データや認証されたデータの中にContentInfoのコンテンツタイプを指定します。署名された属性は、署名されたデータや認証データに存在する認証された属性に存在しているときにコンテンツタイプ属性タイプが存在しなければなりません。コンテンツタイプ属性値は、符号付きデータまたは認証データにencapContentInfoのeContentType値と一致しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The content-type attribute MUST be a signed attribute or an authenticated attribute; it MUST NOT be an unsigned attribute, unauthenticated attribute, or unprotected attribute.",
      "ja": "コンテンツタイプ属性は、署名された属性または属性認証されなければなりません。それは未署名の属性、認証されていない属性、または保護されていない属性にすることはできません。"
    },
    {
      "indent": 3,
      "text": "The following object identifier identifies the content-type attribute:",
      "ja": "以下のオブジェクト識別子は、コンテンツ・タイプの属性を識別します。"
    },
    {
      "indent": 6,
      "text": "id-contentType OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n    us(840) rsadsi(113549) pkcs(1) pkcs9(9) 3 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Content-type attribute values have ASN.1 type ContentType:",
      "ja": "コンテンツ・タイプの属性値はASN.1タイプContentTypeをを持っています："
    },
    {
      "indent": 6,
      "text": "ContentType ::= OBJECT IDENTIFIER",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Even though the syntax is defined as a SET OF AttributeValue, a content-type attribute MUST have a single attribute value; zero or multiple instances of AttributeValue are not permitted.",
      "ja": "構文はAttributeValueのセットとして定義されていても、コンテンツ・タイプ属性は、単一の属性値を持たなければなりません。 AttributeValueのゼロまたは複数のインスタンスが許可されていません。"
    },
    {
      "indent": 3,
      "text": "The SignedAttributes and AuthAttributes syntaxes are each defined as a SET OF Attributes. The SignedAttributes in a signerInfo MUST NOT include multiple instances of the content-type attribute. Similarly, the AuthAttributes in an AuthenticatedData MUST NOT include multiple instances of the content-type attribute.",
      "ja": "signedAttributesのとAuthAttributes構文は、各属性の集合として定義されます。 SignerInfoでsignedAttributesのは、コンテンツ-type属性の複数のインスタンスを含んではいけません。同様に、AuthenticatedDataでAuthAttributesは、コンテンツタイプ属性の複数のインスタンスを含んではいけません。"
    },
    {
      "indent": 0,
      "text": "11.2. Message Digest",
      "section_title": true,
      "ja": "11.2. メッセージダイジェスト"
    },
    {
      "indent": 3,
      "text": "The message-digest attribute type specifies the message digest of the encapContentInfo eContent OCTET STRING being signed in signed-data (see section 5.4) or authenticated in authenticated-data (see section 9.2). For signed-data, the message digest is computed using the signer's message digest algorithm. For authenticated-data, the message digest is computed using the originator's message digest algorithm.",
      "ja": "メッセージダイジェスト属性タイプはencapContentInfo e-コンテンツOCTET STRINGのダイジェストが認証データに署名されたデータ（セクション5.4を参照）に署名または認証されるメッセージを指定する（セクション9.2を参照）。署名されたデータのために、メッセージダイジェストは、署名者のメッセージダイジェストアルゴリズムを使用して計算されます。認証データのために、メッセージダイジェストは、発信者のメッセージダイジェストアルゴリズムを使用して計算されます。"
    },
    {
      "indent": 3,
      "text": "Within signed-data, the message-digest signed attribute type MUST be present when there are any signed attributes present. Within authenticated-data, the message-digest authenticated attribute type MUST be present when there are any authenticated attributes present.",
      "ja": "存在する任意の署名された属性が存在する場合に署名されたデータの中に、メッセージダイジェスト署名された属性タイプが存在しなければなりません。存在する任意の認証された属性が存在する場合、認証データの中に、メッセージダイジェスト認証属性タイプが存在しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The message-digest attribute MUST be a signed attribute or an authenticated attribute; it MUST NOT be an unsigned attribute, unauthenticated attribute, or unprotected attribute.",
      "ja": "メッセージダイジェスト属性は、署名された属性または属性認証されなければなりません。それは未署名の属性、認証されていない属性、または保護されていない属性にすることはできません。"
    },
    {
      "indent": 3,
      "text": "The following object identifier identifies the message-digest attribute:",
      "ja": "以下のオブジェクト識別子は、メッセージダイジェスト属性を識別します。"
    },
    {
      "indent": 6,
      "text": "id-messageDigest OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n    us(840) rsadsi(113549) pkcs(1) pkcs9(9) 4 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Message-digest attribute values have ASN.1 type MessageDigest:",
      "ja": "メッセージダイジェスト属性値はASN.1タイプのMessageDigestを持っています："
    },
    {
      "indent": 6,
      "text": "MessageDigest ::= OCTET STRING",
      "raw": true
    },
    {
      "indent": 3,
      "text": "A message-digest attribute MUST have a single attribute value, even though the syntax is defined as a SET OF AttributeValue. There MUST NOT be zero or multiple instances of AttributeValue present.",
      "ja": "メッセージダイジェスト属性が構文はAttributeValueのセットとして定義されていても、単一の属性値を持たなければなりません。 AttributeValueの存在のゼロか複数のインスタンスがあってはなりません。"
    },
    {
      "indent": 3,
      "text": "The SignedAttributes syntax and AuthAttributes syntax are each defined as a SET OF Attributes. The SignedAttributes in a signerInfo MUST include only one instance of the message-digest attribute. Similarly, the AuthAttributes in an AuthenticatedData MUST include only one instance of the message-digest attribute.",
      "ja": "signedAttributesの構文とAuthAttributes構文は各属性の集合として定義されます。 SignerInfoでsignedAttributesのメッセージダイジェスト属性のインスタンスを1つだけ含まなければなりません。同様に、AuthenticatedDataでAuthAttributesはメッセージダイジェスト属性のインスタンスを1つだけ含まなければなりません。"
    },
    {
      "indent": 0,
      "text": "11.3. Signing Time",
      "section_title": true,
      "ja": "11.3. 時間の署名"
    },
    {
      "indent": 3,
      "text": "The signing-time attribute type specifies the time at which the signer (purportedly) performed the signing process. The signing-time attribute type is intended for use in signed-data.",
      "ja": "署名時間属性タイプは、（うわさによれば）署名者が署名プロセスを実行する時間を指定します。署名時の属性タイプは署名データでの使用を目的としています。"
    },
    {
      "indent": 3,
      "text": "The signing-time attribute MUST be a signed attribute or an authenticated attribute; it MUST NOT be an unsigned attribute, unauthenticated attribute, or unprotected attribute.",
      "ja": "署名時の属性は署名している属性または認証された属性であるに違いありません。それは未署名の属性、認証されていない属性、または保護されていない属性にすることはできません。"
    },
    {
      "indent": 3,
      "text": "The following object identifier identifies the signing-time attribute:",
      "ja": "以下のオブジェクト識別子は署名時の属性を識別します。"
    },
    {
      "indent": 6,
      "text": "id-signingTime OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n    us(840) rsadsi(113549) pkcs(1) pkcs9(9) 5 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Signing-time attribute values have ASN.1 type SigningTime:",
      "ja": "署名時の属性値はASN.1タイプSigningTimeがあります。"
    },
    {
      "indent": 6,
      "text": "SigningTime ::= Time",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Time ::= CHOICE {\n  utcTime UTCTime,\n  generalizedTime GeneralizedTime }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Note: The definition of Time matches the one specified in the 1997 version of X.509 [X.509-97].",
      "ja": "注意：時間の定義は、X.509 [X.509-97]の1997年バージョンで指定されたものと一致しました。"
    },
    {
      "indent": 3,
      "text": "Dates between 1 January 1950 and 31 December 2049 (inclusive) MUST be encoded as UTCTime. Any dates with year values before 1950 or after 2049 MUST be encoded as GeneralizedTime.",
      "ja": "1950年1月および2049年12月31日（含む）1との間の日付がUTC時刻として符号化されなければなりません。 1950年の前または後の2049年の値を持つ任意の日付はGeneralizedTimeとしてエンコードする必要があります。"
    },
    {
      "indent": 3,
      "text": "UTCTime values MUST be expressed in Coordinated Universal Time (formerly known as Greenwich Mean Time (GMT) and Zulu clock time) and MUST include seconds (i.e., times are YYMMDDHHMMSSZ), even where the number of seconds is zero. Midnight MUST be represented as \"YYMMDD000000Z\". Century information is implicit, and the century MUST be determined as follows:",
      "ja": "秒数がゼロの場合であってもUTC時刻値は、（すなわち、倍YYMMDDHHMMSSZある）協定世界時で表現されなければならない（旧グリニッジ標準時（GMT）とズールークロック時間として知られている）および秒を含まなければなりません。真夜中は「YYMMDD000000Z」として表現されなければなりません。世紀情報は暗黙的であり、次のように世紀を決定しなければなりません。"
    },
    {
      "indent": 6,
      "text": "Where YY is greater than or equal to 50, the year MUST be interpreted as 19YY; and",
      "ja": "YYが50以上である場合、年は19YYとして解釈されなければなりません。そして"
    },
    {
      "indent": 6,
      "text": "Where YY is less than 50, the year MUST be interpreted as 20YY.",
      "ja": "YYが50未満である場合は、年は20YYとして解釈されなければなりません。"
    },
    {
      "indent": 3,
      "text": "GeneralizedTime values MUST be expressed in Coordinated Universal Time and MUST include seconds (i.e., times are YYYYMMDDHHMMSSZ), even where the number of seconds is zero. GeneralizedTime values MUST NOT include fractional seconds.",
      "ja": "GeneralizedTimeの値は、協定世界時で表さなければならなくて、秒数がゼロである場合でも、秒（すなわち、倍YYYYMMDDHHMMSSZいる）を含める必要があります。 GeneralizedTimeの値は、小数点以下の秒を含んではいけません。"
    },
    {
      "indent": 3,
      "text": "A signing-time attribute MUST have a single attribute value, even though the syntax is defined as a SET OF AttributeValue. There MUST NOT be zero or multiple instances of AttributeValue present.",
      "ja": "署名時の属性は、構文はAttributeValueの集合として定義されていても、単一の属性値を持たなければなりません。 AttributeValueの存在のゼロか複数のインスタンスがあってはなりません。"
    },
    {
      "indent": 3,
      "text": "The SignedAttributes syntax and the AuthAttributes syntax are each defined as a SET OF Attributes. The SignedAttributes in a signerInfo MUST NOT include multiple instances of the signing-time attribute. Similarly, the AuthAttributes in an AuthenticatedData MUST NOT include multiple instances of the signing-time attribute.",
      "ja": "signedAttributesの構文とAuthAttributes構文は各属性の集合として定義されます。 SignerInfoでsignedAttributesのは、署名時刻属性の複数のインスタンスを含んではいけません。同様に、AuthenticatedDataでAuthAttributesは、署名時刻属性の複数のインスタンスを含んではいけません。"
    },
    {
      "indent": 3,
      "text": "No requirement is imposed concerning the correctness of the signing time, and acceptance of a purported signing time is a matter of a recipient's discretion. It is expected, however, that some signers, such as time-stamp servers, will be trusted implicitly.",
      "ja": "要件は、署名時間の正確性に関して課されていない、と主張署名時間の受け入れは、受信者の裁量の問題でありませ。このようなタイムスタンプサーバなどのいくつかの署名者は、暗黙的に信頼されることが期待されています。"
    },
    {
      "indent": 0,
      "text": "11.4. Countersignature",
      "section_title": true,
      "ja": "11.4. 副署"
    },
    {
      "indent": 3,
      "text": "The countersignature attribute type specifies one or more signatures on the contents octets of the signature OCTET STRING in a SignerInfo value of the signed-data. That is, the message digest is computed over the octets comprising the value of the OCTET STRING, neither the tag nor length octets are included. Thus, the countersignature attribute type countersigns (signs in serial) another signature.",
      "ja": "副署属性タイプは、符号付きデータのSignerInfo値に署名​​OCTET文字列の内容オクテット上の1人のまたは複数の署名を指定します。すなわち、メッセージダイジェストは、オクテット文字列の値を含むオクテットにわたって計算されていないが、どちらもタグも長さオクテットが含まれます。したがって、副署は、別の署名（シリアルで標識）型副署属性。"
    },
    {
      "indent": 3,
      "text": "The countersignature attribute MUST be an unsigned attribute; it MUST NOT be a signed attribute, an authenticated attribute, an unauthenticated attribute, or an unprotected attribute.",
      "ja": "副署属性は未署名の属性であるに違いありません。それが署名している属性、認証された属性、認証されていない属性、または保護されていない属性にすることはできません。"
    },
    {
      "indent": 3,
      "text": "The following object identifier identifies the countersignature attribute:",
      "ja": "以下のオブジェクト識別子は副署属性を識別します。"
    },
    {
      "indent": 6,
      "text": "id-countersignature OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n    us(840) rsadsi(113549) pkcs(1) pkcs9(9) 6 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Countersignature attribute values have ASN.1 type Countersignature:",
      "ja": "副署属性値はASN.1タイプの副署があります。"
    },
    {
      "indent": 6,
      "text": "Countersignature ::= SignerInfo",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Countersignature values have the same meaning as SignerInfo values for ordinary signatures, except that:",
      "ja": "副署値はことを除いて、通常の署名のためのSignerInfo値と同じ意味を持ちます。"
    },
    {
      "indent": 6,
      "text": "1. The signedAttributes field MUST NOT contain a content-type attribute; there is no content type for countersignatures.",
      "ja": "1. signedAttributesのフィールドは、コンテンツ・タイプの属性を含んではなりません。 countersignaturesのためのコンテンツタイプがありません。"
    },
    {
      "indent": 6,
      "text": "2. The signedAttributes field MUST contain a message-digest attribute if it contains any other attributes.",
      "ja": "それは他の属性が含まれている場合2. signedAttributesのフィールドは、メッセージダイジェスト属性を含まなければなりません。"
    },
    {
      "indent": 6,
      "text": "3. The input to the message-digesting process is the contents octets of the DER encoding of the signatureValue field of the SignerInfo value with which the attribute is associated.",
      "ja": "3.メッセージ消化プロセスへの入力は、属性が関連付けられているのSignerInfo値のsignatureValueフィールドのDER符号化の内容オクテットです。"
    },
    {
      "indent": 3,
      "text": "A countersignature attribute can have multiple attribute values. The syntax is defined as a SET OF AttributeValue, and there MUST be one or more instances of AttributeValue present.",
      "ja": "副署属性は複数の属性値を持つことができます。構文はAttributeValueのセットとして定義され、AttributeValueの存在の1つ以上のインスタンスが存在していなければなりません。"
    },
    {
      "indent": 3,
      "text": "The UnsignedAttributes syntax is defined as a SET OF Attributes. The UnsignedAttributes in a signerInfo may include multiple instances of the countersignature attribute.",
      "ja": "UnsignedAttributes構文は属性の集合として定義されます。 SignerInfoでUnsignedAttributesは副署属性の複数のインスタンスを含むことができます。"
    },
    {
      "indent": 3,
      "text": "A countersignature, since it has type SignerInfo, can itself contain a countersignature attribute. Thus, it is possible to construct an arbitrarily long series of countersignatures.",
      "ja": "それ自体は副署属性を含めることができます、のSignerInfoを入力しているので副署、。したがって、countersignaturesの任意の長いシリーズを構築することが可能です。"
    },
    {
      "indent": 0,
      "text": "12. ASN.1 Modules",
      "section_title": true,
      "ja": "12. ASN.1モジュール"
    },
    {
      "indent": 3,
      "text": "Section 12.1 contains the ASN.1 module for the CMS, and section 12.2 contains the ASN.1 module for the Version 1 Attribute Certificate.",
      "ja": "12.1はCMSのためのASN.1モジュールを含み、セクション12.2は、バージョン1属性証明書のためのASN.1モジュールが含まれています。"
    },
    {
      "indent": 0,
      "text": "12.1. CMS ASN.1 Module",
      "section_title": true,
      "ja": "12.1.  CMS ASN.1モジュール"
    },
    {
      "indent": 3,
      "text": "CryptographicMessageSyntax2004 { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) modules(0) cms-2004(24) }",
      "ja": "CryptographicMessageSyntax2004 {ISO（1）部材本体（2）米国（840）RSADSI（113549）PKCS（1）PKCS-9（9）SMIME（0）CMS-2004（16）モジュール（24）}"
    },
    {
      "indent": 3,
      "text": "DEFINITIONS IMPLICIT TAGS ::=\nBEGIN",
      "raw": true
    },
    {
      "indent": 3,
      "text": "-- EXPORTS All -- The types and values defined in this module are exported for use -- in the other ASN.1 modules. Other applications may use them for -- their own purposes.",
      "ja": " - このモジュールで定義されたタイプと値が使用のためにエクスポートされる -   - 他のASN.1モジュールにすべてをエクスポートします。独自の目的 - 他のアプリケーションがためにそれらを使用することができます。"
    },
    {
      "indent": 3,
      "text": "IMPORTS",
      "ja": "輸入"
    },
    {
      "indent": 5,
      "text": "-- Imports from RFC 3280 [PROFILE], Appendix A.1 AlgorithmIdentifier, Certificate, CertificateList, CertificateSerialNumber, Name FROM PKIX1Explicit88 { iso(1) identified-organization(3) dod(6) internet(1) security(5) mechanisms(5) pkix(7) mod(0) pkix1-explicit(18) }",
      "ja": " -  RFC 3280からの輸入[PROFILE]、付録A.1のAlgorithmIdentifier、証明書、CertificateListの、CertificateSerialNumber、名前PKIX1Explicit88 {ISO（1）同定された組織（3）DOD（6）インターネット（1）セキュリティ（5）メカニズム（FROM 5）PKIX（7）MOD（0）pkix1、明示的な（18）}"
    },
    {
      "indent": 5,
      "text": "-- Imports from RFC 3281 [ACPROFILE], Appendix B AttributeCertificate FROM PKIXAttributeCertificate { iso(1) identified-organization(3) dod(6) internet(1) security(5) mechanisms(5) pkix(7) mod(0) attribute-cert(12) }",
      "ja": " -  RFC 3281からの輸入[ACPROFILE]、PKIXAttributeCertificate FROM付録B AttributeCertificate {ISO（1）同定された組織（3）DOD（6）インターネット（1）セキュリティ（5）メカニズム（5）PKIX（7）MOD（0）属性-CERT（12）}"
    },
    {
      "indent": 5,
      "text": "-- Imports from Appendix B of this document AttributeCertificateV1 FROM AttributeCertificateVersion1 { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) modules(0) v1AttrCert(15) } ;",
      "ja": " -  AttributeCertificateVersion1 {ISO（1）部材本体（2）米国（840）RSADSI（113549）PKCS（1）PKCS-9（9）SMIME（16）モジュール（0）v1AttrCert FROMこの文書AttributeCertificateV1の付録Bからの輸入（15）}。"
    },
    {
      "indent": 3,
      "text": "-- Cryptographic Message Syntax",
      "ja": " - 暗号メッセージ構文"
    },
    {
      "indent": 3,
      "text": "ContentInfo ::= SEQUENCE {\n  contentType ContentType,\n  content [0] EXPLICIT ANY DEFINED BY contentType }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ContentType ::= OBJECT IDENTIFIER",
      "raw": true
    },
    {
      "indent": 3,
      "text": "SignedData ::= SEQUENCE {\n  version CMSVersion,\n  digestAlgorithms DigestAlgorithmIdentifiers,\n  encapContentInfo EncapsulatedContentInfo,\n  certificates [0] IMPLICIT CertificateSet OPTIONAL,\n  crls [1] IMPLICIT RevocationInfoChoices OPTIONAL,\n  signerInfos SignerInfos }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "DigestAlgorithmIdentifiers ::= SET OF DigestAlgorithmIdentifier",
      "raw": true
    },
    {
      "indent": 3,
      "text": "SignerInfos ::= SET OF SignerInfo",
      "raw": true
    },
    {
      "indent": 3,
      "text": "EncapsulatedContentInfo ::= SEQUENCE {\n  eContentType ContentType,\n  eContent [0] EXPLICIT OCTET STRING OPTIONAL }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "SignerInfo ::= SEQUENCE {\n  version CMSVersion,\n  sid SignerIdentifier,\n  digestAlgorithm DigestAlgorithmIdentifier,\n  signedAttrs [0] IMPLICIT SignedAttributes OPTIONAL,\n  signatureAlgorithm SignatureAlgorithmIdentifier,\n  signature SignatureValue,\n  unsignedAttrs [1] IMPLICIT UnsignedAttributes OPTIONAL }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "SignerIdentifier ::= CHOICE {\n  issuerAndSerialNumber IssuerAndSerialNumber,\n  subjectKeyIdentifier [0] SubjectKeyIdentifier }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "SignedAttributes ::= SET SIZE (1..MAX) OF Attribute",
      "raw": true
    },
    {
      "indent": 3,
      "text": "UnsignedAttributes ::= SET SIZE (1..MAX) OF Attribute",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Attribute ::= SEQUENCE {\n  attrType OBJECT IDENTIFIER,\n  attrValues SET OF AttributeValue }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "AttributeValue ::= ANY",
      "raw": true
    },
    {
      "indent": 3,
      "text": "SignatureValue ::= OCTET STRING",
      "raw": true
    },
    {
      "indent": 3,
      "text": "EnvelopedData ::= SEQUENCE {\n  version CMSVersion,\n  originatorInfo [0] IMPLICIT OriginatorInfo OPTIONAL,\n  recipientInfos RecipientInfos,\n  encryptedContentInfo EncryptedContentInfo,\n  unprotectedAttrs [1] IMPLICIT UnprotectedAttributes OPTIONAL }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "OriginatorInfo ::= SEQUENCE {\n  certs [0] IMPLICIT CertificateSet OPTIONAL,\n  crls [1] IMPLICIT RevocationInfoChoices OPTIONAL }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "RecipientInfos ::= SET SIZE (1..MAX) OF RecipientInfo",
      "raw": true
    },
    {
      "indent": 3,
      "text": "EncryptedContentInfo ::= SEQUENCE {\n  contentType ContentType,\n  contentEncryptionAlgorithm ContentEncryptionAlgorithmIdentifier,\n  encryptedContent [0] IMPLICIT EncryptedContent OPTIONAL }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "EncryptedContent ::= OCTET STRING",
      "raw": true
    },
    {
      "indent": 3,
      "text": "UnprotectedAttributes ::= SET SIZE (1..MAX) OF Attribute",
      "raw": true
    },
    {
      "indent": 3,
      "text": "RecipientInfo ::= CHOICE {\n  ktri KeyTransRecipientInfo,\n  kari [1] KeyAgreeRecipientInfo,\n  kekri [2] KEKRecipientInfo,\n  pwri [3] PasswordRecipientInfo,\n  ori [4] OtherRecipientInfo }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "EncryptedKey ::= OCTET STRING",
      "raw": true
    },
    {
      "indent": 3,
      "text": "KeyTransRecipientInfo ::= SEQUENCE {\n  version CMSVersion,  -- always set to 0 or 2\n  rid RecipientIdentifier,\n  keyEncryptionAlgorithm KeyEncryptionAlgorithmIdentifier,\n  encryptedKey EncryptedKey }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "RecipientIdentifier ::= CHOICE {\n  issuerAndSerialNumber IssuerAndSerialNumber,\n  subjectKeyIdentifier [0] SubjectKeyIdentifier }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "KeyAgreeRecipientInfo ::= SEQUENCE {\n  version CMSVersion,  -- always set to 3\n  originator [0] EXPLICIT OriginatorIdentifierOrKey,\n  ukm [1] EXPLICIT UserKeyingMaterial OPTIONAL,\n  keyEncryptionAlgorithm KeyEncryptionAlgorithmIdentifier,\n  recipientEncryptedKeys RecipientEncryptedKeys }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "OriginatorIdentifierOrKey ::= CHOICE {\n  issuerAndSerialNumber IssuerAndSerialNumber,\n  subjectKeyIdentifier [0] SubjectKeyIdentifier,\n  originatorKey [1] OriginatorPublicKey }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "OriginatorPublicKey ::= SEQUENCE {\n  algorithm AlgorithmIdentifier,\n  publicKey BIT STRING }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "RecipientEncryptedKeys ::= SEQUENCE OF RecipientEncryptedKey",
      "raw": true
    },
    {
      "indent": 3,
      "text": "RecipientEncryptedKey ::= SEQUENCE {\n  rid KeyAgreeRecipientIdentifier,\n  encryptedKey EncryptedKey }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "KeyAgreeRecipientIdentifier ::= CHOICE {\n  issuerAndSerialNumber IssuerAndSerialNumber,\n  rKeyId [0] IMPLICIT RecipientKeyIdentifier }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "RecipientKeyIdentifier ::= SEQUENCE {\n  subjectKeyIdentifier SubjectKeyIdentifier,\n  date GeneralizedTime OPTIONAL,\n  other OtherKeyAttribute OPTIONAL }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "SubjectKeyIdentifier ::= OCTET STRING",
      "raw": true
    },
    {
      "indent": 3,
      "text": "KEKRecipientInfo ::= SEQUENCE {\n  version CMSVersion,  -- always set to 4\n  kekid KEKIdentifier,\n  keyEncryptionAlgorithm KeyEncryptionAlgorithmIdentifier,\n  encryptedKey EncryptedKey }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "KEKIdentifier ::= SEQUENCE {\n  keyIdentifier OCTET STRING,\n  date GeneralizedTime OPTIONAL,\n  other OtherKeyAttribute OPTIONAL }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "PasswordRecipientInfo ::= SEQUENCE {\n  version CMSVersion,   -- always set to 0\n  keyDerivationAlgorithm [0] KeyDerivationAlgorithmIdentifier\n                             OPTIONAL,\n  keyEncryptionAlgorithm KeyEncryptionAlgorithmIdentifier,\n  encryptedKey EncryptedKey }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "OtherRecipientInfo ::= SEQUENCE {\n  oriType OBJECT IDENTIFIER,\n  oriValue ANY DEFINED BY oriType }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "DigestedData ::= SEQUENCE {\n  version CMSVersion,\n  digestAlgorithm DigestAlgorithmIdentifier,\n  encapContentInfo EncapsulatedContentInfo,\n  digest Digest }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Digest ::= OCTET STRING",
      "raw": true
    },
    {
      "indent": 3,
      "text": "EncryptedData ::= SEQUENCE {\n  version CMSVersion,\n  encryptedContentInfo EncryptedContentInfo,\n  unprotectedAttrs [1] IMPLICIT UnprotectedAttributes OPTIONAL }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "AuthenticatedData ::= SEQUENCE {\n  version CMSVersion,\n  originatorInfo [0] IMPLICIT OriginatorInfo OPTIONAL,\n  recipientInfos RecipientInfos,\n  macAlgorithm MessageAuthenticationCodeAlgorithm,\n  digestAlgorithm [1] DigestAlgorithmIdentifier OPTIONAL,\n  encapContentInfo EncapsulatedContentInfo,\n  authAttrs [2] IMPLICIT AuthAttributes OPTIONAL,\n  mac MessageAuthenticationCode,\n  unauthAttrs [3] IMPLICIT UnauthAttributes OPTIONAL }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "AuthAttributes ::= SET SIZE (1..MAX) OF Attribute",
      "raw": true
    },
    {
      "indent": 3,
      "text": "UnauthAttributes ::= SET SIZE (1..MAX) OF Attribute",
      "raw": true
    },
    {
      "indent": 3,
      "text": "MessageAuthenticationCode ::= OCTET STRING",
      "raw": true
    },
    {
      "indent": 3,
      "text": "DigestAlgorithmIdentifier ::= AlgorithmIdentifier",
      "raw": true
    },
    {
      "indent": 3,
      "text": "SignatureAlgorithmIdentifier ::= AlgorithmIdentifier",
      "raw": true
    },
    {
      "indent": 3,
      "text": "KeyEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ContentEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier",
      "raw": true
    },
    {
      "indent": 3,
      "text": "MessageAuthenticationCodeAlgorithm ::= AlgorithmIdentifier",
      "raw": true
    },
    {
      "indent": 3,
      "text": "KeyDerivationAlgorithmIdentifier ::= AlgorithmIdentifier",
      "raw": true
    },
    {
      "indent": 3,
      "text": "RevocationInfoChoices ::= SET OF RevocationInfoChoice",
      "raw": true
    },
    {
      "indent": 3,
      "text": "RevocationInfoChoice ::= CHOICE {\n  crl CertificateList,\n  other [1] IMPLICIT OtherRevocationInfoFormat }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "OtherRevocationInfoFormat ::= SEQUENCE {\n  otherRevInfoFormat OBJECT IDENTIFIER,\n  otherRevInfo ANY DEFINED BY otherRevInfoFormat }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "CertificateChoices ::= CHOICE {\n  certificate Certificate,\n  extendedCertificate [0] IMPLICIT ExtendedCertificate,  -- Obsolete\n  v1AttrCert [1] IMPLICIT AttributeCertificateV1,        -- Obsolete\n  v2AttrCert [2] IMPLICIT AttributeCertificateV2,\n  other [3] IMPLICIT OtherCertificateFormat }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "AttributeCertificateV2 ::= AttributeCertificate",
      "raw": true
    },
    {
      "indent": 3,
      "text": "OtherCertificateFormat ::= SEQUENCE {\n  otherCertFormat OBJECT IDENTIFIER,\n  otherCert ANY DEFINED BY otherCertFormat }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "CertificateSet ::= SET OF CertificateChoices",
      "raw": true
    },
    {
      "indent": 3,
      "text": "IssuerAndSerialNumber ::= SEQUENCE {\n  issuer Name,\n  serialNumber CertificateSerialNumber }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "CMSVersion ::= INTEGER  { v0(0), v1(1), v2(2), v3(3), v4(4), v5(5) }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "UserKeyingMaterial ::= OCTET STRING",
      "raw": true
    },
    {
      "indent": 3,
      "text": "OtherKeyAttribute ::= SEQUENCE {\n  keyAttrId OBJECT IDENTIFIER,\n  keyAttr ANY DEFINED BY keyAttrId OPTIONAL }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "-- Content Type Object Identifiers",
      "ja": " - コンテンツタイプのオブジェクト識別子"
    },
    {
      "indent": 3,
      "text": "id-ct-contentInfo OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n    us(840) rsadsi(113549) pkcs(1) pkcs9(9) smime(16) ct(1) 6 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "id-data OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n    us(840) rsadsi(113549) pkcs(1) pkcs7(7) 1 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "id-signedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n    us(840) rsadsi(113549) pkcs(1) pkcs7(7) 2 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "id-envelopedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n    us(840) rsadsi(113549) pkcs(1) pkcs7(7) 3 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "id-digestedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n    us(840) rsadsi(113549) pkcs(1) pkcs7(7) 5 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "id-encryptedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n    us(840) rsadsi(113549) pkcs(1) pkcs7(7) 6 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "id-ct-authData OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n    us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) ct(1) 2 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "-- The CMS Attributes",
      "ja": " -  CMS属性"
    },
    {
      "indent": 3,
      "text": "MessageDigest ::= OCTET STRING",
      "raw": true
    },
    {
      "indent": 3,
      "text": "SigningTime  ::= Time",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Time ::= CHOICE {\n  utcTime UTCTime,\n  generalTime GeneralizedTime }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Countersignature ::= SignerInfo",
      "raw": true
    },
    {
      "indent": 3,
      "text": "-- Attribute Object Identifiers",
      "ja": " - 属性のオブジェクト識別子"
    },
    {
      "indent": 3,
      "text": "id-contentType OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n    us(840) rsadsi(113549) pkcs(1) pkcs9(9) 3 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "id-messageDigest OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n    us(840) rsadsi(113549) pkcs(1) pkcs9(9) 4 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "id-signingTime OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n    us(840) rsadsi(113549) pkcs(1) pkcs9(9) 5 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "id-countersignature OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n    us(840) rsadsi(113549) pkcs(1) pkcs9(9) 6 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "-- Obsolete Extended Certificate syntax from PKCS#6",
      "ja": " -  PKCS＃6から廃止された拡張証明書の構文"
    },
    {
      "indent": 3,
      "text": "ExtendedCertificateOrCertificate ::= CHOICE {\n  certificate Certificate,\n  extendedCertificate [0] IMPLICIT ExtendedCertificate }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ExtendedCertificate ::= SEQUENCE {\n  extendedCertificateInfo ExtendedCertificateInfo,\n  signatureAlgorithm SignatureAlgorithmIdentifier,\n  signature Signature }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "ExtendedCertificateInfo ::= SEQUENCE {\n  version CMSVersion,\n  certificate Certificate,\n  attributes UnauthAttributes }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Signature ::= BIT STRING",
      "raw": true
    },
    {
      "indent": 3,
      "text": "END -- of CryptographicMessageSyntax2004",
      "ja": "END  - 暗号メッセージ構文2004"
    },
    {
      "indent": 0,
      "text": "12.2. Version 1 Attribute Certificate ASN.1 Module",
      "section_title": true,
      "ja": "12.2. バージョン1つの項目証明書のASN.1モジュール"
    },
    {
      "indent": 3,
      "text": "AttributeCertificateVersion1 { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) modules(0) v1AttrCert(15) }",
      "ja": "AttributeCertificateVersion1 {ISO（1）部材本体（2）米国（840）RSADSI（113549）PKCS（1）PKCS-9（9）SMIME（16）モジュール（0）v1AttrCert（15）}"
    },
    {
      "indent": 3,
      "text": "DEFINITIONS EXPLICIT TAGS ::=\nBEGIN",
      "raw": true
    },
    {
      "indent": 3,
      "text": "-- EXPORTS All",
      "ja": " - すべてのエクスポート"
    },
    {
      "indent": 3,
      "text": "IMPORTS",
      "ja": "輸入"
    },
    {
      "indent": 5,
      "text": "-- Imports from RFC 3280 [PROFILE], Appendix A.1 AlgorithmIdentifier, Attribute, CertificateSerialNumber, Extensions, UniqueIdentifier FROM PKIX1Explicit88 { iso(1) identified-organization(3) dod(6) internet(1) security(5) mechanisms(5) pkix(7) mod(0) pkix1-explicit(18) }",
      "ja": " -  RFC 3280からの輸入[PROFILE]、付録A.1のAlgorithmIdentifier、属性、CertificateSerialNumber、拡張、のUniqueIdentifier PKIX1Explicit88 FROM {ISO（1）同定された組織（3）DOD（6）インターネット（1）セキュリティ（5）メカニズム（ 5）PKIX（7）MOD（0）pkix1、明示的な（18）}"
    },
    {
      "indent": 5,
      "text": "-- Imports from RFC 3280 [PROFILE], Appendix A.2 GeneralNames FROM PKIX1Implicit88 { iso(1) identified-organization(3) dod(6) internet(1) security(5) mechanisms(5) pkix(7) mod(0) pkix1-implicit(19) }",
      "ja": " -  RFC 3280 [PROFILE]、PKIX1Implicit88 FROM付録A.2のGeneralNames {ISO（1）同定された組織（3）DOD（6）インターネット（1）セキュリティ（5）メカニズム（5）PKIX（7）MODからの輸入（ 0）pkix1-暗黙（19）}"
    },
    {
      "indent": 5,
      "text": "-- Imports from RFC 3281 [ACPROFILE], Appendix B AttCertValidityPeriod, IssuerSerial FROM PKIXAttributeCertificate { iso(1) identified-organization(3) dod(6) internet(1) security(5) mechanisms(5) pkix(7) mod(0) attribute-cert(12) } ;",
      "ja": " -  RFC 3281 [ACPROFILE]、PKIXAttributeCertificate FROM付録B AttCertValidityPeriod、IssuerSerial {ISO（1）同定された組織（3）DOD（6）インターネット（1）セキュリティ（5）メカニズム（5）PKIX（7）MODからの輸入（ 0）属性-CERT（12）}。"
    },
    {
      "indent": 3,
      "text": "-- Definition extracted from X.509-1997 [X.509-97], but -- different type names are used to avoid collisions.",
      "ja": " - 定義X.509-1997 [X.509-97]から抽出されたが、 - 異なるタイプ名は、衝突を回避するために使用されます。"
    },
    {
      "indent": 3,
      "text": "AttributeCertificateV1 ::= SEQUENCE {\n  acInfo AttributeCertificateInfoV1,\n  signatureAlgorithm AlgorithmIdentifier,\n  signature BIT STRING }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "AttributeCertificateInfoV1 ::= SEQUENCE {\n  version AttCertVersionV1 DEFAULT v1,\n  subject CHOICE {\n    baseCertificateID [0] IssuerSerial,\n      -- associated with a Public Key Certificate\n    subjectName [1] GeneralNames },\n      -- associated with a name\n  issuer GeneralNames,\n  signature AlgorithmIdentifier,\n  serialNumber CertificateSerialNumber,\n  attCertValidityPeriod AttCertValidityPeriod,\n  attributes SEQUENCE OF Attribute,\n  issuerUniqueID UniqueIdentifier OPTIONAL,\n  extensions Extensions OPTIONAL }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "AttCertVersionV1 ::= INTEGER { v1(0) }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "END -- of AttributeCertificateVersion1",
      "ja": "END  - 属性証明書のバージョンの1"
    },
    {
      "indent": 0,
      "text": "13. References",
      "section_title": true,
      "ja": "13.参考文献"
    },
    {
      "indent": 0,
      "text": "13.1. Normative References",
      "section_title": true,
      "ja": "13.1. 引用規格"
    },
    {
      "indent": 3,
      "text": "[ACPROFILE] Farrell, S. and R. Housley, \"An Internet Attribute Certificate Profile for Authorization\", RFC 3281, April 2002.",
      "ja": "[ACPROFILE]ファレル、S.とR. Housley氏、 \"認可のためのインターネット属性証明書プロフィール\"、RFC 3281、2002年4月。"
    },
    {
      "indent": 3,
      "text": "[PROFILE] Housley, R., Polk, W., Ford, W., and D. Solo, \"Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile\", RFC 3280, April 2002.",
      "ja": "[PROFILE] Housley氏、R.、ポーク、W.、フォード、W.、およびD.ソロ、 \"インターネットX.509公開鍵暗号基盤証明書と証明書失効リスト（CRL）プロフィール\"、RFC 3280、2002年4月。"
    },
    {
      "indent": 3,
      "text": "[STDWORDS] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[STDWORDS]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[X.208-88] CCITT. Recommendation X.208: Specification of Abstract Syntax Notation One (ASN.1). 1988.",
      "ja": "【X.208-88] CCITT。勧告X.208：抽象構文記法1（ASN.1）の仕様。 1988。"
    },
    {
      "indent": 3,
      "text": "[X.209-88] CCITT. Recommendation X.209: Specification of Basic Encoding Rules for Abstract Syntax Notation One (ASN.1). 1988.",
      "ja": "【X.209-88] CCITT。勧告X. 209：抽象構文記法1（ASN.1）のための基本的な符号化規則の仕様。 1988。"
    },
    {
      "indent": 3,
      "text": "[X.501-88] CCITT. Recommendation X.501: The Directory - Models. 1988.",
      "ja": "【X.501-88] CCITT。勧告X.501：ディレクトリ - モデル。 1988。"
    },
    {
      "indent": 3,
      "text": "[X.509-88] CCITT. Recommendation X.509: The Directory - Authentication Framework. 1988.",
      "ja": "【X.509-88] CCITT。勧告X.509：ディレクトリ - 認証フレームワーク。 1988。"
    },
    {
      "indent": 3,
      "text": "[X.509-97] ITU-T. Recommendation X.509: The Directory - Authentication Framework. 1997.",
      "ja": "【X.509-97] ITU-T。勧告X.509：ディレクトリ - 認証フレームワーク。 1997。"
    },
    {
      "indent": 3,
      "text": "[X.509-00] ITU-T. Recommendation X.509: The Directory - Authentication Framework. 2000.",
      "ja": "【X.509-00] ITU-T。勧告X.509：ディレクトリ - 認証フレームワーク。 2000。"
    },
    {
      "indent": 0,
      "text": "13.2. Informative References",
      "section_title": true,
      "ja": "13.2. 参考文献"
    },
    {
      "indent": 3,
      "text": "[CMS1] Housley, R., \"Cryptographic Message Syntax\", RFC 2630, June 1999.",
      "ja": "[CMS1] Housley氏、R.、 \"暗号メッセージ構文\"、RFC 2630、1999年6月。"
    },
    {
      "indent": 3,
      "text": "[CMS2] Housley, R., \"Cryptographic Message Syntax (CMS)\", RFC 3369, August 2002.",
      "ja": "[CMS2] Housley氏、R.、 \"暗号メッセージ構文（CMS）\"、RFC 3369、2002年8月。"
    },
    {
      "indent": 3,
      "text": "[CMSALG] Housley, R., \"Cryptographic Message Syntax (CMS) Algorithms\", RFC 3370, August 2002.",
      "ja": "[CMSALG] Housley氏、R.、 \"暗号メッセージ構文（CMS）アルゴリズム\"、RFC 3370、2002年8月。"
    },
    {
      "indent": 3,
      "text": "[ESS] Hoffman, P., \"Enhanced Security Services for S/MIME\", RFC 2634, June 1999.",
      "ja": "[ESS]ホフマン、P.、 \"S / MIMEのためのセキュリティサービスの強化\"、RFC 2634、1999年6月。"
    },
    {
      "indent": 3,
      "text": "[MSAC] Microsoft Development Network (MSDN) Library, \"Authenticode\", April 2004 Release.",
      "ja": "[MSAC]マイクロソフト開発ネットワーク（MSDN）ライブラリ、 \"Authenticodeの\"、2004年4月リリース。"
    },
    {
      "indent": 3,
      "text": "[MSG] Ramsdell, B., \"S/MIME Version 3.1 Message Specification\", RFC 3851, July 2004.",
      "ja": "[MSG] Ramsdell、B.、 \"S / MIMEバージョン3.1メッセージ仕様\"、RFC 3851、2004年7月。"
    },
    {
      "indent": 3,
      "text": "[OCSP] Myers, M., Ankney, R., Malpani, A., Galperin, S. and C. Adams, \"X.509 Internet Public Key Infrastructure Online Certificate Status Protocol - OCSP\", RFC 2560, June 1999.",
      "ja": "[OCSP]マイヤーズ、M.、Ankney、R.、Malpani、A.、Galperin、S.とC.アダムス、 \"X.509のインターネット公開鍵暗号基盤のオンライン証明書状態プロトコル -  OCSP\"、RFC 2560、1999年6月。"
    },
    {
      "indent": 3,
      "text": "[OLDMSG] Dusse, S., Hoffman, P., Ramsdell, B., Lundblade, L., and L. Repka, \"S/MIME Version 2 Message Specification\", RFC 2311, March 1998.",
      "ja": "【OLDMSG] Dusse、S.、ホフマン、P.、Ramsdell、B.、Lundblade、L.、及びL. Repka、 \"S / MIMEバージョン2メッセージ仕様\"、RFC 2311、1998年3月。"
    },
    {
      "indent": 3,
      "text": "[PKCS#6] RSA Laboratories. PKCS #6: Extended-Certificate Syntax Standard, Version 1.5. November 1993.",
      "ja": "[PKCS＃6] RSA研究所。 PKCS＃6：構文規格、バージョン1.5の証明書を拡張。 1993年11月。"
    },
    {
      "indent": 3,
      "text": "[PKCS#7] Kaliski, B., \"PKCS #7: Cryptographic Message Syntax Version 1.5\", RFC 2315, March 1998.",
      "ja": "[PKCS＃7] Kaliski、B.、 \"PKCS＃7：暗号メッセージ構文バージョン1.5\"、RFC 2315、1998年3月。"
    },
    {
      "indent": 3,
      "text": "[PKCS#9] RSA Laboratories. PKCS #9: Selected Attribute Types, Version 1.1. November 1993.",
      "ja": "[PKCS＃9] RSA研究所。 PKCS＃9：選択した属性の種類、バージョン1.1。 1993年11月。"
    },
    {
      "indent": 3,
      "text": "[PWRI] Gutmann, P., \"Password-based Encryption for CMS\", RFC 3211, December 2001.",
      "ja": "[土木研究所] Gutmann氏、P.、 \"CMSのパスワードベースの暗号化\"、RFC 3211、2001年12月。"
    },
    {
      "indent": 3,
      "text": "[RANDOM] Eastlake 3rd, D., Crocker, S., and J. Schiller, \"Randomness Recommendations for Security\", RFC 1750, December 1994.",
      "ja": "[RANDOM]イーストレーク第3、D.、クロッカー、S.、およびJ.シラー、 \"セキュリティのためのランダム性に関する推奨事項\"、RFC 1750、1994年12月。"
    },
    {
      "indent": 0,
      "text": "14. Security Considerations",
      "section_title": true,
      "ja": "14.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "The Cryptographic Message Syntax provides a method for digitally signing data, digesting data, encrypting data, and authenticating data.",
      "ja": "暗号メッセージ構文は、デジタルデータを消化し、データに署名データを暗号化し、データを認証するための方法を提供します。"
    },
    {
      "indent": 3,
      "text": "Implementations must protect the signer's private key. Compromise of the signer's private key permits masquerade.",
      "ja": "実装は署名者の秘密鍵を保護しなければなりません。署名者の秘密鍵の許可の妥協を装います。"
    },
    {
      "indent": 3,
      "text": "Implementations must protect the key management private key, the key-encryption key, and the content-encryption key. Compromise of the key management private key or the key-encryption key may result in the disclosure of all contents protected with that key. Similarly, compromise of the content-encryption key may result in disclosure of the associated encrypted content.",
      "ja": "実装は、鍵管理、秘密鍵、鍵暗号化キー、およびコンテンツ暗号化キーを保護しなければなりません。鍵管理秘密鍵またはキー暗号化キーの妥協はそのキーで保護されているすべてのコンテンツの公開をもたらすことができます。同様に、コンテンツ暗号化鍵の妥協は、関連する暗号化コンテンツの開示をもたらし得ます。"
    },
    {
      "indent": 3,
      "text": "Implementations must protect the key management private key and the message-authentication key. Compromise of the key management private key permits masquerade of authenticated data. Similarly, compromise of the message-authentication key may result in undetectable modification of the authenticated content.",
      "ja": "実装は、鍵管理秘密鍵とメッセージ認証キーを保護しなければなりません。鍵管理秘密鍵の許可の妥協が認証されたデータを装います。同様に、メッセージ認証鍵の妥協は、認証されたコンテンツの検出不可能な変形をもたらすことができます。"
    },
    {
      "indent": 3,
      "text": "The key management technique employed to distribute message-authentication keys must itself provide data origin authentication, otherwise the contents are delivered with integrity from an unknown source. Neither RSA [PKCS#1, NEWPKCS#1] nor Ephemeral-Static Diffie-Hellman [DH-X9.42] provide the necessary data origin authentication. Static-Static Diffie-Hellman [DH-X9.42] does provide the necessary data origin authentication when both the originator and recipient public keys are bound to appropriate identities in X.509 certificates.",
      "ja": "メッセージ認証キーを配布するために用いられる鍵管理技術自体がデータ発信元認証を提供しなければならない、そうでなければ内容が不明なソースからの完全性と送達されます。 RSA [PKCS＃1、NEWPKCS＃1]もエフェメラル静的ディフィ - ヘルマン[DH-X9.42]も、必要なデータ発信元認証を提供します。静的 - 静的のDiffie-Hellmanは[DH-X9.42]は、発信者と受信者の両方の公開鍵は、X.509証明書に適切なアイデンティティにバインドされたときに、必要なデータ発信元認証を提供します。"
    },
    {
      "indent": 3,
      "text": "When more than two parties share the same message-authentication key, data origin authentication is not provided. Any party that knows the message-authentication key can compute a valid MAC, therefore the contents could originate from any one of the parties.",
      "ja": "二つ以上の当事者が同じメッセージ認証キーを共有する場合、データ発信元認証は提供されません。メッセージ認証キーを知っている当事者は、したがって、内容は、当事者のいずれかの由来ができ、有効なMACを計算することができます。"
    },
    {
      "indent": 3,
      "text": "Implementations must randomly generate content-encryption keys, message-authentication keys, initialization vectors (IVs), and padding. Also, the generation of public/private key pairs relies on a random numbers. The use of inadequate pseudo-random number generators (PRNGs) to generate cryptographic keys can result in little or no security. An attacker may find it much easier to reproduce the PRNG environment that produced the keys, searching the resulting small set of possibilities, rather than brute force searching the whole key space. The generation of quality random numbers is difficult. RFC 1750 [RANDOM] offers important guidance in this area.",
      "ja": "実装はランダムにコンテンツ暗号化キー、メッセージ認証キー、初期化ベクトル（IV）、およびパディングを生成しなければなりません。また、公開鍵/秘密鍵ペアの生成は、乱数に依存しています。暗号鍵を生成するために不十分な疑似乱数発生器（のPRNG）の使用は、ほとんどまたは全くセキュリティをもたらすことができます。攻撃者はそれをはるかに簡単に全体のキースペースを検索結果として起こる小さい可能性はなく、ブルートフォースを探し、キーを生成PRNG環境を再現するかもしれません。品質の乱数の生成が困難です。 RFC 1750 [RANDOM]はこの領域で重要な指導を提供しています。"
    },
    {
      "indent": 3,
      "text": "When using key agreement algorithms or previously distributed symmetric key-encryption keys, a key-encryption key is used to encrypt the content-encryption key. If the key-encryption and content-encryption algorithms are different, the effective security is determined by the weaker of the two algorithms. If, for example, content is encrypted with Triple-DES using a 168-bit Triple-DES content-encryption key, and the content-encryption key is wrapped with RC2 using a 40-bit RC2 key-encryption key, then at most 40 bits of protection is provided. A trivial search to determine the value of the 40-bit RC2 key can recover the Triple-DES key, and then the Triple-DES key can be used to decrypt the content. Therefore, implementers must ensure that key-encryption algorithms are as strong or stronger than content-encryption algorithms.",
      "ja": "鍵合意アルゴリズムまたは以前に分散対称鍵暗号化キーを使用する場合、キー暗号化キーは、コンテンツ暗号化キーを暗号化するために使用されます。キー暗号化とコンテンツの暗号化アルゴリズムが異なる場合は、効果的なセキュリティは、2つのアルゴリズムの弱いにより決定されます。例えば、コンテンツは168ビットTriple-DES内容暗号化キーを使用してトリプルDESで暗号化され、コンテンツ暗号化キーは、その後、最大で40、40ビットRC2キー暗号化キーを使用してRC2でラップされ、場合保護のビットが提供されます。 40ビットのRC2キーの値を決定するために些細な検索は、トリプルDES鍵を回復することができ、その後、トリプルDES鍵はコンテンツを復号するために使用することができます。そのため、実装者は、キー暗号化アルゴリズムがように強いか、コンテンツの暗号化アルゴリズムよりも強いことを確認する必要があります。"
    },
    {
      "indent": 3,
      "text": "Implementers should be aware that cryptographic algorithms become weaker with time. As new cryptoanalysis techniques are developed and computing performance improves, the work factor to break a particular cryptographic algorithm will be reduced. Therefore, cryptographic algorithm implementations should be modular, allowing new algorithms to be readily inserted. That is, implementors should be prepared for the set of algorithms that must be supported to change over time.",
      "ja": "実装者は、暗号化アルゴリズムは、時間とともに弱くなることに注意する必要があります。新しい暗号解読技術が開発され、コンピューティング性能が向上しているように、特定の暗号アルゴリズムを破る仕事率が低下します。したがって、暗号アルゴリズムの実装は、新しいアルゴリズムを容易に挿入できるように、モジュール式であるべきです。これは、実装者は、時間の経過とともに変化するためにサポートしなければならないアルゴリズムのセットのために準備されるべきです。"
    },
    {
      "indent": 3,
      "text": "The countersignature unsigned attribute includes a digital signature that is computed on the content signature value, thus the countersigning process need not know the original signed content. This structure permits implementation efficiency advantages; however, this structure may also permit the countersigning of an inappropriate signature value. Therefore, implementations that perform countersignatures should either verify the original signature value prior to countersigning it (this verification requires processing of the original content), or implementations should perform countersigning in a context that ensures that only appropriate signature values are countersigned.",
      "ja": "副署未署名の属性は、このように副署プロセスは、元の署名されたコンテンツを知っている必要はなく、コンテンツ署名値で計算されたデジタル署名を含みます。この構造は、実装効率の利点を可能にします。しかし、この構造はまた、不適切な署名値の副署を可能にすることができます。したがって、countersignaturesを実行する実装はそれを副署する前に、元の署名値を（この検証は、元のコンテンツの処理を必要とする）を確認する必要がありますか、実装は、適切な署名値を副署されることを保証文脈で副署行うべきです。"
    },
    {
      "indent": 0,
      "text": "15. Acknowledgments",
      "section_title": true,
      "ja": "15.謝辞"
    },
    {
      "indent": 3,
      "text": "This document is the result of contributions from many professionals. I appreciate the hard work of all members of the IETF S/MIME Working Group. I extend a special thanks to Rich Ankney, Simon Blake-Wilson, Tim Dean, Steve Dusse, Carl Ellison, Peter Gutmann, Bob Jueneman, Stephen Henson, Paul Hoffman, Scott Hollenbeck, Don Johnson, Burt Kaliski, John Linn, John Pawling, Blake Ramsdell, Francois Rousseau, Jim Schaad, Dave Solo, Paul Timmel, and Sean Turner for their efforts and support.",
      "ja": "この文書は、多くの専門家からの貢献の結果です。私は、IETF S / MIME作業部会のメンバー全員のハードワークに感謝します。私は、リッチAnkney、サイモン・ブレイク・ウィルソン、ティム・ディーン、スティーブDusse、カール・エリソン、ピーター・ガットマン、ボブJueneman、スティーブン・ヘンソン、ポール・ホフマン、スコットホレンベック、ドン・ジョンソン、バート・カリスキー、ジョン・リン、ジョンPawlingに特別な感謝を拡張します彼らの努力と支援のためのブレイクRamsdell、フランソワ・ルソー、ジムSchaad、デイブ・ソロ、ポールTimmel、そしてショーン・ターナー。"
    },
    {
      "indent": 0,
      "text": "16. Author's Address",
      "section_title": true,
      "ja": "16.著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Russell Housley Vigil Security, LLC 918 Spring Knoll Drive Herndon, VA 20170 USA",
      "ja": "ラッセルHousley氏ビジルセキュリティ、LLC 918春小山Driveハーンドン、VA 20170 USA"
    },
    {
      "indent": 3,
      "text": "EMail: housley@vigilsec.com",
      "ja": "メールアドレス：housley@vigilsec.com"
    },
    {
      "indent": 0,
      "text": "17. Full Copyright Statement",
      "section_title": true,
      "ja": "17.完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2004). This document is subject to the rights, licenses and restrictions contained in BCP 78, and except as set forth therein, the authors retain all their rights.",
      "ja": "著作権（C）インターネット協会（2004）。この文書では、BCP 78に含まれる権利と許可と制限の適用を受けており、その中の記載を除いて、作者は彼らのすべての権利を保有します。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein are provided on an \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書とここに含まれている情報は、基礎とCONTRIBUTOR「そのまま」、ORGANIZATION HE / SHEが表すまたはインターネットソサエティおよびインターネット・エンジニアリング・タスク・フォース放棄すべての保証、明示または、（もしあれば）後援ISに設けられています。黙示、情報の利用は、特定の目的に対する権利または商品性または適合性の黙示の保証を侵害しない任意の保証含むがこれらに限定されません。"
    },
    {
      "indent": 0,
      "text": "Intellectual Property",
      "ja": "知的財産"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any Intellectual Property Rights or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; nor does it represent that it has made any independent effort to identify any such rights. Information on the procedures with respect to rights in RFC documents can be found in BCP 78 and BCP 79.",
      "ja": "IETFは、本書またはそのような権限下で、ライセンスがたりないかもしれない程度に記載された技術の実装や使用に関係すると主張される可能性があります任意の知的財産権やその他の権利の有効性または範囲に関していかなる位置を取りません利用可能です。またそれは、それがどのような権利を確認する独自の取り組みを行ったことを示すものでもありません。 RFC文書の権利に関する手続きの情報は、BCP 78およびBCP 79に記載されています。"
    },
    {
      "indent": 3,
      "text": "Copies of IPR disclosures made to the IETF Secretariat and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the IETF on-line IPR repository at http://www.ietf.org/ipr.",
      "ja": "IPRの開示のコピーが利用できるようにIETF事務局とライセンスの保証に行われた、または本仕様の実装者または利用者がそのような所有権の使用のための一般的なライセンスまたは許可を取得するために作られた試みの結果を得ることができますhttp://www.ietf.org/iprのIETFのオンラインIPRリポジトリから。"
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights that may cover technology that may be required to implement this standard. Please address the information to the IETF at ietf-ipr@ietf.org.",
      "ja": "IETFは、その注意にこの標準を実装するために必要とされる技術をカバーすることができる任意の著作権、特許または特許出願、またはその他の所有権を持ってすべての利害関係者を招待します。 ietf-ipr@ietf.orgのIETFに情報を記述してください。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "ja": "RFC Editor機能のための基金は現在、インターネット協会によって提供されます。"
    }
  ]
}