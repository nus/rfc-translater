{
  "title": {
    "text": "RFC 3435 - Media Gateway Control Protocol (MGCP) Version 1.0",
    "ja": "RFC 3435 - メディアゲートウェイコントロールプロトコル（MGCP）バージョン1.0"
  },
  "number": 3435,
  "created_at": "2019-10-28 06:38:57.113728+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                       F. Andreasen\nRequest for Comments: 3435                                     B. Foster\nObsoletes: 2705                                            Cisco Systems\nCategory: Informational                                     January 2003",
      "raw": true
    },
    {
      "indent": 17,
      "text": "Media Gateway Control Protocol (MGCP)\n             Version 1.0",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "このメモの位置付け"
    },
    {
      "indent": 3,
      "text": "This memo provides information for the Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited.",
      "ja": "このメモはインターネットコミュニティのための情報を提供します。それはどんな種類のインターネット標準を指定しません。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2003). All Rights Reserved.",
      "ja": "著作権（C）インターネット協会（2003）。全著作権所有。"
    },
    {
      "indent": 0,
      "text": "IESG Note",
      "ja": "IESG注意"
    },
    {
      "indent": 3,
      "text": "This document is being published for the information of the community. It describes a protocol that is currently being deployed in a number of products. Implementers should be aware of RFC 3015, which was developed in the IETF Megaco Working Group and the ITU-T SG16 and which is considered by the IETF and ITU-T to be the standards-based (including reviewed security considerations) way to meet the needs that MGCP was designed to address.",
      "ja": "この文書は、コミュニティの情報については公表されています。これは、現在の製品の数に展開されているプロトコルを記述しています。実装者は、満たすために、標準ベース（見直しのセキュリティの考慮事項を含む）な方法であることがIETFのMegaco作業部会とITU-T SG16で開発され、IETFとITU-Tによって考慮されたRFC 3015、知っておくべきMGCPが対処するように設計されたことが必要です。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document describes an application programming interface and a corresponding protocol (MGCP) which is used between elements of a decomposed multimedia gateway. The decomposed multimedia gateway consists of a Call Agent, which contains the call control \"intelligence\", and a media gateway which contains the media functions, e.g., conversion from TDM voice to Voice over IP.",
      "ja": "この文書では、アプリケーション・プログラミング・インターフェースと分解マルチメディアゲートウェイの要素の間で使用される対応するプロトコル（MGCP）を記述する。分解マルチメディアゲートウェイは、ボイスオーバーIPへのTDM音声からの呼制御「知性」、およびメディア機能が含まれているメディア・ゲートウェイ、例えば、変換が含まれているコールエージェントで構成されています。"
    },
    {
      "indent": 3,
      "text": "Media gateways contain endpoints on which the Call Agent can create, modify and delete connections in order to establish and control media sessions with other multimedia endpoints. Also, the Call Agent can instruct the endpoints to detect certain events and generate signals. The endpoints automatically communicate changes in service state to the Call Agent. Furthermore, the Call Agent can audit endpoints as well as the connections on endpoints.",
      "ja": "メディアゲートウェイはコールエージェントが他のマルチメディアエンドポイントとのメディアセッションを確立し、制御するために、接続を作成、変更および削除できるエンドポイントが含まれています。また、コールエージェントは、特定のイベントを検出して信号を生成するために、エンドポイントを指示することができます。エンドポイントは自動的にコールエージェントへのサービス状態の変化を伝えます。さらに、コールエージェントは、エンドポイントだけでなく、エンドポイントでの接続を監査することができます。"
    },
    {
      "indent": 3,
      "text": "The basic and general MGCP protocol is defined in this document, however most media gateways will need to implement one or more MGCP packages, which define extensions to the protocol suitable for use with specific types of media gateways. Such packages are defined in separate documents.",
      "ja": "基本的で一般的なMGCPプロトコルは本書で定義されている、しかし、ほとんどのメディア・ゲートウェイは、メディアゲートウェイの特定のタイプでの使用に適したプロトコルへの拡張を定義する1つのまたは複数のMGCPパッケージを、実装する必要があります。このようなパッケージは、別の文書で定義されています。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.     Introduction.................................................5\n1.1    Relation with the H.323 Standards............................7\n1.2    Relation with the IETF Standards.............................8\n1.3    Definitions..................................................9\n1.4    Conventions used in this Document............................9\n2.     Media Gateway Control Interface.............................10\n2.1    Model and Naming Conventions................................10\n2.1.1  Types of Endpoints..........................................10\n2.1.2  Endpoint Identifiers........................................14\n2.1.3  Calls and Connections.......................................16\n2.1.4  Names of Call Agents and Other Entities.....................22\n2.1.5  Digit Maps..................................................23\n2.1.6  Packages....................................................26\n2.1.7  Events and Signals..........................................28\n2.2    Usage of SDP................................................33\n2.3    Gateway Control Commands....................................33\n2.3.1  Overview of Commands........................................33\n2.3.2  EndpointConfiguration.......................................36\n2.3.3  NotificationRequest.........................................37\n2.3.4  Notify......................................................44\n2.3.5  CreateConnection............................................46\n2.3.6  ModifyConnection............................................52\n2.3.7  DeleteConnection (from the Call Agent)......................54\n2.3.8  DeleteConnection (from the gateway).........................58\n2.3.9  DeleteConnection (multiple connections from the Call Agent) 59\n2.3.10 AuditEndpoint...............................................60\n2.3.11 AuditConnection.............................................65\n2.3.12 RestartInProgress...........................................66\n2.4    Return Codes and Error Codes................................69\n2.5    Reason Codes................................................74\n2.6    Use of Local Connection Options and Connection Descriptors..75\n2.7    Resource Reservations.......................................77\n3.     Media Gateway Control Protocol..............................77\n3.1    General Description.........................................78\n3.2    Command Header..............................................79\n3.2.1  Command Line................................................79\n3.2.2  Parameter Lines.............................................82\n3.3    Format of response headers.................................101\n3.3.1  CreateConnection Response..................................104\n3.3.2  ModifyConnection Response..................................105",
      "raw": true
    },
    {
      "indent": 3,
      "text": "3.3.3  DeleteConnection Response..................................106\n3.3.4  NotificationRequest Response...............................106\n3.3.5  Notify Response............................................106\n3.3.6  AuditEndpoint Response.....................................106\n3.3.7  AuditConnection Response...................................107\n3.3.8  RestartInProgress Response.................................108\n3.4    Encoding of the Session Description (SDP)..................108\n3.4.1  Usage of SDP for an Audio Service..........................110\n3.4.2  Usage of SDP for LOCAL Connections.........................110\n3.5    Transmission over UDP......................................111\n3.5.1  Providing the At-Most-Once Functionality...................112\n3.5.2  Transaction Identifiers and Three Ways Handshake...........113\n3.5.3  Computing Retransmission Timers............................114\n3.5.4  Maximum Datagram Size, Fragmentation and Reassembly........115\n3.5.5  Piggybacking...............................................116\n3.5.6  Provisional Responses......................................117\n4.     States, Failover and Race Conditions.......................119\n4.1    Failover Assumptions and Highlights........................119\n4.2    Communicating with Gateways................................121\n4.3    Retransmission, and Detection of Lost Associations:........122\n4.4    Race Conditions............................................126\n4.4.1  Quarantine List............................................127\n4.4.2  Explicit Detection.........................................133\n4.4.3  Transactional Semantics....................................134\n4.4.4  Ordering of Commands, and Treatment of Misorder............135\n4.4.5  Endpoint Service States....................................137\n4.4.6  Fighting the Restart Avalanche.............................140\n4.4.7  Disconnected Endpoints.....................................143\n4.4.8  Load Control in General....................................146\n5.     Security Requirements......................................147\n5.1    Protection of Media Connections............................148\n6.     Packages...................................................148\n6.1    Actions....................................................150\n6.2    BearerInformation..........................................150\n6.3    ConnectionModes............................................151\n6.4    ConnectionParameters.......................................151\n6.5    DigitMapLetters............................................151\n6.6    Events and Signals.........................................152\n6.6.1  Default and Reserved Events................................155\n6.7    ExtensionParameters........................................156\n6.8    LocalConnectionOptions.....................................157\n6.9    Reason Codes...............................................157\n6.10   RestartMethods.............................................158\n6.11   Return Codes...............................................158\n7.     Versions and Compatibility.................................158\n7.1    Changes from RFC 2705......................................158\n8.     Security Considerations....................................164\n9.     Acknowledgments............................................164",
      "raw": true
    },
    {
      "indent": 3,
      "text": "10.    References.................................................164\nAppendix A: Formal Syntax Description of the Protocol.............167\nAppendix B: Base Package..........................................175\nB.1    Events.....................................................175\nB.2    Extension Parameters.......................................176\nB.2.1  PersistentEvents...........................................176\nB.2.2  NotificationState..........................................177\nB.3    Verbs......................................................177\nAppendix C: IANA Considerations...................................179\nC.1    New MGCP Package Sub-Registry..............................179\nC.2    New MGCP Package...........................................179\nC.3    New MGCP LocalConnectionOptions Sub-Registry...............179\nAppendix D: Mode Interactions.....................................180\nAppendix E: Endpoint Naming Conventions...........................182\nE.1    Analog Access Line Endpoints...............................182\nE.2    Digital Trunks.............................................182\nE.3    Virtual Endpoints..........................................183\nE.4    Media Gateway..............................................184\nE.5    Range Wildcards............................................184\nAppendix F: Example Command Encodings.............................185\nF.1    NotificationRequest........................................185\nF.2    Notify.....................................................186\nF.3    CreateConnection...........................................186\nF.4    ModifyConnection...........................................189\nF.5    DeleteConnection (from the Call Agent).....................189\nF.6    DeleteConnection (from the gateway)........................190\nF.7    DeleteConnection (multiple connections\n       from the Call Agent).......................................190\nF.8    AuditEndpoint..............................................191\nF.9    AuditConnection............................................192\nF.10   RestartInProgress..........................................193\nAppendix G: Example Call Flows....................................194\nG.1    Restart....................................................195\nG.1.1  Residential Gateway Restart................................195\nG.1.2  Call Agent Restart.........................................198\nG.2    Connection Creation........................................200\nG.2.1  Residential Gateway to Residential Gateway.................200\nG.3    Connection Deletion........................................206\nG.3.1  Residential Gateway to Residential Gateway.................206\nAuthors' Addresses................................................209\nFull Copyright Statement..........................................210",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "This document describes an abstract application programming interface (MGCI) and a corresponding protocol (MGCP) for controlling media gateways from external call control elements called media gateway controllers or Call Agents. A media gateway is typically a network element that provides conversion between the audio signals carried on telephone circuits and data packets carried over the Internet or over other packet networks. Examples of media gateways are:",
      "ja": "この文書は、抽象アプリケーション・プログラミング・インターフェース（のMgCl）とメディアゲートウェイコントローラまたはコールエージェントと呼ばれる外部コール制御要素からメディアゲートウェイを制御するための対応するプロトコル（MGCP）を記述する。メディアゲートウェイは、典型的には、電話回線やインターネットまたは他のパケットネットワーク上で搬送されるデータパケットに担持されたオーディオ信号との間の変換を提供するネットワーク要素です。メディアゲートウェイの例は次のとおり"
    },
    {
      "indent": 3,
      "text": "* Trunking gateways, that interface between the telephone network and a Voice over IP network. Such gateways typically manage a large number of digital circuits.",
      "ja": "*トランキングゲートウェイ、電話網とVoice over IPネットワークとの間のインタフェース。そのようなゲートウェイは、典型的には、デジタル回路の多数を管理します。"
    },
    {
      "indent": 3,
      "text": "* Voice over ATM gateways, which operate much the same way as voice over IP trunking gateways, except that they interface to an ATM network.",
      "ja": "*音声彼らはATMネットワークにインタフェースすることを除いて、多くのIPトランキングゲートウェイ上での音声と同じように動作ATMゲートウェイ、オーバー。"
    },
    {
      "indent": 3,
      "text": "* Residential gateways, that provide a traditional analog (RJ11) interface to a Voice over IP network. Examples of residential gateways include cable modem/cable set-top boxes, xDSL devices, and broad-band wireless devices.",
      "ja": "Voice over IPネットワークに従来のアナログ（RJ11）インターフェイスを提供*レジデンシャルゲートウェイ。レジデンシャルゲートウェイの例としては、ケーブルモデム/ケーブルセットトップボックス、xDSLデバイス、および広帯域の無線装置を含みます。"
    },
    {
      "indent": 3,
      "text": "* Access gateways, that provide a traditional analog (RJ11) or digital PBX interface to a Voice over IP network. Examples of access gateways include small-scale voice over IP gateways.",
      "ja": "Voice over IPネットワークに従来のアナログ（RJ11）またはデジタルPBXインターフェイスを提供*アクセスゲートウェイ。アクセスゲートウェイの例としては、IPゲートウェイ上に小さなスケールの声が含まれます。"
    },
    {
      "indent": 3,
      "text": "* Business gateways, that provide a traditional digital PBX interface or an integrated \"soft PBX\" interface to a Voice over IP network.",
      "ja": "従来のデジタルPBXインターフェイスまたはVoice over IPネットワークに統合され、「ソフトPBX」インターフェイスを提供*ビジネスゲートウェイ、。"
    },
    {
      "indent": 3,
      "text": "* Network Access Servers, that can attach a \"modem\" to a telephone circuit and provide data access to the Internet. We expect that in the future, the same gateways will combine Voice over IP services and Network Access services.",
      "ja": "電話回線に「モデム」を添付し、インターネットへのデータアクセスを提供することができます*ネットワークアクセスサーバー、。将来的には、同じゲートウェイは、IPサービスおよびネットワークアクセスサービスを介して音声を統合することを期待しています。"
    },
    {
      "indent": 3,
      "text": "* Circuit switches, or packet switches, which can offer a control interface to an external call control element.",
      "ja": "外部コール制御要素に制御インタフェースを提供することができる*サーキットスイッチ、またはパケットスイッチ。"
    },
    {
      "indent": 3,
      "text": "MGCP assumes a call control architecture where the call control \"intelligence\" is outside the gateways and handled by external call control elements known as Call Agents. The MGCP assumes that these call control elements, or Call Agents, will synchronize with each other to send coherent commands and responses to the gateways under their control. If this assumption is violated, inconsistent behavior should be expected. MGCP does not define a mechanism for synchronizing Call Agents. MGCP is, in essence, a master/slave protocol, where the gateways are expected to execute commands sent by the Call Agents. In consequence, this document specifies in great detail the expected behavior of the gateways, but only specifies those parts of a Call Agent implementation, such as timer management, that are mandated for proper operation of the protocol.",
      "ja": "MGCPは、コール制御「インテリジェンス」は、ゲートウェイの外にあるとコールエージェントとして知られる外部コール制御要素によって処理される呼制御アーキテクチャを前提としています。 MGCPは、これらのコール制御要素、またはコールエージェントは、自分のコントロール下ゲートウェイにコヒーレントコマンドと応答を送信するために互いに同期することを前提としています。この仮定に違反した場合は、一貫性のない動作が期待されなければなりません。 MGCPは、コール・エージェントを同期するためのメカニズムを定義しません。 MGCPは、本質的には、ゲートウェイはコールエージェントによって送信されたコマンドを実行することが期待されているマスター/スレーブプロトコルです。その結果、この文書は非常に詳細にゲートウェイの予想される動作を指定しますが、唯一のプロトコルの適切な動作のために義務付けられているように、タイマー管理などのコールエージェントの実装の部分を、指定します。"
    },
    {
      "indent": 3,
      "text": "MGCP assumes a connection model where the basic constructs are endpoints and connections. Endpoints are sources and/or sinks of data and can be physical or virtual. Examples of physical endpoints are:",
      "ja": "MGCPは、基本的な構造は、エンドポイントと接続している接続モデルを想定しています。エンドポイントは、ソースおよび/またはデータのシンクであり、物理または仮想ことができます。物理的なエンドポイントの例は以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "* An interface on a gateway that terminates a trunk connected to a PSTN switch (e.g., Class 5, Class 4, etc.). A gateway that terminates trunks is called a trunking gateway.",
      "ja": "* PSTNスイッチ（例えば、クラス5、クラス4、等）に接続されたトランクを終端ゲートウェイのインターフェース。トランクを終端ゲートウェイは、トランキングゲートウェイと呼ばれています。"
    },
    {
      "indent": 3,
      "text": "* An interface on a gateway that terminates an analog POTS connection to a phone, key system, PBX, etc. A gateway that terminates residential POTS lines (to phones) is called a residential gateway.",
      "ja": "*電話、キーシステム、PBX、（電話機に）住宅のPOTS回線を終端ゲートウェイ等のアナログPOTS接続を終端ゲートウェイのインターフェースは、レジデンシャルゲートウェイと呼ばれています。"
    },
    {
      "indent": 3,
      "text": "An example of a virtual endpoint is an audio source in an audio-content server. Creation of physical endpoints requires hardware installation, while creation of virtual endpoints can be done by software.",
      "ja": "仮想エンドポイントの例は、オーディオ・コンテンツサーバ内のオーディオソースです。仮想エンドポイントの作成は、ソフトウェアによって行うことができる一方で、物理的エンドポイントの作成は、ハードウェアのインストールが必要です。"
    },
    {
      "indent": 3,
      "text": "Connections may be either point to point or multipoint. A point to point connection is an association between two endpoints with the purpose of transmitting data between these endpoints. Once this association is established for both endpoints, data transfer between these endpoints can take place. A multipoint connection is established by connecting the endpoint to a multipoint session.",
      "ja": "接続はポイントまたはマルチするかの点であってもよいです。接続ポイントツーポイントは、これらのエンドポイント間でデータを送信する目的で、2つのエンドポイント間の関連付けです。この協会は、両方のエンドポイントのために確立されると、これらのエンドポイント間のデータ転送を行うことができます。マルチポイント接続は、マルチセッションにエンドポイントを接続することによって確立されます。"
    },
    {
      "indent": 3,
      "text": "Connections can be established over several types of bearer networks, for example:",
      "ja": "接続は、例えば、ベアラネットワークのいくつかのタイプを介して確立することができます。"
    },
    {
      "indent": 3,
      "text": "* Transmission of audio packets using RTP and UDP over an IP network.",
      "ja": "* IPネットワーク上でRTPとUDPを使用して音声パケットの送信。"
    },
    {
      "indent": 3,
      "text": "* Transmission of audio packets using AAL2, or another adaptation layer, over an ATM network.",
      "ja": "* ATMネットワークを介して、AAL2、または他の適応層を使用してオーディオパケットの送信。"
    },
    {
      "indent": 3,
      "text": "* Transmission of packets over an internal connection, for example the TDM backplane or the interconnection bus of a gateway. This is used, in particular, for \"hairpin\" connections, connections that terminate in a gateway but are immediately rerouted over the telephone network.",
      "ja": "*内部接続を介してパケットの送信、例えばTDMバックプレーンまたはゲートウェイの相互接続バス。これは、特に、「ヘアピン」接続のため、ゲートウェイで終端するが、接続は直ちに電話ネットワークを介して再ルーティングされ、使用されています。"
    },
    {
      "indent": 3,
      "text": "For point-to-point connections the endpoints of a connection could be in separate gateways or in the same gateway.",
      "ja": "ポイントツーポイント接続のための接続のエンドポイントは別のゲートウェイまたは同じゲートウェイであってもよいです。"
    },
    {
      "indent": 0,
      "text": "1.1 Relation with the H.323 Standards",
      "section_title": true,
      "ja": "H.323規格に1.1の関係"
    },
    {
      "indent": 3,
      "text": "MGCP is designed as an internal protocol within a distributed system that appears to the outside as a single VoIP gateway. This system is composed of a Call Agent, that may or may not be distributed over several computer platforms, and of a set of gateways, including at least one \"media gateway\" that perform the conversion of media signals between circuits and packets, and at least one \"signaling gateway\" when connecting to an SS7 controlled network. In a typical configuration, this distributed gateway system will interface on one side with one or more telephony (i.e., circuit) switches, and on the other side with H.323 conformant systems, as indicated in the following table:",
      "ja": "MGCPは、単一のVoIPゲートウェイとして外部に現れる分散システムの内部プロトコルとして設計されています。このシステムは、AT回路とパケット間のメディア信号の変換を行う少なくとも一つの「メディアゲートウェイ」を含む、またはいくつかのコンピュータプラットフォーム上に分散、およびゲートウェイの集合をしてもしなくてもよいCallエージェントから構成されており、 SS7制御ネットワークに接続する少なくとも1つの「シグナリングゲートウェイ」。典型的な構成では、この分散ゲートウェイシステムは、以下の表に示すように、H.323準拠システムで一つ以上の電話（すなわち、回路）スイッチとの一方の側に、他方の側でインターフェースします。"
    },
    {
      "indent": 3,
      "text": " ------------------------------------------------------------------\n| Functional|  Phone     |  Terminating    |  H.323 conformant     |\n| Plane     |  switch    |  Entity         |  systems              |\n|-----------|------------|-----------------|-----------------------|\n| Signaling |  Signaling |  Call agent     |  Signaling exchanges  |\n| Plane     |  exchanges |                 |  with the Call Agent  |\n|           |  through   |                 |  through H.225/RAS and|\n|           |  SS7/ISUP  |                 |  H.225/Q.931.         |\n|-----------|------------|-----------------|-----------------------|\n|           |            |                 |  Possible negotiation |\n|           |            |                 |  of logical channels  |\n|           |            |                 |  and transmission     |\n|           |            |                 |  parameters through   |\n|           |            |                 |  H.245 with the call  |\n|           |            |                 |  agent.               |\n|-----------|------------|-----------------|-----------------------|\n|           |            |  Internal       |                       |\n|           |            |  synchronization|                       |\n|           |            |  through MGCP   |                       |\n|-----------|------------|-----------------|-----------------------|\n| Bearer    |  Connection|  Telephony      |  Transmission of VoIP |\n| Data      |  through   |  gateways       |  data using RTP       |\n| Transport |  high speed|                 |  directly between the |\n| Plane     |  trunk     |                 |  H.323 station and the|\n|           |  groups    |                 |  gateway.             |\n ------------------------------------------------------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "In the MGCP model, the gateways focus on the audio signal translation function, while the Call Agent handles the call signaling and call processing functions. As a consequence, the Call Agent implements the \"signaling\" layers of the H.323 standard, and presents itself as an \"H.323 Gatekeeper\" or as one or more \"H.323 Endpoints\" to the H.323 systems.",
      "ja": "コールエージェントがコールシグナリングおよびコール処理機能を処理しながら、MGCPモデルでは、ゲートウェイは、オーディオ信号変換機能に焦点を当てます。その結果、コール・エージェントは、H.323規格の「シグナリング」層を実装し、H.323方式に「H.323エンドポイント」「H.323ゲートキーパー」として、1つまたは複数のとしての地位を提示します。"
    },
    {
      "indent": 0,
      "text": "1.2 Relation with the IETF Standards",
      "section_title": true,
      "ja": "IETF標準と1.2の関係"
    },
    {
      "indent": 3,
      "text": "While H.323 is the recognized standard for VoIP terminals, the IETF has also produced specifications for other types of multi-media applications. These other specifications include:",
      "ja": "H.323は、VoIP端末の認識の標準ですが、IETFは、マルチメディアアプリケーションの他のタイプの仕様を生産しています。これらの他の仕様は以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "* the Session Description Protocol (SDP), RFC 2327",
      "ja": "*セッション記述プロトコル（SDP）、RFC 2327"
    },
    {
      "indent": 3,
      "text": "* the Session Announcement Protocol (SAP), RFC 2974",
      "ja": "*セッションアナウンスメントプロトコル（SAP）、RFC 2974"
    },
    {
      "indent": 3,
      "text": "* the Session Initiation Protocol (SIP), RFC 3261",
      "ja": "*セッション開始プロトコル（SIP）、RFC 3261"
    },
    {
      "indent": 3,
      "text": "* the Real Time Streaming Protocol (RTSP), RFC 2326.",
      "ja": "*リアルタイムストリーミングプロトコル（RTSP）、RFC 2326。"
    },
    {
      "indent": 3,
      "text": "The latter three specifications are in fact alternative signaling standards that allow for the transmission of a session description to an interested party. SAP is used by multicast session managers to distribute a multicast session description to a large group of recipients, SIP is used to invite an individual user to take part in a point-to-point or unicast session, RTSP is used to interface a server that provides real time data. In all three cases, the session description is described according to SDP; when audio is transmitted, it is transmitted through the Real-time Transport Protocol, RTP.",
      "ja": "後者の3つの仕様は実際の代替は、利害関係者へのセッション記述の伝送を可能とする信号規格です。 SAPは、受信者の大きなグループへのマルチキャストセッション記述を配信するためにマルチキャストセッション・マネージャによって使用されるSIPは、ポイントツーポイントまたはユニキャスト・セッションに参加する個々のユーザーを招待するために使用される、RTSPは、そのサーバをインタフェースするために使用されリアルタイムデータを提供します。 3つ全ての場合において、セッション記述は、SDPに従って記載されています。オーディオが送信されると、それはリアルタイムトランスポートプロトコル、RTPを介して送信されます。"
    },
    {
      "indent": 3,
      "text": "The distributed gateway systems and MGCP will enable PSTN telephony users to access sessions set up using SAP, SIP or RTSP. The Call Agent provides for signaling conversion, according to the following table:",
      "ja": "分散ゲートウェイシステムとMGCPはSAP、SIPまたはRTSPを使用して設定セッションにアクセスするためにPSTN電話ユーザを可能にします。コールエージェントは、次の表に従って、変換をシグナリングのために用意されています。"
    },
    {
      "indent": 3,
      "text": " ------------------------------------------------------------------\n| Functional|  Phone     |  Terminating  |  IETF conforming systems|\n| Plane     |  switch    |  Entity       |                         |\n|-----------|------------|---------------|-------------------------|\n| Signaling |  Signaling |  Call agent   |  Signaling exchanges    |\n| Plane     |  exchanges |               |  with the Call Agent    |\n|           |  through   |               |  through SAP, SIP or    |\n|           |  SS7/ISUP  |               |  RTSP.                  |\n|-----------|------------|---------------|-------------------------|\n|           |            |               |  Negotiation of session |\n|           |            |               |  description parameters |\n|           |            |               |  through SDP (telephony |\n|           |            |               |  gateway terminated but |\n|           |            |               |  passed via the call    |\n|           |            |               |  agent to and from the  |\n|           |            |               |  IETF conforming system)|\n|-----------|------------|---------------|-------------------------|\n|           |            | Internal syn- |                         |\n|           |            | chronization  |                         |\n|           |            | through MGCP  |                         |\n|-----------|------------|---------------|-------------------------|\n| Bearer    |  Connection|  Telephony    |  Transmission of VoIP   |\n| Data      |  through   |  gateways     |  data using RTP,        |\n| Transport |  high speed|               |  directly between the   |\n| Plane     |  trunk     |               |  remote IP end system   |\n|           |  groups    |               |  and the gateway.       |\n ------------------------------------------------------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The SDP standard has a pivotal status in this architecture. We will see in the following description that we also use it to carry session descriptions in MGCP.",
      "ja": "SDPの標準は、このアーキテクチャでは極めて重要な地位を持っています。我々はまた、MGCPでセッション記述を運ぶためにそれを使用し、以下の説明で表示されます。"
    },
    {
      "indent": 0,
      "text": "1.3 Definitions",
      "section_title": true,
      "ja": "1.3定義"
    },
    {
      "indent": 3,
      "text": "Trunk: A communication channel between two switching systems, e.g., a DS0 on a T1 or E1 line.",
      "ja": "トランク2つの交換システム間の通信チャネル、例えば、T1またはE1回線にDS0。"
    },
    {
      "indent": 0,
      "text": "1.4 Conventions used in this Document",
      "section_title": true,
      "ja": "このドキュメントで使用さ1.4表記"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED, \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14, RFC 2119 [2].",
      "ja": "キーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、 \"NOT SHALL\"、 \"べきではありません\"、 \"推奨\"、 \"すべきである\" \"ないものと\"、 \"MAY「お勧めしません \"\"、および\" OPTIONAL BCP 14、RFC 2119に記載されるように本書では[2]に解釈されるべきです。"
    },
    {
      "indent": 0,
      "text": "2. Media Gateway Control Interface",
      "section_title": true,
      "ja": "2.メディアゲートウェイコントロールインタフェース"
    },
    {
      "indent": 3,
      "text": "The interface functions provide for connection control and endpoint control. Both use the same system model and the same naming conventions.",
      "ja": "インタフェース機能は、接続制御とエンドポイント制御を提供します。両方とも同じシステムモデルと同じ命名規則を使用します。"
    },
    {
      "indent": 0,
      "text": "2.1 Model and Naming Conventions",
      "section_title": true,
      "ja": "2.1モデルと命名規則"
    },
    {
      "indent": 3,
      "text": "The MGCP assumes a connection model where the basic constructs are endpoints and connections. Connections are grouped in calls. One or more connections can belong to one call. Connections and calls are set up at the initiative of one or more Call Agents.",
      "ja": "MGCPは、基本的な構造は、エンドポイントと接続している接続モデルを想定しています。接続は、通話中にグループ化されています。一つ以上の接続が1つのコールに属することができます。接続および呼び出しは一の以上のコールエージェントの主導で設定されています。"
    },
    {
      "indent": 0,
      "text": "2.1.1 Types of Endpoints",
      "section_title": true,
      "ja": "エンドポイントの2.1.1タイプ"
    },
    {
      "indent": 3,
      "text": "In the introduction, we presented several classes of gateways. Such classifications, however, can be misleading. Manufacturers can arbitrarily decide to provide several types of services in a single package. A single product could well, for example, provide some trunk connections to telephony switches, some primary rate connections and some analog line interfaces, thus sharing the characteristics of what we described in the introduction as \"trunking\", \"access\" and \"residential\" gateways. MGCP does not make assumptions about such groupings. We simply assume that media gateways support collections of endpoints. The type of the endpoint determines its functionality. Our analysis, so far, has led us to isolate the following basic endpoint types:",
      "ja": "導入では、我々は、ゲートウェイのいくつかのクラスを提示しました。このような分類は、しかし、誤解を招くことができます。メーカーは、任意の単一のパッケージにサービスのいくつかのタイプを提供することを決定することができます。単一の製品はよく、例えば、このように我々は「トランキング」、「アクセス」と「住宅」として導入で説明何の特性を共有し、電話スイッチ、いくつかの主要レート接続といくつかのアナログラインインタフェースにいくつかのトランク接続を提供することができますゲートウェイ。 MGCPは、このようなグループ化に関する仮定をしていません。私たちは、単にエンドポイントのメディア・ゲートウェイ・サポート・コレクションを前提としています。エンドポイントの種類は、その機能を決定します。我々の分析は、これまでのところ、以下の基本的なエンドポイントタイプを隔離するために私たちをリードしてきました："
    },
    {
      "indent": 3,
      "text": "* Digital channel (DS0),",
      "ja": "*デジタルチャンネル（DS0）、"
    },
    {
      "indent": 3,
      "text": "* Analog line,",
      "ja": "*アナログライン、"
    },
    {
      "indent": 3,
      "text": "* Announcement server access point,",
      "ja": "*発表サーバのアクセスポイントは、"
    },
    {
      "indent": 3,
      "text": "* Interactive Voice Response access point,",
      "ja": "*対話型音声応答アクセスポイント、"
    },
    {
      "indent": 3,
      "text": "* Conference bridge access point,",
      "ja": "*会議ブリッジ、アクセスポイント、"
    },
    {
      "indent": 3,
      "text": "* Packet relay,",
      "ja": "*パケット中継、"
    },
    {
      "indent": 3,
      "text": "* ATM \"trunk side\" interface.",
      "ja": "* ATM「トランク側」インタフェース。"
    },
    {
      "indent": 3,
      "text": "In this section, we will describe the expected behavior of such endpoints.",
      "ja": "このセクションでは、我々は、このようなエンドポイントの期待される動作を説明します。"
    },
    {
      "indent": 3,
      "text": "This list is not final. There may be other types of endpoints defined in the future, for example test endpoints that could be used to check network quality, or frame-relay endpoints that could be used to manage audio channels multiplexed over a frame-relay virtual circuit.",
      "ja": "このリストは最終的ではありません。フレームリレー仮想回路に多重音声チャネルを管理するために使用することができるネットワークの品質をチェックするために使用することができる例示的試験エンドポイント、またはフレームリレーエンドポイントのために、将来に定義されたエンドポイントの他のタイプが存在してもよいです。"
    },
    {
      "indent": 0,
      "text": "2.1.1.1 Digital Channel (DS0)",
      "section_title": true,
      "ja": "2.1.1.1デジタルチャンネル（DS0）"
    },
    {
      "indent": 3,
      "text": "Digital channels provide a 64 Kbps service. Such channels are found in trunk and ISDN interfaces. They are typically part of digital multiplexes, such as T1, E1, T3 or E3 interfaces. Media gateways that support such channels are capable of translating the digital signals received on the channel, which may be encoded according to A-law or mu-law, using either the complete set of 8 bits per sample or only 7 of these bits, into audio packets. When the media gateway also supports a Network Access Server (NAS) service, the gateway shall be capable of receiving either audio-encoded data (modem connection) or binary data (ISDN connection) and convert them into data packets.",
      "ja": "デジタルチャンネルは、64 Kbpsのサービスを提供しています。そのようなチャネルは、トランクおよびISDNインタフェースに見出されます。これらは典型的には、T1、E1、T3またはE3インターフェースなどのデジタルマルチプレックスの一部です。そのようなチャネルをサポートするメディアゲートウェイは、デジタル信号を変換することが可能に、これらのビットの8サンプルあたりのビットのみ7の完全なセットのいずれかを使用して、-lawまたはμ則に従って符号化することができるチャネル上で受信されますオーディオパケット。メディアゲートウェイは、ネットワークアクセスサーバ（NAS）サービスをサポートしている場合、ゲートウェイは、音声符号化データ（モデム接続）またはバイナリデータ（ISDN接続）のいずれかを受信することができ、データ・パケットに変換しなければなりません。"
    },
    {
      "indent": 14,
      "text": "                           +-------\n             +------------+|\n(channel) ===|DS0 endpoint| -------- Connections\n             +------------+|\n                           +-------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Media gateways should be able to establish several connections between the endpoint and the packet networks, or between the endpoint and other endpoints in the same gateway. The signals originating from these connections shall be mixed according to the connection \"mode\", as specified later in this document. The precise number of connections that an endpoint supports is a characteristic of the gateway, and may in fact vary according to the allocation of resources within the gateway.",
      "ja": "メディアゲートウェイは、エンドポイントとパケットネットワーク間、または同じゲートウェイにおけるエンドポイントと他のエンドポイント間で複数の接続を確立することができるはずです。この文書の後半で指定されるように、これらの接続に由来する信号は、接続「モード」に従って混合されなければなりません。エンドポイントがサポートする接続の正確な数は、ゲートウェイの特性であり、実際にゲートウェイ内のリソースの割り当てに応じて変化してもよいです。"
    },
    {
      "indent": 3,
      "text": "In some cases, digital channels are used to carry signaling. This is the case for example for SS7 \"F\" links, or ISDN \"D\" channels. Media gateways that support these signaling functions shall be able to send and receive the signaling packets to and from a Call Agent, using the \"backhaul\" procedures defined by the SIGTRAN working group of the IETF. Digital channels are sometimes used in conjunction with channel associated signaling, such as \"MF R2\". Media gateways that support these signaling functions shall be able to detect and produce the corresponding signals, such as for example \"wink\" or \"A\", according to the event signaling and reporting procedures defined in MGCP.",
      "ja": "いくつかのケースでは、デジタルチャンネルは、シグナリングを運ぶために使用されます。これは、SS7「F」リンク、またはISDN「D」チャネルのための例の場合です。これらのシグナル伝達の機能をサポートするメディアゲートウェイはIETFのSIGTRANワーキンググループによって定義された「バックホール」手順を使用して、コール・エージェントにしてから、シグナリングパケットを送受信することができなければなりません。デジタルチャンネルは、時には、このような「MF R2」として、チャネル関連シグナリングと組み合わせて使用​​されます。これらのシグナリング機能をサポートするメディアゲートウェイは、イベントシグナリングおよびMGCPで定義された手順を報告によると、例えば、対応する信号、「ウィンク」又は「A」を検出して生成することができなければなりません。"
    },
    {
      "indent": 0,
      "text": "2.1.1.2 Analog Line",
      "section_title": true,
      "ja": "2.1.1.2アナログライン"
    },
    {
      "indent": 3,
      "text": "Analog lines can be used either as a \"client\" interface, providing service to a classic telephone unit, or as a \"service\" interface, allowing the gateway to send and receive analog calls. When the media gateway also supports a NAS service, the gateway shall be capable of receiving audio-encoded data (modem connection) and convert them into data packets.",
      "ja": "アナログ回線は、古典的な電話装置にサービスを提供する、または「サービス」インターフェイスとして、ゲートウェイは、送信およびアナログコールを受信できるように、「クライアント」インターフェースとしても使用することができます。メディア・ゲートウェイはまた、NASサービスをサポートしている場合、ゲートウェイは、（モデム接続）オーディオ符号化データを受信することが可能であるデータパケットに変換しなければなりません。"
    },
    {
      "indent": 14,
      "text": "                           +-------\n          +---------------+|\n(line) ===|analog endpoint| -------- Connections\n          +---------------+|\n                           +-------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Media gateways should be able to establish several connections between the endpoint and the packet networks, or between the endpoint and other endpoints in the same gateway. The audio signals originating from these connections shall be mixed according to the connection \"mode\", as specified later in this document. The precise number of connections that an endpoint supports is a characteristic of the gateway, and may in fact vary according to the allocation of resources within the gateway. A typical gateway should however be able to support two or three connections per endpoint, in order to support services such as \"call waiting\" or \"three way calling\".",
      "ja": "メディアゲートウェイは、エンドポイントとパケットネットワーク間、または同じゲートウェイにおけるエンドポイントと他のエンドポイント間で複数の接続を確立することができるはずです。この文書の後半で指定されるように、これらの接続から発する音声信号は、接続「モード」に従って混合されなければなりません。エンドポイントがサポートする接続の正確な数は、ゲートウェイの特性であり、実際にゲートウェイ内のリソースの割り当てに応じて変化してもよいです。典型的なゲートウェイは、しかし、そのような「キャッチホン」または「三者通話」などのサービスをサポートするために、エンドポイントごとに2つのまたは3つの接続をサポートすることができるはずです。"
    },
    {
      "indent": 0,
      "text": "2.1.1.3 Announcement Server Access Point",
      "section_title": true,
      "ja": "2.1.1.3アナウンスサーバアクセスポイント"
    },
    {
      "indent": 3,
      "text": "An announcement server endpoint provides access to an announcement service. Under requests from the Call Agent, the announcement server will \"play\" a specified announcement. The requests from the Call Agent will follow the event signaling and reporting procedures defined in MGCP.",
      "ja": "発表サーバ終点は発表サービスへのアクセスを提供します。コール・エージェントからの要求の下では、アナウンスサーバは、指定された発表を「再生」します。コール・エージェントからの要求はMGCPで定義されたシグナリング手順および報告イベントに従います。"
    },
    {
      "indent": 18,
      "text": "+----------------------+\n| Announcement endpoint| -------- Connection\n+----------------------+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "A given announcement endpoint is not expected to support more than one connection at a time. If several connections were established to the same endpoint, then the same announcements would be played simultaneously over all the connections.",
      "ja": "与えられたアナウンスのエンドポイントは、一度に複数の接続をサポートすることが期待されていません。複数の接続が同じエンドポイントに設立された場合は、同じ発表は、すべての接続を介して同時に再生されます。"
    },
    {
      "indent": 3,
      "text": "Connections to an announcement server are typically one way, or \"half duplex\" -- the announcement server is not expected to listen to the audio signals from the connection.",
      "ja": "アナウンスサーバが接続からのオーディオ信号を聞くことが予想されていない - アナウンスサーバーへの接続は、通常、1つの方法、または「半二重」です。"
    },
    {
      "indent": 0,
      "text": "2.1.1.4 Interactive Voice Response Access Point",
      "section_title": true,
      "ja": "2.1.1.4対話型音声応答アクセスポイント"
    },
    {
      "indent": 3,
      "text": "An Interactive Voice Response (IVR) endpoint provides access to an IVR service. Under requests from the Call Agent, the IVR server will \"play\" announcements and tones, and will \"listen\" to responses, such as DTMF input or voice messages, from the user. The requests from the Call Agent will follow the event signaling and reporting procedures defined in MGCP.",
      "ja": "対話型音声応答（IVR）エンドポイントは、IVRサービスへのアクセスを提供します。コール・エージェントからの要求の下では、IVRサーバは、発表とトーンを「再生」し、利用者からは、そのようなDTMF入力または音声メッセージなどの応答に「聞く」します。コール・エージェントからの要求はMGCPで定義されたシグナリング手順および報告イベントに従います。"
    },
    {
      "indent": 22,
      "text": "+-------------+\n| IVR endpoint| -------- Connection\n+-------------+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "A given IVR endpoint is not expected to support more than one connection at a time. If several connections were established to the same endpoint, then the same tones and announcements would be played simultaneously over all the connections.",
      "ja": "与えられたIVRエンドポイントは、一度に複数の接続をサポートすることが期待されていません。複数の接続が同じエンドポイントに設立された場合は、同じトーンおよびアナウンスメントは、すべての接続を介して同時に再生されます。"
    },
    {
      "indent": 0,
      "text": "2.1.1.5 Conference Bridge Access Point",
      "section_title": true,
      "ja": "2.1.1.5会議ブリッジアクセスポイント"
    },
    {
      "indent": 3,
      "text": "A conference bridge endpoint is used to provide access to a specific conference.",
      "ja": "会議ブリッジエンドポイントは、特定の会議へのアクセスを提供するために使用されます。"
    },
    {
      "indent": 15,
      "text": "                            +-------\n+--------------------------+|\n|Conference bridge endpoint| -------- Connections\n+--------------------------+|\n                            +-------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Media gateways should be able to establish several connections between the endpoint and the packet networks, or between the endpoint and other endpoints in the same gateway. The signals originating from these connections shall be mixed according to the connection \"mode\", as specified later in this document. The precise number of connections that an endpoint supports is a characteristic of the gateway, and may in fact vary according to the allocation of resources within the gateway.",
      "ja": "メディアゲートウェイは、エンドポイントとパケットネットワーク間、または同じゲートウェイにおけるエンドポイントと他のエンドポイント間で複数の接続を確立することができるはずです。この文書の後半で指定されるように、これらの接続に由来する信号は、接続「モード」に従って混合されなければなりません。エンドポイントがサポートする接続の正確な数は、ゲートウェイの特性であり、実際にゲートウェイ内のリソースの割り当てに応じて変化してもよいです。"
    },
    {
      "indent": 0,
      "text": "2.1.1.6 Packet Relay",
      "section_title": true,
      "ja": "2.1.1.6パケット中継"
    },
    {
      "indent": 3,
      "text": "A packet relay endpoint is a specific form of conference bridge, that typically only supports two connections. Packets relays can be found in firewalls between a protected and an open network, or in transcoding servers used to provide interoperation between incompatible gateways, for example gateways that do not support compatible compression algorithms, or gateways that operate over different transmission networks such as IP and ATM.",
      "ja": "パケット中継エンドポイントは、通常、2つの接続のみをサポートしている会議ブリッジの具体的な形態です。パケットリレーは、保護及びオープンネットワークとの間のファイアウォールで、またはトランスコーディング互換圧縮アルゴリズムをサポートしていない、例えばゲートウェイの、互換性のないゲートウェイとの間の相互運用を提供するために使用されるサーバ、またはIPなどの異なる伝送ネットワーク上で動作するゲートウェイに見出すことができるとATM。"
    },
    {
      "indent": 19,
      "text": "                        +-------\n+---------------------+ |\n|Packet relay endpoint|  2 connections\n+---------------------+ |\n                        +-------",
      "raw": true
    },
    {
      "indent": 0,
      "text": "2.1.1.7 ATM \"trunk side\" Interface",
      "section_title": true,
      "ja": "2.1.1.7 ATM「トランク側」インターフェイス"
    },
    {
      "indent": 3,
      "text": "ATM \"trunk side\" endpoints are typically found when one or several ATM permanent virtual circuits are used as a replacement for the classic \"TDM\" trunks linking switches. When ATM/AAL2 is used, several trunks or channels are multiplexed on a single virtual circuit; each of these trunks correspond to a single endpoint.",
      "ja": "1つまたはいくつかのATM永久仮想回路はスイッチを連結する古典的な「TDM」トランクの代替として使用される場合ATM「トランク側」エンドポイントは、典型的に見出されます。 ATM / AAL2を使用する場合、いくつかのトランクまたはチャネルは、単一の仮想回線上で多重化されます。これらのトランクの各々は、単一のエンドポイントに対応します。"
    },
    {
      "indent": 10,
      "text": "                                +-------\n            +------------------+|\n(channel) = |ATM trunk endpoint| -------- Connections\n            +------------------+|\n                                +-------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Media gateways should be able to establish several connections between the endpoint and the packet networks, or between the endpoint and other endpoints in the same gateway. The signals originating from these connections shall be mixed according to the connection \"mode\", as specified later in this document. The precise number of connections that an endpoint supports is a characteristic of the gateway, and may in fact vary according to the allocation of resources within the gateway.",
      "ja": "メディアゲートウェイは、エンドポイントとパケットネットワーク間、または同じゲートウェイにおけるエンドポイントと他のエンドポイント間で複数の接続を確立することができるはずです。この文書の後半で指定されるように、これらの接続に由来する信号は、接続「モード」に従って混合されなければなりません。エンドポイントがサポートする接続の正確な数は、ゲートウェイの特性であり、実際にゲートウェイ内のリソースの割り当てに応じて変化してもよいです。"
    },
    {
      "indent": 0,
      "text": "2.1.2 Endpoint Identifiers",
      "section_title": true,
      "ja": "2.1.2エンドポイント識別子"
    },
    {
      "indent": 3,
      "text": "Endpoint identifiers have two components that both are case-insensitive:",
      "ja": "エンドポイント識別子は、両方の大文字と小文字を区別しない二つの成分を持っています："
    },
    {
      "indent": 3,
      "text": "* the domain name of the gateway that is managing the endpoint",
      "ja": "*エンドポイントを管理しているゲートウェイのドメイン名"
    },
    {
      "indent": 3,
      "text": "* a local name within that gateway",
      "ja": "*そのゲートウェイ内のローカル名"
    },
    {
      "indent": 3,
      "text": "Endpoint names are of the form:",
      "ja": "エンドポイント名の形式は次のとおりです。"
    },
    {
      "indent": 6,
      "text": "local-endpoint-name@domain-name",
      "ja": "ローカル・エンドポイント名@ドメイン名"
    },
    {
      "indent": 3,
      "text": "where domain-name is an absolute domain-name as defined in RFC 1034 and includes a host portion, thus an example domain-name could be:",
      "ja": "ドメイン名は、RFC 1034で定義されるように、絶対ドメイン名とホスト部分を含む場合、このようにして、例えばドメイン名であってもよいです。"
    },
    {
      "indent": 6,
      "text": "mygateway.whatever.net",
      "ja": "ｍｙがてわｙ。うぁてゔぇｒ。ねｔ"
    },
    {
      "indent": 3,
      "text": "Also, domain-name may be an IP-address of the form defined for domain name in RFC 821, thus another example could be (see RFC 821 for details):",
      "ja": "また、ドメイン名は、このように、別の例では（詳細についてはRFC 821を参照）とすることができる、RFC 821のドメイン名に対して定義された形式のIPアドレスであってもよいです。"
    },
    {
      "indent": 6,
      "text": "[192.168.1.2]",
      "ja": "「１９２。１６８。１。２」"
    },
    {
      "indent": 3,
      "text": "Both IPv4 and IPv6 addresses can be specified, however use of IP addresses as endpoint identifiers is generally discouraged.",
      "ja": "IPv4およびIPv6アドレスの両方を指定することができ、IPの使用は、しかしとしてのエンドポイント識別子を解決し、一般的に推奨されています。"
    },
    {
      "indent": 3,
      "text": "Note that since the domain name portion is part of the endpoint identifier, different forms or different values referring to the same entity are not freely interchangeable. The most recently supplied form and value MUST always be used.",
      "ja": "ドメイン名部分は、エンドポイント識別子の一部であるので、同一のエンティティを参照の異なる形態または異なる値が自由に交換可能ではないことに留意されたいです。最近供給形式と値が常に使用しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The local endpoint name is case-insensitive. The syntax of the local endpoint name is hierarchical, where the least specific component of the name is the leftmost term, and the most specific component is the rightmost term. The precise syntax depends on the type of endpoint being named and MAY start with a term that identifies the endpoint type. In any case, the local endpoint name MUST adhere to the following naming rules:",
      "ja": "ローカルエンドポイント名は大文字と小文字を区別しません。名前の少なくとも特定成分が左端の用語であり、そして最も特定成分が右端の用語であるローカルエンドポイント名の構文は、階層的です。正確な構文は、指定されたエンドポイントの種類に依存し、エンドポイントのタイプを識別する用語で起動することがあります。いずれの場合も、ローカルエンドポイント名は、次の命名規則に従う必要があります。"
    },
    {
      "indent": 3,
      "text": "1) The individual terms of the naming path MUST be separated by a single slash (\"/\", ASCII 2F hex).",
      "ja": "1）命名経路の個々の用語は、単一のスラッシュ（「/」、アスキー2Fヘクス）によって分離されなければなりません。"
    },
    {
      "indent": 3,
      "text": "2) The individual terms are character strings composed of letters, digits or other printable characters, with the exception of characters used as delimiters (\"/\", \"@\"), characters used for wildcarding (\"*\", \"$\") and white spaces.",
      "ja": "2）個々の用語は、文字列がワイルドカードを使用区切り文字（「/」、「@」）として使用される文字、文字を除いて、文字、数字、または他の印刷可能な文字で構成されている（「*」、「$」）と空白。"
    },
    {
      "indent": 3,
      "text": "3) Wild-carding is represented either by an asterisk (\"*\") or a dollar sign (\"$\") for the terms of the naming path which are to be wild-carded. Thus, if the full local endpoint name is of the form:",
      "ja": "3）野生梳綿は、野生カーディングなるべき命名パスの条件にアスタリスク（「*」）、またはドル記号（「$」）のいずれかによって表されます。このように、完全なローカルエンドポイント名は以下のようであれば："
    },
    {
      "indent": 10,
      "text": "term1/term2/term3",
      "ja": "TERM1 / TERM2 / TERM3"
    },
    {
      "indent": 6,
      "text": "then the entity name field looks like this depending on which terms are wild-carded:",
      "ja": "その後、エンティティ名フィールドは、野生カーディングされた条件に応じて、次のようになります。"
    },
    {
      "indent": 10,
      "text": "*/term2/term3 if term1 is wild-carded\nterm1/*/term3 if term2 is wild-carded\nterm1/term2/* if term3 is wild-carded\nterm1/*/*     if term2 and term3 are wild-carded, etc.",
      "raw": true
    },
    {
      "indent": 6,
      "text": "In each of these examples a dollar sign could have appeared instead of an asterisk.",
      "ja": "これらの各例ではドル記号ではなく、アスタリスクの登場している可能性があります。"
    },
    {
      "indent": 3,
      "text": "4) A term represented by an asterisk (\"*\") is to be interpreted as: \"use ALL values of this term known within the scope of the Media Gateway\". Unless specified otherwise, this refers to all endpoints configured for service, regardless of their actual service state, i.e., in-service or out-of-service.",
      "ja": "「メディアゲートウェイの範囲内で知られているこの用語のすべての値を使用」：4）、アスタリスク（「*」）で表される用語として解釈されるべきです。特に明記しない限り、これは、関係なく、実際のサービス状態の、サービスのために構成されたすべてのエンドポイントを指し、すなわち、サービスまたはアウトオブサービス。"
    },
    {
      "indent": 3,
      "text": "5) A term represented by a dollar sign (\"$\") is to be interpreted as: \"use ANY ONE value of this term known within the scope of the Media Gateway\". Unless specified otherwise, this only refers to endpoints that are in-service.",
      "ja": "「メディアゲートウェイの範囲内で知られているこの用語のいずれかの値を使用する」：5）、ドル記号（「$」）で表される用語として解釈されるべきです。特に指定しない限り、これはのみでサービスされているエンドポイントを指します。"
    },
    {
      "indent": 3,
      "text": "Furthermore, it is RECOMMENDED that Call Agents adhere to the following:",
      "ja": "さらに、コールエージェントは、以下に従うことをお勧めします。"
    },
    {
      "indent": 3,
      "text": "* Wild-carding should only be done from the right, thus if a term is wild-carded, then all terms to the right of that term should be wild-carded as well.",
      "ja": "*野生梳綿は用語が野生カーディングであれば、その用語の右側にあるすべての用語は、同様に野生カーディングする必要がありますので、右から行われるべきです。"
    },
    {
      "indent": 3,
      "text": "* In cases where mixed dollar sign and asterisk wild-cards are used, dollar-signs should only be used from the right, thus if a term had a dollar sign wild-card, all terms to the right of that term should also contain dollar sign wild-cards.",
      "ja": "*混合ドル記号とアスタリスクワイルドカードが使用されているケースでは、ドルの兆候だけでもドルが含まれている必要があり、その用語の右側に、この用語は、ドル記号ワイルドカードを持っていたのであれば、右からすべての用語を使用する必要がありますワイルドカードに署名。"
    },
    {
      "indent": 3,
      "text": "The description of a specific command may add further criteria for selection within the general rules given above.",
      "ja": "特定のコマンドの説明は、上記の一般的なルール内の選択のためのさらなる基準を追加することができます。"
    },
    {
      "indent": 3,
      "text": "Note, that wild-cards may be applied to more than one term in which\ncase they shall be evaluated from left to right.  For example, if we\nhave the endpoint names \"a/1\", \"a/2\", \"b/1\", and \"b/2\", then \"$/*\"\n(which is not recommended) will evaluate to either \"a/1, a/2\", or\n\"b/1, b/2\".  However, \"*/$\" may evaluate to \"a/1, b/1\", \"a/1, b/2\",\n\"a/2, b/1\", or \"a/2, b/2\".  The use of mixed wild-cards in a command\nis considered error prone and is consequently discouraged.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "A local name that is composed of only a wildcard character refers to either all (*) or any ($) endpoints within the media gateway.",
      "ja": "ワイルドカード文字のみで構成されているローカル名は、メディアゲートウェイ内のすべての（*）または任意の（$）、エンドポイントのいずれかを指します。"
    },
    {
      "indent": 0,
      "text": "2.1.3 Calls and Connections",
      "section_title": true,
      "ja": "2.1.3コールと接続"
    },
    {
      "indent": 3,
      "text": "Connections are created on the Call Agent on each endpoint that will be involved in the \"call\". In the classic example of a connection between two \"DS0\" endpoints (EP1 and EP2), the Call Agents controlling the endpoints will establish two connections (C1 and C2):",
      "ja": "接続は、「コール」に関与することになり、各エンドポイントにコールエージェントで作成されます。二つの「DS0」エンドポイント（EP1およびEP2）との間の接続の典型的な例では、エンドポイントを制御するコールエージェントは、2つの接続（C1及びC2）を確立します。"
    },
    {
      "indent": 4,
      "text": "              +---+                            +---+\n(channel1) ===|EP1|--(C1)--...        ...(C2)--|EP2|===(channel2)\n              +---+                            +---+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Each connection will be designated locally by an endpoint unique connection identifier, and will be characterized by connection attributes.",
      "ja": "各接続は、エンドポイント固有の接続識別子によって局所的に指定され、接続属性によって特徴付けられます。"
    },
    {
      "indent": 3,
      "text": "When the two endpoints are located on gateways that are managed by the same Call Agent, the creation is done via the three following steps:",
      "ja": "2つのエンドポイントが同じCallエージェントによって管理されているゲートウェイ上に配置されている場合は、作成は次の三つの工程を経て行われます。"
    },
    {
      "indent": 3,
      "text": "1) The Call Agent asks the first gateway to \"create a connection\" on the first endpoint. The gateway allocates resources to that connection, and responds to the command by providing a \"session description\". The session description contains the information necessary for a third party to send packets towards the newly created connection, such as for example IP address, UDP port, and codec parameters.",
      "ja": "1）コール・エージェントは、最初のエンドポイント上で「接続を作成する」最初のゲートウェイを要求します。ゲートウェイは、その接続にリソースを割り当てて、「セッション記述」を提供することで、コマンドに応答します。セッション記述は、例えば、IPアドレス、UDPポート、およびコーデックのパラメータについては、新たに作成された接続に向けてパケットを送信するために、第三者のために必要な情報が含まれています。"
    },
    {
      "indent": 3,
      "text": "2) The Call Agent then asks the second gateway to \"create a connection\" on the second endpoint. The command carries the \"session description\" provided by the first gateway. The gateway allocates resources to that connection, and responds to the command by providing its own \"session description\".",
      "ja": "2）Callエージェントは、次に、第2のエンドポイントに「接続を作成」する第2のゲートウェイに要求します。コマンドは、最初のゲートウェイによって提供される「セッション記述」を運びます。ゲートウェイは、その接続にリソースを割り当てて、独自の「セッション記述」を提供することで、コマンドに応答します。"
    },
    {
      "indent": 3,
      "text": "3) The Call Agent then uses a \"modify connection\" command to provide this second \"session description\" to the first endpoint. Once this is done, communication can proceed in both directions.",
      "ja": "3）コール・エージェントは、最初のエンドポイントにこの第二の「セッション記述」を提供する「接続を変更」コマンドを使用しています。これが完了すると、通信が両方の方向に進むことができます。"
    },
    {
      "indent": 3,
      "text": "When the two endpoints are located on gateways that are managed by two different Call Agents, the Call Agents exchange information through a Call-Agent to Call-Agent signaling protocol, e.g., SIP [7], in order to synchronize the creation of the connection on the two endpoints.",
      "ja": "2つのエンドポイントはSIP接続の作成を同期させるために、[7]、プロトコルシグナリングエージェントを呼び出すためにコールエージェントを介して2つの異なるコールエージェント、コールエージェント情報交換によって管理されているゲートウェイ、例えば、上に配置されている場合2つのエンドポイントに。"
    },
    {
      "indent": 3,
      "text": "Once a connection has been established, the connection parameters can be modified at any time by a \"modify connection\" command. The Call Agent may for example instruct the gateway to change the codec used on a connection, or to modify the IP address and UDP port to which data should be sent, if a connection is \"redirected\".",
      "ja": "接続が確立された後、接続パラメータは、「接続を変更」コマンドにより、いつでも変更することができます。コール・エージェントは、例えば、接続に使用されるコーデックを変更するために、または接続が「リダイレクト」されている場合、IPアドレスとUDPポートがデータを送信する必要があるためにどの修正するためにゲートウェイを指示することができます。"
    },
    {
      "indent": 3,
      "text": "The Call Agent removes a connection by sending a \"delete connection\" command to the gateway. The gateway may also, under some circumstances, inform a gateway that a connection could not be sustained.",
      "ja": "コールエージェントは、ゲートウェイに「接続を削除」コマンドを送信して接続を削除します。ゲートウェイはまた、いくつかの状況下で、接続は維持できませんでしたゲートウェイに通知してもよいです。"
    },
    {
      "indent": 3,
      "text": "The following diagram provides a view of the states of a connection, as seen from the gateway:",
      "ja": "ゲートウェイから見た次の図は、接続の状態のビューを提供します。"
    },
    {
      "indent": 5,
      "text": "      Create connection\n         received\n             |\n             V\n    +-------------------+\n    |resource allocation|-(failed)-+\n    +-------------------+          |\n             |           (connection refused)\n       (successful)\n             |\n             v\n+----------->+\n|            |\n|   +-------------------+\n|   |  remote session   |\n|   |   description     |----------(yes)--------+\n|   |    available ?    |                       |\n|   +-------------------+                       |\n|            |                                  |\n|          (no)                                 |\n|            |                                  |\n|      +-----------+                         +------+\n| +--->| half open |------> Delete   <-------| open |<----------+\n| |    |  (wait)   |      Connection         |(wait)|           |\n| |    +-----------+       received          +------+           |\n| |          |                 |                |               |\n| |   Modify Connection        |         Modify Connection      |\n| |      received              |            received            |\n| |          |                 |                |               |\n| | +--------------------+     |       +--------------------+   |\n| | |assess modification |     |       |assess modification |   |\n| | +--------------------+     |       +--------------------+   |\n| |    |             |         |          |             |       |\n| |(failed)     (successful)   |      (failed)     (successful) |\n| |    |             |         |          |             |       |\n| +<---+             |         |          +-------------+-------+\n|                    |         |\n+<-------------------+         |\n                               |\n                      +-----------------+\n                      | Free connection |\n                      | resources.      |\n                      | Report.         |\n                      +-----------------+\n                               |\n                               V",
      "raw": true
    },
    {
      "indent": 0,
      "text": "2.1.3.1 Names of Calls",
      "section_title": true,
      "ja": "コールの2.1.3.1名前"
    },
    {
      "indent": 3,
      "text": "One of the attributes of each connection is the \"call identifier\", which as far as the MGCP protocol is concerned has little semantic meaning, and is mainly retained for backwards compatibility.",
      "ja": "各接続の属性の1つは限りMGCPプロトコルに関しては少しセマンティックな意味を持っており、主に後方互換性のために残されている「コール識別子」、です。"
    },
    {
      "indent": 3,
      "text": "Calls are identified by unique identifiers, independent of the underlying platforms or agents. Call identifiers are hexadecimal strings, which are created by the Call Agent. The maximum length of call identifiers is 32 characters.",
      "ja": "コールは基礎となるプラットフォームや薬の独立した一意の識別子によって識別されます。コール識別子は、コールエージェントによって作成された進数の文字列です。コール識別子の最大長は32個の文字です。"
    },
    {
      "indent": 3,
      "text": "Call identifiers are expected to be unique within the system, or at a minimum, unique within the collection of Call Agents that control the same gateways. From the gateway's perspective, the Call identifier is thus unique. When a Call Agent builds several connections that pertain to the same call, either on the same gateway or in different gateways, these connections that belong to the same call should share the same call-id. This identifier can then be used by accounting or management procedures, which are outside the scope of MGCP.",
      "ja": "コール識別子は同じゲートウェイを制御するコールエージェントのコレクション内で一意で、システム内の、または最低でもユニークであることが予想されます。ゲートウェイの観点から、コール識別子は、このようにユニークです。コールエージェントが同じゲートウェイ上または異なるゲートウェイのいずれかで、同じコールに関連するいくつかの接続を構築するとき、同じコールに属しているこれらの接続は、同じコールIDを共有する必要があります。この識別子は、次いで、MGCPの範囲外である会計または管理手順によって使用することができます。"
    },
    {
      "indent": 0,
      "text": "2.1.3.2 Names of Connections",
      "section_title": true,
      "ja": "接続の2.1.3.2名前"
    },
    {
      "indent": 3,
      "text": "Connection identifiers are created by the gateway when it is requested to create a connection. They identify the connection within the context of an endpoint. Connection identifiers are treated in MGCP as hexadecimal strings. The gateway MUST make sure that a proper waiting period, at least 3 minutes, elapses between the end of a connection that used this identifier and its use in a new connection for the same endpoint (gateways MAY decide to use identifiers that are unique within the context of the gateway). The maximum length of a connection identifier is 32 characters.",
      "ja": "接続を作成するために要求されたときに、接続識別子は、ゲートウェイによって作成されます。彼らは、エンドポイントのコンテキスト内での接続を識別します。接続識別子は、16進文字列としてMGCPで処理されます。ゲートウェイは、適切な待機期間は、少なくとも3分、経過識別子と同じエンドポイントのための新しい接続での使用を使用し、接続終了までの間（ゲートウェイが内一意である識別子を使用するように決定することができることを確認する必要がありますゲートウェイの文脈）。接続識別子の最大長は32個の文字です。"
    },
    {
      "indent": 0,
      "text": "2.1.3.3 Management of Resources, Attributes of Connections",
      "section_title": true,
      "ja": "2.1.3.3資源の管理に、接続の属性"
    },
    {
      "indent": 3,
      "text": "Many types of resources will be associated to a connection, such as specific signal processing functions or packetization functions. Generally, these resources fall in two categories:",
      "ja": "リソースの多くのタイプは、特定の信号処理機能やパケットの関数として、接続に関連付けられます。一般的に、これらのリソースは、2つのカテゴリに分類できます。"
    },
    {
      "indent": 3,
      "text": "1) Externally visible resources, that affect the format of \"the bits on the network\" and must be communicated to the second endpoint involved in the connection.",
      "ja": "「ネットワーク上のビット」の形式に影響を与え、接続に関与する第2のエンドポイントに伝達されなければならない1）外部から見えるリソース。"
    },
    {
      "indent": 3,
      "text": "2) Internal resources, that determine which signal is being sent over the connection and how the received signals are processed by the endpoint.",
      "ja": "2）内部リソース、すなわち、接続を介して送信され、どのように受信された信号は、エンドポイントによって処理される信号を決定します。"
    },
    {
      "indent": 3,
      "text": "The resources allocated to a connection, and more generally the handling of the connection, are chosen by the gateway under instructions from the Call Agent. The Call Agent will provide these instructions by sending two sets of parameters to the gateway:",
      "ja": "接続に割り当てられたリソース、およびより一般的な接続の取り扱いは、コールエージェントからの指示の下でゲートウェイによって選択されています。コールエージェントは、ゲートウェイに2組のパラメータを送信することにより、これらの指示を提供します："
    },
    {
      "indent": 3,
      "text": "1) The local directives instruct the gateway on the choice of resources that should be used for a connection,",
      "ja": "1）ローカルディレクティブは、接続に使用されるべきリソースの選択にゲートウェイに指示し、"
    },
    {
      "indent": 3,
      "text": "2) When available, the \"session description\" provided by the other end of the connection (referred to as the remote session description).",
      "ja": "接続（リモートセッション記述とも呼ばれる）の他方の端部によって提供される2）利用可能な場合、「セッション記述」。"
    },
    {
      "indent": 3,
      "text": "The local directives specify such parameters as the mode of the connection (e.g., send-only, or send-receive), preferred coding or packetization methods, usage of echo cancellation or silence suppression. (A detailed list can be found in the specification of the LocalConnectionOptions parameter of the CreateConnection command.) Depending on the parameter, the Call Agent MAY either specify a value, a range of values, or no value at all. This allows various implementations to implement various levels of control, from a very tight control where the Call Agent specifies minute details of the connection handling to a very loose control where the Call Agent only specifies broad guidelines, such as the maximum bandwidth, and lets the gateway choose the detailed values subject to the guidelines.",
      "ja": "ローカルディレクティブは、接続モードなどのパラメータを指定する（例えば、送信のみ、または送信・受信）、好ましい符号化またはパケット化方法、エコーキャンセル又は無音圧縮の使用。 （詳細なリストはのCreateConnectionコマンドのLocalConnectionOptionsパラメータの仕様で見つけることができます。）パラメータによって、コールエージェントは、値、値の範囲、またはまったく値を指定することもできますどちらか。これは、コールエージェントがコールエージェントだけな最大帯域幅など幅広いガイドラインを指定し、することができます非常に緩い制御に接続処理の分の詳細を指定する非常にタイトなコントロールから、様々な実装は、コントロールのさまざまなレベルを実装することができますゲートウェイは、ガイドラインの対象に詳細な値を選択してください。"
    },
    {
      "indent": 3,
      "text": "Based on the value of the local directives, the gateway will determine the resources to allocate to the connection. When this is possible, the gateway will choose values that are in line with the remote session description - but there is no absolute requirement that the parameters be exactly the same.",
      "ja": "ローカル指令の値に基づいて、ゲートウェイは、接続に割り当てるリソースを決定します。これが可能である場合、ゲートウェイは、リモートセッション記述と一致している値を選択する - しかし、パラメータは正確に同じである絶対的な要件は存在しません。"
    },
    {
      "indent": 3,
      "text": "Once the resources have been allocated, the gateway will compose a \"session description\" that describes the way it intends to send and receive packets. Note that the session description may in some cases present a range of values. For example, if the gateway is ready to accept one of several compression algorithms, it can provide a list of these accepted algorithms.",
      "ja": "リソースが割り当てられた後、ゲートウェイは、それが送信したパケットを受けようとする方法を説明し、「セッション記述」を構成します。セッション記述は、いくつかのケースでは値の範囲を提示してもよいことに留意されたいです。ゲートウェイは、いくつかの圧縮アルゴリズムのいずれかを受け入れる準備ができている場合、例えば、それは、これらの受け入れられたアルゴリズムのリストを提供することができます。"
    },
    {
      "indent": 14,
      "text": "   Local Directives\n  (from Call Agent 1)\n          |\n          V\n   +-------------+\n   | resource    |\n   | allocation  |\n   | (gateway 1) |\n   +-------------+\n     |         |\n     V         |\n   Local       |\nParameters     V\n     |      Session\n     |    Description               Local Directives\n     |         |                   (from Call Agent 2)\n     |         +---> Transmission----+      |\n     |                (CA to CA)     |      |\n     |                               V      V\n     |                           +-------------+\n     |                           | resource    |\n     |                           | allocation  |\n     |                           | (gateway 2) |\n     |                           +-------------+\n     |                               |      |\n     |                               |      V\n     |                               |    Local\n     |                               |  Parameters\n     |                            Session\n     |                          Description\n     |         +---- Transmission<---+\n     |         |      (CA to CA)\n     V         V\n   +-------------+\n   | modification|\n   | (gateway 1) |\n   +-------------+\n     |\n     V\n   Local\nParameters",
      "raw": true
    },
    {
      "indent": 6,
      "text": "-- Information flow: local directives & session descriptions --",
      "ja": " - 情報の流れ：ローカルディレクティブ＆セッション記述 - "
    },
    {
      "indent": 0,
      "text": "2.1.3.4 Special Case of Local Connections",
      "section_title": true,
      "ja": "ローカル接続の2.1.3.4特殊なケース"
    },
    {
      "indent": 3,
      "text": "Large gateways include a large number of endpoints which are often of different types. In some networks, we may often have to set-up connections between endpoints that are located within the same gateway. Examples of such connections may be:",
      "ja": "大規模なゲートウェイは、多くの場合、異なる種類のあるエンドポイントの数が多いが含まれます。一部のネットワークでは、私たちはしばしばセットアップするために、同じゲートウェイ内に位置しているエンドポイント間の接続を有していてもよいです。このような接続の例は、であってもよいです。"
    },
    {
      "indent": 3,
      "text": "* Connecting a call to an Interactive Voice-Response unit,",
      "ja": "*対話型音声応答装置に電話を接続し、"
    },
    {
      "indent": 3,
      "text": "* Connecting a call to a Conferencing unit,",
      "ja": "*会議ユニットへのコールを接続します、"
    },
    {
      "indent": 3,
      "text": "* Routing a call from one endpoint to another, something often described as a \"hairpin\" connection.",
      "ja": "別のエンドポイントからのコールをルーティング*、何かは、多くの場合、「ヘアピン」接続として説明します。"
    },
    {
      "indent": 3,
      "text": "Local connections are much simpler to establish than network connections. In most cases, the connection will be established through some local interconnecting device, such as for example a TDM bus.",
      "ja": "ローカル接続はネットワーク接続よりも確立がはるかに簡単です。ほとんどの場合、接続は、例えばTDMバスのように、いくつかのローカル相互接続装置を介して確立されます。"
    },
    {
      "indent": 3,
      "text": "When two endpoints are managed by the same gateway, it is possible to specify the connection in a single command that conveys the names of the two endpoints that will be connected. The command is essentially a \"Create Connection\" command which includes the name of the second endpoint in lieu of the \"remote session description\".",
      "ja": "2つのエンドポイントが同じゲートウェイによって管理されている場合は、接続される2つのエンドポイントの名前を搬送する単一のコマンドで接続を指定することが可能です。コマンドは、本質的に「リモートセッション記述」の代わりに第2のエンドポイントの名前を含む「接続の作成」コマンドです。"
    },
    {
      "indent": 0,
      "text": "2.1.4 Names of Call Agents and Other Entities",
      "section_title": true,
      "ja": "2.1.4コールエージェントの名称およびその他のエンティティ"
    },
    {
      "indent": 3,
      "text": "The media gateway control protocol has been designed to allow the implementation of redundant Call Agents, for enhanced network reliability. This means that there is no fixed binding between entities and hardware platforms or network interfaces.",
      "ja": "メディアゲートウェイ制御プロトコルは、強化されたネットワークの信頼性のために、冗長なコールエージェントの実装を可能にするように設計されています。これには、固定エンティティおよびハードウェアプラットフォームまたはネットワークインターフェイスとの間の結合が存在しないことを意味します。"
    },
    {
      "indent": 3,
      "text": "Call Agent names consist of two parts, similar to endpoint names. Semantically, the local portion of the name does not exhibit any internal structure. An example Call Agent name is:",
      "ja": "エージェント名が名をエンドポイントに類似した二つの部分から成って呼び出します。意味的に、名前のローカル部分は、任意の内部構造を示しません。例えば、コールエージェント名は次のようになります。"
    },
    {
      "indent": 6,
      "text": "ca1@ca.whatever.net",
      "ja": "か１＠か。うぁてゔぇｒ。ねｔ"
    },
    {
      "indent": 3,
      "text": "Note that both the local part and the domain name have to be supplied. Nevertheless, implementations are encouraged to accept call agent names consisting of only the domain name.",
      "ja": "ローカル部分とドメイン名の両方を供給する必要があることに注意してください。それにもかかわらず、実装がドメイン名だけから成るコールエージェント名を受け入れることをお勧めします。"
    },
    {
      "indent": 3,
      "text": "Reliability can be improved by using the following procedures:",
      "ja": "信頼性は、以下の手順を用いることによって改善することができます。"
    },
    {
      "indent": 3,
      "text": "* Entities such as endpoints or Call Agents are identified by their domain name, not their network addresses. Several addresses can be associated with a domain name. If a command or a response cannot be forwarded to one of the network addresses, implementations MUST retry the transmission using another address.",
      "ja": "*などのエンドポイントまたはコールエージェントなどのエンティティは、そのドメイン名ではなく、彼らのネットワークアドレスによって識別されます。複数のアドレスは、ドメイン名に関連付けることができます。コマンドまたは応答は、ネットワークアドレスの1つに転送することができない場合、実装は、別のアドレスを使用して送信を再試行しなければなりません。"
    },
    {
      "indent": 3,
      "text": "* Entities MAY move to another platform. The association between a logical name (domain name) and the actual platform is kept in the domain name service. Call Agents and Gateways MUST keep track of the time-to-live of the record they read from the DNS. They MUST query the DNS to refresh the information if the time to live has expired.",
      "ja": "*エンティティは、別のプラットフォームに移動することができます。論理名（ドメイン名）と実際のプラットフォームとの間の関連付けは、ドメインネームサービスに保持されます。コールエージェントおよびゲートウェイは、生存時間、彼らがDNSから読み込まれたレコードのを追跡する必要があります。彼らは生きるための時間が経過した場合の情報を更新するためにDNSを照会しなければなりません。"
    },
    {
      "indent": 3,
      "text": "In addition to the indirection provided by the use of domain names and the DNS, the concept of \"notified entity\" is central to reliability and fail-over in MGCP. The \"notified entity\" for an endpoint is the Call Agent currently controlling that endpoint. At any point in time, an endpoint has one, and only one, \"notified entity\" associated with it. The \"notified entity\" determines where the endpoint will send commands to; when the endpoint needs to send a command to the Call Agent, it MUST send the command to its current \"notified entity\". The \"notified entity\" however does not determine where commands can be received from; any Call Agent can send commands to the endpoint. Please refer to Section 5 for the relevant security considerations.",
      "ja": "ドメイン名とDNSの使用により提供される間接に加えて、「通知エンティティ」の概念は、信頼性とフェイルオーバーMGCPでの中心です。エンドポイントのための「通知の実体は」コールエージェントは現在、そのエンドポイントを制御しています。どの時点でも、エンドポイントは1を持っており、それに関連する唯一の、「通知実体」。 「通知エンティティは、」エンドポイントがにコマンドを送信する場所を決定します。エンドポイントがコールエージェントにコマンドを送信する必要があるときは、その現在の「通知の実体」にコマンドを送らなければなりません。コマンドがから受け取ることができる「通知実体」が決定していません。任意のコール・エージェントは、エンドポイントにコマンドを送信することができます。関連するセキュリティ上の考慮事項については、セクション5を参照してください。"
    },
    {
      "indent": 3,
      "text": "Upon startup, the \"notified entity\" MUST be set to a provisioned value. Most commands sent by the Call Agent include the ability to explicitly name the \"notified entity\" through the use of a \"NotifiedEntity\" parameter. The \"notified entity\" will stay the same until either a new \"NotifiedEntity\" parameter is received or the endpoint does a warm or cold (power-cycle) restart.",
      "ja": "起動時に、「通知の実体は、」プロビジョニング値に設定しなければなりません。コールエージェントによって送信されたほとんどのコマンドは、明示的に「NotifiedEntity」パラメータを使用して「通知実体」という名前を付けする機能があります。新しい「NotifiedEntity」パラメータのいずれかが受信されているか、エンドポイントが温かいか冷たい（パワーサイクル）の再起動を行うまでは、「通知の実体は」同じままになります。"
    },
    {
      "indent": 3,
      "text": "If a \"NotifiedEntity\" parameter is sent with an \"empty\" value, the \"notified entity\" for the endpoint will be set to empty. If the \"notified entity\" for an endpoint is empty or has not been set explicitly (neither by a command nor by provisioning), the \"notified entity\" will then default to the source address (i.e., IP address and UDP port number) of the last successful non-audit command received for the endpoint. Auditing will thus not change the \"notified entity\". Use of an empty \"NotifiedEntity\" parameter value is strongly discouraged as it is error prone and eliminates the DNS-based fail-over and reliability mechanisms.",
      "ja": "「NotifiedEntity」パラメータが「空」の値で送信された場合、エンドポイントのための「通知の実体は」空に設定されます。エンドポイントのための「通知実体は」空であるか（コマンドでもプロビジョニングでもない）明示的に設定されていない場合は、「通知の実体は、」その後、送信元アドレス（すなわち、IPアドレスとUDPポート番号）にデフォルト設定されますの最後に成功した非監査コマンドは、エンドポイントのために受け取りました。監査は、このように「通知実体を」変更されません。それはエラーが発生しやすくなりますし、DNSベースのフェイルオーバーおよび信頼性のメカニズムを排除して、空の「NotifiedEntity」パラメータ値の使用は強くお勧めします。"
    },
    {
      "indent": 0,
      "text": "2.1.5 Digit Maps",
      "section_title": true,
      "ja": "2.1.5桁地図"
    },
    {
      "indent": 3,
      "text": "The Call Agent can ask the gateway to collect digits dialed by the user. This facility is intended to be used with residential gateways to collect the numbers that a user dials; it can also be used with trunking gateways and access gateways alike, to collect access codes, credit card numbers and other numbers requested by call control services.",
      "ja": "コール・エージェントは、ユーザーがダイヤルされた数字を収集するためのゲートウェイを頼むことができます。この機能は、ユーザがダイヤルという数字を収集するために、住宅用ゲートウェイで使用することを意図しています。また、アクセスコード、クレジットカード番号や呼制御サービスによって要求された他の番号を収集するために、同様のゲートウェイとアクセスゲートウェイをトランキングを使用することができます。"
    },
    {
      "indent": 3,
      "text": "One procedure is for the gateway to notify the Call Agent of each individual dialed digit, as soon as they are dialed. However, such a procedure generates a large number of interactions. It is preferable to accumulate the dialed numbers in a buffer, and to transmit them in a single message.",
      "ja": "1つの手順は、すぐに彼らがダイヤルされているように、個々のダイヤル番号のコールエージェントに通知するためのゲートウェイです。しかしながら、そのような手順は、相互作用の多数を生成します。バッファ内のダイヤル番号を蓄積し、そして単一のメッセージでそれらを送信することが好ましいです。"
    },
    {
      "indent": 3,
      "text": "The problem with this accumulation approach, however, is that it is hard for the gateway to predict how many numbers it needs to accumulate before transmission. For example, using the phone on our desk, we can dial the following numbers:",
      "ja": "この蓄積アプローチの問題は、しかし、ゲートウェイはそれが送信される前に蓄積する必要がありますどのように多くの数字を予測することは困難であるということです。たとえば、私たちの机の上に携帯電話を使用して、我々は次の番号をダイヤルすることができます："
    },
    {
      "indent": 7,
      "text": " ------------------------------------------------------\n|  0                     |  Local operator             |\n|  00                    |  Long distance operator     |\n|  xxxx                  |  Local extension number     |\n|  8xxxxxxx              |  Local number               |\n|  #xxxxxxx              |  Shortcut to local number at|\n|                        |  other corporate sites      |\n|  *xx                   |  Star services              |\n|  91xxxxxxxxxx          |  Long distance number       |\n|  9011 + up to 15 digits|  International number       |\n ------------------------------------------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The solution to this problem is to have the Call Agent load the gateway with a digit map that may correspond to the dial plan. This digit map is expressed using a syntax derived from the Unix system command, egrep. For example, the dial plan described above results in the following digit map:",
      "ja": "この問題を解決するには、コールエージェントは、ダイヤルプランに対応することがケタマップとゲートウェイをロードすることです。この数字マップは、UNIXシステムコマンド、egrepの由来する構文を使用して表現されます。たとえば、ダイヤルプランは、以下の桁マップの結果上述しました："
    },
    {
      "indent": 6,
      "text": "(0T|00T|[1-7]xxx|8xxxxxxx|#xxxxxxx|*xx|91xxxxxxxxxx|9011x.T)",
      "ja": "（0T | 00T | [1-7] XXX | 8xxxxxxx | #xxxxxxx | * XX | 91xxxxxxxxxx | 9011x.T）"
    },
    {
      "indent": 3,
      "text": "The formal syntax of the digit map is described by the DigitMap rule in the formal syntax description of the protocol (see Appendix A) - support for basic digit map letters is REQUIRED while support for extension digit map letters is OPTIONAL. A gateway receiving a digit map with an extension digit map letter not supported SHOULD return error code 537 (unknown digit map extension).",
      "ja": "ケタ地図の正式な構文は、プロトコルの正式な構文記述のDigitMap規則によって記述される（付録A参照） - 拡張桁マップ文字のサポートはオプションでありながら、基本的な数字マップ文字のサポートが必要です。サポートされていない拡張ディジットマップ文字と数字のマップを受け取るゲートウェイは、エラーコード537（未知の桁マップ拡張子）を返すべきです。"
    },
    {
      "indent": 3,
      "text": "A digit map, according to this syntax, is defined either by a (case insensitive) \"string\" or by a list of strings. Each string in the list is an alternative numbering scheme, specified either as a set of digits or timers, or as an expression over which the gateway will attempt to find a shortest possible match. The following constructs can be used in each numbering scheme:",
      "ja": "ケタ地図は、この構文によれば、（大文字と小文字を区別しない）、「文字列」によって、または文字列のリストのいずれかによって定義されます。リスト内の各文字列は、数字又はタイマーのセットとして、またはゲートウェイが最短一致を見つけるためにしようとし、その上式のいずれかとして指定された別のナンバリングスキームです。以下の構築物は、各ナンバリングスキームで使用することができます。"
    },
    {
      "indent": 3,
      "text": "* Digit: A digit from \"0\" to \"9\". * Timer: The symbol \"T\" matching a timer expiry. * DTMF: A digit, a timer, or one of the symbols \"A\", \"B\", \"C\", \"D\", \"#\", or \"*\". Extensions may be defined. * Wildcard: The symbol \"x\" which matches any digit (\"0\" to \"9\"). * Range: One or more DTMF symbols enclosed between square brackets (\"[\" and \"]\"). * Subrange: Two digits separated by hyphen (\"-\") which matches any digit between and including the two. The subrange construct can only be used inside a range construct, i.e., between \"[\" and \"]\". * Position: A period (\".\") which matches an arbitrary number, including zero, of occurrences of the preceding construct.",
      "ja": "*桁：「9」を「0」からの数字。 *タイマー：タイマー満了に一致する記号「T」。 * DTMF：桁、タイマー、または記号 \"A\"、 \"B\"、 \"C\"、 \"D\"、 \"＃\"、または \"*\" のいずれか。拡張機能を定義することができます。 *ワイルドカード：任意の数字と一致するシンボル「X」（「0」〜「9」まで）。 *範囲：角括弧の間に封入つ以上のDTMFシンボル（「[」と「]」）。 *サブレンジ：ハイフンで区切られた2つの数字（「 - 」）と2つを含むの間の任意の数字と一致。サブレンジ構築物のみ「[」と「]」の間、すなわち、範囲構築物内で使用することができます。 *位置：前の構築の発生ゼロを含む任意の数と一致するピリオド（「」）。"
    },
    {
      "indent": 3,
      "text": "A gateway that detects events to be matched against a digit map MUST do the following:",
      "ja": "イベントを検出したゲートウェイは、次の手順を実行しなければならケタマップと照合します。"
    },
    {
      "indent": 3,
      "text": "1) Add the event code as a token to the end of an internal state variable for the endpoint called the \"current dial string\".",
      "ja": "エンドポイントの内部状態変数の末尾にトークンが「現在のダイヤル文字列」と呼ばれるように1）イベントコードを追加します。"
    },
    {
      "indent": 3,
      "text": "2) Apply the current dial string to the digit map table, attempting a match to each expression in the digit map.",
      "ja": "2）桁マップ内の各式に一致するものを試み、桁マップテーブルに現在のダイヤル文字列を適用します。"
    },
    {
      "indent": 3,
      "text": "3) If the result is under-qualified (partially matches at least one entry in the digit map and doesn't completely match another entry), do nothing further.",
      "ja": "結果は下の修飾（一部ケタマップに少なくとも1つのエントリに一致し、完全に別のエントリと一致しない）である場合は3）、さらに何もしません。"
    },
    {
      "indent": 3,
      "text": "If the result matches an entry, or is over-qualified (i.e., no further digits could possibly produce a match), send the list of accumulated events to the Call Agent. A match, in this specification, can be either a \"perfect match,\" exactly matching one of the specified alternatives, or an impossible match, which occurs when the dial string does not match any of the alternatives. Unexpected timers, for example, can cause \"impossible matches\". Both perfect matches and impossible matches trigger notification of the accumulated digits (which may include other events - see Section 2.3.3).",
      "ja": "結果は、エントリと一致する、または過剰修飾（すなわち、それ以上の数字はおそらく試合を作ることができなかった）場合には、コール・エージェントに蓄積されたイベントのリストを送信します。試合は、この仕様では、正確に指定された選択肢のうちの1つ、またはダイヤル文字列が選択肢のいずれにも一致しない場合に発生することは不可能試合を、マッチング「完全に一致する」のいずれかになります。予期しないタイマーは、例えば、「不可能なマッチ」を引き起こす可能性があります。 （ -  2.3.3項を参照してください他のイベントを含んでいてもよい）完​​璧な試合と不可能なマッチの両方が蓄積桁の通知をトリガ。"
    },
    {
      "indent": 3,
      "text": "The following example illustrates the above. Assume we have the digit map:",
      "ja": "以下の例は、上記を示します。我々はケタマップがあるとします。"
    },
    {
      "indent": 6,
      "text": "(xxxxxxx|x11)",
      "ja": "（XXXXXXX | X11）"
    },
    {
      "indent": 3,
      "text": "and a current dial string of \"41\". Given the input \"1\" the current dial string becomes \"411\". We have a partial match with \"xxxxxxx\", but a complete match with \"x11\", and hence we send \"411\" to the Call Agent.",
      "ja": "そして「41」の現在のダイヤルストリング。入力「1」現在のダイヤルストリングが「411」となっ考えます。私たちは、「XXXXXXX」との部分一致を持っていますが、「X11」と完全一致、それゆえ我々は、コール・エージェントに「411」を送ります。"
    },
    {
      "indent": 3,
      "text": "The following digit map example is more subtle:",
      "ja": "以下の桁マップの例では、より微妙です。"
    },
    {
      "indent": 5,
      "text": "(0[12].|00|1[12].1|2x.#)",
      "ja": "（0 [12] | 00 | 1 [12] .1 |＃2回）"
    },
    {
      "indent": 3,
      "text": "Given the input \"0\", a match will occur immediately since position (\".\") allows for zero occurrences of the preceding construct. The input \"00\" can thus never be produced in this digit map.",
      "ja": "入力「0」が与えられると、マッチの位置が直ちに発生する（「」）、前構築物のゼロ出現を可能にします。入力「00」は、このように、この桁マップで生産することはできません。"
    },
    {
      "indent": 3,
      "text": "Given the input \"1\", only a partial match exists. The input \"12\" is also only a partial match, however both \"11\" and \"121\" are a match.",
      "ja": "入力「1」が与えられ、部分的にしかマッチが存在します。入力「12」はまた、部分的にしか一致している、しかし、「11」と「121」の両方が一致しています。"
    },
    {
      "indent": 3,
      "text": "Given the input \"2\", a partial match exists. A partial match also exists for the input \"23\", \"234\", \"2345\", etc. A full match does not occur here until a \"#\" is generated, e.g., \"2345#\". The input \"2#\" would also have been a match.",
      "ja": "入力「2」を考えると、部分一致が存在します。部分一致は、「234」、「2345」などの「＃」は、例えば、「2345＃」、生成されるまでここに起こらない完全一致、入力「23」の必要性が存在します。入力「2位」にもマッチされていると思います。"
    },
    {
      "indent": 3,
      "text": "Note that digit maps simply define a way of matching sequences of event codes against a grammar. Although digit maps as defined here are for DTMF input, extension packages can also be defined so that digit maps can be used for other types of input represented by event codes that adhere to the digit map syntax already defined for these event codes (e.g., \"1\" or \"T\"). Where such usage is envisioned, the definition of the particular event(s) SHOULD explicitly state that in the package definition.",
      "ja": "その桁マップは単に文法に対してイベントコードの配列を一致させる方法を定義注意。ここで定義されているようケタ地図がDTMF入力するためのものであるが、その数字マップはすでにこれらのイベントコードに対して定義されたケタ地図構文に準拠したイベントコード（例えば、によって表される他のタイプの入力のために使用することができるので、拡張パッケージも \"定義することができます1\" または \"T\"）。このような使用が想定される場合、特定のイベント（単数または複数）の定義は、明示的にパッケージ定義にそれを述べるべきです。"
    },
    {
      "indent": 3,
      "text": "Since digit maps are not bounded in size, it is RECOMMENDED that gateways support digit maps up to at least 2048 bytes per endpoint.",
      "ja": "ケタ地図のサイズが制限されていないので、サポート桁がエンドポイントごとに少なくとも2048バイトまでマップするゲートウェイことをお勧めします。"
    },
    {
      "indent": 0,
      "text": "2.1.6 Packages",
      "section_title": true,
      "ja": "2.1.6パッケージ"
    },
    {
      "indent": 3,
      "text": "MGCP is a modular and extensible protocol, however with extensibility comes the need to manage, identify, and name the individual extensions. This is achieved by the concept of packages, which are simply well-defined groupings of extensions. For example, one package may support a certain group of events and signals, e.g., off-hook and ringing, for analog access lines. Another package may support another group of events and signals for analog access lines or for another type of endpoint such as video. One or more packages may be supported by a given endpoint.",
      "ja": "MGCPは、しかし、拡張性を持つ、管理、識別、および個々の拡張機能に名前を付ける必要が来て、モジュラーおよび拡張可能なプロトコルです。これは、単に拡張子の明確に定義されたグループですパッケージの概念によって達成されます。例えば、一つのパッケージには、例えば、オフフックおよびリンギング、アナログアクセス回線のイベントと信号の特定のグループをサポートすることができます。別のパッケージは、アナログアクセス回線またはビデオなどのエンドポイントの別のタイプのイベントと信号の別のグループをサポートすることができます。 1つ以上のパッケージには、特定のエンドポイントによってサポートされてもよいです。"
    },
    {
      "indent": 3,
      "text": "MGCP allows the following types of extensions to be defined in a package:",
      "ja": "MGCPは、拡張の次のタイプは、パッケージで定義することができます："
    },
    {
      "indent": 3,
      "text": "* BearerInformation",
      "ja": "* BearerInformation"
    },
    {
      "indent": 3,
      "text": "* LocalConnectionOptions",
      "ja": "* LocalConnectionOptions"
    },
    {
      "indent": 3,
      "text": "* ExtensionParameters",
      "ja": "* ExtensionParameters"
    },
    {
      "indent": 3,
      "text": "* ConnectionModes",
      "ja": "* ConnectionModes"
    },
    {
      "indent": 3,
      "text": "* Events",
      "ja": "*イベント"
    },
    {
      "indent": 3,
      "text": "* Signals",
      "ja": "*シグナル"
    },
    {
      "indent": 3,
      "text": "* Actions",
      "ja": "* 行動"
    },
    {
      "indent": 3,
      "text": "* DigitMapLetters",
      "ja": "* DigitMapLetters"
    },
    {
      "indent": 3,
      "text": "* ConnectionParameters",
      "ja": "* ConnectionParameters"
    },
    {
      "indent": 3,
      "text": "* RestartMethods",
      "ja": "* RestartMethods"
    },
    {
      "indent": 3,
      "text": "* ReasonCodes",
      "ja": "* ReasonCodes"
    },
    {
      "indent": 3,
      "text": "* Return codes",
      "ja": "*戻りコード"
    },
    {
      "indent": 3,
      "text": "each of which will be explained in more detail below. The rules for defining each of these extensions in a package are described in Section 6, and the encoding and syntax are defined in Section 3 and Appendix A.",
      "ja": "これらの各々は、以下でより詳細に説明します。パッケージ内のこれらの拡張のそれぞれを定義するための規則はセクション6に記載されており、符号化及び構文は、第3節および付録Aに定義されています"
    },
    {
      "indent": 3,
      "text": "With the exception of DigitMapLetters, a package defines a separate name space for each type of extension by adding the package name as a prefix to the extension, i.e.:",
      "ja": "DigitMapLettersを除いて、パッケージは、すなわち、拡張に接頭辞としてパッケージ名を追加することによって拡張の種類ごとに別々の名前空間を定義します："
    },
    {
      "indent": 6,
      "text": "package-name/extension",
      "ja": "パッケージ名/拡張子"
    },
    {
      "indent": 3,
      "text": "Thus the package-name is followed by a slash (\"/\") and the name of the extension.",
      "ja": "こうしてパッケージ名は、スラッシュ（「/」）と拡張子の名前が続きます。"
    },
    {
      "indent": 3,
      "text": "An endpoint supporting one or more packages may define one of those packages as the default package for the endpoint. Use of the package name for events and signals in the default package for an endpoint is OPTIONAL, however it is RECOMMENDED to always include the package name. All other extensions, except DigitMapLetter, defined in the package MUST include the package-name when referring to the extension.",
      "ja": "1つ以上のパッケージをサポートするエンドポイントは、エンドポイントのデフォルトのパッケージとしてそれらのパッケージのいずれかを定義することもできます。エンドポイントのデフォルトのパッケージ内のイベントや信号のパッケージ名の使用は任意である、しかし、それは常にパッケージ名を含めることをお勧めします。拡張子を参照するときに、パッケージで定義されてDigitMapLetterを除く他のすべての拡張機能は、パッケージ名を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "Package names are case insensitive strings of letters, hyphens and digits, with the restriction that hyphens shall never be the first or last character in a name. Examples of package names are \"D\", \"T\", and \"XYZ\". Package names are not case sensitive - names such as \"XYZ\", \"xyz\", and \"xYz\" are equal.",
      "ja": "パッケージ名はハイフンは名前の最初または最後の文字になることは決してないものと制限付きの文字、ハイフンと数字の大文字小文字を区別しない文字列です。パッケージ名の例は、「D」、「T」、および「XYZ」です。パッケージ名は大文字小文字を区別しません - 例えば、「XYZ」、「XYZ」、および「XYZ」などの名前を等しいです。"
    },
    {
      "indent": 3,
      "text": "Package definitions will be provided in other documents and with package names and extensions names registered with IANA. For more details, refer to section 6.",
      "ja": "パッケージの定義は、他の文書にし、IANAに登録されているパッケージ名と拡張子名で提供されます。詳細については、第6章を参照してください。"
    },
    {
      "indent": 3,
      "text": "Implementers can gain experience by using experimental packages. The name of an experimental package MUST start with the two characters \"x-\"; the IANA SHALL NOT register package names that start with these characters, or the characters \"x+\", which are reserved. A gateway that receives a command referring to an unsupported package MUST return an error (error code 518 - unsupported package, is RECOMMENDED).",
      "ja": "実装者は実験的なパッケージを使用して経験を積むことができます。実験的なパッケージの名前が2つの文字「X-」で始まらなければなりません。 IANAは、パッケージこれらの文字で始まる名前、または予約されている文字を「X +」、登録しないものとします。 （ - サポートされていないパッケージは、推奨されたエラーコード518）がサポートされていないパッケージを参照するコマンドを受信したゲートウェイは、エラーを返さなければなりません。"
    },
    {
      "indent": 0,
      "text": "2.1.7 Events and Signals",
      "section_title": true,
      "ja": "2.1.7イベントとシグナル"
    },
    {
      "indent": 3,
      "text": "The concept of events and signals is central to MGCP. A Call Agent may ask to be notified about certain events occurring in an endpoint (e.g., off-hook events) by including the name of the event in a RequestedEvents parameter (in a NotificationRequest command - see Section 2.3.3).",
      "ja": "イベントと信号の概念はMGCPの中心です。 （ -  2.3.3項を参照してくださいNotificationRequestコマンドで）コール・エージェントはRequestedEventsパラメータにおけるイベントの名前を含めることによって、エンドポイント（例えば、オフフックイベント）で発生した特定のイベントについて通知されることを求めることができます。"
    },
    {
      "indent": 3,
      "text": "A Call Agent may also request certain signals to be applied to an endpoint (e.g., dial-tone) by supplying the name of the event in a SignalRequests parameter.",
      "ja": "CallエージェントはまたSignalRequestsパラメータのイベントの名前を供給することによって（例えば、ダイヤルトーン）のエンドポイントに適用される特定の信号を要求することができます。"
    },
    {
      "indent": 3,
      "text": "Events and signals are grouped in packages, within which they share the same name space which we will refer to as event names in the following. Event names are case insensitive strings of letters, hyphens and digits, with the restriction that hyphens SHALL NOT be the first or last character in a name. Some event codes may need to be parameterized with additional data, which is accomplished by adding the parameters between a set of parentheses. Event names are not case sensitive - values such as \"hu\", \"Hu\", \"HU\" or \"hU\" are equal.",
      "ja": "イベントと信号が、彼らは私たちが次のようにイベント名として参照されます、同じ名前空間を共有する範囲内のパッケージにグループ化されています。イベント名はハイフンは名前の最初または最後の文字であってはならない制限付きの文字、ハイフンと数字の大文字小文字を区別しない文字列です。いくつかのイベントコードは、括弧のセットの間でパラメータを追加することによって達成される追加データとパラメータ化する必要があるかもしれません。イベント名は、大文字と小文字が区別されていない - 例えば「HU」、「フー」、「HU」または「HU」などの値が等しいです。"
    },
    {
      "indent": 3,
      "text": "Examples of event names can be \"hu\" (off hook or \"hang-up\" transition), \"hf\" (hook-flash) or \"0\" (the digit zero).",
      "ja": "イベント名の例は、「HU」、「HF」（フックフラッシュ）（フック又は「ハングアップ」遷移オフ）または「0」（数字のゼロ）とすることができます。"
    },
    {
      "indent": 3,
      "text": "The package name is OPTIONAL for events in the default package for an endpoint, however it is RECOMMENDED to always include the package name. If the package name is excluded from the event name, the default package name for that endpoint MUST be assumed. For example, for an analog access line which has the line package (\"L\") as a default with dial-tone (\"dl\") as one of the events in that package, the following two event names are equal:",
      "ja": "パッケージ名は、しかし、常にパッケージ名を含めることが推奨され、エンドポイントのデフォルトのパッケージでのイベントのためのオプションです。パッケージ名がイベント名から除外されている場合は、そのエンドポイントのデフォルトのパッケージ名が仮定されなければなりません。例えば、そのパッケージ内のイベントの一つとして、ダイヤルトーン（「DL」）とデフォルトとしてライン・パッケージ（「L」）を有するアナログアクセス回線のために、以下の2人のイベント名が同一です。"
    },
    {
      "indent": 6,
      "text": "L/dl",
      "ja": "L / dlで"
    },
    {
      "indent": 3,
      "text": "and",
      "ja": "そして"
    },
    {
      "indent": 6,
      "text": "dl",
      "ja": "DL"
    },
    {
      "indent": 3,
      "text": "For any other non-default packages that are associated with that endpoint, (such as the generic package for an analog access endpoint-type for example), the package name MUST be included with the event name. Again, unconditional inclusion of the package name is RECOMMENDED.",
      "ja": "（例えば、アナログアクセスエンドポイント型のための一般的なパッケージとして）そのエンドポイントに関連付けられている任意の他の非デフォルトパッケージの場合、パッケージ名はイベント名に含まれなければなりません。ここでも、パッケージ名の無条件含めることをお勧めします。"
    },
    {
      "indent": 3,
      "text": "Digits, or letters, are supported in some packages, notably \"DTMF\". Digits and letters are defined by the rules \"Digit\" and \"Letter\" in the definition of digit maps. This definition refers to the digits (0 to 9), to the asterisk or star (\"*\") and orthotrope, number or pound sign (\"#\"), and to the letters \"A\", \"B\", \"C\" and \"D\", as well as the timer indication \"T\". These letters can be combined in \"digit string\" that represents the keys that a user punched on a dial. In addition, the letter \"X\" can be used to represent all digits (0 to 9). Also, extensions MAY define use of other letters. The need to easily express the digit strings in earlier versions of the protocol has a consequence on the form of event names:",
      "ja": "数字、または文字は、特に、いくつかのパッケージに「DTMF」をサポートしています。数字と文字がルール「桁」とケタ地図の定義における「手紙」で定義されています。この定義は、数字（0〜9）に、アスタリスクまたはスター（「*」）とorthotrope、数またはポンド記号（「＃」）に、文字「A」、「B」、「C」を指しそして、「D」、ならびにタイマー表示「T」。これらの文字は、ユーザーがダイヤル上パンチのキーを表し、「数字の文字列」で組み合わせることができます。また、文字「X」は、すべての数字（0〜9）を表すために使用することができます。また、エクステンションは、他の文字の使用を定義することもできます。簡単にプロトコルの以前のバージョンの数字列を表現する必要がイベント名のフォームに結果があります。"
    },
    {
      "indent": 3,
      "text": "An event name that does not denote a digit MUST always contain at least one character that is neither a digit, nor one of the letters A, B, C, D, T or X (such names also MUST NOT just contain the special signs \"*\", or \"#\"). Event names consisting of more than one character however may use any of the above.",
      "ja": "数字を表すものではありませんイベント名は常に数字、また文字A、B、C、D、TまたはXの一つでもない少なくとも1つの文字（そのような名前も単に \"特別な兆候を含めることはできませんが含まれていなければなりません。 *\"、 または \"＃\"）。しかし、複数の文字から成るイベント名は、上記のいずれかを使用することができます。"
    },
    {
      "indent": 3,
      "text": "A Call Agent may often have to ask a gateway to detect a group of events. Two conventions can be used to denote such groups:",
      "ja": "コール・エージェントは、多くの場合、イベントのグループを検出するためのゲートウェイを依頼する必要があります。二つの規則は、このような基を示すために使用することができます。"
    },
    {
      "indent": 3,
      "text": "* The \"*\" and \"all\" wildcard conventions (see below) can be used to detect any event belonging to a package, or a given event in many packages, or any event in any package supported by the gateway.",
      "ja": "*「*」および「すべて」のワイルドカードの規則は、（下記参照）のパッケージに属するすべてのイベント、または多くのパッケージ内の指定されたイベント、またはゲートウェイでサポートされている任意のパッケージ内のイベントを検出するために使用することができます。"
    },
    {
      "indent": 3,
      "text": "* The regular expression Range notation can be used to detect a range of digits.",
      "ja": "*正規表現の範囲表記は、数字の範囲を検出するために用いることができます。"
    },
    {
      "indent": 3,
      "text": "The star sign (*) can be used as a wildcard instead of a package name, and the keyword \"all\" can be used as a wildcard instead of an event name:",
      "ja": "星印（*）の代わりに、パッケージ名のワイルドカードとして使用することができ、キーワード「すべて」が代わりにイベント名のワイルドカードとして使用することができます。"
    },
    {
      "indent": 3,
      "text": "* A name such as \"foo/all\" denotes all events in package \"foo\".",
      "ja": "*「fooが/すべての」パッケージ「foo」というのすべてのイベントを表すような名前。"
    },
    {
      "indent": 3,
      "text": "* A name such as \"*/bar\" denotes the event \"bar\" in any package supported by the gateway.",
      "ja": "*例えば、「* /バー」などの名前は、ゲートウェイでサポートされている任意のパッケージでのイベント「バー」を意味します。"
    },
    {
      "indent": 3,
      "text": "* The name \"*/all\" denotes all events supported by the endpoint.",
      "ja": "*名前は「* /すべては、」エンドポイントでサポートされているすべてのイベントを示しています。"
    },
    {
      "indent": 3,
      "text": "This specification purposely does not define any additional detail for the \"all packages\" and \"all events\" wildcards. They provide limited benefits, but introduce significant complexity along with the potential for errors. Their use is consequently strongly discouraged.",
      "ja": "この仕様は、意図的に「すべてのパッケージ」および「すべてのイベント」のワイルドカードのための任意の追加の詳細を定義していません。彼らは、限られた利点を提供していますが、エラーの可能性とともに重要な複雑さを紹介します。それらの使用は、結果として強くお勧めします。"
    },
    {
      "indent": 3,
      "text": "The Call Agent can ask a gateway to detect a set of digits or letters either by individually describing those letters, or by using the \"range\" notation defined in the syntax of digit strings. For example, the Call Agent can:",
      "ja": "Callエージェントは、単独でそれらの文字を記述することにより、又は数字列の構文で定義された「範囲」の表記を使用して数字や文字のセットを検出するためにゲートウェイを頼むことができます。たとえば、コールエージェントことができます："
    },
    {
      "indent": 3,
      "text": "* Use the letter \"x\" to denote\" digits from 0 to 9. * Use the notation \"[0-9#]\" to denote the digits 0 to 9 and the pound sign.",
      "ja": "* 9桁0とポンド記号を表すために、 『[0-9＃]「表記を使用* 0から9までの数字を』示すために文字「X」を使用。"
    },
    {
      "indent": 3,
      "text": "The individual event codes are still defined in a package though (e.g., the \"DTMF\" package).",
      "ja": "個々のイベントコードは依然として（例えば、「DTMF」パッケージ）もパッケージに定義されています。"
    },
    {
      "indent": 3,
      "text": "Events can by default only be generated and detected on endpoints, however events can be also be defined so they can be generated or detected on connections rather than on the endpoint itself (see Section 6.6). For example, gateways may be asked to provide a ringback tone on a connection. When an event is to be applied on a connection, the name of the connection MUST be added to the name of the event, using an \"at\" sign (@) as a delimiter, as in:",
      "ja": "イベントは、デフォルトでのみ生成され、それらが生成または接続ではなく、エンドポイント自体に検知することができるので、エンドポイント上で、しかしイベントが定義することもでき、検出することができます（6.6節を参照してください）。例えば、ゲートウェイは、接続上のリングバックトーンを提供するために求められることがあります。イベントが接続に適用されるときに、接続の名前は、のように、区切り記号として記号「で」（@）を使用して、イベントの名前に追加する必要があります。"
    },
    {
      "indent": 6,
      "text": "G/rt@0A3F58",
      "ja": "G / RT @ 0A3F58"
    },
    {
      "indent": 3,
      "text": "where \"G\" is the name of the package and \"rt\" is the name of the event. Should the connection be deleted while an event or signal is being detected or applied on it, that particular event detection or signal generation simply stops. Depending on the signal, this may generate a failure (see below).",
      "ja": "ここで、「G」は、パッケージの名前で、「rt」はイベントの名前です。イベントまたは信号が検出またはその上に適用されている間接続は、特定のイベントの検出や信号の生成が簡単に停止することが、削除されるべきです。信号に応じて、これは（下記参照）の故障を発生させることができます。"
    },
    {
      "indent": 3,
      "text": "The wildcard character \"*\" (star) can be used to denote \"all connections\". When this convention is used, the gateway will generate or detect the event on all the connections that are connected to the endpoint. This applies to existing as well as future connections created on the endpoint. An example of this convention could be:",
      "ja": "ワイルドカード文字「*」（スター）「は、すべての接続」を示すために使用することができます。この規則を使用する場合、ゲートウェイは、エンドポイントに接続されているすべての接続でイベントを生成または検出します。これは、既存のと同様に、エンドポイントで作成された将来の接続に適用されます。この規則の例は次のようになります。"
    },
    {
      "indent": 6,
      "text": "R/qa@*",
      "ja": "R / QA @"
    },
    {
      "indent": 3,
      "text": "where \"R\" is the name of the package and \"qa\" is the name of the event.",
      "ja": "ここで、「R」は、パッケージと「QA」の名前は、イベントの名前です。"
    },
    {
      "indent": 3,
      "text": "When processing a command using the \"all connections\" wildcard, the \"*\" wildcard character applies to all current and future connections on the endpoint, however it will not be expanded. If a subsequent command either explicitly (e.g., by auditing) or implicitly (e.g., by persistence) refers to such an event, the \"*\" value will be used. However, when the event is actually observed, that particular occurrence of the event will include the name of the specific connection it occurred on.",
      "ja": "「すべての接続」ワイルドカードを使用してコマンドを処理する場合、「*」ワイルドカード文字は、エンドポイント上の現在および将来のすべての接続に適用され、しかし、それは展開されません。後続のコマンド明示的に（例えば、監査によって）または暗黙的に（例えば、永続性によっては）そのようなイベントを参照する場合、「*」値が使用されます。イベントが実際に観測されたときしかし、イベントの特定の発生はそれが発生した特定の接続の名前が含まれます。"
    },
    {
      "indent": 3,
      "text": "The wildcard character \"$\" can be used to denote \"the current connection\". It can only be used by the Call Agent, when the event notification request is \"encapsulated\" within a connection creation or modification command. When this convention is used, the gateway will generate or detect the event on the connection that is currently being created or modified. An example of this convention is:",
      "ja": "ワイルドカード文字「$」は「現在の接続」を示すために使用することができます。イベント通知要求は、接続の作成または変更コマンドの中に「カプセル化」された場合にのみ、コールエージェントで使用することができます。この規則を使用する場合、ゲートウェイは、現在作成又は変更されている接続にイベントを生成または検出します。この規則の例は以下のとおりです。"
    },
    {
      "indent": 6,
      "text": "G/rt@$",
      "ja": "G / RT @ $"
    },
    {
      "indent": 3,
      "text": "When processing a command using the \"current connection\" wildcard, the \"$\" wildcard character will be expanded to the value of the current connection. If a subsequent command either explicitly (e.g., by auditing) or implicitly (e.g., by persistence) refers to such an event, the expanded value will be used. In other words, the \"current connection\" wildcard is expanded once, which is at the initial processing of the command in which it was explicitly included.",
      "ja": "「現在の接続」ワイルドカードを使用してコマンドを処理するとき、「$」ワイルドカード文字は、現在の接続の値に展開されます。明示的に（例えば、監査によって）または暗黙的に（例えば、持続性により）後続のコマンドは、イベントを参照する場合、拡張値が使用されます。言い換えれば、「現在の接続」ワイルドカードは、それが明示的に含まれていたコマンドの最初の処理である、一度展開されています。"
    },
    {
      "indent": 3,
      "text": "The connection id, or a wildcard replacement, can be used in conjunction with the \"all packages\" and \"all events\" conventions. For example, the notation:",
      "ja": "接続ID、またはワイルドカードの交換は、「すべてのパッケージ」および「すべてのイベント」の規則と組み合わせて使用​​することができます。例えば、表記法："
    },
    {
      "indent": 6,
      "text": "*/all@*",
      "ja": "*/すべて@*"
    },
    {
      "indent": 3,
      "text": "can be used to designate all events on all current and future connections on the endpoint. However, as mentioned before, the use of the \"all packages\" and \"all events\" wildcards are strongly discouraged.",
      "ja": "エンドポイント上の現在および将来のすべての接続上のすべてのイベントを指定するために使用することができます。前に述べたようにしかし、「すべてのパッケージ」および「すべてのイベント」のワイルドカードの使用が強く推奨されています。"
    },
    {
      "indent": 3,
      "text": "Signals are divided into different types depending on their behavior:",
      "ja": "シグナルは、彼らの行動に応じて、異なる種類に分けられます。"
    },
    {
      "indent": 3,
      "text": "* On/off (OO): Once applied, these signals last until they are turned off. This can only happen as the result of a reboot/restart or a new SignalRequests where the signal is explicitly turned off (see later). Signals of type OO are defined to be idempotent, thus multiple requests to turn a given OO signal on (or off) are perfectly valid and MUST NOT result in any errors. An On/Off signal could be a visual message-waiting indicator (VMWI). Once turned on, it MUST NOT be turned off until explicitly instructed to by the Call Agent, or as a result of an endpoint restart, i.e., these signals will not turn off as a result of the detection of a requested event.",
      "ja": "*（OO）のオン/オフ：彼らがオフされるまで、一度最後、これらの信号を適用します。これは、再起動/再起動や信号が明示的にオフになっている新しいSignalRequests（後述）の結果として発生する可能性があります。型OOの信号を冪等するように定義され、従って、複数の要求が完全に有効である（またはオフ）に指定されたOO信号をオンにし、エラーを生じてはいけません。オン/オフ信号は、視覚的なメッセージ待機インジケータ（VMWI）とすることができます。一度オンになって、それはすなわち、これらの信号は、要求されたイベントの検出の結果、オフになりません、明示的にコールエージェントによって指示されるまでオフ、またはエンドポイントの再起動の結果としてしてはなりません。"
    },
    {
      "indent": 3,
      "text": "* Time-out (TO): Once applied, these signals last until they are either cancelled (by the occurrence of an event or by not being included in a subsequent (possibly empty) list of signals), or a signal-specific period of time has elapsed. A TO signal that times out will generate an \"operation complete\" event. A TO signal could be \"ringback\" timing out after 180 seconds. If an event occurs prior to the 180 seconds, the signal will, by default, be stopped (the \"Keep signals active\" action - see Section 2.3.3 - will override this behavior). If the signal is not stopped, the signal will time out, stop and generate an \"operation complete\" event, about which the Call Agent may or may not have requested to be notified. If the Call Agent has asked for the \"operation complete\" event to be notified, the \"operation complete\" event sent to the Call Agent SHALL include the name(s) of the signal(s) that timed out (note that if parameters were passed to the signal, the parameters will not be reported). If the signal was generated on a connection, the name of the connection SHALL be included as described above. Time-out signals have a default time-out value defined for them, which MAY be altered by the provisioning process. Also, the time-out period may be provided as a parameter to the signal (see Section 3.2.2.4). A value of zero indicates that the time-out period is infinite. A TO signal that fails after being started, but before having generated an \"operation complete\" event will generate an \"operation failure\" event which will include the name of the signal that failed. Deletion of a connection with an active TO signal will result in such a failure.",
      "ja": "*タイムアウト（TO）と、それらはどちらか（イベントの発生によって、または信号の後続の（おそらく空の）リストに含まれていないことによって）解除されるまで、最後の、これらの信号を印加し、または信号固有周期の時間が経過しました。タイムアウトには、「動作完了」イベントを生成することを知らせるために。信号に180秒後に「呼出」タイムアウト可能性があります。イベントは180秒前に発生した場合、信号は、デフォルトでは、停止されます（アクション「信号アクティブにしてください」 -  2.3.3項を参照してください - この動作をオーバーライドします）。信号が停止されていない場合、信号は、タイムアウトコールエージェントがまたは通知されるように要求していないかもしれない可能性があるについて、「動作完了」イベントを、停止し、生成されます。コールエージェントが通知する「動作完了」イベントを求めている場合は、コールエージェントに送信された「動作完了」イベントがタイムアウト信号（S）の名前（s）は（もしパラメータがなかったことに注意してください含まれていなければなりません信号に渡され、パラメータが報告されません）。信号が接続で生成された場合、上述のように、接続の名前が含まれていなければなりません。タイムアウト信号は、プロビジョニング・プロセスの変更が可能であり、彼らのために定義されたデフォルトのタイムアウト値を、持っています。また、タイムアウト期間は信号のパラメータとして提供されてもよい（セクション3.2.2.4を参照）。ゼロの値は、タイムアウト期間が無限大であることを示しています。それを合図するために開始された後に失敗しますが、生成された前に、「動作完了」イベントが失敗した信号の名前が含まれます「動作不良」イベントを生成します。信号に活性との接続の削除は、このような故障をもたらすであろう。"
    },
    {
      "indent": 3,
      "text": "* Brief (BR): The duration of these signals is normally so short that they stop on their own. If a signal stopping event occurs, or a new SignalRequests is applied, a currently active BR signal will not stop. However, any pending BR signals not yet applied MUST be cancelled (a BR signal becomes pending if a NotificationRequest includes a BR signal, and there is already an active BR signal). As an example, a brief tone could be a DTMF digit. If the DTMF digit \"1\" is currently being played, and a signal stopping event occurs, the \"1\" would play to completion. If a request to play DTMF digit \"2\" arrives before DTMF digit \"1\" finishes playing, DTMF digit \"2\" would become pending.",
      "ja": "*ブリーフ（BR）：この信号の期間は、通常、彼らが自分で止めるほど短いです。イベントの停止信号が発生した場合、または新しいSignalRequestsが適用されている場合は、現在アクティブなBR信号が停止しません。しかし、まだ適用されていない保留中のBR信号は（NotificationRequestがBR信号を含んでおり、アクティブBR信号が既に存在する場合BR信号が保留になる）キャンセルされなければなりません。例として、簡単なトーンは、DTMFディジットである可能性があります。 DTMFディジット「1」は、現在再生されており、イベントの停止信号が発生した場合、「1」は完成に遊ぶでしょう。 「2」は、DTMFディジット「1」の前に到着したDTMFディジットを再生するための要求の再生が終了した場合、DTMFディジット「2」は、保留になってしまいます。"
    },
    {
      "indent": 3,
      "text": "Signal(s) generated on a connection MUST include the name of that connection.",
      "ja": "信号（S）は、その接続の名前を含まなければならない接続で発生しました。"
    },
    {
      "indent": 0,
      "text": "2.2 Usage of SDP",
      "section_title": true,
      "ja": "SDPの2.2使い方"
    },
    {
      "indent": 3,
      "text": "The Call Agent uses the MGCP to provide the endpoint with the description of connection parameters such as IP addresses, UDP port and RTP profiles. These descriptions will follow the conventions delineated in the Session Description Protocol which is now an IETF proposed standard, documented in RFC 2327.",
      "ja": "コール・エージェントは、IPアドレス、UDPポートおよびRTPプロファイルとして接続パラメータの説明とエンドポイントを提供するために、MGCPを使用しています。これらの記述は現在、RFC 2327で文書化IETF提案された標準、あるセッション記述プロトコルで線引き規則に従います。"
    },
    {
      "indent": 0,
      "text": "2.3 Gateway Control Commands",
      "section_title": true,
      "ja": "2.3ゲートウェイ制御コマンド"
    },
    {
      "indent": 0,
      "text": "2.3.1 Overview of Commands",
      "section_title": true,
      "ja": "コマンドの2.3.1概要"
    },
    {
      "indent": 3,
      "text": "This section describes the commands of the MGCP. The service consists of connection handling and endpoint handling commands. There are currently nine commands in the protocol:",
      "ja": "このセクションでは、MGCPのコマンドについて説明します。サービスは、接続処理とエンドポイントの取り扱いコマンドで構成されています。プロトコルの9つのコマンドは現在ありません。"
    },
    {
      "indent": 3,
      "text": "* The Call Agent can issue an EndpointConfiguration command to a gateway, instructing the gateway about the coding characteristics expected by the \"line-side\" of the endpoint.",
      "ja": "*コール・エージェントは、エンドポイントの「ライン側」で予想コード化特性についてのゲートウェイを指示し、ゲートウェイにEndpointConfigurationコマンドを発行することができます。"
    },
    {
      "indent": 3,
      "text": "* The Call Agent can issue a NotificationRequest command to a gateway, instructing the gateway to watch for specific events such as hook actions or DTMF tones on a specified endpoint.",
      "ja": "*コール・エージェントは、このような指定されたエンドポイント上のフックアクションやDTMFトーンなどの特定のイベントを監視するためのゲートウェイを指示し、ゲートウェイにNotificationRequestコマンドを発行することができます。"
    },
    {
      "indent": 3,
      "text": "* The gateway will then use the Notify command to inform the Call Agent when the requested events occur.",
      "ja": "*ゲートウェイは、要求されたイベントが発生したときにコールエージェントに通知する通知コマンドを使用します。"
    },
    {
      "indent": 3,
      "text": "* The Call Agent can use the CreateConnection command to create a connection that terminates in an \"endpoint\" inside the gateway.",
      "ja": "*コールエージェントは、ゲートウェイ内部の「エンドポイント」で終了する接続を作成するのCreateConnectionコマンドを使用することができます。"
    },
    {
      "indent": 3,
      "text": "* The Call Agent can use the ModifyConnection command to change the parameters associated with a previously established connection.",
      "ja": "*コール・エージェントは、以前に確立された接続に関連するパラメータを変更するにはModifyConnectionコマンドを使用することができます。"
    },
    {
      "indent": 3,
      "text": "* The Call Agent can use the DeleteConnection command to delete an existing connection. The DeleteConnection command may also be used by a gateway to indicate that a connection can no longer be sustained.",
      "ja": "*コール・エージェントは、既存の接続を削除するDeleteConnectionコマンドを使用することができます。 DeleteConnectionコマンドは、接続がもはや維持できないことを示すためにゲートウェイによって使用されてもよいです。"
    },
    {
      "indent": 3,
      "text": "* The Call Agent can use the AuditEndpoint and AuditConnection commands to audit the status of an \"endpoint\" and any connections associated with it. Network management beyond the capabilities provided by these commands is generally desirable. Such capabilities are expected to be supported by the use of the Simple Network Management Protocol (SNMP) and definition of a MIB which is outside the scope of this specification.",
      "ja": "*コール・エージェントはAuditEndpointとAuditConnectionは、「エンドポイント」の状態とそれに関連するすべての接続を監査するためにコマンドを使用することができます。これらのコマンドによって提供される機能を越えたネットワーク管理は、一般的に望ましいです。このような機能は、簡易ネットワーク管理プロトコル（SNMP）を使用すると、この仕様の範囲外であるMIBの定義によりサポートされることが期待されます。"
    },
    {
      "indent": 3,
      "text": "* The Gateway can use the RestartInProgress command to notify the Call Agent that a group of endpoints managed by the gateway is being taken out-of-service or is being placed back in-service.",
      "ja": "*ゲートウェイは、ゲートウェイによって管理されるエンドポイントのグループは、アウトオブサービス取られているか、バックサービス中に置かれていることをコールエージェントに通知するためにRestartInProgressコマンドを使用することができます。"
    },
    {
      "indent": 3,
      "text": "These services allow a controller (normally, the Call Agent) to instruct a gateway on the creation of connections that terminate in an \"endpoint\" attached to the gateway, and to be informed about events occurring at the endpoint. An endpoint may be for example:",
      "ja": "これらのサービスは、コントローラ（通常、コールエージェントは）ゲートウェイに接続「エンドポイント」で終端接続の作成上のゲートウェイを指示すると、エンドポイントで発生するイベントについて通知することができます。エンドポイントは、たとえばことがあります"
    },
    {
      "indent": 3,
      "text": "* A specific trunk circuit, within a trunk group terminating in a gateway,",
      "ja": "*ゲートウェイで終端トランクグループ内の特定のトランク回路を、"
    },
    {
      "indent": 3,
      "text": "* A specific announcement handled by an announcement server.",
      "ja": "*発表サーバによって処理される特定の発表。"
    },
    {
      "indent": 3,
      "text": "Connections are logically grouped into \"calls\" (the concept of a \"call\" has however little semantic meaning in MGCP itself). Several connections, that may or may not belong to the same call, can terminate in the same endpoint. Each connection is qualified by a \"mode\" parameter, which can be set to \"send only\" (sendonly), \"receive only\" (recvonly), \"send/receive\" (sendrecv), \"conference\" (confrnce), \"inactive\" (inactive), \"loopback\", \"continuity test\" (conttest), \"network loop back\" (netwloop) or \"network continuity test\" (netwtest).",
      "ja": "接続は、論理的に「呼び出し」（MGCP自体にしかし少しセマンティックな意味を持っている「と呼ぶ」の概念）に分類されています。または同じコールに属していない場合があり、いくつかの接続は、同じエンドポイントで終了することができます。各接続は、「モード」（sendonlyで）「送信のみ」に設定することができ、パラメータ、（SENDRECV）、「会議」（confrnce）、「送信/受信」（recvonlyで）「受信のみ」、「非アクティブで修飾されました\"（非アクティブ）、 \"ループバック\"、 \"連続性試験\"（conttest）、 \"ネットワークループバック\"（netwloop）または \"ネットワーク連続テスト\"（netwtest）。"
    },
    {
      "indent": 3,
      "text": "Media generated by the endpoint is sent on connections whose mode is either \"send only\", \"send/receive\", or \"conference\", unless the endpoint has a connection in \"loopback\" or \"continuity test\" mode. However, media generated by applying a signal to a connection is always sent on the connection, regardless of the mode.",
      "ja": "エンドポイントによって生成されたメディアは、そのモードのいずれかのエンドポイントは、「ループバック」または「連続テスト」モードで接続していない限り、「送信/受信」、「送信のみ」、または「会議」接続で送信されます。しかし、接続に信号を印加することによって生成されたメディアに関係なく、常にモードの接続上で送信されます。"
    },
    {
      "indent": 3,
      "text": "The handling of the media streams received on connections is determined by the mode parameters:",
      "ja": "接続上で受信されたメディアストリームの処理は、モードパラメータによって決定されます。"
    },
    {
      "indent": 3,
      "text": "* Media streams received through connections in \"receive\", \"conference\" or \"send/receive\" mode are mixed and sent to the endpoint, unless the endpoint has another connection in \"loopback\" or \"continuity test\" mode.",
      "ja": "*メディアストリームは、エンドポイントが「ループバック」または「連続テスト」モードで別の接続を持っている場合を除き、混合し、エンドポイントに送信され、「受信」、「会議」または「送信/受信」モードで接続を介して受信しました。"
    },
    {
      "indent": 3,
      "text": "* Media streams originating from the endpoint are transmitted over all the connections whose mode is \"send\", \"conference\" or \"send/receive\", unless the endpoint has another connection in \"loopback\" or \"continuity test\" mode.",
      "ja": "*エンドポイントからのメディアストリームは、そのモード「送信/受信」、「会議」、「送信」またはされ、エンドポイントは「ループバック」または「連続テスト」モードで別の接続を持っていない限り、すべての接続を介して送信されます。"
    },
    {
      "indent": 3,
      "text": "* In addition to being sent to the endpoint, a media stream received through a connection in \"conference\" mode is forwarded to all the other connections whose mode is \"conference\". This also applies when the endpoint has a connection in \"loopback\" or \"continuity test\" mode. The details of this forwarding, e.g., RTP translator or mixer, is outside the scope of this document.",
      "ja": "*エンドポイントに送信されることに加えて、メディア・ストリームは、そのモード「会議」であり、他のすべての接続に転送され、「会議」モードでの接続を介して受信しました。エンドポイントは、「ループバック」または「連続テスト」モードで接続している場合にも適用されます。この転送の詳細は、例えば、RTPトランスレータやミキサーは、この文書の範囲外です。"
    },
    {
      "indent": 3,
      "text": "Note that in order to detect events on a connection, the connection must by default be in one of the modes \"receive\", \"conference\", \"send/receive\", \"network loopback\" or \"network continuity test\". The event detection only applies to the incoming media. Connections in \"sendonly\", \"inactive\", \"loopback\", or \"continuity test\" mode will thus normally not detect any events, although requesting to do so is not considered an error.",
      "ja": "接続上のイベントを検出するために、接続はデフォルトでモード、「会議」、「受信」、「送信/受信」、「ネットワークループバック」または「ネットワーク導通試験」のいずれかでなければならないことに注意してください。イベント検出は、着信メディアに適用されます。そうすることを要求してもエラーとはみなされませんが、「sendonlyの」、「非アクティブ」、「ループバック」、または「継続性テスト」モードでの接続は、このように、通常、任意のイベントを検出しません。"
    },
    {
      "indent": 3,
      "text": "The \"loopback\" and \"continuity test\" modes are used during maintenance and continuity test operations. An endpoint may have more than one connection in either \"loopback\" or \"continuity test\" mode. As long as there is one connection in that particular mode, and no other connection on the endpoint is placed in a different maintenance or test mode, the maintenance or test operation shall continue undisturbed. There are two flavors of continuity test, one specified by ITU and one used in the US. In the first case, the test is a loopback test. The originating switch will send a tone (the go tone) on the bearer circuit and expects the terminating switch to loopback the tone. If the originating switch sees the same tone returned (the return tone), the COT has passed. If not, the COT has failed. In the second case, the go and return tones are different. The originating switch sends a certain go tone. The terminating switch detects the go tone, it asserts a different return tone in the backwards direction. When the originating switch detects the return tone, the COT is passed. If the originating switch never detects the return tone, the COT has failed.",
      "ja": "「ループバック」と「継続性テスト」モードは、メンテナンスと導通試験操作中に使用されています。エンドポイントは、「ループバック」または「継続性テスト」モードのいずれかで複数の接続を有することができます。限りがその特定のモード内の1つの接続であり、エンドポイント上の他の接続が異なるメンテナンスまたはテストモードに置かれないように、メンテナンスまたはテスト動作が邪魔されずに継続しなければなりません。導通試験の2種類、ITUおよび米国で使用されるもので指定された1があります。最初のケースでは、テストは、ループバック試験です。元のスイッチは、ベアラ回路上のトーン（碁のトーン）を送信し、終端スイッチはトーンをループバックすることを期待します。元のスイッチが見れば同じトーンが（リターントーン）返され、COTが経過しました。ない場合は、COTは失敗しました。後者の場合には、行きと戻りのトーンが異なっています。元のスイッチは、特定の行く音を送信します。終端スイッチが行くのトーンを検出し、それが後方方向に異なるリターントーンを表明する。元のスイッチがリターントーンを検出すると、COTが渡されます。元のスイッチがリターントーンを検出したことがない場合は、COTは失敗しました。"
    },
    {
      "indent": 3,
      "text": "If the mode is set to \"loopback\", the gateway is expected to return the incoming signal from the endpoint back into that same endpoint. This procedure will be used, typically, for testing the continuity of trunk circuits according to the ITU specifications. If the mode is set to \"continuity test\", the gateway is informed that the other end of the circuit has initiated a continuity test procedure according to the GR specification (see [22]). The gateway will place the circuit in the transponder mode required for dual-tone continuity tests.",
      "ja": "モードは「ループバック」に設定されている場合、ゲートウェイはその同じエンドポイントにバックエンドポイントからの着信信号を返すことが期待されます。この手順は、ITUの仕様に応じてトランク回路の連続性をテストするために、一般的に、使用されます。モードは「連続テスト」に設定されている場合、ゲートウェイは、回路の他方の端部は（[22]参照）GR仕様に従って導通試験手順を開始したことを知らされます。ゲートウェイは、デュアルトーンの継続試験に必要なトランスポンダモードで回路を配置します。"
    },
    {
      "indent": 3,
      "text": "If the mode is set to \"network loopback\", the audio signals received from the connection will be echoed back on the same connection. The media is not forwarded to the endpoint.",
      "ja": "モードは「ネットワークループバック」に設定されている場合、信号は接続から受信した音声は、同じ接続でエコーバックされます。メディアは、エンドポイントに転送されません。"
    },
    {
      "indent": 3,
      "text": "If the mode is set to \"network continuity test\", the gateway will process the packets received from the connection according to the transponder mode required for dual-tone continuity test, and send the processed signal back on the connection. The media is not forwarded to the endpoint. The \"network continuity test\" mode is included for backwards compatibility only and use of it is discouraged.",
      "ja": "モードは「ネットワーク連続テスト」に設定されている場合、ゲートウェイは、デュアルトーンの導通試験のために必要なトランスポンダモードに応じて接続から受信したパケットを処理し、バック接続で処理された信号を送信します。メディアは、エンドポイントに転送されません。 「ネットワーク導通試験」モードは、下位互換性のために含まれていると、それを使用することが推奨されていません。"
    },
    {
      "indent": 0,
      "text": "2.3.2 EndpointConfiguration",
      "section_title": true,
      "ja": "2.3.2 EndpointConfiguration"
    },
    {
      "indent": 3,
      "text": "The EndpointConfiguration command can be used to specify the encoding of the signals that will be received by the endpoint. For example, in certain international telephony configurations, some calls will carry mu-law encoded audio signals, while others will use A-law. The Call Agent can use the EndpointConfiguration command to pass this information to the gateway. The configuration may vary on a call by call basis, but can also be used in the absence of any connection.",
      "ja": "EndpointConfigurationコマンドは、エンドポイントによって受信される信号の符号化を指定するために使用することができます。他の人が義理を使用する一方、例えば、特定の国際電話の構成では、いくつかの呼び出しは、ミュー法則エンコードされたオーディオ信号を運ぶでしょう。コールエージェントは、ゲートウェイにこの情報を渡すためにEndpointConfigurationコマンドを使用することができます。構成は、コールごとに変えることができるだけでなく、任意の接続が存在しない状態で使用することができます。"
    },
    {
      "indent": 9,
      "text": "ReturnCode,\n[PackageList]\n<-- EndpointConfiguration(EndpointId,\n                          [BearerInformation])",
      "raw": true
    },
    {
      "indent": 3,
      "text": "EndpointId is the name of the endpoint(s) in the gateway where EndpointConfiguration executes. The \"any of\" wildcard convention MUST NOT be used. If the \"all of\" wildcard convention is used, the command applies to all the endpoints whose name matches the wildcard.",
      "ja": "EndpointIdはEndpointConfigurationが実行ゲートウェイエンドポイント（複数可）の名前です。ワイルドカード大会「のいずれかが」使用してはいけません。 「すべての」ワイルドカードの規則を使用する場合、コマンドは、その名のワイルドカードに一致するすべてのエンドポイントに適用されます。"
    },
    {
      "indent": 3,
      "text": "BearerInformation is a parameter defining the coding of the data sent to and received from the line side. The information is encoded as a list of sub-parameters. The only sub-parameter defined in this version of the specification is the bearer encoding, whose value can be set to \"A-law\" or \"mu-law\". The set of sub-parameters may be extended.",
      "ja": "BearerInformationはに送られ、ライン側から受信したデータの符号化を規定するパラメータです。情報は、サブパラメータのリストとしてエンコードされます。仕様のこのバージョンで定義された唯一のサブパラメータは、その値が「A法則」または「μ則」に設定することができるベアラ符号化、です。サブパラメータのセットを拡張することができます。"
    },
    {
      "indent": 3,
      "text": "In order to allow for extensibility, while remaining backwards compatible, the BearerInformation parameter is conditionally optional based on the following conditions:",
      "ja": "後方互換性を維持しながら、拡張性を可能にするために、BearerInformationパラメータは、次の条件に基づいて条件付きで任意です。"
    },
    {
      "indent": 3,
      "text": "* if Extension Parameters (vendor, package or other) are not used, the BearerInformation parameter is REQUIRED,",
      "ja": "拡張パラメータ（ベンダ、パッケージまたは他の）が使用されていない場合は*、BearerInformationパラメータが必要とされ、"
    },
    {
      "indent": 3,
      "text": "* otherwise, the BearerInformation parameter is OPTIONAL.",
      "ja": "*それ以外の場合は、BearerInformationパラメータはオプションです。"
    },
    {
      "indent": 3,
      "text": "When omitted, BearerInformation MUST retain its current value.",
      "ja": "省略した場合、BearerInformationは、その現在の値を保有しなければなりません。"
    },
    {
      "indent": 3,
      "text": "ReturnCode is a parameter returned by the gateway. It indicates the outcome of the command and consists of an integer number optionally followed by commentary.",
      "ja": "RETURNCODEゲートウェイによって返されるパラメータです。これは、コマンドの結果を示し、必要に応じて解説続く整数から成ります。"
    },
    {
      "indent": 3,
      "text": "PackageList is a list of supported packages that MAY be included with error code 518 (unsupported package).",
      "ja": "パッケージリストは、エラーコード518（サポートされていないパッケージ）に含まれるかもしれサポートパッケージのリストです。"
    },
    {
      "indent": 0,
      "text": "2.3.3 NotificationRequest",
      "section_title": true,
      "ja": "2.3.3 NotificationRequest"
    },
    {
      "indent": 3,
      "text": "The NotificationRequest command is used to request the gateway to send notifications upon the occurrence of specified events in an endpoint. For example, a notification may be requested for when a gateway detects that an endpoint is receiving tones associated with fax communication. The entity receiving this notification may then decide to specify use of a different type of encoding method in the connections bound to this endpoint and instruct the gateway accordingly with a ModifyConnection Command.",
      "ja": "NotificationRequestコマンドは、エンドポイントで指定されたイベントの発生時に通知を送信するゲートウェイを要求するために使用されます。例えば、通知は、ゲートウェイは、エンドポイントがファックス通信に関連するトーンを受信して​​いることを検出した場合に要求されてもよいです。この通知を受けたエンティティは、このエンドポイントにバインドされた接続における符号化方式の異なるタイプの使用を指定し、ModifyConnectionコマンドとそれに応じてゲートウェイに指示することを決定することができます。"
    },
    {
      "indent": 9,
      "text": "ReturnCode,\n[PackageList]\n<-- NotificationRequest(EndpointId,\n                        [NotifiedEntity,]\n                        [RequestedEvents,]\n                        RequestIdentifier,\n                        [DigitMap,]\n                        [SignalRequests,]\n                        [QuarantineHandling,]\n                        [DetectEvents,]\n                        [encapsulated EndpointConfiguration])",
      "raw": true
    },
    {
      "indent": 3,
      "text": "EndpointId is the identifier for the endpoint(s) in the the gateway where the NotificationRequest executes. The \"any of\" wildcard MUST NOT be used.",
      "ja": "EndpointIdはNotificationRequestが実行ゲートウェイエンドポイント（複数可）の識別子です。ワイルドカード「のいずれかが」使用してはいけません。"
    },
    {
      "indent": 3,
      "text": "NotifiedEntity is an optional parameter that specifies a new \"notified entity\" for the endpoint.",
      "ja": "NotifiedEntityは、エンドポイントのための新しい「通知実体」を指定するオプションのパラメータです。"
    },
    {
      "indent": 3,
      "text": "RequestIdentifier is used to correlate this request with the notifications that it triggers. It will be repeated in the corresponding Notify command.",
      "ja": "RequestIdentifierは、それがトリガー通知でこの要求を相関させるために使用されています。これは、通知対応するコマンドに繰り返されます。"
    },
    {
      "indent": 3,
      "text": "RequestedEvents is a list of events, possibly qualified by event parameters (see Section 3.2.2.4), that the gateway is requested to detect and report. Such events may include, for example, fax tones, continuity tones, or on-hook transition. Unless otherwise specified, events are detected on the endpoint, however some events can be detected on a connection. A given event MUST NOT appear more than once in a RequestedEvents. If the parameter is omitted, it defaults to empty.",
      "ja": "RequestedEventsゲートウェイが検出して報告するように要求されていること、（セクション3.2.2.4を参照）、おそらくイベントパラメータによって資格、イベントのリストです。そのようなイベントは、例えば、ファックストーン、連続トーン、またはオンフック遷移のために、含むことができます。特に指定し、イベントはエンドポイントで検出された場合を除き、しかし、いくつかのイベントは、接続上で検出することができます。指定されたイベントはRequestedEventsに一度より多く見えてはいけません。パラメータを省略すると、デフォルトでは空に。"
    },
    {
      "indent": 3,
      "text": "To each event is associated one or more actions, which can be:",
      "ja": "各イベントにすることができ、1つまたは複数のアクションを、関連付けられています："
    },
    {
      "indent": 3,
      "text": "* Notify the event immediately, together with the accumulated list of observed events,",
      "ja": "*一緒に観察されたイベントの累積リストで、すぐにイベントを通知し、"
    },
    {
      "indent": 3,
      "text": "* Swap audio,",
      "ja": "*スワップオーディオ、"
    },
    {
      "indent": 3,
      "text": "* Accumulate the event in an event buffer, but don't notify yet,",
      "ja": "*イベントバッファ内のイベントを蓄積、まだ通知していません、"
    },
    {
      "indent": 3,
      "text": "* Accumulate according to Digit Map,",
      "ja": "*桁の地図によると蓄積させ、"
    },
    {
      "indent": 3,
      "text": "* Keep Signal(s) active,",
      "ja": "*アクティブな信号（複数可）してください、"
    },
    {
      "indent": 3,
      "text": "* Process the Embedded Notification Request,",
      "ja": "*は、組み込みの通知要求を処理します"
    },
    {
      "indent": 3,
      "text": "* Ignore the event.",
      "ja": "*イベントを無視します。"
    },
    {
      "indent": 3,
      "text": "Support for Notify, Accumulate, Keep Signal(s) Active, Embedded Notification Request, and Ignore is REQUIRED. Support for Accumulate according to Digit Map is REQUIRED on any endpoint capable of detecting DTMF. Support for any other action is OPTIONAL. The set of actions can be extended.",
      "ja": "、累積を通知する信号（S）アクティブ、組み込み通知要求を保持し、そして無視のサポートが必要です。桁マップに応じて累積のサポートは、DTMFを検出することが可能な任意のエンドポイント上で必要とされます。他のアクションのためのサポートはオプションです。アクションのセットを拡張することができます。"
    },
    {
      "indent": 3,
      "text": "A given action can by default be specified for any event, although some actions will not make sense for all events. For example, an off-hook event with the Accumulate according to Digit Map action is valid, but will of course immediately trigger a digit map mismatch when the off-hook event occurs. Needless to say, such practice is discouraged.",
      "ja": "いくつかのアクションは、すべてのイベントのために意味することはありませんが、特定のアクションは、デフォルトでは、すべてのイベントのために指定することができます。例えば、桁マップアクションに応じて累積してオフフックイベントは有効ですが、オフフックイベントが発生したとき、もちろんすぐケタマップの不一致をトリガーします。言うまでもなく、そのような行為はお勧めできません。"
    },
    {
      "indent": 3,
      "text": "Some actions can be combined as shown in the table below, where \"Y\" means the two actions can be combined, and \"N\" means they cannot:",
      "ja": "「Y」は、2つのアクションを組み合わせることができることを意味し、そして「N」はそうでないことを意味し、以下の表に示すように、いくつかのアクションを組み合わせることができます。"
    },
    {
      "indent": 6,
      "text": " --------------------------------------------------------------\n|       | Notif | Swap | Accum | AccDi | KeSiA | EmbNo | Ignor |\n|--------------------------------------------------------------|\n| Notif |   N   |   Y  |   N   |   N   |   Y   |   Y*  |   N   |\n| Swap  |   -   |   N  |   Y   |   N   |   N   |   N   |   Y   |\n| Accum |   -   |   -  |   N   |   N   |   Y   |   Y   |   N   |\n| AccDi |   -   |   -  |   -   |   N   |   Y   |   N   |   N   |\n| KeSiA |   -   |   -  |   -   |   -   |   N   |   Y   |   Y   |\n| EmbNo |   -   |   -  |   -   |   -   |   -   |   N   |   N   |\n| Ignor |   -   |   -  |   -   |   -   |   -   |   -   |   N   |\n --------------------------------------------------------------",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Note (*): The \"Embedded Notification Request\" can only be combined with \"Notify\", if the gateway is allowed to issue more than one Notify command per Notification request (see below and Section 4.4.1).",
      "ja": "注（*）：ゲートウェイは、1つは、（下記参照および4.4.1）の通知要求ごとにコマンドを通知するよりも多くを発行することを許可されている場合にのみ、「通知する」と組み合わせることができる「組み込み通知要求」。"
    },
    {
      "indent": 3,
      "text": "If no action is specified, the Notify action will be applied. If one or more actions are specified, only those actions apply. When two or more actions are specified, each action MUST be combinable with all the other actions as defined by the table above - the individual actions are assumed to occur simultaneously.",
      "ja": "アクションが指定されていない場合は、通知アクションが適用されます。 1つ以上のアクションが指定されている場合、アクションのみが適用されます。二つ以上のアクションが指定されている場合、各アクションは、上記の表によって定義されるすべての他のアクションと組み合わせなければなりません - 個々のアクションが同時に発生することが想定されます。"
    },
    {
      "indent": 3,
      "text": "If a client receives a request with an invalid or unsupported action or an illegal combination of actions, it MUST return an error to the Call Agent (error code 523 - unknown or illegal combination of actions, is RECOMMENDED).",
      "ja": "クライアントが無効またはサポートされていないアクションまたはアクションの不正な組み合わせで要求を受信した場合、それはコール・エージェントにエラーを返す必要があります（エラーコード523  - アクションの不明または不正な組み合わせ、推奨されます）。"
    },
    {
      "indent": 3,
      "text": "In addition to the RequestedEvents parameter specified in the command, some MGCP packages may contain \"persistent events\" (this is generally discouraged though - see Appendix B for an alternative). Persistent events in a given package are always detected on an endpoint that implements that package. If a persistent event is not included in the list of RequestedEvents, and the event occurs, the event will be detected anyway and processed like all other events, as if the persistent event had been requested with a Notify action. A NotificationRequest MUST still be in place for a persistent event to trigger a Notify though. Thus, informally, persistent events can be viewed as always being implicitly included in the list of RequestedEvents with an action to Notify, although no glare detection, etc., will be performed.",
      "ja": "コマンドで指定されたRequestedEventsパラメータに加えて、いくつかのMGCPパッケージは、（ただし、これは一般的に推奨されて - 代替については、付録Bを参照してください）「永続的なイベント」を含んでいてもよいです。特定のパッケージで永続的なイベントは、常にそのパッケージを実装して、エンドポイントで検出されています。永続的なイベントがRequestedEventsのリストに含まれ、イベントが発生していない場合は永続的なイベントが通知アクションを要求されたかのように、イベントは、とにかく検出され、他のすべてのイベントと同様に処理されます。 NotificationRequestはまだかかわらず、通知トリガするために永続的なイベントのための場所でなければなりません。何グレア検出等が行われませんがこのように、非公式に、永続的なイベントは、常に暗黙的に通知する作用を有するRequestedEventsのリストに含まれているとみなすことができます。"
    },
    {
      "indent": 3,
      "text": "Non-persistent events are those events that need to be explicitly included in the RequestedEvents list. The (possibly empty) list of requested events completely replaces the previous list of requested events. In addition to the persistent events, only the events specified in the requested events list will be detected by the endpoint. If a persistent event is included in the RequestedEvents list, the action specified will replace the default action associated with the event for the life of the RequestedEvents list, after which the default action is restored. For example, if \"off-hook\"was a persistent event, the \"Ignore off-hook\" action was specified, and a new request without any off-hook instructions were received, the default \"Notify off-hook\" operation would be restored.",
      "ja": "非永続的なイベントは、明示的にRequestedEventsリストに含める必要がこれらのイベントです。要求されたイベントの（おそらく空の）リストが完全に要求されたイベントの前のリストを置き換えます。永続的なイベントに加えて、要求されたイベントのリストで指定されたイベントだけがエンドポイントで検出されます。永続的なイベントがRequestedEventsリストに含まれている場合は、指定されたアクションは、デフォルトの動作が復元された後、RequestedEventsリストの生活のためのイベント、関連付けられたデフォルトのアクションを置き換えます。操作が復元されるだろう「オフフック」永続的なイベントだった場合、「無視オフフック」アクションが指定されました、そして任意のオフフックの指示なしに、新たな要求を受けた場合、デフォルトでは「オフフック通知します」 。"
    },
    {
      "indent": 3,
      "text": "The gateway will detect the union of the persistent events and the requested events. If an event is not included in either list, it will be ignored.",
      "ja": "ゲートウェイは、永続的なイベントと要求されたイベントの結合を検出します。イベントはどちらのリストに含まれていない場合、それは無視されます。"
    },
    {
      "indent": 3,
      "text": "The Call Agent can send a NotificationRequest with an empty (or omitted) RequestedEvents list to the gateway. The Call Agent can do so, for example, to a gateway when it does not want to collect any more DTMF digits. However, persistent events will still be detected and notified.",
      "ja": "コールエージェントは、ゲートウェイに、空の（または省略）RequestedEventsリストにNotificationRequestを送ることができます。これ以上のDTMFディジットを収集したくないときにコールエージェントは、ゲートウェイに、例えば、そうすることができます。ただし、永続的なイベントは、まだ検出され、通知されます。"
    },
    {
      "indent": 3,
      "text": "The Swap Audio action can be used when a gateway handles more than one connection on an endpoint. This will be the case for call waiting, and possibly other feature scenarios. In order to avoid the round-trip to the Call Agent when just changing which connection is attached to the audio functions of the endpoint, the NotificationRequest can map an event (usually hook flash, but could be some other event) to a local swap audio function, which selects the \"next\" connection in a round robin fashion. If there is only one connection, this action is effectively a no-op. If there are more than two connections, the order is undefined. If the endpoint has exactly two connections, one of which is \"inactive\", the other of which is in \"send/receive\" mode, then swap audio will attempt to make the \"send/receive\" connection \"inactive\", and vice versa. This specification intentionally does not provide any additional detail on the swap audio action.",
      "ja": "ゲートウェイは、エンドポイント上の複数の接続を処理するときスワップオーディオアクションを使用することができます。これは、コールウェイティング、およびおそらく他の機能のシナリオのケースとなります。ちょうどエンドポイントのオーディオ機能に取り付けられた接続変更する際に、NotificationRequestがイベントをマッピングすることができます（通常はフラッシュフックが、いくつかの他のイベントもよい）のコールエージェントへのラウンドトリップを避けるために、ローカルスワップオーディオへラウンドロビン方式で「次」接続を選択機能、。唯一つの接続がある場合、このアクションは効果的に何もしません。以上の2つの接続がある場合、順序は未定義です。エンドポイントは、「送信/受信」モードになっている他のうち、「非アクティブ」であるそのうちの一つ、正確に2つの接続を、持っている場合は、交換した音声は、「受信/送信」接続「非アクティブ」を作るしようとし、またその逆になります。この仕様は、意図的にスワップオーディオアクション上の任意の追加の詳細を提供していません。"
    },
    {
      "indent": 3,
      "text": "If signal(s) are desired to start when an event being looked for occurs, the \"Embedded NotificationRequest\" action can be used. The embedded NotificationRequest may include a new list of RequestedEvents, SignalRequests and a new digit map as well. The semantics of the embedded NotificationRequest is as if a new NotificationRequest was just received with the same NotifiedEntity, RequestIdentifier, QuarantineHandling and DetectEvents. When the \"Embedded NotificationRequest\" is activated, the \"current dial string\" will be cleared; however the list of observed events and the quarantine buffer will be unaffected (if combined with a Notify, the Notify will clear the list of observed events though - see Section 4.4.1). Note, that the Embedded NotificationRequest action does not accumulate the triggering event, however it can be combined with the Accumulate action to achieve that. If the Embedded NotificationRequest fails, an Embedded NotificationRequest failure event SHOULD be generated (see Appendix B).",
      "ja": "信号（S）を探しているイベントが発生したときに開始することが所望される場合、「埋め込みNotificationRequest」アクションを使用することができます。埋め込まれたNotificationRequestは、同様にRequestedEvents、SignalRequestsと新しいケタマップの新しいリストを含むことができます。新しいNotificationRequestがちょうど同じNotifiedEntity、RequestIdentifier、QuarantineHandlingとDetectEventsで受信されたかのように埋め込まれたNotificationRequestの意味があります。 「埋め込まれたNotificationRequestが」活性化されると、「現在のダイヤルストリングが」クリアされます。しかしながら、観察されたイベントと隔離バッファのリストが影響を受けない（通知、通知と組み合わせた場合にかかわらず、観察されたイベントのリストをクリアする -  4.4.1を参照）。しかし、それを達成するために累積アクションと組み合わせることができ、組み込みNotificationRequestアクションがトリガイベントを蓄積していないことに、注意してください。組み込みNotificationRequestが失敗した場合は、失敗イベントNotificationRequest組み込み（付録Bを参照）が生成されるべきです。"
    },
    {
      "indent": 3,
      "text": "MGCP implementations SHALL be able to support at least one level of embedding. An embedded NotificationRequest that respects this limitation MUST NOT contain another Embedded NotificationRequest.",
      "ja": "MGCPの実装は、埋め込みの少なくとも1つのレベルをサポートできなければなりません。この制限を尊重埋め込まれたNotificationRequestは別の組み込みNotificationRequestを含んではなりません。"
    },
    {
      "indent": 3,
      "text": "DigitMap is an optional parameter that allows the Call Agent to provision the endpoint with a digit map according to which digits will be accumulated. If this optional parameter is absent, the previously defined value is retained. This parameter MUST be defined, either explicitly or through a previous command, if the RequestedEvents parameter contains a request to \"accumulate according to the digit map\". The collection of these digits will result in a digit string. The digit string is initialized to a null string upon reception of the NotificationRequest, so that a subsequent notification only returns the digits that were collected after this request. Digits that were accumulated according to the digit map are reported as any other accumulated event, in the order in which they occur. It is therefore possible that other events accumulated are found in between the list of digits. If the gateway is requested to \"accumulate according to digit map\" and the gateway currently does not have a digit map for the endpoint in question, the gateway MUST return an error (error code 519 - endpoint does not have a digit map, is RECOMMENDED).",
      "ja": "DigitMapは桁が蓄積されるに従って先の電話番号マップでエンドポイント引当金へのコールエージェントを可能にするオプションのパラメータです。このオプションのパラメータが存在しない場合は、先に定義された値が保持されます。 RequestedEventsパラメータは「ケタマップに従って蓄積」するための要求が含まれている場合、このパラメータは、明示的または前のコマンドによって、定義されなければなりません。これらの数字のコレクションは、数字の文字列になります。後続の通知のみがこのリクエストの後に収集された数字を返すように数字列は、NotificationRequestの受信時に空文字列に初期化されます。ケタ地図に従って蓄積された数字は、それらが発生したために、任意の他の蓄積事象として報告されています。蓄積された他のイベントは、数字のリストの間で発見されていることが可能です。ゲートウェイは「ケタマップに従って蓄積」するように要求され、ゲートウェイは、現在問題になっているエンドポイントの桁のマップを持っていない場合は、エラー（エラーコード519を返さなければならないゲートウェイ - エンドポイントはケタマップを持っていない、推奨されます）。"
    },
    {
      "indent": 3,
      "text": "SignalRequests is an optional parameter that contains the set of signals that the gateway is asked to apply. When omitted, it defaults to empty. When multiple signals are specified, the signals MUST be applied in parallel. Unless otherwise specified, signals are applied to the endpoint. However some signals can be applied to a connection. Signals are identified by their name, which is an event name, and may be qualified by signal parameters (see Section 3.2.2.4). The following are examples of signals:",
      "ja": "SignalRequestsゲートウェイを適用するように要求される信号のセットを含むオプションのパラメータです。空に省略し、それがデフォルトになります。複数の信号が指定された場合、信号が並列的に適用されなければなりません。特に指定しない限り、信号は、エンドポイントに適用されます。しかし、いくつかの信号は、接続に適用することができます。信号は、イベント名、名前によって識別され、信号パラメータ（セクション3.2.2.4を参照）によって修飾されてもよいです。信号の例を以下に示します。"
    },
    {
      "indent": 3,
      "text": "* Ringing,",
      "ja": "*リンギング、"
    },
    {
      "indent": 3,
      "text": "* Busy tone,",
      "ja": "*ビジートーン、"
    },
    {
      "indent": 3,
      "text": "* Call waiting tone,",
      "ja": "*コールウェイティングトーン、"
    },
    {
      "indent": 3,
      "text": "* Off hook warning tone,",
      "ja": "*オフフック警告音、"
    },
    {
      "indent": 3,
      "text": "* Ringback tones on a connection.",
      "ja": "*リングバックは、接続上のトーン。"
    },
    {
      "indent": 3,
      "text": "Names and descriptions of signals are defined in the appropriate package.",
      "ja": "信号の名前と説明を適切なパッケージで定義されています。"
    },
    {
      "indent": 3,
      "text": "Signals are, by default, applied to endpoints. If a signal applied to an endpoint results in the generation of a media stream (audio, video, etc.), then by default the media stream MUST NOT be forwarded on any connection associated with that endpoint, regardless of the mode of the connection. For example, if a call-waiting tone is applied to an endpoint involved in an active call, only the party using the endpoint in question will hear the call-waiting tone. However, individual signals may define a different behavior.",
      "ja": "シグナルは、デフォルトでは、エンドポイントに適用されます。信号は、メディアストリーム（オーディオ、ビデオ、等）の発生におけるエンドポイント結果に適用される場合には、デフォルトで、メディア・ストリームに関係なく、接続形態の、そのエンドポイントに関連付けられている任意の接続で転送されてはいけません。コールウェイティングトーンがアクティブなコールに関与したエンドポイントに適用されている場合、問題のエンドポイントを使用した唯一の政党は、コールウェイティングトーンが聞こえます。しかし、個々の信号は、異なる挙動を定義することができます。"
    },
    {
      "indent": 3,
      "text": "When a signal is applied to a connection that has received a RemoteConnectionDescriptor, the media stream generated by that signal will be forwarded on the connection regardless of the current mode of the connection (including loopback and continuity test). If a RemoteConnectionDescriptor has not been received, the gateway MUST return an error (error code 527 - missing RemoteConnectionDescriptor, is RECOMMENDED). Note that this restriction does not apply to detecting events on a connection.",
      "ja": "信号がRemoteConnectionDescriptorを受信した接続に適用された場合、その信号によって生成されたメディアストリームに関係なく（ループバック及び導通試験を含む）接続の現在のモードの接続上で転送されます。 RemoteConnectionDescriptorを受信して​​いない場合、ゲートウェイはエラーを返さなければならない（エラーコード527  - 欠落RemoteConnectionDescriptor、推奨）。この制限は、接続上のイベントを検出するには適用されないことに注意してください。"
    },
    {
      "indent": 3,
      "text": "When a (possibly empty) list of signal(s) is supplied, this list completely replaces the current list of active time-out signals. Currently active time-out signals that are not provided in the new list MUST be stopped and the new signal(s) provided will now become active. Currently active time-out signals that are provided in the new list of signals MUST remain active without interruption, thus the timer for such time-out signals will not be affected. Consequently, there is currently no way to restart the timer for a currently active time-out signal without turning the signal off first. If the time-out signal is parameterized, the original set of parameters MUST remain in effect, regardless of what values are provided subsequently. A given signal MUST NOT appear more than once in a SignalRequests. Note that applying a signal S to an endpoint, connection C1 and connection C2, constitutes three different and independent signals.",
      "ja": "信号（S）の（おそらく空の）リストが供給されると、このリストは完全にアクティブタイムアウト信号の現在のリストを置き換えます。現在、新しいリストで提供されていないアクティブタイムアウト信号が停止しなければならないと提供される新しい信号（複数可）今アクティブになります。信号の新しいリストで提供されている現在アクティブなタイムアウト信号は、このようなタイムアウト信号用のタイマーは影響を受けません、中断することなくアクティブなままでなければなりません。その結果、第1の信号をオフにすることなく、現在アクティブなタイムアウト信号用のタイマを再起動する方法はありません。タイムアウト信号がパラメータ化されている場合、パラメータの元のセットにかかわらず、値が続いて設けられているものの、実質的に維持されなければなりません。与えられた信号はSignalRequestsに一度より多く見えてはいけません。エンドポイントへの信号Sを印加し、接続C1とC2の接続は、三つの異なる及び独立した信号を構成することに留意されたいです。"
    },
    {
      "indent": 3,
      "text": "The action triggered by the SignalRequests is synchronized with the collection of events specified in the RequestedEvents parameter. For example, if the NotificationRequest mandates \"ringing\" and the RequestedEvents asks to look for an \"off-hook\" event, the ringing SHALL stop as soon as the gateway detects an off-hook event. The formal definition is that the generation of all \"Time Out\" signals SHALL stop as soon as one of the requested events is detected, unless the \"Keep signals active\" action is associated to the detected event. The RequestedEvents and SignalRequests may refer to the same event definitions. In one case, the gateway is asked to detect the occurrence of the event, and in the other case it is asked to generate it. The specific events and signals that a given endpoint can detect or perform are determined by the list of packages that are supported by that endpoint. Each package specifies a list of events and signals that can be detected or performed. A gateway that is requested to detect or perform an event belonging to a package that is not supported by the specified endpoint MUST return an error (error code 518 - unsupported or unknown package, is RECOMMENDED). When the event name is not qualified by a package name, the default package name for the endpoint is assumed. If the event name is not registered in this default package, the gateway MUST return an error (error code 522 - no such event or signal, is RECOMMENDED).",
      "ja": "SignalRequestsによってトリガアクションがRequestedEventsパラメータで指定されたイベントのコレクションと同期しています。 NotificationRequestの義務は、「リンギング」とRequestedEventsが「オフフック」イベントを探すために要求した場合、ゲートウェイがオフフックイベントを検出すると、例えば、リンギングはすぐに停止しなければなりません。正式な定義は、すべての「タイム・アウト」信号の生成は、すぐに要求されたイベントの一つとして、停止しなければならないということである「アクティブ信号を保持」アクションが検出されたイベントに関連付けられている場合を除き、検出されました。 RequestedEventsとSignalRequestsは、同じイベントの定義を参照してもよいです。あるケースでは、ゲートウェイは、イベントの発生を検出するように依頼され、そして他の場合には、それを生成するために要求されます。所与のエンドポイントが検出または実行することができ、特定のイベントと信号は、そのエンドポイントによってサポートされているパッケージのリストによって決定されます。各パッケージには、検出されたか、実行することができるイベントと信号のリストを指定します。指定されたエンドポイントによってサポートされていないパッケージに属するイベントを検出または実行するように要求されたゲートウェイがエラーを返さなければならない（エラーコード518  - サポートされていないまたは未知のパッケージ、推奨）。イベント名は、パッケージ名で修飾されていない場合は、エンドポイントのデフォルトのパッケージ名が仮定されます。イベント名は、このデフォルトのパッケージに登録されていない場合、ゲートウェイはエラーを返さなければならない（エラーコード522  - そのような事象または信号、推奨）。"
    },
    {
      "indent": 3,
      "text": "The Call Agent can send a NotificationRequest whose requested signal list is empty. It will do so for example when a time-out signal(s) should stop.",
      "ja": "コール・エージェントは、その要求された信号リストは空であるNotificationRequestを送ることができます。タイムアウト信号（s）が停止すべきときには、例えば、そうします。"
    },
    {
      "indent": 3,
      "text": "If signal(s) are desired to start as soon as a \"looked-for\" event occurs, the \"Embedded NotificationRequest\" action can be used. The embedded NotificationRequest may include a new list of RequestedEvents, SignalRequests and a new Digit Map as well. The embedded NotificationRequest action allows the Call Agent to set up a",
      "ja": "信号（S）をできるだけ早く「ルックため」などのイベント発生を開始することが所望される場合、「埋め込みNotificationRequest」アクションを使用することができます。埋め込まれたNotificationRequestは、同様にRequestedEvents、SignalRequestsと新しい桁地図の新しいリストを含むことができます。埋め込まれたNotificationRequestアクションは、コールエージェントを設定することができます"
    },
    {
      "indent": 3,
      "text": "\"mini-script\" to be processed by the gateway immediately following the detection of the associated event. Any SignalRequests specified in the embedded NotificationRequest will start immediately. Considerable care must be taken to prevent discrepancies between the Call Agent and the gateway. However, long-term discrepancies should not occur as a new SignalRequests completely replaces the old list of active time-out signals, and BR-type signals always stop on their own. Limiting the number of On/Off-type signals is encouraged. It is considered good practice for a Call Agent to occasionally turn on all On/Off signals that should be on, and turn off all On/Off signals that should be off.",
      "ja": "関連するイベントの検出直後にゲートウェイによって処理される「ミニスクリプト」。埋め込まれたNotificationRequestで指定されたSignalRequestsはすぐに開始します。かなりの注意がコールエージェントとゲートウェイの間の不一致を防ぐために注意する必要があります。新しいSignalRequestsが完全にアクティブタイムアウト信号の古いリストを置き換えしかし、長期的な矛盾が発生してはならない、とBR型信号は、常に自分自身に停止します。オン/オフタイプの信号の数を制限することが奨励されます。コールエージェントが時折にする必要があり、すべてのオン/オフ信号をオン、オフする必要があり、すべてのオン/オフ信号をオフにすることは良い習慣と考えられています。"
    },
    {
      "indent": 3,
      "text": "The Ignore action can be used to ignore an event, e.g., to prevent a persistent event from being notified. However, the synchronization between the event and an active time-out signal will still occur by default (e.g., a time-out dial-tone signal will stop when an off-hook occurs even if off-hook was a requested event with action \"Ignore\"). To prevent this synchronization from happening, the \"Keep Signal(s) Active\" action will have to be specified as well.",
      "ja": "無視アクションが通知されることから、永続的イベントを防止するために、例えば、イベントを無視するために使用することができます。しかし、イベントとアクティブタイムアウト信号間の同期がまだオフフックが発生した場合（例えば、タイムアウトダイヤルトーン信号が「アクションと要求されたイベントであっても、オフフック場合は停止しますデフォルトで発生します。無視」）。起きてからこの同期化を防ぐには、「アクティブ信号（複数可）してください」のアクションも同様に指定する必要があります。"
    },
    {
      "indent": 3,
      "text": "The optional QuarantineHandling parameter specifies the handling of \"quarantine\" events, i.e., events that have been detected by the gateway before the arrival of this NotificationRequest command, but have not yet been notified to the Call Agent. The parameter provides a set of handling options (see Section 4.4.1 for details):",
      "ja": "オプションのQuarantineHandlingパラメータは、「検疫」のイベント、このNotificationRequestコマンドの到着前にゲートウェイで検出されているが、まだコールエージェントに通知されていない、すなわち、イベントの処理を指定します。パラメータは、処理オプション（詳細はセクション4.4.1を参照）のセットを提供します。"
    },
    {
      "indent": 3,
      "text": "* whether the quarantined events should be processed or discarded (the default is to process them).",
      "ja": "*隔離されたイベントが処理されるか、または破棄すべきかどうか（デフォルトでは、それらを処理することです）。"
    },
    {
      "indent": 3,
      "text": "* whether the gateway is expected to generate at most one notification (step by step), or multiple notifications (loop), in response to this request (the default is at most one).",
      "ja": "*ゲートウェイ（デフォルトは高々一つである）は、この要求に応じて、最大1つの通知（ステップバイステップ）、または複数の通知（ループ）を生成することが期待されているかどうか。"
    },
    {
      "indent": 3,
      "text": "When the parameter is absent, the default value is assumed.",
      "ja": "パラメータが存在しない場合、デフォルトの値が想定されます。"
    },
    {
      "indent": 3,
      "text": "We should note that the quarantine-handling parameter also governs the handling of events that were detected and processed but not yet notified when the command is received.",
      "ja": "私たちは、検疫ハンドリングパラメータも検出され、処理が、コマンドを受信したときに、まだ通知されていなかったイベントの処理を支配することに注意してください。"
    },
    {
      "indent": 3,
      "text": "DetectEvents is an optional parameter, possibly qualified by event parameters, that specifies a list of events that the gateway is requested to detect during the quarantine period. When this parameter is absent, the events to be detected in the quarantine period are those listed in the last received DetectEvents list. In addition, the gateway will also detect persistent events and the events specified in the RequestedEvents list, including those for which the \"ignore\" action is specified.",
      "ja": "DetectEventsは、ゲートウェイは、検疫期間中に検出することが要求されたイベントのリストを指定する可能性のイベントパラメータによって資格オプションのパラメータ、です。このパラメータが存在しない場合、検疫期間中に検出されるイベントは、最後に受信DetectEventsリストに記載されたものです。また、ゲートウェイはまた、永続的なイベントや「無視」アクションが指定されているものも含めRequestedEventsリストに指定されたイベントを検出します。"
    },
    {
      "indent": 3,
      "text": "Some events and signals, such as the in-line ringback or the quality alert, are performed or detected on connections terminating in the endpoint rather than on the endpoint itself. The structure of the event names (see Section 2.1.7) allows the Call Agent to specify the connection(s) on which the events should be performed or detected.",
      "ja": "そのようなインラインリングバックまたは品質アラートのようないくつかのイベントおよび信号は、エンドポイントで終端接続ではなく、エンドポイント自体で実行または検出されます。イベント名（2.1.7項を参照）の構造は、コールエージェントは、イベントが行われたり、検出されるべきで接続（複数可）を指定することができます。"
    },
    {
      "indent": 3,
      "text": "The NotificationRequest command may carry an encapsulated EndpointConfiguration command, that will apply to the same endpoint(s). When this command is present, the parameters of the EndpointConfiguration command are included with the normal parameters of the NotificationRequest, with the exception of the EndpointId, which is not replicated.",
      "ja": "NotificationRequestコマンドは、同じエンドポイント（複数可）に適用されるカプセル化されたEndpointConfigurationコマンドを搬送することができます。このコマンドが存在する場合、EndpointConfigurationコマンドのパラメータは複製されないEndpointIdを除いて、NotificationRequestの正常パラメータに含まれています。"
    },
    {
      "indent": 3,
      "text": "The encapsulated EndpointConfiguration command shares the fate of the NotificationRequest command. If the NotificationRequest is rejected, the EndpointConfiguration is not executed.",
      "ja": "カプセル化されたEndpointConfigurationコマンド株式NotificationRequestコマンドの運命。 NotificationRequestが拒否された場合、EndpointConfigurationは実行されません。"
    },
    {
      "indent": 3,
      "text": "ReturnCode is a parameter returned by the gateway. It indicates the outcome of the command and consists of an integer number optionally followed by commentary.",
      "ja": "RETURNCODEゲートウェイによって返されるパラメータです。これは、コマンドの結果を示し、必要に応じて解説続く整数から成ります。"
    },
    {
      "indent": 3,
      "text": "PackageList is a list of supported packages that MAY be included with error code 518 (unsupported package).",
      "ja": "パッケージリストは、エラーコード518（サポートされていないパッケージ）に含まれるかもしれサポートパッケージのリストです。"
    },
    {
      "indent": 0,
      "text": "2.3.4 Notify",
      "section_title": true,
      "ja": "2.3.4通知"
    },
    {
      "indent": 3,
      "text": "Notifications with the observed events are sent by the gateway via the Notify command when a triggering event occurs.",
      "ja": "トリガイベントが発生したときに観察されたイベントと通知は、通知コマンドを介してゲートウェイによって送信されます。"
    },
    {
      "indent": 9,
      "text": "ReturnCode,\n[PackageList]\n<-- Notify(EndpointId,\n           [NotifiedEntity,]\n           RequestIdentifier,\n           ObservedEvents)",
      "raw": true
    },
    {
      "indent": 3,
      "text": "EndpointId is the name for the endpoint in the gateway which is issuing the Notify command. The identifier MUST be a fully qualified endpoint identifier, including the domain name of the gateway. The local part of the name MUST NOT use any of the wildcard conventions.",
      "ja": "EndpointIdは、通知コマンドを発行しているゲートウェイにおけるエンドポイントの名前です。識別子は、ゲートウェイのドメイン名を含む完全修飾されたエンドポイント識別子でなければなりません。名前のローカル部分は、ワイルドカードの規則のいずれかを使用してはなりません。"
    },
    {
      "indent": 3,
      "text": "NotifiedEntity is a parameter that identifies the entity which requested the notification. This parameter is equal to the NotifiedEntity parameter of the NotificationRequest that triggered this notification. The parameter is absent if there was no such parameter in the triggering request. Regardless of the value of the NotifiedEntity parameter, the notification MUST be sent to the current \"notified entity\" for the endpoint.",
      "ja": "NotifiedEntityは、通知を要求されたエンティティを識別するパラメータです。このパラメータは、この通知をトリガしNotificationRequestのNotifiedEntityパラメータに等しいです。トリガリング要求には、そのようなパラメータが存在しない場合、パラメータが存在しません。かかわらずNotifiedEntityパラメータの値の通知は、エンドポイントのために現在の「通知の実体」に送らなければなりません。"
    },
    {
      "indent": 3,
      "text": "RequestIdentifier is a parameter that repeats the RequestIdentifier parameter of the NotificationRequest that triggered this notification. It is used to correlate this notification with the request that triggered it. Persistent events will be viewed here as if they had been included in the last NotificationRequest. An implicit NotificationRequest MAY be in place right after restart - the RequestIdentifier used for it will be zero (\"0\") - see Section 4.4.1 for details.",
      "ja": "RequestIdentifierは、この通知をトリガしNotificationRequestのRequestIdentifierパラメータを繰り返しパラメータです。それをトリガリクエストでこの通知を相関させるために使用されています。彼らは最後のNotificationRequestに含まれていたかのように永続的なイベントはここで見られるだろう。暗黙のNotificationRequestは、右の再起動後にであってもよい - （「0」）はゼロとなり、それに使用RequestIdentifier  - 詳細については、セクション4.4.1を参照してください。"
    },
    {
      "indent": 3,
      "text": "ObservedEvents is a list of events that the gateway detected and accumulated. A single notification may report a list of events that will be reported in the order in which they were detected (FIFO).",
      "ja": "ObservedEventsゲートウェイが検出され、蓄積されたイベントのリストです。単一の通知は、彼らが検出された順序（FIFO）で報告されるイベントのリストを報告することがあります。"
    },
    {
      "indent": 3,
      "text": "The list will only contain the identification of events that were requested in the RequestedEvents parameter of the triggering NotificationRequest. It will contain the events that were either accumulated (but not notified) or treated according to digit map (but no match yet), and the final event that triggered the notification or provided a final match in the digit map. It should be noted that digits MUST be added to the list of observed events as they are accumulated, irrespective of whether they are accumulated according to the digit map or not. For example, if a user enters the digits \"1234\" and some event E is accumulated between the digits \"3\" and \"4\" being entered, the list of observed events would be \"1, 2, 3, E, 4\". Events that were detected on a connection SHALL include the name of that connection as in \"R/qa@0A3F58\" (see Section 2.1.7).",
      "ja": "リストには、トリガーNotificationRequestのRequestedEventsパラメタで要求されたイベントの識別が含まれます。これは、いずれかの蓄積（しかし通知されていない）または数字のマップ（まだマッチしない）、および通知をトリガしまたは数字マップの最終的な一致を提供最後のイベントに従って処理されたイベントを含むであろう。それにかかわらず、それらがケタ地図かに応じて蓄積されているかどうか、それらが蓄積されるように数字が観察されたイベントのリストに追加しなければならないことに留意すべきです。例えば、ユーザは、数字「1234」を入力した場合、いくつかのイベントEが桁間に蓄積されている「3」及び「4」が入力され、観測されたイベントのリストは、「1、2、3、E 4」であろう。接続上で検出されたイベントは、「R / QAする@ 0A3F58」（2.1.7項を参照）のように、その接続の名前を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the list of ObservedEvents reaches the capacity of the endpoint, an ObservedEvents Full event (see Appendix B) SHOULD be generated (the endpoint shall ensure it has capacity to include this event in the list of ObservedEvents). If the ObservedEvents Full event is not used to trigger a Notify, event processing continues as before (including digit map matching); however, the subsequent events will not be included in the list of ObservedEvents.",
      "ja": "ObservedEventsのリストは、エンドポイントの容量に達した場合は、ObservedEvents全イベントが発生した（エンドポイントが、それを確実にしなければならないObservedEventsのリストで、このイベントを含めるする能力を持っている）されるべきである（付録Bを参照してください）。 ObservedEventsフルイベントが通知をトリガするために使用されない場合、イベント処理（桁マップマッチングを含む）以前のように継続します。しかし、その後のイベントはObservedEventsのリストには含まれません。"
    },
    {
      "indent": 3,
      "text": "ReturnCode is a parameter returned by the Call Agent. It indicates the outcome of the command and consists of an integer number optionally followed by commentary.",
      "ja": "RETURNCODEは、コールエージェントによって返されるパラメータです。これは、コマンドの結果を示し、必要に応じて解説続く整数から成ります。"
    },
    {
      "indent": 3,
      "text": "PackageList is a list of supported packages that MAY be included with error code 518 (unsupported package).",
      "ja": "パッケージリストは、エラーコード518（サポートされていないパッケージ）に含まれるかもしれサポートパッケージのリストです。"
    },
    {
      "indent": 0,
      "text": "2.3.5 CreateConnection",
      "section_title": true,
      "ja": "2.3.5のCreateConnection"
    },
    {
      "indent": 3,
      "text": "This command is used to create a connection between two endpoints.",
      "ja": "このコマンドは、2つのエンドポイント間の接続を作成するために使用されます。"
    },
    {
      "indent": 9,
      "text": "ReturnCode,\n[ConnectionId,]\n[SpecificEndPointId,]\n[LocalConnectionDescriptor,]\n[SecondEndPointId,]\n[SecondConnectionId,]\n[PackageList]\n<-- CreateConnection(CallId,\n                     EndpointId,\n                     [NotifiedEntity,]\n                     [LocalConnectionOptions,]\n                     Mode,\n                     [{RemoteConnectionDescriptor |\n                     SecondEndpointId}, ]\n                     [Encapsulated NotificationRequest,]\n                     [Encapsulated EndpointConfiguration])",
      "raw": true
    },
    {
      "indent": 3,
      "text": "A connection is defined by its endpoints. The input parameters in CreateConnection provide the data necessary to build a gateway's \"view\" of a connection.",
      "ja": "接続は、そのエンドポイントによって定義されます。 CreateConnectionでの入力パラメータは、接続のゲートウェイの「ビュー」を構築するために必要なデータを提供します。"
    },
    {
      "indent": 3,
      "text": "CallId is a parameter that identifies the call (or session) to which this connection belongs. This parameter SHOULD, at a minimum, be unique within the collection of Call Agents that control the same gateways. Connections that belong to the same call SHOULD share the same call-id. The call-id has little semantic meaning in the protocol; however it can be used to identify calls for reporting and accounting purposes. It does not affect the handling of connections by the gateway.",
      "ja": "CallIdこの接続が属する呼（またはセッション）を特定するパラメータです。このパラメータには、最低でも、同じゲートウェイを制御するコールエージェントのコレクション内で一意である必要があります。同じコールに属す接続は、同じコールIDを共有する必要があります。コールIDは、プロトコルにはほとんど意味論的な意味を持ちます。しかし報告と会計の目的のために通話を識別するために使用することができます。これは、ゲートウェイで接続の取り扱いには影響を与えません。"
    },
    {
      "indent": 3,
      "text": "EndpointId is the identifier for the connection endpoint in the gateway where CreateConnection executes. The EndpointId can be fully-specified by assigning a value to the parameter EndpointId in the function call or it may be under-specified by using the \"any of\" wildcard convention. If the endpoint is underspecified, the endpoint identifier SHALL be assigned by the gateway and its complete value returned in the SpecificEndPointId parameter of the response. When the \"any of\" wildcard is used, the endpoint assigned MUST be in-service and MUST NOT already have any connections on it. If no such endpoint is available, error code 410 (no endpoint available) SHOULD be returned. The \"all of\" wildcard MUST NOT be used.",
      "ja": "EndpointIdはのCreateConnectionが実行ゲートウェイに接続エンドポイントの識別子です。 EndpointIdは、関数呼び出しのパラメータEndpointIdに値を割り当てることによって完全に指定することができ、またはそれは下で指定のワイルドカード規則「のいずれか」を用いてであってもよいです。エンドポイントがunderspecifiedされている場合、エンドポイント識別子は、ゲートウェイによって割り当てられるものとその完全な値が応答のSpecificEndPointIdパラメータに返さ。ワイルドカード「のいずれかが」使用されている場合は、割り当てられたエンドポイントは、サービス中でなければなりませんし、すでにその上に任意の接続を持ってはいけません。そのようなエンドポイントが利用可能でない場合、エラーコード410（なしエンドポイント）が返されるべきです。ワイルドカード「のすべてが」使用してはいけません。"
    },
    {
      "indent": 3,
      "text": "The NotifiedEntity is an optional parameter that specifies a new \"notified entity\" for the endpoint.",
      "ja": "NotifiedEntityは、エンドポイントのための新しい「通知実体」を指定するオプションのパラメータです。"
    },
    {
      "indent": 3,
      "text": "LocalConnectionOptions is an optional structure used by the Call Agent to direct the handling of the connection by the gateway. The fields contained in a LocalConnectionOptions structure may include one or more of the following (each field MUST NOT be supplied more than once):",
      "ja": "LocalConnectionOptionsゲートウェイでの接続の取り扱いを指示するには、Call Agentが使用するオプションの構造です。 LocalConnectionOptions構造に含まれるフィールドは、以下の（各フィールドが複数回与えてはいけません）の一つ以上を含むことができます。"
    },
    {
      "indent": 3,
      "text": "* Codec compression algorithm: One or more codecs, listed in order of preference. For interoperability, it is RECOMMENDED to support G.711 mu-law encoding (\"PCMU\"). See Section 2.6 for details on the codec selection process.",
      "ja": "*コーデック圧縮アルゴリズム：1つのまたは複数のコーデック、優先順にリストされています。相互運用性のため、とG.711 mu-lawエンコーディング（ \"PCMU\"）をサポートすることをお勧めします。コーデック選択プロセスの詳細については、2.6節を参照してください。"
    },
    {
      "indent": 3,
      "text": "* Packetization period: A single millisecond value or a range may be specified. The packetization period SHOULD NOT contradict the specification of the codec compression algorithm. If a codec is specified that has a frame size which is inconsistent with the packetization period, and that codec is selected, the gateway is authorized to use a packetization period that is consistent with the frame size even if it is different from that specified. In so doing, the gateway SHOULD choose a non-zero packetization period as close to that specified as possible. If a packetization period is not specified, the endpoint SHOULD use the default packetization period(s) for the codec(s) selected.",
      "ja": "*パケット期間：単一ミリ秒の値または範囲を指定することができます。パケット化期間は、コーデック圧縮アルゴリズムの仕様と矛盾すべきではありません。コーデックは、パケット化期間と矛盾しているフレームサイズを有することが特定され、そのコーデックが選択されている場合、ゲートウェイは、それが指定されたものと異なる場合であっても、フレームサイズと一致するパケット化周期を使用することが許可されています。そうすることで、ゲートウェイは、できるだけ指定さに近い非ゼロのパケット化期間を選択する必要があります。パケット化期間が指定されていない場合、エンドポイントは、選択したコーデック（複数可）のデフォルトのパケット化期間（複数可）を使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "* Bandwidth: The allowable bandwidth, i.e., payload plus any header overhead from the transport layer and up, e.g., IP, UDP, and RTP. The bandwidth specification SHOULD NOT contradict the specification of codec compression algorithm or packetization period. If a codec is specified, then the gateway is authorized to use it, even if it results in the usage of a larger bandwidth than specified. Any discrepancy between the bandwidth and codec specification will not be reported as an error.",
      "ja": "*帯域幅：輸送層とアップ、例えば、IP、UDP、およびRTPから許容帯域、すなわち、ペイロードおよび任意のヘッダーオーバーヘッド。帯域幅仕様は、コーデック圧縮アルゴリズムやパケット化期間の仕様と矛盾すべきではありません。コーデックが指定されている場合、ゲートウェイは、それが指定されたよりも大きな帯域幅の使用をもたらすとしても、それを使用することを許可されています。帯域幅とコーデック仕様の間の任意の不一致はエラーとして報告されることはありません。"
    },
    {
      "indent": 3,
      "text": "* Type of Service: This indicates the class of service to be used for this connection. When the Type of Service is not specified, the gateway SHALL use a default value of zero unless provisioned otherwise.",
      "ja": "*サービスの種類：これは、この接続に使用するサービスのクラスを示します。サービスの種類が指定されていない場合に別段のプロビジョニングされない限り、ゲートウェイは、ゼロのデフォルト値を使用しなければなりません。"
    },
    {
      "indent": 3,
      "text": "* Usage of echo cancellation: By default, the telephony gateways always perform echo cancellation on the endpoint. However, it may be necessary, for some calls, to turn off these operations. The echo cancellation parameter can have two values, \"on\" (when the echo cancellation is requested) and \"off\" (when it is turned off). The parameter is optional. If the parameter is omitted when creating a connection and there are no other connections on the endpoint, the endpoint SHALL apply echo cancellation initially. If the parameter is omitted when creating a connection and there are existing connections on the endpoint, echo cancellation is unchanged. The endpoint SHOULD subsequently enable or disable echo cancellation when voiceband data is detected - see e.g., ITU-T recommendation V.8, V.25, and G.168. Following termination of voiceband data, the handling of echo cancellation SHALL then revert to the current value of the echo cancellation parameter. It is RECOMMENDED that echo cancellation handling is left to the gateway rather than having this parameter specified by the Call Agent.",
      "ja": "*エコーキャンセルの使用方法：デフォルトでは、テレフォニーゲートウェイは、常にエンドポイントでエコーキャンセルを行います。しかし、それはこれらの操作を無効にする、いくつかのコールのために、必要になることがあります。エコーキャンセルパラメータは、「上」、2つの値を持つことができます（エコーキャンセルが要求された場合）と「オフ」（それがオフになっている場合）。パラメータはオプションです。接続を作成し、エンドポイント上の他の接続がない時にパラメータが省略された場合、エンドポイントは、最初は、エコーキャンセルを適用しなければなりません。パラメータは、接続を作成するときに省略し、エンドポイント上の既存の接続があるされている場合は、エコーキャンセレーションは変更されません。音声帯域データが検出された場合、エンドポイントは、その後、エコーキャンセルを有効または無効にする必要があります - 、例えばITU-T勧告V.8、V.25、およびG.168を参照します。音声帯域データの終了後に、エコーキャンセルの取り扱いは、エコーキャンセルパラメータの現在の値に戻すものとします。むしろ、コールエージェントによって指定され、このパラメータを持つよりも、エコーキャンセル処理がゲートウェイに残っていることが推奨されます。"
    },
    {
      "indent": 3,
      "text": "* Silence Suppression: The telephony gateways may perform voice activity detection, and avoid sending packets during periods of silence. However, it is necessary, for example for modem calls, to turn off this detection. The silence suppression parameter can have two values, \"on\" (when the detection is requested) and \"off\" (when it is not requested). The default is \"off\" (unless provisioned otherwise). Upon detecting voiceband data, the endpoint SHOULD disable silence suppression. Following termination of voiceband data, the handling of silence suppression SHALL then revert to the current value of the silence suppression parameter.",
      "ja": "*無音抑止：テレフォニーゲートウェイは、音声アクティビティ検出を行い、そして沈黙の期間中にパケットを送信することを回避することができます。しかし、それはこの検出をオフにするには、モデムコールのために、たとえば、必要です。無音抑圧パラメータが「オン」、2つの値を有することができる（検出が要求された場合）及び「オフ」（それが要求されていない場合）。デフォルトでは「オフ」（そうプロビジョニングされない限り）です。音声帯域データを検出すると、エンドポイントは、無音抑制を無効にする必要があります。音声帯域データの終了後、無音抑圧の処理は、次に無音抑圧​​パラメータの現在の値に戻すSHALL。"
    },
    {
      "indent": 3,
      "text": "* Gain Control: The telephony gateways may perform gain control on the endpoint, in order to adapt the level of the signal. However, it is necessary, for example for some modem calls, to turn off this function. The gain control parameter may either be specified as \"automatic\", or as an explicit number of decibels of gain. The gain specified will be added to media sent out over the endpoint (as opposed to the connection) and subtracted from media received on the endpoint. The parameter is optional. When there are no other connections on the endpoint, and the parameter is omitted, the default is to not perform gain control (unless provisioned otherwise), which is equivalent to specifying a gain of 0 decibels. If there are other connections on the endpoint, and the parameter is omitted, gain control is unchanged. Upon detecting voiceband data, the endpoint SHOULD disable gain control if needed. Following termination of voiceband data, the handling of gain control SHALL then revert to the current value of the gain control parameter. It should be noted, that handling of gain control is normally best left to the gateway and hence use of this parameter is NOT RECOMMENDED.",
      "ja": "*ゲインコントロール：電話ゲートウェイは信号のレベルを適合させるために、エンドポイントでのゲイン制御を行うことができます。しかし、それは、この機能をオフにするには、いくつかのモデムコールのために、たとえば、必要です。ゲイン制御パラメータは、いずれかの「自動」として、又は利得のデシベルの明示的な数として指定することができます。指定された利得は、培地に添加されるエンドポイントで受信された（接続とは対照的に）エンドポイント上に送出し、メディアから差し引きます。パラメータはオプションです。そこエンドポイントには、他の接続されず、パラメータが省略された場合、デフォルトは、（別段のプロビジョニングされない限り）0デシベルの利得を指定するのと同じであり、利得制御を実行しないことです。そこにエンドポイント上の他の接続があり、かつパラメータが省略された場合、ゲイン制御は変更されません。必要に応じて、音声帯域データを検出すると、エンドポイントは、利得制御を無効にする必要があります。音声帯域データの終了に続いて、ゲイン制御の取り扱いは、ゲイン制御パラメータの現在の値に戻すものとします。なお、ゲイン制御の取り扱いは、通常、最高のゲートウェイに委ね、したがって推奨されていません。このパラメータを使用することです。"
    },
    {
      "indent": 3,
      "text": "* RTP security: The Call agent can request the gateway to enable encryption of the audio Packets. It does so by providing a key specification, as specified in RFC 2327. By default, encryption is not performed.",
      "ja": "* RTPセキュリティ：コールエージェントは、音声パケットの暗号化を有効にするには、ゲートウェイを要求することができます。これは、暗号化が行われていない、デフォルトでは、RFC 2327で指定されているように、キーの仕様を提供することで、そうします。"
    },
    {
      "indent": 3,
      "text": "* Network Type: The Call Agent may instruct the gateway to prepare the connection on a specified type of network. If absent, the value is based on the network type of the gateway being used.",
      "ja": "*ネットワークの種類：コールエージェントはネットワークの指定されたタイプの接続を準備するためにゲートウェイを指示することができます。存在しない場合、値が使用されているゲートウェイのネットワーク・タイプに基づいています。"
    },
    {
      "indent": 3,
      "text": "* Resource reservation: The Call Agent may instruct the gateway to use network resource reservation for the connection. See Section 2.7 for details.",
      "ja": "*リソース予約：コールエージェントは、接続のためのネットワークリソース予約を使用するようにゲートウェイを指示することができます。詳細については、セクション2.7を参照してください。"
    },
    {
      "indent": 3,
      "text": "The Call Agent specifies the relevant fields it cares about in the command and leaves the rest to the discretion of the gateway. For those of the above parameters that were not explicitly included, the gateway SHOULD use the default values if possible. For a detailed list of local connection options included with this specification refer to section 3.2.2.10. The set of local connection options can be extended.",
      "ja": "コール・エージェントは、それがコマンドで気に関連するフィールドを指定し、ゲートウェイの裁量に残りの部分を残します。可能な場合は明示的に含まれていない上記パラメータのそれらのために、ゲートウェイは、デフォルト値を使用すべきです。この仕様に含まれているローカル接続オプションの詳細なリストについては、セクション3.2.2.10を参照してください。ローカル接続オプションのセットを拡張することができます。"
    },
    {
      "indent": 3,
      "text": "The Mode indicates the mode of operation for this side of the connection. The basic modes are \"send\", \"receive\", \"send/receive\", \"conference\", \"inactive\", \"loopback\", \"continuity test\", \"network loop back\" and \"network continuity test\". The expected handling of these modes is specified in the introduction of the \"Gateway Control Commands\", Section 2.3. Note that signals applied to a connection do not follow the connection mode. Some endpoints may not be capable of supporting all modes. If the command specifies a mode that the endpoint does not support, an error SHALL be returned (error 517 - unsupported mode, is RECOMMENDED). Also, if a connection has not yet received a RemoteConnectionDescriptor, an error MUST be returned if the connection is attempted to be placed in any of the modes \"send only\", \"send/receive\", \"conference\", \"network loopback\", \"network continuity test\", or if a signal (as opposed to detecting an event) is to be applied to the connection (error code 527 - missing RemoteConnectionDescriptor, is RECOMMENDED). The set of modes can be extended.",
      "ja": "モードは、接続のこの側面の動作モードを示しています。基本的なモードは、「受信」、「送信/受信」、「会議」、「非アクティブ」、「ループバック」、「継続性テスト」、「ネットワークループバック」、「送信」および「ネットワーク導通試験」です。これらのモードの期待される処理は、「ゲートウェイ制御コマンド」、2.3節の冒頭で指定されています。接続に印加される信号は、接続モードに従わないことに注意してください。いくつかのエンドポイントは、すべてのモードをサポートすることができない場合があります。コマンドは、エンドポイントがサポートされていないモードを指定した場合は、エラーが返されなければならない。（エラー517  - サポートされていないモードで、推奨されます）。また、接続はまだRemoteConnectionDescriptorを受信して​​いない場合、接続はモードのいずれかに配置しようとする場合、エラーが返されなければならない「送信のみ」、「送信/受信」、「会議」、「ネットワークループバック」、 「ネットワーク連続テスト」、または（イベント検出とは対照的に）信号は、接続に適用される場合（エラーコード527  -  RemoteConnectionDescriptorが欠落し、推奨）。モードのセットを拡張することができます。"
    },
    {
      "indent": 3,
      "text": "The gateway returns a ConnectionId, that uniquely identifies the connection within the endpoint, and a LocalConnectionDescriptor, which is a session description that contains information about the connection, e.g., IP address and port for the media, as defined in SDP.",
      "ja": "ゲートウェイは、一意のエンドポイント内の接続を特定ConnectionId、およびSDPで定義されるように、メディアの接続、例えば、IPアドレスおよびポートに関する情報を含むセッション記述であるLocalConnectionDescriptorを返します。"
    },
    {
      "indent": 3,
      "text": "The SpecificEndPointId is an optional parameter that identifies the responding endpoint. It is returned when the EndpointId argument referred to an \"any of\" wildcard name and the command succeeded. When a SpecificEndPointId is returned, the Call Agent SHALL use it as the EndpointId value in successive commands referring to this connection.",
      "ja": "SpecificEndPointIdが応答エンドポイントを識別するオプションのパラメータです。 EndpointId引数は「いずれかの」ワイルドカード名に呼ばれ、コマンドが成功したときに返されます。 SpecificEndPointIdが返されると、コールエージェントは、この接続を参照する連続コマンドでEndpointId値としてそれを使用しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The SecondEndpointId can be used instead of the RemoteConnectionDescriptor to establish a connection between two endpoints located on the same gateway. The connection is by definition a local connection. The SecondEndpointId can be fully-specified by assigning a value to the parameter SecondEndpointId in the function call or it may be under-specified by using the \"any of\" wildcard convention. If the SecondEndpointId is underspecified, the second endpoint identifier will be assigned by the gateway and its complete value returned in the SecondEndPointId parameter of the response.",
      "ja": "SecondEndpointIdは同一のゲートウェイに位置する2つのエンドポイント間の接続を確立する代わりRemoteConnectionDescriptorを用いることができます。接続は、定義によってローカル接続です。 SecondEndpointIdは、関数呼び出しのパラメータSecondEndpointIdに値を割り当てることによって完全に指定することができ、またはワイルドカード規則「のいずれか」を用いて指定された下で、それがあってもよいです。 SecondEndpointIdがunderspecifiedされている場合、第2のエンドポイント識別子は、ゲートウェイによって割り当てられ、その完全な値が応答のSecondEndPointIdパラメータに返されます。"
    },
    {
      "indent": 3,
      "text": "When a SecondEndpointId is specified, the command really creates two connections that can be manipulated separately through ModifyConnection and DeleteConnection commands. In addition to the ConnectionId and LocalConnectionDescriptor for the first connection, the response to the creation provides a SecondConnectionId parameter that identifies the second connection. The second connection is established in \"send/receive\" mode.",
      "ja": "SecondEndpointIdを指定すると、コマンドは本当にModifyConnectionとDeleteConnectionコマンドで個別に操作することができる2つの接続を作成します。最初の接続のためのConnectionIdとLocalConnectionDescriptorに加えて、作成に対する応答が第二の接続を識別するSecondConnectionIdパラメータを提供します。第二の接続は、「送信/受信」モードで確立されています。"
    },
    {
      "indent": 3,
      "text": "After receiving a \"CreateConnection\" request that did not include a RemoteConnectionDescriptor parameter, a gateway is in an ambiguous situation. Because it has exported a LocalConnectionDescriptor parameter, it can potentially receive packets. Because it has not yet received the RemoteConnectionDescriptor parameter of the other gateway, it does not know whether the packets that it receives have been authorized by the Call Agent. It must thus navigate between two risks, i.e., clipping some important announcements or listening to insane data. The behavior of the gateway is determined by the value of the Mode parameter:",
      "ja": "RemoteConnectionDescriptorパラメータが含まれていませんでした「のCreateConnection」要求を受信した後、ゲートウェイは、あいまいな状況にあります。それはLocalConnectionDescriptorパラメータを輸出しているので、それが潜在的にパケットを受信することができます。それはまだ他のゲートウェイのRemoteConnectionDescriptorパラメータを受信して​​いないので、それが受信するパケットは、コールエージェントによって認可されているかどうか分かりません。それはこのように、2つのリスク、すなわち、いくつかの重要な発表をクリッピングや非常識なデータを聴い間を移動しなければなりません。ゲートウェイの動作は、モードパラメータの値によって決定されます。"
    },
    {
      "indent": 3,
      "text": "* If the mode was set to ReceiveOnly, the gateway MUST accept the media and transmit them through the endpoint.",
      "ja": "モードがReceiveOnlyに設定されていた場合*、ゲートウェイは、メディアを受け入れて、エンドポイントを介してそれらを伝えなければなりません。"
    },
    {
      "indent": 3,
      "text": "* If the mode was set to Inactive, Loopback, or Continuity Test, the gateway MUST NOT transmit the media through to the endpoint.",
      "ja": "*モードは、ループバック、または連続テストを非アクティブに設定されている場合、ゲートウェイは、エンドポイントに至るメディアを送信してはいけません。"
    },
    {
      "indent": 3,
      "text": "Note that the mode values SendReceive, Conference, SendOnly, Network Loopback and Network Continuity Test do not make sense in this situation. They MUST be treated as errors, and the command MUST be rejected (error code 527 - missing RemoteConnectionDescriptor, is RECOMMENDED).",
      "ja": "モード値SendReceive、コンファレンス、SENDONLY、ネットワークループバックおよびネットワークの継続性テストは、このような状況では意味を持たないことに注意してください。彼らは、エラーとして扱わなければならない、とコマンドを拒絶しなければなりません（エラーコード527  - 行方不明RemoteConnectionDescriptorが、推奨されます）。"
    },
    {
      "indent": 3,
      "text": "The command may optionally contain an encapsulated Notification Request command, which applies to the EndpointId, in which case a RequestIdentifier parameter MUST be present, as well as, optionally, other parameters of the NotificationRequest with the exception of the EndpointId, which is not replicated. The encapsulated NotificationRequest is executed simultaneously with the creation of the connection. For example, when the Call Agent wants to initiate a call to a residential gateway, it could:",
      "ja": "コマンドは、必要に応じてRequestIdentifierパラメータが存在しなければならない場合にEndpointIdに適用されるカプセル化された通知要求コマンド、、、ならびに複製されないEndpointIdを除いてNotificationRequestの必要に応じて、他のパラメータを含んでいてもよいです。カプセル化されたNotificationRequestは、接続の作成と同時に実行されます。例えば、コール・エージェントは、レジデンシャルゲートウェイ、それは可能性への通話を開始したいとき："
    },
    {
      "indent": 3,
      "text": "* ask the residential gateway to prepare a connection, in order to be sure that the user can start speaking as soon as the phone goes off hook,",
      "ja": "*ユーザーは電話がオフフックになるとすぐに話して開始することができますことを確認するために、接続を準備するためにレジデンシャルゲートウェイを尋ねます、"
    },
    {
      "indent": 3,
      "text": "* ask the residential gateway to start ringing,",
      "ja": "*リンギングを開始するレジデンシャルゲートウェイを尋ねます、"
    },
    {
      "indent": 3,
      "text": "* ask the residential gateway to notify the Call Agent when the phone goes off-hook.",
      "ja": "*電話がオフフック時にコールエージェントに通知するためにレジデンシャルゲートウェイをお願いします。"
    },
    {
      "indent": 3,
      "text": "This can be accomplished in a single CreateConnection command, by also transmitting the RequestedEvents parameters for the off-hook event, and the SignalRequests parameter for the ringing signal.",
      "ja": "これはまた、オフフックイベント、及びリンギング信号のSignalRequestsパラメータのRequestedEventsパラメータを送信することによって、単一のCreateConnectionコマンドで達成することができます。"
    },
    {
      "indent": 3,
      "text": "When these parameters are present, the creation and the NotificationRequest MUST be synchronized, which means that both MUST be accepted, or both MUST be refused. In our example, the CreateConnection may be refused if the gateway does not have sufficient resources, or cannot get adequate resources from the local network access, and the off-hook NotificationRequest can be refused in the glare condition, if the user is already off-hook. In this example, the phone must not ring if the connection cannot be established, and the connection must not be established if the user is already off-hook.",
      "ja": "これらのパラメータが存在する場合、作成とNotificationRequestは両方が受け入れなければならない、あるいはその両方を拒否しなければならないことを意味し、同期させる必要があります。この例では、のCreateConnectionは、ゲートウェイが十分なリソースを持っていない場合は拒否してもよいし、ローカルネットワークアクセスから十分なリソースを取得することはできませんし、ユーザーがすでにオフの場合はオフフックNotificationRequestは、グレア状態に拒否したことができますフック。この例では、接続が確立できない場合、電話は鳴らない必要があり、ユーザがオフフック既にある場合に接続が確立されてはなりません。"
    },
    {
      "indent": 3,
      "text": "The NotifiedEntity parameter, if present, defines the new \"notified entity\" for the endpoint.",
      "ja": "NotifiedEntityパラメータは、存在する場合、エンドポイントに対する新しい「通知実体」を定義します。"
    },
    {
      "indent": 3,
      "text": "The command may carry an encapsulated EndpointConfiguration command, which applies to the EndpointId. When this command is present, the parameters of the EndpointConfiguration command are included with the normal parameters of the CreateConnection with the exception of the EndpointId, which is not replicated. The EndpointConfiguration command may be encapsulated together with an encapsulated NotificationRequest command. Note that both of these apply to the EndpointId only.",
      "ja": "コマンドは、EndpointIdに適用されるカプセル化されたEndpointConfigurationコマンドを搬送することができます。このコマンドが存在する場合、EndpointConfigurationコマンドのパラメータは複製されないEndpointIdを除いてのCreateConnectionの通常のパラメータに含まれています。 EndpointConfigurationコマンドは、カプセル化されたNotificationRequestコマンドと共にカプセル化することができます。これらの両方が唯一のEndpointIdに適用されることに注意してください。"
    },
    {
      "indent": 3,
      "text": "The encapsulated EndpointConfiguration command shares the fate of the CreateConnection command. If the CreateConnection is rejected, the EndpointConfiguration is not executed.",
      "ja": "カプセル化されたEndpointConfigurationコマンド株式のCreateConnectionコマンドの運命。 CreateConnectionが拒否された場合、EndpointConfigurationは実行されません。"
    },
    {
      "indent": 3,
      "text": "ReturnCode is a parameter returned by the gateway. It indicates the outcome of the command and consists of an integer number optionally followed by commentary.",
      "ja": "RETURNCODEゲートウェイによって返されるパラメータです。これは、コマンドの結果を示し、必要に応じて解説続く整数から成ります。"
    },
    {
      "indent": 3,
      "text": "PackageList is a list of supported packages that MAY be included with error code 518 (unsupported package).",
      "ja": "パッケージリストは、エラーコード518（サポートされていないパッケージ）に含まれるかもしれサポートパッケージのリストです。"
    },
    {
      "indent": 0,
      "text": "2.3.6 ModifyConnection",
      "section_title": true,
      "ja": "2.3.6 ModifyConnection"
    },
    {
      "indent": 3,
      "text": "This command is used to modify the characteristics of a gateway's \"view\" of a connection. This \"view\" of the call includes both the local connection descriptor as well as the remote connection descriptor.",
      "ja": "このコマンドは、接続のゲートウェイの「ビュー」の特性を変更するために使用されます。コールのこの「ビュー」ローカル接続記述子だけでなく、リモート接続記述子の両方を含んでいます。"
    },
    {
      "indent": 9,
      "text": "ReturnCode,\n[LocalConnectionDescriptor,]\n[PackageList]\n<-- ModifyConnection(CallId,\n                     EndpointId,\n                     ConnectionId,\n                     [NotifiedEntity,]\n                     [LocalConnectionOptions,]\n                     [Mode,]\n                     [RemoteConnectionDescriptor,]\n                     [Encapsulated NotificationRequest,]\n                     [Encapsulated EndpointConfiguration])",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The parameters used are the same as in the CreateConnection command, with the addition of a ConnectionId that identifies the connection within the endpoint. This parameter was returned by the CreateConnection command, in addition to the local connection descriptor. It uniquely identifies the connection within the context of the endpoint. The CallId used when the connection was created MUST be included as well.",
      "ja": "使用されるパラメータは、エンドポイント内の接続を特定ConnectionIdを添加して、のCreateConnectionコマンドと同様です。このパラメータは、ローカル接続記述子に加えて、のCreateConnectionコマンドで返されました。これは、一意のエンドポイントのコンテキスト内の接続を特定します。接続が作成されたときCallIdは、同様に含まれなければならない使用しました。"
    },
    {
      "indent": 3,
      "text": "The EndpointId MUST be a fully qualified endpoint identifier. The local name MUST NOT use the wildcard conventions.",
      "ja": "EndpointIdは完全修飾されたエンドポイント識別子でなければなりません。ローカル名は、ワイルドカードの規則を使用してはなりません。"
    },
    {
      "indent": 3,
      "text": "The ModifyConnection command can be used to affect parameters of a connection in the following ways:",
      "ja": "ModifyConnectionコマンドは、次の方法で接続のパラメータに影響を与えるために使用することができます。"
    },
    {
      "indent": 3,
      "text": "* Provide information about the other end of the connection, through the RemoteConnectionDescriptor. If the parameter is omitted, it retains its current value.",
      "ja": "* RemoteConnectionDescriptorを通じて、接続のもう一方の端についての情報を提供します。パラメータが省略された場合は、その現在の値を保持します。"
    },
    {
      "indent": 3,
      "text": "* Activate or deactivate the connection, by changing the value of the Mode parameter. This can occur at any time during the connection, with arbitrary parameter values. If the parameter is omitted, it retains its current value.",
      "ja": "* Modeパラメータの値を変更することによって、接続を有効化または無効化。これは、任意のパラメータ値に関連し、中の任意の時点で行うことができます。パラメータが省略された場合は、その現在の値を保持します。"
    },
    {
      "indent": 3,
      "text": "* Change the parameters of the connection through the LocalConnectionOptions, for example by switching to a different coding scheme, changing the packetization period, or modifying the handling of echo cancellation. If one or more LocalConnectionOptions parameters are omitted, then the gateway",
      "ja": "*、異なる符号化方式に切り替えるパケット化周期を変更すること、またはエコーキャンセルの取り扱いを変更することによって、例えば、LocalConnectionOptionsを通じて接続のパラメータを変更します。一つ以上のLocalConnectionOptionsパラメータが省略されている場合、ゲートウェイ"
    },
    {
      "indent": 5,
      "text": "SHOULD refrain from changing that parameter from its current value, unless another parameter necessitating such a change is explicitly provided. For example, a codec change might require a change in silence suppression. Note that if a RemoteConnectionDescriptor is supplied, then only the LocalConnectionOptions actually supplied with the ModifyConnection command will affect the codec negotiation (as described in Section 2.6).",
      "ja": "そのような変更を必要とする他のパラメータを明示的に指定されない限り、その電流値からそのパラメータを変更することを控えるべきです。例えば、コーデックの変更が無音抑止の変更が必要な場合があります。 RemoteConnectionDescriptorが供給されている場合（セクション2.6で説明したように）、その後、実際にModifyConnectionコマンドに付属のLocalConnectionOptionsはコーデック交渉に影響することに注意してください。"
    },
    {
      "indent": 3,
      "text": "Connections can only be fully activated if the RemoteConnectionDescriptor has been provided to the gateway. The receive-only mode, however, can be activated without the provision of this descriptor.",
      "ja": "RemoteConnectionDescriptorゲートウェイに提供されている場合の接続にのみ完全に活性化することができます。受信専用モードでは、しかし、この記述子を設けることなく起動することができます。"
    },
    {
      "indent": 3,
      "text": "The command will only return a LocalConnectionDescriptor if the local connection parameters, such as RTP ports, were modified. Thus, if, for example, only the mode of the connection is changed, a LocalConnectionDescriptor will not be returned. Note however, that inclusion of LocalConnectionOptions in the command is not a prerequisite for local connection parameter changes to occur. If a connection parameter is omitted, e.g., silence suppression, the old value of that parameter will be retained if possible. If a parameter change necessitates a change in one or more unspecified parameters, the gateway is free to choose suitable values for the unspecified parameters that must change. This can for instance happen if the packetization period was not specified. If the new codec supported the old packetization period, the value of this parameter would not change, as a change would not be necessary. However, if it did not support the old packetization period, it would choose a suitable value.",
      "ja": "このようなRTPポートとしてローカル接続パラメータは、変更された場合、コマンドのみLocalConnectionDescriptorを返します。例えば、接続の専用モードが変更され、したがって、もし、LocalConnectionDescriptorが返されないであろう。但し、コマンドにLocalConnectionOptionsの包含が発生するローカル接続パラメータの変更のための前提条件ではありません。接続パラメータが省略された場合、例えば、無音抑止可能な場合は、そのパラメータの古い値が保持されます。パラメータの変更は、1つまたは複数の不特定のパラメータの変更を必要とした場合、ゲートウェイは変更する必要があり、不特定のパラメータに適切な値を自由に選択することができます。パケット化期間が指定されていない場合これは、例えば起こります。新しいコーデックが古いパケット化期間をサポートする場合は変更が必要ではないであろうと、このパラメータの値は、変更しないでしょう。それは昔のパケット化期間をサポートしていませんでしたしかし、もし、それが適切な値を選ぶだろう。"
    },
    {
      "indent": 3,
      "text": "The command may optionally contain an encapsulated Notification Request command, in which case a RequestIdentifier parameter MUST be present, as well as, optionally, other parameters of the NotificationRequest with the exception of the EndpointId, which is not replicated. The encapsulated NotificationRequest is executed simultaneously with the modification of the connection. For example, when a connection is accepted, the calling gateway should be instructed to place the circuit in send-receive mode and to stop providing ringing tones. This can be accomplished in a single ModifyConnection command, by also transmitting the RequestedEvents parameters, for the on-hook event, and an empty SignalRequests parameter, to stop the provision of ringing tones.",
      "ja": "コマンドは、必要に応じてRequestIdentifierパラメータが存在しなければならない場合にカプセル化された通知要求コマンド、ならびに複製されないEndpointIdを除いてNotificationRequestの必要に応じて、他のパラメータを含んでいてもよいです。カプセル化されたNotificationRequestは、接続の変更と同時に実行されます。接続が受け入れられたときに、例えば、呼び出しゲートウェイは、送受信モードで回路を配置すると、着信音の提供を停止するように指示されなければなりません。これはまた、オンフックイベントを、RequestedEventsパラメータを送信することによって、単一ModifyConnectionコマンドで行うことができ、空SignalRequestsパラメータは、着信音の提供を停止します。"
    },
    {
      "indent": 3,
      "text": "When these parameters are present, the modification and the NotificationRequest MUST be synchronized, which means that both MUST be accepted, or both MUST be refused.",
      "ja": "これらのパラメータが存在する場合、修正及びNotificationRequestの両方が受け入れなければならない、または両方を拒否しなければならないことを意味し、同期されなければなりません。"
    },
    {
      "indent": 3,
      "text": "The NotifiedEntity parameter, if present, defines the new \"notified entity\" for the endpoint.",
      "ja": "NotifiedEntityパラメータは、存在する場合、エンドポイントに対する新しい「通知実体」を定義します。"
    },
    {
      "indent": 3,
      "text": "The command may carry an encapsulated EndpointConfiguration command, that will apply to the same endpoint. When this command is present, the parameters of the EndpointConfiguration command are included with the normal parameters of the ModifyConnection with the exception of the EndpointId, which is not replicated. The EndpointConfiguration command may be encapsulated together with an encapsulated NotificationRequest command.",
      "ja": "コマンドは、同じエンドポイントに適用されるカプセル化されたEndpointConfigurationコマンドを搬送することができます。このコマンドが存在する場合、EndpointConfigurationコマンドのパラメータは複製されないEndpointIdを除いてModifyConnectionの正常パラメータに含まれています。 EndpointConfigurationコマンドは、カプセル化されたNotificationRequestコマンドと共にカプセル化することができます。"
    },
    {
      "indent": 3,
      "text": "The encapsulated EndpointConfiguration command shares the fate of the ModifyConnection command. If the ModifyConnection is rejected, the EndpointConfiguration is not executed.",
      "ja": "カプセル化されたEndpointConfigurationコマンドを共有ModifyConnectionコマンドの運命。 ModifyConnectionが拒否された場合、EndpointConfigurationは実行されません。"
    },
    {
      "indent": 3,
      "text": "ReturnCode is a parameter returned by the gateway. It indicates the outcome of the command and consists of an integer number optionally followed by commentary.",
      "ja": "RETURNCODEゲートウェイによって返されるパラメータです。これは、コマンドの結果を示し、必要に応じて解説続く整数から成ります。"
    },
    {
      "indent": 3,
      "text": "PackageList is a list of supported packages that MAY be included with error code 518 (unsupported package).",
      "ja": "パッケージリストは、エラーコード518（サポートされていないパッケージ）に含まれるかもしれサポートパッケージのリストです。"
    },
    {
      "indent": 0,
      "text": "2.3.7 DeleteConnection (from the Call Agent)",
      "section_title": true,
      "ja": "2.3.7 DeleteConnection（コールエージェントから）"
    },
    {
      "indent": 3,
      "text": "This command is used to terminate a connection. As a side effect, it collects statistics on the execution of the connection.",
      "ja": "このコマンドは、接続を終了するために使用されます。副作用として、それは、接続の実行に関する統計情報を収集します。"
    },
    {
      "indent": 9,
      "text": "ReturnCode,\nConnectionParameters,\n[PackageList]\n<-- DeleteConnection(CallId,\n                     EndpointId,\n                     ConnectionId,\n                     [NotifiedEntity,]\n                     [Encapsulated NotificationRequest,]\n                     [Encapsulated EndpointConfiguration])",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The endpoint identifier, in this form of the DeleteConnection command, SHALL be fully qualified. Wildcard conventions SHALL NOT be used.",
      "ja": "エンドポイント識別子は、DeleteConnectionコマンドのこの形で、完全に修飾されなければなりません。ワイルドカードの規則を使用してはなりません。"
    },
    {
      "indent": 3,
      "text": "The ConnectionId identifies the connection to be deleted. The CallId used when the connection was created is included as well.",
      "ja": "ConnectionIdは、削除する接続を識別する。接続が作成されたときCallIdも同様に含まれている使用しました。"
    },
    {
      "indent": 3,
      "text": "The NotifiedEntity parameter, if present, defines the new \"notified entity\" for the endpoint.",
      "ja": "NotifiedEntityパラメータは、存在する場合、エンドポイントに対する新しい「通知実体」を定義します。"
    },
    {
      "indent": 3,
      "text": "In the case of IP multicast, connections can be deleted individually and independently. However, in the unicast case where a connection has two ends, a DeleteConnection command has to be sent to both gateways involved in the connection. After the connection has been deleted, media streams previously supported by the connection are no longer available. Any media packets received for the old connection are simply discarded and no new media packets for the stream are sent.",
      "ja": "IPマルチキャストの場合は、接続が個別に独立して削除することができます。しかし、接続は2つの端部を有し、ユニキャストの場合に、DeleteConnectionコマンドは、接続に関与する両方のゲートウェイに送信されなければなりません。接続が削除された後、以前の接続でサポートされているメディアストリームが使用できなくなります。古い接続のために受信したメディアパケットは単に破棄され、ストリームのための新しいメディアパケットが送信されません。"
    },
    {
      "indent": 3,
      "text": "After the connection has been deleted, any loopback that has been requested for the connection must be cancelled (unless the endpoint has another connection requesting loopback).",
      "ja": "接続が削除された後（エンドポイントがループバックを要求する別の接続を持っていない限り）、接続のために要求されている任意のループバックはキャンセルしなければなりません。"
    },
    {
      "indent": 3,
      "text": "In response to the DeleteConnection command, the gateway returns a list of connection parameters that describe statistics for the connection.",
      "ja": "DeleteConnectionコマンドに応答して、ゲートウェイは、接続の統計情報を記述する接続パラメータのリストを返します。"
    },
    {
      "indent": 3,
      "text": "When the connection was for an Internet media stream, these parameters are:",
      "ja": "接続はインターネットメディアストリームのためだった場合は、これらのパラメータは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "Number of packets sent:",
      "ja": "送信されたパケットの数："
    },
    {
      "indent": 6,
      "text": "The total number of media packets transmitted by the sender since starting transmission on this connection. In the case of RTP, the count is not reset if the sender changes its synchronization source identifier (SSRC, as defined in RTP), for example as a result of a ModifyConnection command. The value is zero if the connection was always set in \"receive only\" mode and no signals were applied to the connection.",
      "ja": "この接続で送信を開始するので、送信者によって送信されたメディアパケットの総数。 （RTPで定義されるように、SSRC）送信者がModifyConnectionコマンドの結果として、例えば、その同期ソース識別子を変更した場合、RTPの場合、カウントはリセットされません。接続が常にモードと全く信号が接続に適用されませんでした「のみを受信」に設定された場合、この値はゼロです。"
    },
    {
      "indent": 3,
      "text": "Number of octets sent:",
      "ja": "送信されたオクテットの数："
    },
    {
      "indent": 6,
      "text": "The total number of payload octets (i.e., not including header or padding) transmitted in media packets by the sender since starting transmission on this connection. In the case of RTP, the count is not reset if the sender changes its SSRC identifier, for example as a result of a ModifyConnection command. The value is zero if the connection was always set in \"receive only\" mode and no signals were applied to the connection.",
      "ja": "この接続で送信を開始するので、送信者によってメディアパケットで送信（即ち、ヘッダやパディングを含まない）ペイロードのオクテットの総数。送信者がModifyConnectionコマンドの結果として、例えば、そのSSRC識別子を変更した場合、RTPの場合、カウントはリセットされません。接続が常にモードと全く信号が接続に適用されませんでした「のみを受信」に設定された場合、この値はゼロです。"
    },
    {
      "indent": 3,
      "text": "Number of packets received:",
      "ja": "受信したパケットの数："
    },
    {
      "indent": 6,
      "text": "The total number of media packets received by the sender since starting reception on this connection. In the case of RTP, the count includes packets received from different SSRC, if the sender used several values. The value is zero if the connection was always set in \"send only\" mode.",
      "ja": "この接続で受信を開始するので、送信者によって受信されたメディアパケットの総数。 RTPの場合、カウントは送信者がいくつかの値を使用した場合、パケットは、異なるSSRCから受信含みます。接続は常にモード「のみを送信する」に設定された場合、値はゼロです。"
    },
    {
      "indent": 3,
      "text": "Number of octets received:",
      "ja": "受信したオクテット数："
    },
    {
      "indent": 6,
      "text": "The total number of payload octets (i.e., not including header, e.g., RTP, or padding) transmitted in media packets by the sender since starting transmission on this connection. In the case of RTP, the count includes packets received from different SSRC, if the sender used several values. The value is zero if the connection was always set in \"send only\" mode.",
      "ja": "ペイロードのオクテットの総数（すなわち、例えばヘッダ、RTP、又はパディングを含まない）この接続で送信を開始するので、送信者によってメディアパケットで送信します。 RTPの場合、カウントは送信者がいくつかの値を使用した場合、パケットは、異なるSSRCから受信含みます。接続は常にモード「のみを送信する」に設定された場合、値はゼロです。"
    },
    {
      "indent": 3,
      "text": "Number of packets lost:",
      "ja": "失われたパケットの数："
    },
    {
      "indent": 6,
      "text": "The total number of media packets that have been lost since the beginning of reception. This number is defined to be the number of packets expected less the number of packets actually received, where the number of packets received includes any which are late or duplicates. For RTP, the count includes packets received from different SSRC, if the sender used several values. Thus packets that arrive late are not counted as lost, and the loss may be negative if there are duplicates. The count includes packets received from different SSRC, if the sender used several values. The number of packets expected is defined to be the extended last sequence number received, as defined next, less the initial sequence number received. The count includes packets received from different SSRC, if the sender used several values. The value is zero if the connection was always set in \"send only\" mode.",
      "ja": "レセプションの始まり以来、失われたメディアパケットの合計数。この数は、パケットの数が遅いまたは重複であるいずれかを含む受信実際に受信したパケットのより少ない数を、予想されるパケットの数であると定義されます。 RTPの場合、カウントは、送信者がいくつかの値を使用した場合、別のSSRCから受信したパケットが含まれています。従って遅く到着するパケットが失われたとしてカウントされず、重複がある場合の損失は負であってもよいです。カウントは、送信者がいくつかの値を使用した場合、別のSSRCから受信したパケットが含まれています。予想されるパケットの数が拡張最後のシーケンス番号であると定義される次の定義として、受信した、より少ない初期シーケンス番号は、受信されました。カウントは、送信者がいくつかの値を使用した場合、別のSSRCから受信したパケットが含まれています。接続は常にモード「のみを送信する」に設定された場合、値はゼロです。"
    },
    {
      "indent": 3,
      "text": "Interarrival jitter:",
      "ja": "interarrivalジッタ："
    },
    {
      "indent": 6,
      "text": "An estimate of the statistical variance of the media packet interarrival time measured in milliseconds and expressed as an unsigned integer. For RTP, the interarrival jitter J is defined to be the mean deviation (smoothed absolute value) of the difference D in packet spacing at the receiver compared to the sender for a pair of packets. Detailed computation algorithms are found in RFC 1889. The count includes packets received from different SSRC, if the sender used several values. The value is zero if the connection was always set in \"send only\" mode.",
      "ja": "メディアパケット到着間隔時間の統計的分散の推定値は、ミリ秒単位で測定され、符号なし整数として表さ。 RTPのために、到着間ジッタJはパケットの一対の送信者と比較して、受信機におけるパケット間隔の差Dの平均偏差（平滑化された絶対値）であると定義されます。詳細な計算アルゴリズムは、カウントは、送信者がいくつかの値を使用した場合、パケットは、異なるSSRCから受信含むRFC 1889に見出されます。接続は常にモード「のみを送信する」に設定された場合、値はゼロです。"
    },
    {
      "indent": 3,
      "text": "Average transmission delay:",
      "ja": "平均伝送遅延："
    },
    {
      "indent": 6,
      "text": "An estimate of the network latency, expressed in milliseconds. For RTP, this is the average value of the difference between the NTP timestamp indicated by the senders of the RTCP messages and the NTP timestamp of the receivers, measured when the messages are received. The average is obtained by summing all the estimates, then dividing by the number of RTCP messages that have been received. When the gateway's clock is not synchronized by NTP, the latency value can be computed as one half of the round trip delay, as measured through RTCP. When the gateway cannot compute the one way delay or the round trip delay, the parameter conveys a null value.",
      "ja": "ネットワーク遅延の推定値は、ミリ秒単位で表しました。 RTPの場合、これはRTCPメッセージとメッセージを受信したときに測定された受信機のNTPタイムスタンプの送信者によって示されるNTPタイムスタンプの間の差の平均値です。平均は、受信されたRTCPメッセージの数で割ること、次いで、すべての推定値を合計することによって得られます。ゲートウェイのクロックがNTPで同期されていない場合は、レイテンシ値は、RTCPを通じて測定されるように、ラウンドトリップ遅延の半分として計算することができます。ゲートウェイは一方向遅延又は往復遅延を計算することができない場合、パラメータは、ヌル値を搬送します。"
    },
    {
      "indent": 3,
      "text": "For a detailed definition of these variables, refer to RFC 1889.",
      "ja": "これらの変数の詳細な定義については、RFC 1889を参照してください。"
    },
    {
      "indent": 3,
      "text": "When the connection was set up over a LOCAL interconnect, the meaning of these parameters is defined as follows:",
      "ja": "接続はローカル配線の上に設置された場合は、次のように、これらのパラメータの意味は定義されています。"
    },
    {
      "indent": 3,
      "text": "Number of packets sent: Not significant - MAY be omitted.",
      "ja": "送信されたパケットの数：重要ではありませんが - 省略されるかもしれません。"
    },
    {
      "indent": 3,
      "text": "Number of octets sent: The total number of payload octets transmitted over the local connection.",
      "ja": "送信されたオクテットの数：ローカル接続を介して送信されるペイロードオクテットの総数。"
    },
    {
      "indent": 3,
      "text": "Number of packets received: Not significant - MAY be omitted.",
      "ja": "受信したパケットの数：重要ではありませんが - 省略されるかもしれません。"
    },
    {
      "indent": 3,
      "text": "Number of octets received: The total number of payload octets received over the connection.",
      "ja": "オクテットの受信数：接続を介して受信したペイロードオクテットの総数。"
    },
    {
      "indent": 3,
      "text": "Number of packets lost: Not significant - MAY be omitted. A value of zero is assumed.",
      "ja": "失われたパケットの数：重要ではありませんが - 省略されるかもしれません。ゼロの値が想定されます。"
    },
    {
      "indent": 3,
      "text": "Interarrival jitter: Not significant - MAY be omitted. A value of zero is assumed.",
      "ja": "interarrivalジッタ：重要ではありませんが - 省略されるかもしれません。ゼロの値が想定されます。"
    },
    {
      "indent": 3,
      "text": "Average transmission delay: Not significant - MAY be omitted. A value of zero is assumed.",
      "ja": "平均伝送遅延：重要ではありませんが - 省略されるかもしれません。ゼロの値が想定されます。"
    },
    {
      "indent": 3,
      "text": "The set of connection parameters can be extended. Also, the meaning may be further defined by other types of networks which MAY furthermore elect to not return all, or even any, of the above specified parameters.",
      "ja": "接続パラメータのセットを拡張することができます。また、意味はさらに、さらに、上記指定されたパラメータのすべてを返す、あるいは任意しないことを選択することができる他のタイプのネットワークによって定義されてもよいです。"
    },
    {
      "indent": 3,
      "text": "The command may optionally contain an encapsulated Notification Request command, in which case a RequestIdentifier parameter MUST be present, as well as, optionally, other parameters of the NotificationRequest with the exception of the EndpointId, which is not replicated. The encapsulated NotificationRequest is executed simultaneously with the deletion of the connection. For example, when a user hang-up is notified, the gateway should be instructed to delete the connection and to start looking for an off-hook event.",
      "ja": "コマンドは、必要に応じてRequestIdentifierパラメータが存在しなければならない場合にカプセル化された通知要求コマンド、ならびに複製されないEndpointIdを除いてNotificationRequestの必要に応じて、他のパラメータを含んでいてもよいです。カプセル化されたNotificationRequestは、接続の削除と同時に実行されます。例えば、ユーザがハングアップが通知されたときに、ゲートウェイが接続を削除すると、オフフックイベントを探し始めるように指示されなければなりません。"
    },
    {
      "indent": 3,
      "text": "This can be accomplished in a single DeleteConnection command, by also transmitting the RequestedEvents parameters, for the off-hook event, and an empty SignalRequests parameter.",
      "ja": "これは、オフフックイベント、及び空SignalRequestsパラメータに、また、RequestedEventsパラメータを送信することにより、単一DeleteConnectionコマンドで達成することができます。"
    },
    {
      "indent": 3,
      "text": "When these parameters are present, the DeleteConnection and the NotificationRequest must be synchronized, which means that both MUST be accepted, or both MUST be refused.",
      "ja": "これらのパラメータは存在している場合は、[接続を削除し、通知要求は、両方が受け入れられなければなら、あるいはその両方を拒否しなければならないことを意味し、同期させる必要があります。"
    },
    {
      "indent": 3,
      "text": "The command may carry an encapsulated EndpointConfiguration command, that will apply to the same endpoint. When this command is present, the parameters of the EndpointConfiguration command are included with the normal parameters of the DeleteConnection with the exception of the EndpointId, which is not replicated. The EndpointConfiguration command may be encapsulated together with an encapsulated NotificationRequest command.",
      "ja": "コマンドは、同じエンドポイントに適用されるカプセル化されたEndpointConfigurationコマンドを搬送することができます。このコマンドが存在する場合、EndpointConfigurationコマンドのパラメータは複製されないEndpointIdを除いてDeleteConnectionの通常のパラメータに含まれています。 EndpointConfigurationコマンドは、カプセル化されたNotificationRequestコマンドと共にカプセル化することができます。"
    },
    {
      "indent": 3,
      "text": "The encapsulated EndpointConfiguration command shares the fate of the DeleteConnection command. If the DeleteConnection is rejected, the EndpointConfiguration is not executed.",
      "ja": "カプセル化されたEndpointConfigurationコマンドを共有DeleteConnectionコマンドの運命。 DeleteConnectionが拒否された場合、EndpointConfigurationは実行されません。"
    },
    {
      "indent": 3,
      "text": "ReturnCode is a parameter returned by the gateway. It indicates the outcome of the command and consists of an integer number optionally followed by commentary.",
      "ja": "RETURNCODEゲートウェイによって返されるパラメータです。これは、コマンドの結果を示し、必要に応じて解説続く整数から成ります。"
    },
    {
      "indent": 3,
      "text": "PackageList is a list of supported packages that MAY be included with error code 518 (unsupported package).",
      "ja": "パッケージリストは、エラーコード518（サポートされていないパッケージ）に含まれるかもしれサポートパッケージのリストです。"
    },
    {
      "indent": 0,
      "text": "2.3.8 DeleteConnection (from the gateway)",
      "section_title": true,
      "ja": "2.3.8 DeleteConnection（ゲートウェイから）"
    },
    {
      "indent": 3,
      "text": "In some rare circumstances, a gateway may have to clear a connection, for example because it has lost the resource associated with the connection, or because it has detected that the endpoint no longer is capable or willing to send or receive media. The gateway may then terminate the connection by using a variant of the DeleteConnection command:",
      "ja": "いくつかのまれな状況では、ゲートウェイは、接続に関連付けられたリソースを失ったため、またはエンドポイントがもはや可能またはメディアを送信または受信する意思があることが検出されなかったため、例えば、接続をクリアする必要があります。ゲートウェイは、次に、DeleteConnectionコマンドのバリアントを使用して接続を終了することができます。"
    },
    {
      "indent": 9,
      "text": "ReturnCode,\n[PackageList]\n<-- DeleteConnection(CallId,\n                     EndpointId,\n                     ConnectionId,\n                     ReasonCode,\n                     Connection-parameters)",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The EndpointId, in this form of the DeleteConnection command, MUST be fully qualified. Wildcard conventions MUST NOT be used.",
      "ja": "EndpointIdは、DeleteConnectionコマンドのこの形式では、完全修飾しなければなりません。ワイルドカードの規則を使用してはいけません。"
    },
    {
      "indent": 3,
      "text": "The ReasonCode is a text string starting with a numeric reason code and optionally followed by a descriptive text string. The reason code indicates the cause of the DeleteConnection. A list of reason codes can be found in Section 2.5.",
      "ja": "reasonCodeは、数値理由コードで始まる文字列であり、必要に応じて説明テキスト文字列が続きます。理由コードは、DeleteConnectionの原因を示します。理由コードのリストは、セクション2.5に記載されています。"
    },
    {
      "indent": 3,
      "text": "In addition to the call, endpoint and connection identifiers, the gateway will also send the connection parameters that would have been returned to the Call Agent in response to a DeleteConnection command.",
      "ja": "コール、エンドポイントとの接続識別子に加えて、ゲートウェイはDeleteConnectionコマンドに応答してコール・エージェントに返却されていた接続パラメータを送信します。"
    },
    {
      "indent": 3,
      "text": "ReturnCode is a parameter returned by the Call Agent. It indicates the outcome of the command and consists of an integer number optionally followed by commentary.",
      "ja": "RETURNCODEは、コールエージェントによって返されるパラメータです。これは、コマンドの結果を示し、必要に応じて解説続く整数から成ります。"
    },
    {
      "indent": 3,
      "text": "PackageList is a list of supported packages that MAY be included with error code 518 (unsupported package).",
      "ja": "パッケージリストは、エラーコード518（サポートされていないパッケージ）に含まれるかもしれサポートパッケージのリストです。"
    },
    {
      "indent": 3,
      "text": "Note that use of this command is generally discouraged and should only be done as a last resort. If a connection can be sustained, deletion of it should be left to the discretion of the Call Agent which is in a far better position to make intelligent decisions in this area.",
      "ja": "このコマンドの使用は一般的に推奨されかつ最後の手段としてのみ行われるべきであることに注意してください。接続が維持できる場合は、それを削除するには、この分野での知的な意思決定を行うためにはるかに良い位置にあるコールエージェントの裁量に委ねられるべき。"
    },
    {
      "indent": 0,
      "text": "2.3.9 DeleteConnection (multiple connections from the Call Agent)",
      "section_title": true,
      "ja": "2.3.9 DeleteConnection（コール・エージェントからの複数の接続）"
    },
    {
      "indent": 3,
      "text": "A variation of the DeleteConnection function can be used by the Call Agent to delete multiple connections at the same time. Note that encapsulating other commands with this variation of the DeleteConnection command is not permitted. The command can be used to delete all connections that relate to a Call for an endpoint:",
      "ja": "DeleteConnection機能の変化は、同時に複数の接続を削除するには、コールエージェントで使用することができます。 DeleteConnectionコマンドのこの変化に他のコマンドをカプセル化が許可されていないことに注意してください。コマンドは、エンドポイントのコールに関連するすべての接続を削除するために使用することができます。"
    },
    {
      "indent": 9,
      "text": "ReturnCode,\n[PackageList]\n<-- DeleteConnection(CallId,\n                     EndpointId)",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The EndpointId, in this form of the DeleteConnection command, MUST NOT use the \"any of\" wildcard. All connections for the endpoint(s) with the CallId specified will be deleted. Note that the command will still succeed if there were no connections with the CallId specified, as long as the EndpointId was valid. However, if the EndpointId is invalid, the command will fail. The command does not return any individual statistics or call parameters.",
      "ja": "EndpointIdは、DeleteConnectionコマンドのこの形式では、ワイルドカード「のいずれかを」使用してはなりません。指定されたCallIdとエンドポイント（複数可）のためのすべての接続が削除されます。限りEndpointIdが有効であったように、指定されたCallIdとは接続がない場合、コマンドはまだ成功することに注意してください。 EndpointIdが無効の場合は、コマンドは失敗します。コマンドは、任意の個々の統計や呼び出しパラメータを返しません。"
    },
    {
      "indent": 3,
      "text": "It can also be used to delete all connections that terminate in a given endpoint:",
      "ja": "また、特定のエンドポイントで終了するすべての接続を削除するために使用することができます。"
    },
    {
      "indent": 9,
      "text": "ReturnCode,\n[PackageList]\n<-- DeleteConnection(EndpointId)",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The EndpointId, in this form of the DeleteConnection command, MUST NOT use the \"any of\" wildcard. Again, the command succeeds even if there were no connections on the endpoint(s).",
      "ja": "EndpointIdは、DeleteConnectionコマンドのこの形式では、ワイルドカード「のいずれかを」使用してはなりません。ここでも、コマンドは、エンドポイント（複数可）には接続がなかった場合でも成功します。"
    },
    {
      "indent": 3,
      "text": "Finally, Call Agents can take advantage of the hierarchical structure\nof endpoint names to delete all the connections that belong to a\ngroup of endpoints.  In this case, the \"local name\" component of the\nEndpointId will be specified using the \"all of\" wildcarding\nconvention.  The \"any of\" convention SHALL NOT be used.  For example,\nif endpoint names are structured as the combination of a physical\ninterface name and a circuit number, as in \"X35V3+A4/13\", the Call\nAgent may replace the circuit number by the \"all of\" wild card\ncharacter \"*\", as in \"X35V3+A4/*\".  This \"wildcard\" command instructs\nthe gateway to delete all the connections that were attached to\ncircuits connected to the physical interface \"X35V3+A4\".",
      "raw": true
    },
    {
      "indent": 3,
      "text": "After all the connections have been deleted, any loopback that has been requested for the connections MUST be cancelled by the gateway.",
      "ja": "すべての接続が削除された後、接続のために要求された任意のループバックは、ゲートウェイによってキャンセルされなければなりません。"
    },
    {
      "indent": 3,
      "text": "This command does not return any individual statistics or call parameters.",
      "ja": "このコマンドは、任意の個々の統計や呼び出しパラメータを返しません。"
    },
    {
      "indent": 3,
      "text": "ReturnCode is a parameter returned by the gateway. It indicates the outcome of the command and consists of an integer number optionally followed by commentary.",
      "ja": "RETURNCODEゲートウェイによって返されるパラメータです。これは、コマンドの結果を示し、必要に応じて解説続く整数から成ります。"
    },
    {
      "indent": 3,
      "text": "PackageList is a list of supported packages that MAY be included with error code 518 (unsupported package).",
      "ja": "パッケージリストは、エラーコード518（サポートされていないパッケージ）に含まれるかもしれサポートパッケージのリストです。"
    },
    {
      "indent": 0,
      "text": "2.3.10 AuditEndpoint",
      "section_title": true,
      "ja": "2.3.10 AuditEndpoint"
    },
    {
      "indent": 3,
      "text": "The AuditEndPoint command can be used by the Call Agent to find out the status of a given endpoint.",
      "ja": "AuditEndPointコマンドは、特定のエンドポイントの状態を検出するときにコールエージェントで使用することができます。"
    },
    {
      "indent": 9,
      "text": "ReturnCode,\nEndPointIdList,|{\n[RequestedEvents,]\n[QuarantineHandling,]\n[DigitMap,]\n[SignalRequests,]\n[RequestIdentifier,]\n[NotifiedEntity,]\n[ConnectionIdentifiers,]\n[DetectEvents,]\n[ObservedEvents,]\n[EventStates,]\n[BearerInformation,]\n[RestartMethod,]\n[RestartDelay,]\n[ReasonCode,]\n[MaxMGCPDatagram,]\n[Capabilities]}\n[PackageList]\n<-- AuditEndPoint(EndpointId,\n                  [RequestedInfo])",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The EndpointId identifies the endpoint(s) being audited. The \"any of\" wildcard convention MUST NOT be used.",
      "ja": "EndpointIdは、エンドポイント（複数の）監査対象を識別する。ワイルドカード大会「のいずれかが」使用してはいけません。"
    },
    {
      "indent": 3,
      "text": "The EndpointId identifies the endpoint(s) being audited. The \"all of\" wildcard convention can be used to start auditing of a group of endpoints (regardless of their service-state). If this convention is used, the gateway SHALL return the list of endpoint identifiers that match the wildcard in the EndPointIdList parameter, which is simply one or more SpecificEndpointIds (each supplied separately). In the case where the \"all of\" wildcard is used, RequestedInfo SHOULD NOT be included (if it is included, it MUST be ignored). Note that the use of the \"all of\" wildcard can potentially generate a large EndPointIdList. If the resulting EndPointIdList is considered too large, the gateway returns an error (error code 533 - response too large, is RECOMMENDED).",
      "ja": "EndpointIdは、エンドポイント（複数の）監査対象を識別する。 「全ての」ワイルドカード規則は、（関係なくサービス状態の）エンドポイントのグループの監査を開始するために使用することができます。この規則を使用する場合、ゲートウェイは、単に一つ以上SpecificEndpointIds（各々が別々に供給される）であるEndPointIdListパラメータにワイルドカードに一致するエンドポイント識別子のリストを返します。 （それが含まれている場合、それは無視しなければなりません、）ワイルドカード「のすべて」を使用する場合には、RequestedInfoは含めるべきではありません。ワイルドカード「の全てが」潜在的に大きなEndPointIdListを生成することができますを使用することに注意してください。得EndPointIdListが大きすぎると考えられる場合、ゲートウェイはエラーを返し（エラーコード533  - 大きすぎる応答を、推奨）。"
    },
    {
      "indent": 3,
      "text": "When a non-wildcard EndpointId is specified, the (possibly empty) RequestedInfo parameter describes the information that is requested for the EndpointId specified. The following endpoint info can be audited with this command:",
      "ja": "非ワイルドカードEndpointIdが指定されている場合、（おそらく空の）RequestedInfoパラメータが指定されたEndpointIdのために要求される情報を記述する。次のエンドポイントの情報は、このコマンドを使用して監査することができます。"
    },
    {
      "indent": 6,
      "text": "RequestedEvents, DigitMap, SignalRequests, RequestIdentifier, QuarantineHandling, NotifiedEntity, ConnectionIdentifiers, DetectEvents, ObservedEvents, EventStates, BearerInformation, RestartMethod, RestartDelay, ReasonCode, PackageList, MaxMGCPDatagram, and Capabilities.",
      "ja": "RequestedEvents、DigitMap、SignalRequests、RequestIdentifier、QuarantineHandling、NotifiedEntity、ConnectionIdentifiers、DetectEvents、ObservedEvents、EventStates、BearerInformation、RestartMethod、RestartDelay、reasonCodeは、パッケージリスト、MaxMGCPDatagram、および機能。"
    },
    {
      "indent": 3,
      "text": "The list may be extended by extension parameters. The response will in turn include information about each of the items for which auditing info was requested. Supported parameters with empty values MUST always be returned. However, if an endpoint is queried about a parameter it does not understand, the endpoint MUST NOT generate an error; instead the parameter MUST be omitted from the response:",
      "ja": "リストには、拡張パラメータによって拡張することができます。応答は、順番に、監査情報を要求された項目のそれぞれについての情報が含まれます。空の値を持つサポートされているパラメータは、常に返さなければなりません。エンドポイントが、それは理解していないパラメータについて質問された場合には、エンドポイントは、エラーを発生させてはいけません。代わりに、パラメータは、レスポンスから省略しなければなりません。"
    },
    {
      "indent": 3,
      "text": "* RequestedEvents: The current value of RequestedEvents the endpoint is using including the action(s) and event parameters associated with each event - if no actions are included, the default action is assumed. Persistent events are included in the list. If an embedded NotificationRequest is active, the RequestedEvents will reflect the events requested in the embedded NotificationRequest, not any surrounding RequestedEvents (whether embedded or not).",
      "ja": "* RequestedEvents：エンドポイントが各イベントに関連付けられたアクション（複数可）、イベントパラメータを含む使用されるRequestedEventsの現在値 - 何のアクションが含まれていない場合、デフォルトのアクションが想定されます。永続的なイベントは、リストに含まれています。埋め込まれたNotificationRequestがアクティブである場合、RequestedEventsは、埋め込まれたNotificationRequestに要求されたイベントではなく、任意の周囲のRequestedEvents（埋め込まれたか否か）を反映します。"
    },
    {
      "indent": 3,
      "text": "* DigitMap: The digit map the endpoint is currently using. The parameter will be empty if the endpoint does not have a digit map.",
      "ja": "* DigitMap：エンドポイントが現在使用している桁のマップ。エンドポイントがケタマップを持っていない場合、パラメータは空になります。"
    },
    {
      "indent": 3,
      "text": "* SignalRequests: A list of the; Time-Out signals that are currently active, On/Off signals that are currently \"on\" for the endpoint (with or without parameter), and any pending Brief signals. Time-Out signals that have timed-out, and currently playing Brief signals are not included. Any signal parameters included in the original SignalRequests will be included.",
      "ja": "* SignalRequests：のリスト。現在アクティブなタイムアウト信号、オン/オフ（パラメータを伴うまたは伴わない）エンドポイントの「上に」現在の信号、および保留中の簡単な信号に。タイムアウトタイムアウトした信号と、現在再生中の簡単な信号が含まれていません。オリジナルSignalRequestsに含まれる任意の信号パラメータが含まれます。"
    },
    {
      "indent": 3,
      "text": "* RequestIdentifier: The RequestIdentifier for the last NotificationRequest received by this endpoint (includes NotificationRequests encapsulated in other commands). If no NotificationRequest has been received since reboot/restart, the value zero will be returned.",
      "ja": "* RequestIdentifier：このエンドポイントによって受信された最後のNotificationRequestためRequestIdentifier（他のコマンドの中にカプセル化NotificationRequestsを含みます）。何NotificationRequestは、再起動/再起動してから受信されていない場合、値はゼロが返されます。"
    },
    {
      "indent": 3,
      "text": "* QuarantineHandling: The QuarantineHandling for the last NotificationRequest received by this endpoint. If QuarantineHandling was not included, or no notification request has been received, the default values will be returned.",
      "ja": "* QuarantineHandling：このエンドポイントで受信された最後のNotificationRequestのためQuarantineHandling。 QuarantineHandlingが含まれていなかった、あるいは全く通知要求を受信して​​いない場合は、デフォルト値が返されます。"
    },
    {
      "indent": 3,
      "text": "* DetectEvents: The value of the most recently received DetectEvents parameter plus any persistent events implemented by the endpoint. If no DetectEvents parameter has been received, the (possibly empty) list only includes persistent events.",
      "ja": "* DetectEvents：最も最近受信DetectEventsパラメータの値を加えたエンドポイントによって実装される任意の永続的なイベント。何DetectEventsパラメータを受信して​​いない場合は、（おそらく空の）リストには、永続的なイベントを含んでいます。"
    },
    {
      "indent": 3,
      "text": "* NotifiedEntity: The current \"notified entity\" for the endpoint.",
      "ja": "* NotifiedEntity：エンドポイントの現在の「通知の実体」。"
    },
    {
      "indent": 3,
      "text": "* ConnectionIdentifiers: The list of ConnectionIdentifiers for all connections that currently exist for the specified endpoint.",
      "ja": "* ConnectionIdentifiers：現在、指定されたエンドポイントのために存在するすべての接続のためのConnectionIdentifiersのリスト。"
    },
    {
      "indent": 3,
      "text": "* ObservedEvents: The current list of observed events for the endpoint.",
      "ja": "* ObservedEvents：エンドポイントの観察されたイベントの現在のリスト。"
    },
    {
      "indent": 3,
      "text": "* EventStates: For events that have auditable states associated with them, the event corresponding to the state the endpoint is in, e.g., off-hook if the endpoint is off-hook. Note that the definition of the individual events will state if the event in question has an auditable state associated with it.",
      "ja": "* EventStates：エンドポイントがオフフックである場合は、それらに関連付けられた監査可能な状態を有するイベントでは、状態に対応するイベントがエンドポイントがオフフック、例えば、です。問題のイベントは、それに関連する監査可能な状態を持っている場合は、個々のイベントの定義は状態になることに注意してください。"
    },
    {
      "indent": 3,
      "text": "* BearerInformation: The value of the last received BearerInformation parameter for this endpoint (this includes the case where BearerInformation was provisioned). The parameter will be empty if the endpoint has not received a BearerInformation parameter and a value was also not provisioned.",
      "ja": "* BearerInformation：このエンドポイントの最後に受信BearerInformationパラメータの値（これはBearerInformationがプロビジョニングされた場合を含みます）。エンドポイントがBearerInformationパラメータを受信して​​いないと値も準備されていなかった場合は、パラメータは空になります。"
    },
    {
      "indent": 3,
      "text": "* RestartMethod: \"restart\" if the endpoint is in-service and operation is normal, or if the endpoint is in the process of becoming in-service (a non-zero RestartDelay will indicate the latter). Otherwise, the value of the restart method parameter in the last RestartInProgress command issued (or should have been issued) by the endpoint. Note that a \"disconnected\" endpoint will thus only report \"disconnected\" as long as it actually is disconnected, and \"restart\" will be reported once it is no longer disconnected. Similarly, \"cancel-graceful\" will not be reported, but \"graceful\" might (see Section 4.4.5 for further details).",
      "ja": "* RestartMethod：エンドポイントがインサービスおよび動作である場合に「再起動」とは、正常であるか、またはエンドポイントがインサービスになる過程にある場合（非ゼロRestartDelayは、後者が表示されます）。それ以外の場合は、最後に発行されたRestartInProgressコマンドで再起動メソッドのパラメータの値がエンドポイントによって（または発行されているはずです）。それはもはや切断されたら、「切断」のエンドポイントは、このようにだけレポートが「切断」であれば、実際に切断され、そして「再起動」として報告されませんので注意してください。同様に、「キャンセル-優美」は報告されませんが、「優雅」かもしれない（詳細は4.4.5項を参照してください）。"
    },
    {
      "indent": 3,
      "text": "* RestartDelay: The value of the restart delay parameter if a RestartInProgress command was to be issued by the endpoint at the time of this response, or zero if the command would not include this parameter.",
      "ja": "* RestartDelay：RestartInProgressコマンドは、コマンドは、このパラメータを指定しない場合は、この応答の時間、またはゼロでエンドポイントによって発行されることになっていた場合は、再起動遅延パラメータの値。"
    },
    {
      "indent": 3,
      "text": "* ReasonCode: The value of the ReasonCode parameter in the last RestartInProgress or DeleteConnection command issued by the gateway for the endpoint, or the special value 000 if the endpoint's state is normal.",
      "ja": "* reasonCodeは：エンドポイントの状態が正常であれば、エンドポイントのゲートウェイ、または特別な値000によって発行された最後のRestartInProgressまたはDeleteConnectionコマンドでreasonCodeはパラメータの値。"
    },
    {
      "indent": 3,
      "text": "* PackageList: The packages supported by the endpoint including package version numbers. For backwards compatibility, support for the parameter is OPTIONAL although implementations with package versions higher than zero SHOULD support it.",
      "ja": "*パッケージリスト：パッケージのバージョン番号を含むエンドポイントでサポートされているパッケージ。ゼロよりもパッケージのバージョンと実装がそれをサポートすべきであるが、後方互換性のために、パラメータのサポートはオプションです。"
    },
    {
      "indent": 3,
      "text": "* MaxMGCPDatagram: The maximum size of an MGCP datagram in bytes that can be received by the endpoint (see Section 3.5.4). The value excludes any lower layer overhead. For backwards compatibility, support for this parameter is OPTIONAL. The default maximum MGCP datagram size SHOULD be assumed if a value is not returned.",
      "ja": "* MaxMGCPDatagram：エンドポイントによって受信することができるバイト数MGCPデータグラムの最大サイズ（セクション3.5.4を参照）。値は、任意の下層オーバーヘッドを排除します。下位互換性のため、このパラメータのサポートはオプションです。値が返されない場合、デフォルトの最大MGCPデータグラムサイズが想定されるべきです。"
    },
    {
      "indent": 3,
      "text": "* Capabilities: The capabilities for the endpoint similar to the LocalConnectionOptions parameter and including packages and connection modes. Extensions MAY be included as well. If any unknown capabilities are reported, they MUST simply be ignored. If there is a need to specify that some parameters, such as e.g., silence suppression, are only compatible with some codecs, then the gateway MUST return several capability sets, each of which may include:",
      "ja": "*機能：LocalConnectionOptionsパラメータに似たエンドポイントの機能とパッケージとの接続モードを含みます。拡張機能も同様に含まれるかもしれません。どんな未知の能力が報告された場合、彼らは単に無視しなければなりません。このような、例えば、無音抑制などのいくつかのパラメータは、いくつかのコーデックのみに対応していることを指定する必要がある場合、ゲートウェイはその各々が含んでいてもよい、いくつかの機能セットを返さなければなりません。"
    },
    {
      "indent": 5,
      "text": "- Compression Algorithm: A list of supported codecs. The rest of the parameters in the capability set will apply to all codecs specified in this list.",
      "ja": " - 圧縮アルゴリズム：サポートされているコーデックのリスト。能力セットにおける残りのパラメータは、このリストで指定されたすべてのコーデックに適用されます。"
    },
    {
      "indent": 5,
      "text": "- Packetization Period: A single value or a range may be specified.",
      "ja": " - パケット期間：単一の値または範囲を指定することができます。"
    },
    {
      "indent": 5,
      "text": "- Bandwidth: A single value or a range corresponding to the range for packetization periods may be specified (assuming no silence suppression).",
      "ja": " - 帯域幅：単一の値またはパケット化期間の範囲に対応する範囲（無音抑制を想定していない）が指定されてもよいです。"
    },
    {
      "indent": 5,
      "text": "- Echo Cancellation: Whether echo cancellation is supported or not for the endpoint.",
      "ja": " - エコーキャンセル：エコーキャンセルがエンドポイントでサポートされているかどうか。"
    },
    {
      "indent": 5,
      "text": "- Silence Suppression: Whether silence suppression is supported or not.",
      "ja": " - 無音抑止：無音圧縮がサポートされているかどうか。"
    },
    {
      "indent": 5,
      "text": "- Gain Control: Whether gain control is supported or not.",
      "ja": " - ゲインコントロール：ゲインコントロールがサポートされているかどうか。"
    },
    {
      "indent": 5,
      "text": "- Type of Service: Whether type of service is supported or not.",
      "ja": " - サービスの種類：サービスの種類がサポートされているかどうか。"
    },
    {
      "indent": 5,
      "text": "- Resource Reservation: Whether resource reservation is supported or not.",
      "ja": " - 資源予約：リソース予約がサポートされているかどうか。"
    },
    {
      "indent": 5,
      "text": "- Security: Whether media encryption is supported or not.",
      "ja": " - セキュリティ：メディア暗号化がサポートされているかどうか。"
    },
    {
      "indent": 5,
      "text": "- Type of network: The type(s) of network supported.",
      "ja": " - ネットワークの種類：サポートされているネットワークのタイプ（複数可）。"
    },
    {
      "indent": 5,
      "text": "- Packages: A list of packages supported. The first package in the list will be the default package.",
      "ja": " - パッケージ：サポートされているパッケージのリスト。リストの最初のパッケージは、デフォルトのパッケージになります。"
    },
    {
      "indent": 5,
      "text": "- Modes: A list of supported connection modes.",
      "ja": " - モード：サポートされている接続モードのリスト。"
    },
    {
      "indent": 3,
      "text": "The Call Agent may then decide to use the AuditConnection command to obtain further information about the connections.",
      "ja": "コールエージェントはその後、接続に関するさらなる情報を得るためにAuditConnectionコマンドを使用することもできます。"
    },
    {
      "indent": 3,
      "text": "If no info was requested and the EndpointId refers to a valid endpoint (in-service or not), the gateway simply returns a positive acknowledgement.",
      "ja": "何の情報が要求されていないとEndpointIdが有効なエンドポイント（サービス中かどうか）を指していた場合、ゲートウェイは、単純に肯定応答を返します。"
    },
    {
      "indent": 3,
      "text": "ReturnCode is a parameter returned by the gateway. It indicates the outcome of the command and consists of an integer number optionally followed by commentary.",
      "ja": "RETURNCODEゲートウェイによって返されるパラメータです。これは、コマンドの結果を示し、必要に応じて解説続く整数から成ります。"
    },
    {
      "indent": 3,
      "text": "Note that PackageList MAY also be included with error code 518 (unsupported package).",
      "ja": "パッケージリストは、エラーコード518（サポートされていないパッケージ）に含まれていてもよいです。"
    },
    {
      "indent": 0,
      "text": "2.3.11 AuditConnection",
      "section_title": true,
      "ja": "2.3.11監査接続"
    },
    {
      "indent": 3,
      "text": "The AuditConnection command can be used by the Call Agent to retrieve the parameters attached to a connection.",
      "ja": "AuditConnectionコマンドは、接続に接続パラメータを取得するためにコールエージェントで使用することができます。"
    },
    {
      "indent": 9,
      "text": "ReturnCode,\n[CallId,]\n[NotifiedEntity,]\n[LocalConnectionOptions,]\n[Mode,]\n[RemoteConnectionDescriptor,]\n[LocalConnectionDescriptor,]\n[ConnectionParameters,]\n[PackageList]\n<-- AuditConnection(EndpointId,\n                    ConnectionId,\n                    RequestedInfo)",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The EndpointId parameter specifies the endpoint that handles the connection. The wildcard conventions SHALL NOT be used.",
      "ja": "EndpointIdのパラメータは、接続を処理するエンドポイントを指定します。ワイルドカードの規則を使用してはなりません。"
    },
    {
      "indent": 3,
      "text": "The ConnectionId parameter is the identifier of the audited connection, within the context of the specified endpoint.",
      "ja": "ConnectionIdパラメータは、指定されたエンドポイントのコンテキスト内で、監査対象の接続の識別子です。"
    },
    {
      "indent": 3,
      "text": "The (possibly empty) RequestedInfo describes the information that is requested for the ConnectionId within the EndpointId specified. The following connection info can be audited with this command:",
      "ja": "（おそらく空の）RequestedInfoは、指定されたEndpointId内ConnectionIdのために要求される情報を記述する。次の接続情報は、このコマンドで監査することができます。"
    },
    {
      "indent": 6,
      "text": "CallId, NotifiedEntity, LocalConnectionOptions, Mode, RemoteConnectionDescriptor, LocalConnectionDescriptor, ConnectionParameters",
      "ja": "CallId、NotifiedEntity、LocalConnectionOptions、モード、RemoteConnectionDescriptor、LocalConnectionDescriptor、ConnectionParameters"
    },
    {
      "indent": 3,
      "text": "The AuditConnection response will in turn include information about each of the items auditing info was requested for:",
      "ja": "AuditConnection応答は、順番に情報を監査の各項目についての情報を含めるために要求されただろう。"
    },
    {
      "indent": 3,
      "text": "* CallId, the CallId for the call the connection belongs to.",
      "ja": "* CallId、接続が属するコールのためCallId。"
    },
    {
      "indent": 3,
      "text": "* NotifiedEntity, the current \"notified entity\" for the Connection. Note this is the same as the \"notified entity\" for the endpoint (included here for backwards compatibility).",
      "ja": "* NotifiedEntity、接続のための現在の「通知の実体」。これは、（後方互換性のためにここに含まれています）エンドポイントのための「通知実体」と同じであることに注意してください。"
    },
    {
      "indent": 3,
      "text": "* LocalConnectionOptions, the most recent LocalConnectionOptions parameters that was actually supplied for the connection (omitting LocalConnectionOptions from a command thus does not change this value). Note that default parameters omitted from the most recent LocalConnectionOptions will not be included. LocalConnectionOptions that retain their value across ModifyConnection commands and which have been included in a previous command for the connection are also included, regardless of whether they were supplied in the most recent LocalConnectionOptions or not.",
      "ja": "* LocalConnectionOptionsは、実際の接続のために提供された最新のLocalConnectionOptionsパラメータが（この値を変更しませんので、コマンドからLocalConnectionOptionsを省略します）。最新のLocalConnectionOptionsから省略時のデフォルトのパラメータが含まれないことに注意してください。 ModifyConnectionコマンド間でその値を保持し、LocalConnectionOptionsもかかわらず、彼らは最新のLocalConnectionOptionsかで供給されたかどうかの、含まれている接続のための前のコマンドに含まれています。"
    },
    {
      "indent": 3,
      "text": "* Mode, the current mode of the connection.",
      "ja": "*モード、接続の現在のモード。"
    },
    {
      "indent": 3,
      "text": "* RemoteConnectionDescriptor, the RemoteConnectionDescriptor that was supplied to the gateway for the connection.",
      "ja": "* RemoteConnectionDescriptor、接続のためのゲートウェイに供給したRemoteConnectionDescriptor。"
    },
    {
      "indent": 3,
      "text": "* LocalConnectionDescriptor, the LocalConnectionDescriptor the gateway supplied for the connection.",
      "ja": "* LocalConnectionDescriptor、LocalConnectionDescriptor接続のために供給されるゲートウェイ。"
    },
    {
      "indent": 3,
      "text": "* ConnectionParameters, the current values of the connection parameters for the connection.",
      "ja": "* ConnectionParameters、接続のための接続パラメータの現在の値。"
    },
    {
      "indent": 3,
      "text": "If no info was requested and the EndpointId is valid, the gateway simply checks that the connection exists, and if so returns a positive acknowledgement. Note, that by definition, the endpoint must be in-service for this to happen, as out-of-service endpoints do not have any connections.",
      "ja": "何の情報が要求されていないとEndpointIdが有効でいた場合、ゲートウェイは、単に接続が存在することを確認し、その場合は、肯定応答を返します。アウトオブサービスのエンドポイントは、すべての接続を持っていないような定義により、エンドポイントは、サービス中これを実現するためでなければならないことに、注意してください。"
    },
    {
      "indent": 3,
      "text": "ReturnCode is a parameter returned by the gateway. It indicates the outcome of the command and consists of an integer number optionally followed by commentary.",
      "ja": "RETURNCODEゲートウェイによって返されるパラメータです。これは、コマンドの結果を示し、必要に応じて解説続く整数から成ります。"
    },
    {
      "indent": 3,
      "text": "PackageList is a list of supported packages that MAY be included with error code 518 (unsupported package).",
      "ja": "パッケージリストは、エラーコード518（サポートされていないパッケージ）に含まれるかもしれサポートパッケージのリストです。"
    },
    {
      "indent": 0,
      "text": "2.3.12 RestartInProgress",
      "section_title": true,
      "ja": "2.3.12 RestartInProgress"
    },
    {
      "indent": 3,
      "text": "The RestartInProgress command is used by the gateway to signal that an endpoint, or a group of endpoints, is put in-service or out-of-service.",
      "ja": "RestartInProgressコマンドは、エンドポイントまたはエンドポイントのグループは、サービスまたはアウトオブサービス置かれることを知らせるためにゲートウェイによって使用されます。"
    },
    {
      "indent": 9,
      "text": "ReturnCode,\n[NotifiedEntity,]\n[PackageList]\n<-- RestartInProgress(EndPointId,\n                      RestartMethod,\n                      [RestartDelay,]\n                      [ReasonCode])",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The EndPointId identifies the endpoint(s) that are put in-service or out-of-service. The \"all of\" wildcard convention may be used to apply the command to a group of endpoints managed by the same Call Agent, such as for example all endpoints that are attached to a specified interface, or even all endpoints that are attached to a given gateway. The \"any of\" wildcard convention SHALL NOT be used.",
      "ja": "EndPointIdは、サービスまたはアウトオブサービスに置かれるエンドポイント（複数可）を識別します。ワイルドカード規則「のすべて」は、指定されたに接続されている指定されたインターフェイスに接続されているすべてのエンドポイント、あるいはすべてのエンドポイントは、例えば、同じCallエージェントによって管理されるエンドポイントのグループにコマンドを適用するために使用することができますゲートウェイ。ワイルドカード大会「のいずれかが」使用してはなりません。"
    },
    {
      "indent": 3,
      "text": "The RestartMethod parameter specifies the type of restart. The following values have been defined:",
      "ja": "RestartMethodパラメータは、再起動のタイプを指定します。以下の値が定義されています。"
    },
    {
      "indent": 3,
      "text": "* A \"graceful\" restart method indicates that the specified endpoints will be taken out-of-service after the specified delay. The established connections are not yet affected, but the Call Agent SHOULD refrain from establishing new connections, and SHOULD try to gracefully tear down the existing connections.",
      "ja": "*「優雅な」再起動メソッドは、指定されたエンドポイントが指定された遅延の後にアウトオブサービスとられることを示しています。確立された接続はまだ影響を受けませんが、コールエージェントは、新たな接続を確立控えるべきである、と優雅に既存の接続を切断するようにしてください。"
    },
    {
      "indent": 3,
      "text": "* A \"forced\" restart method indicates that the specified endpoints are taken abruptly out-of-service. The established connections, if any, are lost.",
      "ja": "*「強制」の再起動メソッドは、指定されたエンドポイントがアウトオブサービス突然取られていることを示しています。確立された接続は、もしあれば、失われます。"
    },
    {
      "indent": 3,
      "text": "* A \"restart\" method indicates that service will be restored on the endpoints after the specified \"restart delay\", i.e., the endpoints will be in-service. The endpoints are in their clean default state and there are no connections that are currently established on the endpoints.",
      "ja": "* A「再起動」メソッドは、サービスが指定された「再起動遅延」後のエンドポイントに復元されることを示し、すなわち、エンドポイントがインサービスであろう。エンドポイントは、そのクリーンなデフォルト状態にあり、現在のエンドポイント上で確立されている何の接続がありません。"
    },
    {
      "indent": 3,
      "text": "* A \"disconnected\" method indicates that the endpoint has become disconnected and is now trying to establish connectivity (see Section 4.4.7). The \"restart delay\" specifies the number of seconds the endpoint has been disconnected. Established connections are not affected.",
      "ja": "*「切断」の方法は、エンドポイントが切断され、現在（4.4.7項を参照）接続を確立しようとしていることを示しています。 「再起動遅延は、」エンドポイントが切断された秒数を指定します。確立された接続は影響を受けません。"
    },
    {
      "indent": 3,
      "text": "* A \"cancel-graceful\" method indicates that a gateway is canceling a previously issued \"graceful\" restart command. The endpoints are still in-service.",
      "ja": "*「キャンセル-優雅な」方法は、ゲートウェイが以前に発行された「優雅」restartコマンドをキャンセルしていることを示しています。エンドポイントは、サービス中残っています。"
    },
    {
      "indent": 3,
      "text": "The list of restart methods may be extended.",
      "ja": "再起動方法のリストを延長することができます。"
    },
    {
      "indent": 3,
      "text": "The optional \"restart delay\" parameter is expressed as a number of seconds. If the number is absent, the delay value MUST be considered null (i.e., zero). In the case of the \"graceful\" method, a null delay indicates that the Call Agent SHOULD simply wait for the natural termination of the existing connections, without establishing new connections. The restart delay is always considered null in the case of the \"forced\" and \"cancel-graceful\" methods, and hence the \"restart delay\" parameter MUST NOT be used with these restart methods. When the gateway sends a \"restart\" or \"graceful\"",
      "ja": "オプションの「再起動遅延」パラメータは秒数で表されます。番号が存在しない場合、遅延値はヌル（すなわち、ゼロ）と見なされなければなりません。 「優雅な」方法の場合には、ヌル遅れは、Callエージェントは、単に新しい接続を確立せずに、既存の接続の自然の終了を待つ必要があることを示します。再起動遅延は常に「強制」と「キャンセル-優雅な」方法の場合、ヌルとみなされ、したがって、「再起動遅延」パラメータは、これらの再起動方法を使用してはいけません。ゲートウェイは、「再起動」または「優雅」を送信した場合"
    },
    {
      "indent": 3,
      "text": "RestartInProgress message with a non-zero restart delay, the gateway SHOULD send an updated RestartInProgress message after the \"restart delay\" has passed.",
      "ja": "「再起動遅延は、」経過した後に非ゼロの再起動遅延でRestartInProgressメッセージは、ゲートウェイが更新さRestartInProgressメッセージを送るべきです。"
    },
    {
      "indent": 3,
      "text": "A restart delay of null for the \"restart\" method indicates that service has already been restored. This typically will occur after gateway startup/reboot. To mitigate the effects of a gateway IP address change as a result of a re-boot, the Call Agent MAY wish to either flush its DNS cache for the gateway's domain name or resolve the gateway's domain name by querying the DNS regardless of the TTL of a current DNS resource record for the restarted gateway.",
      "ja": "「再起動」メソッドにnullの再起動遅延は、サービスが既に復元されていることを示しています。これは通常、ゲートウェイの起動/再起動後に発生します。再起動の結果として、ゲートウェイIPアドレスの変更の影響を軽減するために、コールエージェントは、ゲートウェイのドメイン名のためのDNSキャッシュをフラッシュかに関係なく、TTLのDNSを照会することにより、ゲートウェイのドメイン名を解決するのいずれかに望むことができます再開ゲートウェイの現在のDNSリソースレコード。"
    },
    {
      "indent": 3,
      "text": "The optional reason code parameter indicates the cause of the restart.",
      "ja": "オプションの理由コードパラメータは、再起動の原因を示します。"
    },
    {
      "indent": 3,
      "text": "Gateways SHOULD send a \"graceful\" or \"forced\" RestartInProgress message (for the relevant endpoints) as a courtesy to the Call Agent when they are taken out-of-service, e.g., by being shutdown, or taken out-of-service by a network management system, however the Call Agent cannot rely on always receiving such a message. Gateways MUST send a \"restart\" RestartInProgress message (for the relevant endpoints) with a null delay to their Call Agent when they are back in-service according to the restart procedure specified in Section 4.4.6 - Call Agents can rely on receiving this message. Also, gateways MUST send a \"disconnected\" RestartInProgress message (for the relevant endpoints) to their current \"notified entity\" according to the \"disconnected\" procedure specified in Section 4.4.7.",
      "ja": "ゲートウェイは、それらがアウトオブサービス取られたときにシャットダウンされることによって、例えば、コールエージェントへの礼儀として（関連エンドポイント用）、「優雅」または「強制」RestartInProgressメッセージを送ったり、でアウトオブサービス取らすべきですネットワーク管理システム、しかし、コールエージェントは、常にこのようなメッセージを受け取るに頼ることはできません。彼らは、セクション4.4.6で指定された再起動の手順に従ってバックインサービスのときゲートウェイがそのコールエージェントにヌル遅延して「再起動」RestartInProgressメッセージ（関連エンドポイント用）を送らなければなりません - このメッセージを受信するエージェントが頼ることができるコール。また、ゲートウェイはセクション4.4.7で指定された「切断」の手順に従って、現在の「通知された実体」に（関連エンドポイントの）「切断」RestartInProgressメッセージを送らなければなりません。"
    },
    {
      "indent": 3,
      "text": "The RestartInProgress message will be sent to the current \"notified entity\" for the EndpointId in question. It is expected that a default Call Agent, i.e., \"notified entity\", has been provisioned so that after a reboot/restart, the default Call Agent will always be the \"notified entity\" for the endpoint. Gateways SHOULD take full advantage of wild-carding to minimize the number of RestartInProgress messages generated when multiple endpoints in a gateway restart and the endpoints are managed by the same Call Agent.",
      "ja": "RestartInProgressメッセージは、問題のEndpointIdのために現在の「通知の実体」に送信されます。再起動/再起動後、デフォルトのコールエージェントは、常にエンドポイントのための「通知実体」になるように、デフォルトのコール・エージェント、すなわち、「通知実体は」、プロビジョニングされていることが期待されます。ゲートウェイは、野生カーディング複数のゲートウェイの再起動でエンドポイントとエンドポイントが同じCallエージェントによって管理されているときに生成RestartInProgressメッセージの数を最小限にするための最大限に活用すべきです。"
    },
    {
      "indent": 3,
      "text": "ReturnCode is a parameter returned by the Call Agent. It indicates the outcome of the command and consists of an integer number optionally followed by commentary.",
      "ja": "RETURNCODEは、コールエージェントによって返されるパラメータです。これは、コマンドの結果を示し、必要に応じて解説続く整数から成ります。"
    },
    {
      "indent": 3,
      "text": "A NotifiedEntity may additionally be returned with the response to the RestartInProgress from the Call Agent - this SHOULD normally only be done in response to \"restart\" or \"disconnected\" (see also Section 4.4.6 and 4.4.7):",
      "ja": "NotifiedEntityは、さらにコールエージェントからRestartInProgressへの応答で返されることがあります - これは通常のみ、「再起動」または「切断」（セクション4.4.6と4.4.7を参照）に応じて行われるべきです："
    },
    {
      "indent": 3,
      "text": "* If the response indicated success (return code 200 - transaction executed), the restart in question completed successfully, and the NotifiedEntity returned is the new \"notified entity\" for the endpoint(s).",
      "ja": "応答が成功（戻りコード200  - 実行トランザクション）を示した場合*、問題の再起動が正常に完了し、返されたNotifiedEntityは、エンドポイント（複数可）のための新しい「通知実体」です。"
    },
    {
      "indent": 3,
      "text": "* If the response from the Call Agent indicated an error, the restart in question did not complete successfully. If a NotifiedEntity parameter was included in the response returned, it specifies a new \"notified entity\" for the endpoint(s), which MUST be used when retrying the restart in question (as a new transaction). This SHOULD only be done with error code 521 (endpoint redirected).",
      "ja": "*コール・エージェントからの応答がエラーを示した場合、問題の再起動が正常に完了しませんでした。 NotifiedEntityパラメータが返された応答に含まれていた場合、それは時に再試行（新しいトランザクションなど）問題の再起動を使用しなければならないエンドポイント（複数可）、のための新しい「通知実体」を指定します。これは、エラーコード521（エンドポイントがリダイレクト）を用いて行うべきです。"
    },
    {
      "indent": 3,
      "text": "Note that the above behavior for returning a NotifiedEntity in the response is only defined for RestartInProgress responses and SHOULD NOT be done for responses to other commands. Any other behavior is undefined.",
      "ja": "応答でNotifiedEntityを返すための上記の動作だけRestartInProgress応答のために定義されており、他のコマンドへの応答のために行われるべきではないことに注意してください。その他の動作は未定義です。"
    },
    {
      "indent": 3,
      "text": "PackageList is a list of supported packages that MAY be included with error code 518 (unsupported package).",
      "ja": "パッケージリストは、エラーコード518（サポートされていないパッケージ）に含まれるかもしれサポートパッケージのリストです。"
    },
    {
      "indent": 0,
      "text": "2.4 Return Codes and Error Codes",
      "section_title": true,
      "ja": "2.4リターンコードとエラーコード"
    },
    {
      "indent": 3,
      "text": "All MGCP commands are acknowledged. The acknowledgment carries a return code, which indicates the status of the command. The return code is an integer number, for which the following ranges of values have been defined:",
      "ja": "すべてのMGCPコマンドが確認されます。肯定応答は、コマンドのステータスを示すリターンコードを運びます。戻りコードは、値の次の範囲が定義されているために整数です。"
    },
    {
      "indent": 3,
      "text": "* values between 000 and 099 indicate a response acknowledgement",
      "ja": "* 000と099の間の値は、応答確認を示します"
    },
    {
      "indent": 3,
      "text": "* values between 100 and 199 indicate a provisional response",
      "ja": "* 100と199の間の値は、暫定的な応答を示します"
    },
    {
      "indent": 3,
      "text": "* values between 200 and 299 indicate a successful completion",
      "ja": "* 200と299の間の値が正常に完了したことを示しています"
    },
    {
      "indent": 3,
      "text": "* values between 400 and 499 indicate a transient error",
      "ja": "* 400と499の間の値は一時的エラーを示します"
    },
    {
      "indent": 3,
      "text": "* values between 500 and 599 indicate a permanent error",
      "ja": "* 500と599の間の値は、永続的なエラーを示します"
    },
    {
      "indent": 3,
      "text": "* values between 800 and 899 are package specific response codes.",
      "ja": "* 800と899の間の値は、パッケージの特定の応答コードです。"
    },
    {
      "indent": 3,
      "text": "A broad description of transient errors (4XX error codes) versus permanent errors (5XX error codes) is as follows:",
      "ja": "次のように永久的なエラー（5XXエラーコード）に対する一時的なエラー（4XXエラーコード）の広範な説明があります。"
    },
    {
      "indent": 3,
      "text": "* If a Call Agent receives a transient error, there is the expectation of the possibility that a future similar request will be honored by the endpoint. In some cases, this may require some state change in the environment of the endpoint (e.g., hook state as in the case of error codes 401 or 402; resource availability as in the case of error code 403, or bandwidth availability as in the case of error code 404).",
      "ja": "コールエージェントは一時的なエラーを受信した場合*、今後の同様の要求がエンドポイントで表彰されます可能性が期待されています。いくつかの場合において、これは、エンドポイントの環境におけるいくつかの状態変化を必要とするかもしれない（例えば、エラーコード401または402の場合のようにフックの状態、同様にエラーコード403、または帯域幅の可用性の場合のようにリソース可用性エラーコード404）。"
    },
    {
      "indent": 3,
      "text": "* Permanent errors (error codes 500 to 599) indicate one or more permanent conditions either due to protocol error or incompatibility between the endpoint and the Call Agent, or because of some error condition over which the Call Agent has no control. Examples are protocol errors, requests for endpoint capabilities that do not exist, errors on interfaces associated with the endpoint, missing or incorrect information in the request or any number of other conditions which will simply not disappear with time.",
      "ja": "*パーマネントエラー（エラーコード599から500）は、エンドポイントとCallエージェントとの間のプロトコルエラーまたは非互換性が原因のいずれか一つ以上の永久的な状態を示す、または電話エージェントが制御できないその上、いくつかのエラー状態のため。例としては、プロトコルエラー、存在しないエンドポイント機能の要求、要求、または単に時間の経過とともに消えませんその他の条件のいずれかの数のエンドポイント、欠落または誤った情報に関連付けられたインターフェイス上のエラーです。"
    },
    {
      "indent": 3,
      "text": "The values that have been already defined are the following:",
      "ja": "すでに定義されている値は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "000 Response Acknowledgement.",
      "ja": "000レスポンス謝辞。"
    },
    {
      "indent": 3,
      "text": "100 The transaction is currently being executed. An actual completion message will follow later.",
      "ja": "100トランザクションは、現在実行されています。実際の完了メッセージが後に続きます。"
    },
    {
      "indent": 3,
      "text": "101 The transaction has been queued for execution. An actual completion message will follow later.",
      "ja": "101トランザクションは、実行のためにキューに登録されています。実際の完了メッセージが後に続きます。"
    },
    {
      "indent": 3,
      "text": "200 The requested transaction was executed normally. This return code can be used for a successful response to any command.",
      "ja": "200要求されたトランザクションが正常に実行されました。この戻りコードは、任意のコマンドに成功した応答のために使用することができます。"
    },
    {
      "indent": 3,
      "text": "250 The connection was deleted. This return code can only be used for a successful response to a DeleteConnection command.",
      "ja": "250接続が削除されました。この戻りコードは、DeleteConnectionコマンドに成功した応答のために使用することができます。"
    },
    {
      "indent": 3,
      "text": "400 The transaction could not be executed, due to some unspecified transient error.",
      "ja": "400トランザクションは、いくつかの不特定の一時的なエラーが原因で実行することができませんでした。"
    },
    {
      "indent": 3,
      "text": "401 The phone is already off hook.",
      "ja": "401電話がオフフックすでにあります。"
    },
    {
      "indent": 3,
      "text": "402 The phone is already on hook.",
      "ja": "402電話がフックにすでにあります。"
    },
    {
      "indent": 3,
      "text": "403 The transaction could not be executed, because the endpoint does not have sufficient resources at this time.",
      "ja": "エンドポイントは、この時点で十分なリソースを持っていないので、403トランザクションが、実行できませんでした。"
    },
    {
      "indent": 3,
      "text": "404 Insufficient bandwidth at this time.",
      "ja": "この時点では404が不十分な帯域幅。"
    },
    {
      "indent": 3,
      "text": "405 The transaction could not be executed, because the endpoint is \"restarting\".",
      "ja": "405トランザクションは、エンドポイントは、「再起動」されているため、実行できませんでした。"
    },
    {
      "indent": 3,
      "text": "406 Transaction time-out. The transaction did not complete in a reasonable period of time and has been aborted.",
      "ja": "406トランザクションタイムアウト。トランザクションは、合理的な期間内に完了しませんでしたし、中止されました。"
    },
    {
      "indent": 3,
      "text": "407 Transaction aborted. The transaction was aborted by some external action, e.g., a ModifyConnection command aborted by a DeleteConnection command.",
      "ja": "407トランザクションは中止します。トランザクションは、いくつかの外部アクション、DeleteConnectionコマンドで中止され、例えば、ModifyConnectionコマンドによって中止されました。"
    },
    {
      "indent": 3,
      "text": "409 The transaction could not be executed because of internal overload.",
      "ja": "409トランザクションがあるため内部の過負荷を実行することができませんでした。"
    },
    {
      "indent": 3,
      "text": "410 No endpoint available. A valid \"any of\" wildcard was used, however there was no endpoint available to satisfy the request.",
      "ja": "410なしエンドポイント。有効なワイルドカード「のいずれかが」使用された、しかし、要求を満たすために利用可能なエンドポイントがありませんでした。"
    },
    {
      "indent": 3,
      "text": "500 The transaction could not be executed, because the endpoint is unknown.",
      "ja": "エンドポイントが不明であるため、500トランザクションが、実行できませんでした。"
    },
    {
      "indent": 3,
      "text": "501 The transaction could not be executed, because the endpoint is not ready. This includes the case where the endpoint is out-of-service.",
      "ja": "エンドポイントの準備ができていないので、501トランザクションが、実行できませんでした。これは、エンドポイントがアウトオブサービスである場合も含まれます。"
    },
    {
      "indent": 3,
      "text": "502 The transaction could not be executed, because the endpoint does not have sufficient resources (permanent condition).",
      "ja": "エンドポイントが十分なリソース（永続的条件）を持っていないため、502トランザクションが、実行できませんでした。"
    },
    {
      "indent": 3,
      "text": "503 \"All of\" wildcard too complicated.",
      "ja": "503複雑すぎるワイルドカード「のすべて」。"
    },
    {
      "indent": 3,
      "text": "504 Unknown or unsupported command.",
      "ja": "504不明またはサポートされていないコマンド。"
    },
    {
      "indent": 3,
      "text": "505 Unsupported RemoteConnectionDescriptor. This SHOULD be used when one or more mandatory parameters or values in the RemoteConnectionDescriptor is not supported.",
      "ja": "505サポートされていないRemoteConnectionDescriptor。 RemoteConnectionDescriptor内の1つまたは複数の必須パラメータまたは値がサポートされていない場合に使用されるべきです。"
    },
    {
      "indent": 3,
      "text": "506 Unable to satisfy both LocalConnectionOptions and RemoteConnectionDescriptor. This SHOULD be used when the LocalConnectionOptions and RemoteConnectionDescriptor contain one or more mandatory parameters or values that conflict with each other and/or cannot be supported at the same time (except for codec negotiation failure - see error code 534).",
      "ja": "506 LocalConnectionOptionsとRemoteConnectionDescriptorを両立することができません。 LocalConnectionOptionsとRemoteConnectionDescriptorは、互いにおよび/または（ - エラーコード534を参照コーデックネゴシエーション失敗を除く）を同時にサポートすることができないとの競合一つ以上の必須パラメータまたは値を含むとき、これを使用すべきです。"
    },
    {
      "indent": 3,
      "text": "507 Unsupported functionality. Some unspecified functionality required to carry out the command is not supported. Note that several other error codes have been defined for specific areas of unsupported functionality (e.g. 508, 511, etc.), and this error code SHOULD only be used if there is no other more specific error code for the unsupported functionality.",
      "ja": "507サポートされていない機能を提供します。コマンドを実行するために必要ないくつかの不特定の機能がサポートされていません。いくつかの他のエラーコードがサポートされない機能（例えば508、511、等）の特定の領域のために定義されており、サポートされない機能のための他のより具体的なエラーコードが存在しない場合、このエラーコードにのみ使用されるべきであることに注意してください。"
    },
    {
      "indent": 3,
      "text": "508 Unknown or unsupported quarantine handling.",
      "ja": "508不明またはサポートされていない検疫取り扱い。"
    },
    {
      "indent": 3,
      "text": "509 Error in RemoteConnectionDescriptor. This SHOULD be used when there is a syntax or semantic error in the RemoteConnectionDescriptor.",
      "ja": "RemoteConnectionDescriptorで509エラーが発生しました。 RemoteConnectionDescriptorに構文または意味エラーがある場合に使用されるべきです。"
    },
    {
      "indent": 3,
      "text": "510 The transaction could not be executed, because some unspecified protocol error was detected. Automatic recovery from such an error will be very difficult, and hence this code SHOULD only be used as a last resort.",
      "ja": "いくつかの不特定のプロトコルエラーが検出されたため、510トランザクションが、実行できませんでした。このようなエラーからの自動回復は非常に困難になります、したがって、このコードは、最後の手段としてのみ使用されるべきです。"
    },
    {
      "indent": 3,
      "text": "511 The transaction could not be executed, because the command contained an unrecognized extension. This code SHOULD be used for unsupported critical parameter extensions (\"X+\").",
      "ja": "コマンドが認識されない拡張子が含まれているため511トランザクションが、実行できませんでした。このコードはサポートされていない重要なパラメータの拡張のために使用されるべきである（「X +」）。"
    },
    {
      "indent": 3,
      "text": "512 The transaction could not be executed, because the gateway is not equipped to detect one of the requested events.",
      "ja": "ゲートウェイは、要求されたイベントのいずれかを検出するために装備されていないため、512トランザクションが、実行できませんでした。"
    },
    {
      "indent": 3,
      "text": "513 The transaction could not be executed, because the gateway is not equipped to generate one of the requested signals.",
      "ja": "ゲートウェイは、要求された信号のいずれかを生成するために装備されていないため、513トランザクションが、実行できませんでした。"
    },
    {
      "indent": 3,
      "text": "514 The transaction could not be executed, because the gateway cannot send the specified announcement.",
      "ja": "ゲートウェイが指定されたアナウンスを送信することができないので、514トランザクションが、実行できませんでした。"
    },
    {
      "indent": 3,
      "text": "515 The transaction refers to an incorrect connection-id (may have been already deleted).",
      "ja": "515トランザクションが不正な接続IDを参照し（既に削除されていてもよいです）。"
    },
    {
      "indent": 3,
      "text": "516 The transaction refers to an unknown call-id, or the call-id supplied is incorrect (e.g., connection-id not associated with this call-id).",
      "ja": "516トランザクションは未知呼IDを参照し、または供給コールIDが正しくない（例えば、この呼IDに関連付けられていない接続-ID）。"
    },
    {
      "indent": 3,
      "text": "517 Unsupported or invalid mode.",
      "ja": "517サポートされていないか、または無効モード。"
    },
    {
      "indent": 3,
      "text": "518 Unsupported or unknown package. It is RECOMMENDED to include a PackageList parameter with the list of supported packages in the response, especially if the response is generated by the Call Agent.",
      "ja": "518サポートされていないか、不明なパッケージ。応答がコールエージェントによって生成された場合は特に、応答でサポートされているパッケージのリストを持つパッケージリストパラメータを含めることをお勧めします。"
    },
    {
      "indent": 3,
      "text": "519 Endpoint does not have a digit map.",
      "ja": "519エンドポイントは、ケタ地図を持っていません。"
    },
    {
      "indent": 3,
      "text": "520 The transaction could not be executed, because the endpoint is \"restarting\". In most cases this would be a transient error, in which case, error code 405 SHOULD be used instead. The error code is only included here for backwards compatibility.",
      "ja": "520トランザクションは、エンドポイントは、「再起動」されているため、実行できませんでした。ほとんどの場合、これは、その場合には、エラーコード405が代わりに使用されるべきであり、一時的なエラーであろう。エラーコードは、後方互換性のためだけにここに含まれています。"
    },
    {
      "indent": 3,
      "text": "521 Endpoint redirected to another Call Agent. The associated redirection behavior is only well-defined when this response is issued for a RestartInProgress command.",
      "ja": "521エンドポイントは、他のコールエージェントにリダイレクト。この応答がRestartInProgressコマンドのために発行されたときに関連するリダイレクトの動作は明確に定義されています。"
    },
    {
      "indent": 3,
      "text": "522 No such event or signal. The request referred to an event or signal that is not defined in the relevant package (which could be the default package).",
      "ja": "522このような事象または信号。要求は、（デフォルトのパッケージであってもよい）、関連するパッケージで定義されていないイベントまたは信号と呼びます。"
    },
    {
      "indent": 3,
      "text": "523 Unknown action or illegal combination of actions.",
      "ja": "523不明なアクションまたはアクションの不正な組み合わせ。"
    },
    {
      "indent": 3,
      "text": "524 Internal inconsistency in LocalConnectionOptions.",
      "ja": "LocalConnectionOptions 524内部矛盾。"
    },
    {
      "indent": 3,
      "text": "525 Unknown extension in LocalConnectionOptions. This code SHOULD be used for unsupported mandatory vendor extensions (\"x+\").",
      "ja": "LocalConnectionOptions 525不明な拡張子。このコードは、サポートされていない必須のベンダー拡張のために使用されるべきである（「X +」）。"
    },
    {
      "indent": 3,
      "text": "526 Insufficient bandwidth. In cases where this is a transient error, error code 404 SHOULD be used instead.",
      "ja": "526不十分な帯域幅。これは一時的なエラーである場合には、エラーコード404が代わりに使用されるべきです。"
    },
    {
      "indent": 3,
      "text": "527 Missing RemoteConnectionDescriptor.",
      "ja": "527欠落RemoteConnectionDescriptor。"
    },
    {
      "indent": 3,
      "text": "528 Incompatible protocol version.",
      "ja": "528互換性のないプロトコルバージョン。"
    },
    {
      "indent": 3,
      "text": "529 Internal hardware failure.",
      "ja": "529内部のハードウェア障害。"
    },
    {
      "indent": 3,
      "text": "530 CAS signaling protocol error.",
      "ja": "プロトコルエラーをシグナリング530のCAS。"
    },
    {
      "indent": 3,
      "text": "531 Failure of a grouping of trunks (e.g., facility failure).",
      "ja": "トランクのグループの531障害（例えば、機能不全）。"
    },
    {
      "indent": 3,
      "text": "532 Unsupported value(s) in LocalConnectionOptions.",
      "ja": "LocalConnectionOptions 532サポートされていない値（複数可）。"
    },
    {
      "indent": 3,
      "text": "533 Response too large.",
      "ja": "533レスポンスが大きすぎます。"
    },
    {
      "indent": 3,
      "text": "534 Codec negotiation failure.",
      "ja": "534コーデック交渉失敗。"
    },
    {
      "indent": 3,
      "text": "535 Packetization period not supported.",
      "ja": "535パケット化期間はサポートされていません。"
    },
    {
      "indent": 3,
      "text": "536 Unknown or unsupported RestartMethod.",
      "ja": "536不明またはサポートされていないRestartMethod。"
    },
    {
      "indent": 3,
      "text": "537 Unknown or unsupported digit map extension.",
      "ja": "537不明またはサポートされていない桁のマップの拡張機能。"
    },
    {
      "indent": 3,
      "text": "538 Event/signal parameter error (e.g., missing, erroneous, unsupported, unknown, etc.).",
      "ja": "538イベント/信号パラメータエラー（例えば、欠け、誤った、サポートされていない、未知の、等）。"
    },
    {
      "indent": 3,
      "text": "539 Invalid or unsupported command parameter. This code SHOULD only be used when the parameter is neither a package or vendor extension parameter.",
      "ja": "539無効またはサポートされていないコマンドパラメータ。パラメータは、パッケージやベンダー拡張パラメータでもないときに、このコードがのみ使用してください。"
    },
    {
      "indent": 3,
      "text": "540 Per endpoint connection limit exceeded.",
      "ja": "エンドポイントの接続制限パー540を超えました。"
    },
    {
      "indent": 3,
      "text": "541 Invalid or unsupported LocalConnectionOptions. This code SHOULD only be used when the LocalConnectionOptions is neither a package nor a vendor extension LocalConnectionOptions.",
      "ja": "541無効またはサポートされていないLocalConnectionOptions。 LocalConnectionOptionsは、パッケージやベンダー拡張LocalConnectionOptionsでもないときに、このコードがのみ使用してください。"
    },
    {
      "indent": 3,
      "text": "The set of return codes may be extended in a future version of the protocol. Implementations that receive an unknown or unsupported return code SHOULD treat the return code as follows:",
      "ja": "戻りコードのセットは、プロトコルの将来のバージョンで拡張することができます。以下のように、未知またはサポートされていないリターンコードを受け取る実装は、リターンコードを処理する必要があります。"
    },
    {
      "indent": 3,
      "text": "* Unknown 0xx code treated as 000.",
      "ja": "*不明な0XXコードは000として処理しました。"
    },
    {
      "indent": 3,
      "text": "* Unknown 1xx code treated as 100.",
      "ja": "*不明の1xxコードは100として処理しました。"
    },
    {
      "indent": 3,
      "text": "* Unknown 2xx code treated as 200.",
      "ja": "*不明の2xxコードは200として処理しました。"
    },
    {
      "indent": 3,
      "text": "* Unknown 3xx code treated as 521.",
      "ja": "*不明の3xxコードは521として処理しました。"
    },
    {
      "indent": 3,
      "text": "* Unknown 4xx code treated as 400.",
      "ja": "*不明に4xxコードは400として処理しました。"
    },
    {
      "indent": 3,
      "text": "* Unknown 5xx-9xx code treated as 510.",
      "ja": "*未知の5xx-9XXコード510として扱います。"
    },
    {
      "indent": 0,
      "text": "2.5 Reason Codes",
      "section_title": true,
      "ja": "2.5理由コード"
    },
    {
      "indent": 3,
      "text": "Reason codes are used by the gateway when deleting a connection to inform the Call Agent about the reason for deleting the connection. They may also be used in a RestartInProgress command to inform the Call Agent of the reason for the RestartInProgress.",
      "ja": "接続を削除した理由について、コールエージェントに通知するために、接続を削除するときの理由コードは、ゲートウェイで使用されています。彼らはまた、RestartInProgressの理由のコールエージェントに通知するRestartInProgressコマンドで使用することができます。"
    },
    {
      "indent": 3,
      "text": "The reason code is an integer number, and the following values have been defined:",
      "ja": "理由コードは整数であり、以下の値が定義されています。"
    },
    {
      "indent": 3,
      "text": "000 Endpoint state is normal (this code is only used in response to audit requests).",
      "ja": "000エンドポイントの状態（このコードは、監査要求に応答してのみ使用される）が正常です。"
    },
    {
      "indent": 3,
      "text": "900 Endpoint malfunctioning.",
      "ja": "900エンドポイントの誤動作。"
    },
    {
      "indent": 3,
      "text": "901 Endpoint taken out-of-service.",
      "ja": "901エンドポイントは、アウトオブサービス取ら。"
    },
    {
      "indent": 3,
      "text": "902 Loss of lower layer connectivity (e.g., downstream sync).",
      "ja": "下位層の接続（例えば、ダウンストリームシンク）902件の損失。"
    },
    {
      "indent": 3,
      "text": "903 QoS resource reservation was lost.",
      "ja": "903のQoSリソース予約が失われました。"
    },
    {
      "indent": 3,
      "text": "904 Manual intervention.",
      "ja": "904手動介入。"
    },
    {
      "indent": 3,
      "text": "905 Facility failure (e.g., DS-0 failure).",
      "ja": "905機能障害（例えば、DS-0障害）。"
    },
    {
      "indent": 3,
      "text": "The set of reason codes can be extended.",
      "ja": "理由コードのセットを拡張することができます。"
    },
    {
      "indent": 0,
      "text": "2.6 Use of Local Connection Options and Connection Descriptors",
      "section_title": true,
      "ja": "ローカル接続オプションと接続記述子の2.6を使用します"
    },
    {
      "indent": 3,
      "text": "As indicated previously, the normal sequence in setting up a bi-directional connection involves at least 3 steps:",
      "ja": "先に示したように、双方向接続をセットアップにおける通常のシーケンスは、少なくとも3つのステップを含みます："
    },
    {
      "indent": 3,
      "text": "1) The Call Agent asks the first gateway to \"create a connection\" on an endpoint. The gateway allocates resources to that connection, and responds to the command by providing a \"session description\" (referred to as its LocalConnectionDescriptor). The session description contains the information necessary for another party to send packets towards the newly created connection.",
      "ja": "1）Callエージェントは、エンドポイントに「接続を作成する」最初のゲートウェイに要求します。ゲートウェイは、その接続にリソースを割り当て、（そのLocalConnectionDescriptorと呼ぶ）、「セッション記述」を提供することによってコマンドに応答します。セッション記述は、新しく作成された接続に向けてパケットを送信するために別のパーティーのために必要な情報が含まれています。"
    },
    {
      "indent": 3,
      "text": "2) The Call Agent then asks the second gateway to \"create a connection\" on an endpoint. The command carries the \"session description\" provided by the first gateway (now referred to as the RemoteConnectionDescriptor). The gateway allocates resources to that connection, and responds to the command by providing its own \"session description\" (LocalConnectionDescriptor).",
      "ja": "2）コール・エージェントは、エンドポイントに「接続を作成」する第2のゲートウェイに要求します。コマンドは、最初のゲートウェイ（今RemoteConnectionDescriptorと呼ばれる）が提供する「セッション記述」を運びます。ゲートウェイは、その接続にリソースを割り当て、それ自身の「セッション記述」（LocalConnectionDescriptor）を提供することによってコマンドに応答します。"
    },
    {
      "indent": 3,
      "text": "3) The Call Agent uses a \"modify connection\" command to provide this second \"session description\" (now referred to as the RemoteConnectionDescriptor ) to the first endpoint. Once this is done, communication can proceed in both directions.",
      "ja": "3）コール・エージェントは、最初のエンドポイントに今RemoteConnectionDescriptorと称されるこの第二の「セッション記述を、」（）を提供するために「接続変更」コマンドを使用します。これが完了すると、通信が両方の方向に進むことができます。"
    },
    {
      "indent": 3,
      "text": "When the Call Agent issues a Create or Modify Connection command, there are thus three parameters that determine the media supported by that connection:",
      "ja": "コール・エージェントが作成または変更接続のコマンドを発行すると、その接続でサポートされているメディアを決定するため、3つのパラメータがあります。"
    },
    {
      "indent": 3,
      "text": "* LocalConnectionOptions: Supplied by the Call Agent to control the media parameters used by the gateway for the connection. When supplied, the gateway MUST conform to these media parameters until either the connection is deleted, or a ModifyConnection command with new media parameters (LocalConnectionOptions or RemoteConnectionDescriptor) is received.",
      "ja": "* LocalConnectionOptions：接続するためのゲートウェイによって使用されるメディアパラメータを制御するには、Call Agentによって付属。供給された場合、接続のいずれかが削除されるまで、ゲートウェイは、これらのメディアパラメータに適合しなければならない、または新しいメディアパラメータ（LocalConnectionOptions又はRemoteConnectionDescriptor）とModifyConnectionコマンドが受信されます。"
    },
    {
      "indent": 3,
      "text": "* RemoteConnectionDescriptor: Supplied by the Call Agent to convey the media parameters supported by the other side of the connection. When supplied, the gateway MUST conform to these media parameters until either the connection is deleted, or a ModifyConnection command with new media parameters (LocalConnectionOptions or RemoteConnectionDescriptor) is received.",
      "ja": "* RemoteConnectionDescriptor：接続の反対側でサポートされるメディアパラメータを伝えるためにコールエージェントによって付属。供給された場合、接続のいずれかが削除されるまで、ゲートウェイは、これらのメディアパラメータに適合しなければならない、または新しいメディアパラメータ（LocalConnectionOptions又はRemoteConnectionDescriptor）とModifyConnectionコマンドが受信されます。"
    },
    {
      "indent": 3,
      "text": "* LocalConnectionDescriptor: Supplied by the gateway to the Call Agent to convey the media parameters it supports for the connection. When supplied, the gateway MUST honor the media parameters until either the connection is deleted, or the gateway issues a new LocalConnectionDescriptor for that connection.",
      "ja": "* LocalConnectionDescriptor：それは接続のためにサポートしているメディアパラメータを伝えるためにコールエージェントへのゲートウェイで付属。供給されると、接続のいずれかが削除されるまで、ゲートウェイは、メディアパラメータを尊重しなければならない、またはゲートウェイは、その接続のための新しいLocalConnectionDescriptorを発行します。"
    },
    {
      "indent": 3,
      "text": "In determining which codec(s) to provide in the LocalConnectionDescriptor, there are three lists of codecs that a gateway needs to consider:",
      "ja": "LocalConnectionDescriptorに提供するために、どのコーデック（複数可）を決定する際に、ゲートウェイは考慮する必要があるコーデックの3つのリストがあります。"
    },
    {
      "indent": 3,
      "text": "* A list of codecs allowed by the LocalConnectionOptions in the current command (either explicitly by encoding method or implicitly by bandwidth and/or packetization period).",
      "ja": "*現在のコマンドでLocalConnectionOptionsによって許可されたコーデックのリスト（明示的にエンコードする方法によって、または暗黙的に帯域幅および/またはパケット化期間によります）。"
    },
    {
      "indent": 3,
      "text": "* A list of codecs in the RemoteConnectionDescriptor in the current command.",
      "ja": "*現在のコマンドでRemoteConnectionDescriptorでのコーデックのリスト。"
    },
    {
      "indent": 3,
      "text": "* An internal list of codecs that the gateway can support for the connection. A gateway MAY support one or more codecs for a given connection.",
      "ja": "*ゲートウェイが接続のためにサポートできるコーデックの内部リスト。ゲートウェイは、与えられた接続のための1つまたは複数のコーデックをサポートするかもしれません。"
    },
    {
      "indent": 3,
      "text": "Codec selection (including all relevant media parameters) can then be described by the following steps:",
      "ja": "（関連するすべてのメディアパラメータを含む）コーデックの選択は、以下のステップによって説明することができます。"
    },
    {
      "indent": 3,
      "text": "1. An approved list of codecs is formed by taking the intersection of the internal list of codecs and codecs allowed by the LocalConnectionOptions. If LocalConnectionOptions were not provided in the current command, the approved list of codecs thus contains the internal list of codecs.",
      "ja": "コーデックの1承認されたリストは、LocalConnectionOptionsで許可されたコーデックとコーデックの内部リストの交差点を取ることによって形成されます。 LocalConnectionOptionsは、現在のコマンドで提供されていない場合は、コーデックの承認済みリストは、このようにコーデックの内部リストが含まれています。"
    },
    {
      "indent": 3,
      "text": "2. If the approved list of codecs is empty, a codec negotiation failure has occurred and an error response is generated (error code 534 - codec negotiation failure, is RECOMMENDED).",
      "ja": "2.コーデックの承認されたリストが空である場合、コーデックネゴシエーション障害が発生していると、エラー応答が生成される（エラーコード534  - コーデックネゴシエーション障害が、推奨）。"
    },
    {
      "indent": 3,
      "text": "3. Otherwise, a negotiated list of codecs is formed by taking the intersection of the approved list of codecs and codecs allowed by the RemoteConnectionDescriptor. If a RemoteConnectionDescriptor was not provided in the current command, the negotiated list of codecs thus contains the approved list of codecs.",
      "ja": "3.それ以外の場合は、コーデックの交渉さリストはRemoteConnectionDescriptorで許可されたコーデックとコーデックの承認リストの交差点を取ることによって形成されます。 RemoteConnectionDescriptorは、現在のコマンドで提供されていなかった場合は、コーデックの交渉さリストは、このようにコーデックの承認済みリストが含まれています。"
    },
    {
      "indent": 3,
      "text": "4. If the negotiated list of codecs is empty, a codec negotiation failure has occurred and an error response is generated (error code 534 - codec negotiation failure, is RECOMMENDED).",
      "ja": "4.コーデックのネゴシエートリストが空の場合、コーデックネゴシエーション障害が発生していると、エラー応答が生成される（エラーコード534  - コーデックネゴシエーション障害が、推奨）。"
    },
    {
      "indent": 3,
      "text": "5. Otherwise, codec negotiation has succeeded, and the negotiated list of codecs is returned in the LocalConnectionDescriptor.",
      "ja": "5.それ以外の場合は、コーデックのネゴシエーションが成功した、とコーデックの交渉さリストはLocalConnectionDescriptorで返されます。"
    },
    {
      "indent": 3,
      "text": "Note that both LocalConnectionOptions and the RemoteConnectionDescriptor can contain a list of codecs ordered by preference. When both are supplied in the current command, the gateway MUST adhere to the preferences provided in the LocalConnectionOptions.",
      "ja": "両方LocalConnectionOptionsとRemoteConnectionDescriptorが好みで注文したコーデックのリストを含めることができることに注意してください。双方が現在のコマンドに供給されると、ゲートウェイはLocalConnectionOptionsに設けられた好みに接着しなければなりません。"
    },
    {
      "indent": 0,
      "text": "2.7 Resource Reservations",
      "section_title": true,
      "ja": "2.7リソース予約"
    },
    {
      "indent": 3,
      "text": "The gateways can be instructed to perform a reservation, for example using RSVP, on a given connection. When a reservation is needed, the call agent will specify the reservation profile to be used, which is either \"controlled load\" or \"guaranteed service\". The absence of reservation can be indicated by asking for the \"best effort\" service, which is the default value of this parameter in a CreateConnection command. For a ModifyConnection command, the default is simply to retain the current value. When reservation has been asked on a connection, the gateway will:",
      "ja": "ゲートウェイは、所与の接続に、RSVPを使用して、例えば、予約を行うように指示することができます。予約が必要な場合は、コールエージェントは「制御負荷」または「保証サービス」のいずれかである、使用される予約プロファイルを指定します。予約の不在はのCreateConnectionコマンドでこのパラメータのデフォルト値である「ベストエフォート」のサービスのために尋ねることによって示すことができます。 ModifyConnectionコマンドの場合、デフォルトは現在の値を保持するだけです。予約が接続に尋ねてきたときに、ゲートウェイは以下となります。"
    },
    {
      "indent": 3,
      "text": "* start emitting RSVP \"PATH\" messages if the connection is in \"send-only\", \"send-receive\", \"conference\", \"network loop back\" or \"network continuity test\" mode (if a suitable remote connection descriptor has been received,).",
      "ja": "適したリモート接続記述がされている場合、接続が「送信専用」、「送信・受信」、「会議」、「ネットワークループバック」または「ネットワーク導通試験」モード（である場合* RSVP「PATH」メッセージを発する開始）、受け取りました。"
    },
    {
      "indent": 3,
      "text": "* start emitting RSVP \"RESV\" messages as soon as it receives \"PATH\" messages if the connection is in \"receive-only\", \"send-receive\", \"conference\", \"network loop back\" or \"network continuity test\" mode.",
      "ja": "*とすぐに接続が「受信専用」、「送信・受信」、「会議」、「ネットワークループバック」であるか「ネットワーク導通試験」モードならば、それは「PATH」メッセージを受信すると、RSVP「RESV」メッセージを発する開始。"
    },
    {
      "indent": 3,
      "text": "The RSVP filters will be deduced from the characteristics of the connection. The RSVP resource profiles will be deduced from the connection's codecs, bandwidth and packetization period.",
      "ja": "RSVPフィルタは接続の特性から推定されます。 RSVPリソースプロフィールは接続のコーデック、帯域幅およびパケット化期間から推定されます。"
    },
    {
      "indent": 0,
      "text": "3. Media Gateway Control Protocol",
      "section_title": true,
      "ja": "3.メディアゲートウェイコントロールプロトコル"
    },
    {
      "indent": 3,
      "text": "The Media Gateway Control Protocol (MGCP) implements the media gateway control interface as a set of transactions. The transactions are composed of a command and a mandatory response. There are nine commands:",
      "ja": "メディアゲートウェイ制御プロトコル（MGCP）がトランザクションのセットとして、メディア・ゲートウェイ制御インタフェースを実装します。トランザクションは、コマンドと必須応答で構成されています。 9つのコマンドがあります。"
    },
    {
      "indent": 3,
      "text": "* EndpointConfiguration",
      "ja": "* EndpointConfiguration"
    },
    {
      "indent": 3,
      "text": "* CreateConnection",
      "ja": "*のCreateConnection"
    },
    {
      "indent": 3,
      "text": "* ModifyConnection",
      "ja": "* ModifyConnection"
    },
    {
      "indent": 3,
      "text": "* DeleteConnection",
      "ja": "* DeleteConnection"
    },
    {
      "indent": 3,
      "text": "* NotificationRequest",
      "ja": "* NotificationRequest"
    },
    {
      "indent": 3,
      "text": "* Notify",
      "ja": "*通知"
    },
    {
      "indent": 3,
      "text": "* AuditEndpoint",
      "ja": "* AuditEndpoint"
    },
    {
      "indent": 3,
      "text": "* AuditConnection",
      "ja": "*監査の接続"
    },
    {
      "indent": 3,
      "text": "* RestartInProgress",
      "ja": "* RestartInProgress"
    },
    {
      "indent": 3,
      "text": "The first five commands are sent by the Call Agent to a gateway. The Notify command is sent by the gateway to the Call Agent. The gateway may also send a DeleteConnection as defined in Section 2.3.8. The Call Agent may send either of the Audit commands to the gateway, and the gateway may send a RestartInProgress command to the Call Agent.",
      "ja": "最初の5つのコマンドは、ゲートウェイへのコールエージェントによって送信されます。通知コマンドは、コールエージェントへのゲートウェイによって送信されます。セクション2.3.8で定義されるようにゲートウェイはDeleteConnectionを送ることができます。コールエージェントは、ゲートウェイに監査のいずれかのコマンドを送信することができ、およびゲートウェイがコールエージェントにRestartInProgressコマンドを送信することができます。"
    },
    {
      "indent": 0,
      "text": "3.1 General Description",
      "section_title": true,
      "ja": "3.1一般的な説明"
    },
    {
      "indent": 3,
      "text": "All commands are composed of a Command header, optionally followed by a session description.",
      "ja": "すべてのコマンドは、必要に応じてセッション記述に続いて、コマンドヘッダで構成されています。"
    },
    {
      "indent": 3,
      "text": "All responses are composed of a Response header, optionally followed by session description information.",
      "ja": "すべての応答は、必要に応じて、セッション記述情報、続いて応答ヘッダーで構成されています。"
    },
    {
      "indent": 3,
      "text": "Headers and session descriptions are encoded as a set of text lines, separated by a carriage return and line feed character (or, optionally, a single line-feed character). The session descriptions are preceded by an empty line.",
      "ja": "ヘッダおよびセッション記述は、キャリッジ・リターンおよび改行文字（または、必要に応じて、単一の改行文字）によって分離されたテキスト行のセットとして符号化されます。セッション記述は、空行が先行しています。"
    },
    {
      "indent": 3,
      "text": "MGCP uses a transaction identifier to correlate commands and responses. The transaction identifier is encoded as a component of the command header and repeated as a component of the response header (see sections 3.2.1.2 and 3.3).",
      "ja": "MGCPは、コマンドと応答を相関させるためにトランザクション識別子を使用しています。トランザクション識別子は、コマンドヘッダの構成要素として符号化され、応答ヘッダ（セクション3.2.1.2および3.3を参照）の構成要素として繰り返されます。"
    },
    {
      "indent": 3,
      "text": "Note that an ABNF grammar for MGCP is provided in Appendix A. Commands and responses SHALL be encoded in accordance with the grammar, which, per RFC 2234, is case-insensitive except for the SDP part. Similarly, implementations SHALL be capable of decoding commands and responses that follow the grammar. Additionally, it is RECOMMENDED that implementations tolerate additional linear white space.",
      "ja": "MGCPのためのABNF文法は、付録A.コマンドに提供され、応答がRFC 2234あたり、SDPの一部を除いて、大文字と小文字を区別しないで、文法に従って符号化されることに留意されたいです。同様に、実装は文法に従う復号コマンドと応答することが可能でなければなりません。さらに、実装が追加の線形空白を容認することを推奨されます。"
    },
    {
      "indent": 3,
      "text": "Some productions allow for use of quoted strings, which can be necessary to avoid syntax problems. Where the quoted string form is used, the contents will be UTF-8 encoded [20], and the actual value provided is the unquoted string (UTF-8 encoded). Where both a quoted and unquoted string form is allowed, either form can be used provided it does not otherwise violate the grammar.",
      "ja": "いくつかの作品は、構文問題を回避するために必要とすることができる、引用符で囲まれた文字列を使用することを可能にします。引用符で囲まれた文字列形式が使用される場合、コンテンツは、UTF-8でエンコードされたであろう[20]、および提供される実際の値は、引用符で囲まれていない文字列（UTF-8でエンコードされた）です。両方の引用されたと引用符で囲まれていない文字列の形式が許可されている場合は、使用することができますいずれかの形式は、それ以外の文法に違反していない提供しました。"
    },
    {
      "indent": 3,
      "text": "In the following, we provide additional detail on the format of MGCP commands and responses.",
      "ja": "以下では、MGCPコマンドと応答の形式で追加の詳細を提供します。"
    },
    {
      "indent": 0,
      "text": "3.2 Command Header",
      "section_title": true,
      "ja": "3.2コマンドヘッダー"
    },
    {
      "indent": 3,
      "text": "The command header is composed of:",
      "ja": "コマンドヘッダは、から構成されています。"
    },
    {
      "indent": 3,
      "text": "* A command line, identifying the requested action or verb, the transaction identifier, the endpoint towards which the action is requested, and the MGCP protocol version,",
      "ja": "*コマンドライン、要求されたアクションまたは動詞を識別する、トランザクション識別子、アクションが要求されているエンドポイントに向かって、及びMGCPプロトコルバージョン、"
    },
    {
      "indent": 3,
      "text": "* A set of zero or more parameter lines, composed of a parameter name followed by a parameter value.",
      "ja": "*パラメータ値に続くパラメータ名から構成されるゼロ以上のパラメータラインのセット。"
    },
    {
      "indent": 3,
      "text": "Unless otherwise noted or dictated by other referenced standards (e.g., SDP), each component in the command header is case insensitive. This goes for verbs as well as parameters and values, and hence all comparisons MUST treat upper and lower case as well as combinations of these as being equal.",
      "ja": "特記または他の参照標準（例えば、SDP）によって決定されない限り、コマンドヘッダ内の各コンポーネントは大文字と小文字を区別しないです。これは、動詞ならびにパラメータと値についても、したがってすべての比較は等しいものとして、これらの上部および下部ケース、ならびにそれらの組合せを治療しなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.2.1 Command Line",
      "section_title": true,
      "ja": "3.2.1コマンドライン"
    },
    {
      "indent": 3,
      "text": "The command line is composed of:",
      "ja": "コマンドラインはで構成されています。"
    },
    {
      "indent": 3,
      "text": "* The name of the requested verb,",
      "ja": "*要求された動詞の名前、"
    },
    {
      "indent": 3,
      "text": "* The identification of the transaction,",
      "ja": "*トランザクションの識別、"
    },
    {
      "indent": 3,
      "text": "* The name of the endpoint(s) that are to execute the command (in notifications or restarts, the name of the endpoint(s) that is issuing the command),",
      "ja": "*コマンドを実行するようにしているエンドポイント（複数可）の名前（通知または再起動で、コマンドを発行しているエンドポイント（複数可）の名前）、"
    },
    {
      "indent": 3,
      "text": "* The protocol version.",
      "ja": "*プロトコルのバージョン。"
    },
    {
      "indent": 5,
      "text": "These four items are encoded as strings of printable ASCII characters, separated by white spaces, i.e., the ASCII space (0x20) or tabulation (0x09) characters. It is RECOMMENDED to use exactly one ASCII space separator. However, MGCP entities MUST be able to parse messages with additional white space characters.",
      "ja": "これらの4つの項目は空白、すなわち、ASCIIスペース（0x20の）または集計（0x09の）文字で区切られた、印刷可能なASCII文字の文字列として符号化されます。正確に一つのASCIIスペース区切り文字を使用することをお勧めします。しかし、MGCP実体は、追加の空白文字でメッセージを解析できなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.2.1.1 Coding of the Requested Verb",
      "section_title": true,
      "ja": "要求された動詞の3.2.1.1コーディング"
    },
    {
      "indent": 3,
      "text": "The verbs that can be requested are encoded as four letter upper or lower case ASCII codes (comparisons SHALL be case insensitive) as defined in the following table:",
      "ja": "要求することができる動詞は、以下の表で定義され（比較は大文字と小文字を区別しなければならない）4つの文字大文字または小文字のASCIIコードとして符号化されます。"
    },
    {
      "indent": 17,
      "text": " -----------------------------\n|       Verb           | Code |\n|----------------------|------|\n| EndpointConfiguration| EPCF |\n| CreateConnection     | CRCX |\n| ModifyConnection     | MDCX |\n| DeleteConnection     | DLCX |\n| NotificationRequest  | RQNT |\n| Notify               | NTFY |\n| AuditEndpoint        | AUEP |\n| AuditConnection      | AUCX |\n| RestartInProgress    | RSIP |\n -----------------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The transaction identifier is encoded as a string of up to 9 decimal digits. In the command line, it immediately follows the coding of the verb.",
      "ja": "トランザクション識別子は、最大9桁の文字列としてエンコードされます。コマンドラインでは、それはすぐに動詞のコーディングに従います。"
    },
    {
      "indent": 3,
      "text": "New verbs may be defined in further versions of the protocol. It may be necessary, for experimentation purposes, to use new verbs before they are sanctioned in a published version of this protocol. Experimental verbs MUST be identified by a four letter code starting with the letter X, such as for example XPER.",
      "ja": "新しい動詞は、プロトコルの更なるバージョンで定義されてもよいです。それは彼らがこのプロトコルの公開バージョンで認可される前に、新しい動詞を使用するために、実験の目的のために、必要になることがあります。実験動詞は、例えばXPERと同様に、文字Xで始まる4文字のコードによって識別されなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.2.1.2 Transaction Identifiers",
      "section_title": true,
      "ja": "3.2.1.2トランザクション識別子"
    },
    {
      "indent": 3,
      "text": "MGCP uses a transaction identifier to correlate commands and responses. A gateway supports two separate transaction identifier name spaces:",
      "ja": "MGCPは、コマンドと応答を相関させるためにトランザクション識別子を使用しています。ゲートウェイは、2つの別々のトランザクション識別子の名前空間をサポートしています。"
    },
    {
      "indent": 3,
      "text": "* a transaction identifier name space for sending transactions, and",
      "ja": "*トランザクション識別子名のトランザクションを送信するためのスペース、および"
    },
    {
      "indent": 3,
      "text": "* a transaction identifier name space for receiving transactions.",
      "ja": "*トランザクションを受信するためのトランザクション識別子の名前空間。"
    },
    {
      "indent": 3,
      "text": "At a minimum, transaction identifiers for commands sent to a given gateway MUST be unique for the maximum lifetime of the transactions within the collection of Call Agents that control that gateway. Thus, regardless of the sending Call Agent, gateways can always detect duplicate transactions by simply examining the transaction identifier. The coordination of these transaction identifiers between Call Agents is outside the scope of this specification though.",
      "ja": "最低でも、特定のゲートウェイに送信されたコマンドのトランザクション識別子は、そのゲートウェイを制御するコールエージェントのコレクション内のトランザクションの最大寿命のためのユニークでなければなりません。したがって、関係なく、送信コールエージェントの、ゲートウェイは常に、単にトランザクション識別子を調べることにより、重複するトランザクションを検出することができます。コールエージェントとの間にこれらのトランザクション識別子のコーディネートは、しかし、この仕様の範囲外です。"
    },
    {
      "indent": 3,
      "text": "Transaction identifiers for all commands sent from a given gateway MUST be unique for the maximum lifetime of the transactions regardless of which Call Agent the command is sent to. Thus, a Call Agent can always detect a duplicate transaction from a gateway by the combination of the domain-name of the endpoint and the transaction identifier.",
      "ja": "特定のゲートウェイから送信されたすべてのコマンドのトランザクション識別子は関係なく、そのトランザクションの最大寿命のために一意であるコマンドが送られるエージェントを呼び出す必要があります。このように、コールエージェントは、常にエンドポイントのドメイン名およびトランザクション識別子の組み合わせにより、ゲートウェイから重複したトランザクションを検出することができます。"
    },
    {
      "indent": 3,
      "text": "The transaction identifier is encoded as a string of up to nine decimal digits. In the command lines, it immediately follows the coding of the verb.",
      "ja": "トランザクション識別子は、最大9桁の文字列としてエンコードされます。コマンドラインでは、それはすぐに動詞のコーディングに従います。"
    },
    {
      "indent": 3,
      "text": "Transaction identifiers have values between 1 and 999,999,999 (both included). Transaction identifiers SHOULD NOT use any leading zeroes, although equality is based on numerical value, i.e., leading zeroes are ignored. An MGCP entity MUST NOT reuse a transaction identifier more quickly than three minutes after completion of the previous command in which the identifier was used.",
      "ja": "トランザクション識別子は、（両方を含む）1と999,999,999の間の値を有します。平等はすなわち、先頭のゼロは無視された数値に基づいているが、トランザクション識別子は、任意の先行ゼロを使用しないでください。 MGCP実体は識別子が使用された前のコマンドが完了した後に、より迅速に3分以上のトランザクション識別子を再利用してはいけません。"
    },
    {
      "indent": 0,
      "text": "3.2.1.3 Coding of the Endpoint Identifiers and Entity Names",
      "section_title": true,
      "ja": "エンドポイント識別子とエンティティ名の3.2.1.3コーディング"
    },
    {
      "indent": 3,
      "text": "The endpoint identifiers and entity names are encoded as case insensitive e-mail addresses, as defined in RFC 821, although with some syntactic restrictions on the local part of the name. Furthermore, both the local endpoint name part and the domain name part can each be up to 255 characters. In these addresses, the domain name identifies the system where the endpoint is attached, while the left side identifies a specific endpoint or entity on that system.",
      "ja": "RFC 821で定義されたエンドポイント識別子とエンティティ名は、名前のローカル部分にいくつかの構文上の制限があるが、大文字小文字を区別しない電子メールアドレスとしてエンコードされています。さらに、ローカルエンドポイント名の部分とドメイン名の部分の両方がそれぞれ255文字まで可能です。左側は、そのシステム上の特定のエンドポイントまたはエンティティを識別しながら、これらのアドレスは、ドメイン名は、エンドポイントが接続されているシステムを識別する。"
    },
    {
      "indent": 3,
      "text": "Examples of such addresses are:",
      "ja": "そのようなアドレスの例は以下のとおりです。"
    },
    {
      "indent": 3,
      "text": " ------------------------------------------------------------------\n| hrd4/56@gw23.example.net     |  Circuit number 56 in             |\n|                              |  interface \"hrd4\" of the Gateway  |\n|                              |  23 of the \"Example\" network      |\n| Call-agent@ca.example.net    |  Call Agent for the               |\n|                              |  \"example\" network                |\n| Busy-signal@ann12.example.net|  The \"busy signal\" virtual        |\n|                              |  endpoint in the announcement     |\n|                              |  server number 12.                |\n ------------------------------------------------------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The name of a notified entity is expressed with the same syntax, with the possible addition of a port number as in:",
      "ja": "通知されたエンティティの名前は、のようにポート番号の可能加えて、同じ構文で表現されます。"
    },
    {
      "indent": 6,
      "text": "Call-agent@ca.example.net:5234",
      "ja": "Call-agent@ca.example.net：5234"
    },
    {
      "indent": 3,
      "text": "In case the port number is omitted from the notified entity, the default MGCP Call Agent port (2727) MUST be used.",
      "ja": "場合は、ポート番号が通知エンティティから省略されている、デフォルトのMGCPコール・エージェントのポート（2727）が使用されなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.2.1.4 Coding of the Protocol Version",
      "section_title": true,
      "ja": "プロトコルバージョンの3.2.1.4コーディング"
    },
    {
      "indent": 3,
      "text": "The protocol version is coded as the keyword MGCP followed by a white space and the version number, and optionally followed by a profile name. The version number is composed of a major version, coded by a decimal number, a dot, and a minor version number, coded as a decimal number. The version described in this document is version 1.0.",
      "ja": "プロトコルバージョンは、ホワイトスペースおよびバージョン番号に続くキーワードMGCPとして符号化、および必要に応じてプロファイル名が続きます。バージョン番号が10進数として符号化された進数、ドット、及びマイナーバージョン番号によって符号化され、メジャーバージョンで構成されています。この文書に記載されているバージョンは、バージョン1.0です。"
    },
    {
      "indent": 3,
      "text": "The profile name, if present, is represented by white-space separated strings of visible (printable) characters extending to the end of the line. Profile names may be defined for user communities who want to apply restrictions or other profiling to MGCP.",
      "ja": "プロファイル名が存在する場合、行の終わりまで延びる可視（印刷可能）な文字のホワイトスペースで区切られた文字列で表されます。プロファイル名は、MGCPに制限や他のプロファイリングを適用するユーザーコミュニティのために定義することができます。"
    },
    {
      "indent": 3,
      "text": "In the initial messages, the version will be coded as:",
      "ja": "最初のメッセージでは、バージョンは次のようにコード化されます。"
    },
    {
      "indent": 6,
      "text": "MGCP 1.0",
      "ja": "MGCP 1.0"
    },
    {
      "indent": 3,
      "text": "An entity that receives a command with a protocol version it does not support, MUST respond with an error (error code 528 - incompatible protocol version, is RECOMMENDED). Note that this applies to unsupported profiles as well.",
      "ja": "それがサポートされていないプロトコル・バージョンを指定してコマンドを受信したエンティティは、エラーで応答しなければならない（エラーコード528  - 互換性のないプロトコルバージョン、推奨）。これは同様にサポートされていないプロファイルに適用されることに注意してください。"
    },
    {
      "indent": 0,
      "text": "3.2.2 Parameter Lines",
      "section_title": true,
      "ja": "3.2.2パラメータ行"
    },
    {
      "indent": 3,
      "text": "Parameter lines are composed of a parameter name, which in most cases is composed of one or two characters, followed by a colon, optional white space(s) and the parameter value. The parameters that can be present in commands are defined in the following table:",
      "ja": "パラメータ線はほとんどの場合、結腸、任意の空白（単数または複数）およびパラメータ値に続く一つまたは二つの文字から構成されているパラメータ名、から構成されています。コマンドで存在することができるパラメータは、次の表に定義されています。"
    },
    {
      "indent": 3,
      "text": " ------------------------------------------------------------------\n|Parameter name        | Code |  Parameter value                   |\n|----------------------|------|------------------------------------|\n|BearerInformation     |   B  |  See description (3.2.2.1).        |\n|CallId                |   C  |  See description (3.2.2.2).        |\n|Capabilities          |   A  |  See description (3.2.2.3).        |\n|ConnectionId          |   I  |  See description (3.2.2.5).        |\n|ConnectionMode        |   M  |  See description (3.2.2.6).        |\n|ConnectionParameters  |   P  |  See description (3.2.2.7).        |\n|DetectEvents          |   T  |  See description (3.2.2.8).        |\n|DigitMap              |   D  |  A text encoding of a digit map.   |\n|EventStates           |   ES |  See description (3.2.2.9).        |\n|LocalConnectionOptions|   L  |  See description (3.2.2.10).       |\n|MaxMGCPDatagram       |   MD |  See description (3.2.2.11).       |\n|NotifiedEntity        |   N  |  An identifier, in RFC 821 format, |\n|                      |      |  composed of an arbitrary string   |\n|                      |      |  and of the domain name of the     |\n|                      |      |  requesting entity, possibly com-  |\n|                      |      |  pleted by a port number, as in:   |\n|                      |      |    Call-agent@ca.example.net:5234  |\n|                      |      |  See also Section 3.2.1.3.         |\n|ObservedEvents        |   O  |  See description (3.2.2.12).       |\n|PackageList           |   PL |  See description (3.2.2.13).       |\n|QuarantineHandling    |   Q  |  See description (3.2.2.14).       |\n|ReasonCode            |   E  |  A string with a 3 digit integer   |\n|                      |      |  optionally followed by a set of   |\n|                      |      |  arbitrary characters (3.2.2.15).  |\n|RequestedEvents       |   R  |  See description (3.2.2.16).       |\n|RequestedInfo         |   F  |  See description (3.2.2.17).       |\n|RequestIdentifier     |   X  |  See description (3.2.2.18).       |\n|ResponseAck           |   K  |  See description (3.2.2.19).       |\n|RestartDelay          |   RD |  A number of seconds, encoded as   |\n|                      |      |  a decimal number.                 |\n|RestartMethod         |   RM |  See description (3.2.2.20).       |\n|SecondConnectionId    |   I2 |  Connection Id.                    |\n|SecondEndpointId      |   Z2 |  Endpoint Id.                      |\n|SignalRequests        |   S  |  See description (3.2.2.21).       |\n|SpecificEndPointId    |   Z  |  An identifier, in RFC 821 format, |\n|                      |      |  composed of an arbitrary string,  |\n|                      |      |  followed by an \"@\" followed by    |\n|                      |      |  the domain name of the gateway to |\n|                      |      |  which this endpoint is attached.  |\n|                      |      |  See also Section 3.2.1.3.         |\n|----------------------|------|------------------------------------|",
      "raw": true
    },
    {
      "indent": 3,
      "text": "|RemoteConnection-     |   RC |  Session Description.              |\n|         Descriptor   |      |                                    |\n|LocalConnection-      |   LC |  Session Description.              |\n|         Descriptor   |      |                                    |\n ------------------------------------------------------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The parameters are not necessarily present in all commands. The following table provides the association between parameters and commands. The letter M stands for mandatory, O for optional and F for forbidden. Unless otherwise specified, a parameter MUST NOT be present more than once.",
      "ja": "パラメータは、必ずしもすべてのコマンドには存在しません。以下の表は、パラメータとコマンドの間の関連付けを提供します。文字Mは禁止のためのオプションとFには必須、Oの略です。特に指定しない限り、パラメータが複数回存在してはなりません。"
    },
    {
      "indent": 3,
      "text": " ------------------------------------------------------------------\n| Parameter name      | EP | CR | MD | DL | RQ | NT | AU | AU | RS |\n|                     | CF | CX | CX | CX | NT | FY | EP | CX | IP |\n|---------------------|----|----|----|----|----|----|----|----|----|\n| BearerInformation   |  O*|  O |  O |  O |  O |  F |  F |  F |  F |\n| CallId              |  F |  M |  M |  O |  F |  F |  F |  F |  F |\n| Capabilities        |  F |  F |  F |  F |  F |  F |  F |  F |  F |\n| ConnectionId        |  F |  F |  M |  O |  F |  F |  F |  M |  F |\n| ConnectionMode      |  F |  M |  O |  F |  F |  F |  F |  F |  F |\n| Connection-         |  F |  F |  F |  O*|  F |  F |  F |  F |  F |\n|   Parameters        |    |    |    |    |    |    |    |    |    |\n| DetectEvents        |  F |  O |  O |  O |  O |  F |  F |  F |  F |\n| DigitMap            |  F |  O |  O |  O |  O |  F |  F |  F |  F |\n| EventStates         |  F |  F |  F |  F |  F |  F |  F |  F |  F |\n| LocalConnection-    |  F |  O |  O |  F |  F |  F |  F |  F |  F |\n|            Options  |    |    |    |    |    |    |    |    |    |\n| MaxMGCPDatagram     |  F |  F |  F |  F |  F |  F |  F |  F |  F |\n| NotifiedEntity      |  F |  O |  O |  O |  O |  O |  F |  F |  F |\n| ObservedEvents      |  F |  F |  F |  F |  F |  M |  F |  F |  F |\n| PackageList         |  F |  F |  F |  F |  F |  F |  F |  F |  F |\n| QuarantineHandling  |  F |  O |  O |  O |  O |  F |  F |  F |  F |\n| ReasonCode          |  F |  F |  F |  O |  F |  F |  F |  F |  O |\n| RequestedEvents     |  F |  O |  O |  O |  O*|  F |  F |  F |  F |\n| RequestIdentifier   |  F |  O*|  O*|  O*|  M |  M |  F |  F |  F |\n| RequestedInfo       |  F |  F |  F |  F |  F |  F |  O |  M |  F |\n| ResponseAck         |  O |  O |  O |  O |  O |  O |  O |  O |  O |\n| RestartDelay        |  F |  F |  F |  F |  F |  F |  F |  F |  O |\n| RestartMethod       |  F |  F |  F |  F |  F |  F |  F |  F |  M |\n| SecondConnectionId  |  F |  F |  F |  F |  F |  F |  F |  F |  F |\n| SecondEndpointId    |  F |  O |  F |  F |  F |  F |  F |  F |  F |\n| SignalRequests      |  F |  O |  O |  O |  O*|  F |  F |  F |  F |\n| SpecificEndpointId  |  F |  F |  F |  F |  F |  F |  F |  F |  F |\n|---------------------|----|----|----|----|----|----|----|----|----|\n| RemoteConnection-   |  F |  O |  O |  F |  F |  F |  F |  F |  F |\n|          Descriptor |    |    |    |    |    |    |    |    |    |\n| LocalConnection-    |  F |  F |  F |  F |  F |  F |  F |  F |  F |\n|          Descriptor |    |    |    |    |    |    |    |    |    |\n ------------------------------------------------------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Notes (*):",
      "ja": "ノート （*）："
    },
    {
      "indent": 3,
      "text": "* The BearerInformation parameter is only conditionally optional as explained in Section 2.3.2.",
      "ja": "* BearerInformationパラメータは、セクション2.3.2で説明したように条件付きでのみオプションです。"
    },
    {
      "indent": 3,
      "text": "* The RequestIdentifier parameter is optional in connection creation, modification and deletion commands, however it becomes REQUIRED if the command contains an encapsulated notification request.",
      "ja": "* RequestIdentifierパラメータは、コマンドがカプセル化された通知要求が含まれている場合しかし、それは必須となり、接続の作成、変更、削除するコマンドではオプションです。"
    },
    {
      "indent": 3,
      "text": "* The RequestedEvents and SignalRequests parameters are optional in the NotificationRequest. If these parameters are omitted the corresponding lists will be considered empty.",
      "ja": "* RequestedEventsとSignalRequestsパラメータはNotificationRequestでオプションです。これらのパラメータが省略された場合、対応するリストが空であると見なされます。"
    },
    {
      "indent": 3,
      "text": "* The ConnectionParameters parameter is only valid in a DeleteConnection request sent by the gateway.",
      "ja": "* ConnectionParametersパラメータは、ゲートウェイによって送信さDeleteConnection要求にのみ有効です。"
    },
    {
      "indent": 3,
      "text": "The set of parameters can be extended in two different ways:",
      "ja": "パラメータのセットは、2つの異なる方法で拡張することができます。"
    },
    {
      "indent": 3,
      "text": "* Package Extension Parameters (preferred)",
      "ja": "*パッケージの拡張パラメータ（優先）"
    },
    {
      "indent": 3,
      "text": "* Vendor Extension Parameters",
      "ja": "*ベンダー拡張パラメータ"
    },
    {
      "indent": 3,
      "text": "Package Extension Parameters are defined in packages which provides the following benefits:",
      "ja": "パッケージ拡張パラメータは、次のような利点を提供し、パッケージで定義されています。"
    },
    {
      "indent": 3,
      "text": "* a registration mechanism (IANA) for the package name.",
      "ja": "*パッケージ名の登録メカニズム（IANA）。"
    },
    {
      "indent": 3,
      "text": "* a separate name space for the parameters.",
      "ja": "*パラメータ用に別の名前空間。"
    },
    {
      "indent": 3,
      "text": "* a convenient grouping of the extensions.",
      "ja": "*拡張子の便利なグループ化。"
    },
    {
      "indent": 3,
      "text": "* a simple way to determine support for them through auditing.",
      "ja": "*簡単な方法は、監査を介してそれらのサポートを決定します。"
    },
    {
      "indent": 3,
      "text": "The package extension mechanism is the preferred extension method.",
      "ja": "パッケージ拡張機構は、好ましい伸長法です。"
    },
    {
      "indent": 3,
      "text": "Vendor extension parameters can be used if implementers need to experiment with new parameters, for example when developing a new application of MGCP. Vendor extension parameters MUST be identified by names that start with the string \"X-\" or \"X+\", such as for example:",
      "ja": "実装者は、MGCPの新しいアプリケーションを開発するとき、たとえば、新しいパラメータを実験する必要がある場合は、ベンダー拡張パラメータを使用することができます。ベンダー拡張パラメータは、例えば、文字列として「X-」または「X +」で始まる名前で識別されなければなりません。"
    },
    {
      "indent": 6,
      "text": "X-Flower: Daisy",
      "ja": "X-花：デイジー"
    },
    {
      "indent": 3,
      "text": "Parameter names that start with \"X+\" are critical parameter extensions. An MGCP entity that receives a critical parameter extension that it cannot understand MUST refuse to execute the command. It SHOULD respond with error code 511 (unrecognized extension).",
      "ja": "「X +」で始まるパラメータ名は、重要なパラメータの拡張です。それが理解できないという重要なパラメータの拡張を受けるMGCP実体は、コマンドを実行することを拒否しなければなりません。これは、エラーコード511（認識されていない拡張子）で応答する必要があります。"
    },
    {
      "indent": 3,
      "text": "Parameter names that start with \"X-\" are non-critical parameter extensions. An MGCP entity that receives a non-critical parameter extension that it cannot understand MUST simply ignore that parameter.",
      "ja": "「X-」で始まるパラメータ名は非重要なパラメータの拡張です。それが理解できないという非重要なパラメータの拡張を受けるMGCP実体は、単純にそのパラメータを無視しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Note that vendor extension parameters use an unmanaged name space, which implies a potential for name clashing. Vendors are consequently encouraged to include some vendor specific string, e.g., vendor name, in their vendor extensions.",
      "ja": "ベンダー拡張パラメータは、名前の激突の可能性を暗示管理されていない名前空間を使用することに注意してください。ベンダーは、結果的にそのベンダー拡張機能で一部、例えば、ベンダー固有の文字列、ベンダー名を含むように奨励されています。"
    },
    {
      "indent": 0,
      "text": "3.2.2.1 BearerInformation",
      "section_title": true,
      "ja": "3.2.2.1 BearerInformation"
    },
    {
      "indent": 3,
      "text": "The values of the bearer information are encoded as a comma separated list of attributes, which are represented by an attribute name, and possibly followed by a colon and an attribute value.",
      "ja": "ベアラ情報の値は、属性名によって表される、およびおそらく結腸及び属性値が続いている属性のカンマ区切りリストとしてエンコードされます。"
    },
    {
      "indent": 3,
      "text": "The only attribute that is defined is the \"encoding\" (code \"e\") attribute, which MUST have one of the values \"A\" (A-law) or \"mu\" (mu-law).",
      "ja": "定義されている唯一の属性は、値「A」（法則）または「MU」（μ則）のいずれかが必要「コードする」（符号「E」）の属性です。"
    },
    {
      "indent": 3,
      "text": "An example of bearer information encoding is:",
      "ja": "ベアラ情報の符号化の例です。"
    },
    {
      "indent": 6,
      "text": "B: e:mu",
      "ja": "B：E：MU"
    },
    {
      "indent": 3,
      "text": "The set of bearer information attributes may be extended through packages.",
      "ja": "ベアラ情報のセットは、パッケージまで延長することができる属性。"
    },
    {
      "indent": 0,
      "text": "3.2.2.2 CallId",
      "section_title": true,
      "ja": "3.2.2.2 CallId"
    },
    {
      "indent": 3,
      "text": "The Call Identifier is encoded as a hexadecimal string, at most 32 characters in length. Call Identifiers are compared as strings rather than numerical values.",
      "ja": "コールIDの長さは、16進数の文字列として最大で32文字にエンコードされます。コール識別子は、文字列ではなく数値として比較されます。"
    },
    {
      "indent": 0,
      "text": "3.2.2.3 Capabilities",
      "section_title": true,
      "ja": "3.2.2.3機能"
    },
    {
      "indent": 3,
      "text": "Capabilities inform the Call Agent about endpoints' capabilities when audited. The encoding of capabilities is based on the Local Connection Options encoding for the parameters that are common to both, although a different parameter line code is used (\"A\"). In addition, capabilities can also contain a list of supported packages, and a list of supported modes.",
      "ja": "監査を受けたときの能力は、エンドポイントの機能についてコールエージェントに通知します。機能の符号化は、異なるパラメータラインコードは（「A」）を用いているが、双方に共通するパラメータのローカル接続オプションの符号化に基づいています。また、機能もサポートパッケージのリスト、およびサポートされているモードのリストを含めることができます。"
    },
    {
      "indent": 3,
      "text": "The parameters used are:",
      "ja": "使用するパラメータは以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "A list of supported codecs. The following parameters will apply to all codecs specified in this list. If there is a need to specify that some parameters, such as e.g., silence suppression, are only compatible with some codecs, then the gateway will return several Capability parameters; one for each set of codecs.",
      "ja": "サポートされるコーデックのリスト。次のパラメータは、このリストで指定されたすべてのコーデックに適用されます。このような、例えば、無音抑制などのいくつかのパラメータは、いくつかのコーデックのみに対応していることを指定する必要がある場合、ゲートウェイは、いくつかの機能パラメータを戻します。コーデックのセットごとに1。"
    },
    {
      "indent": 3,
      "text": "Packetization Period: A range may be specified.",
      "ja": "パケット化周期：範囲を指定することができます。"
    },
    {
      "indent": 3,
      "text": "Bandwidth: A range corresponding to the range for packetization periods may be specified (assuming no silence suppression). If absent, the values will be deduced from the codec type.",
      "ja": "帯域幅：パケット化期間の範囲に対応する範囲（無音抑制を想定していない）が指定されてもよいです。不在の場合は、値は、コーデックタイプから推定されます。"
    },
    {
      "indent": 3,
      "text": "Echo Cancellation: \"on\" if echo cancellation is supported, \"off\" otherwise. The default is support.",
      "ja": "エコーキャンセルは：「上」エコーキャンセルは、そうでない場合は、「オフ」、サポートされている場合。デフォルトでは、サポートです。"
    },
    {
      "indent": 3,
      "text": "Silence Suppression: \"on\" if silence suppression is supported for this codec, \"off\" otherwise. The default is support.",
      "ja": "無音抑止：無音抑制がそうでない場合は、このコーデック、「オフ」のためにサポートされている場合は、「オン」。デフォルトでは、サポートです。"
    },
    {
      "indent": 3,
      "text": "Gain Control: \"0\" if gain control is not supported, all other values indicate support for gain control. The default is support.",
      "ja": "ゲインコントロール：ゲインコントロールがサポートされていない場合は「0」、他のすべての値は、利得制御のためのサポートを示します。デフォルトでは、サポートです。"
    },
    {
      "indent": 3,
      "text": "Type of Service: The value \"0\" indicates no support for type of service, all other values indicate support for type of service. The default is support.",
      "ja": "サービスの種類：値「0」は、サービスの種類はサポートがないことを示す、他のすべての値は、サービスの種類のサポートを示します。デフォルトでは、サポートです。"
    },
    {
      "indent": 3,
      "text": "Resource Reservation Service: The parameter indicates the reservation services that are supported, in addition to best effort. The value \"g\" is encoded when the gateway supports both the guaranteed and the controlled load service, \"cl\" when only the controlled load service is supported. The default is \"best effort\".",
      "ja": "資源予約サービス：パラメータはベストエフォートに加えて、サポートされている予約サービスを示します。ゲートウェイがサポートしている場合にのみ制御負荷サービスがサポートされているときに値「G」が保証され、制御ロード・サービス、「CL」の両方の符号化されています。デフォルトでは、「ベストエフォート」です。"
    },
    {
      "indent": 3,
      "text": "Encryption Key: Encoding any value indicates support for encryption. Default is no support which is implied by omitting the parameter.",
      "ja": "暗号化キー：任意の値をエンコードは、暗号化のサポートを示します。デフォルトでは、パラメータを省略することで暗示されてはサポートされません。"
    },
    {
      "indent": 3,
      "text": "Type of network: The keyword \"nt\", followed by a colon and a semicolon separated list of supported network types. This parameter is optional.",
      "ja": "ネットワークの種類：キーワード「NT」、コロンとサポートネットワークタイプのセミコロン区切りのリストが続きます。このパラメータはオプションです。"
    },
    {
      "indent": 3,
      "text": "Packages: The packages supported by the endpoint encoded as the keyword \"v\", followed by a colon and a character string. If a list of values is specified, these values will be separated by a semicolon. The first value specified will be the default package for the endpoint.",
      "ja": "パッケージ：キーワード「V」としてコード化エンドポイントでサポートされているパッケージ、コロンと文字列が続きます。値のリストが指定されている場合、これらの値は、セミコロンで区切られます。指定された最初の値は、エンドポイントのデフォルトのパッケージになります。"
    },
    {
      "indent": 3,
      "text": "Modes: The modes supported by this endpoint encoded as the keyword \"m\", followed by a colon and a semicolon-separated list of supported connection modes for this endpoint.",
      "ja": "モード：キーワード「M」としてエンコードこのエンドポイントによってサポートされるモード、結腸およびこのエンドポイントでサポートされている接続モードのセミコロンで区切られたリストが続きます。"
    },
    {
      "indent": 3,
      "text": "Lack of support for a capability can also be indicated by excluding the parameter from the capability set.",
      "ja": "機能のサポートの欠如はまた、能力セットからパラメータを除外することによって示すことができます。"
    },
    {
      "indent": 3,
      "text": "An example capability is:",
      "ja": "例の機能は次のとおりです。"
    },
    {
      "indent": 5,
      "text": "A: a:PCMU;G728, p:10-100, e:on, s:off, t:1, v:L, m:sendonly;recvonly;sendrecv;inactive",
      "ja": "：PCMU; G728、P：10-100、E：上、S：オフ、T：1、V：L、M：sendonlyで; recvonlyで、SENDRECV、非アクティブ"
    },
    {
      "indent": 3,
      "text": "The carriage return above is included for formatting reasons only and is not permissible in a real implementation.",
      "ja": "上記キャリッジリターンのみ理由をフォーマットするために含まれており、実際の実装で許されないれます。"
    },
    {
      "indent": 3,
      "text": "If multiple capabilities are to be returned, each will be returned as a separate capability line.",
      "ja": "複数の機能が返される場合は、それぞれが独立した機能ラインとして返されます。"
    },
    {
      "indent": 3,
      "text": "Since Local Connection Options can be extended, the list of capability parameters can also be extended. Individual extensions may define how they are reported as capabilities. If no such definition is provided, the following defaults apply:",
      "ja": "ローカル接続オプションを拡張することができますので、能力パラメータのリストも拡張することができます。個々の拡張機能は、それらが機能として報告されている方法を定義することができます。そのような定義が提供されていない場合は、以下のデフォルトが適用されます。"
    },
    {
      "indent": 3,
      "text": "* Package Extension attributes: The individual attributes are not reported. Instead, the name of the package is simply reported in the list of supported packages.",
      "ja": "*パッケージの拡張属性：個々の属性が報告されていません。代わりに、パッケージの名前は、単にサポートパッケージのリストで報告されます。"
    },
    {
      "indent": 3,
      "text": "* Vendor Extension attributes: The name of the attribute is reported without any value.",
      "ja": "*ベンダー拡張属性：属性の名前は、任意の値なしで報告されます。"
    },
    {
      "indent": 3,
      "text": "* Other Extension attributes: The name of the attribute is reported without any value.",
      "ja": "*その他の拡張属性：属性の名前は、任意の値なしで報告されます。"
    },
    {
      "indent": 0,
      "text": "3.2.2.4 Coding of Event Names",
      "section_title": true,
      "ja": "イベント名の3.2.2.4コーディング"
    },
    {
      "indent": 3,
      "text": "Event names are composed of an optional package name, separated by a slash (/) from the name of the actual event (see Section 2.1.7). The wildcard character star (\"*\") can be use to refer to all packages. The event name can optionally be followed by an at sign (@) and the identifier of a connection (possibly using a wildcard) on which the event should be observed. Event names are used in the RequestedEvents, SignalRequests, ObservedEvents, DetectEvents, and EventStates parameters.",
      "ja": "イベント名は、実際のイベントの名前から、スラッシュ（/）で区切って、オプションのパッケージ名で構成されている（2.1.7項を参照してください）。ワイルドカード文字スター（「*」）は、すべてのパッケージを参照するために使用することができます。イベント名は、必要に応じてアットマーク（@）、イベントが観察されるべきで（おそらくワイルドカードを使用して）接続の識別子に続くことができます。イベント名はRequestedEvents、SignalRequests、ObservedEvents、DetectEvents、およびEventStatesパラメータで使用されています。"
    },
    {
      "indent": 3,
      "text": "Events and signals may be qualified by parameters defined for the event/signal. Such parameters may be enclosed in double-quotes (in fact, some parameters MUST be enclosed in double-quotes due to syntactic restrictions) in which case they are UTF-8 encoded [20].",
      "ja": "イベントおよび信号はイベント/信号のために定義されたパラメータによって修飾されてもよいです。このようなパラメータは、それらがUTF-8で符号化される場合には二重引用符（実際には、いくつかのパラメータは、構文の制限に起因する二重引用符で囲む必要があります）[20]に封入することができます。"
    },
    {
      "indent": 3,
      "text": "The parameter name \"!\" (exclamation point) is reserved for future use for both events and signals.",
      "ja": "パラメータ名「！」 （感嘆符）がイベントと信号の両方のための将来の使用のために予約されています。"
    },
    {
      "indent": 3,
      "text": "Each signal has one of the following signal-types associated with it: On/Off (OO), Time-out (TO), or Brief (BR). (These signal types are specified in the package definitions, and are not present in the messages.) On/Off signals can be parameterized with a \"+\" to turn the signal on, or a \"-\" to turn the signal off. If an on/off signal is not parameterized, the signal is turned on. Both of the following will turn the vmwi signal (from the line package \"L\") on:",
      "ja": "オン/オフ（OO）、タイムアウト（TO）、又はブリーフ（BR）：各信号は、次のそれに関連付けられた信号のタイプの1つを有します。 「 - 」信号をオフにする（これらの信号タイプはパッケージ定義で指定され、メッセージには存在しないれる）オン/オフ信号がオン信号、またはAを回すために「+」を用いてパラメータ化することができます。オン/オフ信号がパラメータ化されていない場合は、信号がオンになっています。 ：次のうちどちらが上（ラインパッケージ「L」から）VMWI信号をオンにします"
    },
    {
      "indent": 6,
      "text": "L/vmwi(+) L/vmwi",
      "ja": "L / VMWI（+）L / VMWI"
    },
    {
      "indent": 3,
      "text": "In addition to \"!\", \"+\" and \"-\", the signal parameter \"to\" is reserved as well. It can be used with Time-Out signals to override the default time-out value for the current request. A decimal value in milliseconds will be supplied. The individual signal and/or package definition SHOULD indicate if this parameter is supported for one or more TO signals in the package. If not indicated, TO signals in package version zero are assumed to not support it, whereas TO signals in package versions one or higher are assumed to support it. By default, a supplied time-out value MAY be rounded to the nearest non-zero value divisible by 1000, i.e., whole second. The individual signal and/or package definition may define other rounding rules. All new package and TO signal definitions are strongly encouraged to support the \"to\" signal parameter.",
      "ja": "加えて、「+」と「！」「 - 」、信号パラメータが同様に予約されている「TO」。現在の要求のデフォルトのタイムアウト値を上書きするためにタイムアウト信号を使用することができます。ミリ秒単位の小数点値が供給されることになります。このパラメータは、パッケージ内の信号TO一つ以上のためにサポートされている場合、個々の信号および/またはパッケージ定義が示す必要があります。示されていない場合、パッケージバージョンゼロの信号への1つまたはより高いが、それをサポートすると仮定されているパッケージのバージョンの信号TOに対し、それをサポートしないと仮定されます。デフォルトでは、供給されたタイムアウト値1000で割り切れる最も近いゼロ以外の値、即ち、全体秒に丸みを帯びていてもよいです。個々の信号および/またはパッケージの定義は、他の丸め規則を定義することができます。すべての新しいパッケージと定義を知らせるためには、強く「から」信号パラメータをサポートすることをお勧めします。"
    },
    {
      "indent": 3,
      "text": "The following example illustrates how the \"to\" parameter can be used to apply a signal for 6 seconds:",
      "ja": "次の例では、パラメータが6秒間信号を適用するために使用することができ、「する」方法を示しています。"
    },
    {
      "indent": 6,
      "text": "L/rg(to=6000) L/rg(to(6000))",
      "ja": "L / RG L / RG（= 6000）（TO（6000））"
    },
    {
      "indent": 3,
      "text": "The following are examples of event names:",
      "ja": "イベント名の例を示します。"
    },
    {
      "indent": 5,
      "text": " -----------------------------------------------------------\n| L/hu        |   on-hook transition, in the line package   |\n| F/0         |   digit 0 in the MF package                 |\n| hf          |   Hook-flash, assuming that the line package|\n|             |   is the default package for the endpoint.  |\n| G/rt@0A3F58 |   Ring back signal on connection \"0A3F58\"   |\n -----------------------------------------------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "In addition, the range and wildcard notation of events can be used, instead of individual names, in the RequestedEvents and DetectEvents parameters. The event code \"all\" is reserved and refers to all events or signals in a package. The star sign (\"*\") can be used to denote \"all connections\", and the dollar sign (\"$\") can be used to denote the \"current\" connection (see Section 2.1.7 for details).",
      "ja": "また、イベントの範囲とワイルドカード表記はRequestedEventsとDetectEventsパラメータの代わりに個々の名前を使用することができます。イベントコード「全て」が予約されており、パッケージ内のすべてのイベントまたは信号を指します。スター記号（「*」）「すべての接続」を意味するために使用することができ、およびドル記号（「$」）は、「現在」の接続（詳細は2.1.7項を参照）を示すために使用することができます。"
    },
    {
      "indent": 3,
      "text": "The following are examples of such notations:",
      "ja": "以下は、このような表記の例です："
    },
    {
      "indent": 5,
      "text": " ---------------------------------------------------------\n| M/[0-9]   |   Digits 0 to 9 in the MF package.          |\n| hf        |   Hook-flash, assuming that the line package|\n|           |   is a default package for the endpoint.    |\n| [0-9*#A-D]|   All digits and letters in the DTMF        |\n|           |   packages (default for endpoint).          |\n| T/all     |   All events in the trunk package.          |\n| R/qa@*    |   The quality alert event on all            |\n|           |   connections.                              |\n| G/rt@$    |   Ringback on current connection.           |\n ---------------------------------------------------------",
      "raw": true
    },
    {
      "indent": 0,
      "text": "3.2.2.5 ConnectionId",
      "section_title": true,
      "ja": "3.2.2.5 ConnectionId"
    },
    {
      "indent": 3,
      "text": "The Connection Identifier is encoded as a hexadecimal string, at most 32 characters in length. Connection Identifiers are compared as strings rather than numerical values.",
      "ja": "接続識別子の長さは、16進数の文字列として最大で32文字にエンコードされます。接続識別子は、文字列ではなく数値として比較されます。"
    },
    {
      "indent": 0,
      "text": "3.2.2.6 ConnectionMode",
      "section_title": true,
      "ja": "3.2.2.6 ConnectionMode"
    },
    {
      "indent": 3,
      "text": "The connection mode describes the mode of operation of the connection. The possible values are:",
      "ja": "接続モードは、接続の動作モードを説明します。可能な値は以下のとおりです。"
    },
    {
      "indent": 5,
      "text": " --------------------------------------------------------\n|    Mode     |               Meaning                    |\n|-------------|------------------------------------------|\n| M: sendonly |  The gateway should only send packets    |\n| M: recvonly |  The gateway should only receive packets |\n| M: sendrecv |  The gateway should send                 |\n|             |  and receive packets                     |\n| M: confrnce |  The gateway should place                |\n|             |  the connection in conference mode       |\n| M: inactive |  The gateway should neither              |\n|             |  send nor receive packets                |\n| M: loopback |  The gateway should place                |\n|             |  the circuit in loopback mode.           |\n| M: conttest |  The gateway should place                |\n|             |  the circuit in test mode.               |\n| M: netwloop |  The gateway should place                |\n|             |  the connection in network loopback mode.|\n| M: netwtest |  The gateway should place the connection |\n|             |  in network continuity test mode.        |\n --------------------------------------------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Note that irrespective of the connection mode, signals applied to the connection will still result in packets being sent (see Section 2.3.1).",
      "ja": "接続モードとにかかわらずなお、接続に印加される信号は、まだ送信されたパケット（セクション2.3.1を参照）をもたらすであろう。"
    },
    {
      "indent": 3,
      "text": "The set of connection modes can be extended through packages.",
      "ja": "接続モードのセットは、パッケージによって拡張することができます。"
    },
    {
      "indent": 0,
      "text": "3.2.2.7 ConnectionParameters",
      "section_title": true,
      "ja": "3.2.2.7 ConnectionParameters"
    },
    {
      "indent": 3,
      "text": "Connection parameters are encoded as a string of type and value pairs, where the type is either a two-letter identifier of the parameter or an extension type, and the value a decimal integer. Types are separated from value by an '=' sign. Parameters are separated from each other by a comma. Connection parameter values can contain up to nine digits. If the maximum value is reached, the counter is no longer updated, i.e., it doesn't wrap or overflow.",
      "ja": "接続パラメータは、タイプがパラメータまたは拡張タイプの2つの文字の識別子、および値10進整数のいずれかであるタイプと値のペアの文字列として符号化されます。種類は、「=」記号によって値から分離されています。パラメータは、コンマによって分離されています。接続パラメータの値は、最大9桁を含めることができます。最大値に達した場合、カウンタは、もはや更新されていない、すなわち、それはラップやオーバーフローしません。"
    },
    {
      "indent": 3,
      "text": "The connection parameter types are specified in the following table:",
      "ja": "接続パラメータの種類を次の表に指定されています。"
    },
    {
      "indent": 3,
      "text": " -----------------------------------------------------------------\n| Connection parameter| Code |  Connection parameter              |\n| name                |      |  value                             |\n|---------------------|------|------------------------------------|\n| Packets sent        |  PS  |  The number of packets that        |\n|                     |      |  were sent on the connection.      |\n| Octets sent         |  OS  |  The number of octets that         |\n|                     |      |  were sent on the connection.      |\n| Packets received    |  PR  |  The number of packets that        |\n|                     |      |  were received on the connection.  |\n| Octets received     |  OR  |  The number of octets that         |\n|                     |      |  were received on the connection.  |\n| Packets lost        |  PL  |  The number of packets that        |\n|                     |      |  were lost on the connection       |\n|                     |      |  as deduced from gaps in the       |\n|                     |      |  RTP sequence number.              |\n| Jitter              |  JI  |  The average inter-packet arrival  |\n|                     |      |  jitter, in milliseconds,          |\n|                     |      |  expressed as an integer number.   |\n| Latency             |  LA  |  Average latency, in milliseconds, |\n|                     |      |  expressed as an integer number.   |\n -----------------------------------------------------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The set of connection parameters can be extended in two different ways:",
      "ja": "接続パラメータのセットは、2つの異なる方法で拡張することができます。"
    },
    {
      "indent": 3,
      "text": "* Package Extension Parameters (preferred)",
      "ja": "*パッケージの拡張パラメータ（優先）"
    },
    {
      "indent": 3,
      "text": "* Vendor Extension Parameters",
      "ja": "*ベンダー拡張パラメータ"
    },
    {
      "indent": 3,
      "text": "Package Extension Connection Parameters are defined in packages which provides the following benefits:",
      "ja": "パッケージ拡張接続パラメータは、次のような利点を提供し、パッケージで定義されています。"
    },
    {
      "indent": 3,
      "text": "* A registration mechanism (IANA) for the package name.",
      "ja": "*パッケージ名の登録メカニズム（IANA）。"
    },
    {
      "indent": 3,
      "text": "* A separate name space for the parameters.",
      "ja": "*パラメータ用に別の名前空間。"
    },
    {
      "indent": 3,
      "text": "* A convenient grouping of the extensions.",
      "ja": "*拡張子の便利なグループ化。"
    },
    {
      "indent": 3,
      "text": "* A simple way to determine support for them through auditing.",
      "ja": "*簡単な方法は、監査を介してそれらのサポートを決定します。"
    },
    {
      "indent": 3,
      "text": "The package extension mechanism is the preferred extension method.",
      "ja": "パッケージ拡張機構は、好ましい伸長法です。"
    },
    {
      "indent": 3,
      "text": "Vendor extension parameters names are composed of the string \"X-\" followed by a two or more letters extension parameter name.",
      "ja": "ベンダー拡張パラメータ名は2文字以上の拡張パラメータ名に続く文字列「X-」で構成されています。"
    },
    {
      "indent": 3,
      "text": "Call agents that receive unrecognized package or vendor connection parameter extensions SHALL silently ignore these parameters.",
      "ja": "認識されていないパッケージまたはベンダーの接続パラメータの拡張を受け取るコールエージェントは静かに、これらのパラメータを無視しなければなりません。"
    },
    {
      "indent": 3,
      "text": "An example of connection parameter encoding is:",
      "ja": "接続パラメータ符号化の例です。"
    },
    {
      "indent": 6,
      "text": "P: PS=1245, OS=62345, PR=0, OR=0, PL=0, JI=0, LA=48",
      "ja": "W：PS = 1245、デュー= 62345、= 0、= 0で、第二= 0、G = 0、LA = 48"
    },
    {
      "indent": 0,
      "text": "3.2.2.8 DetectEvents",
      "section_title": true,
      "ja": "3.2.2.8 DetectEvents"
    },
    {
      "indent": 3,
      "text": "The DetectEvents parameter is encoded as a comma separated list of events (see Section 3.2.2.4), such as for example:",
      "ja": "DetectEventsパラメータは、例えば、などのイベント（セクション3.2.2.4を参照）のカンマ区切りリストとしてコードされます。"
    },
    {
      "indent": 6,
      "text": "T: L/hu,L/hd,L/hf,D/[0-9#*]",
      "ja": "T：L / HU、L / HD、L / HF、D / [0-9＃1 *]"
    },
    {
      "indent": 3,
      "text": "It should be noted, that no actions can be associated with the events, however event parameters may be provided.",
      "ja": "何のアクションがしかし、イベントパラメータを提供することができる、イベントに関連付けできないことに留意すべきです。"
    },
    {
      "indent": 0,
      "text": "3.2.2.9 EventStates",
      "section_title": true,
      "ja": "3.2.2.9 EventStates"
    },
    {
      "indent": 3,
      "text": "The EventStates parameter is encoded as a comma separated list of events (see Section 3.2.2.4), such as for example:",
      "ja": "EventStatesパラメータは、例えば、などのイベント（セクション3.2.2.4を参照）のカンマ区切りリストとしてコードされます。"
    },
    {
      "indent": 6,
      "text": "ES: L/hu",
      "ja": "ES：L / HU"
    },
    {
      "indent": 3,
      "text": "It should be noted, that no actions can be associated with the events, however event parameters may be provided.",
      "ja": "何のアクションがしかし、イベントパラメータを提供することができる、イベントに関連付けできないことに留意すべきです。"
    },
    {
      "indent": 0,
      "text": "3.2.2.10 LocalConnectionOptions",
      "section_title": true,
      "ja": "3.2.2.10 LocalConnectionOptions"
    },
    {
      "indent": 3,
      "text": "The local connection options describe the operational parameters that the Call Agent provides to the gateway in connection handling commands. These include:",
      "ja": "ローカル接続オプションは、コールエージェントが接続処理コマンドでゲートウェイに提供して動作パラメータを記述します。これらは、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "* The allowed codec(s), encoded as the keyword \"a\", followed by a colon and a character string. If the Call Agent specifies a list of values, these values will be separated by a semicolon. For RTP, audio codecs SHALL be specified by using encoding names defined in the RTP AV Profile [4] or its replacement, or by encoding names registered with the IANA. Non-audio media registered as a MIME type MUST use the \"<MIME type>/<MIME subtype>\" form, as in \"image/t38\".",
      "ja": "*コロンと文字列が続くキーワード「A」としてエンコード許さコーデック（複数可）、、。コールエージェントは、値のリストを指定している場合、これらの値は、セミコロンで区切られます。 RTPは、オーディオコーデックは、[4]またはその置換、又はIANAに登録名を符号化してRTPのAVプロファイルで定義されたエンコーディング名を使用して規定されなければなりません。 MIMEタイプとして登録された非音声メディア「は、画像/ T38」のように、「<MIMEタイプ> / <MIMEサブタイプ>」の形式を使用しなければなりません。"
    },
    {
      "indent": 3,
      "text": "* The packetization period in milliseconds, encoded as the keyword \"p\", followed by a colon and a decimal number. If the Call Agent specifies a range of values, the range will be specified as two decimal numbers separated by a hyphen (as specified for the \"ptime\" parameter for SDP).",
      "ja": "*コロンと小数続くキーワード「P」として符号化されたミリ秒単位でパケット化期間、。 Callエージェントは、値の範囲を指定する場合、範囲は（SDPは、「PTIME」パラメータに指定されるように）ハイフンで区切られた2つの10進数で指定します。"
    },
    {
      "indent": 3,
      "text": "* The bandwidth in kilobits per second (1000 bits per second), encoded as the keyword \"b\", followed by a colon and a decimal number. If the Call Agent specifies a range of values, the range will be specified as two decimal numbers separated by a hyphen.",
      "ja": "*コロンと小数続くキーワード「B」としてエンコード毎秒キロビット（毎秒1000ビット）、中帯域幅、。コールエージェントは、値の範囲を指定した場合、範囲はハイフンで区切られた2つの10進数で指定します。"
    },
    {
      "indent": 3,
      "text": "* The type of service parameter, encoded as the keyword \"t\", followed by a colon and the value encoded as two hexadecimal digits. When the connection is transmitted over an IP network, the parameters encode the 8-bit type of service value parameter of the IP header (a.k.a. DiffServ field). The left-most \"bit\" in the parameter corresponds to the least significant bit in the IP header.",
      "ja": "*コロンと2桁の16進数として符号化された値が続くキーワード「T」としてエンコードサービスパラメータの種類、。接続は、IPネットワークを介して送信される場合、パラメータは、IPヘッダ（別名DiffServフィールド）のサービス値パラメータの8ビットのタイプをエンコードします。パラメータにおける最も左の「ビット」は、IPヘッダ内の最下位ビットに対応します。"
    },
    {
      "indent": 3,
      "text": "* The echo cancellation parameter, encoded as the keyword \"e\", followed by a colon and the value \"on\" or \"off\".",
      "ja": "*コロンと「オン「または」オフ」値が続くキーワード「E」として符号化エコーキャンセレーションパラメータ、。"
    },
    {
      "indent": 3,
      "text": "* The gain control parameter, encoded as the keyword \"gc\", followed by a colon and a value which can be either the keyword \"auto\" or a decimal number (positive or negative) representing the number of decibels of gain.",
      "ja": "*キーワード「自動」または利得のデシベル数を表す（正または負）進数のいずれかとすることができるコロンキーワード「GC」、および値として符号化利得制御パラメータ、。"
    },
    {
      "indent": 3,
      "text": "* The silence suppression parameter, encoded as the keyword \"s\", followed by a colon and the value \"on\" or \"off\".",
      "ja": "*コロンと「オン「または」オフ」値が続くキーワード「S」として符号化無音抑圧パラメータ、。"
    },
    {
      "indent": 3,
      "text": "* The resource reservation parameter, encoded as the keyword \"r\", followed by a colon and the value \"g\" (guaranteed service), \"cl\" (controlled load) or \"be\" (best effort).",
      "ja": "*コロンと値「G」（保証サービス）、「CL」（制御された負荷）、または「である」（ベストエフォート）、続いて、キーワード「R」としてエンコード資源予約パラメータ、。"
    },
    {
      "indent": 3,
      "text": "* The encryption key, encoded as the keyword \"k\" followed by a colon and a key specification, as defined for the parameter \"K\" in SDP (RFC 2327).",
      "ja": "*暗号化キー、SDPのパラメータ「K」について定義された通り、コロン、キーワード「K」と鍵仕様としてエンコード（RFC 2327）。"
    },
    {
      "indent": 3,
      "text": "* The type of network, encoded as the keyword \"nt\" followed by a colon and the type of network encoded as the keyword \"IN\" (internet), \"ATM\", \"LOCAL\" (for a local connection), or possibly another type of network registered with the IANA as per SDP (RFC 2327).",
      "ja": "*コロンと（ローカル接続用）キーワード「IN」（インターネット）、「ATM」、「LOCAL」としてエンコードネットワークの種類に続いて、キーワードとしてエンコードネットワークのタイプ、「NT」を、またはおそらく別のSDP当たりとしてIANA（RFC 2327）に登録されているネットワークのタイプ。"
    },
    {
      "indent": 3,
      "text": "* The resource reservation parameter, encoded as the keyword \"r\", followed by a colon and the value \"g\" (guaranteed service), \"cl\" (controlled load) or \"be\" (best effort).",
      "ja": "*コロンと値「G」（保証サービス）、「CL」（制御された負荷）、または「である」（ベストエフォート）、続いて、キーワード「R」としてエンコード資源予約パラメータ、。"
    },
    {
      "indent": 3,
      "text": "The encoding of the first three attributes, when they are present, will be compatible with the SDP and RTP profiles. Note that each of the attributes is optional. When several attributes are present, they are separated by a comma.",
      "ja": "それらが存在する最初の3つの属性のエンコーディングは、SDP及びRTPプロファイルと互換性があります。各属性はオプションであることに注意してください。いくつかの属性が存在する場合、それらはカンマで区切られます。"
    },
    {
      "indent": 3,
      "text": "Examples of local connection options are:",
      "ja": "ローカル接続オプションの例としては、以下のとおりです。"
    },
    {
      "indent": 6,
      "text": "L: p:10, a:PCMU L: p:10, a:G726-32 L: p:10-20, b:64 L: b:32-64, e:off",
      "ja": "L：P：10：PCMUのL：P：10：G726-32のL：P：10~20、B：64 L：B：32-64、E：オフ"
    },
    {
      "indent": 3,
      "text": "The set of Local Connection Options attributes can be extended in three different ways:",
      "ja": "ローカル接続オプション属性のセットは、3つの異なる方法で拡張することができます。"
    },
    {
      "indent": 3,
      "text": "* Package Extension attributes (preferred)",
      "ja": "*パッケージの拡張属性（優先）"
    },
    {
      "indent": 3,
      "text": "* Vendor Extension attributes",
      "ja": "*ベンダー拡張属性"
    },
    {
      "indent": 3,
      "text": "* Other Extension attributes",
      "ja": "*その他の拡張属性"
    },
    {
      "indent": 3,
      "text": "Package Extension Local Connection Options attributes are defined in packages which provides the following benefits:",
      "ja": "パッケージ拡張ローカル接続オプションの属性は、次のような利点を提供し、パッケージで定義されています。"
    },
    {
      "indent": 3,
      "text": "* A registration mechanism (IANA) for the package name.",
      "ja": "*パッケージ名の登録メカニズム（IANA）。"
    },
    {
      "indent": 3,
      "text": "* A separate name space for the attributes.",
      "ja": "*属性の別の名前空間。"
    },
    {
      "indent": 3,
      "text": "* A convenient grouping of the extensions.",
      "ja": "*拡張子の便利なグループ化。"
    },
    {
      "indent": 3,
      "text": "* A simple way to determine support for them through auditing.",
      "ja": "*簡単な方法は、監査を介してそれらのサポートを決定します。"
    },
    {
      "indent": 3,
      "text": "The package extension mechanism is the preferred extension method.",
      "ja": "パッケージ拡張機構は、好ましい伸長法です。"
    },
    {
      "indent": 3,
      "text": "Vendor extension attributes are composed of an attribute name, and possibly followed by a colon and an attribute value. The attribute name MUST start with the two characters \"x+\", for a mandatory extension, or \"x-\", for a non-mandatory extension. If a gateway receives a mandatory extension attribute that it does not recognize, it MUST reject the command (error code 525 - unknown extension in LocalConnectionOptions, is RECOMMENDED).",
      "ja": "ベンダー拡張属性は、属性名で構成され、おそらくコロンと属性値が続いています。属性名は非必須の拡張のために、必須の拡張、または「X-」のために、「X +」の2つの文字で開始する必要があります。ゲートウェイは、それが認識しないことを必須の拡張属性を受信した場合、それはコマンドを拒絶しなければなりません（エラーコード525  -  LocalConnectionOptions中の未知の拡張、推奨されます）。"
    },
    {
      "indent": 3,
      "text": "Note that vendor extension attributes use an unmanaged name space, which implies a potential for name clashing. Vendors are consequently encouraged to include some vendor specific string, e.g., vendor name, in their vendor extensions.",
      "ja": "ベンダー拡張属性は、名前の激突の可能性を暗示管理されていない名前空間を使用することに注意してください。ベンダーは、結果的にそのベンダー拡張機能で一部、例えば、ベンダー固有の文字列、ベンダー名を含むように奨励されています。"
    },
    {
      "indent": 3,
      "text": "Finally, for backwards compatibility with some existing implementations, MGCP allows for other extension attributes as well (see grammar in Appendix A). Note however, that these attribute extensions do not provide the package extension attribute benefits. Use of this mechanism for new extensions is discouraged.",
      "ja": "最後に、いくつかの既存の実装との下位互換性のために、MGCPは（付録Aの文法を参照）、ならびに他の属性を拡張することを可能にします。これらの属性の拡張機能は、パッケージの拡張属性の利点を提供しないこと、しかし、注意してください。新しい拡張機能については、このメカニズムの使用は推奨されません。"
    },
    {
      "indent": 0,
      "text": "3.2.2.11 MaxMGCPDatagram",
      "section_title": true,
      "ja": "3.2.2.11 MaxMGCPDatagram"
    },
    {
      "indent": 3,
      "text": "The MaxMGCPDatagram can only be used for auditing, i.e., it is a valid RequestedInfo code and can be provided as a response parameter.",
      "ja": "MaxMGCPDatagramのみ、すなわち、それが有効なRequestedInfoコードであり、応答パラメータとして提供することができ、監査のために使用することができます。"
    },
    {
      "indent": 3,
      "text": "In responses, the MaxMGCPDatagram value is encoded as a string of up to nine decimal digits -- leading zeroes are not permitted. The following example illustrates the use of this parameter:",
      "ja": "応答では、MaxMGCPDatagram値は最大9桁の文字列としてエンコードされる - 先行ゼロは許可されていません。次の例では、このパラメータの使用方法を示しています。"
    },
    {
      "indent": 6,
      "text": "MD: 8100",
      "ja": "MD：8100"
    },
    {
      "indent": 0,
      "text": "3.2.2.12 ObservedEvents",
      "section_title": true,
      "ja": "3.2.2.12 ObservedEvents"
    },
    {
      "indent": 3,
      "text": "The observed events parameter provides the list of events that have been observed. The event codes are the same as those used in the NotificationRequest. Events that have been accumulated according to the digit map may be grouped in a single string, however such practice is discouraged; they SHOULD be reported as lists of isolated events if other events were detected during the digit accumulation. Examples of observed events are:",
      "ja": "観測されたイベントのパラメータが観察されているイベントのリストを提供します。イベントコードはNotificationRequestで使用されるものと同じです。桁マップに従って蓄積されたイベントは、しかし、そのような実践が推奨され、単一の文字列にグループ化してもよいです。他のイベントが数字の蓄積中に検出された場合、彼らは孤立したイベントのリストとして報告する必要があります。観察されたイベントの例は以下のとおりです。"
    },
    {
      "indent": 6,
      "text": "O: L/hu O: D/8295555T O: D/8,D/2,D/9,D/5,D/5,L/hf,D/5,D/5,D/T O: L/hf, L/hf, L/hu",
      "ja": "O：L / M O：D / 8295555T O：D / 8、D / 2、D / 9、D / 5、D / 5、L / HF、D / 5、D / 5、D / TO：L / HF、L / HF、L / HU"
    },
    {
      "indent": 0,
      "text": "3.2.2.13 PackageList",
      "section_title": true,
      "ja": "3.2.2.13パッケージリスト"
    },
    {
      "indent": 3,
      "text": "The Package List can only be used for auditing, i.e., it is a valid RequestedInfo code and can be provided as a response parameter.",
      "ja": "パッケージリストのみ、すなわち、それが有効なRequestedInfoコードであり、応答パラメータとして提供することができ、監査のために使用することができます。"
    },
    {
      "indent": 3,
      "text": "The response parameter will consist of a comma separated list of packages supported. The first package returned in the list is the default package. Each package in the list consists of the package name followed by a colon, and the highest version number of the package supported.",
      "ja": "応答パラメータは、サポートされているパッケージのカンマ区切りのリストで構成されます。リストに返された最初のパッケージがデフォルトのパッケージです。リスト内の各パッケージには、コロン、パッケージ名、およびサポートされているパッケージのバージョン番号が最も大きいから構成されています。"
    },
    {
      "indent": 3,
      "text": "An example of a package list is:",
      "ja": "パッケージリストの例は次のとおりです。"
    },
    {
      "indent": 5,
      "text": "PL: L:1,G:1,D:0,FOO:2,T:1",
      "ja": "PL：L：1、G：1、D：0、FOO：2、T：1"
    },
    {
      "indent": 3,
      "text": "Note that for backwards compatibility, support for this parameter is OPTIONAL.",
      "ja": "後方互換性のために、このパラメータのサポートがオプションであることに注意してください。"
    },
    {
      "indent": 0,
      "text": "3.2.2.14 QuarantineHandling",
      "section_title": true,
      "ja": "3.2.2.14 QuarantineHandling"
    },
    {
      "indent": 3,
      "text": "The quarantine handling parameter contains a list of comma separated keywords:",
      "ja": "検疫処理パラメータは、カンマで区切られたキーワードのリストが含まれています。"
    },
    {
      "indent": 3,
      "text": "* The keyword \"process\" or \"discard\" to indicate the treatment of quarantined and observed events. If neither \"process\" or \"discard\" is present, \"process\" is assumed.",
      "ja": "*キーワード「プロセス」または隔離されたと観測された事象の治療を示すために「捨てます」。どちらも「プロセス」または「破棄」は存在している場合は、「処理」を想定しています。"
    },
    {
      "indent": 3,
      "text": "* The keyword \"step\" or \"loop\" to indicate whether at most one notification per NotificationRequest is allowed, or whether multiple notifications per NotificationRequest are allowed. If neither \"step\" nor \"loop\" is present, \"step\" is assumed.",
      "ja": "*キーワード「ステップ」または「ループ」NotificationRequestにつき最大1つの通知が許可されているかどうか、またはNotificationRequestごとに複数の通知が許可されているかどうかを示します。 「ステップ」や「ループ」のいずれもが存在する場合は、「ステップ」を想定しています。"
    },
    {
      "indent": 3,
      "text": "The following values are valid examples:",
      "ja": "次の値が有効な例です："
    },
    {
      "indent": 6,
      "text": "Q: loop Q: process Q: loop,discard",
      "ja": "Q：ループQ：プロセスQ：ループ、破棄"
    },
    {
      "indent": 0,
      "text": "3.2.2.15 ReasonCode",
      "section_title": true,
      "ja": "3.2.2.15 reasonCodeは"
    },
    {
      "indent": 3,
      "text": "Reason codes are three-digit numeric values. The reason code is optionally followed by a white space and commentary, e.g.:",
      "ja": "理由コードは3桁の数値です。理由コードは、必要に応じて例えばホワイトスペースと解説、続いて："
    },
    {
      "indent": 6,
      "text": "E: 900 Endpoint malfunctioning",
      "ja": "E：900エンドポイントの誤動作"
    },
    {
      "indent": 3,
      "text": "A list of reason codes can be found in Section 2.5.",
      "ja": "理由コードのリストは、セクション2.5に記載されています。"
    },
    {
      "indent": 3,
      "text": "The set of reason codes can be extended through packages.",
      "ja": "理由コードのセットは、パッケージによって拡張することができます。"
    },
    {
      "indent": 0,
      "text": "3.2.2.16 RequestedEvents",
      "section_title": true,
      "ja": "3.2.2.16 RequestedEvents"
    },
    {
      "indent": 3,
      "text": "The RequestedEvents parameter provides the list of events that are requested. The event codes are described in Section 3.2.2.4.",
      "ja": "RequestedEventsパラメータは、要求されたイベントのリストを提供します。イベントコードは、セクション3.2.2.4で説明されています。"
    },
    {
      "indent": 3,
      "text": "Each event can be qualified by a requested action, or by a list of actions. The actions, when specified, are encoded as a list of keywords, enclosed in parenthesis and separated by commas. The codes for the various actions are:",
      "ja": "各イベントは、要求されたアクションによって、またはアクションのリストで修飾することができます。アクションは、指定されたとき、キーワードのリスト、括弧で囲まれ、コンマで区切っとしてエンコードされています。さまざまなアクションのためのコードは次のとおりです。"
    },
    {
      "indent": 15,
      "text": " -------------------------------------\n|          Action              | Code |\n|------------------------------|------|\n| Notify immediately           |  N   |\n| Accumulate                   |  A   |\n| Treat according to digit map |  D   |\n| Swap                         |  S   |\n| Ignore                       |  I   |\n| Keep Signal(s) active        |  K   |\n| Embedded Notification Request|  E   |\n -------------------------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "When no action is specified, the default action is to notify the event. This means that, for example, ft and ft(N) are equivalent. Events that are not listed are ignored (unless they are persistent).",
      "ja": "アクションが指定されていない場合は、デフォルトのアクションは、イベントを通知することです。これは、例えば、フィートとフィート（N）が等価であることを意味します。 （彼らは永続的である場合を除き）記載されていないイベントは無視されます。"
    },
    {
      "indent": 3,
      "text": "The digit-map action SHOULD only be specified for the digits, letters and interdigit timers in packages that define the encoding of digits, letters, and timers (including extension digit map letters).",
      "ja": "桁マップアクションのみ（拡張ディジットマップ文字を含む）の数字、文字、及びタイマーの符号化を定義するパッケージに数字、文字と数字間タイマーを指定してください。"
    },
    {
      "indent": 3,
      "text": "The requested events list is encoded on a single line, with event/action groups separated by commas. Examples of RequestedEvents encodings are:",
      "ja": "要求されたイベントのリストは、カンマで区切られたイベント/アクション・グループで、単一の行にエンコードされています。 RequestedEventsエンコーディングの例は以下のとおりです。"
    },
    {
      "indent": 6,
      "text": "R: L/hu(N), L/hf(S,N) R: L/hu(N), D/[0-9#T](D)",
      "ja": "R：L / HU（N）、L / HF（S、N）R：L / HU（N）、D / [0-9＃1 T]（D）"
    },
    {
      "indent": 3,
      "text": "In the case of the \"Embedded Notification Request\" action, the embedded notification request parameters are encoded as a list of up to three parameter groups separated by commas. Each group starts by a one letter identifier, followed by a list of parameters enclosed between parentheses. The first optional parameter group, identified by the letter \"R\", is the value of the embedded RequestedEvents parameter. The second optional group, identified by the letter \"S\", is the embedded value of the SignalRequests parameter. The third optional group, identified by the letter \"D\", is the embedded value of the DigitMap. (Note that some existing implementations and profiles may encode these three components in a different order. Implementers are encouraged to accept such encodings, but they SHOULD NOT generate them.)",
      "ja": "「組み込み通知要求」動作の場合には、埋め込まれた通知要求パラメータは、カンマで区切られた最大3つのパラメータグループのリストとしてエンコードされます。各グループは、括弧の間に囲まれたパラメータのリストが続く一文字識別子によって開始されます。文字「R」によって識別される最初のオプションのパラメータ群は、埋め込みRequestedEventsパラメータの値です。文字「S」によって識別される第二のオプションのグループは、SignalRequestsパラメータの埋め込まれた値です。文字「D」によって識別される第三のオプションのグループは、DigitMapの埋め込まれた値です。 （実装者は、このようなエンコーディングを受け入れるように奨励されている。いくつかの既存の実装とプロファイルが異なるために、これらの三つの成分をコードすることができることに留意されたいが、彼らはそれらを生成するべきではありません。）"
    },
    {
      "indent": 3,
      "text": "If the RequestedEvents parameter is not present, the parameter will be set to a null value. If the SignalRequests parameter is not present, the parameter will be set to a null value. If the DigitMap is absent, the current value MUST be used. The following are valid examples of embedded requests:",
      "ja": "RequestedEventsパラメータが存在しない場合、パラメータがNULL値に設定されます。 SignalRequestsパラメータが存在しない場合は、パラメータがNULL値に設定されます。 DigitMapが存在しない場合、現在の値が使用されなければなりません。埋め込まれたリクエストの有効な例は以下のとおりです。"
    },
    {
      "indent": 6,
      "text": "R: L/hd(E(R(D/[0-9#T](D),L/hu(N)),S(L/dl),D([0-9].[#T]))) R: L/hd(E(R(D/[0-9#T](D),L/hu(N)),S(L/dl)))",
      "ja": "R：L / HD（E（R（D / [0-9＃1 T]（D）、L / HU（N））、S（L / DL）、D（[0-9]、[＃1 T]。 ）））R：L / HD（E（R（D / [0-9＃T]（D）、L / HU（N））、S（L / DL）））"
    },
    {
      "indent": 3,
      "text": "Some events can be qualified by additional event parameters. Such event parameters will be separated by commas and enclosed within parentheses. Event parameters may be enclosed in double-quotes (in fact, some event parameters MUST be enclosed in double-quotes due to syntactic restrictions), in which case the quoted string itself is UTF-8 encoded. Please refer to Section 3.2.2.4 for additional detail on event parameters.",
      "ja": "一部のイベントは、追加のイベントパラメータによって修飾することができます。そのようなイベントのパラメータは、カンマで区切られ、括弧内に封入されます。イベントパラメータは、引用符で囲まれた文字列自体はUTF-8でエンコードされた場合には、二重引用符（実際には、いくつかのイベントパラメータは、構文の制限のため、二重引用符で囲む必要があります）、中に封入することができます。イベントパラメータに追加の詳細については、セクション3.2.2.4を参照してください。"
    },
    {
      "indent": 3,
      "text": "The following example shows the foobar event with an event parameter \"epar\":",
      "ja": "次の例では、イベントパラメータ「EPAR」とfoobarのイベントを示しています。"
    },
    {
      "indent": 6,
      "text": "R: X/foobar(N)(epar=2)",
      "ja": "R：X / foobarに（N）（EPAR = 2）"
    },
    {
      "indent": 3,
      "text": "Notice that the Action was included even though it is the default Notify action - this is required by the grammar.",
      "ja": "これは、文法によって必要とされる - アクションは、それがデフォルトアクションを通知しているにもかかわらず、含まれていたことに注意してください。"
    },
    {
      "indent": 0,
      "text": "3.2.2.17 RequestedInfo",
      "section_title": true,
      "ja": "3.2.2.17 RequestedInfo"
    },
    {
      "indent": 3,
      "text": "The RequestedInfo parameter contains a comma separated list of parameter codes, as defined in Section 3.2.2. For example, if one wants to audit the value of the NotifiedEntity, RequestIdentifier, RequestedEvents, SignalRequests, DigitMap, QuarantineHandling and DetectEvents parameters, the value of the RequestedInfo parameter will be:",
      "ja": "3.2.2項で定義されるようRequestedInfoパラメータは、パラメータ・コードのコンマ区切りリストを含みます。一つNotifiedEntity、RequestIdentifier、RequestedEvents、SignalRequests、DigitMap、QuarantineHandlingとDetectEventsパラメータの値を監査したい場合、例えば、RequestedInfoパラメータの値は次のようになります。"
    },
    {
      "indent": 6,
      "text": "F: N,X,R,S,D,Q,T",
      "ja": "F：N、X、R、S、D、Q、T"
    },
    {
      "indent": 3,
      "text": "Note that extension parameters in general can be audited as well. The individual extension will define the auditing operation.",
      "ja": "一般的に、その拡張パラメータが同様に監査することができます。個々の拡張は、監査操作を定義します。"
    },
    {
      "indent": 3,
      "text": "The capabilities request, in the AuditEndPoint command, is encoded by the parameter code \"A\", as in:",
      "ja": "機能要求は、AuditEndPointコマンドで、のように、パラメータコード「A」によってコードされます。"
    },
    {
      "indent": 6,
      "text": "F: A",
      "ja": "F："
    },
    {
      "indent": 0,
      "text": "3.2.2.18 RequestIdentifier",
      "section_title": true,
      "ja": "3.2.2.18 RequestIdentifier"
    },
    {
      "indent": 3,
      "text": "The request identifier correlates a Notify command with the NotificationRequest that triggered it. A RequestIdentifier is a hexadecimal string, at most 32 characters in length. RequestIdentifiers are compared as strings rather than numerical value. The string \"0\" is reserved for reporting of persistent events in the case where a NotificationRequest has not yet been received after restart.",
      "ja": "要求識別子は、それを引き起こしたNotificationRequestで通知コマンドを相関させます。 RequestIdentifierの長さは、ほとんどの32文字で、16進文字列です。 RequestIdentifiersは、ストリングではなく数値として比較されます。文字列「0」はNotificationRequestがまだ再起動後に受信されていない場合には永続的なイベントの報告のために予約されています。"
    },
    {
      "indent": 0,
      "text": "3.2.2.19 ResponseAck",
      "section_title": true,
      "ja": "3.2.2.19 ResponseAck"
    },
    {
      "indent": 3,
      "text": "The response acknowledgement parameter is used to manage the \"at-most-once\" facility described in Section 3.5. It contains a comma separated list of \"confirmed transaction-id ranges\".",
      "ja": "応答確認パラメータは、セクション3.5に記載された「最大1回」の施設を管理するために使用されます。それは、「確認トランザクションIDの範囲」のカンマ区切りのリストが含まれています。"
    },
    {
      "indent": 3,
      "text": "Each \"confirmed transaction-id range\" is composed of either one decimal number, when the range includes exactly one transaction, or two decimal numbers separated by a single hyphen, describing the lower and higher transaction identifiers included in the range.",
      "ja": "各「確認トランザクションIDの範囲は、」範囲がより低いおよびより高いトランザクション識別子が範囲に含まれる記述、正確に一つのトランザクション、または単一のハイフンで区切られた2つの小数を含む場合、いずれか一方進数で構成されています。"
    },
    {
      "indent": 3,
      "text": "An example of a response acknowledgement is:",
      "ja": "応答確認の例は次のとおりです。"
    },
    {
      "indent": 6,
      "text": "K: 6234-6255, 6257, 19030-19044",
      "ja": "K：6234-6255、6257、19030から19044"
    },
    {
      "indent": 0,
      "text": "3.2.2.20 RestartMethod",
      "section_title": true,
      "ja": "3.2.2.20 RestartMethod"
    },
    {
      "indent": 3,
      "text": "The RestartMethod parameter is encoded as one of the keywords \"graceful\", \"forced\", \"restart\", \"disconnected\" or \"cancel-graceful\" as for example:",
      "ja": "RestartMethodパラメータがキーワードの一つとして符号化される「優雅」、「強制」、「再起動」、例えばとして「キャンセル-優雅」「切断」または："
    },
    {
      "indent": 6,
      "text": "RM: restart",
      "ja": "RM：リスタート"
    },
    {
      "indent": 3,
      "text": "The set of restart methods can be extended through packages.",
      "ja": "再起動方法のセットは、パッケージによって拡張することができます。"
    },
    {
      "indent": 0,
      "text": "3.2.2.21 SignalRequests",
      "section_title": true,
      "ja": "3.2.2.21 SignalRequests"
    },
    {
      "indent": 3,
      "text": "The SignalRequests parameter provides the name of the signal(s) that have been requested. Each signal is identified by a name, as described in Section 3.2.2.4.",
      "ja": "SignalRequestsパラメータは、要求された信号（複数可）の名前を提供します。セクション3.2.2.4に記載されるように、各信号は、名前によって識別されます。"
    },
    {
      "indent": 3,
      "text": "Some signals, such as for example announcement or ADSI display, can be qualified by additional parameters, e.g.:",
      "ja": "例えば発表またはADSI表示のようないくつかの信号は、追加のパラメータ、例えばすることによって修飾することができます："
    },
    {
      "indent": 3,
      "text": "* the name and parameters of the announcement,",
      "ja": "*名前や発表のパラメータ、"
    },
    {
      "indent": 3,
      "text": "* the string that should be displayed.",
      "ja": "*表示されるべき文字列。"
    },
    {
      "indent": 3,
      "text": "Such parameters will be separated by commas and enclosed within parenthesis, as in:",
      "ja": "そのようなパラメータは、カンマで区切られたと同様に、括弧内に封入されます。"
    },
    {
      "indent": 6,
      "text": "S: L/adsi(\"123456 Francois Gerard\") S: A/ann(http://ann.example.net/no-such-number.au, 1234567)",
      "ja": "S：L / ADSI（ \"123456フランソワ・ジェラルド\"）S：A /アン（http://ann.example.net/no-such-number.au、1234567）"
    },
    {
      "indent": 3,
      "text": "When a quoted-string is provided, the string itself is UTF-8 encoded [20].",
      "ja": "引用符で囲まれた文字列が設けられている場合、文字列自体は、UTF-8でエンコードされた[20]です。"
    },
    {
      "indent": 3,
      "text": "When several signals are requested, their codes are separated by a comma, as in:",
      "ja": "いくつかの信号が要求される場合、そのコードは、同様に、コンマによって分離されています。"
    },
    {
      "indent": 6,
      "text": "S: L/adsi(\"123456 Your friend\"), L/rg",
      "ja": "S：L / ADSI（ \"123456あなたの友人\"）、L / RG"
    },
    {
      "indent": 3,
      "text": "Please refer to Section 3.2.2.4 for additional detail on signal parameters.",
      "ja": "信号パラメータに追加の詳細については、セクション3.2.2.4を参照してください。"
    },
    {
      "indent": 0,
      "text": "3.3 Format of response headers",
      "section_title": true,
      "ja": "レスポンスヘッダの3.3フォーマット"
    },
    {
      "indent": 3,
      "text": "The response header is composed of a response line, optionally followed by headers that encode the response parameters.",
      "ja": "レスポンスヘッダは、必要に応じて応答パラメータを符号化ヘッダに続いて、応答線から構成されています。"
    },
    {
      "indent": 3,
      "text": "An example of a response header could be:",
      "ja": "レスポンスヘッダの一例は次のようになります。"
    },
    {
      "indent": 6,
      "text": "200 1203 OK",
      "ja": "200 1203 OK"
    },
    {
      "indent": 3,
      "text": "The response line starts with the response code, which is a three digit numeric value. The code is followed by a white space, and the transaction identifier. Response codes defined in packages (8xx) are followed by white space, a slash (\"/\") and the package name. All response codes may furthermore be followed by optional commentary preceded by a white space.",
      "ja": "応答ラインは3桁の数値であるレスポンスコードで始まります。コードはホワイトスペース、およびトランザクション識別子が続きます。パッケージ（8XX）で定義されたレスポンスコードはホワイトスペース、スラッシュ（「/」）とパッケージ名が続きます。すべてのレスポンスコードは、さらに、ホワイトスペースが先行オプションの解説を行ってもよいです。"
    },
    {
      "indent": 3,
      "text": "The following table describes the parameters whose presence is mandatory or optional in a response header, as a function of the command that triggered the response. The letter M stands for mandatory, O for optional and F for forbidden. Unless otherwise specified, a parameter MUST NOT be present more than once. Note that the table only reflects the default for responses that have not defined any other behavior. If a response is received with a parameter that is either not understood or marked as forbidden, the offending parameter(s) MUST simply be ignored.",
      "ja": "以下の表は、応答をトリガしたコマンドの関数として、その存在が応答ヘッダーの必須またはオプションであるパラメータを示します。文字Mは禁止のためのオプションとFには必須、Oの略です。特に指定しない限り、パラメータが複数回存在してはなりません。テーブルのみ、他の振る舞いを定義していない応答のための標準を反映していることに注意してください。応答が禁止と理解またはマークされていないいずれかのパラメータを用いて受信された場合、問題のパラメータ（複数も可）は、単に無視しなければなりません。"
    },
    {
      "indent": 3,
      "text": " ------------------------------------------------------------------\n| Parameter name      | EP | CR | MD | DL | RQ | NT | AU | AU | RS |\n|                     | CF | CX | CX | CX | NT | FY | EP | CX | IP |\n|---------------------|----|----|----|----|----|----|----|----|----|\n| BearerInformation   |  F |  F |  F |  F |  F |  F |  O |  F |  F |\n| CallId              |  F |  F |  F |  F |  F |  F |  F |  O |  F |\n| Capabilities        |  F |  F |  F |  F |  F |  F |  O*|  F |  F |\n| ConnectionId        |  F |  O*|  F |  F |  F |  F |  O*|  F |  F |\n| ConnectionMode      |  F |  F |  F |  F |  F |  F |  F |  O |  F |\n| Connection-         |  F |  F |  F |  O*|  F |  F |  F |  O |  F |\n|   Parameters        |    |    |    |    |    |    |    |    |    |\n| DetectEvents        |  F |  F |  F |  F |  F |  F |  O |  F |  F |\n| DigitMap            |  F |  F |  F |  F |  F |  F |  O |  F |  F |\n| EventStates         |  F |  F |  F |  F |  F |  F |  O |  F |  F |\n| LocalConnection-    |  F |  F |  F |  F |  F |  F |  F |  O |  F |\n|            Options  |    |    |    |    |    |    |    |    |    |\n| MaxMGCPDatagram     |  F |  F |  F |  F |  F |  F |  O |  F |  F |\n| NotifiedEntity      |  F |  F |  F |  F |  F |  F |  O |  O |  O |\n| ObservedEvents      |  F |  F |  F |  F |  F |  F |  O |  F |  F |\n| QuarantineHandling  |  F |  F |  F |  F |  F |  F |  O |  F |  F |\n| PackageList         |  O*|  O*|  O*|  O*|  O*|  O*|  O |  O*|  O*|\n| ReasonCode          |  F |  F |  F |  F |  F |  F |  O |  F |  F |\n| RequestIdentifier   |  F |  F |  F |  F |  F |  F |  O |  F |  F |\n| ResponseAck         |  O*|  O*|  O*|  O*|  O*|  O*|  O*|  O*|  O*|\n| RestartDelay        |  F |  F |  F |  F |  F |  F |  O |  F |  F |\n| RestartMethod       |  F |  F |  F |  F |  F |  F |  O |  F |  F |\n| RequestedEvents     |  F |  F |  F |  F |  F |  F |  O |  F |  F |\n| RequestedInfo       |  F |  F |  F |  F |  F |  F |  F |  F |  F |\n| SecondConnectionId  |  F |  O |  F |  F |  F |  F |  F |  F |  F |\n| SecondEndpointId    |  F |  O |  F |  F |  F |  F |  F |  F |  F |\n| SignalRequests      |  F |  F |  F |  F |  F |  F |  O |  F |  F |\n| SpecificEndpointId  |  F |  O |  F |  F |  F |  F |  O*|  F |  F |\n|---------------------|----|----|----|----|----|----|----|----|----|\n| LocalConnection-    |  F |  O*|  O |  F |  F |  F |  F |  O*|  F |\n|         Descriptor  |    |    |    |    |    |    |    |    |    |\n| RemoteConnection-   |  F |  F |  F |  F |  F |  F |  F |  O*|  F |\n|         Descriptor  |    |    |    |    |    |    |    |    |    |\n ------------------------------------------------------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Notes (*):",
      "ja": "ノート （*）："
    },
    {
      "indent": 3,
      "text": "* The PackageList parameter is only allowed with return code 518 (unsupported package), except for AuditEndpoint, where it may also be returned if audited.",
      "ja": "*パッケージリストパラメーターは、監査を受けた場合、それはまた、返されることがありAuditEndpoint、を除いて、リターンコード518（サポートされていないパッケージ）で許可されています。"
    },
    {
      "indent": 3,
      "text": "* The ResponseAck parameter MUST NOT be used with any other responses than a final response issued after a provisional response for the transaction in question. In that case, the presence of the ResponseAck parameter SHOULD trigger a Response Acknowledgement - any ResponseAck values provided will be ignored.",
      "ja": "* ResponseAckパラメータは、問題の取引のための暫定応答後に発行された最終応答以外の応答と使用してはいけません。その場合、ResponseAckパラメータの存在は、応答確認応答をトリガーする - 提供される任意のResponseAck値は無視されます。"
    },
    {
      "indent": 3,
      "text": "* In the case of a CreateConnection message, the response line is followed by a Connection-Id parameter and a LocalConnectionDescriptor. It may also be followed a Specific-Endpoint-Id parameter, if the creation request was sent to a wildcarded Endpoint-Id. The connection-Id and LocalConnectionDescriptor parameter are marked as optional in the Table. In fact, they are mandatory with all positive responses, when a connection was created, and forbidden when the response is negative, and no connection was created.",
      "ja": "*のCreateConnectionメッセージの場合には、応答ラインが接続-idパラメータとLocalConnectionDescriptorが続きます。作成要求がワイルドカードを使ったエンドポイント-IDに送信された場合にも、特定のエンドポイント-idパラメータを続けてもよいです。接続-IDとLocalConnectionDescriptorパラメータが表にオプションとしてマークされています。実際に、彼らは、接続が作成され、応答が否定されたときに禁止され、何も接続が作成されなかった時に、全ての陽性反応で必須です。"
    },
    {
      "indent": 3,
      "text": "* A LocalConnectionDescriptor MUST be transmitted with a positive response (code 200) to a CreateConnection. It MUST also be transmitted in response to a ModifyConnection command, if the modification resulted in a modification of the session parameters. The LocalConnectionDescriptor is encoded as a \"session description\", as defined in section 3.4. It is separated from the response header by an empty line.",
      "ja": "* LocalConnectionDescriptorはのCreateConnectionに肯定応答（コード200）で送信されなければなりません。変更はセッションパラメータの変更が生じた場合にも、ModifyConnectionコマンドに応答して送信されなければなりません。セクション3.4で定義されるようLocalConnectionDescriptorは、「セッション記述」として符号化されます。これは、空行で応答ヘッダから分離されます。"
    },
    {
      "indent": 3,
      "text": "* Connection-Parameters are only valid in a response to a non-wildcarded DeleteConnection command sent by the Call Agent.",
      "ja": "*接続パラメータは、コールエージェントによって送信された非ワイルドカード化DeleteConnectionコマンドに応答してのみ有効です。"
    },
    {
      "indent": 3,
      "text": "* Multiple ConnectionId, SpecificEndpointId, and Capabilities parameters may be present in the response to an AuditEndpoint command.",
      "ja": "*複数ConnectionId、SpecificEndpointId、及び機能パラメータはAuditEndpointコマンドに応答して存在してもよいです。"
    },
    {
      "indent": 3,
      "text": "* When several session descriptors are encoded in the same response, they are encoded one after each other, separated by an empty line. This is the case for example when the response to an audit connection request carries both a local session description and a remote session description, as in:",
      "ja": "いくつかのセッション記述子が同じ応答でエンコードされている場合*、それらは空行で区切られた、各次々に符号化されます。これは、監査、接続要求に対する応答が同様に、ローカルセッション記述とリモートセッション記述の両方を運ぶ例の場合です。"
    },
    {
      "indent": 10,
      "text": "200 1203 OK\nC: A3C47F21456789F0\nN: [128.96.41.12]\nL: p:10, a:PCMU;G726-32\nM: sendrecv\nP: PS=1245, OS=62345, PR=780, OR=45123, PL=10, JI=27,LA=48",
      "raw": true
    },
    {
      "indent": 10,
      "text": "v=0 o=- 25678 753849 IN IP4 128.96.41.1 s=- c=IN IP4 128.96.41.1 t=0 0 m=audio 1296 RTP/AVP 0",
      "ja": "V = 0 0 =  -  25678 753849 IP4 128.96.41.1のS = IN  -  C = IP4 128.96.41.1 T = 0、M =オーディオ1296 RTP / AVP 0 IN"
    },
    {
      "indent": 10,
      "text": "v=0 o=- 33343 346463 IN IP4 128.96.63.25 s=- c=IN IP4 128.96.63.25 t=0 0 m=audio 1296 RTP/AVP 0 96 a=rtpmap:96 G726-32/8000",
      "ja": "V = 0 0 =  -  33343 346463 IP4 128.96.63.25のS = IN  -  C = IP4 IN 128.96.63.25 T = 0、M =オーディオ1296 RTP / AVP 0 96 = rtpmap：96 G726-32 / 8000"
    },
    {
      "indent": 5,
      "text": "In this example, according to the SDP syntax, each description starts with a \"version\" line, (v=...). The local description is always transmitted before the remote description. If a connection descriptor is requested, but it does not exist for the connection audited, that connection descriptor will appear with the SDP protocol version field only.",
      "ja": "この例では、SDP構文に従って、各記述は、「バージョン」行、（V = ...）で始まります。地元の説明は常にリモートの説明の前に送信されます。接続記述子が要求されますが、それを監査接続のために存在しない場合は、その接続記述子はSDPプロトコルバージョンフィールドが表示されます。"
    },
    {
      "indent": 3,
      "text": "The response parameters are described for each of the commands in the following.",
      "ja": "応答パラメータは、次のコマンドの各々について記載されています。"
    },
    {
      "indent": 0,
      "text": "3.3.1 CreateConnection Response",
      "section_title": true,
      "ja": "3.3.1のCreateConnectionレスポンス"
    },
    {
      "indent": 3,
      "text": "In the case of a CreateConnection message, the response line is followed by a Connection-Id parameter with a successful response (code 200). A LocalConnectionDescriptor is furthermore transmitted with a positive response. The LocalConnectionDescriptor is encoded as a \"session description\", as defined by SDP (RFC 2327). It is separated from the response header by an empty line, e.g.:",
      "ja": "CreateConnectionメッセージの場合には、応答ラインが成功応答（コード200）との接続-idパラメータが続きます。 LocalConnectionDescriptorはさらに肯定応答で送信されます。 SDP（RFC 2327）で定義されているようLocalConnectionDescriptorは、「セッション記述」として符号化されます。これは、例えば、空行によって応答ヘッダから分離されています："
    },
    {
      "indent": 6,
      "text": "200 1204 OK I: FDE234C8",
      "ja": "200 1204 OK I：FDE234C8"
    },
    {
      "indent": 6,
      "text": "v=0 o=- 25678 753849 IN IP4 128.96.41.1 s=- c=IN IP4 128.96.41.1 t=0 0 m=audio 3456 RTP/AVP 96 a=rtpmap:96 G726-32/8000",
      "ja": "V = 0 0 =  -  25678 753849 IP4 128.96.41.1のS = IN  -  C = IP4 IN 128.96.41.1 T = 0、M =オーディオ3456 RTP / AVP 96 = rtpmap：96 G726-32 / 8000"
    },
    {
      "indent": 3,
      "text": "When a provisional response has been issued previously, the final response SHOULD furthermore contain the Response Acknowledgement parameter (final responses issued by entities adhering to this specification will include the parameter, but older RFC 2705 implementations MAY not):",
      "ja": "暫定応答が以前に発行された場合には、最終的な応答は、さらに、応答確認応答パラメータを含むべきである（この仕様に付着した事業体により発行され、最終的な応答は、パラメータが含まれますが、古いRFC 2705個の実装ではないかもしれません）："
    },
    {
      "indent": 6,
      "text": "200 1204 OK K: I: FDE234C8",
      "ja": "200 1204 OK K：そして：FDE234CH8"
    },
    {
      "indent": 6,
      "text": "v=0 o=- 25678 753849 IN IP4 128.96.41.1 s=- c=IN IP4 128.96.41.1 t=0 0 m=audio 3456 RTP/AVP 96 a=rtpmap:96 G726-32/8000",
      "ja": "V = 0 0 =  -  25678 753849 IP4 128.96.41.1のS = IN  -  C = IP4 IN 128.96.41.1 T = 0、M =オーディオ3456 RTP / AVP 96 = rtpmap：96 G726-32 / 8000"
    },
    {
      "indent": 3,
      "text": "The final response SHOULD then be acknowledged by a Response Acknowledgement:",
      "ja": "最終的な応答は、応答確認応答によって確認する必要があります。"
    },
    {
      "indent": 6,
      "text": "000 1204",
      "ja": "０００ １２０４"
    },
    {
      "indent": 0,
      "text": "3.3.2 ModifyConnection Response",
      "section_title": true,
      "ja": "3.3.2 ModifyConnectionレスポンス"
    },
    {
      "indent": 3,
      "text": "In the case of a successful ModifyConnection message, the response line is followed by a LocalConnectionDescriptor, if the modification resulted in a modification of the session parameters (e.g., changing only the mode of a connection does not alter the session parameters). The LocalConnectionDescriptor is encoded as a \"session description\", as defined by SDP. It is separated from the response header by an empty line.",
      "ja": "修飾は、セッション・パラメータの変更が生じた場合に成功ModifyConnectionメッセージの場合には、応答ライン（例えば、セッションパラメータを変更しない接続の専用モードを変更する）、LocalConnectionDescriptorが続きます。 SDPによって定義されるようLocalConnectionDescriptorは、「セッション記述」として符号化されます。これは、空行で応答ヘッダから分離されます。"
    },
    {
      "indent": 6,
      "text": "200 1207 OK",
      "ja": "200 1207 OK"
    },
    {
      "indent": 6,
      "text": "v=0 o=- 25678 753849 IN IP4 128.96.41.1 s=- c=IN IP4 128.96.41.1 t=0 0 m=audio 3456 RTP/AVP 0",
      "ja": "V = 0 0 =  -  25678 753849 IP4 128.96.41.1のS = IN  -  C = IP4 128.96.41.1 T = 0、M =オーディオ3456 RTP / AVP 0 IN"
    },
    {
      "indent": 3,
      "text": "When a provisional response has been issued previously, the final response SHOULD furthermore contain the Response Acknowledgement parameter as in:",
      "ja": "：暫定応答は、以前に発行された場合には、最終的な応答はさらに、同様に応答確認応答パラメータを含むべきです"
    },
    {
      "indent": 6,
      "text": "200 1207 OK K:",
      "ja": "200 1207 OK K："
    },
    {
      "indent": 3,
      "text": "The final response SHOULD then be acknowledged by a Response Acknowledgement:",
      "ja": "最終的な応答は、応答確認応答によって確認する必要があります。"
    },
    {
      "indent": 6,
      "text": "000 1207 OK",
      "ja": "000 1207 OK"
    },
    {
      "indent": 0,
      "text": "3.3.3 DeleteConnection Response",
      "section_title": true,
      "ja": "3.3.3 DeleteConnectionレスポンス"
    },
    {
      "indent": 3,
      "text": "Depending on the variant of the DeleteConnection message, the response line may be followed by a Connection Parameters parameter line, as defined in Section 3.2.2.7.",
      "ja": "セクション3.2.2.7で定義されるようにDeleteConnectionメッセージの変形に応じて、応答ラインが、接続パラメータパラメータ行が続いてもよいです。"
    },
    {
      "indent": 6,
      "text": "250 1210 OK P: PS=1245, OS=62345, PR=780, OR=45123, PL=10, JI=27, LA=48",
      "ja": "250 1210ストローク：PS = 1245、デュー= 62345、時= 780 = 45123、第二= 10、G = 27、ラ= 48"
    },
    {
      "indent": 0,
      "text": "3.3.4 NotificationRequest Response",
      "section_title": true,
      "ja": "3.3.4 NotificationRequest応答"
    },
    {
      "indent": 3,
      "text": "A successful NotificationRequest response does not include any additional response parameters.",
      "ja": "成功したNotificationRequest応答は、任意の追加の応答パラメータが含まれていません。"
    },
    {
      "indent": 0,
      "text": "3.3.5 Notify Response",
      "section_title": true,
      "ja": "3.3.5レスポンスを受け取ります"
    },
    {
      "indent": 3,
      "text": "A successful Notify response does not include any additional response parameters.",
      "ja": "成功した通知応答は、任意の追加の応答パラメータが含まれていません。"
    },
    {
      "indent": 0,
      "text": "3.3.6 AuditEndpoint Response",
      "section_title": true,
      "ja": "3.3.6 AuditEndpointレスポンス"
    },
    {
      "indent": 3,
      "text": "In the case of a successful AuditEndPoint the response line may be followed by information for each of the parameters requested - each parameter will appear on a separate line. Parameters for which no value currently exists, e.g., digit map, will still be provided but with an empty value. Each local endpoint name \"expanded\" by a wildcard character will appear on a separate line using the \"SpecificEndPointId\" parameter code, e.g.:",
      "ja": "成功AuditEndPointの場合には応答ラインは、要求されたパラメータの各々についての情報が続くことができる - 各パラメータは別々の行に表示されます。何値が現在存在しないためのパラメータは、例えば、ケタ地図は、まだが、空の値が提供されます。ワイルドカード文字で「拡大」各ローカルエンドポイント名は、例えば、「SpecificEndPointId」パラメータコードを使用して別の行に表示されます："
    },
    {
      "indent": 6,
      "text": "200 1200 OK Z: aaln/1@rgw.whatever.net Z: aaln/2@rgw.whatever.net",
      "ja": "OK 200 1200から：aaln/1@rgw.whatever.netから：aaln/2@rgw.whatever.net"
    },
    {
      "indent": 3,
      "text": "When connection identifiers are audited and multiple connections exist on the endpoint, a comma-separated list of connection identifiers SHOULD be returned as in:",
      "ja": "接続識別子が監査及び複数の接続がエンドポイントに存在している場合、接続識別子のカンマ区切りリストは同様に返されるべきです。"
    },
    {
      "indent": 6,
      "text": "200 1200 OK I: FDE234C8, DFE233D1",
      "ja": "200 1200 OK I：FDE234C8、DFE233D1"
    },
    {
      "indent": 3,
      "text": "Alternatively, multiple connection id parameter lines may be returned - the two forms should not be mixed although doing so does not constitute an error.",
      "ja": "あるいは、複数の接続IDパラメータラインが返されてもよい - そうするエラーとはならないものの、2つの形式が混合されるべきではありません。"
    },
    {
      "indent": 3,
      "text": "When capabilities are audited, the response may include multiple capabilities parameter lines as in:",
      "ja": "機能が監査された場合、応答は同様に、複数の機能パラメータの行を含めることがあります。"
    },
    {
      "indent": 6,
      "text": "200 1200 OK A: a:PCMU;G728, p:10-100, e:on, s:off, t:1, v:L, m:sendonly;recvonly;sendrecv;inactive A: a:G729, p:30-90, e:on, s:on, t:1, v:L, m:sendonly;recvonly;sendrecv;inactive;confrnce",
      "ja": "200 1200 OK A：PCMU; G728、P：10-100、E：、S上：オフ、T：1、V：L、M：sendonlyで; recvonlyで、SENDRECV;非アクティブ：G729、pは： 30-90、E：、S上：1、V：L、M、T、上sendonlyで; recvonlyで、SENDRECV;非活動; confrnce"
    },
    {
      "indent": 3,
      "text": "Note: The carriage return for Capabilities shown above is present for formatting reasons only. It is not permissible in a real command encoding.",
      "ja": "注：上に示した機能の復帰は、理由をフォーマットするために存在します。これは、実際のコマンドエンコーディングでは許されません。"
    },
    {
      "indent": 0,
      "text": "3.3.7 AuditConnection Response",
      "section_title": true,
      "ja": "3.3.7 AuditConnectionレスポンス"
    },
    {
      "indent": 3,
      "text": "In the case of a successful AuditConnection, the response may be followed by information for each of the parameters requested. Parameters for which no value currently exists will still be provided. Connection descriptors will always appear last and each will be preceded by an empty line, as for example:",
      "ja": "成功AuditConnectionの場合、応答は、要求されたパラメータの各々についての情報が続いてもよいです。何の値が現在存在しないためのパラメータは、まだ提供されます。接続記述子は、常に最後に表示され、それぞれは、例えばとして、空の行が先行されます。"
    },
    {
      "indent": 6,
      "text": "200 1203 OK C: A3C47F21456789F0 N: [128.96.41.12] L: p:10, a:PCMU;G728 M: sendrecv P: PS=622, OS=31172, PR=390, OR=22561, PL=5, JI=29, LA=50",
      "ja": "200 1203 OK C：A3C47F21456789F0 N：[128.96.41.12] L：P：10：PCMU; G728 M：のsendrecv P：PS = 622、OS = 31172、PR = 390、OR = 22561、PL = 5、JI = 29、LA = 50"
    },
    {
      "indent": 6,
      "text": "v=0 o=- 4723891 7428910 IN IP4 128.96.63.25 s=- c=IN IP4 128.96.63.25 t=0 0 m=audio 1296 RTP/AVP 96 a=rtpmap:96 G726-32/8000",
      "ja": "V = 0 0 =  -  4723891 IP4 128.96.63.25 IN 7428910 S =  -  C = IP4 IN 128.96.63.25 T = 0、M =オーディオ1296 RTP / AVP 96 = rtpmap：96 G726-32 / 8000"
    },
    {
      "indent": 3,
      "text": "If both a local and a remote connection descriptor are provided, the local connection descriptor will be the first of the two. If a connection descriptor is requested, but it does not exist for the connection audited, that connection descriptor will appear with the SDP protocol version field only (\"v=0\"), as for example:",
      "ja": "ローカルとリモートの両方の接続記述子が設けられている場合、ローカル接続記述子は、二つの最初であろう。接続記述子が要求されますが、それを監査接続のために存在しない場合は、その接続記述子は、SDPプロトコルバージョンフィールドが表示されますのみ（「V = 0」）、たとえばとして："
    },
    {
      "indent": 6,
      "text": "200 1203 OK",
      "ja": "200 1203 OK"
    },
    {
      "indent": 6,
      "text": "v=0",
      "ja": "= 0"
    },
    {
      "indent": 0,
      "text": "3.3.8 RestartInProgress Response",
      "section_title": true,
      "ja": "3.3.8 RestartInProgress応答"
    },
    {
      "indent": 3,
      "text": "A successful RestartInProgress response may include a NotifiedEntity parameter, but otherwise does not include any additional response parameters.",
      "ja": "成功したRestartInProgress応答は、NotifiedEntityパラメータを含むことができ、それ以外の任意の追加の応答パラメータが含まれていません。"
    },
    {
      "indent": 3,
      "text": "Also, a 521 response to a RestartInProgress MUST include a NotifiedEntity parameter with the name of another Call Agent to contact when the first Call Agent redirects the endpoint to another Call Agent as in:",
      "ja": "また、RestartInProgressに521応答は、最初のコールエージェントがのように別のコールエージェントにエンドポイントをリダイレクトするときに連絡するために、別のコール・エージェントの名前でNotifiedEntityパラメータを含める必要があります。"
    },
    {
      "indent": 6,
      "text": "521 1204 Redirect N: CA-1@whatever.net",
      "ja": "521 1204リダイレクトN：CA-1@whatever.net"
    },
    {
      "indent": 0,
      "text": "3.4 Encoding of the Session Description (SDP)",
      "section_title": true,
      "ja": "セッション記述（SDP）の3.4エンコーディング"
    },
    {
      "indent": 3,
      "text": "The session description (SDP) is encoded in conformance with the session description protocol, SDP. MGCP implementations are REQUIRED to be fully capable of parsing any conformant SDP message, and MUST send session descriptions that strictly conform to the SDP standard.",
      "ja": "セッション記述（SDP）は、セッション記述プロトコルSDPに準拠して符号化されます。 MGCP実装は、任意の適合SDPメッセージを解析する十分可能であることが要求され、厳密SDP規格に準拠したセッション記述を送信しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The general description and explanation of SDP parameters can be found in RFC 2327 (or its successor). In particular, it should be noted that the",
      "ja": "SDPパラメータの一般的な説明及び説明は、RFC 2327（またはその後継）に見出すことができます。特に、それは、ことに留意すべきです"
    },
    {
      "indent": 3,
      "text": "* Origin (\"o=\"),",
      "ja": "＊ おりぎん （”お＝”）、"
    },
    {
      "indent": 3,
      "text": "* Session Name (\"s=\"), and",
      "ja": "*セッション名（ \"S =\"）、および"
    },
    {
      "indent": 3,
      "text": "* Time active (\"t=\")",
      "ja": "*アクティブ時間（ \"T =\"）"
    },
    {
      "indent": 3,
      "text": "are all mandatory in RFC 2327. While they are of little use to MGCP, they MUST be provided in conformance with RFC 2327 nevertheless. The following suggests values to be used for each of the fields, however the reader is encouraged to consult RFC 2327 (or its successor) for details:",
      "ja": "彼らはMGCPにほとんど使用されているものの、すべてのRFC 2327で必須で、それにもかかわらず、それらはRFC 2327に準拠して提供されなければなりません。以下では、しかし、読者は詳細については、RFC 2327（またはその後継）を参照することが推奨され、値が各フィールドに使用することが示唆しています。"
    },
    {
      "indent": 3,
      "text": "Origin o = <username> <session id> <version> <network type> <address type> <address>",
      "ja": "原点O = <名> <セッションID> <バージョン> <ネットワークタイプ> <アドレスタイプ> <アドレス>"
    },
    {
      "indent": 3,
      "text": "* The username SHOULD be set to hyphen (\"-\").",
      "ja": "*ユーザー名は（「 - 」）、ハイフンに設定する必要があります。"
    },
    {
      "indent": 3,
      "text": "* The session id is RECOMMENDED to be an NTP timestamp as suggested in RFC 2327.",
      "ja": "*セッションIDはRFC 2327で提案されているようにNTPタイムスタンプすることを推奨します。"
    },
    {
      "indent": 3,
      "text": "* The version is a version number that MUST increment with each change to the SDP. A counter initialized to zero or an NTP timestamp as suggested in RFC 2327 is RECOMMENDED.",
      "ja": "*バージョンは、SDPへの各変化にインクリメントしなければならないバージョン番号です。 RFC 2327で提案されているように、ゼロまたはNTPタイムスタンプに初期化カウンタが推奨されます。"
    },
    {
      "indent": 3,
      "text": "* The network type defines the type of network. For RTP sessions the network type SHOULD be \"IN\".",
      "ja": "*ネットワークタイプ、ネットワークのタイプを定義します。 RTPセッションのネットワークタイプは、「IN」である必要があります。"
    },
    {
      "indent": 3,
      "text": "* The address type defines the type of address. For RTP sessions the address type SHOULD be \"IP4\" (or \"IP6\").",
      "ja": "*アドレスタイプはアドレスのタイプを定義します。 RTPセッションのアドレスタイプは「IP4」（または「IP6」）である必要があります。"
    },
    {
      "indent": 3,
      "text": "* The address SHOULD be the same address as provided in the connection information (\"c=\") field.",
      "ja": "接続情報（「C =」）フィールドで提供される*アドレスは、同じアドレスでなければなりません。"
    },
    {
      "indent": 3,
      "text": "Session Name s = <session name>",
      "ja": "セッション名S = <セッション名>"
    },
    {
      "indent": 3,
      "text": "The session name should be hyphen (\"-\").",
      "ja": "セッション名はハイフン（「 - 」）でなければなりません。"
    },
    {
      "indent": 3,
      "text": "Time active t = <start time> <stop time>",
      "ja": "時間アクティブtは= <開始時間> <停止時間>"
    },
    {
      "indent": 3,
      "text": "* The start time may be set to zero.",
      "ja": "*開始時間はゼロに設定することができます。"
    },
    {
      "indent": 3,
      "text": "* The stop time should be set to zero.",
      "ja": "*停止時間をゼロに設定する必要があります。"
    },
    {
      "indent": 3,
      "text": "Each of the three fields can be ignored upon reception.",
      "ja": "三つのフィールドのそれぞれは、受信時に無視することができます。"
    },
    {
      "indent": 3,
      "text": "To further accommodate the extensibility principles of MGCP, implementations are ENCOURAGED to support the PINT \"a=require\" attribute - please refer to RFC 2848 for further details.",
      "ja": "さらに詳細については、RFC 2848を参照してください - さらにMGCPの拡張性の原則に対応するために、実装は、属性を「=必要」PINTをサポートすることをお勧めします。"
    },
    {
      "indent": 3,
      "text": "The usage of SDP actually depends on the type of session that is being established. Below we describe usage of SDP for an audio service using the RTP/AVP profile [4], or the LOCAL interconnect defined in this document. In case of any conflicts between what is described below and SDP (RFC 2327 or its successor), the SDP specification takes precedence.",
      "ja": "SDPの使用法は、実際に確立されているセッションのタイプによって異なります。我々は、[4] RTP / AVPプロファイルを使用して音声サービスのSDPの使用を記載し、又は本文書で定義されたローカル相互接続以下。何について説明するとSDP（RFC 2327またはその後継）との間の衝突の場合に、SDP仕様が優先されます。"
    },
    {
      "indent": 0,
      "text": "3.4.1 Usage of SDP for an Audio Service",
      "section_title": true,
      "ja": "オーディオサービスのためのSDPの3.4.1使い方"
    },
    {
      "indent": 3,
      "text": "In a telephony gateway, we only have to describe sessions that use exactly one media, audio. The usage of SDP for this is straightforward and described in detail in RFC 2327.",
      "ja": "テレフォニーゲートウェイでは、我々は正確に一つのメディア、オーディオを使用するセッションを記述する必要があります。このためSDPの使用法は簡単で、RFC 2327に詳細に記載されています。"
    },
    {
      "indent": 3,
      "text": "The following is an example of an RFC 2327 conformant session description for an audio connection:",
      "ja": "以下は、音声接続のためのRFC 2327に準拠したセッション記述の例です。"
    },
    {
      "indent": 6,
      "text": "v=0 o=- A7453949499 0 IN IP4 128.96.41.1 s=- c=IN IP4 128.96.41.1 t=0 0 m=audio 3456 RTP/AVP 0 96 a=rtpmap:96 G726-32/8000",
      "ja": "V = 0 0 =  -  A7453949499 IP4 128.96.41.1 IN 0、S =  -  C = IP4 IN 128.96.41.1 T = 0、M =オーディオ3456 RTP / AVP 0 96 = rtpmap：96 G726-32 / 8000"
    },
    {
      "indent": 0,
      "text": "3.4.2 Usage of SDP for LOCAL Connections",
      "section_title": true,
      "ja": "ローカル接続のためのSDPの3.4.2使い方"
    },
    {
      "indent": 3,
      "text": "When MGCP is used to set up internal connections within a single gateway, the SDP format is used to encode the parameters of that connection. The connection and media parameters will be used as follows:",
      "ja": "MGCPは、単一のゲートウェイ内の内部接続を設定するために使用されている場合、SDPフォーマットは、その接続のパラメータを符号化するために使用されます。次のように接続し、メディアのパラメータが使用されます。"
    },
    {
      "indent": 3,
      "text": "* The connection parameter (c=) will specify that the connection is local, using the keyword \"LOCAL\" as network type, the keyword \"EPN\" (endpoint name) as address type, and the local name of the endpoint as the connection-address.",
      "ja": "*接続パラメータ（C =）はネットワークタイプとして「LOCAL」キーワードを使用して、接続がローカルであることを指定し、キーワードアドレスタイプとして「EPN」（エンドポイント名）、及びconnection-などのエンドポイントのローカル名住所。"
    },
    {
      "indent": 3,
      "text": "* The \"m=audio\" parameter will specify a port number, which will always be set to 0, the type of protocol, always set to the keyword LOCAL, and the type of encoding, using the same conventions used for the RTP AVP profile (RTP payload numbers). The type of encoding should normally be set to 0 (PCMU).",
      "ja": "*「M =オーディオ」パラメータは、RTP AVPプロファイルに使用されるのと同じ規則を使用して、常にキーワードLOCALに設定され、常に0に設定されるポート番号、プロトコルの種類、およびエンコーディングの種類を指定します（RTPペイロード番号）。符号化の種類は、通常、0（PCMU）に設定されるべきです。"
    },
    {
      "indent": 3,
      "text": "A session-level attribute identifying the connection MAY furthermore be present. This enables endpoints to support multiple LOCAL connections. Use of this attribute is OPTIONAL and indeed unnecessary for endpoints that only support a single LOCAL connection. The attribute is defined as follows:",
      "ja": "接続を識別するセッションレベル属性が更に存在しているかもしれません。これは、複数のローカル接続をサポートするために、エンドポイントを可能にします。この属性の使用はオプションと、単一のローカル接続をサポートするエンドポイントのために実際に不要です。次のように属性が定義されます。"
    },
    {
      "indent": 3,
      "text": "a=MGCPlocalcx:<ConnectionID> The MGCP Local Connection attribute is a session level only case-insensitive attribute that identifies the MGCP LOCAL connection, on the endpoint identified in the connection information, to which the SDP applies. The ConnectionId is a hexadecimal string containing at most 32 characters. The ConnectionId itself is case-insensitive. The MGCP Local Connection attribute is not subject to the charset attribute.",
      "ja": "= MGCPlocalcx <ConnectionID> MGCPローカル接続属性は、SDPが適用される接続情報で識別されたエンドポイント上のMGCPローカル接続を識別するセッションレベルのみ大文字と小文字を区別しない属性です。 ConnectionIdは、せいぜい32個の文字を含む16進数の文字列です。 ConnectionId自体は大文字と小文字を区別しません。 MGCPローカル接続の属性は、charset属性の対象ではありません。"
    },
    {
      "indent": 3,
      "text": "An example of a LOCAL session description could be:",
      "ja": "LOCALセッション記述の例は次のようになります。"
    },
    {
      "indent": 6,
      "text": "v=0 o=- A7453949499 0 LOCAL EPN X35V3+A4/13 s=- c=LOCAL EPN X35V3+A4/13 t=0 0 a=MGCPlocalcx:FDE234C8 m=audio 0 LOCAL 0",
      "ja": "V = 0 0 =  -  A7453949499 0 LOCAL EPN X35V3 + A4 / 13秒=  -  C = LOCAL EPN X35V3 + A4 / 13、T = 0、A = MGCPlocalcx：FDE234C8のM = 0オーディオLOCAL 0"
    },
    {
      "indent": 3,
      "text": "Note that the MGCP Local Connection attribute is specified at the session level and that it could have been omitted in case only a single LOCAL connection per endpoint is supported.",
      "ja": "MGCPローカル接続属性はセッションレベルで指定されており、それは場合には省略されている可能性があることのみエンドポイントごとに単一のローカル接続がサポートされていることに注意してください。"
    },
    {
      "indent": 0,
      "text": "3.5 Transmission over UDP",
      "section_title": true,
      "ja": "UDPを超える3.5伝送"
    },
    {
      "indent": 3,
      "text": "MGCP messages are transmitted over UDP. Commands are sent to one of the IP addresses defined in the DNS for the specified endpoint. The responses are sent back to the source address (i.e., IP address and UDP port number) of the commands - the response may or may not arrive from the same address as the command was sent to.",
      "ja": "MGCPメッセージはUDPを介して送信されます。コマンドは、指定されたエンドポイントのDNSで定義されたIPアドレスの1つに送信されます。応答が戻って、送信元アドレスに送信され（すなわち、IPアドレスおよびUDPポート番号）のコマンド - レスポンスは、コマンドと同じアドレスから到着してもしなくてもよいがに送られました。"
    },
    {
      "indent": 3,
      "text": "When no port is specified for the endpoint, the commands MUST by default be sent:",
      "ja": "ポートがエンドポイントに指定されていない場合、コマンドはデフォルトで送らなければなりません。"
    },
    {
      "indent": 3,
      "text": "* by the Call Agents, to the default MGCP port for gateways, 2427.",
      "ja": "*コールエージェントによる、ゲートウェイ、2427のデフォルトMGCPポートに接続します。"
    },
    {
      "indent": 3,
      "text": "* by the Gateways, to the default MGCP port for Call Agents, 2727.",
      "ja": "*ゲートウェイによって、コールエージェントのデフォルトMGCPポート、2727年に。"
    },
    {
      "indent": 0,
      "text": "3.5.1 Providing the At-Most-Once Functionality",
      "section_title": true,
      "ja": "アットほとんどワンス機能の提供3.5.1"
    },
    {
      "indent": 3,
      "text": "MGCP messages, being carried over UDP, may be subject to losses. In the absence of a timely response, commands are retransmitted. Most MGCP commands are not idempotent. The state of the gateway would become unpredictable if, for example, CreateConnection commands were executed several times. The transmission procedures MUST thus provide an \"at-most-once\" functionality.",
      "ja": "UDP上で実行されているMGCPメッセージは、損失を受ける可能性があります。タイムリーな応答がない場合には、コマンドが再送されます。ほとんどのMGCPコマンドは冪等ではありません。例えば、のCreateConnectionコマンドが複数回実行された、場合ゲートウェイの状態が予測不能になります。伝送手順は、このように、「最大1回」の機能を提供しなければなりません。"
    },
    {
      "indent": 3,
      "text": "MGCP entities are expected to keep in memory a list of the responses that they sent to recent transactions, and a list of the transactions that are currently being executed. The numerical value of transaction identifiers of incoming commands are compared to the transaction identifiers of the recent responses. If a match is found, the MGCP entity does not execute the transaction again, but simply resends the response. The remaining commands will be compared to the list of current transactions, i.e., transactions received previously which have not yet finished executing. If a match is found, the MGCP entity does not execute the transaction again, but a provisional response (Section 3.5.5) SHOULD be issued to acknowledge receipt of the command.",
      "ja": "MGCP実体はメモリに、彼らは最近の取引に送られた応答のリスト、および現在実行されているトランザクションのリストを維持することが期待されています。受信コマンドのトランザクション識別子の数値は、最近の応答のトランザクション識別子と比較されています。一致が見つかった場合、MGCP実体は再び取引を実行、単に応答を再送しません。残りのコマンドは、現在のトランザクションのリスト、まだ実行を終了していない以前に受信即ち、取引に比較されます。一致が見つかった場合、MGCP実体は再び取引を実行しませんが、暫定応答（セクション3.5.5）は、コマンドの受信を確認するために発行する必要があります。"
    },
    {
      "indent": 3,
      "text": "The procedure uses a long timer value, noted T-HIST in the following. The timer MUST be set larger than the maximum duration of a transaction, which MUST take into account the maximum number of repetitions, the maximum value of the repetition timer and the maximum propagation delay of a packet in the network. A suggested value is 30 seconds.",
      "ja": "手順が長いタイマ値を使用して、次のようにT-HISTを指摘しました。タイマーは、アカウントに最大繰り返し回数、繰り返しタイマの最大値と、ネットワーク内のパケットの最大伝播遅延を取らなければならない取引の最大継続時間よりも大きく設定されなければなりません。推奨値は30秒​​です。"
    },
    {
      "indent": 3,
      "text": "The copy of the responses MAY be destroyed either T-HIST seconds after the response is issued, or when the gateway (or the Call Agent) receives a confirmation that the response has been received, through the \"Response Acknowledgement\". For transactions that are acknowledged through this attribute, the gateway SHALL keep a copy of the transaction-id (as opposed to the entire transaction response) for T-HIST seconds after the response is issued, in order to detect and ignore duplicate copies of the transaction request that could be produced by the network.",
      "ja": "応答が発行された後、またはゲートウェイ（またはコールエージェント）が「レスポンス謝辞」を通じて、応答が受信されたことの確認を受信したときの応答のコピーは、どちらかのT-HIST秒破壊されることがあります。応答が発行された後、この属性によって承認されるトランザクションの場合、ゲートウェイは、の重複コピーを検出し、無視するためには、T-HIST秒間（トランザクション全体の応答ではなく）トランザクションIDのコピーを保管するものネットワークによって生成することができるトランザクション要求。"
    },
    {
      "indent": 0,
      "text": "3.5.2 Transaction Identifiers and Three Ways Handshake",
      "section_title": true,
      "ja": "3.5.2トランザクション識別子とスリーウェイハンドシェイク"
    },
    {
      "indent": 3,
      "text": "Transaction identifiers are integer numbers in the range from 1 to 999,999,999 (both included). Call-agents may decide to use a specific number space for each of the gateways that they manage, or to use the same number space for all gateways that belong to some arbitrary group. Call agents may decide to share the load of managing a large gateway between several independent processes. These processes MUST then share the transaction number space. There are multiple possible implementations of this sharing, such as having a centralized allocation of transaction identifiers, or pre-allocating non-overlapping ranges of identifiers to different processes. The implementations MUST guarantee that unique transaction identifiers are allocated to all transactions that originate from a logical call agent, as defined in Section 4. Gateways can simply detect duplicate transactions by looking at the transaction identifier only.",
      "ja": "トランザクション識別子は、（両方を含む）1から999,999,999の範囲の整数です。コールエージェントは、彼らが管理するゲートウェイごとに特定の数のスペースを使用するように決定することができる、またはいくつかの任意のグループに属するすべてのゲートウェイに同じ数のスペースを使用します。コールエージェントは、いくつかの独立したプロセス間で大規模なゲートウェイを管理する負荷を共有するように決定することができます。これらのプロセスは、トランザクション数のスペースを共有しなければなりません。そのようなトランザクション識別子の集中配分を有する、または異なるプロセスの識別子の重複しない範囲を予め割り当て、この共有の複数の可能な実装が存在します。実装は、単純にのみトランザクション識別子を見て、重複するトランザクションを検出することができ、セクション4.ゲートウェイで定義されている固有のトランザクション識別子は、論理的なコールエージェントから発信すべてのトランザクションに割り当てられていることを保証しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The Response Acknowledgement Attribute can be found in any command. It carries a set of \"confirmed transaction-id ranges\" for final responses received - provisional responses MUST NOT be confirmed. A given response SHOULD NOT be confirmed in two separate messages.",
      "ja": "レスポンス謝辞属性は、任意のコマンドで見つけることができます。暫定応答が確認されてはならない - それは受け取った最終応答の「確認トランザクションIDの範囲」のセットを運びます。与えられた応答は、2つの別々のメッセージで確認されるべきではありません。"
    },
    {
      "indent": 3,
      "text": "MGCP entities MAY choose to delete the copies of the responses (but not the transaction-id) to transactions whose id is included in \"confirmed transaction-id ranges\" received in the Response Confirmation messages (command or response). They SHOULD then silently discard further commands from that entity when the transaction-id falls within these ranges, and the response was issued less than T-HIST seconds ago.",
      "ja": "MGCP実体は、ID応答確認メッセージ（コマンドまたは応答）で受信した「確認トランザクションIDの範囲」に含まれている取引に対する応答のコピー（ただしトランザクションID）を削除することを選択するかもしれません。トランザクションIDがこれらの範囲内にあると、応答はT-HIST秒未満前に発行されたとき、彼らはその後、静かにその実体からさらなるコマンドを捨てるべきです。"
    },
    {
      "indent": 3,
      "text": "Entities MUST exercise due caution when acknowledging responses. In particular, a response SHOULD only be acknowledged if the response acknowledgement is sent to the same entity as the corresponding command (i.e., the command whose response is being acknowledged) was sent to.",
      "ja": "応答を認めるときエンティティは十分な注意を払う必要があります。応答確認を、対応するコマンドと同じエンティティに送信される場合、特に、応答のみ認められるべき（即ち、その応答確認応答されているコマンドが）に送られました。"
    },
    {
      "indent": 3,
      "text": "Likewise, entities SHOULD NOT blindly accept a response acknowledgement for a given response. However it is considered safe to accept a response acknowledgement for a given response, when that response acknowledgement is sent by the same entity as the command that generated that response.",
      "ja": "同様に、エンティティは盲目的に与えられた応答のための応答確認を受け入れるべきではありません。しかし、その応答確認は、その応答を生成したコマンドと同じエンティティによって送信される所定の応答のための応答確認を受け入れることは安全であると考えられます。"
    },
    {
      "indent": 3,
      "text": "It should be noted, that use of response acknowledgments in commands (as opposed to the Response Acknowledgement response following a provisional response) is OPTIONAL. The benefit of using it is that it reduces overall memory consumption. However, in order to avoid large messages, implementations SHOULD NOT generate large response acknowledgement lists. One strategy is to manage responses to commands on a per endpoint basis. A command for an endpoint can confirm a response to an older command for that same endpoint. Responses to commands with wildcarded endpoint names can be confirmed selectively with due consideration to message sizes, or alternatively simply not be acknowledged (unless the response explicitly required a Response Acknowledgement). Care must be taken to not confirm the same response twice or a response that is more than T-HIST seconds old.",
      "ja": "なお、（暫定的な応答次の応答確認応答とは対照的に）コマンドに応答肯定応答の使用は任意です。それを使用する利点は、それが全体的なメモリ消費量を減少させることです。しかし、大規模なメッセージを避けるために、実装は大規模な応答確認リストを生成するべきではありません。 1つの戦略は、エンドポイントごとにコマンドへの応答を管理することです。エンドポイントのコマンドは、同じエンドポイントの古いコマンドへの応答を確認することができます。ワイルドカードを使ったエンドポイントの名前を持つコマンドへの応答は、メッセージサイズを考慮して選択的に確認することができ、または（応答が明示的に応答承認を必要としない限り）その代わりに、単純に認められません。ケアは二度同じ応答またはT-HIST秒よりも古い応答を確認しないように注意する必要があります。"
    },
    {
      "indent": 3,
      "text": "The \"confirmed transaction-id ranges\" values SHALL NOT be used if more than T-HIST seconds have elapsed since the entity issued its last response to the other entity, or when an entity resumes operation. In this situation, commands MUST be accepted and processed, without any test on the transaction-id.",
      "ja": "エンティティが他のエンティティ、またはときエンティティが動作を再開への最後の応答を発行したので、T-HIST以上秒経過した場合の値を使用してはならない「を確認し、トランザクションIDが及びます」。このような状況では、コマンドは、トランザクションIDのいずれかのテストなしで、受け入れ、処理しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Commands that carry the \"Response Acknowledgement attribute\" may be transmitted in disorder. The union of the \"confirmed transaction-id ranges\" received in recent messages SHALL be retained.",
      "ja": "「応答承認属性を」運ぶコマンドは、障害で送信することができます。最近のメッセージで受信した「確認トランザクションIDの範囲」の組合は保持されなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.5.3 Computing Retransmission Timers",
      "section_title": true,
      "ja": "3.5.3コンピューティングの再送信タイマー"
    },
    {
      "indent": 3,
      "text": "It is the responsibility of the requesting entity to provide suitable time outs for all outstanding commands, and to retry commands when time outs have been exceeded. Furthermore, when repeated commands fail to be acknowledged, it is the responsibility of the requesting entity to seek redundant services and/or clear existing or pending associations.",
      "ja": "これは、未処理のコマンドすべてに対して適切なタイムアウトを提供するために、およびタイムアウトを超過したときにコマンドを再試行する要求エンティティの責任です。繰り返しコマンドが承認されるに失敗したときにさらに、冗長なサービスおよび/または明確な既存または保留中の関連付けを求める要求エンティティの責任です。"
    },
    {
      "indent": 3,
      "text": "The specification purposely avoids specifying any value for the retransmission timers. These values are typically network dependent. The retransmission timers SHOULD normally estimate the timer by measuring the time spent between the sending of a command and the return of the first response to the command. At a minimum, a retransmission strategy involving exponential backoff MUST be implemented. One possibility is to use the algorithm implemented in TCP/IP, which uses two variables:",
      "ja": "仕様は意図的に、再送タイマーの任意の値を指定することが回避されます。これらの値は、一般的に依存して、ネットワークされています。再送タイマーは通常、コマンドの送信やコマンドの最初の応答の復帰の間で過ごした時間を測定することにより、タイマーを推定すべきです。最低でも、指数バックオフを伴う再送戦略を実装する必要があります。一つの可能​​性は、2つの変数を使用してTCP / IPで実装されたアルゴリズムを使用することです："
    },
    {
      "indent": 3,
      "text": "* the average acknowledgement delay, AAD, estimated through an exponentially smoothed average of the observed delays,",
      "ja": "*平均肯定応答遅延、AAD、観察された遅延の指数関数的平滑化平均によって推定、"
    },
    {
      "indent": 3,
      "text": "* the average deviation, ADEV, estimated through an exponentially smoothed average of the absolute value of the difference between the observed delay and the current average.",
      "ja": "観測された遅延と現在の平均値との差の絶対値の指数関数的平滑化平均によって推定*平均偏差、ADEV、。"
    },
    {
      "indent": 3,
      "text": "The retransmission timer, RTO, in TCP, is set to the sum of the average delay plus N times the average deviation, where N is a constant. In MGCP, the maximum value of the timer SHOULD however be bounded, in order to guarantee that no repeated packet will be received by the gateways after T-HIST seconds. A suggested maximum value for RTO (RTO-MAX) is 4 seconds. Implementers SHOULD consider bounding the minimum value of this timer as well [19].",
      "ja": "再送タイマ、RTOは、TCPに、平均遅延とNが一定でN回平均偏差、の和に設定されています。 MGCPでは、タイマーの最大値は、どんなに繰り返しパケットがT-HIST秒後にゲートウェイによって受け取られないことを保証するために、制限されるべきです。 RTO（RTO-MAX）の推奨最大値は4秒です。実装者は、同様に[19]、このタイマーの最小値をバウンディング検討すべきです。"
    },
    {
      "indent": 3,
      "text": "After any retransmission, the MGCP entity SHOULD do the following:",
      "ja": "任意の再送信後、MGCP実体は、次のことを行う必要があります。"
    },
    {
      "indent": 3,
      "text": "* It should double the estimated value of the acknowledgement delay for this transaction, T-DELAY.",
      "ja": "*これは、このトランザクションの確認応答遅延、T-DELAYの推定値を倍にする必要があります。"
    },
    {
      "indent": 3,
      "text": "* It should compute a random value, uniformly distributed between 0.5 T-DELAY and T-DELAY.",
      "ja": "*これは、一様に0.5 T-DELAYおよびT-DELAYの間に分布する乱数値を計算しなければなりません。"
    },
    {
      "indent": 3,
      "text": "* It should set the retransmission timer (RTO) to the minimum of: - the sum of that random value and N times the average deviation, - RTO-MAX.",
      "ja": "その乱数値の和とN回平均偏差、 -   -  RTO-MAX：*これは、最小に再送信タイマー（RTO）を設定しなければなりません。"
    },
    {
      "indent": 3,
      "text": "This procedure has two effects. Because it includes an exponentially increasing component, it will automatically slow down the stream of messages in case of congestion. Because it includes a random component, it will break the potential synchronization between notifications triggered by the same external event.",
      "ja": "この手順は、2つの効果があります。それは指数関数的に増加する成分を含むため、それは自動的に、輻輳の場合のメッセージの流れを遅くします。それはランダム成分を含んでいるので、それは同じ外部イベントによってトリガ通知の間の潜在的な同期を中断します。"
    },
    {
      "indent": 3,
      "text": "Note that the estimators AAD and ADEV SHOULD NOT be updated for transactions that involve retransmissions. Also, the first new transmission following a successful retransmission SHOULD use the RTO for that last retransmission. If this transmission succeeds without any retransmissions, the AAD and ADEV estimators are updated and RTO is determined as usual again. See, e.g., [18] for further details.",
      "ja": "推定のAADとADEVは再送を伴う取引のために更新されるべきではないことに注意してください。また、成功した再送信の後の最初の新しいトランスミッションはその最後の再送信のためのRTOを使用すべきです。この送信は、任意の再送信せずに成功した場合は、AADとADEV推定が更新され、RTOは再びいつものように決定されます。例えば、[18]詳細については、参照。"
    },
    {
      "indent": 0,
      "text": "3.5.4 Maximum Datagram Size, Fragmentation and Reassembly",
      "section_title": true,
      "ja": "3.5.4最大データグラムサイズ、フラグメンテーションおよび再構成"
    },
    {
      "indent": 3,
      "text": "MGCP messages being transmitted over UDP rely on IP for fragmentation and reassembly of large datagrams. The maximum theoretical size of an IP datagram is 65535 bytes. With a 20-byte IP header and an 8- byte UDP header, this leaves us with a maximum theoretical MGCP message size of 65507 bytes when using UDP.",
      "ja": "UDPを介して送信されているMGCPメッセージは、大規模なデータグラムの断片化と再構築のためのIPに依存しています。 IPデータグラムの理論上の最大サイズは65535バイトです。 20バイトのIPヘッダーと8バイトのUDPヘッダで、これはUDPを使用して65507バイトの最大理論MGCPメッセージサイズを私たちに残します。"
    },
    {
      "indent": 3,
      "text": "However, IP does not require a host to receive IP datagrams larger than 576 bytes [21], which would provide an unacceptably small MGCP message size. Consequently, MGCP mandates that implementations MUST support MGCP datagrams up to at least 4000 bytes, which requires the corresponding IP fragmentation and reassembly to be supported. Note, that the 4000 byte limit applies to the MGCP level. Lower layer overhead will require support for IP datagrams that are larger than this: UDP and IP overhead will be at least 28 bytes, and, e.g., use of IPSec will add additional overhead.",
      "ja": "しかし、IPは許容できないほど小さなMGCPメッセージサイズを提供する576バイト[21]、より大きいIPデータグラムを受信するためにホストを必要としません。これにより、実装がMGCPをサポートしなければならないMGCPの任務をサポートすることに対応するIPフラグメンテーションと再組立を必要とする、少なくとも4000バイトまでのデータグラム。 4000バイトの制限がMGCPレベルに適用されることに、注意してください。 UDPおよびIPのオーバーヘッドは、IPSecの使用は、追加のオーバーヘッドが追加され、例えば、少なくとも28バイトであり、そしてう：下層オーバーヘッドはこれより大きいIPデータグラムのためのサポートを必要とするであろう。"
    },
    {
      "indent": 3,
      "text": "It should be noted, that the above applies to both Call Agents and endpoints. Call Agents can audit endpoints to determine if they support larger MGCP datagrams than specified above. Endpoints do currently not have a similar capability to determine if a Call Agent supports larger MGCP datagram sizes.",
      "ja": "上記のコールエージェントとエンドポイントの両方に適用されることに留意すべきです。コールエージェントは、上記の指定よりも大きなMGCPデータグラムをサポートするかどうかを判断するために、エンドポイントを監査することができます。エンドポイントは、現在のコールエージェントが大きなMGCPデータグラムサイズをサポートしているかどうかを決定するために同様の機能を持っていません。"
    },
    {
      "indent": 0,
      "text": "3.5.5 Piggybacking",
      "section_title": true,
      "ja": "3.5.5ピギーバック"
    },
    {
      "indent": 3,
      "text": "There are cases when a Call Agent will want to send several messages at the same time to the same gateways, and vice versa. When several MGCP messages have to be sent in the same datagram, they MUST be separated by a line of text that contains a single dot, as in for example:",
      "ja": "コールエージェントはその逆の同じゲートウェイに同時にいくつかのメッセージを送信したい、とします場合があります。いくつかのMGCPメッセージは、同じデータグラムで送信されるようにしている場合は、それらは例えばのように、単一のドットを含むテキストの行で区切らなければなりません："
    },
    {
      "indent": 6,
      "text": "200 2005 OK . DLCX 1244 card23/21@tgw-7.example.net MGCP 1.0 C: A3C47F21456789F0 I: FDE234C8",
      "ja": "200 2005 OK。 DLCX 1244 card23/21@tgw-7.example.net MGCP 1.0 C：A3C47F21456789F0 I：FDE234C8"
    },
    {
      "indent": 3,
      "text": "The piggybacked messages MUST be processed exactly as if they had been received one at a time in several separate datagrams. Each message in the datagram MUST be processed to completion and in order starting with the first message, and each command MUST be responded to. Errors encountered in a message that was piggybacked MUST NOT affect any of the other messages received in that datagram - each message is processed on its own.",
      "ja": "彼らはいくつかの個別のデータグラムに一度に一つの受信されたかのように便乗したメッセージは正確に処理しなければなりません。データグラム内の各メッセージは、最初のメッセージで始まる完了するまで、順番に処理しなければなりません、そして各コマンドがに応答しなければなりません。背負われたメッセージに発生したエラーは、そのデータグラムに受信した他のメッセージのいずれかに影響してはいけません - 各メッセージが独自に処理されます。"
    },
    {
      "indent": 3,
      "text": "Piggybacking can be used to achieve two things:",
      "ja": "ピギーバックは2つのことを達成するために使用することができます。"
    },
    {
      "indent": 3,
      "text": "* Guaranteed in-order delivery and processing of messages.",
      "ja": "*メッセージの順序どおりの配信および処理を保証。"
    },
    {
      "indent": 3,
      "text": "* Fate sharing of message delivery.",
      "ja": "*メッセージ配信の運命を共有します。"
    },
    {
      "indent": 3,
      "text": "When piggybacking is used to guarantee in-order delivery of messages, entities MUST ensure that this in-order delivery property is retained on retransmissions of the individual messages. An example of this is when multiple Notify's are sent using piggybacking (as described in Section 4.4.1).",
      "ja": "メッセージの順序どおりの配信を保証するために使用される便乗すると、エンティティはこの順序どおりの配信プロパティは、個々のメッセージの再送信に保持されていることを確認しなければなりません。複数（セクション4.4.1で説明したように）ピギーバック使用して送信されるのに通知すると、この例です。"
    },
    {
      "indent": 3,
      "text": "Fate sharing of message delivery ensures that either all the messages are delivered, or none of them are delivered. When piggybacking is used to guarantee this fate-sharing, entities MUST also ensure that this property is retained upon retransmission. For example, upon receiving a Notify from an endpoint operating in lockstep mode, the Call Agent may wish to send the response and a new NotificationRequest command in a single datagram to ensure message delivery fate-sharing of the two.",
      "ja": "メッセージ配信の運命共有は、すべてのメッセージのいずれかが配信されている、またはそれらのどれも配信されていないことを保証します。この運命共有を保証するために使用される便乗すると、エンティティはまた、このプロパティは、再送信時に保持されることを保証しなければなりません。例えば、ロックステップモードで動作しているエンドポイントからの通知受信すると、コールエージェントは、2のメッセージ配信の運命共有を確実にするために、単一のデータグラムに応答して、新しいNotificationRequestコマンドを送信することもできます。"
    },
    {
      "indent": 0,
      "text": "3.5.6 Provisional Responses",
      "section_title": true,
      "ja": "3.5.6暫定応答"
    },
    {
      "indent": 3,
      "text": "Executing some transactions may require a long time. Long execution times may interact with the timer based retransmission procedure.",
      "ja": "一部のトランザクションを実行すると、長い時間が必要になる場合があります。長い実行時間は、タイマーベースの再送手順と相互作用することができます。"
    },
    {
      "indent": 3,
      "text": "This may result either in an inordinate number of retransmissions, or in timer values that become too long to be efficient.",
      "ja": "これは、再送信の法外な数で、または効率的であるには余りにも長くなるタイマ値のいずれかになることがあります。"
    },
    {
      "indent": 3,
      "text": "Gateways (and Call Agents) that can predict that a transaction will require a long execution time SHOULD send a provisional response with response code 100. As a guideline, a transaction that requires external communication to complete, e.g., network resource reservation, SHOULD issue a provisional response. Furthermore entities SHOULD send a provisional response if they receive a repetition of a transaction that has not yet finished executing.",
      "ja": "ゲートウェイ（とコールエージェント）例えばガイドラインとして応答コード100、完了するために、外部との通信を必要とする取引、との暫定的な応答を送るべきトランザクションが長い実行時間を必要とするであろうことを予測することができ、ネットワークリソースの予約は、発行する必要があります暫定応答。彼らはまだ実行を終了していないトランザクションの反復を受ける場合はさらに、実体は暫定応答を送信すべきです。"
    },
    {
      "indent": 3,
      "text": "Gateways (or Call Agents) that start building up queues of transactions to be executed may send a provisional response with response code 101 to indicate this (see Section 4.4.8 for further details).",
      "ja": "実行されるトランザクションのキューを構築し始めるゲートウェイ（またはコールエージェント）が（詳細については、セクション4.4.8を参照）、これを示すために応答コード101で暫定レスポンスを送信することができます。"
    },
    {
      "indent": 3,
      "text": "Pure transactional semantics would imply, that provisional responses SHOULD NOT return any other information than the fact that the transaction is currently executing, however an optimistic approach allowing some information to be returned enables a reduction in the delay that would otherwise be incurred in the system.",
      "ja": "純粋なトランザクション・セマンティクスは、暫定応答は、トランザクションが現在しかし、いくつかの情報を返すことができるように楽観的なアプローチは、それ以外のシステムで発生することとなる遅延を低減することができる、実行されているという事実以外の情報を返すべきではないこと、暗示します。"
    },
    {
      "indent": 3,
      "text": "In order to reduce the delay in the system, it is RECOMMENDED to include a connection identifier and session description in a 100 provisional response to the CreateConnection command. If a session description would be returned by the ModifyConnection command, the session description SHOULD be included in the provisional response here as well. If the transaction completes successfully, the information returned in the provisional response MUST be repeated in the final response. It is considered a protocol error not to repeat this information or to change any of the previously supplied information in a successful response. If the transaction fails, an error code is returned - the information returned previously is no longer valid.",
      "ja": "システムの遅延を低減するために、それのCreateConnectionコマンド100暫定応答におけるコネクション識別子及びセッション記述を含むことが推奨されます。セッション記述はModifyConnectionコマンドによって返される場合は、セッション記述は、ここにも暫定応答に含まれるべきです。トランザクションが正常に完了した場合、暫定応答で返された情報は、最終的な応答で繰り返さなければなりません。プロトコルエラーがこの情報を繰り返すか、正常な応答で以前に提供された情報を変更することはないと考えられています。トランザクションが失敗した場合、エラーコードが返されません - 以前に返された情報は、もはや有効です。"
    },
    {
      "indent": 3,
      "text": "A currently executing CreateConnection or ModifyConnection transaction MUST be cancelled if a DeleteConnection command for the endpoint is received. In that case, a final response for the cancelled transaction SHOULD still be returned automatically (error code 407 - transaction aborted, is RECOMMENDED), and a final response for the cancelled transaction MUST be returned if a retransmission of the cancelled transaction is detected (see also Section 4.4.4).",
      "ja": "エンドポイントのDeleteConnectionコマンドが受信された場合、現在実行中のCreateConnectionまたはModifyConnectionトランザクションが取り消されなければなりません。 （参照 - （トランザクションが中止推奨されているエラーコード407）、及びキャンセルトランザクションの再送信が検出された場合キャンセルトランザクションの最終的な応答が返されなければならないという場合には、キャンセルトランザクションの最終的な応答は、依然として自動的に返されるべきですまた、4.4.4項）。"
    },
    {
      "indent": 3,
      "text": "MGCP entities that receive a provisional response SHALL switch to a longer repetition timer (LONGTRAN-TIMER) for that transaction. The purpose of this timer is primarily to detect processing failures. The default value of LONGTRAN-TIMER is 5 seconds, however the provisioning process may alter this. Note, that retransmissions MUST still satisfy the timing requirements specified in Section 3.5.1 and 3.5.3. Consequently LONGTRAN-TIMER MUST be smaller than T-HIST (it should in fact be considerably smaller). Also, entities MUST NOT let a transaction run forever. A transaction that is timed out by the entity SHOULD return error code 406 (transaction time-out). Per the definition of T-HIST (Section 3.5.1), the maximum transaction execution time is smaller than T-HIST (in a network with low delay, it can reasonably safely be approximated as T-HIST minus T-MAX), and a final response should be received no more than T-HIST seconds after the command was sent initially. Nevertheless, entities SHOULD wait for 2*T-HIST seconds before giving up on receiving a final response. Retransmission of the command MUST still cease after T-MAX seconds though. If a response is not received, the outcome of the transaction is not known. If the entity sending the command was a gateway, it now becomes \"disconnected\" and SHALL initiate the \"disconnected\" procedure (see Section 4.4.7).",
      "ja": "暫定応答を受け取るMGCP実体は、そのトランザクションのための長い繰り返しタイマー（LONGTRAN-TIMER）に切り替えるものとします。このタイマーの目的は、処理の障害を検出することが主です。 LONGTRAN-TIMERのデフォルト値は、しかしながら、プロビジョニング・プロセスがこれを変更することができる、5秒です。再送がまだセクション3.5.1および3.5.3で指定されたタイミング要件を満足しなければならないことに注意してください。したがってLONGTRAN-TIMERは、T-HIST（それは実際にはかなり小さくなければならない）よりも小さくなければなりません。また、エンティティは永遠に実行し、取引をさせてはなりません。エンティティによってタイムアウトしたトランザクションはエラーコード406（トランザクションタイムアウト）を返すべきです。 T-HIST（セクション3.5.1）の定義に従って、最大トランザクションの実行時間はT-HISTよりも小さい（低い遅延を有するネットワークにおいて、それは合理的に安全にT-HISTマイナスT-MAXのように近似することができる）、およびコマンドが最初に送られた後に最終的な応答は、T-HIST秒以下で受け取ってはなりません。それにもかかわらず、実体は、最終的な応答を受信するとあきらめる前に、2 * T-HIST秒待つ必要があります。コマンドの再送信はまだかかわらず、T-MAX秒後に停止する必要があります。応答が受信されない場合は、トランザクションの結果が知られていません。コマンドを送信するエンティティはゲートウェイであった場合、それは今、「切断」になり、「切断」手順（セクション4.4.7を参照）を開始しなければなりません。"
    },
    {
      "indent": 3,
      "text": "When the transaction finishes execution, the final response is sent and the by now obsolete provisional response is deleted. In order to ensure rapid detection of a lost final response, final responses issued after provisional responses for a transaction SHOULD be acknowledged (unfortunately older RFC 2705 implementations may not do this, which is the only reason it is not an absolute requirement).",
      "ja": "トランザクションの実行が終了すると、最終的な応答が送信され、今では時代遅れの暫定応答が削除されます。失われた最終的な応答の迅速な検出を確実にするためには、トランザクションのための暫定応答の後に発行され、最終的な応答が認められるべきである（残念ながら、古いRFC 2705個の実装が、それは絶対的な要件ではない唯一の理由であるこれをしない場合があります）。"
    },
    {
      "indent": 3,
      "text": "The endpoint SHOULD therefore include an empty \"ResponseAck\" parameter in those, and only those, final responses. The presence of the \"ResponseAck\" parameter in the final response SHOULD trigger a \"Response Acknowledgement\" response to be sent back to the endpoint. The Response Acknowledgement\" response will then include the transaction-id of the response it acknowledges in the response header. Note that, for backwards compatibility, entities cannot depend on receiving such a \"response acknowledgement\", however it is strongly RECOMMENDED to support this behavior, as excessive delays in case of packet loss as well as excessive retransmissions may occur otherwise.",
      "ja": "エンドポイントは、したがって、それらの空き「ResponseAck」パラメータ、およびのみ、最終的な応答を含むべきです。 「応答承認」応答をトリガすべき最終的な応答で「ResponseAck」パラメータの存在は、バックエンドポイントに送信されます。レスポンス謝辞」応答が、それはレスポンスヘッダに認め応答のトランザクションIDが含まれます。後方互換性のために、エンティティは、そのような受信に依存することはできません、なお、 『応答確認』を、しかし、強く、この動作をサポートするために推奨されます、パケットロスの場合のように過度の遅延、ならびに過剰な再送信は、そうでなければ発生する可能性があります。"
    },
    {
      "indent": 3,
      "text": "Receipt of a \"Response Acknowledgement\" response is subject to the same time-out and retransmission strategies and procedures as responses to commands, i.e., the sender of the final response will retransmit it if a \"Response Acknowledgement\" is not received in time. For backwards compatibility, failure to receive a \"response acknowledgement\" SHOULD NOT affect the roundtrip time estimates for subsequent commands, and furthermore MUST NOT lead to the endpoint becoming \"disconnected\". The \"Response Acknowledgment\" response is never acknowledged.",
      "ja": "「応答確認応答は」時間内に受信されない場合は、「応答承認」応答の領収書は、コマンドへの応答と同じタイムアウトと再送戦略と手順の対象となる、すなわち、最終的な応答の送信者は、それを再送します。下位互換性のために、「応答確認」を受信するための失敗は、後続のコマンドの往復時間の見積もりに影響を与えるべきではない、さらには「切断」になってきたエンドポイントにつながるなりません。 「応答承認」応答は認めません。"
    },
    {
      "indent": 0,
      "text": "4. States, Failover and Race Conditions",
      "section_title": true,
      "ja": "4.米国、フェイルオーバーと競合状態"
    },
    {
      "indent": 3,
      "text": "In order to implement proper call signaling, the Call Agent must keep track of the state of the endpoint, and the gateway must make sure that events are properly notified to the Call Agent. Special conditions exist when the gateway or the Call Agent are restarted: the gateway must be redirected to a new Call Agent during \"failover\" procedures, the Call Agent must take special action when the gateway is taken offline, or restarted.",
      "ja": "適切なコールシグナリングを実現するためには、コールエージェントは、エンドポイントの状態を追跡する必要があり、およびゲートウェイは、イベントが正常にコールエージェントに通知されていることを確認する必要があります。ゲートウェイやコールエージェントが再起動されている場合には、特別な条件が存在します。ゲートウェイは、「フェイルオーバー」手続き中に新しいコール・エージェントにリダイレクトする必要があり、コールエージェントは、ゲートウェイがオフラインになった、または再起動する特別な行動を取る必要があります。"
    },
    {
      "indent": 0,
      "text": "4.1 Failover Assumptions and Highlights",
      "section_title": true,
      "ja": "4.1フェイルオーバーの前提とハイライト"
    },
    {
      "indent": 3,
      "text": "The following protocol highlights are important to understanding Call Agent fail-over mechanisms:",
      "ja": "次のプロトコルのハイライトは、コールエージェントのフェールオーバーメカニズムを理解する上で重要です。"
    },
    {
      "indent": 3,
      "text": "* Call Agents are identified by their domain name (and optional port), not their network addresses, and several addresses can be associated with a domain name.",
      "ja": "*コールエージェントは、そのドメイン名（およびオプションのポート）、ではない彼らのネットワークアドレスで識別され、そしていくつかのアドレスは、ドメイン名に関連付けることができます。"
    },
    {
      "indent": 3,
      "text": "* An endpoint has one and only one Call Agent associated with it at any given point in time. The Call Agent associated with an endpoint is the current value of the \"notified entity\". The \"notified entity\" determines where the gateway will send it's commands. If the \"notified entity\" does not include a port number, the default Call Agent port number (2727) is assumed.",
      "ja": "*エンドポイントは、任意の時点でそれに関連付けられている、唯一のコールエージェントを持っています。エンドポイントに関連付けられたコールエージェントは「通知実体」の現在の値です。ゲートウェイはそれのコマンドを送信する場所を「通知実体は」を決定します。 「通知エンティティは、」ポート番号が含まれていない場合は、デフォルトのコールエージェントのポート番号（2727）が想定されます。"
    },
    {
      "indent": 3,
      "text": "* NotifiedEntity is a parameter sent by the Call Agent to the gateway to set the \"notified entity\" for the endpoint.",
      "ja": "* NotifiedEntityは、エンドポイントのために、「通知実体」を設定するゲートウェイにコールエージェントによって送信されるパラメータです。"
    },
    {
      "indent": 3,
      "text": "* The \"notified entity\" for an endpoint is the last value of the NotifiedEntity parameter received for this endpoint. If no explicit NotifiedEntity parameter has ever been received, the \"notified entity\" defaults to a provisioned value. If no value was provisioned or an empty NotifiedEntity parameter was provided (both strongly discouraged) thereby making the \"notified entity\" empty, the \"notified entity\" is set to the source address of the last non-audit command for the endpoint. Thus auditing will not change the \"notified entity\".",
      "ja": "*エンドポイントのための「通知の実体は」このエンドポイントのために受信NotifiedEntityパラメータの最後の値です。明示的なNotifiedEntityパラメータは、これまでに受信されていない場合、プロビジョニング値にデフォルトで「実体の通知」。 （両方とも強く推奨）値がプロビジョニングされなかったまたは空のNotifiedEntityパラメータが提供された場合、それによって作る「通知されたエンティティ」空「通知エンティティは、」エンドポイントの最後の非監査コマンドの送信元アドレスに設定されています。したがって、監査は「通知実体を」変更されません。"
    },
    {
      "indent": 3,
      "text": "* Responses to commands are sent to the source address of the command, regardless of the current \"notified entity\". When a Notify message needs to be piggybacked with the response, the datagram is still sent to the source address of the new command received, regardless of the current \"notified entity\".",
      "ja": "*コマンドへの応答にかかわらず、現在の「通知の実体」の、コマンドの送信元アドレスに送信されます。通知メッセージが応答でピギーバックする必要がある場合、データグラムはまだかかわらず、現在の「通知の実体」の、受信した新たなコマンドの送信元アドレスに送信されます。"
    },
    {
      "indent": 3,
      "text": "The ability for the \"notified entity\" to resolve to multiple network addresses, allows a \"notified entity\" to represent a Call Agent with multiple physical interfaces on it and/or a logical Call Agent made up of multiple physical systems. The order of network addresses when a DNS name resolves to multiple addresses is non-deterministic so Call Agent fail-over schemes MUST NOT depend on any order (e.g., a gateway MUST be able to send a \"Notify\" to any of the resolved network addresses). On the other hand, the system is likely to be most efficient if the gateway sends commands to the interface with which it already has a current association. It is RECOMMENDED that gateways use the following algorithm to achieve that goal:",
      "ja": "複数のネットワーク・アドレスに解決するには、「通知実体」の能力は、「通知実体は」その上に、複数の物理インターフェイスおよび/または論理的なコールエージェントで複数の物理システムで構成されたコール・エージェントを表現することができます。コールエージェントフェイルオーバスキームは例えば、ゲートウェイが解決ネットワークのいずれかに「通知」送信できる必要があります（任意の順序に依存してはなりませんので、DNS名が複数のアドレスに解決されるネットワークアドレスの順序は非決定的ですアドレス）。ゲートウェイは、それが既に現在の関連性を有するとのインタフェースにコマンドを送信する一方、システムが最も効率的である可能性が高いです。また、ゲートウェイはその目標を達成するために、次のアルゴリズムを使用することをお勧めします。"
    },
    {
      "indent": 3,
      "text": "* If the \"notified entity\" resolves to multiple network addresses, and the source address of the request is one of those addresses, that network address is the preferred destination address for commands.",
      "ja": "「通知エンティティが」複数のネットワークアドレスに解決し、要求の送信元アドレスは、これらのアドレスのいずれかである場合*、そのネットワークアドレスは、コマンドの優先送信先アドレスです。"
    },
    {
      "indent": 3,
      "text": "* If on the other hand, the source address of the request is not one of the resolved addresses, the gateway must choose one of the resolved addresses for commands.",
      "ja": "*一方で、リクエストの送信元アドレスが解決されたアドレスのいずれでもない場合、ゲートウェイはコマンドの解決済みアドレスのいずれかを選択する必要があります。"
    },
    {
      "indent": 3,
      "text": "* If the gateway fails to contact the network address chosen, it MUST try the alternatives in the resolved list as described in Section 4.3.",
      "ja": "*ゲートウェイは、選択されたネットワークアドレスにご連絡に失敗した場合、4.3節で説明したように、それは解決し、リスト内の選択肢を試みなければなりません。"
    },
    {
      "indent": 3,
      "text": "If an entire Call Agent becomes unavailable, the endpoints managed by that Call Agent will eventually become \"disconnected\". The only way for these endpoints to become connected again is either for the failed Call Agent to become available, or for a backup call agent to contact the affected endpoints with a new \"notified entity\".",
      "ja": "全体のコールエージェントが利用できなくなった場合、そのコールエージェントによって管理されるエンドポイントは、最終的に「切断」となります。これらのエンドポイントは、再び接続になるための唯一の方法は、いずれかの失敗したコールエージェントが利用可能になるまで、またはバックアップコールエージェントのための新しい「通知実体」で、影響を受けたエンドポイントに連絡するためのものです。"
    },
    {
      "indent": 3,
      "text": "When a backup Call Agent has taken over control of a group of endpoints, it is assumed that the failed Call Agent will communicate and synchronize with the backup Call Agent in order to transfer control of the affected endpoints back to the original Call Agent. Alternatively, the failed Call Agent could simply become the backup Call Agent.",
      "ja": "バックアップCallエージェントはエンドポイントのグループの制御を引き継いだときに、失敗したコールエージェントが元のコール・エージェントに影響を受けるエンドポイントの制御を転送するために通信し、バックアップCallエージェントと同期することが想定されます。また、失敗したコールエージェントは、単にバックアップコールエージェントになる可能性があります。"
    },
    {
      "indent": 3,
      "text": "We should note that handover conflict resolution between separate CA's is not in place - we are relying strictly on the CA's knowing what they are doing and communicating with each other (although AuditEndpoint can be used to learn about the current \"notified entity\"). If this is not the case, unexpected behavior may occur.",
      "ja": "私たちは場所ではない別のCAの間のハンドオーバ紛争解決に注意しなければならない - 私たちは、CAの、彼らがやって（AuditEndpointは、現在の「通知の実体」について学ぶために使用することができますが）互いに通信しているものを知ることに厳密に依存しています。そうでない場合、予期しない動作が発生することがあります。"
    },
    {
      "indent": 3,
      "text": "Note that as mentioned earlier, the default \"notified entity\" is provisioned and may include both domain name and port. For small gateways, provisioning may be done on a per endpoint basis. For much larger gateways, a single provisioning element may be provided for multiple endpoints or even for the entire gateway itself. In either case, once the gateway powers up, each endpoint MUST have its own \"notified entity\", so provisioned values for an aggregation of endpoints MUST be copied to the \"notified entity\" for each endpoint in the aggregation before operation proceeds. Where possible, the RestartInProgress command on restart SHOULD be sent to the provisioned \"notified entity\" based on an aggregation that allows the \"all of\" wild-card to be used. This will reduce the number of RestartInProgress messages.",
      "ja": "先に述べたように、デフォルトの「通知実体は」プロビジョニングされ、ドメイン名とポートの両方を含むことができることに注意してください。小さなゲートウェイの場合、プロビジョニングは、エンドポイントごとに行うことができます。はるかに大きいゲートウェイに対して、単一のプロビジョニング要素は、複数のエンドポイントのために、あるいは全体ゲートウェイ自体に設けてもよいです。いずれの場合においても、ゲートウェイがパワーアップ後、各エンドポイントは、エンドポイントの凝集のためのようにプロビジョニング値が進む前に集合内の各エンドポイントのための「通知された実体」にコピーされなければならない、独自の「通知された実体」を持たなければなりません。可能であれば、再起動時にRestartInProgressコマンドは、ワイルドカード「のすべてが」使用することができます集約に基づいてプロビジョニング「通知実体」に送信する必要があります。これはRestartInProgressメッセージの数を減らすことができます。"
    },
    {
      "indent": 3,
      "text": "Another way of viewing the use of \"notified entity\" is in terms of associations between gateways and Call Agents. The \"notified entity\" is a means to set up that association, and governs where the gateway will send commands to. Commands received by the gateway however may come from any source. The association is initially provisioned with a provisioned \"notified entity\", so that on power up RestartInProgress and persistent events that occur prior to the first NotificationRequest from Call Agents will be sent to the provisioned Call Agent. Once a Call Agent makes a request, however it may include the NotifiedEntity parameter and set up a new association. Since the \"notified entity\" persists across calls, the association remains intact until a new \"notified entity\" is provided.",
      "ja": "「通知実体」の使用を表示する別の方法は、ゲートウェイとコールエージェント間の関連の用語です。 「通知実体は」その関連付けを設定するための手段であり、ゲートウェイがにコマンドを送信する場所を決定します。ゲートウェイによって受信されたコマンドは、しかし、任意の供給源から得ることができます。協会は当初、プロビジョニング「通知実体」がプロビジョニングされているので、パワーアップRestartInProgressとコールエージェントからの最初のNotificationRequestの前には、プロビジョニングされたコール・エージェントに送信されます発生する永続的なイベントに。コールエージェントは要求を行った後、しかし、それはNotifiedEntityパラメータを含めて、新しい関連付けを設定することがあります。 「通知実体が」呼び出しにわたって持続するので、新しい「通知エンティティは、」提供されるまで、関連付けはそのまま残ります。"
    },
    {
      "indent": 0,
      "text": "4.2 Communicating with Gateways",
      "section_title": true,
      "ja": "4.2ゲートウェイとの通信"
    },
    {
      "indent": 3,
      "text": "Endpoint names in gateways include a local name indicating the specific endpoint and a domain name indicating the host/gateway where the endpoint resides. Gateways may have several interfaces for redundancy.",
      "ja": "ゲートウェイにおけるエンドポイント名は、特定のエンドポイントとエンドポイントが存在するホスト/ゲートウェイを示すドメイン名を示すローカル名を含みます。ゲートウェイは、冗長性を確保するために、いくつかのインターフェースを有することができます。"
    },
    {
      "indent": 3,
      "text": "In gateways that have routing capability, the domain name may resolve to a single network address with internal routing to that address from any of the gateway's interfaces. In others, the domain name may resolve to multiple network addresses, one for each interface. In the latter case, if a Call Agent fails to contact the gateway on one of the addresses, it MUST try the alternates.",
      "ja": "ルーティング機能を有するゲートウェイでは、ドメイン名は、ゲートウェイのインターフェースのいずれかからそのアドレスへの内部ルーティングを単一のネットワーク・アドレスに解決することができます。他では、ドメイン名は、複数のネットワークアドレスに各インターフェイスのための1つを解決することができます。コールエージェントはアドレスのいずれかのゲートウェイに接続するために失敗した場合、後者の場合は、それが交互に試みなければなりません。"
    },
    {
      "indent": 0,
      "text": "4.3 Retransmission, and Detection of Lost Associations:",
      "section_title": true,
      "ja": "4.3再送信、および失われた団体の検出："
    },
    {
      "indent": 3,
      "text": "The media gateway control protocol is organized as a set of transactions, each of which is composed of a command and a response, commonly referred to as an acknowledgement. The MGCP messages, being carried over UDP, may be subject to losses. In the absence of a timely response, commands are retransmitted. MGCP entities MUST keep in memory a list of the responses that they sent to recent transactions, i.e., a list of all the responses they sent over the last T-HIST seconds, and a list of the transactions that have not yet finished executing.",
      "ja": "メディアゲートウェイ制御プロトコルは、コマンド及びレスポンスから構成されてそれぞれがトランザクションのセットとして編成され、一般に肯定応答と呼ばれます。 UDP上で実行されているMGCPメッセージは、損失を受ける可能性があります。タイムリーな応答がない場合には、コマンドが再送されます。 MGCP実体はメモリに、彼らは最近の取引、すなわち、彼らは最後のT-HIST秒経由で送信されるすべての応答のリスト、まだ実行が終了していないトランザクションのリストに送信された応答のリストを維持しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The transaction identifiers of incoming commands are compared to the transaction identifiers of the recent responses. If a match is found, the MGCP entity does not execute the transaction, but simply repeats the response. If a match to a previously responded to transaction is not found, the transaction identifier of the incoming command is compared to the list of transactions that have not yet finished executing. If a match is found, the MGCP entity does not execute the transaction again, but SHOULD simply send a provisional response - a final response will be provided when the execution of the command is complete (see Section 3.5.6 for further detail).",
      "ja": "受信コマンドのトランザクション識別子は、最近の応答のトランザクション識別子と比較されています。一致が見つかった場合、MGCP実体は、トランザクションを実行し、単に応答を繰り返していません。以前のトランザクションに対応する一致が見つからない場合は、着信コマンドのトランザクション識別子は、まだ実行が完了していない取引のリストと比較されます。一致が見つかった場合、MGCP実体は再び取引を実行しませんが、単に暫定応答を送信する必要があります - コマンドの実行が完了すると、最終的な応答は、（さらに詳細については、セクション3.5.6を参照）が提供されます。"
    },
    {
      "indent": 3,
      "text": "The repetition mechanism is used to guard against four types of possible errors:",
      "ja": "繰り返し機構は、可能性のあるエラーの4種類を防ぐために使用されます。"
    },
    {
      "indent": 3,
      "text": "* transmission errors, when for example a packet is lost due to noise on a line or congestion in a queue,",
      "ja": "*伝送エラー、例えば、パケットがキュー内の行又は輻輳のノイズに起因して失われた場合、"
    },
    {
      "indent": 3,
      "text": "* component failure, when for example an interface to a Call Agent becomes unavailable,",
      "ja": "例えばコールエージェントへのインタフェースが使用できなくなった*部品の故障、"
    },
    {
      "indent": 3,
      "text": "* Call Agent failure, when for example an entire Call Agent becomes unavailable,",
      "ja": "*、例えば全体のコールエージェントが使用できなくなったときに、エージェントの失敗を呼び出します"
    },
    {
      "indent": 3,
      "text": "* failover, when a new Call Agent is \"taking over\" transparently.",
      "ja": "*フェイルオーバー、新しいコールエージェントは透過的に「引き継ぐ」されます。"
    },
    {
      "indent": 3,
      "text": "The elements should be able to derive from the past history an estimate of the packet loss rate due to transmission errors. In a properly configured system, this loss rate should be very low, typically less than 1%. If a Call Agent or a gateway has to repeat a message more than a few times, it is very legitimate to assume that something other than a transmission error is occurring. For example, given a loss rate of 1%, the probability that 5 consecutive transmission attempts fail is 1 in 100 billion, an event that should occur less than once every 10 days for a Call Agent that processes 1,000 transactions per second. (Indeed, the number of retransmissions that is considered excessive should be a function of the prevailing packet loss rate.) We should note that the \"suspicion threshold\", which we will call \"Max1\", is normally lower than the \"disconnection threshold\", which we will call \"Max2\". Max2 MUST be set to a larger value than Max1.",
      "ja": "要素は、過去の履歴から、伝送エラーによるパケット損失率の推定値を導出することができるはずです。適切に構成されたシステムでは、この損失率は、典型的には1％未満、非常に低くなければなりません。コール・エージェントまたはゲートウェイが数回より多くのメッセージを繰り返す必要がある場合は、伝送エラー以外の何かが発生していることを前提とするのは非常に正当なものです。例えば、1％の損失率を考慮すると、5回の連続送信の試行が失敗する確率1,000億1、第1,000トランザクションを処理するコールエージェントごとに10日に1回未満で発生するイベントです。 （実際、過度考えられている再送回数が支配的なパケット損失率の関数であること。）私たちは、「Max1のを」呼ぶ「疑惑しきい値」は、「切断閾値」よりも通常低いことに注意すべきです、私たちは「Max2の」と呼ぶであろう。 MAX2はMax1のより大きな値に設定しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The MGCP retransmission algorithm is illustrated in the Figure below and explained further in the following:",
      "ja": "MGCP再送アルゴリズムは、以下の図に示されており、以下でさらに説明されます。"
    },
    {
      "indent": 6,
      "text": "Command issued: N=0, T=0\n        |\n        |  +------------ retransmission: N++ <--------------+\n        |  |                                                |\n        |  |     if T <= T-Max then                         |\n        |  |      transmission                              |\n        |  |  +-- to new address, <-+<----------------------|--+\n        |  |  |       N=0           |                       |  |\n        V  V  V                     |                       |  |\n    +-----------+                   |                       |  |\n+-->| awaiting  |- new Call Agent ->+   +------------+      |  |\n|   |  response |--- timer elapsed  --->| T > T-Max ?|      |  |\n|   +-----------+                       +------------+      ^  ^\n|          |                             |    |             |  |\n|          v             +-----(yes)-----+   (no)           |  |\n|      (response         |                    |             |  |\n|       received)        |              +------------+      |  |\n|          |             |              | N >= Max1 ?|-(no)>+  |\n|          v             |              +------------+      ^  ^\n|      +--------+        |                    |             |  |\n+<(no)-| final ?|        |                  (yes)           |  |\n^      +--------+        |                    |             |  |\n|          |             |     (if first address & N=Max1,  |  |\n|          v             |      or last address & N=Max2    |  |\n|        (yes)           |               check DNS)         |  |\n|          |             |                    |             |  |\n|          v             V           +---------------+      |  |\n|        (end)           |           |more addresses?|(yes)-|->+\n|                        |           +---------------+      |\n|                        |                    |             ^\n|                        |                  (no)            |\n|                        |                    |             |\n|                        |              +------------+      |\n|                        |              | N >= Max2 ?|(no)--+\n|                        |              +------------+\n|                        |                    |\n|                        |                  (yes)\n|                        |                    |\n|                        |            +----------------+\n|                        +----------->| T >= 2*T-HIST ?|\n|                                     +----------------+\n|                                       |       |\n|                                     (no)    (yes)\n+---------------<-----------------------+       |\n                                                v\n                                          (disconnected)",
      "raw": true
    },
    {
      "indent": 3,
      "text": "A classic retransmission algorithm would simply count the number of successive repetitions, and conclude that the association is broken after re-transmitting the packet an excessive number of times (typically between 7 and 11 times). In order to account for the possibility of an undetected or in-progress \"failover\", we modify the classic algorithm as follows:",
      "ja": "古典的な再送アルゴリズムは単に、連続する繰り返しの数をカウントし、関連付けが再送信パケット（典型的には7と11時間の間）倍の過剰な数の後に破壊されると結論付けるであろう。以下のように検出されないか、進行中の「フェイルオーバー」の可能性を考慮するために、我々は古典的なアルゴリズムを変更します。"
    },
    {
      "indent": 3,
      "text": "* We require that the gateway always checks for the presence of a new Call Agent. It can be noticed either by:",
      "ja": "*私たちは、ゲートウェイは常に新しいコールエージェントの存在をチェックする必要があります。それは気づいいずれかの方法ですることができます。"
    },
    {
      "indent": 5,
      "text": "- receiving a command where the NotifiedEntity points to the new Call Agent, or",
      "ja": " - 新しいコールエージェントにNotifiedEntityポイントコマンドを受信、または"
    },
    {
      "indent": 5,
      "text": "- receiving a redirection response pointing to a new Call Agent.",
      "ja": " - 新しいコールエージェントを指してリダイレクト応答を受信します。"
    },
    {
      "indent": 5,
      "text": "If a new Call Agent is detected, the gateway MUST start retransmitting outstanding commands for the endpoint(s) redirected to that new Call Agent. Responses to new or old commands are still transmitted to the source address of the command.",
      "ja": "新しいコールエージェントが検出された場合、ゲートウェイはその新しいコールエージェントにリダイレクトエンドポイント（複数可）のため未処理のコマンドを再送開始する必要があります。新旧のコマンドへの応答はまだコマンドの送信元アドレスに送信されます。"
    },
    {
      "indent": 3,
      "text": "* Prior to any retransmission, it is checked that the time elapsed since the sending of the initial datagram is no greater than T-MAX. If more than T-MAX time has elapsed, then retransmissions MUST cease. If more than 2*T-HIST has elapsed, then the endpoint becomes disconnected.",
      "ja": "*任意の再送信する前に、初期のデータグラムの送信からの経過時間がT-MAXを超えないことを確認します。 T-MAX時間以上が経過した場合、再送信は中止しなければなりません。以上の2 * T-HISTが経過した場合、エンドポイントは切断なります。"
    },
    {
      "indent": 3,
      "text": "* If the number of repetitions for this Call Agent is equal to \"Max1\", and its domain name was not resolved recently (e.g., within the last 5 seconds or otherwise provisioned), and it is not in the process of being resolved, then the gateway MAY actively query the domain name server in order to detect the possible change of the Call Agent interfaces. Note that the first repetition is the second transmission.",
      "ja": "*このコール・エージェントの繰り返し回数は、「Max1の」に等しく、そのドメイン名が（例えば、プロビジョニングされた最後の5秒以内またはそれ以外）最近解決されなかった、そしてそれは、その後、解決処理中でない場合にはゲートウェイは、積極的にコールエージェントインタフェースの可能な変化を検出するために、ドメインネームサーバに照会することができます。最初の繰り返しが第二の伝送であることに留意されたいです。"
    },
    {
      "indent": 3,
      "text": "* The gateway may have learned several IP addresses for the call agent. If the number of repetitions for this IP address is greater than or equal to \"Max1\" and lower than \"Max2\", and there are more addresses that have not been tried, then the gateway MUST direct the retransmissions to alternate addresses. Also, receipt of explicit network notifications such as, e.g., ICMP network, host, protocol, or port unreachable SHOULD lead the gateway to try alternate addresses (with due consideration to possible security issues).",
      "ja": "*ゲートウェイはコールエージェントのためのいくつかのIPアドレスを学んだことがあります。このIPアドレスの繰り返し回数がより大きい又は「Max1の」に等しく、「Max2の」よりも低く、試されていない複数のアドレスがある場合、ゲートウェイは、代替アドレスに再送を指示しなければなりません。また、そのような例えば、ICMPネットワーク、ホスト、プロトコル、またはポート到達不能、明示的なネットワークの通知の受信は、（可能なセキュリティ問題に配慮して）、代替アドレスをしようとするゲートウェイをもたらすはずです。"
    },
    {
      "indent": 3,
      "text": "* If there are no more interfaces to try, and the number of repetitions for this address is Max2, then the gateway SHOULD contact the DNS one more time to see if any other interfaces have become available, unless the domain name was resolved recently (e.g., within the last 5 seconds or otherwise provisioned), or it is already in the process of being resolved. If there still are no more interfaces to try, the gateway is then disconnected and MUST initiate the \"disconnected\" procedure (see Section 4.4.7).",
      "ja": "*そこにしようとするこれ以上のインターフェイスはありませんし、このアドレスの繰り返し回数がMax2のある、ゲートウェイは、ドメイン名が最近解決された場合を除き、他のインターフェイスは、利用可能になっているかどうかを確認するためにDNS 1つのより多くの時間を連絡する必要がある場合（たとえば、 、最後の5秒以内またはそれ以外）プロビジョニング、またはそれが解決される過程で、既にあります。依然として試みるそれ以上のインタフェースが存在しない場合、ゲートウェイは、その後切断され、「切断」手順（セクション4.4.7を参照）を開始しなければなりません。"
    },
    {
      "indent": 3,
      "text": "In order to automatically adapt to network load, MGCP specifies exponentially increasing timers. If the initial timer is set to 200 milliseconds, the loss of a fifth retransmission will be detected after about 6 seconds. This is probably an acceptable waiting delay to detect a failover. The repetitions should continue after that delay not only in order to perhaps overcome a transient connectivity problem, but also in order to allow some more time for the execution of a failover - waiting a total delay of 30 seconds is probably acceptable.",
      "ja": "自動的に負荷をネットワークに適合させるためには、MGCPは、指数関数的に増加するタイマーを指定します。初期タイマが200ミリ秒に設定されている場合は、第五の再送の損失は約6秒後に検出されます。これはおそらく、フェールオーバーを検出するために許容可能な待機遅延です。繰り返しは、おそらく一過接続の問題を克服するために、それだけでなく遅延の後に続ける必要があり、また、フェイルオーバーを実行するためのいくつかのより多くの時間を可能にするために -  30秒の合計遅延を待っているが、おそらく許容可能です。"
    },
    {
      "indent": 3,
      "text": "It is however important that the maximum delay of retransmissions be bounded. Prior to any retransmission, it is checked that the time (T) elapsed since the sending of the initial datagram is no greater than T-MAX. If more than T-MAX time has elapsed, retransmissions MUST cease. If more than 2*T-HIST time has elapsed, the endpoint becomes disconnected. The value T-MAX is related to the T-HIST value: the T-HIST value MUST be greater than or equal to T-MAX plus the maximum propagation delay in the network.",
      "ja": "再送信の最大遅延時間が制限されることが重要です。任意の再送信の前に、初期データグラムの送信からの経過時間（T）は、T-MAXを超えないことを確認します。 T-MAX時間以上が経過した場合、再送信は中止しなければなりません。以上の2 * T-HIST時間が経過した場合、エンドポイントが切断なります。値T-MAXは、T-HIST値に関連している：T-HIST値がより大きいまたはT-MAXプラスネットワークにおける最大伝搬遅延に等しくなければなりません。"
    },
    {
      "indent": 3,
      "text": "The default value for T-MAX is 20 seconds. Thus, if the assumed maximum propagation delay is 10 seconds, then responses to old transactions would have to be kept for a period of at least 30 seconds. The importance of having the sender and receiver agree on these values cannot be overstated.",
      "ja": "T-MAXのデフォルト値は20秒です。想定される最大伝搬遅延が10秒であればこのように、古い取引への応答は、少なくとも30秒間保持しなければならないであろう。送信者と受信者は、これらの値に同意することの重要性を誇張することはできません。"
    },
    {
      "indent": 3,
      "text": "The default value for Max1 is 5 retransmissions and the default value for Max2 is 7 retransmissions. Both of these values may be altered by the provisioning process.",
      "ja": "Max1のためのデフォルト値は5、再送され、Max2のためのデフォルト値は7つの再送信です。これらの値の両方が、プロビジョニング・プロセスによって変更されてもよいです。"
    },
    {
      "indent": 3,
      "text": "The provisioning process MUST be able to disable one or both of the Max1 and Max2 DNS queries.",
      "ja": "プロビジョニングプロセスは、MAX1、Max2のDNSクエリの一方または両方を無効にすることができなければなりません。"
    },
    {
      "indent": 0,
      "text": "4.4 Race Conditions",
      "section_title": true,
      "ja": "4.4レース条件"
    },
    {
      "indent": 3,
      "text": "MGCP deals with race conditions through the notion of a \"quarantine list\" and through explicit detection of desynchronization, e.g., for mismatched hook state due to glare for an endpoint.",
      "ja": "MGCPは、エンドポイントのグレアによる不一致フック状態のために、例えば、「検疫リスト」の概念を通って、脱同期化を明示的に検出して競合条件を扱っています。"
    },
    {
      "indent": 3,
      "text": "MGCP does not assume that the transport mechanism will maintain the order of commands and responses. This may cause race conditions, that may be obviated through a proper behavior of the Call Agent. (Note that some race conditions are inherent to distributed systems; they would still occur, even if the commands were transmitted in strict order.)",
      "ja": "MGCPは、トランスポートメカニズムはコマンドと応答の秩序を維持することを前提としていません。これは、コールエージェントの適切な動作によって回避することができる競合状態を引き起こすことがあります。 （いくつかの競合状態は、分散システムに固有であることに留意されたい。それらはまだコマンドが、厳密な順序で送信された場合でも、発生します。）"
    },
    {
      "indent": 3,
      "text": "In some cases, many gateways may decide to restart operation at the same time. This may occur, for example, if an area loses power or transmission capability during an earthquake or an ice storm. When power and transmission are reestablished, many gateways may decide to send \"RestartInProgress\" commands simultaneously, leading to very unstable operation.",
      "ja": "いくつかのケースでは、多くのゲートウェイが同時に動作を再開するように決定することができます。領域が地震や氷の嵐の間、電力または送信能力を失った場合、これは、例えば、起こり得ます。電源および送信が再確立されると、多くのゲートウェイが「RestartInProgress」を送信するように決定することができる非常に不安定な動作につながる、同時にコマンド。"
    },
    {
      "indent": 0,
      "text": "4.4.1 Quarantine List",
      "section_title": true,
      "ja": "4.4.1検疫一覧"
    },
    {
      "indent": 3,
      "text": "MGCP controlled gateways will receive \"notification requests\" that ask them to watch for a list of \"events\". The protocol elements that determine the handling of these events are the \"Requested Events\" list, the \"Digit Map\", the \"Quarantine Handling\", and the \"Detect Events\" list.",
      "ja": "MGCP制御のゲートウェイは、「イベント」のリストを監視してもらう「通知要求」を受信します。これらのイベントの取り扱いを決定するプロトコル要素は、「要求されたイベント」リスト、「桁マップ」、「検疫処理」、および「イベントを検出」リストです。"
    },
    {
      "indent": 3,
      "text": "When the endpoint is initialized, the requested events list only consists of persistent events for the endpoint, and the digit map is assumed empty. At this point, the endpoint MAY use an implicit NotificationRequest with the reserved RequestIdentifier zero (\"0\") to detect and report a persistent event, e.g., off-hook. A pre-existing off-hook condition MUST here result in the off-hook event being generated as well.",
      "ja": "エンドポイントが初期化されると、要求されたイベントのリストには、エンドポイントの永続的なイベントで構成され、電話番号マップは空と想定されます。この時点で、エンドポイントは、オフフック、例えば、永続的なイベントを検出して報告するために予約さRequestIdentifierゼロ（「0」）と暗黙NotificationRequestを使用するかもしれません。既存のオフフック状態は、ここでは、同様に生成されたオフフックイベントをもたらさなければなりません。"
    },
    {
      "indent": 3,
      "text": "The endpoint awaits the reception of a NotificationRequest command, after which the gateway starts observing the endpoint for occurrences of the events mentioned in the list, including persistent events.",
      "ja": "エンドポイントは、ゲートウェイが永続的なイベントを含め、リストに記載された事象の発生のためのエンドポイントを観察開始した後NotificationRequestコマンドの受信を待ちます。"
    },
    {
      "indent": 3,
      "text": "The events are examined as they occur. The action that follows is determined by the \"action\" parameter associated with the event in the list of requested events, and also by the digit map. The events that are defined as \"accumulate\" or \"accumulate according to digit map\" are accumulated in a list of events, the events that are marked as \"accumulate according to the digit map\" will additionally be accumulated in the \"current dial string\". This will go on until one event is encountered that triggers a notification which will be sent to the current \"notified entity\".",
      "ja": "彼らが発生するとイベントが検討されています。次のアクションは、ともケタマップによって要求されたイベントのリスト内のイベントに関連付けられている「アクション」パラメータによって決定されます。 「蓄積」として定義されるか、さらに「現在のダイヤル文字列」に蓄積される「デジットマップに従って蓄積する」とイベント、マークされているイベントのリストに蓄積されている「デジットマップに従って蓄積」されているイベント。一つのイベントは、現在の「通知の実体」に送信される通知をトリガーすることに遭遇するまで、これは上に行くだろう。"
    },
    {
      "indent": 3,
      "text": "The gateway, at this point, will transmit the Notify command and will place the endpoint in a \"notification\" state. As long as the endpoint is in this notification state, the events that are to be detected on the endpoint are stored in a \"quarantine\" buffer (FIFO) for later processing. The events are, in a sense, \"quarantined\". All events that are specified by the union of the RequestedEvents parameter and the most recently received DetectEvents parameter or, in the absence of the latter, all events that are referred to in the RequestedEvents, SHALL be detected and quarantined, regardless of the action associated with the event. Persistent events are here viewed as implicitly included in RequestedEvents. If the quarantine buffer reaches the capacity of the endpoint, a Quarantine Buffer Overflow event (see Appendix B) SHOULD be generated (when this event is supported, the endpoint MUST ensure it has capacity to include the event in the quarantine buffer). Excess events will now be discarded.",
      "ja": "ゲートウェイは、この時点で、通知コマンドを送信し、「通知」状態にあるエンドポイントを配置します。限り、エンドポイントは、この通知状態であるように、エンドポイントで検出されるイベントは、後の処理のための「隔離」バッファ（FIFO）に格納されています。イベントは、ある意味で、「隔離さ」されています。かかわらずに関連付けられたアクションの、RequestedEventsパラメータの和集合と最も最近受信DetectEventsパラメータで指定されるか、または、後者の非存在下で、RequestedEventsで言及されたすべてのイベントは、検出および隔離さSHALLすべてのイベント行事。暗黙的にRequestedEventsに含まれる永続的なイベントは、ここで観察されます。隔離バッファは、エンドポイントの容量に達した場合、検疫バッファオーバーフローイベントが（付録Bを参照）生成されるべきである（このイベントはサポートされている場合、エンドポイントは、それが隔離バッファ内のイベントを含めるする能力を有する確保しなければなりません）。過剰のイベントは現在破棄されます。"
    },
    {
      "indent": 3,
      "text": "The endpoint exits the \"notification state\" when the response (whether success or failure) to the Notify command is received. The Notify command may be retransmitted in the \"notification state\", as specified in Section 3.5 and 4. If the endpoint is or becomes disconnected (see Section 4.3) during this, a response to the Notify command will never be received. The Notify command is then lost and hence no longer considered pending, yet the endpoint is still in the \"notification state\". Should that occur, completion of the disconnected procedure specified in Section 4.4.7 SHALL then lead the endpoint to exit the \"notification state\".",
      "ja": "通知コマンドに対する応答（成功または失敗するかどうか）を受信したとき、エンドポイントは「通知状態」を終了します。エンドポイントがあるか、切断された場合は通知コマンドに対する応答が受信されることはありません、この中に（4.3節を参照）、セクション3.5と4で指定された通知コマンドは、「通知状態」に再送信することができます。通知コマンドが失わないので、もはや保留中と考えられ、まだエンドポイントは、「通知状態」のままです。その発生した場合、セクション4.4.7で指定された切断手順の完了は、その後、「通知状態」を終了するエンドポイントをリードSHALL。"
    },
    {
      "indent": 3,
      "text": "When the endpoint exits the \"notification state\" it resets the list of observed events and the \"current dial string\" of the endpoint to a null value.",
      "ja": "終点が「通知状態」を出ると、それは観察されたイベントとヌル値にエンドポイントの「現在のダイヤルストリング」のリストをリセットします。"
    },
    {
      "indent": 3,
      "text": "Following that point, the behavior of the gateway depends on the value of the QuarantineHandling parameter in the triggering NotificationRequest command:",
      "ja": "そのポイントに続いて、ゲートウェイの動作がトリガーNotificationRequestコマンドでQuarantineHandlingパラメータの値によって異なります。"
    },
    {
      "indent": 3,
      "text": "If the Call Agent had specified, that it expected at most one notification in response to the notification request command, then the gateway SHALL simply keep on accumulating events in the quarantine buffer until it receives the next notification request command.",
      "ja": "コール・エージェントは、それが通知要求コマンドに応答して最大1つの通知に期待することを、指定されていた場合、それは次の通知要求コマンドを受信するまで、ゲートウェイは、単純に隔離バッファ内のイベントを蓄積し続けるものとします。"
    },
    {
      "indent": 3,
      "text": "If, however, the gateway is authorized to send multiple successive Notify commands, it will proceed as follows. When the gateway exits the \"notification state\", it resets the list of observed events and the \"current dial string\" of the endpoint to a null value and starts processing the list of quarantined events, using the already received list of requested events and digit map. When processing these events, the gateway may encounter an event which triggers a Notify command to be sent. If that is the case, the gateway can adopt one of the two following behaviors:",
      "ja": "しかし、ゲートウェイが複数の連続した通知コマンドを送信することを許可されている場合は、次のように、それが続行されます。ゲートウェイが「通知状態」を終了すると、それはヌル値が観察されたイベントのリストと終点の「現在のダイヤル文字列」をリセットし、隔離されたイベントのリストの処理を開始し、要求されたイベント及び桁の既に受信したリストを使用して地図。これらのイベントを処理するときに、ゲートウェイが送信する通知コマンドをトリガするイベントが発生する場合があります。その場合は、ゲートウェイには、次の2つの動作のいずれかを採用することができます。"
    },
    {
      "indent": 3,
      "text": "* it can immediately transmit a Notify command that will report all events that were accumulated in the list of observed events until the triggering event, included, leaving the unprocessed events in the quarantine buffer,",
      "ja": "*それはすぐに、隔離バッファ内の未処理のイベントを残して、含まトリガーイベントまで観察されたイベントのリストに蓄積されたすべてのイベントをレポートします通知コマンドを送信することができます"
    },
    {
      "indent": 3,
      "text": "* or it can attempt to empty the quarantine buffer and transmit a single Notify command reporting several sets of events (in a single list of observed events) and possibly several dial strings. The \"current dial string\" is reset to a null value after each triggering event. The events that follow the last triggering event are left in the quarantine buffer.",
      "ja": "*またはそれは隔離バッファを空にしようとすると、（観測イベントの単一のリスト内）のイベントのいくつかのセットと、おそらくいくつかのダイヤル文字列を報告し、単一の通知コマンドを送信することができます。 「現在のダイヤルストリング」は、各トリガイベントの後にNULL値にリセットされます。最後のトリガイベントを追跡イベントは隔離バッファに残っています。"
    },
    {
      "indent": 3,
      "text": "If the gateway transmits a Notify command, the endpoint will reenter and remain in the \"notification state\" until the acknowledgement is received (as described above). If the gateway does not find a quarantined event that triggers a Notify command, it places the endpoint in a normal state. Events are then processed as they come, in exactly the same way as if a Notification Request command had just been received.",
      "ja": "ゲートウェイは、通知コマンドを送信した場合、エンドポイントは、再入力し、（上記のように）確認応答が受信されるまで、「通知状態」のままです。ゲートウェイが通知コマンドをトリガ隔離されたイベントが見つからない場合は、通常の状態でエンドポイントを置きます。彼らが来るよう通知要求コマンドがちょうど受信されたかのようなイベントは、まったく同じ方法で、処理されます。"
    },
    {
      "indent": 3,
      "text": "A gateway may receive at any time a new Notification Request command for the endpoint, including the case where the endpoint is disconnected. Activating an embedded Notification Request is here viewed as receiving a new Notification Request as well, except that the current list of ObservedEvents remains unmodified rather than being processed again. When a new notification request is received in the notification state, the gateway SHALL ensure that the pending Notify is received by the Call Agent prior to a new Notify (note that a Notify that was lost due to being disconnected, is no longer considered pending). It does so by using the \"piggybacking\" functionality of the protocol. The messages will then be sent in a single packet to the current \"notified entity\". The steps involved are the following:",
      "ja": "ゲートウェイは、エンドポイントが切断された場合など、エンドポイントでいつでも新たな通知要求コマンドを受信して​​もよいです。埋め込まれた通知要求をアクティブにすると、ここでObservedEventsの現在のリストではなく、再び処理されているよりも未修正のままであることを除いて、同様の新しい通知要求を受けたと見られています。新しい通知要求を通知状態で受信されると、ゲートウェイは保証しなければならないその前にCallエージェントによって受信される通知ペンディング新しい（もはや考え保留中であることが原因切断されると失われた通知注意）に通知しません。これは、プロトコルの「便乗」機能を使用することにより、そのようにします。メッセージは、現在の「通知の実体」に単一のパケットで送信されます。必要な手順は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "a) the gateway sends a response to the new notification request.",
      "ja": "A）ゲートウェイは、新たな通知要求に対する応答を送信します。"
    },
    {
      "indent": 3,
      "text": "b) the endpoint is then taken out of the \"notification state\" without waiting for the acknowledgement of the pending Notify command.",
      "ja": "b）のエンドポイントは、その後通知保留中のコマンドの受信確認を待たずに、「通知状態」から取り出されます。"
    },
    {
      "indent": 3,
      "text": "c) a copy of the unacknowledged Notify command is kept until an acknowledgement is received. If a timer elapses, the Notify will be retransmitted.",
      "ja": "肯定応答が受信されるまでC）未確認通知コマンドのコピーが維持されます。タイマーが経過した場合は、通知が再送信されます。"
    },
    {
      "indent": 3,
      "text": "d) If the gateway has to transmit a new Notify before the previous Notify(s) is acknowledged, it constructs a packet that piggybacks a repetition of the old Notify(s) and the new Notify (ordered by age with the oldest first). This datagram will be sent to the current \"notified entity\".",
      "ja": "d）のゲートウェイは前に通知する新しいを送信する必要がある場合は、前の（s）が認められている、それは最も古い最初に年齢順古い通知する（S）と通知新しいの繰り返しを（）ピギーバックパケットを構築する通知。このデータグラムは、現在の「通知の実体」に送信されます。"
    },
    {
      "indent": 3,
      "text": "f) Gateways that cannot piggyback several messages in the same datagram and hence guarantee in-order delivery of two (or more) Notify's SHALL leave the endpoint in the \"notification\" state as long as the last Notify is not acknowledged.",
      "ja": "f）は、同じデータグラムにいくつかのメッセージを背負うので、中に次の2つ（またはそれ以上の配達を保証することはできませんゲートウェイ）の通知は限り最後の希望としては認められていない「通知」の状態でエンドポイントを残すものとします。"
    },
    {
      "indent": 3,
      "text": "The procedure is illustrated by the following diagram:",
      "ja": "手順は以下の図によって示されます。"
    },
    {
      "indent": 4,
      "text": "+-------------------+\n| Processing Events |<--------------------------------------+\n+-------------------+                                       |\n         |                                                  |\n Need to send NTFY                                          |\n         |                                                  |\n         v                                                  |\n+-------------------+                                       |\n| Outstanding NTFY  |---- No -------+                       |\n|                   |               |                       |\n+-------------------+               v                       |\n         |                    +-----------+                 |\n        Yes                   | Send NTFY |                 |\n         |                    +-----------+                 |\n         v                          |                       |\n+--------------------+              v                       |\n| Piggyback new NTFY |     +--------------------+           |\n| w. old outstanding |---->| Notification State |           |\n| NTFY(s)            |     +--------------------+           |\n+--------------------+       |               |              |\n                         new RQNT        NTFY response      |\n                         received        received           |\n                             |               |              |\n                             |               v              |\n                             |        +-------------+       |\n                             |        | Step mode ? |- No ->+\n                             |        +-------------+       ^\n                             |               |              |\n                             |              Yes             |\n                             |               |              |\n                             |               v              |\n                             |       +---------------+      |\n                             |       | Wait for RQNT |      |\n                             |       +---------------+      |\n                             |               |              |\n                             |         RQNT received        |\n                             |               |              |\n                             |               v              |\n                             |       +---------------+      |\n                             +------>| Apply RQNT and|----->+\n                                     | send response |\n                                     +---------------+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Gateways may also attempt to deliver the pending Notify prior to a successful response to the new NotificationRequest by using the \"piggybacking\" functionality of the protocol. This was in fact required behavior in RFC 2705, however there are several complications in doing this, and the benefits are questionable. In particular, the RFC 2705 mechanism did not guarantee in-order delivery of Notify's and responses to NotificationRequests in general, and hence Call Agents had to handle out-of-order delivery of these messages anyway. The change to optional status is thus backwards compatible while greatly reducing complexity.",
      "ja": "ゲートウェイはまた、保留中の前のプロトコルの「便乗」機能を使って、新しいNotificationRequestに成功した応答に通知をお届けしようとすることができます。これは、実際にはRFC 2705での動作を必要とした、しかし、そこにこれを行うにはいくつかの合併症があり、メリットは疑問です。具体的には、RFC 2705のメカニズムは、一般的にはNotificationRequestsに通知さんと応答の順序どおりの配信を保証するものではありませんでした、ので、コールエージェントは、とにかくこれらのメッセージのアウトオブオーダーの配信を処理しなければなりませんでした。任意の状態への変化が大幅に複雑さを低減しながら、後方互換性があります。"
    },
    {
      "indent": 3,
      "text": "After receiving the Notification Request command, the requested events list and digit map (if a new one was provided) are replaced by the newly received parameters, and the current dial string is reset to a null value. Furthermore, when the Notification Request was received in the \"notification state\", the list of observed events is reset to a null value. The subsequent behavior is conditioned by the value of the QuarantineHandling parameter. The parameter may specify that quarantined events (and observed events which in this case is now an empty list), should be discarded, in which case they will be. If the parameter specifies that the quarantined (and observed) events are to be processed, the gateway will start processing the list of quarantined (and observed) events, using the newly received list of requested events and digit map (if provided). When processing these events, the gateway may encounter an event which requires a Notify command to be sent. If that is the case, the gateway will immediately transmit a Notify command that will report all events that were accumulated in the list of observed events until the triggering event, included leaving the unprocessed events in the quarantine buffer, and will enter the \"notification state\".",
      "ja": "（新しいものが提供されている場合）、通知要求コマンド、要求されたイベントのリストとケタマップを受け取った後、新たに受信したパラメータに置き換え、そして現在のダイヤルストリングはNULL値にリセットされています。通知要求「が通知状態」に受信されたときに更に、観察されたイベントのリストがヌル値にリセットされます。その後の動作はQuarantineHandlingパラメータの値によって調整されます。パラメータは、隔離イベント（この場合は今や空リストで観察されたイベント）は、それらがされる場合には、廃棄されるべきであることを指定してもよいです。パラメータは隔離（および観察された）イベントが処理されることを指定した場合、ゲートウェイは、要求されたイベントおよびディジットマップ（提供される場合）の新たに受信されたリストを使用して、隔離された（そして観察された）イベントのリストの処理を開始します。これらのイベントを処理するときに、ゲートウェイが送信する通知コマンドを必要とするイベントが発生する場合があります。そのような場合、ゲートウェイは直ちにトリガイベントまで観察されたイベントのリストに蓄積されたすべてのイベントは、隔離バッファ内の未処理のイベントを残し含ま報告する通知コマンドを送信し、「通知状態に入ります」。"
    },
    {
      "indent": 3,
      "text": "A new notification request may be received while the gateway has accumulated events according to the previous notification request, but has not yet detected a notification-triggering events, i.e., the endpoint is not in the \"notification state\". The handling of not-yet-notified events is determined, as with the quarantined events, by the quarantine handling parameter:",
      "ja": "ゲートウェイは、前の通知要求に応じてイベントを蓄積してきたが、まだ通知トリガイベントを検出していない、すなわち、終点が「通知状態」ではないが、新しい通知要求を受信することができます。未通知イベントの処理は、検疫処理パラメータによって、隔離されたイベントと同様に、決定されます。"
    },
    {
      "indent": 3,
      "text": "* If the quarantine-handling parameter specifies that quarantined events shall be ignored, the observed events list is simply reset.",
      "ja": "検疫ハンドリングパラメータは隔離されたイベントは無視されなければならないことを指定する場合は*、観察されたイベントリストは単純にリセットされます。"
    },
    {
      "indent": 3,
      "text": "* If the quarantine-handling parameter specifies that quarantined events shall be processed, the observed event list is transferred to the quarantined event list. The observed event list is then reset, and the quarantined event list is processed.",
      "ja": "検疫ハンドリングパラメータは隔離されたイベントが処理されなければならないことを指定する場合は*、観測されたイベントリストは、隔離されたイベントリストに転送されます。観測イベントリストはその後リセットされ、隔離されたイベントのリストが処理されます。"
    },
    {
      "indent": 3,
      "text": "Call Agents controlling endpoints in lockstep mode SHOULD provide the response to a successful Notify message and the new NotificationRequest in the same datagram using the piggybacking mechanism.",
      "ja": "ロックステップモードでエンドポイントを制御するコールエージェントが成功への応答は、ピギーバックメカニズムを使用して、同じデータグラムにメッセージと新しいNotificationRequestを通知し提供する必要があります。"
    },
    {
      "indent": 0,
      "text": "4.4.2 Explicit Detection",
      "section_title": true,
      "ja": "4.4.2明示的な検出"
    },
    {
      "indent": 3,
      "text": "A key element of the state of several endpoints is the position of the hook. A race condition may occur when the user decides to go off-hook before the Call Agent has the time to ask the gateway to notify an off-hook event (the \"glare\" condition well known in telephony), or if the user goes on-hook before the Call Agent has the time to request the event's notification.",
      "ja": "いくつかのエンドポイントの状態の重要な要素は、フックの位置です。ユーザは、コールエージェントがオフフックイベント（よく電話で知られている「グレア」状態）に通知するためのゲートウェイを依頼する時間を持って前にオフフックすることを決定したとき、またはユーザーが進む場合には競合状態が発生することがありますコールエージェントがイベントの通知を要求するための時間を持って前に-hook。"
    },
    {
      "indent": 3,
      "text": "To avoid this race condition, the gateway MUST check the condition of the endpoint before acknowledging a NotificationRequest. It MUST return an error:",
      "ja": "この競合状態を避けるために、ゲートウェイはNotificationRequestを確認する前に、エンドポイントの状態をチェックしなければなりません。これは、エラーを返す必要があります。"
    },
    {
      "indent": 3,
      "text": "1. If the gateway is requested to notify an \"off-hook\" transition while the phone is already off-hook, (error code 401 - phone off hook)",
      "ja": "1.ゲートウェイが（エラーコード401  - 電話オフフック）、電話機がオフフック既にである「オフフック」遷移を通知するように要求された場合"
    },
    {
      "indent": 3,
      "text": "2. If the gateway is requested to notify an \"on-hook\" or \"flash hook\" condition while the phone is already on-hook (error code 402 - phone on hook).",
      "ja": "2.ゲートウェイは、電話機がオンフック既にである「オンフック」又は「フラッシュフック」状態を通知するように要求された場合（エラーコード402  - オンフック電話）。"
    },
    {
      "indent": 3,
      "text": "Additionally, individual signal definitions can specify that a signal will only operate under certain conditions, e.g., ringing may only be possible if the phone is already off-hook. If such prerequisites exist for a given signal, the gateway MUST return the error specified in the signal definition if the prerequisite is not met.",
      "ja": "電話が既にオフフックである場合に加えて、個々の信号の定義は、信号が特定の条件下でのみ動作するように指定することができ、例えば、リンギングが唯一可能であってもよいです。そのような前提条件が与えられた信号のために存在する場合の前提条件が満たされない場合、ゲートウェイは、信号の定義で指定されたエラーを返さなければなりません。"
    },
    {
      "indent": 3,
      "text": "It should be noted, that the condition check is performed at the time the notification request is received, whereas the actual event that caused the current condition may have either been reported, or ignored earlier, or it may currently be quarantined.",
      "ja": "条件のチェックは、現在の状況が報告された、またはそれ以前の無視、またはそれが現在隔離されてされている可能性のいずれかの原因となった実際のイベントのに対し、通知要求を受信した時に実行されていることに留意すべきです。"
    },
    {
      "indent": 3,
      "text": "The other state variables of the gateway, such as the list of RequestedEvents or list of requested signals, are entirely replaced after each successful NotificationRequest, which prevents any long term discrepancy between the Call Agent and the gateway.",
      "ja": "そのようなRequestedEventsのリストまたは要求信号のリストとしてゲートウェイの他の状態変数は、完全Callエージェントとゲートウェイとの間の任意の長期不一致を防止各成功NotificationRequest、後に交換されます。"
    },
    {
      "indent": 3,
      "text": "When a NotificationRequest is unsuccessful, whether it is included in a connection-handling command or not, the gateway MUST simply continue as if the command had never been received. As all other transactions, the NotificationRequest MUST operate as an atomic transaction, thus any changes initiated as a result of the command MUST be reverted.",
      "ja": "NotificationRequestは、それが接続ハンドリングのコマンドに含まれているか否か、失敗したか、しない場合、コマンドが受信されていなかったかのように、ゲートウェイは、単に継続する必要があります。他のすべてのトランザクションとして、NotificationRequestは、このようにコマンドの結果として開始されるすべての変更が元に戻さなければならない、アトミックトランザクションとして動作しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Another race condition may occur when a Notify is issued shortly before the reception by the gateway of a NotificationRequest. The RequestIdentifier is used to correlate Notify commands with NotificationRequest commands thereby enabling the Call Agent to determine if the Notify command was generated before or after the gateway received the new NotificationRequest. This is especially important to avoid deadlocks in \"step\" mode.",
      "ja": "通知はNotificationRequestのゲートウェイによってまもなく受信する前に発行されたときに別の競合状態が発生することがあります。 RequestIdentifierはNotificationRequestでコマンドを通知相関させるために使用され、それによってゲートウェイは新しいNotificationRequestを受信する前または後に通知するコマンドが生成されたかどうかを決定するためにCallエージェントを可能にするコマンド。これは、「ステップ」モードでデッドロックを回避することが特に重要です。"
    },
    {
      "indent": 0,
      "text": "4.4.3 Transactional Semantics",
      "section_title": true,
      "ja": "4.4.3トランザクション・セマンティクス"
    },
    {
      "indent": 3,
      "text": "As the potential transaction completion times increase, e.g., due to external resource reservations, a careful definition of the transactional semantics becomes increasingly important. In particular the issue of race conditions, e.g., as it relates to hook-state, must be defined carefully.",
      "ja": "外部リソース予約への潜在的な取引完了時間の増加、例えば、として、トランザクション・セマンティクスの慎重な定義はますます重要になります。それはフック状態に関連する競合状態の特定の問題、例えば、では、慎重に定義されなければなりません。"
    },
    {
      "indent": 3,
      "text": "An important point to consider is, that the status of a pre-condition (e.g., hook-state) may in fact change between the time a transaction starts and the time it either completes successfully (transaction commit) or fails. In general, we can say that the successful execution of a transaction depends on one or more pre-conditions where the status of one or more of the pre-conditions may change dynamically between the transaction start and transaction commit.",
      "ja": "考慮すべき重要な点は、事前条件（例えば、フックの状態）の状態がよいが、時間との間の実際の変更にトランザクションが開始され、時間はそれが正常に完了どちらかということ、である（トランザクション・コミット）したか失敗しました。一般的に、我々は、トランザクションの正常実行が前提条件の一つ以上の状態がコミットトランザクションの開始とトランザクションの間で動的に変更することができる1つまたは複数の前提条件に依存していると言うことができます。"
    },
    {
      "indent": 3,
      "text": "The simplest semantics for this is simply to require that all pre-conditions be met from the time the transaction is initiated until the transaction commits. If any pre-condition is not met before the completion of the transaction, the transaction will also fail.",
      "ja": "このための最も簡単なセマンティクスは、すべての前提条件は、トランザクションがコミットするまでトランザクションが開始された時点から満たされることを要求するだけです。すべての前提条件は、トランザクションが完了する前に満たされていない場合は、トランザクションも失敗します。"
    },
    {
      "indent": 3,
      "text": "As an example, consider a transaction that includes a request for the \"off-hook\" event. When the transaction is initiated the phone is \"on-hook\" and this pre-condition is therefore met. If the hook-state changes to \"off-hook\" before the transaction completes, the pre-condition is no longer met, and the transaction therefore immediately fails.",
      "ja": "例として、「オフフック」イベントのための要求を含むトランザクションを検討してください。トランザクションが開始されると、電話機は「オンフック」であり、この前提条件は、したがって、満たされています。トランザクションが完了する前に、「オフフック」へのフック状態が変化する場合は、事前条件がもはや満たされないので、トランザクションがすぐに失敗しています。"
    },
    {
      "indent": 3,
      "text": "Finally, we need to consider the point in time when a new transaction takes effect and endpoint processing according to an old transaction stops. For example, assume that transaction T1 has been executed successfully and event processing is currently being done according to transaction T1. Now we receive a new transaction T2 specifying new event processing (for example a CreateConnection with an encapsulated NotificationRequest). Since we don't know whether T2 will complete successfully or not, we cannot start processing events according to T2 until the outcome of T2 is known. While we could suspend all event processing until the outcome of T2 is known, this would make for a less responsive system and hence SHOULD NOT be done. Instead, when a new transaction Ty is received and Ty modifies processing according to an old transaction Tx, processing according to Tx SHOULD remain active for as long as possible, until a successful outcome of Ty is known to occur. If Ty fails, then processing according to Tx will of course continue as usual. Any changes incurred by Ty logically takes effect when Ty commits. Thus, if the endpoint was in the notification state when Ty commits, and Ty contained a NotificationRequest, the endpoint will be taken out of the notification state when Ty commits. Note that this is independent of whether the endpoint was in the notification state when Ty was initiated. For example, a Notify could be generated due to processing according to Tx between the start and commit of Ty. If the commit of Ty leads to the endpoint entering the notification state, a new NotificationRequest (Tz) is needed to exit the notification state. This follows from the fact that transaction execution respects causal order.",
      "ja": "最後に、私たちは、新しいトランザクションが古いトランザクションが停止に応じた効果とエンドポイント処理を要する時点を検討する必要があります。例えば、そのトランザクションT1が正常に実行され、イベント処理は、現在のトランザクションT1に応じて行われていると仮定する。今、私たちは、新しいイベント処理（カプセル化されたNotificationRequestで例えばのCreateConnection）を指定する新しいトランザクションT2を受けます。私たちは、T2が正常に完了するか、しませんかどうかわからないので、T2の結果が知られるまで、私たちは、T2に応じてイベントの処理を開始することはできません。 T2の結果が知られるまで、我々は、すべてのイベント処理を中断することもできますが、これはあまり応答システムのためになるだろうので、行うべきではありません。新しいトランザクションのTyが受信されるとのTyが古いトランザクションのTxに応じて処理を変更したときのTyの成功した結果が発生することが知られるまで、その代わり、テキサス州に応じた処理は、できるだけ長い間アクティブのままですべきです。 Tyのに失敗した場合は、送信に応じて処理することはもちろん、いつものように続けます。 Tyのコミット時のTyが被ったすべての変更は、論理的に有効になります。 Tyのコミット、及びTyはNotificationRequestを含んでいた場合、エンドポイントは、通知状態にあった場合のTyのコミット時したがって、エンドポイントは、通知状態から取り出されます。これはTyのが開始されたとき、エンドポイントは通知状態にあったかどうかとは無関係であることに注意してください。例えば、通知による処理開始の間のTxに応じ及びTyのコミットに生成することができます。 Tyのコミットが通知状態に入るエンドポイントにつながる場合は、新しいNotificationRequest（Tzのは）通知状態を終了するために必要とされます。これは、トランザクションの実行の点が順に因果という事実から得られます。"
    },
    {
      "indent": 3,
      "text": "Another related issue is the use of wildcards, especially the \"all of\" wildcard, which may match more than one endpoint. When a command is requested, and the endpoint identifier matches more than one endpoint, transactional semantics still apply. Thus, the command MUST either succeed for all the endpoints, or it MUST fail for all of them. A single response is consequently always issued.",
      "ja": "別の関連の問題は、複数のエンドポイントを一致させることが特にワイルドカード「のすべての」ワイルドカードの使用、です。コマンドが要求され、およびエンドポイント識別子が複数のエンドポイントと一致している場合は、トランザクション・セマンティクスが適用されます。したがって、このコマンドはいずれかのすべてのエンドポイントのために成功する必要があり、またはそれはそれらのすべてに失敗しなければなりません。単一の応答は、結果的に常に発行されます。"
    },
    {
      "indent": 0,
      "text": "4.4.4 Ordering of Commands, and Treatment of Misorder",
      "section_title": true,
      "ja": "4.4.4コマンドの順序、およびMisorderの治療"
    },
    {
      "indent": 3,
      "text": "MGCP does not mandate that the underlying transport protocol guarantees in-order delivery of commands to a gateway or an endpoint. This property tends to maximize the timeliness of actions, but it has a few drawbacks. For example:",
      "ja": "MGCPゲートウェイまたはエンドポイントへのコマンドの基礎となるトランスポートプロトコルを保証という順序配信を強制しません。このプロパティは、アクションの適時性を最大化する傾向があるが、それはいくつかの欠点があります。例えば："
    },
    {
      "indent": 3,
      "text": "* Notify commands may be delayed and arrive at the Call Agent after the transmission of a new Notification Request command,",
      "ja": "*通知コマンドが遅れると、新たな通知要求コマンドの送信後にコールエージェントに到着することができます、"
    },
    {
      "indent": 3,
      "text": "* If a new NotificationRequest is transmitted before a previous one is acknowledged, there is no guarantee that the previous one will not be received and executed after the new one.",
      "ja": "前の1が認識される前に、新しいNotificationRequestが送信された場合*、前回の1が受信し、新しいものの後に実行されないという保証はありません。"
    },
    {
      "indent": 3,
      "text": "Call Agents that want to guarantee consistent operation of the endpoints can use the following rules:",
      "ja": "エンドポイントの一貫性のある動作を保証するコールエージェントは、次のルールを使用することができます。"
    },
    {
      "indent": 3,
      "text": "1) When a gateway handles several endpoints, commands pertaining to the different endpoints can be sent in parallel, for example following a model where each endpoint is controlled by its own process or its own thread.",
      "ja": "ゲートウェイは、いくつかのエンドポイントを扱う場合1）、異なるエンドポイントに関連するコマンドは、各エンドポイントが独自のプロセスまたは独自のスレッドによって制御されているモデルに従って、例えば、並行して送信することができます。"
    },
    {
      "indent": 3,
      "text": "2) When several connections are created on the same endpoint, commands pertaining to different connections can be sent in parallel.",
      "ja": "いくつかの接続が同じエンドポイント上に作成された場合2）、異なる接続に関連するコマンドを並列に送信することができます。"
    },
    {
      "indent": 3,
      "text": "3) On a given connection, there should normally be only one outstanding command (create or modify). However, a DeleteConnection command can be issued at any time. In consequence, a gateway may sometimes receive a ModifyConnection command that applies to a previously deleted connection. Such commands will fail, and an error code MUST be returned (error code 515 - incorrect connection-id, is RECOMMENDED).",
      "ja": "3）所与の接続には、通常は（）を作成または変更のみ未処理のコマンドが存在すべきです。しかし、DeleteConnectionコマンドはいつでも発行することができます。その結果、ゲートウェイは、時々、以前に削除された接続に適用されるModifyConnectionコマンドを受信して​​もよいです。そのようなコマンドは失敗し、エラーコードが返さなければならない（エラーコード515  - 誤った接続ID、推奨）。"
    },
    {
      "indent": 3,
      "text": "4) On a given endpoint, there should normally be only one outstanding NotificationRequest command at any time. The RequestId parameter MUST be used to correlate Notify commands with the triggering notification request.",
      "ja": "4）特定のエンドポイントには、通常、任意の時点で唯一未処理NotificationRequestコマンドが存在すべきです。 RequestIdパラメータは、トリガ通知要求でコマンドを通知相関させるために使用しなければなりません。"
    },
    {
      "indent": 3,
      "text": "5) In some cases, an implicitly or explicitly wildcarded DeleteConnection command that applies to a group of endpoints can step in front of a pending CreateConnection command. The Call Agent should individually delete all connections whose completion was pending at the time of the global DeleteConnection command. Also, new CreateConnection commands for endpoints named by the wild-carding SHOULD NOT be sent until the wild-carded DeleteConnection command is acknowledged.",
      "ja": "5）いくつかのケースでは、エンドポイントのグループに適用される明示的または暗黙的ワイルドカードDeleteConnectionコマンドは、保留中のCreateConnectionコマンドの前にステップすることができます。コール・エージェントは、個別にその完了グローバルDeleteConnectionコマンドの時に保留されたすべての接続を削除する必要があります。野生カーディングDeleteConnectionコマンドが確認されるまでまた、野生梳綿によって名付けられたエンドポイント用の新しいのCreateConnectionコマンドが送信されるべきではありません。"
    },
    {
      "indent": 3,
      "text": "6) When commands are embedded within each other, sequencing requirements for all commands must be adhered to. For example a Create Connection command with a Notification Request in it must adhere to the sequencing requirements associated with both CreateConnection and NotificationRequest at the same time.",
      "ja": "コマンドは、互いの中に埋め込まれている場合6）、すべてのコマンドのシーケンス要件はに付着しなければなりません。例えば、同時にのCreateConnectionとNotificationRequestの両方に関連付けられたシーケンス要件に準拠する必要があり、それには通知要求と接続のコマンドを作成します。"
    },
    {
      "indent": 3,
      "text": "7) AuditEndpoint and AuditConnection are not subject to any sequencing requirements.",
      "ja": "7）AuditEndpointとAuditConnectionは、任意のシーケンス要件の対象ではありません。"
    },
    {
      "indent": 3,
      "text": "8) RestartInProgress MUST always be the first command sent by an endpoint as defined by the restart procedure. Any other command or non-restart response (see Section 4.4.6), except for responses to auditing, MUST be delivered after this RestartInProgress command (piggybacking allowed).",
      "ja": "8）RestartInProgressは常に再開手順によって定義されるように、エンドポイントによって送信された最初のコマンドでなければなりません。他のコマンドまたは非再起動応答は、（4.4.6項を参照）、監査への応答を除いて、（許可ピギーバッキング）このRestartInProgressコマンドの後に送達されなければなりません。"
    },
    {
      "indent": 3,
      "text": "9) When multiple messages are piggybacked in a single packet, the messages are always processed in order.",
      "ja": "複数のメッセージが単一のパケットにピギーバックされると9）、メッセージは常に順番に処理されます。"
    },
    {
      "indent": 3,
      "text": "10) On a given endpoint, there should normally be only one outstanding EndpointConfiguration command at any time.",
      "ja": "10）所与のエンドポイントで、通常はいつでも唯一の未処理EndpointConfigurationコマンドが存在すべきです。"
    },
    {
      "indent": 3,
      "text": "Gateways MUST NOT make any assumptions as to whether Call Agents follow these rules or not. Consequently gateways MUST always respond to commands, regardless of whether they adhere to the above rules or not. To ensure consistent operation, gateways SHOULD behave as specified below when one or more of the above rules are not followed:",
      "ja": "ゲートウェイは、コールエージェントは、これらの規則に従うかどうかについてどのような仮定をしてはなりません。その結果、ゲートウェイは、常に関係なく、上記のルールに準拠しているか否かの、コマンドに応答しなければなりません。以下に指定されるように上記のルールの一つ以上に従わない場合、一貫した動作を保証するために、ゲートウェイは振る舞うべきです。"
    },
    {
      "indent": 3,
      "text": "* Where a single outstanding command is expected (ModifyConnection, NotificationRequest, and EndpointConfiguration), but the same command is received in a new transaction before the old finishes executing, the gateway SHOULD fail the previous command. This includes the case where one or more of the commands were encapsulated. The use of error code 407 (transaction aborted) is RECOMMENDED.",
      "ja": "*単一優れたコマンドは（ModifyConnection、NotificationRequest、およびEndpointConfiguration）期待されているが、同じコマンドを実行し、古い終了する前に新しいトランザクションで受信される場合、ゲートウェイは、前のコマンドを失敗するはずです。これは、コマンドを1つまたは複数を封入した場合を含みます。エラーコード407（取引は中止さ）の使用が推奨されます。"
    },
    {
      "indent": 3,
      "text": "* If a ModifyConnection command is received for a pending CreateConnection command, the ModifyConnection command SHOULD simply be rejected. The use of error code 400 (transient error) is RECOMMENDED. Note that this situation constitutes a Call Agent programming error.",
      "ja": "ModifyConnectionコマンドは、保留中のCreateConnectionコマンドの受信された場合*、ModifyConnectionコマンドは、単純に拒絶されるべきです。エラーコード400（一時的なエラー）の使用が推奨されます。このような状況は、コールエージェントのプログラミングエラーを構成していることに注意してください。"
    },
    {
      "indent": 3,
      "text": "* If a DeleteConnection command is received for a pending CreateConnection or ModifyConnection command, the pending command MUST be aborted. The use of error code 407 (transaction aborted) is RECOMMENDED.",
      "ja": "DeleteConnectionコマンドは、保留中のCreateConnectionかModifyConnectionコマンドのために受信された場合*、保留中のコマンドが中止されなければなりません。エラーコード407（取引は中止さ）の使用が推奨されます。"
    },
    {
      "indent": 3,
      "text": "Note, that where reception of a new command leads to aborting an old command, the old command SHOULD be aborted regardless of whether the new command succeeds or not. For example, if a ModifyConnection command is aborted by a DeleteConnection command which itself fails due to an encapsulated NotificationRequest, the ModifyConnection command is still aborted.",
      "ja": "新しいコマンドの受信が古いコマンドを中止につながる場合は、古いコマンドは関係なく、新しいコマンドが成功したかどうかに中止されるべきであること、注意してください。 ModifyConnectionコマンド自体が原因カプセル化NotificationRequestに失敗DeleteConnectionコマンドによって中断された場合、例えば、ModifyConnectionコマンドが依然として中止されます。"
    },
    {
      "indent": 0,
      "text": "4.4.5 Endpoint Service States",
      "section_title": true,
      "ja": "4.4.5エンドポイントサービスの状態"
    },
    {
      "indent": 3,
      "text": "As described earlier, endpoints configured for operation may be either in-service or out-of-service. The actual service-state of the endpoint is reflected by the combination of the RestartMethod and RestartDelay parameters, which are sent with RestartInProgress commands (Section 2.3.12) and furthermore may be audited in AuditEndpoint commands (Section 2.3.10).",
      "ja": "前述したように、動作するように構成エンドポイントは、サービスまたはアウトオブサービスのいずれであってもよいです。エンドポイントの実際のサービス状態はRestartInProgressで送信されRestartMethodとRestartDelayパラメータの組み合わせによって反射される（セクション2.3.12）をコマンドと、さらにAuditEndpointコマンド（セクション2.3.10）で監査することができます。"
    },
    {
      "indent": 3,
      "text": "The service-state of an endpoint affects how it processes a command. An endpoint in-service MUST process any command received, whereas an endpoint that is out-of-service MUST reject non-auditing commands, but SHOULD process auditing commands if possible. For backwards compatibility, auditing commands for an out-of-service endpoint may alternatively be rejected as well. Any command rejected due to an endpoint being out-of-service SHOULD generate error code 501 (endpoint not ready/out-of-service).",
      "ja": "エンドポイントのサービス状態は、それがコマンドを処理する方法に影響します。インサービスのエンドポイントは、任意のコマンドを処理しなければならないアウトオブサービスであるエンドポイントが非監査コマンドを拒絶しなければなりませんが、可能な場合、監査コマンドを処理するのに対し、受信しました。後方互換性のために、アウト・オブ・サービス・エンドポイントの監査コマンドは、代替的に同様に拒絶されてもよいです。アウトオブサービスであるエンドポイントに拒否任意のコマンド（エンドポイント準備ができていない/アウトオブサービス）エラー・コード501を生成する必要があります。"
    },
    {
      "indent": 3,
      "text": "Note that (per Section 2.1.2), unless otherwise specified for a command, endpoint names containing the \"any of\" wildcard only refer to endpoints in-service, whereas endpoint names containing the \"all of\" wildcard refer to all endpoints, regardless of service state.",
      "ja": "そうでなければコマンドに指定されない限り、（セクション2.1.2あたり）なお、ワイルドカード「のいずれかが」のみワイルドカード「の全て」にかかわらず、すべてのエンドポイントを指すを含むエンドポイント名に対し、インサービスのエンドポイントを指すを含むエンドポイント名サービス状態の。"
    },
    {
      "indent": 3,
      "text": "The above relationships are illustrated in the table below which shows the current service-states and gateway processing of commands as a function of the RestartInProgress command sent and the response (if any) received to it. The last column also lists (in parentheses) the RestartMethod to be returned if audited:",
      "ja": "上記の関係は、送信されたRestartInProgressコマンドの機能及び応答（もしあれば）、それに受信したコマンドの現在のサービス状態とゲートウェイ処理を示す以下の表に示されています。最後の列には、監査を受けた場合RestartMethodが返される（括弧内に）示しています："
    },
    {
      "indent": 3,
      "text": " ------------------------------------------------------------------\n| Restart-  | Restart- |    2xx    | Service- |   Response to      |\n|    Method |    Delay | received ?|    State |   new command      |\n|------------------------------------------------------------------|\n| graceful  |   zero   |   Yes/No  |   In     | non-audit: 2xx     |\n|           |          |           |          | audit:     2xx     |\n|           |          |           |          |        (graceful)  |\n|-----------+----------+-----------+----------+--------------------|\n| graceful  | non-zero |   Yes/No  |   In*    | non-audit: 2xx     |\n|           |          |           |          | audit:     2xx     |\n|           |          |           |          |        (graceful)  |\n|-----------+----------+-----------+----------+--------------------|\n| forced    |   N/A    |   Yes/No  |   Out    | non-audit: 501     |\n|           |          |           |          | audit:     2xx     |\n|           |          |           |          |         (forced)   |\n|-----------+----------+-----------+----------+--------------------|\n| restart   |   zero   |    No     |   In     | non-audit: 2xx,405*|\n|           |          |           |          | audit:     2xx     |\n|           |          |           |          |         (restart)  |\n|-----------+----------+-----------+----------+--------------------|\n| restart   |   zero   |    Yes    |   In     | non-audit: 2xx     |\n|           |          |           |          | audit:     2xx     |\n|           |          |           |          |         (restart)  |\n|-----------+----------+-----------+----------+--------------------|\n| restart   | non-zero |    No     |   Out*   | non-audit: 501*    |\n|           |          |           |          | audit:     2xx     |\n|           |          |           |          |         (restart)  |\n|-----------+----------+-----------+----------+--------------------|\n| restart   | non-zero |    Yes    |   Out*   | non-audit: 501*    |\n|           |          |           |          | audit:     2xx     |\n|           |          |           |          |         (restart)  |\n|-----------+----------+-----------+----------+--------------------|\n| discon-   |   zero/  |    No     |   In     | non-audit: 2xx,    |\n|    nected | non-zero |           |          | audit:     2xx     |\n|           |          |           |          |      (disconnected)|\n|-----------+----------+-----------+----------+--------------------|\n| discon-   |   zero/  |    Yes    |   In     | non-audit: 2xx     |\n|    nected | non-zero |           |          | audit:     2xx     |\n|           |          |           |          |         (restart)  |\n|-----------+----------+-----------+----------+--------------------|\n| cancel-   |   N/A    |   Yes/No  |   In     | non-audit: 2xx     |\n|  graceful |          |           |          | audit:     2xx     |\n|           |          |           |          |         (restart)  |\n ------------------------------------------------------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Notes (*):",
      "ja": "ノート （*）："
    },
    {
      "indent": 3,
      "text": "* The three service-states marked with \"*\" will change after the expiration of the RestartDelay at which time an updated RestartInProgress command SHOULD be sent.",
      "ja": "* 3サービスの状態「*」更新RestartInProgressコマンドが送信されるべき時点でRestartDelayの満了後に変更されますが付いて。"
    },
    {
      "indent": 3,
      "text": "* If the endpoint returns 2xx when the restart procedure has not yet completed, then in-order delivery MUST still be satisfied, i.e., piggy-backing is to be used. If instead, the command is not processed, 405 SHOULD be returned.",
      "ja": "*エンドポイントは、リスタート手順がまだ完了していない場合、その後に順序どおりの配信がまだ満足されなければならない2XXを返し、すなわち、ピギーバッキング場合に使用されます。代わりに、コマンドが処理されていない場合は、405が返されます。"
    },
    {
      "indent": 3,
      "text": "* Following a \"restart\" RestartInProgress with a non-zero RestartDelay, error code 501 is only returned until the endpoint goes in-service, i.e., until the expiration of the RestartDelay.",
      "ja": "*エンドポイントがRestartDelayの満了するまで、すなわち、サービス中になるまでゼロ以外RestartDelayで「再起動」RestartInProgress、エラーコード501のみが返されます後。"
    },
    {
      "indent": 0,
      "text": "4.4.6 Fighting the Restart Avalanche",
      "section_title": true,
      "ja": "再起動雪崩ファイティング4.4.6"
    },
    {
      "indent": 3,
      "text": "Let's suppose that a large number of gateways are powered on simultaneously. If they were to all initiate a RestartInProgress transaction, the Call Agent would very likely be swamped, leading to message losses and network congestion during the critical period of service restoration. In order to prevent such avalanches, the following behavior is REQUIRED:",
      "ja": "のは、ゲートウェイの多数が同時に電源が入っていると仮定しましょう。彼らはすべてがRestartInProgressトランザクションを開始した場合、コールエージェントは非常に可能性の高いサービス復旧の重要な期間中にメッセージの損失やネットワークの混雑につながる、圧倒されます。そのような雪崩を防ぐために、次の動作が必要です。"
    },
    {
      "indent": 3,
      "text": "1) When a gateway is powered on, it MUST initiate a restart timer to a random value, uniformly distributed between 0 and a maximum waiting delay (MWD). Care should be taken to avoid synchronicity of the random number generation between multiple gateways that would use the same algorithm.",
      "ja": "ゲートウェイの電源が投入されている場合1）は、均一に0と最大待機遅延（MWD）の間に分布、ランダムな値に再起動タイマを開始しなければなりません。ケアは、同じアルゴリズムを使用することになり、複数のゲートウェイ間の乱数発生の同期を避けるために注意しなければなりません。"
    },
    {
      "indent": 3,
      "text": "2) The gateway MUST then wait for either the end of this timer, the reception of a command from the Call Agent, or the detection of a local user activity, such as for example an off-hook transition on a residential gateway.",
      "ja": "2）ゲートウェイは、このタイマー、コールエージェントからのコマンドの受信、または例えばレジデンシャルゲートウェイにオフフック遷移のようなローカルユーザアクティビティの検出、のいずれかの端部を待たなければなりません。"
    },
    {
      "indent": 3,
      "text": "3) When the timer elapses, when a command is received, or when an activity is detected, the gateway MUST initiate the restart procedure.",
      "ja": "アクティビティが検出された場合3）場合、タイマが経過すると、コマンドを受信したとき、または、ゲートウェイが再起動手順を開始しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The restart procedure simply requires the endpoint to guarantee that the first",
      "ja": "再起動の手順は、単純に最初にすることを保証するためにエンドポイントが必要です"
    },
    {
      "indent": 3,
      "text": "* non-audit command, or",
      "ja": "*非監査コマンド、または"
    },
    {
      "indent": 3,
      "text": "* non-restart response (i.e., error codes other than 405, 501, and 520) to a non-audit command",
      "ja": "非監査コマンドに対する*非再開応答（405以外、即ち、エラーコード、501、520）"
    },
    {
      "indent": 3,
      "text": "that the Call Agent sees from this endpoint is a \"restart\" RestartInProgress command. The endpoint is free to take full advantage of piggybacking to achieve this. Endpoints that are considered in-service will have a RestartMethod of \"restart\", whereas endpoints considered out-of-service will have a RestartMethod of \"forced\" (also see Section 4.4.5). Commands rejected due to an endpoint not yet having completed the restart procedure SHOULD use error code 405 (endpoint \"restarting\").",
      "ja": "コール・エージェントは、このエンドポイントから見ていると、「再起動」RestartInProgressコマンドです。エンドポイントはこれを達成するために便乗をフルに活用して自由です。アウトオブサービスと考えエンドポイントが「強制」のRestartMethodを（セクション4.4.5を参照）を持つことになります一方で、サービスと考えられているエンドポイントは、「再起動」のRestartMethodを持つことになります。原因はまだ再起動の手順を完了したではないエンドポイントに拒否されたコマンドはエラーコード405（エンドポイント「再起動」）を使用すべきです。"
    },
    {
      "indent": 3,
      "text": "The restart procedure is complete once a success response has been received. If an error response is received, the subsequent behavior depends on the error code in question:",
      "ja": "成功応答を受信した後、再起動の手順は完了です。エラー応答が受信された場合、その後の行動は、問題のエラーコードによって異なります。"
    },
    {
      "indent": 3,
      "text": "* If the error code indicates a transient error (4xx), then the restart procedure MUST be initiated again (as a new transaction).",
      "ja": "エラーコードは、一時的なエラー（4xxの）を示している場合*、その後、再起動の手順は、（新しいトランザクションとして）を再び開始する必要があります。"
    },
    {
      "indent": 3,
      "text": "* If the error code is 521, then the endpoint is redirected, and the restart procedure MUST be initiated again (as a new transaction). The 521 response MUST have included a NotifiedEntity which then is the \"notified entity\" towards which the restart is initiated. If it did not include a NotifiedEntity, the response is treated as any other permanent error (see below).",
      "ja": "エラーコードが521である場合*は、エンドポイントがリダイレクトされ、再起動の手順は、（新しいトランザクションとして）を再び開始する必要があります。 521応答は、その後、再起動が開始された方に「通知実体」であるNotifiedEntityが含まれている必要があります。それはNotifiedEntityが含まれていなかった場合は、応答が（下記参照）、他の永続的なエラーとして扱われます。"
    },
    {
      "indent": 3,
      "text": "* If the error is any other permanent error (5xx), and the endpoint is not able to rectify the error, then the endpoint no longer initiates the restart procedure on its own (until rebooted/restarted) unless otherwise specified. If a command is received for the endpoint, the endpoint MUST initiate the restart procedure again.",
      "ja": "*特に指定のない限り、エラーが他の永続的なエラー（500番台）ではありません、そしてエンドポイントがエラーを修正することができません（再起動/再起動するまで）、その後、エンドポイントは、もはや自分自身で再起動の手順を開始する場合。コマンドは、エンドポイントのために受信された場合、エンドポイントは再び再起動の手順を開始しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Note that if the RestartInProgress is piggybacked with the response (R) to a command received while restarting, then retransmission of the RestartInProgress does not require piggybacking of the response R. However, while the endpoint is restarting, a resend of the response R does require the RestartInProgress to be piggybacked to ensure in-order delivery of the two.",
      "ja": "しかしながら応答R.のピギーバックを必要としない、RestartInProgressの再送信を再開しつつR必要ないエンドポイントは、応答の再送を再開している間、Re​​startInProgressがコマンドに対する応答（R）とピギーバックされた場合には受信したことに注意してくださいRestartInProgressは、二つのインオーダー配信を確実にするためにピギーバックされます。"
    },
    {
      "indent": 3,
      "text": "Should the gateway enter the \"disconnected\" state while carrying out the restart procedure, the disconnected procedure specified in Section 4.4.7 MUST be carried out, except that a \"restart\" rather than \"disconnected\" message is sent during the procedure.",
      "ja": "リスタート手順を行いながらゲートウェイが「切断」状態に入る必要があり、セクション4.4.7で指定された切断手順は、「切断」メッセージは、手順の間に送られるのではなく、「再起動」ことを除いて、実施しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Each endpoint in a gateway will have a provisionable Call Agent, i.e., \"notified entity\", to direct the initial restart message towards. When the collection of endpoints in a gateway is managed by more than one Call Agent, the above procedure MUST be performed for each collection of endpoints managed by a given Call Agent. The gateway MUST take full advantage of wild-carding to minimize the number of RestartInProgress messages generated when multiple endpoints in a gateway restart and the endpoints are managed by the same Call Agent. Note that during startup, it is possible for endpoints to start out as being out-of-service, and then become in-service as part of the gateway initialization procedure. A gateway may thus choose to send first a \"forced\" RestartInProgress for all its endpoints, and subsequently a \"restart\" RestartInProgress for the endpoints that come in-service. Alternatively, the gateway may simply send \"restart\" RestartInProgress for only those endpoints that are in-service, and \"forced\" RestartInProgress for the specific endpoints that are out-of-service. Wild-carding MUST still be used to minimize the number of messages sent though.",
      "ja": "ゲートウェイ内の各エンドポイントは、最初の再起動に向けてメッセージを指示するために、プロビジョニングコール・エージェント、すなわち、「通知実体」を、持っています。ゲートウェイ内のエンドポイントの集合が複数のコールエージェントによって管理されている場合、上記の手順は、与えられたCallエージェントによって管理されるエンドポイントのコレクションごとに行わなければなりません。ゲートウェイは、複数のエンドポイントのゲートウェイの再起動中とエンドポイントが同じCallエージェントによって管理されて生成されたRestartInProgressメッセージの数を最小限にするために野生カーディングを最大限に活用しなければなりません。エンドポイントがアウトオブサービスであるようにして起動し、ゲートウェイ初期化手順の一部としてサービス中となるようにするために起動時に、それが可能であることに留意されたいです。ゲートウェイは、このように最初にすべてのエンドポイントの「強制」RestartInProgress、およびサービス中来るエンドポイントの後に「再起動」RestartInProgressを送信することもできます。また、ゲートウェイは、単にのみでサービスされているエンドポイント、およびアウトオブサービスです特定のエンドポイントのための「強制」RestartInProgressのための「再起動」RestartInProgressを送ることができます。野生梳綿はまだかかわらず、送信されたメッセージの数を最小限にするために使用しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The value of MWD is a configuration parameter that depends on the type of the gateway. The following reasoning can be used to determine the value of this delay on residential gateways.",
      "ja": "MWDの値は、ゲートウェイのタイプに依存する設定パラメータです。以下の推論はレジデンシャルゲートウェイ上でこの遅延の値を決​​定するために使用することができます。"
    },
    {
      "indent": 3,
      "text": "Call agents are typically dimensioned to handle the peak hour traffic load, during which, in average, 10% of the lines will be busy, placing calls whose average duration is typically 3 minutes. The processing of a call typically involves 5 to 6 MGCP transactions between each endpoint and the Call Agent. This simple calculation shows that the Call Agent is expected to handle 5 to 6 transactions for each endpoint, every 30 minutes on average, or, to put it otherwise, about one transaction per endpoint every 5 to 6 minutes on average. This suggest that a reasonable value of MWD for a residential gateway would be 10 to 12 minutes. In the absence of explicit configuration, residential gateways should adopt a value of 600 seconds for MWD.",
      "ja": "コール剤は、典型的には、その間、平均では、ラインの10％は、その平均期間、通常3分で電話をかけ、忙しくなり、ピーク時のトラフィック負荷を処理するような寸法にされています。呼の処理は、典型的には、各エンドポイントとCallエージェントとの間の5〜6 MGCPトランザクションを含みます。この単純な計算では、平均して、すべての5〜6分には、平均して30分ごとには、コールエージェントは、各エンドポイントのために5〜6トランザクションを処理することが期待されていることを示し、または、そうでない場合は、それを置くために、エンドポイントあたり約1トランザクション。これは、レジデンシャルゲートウェイのためのMWDの合理的な値は10〜12分であることを示唆しています。明示的な設定がない場合には、住宅用ゲートウェイはMWDのための600秒の値を採用すべきです。"
    },
    {
      "indent": 3,
      "text": "The same reasoning suggests that the value of MWD should be much shorter for trunking gateways or for business gateways, because they handle a large number of endpoints, and also because the usage rate of these endpoints is much higher than 10% during the peak busy hour, a typical value being 60%. These endpoints, during the peak hour, are thus expected to contribute about one transaction per minute to the Call Agent load. A reasonable algorithm is to make the value of MWD per \"trunk\" endpoint six times shorter than the MWD per residential gateway, and also inversely proportional to the number of endpoints that are being restarted. For example MWD should be set to 2.5 seconds for a gateway that handles a T1 line, or to 60 milliseconds for a gateway that handles a T3 line.",
      "ja": "同じ理由は、これらのエンドポイントの使用率がピーク忙しい時間の間に10％よりはるかに高いので、MWDの値はまた、彼らは、エンドポイントの多数を扱うため、ゲートウェイをトランキング用やビジネス・ゲートウェイのためのはるかに短いこと、および必要があることを示唆しています典型的な値は60％です。これらのエンドポイントは、ピーク時間の間に、このようにコールエージェントの負荷に毎分約1トランザクションを貢献することが期待されています。合理的なアルゴリズムは「トランク」のエンドポイント6倍レジデンシャルゲートウェイあたりのMWDより短く、そして再起動されているエンドポイントの数にも反比例あたりのMWDの値を作ることです。例えばMWDはT1回線を扱うゲートウェイの、又はT3回線を扱うゲートウェイの60ミリ秒まで2.5秒に設定されるべきです。"
    },
    {
      "indent": 0,
      "text": "4.4.7 Disconnected Endpoints",
      "section_title": true,
      "ja": "4.4.7切断されたエンドポイント"
    },
    {
      "indent": 3,
      "text": "In addition to the restart procedure, gateways also have a \"disconnected\" procedure, which MUST be initiated when an endpoint becomes \"disconnected\" as described in Section 4.3. It should here be noted, that endpoints can only become disconnected when they attempt to communicate with the Call Agent. The following steps MUST be followed by an endpoint that becomes \"disconnected\":",
      "ja": "再開手順に加えて、ゲートウェイはまた、セクション4.3で説明したように、エンドポイントが「切断」になったときに開始しなければならない「切断」手順を有します。ここで彼らはコール・エージェントと通信しようとすると、エンドポイントのみを切断になることができることに留意されたいです。次の手順は、「切断」になったエンドポイントが続かなければなりません。"
    },
    {
      "indent": 3,
      "text": "1. A \"disconnected\" timer is initialized to a random value, uniformly distributed between 1 and a provisionable \"disconnected\" initial waiting delay (Tdinit), e.g., 15 seconds. Care MUST be taken to avoid synchronicity of the random number generation between multiple gateways and endpoints that would use the same algorithm.",
      "ja": "1.「切断」タイマーは、ランダム値、均一1およびプロビジョニング「切断」初期待機遅延（Tdinit）、例えば、15秒の間に分布に初期化されます。ケアは、同じアルゴリズムを使用する複数のゲートウェイとエンドポイント間の乱数生成の同期を避けるようにしなければなりません。"
    },
    {
      "indent": 3,
      "text": "2. The gateway then waits for either the end of this timer, the reception of a command for the endpoint from the Call Agent, or the detection of a local user activity for the endpoint, such as for example an off-hook transition.",
      "ja": "2.ゲートウェイは次いで、オフフック遷移例として、このタイマーの終了、コールエージェントからのエンドポイントのコマンドの受信、またはエンドポイントのローカルユーザアクティビティの検出のいずれかを待ちます。"
    },
    {
      "indent": 3,
      "text": "3. When the \"disconnected\" timer elapses for the endpoint, when a command is received for the endpoint, or when local user activity is detected for the endpoint, the gateway initiates the \"disconnected\" procedure for the endpoint - if a disconnected procedure was already in progress for the endpoint, it is simply replaced by the new one. Furthermore, in the case of local user activity, a provisionable \"disconnected\" minimum waiting delay (Tdmin) MUST have elapsed since the endpoint became disconnected or the last time it ended the \"disconnected\" procedure in order to limit the rate at which the procedure is performed. If Tdmin has not passed, the endpoint simply proceeds to step 2 again, without affecting any disconnected procedure already in progress.",
      "ja": "3.ローカルユーザアクティビティがエンドポイントのために検出されたときに経過コマンドは、エンドポイントのために受信されたエンドポイントのための「切断」タイマは、又は、ゲートウェイは、エンドポイントのための「切断」手順を開始する - 切断された手順であった場合すでにエンドポイントの進行中、それは単に新しいものに置き換えられます。また、ローカルユーザアクティビティの場合には、エンドポイントが切断されるようになったので、プロビジョニング「切断」最小待機遅延（Tdmin）が経過しないと、それがために、「切断」手順を終了した最後の時間は、速度を制限するためにどの手順では発表された。 Tdminが経過していない場合、エンドポイントは、単純に、既に進行中の任意の切断手順に影響を与えずに、再度、ステップ2に進みます。"
    },
    {
      "indent": 3,
      "text": "4. If the \"disconnected\" procedure still left the endpoint disconnected, the \"disconnected\" timer is then doubled, subject to a provisionable \"disconnected\" maximum waiting delay (Tdmax), e.g., 600 seconds, and the gateway proceeds with step 2 again (using a new transaction-id).",
      "ja": "「切断」手順はまだ切断エンドポイントをままにした場合4.「切断」タイマーは再度、プロビジョニング「切断」最大待機遅延（Tdmax）、例えば、600秒、およびステップ2とゲートウェイ進む対象倍になります（新しいトランザクションIDを使用して）。"
    },
    {
      "indent": 3,
      "text": "The \"disconnected\" procedure is similar to the restart procedure in that it simply states that the endpoint MUST send a RestartInProgress command to the Call Agent informing it that the endpoint was disconnected. Furthermore, the endpoint MUST guarantee that the first non-audit message (non-audit command or response to non-audit command) that the Call Agent sees from this endpoint MUST inform the Call Agent that the endpoint is disconnected (unless the endpoint goes out-of-service). When a command (C) is received, this is achieved by sending a piggy-backed datagram with a \"disconnected\"",
      "ja": "それは単にエンドポイントは、エンドポイントが切断されたことを知らせるコールエージェントにRestartInProgressコマンドを送信しなければならないと述べているという点で、「切断」の手順は、再起動の手順と同様です。さらに、エンドポイントは、エンドポイントが消灯しない限り、（エンドポイントが切断されていることをコールエージェントに通知しなければならないコール・エージェントは、このエンドポイントから見ている最初の非監査メッセージ（非監査コマンドまたは非監査コマンドに対する応答）ことを保証しなければなりません-of-サービス）。コマンド（C）が受信されると、これが「切断」でピギーバックデータグラムを送信することによって達成されます。"
    },
    {
      "indent": 3,
      "text": "RestartInProgress command and the response to command C to the source address of command C as opposed to the current \"notified entity\". This piggy-backed RestartInProgress is not automatically retransmitted by the endpoint but simply relies on fate-sharing with the piggy-backed response to guarantee the in-order delivery requirement. The Call Agent still sends a response to the piggy-backed RestartInProgress, however, as usual, the response may be lost. In addition to the piggy-backed RestartInProgress command, a new \"disconnected\" procedure is triggered by the command received. This will lead to a non piggy-backed copy (i.e., same transaction) of the \"disconnected\" RestartInProgress command being sent reliably to the current \"notified entity\".",
      "ja": "現在の「通知された実体」とは対照的にRestartInProgressコマンド及びレスポンスは、コマンドCの送信元アドレスにCを指令します。このピギーバックRestartInProgressは自動的にエンドポイントにより再送されないが、単純には、順序どおりの配信要件を保証するためにピギーバック応答で運命の共有に依存しています。コール・エージェントは通常どおり、応答が失われる可能性があり、しかし、ピギーバックRestartInProgressに応答を送信します。ピギーバックRestartInProgressコマンドに加えて、新たな「切断」手順は、受信したコマンドによってトリガされます。これは、現在の「通知された実体」に確実に送信される「切断」RestartInProgressコマンドの非ピギーバックコピー（すなわち、同じトランザクション）につながります。"
    },
    {
      "indent": 3,
      "text": "When the Call Agent learns that the endpoint is disconnected, the Call Agent may then for instance decide to audit the endpoint, or simply clear all connections for the endpoint. Note that each such \"disconnected\" procedure will result in a new RestartInProgress command, which will be subject to the normal retransmission procedures specified in Section 4.3. At the end of the procedure, the endpoint may thus still be \"disconnected\". Should the endpoint go out-of-service while being disconnected, it SHOULD send a \"forced\" RestartInProgress message as described in Section 2.3.12.",
      "ja": "コールエージェントがエンドポイントが切断されていることを学習すると、コールエージェントは、インスタンスのエンドポイントのエンドポイント、または単に明確なすべての接続を監査することもできます。各そのような「切断」手順はセクション4.3で指定された通常の再送手順の対象となる新しいRestartInProgressコマンドをもたらすことに留意されたいです。手順の終了時に、エンドポイントは、このように依然として「切断」されてもよいです。エンドポイントが切断された状態で、セクション2.3.12で説明したように、それは「強制」RestartInProgressメッセージを送るべきでアウトオブサービスに行く必要があります。"
    },
    {
      "indent": 3,
      "text": "The disconnected procedure is complete once a success response has been received. Error responses are handled similarly to the restart procedure (Section 4.4.6). If the \"disconnected\" procedure is to be initiated again following an error response, the rate-limiting timer considerations specified above still apply.",
      "ja": "成功応答を受信した後、切断手順は完了です。エラー応答は、再起動の手順（4.4.6項）と同様に処理されます。 「切断」手順は、エラー応答次再び開始される場合は、上記の指定されたレート制限タイマーの考慮事項が適用されます。"
    },
    {
      "indent": 3,
      "text": "Note, that if the RestartInProgress is piggybacked with the response (R) to a command received while being disconnected, then retransmission of this particular RestartInProgress does not require piggybacking of the response R. However, while the endpoint is disconnected, resending the response R does require the RestartInProgress to be piggybacked with the response to ensure the in-order delivery of the two.",
      "ja": "切断された状態で受信したエンドポイントが切断されている間、この特定のRestartInProgressの再送が、しかし応答R.のピギーバックを必要としないRestartInProgressがコマンドに対する応答（R）とピギーバックされた場合にメモ、Rはない応答を再送信します両者の順序配信を保証するために応答してピギーバックするRestartInProgressを必要とします。"
    },
    {
      "indent": 3,
      "text": "If a set of disconnected endpoints have the same \"notified entity\", and the set of endpoints can be named with a wildcard, the gateway MAY replace the individual disconnected procedures with a suitably wildcarded disconnected procedure instead. In that case, the Restart Delay for the wildcarded \"disconnected\" RestartInProgress command SHALL be the Restart Delay corresponding to the oldest disconnected procedure replaced. Note that if only a subset of these endpoints subsequently have their \"notified entity\" changed and/or are no longer disconnected, then that wildcarded disconnected procedure can no longer be used. The remaining individual disconnected procedures MUST then be resumed again.",
      "ja": "切断、エンドポイントのセットが同じ「通知実体」を持っている、およびエンドポイントのセットがワイルドカードで指定することができた場合は、ゲートウェイではなく、適切にワイルドカードを切断の手順で、個々の切断手順を交換することができます。その場合には、ワイルドカード「切断」RestartInProgressコマンドの再起動遅延は、再起動遅延を交換最古の切断プロシージャに対応しなければなりません。これらのエンドポイントのサブセットのみが、その後彼らの「通知実体は」変化していないおよび/またはもはや切断されている場合は、その後、切断手順が使用できなくなるワイルドカードということに注意してください。残りの個々の切断された手順が再び再開されなければなりません。"
    },
    {
      "indent": 3,
      "text": "A disconnected endpoint may wish to send a command (besides RestartInProgress) while it is disconnected. Doing so will only succeed once the Call Agent is reachable again, which raises the question of what to do with such a command meanwhile. At one extreme, the endpoint could drop the command right away, however that would not work very well when the Call Agent was in fact available, but the endpoint had not yet completed the \"disconnected\" procedure (consider for example the case where a NotificationRequest was just received which immediately resulted in a Notify being generated). To prevent such scenarios, disconnected endpoints SHALL NOT blindly drop new commands to be sent for a period of T-MAX seconds after they receive a non-audit command.",
      "ja": "切断されたエンドポイントは、それが切断されている間（RestartInProgress以外）コマンドを送信することを望むかもしれません。コールエージェントが再び到達可能になるとそうすることだけ一方、このようなコマンドをどうするかという問題を提起され、成功します。一方の極端では、エンドポイントは、コールエージェントが実際に利用可能であったときに、非常にうまく機能しないことが、すぐにコマンドをドロップすることもできますが、エンドポイントは、まだどこNotificationRequestたとえば場合を考える（「切断」の手順を完了していませんでしたちょうど受け取った直後に）生成される通知をもたらしました。彼らは非監査コマンドを受け取った後、このようなシナリオを回避するために、切断エンドポイントは盲目的T-MAX秒の期間に送信される新しいコマンドをドロップしないものとします。"
    },
    {
      "indent": 3,
      "text": "One way of satisfying this requirement is to employ a temporary buffering of commands to be sent, however in doing so, the endpoint MUST ensure, that it:",
      "ja": "この要件を満たす一つの方法は、しかし、そうすることで、送信されるコマンドの一時的なバッファリングを使用することで、エンドポイントは確保しなければならない、ということ："
    },
    {
      "indent": 3,
      "text": "* does not build up a long queue of commands to be sent,",
      "ja": "*送信するコマンドの長い行列を構築していません、"
    },
    {
      "indent": 3,
      "text": "* does not swamp the Call Agent by rapidly sending too many commands once it is connected again.",
      "ja": "*それが再び接続されると、急速にあまりにも多くのコマンドを送信することにより、コールエージェントを圧倒しません。"
    },
    {
      "indent": 3,
      "text": "Buffering commands for T-MAX seconds and, once the endpoint is connected again, limiting the rate at which buffered commands are sent to one outstanding command per endpoint is considered acceptable (see also Section 4.4.8, especially if using wildcards). If the endpoint is not connected within T-MAX seconds, but a \"disconnected\" procedure is initiated within T-MAX seconds, the endpoint MAY piggyback the buffered command(s) with that RestartInProgress. Note, that once a command has been sent, regardless of whether it was buffered initially, or piggybacked earlier, retransmission of that command MUST cease T-MAX seconds after the initial send as described in Section 4.3.",
      "ja": "バッファリングは、エンドポイントごとに優れたコマンドに送信されたコマンドをバッファリングする速度を制限し、エンドポイントが再接続されると、T-MAX秒のコマンドとは、（特に、ワイルドカードを使用している場合、また、セクション4.4.8を参照）が許容できると考えられます。エンドポイントがT-MAX秒以内に接続されていないが、「切断」手順はT-MAX秒以内に開始された場合、エンドポイントはそのRestartInProgressで緩衝コマンド（複数可）をピギーバックするかもしれません。コマンドは関係なく、それが最初にバッファされたかどうかの、送信された、またはそれ以前のピギーバックされた後、4.3節で説明したように、そのコマンドの再送信は最初の送信後にT-MAX秒を中止しなければならないことに注意してください。"
    },
    {
      "indent": 3,
      "text": "This specification purposely does not specify any additional behavior for a disconnected endpoint. Vendors MAY for instance choose to provide silence, play reorder tone, or even enable a downloaded wav file to be played.",
      "ja": "この仕様は、意図的に切断したエンドポイントのための任意の追加の動作を指定しません。例えば、ベンダーMAYは、沈黙を提供することを選択したリオーダートーンを再生し、あるいは再生するダウンロードしたwavファイルを有効にします。"
    },
    {
      "indent": 3,
      "text": "The default value for Tdinit is 15 seconds, the default value for Tdmin, is 15 seconds, and the default value for Tdmax is 600 seconds.",
      "ja": "Tdinitのデフォルト値はTdminのデフォルト値は、15秒、15秒、Tdmaxのデフォルト値は600秒です。"
    },
    {
      "indent": 0,
      "text": "4.4.8 Load Control in General",
      "section_title": true,
      "ja": "一般で4.4.8負荷制御"
    },
    {
      "indent": 3,
      "text": "The previous sections have described several MGCP mechanisms to deal with congestion and overload, namely:",
      "ja": "前のセクションでは、即ち、渋滞や過負荷に対処するためにいくつかのMGCP機構を記載しています。"
    },
    {
      "indent": 3,
      "text": "* the UDP retransmission strategy which adapts to network and call agent congestion on a per endpoint basis,",
      "ja": "*ネットワークとエンドポイントごとにエージェントの混雑を呼び出すために適応UDP再送戦略、"
    },
    {
      "indent": 3,
      "text": "* the guidelines on the ordering of commands which limit the number of commands issued in parallel,",
      "ja": "*並列に発行されたコマンドの数を制限するコマンドの順序付けに関するガイドライン、"
    },
    {
      "indent": 3,
      "text": "* the restart procedure which prevents flooding in case of a restart avalanche, and",
      "ja": "*再起動雪崩の場合に浸水を防ぎ、再起動手順、および"
    },
    {
      "indent": 3,
      "text": "* the disconnected procedure which prevents flooding in case of a large number of disconnected endpoints.",
      "ja": "*切断エンドポイントが多数の場合にはフラッディングを防止する切断手順。"
    },
    {
      "indent": 3,
      "text": "It is however still possible for a given set of endpoints, either on the same or different gateways, to issue one or more commands at a given point in time. Although it can be argued, that Call Agents should be sized to handle one message per served endpoint at any given point in time, this may not always be the case in practice. Similarly, gateways may not be able to handle a message for all of its endpoints at any given point in time. In general, such issues can be dealt with through the use of a credit-based mechanism, or by monitoring and automatically adapting to the observed behavior. We opt for the latter approach as follows.",
      "ja": "これは、ある時点で1つ以上のコマンドを発行するために、同じまたは異なるゲートウェイに、エンドポイントのセットでまだことは可能です。それはコールエージェントが任意の時点で提供したエンドポイントごとに1つのメッセージを処理するような大きされるべきであると、主張することができますが、これは常に実際にはそうでないかもしれません。同様に、ゲートウェイは、時間内の任意の所与の時点で、そのエンドポイントのすべてのメッセージを処理することができないかもしれません。一般に、このような問題は、クレジットベースのメカニズムを使用することによって、又は監視し、自動的に観察された挙動に適合させることによって対応することができます。次のように私たちは、後者のアプローチを選びます。"
    },
    {
      "indent": 3,
      "text": "Conceptually, we assume that Call Agents and gateways maintain a queue of incoming transactions to be executed. Associated with this transaction queue is a high-water and a low-water mark. Once the queue length reaches the high-water mark, the entity SHOULD start issuing 101 provisional responses (transaction queued) until the queue length drops to the low-water mark. This applies to new transactions as well as to retransmissions. If the entity is unable to process any new transactions at this time, it SHOULD return error code 409 (processing overload).",
      "ja": "概念的に、私たちは、コールエージェントとゲートウェイが実行される入力トランザクションのキューを維持することを前提としています。高水および低ウォーターマークは、このトランザクション・キューに関連付けられています。キューの長さが高ウォーターマークに達するとキュー長が低水準に低下するまで、エンティティ（トランザクションがキューイング）101の暫定応答を発行開始する必要があります。これは、新しい取引だけでなく、再送信に適用されます。エンティティは、この時点で新しいトランザクションを処理することができない場合は、エラーコード409（処理過負荷）を返すべきです。"
    },
    {
      "indent": 3,
      "text": "Furthermore, gateways SHOULD adjust the sending rate of new commands to a given Call Agent by monitoring the observed response times from that Call Agent to a *set* of endpoints. If the observed smoothed average response time suddenly rises significantly over some threshold, or the gateway receives a 101 (transaction queued) or 409 (overload) response, the gateway SHOULD adjust the sending rate of new commands to that Call Agent accordingly. The details of the smoothing average algorithm, the rate adjustments, and the thresholds involved are for further study, however they MUST be configurable.",
      "ja": "それは、エンドポイントの*セット*にエージェントを呼び出してから、さらに、ゲートウェイは、観測された応答時間を監視することにより、与えられたコール・エージェントに新しいコマンドの送信レートを調整する必要があります。観察された平滑化平均応答時間が突然いくつかの閾値を超え大幅に上昇、またはゲートウェイ101（キューに入れられたトランザクション）または409（過負荷）応答を受信した場合、ゲートウェイはそのエージェントに応じて呼に新しいコマンドの送信速度を調整する必要があります。平滑平均アルゴリズムの詳細、レート調整、および関連するしきい値は、今後の検討課題であるが、しかし、彼らは構成可能でなければなりません。"
    },
    {
      "indent": 3,
      "text": "Similarly, Call Agents SHOULD adjust the sending rate of new transactions to a given gateway by monitoring the observed response times from that gateway for a *set* of endpoints. If the observed smoothed average response time suddenly rises significantly over some threshold, or the Call Agent receives a 101 (transaction queued) or 409 (overloaded), the Call Agent SHOULD adjust the sending rate of new commands to that gateway accordingly. The details of the smoothing average algorithm, the rate adjustments, and the thresholds involved are for further study, however they MUST be configurable.",
      "ja": "同様に、コールエージェントはエンドポイントの*セット*ため、そのゲートウェイから見た応答時間を監視することによって与えられるゲートウェイに新たなトランザクションの送信速度を調整する必要があります。観察された平滑化平均応答時間が突然いくつかの閾値を超え大幅に上昇、または電話エージェントが（オーバーロード）101（トランザクションは、キューに入れられた）または409を受信した場合、コールエージェントは、それに応じてそのゲートウェイに新しいコマンドの送信速度を調整する必要があります。平滑平均アルゴリズムの詳細、レート調整、および関連するしきい値は、今後の検討課題であるが、しかし、彼らは構成可能でなければなりません。"
    },
    {
      "indent": 0,
      "text": "5. Security Requirements",
      "section_title": true,
      "ja": "5.セキュリティ要件"
    },
    {
      "indent": 3,
      "text": "Any entity can send a command to an MGCP endpoint. If unauthorized entities could use the MGCP, they would be able to set-up unauthorized calls, or to interfere with authorized calls. We expect that MGCP messages will always be carried over secure Internet connections, as defined in the IP security architecture as defined in RFC 2401, using either the IP Authentication Header, defined in RFC 2402, or the IP Encapsulating Security Payload, defined in RFC 2406. The complete MGCP protocol stack would thus include the following layers:",
      "ja": "任意のエンティティは、MGCPエンドポイントにコマンドを送信することができます。不正な実体がMGCPを使用することができれば、彼らは不正な呼び出しを、設定すること、または認定通話を妨害することができるでしょう。私たちは、RFC 2402で定義されているIP認証ヘッダ、またはRFC 2406で定義されているIPカプセル化セキュリティペイロード、のいずれかを使用して、RFC 2401で定義されているIPセキュリティアーキテクチャで定義されているMGCPメッセージは常に、セキュアなインターネット接続を介して運ばれることを期待します。完全なMGCPプロトコルスタックは、このように以下の層を含めます。"
    },
    {
      "indent": 15,
      "text": " -------------------------------\n|              MGCP             |\n|-------------------------------|\n|              UDP              |\n|-------------------------------|\n|          IP security          |\n| (authentication or encryption)|\n|-------------------------------|\n|              IP               |\n|-------------------------------|\n|       transmission media      |\n -------------------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Adequate protection of the connections will be achieved if the gateways and the Call Agents only accept messages for which IP security provided an authentication service. An encryption service will provide additional protection against eavesdropping, thus preventing third parties from monitoring the connections set up by a given endpoint.",
      "ja": "ゲートウェイとコールエージェントのみIPセキュリティが認証サービスを提供しているため、メッセージを受け入れる場合、接続の適切な保護が達成されるであろう。暗号化サービスは、このように特定のエンドポイントによって設定された接続を監視から第三者を防止、盗聴に対する追加の保護を提供します。"
    },
    {
      "indent": 3,
      "text": "The encryption service will also be requested if the session descriptions are used to carry session keys, as defined in SDP.",
      "ja": "セッション記述は、セッションキーを運ぶために使用されている場合はSDPで定義されている暗号化サービスも、要求されます。"
    },
    {
      "indent": 3,
      "text": "These procedures do not necessarily protect against denial of service attacks by misbehaving gateways or misbehaving Call Agents. However, they will provide an identification of these misbehaving entities, which should then be deprived of their authorization through maintenance procedures.",
      "ja": "これらの手順は、必ずしもゲートウェイをふらちな事やコールエージェントを不正な動作により、サービス拒否攻撃から保護することはできません。しかし、彼らはその後、保守手順を介して自分の権限を奪われるべきこれらの動作不良のエンティティの識別情報を提供します。"
    },
    {
      "indent": 0,
      "text": "5.1 Protection of Media Connections",
      "section_title": true,
      "ja": "メディア接続の5.1保護"
    },
    {
      "indent": 3,
      "text": "MGCP allows Call Agent to provide gateways with \"session keys\" that can be used to encrypt the audio messages, protecting against eavesdropping.",
      "ja": "MGCPコールエージェントが盗聴から保護、オーディオメッセージを暗号化するために使用することができ、「セッションキー」とのゲートウェイを提供することができます。"
    },
    {
      "indent": 3,
      "text": "A specific problem of packet networks is \"uncontrolled barge-in\". This attack can be performed by directing media packets to the IP address and UDP port used by a connection. If no protection is implemented, the packets will be decoded and the signals will be played on the \"line side\".",
      "ja": "パケットネットワークの特定の問題は、「制御されていないバージ・イン」です。この攻撃は、接続が使用するIPアドレスとUDPポートにメディアパケットを向けることによって行うことができます。何の保護が実装されていない場合、パケットが復号化され、信号は「ライン側」に再生されます。"
    },
    {
      "indent": 3,
      "text": "A basic protection against this attack is to only accept packets from known sources, however this tends to conflict with RTP principles. This also has two inconveniences: it slows down connection establishment and it can be fooled by source spoofing:",
      "ja": "この攻撃に対する基本的な保護は、しかし、これはRTPの原則と矛盾する傾向があり、唯一の既知のソースからのパケットを受け入れることです。これは、2件の不具合があります。それは、接続の確立が遅くなり、それがソーススプーフィングによってだまさすることができます。"
    },
    {
      "indent": 3,
      "text": "* To enable the address-based protection, the Call Agent must obtain the source address of the egress gateway and pass it to the ingress gateway. This requires at least one network round trip, and leaves us with a dilemma: either allow the call to proceed without waiting for the round trip to complete, and risk for example \"clipping\" a remote announcement, or wait for the full round trip and settle for slower call-set-up procedures.",
      "ja": "*アドレスベースの保護を有効にするには、コールエージェントは、出口ゲートウェイの送信元アドレスを取得し、着信ゲートウェイにそれを渡す必要があります。このことは、少なくとも1つのネットワーク・ラウンドトリップを必要とし、ジレンマを私たちに残します：どちらかの呼び出しが完了するまでに、往復のを待たずに続行することができ、およびリモート発表を「クリッピング」は、例えばリスク、または完全な往復を待ち、遅くコール・セットアップ手続きのために解決。"
    },
    {
      "indent": 3,
      "text": "* Source spoofing is only effective if the attacker can obtain valid pairs of source and destination addresses and ports, for example by listening to a fraction of the traffic. To fight source spoofing, one could try to control all access points to the network. But this is in practice very hard to achieve.",
      "ja": "攻撃者は、トラフィックの割合を聞くことによって、たとえば、送信元と宛先のアドレスとポートの有効なペアを得ることができれば*ソーススプーフィングにのみ有効です。ソーススプーフィングと戦うためには、ネットワークへのすべてのアクセスポイントを制御するために試みることができます。しかし、これは実際に達成するのは非常に困難です。"
    },
    {
      "indent": 3,
      "text": "An alternative to checking the source address is to encrypt and authenticate the packets, using a secret key that is conveyed during the call set-up procedure. This will not slow down the call set-up, and provides strong protection against address spoofing.",
      "ja": "送信元アドレスをチェックする代わりに、呼設定手順の間に搬送された秘密鍵を使用して、暗号化したパケットを認証することです。これは、呼設定を遅くし、アドレススプーフィングに対する強力な保護を提供しません。"
    },
    {
      "indent": 0,
      "text": "6. Packages",
      "section_title": true,
      "ja": "6.パッケージ"
    },
    {
      "indent": 3,
      "text": "As described in Section 2.1.6, packages are the preferred way of extending MGCP. In this section we describe the requirements associated with defining a package.",
      "ja": "2.1.6項で説明したように、パッケージは、MGCPを拡張する好ましい方法です。このセクションでは、パッケージを定義するに関連付けられている要件について説明します。"
    },
    {
      "indent": 3,
      "text": "A package MUST have a unique package name defined. The package name MUST be registered with the IANA, unless it starts with the characters \"x-\" or \"x+\" which are reserved for experimental packages. Please refer to Appendix C for IANA considerations.",
      "ja": "パッケージには、定義されたユニークなパッケージ名を持たなければなりません。それは実験的なパッケージのために予約されている文字「x軸」または「X +」で始まる場合を除き、パッケージ名は、IANAに登録しなければなりません。 IANAの考慮事項については、付録Cを参照してください。"
    },
    {
      "indent": 3,
      "text": "A package MUST also have a version defined which is simply a non-negative integer. The default and initial version of a package is zero, the next version is one, etc. New package versions MUST be completely backwards compatible, i.e., a new version of a package MUST NOT redefine or remove any of the extensions provided in an earlier version of the package. If such a need arises, a new package name MUST be used instead.",
      "ja": "パッケージは、単に非負整数で定義されたバージョンを持っていなければなりません。パッケージのデフォルトの初期バージョンは、次のバージョンは、新しいパッケージのバージョンが完全に後方互換性、すなわち、パッケージの新しいバージョンが再定義またはそれ以前のバージョンで提供拡張子のいずれかを削除してはなりませんでなければならないなど、一つであり、ゼロでありますパッケージの。そのような必要が生じた場合は、新しいパッケージ名を代わりに使用しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Packages containing signals of type time-out MAY indicate if the \"to\" parameter is supported for all the time-out signals in the package as well as the default rounding rules associated with these (see Section 3.2.2.4). If no such definition is provided, each time-out signal SHOULD provide these definitions.",
      "ja": "「へ」のパラメータは、パッケージならびにこれらに関連するデフォルトの丸めルール内のすべてのタイム・アウト信号のためにサポートされている場合タイプのタイムアウトのシグナルを含むパッケージは、（セクション3.2.2.4を参照）を示している場合があります。そのような定義が提供されない場合、各タイムアウト信号は、これらの定義を提供しなければなりません。"
    },
    {
      "indent": 3,
      "text": "A package defines one or more of the following extensions:",
      "ja": "パッケージには、次の拡張子の1以上を定義しています。"
    },
    {
      "indent": 3,
      "text": "* Actions",
      "ja": "* 行動"
    },
    {
      "indent": 3,
      "text": "* BearerInformation",
      "ja": "* BearerInformation"
    },
    {
      "indent": 3,
      "text": "* ConnectionModes",
      "ja": "* ConnectionModes"
    },
    {
      "indent": 3,
      "text": "* ConnectionParameters",
      "ja": "* ConnectionParameters"
    },
    {
      "indent": 3,
      "text": "* DigitMapLetters",
      "ja": "* DigitMapLetters"
    },
    {
      "indent": 3,
      "text": "* Events and Signals",
      "ja": "*イベントとシグナル"
    },
    {
      "indent": 3,
      "text": "* ExtensionParameters",
      "ja": "* ExtensionParameters"
    },
    {
      "indent": 3,
      "text": "* LocalConnectionOptions",
      "ja": "* LocalConnectionOptions"
    },
    {
      "indent": 3,
      "text": "* ReasonCodes",
      "ja": "* ReasonCodes"
    },
    {
      "indent": 3,
      "text": "* RestartMethods",
      "ja": "* RestartMethods"
    },
    {
      "indent": 3,
      "text": "* Return codes",
      "ja": "*戻りコード"
    },
    {
      "indent": 3,
      "text": "For each of the above types of extensions supported by the package, the package definition MUST contain a description of the extension as defined in the following sections. Please note, that package extensions, just like any other extension, MUST adhere to the MGCP grammar.",
      "ja": "以下のセクションで定義されるようなパッケージでサポートされている拡張の上記のタイプのそれぞれについて、パッケージ定義は、拡張の記述を含まなければなりません。ただ、他の延長のようなパッケージの拡張子は、MGCP文法に準拠しなければならないことに注意してください。"
    },
    {
      "indent": 0,
      "text": "6.1 Actions",
      "section_title": true,
      "ja": "6.1アクション"
    },
    {
      "indent": 3,
      "text": "Extension Actions SHALL include:",
      "ja": "拡張アクションが含まれなければなりません。"
    },
    {
      "indent": 3,
      "text": "* The name and encoding of the extension action.",
      "ja": "*名と拡張子アクションのエンコーディング。"
    },
    {
      "indent": 3,
      "text": "* If the extension action takes any action parameters, then the name, encoding, and possible values of those parameters.",
      "ja": "*拡張アクションはその後、任意のアクションパラメータ、名前、エンコーディング、およびそれらのパラメータの可能な値を取る場合。"
    },
    {
      "indent": 3,
      "text": "* A description of the operation of the extension action.",
      "ja": "*拡張アクションの動作の説明。"
    },
    {
      "indent": 3,
      "text": "* A listing of the actions in this specification the extension can be combined with. If such a listing is not provided, it is assumed that the extension action cannot be combined with any other action in this specification.",
      "ja": "*拡張子はと組み合わせることができ、本明細書中のアクションのリスト。このようなリストが提供されていない場合は、拡張作用は、本明細書中の他のアクションと組み合わせることができないことが想定されます。"
    },
    {
      "indent": 3,
      "text": "* If more than one extension action is defined in the package, then a listing of the actions in the package the extension can be combined with. If such a listing is not provided, it is assumed that the extension action cannot be combined with any other action in the package.",
      "ja": "複数の拡張アクションがパッケージで定義されている場合は*、パッケージ内のアクションの拡張子のリストを組み合わせることができます。このようなリストが提供されていない場合は、拡張アクションは、パッケージ内の他のアクションと組み合わせることができないことが想定されます。"
    },
    {
      "indent": 3,
      "text": "Extension actions defined in two or more different packages SHOULD NOT be used simultaneously, unless very careful consideration to their potential interaction and side-effects has been given.",
      "ja": "彼らの潜在的な相互作用と副作用に非常に慎重に検討を与えられていない限り、二つ以上の異なるパッケージで定義された拡張アクションは、同時に使用されるべきではありません。"
    },
    {
      "indent": 0,
      "text": "6.2 BearerInformation",
      "section_title": true,
      "ja": "6.2 BearerInformation"
    },
    {
      "indent": 3,
      "text": "BearerInformation extensions SHALL include:",
      "ja": "BearerInformation拡張子が含まれなければなりません。"
    },
    {
      "indent": 3,
      "text": "* The name and encoding of the BearerInformation extension.",
      "ja": "*名前とBearerInformation拡張子のエンコーディング。"
    },
    {
      "indent": 3,
      "text": "* The possible values and encoding of those values that can be assigned to the BearerInformation extension.",
      "ja": "*可能な値とBearerInformation拡張に割り当てることができ、それらの値の符号化。"
    },
    {
      "indent": 3,
      "text": "* A description of the operation of the BearerInformation extension. As part of this description the default value (if any) if the extension is omitted in an EndpointConfiguration command MUST be defined. It may be necessary to make a distinction between the default value before and after the initial application of the parameter, for example if the parameter retains its previous value once specified, until explicitly altered. If default values are not described, then the extension parameter simply defaults to empty in all EndpointConfiguration commands.",
      "ja": "* BearerInformation拡張の動作の説明。本明細書の一部としてデフォルト値（もしあれば）拡張をEndpointConfigurationコマンドで省略された場合に定義されなければなりません。明示的に変更されるまでパラメータは、一度指定された前の値を保持している場合には、例えば、パラメータの最初の適用前後のデフォルト値との間の区別をする必要があるかもしれません。デフォルト値が記述されていない場合は、単に拡張パラメータのデフォルトは、すべてのEndpointConfigurationコマンドで空に。"
    },
    {
      "indent": 3,
      "text": "Note that the extension SHALL be included in the result for an AuditEndpoint command auditing the BearerInformation.",
      "ja": "拡張子がBearerInformationを監査AuditEndpointコマンドの結果に含めなければならないことに留意されたいです。"
    },
    {
      "indent": 0,
      "text": "6.3 ConnectionModes",
      "section_title": true,
      "ja": "6.3 ConnectionModes"
    },
    {
      "indent": 3,
      "text": "Extension Connection Modes SHALL include:",
      "ja": "内線接続モードが含まれなければなりません。"
    },
    {
      "indent": 3,
      "text": "* The name and encoding of the extension connection mode.",
      "ja": "*名前と内線接続モードのエンコーディング。"
    },
    {
      "indent": 3,
      "text": "* A description of the operation of the extension connection mode.",
      "ja": "*内線接続モードの動作について説明します。"
    },
    {
      "indent": 3,
      "text": "* A description of the interaction a connection in the extension connection mode will have with other connections in each of the modes defined in this specification. If such a description is not provided, the extension connection mode MUST NOT have any interaction with other connections on the endpoint.",
      "ja": "*相互作用の記述は、内線接続モードの接続は、本明細書で定義されたモードのそれぞれにおける他の接続を有することになります。そのような記述が提供されていない場合は、内線接続モードは、エンドポイント上の他の接続との任意の相互作用を持ってはいけません。"
    },
    {
      "indent": 3,
      "text": "Extension connection modes SHALL NOT be included in the list of modes in a response to an AuditEndpoint for Capabilities, since the package will be reported in the list of packages.",
      "ja": "パッケージは、パッケージのリストに報告されますので、内線接続モードは、機能のAuditEndpointに応じてモードのリストに含まれないものとします。"
    },
    {
      "indent": 0,
      "text": "6.4 ConnectionParameters",
      "section_title": true,
      "ja": "6.4 ConnectionParameters"
    },
    {
      "indent": 3,
      "text": "Extension Connection Parameters SHALL include:",
      "ja": "拡張接続パラメータが含まれなければなりません。"
    },
    {
      "indent": 3,
      "text": "* The name and encoding of the connection parameter extension.",
      "ja": "*名と接続パラメータの拡張機能のエンコーディング。"
    },
    {
      "indent": 3,
      "text": "* The possible values and encoding of those values that can be assigned to the connection parameter extension.",
      "ja": "*可能な値及び接続パラメータ拡張に割り当てることができ、それらの値の符号化。"
    },
    {
      "indent": 3,
      "text": "* A description of how those values are derived.",
      "ja": "*これらの値が導出されている方法の説明。"
    },
    {
      "indent": 3,
      "text": "Note that the extension connection parameter MUST be included in the result for an AuditConnection command auditing the connection parameters.",
      "ja": "内線接続パラメータを接続パラメータを監査AuditConnectionコマンドの結果に含まれなければならないことに留意されたいです。"
    },
    {
      "indent": 0,
      "text": "6.5 DigitMapLetters",
      "section_title": true,
      "ja": "6.5 DigitMapLetters"
    },
    {
      "indent": 3,
      "text": "Extension Digit Map Letters SHALL include:",
      "ja": "拡張桁地図文字が含まれなければなりません。"
    },
    {
      "indent": 3,
      "text": "* The name and encoding of the extension digit map letter(s).",
      "ja": "*名と拡張子ケタ地図手紙（S）のエンコーディング。"
    },
    {
      "indent": 3,
      "text": "* A description of the meaning of the extension digit map letter(s).",
      "ja": "*拡張ケタ地図手紙（複数可）の意味の説明。"
    },
    {
      "indent": 3,
      "text": "Note that extension DigitMapLetters in a digit map do not follow the normal naming conventions for extensions defined in packages. More specifically the package name and slash (\"/\") will not be part of the extension name, thereby forming a flat and limited name space with potential name clashing.",
      "ja": "ケタマップでその延長DigitMapLettersはパッケージで定義された拡張のための通常の命名規則に従っていません。より具体的には、パッケージ名とスラッシュ（「/」）、それによって潜在的名前ぶつかり合っで平坦かつ限られた名前空間を形成し、拡張名の一部ではありません。"
    },
    {
      "indent": 3,
      "text": "Therefore, a package SHALL NOT define a digit map letter extension whose encoding has already been used in another package. If two packages have used the same encoding for a digit map letter extension, and those two packages are supported by the same endpoint, the result of using that digit map letter extension is undefined.",
      "ja": "そのため、パッケージには、そのエンコーディング、既に別のパッケージに使用されているケタ地図手紙拡張を定義しないものとします。二つのパッケージがケタ地図手紙拡張のための同じエンコーディングを使用しており、これら二つのパッケージが同じエンドポイントでサポートされている場合は、その数字マップ文字の拡張子を使用しての結果は未定義です。"
    },
    {
      "indent": 3,
      "text": "Note that although an extension DigitMapLetter does not include the package name prefix and slash (\"/\") as part of the extension name within a digit map, the package name prefix and slash are included when the event code for the event that matched the DigitMapLetter is reported as an observed event. In other words, the digit map just define the matching rule(s), but the event is still reported like any other event.",
      "ja": "拡張がDigitMapLetterは（「/」）の数字マップ内の拡張子名の一部としてパッケージ名接頭辞を含み、スラッシュいないことに注意してください、パッケージ名プレフィックスとスラッシュが含まれる場合DigitMapLetterを一致イベントのイベントコード観測されたイベントとして報告されます。換言すれば、ケタ地図は、単にマッチングルール（複数可）を定義したが、イベントは依然として他のイベントと同様に報告されています。"
    },
    {
      "indent": 0,
      "text": "6.6 Events and Signals",
      "section_title": true,
      "ja": "6.6イベントとシグナル"
    },
    {
      "indent": 3,
      "text": "The event/signal definition SHALL include the precise name of the event/signal (i.e., the code used in MGCP), a plain text definition of the event/signal, and, when appropriate, the precise definition of the corresponding events/signals, for example the exact frequencies of audio signals such as dial tones or DTMF tones.",
      "ja": "イベント/信号の定義は、イベント/信号の正確な名前（すなわち、MGCPで使用されるコード）、イベント/信号のプレーンテキストの定義、及び、適切な場合には、対応するイベント/信号の正確な定義を含むものとそのようなダイヤルトーンまたはDTMFトーンのようなオーディオ信号の正確な周波数は、例えば。"
    },
    {
      "indent": 3,
      "text": "The package description MUST provide, for each event/signal, the following information:",
      "ja": "パッケージの説明は、各イベント/信号のために、以下の情報を提供する必要があります。"
    },
    {
      "indent": 3,
      "text": "* The description of the event/signal and its purpose, which SHOULD include the actual signal that is generated by the client (e.g., xx ms FSK tone) as well as the resulting user observed result (e.g., Message Waiting light on/off).",
      "ja": "*クライアントによって生成される実際の信号（例えば、XX MS FSKトーン）、ならびに得られたユーザ観察結果（オン/オフ光を待って、例えば、メッセージ）を含むべきイベント/信号及びその目的の説明、 。"
    },
    {
      "indent": 3,
      "text": "The event code used for the event/signal.",
      "ja": "イベント/信号に使用されるイベントコード。"
    },
    {
      "indent": 3,
      "text": "* The detailed characteristics of the event/signal, such as for example frequencies and amplitude of audio signals, modulations and repetitions. Such details may be country specific.",
      "ja": "*例えば周波数および音声信号、変調及び繰り返しの振幅のようなイベント/信号の詳細な特性、。このような詳細は、特定の国かもしれません。"
    },
    {
      "indent": 3,
      "text": "* The typical and maximum duration of the event/signal if applicable.",
      "ja": "*イベント/信号の典型的な最大時間を該当する場合。"
    },
    {
      "indent": 3,
      "text": "* If the signal or event can be applied to a connection (across a media stream), it MUST be indicated explicitly. If no such indication is provided, it is assumed that the signal or event cannot be applied to a connection.",
      "ja": "信号イベントが（メディアストリームを横切って）接続に適用することができる*場合は、それが明示されなければなりません。このような表示が提供されない場合には、信号またはイベントが接続には適用できないことが想定されます。"
    },
    {
      "indent": 3,
      "text": "For events, the following MUST be provided as well:",
      "ja": "イベントでは、以下も同様に提供しなければなりません："
    },
    {
      "indent": 3,
      "text": "* An indication if the event is persistent. By default, events are not persistent - defining events as being persistent is discouraged (see Appendix B for a preferred alternative). Note that persistent",
      "ja": "*イベントが永続的である場合に表示。デフォルトでは、イベントは永続的ではありません - （好ましい代替については、付録Bを参照してください）推奨されて永続的なものとしてイベントを定義します。その持続的に注意してください。"
    },
    {
      "indent": 5,
      "text": "events will automatically trigger a Notify when they occur, unless the Call Agent explicitly instructed the endpoint otherwise. This not only violates the normal MGCP model, but also assumes the Call Agent supports the package in question. Such an assumption is unlikely to hold in general.",
      "ja": "イベントは、自動的に、彼らが発生したときにコールエージェントが明示的にエンドポイントを指示されない限り、通知がトリガされます。これは通常のMGCPモデルに違反するだけでなく、コールエージェントが対象のパッケージをサポートしている前提としていないだけ。このような仮定は、一般的に保持することはほとんどありません。"
    },
    {
      "indent": 3,
      "text": "* An indication if there is an auditable event-state associated with the event. By default, events do not have auditable event-states.",
      "ja": "*イベントに関連付けられた監査可能イベント状態がある場合に表示。デフォルトでは、イベントは監査可能イベントの状態を持っていません。"
    },
    {
      "indent": 3,
      "text": "* If event parameters are supported, it MUST be stated explicitly. The precise syntax and semantics of these MUST then be provided (subject to the grammar provided in Appendix A). It SHOULD also be specified whether these parameters apply to RequestedEvents, ObservedEvents, DetectEvents and EventStates. If not specified otherwise, it is assumed that:",
      "ja": "イベントパラメータがサポートされている場合は*、それが明示的に記載しなければなりません。これらの正確な構文およびセマンティクスは、次いで、（付録Aに設けられた文法に従う）が提供されなければなりません。また、これらのパラメータはRequestedEvents、ObservedEvents、DetectEventsとEventStatesに適用されるかどうかを指定する必要があります。特に指定がない場合は、それが想定されます。"
    },
    {
      "indent": 5,
      "text": "* they do not apply to RequestedEvents,",
      "ja": "*彼らはRequestedEventsには適用されません、"
    },
    {
      "indent": 5,
      "text": "* they do apply to ObservedEvents,",
      "ja": "*彼らはObservedEventsには適用されません、"
    },
    {
      "indent": 5,
      "text": "* they apply in the same way to DetectEvents as they do to RequestedEvents for a given event parameter,",
      "ja": "彼らがそうであるように、彼らは与えられたイベントパラメータにRequestedEventsにDetectEventsに同じように適用されます*、"
    },
    {
      "indent": 5,
      "text": "* they apply in the same way to EventStates as they do to ObservedEvents for a given event parameter.",
      "ja": "彼らは与えられたイベントパラメータのためObservedEventsにそうであるように*彼らはEventStatesに同じように適用されます。"
    },
    {
      "indent": 3,
      "text": "* If the event is expected to be used in digit map matching, it SHOULD explicitly state so. Note that only events with single letter or digit parameter codes can do this. See Section 2.1.5 for further details.",
      "ja": "イベントはケタマップマッチングで使用されることが期待されている場合は*、それが明示的に明記してください。単一文字または数字のパラメータコードを持つイベントのみがこれを行うことができますことに注意してください。詳細については、セクション2.1.5を参照してください。"
    },
    {
      "indent": 3,
      "text": "For signals, the following MUST be provided as well:",
      "ja": "信号のために、以下では、同様に提供されなければなりません。"
    },
    {
      "indent": 3,
      "text": "* The type of signal (OO, TO, BR).",
      "ja": "*信号の種類（OO、TO、BR）。"
    },
    {
      "indent": 3,
      "text": "* Time-Out signals SHOULD have an indication of the default time-out value. In some cases, time-out values may be variable (if dependent on some action to complete such as out-pulsing digits).",
      "ja": "*タイムアウト信号は、デフォルトのタイムアウト値の表示を持っているべきです。 （いくつかのアクションに依存するが、そのようなアウトパルス桁で完了する場合）いくつかのケースでは、タイムアウト値は可変であってもよいです。"
    },
    {
      "indent": 3,
      "text": "* If signal parameters are supported, it MUST be stated explicitly. The precise syntax and semantics of these MUST then be provided (subject to the grammar provided in Appendix A).",
      "ja": "信号パラメータがサポートされている場合は*、それが明示的に記載しなければなりません。これらの正確な構文およびセマンティクスは、次いで、（付録Aに設けられた文法に従う）が提供されなければなりません。"
    },
    {
      "indent": 3,
      "text": "* Time-Out signals may also indicate whether the \"to\" parameter is supported or not as well as what the rounding rules associated with them are. If omitted from the signal definition, the package-wide definition is assumed (see Section 6). If the package definition did not specify this, rounding rules default to the nearest non- zero second, whereas support for the \"to\" parameter defaults to \"no\" for package version zero, and \"yes\" for package versions one and higher.",
      "ja": "*タイムアウト信号は、パラメータがサポートされていないかだけでなく、それらに関連した丸めルールが何であるかをされた「に」かどうかを示すことができます。信号の定義から省略された場合、パッケージ全体の定義は（セクション6を参照）を想定しています。パッケージ定義は、パッケージバージョンゼロのために「ノー」を「へ」のパラメータのデフォルト値のサポートに対し、最も近い非ゼロ秒にルールのデフォルトを丸め、これを指定し、「はい」パッケージのバージョン1と高いためにしなかった場合。"
    },
    {
      "indent": 3,
      "text": "The following format is RECOMMENDED for defining events and signals in conformance with the above:",
      "ja": "次の形式は、上記に準拠してイベントと信号を定義するためのお勧めします。"
    },
    {
      "indent": 3,
      "text": " ------------------------------------------------------------------\n| Symbol  |   Definition               |  R  |   S     Duration    |\n|---------|----------------------------|-----|---------------------|\n|         |                            |     |                     |\n|         |                            |     |                     |\n ------------------------------------------------------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "where:",
      "ja": "どこ："
    },
    {
      "indent": 3,
      "text": "* Symbol indicates the event code used for the event/signal, e.g., \"hd\".",
      "ja": "記号*は、例えば、「HD」、イベント/信号に使用されるイベントコードを示します。"
    },
    {
      "indent": 3,
      "text": "* Definition gives a brief definition of the event/signal",
      "ja": "*定義はイベント/信号の簡単な定義を与えます"
    },
    {
      "indent": 3,
      "text": "* R contains an \"x\" if the event can be detected or one or more of the following symbols:",
      "ja": "イベントが検出された以下の記号の一つまたはそれ以上のことができれば* Rは、「X」が含まれています。"
    },
    {
      "indent": 5,
      "text": "- \"P\" if the event is persistent.",
      "ja": " - 「P」イベントが永続的である場合。"
    },
    {
      "indent": 5,
      "text": "- \"S\" if the events is an event-state that may be audited.",
      "ja": " - 「S」の場合のイベントが監査されるイベント状態です。"
    },
    {
      "indent": 5,
      "text": "- \"C\" if the event can be detected on a connection.",
      "ja": " - 「C」イベントは、接続上で検出することができます。"
    },
    {
      "indent": 3,
      "text": "* S contains one of the following if it is a signal:",
      "ja": "それが信号である場合* Sは、次のいずれかが含まれています。"
    },
    {
      "indent": 5,
      "text": "- \"OO\" if the signal is On/Off signal.",
      "ja": " - 信号はON / OFF信号であれば、 \"OO\"。"
    },
    {
      "indent": 5,
      "text": "- \"TO\" if the signal is a Time-Out signal.",
      "ja": " - 信号がタイムアウト信号である場合には、「TO」。"
    },
    {
      "indent": 5,
      "text": "- \"BR\" if the signal is a Brief signal.",
      "ja": " - 信号が簡単な信号である場合、「BR」。"
    },
    {
      "indent": 3,
      "text": "* S also contains:",
      "ja": "* Sも含まれています。"
    },
    {
      "indent": 5,
      "text": "- \"C\" if the signal can be applied on a connection.",
      "ja": " - 「C」信号が接続に適用することができる場合。"
    },
    {
      "indent": 3,
      "text": "The table SHOULD then be followed by a more comprehensive description of each event/signal defined.",
      "ja": "テーブルは、次に定義された各イベント/信号のより包括的な説明が続くべきです。"
    },
    {
      "indent": 0,
      "text": "6.6.1 Default and Reserved Events",
      "section_title": true,
      "ja": "6.6.1デフォルトと予約イベント"
    },
    {
      "indent": 3,
      "text": "All packages that contain Time-Out type signals contain the operation failure (\"of\") and operation complete (\"oc\") events, irrespective of whether they are provided as part of the package description or not. These events are needed to support Time-Out signals and cannot be overridden in packages with Time-Out signals. They MAY be extended if necessary, however such practice is discouraged.",
      "ja": "タイム・アウト型の信号が含まれているすべてのパッケージは関係なく、彼らはパッケージの説明やないの一部として提供されているかどうかの、動作不良（「の」）と、動作完了（「OC」）のイベントが含まれています。これらのイベントは、タイムアウト信号をサポートするために必要であり、タイムアウト信号とパッケージで上書きすることはできません。必要であれば、彼らは、しかし、そのような練習が推奨され、延長することができます。"
    },
    {
      "indent": 3,
      "text": "If a package without Time-Out signals does contain definitions for the \"oc\" and \"of\" events, the event definitions provided in the package MAY over-ride those indicated here. Such practice is however discouraged and is purely allowed to avoid potential backwards compatibility problems.",
      "ja": "タイム・アウト信号のないパッケージがイベント「の」「OC」との定義が含まれていない場合は、パッケージで提供されるイベント定義は、ここで示されたものを過剰に乗るかもしれません。このような慣行は、しかし、がっかりして、純粋に潜在的な後方互換性の問題を回避するために許可されています。"
    },
    {
      "indent": 3,
      "text": "It is considered good practice to explicitly mention that the two events are supported in accordance with their default definitions, which are as follows:",
      "ja": "これは、二つの事象は以下の通りである。彼らのデフォルトの定義に従ってサポートされていることを明示的に言及することは良い習慣と見なされます。"
    },
    {
      "indent": 3,
      "text": " ------------------------------------------------------------------\n| Symbol  |   Definition               |  R  |   S     Duration    |\n|---------|----------------------------|-----|---------------------|\n| oc      | Operation Complete         |  x  |                     |\n| of      | Operation Failure          |  x  |                     |\n ------------------------------------------------------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Operation complete (oc): The operation complete event is generated when the gateway was asked to apply one or several signals of type TO on the endpoint or connection, and one or more of those signals completed without being stopped by the detection of a requested event such as off-hook transition or dialed digit. The completion report should carry as a parameter the name of the signal that came to the end of its live time, as in:",
      "ja": "動作完了（OC）操作完了イベントゲートウェイは、エンドポイントまたは接続ONにタイプの1つまたは複数の信号を適用するように頼まれたときに生成され、それらの信号の1つ以上が要求されたイベントの検出により停止されずに終了しますそのようなオフフック遷移又はダイヤル数字として。完了報告は、パラメータとしてのように、その生きた時間の終わりに来た信号の名前を運ぶ必要があります。"
    },
    {
      "indent": 6,
      "text": "O: G/oc(G/rt)",
      "ja": "O：G / OC（G / RT）"
    },
    {
      "indent": 3,
      "text": "In this case, the observed event occurred because the \"rt\" signal in the \"G\" package timed out.",
      "ja": "「G」パッケージで「RT」信号がタイムアウトしたため、この場合には、観察されたイベントが発生しました。"
    },
    {
      "indent": 3,
      "text": "If the reported signal was applied on a connection, the parameter supplied will include the name of the connection as well, as in:",
      "ja": "報告された信号は、接続に適用された場合は、指定されたパラメータだけでなく、のように、接続の名前が含まれます："
    },
    {
      "indent": 6,
      "text": "O: G/oc(G/rt@0A3F58)",
      "ja": "O：G / OC（G / RT @の0A3F58）"
    },
    {
      "indent": 3,
      "text": "When the operation complete event is requested, it cannot be parameterized with any event parameters. When the package name is omitted (which is discouraged) as part of the signal name, the default package is assumed.",
      "ja": "操作completeイベントが要求されると、それはどんなイベントパラメータをパラメータ化することはできません。パッケージ名は、信号名の一部として（推奨される）省略された場合、デフォルトパッケージが想定されます。"
    },
    {
      "indent": 3,
      "text": "Operation failure (of): The operation failure event is generated when the endpoint was asked to apply one or several signals of type TO on the endpoint or connection, and one or more of those signals failed prior to timing out. The completion report should carry as a parameter the name of the signal that failed, as in:",
      "ja": "（の）動作不良：エンドポイントが、エンドポイントまたは接続、および1つまたはそれらの信号のより上のタイプの1つのまたは複数の信号を印加するように頼まれた時に動作不良イベントが生成されますがタイムアウトする前に失敗しました。完了報告は、パラメータとしてのように、障害が発生した信号の名前を運ぶ必要があります。"
    },
    {
      "indent": 6,
      "text": "O: G/of(G/rt)",
      "ja": "O：のG /（G / RT）"
    },
    {
      "indent": 3,
      "text": "In this case a failure occurred in producing the \"rt\" signal in the \"G\" package.",
      "ja": "この場合、障害は、「G」パッケージの「RT」信号を生成で発生しました。"
    },
    {
      "indent": 3,
      "text": "When the reported signal was applied on a connection, the parameter supplied will include the name of the connection as well, as in:",
      "ja": "報告された信号は、接続に適用された場合、指定されたパラメータは、のように、同様に接続の名前を含むことになります。"
    },
    {
      "indent": 6,
      "text": "O: G/of(G/rt@0A3F58)",
      "ja": "O：のG /（G / RT @の0A3F58）"
    },
    {
      "indent": 3,
      "text": "When the operation failure event is requested, event parameters can not be specified. When the package name is omitted (which is discouraged), the default package name is assumed.",
      "ja": "動作不良イベントが要求されると、イベントパラメータを指定することはできません。パッケージ名が（推奨されている）を省略した場合、デフォルトのパッケージ名が想定されます。"
    },
    {
      "indent": 0,
      "text": "6.7 ExtensionParameters",
      "section_title": true,
      "ja": "6.7拡張パラメータ"
    },
    {
      "indent": 3,
      "text": "Extension parameter extensions SHALL include:",
      "ja": "拡張パラメータの拡張機能が含まれなければなりません。"
    },
    {
      "indent": 3,
      "text": "* The name and encoding of the extension parameter.",
      "ja": "*名前と拡張パラメータのエンコーディング。"
    },
    {
      "indent": 3,
      "text": "* The possible values and encoding of those values that can be assigned to the extension parameter.",
      "ja": "*可能な値と拡張パラメータに割り当てることができ、それらの値の符号化。"
    },
    {
      "indent": 3,
      "text": "* For each of the commands defined in this specification, whether the extension parameter is Mandatory, Optional, or Forbidden in requests as well as responses. Note that extension parameters SHOULD NOT normally be mandatory.",
      "ja": "*この仕様で定義されたコマンドのそれぞれについて、拡張パラメータは、必須オプション、または要求だけでなく、応答で禁止されているかどうか。拡張パラメータは、通常必須であるべきではないことに注意してください。"
    },
    {
      "indent": 3,
      "text": "* A description of the operation of the extension parameter. As part of this description the default value (if any) if the extension is omitted in a command MUST be defined. It may be necessary to make a distinction between the default value before and after the initial application of the parameter, for example if the parameter retains its previous value once specified, until explicitly altered. If default values are not described, then the extension parameter simply defaults to empty in all commands.",
      "ja": "*拡張パラメータの動作の説明。本明細書の一部としてデフォルト値（もしあれば）拡張がコマンドでは省略されている場合に定義されなければなりません。明示的に変更されるまでパラメータは、一度指定された前の値を保持している場合には、例えば、パラメータの最初の適用前後のデフォルト値との間の区別をする必要があるかもしれません。すべてのコマンドに空にデフォルト値が記述されていない場合は、拡張パラメータは単純にデフォルト設定されています。"
    },
    {
      "indent": 3,
      "text": "* Whether the extension can be audited in AuditEndpoint and/or AuditConnection as well as the values returned. If nothing is specified, then auditing of the extension parameter can only be done for AuditEndpoint, and the value returned SHALL be the current value for the extension. Note that this may be empty.",
      "ja": "*拡張子がAuditEndpointおよび/またはAuditConnectionに監査することができるだけでなく、値が返されるかどうか。何も指定されていない場合は、拡張パラメータの監査はAuditEndpointに対してのみ行うことができ、その値は拡張のための現在の値が返されなければなりません。これが空であることに注意してください。"
    },
    {
      "indent": 0,
      "text": "6.8 LocalConnectionOptions",
      "section_title": true,
      "ja": "6.8 LocalConnectionOptions"
    },
    {
      "indent": 3,
      "text": "LocalConnectionOptions extensions SHALL include:",
      "ja": "LocalConnectionOptions拡張子が含まれなければなりません。"
    },
    {
      "indent": 3,
      "text": "* The name and encoding of the LocalConnectionOptions extension.",
      "ja": "*名前とLocalConnectionOptions拡張子のエンコーディング。"
    },
    {
      "indent": 3,
      "text": "* The possible values and encoding of those values that can be assigned to the LocalConnectionOptions extension.",
      "ja": "*可能な値とLocalConnectionOptions拡張に割り当てることができ、それらの値の符号化。"
    },
    {
      "indent": 3,
      "text": "* A description of the operation of the LocalConnectionOptions extension. As part of this description the following MUST be specified:",
      "ja": "* LocalConnectionOptions拡張の動作の説明。以下を指定する必要があり、この記述の一部として："
    },
    {
      "indent": 5,
      "text": "- The default value (if any) if the extension is omitted in a CreateConnection command.",
      "ja": " - 拡張がのCreateConnectionコマンドで省略された場合、デフォルト値（もしあれば）。"
    },
    {
      "indent": 5,
      "text": "- The default value if omitted in a ModifyConnection command. This may be to simply retain the previous value (if any) or to apply the default value. If nothing is specified, the current value is retained if possible.",
      "ja": " -  ModifyConnectionコマンドでは省略した場合のデフォルト値。これは、単に以前の値を保持するために（もしあれば）、またはデフォルト値を適用することができます。何も指定されていない場合は、可能な場合、現在の値が保持されます。"
    },
    {
      "indent": 5,
      "text": "- If Auditing of capabilities will result in the extension being returned, then a description to that effect as well as with what possible values and their encoding (note that the package itself will always be returned). If nothing is specified, the extension SHALL NOT be returned when auditing capabilities.",
      "ja": " - 機能の監査が返される延長になります場合は、その旨のと同様に可能なものを値とそのエンコーディングとの記述は、（パッケージ自体が常に返されることに注意してください）。何も指定されていない場合は機能を監査する場合、拡張子が返されないものとします。"
    },
    {
      "indent": 3,
      "text": "Also note, that the extension MUST be included in the result for an AuditConnection command auditing the LocalConnectionOptions.",
      "ja": "また、拡張子がLocalConnectionOptionsを監査AuditConnectionコマンドの結果に含まれなければならないことに注意。"
    },
    {
      "indent": 0,
      "text": "6.9 Reason Codes",
      "section_title": true,
      "ja": "6.9理由コード"
    },
    {
      "indent": 3,
      "text": "Extension reason codes SHALL include:",
      "ja": "拡張理由コードが含まれなければなりません。"
    },
    {
      "indent": 3,
      "text": "* The number for the reason code. The number MUST be in the range 800 to 899.",
      "ja": "*理由コードの番号。数899の範囲800内にある必要があります。"
    },
    {
      "indent": 3,
      "text": "* A description of the extension reason code including the circumstances that leads to the generation of the reason code. Those circumstances SHOULD be limited to events caused by another extension defined in the package to ensure the recipient will be able to interpret the extension reason code correctly.",
      "ja": "*理由コードの生成をもたらす状況を含む拡張理由コードの説明。これらの状況は、受信者が正しく拡張理由コードを解釈することができるようになります保証するために、パッケージで定義された別の拡張によって引き起こされたイベントに限定されるべきです。"
    },
    {
      "indent": 3,
      "text": "Note that the extension reason code may have to be provided in the result for an AuditEndpoint command auditing the reason code.",
      "ja": "拡張理由コードは、理由コードを監査AuditEndpointコマンドの結果に設けなければならないかもしれないことに留意されたいです。"
    },
    {
      "indent": 0,
      "text": "6.10 RestartMethods",
      "section_title": true,
      "ja": "6.10 RestartMethods"
    },
    {
      "indent": 3,
      "text": "Extension Restart Methods SHALL include:",
      "ja": "拡張再起動方法には、しなければなりません。"
    },
    {
      "indent": 3,
      "text": "* The name and encoding for the restart method.",
      "ja": "*再起動方法の名前とエンコーディング。"
    },
    {
      "indent": 3,
      "text": "* A description of the restart method including the circumstances that leads to the generation of the restart method. Those circumstances SHOULD be limited to events caused by another extension defined in the package to ensure the recipient will be able to interpret the extension restart method correctly.",
      "ja": "*再開方法の生成をもたらす状況を含む再開方法の説明。これらの状況は、受信者が正しく延長再起動の方法を解釈することができるようになります保証するために、パッケージで定義された別の拡張によって引き起こされたイベントに限定されるべきです。"
    },
    {
      "indent": 3,
      "text": "* An indication of whether the RestartDelay parameter is to be used with the extension. If nothing is specified, it is assumed that it is not to be used. In that case, RestartDelay MUST be ignored if present.",
      "ja": "* RestartDelayパラメータが拡張子を使用するかどうかの指示。何も指定されていない場合は、使用されないことが想定されます。その場合には、RestartDelayが存在する場合無視しなければなりません。"
    },
    {
      "indent": 3,
      "text": "* If the restart method defines a service state, the description MUST explicitly state and describe this. In that case, the extension restart method can then be provided in the result for an AuditEndpoint command auditing the restart method.",
      "ja": "*再起動の方法がサービス状態を定義した場合は、説明が明記し、これを説明しなければなりません。その場合、拡張再始動方法は、次に再起動方法を監査AuditEndpointコマンドの結果で提供することができます。"
    },
    {
      "indent": 0,
      "text": "6.11 Return Codes",
      "section_title": true,
      "ja": "6.11リターンコード"
    },
    {
      "indent": 3,
      "text": "Extension Return Codes SHALL include:",
      "ja": "拡張リターンコードが含まれなければなりません。"
    },
    {
      "indent": 3,
      "text": "* The number for the extension return code. The number MUST be in the range 800 to 899.",
      "ja": "*拡張リターンコードの番号。数899の範囲800内にある必要があります。"
    },
    {
      "indent": 3,
      "text": "* A description of the extension return code including the circumstances that leads to the generation of the extension return code. Those circumstances SHOULD be limited to events caused by another extension defined in the package to ensure the recipient will be able to interpret the extension return code correctly.",
      "ja": "*拡張リターンコードの生成をもたらす状況を含む拡張戻りコードの記述。これらの状況は、受信者が正しく拡張リターンコードを解釈することができるようになります保証するために、パッケージで定義された別の拡張によって引き起こされたイベントに限定されるべきです。"
    },
    {
      "indent": 0,
      "text": "7. Versions and Compatibility",
      "section_title": true,
      "ja": "7.バージョンとの互換性"
    },
    {
      "indent": 1,
      "text": "7.1 Changes from",
      "section_title": true,
      "ja": "から7.1の変更点"
    },
    {
      "indent": 3,
      "text": "RFC 2705 was issued in October 1999, as the last update of draft version 0.5. This updated document benefits from further implementation experience. The main changes from RFC 2705 are:",
      "ja": "RFC 2705は、ドラフトバージョン0.5の最終更新として、1999年10月に発行されました。これはさらに、実装経験から文書の利益を更新しました。 RFC 2705からの主な変更点は以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "* Contains several clarifications, editorial changes and resolution of known inconsistencies.",
      "ja": "*いくつかの明確化、編集上の変更及び既知の矛盾の解決が含まれています。"
    },
    {
      "indent": 3,
      "text": "* Firmed up specification language in accordance with RFC 2119 and added RFC 2119 conventions section.",
      "ja": "* RFC 2119に従って、コメントを追加しましたRFC 2119個の規則セクションに仕様言語を確定。"
    },
    {
      "indent": 3,
      "text": "* Clarified behavior of mixed wild-carding in endpoint names.",
      "ja": "*エンドポイント名に混合野生のカーディングの振る舞いを明らかにしました。"
    },
    {
      "indent": 3,
      "text": "* Deleted naming requirement about having first term identify the physical gateway when the gateway consists of multiple physical gateways. Also added recommendations on wild-carding naming usage from the right only, as well as mixed wildcard usage.",
      "ja": "*ゲートウェイは、複数の物理的ゲートウェイで構成されている場合第1項は、物理的ゲートウェイを識別有する約命名要件を削除しました。また、右のみから野生梳綿命名の使用だけでなく、混合ワイルドカードの使用に関する推奨事項を追加しました。"
    },
    {
      "indent": 3,
      "text": "* Clarified that synonymous forms and values for endpoint names are not freely interchangeable.",
      "ja": "*エンドポイント名の同義語のフォームと値は自由に交換できませんことを明らかにしました。"
    },
    {
      "indent": 3,
      "text": "* Allowed IPv6 addresses in endpoint names.",
      "ja": "* IPv6アドレスは、エンドポイント名に許可します。"
    },
    {
      "indent": 3,
      "text": "* Clarified Digit Map matching rules.",
      "ja": "*桁マップマッチングルールを明確化。"
    },
    {
      "indent": 3,
      "text": "* Added missing semantics for symbols used in digit maps.",
      "ja": "*ケタ地図で使用される記号のために不足しているセマンティクスを追加しました。"
    },
    {
      "indent": 3,
      "text": "* Added Timer T description in Digit Maps.",
      "ja": "*桁マップの追加、タイマTの説明。"
    },
    {
      "indent": 3,
      "text": "* Added recommendation to support digit map sizes of at least 2048 bytes per endpoint.",
      "ja": "*エンドポイントごとに少なくとも2048バイトの桁マップのサイズをサポートするための推奨事項を追加しました。"
    },
    {
      "indent": 3,
      "text": "* Clarified use of wildcards in several commands.",
      "ja": "*いくつかのコマンドでワイルドカードを使用することを明らかにしました。"
    },
    {
      "indent": 3,
      "text": "* Event and Signal Parameters formally defined for events and signals.",
      "ja": "*イベントの正式なイベントや信号用に定義された信号パラメータ。"
    },
    {
      "indent": 3,
      "text": "* Persistent events now allowed in base MGCP protocol.",
      "ja": "今ベースMGCPプロトコルで許さ*永続的なイベント。"
    },
    {
      "indent": 3,
      "text": "* Added additional detail on connection wildcards.",
      "ja": "*接続ワイルドカードで追加の詳細情報を追加しました。"
    },
    {
      "indent": 3,
      "text": "* Clarified behavior of loopback, and continuity test connection modes for mixing and multiple connections in those modes.",
      "ja": "*混合し、これらのモードでの複数の接続のためのループバックの挙動、及び導通テスト接続モードを明らかにしました。"
    },
    {
      "indent": 3,
      "text": "* Modified BearerInformation to be conditional optional in the EndpointConfiguration command.",
      "ja": "* EndpointConfigurationコマンドではオプションの条件付きであることをBearerInformationを修正。"
    },
    {
      "indent": 3,
      "text": "* Clarified \"swap audio\" action operation for one specific scenario and noted that operation for other scenarios is undefined.",
      "ja": "* 1つの特定のシナリオのための「スワップオーディオ」アクション操作を明確化し、他のシナリオのための動作が未定義であることを指摘しました。"
    },
    {
      "indent": 3,
      "text": "* Added recommendation that all implementations support PCMU encoding for interoperability.",
      "ja": "*すべての実装は、相互運用性のためにPCMUエンコーディングをサポートする勧告を追加しました。"
    },
    {
      "indent": 3,
      "text": "* Changed Bandwidth LocalConnectionOptions value from excluding to including overhead from the IP layer and up for consistency with SDP.",
      "ja": "* IP層からとSDPとの一貫性を保つための最高のオーバーヘッドを含めへ除くから帯域幅LocalConnectionOptions値を変更しました。"
    },
    {
      "indent": 3,
      "text": "* Clarified that mode of second connection in a CreateConnection command will be set to \"send/receive\".",
      "ja": "*のCreateConnectionコマンドで第二の接続のモードは、「送信/受信」に設定されることを明らかにしました。"
    },
    {
      "indent": 3,
      "text": "* Type of service default changed to zero.",
      "ja": "*サービスのデフォルトのタイプはゼロに変更されました。"
    },
    {
      "indent": 3,
      "text": "* Additional detail on echo cancellation, silence suppression, and gain control. Also added recommendation for Call Agents not to specify handling of echo cancellation and gain control.",
      "ja": "*エコーキャンセル、無音圧縮、およびゲイン制御に関するその他の詳細。また、エコーキャンセルの取り扱いを指定すると制御を得ることがないコールエージェントのための勧告を追加しました。"
    },
    {
      "indent": 3,
      "text": "* Added requirement for a connection to have a RemoteConnectionDescriptor in order to use the \"network loopback\" and \"network continuity test\" modes.",
      "ja": "*「ネットワークループバック」と「ネットワーク導通試験」モードを使用するためにRemoteConnectionDescriptorを持っているために、接続のための追加された要件。"
    },
    {
      "indent": 3,
      "text": "* Removed procedures and specification for NAS's (will be provided as package instead).",
      "ja": "*削除手順とNASのための仕様（代わりにパッケージとして提供されます）。"
    },
    {
      "indent": 3,
      "text": "* Removed procedures and specification for ATM (will be provided as package instead).",
      "ja": "ATM用*削除手順と仕様（代わりに、パッケージとして提供されます）。"
    },
    {
      "indent": 3,
      "text": "* Added missing optional NotifiedEntity parameter to the DeleteConnection (from the Call Agent) MGCI command.",
      "ja": "* DeleteConnection（コールエージェントから）のMgClコマンドに欠落しているオプションのNotifiedEntityパラメータが追加されました。"
    },
    {
      "indent": 3,
      "text": "* Added optional new MaxMGCPDatagram RequestedInfo code for AuditEndpoint to enable auditing of maximum size of MGCP datagrams supported.",
      "ja": "*対応するMGCPデータグラムの最大サイズの監査を可能にするためにAuditEndpointための任意の新しいMaxMGCPDatagram RequestedInfoコードを追加しました。"
    },
    {
      "indent": 3,
      "text": "* Added optional new PackageList RequestedInfo code for AuditEndpoint to enable auditing of packages with a package version number. PackageList parameter also allowed with return code 518 (unsupported package).",
      "ja": "*パッケージのバージョン番号を持つパッケージの監査を有効にするAuditEndpointのための任意の新しいパッケージリストRequestedInfoコードを追加しました。パッケージリストパラメータも戻りコード518（サポートされていないパッケージ）で許可されます。"
    },
    {
      "indent": 3,
      "text": "* Added missing attributes in Capabilities.",
      "ja": "*能力に欠けている属性を追加しました。"
    },
    {
      "indent": 3,
      "text": "* Clarified that at the expiration of a non-zero restart delay, an updated RestartInProgress should be sent. Also clarified that a new NotifiedEntity can only be returned in response to a RestartInProgress command.",
      "ja": "*非ゼロの再起動遅延の満了時に、更新RestartInProgressが送信されるべきであることを明らかにしました。また、新たなNotifiedEntityのみRestartInProgressコマンドに応答して返すことができることを明らかにしました。"
    },
    {
      "indent": 3,
      "text": "* Added Response Acknowledgement response (return code 000) and included in three-way handshake.",
      "ja": "*追加された応答確認応答（リターン・コード000）と、3ウェイハンドシェイクに含まれています。"
    },
    {
      "indent": 3,
      "text": "* ResponseAck parameter changed to be allowed in all commands.",
      "ja": "* ResponseAckパラメータは、すべてのコマンドで許可されるように変更します。"
    },
    {
      "indent": 3,
      "text": "* Added return codes 101, 405, 406, 407, 409, 410, 503, 504, 505, 506, 507, 508, 509, 533, 534, 535, 536, 537, 538, 539, 540, 541, and defined return codes in range 800-899 to be package specific return codes. Additional text provided for some return codes and additional detail on how to handle unknown return codes added.",
      "ja": "*追加されたリターンコード101、405、406、407、409、410、503、504、505、506、507、508、509、533、534、535、536、537、538、539、540、541、と定義されます特定のリターンコードをパッケージ化することが範囲800から899にコードを返します。追加の未知のリターンコードを処理する方法についていくつかのリターンコードおよび追加の詳細のために提供される追加のテキスト。"
    },
    {
      "indent": 3,
      "text": "* Added reason code 903, 904, 905 and defined reason codes 800-899 to be package specific reason codes.",
      "ja": "*特定の理由コードをパッケージ化する理由コード903、904、905及び定義理由コード800から899を追加しました。"
    },
    {
      "indent": 3,
      "text": "* Added section clarifying codec negotiation procedure.",
      "ja": "*コーデックネゴシエーション手順を明確にセクションを追加しました。"
    },
    {
      "indent": 3,
      "text": "* Clarified that resource reservation parameters in a ModifyConnection command defaults to the current value used.",
      "ja": "*現在使用されている値にModifyConnectionコマンドのデフォルト設定では、そのリソース予約パラメータを明らかにしました。"
    },
    {
      "indent": 3,
      "text": "* Clarified that connection mode is optional in ModifyConnection commands.",
      "ja": "*接続モードがModifyConnectionコマンドではオプションであることを明らかにしました。"
    },
    {
      "indent": 3,
      "text": "* Corrected LocalConnectionDescriptor to be optional in response to CreateConnection commands (in case of failure).",
      "ja": "（故障の場合）のCreateConnectionコマンドに応じて任意であるため*修正LocalConnectionDescriptor。"
    },
    {
      "indent": 3,
      "text": "* Clarified that quoted-strings are UTF-8 encoded and interchangeability of quoted strings and unquoted strings.",
      "ja": "*引用され、文字列がUTF-8でエンコードし、引用符で囲まれた文字列と引用符で囲まれていない文字列の互換であることを明らかにしました。"
    },
    {
      "indent": 3,
      "text": "* Clarified that Transaction Identifiers are compared as numerical values.",
      "ja": "*トランザクション識別子が数値として比較されていることを明らかにしました。"
    },
    {
      "indent": 3,
      "text": "* Clarified bit-ordering for Type Of Service LocalConnectionOptions.",
      "ja": "*サービスLocalConnectionOptionsのタイプのための明確化ビット順序。"
    },
    {
      "indent": 3,
      "text": "* Clarified the use of RequestIdentifier zero.",
      "ja": "* RequestIdentifierゼロの使用を明らかにしました。"
    },
    {
      "indent": 3,
      "text": "* Added example sections for commands, responses, and some call flows.",
      "ja": "*コマンド、応答、およびいくつかのコールフローのための例のセクションを追加しました。"
    },
    {
      "indent": 3,
      "text": "* Corrected usage of and requirements for SDP to be strictly RFC 2327 compliant.",
      "ja": "*厳密にRFC 2327準拠するSDPのためと要件の使用方法を修正しました。"
    },
    {
      "indent": 3,
      "text": "* Added requirement that all MGCP implementations must support MGCP datagrams up to at least 4000 bytes. Also added new section on Maximum Datagram Size, Fragmentation and reassembly.",
      "ja": "*すべてのMGCP実装がMGCPは、少なくとも4000バイトまでのデータグラムをサポートしなければならないという要件を追加しました。また、最大データグラムサイズ、断片化と再構築に新しいセクションを追加しました。"
    },
    {
      "indent": 3,
      "text": "* Generalized piggybacking retransmission scheme to only state underlying requirements to be satisfied.",
      "ja": "*状態のみ基礎となる要件に一般ピギーバック再送方式を満足させることができます。"
    },
    {
      "indent": 3,
      "text": "* Clarified the section on computing retransmission timers.",
      "ja": "*再送信タイマーを計算上のセクションを明らかにしました。"
    },
    {
      "indent": 3,
      "text": "* Clarified operation of long-running transactions, including provisional responses, retransmissions and failures.",
      "ja": "*暫定応答、再送信や障害など長時間実行されるトランザクションの明確化操作。"
    },
    {
      "indent": 3,
      "text": "* Enhanced description of provisional responses and interaction with three-way handshake.",
      "ja": "* 3ウェイハンドシェイクと暫定応答の説明と対話を強化。"
    },
    {
      "indent": 3,
      "text": "* Enhanced description of fail-over and the role of \"notified entity\". An empty \"notified entity\" has been allowed, although strongly discouraged.",
      "ja": "*強化されたフェールオーバーの説明と「通知実体」の役割。強く推奨ものの、空の「通知実体」が許可されています。"
    },
    {
      "indent": 3,
      "text": "* Clarified retransmission procedure and removed \"wrong key\" considerations from it. Also fixed inconsistencies between Max1 and Max2 retransmission boundaries and the associated flow diagram.",
      "ja": "*再送手順を明確化し、それから「間違ったキー」の考慮を削除しました。また、MAX1、Max2の再送の境界と関連付けられたフロー図との間の不整合を修正。"
    },
    {
      "indent": 3,
      "text": "* Updated domain name resolution for retransmission procedure to incur less overhead when multiple endpoints are retransmitting.",
      "ja": "*複数のエンドポイントが再送信されたときより少ないオーバーヘッドが発生する再送手順のためのドメイン名解決を更新しました。"
    },
    {
      "indent": 3,
      "text": "* Removed requirement for in-order delivery of NotificationRequests response and Notify commands. Notify commands are still delivered in-order.",
      "ja": "* NotificationRequests応答の順序どおりの配信のための要件を削除し、コマンドを通知します。通知コマンドは、まだインオーダー配信されます。"
    },
    {
      "indent": 3,
      "text": "* Clarified that activating an embedded Notification Request does not clear the list of ObservedEvents.",
      "ja": "*埋め込まれた通知要求を活性化することObservedEventsのリストをクリアしていないことを明らかにしました。"
    },
    {
      "indent": 3,
      "text": "* Defined interactions between disconnected state and notification state.",
      "ja": "*切断状態と通知状態との間に画定された相互作用。"
    },
    {
      "indent": 3,
      "text": "* Added section on transactional semantics.",
      "ja": "*トランザクション・セマンティクスにセクションを追加しました。"
    },
    {
      "indent": 3,
      "text": "* Defined gateway behavior when multiple interacting transactions are received.",
      "ja": "*複数の相互作用のトランザクションが受信され、ゲートウェイ動作を定義しました。"
    },
    {
      "indent": 3,
      "text": "* Additional details provided on service states. Clarified relationship between endpoint service states, restart methods, and associated processing of commands.",
      "ja": "*サービス状態で提供その他の詳細。エンドポイント・サービスの状態、再起動の方法、およびコマンドの関連する処理の間に明確化の関係。"
    },
    {
      "indent": 3,
      "text": "* Clarified operation for transitioning from \"restart procedure\" to \"disconnected state\".",
      "ja": "*「非接続状態」に「再起動手順」から移行するための操作を明確化。"
    },
    {
      "indent": 3,
      "text": "* Allowed auditing commands and responses to bypass the \"restart\" and \"disconnected\" procedures.",
      "ja": "*監査コマンドと「再起動」と「切断」手順をバイパスする回答可。"
    },
    {
      "indent": 3,
      "text": "* Clarified operation of \"disconnected procedure\" and in particular the operation of piggy-backed \"disconnected\" RestartInProgress messages.",
      "ja": "*「切断手順」とピギーバック「切断」RestartInProgressメッセージの特定の動作の明確化動作。"
    },
    {
      "indent": 3,
      "text": "* Added option to aggregate \"disconnected\" RestartInProgress messages under certain conditions to reduce message volume.",
      "ja": "*メッセージ量を減らすために、一定の条件の下で「切断」RestartInProgressメッセージを集約するオプションを追加しました。"
    },
    {
      "indent": 3,
      "text": "* Defined additional behavior for endpoints wishing to send commands while in the \"disconnected\" state.",
      "ja": "*「切断」状態にある間にコマンドを送信したいエンドポイントの定義された追加の行動。"
    },
    {
      "indent": 3,
      "text": "* Added new section on Load Control in General which includes two new error codes (101 and 409) to handle overload.",
      "ja": "*過負荷を処理するための2つの新しいエラーコード（101および409）を含む一般的で負荷制御に関する新しいセクションを追加しました。"
    },
    {
      "indent": 3,
      "text": "* Deleted the \"Proposed MoveConnection command\".",
      "ja": "*「提案MoveConnectionコマンド」を削除しました。"
    },
    {
      "indent": 3,
      "text": "* Removed packages from protocol specification (will be provided in separate documents instead).",
      "ja": "*プロトコル仕様から削除されたパッケージは、（代わりに、別の文書で提供されます）。"
    },
    {
      "indent": 3,
      "text": "* Package concept formally extended to be primary extension mechanism now allowing extensions for the following to be defined in packages as well:",
      "ja": "*パッケージの概念が正式に今、以下の拡張子が同様のパッケージで定義することができる主要な拡張メカニズムであるように拡張しました："
    },
    {
      "indent": 5,
      "text": "- BearerInformation",
      "ja": " -  BearerInformation"
    },
    {
      "indent": 5,
      "text": "- LocalConnectionOptions",
      "ja": " -  LocalConnectionOptions"
    },
    {
      "indent": 5,
      "text": "- ExtensionParameters",
      "ja": " - 拡張パラメータ"
    },
    {
      "indent": 5,
      "text": "- Connection Modes",
      "ja": " - 接続モード"
    },
    {
      "indent": 5,
      "text": "- Actions",
      "ja": "- 行動"
    },
    {
      "indent": 5,
      "text": "- Digit Map Letters",
      "ja": " - 桁地図手紙"
    },
    {
      "indent": 5,
      "text": "- Connection Parameters",
      "ja": " - 接続パラメータ"
    },
    {
      "indent": 5,
      "text": "- Restart Methods",
      "ja": " - 再起動方法"
    },
    {
      "indent": 5,
      "text": "- Reason Codes",
      "ja": " - 理由コード"
    },
    {
      "indent": 5,
      "text": "- Return Codes",
      "ja": " - リターンコード"
    },
    {
      "indent": 3,
      "text": "* Requirements and suggested format for package definitions added.",
      "ja": "*パッケージの定義のための要件と推奨される形式を追加しました。"
    },
    {
      "indent": 3,
      "text": "* Defined \"operation complete\" and \"operation failure\" events to be automatically present in packages with Time-Out signals.",
      "ja": "*定義された「動作完了」と「動作不良」イベントは、タイムアウト信号をパッケージで自動的に存在することも可能です。"
    },
    {
      "indent": 3,
      "text": "* Deleted list of differences that were prior to RFC 2705.",
      "ja": "* RFC 2705に先立った違いのリストを削除しました。"
    },
    {
      "indent": 3,
      "text": "* Added Base Package to deal with quarantine buffer overflow, ObservedEvents overflow, embedded NotificationRequest failure, and to enable events to be requested persistently. A new \"Message\" command is included as well.",
      "ja": "*追加されたベースパッケージは失敗NotificationRequest埋め込まれた検疫バッファオーバーフロー、ObservedEventsオーバーフローに対処するために、かつ持続的に要求されるイベントを有効にします。新しい「メッセージ」コマンドも同様に含まれています。"
    },
    {
      "indent": 3,
      "text": "* IANA registration procedures for packages and other extensions added.",
      "ja": "*パッケージや他の拡張機能のためのIANA登録手順を追加しました。"
    },
    {
      "indent": 3,
      "text": "* Updated grammar to fix known errors and support new extensions in a backwards compatible manner. Added new (optional) PackageList and MaxMGCPDatagram for auditing. Changed explicit white space rules in some productions to make grammar more consistent.",
      "ja": "*更新文法は、既知のエラーを修正し、後方互換性のある方法で新しい拡張機能をサポートします。監査のための新しい（オプション）パッケージリストとMaxMGCPDatagramを追加しました。文法がより一貫性を保つために、いくつかの制作に明示的な空白のルールを変更しました。"
    },
    {
      "indent": 3,
      "text": "* Connection Mode interaction table added.",
      "ja": "*接続モードの相互作用テーブルが追加されました。"
    },
    {
      "indent": 3,
      "text": "* Added additional detail on virtual endpoint naming conventions. Also added suggested gateway endpoint convention and a \"Range Wildcard\" option to the Endpoint Naming Conventions.",
      "ja": "*仮想エンドポイントの命名規則に追加の詳細情報を追加しました。また、提案ゲートウェイエンドポイントの大会とエンドポイントの命名規則に「範囲ワイルドカード」オプションを追加しました。"
    },
    {
      "indent": 0,
      "text": "8. Security Considerations",
      "section_title": true,
      "ja": "8.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "Security issues are discussed in section 5.",
      "ja": "セキュリティ問題はセクション5で説明されています。"
    },
    {
      "indent": 0,
      "text": "9. Acknowledgements",
      "section_title": true,
      "ja": "9.謝辞"
    },
    {
      "indent": 3,
      "text": "Special thanks are due to the authors of the original MGCP 1.0 specification: Mauricio Arango, Andrew Dugan, Isaac Elliott, Christian Huitema, and Scott Picket.",
      "ja": "マウリシオ・アランゴ、アンドリューデュガン、イサクエリオット、クリスチャンのHuitema、およびスコット・ピケット：特別な感謝は、元のMGCP 1.0仕様の作者によるものです。"
    },
    {
      "indent": 3,
      "text": "We also want to thank the many reviewers who provided advice on the design of SGCP and then MGCP, notably Sankar Ardhanari, Francois Berard, David Auerbach, Bob Biskner, David Bukovinsky, Charles Eckel, Mario Edini, Ed Guy, Barry Hoffner, Jerry Kamitses, Oren Kudevitzki, Rajesh Kumar, Troy Morley, Dave Oran, Jeff Orwick, John Pickens, Lou Rubin, Chip Sharp, Paul Sijben, Kurt Steinbrenner, Joe Stone, and Stuart Wray.",
      "ja": "また、SGCPの設計上のアドバイスを提供して、MGCP、多くのレビュー、とりわけSankarのArdhanari、フランソワ・ベラール、デビッド・アウエルバッハ、ボブBiskner、デビッドBukovinsky、チャールズEckel氏、マリオEdini、エド・ガイ、バリーHoffner、ジェリーKamitsesに感謝したいです、オレンKudevitzki、ラジェッシュクマー、トロイモーリー、デイブ・オラン、ジェフOrwick、ジョン・ピケンズ、ルー・ルービン、チップシャープ、ポールSijben、クルト・スタインブレナー、ジョー・ストーン、そしてスチュアート・レイ。"
    },
    {
      "indent": 3,
      "text": "The version 0.1 of MGCP was heavily inspired by the \"Internet Protocol Device Control\" (IPDC) designed by the Technical Advisory Committee set up by Level 3 Communications. Whole sets of text were retrieved from the IP Connection Control protocol, IP Media Control protocol, and IP Device Management. The authors wish to acknowledge the contribution to these protocols made by Ilya Akramovich, Bob Bell, Dan Brendes, Peter Chung, John Clark, Russ Dehlinger, Andrew Dugan, Isaac Elliott, Cary FitzGerald, Jan Gronski, Tom Hess, Geoff Jordan, Tony Lam, Shawn Lewis, Dave Mazik, Alan Mikhak, Pete O'Connell, Scott Pickett, Shyamal Prasad, Eric Presworsky, Paul Richards, Dale Skran, Louise Spergel, David Sprague, Raj Srinivasan, Tom Taylor and Michael Thomas.",
      "ja": "MGCPのバージョン0.1が重く技術諮問委員会によって設計された「インターネットプロトコルデバイス制御」（IPDC）に触発されたレベル3コミュニケーションズで設定します。テキストの全体のセットは、IP接続制御プロトコル、IPメディアコントロールプロトコル、およびIPデバイス管理から取得しました。著者はイリヤAkramovich、ボブ・ベル、ダンBrendes、ピーター・チョン、ジョン・クラーク、ラスDehlinger、アンドリューデュガン、イサクエリオット、ケーリー・フィッツジェラルド、ヤンGronski、トム・ヘス、ジェフ・ジョーダン、トニー・ラムによって作られたこれらのプロトコルへの貢献を認めることを望みます、ショーン・ルイス、デイブMazik、アランMikhak、ピートオコネル、スコット・ピケット、Shyamalプラサド、エリックPresworsky、ポール・リチャーズ、デイルSkran、ルイーズSpergel、デビッド・スプラーグ、ラジ・スリニバサン、トム・テイラーとマイケル・トーマス。"
    },
    {
      "indent": 0,
      "text": "10. References",
      "section_title": true,
      "ja": "10.参考文献"
    },
    {
      "indent": 3,
      "text": "[1] Bradner, S., \"The Internet Standards Process -- Revision 3\", BCP 9, RFC 2026, October 1996.",
      "ja": "[1]ブラドナーの、S.、 \"インターネット標準化プロセス - リビジョン3\"、BCP 9、RFC 2026、1996年10月。"
    },
    {
      "indent": 3,
      "text": "[2] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[2]ブラドナーのは、S.は、BCP 14、RFC 2119、1997年3月の \"RFCsにおける使用のためのレベルを示すために\"。"
    },
    {
      "indent": 3,
      "text": "[3] Schulzrinne, H., Casner, S., Frederick, R. and V. Jacobson, \"RTP: A Transport Protocol for Real-Time Applications\", RFC 1889, January 1996.",
      "ja": "[3] Schulzrinneと、H.、Casner、S.、フレデリック、R.とV. Jacobson氏、 \"RTP：リアルタイムアプリケーションのためのトランスポートプロトコル\"、RFC 1889、1996年1月。"
    },
    {
      "indent": 3,
      "text": "[4] Schulzrinne, H., \"RTP Profile for Audio and Video Conferences with Minimal Control\", RFC 1890, January 1996.",
      "ja": "[4] Schulzrinneと、H.、 \"最小量のコントロールがあるオーディオとビデオ会議システムのためのRTPプロフィール\"、RFC 1890、1996年1月。"
    },
    {
      "indent": 3,
      "text": "[5] Handley, M. and V. Jacobson, \"SDP: Session Description Protocol\", RFC 2327, April 1998.",
      "ja": "[5]ハンドリー、M.およびV. Jacobson氏、 \"SDP：セッション記述プロトコル\"、RFC 2327、1998年4月。"
    },
    {
      "indent": 3,
      "text": "[6] Handley, M., Perkins, C. and E. Whelan, \"Session Announcement Protocol\", RFC 2974, October 2000.",
      "ja": "[6]ハンドレー、M.、パーキンス、C.およびE.ウィーラン、 \"セッション告知プロトコル\"、RFC 2974、2000年10月。"
    },
    {
      "indent": 3,
      "text": "[7] Rosenberg, J., Camarillo, G., Johnston, A., Peterson, J., Sparks, R., Handley, M., Schulzrinne, H. and E. Schooler, \"Session Initiation Protocol (SIP)\", RFC 3261, June 2002.",
      "ja": "[7]ローゼンバーグ、J.、カマリロ、G.、ジョンストン、A.、ピーターソン、J.、スパークス、R.、ハンドレー、M.、Schulzrinneと、H.およびE.学生、 \"セッション開始プロトコル（SIP）\" 、RFC 3261、2002年6月。"
    },
    {
      "indent": 3,
      "text": "[8] Schulzrinne, H., Rao, A. and R. Lanphier, \"Real Time Streaming Protocol (RTSP)\", RFC 2326, April 1998.",
      "ja": "[8] SchulzrinneとH.とラオとA.とR. Lanphier、 \"リアルタイムストリーミングプロトコル（RTSP）\"、RFC 2326、1998年4月。"
    },
    {
      "indent": 3,
      "text": "[9] ITU-T, Recommendation Q.761, \"FUNCTIONAL DESCRIPTION OF THE ISDN USER PART OF SIGNALING SYSTEM No. 7\", (Malaga-Torremolinos, 1984; modified at Helsinki, 1993).",
      "ja": "[9] ITU-T、勧告Q.761、 \"共通線信号No.7のISDNユーザ部の機能説明\"、（マラガ、トレモリノス、1984;ヘルシンキで修飾、1993）。"
    },
    {
      "indent": 3,
      "text": "[10] ITU-T, Recommendation Q.762, \"GENERAL FUNCTION OF MESSAGES AND SIGNALS OF THE ISDN USER PART OF SIGNALING SYSTEM No. 7\", (MalagaTorremolinos, 1984; modified at Helsinki, 1993).",
      "ja": "[10] ITU-T、勧告Q.762、（MalagaTorremolinos、1984;ヘルシンキ、1993で変更された） \"シグナリングシステム番号7のISDNユーザ部のMESSAGESや信号の一般的な機能\"。"
    },
    {
      "indent": 3,
      "text": "[11] ITU-T, Recommendation H.323 (02/98), \"PACKET-BASED MULTIMEDIA COMMUNICATIONS SYSTEMS\".",
      "ja": "[11] ITU-T、勧告H.323（02/98）、 \"パケットベースのマルチメディア通信システム\"。"
    },
    {
      "indent": 3,
      "text": "[12] ITU-T, Recommendation H.225, \"Call Signaling Protocols and Media Stream Packetization for Packet Based Multimedia Communications Systems\".",
      "ja": "[12] ITU-T、勧告H.225、「コールシグナリングプロトコルとパケットベースのマルチメディア通信システムのためのメディアストリームパケット化」。"
    },
    {
      "indent": 3,
      "text": "[13] ITU-T, Recommendation H.245 (02/98), \"CONTROL PROTOCOL FOR MULTIMEDIA COMMUNICATION\".",
      "ja": "[13] ITU-T、勧告H.245（02/98）、 \"マルチメディア通信のための制御プロトコル\"。"
    },
    {
      "indent": 3,
      "text": "[14] Kent, S. and R. Atkinson, \"Security Architecture for the Internet Protocol\", RFC 2401, November 1998.",
      "ja": "[14]ケント、S.とR.アトキンソン、 \"インターネットプロトコルのためのセキュリティー体系\"、RFC 2401、1998年11月。"
    },
    {
      "indent": 3,
      "text": "[15] Kent, S. and R. Atkinson, \"IP Authentication Header\", RFC 2402, November 1998.",
      "ja": "[15]ケント、S.とR.アトキンソン、 \"IP認証ヘッダー\"、RFC 2402、1998年11月。"
    },
    {
      "indent": 3,
      "text": "[16] Kent, S. and R. Atkinson, \"IP Encapsulating Security Payload (ESP)\", RFC 2406, November 1998.",
      "ja": "[16]ケント、S.とR.アトキンソン、 \"IPカプセル化セキュリティペイロード（ESP）\"、RFC 2406、1998年11月。"
    },
    {
      "indent": 3,
      "text": "[17] Crocker, D. and P. Overell, \"Augmented BNF for Syntax Specifications: ABNF\", RFC 2234, November 1997.",
      "ja": "[17]クロッカー、D.、およびP. Overell、 \"構文仕様のための増大しているBNF：ABNF\"、RFC 2234、1997年11月。"
    },
    {
      "indent": 3,
      "text": "[18] Stevens, W. Richard, \"TCP/IP Illustrated, Volume 1, The Protocols\", Addison-Wesley, 1994.",
      "ja": "[18]スティーブンス、W.リチャード、 \"TCP / IPイラスト、第1巻、プロトコル\"、アディソン・ウェズリー、1994。"
    },
    {
      "indent": 3,
      "text": "[19] Allman, M., Paxson, V. \"On Estimating End-to-End Network Path Properties\", Proc. SIGCOMM'99, 1999.",
      "ja": "[19]オールマン、M.、パクソン、V.、PROC「推定エンドツーエンドのネットワークパスのプロパティに」。 SIGCOMM'99、1999。"
    },
    {
      "indent": 3,
      "text": "[20] Yergeau, F., \"UTF-8, a transformation format of ISO 10646\", RFC 2279, January 1998.",
      "ja": "[20] Yergeau、F.、 \"UTF-8、ISO 10646の変換フォーマット\"、RFC 2279、1998年1月。"
    },
    {
      "indent": 3,
      "text": "[21] Braden, R., \"Requirements for Internet Hosts -- Communication Layers\", STD 3, RFC 1122, October 1989.",
      "ja": "[21]ブレーデン、R.、 \"インターネットホストのための要件 - 通信層\"、STD 3、RFC 1122、1989年10月。"
    },
    {
      "indent": 3,
      "text": "[22] Bellcore, \"LSSGR: Switching System Generic Requirements for Call Control Using the Integrated Services Digital Network User Part (ISDNUP)\", GR-317-CORE, Issue 2, December 1997.",
      "ja": "[22] Bellcoreの、 \"LSSGR：総合デジタル通信網ユーザ部（ISDNUP）を使用したコール制御用スイッチングシステムジェネリック要件\"、GR-317-CORE、2号、1997年12月。"
    },
    {
      "indent": 3,
      "text": "[23] Narten, T., and Alvestrand H., \"Guidelines for Writing an IANA Considerations Section in RFCs\", RFC 2434, October 1998.",
      "ja": "[23] Narten氏、T.、およびH. Alvestrand、 \"RFCsにIANA問題部に書くためのガイドライン\"、RFC 2434、1998年10月。"
    },
    {
      "indent": 0,
      "text": "Appendix A: Formal Syntax Description of the Protocol",
      "ja": "付録A：議定書の正式な構文の説明"
    },
    {
      "indent": 3,
      "text": "In this section, we provide a formal description of the protocol syntax, following the \"Augmented BNF for Syntax Specifications\" defined in RFC 2234. The syntax makes use of the core rules defined in RFC 2234, Section 6.1, which are not included here. Furthermore, the syntax follows the case-sensitivity rules of RFC 2234, i.e., MGCP is case-insensitive (but SDP is not). It should be noted, that ABNF does not provide for implicit specification of linear white space and MGCP messages MUST thus follow the explicit linear white space rules provided in the grammar below. However, in line with general robustness principles, implementers are strongly encouraged to tolerate additional linear white space in messages received.",
      "ja": "このセクションでは、我々はここに含まれていませんRFC構文はRFC 2234で定義されたコア規則を使用する2234で定義され、セクション6.1、「構文仕様のための拡張BNF」以下、プロトコル構文の正式な説明を提供します。さらに、構文、すなわち、MGCPは、大文字小文字を区別しない（ただし、SDPではない）、RFC 2234の場合、感度の規則に従います。 ABNFは、リニアホワイトスペースの暗黙の仕様を提供しないとMGCPメッセージは、このように、以下の文法で提供明示的な線形空白のルールに従わなければならないことに留意すべきです。しかし、一般的な堅牢性の原則に沿って、実装者が強く受信されたメッセージに追加リニアホワイトスペースを容認することをお勧めします。"
    },
    {
      "indent": 0,
      "text": "MGCPMessage = MGCPCommand / MGCPResponse",
      "ja": "MGCPメッセージ= MGCPコマンド/ MGCPレスポンス"
    },
    {
      "indent": 0,
      "text": "MGCPCommand = MGCPCommandLine 0*(MGCPParameter) [EOL *SDPinformation]",
      "ja": "MGCPCommand MGCPCommandLine = 0 *（MGCPParameter）[EOL * SDPinformation]"
    },
    {
      "indent": 0,
      "text": "MGCPCommandLine = MGCPVerb 1*(WSP) transaction-id 1*(WSP) endpointName 1*(WSP) MGCPversion EOL",
      "ja": "MGCPCommandLine MGCPVerb = 1 *（WSP）トランザクションID 1 *（WSP）ポイントendpointName 1 *（WSP）MGCPversion EOL"
    },
    {
      "indent": 0,
      "text": "MGCPVerb = \"EPCF\" / \"CRCX\" / \"MDCX\" / \"DLCX\" / \"RQNT\" / \"NTFY\" / \"AUEP\" / \"AUCX\" / \"RSIP\" / extensionVerb",
      "ja": "MGCPVerb = \"EPCF\" / \"CRCX\" / \"MDCX\" / \"DLCX\" / \"RQNT\" / \"NTFY\" / \"AUEP\" / \"AUCX\" / \"RSIP\" / extensionVerb"
    },
    {
      "indent": 0,
      "text": "extensionVerb = ALPHA 3(ALPHA / DIGIT) ; experimental starts with X",
      "ja": "extensionVerb = ALPHA 3（ALPHA / DIGIT）。 Xと実験開始"
    },
    {
      "indent": 0,
      "text": "transaction-id = 1*9(DIGIT)",
      "ja": "トランザクションID = 1 * 9（DIGIT）"
    },
    {
      "indent": 0,
      "text": "endpointName = LocalEndpointName \"@\" DomainName LocalEndpointName = LocalNamePart 0*(\"/\" LocalNamePart) LocalNamePart = AnyName / AllName / NameString AnyName = \"$\" AllName = \"*\" NameString = 1*(range-of-allowed-characters) ; VCHAR except \"$\", \"*\", \"/\", \"@\" range-of-allowed-characters = %x21-23 / %x25-29 / %x2B-2E / %x30-3F / %x41-7E",
      "ja": "ポイントendpointName = LocalEndpointNameドメイン名LocalEndpointName = LocalNamePart 0 *（ \"/\" LocalNamePart）LocalNamePart = AnyName / AllName / NameString AnyName = \"$\" AllName = \"*\" NameString = 1 *（範囲-の許容-文字） \"@\"; \"$\" を除いてVCHAR、 \"*\"、 \"/\"、 \"@\" レンジ・オブ・許可・文字=％x21-23 / x25-29％/％X2B-2E /％x30-3F /％x41-7E"
    },
    {
      "indent": 0,
      "text": "DomainName = 1*255(ALPHA / DIGIT / \".\" / \"-\") ; as defined / \"#\" number ; in RFC 821 / \"[\" IPv4address / IPv6address \"]\" ; see RFC 2373",
      "ja": "= * 255 1（ \"\" ALPHA / DIGIT / / \" - \"）ドメイン名。定義された/「＃」の数として; RFC 821 / \"[\" IPv4Addressを/ IPv6address \"]\" で、 RFC 2373を参照してください"
    },
    {
      "indent": 0,
      "text": "; Rewritten to ABNF from RFC 821 number = 1*DIGIT",
      "ja": "; RFC 821数= 1 * DIGITからABNFに書き換え"
    },
    {
      "indent": 0,
      "text": ";From RFC 2373 IPv6address = hexpart [ \":\" IPv4address ] IPv4address = 1*3DIGIT \".\" 1*3DIGIT \".\" 1*3DIGIT \".\" 1*3DIGIT",
      "ja": "; [ \"：\" IPv4Addressを】IPv6address = hexpart RFC 2373からIPv4Addressを= 1 * 3DIGIT \"\" 1 * 3DIGIT \"\" 1 * 3DIGIT \"\" 1 * 3DIGIT"
    },
    {
      "indent": 0,
      "text": "; this production, while occurring in RFC2373, is not referenced ; IPv6prefix = hexpart \"/\" 1*2DIGIT hexpart = hexseq / hexseq \"::\" [ hexseq ] / \"::\" [ hexseq ] hexseq = hex4 *( \":\" hex4) hex4 = 1*4HEXDIG",
      "ja": ";この生産は、RFC2373で発生する一方で、参照されていません。 IPv6prefix = hexpart \"/\" 1 * 2DIGIT hexpart = hexseq / hexseq \"::\" [hexseq] / \"::\" [hexseq] hexseq = hex4 *（ \"：\" hex4）hex4 = 1 * 4HEXDIG"
    },
    {
      "indent": 0,
      "text": "MGCPversion = \"MGCP\" 1*(WSP) 1*(DIGIT) \".\" 1*(DIGIT) [1*(WSP) ProfileName] ProfileName = VCHAR *( WSP / VCHAR)",
      "ja": "MGCPversion = \"MGCP\" 1 *（WSP）1 *（DIGIT） \"\" 1 *（DIGIT）1 *（WSP）プロファイル名]プロファイル名= VCHAR *（WSP / VCHAR）"
    },
    {
      "indent": 0,
      "text": "MGCPParameter = ParameterValue EOL",
      "ja": "MGCPParameter = ParameterValue EOL"
    },
    {
      "indent": 0,
      "text": "; Check infoCode if more parameter values defined ; Most optional values can only be omitted when auditing ParameterValue = (\"K\" \":\" 0*(WSP) [ResponseAck]) / (\"B\" \":\" 0*(WSP) [BearerInformation]) / (\"C\" \":\" 0*(WSP) CallId) / (\"I\" \":\" 0*(WSP) [ConnectionId]) / (\"N\" \":\" 0*(WSP) [NotifiedEntity]) / (\"X\" \":\" 0*(WSP) [RequestIdentifier]) / (\"L\" \":\" 0*(WSP) [LocalConnectionOptions]) / (\"M\" \":\" 0*(WSP) ConnectionMode) / (\"R\" \":\" 0*(WSP) [RequestedEvents]) / (\"S\" \":\" 0*(WSP) [SignalRequests]) / (\"D\" \":\" 0*(WSP) [DigitMap]) / (\"O\" \":\" 0*(WSP) [ObservedEvents]) / (\"P\" \":\" 0*(WSP) [ConnectionParameters]) / (\"E\" \":\" 0*(WSP) ReasonCode) / (\"Z\" \":\" 0*(WSP) [SpecificEndpointID]) / (\"Z2\" \":\" 0*(WSP) SecondEndpointID) / (\"I2\" \":\" 0*(WSP) SecondConnectionID) / (\"F\" \":\" 0*(WSP) [RequestedInfo]) / (\"Q\" \":\" 0*(WSP) QuarantineHandling) / (\"T\" \":\" 0*(WSP) [DetectEvents]) / (\"RM\" \":\" 0*(WSP) RestartMethod) / (\"RD\" \":\" 0*(WSP) RestartDelay) / (\"A\" \":\" 0*(WSP) [Capabilities]) / (\"ES\" \":\" 0*(WSP) [EventStates]) / (\"PL\" \":\" 0*(WSP) [PackageList]) ; Auditing only / (\"MD\" \":\" 0*(WSP) MaxMGCPDatagram) ; Auditing only / (extensionParameter \":\" 0*(WSP) [parameterString])",
      "ja": ";より多くのパラメータ値が定義されている場合infoCodeを確認してください。ほとんどの任意の値のみを省略することができる場合ParameterValue =監査（ \" \"K\" を\" 0 *（WSP）ResponseAck]）/（ \"B\" \"：\" 0 *（WSP）BearerInformation]）/（ \"C\" \" ： \"0 *（WSP）CallId）/（ \"I\" \"：\" 0 *（WSP）ConnectionId]）/（ \"N\" \"：\" 0 *（WSP）[NotifiedEntity]）/（ \"X\"\"： \"0 *（WSP）RequestIdentifier]）/（\" L」 \"：\" 0 *（WSP）LocalConnectionOptions]）/（ \"M\" \"：\" 0 *（WSP）ConnectionMode）/（ \"R\" \"：\" 0 *（WSP）RequestedEvents]）/（ \"S\" \"：\" 0 *（WSP）SignalRequests]）/（ \"D\" \"：\" 0 *（WSP）DigitMap]）/（ \"O\"「： \"0 *（WSP）ObservedEvents]）/（\" P」 \"：\" 0 *（WSP）ConnectionParameters]）/（ \"E\" \"：\" 0 *（WSP）reasonCodeは）/（ \"Z\" \"：\" 0 *（WSP）SpecificEndpointID]）/（ \"Z2\" \"：\" 0 *（WSP）SecondEndpointID）/（ \"I2\" \"：\" 0 *（WSP）SecondConnectionID）/（ \"F\" \"：\" 0 *（ WSP）RequestedInfo]）/（ \"Q\" \"：\" 0 *（WSP）QuarantineHandling）/（ \"T\" \"：\" 0 *（WSP）DetectEvents]）/（ \"RM\" \"：\" 0 *（WSP ）RestartMethod）/（ \"RD\" \"：\" 0 *（WSP）RestartDelay）/（ \"\" \"：\" 0 *（WSP）[機能]）/（ \"ES\" \"：\" 0 *（WSP）EventStates ]）/（ \"PL\" \"：\" 0 *（WSP）[パッケージリスト]）。監査のみ/（ \"MD\" \"：\" 0 *（WSP）MaxMGCPDatagram）。監査のみ/（extensionParameter \"：\" 0 *（WSP）parameterString]）"
    },
    {
      "indent": 0,
      "text": "; A final response may include an empty ResponseAck ResponseAck = confirmedTransactionIdRange *( \",\" 0*(WSP) confirmedTransactionIdRange )",
      "ja": ";最終的な応答は、空ResponseAck ResponseAck = confirmedTransactionIdRange *（ \"\" 0 *（WSP）confirmedTransactionIdRange）を含んでいてもよいです"
    },
    {
      "indent": 0,
      "text": "confirmedTransactionIdRange = transaction-id [\"-\" transaction-id]",
      "ja": "confirmedTransactionIdRange =トランザクションIDの[ \" - \" トランザクションID]"
    },
    {
      "indent": 0,
      "text": "BearerInformation = BearerAttribute 0*(\",\" 0*(WSP) BearerAttribute) BearerAttribute = (\"e\" \":\" BearerEncoding) / (BearerExtensionName [\":\" BearerExtensionValue]) BearerExtensionName = PackageLCOExtensionName BearerExtensionValue = LocalOptionExtensionValue BearerEncoding = \"A\" / \"mu\"",
      "ja": "BearerInformation = BearerAttribute 0 *（ \"\" 0 *（WSP）BearerAttribute）BearerAttribute =（ \"E\" \"：\" BearerEncoding）/（BearerExtensionName [ \"：\" BearerExtensionValue]）BearerExtensionName = PackageLCOExtensionName BearerExtensionValue = LocalOptionExtensionValue BearerEncoding = \"A\" / \"ミュー」"
    },
    {
      "indent": 0,
      "text": "CallId = 1*32(HEXDIG)",
      "ja": "CallId = 1 * 32（HEXDIG）"
    },
    {
      "indent": 0,
      "text": "; The audit request response may include a list of identifiers ConnectionId = 1*32(HEXDIG) 0*(\",\" 0*(WSP) 1*32(HEXDIG)) SecondConnectionID = ConnectionId",
      "ja": ";監査要求応答は識別子のリストを含むことができるConnectionId = 1 * 32（HEXDIG）0 *（ \"\" 0 *（WSP）1 * 32（HEXDIG））SecondConnectionID = ConnectionId"
    },
    {
      "indent": 0,
      "text": "NotifiedEntity = [LocalName \"@\"] DomainName [\":\" portNumber] LocalName = LocalEndpointName ; No internal structure",
      "ja": "NotifiedEntity = [たLocalName \"@\"]ドメイン名[ \"：\" ポート番号]たLocalName = LocalEndpoint名前。いいえ内部構造ありません"
    },
    {
      "indent": 0,
      "text": "portNumber = 1*5(DIGIT)",
      "ja": "ここで、portNumber = 1 * 5（DIGIT）"
    },
    {
      "indent": 0,
      "text": "RequestIdentifier = 1*32(HEXDIG)",
      "ja": "RequestIdentifier = 1 * 32（HEXDIG）"
    },
    {
      "indent": 0,
      "text": "LocalConnectionOptions = LocalOptionValue 0*(WSP) 0*(\",\" 0*(WSP) LocalOptionValue 0*(WSP)) LocalOptionValue = (\"p\" \":\" packetizationPeriod) / (\"a\" \":\" compressionAlgorithm) / (\"b\" \":\" bandwidth) / (\"e\" \":\" echoCancellation) / (\"gc\" \":\" gainControl) / (\"s\" \":\" silenceSuppression) / (\"t\" \":\" typeOfService) / (\"r\" \":\" resourceReservation) / (\"k\" \":\" encryptiondata) / (\"nt\" \":\" ( typeOfNetwork / supportedTypeOfNetwork)) / (LocalOptionExtensionName [\":\" LocalOptionExtensionValue])",
      "ja": "LocalConnectionOptions = LocalOptionValue 0 *（WSP）0 *（ \"\" 0 *（WSP）LocalOptionValue 0 *（WSP））LocalOptionValue =（ \"P\" \"：\" packetizationPeriod）/（ \"\" \"：\" compressionAlgorithm）/（」 B \" \"：\" 帯域幅）/（ \"E\" \"：\" echoCancellation）/（ \"GC\" \"：\" 利得制御）/（ \"S\" \"：\" silenceSuppression）/（ \"T\" \"：\" typeOfService）/（\" R」 \"：\" resourceReservation）/（ \"K\" \"：\" encryptiondata）/（ \"NT\"、 \"：\"（typeOfNetwork / supportedTypeOfNetwork））/（LocalOptionExtensionName [ \"：\" LocalOptionExtensionValue]）"
    },
    {
      "indent": 0,
      "text": "Capabilities = CapabilityValue 0*(WSP) 0*(\",\" 0*(WSP) CapabilityValue 0*(WSP)) CapabilityValue = LocalOptionValue / (\"v\" \":\" supportedPackages) / (\"m\" \":\" supportedModes)",
      "ja": "機能= CapabilityValue 0 *（WSP）0 *（ \"\" 0 *（WSP）CapabilityValue 0 *（WSP））CapabilityValue = LocalOptionValue /（ \"V\" \"：\" supportedPackages）/（ \"M\" \"：\" supportedModes）"
    },
    {
      "indent": 0,
      "text": "PackageList = pkgNameAndVers 0*(\",\" pkgNameAndVers) pkgNameAndVers = packageName \":\" packageVersion packageVersion = 1*(DIGIT)",
      "ja": "パッケージリスト= pkgNameAndVers 0 *（ \"\" pkgNameAndVers）pkgNameAndVers =のpackageName \"：\" packageVersion packageVersion = 1 *（DIGIT）"
    },
    {
      "indent": 0,
      "text": "packetizationPeriod = 1*4(DIGIT) [\"-\" 1*4(DIGIT)] compressionAlgorithm = algorithmName 0*(\";\" algorithmName) algorithmName = 1*(SuitableLCOCharacter) bandwidth = 1*4(DIGIT) [\"-\" 1*4(DIGIT)] echoCancellation = \"on\" / \"off\" gainControl = \"auto\" / [\"-\"] 1*4(DIGIT) silenceSuppression = \"on\" / \"off\" typeOfService = 1*2(HEXDIG) ; 1 hex only for capabilities resourceReservation = \"g\" / \"cl\" / \"be\"",
      "ja": "packetizationPeriod = 1×4（DIGIT）[ \" - \" 1 * 4（DIGIT）] compressionAlgorithm = algorithmName 0 *（ \";\" algorithmName）algorithmName = 1 *（SuitableLCOCharacter）帯域幅= 1×4（DIGIT）[ \" - \" 1 * 4（DIGIT）] echoCancellation = \"オン\" / \"オフ\" 利得制御= \"オート\" / [ \" - \"] / \"オフ\" typeOfService = 1 * 2（HEXDIG） \"に\" 1 * 4（DIGIT）silenceSuppression =。唯一能力resourceReservation = \"G\" / \"CL\" の1ヘックス/ \"です\""
    },
    {
      "indent": 0,
      "text": ";encryption parameters are coded as in SDP (RFC 2327) ;NOTE: encryption key may contain an algorithm as specified in RFC 1890 encryptiondata = ( \"clear\" \":\" encryptionKey ) / ( \"base64\" \":\" encodedEncryptionKey ) / ( \"uri\" \":\" URItoObtainKey ) / ( \"prompt\" ) ; defined in SDP, not usable in MGCP!",
      "ja": "RFCに1890 encryptiondata =指定された暗号鍵アルゴリズムを含んでいてもよい（ \" \"クリア\"：\" encryptionKey）/（ \"BASE64\" \"：\" encodedEncryptionKey）/（ \";注は、暗号化パラメータは、SDP（RFC 2327）のように符号化されますURI」 \"：\"）URItoObtainKey）/（ \"プロンプト\"。 MGCPで使用できない、SDPで定義されています！"
    },
    {
      "indent": 0,
      "text": "encryptionKey = 1*(SuitableLCOCharacter) / quotedString ; See RFC 2045 encodedEncryptionKey = 1*(ALPHA / DIGIT / \"+\" / \"/\" / \"=\") URItoObtainKey = 1*(SuitableLCOCharacter) / quotedString",
      "ja": "encryptionKey = 1 *（SuitableLCOCharacter）/ quotedString。 RFC 2045 encodedEncryptionKey = 1 *（ALPHA / DIGIT / \"+\" / \"/\" / \"=\"）URItoObtainKey = 1 *（SuitableLCOCharacter）/ quotedStringを見ます"
    },
    {
      "indent": 0,
      "text": "typeOfNetwork = \"IN\" / \"ATM\" / \"LOCAL\" / OtherTypeOfNetwork ; Registered with IANA - see RFC 2327 OtherTypeOfNetwork = 1*(SuitableLCOCharacter) supportedTypeOfNetwork = typeOfNetwork *(\";\" typeOfNetwork)",
      "ja": "typeOfNetwork = \"IN\" / \"ATM\" / \"LOCAL\" / OtherTypeOfNetwork。 IANAに登録されている - を参照してRFC 2327 OtherTypeOfNetwork = 1 *（SuitableLCOCharacter）supportedTypeOfNetwork = typeOfNetwork *（ \";\" typeOfNetwork）"
    },
    {
      "indent": 0,
      "text": "supportedModes = ConnectionMode 0*(\";\" ConnectionMode)",
      "ja": "supportedModes = ConnectionMode 0 *（ \";\" ConnectionMode）"
    },
    {
      "indent": 0,
      "text": "supportedPackages = packageName 0*(\";\" packageName)",
      "ja": "supportedPackages =のpackageName 0 *（ \";\" のpackageName）"
    },
    {
      "indent": 0,
      "text": "packageName = 1*(ALPHA / DIGIT / HYPHEN) ; Hyphen neither first or last",
      "ja": "packageName = 1 *（ALPHA / DIGIT /ハイフン）。最初または最後でもないハイフン"
    },
    {
      "indent": 0,
      "text": "LocalOptionExtensionName = VendorLCOExtensionName / PackageLCOExtensionName / OtherLCOExtensionName VendorLCOExtensionName = \"x\" (\"+\"/\"-\") 1*32(SuitableExtLCOCharacter) PackageLCOExtensionName = packageName \"/\" 1*32(SuitablePkgExtLCOCharacter) ; must not start with \"x-\" or \"x+\" OtherLCOExtensionName = 1*32(SuitableExtLCOCharacter)",
      "ja": "LocalOptionExtensionName = VendorLCOExtensionName / PackageLCOExtensionName / OtherLCOExtensionName VendorLCOExtensionName = \"X\"（ \"+\" / \" - \"）1 * 32（SuitableExtLCOCharacter）PackageLCOExtensionName =のpackageName \"/\" 1 * 32（SuitablePkgExtLCOCharacter）。 \"X-\" または \"X +\" OtherLCOExtensionName = 1 * 32（SuitableExtLCOCharacter）で開始してはなりません"
    },
    {
      "indent": 0,
      "text": "LocalOptionExtensionValue = (1*(SuitableExtLCOValChar) / quotedString) *(\";\" (1*(SuitableExtLCOValChar) / quotedString))",
      "ja": "LocalOptionExtensionValue =（1 *（SuitableExtLCOValChar）/ quotedString）*（ \";\"（1 *（SuitableExtLCOValChar）/ quotedString））"
    },
    {
      "indent": 0,
      "text": ";Note: No \"data\" mode. ConnectionMode = \"sendonly\" / \"recvonly\" / \"sendrecv\" / \"confrnce\" / \"inactive\" / \"loopback\"",
      "ja": ";注：いいえ、「データ」モードを。 ConnectionModeは= \"sendonlyで\" / \"がrecvonly\" / \"のsendrecv\" / \"confrnce\" / \"非アクティブ\" / \"ループバック\""
    },
    {
      "indent": 0,
      "text": " / \"conttest\" / \"netwloop\" / \"netwtest\" / ExtensionConnectionMode ExtensionConnectionMode = PkgExtConnectionMode PkgExtConnectionMode = packageName \"/\" 1*(ALPHA / DIGIT)",
      "ja": "/ \"conttest\" / \"netwloop\" / \"netwtest\" / ExtensionConnectionMode ExtensionConnectionMode = PkgExtConnectionMode PkgExtConnectionMode =のpackageName \"/\" 1 *（ALPHA / DIGIT）"
    },
    {
      "indent": 0,
      "text": "RequestedEvents = requestedEvent 0*(\",\" 0*(WSP) requestedEvent) requestedEvent = (eventName [\"(\" requestedActions \")\"]) / (eventName \"(\" requestedActions \")\" \"(\" eventParameters \")\" ) eventName = [(packageName / \"*\") \"/\"] (eventId / \"all\" / eventRange / \"*\" / \"#\") ; for DTMF [\"@\" (ConnectionId / \"$\" / \"*\")] eventId = 1*(ALPHA / DIGIT / HYPHEN) ; Hyphen neither first nor last eventRange = \"[\" 1*(DigitMapLetter / (DIGIT \"-\" DIGIT) / (DTMFLetter \"-\" DTMFLetter)) \"]\" DTMFLetter = \"A\" / \"B\" / \"C\" / \"D\"",
      "ja": "RequestedEvents = requestedEvent 0 *（ \"\" 0 *（WSP）requestedEvent）requestedEvent =（eventNameの[ \"（\" requestedActionsは \"）\"]）/（eventNameの \"（\" requestedActions \"）\" \"（\" eventParameters \"）\"）eventNameの= [（のpackageName / \"*\"） \"/\"（イベントID / \"全て\" / eventRange / \"*\" / \"＃\"）。 DTMFのための[ \"@\"（ConnectionId / \"$\" / \"*\"）]イベントID = 1 *（ALPHA / DIGIT / HYPHEN）。ハイフンも最初も最後eventRange = \"[\" 1 *（DigitMapLetter /（DIGIT \" - \" DIGIT）/（DTMFLetter \" - \" DTMFLetter）） \"]\" DTMFLetter = \"A\" / \"B\" / \"C\" /「D \""
    },
    {
      "indent": 0,
      "text": "requestedActions = requestedAction 0*(\",\" 0*(WSP) requestedAction) requestedAction = \"N\" / \"A\" / \"D\" / \"S\" / \"I\" / \"K\" / \"E\" \"(\" EmbeddedRequest \")\" / ExtensionAction ExtensionAction = PackageExtAction PackageExtAction = packageName \"/\" Action [\"(\" ActionParameters \")\"] Action = 1*ALPHA ActionParameters = eventParameters ; May contain actions",
      "ja": "requestedActions = requestedAction 0 *（ \"\" 0 *（WSP）requestedAction）requestedAction = \"N\" / \"A\" / \"D\" / \"S\" / \"I\" / \"K\" / \"E\" \"（\" EmbeddedRequest \" ）」/ ExtensionAction ExtensionAction = PackageExtAction PackageExtAction =のpackageName \"/\" アクション[ \"（\" ActionParameters \"）\"]アクション= 1 *のALPHA ActionParametersの=のeventParameters。アクションが含まれていてもよいです"
    },
    {
      "indent": 0,
      "text": ";NOTE: Should tolerate different order when receiving, e.g., for NCS. EmbeddedRequest = ( \"R\" \"(\" EmbeddedRequestList \")\" [\",\" 0*(WSP) \"S\" \"(\" EmbeddedSignalRequest \")\"] [\",\" 0*(WSP) \"D\" \"(\" EmbeddedDigitMap \")\"] ) / ( \"S\" \"(\" EmbeddedSignalRequest \")\" [\",\" 0*(WSP) \"D\" \"(\" EmbeddedDigitMap \")\"] ) / ( \"D\" \"(\" EmbeddedDigitMap \")\" )",
      "ja": ";注：NCSのために、例えば、受信したときに別の順序を容認すべき。 EmbeddedRequest =（ \"R\" \"（\" EmbeddedRequestList \"）\" [ \"\" 0 *（WSP） \"S\"、 \"（\" EmbeddedSignalRequest \"）\"] [ \"\" 0 *（WSP） \"D\" \"（\" EmbeddedDigitMap \" ） \"]）/（ \"S\" \"（\" EmbeddedSignalRequest \"）\"[\"、」0 *（WSP） \"D\" \"（\" EmbeddedDigitMap \"）\"]）/（ \"D\" \"（\" EmbeddedDigitMap \"）\"）"
    },
    {
      "indent": 0,
      "text": "EmbeddedRequestList = RequestedEvents EmbeddedSignalRequest = SignalRequests EmbeddedDigitMap = DigitMap",
      "ja": "EmbeddedRequestList = RequestedEvents EmbeddedSignalRequest = SignalRequests EmbeddedDigitMap = DigitMap"
    },
    {
      "indent": 0,
      "text": "SignalRequests = SignalRequest 0*(\",\" 0*(WSP) SignalRequest ) SignalRequest = eventName [ \"(\" eventParameters \")\" ]",
      "ja": "SignalRequests = SignalRequest 0 *（ \"\" 0 *（WSP）SignalRequest）SignalRequest = eventNameの[ \"（\" eventParameters \"）\"]"
    },
    {
      "indent": 0,
      "text": "eventParameters = eventParameter 0*(\",\" 0*(WSP) eventParameter) eventParameter = eventParameterValue / eventParameterName \"=\" eventParameter / eventParameterName \"(\" eventParameters \")\" eventParameterString = 1*(SuitableEventParamCharacter) eventParameterName = eventParameterString eventParameterValue = eventParameterString / quotedString",
      "ja": "イベントパラメータ=イベントパラメータ0 *（「」0 *（WSP）イベントパラメータ）イベントパラメータ=イベントパラメータの値/イベントパラメータ名 『=』イベントパラメータ/イベントパラメータ名 『（』イベントパラメータ 『）』イベントパラメータ文字列= 1 *（SuitableEventParamCharacter）イベントパラメータ名=イベントパラメータ文字列イベント・パラメータ値=事象パラメータストリング/ quotedString"
    },
    {
      "indent": 0,
      "text": "DigitMap = DigitString / \"(\" DigitStringList \")\" DigitStringList = DigitString 0*( \"|\" DigitString ) DigitString = 1*(DigitStringElement) DigitStringElement = DigitPosition [\".\"] DigitPosition = DigitMapLetter / DigitMapRange ; NOTE \"X\" is now included DigitMapLetter = DIGIT / \"#\" / \"*\" / \"A\" / \"B\" / \"C\" / \"D\" / \"T\" / \"X\" / ExtensionDigitMapLetter ExtensionDigitMapLetter = \"E\" / \"F\" / \"G\" / \"H\" / \"I\" / \"J\" / \"K\" / \"L\" / \"M\" / \"N\" / \"O\" / \"P\" / \"Q\" / \"R\" / \"S\" / \"U\" / \"V\" / \"W\" / \"Y\" / \"Z\" ; NOTE \"[x]\" is now allowed DigitMapRange = \"[\" 1*DigitLetter \"]\" DigitLetter = *((DIGIT \"-\" DIGIT) / DigitMapLetter)",
      "ja": "DigitMap = DigitString / \"（\" DigitStringList \"）\" DigitStringList = DigitString 0 *（ \"|\" DigitString）DigitString = 1 *（DigitStringElement）DigitStringElement = DigitPosition [ \"\"] DigitPosition = DigitMapLetter / DigitMapRange。 NOTE \"X\" 今含まれDigitMapLetter = DIGIT / \"＃\" / \"*\" / \"A\" / \"B\" / \"C\" / \"D\" / \"T\" / \"X\" / ExtensionDigitMapLetter ExtensionDigitMapLetter = \"E\" / \"F\" / \"G\" / \"H\" / \"I\" / \"J\" / \"K\" / \"L\" / \"M\" / \"N\" / \"O\" / \"P\" / \"Q\" /「R \"/ \"S\"/ \"U\"/ \"V\"/ \"W\"/ \"Y\"/ \"Z\"。 NOTE \"[X]\" 今許可されDigitMapRange = \"[\" 1 * DigitLetter \"]\" DigitLetter = *（（DIGIT \" - \" DIGIT）/ DigitMapLetter）"
    },
    {
      "indent": 0,
      "text": "ObservedEvents = SignalRequests",
      "ja": "ObservedEvents = SignalRequests"
    },
    {
      "indent": 0,
      "text": "EventStates = SignalRequests",
      "ja": "EventStates = SignalRequests"
    },
    {
      "indent": 0,
      "text": "ConnectionParameters = ConnectionParameter 0*( \",\" 0*(WSP) ConnectionParameter )",
      "ja": "ConnectionParameters ConnectionParameter = 0 *（ \"\" 0 *（WSP）ConnectionParameter）"
    },
    {
      "indent": 0,
      "text": "ConnectionParameter = ( \"PS\" \"=\" packetsSent ) / ( \"OS\" \"=\" octetsSent ) / ( \"PR\" \"=\" packetsReceived ) / ( \"OR\" \"=\" octetsReceived ) / ( \"PL\" \"=\" packetsLost ) / ( \"JI\" \"=\" jitter ) / ( \"LA\" \"=\" averageLatency ) / ( ConnectionParameterExtensionName \"=\" ConnectionParameterExtensionValue ) packetsSent = 1*9(DIGIT) octetsSent = 1*9(DIGIT) packetsReceived = 1*9(DIGIT) octetsReceived = 1*9(DIGIT) packetsLost = 1*9(DIGIT) jitter = 1*9(DIGIT) averageLatency = 1*9(DIGIT)",
      "ja": "ConnectionParameter =（ \"PS\" \"=\" packetsSent）/（ \"OS\" \"=\" octetsSent）/（ \"PR\" \"=\" packetsReceived）/（ \"OR\" \"=\" octetsReceived）/（ \"PL\" \"=\" packetsLost ）/（ \"JI\" \"=\" ジッター）/（ \"LA\" \"=\" averageLatency）/（ConnectionParameterExtensionName \"=\" ConnectionParameterExtensionValue）packetsSent = 1 * 9（DIGIT）octetsSent = 1 * 9（DIGIT）packetsReceived = 1 * 9 （DIGIT）octetsReceived = 1 * 9（DIGIT）packetsLost = 1 * 9（DIGIT）ジッタ= 1 * 9（DIGIT）averageLatency = 1 * 9（DIGIT）"
    },
    {
      "indent": 0,
      "text": "ConnectionParameterExtensionName = VendorCPExtensionName / PackageCPExtensionName VendorCPExtensionName = \"X\" \"-\" 2*ALPHA PackageCPExtensionName = packageName \"/\" CPName CPName = 1*(ALPHA / DIGIT / HYPHEN) ConnectionParameterExtensionValue = 1*9(DIGIT)",
      "ja": "ConnectionParameterExtensionName = VendorCPExtensionName / PackageCPExtensionName VendorCPExtensionName = \"X\" \" - \" 2 * ALPHA PackageCPExtensionName =のpackageName \"/\" CPNAME CPNAME = 1 *（ALPHA / DIGIT /ハイフン）ConnectionParameterExtensionValue = 1 * 9（DIGIT）"
    },
    {
      "indent": 0,
      "text": "MaxMGCPDatagram = 1*9(DIGIT)",
      "ja": "MaxMGCPDatagram = 1 * 9（DIGIT）"
    },
    {
      "indent": 0,
      "text": "ReasonCode = 3DIGIT [1*(WSP) \"/\" packageName] ; Only for 8xx [WSP 1*(%x20-7E)]",
      "ja": "reasonCodeは= 3DIGIT [1 *（WSP） \"/\" のpackageName]。 8XX [WSP 1 *（％のx20-7E）]のためにのみ"
    },
    {
      "indent": 0,
      "text": "SpecificEndpointID = endpointName SecondEndpointID = endpointName",
      "ja": "SpecificEndpointID =ポイントendpointName SecondEndpointID =ポイントendpointName"
    },
    {
      "indent": 0,
      "text": "RequestedInfo = infoCode 0*(\",\" 0*(WSP) infoCode)",
      "ja": "RequestedInfo = infoCode 0 *（ \"\" 0 *（WSP）infoCode）"
    },
    {
      "indent": 0,
      "text": "infoCode = \"B\" / \"C\" / \"I\" / \"N\" / \"X\" / \"L\" / \"M\" / \"R\" / \"S\" / \"D\" / \"O\" / \"P\" / \"E\" / \"Z\" / \"Q\" / \"T\" / \"RC\" / \"LC\" / \"A\" / \"ES\" / \"RM\" / \"RD\" / \"PL\" / \"MD\" / extensionParameter",
      "ja": "infoCode = \"B\" / \"C\" / \"I\" / \"N\" / \"X\" / \"L\" / \"M\" / \"R\" / \"S\" / \"D\" / \"O\" / \"P\" / \"E\" / \"Z\" / \"Q\" / \"T\" / \"RC\" / \"LC\" / \"A\" / \"ES\" / \"RM\" / \"RD\" / \"PL\" / \"MD\" / extensionParameter"
    },
    {
      "indent": 0,
      "text": "QuarantineHandling = loopControl / processControl / (loopControl \",\" 0*(WSP) processControl ) loopControl = \"step\" / \"loop\" processControl = \"process\" / \"discard\"",
      "ja": "QuarantineHandling =ループ制御/ processControl /（ループ制御 \"\" 0 *（WSP）processControl）ループ制御= \"ステップ\" / \"ループ\" processControl = \"プロセス\" / \"廃棄\""
    },
    {
      "indent": 0,
      "text": "DetectEvents = SignalRequests",
      "ja": "DetectEvents = SignalRequests"
    },
    {
      "indent": 0,
      "text": "RestartMethod = \"graceful\" / \"forced\" / \"restart\" / \"disconnected\" / \"cancel-graceful\" / extensionRestartMethod extensionRestartMethod = PackageExtensionRM PackageExtensionRM = packageName \"/\" 1*32(ALPHA / DIGIT / HYPHEN) RestartDelay = 1*6(DIGIT)",
      "ja": "RestartMethod = \"正常な\" / \"強制的に\" / \"再起動\" / \"切断\" / \"キャンセル・グレースフル\" / extensionRestartMethod extensionRestartMethod = PackageExtensionRM PackageExtensionRM =のpackageName \"/\" 1 * 32（ALPHA / DIGIT /ハイフン）RestartDelay = 1 * 6（桁）"
    },
    {
      "indent": 0,
      "text": "extensionParameter = VendorExtensionParameter / PackageExtensionParameter / OtherExtensionParameter VendorExtensionParameter = \"X\" (\"-\"/\"+\") 1*6(ALPHA / DIGIT) PackageExtensionParameter = packageName \"/\" 1*32(ALPHA / DIGIT / HYPHEN) ; must not start with \"x-\" or x+\" OtherExtensionParameter = 1*32(ALPHA / DIGIT / HYPHEN)",
      "ja": "extensionParameter = VendorExtensionParameter / PackageExtensionParameter / OtherExtensionParameter VendorExtensionParameter = \"X\"（ \" - \" / \"+\"）1 * 6（ALPHA / DIGIT）PackageExtensionParameter =のpackageName \"/\" 1 * 32（ALPHA / DIGIT /ハイフン）。 \"X-\" 又はX +」OtherExtensionParameter = 1 * 32（ALPHA / DIGIT /ハイフン）で開始してはなりません"
    },
    {
      "indent": 0,
      "text": ";If first character is a double-quote, then it is a quoted-string parameterString = (%x21 / %x23-7F) *(%x20-7F) ; first and last must not ; be white space / quotedString",
      "ja": ";最初の文字がある場合は二重引用符、それで引用された文字列parameterString =（％X21 /％x23-7F）*（％x20-7F）。最初と最後はいけません。ホワイトスペース/ quotedStringこと"
    },
    {
      "indent": 0,
      "text": "MGCPResponse = MGCPResponseLine 0*(MGCPParameter) *2(EOL *SDPinformation)",
      "ja": "MGCPResponse MGCPResponseLine = 0 *（MGCPParameter）* 2（EOL * SDPinformation）"
    },
    {
      "indent": 0,
      "text": "MGCPResponseLine = responseCode 1*(WSP) transaction-id [1*(WSP) \"/\" packageName] ; Only for 8xx [WSP responseString] EOL",
      "ja": "MGCPResponseLine =はResponseCode 1 *（WSP）トランザクションID [1 *（WSP） \"/\" のpackageName]。のみ8XX [WSP responseString] EOLのための"
    },
    {
      "indent": 0,
      "text": "responseCode = 3DIGIT responseString = *(%x20-7E)",
      "ja": "ResponseCode = 3DIGIT responseString = *（％のx20-7E）"
    },
    {
      "indent": 0,
      "text": "SuitablePkgExtLCOCharacter = SuitableLCOCharacter",
      "ja": "SuitablePkgExtLCOCharacter = SuitableLCOCharacter"
    },
    {
      "indent": 0,
      "text": "SuitableExtLCOCharacter = DIGIT / ALPHA / \"+\" / \"-\" / \"_\" / \"&\" / \"!\" / \"'\" / \"|\" / \"=\" / \"#\" / \"?\" / \".\" / \"$\" / \"*\" / \"@\" / \"[\" / \"]\" / \"^\" / \"`\" / \"{\" / \"}\" / \"~\"",
      "ja": "SuitableExtLCOCharacter = DIGIT / ALPHA / \"+\" / \" - \" / \"_\" / \"＆\" / \"！\" / \"'\" / \"|\" / \"=\" / \"＃\" / \"？\" / \"\" / \"$\" / \"*\" / \"@\" / \"[\" / \"]\" / \"^\" / \"`\"/ \"{\"/ \"}\"/ \"〜\""
    },
    {
      "indent": 0,
      "text": "SuitableLCOCharacter = SuitableExtLCOCharacter / \"/\"",
      "ja": "SuitableLCOCharacter = SuitableExtLCOCharacter / \"/\""
    },
    {
      "indent": 0,
      "text": "SuitableExtLCOValChar = SuitableLCOCharacter / \":\"",
      "ja": "SuitableExtLCOValChar = SuitableLCOCharacter / \"：\""
    },
    {
      "indent": 0,
      "text": "; VCHAR except \"\"\", \"(\", \")\", \",\", and \"=\" SuitableEventParamCharacter = %x21 / %x23-27 / %x2A-2B / %x2D-3C / %x3E-7E",
      "ja": "; \"\" \" \"（\"、 \"）\"、\"、」、および \"=\" SuitableEventParamCharacter =％X21 /％x23-27 /％X2A-2B /％x2D-3C /％のSpark Proの-7E以外VCHAR"
    },
    {
      "indent": 0,
      "text": "; NOTE: UTF8 encoded quotedString = DQUOTE 0*(quoteEscape / quoteChar) DQUOTE quoteEscape = DQUOTE DQUOTE quoteChar = (%x00-21 / %x23-FF)",
      "ja": ";注：UTF8符号化quotedString = DQUOTE 0 *（quoteEscape / quoteChar）DQUOTE quoteEscape = DQUOTE DQUOTE quoteChar =（％x00-21 /％X23-FF）"
    },
    {
      "indent": 0,
      "text": "EOL = CRLF / LF",
      "ja": "EOL = CRLF / LF"
    },
    {
      "indent": 0,
      "text": "HYPHEN = \"-\"",
      "ja": "HYPHEN = \" - \""
    },
    {
      "indent": 0,
      "text": "; See RFC 2327 for proper SDP grammar instead. SDPinformation = SDPLine CRLF *(SDPLine CRLF) ; see RFC 2327 SDPLine = 1*(%x01-09 / %x0B / %x0C / %x0E-FF) ; for proper def.",
      "ja": ";代わりに、適切なSDPの文法については、RFC 2327を参照してください。 SDPinformation = SDPLine CRLF *（SDPLine CRLF）。 RFC 2327 SDPLine = 1 *（％x01-09 /％X0B /％x0C /％x0E-FF）を参照。適切なデフのため。"
    },
    {
      "indent": 0,
      "text": "Appendix B: Base Package",
      "ja": "付録B：ベースパッケージ"
    },
    {
      "indent": 3,
      "text": "Package name: B Version: 0",
      "ja": "パッケージ名：Bバージョン：0"
    },
    {
      "indent": 3,
      "text": "The MGCP specification defines a base package which contains a set of events and extension parameters that are of general use to the protocol. Although not required, it is highly RECOMMENDED to support this package as it provides important functionality for the base protocol.",
      "ja": "MGCP仕様はプロトコルの一般的な使用であるイベントと拡張パラメータのセットを含む基本パッケージを定義します。必須ではありませんが、非常にそれが基本プロトコルのための重要な機能を提供し、このパッケージをサポートすることをお勧めします。"
    },
    {
      "indent": 0,
      "text": "B.1 Events",
      "ja": "B.1イベント"
    },
    {
      "indent": 3,
      "text": "The table below lists the events:",
      "ja": "以下の表は、イベントを示します："
    },
    {
      "indent": 3,
      "text": " ------------------------------------------------------------------\n| Symbol  |   Definition               |  R  |   S     Duration    |\n|---------|----------------------------|-----|---------------------|\n| enf(##) | embedded RQNT failure      |  x  |                     |\n| oef     | observed events full       |  x  |                     |\n| qbo     | quarantine buffer overflow |  x  |                     |\n ------------------------------------------------------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The events are defined as follows:",
      "ja": "次のようなイベントが定義されています。"
    },
    {
      "indent": 3,
      "text": "Embedded NotificationRequest failure (enf): The Embedded NotificationRequest Failure (enf) event is generated when an embedded Notification Request failure occurs. When the event is requested, it should be as part of the Embedded NotificationRequest itself. When the event is reported, it may be parameterized with an error code (see Section 2.4) detailing the error that occurred. When requested, it cannot be parameterized.",
      "ja": "故障（ENF）NotificationRequest埋め込み：埋め込み通知要求の失敗が発生したときに発生する故障（ENF）イベントNotificationRequest埋め込ま。イベントが要求されると、それ自体NotificationRequest組み込みの一部としてでなければなりません。イベントが報告されている場合、それが発生したエラーの詳細（2.4節を参照してください）エラーコードでパラメータ化することができます。要求された場合は、パラメータ化することはできません。"
    },
    {
      "indent": 3,
      "text": "Observed events full (oef): The event is generated when the endpoint is unable to accumulate any more events in the list of ObservedEvents. If this event occurs, and it is not used to trigger a Notify, subsequent events that should have been added to the list will be lost.",
      "ja": "観察されたイベントは、フル（OEF）：エンドポイントがObservedEventsのリストのいずれかのより多くのイベントを蓄積することができないときにイベントが生成されます。このイベントが発生し、通知のトリガに使用されていない場合は、リストに追加されている必要があり、後続のイベントが失われます。"
    },
    {
      "indent": 3,
      "text": "Quarantine buffer overflow (qbo): The event is generated when the quarantine buffer overflows and one or more events have been lost.",
      "ja": "検疫バッファオーバーフロー（QBO）：隔離バッファオーバーフローおよび1つまたは複数のイベントが失われた場合にイベントが生成されます。"
    },
    {
      "indent": 0,
      "text": "B.2 Extension Parameters",
      "ja": "B.2拡張パラメータ"
    },
    {
      "indent": 0,
      "text": "B.2.1 PersistentEvents",
      "ja": "B.2.1のPersistentEvents"
    },
    {
      "indent": 3,
      "text": "PersistentEvents: A list of events that the gateway is requested to detect and report persistently. The parameter is optional but can be provided in any command where the DetectEvents parameter can be provided. The initial default value of the parameter is empty. When the parameter is omitted from a command, it retains its current value. When the parameter is provided, it completely replaces the current value. Providing an event in this list, is similar (but preferable) to defining that particular event as being persistent. The current list of PersistentEvents will implicitly apply to the current as well as subsequent NotificationRequests, however no glare detection etc. will be performed (similarly to DetectEvents). If an event provided in this list is included in a RequestedEvents list, the action and event parameters used in the RequestedEvents will replace the action and event parameters associated with the event in the PersistentEvents list for the life of the RequestedEvents list, after which the PersistentEvents action and event parameters are restored. Events with event states requested through this parameter will be included in the list of EventStates if audited.",
      "ja": "PersistentEvents：ゲートウェイが検出し、持続的に報告することを要求されたイベントのリスト。パラメータはオプションであるが、DetectEventsパラメータを提供することができる任意のコマンドで提供することができます。パラメータの初期デフォルト値は空です。パラメータがコマンドから省略されている場合、それは現在の値を保持します。パラメータが用意されている場合、それは完全に現在の値を置き換えます。このリスト内のイベントを提供し、持続性のあるものとして、その特定のイベントを定義と同様（しかし好ましい）です。 PersistentEventsの現在のリストは、暗黙的に現在並びに後続NotificationRequests、しかしなしグレア検出などに適用される（同様にDetectEventsに）行われます。このリストにあるイベントがRequestedEventsリストに含まれている場合、RequestedEventsで使用されるアクションとイベントのパラメータは後PersistentEvents、RequestedEventsリストの生活のためPersistentEventsリスト内のイベントに関連付けられたアクションとイベントのパラメータを交換しますアクションとイベントのパラメータが復元されます。監査を受けている場合は、このパラメータによって要求されたイベントの状態を持つイベントがEventStatesのリストに含まれます。"
    },
    {
      "indent": 3,
      "text": "PersistentEvents can also be used to detect events on connections. Use of the \"all connections\" wildcard is straightforward, whereas using PersistentEvents with one or more specific connections must be considered carefully. Once the connection in question is deleted, a subsequent NotificationRequest without a new PersistentEvents value will fail (error code 515 - incorrect connection-id, is RECOMMENDED), as it implicitly refers to the deleted connection.",
      "ja": "PersistentEventsまた、接続上のイベントを検出するために使用することができます。 「すべての接続」のワイルドカードの使用は慎重に考慮しなければならない一つまたは複数の特定の接続でPersistentEventsを使用してのに対し、簡単です。問題の接続は、新しいPersistentEvents値が失敗​​することなく、次のNotificationRequest削除すると - それは暗黙的に削除された接続を指して、（エラーコード515不正な接続IDを、推奨します）。"
    },
    {
      "indent": 3,
      "text": "The parameter generates the relevant error codes from the base protocol, e.g., error code 512 if an unknown event is specified.",
      "ja": "未知のイベントが指定されている場合は、パラメータは、ベースプロトコル、例えば、エラーコード512から関連するエラーコードを生成します。"
    },
    {
      "indent": 3,
      "text": "The PersistentEvents parameter can be audited, in which case it will return its current value. Auditing of RequestedEvents is not affected by this extension, i.e., events specified in this list are not automatically reported when auditing RequestedEvents.",
      "ja": "PersistentEventsパラメータには、現在の値を返します。その場合には、監査することができます。 RequestedEventsの監査がこの拡張によって影響されない、すなわち、このリストに指定されたイベントは、自動的に監査RequestedEventsが報告されていません。"
    },
    {
      "indent": 3,
      "text": "The parameter name for PersistentEvents is \"PR\" and it is defined by the production:",
      "ja": "PersistentEventsのためのパラメータ名は「PR」であり、それは生産によって定義されます。"
    },
    {
      "indent": 5,
      "text": "PersistentEvents = \"PR\" \":\" 0*WSP [RequestedEvents]",
      "ja": "PersistentEvents = \"PR\" \"：\" 0 * WSP [RequestedEvents]"
    },
    {
      "indent": 3,
      "text": "The following example illustrates the use of the parameter:",
      "ja": "次の例では、パラメータの使用方法を示しています。"
    },
    {
      "indent": 5,
      "text": "B/PR: L/hd(N), L/hf(N), L/hu(N), B/enf, B/oef, B/qbo",
      "ja": "B / PR：L / HD（N）、L / HF（N）、L / HU（N）、B / ENF、B / OEF、B / QBO"
    },
    {
      "indent": 3,
      "text": "which instructs the endpoint to persistently detect and report off-hook, hook-flash, and on-hook. It also instructs the endpoint to persistently detect and report Embedded Notification Request failure, Observed events full, and Quarantine buffer overflow.",
      "ja": "これは永続的にオフフック検出して報告するようにエンドポイント、フックフラッシュ、およびオンフックを指示します。また、永続的に埋め込まれた通知要求に失敗し、フル観察されたイベント、および検疫のバッファオーバーフローを検出し、報告するエンドポイントを指示します。"
    },
    {
      "indent": 0,
      "text": "B.2.2 NotificationState",
      "ja": "B.2.2 NotificationState"
    },
    {
      "indent": 3,
      "text": "NotificationState is a RequestedInfo parameter that can be audited with the AuditEndpoint command. It can be used to determine if the endpoint is in the notification state or not.",
      "ja": "NotificationStateはAuditEndpointコマンドで監査できるRequestedInfoパラメータです。エンドポイントが通知状態にあるかどうかを決定するために使用することができます。"
    },
    {
      "indent": 3,
      "text": "The parameter is forbidden in any command. In responses, it is a valid response parameter for AuditEndpoint only.",
      "ja": "パラメータは任意のコマンドで禁じられています。応答では、それだけでAuditEndpointのための有効な応答パラメータです。"
    },
    {
      "indent": 3,
      "text": "It is defined by the following grammar:",
      "ja": "それは以下の文法で定義されています。"
    },
    {
      "indent": 5,
      "text": "NotificationState = \"NS\" \":\" 0*WSP NotificationStateValue NotificationStateValue = \"ns\" / \"ls\" / \"o\"",
      "ja": "NotificationState = \"NS\" \"：\" 0 * WSP NotificationStateValue NotificationStateValue = \"NS\" / \"LS\" / \"O\""
    },
    {
      "indent": 3,
      "text": "It is requested as part of auditing by including the parameter code in RequestedInfo, as in:",
      "ja": "それは同様に、RequestedInfoのパラメータコードを含めることによって、監査の一部として要求されています。"
    },
    {
      "indent": 5,
      "text": "F: B/NS",
      "ja": "F：B / NS"
    },
    {
      "indent": 3,
      "text": "The response parameter will contain the value \"ns\" if the endpoint is in the \"notification state\", the value \"ls\" if the endpoint is in the \"lockstep state\" (i.e., waiting for an RQNT after a response to a NTFY has been received when operating in \"step\" mode), or the value \"o\" otherwise, as for example:",
      "ja": "エンドポイントがNTFYに対する応答があり後RQNTを待っている「ロックステップ状態」（すなわち、である場合、エンドポイントは「通知状態」、値「LS」である場合に応答パラメータは、「NS」の値が含まれます例えばように、そうでない場合、値「O」「ステップ」モード）で動作しているとき、受信し、またはされ："
    },
    {
      "indent": 5,
      "text": "B/NS: ns",
      "ja": "B / NS：NS"
    },
    {
      "indent": 0,
      "text": "B.3 Verbs",
      "ja": "B.3動詞"
    },
    {
      "indent": 3,
      "text": "MGCP packages are not intended to define new commands, however an exception is made in this case in order to add an important general capability currently missing, namely the ability for the gateway to send a generic message to the Call Agent.",
      "ja": "MGCPパッケージが新しいコマンドを定義することを意図していない、しかし、例外は現在、行方不明の重要な一般的な機能を追加するために、コールエージェントに一般的なメッセージを送信するためのゲートウェイのための、すなわち能力で、この場合に行われます。"
    },
    {
      "indent": 3,
      "text": "The definition of the new command is:",
      "ja": "新しいコマンドの定義は次のとおりです。"
    },
    {
      "indent": 10,
      "text": "ReturnCode\n<-- Message(EndpointId\n               [, ...])",
      "raw": true
    },
    {
      "indent": 3,
      "text": "EndpointId is the name for the endpoint(s) in the gateway which is issuing the Message command. The identifier MUST be a fully qualified endpoint identifier, including the domain name of the gateway. The local part of the endpoint name MUST NOT use the \"any of\" wildcard.",
      "ja": "EndpointIdメッセージコマンドを発行しているゲートウェイにおけるエンドポイント（複数可）の名前です。識別子は、ゲートウェイのドメイン名を含む完全修飾されたエンドポイント識別子でなければなりません。エンドポイント名のローカル部分はワイルドカード「のいずれかを」使用してはなりません。"
    },
    {
      "indent": 3,
      "text": "The only parameter specified in the definition of the Message command is the EndpointId, however, it is envisioned that extensions will define additional parameters to be used with the Message command. Such extensions MUST NOT alter or otherwise interfere with the normal operation of the basic MGCP protocol. They may however define additional capabilities above and beyond that provided by the basic MGCP protocol. For example, an extension to enable the gateway to audit the packages supported by the Call Agent could be defined, whereas using the Message command as an alternative way of reporting observed events would be illegal, as that would alter the normal MGCP protocol behavior.",
      "ja": "Messageコマンドの定義に指定された唯一のパラメータは、しかし、拡張子がMessageコマンドで使用する追加パラメータを定義することが想定されるEndpointIdです。そのような拡張は、変更または他の基本的なMGCPプロトコルの正常な動作を妨げてはなりません。彼らは、しかし、上記と基本的なMGCPプロトコルによって提供されるものを超えて追加の機能を定義することができます。それは、通常のMGCPプロトコル挙動を変化させるように観察されたイベントを報告する別の方法として、メッセージ・コマンドを使用して、違法であろう一方で、例えば、コールエージェントがサポートパッケージを監査するゲートウェイを有効にする拡張は、定義することができます。"
    },
    {
      "indent": 3,
      "text": "In order to not interfere with normal MGCP operation, lack of a response to the Message command MUST NOT lead the endpoint to become disconnected. The endpoint(s) MUST be prepared to handle this transparently and continue normal processing unaffected.",
      "ja": "通常のMGCPの動作に干渉しないようにするためには、Messageコマンドへの応答の欠如が切断された状態になるためにエンドポイントをリードしてはなりません。エンドポイント（複数可）は透過これを処理し、影響を受けていない通常の処理を継続する準備をしなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the endpoint(s) receive a response indicating that the Call Agent does not support the Message command, the endpoint(s) MUST NOT send a Message command again until the current \"notified entity\" has changed. Similarly, if the endpoint(s) receive a response indicating that the Call Agent does not support one or more parameters in the Message command, the endpoint(s) MUST NOT send a Message command with those parameters again until the current \"notified entity\" has changed.",
      "ja": "エンドポイント（s）はコールエージェントがMessageコマンドをサポートしていないことを示す応答を受信した場合、現在の「通知実体が」変化しているまで、エンドポイント（複数可）、再びMessageコマンドを送ってはいけません。エンドポイント（s）はコールエージェントがMessageコマンドで1つ以上のパラメータをサポートしていないことを示す応答を受信した場合も同様に、エンドポイント（複数可）、現在の「通知のエンティティ」まで、再びそれらのパラメータを指定してMessageコマンドを送ってはいけません変更されました。"
    },
    {
      "indent": 3,
      "text": "The Message command is encoded as MESG, as shown in the following example:",
      "ja": "次の例に示すように、メッセージ・コマンドは、MESGとして符号化されます。"
    },
    {
      "indent": 6,
      "text": "MESG 1200 aaln/1@rgw.whatever.net MGCP 1.0",
      "ja": "MGCP 1.0 aaln/1@rgw.whatever.net MESG 1200"
    },
    {
      "indent": 0,
      "text": "Appendix C: IANA Considerations",
      "ja": "付録C：IANAの考慮事項"
    },
    {
      "indent": 0,
      "text": "C.1 New MGCP Package Sub-Registry",
      "ja": "C.1新しいMGCPパッケージサブレジストリ"
    },
    {
      "indent": 3,
      "text": "The IANA has established a new sub-registry for MGCP packages under http://www.iana.org/assignments/mgcp-packages.",
      "ja": "IANAはhttp://www.iana.org/assignments/mgcp-packages下MGCPパッケージの新しいサブレジストリを確立しています。"
    },
    {
      "indent": 3,
      "text": "Packages can be registered with the IANA according to the following procedure:",
      "ja": "パッケージには、以下の手順に従って、IANAに登録することができます。"
    },
    {
      "indent": 3,
      "text": "The package MUST have a unique string name which MUST NOT start with the two characters \"x-\" or \"x+\".",
      "ja": "パッケージには、2つの文字「x軸」または「X +」で始めることはできません一意の文字列名を持つ必要があります。"
    },
    {
      "indent": 3,
      "text": "The package title, name, and version (zero assumed by default) MUST be registered with IANA as well as a reference to the document that describes the package. The document MUST have a stable URL and MUST be contained on a public web server.",
      "ja": "パッケージタイトル、名称、及びバージョン（ゼロはデフォルトで想定）はIANAに登録され、並びにパッケージを記載している文書を参照しなければなりません。文書には、安定したURLを持っていなければならないし、公共のウェブサーバ上で含まれている必要があります。"
    },
    {
      "indent": 3,
      "text": "Packages may define one or more Extension Digit Map Letters, however these are taken from a limited and flat name space. To prevent name clashing, IANA SHALL NOT register a package that defines an Extension Digit Map Letter already defined in another package registered by IANA. To ease this task, such packages SHALL contain the line \"Extension Digit Map Letters: \" followed by a list of the Extension Digit Map Letters defined in the package at the beginning of the package definition.",
      "ja": "パッケージは、しかし、これらは限られており、フラットな名前空間から取得され、一つ以上の拡張桁地図文字を定義することができます。名前の激突を防ぐために、IANAは、すでにIANAによって登録された別のパッケージで定義された拡張ディジットマップレターを定義するパッケージを登録しないものとします。パッケージ定義の先頭にパッケージで定義された拡張桁地図手紙のリストが続く：このタスクを容易にするために、そのようなパッケージは、「拡張桁地図手紙」の行を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "A contact name, e-mail and postal address for the package MUST be provided. The contact information SHALL be updated by the defining organization as necessary.",
      "ja": "パッケージのための連絡先の名前、電子メール、郵便アドレスが提供されなければなりません。連絡先情報は、必要に応じて定義する組織によって更新されるものとします。"
    },
    {
      "indent": 3,
      "text": "Finally, prior to registering a package, the IANA MUST have a designated expert [23] review the package. The expert reviewer will send e-mail to the IANA on the overall review determination.",
      "ja": "最後に、パッケージを登録する前に、IANAは、指定された専門家[23]パッケージを見直しを持たなければなりません。専門家のレビューアは、全体的な見直しの決定にIANAに電子メールを送信します。"
    },
    {
      "indent": 0,
      "text": "C.2 New MGCP Package",
      "ja": "C.2新しいMGCPパッケージ"
    },
    {
      "indent": 3,
      "text": "This document defines a new MGCP Base Package in Appendix B, which has been registered by IANA.",
      "ja": "この文書は、IANAによって登録されている付録Bで新しいMGCPベースパッケージを、定義されています。"
    },
    {
      "indent": 0,
      "text": "C.3 New MGCP LocalConnectionOptions Sub-Registry",
      "ja": "C.3新しいMGCP LocalConnectionOptionsサブレジストリ"
    },
    {
      "indent": 3,
      "text": "The IANA has established a new sub-registry for MGCP LocalConnectionOptions under http://www.iana.org/assignments/mgcp-localconnectionoptions.",
      "ja": "IANAはhttp://www.iana.org/assignments/mgcp-localconnectionoptions下MGCP LocalConnectionOptionsのための新しいサブレジストリを確立しています。"
    },
    {
      "indent": 3,
      "text": "Packages are the preferred extension mechanism, however for backwards compatibility, local connection options beyond those provided in this specification can be registered with IANA. Each such local connection option MUST have a unique string name which MUST NOT start with \"x-\" or \"x+\". The local connection option field name and encoding name MUST be registered with IANA as well as a reference to the document that describes the local connection option. The document MUST have a stable URL and MUST be contained on a public web server.",
      "ja": "パッケージは、しかし、後方互換性のために、本明細書で提供されるものを超えてローカル接続オプションはIANAに登録することができ、好適な拡張機構です。それぞれのそのようなローカル接続オプションは、「X-」または「X +」で始めることはできません一意の文字列名を持つ必要があります。ローカル接続オプションのフィールド名とエンコーディング名は、ローカル接続オプションを記述した文書を参照するだけでなく、IANAに登録しなければなりません。文書には、安定したURLを持っていなければならないし、公共のウェブサーバ上で含まれている必要があります。"
    },
    {
      "indent": 3,
      "text": "A contact name, e-mail and postal address for the local connection option MUST be provided. The contact information SHALL be updated by the defining organization as necessary.",
      "ja": "ローカル接続オプションのための連絡先の名前、電子メール、郵便アドレスが提供されなければなりません。連絡先情報は、必要に応じて定義する組織によって更新されるものとします。"
    },
    {
      "indent": 3,
      "text": "Finally, prior to registering a LocalConnectionOption, the IANA MUST have a designated expert [23] review the LocalConnectionOption. The expert reviewer will send e-mail to the IANA on the overall review determination.",
      "ja": "最後に、LocalConnectionOptionを登録する前に、IANAは、指定された専門家[23] LocalConnectionOptionを見直しを持たなければなりません。専門家のレビューアは、全体的な見直しの決定にIANAに電子メールを送信します。"
    },
    {
      "indent": 0,
      "text": "Appendix D: Mode Interactions",
      "ja": "付録D：モードの相互作用"
    },
    {
      "indent": 3,
      "text": "An MGCP endpoint can establish one or more media streams. These streams are either incoming (from a remote endpoint) or outgoing (generated at the handset microphone). The \"connection mode\" parameter establishes the direction and generation of these streams. When there is only one connection to an endpoint, the mapping of these streams is straightforward; the handset plays the incoming stream over the handset speaker and generates the outgoing stream from the handset microphone signal, depending on the mode parameter.",
      "ja": "MGCPエンドポイントは、1つまたは複数のメディアストリームを確立することができます。これらのストリームは、（リモートエンドポイントからの）着信または（ハンドセットマイクロフォンで生成された）送信のいずれかです。 「接続モード」パラメータは、これらの流れの方向と世代を確立します。エンドポイントへの唯一つの接続が存在する場合、これらのストリームのマッピングは簡単です。携帯電話は、携帯電話のスピーカーを介して入力ストリームを再生し、携帯電話のマイク信号からの発信ストリームを生成し、モードパラメータに依存します。"
    },
    {
      "indent": 3,
      "text": "However, when several connections are established to an endpoint, there can be many incoming and outgoing streams. Depending on the connection mode used, these streams may interact differently with each other and the streams going to/from the handset.",
      "ja": "いくつかの接続がエンドポイントに確立されている場合しかし、多くの着信と発信の流れがあることができます。使用する接続モードに応じて、これらのストリームは、互いにへ/受話器から行くのストリームとは異なる相互作用することができます。"
    },
    {
      "indent": 3,
      "text": "The table below describes how different connections SHALL be mixed when one or more connections are concurrently \"active\". An active connection is here defined as a connection that is in one of the following modes:",
      "ja": "以下の表は、一つ以上の接続が同時に「アクティブ」である場合、異なる接続が混在しなければならない方法について説明します。アクティブな接続は、ここでは、次のいずれかのモードである接続として定義されています。"
    },
    {
      "indent": 3,
      "text": "* \"send/receive\" * \"send only\" * \"receive only\" * \"conference\"",
      "ja": "* * *「受信のみ」*「のみ送信」「会議」、「送信/受信」"
    },
    {
      "indent": 3,
      "text": "Connections in \"network loopback\", \"network continuity test\", or \"inactive\" modes are not affected by connections in the \"active\" modes. The Table uses the following conventions:",
      "ja": "「ネットワークループバック」、「ネットワーク導通試験」で接続、または「非アクティブ」モードは、「アクティブ」モードでの接続には影響されません。表には、次の表記法を使用しています。"
    },
    {
      "indent": 3,
      "text": "* Ai is the incoming media stream from Connection A * Bi is the incoming media stream from Connection B * Hi is the incoming media stream from the Handset Microphone * Ao is the outgoing media stream to Connection A * Bo is the outgoing media stream to Connection B * Ho is the outgoing media stream to the Handset earpiece * NA indicates no stream whatsoever (assuming there are no signals applied on the connection)",
      "ja": "*愛はコネクションA *バイからの着信メディアストリームで接続B *こんにちはから入ってくるメディアストリームがハンドセットマイク*青から入ってくるメディアストリームですコネクションA *ボーへの発信メディア・ストリームは、Connectionへの発信メディア・ストリームですB *ホーは、ハンドセットイヤピースへの発信メディア・ストリームである* NAが一切流れないことを示す（接続に印加されていない信号が存在しないと仮定して）"
    },
    {
      "indent": 3,
      "text": "\"netw\" in the following table indicates either \"netwloop\" or \"netwtest\" mode.",
      "ja": "以下の表中の「NETWは」「netwloop」または「netwtest」モードのいずれかを示しています。"
    },
    {
      "indent": 4,
      "text": " -------------------------------------------------------------\n|       |               Connection A Mode                     |\n|       |-----------------------------------------------------\n|       |sendonly|recvonly|sendrecv|confrnce|inactive|  netw  |\n|-------|-----------------------------------------------------|\n| |Send | Ao=Hi  | Ao=NA  | Ao=Hi  | Ao=Hi  | Ao=NA  | Ao=Ai  |\n|C|only | Bo=Hi  | Bo=Hi  | Bo=Hi  | Bo=Hi  | Bo=Hi  | Bo=Hi  |\n|o|     | Ho=NA  | Ho=Ai  | Ho=Ai  | Ho=Ai  | Ho=NA  | Ho=NA  |\n|n|-----------------------------------------------------------\n|n|recv |        |Ao=NA   |Ao=Hi   |Ao=Hi   | Ao=NA  | Ao=Ai  |\n|e|only |        |Bo=NA   |Bo=NA   |Bo=NA   | Bo=NA  | Bo=NA  |\n|c|     |        |Ho=Ai+Bi|Ho=Ai+Bi|Ho=Ai+Bi| Ho=Bi  | Ho=Bi  |\n|t|-----------------------------------------------------------|\n|i|send |        |        |Ao=Hi   |Ao=Hi   | Ao=NA  | Ao=Ai  |\n|o|recv |        |        |Bo=Hi   |Bo=Hi   | Bo=Hi  | Bo=Hi  |\n|n|     |        |        |Ho=Ai+Bi|Ho=Ai+Bi| Ho=Bi  | Ho=Bi  |\n| |-----------------------------------------------------------|\n|B|conf |        |        |        |Ao=Hi+Bi| Ao=NA  | Ao=Ai  |\n| |rnce |        |        |        |Bo=Hi+Ai| Bo=Hi  | Bo=Hi  |\n|M|     |        |        |        |Ho=Ai+Bi| Ho=Bi  | Ho=Bi  |\n|o|-----------------------------------------------------------|\n|d|Inac |        |        |        |        | Ao=NA  | Ao=Ai  |\n|e|tive |        |        |        |        | Bo=NA  | Bo=NA  |\n| |     |        |        |        |        | Ho=NA  | Ho=NA  |\n| |-----------------------------------------------------------|\n| |netw |        |        |        |        |        | Ao=Ai  |\n| |     |        |        |        |        |        | Bo=Bi  |\n| |     |        |        |        |        |        | Ho=NA  |\n -------------------------------------------------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "If there are three or more \"active\" connections they will still interact as defined in the table above with the outgoing media streams mixed for each interaction (union of all streams). If internal resources are used up and the streams cannot be mixed, the gateway MUST return an error (error code 403 or 502, not enough resources, are RECOMMENDED).",
      "ja": "三つ以上の「アクティブ」な接続がある場合は、各相互作用（すべてのストリームの組合）を混合し、発信するメディアストリームと、上記の表で定義されている彼らはまだ相互に作用します。内部リソースが使い果たされると、ストリームが混合することができない場合、ゲートウェイは、エラーを返さなければなりません（エラーコード403または502ではなく、十分なリソースを、推奨されます）。"
    },
    {
      "indent": 0,
      "text": "Appendix E: Endpoint Naming Conventions",
      "ja": "付録E：エンドポイントの命名規則"
    },
    {
      "indent": 3,
      "text": "The following sections provide some RECOMMENDED endpoint naming conventions.",
      "ja": "次のセクションでは、いくつかの推奨エンドポイントの命名規則を提供します。"
    },
    {
      "indent": 0,
      "text": "E.1 Analog Access Line Endpoints",
      "ja": "E.1アナログアクセス回線エンドポイント"
    },
    {
      "indent": 3,
      "text": "The string \"aaln\", should be used as the first term in a local endpoint name for analog access line endpoints. Terms following \"aaln\" should follow the physical hierarchy of the gateway so that if the gateway has a number of RJ11 ports, the local endpoint name could look like the following:",
      "ja": "文字列「AALN」は、アナログアクセス回線エンドポイントのローカルエンドポイント名の最初の用語として使用されるべきです。ゲートウェイは、RJ11ポートの数を持っている場合、ローカルエンドポイント名は以下のようになりますように「AALN」ゲートウェイの物理階層に従ってください、次の条件："
    },
    {
      "indent": 6,
      "text": "aaln/#",
      "ja": "AALN /＃"
    },
    {
      "indent": 3,
      "text": "where \"#\" is the number of the analog line (RJ11 port) on the gateway.",
      "ja": "ここで、「＃」は、ゲートウェイのアナログライン（RJ11ポート）の数です。"
    },
    {
      "indent": 3,
      "text": "On the other hand, the gateway may have a number of physical plug-in units, each of which contain some number of RJ11 ports, in which case, the local endpoint name might look like the following:",
      "ja": "一方、ゲートウェイは、RJ11ポートのいくつかの数を含むそれぞれが物理的プラグインユニットの数を有していてもよく、その場合には、ローカルエンドポイント名は次のようになります。"
    },
    {
      "indent": 6,
      "text": "aaln/<unit #>/#",
      "ja": "AALN / <ユニット＃> /＃"
    },
    {
      "indent": 3,
      "text": "where <unit #> is the number of the plug in unit in the gateway and \"#\" is the number of the analog line (RJ11 port) on that unit. Leading zeroes MUST NOT be used in any of the numbers (\"#\") above.",
      "ja": "ここで、<ユニット＃>は、ゲートウェイにおけるユニットにおけるプラグの数であり、「＃」は、その単位のアナログライン（RJ11ポート）の数です。先頭のゼロは、上記の番号（「＃」）のいずれかに使用してはいけません。"
    },
    {
      "indent": 0,
      "text": "E.2 Digital Trunks",
      "ja": "E.2デジタルトランク"
    },
    {
      "indent": 3,
      "text": "The string \"ds\" should be used for the first term of digital endpoints with a naming convention that follows the physical and digital hierarchy such as:",
      "ja": "文字列「DS」は、物理的およびデジタル階層構造などを、次の命名規則を持つデジタルエンドポイントの最初の用語を使用する必要があります。"
    },
    {
      "indent": 6,
      "text": "ds/<unit-type1>-<unit #>/<unit-type2>-<unit #>/.../<channel #>",
      "ja": "DS / <ユニットTYPE1>  -  <ユニット＃> / <ユニットTYPE2>  -  <ユニット＃> /.../ <チャネル＃>"
    },
    {
      "indent": 3,
      "text": "where: <unit-type> identifies the particular hierarchy level. Some example values of <unit-type> are: \"s\", \"su\", \"oc3\", \"ds3\", \"e3\", \"ds2\", \"e2\", \"ds1\", \"e1\" where \"s\" indicates a slot number and \"su\" indicates a sub-unit within a slot. Leading zeroes MUST NOT be used in any of the numbers (\"#\") above.",
      "ja": "<ユニット型>は、特定の階層レベルを識別する。 <ユニット型>のいくつかの例示的な値である： \"S\"、 \"す\"、 \"OC3\"、 \"DS3\"、 \"E3\"、 \"DS2\"、 \"E2\"、 \"DS1\"、 \"E1\" ここで、 \"S\"スロット番号と「SUは」スロット内のサブユニットを示して示しています。先頭のゼロは、上記の番号（「＃」）のいずれかに使用してはいけません。"
    },
    {
      "indent": 3,
      "text": "The <unit #> is a decimal number which is used to reference a particular instance of a <unit-type> at that level of the hierarchy. The number of levels and naming of those levels is based on the physical hierarchy within the media gateway.",
      "ja": "<ユニット＃>階層のそのレベルで<ユニット型>の特定のインスタンスを参照するために使用される10進数です。レベルおよびそれらのレベルのネーミングの数は、メディアゲートウェイ内の物理階層に基づいています。"
    },
    {
      "indent": 0,
      "text": "E.3 Virtual Endpoints",
      "ja": "E.3仮想エンドポイント"
    },
    {
      "indent": 3,
      "text": "Another type of endpoint is one that is not associated with a physical interface (such as an analog or digital endpoint). This type of endpoint is called a virtual endpoint and is often used to represent some DSP resources that gives the endpoint some capability. Examples are announcement, IVR or conference bridge devices. These devices may have multiple instances of DSP functions so that a possible naming convention is:",
      "ja": "エンドポイントの別のタイプは、（例えばアナログまたはデジタルエンドポイントなど）の物理インタフェースに関連付けられていないものです。エンドポイントのこのタイプは、仮想エンドポイントと呼ばれ、多くの場合、エンドポイントにいくつかの機能を提供するいくつかのDSPリソースを表すために使用されます。例としては、告知、IVRまたは会議ブリッジデバイスです。可能な命名規則があるように、これらのデバイスは、DSP機能の複数のインスタンスを持っていることがあります。"
    },
    {
      "indent": 6,
      "text": "<virtual-endpoint-type>/<endpoint-#>",
      "ja": "<仮想エンドポイントタイプ> / <エンドポイント - ＃>"
    },
    {
      "indent": 3,
      "text": "where <virtual-endpoint-type> may be some string representing the type of endpoint (such as \"ann\" for announcement server or \"cnf\" for conference server) and <endpoint-#> would identify a particular virtual endpoint within the device. Leading zeroes MUST NOT be used in the number (\"#\") above. If the physical hierarchy of the server includes plug-in DSP cards, another level of hierarchy in the local endpoint name may be used to describe the plug in unit.",
      "ja": "ここで、<仮想エンドポイント型>と（例えば、アナウンスサーバ又は会議サーバに対する「CNF」の「アン」という）のエンドポイントのタイプを表すいくつかの文字列であってもよい。<エンドポイント - ＃>デバイス内の特定の仮想エンドポイントを識別する。先行ゼロは、上記の番号（「＃」）で使用してはいけません。サーバの物理階層は、プラグインDSPカードが含まれている場合、ローカルエンドポイント名における階層の別のレベルは、ユニット内にプラグを記述するために使用されてもよいです。"
    },
    {
      "indent": 3,
      "text": "A virtual endpoint may be created as the result of using the \"any of\" wildcard. Similarly, a virtual endpoint may cease to exist once the last connection on the virtual endpoint is deleted. The definition of the virtual endpoint MUST detail both of these aspects.",
      "ja": "仮想エンドポイント「は、任意の」ワイルドカードを使用した結果として作成されてもよいです。同様に、仮想エンドポイントは、仮想エンドポイントでの最後の接続が削除されると、存在しなくなることがあります。これらの側面の仮想エンドポイントMUST詳細の定義の両方。"
    },
    {
      "indent": 3,
      "text": "When a <virtual-endpoint-type> creates and deletes virtual endpoints automatically, there will be cases where no virtual endpoints exist at the time a RestartInProgress command is to be issued. In such cases, the gateway SHOULD simply use the \"all of\" wildcard in lieu of any specific <endpoint-#> as in, e.g.:",
      "ja": "<仮想エンドポイントタイプ>が作成され、自動的に仮想エンドポイントを削除すると、何の仮想エンドポイントはRestartInProgressコマンドが発行される時点で存在しない場合があります。例えば、のよう -  <＃エンドポイント>：このような場合、ゲートウェイは、単に特定の代わりにワイルドカード「のすべて」を使用すべきです"
    },
    {
      "indent": 5,
      "text": "ann/*@mygateway.whatever.net",
      "raw": true
    },
    {
      "indent": 3,
      "text": "If the RestartInProgress command refers to all endpoints in the gateway (virtual or not), the <virtual-endpoint-id> can be omitted as in, e.g.:",
      "ja": "RestartInProgressコマンド（仮想またはしない）、ゲートウェイ内のすべてのエンドポイントを参照している場合、<仮想エンドポイントID>例えば、のように省略することができます："
    },
    {
      "indent": 5,
      "text": "*@mygateway.whatever.net",
      "ja": "＊＠ｍｙがてわｙ。うぁてゔぇｒ。ねｔ"
    },
    {
      "indent": 3,
      "text": "Commands received by the gateway will still have to refer to an actual endpoint (possibly created by that command by use of the \"any of\" wildcard) in order for the command to be processed though.",
      "ja": "ゲートウェイによって受信されたコマンドはまだかかわらず、処理すべきコマンドのために、（おそらくワイルドカード「のいずれか」を使用することにより、そのコマンドによって作成された）実際のエンドポイントを参照する必要があります。"
    },
    {
      "indent": 0,
      "text": "E.4 Media Gateway",
      "ja": "E.4メディアゲートウェイ"
    },
    {
      "indent": 3,
      "text": "MGCP only defines operation on endpoints in a media gateway. It may be beneficial to define an endpoint that represents the gateway itself as opposed to the endpoints managed by the gateway. Implementations that wish to do so should use the local endpoint name \"mg\" (for media gateway) as in:",
      "ja": "MGCPは、メディアゲートウェイ内のエンドポイントの操作を定義します。ゲートウェイによって管理されるエンドポイントとは対照的に、ゲートウェイ自体を表すエンドポイントを定義することが有益であり得ます。そうすることを望む実装は、同様にローカルエンドポイント名（メディアゲートウェイ用）「MG」を使用する必要があります。"
    },
    {
      "indent": 5,
      "text": "mg@mygateway.whatever.net",
      "ja": "ｍｇ＠ｍｙがてわｙ。うぁてゔぇｒ。ねｔ"
    },
    {
      "indent": 3,
      "text": "Note that defining such an endpoint does not change any of the protocol semantics, i.e., the \"mg\" endpoint and other endpoints (e.g., digital trunks) in the gateway are still independent endpoints and MUST be treated as such. For example, RestartInProgress commands MUST still be issued for all endpoints in the gateway as usual.",
      "ja": "そのようなエンドポイントを定義するプロトコルのセマンティクスを変更しないことに注意してください、すなわち、「MG」エンドポイントと他のエンドポイント（例えば、デジタルトランク）ゲートウェイで依然として独立エンドポイントであり、そのように扱われなければなりません。例えば、RestartInProgressコマンドはまだいつものようにゲートウェイ内のすべてのエンドポイントのために発行する必要があります。"
    },
    {
      "indent": 0,
      "text": "E.5 Range Wildcards",
      "ja": "E.5範囲ワイルドカード"
    },
    {
      "indent": 3,
      "text": "As described in Section 2.1.2, the MGCP endpoint naming scheme defines the \"all of\" and \"any of\" wildcards for the individual terms in a local endpoint name. While the \"all of\" wildcard is very useful for reducing the number of messages, it can by definition only be used when we wish to refer to all instances of a given term in the local endpoint name. Furthermore, in the case where a command is to be sent by the gateway to the Call Agent, the \"all of\" wildcard can only be used if all of the endpoints named by it have the same \"notified entity\". Implementations that prefer a finer-grained wildcarding scheme can use the range wildcarding scheme described here.",
      "ja": "2.1.2項で述べたように、MGCPエンドポイントの命名方式は、「すべての」を定義し、ローカルエンドポイント名の個々の用語のワイルドカード「のいずれか」。ワイルドカード「の全てが」メッセージの数を減らすために非常に有用であるが、我々はローカルエンドポイント名に与えられた用語のすべてのインスタンスを参照したいとき、それは定義によってのみ使用することができます。それによって名付けられたエンドポイントのすべてが同じ「通知実体」を持っている場合はさらに、コマンドはコールエージェントへのゲートウェイによって送信される場合には、「すべて」のワイルドカードにのみ使用することができます。きめ細かいワイルドカードスキームを好む実装は、ここで説明した範囲のワイルドカード・スキームを使用することができます。"
    },
    {
      "indent": 3,
      "text": "A range wildcard is defined as follows:",
      "ja": "次のように範囲ワイルドカードに定義されます。"
    },
    {
      "indent": 3,
      "text": "RangeWildcard = \"[\" NumericalRange *( \",\" NumericalRange ) \"]\" NumericalRange = 1*(DIGIT) [ \"-\" 1*(DIGIT) ]",
      "ja": "RangeWildcard = \"[\" NumericalRange *（ \"\" NumericalRange） \"]\" NumericalRange = 1 *（DIGIT）[ \" - \" 1 *（DIGIT）]"
    },
    {
      "indent": 3,
      "text": "Note that white space is not permitted. Also, since range wildcards use the character \"[\" to indicate the start of a range, the \"[\" character MUST NOT be used in endpoint names that use range wildcards. The length of a range wildcard SHOULD be bounded to a reasonably small value, e.g., 128 characters.",
      "ja": "ホワイトスペースが許可されていないことに注意してください。レンジのワイルドカードは、範囲の開始を示すために「[」文字を使用しているためまた、「[」の文字は、範囲、ワイルドカードを使用したエンドポイント名に使用してはいけません。範囲ワイルドカードの長さは適度に小さい値、例えば、128個の文字に囲まれるべきです。"
    },
    {
      "indent": 3,
      "text": "Range wildcards can be used anywhere an \"all of\" wildcard can be used. The semantics are identical for the endpoints named. However, it MUST be noted, that use of the range wildcarding scheme requires support on both the gateway and the Call Agent. Therefore, a gateway MUST NOT assume that it's Call Agent supports range wildcarding and vice versa. In practice, this typically means that both the gateway and Call Agent will need to be provisioned consistently in order to use range wildcards. Also, if a gateway or Call Agent using range wildcards receives an error response that could indicate a possible endpoint naming problem, they MUST be able to automatically revert to not using range wildcards.",
      "ja": "レンジワイルドカードは、ワイルドカード「のすべてが」使用できる場所であればどこでも使用することができます。意味は、名前のエンドポイントに同じです。しかし、それは注意しなければならない、範囲のワイルドカード制度の利用は、ゲートウェイとコールエージェントの両方のサポートが必要です。したがって、ゲートウェイはコールエージェントが、範囲ワイルドカードおよびその逆をサポートしていますと仮定してはいけません。実際には、これは通常、ゲートウェイとコールエージェントの両方が範囲ワイルドカードを使用するためには、一貫しプロビジョニングする必要があることを意味します。範囲のワイルドカードを使用してゲートウェイやコールエージェントが問題に名前を付けることができ、エンドポイントを示している可能性があり、エラーレスポンスを受信した場合にも、彼らは自動的に範囲のワイルドカードを使用していないに戻すことができなければなりません。"
    },
    {
      "indent": 3,
      "text": "The following examples illustrates the use of range wildcards:",
      "ja": "以下の実施例は、範囲ワイルドカードの使用を示します。"
    },
    {
      "indent": 6,
      "text": "ds/ds1-1/[1-12]\nds/ds1-1/[1,3,20-24]\nds/ds1-[1-2]/*\nds/ds3-1/[1-96]",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The following example illustrates how to use it in a command:",
      "ja": "次の例では、コマンドでそれを使用する方法を示しています。"
    },
    {
      "indent": 6,
      "text": "RSIP 1204 ds/ds3-1/[1-96]@tgw-18.whatever.net MGCP 1.0 RM: restart RD: 0",
      "ja": "RSIP 1204 DS / ds3-1 / [1-96] @ tgw-18.whatever.net MGCP 1.0 RM：0：RDを再起動します"
    },
    {
      "indent": 0,
      "text": "Appendix F: Example Command Encodings",
      "ja": "付録F：コマンド例エンコーディング"
    },
    {
      "indent": 3,
      "text": "This appendix provides examples of commands and responses shown with the actual encoding used. Examples are provided for each command. All commentary shown in the commands and responses is optional.",
      "ja": "この付録では、使用される実際の符号で示すコマンドと応答の例を提供します。例としては、各コマンドのために提供されます。コマンドと応答に示されているすべての解説は省略可能です。"
    },
    {
      "indent": 0,
      "text": "F.1 NotificationRequest",
      "ja": "F.1 NotificationRequest"
    },
    {
      "indent": 3,
      "text": "The first example illustrates a NotificationRequest that will ring a phone and look for an off-hook event:",
      "ja": "最初の例では、携帯電話を鳴らすと、オフフックイベントを探しますNotificationRequestを示しています。"
    },
    {
      "indent": 6,
      "text": "RQNT 1201 aaln/1@rgw-2567.whatever.net MGCP 1.0 N: ca@ca1.whatever.net:5678 X: 0123456789AC R: l/hd(N) S: l/rg",
      "ja": "RQNT 1201 aaln/1@rgw-2567.whatever.net MGCP 1.0 N：ca@ca1.whatever.net：5678 X：0​​123456789AC R：L / HD（N）S：L / RG"
    },
    {
      "indent": 3,
      "text": "The response indicates that the transaction was successful:",
      "ja": "応答は、トランザクションが成功したことを示します。"
    },
    {
      "indent": 6,
      "text": "200 1201 OK",
      "ja": "200 1201 OK"
    },
    {
      "indent": 3,
      "text": "The second example illustrates a NotificationRequest that will look for and accumulate an off-hook event, and then provide dial-tone and accumulate digits according to the digit map provided. The \"notified entity\" is set to \"ca@ca1.whatever.net:5678\", and since the SignalRequests parameter is empty (it could have been omitted as well), all currently active TO signals will be stopped. All events in the quarantine buffer will be processed, and the list of events to detect in the \"notification\" state will include fax tones in addition to the \"requested events\" and persistent events:",
      "ja": "第二の例では、探し、オフフックイベントを蓄積し、その後、ダイヤルトーンを提供し、提供桁マップに従って数字を蓄積するNotificationRequestを示します。信号TO現在アクティブなすべてが停止されますと、SignalRequestsパラメータが空であるので、（それは同様に省略されている可能性）：「通知実体は、」「5678 ca@ca1.whatever.net」に設定されています。隔離バッファ内のすべてのイベントが処理され、「通知」の状態で検出するイベントのリストは、「要求されたイベント」と永続的なイベントに加えて、ファックストーンが含まれます："
    },
    {
      "indent": 6,
      "text": "RQNT 1202 aaln/1@rgw-2567.whatever.net MGCP 1.0 N: ca@ca1.whatever.net:5678 X: 0123456789AC R: L/hd(A, E(S(L/dl),R(L/oc, L/hu, D/[0-9#*T](D)))) D: (0T|00T|#xxxxxxx|*xx|91xxxxxxxxxx|9011x.T) S: Q: process T: G/ft",
      "ja": "RQNT 1202 aaln/1@rgw-2567.whatever.net MGCP 1.0 N：ca@ca1.whatever.net：5678 X：0​​123456789AC R：L / HD（A、E（S（L / DL）、R（L / OC、L / HU、D / [0-9＃1 *のT]（D））））D：（0T | 00T | #xxxxxxx | * XX | 91xxxxxxxxxx | 9011x.T）S：Q：プロセスT：G /フィート"
    },
    {
      "indent": 3,
      "text": "The response indicates that the transaction was successful:",
      "ja": "応答は、トランザクションが成功したことを示します。"
    },
    {
      "indent": 6,
      "text": "200 1202 OK",
      "ja": "200 1202 OK"
    },
    {
      "indent": 0,
      "text": "F.2 Notify",
      "ja": "F.2は通知します"
    },
    {
      "indent": 3,
      "text": "The example below illustrates a Notify message that notifies an off-hook event followed by a 12-digit number beginning with \"91\". A transaction identifier correlating the Notify with the NotificationRequest it results from is included. The command is sent to the current \"notified entity\", which typically will be the actual value supplied in the NotifiedEntity parameter, i.e., \"ca@ca1.whatever.net:5678\" - a failover situation could have changed this:",
      "ja": "以下の例では「91」で始まる12桁の数字が続くオフフックイベントを通知する通知メッセージを示しています。それが含まれているからもたらさNotificationRequestで通知相関トランザクション識別子。フェイルオーバ状況はこれを変更している可能性が： - ：コマンドは、「5678 ca@ca1.whatever.net」、すなわち、典型的には、NotifiedEntityパラメータで提供実際の値となり、現在の「通知された実体」に送信されます"
    },
    {
      "indent": 6,
      "text": "NTFY 2002 aaln/1@rgw-2567.whatever.net MGCP 1.0 N: ca@ca1.whatever.net:5678 X: 0123456789AC O: L/hd,D/9,D/1,D/2,D/0,D/1,D/8,D/2,D/9,D/4,D/2,D/6,D/6",
      "ja": "NTFY 2002 aaln/1@rgw-2567.whatever.net MGCP 1.0 N：ca@ca1.whatever.net：5678 X：0​​123456789AC O：L / HD、D / 9、D / 1、D / 2、D / 0 、D / 1、D / 8、D / 2、D / 9、D / 4、D / 2、D / 6、D / 6"
    },
    {
      "indent": 3,
      "text": "The Notify response indicates that the transaction was successful:",
      "ja": "通知応答は、トランザクションが成功したことを示します。"
    },
    {
      "indent": 6,
      "text": "200 2002 OK",
      "ja": "200 2002 OK"
    },
    {
      "indent": 0,
      "text": "F.3 CreateConnection",
      "ja": "F.3のCreateConnection"
    },
    {
      "indent": 3,
      "text": "The first example illustrates a CreateConnection command to create a connection on the endpoint specified. The connection will be part of the specified CallId. The LocalConnectionOptions specify that G.711 mu-law will be the codec used and the packetization period will be 10 ms. The connection mode will be \"receive only\":",
      "ja": "最初の例では、指定されたエンドポイントに接続を作成するためのCreateConnectionコマンドを示します。接続は、指定されたCallIdの一部となります。 LocalConnectionOptionsはとG.711 mu-lawコーデックが使用され、パケット化期間が10ミリ秒になるように指定します。接続モードでは、「受信のみ」となります。"
    },
    {
      "indent": 6,
      "text": "CRCX 1204 aaln/1@rgw-2567.whatever.net MGCP 1.0 C: A3C47F21456789F0 L: p:10, a:PCMU M: recvonly",
      "ja": "CRCX 1204 aaln/1@rgw-2567.whatever.net MGCP 1.0 C：A3C47F21456789F0のL：P：10：PCMU M：がrecvonly"
    },
    {
      "indent": 3,
      "text": "The response indicates that the transaction was successful, and a connection identifier for the newly created connection is therefore included. A session description for the new connection is included as well - note that it is preceded by an empty line.",
      "ja": "応答は、トランザクションが成功したことを示し、そして新しく作成された接続の接続識別子は、したがって、含まれています。新しい接続のためのセッション記述は、同様に含まれている - それは空行が先行することに注意してください。"
    },
    {
      "indent": 6,
      "text": "200 1204 OK I: FDE234C8",
      "ja": "200 1204 OK I：FDE234C8"
    },
    {
      "indent": 6,
      "text": "v=0 o=- 25678 753849 IN IP4 128.96.41.1 s=- c=IN IP4 128.96.41.1 t=0 0 m=audio 3456 RTP/AVP 0",
      "ja": "V = 0 0 =  -  25678 753849 IP4 128.96.41.1のS = IN  -  C = IP4 128.96.41.1 T = 0、M =オーディオ3456 RTP / AVP 0 IN"
    },
    {
      "indent": 3,
      "text": "The second example illustrates a CreateConnection command containing a notification request and a RemoteConnectionDescriptor:",
      "ja": "第二の例では、通知要求とRemoteConnectionDescriptorを含むのCreateConnectionコマンドを示します。"
    },
    {
      "indent": 6,
      "text": "CRCX 1205 aaln/1@rgw-2569.whatever.net MGCP 1.0 C: A3C47F21456789F0 L: p:10, a:PCMU M: sendrecv X: 0123456789AD R: L/hd S: L/rg",
      "ja": "A3C47F21456789F0のL：P：10：PCMU M：SENDRECV X：0123456789AD R：L / HDのS：L / RG MGCP 1.0 C aaln/1@rgw-2569.whatever.net CRCX 1205"
    },
    {
      "indent": 6,
      "text": "v=0 o=- 25678 753849 IN IP4 128.96.41.1 s=- c=IN IP4 128.96.41.1 t=0 0 m=audio 3456 RTP/AVP 0",
      "ja": "V = 0 0 =  -  25678 753849 IP4 128.96.41.1のS = IN  -  C = IP4 128.96.41.1 T = 0、M =オーディオ3456 RTP / AVP 0 IN"
    },
    {
      "indent": 3,
      "text": "The response indicates that the transaction failed, because the phone was already off-hook. Consequently, neither a connection-id nor a session description is returned:",
      "ja": "応答は、電話が既にオフフックであったため、トランザクションが、失敗したことを示しています。その結果、接続IDやセッション記述でもないが返されます。"
    },
    {
      "indent": 6,
      "text": "401 1205 Phone off-hook",
      "ja": "401 1205電話オフフック"
    },
    {
      "indent": 3,
      "text": "Our third example illustrates the use of the provisional response and the three-way handshake. We create another connection and acknowledge the previous response received by using the response acknowledgement parameter:",
      "ja": "我々の第三の例では、暫定的な応答とスリーウェイハンドシェイクの使用を示します。私たちは、別の接続を作成し、応答確認パラメータを使用して、受信した以前の応答を確認します："
    },
    {
      "indent": 6,
      "text": "CRCX 1206 aaln/1@rgw-2569.whatever.net MGCP 1.0 K: 1205 C: A3C47F21456789F0 L: p:10, a:PCMU M: inactive",
      "ja": "CRCX 1206 aaln/1@rgw-2569.whatever.net MGCP 1.0 K：1205 C：A3C47F21456789F0のL：P：10：PCMU M：非アクティブ"
    },
    {
      "indent": 6,
      "text": "v=0 o=- 25678 753849 IN IP4 128.96.41.1 s=- c=IN IP4 128.96.41.1 t=0 0 m=audio 3456 RTP/AVP 0",
      "ja": "V = 0 0 =  -  25678 753849 IP4 128.96.41.1のS = IN  -  C = IP4 128.96.41.1 T = 0、M =オーディオ3456 RTP / AVP 0 IN"
    },
    {
      "indent": 3,
      "text": "A provisional response is returned initially:",
      "ja": "暫定応答が最初に返されます。"
    },
    {
      "indent": 6,
      "text": "100 1206 Pending I: DFE233D1",
      "ja": "100 1206保留I：DFE233D1"
    },
    {
      "indent": 6,
      "text": "v=0 o=- 4723891 7428910 IN IP4 128.96.63.25 s=- c=IN IP4 128.96.63.25 t=0 0 m=audio 3456 RTP/AVP 0",
      "ja": "V = 0 0 =  -  IP4 128.96.63.25のS = IN 4723891 7428910  -  C = IP4 128.96.63.25 T = 0、M =オーディオ3456 RTP / AVP 0 IN"
    },
    {
      "indent": 3,
      "text": "A little later, the final response is received:",
      "ja": "少し後に、最終的な応答が受信されます。"
    },
    {
      "indent": 6,
      "text": "200 1206 OK K: I: DFE233D1",
      "ja": "200 1206 OK K：I：DFE233D1"
    },
    {
      "indent": 6,
      "text": "v=0 o=- 4723891 7428910 IN IP4 128.96.63.25 s=- c=IN IP4 128.96.63.25 t=0 0 m=audio 3456 RTP/AVP 0",
      "ja": "V = 0 0 =  -  IP4 128.96.63.25のS = IN 4723891 7428910  -  C = IP4 128.96.63.25 T = 0、M =オーディオ3456 RTP / AVP 0 IN"
    },
    {
      "indent": 3,
      "text": "The Call Agent acknowledges the final response as requested:",
      "ja": "コール・エージェントは、要求されたとして、最終的な応答を認めます："
    },
    {
      "indent": 6,
      "text": "000 1206",
      "ja": "０００ １２０６"
    },
    {
      "indent": 3,
      "text": "and the transaction is complete.",
      "ja": "トランザクションは完了です。"
    },
    {
      "indent": 0,
      "text": "F.4 ModifyConnection",
      "ja": "F.4 ModifyConnection"
    },
    {
      "indent": 3,
      "text": "The first example shows a ModifyConnection command that simply sets the connection mode of a connection to \"send/receive\" - the \"notified entity\" is set as well:",
      "ja": "最初の例では、単に「送信/受信」への接続の接続モードを設定ModifyConnectionコマンドを示す - 「通知された実体」が同様に設定されています。"
    },
    {
      "indent": 6,
      "text": "MDCX 1209 aaln/1@rgw-2567.whatever.net MGCP 1.0 C: A3C47F21456789F0 I: FDE234C8 N: ca@ca1.whatever.net M: sendrecv",
      "ja": "MDCX 1209 aaln/1@rgw-2567.whatever.net MGCP 1.0 C：A3C47F21456789F0 I：FDE234C8 N：ca@ca1.whatever.netのM：SENDRECV"
    },
    {
      "indent": 3,
      "text": "The response indicates that the transaction was successful:",
      "ja": "応答は、トランザクションが成功したことを示します。"
    },
    {
      "indent": 6,
      "text": "200 1209 OK",
      "ja": "200 1209 OK"
    },
    {
      "indent": 3,
      "text": "In the second example, we pass a session description and include a notification request with the ModifyConnection command. The endpoint will start playing ring-back tones to the user:",
      "ja": "第二の例では、セッション記述を通過しModifyConnectionコマンドで通知要求を含みます。エンドポイントは、利用者にリングバックトーンの再生を開始します。"
    },
    {
      "indent": 6,
      "text": "MDCX 1210 aaln/1@rgw-2567.whatever.net MGCP 1.0 C: A3C47F21456789F0 I: FDE234C8 M: recvonly X: 0123456789AE R: L/hu S: G/rt",
      "ja": "MDCX 1210 aaln/1@rgw-2567.whatever.net MGCP 1.0 C：A3C47F21456789F0 I：FDE234C8 M：recvonlyでX：0123456789AE R：L / HU S：G / RT"
    },
    {
      "indent": 6,
      "text": "v=0 o=- 4723891 7428910 IN IP4 128.96.63.25 s=- c=IN IP4 128.96.63.25 t=0 0 m=audio 3456 RTP/AVP 0",
      "ja": "V = 0 0 =  -  IP4 128.96.63.25のS = IN 4723891 7428910  -  C = IP4 128.96.63.25 T = 0、M =オーディオ3456 RTP / AVP 0 IN"
    },
    {
      "indent": 3,
      "text": "The response indicates that the transaction was successful:",
      "ja": "応答は、トランザクションが成功したことを示します。"
    },
    {
      "indent": 6,
      "text": "200 1206 OK",
      "ja": "200 1206 OK"
    },
    {
      "indent": 0,
      "text": "F.5 DeleteConnection (from the Call Agent)",
      "ja": "（コール・エージェントから）F.5 DeleteConnection"
    },
    {
      "indent": 3,
      "text": "In this example, the Call Agent simply instructs the gateway to delete the connection \"FDE234C8\" on the endpoint specified:",
      "ja": "この例では、コールエージェントは、単純に指定されたエンドポイントに接続「FDE234C8」を削除するようにゲートウェイに指示します。"
    },
    {
      "indent": 6,
      "text": "DLCX 1210 aaln/1@rgw-2567.whatever.net MGCP 1.0 C: A3C47F21456789F0 I: FDE234C8",
      "ja": "DLCX 1210 aaln/1@rgw-2567.whatever.net MGCP 1.0 C：A3C47F21456789F0 I：FDE234C8"
    },
    {
      "indent": 3,
      "text": "The response indicates success, and that the connection was deleted. Connection parameters for the connection are therefore included as well:",
      "ja": "応答が成功を示しており、接続が削除されたこと。接続のための接続パラメータは、そのためにも含まれています："
    },
    {
      "indent": 6,
      "text": "250 1210 OK P: PS=1245, OS=62345, PR=780, OR=45123, PL=10, JI=27, LA=48",
      "ja": "250 1210ストローク：PS = 1245、デュー= 62345、時= 780 = 45123、第二= 10、G = 27、ラ= 48"
    },
    {
      "indent": 0,
      "text": "F.6 DeleteConnection (from the gateway)",
      "ja": "（ゲートウェイから）F.6 DeleteConnection"
    },
    {
      "indent": 3,
      "text": "In this example, the gateway sends a DeleteConnection command to the Call Agent to instruct it that a connection on the specified endpoint has been deleted. The ReasonCode specifies the reason for the deletion, and Connection Parameters for the connection are provided as well:",
      "ja": "この例では、ゲートウェイは、指定されたエンドポイント上の接続が削除されたということを指示するコール・エージェントにDeleteConnectionコマンドを送信します。 reasonCodeは、削除の理由を指定し、接続のための接続パラメータは、同様に提供されています。"
    },
    {
      "indent": 6,
      "text": "DLCX 1210 aaln/1@rgw-2567.whatever.net MGCP 1.0 C: A3C47F21456789F0 I: FDE234C8 E: 900 - Hardware error P: PS=1245, OS=62345, PR=780, OR=45123, PL=10, JI=27, LA=48",
      "ja": "DLCX 1210 aaln/1@rgw-2567.whatever.net MGCP 1.0 C：A3C47F21456789F0 I：FDE234C8 E：900  - ハードウェア・エラー・P：PS = 1245、OS = 62345、PR = 780、OR = 45123、PL = 10、JI = 27、LA = 48"
    },
    {
      "indent": 3,
      "text": "The Call Agent sends a success response to the gateway:",
      "ja": "コールエージェントは、ゲートウェイへの成功応答を送信します。"
    },
    {
      "indent": 6,
      "text": "200 1210 OK",
      "ja": "200 1210 OK"
    },
    {
      "indent": 0,
      "text": "F.7 DeleteConnection (multiple connections from the Call Agent)",
      "ja": "F.7 DeleteConnection（コール・エージェントからの複数の接続）"
    },
    {
      "indent": 3,
      "text": "In the first example, the Call Agent instructs the gateway to delete all connections related to call \"A3C47F21456789F0\" on the specified endpoint:",
      "ja": "最初の例では、コールエージェントは、指定されたエンドポイント上の「A3C47F21456789F0」を呼び出すために関連するすべての接続を削除するには、ゲートウェイに指示します。"
    },
    {
      "indent": 6,
      "text": "DLCX 1210 aaln/1@rgw-2567.whatever.net MGCP 1.0 C: A3C47F21456789F0",
      "ja": "DLCX 1210 aaln/1@rgw-2567.whatever.net MGCP 1.0 C：A3C47F21456789F0"
    },
    {
      "indent": 3,
      "text": "The response indicates success and that the connection(s) were deleted:",
      "ja": "応答が成功し、接続（s）が削除されたことを示します。"
    },
    {
      "indent": 6,
      "text": "250 1210 OK",
      "ja": "250 1210 OK"
    },
    {
      "indent": 3,
      "text": "In the second example, the Call Agent instructs the gateway to delete all connections related to all of the endpoints specified:",
      "ja": "2番目の例では、コールエージェントは、指定されたすべてのエンドポイントに関連するすべての接続を削除するには、ゲートウェイに指示します。"
    },
    {
      "indent": 6,
      "text": "DLCX 1210 aaln/*@rgw-2567.whatever.net MGCP 1.0",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The response indicates success:",
      "ja": "応答が成功を示しています。"
    },
    {
      "indent": 6,
      "text": "250 1210 OK",
      "ja": "250 1210 OK"
    },
    {
      "indent": 0,
      "text": "F.8 AuditEndpoint",
      "ja": "F.8 AuditEndpoint"
    },
    {
      "indent": 3,
      "text": "In the first example, the Call Agent wants to learn what endpoints are present on the gateway specified, hence the use of the \"all of\" wild-card for the local portion of the endpoint-name:",
      "ja": "最初の例では、コールエージェントは、エンドポイント名のローカル部分のためのワイルドカード「のすべて」のそれ故に使用、エンドポイントが指定されたゲートウェイ上に存在しているものを学びたいです："
    },
    {
      "indent": 6,
      "text": "AUEP 1200 *@rgw-2567.whatever.net MGCP 1.0",
      "ja": "MGCP 1.0 *@rgw-2567.whatever.net AUEP 1200"
    },
    {
      "indent": 3,
      "text": "The gateway indicates success and includes a list of endpoint names:",
      "ja": "ゲートウェイは成功を示し、エンドポイント名のリストが含まれています。"
    },
    {
      "indent": 6,
      "text": "200 1200 OK Z: aaln/1@rgw-2567.whatever.net Z: aaln/2@rgw-2567.whatever.net",
      "ja": "OK 200 1200から：aaln/1@rgw-2567.whatever.netから：aaln/2@rgw-2567.whatever.net"
    },
    {
      "indent": 3,
      "text": "In the second example, the capabilities of one of the endpoints is requested:",
      "ja": "2番目の例では、エンドポイントの1つの機能が要求されます。"
    },
    {
      "indent": 6,
      "text": "AUEP 1201 aaln/1@rgw-2567.whatever.net MGCP 1.0 F: A",
      "ja": "MGCP 1.0 F aaln/1@rgw-2567.whatever.net AUEP 1201："
    },
    {
      "indent": 3,
      "text": "The response indicates success and the capabilities as well. Two codecs are supported, however with different capabilities. Consequently two separate capability sets are returned:",
      "ja": "応答は、同様の成功や能力を示しています。二つのコーデックは、しかし、異なる機能と、サポートされています。結果的に二つの別々の機能セットが返されます。"
    },
    {
      "indent": 6,
      "text": "200 1201 OK\nA: a:PCMU, p:10-100, e:on, s:off, v:L;S, m:sendonly;\n         recvonly;sendrecv;inactive;netwloop;netwtest\nA: a:G729, p:30-90, e:on, s:on, v:L;S, m:sendonly;\n         recvonly;sendrecv;inactive;confrnce;netwloop",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Note that the carriage return in the Capabilities lines are shown for formatting reasons only - they are not permissible in a real implementation.",
      "ja": "機能ラインでの改行のみのフォーマット上の理由のために示されていることに注意してください - 彼らは実際の実装では許されません。"
    },
    {
      "indent": 3,
      "text": "In the third example, the Call Agent audits several types of information for the endpoint:",
      "ja": "第三の例では、コールエージェントはエンドポイントの情報のいくつかのタイプを監査します："
    },
    {
      "indent": 6,
      "text": "AUEP 2002 aaln/1@rgw-2567.whatever.net MGCP 1.0 F: R,D,S,X,N,I,T,O,ES",
      "ja": "MGCP 1.0 F aaln/1@rgw-2567.whatever.net AUEP 2002 R、D、S、X、N、I、T、O、ES"
    },
    {
      "indent": 3,
      "text": "The response indicates success:",
      "ja": "応答が成功を示しています。"
    },
    {
      "indent": 6,
      "text": "200 2002 OK R: L/hu,L/oc(N),D/[0-9](N) D: S: L/vmwi(+) X: 0123456789B1 N: [128.96.41.12] I: 32F345E2 T: G/ft O: L/hd,D/9,D/1,D/2 ES: L/hd",
      "ja": "200 2002 OK R：L / HU、L / OC（N）、D / [0-9]（N）、D：S：L / VMWI（+）X：0123456789B1 N：[128.96.41.12] I：32F345E2 T ：G /フィートO：L / HD、D / 9、D / 1、D / 2 ES：L / HD"
    },
    {
      "indent": 3,
      "text": "The list of requested events contains three events. Where no package name is specified, the default package is assumed. The same goes for actions, so the default action - Notify - must therefore be assumed for the \"L/hu\" event. The omission of a value for the \"digit map\" means the endpoint currently does not have a digit map. There are currently no active time-out signals, however the OO signal \"vmwi\" is currently on and is consequently included - in this case it was parameterized, however the parameter could have been excluded. The current \"notified entity\" refers to an IP-address and only a single connection exists for the endpoint. The current value of DetectEvents is \"G/ft\", and the list of ObservedEvents contains the four events specified. Finally, the event-states audited reveals that the phone was off-hook at the time the transaction was processed.",
      "ja": "要求されたイベントのリストは、3つのイベントが含まれています。何のパッケージ名が指定されていない場合は、デフォルトのパッケージが想定されます。同じことは、アクションのために行くので、デフォルトのアクションは - 通知 - それゆえ「L / HU」イベントのために想定されている必要があります。 「ケタマップ」の値の省略は、エンドポイントが現在ケタマップを持っていないことを意味します。この場合にはパラメータ化された、しかし、パラメータが除外されている可能性が - アクティブタイムアウト信号は、しかし、OO信号「VMWI」は、現在オンになって、その結果に含まれ、現在はありません。現在の「通知のエンティティは、」IPアドレスを参照し、単一の接続だけは、エンドポイントのために存在します。 DetectEventsの電流値は、「G /フィート」である、とObservedEventsのリストが指定された4つのイベントが含まれています。最後に、イベントの状態は電話がオフフックは、トランザクションが処理された時点であったことを明らかに監査さ。"
    },
    {
      "indent": 0,
      "text": "F.9 AuditConnection",
      "ja": "F.9監査接続"
    },
    {
      "indent": 3,
      "text": "The first example shows an AuditConnection command where we audit the CallId, NotifiedEntity, LocalConnectionOptions, Connection Mode, LocalConnectionDescriptor, and the Connection Parameters:",
      "ja": "最初の例では、我々はCallId、NotifiedEntity、LocalConnectionOptions、接続モード、LocalConnectionDescriptor、及び接続パラメータを監査AuditConnectionコマンドを示しています。"
    },
    {
      "indent": 6,
      "text": "AUCX 2003 aaln/1@rgw-2567.whatever.net MGCP 1.0 I: 32F345E2 F: C,N,L,M,LC,P",
      "ja": "AUCX 2003 aaln/1@rgw-2567.whatever.net MGCP 1.0 I：32F345E2 F：C、N、L、M、LC、P"
    },
    {
      "indent": 3,
      "text": "The response indicates success and includes information for the RequestedInfo:",
      "ja": "応答が成功を示し、RequestedInfoのための情報が含まれています。"
    },
    {
      "indent": 6,
      "text": "200 2003 OK C: A3C47F21456789F0 N: ca@ca1.whatever.net L: p:10, a:PCMU M: sendrecv P: PS=395, OS=22850, PR=615, OR=30937, PL=7, JI=26, LA=47",
      "ja": "200 2003 OK C：A3C47F21456789F0 N：ca@ca1.whatever.netのL：P：10：PCMU M：のsendrecv P：PS = 395、OS = 22850、PR = 615、OR = 30937、PL = 7、JI = 26、LA = 47"
    },
    {
      "indent": 6,
      "text": "v=0 o=- 4723891 7428910 IN IP4 128.96.63.25 s=- c=IN IP4 128.96.63.25 t=0 0 m=audio 1296 RTP/AVP 0",
      "ja": "V = 0 0 =  -  IP4 128.96.63.25のS = IN 4723891 7428910  -  C = IP4 128.96.63.25 T = 0、M =オーディオ1296 RTP / AVP 0 IN"
    },
    {
      "indent": 3,
      "text": "In the second example, we request to audit RemoteConnectionDescriptor and LocalConnectionDescriptor:",
      "ja": "2番目の例では、我々はRemoteConnectionDescriptorとLocalConnectionDescriptorを監査するために要求します。"
    },
    {
      "indent": 6,
      "text": "AUCX 1203 aaln/2@rgw-2567.whatever.net MGCP 1.0 I: FDE234C8 F: RC,LC",
      "ja": "AUCX 1203 aaln/2@rgw-2567.whatever.net MGCP 1.0 I：FDE234C8 F：RC、LC"
    },
    {
      "indent": 3,
      "text": "The response indicates success, and includes information for the RequestedInfo. In this case, no RemoteConnectionDescriptor exists, hence only the protocol version field is included for the RemoteConnectionDescriptor:",
      "ja": "応答が成功を示し、RequestedInfoのための情報が含まれています。この場合、RemoteConnectionDescriptorは、従って唯一のプロトコルバージョンフィールドはRemoteConnectionDescriptorために含まれ、存在しません。"
    },
    {
      "indent": 6,
      "text": "200 1203 OK",
      "ja": "200 1203 OK"
    },
    {
      "indent": 6,
      "text": "v=0 o=- 4723891 7428910 IN IP4 128.96.63.25 s=- c=IN IP4 128.96.63.25 t=0 0 m=audio 1296 RTP/AVP 0",
      "ja": "V = 0 0 =  -  IP4 128.96.63.25のS = IN 4723891 7428910  -  C = IP4 128.96.63.25 T = 0、M =オーディオ1296 RTP / AVP 0 IN"
    },
    {
      "indent": 6,
      "text": "v=0",
      "ja": "= 0"
    },
    {
      "indent": 0,
      "text": "F.10 RestartInProgress",
      "ja": "F.10 RestartInProgress"
    },
    {
      "indent": 3,
      "text": "The first example illustrates a RestartInProgress message sent by an gateway to inform the Call Agent that the specified endpoint will be taken out-of-service in 300 seconds:",
      "ja": "最初の例では、指定されたエンドポイントは300秒でアウトオブサービスさせていただきますことをコールエージェントに通知するためにゲートウェイによって送信されたRestartInProgressメッセージを示しています。"
    },
    {
      "indent": 6,
      "text": "RSIP 1200 aaln/1@rgw-2567.whatever.net MGCP 1.0 RM: graceful RD: 300",
      "ja": "RSIP 1200 aaln/1@rgw-2567.whatever.net MGCP 1.0 RM：優雅なRD：300"
    },
    {
      "indent": 3,
      "text": "The Call Agent's response indicates that the transaction was successful:",
      "ja": "コールエージェントの応答は、トランザクションが成功したことを示します。"
    },
    {
      "indent": 6,
      "text": "200 1200 OK",
      "ja": "200 1200 OK"
    },
    {
      "indent": 3,
      "text": "In the second example, the RestartInProgress message sent by the gateway informs the Call Agent, that all of the gateway's endpoints are being placed in-service in 0 seconds, i.e., they are currently in service. The restart delay could have been omitted as well:",
      "ja": "第2の例では、ゲートウェイによって送信されたRestartInProgressメッセージがゲートウェイのエンドポイントの全て、すなわち0秒でサービス中に置かれていることを、コールエージェントに通知し、彼らは、現在サービス中です。再起動遅延も同様に省略されている可能性があり："
    },
    {
      "indent": 6,
      "text": "RSIP 1204 *@rgw-2567.whatever.net MGCP 1.0 RM: restart RD: 0",
      "ja": "MGCP 1.0 RM *@rgw-2567.whatever.net RSIP 1204：0：RDを再起動します"
    },
    {
      "indent": 3,
      "text": "The Call Agent's response indicates success, and furthermore provides the endpoints in question with a new \"notified entity\":",
      "ja": "コールエージェントの応答は成功を示し、さらには新しい「通知実体」との質問に、エンドポイントを提供します。"
    },
    {
      "indent": 6,
      "text": "200 1204 OK N: CA-1@whatever.net",
      "ja": "200 1204 OK N：CA-1@whatever.net"
    },
    {
      "indent": 3,
      "text": "Alternatively, the command could have failed with a new \"notified entity\" as in:",
      "ja": "また、コマンドは、のような新しい「通知実体」で失敗している可能性があり："
    },
    {
      "indent": 6,
      "text": "521 1204 OK N: CA-1@whatever.net",
      "ja": "521 1204 OK N：CA-1@whatever.net"
    },
    {
      "indent": 3,
      "text": "In that case, the command would then have to be retried in order to satisfy the \"restart procedure\", this time going to Call Agent \"CA-1@whatever.net\".",
      "ja": "その場合は、コマンドはその後、この時間は「CA-1@whatever.net」エージェントに電話しようとして「再起動手順」を満足させるために再試行しなければならないであろう。"
    },
    {
      "indent": 0,
      "text": "Appendix G: Example Call Flows",
      "ja": "付録G：例コールフロー"
    },
    {
      "indent": 3,
      "text": "The message flow tables in this section use the following abbreviations:",
      "ja": "このセクションのメッセージフローテーブルは次の略語を使用します。"
    },
    {
      "indent": 3,
      "text": "* rgw = Residential Gateway",
      "ja": "* RGW =レジデンシャルゲートウェイ"
    },
    {
      "indent": 3,
      "text": "* ca = Call Agent",
      "ja": "* CA =コール・エージェント"
    },
    {
      "indent": 3,
      "text": "* n+ = step 'n' is repeated one or more times",
      "ja": "* N + =ステップ「n」は1回以上繰り返されます"
    },
    {
      "indent": 3,
      "text": "Note that any use of upper and lower case within the text of the messages is to aid readability and is not in any way a requirement. The only requirement involving case is to be case insensitive at all times.",
      "ja": "メッセージのテキスト内の大文字と小文字の任意の使用は、読みやすさを支援することであり、どのような方法での要件ではないことに注意してください。ケースを含む唯一の要件は、常に大文字と小文字を区別することです。"
    },
    {
      "indent": 0,
      "text": "G.1 Restart",
      "ja": "G.1を再起動します"
    },
    {
      "indent": 0,
      "text": "G.1.1 Residential Gateway Restart",
      "ja": "G.1.1レジデンシャルゲートウェイの再起動"
    },
    {
      "indent": 3,
      "text": "The following table shows a message sequence that might occur when a call agent (ca) is contacted by two independent residential gateways (rgw1 and rgw2) which have restarted.",
      "ja": "次の表は、コールエージェント（CA）が再起動した2つの独立した住宅用ゲートウェイ（rgw1とrgw2）が接触したときに発生する可能性があるメッセージシーケンスを示します。"
    },
    {
      "indent": 18,
      "text": "Table F.1: Residential Gateway Restart",
      "ja": "表F.1：レジデンシャルゲートウェイの再起動"
    },
    {
      "indent": 0,
      "text": " ---------------------------------------------------------------------\n|step#|    usr1    |    rgw1    |     ca     |    rgw2    |    usr2   |\n|=====|============|============|============|============|===========|\n|  1  |            |    rsip -> |            |            |           |\n|     |            |            | <- ack     |            |           |\n|-----|------------|------------|------------|------------|-----------|\n|  2  |            |            | <- auep    |            |           |\n|     |            |     ack -> |            |            |           |\n|-----|------------|------------|------------|------------|-----------|\n|  3+ |            |            | <- rqnt    |            |           |\n|     |            |     ack -> |            |            |           |\n|-----|------------|------------|------------|------------|-----------|\n|  4  |            |            |            | <- rsip    |           |\n|     |            |            |     ack -> |            |           |\n|-----|------------|------------|------------|------------|-----------|\n|  5  |            |            |    auep -> |            |           |\n|     |            |            |            | <- ack     |           |\n|-----|------------|------------|------------|------------|-----------|\n|  6+ |            |            |    rqnt -> |            |           |\n|     |            |            |            | <- ack     |           |\n ---------------------------------------------------------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Step 1 - RestartInProgress (rsip) from rgw1 to ca",
      "ja": "ステップ1  -  rgw1からCAへRestartInProgress（RSIP）"
    },
    {
      "indent": 3,
      "text": "rgw1 uses DNS to determine the domain name of ca and send to the default port of 2727. The command consists of the following:",
      "ja": "rgw1コマンドは次の要素で構成されたCAのドメイン名を決定し、2727のデフォルトのポートに送信するためにDNSを使用しています。"
    },
    {
      "indent": 6,
      "text": "rsip 1 *@rgw1.whatever.net mgcp 1.0 rm: restart",
      "ja": "RSIP 1 *@rgw1.whatever.net MGCP 1.0 RM：リスタート"
    },
    {
      "indent": 3,
      "text": "The \"*\" is used to inform ca that all endpoints of rgw1 are being restarted, and \"restart\" is specified as the restart method. The Call Agent \"ca\" acknowledges the command with an acknowledgement message containing the transaction-id (in this case 1) for the command. It sends the acknowledgement to rgw1 using the same port specified as the source port for the rsip. If none was indicated, it uses the default port of 2727.",
      "ja": "「*」rgw1のすべてのエンドポイントが再起動されているCAに通知するために使用され、「再起動」を再起動方式として指定されています。コール・エージェント「CA」コマンドのために（この場合は1）トランザクションIDを含む確認メッセージを指定して、コマンドを認めています。それはRSIPのための送信元ポートとして指定したのと同じポートを使用してrgw1する確認応答を送信します。何も示されなかった場合、それは2727のデフォルトポートを使用しています。"
    },
    {
      "indent": 6,
      "text": "200 1 ok",
      "ja": "200 1 OK"
    },
    {
      "indent": 3,
      "text": "A response code is mandatory. In this case, \"200\", indicates \"the requested transaction was executed normally\". The response string is optional. In this case, \"ok\" is included as an additional description.",
      "ja": "応答コードは必須です。この場合、「200」、「要求されたトランザクションが正常に実行された」を示しています。応答文字列はオプションです。この場合は、「OK」の追加記述として含まれています。"
    },
    {
      "indent": 3,
      "text": "Step 2 - AuditEndpoint (auep) from ca to rgw1",
      "ja": "ステップ2  -  CAからrgw1にAuditEndpoint（AUEP）"
    },
    {
      "indent": 3,
      "text": "The command consists of the following:",
      "ja": "コマンドの構成は次のとおりです。"
    },
    {
      "indent": 6,
      "text": "auep 153 *@rgw1.whatever.net mgcp 1.0",
      "ja": "AUEP 153 *@rgw1.whatever.net MGCP 1.0"
    },
    {
      "indent": 3,
      "text": "The \"*\" is used to request audit information from rgw1 of all its endpoints. rgw1 acknowledges the command with an acknowledgement message containing the transaction-id (in this case 153) of the command, and it includes a list of its endpoints. In this example, rgw1 has two endpoints, aaln/1 and aaln/2.",
      "ja": "「*」すべてのエンドポイントのrgw1から監査情報を要求するために使用されます。 rgw1コマンドの（この場合は153で）トランザクションIDを含む確認メッセージでコマンドを認識し、それは、そのエンドポイントのリストを含みます。この例では、rgw1は、2つのエンドポイント、AALN / 1及びAALN / 2を有しています。"
    },
    {
      "indent": 6,
      "text": "200 153 ok Z: aaln/1@rgw1.whatever.net Z: aaln/2@rgw1.whatever.net",
      "ja": "aaln/1@rgw1.whatever.netから：aaln/2@rgw1.whatever.net約200 153付"
    },
    {
      "indent": 3,
      "text": "Once it has the list of endpoint ids, ca may send individual AuditEndpoint commands in which the \"*\" is replaced by the id of the given endpoint. As its response, rgw1 would replace the endpoint id list returned in the example with the info requested for the endpoint. This optional message exchange is not shown in this example.",
      "ja": "それはエンドポイントIDのリストを持っていたら、CAは「*」特定のエンドポイントのIDで置換されている個々のAuditEndpointコマンドを送信することができます。その応答として、rgw1は、エンドポイントのために要求された情報との例で返されたエンドポイントIDのリストを置き換えます。この任意のメッセージ交換は、この例には示されていません。"
    },
    {
      "indent": 3,
      "text": "Step 3 - NotificationRequest (rqnt) from ca to each endpoint of rgw1",
      "ja": "ステップ3  -  CAからrgw1の各エンドポイントにNotificationRequest（RQNT）"
    },
    {
      "indent": 3,
      "text": "In this case, ca sends two rqnts, one for aaln/1:",
      "ja": "この場合、CAは2 rqnts、AALN / 1のための1つを送信します。"
    },
    {
      "indent": 6,
      "text": "rqnt 154 aaln/1@rgw1.whatever.net mgcp 1.0 r: l/hd(n) x: 3456789a0",
      "ja": "RQNT 154 aaln/1@rgw1.whatever.net MGCP 1.0 R：L / HD（N）x：3456789a0"
    },
    {
      "indent": 3,
      "text": "and a second for aaln/2:",
      "ja": "そしてAALN / 2秒："
    },
    {
      "indent": 6,
      "text": "rqnt 155 aaln/2@rgw1.whatever.net mgcp 1.0 r: l/hd(n) x: 3456789a1",
      "ja": "RQNT 155 aaln/2@rgw1.whatever.net MGCP 1.0 R：L / HD（N）x：3456789a1"
    },
    {
      "indent": 3,
      "text": "Note that in the requested events parameter line, the event is fully specified as \"l/hd\", i.e., with the package name, in order to avoid any potential ambiguity. This is the recommended behavior. For the sake of clarity, the action, which in this case is to Notify, is explicitly specified by including the \"(n)\". If no action is specified, Notify is assumed as the default regardless of the event. If any other action is desired, it must be stated explicitly.",
      "ja": "潜在的なあいまいさを避けるために、パッケージ名を指定して、すなわち、要求されたイベント・パラメータ・ラインに、イベントが完全に「L / HD」として指定されていることに留意されたいです。これは、推奨動作です。明確にするために、この場合に通知するアクションは、明示的に「（N）」を含むことによって特定されます。アクションが指定されていない場合は、通知に関係なく、イベントのデフォルトとして想定しています。他のアクションが必要な場合は、明示的に指定する必要があります。"
    },
    {
      "indent": 3,
      "text": "The expected response from rgw1 to these requests is an acknowledgement from aaln/1 as follows:",
      "ja": "次のようにこれらの要求にrgw1から期待される応答がAALN / 1からの確認です。"
    },
    {
      "indent": 6,
      "text": "200 154 ok",
      "ja": "200 154 OK"
    },
    {
      "indent": 3,
      "text": "and from aaln/2:",
      "ja": "そしてAALN / 2から："
    },
    {
      "indent": 6,
      "text": "200 155 ok",
      "ja": "200 155 OK"
    },
    {
      "indent": 3,
      "text": "Step 4 RestartInProgress (rsip) from rgw2 to ca",
      "ja": "CAにrgw2からステップ4 RestartInProgress（RSIP）"
    },
    {
      "indent": 6,
      "text": "rsip 0 *@rgw2.whatever.net mgcp 1.0 rm: restart",
      "ja": "RSIP 0 *@rgw2.whatever.net MGCP 1.0 RM：リスタート"
    },
    {
      "indent": 3,
      "text": "followed by the acknowledgement from ca:",
      "ja": "CAからの確認が続きます。"
    },
    {
      "indent": 6,
      "text": "200 0 ok",
      "ja": "200 0 OK"
    },
    {
      "indent": 3,
      "text": "Step 5 - AuditEndpoint (auep) from ca to rgw2",
      "ja": "ステップ5  -  CAからrgw2にAuditEndpoint（AUEP）"
    },
    {
      "indent": 6,
      "text": "auep 156 *@rgw2.whatever.net mgcp 1.0",
      "ja": "AUEP 156 *@rgw2.whatever.net MGCP 1.0"
    },
    {
      "indent": 3,
      "text": "followed by an acknowledgement from rgw2:",
      "ja": "rgw2からの確認応答が続きます。"
    },
    {
      "indent": 6,
      "text": "200 156 ok z: aaln/1@rgw2.whatever.net z: aaln/2@rgw2.whatever.net",
      "ja": "およそ156の200：aaln/1@rgw2.whatever.netから：aaln/2@rgw2.whatever.net"
    },
    {
      "indent": 3,
      "text": "Step 6 - NotificationRequest (rqnt) from ca to each endpoint of rgw2",
      "ja": "ステップ6  -  CAからrgw2の各エンドポイントにNotificationRequest（RQNT）"
    },
    {
      "indent": 6,
      "text": "rqnt 157 aaln/1@rgw2.whatever.net mgcp 1.0 r: l/hd(n) x: 3456789a2",
      "ja": "RQNT 157 aaln/1@rgw2.whatever.net MGCP 1.0 R：L / HD（N）x：3456789a2"
    },
    {
      "indent": 3,
      "text": "followed by:",
      "ja": "に続く："
    },
    {
      "indent": 6,
      "text": "rqnt 158 aaln/2@rgw2.whatever.net mgcp 1.0 r: l/hd(n) x: 3456789a3",
      "ja": "RQNT 158 aaln/2@rgw2.whatever.net MGCP 1.0 R：L / HD（N）x：3456789a3"
    },
    {
      "indent": 3,
      "text": "with rgw2 acknowledging for aaln/1:",
      "ja": "AALN / 1のために認めrgw2と："
    },
    {
      "indent": 6,
      "text": "200 157 ok",
      "ja": "200 157 OK"
    },
    {
      "indent": 3,
      "text": "and for aaln/2:",
      "ja": "そしてAALN / 2用："
    },
    {
      "indent": 6,
      "text": "200 158 ok",
      "ja": "200 158 OK"
    },
    {
      "indent": 0,
      "text": "G.1.2 Call Agent Restart",
      "ja": "G.1.2コールエージェントの再起動"
    },
    {
      "indent": 3,
      "text": "The following table shows the message sequence which occurs when a call agent (ca) restarts. How it determines the address information of the gateways, in this case rgw1 and rgw2, is not covered in this document. For interoperability, it is RECOMMENDED to provide the ability to configure the call agent to send AUEP (*) to specific addresses and ports.",
      "ja": "次の表は、コールエージェント（CA）が再起動したときに発生するメッセージシーケンスを示します。それはゲートウェイのアドレス情報をどのように決定するか、この場合のrgw1とrgw2に、この文書でカバーされていません。相互運用性のためには、特定のアドレスとポートにAUEP（*）を送信するコールエージェントを設定する機能を提供することをお勧めします。"
    },
    {
      "indent": 18,
      "text": "Table F.2: Residential Gateway Restart",
      "ja": "表F.2：レジデンシャルゲートウェイの再起動"
    },
    {
      "indent": 0,
      "text": " ---------------------------------------------------------------------\n| # |     usr1    |    rgw1    |     ca     |    rgw2    |     usr2   |\n|===|=============|============|============|============|============|\n| 1 |             |            | <- auep    |            |            |\n|   |             |     ack -> |            |            |            |\n|---|-------------|------------|------------|------------|------------|\n| 2+|             |            | <- rqnt    |            |            |\n|   |             |     ack -> |            |            |            |\n|---|-------------|------------|------------|------------|------------|\n| 3 |             |            |    auep -> |            |            |\n|   |             |            |            | <- ack     |            |\n|---|-------------|------------|------------|------------|------------|\n| 4+|             |            |    rqnt -> |            |            |\n|   |             |            |            | <- ack     |            |\n ---------------------------------------------------------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Step 1 - AuditEndpoint (auep) from ca to rgw1",
      "ja": "ステップ1  -  CAからrgw1にAuditEndpoint（AUEP）"
    },
    {
      "indent": 3,
      "text": "The command consists of the following:",
      "ja": "コマンドの構成は次のとおりです。"
    },
    {
      "indent": 6,
      "text": "auep 0 *@rgw1.whatever.net mgcp 1.0",
      "ja": "AUEP 0 *@rgw1.whatever.net MGCP 1.0"
    },
    {
      "indent": 3,
      "text": "The \"*\" is used to request audit information from rgw1 of all its endpoints. rgw1 acknowledges the command with an acknowledgement message containing the transaction id (in this case 0) of the command, and it includes a list of its endpoints. In this example, rgw1 has two endpoints, aaln/1 and aaln/2.",
      "ja": "「*」すべてのエンドポイントのrgw1から監査情報を要求するために使用されます。 rgw1コマンドの（この場合は0に）トランザクションIDを含む確認メッセージでコマンドを認識し、それは、そのエンドポイントのリストを含みます。この例では、rgw1は、2つのエンドポイント、AALN / 1及びAALN / 2を有しています。"
    },
    {
      "indent": 6,
      "text": "200 0 ok z: aaln/1@rgw1.whatever.net z: aaln/2@rgw1.whatever.net",
      "ja": "約200の0：aaln/1@rgw1.whatever.netと：aaln/2@rgw1.whatever.net"
    },
    {
      "indent": 3,
      "text": "Once it has the list of endpoint ids, ca may send individual AuditEndpoint commands in which the \"*\" is replaced by the id of the given endpoint. As its response, rgw1 would replace the endpoint id list returned in the example with the info requested for the endpoint. This optional message exchange is not shown in this example.",
      "ja": "それはエンドポイントIDのリストを持っていたら、CAは「*」特定のエンドポイントのIDで置換されている個々のAuditEndpointコマンドを送信することができます。その応答として、rgw1は、エンドポイントのために要求された情報との例で返されたエンドポイントIDのリストを置き換えます。この任意のメッセージ交換は、この例には示されていません。"
    },
    {
      "indent": 3,
      "text": "Step 2 - NotificationRequest (rqnt) off-hook from ca to rgw1",
      "ja": "ステップ2  -  NotificationRequest（RQNT）オフフックCAからrgw1に"
    },
    {
      "indent": 3,
      "text": "In this case, ca sends two rqnts, one for aaln/1:",
      "ja": "この場合、CAは2 rqnts、AALN / 1のための1つを送信します。"
    },
    {
      "indent": 6,
      "text": "rqnt 1 aaln/1@rgw1.whatever.net mgcp 1.0 r: l/hd(n) x: 234567890",
      "ja": "RQNT 1 aaln/1@rgw1.whatever.net MGCP 1.0 R：L / HD（N）x：234567890"
    },
    {
      "indent": 3,
      "text": "and a second for aaln/2:",
      "ja": "そしてAALN / 2秒："
    },
    {
      "indent": 6,
      "text": "rqnt 2 aaln/2@rgw1.whatever.net mgcp 1.0 r: l/hd(n) x: 234567891",
      "ja": "RQNT 2 aaln/2@rgw1.whatever.net MGCP 1.0 R：L / HD（N）x：234567891"
    },
    {
      "indent": 3,
      "text": "The expected response from rgw1 to these requests is an acknowledgement from aaln/1 as follows:",
      "ja": "次のようにこれらの要求にrgw1から期待される応答がAALN / 1からの確認です。"
    },
    {
      "indent": 6,
      "text": "200 1 ok",
      "ja": "200 1 OK"
    },
    {
      "indent": 3,
      "text": "and from aaln/2:",
      "ja": "そしてAALN / 2から："
    },
    {
      "indent": 6,
      "text": "200 2 ok",
      "ja": "200 2 OK"
    },
    {
      "indent": 3,
      "text": "Step 3 - AuditEndpoint (auep) from ca to rgw2",
      "ja": "ステップ3  -  CAからrgw2にAuditEndpoint（AUEP）"
    },
    {
      "indent": 6,
      "text": "auep 3 *@rgw2.whatever.net mgcp 1.0",
      "ja": "AUEP 3 *@rgw2.whatever.net MGCP 1.0"
    },
    {
      "indent": 3,
      "text": "followed by an acknowledgement from rgw2:",
      "ja": "rgw2からの確認応答が続きます。"
    },
    {
      "indent": 6,
      "text": "200 3 ok z: aaln/1@rgw2.whatever.net z: aaln/2@rgw2.whatever.net",
      "ja": "約3の200：aaln/2@rgw2.whatever.net：とaaln/1@rgw2.whatever.net"
    },
    {
      "indent": 3,
      "text": "Step 4 - NotificationRequest (rqnt) from ca to each endpoint of rgw2",
      "ja": "ステップ4  -  CAからrgw2の各エンドポイントにNotificationRequest（RQNT）"
    },
    {
      "indent": 6,
      "text": "rqnt 4 aaln/1@rgw2.whatever.net mgcp 1.0 r: l/hd(n) x: 234567892",
      "ja": "RQNT 4 aaln/1@rgw2.whatever.net MGCP 1.0 R：L / HD（N）x：234567892"
    },
    {
      "indent": 3,
      "text": "followed by:",
      "ja": "に続く："
    },
    {
      "indent": 6,
      "text": "rqnt 5 aaln/2@rgw2.whatever.net mgcp 1.0 r: l/hd(n) x: 234567893",
      "ja": "RQNT 5 aaln/2@rgw2.whatever.net MGCP 1.0 R：L / HD（N）x：234567893"
    },
    {
      "indent": 3,
      "text": "with rgw2 acknowledging for aaln/1:",
      "ja": "AALN / 1のために認めrgw2と："
    },
    {
      "indent": 6,
      "text": "200 4 ok",
      "ja": "200 4 OK"
    },
    {
      "indent": 3,
      "text": "and for aaln/2:",
      "ja": "そしてAALN / 2用："
    },
    {
      "indent": 0,
      "text": " 200 5 ok G.2 Connection Creation",
      "ja": "200 5 OK G.2接続の作成"
    },
    {
      "indent": 0,
      "text": "G.2.1 Residential Gateway to Residential Gateway",
      "ja": "レジデンシャルゲートウェイへG.2.1レジデンシャルゲートウェイ"
    },
    {
      "indent": 3,
      "text": "The following table shows the message sequence which occurs when a user (usr1) makes a call through a residential gateway (rgw1) to a user served by another residential gateway (rgw2). This example illustrates the communication between the residential gateways and the call agent (ca) only. The local name of the endpoints in this example is aaln/1 for both gateways, and references within the description of the steps to rgw1 and rgw2 can be assumed to refer to aaln/1 of rgw1 and aaln/1 of rgw2. Note that this is only an example and is not the only legal call scenario.",
      "ja": "以下の表は、ユーザ（USR1）は、別の住居用ゲートウェイ（rgw2）によってサービスされるユーザの住居用ゲートウェイ（rgw1）を介して呼び出しを行うときに発生するメッセージシーケンスを示します。この例では、住宅用ゲートウェイおよびコールエージェント（CA）との間の通信を示します。この例では、エンドポイントのローカル名は、両方のゲートウェイのAALN / 1であり、そしてrgw1とrgw2する手順の説明内の参照がrgw1とAALN / rgw2の1/1 AALN参照すると仮定することができます。これは一例であり、唯一の法的なコールシナリオではないことに注意してください。"
    },
    {
      "indent": 12,
      "text": "Table F.3: Residential Gateway Connection Creation",
      "ja": "表F.3：レジデンシャルゲートウェイ接続の作成"
    },
    {
      "indent": 0,
      "text": " ---------------------------------------------------------------------\n| # |     usr1    |    rgw1    |     ca     |    rgw2    |     usr2   |\n|===|=============|============|============|============|============|\n| 1 |  offhook -> |    ntfy -> |            |            |            |\n|   |             |            | <- ack     |            |            |\n|---|-------------|------------|------------|------------|------------|\n| 2 | <- dialtone |            | <- rqnt    |            |            |\n|   |             |     ack -> |            |            |            |\n|---|-------------|------------|------------|------------|------------|\n| 3 |   digits -> |    ntfy -> |            |            |            |\n|   |             |            | <- ack     |            |            |\n|---|-------------|------------|------------|------------|------------|\n| 4 |             |            | <- rqnt    |            |            |\n|   |             |     ack -> |            |            |            |\n|---|-------------|------------|------------|------------|------------|\n| 5 | <- recvonly |            | <- crcx    |            |            |\n|   |             |     ack -> |            |            |            |\n|---|-------------|------------|------------|------------|------------|\n| 6 |             |            |    crcx -> |            | sendrcv -> |\n|   |             |            |            | <- ack     |            |\n|---|-------------|------------|------------|------------|------------|\n| 7 | <- recvonly |            | <- mdcx    |            |            |\n|   |             |     ack -> |            |            |            |\n|---|-------------|------------|------------|------------|------------|\n| 8 | <- ringback |            | <- rqnt    |            |            |\n|   |             |     ack -> |            |            |            |\n|---|-------------|------------|------------|------------|------------|\n| 9 |             |            |    rqnt -> |            | ringing -> |\n|   |             |            |            | <- ack     |            |\n|---|-------------|------------|------------|------------|------------|\n|10 |             |            |            | <- ntfy    | <- offhook |\n|   |             |            |     ack -> |            |            |\n|---|-------------|------------|------------|------------|------------|\n|11 |             |            |    rqnt -> |            |            |\n|   |             |            |            | <- ack     |            |\n|---|-------------|------------|------------|------------|------------|\n|12 |             |            | <- rqnt    |            |            |\n|   |             |     ack -> |            |            |            |\n|---|-------------|------------|------------|------------|------------|\n|13 | <- sendrcv  |            | <- mdcx    |            |            |\n|   |             |     ack -> |            |            |            |\n ---------------------------------------------------------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Step 1 - Notify (ntfy) offhook from rgw1 to ca",
      "ja": "ステップ1  -  CAにrgw1から（NTFY）オフフックに通知"
    },
    {
      "indent": 3,
      "text": "This ntfy is the result of usr1 going offhook and assumes ca had previously sent an rqnt with RequestId \"445678944\" to rgw1 requesting notification in the event of an offhook:",
      "ja": "このNTFYはUSR1がオフフックに行くの結果であり、CAが以前にオフフックのイベントに通知を要求rgw1する「445678944」RequestIdとRQNTを送っていた前提としています。"
    },
    {
      "indent": 6,
      "text": "ntfy 12 aaln/1@rgw1.whatever.net mgcp 1.0 o: l/hd x: 445678944",
      "ja": "NTFY 12 aaln/1@rgw1.whatever.net MGCP 1.0 O：L / HD X：445678944"
    },
    {
      "indent": 3,
      "text": "Acknowledgement from ca:",
      "ja": "CAから謝辞："
    },
    {
      "indent": 6,
      "text": "200 12 ok",
      "ja": "200 12 OK"
    },
    {
      "indent": 3,
      "text": "Step 2 - Request Notification (rqnt) for digits from ca to rgw1",
      "ja": "ステップ2  - 要求通知（RQNT）CAからrgw1桁用"
    },
    {
      "indent": 3,
      "text": "Request rgw1 to notify if on-hook and collect digits according to the digit map, and to provide dialtone:",
      "ja": "要求rgw1フックオンおよびディジットマップに従ってディジットを収集する場合に通知し、ダイヤルトーンを提供します。"
    },
    {
      "indent": 6,
      "text": "rqnt 1057 aaln/1@rgw1.whatever.net mgcp 1.0 r: l/hu(n), d/[0-9#*T](d) s: l/dl x: 445678945 d: 5xxx",
      "ja": "RQNT 1057 aaln/1@rgw1.whatever.net MGCP 1.0 R：L / HU（N）、D / [0-9＃1 *のT]（D）S：L / DL X：445678945 D：5XXX"
    },
    {
      "indent": 3,
      "text": "Acknowledgement from rgw1:",
      "ja": "rgw1から謝辞："
    },
    {
      "indent": 6,
      "text": "200 1057 ok",
      "ja": "200 1057 OK"
    },
    {
      "indent": 3,
      "text": "Step 3 - Notify (ntfy) digits from rgw1 to ca",
      "ja": "ステップ3  - 通知（NTFY）桁rgw1からCAへ"
    },
    {
      "indent": 6,
      "text": "ntfy 13 aaln/1@rgw1.whatever.net mgcp 1.0 o: d/5, d/0, d/0, d/1 x: 445678945",
      "ja": "NTFY 13 aaln/1@rgw1.whatever.net MGCP 1.0 O：D / 5、D / 0、D / 0、D / X 1：445678945"
    },
    {
      "indent": 3,
      "text": "Acknowledgement from ca:",
      "ja": "CAから謝辞："
    },
    {
      "indent": 6,
      "text": "200 13 ok",
      "ja": "200 13 OK"
    },
    {
      "indent": 3,
      "text": "Step 4 - Request Notification (rqnt) from ca to rgw1",
      "ja": "ステップ4  -  rgw1へCAから要求通知（RQNT）"
    },
    {
      "indent": 3,
      "text": "Request rgw1 to notify in the event of an on-hook transition:",
      "ja": "要求がオンフック遷移の場合に通知するrgw1。"
    },
    {
      "indent": 6,
      "text": "rqnt 1058 aaln/1@rgw1.whatever.net mgcp 1.0 r: l/hu(n) x: 445678946",
      "ja": "RQNT 1058 aaln/1@rgw1.whatever.net MGCP 1.0 R：L / HU（N）x：445678946"
    },
    {
      "indent": 3,
      "text": "Acknowledgement from rgw1:",
      "ja": "rgw1から謝辞："
    },
    {
      "indent": 6,
      "text": "200 1058 ok",
      "ja": "200 1058 OK"
    },
    {
      "indent": 3,
      "text": "Step 5 - Create Connection (crcx) from ca to rgw1",
      "ja": "ステップ5  -  CAからrgw1への接続（CRCX）を作成します"
    },
    {
      "indent": 3,
      "text": "Request a new connection on rgw1 with the specified local connection options, including 20 msec as the packetization period, G.711 mu-law as the codec, and receive only as the mode:",
      "ja": "コーデックとして、新たなパケット化期間として20ミリ秒を含む指定されたローカル接続オプション、とrgw1の接続、とG.711 mu-lawを要求し、そしてモードとしてのみ受信します。"
    },
    {
      "indent": 6,
      "text": "crcx 1059 aaln/1@rgw1.whatever.net mgcp 1.0 c: 9876543210abcdef l: p:20, a:PCMU m: recvonly",
      "ja": "CRCX 1059 aaln/1@rgw1.whatever.net MGCP 1.0 C：9876543210abcdef 1：P：20：PCMUのM：がrecvonly"
    },
    {
      "indent": 3,
      "text": "Acknowledgement from rgw1 that a new connection, \"456789fedcba5\", has been created, followed by a blank line and then the SDP parameters:",
      "ja": "rgw1から謝辞新しい接続、「456789fedcba5」それは、空白行とその後、SDPパラメータに続いて、作成されています："
    },
    {
      "indent": 6,
      "text": "200 1059 ok i: 456789fedcba5",
      "ja": "200 1059 [OK]を私：456789fedcba5"
    },
    {
      "indent": 6,
      "text": "v=0 o=- 23456789 98765432 IN IP4 192.168.5.7 s=- c=IN IP4 192.168.5.7 t=0 0 m=audio 6058 RTP/AVP 0",
      "ja": "C = IN IP4 192.168.5.7 T = 0、M =オーディオ6058 RTP / AVP 0  -  V = 0 0 =  -  IP4 192.168.5.7 S = IN 23456789 98765432"
    },
    {
      "indent": 3,
      "text": "Step 6 - Create Connection (crcx) from ca to rgw2",
      "ja": "ステップ6  -  CAからrgw2への接続（CRCX）を作成します"
    },
    {
      "indent": 3,
      "text": "Request a new connection on rgw2. The request includes the session description returned by rgw1 such that a two way connection can be initiated:",
      "ja": "rgw2に新しい接続を要求します。リクエストは、双方向接続を開始することができるようrgw1によって返されたセッション記述を含みます。"
    },
    {
      "indent": 6,
      "text": "crcx 2052 aaln/1@rgw2.whatever.net mgcp 1.0 c: 9876543210abcdef l: p:20, a:PCMU m: sendrecv",
      "ja": "CRCX 2052 aaln/1@rgw2.whatever.net MGCP 1.0 C：9876543210abcdef 1：P：20：PCMUのM：SENDRECV"
    },
    {
      "indent": 6,
      "text": "v=0 o=- 23456789 98765432 IN IP4 192.168.5.7 s=- c=IN IP4 192.168.5.7 t=0 0 m=audio 6058 RTP/AVP 0",
      "ja": "C = IN IP4 192.168.5.7 T = 0、M =オーディオ6058 RTP / AVP 0  -  V = 0 0 =  -  IP4 192.168.5.7 S = IN 23456789 98765432"
    },
    {
      "indent": 3,
      "text": "Acknowledgement from rgw2 that a new connection, \"67890af54c9\", has been created; followed by a blank line and then the SDP parameters:",
      "ja": "新しい接続、「67890af54c9」は、作成されたrgw2からの確認。空白行とその後、SDPパラメータが続きます。"
    },
    {
      "indent": 6,
      "text": "200 2052 ok i: 67890af54c9",
      "ja": "200 2052 [OK]を私：67890af54c9"
    },
    {
      "indent": 6,
      "text": "v=0 o=- 23456889 98865432 IN IP4 192.168.5.8 s=- c=IN IP4 192.168.5.8 t=0 0 m=audio 6166 RTP/AVP 0",
      "ja": "C = IN IP4 192.168.5.8 T = 0、M =オーディオ6166 RTP / AVP 0  -  V = 0 0 =  -  IP4 192.168.5.8 S = IN 23456889 98865432"
    },
    {
      "indent": 3,
      "text": "Step 7 - Modify Connection (mdcx) from ca to rgw1",
      "ja": "ステップ7  -  CAからrgw1への接続（MDCX）を変更"
    },
    {
      "indent": 3,
      "text": "Request rgw1 to modify the existing connection, \"456789fedcba5\", to use the session description returned by rgw2 establishing a half duplex connection which, though not used in this example, could be used to provide usr1 with in band ringback tone, announcements, etc:",
      "ja": "この例で使用されていないが、半二重接続を確立rgw2によって返されたセッション記述を使用するために、既存の接続、「456789fedcba5」を変更するための要求rgw1は、などのバンドリングバックトーン、アナウンスメント、中にUSR1提供するために使用することができます。"
    },
    {
      "indent": 6,
      "text": "mdcx 1060 aaln/1@rgw1.whatever.net mgcp 1.0 c: 9876543210abcdef i: 456789fedcba5 l: p:20, a:PCMU M: recvonly",
      "ja": "MDCX 1060 aaln/1@rgw1.whatever.net MGCP 1.0 C：9876543210abcdef I：456789fedcba5 L：P：20：PCMU M：がrecvonly"
    },
    {
      "indent": 6,
      "text": "v=0 o=- 23456889 98865432 IN IP4 192.168.5.8 s=- c=IN IP4 192.168.5.8 t=0 0 m=audio 6166 RTP/AVP 0",
      "ja": "C = IN IP4 192.168.5.8 T = 0、M =オーディオ6166 RTP / AVP 0  -  V = 0 0 =  -  IP4 192.168.5.8 S = IN 23456889 98865432"
    },
    {
      "indent": 3,
      "text": "Acknowledgement from rgw1:",
      "ja": "rgw1から謝辞："
    },
    {
      "indent": 6,
      "text": "200 1060 ok",
      "ja": "200 1060 OK"
    },
    {
      "indent": 3,
      "text": "Step 8 - Request Notification (rqnt) from ca for rgw1 to provide ringback",
      "ja": "リングバックを提供するために、rgw1のCAからの要求通知（RQNT） - ステップ8"
    },
    {
      "indent": 3,
      "text": "Request rgw1 to notify in the event of an on-hook transition, and also to provide ringback tone:",
      "ja": "要求がオンフック遷移の場合に通知するように、また、リングバックトーンを提供するrgw1。"
    },
    {
      "indent": 6,
      "text": "rqnt 1061 aaln/1@rgw1.whatever.net mgcp 1.0 r: l/hu(n) s: g/rt x: 445678947",
      "ja": "RQNT 1061 aaln/1@rgw1.whatever.net MGCP 1.0 R：L / HU（N）S：G / RT X：445678947"
    },
    {
      "indent": 3,
      "text": "Acknowledgement from rgw1:",
      "ja": "rgw1から謝辞："
    },
    {
      "indent": 6,
      "text": "200 1061 ok",
      "ja": "200 1061 OK"
    },
    {
      "indent": 3,
      "text": "Step 9 - Request Notification (rqnt) from ca to rgw2 to provide ringing",
      "ja": "ステップ9  - リンギングを提供するために、rgw2するCAからの通知（RQNT）を要求"
    },
    {
      "indent": 3,
      "text": "Request rgw2 to continue to look for offhook and provide ringing:",
      "ja": "リクエストrgw2はオフフックを探し、リンギングを提供し続けること："
    },
    {
      "indent": 6,
      "text": "rqnt 2053 aaln/1@rgw2.whatever.net mgcp 1.0 r: l/hd(n) s: l/rg x: 445678948",
      "ja": "RQNT 2053 aaln/1@rgw2.whatever.net MGCP 1.0 R：L / HD（N）S：L / RG X：445678948"
    },
    {
      "indent": 3,
      "text": "Acknowledgement from rgw2:",
      "ja": "rgw2から謝辞："
    },
    {
      "indent": 6,
      "text": "200 2053 ok",
      "ja": "200 2053 OK"
    },
    {
      "indent": 3,
      "text": "Step 10 - Notify (ntfy) offhook from rgw2 to ca",
      "ja": "ステップ10  -  CAにrgw2から（NTFY）オフフックに通知"
    },
    {
      "indent": 6,
      "text": "ntfy 27 aaln/1@rgw2.whatever.net mgcp 1.0 o: l/hd x: 445678948",
      "ja": "NTFY 27 aaln/1@rgw2.whatever.net MGCP 1.0 O：L / HD X：445678948"
    },
    {
      "indent": 3,
      "text": "Acknowledgement from ca:",
      "ja": "CAから謝辞："
    },
    {
      "indent": 6,
      "text": "200 27 ok",
      "ja": "200 27 OK"
    },
    {
      "indent": 3,
      "text": "Step 11 - Request Notification (rqnt) of on-hook from ca to rgw2",
      "ja": "ステップ11  -  rgw2へCAから要求通知（RQNT）オンフックの"
    },
    {
      "indent": 6,
      "text": "rqnt 2054 aaln/1@rgw2.whatever.net mgcp 1.0 r: l/hu(n) x: 445678949",
      "ja": "RQNT 2054 aaln/1@rgw2.whatever.net MGCP 1.0 R：L / HU（N）x：445678949"
    },
    {
      "indent": 3,
      "text": "Acknowledgement from rgw2:",
      "ja": "rgw2から謝辞："
    },
    {
      "indent": 6,
      "text": "200 2054 ok",
      "ja": "200 2054 OK"
    },
    {
      "indent": 3,
      "text": "Step 12 - Request Notification (rqnt) of on-hook from ca to rgw1",
      "ja": "ステップ12  -  rgw1へCAから要求通知（RQNT）オンフックの"
    },
    {
      "indent": 6,
      "text": "rqnt 1062 aaln/1@rgw1.whatever.net mgcp 1.0 r: l/hu(n) x: 445678950",
      "ja": "RQNT 1062 aaln/1@rgw1.whatever.net MGCP 1.0 R：L / HU（N）x：445678950"
    },
    {
      "indent": 3,
      "text": "Acknowledgement from rgw1:",
      "ja": "rgw1から謝辞："
    },
    {
      "indent": 6,
      "text": "200 1062 ok",
      "ja": "200 1062 OK"
    },
    {
      "indent": 3,
      "text": "Step 13 - Modify Connection (mdcx) from ca to rgw1",
      "ja": "ステップ13  -  CAからrgw1への接続（MDCX）を変更"
    },
    {
      "indent": 3,
      "text": "Request rgw1 to modify the existing connection, \"456789fedcba5\", to sendrecv such that a full duplex connection is initiated:",
      "ja": "リクエストrgw1は、全二重接続が開始されるようにSENDRECVし、「456789fedcba5」、既存の接続を変更するには："
    },
    {
      "indent": 6,
      "text": "mdcx 1063 aaln/1@rgw1.whatever.net mgcp 1.0 c: 9876543210abcdef i: 456789fedcba5 m: sendrecv",
      "ja": "MDCX 1063 aaln/1@rgw1.whatever.net MGCP 1.0 C：9876543210abcdef I：456789fedcba5メートル：SENDRECV"
    },
    {
      "indent": 3,
      "text": "Acknowledgement from rgw1:",
      "ja": "rgw1から謝辞："
    },
    {
      "indent": 6,
      "text": "200 1063 ok",
      "ja": "200 1063 OK"
    },
    {
      "indent": 0,
      "text": "G.3 Connection Deletion",
      "ja": "G.3接続の削除"
    },
    {
      "indent": 0,
      "text": "G.3.1 Residential Gateway to Residential Gateway",
      "ja": "レジデンシャルゲートウェイへG.3.1レジデンシャルゲートウェイ"
    },
    {
      "indent": 3,
      "text": "The following table shows the message sequence which occurs when a user (usr2) initiates the deletion of an existing connection on a residential gateway (rgw2) with a user served by another residential gateway (rgw1). This example illustrates the communication between the residential gateways and the call agent (ca) only. The local name of the endpoints in this example is aaln/1 for both gateways, and references within the description of the steps to rgw1 and rgw2 can be assumed to refer to aaln/1 of rgw1 and aaln/1 of rgw2.",
      "ja": "以下の表は、ユーザ（USR2）は、別の住居用ゲートウェイ（rgw1）によってサービスユーザとレジデンシャルゲートウェイ（rgw2）上の既存の接続の削除を開始するときに発生するメッセージシーケンスを示します。この例では、住宅用ゲートウェイおよびコールエージェント（CA）との間の通信を示します。この例では、エンドポイントのローカル名は、両方のゲートウェイのAALN / 1であり、そしてrgw1とrgw2する手順の説明内の参照がrgw1とAALN / rgw2の1/1 AALN参照すると仮定することができます。"
    },
    {
      "indent": 12,
      "text": "Table F.4: Residential Gateway Connection Deletion",
      "ja": "表F.4：レジデンシャルゲートウェイ接続の削除"
    },
    {
      "indent": 0,
      "text": " ---------------------------------------------------------------------\n| # |     usr1    |    rgw1    |     ca     |    rgw2    |     usr2   |\n|===|=============|============|============|============|============|\n| 1 |             |            |            | <- ntfy    | <- on-hook |\n|   |             |            |     ack -> |            |            |\n|---|-------------|------------|------------|------------|------------|\n| 2 |             |            |    dlcx -> |            |            |\n|   |             |            |            | <- ack     |            |\n|---|-------------|------------|------------|------------|------------|\n| 3 |             |            | <- dlcx    |            |            |\n|   |             |     ack -> |            |            |            |\n|---|-------------|------------|------------|------------|------------|\n| 4 |             |            |    rqnt -> |            |            |\n|   |             |            |            | <- ack     |            |\n|---|-------------|------------|------------|------------|------------|\n| 5 |  on-hook -> |    ntfy -> |            |            |            |\n|   |             |            | <- ack     |            |            |\n|---|-------------|------------|------------|------------|------------|\n| 6 |             |            | <- rqnt    |            |            |\n|   |             |     ack -> |            |            |            |\n ---------------------------------------------------------------------",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Step 1 - Notify (ntfy) offhook from rgw1 to ca",
      "ja": "ステップ1  -  CAにrgw1から（NTFY）オフフックに通知"
    },
    {
      "indent": 3,
      "text": "This ntfy is the result of usr2 going on-hook and assumes that ca had previously sent an rqnt to rgw2 requesting notification in the event of an on-hook (see end of Connection Creation sequence):",
      "ja": "このNTFYはオンフックにUSR2の結果であり、CAが以前にオンフック（接続の作成シーケンスの最後を参照）の際に通知を要求rgw2するRQNTを送っていたことを前提としています。"
    },
    {
      "indent": 6,
      "text": "ntfy 28 aaln/1@rgw2.whatever.net mgcp 1.0 o: l/hu x: 445678949",
      "ja": "NTFY 28 aaln/1@rgw2.whatever.net MGCP 1.0 O：L / HU X：445678949"
    },
    {
      "indent": 3,
      "text": "Acknowledgement from ca:",
      "ja": "CAから謝辞："
    },
    {
      "indent": 6,
      "text": "200 28 ok",
      "ja": "200 28 OK"
    },
    {
      "indent": 3,
      "text": "Step 2 - Delete Connection (dlcx) from ca to rgw2",
      "ja": "ステップ2  -  CAからrgw2への接続（DLCX）を削除"
    },
    {
      "indent": 3,
      "text": "Requests rgw2 to delete the connection \"67890af54c9\":",
      "ja": "要求は、接続「67890af54c9」を削除しrgw2："
    },
    {
      "indent": 6,
      "text": "dlcx 2055 aaln/1@rgw1.whatever.net mgcp 1.0 c: 9876543210abcdef i: 67890af54c9",
      "ja": "DLCX 2055 aaln/1@rgw1.whatever.net MGCP 1.0 C：9876543210abcdef I：67890af54c9"
    },
    {
      "indent": 3,
      "text": "Acknowledgement from rgw2. Note the response code of \"250\" meaning \"the connection was deleted\":",
      "ja": "rgw2からの謝辞。 「接続が削除された」という意味の「250」の応答コードに注意してください。"
    },
    {
      "indent": 6,
      "text": "250 2055 ok",
      "ja": "250 2055 OK"
    },
    {
      "indent": 3,
      "text": "Step 3 - Delete Connection (dlcx) from ca to rgw1",
      "ja": "ステップ3  -  CAからrgw1への接続（DLCX）を削除します。"
    },
    {
      "indent": 3,
      "text": "Requests rgw1 to delete the connection \"456789fedcba5\":",
      "ja": "要求は、接続「456789fedcba5」を削除しrgw1："
    },
    {
      "indent": 6,
      "text": "dlcx 1064 aaln/1@rgw1.whatever.net mgcp 1.0 c: 9876543210abcdef i: 456789fedcba5",
      "ja": "DLCX 1064 aaln/1@rgw1.whatever.net MGCP 1.0 C：9876543210abcdef I：456789fedcba5"
    },
    {
      "indent": 3,
      "text": "Acknowledgement from rgw1:",
      "ja": "rgw1から謝辞："
    },
    {
      "indent": 6,
      "text": "250 1064 ok",
      "ja": "250 1064 OK"
    },
    {
      "indent": 3,
      "text": "Step 4 - NotificationRequest (rqnt) from ca to rgw2",
      "ja": "ステップ4  -  CAからrgw2にNotificationRequest（RQNT）"
    },
    {
      "indent": 3,
      "text": "Requests rgw2 to notify ca in the event of an offhook transition:",
      "ja": "リクエストは、オフフックの移行の際にCAに通知するrgw2："
    },
    {
      "indent": 6,
      "text": "rqnt 2056 aaln/1@rgw2.whatever.net mgcp 1.0 r: l/hd(n) x: 445678951",
      "ja": "RQNT 2056 aaln/1@rgw2.whatever.net MGCP 1.0 R：L / HD（N）x：445678951"
    },
    {
      "indent": 3,
      "text": "Acknowledgement from rgw2:",
      "ja": "rgw2から謝辞："
    },
    {
      "indent": 6,
      "text": "200 2056 ok",
      "ja": "200 2056 OK"
    },
    {
      "indent": 3,
      "text": "Step 5 - Notify (ntfy) on-hook from rgw1 to ca",
      "ja": "ステップ5  - （NTFY）通知オンフックCAにrgw1から"
    },
    {
      "indent": 3,
      "text": "Notify ca that usr1 at rgw1 went back on-hook:",
      "ja": "オンフックに戻ったrgw1でUSR1 CAに通知："
    },
    {
      "indent": 6,
      "text": "ntfy 15 aaln/1@rgw1.whatever.net mgcp 1.0 o: l/hu x: 445678950",
      "ja": "NTFY 15 aaln/1@rgw1.whatever.net MGCP 1.0 O：L / HU X：445678950"
    },
    {
      "indent": 3,
      "text": "Acknowledgement from ca:",
      "ja": "CAから謝辞："
    },
    {
      "indent": 6,
      "text": "200 15 ok",
      "ja": "200 15 OK"
    },
    {
      "indent": 3,
      "text": "Step 6 - NotificationRequest (rqnt) offhook from ca to rgw1",
      "ja": "ステップ6  - 通知要求（RQNT）CAからrgw1にオフフック"
    },
    {
      "indent": 3,
      "text": "Requests rgw1 to notify ca in the event of an offhook transition:",
      "ja": "リクエストは、オフフックの移行の際にCAに通知するrgw1："
    },
    {
      "indent": 6,
      "text": "rqnt 1065 aaln/1@rgw1.whatever.net mgcp 1.0 r: l/hd(n) x: 445678952",
      "ja": "RQNT 1065 aaln/1@rgw1.whatever.net MGCP 1.0 R：L / HD（N）x：445678952"
    },
    {
      "indent": 3,
      "text": "Acknowledgement from rgw1:",
      "ja": "rgw1から謝辞："
    },
    {
      "indent": 6,
      "text": "200 1065 ok",
      "ja": "200 1065 OK"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Flemming Andreasen Cisco Systems 499 Thornall Street, 8th Floor Edison, NJ 08837",
      "ja": "フレミングAndreasenのシスコシステムズ499 Thornallストリート、8階エジソン、NJ 08837"
    },
    {
      "indent": 3,
      "text": "EMail: fandreas@cisco.com",
      "ja": "メールアドレス：fandreas@cisco.com"
    },
    {
      "indent": 3,
      "text": "Bill Foster Cisco Systems 771 Alder Drive Milpitas, CA 95035",
      "ja": "ビル・フォスターシスコシステムズ771アルダードライブミルピタス、CA 95035"
    },
    {
      "indent": 3,
      "text": "EMail: bfoster@cisco.com",
      "ja": "メールアドレス：bfoster@cisco.com"
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2003). All Rights Reserved.",
      "ja": "著作権（C）インターネット協会（2003）。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the Internet Society or other Internet organizations, except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed, or as required to translate it into languages other than English.",
      "ja": "この文書とその翻訳は、コピーして他の人に提供し、それ以外についてはコメントまたは派生物は、いかなる種類の制限もなく、全体的にまたは部分的に、準備コピーし、公表して配布することができることを説明したり、その実装を支援することができます、上記の著作権表示とこの段落は、すべてのそのようなコピーや派生物に含まれていることを条件とします。しかし、この文書自体は著作権のための手順はで定義されている場合には、インターネット標準を開発するために必要なものを除き、インターネットソサエティもしくは他のインターネット関連団体に著作権情報や参照を取り除くなど、どのような方法で変更されないかもしれませんインターネット標準化プロセスが続く、または英語以外の言語に翻訳するために、必要に応じなければなりません。"
    },
    {
      "indent": 3,
      "text": "The limited permissions granted above are perpetual and will not be revoked by the Internet Society or its successors or assigns.",
      "ja": "上記の制限は永久で、インターネット学会やその後継者や譲渡者によって取り消されることはありません。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein is provided on an \"AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書とここに含まれている情報は、基礎とインターネットソサエティおよびインターネットエンジニアリングタスクフォースはすべての保証を否認し、明示または黙示、その情報の利用がない任意の保証を含むがこれらに限定されない「として、」上に設けられています特定の目的への権利または商品性または適合性の黙示の保証を侵害します。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "ja": "RFC Editor機能のための基金は現在、インターネット協会によって提供されます。"
    }
  ]
}