{
  "title": {
    "text": "RFC 3797 - Publicly Verifiable Nominations Committee (NomCom) Random Selection",
    "ja": "RFC 3797 - 公開検証指名委員会（NomCom）ランダム選択"
  },
  "number": 3797,
  "created_at": "2019-10-23 13:03:13.831238+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                    D. Eastlake 3rd\nRequest for Comments: 3797                         Motorola Laboratories\nObsoletes: 2777                                                June 2004\nCategory: Informational",
      "raw": true
    },
    {
      "indent": 2,
      "text": "Publicly Verifiable Nominations Committee (NomCom) Random Selection",
      "ja": "公開検証指名委員会（NomCom）ランダム選択"
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "このメモの位置付け"
    },
    {
      "indent": 3,
      "text": "This memo provides information for the Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited.",
      "ja": "このメモはインターネットコミュニティのための情報を提供します。それはどんな種類のインターネット標準を指定しません。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2004).",
      "ja": "著作権（C）インターネット協会（2004）。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document describes a method for making random selections in such a way that the unbiased nature of the choice is publicly verifiable. As an example, the selection of the voting members of the IETF Nominations Committee (NomCom) from the pool of eligible volunteers is used. Similar techniques would be applicable to other cases.",
      "ja": "この文書では、選択肢の公平な性質が公開検証であるようにランダム選択を行うための方法を説明します。一例として、適格なボランティアのプールからIETF指名委員会（NomCom）の投票メンバーの選択が使用されます。同様の技術は、他のケースに適用可能です。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction. . . . . . . . . . . . . . . . . . . . . . . . . .  2\n2. General Flow of a Publicly Verifiable Process . . . . . . . . .  2\n   2.1.  Determination of the Pool . . . . . . . . . . . . . . . .  2\n   2.2.  Publication of the Algorithm. . . . . . . . . . . . . . .  3\n   2.3.  Publication of Selection. . . . . . . . . . . . . . . . .  3\n3. Randomness. . . . . . . . . . . . . . . . . . . . . . . . . . .  3\n   3.1.  Sources of Randomness . . . . . . . . . . . . . . . . . .  3\n   3.2.  Skew. . . . . . . . . . . . . . . . . . . . . . . . . . .  4\n   3.3.  Entropy Needed. . . . . . . . . . . . . . . . . . . . . .  4\n4. A Suggested Precise Algorithm . . . . . . . . . . . . . . . . .  5\n5. Handling Real World Problems. . . . . . . . . . . . . . . . . .  7\n   5.1.  Uncertainty as to the Pool. . . . . . . . . . . . . . . .  7\n   5.2.  Randomness Ambiguities. . . . . . . . . . . . . . . . . .  7\n6. Fully Worked Example. . . . . . . . . . . . . . . . . . . . . .  8\n7. Security Considerations . . . . . . . . . . . . . . . . . . . .  9\n8. Reference Code. . . . . . . . . . . . . . . . . . . . . . . . . 10\nAppendix A: History of NomCom Member Selection . . . . . . . . . . 16\nAppendix B: Changes from RFC 2777. . . . . . . . . . . . . . . . . 16\nAcknowledgements . . . . . . . . . . . . . . . . . . . . . . . . . 17",
      "raw": true
    },
    {
      "indent": 3,
      "text": "References . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17\n   Normative References. . . . . . . . . . . . . . . . . . . . . . 17\n   Informative References. . . . . . . . . . . . . . . . . . . . . 17\nAuthor's Address . . . . . . . . . . . . . . . . . . . . . . . . . 18\nFull Copyright Statement . . . . . . . . . . . . . . . . . . . . . 19",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "Under the IETF rules, each year ten people are randomly selected from among eligible volunteers to be the voting members of the IETF nominations committee (NomCom). The NomCom nominates members of the Internet Engineering Steering Group (IESG) and the Internet Architecture Board (IAB) as described in [RFC 3777]. The number of eligible volunteers in recent years has been around 100.",
      "ja": "IETFの規則の下では、毎年10人を無作為にIETF指名委員会（NomCom）の議決権メンバーであると資格のボランティアの中から選択されています。 NomComは、インターネットエンジニアリング運営グループ（IESG）と[RFC 3777]で説明したように、インターネットアーキテクチャ委員会（IAB）のメンバーを指名します。近年の資格ボランティアの数は約100となっています。"
    },
    {
      "indent": 3,
      "text": "It is highly desirable that the random selection of the voting NomCom be done in an unimpeachable fashion so that no reasonable charges of bias or favoritism can be brought. This is as much for the protection of the selection administrator (currently, the appointed non-voting NomCom chair) from suspicion of bias as it is for the protection of the IETF.",
      "ja": "バイアスやえこひいきのない合理的な電荷を持っていないことができるように、投票NomComのランダムな選択が申し分のない形で行われることが非常に望ましいです。それはIETFの保護のためであるとして、これは、バイアスの疑いからの選択管理者（現在は、任命無議決権NomCom椅子）の保護のために同じくらいです。"
    },
    {
      "indent": 3,
      "text": "A method such that public information will enable any person to verify the randomness of the selection meets this criterion. This document gives an example of such a method.",
      "ja": "公開情報は、選択のランダム性を確認するために、すべての人を可能にするような方法は、この基準を満たしています。この文書では、このような方法の例を示します。"
    },
    {
      "indent": 3,
      "text": "The method, in the form it appears in RFC 2777, was also used by IANA in February 2003 to determine the ACE prefix for Internationalized Domain Names [RFC 3490] so as to avoid claim jumping.",
      "ja": "請求ジャンプを回避するために、方法は、それはRFC 2777に表示される形で、また、国際化ドメイン名[RFC 3490]のためのACEプレフィックスを決定するために2003年2月にIANAによって使用されました。"
    },
    {
      "indent": 0,
      "text": "2. General Flow of a Publicly Verifiable Process",
      "section_title": true,
      "ja": "公開検証プロセスの2.一般的な流れ"
    },
    {
      "indent": 3,
      "text": "A selection of NomCom members publicly verifiable as unbiased or similar selection could follow the three steps given below.",
      "ja": "公平又は同様の選択のような公的に検証可能NomComメンバーの選択は、以下に示す3つのステップを従うことができます。"
    },
    {
      "indent": 0,
      "text": "2.1. Determination of the Pool",
      "section_title": true,
      "ja": "2.1. プールの決意"
    },
    {
      "indent": 3,
      "text": "First, determine the pool from which the selection is to be made as provided in [RFC 3777] or its successor.",
      "ja": "最初、選択は[RFC 3777]またはその後継で提供されるようになされるべきでプールを決定します。"
    },
    {
      "indent": 3,
      "text": "Volunteers are solicited by the selection administrator. Their names are then passed through the IETF Secretariat to check eligibility. (Current eligibility criteria relate to IETF meeting attendance, records of which are maintained by the Secretariat.) The full list of eligible volunteers is made public early enough that a reasonable time can be given to resolve any disputes as to who should be in the pool.",
      "ja": "ボランティアは、選択管理者が募集されています。彼らの名前は、適格性を確認するためにIETF事務局を通過しています。 （現在の適格基準を記録するのは、事務局によって維持され、IETF会議の出席に関連しています。）対象とボランティアの完全なリストを合理的な時間がプールにする必要があります誰になど任意の紛争を解決するために与えられることができることを十分に早期に公開され。"
    },
    {
      "indent": 0,
      "text": "2.2. Publication of the Algorithm",
      "section_title": true,
      "ja": "2.2. アルゴリズムの出版"
    },
    {
      "indent": 3,
      "text": "The exact algorithm to be used, including the public future sources of randomness, is made public. For example, the members of the final list of eligible volunteers are ordered by publicly numbering them, some public future sources of randomness such as government run lotteries are specified, and an exact algorithm is specified whereby eligible volunteers are selected based on a strong hash function [RFC 1750] of these future sources of randomness.",
      "ja": "正確なアルゴリズムは、ランダムの公開将来ソースを含む、使用される公開されています。例えば、対象とボランティアの最終リストのメンバーが公にそれらを番号順に並べ替えられ、こうした政府の実行宝くじとしてランダムにいくつかの公共の将来のソースが指定され、かつ適格なボランティアが強いハッシュ関数に基づいて選択されることにより、正確なアルゴリズムが指定されていますランダムこれらの将来の供給源の[RFC 1750]。"
    },
    {
      "indent": 0,
      "text": "2.3. Publication of Selection",
      "section_title": true,
      "ja": "2.3. 選定の公表"
    },
    {
      "indent": 3,
      "text": "When the pre-specified sources of randomness produce their output, those values plus a summary of the execution of the algorithm for selection should be announced so that anyone can verify that the correct randomness source values were used and the algorithm properly executed. The algorithm can be run to select, in an ordered fashion, a larger number than are actually necessary so that if any of those selected need to be passed over or replaced for any reason, an ordered set of additional alternate selections will be available. A cut off time for any complaint that the algorithm was run with the wrong inputs or not faithfully executed must be specified to finalize the output and provide a stable selection.",
      "ja": "乱数の予め指定されたソースは、その出力を生成するときに、誰もが正しいランダムソース値が使用され、アルゴリズムが正しく実行されたことを確認できるように、これらの値に加えて、選択するためのアルゴリズムの実行の概要を発表しなければなりません。このアルゴリズムは、注文した形で、何らかの理由で引き渡さまたは交換するものを選択する必要、追加の代替選択肢の順序集合のいずれかが利用可能になる場合ように、実際に必要とされるよりも大きな数を選択するために実行することができます。アルゴリズムは間違った入力で実行するか、忠実に実行されなかった苦情のためのカットオフ時間は出力を確定し、安定的な選択を提供するために指定する必要があります。"
    },
    {
      "indent": 0,
      "text": "3. Randomness",
      "section_title": true,
      "ja": "3.ランダム性"
    },
    {
      "indent": 3,
      "text": "The crux of the unbiased nature of the selection is that it is based in an exact, predetermined fashion on random information which will be revealed in the future and thus can not be known to the person specifying the algorithm. That random information will be used to control the selection. The random information must be such that it will be publicly and unambiguously revealed in a timely fashion.",
      "ja": "選択の公正な性質の核心は、それが将来的に明らかにされ、従って、アルゴリズムを指定する人に知ることができないランダムな情報を正確に、所定の方法で基づいていることです。そのランダム情報は、選択を制御するために使用されます。ランダムな情報は、それが公然と明確にタイムリーに明らかにされるようなものでなければなりません。"
    },
    {
      "indent": 3,
      "text": "The random sources must not include anything that any reasonable person would believe to be under the control or influence of the IETF or its components, such as IETF meeting attendance statistics, numbers of documents issued, or the like.",
      "ja": "ランダムソースは合理的な人は、IETFや、IETF会議出席の統計情報としてその構成要素、発行された文書の数などの制御または影響下にあることを信じるものを含めることはできません。"
    },
    {
      "indent": 0,
      "text": "3.1. Sources of Randomness",
      "section_title": true,
      "ja": "3.1. ランダム性の源"
    },
    {
      "indent": 3,
      "text": "Examples of good information to use are winning lottery numbers for specified runnings of specified public lotteries. Particularly for government run lotteries, great care is taken to see that they occur on time and produce random quantities. Even in the unlikely case one were to have been rigged, it would almost certainly be in connection with winning money in the lottery, not in connection with IETF use.",
      "ja": "良い情報の例としては、指定された公開宝くじの指定されたランニングのための宝くじの当選番号されている使用しています。特に、政府の実行宝くじのために、細心の注意が彼らは時間に発生し、ランダムな量を生産することを確認するためにとられています。でもそうする場合には1が不正に操作されたとあったが、それはほぼ確実ではないIETF使用に関連して、宝くじでお金を獲得に関連してだろう。"
    },
    {
      "indent": 3,
      "text": "Other possibilities are such things as the daily balance in the US Treasury on a specified day, the volume of trading on the New York Stock exchange on a specified day, etc. (However, the reference code given below will not handle integers that are too large.) Sporting events can also be used. (Experience has indicated that stock prices and/or volumes are a poor source of unambiguous data due trading suspensions, company mergers, delistings, splits, multiple markets, etc.) In all cases, great care must be taken to specify exactly what quantities are being presumed random and what will be done if their issuance is cancelled, delayed, or advanced.",
      "ja": "他の可能性としては、（ただし、下記の参照コードがあまりにもある整数を処理できないだろうなど、指定した日にニューヨーク証券取引所での取引のボリューム、指定した日に米国財務省では、毎日のバランスのようなものです大。）スポーツイベントにも使用することができます。すべての場合において、細心の注意が量である正確に何を指定するために取られなければならない（経験が株価および/またはボリュームが原因取引懸濁液、会社の合併、上場廃止、分割、複数の市場など明確なデータの貧弱な源であることが示されています）ランダムと推定され、その発行は、キャンセル遅れ、あるいは進んでいる場合は何をされます。"
    },
    {
      "indent": 3,
      "text": "It is important that the last source of randomness, chronologically, produce a substantial amount of the entropy needed. If most of the randomness has come from the earlier of the specified sources, and someone has even limited influence on the final source, they might do an exhaustive analysis and exert such influence so as to bias the selection in the direction they wanted. Thus it is best for the last source to be an especially strong and unbiased source of a large amount of randomness such as a government run lottery.",
      "ja": "ランダム性の最後のソースは、年代順に、必要なエントロピーのかなりの量を生産することが重要です。ランダム性のほとんどは、指定されたソースの以前から来ている、と誰かが、最終的なソースにも、限られた影響力を持っている場合、彼らは徹底的な分析を行う可能性がありますし、方向選択は、彼らが望んでいたバイアスになるような影響を与えます。したがって、このような政府の実行宝くじとしてランダムの大量の特に強いと公平なソースであることを最後のソースに最適です。"
    },
    {
      "indent": 3,
      "text": "It is best not to use too many different sources. Every additional source increases the probability that one or more sources might be delayed, cancelled, or just plain screwed up somehow, calling into play contingency provisions or, worst of all, creating a situation that was not anticipated. This would either require arbitrary judgment by the selection administrator, defeating the randomness of the selection, or a re-run with a new set of sources, causing much delay. Three or four would be a good number of sources. Ten is too many.",
      "ja": "それはあまりにも多くの異なるソースを使用しないことをお勧めです。すべての追加のソースは、プレイ偶発条項を呼び出すまたは全ての、最悪の場合、予想されなかった状況を作り出す、1つまたは複数のソースが、遅れてキャンセル、あるいは単なる何とかめちゃくちゃにされるかもしれない確率が高くなります。これは非常に遅れが生じ、選択のランダム性、または再実行ソースの新しいセットとを破り、選択管理者によって恣意的な判断を必要とするのいずれか。 3つか4つは、ソースのかなりの数になります。テンは、あまりにも多くのです。"
    },
    {
      "indent": 0,
      "text": "3.2. Skew",
      "section_title": true,
      "ja": "3.2. 斜め"
    },
    {
      "indent": 3,
      "text": "Some of the sources of randomness produce data that is not uniformly distributed. This is certainly true of volumes, prices, and horse race results, for example. However, use of a strong mixing function [RFC 1750] will extract the available entropy and produce a hash value whose bits, remainder modulo a small divisor, etc., deviate from a uniform distribution only by an insignificant amount.",
      "ja": "ランダム性の源のいくつかは、均一に分布されていないデータを生成します。これは、例えば、ボリューム、価格、および馬のレース結果の確かに真実です。しかし、強力な混合機能の使用[RFC 1750]利用可能なエントロピーを抽出し、そのビット、小さな除数モジュロ剰余などのハッシュ値を生成する、唯一のわずかな量によって一様分布から逸脱します。"
    },
    {
      "indent": 0,
      "text": "3.3. Entropy Needed",
      "section_title": true,
      "ja": "3.3. エントロピー必要"
    },
    {
      "indent": 3,
      "text": "What we are doing is selecting N items without replacement from a population of P items. The number of different ways to do this is as follows, where \"!\" represents the factorial function:",
      "ja": "私たちがやっていることはPアイテムの集団から交換することなく、N個の項目を選択します。次のようにこれを行うには、いくつかの異なる方法があり、ここで、「！」階乗関数を表しています。"
    },
    {
      "indent": 23,
      "text": "     P!\n-------------\nN! * (P - N)!",
      "raw": true
    },
    {
      "indent": 3,
      "text": "To do this in a completely random fashion requires as many random bits as the logarithm base 2 of that quantity. Some sample calculated approximate number of random bits for the completely random selection of 10 NomCom members from various pool sizes is given below:",
      "ja": "完全にランダムな方法でこれを行うには、その量の対数の底2と同数のランダムビットを必要とします。種々のプール・サイズから10人のNomComメンバーの完全にランダムな選択のためのランダムビットのいくつかのサンプル計算概数を以下に示します："
    },
    {
      "indent": 15,
      "text": "Random Selection of Ten Items From Pool",
      "ja": "プールからの10の項目をランダムに選択"
    },
    {
      "indent": 5,
      "text": "Pool size 20 25 30 35 40 50 60 75 100 120 Bits needed 18 22 25 28 30 34 37 40 44 47",
      "ja": "プールサイズ20 25 30 35 40 50 60 75 100の120ビットは18 22 25 28 30 34 37 40 44 47が必要"
    },
    {
      "indent": 3,
      "text": "Using an inadequate number of bits means that not all of the possible sets of ten selected items would be available. For a substantially inadequate amount of entropy, there could be a significant correlation between the selection of two different members of the pool, for example. However, as a practical matter, for pool sizes likely to be encountered in IETF NomCom membership selection, 40 bits of entropy should always be adequate. Even if there is a large pool and more bits are needed for perfect randomness, 40 bits of entropy will assure only an insignificant deviation from completely random selection for the difference in probability of selection of different pool members, the correlation between the selection of any pair of pool members, etc.",
      "ja": "ビットの不十分な数を使用して10選択された項目の可能な組の全てではないが、利用可能であることを意味します。エントロピーの実質的に不十分な量のために、例えば、プールの二つの異なるメンバーの選択の間に有意な相関関係があるかもしれません。しかし、実際問題として、IETF NomComメンバーシップの選択に直面する可能性のプールのサイズのために、エントロピーの40ビットは常に十分なはずです。大きいプールであり、より多くのビットが完全ランダムに必要とされる場合であっても、エントロピーの40ビットは、異なるプールメンバの選択、任意の対の選択との間の相関の確率の差を完全にランダムな選択からのみ有意でない偏差を保証しますプールのメンバーなどの"
    },
    {
      "indent": 3,
      "text": "An MD5 [RFC 1321] hash has 128 bits and therefore can produce no more than that number of bits of entropy. However, this is more than three times what is likely to ever be needed for IETF NomCom membership selection. A even stronger hash, such as SHA-1 [RFC 3174], can be used if desired.",
      "ja": "MD5 [RFC 1321]ハッシュは128ビットであり、したがって、エントロピーのビットの数よりも多くを生成することができません。しかし、これは今までIETF NomComメンバーシップの選択のために必要とされる可能性があるものより3倍です。所望であれば、そのようなSHA-1 [RFC 3174]のようにさらに強力なハッシュを使用することができます。"
    },
    {
      "indent": 0,
      "text": "4. A Suggested Precise Algorithm",
      "section_title": true,
      "ja": "4. Aは、正確なアルゴリズムを提案しました"
    },
    {
      "indent": 3,
      "text": "It is important that a precise algorithm be given for mixing the random sources specified and making the selection based thereon. Sources suggested above produce either a single positive number (i.e., NY Stock Exchange volume in thousands of shares) or a small set of positive numbers (many lotteries provide 6 numbers in the range of 1 through 40 or the like, a sporting event could produce the scores of two teams, etc.). A suggested precise algorithm is as follows:",
      "ja": "正確なアルゴリズムは、ランダムソースが指定された混合および選択基づいてその上に製造するために与えられることが重要です。ソースは、（多くの宝くじは、40等を介して1の範囲内の6つの数字を提供農産物の上に単一の正の数（すなわち、千株でNY証券取引所のボリューム）または正の数の小さなセットのいずれかを示唆し、スポーツイベントを作り出すことができます両チームの得点など）。次のように提案され、正確なアルゴリズムは次のとおりです。"
    },
    {
      "indent": 6,
      "text": "1. For each source producing multiple numeric values, represent each as a decimal number terminated by a period (or with a period separating the whole from the fractional part), without leading zeroes (except for a single leading zero if the integer part is zero), and without trailing zeroes after the period.",
      "ja": "単一の先行ゼロを除く複数の数値を生成する各光源について1、ピリオドによって終了小数点数として（又は小数部から全体を分離する周期で）それぞれを表す、先行ゼロなしで（整数部がゼロである場合）、及び期間後にゼロを付けず。"
    },
    {
      "indent": 6,
      "text": "2. Order the values from each source from smallest to the largest and concatenate them and suffix the result with a \"/\". For each source producing a single number, simply represent it as above with a suffix \"/\". (This sorting is necessary because the same lottery results, for example, are sometimes reported in the order numbers were drawn and sometimes in numeric order and such things as the scores of two sports teams that play a game has no inherent order.)",
      "ja": "2.ご注文最小から最大までの各ソースからの値とそれらを連結し、「/」で結果をサフィックス。単一の番号を生成する各ソースに対して、単に接尾辞「/」で、上記のように表します。 （同じ宝くじの結果は、例えば、時々、注文番号で報告されている番号順とゲームは何の固有の順序を持​​っていないプレー2つのスポーツチームの得点のようなもので、時々描かれたとされたため、このソートが必要です。）"
    },
    {
      "indent": 6,
      "text": "3. At this point you have a string for each source, say s1/, s2/, ... Concatenate these strings in a pre-specified order, the order in which the sources were listed if not otherwise specified, and represent each character as its ASCII code [ASCII] producing \"s1/s2/.../\".",
      "ja": "3.この時点であなたは、各ソースの文字列を持ってあらかじめ指定した順序、特に指定がない場合はソースがリストされた順序でS1 /、S2 /、...を連結し、これらの文字列と言うと、各文字を表しますそのASCIIコードとして[ASCII] \"S1 / S2 /.../\" を生産します。"
    },
    {
      "indent": 3,
      "text": "You then produce a sequence of random values derived from a strong mixing of these sources by calculating the MD5 hash [RFC 1321] of this string prefixed and suffixed with an all zeros two byte sequence for the first value, the string prefixed and suffixed by 0x0001 for the second value, etc., treating the two bytes as a big endian counter. Treat each of these derived \"random\" MD5 output values as a positive 128-bit multiprecision big endian integer.",
      "ja": "あなたが最初の値のためのすべてのゼロ2つのバイトシーケンスの接頭辞と接尾辞この文字列のMD5ハッシュ[RFC 1321]計算することにより、これらのソースの強力な混合に由来するランダム値のシーケンスを生成する、文字列が接頭辞と0x0001のサフィックスビッグエンディアンカウンタとして2つのバイトを処理し、第二の値、などのために。正の128ビットの多倍精度ビッグエンディアン整数としてこれらの派生「ランダム」MD5出力値のそれぞれを扱います。"
    },
    {
      "indent": 3,
      "text": "Then totally order the pool of listed volunteers as follows: If there are P volunteers, select the first by dividing the first derived random value by P and using the remainder plus one as the position of the selectee in the published list. Select the second by dividing the second derived random value by P-1 and using the remainder plus one as the position in the list with the first selected person eliminated. Etc.",
      "ja": "次のように完全に記載されているボランティアのプールを注文する：Pボランティアがある場合、最初はPでランダムな値を派生除算と剰余プラス公開リストにselecteeの位置などのいずれかを使用して最初の選択。 P-1によって第2由来のランダムな値を除算し、余りプラス除去最初に選択された人と、リスト内の位置などのいずれかを使用して第二の選択。等。"
    },
    {
      "indent": 3,
      "text": "It is STRONGLY recommended that alphanumeric random sources be avoided due to the much greater difficulty in canonicalizing them in an independently repeatable fashion; however, if you choose to ignore this advice and use an ASCII or similar Roman alphabet source or sources, all white space, punctuation, accents, and special characters should be removed and all letters set to upper case. This will leave only an unbroken sequence of letters A-Z and digits 0-9 which can be treated as a canonicalized number above and suffixed with a \"./\". If you choose to not just ignore but flagrantly flout this advice and try to use even more complex and harder to canonicalize internationalized text, such as UNICODE, you are on your own.",
      "ja": "ことを強く英数字のランダム源が原因独立して再現可能な方法でそれらをcanonicalizingではるかに大きな困難に回避することが推奨されます。あなたはこのアドバイスを無視して、ASCIIまたは類似のローマ字ソースまたはソースを使用することを選択した場合は、すべての空白、句読点、アクセント、および特殊文字を削除する必要があり、すべての文字が大文字に設定します。これは、「./」と上記正規化数として扱われ、接尾辞することができ、Z及び数字0-9の文字のみ切れ目のない配列を残します。あなただけ無視しますが甚だしく、このアドバイスを軽視し、Unicodeなどの国際化テキストを、正規化するために、より複雑で困難を使用しようとしないことを選択した場合、あなたはあなた自身です。"
    },
    {
      "indent": 0,
      "text": "5. Handling Real World Problems",
      "section_title": true,
      "ja": "実世界の問題を取り扱い5."
    },
    {
      "indent": 3,
      "text": "In the real world, problems can arise in following the steps and flow outlined in Sections 2 through 4 above. Some problems that have actually arisen are described below with recommendations for handling them.",
      "ja": "現実の世界では、問題は、上記の4を通じて第2条に記載されている手順と流れを以下で発生することができます。実際に生じているいくつかの問題は、それらを処理するための勧告に、以下に説明されています。"
    },
    {
      "indent": 0,
      "text": "5.1. Uncertainty as to the Pool",
      "section_title": true,
      "ja": "5.1. プールへの不確実性"
    },
    {
      "indent": 3,
      "text": "Every reasonable effort should be made to see that the published pool from which selection is made is of certain and eligible persons. However, especially with compressed schedules or perhaps someone whose claim that they volunteered and are eligible has not been resolved by the deadline, or a determination that someone is not eligible which occurs after the publication of the pool, it may be that there are still uncertainties.",
      "ja": "あらゆる合理的な努力が選択が行われているから、公開のプールは、特定の適格者であることを確認するためになされるべきです。しかし、特におそらく圧縮されたスケジュールやその主張彼らはボランティア活動や期限、またはプールの出版後に発生し、誰かが資格がないことを決意することによって解決されていない資格があることを誰かと、それはまだ不確実性があることかもしれ。"
    },
    {
      "indent": 3,
      "text": "The best way to handle this is to maintain the announced schedule, INCLUDE in the published pool all those whose eligibility is uncertain and to keep the published pool list numbering IMMUTABLE after its publication. If someone in the pool is later selected by the algorithm and random input but it has been determined they are ineligible, they can be skipped and the algorithm run further to make an additional selection. Thus the uncertainty only effects one selection and in general no more than a maximum of U selections where there are U uncertain pool members.",
      "ja": "これを処理するための最良の方法は、発表されたスケジュールを維持することで、公表プールにその資格の発行後IMMUTABLEナンバリング公表プールのリストを維持する不確実であるすべてのものが挙げられます。プール内の誰かが後でアルゴリズムとランダムな入力によって選択されているが、彼らが不適格であると判定された場合、それらはスキップすることができ、さらに、アルゴリズムの実行は、追加の選択を行います。このように不確実性Uに不確実なプールメンバがあるU選択の最大値を超えないだけの効果1つの選択と一般に呼ばれることがあります。"
    },
    {
      "indent": 3,
      "text": "Other courses of action are far worse. Actual insertion or deletion of entries in the pool after its publication changes the length of the list and totally scrambles who is selected, possibly changing every selection. Insertion into the pool raises questions of where to insert: at the beginning, end, alphabetic order, ... Any such choices by the selection administrator after the random numbers are known destroys the public verifiability of fair choice. Even if done before the random numbers are known, such dinking with the list after its publication just smells bad. There should be clear fixed public deadlines and someone who challenges their absence from the pool after the published deadline should have their challenge automatically denied for tardiness.",
      "ja": "アクションのその他のコースははるかに悪いです。その公開後、プール内のエントリの実際の挿入または欠失は、リストの長さを変更し、完全に、おそらくすべての選択を変更、選択されているスクランブル。乱数が知られた後最初に、エンド、アルファベット順、...選択管理者が任意のそのような選択、公正な選択の公開検証可能性を破壊する：プールへの挿入は、挿入する場所の問題を提起します。乱数が知られる前に行われた場合でも、その公開後にリストを使用して、このようなdinkingはちょうど臭いです。明確な固定公共期限と公表締め切りは彼らの挑戦は、自動的に遅刻のために拒否されている必要があります後プールから彼らの不在に挑戦する誰かがあるはずです。"
    },
    {
      "indent": 0,
      "text": "5.2. Randomness Ambiguities",
      "section_title": true,
      "ja": "5.2. ランダムネスあいまい"
    },
    {
      "indent": 3,
      "text": "The best good faith efforts have been made to specify precise and unambiguous sources of randomness. These sources have been made public in advance and there has not been objection to them. However, it has happened that when the time comes to actually get and use this randomness, the real world has thrown a curve ball and it isn't quite clear what data to use. Problems have particularly arisen in connection with stock prices, volumes, and financial exchange rates or indices. If volumes that were published in thousands are published in hundreds, you have a rounding problem. Prices that were quoted in fractions or decimals can change to the other. If you take care of every contingency that has come up in the past, you can be hit with a new one. When this sort of thing happens, it is generally too late to announce new sources, an action which could raise suspicions of its own. About the only course of action is to make a reasonable choice within the ambiguity and depend on confidence in the good faith of the selection administrator. With care, such cases should be extremely rare.",
      "ja": "最高の誠意努力がランダムの正確かつ明確なソースを指定するために行われています。これらのソースは、事前に公表されていて、彼らに異議がなかったです。しかし、時間が実際にこのランダム性を取得し、使用することを来るとき、現実の世界はカーブボールを投げており、それを使用するためにどのようなデータは非常に明確ではないことが起こりました。問題は、特に株価、ボリューム、および金融為替レートまたは指数に関連して生じています。何千に掲載されたボリュームを数百に公開されている場合は、丸め問題を抱えています。画分または小数で引用された価格は他に変更することができます。あなたが過去に来ているすべての不測の世話をする場合は、新しいものにヒットすることができます。この種のものが発生した場合、それ自身の疑惑を上げることができるアクションを新しいソースを発表し、一般的に遅すぎます。アクションの唯一のコースについて曖昧さの中に合理的な選択を行い、選択管理者の善意の信頼に依存することです。注意して、このようなケースは非常にまれである必要があります。"
    },
    {
      "indent": 3,
      "text": "Based on these experiences, it is again recommended that public lottery numbers or the like be used as the random inputs and stock prices and volumes avoided.",
      "ja": "これらの経験に基づいて、再び宝くじ番号などは避けるランダム入力と株価やボリュームとして使用することをお勧めします。"
    },
    {
      "indent": 0,
      "text": "6. Fully Worked Example",
      "section_title": true,
      "ja": "6.完全に働いた例"
    },
    {
      "indent": 3,
      "text": "Assume the following ordered list of 25 eligible volunteers is published in advance of selection:",
      "ja": "25人の適格なボランティアの次の順序のリストは、選択の前に公開されていると仮定します。"
    },
    {
      "indent": 8,
      "text": " 1. John         11. Pollyanna       21. Pride\n 2. Mary         12. Pendragon       22. Sloth\n 3. Bashful      13. Pandora         23. Envy\n 4. Dopey        14. Faith           24. Anger\n 5. Sleepy       15. Hope            25. Kasczynski\n 6. Grouchy      16. Charity\n 7. Doc          17. Lee\n 8. Sneazy       18. Longsuffering\n 9. Handsome     19. Chastity\n10. Cassandra    20. Smith",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Assume the following (fake example) ordered list of randomness sources: 1. The Kingdom of Alphaland State Lottery daily number for 1 November 2004 treated as a single four digit integer. 2. Numbers of the winning horses at Hialeia for all races for the first day on or after 13 October 2004 on which at least two races are run. 3. The People's Democratic Republic of Betastani State Lottery six winning numbers (ignoring the seventh \"extra\" number) for 1 November 2004.",
      "ja": "以下の（偽の一例）を想定するランダム・ソースのリストを命じた：Alphaland州の1王国単一の4桁の整数として扱わ2004年11月1日のために宝くじ毎日数。少なくとも2つのレースが実行されている2004年10月にまたは13の後の最初の日のすべてのレースのためにHialeiaで優勝馬の2数字。 3. 2004年11月1日のために（第七「余分な」数を無視して）Betastani州宝くじ6つの当選番号の人民民主共和国。"
    },
    {
      "indent": 3,
      "text": "Hypothetical randomness publicly produced: Source 1: 9319 Source 2: 2, 5, 12, 8, 10 Source 3: 9, 18, 26, 34, 41, 45",
      "ja": "公に生成仮説ランダム：ソース1：9319ソース2：2、5、12、8、10光源3：9、18、26、34、41、45"
    },
    {
      "indent": 3,
      "text": "Resulting key string:",
      "ja": "キーの文字列を結果として生じます。"
    },
    {
      "indent": 7,
      "text": "9319./2.5.8.10.12./9.18.26.34.41.45./",
      "section_title": true,
      "ja": "９３１９。／２。５。８。１０。１２。／９。１８。２６。３４。４１。４５。／"
    },
    {
      "indent": 3,
      "text": "The table below gives the hex of the MD5 of the above key string bracketed with a two byte string that is successively 0x0000, 0x0001, 0x0002, through 0x0010 (16 decimal). The divisor for the number size of the remaining pool at each stage is given and the index of the selectee as per the original number of those in the pool.",
      "ja": "以下の表は、0x0010（16進）を介して、連続的に0000で2つのバイト文字列、0x0001の、0×0002で括弧上記キーストリングのMD5の六角を与えます。各段階で残りのプールの個数サイズの除数は、プール内のそれらの元の数に従って与えられselecteeの指標です。"
    },
    {
      "indent": 3,
      "text": "index hex value of MD5 div selected 1 990DD0A5692A029A98B5E01AA28F3459 25 -> 17 <- 2 3691E55CB63FCC37914430B2F70B5EC6 24 -> 7 <- 3 FE814EDF564C190AC1D25753979990FA 23 -> 2 <- 4 1863CCACEB568C31D7DDBDF1D4E91387 22 -> 16 <- 5 F4AB33DF4889F0AF29C513905BE1D758 21 -> 25 <- 6 13EAEB529F61ACFB9A29D0BA3A60DE4A 20 -> 23 <- 7 992DB77C382CA2BDB9727001F3CDCCD9 19 -> 8 <- 8 63AB4258ECA922976811C7F55C383CE7 18 -> 24 <- 9 DFBC5AC97CED01B3A6E348E3CC63F40D 17 -> 19 <- 10 31CB111C4A4EBE9287CEAE16FE51B909 16 -> 13 <- 11 07FA46C122F164C215BBC72793B189A3 15 -> 22 <- 12 AC52F8D75CCBE2E61AFEB3387637D501 14 -> 5 <- 13 53306F73E14FC0B2FBF434218D25948E 13 -> 18 <- 14 B5D1403501A81F9A47318BE7893B347C 12 -> 9 <- 15 85B10B356AA06663EF1B1B407765100A 11 -> 1 <- 16 3269E6CE559ABD57E2BA6AAB495EB9BD 10 -> 4 <-",
      "ja": "> 17 < -   -  2 3691E55CB63FCC37914430B2F70B5EC6 24  - > 7 < -  3 FE814EDF564C190AC1D25753979990FA 23  - > 2 < -  4 1863CCACEB568C31D7DDBDF1D4E91387 22  - > 16 < -  5 F4AB33DF4889F0AF29C513905BE1D758 21  - > 25 < -  6 13EAEB529F61ACFB9A29D0BA3A60DE4A 20 MD5のDIVのインデックス進値が1 990DD0A5692A029A98B5E01AA28F3459 25を選択しました - > 23 < -  7 992DB77C382CA2BDB9727001F3CDCCD9 19  - > 8 < -  8 63AB4258ECA922976811C7F55C383CE7 18  - > 24 < -  9 DFBC5AC97CED01B3A6E348E3CC63F40D 17  - > 19 < -  10 31CB111C4A4EBE9287CEAE16FE51B909 16  - > 13 < -  11 07FA46C122F164C215BBC72793B189A3 15  - > 22 < -  12 AC52F8D75CCBE2E61AFEB3387637D501 14  - > 5 < -  13 53306F73E14FC0B2FBF434218D25948E 13  - > 18 < -  14 B5D1403501A81F9A47318BE7893B347C 12  - > 9 < -  15 85B10B356AA06663EF1B1B407765100A 11  - > 1 < -  16 3269E6CE559ABD57E2BA6AAB495EB9BD 10  - > 4 < - "
    },
    {
      "indent": 3,
      "text": "Resulting first ten selected, in order selected:",
      "ja": "10最初に選択したために、選択した結果："
    },
    {
      "indent": 9,
      "text": "1. Lee (17)           6. Envy (23)\n2. Doc (7)            7. Sneazy (8)\n3. Mary (2)           8. Anger (24)\n4. Charity (16)       9. Chastity (19)\n5. Kasczynski (25)   10. Pandora (13)",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Should one of the above turn out to be ineligible or decline to serve, the next would be Sloth, number 22.",
      "ja": "上記の1がサービスを提供する資格または減少であることが判明する必要があり、次はナマケモノ、数22になります。"
    },
    {
      "indent": 0,
      "text": "7. Security Considerations",
      "section_title": true,
      "ja": "7.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "Careful choice of should be made of randomness inputs so that there is no reasonable suspicion that they are under the control of the administrator. Guidelines given above to use a small number of inputs with a substantial amount of entropy from the last should be followed. And equal care needs to be given that the algorithm selected is faithfully executed with the designated inputs values.",
      "ja": "彼らは、管理者の管理下にあることは合理的な疑いがないように注意深く選択はランダム入力のなされるべきです。最後からエントロピーの相当量と入力の小さな数を使用する上記のガイドラインに従うべきです。そして、同じ注意が選択されたアルゴリズムを忠実に指定された入力値を使用して実行されることを考慮する必要があります。"
    },
    {
      "indent": 3,
      "text": "Publication of the results and a week or so window for the community of interest to duplicate the calculations should give a reasonable assurance against implementation tampering.",
      "ja": "計算を複製する興味のあるコミュニティのための結果の公表と一週間ほどウィンドウが改ざん実装に対する合理的な保証を与えるべきです。"
    },
    {
      "indent": 0,
      "text": "8. Reference Code",
      "section_title": true,
      "ja": "8.参照コード"
    },
    {
      "indent": 3,
      "text": "This code makes use of the MD5 reference code from [RFC 1321] (\"RSA Data Security, Inc. MD5 Message-Digest Algorithm\"). The portion of the code dealing with multiple floating point numbers was written by Matt Crawford. The original code in RFC 2777 could only handle pools of up to 255 members and was extended to 2**16-1 by Erik Nordmark. This code has been extracted from this document, compiled, and tested. While no flaws have been found, it is possible that when used with some compiler on some system some flaw will manifest itself.",
      "ja": "このコードは、[RFC 1321]（「RSA Data Security社のMD5メッセージダイジェストアルゴリズム」）からMD5参照コードを利用します。複数の浮動小数点数を扱うコードの一部がマットクロフォードによって書かれました。 RFC 2777の元のコードは、最大255人のメンバーのプールを扱うことができるし、エリックNordmarkとで2 ** 16-1まで延長されました。このコードは、この文書から抽出されたコンパイルされ、テストされています。何の欠陥が見つかっていないが、いくつかのシステム上でいくつかのコンパイラで使用された場合、いくつかの欠陥が現れする可能性があります。"
    },
    {
      "indent": 3,
      "text": "/****************************************************************\n  *\n  *  Reference code for\n  *      \"Publicly Verifiable Random Selection\"\n  *          Donald E. Eastlake 3rd\n  *              February 2004\n  *\n  ****************************************************************/\n #include <limits.h>\n #include <math.h>\n #include <stdio.h>\n #include <stdlib.h>\n #include <string.h>",
      "raw": true
    },
    {
      "indent": 4,
      "text": "/* From RFC 1321 */\n#include \"global.h\"\n#include \"MD5.h\"",
      "raw": true
    },
    {
      "indent": 4,
      "text": "/* local prototypes */\nint longremainder ( unsigned short divisor,\n                    unsigned char dividend[16] );\nlong int getinteger ( char *string );\ndouble NPentropy ( int N, int P );",
      "raw": true
    },
    {
      "indent": 4,
      "text": "/* limited to up to 16 inputs of up to sixteen integers each */\n/* pool limit of 2**8-1 extended to 2**16-1 by Erik Nordmark */\n/****************************************************************/",
      "raw": true
    },
    {
      "indent": 4,
      "text": "main () { int i, j, k, k2, err, keysize, selection, usel;",
      "ja": "メイン（）{iがINT、J、K、K2、ERR、キーサイズ、選択、USEL。"
    },
    {
      "indent": 4,
      "text": "unsigned short   remaining, *selected;\nlong int    pool, temp, array[16];\nMD5_CTX     ctx;\nchar        buffer[257], key [800], sarray[16][256];\nunsigned char    uc16[16], unch1, unch2;",
      "raw": true
    },
    {
      "indent": 4,
      "text": "pool = getinteger ( \"Type size of pool:\\n\" ); if ( pool > 65535 )",
      "ja": "プール=はgetInteger（ \"プールのタイプサイズ：\\ nの\"）;もし（プール> 65535）"
    },
    {
      "indent": 4,
      "text": "    {\n    printf ( \"Pool too big.\\n\" );\n    exit ( 1 );\n    }\nselected = (unsigned short *) malloc ( (size_t)pool );\nif ( !selected )\n    {\n    printf ( \"Out of memory.\\n\" );\n    exit ( 1 );\n    }\nselection = getinteger ( \"Type number of items to be selected:\\n\" );\nif ( selection > pool )\n    {\n    printf ( \"Pool too small.\\n\" );\n    exit ( 1 );\n    }\nif ( selection == pool )\n    printf ( \"All of the pool is selected.\\n\" );\nelse\n    {\n    err = printf ( \"Approximately %.1f bits of entropy needed.\\n\",\n                    NPentropy ( selection, pool ) + 0.1 );\n    if ( err <= 0 ) exit ( 1 );\n    }\nfor ( i = 0, keysize = 0; i < 16; ++i )\n    {\n    if ( keysize > 500 )\n        {\n        printf ( \"Too much input.\\n\" );\n        exit ( 1 );\n        }\n    /* get the \"random\" inputs. echo back to user so the user may\n       be able to tell if truncation or other glitches occur.  */\n    err = printf (\n        \"\\nType #%d randomness or 'end' followed by new line.\\n\"\n        \"Up to 16 integers or the word 'float' followed by up\\n\"\n        \"to 16 x.y format reals.\\n\", i+1 );\n    if ( err <= 0 ) exit ( 1 );\n    gets ( buffer );",
      "raw": true
    },
    {
      "indent": 8,
      "text": "j = sscanf ( buffer,\n        \"%ld%ld%ld%ld%ld%ld%ld%ld%ld%ld%ld%ld%ld%ld%ld%ld\",\n    &array[0], &array[1], &array[2], &array[3],\n    &array[4], &array[5], &array[6], &array[7],\n    &array[8], &array[9], &array[10], &array[11],\n    &array[12], &array[13], &array[14], &array[15] );\nif ( j == EOF )\n    exit ( j );\nif ( !j )\n    if ( buffer[0] == 'e' )\n        break;",
      "raw": true
    },
    {
      "indent": 8,
      "text": "    else\n        {   /* floating point code by Matt Crawford */\n        j = sscanf ( buffer,\n            \"float %ld.%[0-9]%ld.%[0-9]%ld.%[0-9]%ld.%[0-9]\"\n            \"%ld.%[0-9]%ld.%[0-9]%ld.%[0-9]%ld.%[0-9]\"\n            \"%ld.%[0-9]%ld.%[0-9]%ld.%[0-9]%ld.%[0-9]\"\n            \"%ld.%[0-9]%ld.%[0-9]%ld.%[0-9]%ld.%[0-9]\",\n            &array[0], sarray[0], &array[1], sarray[1],\n            &array[2], sarray[2], &array[3], sarray[3],\n            &array[4], sarray[4], &array[5], sarray[5],\n            &array[6], sarray[6], &array[7], sarray[7],\n            &array[8], sarray[8], &array[9], sarray[9],\n            &array[10], sarray[10], &array[11], sarray[11],\n            &array[12], sarray[12], &array[13], sarray[13],\n            &array[14], sarray[14], &array[15], sarray[15] );\n        if ( j == 0 || j & 1 )\n            printf ( \"Bad format.\" );\n        else {\n             for ( k = 0, j /= 2; k < j; k++ )\n             {\n                   /* strip trailing zeros */\n             for ( k2=strlen(sarray[k]); sarray[k][--k2]=='0';)\n                   sarray[k][k2] = '\\0';\n             err = printf ( \"%ld.%s\\n\", array[k], sarray[k] );\n             if ( err <= 0 ) exit ( 1 );\n             keysize += sprintf ( &key[keysize], \"%ld.%s\",\n                                  array[k], sarray[k] );\n             }\n             keysize += sprintf ( &key[keysize], \"/\" );\n             }\n        }\nelse\n    {   /* sort values, not a very efficient algorithm */\n    for ( k2 = 0; k2 < j - 1; ++k2 )\n        for ( k = 0; k < j - 1; ++k )\n            if ( array[k] > array[k+1] )",
      "raw": true
    },
    {
      "indent": 8,
      "text": "                {\n                temp = array[k];\n                array[k] = array[k+1];\n                array[k+1] = temp;\n                }\n    for ( k = 0; k < j; ++k )\n        { /* print for user check */\n        err = printf ( \"%ld \", array[k] );\n        if ( err <= 0 ) exit ( 1 );\n        keysize += sprintf ( &key[keysize], \"%ld.\", array[k] );\n        }\n    keysize += sprintf ( &key[keysize], \"/\" );\n    }\n}   /* end for i */",
      "raw": true
    },
    {
      "indent": 4,
      "text": "/* have obtained all the input, now produce the output */\nerr = printf ( \"Key is:\\n %s\\n\", key );\nif ( err <= 0 ) exit ( 1 );\nfor ( i = 0; i < pool; ++i )\n    selected [i] = (unsigned short)(i + 1);\nprintf ( \"index        hex value of MD5        div  selected\\n\" );\nfor (   usel = 0, remaining = (unsigned short)pool;\n        usel < selection;\n        ++usel, --remaining )\n    {\n    unch1 = (unsigned char)usel;\n    unch2 = (unsigned char)(usel>>8);\n    /* prefix/suffix extended to 2 bytes by Donald Eastlake */\n    MD5Init ( &ctx );\n    MD5Update ( &ctx, &unch2, 1 );\n    MD5Update ( &ctx, &unch1, 1 );\n    MD5Update ( &ctx, (unsigned char *)key, keysize );\n    MD5Update ( &ctx, &unch2, 1 );\n    MD5Update ( &ctx, &unch1, 1 );\n    MD5Final ( uc16, &ctx );\n    k = longremainder ( remaining, uc16 );\n/* printf ( \"Remaining = %d, remainder = %d.\\n\", remaining, k ); */\n    for ( j = 0; j < pool; ++j )\n        if ( selected[j] )\n            if ( --k < 0 )\n                {\n                printf ( \"%2d  \"\n\"%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X  \"\n\"%2d  -> %2d <-\\n\",\nusel+1, uc16[0],uc16[1],uc16[2],uc16[3],uc16[4],uc16[5],uc16[6],\nuc16[7],uc16[8],uc16[9],uc16[10],uc16[11],uc16[12],uc16[13],\nuc16[14],uc16[15], remaining, selected[j] );\n                selected[j] = 0;",
      "raw": true
    },
    {
      "indent": 5,
      "text": "               break;\n               }\n   }\nprintf ( \"\\nDone, type any character to exit.\\n\" );\ngetchar ();\nreturn 0;\n}",
      "raw": true
    },
    {
      "indent": 5,
      "text": "/* prompt for a positive non-zero integer input */\n/****************************************************************/\nlong int getinteger ( char *string )\n{\nlong int     i;\nint          j;\nchar    tin[257];",
      "raw": true
    },
    {
      "indent": 5,
      "text": "while ( 1 )\n{\nprintf ( string );\nprintf ( \"(or 'exit' to exit) \" );\ngets ( tin );\nj = sscanf ( tin, \"%ld\", &i );\nif (    ( j == EOF )",
      "raw": true
    },
    {
      "indent": 5,
      "text": "    ||  ( !j && ( ( tin[0] == 'e' ) || ( tin[0] == 'E' ) ) )\n        )\n    exit ( j );\nif ( ( j == 1 ) &&\n     ( i > 0 ) )\n    return i;\n}   /* end while */\n}",
      "raw": true
    },
    {
      "indent": 5,
      "text": "/* get remainder of dividing a 16 byte unsigned int\n   by a small positive number */\n/****************************************************************/\nint longremainder ( unsigned short divisor,\n                    unsigned char dividend[16] )\n{\nint i;\nlong int kruft;",
      "raw": true
    },
    {
      "indent": 5,
      "text": "if ( !divisor )\n    return -1;\nfor ( i = 0, kruft = 0; i < 16; ++i )\n    {\n    kruft = ( kruft << 8 ) + dividend[i];\n    kruft %= divisor;",
      "raw": true
    },
    {
      "indent": 5,
      "text": "    }\nreturn kruft;\n}   /* end longremainder */",
      "raw": true
    },
    {
      "indent": 4,
      "text": "/* calculate how many bits of entropy it takes to select N from P */\n/****************************************************************/\n/*             P!\n  log  ( ----------------- )\n     2    N! * ( P - N )!\n*/",
      "raw": true
    },
    {
      "indent": 4,
      "text": "double NPentropy ( int N, int P )\n{\nint         i;\ndouble      result = 0.0;",
      "raw": true
    },
    {
      "indent": 4,
      "text": "if (    ( N < 1 )   /* not selecting anything? */\n   ||   ( N >= P )  /* selecting all of pool or more? */\n   )\n    return 0.0;     /* degenerate case */\nfor ( i = P; i > ( P - N ); --i )\n    result += log ( i );\nfor ( i = N; i > 1; --i )\n    result -= log ( i );\n/* divide by [ log (base e) of 2 ] to convert to bits */\nresult /= 0.69315;",
      "raw": true
    },
    {
      "indent": 4,
      "text": "return result;\n}   /* end NPentropy */",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Appendix A: History of NomCom Member Selection",
      "ja": "付録A：NomComメンバー選択の歴史"
    },
    {
      "indent": 3,
      "text": "For reference purposes, here is a list of the IETF Nominations Committee member selection techniques and chairs so far:",
      "ja": "参考のため、ここではこれまでにIETF指名委員会メンバーの選択技術と椅子のリストは、次のとおりです。"
    },
    {
      "indent": 11,
      "text": "YEAR CHAIR SELECTION METHOD",
      "ja": "YEAR CHAIR選択方法"
    },
    {
      "indent": 8,
      "text": "1993/1994 Jeff Case Clergy 1994/1995 Fred Baker Clergy 1995/1996 Guy Almes Clergy 1996/1997 Geoff Huston Spouse 1997/1998 Mike St.Johns Algorithm 1998/1999 Donald Eastlake 3rd RFC 2777 1999/2000 Avri Doria RFC 2777 2000/2001 Bernard Aboba RFC 2777 2001/2002 Theodore Ts'o RFC 2777 2002/2003 Phil Roberts RFC 2777 2003/2004 Rich Draves RFC 2777",
      "ja": "1993/1994ジェフケース聖職者1994/1995フレッド・ベイカー聖職者1995/1996ガイAlmes聖職者1996/1997ジェフ・ヒューストン配偶者1997/1998マイクSt.Johnsアルゴリズム1998/1999ドナルドイーストレイク第三RFC 2777 1999/2000 AvriドリアのRFC 2777 2000/2001バーナードAboba RFC 2777 2001/2002セオドア・ツォーのRFC 2777 2002/2003フィル・ロバーツRFC 2777 2003/2004リッチDravesのRFC 2777"
    },
    {
      "indent": 3,
      "text": "Clergy = Names were written on pieces of paper, placed in a receptacle, and a member of the clergy picked the NomCom members.",
      "ja": "聖職者=名前は、容器内に配置された紙の片に書かれ、そして聖職者のメンバーはNomComメンバーを採取しました。"
    },
    {
      "indent": 3,
      "text": "Spouse = Same as Clergy except chair's spouse made the selection.",
      "ja": "椅子の配偶者を除き、聖職者と同じ配偶者=は、選択をしました。"
    },
    {
      "indent": 3,
      "text": "Algorithm = Algorithmic selection based on similar concepts to those documented in RFC 2777 and herein.",
      "ja": "RFC 2777本明細書に記載されたものと同様の考え方に基づくアルゴリズム=アルゴリズムの選択。"
    },
    {
      "indent": 3,
      "text": "RFC 2777 = Algorithmic selection using the algorithm and reference code provided in RFC 2777 (but not the fake example sources of randomness).",
      "ja": "アルゴリズムと参照コードRFC 2777に設けられた（しかし、ランダム性のない偽例ソース）を使用してRFC 2777 =アルゴリズムの選択。"
    },
    {
      "indent": 0,
      "text": "Appendix B: Changes from RFC 2777",
      "ja": "付録B：RFC 2777からの変更点"
    },
    {
      "indent": 3,
      "text": "This document differs from [RFC 2777], the previous version, in three primary ways as follows:",
      "ja": "次のようにこのドキュメントは、3つの主要な方法で、[RFC 2777]、前のバージョンとは異なります。"
    },
    {
      "indent": 3,
      "text": "(1) Section 5, on problems actually encountered with using these recommendations for selecting an IETF NomCom and on how to handle them, has been added.",
      "ja": "（1）第5節では、実際にIETF NomComを選択するためのこれらの推奨事項を使用して、それらを処理する方法に遭遇した問題で、追加されました。"
    },
    {
      "indent": 3,
      "text": "(2) The selection algorithm code has been modified to handle pools of up to 2**16-1 elements and the counter based prefix and suffix concatenated with the key string before hashing has been extended to two bytes.",
      "ja": "（2）選択アルゴリズムコードは、最大2つの** 16-1要素のプールを処理するように改変されているとハッシュ前にキー文字列と連結カウンタベースの接頭辞と接尾辞は2バイトに拡張されています。"
    },
    {
      "indent": 3,
      "text": "(3) Mention has been added that the algorithm documented herein was used by IANA to select the Internationalized Domain Name ACE prefix and some minor wording changes made.",
      "ja": "（3）本明細書中に文書化されたアルゴリズムは、国際化ドメイン名ACEプレフィックスを選択するために、IANAによって使用され、いくつかのマイナーな文言の変更が行われたことが追加されました言及。"
    },
    {
      "indent": 3,
      "text": "(4) References have been divided into Informative and Normative.",
      "ja": "（4）参考文献は、有益で規範に分割されています。"
    },
    {
      "indent": 3,
      "text": "(5) The list in Appendix A has been brought up to date.",
      "ja": "（5）付録Aのリストが最新の状態にされています。"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Matt Crawford and Erik Nordmark made major contributions to this document. Comments by Bernard Aboba, Theodore Ts'o, Jim Galvin, Steve Bellovin, and others have been incorporated.",
      "ja": "マット・クロフォードやエリックNordmarkとは、この文書に大きな貢献をしました。バーナードAboba、セオドア・ツォー、ジム・ガルビン、スティーブBellovin氏、そして他の人のコメントが組み込まれています。"
    },
    {
      "indent": 0,
      "text": "References",
      "ja": "リファレンス"
    },
    {
      "indent": 0,
      "text": "Normative References",
      "ja": "引用規格"
    },
    {
      "indent": 3,
      "text": "[ASCII] \"USA Standard Code for Information Interchange\", X3.4, American National Standards Institute: New York, 1968.",
      "ja": "[ASCII]「情報交換用米国標準コード」、X3.4、米国規格協会：ニューヨーク、1968年。"
    },
    {
      "indent": 3,
      "text": "[RFC 1321] Rivest, R., \"The MD5 Message-Digest Algorithm\", RFC 1321, April 1992.",
      "ja": "[RFC 1321]のRivest、R.、 \"MD5メッセージダイジェストアルゴリズム\"、RFC 1321、1992年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC 1750] Eastlake, 3rd, D., Crocker, S. and J. Schiller, \"Randomness Recommendations for Security\", RFC 1750, December 1994.",
      "ja": "[RFC 1750]イーストレイク、第三、D.、クロッカー、S.とJ.シラー、 \"セキュリティのためのランダム性に関する推奨事項\"、RFC 1750、1994年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC 3174] Eastlake, 3rd, D. and P. Jones, \"US Secure Hash Algorithm 1 (SHA1)\", RFC 3174, September 2001.",
      "ja": "[RFC 3174]イーストレイクは、第三、D.とP.ジョーンズは、RFC 3174、2001年9月、 \"米国は、ハッシュアルゴリズム1（SHA1）を固定します\"。"
    },
    {
      "indent": 0,
      "text": "Informative References",
      "ja": "参考文献"
    },
    {
      "indent": 3,
      "text": "[RFC 3777] Galvin, J., \"IAB and IESG Selection, Confirmation, and Recall Process: Operation of the Nominating and Recall Committees\", BCP 10, RFC 3777, April 2004.",
      "ja": "[RFC 3777]ガルビン、J.、 \"IABとIESG選択、確認、およびリコール処理：指名とリコール委員会の操作\"、BCP 10、RFC 3777、2004年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC 2777] Eastlake, 3rd, D., \"Publicly Verifiable Nomcom Random Selection\", RFC 2777, February 2000.",
      "ja": "[RFC 2777]イーストレイク、第三、D.、 \"公開検証Nomcomランダムに選択\"、RFC 2777、2000年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC 3490] Falstrom, P., Hoffman, P. and A. Costello, \"Internationalizing Domain Names in Applications (IDNA)\", RFC 3490, March 2003.",
      "ja": "[RFC 3490] Falstrom、P.、ホフマン、P.およびA.コステロ、 \"アプリケーションにおける国際化ドメイン名（IDNA）\"、RFC 3490、2003年3月。"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Donald E. Eastlake, 3rd Motorola Laboratories 155 Beaver Street Milford, MA 01757 USA",
      "ja": "ドナルドE.イーストレイク、第三モトローラ研究所155ビーバー通りミルフォード、MA 01757 USA"
    },
    {
      "indent": 3,
      "text": "Phone: +1-508-786-7554(w) +1-508-634-2066(h) EMail: Donald.Eastlake@motorola.com",
      "ja": "電話番号：+ 1-508-786-7554（W）+ 1-508-634-2066（H）メール：Donald.Eastlake@motorola.com"
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2004). This document is subject to the rights, licenses and restrictions contained in BCP 78, and except as set forth therein, the authors retain all their rights.",
      "ja": "著作権（C）インターネット協会（2004）。この文書では、BCP 78に含まれる権利と許可と制限の適用を受けており、その中の記載を除いて、作者は彼らのすべての権利を保有します。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein are provided on an \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書とここに含まれている情報は、基礎とCONTRIBUTOR「そのまま」、ORGANIZATION HE / SHEが表すまたはインターネットソサエティおよびインターネット・エンジニアリング・タスク・フォース放棄すべての保証、明示または、（もしあれば）後援ISに設けられています。黙示、情報の利用は、特定の目的に対する権利または商品性または適合性の黙示の保証を侵害しない任意の保証含むがこれらに限定されません。"
    },
    {
      "indent": 0,
      "text": "Intellectual Property",
      "ja": "知的財産"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any Intellectual Property Rights or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; nor does it represent that it has made any independent effort to identify any such rights. Information on the procedures with respect to rights in RFC documents can be found in BCP 78 and BCP 79.",
      "ja": "IETFは、本書またはそのような権限下で、ライセンスがたりないかもしれない程度に記載された技術の実装や使用に関係すると主張される可能性があります任意の知的財産権やその他の権利の有効性または範囲に関していかなる位置を取りません利用可能です。またそれは、それがどのような権利を確認する独自の取り組みを行ったことを示すものでもありません。 RFC文書の権利に関する手続きの情報は、BCP 78およびBCP 79に記載されています。"
    },
    {
      "indent": 3,
      "text": "Copies of IPR disclosures made to the IETF Secretariat and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the IETF on-line IPR repository at http://www.ietf.org/ipr.",
      "ja": "IPRの開示のコピーが利用できるようにIETF事務局とライセンスの保証に行われた、または本仕様の実装者または利用者がそのような所有権の使用のための一般的なライセンスまたは許可を取得するために作られた試みの結果を得ることができますhttp://www.ietf.org/iprのIETFのオンラインIPRリポジトリから。"
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights that may cover technology that may be required to implement this standard. Please address the information to the IETF at ietf-ipr@ietf.org.",
      "ja": "IETFは、その注意にこの標準を実装するために必要とされる技術をカバーすることができる任意の著作権、特許または特許出願、またはその他の所有権を持ってすべての利害関係者を招待します。 ietf-ipr@ietf.orgのIETFに情報を記述してください。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "ja": "RFC Editor機能のための基金は現在、インターネット協会によって提供されます。"
    }
  ]
}