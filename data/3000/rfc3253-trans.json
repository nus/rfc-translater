{
  "title": {
    "text": "RFC 3253 - Versioning Extensions to WebDAV (Web Distributed Authoring and Versioning)",
    "ja": "RFC 3253 - WebDAVのへの拡張をバージョン管理（Web分散オーサリングとバージョン管理）"
  },
  "number": 3253,
  "created_at": "2019-10-25 14:06:45.864915+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                           G. Clemm\nRequest for Comments: 3253                             Rational Software\nCategory: Standards Track                                      J. Amsden\n                                                              T. Ellison\n                                                                     IBM\n                                                                C. Kaler\n                                                               Microsoft\n                                                            J. Whitehead\n                                                         U.C. Santa Cruz\n                                                              March 2002",
      "raw": true
    },
    {
      "indent": 15,
      "text": "     Versioning Extensions to WebDAV\n(Web Distributed Authoring and Versioning)",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "このメモの位置付け"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "ja": "この文書は、インターネットコミュニティのためのインターネット標準トラックプロトコルを指定し、改善のための議論と提案を要求します。このプロトコルの標準化状態と状態への「インターネット公式プロトコル標準」（STD 1）の最新版を参照してください。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2002). All Rights Reserved.",
      "ja": "著作権（C）インターネット協会（2002）。全著作権所有。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document specifies a set of methods, headers, and resource types that define the WebDAV (Web Distributed Authoring and Versioning) versioning extensions to the HTTP/1.1 protocol. WebDAV versioning will minimize the complexity of clients that are capable of interoperating with a variety of versioning repository managers, to facilitate widespread deployment of applications capable of utilizing the WebDAV Versioning services. WebDAV versioning includes automatic versioning for versioning-unaware clients, version history management, workspace management, baseline management, activity management, and URL namespace versioning.",
      "ja": "この文書では、HTTP / 1.1プロトコルの拡張バージョン管理方法、ヘッダ、およびWebDAV（Web分散オーサリングとバージョン）を定義するリソース・タイプのセットを指定します。 WebDAVのバージョニングは、WebDAVバージョン管理サービスを利用できるアプリケーションの広範な展開を促進するために、バージョン管理リポジトリマネージャの様々な相互運用が可能なクライアントの複雑さを最小限に抑えることができます。 WebDAVのバージョニングは、バージョン管理を意識しないクライアント、バージョン履歴の管理、ワークスペース管理、ベースライン管理、活動管理、およびURL名前空間のバージョン管理の自動バージョニングを含んでいます。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1 Introduction....................................................  6\n1.1 Relationship to WebDAV........................................  7\n1.2 Notational Conventions........................................  8\n1.3 Terms.........................................................  8\n1.4 Property Values............................................... 11\n 1.4.1 Initial Property Value..................................... 11",
      "raw": true
    },
    {
      "indent": 3,
      "text": " 1.4.2 Protected Property Value................................... 12\n 1.4.3 Computed Property Value.................................... 12\n 1.4.4 Boolean Property Value..................................... 12\n 1.4.5 DAV:href Property Value.................................... 12\n1.5 DAV Namespace XML Elements.................................... 12\n1.6 Method Preconditions and Postconditions....................... 12\n 1.6.1 Example - CHECKOUT request................................. 13\n1.7 Clarification of COPY Semantics with Overwrite:T.............. 13\n1.8 Versioning Methods and Write Locks............................ 14\n2 Basic Versioning Features....................................... 14\n2.1 Basic Versioning Packages..................................... 14\n2.2 Basic Versioning Semantics.................................... 16\n 2.2.1 Creating a Version-Controlled Resource..................... 16\n 2.2.2 Modifying a Version-Controlled Resource.................... 17\n 2.2.3 Reporting.................................................. 19\n3 Version-Control Feature......................................... 20\n3.1 Additional Resource Properties................................ 20\n 3.1.1 DAV:comment................................................ 20\n 3.1.2 DAV:creator-displayname.................................... 20\n 3.1.3 DAV:supported-method-set (protected)....................... 20\n 3.1.4 DAV:supported-live-property-set (protected)................ 21\n 3.1.5 DAV:supported-report-set (protected)....................... 21\n3.2 Version-Controlled Resource Properties........................ 21\n 3.2.1 DAV:checked-in (protected)................................. 21\n 3.2.2 DAV:auto-version........................................... 22\n3.3 Checked-Out Resource Properties............................... 22\n 3.3.1 DAV:checked-out (protected)................................ 23\n 3.3.2 DAV:predecessor-set........................................ 23\n3.4 Version Properties............................................ 23\n 3.4.1 DAV:predecessor-set (protected)............................ 23\n 3.4.2 DAV:successor-set (computed)............................... 23\n 3.4.3 DAV:checkout-set (computed)................................ 23\n 3.4.4 DAV:version-name (protected)............................... 24\n3.5 VERSION-CONTROL Method........................................ 24\n 3.5.1 Example - VERSION-CONTROL.................................. 25\n3.6 REPORT Method................................................. 25\n3.7 DAV:version-tree Report....................................... 26\n 3.7.1 Example - DAV:version-tree Report.......................... 27\n3.8 DAV:expand-property Report.................................... 29\n 3.8.1 Example - DAV:expand-property.............................. 30\n3.9 Additional OPTIONS Semantics.................................. 31\n3.10 Additional PUT Semantics..................................... 31\n3.11 Additional PROPFIND Semantics................................ 32\n3.12 Additional PROPPATCH Semantics............................... 33\n3.13 Additional DELETE Semantics.................................. 33\n3.14 Additional COPY Semantics.................................... 34\n3.15 Additional MOVE Semantics.................................... 34\n3.16 Additional UNLOCK Semantics.................................. 35",
      "raw": true
    },
    {
      "indent": 3,
      "text": "4 Checkout-In-Place Feature....................................... 35\n4.1 Additional Version Properties................................. 35\n 4.1.1 DAV:checkout-fork.......................................... 36\n 4.1.2 DAV:checkin-fork........................................... 36\n4.2 Checked-Out Resource Properties............................... 36\n 4.2.1 DAV:checkout-fork.......................................... 36\n 4.2.2 DAV:checkin-fork........................................... 37\n4.3 CHECKOUT Method............................................... 37\n 4.3.1 Example - CHECKOUT......................................... 38\n4.4 CHECKIN Method................................................ 38\n 4.4.1 Example - CHECKIN.......................................... 40\n4.5 UNCHECKOUT Method............................................. 40\n 4.5.1 Example - UNCHECKOUT....................................... 41\n4.6 Additional OPTIONS Semantics.................................. 42\n5 Version-History Feature......................................... 42\n5.1 Version History Properties.................................... 42\n 5.1.1 DAV:version-set (protected)................................ 42\n 5.1.2 DAV:root-version (computed)................................ 42\n5.2 Additional Version-Controlled Resource Properties............. 42\n 5.2.1 DAV:version-history (computed)............................. 43\n5.3 Additional Version Properties................................. 43\n 5.3.1 DAV:version-history (computed)............................. 43\n5.4 DAV:locate-by-history Report.................................. 43\n 5.4.1 Example - DAV:locate-by-history Report..................... 44\n5.5 Additional OPTIONS Semantics.................................. 45\n5.6 Additional DELETE Semantics................................... 46\n5.7 Additional COPY Semantics..................................... 46\n5.8 Additional MOVE Semantics..................................... 46\n5.9 Additional VERSION-CONTROL Semantics.......................... 46\n5.10 Additional CHECKIN Semantics................................. 47\n6 Workspace Feature............................................... 47\n6.1 Workspace Properties.......................................... 48\n 6.1.1 DAV:workspace-checkout-set (computed)...................... 48\n6.2 Additional Resource Properties................................ 48\n 6.2.1 DAV:workspace (protected).................................. 48\n6.3 MKWORKSPACE Method............................................ 48\n 6.3.1 Example - MKWORKSPACE...................................... 49\n6.4 Additional OPTIONS Semantics.................................. 49\n 6.4.1 Example - OPTIONS.......................................... 51\n6.5 Additional DELETE Semantics................................... 51\n6.6 Additional MOVE Semantics..................................... 52\n6.7 Additional VERSION-CONTROL Semantics.......................... 52\n 6.7.1 Example - VERSION-CONTROL.................................. 53\n7 Update Feature.................................................. 53\n7.1 UPDATE Method................................................. 53\n 7.1.1 Example - UPDATE........................................... 55\n7.2 Additional OPTIONS Semantics.................................. 55\n8 Label Feature................................................... 56",
      "raw": true
    },
    {
      "indent": 3,
      "text": "8.1 Additional Version Properties................................. 56\n 8.1.1 DAV:label-name-set (protected)............................. 56\n8.2 LABEL Method.................................................. 56\n 8.2.1 Example - Setting a label.................................. 58\n8.3 Label Header.................................................. 58\n8.4 Additional OPTIONS Semantics.................................. 59\n8.5 Additional GET Semantics...................................... 59\n8.6 Additional PROPFIND Semantics................................. 59\n8.7 Additional COPY Semantics..................................... 60\n8.8 Additional CHECKOUT Semantics................................. 60\n8.9 Additional UPDATE Semantics................................... 61\n9 Working-Resource Feature........................................ 62\n9.1 Additional Version Properties................................. 62\n 9.1.1 DAV:checkout-fork.......................................... 62\n 9.1.2 DAV:checkin-fork........................................... 63\n9.2 Working Resource Properties................................... 63\n 9.2.1 DAV:auto-update (protected)................................ 63\n 9.2.2 DAV:checkout-fork.......................................... 63\n 9.2.3 DAV:checkin-fork........................................... 63\n9.3 CHECKOUT Method (applied to a version)........................ 63\n 9.3.1 Example - CHECKOUT of a version............................ 65\n9.4 CHECKIN Method (applied to a working resource)................ 65\n 9.4.1 Example - CHECKIN of a working resource.................... 66\n9.5 Additional OPTIONS Semantics.................................. 67\n9.6 Additional COPY Semantics..................................... 67\n9.7 Additional MOVE Semantics..................................... 67\n10  Advanced Versioning Features.................................. 67\n10.1 Advanced Versioning Packages................................. 68\n10.2 Advanced Versioning Terms.................................... 68\n11  MERGE Feature................................................. 70\n11.1 Additional Checked-Out Resource Properties................... 70\n 11.1.1 DAV:merge-set............................................. 70\n 11.1.2 DAV:auto-merge-set........................................ 71\n11.2 MERGE Method................................................. 71\n 11.2.1 Example - MERGE........................................... 74\n11.3 DAV:merge-preview Report..................................... 75\n 11.3.1 Example - DAV:merge-preview Report........................ 76\n11.4 Additional OPTIONS Semantics................................. 77\n11.5 Additional DELETE Semantics.................................. 77\n11.6 Additional CHECKIN Semantics................................. 77\n12  Baseline Feature.............................................. 77\n12.1 Version-Controlled Configuration Properties.................. 78\n 12.1.1 DAV:baseline-controlled-collection (protected)............ 78\n12.2 Checked-Out Configuration Properties......................... 78\n 12.2.1 DAV:subbaseline-set....................................... 78\n12.3 Baseline Properties.......................................... 78\n 12.3.1 DAV:baseline-collection (protected)....................... 79\n 12.3.2 DAV:subbaseline-set (protected)........................... 79",
      "raw": true
    },
    {
      "indent": 3,
      "text": "12.4 Additional Resource Properties............................... 79\n 12.4.1 DAV:version-controlled-configuration (computed)........... 79\n12.5 Additional Workspace Properties.............................. 80\n 12.5.1 DAV:baseline-controlled-collection-set (computed)......... 80\n12.6 BASELINE-CONTROL Method...................................... 80\n 12.6.1 Example - BASELINE-CONTROL................................ 82\n12.7 DAV:compare-baseline Report.................................. 84\n 12.7.1 Example - DAV:compare-baseline Report..................... 85\n12.8 Additional OPTIONS Semantics................................. 86\n12.9 Additional MKCOL Semantics................................... 86\n12.10 Additional COPY Semantics................................... 86\n12.11 Additional CHECKOUT Semantics............................... 86\n12.12 Additional CHECKIN Semantics................................ 86\n12.13 Additional UPDATE Semantics................................. 87\n12.14 Additional MERGE Semantics.................................. 89\n13  Activity Feature.............................................. 90\n13.1 Activity Properties.......................................... 91\n 13.1.1 DAV:activity-version-set (computed)....................... 91\n 13.1.2 DAV:activity-checkout-set (computed)...................... 92\n 13.1.3 DAV:subactivity-set....................................... 92\n 13.1.4 DAV:current-workspace-set (computed)...................... 92\n13.2 Additional Version Properties................................ 92\n 13.2.1 DAV:activity-set.......................................... 93\n13.3 Additional Checked-Out Resource Properties................... 93\n 13.3.1 DAV:unreserved............................................ 93\n 13.3.2 DAV:activity-set.......................................... 93\n13.4 Additional Workspace Properties.............................. 93\n 13.4.1 DAV:current-activity-set.................................. 94\n13.5 MKACTIVITY Method............................................ 94\n 13.5.1 Example - MKACTIVITY...................................... 95\n13.6 DAV:latest-activity-version Report........................... 95\n13.7 Additional OPTIONS Semantics................................. 96\n13.8 Additional DELETE Semantics.................................. 96\n13.9 Additional MOVE Semantics.................................... 97\n13.10 Additional CHECKOUT Semantics............................... 97\n 13.10.1 Example - CHECKOUT with an activity...................... 98\n13.11 Additional CHECKIN Semantics................................ 99\n13.12 Additional MERGE Semantics.................................. 99\n14  Version-Controlled-Collection Feature.........................100\n14.1 Version-Controlled Collection Properties.....................102\n 14.1.1 DAV:eclipsed-set (computed)...............................102\n14.2 Collection Version Properties................................103\n 14.2.1 DAV:version-controlled-binding-set (protected)............103\n14.3 Additional OPTIONS Semantics.................................103\n14.4 Additional DELETE Semantics..................................103\n14.5 Additional MKCOL Semantics...................................104\n14.6 Additional COPY Semantics....................................104\n14.7 Additional MOVE Semantics....................................104",
      "raw": true
    },
    {
      "indent": 3,
      "text": "14.8 Additional VERSION-CONTROL Semantics.........................104\n14.9 Additional CHECKOUT Semantics................................105\n14.10 Additional CHECKIN Semantics................................105\n14.11 Additional UPDATE and MERGE Semantics.......................106\n15  Internationalization Considerations...........................106\n16  Security Considerations.......................................107\n16.1 Auditing and Traceability....................................107\n16.2 Increased Need for Access Control............................108\n16.3 Security Through Obscurity...................................108\n16.4 Denial of Service............................................108\n17  IANA Considerations...........................................109\n18  Intellectual Property.........................................109\n19  Acknowledgements..............................................109\n20  References....................................................110\nAppendix A - Resource Classification..............................111\nA.1 DeltaV-Compliant Unmapped URL.................................111\nA.2 DeltaV-Compliant Resource.....................................111\nA.3 DeltaV-Compliant Collection...................................112\nA.4 Versionable Resource..........................................112\nA.5 Version-Controlled Resource...................................112\nA.6 Version.......................................................113\nA.7 Checked-In Version-Controlled Resource........................113\nA.8 Checked-Out Resource..........................................113\nA.9 Checked-Out Version-Controlled Resource.......................114\nA.10 Working Resource.............................................114\nA.11 Version History..............................................114\nA.12 Workspace....................................................115\nA.13 Activity.....................................................115\nA.14 Version-Controlled Collection................................115\nA.15 Collection Version...........................................115\nA.16 Version-Controlled Configuration.............................116\nA.17 Baseline.....................................................116\nA.18 Checked-Out Version-Controlled Configuration.................116\nAuthors' Addresses................................................117\nFull Copyright Statement..........................................118",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1 Introduction",
      "ja": "1はじめに"
    },
    {
      "indent": 3,
      "text": "This document specifies a set of methods, headers, and properties that define the WebDAV (Web Distributed Authoring and Versioning) versioning extensions to the HTTP/1.1 protocol. Versioning is concerned with tracking and accessing the history of important states of a web resource, such as a standalone web page. The benefits of versioning in the context of the worldwide web include:",
      "ja": "この文書は、メソッド、ヘッダ、及びHTTP / 1.1プロトコルの拡張機能をバージョンのWebDAV（Web分散オーサリングとバージョン）を定義するプロパティのセットを指定します。バージョン管理は、追跡して、そのようなスタンドアロンのWebページなどのWebリソースの重要な状態、の歴史にアクセスすると懸念しています。ワールドワイドウェブの文脈でのバージョン管理の利点は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "- A resource has an explicit history and a persistent identity across the various states it has had during the course of that history. It allows browsing through past and alternative versions of a resource. Frequently the modification and authorship history of a resource is critical information in itself.",
      "ja": " - リソースは、明示的な歴史と、それはその歴史の過程できたさまざまな状態間で永続的な同一性を有します。これは、リソースの過去と代替バージョンをブラウズすることができます。よくあるリソースの修正と原作者の歴史はそれ自体が重要な情報です。"
    },
    {
      "indent": 3,
      "text": "- Resource states (versions) are given stable names that can support externally stored links for annotation and link server support. Both annotation and link servers frequently need to store stable references to portions of resources that are not under their direct control. By providing stable states of resources, version control systems allow not only stable pointers into those resources, but also well defined methods to determine the relationships of those states of a resource.",
      "ja": " - リソースの状態（バージョン）は、注釈とリンクサーバーをサポートするための外部に保存されたリンクをサポートすることができ、安定名前が与えられています。どちらの注釈とリンクサーバーは、頻繁に彼らの直接の管理下にないリソースの部分に安定した参照を格納する必要があります。資源の安定状態を提供することにより、バージョン管理システムは、リソースのそれらの状態の関係を決定するために、それらのリソースへの安定ポインタでなく、明確に定義された方法ではないだけを許可します。"
    },
    {
      "indent": 3,
      "text": "WebDAV Versioning defines both basic and advanced versioning functionality.",
      "ja": "WebDAVのバージョンは、両方の基本および高度なバージョン管理機能を定義します。"
    },
    {
      "indent": 3,
      "text": "Basic versioning allows users to:",
      "ja": "基本的なバージョン管理は、ユーザーがすることができます："
    },
    {
      "indent": 3,
      "text": "- Put a resource under version control - Determine whether a resource is under version control - Determine whether a resource update will automatically be captured as a new version - Create and access distinct versions of a resource",
      "ja": " - バージョン管理下にリソースを入れ - リソースは、バージョン管理下にあるかどうかを確認 - リソースの更新が自動的に新しいバージョンとして捕捉されるかどうかを決定 - リソースの異なるバージョンを作成してアクセスします"
    },
    {
      "indent": 3,
      "text": "Advanced versioning provides additional functionality for parallel development and configuration management of sets of web resources.",
      "ja": "高度なバージョン管理は、Webリソースのセットの並行開発および構成管理のための追加機能を提供します。"
    },
    {
      "indent": 3,
      "text": "This document will first define the properties and method semantics for the basic versioning features, and then define the additional properties and method semantics for the advanced versioning features. An implementer that is only interested in basic versioning should skip the advanced versioning sections (Section 10 to Section 14).",
      "ja": "この文書では、最初に基本的なバージョン管理機能のためのプロパティとメソッドのセマンティクスを定義し、高度なバージョン管理機能のための追加のプロパティとメソッドのセマンティクスを定義します。基本的なバージョン管理にのみ関心ある実装者は、高度なバージョン管理セクション（セクション14のセクション10）をスキップする必要があります。"
    },
    {
      "indent": 0,
      "text": "1.1 Relationship to WebDAV",
      "section_title": true,
      "ja": "WebDAVの1.1の関係"
    },
    {
      "indent": 3,
      "text": "To maximize interoperability and the use of existing protocol functionality, versioning support is designed as extensions to the WebDAV protocol [RFC2518], which itself is an extension to the HTTP protocol [RFC2616]. All method marshalling and postconditions defined by RFC 2518 and RFC 2616 continue to hold, to ensure that versioning unaware clients can interoperate successfully with versioning servers. Although the versioning extensions are designed to be orthogonal to most aspects of the WebDAV and HTTP protocols, a clarification to RFC 2518 is required for effective interoperable versioning. This clarification is described in Section 1.7.",
      "ja": "相互運用性と既存のプロトコルの機能の使用を最大にするために、バージョンのサポートは、それ自体がHTTPプロトコル[RFC2616]の拡張機能であるWebDAVプロトコル[RFC2518]の拡張として設計されています。 RFC 2518およびRFC 2616で定義されたすべてのメソッドのマーシャリングと事後条件は気づいていないクライアントをバージョン管理するバージョン管理サーバと正常に相互運用できることを保証するために、保持し続けます。バージョン管理の拡張機能はWebDAVとHTTPプロトコルのほとんどの側面と直交するように設計されているが、RFC 2518に明確化は、効果的な相互運用可能バージョン管理のために必要です。この明確化は、1.7節に記載されています。"
    },
    {
      "indent": 0,
      "text": "1.2 Notational Conventions",
      "section_title": true,
      "ja": "1.2表記規則"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119.",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はありますRFC 2119に記載されるように解釈されます。"
    },
    {
      "indent": 3,
      "text": "The term \"protected\" is placed in parentheses following the definition of a protected property (see Section 1.4.2).",
      "ja": "「保護された」という用語は、保護された財産（1.4.2項を参照）の定義に続く括弧内に置かれています。"
    },
    {
      "indent": 3,
      "text": "The term \"computed\" is placed in parentheses following the definition of a computed property (see Section 1.4.3).",
      "ja": "「計算」という用語は、計算されたプロパティ（セクション1.4.3を参照）の定義に続く括弧内に配置されます。"
    },
    {
      "indent": 3,
      "text": "When an XML element type in the \"DAV:\" namespace is referenced in this document outside of the context of an XML fragment, the string \"DAV:\" will be prefixed to the element type.",
      "ja": "XML要素タイプが「DAV：」名前空間は、XMLフラグメントのコンテキストの外側この文書で参照され、文字列「DAVは、」要素タイプに前置されます。"
    },
    {
      "indent": 3,
      "text": "When a method is defined in this document, a list of preconditions and postconditions will be defined for that method. If the semantics of an existing method is being extended, a list of additional preconditions and postconditions will be defined. A precondition or postcondition is prefixed by a parenthesized XML element type that identifies that precondition or postcondition (see Section 1.6).",
      "ja": "この方法は、この文書で定義されている場合は、事前条件と事後条件のリストは、そのメソッドのために定義されます。既存のメソッドのセマンティクスが拡張されている場合は、追加の事前条件と事後条件のリストが定義されます。前提条件または事後条件は、その前提条件または事後条件（セクション1.6を参照）を識別する括弧XML要素タイプによって接頭されます。"
    },
    {
      "indent": 0,
      "text": "1.3 Terms",
      "section_title": true,
      "ja": "1.3規約"
    },
    {
      "indent": 3,
      "text": "This document uses the terms defined in RFC 2616, in RFC 2518, and in this section. Section 2.2 defines the semantic versioning model underlying this terminology.",
      "ja": "この文書は、RFC 2518で、このセクションでは、RFC 2616で定義された用語を使用しています。 2.2節では、この用語の基礎となるセマンティックバージョニングモデルを定義します。"
    },
    {
      "indent": 3,
      "text": "Version Control, Checked-In, Checked-Out",
      "ja": "バージョン管理、チェックイン、チェックアウト"
    },
    {
      "indent": 6,
      "text": "\"Version control\" is a set of constraints on how a resource can be updated. A resource under version control is either in a \"checked-in\" or \"checked-out\" state, and the version control constraints apply only while the resource is in the checked-in state.",
      "ja": "「バージョン管理」は、リソースを更新することができます方法についての制約のセットです。バージョン管理下のリソースは、「チェックインされた」または「チェックアウト」状態のいずれかであり、およびバージョン管理の制約は、リソースがチェックインされた状態になっている間だけ適用されます。"
    },
    {
      "indent": 3,
      "text": "Versionable Resource",
      "ja": "バージョン管理リソース"
    },
    {
      "indent": 6,
      "text": "A \"versionable resource\" is a resource that can be put under version control.",
      "ja": "「バージョン管理可能リソースは、」バージョン管理下に置くことができるリソースです。"
    },
    {
      "indent": 3,
      "text": "Version-Controlled Resource",
      "ja": "バージョン管理されたリソース"
    },
    {
      "indent": 6,
      "text": "When a versionable resource is put under version control, it becomes a \"version-controlled resource\". A version-controlled resource can be \"checked out\" to allow modification of its content or dead properties by standard HTTP and WebDAV methods.",
      "ja": "バージョン管理リソースは、バージョン管理下に置かれたとき、それは、「バージョン管理されたリソース」になります。バージョン管理されたリソースは、標準のHTTPおよびWebDAVの方法によってその内容や死者のプロパティの変更を許可するために「チェックアウト」することができます。"
    },
    {
      "indent": 3,
      "text": "Checked-Out Resource",
      "ja": "チェックアウトされたリソース"
    },
    {
      "indent": 6,
      "text": "A \"checked-out resource\" is a resource under version control that is in the checked-out state.",
      "ja": "「チェックアウトのリソースは、」チェックアウト状態にあるバージョン管理下のリソースです。"
    },
    {
      "indent": 3,
      "text": "Version Resource",
      "ja": "バージョンリソース"
    },
    {
      "indent": 6,
      "text": "A \"version resource\", or simply \"version\", is a resource that contains a copy of a particular state (content and dead properties) of a version-controlled resource. A version is created by \"checking in\" a checked-out resource. The server allocates a distinct new URL for each new version, and this URL will never be used to identify any resource other than that version. The content and dead properties of a version never change.",
      "ja": "「バージョンリソース」、または単に「バージョン」、バージョン管理されたリソースの特定の状態（コンテンツおよびデッドプロパティ）のコピーを含むリソースです。バージョンがチェックアウトされたリソース「にチェックする」で作成されています。サーバは、それぞれの新しいバージョンのための明確な新しいURLを割り当て、このURLは、そのバージョン以外の任意のリソースを識別するために使用されることはありません。バージョンの内容とデッドプロパティを変更することはありません。"
    },
    {
      "indent": 3,
      "text": "Version History Resource",
      "ja": "バージョン履歴リソース"
    },
    {
      "indent": 6,
      "text": "A \"version history resource\", or simply \"version history\", is a resource that contains all the versions of a particular version-controlled resource.",
      "ja": "「バージョン履歴リソース」、または単に「バージョン履歴」は、特定のバージョン管理されたリソースのすべてのバージョンを含むリソースです。"
    },
    {
      "indent": 3,
      "text": "Version Name",
      "ja": "バージョン名"
    },
    {
      "indent": 6,
      "text": "A \"version name\" is a string chosen by the server to distinguish one version of a version history from the other versions of that version history. Versions from different version histories may have the same version name.",
      "ja": "「バージョン名」は、そのバージョン履歴の他のバージョンからバージョン履歴のあるバージョンを区別するために、サーバによって選ばれた文字列です。異なるバージョン履歴からのバージョンは、同じバージョン名を有することができます。"
    },
    {
      "indent": 3,
      "text": "Predecessor, Successor, Ancestor, Descendant",
      "ja": "前任者、後継者、祖先、子孫"
    },
    {
      "indent": 6,
      "text": "When a version-controlled resource is checked out and then subsequently checked in, the version that was checked out becomes a \"predecessor\" of the version created by the checkin. A client can specify multiple predecessors for a new version if the new version is logically a merge of those predecessors. When a version is connected to another version by traversing one or more predecessor relations, it is called an \"ancestor\" of that version. The inverse of the predecessor and ancestor relations are the \"successor\" and \"descendant\" relations. Therefore, if X is a predecessor of Y, then Y is a successor of X, and if X is an ancestor of Y, then Y is a descendant of X.",
      "ja": "バージョン管理されたリソースをチェックアウトし、その後でチェックされている場合は、チェックアウトされたバージョンは、チェックインによって作成されたバージョンの「前身」になります。新バージョンでは、論理的にそれらの前任者のマージされた場合、クライアントは新しいバージョンのために複数の前任者を指定することができます。バージョンは、1つのまたは複数の先行関係をトラバースすることにより、別のバージョンに接続されている場合、それはそのバージョンの「祖先」と呼ばれています。前身と祖先関係の逆は「後継者」と「子孫」の関係です。 XがYの前身である場合したがって、その後、YはXの後継であり、そしてXがYの先祖である場合、YはXの子孫であります"
    },
    {
      "indent": 3,
      "text": "Root Version Resource",
      "ja": "ルートバージョンリソース"
    },
    {
      "indent": 6,
      "text": "The \"root version resource\", or simply \"root version\", is the version in a version history that is an ancestor of every other version in that version history.",
      "ja": "「ルートバージョンのリソース」、または単に「ルートバージョン」、そのバージョン履歴内の他のすべてのバージョンの祖先であるバージョン履歴でバージョンです。"
    },
    {
      "indent": 3,
      "text": "Workspace Resource",
      "ja": "ワークスペースのリソース"
    },
    {
      "indent": 6,
      "text": "A \"workspace resource\", or simply \"workspace\", is a collection that contains at most one version-controlled resource for a given version history (see Section 6).",
      "ja": "「ワークスペースのリソース」、または単に「ワークスペース」は、特定のバージョン履歴（セクション6を参照）のための最も1つのバージョン管理されたリソースを含むコレクションです。"
    },
    {
      "indent": 3,
      "text": "Working Resource",
      "ja": "ワーキングリソース"
    },
    {
      "indent": 6,
      "text": "A \"working resource\" is a checked-out resource created by the server at a server-defined URL when a version (instead of a version-controlled resource) is checked out. Unlike a checked-out version-controlled resource, a working resource is deleted when it is checked in.",
      "ja": "「作業リソースは、」（代わりに、バージョン管理されたリソースの）バージョンがチェックアウトされたときに、サーバーに定義されたURLにアクセスし、サーバーが作成したチェックアウトリソースです。それがチェックインされたときにチェックアウト、バージョン管理されたリソースとは異なり、作業リソースが削除されます。"
    },
    {
      "indent": 3,
      "text": "Fork, Merge",
      "ja": "フォーク、マージ"
    },
    {
      "indent": 6,
      "text": "When a second successor is added to a version, this creates a \"fork\" in the version history. When a version is created with multiple predecessors, this creates a \"merge\" in the version history. A server may restrict the version history to be linear (with no forks or merges), but an interoperable versioning client should be prepared to deal with both forks and merges in the version history.",
      "ja": "第二の後継者がバージョンに追加されたとき、これはバージョン履歴の「フォーク」を作成します。バージョンが複数の前任者で作成されている場合、このバージョンの歴史の中で、「マージ」を作成します。サーバーは、（フォークまたはマージなしで）線形であるバージョン履歴を制限することができるが、相互運用可能なバージョンのクライアントは両方のフォークに対処するために準備し、バージョン履歴にマージする必要があります。"
    },
    {
      "indent": 3,
      "text": "The following diagram illustrates several of the previous definitions. Each box represents a version and each line between two boxes represents a predecessor/successor relationship. For example, it shows V3 is a predecessor of V5, V7 is a successor of V5, V1 is an ancestor of V4, and V7 is a descendant of V4. It also shows that there is a fork at version V2 and a merge at version V7.",
      "ja": "次の図は、以前の定義のいくつかを示しています。各ボックスには、バージョンを表し、2つのボックスの間に各ラインが先行/後継関係を表します。例えば、V1がV4の祖先であり、V7はV5の後継であり、V3は、V5の前身であることを示し、およびV7はV4の子孫です。また、バージョンV2におけるフォークとバージョンV7でマージがあることを示しています。"
    },
    {
      "indent": 23,
      "text": "History of foo.html",
      "ja": "foo.htmlというの歴史"
    },
    {
      "indent": 9,
      "text": "                      +---+\nRoot Version -------> |   | V1\n                      +---+           ^\n                        |             |\n                        |             |\n                      +---+           |\nVersion Name ----> V2 |   |           | Ancestor\n                      +---+           |\n                      /    \\          |\n                     /      \\         |\n                +---+       +---+\n                |   | V3    |   | V4\n             ^  +---+       +---+\n             |    |           |       |\nPredecessor  |    |           |       |\n                +---+       +---+     |\n                |   | V5    |   | V6  | Descendant\n                +---+       +---+     |\nSuccessor    |       \\      /         |\n             |        \\    /          |\n             v        +---+           v\n                      |   | V7\n                      +---+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Label",
      "ja": "ラベル"
    },
    {
      "indent": 6,
      "text": "A \"label\" is a name that can be used to select a version from a version history. A label can be assigned by either a client or the server. The same label can be used in different version histories.",
      "ja": "「標識」は、バージョン履歴からバージョンを選択するために使用できる名前です。ラベルは、クライアントまたはサーバによって割り当てることができます。同じラベルが異なるバージョン履歴に使用することができます。"
    },
    {
      "indent": 0,
      "text": "1.4 Property Values",
      "section_title": true,
      "ja": "1.4プロパティ値"
    },
    {
      "indent": 0,
      "text": "1.4.1 Initial Property Value",
      "section_title": true,
      "ja": "1.4.1初期プロパティ値"
    },
    {
      "indent": 3,
      "text": "Unless an initial value of a property of a given type is defined by this document, the initial value of a property of that type is implementation dependent.",
      "ja": "指定された型のプロパティの初期値は、この文書で定義されていない限り、その型のプロパティの初期値は実装依存です。"
    },
    {
      "indent": 0,
      "text": "1.4.2 Protected Property Value",
      "section_title": true,
      "ja": "1.4.2保護されたプロパティ値"
    },
    {
      "indent": 3,
      "text": "When a property of a specific kind of resource is \"protected\", the property value cannot be updated on that kind of resource except by a method explicitly defined as updating that specific property. In particular, a protected property cannot be updated with a PROPPATCH request. Note that a given property can be protected on one kind of resource, but not protected on another kind of resource.",
      "ja": "リソースの特定の種類のプロパティは、「保護」されている場合、プロパティの値が明示的に特定のプロパティを更新するように定義の方法による場合を除いて、リソースのようなものに更新することはできません。具体的には、保護されたプロパティは、PROPPATCH要求で更新することはできません。指定されたプロパティは、リソースの一種で保護されたが、リソースの別の種類に保護されていないことができることに注意してください。"
    },
    {
      "indent": 0,
      "text": "1.4.3 Computed Property Value",
      "section_title": true,
      "ja": "1.4.3コンピュープロパティ値"
    },
    {
      "indent": 3,
      "text": "When a property is \"computed\", its value is defined in terms of a computation based on the content and other properties of that resource, or even of some other resource. When the semantics of a method is defined in this document, the effect of that method on non-computed properties will be specified; the effect of that method on computed properties will not be specified, but can be inferred from the computation defined for those properties. A computed property is always a protected property.",
      "ja": "プロパティは「計算」である場合、その値は、そのリソースの、あるいはいくつかの他のリソースのコンテンツおよび他の特性に基づいて、計算の観点から定義されています。方法のセマンティクスは、この文書で定義されている場合、非計算的特性上の方法の効果が特定されます。計算された特性に対するその方法の効果は、指定されませんが、それらの特性のために定義された計算から推定することができます。計算されたプロパティは常に保護されたプロパティです。"
    },
    {
      "indent": 0,
      "text": "1.4.4 Boolean Property Value",
      "section_title": true,
      "ja": "1.4.4ブールプロパティ値"
    },
    {
      "indent": 3,
      "text": "Some properties take a Boolean value of either \"false\" or \"true\".",
      "ja": "一部のプロパティは、「偽」または「真」のいずれかのブール値を取ります。"
    },
    {
      "indent": 0,
      "text": "1.4.5 DAV:href Property Value",
      "section_title": true,
      "ja": "1.4.5 DAV：hrefのプロパティ値"
    },
    {
      "indent": 3,
      "text": "The DAV:href XML element is defined in RFC 2518, Section 12.3.",
      "ja": "DAV：hrefのXML要素は、RFC 2518、セクション12.3で定義されています。"
    },
    {
      "indent": 0,
      "text": "1.5 DAV Namespace XML Elements in Request and Response Bodies",
      "section_title": true,
      "ja": "リクエストとレスポンスボディで1.5 DAV名前空間XML要素"
    },
    {
      "indent": 3,
      "text": "Although WebDAV request and response bodies can be extended by arbitrary XML elements, which can be ignored by the message recipient, an XML element in the DAV namespace MUST NOT be used in the request or response body of a versioning method unless that XML element is explicitly defined in an IETF RFC.",
      "ja": "WebDAV要求および応答体がメッセージ受信者によって無視することができる任意のXML要素によって拡張することができるが、そのXML要素が明示的でない限り、DAVの名前空間内のXML要素は、バージョン管理方法の要求または応答本体に使用してはいけませんIETF RFCで定義されています。"
    },
    {
      "indent": 0,
      "text": "1.6 Method Preconditions and Postconditions",
      "section_title": true,
      "ja": "1.6メソッドの事前条件と事後条件"
    },
    {
      "indent": 3,
      "text": "A \"precondition\" of a method describes the state of the server that must be true for that method to be performed. A \"postcondition\" of a method describes the state of the server that must be true after that method has been completed. If a method precondition or postcondition for a request is not satisfied, the response status of the request MUST be either 403 (Forbidden) if the request should not be repeated because it will always fail, or 409 (Conflict) if it is expected that the user might be able to resolve the conflict and resubmit the request.",
      "ja": "この方法の「前提条件」は、その方法を実行するために真でなければならないサーバの状態を説明しています。この方法の「事後条件」は、そのメソッドが完了した後に真でなければならないサーバの状態を説明しています。リクエストのための方法の前提条件や事後条件が満たされていない場合、それがことが期待されている場合、それは常に失敗、または409（競合）しますので、要求が繰り返されてはならない場合は、リクエストの応答ステータスは403（禁止）のいずれかでなければなりませんユーザーは、競合を解決し、要求を再送信することができるかもしれません。"
    },
    {
      "indent": 3,
      "text": "In order to allow better client handling of 403 and 409 responses, a distinct XML element type is associated with each method precondition and postcondition of a request. When a particular precondition is not satisfied or a particular postcondition cannot be achieved, the appropriate XML element MUST be returned as the child of a top-level DAV:error element in the response body, unless otherwise negotiated by the request. In a 207 Multi-Status response, the DAV:error element would appear in the appropriate DAV:responsedescription element.",
      "ja": "403と409応答のより良好なクライアント処理を可能にするために、異なるXML要素のタイプは、要求の各方法の前提条件および事後条件と関連しています。そうでなければ要求によって交渉されない限り、レスポンスボディのエラー要素：特定の前提条件が満たされていないか、または特定の事後条件が達成できない場合、適切なXML要素は、トップレベルのDAVの子として返さなければなりません。 207マルチステータス応答では、DAV：エラー要素は、適切なDAVに表示されます：responsedescription要素を。"
    },
    {
      "indent": 0,
      "text": "1.6.1 Example - CHECKOUT request with DAV:must-be-checked-in response",
      "section_title": true,
      "ja": "1.6.1例 -  DAVとチェックアウト要求：-でなければならない - チェックインに対応"
    },
    {
      "indent": 3,
      "text": ">>REQUEST",
      "ja": ">> REQUEST"
    },
    {
      "indent": 5,
      "text": "CHECKOUT /foo.html HTTP/1.1 Host: www.webdav.org",
      "ja": "CHECKOUT /foo.html HTTP / 1.1ホスト：www.webdav.org"
    },
    {
      "indent": 3,
      "text": ">>RESPONSE",
      "ja": ">> RESPONSE"
    },
    {
      "indent": 5,
      "text": "HTTP/1.1 409 Conflict Content-Type: text/xml; charset=\"utf-8\" Content-Length: xxxx",
      "ja": "HTTP / 1.1 409競合のContent-Type：text / xmlで、 charset = \"UTF-8\" をコンテンツの長さ：XXXX"
    },
    {
      "indent": 5,
      "text": "<?xml version=\"1.0\" encoding=\"utf-8\" ?> <D:error xmlns:D=\"DAV:\"> <D:must-be-checked-in/> </D:error>",
      "ja": "<？xml version = \"1.0\" エンコード= \"UTF-8\"？> <D：エラーのxmlns：D = \"DAV：\"> <D：-チェックされなければならないイン/> </ D：エラー>"
    },
    {
      "indent": 3,
      "text": "In this example, the request to CHECKOUT /foo.html fails because /foo.html is not checked in.",
      "ja": "/foo.htmlがチェックインされていないので、この例では、チェックアウト/foo.htmlへの要求は失敗します。"
    },
    {
      "indent": 0,
      "text": "1.7 Clarification of COPY Semantics with Overwrite:T",
      "section_title": true,
      "ja": "上書きとCOPYセマンティクスの1.7明確化：T"
    },
    {
      "indent": 3,
      "text": "RFC 2518, Section 8.8.4 states:",
      "ja": "RFC 2518、セクション8.8.4の状態："
    },
    {
      "indent": 3,
      "text": "\"If a resource exists at the destination and the Overwrite header is \"T\" then prior to performing the copy the server MUST perform a DELETE with \"Depth: infinity\" on the destination resource.\"",
      "ja": "「リソースが先に存在し、上書きヘッダがある場合、 『T奥行き』コピーを実行する前に、サーバは、DELETEと実行しなければなりません 『：無限の』宛先リソースに。」"
    },
    {
      "indent": 3,
      "text": "The purpose of this sentence is to ensure that following a COPY, all destination resources have the same content and dead properties as the corresponding resources identified by the request-URL (where a resource with a given name relative to the Destination URL \"corresponds\" to a resource with the same name relative to the request-URL). If at the time of the request, there already is a resource at the destination that has the same resource type as the corresponding resource at the request-URL, that resource MUST NOT be deleted, but MUST be updated to have the content and dead properties of its corresponding member. If a client wishes all resources at the destination to be deleted prior to the COPY, it MUST explicitly issue a DELETE request.",
      "ja": "この文の目的は、どこ先URL「に対応」への指定した基準にした名前を持つリソースCOPY以下、すべての宛先リソースは（要求URLによって識別される対応するリソースと同じ内容とデッドプロパティを持っていることを確認することです要求URLに対する同じ名前を持つリソース）。要求の時点で、すでに要求URLに対応するリソースと同じリソースタイプを持っている先のリソースがある場合は、そのリソースを削除してはなりませんが、内容とデッドプロパティを持っているように更新する必要がありますそれに対応するメンバーの。クライアントは先のすべてのリソースがCOPY前に削除されることを希望する場合は、それが明示的にDELETEリクエストを発行しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The difference between updating a resource and replacing a resource with a new resource is especially important when resource history is being maintained (the former adds to an existing history, while the latter creates a new history). In addition, locking and access control constraints might allow you to update a resource, but not allow you to delete it and create a new one in its place.",
      "ja": "リソース履歴が維持されているときに、リソースを更新し、新しいリソースにリソースを置き換えるとの差は特に重要である（後者は新たな履歴を作成前者は、既存の履歴に追加します）。また、ロックおよびアクセス制御制約を使用すると、リソースを更新することができますが、あなたはそれを削除し、その場所に新しいものを作成することができない場合があります。"
    },
    {
      "indent": 3,
      "text": "Note that this clarification does not apply to a MOVE request. A MOVE request with Overwrite:T MUST perform the DELETE with \"Depth:infinity\" on the destination resource prior to performing the MOVE.",
      "ja": "この明確化は、MOVE要求には適用されないことに注意してください。上書きとMOVE要求：MOVEを実行する前に、宛先リソースに「無限の深さ」Tは、で削除を実行しなければなりません。"
    },
    {
      "indent": 0,
      "text": "1.8 Versioning Methods and Write Locks",
      "section_title": true,
      "ja": "1.8バージョン管理方法とロックを書きます"
    },
    {
      "indent": 3,
      "text": "If a write-locked resource has a non-computed property defined by this document, the property value MUST NOT be changed by a request unless the appropriate lock token is included in the request. Since every method introduced in this document other than REPORT modifies at least one property defined by this document, every versioning method other than REPORT is affected by a write lock. In particular, the method MUST fail with a 423 (Locked) status if the resource is write-locked and the appropriate token is not specified in an If request header.",
      "ja": "書き込みロックされたリソースは、このドキュメントで定義された非計算性質を持っている場合は、適切なロックトークンが要求に含まれていない限り、プロパティ値は、要求によって変更してはいけません。 REPORT以外本書に導入すべての方法は、このドキュメントによって定義された少なくとも1つの特性を修正するため、REPORT以外のすべてのバージョン管理方法は、書き込みロックによって影響されます。リソースが書き込みロックされ、適切なトークンがあれば要求ヘッダーで指定されていない場合は特に、この方法は、423（ロック）状態で失敗しなければなりません。"
    },
    {
      "indent": 0,
      "text": "2 Basic Versioning Features",
      "ja": "2つの基本的なバージョン管理機能"
    },
    {
      "indent": 3,
      "text": "Each basic versioning feature defines extensions to existing HTTP and WebDAV methods, as well as new resource types, live properties, and methods.",
      "ja": "それぞれの基本的なバージョン管理機能は、既存のHTTPおよびWebDAVのメソッドだけでなく、新しいリソースタイプ、ライブプロパティ、およびメソッドへの拡張を定義します。"
    },
    {
      "indent": 0,
      "text": "2.1 Basic Versioning Packages",
      "section_title": true,
      "ja": "2.1基本的なバージョン管理パッケージ"
    },
    {
      "indent": 3,
      "text": "A server MAY support any combination of versioning features. However, in order to minimize the complexity of a WebDAV basic versioning client, a WebDAV basic versioning server SHOULD support one of the following three \"packages\" (feature sets):",
      "ja": "サーバーは、バージョン管理機能の任意の組み合わせをサポートするかもしれません。しかし、WebDAVの基本的なバージョン管理クライアントの複雑さを最小限に抑えるために、WebDAVの基本的なバージョン管理サーバーは、次の3つの「パッケージ」（機能セット）のいずれかをサポートする必要があります。"
    },
    {
      "indent": 3,
      "text": "- Core-Versioning Package: version-control - Basic-Server-Workspace Package: version-control, workspace, version-history, checkout - Basic-Client-Workspace Package: version-control, working-resource, update, label",
      "ja": " - コアバージョン管理パッケージ：バージョン管理 - 基本-サーバーワークスペースパッケージ：バージョン管理、ワークスペース、バージョン履歴、チェックアウト - 基本的なクライアント・ワークスペースパッケージ：バージョン管理、労働資源、更新、ラベル"
    },
    {
      "indent": 3,
      "text": "The core-versioning package supports linear versioning by both versioning-aware and versioning-unaware clients. A versioning-aware client can use reports and properties to access previous versions of a version-controlled resource.",
      "ja": "コア・バージョン管理パッケージは、バージョン管理を認識し、バージョン管理を認識しないクライアントの両方で線形バージョニングをサポートしています。バージョニング対応クライアントは、バージョン管理されたリソースの以前のバージョンにアクセスするには、レポートやプロパティを使用することができます。"
    },
    {
      "indent": 3,
      "text": "The basic workspace packages support parallel development of version-controlled resources. Each client has its own configuration of the shared version-controlled resources, and can make changes to its configuration without disturbing that of another client.",
      "ja": "基本的なワークスペースパッケージはバージョン管理されたリソースの並行開発をサポートしています。各クライアントは、共有バージョン管理リソースの独自の構成を有しており、他のクライアントのそれを乱すことなく、その構成に変更を加えることができます。"
    },
    {
      "indent": 3,
      "text": "In the basic-server-workspace package, all persistent state is maintained on the server. Each client has its own workspace resource allocated on the server, where each workspace identifies a configuration of the shared version-controlled resources. Each client makes changes to its workspace, and can transfer changes when appropriate from one workspace to another. The server workspace package is appropriate for clients with no local persistent state, or for clients that wish to expose their working configurations to other clients.",
      "ja": "基本的なサーバ・ワークスペースパッケージでは、すべての永続状態は、サーバー上で維持されています。各クライアントは、各ワークスペースが共有バージョン管理されたリソースの構成を特定し、サーバー上で割り当てられた独自のワークスペースのリソースを持っています。各クライアントは、そのワークスペースに変更を行い、別のワークスペースから適切な変更を転送することができます。サーバ・ワークスペースパッケージは、ローカル永続的な状態で、または他のクライアントにその作業の設定を公開したいクライアントのためのクライアントのために適切です。"
    },
    {
      "indent": 3,
      "text": "In the basic-client-workspace package, each client maintains in local persistent storage the state for its configuration of the shared version-controlled resources. When a client is ready to make its changes visible to other clients, it allocates a set of \"working resources\" on the server, updates the content and dead properties of these working resources, and then uses the set of working resources to update the version-controlled resources. The working resources are used, instead of directly updating the version-controlled resources, so that sets of consistent updates can be prepared in parallel by multiple clients. Also, a working resource allows a client to prepare a single update that requires multiple server requests (e.g. updating both the content and dead properties of a resource requires both a PUT and a PROPPATCH). The client workspace package simplifies the server implementation by requiring each client to maintain its own namespace, but this requires that the clients have local persistent state, and does not allow clients to expose their working configurations to other clients.",
      "ja": "基本的なクライアント・ワークスペースパッケージでは、各クライアントは、ローカル永続ストレージ内の共有バージョン管理リソースの設定のための状態を維持します。クライアントが他のクライアントにその変更が見えるようにする準備ができているとき、それは、サーバー上の「作業リソース」のセットを割り当て、これらの作業のリソースの内容とデッドプロパティを更新し、バージョンを更新する作業リソースのセットを使用していますリソースを-controlled。一貫性のある更新のセットが複数のクライアントによって並列に調製することができるように作業リソースは、代わりに直接バージョン管理リソースの更新、使用されています。また、作業リソースは、クライアントが複数のサーバ要求を（例えば、リソースの内容とデッドプロパティの両方を更新するPUTやPROPPATCHの両方が必要です）を必要と単一の更新を準備することができます。クライアント・ワークスペースのパッケージには、独自の名前空間を維持するために、各クライアントに要求することによって、サーバの実装を簡素化しますが、これは、クライアントがローカルの持続的な状態を持っていることを必要とし、クライアントが他のクライアントにその作業の設定を公開することはできません。"
    },
    {
      "indent": 3,
      "text": "A server that supports both basic workspace packages will interoperate with all basic versioning clients.",
      "ja": "基本的なワークスペースパッケージの両方をサポートするサーバーは、すべての基本的なバージョン管理クライアントと相互運用します。"
    },
    {
      "indent": 0,
      "text": "2.2 Basic Versioning Semantics",
      "section_title": true,
      "ja": "2.2基本的なバージョン管理のセマンティクス"
    },
    {
      "indent": 0,
      "text": "2.2.1 Creating a Version-Controlled Resource",
      "section_title": true,
      "ja": "2.2.1バージョン管理されたリソースを作成します"
    },
    {
      "indent": 3,
      "text": "In order to track the history of the content and dead properties of a versionable resource, a user can put the resource under version control with a VERSION-CONTROL request. A VERSION-CONTROL request performs three distinct operations:",
      "ja": "コンテンツおよびバージョン管理リソースの死者性質の履歴を追跡するためには、ユーザーは、VERSION-CONTROLリクエストでバージョン管理下のリソースを置くことができます。バージョン管理要求は、3つの異なる操作を実行します。"
    },
    {
      "indent": 3,
      "text": "1) It creates a new \"version history resource\". In basic versioning, a version history resource is not assigned a URL, and hence is not visible in the http scheme URL space. However, when the version-history feature (see Section 5) is supported, this changes, and each version history resource is assigned a new distinct and unique server-defined URL.",
      "ja": "1）これは、新しい「バージョン履歴リソース」を作成します。基本的なバージョン管理では、バージョン履歴リソースは、URLが割り当てられないので、HTTPスキームのURLスペースに表示されません。バージョン履歴機能は、（セクション5を参照）がサポートされている場合しかし、これは変化し、各バージョン履歴リソースは、新しいはっきりと一意のサーバー定義のURLが割り当てられます。"
    },
    {
      "indent": 3,
      "text": "2) It creates a new \"version resource\" and adds it to the new version history resource. The body and dead properties of the new version resource are a copy of those of the versionable resource.",
      "ja": "2）これは、新しい「バージョンリソース」を作成し、新しいバージョン履歴リソースに追加します。新しいバージョンリソースのボディとデッドプロパティは、バージョン管理、リソースのそれらのコピーです。"
    },
    {
      "indent": 6,
      "text": "The server assigns the new version resource a new distinct and unique URL.",
      "ja": "サーバーは、新しいバージョンのリソース新しいはっきりとユニークなURLが割り当てられます。"
    },
    {
      "indent": 3,
      "text": "3) It converts the versionable resource into a \"version-controlled resource\". The version-controlled resource continues to be identified by the same URL that identified it as a versionable resource. As part of this conversion, it adds a DAV:checked-in property, whose value contains the URL of the new version resource.",
      "ja": "3）これは、「バージョン管理されたリソース」にバージョン管理リソースを変換します。バージョン管理されたリソースは、バージョン管理、リソースとしてそれを識別し、同じURLで識別され続けています。チェックインされたプロパティ、値が新しいバージョンリソースのURLが含まれています。この変換の一環として、それはDAVを追加します。"
    },
    {
      "indent": 3,
      "text": "Note that a versionable resource and a version-controlled resource are not new types of resources (i.e. they introduce no new DAV:resourcetype), but rather they are any type of resource that supports the methods and live properties defined for them in this document, in addition to all the methods and live properties implied by their DAV:resourcetype. For example, a collection (whose DAV:resourcetype is DAV:collection) is a versionable resource if it supports the VERSION-CONTROL method, and is a version-controlled resource if it supports the version-controlled resource methods and live properties.",
      "ja": "、のではなく、彼らはこの文書で彼らのために定義されたメソッドやライブプロパティをサポートしているリソースのいずれかのタイプです：バージョン管理リソースとバージョン管理されたリソースは、リソースの新しいタイプではないことに注意してください（resourcetypeのすなわち、それらは全く新しいDAVを導入していません） resourcetypeの：彼らのDAVによって暗示されるすべてのメソッドとライブプロパティに加えインチたとえば、コレクションにはVERSION-CONTROLメソッドをサポートしている場合はバージョン管理可能資源であり、それはバージョン管理されたリソースのメソッドとライブプロパティをサポートしている場合は、バージョン管理されたリソースである（そのDAV：コレクション：resourcetypeのは、DAVです）。"
    },
    {
      "indent": 3,
      "text": "In the following example, foo.html is a versionable resource that is put under version control. After the VERSION-CONTROL request succeeds, there are two additional resources: a new version history resource and a new version resource in that version history. The versionable resource is converted into a version-controlled resource, whose DAV:checked-in property identifies the new version resource.",
      "ja": "次の例では、foo.htmlというバージョン管理下に置かれているバージョン管理リソースです。新バージョン履歴リソースとそのバージョンの歴史の中で新しいバージョンのリソース：VERSION-CONTROLリクエストが成功した後、二つの追加リソースがあります。チェックインされたプロパティの新しいバージョンのリソースを識別する：バージョン管理リソースは、そのDAVバージョン管理されたリソースに変換されます。"
    },
    {
      "indent": 3,
      "text": "The content and dead properties of a resource are represented by the symbol appearing inside the box for that resource (e.g., \"S1\" in the following example).",
      "ja": "リソースの内容とデッドプロパティは、そのリソース（以下の例では、例えば、「S1」）のために箱の中に現れる記号で表されています。"
    },
    {
      "indent": 12,
      "text": "===VERSION-CONTROL==>",
      "ja": "=== VERSION-CONTROL ==>"
    },
    {
      "indent": 9,
      "text": "             |                       +----+ version\n             |   version-            |    | history\nversionable  |   controlled          +----+ resource\nresource     |   resource              |\n/foo.html    |   /foo.html             |\n             |                         v\n  +----+     |     +----+ checked-in +----+ version\n  | S1 |     |     | S1 |----------->| S1 | resource\n  +----+     |     +----+            +----+ /his/73/ver/1",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Thus, whereas before the VERSION-CONTROL request there was only one, non-version-controlled resource, after VERSION-CONTROL there are three separate, distinct resources, each containing its own state and properties: the version-controlled resource, the version resource, and the version history resource. Since the version-controlled resource and the version resource are separate, distinct resources, when a method is applied to a version-controlled resource, it is only applied to that version-controlled resource, and is not applied to the version resource that is currently identified by the DAV:checked-in property of that version-controlled resource. Although the content and dead properties of a checked-in version-controlled resource are required to be the same as those of its current DAV:checked-in version, its live properties may differ. An implementation may optimize storage by retrieving the content and dead properties of a checked-in version-controlled resource from its current DAV:checked-in version rather than storing them in the version-controlled resource, but this is just an implementation optimization.",
      "ja": "したがって、バージョン管理要求の前に存在したのに対し、唯一、非バージョン管理されたリソース、3つの別々の、異なるリソースがバージョン管理した後、それぞれを含む自身の状態及び特性：バージョン管理されたリソース、バージョンリソース、およびバージョン履歴リソース。バージョン管理されたリソースとバージョンリソースは別個、個別のリソースがあるので、この方法は、バージョン管理されたリソースに適用する場合には、それだけでバージョン管理されたリソースに適用され、現在のバージョンのリソースに適用されていませんDAVで識別：チェックインされているバージョン管理されたリソースのプロパティ。チェックインされたバージョン管理されたリソースの内容とデッドプロパティは、現在のDAVのものと同じであることが要求されていますが：チェックインされたバージョン、そのライブの特性が異なる場合があります。実装は、現在のDAVからチェックインされたバージョン管理されたリソースの内容とデッドプロパティを取得することで、ストレージを最適化することがあります。チェックインされたバージョンではなく、バージョン管理されたリソースに格納するよりも、これは単なる実装の最適化です。"
    },
    {
      "indent": 3,
      "text": "Normally, a resource is placed under version control with an explicit VERSION-CONTROL request. A server MAY automatically place every new versionable resource under version control. In this case, the resulting state on the server MUST be the same as if the client had explicitly applied a VERSION-CONTROL request to the versionable resource.",
      "ja": "通常、リソースは明示的なバージョン管理要求にバージョン管理下に置かれます。サーバは自動的にバージョン管理下にすべての新しいバージョン管理リソースを配置することがあります。クライアントが明示的にバージョン管理リソースへのVERSION-CONTROLリクエストを適用したかのようにこの場合は、サーバー上の結果の状態は同じでなければなりません。"
    },
    {
      "indent": 0,
      "text": "2.2.2 Modifying a Version-Controlled Resource",
      "section_title": true,
      "ja": "2.2.2バージョン管理されたリソースの変更"
    },
    {
      "indent": 3,
      "text": "In order to use methods like PUT and PROPPATCH to directly modify the content or dead properties of a version-controlled resource, the version-controlled resource must first be checked out. When the checked-out resource is checked in, a new version is created in the version history of that version-controlled resource. The version that was checked out is remembered as the predecessor of the new version.",
      "ja": "直接バージョン管理されたリソースの内容や死者の特性を変更するためにPUTやPROPPATCHのようなメソッドを使用するためには、バージョン管理されたリソースは、最初にチェックアウトする必要があります。チェックアウトリソースにチェックインすると、新しいバージョンは、そのバージョン管理されたリソースのバージョン履歴に作成されます。チェックアウトされたバージョンは、新しいバージョンの前身として記憶されます。"
    },
    {
      "indent": 3,
      "text": "The DAV:auto-version property (see Sections 3.2.2) of a checked-in version-controlled resource determines how it responds to a method that attempts to modify its content or dead properties. Possible responses include:",
      "ja": "DAV：自動バージョンプロパティは、チェックインされたバージョン管理されたリソースのそれはその内容や死者のプロパティを変更しようとする方法にどのように応答するかを判断する（セクション3.2.2を参照してください）。可能な応答は以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "- Fail the request. The resource requires an explicit CHECKOUT request for it to be modified (see Sections 4 and 9.2.1).",
      "ja": " - 要求を失敗。リソースは、それが（セクション4及び9.2.1を参照）変更するための明示的なチェックアウト要求を必要とします。"
    },
    {
      "indent": 3,
      "text": "- Automatically checkout the resource, perform the modification, and automatically checkin the resource. This ensures that every state of the resource is tracked by the server, but can result in an excessive number of versions being created.",
      "ja": " - 自動的に、リソースをチェックアウト変更を行うと、自動的にリソースをチェックイン。これは、リソースのすべての状態がサーバによって追跡されることを保証するが、作成されたバージョンの過剰な数をもたらすことができます。"
    },
    {
      "indent": 3,
      "text": "- Automatically checkout the resource, perform the modification, and then if the resource is not write-locked, automatically checkin the resource. If the resource is write-locked, it remains checked-out until the write-lock is removed (either explicitly through a subsequent UNLOCK request or implicitly through a time-out of the write-lock). This helps a locking client avoid the proliferation of versions, while still allowing a non-locking client to update the resource.",
      "ja": " - 自動的に、リソースをチェックアウト変更を実行し、リソースが書き込みロックされていない場合は、その後、自動的にリソースをチェックイン。リソースが書き込みロックされている場合、それは書き込みロックされるまでにチェックアウトのまま（明示的に、後続のUNLOCK要求を介して、または暗黙的に書き込みロックのタイムアウトによる）が除去されます。これはまだ非ロッククライアントがリソースを更新できるようにしながらロッククライアントは、バージョンの増殖を防ぐことができます。"
    },
    {
      "indent": 3,
      "text": "- Automatically checkout the resource, perform the modification, and then leave the resource checked out. If the resource is write-locked, it will be automatically checked in when the write-lock is removed, but an explicit CHECKIN operation (see Section 4.4) is required for a non-write-locked resource. This minimizes the number of new versions that will be created by a versioning unaware client, but only a versioning aware client can create new versions of a non-write-locked resource.",
      "ja": " - 自動的に、リソースをチェックアウト変更を実行して、チェックアウトしたリソースを残します。リソースが書き込みロックされている場合は書き込みロックが除去されると、それが自動的にチェックインされますが、明示的なチェックイン操作（4.4節を参照）非書き込みロックされたリソースのために必要とされます。これは、バージョン管理意識しないクライアントによって作成される新しいバージョンの数を最小限に抑えるが、唯一のバージョン管理対応クライアントは、非書き込みロックされたリソースの新しいバージョンを作成することができます。"
    },
    {
      "indent": 3,
      "text": "- Fail the request unless the resource is write-locked. If it is write-locked, automatically checkout the resource and perform the modification. The resource is automatically checked in when the write-lock is removed. This minimizes the number of new versions that will be created by a versioning unaware client, but never automatically checks out a resource that will not subsequently be automatically checked in.",
      "ja": " - リソースが書き込みロックされている場合を除き、要求を失敗。それは書き込みロックされている場合は、自動的にリソースをチェックアウトし、変更を実行します。リソースが自動的に書き込みロックが除去されるときにチェックされています。これは、バージョン管理意識しないクライアントによって作成される新しいバージョンの数を最小限に抑えますが、自動的にその後、自動的にチェックされませんリソースをチェックアウトすることはありません。"
    },
    {
      "indent": 3,
      "text": "The following diagram illustrates the effect of the checkout/checkin process on a version-controlled resource and its version history. The symbol inside a box (S1, S2, S3) represents the current content and dead properties of the resource represented by that box. The symbol next to a box (V1, V2, V3) represents the URL for that resource.",
      "ja": "次の図は、バージョン管理されたリソースとそのバージョン履歴にチェックアウト/チェックイン処理の効果を示します。ボックス（S1、S2、S3）内部シンボルは、そのボックスによって表されるリソースの現在の内容とデッドプロパティを表します。ボックス（V1、V2、V3）に次のシンボルは、そのリソースのURLを表します。"
    },
    {
      "indent": 14,
      "text": "===checkout==> ===PUT==> ===checkin==>",
      "ja": "===チェックアウト==> === PUT ==> ===チェックイン==>"
    },
    {
      "indent": 11,
      "text": "/foo.html (version-controlled resource)",
      "ja": "/foo.html（バージョン管理されたリソース）"
    },
    {
      "indent": 9,
      "text": "   +----+    |    +----+    |    +----+    |    +----+\n   | S2 |    |    | S2 |    |    | S3 |    |    | S3 |\n   +----+    |    +----+    |    +----+    |    +----+\nChecked-In=V2|Checked-Out=V2|Checked-Out=V2|Checked-In=V3",
      "raw": true
    },
    {
      "indent": 11,
      "text": "/his/73 (version history for /foo.html)",
      "ja": "/彼/ 73（/foo.htmlのバージョン履歴）"
    },
    {
      "indent": 11,
      "text": "+----+     |   +----+     |   +----+     |   +----+\n| S1 | V1  |   | S1 | V1  |   | S1 | V1  |   | S1 | V1\n+----+     |   +----+     |   +----+     |   +----+\n   |       |      |       |      |       |      |\n   |       |      |       |      |       |      |\n+----+     |   +----+     |   +----+     |   +----+\n| S2 | V2  |   | S2 | V2  |   | S2 | V2  |   | S2 | V2\n+----+     |   +----+     |   +----+     |   +----+\n           |              |              |      |\n           |              |              |      |\n           |              |              |   +----+\n           |              |              |   | S3 | V3\n           |              |              |   +----+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Note that a version captures only a defined subset of the state of a resource. In particular, a version of a basic resource captures its content and dead properties, but not its live properties.",
      "ja": "バージョンは、リソースの状態の唯一の定義されたサブセットを捕獲することに注意してください。具体的には、基本的なリソースのバージョンは、その内容とデッドプロパティではなく、そのライブのプロパティをキャプチャします。"
    },
    {
      "indent": 0,
      "text": "2.2.3 Reporting",
      "section_title": true,
      "ja": "2.2.3報告"
    },
    {
      "indent": 3,
      "text": "Some versioning information about a resource requires that parameters be specified along with that request for information. Included in basic versioning is the required support for an extensible reporting mechanism, which includes a REPORT method as well as a live property for determining what reports are supported by a particular resource. The REPORT method is required by versioning, but it can be used in non-versioning WebDAV extensions.",
      "ja": "リソースに関するいくつかのバージョン情報は、パラメータは、情報のためにその要求とと​​もに指定されている必要があります。基本的なバージョン管理に含まREPORT方法だけでなく、レポートは特定のリソースによってサポートされているものを決定するためのライブプロパティが含まれて拡張可能なレポートメカニズムに必要なサポートです。 REPORT方法は、バージョン管理で必要とされるが、それは非バージョニングのWebDAV拡張に使用することができます。"
    },
    {
      "indent": 3,
      "text": "To allow a client to query the properties of all versions in the version history of a specified version-controlled resource, basic versioning provides the DAV:version-tree report (see Section 3.7). A more powerful version history reporting mechanism is provided by applying the DAV:expand-property report (see Section 3.8) to a version history resource (see Section 5).",
      "ja": "クライアントが指定されたバージョン管理されたリソースのバージョン履歴にすべてのバージョンのプロパティを照会できるようにするには、基本的なバージョン管理は、DAVを提供しています。バージョンツリーレポートを（3.7節を参照してください）。バージョン履歴リソースへの拡大・プロパティをレポート（3.8節を参照してください）（第5節を参照してください）：メカニズムを報告し、より強力なバージョン履歴は、DAVを適用することによって提供されます。"
    },
    {
      "indent": 0,
      "text": "3 Version-Control Feature",
      "ja": "3バージョン管理機能"
    },
    {
      "indent": 3,
      "text": "The version-control feature provides support for putting a resource under version control, creating an associated version-controlled resource and version history resource as described in Section 2.2.1. A server indicates that it supports the version-control feature by including the string \"version-control\" as a field in the DAV header in the response to an OPTIONS request. The version-control feature MUST be supported if any other versioning feature is supported.",
      "ja": "バージョン管理機能は、セクション2.2.1に記載したように関連するバージョン管理されたリソースとバージョン履歴リソースを作成し、バージョン管理下にリソースを置くためのサポートを提供します。サーバは、OPTIONS要求に応答してDAVヘッダ内のフィールドとして文字列「バージョン管理」を含むことにより、バージョン管理機能をサポートしていることを示しています。他のバージョン管理機能がサポートされている場合、バージョンコントロール機能をサポートしなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.1 Additional Resource Properties",
      "section_title": true,
      "ja": "3.1追加のリソースのプロパティ"
    },
    {
      "indent": 3,
      "text": "The version-control feature introduces the following REQUIRED properties for any WebDAV resource.",
      "ja": "バージョン管理機能では、任意のWebDAVのリソースのために、次の必要なプロパティを紹介します。"
    },
    {
      "indent": 0,
      "text": "3.1.1 DAV:comment",
      "section_title": true,
      "ja": "3.1.1 DAV：どのように"
    },
    {
      "indent": 3,
      "text": "This property is used to track a brief comment about a resource that is suitable for presentation to a user. The DAV:comment of a version can be used to indicate why that version was created.",
      "ja": "このプロパティは、ユーザーへの表示に適しているリソースについての簡単なコメントを追跡するために使用されます。 DAV：バージョンのコメントは、そのバージョンが作成された理由を示すために使用することができます。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT comment (#PCDATA)> PCDATA value: string",
      "ja": "<！ELEMENTコメント（#PCDATA）> PCDATA値：文字列"
    },
    {
      "indent": 0,
      "text": "3.1.2 DAV:creator-displayname",
      "section_title": true,
      "ja": "3.1.2 DAV：クリエーター-のDisplayName"
    },
    {
      "indent": 3,
      "text": "This property contains a description of the creator of the resource that is suitable for presentation to a user. The DAV:creator-displayname of a version can be used to indicate who created that version.",
      "ja": "このプロパティは、ユーザーへの表示に適しているリソースの作成者の記述が含まれています。 DAV：バージョンの作成者、DisplayNameには、そのバージョンの作成者を示すために使用することができます。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT creator-displayname (#PCDATA)> PCDATA value: string",
      "ja": "<！ELEMENT制作者のDisplayName（#PCDATA）> PCDATA値：文字列"
    },
    {
      "indent": 0,
      "text": "3.1.3 DAV:supported-method-set (protected)",
      "section_title": true,
      "ja": "3.1.3 DAV：サポートされている法セット（保護）"
    },
    {
      "indent": 3,
      "text": "This property identifies the methods that are supported by the resource. A method is supported by a resource if there is some state of that resource for which an application of that method will successfully satisfy all postconditions of that method, including any additional postconditions added by the features supported by that resource.",
      "ja": "このプロパティは、リソースによってサポートされているメソッドを識別します。その方法のアプリケーションが正常にそのリソースによってサポートされる機能によって追加された任意の追加の事後条件を含む、その方法の全ての事後条件が満足されるそのリソースの一部状態がある場合、方法は、リソースによってサポートされています。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT supported-method-set (supported-method*)> <!ELEMENT supported-method ANY> <!ATTLIST supported-method name NMTOKEN #REQUIRED> name value: a method name",
      "ja": "<！ELEMENTサポート-方法ANY> <！ELEMENTサポート-法-セット（サポート-法*）> <ATTLISTサポート・メソッド名NMTOKEN #REQUIRED！>名前値：メソッド名"
    },
    {
      "indent": 0,
      "text": "3.1.4 DAV:supported-live-property-set (protected)",
      "section_title": true,
      "ja": "3.1.4 DAV：サポートされているライブ・プロパティ・セット（保護）"
    },
    {
      "indent": 3,
      "text": "This property identifies the live properties that are supported by the resource. A live property is supported by a resource if that property has the semantics defined for that property. The value of this property MUST identify all live properties defined by this document that are supported by the resource, and SHOULD identify all live properties that are supported by the resource.",
      "ja": "このプロパティは、リソースによってサポートされているライブのプロパティを識別します。そのプロパティは、そのプロパティに定義された意味を持っている場合、ライブプロパティは、リソースによってサポートされています。このプロパティの値は、リソースによってサポートされています。この文書で定義されたすべてのライブのプロパティを特定しなければなりませんし、リソースによってサポートされているすべてのライブのプロパティを特定する必要があります。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT supported-live-property-set (supported-live-property*)> <!ELEMENT supported-live-property name> <!ELEMENT prop ANY> ANY value: a property element type",
      "ja": "<！ELEMENTがANYを支える> <！ELEMENTサポート・ライブ・プロパティ・セット（サポート-ライブプロパティ*）> <！ELEMENTサポート-ライブプロパティ名>任意の値：プロパティの要素の型"
    },
    {
      "indent": 0,
      "text": "3.1.5 DAV:supported-report-set (protected)",
      "section_title": true,
      "ja": "3.1.5 DAV：サポート・レポート・セット（保護）"
    },
    {
      "indent": 3,
      "text": "This property identifies the reports that are supported by the resource.",
      "ja": "このプロパティは、リソースによってサポートされている報告書を識別します。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT supported-report-set (supported-report*)> <!ELEMENT supported-report report> <!ELEMENT report ANY> ANY value: a report element type",
      "ja": "<！ELEMENTサポート-レポート設定（サポート・レポート*）> <！ELEMENTサポート・レポートのレポート> <！ELEMENT ANYレポート> ANY値：レポート要素タイプ"
    },
    {
      "indent": 0,
      "text": "3.2 Version-Controlled Resource Properties",
      "section_title": true,
      "ja": "3.2バージョン管理されたリソースのプロパティ"
    },
    {
      "indent": 3,
      "text": "The version-control feature introduces the following REQUIRED properties for a version-controlled resource.",
      "ja": "バージョン管理機能は、バージョン管理されたリソースのために、次の必要な特性を導入します。"
    },
    {
      "indent": 0,
      "text": "3.2.1 DAV:checked-in (protected)",
      "section_title": true,
      "ja": "3.2.1 DAV：チェックインされた（保護）"
    },
    {
      "indent": 3,
      "text": "This property appears on a checked-in version-controlled resource, and identifies a version that has the same content and dead properties as the version-controlled resource. This property is removed when the resource is checked out, and then added back (identifying a new version) when the resource is checked back in.",
      "ja": "このプロパティは、チェックインされたバージョン管理されたリソースに表示され、バージョン管理されたリソースと同じ内容とデッドプロパティを持つバージョンを識別します。リソースがチェックアウトされ、その後、リソースがバックチェックインされる場合（新しいバージョンを識別する）バック追加された場合、このプロパティは、除去されます。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT checked-in (href)>",
      "ja": "<！ELEMENTにチェックイン（HREF）>"
    },
    {
      "indent": 0,
      "text": "3.2.2 DAV:auto-version",
      "section_title": true,
      "ja": "3.2.2 DAV：自動バージョン"
    },
    {
      "indent": 3,
      "text": "If the DAV:auto-version value is DAV:checkout-checkin, when a modification request (such as PUT/PROPPATCH) is applied to a checked-in version-controlled resource, the request is automatically preceded by a checkout and followed by a checkin operation.",
      "ja": "自動バージョン値DAVである：DAVの場合、チェックアウト・チェックイン、変更要求を（例えばPUT / PROPPATCHなど）に適用されるチェックインバージョン管理されたリソース、要求が自動的によりチェックアウトが先行し、続いてチェックイン操作。"
    },
    {
      "indent": 3,
      "text": "If the DAV:auto-version value is DAV:checkout-unlocked-checkin, when a modification request is applied to a checked-in version-controlled resource, the request is automatically preceded by a checkout operation. If the resource is not write-locked, the request is automatically followed by a checkin operation.",
      "ja": "自動バージョン値DAVである：DAVの場合はチェックアウト・アンロック・チェックイン、変更要求がチェックインバージョン管理されたリソースに適用され、要求は自動的にチェックアウト操作によって先行されます。リソースが書き込みロックされていない場合、要求は自動的にチェックイン操作が続いています。"
    },
    {
      "indent": 3,
      "text": "If the DAV:auto-version value is DAV:checkout, when a modification request is applied to a checked-in version-controlled resource, the request is automatically preceded by a checkout operation.",
      "ja": "自動バージョン値DAVである：DAVの場合チェックアウト変更要求がチェックインバージョン管理されたリソースに適用した場合、要求は自動的にチェックアウト操作によって先行されます。"
    },
    {
      "indent": 3,
      "text": "If the DAV:auto-version value is DAV:locked-checkout, when a modification request is applied to a write-locked checked-in version-controlled resource, the request is automatically preceded by a checkout operation.",
      "ja": "自動バージョン値DAVである：DAVの場合ロックアウト変更要求が書き込みロックチェックインバージョン管理されたリソースに適用した場合、要求は自動的にチェックアウト操作によって先行されます。"
    },
    {
      "indent": 3,
      "text": "If an update to a write-locked checked-in resource is automatically preceded by a checkout of that resource, the checkout is associated with the write lock. When this write lock is removed (e.g. from an UNLOCK or a lock timeout), if the resource has not yet been checked in, the removal of the write lock is automatically preceded by a checkin operation.",
      "ja": "書き込みロックにチェックインのリソースへの更新が自動的にそのリソースのチェックアウトが付いている場合は、チェックアウトは、書き込みロックに関連付けられています。この書き込みロックが削除されたときにリソースがまだチェックインされていない場合（例えばUNLOCKまたはロック・タイムアウトから）、書き込みロックの除去が自動的にチェックイン操作によって先行されます。"
    },
    {
      "indent": 3,
      "text": "A server MAY refuse to allow the value of the DAV:auto-version property to be modified, or MAY only support values from a subset of the valid values.",
      "ja": "自動バージョンプロパティ変更する、または有効な値のサブセットからの値をサポート可能性がありますサーバーはDAVの値ができるように拒否することができます。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT auto-version (checkout-checkin | checkout-unlocked-checkin | checkout | locked-checkout)? > <!ELEMENT checkout-checkin EMPTY> <!ELEMENT checkout-unlocked-checkin EMPTY> <!ELEMENT checkout EMPTY> <!ELEMENT locked-checkout EMPTY>",
      "ja": "<！ELEMENT自動バージョン（チェックアウト、チェックイン|レジロック解除 - チェックイン|チェックアウト|ロック・チェックアウト）？ > <！ELEMENTチェックアウト・チェックインEMPTY> <！ELEMENTチェックアウトロック解除 - チェックインEMPTY> <！ELEMENTチェックアウトEMPTY> <！ELEMENTロック・チェックアウトEMPTY>"
    },
    {
      "indent": 0,
      "text": "3.3 Checked-Out Resource Properties",
      "section_title": true,
      "ja": "3.3チェックアウトリソースプロパティ"
    },
    {
      "indent": 3,
      "text": "The version-control feature introduces the following REQUIRED properties for a checked-out resource.",
      "ja": "バージョン管理機能では、チェックアウトされたリソースのために、次の必要なプロパティを紹介します。"
    },
    {
      "indent": 0,
      "text": "3.3.1 DAV:checked-out (protected)",
      "section_title": true,
      "ja": "3.3.1 DAV：チェックアウト（保護）"
    },
    {
      "indent": 3,
      "text": "This property identifies the version that was identified by the DAV:checked-in property at the time the resource was checked out. This property is removed when the resource is checked in.",
      "ja": "チェックインされたプロパティリソースがチェックアウトされた時：このプロパティは、DAVで識別されたバージョンを識別します。リソースがチェックインされている場合、このプロパティは削除されます。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT checked-out (href)>",
      "ja": "<！ELEMENTチェックアウト（HREF）>"
    },
    {
      "indent": 0,
      "text": "3.3.2 DAV:predecessor-set",
      "section_title": true,
      "ja": "3.3.2 DAV：前身セット"
    },
    {
      "indent": 3,
      "text": "This property determines the DAV:predecessor-set property of the version that results from checking in this resource.",
      "ja": "このプロパティは、DAVを決定します。このリソースでチェックした結果バージョンの前身・プロパティセットを。"
    },
    {
      "indent": 3,
      "text": "A server MAY reject attempts to modify the DAV:predecessor-set of a version-controlled resource.",
      "ja": "バージョン管理されたリソースの前身セット：サーバがDAVを変更しようとする試みを拒否することがあります。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT predecessor-set (href+)>",
      "ja": "<！ELEMENTの前身セット（HREF +）>"
    },
    {
      "indent": 0,
      "text": "3.4 Version Properties",
      "section_title": true,
      "ja": "3.4バージョンのプロパティ"
    },
    {
      "indent": 3,
      "text": "The version-control feature introduces the following REQUIRED properties for a version.",
      "ja": "バージョン管理機能は、バージョンのために、次の必要なプロパティを紹介します。"
    },
    {
      "indent": 0,
      "text": "3.4.1 DAV:predecessor-set (protected)",
      "section_title": true,
      "ja": "3.4.1 DAV：先行セット（保護）"
    },
    {
      "indent": 3,
      "text": "This property identifies each predecessor of this version. Except for the root version, which has no predecessors, each version has at least one predecessor.",
      "ja": "このプロパティは、このバージョンの各前身を識別します。いかなる先行を有していないルートバージョンを除き、各バージョンは、少なくとも一つの先行を有します。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT predecessor-set (href*)>",
      "ja": "<！ELEMENT前身セット（HREF *）>"
    },
    {
      "indent": 0,
      "text": "3.4.2 DAV:successor-set (computed)",
      "section_title": true,
      "ja": "3.4.2 DAV：後継セット（計算）"
    },
    {
      "indent": 3,
      "text": "This property identifies each version whose DAV:predecessor-set identifies this version.",
      "ja": "前身セットこのバージョンを識別します。このプロパティは、そのDAV各バージョンを識別します。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT successor-set (href*)>",
      "ja": "<！ELEMENT後継セット（HREF *）>"
    },
    {
      "indent": 0,
      "text": "3.4.3 DAV:checkout-set (computed)",
      "section_title": true,
      "ja": "3.4.3 DAV：チェックアウトセット（計算）"
    },
    {
      "indent": 3,
      "text": "This property identifies each checked-out resource whose DAV:checked-out property identifies this version.",
      "ja": "チェックアウトプロパティは、このバージョンを識別します。このプロパティは、そのDAVそれぞれにチェックアウトされたリソースを識別します。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT checkout-set (href*)>",
      "ja": "<！ELEMENTチェックアウトセット（HREF *）>"
    },
    {
      "indent": 0,
      "text": "3.4.4 DAV:version-name (protected)",
      "section_title": true,
      "ja": "3.4.4 DAV：バージョン名（保護）"
    },
    {
      "indent": 3,
      "text": "This property contains a server-defined string that is different for each version in a given version history. This string is intended for display for a user, unlike the URL of a version, which is normally only used by a client and not displayed for a user.",
      "ja": "このプロパティは、特定のバージョンの歴史の中で、バージョンごとに異なるサーバーに定義された文字列が含まれています。この文字列は、通常、クライアントだけで使用され、ユーザに表示されていないバージョンのURLとは異なり、ユーザーの表示のために意図されます。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT version-name (#PCDATA)> PCDATA value: string",
      "ja": "<！ELEMENTバージョン名（#PCDATA）> PCDATA値：文字列"
    },
    {
      "indent": 0,
      "text": "3.5 VERSION-CONTROL Method",
      "section_title": true,
      "ja": "3.5 VERSION-CONTROLメソッド"
    },
    {
      "indent": 3,
      "text": "A VERSION-CONTROL request can be used to create a version-controlled resource at the request-URL. It can be applied to a versionable resource or to a version-controlled resource.",
      "ja": "VERSION-CONTROLリクエストは、リクエストURLでバージョン管理されたリソースを作成するために使用することができます。これは、バージョン管理、リソースまたはバージョン管理されたリソースに適用することができます。"
    },
    {
      "indent": 3,
      "text": "If the request-URL identifies a versionable resource, a new version history resource is created, a new version is created whose content and dead properties are copied from the versionable resource, and the resource is given a DAV:checked-in property that is initialized to identify this new version.",
      "ja": "リクエストURLがバージョン管理リソースを識別した場合、新しいバージョン履歴リソースが作成され、新しいバージョンがその内容とデッドプロパティはバージョン管理リソースからコピーされ作成され、リソースがDAVを与えられます。チェックインされたプロパティに初期化されていますこの新しいバージョンを識別します。"
    },
    {
      "indent": 3,
      "text": "If the request-URL identifies a version-controlled resource, the resource just remains under version-control. This allows a client to be unaware of whether or not a server automatically puts a resource under version control when it is created.",
      "ja": "リクエストURLは、バージョン管理されたリソースを識別した場合、リソースはただ、バージョン管理下に残っています。これにより、クライアントは、それが作成されたときに、サーバーが自動的にバージョン管理下にリソースを置くかどうかを知らないことができるようになります。"
    },
    {
      "indent": 3,
      "text": "If a VERSION-CONTROL request fails, the server state preceding the request MUST be restored.",
      "ja": "VERSION-CONTROLリクエストが失敗した場合は、リクエストの前にサーバの状態を復元する必要があります。"
    },
    {
      "indent": 3,
      "text": "Marshalling:",
      "ja": "マーシャリング："
    },
    {
      "indent": 6,
      "text": "If a request body is included, it MUST be a DAV:version-control XML element.",
      "ja": "バージョン管理XML要素：リクエストボディが含まれている場合は、DAVをでなければなりません。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT version-control ANY>",
      "ja": "<！ELEMENTのバージョン管理ANY>"
    },
    {
      "indent": 6,
      "text": "If a response body for a successful request is included, it MUST be a DAV:version-control-response XML element. Note that this document does not define any elements for the VERSION-CONTROL response body, but the DAV:version-control-response element is defined to ensure interoperability between future extensions that do define elements for the VERSION-CONTROL response body.",
      "ja": "成功した要求に対するレスポンスボディが含まれている場合は、DAVでなければならない：バージョン管理応答XML要素。このドキュメントは、VERSION-CONTROLのレスポンスボディのための任意の要素を定義していないことに注意してください、しかし、DAV：バージョン管理 - 応答エレメントは、VERSION-CONTROLのレスポンスボディのための要素を定義します将来の拡張の間の相互運用性を確保するために定義されています。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT version-control-response ANY>",
      "ja": "<！ELEMENTバージョン制御応答ANY>"
    },
    {
      "indent": 3,
      "text": "Postconditions:",
      "ja": "事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:put-under-version-control): If the request-URL identified a versionable resource at the time of the request, the request MUST have created a new version history and MUST have created a new version resource in that version history. The resource MUST have a DAV:checked-in property that identifies the new version. The content, dead properties, and DAV:resourcetype of the new version MUST be the same as those of the resource. Note that an implementation can choose to locate the version history and version resources anywhere that it wishes. In particular, it could locate them on the same host and server as the version-controlled resource, on a different virtual host maintained by the same server, on the same host maintained by a different server, or on a different host maintained by a different server.",
      "ja": "（DAV：入れ被バージョン管理）：リクエストURLが要求時にバージョン管理リソースを識別した場合、要求は新しいバージョン履歴を作成しておく必要があり、そのバージョンの歴史の中で新しいバージョンのリソースを作成しておく必要があります。チェックインされたプロパティの新しいバージョンを識別する：リソースがDAVを持たなければなりません。コンテンツ、死者の特性、およびDAV：新しいバージョンのresourcetypeのは、リソースのものと同じでなければなりません。実装はどこでもそれが望んでいることをバージョン履歴とバージョンリソースを検索することを選択できることに注意してください。特に、別のサーバによって維持される、同じホスト上で、同一のサーバによって維持別の仮想ホストに、バージョン管理されたリソースと同じホストとサーバー上でそれらを見つけることができ、または別のホスト上の異なるによって維持しますサーバ。"
    },
    {
      "indent": 6,
      "text": "(DAV:must-not-change-existing-checked-in-out): If the request-URL identified a resource already under version control at the time of the request, the request MUST NOT change the DAV:checked-in or DAV:checked-out property of that version-controlled resource.",
      "ja": "（DAV：-ない変更 - 既存の-チェックしなければなりません・イン・アウト）：チェックインされたか、DAV：リクエストURLが要求時にすでにバージョン管理下のリソースを識別した場合、要求はDAVを変更してはいけません：そのバージョン管理されたリソースのチェックアウトプロパティ。"
    },
    {
      "indent": 0,
      "text": "3.5.1 Example - VERSION-CONTROL",
      "section_title": true,
      "ja": "3.5.1例 -  VERSION-CONTROL"
    },
    {
      "indent": 3,
      "text": ">>REQUEST",
      "ja": ">> REQUEST"
    },
    {
      "indent": 5,
      "text": "VERSION-CONTROL /foo.html HTTP/1.1 Host: www.webdav.org Content-Length: 0",
      "ja": "VERSION-CONTROL /foo.html HTTP / 1.1ホスト：www.webdav.orgのContent-Length：0"
    },
    {
      "indent": 3,
      "text": ">>RESPONSE",
      "ja": ">> RESPONSE"
    },
    {
      "indent": 5,
      "text": "HTTP/1.1 200 OK",
      "ja": "HTTP / 1.1 200 OK"
    },
    {
      "indent": 3,
      "text": "In this example, /foo.html is put under version control. A new version history is created for it, and a new version is created that has a copy of the content and dead properties of /foo.html. The DAV:checked-in property of /foo.html identifies this new version.",
      "ja": "この例では、/foo.htmlはバージョン管理下に置かれます。新バージョン履歴はそれのために作成され、新しいバージョンが/foo.htmlの内容とデッドプロパティのコピーを持って作成されます。 DAV：チェックインされた/foo.htmlのプロパティは、この新しいバージョンを識別します。"
    },
    {
      "indent": 0,
      "text": "3.6 REPORT Method",
      "section_title": true,
      "ja": "3.6報告方法"
    },
    {
      "indent": 3,
      "text": "A REPORT request is an extensible mechanism for obtaining information about a resource. Unlike a resource property, which has a single value, the value of a report can depend on additional information specified in the REPORT request body and in the REPORT request headers.",
      "ja": "レポート要求は、リソースに関する情報を取得するための拡張可能なメカニズムです。単一の値を持つリソース・プロパティとは異なり、レポートの値は、報告要求体および報告要求ヘッダに指定された追加情報に依存することができます。"
    },
    {
      "indent": 3,
      "text": "Marshalling:",
      "ja": "マーシャリング："
    },
    {
      "indent": 6,
      "text": "The body of a REPORT request specifies which report is being requested, as well as any additional information that will be used to customize the report.",
      "ja": "REPORT要求のボディには、レポートをカスタマイズするために使用されるだけでなく、任意の追加情報を要求されているレポートを指定します。"
    },
    {
      "indent": 6,
      "text": "The request MAY include a Depth header. If no Depth header is included, Depth:0 is assumed.",
      "ja": "要求は、深さのヘッダを含むかもしれません。いかなる深ヘッダが含まれていない場合、深さ：0が仮定されます。"
    },
    {
      "indent": 6,
      "text": "The response body for a successful request MUST contain the requested report.",
      "ja": "成功した要求に対する応答本体が要求されたレポートを含まなければなりません。"
    },
    {
      "indent": 6,
      "text": "If a Depth request header is included, the response MUST be a 207 Multi-Status. The request MUST be applied separately to the collection itself and to all members of the collection that satisfy the Depth value. The DAV:prop element of a DAV:response for a given resource MUST contain the requested report for that resource.",
      "ja": "奥行き要求ヘッダが含まれている場合、応答は207マルチ状態でなければなりません。リクエストは、コレクション自体に奥行き値を満たすコレクションのすべてのメンバーに個別に適用されなければなりません。 DAV：DAVの支柱要素：特定のリソースに対するレスポンスはそのリソースの要求されたレポートを含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "Preconditions:",
      "ja": "前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:supported-report): The specified report MUST be supported by the resource identified by the request-URL.",
      "ja": "（DAV：サポート-レポート）：指定されたレポートは、要求URLで識別されるリソースによってサポートしなければなりません。"
    },
    {
      "indent": 3,
      "text": "Postconditions:",
      "ja": "事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:no-modification): The REPORT method MUST NOT have changed the content or dead properties of any resource.",
      "ja": "（DAV：無修正）：REPORTメソッドは、任意のリソースの内容や死者のプロパティを変更してはなりません。"
    },
    {
      "indent": 0,
      "text": "3.7 DAV:version-tree Report",
      "section_title": true,
      "ja": "3.7 DAV：バージョンツリーレポート"
    },
    {
      "indent": 3,
      "text": "The DAV:version-tree report describes the requested properties of all the versions in the version history of a version. If the report is requested for a version-controlled resource, it is redirected to its DAV:checked-in or DAV:checked-out version.",
      "ja": "DAV：バージョンツリーのレポートは、バージョンのバージョン履歴内のすべてのバージョンの要求されたプロパティについて説明します。チェックインされたか、DAV：チェックアウトバージョンレポートは、バージョン管理されたリソースのために要求された場合、それはそのDAVにリダイレクトされます。"
    },
    {
      "indent": 3,
      "text": "The DAV:version-tree report MUST be supported by all version resources and all version-controlled resources.",
      "ja": "DAV：バージョンツリーのレポートは、すべてのバージョンのリソースとすべてのバージョン管理リソースによってサポートしなければなりません。"
    },
    {
      "indent": 3,
      "text": "Marshalling:",
      "ja": "マーシャリング："
    },
    {
      "indent": 6,
      "text": "The request body MUST be a DAV:version-tree XML element.",
      "ja": "リクエストボディは、DAVでなければならない：バージョンツリーのXML要素。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT version-tree ANY> ANY value: a sequence of zero or more elements, with at most one DAV:prop element. prop: see RFC 2518, Section 12.11",
      "ja": "<！ELEMENTバージョンツリーANY> ANY値：最大1つのDAVゼロ以上の要素の順序、：要素小道具。小道具：RFC 2518、セクション12.11を参照してください"
    },
    {
      "indent": 6,
      "text": "The response body for a successful request MUST be a DAV:multistatus XML element.",
      "ja": "multistatus XML要素：成功したリクエストのレスポンスボディは、DAVでなければなりません。"
    },
    {
      "indent": 6,
      "text": "multistatus: see RFC 2518, Section 12.9",
      "ja": "multistatus：RFC 2518を参照してください、セクション12.9"
    },
    {
      "indent": 6,
      "text": "The response body for a successful DAV:version-tree REPORT request MUST contain a DAV:response element for each version in the version history of the version identified by the request-URL.",
      "ja": "成功のためのDAVレスポンスボディ：リクエストURLによって識別されるバージョンのバージョン履歴における各バージョンの応答要素：バージョンツリーREPORT要求は、DAVを含まなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.7.1 Example - DAV:version-tree Report",
      "section_title": true,
      "ja": "3.7.1例 -  DAV：バージョンツリーレポート"
    },
    {
      "indent": 3,
      "text": "The version history drawn below would produce the following version tree report.",
      "ja": "以下描かれたバージョン履歴は、次のバージョンツリーのレポートを生成します。"
    },
    {
      "indent": 24,
      "text": "foo.html History",
      "ja": "foo.htmlという歴史"
    },
    {
      "indent": 23,
      "text": "      +---+\n      |   | V1\n      +---+\n     /     \\\n    /       \\\n+---+       +---+\n|   | V2    |   | V2.1.1\n+---+       +---+",
      "raw": true
    },
    {
      "indent": 3,
      "text": ">>REQUEST",
      "ja": ">> REQUEST"
    },
    {
      "indent": 5,
      "text": "REPORT /foo.html HTTP/1.1 Host: www.webdav.org Content-Type: text/xml; charset=\"utf-8\" Content-Length: xxxx",
      "ja": "REPORT /foo.html HTTP / 1.1ホスト：www.webdav.orgのContent-Type：text / xmlで、 charset = \"UTF-8\" をコンテンツの長さ：XXXX"
    },
    {
      "indent": 5,
      "text": "<?xml version=\"1.0\" encoding=\"utf-8\" ?> <D:version-tree xmlns:D=\"DAV:\"> <D:prop> <D:version-name/> <D:creator-displayname/> <D:successor-set/> </D:prop> </D:version-tree>",
      "ja": "<？xml version = \"1.0\" エンコード= \"UTF-8\"？> <D：バージョンツリーのxmlns：D = \"DAV：\"> <D：プロペラ> <D：バージョン名/> <D：creator-表示名/> <D：後継セット/> </ D：プロップ> </ D：バージョンツリー>"
    },
    {
      "indent": 3,
      "text": ">>RESPONSE",
      "ja": ">> RESPONSE"
    },
    {
      "indent": 5,
      "text": "HTTP/1.1 207 Multi-Status Content-Type: text/xml; charset=\"utf-8\" Content-Length: xxxx",
      "ja": "HTTP / 1.1 207マルチステータスのContent-Type：text / xmlで、 charset = \"UTF-8\" をコンテンツの長さ：XXXX"
    },
    {
      "indent": 5,
      "text": "<?xml version=\"1.0\" encoding=\"utf-8\" ?> <D:multistatus xmlns:D=\"DAV:\"> <D:response> <D:href>http://repo.webdav.org/his/23/ver/V1</D:href> <D:propstat> <D:prop> <D:version-name>V1</D:version-name> <D:creator-displayname>Fred</D:creator-displayname> <D:successor-set> <D:href>http://repo.webdav.org/his/23/ver/V2</D:href> <D:href>http://repo.webdav.org/his/23/ver/V2.1.1</D:href> </D:successor-set> </D:prop> <D:status>HTTP/1.1 200 OK</D:status> </D:propstat> </D:response> <D:response> <D:href>http://repo.webdav.org/his/23/ver/V2</D:href> <D:propstat> <D:prop> <D:version-name>V2</D:version-name> <D:creator-displayname>Fred</D:creator-displayname> <D:successor-set/> </D:prop> <D:status>HTTP/1.1 200 OK</D:status> </D:propstat> </D:response> <D:response> <D:href>http://repo.webdav.org/his/23/ver/V2.1.1</D:href> <D:propstat> <D:prop> <D:version-name>V2.1.1</D:version-name> <D:creator-displayname>Sally</D:creator-displayname> <D:successor-set/> </D:prop> <D:status>HTTP/1.1 200 OK</D:status> </D:propstat> </D:response> </D:multistatus>",
      "ja": "<？xml version = \"1.0\" エンコード= \"UTF-8\"？> <D：multistatusのxmlns：D = \"DAV：\"> <D：レスポンス> <D：HREF> http://repo.webdav.org/彼/ 23 /版/ V1 </ D：のhref> <D：propstat> <D：小道具> <D：バージョン名> V1 </ D：バージョン名> <D：クリエーター-のDisplayName>フレッド</ D ：クリエイター-のDisplayName> <D：後継セット> <D：のhref> http://repo.webdav.org/his/23/ver/V2 </ D：のhref> <D：のhref>のhttp：//レポ.webdav.org /彼/ 23 /版/ V2.1.1 </ D：HREF> </ D：後継セット> </ D：小道具> <D：状態> HTTP / 1.1 200 OK </ D：状態> </ D：propstat> </ D：レスポンス> <D：レスポンス> <D：HREF> http://repo.webdav.org/his/23/ver/V2 </ D：HREF> <D：propstat> <D：プロペラ> <D：バージョン名> V2 </ D：バージョン名> <D：クリエータ-のDisplayName>フレッド</ D：クリエータ-のDisplayName> <D：後継セット/> </ D：小道具> <D：ステータス> HTTP / 1.1 200 OK </ D：状態> </ D：propstat> </ D：レスポンス> <D：レスポンス> <D：HREF> http://repo.webdav.org/his /23/ver/V2.1.1 </ D：HREF> <D：propstat> <D：プロペラ> <D：バージョン名> V2.1.1 </ D：バージョン名> <D：クリエータ-のDisplayName>サリー</ D：クリエータ-のDisplayName> <D：後継セット/> </ D：プロペラ> <D：ステータス> HTTP / 1.1 200 OK </ D：状態> </ D：P ropstat> </ D：レスポンス> </ D：multistatus>"
    },
    {
      "indent": 0,
      "text": "3.8 DAV:expand-property Report",
      "section_title": true,
      "ja": "3.8 DAV：拡大・プロパティをレポート"
    },
    {
      "indent": 3,
      "text": "Many property values are defined as a DAV:href, or a set of DAV:href elements. The DAV:expand-property report provides a mechanism for retrieving in one request the properties from the resources identified by those DAV:href elements. This report not only decreases the number of requests required, but also allows the server to minimize the number of separate read transactions required on the underlying versioning store.",
      "ja": "HREF、またはDAVのセット：HREF要素多くのプロパティ値は、DAVのように定義されています。 DAV：hrefの要素：拡大・プロパティをレポートでは、一つのリクエストでこれらのDAVによって識別されるリソースからプロパティを取得するためのメカニズムを提供します。この報告書は、必要な要求の数が減少するだけでなく、サーバは基本的なバージョン管理ストアに必要な個別の読み出しトランザクションの数を最小限に抑えることができますだけではなく。"
    },
    {
      "indent": 3,
      "text": "The DAV:expand-property report SHOULD be supported by all resources that support the REPORT method.",
      "ja": "DAV：拡大・プロパティをレポートには、REPORTメソッドをサポートしているすべてのリソースによってサポートされる必要があります。"
    },
    {
      "indent": 3,
      "text": "Marshalling:",
      "ja": "マーシャリング："
    },
    {
      "indent": 6,
      "text": "The request body MUST be a DAV:expand-property XML element.",
      "ja": "拡大・プロパティXML要素：リクエストボディは、DAVでなければなりません。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT expand-property (property*)> <!ELEMENT property (property*)> <!ATTLIST property name NMTOKEN #REQUIRED> name value: a property element type <!ATTLIST property namespace NMTOKEN \"DAV:\"> namespace value: an XML namespace",
      "ja": "<！ELEMENT拡大-プロパティ（プロパティ*）> <ATTLISTプロパティ名NMTOKEN #REQUIRED！>名前値<ELEMENTプロパティ（プロパティ*）！> <！ATTLISTプロパティの名前空間NMTOKEN \"DAV：\">プロパティ要素タイプを名前空間の値： XML名前空間"
    },
    {
      "indent": 6,
      "text": "The response body for a successful request MUST be a DAV:multistatus XML element.",
      "ja": "multistatus XML要素：成功したリクエストのレスポンスボディは、DAVでなければなりません。"
    },
    {
      "indent": 6,
      "text": "multistatus: see RFC 2518, Section 12.9",
      "ja": "multistatus：RFC 2518を参照してください、セクション12.9"
    },
    {
      "indent": 6,
      "text": "The properties reported in the DAV:prop elements of the DAV:multistatus element MUST be those identified by the DAV:property elements in the DAV:expand-property element. If there are DAV:property elements nested within a DAV:property element, then every DAV:href in the value of the corresponding property is replaced by a DAV:response element whose DAV:prop elements report the values of the properties identified by the nested DAV:property elements. The nested DAV:property elements can in turn contain DAV:property elements, so that multiple levels of DAV:href expansion can be requested.",
      "ja": "DAVに報告性質：DAVの要素プロップ：multistatus要素はDAVにより同定されたものでなければなりません：DAVでプロパティ要素：拡張-プロパティ要素。次いで、すべてのDAVプロパティ要素、：プロパティDAV内にネストされるエレメント：DAVがある場合、そのDAV応答エレメント：対応するプロパティの値のhrefをDAVにより置換されている要素は、ネストされたによって識別プロパティの値を報告PROP DAV：プロパティ要素。ネストされたDAV：プロパティ要素は、DAVの複数のレベルのよう：hrefの拡大が要求できるプロパティ要素が順番にDAV含めることができます。"
    },
    {
      "indent": 6,
      "text": "Note that a validating parser MUST be aware that the DAV:expand-property report effectively modifies the DTD of every property by replacing every occurrence of \"href\" in the DTD with \"href | response\".",
      "ja": "「|レスポンスのhref」効果的にDTDに「HREF」のすべての発生を置き換えることによって、すべてのプロパティのDTDを変更するレポート・プロパティの拡張：検証パーサーは、DAVがいることを認識しなければならないことに注意してください。"
    },
    {
      "indent": 0,
      "text": "3.8.1 Example - DAV:expand-property",
      "section_title": true,
      "ja": "3.8.1例 -  DAV：拡張-プロパティ"
    },
    {
      "indent": 3,
      "text": "This example describes how to query a version-controlled resource to determine the DAV:creator-display-name and DAV:activity-set of every version in the version history of that version-controlled resource. This example assumes that the server supports the version-history feature (see Section 5).",
      "ja": "クリエイター表示名およびDAV：そのバージョン管理されたリソースのバージョン履歴内のすべてのバージョンの活動セットこの例では、DAVを決定するために、バージョン管理されたリソースを照会する方法について説明します。この例では、サーバーがバージョン履歴機能を（セクション5を参照）をサポートしていることを前提としています。"
    },
    {
      "indent": 3,
      "text": ">>REQUEST",
      "ja": ">> REQUEST"
    },
    {
      "indent": 5,
      "text": "REPORT /foo.html HTTP/1.1 Host: www.webdav.org Content-Type: text/xml; charset=\"utf-8\" Content-Length: xxxx",
      "ja": "REPORT /foo.html HTTP / 1.1ホスト：www.webdav.orgのContent-Type：text / xmlで、 charset = \"UTF-8\" をコンテンツの長さ：XXXX"
    },
    {
      "indent": 5,
      "text": "<?xml version=\"1.0\" encoding=\"utf-8\" ?> <D:expand-property xmlns:D=\"DAV:\"> <D:property name=\"version-history\"> <D:property name=\"version-set\"> <D:property name=\"creator-displayname\"/> <D:property name=\"activity-set\"/> </D:property> </D:property> </D:expand-property>",
      "ja": "<？xml version = \"1.0\" エンコード= \"UTF-8\"？> <D：拡張-プロパティのxmlns：D = \"DAV：\"> <D：プロパティ名= \"バージョン履歴\"> <D：プロパティ名= \"バージョンセット\"> <D：プロパティ名= \"クリエーター-表示名\" /> <D：プロパティ名= \"活性集合\" /> </ D：プロパティ> </ D：プロパティ> </ D：expand-プロパティ>"
    },
    {
      "indent": 3,
      "text": ">>RESPONSE",
      "ja": ">> RESPONSE"
    },
    {
      "indent": 5,
      "text": "HTTP/1.1 207 Multi-Status Content-Type: text/xml; charset=\"utf-8\" Content-Length: xxxx",
      "ja": "HTTP / 1.1 207マルチステータスのContent-Type：text / xmlで、 charset = \"UTF-8\" をコンテンツの長さ：XXXX"
    },
    {
      "indent": 3,
      "text": " <?xml version=\"1.0\" encoding=\"utf-8\" ?> <D:multistatus xmlns:D=\"DAV:\"> <D:response> <D:href>http://www.webdav.org/foo.html</D:href> <D:propstat> <D:prop> <D:version-history> <D:response> <D:href>http://repo.webdav.org/his/23</D:href> <D:propstat> <D:prop> <D:version-set> <D:response> <D:href>http://repo.webdav.org/his/23/ver/1</D:href> <D:propstat> <D:prop> <D:creator-displayname>Fred</D:creator-displayname>",
      "ja": "<？xml version = \"1.0\" エンコード= \"UTF-8\"？> <D：multistatusのxmlns：D = \"DAV：\"> <D：レスポンス> <D：HREF> http://www.webdav.org/ foo.htmlという</ D：HREF> <D：propstat> <D：プロペラ> <D：バージョン履歴> <D：レスポンス> <D：HREF> http://repo.webdav.org/his/23 < / D：HREF> <D：propstat> <D：プロペラ> <D：バージョンセット> <D：レスポンス> <D：HREF> http://repo.webdav.org/his/23/ver/1 < / D：のhref> <D：propstat> <D：小道具> <D：クリエーター-のDisplayName>フレッド</ D：クリエーター-のDisplayName>"
    },
    {
      "indent": 3,
      "text": " <D:activity-set> <D:href> http://www.webdav.org/ws/dev/sally </D:href> </D:activity-set> </D:prop> <D:status>HTTP/1.1 200 OK</D:status> </D:propstat> </D:response> <D:response> <D:href>http://repo.webdav.org/his/23/ver/2</D:href> <D:propstat> <D:prop> <D:creator-displayname>Sally</D:creator-displayname> <D:activity-set> <D:href>http://repo.webdav.org/act/add-refresh-cmd</D:href> </D:activity-set> </D:prop> <D:status>HTTP/1.1 200 OK</D:status> </D:propstat> </D:response> </D:version-set> </D:prop> <D:status>HTTP/1.1 200 OK</D:status> </D:propstat> </D:response> </D:version-history> </D:prop> <D:status>HTTP/1.1 200 OK</D:status> </D:propstat> </D:response> </D:multistatus>",
      "ja": "<D：活性セット> <D：HREF> http://www.webdav.org/ws/dev/sally </ D：HREF> </ D：活性セット> </ D：プロペラ> <D：ステータス> HTTP / 1.1 200 OK </ D：状態> </ D：propstat> </ D：レスポンス> <D：レスポンス> <D：HREF> http://repo.webdav.org/his/23/ver / 2 </ D：HREF> <D：propstat> <D：プロペラ> <D：クリエータ-のDisplayName>サリー</ D：クリエータ-のDisplayName> <D：活性セット> <D：HREF>のhttp：// repo.webdav.org/act/add-refresh-cmd </ D：HREF> </ D：活性セット> </ D：プロペラ> <D：ステータス> HTTP / 1.1 200 OK </ D：ステータス> < / D：propstat> </ D：レスポンス> </ D：バージョンセット> </ D：プロペラ> <D：ステータス> HTTP / 1.1 200 OK </ D：状態> </ D：propstat> </ D ：レスポンス> </ D：バージョン履歴> </ D：プロペラ> <D：ステータス> HTTP / 1.1 200 OK </ D：状態> </ D：propstat> </ D：レスポンス> </ D：multistatus >"
    },
    {
      "indent": 3,
      "text": "In this example, the DAV:creator-displayname and DAV:activity-set properties of the versions in the DAV:version-set of the DAV:version-history of http://www.webdav.org/foo.html are reported.",
      "ja": "この例では、DAV：クリエータ-のDisplayNameおよびDAVは：DAVのバージョンセット：DAVにおけるバージョンの活性セット特性http://www.webdav.org/foo.htmlのバージョン履歴が報告されています。"
    },
    {
      "indent": 0,
      "text": "3.9 Additional OPTIONS Semantics",
      "section_title": true,
      "ja": "3.9追加オプションのセマンティクス"
    },
    {
      "indent": 3,
      "text": "If the server supports the version-control feature, it MUST include \"version-control\" as a field in the DAV response header from an OPTIONS request on any resource that supports any versioning properties, reports, or methods.",
      "ja": "サーバはバージョン管理機能をサポートしている場合、それはどのバージョン管理のプロパティ、レポート、またはメソッドをサポートしているすべてのリソース上のOPTIONS要求からのDAV応答ヘッダ内のフィールドとして「バージョン管理」を含まなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.10 Additional PUT Semantics",
      "section_title": true,
      "ja": "3.10追加PUTのセマンティクス"
    },
    {
      "indent": 3,
      "text": "Additional Preconditions:",
      "ja": "追加の前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:cannot-modify-version-controlled-content): If the request-URL identifies a resource with a DAV:checked-in property, the request MUST fail unless DAV:auto-version semantics will automatically check out the resource.",
      "ja": "（DAVは：-変更しないで、バージョン管理されたコンテンツができます）：リクエストURLがDAVのリソースを識別する場合：自動バージョンセマンティクス自動的にリソースをチェックアウトします：DAVがない限り、チェックインされたプロパティ、要求が失敗しなければなりません。"
    },
    {
      "indent": 6,
      "text": "(DAV:cannot-modify-version): If the request-URL identifies a version, the request MUST fail.",
      "ja": "（DAV：-バージョンを変更することはできません）：リクエストURLは、バージョンを識別した場合、要求は失敗しなければなりません。"
    },
    {
      "indent": 6,
      "text": "If the request creates a new resource that is automatically placed under version control, all preconditions for VERSION-CONTROL apply to the request.",
      "ja": "要求は自動的にバージョン管理下に置かれる新しいリソースを作成する場合、VERSION-CONTROLのためのすべての前提条件が要求に適用されます。"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:auto-checkout): If the resource was a checked-in version-controlled resource whose DAV:auto-version property indicates it should be automatically checked out but not automatically checked in for a modification request, then the server MUST have automatically checked out the resource prior to executing the request. In particular, the value of the DAV:checked-out property of the resource MUST be that of the DAV:checked-in property prior to the request, the DAV:checked-in property MUST have been removed, and the DAV:predecessor-set property MUST be initialized to be the same as the DAV:checked-out property. If any part of the checkout/update sequence failed, the status from the failed part of the request MUST be returned, and the server state preceding the request sequence MUST be restored.",
      "ja": "（DAV：自動チェックアウト）：リソースはそのDAVチェックインされたバージョン管理されたリソースだった場合：自動バージョンプロパティが示すそれは自動的にチェックアウトする必要がありますが、自動的に変更要求のためにチェックインしていない場合、サーバーは自動的に持っていなければなりません。リクエストを実行する前に、リソースをチェックアウトしました。具体的には、DAVの値：リソースのチェックアウト性DAVのものでなければなりません：チェックインされたプロパティの前の要求に、DAV：チェックインされたプロパティが削除されている必要があり、およびDAV：predecessor-チェックアウトされたプロパティ：設定プロパティはDAVと同じになるように初期化しなければなりません。チェックアウト/更新配列のいずれかの部分が失敗した場合、要求の失敗した部分からのステータスが返されなければならない、と要求シーケンスに先行するサーバの状態を復元しなければなりません。"
    },
    {
      "indent": 6,
      "text": "(DAV:auto-checkout-checkin): If the resource was a checked-in version-controlled resource whose DAV:auto-version property indicates it should be automatically checked out and automatically checked in for a modification request, then the server MUST have automatically checked out the resource prior to executing the request and automatically checked it in after the request. In particular, the DAV:checked-in property of the resource MUST identify a new version whose content and dead properties are the same as those of the resource. The DAV:predecessor-set of the new version MUST identify the version identified by the DAV:checked-in property prior to the request. If any part of the checkout/update/checkin sequence failed, the status from the failed part of the request MUST be returned, and the server state preceding the request sequence MUST be restored.",
      "ja": "（DAV：自動チェックアウト・チェックイン）：自動バージョンプロパティは、それが自動的にチェックアウトし、自動的に変更要求のためにチェックインする必要があり、その後、サーバーが持っている必要がありますを示しています。リソースはそのDAVチェックインされたバージョン管理されたリソースだった場合自動的に前のリクエストを実行するリソースをチェックアウトし、自動的にリクエストした後にそれをチェックします。具体的には、DAV：チェックインされたリソースのプロパティは、その内容とデッドプロパティリソースのものと同一である新バージョンを特定しなければなりません。 DAV：チェックインされたプロパティ要求前に：新しいバージョンの前身・セットは、DAVで識別されるバージョンを特定しなければなりません。チェックアウト/更新/チェックイン配列のいずれかの部分が失敗した場合、要求の失敗した部分からのステータスが返されなければならない、と要求シーケンスに先行するサーバの状態を復元しなければなりません。"
    },
    {
      "indent": 6,
      "text": "If the request creates a new resource, the new resource MAY have automatically been placed under version control, and all postconditions for VERSION-CONTROL apply to the request.",
      "ja": "リクエストが新しいリソースを作成する場合は、新しいリソースは自動的にバージョン管理下に置かれている可能性があり、そしてVERSION-CONTROLのためのすべての事後条件は、リクエストに適用されます。"
    },
    {
      "indent": 0,
      "text": "3.11 Additional PROPFIND Semantics",
      "section_title": true,
      "ja": "3.11追加PROPFINDセマンティクス"
    },
    {
      "indent": 3,
      "text": "A DAV:allprop PROPFIND request SHOULD NOT return any of the properties defined by this document. This allows a versioning server to perform efficiently when a naive client, which does not understand the cost of asking a server to compute all possible live properties, issues a DAV:allprop PROPFIND request.",
      "ja": "DAV：allprop PROPFIND要求は、この文書で定義されたプロパティのいずれかを返すべきではありません。 allprop PROPFIND要求：これは、すべての可能なライブのプロパティを計算するために、サーバーを尋ねるのコストを理解していない素朴なクライアントは、DAVを発行するとバージョン管理サーバーが効率的に実行することができます。"
    },
    {
      "indent": 3,
      "text": "Additional Preconditions:",
      "ja": "追加の前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:supported-live-property): If the request attempts to access a property defined by this document, the semantics of that property MUST be supported by the server.",
      "ja": "（DAV：サポート-ライブプロパティ）：要求は、この文書で定義されたプロパティにアクセスしようとした場合、そのプロパティの意味はサーバによってサポートされなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.12 Additional PROPPATCH Semantics",
      "section_title": true,
      "ja": "3.12追加PROPPATCHセマンティクス"
    },
    {
      "indent": 3,
      "text": "Additional Preconditions:",
      "ja": "追加の前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:cannot-modify-version-controlled-property): If the request attempts to modify a dead property, same semantics as PUT (see Section 3.10).",
      "ja": "（DAV：-変更しないで、バージョン管理、プロパティことができます）：要求が（3.10節を参照）、死者プロパティを変更するPUTと同じセマンティクスをしようとした場合。"
    },
    {
      "indent": 6,
      "text": "(DAV:cannot-modify-version): If the request attempts to modify a dead property, same semantics as PUT (see Section 3.10).",
      "ja": "（DAV：-バージョンを変更することはできません）：要求が死んでプロパティを変更しようとすると、同じセマンティクスがPUTとして（3.10節を参照してください）。"
    },
    {
      "indent": 6,
      "text": "(DAV:cannot-modify-protected-property): An attempt to modify a property that is defined by this document, as being protected for that kind of resource, MUST fail.",
      "ja": "（DAV： - 保護 - プロパティ変更できません）：リソースの種類の保護されているように、このドキュメントによって定義されるプロパティを変更しようとし、失敗しなければなりません。"
    },
    {
      "indent": 6,
      "text": "(DAV:supported-live-property): An attempt to modify a property defined by this document, but whose semantics are not enforced by the server, MUST fail. This helps ensure that a client will be notified when it is trying to use a property whose semantics are not supported by the server.",
      "ja": "（DAV：サポート-ライブプロパティ）：この文書で定義されたプロパティを変更しようとしますが、その意味論、サーバによって強制されていない、失敗しなければなりません。セマンティクスサーバーでサポートされていないプロパティを使用しようとしているときにクライアントが通知されるようになります。"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:auto-checkout): If the request modified a dead property, same semantics as PUT (see Section 3.10).",
      "ja": "（DAV：自動チェックアウト）：要求が死んでプロパティを変更した場合は、PUTと同じセマンティクス（3.10節を参照してください）。"
    },
    {
      "indent": 6,
      "text": "(DAV:auto-checkout-checkin): If the request modified a dead property, same semantics as PUT (see Section 3.10).",
      "ja": "（DAV：自動チェックアウト・チェックイン）：要求が死んでプロパティを変更した場合は、PUTと同じセマンティクスは（3.10節を参照してください）。"
    },
    {
      "indent": 0,
      "text": "3.13 Additional DELETE Semantics",
      "section_title": true,
      "ja": "3.13追加DELETEセマンティクス"
    },
    {
      "indent": 3,
      "text": "Additional Preconditions:",
      "ja": "追加の前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:no-version-delete): A server MAY fail an attempt to DELETE a version.",
      "ja": "（DAV：なしバージョンの削除）：サーバーは、バージョンを削除しようとし失敗することがあります。"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:update-predecessor-set): If a version was deleted, the server MUST have replaced any reference to that version in a DAV:predecessor-set by a copy of the DAV:predecessor-set of the deleted version.",
      "ja": "（DAV：更新前身セット）：バージョンが削除された場合、サーバはDAVでそのバージョンへの参照を交換している必要があります前身セットDAVのコピーによって：削除されたバージョンの前身セット。"
    },
    {
      "indent": 0,
      "text": "3.14 Additional COPY Semantics",
      "section_title": true,
      "ja": "3.14追加のコピー・セマンティクス"
    },
    {
      "indent": 3,
      "text": "Additional Preconditions:",
      "ja": "追加の前提条件："
    },
    {
      "indent": 6,
      "text": "If the request creates a new resource that is automatically placed under version control, all preconditions for VERSION-CONTROL apply to the request.",
      "ja": "要求は自動的にバージョン管理下に置かれる新しいリソースを作成する場合、VERSION-CONTROLのためのすべての前提条件が要求に適用されます。"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:must-not-copy-versioning-property): A property defined by this document MUST NOT have been copied to the new resource created by this request, but instead that property of the new resource MUST have the default initial value it would have had if the new resource had been created by a non-versioning method such as PUT or a MKCOL.",
      "ja": "（DAV：必要はなく、コピーバージョン管理 - プロパティ）：この文書で定義されたプロパティは、新しいリソースのプロパティは、それが希望デフォルトの初期値を持たなければならないことを代わりにこの要求によって作成された新しいリソースにコピーされますが、されていてはなりません新しいリソースは、PUTやMKCOLなどの非バージョン管理方法によって作成されていた場合がありました。"
    },
    {
      "indent": 6,
      "text": "(DAV:auto-checkout): If the destination is a version-controlled resource, same semantics as PUT (see Section 3.10).",
      "ja": "（DAV：自動チェックアウト）：先には、バージョン管理されたリソースである場合は、PUTと同じセマンティクスは（3.10節を参照してください）。"
    },
    {
      "indent": 6,
      "text": "(DAV:auto-checkout-checkin): If the destination is a version-controlled resource, same semantics as PUT (see Section 3.10).",
      "ja": "（DAV：自動チェックアウト・チェックイン）：先には、バージョン管理されたリソースである場合は、PUTと同じセマンティクスは（3.10節を参照してください）。"
    },
    {
      "indent": 6,
      "text": "(DAV:copy-creates-new-resource): If the source of a COPY is a version-controlled resource or version, and if there is no resource at the destination of the COPY, then the COPY creates a new non-version-controlled resource at the destination of the COPY. The new resource MAY automatically be put under version control, but the resulting version-controlled resource MUST be associated with a new version history created for that new version-controlled resource, and all postconditions for VERSION-CONTROL apply to the request.",
      "ja": "（DAV：コピーは、作成し、新しいリソース）：コピーのソースは、バージョン管理されたリソースまたはバージョンであり、コピー先のないリソースが存在しない場合、そのコピーは、新しい非バージョン - を作成した場合COPY先のリソースを制御しました。新しいリソースは自動的にバージョン管理下に置かれるかもしれませんが、結果として、バージョン管理されたリソースは、その新しいバージョン管理されたリソースのために作成された新しいバージョン履歴に関連付けられている必要があり、そしてVERSION-CONTROLのためのすべての事後条件が要求に適用されます。"
    },
    {
      "indent": 0,
      "text": "3.15 Additional MOVE Semantics",
      "section_title": true,
      "ja": "3.15追加のMOVEセマンティクス"
    },
    {
      "indent": 3,
      "text": "Additional Preconditions:",
      "ja": "追加の前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:cannot-rename-version): If the request-URL identifies a version, the request MUST fail.",
      "ja": "（DAV：-バージョンの名前を変更することはできません）：リクエストURLは、バージョンを識別した場合、要求は失敗しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:preserve-versioning-properties): When a resource is moved from a source URL to a destination URL, a property defined by this document MUST have the same value at the destination URL as it had at the source URL.",
      "ja": "（DAV：保存-バージョニング・プロパティ）：リソースがリンク先URLに、ソースURLから移動されると、それはソースのURLであったように、このドキュメントによって定義されたプロパティは、宛先URLに同じ値を持たなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.16 Additional UNLOCK Semantics",
      "section_title": true,
      "ja": "3.16追加UNLOCKセマンティクス"
    },
    {
      "indent": 3,
      "text": "Note that these semantics apply both to an explicit UNLOCK request, as well as to the removal of a lock because of a lock timeout. If a precondition or postcondition cannot be satisfied, the lock timeout MUST NOT occur.",
      "ja": "これらのセマンティクスは、明示的なUNLOCK要求に、だけでなく、ためにロック・タイムアウトのロックの除去の両方に適用されます。前提条件や事後条件を満たすことができない場合は、ロック・タイムアウトが発生してはなりません。"
    },
    {
      "indent": 3,
      "text": "Additional Preconditions:",
      "ja": "追加の前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:version-history-is-tree): If the request-URL identifies a checked-out version-controlled resource that will be automatically checked in when the lock is removed, then the versions identified by the DAV:predecessor-set of the checked-out resource MUST be descendants of the root version of the version history for the DAV:checked-out version.",
      "ja": "（DAV：バージョン履歴は、木である）：の前身セット：リクエストURLはロックが除去されたときに自動的にチェックされます、チェックアウト、バージョン管理されたリソースを識別した場合、その後のバージョンでは、DAVで識別しますチェックアウトされたバージョン：チェックアウトリソースは、DAVのバージョン履歴のルートバージョンの子孫でなければなりません。"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:auto-checkin): If the request-URL identified a checked-out version-controlled resource that had been automatically checked out because of its DAV:auto-version property, the request MUST have created a new version in the version history of the DAV:checked-out version. The request MUST have allocated a URL for the version that MUST NOT have previously identified any other resource, and MUST NOT ever identify a resource other than this version. The content, dead properties, DAV:resourcetype, and DAV:predecessor-set of the new version MUST be copied from the checked-out resource. The DAV:version-name of the new version MUST be set to a server-defined value distinct from all other DAV:version-name values of other versions in the same version history. The request MUST have removed the DAV:checked-out property of the version-controlled resource, and MUST have added a DAV:checked-in property that identifies the new version.",
      "ja": "リクエストURLは自動的に、そのDAVのチェックアウトされていた、チェックアウト、バージョン管理されたリソース識別した場合：：（DAV：自動チェックイン）の自動バージョンプロパティを、要求がバージョン履歴に新しいバージョンを作成しておく必要がありますチェックアウトされたバージョン：DAVの。要求は、以前に他のリソースを特定してはなりませんバージョンのためのURLが割り当てられているしなければならない、と今までにこのバージョン以外のリソースを識別することはできません。コンテンツ、死者の特性、DAV：resourcetypeの、およびDAV：新しいバージョンの前身・セットがチェックアウトされたリソースからコピーされなければなりません。 DAV：同じバージョン履歴中の他のバージョンのバージョン名値：新しいバージョンのバージョン名は、他のすべてのDAVは異なるサーバーに定義された値に設定しなければなりません。バージョン管理されたリソースのチェックアウトプロパティを、そしてDAV追加しておく必要があります：リクエストがDAVを削除している必要がありますチェックインされたプロパティの新しいバージョンを識別します。"
    },
    {
      "indent": 0,
      "text": "4 CHECKOUT-IN-PLACE FEATURE",
      "ja": "4 CHECKOUT-IN-PLACE機能"
    },
    {
      "indent": 3,
      "text": "With the version-control feature, WebDAV locking can be used to avoid the proliferation of versions that would result if every modification to a version-controlled resource produced a new version. The checkout-in-place feature provides an alternative mechanism that allows a client to explicitly check out and check in a resource to create a new version.",
      "ja": "バージョン管理機能を使用すると、WebDAVのロックはバージョン管理されたリソースへのすべての変更は、新しいバージョンを作成場合に生じるバージョンの増殖を防ぐために使用することができます。チェックアウト・イン・プレース機能は、クライアントが明示的にチェックアウトし、新しいバージョンを作成するためのリソースをチェックインすることを可能にする代替メカニズムを提供します。"
    },
    {
      "indent": 0,
      "text": "4.1 Additional Version Properties",
      "section_title": true,
      "ja": "4.1追加バージョンのプロパティ"
    },
    {
      "indent": 3,
      "text": "The checkout-in-place feature introduces the following REQUIRED properties for a version.",
      "ja": "チェックアウト・イン・プレース機能がバージョンのため、次の必要なプロパティを紹介します。"
    },
    {
      "indent": 0,
      "text": "4.1.1 DAV:checkout-fork",
      "section_title": true,
      "ja": "4.1.1 DAV：チェックアウトフォーク"
    },
    {
      "indent": 3,
      "text": "This property controls the behavior of CHECKOUT when a version already is checked out or has a successor. If the DAV:checkout-fork of a version is DAV:forbidden, a CHECKOUT request MUST fail if it would result in that version appearing in the DAV:predecessor-set or DAV:checked-out property of more than one version or checked-out resource. If DAV:checkout-fork is DAV:discouraged, such a CHECKOUT request MUST fail unless DAV:fork-ok is specified in the CHECKOUT request body.",
      "ja": "このプロパティは、バージョンが既にチェックアウトや後継を持っているCHECKOUTの動作を制御します。バージョンのチェックアウト・フォークはDAVです：DAV場合は禁じられ、それはDAVに表示されているバージョンにつながる場合は、チェックアウト要求は失敗しなければなりません：前身セットまたはDAV：複数のバージョンかにチェックインのチェックアウトプロパティをアウトリソース。チェックアウトフォークDAVです：：DAVの場合はフォークOK CHECKOUTリクエストボディに指定されています落胆DAVがない限り、そのようなチェックアウト要求は失敗しなければなりません。"
    },
    {
      "indent": 3,
      "text": "A server MAY reject attempts to modify the DAV:checkout-fork of a version.",
      "ja": "バージョンのチェックアウトフォーク：サーバがDAVを変更しようとする試みを拒否することができます。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT checkout-fork ANY> ANY value: A sequence of elements with at most one DAV:discouraged or DAV:forbidden element. <!ELEMENT discouraged EMPTY> <!ELEMENT forbidden EMPTY>",
      "ja": "<！ELEMENTチェックアウト-フォークANY> ANY値：最大1つのDAVと要素のシーケンス：落胆やDAV：禁断の要素。 <！ELEMENTは落胆EMPTY> <！ELEMENT EMPTY禁じ>"
    },
    {
      "indent": 0,
      "text": "4.1.2 DAV:checkin-fork",
      "section_title": true,
      "ja": "4.1.2 DAV：チェックインフォーク"
    },
    {
      "indent": 3,
      "text": "This property controls the behavior of CHECKIN when a version already has a successor. If the DAV:checkin-fork of a version is DAV:forbidden, a CHECKIN request MUST fail if it would result in that version appearing in the DAV:predecessor-set of more than one version. If DAV:checkin-fork is DAV:discouraged, such a CHECKIN request MUST fail unless DAV:fork-ok is specified in the CHECKIN request body.",
      "ja": "このプロパティは、バージョンがすでに後継を持ってCHECKINの動作を制御します。バージョンのチェックイン・フォークDAVです：：DAVがいる場合、複数のバージョンの前身セット：禁じられ、それはDAVに表示されているバージョンにつながる場合は、CHECKINリクエストは失敗しなければなりません。チェックイン・フォークDAVです：：DAVの場合はフォークOK CHECKINリクエストボディに指定されています落胆DAVがない限り、このようCHECKINリクエストは失敗しなければなりません。"
    },
    {
      "indent": 3,
      "text": "A server MAY reject attempts to modify the DAV:checkout-fork of a version.",
      "ja": "バージョンのチェックアウトフォーク：サーバがDAVを変更しようとする試みを拒否することができます。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT checkin-fork ANY> ANY value: A sequence of elements with at most one DAV:discouraged or DAV:forbidden element. <!ELEMENT discouraged EMPTY> <!ELEMENT forbidden EMPTY>",
      "ja": "<！ELEMENTのチェックイン・フォークANY> ANY値：最大1つのDAVと要素のシーケンス：落胆やDAV：禁断の要素。 <！ELEMENTは落胆EMPTY> <！ELEMENT EMPTY禁じ>"
    },
    {
      "indent": 0,
      "text": "4.2 Checked-Out Resource Properties",
      "section_title": true,
      "ja": "4.2チェックアウトリソースプロパティ"
    },
    {
      "indent": 3,
      "text": "The checkout-in-place feature introduces the following REQUIRED properties for a checked-out resource.",
      "ja": "チェックアウト・イン・プレース機能は、チェックアウトされたリソースのために、次の必要なプロパティを紹介します。"
    },
    {
      "indent": 0,
      "text": "4.2.1 DAV:checkout-fork",
      "section_title": true,
      "ja": "4.2.1 DAV：チェックアウトフォーク"
    },
    {
      "indent": 3,
      "text": "This property determines the DAV:checkout-fork property of the version that results from checking in this resource.",
      "ja": "このリソースでチェックした結果、バージョンのチェックアウト・フォークプロパティ：このプロパティは、DAVを決定します。"
    },
    {
      "indent": 0,
      "text": "4.2.2 DAV:checkin-fork",
      "section_title": true,
      "ja": "4.2.2 DAV：チェックインフォーク"
    },
    {
      "indent": 3,
      "text": "This property determines the DAV:checkin-fork property of the version that results from checking in this resource.",
      "ja": "このリソースでチェックした結果、バージョンのチェックイン・フォークプロパティ：このプロパティは、DAVを決定します。"
    },
    {
      "indent": 0,
      "text": "4.3 CHECKOUT Method (applied to a version-controlled resource)",
      "section_title": true,
      "ja": "4.3 CHECKOUT方法（バージョン管理されたリソースに適用されます）"
    },
    {
      "indent": 3,
      "text": "A CHECKOUT request can be applied to a checked-in version-controlled resource to allow modifications to the content and dead properties of that version-controlled resource.",
      "ja": "チェックアウト要求は、そのバージョン管理されたリソースの内容とデッドプロパティへの変更を許可するにチェックインバージョン管理されたリソースに適用することができます。"
    },
    {
      "indent": 3,
      "text": "If a CHECKOUT request fails, the server state preceding the request MUST be restored.",
      "ja": "チェックアウト要求が失敗した場合は、リクエストの前にサーバの状態を復元する必要があります。"
    },
    {
      "indent": 3,
      "text": "Marshalling:",
      "ja": "マーシャリング："
    },
    {
      "indent": 6,
      "text": "If a request body is included, it MUST be a DAV:checkout XML element.",
      "ja": "チェックアウトXML要素：リクエストボディが含まれている場合は、DAVでなければなりません。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT checkout ANY>",
      "ja": "<！ELEMENTチェックアウトANY>"
    },
    {
      "indent": 6,
      "text": "ANY value: A sequence of elements with at most one DAV:fork-ok element.",
      "ja": "ANY値：最大1つのDAVと要素のシーケンス：フォーク-OK要素。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT fork-ok EMPTY>",
      "ja": "<！ELEMENTフォーク-OK EMPTY>"
    },
    {
      "indent": 6,
      "text": "If a response body for a successful request is included, it MUST be a DAV:checkout-response XML element.",
      "ja": "成功した要求に対するレスポンスボディが含まれている場合は、DAVでなければならない：チェックアウト応答XML要素。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT checkout-response ANY>",
      "ja": "<！ELEMENTチェックアウト応答ANY>"
    },
    {
      "indent": 6,
      "text": "The response MUST include a Cache-Control:no-cache header.",
      "ja": "キャッシュなしヘッダー：レスポンスはのCache-Controlを含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "Preconditions:",
      "ja": "前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:must-be-checked-in): If a version-controlled resource is being checked out, it MUST have a DAV:checked-in property.",
      "ja": "（DAV：-でなければなりません-にチェックイン）：バージョン管理されたリソースがチェックアウトされている場合、それはDAVを持っている必要があります。チェックインされたプロパティ。"
    },
    {
      "indent": 6,
      "text": "(DAV:checkout-of-version-with-descendant-is-forbidden): If the DAV:checkout-fork property of the version being checked out is DAV:forbidden, the request MUST fail if a version identifies that version in its DAV:predecessor-set.",
      "ja": "DAV場合：チェックアウトされているバージョンのチェックアウトフォークプロパティはDAVである：（DAV：チェックアウト・オブ・バージョンを有する子孫は、禁止されている）禁止バージョンがDAVにそのバージョンを識別する場合、リクエストは失敗しなければなりません：前身セット。"
    },
    {
      "indent": 6,
      "text": "(DAV:checkout-of-version-with-descendant-is-discouraged): If the DAV:checkout-fork property of the version being checked out is DAV:discouraged, the request MUST fail if a version identifies that version in its DAV:predecessor-set unless DAV:fork-ok is specified in the request body.",
      "ja": "（DAV：チェックアウト・オブ・バージョンと、子孫-推奨さ）：DAV場合：チェックアウトされているバージョンのチェックアウトフォークプロパティはDAVである：推奨バージョンがDAVにそのバージョンを識別する場合、リクエストは失敗しなければなりません：先行セットDAVない限り：リクエストボディで指定されたフォークOK。"
    },
    {
      "indent": 6,
      "text": "(DAV:checkout-of-checked-out-version-is-forbidden): If the DAV:checkout-fork property of the version being checked out is DAV:forbidden, the request MUST fail if a checked-out resource identifies that version in its DAV:checked-out property.",
      "ja": "DAV場合：チェックアウトされているバージョンのチェックアウトフォークプロパティはDAVである：（DAV：チェックアウト・オブ・チェックアウト・バージョンは、禁止されている）禁止チェックアウトリソースがそのバージョンを識別する場合、リクエストは失敗しなければなりませんチェックアウトされたプロパティ：そのDAVインチ"
    },
    {
      "indent": 6,
      "text": "(DAV:checkout-of-checked-out-version-is-discouraged): If the DAV:checkout-fork property of the version being checked out is DAV:discouraged, the request MUST fail if a checked-out resource identifies that version in its DAV:checked-out property unless DAV:fork-ok is specified in the request body.",
      "ja": "DAV場合：チェックアウトされているバージョンのチェックアウトフォークプロパティはDAVである：（DAV：チェックアウト・オブ・アウト・バージョン、推奨され）推奨チェックアウトリソースがそのバージョンを識別する場合、リクエストは失敗しなければなりませんDAVない限り、チェックアウトされたプロパティ：そのDAVにフォーク-OKは、リクエストボディに指定されています。"
    },
    {
      "indent": 3,
      "text": "Postconditions:",
      "ja": "事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:is-checked-out): The checked-out resource MUST have a DAV:checked-out property that identifies the DAV:checked-in version preceding the checkout. The version-controlled resource MUST NOT have a DAV:checked-in property.",
      "ja": "（DAV： - チェックされるアウト）：チェックアウト性DAV識別する：チェックイン、チェックアウトの前のバージョンをチェックアウトされたリソースは、DAVを持たなければなりません。バージョン管理されたリソースは、DAVを有してはならない：チェックインされたプロパティ。"
    },
    {
      "indent": 6,
      "text": "(DAV:initialize-predecessor-set): The DAV:predecessor-set property of the checked-out resource MUST be initialized to be the DAV:checked-out version.",
      "ja": "（DAV：初期化-前身セット）：DAV：チェックアウトしたバージョン：チェックアウトリソースの前身、設定されたプロパティは、DAVに初期化されなければなりません。"
    },
    {
      "indent": 0,
      "text": "4.3.1 Example - CHECKOUT of a version-controlled resource",
      "section_title": true,
      "ja": "4.3.1例 - バージョン管理されたリソースのチェックアウト"
    },
    {
      "indent": 3,
      "text": ">>REQUEST",
      "ja": ">> REQUEST"
    },
    {
      "indent": 5,
      "text": "CHECKOUT /foo.html HTTP/1.1 Host: www.webdav.org Content-Length: 0",
      "ja": "CHECKOUT /foo.html HTTP / 1.1ホスト：www.webdav.orgのContent-Length：0"
    },
    {
      "indent": 3,
      "text": ">>RESPONSE",
      "ja": ">> RESPONSE"
    },
    {
      "indent": 5,
      "text": "HTTP/1.1 200 OK Cache-Control: no-cache",
      "ja": "HTTP / 1.1 200 OKのCache-Control：キャッシュなし"
    },
    {
      "indent": 3,
      "text": "In this example, the version-controlled resource /foo.html is checked out.",
      "ja": "この例では、バージョン管理されたリソースの/foo.htmlがチェックアウトされています。"
    },
    {
      "indent": 0,
      "text": "4.4 CHECKIN Method (applied to a version-controlled resource)",
      "section_title": true,
      "ja": "4.4 CHECKIN法（バージョン管理されたリソースに適用されます）"
    },
    {
      "indent": 3,
      "text": "A CHECKIN request can be applied to a checked-out version-controlled resource to produce a new version whose content and dead properties are copied from the checked-out resource.",
      "ja": "CHECKINリクエストは内容とデッドプロパティがチェックアウトされたリソースからコピーされた新しいバージョンを生成するために、チェックアウト、バージョン管理されたリソースに適用することができます。"
    },
    {
      "indent": 3,
      "text": "If a CHECKIN request fails, the server state preceding the request MUST be restored.",
      "ja": "CHECKINリクエストが失敗した場合は、リクエストの前にサーバの状態を復元する必要があります。"
    },
    {
      "indent": 3,
      "text": "Marshalling:",
      "ja": "マーシャリング："
    },
    {
      "indent": 6,
      "text": "If a request body is included, it MUST be a DAV:checkin XML element.",
      "ja": "チェックインXML要素：リクエストボディが含まれている場合は、DAVでなければなりません。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT checkin ANY> ANY value: A sequence of elements with at most one DAV:keep-checked-out element and at most one DAV:fork-ok element.",
      "ja": "<！ELEMENT ANYチェックイン>：最大1つのDAVと要素のシーケンス：キープチェックアウト要素と最大1つのDAV：フォーク-OK要素の任意の値を。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT keep-checked-out EMPTY> <!ELEMENT fork-ok EMPTY>",
      "ja": "<！ELEMENTキープチェックアウトEMPTY> <！ELEMENTフォーク-OK EMPTY>"
    },
    {
      "indent": 6,
      "text": "If a response body for a successful request is included, it MUST be a DAV:checkin-response XML element.",
      "ja": "成功した要求に対するレスポンスボディが含まれている場合は、DAVでなければならない：チェックインレスポンスXML要素。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT checkin-response ANY>",
      "ja": "<！ELEMENTのチェックインレスポンスANY>"
    },
    {
      "indent": 6,
      "text": "The response MUST include a Cache-Control:no-cache header.",
      "ja": "キャッシュなしヘッダー：レスポンスはのCache-Controlを含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "Preconditions:",
      "ja": "前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:must-be-checked-out): The request-URL MUST identify a resource with a DAV:checked-out property.",
      "ja": "（DAV：-でなければなりません - チェックアウト）：チェックアウトされたプロパティ：リクエストURLは、DAVでリソースを特定しなければなりません。"
    },
    {
      "indent": 6,
      "text": "(DAV:version-history-is-tree) The versions identified by the DAV:predecessor-set of the checked-out resource MUST be descendants of the root version of the version history for the DAV:checked-out version.",
      "ja": "（DAV：バージョン履歴-ある-木）DAVで識別されるバージョン：チェックアウトしたバージョン：チェックアウトリソースの前身・セットは、DAVのバージョン履歴のルートバージョンの子孫でなければなりません。"
    },
    {
      "indent": 6,
      "text": "(DAV:checkin-fork-forbidden): A CHECKIN request MUST fail if it would cause a version whose DAV:checkin-fork is DAV:forbidden to appear in the DAV:predecessor-set of more than one version.",
      "ja": "チェックイン・フォークDAVです：DAVに表示されますことを禁じ：複数のバージョンの前身セット（DAV：チェックイン・フォーク禁制）：それはそのDAVバージョンを引き起こす場合CHECKINリクエストは失敗しなければなりません。"
    },
    {
      "indent": 6,
      "text": "(DAV:checkin-fork-discouraged): A CHECKIN request MUST fail if it would cause a version whose DAV:checkin-fork is DAV:discouraged to appear in the DAV:predecessor-set of more than one version, unless DAV:fork-ok is specified in the request body.",
      "ja": "（DAVは：チェックイン・フォークがっかり）：それはそのDAVバージョンを引き起こす場合CHECKINリクエストは失敗しなければなりません：DAVに表示されるように落胆：複数のバージョンの前身セット、しない限りDAV：チェックイン-フォークはDAVあるフォーク-okは、リクエストボディに指定されています。"
    },
    {
      "indent": 3,
      "text": "Postconditions:",
      "ja": "事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:create-version): The request MUST have created a new version in the version history of the DAV:checked-out version. The request MUST have allocated a distinct new URL for the new version, and that URL MUST NOT ever identify any resource other than that version. The URL for the new version MUST be returned in a Location response header.",
      "ja": "（DAV：-バージョンを作成）：チェックアウトされたバージョン：リクエストは、DAVのバージョン履歴の新しいバージョンを作成しておく必要があります。リクエストは、新しいバージョンのための明確な新しいURLが割り当てられているしなければならない、とそのURLは、これまでそのバージョン以外の任意のリソースを識別することはできません。新しいバージョンのためのURLがロケーション応答ヘッダーで返さなければなりません。"
    },
    {
      "indent": 6,
      "text": "(DAV:initialize-version-content-and-properties): The content, dead properties, DAV:resourcetype, and DAV:predecessor-set of the new version MUST be copied from the checked-out resource. The DAV:version-name of the new version MUST be set to a server-defined value distinct from all other DAV:version-name values of other versions in the same version history.",
      "ja": "（DAV：初期化・バージョン - コンテンツと-プロパティ）：コンテンツ、死者の特性、DAV：resourcetypeの、およびDAV：新しいバージョンの前身・セットがチェックアウトされたリソースからコピーされなければなりません。 DAV：同じバージョン履歴中の他のバージョンのバージョン名値：新しいバージョンのバージョン名は、他のすべてのDAVは異なるサーバーに定義された値に設定しなければなりません。"
    },
    {
      "indent": 6,
      "text": "(DAV:checked-in): If the request-URL identifies a version-controlled resource and DAV:keep-checked-out is not specified in the request body, the DAV:checked-out property of the version-controlled resource MUST have been removed and a DAV:checked-in property that identifies the new version MUST have been added.",
      "ja": "（DAV：チェックインされた）：リクエストURLがバージョン管理されたリソースとDAVを識別する場合：キープチェックアウトがリクエストボディで指定されていない、DAV：バージョン管理されたリソースのチェックアウトプロパティが持っている必要があります削除されてそしてDAV：チェックインされたプロパティの新しいバージョンを識別する追加されている必要があります。"
    },
    {
      "indent": 6,
      "text": "(DAV:keep-checked-out): If DAV:keep-checked-out is specified in the request body, the DAV:checked-out property of the checked-out resource MUST have been updated to identify the new version.",
      "ja": "（DAV：キープチェックアウトを）：DAV場合：チェックアウトリソースが新しいバージョンを識別するために更新されていなければならないのチェックアウトプロパティ：キープチェックアウトがDAV、リクエストボディに指定されています。"
    },
    {
      "indent": 0,
      "text": "4.4.1 Example - CHECKIN",
      "section_title": true,
      "ja": "4.4.1例 -  CHECKIN"
    },
    {
      "indent": 3,
      "text": ">>REQUEST",
      "ja": ">> REQUEST"
    },
    {
      "indent": 5,
      "text": "CHECKIN /foo.html HTTP/1.1 Host: www.webdav.org Content-Length: 0",
      "ja": "CHECKIN /foo.html HTTP / 1.1ホスト：www.webdav.orgのContent-Length：0"
    },
    {
      "indent": 3,
      "text": ">>RESPONSE",
      "ja": ">> RESPONSE"
    },
    {
      "indent": 5,
      "text": "HTTP/1.1 201 Created Location: http://repo.webdav.org/his/23/ver/32 Cache-Control: no-cache",
      "ja": "HTTP / 1.1 201作成された場所：http://repo.webdav.org/his/23/ver/32のCache-Control：キャッシュなし"
    },
    {
      "indent": 3,
      "text": "In this example, version-controlled resource /foo.html is checked in, and a new version is created at http://repo.webdav.org/his/23/ver/32.",
      "ja": "この例では、バージョン管理されたリソースの/foo.htmlがチェックインされると、新しいバージョンがhttp://repo.webdav.org/his/23/ver/32で作成されます。"
    },
    {
      "indent": 0,
      "text": "4.5 UNCHECKOUT Method",
      "section_title": true,
      "ja": "4.5 UNCHECKOUT方法"
    },
    {
      "indent": 3,
      "text": "An UNCHECKOUT request can be applied to a checked-out version-controlled resource to cancel the CHECKOUT and restore the pre-CHECKOUT state of the version-controlled resource.",
      "ja": "UNCHECKOUTリクエストは、チェックアウトをキャンセルし、バージョン管理されたリソースの事前チェックアウトの状態を復元するには、チェックアウト、バージョン管理されたリソースに適用することができます。"
    },
    {
      "indent": 3,
      "text": "If an UNCHECKOUT request fails, the server MUST undo any partial effects of the UNCHECKOUT request.",
      "ja": "UNCHECKOUT要求が失敗した場合、サーバはUNCHECKOUT要求のいずれかの部分的な効果を元に戻す必要があります。"
    },
    {
      "indent": 3,
      "text": "Marshalling:",
      "ja": "マーシャリング："
    },
    {
      "indent": 6,
      "text": "If a request body is included, it MUST be a DAV:uncheckout XML element.",
      "ja": "UNCHECKOUT XML要素：リクエストボディが含まれている場合は、DAVでなければなりません。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT uncheckout ANY>",
      "ja": "<ANY UNCHECKOUT！ELEMENT>"
    },
    {
      "indent": 6,
      "text": "If a response body for a successful request is included, it MUST be a DAV:uncheckout-response XML element.",
      "ja": "成功した要求に対するレスポンスボディが含まれている場合は、DAVでなければならない：UNCHECKOUT応答XML要素。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT uncheckout-response ANY>",
      "ja": "<！ELEMENT UNCHECKOUT応答ANY>"
    },
    {
      "indent": 6,
      "text": "The response MUST include a Cache-Control:no-cache header.",
      "ja": "キャッシュなしヘッダー：レスポンスはのCache-Controlを含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "Preconditions:",
      "ja": "前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:must-be-checked-out-version-controlled-resource): The request-URL MUST identify a version-controlled resource with a DAV:checked-out property.",
      "ja": "（DAV：-でなければなりません - チェックアウト・バージョン管理されたリソース）：チェックアウトされたプロパティ：リクエストURLはDAVとバージョン管理されたリソースを特定しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Postconditions:",
      "ja": "事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:cancel-checked-out): The value of the DAV:checked-in property is that of the DAV:checked-out property prior to the request, and the DAV:checked-out property has been removed.",
      "ja": "（DAV：キャンセル・チェックアウト）：DAVの値：チェックインされたプロパティは、DAVのものである：チェックアウト性要求に先立って、およびDAV：チェックアウト性が除去されました。"
    },
    {
      "indent": 6,
      "text": "(DAV:restore-content-and-dead-properties): The content and dead properties of the version-controlled resource are copies of its DAV:checked-in version.",
      "ja": "（DAV：デッドコンテンツをリストアし、--プロパティ）：バージョン管理されたリソースの内容とデッドプロパティは、そのDAVのコピーです：チェックインされたバージョン。"
    },
    {
      "indent": 0,
      "text": "4.5.1 Example - UNCHECKOUT",
      "section_title": true,
      "ja": "4.5.1例 -  UNCHECKOUT"
    },
    {
      "indent": 3,
      "text": ">>REQUEST",
      "ja": ">> REQUEST"
    },
    {
      "indent": 5,
      "text": "UNCHECKOUT /foo.html HTTP/1.1 Host: www.webdav.org Content-Length: 0",
      "ja": "UNCHECKOUT /foo.html HTTP / 1.1ホスト：www.webdav.orgのContent-Length：0"
    },
    {
      "indent": 3,
      "text": ">>RESPONSE",
      "ja": ">> RESPONSE"
    },
    {
      "indent": 5,
      "text": "HTTP/1.1 200 OK Cache-Control: no-cache",
      "ja": "HTTP / 1.1 200 OKのCache-Control：キャッシュなし"
    },
    {
      "indent": 3,
      "text": "In this example, the content and dead properties of the version-controlled resource identified by http://www.webdav.org/foo.html are restored to their values preceding the most recent CHECKOUT of that version-controlled resource.",
      "ja": "この例では、http://www.webdav.org/foo.htmlで識別されるバージョン管理されたリソースの内容とデッドプロパティは、そのバージョン管理されたリソースの中で最も最近のチェックアウトを前のそれぞれの値に復元されています。"
    },
    {
      "indent": 0,
      "text": "4.6 Additional OPTIONS Semantics",
      "section_title": true,
      "ja": "4.6追加オプションのセマンティクス"
    },
    {
      "indent": 3,
      "text": "If a server supports the checkout-in-place feature, it MUST include \"checkout-in-place\" as a field in the DAV response header from an OPTIONS request on any resource that supports any versioning properties, reports, or methods.",
      "ja": "サーバは、チェックアウト・イン・プレース機能をサポートしている場合、それはどのバージョン管理のプロパティ、レポート、またはメソッドをサポートしているすべてのリソース上のOPTIONS要求からのDAV応答ヘッダ内のフィールドとして「チェックアウト - インプレース」を含まなければなりません。"
    },
    {
      "indent": 0,
      "text": "5 Version-History Feature",
      "ja": "5バージョン - 履歴機能"
    },
    {
      "indent": 3,
      "text": "It is often useful to have access to a version history even after all version-controlled resources for that version history have been deleted. A server can provide this functionality by supporting version history resources. A version history resource is a resource that exists in a server defined namespace and therefore is unaffected by any deletion or movement of version-controlled resources. A version history resource is an appropriate place to add a property that logically applies to all states of a resource. The DAV:expand-property report (see Section 3.8) can be applied to the DAV:version-set of a version history resource to provide a variety of useful reports on all versions in that version history.",
      "ja": "そのバージョン履歴のすべてのバージョン管理のリソースが削除された後もバージョン履歴へのアクセス権を持っていると便利です。サーバはバージョン履歴リソースをサポートすることにより、この機能を提供することができます。バージョン履歴リソースは、サーバー定義の名前空間内に存在する資源であるため、バージョン管理リソースの任意の欠失または動きによって影響を受けません。バージョン履歴リソースは、論理的リソースのすべての状態に適用されるプロパティを追加するための適切な場所です。 DAV：そのバージョン履歴内のすべてのバージョンに関する有用なさまざまなレポートを提供するために、バージョン履歴リソースのバージョンセット：拡張-プロパティをレポートには、（3.8節を参照）DAVにも適用することができます。"
    },
    {
      "indent": 0,
      "text": "5.1 Version History Properties",
      "section_title": true,
      "ja": "5.1バージョン履歴のプロパティ"
    },
    {
      "indent": 3,
      "text": "The DAV:resourcetype of a version history MUST be DAV:version-history.",
      "ja": "DAV：バージョン履歴：バージョン履歴のresourcetypeのは、DAVでなければなりません。"
    },
    {
      "indent": 3,
      "text": "The version-history feature introduces the following REQUIRED properties for a version history.",
      "ja": "バージョン履歴機能は、バージョン履歴のために、次の必要なプロパティを紹介します。"
    },
    {
      "indent": 0,
      "text": "5.1.1 DAV:version-set (protected)",
      "section_title": true,
      "ja": "5.1.1 DAV：バージョンセット（保護）"
    },
    {
      "indent": 3,
      "text": "This property identifies each version of this version history.",
      "ja": "このプロパティは、このバージョン履歴の各バージョンを識別します。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT version-set (href+)>",
      "ja": "<！ELEMENT版セット（HREF +）>"
    },
    {
      "indent": 0,
      "text": "5.1.2 DAV:root-version (computed)",
      "section_title": true,
      "ja": "5.1.2 DAV：ルート・バージョン（計算）"
    },
    {
      "indent": 3,
      "text": "This property identifies the root version of this version history.",
      "ja": "このプロパティは、このバージョン履歴のルートバージョンを識別します。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT root-version (href)>",
      "ja": "<！ELEMENTルート・バージョン（HREF）>"
    },
    {
      "indent": 0,
      "text": "5.2 Additional Version-Controlled Resource Properties",
      "section_title": true,
      "ja": "5.2追加のバージョン管理されたリソースのプロパティ"
    },
    {
      "indent": 3,
      "text": "The version-history feature introduces the following REQUIRED property for a version-controlled resource.",
      "ja": "バージョン履歴機能は、バージョン管理されたリソースのために、次の必要なプロパティを紹介します。"
    },
    {
      "indent": 0,
      "text": "5.2.1 DAV:version-history (computed)",
      "section_title": true,
      "ja": "5.2.1 DAV：バージョン履歴（計算）"
    },
    {
      "indent": 3,
      "text": "This property identifies the version history resource for the DAV:checked-in or DAV:checked-out version of this version-controlled resource.",
      "ja": "チェックインされたか、DAV：このバージョン管理されたリソースのチェックアウトバージョンこのプロパティは、DAVのバージョン履歴リソースを識別します。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT version-history (href)>",
      "ja": "<！ELEMENTバージョン履歴（HREF）>"
    },
    {
      "indent": 0,
      "text": "5.3 Additional Version Properties",
      "section_title": true,
      "ja": "5.3追加バージョンのプロパティ"
    },
    {
      "indent": 3,
      "text": "The version-history feature introduces the following REQUIRED property for a version.",
      "ja": "バージョン履歴機能は、バージョンのため、次の必要なプロパティを紹介します。"
    },
    {
      "indent": 0,
      "text": "5.3.1 DAV:version-history (computed)",
      "section_title": true,
      "ja": "5.3.1 DAV：バージョン履歴（計算）"
    },
    {
      "indent": 3,
      "text": "This property identifies the version history that contains this version.",
      "ja": "このプロパティは、このバージョンを含むバージョン履歴を識別します。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT version-history (href)>",
      "ja": "<！ELEMENTバージョン履歴（HREF）>"
    },
    {
      "indent": 0,
      "text": "5.4 DAV:locate-by-history Report",
      "section_title": true,
      "ja": "5.4 DAV：見つけ-で履歴レポート"
    },
    {
      "indent": 3,
      "text": "Many properties identify a version from some version history. It is often useful to be able to efficiently locate a version-controlled resource for that version history. The DAV:locate-by-history report can be applied to a collection to locate the collection member that is a version-controlled resource for a specified version history resource.",
      "ja": "多くのプロパティは、いくつかのバージョン履歴からバージョンを識別します。効率的にそのバージョン履歴のバージョン管理されたリソースを見つけることができると便利です。 DAV：見つけ-で履歴レポートには、指定されたバージョン履歴リソースのバージョン管理されたリソースであるコレクションのメンバーを検索するために、コレクションにも適用することができます。"
    },
    {
      "indent": 3,
      "text": "Marshalling:",
      "ja": "マーシャリング："
    },
    {
      "indent": 6,
      "text": "The request body MUST be a DAV:locate-by-history XML element.",
      "ja": "見つけごとの歴史XML要素：リクエストボディは、DAVでなければなりません。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT locate-by-history (version-history-set, prop)> <!ELEMENT version-history-set (href+)> prop: see RFC 2518, Section 12.11",
      "ja": "<！ELEMENT見つけ-により履歴（バージョン履歴-セット、小道具）> <！ELEMENTバージョン履歴-セット（HREF +）>小道具：RFC 2518を参照してください、セクション12.11"
    },
    {
      "indent": 6,
      "text": "The response body for a successful request MUST be a DAV:multistatus XML element containing every version-controlled resource that is a member of the collection identified by the request-URL, and whose DAV:version-history property identifies one of the version history resources identified by the request body. The DAV:prop element in the request body identifies which properties should be reported in the DAV:prop elements in the response body.",
      "ja": "要求URLで識別されるコレクションのメンバであるすべてのバージョン管理されたリソースを含むmultistatus XML要素、およびそのDAV：：成功の要求に対するレスポンスボディは、DAVでなければならないバージョン履歴プロパティは、バージョン履歴リソースの1つを特定しますリクエストボディで識別されます。 DAV：応答体の要素PROP：リクエストボディで支柱要素は、プロパティがDAVに報告されるべきかを識別する。"
    },
    {
      "indent": 3,
      "text": "Preconditions:",
      "ja": "前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:must-be-version-history): Each member of the DAV:version-history-set element in the request body MUST identify a version history resource.",
      "ja": "（DAV：-でなければならないバージョン履歴）：DAVの各メンバー：リクエストボディ内のバージョン履歴セットエレメントは、バージョン履歴リソースを識別しなければなりません。"
    },
    {
      "indent": 0,
      "text": "5.4.1 Example - DAV:locate-by-history Report",
      "section_title": true,
      "ja": "5.4.1例 -  DAV：見つけバイ履歴レポート"
    },
    {
      "indent": 3,
      "text": ">>REQUEST",
      "ja": ">> REQUEST"
    },
    {
      "indent": 5,
      "text": "REPORT /ws/public HTTP/1.1 Host: www.webdav.org Content-Type: text/xml; charset=\"utf-8\" Content-Length: xxxx",
      "ja": "REPORT / WS /公共HTTP / 1.1ホスト：www.webdav.orgのContent-Type：text / xmlで、 charset = \"UTF-8\" をコンテンツの長さ：XXXX"
    },
    {
      "indent": 5,
      "text": "<?xml version=\"1.0\" encoding=\"utf-8\" ?> <D:locate-by-history xmlns:D=\"DAV:\"> <D:version-history-set> <D:href>http://repo.webdav.org/his/23</D:href> <D:href>http://repo.webdav.org/his/84</D:href> <D:href>http://repo.webdav.org/his/129</D:href> <D:version-history-set/> <D:prop> </D:version-history> </D:prop> </D:locate-by-history>",
      "ja": "<？xml version = \"1.0\" エンコード= \"UTF-8\"？> <D：見つけるバイ履歴のxmlns：D = \"DAVを：\"> <D：バージョン履歴セット> <D：HREF>のhttp： //repo.webdav.org/his/23 </ D：のhref> <D：のhref> http://repo.webdav.org/his/84 </ D：のhref> <D：のhref>のhttp：// repo.webdav.org/his/129 </ D：HREF> <D：バージョン履歴セット/> <D：プロップ> </ D：バージョン履歴> </ D：プロップ> </ D：locate-バイ・歴史>"
    },
    {
      "indent": 3,
      "text": ">>RESPONSE",
      "ja": ">> RESPONSE"
    },
    {
      "indent": 5,
      "text": "HTTP/1.1 207 Multi-Status Content-Type: text/xml; charset=\"utf-8\" Content-Length: xxxx",
      "ja": "HTTP / 1.1 207マルチステータスのContent-Type：text / xmlで、 charset = \"UTF-8\" をコンテンツの長さ：XXXX"
    },
    {
      "indent": 5,
      "text": "<?xml version=\"1.0\" encoding=\"utf-8\" ?> <D:multistatus xmlns:D=\"DAV:\"> <D:response> <D:href>http://www.webdav.org/ws/public/x/test.html</D:href> <D:propstat> <D:prop> <D:version-history> <D:href>http://repo.webdav.org/his/23</D:href> </D:version-history> </D:prop> <D:status>HTTP/1.1 200 OK</D:status> </D:propstat> </D:response> </D:multistatus>",
      "ja": "<？xml version = \"1.0\" エンコード= \"UTF-8\"？> <D：multistatusのxmlns：D = \"DAV：\"> <D：レスポンス> <D：HREF> http://www.webdav.org/ WS /パブリック/ X / test.htmlという</ D：HREF> <D：propstat> <D：プロペラ> <D：バージョン履歴> <D：HREF> http://repo.webdav.org/his/23 </ D：HREF> </ D：バージョン履歴> </ D：プロペラ> <D：ステータス> HTTP / 1.1 200 OK </ D：状態> </ D：propstat> </ D：レスポンス> </ D：multistatus>"
    },
    {
      "indent": 3,
      "text": "In this example, there is only one version-controlled member of /ws/public that is a version-controlled resource for one of the three specified version history resources. In particular, /ws/public/x/test.html is the version-controlled resource for http://repo.webdav.org/his/23.",
      "ja": "この例では、3つの指定されたバージョン履歴リソースの1つのバージョン管理されたリソースである/ WS /公共の1つのバージョンのみ制御部材があります。特に、/ws/public/x/test.htmlはhttp://repo.webdav.org/his/23のバージョン管理されたリソースです。"
    },
    {
      "indent": 0,
      "text": "5.5 Additional OPTIONS Semantics",
      "section_title": true,
      "ja": "5.5追加オプションのセマンティクス"
    },
    {
      "indent": 3,
      "text": "If the server supports the version-history feature, it MUST include \"version-history\" as a field in the DAV response header from an OPTIONS request on any resource that supports any versioning properties, reports, or methods.",
      "ja": "サーバーがバージョン履歴機能をサポートしている場合、それはどのバージョン管理のプロパティ、レポート、またはメソッドをサポートしているすべてのリソース上のOPTIONS要求からのDAV応答ヘッダ内のフィールドとして「バージョン履歴」を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "A DAV:version-history-collection-set element MAY be included in the request body to identify collections that may contain version history resources.",
      "ja": "DAV：バージョン履歴収集設定要素は、バージョン履歴リソースが含まれていてもよいコレクションを識別するために、リクエストボディに含まれるかもしれません。"
    },
    {
      "indent": 3,
      "text": "Additional Marshalling:",
      "ja": "追加のマーシャリング："
    },
    {
      "indent": 6,
      "text": "If an XML request body is included, it MUST be a DAV:options XML element.",
      "ja": "オプションのXML要素：XMLリクエストボディが含まれている場合は、DAVでなければなりません。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT options ANY> ANY value: A sequence of elements with at most one DAV:version-history-collection-set element.",
      "ja": "<！ELEMENTオプションANY> ANY値：最大1つのDAVと要素のシーケンス：バージョン履歴収集設定要素。"
    },
    {
      "indent": 6,
      "text": "If an XML response body for a successful request is included, it MUST be a DAV:options-response XML element.",
      "ja": "成功した要求のためのXMLレスポンスボディが含まれている場合は、DAVでなければならない：オプション応答XML要素。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT options-response ANY> ANY value: A sequence of elements with at most one DAV:version-history-collection-set element.",
      "ja": "<！ELEMENTオプション-応答ANY> ANY値：最大1つのDAVと要素のシーケンス：バージョン履歴収集設定要素。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT version-history-collection-set (href*)>",
      "ja": "<！ELEMENTバージョン履歴収集セット（HREF *）>"
    },
    {
      "indent": 6,
      "text": "If DAV:version-history-collection-set is included in the request body, the response body for a successful request MUST contain a DAV:version-history-collection-set element identifying collections that may contain version histories. An identified collection MAY be the root collection of a tree of collections, all of which may contain version histories. Since different servers can control different parts of the URL namespace, different resources on the same host MAY have different DAV:version-history-collection-set values. The identified collections MAY be located on different hosts from the resource.",
      "ja": "DAV場合：バージョン履歴収集セットがリクエストボディに含まれ、成功した要求に対するレスポンスボディは、DAVを含まなければなりません：バージョン履歴収集設定要素は、バージョン履歴を含むことができ、コレクションを特定します。識別のコレクションは、バージョン履歴を含むことができ、すべてのそれらのコレクションのツリーのルートの集合であってもよいです。異なるサーバがURL名前空間の異なる部分を制御することができるので、同じホスト上の異なるリソースが異なるDAVを持っているかもしれません：バージョン履歴収集の設定値。識別のコレクションは、リソースとは別のホスト上に配置することができます。"
    },
    {
      "indent": 0,
      "text": "5.6 Additional DELETE Semantics",
      "section_title": true,
      "ja": "5.6追加のDELETEセマンティクス"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:delete-version-set): If the request deleted a version history, the request MUST have deleted all versions in the DAV:version-set of that version history, and MUST have satisfied the postconditions for version deletion (see Section 3.13).",
      "ja": "（DAV：削除バージョンセット）：（セクション3.13を参照してくださいそのバージョン履歴のバージョン・セット、およびバージョンの削除のための事後条件を満たしている必要があります。要求はバージョン履歴を削除した場合、要求はDAV内のすべてのバージョンを削除している必要があります）。"
    },
    {
      "indent": 6,
      "text": "(DAV:version-history-has-root): If the request deleted the root version of a version history, the request MUST have updated the DAV:root-version of the version history to refer to another version that is an ancestor of all other remaining versions in that version history. A result of this postcondition is that every version history will have at least one version, and the only way to delete all versions is to delete the version history resource.",
      "ja": "（DAV：バージョン履歴があるルート）：リクエストがバージョン履歴のルートバージョンを削除した場合、要求は、DAVを更新している必要があります。バージョン履歴のルート・バージョンを、すべての祖先である別のバージョンを参照しますそのバージョンの歴史の中で他の残りのバージョン。この事後条件の結果は、すべてのバージョン履歴が少なくとも一つのバージョンを持っていますし、すべてのバージョンを削除する唯一の方法は、バージョン履歴リソースを削除することであるということです。"
    },
    {
      "indent": 0,
      "text": "5.7 Additional COPY Semantics",
      "section_title": true,
      "ja": "5.7追加のコピー・セマンティクス"
    },
    {
      "indent": 3,
      "text": "Additional Preconditions:",
      "ja": "追加の前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:cannot-copy-history): If the request-URL identifies a version history, the request MUST fail. In order to create another version history whose versions have the same content and dead properties, the appropriate sequence of VERSION-CONTROL, CHECKOUT, PUT, PROPPATCH, and CHECKIN requests must be made.",
      "ja": "（DAV：-履歴のコピーはできません）：リクエストURLがバージョン履歴を識別した場合、要求は失敗しなければなりません。バージョンと同じ内容とデッドプロパティを持つ別のバージョン履歴を作成するためには、VERSION-CONTROL、CHECKOUT、PUT、PROPPATCH、およびCHECKINリクエストの適切なシーケンスがなされなければなりません。"
    },
    {
      "indent": 0,
      "text": "5.8 Additional MOVE Semantics",
      "section_title": true,
      "ja": "5.8追加のMOVEセマンティクス"
    },
    {
      "indent": 3,
      "text": "Additional Preconditions:",
      "ja": "追加の前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:cannot-rename-history): If the request-URL identifies a version history, the request MUST fail.",
      "ja": "（DAV：-履歴の名前を変更することはできません）：リクエストURLがバージョン履歴を識別した場合、要求は失敗しなければなりません。"
    },
    {
      "indent": 0,
      "text": "5.9 Additional VERSION-CONTROL Semantics",
      "section_title": true,
      "ja": "5.9追加VERSION-CONTROLのセマンティクス"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:new-version-history): If the request created a new version history, the request MUST have allocated a new server-defined URL for that version history that MUST NOT have previously identified any other resource, and MUST NOT ever identify a resource other than this version history.",
      "ja": "（DAV：新バージョン履歴）：要求が新しいバージョン履歴を作成した場合、要求は以前に他のリソースを特定してはなりません、そのバージョン履歴の新しいサーバーに定義されたURLが割り当てられているしなければならない、と今までに識別することはできませんこのバージョン履歴以外のリソース。"
    },
    {
      "indent": 0,
      "text": "5.10 Additional CHECKIN Semantics",
      "section_title": true,
      "ja": "5.10追加CHECKINセマンティクス"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:add-to-history): A URL for the new version resource MUST have been added to the DAV:version-set of the version history of the DAV:checked-out version.",
      "ja": "（DAV：アドオンに履歴）：チェックアウトされたバージョン：DAVのバージョン履歴のバージョンセット：新しいバージョンのリソースのURLは、DAVに追加されている必要があります。"
    },
    {
      "indent": 0,
      "text": "6 Workspace Feature",
      "ja": "6ワークスペース機能"
    },
    {
      "indent": 3,
      "text": "In order to allow multiple users to work concurrently on adding versions to the same version history, it is necessary to allocate on the server multiple checked-out resources for the same version history. Even if only one user is making changes to a resource, that user will sometimes wish to create a \"private\" version, and then to expose that version at a later time. One way to provide this functionality depends on the client keeping track of its current set of checked-out resources. This is the working-resource feature defined in Section 8. The other way to provide this functionality avoids the need for persistent state on the client, and instead has the server maintain a human meaningful namespace for related sets of checked-out resources. This is the workspace feature defined in this section.",
      "ja": "複数のユーザーが同じバージョン履歴にバージョンを追加することで同時に作業できるようにするためには、同じバージョン履歴のサーバーの複数のチェックアウトリソースに割り当てる必要があります。唯一のユーザーがリソースへの変更を行った場合であっても、そのユーザは時々、「プライベート」バージョンを作成したいでしょう、その後、後でそのバージョンを公開します。この機能を提供する1つの方法は、チェックアウトされたリソースの現在のセットを追跡するクライアントに依存します。これは、第8節、この機能を提供するために、他の方法で定義されたワーキング・リソース機能であるクライアント上の永続的な状態の必要性を回避し、代わりにサーバーがチェックアウトリソースの関連セットのために人間の意味のある名前空間を維持しています。これは、このセクションで定義されたワークスペース機能です。"
    },
    {
      "indent": 3,
      "text": "The workspace feature introduces a \"workspace resource\". A workspace resource is a collection whose members are related version-controlled and non-version-controlled resources. Multiple workspaces may be used to expose different versions and configurations of a set of version-controlled resources concurrently. In order to make changes to a version-controlled resource in one workspace visible in another workspace, that version-controlled resource must be checked in, and then the corresponding version-controlled resource in the other workspace can be updated to display the content and dead properties of the new version.",
      "ja": "ワークスペース機能は、「ワークスペースのリソース」を紹介します。ワークスペースのリソースは、そのメンバーが関連しているバージョン管理および非バージョン管理リソースのコレクションです。複数のワークスペースを同時にバージョン制御リソースのセットの異なるバージョンおよび構成を露出させるために使用されてもよいです。別のワークスペースに表示さ1つのワークスペースでバージョン管理されたリソースへの変更を行うためには、そのバージョン管理されたリソースがチェックインする必要があり、その後、他のワークスペースに対応するバージョン管理されたリソースは、コンテンツや死者を表示するように更新することができます新バージョンのプロパティ。"
    },
    {
      "indent": 3,
      "text": "In order to ensure unambiguous merging (see Section 11) and baselining (see Section 12) semantics, a workspace may contain at most one version-controlled resource for a given version history. This is required for unambiguous merging because the MERGE method must identify which version-controlled resource is to be the merge target of a given version. This is required for unambiguous baselining because a baseline can only select one version for a given version-controlled resource.",
      "ja": "明白なマージ（セクション11を参照）、ベースラインを確保するために（セクション12を参照）セマンティクス、ワークスペースは、所与のバージョン履歴の多くても1つのバージョン管理されたリソースに含まれていてもよいです。 MERGE方法がバージョン管理されたリソースは、指定されたバージョンのマージの対象となるかを特定しなければならないので、これは明白なマージのために必要とされます。ベースラインが唯一の特定のバージョン管理されたリソースのための1つのバージョンを選択することができるので、これは明確なベースラインに必要とされます。"
    },
    {
      "indent": 3,
      "text": "Initially, an empty workspace can be created. Non-version-controlled resources can then be added to the workspace with standard WebDAV requests such as PUT and MKCOL. Version-controlled resources can be added to the workspace with VERSION-CONTROL requests. If the baseline feature is supported, collections in the workspace can be placed under baseline control, and then initialized by existing baselines.",
      "ja": "最初に、空のワークスペースを作成することができます。非バージョン管理されたリソースは、その後、PUTやMKCOLなどの標準的なWebDAV要求をワークスペースに追加することができます。バージョン管理されたリソースは、VERSION-CONTROLリクエストをワークスペースに追加することができます。ベースラインの機能がサポートされている場合は、ワークスペース内のコレクションは、ベースラインの制御下に置かれ、その後、既存のベースラインにより初期化することができます。"
    },
    {
      "indent": 0,
      "text": "6.1 Workspace Properties",
      "section_title": true,
      "ja": "6.1ワークスペースのプロパティ"
    },
    {
      "indent": 3,
      "text": "The workspace feature introduces the following REQUIRED property for a workspace.",
      "ja": "ワークスペース機能は、ワークスペースのために、次の必要なプロパティを紹介します。"
    },
    {
      "indent": 0,
      "text": "6.1.1 DAV:workspace-checkout-set (computed)",
      "section_title": true,
      "ja": "6.1.1 DAV：ワークスペース・チェックアウト・セット（計算）"
    },
    {
      "indent": 3,
      "text": "This property identifies each checked-out resource whose DAV:workspace property identifies this workspace.",
      "ja": "ワークスペースのプロパティは、このワークスペースを識別します。このプロパティは、そのDAVそれぞれにチェックアウトされたリソースを識別します。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT workspace-checkout-set (href*)>",
      "ja": "<！ELEMENTワークスペース・チェックアウト・セット（HREF *）>"
    },
    {
      "indent": 0,
      "text": "6.2 Additional Resource Properties",
      "section_title": true,
      "ja": "6.2追加のリソースのプロパティ"
    },
    {
      "indent": 3,
      "text": "The workspace feature introduces the following REQUIRED property for a WebDAV resource.",
      "ja": "ワークスペース機能は、WebDAVリソースに対して次の必須プロパティを導入します。"
    },
    {
      "indent": 0,
      "text": "6.2.1 DAV:workspace (protected)",
      "section_title": true,
      "ja": "6.2.1 DAV：ワークスペース（保護）"
    },
    {
      "indent": 3,
      "text": "The DAV:workspace property of a workspace resource MUST identify itself. The DAV:workspace property of any other type of resource MUST be the same as the DAV:workspace of its parent collection.",
      "ja": "DAV：ワークスペースのリソースのワークスペースプロパティには、自分自身を特定しなければなりません。 DAV：リソースの他のタイプのワークスペースプロパティはDAVと同じでなければならない：その親コレクションのワークスペース。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT workspace (href)>",
      "ja": "<！ELEMENTワークスペース（HREF）>"
    },
    {
      "indent": 0,
      "text": "6.3 MKWORKSPACE Method",
      "section_title": true,
      "ja": "6.3 MKWORKSPACE方法"
    },
    {
      "indent": 3,
      "text": "A MKWORKSPACE request creates a new workspace resource. A server MAY restrict workspace creation to particular collections, but a client can determine the location of these collections from a DAV:workspace-collection-set OPTIONS request (see Section 6.4).",
      "ja": "MKWORKSPACE要求は、新しいワークスペースのリソースを作成します。サーバーは、特定のコレクションにワークスペースの作成を制限することができるが、クライアントはDAVからこれらのコレクションの位置を決定することができます：ワークスペース・コレクション・セットのOPTIONS要求（6.4節を参照してください）。"
    },
    {
      "indent": 3,
      "text": "If a MKWORKSPACE request fails, the server state preceding the request MUST be restored.",
      "ja": "MKWORKSPACE要求が失敗した場合は、リクエストの前にサーバの状態を復元する必要があります。"
    },
    {
      "indent": 3,
      "text": "Marshalling:",
      "ja": "マーシャリング："
    },
    {
      "indent": 6,
      "text": "If a request body is included, it MUST be a DAV:mkworkspace XML element.",
      "ja": "MKWORKSPACEのXML要素：リクエストボディが含まれている場合は、DAVでなければなりません。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT mkworkspace ANY>",
      "ja": "<！ELEMENT MKWORKSPACE ANY>"
    },
    {
      "indent": 6,
      "text": "If a response body for a successful request is included, it MUST be a DAV:mkworkspace-response XML element.",
      "ja": "成功した要求に対するレスポンスボディが含まれている場合は、DAVでなければならない：MKWORKSPACE応答XML要素。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT mkworkspace-response ANY>",
      "ja": "<！ELEMENTのMKWORKSPACE応答ANY>"
    },
    {
      "indent": 6,
      "text": "The response MUST include a Cache-Control:no-cache header.",
      "ja": "キャッシュなしヘッダー：レスポンスはのCache-Controlを含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "Preconditions:",
      "ja": "前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:resource-must-be-null): A resource MUST NOT exist at the request-URL.",
      "ja": "（DAV：リソース-でなければならないヌル）：リソースは、リクエストURLに存在してはなりません。"
    },
    {
      "indent": 6,
      "text": "(DAV:workspace-location-ok): The request-URL MUST identify a location where a workspace can be created.",
      "ja": "（DAV：ワークスペース・ロケーションの）リクエストURLは、ワークスペースを作成することができる場所を識別しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Postconditions:",
      "ja": "事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:initialize-workspace): A new workspace exists at the request-URL. The DAV:resourcetype of the workspace MUST be DAV:collection. The DAV:workspace of the workspace MUST identify the workspace.",
      "ja": "（DAV：初期化-ワークスペース）：新しいワークスペースが要求URLに存在します。 DAV：コレクション：ワークスペースのresourcetypeのは、DAVでなければなりません。 DAV：ワークスペースのワークスペースは、ワークスペースを特定しなければなりません。"
    },
    {
      "indent": 0,
      "text": "6.3.1 Example - MKWORKSPACE",
      "section_title": true,
      "ja": "6.3.1例 -  MKWORKSPACE"
    },
    {
      "indent": 3,
      "text": ">>REQUEST",
      "ja": ">> REQUEST"
    },
    {
      "indent": 5,
      "text": "MKWORKSPACE /ws/public HTTP/1.1 Host: www.webdav.org Content-Length: 0",
      "ja": "MKWORKSPACE / WS /公共HTTP / 1.1ホスト：www.webdav.orgのContent-Length：0"
    },
    {
      "indent": 3,
      "text": ">>RESPONSE",
      "ja": ">> RESPONSE"
    },
    {
      "indent": 5,
      "text": "HTTP/1.1 201 Created Cache-Control: no-cache",
      "ja": "HTTP / 1.1 201作成されたのCache-Control：キャッシュなし"
    },
    {
      "indent": 3,
      "text": "In this example, a new workspace is created at http://www.webdav.org/ws/public.",
      "ja": "この例では、新しいワークスペースはhttp://www.webdav.org/ws/publicで作成されます。"
    },
    {
      "indent": 0,
      "text": "6.4 Additional OPTIONS Semantics",
      "section_title": true,
      "ja": "6.4追加オプションのセマンティクス"
    },
    {
      "indent": 3,
      "text": "If a server supports the workspace feature, it MUST include \"workspace\" as a field in the DAV response header from an OPTIONS request on any resource that supports any versioning properties, reports, or methods.",
      "ja": "サーバは、ワークスペースの機能をサポートしている場合、それはどのバージョン管理のプロパティ、レポート、またはメソッドをサポートしているすべてのリソース上のOPTIONS要求からのDAV応答ヘッダ内のフィールドとして「ワークスペース」を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "If a server supports the workspace feature, it MUST also support the checkout-in-place feature and the version-history feature.",
      "ja": "サーバは、ワークスペースの機能をサポートしている場合、それはまた、チェックアウト・イン・プレース機能やバージョン履歴機能をサポートしなければなりません。"
    },
    {
      "indent": 3,
      "text": "A DAV:workspace-collection-set element MAY be included in the request body to identify collections that may contain workspace resources.",
      "ja": "DAV：ワークスペース・コレクション - セット要素は、ワークスペースのリソースが含まれていてもよいコレクションを識別するために、リクエストボディに含まれるかもしれません。"
    },
    {
      "indent": 3,
      "text": "Additional Marshalling:",
      "ja": "追加のマーシャリング："
    },
    {
      "indent": 6,
      "text": "If an XML request body is included, it MUST be a DAV:options XML element.",
      "ja": "オプションのXML要素：XMLリクエストボディが含まれている場合は、DAVでなければなりません。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT options ANY> ANY value: A sequence of elements with at most one DAV:workspace-collection-set element.",
      "ja": "<！ELEMENTオプションANY> ANY値：最大1つのDAVと要素のシーケンス：ワークスペース・コレクション - セット要素。"
    },
    {
      "indent": 6,
      "text": "If an XML response body for a successful request is included, it MUST be a DAV:options-response XML element.",
      "ja": "成功した要求のためのXMLレスポンスボディが含まれている場合は、DAVでなければならない：オプション応答XML要素。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT options-response ANY> ANY value: A sequence of elements with at most one DAV:workspace-collection-set element.",
      "ja": "<！ELEMENTオプション-応答ANY> ANY値：最大1つのDAVと要素のシーケンス：ワークスペース・コレクション - セット要素。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT workspace-collection-set (href*)>",
      "ja": "<！ELEMENTワークスペース・コレクション・セット（HREF *）>"
    },
    {
      "indent": 6,
      "text": "If DAV:workspace-collection-set is included in the request body, the response body for a successful request MUST contain a DAV:workspace-collection-set element identifying collections that may contain workspaces. An identified collection MAY be the root collection of a tree of collections, all of which may contain workspaces. Since different servers can control different parts of the URL namespace, different resources on the same host MAY have different DAV:workspace-collection-set values. The identified collections MAY be located on different hosts from the resource.",
      "ja": "DAV場合：ワークスペース・コレクション・セットがリクエストボディに含まれ、成功した要求に対するレスポンスボディは、DAVを含まなければなりません：ワークスペースを含むことができ、コレクションを特定のワークスペース・コレクション - セット要素。識別のコレクションは、ワークスペースが含まれている可能性のあるすべてのそれらのコレクションのツリーのルートの集合であってもよいです。異なるサーバがURL名前空間の異なる部分を制御することができるので、同じホスト上の異なるリソースが異なるDAVを持っているかもしれません：ワークスペース・コレクション - 設定値。識別のコレクションは、リソースとは別のホスト上に配置することができます。"
    },
    {
      "indent": 0,
      "text": "6.4.1 Example - OPTIONS",
      "section_title": true,
      "ja": "6.4.1例 -  OPTIONS"
    },
    {
      "indent": 3,
      "text": ">>REQUEST",
      "ja": ">> REQUEST"
    },
    {
      "indent": 5,
      "text": "OPTIONS /doc HTTP/1.1 Host: www.webdav.org Content-Type: text/xml; charset=\"utf-8\" Content-Length: xxxx",
      "ja": "OPTIONS / DOCのHTTP / 1.1ホスト：www.webdav.orgのContent-Type：text / xmlで、 charset = \"UTF-8\" をコンテンツの長さ：XXXX"
    },
    {
      "indent": 5,
      "text": "<?xml version=\"1.0\" encoding=\"utf-8\" ?> <D:options xmlns:D=\"DAV:\"> <D:version-history-collection-set/> <D:workspace-collection-set/> </D:options>",
      "ja": "<？xml version = \"1.0\" エンコード= \"UTF-8\"？> <D：オプションのxmlns：D = \"DAV：\"> <D：バージョン履歴収集設定/> <D：ワークスペースコレクションセット/> </ D：オプション>"
    },
    {
      "indent": 3,
      "text": ">>RESPONSE",
      "ja": ">> RESPONSE"
    },
    {
      "indent": 5,
      "text": "HTTP/1.1 200 OK DAV: 1 DAV: version-control,checkout-in-place,version-history,workspace Content-Type: text/xml; charset=\"utf-8\" Content-Length: xxxx",
      "ja": "HTTP / 1.1 200 OK DAV：1 DAV：バージョン管理、チェックアウト・イン・場所、バージョン履歴、ワークスペースのContent-Type：text / xmlで、 charset = \"UTF-8\" をコンテンツの長さ：XXXX"
    },
    {
      "indent": 5,
      "text": "<?xml version=\"1.0\" encoding=\"utf-8\" ?> <D:options-response xmlns:D=\"DAV:\"> <D:version-history-collection-set> <D:href>http://repo.webdav.org/his</D:href> </D:version-history-collection-set> <D:workspace-collection-set> <D:href>http://www.webdav.org/public/ws</D:href> <D:href>http://www.webdav.org/private/ws</D:href> </D:workspace-collection-set> </D:options-response>",
      "ja": "<？xml version = \"1.0\" エンコード= \"UTF-8\"？> <D：オプション・レスポンスのxmlns：D = \"DAV：\"> <D：バージョン履歴収集設定> <D：のhref>のhttp： //repo.webdav.org/his </ D：HREF> </ D：バージョン履歴収集セット> <D：ワークスペース・コレクションセット> <D：HREF> http://www.webdav.org /パブリック/ WS </ D：HREF> <D：HREF> http://www.webdav.org/private/ws </ D：HREF> </ D：ワークスペース・コレクションセット> </ D：オプション]応答>"
    },
    {
      "indent": 3,
      "text": "In this example, the server indicates that it provides Class 1 DAV support and basic-server-workspace versioning support. In addition, the server indicates the requested locations of the version history resources and the workspace resources.",
      "ja": "この例では、サーバーは、それがクラス1 DAVをサポートし、基本的なサーバ・ワークスペースのバージョンのサポートを提供することを示しています。また、サーバーは、バージョン履歴リソースとワークスペースのリソースの要求された場所を示します。"
    },
    {
      "indent": 0,
      "text": "6.5 Additional DELETE Semantics",
      "section_title": true,
      "ja": "6.5追加のDELETEセマンティクス"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:delete-workspace-members): If a workspace is deleted, any resource that identifies that workspace in its DAV:workspace property MUST be deleted.",
      "ja": "（DAV：削除 - ワークスペース - メンバー）：ワークスペースは、そのDAVでそのワークスペースを識別する任意のリソースを削除された場合：ワークスペースのプロパティを削除する必要があります。"
    },
    {
      "indent": 0,
      "text": "6.6 Additional MOVE Semantics",
      "section_title": true,
      "ja": "6.6追加のMOVEセマンティクス"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:workspace-member-moved): If the request-URL did not identify a workspace, the DAV:workspace of the destination MUST have been updated to have the same value as the DAV:workspace of the parent collection of the destination.",
      "ja": "（DAV：ワークスペースメンバー-移動）：リクエストURLは、DAVをワークスペースを特定していない場合は、次の目的地の親コレクションのワークスペース：先のワークスペースは、DAVと同じ値を持つように更新されている必要があります。"
    },
    {
      "indent": 6,
      "text": "(DAV:workspace-moved): If the request-URL identified a workspace, any reference to that workspace in a DAV:workspace property MUST have been updated to refer to the new location of that workspace.",
      "ja": "（DAV：ワークスペース-移動）：リクエストURLの場合は、DAVでそのワークスペースへの参照、ワークスペースを識別：ワークスペースプロパティには、そのワークスペースの新しい場所を参照するように更新されている必要があります。"
    },
    {
      "indent": 0,
      "text": "6.7 Additional VERSION-CONTROL Semantics",
      "section_title": true,
      "ja": "6.7追加VERSION-CONTROLのセマンティクス"
    },
    {
      "indent": 3,
      "text": "A VERSION-CONTROL request can be used to create a new version-controlled resource for an existing version history. This allows the creation of version-controlled resources for the same version history in multiple workspaces.",
      "ja": "VERSION-CONTROLリクエストは、既存のバージョン履歴の新しいバージョン管理されたリソースを作成するために使用することができます。これは、複数のワークスペース内の同じバージョン履歴のバージョン管理されたリソースを作成することができます。"
    },
    {
      "indent": 3,
      "text": "Additional Marshalling:",
      "ja": "追加のマーシャリング："
    },
    {
      "indent": 6,
      "text": "<!ELEMENT version-control ANY> ANY value: A sequence of elements with at most one DAV:version element.",
      "ja": "<！ELEMENTバージョン管理ANY> ANY値：version要素：最大1つのDAVと要素のシーケンス。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT version (href)>",
      "ja": "<！ELEMENTバージョン（HREF）>"
    },
    {
      "indent": 3,
      "text": "Additional Preconditions:",
      "ja": "追加の前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:cannot-add-to-existing-history): If the DAV:version-control request body element contains a DAV:version element, the request-URL MUST NOT identify a resource.",
      "ja": "（DAV：-追加しない-に-既存の履歴ことができます）：DAVの場合：バージョン管理要求本体要素は、DAVが含まれていますバージョン要素、リクエストURLは、リソースを識別することはできません。"
    },
    {
      "indent": 6,
      "text": "(DAV:must-be-version): The DAV:href of the DAV:version element MUST identify a version.",
      "ja": "（DAV：-でなければならないバージョン）：DAV：DAVのhref：バージョン要素は、バージョンを識別しなければなりません。"
    },
    {
      "indent": 6,
      "text": "(DAV:one-version-controlled-resource-per-history-per-workspace): If the DAV:version-control request body specifies a version, and if the request-URL is a member of a workspace, then there MUST NOT already be a version-controlled member of that workspace whose DAV:checked-in or DAV:checked-out property identifies any version from the version history of the version specified in the request body.",
      "ja": "（DAV：1  - バージョン管理されたリソースあたりの歴史あたりのワークスペース）：DAVの場合：バージョン管理リクエストボディには、バージョンを指定し、リクエストURLは、ワークスペースのメンバーである場合、そこてはなりませんチェックインまたはDAV：既にDAVそのワークスペースのバージョン制御部材であるチェックアウトプロパティは、要求本体に指定されたバージョンのバージョン履歴から任意のバージョンを識別する。"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:new-version-controlled-resource): If the request-URL did NOT identify a resource, a new version-controlled resource exists at the request-URL whose content and dead properties are initialized by those of the version in the request body, and whose DAV:checked-in property identifies that version.",
      "ja": "（DAV：新バージョン管理されたリソース）：リクエストURLがリソースを識別しなかった場合は、新しいバージョン管理されたリソースは、その内容とデッドプロパティは、要求にバージョンのものとすることによって初期化されているリクエストURLに存在しますそのDAV体、および：チェックインされたプロパティは、そのバージョンを識別する。"
    },
    {
      "indent": 0,
      "text": "6.7.1 Example - VERSION-CONTROL (using an existing version history)",
      "section_title": true,
      "ja": "6.7.1例 -  VERSION-CONTROL（既存のバージョン履歴を使用して）"
    },
    {
      "indent": 3,
      "text": ">>REQUEST",
      "ja": ">> REQUEST"
    },
    {
      "indent": 5,
      "text": "VERSION-CONTROL /ws/public/bar.html HTTP/1.1 Host: www.webdav.org Content-Type: text/xml; charset=\"utf-8\" Content-Length: xxxx",
      "ja": "VERSION-CONTROL /ws/public/bar.html HTTP / 1.1ホスト：www.webdav.orgのContent-Type：text / xmlで、 charset = \"UTF-8\" をコンテンツの長さ：XXXX"
    },
    {
      "indent": 5,
      "text": "<?xml version=\"1.0\" encoding=\"utf-8\" ?> <D:version-control xmlns:D=\"DAV:\"> <D:version> <D:href>http://repo.webdav.org/his/12/ver/V3</D:href> </D:version> </D:version-control>",
      "ja": "<？xml version = \"1.0\" エンコード= \"UTF-8\"？> <D：バージョン管理のxmlns：D = \"DAV：\"> <D：バージョン> <D：HREF>のhttp：//repo.webdav。 ORG /彼/ 12 /版/ V3 </ D：HREF> </ D：バージョン> </ D：バージョン管理>"
    },
    {
      "indent": 3,
      "text": ">>RESPONSE",
      "ja": ">> RESPONSE"
    },
    {
      "indent": 5,
      "text": "HTTP/1.1 201 Created Cache-Control: no-cache",
      "ja": "HTTP / 1.1 201作成されたのCache-Control：キャッシュなし"
    },
    {
      "indent": 3,
      "text": "In this example, a new version-controlled resource is created at /ws/public/bar.html. The content and dead properties of the new version-controlled resource are initialized to be the same as those of the version identified by http://repo.webdav.org/his/12/ver/V3.",
      "ja": "この例では、新しいバージョン管理されたリソースは/ws/public/bar.htmlで作成されます。新バージョン管理されたリソースの内容とデッドプロパティはhttp://repo.webdav.org/his/12/ver/V3によって識別されたバージョンのものと同じになるように初期化されます。"
    },
    {
      "indent": 0,
      "text": "7 UPDATE Feature",
      "ja": "7 Update機能"
    },
    {
      "indent": 3,
      "text": "The update feature provides a mechanism for changing the state of a checked-in version-controlled resource to be that of another version from the version history of that resource.",
      "ja": "更新機能は、そのリソースのバージョン履歴から別のバージョンのものであることをチェックインバージョン管理されたリソースの状態を変更するための機構を提供します。"
    },
    {
      "indent": 0,
      "text": "7.1 UPDATE Method",
      "section_title": true,
      "ja": "7.1アップデート方法"
    },
    {
      "indent": 3,
      "text": "The UPDATE method modifies the content and dead properties of a checked-in version-controlled resource (the \"update target\") to be those of a specified version (the \"update source\") from the version history of that version-controlled resource.",
      "ja": "UPDATEメソッドは、バージョン管理されたリソースのバージョン履歴から指定されたバージョン（「アップデート元」）のものであることをチェックインバージョン管理されたリソース（「更新対象」）の内容とデッドプロパティを修正します。"
    },
    {
      "indent": 3,
      "text": "The response to an UPDATE request identifies the resources modified by the request, so that a client can efficiently update any cached state it is maintaining. Extensions to the UPDATE method allow multiple resources to be modified from a single UPDATE request (see Section 12.13).",
      "ja": "クライアントが効率的にそれが維持されている任意のキャッシュされた状態を更新できるようにUPDATE要求への応答は、要求によって変更されたリソースを識別する。 UPDATEメソッドへの拡張は、複数のリソースを単一のUPDATE要求（セクション12.13を参照）から改変されることを可能にします。"
    },
    {
      "indent": 3,
      "text": "Marshalling:",
      "ja": "マーシャリング："
    },
    {
      "indent": 6,
      "text": "The request body MUST be a DAV:update element.",
      "ja": "update要素：リクエストボディは、DAVでなければなりません。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT update ANY> ANY value: A sequence of elements with at most one DAV:version element and at most one DAV:prop element. <!ELEMENT version (href)> prop: see RFC 2518, Section 12.11",
      "ja": "<！ELEMENTがANYを更新> ANY値：version要素と最大1つのDAVで：要素小道具で最も1 DAVと要素のシーケンス。 <！ELEMENTバージョン（HREF）>小道具：RFC 2518を参照してください、セクション12.11"
    },
    {
      "indent": 6,
      "text": "The response for a successful request MUST be a 207 Multi-Status, where the DAV:multistatus XML element in the response body identifies all resources that have been modified by the request.",
      "ja": "レスポンスボディにmultistatus XML要素の要求によって変更されているすべてのリソースを識別します。成功した要求に対する応答は、DAVが207マルチ状態でなければなりません。"
    },
    {
      "indent": 6,
      "text": "multistatus: see RFC 2518, Section 12.9",
      "ja": "multistatus：RFC 2518を参照してください、セクション12.9"
    },
    {
      "indent": 6,
      "text": "The response MUST include a Cache-Control:no-cache header.",
      "ja": "キャッシュなしヘッダー：レスポンスはのCache-Controlを含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "Postconditions:",
      "ja": "事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:update-content-and-properties): If the DAV:version element in the request body identified a version that is in the same version history as the DAV:checked-in version of a version-controlled resource identified by the request-URL, then the content and dead properties of that version-controlled resource MUST be the same as those of the version specified by the DAV:version element, and the DAV:checked-in property of the version-controlled resource MUST identify that version. The request-URL MUST appear in a DAV:response element in the response body.",
      "ja": "（DAV：更新コンテンツ・アンド・プロパティ）：リクエストボディ内のバージョン素子DAVと同じバージョン履歴にあるバージョンを識別し：DAVの場合チェックイン要求によって識別バージョン管理されたリソースのバージョン-URL、そのバージョン管理されたリソースの内容とデッドプロパティはDAVにより指定されたバージョンのものと同じでなければなりません：バージョン要素、およびDAV：チェックインバージョン管理されたリソースのプロパティは、そのバージョンを識別しなければなりません。レスポンスボディに応答要素：リクエストURLは、DAVに現れなければなりません。"
    },
    {
      "indent": 6,
      "text": "(DAV:report-properties): If DAV:prop is specified in the request body, the properties specified in the DAV:prop element MUST be reported in the DAV:response elements in the response body.",
      "ja": "DAV場合：支柱がリクエストボディに指定され、DAVで指定されたプロパティ：（DAV：レポートプロパティ）要素プロップは、DAVに報告しなければならない：応答体における応答エレメント。"
    },
    {
      "indent": 0,
      "text": "7.1.1 Example - UPDATE",
      "section_title": true,
      "ja": "7.1.1例 -  UPDATE"
    },
    {
      "indent": 3,
      "text": ">>REQUEST",
      "ja": ">> REQUEST"
    },
    {
      "indent": 5,
      "text": "UPDATE /foo.html HTTP/1.1 Host: www.webdav.org Content-type: text/xml; charset=\"utf-8\" Content-Length: xxxx",
      "ja": "UPDATE /foo.html HTTP / 1.1ホスト：www.webdav.orgコンテンツタイプ：text / xmlで、 charset = \"UTF-8\" をコンテンツの長さ：XXXX"
    },
    {
      "indent": 5,
      "text": "<?xml version=\"1.0\" encoding=\"utf-8\" ?> <D:update xmlns:D=\"DAV:\"> <D:version> <D:href>http://repo.webdav.org/his/23/ver/33</D:href> </D:version> </D:update>",
      "ja": "<？xml version = \"1.0\" エンコード= \"UTF-8\"？> <D：更新のxmlns：D = \"DAV：\"> <D：バージョン> <D：HREF> http://repo.webdav.org/彼/ 23 /版/ 33 </ D：HREF> </ D：バージョン> </ D：更新>"
    },
    {
      "indent": 3,
      "text": ">>RESPONSE",
      "ja": ">> RESPONSE"
    },
    {
      "indent": 5,
      "text": "HTTP/1.1 207 Multi-Status Content-Type: text/xml; charset=\"utf-8\" Content-Length: xxxx Cache-Control: no-cache",
      "ja": "HTTP / 1.1 207マルチステータスのContent-Type：text / xmlで、 charset = \"UTF-8\" をコンテンツの長さ：XXXXのCache-Control：キャッシュなし"
    },
    {
      "indent": 5,
      "text": "<?xml version=\"1.0\" encoding=\"utf-8\" ?> <D:multistatus xmlns:D=\"DAV:\"> <D:response> <D:href>http://www.webdav.org/foo.html</D:href> <D:status>HTTP/1.1 200 OK</D:status> </D:response>",
      "ja": "<？xml version = \"1.0\" エンコード= \"UTF-8\"？> <D：multistatusのxmlns：D = \"DAV：\"> <D：レスポンス> <D：HREF> http://www.webdav.org/ foo.htmlという</ D：HREF> <D：ステータス> HTTP / 1.1 200 OK </ D：状態> </ D：応答>"
    },
    {
      "indent": 3,
      "text": "In this example, the content and dead properties of http://repo.webdav.org/his/23/ver/33 are copied to the version-controlled resource /foo.html, and the DAV:checked-in property of /foo.html is updated to refer to http://repo.webdav.org/his/23/ver/33.",
      "ja": "この例では、http://repo.webdav.org/his/23/ver/33の内容とデッドプロパティはバージョン管理されたリソースの/foo.htmlにコピーされ、DAV：チェックインされた/のプロパティfoo.htmlというはhttp://repo.webdav.org/his/23/ver/33を参照するように更新されます。"
    },
    {
      "indent": 0,
      "text": "7.2 Additional OPTIONS Semantics",
      "section_title": true,
      "ja": "7.2追加オプションのセマンティクス"
    },
    {
      "indent": 3,
      "text": "If the server supports the update feature, it MUST include \"update\" as a field in the DAV response header from an OPTIONS request on any resource that supports any versioning properties, reports, or methods.",
      "ja": "サーバが更新機能をサポートしている場合、それはどのバージョン管理のプロパティ、レポート、またはメソッドをサポートしているすべてのリソース上のOPTIONS要求からのDAV応答ヘッダ内のフィールドとして「更新」を含まなければなりません。"
    },
    {
      "indent": 0,
      "text": "8 Label Feature",
      "ja": "8ラベル機能"
    },
    {
      "indent": 3,
      "text": "A version \"label\" is a string that distinguishes one version in a version history from all other versions in that version history. A label can automatically be assigned by a server, or it can be assigned by a client in order to provide a meaningful name for that version. A given version label can be assigned to at most one version of a given version history, but client assigned labels can be reassigned to another version at any time. Note that although a given label can be applied to at most one version from the same version history, the same label can be applied to versions from different version histories.",
      "ja": "バージョン「標識」は、そのバージョンの歴史の中で他のすべてのバージョンからのバージョン履歴内の1つのバージョンを区別する文字列です。ラベルは、自動的にサーバが割り当てることができ、またはそれは、そのバージョンの意味のある名前を提供するために、クライアントによって割り当てることができます。与えられたバージョンラベルは、特定のバージョン履歴の最大1つのバージョンに割り当てることができますが、クライアントに割り当てられたラベルは、いつでも別のバージョンに再割り当てすることができます。与えられたラベルは、同じバージョン履歴から最大1つのバージョンに適用することもできるが、同じラベルが異なるバージョン履歴からのバージョンにも適用できることに注意してください。"
    },
    {
      "indent": 3,
      "text": "For certain methods, if the request-URL identifies a version-controlled resource, a label can be specified in a Label request header (see Section 8.3) to cause the method to be applied to the version selected by that label from the version history of that version-controlled resource.",
      "ja": "要求URLは、バージョン管理されたリソースを識別する場合に特定の方法については、ラベルは、ラベル要求ヘッダーに指定することができる（セクション8.3を参照）方法は、バージョン履歴からそのラベルによって選択されたバージョンに適用させますそのバージョン管理されたリソース。"
    },
    {
      "indent": 0,
      "text": "8.1 Additional Version Properties",
      "section_title": true,
      "ja": "8.1追加バージョンのプロパティ"
    },
    {
      "indent": 3,
      "text": "The label feature introduces the following REQUIRED property for a version.",
      "ja": "ラベル機能は、バージョンのため、次の必要なプロパティを紹介します。"
    },
    {
      "indent": 0,
      "text": "8.1.1 DAV:label-name-set (protected)",
      "section_title": true,
      "ja": "8.1.1 DAV：ラベル名セット（保護）"
    },
    {
      "indent": 3,
      "text": "This property contains the labels that currently select this version.",
      "ja": "このプロパティは、現在、このバージョンを選択したラベルが含まれています。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT label-name-set (label-name*)> <!ELEMENT label-name (#PCDATA)> PCDATA value: string",
      "ja": "<！ELEMENTラベル名-セット（ラベル名*）> <！ELEMENTのラベル名（#PCDATA）> PCDATA値：文字列"
    },
    {
      "indent": 0,
      "text": "8.2 LABEL Method",
      "section_title": true,
      "ja": "8.2 LABEL方法"
    },
    {
      "indent": 3,
      "text": "A LABEL request can be applied to a version to modify the labels that select that version. The case of a label name MUST be preserved when it is stored and retrieved. When comparing two label names to decide if they match or not, a server SHOULD use a case-sensitive URL-escaped UTF-8 encoded comparison of the two label names.",
      "ja": "LABELリクエストは、そのバージョンを選択し、ラベルを変更するためのバージョンにも適用することができます。それは保存され、取得されたときにラベル名の場合は、保存されなければなりません。それらが一致するかどうかを決定するために、2人のラベル名を比較すると、サーバーは、二つのラベル名の大文字と小文字を区別URLエスケープUTF-8でエンコードされた比較を使用すべきです。"
    },
    {
      "indent": 3,
      "text": "If a LABEL request is applied to a checked in version-controlled resource, the operation MUST be applied to the DAV:checked-in version of that version-controlled resource.",
      "ja": "LABEL要求がバージョン管理されたリソースで確認に適用した場合、動作は、DAVに適用されなければならない：チェックインされたそのバージョン管理されたリソースのバージョン。"
    },
    {
      "indent": 3,
      "text": "Marshalling:",
      "ja": "マーシャリング："
    },
    {
      "indent": 6,
      "text": "The request body MUST be a DAV:label element.",
      "ja": "label要素：リクエストボディは、DAVでなければなりません。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT label ANY> ANY value: A sequence of elements with at most one DAV:add, DAV:set, or DAV:remove element.",
      "ja": "<！ELEMENTラベルANY> ANY値：最大1つのDAVでの要素の順序は：セット、またはDAV：：、DAVの追加要素を削除します。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT add (label-name)> <!ELEMENT set (label-name)> <!ELEMENT remove (label-name)> <!ELEMENT label-name (#PCDATA)> PCDATA value: string",
      "ja": "<！ELEMENTセット（ラベル名）> <！ELEMENT削除（ラベル名）> <！ELEMENTラベル名（#PCDATA）> PCDATA値<！ELEMENTは（ラベル名）を追加>：文字列"
    },
    {
      "indent": 6,
      "text": "The request MAY include a Label header.",
      "ja": "リクエストは、ラベルヘッダーを含むかもしれません。"
    },
    {
      "indent": 6,
      "text": "The request MAY include a Depth header. If no Depth header is included, Depth:0 is assumed. Standard depth semantics apply, and the request is applied to the collection identified by the request-URL and to all members of the collection that satisfy the Depth value. If a Depth header is included and the request fails on any resource, the response MUST be a 207 Multi-Status that identifies all resources for which the request has failed.",
      "ja": "要求は、深さのヘッダを含むかもしれません。いかなる深ヘッダが含まれていない場合、深さ：0が仮定されます。標準的な深さのセマンティクスが適用され、要求が要求URLで識別されるコレクションにし、深さ値を満たすコレクションのすべてのメンバーに適用されます。奥行きヘッダが含まれており、要求がどのリソースに失敗した場合、応答は、要求が失敗したすべてのリソースを識別する207マルチ状態でなければなりません。"
    },
    {
      "indent": 6,
      "text": "If a response body for a successful request is included, it MUST be a DAV:label-response XML element.",
      "ja": "成功した要求に対するレスポンスボディが含まれている場合は、DAVでなければならない：ラベル応答XML要素。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT label-response ANY>",
      "ja": "<！ELEMENTラベル応答ANY>"
    },
    {
      "indent": 6,
      "text": "The response MUST include a Cache-Control:no-cache header.",
      "ja": "キャッシュなしヘッダー：レスポンスはのCache-Controlを含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "Preconditions:",
      "ja": "前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:must-be-checked-in): If the request-URL identifies a version-controlled resource, the version-controlled resource MUST be checked in.",
      "ja": "（DAV：-でなければなりません-にチェックイン）：リクエストURLがバージョン管理されたリソースを識別する場合、バージョン管理されたリソースは、でチェックしなければなりません。"
    },
    {
      "indent": 6,
      "text": "(DAV:must-select-version-in-history): If a Label request header is included and the request-URL identifies a version-controlled resource, the specified label MUST select a version in the version history of the version-controlled resource.",
      "ja": "（DAV： - 選択しなければならないバージョンイン履歴）：ラベル要求ヘッダが含まれており、要求URLは、バージョン管理されたリソースを識別された場合、指定されたラベルは、バージョン管理されたリソースのバージョン履歴にバージョンを選択する必要があります。"
    },
    {
      "indent": 6,
      "text": "(DAV:add-must-be-new-label): If DAV:add is specified in the request body, the specified label MUST NOT appear in the DAV:label-name-set of any version in the version history of that version-controlled resource.",
      "ja": "（DAV：アドオン-でなければならない - 新しいラベルは）：DAV場合：追加のリクエストボディに指定され、指定されたラベルは、DAVにも現れてはなりません：そのバージョンのバージョンの歴史の中で任意のバージョンのラベル名セット-controlledリソース。"
    },
    {
      "indent": 6,
      "text": "(DAV:label-must-exist): If DAV:remove is specified in the request body, the specified label MUST appear in the DAV:label-name-set of that version.",
      "ja": "DAV場合：：（DAV：ラベルのマストが存在）削除がリクエストボディに指定され、指定されたラベルは、DAVに現れなければならない：そのバージョンのラベル名セット。"
    },
    {
      "indent": 3,
      "text": "Postconditions:",
      "ja": "事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:add-or-set-label): If DAV:add or DAV:set is specified in the request body, the specified label MUST appear in the DAV:label-name-set of the specified version, and MUST NOT appear in the DAV:label-name-set of any other version in the version history of that version.",
      "ja": "追加またはDAV：DAV場合：（DAV：セットの追加・オア・ラベル）指定されたバージョンのラベル名・セット、および表示されてはならない：セットがリクエストボディに指定され、指定されたラベルは、DAVに現れなければなりませんそのバージョンのバージョン履歴内の他のバージョンのラベル名セット：DAVインチ"
    },
    {
      "indent": 6,
      "text": "(DAV:remove-label): If DAV:remove is specified in the request body, the specified label MUST NOT appear in the DAV:label-name-set of any version in the version history of that version.",
      "ja": "DAV場合：：（DAV：削除ラベル）削除がリクエストボディに指定され、指定されたラベルは、DAVにも現れてはなりません：そのバージョンのバージョンの歴史の中で任意のバージョンのラベル名セット。"
    },
    {
      "indent": 0,
      "text": "8.2.1 Example - Setting a label",
      "section_title": true,
      "ja": "8.2.1例 - ラベルを設定します"
    },
    {
      "indent": 3,
      "text": ">>REQUEST",
      "ja": ">> REQUEST"
    },
    {
      "indent": 5,
      "text": "LABEL /foo.html HTTP/1.1 Host: www.webdav.org Content-type: text/xml; charset=\"utf-8\" Content-Length: xxxx",
      "ja": "LABEL /foo.html HTTP / 1.1ホスト：www.webdav.orgコンテンツタイプ：text / xmlで、 charset = \"UTF-8\" をコンテンツの長さ：XXXX"
    },
    {
      "indent": 5,
      "text": "<?xml version=\"1.0\" encoding=\"utf-8\" ?> <D:label xmlns:D=\"DAV:\"> <D:set> <D:label-name>default</D:label-name> </D:set> </D:label>",
      "ja": "<？xml version = \"1.0\" エンコード= \"UTF-8\"？> <D：ラベルのxmlns：D = \"DAV：\"> <D：セット> <D：ラベル名>デフォルト</ D：ラベル名> </ D：セット> </ D：ラベル>"
    },
    {
      "indent": 3,
      "text": ">>RESPONSE",
      "ja": ">> RESPONSE"
    },
    {
      "indent": 5,
      "text": "HTTP/1.1 200 OK Cache-Control: no-cache",
      "ja": "HTTP / 1.1 200 OKのCache-Control：キャッシュなし"
    },
    {
      "indent": 3,
      "text": "In this example, the label \"default\" is applied to the DAV:checked-in version of /foo.html.",
      "ja": "/foo.htmlのチェックインされたバージョン：この例では、ラベル「デフォルトは」DAVに適用されます。"
    },
    {
      "indent": 0,
      "text": "8.3 Label Header",
      "section_title": true,
      "ja": "8.3ラベルヘッダー"
    },
    {
      "indent": 3,
      "text": "For certain methods (e.g. GET, PROPFIND), if the request-URL identifies a version-controlled resource, a label can be specified in a Label request header to cause the method to be applied to the version selected by that label from the version history of that version-controlled resource.",
      "ja": "特定の方法（例えば、GET、PROPFIND）ため、要求URLは、バージョン管理されたリソースを識別する場合、ラベルは、方法は、バージョン履歴からそのラベルによって選択されたバージョンに適用させるためにラベル要求ヘッダーに指定することができますそのバージョン管理されたリソースの。"
    },
    {
      "indent": 3,
      "text": "The value of a label header is the name of a label, encoded using URL-escaped UTF-8. For example, the label \"release B.3\" is identified by the following header:",
      "ja": "ラベルヘッダの値は、URLエスケープUTF-8を使用して符号化、ラベルの名前です。たとえば、ラベル「リリースB.3」は、以下のヘッダにより識別されます。"
    },
    {
      "indent": 5,
      "text": "Label: release%20B.3",
      "ja": "レーベル：％20B.3をリリース"
    },
    {
      "indent": 3,
      "text": "A Label header MUST have no effect on a request whose request-URL does not identify a version-controlled resource. In particular, it MUST have no effect on a request whose request-URL identifies a version or a version history.",
      "ja": "ラベルヘッダは、要求URL、バージョン管理されたリソースを識別しない要求には影響しませんしなければなりません。特に、リクエストURLバージョンまたはバージョン履歴を特定の要求には影響しませんしなければなりません。"
    },
    {
      "indent": 3,
      "text": "A server MUST return an HTTP-1.1 Vary header containing Label in a successful response to a cacheable request (e.g., GET) that includes a Label header.",
      "ja": "サーバは、HTTP-1.1を返さなければならないラベルヘッダを含むキャッシュ可能なリクエスト（例えば、GET）に成功した応答にラベルを含むヘッダを変え。"
    },
    {
      "indent": 0,
      "text": "8.4 Additional OPTIONS Semantics",
      "section_title": true,
      "ja": "8.4追加オプションのセマンティクス"
    },
    {
      "indent": 3,
      "text": "If the server supports the label feature, it MUST include \"label\" as a field in the DAV response header from an OPTIONS request on any resource that supports any versioning properties, reports, or methods.",
      "ja": "サーバーは、ラベル機能をサポートしている場合、それはどのバージョン管理のプロパティ、レポート、またはメソッドをサポートしているすべてのリソース上のOPTIONS要求からのDAV応答ヘッダ内のフィールドとして「ラベル」を含まなければなりません。"
    },
    {
      "indent": 0,
      "text": "8.5 Additional GET Semantics",
      "section_title": true,
      "ja": "8.5追加のGETのセマンティクス"
    },
    {
      "indent": 3,
      "text": "Additional Marshalling:",
      "ja": "追加のマーシャリング："
    },
    {
      "indent": 6,
      "text": "The request MAY include a Label header.",
      "ja": "リクエストは、ラベルヘッダーを含むかもしれません。"
    },
    {
      "indent": 3,
      "text": "Additional Preconditions:",
      "ja": "追加の前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:must-select-version-in-history): If a Label request header is included and the request-URL identifies a version-controlled resource, the specified label MUST select a version in the version history of the version-controlled resource.",
      "ja": "（DAV： - 選択しなければならないバージョンイン履歴）：ラベル要求ヘッダが含まれており、要求URLは、バージョン管理されたリソースを識別された場合、指定されたラベルは、バージョン管理されたリソースのバージョン履歴にバージョンを選択する必要があります。"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:apply-request-to-labeled-version): If the request-URL identifies a version-controlled resource and a Label request header is included, the response MUST contain the content of the specified version rather than that of the version-controlled resource.",
      "ja": "（DAV：適用要求ツー標識バージョン）：リクエストURLは、バージョン管理されたリソースを識別し、ラベル要求ヘッダが含まれ、応答がかなり版 - よりも指定されたバージョンの内容を含まなければならない場合制御リソース。"
    },
    {
      "indent": 0,
      "text": "8.6 Additional PROPFIND Semantics",
      "section_title": true,
      "ja": "8.6追加のPROPFINDセマンティクス"
    },
    {
      "indent": 3,
      "text": "Additional Marshalling:",
      "ja": "追加のマーシャリング："
    },
    {
      "indent": 6,
      "text": "The request MAY include a Label header.",
      "ja": "リクエストは、ラベルヘッダーを含むかもしれません。"
    },
    {
      "indent": 3,
      "text": "Additional Preconditions:",
      "ja": "追加の前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:must-select-version-in-history): If a Label request header is included and the request-URL identifies a version-controlled resource, the specified label MUST select a version in the version history of the version-controlled resource.",
      "ja": "（DAV： - 選択しなければならないバージョンイン履歴）：ラベル要求ヘッダが含まれており、要求URLは、バージョン管理されたリソースを識別された場合、指定されたラベルは、バージョン管理されたリソースのバージョン履歴にバージョンを選択する必要があります。"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:apply-request-to-labeled-version): If the request-URL identifies a version-controlled resource and a Label request header is included, the response MUST contain the properties of the specified version rather than that of the version-controlled resource.",
      "ja": "（DAV：適用要求ツー標識バージョン）：リクエストURLは、バージョン管理されたリソースを識別し、ラベル要求ヘッダが含まれ、応答がかなり版 - よりも指定されたバージョンのプロパティを含む必要がある場合制御リソース。"
    },
    {
      "indent": 0,
      "text": "8.7 Additional COPY Semantics",
      "section_title": true,
      "ja": "8.7追加のコピー・セマンティクス"
    },
    {
      "indent": 3,
      "text": "Additional Marshalling:",
      "ja": "追加のマーシャリング："
    },
    {
      "indent": 6,
      "text": "The request MAY include a Label header.",
      "ja": "リクエストは、ラベルヘッダーを含むかもしれません。"
    },
    {
      "indent": 3,
      "text": "Additional Preconditions:",
      "ja": "追加の前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:must-select-version-in-history): If a Label request header is included and the request-URL identifies a version-controlled resource, the specified label MUST select a version in the version history of the version-controlled resource.",
      "ja": "（DAV： - 選択しなければならないバージョンイン履歴）：ラベル要求ヘッダが含まれており、要求URLは、バージョン管理されたリソースを識別された場合、指定されたラベルは、バージョン管理されたリソースのバージョン履歴にバージョンを選択する必要があります。"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:apply-request-to-labeled-version): If the request-URL identifies a version-controlled resource and a Label request header is included, the request MUST have copied the properties and content of the specified version rather than that of the version-controlled resource.",
      "ja": "（DAV：適用要求ツー標識バージョン）：リクエストURLは、バージョン管理されたリソースを識別し、ラベル要求ヘッダが含まれている場合、要求は、プロパティむしろよりも指定されたバージョンの内容をコピーしなければなりませんバージョン管理されたリソース。"
    },
    {
      "indent": 0,
      "text": "8.8 Additional CHECKOUT Semantics",
      "section_title": true,
      "ja": "8.8追加のチェックアウトのセマンティクス"
    },
    {
      "indent": 3,
      "text": "If the server supports the working-resource option, a LABEL header may be included to check out the version selected by the specified label.",
      "ja": "サーバーが作業リソースオプションをサポートしている場合は、LABELヘッダは、指定されたラベルが選択したバージョンをチェックアウトするために含まれてもよいです。"
    },
    {
      "indent": 3,
      "text": "Additional Marshalling:",
      "ja": "追加のマーシャリング："
    },
    {
      "indent": 6,
      "text": "The request MAY include a Label header.",
      "ja": "リクエストは、ラベルヘッダーを含むかもしれません。"
    },
    {
      "indent": 3,
      "text": "Additional Preconditions:",
      "ja": "追加の前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:must-select-version-in-history): If a Label request header is included and the request-URL identifies a version-controlled resource, the specified label MUST select a version in the version history of the version-controlled resource.",
      "ja": "（DAV： - 選択しなければならないバージョンイン履歴）：ラベル要求ヘッダが含まれており、要求URLは、バージョン管理されたリソースを識別された場合、指定されたラベルは、バージョン管理されたリソースのバージョン履歴にバージョンを選択する必要があります。"
    },
    {
      "indent": 6,
      "text": "(DAV:must-not-have-label-and-apply-to-version): If a Label request header is included, the request body MUST NOT contain a DAV:apply-to-version element.",
      "ja": "（DAV：--てはなりません-ラベルと-適用-に-版）：ラベルリクエストヘッダが含まれている場合、リクエストボディは、DAVを含めることはできません：適用-にバージョン要素。"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:apply-request-to-labeled-version): If the request-URL identifies a checked-in version-controlled resource, and a Label request header is included, the CHECKOUT MUST have been applied to the version selected by the specified label, and not to the version-controlled resource itself.",
      "ja": "（DAV：適用要求ツー標識バージョン）：リクエストURLがチェックインバージョン管理されたリソースを識別し、ラベル要求ヘッダが含まれている場合、チェックアウトが指定により選択されたバージョンに適用されている必要がありますラベルではなく、バージョン管理されたリソースそのものへ。"
    },
    {
      "indent": 0,
      "text": "8.9 Additional UPDATE Semantics",
      "section_title": true,
      "ja": "8.9追加のUPDATEセマンティクス"
    },
    {
      "indent": 3,
      "text": "If the request body of an UPDATE request contains a DAV:label-name element, the update target is the resource identified by the request-URL, and the update source is the version selected by the specified label from the version history of the update target.",
      "ja": "UPDATEリクエストのリクエストボディは、DAVが含まれている場合：ラベル名の要素を、更新対象は、要求URLで識別される資源であり、アップデート元は、更新対象のバージョン履歴から指定されたラベルが選択したバージョンです。 。"
    },
    {
      "indent": 3,
      "text": "Additional Marshalling:",
      "ja": "追加のマーシャリング："
    },
    {
      "indent": 6,
      "text": "<!ELEMENT update ANY> ANY value: A sequence of elements with at most one DAV:label-name or DAV:version element (but not both). <!ELEMENT label-name (#PCDATA)> PCDATA value: string",
      "ja": "<！ELEMENTがANYを更新> ANY値：ラベル名またはDAV：version要素（両方ではない）で最も1 DAVと要素のシーケンス。 <！ELEMENTラベル名（#PCDATA）> PCDATA値：文字列"
    },
    {
      "indent": 6,
      "text": "The request MAY include a Depth header. If no Depth header is included, Depth:0 is assumed. Standard depth semantics apply, and the request is applied to the collection identified by the request-URL and to all members of the collection that satisfy the Depth value. If a Depth header is included and the request fails on any resource, the response MUST be a 207 Multi-Status that identifies all resources for which the request has failed.",
      "ja": "要求は、深さのヘッダを含むかもしれません。いかなる深ヘッダが含まれていない場合、深さ：0が仮定されます。標準的な深さのセマンティクスが適用され、要求が要求URLで識別されるコレクションにし、深さ値を満たすコレクションのすべてのメンバーに適用されます。奥行きヘッダが含まれており、要求がどのリソースに失敗した場合、応答は、要求が失敗したすべてのリソースを識別する207マルチ状態でなければなりません。"
    },
    {
      "indent": 3,
      "text": "Additional Preconditions:",
      "ja": "追加の前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:must-select-version-in-history): If the request includes a DAV:label-name element in the request body, the label MUST select a version in the version history of the version-controlled resource identified by the request-URL.",
      "ja": "リクエストがDAV含まれている場合：（DAV：-選択しなければならない-バージョンで履歴）リクエストボディ内のラベル-name要素を、ラベルが要求によって識別されるバージョン管理されたリソースのバージョン履歴でバージョンを選択する必要があります-URL。"
    },
    {
      "indent": 6,
      "text": "(DAV:depth-update): If the request includes a Depth header, standard depth semantics apply, and the request is applied to the collection identified by the request-URL and to all members of the collection that satisfy the Depth value. The request MUST be applied to a collection before being applied to any members of that collection, since an update of a version-controlled collection might change the membership of that collection.",
      "ja": "（DAV：深さ更新）要求奥行きヘッダが含まれている場合、標準の深さのセマンティクスが適用され、そしてリクエストがリクエストURLによって識別コレクションに奥行き値を満たすコレクションのすべてのメンバーに適用されます。要求は、バージョン管理されたコレクションの更新は、そのコレクションのメンバーシップを変更するかもしれないので、そのコレクションのすべてのメンバーに適用される前に、コレクションに適用されなければなりません。"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:apply-request-to-labeled-version): If a DAV:label-name element appears in the request body, the content and dead properties of the version-controlled resource must have been updated to be those of the version selected by that label.",
      "ja": "DAV場合：：（DAV：適用-リクエスト・ツー・ラベル・バージョン）ラベル-name要素は、リクエストボディに表示され、バージョン管理されたリソースの内容とデッドプロパティは、選択したバージョンのものとなるように更新されている必要がありますそのラベルによります。"
    },
    {
      "indent": 0,
      "text": "9 Working-Resource Feature",
      "ja": "9ワーキング・リソース特集"
    },
    {
      "indent": 3,
      "text": "The working-resource feature provides an alternative to the workspace feature for supporting parallel development. Unlike the workspace feature, where the desired configuration of versions and checked-out resources is maintained on the server, the working-resource feature maintains the configuration on the client. This simplifies the server implementation, but does not allow a user to access the configuration from clients in different physical locations, such as from another office, from home, or while traveling. Another difference is that the workspace feature isolates clients from a logical change that involves renaming shared resources, until that logical change is complete and tested; with the working resource feature, all clients use a common set of shared version-controlled resources and every client sees the result of a MOVE as soon as it occurs.",
      "ja": "ワーキング・リソース機能が並行開発をサポートするためのワークスペース機能の代替手段を提供します。バージョンとチェックアウトの資源の望ましい構成は、サーバー上に保持されたワークスペースの機能とは異なり、労働者のリソース機能は、クライアントの設定を維持します。これは、サーバーの実装を簡素化しますが、ユーザーは自宅から、そのような別のオフィスからのような物理的に異なる場所にクライアントからの設定にアクセスすることはできません、または旅行中。もう一つの違いは、論理変更が完了し、テストするまで、ワークスペース機能は、共有リソースの名前を変更する必要論理変更からクライアントを隔離することです。作業リソース機能で、すべてのクライアントは、共有バージョン管理されたリソースの共通セットを使用すると、すべてのクライアントは、すぐにそれが起こるようMOVEの結果を見ています。"
    },
    {
      "indent": 3,
      "text": "If a server supports the working-resource feature but not the checkout-in-place feature, a CHECKOUT request can only be used to create a working resource, and cannot be used to check out a version-controlled resource. If a server supports the checkout-in-place feature, but not the working-resource feature, a CHECKOUT can only be used to change the state of a version-controlled resource from checked-in to checked-out.",
      "ja": "サーバーが作業リソースの機能ではなく、チェックアウト、インプレース機能をサポートしている場合は、チェックアウト要求は、作業リソースを作成するために使用することができ、およびバージョン管理されたリソースをチェックアウトするために使用することはできません。サーバは、チェックアウト・イン・プレース機能ではなく、労働者のリソースの機能をサポートしている場合は、チェックアウトのみにチェックイン、チェックアウトまでのバージョン管理されたリソースの状態を変更するために使用することができます。"
    },
    {
      "indent": 0,
      "text": "9.1 Additional Version Properties",
      "section_title": true,
      "ja": "9.1追加バージョンのプロパティ"
    },
    {
      "indent": 3,
      "text": "The working-resource feature introduces the following REQUIRED properties for a version.",
      "ja": "ワーキング・リソース機能がバージョンのため、次の必要なプロパティを紹介します。"
    },
    {
      "indent": 0,
      "text": "9.1.1 DAV:checkout-fork",
      "section_title": true,
      "ja": "9.1.1 DAV：チェックアウトフォーク"
    },
    {
      "indent": 3,
      "text": "This property is defined in Section 4.1.1.",
      "ja": "このプロパティは、セクション4.1.1で定義されています。"
    },
    {
      "indent": 0,
      "text": "9.1.2 DAV:checkin-fork",
      "section_title": true,
      "ja": "9.1.2 DAV：チェックインフォーク"
    },
    {
      "indent": 3,
      "text": "This property is defined in Section 4.1.2.",
      "ja": "このプロパティは、セクション4.1.2で定義されています。"
    },
    {
      "indent": 0,
      "text": "9.2 Working Resource Properties",
      "section_title": true,
      "ja": "9.2ワーキングリソースプロパティ"
    },
    {
      "indent": 3,
      "text": "The working-resource feature introduces the following REQUIRED properties for a working resource. Since a working resource is a checked-out resource, it also has any property defined in this document for a checked-out resource.",
      "ja": "ワーキング・リソース機能は、作業リソースのために、次の必要なプロパティを紹介します。作業リソースがチェックアウトされたリソースであるので、それはまた、チェックアウトのリソースについては、このドキュメントで定義された任意のプロパティを持っています。"
    },
    {
      "indent": 0,
      "text": "9.2.1 DAV:auto-update (protected)",
      "section_title": true,
      "ja": "9.2.1 DAV：自動更新（保護）"
    },
    {
      "indent": 3,
      "text": "This property identifies the version-controlled resource that will be updated when the working resource is checked in.",
      "ja": "このプロパティは、作業リソースがチェックインされたときに更新されるバージョン管理されたリソースを識別します。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT auto-update (href)>",
      "ja": "<！ELEMENTの自動更新（HREF）>"
    },
    {
      "indent": 0,
      "text": "9.2.2 DAV:checkout-fork",
      "section_title": true,
      "ja": "9.2.2 DAV：チェックアウトフォーク"
    },
    {
      "indent": 3,
      "text": "This property is defined in Section 4.2.1.",
      "ja": "このプロパティは、セクション4.2.1で定義されています。"
    },
    {
      "indent": 0,
      "text": "9.2.3 DAV:checkin-fork",
      "section_title": true,
      "ja": "9.2.3 DAV：チェックインフォーク"
    },
    {
      "indent": 3,
      "text": "This property is defined in Section 4.2.2.",
      "ja": "このプロパティは、セクション4.2.2で定義されています。"
    },
    {
      "indent": 0,
      "text": "9.3 CHECKOUT Method (applied to a version)",
      "section_title": true,
      "ja": "9.3 CHECKOUT方法（バージョンに適用されます）"
    },
    {
      "indent": 3,
      "text": "A CHECKOUT request can be applied to a version to create a new working resource. The content and dead properties of the working resource are a copy of the version that was checked out.",
      "ja": "チェックアウト要求は、新しい作業リソースを作成するためのバージョンにも適用することができます。作業リソースの内容とデッドプロパティは、チェックアウトされたバージョンのコピーです。"
    },
    {
      "indent": 3,
      "text": "Marshalling:",
      "ja": "マーシャリング："
    },
    {
      "indent": 6,
      "text": "If a request body is included, it MUST be a DAV:checkout XML element.",
      "ja": "チェックアウトXML要素：リクエストボディが含まれている場合は、DAVでなければなりません。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT checkout ANY>",
      "ja": "<！ELEMENTチェックアウトANY>"
    },
    {
      "indent": 6,
      "text": "ANY value: A sequence of elements with at most one DAV:apply-to-version and at most one DAV:fork-ok element.",
      "ja": "ANY値：最大1つのDAVと要素のシーケンス：適用-バージョンに最も1つのDAVで：フォーク-OK要素。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT apply-to-version EMPTY> <!ELEMENT fork-ok EMPTY>",
      "ja": "<！ELEMENTが適用されます-にバージョンEMPTY> <！ELEMENTフォーク-OK EMPTY>"
    },
    {
      "indent": 6,
      "text": "If a response body for a successful request is included, it MUST be a DAV:checkout-response XML element.",
      "ja": "成功した要求に対するレスポンスボディが含まれている場合は、DAVでなければならない：チェックアウト応答XML要素。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT checkout-response ANY>",
      "ja": "<！ELEMENTチェックアウト応答ANY>"
    },
    {
      "indent": 6,
      "text": "The response MUST include a Location header.",
      "ja": "応答は、ロケーションヘッダを含まなければなりません。"
    },
    {
      "indent": 6,
      "text": "The response MUST include a Cache-Control:no-cache header.",
      "ja": "キャッシュなしヘッダー：レスポンスはのCache-Controlを含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "Preconditions:",
      "ja": "前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:checkout-of-version-with-descendant-is-forbidden): See Section 4.3.",
      "ja": "（DAV：チェックアウト・オブ・バージョンと、子孫-禁止されている）：4.3節を参照してください。"
    },
    {
      "indent": 6,
      "text": "(DAV:checkout-of-version-with-descendant-is-discouraged): See Section 4.3.",
      "ja": "（DAV：チェックアウト・オブ・バージョンと、子孫-落胆です）：4.3節を参照してください。"
    },
    {
      "indent": 6,
      "text": "(DAV:checkout-of-checked-out-version-is-forbidden): See Section 4.3.",
      "ja": "（DAV：チェックアウト・オブ・チェックアウト・バージョン-禁止されている）：4.3節を参照してください。"
    },
    {
      "indent": 6,
      "text": "(DAV:checkout-of-checked-out-version-is-discouraged): See Section 4.3.",
      "ja": "（DAV：チェックアウト・オブ・チェックアウト・バージョン-がっかりさ）：4.3節を参照してください。"
    },
    {
      "indent": 3,
      "text": "Postconditions:",
      "ja": "事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:create-working-resource): If the request-URL identified a version, the Location response header MUST contain the URL of a new working resource. The DAV:checked-out property of the new working resource MUST identify the version that was checked out. The content and dead properties of the working resource MUST be copies of the content and dead properties of the DAV:checked-out version. The DAV:predecessor-set property of the working resource MUST be initialized to be the version identified by the request-URL. The DAV:auto-update property of the working resource MUST NOT exist.",
      "ja": "（DAV：作成ワーキング・リソース）：リクエストURLは、バージョンを識別した場合は、場所のレスポンスヘッダは、新しい作業リソースのURLを含まなければなりません。 DAV：新しい作業リソースのチェックアウトプロパティは、チェックアウトされたバージョンを特定しなければなりません。チェックアウトされたバージョン：作業リソースの内容とデッドプロパティはDAVの内容とデッドプロパティのコピーでなければなりません。 DAV：作業リソースの前身-設定プロパティは、要求URLで識別されるバージョンであることを初期化しなければなりません。 DAV：作業リソースの自動更新プロパティが存在してはいけません。"
    },
    {
      "indent": 6,
      "text": "(DAV:create-working-resource-from-checked-in-version): If the request-URL identified a version-controlled resource, and DAV:apply-to-version is specified in the request body, the CHECKOUT is applied to the DAV:checked-in version of the version-controlled resource, and not the version-controlled resource itself. A new working resource is created and the version-controlled resource remains checked-in. The DAV:auto-update property of the working resource MUST identify the version-controlled resource.",
      "ja": "（DAV：作成ワーキング・リソースから、チェックインしたバージョン）：リクエストURLは、バージョン管理されたリソースを識別し、DAV場合：適用ツーバージョンはリクエストボディに指定され、チェックアウトはに適用されますDAV：バージョン管理されたリソースのチェックインされたバージョンではなく、バージョン管理されたリソースそのもの。新しい作業リソースが作成され、バージョン管理されたリソースは、チェックインされたままです。 DAV：作業リソースの自動更新プロパティはバージョン管理されたリソースを特定しなければなりません。"
    },
    {
      "indent": 0,
      "text": "9.3.1 Example - CHECKOUT of a version",
      "section_title": true,
      "ja": "9.3.1例 - バージョンのチェックアウト"
    },
    {
      "indent": 3,
      "text": ">>REQUEST",
      "ja": ">> REQUEST"
    },
    {
      "indent": 5,
      "text": "CHECKOUT /his/12/ver/V3 HTTP/1.1 Host: repo.webdav.org Content-Length: 0",
      "ja": "CHECKOUT /彼/ 12 /版/ V3 HTTP / 1.1ホスト：repo.webdav.orgのContent-Length：0"
    },
    {
      "indent": 3,
      "text": ">>RESPONSE",
      "ja": ">> RESPONSE"
    },
    {
      "indent": 5,
      "text": "HTTP/1.1 201 Created Location: http://repo.webdav.org/wr/157 Cache-Control: no-cache",
      "ja": "HTTP / 1.1 201作成された場所：http://repo.webdav.org/wr/157のCache-Control：キャッシュなし"
    },
    {
      "indent": 3,
      "text": "In this example, the version identified by http://repo.webdav.org/his/12/ver/V3 is checked out, and the new working resource is located at http://repo.webdav.org/wr/157.",
      "ja": "この例では、http://repo.webdav.org/his/12/ver/V3で識別されるバージョンがチェックアウトされ、そして新しい作業リソースがhttp://repo.webdav.org/wr/157に位置しています。"
    },
    {
      "indent": 0,
      "text": "9.4 CHECKIN Method (applied to a working resource)",
      "section_title": true,
      "ja": "9.4 CHECKIN方法（作業リソースに適用されます）"
    },
    {
      "indent": 3,
      "text": "A CHECKIN request can be applied to a working resource to produce a new version whose content and dead properties are a copy of those of the working resource. If the DAV:auto-update property of the working resource was set because the working resource was created by applying a CHECKOUT with the DAV:apply-to-version flag to a version-controlled resource, the CHECKIN request will also update the content and dead properties of that version-controlled resource to be those of the new version.",
      "ja": "CHECKINリクエストは、その内容とデッドプロパティ作業リソースのそれらのコピーされている新しいバージョンを生成するための作業リソースに適用することができます。作業リソースがDAVでチェックアウトを適用することにより作成されたため、作業リソースの自動更新プロパティを設定した：DAVがいる場合は適用さ-にバージョンフラグバージョン管理されたリソースに、CHECKINリクエストは、コンテンツを更新します新しいバージョンのものとなるように、そのバージョン管理されたリソースの死者性質。"
    },
    {
      "indent": 3,
      "text": "Marshalling:",
      "ja": "マーシャリング："
    },
    {
      "indent": 6,
      "text": "If a request body is included, it MUST be a DAV:checkin XML element.",
      "ja": "チェックインXML要素：リクエストボディが含まれている場合は、DAVでなければなりません。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT checkin ANY> ANY value: A sequence of elements with at most one DAV:fork-ok element.",
      "ja": "<！ELEMENT ANYをチェックイン> ANY値：最大1つのDAVと要素のシーケンス：フォーク-OK要素。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT fork-ok EMPTY>",
      "ja": "<！ELEMENTフォーク-OK EMPTY>"
    },
    {
      "indent": 6,
      "text": "If a response body for a successful request is included, it MUST be a DAV:checkin-response XML element.",
      "ja": "成功した要求に対するレスポンスボディが含まれている場合は、DAVでなければならない：チェックインレスポンスXML要素。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT checkin-response ANY>",
      "ja": "<！ELEMENTのチェックインレスポンスANY>"
    },
    {
      "indent": 6,
      "text": "The response MUST include a Cache-Control:no-cache header.",
      "ja": "キャッシュなしヘッダー：レスポンスはのCache-Controlを含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "Preconditions:",
      "ja": "前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:must-be-checked-out): See Section 4.4.",
      "ja": "（DAV：--チェックする必要がありますアウト）：4.4項を参照してください。"
    },
    {
      "indent": 6,
      "text": "(DAV:version-history-is-tree) See Section 4.4.",
      "ja": "（DAV：バージョン履歴-あるツリー）は4.4節を参照してください。"
    },
    {
      "indent": 6,
      "text": "(DAV:checkin-fork-forbidden): See Section 4.4.",
      "ja": "（DAV：チェックイン・フォーク禁制）：4.4項を参照してください。"
    },
    {
      "indent": 6,
      "text": "(DAV:checkin-fork-discouraged): See Section 4.4.",
      "ja": "（DAV：チェックイン・フォークがっかり）：4.4項を参照してください。"
    },
    {
      "indent": 6,
      "text": "(DAV:no-overwrite-by-auto-update): If the DAV:auto-update property for the checked-out resource identifies a version-controlled resource, at least one of the versions identified by the DAV:predecessor-set property of the checked-out resource MUST identify a version that is either the same as or a descendant of the version identified by the DAV:checked-in property of that version-controlled resource.",
      "ja": "（DAV：無上書きすることによって、自動更新）：先行セットプロパティ：チェックアウトされたリソースの自動更新プロパティバージョン管理されたリソース、DAVにより同定バージョンの少なくとも一つを識別する：DAVの場合チェックインされたそのバージョン管理されたリソースのプロパティ：チェックアウトされたリソースのいずれかと同じ又はDAVにより同定バージョンの子孫であるバージョンを識別しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Postconditions:",
      "ja": "事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:create-version): See Section 4.4.",
      "ja": "（DAV：作成-バージョン）：4.4項を参照してください。"
    },
    {
      "indent": 6,
      "text": "(DAV:initialize-version-content-and-properties): See Section 4.4.",
      "ja": "（DAV：初期化バージョンコンテンツ・アンド・プロパティ）：4.4項を参照してください。"
    },
    {
      "indent": 6,
      "text": "(DAV:auto-update): If the DAV:auto-update property of the checked-out resource identified a version-controlled resource, an UPDATE request with the new version MUST have been applied to that version-controlled resource.",
      "ja": "DAV場合：：（DAV：自動更新）チェックアウトリソースの自動更新プロパティはバージョン管理されたリソースを識別し、新しいバージョンでUPDATE要求は、そのバージョン管理されたリソースに適用されている必要があります。"
    },
    {
      "indent": 6,
      "text": "(DAV:delete-working-resource): If the request-URL identifies a working resource and if DAV:keep-checked-out is not specified in the request body, the working resource is deleted.",
      "ja": "（DAV：ワーキング・リソースを削除）：リクエストURLが作業リソースを識別し、場合場合DAV：キープチェックアウトがリクエストボディで指定されていない、作業リソースが削除されます。"
    },
    {
      "indent": 0,
      "text": "9.4.1 Example - CHECKIN of a working resource",
      "section_title": true,
      "ja": "9.4.1例 - 作業リソースのCHECKIN"
    },
    {
      "indent": 3,
      "text": ">>REQUEST",
      "ja": ">> REQUEST"
    },
    {
      "indent": 5,
      "text": "CHECKIN /wr/157 HTTP/1.1 Host: repo.webdav.org Content-Length: 0",
      "ja": "CHECKIN / WR / 157 HTTP / 1.1ホスト：repo.webdav.orgのContent-Length：0"
    },
    {
      "indent": 3,
      "text": ">>RESPONSE",
      "ja": ">> RESPONSE"
    },
    {
      "indent": 5,
      "text": "HTTP/1.1 201 Created Location: http://repo.webdav.org/his/23/ver/15 Cache-Control: no-cache",
      "ja": "HTTP / 1.1 201作成された場所：http://repo.webdav.org/his/23/ver/15のCache-Control：キャッシュなし"
    },
    {
      "indent": 3,
      "text": "In this example, the working resource /wr/157 checked in, and a new version is created at http://repo.webdav.org/his/23/ver/15.",
      "ja": "この例では、作業リソース/ WR / 157は、チェックイン、および新しいバージョンがhttp://repo.webdav.org/his/23/ver/15で作成されます。"
    },
    {
      "indent": 0,
      "text": "9.5 Additional OPTIONS Semantics",
      "section_title": true,
      "ja": "9.5追加オプションのセマンティクス"
    },
    {
      "indent": 3,
      "text": "If the server supports the working-resource feature, it MUST include \"working-resource\" as a field in the DAV response header from an OPTIONS request on any resource that supports any versioning properties, reports, or methods.",
      "ja": "サーバーが作業リソースの機能をサポートしている場合、それはどのバージョン管理のプロパティ、レポート、またはメソッドをサポートしているすべてのリソース上のOPTIONS要求からのDAV応答ヘッダ内のフィールドとして「ワーキング・リソース」を含まなければなりません。"
    },
    {
      "indent": 0,
      "text": "9.6 Additional COPY Semantics",
      "section_title": true,
      "ja": "9.6追加のコピー・セマンティクス"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:copy-creates-new-resource): The result of copying a working resource is a new non-version-controlled resource at the destination of the COPY. The new resource MAY automatically be put under version control, but the resulting version-controlled resource MUST be associated with a new version history created for that new version-controlled resource.",
      "ja": "（DAV：コピーは、作成新しいリソース）：作業リソースをコピーした結果は、コピー先の新しい非バージョン管理されたリソースです。新しいリソースは自動的にバージョン管理下に置かれるかもしれませんが、結果として、バージョン管理されたリソースは、その新しいバージョン管理されたリソースのために作成された新しいバージョン履歴に関連付ける必要があります。"
    },
    {
      "indent": 0,
      "text": "9.7 Additional MOVE Semantics",
      "section_title": true,
      "ja": "9.7追加のMOVEセマンティクス"
    },
    {
      "indent": 3,
      "text": "Additional Preconditions:",
      "ja": "追加の前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:cannot-rename-working-resource): If the request-URL identifies a working resource, the request MUST fail.",
      "ja": "（DAVは：-名前は変更しないワーキング・リソースすることができます）：リクエストURLが作業リソースを識別した場合、要求は失敗しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:update-auto-update): If the request-URL identified a version-controlled resource, any DAV:auto-update properties that identified that version-controlled resource MUST have been updated to contain the new location of that version-controlled resource.",
      "ja": "（DAV：更新自動更新）：リクエストURLがバージョン管理されたリソースを識別した場合、任意のDAV：そのバージョン管理されたリソースを識別し、自動更新プロパティは、バージョン管理の新しい場所を含むように更新されていなければなりません。資源。"
    },
    {
      "indent": 0,
      "text": "10 Advanced Versioning Features",
      "ja": "10の高度なバージョン管理機能"
    },
    {
      "indent": 3,
      "text": "Advanced versioning addresses the problems of parallel development and configuration management of multiple sets of interrelated resources. Traditionally, artifacts of software development, including requirements, design documents, code, and test cases, have been a focus of configuration management. Web sites, comprising multiple inter-linked resources (HTML, graphics, sound, CGI, and others), are another class of complex information artifacts that benefit from the application of configuration management. The advanced versioning capabilities for coordinating concurrent change provide the infrastructure for efficient and controlled management of large evolving web sites.",
      "ja": "高度なバージョン管理は、相互にリソースの複数セットの並行開発と構成管理の問題に対処します。伝統的に、要件、設計ドキュメント、コード、およびテストケースを含むソフトウェア開発の成果物は、構成管理の焦点となっています。複数のインターリンクされたリソース（HTML、グラフィックス、サウンド、CGIなど）を含むWebサイトは、構成管理のアプリケーションから恩恵を受ける複雑な情報成果物の別のクラスです。同時変更を調整するための高度なバージョン管理機能は、大きな進化するWebサイトの効率的かつ制御管理のためのインフラストラクチャを提供します。"
    },
    {
      "indent": 0,
      "text": "10.1 Advanced Versioning Packages",
      "section_title": true,
      "ja": "10.1高度なバージョン管理パッケージ"
    },
    {
      "indent": 3,
      "text": "Although a server MAY support any combination of advanced versioning features, in order to minimize the complexity of a WebDAV advanced versioning client, a WebDAV advanced versioning server SHOULD support one of the following packages:",
      "ja": "サーバーがクライアントをバージョン管理先進のWebDAVの複雑さを最小限に抑えるためには、高度なバージョン管理機能の任意の組み合わせをサポートするかもしれないが、WebDAVは、以下のパッケージのいずれかをサポートするサーバーをバージョン管理高度："
    },
    {
      "indent": 3,
      "text": "Advanced-Server-Workspace Package: basic-server-workspace package plus all advanced features",
      "ja": "アドバンスト・サーバー・ワークスペースパッケージ：基本的なサーバー・ワークスペースのパッケージに加えて、すべての高度な機能"
    },
    {
      "indent": 3,
      "text": "Advanced-Client-Workspace Package: basic-client-workspace package plus all advanced features",
      "ja": "アドバンストクライアント・ワークスペースパッケージ：基本的なクライアント・ワークスペースのパッケージに加えて、すべての高度な機能"
    },
    {
      "indent": 3,
      "text": "The advanced-server-workspace package supports advanced versioning capabilities for a client with no persistent state. The advanced-client-workspace package supports advanced versioning capabilities for a client that maintains configuration state on the client. A server that supports both advanced workspace packages will interoperate with all versioning clients.",
      "ja": "高度なサーバ・ワークスペースパッケージはありません永続的な状態でのクライアントのための高度なバージョン管理機能をサポートしています。高度なクライアント・ワークスペースのパッケージには、クライアント上の構成状態を維持し、クライアントのための高度なバージョン管理機能をサポートしています。高度なワークスペースパッケージの両方をサポートするサーバーは、すべてのバージョン管理のクライアントと相互運用します。"
    },
    {
      "indent": 0,
      "text": "10.2 Advanced Versioning Terms",
      "section_title": true,
      "ja": "10.2高度なバージョン管理規約"
    },
    {
      "indent": 3,
      "text": "The following additional terms are used by the advanced versioning features.",
      "ja": "以下の追加条件は、高度なバージョン管理機能で使用されています。"
    },
    {
      "indent": 3,
      "text": "Collection",
      "ja": "コレクション"
    },
    {
      "indent": 6,
      "text": "A \"collection\" is a resource whose state consists of not only content and properties, but also a set of named \"bindings\", where a binding identifies what RFC 2518 calls an \"internal member\" of the collection. Note that a binding is not a resource, but rather is a part of the state of a collection that defines a mapping from a binding name (a URL segment) to a resource (an internal member of the collection).",
      "ja": "「コレクション」とは、その状態内容とプロパティのみで構成されていないリソースだけでなく、コレクションの「内部部材」コールする結合識別するものRFC 2518という名前の「バインディング」のセットです。結合がリソースではなく、リソース（コレクションの内部部材）に結合名（URLセグメント）からのマッピングを定義コレクションの状態の一部であることに留意されたいです。"
    },
    {
      "indent": 3,
      "text": "Collection Version Resource",
      "ja": "コレクションバージョンリソース"
    },
    {
      "indent": 6,
      "text": "A \"collection version resource\", or simply \"collection version\", captures the dead properties of a version-controlled collection, as well as the names of its version-controlled bindings (see Section 14). A version-controlled binding is a binding to a version-controlled resource. If the checkout-in-place feature is supported, a collection version can be created by checking out and then checking in a version-controlled collection. If the working-resource feature is supported, a collection version can be created by checking out a collection version (to create a \"working collection\") and then checking in the working collection.",
      "ja": "「コレクションバージョンリソース」、または単に「コレクション・バージョン」には、（セクション14を参照）バージョン管理されたコレクションの死者の特性だけでなく、そのバージョン管理されたバインディングの名前をキャプチャします。バージョン管理された結合は、バージョン管理されたリソースへの結合です。チェックアウト・インプレース機能がサポートされている場合は、コレクションのバージョンがチェックアウトした後、バージョン管理されたコレクションにチェックすることで作成することができます。ワーキング・リソース機能がサポートされている場合は、コレクションのバージョンは、コレクションのバージョンをチェックアウトすることで作成された（「作業コレクション」を作成するため）、その後、作業コレクションにチェックすることができます。"
    },
    {
      "indent": 3,
      "text": "Configuration",
      "ja": "設定"
    },
    {
      "indent": 6,
      "text": "A \"configuration\" is a set of resources that consists of a root collection and all members (not just internal members) of that root collection that are not members of another configuration. The root collection is called the \"configuration root\", and the members of this set are called the \"members of the configuration\". Note that a collection (which is a single resource) is very different from a configuration (which is a set of resources).",
      "ja": "「コンフィギュレーションは、」ルートコレクションと他の構成メンバーではないというルートコレクションのすべてのメンバー（だけでなく、内部のメンバー）で構成されたリソースのセットです。ルートコレクションは、「コンフィギュレーション・ルート」と呼ばれ、このセットのメンバーは、「コンフィギュレーションのメンバー」と呼ばれています。 （単一のリソースである）コレクションは、（リソースのセットである）の構成とは非常に異なっていることに注意してください。"
    },
    {
      "indent": 3,
      "text": "Baseline Resource",
      "ja": "ベースラインのリソース"
    },
    {
      "indent": 6,
      "text": "A \"baseline resource\", or simply \"baseline\", of a collection is a version of the configuration that is rooted at that collection (see Section 12). In particular, a baseline captures the DAV:checked-in version of every version-controlled member of that configuration. Note that a collection version (which captures the state of a single resource) is very different from a collection baseline (which captures the state of a set of resources).",
      "ja": "コレクションの「ベースラインリソース」、または単に「ベースライン」は、そのコレクションをルートとした構成のバージョンである（セクション12を参照）。具体的には、ベースラインはDAVをキャプチャ：チェックインされたその構成のすべてのバージョン制御部材のバージョン。 （単一のリソースの状態を捕捉する）コレクションのバージョンが（リソースのセットの状態をキャプチャ）コレクションベースラインから非常に異なっていることに留意されたいです。"
    },
    {
      "indent": 3,
      "text": "Baseline-Controlled Collection",
      "ja": "ベースラインの制御されたコレクション"
    },
    {
      "indent": 6,
      "text": "A \"baseline-controlled collection\" is a collection from which baselines can be created (see Section 12).",
      "ja": "「ベースライン制御のコレクションは、」（第12章を参照）ベースラインが作成可能なコレクションです。"
    },
    {
      "indent": 3,
      "text": "Version-Controlled Configuration Resource",
      "ja": "バージョン管理された構成リソース"
    },
    {
      "indent": 6,
      "text": "A \"version-controlled configuration resource\", or simply \"version-controlled configuration\", is a special kind of version-controlled resource that is associated with a baseline-controlled collection, and is used to create and access baselines of that collection (see Section 12). When a collection is both version-controlled and baseline-controlled, a client can create a new version of the collection by checking out and checking in that collection, and it can create a new baseline of that collection by checking out and checking in the version-controlled configuration of that collection.",
      "ja": "「バージョン管理構成リソース」、または単に「バージョン管理の構成」、（参照ベースライン制御コレクションに関連付けられており、そのコレクションのベースラインを作成してアクセスするために使用され、バージョン管理されたリソースの特別な種類であります第12節）。コレクションは、両方のバージョン管理とベースライン制御されている場合は、クライアントがチェックアウトして、そのコレクションにチェックすることで、コレクションの新しいバージョンを作成することができ、そしてそれは、チェックアウトして、バージョンをチェックインすることで、そのコレクションの新しいベースラインを作成することができますそのコレクションの-controlled設定。"
    },
    {
      "indent": 3,
      "text": "Activity Resource",
      "ja": "アクティビティリソース"
    },
    {
      "indent": 6,
      "text": "An \"activity resource\", or simply \"activity\", is a resource that selects a set of versions that correspond to a single logical change, where the versions selected from a given version history form a single line of descent through that version history (see Section 13).",
      "ja": "「アクティビティリソース」、または単に「活性」は、そのバージョン履歴を介して降下の単一の行を形成する（参照バージョンは、所与のバージョン履歴から選択される単一の論理変化に対応するバージョンのセットを選択するリソースであります第13）。"
    },
    {
      "indent": 0,
      "text": "11 Merge Feature",
      "ja": "11マージ機能"
    },
    {
      "indent": 3,
      "text": "When a user wants to accept the changes (new versions) created by someone else, it is important not just to update the version-controlled resources in the user's workspace with those new versions, since this could result in \"backing out\" changes the user has made to those version-controlled resources. Instead, the versions created in another workspace should be \"merged\" into the user's version-controlled resources.",
      "ja": "ユーザーが他の誰かによって作成された変更（新バージョン）を受け入れたい場合、「バックアウト」が生じる可能性があるため、だけでなく、それらの新しいバージョンとのユーザーのワークスペースでバージョン管理リソースを更新することが重要であることをユーザーに変更しますこれらのバージョン管理されたリソースになりました。代わりに、別のワークスペースに作成されたバージョンでは、ユーザーのバージョン管理リソースに「マージ」されなければなりません。"
    },
    {
      "indent": 3,
      "text": "The version history of a version-controlled resource provides the information needed to determine the result of the merge. In particular, the merge should select whichever version is later in the line of descent from the root version. In case the versions to be merged are on different lines of descent (neither version is a descendant of the other), neither version should be selected, but instead, a new version should be created that contains the logical merge of the content and dead properties of those versions. The MERGE request can be used to check out each version-controlled resource that requires such a merge, and set the DAV:merge-set property of each checked-out resource to identify the version to be merged. The user is responsible for modifying the content and dead properties of the checked-out resource so that it represents the logical merge of that version, and then adding that version to the DAV:predecessor-set of the checked-out resource.",
      "ja": "バージョン管理されたリソースのバージョン履歴は、マージの結果を決定するのに必要な情報を提供します。具体的には、マージは、ルートバージョンから降下のラインの後半方のバージョンを選択すべきです。場合にはマージされるバージョンが降下の異なるライン上にある（どちらのバージョンが他の子孫である）コンテンツの論理的併合とデッドプロパティが含まれている、どちらのバージョンを選択しなければならないが、その代わりに、新しいバージョンが作成されなければなりませんこれらのバージョンの。マージされるバージョンを識別するために、各チェックアウトリソースのマージ・プロパティセットを：MERGE要求は、このようなマージを必要とする各バージョン管理されたリソースをチェックアウトし、DAVを設定するために使用することができます。チェックアウトリソースの前身セット：ユーザーは、それがそのバージョンの論理的併合を表すようにチェックアウトされたリソースの内容とデッドプロパティを変更して、DAVにそのバージョンを追加するための責任があります。"
    },
    {
      "indent": 3,
      "text": "If the server is capable of automatically performing the merge, it MAY update the content, dead properties, and DAV:predecessor-set of the checked-out resource itself. Before checking in the automatically merged resource, the user is responsible for verifying that the automatic merge is correct.",
      "ja": "チェックアウトリソース自体の前身セット：サーバが自動的にマージを行うことが可能であるならば、それはコンテンツ、死者の特性、およびDAVを更新することができます。自動的にマージされたリソースをチェックインする前に、ユーザーは、自動マージが正しいことを検証する責任があります。"
    },
    {
      "indent": 0,
      "text": "11.1 Additional Checked-Out Resource Properties",
      "section_title": true,
      "ja": "11.1追加のチェックアウトリソースプロパティ"
    },
    {
      "indent": 3,
      "text": "The merge feature introduces the following REQUIRED properties for a checked-out resource.",
      "ja": "マージ機能がチェックアウトされたリソースのために、次の必要なプロパティを紹介します。"
    },
    {
      "indent": 0,
      "text": "11.1.1 DAV:merge-set",
      "section_title": true,
      "ja": "11.1.1 DAV：マージセット"
    },
    {
      "indent": 3,
      "text": "This property identifies each version that is to be merged into this checked-out resource.",
      "ja": "このプロパティは、このチェックアウトしたリソースにマージされる各バージョンを識別します。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT merge-set (href*)>",
      "ja": "<！ELEMENTマージセット（HREF *）>"
    },
    {
      "indent": 0,
      "text": "11.1.2 DAV:auto-merge-set",
      "section_title": true,
      "ja": "11.1.2 DAV：自動マージセット"
    },
    {
      "indent": 3,
      "text": "This property identifies each version that the server has merged into this checked-out resource. The client should confirm that the merge has been performed correctly before moving a URL from the DAV:auto-merge-set to the DAV:predecessor-set of a checked-out resource.",
      "ja": "このプロパティは、サーバーは、このチェックアウトしたリソースにマージされた各バージョンを識別します。チェックアウトリソースの前身セット：DAVへの自動マージ設定：クライアントは、マージがDAVからURLを移動する前に正しく行われたことを確認する必要があります。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT auto-merge-set (href*)>",
      "ja": "<！ELEMENTの自動マージセット（HREFの*）>"
    },
    {
      "indent": 0,
      "text": "11.2 MERGE Method",
      "section_title": true,
      "ja": "11.2 MERGEメソッド"
    },
    {
      "indent": 3,
      "text": "The MERGE method performs the logical merge of a specified version (the \"merge source\") into a specified version-controlled resource (the \"merge target\"). If the merge source is neither an ancestor nor a descendant of the DAV:checked-in or DAV:checked-out version of the merge target, the MERGE checks out the merge target (if it is not already checked out) and adds the URL of the merge source to the DAV:merge-set of the merge target. It is then the client's responsibility to update the content and dead properties of the checked-out merge target so that it reflects the logical merge of the merge source into the current state of the merge target. The client indicates that it has completed the update of the merge target, by deleting the merge source URL from the DAV:merge-set of the checked-out merge target, and adding it to the DAV:predecessor-set. As an error check for a client forgetting to complete a merge, the server MUST fail an attempt to CHECKIN a version-controlled resource with a non-empty DAV:merge-set.",
      "ja": "MERGEメソッドは、指定されたバージョン管理されたリソース（「マージ標的」）に指定されたバージョン（「マージ元」）の論理的なマージを行います。チェックインされたか、DAV：マージソースが祖先でもDAVの子孫でもない場合は、マージ対象のチェックアウトバージョンは、MERGEマージ対象外チェック（それが既にチェックアウトされていない場合）とは、URLを追加しますDAVへのマージソースの：マージ対象のマージセット。マージ対象の現在の状態にマージソースの論理的併合を反映するように、チェックアウトマージ対象の内容とデッドプロパティを更新するために、クライアントの責任です。チェックアウトマージ対象のマージ・セット、およびDAVに追加：前身セットクライアントがDAVからマージソースのURLを削除することによって、マージ対象の更新を完了したことを示しています。マージセット：マージを完了するために、忘れクライアントのエラーチェックとして、サーバーは空でないDAVでバージョン管理されたリソースをCHECKINしようとする試みが失敗しなければなりません。"
    },
    {
      "indent": 3,
      "text": "When a server has the ability to automatically update the content and dead properties of the merge target to reflect the logical merge of the merge source, it may do so unless DAV:no-auto-merge is specified in the MERGE request body. In order to notify the client that a merge source has been automatically merged, the MERGE request MUST add the URL of the auto-merged source to the DAV:auto-merge-set property of the merge target, and not to the DAV:merge-set property. The client indicates that it has verified that the auto-merge is valid, by deleting the merge source URL from the DAV:auto-merge-set, and adding it to the DAV:predecessor-set.",
      "ja": "サーバが自動的にマージソースの論理的併合を反映するために、マージ対象の内容とデッドプロパティを更新する機能を持っている場合は、DAVない限り、そうすることがあります。無自動マージは、MERGE要求本体に指定されていません。マージ対象の自動マージ・プロパティセット、およびないDAVへ：マージソースが自動的にマージされたことをクライアントに通知するためには、MERGE要求は、DAVへの自動マージされた元のURLを追加しなければならないマージ-setプロパティ。自動マージ・セット、およびDAVに追加：前身セットクライアントは、自動マージは、DAVからマージソースのURLを削除することにより、有効であることを確認したことを示します。"
    },
    {
      "indent": 3,
      "text": "Multiple merge sources can be specified in a single MERGE request. The set of merge sources for a MERGE request is determined from the DAV:source element of the MERGE request body as follows:",
      "ja": "複数のマージソースは、単一のMERGE要求で指定することができます。次のようにMERGE要求本体のソースエレメント：MERGE要求のマージ元のセットは、DAVから決定されます。"
    },
    {
      "indent": 3,
      "text": "- If DAV:source identifies a version, that version is a merge source. - If DAV:source identifies a version-controlled resource, the DAV:checked-in version of that version-controlled resource is a merge source.",
      "ja": " -  DAV場合：ソースはバージョンを識別する、そのバージョンは、マージソースです。 -  DAV場合：ソースは、バージョン管理されたリソースを識別し、DAV：チェックインされたそのバージョン管理されたリソースのバージョンは、マージソースです。"
    },
    {
      "indent": 3,
      "text": "- If DAV:source identifies a collection, the DAV:checked-in version of each version-controlled resource that is a member of that collection is a merge source.",
      "ja": " -  DAV場合：ソースコレクションを識別し、DAV：チェックインされたそのコレクションのメンバーである各バージョン管理されたリソースのバージョンは、マージ源です。"
    },
    {
      "indent": 3,
      "text": "The request-URL identifies the set of possible merge targets. If the request-URL identifies a collection, any member of the configuration rooted at the request-URL is a possible merge target. The merge target of a particular merge source is the version-controlled or checked-out resource whose DAV:checked-in or DAV:checked-out version is from the same version history as the merge source. If a merge source has no merge target, that merge source is ignored.",
      "ja": "リクエストURLは、可能なマージ対象のセットを識別する。リクエストURLがコレクションを識別する場合、リクエストURLをルート設定の任意のメンバーは、可能なマージ対象です。チェックインまたはDAV：チェックアウトバージョンは、マージ元と同じバージョン履歴からある特定のマージ元のマージの対象は、そのDAVバージョン制御またはチェックアウトリソースです。マージソースが何のマージターゲットを持っていない場合は、そのマージソースは無視されます。"
    },
    {
      "indent": 3,
      "text": "The MERGE response identifies the resources that a client must modify to complete the merge. It also identifies the resources modified by the request, so that a client can efficiently update any cached state it is maintaining.",
      "ja": "MERGEレスポンスは、クライアントがマージを完了するために変更しなければならないリソースを識別します。クライアントが効率的にそれが維持されている任意のキャッシュされた状態を更新できるようにそれはまた、リクエストによって変更されたリソースを識別します。"
    },
    {
      "indent": 3,
      "text": "Marshalling:",
      "ja": "マーシャリング："
    },
    {
      "indent": 6,
      "text": "The request body MUST be a DAV:merge element.",
      "ja": "リクエストボディは、DAVでなければならない（MUST）：要素をマージします。"
    },
    {
      "indent": 6,
      "text": "The set of merge sources is determined by the DAV:source element in the request body.",
      "ja": "リクエストボディ内のソース・エレメント：マージソースのセットは、DAVにより決定されます。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT merge ANY> ANY value: A sequence of elements with one DAV:source element, at most one DAV:no-auto-merge element, at most one DAV:no-checkout element, at most one DAV:prop element, and any legal set of elements that can occur in a DAV:checkout element. <!ELEMENT source (href+)> <!ELEMENT no-auto-merge EMPTY> <!ELEMENT no-checkout EMPTY> prop: see RFC 2518, Section 12.11",
      "ja": "<！ELEMENTがANYをマージ>任意の値：1 DAVを持つ要素のシーケンス：ソース要素、最大1つのDAVで：無自動マージ要素、最大で1つのDAV：ノー・チェックアウト要素、最大1つのDAVで：要素小道具、そして、DAVに発生する可能性の要素のいずれかの法的なセット：チェックアウト要素。 <！ELEMENT無自動マージしないEMPTY> <！ELEMENTノーチェックアウトEMPTY> <！ELEMENTソース（HREF +）>小道具：RFC 2518を参照してください、セクション12.11"
    },
    {
      "indent": 6,
      "text": "The response for a successful request MUST be a 207 Multi-Status, where the DAV:multistatus XML element in the response body identifies all resources that have been modified by the request.",
      "ja": "レスポンスボディにmultistatus XML要素の要求によって変更されているすべてのリソースを識別します。成功した要求に対する応答は、DAVが207マルチ状態でなければなりません。"
    },
    {
      "indent": 6,
      "text": "multistatus: see RFC 2518, Section 12.9",
      "ja": "multistatus：RFC 2518を参照してください、セクション12.9"
    },
    {
      "indent": 6,
      "text": "The response to a successful request MUST include a Location header containing the URL for the new version created by the checkin.",
      "ja": "成功した要求に対する応答は、チェックインによって作成された新しいバージョンのためのURLを含むLocationヘッダーを含まなければなりません。"
    },
    {
      "indent": 6,
      "text": "The response MUST include a Cache-Control:no-cache header.",
      "ja": "キャッシュなしヘッダー：レスポンスはのCache-Controlを含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "Preconditions:",
      "ja": "前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:cannot-merge-checked-out-resource): The DAV:source element MUST NOT identify a checked-out resource. If the DAV:source element identifies a collection, the collection MUST NOT have a member that is a checked-out resource.",
      "ja": "（DAV：CAN-マージされませ-チェックアウト-リソース）：DAV：source要素は、チェックアウトのリソースを識別することはできません。 DAV場合：ソース要素がコレクションを識別し、コレクションがチェックアウトされたリソースであるメンバーを持つことはできません。"
    },
    {
      "indent": 6,
      "text": "(DAV:checkout-not-allowed): If DAV:no-checkout is specified in the request body, it MUST be possible to perform the merge without checking out any of the merge targets.",
      "ja": "DAV場合：：（DAV：チェックアウト--許可されていない）はチェックアウトがリクエストボディに指定されていない、マージ対象のいずれかをチェックアウトせずにマージを行うことが可能でなければなりません。"
    },
    {
      "indent": 6,
      "text": "All preconditions of the CHECKOUT operation apply to the checkouts performed by the request.",
      "ja": "チェックアウト操作のすべての前提条件は、要求によって行われるチェックアウトに適用されます。"
    },
    {
      "indent": 3,
      "text": "Postconditions:",
      "ja": "事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:ancestor-version): If a merge target is a version-controlled or checked-out resource whose DAV:checked-in version or DAV:checked-out version is the merge source or is a descendant of the merge source, the merge target MUST NOT have been modified by the MERGE.",
      "ja": "（DAV：先祖バージョン）：チェックインバージョンまたはDAV：マージの対象は、バージョン管理、またはそのDAVチェックアウトリソースである場合、チェックアウトバージョンのマージ元であるか、またはマージ元の子孫であり、マージ対象は、MERGEによって変更されていてはなりません。"
    },
    {
      "indent": 6,
      "text": "(DAV:descendant-version): If the merge target was a checked-in version-controlled resource whose DAV:checked-in version was an ancestor of the merge source, an UPDATE operation MUST have been applied to the merge target to set its content and dead properties to be those of the merge source. If the UPDATE method is not supported, the merge target MUST have been checked out, the content and dead properties of the merge target MUST have been set to those of the merge source, and the merge source MUST have been added to the DAV:auto-merge-set of the merge target. The merge target MUST appear in a DAV:response XML element in the response body.",
      "ja": "（DAV：子孫バージョン）：マージの対象は、そのDAVチェックインバージョン管理されたリソースであった場合は、次のチェックインされたバージョンであったマージ元の祖先を、UPDATE操作を設定するために、マージ対象に適用されている必要があり、その内容とデッドプロパティマージソースのものとなるように。 UPDATEメソッドがサポートされていない場合、マージ対象がチェックアウトされている必要があり、マージ対象の内容とデッドプロパティは、マージ元のものに設定されている必要があり、およびマージソースは、DAVに追加されている必要があります：自動マージ対象の-mergeセット。レスポンスボディに応答XML要素：マージ対象は、DAVに現れなければなりません。"
    },
    {
      "indent": 6,
      "text": "(DAV:checked-out-for-merge): If the merge target was a checked-in version-controlled resource whose DAV:checked-in version was neither a descendant nor an ancestor of the merge source, a CHECKOUT MUST have been applied to the merge target. All XML elements in the DAV:merge XML element that could appear in a DAV:checkout XML element MUST have been used as arguments to the CHECKOUT request. The merge target MUST appear in a DAV:response XML element in the response body.",
      "ja": "（DAV：チェックアウト-用マージ）：マージ対象がそのDAVチェックインされたバージョン管理されたリソースだった場合：チェックインされたバージョンを子孫やマージソースの祖先でもないが、チェックアウトが適用されている必要がありましたマージ対象に。 DAVのすべてのXML要素：DAVに表示される可能性がXML要素をマージ：チェックアウトXML要素は、チェックアウト要求への引数として使用されている必要があります。レスポンスボディに応答XML要素：マージ対象は、DAVに現れなければなりません。"
    },
    {
      "indent": 6,
      "text": "(DAV:update-merge-set): If the DAV:checked-out version of the merge target is neither equal to nor a descendant of the merge source, the merge source MUST be added to either the DAV:merge-set or the DAV:auto-merge-set of the merge target. The merge target MUST appear in a DAV:response XML element in the response body.",
      "ja": "DAV場合：（DAV：更新マージセット）マージセットまたは：マージ対象のチェックアウトバージョンに等しいもマージ元の子孫でもない、マージソースがDAVのいずれかに追加する必要がありますDAV：マージ対象の自動マージセット。レスポンスボディに応答XML要素：マージ対象は、DAVに現れなければなりません。"
    },
    {
      "indent": 6,
      "text": "If a merge source has been added to the DAV:auto-merge-set, the content and dead properties of the merge target MUST have been modified by the server to reflect the result of a logical merge of the merge source and the merge target. If a merge source has been added to the DAV:merge-set, the content and dead properties of the merge target MUST NOT have been modified by the server. If DAV:no-auto-merge is specified in the request body, the merge source MUST NOT have been added to the DAV:auto-merge-set.",
      "ja": "マージソースがDAVに追加されている場合：自動マージセット、マージ対象の内容とデッドプロパティは、マージ元とマージ対象の論理マージの結果を反映するために、サーバーによって変更されている必要があります。マージソースがDAVに追加されている場合：マージ・セットを、マージ対象の内容とデッドプロパティは、サーバーによって変更されていてはなりません。 DAV場合：自動マージセット：なし自動マージがリクエストボディに指定され、マージソースは、DAVに追加されていてはなりません。"
    },
    {
      "indent": 6,
      "text": "(DAV:report-properties): If DAV:prop is specified in the request body, the properties specified in the DAV:prop element MUST be reported in the DAV:response elements in the response body.",
      "ja": "DAV場合：支柱がリクエストボディに指定され、DAVで指定されたプロパティ：（DAV：レポートプロパティ）要素プロップは、DAVに報告しなければならない：応答体における応答エレメント。"
    },
    {
      "indent": 0,
      "text": "11.2.1 Example - MERGE",
      "section_title": true,
      "ja": "例11.2.1  -  GO"
    },
    {
      "indent": 3,
      "text": ">>REQUEST",
      "ja": ">> REQUEST"
    },
    {
      "indent": 5,
      "text": "MERGE /ws/public HTTP/1.1 Host: www.webdav.org Content-type: text/xml; charset=\"utf-8\" Content-Length: xxxx",
      "ja": "/ WS /公共HTTP / 1.1ホストをMERGE：www.webdav.orgコンテンツタイプ：text / xmlで、 charset = \"UTF-8\" をコンテンツの長さ：XXXX"
    },
    {
      "indent": 5,
      "text": "<?xml version=\"1.0\" encoding=\"utf-8\" ?> <D:merge xmlns:D=\"DAV:\"> <D:source> <D:href>http://www.webdav.org/ws/dev/sally</D:href> </D:source> </D:merge>",
      "ja": "<？xml version = \"1.0\" エンコード= \"UTF-8\"？> <D：のxmlnsをマージする：D = \"DAV：\"> <D：ソース> <D：HREF> http://www.webdav.org/ WSの/ dev /サリー</ D：HREF> </ D：ソース> </ D：マージ>"
    },
    {
      "indent": 3,
      "text": ">>RESPONSE",
      "ja": ">> RESPONSE"
    },
    {
      "indent": 5,
      "text": "HTTP/1.1 207 Multi-Status Content-Type: text/xml; charset=\"utf-8\" Content-Length: xxxx Cache-Control: no-cache",
      "ja": "HTTP / 1.1 207マルチステータスのContent-Type：text / xmlで、 charset = \"UTF-8\" をコンテンツの長さ：XXXXのCache-Control：キャッシュなし"
    },
    {
      "indent": 3,
      "text": " <?xml version=\"1.0\" encoding=\"utf-8\" ?> <D:multistatus xmlns:D=\"DAV:\"> <D:response> <D:href>http://www.webdav.org/ws/public/src/parse.c</D:href> <D:status>HTTP/1.1 200 OK</D:status> </D:response> <D:response> <D:href>http://www.webdav.org/ws/public/doc/parse.html</D:href> <D:status>HTTP/1.1 200 OK</D:status> </D:response> </D:multistatus>",
      "ja": "<？xml version = \"1.0\" エンコード= \"UTF-8\"？> <D：multistatusのxmlns：D = \"DAV：\"> <D：レスポンス> <D：HREF> http://www.webdav.org/ WS /公共/ SRC / parse.c </ D：のhref> <D：状態> HTTP / 1.1 200 OK </ D：状態> </ D：レスポンス> <D：応答> <D：のhref>のhttp：/ /www.webdav.org/ws/public/doc/parse.html </ D：HREF> <D：ステータス> HTTP / 1.1 200 OK </ D：状態> </ D：レスポンス> </ D：multistatus>"
    },
    {
      "indent": 3,
      "text": "In this example, the DAV:checked-in versions from the workspace http://www.webdav.org/ws/dev/sally are merged into the version-controlled resources in the workspace http://www.webdav.org/ws/public. The resources /ws/public/src/parse.c and /ws/public/doc/parse.html were modified by the request.",
      "ja": "この例では、DAV：チェックインされたバージョンhttp://www.webdav.org/ws/dev/sallyワークスペースでバージョン管理リソースにマージされているワークスペースからhttp://www.webdav.org/ WS /公共。資源/ws/public/src/parse.cと/ws/public/doc/parse.htmlは要求によって変更されました。"
    },
    {
      "indent": 0,
      "text": "11.3 DAV:merge-preview Report",
      "section_title": true,
      "ja": "11.3 DAV：マージプレビューレポート"
    },
    {
      "indent": 3,
      "text": "A merge preview describes the changes that would result if the versions specified by the DAV:source element in the request body were to be merged into the resource identified by the request-URL (commonly, a collection).",
      "ja": "リクエストボディ内のソース・エレメント要求URL（一般に、コレクション）によって識別されたリソースにマージすることであった：マージプレビューがDAVで指定バージョンの場合に生じる変化を記述する。"
    },
    {
      "indent": 3,
      "text": "Marshalling:",
      "ja": "マーシャリング："
    },
    {
      "indent": 6,
      "text": "The request body MUST be a DAV:merge-preview XML element.",
      "ja": "マージプレビューXML要素：リクエストボディは、DAVをでなければなりません。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT merge-preview (source)> <!ELEMENT source (href)>",
      "ja": "<！ELEMENTマージ・プレビュー（ソース）> <！ELEMENTソース（HREF）>"
    },
    {
      "indent": 6,
      "text": "The response body for a successful request MUST be a DAV:merge-preview-report XML element.",
      "ja": "成功したリクエストのレスポンスボディは、DAVでなければならない：マージ・プレビュー・レポートのXML要素を。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT merge-preview-report (update-preview | conflict-preview | ignore-preview)*>",
      "ja": "<！ELEMENTマージプレビューレポート（更新-プレビュー|紛争プレビュー|プレビューを無視します）*>"
    },
    {
      "indent": 6,
      "text": "A DAV:update-preview element identifies a merge target whose DAV:checked-in property would change as a result of the MERGE, and identifies the merge source for that merge target.",
      "ja": "DAV：更新プレビュー要素は、そのDAVマージ対象識別：チェックイン性MERGEの結果として変化するが、そのマージ対象のマージソースを識別する。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT update-preview (target, version)> <!ELEMENT target (href)> <!ELEMENT version (href)>",
      "ja": "<！ELEMENT更新-プレビュー（ターゲット、バージョン）> <！ELEMENTターゲット（HREF）> <！ELEMENTバージョン（HREF）>"
    },
    {
      "indent": 6,
      "text": "A DAV:conflict-preview element identifies a merge target that requires a merge.",
      "ja": "DAV：競合-プレビュー要素がマージを必要とマージターゲットを識別します。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT conflict-preview (target, common-ancestor, version)>",
      "ja": "<！ELEMENT紛争のプレビュー（目標、共通の祖先、バージョン）>"
    },
    {
      "indent": 6,
      "text": "A DAV:common-ancestor element identifies the version that is a common ancestor of both the merge source and the DAV:checked-in or DAV:checked-out version of the merge target.",
      "ja": "DAV：チェックインまたはDAV：マージ対象のチェックアウトバージョン共通の祖先要素は、マージ元とDAVの両方の共通の祖先であるバージョンを識別する。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT common-ancestor (href)>",
      "ja": "<！ELEMENT共通の祖先（HREF）>"
    },
    {
      "indent": 6,
      "text": "A DAV:ignore-preview element identifies a version that has no merge target and therefore would be ignored by the merge.",
      "ja": "DAV：無視プレビュー要素には、マージ対象を持たず、従ってマージによって無視されることになるバージョンを識別する。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT ignore-preview (version)>",
      "ja": "<！ELEMENT無視プレビュー（バージョン）>"
    },
    {
      "indent": 0,
      "text": "11.3.1 Example - DAV:merge-preview Report",
      "section_title": true,
      "ja": "11.3.1例 -  DAV：マージプレビューレポート"
    },
    {
      "indent": 3,
      "text": ">>REQUEST",
      "ja": ">> REQUEST"
    },
    {
      "indent": 5,
      "text": "REPORT /ws/public HTTP/1.1 Host: www.webdav.org Content-type: text/xml; charset=\"utf-8\" Content-Length: xxxx",
      "ja": "REPORT / WS /公共HTTP / 1.1ホスト：www.webdav.orgコンテンツタイプ：text / xmlで、 charset = \"UTF-8\" をコンテンツの長さ：XXXX"
    },
    {
      "indent": 5,
      "text": "<?xml version=\"1.0\" encoding=\"utf-8\" ?> <D:merge-preview xmlns:D=\"DAV:\"> <D:source> <D:href>http://www.webdav.org/ws/dev/fred</D:href> </D:source> </D:merge-preview>",
      "ja": "<？xml version = \"1.0\" エンコード= \"UTF-8\"？> <D：マージプレビューのxmlns：D = \"DAV：\"> <D：ソース> <D：HREF>のhttp：//www.webdav。 ORG / WS / DEV /フレッド</ D：HREF> </ D：ソース> </ D：マージプレビュー>"
    },
    {
      "indent": 3,
      "text": ">>RESPONSE",
      "ja": ">> RESPONSE"
    },
    {
      "indent": 5,
      "text": "HTTP/1.1 200 OK Content-Type: text/xml; charset=\"utf-8\" Content-Length: xxxx",
      "ja": "HTTP / 1.1 200 OKのContent-Type：text / xmlで、 charset = \"UTF-8\" をコンテンツの長さ：XXXX"
    },
    {
      "indent": 5,
      "text": "<?xml version=\"1.0\" encoding=\"utf-8\" ?> <D:merge-preview-report xmlns:D=\"DAV:\"> <D:conflict-preview> <D:target> <D:href>http://www.webdav.org/ws/public/foo.html</D:href> </D:target> <D:common-ancestor> <D:href>http://repo.webdav.org/his/23/ver/18</D:href> </D:common-ancestor> <D:version> <D:href>http://repo.webdav.org/his/23/ver/42</D:href> </D:version> </D:conflict-preview> <D:update-preview> <D:target> <D:href>http://www.webdav.org/ws/public/bar.html</D:href> </D:target> <D:version> <D:href>http://www.repo/his/42/ver/3</D:href> </D:version> </D:update-preview> </D:merge-preview-report>",
      "ja": "<？xml version = \"1.0\" エンコード= \"UTF-8\"？> <D：マージプレビューレポートのxmlns：D = \"DAVを：\"> <D：競合プレビュー> <D：ターゲット> <D：HREF > http://www.webdav.org/ws/public/foo.html </ D：HREF> </ D：ターゲット> <D：共通祖先> <D：HREF>のhttp：//repo.webdav。 ORG /彼/ 23 /版/ 18 </ D：HREF> </ D：共通祖先> <D：バージョン> <D：HREF> http://repo.webdav.org/his/23/ver/42 </ D：HREF> </ D：バージョン> </ D：競合プレビュー> <D：更新プレビュー> <D：ターゲット> <D：HREF> http://www.webdav.org/ws/public /bar.html </ D：HREF> </ D：ターゲット> <D：バージョン> <D：HREF>のhttp：//www.repo/his/42/ver/3 </ D：HREF> </ D ：バージョン> </ D：更新プレビュー> </ D：マージプレビューレポート>"
    },
    {
      "indent": 3,
      "text": "In this example, the merge preview report indicates that version /his/23/ver/42 would be merged in /ws/public/foo.html, and version /his/42/ver/3 would update /ws/public/bar.html if the workspace http://www.webdav.org/ws/dev/fred was merged into the workspace http://www.webdav.org/ws/public.",
      "ja": "この例では、マージプレビューレポートは、バージョン/彼/ 23 /版/ 42は/ws/public/foo.htmlにマージされるだろう、とバージョン/彼/ 42 /版/ 3 / WS /公共/バーを更新してしまうことを示しています.htmlをワークスペースhttp://www.webdav.org/ws/dev/fredは、ワークスペースhttp://www.webdav.org/ws/publicにマージされた場合。"
    },
    {
      "indent": 0,
      "text": "11.4 Additional OPTIONS Semantics",
      "section_title": true,
      "ja": "11.4追加オプションのセマンティクス"
    },
    {
      "indent": 3,
      "text": "If the server supports the merge feature, it MUST include \"merge\" as a field in the DAV response header from an OPTIONS request on any resource that supports any versioning properties, reports, or methods.",
      "ja": "サーバはマージ機能をサポートしている場合、それはどのバージョン管理のプロパティ、レポート、またはメソッドをサポートしているすべてのリソース上のOPTIONS要求からのDAV応答ヘッダ内のフィールドとして「マージ」を含まなければなりません。"
    },
    {
      "indent": 0,
      "text": "11.5 Additional DELETE Semantics",
      "section_title": true,
      "ja": "11.5追加DELETEセマンティクス"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:delete-version-reference): If a version is deleted, any reference to that version in a DAV:merge-set or DAV:auto-merge-set property MUST be removed.",
      "ja": "バージョンが削除された場合、DAVにそのバージョンへの参照：（DAV：削除バージョン参照）マージセットまたはDAV：オートマージ・プロパティセットを除去しなければなりません。"
    },
    {
      "indent": 0,
      "text": "11.6 Additional CHECKIN Semantics",
      "section_title": true,
      "ja": "11.6追加CHECKINセマンティクス"
    },
    {
      "indent": 3,
      "text": "Additional Preconditions:",
      "ja": "追加の前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:merge-must-be-complete): The DAV:merge-set and DAV:auto-merge-set of the checked-out resource MUST be empty or not exist.",
      "ja": "（DAV：マージ--でなければなりません - 完全）：DAV：マージ・セットおよびDAV：チェックアウトリソースの自動マージ・セットが空であるか、または存在してはいけません。"
    },
    {
      "indent": 0,
      "text": "12 Baseline Feature",
      "ja": "12ベースライン機能"
    },
    {
      "indent": 3,
      "text": "A configuration is a set of resources that consists of a root collection and all members of that root collection except those resources that are members of another configuration. A configuration that contains a large number of resources can consume a large amount of space on a server. This can make it prohibitively expensive to remember the state of an existing configuration by creating a Depth:infinity copy of its root collection.",
      "ja": "コンフィギュレーションは、ルートコレクションと他の構成メンバーであるこれらのリソースを除いてそのルートコレクションのすべてのメンバーで構成されたリソースのセットです。多数のリソースが含まれている構成は、サーバー上のスペースを大量に消費することができます。そのルートコレクションの無限コピー：これは非常に高価深さを作成することにより、既存の構成の状態を覚えておくことができます。"
    },
    {
      "indent": 3,
      "text": "A baseline is a version resource that captures the state of each version-controlled member of a configuration. A baseline history is a version history whose versions are baselines. New baselines are created by checking out and then checking in a special kind of version-controlled resource called a version-controlled configuration.",
      "ja": "ベースラインは、コンフィギュレーションの各バージョン制御部材の状態を捕捉バージョンリソースです。ベースラインの歴史は、そのバージョンのベースラインですバージョン履歴です。新しいベースラインをチェックアウトして、バージョン管理されたコンフィギュレーションと呼ばれるバージョン管理されたリソースの特別な種類でチェックすることで作成されます。"
    },
    {
      "indent": 3,
      "text": "A collection that is under baseline control is called a baseline-controlled collection. In order to allow efficient baseline implementation, the state of a baseline of a collection is limited to be a set of versions and their names relative to the collection, and the operations on a baseline are limited to the creation of a baseline from a collection, and restoring or merging the baseline back into a collection. A server MAY automatically put a collection under baseline control when it is created, or a client can use the BASELINE-CONTROL method to put a specified collection under baseline control.",
      "ja": "ベースラインの制御下にあるコレクションは、ベースライン制御コレクションと呼ばれています。 、効率的なベースラインの実装を可能にするために、コレクションのベースラインの状態は、コレクションに対してバージョンおよびそれらの名前のセットに制限され、ベースライン上の動作は、コレクションからのベースラインの作成に限定されていますバックコレクションにベースラインを復元するか、マージします。それが作成されたときにサーバが自動的にベースラインの管理下にコレクションを置いてもよい、またはクライアントがベースラインコントロールの下で指定されたコレクションを入れてBASELINE-CONTROLメソッドを使用することができます。"
    },
    {
      "indent": 3,
      "text": "As a configuration gets large, it is often useful to break it up into a set of smaller configurations that form the logical \"components\" of that configuration. In order to capture the fact that a baseline of a configuration is logically extended by a component configuration baseline, the component configuration baseline is captured as a \"subbaseline\" of the baseline.",
      "ja": "コンフィギュレーションが大きくなると、その構成の論理的な「コンポーネント」を形成小さく構成のセットにそれを分割すると便利です。構成のベースラインが、論理的にコンポーネント構成基準によって拡張されるという事実を捕捉するために、コンポーネントの構成のベースラインは、ベースラインの「subbaseline」としてキャプチャされます。"
    },
    {
      "indent": 3,
      "text": "The root collection of a configuration is unconstrained with respect to its relationship to the root collection of any of its components. In particular, the root collection of a configuration can have a member that is the root collection of one of its components (e.g., configuration /sys/x can have a component /sys/x/foo), can be a member of the root collection of one of its components (e.g., configuration /sys/y/z can have a component /sys/y), or neither (e.g., configuration /sys/x can have a component /comp/bar).",
      "ja": "構成のルートコレクションは、その構成要素のいずれかのルート・コレクションとの関係に関しては制約されません。具体的には、構成のルートコレクションはルートのメンバーになることができ、その成分の一つのルートコレクション（例えば、構成/ SYS / xは成分/ SYS / X / FOOを有することができる）である部材を有することができますその成分の一つの集合（例えば、構成/ SYS / Y / Zが成分/ SYS / Yを有することができる）、またはどちらも（例えば、構成/ SYS / X成分/ COMP /バーを有することができます）。"
    },
    {
      "indent": 0,
      "text": "12.1 Version-Controlled Configuration Properties",
      "section_title": true,
      "ja": "12.1バージョン管理された構成プロパティ"
    },
    {
      "indent": 3,
      "text": "Since a version-controlled configuration is a version-controlled resource, it has all the properties of a version-controlled resource. In addition, the baseline feature introduces the following REQUIRED property for a version-controlled configuration.",
      "ja": "バージョン管理構成は、バージョン管理されたリソースであるため、バージョン管理されたリソースのすべてのプロパティを有します。加えて、ベースラインの特徴は、バージョン管理の構成については、次の必要なプロパティを導入します。"
    },
    {
      "indent": 0,
      "text": "12.1.1 DAV:baseline-controlled-collection (protected)",
      "section_title": true,
      "ja": "12.1.1 DAV：ベースライン制御・コレクション（保護）"
    },
    {
      "indent": 3,
      "text": "This property identifies the collection that contains the version-controlled resources whose DAV:checked-in versions are being tracked by this version-controlled configuration. The DAV:version-controlled-configuration of the DAV:baseline-controlled-collection of a version-controlled configuration MUST identify that version-controlled configuration.",
      "ja": "チェックインされたバージョンで、このバージョン管理の設定によって追跡されている：このプロパティは、DAVバージョン管理リソースを含むコレクションを識別します。 DAV：DAVのバージョン管理、構成：バージョン管理された構成のベースライン制御されたコレクションは、バージョン管理の設定を識別しなければなりません。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT baseline-controlled-collection (href)>",
      "ja": "<！ELEMENTベースライン制御・コレクション（HREF）>"
    },
    {
      "indent": 0,
      "text": "12.2 Checked-Out Configuration Properties",
      "section_title": true,
      "ja": "12.2チェックアウト構成プロパティ"
    },
    {
      "indent": 3,
      "text": "Since a checked-out configuration is a checked-out resource, it has all the properties of a checked-out resource. In addition, the baseline feature introduces the following REQUIRED property for a checked-out configuration.",
      "ja": "チェックアウトの設定がチェックアウトされたリソースであるので、それをチェックアウトされたリソースのすべてのプロパティを持っています。また、ベースライン機能は、チェックアウトの設定のため、次の必要なプロパティを紹介します。"
    },
    {
      "indent": 0,
      "text": "12.2.1 DAV:subbaseline-set",
      "section_title": true,
      "ja": "12.2.1 DAV：subbaselineセット"
    },
    {
      "indent": 3,
      "text": "This property determines the DAV:subbaseline-set property of the baseline that results from checking in this resource.",
      "ja": "このプロパティは、DAVを決定します。このリソースでチェックした結果、ベースラインのsubbaseline-プロパティセットを。"
    },
    {
      "indent": 3,
      "text": "A server MAY reject attempts to modify the DAV:subbaseline-set of a checked-out configuration.",
      "ja": "チェックアウトの構成のsubbaselineセット：サーバがDAVを変更しようとする試みを拒否することがあります。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT subbaseline-set (href*)>",
      "ja": "<！ELEMENTのsubbaselineセット（HREF *）>"
    },
    {
      "indent": 0,
      "text": "12.3 Baseline Properties",
      "section_title": true,
      "ja": "12.3ベースラインのプロパティ"
    },
    {
      "indent": 3,
      "text": "The DAV:resourcetype of a baseline MUST be DAV:baseline. Since a baseline is a version resource, it has all the properties of a version resource. In addition, the baseline feature introduces the following REQUIRED properties for a baseline.",
      "ja": "DAV：ベースライン：ベースラインのresourcetypeのは、DAVでなければなりません。ベースラインはバージョンリソースであるので、バージョンリソースのすべてのプロパティを有します。また、ベースラインの特徴は、ベースラインのために、次の必要なプロパティを紹介します。"
    },
    {
      "indent": 0,
      "text": "12.3.1 DAV:baseline-collection (protected)",
      "section_title": true,
      "ja": "12.3.1 DAV：ベースライン・コレクション（保護）"
    },
    {
      "indent": 3,
      "text": "This property contains a server-defined URL for a collection, where each member of this collection MUST either be a version-controlled resource with the same DAV:checked-in version and relative name as a version-controlled member of the baseline-controlled collection at the time the baseline was created, or be a collection needed to provide the relative name for a version-controlled resource.",
      "ja": "チェックインされたバージョンと相対名ベースラインコントロールコレクションのバージョン管理されたメンバーとして：このプロパティは、このコレクションの各メンバーは同じかDAVとバージョン管理されたリソースでなければならないコレクション用にサーバーに定義されたURLが含まれていますベースラインが作成された時点で、またはバージョン管理されたリソースのための相対的な名前を提供するために必要なコレクションです。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT baseline-collection (href)>",
      "ja": "<！ELEMENTベースライン・コレクション（HREF）>"
    },
    {
      "indent": 0,
      "text": "12.3.2 DAV:subbaseline-set (protected)",
      "section_title": true,
      "ja": "12.3.2 DAV：subbaselineセット（保護）"
    },
    {
      "indent": 3,
      "text": "The URLs in the DAV:subbaseline-set property MUST identify a set of other baselines. The subbaselines of a baseline are the baselines identified by its DAV:subbaseline-set and all subbaselines of the baselines identified by its DAV:subbaseline-set.",
      "ja": "DAV内のURL：subbaseline設定プロパティは、他のベースラインのセットを識別しなければなりません。 subbaselineセットとそのDAVによって識別されたベースラインのすべてのsubbaselines：subbaselineセットのベースラインのsubbaselinesは、そのDAVで識別されるベースラインです。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT subbaseline-set (href*)>",
      "ja": "<！ELEMENTのsubbaselineセット（HREF *）>"
    },
    {
      "indent": 0,
      "text": "12.4 Additional Resource Properties",
      "section_title": true,
      "ja": "12.4追加のリソースのプロパティ"
    },
    {
      "indent": 3,
      "text": "The baseline feature introduces the following REQUIRED property for a resource.",
      "ja": "ベースライン機能は、リソースのために、次の必要なプロパティを紹介します。"
    },
    {
      "indent": 0,
      "text": "12.4.1 DAV:version-controlled-configuration (computed)",
      "section_title": true,
      "ja": "12.4.1 DAV：バージョン管理されたコンフィギュレーション（計算）"
    },
    {
      "indent": 3,
      "text": "If the resource is a member of a version-controlled configuration (i.e. the resource is a collection under baseline control or is a member of a collection under baseline control), this property identifies that version-controlled configuration.",
      "ja": "リソース（すなわち、リソースベースライン制御下に収集されまたはベースライン制御下のコレクションのメンバーである）バージョン管理構成のメンバーである場合、このプロパティはバージョン管理構成ことを識別する。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT version-controlled-configuration (href)>",
      "ja": "<！ELEMENTのバージョン管理、コンフィギュレーション（HREF）>"
    },
    {
      "indent": 0,
      "text": "12.5 Additional Workspace Properties",
      "section_title": true,
      "ja": "12.5追加のワークスペースのプロパティ"
    },
    {
      "indent": 3,
      "text": "The baseline feature introduces the following REQUIRED property for a workspace.",
      "ja": "ベースライン機能は、ワークスペースのために、次の必要なプロパティを紹介します。"
    },
    {
      "indent": 0,
      "text": "12.5.1 DAV:baseline-controlled-collection-set (computed)",
      "section_title": true,
      "ja": "12.5.1 DAV：ベースライン制御収集セット（計算）"
    },
    {
      "indent": 3,
      "text": "This property identifies each member of the workspace that is a collection under baseline control (as well as the workspace itself, if it is under baseline control).",
      "ja": "（これは、ベースライン制御下にある場合、ならびにワークスペース自体）このプロパティは、ベースラインの制御下に収集されたワークスペースの各メンバを識別する。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT baseline-controlled-collection-set (href*)>",
      "ja": "<！ELEMENTベースライン制御のコレクションセット（HREFの*）>"
    },
    {
      "indent": 0,
      "text": "12.6 BASELINE-CONTROL Method",
      "section_title": true,
      "ja": "12.6 BASELINE-CONTROLメソッド"
    },
    {
      "indent": 3,
      "text": "A collection can be placed under baseline control with a BASELINE-CONTROL request. When a collection is placed under baseline control, the DAV:version-controlled-configuration property of the collection is set to identify a new version-controlled configuration. This version-controlled configuration can be checked out and then checked in to create a new baseline for that collection.",
      "ja": "コレクションはBASELINE-CONTROLリクエストで、ベースライン制御下に置くことができます。コレクションは、ベースライン制御下に置かれたとき、DAV：コレクションのバージョン管理、構成プロパティは、新しいバージョンの制御構成を識別するために設定されています。このバージョン管理された構成では、チェックアウトした後、そのコレクションのための新しいベースラインを作成するためにチェックインすることができます。"
    },
    {
      "indent": 3,
      "text": "If a baseline is specified in the request body, the DAV:checked-in version of the new version-controlled configuration will be that baseline, and the collection is initialized to contain version-controlled members whose DAV:checked-in versions and relative names are determined by the specified baseline.",
      "ja": "ベースラインがリクエストボディに指定されている場合は、DAV：チェックインされた新バージョン管理設定のバージョンは、ベースラインとなり、そしてコレクションは、そのDAVバージョン管理されたメンバーを含むように初期化されます。チェックインしたバージョンと相対名指定されたベースラインによって決定されます。"
    },
    {
      "indent": 3,
      "text": "If no baseline is specified, a new baseline history is created containing a baseline that captures the state of the version-controlled members of the collection, and the DAV:checked-in version of the version-controlled configuration will be that baseline.",
      "ja": "何のベースラインが指定されていない場合、新しいベースライン履歴はコレクションのバージョン管理されたメンバーの状態をキャプチャし、ベースライン、およびDAV含む作成されます。チェックインされたバージョン管理の設定のバージョンをそのベースラインとなります。"
    },
    {
      "indent": 3,
      "text": "Marshalling:",
      "ja": "マーシャリング："
    },
    {
      "indent": 6,
      "text": "If a request body is included, it MUST be a DAV:baseline-control XML element.",
      "ja": "リクエストボディが含まれている場合は、DAVでなければならない：ベースラインコントロールXML要素。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT baseline-control ANY> ANY value: A sequence of elements with at most one DAV:baseline element.",
      "ja": "<！ELEMENTベースライン制御ANY> ANY値：ベースライン要素：最大1つのDAVと要素のシーケンス。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT baseline (href)>",
      "ja": "<！ELEMENTベースライン（HREF）>"
    },
    {
      "indent": 6,
      "text": "If a response body for a successful request is included, it MUST be a DAV:baseline-control-response XML element.",
      "ja": "成功した要求に対するレスポンスボディが含まれている場合は、DAVでなければならない：ベースライン・コントロール・レスポンスのXML要素。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT baseline-control-response ANY>",
      "ja": "<！ELEMENTベースライン・コントロール・レスポンスANY>"
    },
    {
      "indent": 6,
      "text": "The response MUST include a Cache-Control:no-cache header.",
      "ja": "キャッシュなしヘッダー：レスポンスはのCache-Controlを含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "Preconditions:",
      "ja": "前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:version-controlled-configuration-must-not-exist): The DAV:version-controlled-configuration property of the collection identified by the request-URL MUST not exist.",
      "ja": "（DAV：バージョン管理され、コンフィギュレーション-なければならない--EXIST）：DAV：リクエストURLによって識別されるコレクションのバージョン管理、構成プロパティが存在してはいけません。"
    },
    {
      "indent": 6,
      "text": "(DAV:must-be-baseline): The DAV:href of the DAV:baseline element in the request body MUST identify a baseline.",
      "ja": "（DAV：-でなければならないベースライン）：DAV：DAVのhref：リクエストボディのベースライン要素は、ベースラインを識別しなければなりません。"
    },
    {
      "indent": 6,
      "text": "(DAV:must-have-no-version-controlled-members): If a DAV:baseline element is specified in the request body, the collection identified by the request-URL MUST have no version-controlled members.",
      "ja": "DAV場合：：（DAV：-持っている必要があります-NO-バージョン管理-メンバー）ベースラインの要素がリクエストボディに指定され、要求URLで識別されるコレクションにはバージョン管理されたメンバーがあってはなりません。"
    },
    {
      "indent": 6,
      "text": "(DAV:one-baseline-controlled-collection-per-history-per-workspace): If the request-URL identifies a workspace or a member of a workspace, and if a baseline is specified in a DAV:baseline element in the request body, then there MUST NOT be another collection in that workspace whose DAV:version-controlled-configuration property identifies a version-controlled configuration for the baseline history of that baseline.",
      "ja": "（DAV：一ベースライン制御収集当たり履歴当たりワークスペース）：リクエストURLは、ワークスペースまたはワークスペースのメンバーを識別した場合、ベースラインは、DAVで指定されている場合：要求のベースライン要素ボディ、そしてDAVそのワークスペース内の別のコレクションがあってはならない：バージョン管理、構成プロパティは、そのベースラインのベースライン履歴のバージョン管理の設定を識別します。"
    },
    {
      "indent": 3,
      "text": "Postconditions:",
      "ja": "事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:create-version-controlled-configuration): A new version-controlled configuration is created, whose DAV:baseline-controlled-collection property identifies the collection.",
      "ja": "（DAV：作成、バージョン管理、構成）：新しいバージョン管理構成が作成され、そのDAV：ベースライン制御されたコレクションのプロパティコレクションを識別する。"
    },
    {
      "indent": 6,
      "text": "(DAV:reference-version-controlled-configuration): The DAV:version-controlled-configuration of the collection identifies the new version-controlled configuration.",
      "ja": "（DAV：基準バージョン制御コンフィギュレーション）：DAV：バージョン管理、構成コレクションの新しいバージョン管理設定を識別する。"
    },
    {
      "indent": 6,
      "text": "(DAV:select-existing-baseline): If the request body specifies a baseline, the DAV:checked-in property of the new version-controlled configuration MUST have been set to identify this baseline. A version-controlled member of the collection will be created for each version in the baseline, where the version-controlled member will have the content and dead properties of that version, and will have the same name relative to the collection as the corresponding version-controlled resource had when the baseline was created. Any nested collections that are needed to provide the appropriate name for a version-controlled member will be created.",
      "ja": "リクエストボディがベースラインを指定した場合、DAV：：（DAV：選択 - 既存のベースライン）チェックインした新バージョン管理の構成のプロパティは、このベースラインを識別するために設定されている必要があります。コレクションのバージョン制御部材は、バージョン制御部材は、そのバージョンの内容とデッド特性を有するベースライン、各バージョン用に作成され、対応する版 - としてコレクションに同じ名前の相対を有するであろうベースラインが作成されたときに制御されるリソースを持っていました。バージョン管理されたメンバーのために適切な名前を提供するために必要とされる任意のネストされたコレクションが作成されます。"
    },
    {
      "indent": 6,
      "text": "(DAV:create-new-baseline): If no baseline is specified in the request body, the request MUST have created a new baseline history at a server-defined URL, and MUST have created a new baseline in that baseline history. The DAV:baseline-collection of the new baseline MUST identify a collection whose members have the same relative name and DAV:checked-in version as the version-controlled members of the request collection. The DAV:checked-in property of the new version-controlled configuration MUST identify the new baseline.",
      "ja": "（DAV：作成新しいベースラインを）：何のベースラインがリクエストボディに指定されていない場合は、要求がサーバーに定義されたURLに新しいベースライン履歴を作成しておく必要があり、そのベースラインの歴史の中で新しいベースラインを作成しておく必要があります。 DAV：リクエストのコレクションのバージョン管理されたメンバーとしてチェックインされたバージョン：新しいベースラインのベースラインのコレクションは、そのメンバーと同じ相対名とDAVを持つコレクションを特定しなければなりません。 DAV：チェックインされた新バージョン管理の構成のプロパティは、新しいベースラインを特定しなければなりません。"
    },
    {
      "indent": 0,
      "text": "12.6.1 Example - BASELINE-CONTROL",
      "section_title": true,
      "ja": "12.6.1例 -  BASELINE-CONTROL"
    },
    {
      "indent": 3,
      "text": ">>REQUEST",
      "ja": ">> REQUEST"
    },
    {
      "indent": 5,
      "text": "BASELINE-CONTROL /src HTTP/1.1 Host: www.webdav.org Content-Type: text/xml; charset=\"utf-8\" Content-Length: xxxx",
      "ja": "BASELINE-CONTROL / srcにHTTP / 1.1ホスト：www.webdav.orgのContent-Type：text / xmlで、 charset = \"UTF-8\" をコンテンツの長さ：XXXX"
    },
    {
      "indent": 5,
      "text": "<?xml version=\"1.0\" encoding=\"utf-8\" ?> <D:baseline-control xmlns:D=\"DAV:\"> <D:href>http://www.webdav.org/repo/blh/13/ver/8</D:href> </D:baseline-control>",
      "ja": "<？xml version = \"1.0\" エンコード= \"UTF-8\"？> <D：ベースラインコントロールのxmlns：D = \"DAV：\"> <D：HREF> http://www.webdav.org/repo/blh / 13 /版/ 8 </ D：HREF> </ D：ベースライン制御>"
    },
    {
      "indent": 3,
      "text": ">>RESPONSE",
      "ja": ">> RESPONSE"
    },
    {
      "indent": 5,
      "text": "HTTP/1.1 200 OK Cache-Control: no-cache Content-Length: 0",
      "ja": "HTTP / 1.1 200 OKのCache-Control：キャッシュなしのContent-Length：0"
    },
    {
      "indent": 3,
      "text": "In this example, the collection /src is placed under baseline control, and is populated with members from an existing baseline. A new version-controlled configuration (/repo/vcc/128) is created and associated with /src, and /src is initialized with version-controlled members whose DAV:checked-in versions are those selected by the DAV:baseline-collection (/repo/bc/15) of the specified baseline (/repo/blh/13/ver/8). The following diagram illustrates the resulting state on the server.",
      "ja": "この例では、収集/ SRCは、ベースライン制御下に置かれ、そして既存のベースラインからのメンバーが取り込まれています。新しいバージョンの制御構成（/レポ/ VCC / 128）を作成及び/ SRCに関連した、および/ SRCは、そのDAVバージョン管理メンバーで初期化されている：チェックインバージョンDAVにより選択されるものである：ベースライン収集（指定されたベースライン（/レポ/ BLH / 13 /版/ 8）の/レポ/ BC / 15）。次の図は、サーバ上で得られた状態を示しています。"
    },
    {
      "indent": 9,
      "text": "+-------------------------------------+\n|Baseline-Controlled Collection       |<------+\n|/src                                 |       |\n|-------------------------------------|       |\n|DAV:version-controlled-configuration +---+   |\n+-------------------------------------+   |   |\n                                          |   |\n                                          |   |\n+-------------------------------------+   |   |\n|Version-Controlled Configuration     |<--+   |\n|/repo/vcc/128                        |       |\n|-------------------------------------|       |\n|DAV:baseline-controlled-collection   +-------+\n|-------------------------------------|\n|DAV:checked-in                       +-------+\n+-------------------------------------+       |\n|DAV:version-history                  +---+   |\n+-------------------------------------+   |   |\n                                          |   |\n                                          |   |\n+------------------------+                |   |\n|Baseline History        |<---------------+   |\n|/repo/blh/13            |                    |\n|------------------------+                    |\n|DAV:version-set         +----------------+   |\n+------------------------+    |   |   |   |   |\n                              v   |   v   v   |\n                                  |           |\n+------------------------+        |           |\n|Baseline                |<-------+-----------+\n|/repo/blh/13/ver/8      |\n|------------------------+     +--------------+\n|DAV:baseline-collection +---->|Collection    |\n+------------------------+     |/repo/bc/15   |\n                               +--------------+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "In order to create new baselines of /src, /repo/vcc/128 can be checked out, new versions can be created or selected by the version-controlled members of /src, and then /repo/vcc/128 can be checked in to capture the current state of those version-controlled members.",
      "ja": "/のSRCの新しいベースラインを作成するためには、/レポ/ VCC / 128は、新しいバージョンが作成されたかのsrc /のバージョン管理されたメンバーによって選択することができ、チェックアウトすることができ、その後、/レポ/ VCC / 128がチェックインすることができますこれらのバージョン管理されたメンバーの現在の状態をキャプチャします。"
    },
    {
      "indent": 0,
      "text": "12.7 DAV:compare-baseline Report",
      "section_title": true,
      "ja": "12.7 DAV：比較ベースラインレポート"
    },
    {
      "indent": 3,
      "text": "A DAV:compare-baseline report contains the differences between the baseline identified by the request-URL (the \"request baseline\") and the baseline specified in the request body (the \"compare baseline\").",
      "ja": "DAV：比較ベースラインレポートは、要求URL（「要求ベースライン」）とリクエストボディ（「比較ベースライン」）で指定されたベースラインにより特定されたベースラインの間の違いが含まれています。"
    },
    {
      "indent": 3,
      "text": "Marshalling:",
      "ja": "マーシャリング："
    },
    {
      "indent": 6,
      "text": "The request body MUST be a DAV:compare-baseline XML element.",
      "ja": "比較ベースラインのXML要素：リクエストボディは、DAVをでなければなりません。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT compare-baseline (href)>",
      "ja": "<！ELEMENT比較するベースライン（HREF）>"
    },
    {
      "indent": 6,
      "text": "The response body for a successful request MUST be a DAV:compare-baseline-report XML element.",
      "ja": "成功したリクエストのレスポンスボディは、DAVでなければならない：XML要素-ベースラインレポートの比較します。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT compare-baseline-report (added-version | deleted-version | changed-version)*>",
      "ja": "<！ELEMENT比較ベースライン・レポートを（追加版|削除・バージョン|変更・バージョン）*>"
    },
    {
      "indent": 6,
      "text": "A DAV:added-version element identifies a version that is the DAV:checked-in version of a member of the DAV:baseline-collection of the compare baseline, but no version in the version history of that version is the DAV:checked-in version of a member of the DAV:baseline-collection of the request baseline.",
      "ja": "DAV：チェックインDAVのメンバーのバージョン：追加のバージョンの要素がDAVのあるバージョンを識別する比較ベースラインのベースラインコレクションが、そのバージョンのバージョン履歴にはバージョンがDAVではない：にチェックインをDAVのメンバーのバージョンで：リクエストベースラインのベースラインコレクション。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT added-version (href)>",
      "ja": "<！ELEMENT追加バージョン（HREF）>"
    },
    {
      "indent": 6,
      "text": "A DAV:deleted-version element identifies a version that is the DAV:checked-in version of a member of the DAV:baseline-collection of the request baseline, but no version in the version history of that version is the DAV:checked-in version of a member of the DAV:baseline-collection of the compare baseline.",
      "ja": "DAV：削除されたバージョンの要素がDAVあるバージョンを特定する：チェックインされたDAVのメンバーのバージョン：リクエストベースラインのベースライン・コレクションが、そのバージョンのバージョン履歴でいないバージョンがDAVです：にチェックインDAVのメンバーのバージョンで：比較のベースラインのベースラインコレクション。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT deleted-version (href)>",
      "ja": "<！ELEMENT削除バージョン（HREF）>"
    },
    {
      "indent": 6,
      "text": "A DAV:changed-version element identifies two different versions from the same version history that are the DAV:checked-in version of the DAV:baseline-collection of the request baseline and the compare baseline, respectively.",
      "ja": "DAV：DAVのチェックインバージョン：それぞれ要求ベースラインのベースライン収集および比較基準、変更バージョンの要素は、DAVである同じバージョン履歴から2つの異なるバージョンを識別する。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT changed-version (href, href)>",
      "ja": "<！ELEMENT変更バージョン（HREF、HREF）>"
    },
    {
      "indent": 3,
      "text": "Preconditions:",
      "ja": "前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:must-be-baseline): The DAV:href in the request body MUST identify a baseline.",
      "ja": "（DAV：-でなければならないベースライン）：DAV：hrefのリクエストボディには、ベースラインを識別しなければなりません。"
    },
    {
      "indent": 6,
      "text": "(DAV:baselines-from-same-history): A server MAY require that the baselines being compared be from the same baseline history.",
      "ja": "（DAV：ベースライン-から、同じ履歴）：サーバーはベースラインが同じベースライン履歴からのものと比較されることを要求することができます。"
    },
    {
      "indent": 0,
      "text": "12.7.1 Example - DAV:compare-baseline Report",
      "section_title": true,
      "ja": "12.7.1例 -  DAV：比較ベースラインレポート"
    },
    {
      "indent": 3,
      "text": ">>REQUEST",
      "ja": ">> REQUEST"
    },
    {
      "indent": 5,
      "text": "REPORT /bl-his/12/bl/14 HTTP/1.1 Host: repo.webdav.com Content-Type: text/xml; charset=\"utf-8\" Content-Length: xxxx",
      "ja": "REPORT / BL-彼/ 12 / BL / 14 HTTP / 1.1ホスト：repo.webdav.comのContent-Type：text / xmlで、 charset = \"UTF-8\" をコンテンツの長さ：XXXX"
    },
    {
      "indent": 5,
      "text": "<?xml version=\"1.0\" encoding=\"utf-8\" ?> <D:compare-baseline xmlns:D=\"DAV:\"> <D:href>http://repo.webdav.org/bl-his/12/bl/15</D:href> </D:compare-baseline>",
      "ja": "<？xml version = \"1.0\" エンコード= \"UTF-8\"？> <D：比較ベースラインのxmlns：D = \"DAV：\"> <D：HREF> http://repo.webdav.org/bl-his / 12 / BL / 15 </ D：HREF> </ D：比較ベースライン>"
    },
    {
      "indent": 3,
      "text": ">>RESPONSE",
      "ja": ">> RESPONSE"
    },
    {
      "indent": 5,
      "text": "HTTP/1.1 200 OK Content-Type: text/xml; charset=\"utf-8\" Content-Length: xxxx",
      "ja": "HTTP / 1.1 200 OKのContent-Type：text / xmlで、 charset = \"UTF-8\" をコンテンツの長さ：XXXX"
    },
    {
      "indent": 5,
      "text": "<?xml version=\"1.0\" encoding=\"utf-8\" ?> <D:compare-baseline-report xmlns:D=\"DAV:\"> <D:added-version> <D:href>http://repo.webdav.org/his/23/ver/8</D:href> </D:added-version> <D:changed-version> <D:href>http://repo.webdav.org/his/29/ver/12</D:href> <D:href>http://repo.webdav.org/his/29/ver/19</D:href> </D:changed-version> <D:deleted-version> <D:href>http://repo.webdav.org/his/12/ver/4</D:href> </D:deleted-version> </D:compare-baseline-report>",
      "ja": "<？xml version = \"1.0\" エンコード= \"UTF-8\"？> <D：コンペアベースラインレポートのxmlnsを：D = \"DAV：\"> <D：付加バージョン> <D：HREF>のhttp：// repo.webdav.org/his/23/ver/8 </ D：HREF> </ D：付加バージョン> <D：変更バージョン> <D：HREF> http://repo.webdav.org/his / 29 /版/ 12 </ D：HREF> <D：HREF> http://repo.webdav.org/his/29/ver/19 </ D：HREF> </ D：変更バージョン> <D ：削除されたバージョン> <D：HREF> http://repo.webdav.org/his/12/ver/4 </ D：HREF> </ D：削除されたバージョン> </ D：コンペアベースラインレポート>"
    },
    {
      "indent": 3,
      "text": "In this example, the differences between baseline 14 and baseline 15 of http://repo.webdav.org/bl-his/12 are identified.",
      "ja": "この例では、http://repo.webdav.org/bl-his/12のベースライン14およびベースライン15との間の差が識別されます。"
    },
    {
      "indent": 0,
      "text": "12.8 Additional OPTIONS Semantics",
      "section_title": true,
      "ja": "12.8追加オプションのセマンティクス"
    },
    {
      "indent": 3,
      "text": "If a server supports the baseline feature, it MUST include \"baseline\" as a field in the DAV response header from an OPTIONS request on any resource that supports any versioning properties, reports, or methods.",
      "ja": "サーバは、ベースラインの機能をサポートしている場合、それはどのバージョン管理のプロパティ、レポート、またはメソッドをサポートしているすべてのリソース上のOPTIONS要求からのDAV応答ヘッダ内のフィールドとして「ベースライン」を含まなければなりません。"
    },
    {
      "indent": 0,
      "text": "12.9 Additional MKCOL Semantics",
      "section_title": true,
      "ja": "12.9追加MKCOLセマンティクス"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "If a server automatically puts a newly created collection under baseline control, all postconditions for BASELINE-CONTROL apply to the MKCOL.",
      "ja": "サーバが自動的にベースラインの管理下に新しく作成されたコレクションを置く場合は、BASELINE-CONTROLのためのすべての事後条件はMKCOLに適用されます。"
    },
    {
      "indent": 0,
      "text": "12.10 Additional COPY Semantics",
      "section_title": true,
      "ja": "12.10追加のコピー・セマンティクス"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "If the request creates a new collection at the Destination, and a server automatically puts a newly created collection under baseline control, all postconditions for BASELINE-CONTROL apply to the COPY.",
      "ja": "要求が目的地に新しいコレクションを作成し、サーバが自動的にベースラインの管理下に新しく作成されたコレクションを置く場合は、BASELINE-CONTROLのためのすべての事後条件は、COPYに適用されます。"
    },
    {
      "indent": 0,
      "text": "12.11 Additional CHECKOUT Semantics",
      "section_title": true,
      "ja": "12.11追加のチェックアウトのセマンティクス"
    },
    {
      "indent": 3,
      "text": "Additional Preconditions:",
      "ja": "追加の前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:must-not-update-baseline-collection): If the request-URL identifies a member of the configuration rooted at the DAV:baseline-collection of a baseline, the request MUST fail.",
      "ja": "要求URLがDAVをルートコンフィギュレーションのメンバを識別する場合は、次の：（DAV：-ない更新ベースライン収集しなければならない）は、ベースラインのベースラインのコレクションを、要求が失敗しなければなりません。"
    },
    {
      "indent": 0,
      "text": "12.12 Additional CHECKIN Semantics",
      "section_title": true,
      "ja": "12.12追加CHECKINセマンティクス"
    },
    {
      "indent": 3,
      "text": "Additional Preconditions:",
      "ja": "追加の前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:no-checked-out-baseline-controlled-collection-members): If the request-URL identifies a version-controlled configuration, all version-controlled members of the DAV:baseline-controlled-collection of the version-controlled configuration MUST be checked-in.",
      "ja": "（DAV：ノーチェックアウトベースライン制御・コレクション - メンバー）：バージョン管理された構成のベースライン制御-コレクション：リクエストURLは、バージョン管理の設定、DAVのすべてのバージョン管理メンバーを識別する場合チェックインされなければなりません。"
    },
    {
      "indent": 6,
      "text": "(DAV:one-version-per-history-per-baseline): If the request-URL identifies a version-controlled configuration, the set of versions selected by that version-controlled configuration MUST contain at most one version from any version history, where a version is selected by a version-controlled configuration if the version is identified by the DAV:checked-in property of any member of the configuration rooted at the DAV:baseline-controlled collection of that version-controlled configuration, or is identified by the DAV:checked-in property of any member of the configuration rooted at the DAV:baseline-collection of any subbaseline of that version-controlled configuration.",
      "ja": "（DAV：一バージョンあたりの履歴毎ベースライン）：リクエストURLがバージョン管理設定を識別した場合、そのバージョン管理設定によって選択されたバージョンのセットは、任意のバージョン履歴から最大1つのバージョンを格納しなければなりません。チェックインDAVをルート設定の任意のメンバーのプロパティ：バージョンがバージョンはDAVにより識別された場合、バージョン管理設定によって選択された場合、そのバージョン管理構成のベースライン制御コレクション、またはによって識別されますDAV：チェックインされたDAVをルート設定の任意のメンバーのプロパティ：そのバージョン管理されたコンフィギュレーションのいずれかのsubbaselineのベースラインコレクション。"
    },
    {
      "indent": 6,
      "text": "(DAV:cannot-modify-version-controlled-configuration): If the request-URL identifies a version-controlled member of a baseline-controlled collection whose version-controlled configuration is checked-in, the request MUST fail unless the DAV:auto-version property of the version-controlled configuration will automatically check out that version-controlled configuration when it is modified.",
      "ja": "（DAV：-変更しないで、バージョン管理され、コンフィギュレーションすることができます）：オート：リクエストURLは、バージョン管理された構成にチェックインされ、要求はDAVない限り失敗しなければなりませんベースラインコントロールコレクションのバージョン管理メンバーを識別する場合それが修正されたときにバージョン管理されたコンフィギュレーションの-versionプロパティは自動的にバージョン管理の設定をチェックアウトします。"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:create-baseline-collection): If the request-URL identifies a version-controlled configuration, the DAV:baseline-collection of the new baseline identifies a collection whose members have the same relative name and DAV:checked-in version as the members of the DAV:baseline-controlled-collection of the version-controlled configuration at the time of the request.",
      "ja": "（DAV：作成ベースライン・コレクション）：リクエストURLがバージョン管理された構成を特定した場合は、DAV：新しいベースラインのベースラインコレクションはメンバーと同じ相対名とDAVを持つコレクションを識別します。チェックインされたバージョンとしてDAVのメンバー：要求時にバージョン管理された構成のベースライン制御されたコレクション。"
    },
    {
      "indent": 6,
      "text": "(DAV:modify-configuration): If the request-URL identifies a version-controlled member of a baseline-controlled collection, this is a modification to the version-controlled configuration of that baseline-controlled collection, and standard auto-versioning semantics apply.",
      "ja": "（DAV：モディファイ構成）：リクエストURLは、ベースライン制御コレクションのバージョン管理メンバーを識別する場合、これはそのベースライン制御コレクションのバージョン管理構成に変形され、そして標準的な自動バージョニングのセマンティクスが適用され。"
    },
    {
      "indent": 0,
      "text": "12.13 Additional UPDATE Semantics",
      "section_title": true,
      "ja": "12.13追加UPDATEセマンティクス"
    },
    {
      "indent": 3,
      "text": "Additional Preconditions:",
      "ja": "追加の前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:baseline-controlled-members-must-be-checked-in): If the request-URL identifies a version-controlled configuration, then all version-controlled members of the DAV:baseline-controlled-collection of that version-controlled configuration MUST be checked-in.",
      "ja": "（DAV：ベースライン制御-メンバーは--チェックする必要があります-で）：それはバージョン管理のベースライン制御-コレクション：リクエストURLがバージョン管理の設定、DAVのすべてのバージョン管理メンバーを識別する場合コンフィギュレーションは、チェックインされなければなりません。"
    },
    {
      "indent": 6,
      "text": "(DAV:must-not-update-baseline-collection): If the request-URL identifies a member of the configuration rooted at the DAV:baseline-collection of a baseline, the request MUST fail.",
      "ja": "要求URLがDAVをルートコンフィギュレーションのメンバを識別する場合は、次の：（DAV：-ない更新ベースライン収集しなければならない）は、ベースラインのベースラインのコレクションを、要求が失敗しなければなりません。"
    },
    {
      "indent": 6,
      "text": "(DAV:cannot-modify-version-controlled-configuration): If the request updates the DAV:checked-in property of any version-controlled member of a baseline-controlled collection whose version-controlled configuration is checked-in, the request MUST fail unless the DAV:auto-version property of the version-controlled configuration will automatically check out that version-controlled configuration when it is modified.",
      "ja": "（DAV：モディファイないバージョン制御コンフィギュレーションすることができる）：要求がDAVを更新する場合：チェックインされたバージョン管理構成チェックインされ、リクエストを行う必要があり、ベースライン制御コレクションのすべてのバージョン制御部材のプロパティDAVない限り失敗：バージョン管理されたコンフィギュレーションの自動バージョンプロパティをそれが変更されたときに自動的にバージョン管理の設定をチェックアウトします。"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:set-baseline-controlled-collection-members): If the request updated the DAV:checked-in property of a version-controlled configuration, then the version-controlled members of the DAV:baseline-controlled-collection of that version-controlled configuration MUST have been updated so that they have the same relative name, content, and dead properties as the members of the DAV:baseline-collection of the baseline. In particular:",
      "ja": "（DAV：セット・ベースライン・コントロール・コレクション - メンバー）：チェックインされたバージョン管理の設定、DAVの後、バージョン管理されたメンバーのプロパティ：そのバージョンのベースライン制御されたコレクションの要求は、DAVを更新した場合ベースラインのベースラインコレクション：彼らは同じ相対名、コンテンツ、およびDAVのメンバーとして死者の性質を持つように-controlled構成が更新されている必要があります。特に："
    },
    {
      "indent": 6,
      "text": "- A version-controlled member for a given version history MUST have been deleted if there is no version-controlled member for that version history in the DAV:baseline-collection of the baseline. - A version-controlled member for a given version history MUST have been renamed if its name relative to the baseline-controlled collection is different from that of the version-controlled member for that version history in the DAV:baseline-collection of the baseline. - A new version-controlled member MUST have been created for each member of the DAV:baseline-collection of the baseline for which there is no corresponding version-controlled member in the baseline-controlled collection. - An UPDATE request MUST have been applied to each version-controlled member for a given version history whose DAV:checked-in version is not the same as that of the version-controlled member for that version history in the DAV:baseline-collection of the baseline.",
      "ja": "ベースラインのベースラインコレクション： -  DAVでそのバージョン履歴にはバージョン管理されたメンバーが存在しない場合は与えられたバージョン履歴のバージョン管理されたメンバーが削除されている必要があります。ベースラインのベースラインコレクション： - ベースライン制御のコレクションに、その名前の相対DAVでそのバージョン履歴のバージョン管理されたメンバーとは異なる場合与えられたバージョン履歴のバージョン管理されたメンバーの名前が変更されている必要があります。ベースライン制御コレクションには対応するバージョン制御部材が存在しないいるベースラインのベースライン収集： - 新しいバージョンの制御部材は、DAVの各メンバーのために作成されていなければなりません。チェックインバージョンDAVでそのバージョン履歴のバージョン制御部材と同じではない：のベースライン収集 -  UPDATE要求は、そのDAV所与のバージョン履歴の各バージョン制御部材に適用されている必要がありますベースライン。"
    },
    {
      "indent": 6,
      "text": "(DAV:update-subbaselines): If the request updated a version-controlled configuration whose DAV:baseline-controlled-collection contains a baseline-controlled member for one of the subbaselines of the request baseline, then the DAV:checked-in property of the version-controlled configuration of that baseline-controlled member MUST have been updated to be that subbaseline. If the request updated a version-controlled configuration whose DAV:baseline-controlled-collection is a member of a workspace that contains a baseline-controlled member for one of the subbaselines of the request baseline, then the DAV:checked-in property of the version-controlled configuration of that baseline-controlled member MUST have been updated to be that subbaseline.",
      "ja": "（DAV：更新subbaselines）：ベースライン制御されたコレクションはDAV次いで、要求ベースラインのsubbaselinesのいずれかのベースライン制御部材を含んでいる：チェックインの性質要求は、そのDAVバージョン管理設定を更新した場合そのベースライン制御メンバーのバージョン管理された構成がそのsubbaselineに更新されている必要があります。ベースラインの制御・コレクションは、リクエストベースラインのsubbaselines、その後、DAVの1のベースライン制御のメンバーを含むワークスペースのメンバーである：要求はそのDAVバージョン管理の設定を更新した場合はチェックインされたのプロパティそのベースライン制御メンバーのバージョン管理された構成がそのsubbaselineに更新されている必要があります。"
    },
    {
      "indent": 6,
      "text": "(DAV:modify-configuration): If the request updated the DAV:checked-in property of any version-controlled member of a baseline-controlled collection, and if this DAV:checked-in property differs from the DAV:checked-in property of the corresponding version-controlled member of the DAV:baseline-collection of the DAV:checked-in baseline of the DAV:version-controlled-configuration of the baseline-controlled collection, then this is a modification to that version-controlled configuration, and standard auto-versioning semantics apply.",
      "ja": "（DAV：モディファイ構成）：ベースライン制御のコレクションのいずれかのバージョン管理されたメンバーのプロパティでチェックされ、このDAV場合：チェックインされたプロパティはDAVとは異なります。チェックインされたプロパティリクエストがDAVを更新した場合DAVのベースライン収集：チェックインDAVのベースライン：DAVの対応するバージョン制御部材からベースライン制御コレクションのバージョン管理、構成、これは、そのバージョン管理構成の変形であります標準の自動バージョニングのセマンティクスが適用されます。"
    },
    {
      "indent": 0,
      "text": "12.14 Additional MERGE Semantics",
      "section_title": true,
      "ja": "12.14追加MERGEセマンティクス"
    },
    {
      "indent": 3,
      "text": "If the merge source is a baseline, the merge target is a version-controlled configuration for the baseline history of that baseline, where the baseline-controlled collection of that version-controlled configuration is a member of the collection identified by the request-URL.",
      "ja": "マージ元がベースラインである場合、マージ対象は、バージョン管理構成のベースライン制御収集が要求URLによって識別されるコレクションのメンバーであることを、ベースライン、ベースライン履歴のバージョン管理の構成です。"
    },
    {
      "indent": 3,
      "text": "Additional Preconditions:",
      "ja": "追加の前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:must-not-update-baseline-collection): Same semantics as UPDATE (see Section 12.13).",
      "ja": "（DAV：-ない-更新ベースライン収集しなければならない）：UPDATEと同じセマンティクス（項12.13を参照してください）。"
    },
    {
      "indent": 6,
      "text": "(DAV:cannot-modify-version-controlled-configuration): Same semantics as UPDATE (see Section 12.13).",
      "ja": "（DAV：-変更しないで、バージョン管理され、コンフィギュレーションすることができます）：UPDATEと同じセマンティクス（項12.13を参照してください）。"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:merge-baseline): If the merge target is a version-controlled configuration whose DAV:checked-out baseline is not a descendant of the merge baseline, then the merge baseline MUST have been added to the DAV:auto-merge-set of a version-controlled configuration. The DAV:checked-in version of each member of the DAV:baseline-collection of that baseline MUST have been merged into the DAV:baseline-controlled-collection of that version-controlled configuration.",
      "ja": "マージの対象は、そのDAVバージョン管理構成の場合：（DAV：マージベースライン）を自動merge-：チェックアウトベースラインがマージベースラインの子孫ではない場合、マージベースラインは、DAVに追加されている必要がありますバージョン管理された構成のセット。 DAV：チェックインされたDAVの各メンバーのバージョン：そのベースラインのベースラインコレクションは、DAVにマージされている必要があります。そのバージョン管理された構成のベースライン制御されたコレクションを。"
    },
    {
      "indent": 6,
      "text": "(DAV:merge-subbaselines): If the merge target is a version-controlled configuration whose DAV:baseline-controlled-collection contains a baseline-controlled member for one of the subbaselines of the merge baseline, then that subbaseline MUST have been merged into the version-controlled configuration of that baseline-controlled member. If the merge target is a version-controlled configuration whose DAV:baseline-controlled-collection is a member of a workspace that contains a baseline-controlled member for one of the subbaselines of the merge baseline, then that subbaseline MUST have been merged into the version-controlled configuration of that baseline-controlled member.",
      "ja": "（DAV：マージ-subbaselines）：ベースライン制御されたコレクションはsubbaselineのにマージされていなければならないこと、次いで、マージベースラインのsubbaselinesのいずれかのベースライン制御部材を含んでいる：マージの対象は、そのDAVバージョン管理構成の場合そのベースライン制御部材のバージョン管理構成。ベースラインの制御・コレクションマージベースラインのsubbaselinesの一つのベースライン制御のメンバーを含むワークスペースのメンバーであり、そのsubbaselineがにマージされている必要があります：マージ対象は、そのDAVバージョン管理された構成である場合そのベースライン制御部材のバージョン管理構成。"
    },
    {
      "indent": 6,
      "text": "(DAV:set-baseline-controlled-collection-members): Same semantics as UPDATE (see Section 12.13).",
      "ja": "（DAV：設定ベースライン制御・コレクション - メンバー）：UPDATEと同じセマンティクス（項12.13を参照してください）。"
    },
    {
      "indent": 6,
      "text": "(DAV:modify-configuration): Same semantics as UPDATE (see Section 12.13).",
      "ja": "（DAV：モディファイ設定）：UPDATEと同じセマンティクス（項12.13を参照してください）。"
    },
    {
      "indent": 0,
      "text": "13 Activity Feature",
      "ja": "13アクティビティ特集"
    },
    {
      "indent": 3,
      "text": "An activity is a resource that selects a set of versions that are on a single \"line of descent\", where a line of descent is a sequence of versions connected by successor relationships. If an activity selects versions from multiple version histories, the versions selected in each version history must be on a single line of descent.",
      "ja": "活性は、降下のラインが後継関係で接続されたバージョンの配列である単一の「降下のライン」にあるバージョンのセットを選択するリソースです。活動は複数のバージョン履歴からバージョンを選択した場合、各バージョン履歴で選択したバージョンは降下の1行でなければなりません。"
    },
    {
      "indent": 3,
      "text": "A common problem that motivates the use of activities is that it is often desirable to perform several different logical changes in a single workspace, and then selectively merge a subset of those logical changes to other workspaces. An activity can be used to represent a single logical change, where an activity tracks all the resources that were modified to effect that single logical change. When a version-controlled resource is checked out, the user specifies which activity should be associated with a new version that will be created when that version-controlled resource is checked in. It is then possible to select a particular logical change for merging into another workspace, by specifying the appropriate activity in a MERGE request.",
      "ja": "活動の使用の動機共通の問題は、1つのワークスペース内の複数の異なる論理的な変更を行うことが望ましい場合が多い、そして次に選択他のワークスペースにそれらの論理的な変更のサブセットをマージすることです。アクティビティは、アクティビティがその単一の論理変化をもたらすように修飾されたすべてのリソースを追跡する単一の論理変化を表すために使用することができます。バージョン管理されたリソースがチェックアウトされている場合、ユーザーはそのバージョン管理されたリソースがチェックインされたときに作成される新しいバージョンに関連付けされるべき活動を指定します。別のものにマージするために、特定の論理変更を選択することが可能ですワークスペース、MERGE要求に適切なアクティビティを指定することもできます。"
    },
    {
      "indent": 3,
      "text": "Another common problem is that although a version-controlled resource may need to have multiple lines of descent, all work done by members of a given team must be on a single line of descent (to avoid merging between team members). An activity resource provides the mechanism for addressing this problem. When a version-controlled resource is checked out, a client can request that an existing activity be used or that a new activity be created. Activity semantics then ensure that all versions in a given version history that are associated with an activity are on a single line of descent. If all members of a team share a common activity (or sub-activities of a common activity), then all changes made by members of that team will be on a single line of descent.",
      "ja": "別の一般的な問題は、バージョン管理されたリソースは、降下の複数行を持っている必要があるかもしれませんが、与えられたチームのメンバーによって行われたすべての作業は（チームメンバー間でのマージを避けるために）降下の単一の行になければならないということです。アクティビティリソースは、この問題に対処するためのメカニズムを提供します。バージョン管理されたリソースがチェックアウトされた場合、クライアントは既存のアクティビティを使用すること、または新しい活動が作成されることを要求することができます。活性セマンティクスは、次に活動に関連付けられた所定のバージョン履歴中のすべてのバージョンが降下の単一の行にあることを確認します。チームのすべてのメンバーが共通の活性（または一般的な活動のサブ活動を）共有している場合は、そのチームのメンバーによって行われたすべての変更は、降下の単一の行になります。"
    },
    {
      "indent": 3,
      "text": "The following diagram illustrates activities. Version V5 is the latest version of foo.html selected by activity Act-2, and version V8 is the latest version of bar.html selected by activity Act-2.",
      "ja": "次の図は、活動を示しています。バージョンV5は、アクティビティact-2で選択されたfoo.htmlというの最新バージョンで、バージョンV8は、アクティビティact-2が選択した内容でbar.htmlの最新バージョンです。"
    },
    {
      "indent": 18,
      "text": "foo.html History bar.html History",
      "ja": "foo.htmlという歴史内容でbar.html歴史"
    },
    {
      "indent": 12,
      "text": "            +---+                  +---+\n       Act-1|   |V1           Act-1|   |V6\n            +---+                  +---+\n              |                      |\n              |                      |\n            +---+                  +---+\n       Act-1|   |V2           Act-2|   |V7\n            +---+                  +---+\n           /     \\                   |\n          /       \\                  |\n     +---+         +---+           +---+\nAct-1|   |V3  Act-2|   |V4    Act-2|   |V8\n     +---+         +---+           +---+\n                     |               |\n                     |               |\n                   +---+           +---+\n              Act-2|   |V5    Act-3|   |V9\n                   +---+           +---+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Activities appear under a variety of names in existing versioning systems. When an activity is used to capture a logical change, it is commonly called a \"change set\". When an activity is used to capture a line of descent, it is commonly called a \"branch\". When a system supports both branches and change sets, it is often useful to require that a particular change set occur on a particular branch. This relationship can be captured by making the change set activity be a \"subactivity\" of the branch activity.",
      "ja": "活動は、既存のバージョン管理システム内の様々な名前の下に表示されます。活動は論理的な変化を捕捉するために使用されるとき、それは一般的に「変更セット」と呼ばれています。活動は降下のラインを捕捉するために使用されるとき、それは一般的に「ブランチ」と呼ばれています。システムは、枝や変更セットの両方をサポートしている場合、特定のチェンジセットが特定のブランチ上で発生することを要求することが有用であることが多いです。この関係は、変更セットの活動が分岐活動の「subactivity」も作ることによって捕獲することができます。"
    },
    {
      "indent": 0,
      "text": "13.1 Activity Properties",
      "section_title": true,
      "ja": "13.1アクティビティのプロパティ"
    },
    {
      "indent": 3,
      "text": "The DAV:resourcetype of an activity MUST be DAV:activity.",
      "ja": "DAV：活動：活動のresourcetypeのは、DAVでなければなりません。"
    },
    {
      "indent": 3,
      "text": "The activity feature introduces the following REQUIRED properties for an activity.",
      "ja": "アクティビティ機能は、活動のため、次の必要なプロパティを紹介します。"
    },
    {
      "indent": 0,
      "text": "13.1.1 DAV:activity-version-set (computed)",
      "section_title": true,
      "ja": "13.1.1 DAV：活性バージョンセット（計算）"
    },
    {
      "indent": 3,
      "text": "This property identifies each version whose DAV:activity-set property identifies this activity. Multiple versions of a single version history can be selected by an activity's DAV:activity-version-set property, but all DAV:activity-version-set versions from a given version history must be on a single line of descent from the root version of that version history.",
      "ja": "アクティビティセットプロパティは、このアクティビティを識別します。このプロパティは、そのDAV各バージョンを識別します。単一バージョン履歴の複数のバージョン活動のDAVによって選択することができます：活動-バージョン設定されたプロパティが、すべてのDAV：指定されたバージョン履歴から活動-バージョンセットのバージョンがのルートバージョンからの降下の一行でなければなりませんそのバージョン履歴。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT activity-version-set (href*)>",
      "ja": "<！ELEMENT活動-バージョンセット（HREFの*）>"
    },
    {
      "indent": 0,
      "text": "13.1.2 DAV:activity-checkout-set (computed)",
      "section_title": true,
      "ja": "13.1.2 DAV：アクティビティ・チェックアウト・セット（計算）"
    },
    {
      "indent": 3,
      "text": "This property identifies each checked-out resource whose DAV:activity-set identifies this activity.",
      "ja": "アクティビティセットは、この活動を識別します。このプロパティは、そのDAVそれぞれにチェックアウトされたリソースを識別します。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT activity-checkout-set (href*)>",
      "ja": "<！ELEMENT活動・チェックアウト・セット（HREFの*）>"
    },
    {
      "indent": 0,
      "text": "13.1.3 DAV:subactivity-set",
      "section_title": true,
      "ja": "13.1.3 DAV：subactivityセット"
    },
    {
      "indent": 3,
      "text": "This property identifies each activity that forms a part of the logical change being captured by this activity. An activity behaves as if its DAV:activity-version-set is extended by the DAV:activity-version-set of each activity identified in the DAV:subactivity-set. In particular, the versions in this extended set MUST be on a single line of descent, and when an activity selects a version for merging, the latest version in this extended set is the one that will be merged.",
      "ja": "このプロパティは、この活動によって捕捉された論理変更の一部を形成する各アクティビティを識別する。活性は、そのDAVかのように振る舞う：subactivityセット：DAVで識別された各活動の活動バージョンセット：活動バージョンセットは、DAVによって拡張されます。具体的には、この拡張されたセット内のバージョンでは、降下の単一ライン上にある必要があり、そして活性をマージするバージョンを選択すると、この拡張されたセットの最新バージョンがマージされるものです。"
    },
    {
      "indent": 3,
      "text": "A server MAY reject attempts to modify the DAV:subactivity-set of an activity.",
      "ja": "活動のsubactivityセット：サーバがDAVを変更しようとする試みを拒否することがあります。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT subactivity-set (href*)>",
      "ja": "<！ELEMENTのsubactivityセット（HREF *）>"
    },
    {
      "indent": 0,
      "text": "13.1.4 DAV:current-workspace-set (computed)",
      "section_title": true,
      "ja": "13.1.4 DAV：電流ワークスペース・セット（計算）"
    },
    {
      "indent": 3,
      "text": "This property identifies each workspace whose DAV:current-activity-set identifies this activity.",
      "ja": "このプロパティは、そのDAV各ワークスペースを識別する：現在のアクティビティセットは、このアクティビティを識別する。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT current-workspace-set (href*)>",
      "ja": "<！ELEMENT電流のワークスペースセット（HREF *）>"
    },
    {
      "indent": 0,
      "text": "13.2 Additional Version Properties",
      "section_title": true,
      "ja": "13.2追加バージョンのプロパティ"
    },
    {
      "indent": 3,
      "text": "The activity feature introduces the following REQUIRED property for a version.",
      "ja": "アクティビティ機能は、バージョンのため、次の必要なプロパティを紹介します。"
    },
    {
      "indent": 0,
      "text": "13.2.1 DAV:activity-set",
      "section_title": true,
      "ja": "13.2.1 DAV：アクティビティセット"
    },
    {
      "indent": 3,
      "text": "This property identifies the activities that determine to which logical changes this version contributes, and on which lines of descent this version appears. A server MAY restrict the DAV:activity-set to identify a single activity. A server MAY refuse to allow the value of the DAV:activity-set property of a version to be modified.",
      "ja": "このプロパティは、論理の変更を決定活動を特定し、このバージョンには寄与し、その降下のラインにこのバージョンが表示されます。単一のアクティビティを識別するために、アクティビティセット：サーバがDAVを制限することができます。修正するバージョンの活動-setプロパティ：サーバがDAVの値を許可するように拒否することができます。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT activity-set (href*)>",
      "ja": "<！ELEMENTアクティビティ・セット（HREFの*）>"
    },
    {
      "indent": 0,
      "text": "13.3 Additional Checked-Out Resource Properties",
      "section_title": true,
      "ja": "13.3追加のチェックアウトリソースプロパティ"
    },
    {
      "indent": 3,
      "text": "The activity feature introduces the following REQUIRED properties for a checked-out resource.",
      "ja": "アクティビティ機能は、チェックアウトされたリソースのために、次の必要なプロパティを紹介します。"
    },
    {
      "indent": 0,
      "text": "13.3.1 DAV:unreserved",
      "section_title": true,
      "ja": "13.3.1 DAV：予約されていません"
    },
    {
      "indent": 3,
      "text": "This property of a checked-out resource indicates whether the DAV:activity-set of another checked-out resource associated with the version history of this version-controlled resource can have an activity that is in the DAV:activity-set property of this checked-out resource.",
      "ja": "このバージョン管理されたリソースのバージョン履歴に関連する別のチェックアウトされたリソースのアクティビティセットDAVである活性を有することができます：このの活動、設定プロパティがチェックにチェックアウトされたリソースのこのプロパティは、DAVがあるかどうかを示します-outリソース。"
    },
    {
      "indent": 3,
      "text": "A result of the requirement that an activity must form a single line of descent through a given version history is that if multiple checked-out resources for a given version history are checked out unreserved into a single activity, only the first CHECKIN will succeed. Before another of these checked-out resources can be checked in, the user will first have to merge into that checked-out resource the latest version selected by that activity from that version history, and then modify the DAV:predecessor-set of that checked-out resource to identify that version.",
      "ja": "活動は、特定のバージョン履歴による降下の単一ラインを形成しなければならない要件の結果は、特定のバージョン履歴のために複数のチェックアウトリソースを単一のアクティビティに予約されていないチェックアウトされている場合は、最初CHECKINが成功するということです。これらのチェックアウトリソースの別がチェックインする前に、ユーザーが最初にそのチェックアウトされたリソースの中にそのバージョン履歴からその活動によって選択された最新バージョンをマージして、DAVを変更する必要があります。チェックしているの前身セットを-outリソースは、そのバージョンを識別します。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT unreserved (#PCDATA)> PCDATA value: boolean",
      "ja": "<！ELEMENT予約されていない（#PCDATA）> PCDATA値：ブール"
    },
    {
      "indent": 0,
      "text": "13.3.2 DAV:activity-set",
      "section_title": true,
      "ja": "13.3.2 DAV：アクティビティセット"
    },
    {
      "indent": 3,
      "text": "This property of a checked-out resource determines the DAV:activity-set property of the version that results from checking in this resource.",
      "ja": "チェックアウトリソースのこのプロパティは、DAVを決定します。このリソースでチェックした結果バージョンの活動プロパティセットを。"
    },
    {
      "indent": 0,
      "text": "13.4 Additional Workspace Properties",
      "section_title": true,
      "ja": "13.4追加のワークスペースのプロパティ"
    },
    {
      "indent": 3,
      "text": "The activity feature introduces the following REQUIRED property for a workspace.",
      "ja": "アクティビティ機能は、ワークスペースのために、次の必要なプロパティを紹介します。"
    },
    {
      "indent": 0,
      "text": "13.4.1 DAV:current-activity-set",
      "section_title": true,
      "ja": "13.4.1 DAV：現在活性セット"
    },
    {
      "indent": 3,
      "text": "This property identifies the activities that currently are being performed in this workspace. When a member of this workspace is checked out, if no activity is specified in the checkout request, the DAV:current-activity-set will be used. This allows an activity-unaware client to update a workspace in which activity tracking is required. The DAV:current-activity-set MAY be restricted to identify at most one activity.",
      "ja": "このプロパティは、現在このワークスペースで行われている活動を識別します。アクティビティがチェックアウト要求に指定されていない場合、このワークスペースのメンバーは、チェックアウトされている場合は、DAV：現在の活動・セットが使用されます。これは、アクティビティの追跡が必要とされているワークスペースを更新するための活動を意識しないクライアントを許可します。 DAV：現在の活動セットは、最大1つのアクティビティを識別するために制限される場合があります。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT current-activity-set (href*)>",
      "ja": "<！ELEMENT現在活性セット（HREFの*）>"
    },
    {
      "indent": 0,
      "text": "13.5 MKACTIVITY Method",
      "section_title": true,
      "ja": "13.5 MKACTIVITY方法"
    },
    {
      "indent": 3,
      "text": "A MKACTIVITY request creates a new activity resource. A server MAY restrict activity creation to particular collections, but a client can determine the location of these collections from a DAV:activity-collection-set OPTIONS request.",
      "ja": "MKACTIVITY要求は、新たな活動のリソースを作成します。サーバーは、特定のコレクションにアクティビティの作成を制限することができるが、クライアントはDAVからこれらのコレクションの位置を決定することができます：アクティビティ - コレクションセットOPTIONS要求を。"
    },
    {
      "indent": 3,
      "text": "Marshalling:",
      "ja": "マーシャリング："
    },
    {
      "indent": 6,
      "text": "If a request body is included, it MUST be a DAV:mkactivity XML element.",
      "ja": "MKACTIVITYのXML要素：リクエストボディが含まれている場合は、DAVでなければなりません。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT mkactivity ANY>",
      "ja": "<！ELEMENTのMKACTIVITY ANY>"
    },
    {
      "indent": 6,
      "text": "If a response body for a successful request is included, it MUST be a DAV:mkactivity-response XML element.",
      "ja": "成功した要求に対するレスポンスボディが含まれている場合は、DAVでなければならない：MKACTIVITY応答XML要素。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT mkactivity-response ANY>",
      "ja": "<！ELEMENTのMKACTIVITY応答ANY>"
    },
    {
      "indent": 6,
      "text": "The response MUST include a Cache-Control:no-cache header.",
      "ja": "キャッシュなしヘッダー：レスポンスはのCache-Controlを含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "Preconditions:",
      "ja": "前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:resource-must-be-null): A resource MUST NOT exist at the request-URL.",
      "ja": "（DAV：リソース-でなければならないヌル）：リソースは、リクエストURLに存在してはなりません。"
    },
    {
      "indent": 6,
      "text": "(DAV:activity-location-ok): The request-URL MUST identify a location where an activity can be created.",
      "ja": "（DAV：活動場所の）リクエストURLは、アクティビティを作成することができる場所を識別しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Postconditions:",
      "ja": "事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:initialize-activity): A new activity exists at the request-URL. The DAV:resourcetype of the activity MUST be DAV:activity.",
      "ja": "（DAV：初期化活動）：新しいアクティビティは、要求URLに存在します。 DAV：活動：活動のresourcetypeのは、DAVでなければなりません。"
    },
    {
      "indent": 0,
      "text": "13.5.1 Example - MKACTIVITY",
      "section_title": true,
      "ja": "13.5.1例 -  MKACTIVITY"
    },
    {
      "indent": 3,
      "text": ">>REQUEST",
      "ja": ">> REQUEST"
    },
    {
      "indent": 5,
      "text": "MKACTIVITY /act/test-23 HTTP/1.1 Host: repo.webdav.org Content-Length: 0",
      "ja": "MKACTIVITY /行為/テスト-23 HTTP / 1.1ホスト：repo.webdav.orgのContent-Length：0"
    },
    {
      "indent": 3,
      "text": ">>RESPONSE",
      "ja": ">> RESPONSE"
    },
    {
      "indent": 5,
      "text": "HTTP/1.1 201 Created Cache-Control: no-cache",
      "ja": "HTTP / 1.1 201作成されたのCache-Control：キャッシュなし"
    },
    {
      "indent": 3,
      "text": "In this example, a new activity is created at http://repo.webdav.org/act/test-23.",
      "ja": "この例では、新しい活動がhttp://repo.webdav.org/act/test-23で作成されます。"
    },
    {
      "indent": 0,
      "text": "13.6 DAV:latest-activity-version Report",
      "section_title": true,
      "ja": "13.6 DAV：最新の活動バージョンのレポート"
    },
    {
      "indent": 3,
      "text": "The DAV:latest-activity-version report can be applied to a version history to identify the latest version that is selected from that version history by a given activity.",
      "ja": "DAV：最新の活動バージョンのレポートでは、特定の活動によってそのバージョン履歴から選択された最新バージョンを識別するために、バージョン履歴に適用することができます。"
    },
    {
      "indent": 3,
      "text": "Marshalling:",
      "ja": "マーシャリング："
    },
    {
      "indent": 6,
      "text": "The request body MUST be a DAV:latest-activity-version XML element.",
      "ja": "最新の活動バージョンのXML要素：リクエストボディは、DAVでなければなりません。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT latest-activity-version (href)>",
      "ja": "<！ELEMENT最新活動バージョン（HREF）>"
    },
    {
      "indent": 6,
      "text": "The response body for a successful request MUST be a DAV:latest-activity-version-report XML element.",
      "ja": "最新の活動-バージョンレポートのXML要素：成功したリクエストのレスポンスボディは、DAVでなければなりません。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT latest-activity-version-report (href)>",
      "ja": "<！ELEMENT最新活動バージョンレポート（HREF）>"
    },
    {
      "indent": 6,
      "text": "The DAV:href of the response body MUST identify the version of the given version history that is a member of the DAV:activity-version-set of the given activity and has no descendant that is a member of the DAV:activity-version-set of that activity.",
      "ja": "DAV：応答体のhrefは、DAVのメンバである指定されたバージョン履歴のバージョンを識別しなければならない：指定されたアクティビティの活動バージョンセットおよびDAVのメンバーでない子孫がありません：活動バージョン - をその活動のセット。"
    },
    {
      "indent": 3,
      "text": "Preconditions:",
      "ja": "前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:must-be-activity): The DAV:href in the request body MUST identify an activity.",
      "ja": "（DAV：-でなければならない活動）：DAV：hrefのリクエストボディには、アクティビティを識別しなければなりません。"
    },
    {
      "indent": 0,
      "text": "13.7 Additional OPTIONS Semantics",
      "section_title": true,
      "ja": "13.7追加オプションのセマンティクス"
    },
    {
      "indent": 3,
      "text": "If the server supports the activity feature, it MUST include \"activity\" as a field in the DAV response header from an OPTIONS request on any resource that supports any versioning properties, reports, or methods.",
      "ja": "サーバーは、活動機能をサポートしている場合、それはどのバージョン管理のプロパティ、レポート、またはメソッドをサポートしているすべてのリソース上のOPTIONS要求からのDAV応答ヘッダ内のフィールドとして「活性」を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "A DAV:activity-collection-set element MAY be included in the request body to identify collections that may contain activity resources.",
      "ja": "DAV：アクティビティ・コレクション - セット要素は、活動のリソースが含まれていてもよいコレクションを識別するために、リクエストボディに含まれるかもしれません。"
    },
    {
      "indent": 3,
      "text": "Additional Marshalling:",
      "ja": "追加のマーシャリング："
    },
    {
      "indent": 6,
      "text": "If an XML request body is included, it MUST be a DAV:options XML element.",
      "ja": "オプションのXML要素：XMLリクエストボディが含まれている場合は、DAVでなければなりません。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT options ANY> ANY value: A sequence of elements with at most one DAV:activity-collection-set element.",
      "ja": "<！ELEMENTオプションANY> ANY値：最大1つのDAVと要素のシーケンス：アクティビティ・コレクション - セット要素。"
    },
    {
      "indent": 6,
      "text": "If an XML response body for a successful request is included, it MUST be a DAV:options-response XML element.",
      "ja": "成功した要求のためのXMLレスポンスボディが含まれている場合は、DAVでなければならない：オプション応答XML要素。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT options-response ANY> ANY value: A sequence of elements with at most one DAV:activity-collection-set element.",
      "ja": "<！ELEMENTオプション-応答ANY> ANY値：最大1つのDAVと要素のシーケンス：アクティビティ・コレクション - セット要素。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT activity-collection-set (href*)>",
      "ja": "<！ELEMENT活動-コレクションセット（HREFの*）>"
    },
    {
      "indent": 6,
      "text": "If DAV:activity-collection-set is included in the request body, the response body for a successful request MUST contain a DAV:activity-collection-set element identifying collections that may contain activities. An identified collection MAY be the root collection of a tree of collections, all of which may contain activities. Since different servers can control different parts of the URL namespace, different resources on the same host MAY have different DAV:activity-collection-set values. The identified collections MAY be located on different hosts from the resource.",
      "ja": "DAV場合：活動が含まれていてもよいコレクションを特定する活動-コレクション-set要素：アクティビティ・コレクション・セットがリクエストボディに含まれ、成功した要求に対するレスポンスボディは、DAVを含まなければなりません。識別のコレクションは活動が含まれている可能性のあるすべてのそれらのコレクションのツリーのルートの集合であってもよいです。異なるサーバがURL名前空間の異なる部分を制御することができるので、同じホスト上の異なるリソースが異なるDAVを持っているかもしれません：アクティビティ・コレクション - 設定値。識別のコレクションは、リソースとは別のホスト上に配置することができます。"
    },
    {
      "indent": 0,
      "text": "13.8 Additional DELETE Semantics",
      "section_title": true,
      "ja": "13.8追加DELETEセマンティクス"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:delete-activity-reference): If an activity is deleted, any reference to that activity in a DAV:activity-set, DAV:subactivity-set, or DAV:current-activity-set MUST be removed.",
      "ja": "（DAV：削除活性基準）：DAVにおいてその活性にアクティビティが削除された場合、任意の参照：活動セット、DAV：subactivityセット、またはDAV：現在活性セットを除去しなければなりません。"
    },
    {
      "indent": 0,
      "text": "13.9 Additional MOVE Semantics",
      "section_title": true,
      "ja": "13.9追加のMOVEセマンティクス"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:update-checked-out-reference): If a checked-out resource is moved, any reference to that resource in a DAV:activity-checkout-set property MUST be updated to refer to the new location of that resource.",
      "ja": "チェックアウトされたリソースが移動された場合、DAVにそのリソースへの参照：（DAV：更新チェックアウト参照）活性チェックアウト設定プロパティは、そのリソースの新しい場所を指すように更新されなければなりません。"
    },
    {
      "indent": 6,
      "text": "(DAV:update-activity-reference): If the request-URL identifies an activity, any reference to that activity in a DAV:activity-set, DAV:subactivity-set, or DAV:current-activity-set MUST be updated to refer to the new location of that activity.",
      "ja": "（DAV：更新アクティビティ参照）：アクティビティセット、DAV：subactivityセット、またはDAV：現在活性セットをに更新されなければならない要求URLは、アクティビティ、DAVでそのアクティビティへの参照を識別する場合その活動の新しい場所を参照してください。"
    },
    {
      "indent": 6,
      "text": "(DAV:update-workspace-reference): If the request-URL identifies a workspace, any reference to that workspace in a DAV:current-workspace-set property MUST be updated to refer to the new location of that workspace.",
      "ja": "要求URLがワークスペースを識別する場合、DAVにそのワークスペースへの参照：（DAV：更新作業領域参照）電流のワークスペース設定プロパティは、そのワークスペースの新しい場所を指すように更新されなければなりません。"
    },
    {
      "indent": 0,
      "text": "13.10 Additional CHECKOUT Semantics",
      "section_title": true,
      "ja": "13.10追加のチェックアウトのセマンティクス"
    },
    {
      "indent": 3,
      "text": "A CHECKOUT request MAY specify the DAV:activity-set for the checked-out resource.",
      "ja": "チェックアウトリソースのアクティビティセット：チェックアウト要求は、DAVを指定するかもしれません。"
    },
    {
      "indent": 3,
      "text": "Additional Marshalling:",
      "ja": "追加のマーシャリング："
    },
    {
      "indent": 6,
      "text": "<!ELEMENT checkout ANY> ANY value: A sequence of elements with at most one DAV:activity-set and at most one DAV:unreserved.",
      "ja": "<！ELEMENTチェックアウトANY> ANY値：アクティビティ・セットおよび最大1つのDAV：予約されていない、せいぜい1つのDAVと要素のシーケンス。"
    },
    {
      "indent": 6,
      "text": "<!ELEMENT activity-set (href+ | new)> <!ELEMENT new EMPTY> <!ELEMENT unreserved EMPTY>",
      "ja": "<ELEMENTアクティビティ・セット（HREF + |新）！> <！ELEMENT新しいEMPTY> <！ELEMENT予約されていないEMPTY>"
    },
    {
      "indent": 3,
      "text": "Additional Preconditions:",
      "ja": "追加の前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:one-checkout-per-activity-per-history): If there is a request activity set, unless DAV:unreserved is specified, another checkout from a version of that version history MUST NOT select an activity in that activity set.",
      "ja": "要求アクティビティのセットがある場合はDAVない限り、：：（DAV：1  - チェックアウトあたりの活動あたりの歴史）予約されていないが指定され、そのバージョン履歴のバージョンから別のバージョンのチェックアウトは、そのアクティビティのセットでの活動を選択してはなりません。"
    },
    {
      "indent": 6,
      "text": "(DAV:linear-activity): If there is a request activity set, unless DAV:unreserved is specified, the selected version MUST be a descendant of all other versions of that version history that select that activity.",
      "ja": "要求アクティビティセットがある場合DAVない限り、：（DAV：リニア活性）予約されていないが指定され、選択されたバージョンは、そのアクティビティを選択し、そのバージョン履歴の他のすべてのバージョンの子孫でなければなりません。"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:initialize-activity-set): The DAV:activity-set of the checked-out resource is set as follows:",
      "ja": "（DAV：初期化活性セット）：DAV：次のようにチェックアウトされたリソースのアクティビティセットが設定されています。"
    },
    {
      "indent": 6,
      "text": "- If DAV:new is specified as the DAV:activity-set in the request body, then a new activity created by the server is used. - Otherwise, if activities are specified in the request body, then those activities are used. - Otherwise, if the version-controlled resource is a member of a workspace and the DAV:current-activity-set of the workspace is set, then those activities are used. - Otherwise, the DAV:activity-set of the DAV:checked-out version is used.",
      "ja": " -  DAV場合：新しいDAVとして指定されている：リクエストボディに活動し、サーバーが作成した、新しい活動が使用されています。 - 活動がリクエストボディに指定されている場合はそうでない場合は、それらの活動が使用されています。 - バージョン管理されたリソースは、ワークスペースとDAVのメンバーである場合にそうでない場合、：ワークスペースの現在の活性セットが設定され、その後、それらの活動が使用されます。 - それ以外の場合は、DAV：DAVのアクティビティセット：チェックアウトしたバージョンが使用されます。"
    },
    {
      "indent": 6,
      "text": "(DAV:initialize-unreserved): If DAV:unreserved was specified in the request body, then the DAV:unreserved property of the checked-out resource MUST be \"true\".",
      "ja": "DAV場合：予約されていないがリクエストボディに指定されました、そしてDAV：（DAV：初期化-予約されていない）にチェックアウトされたリソースの予約されていないプロパティが「真」でなければなりません。"
    },
    {
      "indent": 0,
      "text": "13.10.1 Example - CHECKOUT with an activity",
      "section_title": true,
      "ja": "13.10.1例 - 活性を有するCHECKOUT"
    },
    {
      "indent": 3,
      "text": ">>REQUEST",
      "ja": ">> REQUEST"
    },
    {
      "indent": 5,
      "text": "CHECKOUT /ws/public/foo.html HTTP/1.1 Host: www.webdav.org Content-Type: text/xml; charset=\"utf-8\" Content-Length: xxxx",
      "ja": "CHECKOUT /ws/public/foo.html HTTP / 1.1ホスト：www.webdav.orgのContent-Type：text / xmlで、 charset = \"UTF-8\" をコンテンツの長さ：XXXX"
    },
    {
      "indent": 5,
      "text": "<?xml version=\"1.0\" encoding=\"utf-8\" ?> <D:checkout xmlns:D=\"DAV:\"> <D:activity-set> <D:href>http://repo.webdav.org/act/fix-bug-23</D:href> </D:activity-set> </D:checkout>",
      "ja": "<？xml version = \"1.0\" エンコード= \"UTF-8\"？> <D：チェックアウトのxmlns：D = \"DAV：\"> <D：活性セット> <D：HREF>のhttp：//repo.webdav。 ORG /行為/修正 - バグ-23 </ D：HREF> </ D：活動-設定> </ D：チェックアウト>"
    },
    {
      "indent": 3,
      "text": ">>RESPONSE",
      "ja": ">> RESPONSE"
    },
    {
      "indent": 5,
      "text": "HTTP/1.1 200 OK Cache-Control: no-cache",
      "ja": "HTTP / 1.1 200 OKのCache-Control：キャッシュなし"
    },
    {
      "indent": 3,
      "text": "In this example, the CHECKOUT is being performed in the http://repo.webdav.org/act/fix-bug-23 activity.",
      "ja": "この例では、CHECKOUTはhttp://repo.webdav.org/act/fix-bug-23活性に行われています。"
    },
    {
      "indent": 0,
      "text": "13.11 Additional CHECKIN Semantics",
      "section_title": true,
      "ja": "13.11追加CHECKINセマンティクス"
    },
    {
      "indent": 3,
      "text": "Additional Preconditions:",
      "ja": "追加の前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:linear-activity): Any version which is in the version history of the checked-out resource and whose DAV:activity-set identifies an activity from the DAV:activity-set of the checked-out resource MUST be an ancestor of the checked-out resource.",
      "ja": "（DAV：リニア活性）およびDAVチェックアウトリソースのバージョン履歴にある任意のバージョン：活動セットはDAVからアクティビティを識別する：チェックアウトリソースのアクティビティセットは、先祖でなければなりませんチェックアウトリソース。"
    },
    {
      "indent": 6,
      "text": "(DAV:atomic-activity-checkin): If the request-URL identifies an activity, the server MAY fail the request if any of the checked-out resources in the DAV:activity-checkout-set of either that activity or any subactivity of that activity cannot be checked in.",
      "ja": "（DAV：アトミック・アクティビティ-チェックイン）：そのアクティビティまたは任意のsubactivityいずれかの活動チェックアウトセット：リクエストURLが活動を識別する場合DAVでチェックアウトされたリソースのいずれかの場合、サーバーはその要求を失敗する可能性がありますそのアクティビティがチェックインすることはできません。"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:initialize-activity-set): The DAV:activity-set of the new version MUST have been initialized to be the same as the DAV:activity-set of the checked-out resource.",
      "ja": "（DAV：初期化 - 活性セット）：DAV：チェックアウトリソースのアクティビティセット：新バージョンのアクティビティセットは、DAVと同じになるように初期化されている必要があります。"
    },
    {
      "indent": 6,
      "text": "(DAV:activity-checkin): If the request-URL identified an activity, the server MUST have successfully applied the CHECKIN request to each checked-out resource in the DAV:activity-checkout-set of both that activity and any subactivity of that activity.",
      "ja": "（DAV：活動-チェックイン）：その活性の両方の活動・チェックアウト・セットおよびその任意のsubactivity：リクエストURLがアクティビティを特定した場合、サーバはDAVの各チェックアウトリソースにCHECKINリクエストを成功裏に適用されている必要がありアクティビティ。"
    },
    {
      "indent": 0,
      "text": "13.12 Additional MERGE Semantics",
      "section_title": true,
      "ja": "13.12追加MERGEセマンティクス"
    },
    {
      "indent": 3,
      "text": "If the DAV:source element of the request body identifies an activity, then for each version history containing a version selected by that activity, the latest version selected by that activity is a merge source. Note that the versions selected by an activity are the versions in its DAV:activity-version-set unioned with the versions selected by the activities in its DAV:subactivity-set.",
      "ja": "DAV場合：リクエストボディのソース要素が活動を特定し、その活性により選択されたバージョンを含む各バージョン履歴のために、その活性によって選択最新バージョンはマージ源です。 subactivityセット：そのDAVで活動によって選択されたバージョンでUNION句活動バージョンセット：活性によって選択バージョンは、そのDAVでバージョンであることに留意されたいです。"
    },
    {
      "indent": 3,
      "text": "Additional Marshalling:",
      "ja": "追加のマーシャリング："
    },
    {
      "indent": 6,
      "text": "<!ELEMENT checkin-activity EMPTY>",
      "ja": "<！ELEMENTのチェックインアクティビティEMPTY>"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:checkin-activity): If DAV:checkin-activity is specified in the request body, and if the DAV:source element in the request body identifies an activity, a CHECKIN request MUST have been successfully applied to that activity before the merge sources were determined.",
      "ja": "（DAV：チェックインアクティビティ）：DAV場合：チェックインアクティビティは、要求本体に指定され、そしてDAV場合：リクエストボディ内のソース要素が活動を識別する、CHECKINリクエストが正常にマージする前に、その活動に適用されている必要がありますソースが決定しました。"
    },
    {
      "indent": 0,
      "text": "14 Version-Controlled-Collection Feature",
      "ja": "14バージョン管理・収集機能"
    },
    {
      "indent": 3,
      "text": "As with any versionable resource, when a collection is put under version control, a version history resource is created to contain versions for that version-controlled collection. In order to preserve standard versioning semantics (a version of a collection should not be modifiable), a collection version only records information about the version-controlled bindings of that collection.",
      "ja": "コレクションは、バージョン管理下に置かれている任意のバージョン管理リソースと同様に、バージョン履歴リソースは、そのバージョン管理コレクションのバージョンを保存するために作成されます。 （コレクションのバージョンは修正すべきではない）、そのコレクションのバージョン管理バインディングに関する、コレクション版レコードのみの情報を、標準のバージョン管理のセマンティクスを維持するために。"
    },
    {
      "indent": 3,
      "text": "In order to cleanly separate a modification to the namespace from a modification to content or dead properties, a version of a collection has no members, but instead records in its DAV:version-controlled-binding-set property the binding name and version history resource of each version-controlled internal member of that collection. If, instead, a collection version contained bindings to other versions, creating a new version of a resource would require creating a new version of all the collection versions that contain that resource, which would cause activities to become entangled. For example, suppose a \"feature-12\" activity created a new version of /x/y/a.html. If a collection version contained bindings to versions of its members, a new version of /x/y would have to be created to contain the new version of /x/y/a.html, and a new version of /x would have to be created to contain the new version of /x/y. Now suppose a \"bugfix-47\" activity created a new version of /x/z/b.html. Again, a new version of /x/z and a new version of /x would have to be created to contain the new version of /x/y/b.html. But now it is impossible to merge just \"bugfix-47\" into another workspace without \"feature-12\", because the version of /x that contains the desired version of /x/z/b.html also contains version of /x/y/a.html created for \"feature-12\". If, instead, a collection version just records the binding name and version history resource of each version-controlled internal member, changing the version selected by a member of that collection would not require a new version of the collection. The new version is still in the same version history so no new collection version is required, and \"feature-12\" and \"bugfix-47\" would not become entangled.",
      "ja": "バージョン管理された結合セットのプロパティバインディングの名前とバージョン履歴リソースを：きれいコレクションのバージョンは、メンバーがないが、代わりにそのDAVのレコード、コンテンツや死者の特性への変更から名前空間への変更を分離するためにそのコレクションの各バージョン管理された内部メンバーの。場合は、代わりに、コレクションのバージョンは、活動がもつれになることを引き起こすそのリソースを含むすべてのコレクションのバージョンの新しいバージョンを作成する必要となるリソースの新しいバージョンを作成し、他のバージョンへのバインディングを含んでいました。例えば、「機能-12」の活動が/x/y/a.htmlの新しいバージョンを作成したとします。コレクションのバージョンは、そのメンバーのバージョンにバインディングが含まれていた場合は、/ X / Yの新バージョンは、/x/y/a.htmlの新しいバージョンを保存するために作成しなければならず、及び/ xの新しいバージョンがなければならないでしょう/ X / Yの新しいバージョンを保存するために作成すること。今、「バグ修正-47」の活動が/x/z/b.htmlの新しいバージョンを作成したとします。ここでも、/ X / Zと/ xの新しいバージョンの新しいバージョンが/x/y/b.htmlの新しいバージョンを保存するために作成しなければならないであろう。しかし、今、それは/x/z/b.htmlの目的のバージョンが含まれています/ xのバージョンものバージョンが含まれているため、「機能-12」せずに、別のワークスペースにちょうど「バグ修正-47」をマージすることは不可能である/ X / \"機能-12\" 用に作成されたY / a.html。代わりに、コレクションのバージョンがちょうど各バージョン管理内部メンバーのバインディング名とバージョン履歴リソースを記録した場合は、そのコレクションのメンバーによって選択されたバージョンを変更すると、コレクションの新しいバージョンを必要としません。新バージョンでは、もつれになっていないのと同じように全く新しいコレクションのバージョンが必要とされないバージョン履歴、および「機能-12」と「バグ修正-47」のままです。"
    },
    {
      "indent": 3,
      "text": "In the following example, there are three version histories, named VH14, VH19, and VH24, where VH14 contains versions of a collection. The version-controlled collection /x has version V2 of version history VH14 as its DAV:checked-in version. Since V2 has recorded two version controlled bindings, one with binding name \"a\" to version history VH19, and the other with binding name \"b\" to version history VH24, /x MUST have two version-controlled bindings, one named \"a\" to a version-controlled resource for history VH19, and the other named \"b\" to a version-controlled resource for history VH24. The version- controlled resource /x/a currently has V4 of VH19 as its DAV:checked-in version, while /x/b has V8 of VH24 as its DAV:checked-in version.",
      "ja": "次の例では、VH14、VH19、およびVH14は、コレクションのバージョンが含まれVH24、という名前の3人のバージョン履歴は、あります。チェックインされたバージョン：バージョン管理されたコレクション/ xはそのDAVとしてバージョン履歴VH14のバージョンV2を持っています。 V2は、2つのバージョン制御バインディング、バージョン履歴VH24に名前「B」の結合と結合した名前の一つの「」バージョンに履歴VH19、およびその他を記録しているので、/ Xは、二つのバージョン管理バインディング、「A」という名前のいずれかが必要履歴VH19、および履歴VH24のためのバージョン管理されたリソースへの他の名前の「B」のバージョン管理されたリソースへ。版 - 制御されたリソースは、/ X /現在、DAVとしてVH19のV4を有している：チェックインバージョン、/ X / BがDAVとしてVH24のV8を有している：チェックインバージョン。"
    },
    {
      "indent": 3,
      "text": "                                                       VH19\n                                                    +---------+\n                                                    | +---+   |\n                                                    | |   |V4 |\n                                                    | +---+   |\n                                                    |   |     |\n                                                    |   |     |\n                                                    | +---+   |\n                                                    | |   |V5 |\n                                         VH14       | +---+   |\n                                     +---------+    |   |     |\n                                     | +---+   |    |   |     |\n            a  +---+                 | |   |V1 |    | +---+   |\n          ---->|   |checked-in=V4    | +---+   | a  | |   |V6 |\n         /     +---+                 |   |   ------>| +---+   |\n        /                            |   |  /  |    +---------+\n   +---+                             | +---+   |\n/x |   |checked-in=V2                | |   |V2 |\n   +---+                             | +---+   |       VH24\n        \\                            |   |  \\  | b  +---------+\n         \\  b  +---+                 |   |   ------>| +---+   |\n          ---->|   |checked-in=V8    | +---+   |    | |   |V7 |\n               +---+                 | |   |V3 |    | +---+   |\n                                     | +---+   |    |   |     |\n                                     +---------+    |   |     |\n                                                    | +---+   |\n                                                    | |   |V8 |\n                                                    | +---+   |\n                                                    |   |     |\n                                                    |   |     |\n                                                    | +---+   |\n                                                    | |   |V9 |\n                                                    | +---+   |\n                                                    +---------+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "For any request (e.g., DELETE, MOVE, COPY) that modifies a version-controlled binding of a checked-in version-controlled collection, the request MUST fail unless the version-controlled collection has a DAV:auto-version property that will automatically check out the version-controlled collection when it is modified.",
      "ja": "バージョン管理、チェックインしたバージョン管理コレクションの結合を変更するすべての要求（例えば、DELETE、MOVE、COPY）についてはバージョン管理されたコレクションは、DAVを持っていない限り、要求は失敗しなければなりません：自動バージョンプロパティそれは自動的にそれが修正されたときにバージョン管理のコレクションをチェックしてください。"
    },
    {
      "indent": 3,
      "text": "Although a collection version only records the version-controlled bindings of a collection, a version-controlled collection MAY contain both version-controlled and non-version-controlled bindings. Non- version-controlled bindings are not under version control, and therefore can be added or deleted without checking out the version-controlled collection.",
      "ja": "コレクションのバージョンは専用のコレクションのバージョン管理されたバインディングを記録しますが、バージョン管理されたコレクションは、バージョン管理および非バージョン管理のバインディングの両方を含むことができます。非バージョン管理のバインディングは、バージョン管理下にないので、バージョン管理コレクションをチェックアウトすることなく、追加または削除することができます。"
    },
    {
      "indent": 3,
      "text": "Note that a collection version captures only a defined subset of the state of a collection. In particular, a version of a collection captures its dead properties and its bindings to version-controlled resources, but not its live properties or bindings to non-version-controlled resources.",
      "ja": "コレクションのバージョンがコレクションの状態の唯一の定義されたサブセットを捕獲することに注意してください。具体的には、コレクションのバージョンは、非バージョン管理リソースにその死者の特性とバージョン管理リソースへのバインディングではなく、そのライブのプロパティまたはバインディングをキャプチャします。"
    },
    {
      "indent": 3,
      "text": "When a server supports the working-resource feature, a client can check out a collection version to create a working collection. Unlike a version-controlled collection, which contains bindings to version-controlled resources and non-version-controlled resources, a working collection contains bindings to version history resources and non-version-controlled resources. In particular, a working collection is initialized to contain bindings to the version history resources specified by the DAV:version-controlled-binding-set of the checked out collection version. The members of a working collection can then be deleted or moved to another working collection. Non-version-controlled resources can be added to a working collection with methods such as PUT, COPY, and MKCOL. When a working collection is checked in, a VERSION-CONTROL request is automatically applied to every non-version-controlled member of the working collection, and each non-version-controlled member is replaced by its newly created version history. The DAV:version-controlled-binding-set of the new version resulting from checking in a working collection contains the binding name and version history URL for each member of the working collection.",
      "ja": "サーバーが作業リソースの機能をサポートしている場合、クライアントは作業コレクションを作成するには、コレクションのバージョンをチェックアウトすることができます。バージョン管理されたリソースと非バージョン管理リソースへのバインディングが含まれているバージョン管理のコレクションとは異なり、作業コレクションは、バージョン履歴リソースと非バージョン管理リソースへのバインディングが含まれています。チェックアウトしたコレクション版のバージョン管理-セットバインディング：特に、作業コレクションは、DAVで指定されたバージョン履歴リソースへのバインディングを含むように初期化されます。作業コレクションのメンバーはその後、削除したり、別の作業コレクションに移動することができます。非バージョン管理されたリソースは、PUT、COPY、およびMKCOLような方法で作業をコレクションに追加することができます。作業コレクションがチェックインされる場合は、VERSION-CONTROLリクエストは自動的に作業コレクションのすべての非バージョン管理メンバーに適用され、各非バージョン管理メンバーは、その新たに作成されたバージョン履歴に置き換えられます。 DAV：作業コレクションのチェックインから生じた新しいバージョンのバージョン管理-セットバインディングは、作業コレクションの各メンバーのバインディング名とバージョン履歴URLが含まれています。"
    },
    {
      "indent": 0,
      "text": "14.1 Version-Controlled Collection Properties",
      "section_title": true,
      "ja": "14.1バージョン管理されたコレクションのプロパティ"
    },
    {
      "indent": 3,
      "text": "A version-controlled collection has all the properties of a collection and of a version-controlled resource. In addition, the version-controlled-collection feature introduces the following REQUIRED property for a version-controlled collection.",
      "ja": "バージョン管理されたコレクションは、コレクションのバージョン管理されたリソースのすべてのプロパティを持っています。また、バージョン管理・収集機能は、バージョン管理されたコレクションのため、次の必要なプロパティを紹介します。"
    },
    {
      "indent": 0,
      "text": "14.1.1 DAV:eclipsed-set (computed)",
      "section_title": true,
      "ja": "14.1.1 DAV：食セット（計算）"
    },
    {
      "indent": 3,
      "text": "This property identifies the non-version-controlled internal members of the collection that currently are eclipsing a version-controlled internal member of the collection.",
      "ja": "このプロパティは、現在のコレクションのバージョン管理内部メンバーを食されているコレクションの非バージョン管理内部メンバーを識別します。"
    },
    {
      "indent": 3,
      "text": "!ELEMENT eclipsed-set (binding-name*)> <!ELEMENT binding-name (#PCDATA)> PCDATA value: URL segment",
      "ja": "！ELEMENTけらセット（バインディング名*）> <ELEMENTバインディング名（#PCDATA）> PCDATA値：URLセグメント"
    },
    {
      "indent": 3,
      "text": "An UPDATE or MERGE request can give a version-controlled collection a version-controlled internal member that has the same name as an existing non-version-controlled internal member. In this case, the non-version-controlled internal member takes precedence and is said to \"eclipse\" the new versioned-controlled internal member. If the non-version-controlled internal member is removed (e.g., by a DELETE or MOVE), the version-controlled internal member is exposed.",
      "ja": "UPDATEまたはMERGE要求は、バージョン管理コレクションを既存の非バージョン管理内部部材と同じ名前のバージョン管理内部部材を与えることができます。この場合、非バージョン管理された内部メンバーが優先され、新しいバージョン管理、制御された内部メンバーを「日食」と言われています。非バージョン管理内部部材（例えば、DELETEまたはMOVEによって）除去されている場合、バージョン管理内部部材が露出しています。"
    },
    {
      "indent": 0,
      "text": "14.2 Collection Version Properties",
      "section_title": true,
      "ja": "14.2コレクションのバージョンのプロパティ"
    },
    {
      "indent": 3,
      "text": "A collection version has all the properties of a version. In addition, the version-controlled-collection feature introduces the following REQUIRED property for a collection version.",
      "ja": "コレクションのバージョンは、バージョンのすべてのプロパティを持っています。また、バージョン管理・収集機能は、コレクションのバージョンについて、次の必要なプロパティを紹介します。"
    },
    {
      "indent": 0,
      "text": "14.2.1 DAV:version-controlled-binding-set (protected)",
      "section_title": true,
      "ja": "14.2.1 DAV：バージョン管理結合セット（保護）"
    },
    {
      "indent": 3,
      "text": "This property captures the name and version-history of each version-controlled internal member of a collection.",
      "ja": "このプロパティは、コレクションの各バージョン管理された内部メンバーの名前とバージョン履歴をキャプチャします。"
    },
    {
      "indent": 3,
      "text": "<!ELEMENT version-controlled-binding-set (version-controlled-binding*)> <!ELEMENT version-controlled-binding (binding-name, version-history)> <!ELEMENT binding-name (#PCDATA)> PCDATA value: URL segment <!ELEMENT version-history (href)>",
      "ja": "<！ELEMENTのバージョン管理された結合セット（バージョン管理された結合*）> <！ELEMENTのバージョン管理された結合（バインディング名、バージョン履歴）> <！ELEMENTバインディング名（#PCDATA）> PCDATA値：URLセグメント<！ELEMENTバージョン履歴（HREF）>"
    },
    {
      "indent": 0,
      "text": "14.3 Additional OPTIONS Semantics",
      "section_title": true,
      "ja": "14.3追加オプションのセマンティクス"
    },
    {
      "indent": 3,
      "text": "If the server supports the version-controlled-collection feature, it MUST include \"version-controlled-collection\" as a field in the DAV response header from an OPTIONS request on any resource that supports any versioning properties, reports, or methods.",
      "ja": "サーバはバージョン管理・収集機能をサポートしている場合、それはどのバージョン管理のプロパティ、レポート、またはメソッドをサポートしているすべてのリソース上のOPTIONS要求からのDAV応答ヘッダ内のフィールドとして「バージョン管理 - コレクション」を含まなければなりません。"
    },
    {
      "indent": 0,
      "text": "14.4 Additional DELETE Semantics",
      "section_title": true,
      "ja": "14.4追加DELETEセマンティクス"
    },
    {
      "indent": 3,
      "text": "Additional Preconditions:",
      "ja": "追加の前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:cannot-modify-checked-in-parent): If the request-URL identifies a version-controlled resource, the DELETE MUST fail when the collection containing the version-controlled resource is a checked-in version-controlled collection, unless DAV:auto-version semantics will automatically check out the version-controlled collection.",
      "ja": "（DAV：できない・修正・確認・イン・親）：リクエストURLがバージョン管理されたリソースを識別する場合、DELETEは失敗しなければなりません、バージョン管理されたリソースを含むコレクションがチェックインされたバージョン管理、コレクション、しない限り、あるときDAV：自動バージョンセマンティクスは自動的にバージョン管理されたコレクションをチェックアウトします。"
    },
    {
      "indent": 0,
      "text": "14.5 Additional MKCOL Semantics",
      "section_title": true,
      "ja": "14.5追加MKCOLセマンティクス"
    },
    {
      "indent": 3,
      "text": "Additional Preconditions:",
      "ja": "追加の前提条件："
    },
    {
      "indent": 6,
      "text": "If the request creates a new resource that is automatically placed under version control, all preconditions for VERSION-CONTROL apply to the request.",
      "ja": "要求は自動的にバージョン管理下に置かれる新しいリソースを作成する場合、VERSION-CONTROLのためのすべての前提条件が要求に適用されます。"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "If the new collection is automatically put under version control, all postconditions for VERSION-CONTROL apply to the request.",
      "ja": "新しいコレクションは、自動的にバージョン管理下に置かれている場合は、VERSION-CONTROLのためのすべての事後条件は、リクエストに適用されます。"
    },
    {
      "indent": 0,
      "text": "14.6 Additional COPY Semantics",
      "section_title": true,
      "ja": "14.6追加のコピー・セマンティクス"
    },
    {
      "indent": 3,
      "text": "Additional Preconditions:",
      "ja": "追加の前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:cannot-copy-collection-version): If the source of the request is a collection version, the request MUST fail.",
      "ja": "（DAV：コピー・コレクション・バージョンはできません）：リクエストの送信元が回収バージョンである場合、要求は失敗しなければなりません。"
    },
    {
      "indent": 0,
      "text": "14.7 Additional MOVE Semantics",
      "section_title": true,
      "ja": "14.7追加のMOVEセマンティクス"
    },
    {
      "indent": 3,
      "text": "Additional Preconditions:",
      "ja": "追加の前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:cannot-modify-checked-in-parent): If the source of the request is a version-controlled resource, the request MUST fail when the collection containing the source is a checked-in version-controlled collection, unless DAV:auto-version semantics will automatically check out that version-controlled collection.",
      "ja": "（DAV：-変更しないで、チェックインした親ができます）：要求のソースは、バージョン管理されたリソースである場合は、ソースを含む集合DAVない限り、チェックインされたバージョン管理のコレクションであるとき、要求は失敗しなければなりません：自動バージョンのセマンティクスは自動的にバージョン管理されたコレクションをチェックアウトします。"
    },
    {
      "indent": 6,
      "text": "(DAV:cannot-modify-destination-checked-in-parent): If the source of the request is a version-controlled resource, the request MUST fail when the collection containing the destination is a checked-in version-controlled collection, unless DAV:auto-version semantics will automatically check out that version-controlled collection.",
      "ja": "（DAV：-変更しないで先-にチェックインすることができ、親）：要求のソースは、バージョン管理されたリソースである場合は、宛先を含むコレクションがない限り、チェックインされたバージョン管理のコレクションであるとき、要求は失敗しなければなりませんDAV：自動バージョンセマンティクスが自動的にバージョン管理のコレクションをチェックアウトします。"
    },
    {
      "indent": 0,
      "text": "14.8 Additional VERSION-CONTROL Semantics",
      "section_title": true,
      "ja": "14.8追加VERSION-CONTROLのセマンティクス"
    },
    {
      "indent": 3,
      "text": "Additional Preconditions:",
      "ja": "追加の前提条件："
    },
    {
      "indent": 6,
      "text": "(DAV:cannot-modify-checked-in-parent): If the parent of the request-URL is a checked-in version-controlled collection, the request MUST fail unless DAV:auto-version semantics will automatically check out that version-controlled collection.",
      "ja": "（DAV：-変更しないで、チェックインした親ができます）：リクエストURLの親がチェックインされている場合は、バージョン管理、コレクション、要求はDAVない限り失敗しなければなりません：自動バージョンセマンティクスがバージョン - ことを自動的にチェックアウトします制御コレクション。"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:new-version-controlled-collection): If the request body identified a collection version, the collection at the request-URL MUST contain a version-controlled internal member for each DAV:version-controlled-binding specified in the DAV:version-controlled-binding-set of the collection version, where the name and DAV:version-history of the internal member MUST be the DAV:binding-name and the DAV:version-history specified by the DAV:version-controlled-binding. If the internal member is a member of a workspace, and there is another member of the workspace for the same version history, those two members MUST identify the same version-controlled resource; otherwise, a VERSION-CONTROL request with a server selected version of the version history MUST have been applied to the URL for that internal member.",
      "ja": "（DAV：新バージョンコレクション制御）：リクエストボディは、コレクションのバージョンを識別した場合、要求URLで収集は各DAVのためのバージョン管理内部部材を含まなければなりません：バージョン管理結合DAVで指定されました： DAVにより指定されたバージョン履歴：バインディング名およびDAV：内部部材のバージョン履歴DAVでなければなりません：名前とDAVコレクションのバージョンのバージョン管理は、結合セットバージョン制御結合。内部部材は、ワークスペースのメンバーであり、同じバージョン履歴のワークスペースの別のメンバが存在する場合、これらの二つの部材は同一のバージョン管理されたリソースを識別しなければなりません。それ以外の場合は、バージョン履歴のサーバー選択されたバージョンとVERSION-CONTROLリクエストは、その内部のメンバーのURLに適用されている必要があります。"
    },
    {
      "indent": 0,
      "text": "14.9 Additional CHECKOUT Semantics",
      "section_title": true,
      "ja": "14.9追加のチェックアウトのセマンティクス"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:initialize-version-history-bindings): If the request has been applied to a collection version, the new working collection MUST be initialized to contain a binding to each of the history resources identified in the DAV:version-controlled-binding-set of that collection version.",
      "ja": "（DAV：初期化-バージョン履歴-バインディング）：バージョン管理された結合：要求は、コレクションのバージョンに適用されている場合は、新しい作業コレクションは、DAVで識別歴史資源のそれぞれに結合を含むように初期化されなければなりませんそのコレクションのバージョンの-set。"
    },
    {
      "indent": 0,
      "text": "14.10 Additional CHECKIN Semantics",
      "section_title": true,
      "ja": "14.10追加CHECKINセマンティクス"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:initialize-version-controlled-bindings): If the request-URL identified a version-controlled collection, then the DAV:version-controlled-binding-set of the new collection version MUST contain a DAV:version-controlled-binding that identifies the binding name and version history for each version-controlled binding of the version- controlled collection.",
      "ja": "（DAV：初期化 - バージョン管理されたバインディング）：リクエストURLはDAVそして、バージョン管理されたコレクションを識別した場合：新しいコレクションのバージョンのバージョン管理された結合セットは、DAVを含まなければなりません：バージョン管理された結合それは、それぞれのバージョン管理された版 - コントロールコレクションの結合のための結合名前とバージョン履歴を識別します。"
    },
    {
      "indent": 6,
      "text": "(DAV:version-control-working-collection-members): If the request-URL identified a working collection, a VERSION-CONTROL request MUST have been automatically applied to every non-version-controlled member of the working collection, and each non-version-controlled member MUST have been replaced by its newly created version history. If a working collection member was a non-version-controlled collection, every member of the non-version-controlled collection MUST have been placed under version control before the non-version-controlled collection was placed under version control. The DAV:version-controlled-binding-set of the new collection version MUST contain a DAV:version-controlled-binding that identifies the binding name and the version history URL for each member of the working collection.",
      "ja": "（DAV：バージョン管理ワーキング・コレクション・メンバー）：リクエストURLが機能してコレクションを識別した場合は、VERSION-CONTROLリクエストは、自動的に作業コレクションのすべての非バージョン管理メンバーに適用され、そして各非されている必要があります-version制御のメンバーは、その新たに作成されたバージョン履歴に置き換えされている必要があります。作業コレクションのメンバーは、非バージョン管理、コレクション、非バージョン管理されたコレクションのすべてのメンバーであった場合は非バージョン管理コレクションはバージョン管理下に置かれた前のバージョン管理下に置かれている必要があります。 DAV：バージョン管理さ-セットバインディング新しいコレクションのバージョンのDAV含まれている必要がありますバージョン管理された結合それが動作し、コレクションの各メンバーのバインディング名とバージョン履歴URLを特定します。"
    },
    {
      "indent": 0,
      "text": "14.11 Additional UPDATE and MERGE Semantics",
      "section_title": true,
      "ja": "14.11追加UPDATEとセマンティクスをMERGE"
    },
    {
      "indent": 3,
      "text": "Additional Postconditions:",
      "ja": "追加の事後条件："
    },
    {
      "indent": 6,
      "text": "(DAV:update-version-controlled-collection-members): If the request modified the DAV:checked-in version of a version-controlled collection, then the version-controlled members of that version-controlled collection MUST have been updated. In particular:",
      "ja": "（DAV：更新バージョン管理 - コレクション - メンバー）：要求がDAVを変更した場合：チェックインされたバージョン管理コレクションのバージョン、そのバージョン管理コレクションのバージョン管理のメンバーが更新されている必要があります。特に："
    },
    {
      "indent": 6,
      "text": "- A version-controlled internal member MUST have been deleted if its version history is not identified by the DAV:version-controlled-binding-set of the new DAV:checked-in version. - A version-controlled internal member for a given version history MUST have been renamed if its binding name differs from the DAV:binding-name for that version history in the DAV:version-controlled-binding-set of the new DAV:checked-in version. - A new version-controlled internal member MUST have been created when a version history is identified by the DAV:version-controlled-binding-set of the DAV:checked-in version, but there was no member of the version-controlled collection for that version history. If a new version-controlled member is in a workspace that already has a version-controlled resource for that version history, then the new version-controlled member MUST be just a binding (i.e., another name for) that existing version-controlled resource. Otherwise, the content and dead properties of the new version-controlled member MUST have been initialized to be those of the version specified for that version history by the request. If no version is specified for that version history by the request, the version selected is server defined.",
      "ja": "チェックインされたバージョン：新しいDAVのバージョン管理された結合セット： - そのバージョン履歴は、DAVで識別されていない場合、バージョン管理された内部メンバーが削除されている必要があります。チェックイン：新しいDAVのバージョン管理された結合セット：DAVでそのバージョン履歴のバインディング名を： - その結合名前がDAV異なる場合与えられたバージョン履歴のバージョン管理された内部メンバーの名前が変更されている必要がありますバージョンインチDAVのバージョン管理された結合セット：：バージョンでは、チェックしますが、のためのバージョン管理されたコレクションのないメンバーがありませんでした - バージョン履歴は、DAVで識別されたときに、新しいバージョン管理された内部メンバーが作成されていなければなりません。そのバージョン履歴。新しいバージョンの制御部材は、既にそのバージョン履歴のバージョン管理されたリソースを持っている作業領域にある場合は、新しいバージョンの制御部材は、既存のバージョン管理されたリソースことだけ結合（即ちため、別の名前）でなければなりません。そうでない場合は、新しいバージョン管理メンバーの内容とデッドプロパティは、要求することによって、そのバージョン履歴のために指定されたバージョンのものとなるように初期化されている必要があります。 noバージョンを要求することによって、そのバージョン履歴用に指定されていない場合は、選択したバージョンは、サーバーに定義されます。"
    },
    {
      "indent": 0,
      "text": "15 Internationalization Considerations",
      "ja": "15の国際化に関する注意事項"
    },
    {
      "indent": 3,
      "text": "This specification has been designed to be compliant with the IETF Policy on Character Sets and Languages [RFC2277]. Specifically, where human-readable strings exist in the protocol, either their charset is explicitly stated, or XML mechanisms are used to specify the charset used. Additionally, these human-readable strings all have the ability to express the natural language of the string.",
      "ja": "この仕様は、文字セットと言語[RFC2277]にIETFポリシーに準拠するように設計されています。具体的には、人間が読み取り可能な文字列は、プロトコル内に存在する場合、いずれかのそれらの文字セットを明示的に述べられ、またはXML機構が使用される文字セットを指定するために使用されます。さらに、これらの判読可能な文字列のすべての文字列の自然言語を発現する能力を持っています。"
    },
    {
      "indent": 3,
      "text": "Most of the human-readable strings in this protocol appear in properties, such as DAV:creator-displayname. As defined by RFC 2518, properties have their values marshaled as XML. XML has explicit provisions for character set tagging and encoding, and requires that XML processors read XML elements encoded, at minimum, using the UTF-8 [RFC2279] encoding of the ISO 10646 multilingual plane. The charset parameter of the Content-Type header, together with the XML \"encoding\" attribute, provide charset identification information for MIME and XML processors. Proper use of the charset header with XML is described in RFC 3023. XML also provides a language tagging capability for specifying the language of the contents of a particular XML element. XML uses either IANA registered language tags (see RFC 3066) or ISO 639 language tags in the \"xml:lang\" attribute of an XML element to identify the language of its content and attributes.",
      "ja": "制作者のDisplayName：このプロトコルでは、人間が読める文字列のほとんどは、DAVなどのプロパティに表示されます。 RFC 2518で定義されているように、プロパティはその値はXMLとしてマーシャリングしています。 XMLは、文字セットのタグ付けおよび符号化のための明示的な規定があり、ISO 10646多平面のUTF-8 [RFC2279]エンコードを使用して、XMLプロセッサが最小で、エンコードされたXML要素を読み取ることを要求します。一緒にXML「エンコーディング」属性のContent-Typeヘッダのcharsetパラメータは、MIMEおよびXMLプロセッサの文字セット識別情報を提供します。 XMLと文字セットヘッダの適切な使用は、3023 XMLは、特定のXML要素のコンテンツの言語を指定するための言語タグ付け機能を提供するRFCに記載されています。 XMLは、IANAに登録されている言語タグ（RFC 3066を参照）、またはISO 639言語タグのいずれかを使用しています「のxml：langの」XML要素の属性は、その内容の言語を識別し、属性に。"
    },
    {
      "indent": 3,
      "text": "DeltaV applications, since they build upon WebDAV, are subject to the internationalization requirements specified in RFC 2518, Section 16. In brief, these requirements mandate the use of XML character set tagging, character set encoding, and language tagging capabilities. Additionally, they strongly recommend reading RFC 3023 for instruction on the use of MIME media types for XML transport and the use of the charset header.",
      "ja": "彼らはWebDAVの上に構築ので、デルタVアプリケーションは、RFC 2518、簡単に説明すると、セクション16で指定された国際化要件の対象となっている、これらの要件は、XML文字セットのタグ付け、文字セットエンコーディング、および言語タグ機能の使用を義務付けます。さらに、彼らは強くXMLの輸送のためのMIMEメディアタイプを使用すると、文字セットヘッダの使用上の指示については、RFC 3023を読んでお勧めします。"
    },
    {
      "indent": 3,
      "text": "Within this specification, a label is a human-readable string that is marshaled in the Label header and as XML in request entity bodies. When used in the Label header, the value of the label is URL-escaped and encoded using UTF-8.",
      "ja": "この仕様書の中で、ラベルはラベルヘッダにと要求エンティティボディでXMLとしてマーシャリングされる判読できる文字列です。ラベルヘッダで使用される場合、ラベルの値は、URLエスケープとUTF-8を使用して符号化されます。"
    },
    {
      "indent": 0,
      "text": "16 Security Considerations",
      "ja": "16のセキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "All of the security considerations of WebDAV discussed in RFC 2518, Section 17 also apply to WebDAV versioning. Some aspects of the versioning protocol help address security risks introduced by WebDAV, but other aspects can increase these security risks. These issues are detailed below.",
      "ja": "RFC 2518で説明したのWebDAVのセキュリティ上の考慮事項のすべては、セクション17はまた、WebDAVのバージョン管理に適用されます。一部のWebDAVによって導入バージョン管理プロトコルヘルプアドレスセキュリティリスクの側面が、他の側面は、これらのセキュリティ上のリスクを増やすことができます。これらの問題は以下に詳述されています。"
    },
    {
      "indent": 0,
      "text": "16.1 Auditing and Traceability",
      "section_title": true,
      "ja": "16.1監査とトレーサビリティ"
    },
    {
      "indent": 3,
      "text": "WebDAV increases the ease with which a remote client can modify resources on a web site, but this also increases the risk of important information being overwritten and lost, either through user error or user maliciousness. The use of WebDAV versioning can help address this problem by guaranteeing that previous information is saved in the form of immutable versions, and therefore is easily available for retrieval or restoration. In addition, the version history provides a log of when changes were made, and by whom. When requests are appropriately authenticated, the history mechanism provides a clear audit trail for changes to web resources. This can often significantly improve the ability to identify the source of the security problem, and thereby help guard against it in the future.",
      "ja": "WebDAVは、リモート・クライアントは、Webサイト上のリソースを変更することができる容易さを増すが、これはまた、ユーザー・エラーまたはユーザー悪意のいずれかを介して、重要な情報のリスクが上書きされて失われて増加します。 WebDAVのバージョン管理の使用は、以前の情報は不変のバージョンの形式で保存され、したがって、検索または回復のために容易に利用可能であることを保証することにより、アドレスにこの問題を助けることができます。また、バージョン履歴は、変更が行われたときのログ、およびによりを提供します。リクエストが適切に認証された場合、履歴メカニズムは、Webリソースへの変更のための明確な監査証跡を提供します。これは、多くの場合、大幅にセキュリティ上の問題の原因を特定し、それによって、将来的にはそれに対するガードを支援する能力を向上させることができます。"
    },
    {
      "indent": 0,
      "text": "16.2 Increased Need for Access Control",
      "section_title": true,
      "ja": "アクセス制御のための16.2向上の必要性"
    },
    {
      "indent": 3,
      "text": "WebDAV versioning provides a variety of links between related pieces of information. This can increase the risk that authentication or authorization errors allow a client to locate sensitive information. For example, if version history is not appropriately protected by access control, a client can use the version history of a public resource to identify later versions of that resource that the user intended to keep private. This increases the need for reliable authentication and accurate authorization.",
      "ja": "WebDAVのバージョン管理は、情報の関連部分の間のリンクを数多く提供しています。これは、認証または許可エラーは、クライアントが機密情報を検索することも可能にする。リスクを高めることができます。バージョン履歴が適切にアクセス制御によって保護されていない場合、例えば、クライアントは、ユーザーがプライベート保つために意図されているリソースのそれ以降のバージョンを識別するために、公共のリソースのバージョン履歴を使用することができます。これは、信頼性の高い認証と正確な承認の必要性が増します。"
    },
    {
      "indent": 3,
      "text": "A WebDAV versioning client should be designed to handle a mixture of 200 (OK) and 403 (Forbidden) responses on attempts to access the properties and reports that are supported by a resource. For example, a particular user may be authorized to access the content and dead properties of a version-controlled resource, but not be authorized to access the DAV:checked-in, DAV:checked-out, or DAV:version-history properties of that resource.",
      "ja": "WebDAVのバージョン管理クライアントは、200（OK）の混合物を処理するために設計されており、リソースによってサポートされているプロパティやレポートにアクセスしようとする試みの403（禁止）応答する必要があります。たとえば、特定のユーザーは、バージョン管理されたリソースの内容とデッドプロパティにアクセスすることを許可することができるが、DAVへのアクセスを許可されない：チェックインされ、DAV：チェックアウト、またはDAV：のバージョン履歴のプロパティそのリソース。"
    },
    {
      "indent": 0,
      "text": "16.3 Security Through Obscurity",
      "section_title": true,
      "ja": "あいまいを通じて16.3セキュリティ"
    },
    {
      "indent": 3,
      "text": "While it is acknowledged that \"obscurity\" is not an effective means of security, it is often a good technique to keep honest people honest. Within this protocol, version URLs, version history URLs, and working resource URLs are generated by the server and can be properly obfuscated so as not to draw attention to them. For example, a version of \"http://foobar.com/reviews/salaries.html\" might be assigned a URL such as \"http://foobar.com/repo/4934943\".",
      "ja": "それは「無名」は、セキュリティの有効な手段ではないことを認めているが、多くの場合、正直な正直な人を維持するための良い方法です。このプロトコル、バージョンのURL、バージョン履歴のURL、および作業リソースURL内のサーバによって生成され、それらに注意を引くしないように適切に難読化することができます。たとえば、「http://foobar.com/reviews/salaries.html」のバージョンは、このような「http://foobar.com/repo/4934943」としてURLを割り当てられることがあります。"
    },
    {
      "indent": 0,
      "text": "16.4 Denial of Service",
      "section_title": true,
      "ja": "サービスの16.4拒否"
    },
    {
      "indent": 3,
      "text": "The auto-versioning mechanism provided by WebDAV can result in a large number of resources being created on the server, since each update to a resource could potentially result in the creation of a new version resource. This increases the risk of a denial of service attack that exhausts the storage capability of a server. This risk is especially significant because it can be an unintentional result of something like an aggressive auto-save feature provided by an editing client. A server can decrease this risk by using delta storage techniques to minimize the cost of additional versions, and by limiting auto-versioning to a locking client, and thereby decreasing the number of inadvertent version creations.",
      "ja": "リソースへの各更新は潜在的に新しいバージョンのリソースの作成につながる可能性があるためのWebDAVが提供する自動バージョン管理メカニズムは、サーバー上に作成されるリソースが多数になることができます。これは、サーバーのストレージ機能を排出するサービス拒否攻撃のリスクを増大させます。それは編集クライアントが提供する積極的な自動保存機能のようなものの意図しない結果であり得るので、このリスクは特に重要です。サーバは、追加のバージョンのコストを最小限にするために、デルタ・ストレージ技術を使用することにより、ロッククライアントに自動バージョンを制限し、それによって不慮のバージョン作品の数を減少させることにより、このリスクを減少させることができます。"
    },
    {
      "indent": 0,
      "text": "17 IANA Considerations",
      "ja": "17のIANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "This document uses the namespace defined by RFC 2518 for XML elements. All other IANA considerations from RFC 2518 are also applicable to WebDAV Versioning.",
      "ja": "この文書は、XML要素については、RFC 2518で定義された名前空間を使用しています。 RFC 2518からの他のすべてのIANA問題もWebDAVのバージョンにも適用可能です。"
    },
    {
      "indent": 0,
      "text": "18 Intellectual Property",
      "ja": "18知的財産"
    },
    {
      "indent": 3,
      "text": "The following notice is copied from RFC 2026, Section 10.4, and describes the position of the IETF concerning intellectual property claims made against this document.",
      "ja": "以下の通知はRFC 2026、セクション10.4からコピーされており、この文書に対して行われた知的財産の請求に関するIETFの位置を説明しています。"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any intellectual property or other rights that might be claimed to pertain to the implementation or use other technology described in this document or the extent to which any license under such rights might or might not be available; neither does it represent that it has made any effort to identify any such rights. Information on the procedures of the IETF with respect to rights in standards-track and standards-related documentation can be found in BCP-11. Copies of claims of rights made available for publication and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the IETF Secretariat.",
      "ja": "IETFは、実装に関連するか、そのような権限下で、ライセンスがまたは使用できない場合がありますしている。この文書または範囲に記載されている他の技術を使用することを主張している可能性のある知的財産やその他の権利の有効性または範囲に関していかなる位置を取りません;また、そうした権利を特定するために取り組んできたことを表していないん。スタンダードトラックおよび標準関連文書の権利に関するIETFの手続きの情報は、BCP-11に記載されています。権利の主張のコピーは、出版のために利用可能とライセンスの保証が利用できるようにする、あるいは本仕様の実装者または利用者がそのような所有権の使用のための一般的なライセンスまたは許可を取得するために作られた試みの結果を得ることができますIETF事務局から。"
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights that may cover technology that may be required to practice this standard. Please address the information to the IETF Executive Director.",
      "ja": "IETFは、その注意にこの標準を実践するために必要な場合があり技術をカバーすることができる任意の著作権、特許または特許出願、またはその他の所有権を持ってすべての利害関係者を招待します。 IETF専務に情​​報を扱ってください。"
    },
    {
      "indent": 0,
      "text": "19 Acknowledgements",
      "ja": "19の謝辞"
    },
    {
      "indent": 3,
      "text": "This protocol is the collaborative product of the authors and the rest of the DeltaV design team: Boris Bokowski, Bruce Cragun (Novell), Jim Doubek (Macromedia), David Durand (INSO), Lisa Dusseault (Xythos), Chuck Fay (FileNet), Yaron Goland, Mark Hale (Interwoven), Henry Harbury (Merant), James Hunt, Jeff McAffer (OTI), Peter Raymond (Merant), Juergen Reuter, Edgar Schwarz (Marconi), Eric Sedlar (Oracle), Bradley Sergeant, Greg Stein, and John Vasta (Rational). We would like to acknowledge the foundation laid for us by the authors of the WebDAV and HTTP protocols upon which this protocol is layered, and the invaluable feedback from the WebDAV and DeltaV working groups.",
      "ja": "このプロトコルは、著者とデルタVデザインチームの残りのコラボレーティブな製品です：ボリスBokowski、ブルースCragun（ノベル）、ジム・Doubek（マクロメディア）、デビッド・デュラン（INSO）、リサDusseault（Xythosの）、チャック・フェイ（FileNetの） 、ヤロンGoland、マーク・ヘイル（インターウォーブン）、ヘンリー・Harbury（のMerant）、ジェームス・ハント、ジェフMcAffer氏（OTI）、ピーター・レイモンド（のMerant）、ユルゲン・ロイター、エドガー・シュワルツ（マルコーニ）、エリック・Sedlar（オラクル）、ブラッドリー軍曹、グレッグスタイン、ジョンVasta（合理的）。私たちは、このプロトコルは階層化された時にWebDAVとHTTPプロトコルの著者によって私たちのために敷設基盤、およびWebDAVとDeltaVのワーキンググループからの貴重なフィードバックを確認したいと思います。"
    },
    {
      "indent": 0,
      "text": "20 References",
      "ja": "20の参考文献"
    },
    {
      "indent": 3,
      "text": "[ISO639] ISO, \"Code for the representation of names of languages\", ISO 639:1988, 1998.",
      "ja": "[ISO639] ISO、 \"言語の名前の表現のためのコード\"、ISO 639：1988、1998。"
    },
    {
      "indent": 3,
      "text": "[RFC2026] Bradner, S., \"The Internet Standards Process -- Revision 3\", BCP 9, RFC 2026, October 1996.",
      "ja": "[RFC2026]ブラドナーの、S.、 \"インターネット標準化プロセス - リビジョン3\"、BCP 9、RFC 2026、1996年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC2277] Alvestrand, H., \"IETF Policy on Character Sets and Languages\", BCP 18, RFC 2277, January 1998.",
      "ja": "[RFC2277] Alvestrand、H.、 \"文字セットと言語のIETF方針\"、BCP 18、RFC 2277、1998年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC2279] Yergeau, F., \"UTF-8, a transformation format of ISO 10646\", RFC 2279, January 1998.",
      "ja": "[RFC2279] Yergeau、F.、 \"UTF-8、ISO 10646の変換フォーマット\"、RFC 2279、1998年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC2396] Berners-Lee, T., Fielding, R. and L. Masinter, \"Uniform Resource Identifiers (URI): Generic Syntax\", RFC 2396, August 1998.",
      "ja": "[RFC2396]バーナーズ=リー、T.、フィールディング、R.、およびL. Masinter、 \"統一資源識別子（URI）：一般的な構文\"、RFC 2396、1998年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC2518] Goland, Y., Whitehead, E., Faizi, A., Carter, S. and D. Jensen, \"HTTP Extensions for Distributed Authoring - WEBDAV\", RFC 2518, February 1999.",
      "ja": "[RFC2518] Goland、Y.、ホワイトヘッド、E.、フェッチ、A.、カーター、S.、およびD.ジェンセン、 \"分散オーサリングのHTTP拡張 -  WEBDAV\"、RFC 2518、1999年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC2616] Fielding, R., Gettys, J., Mogul, J., Frystyk, H., Masinter, L., Leach, P. and T.Berners-Lee, \"Hypertext Transfer Protocol -- HTTP/1.1\", RFC 2616, June 1999.",
      "ja": "[RFC2616]フィールディング、R.、ゲティス、J.、モーグル、J.、Frystyk、H.、Masinter、L.、リーチ、P.及びT.Bernersリー、 \"ハイパーテキスト転送プロトコル -  HTTP / 1.1\"、 RFC 2616、1999年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC3023] Murata, M., St.Laurent, S. and D. Kohn, \"XML Media Types\", RFC 3023, January 2001.",
      "ja": "[RFC3023]村田、M.、St.Laurent、S.およびD.コーン、 \"XMLのメディアタイプ\"、RFC 3023、2001年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC3066] Alvestrand, H., \"Tags for the Identification of Languages\", BCP 47, RFC 3066, January 2001.",
      "ja": "[RFC3066] Alvestrand、H.、 \"言語識別のためのタグ\"、BCP 47、RFC 3066、2001年1月。"
    },
    {
      "indent": 0,
      "text": "Appendix A - Resource Classification",
      "ja": "付録A  - リソースの分類"
    },
    {
      "indent": 3,
      "text": "This document introduces several different kinds of versioning resources, such as version-controlled resources, versions, checked-out resources, and version history resources. As clients discover resources on a server, they may find it useful to classify those resources (for example, to make UI decisions on choice of icon and menu options).",
      "ja": "この文書では、このようなバージョン管理リソース、バージョン、チェックアウトのリソース、およびバージョン履歴リソースなどのバージョン管理リソースのいくつかの種類が導入されています。クライアントは、サーバー上のリソースを発見したように、彼らはそれが有用（アイコンやメニューオプションの選択にUIの意思決定を行うために、例えば）これらのリソースを分類するために見つけることがあります。"
    },
    {
      "indent": 3,
      "text": "Clients should classify a resource by examining the values of the DAV:supported-method-set (see Section 3.1.3) and DAV:supported-live-property-set (see Section 3.1.4) properties of that resource.",
      "ja": "（3.1.4項を参照）をサポートし、ライブプロパティセットそのリソースのプロパティを：サポート・メソッドセット（3.1.3項を参照）、DAV：クライアントは、DAVの値を調べることによって、リソースを分類する必要があります。"
    },
    {
      "indent": 3,
      "text": "The following list shows the supported live properties and methods for each kind of versioning resource. Where an optional feature introduces a new kind of versioning resource, that feature is noted in parentheses following the name of that kind of versioning resource. If a live property or method is optional for a kind of versioning resource, the feature that introduces that live property or method is noted in parentheses following the live property or method name.",
      "ja": "以下のリストは、バージョン管理リソースの種類ごとにサポートされるライブプロパティとメソッドを示しています。オプション機能がリソースをバージョン管理の新しい種類を導入した場合、その機能は、バージョン管理、リソースの種類の名前の後の括弧に記載されています。ライブプロパティやメソッドは、バージョン管理リソースの種類、ライブプロパティやメソッドが、ライブプロパティやメソッド名の後の括弧に記載されていることを紹介する機能のためのオプションである場合。"
    },
    {
      "indent": 0,
      "text": "A.1 DeltaV-Compliant Unmapped URL (a URL that identifies no resource)",
      "ja": "A.1デルタV準拠のマップされていないURL（何のリソースを識別しないURL）"
    },
    {
      "indent": 3,
      "text": "Supported methods:",
      "ja": "サポートされているメソッド："
    },
    {
      "indent": 3,
      "text": "- PUT [RFC2616] - MKCOL [RFC2518] - MKACTIVITY (activity) - VERSION-CONTROL (workspace) - MKWORKSPACE (workspace)",
      "ja": " -  PUT [RFC2616]  -  MKCOL [RFC2518]  -  MKACTIVITY（活動） - バージョン管理（ワークスペース） -  MKWORKSPACE（作業領域）"
    },
    {
      "indent": 0,
      "text": "A.2 DeltaV-Compliant Resource",
      "ja": "A.2デルタV準拠のリソース"
    },
    {
      "indent": 3,
      "text": "Supported live properties:",
      "ja": "サポートされているライブのプロパティ："
    },
    {
      "indent": 3,
      "text": "- DAV:comment - DAV:creator-displayname - DAV:supported-method-set - DAV:supported-live-property-set - DAV:supported-report-set - all properties defined in WebDAV [RFC2518].",
      "ja": " -  DAV：コメント -  DAV：クリエーター-のDisplayName  -  DAV：サポート・メソッドセット -  DAV：サポート-ライブプロパティを設定 -  DAV：サポート：レポートを設定 - のWebDAV [RFC2518]で定義されたすべてのプロパティ。"
    },
    {
      "indent": 3,
      "text": "Supported methods:",
      "ja": "サポートされているメソッド："
    },
    {
      "indent": 3,
      "text": "- REPORT - all methods defined in WebDAV [RFC2518] - all methods defined in HTTP/1.1 [RFC2616].",
      "ja": " -  REPORT  - のWebDAVで定義されているすべての方法[RFC2518]  -  HTTP / 1.1で定義されたすべての方法[RFC2616]。"
    },
    {
      "indent": 0,
      "text": "A.3 DeltaV-Compliant Collection",
      "ja": "A.3デルタV準拠コレクション"
    },
    {
      "indent": 3,
      "text": "Supported live properties:",
      "ja": "サポートされているライブのプロパティ："
    },
    {
      "indent": 3,
      "text": "- all DeltaV-compliant resource properties.",
      "ja": " - すべてのデルタV準拠のリソース・プロパティ。"
    },
    {
      "indent": 3,
      "text": "Supported methods:",
      "ja": "サポートされているメソッド："
    },
    {
      "indent": 3,
      "text": "- BASELINE-CONTROL (baseline) - all DeltaV-compliant resource methods.",
      "ja": " -  BASELINE-CONTROL（ベースライン） - すべてのデルタV準拠のリソース・メソッド。"
    },
    {
      "indent": 0,
      "text": "A.4 Versionable Resource",
      "ja": "A.4バージョン管理リソース"
    },
    {
      "indent": 3,
      "text": "Supported live properties:",
      "ja": "サポートされているライブのプロパティ："
    },
    {
      "indent": 3,
      "text": "- DAV:workspace (workspace) - DAV:version-controlled-configuration (baseline) - all DeltaV-compliant resource properties.",
      "ja": " -  DAV：作業領域（作業領域） -  DAV：バージョン管理されたコンフィギュレーション（ベースライン） - すべてのデルタV準拠のリソース・プロパティー。"
    },
    {
      "indent": 3,
      "text": "Supported methods:",
      "ja": "サポートされているメソッド："
    },
    {
      "indent": 3,
      "text": "- VERSION-CONTROL - all DeltaV-compliant resource methods.",
      "ja": " -  VERSION-CONTROL  - すべてのデルタV準拠のリソース・メソッド。"
    },
    {
      "indent": 0,
      "text": "A.5 Version-Controlled Resource",
      "ja": "A.5バージョン管理されたリソース"
    },
    {
      "indent": 3,
      "text": "Supported live properties:",
      "ja": "サポートされているライブのプロパティ："
    },
    {
      "indent": 3,
      "text": "- DAV:auto-version - DAV:version-history (version-history) - DAV:workspace (workspace) - DAV:version-controlled-configuration (baseline) - all DeltaV-compliant resource properties.",
      "ja": " -  DAV：自動バージョン -  DAV：バージョン履歴（バージョン履歴） -  DAV：作業領域（作業領域） -  DAV：バージョン管理されたコンフィギュレーション（ベースライン） - すべてのデルタV準拠のリソース・プロパティー。"
    },
    {
      "indent": 3,
      "text": "Supported methods:",
      "ja": "サポートされているメソッド："
    },
    {
      "indent": 3,
      "text": "- VERSION-CONTROL - MERGE (merge) - all DeltaV-compliant resource methods.",
      "ja": " -  VERSION-CONTROL  -  MERGE（マージ） - すべてのデルタV準拠のリソース・メソッド。"
    },
    {
      "indent": 0,
      "text": "A.6 Version",
      "ja": "A.6バージョン"
    },
    {
      "indent": 3,
      "text": "Supported live properties:",
      "ja": "サポートされているライブのプロパティ："
    },
    {
      "indent": 3,
      "text": "- DAV:predecessor-set - DAV:successor-set - DAV:checkout-set - DAV:version-name - DAV:checkout-fork (in-place-checkout or working resource) - DAV:checkin-fork (in-place-checkout or working resource) - DAV:version-history (version-history) - DAV:label-name-set (label) - DAV:activity-set (activity) - all DeltaV-compliant resource properties.",
      "ja": " -  DAV：前身セット -  DAV：後継セット -  DAV：チェックアウトセット -  DAV：バージョン名 -  DAV：チェックアウトフォーク（インプレース・チェックアウトや作業リソース） -  DAV：チェックイン・フォーク（インプレース-checkoutまたは作業リソース） -  DAV：バージョン履歴（バージョン履歴） -  DAV：ラベル名セット（ラベル） -  DAV：アクティビティ・セット（活動） - すべてのデルタV準拠のリソース・プロパティ。"
    },
    {
      "indent": 3,
      "text": "Supported methods:",
      "ja": "サポートされているメソッド："
    },
    {
      "indent": 3,
      "text": "- LABEL (label) - CHECKOUT (working-resource) - all DeltaV-compliant resource methods.",
      "ja": " -  LABEL（ラベル） -  CHECKOUT（作業リソース） - すべてのデルタV準拠のリソース・メソッド。"
    },
    {
      "indent": 0,
      "text": "A.7 Checked-In Version-Controlled Resource",
      "ja": "A.7チェックインのバージョン管理されたリソース"
    },
    {
      "indent": 3,
      "text": "Supported live properties:",
      "ja": "サポートされているライブのプロパティ："
    },
    {
      "indent": 3,
      "text": "- DAV:checked-in - all version-controlled resource properties.",
      "ja": " -  DAV：チェックインされた - すべてのバージョン管理されたリソースのプロパティ。"
    },
    {
      "indent": 3,
      "text": "Supported methods:",
      "ja": "サポートされているメソッド："
    },
    {
      "indent": 3,
      "text": "- CHECKOUT (checkout-in-place) - UPDATE (update) - all version-controlled resource methods.",
      "ja": " -  CHECKOUT（チェックアウト・イン・プレース） -  UPDATE（更新） - 全てのバージョン管理されたリソースの方法。"
    },
    {
      "indent": 0,
      "text": "A.8 Checked-Out Resource",
      "ja": "A.8チェックアウトされたリソース"
    },
    {
      "indent": 3,
      "text": "Supported live properties:",
      "ja": "サポートされているライブのプロパティ："
    },
    {
      "indent": 3,
      "text": "- DAV:checked-out - DAV:predecessor-set - DAV:checkout-fork (in-place-checkout or working resource) - DAV:checkin-fork (in-place-checkout or working resource) - DAV:merge-set (merge) - DAV:auto-merge-set (merge) - DAV:unreserved (activity) - DAV:activity-set (activity)",
      "ja": " -  DAV：チェックアウト -  DAV：前身セット -  DAV：チェックアウトフォーク（インプレース・チェックアウトや作業リソース） -  DAV：チェックイン・フォーク（インプレース・チェックアウトや作業リソース） -  DAV：マージセット（マージ） -  DAV：オートマージセット（マージ） -  DAV：予約されていない（アクティビティ） -  DAV：アクティビティ・セット（活性）"
    },
    {
      "indent": 3,
      "text": "Supported methods:",
      "ja": "サポートされているメソッド："
    },
    {
      "indent": 3,
      "text": "- CHECKIN (checkout-in-place or working-resource) - all DeltaV-compliant resource methods.",
      "ja": " -  CHECKIN（チェックアウト・イン・場所や作業リソース） - すべてのデルタV準拠のリソース・メソッド。"
    },
    {
      "indent": 0,
      "text": "A.9 Checked-Out Version-Controlled Resource (checkout-in-place)",
      "ja": "A.9チェックアウトバージョン管理されたリソース（チェックアウト・イン・プレース）"
    },
    {
      "indent": 3,
      "text": "Supported live properties:",
      "ja": "サポートされているライブのプロパティ："
    },
    {
      "indent": 3,
      "text": "- all version-controlled resource properties. - all checked-out resource properties.",
      "ja": " - すべてのバージョン管理されたリソースのプロパティ。 - すべてのチェックアウトリソースプロパティ。"
    },
    {
      "indent": 3,
      "text": "Supported methods:",
      "ja": "サポートされているメソッド："
    },
    {
      "indent": 3,
      "text": "- UNCHECKOUT - all version-controlled resource methods. - all checked-out resource methods.",
      "ja": " -  UNCHECKOUT  - すべてのバージョン管理されたリソースの方法。 - すべてのチェックアウトリソースメソッド。"
    },
    {
      "indent": 0,
      "text": "A.10 Working Resource (working-resource)",
      "ja": "A.10ワーキング・リソース（作業リソース）"
    },
    {
      "indent": 3,
      "text": "Supported live properties:",
      "ja": "サポートされているライブのプロパティ："
    },
    {
      "indent": 3,
      "text": "- all DeltaV-compliant resource properties - all checked-out resource properties - DAV:auto-update.",
      "ja": " - すべてのデルタV準拠のリソース・プロパティ - すべてのチェックアウトリソースプロパティ -  DAV：自動更新。"
    },
    {
      "indent": 3,
      "text": "Supported methods:",
      "ja": "サポートされているメソッド："
    },
    {
      "indent": 3,
      "text": "- all checked-out resource methods.",
      "ja": " - すべてのチェックアウトリソースメソッド。"
    },
    {
      "indent": 0,
      "text": "A.11 Version History (version-history)",
      "ja": "A.11バージョン履歴（バージョン履歴）"
    },
    {
      "indent": 3,
      "text": "Supported live properties:",
      "ja": "サポートされているライブのプロパティ："
    },
    {
      "indent": 3,
      "text": "- DAV:version-set - DAV:root-version - all DeltaV-compliant resource properties.",
      "ja": " -  DAV：バージョンセット -  DAV：ルート・バージョン - すべてのデルタV準拠のリソース・プロパティ。"
    },
    {
      "indent": 3,
      "text": "Supported methods:",
      "ja": "サポートされているメソッド："
    },
    {
      "indent": 3,
      "text": "- all DeltaV-compliant resource methods.",
      "ja": " - すべてのデルタV準拠のリソース・メソッド。"
    },
    {
      "indent": 0,
      "text": "A.12 Workspace (workspace)",
      "ja": "A.12ワークスペース（ワークスペース）"
    },
    {
      "indent": 3,
      "text": "Supported live properties:",
      "ja": "サポートされているライブのプロパティ："
    },
    {
      "indent": 3,
      "text": "- DAV:workspace-checkout-set - DAV:baseline-controlled-collection-set (baseline) - DAV:current-activity-set (activity) - all DeltaV-compliant collection properties.",
      "ja": " -  DAV：ワークスペース・チェックアウトセット -  DAV：ベースライン制御収集セット（ベースライン） -  DAV：現在活性セット（アクティビティ） - すべてのデルタV準拠コレクションプロパティ。"
    },
    {
      "indent": 3,
      "text": "Supported methods:",
      "ja": "サポートされているメソッド："
    },
    {
      "indent": 3,
      "text": "- all DeltaV-compliant collection methods.",
      "ja": " - すべてのデルタVに準拠した収集方法。"
    },
    {
      "indent": 0,
      "text": "A.13 Activity (activity)",
      "ja": "A.13アクティビティ（活動）"
    },
    {
      "indent": 3,
      "text": "Supported live properties:",
      "ja": "サポートされているライブのプロパティ："
    },
    {
      "indent": 3,
      "text": "- DAV:activity-version-set - DAV:activity-checkout-set - DAV:subactivity-set - DAV:current-workspace-set - all DeltaV-compliant resource properties.",
      "ja": " -  DAV：活動バージョンセット -  DAV：アクティビティ・チェックアウトセット -  DAV：subactivityセット -  DAV：現在のワークスペース・セット - すべてのデルタV準拠のリソース・プロパティ。"
    },
    {
      "indent": 3,
      "text": "Supported methods:",
      "ja": "サポートされているメソッド："
    },
    {
      "indent": 3,
      "text": "- all DeltaV-compliant resource methods.",
      "ja": " - すべてのデルタV準拠のリソース・メソッド。"
    },
    {
      "indent": 0,
      "text": "A.14 Version-Controlled Collection (version-controlled-collection)",
      "ja": "A.14コレクションをバージョン管理（バージョン管理されたコレクション）"
    },
    {
      "indent": 3,
      "text": "Supported live properties:",
      "ja": "サポートされているライブのプロパティ："
    },
    {
      "indent": 3,
      "text": "- DAV:eclipsed-set - all version-controlled resource properties.",
      "ja": " -  DAV：蹴らセット - すべてのバージョン管理されたリソースのプロパティ。"
    },
    {
      "indent": 3,
      "text": "Supported methods:",
      "ja": "サポートされているメソッド："
    },
    {
      "indent": 3,
      "text": "- all version-controlled resource methods.",
      "ja": " - すべてのバージョン管理されたリソースの方法。"
    },
    {
      "indent": 0,
      "text": "A.15 Collection Version (version-controlled-collection)",
      "ja": "A.15コレクションバージョン（バージョン管理されたコレクション）"
    },
    {
      "indent": 3,
      "text": "Supported live properties:",
      "ja": "サポートされているライブのプロパティ："
    },
    {
      "indent": 3,
      "text": "- DAV:version-controlled-binding-set - all version properties.",
      "ja": " -  DAV：バージョン管理された結合セット - すべてのバージョンのプロパティ。"
    },
    {
      "indent": 3,
      "text": "Supported methods:",
      "ja": "サポートされているメソッド："
    },
    {
      "indent": 3,
      "text": "- all version methods.",
      "ja": " - すべてのバージョンのメソッド。"
    },
    {
      "indent": 0,
      "text": "A.16 Version-Controlled Configuration (baseline)",
      "ja": "A.16バージョン管理の設定（ベースライン）"
    },
    {
      "indent": 3,
      "text": "Supported live properties:",
      "ja": "サポートされているライブのプロパティ："
    },
    {
      "indent": 3,
      "text": "- DAV:baseline-controlled-collection - all version-controlled resource properties.",
      "ja": " -  DAV：ベースライン制御-コレクション - すべてのバージョン管理されたリソースのプロパティ。"
    },
    {
      "indent": 3,
      "text": "Supported methods:",
      "ja": "サポートされているメソッド："
    },
    {
      "indent": 3,
      "text": "- all version-controlled resource methods.",
      "ja": " - すべてのバージョン管理されたリソースの方法。"
    },
    {
      "indent": 0,
      "text": "A.17 Baseline (baseline)",
      "ja": "A.17ベースライン（ベースライン）"
    },
    {
      "indent": 3,
      "text": "Supported live properties:",
      "ja": "サポートされているライブのプロパティ："
    },
    {
      "indent": 3,
      "text": "- DAV:baseline-collection - DAV:subbaseline-set - all version properties.",
      "ja": " -  DAV：ベースライン・コレクション -  DAV：subbaselineセット - すべてのバージョンのプロパティ。"
    },
    {
      "indent": 3,
      "text": "Supported methods:",
      "ja": "サポートされているメソッド："
    },
    {
      "indent": 3,
      "text": "- all version methods.",
      "ja": " - すべてのバージョンのメソッド。"
    },
    {
      "indent": 0,
      "text": "A.18 Checked-Out Version-Controlled Configuration (baseline)",
      "ja": "A.18チェックアウトバージョン管理されたコンフィギュレーション（ベースライン）"
    },
    {
      "indent": 3,
      "text": "Supported live properties:",
      "ja": "サポートされているライブのプロパティ："
    },
    {
      "indent": 3,
      "text": "- DAV:subbaseline-set - all version-controlled configuration properties.",
      "ja": " -  DAV：subbaselineセット - すべてのバージョン管理の構成プロパティ。"
    },
    {
      "indent": 3,
      "text": "Supported methods:",
      "ja": "サポートされているメソッド："
    },
    {
      "indent": 3,
      "text": "- all version-controlled configuration methods.",
      "ja": " - すべてのバージョン管理の設定方法。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Geoffrey Clemm Rational Software 20 Maguire Road, Lexington, MA 02421",
      "ja": "ジェフリー・ClemmにRational Software 20マグワイアの道、レキシントン、MA 02421"
    },
    {
      "indent": 3,
      "text": "EMail: geoffrey.clemm@rational.com",
      "ja": "メールアドレス：geoffrey.clemm@rational.com"
    },
    {
      "indent": 3,
      "text": "Jim Amsden IBM 3039 Cornwallis, Research Triangle Park, NC 27709",
      "ja": "ジム・Amsden IBM 3039のコーンウォリス、リサーチトライアングルパーク、NC 27709"
    },
    {
      "indent": 3,
      "text": "EMail: jamsden@us.ibm.com",
      "ja": "メールアドレス：jamsden@us.ibm.com"
    },
    {
      "indent": 3,
      "text": "Tim Ellison IBM Hursley Park, Winchester, UK S021 2JN",
      "ja": "ティム・エリソンIBM Hursleyの公園、ウィンチェスター、イギリスのS021 2JN"
    },
    {
      "indent": 3,
      "text": "EMail: tim_ellison@uk.ibm.com",
      "ja": "メールアドレス：tim_ellison@uk.ibm.com"
    },
    {
      "indent": 3,
      "text": "Christopher Kaler Microsoft One Microsoft Way, Redmond, WA 90852",
      "ja": "クリストファーKalerマイクロソフトワンマイクロソフトウェイ、ワシントン州レッドモンド90852"
    },
    {
      "indent": 3,
      "text": "EMail: ckaler@microsoft.com",
      "ja": "メールアドレス：ckaler@microsoft.com"
    },
    {
      "indent": 3,
      "text": "Jim Whitehead UC Santa Cruz, Dept. of Computer Science 1156 High Street, Santa Cruz, CA 95064",
      "ja": "ジム・ホワイトヘッドUCサンタクルス、コンピュータサイエンス学科1156ハイストリート、サンタクルス、CA 95064"
    },
    {
      "indent": 3,
      "text": "EMail: ejw@cse.ucsc.edu",
      "ja": "メールアドレス：ejw@cse.ucsc.edu"
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2002). All Rights Reserved.",
      "ja": "著作権（C）インターネット協会（2002）。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the Internet Society or other Internet organizations, except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed, or as required to translate it into languages other than English.",
      "ja": "この文書とその翻訳は、コピーして他の人に提供し、それ以外についてはコメントまたは派生物は、いかなる種類の制限もなく、全体的にまたは部分的に、準備コピーし、公表して配布することができることを説明したり、その実装を支援することができます、上記の著作権表示とこの段落は、すべてのそのようなコピーや派生物に含まれていることを条件とします。しかし、この文書自体は著作権のための手順はで定義されている場合には、インターネット標準を開発するために必要なものを除き、インターネットソサエティもしくは他のインターネット関連団体に著作権情報や参照を取り除くなど、どのような方法で変更されないかもしれませんインターネット標準化プロセスが続く、または英語以外の言語に翻訳するために、必要に応じなければなりません。"
    },
    {
      "indent": 3,
      "text": "The limited permissions granted above are perpetual and will not be revoked by the Internet Society or its successors or assigns.",
      "ja": "上記の制限は永久で、インターネット学会やその後継者や譲渡者によって取り消されることはありません。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein is provided on an \"AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書とここに含まれている情報は、基礎とインターネットソサエティおよびインターネットエンジニアリングタスクフォースはすべての保証を否認し、明示または黙示、その情報の利用がない任意の保証を含むがこれらに限定されない「として、」上に設けられています特定の目的への権利または商品性または適合性の黙示の保証を侵害します。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "ja": "RFC Editor機能のための基金は現在、インターネット協会によって提供されます。"
    }
  ]
}