{
  "title": {
    "text": "RFC 3641 - Generic String Encoding Rules (GSER) for ASN.1 Types",
    "ja": "RFC 3641 - ASN.1タイプのための一般的な文字列の符号化規則（GSER）"
  },
  "number": 3641,
  "created_at": "2019-10-20 11:43:43.471886+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                            S. Legg\nRequest for Comments: 3641                           Adacel Technologies\nCategory: Standards Track                                   October 2003",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 10,
      "text": "Generic String Encoding Rules (GSER) for ASN.1 Types",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "このメモの位置付け"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "ja": "この文書は、インターネットコミュニティのためのインターネット標準トラックプロトコルを指定し、改善のための議論と提案を要求します。このプロトコルの標準化状態と状態への「インターネット公式プロトコル標準」（STD 1）の最新版を参照してください。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2003). All Rights Reserved.",
      "ja": "著作権（C）インターネット協会（2003）。全著作権所有。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document defines a set of Abstract Syntax Notation One (ASN.1) encoding rules, called the Generic String Encoding Rules (GSER), that produce a human readable text encoding for values of any given ASN.1 data type.",
      "ja": "この文書は、抽象構文記法1（ASN.1）符号化規則のセットを定義し、任意のASN.1データ型の値に対して人間可読テキストエンコーディングを生成する一般的な文字符号化規則（GSER）と呼ばれます。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  2\n2.  Conventions. . . . . . . . . . . . . . . . . . . . . . . . . .  3\n3.  Generic String Encoding Rules. . . . . . . . . . . . . . . . .  3\n    3.1.  Type Referencing Notations . . . . . . . . . . . . . . .  3\n    3.2.  Restricted Character String Types. . . . . . . . . . . .  4\n    3.3.  ChoiceOfStrings Types. . . . . . . . . . . . . . . . . .  5\n    3.4.  Identifiers. . . . . . . . . . . . . . . . . . . . . . .  6\n    3.5.  BIT STRING . . . . . . . . . . . . . . . . . . . . . . .  7\n    3.6.  BOOLEAN. . . . . . . . . . . . . . . . . . . . . . . . .  7\n    3.7.  ENUMERATED . . . . . . . . . . . . . . . . . . . . . . .  8\n    3.8.  INTEGER. . . . . . . . . . . . . . . . . . . . . . . . .  8\n    3.9.  NULL . . . . . . . . . . . . . . . . . . . . . . . . . .  8\n    3.10. OBJECT IDENTIFIER and RELATIVE-OID . . . . . . . . . . .  8\n    3.11. OCTET STRING . . . . . . . . . . . . . . . . . . . . . .  9\n    3.12. CHOICE . . . . . . . . . . . . . . . . . . . . . . . . .  9\n    3.13. SEQUENCE and SET . . . . . . . . . . . . . . . . . . . . 10\n    3.14. SEQUENCE OF and SET OF . . . . . . . . . . . . . . . . . 10\n    3.15. CHARACTER STRING . . . . . . . . . . . . . . . . . . . . 11\n    3.16. EMBEDDED PDV . . . . . . . . . . . . . . . . . . . . . . 11\n    3.17. EXTERNAL . . . . . . . . . . . . . . . . . . . . . . . . 11",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "    3.18. INSTANCE OF. . . . . . . . . . . . . . . . . . . . . . . 11\n    3.19. REAL . . . . . . . . . . . . . . . . . . . . . . . . . . 11\n    3.20. Variant Encodings. . . . . . . . . . . . . . . . . . . . 12\n4.  GSER Transfer Syntax . . . . . . . . . . . . . . . . . . . . . 13\n5.  Security Considerations. . . . . . . . . . . . . . . . . . . . 13\n6.  References . . . . . . . . . . . . . . . . . . . . . . . . . . 13\n    6.1.  Normative References . . . . . . . . . . . . . . . . . . 13\n    6.2.  Informative References . . . . . . . . . . . . . . . . . 14\n7.  Intellectual Property Notice . . . . . . . . . . . . . . . . . 15\n8.  Author's Address . . . . . . . . . . . . . . . . . . . . . . . 15\n9.  Full Copyright Statement . . . . . . . . . . . . . . . . . . . 16",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "This document defines a set of ASN.1 [8] encoding rules, called the Generic String Encoding Rules or GSER, that produce a human readable UTF-8 [6] character string encoding of ASN.1 values of any given arbitrary ASN.1 type.",
      "ja": "この文書はASN.1 [8]の符号化ルールのセットを定義し、任意の所与の任意のASN.1のASN.1値の人間が読み取り可能なUTF-8 [6]文字列の符号化を生成汎用文字符号化規則またはGSERと呼ばタイプ。"
    },
    {
      "indent": 3,
      "text": "Note that \"ASN.1 value\" does not mean a Basic Encoding Rules (BER) [12] encoded value. The ASN.1 value is an abstract concept that is independent of any particular encoding. BER is just one possible encoding of an ASN.1 value.",
      "ja": "「ASN.1値が」基本符号化規則（BER）[12]符号化された値を意味するものではないことに留意されたいです。 ASN.1値は、任意の特定のエンコーディングとは独立した抽象的な概念です。 BERは、ASN.1値のひとつの可能なエンコーディングです。"
    },
    {
      "indent": 3,
      "text": "GSER is based on ASN.1 value notation [8], with changes to accommodate the notation's use as a transfer syntax, and to support well established ad-hoc string encodings for Lightweight Directory Access Protocol (LDAP) [14] directory data types.",
      "ja": "GSERは、転送構文として表記の使用に対応するため、とのLDAP（Lightweight Directory Access Protocol）[14]ディレクトリデータ型に対して十分に確立アドホック文字列のエンコーディングをサポートするために変更して、[8] ASN.1値記法に基づいています。"
    },
    {
      "indent": 3,
      "text": "Though primarily intended for defining the LDAP-specific encoding of new LDAP attribute syntaxes and assertion syntaxes, these encoding rules could also be used in other domains where human readable renderings of ASN.1 values would be useful.",
      "ja": "主に新しいLDAP属性構文とアサーションの構文のLDAP固有のエンコードを定義するためのものが、これらの符号化規則はまた、ASN.1値の人間が読めるレンダリングが有用であろう他のドメインで使用することができます。"
    },
    {
      "indent": 3,
      "text": "Referencing GSER is sufficient to define a human readable text encoding for values of a specific ASN.1 type, however other specifications may wish to provide a customized Augmented Backus-Naur Form (ABNF) [3] description, independent of the ASN.1, as a convenience for the implementor (equivalent ABNF for the GSER encodings for ASN.1 types commonly occurring in LDAP syntaxes is provided in a separate document [15]). Such a specification SHOULD state that if there is a discrepancy between the customized ABNF and the GSER encoding defined by this document, that the GSER encoding takes precedence.",
      "ja": "GSERを参照すると、ASN.1の独立した[3]の説明が、他の仕様は、カスタマイズされた増補バッカス - ナウアフォーム（ABNF）を提供したい場合、特定のASN.1タイプの値に対して人間可読テキストエンコーディングを定義するのに十分です実装の利便性として（一般にLDAP構文で発生ASN.1タイプのGSERエンコーディングの等価ABNF別の文書で提供される[15]）。そのような仕様は、カスタマイズされたABNFこの文書によって定義GSERエンコーディングの間に不一致がある場合GSER符号化が優先されることをことを明記してください。"
    },
    {
      "indent": 0,
      "text": "2. Conventions",
      "section_title": true,
      "ja": "2.表記"
    },
    {
      "indent": 3,
      "text": "Throughout this document, \"type\" shall be taken to mean an ASN.1 type, and \"value\" shall be taken to mean an ASN.1 value.",
      "ja": "本書では、「タイプ」ASN.1タイプを意味するものとし、「値が」ASN.1値を意味するものとします。"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14, RFC 2119 [1].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はありますBCP 14、RFC 2119に記載されるように解釈される[1]。"
    },
    {
      "indent": 0,
      "text": "3. Generic String Encoding Rules",
      "section_title": true,
      "ja": "3.一般的な文字列の符号化規則"
    },
    {
      "indent": 3,
      "text": "The GSER encoding of a value of any ASN.1 type is described by the following ABNF [3]:",
      "ja": "任意のASN.1タイプの値のGSER符号化は以下のABNFによって記載されている[3]。"
    },
    {
      "indent": 6,
      "text": "Value = BitStringValue / BooleanValue / CharacterStringValue / ChoiceValue / EmbeddedPDVValue / EnumeratedValue / ExternalValue / GeneralizedTimeValue / IntegerValue / InstanceOfValue / NullValue / ObjectDescriptorValue / ObjectIdentifierValue / OctetStringValue / RealValue / RelativeOIDValue / SequenceOfValue / SequenceValue / SetOfValue / SetValue / StringValue / UTCTimeValue / VariantEncoding",
      "ja": "値= BitStringValue /するBooleanValue / CharacterStringValue / ChoiceValue / EmbeddedPDVValue / EnumeratedValue / ExternalValue / GeneralizedTimeValue /するIntegerValue / InstanceOfValue / NULLVALUE / ObjectDescriptorValue / ObjectIdentifierValue / OctetStringValue / RealValue / RelativeOIDValue / SequenceOfValue / SequenceValue / SetOfValue /値の代入/ STRINGVALUE / UTCTimeValue / VariantEncoding"
    },
    {
      "indent": 3,
      "text": "The ABNF for each of the above rules is given in the following sections.",
      "ja": "上記の規則の各々についてABNFは、以下のセクションで与えられます。"
    },
    {
      "indent": 0,
      "text": "3.1 Type Referencing Notations",
      "section_title": true,
      "ja": "3.1型の参照の表記"
    },
    {
      "indent": 3,
      "text": "A value of a type with a defined type name is encoded according to the type definition on the right hand side of the type assignment for the type name.",
      "ja": "定義されたタイプ名を持つタイプの値は、タイプ名の型の割り当ての右側のタイプの定義に従って符号化されます。"
    },
    {
      "indent": 3,
      "text": "A value of a type denoted by the use of a parameterized type with actual parameters is encoded according to the parameterized type with the DummyReferences [11] substituted with the actual parameters.",
      "ja": "実際のパラメータでパラメータ化された型を使用することによって示されるタイプの値が実際のパラメータで置換DummyReferences [11]とのパラメータ化された型に応じて符号化されます。"
    },
    {
      "indent": 3,
      "text": "A value of a tagged or constrained type is encoded as a value of the type without the tag or constraint, respectively. Tags do not appear in the string encodings defined by this document. See X.680 [8] and X.682 [10] for the details of ASN.1 constraint notation.",
      "ja": "タグ付けされた又は拘束型の値は、それぞれ、タグまたは制約なしタイプの値として符号化されます。タグは、この文書で定義された文字列のエンコーディングには表示されません。 ASN.1制約表記法の詳細については、X.680 [8]とX.682 [10]を参照。"
    },
    {
      "indent": 3,
      "text": "A value of an open type denoted by an ObjectClassFieldType (Clause 14 of X.681 [9]) is encoded according to the specific type of the value.",
      "ja": "ObjectClassFieldTypeで表されるオープンタイプ（X.681の箇条14 [9]）の値が値の特定のタイプに応じて符号化されます。"
    },
    {
      "indent": 3,
      "text": "A value of a fixed type denoted by an ObjectClassFieldType is encoded according to that fixed type.",
      "ja": "ObjectClassFieldTypeで示される固定式の値は、その固定されたタイプに応じて符号化されます。"
    },
    {
      "indent": 3,
      "text": "A value of a selection type is encoded according to the type referenced by the selection type.",
      "ja": "選択タイプの値は、選択型で参照タイプに従って符号化されます。"
    },
    {
      "indent": 3,
      "text": "A value of a type described by TypeFromObject notation (Clause 15 of X.681 [9]) is encoded according to the denoted type.",
      "ja": "TypeFromObject表記によって記載されたタイプの値（X.681の箇条15 [9]）が示されたタイプに従って符号化されます。"
    },
    {
      "indent": 3,
      "text": "A value of a type described by ValueSetFromObjects notation (Clause 15 of X.681 [9]) is encoded according to the governing type.",
      "ja": "ValueSetFromObjects表記によって記載されたタイプ（X.681の箇条15 [9]）の値が支配タイプに従って符号化されます。"
    },
    {
      "indent": 0,
      "text": "3.2. Restricted Character String Types",
      "section_title": true,
      "ja": "3.2. 制限された文字列データ型"
    },
    {
      "indent": 3,
      "text": "The contents of a string value are encoded as a UTF-8 character string between double quotes, regardless of the ASN.1 string type. Depending on the ASN.1 string type and an application's internal representation of that string type, a translation to or from the UTF-8 character encoding may be required. NumericString, PrintableString, IA5String, and VisibleString (ISO646String) are compatible with UTF-8 and do not require any translation. BMPString (UCS-2) and UniversalString (UCS-4) have a direct mapping to and from UTF-8 [6]. For the remaining string types see X.680 [8]. Any embedded double quotes in the resulting UTF-8 character string are escaped by repeating the double quote characters.",
      "ja": "文字列値の内容は関係なく、ASN.1文字列タイプの、二重引用符の間でUTF-8文字列としてエンコードされています。 ASN.1文字列タイプと、その文字列型のアプリケーションの内部表現によっては、UTF-8文字エンコーディングへまたはからの翻訳が必要な場合があります。 NumericString、PrintableStringの、IA5String、およびVisibleString（ISO646String）はUTF-8と互換性があり、任意の翻訳を必要としません。 BMPString（UCS-2）及びUniversalString（UCS-4）[6] UTF-8との直接マッピングを有します。残りの文字列タイプのX.680 [8]を参照してください。結果としてUTF-8文字列内の任意の埋め込まれた二重引用符は、二重引用符を繰り返すことでエスケープされます。"
    },
    {
      "indent": 3,
      "text": "A value of the NumericString, PrintableString, TeletexString (T61String), VideotexString, IA5String, GraphicString, VisibleString (ISO646String), GeneralString, BMPString, UniversalString or UTF8String type is encoded according to the <StringValue> rule.",
      "ja": "NumericString、はPrintableString、TeletexString（T61String）、VideotexString、IA5String、GraphicString、VisibleString（ISO646String）、GeneralString、BMPString、UniversalStringまたはUTF8Stringを型の値は、<STRINGVALUE>規則に従って符号化されます。"
    },
    {
      "indent": 6,
      "text": "StringValue = dquote *SafeUTF8Character dquote",
      "ja": "STRINGVALUE = DQUOTE * SafeUTF8Character DQUOTE"
    },
    {
      "indent": 6,
      "text": "dquote = %x22 ; \" (double quote)",
      "ja": "DQUOTE =％X22。 \"（二重引用符）"
    },
    {
      "indent": 6,
      "text": "SafeUTF8Character = %x00-21 / %x23-7F / ; ASCII minus dquote dquote dquote / ; escaped double quote %xC0-DF %x80-BF / ; 2 byte UTF-8 character %xE0-EF 2(%x80-BF) / ; 3 byte UTF-8 character %xF0-F7 3(%x80-BF) ; 4 byte UTF-8 character",
      "ja": "SafeUTF8Character =％x00-21 /％x23-7F /。 ASCIIマイナスDQUOTE DQUOTE DQUOTE /。エスケープされた二重引用符％XC0-DFの％のX80-BF /; 2バイトのUTF-8文字％xE0-EF 2（％のX80-BF）/。 3バイトのUTF-8文字％XF0-F7 3（％のX80-BF）。 4バイトUTF-8文字"
    },
    {
      "indent": 3,
      "text": "A value of the GeneralizedTime type, UTCTime type or ObjectDescriptor type is encoded as a string value. GeneralizedTime and UTCTime use the VisibleString character set so the conversion to UTF-8 is trivial. ObjectDescriptor uses the GraphicString type.",
      "ja": "GeneralizedTimeのタイプ、UTC時刻型またはのObjectDescriptorタイプの値は、文字列値として符号化されます。 UTF-8への変換は簡単ですので、GeneralizedTimeのとUTC時刻はVisibleString文字セットを使用します。 ObjectDescriptorはGraphicStringタイプを使用しています。"
    },
    {
      "indent": 6,
      "text": "GeneralizedTimeValue = StringValue UTCTimeValue = StringValue ObjectDescriptorValue = StringValue",
      "ja": "GeneralizedTimeValue = STRINGVALUE UTCTimeValue = STRINGVALUE ObjectDescriptorValue = STRINGVALUE"
    },
    {
      "indent": 0,
      "text": "3.3. ChoiceOfStrings Types",
      "section_title": true,
      "ja": "3.3.  ChoiceOfStringsタイプ"
    },
    {
      "indent": 3,
      "text": "It is not uncommon for ASN.1 specifications to define types that offer a CHOICE between two or more alternative ASN.1 string types, where the particular alternative chosen carries no semantic significance (DirectoryString [7] being a prime example). Such types are defined to avoid having to use a complicated character encoding for all values when most values could use a simpler string type, or to deal with evolving requirements that compel the use of a broader character set while still maintaining backward compatibility.",
      "ja": "ASN.1仕様が選択された特定の選択肢はない意味的な重要性を運ばない2つまたはそれ以上の別のASN.1ストリングタイプ、（DirectoryString [7]典型的な例である）との間で選択を提供タイプを定義することは珍しくありません。このようなタイプは、ほとんどの値は、単純な文字列型を使用することができ、または、下位互換性を維持しながら、より広範な文字セットを使用することを強要要件を進化に対処するとき、すべての値のための複雑な文字エンコーディングを使用することを避けるために定義されています。"
    },
    {
      "indent": 3,
      "text": "GSER encodes values of all the ASN.1 string types as UTF-8 character strings so the particular alternative that is chosen from a purely syntactic CHOICE of string types makes no material difference to the final encoding of the string value.",
      "ja": "文字列型の純粋構文CHOICEから選択される特定の代替文字列値の最終的な符号化に重大な違いはないので、GSERは、UTF-8文字列としてすべてのASN.1文字列型の値を符号化します。"
    },
    {
      "indent": 3,
      "text": "While there are certain ASN.1 constructs that betray the semantic significance of the alternatives within a CHOICE type, the absence of those constructs does not necessarily mean that a CHOICE type is purely syntactic. Therefore, it is necessary for specifications to declare the purely syntactic CHOICE types so that they may be more compactly encoded (see Section 3.12). These declared CHOICE types are referred to as ChoiceOfStrings types.",
      "ja": "CHOICEタイプ内の選択肢の意味意義を裏切る特定のASN.1構造物がありますが、これらの構築物の不在は必ずしもCHOICE型は純粋に構文上であることを意味するものではありません。したがって、それは（セクション3.12を参照）は、よりコンパクトに符号化することができるように、純粋に構文CHOICEタイプを宣言するための仕様のために必要です。これらの宣言CHOICEタイプはChoiceOfStringsタイプと呼ばれています。"
    },
    {
      "indent": 3,
      "text": "To be eligible to be declared a ChoiceOfStrings type, an ASN.1 type MUST satisfy the following conditions.",
      "ja": "ChoiceOfStringsタイプを宣言の対象であるためには、ASN.1型は、以下の条件を満たしている必要があります。"
    },
    {
      "indent": 3,
      "text": "a) The type is a CHOICE type.",
      "ja": "a）のタイプはCHOICEタイプです。"
    },
    {
      "indent": 3,
      "text": "b) The component type of each alternative is one of the following ASN.1 restricted string types: NumericString, PrintableString, TeletexString (T61String), VideotexString, IA5String, GraphicString, VisibleString (ISO646String), GeneralString, BMPString, UniversalString or UTF8String.",
      "ja": "NumericString、はPrintableString、TeletexString（T61String）、VideotexString、IA5String、GraphicString、VisibleString（ISO646String）、GeneralString、BMPString、UniversalStringまたはUTF8StringをA：B）は、各代替のコンポーネントタイプは、以下のASN.1制限された文字列型の一つです。"
    },
    {
      "indent": 3,
      "text": "c) All the alternatives are of different restricted string types, i.e., no two alternatives have the same ASN.1 restricted string type.",
      "ja": "C）すべての選択肢は、すなわち、どの2つの選択肢が同じASN.1制限文字列型を持っていない、別の制限された文字列型です。"
    },
    {
      "indent": 3,
      "text": "d) Either none of the alternatives has a constraint, or all of the alternatives have exactly the same constraint.",
      "ja": "d）のいずれかの選択肢のどれも制約を持っていない、または選択肢のすべてが正確に同じ制約があります。"
    },
    {
      "indent": 3,
      "text": "Tagging on the alternative types is ignored.",
      "ja": "代替タイプにタグ付けすることは無視されます。"
    },
    {
      "indent": 3,
      "text": "Consider the ASN.1 parameterized type definition of DirectoryString.",
      "ja": "DirectoryStringのASN.1パラメータ化された型の定義を考えてみましょう。"
    },
    {
      "indent": 6,
      "text": "DirectoryString { INTEGER : maxSize } ::= CHOICE {\n    teletexString     TeletexString (SIZE (1..maxSize)),\n    printableString   PrintableString (SIZE (1..maxSize)),\n    bmpString         BMPString (SIZE (1..maxSize)),\n    universalString   UniversalString (SIZE (1..maxSize)),\n    uTF8String        UTF8String (SIZE (1..maxSize)) }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Any use of the DirectoryString parameterized type with an actual parameter defines an ASN.1 type that satisfies the above conditions. Recognising that the alternative within a DirectoryString carries no semantic significance, this document declares (each and every use of) DirectoryString{} to be a ChoiceOfStrings type.",
      "ja": "実パラメータとDirectoryStringパラメータ化された型のいずれかの使用は、上記の条件を満足するASN.1タイプを定義します。 DirectoryString内代替が全く意味論的意味を運ばないことを認識し、この文書は、（それぞれ、すべての使用）DirectoryString {} ChoiceOfStringsタイプされることを宣言する。"
    },
    {
      "indent": 3,
      "text": "Other specifications MAY declare other types satisfying the above conditions to be ChoiceOfStrings types. The declaration SHOULD be made at the point where the ASN.1 type is defined, otherwise it SHOULD be made at the point where it is introduced as, or in, an LDAP attribute or assertion syntax.",
      "ja": "その他の仕様はChoiceOfStringsタイプであることを上記の条件を満たし、他のタイプを宣言してもよいです。宣言は、それ以外の場合は、それは次のように、またはLDAP属性またはアサーション構文に導入された時点で行われるべきであり、ASN.1型が定義されている点でなされるべきです。"
    },
    {
      "indent": 0,
      "text": "3.4. Identifiers",
      "section_title": true,
      "ja": "3.4. 識別子"
    },
    {
      "indent": 3,
      "text": "An <identifier> conforms to the definition of an identifier in ASN.1 notation (Clause 11.3 of X.680 [8]). It begins with a lowercase letter and is followed by zero or more letters, digits, and hyphens. A hyphen is not permitted to be the last character, nor is it to be followed by another hyphen. The case of letters in an identifier is always significant.",
      "ja": "<識別子>は、ASN.1表記（X.680の節11.3 [8]）内の識別子の定義に従います。それは小文字で始まり、ゼロ個以上の文字、数字、およびハイフンが続いています。ハイフンが最後の文字であることを許され、またそれは別のハイフンられるべきです。識別子の文字の場合は、常に重要です。"
    },
    {
      "indent": 6,
      "text": "identifier = lowercase *alphanumeric *(hyphen 1*alphanumeric) alphanumeric = uppercase / lowercase / decimal-digit uppercase = %x41-5A ; \"A\" to \"Z\" lowercase = %x61-7A ; \"a\" to \"z\" decimal-digit = %x30-39 ; \"0\" to \"9\" hyphen = \"-\"",
      "ja": "識別子=小文字の英数字* *（ハイフン1 *英数字）=％x41-5A大文字英数字=大文字/小文字/小数桁。 \"Z\" 小文字=％x61-7Aに \"A\"。 「」から「Z」小数桁=％x30-39。 \"0\" 〜 \"9\" ハイフン= \" - \""
    },
    {
      "indent": 0,
      "text": "3.5. BIT STRING",
      "section_title": true,
      "ja": "3.5. ビット列"
    },
    {
      "indent": 3,
      "text": "A value of the BIT STRING type is encoded according to the <BitStringValue> rule. If the definition of the BIT STRING type includes a named bit list, the <bit-list> form of <BitStringValue> MAY be used. If the number of bits in a BIT STRING value is a multiple of four, the <hstring> form of <BitStringValue> MAY be used. Otherwise, the <bstring> form of <BitStringValue> is used.",
      "ja": "ビット列型の値は、<BitStringValue>規則に従って符号化されます。ビット列型の定義は、名前付きビットのリストが含まれている場合、<BitStringValue>の<ビットリスト>フォームを使用することができます。ビット列の値のビットの数が4の倍数である場合、<BitStringValue>の<hstring>フォームを使用することができます。それ以外の場合は、<BitStringValue>の<bstring>フォームが使用されています。"
    },
    {
      "indent": 6,
      "text": "BitStringValue = bstring / hstring / bit-list",
      "ja": "BitStringValue = bstring / hstring /ビットリスト"
    },
    {
      "indent": 3,
      "text": "The <bit-list> rule encodes the one bits in the bit string value as a comma separated list of identifiers. Each <identifier> MUST be one of the identifiers in the named bit list, and MUST NOT appear more than once in the same <bit-list>. The <bstring> rule encodes each bit as the character \"0\" or \"1\" in order from the first bit to the last bit. The <hstring> rule encodes each group of four bits as a hexadecimal number where the first bit is the most significant. An odd number of hexadecimal digits is permitted.",
      "ja": "<ビットリスト>ルールは、識別子のカンマ区切りリスト、ビット文字列値に1ビットを符号化します。各<識別子>という名前のビットリスト内の識別子のいずれかである必要があり、かつ同じ<ビットリスト>に一度より多く見えてはいけません。 <bstring>ルールは、最後のビットの最初のビットから順に文字「0」または「1」として各ビットを符号化します。 <hstring>ルールは、最初のビットが最上位である16進数で4ビットの各グループを符号化します。 16進数の奇数が許可されます。"
    },
    {
      "indent": 6,
      "text": "bit-list = \"{\" [ sp identifier *( \",\" sp identifier ) ] sp \"}\"",
      "ja": "ビット・リスト= \"{\" [SP識別子（* \"\" SP識別子）] SP \"}\""
    },
    {
      "indent": 6,
      "text": "hstring = squote *hexadecimal-digit squote %x48 ; '...'H",
      "ja": "hstring = squote * 16進数字squoteの％のX48。 '...' H"
    },
    {
      "indent": 6,
      "text": "hexadecimal-digit = %x30-39 / ; \"0\" to \"9\" %x41-46 ; \"A\" to \"F\"",
      "ja": "16進数字=％x30-39 /。 \"0\" 〜 \"9\" ％x41-46。 \"A\" から \"F\""
    },
    {
      "indent": 6,
      "text": "bstring = squote *binary-digit squote %x42 ; '...'B binary-digit = \"0\" / \"1\"",
      "ja": "bstring = squote *バイナリ桁squoteの％のX42。 '...' Bバイナリ桁= \"0\" / \"1\""
    },
    {
      "indent": 6,
      "text": "sp = *%x20 ; zero, one or more space characters squote = %x27 ; ' (single quote)",
      "ja": "SP = *％のX20;ゼロ、1つまたは複数の空白文字squote =％X27。 '（シングルクオート）"
    },
    {
      "indent": 0,
      "text": "3.6. BOOLEAN",
      "section_title": true,
      "ja": "3.6.  BOOLEAN"
    },
    {
      "indent": 3,
      "text": "A value of the BOOLEAN type is encoded according to the <BooleanValue> rule.",
      "ja": "BOOLEAN型の値は、<するBooleanValue>規則に従って符号化されます。"
    },
    {
      "indent": 6,
      "text": "BooleanValue = %x54.52.55.45 / ; \"TRUE\" %x46.41.4C.53.45 ; \"FALSE\"",
      "ja": "するBooleanValue =％x54.52.55.45 /。 \"TRUE\" ％のx46.41.4C.53.45。 \"FALSE\""
    },
    {
      "indent": 0,
      "text": "3.7. ENUMERATED",
      "section_title": true,
      "ja": "3.7.  ENUMERATED"
    },
    {
      "indent": 3,
      "text": "A value of the ENUMERATED type is encoded according to the <EnumeratedValue> rule. The <identifier> MUST be one of those in the list of enumerations in the definition of the ENUMERATED type.",
      "ja": "列挙型の値は、<EnumeratedValue>規則に従って符号化されます。 <識別子>列挙型の定義において列挙のリストにそれらのいずれかでなければなりません。"
    },
    {
      "indent": 6,
      "text": "EnumeratedValue = identifier",
      "ja": "列挙値=識別子"
    },
    {
      "indent": 0,
      "text": "3.8. INTEGER",
      "section_title": true,
      "ja": "3.8. 整数"
    },
    {
      "indent": 3,
      "text": "A value of the INTEGER type is encoded according to the <IntegerValue> rule. If the definition of the INTEGER type includes a named number list, the <identifier> form of <IntegerValue> MAY be used, in which case the <identifier> MUST be one of the identifiers in the named number list.",
      "ja": "INTEGER型の値は、<するIntegerValue>規則に従って符号化されます。 INTEGERタイプの定義は、指定数のリストが含まれている場合、<するIntegerValue>の<識別子>フォームは<識別子>この場合に使用することができるという名前の番号リスト内の識別子のいずれかでなければなりません。"
    },
    {
      "indent": 6,
      "text": "IntegerValue = \"0\" / positive-number / (\"-\" positive-number) / identifier",
      "ja": "するIntegerValue = \"0\" /正の数/（ \" - \" 正の数）/識別子"
    },
    {
      "indent": 6,
      "text": "positive-number = non-zero-digit *decimal-digit non-zero-digit = %x31-39 ; \"1\" to \"9\"",
      "ja": "正の数=非ゼロ桁*小数桁非ゼロ桁=％x31-39。 \"1\" 〜 \"9\""
    },
    {
      "indent": 0,
      "text": "3.9. NULL",
      "section_title": true,
      "ja": "3.9. ヌル"
    },
    {
      "indent": 3,
      "text": "A value of the NULL type is encoded according to the <NullValue> rule.",
      "ja": "NULL型の値は、<NULLVALUE>規則に従って符号化されます。"
    },
    {
      "indent": 6,
      "text": "NullValue = %x4E.55.4C.4C ; \"NULL\"",
      "ja": "NULLVALUE =％x4E.55.4C.4C。 \"ヌル\""
    },
    {
      "indent": 0,
      "text": "3.10. OBJECT IDENTIFIER and RELATIVE-OID",
      "section_title": true,
      "ja": "3.10. オブジェクト識別子と相対OID"
    },
    {
      "indent": 3,
      "text": "A value of the OBJECT IDENTIFIER type is encoded according to the <ObjectIdentifierValue> rule. The <ObjectIdentifierValue> rule allows either a dotted decimal representation of the OBJECT IDENTIFIER value or an object descriptor name, i.e., <descr>. The <descr> rule is described in RFC 2252 [4]. An object descriptor name is potentially ambiguous and should be used with care.",
      "ja": "オブジェクト識別子タイプの値は、<ObjectIdentifierValue>規則に従って符号化されます。 <ObjectIdentifierValue>ルールは、オブジェクト識別子値のドット十進表現またはオブジェクト記述子名のいずれかを可能にする、すなわち、<DESCR>。 <DESCR>ルールは、RFC 2252に記載されている[4]。オブジェクト記述子の名前は、潜在的にあいまいで、注意して使用する必要があります。"
    },
    {
      "indent": 6,
      "text": "ObjectIdentifierValue = numeric-oid / descr numeric-oid = oid-component 1*( \".\" oid-component ) oid-component = \"0\" / positive-number",
      "ja": "ObjectIdentifierValue =数値OID / DESCR数値OID = OID成分1 *（ \"\" OID成分）OID成分= \"0\" /正の数"
    },
    {
      "indent": 3,
      "text": "A value of the RELATIVE-OID type is encoded according to the <RelativeOIDValue> rule.",
      "ja": "相対OID型の値は、<RelativeOIDValue>規則に従って符号化されます。"
    },
    {
      "indent": 6,
      "text": "RelativeOIDValue = oid-component *( \".\" oid-component )",
      "ja": "RelativeOIDValue = OID成分*（ \"\" OID成分）"
    },
    {
      "indent": 0,
      "text": "3.11. OCTET STRING",
      "section_title": true,
      "ja": "3.11. オクテットSTRING"
    },
    {
      "indent": 3,
      "text": "A value of the OCTET STRING type is encoded according to the <OctetStringValue> rule. The octets are encoded in order from the first octet to the last octet. Each octet is encoded as a pair of hexadecimal digits where the first digit corresponds to the four most significant bits of the octet. If the hexadecimal string does not have an even number of digits, the four least significant bits in the last octet are assumed to be zero.",
      "ja": "OCTET STRINGのタイプの値は、<OctetStringValue>規則に従って符号化されます。オクテットは最後のオクテットの最初のオクテットから順に符号化されています。各オクテットは、最初の数字はオクテットの4つの最上位ビットに対応する16進数の対として符号化されます。 16進数の文字列が数字の偶数を持っていない場合は、最後のオクテット内の4つの最下位ビットがゼロであると仮定されます。"
    },
    {
      "indent": 6,
      "text": "OctetStringValue = hstring",
      "ja": "OctetStringValue = hstring"
    },
    {
      "indent": 0,
      "text": "3.12. CHOICE",
      "section_title": true,
      "ja": "3.12. 選択"
    },
    {
      "indent": 3,
      "text": "A value of a CHOICE type is encoded according to the <ChoiceValue> rule. The <ChoiceOfStringsValue> encoding MAY be used if the corresponding CHOICE type has been declared a ChoiceOfStrings type. This document declares DirectoryString to be a ChoiceOfStrings type (see Section 3.3). Otherwise, the <IdentifiedChoiceValue> form of <ChoiceValue> is used.",
      "ja": "CHOICE型の値は、<ChoiceValue>規則に従って符号化されます。対応CHOICE型がChoiceOfStrings型宣言された場合、<ChoiceOfStringsValue>エンコーディングが使用されてもよいです。この文書は（3.3節を参照）ChoiceOfStringsタイプであることをDirectoryString宣言しています。それ以外の場合は、<ChoiceValue>の<IdentifiedChoiceValue>フォームが使用されています。"
    },
    {
      "indent": 6,
      "text": "ChoiceValue = IdentifiedChoiceValue / ChoiceOfStringsValue IdentifiedChoiceValue = identifier \":\" Value ChoiceOfStringsValue = StringValue",
      "ja": "ChoiceValue = IdentifiedChoiceValue / ChoiceOfStringsValue IdentifiedChoiceValue =識別子 \"：\" バリューChoiceOfStringsValue = STRINGVALUE"
    },
    {
      "indent": 3,
      "text": "For implementations that recognise the internal structure of the DirectoryString CHOICE type (e.g., X.500 directories [16]), if the character string between the quotes in a <StringValue> contains only characters that are permitted in a PrintableString, the DirectoryString is assumed to use the printableString alternative, otherwise it is assumed to use the uTF8String alternative. The <IdentifiedChoiceValue> rule MAY be used for a value of type DirectoryString to indicate an alternative other than the one that would be assumed from the string contents. No matter what alternative is chosen, the <Value> will still be a UTF-8 encoded character string. However, it is a syntax error if the characters in the UTF-8 string cannot be represented in the string type of the chosen alternative.",
      "ja": "DirectoryString CHOICEタイプ（例えば、X.500ディレクトリ[16]）の内部構造を認識実装のため、<STRINGVALUE>で引用符の間の文字列は、PrintableStringのに許可されている文字のみを含む場合、DirectoryStringが仮定されprintablestringの代替を使用し、それ以外の場合はUTF8STRINGの代替を使用することを想定しています。 <IdentifiedChoiceValue>ルールは、文字列の内容から想定されるもの以外の代替手段を示すために、タイプDirectoryStringの値のために使用されるかもしれません。どんなに選ばれているものの代替、<value>は、まだUTF-8でエンコードされた文字列になることはありません。しかし、それはUTF-8文字列内の文字を選択した代替の文字列型で表現できない場合は、構文エラーがあります。"
    },
    {
      "indent": 3,
      "text": "Implementations that do not care about the internal structure of a DirectoryString value MUST be able to parse the <IdentifiedChoiceValue> form for a DirectoryString value, though the particular identifier found will be of no interest.",
      "ja": "見つかった特定の識別子が興味のないことでしょうがDirectoryString値の内部構造を気にしない実装は、DirectoryString値の<IdentifiedChoiceValue>フォームを解析できなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.13. SEQUENCE and SET",
      "section_title": true,
      "ja": "3.13.  SEQUENCEとSET"
    },
    {
      "indent": 3,
      "text": "A value of a SEQUENCE type is encoded according to the <SequenceValue> rule. The <ComponentList> rule encodes a comma separated list of the particular component values present in the SEQUENCE value, where each component value is preceded by the corresponding identifier from the SEQUENCE type definition. The components are encoded in the order of their definition in the SEQUENCE type.",
      "ja": "SEQUENCE型の値は、<SequenceValue>規則に従って符号化されます。 <ComponentList>ルールは、各成分の値は、配列タイプ定義から対応する識別子によって先行されるシーケンス値、中に存在する特定の成分値のカンマ区切りリストをコードします。成分はSEQUENCE型におけるそれらの定義の順に符号化されます。"
    },
    {
      "indent": 6,
      "text": "SequenceValue = ComponentList",
      "ja": "SequenceValue = ComponentList"
    },
    {
      "indent": 6,
      "text": "ComponentList = \"{\" [ sp NamedValue *( \",\" sp NamedValue) ] sp \"}\" NamedValue = identifier msp Value msp = 1*%x20 ; one or more space characters",
      "ja": "ComponentList = \"{\" [SP用のNamedValue *（ \"\" SPのNamedValue）] SP \"}\" のNamedValue =識別子MSP値MSP = 1 *の％のX20。一つ以上の空白文字"
    },
    {
      "indent": 3,
      "text": "A value of a SET type is encoded according to the <SetValue> rule. The components are encoded in the order of their definition in the SET type (i.e., just like a SEQUENCE value). This is a deliberate departure from ASN.1 value notation where the components of a SET can be written in any order.",
      "ja": "SET型の値は、<値の代入>規則に従って符号化されます。コンポーネントはセット型（すなわち、単にシーケンス値など）での定義の順に符号化されます。これは、SETの成分は任意の順序で書き込むことができるASN.1値記法から意図的な逸脱です。"
    },
    {
      "indent": 6,
      "text": "SetValue = ComponentList",
      "ja": "値の代入= ComponentList"
    },
    {
      "indent": 3,
      "text": "SEQUENCE and SET type definitions are sometimes extended by the inclusion of additional component types, so an implementation SHOULD be capable of skipping over any <NamedValue> encoding with an identifier that is not recognised, on the assumption that the sender is using a more recent definition of the SEQUENCE or SET type.",
      "ja": "SEQUENCEとSET型定義は、時には、追加のコンポーネントタイプを含めることによって拡張されるので、実装は、送信者がより新しい定義を使用していると仮定して、認識されない識別子を有する任意の<たNamedValue>符号化をスキップすることができなければなりませんSEQUENCEまたはSETタイプの。"
    },
    {
      "indent": 0,
      "text": "3.14. SEQUENCE OF and SET OF",
      "section_title": true,
      "ja": "3.14.  OF SEQUENCEとのセット"
    },
    {
      "indent": 3,
      "text": "A value of a SEQUENCE OF type is encoded according to the <SequenceOfValue> rule, as a comma separated list of the instances in the value. Each instance is encoded according to the component type of the SEQUENCE OF type.",
      "ja": "コンマ値内のインスタンスのリストを分離したようなタイプのシーケンスの値は、<SequenceOfValue>規則に従って符号化されます。各インスタンスは、タイプのシーケンスのコンポーネントタイプに応じて符号化されます。"
    },
    {
      "indent": 6,
      "text": "SequenceOfValue = \"{\" [ sp Value *( \",\" sp Value) ] sp \"}\"",
      "ja": "SequenceOfValue = \"{\" [SP値（* \"\" SP値）] SP \"}\""
    },
    {
      "indent": 3,
      "text": "A value of a SET OF type is encoded according to the <SetOfValue> rule, as a list of the instances in the value. Each instance is encoded according to the component type of the SET OF type.",
      "ja": "タイプのセットの値は、値のインスタンスのリストとして、<SetOfValue>規則に従って符号化されます。各インスタンスは、型のセットのコンポーネントタイプに応じて符号化されます。"
    },
    {
      "indent": 6,
      "text": "SetOfValue = \"{\" [ sp Value *( \",\" sp Value) ] sp \"}\"",
      "ja": "SetOfValue = \"{\" [SP値（* \"\" SP値）] SP \"}\""
    },
    {
      "indent": 0,
      "text": "3.15. CHARACTER STRING",
      "section_title": true,
      "ja": "3.15.  CHARACTERのSTRING"
    },
    {
      "indent": 3,
      "text": "A value of the unrestricted CHARACTER STRING type is encoded according to the corresponding SEQUENCE type defined in Clause 40.5 of X.680 [8] (see [15] for equivalent ABNF).",
      "ja": "無制限の文字列型の値が符号化されるX.680の節40.5に定義された対応する配列の種類に応じて、[8]（等価ABNFのための[15]を参照）。"
    },
    {
      "indent": 6,
      "text": "CharacterStringValue = SequenceValue",
      "ja": "文字列数値=シーケンス値"
    },
    {
      "indent": 0,
      "text": "3.16. EMBEDDED PDV",
      "section_title": true,
      "ja": "3.16.  EMBEDDED PDV"
    },
    {
      "indent": 3,
      "text": "A value of the EMBEDDED PDV type is encoded according to the corresponding SEQUENCE type defined in Clause 33.5 of X.680 [8] (see [15] for equivalent ABNF).",
      "ja": "EMBEDDED PDV型の値が符号化されるX.680の節33.5に定義された対応する配列の種類に応じて、[8]（等価ABNFのための[15]を参照）。"
    },
    {
      "indent": 6,
      "text": "EmbeddedPDVValue = SequenceValue",
      "ja": "埋め込みPD値=シーケンス値"
    },
    {
      "indent": 0,
      "text": "3.17. EXTERNAL",
      "section_title": true,
      "ja": "3.17.  EXTERNAL"
    },
    {
      "indent": 3,
      "text": "A value of the EXTERNAL type is encoded according to the corresponding SEQUENCE type defined in Clause 8.18.1 of X.690 [12] (see [15] for equivalent ABNF).",
      "ja": "EXTERNAL型の値がX.690 [12]の節8.18.1に定義された対応する配列のタイプに応じて符号化される（等価ABNFのための[15]を参照）。"
    },
    {
      "indent": 6,
      "text": "ExternalValue = SequenceValue",
      "ja": "ExternalValue = SequenceValue"
    },
    {
      "indent": 0,
      "text": "3.18. INSTANCE OF",
      "section_title": true,
      "ja": "3.18. のインスタンス"
    },
    {
      "indent": 3,
      "text": "A value of the INSTANCE OF type is encoded according to the corresponding SEQUENCE type defined in Annex C of X.681 [9].",
      "ja": "型のインスタンスの値は、X.681 [9]の附属書Cに定義された対応する配列のタイプに応じて符号化されます。"
    },
    {
      "indent": 6,
      "text": "InstanceOfValue = SequenceValue",
      "ja": "InstanceOfValue = SequenceValue"
    },
    {
      "indent": 0,
      "text": "3.19. REAL",
      "section_title": true,
      "ja": "3.19. リアル"
    },
    {
      "indent": 3,
      "text": "A value of the REAL type MUST be encoded as \"0\" if it is zero, otherwise it is encoded as the special value <PLUS-INFINITY>, the special value <MINUS-INFINITY>, an optionally signed <realnumber>, or as a value of the corresponding SEQUENCE type for REAL defined in Clause 20.5 of X.680 [8] (see [15] for equivalent ABNF).",
      "ja": "それがゼロであれば特別な値<マイナスINFINITY>、そうでない場合は、特別な値<PLUS-INFINITY>としてコード化され、「0」として符号化されなければならない実数型の値、必要に応じて署名された<実数>、又はX.680の節20.5に定義されたREALための対応する配列型の値[8]（等価ABNFのための[15]を参照）。"
    },
    {
      "indent": 6,
      "text": "RealValue = \"0\" ; zero REAL value / PLUS-INFINITY ; positive infinity / MINUS-INFINITY ; negative infinity / realnumber ; positive base 10 REAL value / \"-\" realnumber ; negative base 10 REAL value / SequenceValue ; non-zero REAL value, base 2 or 10",
      "ja": "RealValue = \"0\";ゼロの実数値/ PLUS-INFINITY。正の無限大/ MINUS-INFINITY;負の無限大/実数。正ベース10の実数値/「 - 」実数。負基部10 REAL値/ SequenceValue。非ゼロの実数値、ベース2又は10"
    },
    {
      "indent": 6,
      "text": "realnumber = mantissa exponent mantissa = (positive-number [ \".\" *decimal-digit ]) / ( \"0.\" *(\"0\") positive-number ) exponent = \"E\" ( \"0\" / ([ \"-\" ] positive-number))",
      "ja": "実数=仮数指数仮数=（正の数[*小数桁の \"\"]）/（ \"0\" *（ \"0\"）正の数）指数= \"E\"（ \"0\" /（[「 - \"]正の数））"
    },
    {
      "indent": 6,
      "text": "PLUS-INFINITY = %x50.4C.55.53.2D.49.4E.46.49.4E.49.54.59 ; \"PLUS-INFINITY\" MINUS-INFINITY = %x4D.49.4E.55.53.2D.49.4E.46.49.4E.49.54.59 ; \"MINUS-INFINITY\"",
      "ja": "PLUS-INFINITY =％50.ChTs.55.53.2D.chya.ChE.chsh.chya.ChE.chya.54.59。 \"PLUS-INFINITY\" マイナス無限=％hchd.chya.ChE.55.53.2D.chya.ChE.chsh.chya.ChE.49.54.59。 \"MINUS-INFINITY\""
    },
    {
      "indent": 0,
      "text": "3.20. Variant Encodings",
      "section_title": true,
      "ja": "3.20. バリアントエンコーディング"
    },
    {
      "indent": 3,
      "text": "The values of some named complex ASN.1 types have special string encodings. These special encodings are always used instead of the encoding that would otherwise apply based on the ASN.1 type definition.",
      "ja": "いくつかの名前の複雑なASN.1タイプの値は、特別な文字列のエンコーディングを持っています。これらの特別なエンコーディングがなく、常にそうでない場合はASN.1型定義に基づいて適用されるエンコーディングの使用されています。"
    },
    {
      "indent": 6,
      "text": "VariantEncoding = RDNSequenceValue / RelativeDistinguishedNameValue / ORAddressValue",
      "ja": "VariantEncoding = RDNSequenceValue / RelativeDistinguishedNameValue / ORAddressValue"
    },
    {
      "indent": 3,
      "text": "A value of the RDNSequence type, i.e., a distinguished name, is encoded according to the <RDNSequenceValue> rule, as a quoted LDAPDN character string. The character string is first derived according to the <distinguishedName> rule in Section 3 of RFC 2253 [5], and then encoded as if it were a UTF8String value, i.e., between double quotes with any embedded double quotes escaped by being repeated.",
      "ja": "RDNSequenceタイプ、すなわち、識別名の値は、引用LDAPDN文字列として、<RDNSequenceValue>規則に従って符号化されます。文字列は、最初の[5] RFC 2253のセクション3における<distinguishedNameの>ルールに従って導出され、それが繰り返されることでエスケープ任意埋め込み二重引用符で二重引用符の間にUTF8Stringを値、すなわち、であるかのように符号化されます。"
    },
    {
      "indent": 6,
      "text": "RDNSequenceValue = StringValue",
      "ja": "RDNSequenceValue = STRINGVALUE"
    },
    {
      "indent": 3,
      "text": "A RelativeDistinguishedName value that is not part of an RDNSequence value is encoded according to the <RelativeDistinguishedNameValue> rule as a quoted character string. The character string is first derived according to the <name-component> rule in Section 3 of RFC 2253 [5], and then encoded as if it were a UTF8String value.",
      "ja": "RDNSequence値の一部ではないRelativeDistinguishedName値は引用符で囲まれた文字列として<RelativeDistinguishedNameValue>規則に従って符号化されます。文字列は、最初の[5] RFC 2253のセクション3で<名前成分>ルールに従って得られ、それはUTF8Stringを値であるかのように符号化されます。"
    },
    {
      "indent": 6,
      "text": "RelativeDistinguishedNameValue = StringValue",
      "ja": "RelativeDistinguishedNameValue = STRINGVALUE"
    },
    {
      "indent": 3,
      "text": "A value of the ORAddress type is encoded according to the <ORAddressValue> rule as a quoted character string. The character string is first derived according to the textual representation of MTS.ORAddress from RFC 2156 [2], and then encoded as if it were an IA5String value.",
      "ja": "ORAddressタイプの値が引用符で囲まれた文字列として<ORAddressValue>規則に従って符号化されます。文字列は、最初の[2] RFC 2156からMTS.ORAddressのテキスト表現に従って得られ、それはIA5String値であるかのように符号化されます。"
    },
    {
      "indent": 6,
      "text": "ORAddressValue = StringValue",
      "ja": "ORAddressValue = STRINGVALUE"
    },
    {
      "indent": 0,
      "text": "4. GSER Transfer Syntax",
      "section_title": true,
      "ja": "4. GSER転送構文"
    },
    {
      "indent": 3,
      "text": "The following OBJECT IDENTIFIER has been assigned by Adacel Technologies, under an arc assigned to Adacel by Standards Australia, to identify the Generic String Encoding Rules:",
      "ja": "以下のオブジェクト識別子は、一般的な文字列の符号化規則を識別するために、標準オーストラリアでAdacelに割り当てられたアークの下で、Adacel Technologies社によって設定されています。"
    },
    {
      "indent": 6,
      "text": "{ 1 2 36 79672281 0 0 }",
      "ja": "｛ １ ２ ３６ ７９６７２２８１ ０ ０ ｝"
    },
    {
      "indent": 3,
      "text": "This OBJECT IDENTIFIER would be used, for example, to describe the transfer syntax for a GSER encoded data-value in an EMBEDDED PDV value.",
      "ja": "このオブジェクト識別子は、埋め込まれたPDV値のGSERコード化されたデータ値のための転送構文を記述するために、例えば、使用されるであろう。"
    },
    {
      "indent": 0,
      "text": "5. Security Considerations",
      "section_title": true,
      "ja": "5.セキュリティについての考慮事項"
    },
    {
      "indent": 3,
      "text": "The Generic String Encoding Rules do not define a canonical encoding. That is, a transformation from a GSER encoding into some other encoding (e.g., BER) and back into GSER will not necessarily reproduce the original GSER octet encoding. Therefore, GSER MUST NOT be used where a canonical encoding is needed.",
      "ja": "一般的な文字列の符号化規則は、標準的なエンコーディングを定義していません。すなわち、いくつかの他の符号化（例えば、BER）にGSERエンコーディングから変換され、バックGSERに必ずしも元のGSERオクテット符号化を再現しないであろう。標準的なエンコーディングが必要なところしたがって、GSERを使用してはいけません。"
    },
    {
      "indent": 3,
      "text": "Furthermore, GSER does not necessarily enable the exact octet encoding of values of the TeletexString, VideotexString, GraphicString or GeneralString types to be reconstructed, so a transformation from a Distinguished Encoding Rules (DER) [12] encoding to GSER and back to DER may not reproduce the original DER encoding. Therefore, GSER MUST NOT be used to re-encode, whether for storage or transmission, ASN.1 abstract values whose original binary encoding must be recoverable. Such recovery is needed for the verification of digital signatures. In such cases, protocols ought to use DER or a DER-reversible encoding.",
      "ja": "また、GSERは必ずしも識別符号化規則（DER）から、そう変換を再構成するTeletexString、VideotexString、GraphicString又はGeneralString型の値の正確なオクテット符号化を可能にしない[12]バックDERにGSERに符号化し、しないかもしれません元DERエンコーディングを再現。したがって、GSERは、その元のバイナリエンコーディング回復可能でなければならないASN.1抽象値は、記憶又は伝送のためかどうか、再エンコードするために使用してはいけません。このような回復は、デジタル署名の検証に必要とされています。このような場合、プロトコルは、DERまたはDER-可逆符号化を使用するべきです。"
    },
    {
      "indent": 3,
      "text": "When interpreting security-sensitive fields, and in particular fields used to grant or deny access, implementations MUST ensure that any comparisons are done on the underlying abstract value, regardless of the particular encoding used.",
      "ja": "セキュリティに敏感なフィールドを解釈する際に、アクセスを許可または拒否するために使用される特定のフィールドに、実装にかかわらず、使用される特定の符号化の任意の比較が、基礎となる抽象値で行われていることを確認しなければなりません。"
    },
    {
      "indent": 0,
      "text": "6. References",
      "section_title": true,
      "ja": "6.参照"
    },
    {
      "indent": 0,
      "text": "6.1. Normative References",
      "section_title": true,
      "ja": "6.1. 引用規格"
    },
    {
      "indent": 3,
      "text": "[1] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[1]ブラドナーのは、S.は、BCP 14、RFC 2119、1997年3月の \"RFCsにおける使用のためのレベルを示すために\"。"
    },
    {
      "indent": 3,
      "text": "[2] Kille, S., \"MIXER (Mime Internet X.400 Enhanced Relay): Mapping between X.400 and RFC 822/MIME\", RFC 2156, January 1998.",
      "ja": "[2] Kille、S.、 \"MIXER（MIMEインターネットX.400拡張リレー）：X.400およびRFC 822 / MIMEの間のマッピング\"、RFC 2156、1998年1月。"
    },
    {
      "indent": 3,
      "text": "[3] Crocker, D. and P. Overell, \"Augmented BNF for Syntax Specifications: ABNF\", RFC 2234, November 1997.",
      "ja": "[3]クロッカー、D.、およびP. Overell、 \"構文仕様のための増大しているBNF：ABNF\"、RFC 2234、1997年11月。"
    },
    {
      "indent": 3,
      "text": "[4] Wahl, M., Coulbeck, A., Howes, T. and S. Kille, \"Lightweight Directory Access Protocol (v3): Attribute Syntax Definitions\", RFC 2252, December 1997.",
      "ja": "[4]ワール、M.、Coulbeck、A.、ハウズ、T.およびS. Kille、 \"軽量のディレクトリアクセスプロトコル（V3）：属性の構文定義\"、RFC 2252、1997年12月。"
    },
    {
      "indent": 3,
      "text": "[5] Wahl, M., Kille S. and T. Howes. \"Lightweight Directory Access Protocol (v3): UTF-8 String Representation of Distinguished Names\", RFC 2253, December 1997.",
      "ja": "[5]ワール、M.、Kille S.とT.ハウズ。 \"ライトウェイトディレクトリアクセスプロトコル（v3の）：識別名のUTF-8文字列表現\"、RFC 2253、1997年12月。"
    },
    {
      "indent": 3,
      "text": "[6] Yergeau, F., \"UTF-8, a transformation format of ISO 10646\", RFC 2279, January 1998.",
      "ja": "[6] Yergeau、F.、 \"UTF-8、ISO 10646の変換フォーマット\"、RFC 2279、1998年1月。"
    },
    {
      "indent": 3,
      "text": "[7] ITU-T Recommendation X.520 (1993) | ISO/IEC 9594-6:1994, Information Technology - Open Systems Interconnection - The Directory: Selected attribute types",
      "ja": "[7] ITU-T勧告X.520（1993）| ISO / IEC 9594から6：1994、情報技術 - 開放型システム間相互接続 - ディレクトリ：選択した属性タイプ"
    },
    {
      "indent": 3,
      "text": "[8] ITU-T Recommendation X.680 (07/02) | ISO/IEC 8824-1:2002 Information technology - Abstract Syntax Notation One (ASN.1): Specification of basic notation",
      "ja": "[8] ITU-T勧告X.680（7月2日）| ISO / IEC 8824から1：2002情報技術 - 抽象構文記法1（ASN.1）：基本的な表記法の仕様"
    },
    {
      "indent": 3,
      "text": "[9] ITU-T Recommendation X.681 (07/02) | ISO/IEC 8824-2:2002 Information technology - Abstract Syntax Notation One (ASN.1): Information object specification",
      "ja": "[9] ITU-T勧告X.681（7月2日）| ISO / IEC 8824から2：2002情報技術 - 抽象構文記法1（ASN.1）：情報オブジェクトの仕様"
    },
    {
      "indent": 3,
      "text": "[10] ITU-T Recommendation X.682 (07/02) | ISO/IEC 8824-3:2002 Information technology - Abstract Syntax Notation One (ASN.1): Constraint specification",
      "ja": "[10] ITU-T勧告X.682（7月2日）| ISO / IEC 8824から3：2002情報技術 - 抽象構文記法1（ASN.1）：制約の指定"
    },
    {
      "indent": 3,
      "text": "[11] ITU-T Recommendation X.683 (07/02) | ISO/IEC 8824-4:2002 Information technology - Abstract Syntax Notation One (ASN.1): Parameterization of ASN.1 specifications",
      "ja": "[11] ITU-T勧告X.683（7月2日）| ISO / IEC 8824から4：2002情報技術 - 抽象構文記法1（ASN.1）：ASN.1仕様のパラメータ化"
    },
    {
      "indent": 3,
      "text": "[12] ITU-T Recommendation X.690 (07/02) | ISO/IEC 8825-1:2002 Information technology - ASN.1 encoding rules: Specification of Basic Encoding Rules (BER), Canonical Encoding Rules (CER) and Distinguished Encoding Rules (DER)",
      "ja": "[12] ITU-T勧告X.690（7月2日）| ISO / IEC 8825から1：2002情報技術 -  ASN.1エンコーディング規則：基本符号化規則（BER）の仕様、Canonicalの符号化規則（CER）、および顕著な符号化規則（DER）"
    },
    {
      "indent": 0,
      "text": "6.2. Informative References",
      "section_title": true,
      "ja": "6.2. 参考文献"
    },
    {
      "indent": 3,
      "text": "[13] Hovey, R. and S. Bradner, \"The Organizations Involved in the IETF Standards Process\", BCP 11, RFC 2028, October 1996.",
      "ja": "[13] Hovey、R.およびS.ブラドナー、BCP 11、RFC 2028、1996年10月 \"IETF標準化プロセスに関与する組織\"。"
    },
    {
      "indent": 3,
      "text": "[14] Hodges, J. and R. Morgan, \"Lightweight Directory Access Protocol (v3): Technical Specification\", RFC 3377, September 2002.",
      "ja": "[14]ホッジス、J.とR.モルガン、 \"ライトウェイトディレクトリアクセスプロトコル（v3の）：技術仕様\"、RFC 3377、2002年9月。"
    },
    {
      "indent": 3,
      "text": "[15] Legg, S., \"Common Elements of Generic String Encoding Rules (GSER) Encodings\", RFC 3642, October 2003.",
      "ja": "[15]レッグ、S.​​、 \"汎用文字符号化規則の共通要素（GSER）エンコーディング\"、RFC 3642、2003年10月。"
    },
    {
      "indent": 3,
      "text": "[16] ITU-T Recommendation X.500 (1993) | ISO/IEC 9594-1:1994, Information Technology - Open Systems Interconnection - The Directory: Overview of concepts, models and services",
      "ja": "[16] ITU-T勧告X.500（1993）| ISO / IEC 9594から1：1994、情報技術 - 開放型システム間相互接続 - ディレクトリ：概念、モデルとサービスの概要"
    },
    {
      "indent": 0,
      "text": "7. Intellectual Property Notice",
      "section_title": true,
      "ja": "7.知的財産権に関するお知らせ"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any intellectual property or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; neither does it represent that it has made any effort to identify any such rights. Information on the IETF's procedures with respect to rights in standards-track and standards-related documentation can be found in BCP-11. Copies of claims of rights made available for publication and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementors or users of this specification can be obtained from the IETF Secretariat.",
      "ja": "IETFは、そのような権限下で、ライセンスがたりないかもしれない可能性があるためにどの本書または程度に記載されている技術の実装や使用に関係すると主張される可能性があります任意の知的財産やその他の権利の有効性または範囲に関していかなる位置を取りません利用可能。また、そうした権利を特定するために取り組んできたことを表していないん。スタンダードトラックおよび標準関連文書における権利に関するIETFの手続きの情報は、BCP-11に記載されています。権利の主張のコピーは、出版のために利用可能とライセンスの保証が利用できるようにする、または本仕様の実装者または利用者が、そのような所有権の使用のための一般的なライセンスまたは許可を取得するために作られた試みの結果を得ることができますIETF事務局から。"
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights which may cover technology that may be required to practice this standard. Please address the information to the IETF Executive Director.",
      "ja": "IETFは、その注意にこの標準を実践するために必要な場合があり技術をカバーすることができる任意の著作権、特許または特許出願、またはその他の所有権を持ってすべての利害関係者を招待します。 IETF専務に情​​報を扱ってください。"
    },
    {
      "indent": 0,
      "text": "8. Author's Address",
      "section_title": true,
      "ja": "8.著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Steven Legg Adacel Technologies Ltd. 250 Bay Street Brighton, Victoria 3186 AUSTRALIA",
      "ja": "スティーブン・レッグ・Adacelテクノロジーズ株式会社250ベイストリートブライトン、ビクトリア3186オーストラリア"
    },
    {
      "indent": 3,
      "text": "Phone: +61 3 8530 7710 Fax: +61 3 8530 7888 EMail: steven.legg@adacel.com.au",
      "ja": "電話：+61 3 8530 7710ファックス：+61 3 8530 7888 Eメール：steven.legg@adacel.com.au"
    },
    {
      "indent": 0,
      "text": "9. Full Copyright Statement",
      "section_title": true,
      "ja": "9.完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2003). All Rights Reserved.",
      "ja": "著作権（C）インターネット協会（2003）。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the Internet Society or other Internet organizations, except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed, or as required to translate it into languages other than English.",
      "ja": "この文書とその翻訳は、コピーして他の人に提供し、それ以外についてはコメントまたは派生物は、いかなる種類の制限もなく、全体的にまたは部分的に、準備コピーし、公表して配布することができることを説明したり、その実装を支援することができます、上記の著作権表示とこの段落は、すべてのそのようなコピーや派生物に含まれていることを条件とします。しかし、この文書自体は著作権のための手順はで定義されている場合には、インターネット標準を開発するために必要なものを除き、インターネットソサエティもしくは他のインターネット関連団体に著作権情報や参照を取り除くなど、どのような方法で変更されないかもしれませんインターネット標準化プロセスが続く、または英語以外の言語に翻訳するために、必要に応じなければなりません。"
    },
    {
      "indent": 3,
      "text": "The limited permissions granted above are perpetual and will not be revoked by the Internet Society or its successors or assignees.",
      "ja": "上記の制限は永続的なものであり、インターネットソサエティもしくはその継承者や譲渡者によって取り消されることはありません。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein is provided on an \"AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書とここに含まれている情報は、基礎とインターネットソサエティおよびインターネットエンジニアリングタスクフォースはすべての保証を否認し、明示または黙示、その情報の利用がない任意の保証を含むがこれらに限定されない「として、」上に設けられています特定の目的への権利または商品性または適合性の黙示の保証を侵害します。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "ja": "RFC Editor機能のための基金は現在、インターネット協会によって提供されます。"
    }
  ]
}