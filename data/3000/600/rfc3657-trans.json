{
  "title": {
    "text": "RFC 3657 - Use of the Camellia Encryption Algorithm in Cryptographic Message Syntax (CMS)",
    "ja": "RFC 3657 - 暗号メッセージ構文における椿暗号化アルゴリズム（CMS）の利用"
  },
  "number": 3657,
  "created_at": "2019-10-20 17:22:44.418467+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                          S. Moriai\nRequest for Comments: 3657              Sony Computer Entertainment Inc.\nCategory: Standards Track                                        A. Kato\n                                                NTT Software Corporation\n                                                            January 2004",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 15,
      "text": "Use of the Camellia Encryption Algorithm\n  in Cryptographic Message Syntax (CMS)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "このメモの位置付け"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "ja": "この文書は、インターネットコミュニティのためのインターネット標準トラックプロトコルを指定し、改善のための議論と提案を要求します。このプロトコルの標準化状態と状態への「インターネット公式プロトコル標準」（STD 1）の最新版を参照してください。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2004). All Rights Reserved.",
      "ja": "著作権（C）インターネット協会（2004）。全著作権所有。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document specifies the conventions for using the Camellia encryption algorithm for encryption with the Cryptographic Message Syntax (CMS).",
      "ja": "この文書は、暗号メッセージ構文（CMS）と暗号化のための椿の暗号化アルゴリズムを使用するための規則を指定します。"
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "This document specifies the conventions for using the Camellia encryption algorithm [CamelliaSpec] for encryption with the Cryptographic Message Syntax (CMS) [CMS]. The relevant object identifiers (OIDs) and processing steps are provided so that Camellia may be used in the CMS specification (RFC 3369, RFC 3370) for content and key encryption.",
      "ja": "この文書は、暗号メッセージ構文（CMS）[CMS]で暗号化のために[CamelliaSpec]カメリア暗号化アルゴリズムを使用するための規則を指定します。カメリアは、コンテンツと鍵暗号化のためのCMS仕様（RFC 3369、RFC 3370）で使用できるように、関連するオブジェクト識別子（OID）と処理工程が設けられています。"
    },
    {
      "indent": 3,
      "text": "Note: This work was done when the first author worked for NTT.",
      "ja": "注意：最初の著者がNTTに勤務する場合、この作業が行われました。"
    },
    {
      "indent": 0,
      "text": "1.1. Camellia",
      "section_title": true,
      "ja": "1.1。カメリア"
    },
    {
      "indent": 3,
      "text": "Camellia was jointly developed by Nippon Telegraph and Telephone Corporation and Mitsubishi Electric Corporation in 2000. Camellia specifies the 128-bit block size and 128-, 192-, and 256-bit key sizes, the same interface as the Advanced Encryption Standard (AES). Camellia is characterized by its suitability for both software and hardware implementations as well as its high level of security. From a practical viewpoint, it is designed to enable flexibility in software and hardware implementations on 32-bit processors widely used over the Internet and many applications, 8-bit processors used in smart cards, cryptographic hardware, embedded systems, and so on [CamelliaTech]. Moreover, its key setup time is excellent, and its key agility is superior to that of AES.",
      "ja": "椿は、共同2000ツバキに日本電信電話株式会社と三菱電機株式会社によって開発された128ビットのブロックサイズと128、192、および256ビットのキーサイズ、高度暗号化標準（AES）と同じインタフェースを指定。椿は、ソフトウェアとハ​​ードウェア実装の両方のためのその適合性、ならびにセキュリティの高いレベルによって特徴づけられます。実用的な観点から、等[CamelliaTechに、32ビット広くインターネット上で使用されるプロセッサと、多くのアプリケーション、スマートカード、暗号ハードウェア、組込みシステムで使用される8ビットプロセッサ上のソフトウェアとハ​​ードウェア実装の柔軟性を可能にするために設計されています]。また、そのキーセットアップ時間が優れており、その主要な機敏さは、AESのものよりも優れています。"
    },
    {
      "indent": 3,
      "text": "Camellia has been scrutinized by the wide cryptographic community during several projects for evaluating crypto algorithms. In particular, Camellia was selected as a recommended cryptographic primitive by the EU NESSIE (New European Schemes for Signatures, Integrity and Encryption) project [NESSIE] and also included in the list of cryptographic techniques for Japanese e-Government systems which were selected by the Japan CRYPTREC (Cryptography Research and Evaluation Committees) [CRYPTREC].",
      "ja": "椿は、暗号アルゴリズムを評価するためのいくつかのプロジェクトの間に広い暗号コミュニティによって精査されています。特に、椿はEU NESSIE（署名、整合性と暗号化のための新しいヨーロッパのスキーム）プロジェクト[NESSIE]が推奨する暗号プリミティブとして選ばれたともで選択された日本の電子政府システムのための暗号技術のリストに含ま日本CRYPTREC（暗号研究評価委員会）[CRYPTREC]。"
    },
    {
      "indent": 0,
      "text": "1.2. Terminology",
      "section_title": true,
      "ja": "1.2。用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document (in uppercase, as shown) are to be interpreted as described in [RFC2119].",
      "ja": "キーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、（図示のように、大文字で）この文書では、 \"SHOULD\"、 \"推奨\" \"NOT SHOULD\"、 \"MAY\"、 \"OPTIONAL\" は可能になっています[RFC2119]で説明されるように解釈されます。"
    },
    {
      "indent": 0,
      "text": "2. Object Identifiers for Content and Key Encryption",
      "section_title": true,
      "ja": "コンテンツとキーの暗号化のための2.オブジェクト識別子"
    },
    {
      "indent": 3,
      "text": "This section provides the OIDs and processing information necessary for Camellia to be used for content and key encryption in CMS.",
      "ja": "このセクションでは、OIDを提供し、椿がCMSでコンテンツと鍵暗号化に使用するために必要な情報を処理します。"
    },
    {
      "indent": 3,
      "text": "Camellia is added to the set of optional symmetric encryption algorithms in CMS by providing two classes of unique object identifiers (OIDs). One OID class defines the content encryption algorithms and the other defines the key encryption algorithms. Thus a CMS agent can apply Camellia either for content or key encryption by selecting the corresponding object identifier, supplying the required parameter, and starting the program code.",
      "ja": "椿は、一意のオブジェクト識別子（OID）の2つのクラスを提供することにより、CMSにおける任意の対称暗号化アルゴリズムのセットに追加されます。一つのOIDクラスは、コンテンツの暗号化アルゴリズムを定義し、他の主要な暗号化アルゴリズムを定義します。従ってCMS剤はいずれか、対応するオブジェクト識別子を選択し、必要なパラメータを供給し、そのプログラムコードを起動することにより、コンテンツまたは鍵暗号化のためにカメリアを適用することができます。"
    },
    {
      "indent": 0,
      "text": "2.1. OIDs for Content Encryption",
      "section_title": true,
      "ja": "2.1。コンテンツの暗号化のためのOID"
    },
    {
      "indent": 3,
      "text": "Camellia is added to the set of symmetric content encryption algorithms defined in [CMSALG]. The Camellia content-encryption algorithm, in Cipher Block Chaining (CBC) mode, for the three different key sizes are identified by the following object identifiers:",
      "ja": "椿は、[CMSALG]で定義された対称コンテンツ暗号化アルゴリズムのセットに追加されます。三つの異なるキーサイズのCBC（Cipher Block Chaining）モードでの椿のコンテンツ暗号化アルゴリズムは、以下のオブジェクト識別子によって識別されます。"
    },
    {
      "indent": 6,
      "text": "id-camellia128-cbc OBJECT IDENTIFIER ::=\n    { iso(1) member-body(2) 392 200011 61 security(1)\n      algorithm(1) symmetric-encryption-algorithm(1)\n      camellia128-cbc(2) }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-camellia192-cbc OBJECT IDENTIFIER ::=\n    { iso(1) member-body(2) 392 200011 61 security(1)\n      algorithm(1) symmetric-encryption-algorithm(1)\n      camellia192-cbc(3) }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-camellia256-cbc OBJECT IDENTIFIER ::=\n    { iso(1) member-body(2) 392 200011 61 security(1)\n      algorithm(1) symmetric-encryption-algorithm(1)\n      camellia256-cbc(4) }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The AlgorithmIdentifier parameters field MUST be present, and the parameters field MUST contain the value of IV:",
      "ja": "AlgorithmIdentifierパラメータフィールドが存在しなければならない、とパラメータフィールドは、IVの値を含まなければなりません："
    },
    {
      "indent": 6,
      "text": "CamelliaCBCParameter ::= CamelliaIV  --  Initialization Vector",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "CamelliaIV ::= OCTET STRING (SIZE(16))",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The plain text is padded according to Section 6.3 of [CMS].",
      "ja": "プレーンテキストは、[CMS]のセクション6.3に応じてパディングされます。"
    },
    {
      "indent": 0,
      "text": "2.2. OIDs for Key Encryption",
      "section_title": true,
      "ja": "2.2。キーの暗号化のためのOID"
    },
    {
      "indent": 3,
      "text": "The key-wrap/unwrap procedures used to encrypt/decrypt a Camellia content-encryption key (CEK) with a Camellia key-encryption key (KEK) are specified in Section 3. Generation and distribution of key-encryption keys are beyond the scope of this document.",
      "ja": "の範囲を超えてキーラップ/暗号化/カメリア鍵暗号鍵（KEK）とカメリアコンテンツ暗号鍵（CEK）を復号化するために使用アンラップ手順は第3世代とキー暗号化キーの分布で指定されていますこのドキュメント。"
    },
    {
      "indent": 3,
      "text": "The Camellia key-encryption algorithm has the following object identifier:",
      "ja": "椿鍵暗号化アルゴリズムには、以下のオブジェクト識別子があります。"
    },
    {
      "indent": 5,
      "text": "id-camellia128-wrap OBJECT IDENTIFIER ::=\n            { iso(1) member-body(2) 392 200011 61 security(1)\n              algorithm(1) key-wrap-algorithm(3)\n              camellia128-wrap(2) }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "id-camellia192-wrap OBJECT IDENTIFIER ::=\n            { iso(1) member-body(2) 392 200011 61 security(1)\n               algorithm(1) key-wrap-algorithm(3)\n               camellia192-wrap(3) }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "id-camellia256-wrap OBJECT IDENTIFIER ::=\n            { iso(1) member-body(2) 392 200011 61 security(1)\n              algorithm(1) key-wrap-algorithm(3)\n              camellia256-wrap(4) }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "In all cases the parameters field of AlgorithmIdentifier MUST be ABSENT, because the key wrapping procedure itself defines how and when to use an IV. The OID gives the KEK key size, but does not make any statements as to the size of the wrapped Camellia CEK. Implementations MAY use different KEK and CEK sizes. Implementations MUST support the CEK and the KEK having the same length. If different lengths are supported, the KEK MUST be of equal or greater length than the CEK.",
      "ja": "キーラッピング手順自体はIVを使用する方法と時期を定義しているため、すべてのケースでのAlgorithmIdentifierのパラメータフィールドは、存在してはなりません。 OIDは、KEKキーサイズを与えるが、ラップ椿CEKのサイズに関していかなる発言を行いません。実装は異なるKEKとCEKのサイズを使用するかもしれません。実装は、同じ長さのCEKとKEKをサポートしなければなりません。異なる長さがサポートされている場合、KEKは、CEKと同等以上の長さでなければなりません。"
    },
    {
      "indent": 0,
      "text": "3. Key Wrap Algorithm",
      "section_title": true,
      "ja": "3.キーラップアルゴリズム"
    },
    {
      "indent": 3,
      "text": "Camellia key wrapping and unwrapping are done in conformance with the AES key wrap algorithm [RFC3394], because Camellia and AES have the same block and key sizes, i.e., the block size of 128 bits and key sizes of 128, 192, and 256 bits.",
      "ja": "椿鍵ラッピングと椿とAESは、同じブロックと鍵のサイズを持っているので、アンラッピングは、AESキーラップアルゴリズム[RFC3394]に準拠して行われ、すなわち、128ビットおよび128の鍵サイズ、192、および256ビットのブロックサイズ。"
    },
    {
      "indent": 0,
      "text": "3.1. Notation and Definitions",
      "section_title": true,
      "ja": "3.1。表記と定義"
    },
    {
      "indent": 3,
      "text": "The following notation is used in the description of the key wrapping algorithms:",
      "ja": "以下の表記は、鍵ラッピングアルゴリズムの説明で使用されます。"
    },
    {
      "indent": 3,
      "text": "Camellia(K, W) Encrypt W using the Camellia codebook with key K Camellia-1(K, W) Decrypt W using the Camellia codebook with key K MSB(j, W) Return the most significant j bits of W LSB(j, W) Return the least significant j bits of W B1 ^ B2 The bitwise exclusive or (XOR) of B1 and B2 B1 | B2 Concatenate B1 and B2 K The key-encryption key K n The number of 64-bit key data blocks s The number of steps in the wrapping process, s = 6n P[i] The ith plaintext key data block C[i] The ith ciphertext data block A The 64-bit integrity check register R[i] An array of 64-bit registers where i = 0, 1, 2, ..., n",
      "ja": "鍵Kツバキ-1（K、W）と椿コードブックを用いてWツバキ（K、W）を暗号化Wの最上位jビットLSB（jは、戻りキーK MSB（J、W）と椿コードブックを用いてW解読W）WのB1 ^ B2の最下位jビットB1とB2 B1の）排他的論理和（XORビット単位を返します| B2の連結しB1及びB2 Kキー暗号鍵K Nラッピングプロセスにおけるステップの64ビットの鍵データブロックの数の数、S = 6N P [i]はi番目の平文キーデータブロックC [I] i番目の暗号文データブロックA 64ビットの完全性は、Rレジスタチェック[i]はi = 0、1、2、...、n個の64ビット・レジスタのアレイを"
    },
    {
      "indent": 3,
      "text": "A[t], R[t][i] The contents of registers A and R[i] after encryption step t. IV The 64-bit initial value used during the wrapping process.",
      "ja": "[T]、R [T] [i]をレジスタAとRの内容[i]を暗号化ステップtました。 IV包装プロセス中に使用される64ビットの初期値を。"
    },
    {
      "indent": 3,
      "text": "In the key wrap algorithm, the concatenation function will be used to concatenate 64-bit quantities to form the 128-bit input to the Camellia codebook. The extraction functions will be used to split the 128-bit output from the Camellia codebook into two 64-bit quantities.",
      "ja": "キーラップアルゴリズムでは、連結機能は、カメリアコードブック128ビットの入力を形成するために、64ビットの数量を連結するために使用されます。抽出機能は、2つの64ビット量にカメリアコードブックから128ビットの出力を分割するために使用されるであろう。"
    },
    {
      "indent": 0,
      "text": "3.2. Camellia Key Wrap",
      "section_title": true,
      "ja": "3.2。椿キーラップ"
    },
    {
      "indent": 3,
      "text": "Key wrapping with Camellia is identical to Section 2.2.1 of [RFC3394] with \"AES\" replaced by \"Camellia\".",
      "ja": "椿との主なラッピングは「椿」に置き換え、「AES」と[RFC3394]のセクション2.2.1と同じです。"
    },
    {
      "indent": 3,
      "text": "The inputs to the key wrapping process are the KEK and the plaintext to be wrapped. The plaintext consists of n 64-bit blocks, containing the key data being wrapped. The key wrapping process is described below.",
      "ja": "キーラッピングプロセスへの入力は、KEKと平文をラップすることがあります。平文は、ラップされたキーデータを含む、nは、64ビットのブロックから構成されています。キーラッピング処理について説明します。"
    },
    {
      "indent": 3,
      "text": "Inputs: Plaintext, n 64-bit values {P[1], P[2], ..., P[n]}, and Key, K (the KEK). Outputs: Ciphertext, (n+1) 64-bit values {C[0], C[1], ..., C[n]}.",
      "ja": "入力：平文、nは64ビット値{P [1]、P [2]、...、P [N]}、およびキー、K（KEK）。出力：暗号文、（N + 1）64ビット値{C [0]、C [1]、...、C [N]}。"
    },
    {
      "indent": 3,
      "text": "1) Initialize variables.",
      "ja": "1）変数を初期化します。"
    },
    {
      "indent": 7,
      "text": "Set A[0] to an initial value (see Section 3.4)\nFor i = 1 to n\n     R[0][i] = P[i]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "2) Calculate intermediate values.",
      "ja": "2）中間値を計算します。"
    },
    {
      "indent": 7,
      "text": "For t = 1 to s, where s = 6n\n    A[t] = MSB(64, Camellia(K, A[t-1] | R[t-1][1])) ^ t\n    For i = 1 to n-1\n        R[t][i] = R[t-1][i+1]\n    R[t][n] = LSB(64, Camellia(K, A[t-1] | R[t-1][1]))",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "3) Output the results.",
      "ja": "3）出力結果。"
    },
    {
      "indent": 7,
      "text": "Set C[0] = A[t]\nFor i = 1 to n\n    C[i] = R[t][i]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "An alternative description of the key wrap algorithm involves indexing rather than shifting. This approach allows one to calculate the wrapped key in place, avoiding the rotation in the previous description. This produces identical results and is more easily implemented in software.",
      "ja": "キーラップアルゴリズムの代替説明は、インデックスではなくシフトを必要とします。このアプローチは、1つの前の説明で回転を避け、代わりにラップされた鍵を計算することができます。これは、同じ結果を生成し、より簡単にソフトウェアで実装されています。"
    },
    {
      "indent": 3,
      "text": "Inputs: Plaintext, n 64-bit values {P[1], P[2], ..., P[n]}, and Key, K (the KEK). Outputs: Ciphertext, (n+1) 64-bit values {C[0], C[1], ..., C[n]}.",
      "ja": "入力：平文、nは64ビット値{P [1]、P [2]、...、P [N]}、およびキー、K（KEK）。出力：暗号文、（N + 1）64ビット値{C [0]、C [1]、...、C [N]}。"
    },
    {
      "indent": 3,
      "text": "1) Initialize variables.",
      "ja": "1）変数を初期化します。"
    },
    {
      "indent": 7,
      "text": "Set A = IV, an initial value (see Section 3.4)\nFor i = 1 to n\n    R[i] = P[i]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "2) Calculate intermediate values.",
      "ja": "2）中間値を計算します。"
    },
    {
      "indent": 7,
      "text": "For j = 0 to 5\n    For i=1 to n\n        B = Camellia(K, A | R[i])\n        A = MSB(64, B) ^ t where t = (n*j)+i\n        R[i] = LSB(64, B)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "3) Output the results.",
      "ja": "3）出力結果。"
    },
    {
      "indent": 7,
      "text": "Set C[0] = A\nFor i = 1 to n\n    C[i] = R[i]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "3.3. Camellia Key Unwrap",
      "section_title": true,
      "ja": "3.3。椿キーアンラップ"
    },
    {
      "indent": 3,
      "text": "Key unwrapping with Camellia is identical to Section 2.2.2 of [RFC3394], with \"AES\" replaced by \"Camellia\".",
      "ja": "椿とキーアンラップは「椿」に置き換え、「AES」に、[RFC3394]のセクション2.2.2と同じです。"
    },
    {
      "indent": 3,
      "text": "The inputs to the unwrap process are the KEK and (n+1) 64-bit blocks of ciphertext consisting of previously wrapped key. It returns n blocks of plaintext consisting of the n 64-bit blocks of the decrypted key data.",
      "ja": "アンラップ・プロセスへの入力は、KEKと（N + 1）以前にラップされたキーからなる暗号文の64ビットブロックです。これは、復号化されたキーデータのn個の64ビットブロックからなる平文のn個のブロックを返します。"
    },
    {
      "indent": 3,
      "text": "Inputs: Ciphertext, (n+1) 64-bit values {C[0], C[1], ..., C[n]}, and Key, K (the KEK). Outputs: Plaintext, n 64-bit values {P[1], P[2], ..., P[n]}.",
      "ja": "入力：暗号文、（N + 1）64ビット値{C [0]、C [1]、...、C [N]}、およびキー、K（KEK）。出力：平文、nは64ビット値{P [1]、P [2]、...、P [N]}。"
    },
    {
      "indent": 3,
      "text": "1) Initialize variables.",
      "ja": "1）変数を初期化します。"
    },
    {
      "indent": 7,
      "text": "Set A[s] = C[0] where s = 6n\nFor i = 1 to n\n    R[s][i] = C[i]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "2) Calculate the intermediate values.",
      "ja": "2）中間値を計算します。"
    },
    {
      "indent": 7,
      "text": "For t = s to 1\n    A[t-1] = MSB(64, Camellia-1(K, ((A[t] ^ t) | R[t][n]))\n    R[t-1][1] = LSB(64, Camellia-1(K, ((A[t]^t) | R[t][n]))\n    For i = 2 to n\n        R[t-1][i] = R[t][i-1]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "3) Output the results.",
      "ja": "3）出力結果。"
    },
    {
      "indent": 7,
      "text": "If A[0] is an appropriate initial value (see Section 3.4),\nThen\n    For i = 1 to n\n        P[i] = R[0][i]\nElse\n    Return an error",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The unwrap algorithm can also be specified as an index based operation, allowing the calculations to be carried out in place. Again, this produces the same results as the register shifting approach.",
      "ja": "アンラップアルゴリズムは、計算が代わりに行うことができるように、インデックスベースのオペレーションとして指定することができます。再び、このアプローチをシフトレジスタと同じ結果を生成します。"
    },
    {
      "indent": 3,
      "text": "Inputs: Ciphertext, (n+1) 64-bit values {C[0], C[1], ..., C[n]}, and Key, K (the KEK). Outputs: Plaintext, n 64-bit values {P[0], P[1], ..., P[n]}.",
      "ja": "入力：暗号文、（N + 1）64ビット値{C [0]、C [1]、...、C [N]}、およびキー、K（KEK）。出力：平文、nは64ビット値{P [0]、P [1]、...、P [N]}。"
    },
    {
      "indent": 3,
      "text": "1) Initialize variables.",
      "ja": "1）変数を初期化します。"
    },
    {
      "indent": 7,
      "text": "Set A = C[0]\nFor i = 1 to n\n    R[i] = C[i]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "2) Calculate intermediate values.",
      "ja": "2）中間値を計算します。"
    },
    {
      "indent": 7,
      "text": "For j = 5 to 0\n    For i = n to 1\n        B = Camellia-1(K, (A ^ t) | R[i]) where t = n*j+i\n        A = MSB(64, B)\n        R[i] = LSB(64, B)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "3) Output results.",
      "ja": "3）出力結果。"
    },
    {
      "indent": 3,
      "text": "If A is an appropriate initial value (see Section 3.4), Then For i = 1 to n P[i] = R[i] Else Return an error",
      "ja": "Aは、適切な初期値（セクション3.4を参照）である場合には、N Pのi = 1の場合は、[i]はR [i]は、エラーを返しそうでなければ="
    },
    {
      "indent": 0,
      "text": "3.4. Key Data Integrity -- the Initial Value",
      "section_title": true,
      "ja": "3.4。キーデータの整合性 - 初期値"
    },
    {
      "indent": 3,
      "text": "The initial value (IV) refers to the value assigned to A[0] in the first step of the wrapping process. This value is used to obtain an integrity check on the key data. In the final step of the unwrapping process, the recovered value of A[0] is compared to the expected value of A[0]. If there is a match, the key is accepted as valid, and the unwrapping algorithm returns it. If there is not a match, then the key is rejected, and the unwrapping algorithm returns an error.",
      "ja": "初期値（IV）は、包装プロセスの最初のステップで[0] Aに割り当てられた値を指します。この値は、キーデータの整合性チェックを取得するために使用されます。アンラッピングプロセスの最終工程で、Aの回収値は[0] [0]の期待値と比較されます。一致がある場合は、キーが有効なものとして受け入れられ、そしてアンラッピングアルゴリズムはそれを返しています。一致がない場合、キーは拒否され、アンラッピングアルゴリズムはエラーを返します。"
    },
    {
      "indent": 3,
      "text": "The exact properties achieved by this integrity check depend on the definition of the initial value. Different applications may call for somewhat different properties; for example, whether there is need to determine the integrity of key data throughout its lifecycle or just when it is unwrapped. This specification defines a default initial value that supports integrity of the key data during the period it is wrapped (in Section 3.4.1). Provision is also made to support alternative initial values (in Section 3.4.2).",
      "ja": "この整合性チェックによって達成正確な性質は、初期値の定義に依存します。異なるアプリケーションは多少異なる特性のために呼び出すことができます。例えば、あるかどうかをそのライフサイクルを通じての鍵データの整合性を決定するためか、アンラップされたちょうどその時必要です。この仕様は、それが（3.4.1項）包まれる期間中にキーデータの整合性をサポートしているデフォルトの初期値を定義します。引当金は、（3.4.2項で）代替の初期値をサポートするために行われます。"
    },
    {
      "indent": 0,
      "text": "3.4.1. Default Initial Value",
      "section_title": true,
      "ja": "3.4.1。デフォルトの初期値"
    },
    {
      "indent": 3,
      "text": "The default initial value (IV) is defined to be the hexadecimal constant:",
      "ja": "デフォルトの初期値（IV）は、16進定数であると定義されます。"
    },
    {
      "indent": 6,
      "text": "A[0] = IV = A6A6A6A6A6A6A6A6",
      "ja": "[0] = IV = A6A6A6A6A6A6A6A6"
    },
    {
      "indent": 3,
      "text": "The use of a constant as the IV supports a strong integrity check on the key data during the period that it is wrapped. If unwrapping produces A[0] = A6A6A6A6A6A6A6A6, then the chance that the key data is corrupt is 2^-64. If unwrapping produces A[0] any other value, then the unwrap must return an error and not return any key data.",
      "ja": "IVとして定数を使用することは、それがラップされている期間中のキーデータに強い整合性チェックをサポートしています。アンラップ[0] = A6A6A6A6A6A6A6A6を生成する場合、鍵データが破損している可能性が2 ^ -64です。アンラップ[0]は他の値を生成する場合、次いでアンラップはエラーを返し、任意のキーデータを返してはなりません。"
    },
    {
      "indent": 0,
      "text": "3.4.2. Alternative Initial Values",
      "section_title": true,
      "ja": "3.4.2。代替の初期値"
    },
    {
      "indent": 3,
      "text": "When the key wrap is used as part of a larger key management protocol or system, the desired scope for data integrity may be more than just the key data or the desired duration for more than just the period that it is wrapped. Also, if the key data is not just a Camellia key, it may not always be a multiple of 64 bits. Alternative definitions of the initial value can be used to address such problems. According to [RFC3394], NIST will define alternative initial values in future key management publications as needed. In order to accommodate a set of alternatives that may evolve over time, key wrap implementations that are not application-specific will require some flexibility in the way that the initial value is set and tested.",
      "ja": "キーラップが大きな鍵管理プロトコルまたはシステムの一部として使用される場合、データの整合性のための所望の範囲は、単に鍵データまたはそれが包まれていることだけ時間以上のための所望の持続時間より以上であってもよいです。キーデータがちょうど椿キーでない場合にも、それは常に64ビットの倍数ではないかもしれません。初期値の代わりの定義は、このような問題に対処するために使用することができます。必要に応じて、[RFC3394]によると、NISTは、将来の鍵管理の出版物に代替の初期値を定義します。時間をかけて進化することが選択肢の集合に対応するために、アプリケーション固有ではありませんキーラップの実装では、初期値が設定され、テストされていることのようにある程度の柔軟性が必要になります。"
    },
    {
      "indent": 0,
      "text": "4. SMIMECapabilities Attribute",
      "section_title": true,
      "ja": "4. SMIMEケーパビリティは、属性"
    },
    {
      "indent": 3,
      "text": "An S/MIME client SHOULD announce the set of cryptographic functions it supports by using the S/MIME capabilities attribute. This attribute provides a partial list of OIDs of cryptographic functions and MUST be signed by the client. The functions' OIDs SHOULD be logically separated in functional categories and MUST be ordered with respect to their preference.",
      "ja": "S / MIMEクライアントは、それが機能属性S / MIMEを使用してサポートしている暗号化機能のセットを発表すべきです。この属性は、暗号化関数のOIDの部分的なリストを提供し、クライアントによって署名されなければなりません。関数OIDは、論理的に機能的なカテゴリに分離されるべきであり、彼らの好みに関して注文しなければなりません。"
    },
    {
      "indent": 3,
      "text": "RFC 2633 [RFC2633], Section 2.5.2 defines the SMIMECapabilities signed attribute (defined as a SEQUENCE of SMIMECapability SEQUENCEs) to be used to specify a partial list of algorithms that the software announcing the SMIMECapabilities can support.",
      "ja": "RFC 2633 [RFC2633]は、セクション2.5.2（SMIMECapability配列の配列として定義される）SMIMEケーパビリティ署名された属性は、ソフトウェアがサポートできるSMIMEケーパビリティを発表アルゴリズムの部分的なリストを指定するために使用する定義します。"
    },
    {
      "indent": 3,
      "text": "If an S/MIME client is required to support symmetric encryption with Camellia, the capabilities attribute MUST contain the Camellia OID specified above in the category of symmetric algorithms. The parameter associated with this OID MUST be CamelliaSMimeCapability.",
      "ja": "S / MIMEクライアントが椿と対称暗号化をサポートするために必要な場合は、機能は対称アルゴリズムのカテゴリで上に指定された椿OIDを含まなければならない属性。このOIDに関連するパラメータはCamelliaSMimeCapabilityでなければなりません。"
    },
    {
      "indent": 6,
      "text": "CamelliaSMimeCapabilty ::= NULL",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The SMIMECapability SEQUENCE representing Camellia MUST be DER-encoded as the following hexadecimal strings:",
      "ja": "カメリアを表すSMIMECapability配列は、次の進文字列としてDER-符号化されなければなりません。"
    },
    {
      "indent": 6,
      "text": "Key Size Capability 128 30 0f 06 0b 2a 83 08 8c 9a 4b 3d 01 01 01 02 05 00 196 30 0f 06 0b 2a 83 08 8c 9a 4b 3d 01 01 01 03 05 00 256 30 0f 06 0b 2a 83 08 8c 9a 4b 3d 01 01 01 04 05 00",
      "ja": "キーサイズ機能128 30 0F 06 0B 2A 83 08 8C 9A 4B 3D 01 01 01 02 05 00 196 30 0F 06 0B 2A 83 08 8C 9A 4B 3D 01 01 01 03 05 00 256 30 0F 06 0B 2A 83 08 8C 9A 4bと3D 01 01 01 04 05 00"
    },
    {
      "indent": 3,
      "text": "When a sending agent creates an encrypted message, it has to decide which type of encryption algorithm to use. In general the decision process involves information obtained from the capabilities lists included in messages received from the recipient, as well as other information such as private agreements, user preferences, legal restrictions, and so on. If users require Camellia for symmetric encryption, it MUST be supported by the S/MIME clients on both the sending and receiving side, and it MUST be set in the user preferences.",
      "ja": "送信エージェントが暗号化されたメッセージを作成するときに、暗号化アルゴリズムのタイプを使用するかを決定する必要があります。一般的には決定プロセスは、このようなように民間協定、ユーザーの好み、法的規制、およびなどの受信者から受信したメッセージだけでなく、他の情報に含まれる機能のリストから得られた情報を含んでいます。ユーザーは対称暗号化のための椿が必要な場合は、送信側と受信側の両方にS / MIMEクライアントでサポートしなければならない、それはユーザーの好みに設定しなければなりません。"
    },
    {
      "indent": 0,
      "text": "5. Security Considerations",
      "section_title": true,
      "ja": "5.セキュリティについての考慮事項"
    },
    {
      "indent": 3,
      "text": "This document specifies the use of Camellia for encrypting the content of a CMS message and for encrypting the symmetric key used to encrypt the content of a CMS message, and the other mechanisms are the same as the existing ones. Therefore, the security considerations described in the CMS specifications [CMS][CMSALG] and the AES key wrap algorithm [RFC3394] can be applied to this document. No security problem has been found on Camellia [CRYPTREC][NESSIE].",
      "ja": "この文書では、CMSメッセージの内容を暗号化するための、およびCMSメッセージの内容を暗号化するために使用される対称鍵を暗号化するための椿の使用を指定し、他のメカニズムは、既存のものと同じです。そのため、CMSの仕様[CMS] [CMSALG]とAESキーラップアルゴリズム[RFC3394]で説明されたセキュリティ上の考慮事項は、この文書に適用することができます。セキュリティ上の問題は椿[CRYPTREC] [NESSIE]で発見されていなかったん。"
    },
    {
      "indent": 0,
      "text": "6. Intellectual Property Statement",
      "section_title": true,
      "ja": "6.知的財産権に関する声明"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any intellectual property or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; neither does it represent that it has made any effort to identify any such rights. Information on the IETF's procedures with respect to rights in standards-track and standards-related documentation can be found in BCP-11. Copies of claims of rights made available for publication and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementors or users of this specification can be obtained from the IETF Secretariat.",
      "ja": "IETFは、そのような権限下で、ライセンスがたりないかもしれない可能性があるためにどの本書または程度に記載されている技術の実装や使用に関係すると主張される可能性があります任意の知的財産やその他の権利の有効性または範囲に関していかなる位置を取りません利用可能。また、そうした権利を特定するために取り組んできたことを表していないん。スタンダードトラックおよび標準関連文書における権利に関するIETFの手続きの情報は、BCP-11に記載されています。権利の主張のコピーは、出版のために利用可能とライセンスの保証が利用できるようにする、または本仕様の実装者または利用者が、そのような所有権の使用のための一般的なライセンスまたは許可を取得するために作られた試みの結果を得ることができますIETF事務局から。"
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights which may cover technology that may be required to practice this standard. Please address the information to the IETF Executive Director.",
      "ja": "IETFは、その注意にこの標準を実践するために必要な場合があり技術をカバーすることができる任意の著作権、特許または特許出願、またはその他の所有権を持ってすべての利害関係者を招待します。 IETF専務に情​​報を扱ってください。"
    },
    {
      "indent": 3,
      "text": "The IETF has been notified of intellectual property rights claimed in regard to some or all of the specification contained in this document. For more information consult the online list of claimed rights.",
      "ja": "IETFは、この文書に含まれる仕様の一部またはすべてについて記載知的財産権について通知されています。詳細については、要求された権利のオンラインリストを参照してください。"
    },
    {
      "indent": 0,
      "text": "7. References",
      "section_title": true,
      "ja": "7.参考"
    },
    {
      "indent": 0,
      "text": "7.1. Normative References",
      "section_title": true,
      "ja": "7.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[CamelliaSpec] Aoki, K., Ichikawa, T., Kanda, M., Matsui, M., Moriai, S., Nakajima, J., and Tokita, T., \"Specification of Camellia - a 128-bit Block Cipher\". http://info.isl.ntt.co.jp/camellia/",
      "ja": "【CamelliaSpec]青木、K.、市川、T.、神田、M.、松井、M.、Moriai、S.、中島、J.、及び時田、T.、「椿の仕様 -  128ビットのブロック暗号」。 http://info.isl.ntt.co.jp/camellia/"
    },
    {
      "indent": 3,
      "text": "[CMS] Housley, R., \"Cryptographic Message Syntax\", RFC 3369, August 2002.",
      "ja": "[CMS] Housley氏、R.、 \"暗号メッセージ構文\"、RFC 3369、2002年8月。"
    },
    {
      "indent": 3,
      "text": "[CMSALG] Housley, R., \"Cryptographic Message Syntax (CMS) Algorithms\", RFC 3370, August 2002.",
      "ja": "[CMSALG] Housley氏、R.、 \"暗号メッセージ構文（CMS）アルゴリズム\"、RFC 3370、2002年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC2633] Ramsdell, B., Editor, \"S/MIME Version 3 Message Specification\", RFC 2633, June 1999.",
      "ja": "[RFC2633] Ramsdell、B.、エディタ、 \"S / MIMEバージョン3メッセージ仕様\"、RFC 2633、1999年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC3565] Schaad, J., \"Use of the Advanced Encryption Standard (AES) Encryption Algorithm in Cryptographic Message Syntax (CMS)\", RFC 3565, July 2003.",
      "ja": "[RFC3565] Schaad、J.、RFC 3565、2003年7月 \"のAdvanced Encryption Standard（AES）暗号メッセージ構文（CMS）での暗号化アルゴリズムの使用\"。"
    },
    {
      "indent": 3,
      "text": "[RFC3394] Schaad, J. and R. Housley, \"Advanced Encryption Standard (AES) Key Wrap Algorithm\", RFC 3394, September 2002.",
      "ja": "[RFC3394] Schaad、J.とR. Housley氏、 \"高度暗号化標準（AES）キーラップアルゴリズム\"、RFC 3394、2002年9月。"
    },
    {
      "indent": 0,
      "text": "7.2. Informative References",
      "section_title": true,
      "ja": "7.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[DES] National Institute of Standards and Technology. FIPS Pub 46: Data Encryption Standard. 15 January 1977.",
      "ja": "標準技術[DES]国立研究所。 FIPSパブ46：データ暗号化規格。 1977年1月15日。"
    },
    {
      "indent": 3,
      "text": "[CamelliaTech] Aoki, K., Ichikawa, T., Kanda, M., Matsui, M., Moriai, S., Nakajima, J., and Tokita, T., \"Camellia: A 128-Bit Block Cipher Suitable for Multiple Platforms - Design and Analysis -\", In Selected Areas in Cryptography, 7th Annual International Workshop, SAC 2000, August 2000, Proceedings, Lecture Notes in Computer Science 2012, pp.39-56, Springer-Verlag, 2001.",
      "ja": "【CamelliaTech]青木、K.、市川、T.、神田、M.、松井、M.、Moriai、S.、中島、J.、及び時田、T.、「椿：に適した128ビットブロック暗号複数のプラットフォーム - 設計と解析 - 」、選択した地域では暗号化では、第7回国際ワークショップ、SAC 2000、2000年8月、議事録、2012年コンピュータサイエンス、pp.39-56、シュプリンガー・フェアラーク、2001年の講義ノート。"
    },
    {
      "indent": 3,
      "text": "[CRYPTREC] Information-technology Promotion Agency (IPA), Japan, CRYPTREC. http://www.ipa.go.jp/security/enc/CRYPTREC/index-e.html",
      "ja": "[CRYPTREC]情報処理推進機構（IPA）、日本、CRYPTREC。 http://www.ipa.go.jp/security/enc/CRYPTREC/index-e.html"
    },
    {
      "indent": 3,
      "text": "[NESSIE] New European Schemes for Signatures, Integrity and Encryption (NESSIE) project. http://www.cryptonessie.org",
      "ja": "署名、整合性と暗号化（NESSIE）プロジェクトの[NESSIE]新しいヨーロッパのスキーム。 http://www.cryptonessie.org"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 0,
      "text": "Appendix A ASN.1 Module",
      "ja": "付録A ASN.1モジュール"
    },
    {
      "indent": 0,
      "text": "CamelliaEncryptionAlgorithmInCMS { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9) smime(16) modules(0) id-mod-cms-camellia(23) }",
      "ja": "CamelliaEncryptionAlgorithmInCMS {ISO（1）部材本体（2）米国（840）RSADSI（113549）PKCS（1）pkcs9（9）SMIME（16）モジュール（0）ID-MOD-CMS-椿（23）}"
    },
    {
      "indent": 0,
      "text": "DEFINITIONS IMPLICIT TAGS ::=\nBEGIN",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "-- Camellia using CBC-chaining mode for key sizes of 128, 192, 256",
      "ja": " -  128、192、256のキーサイズのCBCチェインモードを使用して、椿"
    },
    {
      "indent": 0,
      "text": "id-camellia128-cbc OBJECT IDENTIFIER ::=\n    { iso(1) member-body(2) 392 200011 61 security(1)\n      algorithm(1) symmetric-encryption-algorithm(1)\n      camellia128-cbc(2) }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "id-camellia192-cbc OBJECT IDENTIFIER ::=\n   { iso(1) member-body(2) 392 200011 61 security(1)\n     algorithm(1) symmetric-encryption-algorithm(1)\n     camellia192-cbc(3) }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "id-camellia256-cbc OBJECT IDENTIFIER ::=\n   { iso(1) member-body(2) 392 200011 61 security(1)\n     algorithm(1) symmetric-encryption-algorithm(1)\n     camellia256-cbc(4) }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "-- Camellia-IV is the parameter for all the above object identifiers.",
      "ja": " - 椿-IVは、上記のすべてのオブジェクト識別子のためのパラメータです。"
    },
    {
      "indent": 0,
      "text": "Camellia-IV ::= OCTET STRING (SIZE(16))",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "-- Camellia S/MIME Capabilty parameter for all the above object -- identifiers.",
      "ja": " - 椿のS / MIME Capabilty上記のすべてのオブジェクトのパラメータ - 識別子。"
    },
    {
      "indent": 0,
      "text": "CamelliaSMimeCapability ::= NULL",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "-- Camellia Key Wrap Algorithm identifiers - Parameter is absent.",
      "ja": " - 椿キーラップアルゴリズム識別子 - パラメータが存在しません。"
    },
    {
      "indent": 0,
      "text": "id-camellia128-wrap OBJECT IDENTIFIER ::=\n    { iso(1) member-body(2) 392 200011 61 security(1)\n      algorithm(1) key-wrap-algorithm(3)\n      camellia128-wrap(2) }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "id-camellia192-wrap OBJECT IDENTIFIER ::=\n    { iso(1) member-body(2) 392 200011 61 security(1)\n      algorithm(1) key-wrap-algorithm(3)\n      camellia192-wrap(3) }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "id-camellia256-wrap OBJECT IDENTIFIER ::=\n    { iso(1) member-body(2) 392 200011 61 security(1)\n      algorithm(1) key-wrap-algorithm(3)\n      camellia256-wrap(4) }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "END",
      "ja": "終わり"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Shiho Moriai Sony Computer Entertainment Inc. Phone: +81-3-6438-7523 Fax: +81-3-6438-8629 EMail: camellia@isl.ntt.co.jp (Camellia team) shiho@rd.scei.sony.co.jp (Shiho Moriai)",
      "ja": "Shiho Moriai Sony Computer Entertainment Inc. Phone: +81-3-6438-7523 Fax: +81-3-6438-8629 EMail: camellia@isl.ntt.co.jp (Camellia team) shiho@rd.scei.sony.co.jp (Shiho Moriai)"
    },
    {
      "indent": 3,
      "text": "Akihiro Kato NTT Software Corporation Phone: +81-45-212-7934 Fax: +81-45-212-9800 EMail: akato@po.ntts.co.jp",
      "ja": "明宏加藤NTTソフトウェア株式会社電話：+ 81-45-212-7934ファックス：+ 81-45-212-9800 Eメール：akato@po.ntts.co.jp"
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2004). All Rights Reserved.",
      "ja": "著作権（C）インターネット協会（2004）。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the Internet Society or other Internet organizations, except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed, or as required to translate it into languages other than English.",
      "ja": "この文書とその翻訳は、コピーして他の人に提供し、それ以外についてはコメントまたは派生物は、いかなる種類の制限もなく、全体的にまたは部分的に、準備コピーし、公表して配布することができることを説明したり、その実装を支援することができます、上記の著作権表示とこの段落は、すべてのそのようなコピーや派生物に含まれていることを条件とします。しかし、この文書自体は著作権のための手順はで定義されている場合には、インターネット標準を開発するために必要なものを除き、インターネットソサエティもしくは他のインターネット関連団体に著作権情報や参照を取り除くなど、どのような方法で変更されないかもしれませんインターネット標準化プロセスが続く、または英語以外の言語に翻訳するために、必要に応じなければなりません。"
    },
    {
      "indent": 3,
      "text": "The limited permissions granted above are perpetual and will not be revoked by the Internet Society or its successors or assignees.",
      "ja": "上記の制限は永続的なものであり、インターネットソサエティもしくはその継承者や譲渡者によって取り消されることはありません。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein is provided on an \"AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書とここに含まれている情報は、基礎とインターネットソサエティおよびインターネットエンジニアリングタスクフォースはすべての保証を否認し、明示または黙示、その情報の利用がない任意の保証を含むがこれらに限定されない「として、」上に設けられています特定の目的への権利または商品性または適合性の黙示の保証を侵害します。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "了承"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "ja": "RFC Editor機能のための基金は現在、インターネット協会によって提供されます。"
    }
  ]
}