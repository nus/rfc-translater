{
  "title": {
    "text": "RFC 3875 - The Common Gateway Interface (CGI) Version 1.1",
    "ja": "RFC 3875 - Common Gateway Interface（CGI）バージョン1.1"
  },
  "number": 3875,
  "created_at": "2019-10-24 16:41:31.698684+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                        D. Robinson\nRequest for Comments: 3875                                       K. Coar\nCategory: Informational                   The Apache Software Foundation\n                                                            October 2004",
      "raw": true
    },
    {
      "indent": 13,
      "text": "The Common Gateway Interface (CGI) Version 1.1",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "このメモの位置付け"
    },
    {
      "indent": 3,
      "text": "This memo provides information for the Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited.",
      "ja": "このメモはインターネットコミュニティのための情報を提供します。それはどんな種類のインターネット標準を指定しません。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2004).",
      "ja": "著作権（C）インターネット協会（2004）。"
    },
    {
      "indent": 0,
      "text": "IESG Note",
      "ja": "IESG注意"
    },
    {
      "indent": 3,
      "text": "This document is not a candidate for any level of Internet Standard. The IETF disclaims any knowledge of the fitness of this document for any purpose, and in particular notes that it has not had IETF review for such things as security, congestion control or inappropriate interaction with deployed protocols. The RFC Editor has chosen to publish this document at its discretion. Readers of this document should exercise caution in evaluating its value for implementation and deployment.",
      "ja": "この文書はインターネットStandardのどんなレベルの候補ではありません。 IETFは、いかなる目的のために、それはセキュリティ、輻輳制御または展開されたプロトコルとの不適切な相互作用のようなもののためにIETFのレビューを受けていない特定のノートに、このドキュメントのフィットネスの知識を負いません。 RFC Editorはその裁量でこの文書を公開することを選択しました。このドキュメントの読者は実現と展開のためにその値を評価する際に警戒する必要があります。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "The Common Gateway Interface (CGI) is a simple interface for running external programs, software or gateways under an information server in a platform-independent manner. Currently, the supported information servers are HTTP servers.",
      "ja": "CGI（Common Gateway Interface）は、プラットフォームに依存しない方法で情報サーバの下で外部プログラム、ソフトウェアまたはゲートウェイを実行するためのシンプルなインターフェイスです。現在、サポートされている情報サーバは、HTTPサーバです。"
    },
    {
      "indent": 3,
      "text": "The interface has been in use by the World-Wide Web (WWW) since 1993. This specification defines the 'current practice' parameters of the 'CGI/1.1' interface developed and documented at the U.S. National Centre for Supercomputing Applications. This document also defines the use of the CGI/1.1 interface on UNIX(R) and other, similar systems.",
      "ja": "インターフェイスは、この仕様は、スーパーコンピュータ応用のために、米国国立センターで開発され、文書化「CGI / 1.1」インタフェースの「現在のプラクティス」のパラメータを定義し、1993年以来、ワールド・ワイド・ウェブ（WWW）によって使用されています。この文書はまた、UNIX（R）、および他の同様のシステム上のCGI / 1.1インタフェースの使用を定義します。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction. . . . . . . . . . . . . . . . . . . . . . . . .   4\n    1.1. Purpose  . . . . . . . . . . . . . . . . . . . . . . . .   4\n    1.2. Requirements . . . . . . . . . . . . . . . . . . . . . .   4\n    1.3. Specifications . . . . . . . . . . . . . . . . . . . . .   4\n    1.4. Terminology  . . . . . . . . . . . . . . . . . . . . . .   5",
      "raw": true
    },
    {
      "indent": 3,
      "text": "2.  Notational Conventions and Generic Grammar. . . . . . . . . .   5\n    2.1. Augmented BNF  . . . . . . . . . . . . . . . . . . . . .   5\n    2.2. Basic Rules  . . . . . . . . . . . . . . . . . . . . . .   6\n    2.3. URL Encoding . . . . . . . . . . . . . . . . . . . . . .   7",
      "raw": true
    },
    {
      "indent": 3,
      "text": "3.  Invoking the Script . . . . . . . . . . . . . . . . . . . . .   8\n    3.1. Server Responsibilities  . . . . . . . . . . . . . . . .   8\n    3.2. Script Selection . . . . . . . . . . . . . . . . . . . .   9\n    3.3. The Script-URI . . . . . . . . . . . . . . . . . . . . .   9\n    3.4. Execution  . . . . . . . . . . . . . . . . . . . . . . .  10",
      "raw": true
    },
    {
      "indent": 3,
      "text": "4.  The CGI Request . . . . . . . . . . . . . . . . . . . . . . .  10\n    4.1. Request Meta-Variables . . . . . . . . . . . . . . . . .  10\n         4.1.1.  AUTH_TYPE. . . . . . . . . . . . . . . . . . . .  11\n         4.1.2.  CONTENT_LENGTH . . . . . . . . . . . . . . . . .  12\n         4.1.3.  CONTENT_TYPE . . . . . . . . . . . . . . . . . .  12\n         4.1.4.  GATEWAY_INTERFACE. . . . . . . . . . . . . . . .  13\n         4.1.5.  PATH_INFO. . . . . . . . . . . . . . . . . . . .  13\n         4.1.6.  PATH_TRANSLATED. . . . . . . . . . . . . . . . .  14\n         4.1.7.  QUERY_STRING . . . . . . . . . . . . . . . . . .  15\n         4.1.8.  REMOTE_ADDR. . . . . . . . . . . . . . . . . . .  15\n         4.1.9.  REMOTE_HOST. . . . . . . . . . . . . . . . . . .  16\n         4.1.10. REMOTE_IDENT . . . . . . . . . . . . . . . . . .  16\n         4.1.11. REMOTE_USER. . . . . . . . . . . . . . . . . . .  16\n         4.1.12. REQUEST_METHOD . . . . . . . . . . . . . . . . .  17\n         4.1.13. SCRIPT_NAME. . . . . . . . . . . . . . . . . . .  17\n         4.1.14. SERVER_NAME. . . . . . . . . . . . . . . . . . .  17\n         4.1.15. SERVER_PORT. . . . . . . . . . . . . . . . . . .  18\n         4.1.16. SERVER_PROTOCOL. . . . . . . . . . . . . . . . .  18\n         4.1.17. SERVER_SOFTWARE. . . . . . . . . . . . . . . . .  19\n         4.1.18. Protocol-Specific Meta-Variables . . . . . . . .  19\n    4.2. Request Message-Body . . . . . . . . . . . . . . . . . .  20\n    4.3. Request Methods  . . . . . . . . . . . . . . . . . . . .  20\n         4.3.1.  GET. . . . . . . . . . . . . . . . . . . . . . .  20\n         4.3.2.  POST . . . . . . . . . . . . . . . . . . . . . .  21\n         4.3.3.  HEAD . . . . . . . . . . . . . . . . . . . . . .  21\n         4.3.4.  Protocol-Specific Methods. . . . . . . . . . . .  21\n    4.4. The Script Command Line. . . . . . . . . . . . . . . . .  21",
      "raw": true
    },
    {
      "indent": 3,
      "text": "5.  NPH Scripts . . . . . . . . . . . . . . . . . . . . . . . . .  22\n    5.1. Identification . . . . . . . . . . . . . . . . . . . . .  22\n    5.2. NPH Response . . . . . . . . . . . . . . . . . . . . . .  22",
      "raw": true
    },
    {
      "indent": 3,
      "text": "6.  CGI Response. . . . . . . . . . . . . . . . . . . . . . . . .  23\n    6.1. Response Handling. . . . . . . . . . . . . . . . . . . .  23\n    6.2. Response Types . . . . . . . . . . . . . . . . . . . . .  23\n         6.2.1.  Document Response. . . . . . . . . . . . . . . .  23\n         6.2.2.  Local Redirect Response. . . . . . . . . . . . .  24\n         6.2.3.  Client Redirect Response . . . . . . . . . . . .  24\n         6.2.4.  Client Redirect Response with Document . . . . .  24\n    6.3. Response Header Fields . . . . . . . . . . . . . . . . .  25\n         6.3.1.  Content-Type . . . . . . . . . . . . . . . . . .  25\n         6.3.2.  Location . . . . . . . . . . . . . . . . . . . .  26\n         6.3.3.  Status . . . . . . . . . . . . . . . . . . . . .  26\n         6.3.4.  Protocol-Specific Header Fields. . . . . . . . .  27\n         6.3.5.  Extension Header Fields. . . . . . . . . . . . .  27\n    6.4. Response Message-Body. . . . . . . . . . . . . . . . . .  28",
      "raw": true
    },
    {
      "indent": 3,
      "text": "7.  System Specifications . . . . . . . . . . . . . . . . . . . .  28\n    7.1. AmigaDOS . . . . . . . . . . . . . . . . . . . . . . . .  28\n    7.2. UNIX . . . . . . . . . . . . . . . . . . . . . . . . . .  28\n    7.3. EBCDIC/POSIX . . . . . . . . . . . . . . . . . . . . . .  29",
      "raw": true
    },
    {
      "indent": 3,
      "text": "8.  Implementation. . . . . . . . . . . . . . . . . . . . . . . .  29\n    8.1. Recommendations for Servers. . . . . . . . . . . . . . .  29\n    8.2. Recommendations for Scripts. . . . . . . . . . . . . . .  30",
      "raw": true
    },
    {
      "indent": 3,
      "text": "9.  Security Considerations . . . . . . . . . . . . . . . . . . .  30\n    9.1. Safe Methods . . . . . . . . . . . . . . . . . . . . . .  30\n    9.2. Header Fields Containing Sensitive Information . . . . .  31\n    9.3. Data Privacy . . . . . . . . . . . . . . . . . . . . . .  31\n    9.4. Information Security Model . . . . . . . . . . . . . . .  31\n    9.5. Script Interference with the Server. . . . . . . . . . .  31\n    9.6. Data Length and Buffering Considerations . . . . . . . .  32\n    9.7. Stateless Processing . . . . . . . . . . . . . . . . . .  32\n    9.8. Relative Paths . . . . . . . . . . . . . . . . . . . . .  33\n    9.9. Non-parsed Header Output . . . . . . . . . . . . . . . .  33",
      "raw": true
    },
    {
      "indent": 3,
      "text": "10. Acknowledgements. . . . . . . . . . . . . . . . . . . . . . .  33",
      "section_title": true,
      "raw": true
    },
    {
      "indent": 3,
      "text": "11. References. . . . . . . . . . . . . . . . . . . . . . . . . .  33\n    11.1. Normative References. . . . . . . . . . . . . . . . . .  33\n    11.2. Informative References. . . . . . . . . . . . . . . . .  34",
      "raw": true
    },
    {
      "indent": 3,
      "text": "12. Authors' Addresses. . . . . . . . . . . . . . . . . . . . . .  35",
      "section_title": true,
      "raw": true
    },
    {
      "indent": 3,
      "text": "13. Full Copyright Statement. . . . . . . . . . . . . . . . . . .  36",
      "section_title": true,
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 0,
      "text": "1.1. Purpose",
      "section_title": true,
      "ja": "1.1。目的"
    },
    {
      "indent": 3,
      "text": "The Common Gateway Interface (CGI) [22] allows an HTTP [1], [4] server and a CGI script to share responsibility for responding to client requests. The client request comprises a Uniform Resource Identifier (URI) [11], a request method and various ancillary information about the request provided by the transport protocol.",
      "ja": "Common Gateway Interface（CGI）[22]はHTTP [1]、[4]のサーバとCGIスクリプトは、クライアントの要求に応答する責任を共有することができます。クライアント要求は、ユニフォームリソース識別子（URI）[11]、要求メソッドおよびトランスポート・プロトコルによって提供される要求に関する各種付属情報を含みます。"
    },
    {
      "indent": 3,
      "text": "The CGI defines the abstract parameters, known as meta-variables, which describe a client's request. Together with a concrete programmer interface this specifies a platform-independent interface between the script and the HTTP server.",
      "ja": "CGIは、クライアントの要求を記述したメタ変数として知られている抽象的パラメータを、定義されています。一緒に具体的なプログラマーインターフェイスを持つ、これはスクリプトとHTTPサーバの間でプラットフォームに依存しないインタフェースを指定します。"
    },
    {
      "indent": 3,
      "text": "The server is responsible for managing connection, data transfer, transport and network issues related to the client request, whereas the CGI script handles the application issues, such as data access and document processing.",
      "ja": "CGIスクリプトは、このようなデータアクセスと文書処理などのアプリケーションの問題を扱うのに対し、サーバーは、クライアントの要求に関連した接続、データ転送、輸送とネットワークの問題を管理する責任があります。"
    },
    {
      "indent": 0,
      "text": "1.2. Requirements",
      "section_title": true,
      "ja": "1.2。必要条件"
    },
    {
      "indent": 3,
      "text": "The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'MAY' and 'OPTIONAL' in this document are to be interpreted as described in BCP 14, RFC 2119 [3].",
      "ja": "キーワード 'MUSTは'、 'てはならない'、 'REQUIRED'、 'SHALL'、 'NOT SHALL'、 'SHOULD'、 'べきではありません'、 '推奨'、 'MAY' と、このドキュメントの '省略可能' にしていますBCP 14、RFC 2119に記載されているように、[3]に解釈されます。"
    },
    {
      "indent": 3,
      "text": "An implementation is not compliant if it fails to satisfy one or more of the 'must' requirements for the protocols it implements. An implementation that satisfies all of the 'must' and all of the 'should' requirements for its features is said to be 'unconditionally compliant'; one that satisfies all of the 'must' requirements but not all of the 'should' requirements for its features is said to be 'conditionally compliant'.",
      "ja": "それが実装されたプロトコルのための「しなければならないの要件の一つ以上を満たすために失敗した場合、実装は準拠していません。その機能のための「必要があるの要件が「無条件に準拠した」と言われての「必見」のすべてとすべてを満たす実装。 「しなければならないの要件ではなく、すべての機能のための「必要があるの要件のすべてを満たすものを「条件付きで対応」であると言われています。"
    },
    {
      "indent": 0,
      "text": "1.3. Specifications",
      "section_title": true,
      "ja": "1.3。仕様"
    },
    {
      "indent": 3,
      "text": "Not all of the functions and features of the CGI are defined in the main part of this specification. The following phrases are used to describe the features that are not specified:",
      "ja": "機能やCGIのすべての機能は、この仕様書の主要部分で定義されていません。次の句が指定されていない機能を記述するために使用されています。"
    },
    {
      "indent": 3,
      "text": "'system-defined' The feature may differ between systems, but must be the same for different implementations using the same system. A system will usually identify a class of operating systems. Some systems are defined in section 7 of this document. New systems may be defined by new specifications without revision of this document.",
      "ja": "「システム定義」機能は、システム間で異なるかもしれないが、同じシステムを使用して、異なる実装のために同じでなければなりません。システムは、通常、オペレーティング・システムのクラスを識別します。いくつかのシステムは、このドキュメントのセクション7で定義されています。新システムでは、この文書の改訂せずに新しい仕様によって定義することができます。"
    },
    {
      "indent": 3,
      "text": "'implementation-defined' The behaviour of the feature may vary from implementation to implementation; a particular implementation must document its behaviour.",
      "ja": "「実装定義」機能の動作は、実現例ごとに異なり得ます。特定の実装では、その動作を文書化しなければなりません。"
    },
    {
      "indent": 0,
      "text": "1.4. Terminology",
      "section_title": true,
      "ja": "1.4。用語"
    },
    {
      "indent": 3,
      "text": "This specification uses many terms defined in the HTTP/1.1 specification [4]; however, the following terms are used here in a sense which may not accord with their definitions in that document, or with their common meaning.",
      "ja": "この仕様は、HTTP / 1.1仕様で定義されている多くの用語を使用する[4]。ただし、以下の用語は、その文書にその定義とアコード、またはその一般的な意味を持つかもしれない意味で使用されています。"
    },
    {
      "indent": 3,
      "text": "'meta-variable' A named parameter which carries information from the server to the script. It is not necessarily a variable in the operating system's environment, although that is the most common implementation.",
      "ja": "「メタ変数」スクリプトに、サーバからの情報を運ぶという名前のパラメータ。それは、最も一般的な実装であるが、それは、必ずしもオペレーティングシステムの環境では変数ではありません。"
    },
    {
      "indent": 3,
      "text": "'script' The software that is invoked by the server according to this interface. It need not be a standalone program, but could be a dynamically-loaded or shared library, or even a subroutine in the server. It might be a set of statements interpreted at run-time, as the term 'script' is frequently understood, but that is not a requirement and within the context of this specification the term has the broader definition stated.",
      "ja": "「スクリプト」このインターフェースによるサーバによって呼び出されるソフトウェア。これは、スタンドアロンのプログラムである必要はありませんが、サーバーで動的にロードされるか、共有ライブラリ、あるいはサブルーチンである可能性があります。用語「スクリプト」が頻繁に理解されているように、それは、実行時に解釈文のセットであるかもしれないが、それは必須ではありません、この仕様のコンテキスト内で用語を述べたより広範な定義があります。"
    },
    {
      "indent": 3,
      "text": "'server' The application program that invokes the script in order to service requests from the client.",
      "ja": "「サーバ」クライアントからのサービス要求するために、スクリプトを呼び出すアプリケーションプログラム。"
    },
    {
      "indent": 0,
      "text": "2. Notational Conventions and Generic Grammar",
      "section_title": true,
      "ja": "2.表記規則と一般的な文法"
    },
    {
      "indent": 0,
      "text": "2.1. Augmented BNF",
      "section_title": true,
      "ja": "2.1。増補BNF"
    },
    {
      "indent": 3,
      "text": "All of the mechanisms specified in this document are described in both prose and an augmented Backus-Naur Form (BNF) similar to that used by RFC 822 [13]. Unless stated otherwise, the elements are case-sensitive. This augmented BNF contains the following constructs:",
      "ja": "この文書で指定された機構の全ては、RFC 822 [13]で使用されるものと同様の散文と拡張バッカスナウア記法（BNF）の両方に記載されています。特に明記しない限り、要素は大文字と小文字が区別されます。これは、BNFには、次の構文が含まれてい増補しました："
    },
    {
      "indent": 3,
      "text": "name = definition The name of a rule and its definition are separated by the equals character ('='). Whitespace is only significant in that continuation lines of a definition are indented.",
      "ja": "名前=定義ルールの名前とその定義を等号文字（「=」）で分離されています。空白がインデントされている定義の継続行で唯一重要です。"
    },
    {
      "indent": 3,
      "text": "\"literal\" Double quotation marks (\") surround literal text, except for a literal quotation mark, which is surrounded by angle-brackets ('<' and '>').",
      "ja": "「リテラル」二重引用符（ \"）は（『<』と『>』）角括弧で囲まれているリテラル引用符を除き、リテラルテキストを囲みます。"
    },
    {
      "indent": 3,
      "text": "rule1 | rule2 Alternative rules are separated by a vertical bar ('|').",
      "ja": "ルール1 |ルール2代替規則は、垂直バー（「|」）で区切られています。"
    },
    {
      "indent": 3,
      "text": "(rule1 rule2 rule3) Elements enclosed in parentheses are treated as a single element.",
      "ja": "括弧で囲まれた（ルール1ルール2ルール3）の要素は、単一の要素として扱われます。"
    },
    {
      "indent": 3,
      "text": "*rule A rule preceded by an asterisk ('*') may have zero or more occurrences. The full form is 'n*m rule' indicating at least n and at most m occurrences of the rule. n and m are optional decimal values with default values of 0 and infinity respectively.",
      "ja": "*アスタリスク（「*」）が先行ルールルールは、ゼロまたはそれ以上の出現を有することができます。完全形は、少なくともnおよびルールの最もm個の出現で示す「N×m個のルール」です。 nおよびmは、それぞれ0と無限大のデフォルト値を持つ任意小数点値です。"
    },
    {
      "indent": 3,
      "text": "[rule] An element enclosed in square brackets ('[' and ']') is optional, and is equivalent to '*1 rule'.",
      "ja": "【ルール】角括弧で囲まれた要素（「[」と「]」）はオプションであり、「* 1ルール」に相当します。"
    },
    {
      "indent": 3,
      "text": "N rule A rule preceded by a decimal number represents exactly N occurrences of the rule. It is equivalent to 'N*N rule'.",
      "ja": "N正確Nルールの発生を表す十進数が先行ルールを支配します。それは「N * Nのルール」に相当します。"
    },
    {
      "indent": 0,
      "text": "2.2. Basic Rules",
      "section_title": true,
      "ja": "2.2。基本的なルール"
    },
    {
      "indent": 3,
      "text": "This specification uses a BNF-like grammar defined in terms of characters. Unlike many specifications which define the bytes allowed by a protocol, here each literal in the grammar corresponds to the character it represents. How these characters are represented in terms of bits and bytes within a system are either system-defined or specified in the particular context. The single exception is the rule 'OCTET', defined below.",
      "ja": "この仕様は、文字の用語で定義されたBNFのような文法を使用しています。プロトコルによって許容されるバイト数を定義する多くの仕様とは異なり、ここで各リテラル文法では、それが表す文字に対応します。これらの文字は、システム内のビットおよびバイトの点でシステム定義のいずれか、または特定のコンテキストに指定されて示されている方法。唯一の例外は、以下の定義されたルール「OCTET」、です。"
    },
    {
      "indent": 3,
      "text": "The following rules are used throughout this specification to describe basic parsing constructs.",
      "ja": "次のルールは、基本的な構文解析構造を記述するために本明細書を通して使用されています。"
    },
    {
      "indent": 6,
      "text": "alpha = lowalpha | hialpha lowalpha = \"a\" | \"b\" | \"c\" | \"d\" | \"e\" | \"f\" | \"g\" | \"h\" | \"i\" | \"j\" | \"k\" | \"l\" | \"m\" | \"n\" | \"o\" | \"p\" | \"q\" | \"r\" | \"s\" | \"t\" | \"u\" | \"v\" | \"w\" | \"x\" | \"y\" | \"z\" hialpha = \"A\" | \"B\" | \"C\" | \"D\" | \"E\" | \"F\" | \"G\" | \"H\" | \"I\" | \"J\" | \"K\" | \"L\" | \"M\" | \"N\" | \"O\" | \"P\" | \"Q\" | \"R\" | \"S\" | \"T\" | \"U\" | \"V\" | \"W\" | \"X\" | \"Y\" | \"Z\"",
      "ja": "アルファ= lowalpha | hialpha lowalpha = \"\" | \"B\" | \"C\" | \"D\" | \"E\" | \"F\" | \"G\" | \"H\" | \"I\" | \"J\" | \"K\" | \"L\" | \"M\" | \"n\" は| \"O\" | \"P\" | \"Q\" | \"R\" | \"S\" | \"T\" | \"U\" | \"V\" | \"W\" | \"X\" | \"Y\" | \"Z\" hialpha = \"A\" | \"B\" | \"C\" | \"D\" | \"E\" | \"F\" | \"G\" | \"H\" | \"I\" | \"J\" | \"K\" | \"L\" | \"M\" | \"N\" | \"O\" | \"P\" | \"Q\" | \"R\" | \"S\" | \"T\" | \"U\" | \"V\" | \"W\" | \"X\" | \"Y\" | \"Z\""
    },
    {
      "indent": 6,
      "text": "digit = \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\" alphanum = alpha | digit OCTET = <any 8-bit byte> CHAR = alpha | digit | separator | \"!\" | \"#\" | \"$\" | \"%\" | \"&\" | \"'\" | \"*\" | \"+\" | \"-\" | \".\" | \"`\" | \"^\" | \"_\" | \"{\" | \"|\" | \"}\" | \"~\" | CTL CTL = <any control character> SP = <space character> HT = <horizontal tab character> NL = <newline> LWSP = SP | HT | NL separator = \"(\" | \")\" | \"<\" | \">\" | \"@\" | \",\" | \";\" | \":\" | \"\\\" | <\"> | \"/\" | \"[\" | \"]\" | \"?\" | \"=\" | \"{\" | \"}\" | SP | HT token = 1*<any CHAR except CTLs or separators> quoted-string = <\"> *qdtext <\"> qdtext = <any CHAR except <\"> and CTLs but including LWSP> TEXT = <any printable character>",
      "ja": "桁= \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\" alphanum =アルファ|桁のOCTET = <任意の8ビットバイト> CHAR =アルファ|数字|セパレーター| \"！\" | \"＃\" | \"$\" | \"％\" | \"＆\" | \"'\" | \"*\" | \"+\" | \" - \" | \"\" | \"`\" | \"^\" | \"_\" | \"{\" | \"|\" | \"}\" | \"〜\" | CTL CTL = <任意の制御文字> SP = <空白文字> HT = <水平タブ文字> NL = <改行> LWSP = SP | HT | NL区切り= \"（\" | \"）\" | \"<\" | \">\" | \"@\" | \"\" | \";\" | \"：\" | \"\\\" | < \"> | \"/\" | \"[\" | \"]\" | \"？\" | \"=\" | \"{\" | \"}\" | SP | HTトークン= 1 * <的CTLまたはセパレータを除く任意のCHAR>引用符で囲まれた文字列= < \"> * qdtext <\"> qdtext = <<除く任意のCHAR \">とのCTLが、LWSP含む> TEXT = <任意の印刷可能な文字>"
    },
    {
      "indent": 3,
      "text": "Note that newline (NL) need not be a single control character, but can be a sequence of control characters. A system MAY define TEXT to be a larger set of characters than <any CHAR excluding CTLs but including LWSP>.",
      "ja": "改行（NL）は、単一の制御文字であるが、制御文字の配列であり得る必要がないことに注意してください。システムは、TEXTは<CTLを除くがLWSPを含む任意のCHAR>よりも文字の大きなセットであることを定義するかもしれません。"
    },
    {
      "indent": 0,
      "text": "2.3. URL Encoding",
      "section_title": true,
      "ja": "2.3。 URLエンコード"
    },
    {
      "indent": 3,
      "text": "Some variables and constructs used here are described as being 'URL-encoded'. This encoding is described in section 2 of RFC 2396 [2]. In a URL-encoded string an escape sequence consists of a percent character (\"%\") followed by two hexadecimal digits, where the two hexadecimal digits form an octet. An escape sequence represents the graphic character that has the octet as its code within the US-ASCII [9] coded character set, if it exists. Currently there is no provision within the URI syntax to identify which character set non-ASCII codes represent, so CGI handles this issue on an ad-hoc basis.",
      "ja": "ここで使用されるいくつかの変数及び構築物は「URLエンコード」であると記載されています。この符号化は、RFC 2396のセクション2に記載されている[2]。 URLエンコードされた文字列内のエスケープシーケンスは、2桁の16進数がオクテットを形成する2つの16進数字が続くパーセント文字（「％」）からなります。エスケープシーケンスは、それが存在する場合は、US-ASCII内のそのコード[9]符号化文字集合としてオクテットを持つグラフィック文字を表します。現在、非ASCIIコードを設定した文字を識別するためのURI構文内には規定がない表すので、CGIは、アドホックベースでこの問題を処理します。"
    },
    {
      "indent": 3,
      "text": "Note that some unsafe (reserved) characters may have different semantics when encoded. The definition of which characters are unsafe depends on the context; see section 2 of RFC 2396 [2], updated by RFC 2732 [7], for an authoritative treatment. These reserved characters are generally used to provide syntactic structure to the character string, for example as field separators. In all cases, the string is first processed with regard to any reserved characters present, and then the resulting data can be URL-decoded by replacing \"%\" escape sequences by their character values.",
      "ja": "エンコードされたときに、いくつかの危険な（予約済み）文字は異なる意味を持っていることに注意してください。文字が安全であるの定義は、文脈に依存します。権限の治療のためのRFC 2732によって更新されたRFC 2396のセクション2 [2]、[7]を参照されたいです。これらの予約文字は、一般的に、フィールドの区切りとして、たとえば、文字列に構文構造を提供するために使用されています。全ての場合において、文字列が最初に存在する任意の予約文字に関連して処理され、次いで得られたデータは、「％」は、それらの文字の値によってエスケープシーケンスを置換することによってURLデコードすることができます。"
    },
    {
      "indent": 3,
      "text": "To encode a character string, all reserved and forbidden characters are replaced by the corresponding \"%\" escape sequences. The string can then be used in assembling a URI. The reserved characters will vary from context to context, but will always be drawn from this set:",
      "ja": "文字列を符号化するために、すべての予約と禁じられた文字は、対応する「％」エスケープシーケンスに置き換えられます。文字列はURIを組み立てる際に使用することができます。予約文字は、コンテキストに、コンテキストによって異なりますが、常にこのセットから描画されます。"
    },
    {
      "indent": 6,
      "text": "reserved = \";\" | \"/\" | \"?\" | \":\" | \"@\" | \"&\" | \"=\" | \"+\" | \"$\" | \",\" | \"[\" | \"]\"",
      "ja": "=予約 \";\" | \"/\" | \"？\" | \"：\" | \"@\" | \"＆\" | \"=\" | \"+\" | \"$\" | \"\" | \"[\" | \"]\""
    },
    {
      "indent": 3,
      "text": "The last two characters were added by RFC 2732 [7]. In any particular context, a sub-set of these characters will be reserved; the other characters from this set MUST NOT be encoded when a string is URL-encoded in that context. Other basic rules used to describe URI syntax are:",
      "ja": "最後の2つの文字は、RFC 2732で追加された[7]。任意の特定のコンテキストでは、これらの文字のサブセットが予約されます。文字列がURLエンコードされたという状況であるときに、このセットから他の文字をエンコードしてはなりません。 URIの構文を説明するために使用される他の基本的なルールは以下のとおりです。"
    },
    {
      "indent": 6,
      "text": "hex = digit | \"A\" | \"B\" | \"C\" | \"D\" | \"E\" | \"F\" | \"a\" | \"b\" | \"c\" | \"d\" | \"e\" | \"f\" escaped = \"%\" hex hex unreserved = alpha | digit | mark mark = \"-\" | \"_\" | \".\" | \"!\" | \"~\" | \"*\" | \"'\" | \"(\" | \")\"",
      "ja": "進=数字| \"A\" | \"B\" | \"C\" | \"D\" | \"E\" | \"F\" | 「」| \"B\" | \"C\" | \"D\" | \"E\" | 「f」は=「％」の六角六角予約されていない=アルファをエスケープ|数字|マークマーク= \" - \" | \"_\" | \"\" | \"！\" | \"〜\" | \"*\" | \"'\" | \"（\" | \"）\""
    },
    {
      "indent": 0,
      "text": "3. Invoking the Script",
      "section_title": true,
      "ja": "3.スクリプトを呼び出します"
    },
    {
      "indent": 0,
      "text": "3.1. Server Responsibilities",
      "section_title": true,
      "ja": "3.1。サーバーの責任"
    },
    {
      "indent": 3,
      "text": "The server acts as an application gateway. It receives the request from the client, selects a CGI script to handle the request, converts the client request to a CGI request, executes the script and converts the CGI response into a response for the client. When processing the client request, it is responsible for implementing any protocol or transport level authentication and security. The server MAY also function in a 'non-transparent' manner, modifying the request or response in order to provide some additional service, such as media type transformation or protocol reduction.",
      "ja": "サーバは、アプリケーション・ゲートウェイとして働きます。これは、クライアントからの要求を受け、要求を処理するためにCGIスクリプトを選択し、CGI要求にクライアントの要求を変換し、スクリプトを実行し、クライアントの応答にCGIの応答を変換します。クライアント要求を処理するとき、それは任意のプロトコルまたはトランスポートレベルの認証とセキュリティを実装するための責任があります。サーバはまた、メディアタイプの変換またはプロトコル低減のようないくつかの付加サービスを提供するために要求または応答を変更する、「不透明」様式で機能することができます。"
    },
    {
      "indent": 3,
      "text": "The server MUST perform translations and protocol conversions on the client request data required by this specification. Furthermore, the server retains its responsibility to the client to conform to the relevant network protocol even if the CGI script fails to conform to this specification.",
      "ja": "サーバーは、この仕様で必要とされるクライアント要求データに翻訳し、プロトコル変換を実行しなければなりません。さらに、サーバはCGIスクリプトがこの仕様に準拠するために失敗した場合でも、関連するネットワークプロトコルに準拠するために、クライアントにその責任を保持します。"
    },
    {
      "indent": 3,
      "text": "If the server is applying authentication to the request, then it MUST NOT execute the script unless the request passes all defined access controls.",
      "ja": "サーバが要求に認証を適用している場合は、要求が定義されたすべてのアクセス制御を渡していない限り、それは、スクリプトを実行してはいけません。"
    },
    {
      "indent": 0,
      "text": "3.2. Script Selection",
      "section_title": true,
      "ja": "3.2。スクリプトの選択"
    },
    {
      "indent": 3,
      "text": "The server determines which CGI is script to be executed based on a generic-form URI supplied by the client. This URI includes a hierarchical path with components separated by \"/\". For any particular request, the server will identify all or a leading part of this path with an individual script, thus placing the script at a particular point in the path hierarchy. The remainder of the path, if any, is a resource or sub-resource identifier to be interpreted by the script.",
      "ja": "サーバーは、クライアントによって提供される一般的な形式のURIに基づいて実行するスクリプトがあるCGIを決定します。このURIは、「/」で区切られたコンポーネントと階層パスを含みます。任意の特定の要求のために、サーバは、このように、パス階層内の特定の時点でスクリプトを配置すること、個々のスクリプトを使用してすべてまたはこのパスの先頭部分を特定します。パスの残りは、もしあれば、スクリプトによって解釈されるべきリソースまたはサブリソース識別子です。"
    },
    {
      "indent": 3,
      "text": "Information about this split of the path is available to the script in the meta-variables, described below. Support for non-hierarchical URI schemes is outside the scope of this specification.",
      "ja": "パスのこの分割に関する情報は、以下のメタ変数でスクリプトに利用可能です。非階層URIスキームのサポートは、この仕様の範囲外です。"
    },
    {
      "indent": 0,
      "text": "3.3. The Script-URI",
      "section_title": true,
      "ja": "3.3。スクリプト-URI"
    },
    {
      "indent": 3,
      "text": "The mapping from client request URI to choice of script is defined by the particular server implementation and its configuration. The server may allow the script to be identified with a set of several different URI path hierarchies, and therefore is permitted to replace the URI by other members of this set during processing and generation of the meta-variables. The server",
      "ja": "スクリプトの選択に、クライアントのリクエストURIからのマッピングは、特定のサーバの実装とその構成によって定義されます。サーバは、スクリプトは、いくつかの異なるURIパス階層の組で識別することを可能にすることができるので、メタ変数の処理および生成中にこのセットの他のメンバーによってURIを交換することが許されます。サーバー"
    },
    {
      "indent": 6,
      "text": "1. MAY preserve the URI in the particular client request; or",
      "section_title": true,
      "ja": "1.特定のクライアント要求にURIを保存することができます。または"
    },
    {
      "indent": 6,
      "text": "2. it MAY select a canonical URI from the set of possible values for each script; or",
      "ja": "2.各スクリプトに指定可能な値の集合から正規URIを選択してもよいです。または"
    },
    {
      "indent": 6,
      "text": "3. it can implement any other selection of URI from the set.",
      "section_title": true,
      "ja": "3.それはセットからのURIのいずれかの他の選択を実装することができます。"
    },
    {
      "indent": 3,
      "text": "From the meta-variables thus generated, a URI, the 'Script-URI', can be constructed. This MUST have the property that if the client had accessed this URI instead, then the script would have been executed with the same values for the SCRIPT_NAME, PATH_INFO and QUERY_STRING meta-variables. The Script-URI has the structure of a generic URI as defined in section 3 of RFC 2396 [2], with the exception that object parameters and fragment identifiers are not permitted. The various components of the Script-URI are defined by some of the meta-variables (see below);",
      "ja": "このようにして生成されたメタ変数、URIからは、「スクリプト-URI」を構築することができます。これは、クライアントではなく、このURIにアクセスした場合、スクリプトはSCRIPT_NAME、PATH_INFOとQUERY_STRINGメタ変数に同じ値で実行されていたであろうという性質を持っていなければなりません。パラメータオブジェクトとフラグメント識別子が許可されていない以外は、RFC 2396 [2]のセクション3で定義されるようにスクリプト-URIは、一般的なURIの構造を有しています。スクリプト-URIの様々なコンポーネントは、メタ変数（下記参照）の一部によって定義されます。"
    },
    {
      "indent": 6,
      "text": "script-URI = <scheme> \"://\" <server-name> \":\" <server-port> <script-path> <extra-path> \"?\" <query-string>",
      "ja": "スクリプト-URI = <スキーム> \"：//\" <サーバ名> \"：\" <サーバポート> <スクリプトのパス> <エクストラパス> \"？\" <クエリ文字列>"
    },
    {
      "indent": 3,
      "text": "where <scheme> is found from SERVER_PROTOCOL, <server-name>, <server-port> and <query-string> are the values of the respective meta-variables. The SCRIPT_NAME and PATH_INFO values, URL-encoded with \";\", \"=\" and \"?\" reserved, give <script-path> and <extra-path>.",
      "ja": "ここで、<スキーム> SERVER_PROTOCOLから発見された、<サーバ名>、<サーバポート>と<クエリ文字列>それぞれのメタ変数の値です。 SCRIPT_NAMEとPATH_INFO値は、URLエンコードされたと \";\" \"？\"、 \"=\" と予約、<スクリプトのパス>と<余分なパス>を与えます。"
    },
    {
      "indent": 3,
      "text": "See section 4.1.5 for more information about the PATH_INFO meta-variable.",
      "ja": "PATH_INFOメタ変数の詳細については、セクション4.1.5を参照してください。"
    },
    {
      "indent": 3,
      "text": "The scheme and the protocol are not identical as the scheme identifies the access method in addition to the application protocol. For example, a resource accessed using Transport Layer Security (TLS) [14] would have a request URI with a scheme of https when using the HTTP protocol [19]. CGI/1.1 provides no generic means for the script to reconstruct this, and therefore the Script-URI as defined includes the base protocol used. However, a script MAY make use of scheme-specific meta-variables to better deduce the URI scheme.",
      "ja": "スキームは、アプリケーション・プロトコルに加えて、アクセス方式を識別よう方式およびプロトコルが同一ではありません。たとえば、リソースは、HTTPプロトコル[19]を使用する場合、HTTPSの方式に要求URIを有するであろうトランスポート層セキュリティ（TLS）[14]を使用してアクセス。定義されるようなCGI / 1.1は、使用される基本プロトコルを含むスクリプトは、これを再構築するための汎用的な手段を提供しないので、スクリプト-URI。しかし、このスクリプトは、より良いURIスキームを推定する手法固有のメタ変数を利用することができます。"
    },
    {
      "indent": 3,
      "text": "Note that this definition also allows URIs to be constructed which would invoke the script with any permitted values for the path-info or query-string, by modifying the appropriate components.",
      "ja": "この定義はまた、適切な構成要素を変形して、URIはパス情報やクエリ文字列のための任意の許容値でスクリプトを呼び出すことになる構築することを可能にすることに留意されたいです。"
    },
    {
      "indent": 0,
      "text": "3.4. Execution",
      "section_title": true,
      "ja": "3.4。実行"
    },
    {
      "indent": 3,
      "text": "The script is invoked in a system-defined manner. Unless specified otherwise, the file containing the script will be invoked as an executable program. The server prepares the CGI request as described in section 4; this comprises the request meta-variables (immediately available to the script on execution) and request message data. The request data need not be immediately available to the script; the script can be executed before all this data has been received by the server from the client. The response from the script is returned to the server as described in sections 5 and 6.",
      "ja": "スクリプトは、システム定義の方法で呼び出されます。特に指定のない限り、スクリプトを含むファイルが実行可能なプログラムとして呼び出されます。セクション4に記載されているように、サーバは、CGI要求を準備します。これは、要求のメタ変数（実行上のスクリプトにすぐに利用可能）と、要求メッセージのデータを含んでいます。要求データは、スクリプトにすぐに利用可能である必要はありません。このすべてのデータがクライアントからサーバによって受信される前にスクリプトを実行することができます。セクション5および6に記載したように、スクリプトからの応答がサーバに返されます。"
    },
    {
      "indent": 3,
      "text": "In the event of an error condition, the server can interrupt or terminate script execution at any time and without warning. That could occur, for example, in the event of a transport failure between the server and the client; so the script SHOULD be prepared to handle abnormal termination.",
      "ja": "エラー状態が発生した場合、サーバーは、中断することができるか、いずれかの時点で、警告なしにスクリプトの実行を終了します。これは、サーバーとクライアント間の輸送に障害が発生した場合に、例えば、発生する可能性があります。そのスクリプトが異常終了を処理するために準備する必要があります。"
    },
    {
      "indent": 0,
      "text": "4. The CGI Request",
      "section_title": true,
      "ja": "4. CGIリクエスト"
    },
    {
      "indent": 3,
      "text": "Information about a request comes from two different sources; the request meta-variables and any associated message-body.",
      "ja": "要求に関する情報は、2つの異なるソースから来ています。リクエストメタ変数および関連するメッセージボディ。"
    },
    {
      "indent": 0,
      "text": "4.1. Request Meta-Variables",
      "section_title": true,
      "ja": "4.1。メタ変数をリクエスト"
    },
    {
      "indent": 3,
      "text": "Meta-variables contain data about the request passed from the server to the script, and are accessed by the script in a system-defined manner. Meta-variables are identified by case-insensitive names; there cannot be two different variables whose names differ in case only. Here they are shown using a canonical representation of capitals plus underscore (\"_\"). A particular system can define a different representation.",
      "ja": "メタ変数はスクリプトにサーバから渡されたリクエストに関するデータを含み、システム定義のようにしてスクリプトによってアクセスされます。メタ変数は大文字と小文字を区別しない名前で識別されます。名前のみの場合には異なる2つの異なる変数があることはできません。ここで彼らは、大文字とアンダースコア（「_」）の正規表現を使用して示されています。特定のシステムは、異なる表現を定義することができます。"
    },
    {
      "indent": 6,
      "text": "meta-variable-name = \"AUTH_TYPE\" | \"CONTENT_LENGTH\" | \"CONTENT_TYPE\" | \"GATEWAY_INTERFACE\" | \"PATH_INFO\" | \"PATH_TRANSLATED\" | \"QUERY_STRING\" | \"REMOTE_ADDR\" | \"REMOTE_HOST\" | \"REMOTE_IDENT\" | \"REMOTE_USER\" | \"REQUEST_METHOD\" | \"SCRIPT_NAME\" | \"SERVER_NAME\" | \"SERVER_PORT\" | \"SERVER_PROTOCOL\" | \"SERVER_SOFTWARE\" | scheme | protocol-var-name | extension-var-name protocol-var-name = ( protocol | scheme ) \"_\" var-name scheme = alpha *( alpha | digit | \"+\" | \"-\" | \".\" ) var-name = token extension-var-name = token",
      "ja": "メタ変数名=「AUTH_TYPE」| \"CONTENT_LENGTH\" | \"CONTENT_TYPE\" | \"GATEWAY_INTERFACE\" | \"PATH_INFO\" | \"PATH_TRANSLATED\" | \"QUERY_STRING\" | \"REMOTE_ADDR\" | \"REMOTE_HOST\" | \"REMOTE_IDENT\" | \"REMOTE_USER\" | \"REQUEST_METHOD\" | \"SCRIPT_NAME\" | \"SERVER_NAME\" | \"SERVER_PORT\" | \"SERVER_PROTOCOL\" | \"SERVER_SOFTWARE\" |スキーム|プロトコル-VAR-名|延長-VAR-名プロトコル-VAR-名=（プロトコル|スキーム） \"_\" VAR名スキーム=アルファ*（アルファ|数字| \"+\" | \" - \" | \"\"）VAR-名=トークンEXTENSION- VAR名=トークン"
    },
    {
      "indent": 3,
      "text": "Meta-variables with the same name as a scheme, and names beginning with the name of a protocol or scheme (e.g., HTTP_ACCEPT) are also defined. The number and meaning of these variables may change independently of this specification. (See also section 4.1.18.)",
      "ja": "スキームと同じ名前のメタ変数、プロトコルまたはスキーム（例えば、HTTP_ACCEPT）の名前で始まる名前も定義されています。これらの変数の数と意味は、独立して、この仕様の変更する場合があります。 （また、セクション4.1.18を参照してください。）"
    },
    {
      "indent": 3,
      "text": "The server MAY set additional implementation-defined extension meta-variables, whose names SHOULD be prefixed with \"X_\".",
      "ja": "サーバーは、名前が「X_」を始めなければなりません追加の実装定義の拡張メタ変数を設定してもよいです。"
    },
    {
      "indent": 3,
      "text": "This specification does not distinguish between zero-length (NULL) values and missing values. For example, a script cannot distinguish between the two requests http://host/script and http://host/script? as in both cases the QUERY_STRING meta-variable would be NULL.",
      "ja": "この仕様は、長さゼロ（NULL）値および欠損値を区別しません。例えば、スクリプトは、2つの要求をhttp区別することはできません：//ホスト/スクリプトとのhttp：//ホスト/スクリプト？両方のケースのようにQUERY_STRINGメタ変数はNULLになります。"
    },
    {
      "indent": 6,
      "text": "meta-variable-value = \"\" | 1*<TEXT, CHAR or tokens of value>",
      "ja": "メタ変数値=「」| 1 * <値のTEXT、CHARまたはトークン>"
    },
    {
      "indent": 3,
      "text": "An optional meta-variable may be omitted (left unset) if its value is NULL. Meta-variable values MUST be considered case-sensitive except as noted otherwise. The representation of the characters in the meta-variables is system-defined; the server MUST convert values to that representation.",
      "ja": "その値がNULLの場合、オプションのメタ変数は、（未設定）を省略してもよいです。メタ変数の値は、特記される場合を除き、大文字と小文字を区別見なされなければなりません。メタ変数内の文字の表現は、システム定義です。サーバーは、その表現に値を変換する必要があります。"
    },
    {
      "indent": 0,
      "text": "4.1.1. AUTH_TYPE",
      "section_title": true,
      "ja": "4.1.1。 AUTH_TYPE"
    },
    {
      "indent": 3,
      "text": "The AUTH_TYPE variable identifies any mechanism used by the server to authenticate the user. It contains a case-insensitive value defined by the client protocol or server implementation.",
      "ja": "AUTH_TYPE変数は、ユーザを認証するためにサーバーが使用する任意のメカニズムを識別します。これは、クライアントプロトコルやサーバの実装によって定義された大文字と小文字を区別しない値が含まれています。"
    },
    {
      "indent": 3,
      "text": "For HTTP, if the client request required authentication for external access, then the server MUST set the value of this variable from the 'auth-scheme' token in the request Authorization header field.",
      "ja": "クライアント要求は、外部からのアクセスのために認証が必要な場合、HTTPのために、サーバは、要求Authorizationヘッダフィールドに「AUTH-スキーム」トークンからこの変数の値を設定しなければなりません。"
    },
    {
      "indent": 6,
      "text": "AUTH_TYPE = \"\" | auth-scheme auth-scheme = \"Basic\" | \"Digest\" | extension-auth extension-auth = token",
      "ja": "AUTH_TYPE = \"\" | auth-スキームのauth-スキーム= \"ベーシック\" | 「ダイジェスト」|延長-AUTH拡張-AUTH =トークン"
    },
    {
      "indent": 3,
      "text": "HTTP access authentication schemes are described in RFC 2617 [5].",
      "ja": "HTTPアクセス認証スキームは、RFC 2617に記載されている[5]。"
    },
    {
      "indent": 0,
      "text": "4.1.2. CONTENT_LENGTH",
      "section_title": true,
      "ja": "4.1.2。 CONTENT_LENGTH"
    },
    {
      "indent": 3,
      "text": "The CONTENT_LENGTH variable contains the size of the message-body attached to the request, if any, in decimal number of octets. If no data is attached, then NULL (or unset).",
      "ja": "CONTENT_LENGTH変数はオクテットの小数で、もしあれば、要求に添付されたメッセージボディのサイズを含んでいます。何もデータが添付されていない場合は、NULL（または設定解除）。"
    },
    {
      "indent": 6,
      "text": "CONTENT_LENGTH = \"\" | 1*digit",
      "ja": "CONTENT_LENGTH = \"\" | 1 *桁"
    },
    {
      "indent": 3,
      "text": "The server MUST set this meta-variable if and only if the request is accompanied by a message-body entity. The CONTENT_LENGTH value must reflect the length of the message-body after the server has removed any transfer-codings or content-codings.",
      "ja": "そしてリクエストがメッセージボディの実体を伴っている場合にだけ、サーバはこのメタ変数を設定しなければなりません。サーバは、任意の転送コーディングまたは内容コーディングを除去した後CONTENT_LENGTH値は、メッセージ本体の長さを反映しなければなりません。"
    },
    {
      "indent": 0,
      "text": "4.1.3. CONTENT_TYPE",
      "section_title": true,
      "ja": "4.1.3。 CONTENT_TYPE"
    },
    {
      "indent": 3,
      "text": "If the request includes a message-body, the CONTENT_TYPE variable is set to the Internet Media Type [6] of the message-body.",
      "ja": "要求は、メッセージボディを含む場合、CONTENT_TYPE変数はメッセージボディのインターネットメディアタイプ[6]に設定されています。"
    },
    {
      "indent": 6,
      "text": "CONTENT_TYPE = \"\" | media-type media-type = type \"/\" subtype *( \";\" parameter ) type = token subtype = token parameter = attribute \"=\" value attribute = token value = token | quoted-string",
      "ja": "CONTENT_TYPE = \"\" |メディア型メディアタイプ=タイプ「/」サブタイプ*（「;」パラメータ）トークンタイプ=トークンサブタイプ=トークンパラメータ=属性「=」value属性=トークン値= |引用符で囲まれた文字列"
    },
    {
      "indent": 3,
      "text": "The type, subtype and parameter attribute names are not case-sensitive. Parameter values may be case sensitive. Media types and their use in HTTP are described section 3.7 of the HTTP/1.1 specification [4].",
      "ja": "タイプ、サブタイプやパラメータ属性名は大文字と小文字を区別しません。パラメータ値は、大文字と小文字を区別することができます。メディアタイプとHTTPにおけるそれらの使用は、HTTP / 1.1仕様のセクション3.7に記載されている[4]。"
    },
    {
      "indent": 3,
      "text": "There is no default value for this variable. If and only if it is unset, then the script MAY attempt to determine the media type from the data received. If the type remains unknown, then the script MAY choose to assume a type of application/octet-stream or it may reject the request with an error (as described in section 6.3.3).",
      "ja": "この変数のデフォルト値はありません。そして、それが設定されていない場合にのみ、スクリプトは、受信したデータからメディアタイプを決定しようとするかもしれ場合。タイプが不明のままである場合、スクリプトは、アプリケーション/オクテットストリームのタイプを想定することを選択し得るか、またはそれが（セクション6.3.3で説明したように）エラーで要求を拒否することができます。"
    },
    {
      "indent": 3,
      "text": "Each media-type defines a set of optional and mandatory parameters. This may include a charset parameter with a case-insensitive value defining the coded character set for the message-body. If the charset parameter is omitted, then the default value should be derived according to whichever of the following rules is the first to apply:",
      "ja": "各メディアタイプはオプションであり、必須パラメータのセットを定義します。これは、メッセージボディのための符号化された文字セットを定義する、大文字と小文字を区別しない値でcharsetパラメータを含むことができます。 charsetパラメータが省略された場合、デフォルト値を適用する最初に、以下のルールのいずれかに応じて導出されるべきです。"
    },
    {
      "indent": 6,
      "text": "1. There MAY be a system-defined default charset for some media-types.",
      "ja": "1.いくつかのメディアタイプのためのシステム定義のデフォルトの文字セットがあるかもしれ。"
    },
    {
      "indent": 6,
      "text": "2. The default for media-types of type \"text\" is ISO-8859-1 [4].",
      "section_title": true,
      "ja": "2.タイプ「テキスト」のメディア・タイプのデフォルトはISO-8859-1である[4]。"
    },
    {
      "indent": 6,
      "text": "3. Any default defined in the media-type specification.",
      "section_title": true,
      "ja": "3.メディアタイプの仕様で定義された任意のデフォルトを。"
    },
    {
      "indent": 6,
      "text": "4. The default is US-ASCII.",
      "section_title": true,
      "ja": "4.デフォルトはUS-ASCIIです。"
    },
    {
      "indent": 3,
      "text": "The server MUST set this meta-variable if an HTTP Content-Type field is present in the client request header. If the server receives a request with an attached entity but no Content-Type header field, it MAY attempt to determine the correct content type, otherwise it should omit this meta-variable.",
      "ja": "HTTPのContent-Typeフィールドは、クライアントのリクエストヘッダに存在している場合、サーバはこのメタ変数を設定しなければなりません。サーバーが接続エンティティが、ノーContent-Typeヘッダフィールドで要求を受信した場合、それはそうでない場合は、このメタ変数を省略しなければならない、正しいコンテンツタイプを決定しようとするかもしれません。"
    },
    {
      "indent": 0,
      "text": "4.1.4. GATEWAY_INTERFACE",
      "section_title": true,
      "ja": "4.1.4。 GATEWAY_INTERFACE"
    },
    {
      "indent": 3,
      "text": "The GATEWAY_INTERFACE variable MUST be set to the dialect of CGI being used by the server to communicate with the script. Syntax:",
      "ja": "GATEWAY_INTERFACE変数はスクリプトと通信するためにサーバによって使用されているCGIの方言に設定しなければなりません。構文："
    },
    {
      "indent": 6,
      "text": "GATEWAY_INTERFACE = \"CGI\" \"/\" 1*digit \".\" 1*digit",
      "ja": "GATEWAY_INTERFACEは= \"CGI\" \"/\" 1個の*数字 \"\" 1 *桁"
    },
    {
      "indent": 3,
      "text": "Note that the major and minor numbers are treated as separate integers and hence each may be incremented higher than a single digit. Thus CGI/2.4 is a lower version than CGI/2.13 which in turn is lower than CGI/12.3. Leading zeros MUST be ignored by the script and MUST NOT be generated by the server.",
      "ja": "メジャーおよびマイナー番号は別々の整数として扱われ、従って、各々が一桁より高いインクリメントされてもよいことに留意されたいです。従ってCGI / 2.4は、次に、CGI / 12.3未満であるCGI / 2.13より低いバージョンです。先頭のゼロはスクリプトによって無視されなければならないと、サーバによって生成されてはなりません。"
    },
    {
      "indent": 3,
      "text": "This document defines the 1.1 version of the CGI interface.",
      "ja": "この文書では、CGIインターフェースの1.1バージョンを定義します。"
    },
    {
      "indent": 0,
      "text": "4.1.5. PATH_INFO",
      "section_title": true,
      "ja": "4.1.5。 PATH_INFO"
    },
    {
      "indent": 3,
      "text": "The PATH_INFO variable specifies a path to be interpreted by the CGI script. It identifies the resource or sub-resource to be returned by the CGI script, and is derived from the portion of the URI path hierarchy following the part that identifies the script itself. Unlike a URI path, the PATH_INFO is not URL-encoded, and cannot contain path-segment parameters. A PATH_INFO of \"/\" represents a single void path segment.",
      "ja": "PATH_INFO変数はCGIスクリプトによって解釈されるパスを指定します。それは、CGIスクリプトによって返されるリソースまたはサブリソースを識別し、スクリプト自体を識別する部以下URIパス階層の部分から誘導されます。 URIのパスとは異なり、PATH_INFOは、URLエンコードされず、パスセグメントのパラメータを含めることはできません。 「/」は、単一のボイド経路セグメントを表すのPATH_INFO。"
    },
    {
      "indent": 6,
      "text": "PATH_INFO = \"\" | ( \"/\" path ) path = lsegment *( \"/\" lsegment ) lsegment = *lchar lchar = <any TEXT or CTL except \"/\">",
      "ja": "PATH_INFO = \"\" | （ \"/\" パス）パス= lsegment *（ \"/\" lsegment）lsegment = * LCHAR LCHAR = <除く任意のテキストまたはCTL \"/\">"
    },
    {
      "indent": 3,
      "text": "The value is considered case-sensitive and the server MUST preserve the case of the path as presented in the request URI. The server MAY impose restrictions and limitations on what values it permits for PATH_INFO, and MAY reject the request with an error if it encounters any values considered objectionable. That MAY include any requests that would result in an encoded \"/\" being decoded into PATH_INFO, as this might represent a loss of information to the script. Similarly, treatment of non US-ASCII characters in the path is system-defined.",
      "ja": "値は、大文字と小文字が区別とみなされ、リクエストURIに提示されるサーバは、経路のケースを保持しなければなりません。サーバはPATH_INFOのために許可するものを値の制限と制限を課すことができる、それが不快と考える任意の値に遭遇した場合はエラーで要求を拒否することがあります。これは、スクリプトへの情報の損失を表す可能性があるとして、それは、「/」PATH_INFOにデコードされた符号化につながるすべての要求を含むかもしれません。同様に、パス内の非US-ASCII文字の治療は、システム定義です。"
    },
    {
      "indent": 3,
      "text": "URL-encoded, the PATH_INFO string forms the extra-path component of the Script-URI (see section 3.3) which follows the SCRIPT_NAME part of that path.",
      "ja": "URLエンコードされ、PATH_INFO文字列は、そのパスのSCRIPT_NAMEの一部を以下のスクリプト-URI（セクション3.3を参照）の余分なパス成分を形成します。"
    },
    {
      "indent": 0,
      "text": "4.1.6. PATH_TRANSLATED",
      "section_title": true,
      "ja": "4.1.6。 PATH_TRANSLATED"
    },
    {
      "indent": 3,
      "text": "The PATH_TRANSLATED variable is derived by taking the PATH_INFO value, parsing it as a local URI in its own right, and performing any virtual-to-physical translation appropriate to map it onto the server's document repository structure. The set of characters permitted in the result is system-defined.",
      "ja": "PATH_TRANSLATED変数は、PATH_INFO値を取って、それ自体でローカルURIとしてそれを解析し、サーバのドキュメントリポジトリ構造にそれをマップする適切な任意の仮想から物理への変換を実行することによって導出されます。結果で許可文字の集合は、システム定義です。"
    },
    {
      "indent": 6,
      "text": "PATH_TRANSLATED = *<any character>",
      "ja": "PATH_TRANSLATED = * <任意の文字>"
    },
    {
      "indent": 3,
      "text": "This is the file location that would be accessed by a request for",
      "ja": "これは、要求によってアクセスされるファイルの場所であります"
    },
    {
      "indent": 6,
      "text": "<scheme> \"://\" <server-name> \":\" <server-port> <extra-path>",
      "ja": "<スキーム> \"：//\" <サーバ名> \"：\" <サーバポート> <余分なパス>"
    },
    {
      "indent": 3,
      "text": "where <scheme> is the scheme for the original client request and <extra-path> is a URL-encoded version of PATH_INFO, with \";\", \"=\" and \"?\" reserved. For example, a request such as the following:",
      "ja": "「？」、「=」と「;」ここで、<スキーム>は、元のクライアント要求と<余分なパス>のためのスキームを持つPATH_INFOのURLエンコードされたバージョンは、されています予約済み。例えば、次のようなリクエスト。"
    },
    {
      "indent": 6,
      "text": "http://somehost.com/cgi-bin/somescript/this%2eis%2epath%3binfo",
      "ja": "ｈっｔｐ：／／そめほｓｔ。こｍ／ｃぎーびん／そめｓｃりｐｔ／てぃｓ％２えいｓ％２えぱｔｈ％３びんふぉ"
    },
    {
      "indent": 3,
      "text": "would result in a PATH_INFO value of",
      "ja": "のPATH_INFO値につながります"
    },
    {
      "indent": 6,
      "text": "/this.is.the.path;info",
      "ja": "／てぃｓ。いｓ。てぇ。ぱｔｈ；いんふぉ"
    },
    {
      "indent": 3,
      "text": "An internal URI is constructed from the scheme, server location and the URL-encoded PATH_INFO:",
      "ja": "内部URIはスキーム、サーバーの場所とURLエンコードPATH_INFOから構成されています。"
    },
    {
      "indent": 6,
      "text": "http://somehost.com/this.is.the.path%3binfo",
      "ja": "ｈっｔｐ：／／そめほｓｔ。こｍ／てぃｓ。いｓ。てぇ。ぱｔｈ％３びんふぉ"
    },
    {
      "indent": 3,
      "text": "This would then be translated to a location in the server's document repository, perhaps a filesystem path something like this:",
      "ja": "これは、おそらくファイルシステムのパスのようなもの、サーバーのドキュメントリポジトリ、内の位置に変換されます："
    },
    {
      "indent": 6,
      "text": "/usr/local/www/htdocs/this.is.the.path;info",
      "ja": "／うｓｒ／ぉかｌ／ｗっｗ／ｈｔどｃｓ／てぃｓ。いｓ。てぇ。ぱｔｈ；いんふぉ"
    },
    {
      "indent": 3,
      "text": "The value of PATH_TRANSLATED is the result of the translation.",
      "ja": "PATH_TRANSLATEDの値は、翻訳の結果です。"
    },
    {
      "indent": 3,
      "text": "The value is derived in this way irrespective of whether it maps to a valid repository location. The server MUST preserve the case of the extra-path segment unless the underlying repository supports case-insensitive names. If the repository is only case-aware, case-preserving, or case-blind with regard to document names, the server is not required to preserve the case of the original segment through the translation.",
      "ja": "値にかかわらず、それが有効なリポジトリの場所にマップするかどうかのこのようにして導出されます。根本的なリポジトリは、大文字と小文字を区別しない名をサポートしていない限り、サーバーは、余分なパスセグメントのケースを保存しなければなりません。リポジトリがドキュメント名に関してのみの場合を意識し、ケース・保存、またはケース盲目である場合は、サーバーが翻訳を通じて元のセグメントの場合を維持するために必要とされていません。"
    },
    {
      "indent": 3,
      "text": "The translation algorithm the server uses to derive PATH_TRANSLATED is implementation-defined; CGI scripts which use this variable may suffer limited portability.",
      "ja": "サーバがPATH_TRANSLATEDを導き出すために使用する変換アルゴリズムは実装定義です。この変数を使用するCGIスクリプトは、限られた可搬性を被る可能性があります。"
    },
    {
      "indent": 3,
      "text": "The server SHOULD set this meta-variable if the request URI includes a path-info component. If PATH_INFO is NULL, then the PATH_TRANSLATED variable MUST be set to NULL (or unset).",
      "ja": "リクエストURIはパス情報コンポーネントが含まれている場合、サーバはこのメタ変数を設定する必要があります。 PATH_INFOがNULLの場合、PATH_TRANSLATED変数がNULLに設定（または解除）されなければなりません。"
    },
    {
      "indent": 0,
      "text": "4.1.7. QUERY_STRING",
      "section_title": true,
      "ja": "4.1.7。クエリ文字列"
    },
    {
      "indent": 3,
      "text": "The QUERY_STRING variable contains a URL-encoded search or parameter string; it provides information to the CGI script to affect or refine the document to be returned by the script.",
      "ja": "QUERY_STRING変数は、URLエンコードされた検索やパラメータ文字列が含まれています。それはスクリプトによって返される文書に影響を与えたり、絞り込むことCGIスクリプトに情報を提供しています。"
    },
    {
      "indent": 3,
      "text": "The URL syntax for a search string is described in section 3 of RFC 2396 [2]. The QUERY_STRING value is case-sensitive.",
      "ja": "検索文字列のURLの構文は、RFC 2396のセクション3に記載されている[2]。 QUERY_STRING値は、大文字と小文字が区別されます。"
    },
    {
      "indent": 6,
      "text": "QUERY_STRING = query-string query-string = *uric uric = reserved | unreserved | escaped",
      "ja": "QUERY_STRING =クエリ文字列クエリ文字列= *尿尿=予約|予約されていません|エスケープ"
    },
    {
      "indent": 3,
      "text": "When parsing and decoding the query string, the details of the parsing, reserved characters and support for non US-ASCII characters depends on the context. For example, form submission from an HTML document [18] uses application/x-www-form-urlencoded encoding, in which the characters \"+\", \"&\" and \"=\" are reserved, and the ISO 8859-1 encoding may be used for non US-ASCII characters.",
      "ja": "パースやクエリ文字列をデコードすると、US-ASCII以外の文字の解析、予約文字とサポートの詳細については、文脈に依存します。例えば、HTML文書からフォーム提出[18]の文字が \"+\"、 \"＆\" と \"=\" 予約されたアプリケーション/ x-www-form-urlencodedでエンコードを使用し、ISO 8859-1エンコーディング月US-ASCII以外の文字のために使用されます。"
    },
    {
      "indent": 3,
      "text": "The QUERY_STRING value provides the query-string part of the Script-URI. (See section 3.3).",
      "ja": "QUERY_STRING値は、スクリプト-URIのクエリ文字列の一部を提供します。 （セクション3.3を参照）。"
    },
    {
      "indent": 3,
      "text": "The server MUST set this variable; if the Script-URI does not include a query component, the QUERY_STRING MUST be defined as an empty string (\"\").",
      "ja": "サーバーは、この変数を設定しなければなりません。スクリプト-URIは、クエリコンポーネントを含まない場合、QUERY_STRINGは空の文字列（「」）として定義されなければなりません。"
    },
    {
      "indent": 0,
      "text": "4.1.8. REMOTE_ADDR",
      "section_title": true,
      "ja": "4.1.8。 REMOTE_ADDR"
    },
    {
      "indent": 3,
      "text": "The REMOTE_ADDR variable MUST be set to the network address of the client sending the request to the server.",
      "ja": "REMOTE_ADDR変数は、サーバに要求を送信するクライアントのネットワークアドレスに設定しなければなりません。"
    },
    {
      "indent": 6,
      "text": "REMOTE_ADDR = hostnumber hostnumber = ipv4-address | ipv6-address ipv4-address = 1*3digit \".\" 1*3digit \".\" 1*3digit \".\" 1*3digit ipv6-address = hexpart [ \":\" ipv4-address ] hexpart = hexseq | ( [ hexseq ] \"::\" [ hexseq ] ) hexseq = 1*4hex *( \":\" 1*4hex )",
      "ja": "REMOTE_ADDR =ホスト書き込み可能なホスト書き込み可能=のIPv4アドレス| IPv6のアドレスはIPv4アドレス= 1 * 3digit \"\" 1 * 3digit \"\" 1 * 3digit \"\" 1 * 3digit IPv6アドレスhexpart = [ \"：\" のIPv4アドレス] = hexpart hexseq | （[Hexseq \"::\" [hexseq]）hexseq = 1 * 4hex（ \"：\" 1 * 4hex）"
    },
    {
      "indent": 3,
      "text": "The format of an IPv6 address is described in RFC 3513 [15].",
      "ja": "IPv6アドレスのフォーマットは、RFC 3513 [15]に記載されています。"
    },
    {
      "indent": 0,
      "text": "4.1.9. REMOTE_HOST",
      "section_title": true,
      "ja": "4.1.9。リモートホスト"
    },
    {
      "indent": 3,
      "text": "The REMOTE_HOST variable contains the fully qualified domain name of the client sending the request to the server, if available, otherwise NULL. Fully qualified domain names take the form as described in section 3.5 of RFC 1034 [17] and section 2.1 of RFC 1123 [12]. Domain names are not case sensitive.",
      "ja": "REMOTE_HOST変数は、それ以外の場合はNULL、利用可能な場合、サーバーにリクエストを送信するクライアントの完全修飾ドメイン名が含まれています。完全修飾ドメイン名は、RFC 1034のセクション3.5で説明したように[17]の形をとり、RFC 1123のセクション2.1 [12]。ドメイン名は大文字と小文字を区別しません。"
    },
    {
      "indent": 6,
      "text": "REMOTE_HOST = \"\" | hostname | hostnumber hostname = *( domainlabel \".\" ) toplabel [ \".\" ] domainlabel = alphanum [ *alphahypdigit alphanum ] toplabel = alpha [ *alphahypdigit alphanum ] alphahypdigit = alphanum | \"-\"",
      "ja": "REMOTE_HOST = \"\" |ホスト名| hostnumberホスト名= *（domainlabel \" \"）toplabelの[\"。\" ] Domainlabel = alphanum [* alphahypdigit alphanum] toplabel =アルファ[* alphahypdigit alphanum] alphahypdigit = alphanum | \" - \""
    },
    {
      "indent": 3,
      "text": "The server SHOULD set this variable. If the hostname is not available for performance reasons or otherwise, the server MAY substitute the REMOTE_ADDR value.",
      "ja": "サーバーは、この変数を設定する必要があります。ホスト名は、パフォーマンス上の理由やそれ以外のために使用できない場合、サーバーはREMOTE_ADDR値を置換することができます。"
    },
    {
      "indent": 0,
      "text": "4.1.10. REMOTE_IDENT",
      "section_title": true,
      "ja": "4.1.10。 REMOTE_IDENT"
    },
    {
      "indent": 3,
      "text": "The REMOTE_IDENT variable MAY be used to provide identity information reported about the connection by an RFC 1413 [20] request to the remote agent, if available. The server may choose not to support this feature, or not to request the data for efficiency reasons, or not to return available identity data.",
      "ja": "利用可能な場合REMOTE_IDENT変数は、リモートエージェントへのRFC 1413 [20]要求による接続について報告された識別情報を提供するために使用され得ます。サーバーは、この機能をサポートしないことを選択すること、または効率上の理由からデータを要求していない、または使用可能なIDデータを返すことはありません。"
    },
    {
      "indent": 6,
      "text": "REMOTE_IDENT = *TEXT",
      "ja": "REMOTE_IDENT = * TEXT"
    },
    {
      "indent": 3,
      "text": "The data returned may be used for authentication purposes, but the level of trust reposed in it should be minimal.",
      "ja": "返されたデータは、認証目的で使用することができるが、信頼のレベルは最小限である必要があり、それに横たわります。"
    },
    {
      "indent": 0,
      "text": "4.1.11. REMOTE_USER",
      "section_title": true,
      "ja": "4.1.11。 REMOTE_USER"
    },
    {
      "indent": 3,
      "text": "The REMOTE_USER variable provides a user identification string supplied by client as part of user authentication.",
      "ja": "REMOTE_USER変数は、ユーザ認証の一部として、クライアントによって供給されたユーザ識別文字列を提供します。"
    },
    {
      "indent": 6,
      "text": "REMOTE_USER = *TEXT",
      "ja": "REMOTE_USER = * TEXT"
    },
    {
      "indent": 3,
      "text": "If the client request required HTTP Authentication [5] (e.g., the AUTH_TYPE meta-variable is set to \"Basic\" or \"Digest\"), then the value of the REMOTE_USER meta-variable MUST be set to the user-ID supplied.",
      "ja": "クライアント要求がHTTP認証が[5]（例えば、AUTH_TYPEメタ変数が「基本」または「ダイジェスト」に設定されている）必要な場合には、REMOTE_USERメタ変数の値が供給されるユーザーIDに設定しなければなりません。"
    },
    {
      "indent": 0,
      "text": "4.1.12. REQUEST_METHOD",
      "section_title": true,
      "ja": "4.1.12。 REQUEST_METHOD"
    },
    {
      "indent": 3,
      "text": "The REQUEST_METHOD meta-variable MUST be set to the method which should be used by the script to process the request, as described in section 4.3.",
      "ja": "REQUEST_METHODメタ変数は、セクション4.3で説明したように、要求を処理するためにスクリプトによって使用されるべき方法に設定しなければなりません。"
    },
    {
      "indent": 6,
      "text": "REQUEST_METHOD = method method = \"GET\" | \"POST\" | \"HEAD\" | extension-method extension-method = \"PUT\" | \"DELETE\" | token",
      "ja": "REQUEST_METHOD =メソッドmethod = \"GET\" | \"POST\" | \"HEAD\" |拡張メソッド拡張メソッド=「PUT」| \"DELETE\" |トークン"
    },
    {
      "indent": 3,
      "text": "The method is case sensitive. The HTTP methods are described in section 5.1.1 of the HTTP/1.0 specification [1] and section 5.1.1 of the HTTP/1.1 specification [4].",
      "ja": "この方法は、大文字と小文字が区別されます。 HTTPメソッドは、HTTP / 1.0仕様のセクション5.1.1 HTTP / 1.1仕様書[1]及びセクション5.1.1に記載されている[4]。"
    },
    {
      "indent": 0,
      "text": "4.1.13. SCRIPT_NAME",
      "section_title": true,
      "ja": "4.1.13。 SCRIPT_NAME"
    },
    {
      "indent": 3,
      "text": "The SCRIPT_NAME variable MUST be set to a URI path (not URL-encoded) which could identify the CGI script (rather than the script's output). The syntax is the same as for PATH_INFO (section 4.1.5)",
      "ja": "SCRIPT_NAME変数は、（むしろスクリプトの出力より）CGIスクリプトを識別することができるURIパス（ないURLエンコード）に設定しなければなりません。構文はPATH_INFO（セクション4.1.5）と同じです"
    },
    {
      "indent": 6,
      "text": "SCRIPT_NAME = \"\" | ( \"/\" path )",
      "ja": "SCRIPT_NAME = \"\" | （ \"/\" 道 ）"
    },
    {
      "indent": 3,
      "text": "The leading \"/\" is not part of the path. It is optional if the path is NULL; however, the variable MUST still be set in that case.",
      "ja": "「/」をリードするには、パスの一部ではありません。パスがNULLである場合はオプションです。しかし、変数はまだその場合に設定しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The SCRIPT_NAME string forms some leading part of the path component of the Script-URI derived in some implementation-defined manner. No PATH_INFO segment (see section 4.1.5) is included in the SCRIPT_NAME value.",
      "ja": "SCRIPT_NAME文字列は、いくつかの実装定義の方法で誘導されたスクリプト-URIのパスコンポーネントのいくつかの主要部分を形成します。いいえPATH_INFOセグメントは、（セクション4.1.5を参照）SCRIPT_NAME値に含まれていません。"
    },
    {
      "indent": 0,
      "text": "4.1.14. SERVER_NAME",
      "section_title": true,
      "ja": "4.1.14。サーバー名"
    },
    {
      "indent": 3,
      "text": "The SERVER_NAME variable MUST be set to the name of the server host to which the client request is directed. It is a case-insensitive hostname or network address. It forms the host part of the Script-URI.",
      "ja": "SERVER_NAME変数は、クライアントの要求が向けられているサーバのホスト名に設定しなければなりません。これは、大文字と小文字を区別しないホスト名やネットワークアドレスです。これは、スクリプト-URIのホスト部分を形成します。"
    },
    {
      "indent": 6,
      "text": "SERVER_NAME = server-name server-name = hostname | ipv4-address | ( \"[\" ipv6-address \"]\" )",
      "ja": "SERVER_NAME =サーバー名、サーバー名=ホスト名| IPv4のアドレス| （ \"[\" のIPv6アドレス \"]\"）"
    },
    {
      "indent": 3,
      "text": "A deployed server can have more than one possible value for this variable, where several HTTP virtual hosts share the same IP address. In that case, the server would use the contents of the request's Host header field to select the correct virtual host.",
      "ja": "配置されたサーバは、いくつかのHTTP仮想ホストが同じIPアドレスを共有し、この変数のための1つの可能な値、より多くを持つことができます。その場合、サーバは正しい仮想ホストを選択するために、リクエストのHostヘッダフィールドの内容を使用します。"
    },
    {
      "indent": 0,
      "text": "4.1.15. SERVER_PORT",
      "section_title": true,
      "ja": "4.1.15。サーバポート"
    },
    {
      "indent": 3,
      "text": "The SERVER_PORT variable MUST be set to the TCP/IP port number on which this request is received from the client. This value is used in the port part of the Script-URI.",
      "ja": "SERVER_PORT変数は、この要求をクライアントから受信されているTCP / IPポート番号に設定しなければなりません。この値は、スクリプト-URIのポート部に使用されています。"
    },
    {
      "indent": 6,
      "text": "SERVER_PORT = server-port server-port = 1*digit",
      "ja": "SERVER_PORT =サーバーポートサーバーポート= 1 *桁"
    },
    {
      "indent": 3,
      "text": "Note that this variable MUST be set, even if the port is the default port for the scheme and could otherwise be omitted from a URI.",
      "ja": "ポートはスキームのデフォルトポートで、それ以外のURIから省略することができたとしても、この変数は設定しなければならないことに注意してください。"
    },
    {
      "indent": 0,
      "text": "4.1.16. SERVER_PROTOCOL",
      "section_title": true,
      "ja": "4.1.16。 SERVER_PROTOCOL"
    },
    {
      "indent": 3,
      "text": "The SERVER_PROTOCOL variable MUST be set to the name and version of the application protocol used for this CGI request. This MAY differ from the protocol version used by the server in its communication with the client.",
      "ja": "SERVER_PROTOCOL変数は、このCGI要求に使用されるアプリケーションプロトコルの名前およびバージョンに設定しなければなりません。これは、クライアントとの通信にサーバが使用するプロトコルのバージョンとは異なる場合があります。"
    },
    {
      "indent": 6,
      "text": "SERVER_PROTOCOL = HTTP-Version | \"INCLUDED\" | extension-version HTTP-Version = \"HTTP\" \"/\" 1*digit \".\" 1*digit extension-version = protocol [ \"/\" 1*digit \".\" 1*digit ] protocol = token",
      "ja": "SERVER_PROTOCOL = HTTP-バージョン| |「含まれます」拡張バージョンのHTTP-バージョン= \"HTTP\" \"/\" 1 *数字 \"\" 1 *桁の拡張バージョン=プロトコル[ \"/\" 1個の*数字 \"\" * 1桁]プロトコル=トークン"
    },
    {
      "indent": 3,
      "text": "Here, 'protocol' defines the syntax of some of the information passing between the server and the script (the 'protocol-specific' features). It is not case sensitive and is usually presented in upper case. The protocol is not the same as the scheme part of the script URI, which defines the overall access mechanism used by the client to communicate with the server. For example, a request that reaches the script with a protocol of \"HTTP\" may have used an \"https\" scheme.",
      "ja": "ここで、「プロトコル」は、サーバスクリプト（「プロトコル固有の」機能）との間を通過する情報のいくつかの構文を定義します。これは、大文字と小文字を区別せず、通常は大文字で示されています。プロトコルは、サーバと通信するためにクライアントによって使用される全体的なアクセス機構を定義するスクリプトURIのスキーム部分と同じではありません。例えば、「HTTP」のプロトコルを使用してスクリプトに到達する要求は、「HTTPS」方式を使用していてもよいです。"
    },
    {
      "indent": 3,
      "text": "A well-known value for SERVER_PROTOCOL which the server MAY use is \"INCLUDED\", which signals that the current document is being included as part of a composite document, rather than being the direct target of the client request. The script should treat this as an HTTP/1.0 request.",
      "ja": "サーバが使用してよいSERVER_PROTOCOLための周知の値は、現在のドキュメントではなく、クライアントの要求の直接の標的であるよりも、複合文書の一部として含まれていることを知らせるれ、「含まれます」。このスクリプトは、HTTP / 1.0リクエストとして扱う必要があります。"
    },
    {
      "indent": 0,
      "text": "4.1.17. SERVER_SOFTWARE",
      "section_title": true,
      "ja": "4.1.17。 SERVER_SOFTWARE"
    },
    {
      "indent": 3,
      "text": "The SERVER_SOFTWARE meta-variable MUST be set to the name and version of the information server software making the CGI request (and running the gateway). It SHOULD be the same as the server description reported to the client, if any.",
      "ja": "SERVER_SOFTWAREメタ変数は、名前や情報サーバソフトウェアのバージョンCGI要求をする（およびゲートウェイを実行している）に設定しなければなりません。任意の場合は、クライアントに報告サーバーの説明と同じでなければなりません。"
    },
    {
      "indent": 6,
      "text": "SERVER_SOFTWARE = 1*( product | comment ) product = token [ \"/\" product-version ] product-version = token comment = \"(\" *( ctext | comment ) \")\" ctext = <any TEXT excluding \"(\" and \")\">",
      "ja": "SERVER_SOFTWARE = 1 *（製品|コメント）製品=トークン[ \"/\" 製品バージョン]製品バージョン=トークンコメント= \"（\" *（CTEXT |コメント） \"）\" CTEXT = <任意のテキストは除く \"（\" および \" ） \">"
    },
    {
      "indent": 0,
      "text": "4.1.18. Protocol-Specific Meta-Variables",
      "section_title": true,
      "ja": "4.1.18。プロトコル固有のメタ変数"
    },
    {
      "indent": 3,
      "text": "The server SHOULD set meta-variables specific to the protocol and scheme for the request. Interpretation of protocol-specific variables depends on the protocol version in SERVER_PROTOCOL. The server MAY set a meta-variable with the name of the scheme to a non-NULL value if the scheme is not the same as the protocol. The presence of such a variable indicates to a script which scheme is used by the request.",
      "ja": "サーバーは、要求のためのプロトコルとスキームに特有のメタ変数を設定する必要があります。プロトコル固有の変数の解釈は、SERVER_PROTOCOL内のプロトコルバージョンに依存します。スキームは、プロトコルと同じでない場合は、サーバーを非NULL値にスキームの名前のメタ変数を設定することができます。そのような変数の存在が要求によって使用されるスキームスクリプトに示します。"
    },
    {
      "indent": 3,
      "text": "Meta-variables with names beginning with \"HTTP_\" contain values read from the client request header fields, if the protocol used is HTTP. The HTTP header field name is converted to upper case, has all occurrences of \"-\" replaced with \"_\" and has \"HTTP_\" prepended to give the meta-variable name. The header data can be presented as sent by the client, or can be rewritten in ways which do not change its semantics. If multiple header fields with the same field-name are received then the server MUST rewrite them as a single value having the same semantics. Similarly, a header field that spans multiple lines MUST be merged onto a single line. The server MUST, if necessary, change the representation of the data (for example, the character set) to be appropriate for a CGI meta-variable.",
      "ja": "使用されるプロトコルがHTTPであれば、「HTTP_」で始まる名前のメタ変数は、クライアントのリクエストヘッダフィールドから読み取った値が含まれています。 HTTPヘッダフィールド名は大文字に変換され、すべてのオカレンスを持つ「 - 」「_」で置き換えおよびメタ変数名を与えるために付加「HTTP_」を有します。ヘッダデータは、クライアントから送信されたとして提示することができるか、その意味を変えない方法で書き換えることができます。同じフィールド名を持つ複数のヘッダフィールドは、受信された場合、サーバは、同じ意味を有する単一の値としてそれらを書き換える必要があります。同様に、複数の行にまたがるヘッダーフィールドは、単一の行にマージされなければなりません。必要であれば、サーバは、CGIメタ変数に適するように（例えば、文字セット）データの表現を変更しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The server is not required to create meta-variables for all the header fields that it receives. In particular, it SHOULD remove any header fields carrying authentication information, such as 'Authorization'; or that are available to the script in other variables, such as 'Content-Length' and 'Content-Type'. The server MAY remove header fields that relate solely to client-side communication issues, such as 'Connection'.",
      "ja": "サーバーは、受信するすべてのヘッダフィールドのメタ変数を作成する必要はありません。特に、このような「認可」と、認証情報を搬送する任意のヘッダフィールドを削除する必要があります。あるいは、そのような「のContent-Length」や「Content-Typeの」と、他の変数でスクリプトに利用可能であること。サーバは、「接続」として、クライアント側の通信の問題のみに関連するヘッダフィールドを除去することができます。"
    },
    {
      "indent": 0,
      "text": "4.2. Request Message-Body",
      "section_title": true,
      "ja": "4.2。リクエスト・メッセージボディ"
    },
    {
      "indent": 3,
      "text": "Request data is accessed by the script in a system-defined method; unless defined otherwise, this will be by reading the 'standard input' file descriptor or file handle.",
      "ja": "要求データは、システム定義の方法でスクリプトによってアクセスされます。別途定義しない限り、これは「標準入力」ファイルディスクリプタまたはファイルハンドルを読むことによってなります。"
    },
    {
      "indent": 6,
      "text": "Request-Data = [ request-body ] [ extension-data ] request-body = <CONTENT_LENGTH>OCTET extension-data = *OCTET",
      "ja": "要求データ= [要求ボディ] [拡張データ]要求ボディ= <CONTENT_LENGTH>オクテット拡張データ= * OCTET"
    },
    {
      "indent": 3,
      "text": "A request-body is supplied with the request if the CONTENT_LENGTH is not NULL. The server MUST make at least that many bytes available for the script to read. The server MAY signal an end-of-file condition after CONTENT_LENGTH bytes have been read or it MAY supply extension data. Therefore, the script MUST NOT attempt to read more than CONTENT_LENGTH bytes, even if more data is available. However, it is not obliged to read any of the data.",
      "ja": "CONTENT_LENGTHがNULLでない場合、リクエストボディは要求が供給されています。サーバーは、スクリプトが読みために、少なくともそのバイト数を利用できるようにしなければなりません。 CONTENT_LENGTHバイトが読み込まれた後、サーバーは、ファイル終了条件をシグナリングすることができるか、それが拡張データを供給することができます。そのため、このスクリプトは、より多くのデータが利用可能である場合でも、CONTENT_LENGTHバイト以上のものを読むのを試みてはいけません。しかし、任意のデータを読み取ることが義務づけられていません。"
    },
    {
      "indent": 3,
      "text": "For non-parsed header (NPH) scripts (section 5), the server SHOULD attempt to ensure that the data supplied to the script is precisely as supplied by the client and is unaltered by the server.",
      "ja": "ために非解析ヘッダ（NPH）スクリプト（セクション5）は、サーバは、クライアントによって供給され、サーバによって変更されないようにスクリプトに供給されたデータが正確であることを保証することを試みるべきです。"
    },
    {
      "indent": 3,
      "text": "As transfer-codings are not supported on the request-body, the server MUST remove any such codings from the message-body, and recalculate the CONTENT_LENGTH. If this is not possible (for example, because of large buffering requirements), the server SHOULD reject the client request. It MAY also remove content-codings from the message-body.",
      "ja": "転送コーディングが要求体でサポートされていないように、サーバは、メッセージ本体からそのようなコーディングを除去し、そしてCONTENT_LENGTHを再計算しなければなりません。これが不可能な場合（たとえば、大きいためバッファリング要件の）、サーバはクライアントの要求を拒否すべきです。また、メッセージボディから内容コーディングを削除することができます。"
    },
    {
      "indent": 0,
      "text": "4.3. Request Methods",
      "section_title": true,
      "ja": "4.3。リクエストメソッド"
    },
    {
      "indent": 3,
      "text": "The Request Method, as supplied in the REQUEST_METHOD meta-variable, identifies the processing method to be applied by the script in producing a response. The script author can choose to implement the methods most appropriate for the particular application. If the script receives a request with a method it does not support it SHOULD reject it with an error (see section 6.3.3).",
      "ja": "リクエストメソッドは、REQUEST_METHODメタ変数に供給される、応答を生成する際にスクリプトによって適用される処理方法を識別する。スクリプト作成者は、特定のアプリケーションのための最も適切な方法を実装することを選択することができます。このスクリプトは、それが誤りでそれを拒否すべきでサポートされていない方法でリクエストを受信した場合（セクション6.3.3を参照してください）。"
    },
    {
      "indent": 0,
      "text": "4.3.1. GET",
      "section_title": true,
      "ja": "4.3.1。取得する"
    },
    {
      "indent": 3,
      "text": "The GET method indicates that the script should produce a document based on the meta-variable values. By convention, the GET method is 'safe' and 'idempotent' and SHOULD NOT have the significance of taking an action other than producing a document.",
      "ja": "GETメソッドは、スクリプトがメタ変数の値に基づいて文書を作成する必要があることを示しています。慣例により、GETメソッドは、「安全」と「冪等」で、文書を生成する以外の行動を取るの重要性を持つべきではありません。"
    },
    {
      "indent": 3,
      "text": "The meaning of the GET method may be modified and refined by protocol-specific meta-variables.",
      "ja": "GETメソッドの意味が変更され、プロトコル特有のメタ変数によって精製することができます。"
    },
    {
      "indent": 0,
      "text": "4.3.2. POST",
      "section_title": true,
      "ja": "4.3.2。役職"
    },
    {
      "indent": 3,
      "text": "The POST method is used to request the script perform processing and produce a document based on the data in the request message-body, in addition to meta-variable values. A common use is form submission in HTML [18], intended to initiate processing by the script that has a permanent affect, such a change in a database.",
      "ja": "POSTメソッドは、メタ変数の値に加えて、処理を実行し、要求メッセージボディ内のデータに基づいて文書を生成するスクリプトを要求するために使用されます。一般的な用途は、データベース内の、影響永久このような変化を有しているスクリプトによって処理を開始することを意図HTML [18]のフォーム提出、です。"
    },
    {
      "indent": 3,
      "text": "The script MUST check the value of the CONTENT_LENGTH variable before reading the attached message-body, and SHOULD check the CONTENT_TYPE value before processing it.",
      "ja": "スクリプトは、添付されたメッセージボディを読み込む前にCONTENT_LENGTH変数の値をチェックしなければならない、それを処理する前にCONTENT_TYPE値を確認してください。"
    },
    {
      "indent": 0,
      "text": "4.3.3. HEAD",
      "section_title": true,
      "ja": "4.3.3。頭"
    },
    {
      "indent": 3,
      "text": "The HEAD method requests the script to do sufficient processing to return the response header fields, without providing a response message-body. The script MUST NOT provide a response message-body for a HEAD request. If it does, then the server MUST discard the message-body when reading the response from the script.",
      "ja": "HEADメソッドは、応答メッセージボディを設けることなく、レスポンスヘッダフィールドを返すのに十分な処理を行うためのスクリプトを要求します。このスクリプトは、HEAD要求に対する応答メッセージボディを提供してはなりません。それがない場合は、スクリプトからの応答を読み取る際に、サーバはメッセージボディを捨てなければなりません。"
    },
    {
      "indent": 0,
      "text": "4.3.4. Protocol-Specific Methods",
      "section_title": true,
      "ja": "4.3.4。プロトコル固有のメソッド"
    },
    {
      "indent": 3,
      "text": "The script MAY implement any protocol-specific method, such as HTTP/1.1 PUT and DELETE; it SHOULD check the value of SERVER_PROTOCOL when doing so.",
      "ja": "スクリプトは、HTTP / 1.1 PUTなどの任意のプロトコル固有のメソッドを実装し、削除することができます。そうするときには、SERVER_PROTOCOLの値をチェックする必要があります。"
    },
    {
      "indent": 3,
      "text": "The server MAY decide that some methods are not appropriate or permitted for a script, and may handle the methods itself or return an error to the client.",
      "ja": "サーバーは、いくつかの方法が適切か、スクリプトのために許可されていないと判断することができ、メソッド自体を処理またはクライアントにエラーを返すことがあります。"
    },
    {
      "indent": 0,
      "text": "4.4. The Script Command Line",
      "section_title": true,
      "ja": "4.4。スクリプトコマンドライン"
    },
    {
      "indent": 3,
      "text": "Some systems support a method for supplying an array of strings to the CGI script. This is only used in the case of an 'indexed' HTTP query, which is identified by a 'GET' or 'HEAD' request with a URI query string that does not contain any unencoded \"=\" characters. For such a request, the server SHOULD treat the query-string as a search-string and parse it into words, using the rules",
      "ja": "いくつかのシステムは、CGIスクリプトに文字列の配列を供給するための方法をサポートしています。これが唯一の任意の符号化されていない「=」文字が含まれていないURIのクエリ文字列で「GET」または「HEAD」要求によって識別される「インデックス付き」HTTPクエリの場合に使用されています。そのような要求のため、サーバーは、検索文字列としてクエリ文字列を扱うべきであるとの言葉にそれを解析し、ルールを使用して"
    },
    {
      "indent": 6,
      "text": "search-string = search-word *( \"+\" search-word ) search-word = 1*schar schar = unreserved | escaped | xreserved xreserved = \";\" | \"/\" | \"?\" | \":\" | \"@\" | \"&\" | \"=\" | \",\" | \"$\"",
      "ja": "検索文字列=検索語*（「+」検索語）検索ワード= 1 * SCHAR SCHAR =予約されていません|エスケープ| xreserved xreserved = \";\" | \"/\" | \"？\" | \"：\" | \"@\" | \"＆\" | \"=\" | \"\" | \"$\""
    },
    {
      "indent": 3,
      "text": "After parsing, each search-word is URL-decoded, optionally encoded in a system-defined manner and then added to the command line argument list.",
      "ja": "解析後、各検索語は、URLデコード任意に、システム定義の方法で符号化して、コマンドライン引数のリストに追加されます。"
    },
    {
      "indent": 3,
      "text": "If the server cannot create any part of the argument list, then the server MUST NOT generate any command line information. For example, the number of arguments may be greater than operating system or server limits, or one of the words may not be representable as an argument.",
      "ja": "サーバーは、引数リストの任意の部分を作成することができない場合、サーバは、任意のコマンドライン情報を生成してはなりません。例えば、引数の数は、オペレーティング・システムまたはサーバの制限よりも大きくすることができる、または単語の一つは引数として表現ではないかもしれません。"
    },
    {
      "indent": 3,
      "text": "The script SHOULD check to see if the QUERY_STRING value contains an unencoded \"=\" character, and SHOULD NOT use the command line arguments if it does.",
      "ja": "スクリプトはQUERY_STRING値がエンコードされていない「=」文字が含まれているかどうかを確認する必要があり、それがない場合は、コマンドライン引数を使用しないでください。"
    },
    {
      "indent": 0,
      "text": "5. NPH Scripts",
      "section_title": true,
      "ja": "5. NPHスクリプト"
    },
    {
      "indent": 0,
      "text": "5.1. Identification",
      "section_title": true,
      "ja": "5.1。識別"
    },
    {
      "indent": 3,
      "text": "The server MAY support NPH (Non-Parsed Header) scripts; these are scripts to which the server passes all responsibility for response processing.",
      "ja": "サーバーは、NPH（非解析ヘッダ）スクリプトをサポートしてもよい（MAY）。これらは、サーバが応答処理のためにすべての責任を通過するためのスクリプトです。"
    },
    {
      "indent": 3,
      "text": "This specification provides no mechanism for an NPH script to be identified on the basis of its output data alone. By convention, therefore, any particular script can only ever provide output of one type (NPH or CGI) and hence the script itself is described as an 'NPH script'. A server with NPH support MUST provide an implementation-defined mechanism for identifying NPH scripts, perhaps based on the name or location of the script.",
      "ja": "この仕様は、NPHスクリプトだけでは、その出力データに基づいて識別されるようにするためのメカニズムを提供していません。慣例により、従って、任意の特定のスクリプトはしか「NPHスクリプト」として記載されているいずれかのタイプ（NPHまたはCGI）、したがって、スクリプト自体の出力を提供することができます。 NPHをサポートしたサーバは、おそらく、スクリプトの名前または場所に基づいてNPHスクリプトを識別するための実装定義のメカニズムを提供しなければなりません。"
    },
    {
      "indent": 0,
      "text": "5.2. NPH Response",
      "section_title": true,
      "ja": "5.2。 NPHレスポンス"
    },
    {
      "indent": 3,
      "text": "There MUST be a system-defined method for the script to send data back to the server or client; a script MUST always return some data. Unless defined otherwise, this will be the same as for conventional CGI scripts.",
      "ja": "スクリプトがサーバーまたはクライアントにデータを送信するためのシステム定義の方法が存在する必要があります。スクリプトは、常にいくつかのデータを返さなければなりません。特に定義しない限り、これは従来のCGIスクリプトの場合と同じになります。"
    },
    {
      "indent": 3,
      "text": "Currently, NPH scripts are only defined for HTTP client requests. An (HTTP) NPH script MUST return a complete HTTP response message, currently described in section 6 of the HTTP specifications [1], [4]. The script MUST use the SERVER_PROTOCOL variable to determine the appropriate format for a response. It MUST also take account of any generic or protocol-specific meta-variables in the request as might be mandated by the particular protocol specification.",
      "ja": "現在、NPHスクリプトはHTTPのみのクライアント要求のために定義されています。 （HTTP）NPHスクリプトは、[4]、[1]現在、HTTP仕様のセクション6で説明した完全なHTTPレスポンスメッセージを返さなければなりません。スクリプトは、応答のための適切なフォーマットを決定するためにSERVER_PROTOCOL変数を使用しなければなりません。特定のプロトコル仕様で義務付けされる可能性がありますように、それはまた、リクエスト内の任意の汎用またはプロトコル固有のメタ変数を考慮しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The server MUST ensure that the script output is sent to the client unmodified. Note that this requires the script to use the correct character set (US-ASCII [9] and ISO 8859-1 [10] for HTTP) in the header fields. The server SHOULD attempt to ensure that the script output is sent directly to the client, with minimal internal and no transport-visible buffering.",
      "ja": "サーバーは、スクリプトの出力が変更されていないクライアントに送信されていることを保証しなければなりません。このヘッダフィールドに正しい文字セット（HTTPのためのUS-ASCII [9]及びISO 8859-1 [10]）を使用するスクリプトを必要とすることに注意してください。サーバーは、スクリプトの出力は、最小限の内部および無輸送可視バッファリングして、クライアントに直接送信されていることを確認しようとすべきです。"
    },
    {
      "indent": 3,
      "text": "Unless the implementation defines otherwise, the script MUST NOT indicate in its response that the client can send further requests over the same connection.",
      "ja": "実装はそう定義しない限り、このスクリプトは、クライアントが同じ接続で更なる要求を送信できることをその応答で示してはいけません。"
    },
    {
      "indent": 0,
      "text": "6. CGI Response",
      "section_title": true,
      "ja": "6. CGIレスポンス"
    },
    {
      "indent": 0,
      "text": "6.1. Response Handling",
      "section_title": true,
      "ja": "6.1。レスポンスの処理"
    },
    {
      "indent": 3,
      "text": "A script MUST always provide a non-empty response, and so there is a system-defined method for it to send this data back to the server. Unless defined otherwise, this will be via the 'standard output' file descriptor.",
      "ja": "スクリプトは常に非空の応答を提供しなければならない、そしてそれが戻ってサーバーにこのデータを送信するためのシステム定義の方法があります。特に定義しない限り、これは「標準出力」ファイルディスクリプタ経由となります。"
    },
    {
      "indent": 3,
      "text": "The script MUST check the REQUEST_METHOD variable when processing the request and preparing its response.",
      "ja": "リクエストを処理し、その応答を準備する際のスクリプトは、REQUEST_METHOD変数をチェックしなければなりません。"
    },
    {
      "indent": 3,
      "text": "The server MAY implement a timeout period within which data must be received from the script. If a server implementation defines such a timeout and receives no data from a script within the timeout period, the server MAY terminate the script process.",
      "ja": "サーバはデータをスクリプトから受信されている必要があり、その中のタイムアウト期間を実施することができます。サーバの実装は、タイムアウトを定義し、タイムアウト期間内にスクリプトからのデータを受信しない場合、サーバは、スクリプト処理を終了することができます。"
    },
    {
      "indent": 0,
      "text": "6.2. Response Types",
      "section_title": true,
      "ja": "6.2。応答タイプ"
    },
    {
      "indent": 3,
      "text": "The response comprises a message-header and a message-body, separated by a blank line. The message-header contains one or more header fields. The body may be NULL.",
      "ja": "応答は空白行で区切られた、メッセージヘッダとメッセージ本体を含みます。メッセージヘッダは、一つ以上のヘッダフィールドを含みます。ボディにはNULLを指定できます。"
    },
    {
      "indent": 6,
      "text": "generic-response = 1*header-field NL [ response-body ]",
      "ja": "一般的な応答= 1 *ヘッダフィールドNL [応答ボディ]"
    },
    {
      "indent": 3,
      "text": "The script MUST return one of either a document response, a local redirect response or a client redirect (with optional document) response. In the response definitions below, the order of header fields in a response is not significant (despite appearing so in the BNF). The header fields are defined in section 6.3.",
      "ja": "スクリプトは、文書の応答、ローカルリダイレクト応答または（オプション文書で）クライアントのリダイレクト応答のいずれかのいずれかを返さなければなりません。以下応答の定義では、応答のヘッダフィールドの順序は、（BNFにそう出現にもかかわらず）重要ではありません。ヘッダフィールドは、セクション6.3で定義されています。"
    },
    {
      "indent": 6,
      "text": "CGI-Response = document-response | local-redir-response | client-redir-response | client-redirdoc-response",
      "ja": "CGI-レスポンス=文書、応答|ローカルREDIR  - レスポンス|クライアントREDIR  - レスポンス|クライアントredirdoc応答"
    },
    {
      "indent": 0,
      "text": "6.2.1. Document Response",
      "section_title": true,
      "ja": "6.2.1。文書回答"
    },
    {
      "indent": 3,
      "text": "The CGI script can return a document to the user in a document response, with an optional error code indicating the success status of the response.",
      "ja": "CGIスクリプトは、応答の成功状態を示すオプションのエラーコードで、文書応答してユーザに文書を返すことができます。"
    },
    {
      "indent": 6,
      "text": "document-response = Content-Type [ Status ] *other-field NL response-body",
      "ja": "ドキュメント・レスポンス= Content-Typeの[ステータス] *他のフィールドNLレスポンスボディ"
    },
    {
      "indent": 3,
      "text": "The script MUST return a Content-Type header field. A Status header field is optional, and status 200 'OK' is assumed if it is omitted. The server MUST make any appropriate modifications to the script's output to ensure that the response to the client complies with the response protocol version.",
      "ja": "スクリプトは、Content-Typeヘッダフィールドを返さなければなりません。 Statusヘッダフィールドはオプションであり、それが省略された場合、ステータス200「OK」が想定されます。サーバーは、クライアントへの応答が応答プロトコルのバージョンに準拠していることを確認するためのスクリプトの出力に任意の適切な変更を加える必要があります。"
    },
    {
      "indent": 0,
      "text": "6.2.2. Local Redirect Response",
      "section_title": true,
      "ja": "6.2.2。ローカルリダイレクト応答"
    },
    {
      "indent": 3,
      "text": "The CGI script can return a URI path and query-string ('local-pathquery') for a local resource in a Location header field. This indicates to the server that it should reprocess the request using the path specified.",
      "ja": "CGIスクリプトは、Locationヘッダフィールド内のローカルリソースのURIパスとクエリ文字列（「ローカルpathquery」）を返すことができます。これは、指定されたパスを使用して要求を再処理する必要があり、サーバーに示します。"
    },
    {
      "indent": 6,
      "text": "local-redir-response = local-Location NL",
      "ja": "ローカルREDIR応答=ローカル-場所NL"
    },
    {
      "indent": 3,
      "text": "The script MUST NOT return any other header fields or a message-body, and the server MUST generate the response that it would have produced in response to a request containing the URL",
      "ja": "スクリプトは、他のヘッダフィールド、またはメッセージボディを返してはいけません、そして、サーバは、URLを含むリクエストに応答して産生されたであろうことは応答を生成しなければなりません"
    },
    {
      "indent": 6,
      "text": "scheme \"://\" server-name \":\" server-port local-pathquery",
      "ja": "スキーム「：//」サーバー名「：」サーバーポートローカルpathquery"
    },
    {
      "indent": 0,
      "text": "6.2.3. Client Redirect Response",
      "section_title": true,
      "ja": "6.2.3。クライアントのリダイレクト応答"
    },
    {
      "indent": 3,
      "text": "The CGI script can return an absolute URI path in a Location header field, to indicate to the client that it should reprocess the request using the URI specified.",
      "ja": "CGIスクリプトは、指定されたURIを使用して要求を再処理する必要があることをクライアントに示すために、Locationヘッダフィールドに絶対URIのパスを返すことができます。"
    },
    {
      "indent": 6,
      "text": "client-redir-response = client-Location *extension-field NL",
      "ja": "クライアントREDIR応答=クライアント - ロケーション*拡張フィールドNL"
    },
    {
      "indent": 3,
      "text": "The script MUST not provide any other header fields, except for server-defined CGI extension fields. For an HTTP client request, the server MUST generate a 302 'Found' HTTP response message.",
      "ja": "スクリプトは、サーバー定義のCGI拡張フィールドを除いて、任意の他のヘッダフィールドを提供してはいけません。 HTTPクライアント要求の場合、サーバーは302「が見つかり」HTTP応答メッセージを生成しなければなりません。"
    },
    {
      "indent": 0,
      "text": "6.2.4. Client Redirect Response with Document",
      "section_title": true,
      "ja": "6.2.4。ドキュメントとクライアントのリダイレクト応答"
    },
    {
      "indent": 3,
      "text": "The CGI script can return an absolute URI path in a Location header field together with an attached document, to indicate to the client that it should reprocess the request using the URI specified.",
      "ja": "CGIスクリプトは、指定されたURIを使用して要求を再処理する必要があることをクライアントに示すために、添付文書と一緒にロケーションヘッダーフィールド内の絶対URIのパスを返すことができます。"
    },
    {
      "indent": 6,
      "text": "client-redirdoc-response = client-Location Status Content-Type *other-field NL response-body",
      "ja": "クライアントredirdoc応答=クライアント - ロケーションステータスのContent-Type *他のフィールドNLレスポンスボディ"
    },
    {
      "indent": 3,
      "text": "The Status header field MUST be supplied and MUST contain a status value of 302 'Found', or it MAY contain an extension-code, that is, another valid status code that means client redirection. The server MUST make any appropriate modifications to the script's output to ensure that the response to the client complies with the response protocol version.",
      "ja": "Statusヘッダフィールドが供給されなければならないと302のステータス値を含まなければなりません「が見つかり」、またはそれは、つまり、クライアントのリダイレクトを意味する別の有効なステータス・コードを拡張コードを含むかもしれません。サーバーは、クライアントへの応答が応答プロトコルのバージョンに準拠していることを確認するためのスクリプトの出力に任意の適切な変更を加える必要があります。"
    },
    {
      "indent": 0,
      "text": "6.3. Response Header Fields",
      "section_title": true,
      "ja": "6.3。レスポンスヘッダフィールド"
    },
    {
      "indent": 3,
      "text": "The response header fields are either CGI or extension header fields to be interpreted by the server, or protocol-specific header fields to be included in the response returned to the client. At least one CGI field MUST be supplied; each CGI field MUST NOT appear more than once in the response. The response header fields have the syntax:",
      "ja": "レスポンスヘッダフィールドは、応答がクライアントに返さに含まれるいずれかのサーバによって解釈されるべきCGIまたは拡張ヘッダフィールド、またはプロトコル固有のヘッダフィールドです。少なくとも一つCGIフィールドが供給されなければなりません。各CGIフィールドは、かつて応じてより多く見えてはいけません。レスポンスヘッダフィールドは、構文を持っています："
    },
    {
      "indent": 6,
      "text": "header-field = CGI-field | other-field CGI-field = Content-Type | Location | Status other-field = protocol-field | extension-field protocol-field = generic-field extension-field = generic-field generic-field = field-name \":\" [ field-value ] NL field-name = token field-value = *( field-content | LWSP ) field-content = *( token | separator | quoted-string )",
      "ja": "ヘッダフィールド= CGI-フィールド|他のフィールドCGI-フィールド= Content-Typeの|所在地|ステータス他のフィールド=プロトコルフィールド|拡張フィールド、プロトコルフィールド=一般的なフィールドの拡張フィールド=一般的なフィールドの一般的なフィールド=フィールド名「：」[フィールド値] NLフィールド名=トークンフィールド値= *（フィールド・コンテンツ| LWSP）フィールド・コンテンツ= *（トークン|セパレーター|引用符で囲まれた文字列）"
    },
    {
      "indent": 3,
      "text": "The field-name is not case sensitive. A NULL field value is equivalent to a field not being sent. Note that each header field in a CGI-Response MUST be specified on a single line; CGI/1.1 does not support continuation lines. Whitespace is permitted between the \":\" and the field-value (but not between the field-name and the \":\"), and also between tokens in the field-value.",
      "ja": "フィールド名は大文字と小文字を区別しません。 NULLフィールドの値が送信されていないフィールドに相当します。 CGI-応じて、各ヘッダフィールドは、単一の行で指定しなければならないことに留意されたいです。 CGI / 1.1は、継続行をサポートしていません。 （ただし、フィールド名との間の「：」）およびフィールド値、および、フィールド値のトークンの間に：「」空白の間に許可されます。"
    },
    {
      "indent": 0,
      "text": "6.3.1. Content-Type",
      "section_title": true,
      "ja": "6.3.1。コンテンツタイプ"
    },
    {
      "indent": 3,
      "text": "The Content-Type response field sets the Internet Media Type [6] of the entity body.",
      "ja": "Content-Typeのレスポンスフィールドはエンティティボディのインターネットメディアタイプ[6]を設定します。"
    },
    {
      "indent": 6,
      "text": "Content-Type = \"Content-Type:\" media-type NL",
      "ja": "Content-Typeの= \"Content-Typeの\" メディアタイプNL"
    },
    {
      "indent": 3,
      "text": "If an entity body is returned, the script MUST supply a Content-Type field in the response. If it fails to do so, the server SHOULD NOT attempt to determine the correct content type. The value SHOULD be sent unmodified to the client, except for any charset parameter changes.",
      "ja": "エンティティボディが返された場合、スクリプトはレスポンスのContent-Typeフィールドを供給しなければなりません。それはそうしなかった場合、サーバは正しいコンテンツタイプを決定するために試みるべきではありません。値は任意のcharsetパラメータの変更を除いて、クライアントにそのまま送ってください。"
    },
    {
      "indent": 3,
      "text": "Unless it is otherwise system-defined, the default charset assumed by the client for text media-types is ISO-8859-1 if the protocol is HTTP and US-ASCII otherwise. Hence the script SHOULD include a charset parameter. See section 3.4.1 of the HTTP/1.1 specification [4] for a discussion of this issue.",
      "ja": "それはそうでない場合は、システム定義されない限り、プロトコルはHTTPそうでないと、US-ASCIIである場合、テキストメディアタイプのため、クライアントが想定するデフォルトの文字セットはISO-8859-1です。したがって、このスクリプトは、charsetパラメータを含めるべきです。この問題の議論のためのHTTP / 1.1仕様書[4]のセクション3.4.1を参照してください。"
    },
    {
      "indent": 0,
      "text": "6.3.2. Location",
      "section_title": true,
      "ja": "6.3.2。ロケーション"
    },
    {
      "indent": 3,
      "text": "The Location header field is used to specify to the server that the script is returning a reference to a document rather than an actual document (see sections 6.2.3 and 6.2.4). It is either an absolute URI (optionally with a fragment identifier), indicating that the client is to fetch the referenced document, or a local URI path (optionally with a query string), indicating that the server is to fetch the referenced document and return it to the client as the response.",
      "ja": "Locationヘッダフィールドは、スクリプトは、文書ではなく、実際の文書への参照を返してサーバに指定するために使用される（セクション6.2.3および6.2.4を参照されたいです）。これは、サーバーが参照文書とリターンをフェッチすることであることを示す、クライアントが参照文書、または（必要に応じて、クエリ文字列で）ローカルURIのパスを取得することであることを示し、（必要に応じて断片識別子を有する）、絶対URIのいずれかでありますそのレスポンスとしてクライアントへ。"
    },
    {
      "indent": 6,
      "text": "Location = local-Location | client-Location client-Location = \"Location:\" fragment-URI NL local-Location = \"Location:\" local-pathquery NL fragment-URI = absoluteURI [ \"#\" fragment ] fragment = *uric local-pathquery = abs-path [ \"?\" query-string ] abs-path = \"/\" path-segments path-segments = segment *( \"/\" segment ) segment = *pchar pchar = unreserved | escaped | extra extra = \":\" | \"@\" | \"&\" | \"=\" | \"+\" | \"$\" | \",\"",
      "ja": "場所=ローカル・アクセス|クライアント - ロケーションのクライアント・場所= \"場所：\" フラグメント-URI NLローカル・場所= \"場所：\" ローカルpathquery NLフラグメント-URI = absoluteURIで[ \"＃\" フラグメント]フラグメント= *尿ローカル-pathquery = ABS-パス[ \"？\"予約されていないクエリ文字列] ABS-パス= \"/\" パスセグメントパスセグメント=セグメント*（ \"/\" セグメント）セグメント= * PChar型のPChar型= |エスケープ|余分な余分= \"：\" | \"@\" | \"＆\" | \"=\" | \"+\" | \"$\" | \"\""
    },
    {
      "indent": 3,
      "text": "The syntax of an absoluteURI is incorporated into this document from that specified in RFC 2396 [2] and RFC 2732 [7]. A valid absoluteURI always starts with the name of scheme followed by \":\"; scheme names start with a letter and continue with alphanumerics, \"+\", \"-\" or \".\". The local URI path and query must be an absolute path, and not a relative path or NULL, and hence must start with a \"/\".",
      "ja": "absoluteURIでの構文は、RFC 2396で指定されているから、この文書に組み込まれている[2]及びRFC 2732 [7]。有効なabsoluteURIでは常に続くスキームの名前で始まります「：」;スキーム名は文字で始まり、英数字を続け、「+」、「 - 」「」か。ローカルURIパスおよびクエリーは、絶対パスではなく、相対パスまたはNULLでなければならず、したがって「/」で始まる必要があります。"
    },
    {
      "indent": 3,
      "text": "Note that any message-body attached to the request (such as for a POST request) may not be available to the resource that is the target of the redirect.",
      "ja": "（例えば、POST要求のような）要求に添付されたメッセージボディは、リダイレクトのターゲットであるリソースが利用可能ではないかもしれないことに留意されたいです。"
    },
    {
      "indent": 0,
      "text": "6.3.3. Status",
      "section_title": true,
      "ja": "6.3.3。状態"
    },
    {
      "indent": 3,
      "text": "The Status header field contains a 3-digit integer result code that indicates the level of success of the script's attempt to handle the request.",
      "ja": "Statusヘッダフィールドは、リクエストを処理するスクリプトの試みの成功のレベルを示す3桁の整数の結果コードが含まれています。"
    },
    {
      "indent": 6,
      "text": "Status = \"Status:\" status-code SP reason-phrase NL status-code = \"200\" | \"302\" | \"400\" | \"501\" | extension-code extension-code = 3digit reason-phrase = *TEXT",
      "ja": "ステータス=「ステータス：」ステータスコードSP理由フレーズNLステータスコード=「200」| \"302\" | \"400\" | \"501\" |延長コード延長コード= 3digit理由フレーズ= * TEXT"
    },
    {
      "indent": 3,
      "text": "Status code 200 'OK' indicates success, and is the default value assumed for a document response. Status code 302 'Found' is used with a Location header field and response message-body. Status code",
      "ja": "ステータスコード200は、「OK」の成功を示し、文書の応答を想定し、デフォルト値です。 「見つかった」ステータスコード302は、ロケーションヘッダーフィールドと応答メッセージボディと一緒に使用されます。ステータスコード"
    },
    {
      "indent": 3,
      "text": "400 'Bad Request' may be used for an unknown request format, such as a missing CONTENT_TYPE. Status code 501 'Not Implemented' may be returned by a script if it receives an unsupported REQUEST_METHOD.",
      "ja": "400「不正な要求」は、欠落CONTENT_TYPEとして、未知の要求フォーマットのために使用することができます。それはサポートされていないREQUEST_METHODを受信した場合、ステータスコード501「は組み込まれていませんが」スクリプトによって返されることがあります。"
    },
    {
      "indent": 3,
      "text": "Other valid status codes are listed in section 6.1.1 of the HTTP specifications [1], [4], and also the IANA HTTP Status Code Registry [8] and MAY be used in addition to or instead of the ones listed above. The script SHOULD check the value of SERVER_PROTOCOL before using HTTP/1.1 status codes. The script MAY reject with error 405 'Method Not Allowed' HTTP/1.1 requests made using a method it does not support.",
      "ja": "他の有効なステータスコードは、HTTP仕様のセクション6.1.1に記載されている[1]、[4]、また、IANAのHTTPステータスコードレジストリ[8]、または代わりに、上記のものを加えて使用することができます。このスクリプトは、HTTP / 1.1のステータスコードを使用する前にSERVER_PROTOCOLの値をチェックする必要があります。スクリプトがエラー405で拒否するかもしれHTTP「メソッドは許可されていません」/ 1.1の要求は、それがサポートされていないメソッドを使用して作られました。"
    },
    {
      "indent": 3,
      "text": "Note that returning an error status code does not have to mean an error condition with the script itself. For example, a script that is invoked as an error handler by the server should return the code appropriate to the server's error condition.",
      "ja": "エラーステータスコードを返すことは、スクリプト自体でエラー状態を意味する必要はないことに注意してください。例えば、サーバがエラーハンドラとして呼び出されたスクリプトは、サーバーのエラー条件に適切なコードを返す必要があります。"
    },
    {
      "indent": 3,
      "text": "The reason-phrase is a textual description of the error to be returned to the client for human consumption.",
      "ja": "理由フレーズは、人間の消費のためにクライアントに返されるエラーのテキスト記述です。"
    },
    {
      "indent": 0,
      "text": "6.3.4. Protocol-Specific Header Fields",
      "section_title": true,
      "ja": "6.3.4。プロトコル固有のヘッダフィールド"
    },
    {
      "indent": 3,
      "text": "The script MAY return any other header fields that relate to the response message defined by the specification for the SERVER_PROTOCOL (HTTP/1.0 [1] or HTTP/1.1 [4]). The server MUST translate the header data from the CGI header syntax to the HTTP header syntax if these differ. For example, the character sequence for newline (such as UNIX's US-ASCII LF) used by CGI scripts may not be the same as that used by HTTP (US-ASCII CR followed by LF).",
      "ja": "スクリプトはSERVER_PROTOCOLの仕様によって定義された応答メッセージに関連する任意の他のヘッダフィールドを返してもよい（HTTP / 1.0 [1]またはHTTP / 1.1 [4]）。これらが異なる場合、サーバーは、HTTPヘッダーの構文にCGIヘッダー構文からヘッダデータを変換する必要があります。例えば、CGIスクリプトによって使用される（例えばUNIXのUS-ASCII LFなど）改行文字列は、HTTP（LFが続くUS-ASCII CR）で使用されたものと同じではないかもしれません。"
    },
    {
      "indent": 3,
      "text": "The script MUST NOT return any header fields that relate to client-side communication issues and could affect the server's ability to send the response to the client. The server MAY remove any such header fields returned by the client. It SHOULD resolve any conflicts between header fields returned by the script and header fields that it would otherwise send itself.",
      "ja": "このスクリプトは、クライアント側の通信の問題に関連する任意のヘッダフィールドを返してはならないし、クライアントへの応答を送信するサーバの能力に影響を与える可能性があります。サーバはクライアントから返された、このようなヘッダフィールドを削除することができます。それはそう自分自身を送信するスクリプトやヘッダフィールドによって返されたヘッダフィールド間の競合を解決する必要があります。"
    },
    {
      "indent": 0,
      "text": "6.3.5. Extension Header Fields",
      "section_title": true,
      "ja": "6.3.5。拡張ヘッダフィールド"
    },
    {
      "indent": 3,
      "text": "There may be additional implementation-defined CGI header fields, whose field names SHOULD begin with \"X-CGI-\". The server MAY ignore (and delete) any unrecognised header fields with names beginning \"X-CGI-\" that are received from the script.",
      "ja": "そのフィールド名「X-CGI-」で始める必要があり、追加の実装定義のCGIヘッダフィールドが存在し得ます。サーバーは、スクリプトから受信されている「X-CGI-」から始まる名前を持つすべての認識できないヘッダフィールドを無視（削除）するかもしれません。"
    },
    {
      "indent": 0,
      "text": "6.4. Response Message-Body",
      "section_title": true,
      "ja": "6.4。応答メッセージボディ"
    },
    {
      "indent": 3,
      "text": "The response message-body is an attached document to be returned to the client by the server. The server MUST read all the data provided by the script, until the script signals the end of the message-body by way of an end-of-file condition. The message-body SHOULD be sent unmodified to the client, except for HEAD requests or any required transfer-codings, content-codings or charset conversions.",
      "ja": "応答メッセージボディは、サーバによってクライアントに返される添付文書です。スクリプトは、ファイル終了条件によりメッセージボディの終了を知らせるまで、サーバは、スクリプトによって提供されるすべてのデータを読まなければなりません。メッセージ・ボディは、HEAD要求または必要な転送コーディング、内容コーディングまたは文字セットの変換を除き、クライアントに修飾されていない送信されるべきです。"
    },
    {
      "indent": 6,
      "text": "response-body = *OCTET",
      "ja": "レスポンスボディ= * OCTET"
    },
    {
      "indent": 0,
      "text": "7. System Specifications",
      "section_title": true,
      "ja": "7.システムの仕様"
    },
    {
      "indent": 0,
      "text": "7.1. AmigaDOS",
      "section_title": true,
      "ja": "7.1。 AmigaDOSにおいて"
    },
    {
      "indent": 3,
      "text": "Meta-Variables Meta-variables are passed to the script in identically named environment variables. These are accessed by the DOS library routine GetVar(). The flags argument SHOULD be 0. Case is ignored, but upper case is recommended for compatibility with case-sensitive systems.",
      "ja": "メタ変数メタ変数は、同じ名前の環境変数でスクリプトに渡されます。これらは、DOSライブラリルーチンGetVarによってアクセスされています（）。 flags引数が0のケースであるべきで無視されますが、大文字は大文字と小文字が区別システムとの互換性のために推奨されます。"
    },
    {
      "indent": 3,
      "text": "The current working directory The current working directory for the script is set to the directory containing the script.",
      "ja": "現在の作業ディレクトリをスクリプトの現在の作業ディレクトリは、スクリプトを含むディレクトリに設定されています。"
    },
    {
      "indent": 3,
      "text": "Character set The US-ASCII character set [9] is used for the definition of meta-variables, header fields and values; the newline (NL) sequence is LF; servers SHOULD also accept CR LF as a newline.",
      "ja": "文字は、[9]は、メタ変数、ヘッダフィールドおよび値の定義に使用されているUS-ASCII文字セットを設定します。改行（NL）配列がLFです。また、サーバは改行としてCR LFを受け入れる必要があります。"
    },
    {
      "indent": 0,
      "text": "7.2. UNIX",
      "section_title": true,
      "ja": "7.2。 UNIX"
    },
    {
      "indent": 3,
      "text": "For UNIX compatible operating systems, the following are defined:",
      "ja": "UNIX互換のオペレーティング・システムでは、以下が定義されています。"
    },
    {
      "indent": 3,
      "text": "Meta-Variables Meta-variables are passed to the script in identically named environment variables. These are accessed by the C library routine getenv() or variable environ.",
      "ja": "メタ変数メタ変数は、同じ名前の環境変数でスクリプトに渡されます。これらは、Cライブラリルーチンのgetenv（）または可変環境によってアクセスされます。"
    },
    {
      "indent": 3,
      "text": "The command line This is accessed using the argc and argv arguments to main(). The words have any characters which are 'active' in the Bourne shell escaped with a backslash.",
      "ja": "コマンドラインこれは主にARGCとargv引数を使用してアクセスされます（）。言葉はBourneシェルで「アクティブ」な文字は、バックスラッシュでエスケープがあります。"
    },
    {
      "indent": 3,
      "text": "The current working directory The current working directory for the script SHOULD be set to the directory containing the script.",
      "ja": "現在の作業ディレクトリには、スクリプトの現在の作業ディレクトリは、スクリプトを含むディレクトリに設定する必要があります。"
    },
    {
      "indent": 3,
      "text": "Character set The US-ASCII character set [9], excluding NUL, is used for the definition of meta-variables, header fields and CHAR values; TEXT values use ISO-8859-1. The PATH_TRANSLATED value can contain any 8-bit byte except NUL. The newline (NL) sequence is LF; servers should also accept CR LF as a newline.",
      "ja": "文字はNULを除く、[9] US-ASCII文字セットを設定し、メタ変数、ヘッダフィールドとCHAR値の定義に使用されます。 TEXT値はISO-8859-1を使用します。 PATH_TRANSLATED値はNUL以外の任意の8ビットバイトを含めることができます。改行（NL）配列がLFです。また、サーバは改行としてCR LFを受け入れなければなりません。"
    },
    {
      "indent": 0,
      "text": "7.3. EBCDIC/POSIX",
      "section_title": true,
      "ja": "7.3。 EBCDIC / POSIX"
    },
    {
      "indent": 3,
      "text": "For POSIX compatible operating systems using the EBCDIC character set, the following are defined:",
      "ja": "EBCDIC文字セットを使用して、POSIX互換性のあるオペレーティング・システムでは、以下が定義されています。"
    },
    {
      "indent": 3,
      "text": "Meta-Variables Meta-variables are passed to the script in identically named environment variables. These are accessed by the C library routine getenv().",
      "ja": "メタ変数メタ変数は、同じ名前の環境変数でスクリプトに渡されます。これらは、Cライブラリルーチンのgetenvによりアクセスされています（）。"
    },
    {
      "indent": 3,
      "text": "The command line This is accessed using the argc and argv arguments to main(). The words have any characters which are 'active' in the Bourne shell escaped with a backslash.",
      "ja": "コマンドラインこれは主にARGCとargv引数を使用してアクセスされます（）。言葉はBourneシェルで「アクティブ」な文字は、バックスラッシュでエスケープがあります。"
    },
    {
      "indent": 3,
      "text": "The current working directory The current working directory for the script SHOULD be set to the directory containing the script.",
      "ja": "現在の作業ディレクトリには、スクリプトの現在の作業ディレクトリは、スクリプトを含むディレクトリに設定する必要があります。"
    },
    {
      "indent": 3,
      "text": "Character set The IBM1047 character set [21], excluding NUL, is used for the definition of meta-variables, header fields, values, TEXT strings and the PATH_TRANSLATED value. The newline (NL) sequence is LF; servers should also accept CR LF as a newline.",
      "ja": "文字はNULを除く、IBM1047文字セット[21]を設定し、メタ変数、ヘッダフィールド、値、テキスト文字列とPATH_TRANSLATED値の定義に使用されます。改行（NL）配列がLFです。また、サーバは改行としてCR LFを受け入れなければなりません。"
    },
    {
      "indent": 3,
      "text": "media-type charset default The default charset value for text (and other implementation-defined) media types is IBM1047.",
      "ja": "メディアタイプ文字セットのデフォルトテキスト（及び他の実装定義）メディアタイプのデフォルト文字セット値はIBM1047です。"
    },
    {
      "indent": 0,
      "text": "8. Implementation",
      "section_title": true,
      "ja": "8.実装"
    },
    {
      "indent": 0,
      "text": "8.1. Recommendations for Servers",
      "section_title": true,
      "ja": "8.1。サーバーへの提言"
    },
    {
      "indent": 3,
      "text": "Although the server and the CGI script need not be consistent in their handling of URL paths (client URLs and the PATH_INFO data, respectively), server authors may wish to impose consistency. So the server implementation should specify its behaviour for the following cases:",
      "ja": "サーバーとCGIスクリプトは（それぞれ、クライアントURLとPATH_INFOデータ）URLパスのその取り扱いには一貫性がある必要はないが、サーバーの作者は一貫性を課すことを望むかもしれません。だから、サーバーの実装は、次のような場合のためにその動作を指定する必要があります。"
    },
    {
      "indent": 6,
      "text": "1. define any restrictions on allowed path segments, in particular whether non-terminal NULL segments are permitted;",
      "ja": "1.非末端NULLセグメントが許可されるかどうか、特に、許容される経路セグメント上の任意の制限を定義します。"
    },
    {
      "indent": 6,
      "text": "2. define the behaviour for \".\" or \"..\" path segments; i.e., whether they are prohibited, treated as ordinary path segments or interpreted in accordance with the relative URL specification [2];",
      "ja": "2.のための動作を定義「」または「..」パスセグメント。即ち、それらは禁止されているかどうか、通常の経路セグメントとして扱わまたは相対URL仕様に従って解釈[2]。"
    },
    {
      "indent": 6,
      "text": "3. define any limits of the implementation, including limits on path or search string lengths, and limits on the volume of header fields the server will parse.",
      "ja": "3.サーバが解析するヘッダフィールドのボリューム上のパス又は検索文字列の長さの制限、および制限を含む実装の任意の制限を定義します。"
    },
    {
      "indent": 0,
      "text": "8.2. Recommendations for Scripts",
      "section_title": true,
      "ja": "8.2。スクリプトへの提言"
    },
    {
      "indent": 3,
      "text": "If the script does not intend processing the PATH_INFO data, then it should reject the request with 404 Not Found if PATH_INFO is not NULL.",
      "ja": "スクリプトはPATH_INFOデータを処理する意思がない場合、それはPATH_INFOがNULLでない場合が見つかりませんでした404で要求を拒否しなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the output of a form is being processed, check that CONTENT_TYPE is \"application/x-www-form-urlencoded\" [18] or \"multipart/form-data\" [16]. If CONTENT_TYPE is blank, the script can reject the request with a 415 'Unsupported Media Type' error, where supported by the protocol.",
      "ja": "フォームの出力が処理されている場合、そのCONTENT_TYPEを確認している \"アプリケーション/ x-www-form-urlencodedで\" [18]または \"マルチパート/フォームデータ\" [16]。 CONTENT_TYPEが空白の場合、スクリプトは、プロトコルでサポートされている415「サポートされていないメディアタイプ」のエラー、とのリクエストを拒否することができます。"
    },
    {
      "indent": 3,
      "text": "When parsing PATH_INFO, PATH_TRANSLATED or SCRIPT_NAME the script should be careful of void path segments (\"//\") and special path segments (\".\" and \"..\"). They should either be removed from the path before use in OS system calls, or the request should be rejected with 404 'Not Found'.",
      "ja": "PATH_INFO、PATH_TRANSLATEDまたはSCRIPT_NAMEを解析するとスクリプトが無効のパスセグメント（「//」）と特殊なパスセグメント（「」と「..」）の注意する必要があります。彼らはどちらかのOSのシステムコールで使用する前に、パスから削除する必要がある、またはリクエストは404「見つかりませんでした」で拒否されなければなりません。"
    },
    {
      "indent": 3,
      "text": "When returning header fields, the script should try to send the CGI header fields as soon as possible, and should send them before any HTTP header fields. This may help reduce the server's memory requirements.",
      "ja": "ヘッダフィールドを返すとき、スクリプトはできるだけ早くCGIヘッダフィールドを送信しようとする必要があり、かつ任意のHTTPヘッダフィールドの前にそれらを送信する必要があります。これは、サーバーのメモリ要件を減らすことができます。"
    },
    {
      "indent": 3,
      "text": "Script authors should be aware that the REMOTE_ADDR and REMOTE_HOST meta-variables (see sections 4.1.8 and 4.1.9) may not identify the ultimate source of the request. They identify the client for the immediate request to the server; that client may be a proxy, gateway, or other intermediary acting on behalf of the actual source client.",
      "ja": "スクリプトの作成者は、REMOTE_ADDRとREMOTE_HOSTメタ変数は（セクション4.1.8と4.1.9を参照）、要求の究極の源を特定しないかもしれないことに注意する必要があります。彼らは、サーバーへの即時の要求のためのクライアントを識別する。そのクライアントは、プロキシ、ゲートウェイ、または実際のソースクライアントに代わって動作する他の仲介かもしれません。"
    },
    {
      "indent": 0,
      "text": "9. Security Considerations",
      "section_title": true,
      "ja": "9.セキュリティの考慮事項"
    },
    {
      "indent": 0,
      "text": "9.1. Safe Methods",
      "section_title": true,
      "ja": "9.1。安全な方法"
    },
    {
      "indent": 3,
      "text": "As discussed in the security considerations of the HTTP specifications [1], [4], the convention has been established that the GET and HEAD methods should be 'safe' and 'idempotent' (repeated requests have the same effect as a single request). See section 9.1 of RFC 2616 [4] for a full discussion.",
      "ja": "HTTP仕様のセキュリティ問題に議論したように[1]、[4]、規則はGETとHEADメソッドは「安全」と「冪等」であることが確立されている（反復要求は単一の要求と同じ効果を持っています） 。完全な議論のためのRFC 2616のセクション9.1 [4]を参照してください。"
    },
    {
      "indent": 0,
      "text": "9.2. Header Fields Containing Sensitive Information",
      "section_title": true,
      "ja": "9.2。機密情報を含むヘッダフィールド"
    },
    {
      "indent": 3,
      "text": "Some HTTP header fields may carry sensitive information which the server should not pass on to the script unless explicitly configured to do so. For example, if the server protects the script by using the Basic authentication scheme, then the client will send an Authorization header field containing a username and password. The server validates this information and so it should not pass on the password via the HTTP_AUTHORIZATION meta-variable without careful consideration. This also applies to the Proxy-Authorization header field and the corresponding HTTP_PROXY_AUTHORIZATION meta-variable.",
      "ja": "いくつかのHTTPヘッダフィールドは、明示的にそうするように構成されていない限り、サーバーがスクリプトに渡すべきではない機密情報を運ぶことができます。サーバーが基本認証方式を使用してスクリプトを保護した場合、クライアントはユーザ名とパスワードを含むAuthorizationヘッダフィールドを送信します。サーバはこの情報を検証し、それは慎重に検討することなく、HTTP_AUTHORIZATIONのメタ変数を経由してパスワードを渡すべきではありません。これはまた、Proxy-Authorizationヘッダフィールドと対応HTTP_PROXY_AUTHORIZATIONメタ変数に適用されます。"
    },
    {
      "indent": 0,
      "text": "9.3. Data Privacy",
      "section_title": true,
      "ja": "9.3。データのプライバシー"
    },
    {
      "indent": 3,
      "text": "Confidential data in a request should be placed in a message-body as part of a POST request, and not placed in the URI or message headers. On some systems, the environment used to pass meta-variables to a script may be visible to other scripts or users. In addition, many existing servers, proxies and clients will permanently record the URI where it might be visible to third parties.",
      "ja": "リクエスト内の機密データがPOSTリクエストの一部としてメッセージ本文に入れ、URIまたはメッセージヘッダに配置されていないしなければなりません。いくつかのシステムでは、スクリプトにメタ変数を渡すために使用される環境は、他のスクリプトやユーザーに表示かもしれません。また、多くの既存のサーバ、プロキシとクライアントは永久にそれが第三者に見えるかもしれないURIを記録します。"
    },
    {
      "indent": 0,
      "text": "9.4. Information Security Model",
      "section_title": true,
      "ja": "9.4。情報セキュリティモデル"
    },
    {
      "indent": 3,
      "text": "For a client connection using TLS, the security model applies between the client and the server, and not between the client and the script. It is the server's responsibility to handle the TLS session, and thus it is the server which is authenticated to the client, not the CGI script.",
      "ja": "TLSを使用して、クライアント接続の場合は、セキュリティモデルは、クライアントとサーバーの間ではなく、クライアントとスクリプトの間で適用されます。 TLSセッションを処理するサーバの責任であるため、それがクライアントではなく、CGIスクリプトに認証されたサーバーです。"
    },
    {
      "indent": 3,
      "text": "This specification provides no mechanism for the script to authenticate the server which invoked it. There is no enforced integrity on the CGI request and response messages.",
      "ja": "この仕様は、それが呼び出されたサーバーを認証するためのスクリプトのためのメカニズムを提供しません。 CGI要求と応答メッセージには強制整合性がありません。"
    },
    {
      "indent": 0,
      "text": "9.5. Script Interference with the Server",
      "section_title": true,
      "ja": "9.5。サーバーでスクリプト干渉"
    },
    {
      "indent": 3,
      "text": "The most common implementation of CGI invokes the script as a child process using the same user and group as the server process. It should therefore be ensured that the script cannot interfere with the server process, its configuration, documents or log files.",
      "ja": "CGIの最も一般的な実装では、サーバ・プロセスと同じユーザとグループを使用して子プロセスとしてスクリプトを呼び出します。したがって、スクリプトはサーバプロセス、その設定、文書やログファイルに干渉しないことが保証されなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the script is executed by calling a function linked in to the server software (either at compile-time or run-time) then precautions should be taken to protect the core memory of the server, or to ensure that untrusted code cannot be executed.",
      "ja": "スクリプトは（コンパイル時または実行時のいずれか）、サーバーソフトウェアにリンク機能を呼び出すことによって実行された場合、注意事項は、サーバのコアメモリを保護するために取られるべきである、または信頼できないコードが実行できないことを保証します。"
    },
    {
      "indent": 0,
      "text": "9.6. Data Length and Buffering Considerations",
      "section_title": true,
      "ja": "9.6。データ長とバッファリングの考慮事項"
    },
    {
      "indent": 3,
      "text": "This specification places no limits on the length of the message-body presented to the script. The script should not assume that statically allocated buffers of any size are sufficient to contain the entire submission at one time. Use of a fixed length buffer without careful overflow checking may result in an attacker exploiting 'stack-smashing' or 'stack-overflow' vulnerabilities of the operating system. The script may spool large submissions to disk or other buffering media, but a rapid succession of large submissions may result in denial of service conditions. If the CONTENT_LENGTH of a message-body is larger than resource considerations allow, scripts should respond with an error status appropriate for the protocol version; potentially applicable status codes include 503 'Service Unavailable' (HTTP/1.0 and HTTP/1.1), 413 'Request Entity Too Large' (HTTP/1.1), and 414 'Request-URI Too Large' (HTTP/1.1).",
      "ja": "この仕様は、スクリプトに提示されるメッセージボディの長さに制限を配置しません。このスクリプトは、任意のサイズの静的に割り当てられたバッファが一度に全体の提出を含むのに十分であると仮定するべきではありません。注意深いオーバーフローチェックせずに固定長バッファを使用することは、「スタックオーバーフロー」オペレーティングシステムの脆弱性を「スタック粉砕」または攻撃者が悪用をもたらし得ます。このスクリプトは、ディスクまたは他のバッファリングメディアに大きな提出をスプールかもしれないが、大提出の矢継ぎ早は、サービス条件の拒否が発生することがあります。メッセージボディのCONTENT_LENGTHがリソースの考慮事項が許すよりも大きい場合、スクリプトはプロトコルバージョンのためのエラー状態の適切で応答する必要があります。潜在的に適用可能なステータスコードは503 'サービス利用不可'（HTTP / 1.0およびHTTP / 1.1）、413 '要求エンティティが大きすぎます'（HTTP / 1.1）、および414 'のRequest-URIが大きすぎます'（HTTP / 1.1）が含まれています。"
    },
    {
      "indent": 3,
      "text": "Similar considerations apply to the server's handling of the CGI response from the script. There is no limit on the length of the header or message-body returned by the script; the server should not assume that statically allocated buffers of any size are sufficient to contain the entire response.",
      "ja": "同様の考察は、スクリプトからのCGI応答のサーバの取り扱いに適用されます。スクリプトによって返されるヘッダまたはメッセージ本体の長さに制限はありません。サーバーは、任意のサイズの静的に割り当てられたバッファが応答全体を収容するのに十分であると仮定するべきではありません。"
    },
    {
      "indent": 0,
      "text": "9.7. Stateless Processing",
      "section_title": true,
      "ja": "9.7。ステートレス処理"
    },
    {
      "indent": 3,
      "text": "The stateless nature of the Web makes each script execution and resource retrieval independent of all others even when multiple requests constitute a single conceptual Web transaction. Because of this, a script should not make any assumptions about the context of the user-agent submitting a request. In particular, scripts should examine data obtained from the client and verify that they are valid, both in form and content, before allowing them to be used for sensitive purposes such as input to other applications, commands, or operating system services. These uses include (but are not limited to) system call arguments, database writes, dynamically evaluated source code, and input to billing or other secure processes. It is important that applications be protected from invalid input regardless of whether the invalidity is the result of user error, logic error, or malicious action.",
      "ja": "ウェブのステートレスな性質は、複数の要求を単一の概念的なWebトランザクションを構成する場合でも、他のすべての各スクリプトの実行やリソース検索は依存しないようにします。このため、スクリプトは要求を提出するユーザエージェントの文脈についての仮定を行うべきではありません。具体的には、スクリプトは、彼らがそのような他のアプリケーション、コマンド、またはオペレーティング・システム・サービスへの入力として敏感な目的のために使用することを許可する前に、両方の形式と内容で、クライアントから得られたデータを調べて、それらが有効であることを確認する必要があります。これらの用途には、（これらに限定されない）システムコールの引数、データベースに書き込み、動的に評価し、ソースコード、および課金または他の安全な処理に入力されます。アプリケーションに関係なく無効は、ユーザー・エラー、論理エラー、または悪質な行為の結果であるかどうかの無効な入力から保護することが重要です。"
    },
    {
      "indent": 3,
      "text": "Authors of scripts involved in multi-request transactions should be particularly cautious about validating the state information; undesirable effects may result from the substitution of dangerous values for portions of the submission which might otherwise be presumed safe. Subversion of this type occurs when alterations are made to data from a prior stage of the transaction that were not meant to be controlled by the client (e.g., hidden HTML form elements, cookies, embedded URLs, etc.).",
      "ja": "マルチ要求トランザクションに関与したスクリプトの作成者は、状態情報の検証について、特に注意が必要です。望ましくない影響は、そうでない場合は、安全なものと推定される可能性があります提出の部分に危険な値の置換から生じる可能性があります。このタイプの転覆は、変更がクライアント（例えば、隠れたHTMLフォーム要素、クッキー、埋め込まれたURL、等）によって制御されることを意味するものではないし、トランザクションの前段階からのデータに加えられたときに発生します。"
    },
    {
      "indent": 0,
      "text": "9.8. Relative Paths",
      "section_title": true,
      "ja": "9.8。相対パス"
    },
    {
      "indent": 3,
      "text": "The server should be careful of \"..\" path segments in the request URI. These should be removed or resolved in the request URI before it is split into the script-path and extra-path. Alternatively, when the extra-path is used to find the PATH_TRANSLATED, care should be taken to avoid the path resolution from providing translated paths outside an expected path hierarchy.",
      "ja": "サーバーは、要求URIで「..」パスセグメントの注意する必要があります。それはスクリプトのパスと追加パスに分割される前に、これらを削除したり、要求URIで解決されなければなりません。余分なパスがPATH_TRANSLATEDを見つけるために使用された場合あるいは、ケアは、予想されるパス階層外翻訳経路を提供するからパス分解能を避けるために注意すべきです。"
    },
    {
      "indent": 0,
      "text": "9.9. Non-parsed Header Output",
      "section_title": true,
      "ja": "9.9。非解析ヘッダ出力"
    },
    {
      "indent": 3,
      "text": "If a script returns a non-parsed header output, to be interpreted by the client in its native protocol, then the script must address all security considerations relating to that protocol.",
      "ja": "スクリプトは、非解析ヘッダ出力を返す場合、そのネイティブプロトコルでクライアントにより解釈されるスクリプトは、そのプロトコルに関連するすべてのセキュリティ問題に対処しなければなりません。"
    },
    {
      "indent": 0,
      "text": "10. Acknowledgements",
      "section_title": true,
      "ja": "10.謝辞"
    },
    {
      "indent": 3,
      "text": "This work is based on the original CGI interface that arose out of discussions on the 'www-talk' mailing list. In particular, Rob McCool, John Franks, Ari Luotonen, George Phillips and Tony Sanders deserve special recognition for their efforts in defining and implementing the early versions of this interface.",
      "ja": "この作品は、「WWWトーク」メーリングリストでの議論の外に生まれたオリジナルのCGIインタフェースに基づいています。特に、ロブ・マックール、ジョン・フランクス、アリ・ルオトナン、ジョージ・フィリップスとトニー・サンダースは、このインターフェースの初期バージョンを定義し、実装する際に彼らの努力のための特別な認識に値します。"
    },
    {
      "indent": 3,
      "text": "This document has also greatly benefited from the comments and suggestions made Chris Adie, Dave Kristol and Mike Meyer; also David Morris, Jeremy Madea, Patrick McManus, Adam Donahue, Ross Patterson and Harald Alvestrand.",
      "ja": "この文書はまた、大幅にクリス・アディー、デイブ・クリストルとマイク・マイヤーのコメントや提案の恩恵を受けています。また、デビッド・モリス、ジェレミーMadea、パトリック・マクマナス、アダム・ドナヒュー、ロス・パターソンとハラルドAlvestrand。"
    },
    {
      "indent": 0,
      "text": "11. References",
      "section_title": true,
      "ja": "11.参考文献"
    },
    {
      "indent": 0,
      "text": "11.1 Normative References",
      "section_title": true,
      "ja": "11.1引用規格"
    },
    {
      "indent": 3,
      "text": "[1] Berners-Lee, T., Fielding, R. and H. Frystyk, \"Hypertext Transfer Protocol -- HTTP/1.0\", RFC 1945, May 1996.",
      "ja": "[1]バーナーズ=リー、T.、フィールディング、R.、およびH. Frystyk、 \"ハイパーテキスト転送プロトコル -  HTTP / 1.0\"、RFC 1945、1996年5月。"
    },
    {
      "indent": 3,
      "text": "[2] Berners-Lee, T., Fielding, R. and L. Masinter, \"Uniform Resource Identifiers (URI) : Generic Syntax\", RFC 2396, August 1998.",
      "ja": "[2]バーナーズ=リー、T.、フィールディング、R.、およびL. Masinter、 \"統一資源識別子（URI）：一般的な構文\"、RFC 2396、1998年8月。"
    },
    {
      "indent": 3,
      "text": "[3] Bradner, S., \"Key words for use in RFCs to Indicate Requirements Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[3]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月を。"
    },
    {
      "indent": 3,
      "text": "[4] Fielding, R., Gettys, J., Mogul, J., Frystyk, H., Masinter, L., Leach, P., and T. Berners-Lee, \"Hypertext Transfer Protocol -- HTTP/1.1\", RFC 2616, June 1999.",
      "ja": "[4]フィールディング、R.、ゲティス、J.、モーグル、J.、Frystyk、H.、Masinter、L.、リーチ、P.、およびT.バーナーズ - リー、 \"ハイパーテキスト転送プロトコル -  HTTP / 1.1\" 、RFC 2616、1999年6月。"
    },
    {
      "indent": 3,
      "text": "[5] Franks, J., Hallam-Baker, P., Hostetler, J., Lawrence, S., Leach, P., Luotonen, A., and L. Stewart, \"HTTP Authentication: Basic and Digest Access Authentication\", RFC 2617, June 1999.",
      "ja": "[5]フランクス、J.、ハラム・ベイカー、P.、Hostetler、J.、ローレンス、S.、リーチ、P.、Luotonen、A.、およびL.スチュワート、 \"HTTP認証：基本とダイジェストアクセス認証\" 、RFC 2617、1999年6月。"
    },
    {
      "indent": 3,
      "text": "[6] Freed, N. and N. Borenstein, \"Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types\", RFC 2046, November 1996.",
      "ja": "[6]フリード、N.とN. Borenstein、 \"マルチパーパスインターネットメールエクステンション（MIME）パート2：メディアタイプ\"、RFC 2046、1996年11月。"
    },
    {
      "indent": 3,
      "text": "[7] Hinden, R., Carpenter, B., and L. Masinter, \"Format for Literal IPv6 Addresses in URL's\", RFC 2732, December 1999.",
      "ja": "[7] \"URLの中にリテラルIPv6アドレスのフォーマット\" HindenとR.、大工、B.、およびL. Masinter、RFC 2732、1999年12月に。"
    },
    {
      "indent": 3,
      "text": "[8] \"HTTP Status Code Registry\", http://www.iana.org/assignments/http-status-codes, IANA.",
      "ja": "[8] \"HTTPステータスコードレジストリ\"、http://www.iana.org/assignments/http-status-codes、IANA。"
    },
    {
      "indent": 3,
      "text": "[9] \"Information Systems -- Coded Character Sets -- 7-bit American Standard Code for Information Interchange (7-Bit ASCII)\", ANSI INCITS.4-1986 (R2002).",
      "ja": "[9] \"情報システム - コード化文字セット - 情報交換（7ビットASCII）のための7ビットの米国標準コード\"、ANSI INCITS.4-1986（R2002）。"
    },
    {
      "indent": 3,
      "text": "[10] \"Information technology -- 8-bit single-byte coded graphic character sets -- Part 1: Latin alphabet No. 1\", ISO/IEC 8859-1:1998.",
      "ja": "[10] \"情報技術 -  8ビットシングルバイトコード化されたグラフィック文字集合 - 第1部：ラテンアルファベット1号\"、ISO / IEC 8859-1：1998。"
    },
    {
      "indent": 0,
      "text": "11.2. Informative References",
      "section_title": true,
      "ja": "11.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[11] Berners-Lee, T., \"Universal Resource Identifiers in WWW: A Unifying Syntax for the Expression of Names and Addresses of Objects on the Network as used in the World-Wide Web\", RFC 1630, June 1994.",
      "ja": "[11]バーナーズ=リー、T.、「WWWにおけるユニバーサルリソース識別子：統一構文名およびワールド・ワイド・ウェブで使用されるネットワーク上のオブジェクトのアドレスの発現のために」、RFC 1630、1994年6月。"
    },
    {
      "indent": 3,
      "text": "[12] Braden, R., Ed., \"Requirements for Internet Hosts -- Application and Support\", STD 3, RFC 1123, October 1989.",
      "ja": "[12]ブレーデン、R.、エド、 \"インターネットホストのための要件 - 、アプリケーションとサポート\"。、STD 3、RFC 1123、1989年10月。"
    },
    {
      "indent": 3,
      "text": "[13] Crocker, D., \"Standard for the Format of ARPA Internet Text Messages\", STD 11, RFC 822, August 1982.",
      "ja": "[13]クロッカー、D.、 \"ARPAインターネットテキストメッセージの形式の規格\"、STD 11、RFC 822、1982年8月。"
    },
    {
      "indent": 3,
      "text": "[14] Dierks, T. and C. Allen, \"The TLS Protocol Version 1.0\", RFC 2246, January 1999.",
      "ja": "[14]ダークス、T.とC.アレン、 \"TLSプロトコルバージョン1.0\"、RFC 2246、1999年1月。"
    },
    {
      "indent": 3,
      "text": "[15] Hinden R. and S. Deering, \"Internet Protocol Version 6 (IPv6) Addressing Architecture\", RFC 3513, April 2003.",
      "ja": "[15] HindenとR.とS.デアリング、 \"インターネットプロトコルバージョン6（IPv6）のアドレス指定アーキテクチャ\"、RFC 3513、2003年4月。"
    },
    {
      "indent": 3,
      "text": "[16] Masinter, L., \"Returning Values from Forms: multipart/form-data\", RFC 2388, August 1998.",
      "ja": "[16] Masinter、L.、 \"フォームからの戻り値：マルチパート/フォームデータ\"、RFC 2388、1998年8月。"
    },
    {
      "indent": 3,
      "text": "[17] Mockapetris, P., \"Domain Names - Concepts and Facilities\", STD 13, RFC 1034, November 1987.",
      "ja": "[17] Mockapetris、P.、 \"ドメイン名 - 概念および機能\"、STD 13、RFC 1034、1987年11月。"
    },
    {
      "indent": 3,
      "text": "[18] Raggett, D., Le Hors, A., and I. Jacobs, Eds., \"HTML 4.01 Specification\", W3C Recommendation December 1999, http://www.w3.org/TR/html401/.",
      "ja": "[18] Raggett、D.、ル・オードブル、A.、およびI.ジェイコブス編、 \"HTML 4.01仕様書\"、W3C勧告1999年12月、http://www.w3.org/TR/html401/。"
    },
    {
      "indent": 3,
      "text": "[19] Rescola, E. \"HTTP Over TLS\", RFC 2818, May 2000.",
      "ja": "[19] Rescola、E. \"TLSオーバーHTTP\"、RFC 2818、2000年5月。"
    },
    {
      "indent": 3,
      "text": "[20] St. Johns, M., \"Identification Protocol\", RFC 1413, February 1993.",
      "ja": "[20]セントジョーンズ、M.、 \"識別プロトコル\"、RFC 1413、1993年2月。"
    },
    {
      "indent": 3,
      "text": "[21] IBM National Language Support Reference Manual Volume 2, SE09-8002-01, March 1990.",
      "ja": "[21] IBM国語サポート・リファレンス・マニュアル第2巻、SE09-8002-01、1990年3月。"
    },
    {
      "indent": 3,
      "text": "[22] \"The Common Gateway Interface\", http://hoohoo.ncsa.uiuc.edu/cgi/, NCSA, University of Illinois.",
      "ja": "[22] \"のCommon Gateway Interface\"、http://hoohoo.ncsa.uiuc.edu/cgi/、NCSA、イリノイ大学。"
    },
    {
      "indent": 0,
      "text": "12. Authors' Addresses",
      "section_title": true,
      "ja": "12.著者のアドレス"
    },
    {
      "indent": 3,
      "text": "David Robinson The Apache Software Foundation",
      "ja": "デビッド・ロビンソンザ・Apache Software Foundationの"
    },
    {
      "indent": 3,
      "text": "EMail: drtr@apache.org",
      "ja": "メールアドレス：drtr@apache.org"
    },
    {
      "indent": 3,
      "text": "Ken A. L. Coar The Apache Software Foundation",
      "ja": "ケンA. L. COARザ・Apache Software Foundationの"
    },
    {
      "indent": 3,
      "text": "EMail: coar@apache.org",
      "ja": "メールアドレス：coar@apache.org"
    },
    {
      "indent": 0,
      "text": "13. Full Copyright Statement",
      "section_title": true,
      "ja": "13.完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2004). This document is subject to the rights, licenses and restrictions contained in BCP 78 and at www.rfc-editor.org, and except as set forth therein, the authors retain all their rights.",
      "ja": "著作権（C）インターネット協会（2004）。この文書では、BCP 78に及びwww.rfc-editor.orgに含まれる権利と許可と制限の適用を受けており、その中の記載を除いて、作者は彼らのすべての権利を保有します。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein are provided on an \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書とここに含まれている情報は、基礎とCONTRIBUTOR「そのまま」、ORGANIZATION HE / SHEが表すまたはインターネットソサエティおよびインターネット・エンジニアリング・タスク・フォース放棄すべての保証、明示または、（もしあれば）後援ISに設けられています。黙示、情報の利用は、特定の目的に対する権利または商品性または適合性の黙示の保証を侵害しない任意の保証含むがこれらに限定されません。"
    },
    {
      "indent": 3,
      "text": "Intellectual Property",
      "ja": "知的財産"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any Intellectual Property Rights or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; nor does it represent that it has made any independent effort to identify any such rights. Information on the ISOC's procedures with respect to rights in ISOC Documents can be found in BCP 78 and BCP 79.",
      "ja": "IETFは、本書またはそのような権限下で、ライセンスがたりないかもしれない程度に記載された技術の実装や使用に関係すると主張される可能性があります任意の知的財産権やその他の権利の有効性または範囲に関していかなる位置を取りません利用可能です。またそれは、それがどのような権利を確認する独自の取り組みを行ったことを示すものでもありません。 ISOC文書の権利に関するISOCの手順に関する情報は、BCP 78およびBCP 79に記載されています。"
    },
    {
      "indent": 3,
      "text": "Copies of IPR disclosures made to the IETF Secretariat and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the IETF on-line IPR repository at http://www.ietf.org/ipr.",
      "ja": "IPRの開示のコピーが利用できるようにIETF事務局とライセンスの保証に行われた、または本仕様の実装者または利用者がそのような所有権の使用のための一般的なライセンスまたは許可を取得するために作られた試みの結果を得ることができますhttp://www.ietf.org/iprのIETFのオンラインIPRリポジトリから。"
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights that may cover technology that may be required to implement this standard. Please address the information to the IETF at ietf-ipr@ietf.org.",
      "ja": "IETFは、その注意にこの標準を実装するために必要とされる技術をカバーすることができる任意の著作権、特許または特許出願、またはその他の所有権を持ってすべての利害関係者を招待します。 ietf-ipr@ietf.orgのIETFに情報を記述してください。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "了承"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "ja": "RFC Editor機能のための基金は現在、インターネット協会によって提供されます。"
    }
  ]
}