{
  "title": {
    "text": "RFC 3443 - Time To Live (TTL) Processing in Multi-Protocol Label Switching (MPLS) Networks",
    "ja": "RFC 3443 - マルチプロトコルラベルスイッチング（MPLS）ネットワークで（TTL）処理を生存時間"
  },
  "number": 3443,
  "created_at": "2019-10-28 11:29:23.527501+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                         P. Agarwal\nRequest for Comments: 3443                                       Brocade\nUpdates: 3032                                                   B. Akyol\nCategory: Standards Track                                  Cisco Systems\n                                                            January 2003",
      "raw": true
    },
    {
      "indent": 13,
      "text": "      Time To Live (TTL) Processing in\nMulti-Protocol Label Switching (MPLS) Networks",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "このメモの位置付け"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "ja": "この文書は、インターネットコミュニティのためのインターネット標準トラックプロトコルを指定し、改善のための議論と提案を要求します。このプロトコルの標準化状態と状態への「インターネット公式プロトコル標準」（STD 1）の最新版を参照してください。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2003). All Rights Reserved.",
      "ja": "著作権（C）インターネット協会（2003）。全著作権所有。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document describes Time To Live (TTL) processing in hierarchical Multi-Protocol Label Switching (MPLS) networks and is motivated by the need to formalize a TTL-transparent mode of operation for an MPLS label-switched path. It updates RFC 3032, \"MPLS Label Stack Encoding\". TTL processing in both Pipe and Uniform Model hierarchical tunnels are specified with examples for both \"push\" and \"pop\" cases. The document also complements RFC 3270, \"MPLS Support of Differentiated Services\" and ties together the terminology introduced in that document with TTL processing in hierarchical MPLS networks.",
      "ja": "この文書では、階層的なマルチプロトコルラベルスイッチング（MPLS）ネットワークで（TTL）処理を生きて時間を記述し、MPLSラベルスイッチドパスの操作のTTL-透過モードを正式にする必要性によって動機付けられています。これは、RFC 3032、「MPLSラベルスタックコード化」を更新します。パイプと統一モデルの両方においてTTL処理階層トンネルは「プッシュ」と「ポップ」の両方の場合の例で指定されています。文書はまた、一緒に階層MPLSネットワークにおけるTTL処理と、その文書に導入された用語をRFC 3270、「差別化サービスのMPLSのサポート」とのつながりを補完します。"
    },
    {
      "indent": 0,
      "text": "Conventions used in this document",
      "ja": "この文書で使用されている表記"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC-2119].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はあります[RFC-2119]に記載されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "1. Introduction and Motivation",
      "section_title": true,
      "ja": "1.はじめと動機"
    },
    {
      "indent": 3,
      "text": "This document describes Time To Live (TTL) processing in hierarchical MPLS networks. We believe that this document adds details that have not been addressed in [MPLS-ARCH, MPLS-ENCAPS], and that the methods presented in this document complement [MPLS-DS].",
      "ja": "この文書では、階層的なMPLSネットワークで（TTL）処理を生きて時間を記述する。私たちは、この文書が[MPLS-ARCH、MPLS-ENCAPS]で扱われていない詳細情報を追加して、および方法は、この文書の補数[MPLS-DS]で提示することを信じています。"
    },
    {
      "indent": 3,
      "text": "In particular, a new mode of operation (referred to as the Pipe Model) is introduced to support the practice of configuring MPLS LSPs such that packets transiting the LSP see the tunnel as a single hop regardless of the number of intermediary label switch routers (LSR). The Pipe Model for TTL is currently being used in multiple networks and is provided as an option configurable by the network operator by several vendors.",
      "ja": "具体的には、（パイプモデルと呼ばれる）の動作の新しいモードにかかわらず、中間ラベルスイッチルータの数の（LSR LSPを通過するパケットは、単一のホップとしてトンネルを参照するようにMPLSのLSPを設定する練習をサポートするために導入されています）。 TTL用管モデルは、現在、複数のネットワークで使用されており、いくつかのベンダーによってネットワークオペレータによって設定可能なオプションとして提供されます。"
    },
    {
      "indent": 3,
      "text": "This document formalizes the TTL processing in MPLS networks and ties it with the terminology introduced in [MPLS-DS].",
      "ja": "この文書では、MPLSネットワークにおけるTTL処理を形式化し、[MPLS-DS]で導入された用語とそれを結びます。"
    },
    {
      "indent": 0,
      "text": "2. TTL Processing in MPLS Networks",
      "section_title": true,
      "ja": "MPLSネットワークにおける2 TTL処理"
    },
    {
      "indent": 0,
      "text": "2.1. Changes to []",
      "section_title": true,
      "ja": "2.1。 []への変更"
    },
    {
      "indent": 3,
      "text": "a) [MPLS-ENCAPS] only covers the Uniform Model and does NOT address the Pipe Model or the Short Pipe Model. This document addresses these two models and for completeness will also address the Uniform Model.",
      "ja": "A）[MPLS-ENCAPS]のみ統一モデルをカバーし、パイプモデルやショートパイプモデルには対応していません。この文書では、これら二つのモデルに対処し、完全を期すためにも制服モデルに対処します。"
    },
    {
      "indent": 3,
      "text": "b) [MPLS-ENCAPS] does not cover hierarchical LSPs. This document addresses this issue.",
      "ja": "B）[MPLS-ENCAPS]階層LSPを覆っていません。この文書では、この問題を解決します。"
    },
    {
      "indent": 3,
      "text": "c) [MPLS-ENCAPS] does not define TTL processing in the presence of Penultimate Hop Popping (PHP). This document addresses this issue.",
      "ja": "C）[MPLS-ENCAPS]は最後から二番目のホップポッピング（PHP）の存在下で、TTL処理を定義していません。この文書では、この問題を解決します。"
    },
    {
      "indent": 0,
      "text": "2.2. Terminology and Background",
      "section_title": true,
      "ja": "2.2。用語と背景"
    },
    {
      "indent": 3,
      "text": "As defined in [MPLS-ENCAPS], MPLS packets use a MPLS shim header that indicates the following information about a packet:",
      "ja": "[MPLS-ENCAPS]で定義されるように、MPLSパケットは、パケットに関する以下の情報を表すMPLSシムヘッダを使用します。"
    },
    {
      "indent": 3,
      "text": "a) MPLS Label (20 bits) b) TTL (8 bits) c) Bottom of stack (1 bit) d) Experimental bits (3 bits)",
      "ja": "a）は、MPLSラベル（20ビット）b）のTTL（8ビット）C）スタックの最下部（1ビット）D）実験ビット（3ビット）"
    },
    {
      "indent": 3,
      "text": "The experimental bits were later redefined in [MPLS-DS] to indicate the scheduling and shaping behavior that could be associated with an MPLS packet.",
      "ja": "実験ビットが後に再定義された[MPLS-DS] MPLSパケットに関連付けられることができ、スケジューリングおよび成形動作を指示します。"
    },
    {
      "indent": 3,
      "text": "[MPLS-DS] also defined two models for MPLS tunnel operation: Pipe and Uniform Models. In the Pipe Model, a MPLS network acts like a circuit when MPLS packets traverse the network such that only the LSP ingress and egress points are visible to nodes that are outside the tunnel. A Short variation of the Pipe Model is also defined in [MPLS-DS] to differentiate between different egress forwarding and QoS treatments. On the other hand, the Uniform Model makes all the nodes that a LSP traverses visible to nodes outside the tunnel. We will extend the Pipe and Uniform Models to include TTL processing in the following sections. Furthermore, TTL processing, when performing PHP, is also described in this document. For a detailed description of Pipe and Uniform Models, please see [MPLS-DS].",
      "ja": "パイプ、均一モデル：[MPLSは-DS]また、MPLSトンネルの動作のための2つのモデルを定義しました。 MPLSパケットがLSPの入口および出口点のみがトンネル外にあるノードに見えるようにネットワークを横断するときにパイプモデルでは、MPLSネットワークは、回路のように作用します。パイプモデルの短い変動は、異なる出力転送およびQoS処理を区別するために、[MPLS-DS]で定義されています。一方、統一モデルは、LSPトンネル外のノードから見える横断すべてのノードを行います。我々は、以下のセクションでTTL処理を含むようにパイプで均一なモデルを拡張します。また、TTL処理は、PHPを実行するときに、この文書に記載されています。パイプと統一モデルの詳細については、[MPLS-DS]を参照してください。"
    },
    {
      "indent": 3,
      "text": "TTL processing in MPLS networks can be broken down into two logical blocks: (i) the incoming TTL determination to take into account any tunnel egress due to MPLS Pop operations; (ii) packet processing of (possibly) exposed packets and outgoing TTLs.",
      "ja": "MPLSネットワークにおけるTTL処理は、2つの論理ブロックに分けることができる：（I）によるMPLSポップ操作にアカウントに任意のトンネル出口を取るために、着信TTLの決意。 （おそらく）露出したパケットと発信のTTL（II）のパケット処理。"
    },
    {
      "indent": 3,
      "text": "We also note here that signaling the LSP type (Pipe, Short Pipe or Uniform Model) is out of the scope of this document, and that is also not addressed in the current versions of the label distribution protocols, e.g. LDP [MPLS-LDP] and RSVP-TE [MPLS-RSVP]. Currently, the LSP type is configured by the network operator manually by means of either a command line or network management interface.",
      "ja": "また、LSPタイプ（パイプ、ショートパイプや制服モデル）シグナル伝達が、この文書の範囲外であることをここで注意してください、それはまた、例えば、ラベル配布プロトコルの現在のバージョンで対処されていませんLDP [MPLS-LDP]およびRSVP-TE [MPLS-RSVP]。現在、LSPタイプがコマンドラインまたはネットワーク管理インターフェイスのいずれかを用いて手動でネットワークオペレータによって構成されています。"
    },
    {
      "indent": 0,
      "text": "2.3. New Terminology",
      "section_title": true,
      "ja": "2.3。新しい用語"
    },
    {
      "indent": 3,
      "text": "iTTL: The TTL value to use as the incoming TTL. No checks are performed on the iTTL.",
      "ja": "ITTL：受信TTLとして使用するTTL値。この場合チェックはITTL上で実行されていません。"
    },
    {
      "indent": 3,
      "text": "oTTL: This is the TTL value used as the outgoing TTL value (see section 3.5 for exception). It is always (iTTL - 1) unless otherwise stated.",
      "ja": "オットル：これは送信TTL値（例外のセクション3.5を参照）として使用されるTTL値です。特に断りのない限り - 常に（1 ITTL）です。"
    },
    {
      "indent": 3,
      "text": "oTTL Check: Check if oTTL is greater than 0. If the oTTL Check is false, then the packet is not forwarded. Note that the oTTL check is performed only if any outgoing TTL (either IP or MPLS) is set to oTTL (see section 3.5 for exception).",
      "ja": "オットルチェック：オットルが0より大きい場合オットルチェックがfalseの場合、パケットが転送されていない、確認してください。任意の発信TTL（IPまたはMPLSのいずれか）がオットル（例外のセクション3.5を参照）に設定されている場合のみオットルチェックが行われることに留意されたいです。"
    },
    {
      "indent": 0,
      "text": "3. TTL Processing in different Models",
      "section_title": true,
      "ja": "異なるモデル3. TTL処理"
    },
    {
      "indent": 3,
      "text": "This section describes the TTL processing for LSPs conforming to each of the 3 models (Uniform, Short Pipe and Pipe) in the presence/absence of PHP (where applicable).",
      "ja": "このセクションでは、PHP（該当する場合）の存在/非存在下での3つのモデル（ユニフォーム、ショートパイプ及びパイプ）のそれぞれに準拠したLSPのTTL処理について説明します。"
    },
    {
      "indent": 0,
      "text": "3.1. TTL Processing for Uniform Model LSPs (with or without PHP)",
      "section_title": true,
      "ja": "3.1。制服モデルのLSPのためのTTL処理（とやPHPなし）"
    },
    {
      "indent": 6,
      "text": "(consistent with [MPLS-ENCAPS]):",
      "ja": "（[MPLS-ENCAPS]と一致します）。"
    },
    {
      "indent": 13,
      "text": "========== LSP =============================>",
      "raw": true
    },
    {
      "indent": 3,
      "text": "              +--Swap--(n-2)-...-swap--(n-i)---+\n             /        (outer header)            \\\n           (n-1)                                (n-i)\n           /                                      \\\n>--(n)--Push...............(x).....................Pop--(n-i-1)->\n         (I)           (inner header)            (E or P)",
      "raw": true
    },
    {
      "indent": 3,
      "text": "(n) represents the TTL value in the corresponding header (x) represents non-meaningful TTL information (I) represents the LSP ingress node (P) represents the LSP penultimate node (E) represents the LSP Egress node",
      "ja": "（N）（x）が非有意義TTL情報（I）はLSPの入口ノード（P）はLSPの最後から二番目のノード（E）はLSP Egressノードを表し表し対応するヘッダ内のTTL値を表します"
    },
    {
      "indent": 3,
      "text": "This picture shows TTL processing for a Uniform Model MPLS LSP. Note that the inner and outer TTLs of the packets are synchronized at tunnel ingress and egress.",
      "ja": "この写真は、統一モデルMPLS LSPのTTL処理を示しています。パケットの内側および外側のTTLがトンネル入口および出口で同期されることに留意されたいです。"
    },
    {
      "indent": 0,
      "text": "3.2. TTL Processing for Short Pipe Model LSPs",
      "section_title": true,
      "ja": "3.2。ショートパイプモデルのLSPのためのTTL処理"
    },
    {
      "indent": 0,
      "text": "3.2.1. TTL Processing for Short Pipe Model LSPs without PHP",
      "section_title": true,
      "ja": "3.2.1。 PHPのないショートパイプモデルのLSPのためのTTL処理"
    },
    {
      "indent": 13,
      "text": "========== LSP =============================>",
      "raw": true
    },
    {
      "indent": 3,
      "text": "              +--Swap--(N-1)-...-swap--(N-i)-----+\n             /        (outer header)              \\\n           (N)                                  (N-i)\n           /                                        \\\n>--(n)--Push...............(n-1).....................Pop--(n-2)->\n         (I)           (inner header)                (E)",
      "raw": true
    },
    {
      "indent": 3,
      "text": "(N) represents the TTL value (may have no relationship to n) (n) represents the tunneled TTL value in the encapsulated header (I) represents the LSP ingress node (E) represents the LSP Egress node",
      "ja": "（N）は（nは何の関係を有していなくてもよい）、（n）は、カプセル化ヘッダ（I）でトンネリングTTL値を表すLSPの入口ノード（E）を表すLSPの出口ノードを表すTTL値を表します"
    },
    {
      "indent": 3,
      "text": "The Short Pipe Model was introduced in [MPLS-DS]. In the Short Pipe Model, the forwarding treatment at the egress LSR is based on the tunneled packet, as opposed to the encapsulating packet.",
      "ja": "ショートパイプモデルは[MPLS-DS]で紹介されました。カプセル化したパケットとは対照的に、ショートパイプモデルでは、出口LSRでの転送処理は、トンネリングされたパケットに基づいています。"
    },
    {
      "indent": 0,
      "text": "3.2.2. TTL Processing for Short Pipe Model with PHP:",
      "section_title": true,
      "ja": "3.2.2。 PHPでのショートパイプモデルのTTL処理："
    },
    {
      "indent": 3,
      "text": "          ========== LSP =====================================>\n              +-Swap-(N-1)-...-swap-(N-i)-+\n             /       (outer header)        \\\n           (N)                            (N-i)\n           /                                \\\n>--(n)--Push.............(n-1)............Pop-(n-1)-Decr.-(n-2)->\n         (I)           (inner header)       (P)      (E)",
      "raw": true
    },
    {
      "indent": 3,
      "text": "(N) represents the TTL value (may have no relationship to n) (n) represents the tunneled TTL value in the encapsulated header (I) represents the LSP ingress node (P) represents the LSP penultimate node (E) represents the LSP egress node.",
      "ja": "（N）は（nは何の関係を有していなくてもよい）、（n）は、カプセル化ヘッダ（I）でトンネリングTTL値を表すLSPの入口ノード（P）を表すLSPの最後から二番目のノード（E）を表すLSPの出口を表すTTL値を表しますノード。"
    },
    {
      "indent": 3,
      "text": "Since the label has already been popped by the LSP's penultimate node, the LSP egress node just decrements the header TTL.",
      "ja": "ラベルは既にLSPの最後から二番目のノードによってポップされているので、LSPの出口ノードは、単にヘッダのTTLをデクリメントします。"
    },
    {
      "indent": 3,
      "text": "Also note that at the end of the Short Pipe Model LSP, the TTL of the tunneled packet has been decremented by two, with or without PHP.",
      "ja": "また、ショートパイプモデルLSPの終わりに、トンネリングされたパケットのTTLがまたはPHPなしで、2デクリメントされていることに注意してください。"
    },
    {
      "indent": 0,
      "text": "3.3. TTL Processing for Pipe Model LSPs (without PHP only):",
      "section_title": true,
      "ja": "3.3。 （PHPのみなし）パイプモデルのLSPのためのTTL処理："
    },
    {
      "indent": 13,
      "text": "========== LSP =============================>",
      "raw": true
    },
    {
      "indent": 3,
      "text": "              +--Swap--(N-1)-...-swap--(N-i)-----+\n             /        (outer header)              \\\n           (N)                                  (N-i)\n           /                                        \\\n>--(n)--Push...............(n-1)....................Pop--(n-2)->\n         (I)           (inner header)               (E)",
      "raw": true
    },
    {
      "indent": 3,
      "text": "(N) represents the TTL value (may have no relationship to n) (n) represents the tunneled TTL value in the encapsulated header (I) represents the LSP ingress node (E) represents the LSP Egress node",
      "ja": "（N）は（nは何の関係を有していなくてもよい）、（n）は、カプセル化ヘッダ（I）でトンネリングTTL値を表すLSPの入口ノード（E）を表すLSPの出口ノードを表すTTL値を表します"
    },
    {
      "indent": 3,
      "text": "From the TTL perspective, the treatment for a Pipe Model LSP is identical to the Short Pipe Model without PHP.",
      "ja": "TTLの観点から、パイプモデルLSPのための治療は、PHPなしショートパイプモデルと同一です。"
    },
    {
      "indent": 0,
      "text": "3.4. Incoming TTL (iTTL) determination",
      "section_title": true,
      "ja": "3.4。受信TTL（ITTL）決意"
    },
    {
      "indent": 3,
      "text": "If the incoming packet is an IP packet, then the iTTL is the TTL value of the incoming IP packet.",
      "ja": "着信パケットがIPパケットである場合、ITTLは、着信IPパケットのTTL値です。"
    },
    {
      "indent": 3,
      "text": "If the incoming packet is an MPLS packet and we are performing a Push/Swap/PHP, then the iTTL is the TTL of the topmost incoming label.",
      "ja": "着信パケットがMPLSパケットであると私たちはプッシュ/スワップ/ PHPを実行している場合は、ITTLは、最上位着信ラベルのTTLです。"
    },
    {
      "indent": 3,
      "text": "If the incoming packet is an MPLS packet and we are performing a Pop (tunnel termination), the iTTL is based on the tunnel type (Pipe or Uniform) of the LSP that was popped. If the popped label belonged to a Pipe Model LSP, then the iTTL is the value of the TTL field of the header, exposed after the label was popped (note that for the purpose of this document, the exposed header may be either an IP header or an MPLS label). If the popped label belonged to a Uniform Model LSP, then the iTTL is equal to the TTL of the popped label. If multiple Pop operations are performed sequentially, then the procedure given above is repeated with one exception: the iTTL computed during the previous Pop is used as the TTL of subsequent labels being popped; i.e. the TTL contained in the subsequent label is essentially ignored and replaced with the iTTL computed during the previous pop.",
      "ja": "着信パケットがMPLSパケットであると我々はポップ（トンネル終端）を実行している場合、ITTLがポップされたLSPのトンネル型（パイプまたはユニフォーム）に基づいています。ポップラベルパイプモデルLSPに属している場合、ITTLラベルがポップされた後に露出ヘッダのTTLフィールドの値である（本文書の目的のために、露出されたヘッダは、いずれかのIPヘッダであってもよいことに注意してくださいまたはMPLSラベル）。ポップラベルは統一モデルLSPに属している場合、ITTLがポップラベルのTTLに等しいです。複数ポップ動作が順次実行される場合には、上記の手順では、一つの例外を除いて繰り返す：前ポップ間に計算ITTLがポップされ、後続のラベルのTTLとして使用されます。すなわち、後続のラベルに含まれるTTLは、本質的に無視され、前回のポップ中に計算ITTLで置換されています。"
    },
    {
      "indent": 0,
      "text": "3.5. Outgoing TTL Determination and Packet Processing",
      "section_title": true,
      "ja": "3.5。発信TTLの決定とパケット処理"
    },
    {
      "indent": 3,
      "text": "After the iTTL computation is performed, the oTTL check is performed. If the oTTL check succeeds, then the outgoing TTL of the (labeled/unlabeled) packet is calculated and packet headers are updated as defined below.",
      "ja": "ITTLの計算が実行された後、オットルのチェックが行われます。オットルチェックが成功した場合、（標識/非標識）パケットの発信TTLが計算され、以下に定義されるようなパケットヘッダが更新されます。"
    },
    {
      "indent": 3,
      "text": "If the packet was routed as an IP packet, the TTL value of the IP packet is set to oTTL (iTTL - 1). The TTL value(s) for any pushed label(s) is determined as described in section 3.6.",
      "ja": "パケットがIPパケットとしてルーティングされた場合、IPパケットのTTL値がオットル（ -  1 ITTL）に設定されています。セクション3.6で説明したように、任意のプッシュラベル（S）のTTL値（S）が決定されます。"
    },
    {
      "indent": 3,
      "text": "For packets that are routed as MPLS, we have four cases:",
      "ja": "MPLSとしてルーティングされたパケットについては、我々は4例があります。"
    },
    {
      "indent": 3,
      "text": "1) Swap-only: The routed label is swapped with another label and the TTL field of the outgoing label is set to oTTL.",
      "ja": "1）スワップのみ：ルーティングされたラベルが別のラベルと交換され、出ラベルのTTLフィールドがオットルに設定されています。"
    },
    {
      "indent": 3,
      "text": "2) Swap followed by a Push: The swapped operation is performed as described in (1). The TTL value(s) of any pushed label(s) is determined as described in section 3.6.",
      "ja": "2）を押し、続いてSWAP：（1）に記載のように入れ替え動作が行われます。セクション3.6で説明したように、任意のプッシュラベル（S）のTTL値（S）が決定されます。"
    },
    {
      "indent": 3,
      "text": "3) Penultimate Hop Pop (PHP): The routed label is popped. The oTTL check should be performed irrespective of whether the oTTL is used to update the TTL field of the outgoing header. If the PHPed label belonged to a Short Pipe Model LSP, then the TTL field of the PHP exposed header is neither checked nor updated. If the",
      "ja": "3）最後から二番目のホップポップ（PHP）を：ルーティングされたラベルがポップされます。オットルチェックがオットル発信ヘッダのTTLフィールドを更新するために使用されているかどうかに関係なく行われるべきです。 PHPedラベルがショートパイプモデルLSPに属している場合、PHPさらさヘッダのTTLフィールドが確認さもなく更新もされていません。もし"
    },
    {
      "indent": 6,
      "text": "PHPed label was a Uniform Model LSP, then the TTL field of the PHP exposed header is set to the oTTL. The TTL value(s) of additional labels are determined as described in section 3.6",
      "ja": "PHPedラベルは次いで、PHP露出ヘッダのTTLフィールドはオットルに設定されている、統一モデルLSPました。セクション3.6で説明したように、追加のラベルのTTL値（S）が決定されます。"
    },
    {
      "indent": 3,
      "text": "4) Pop: The pop operation happens before routing and hence it is not considered here.",
      "ja": "4）ポップ：ポップ操作は、ルーティングの前に起こるので、それはここでは考慮されていません。"
    },
    {
      "indent": 0,
      "text": "3.6. Tunnel Ingress Processing (Push)",
      "section_title": true,
      "ja": "3.6。トンネル進入処理（プッシュ）"
    },
    {
      "indent": 3,
      "text": "For each pushed Uniform Model label, the TTL is copied from the label/IP-packet immediately underneath it.",
      "ja": "それぞれの統一モデルのラベルをプッシュするために、TTLはすぐ下にラベル/ IPパケットからコピーされます。"
    },
    {
      "indent": 3,
      "text": "For each pushed Pipe Model or Short Pipe Model label, the TTL field is set to a value configured by the network operator. In most implementations, this value is set to 255 by default.",
      "ja": "各パイプモデルまたはショートパイプモデルラベルをプッシュするために、TTLフィールドは、ネットワークオペレータによって設定された値に設定されています。ほとんどの実装では、この値はデフォルトで255に設定されています。"
    },
    {
      "indent": 0,
      "text": "3.7. Implementation Remarks",
      "section_title": true,
      "ja": "3.7。実装備考"
    },
    {
      "indent": 3,
      "text": "1) Although iTTL can be decremented by a value larger than 1 while it is being updated or oTTL is being determined, this feature should be only used for compensating for network nodes that are not capable of decrementing TTL values.",
      "ja": "それが更新されているか、オットルが決定されている間ITTLが1よりも大きい値だけデクリメントすることが可能であるが1）、この機能は、TTL値をデクリメントすることができないネットワークノードを補償するために使用されるべきです。"
    },
    {
      "indent": 3,
      "text": "2) Whenever iTTL is decremented, the implementer must make sure that the value does not become negative.",
      "ja": "ITTLが減算されるたび2）、実装者は、値が負になっていないことを確認する必要があります。"
    },
    {
      "indent": 3,
      "text": "3) In the Short Pipe Model with PHP enabled, the TTL of the tunneled packet is unchanged after the PHP operation.",
      "ja": "PHPでのショートパイプモデルが有効では3）、トンネリングされたパケットのTTLは、PHPの動作の後に変更されていません。"
    },
    {
      "indent": 0,
      "text": "4. Conclusion",
      "section_title": true,
      "ja": "4.おわりに"
    },
    {
      "indent": 3,
      "text": "This Internet Document describes how the TTL field can be processed in an MPLS network. We clarified the various methods that are applied in the presence of hierarchical tunnels and completed the integration of Pipe and Uniform Models with TTL processing.",
      "ja": "このインターネット文書は、TTLフィールドはMPLSネットワークで処理することができる方法を説明します。我々は、階層トンネルの存在下で適用し、TTL処理とパイプ、均一モデルの統合を完了している様々な方法を明らかにしました。"
    },
    {
      "indent": 0,
      "text": "5. Security Considerations",
      "section_title": true,
      "ja": "5.セキュリティについての考慮事項"
    },
    {
      "indent": 3,
      "text": "This document does not add any new security issues other than the ones defined in [MPLS-ENCAPS, MPLS-DS]. In particular, the document does not define a new protocol or expand an existing one and does not introduce security problems into the existing protocols. The authors believe that clarification of TTL handling in MPLS networks benefits service providers and their customers since troubleshooting is simplified.",
      "ja": "この文書では、[MPLS-ENCAPS、MPLS-DS]で定義されたもの以外の新しいセキュリティ上の問題を追加しません。具体的には、文書は、新しいプロトコルを定義したり、既存のものを拡張し、既存のプロトコルにセキュリティ上の問題を紹介しませんしません。著者は、トラブルシューティングが簡略化されているので、TTLの明確化は、MPLSネットワーク上の利点サービスプロバイダーとその顧客に取り扱うことを信じています。"
    },
    {
      "indent": 0,
      "text": "6. References",
      "section_title": true,
      "ja": "6.参照"
    },
    {
      "indent": 0,
      "text": "6.1. Normative References",
      "section_title": true,
      "ja": "6.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC-2119] Bradner, S. \"Key words for use in RFC's to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC-2119]ブラドナーの、S. \"要件レベルを示すためにRFCのにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[MPLS-ARCH] Rosen, E., Viswanathan, A. and R. Callon, \"Multiprotocol Label Switching Architecture\", RFC 3031, January 2001.",
      "ja": "[MPLS-ARCH]ローゼン、E.、Viswanathanの、A.とR. Callon、 \"マルチプロトコルラベルスイッチングアーキテクチャ\"、RFC 3031、2001年1月。"
    },
    {
      "indent": 3,
      "text": "[MPLS-ENCAPS] Rosen, E., Tappan, D., Fedorkow, G., Rekhter, Y., Farinacci, D., Li, T. and A. Conta, \"MPLS Label Stack Encoding\", RFC 3032, January 2001.",
      "ja": "[MPLS-ENCAPS]ローゼン、E.、タッパン、D.、Fedorkow、G.、Rekhter、Y.、ファリナッチ、D.、李、T.、およびA.コンタ、 \"MPLSラベルスタックエンコーディング\"、RFC 3032年1月2001。"
    },
    {
      "indent": 3,
      "text": "[MPLS-DS] Le Faucheur, F., Wu, L., Davie, B., Davari, S., Vaananen, P., Krishnan, R., Cheval, P. and J. Heinanen, \"Multi-Protocol Label Switching (MPLS) Support of Differentiated Services\", RFC 3270, May 2002.",
      "ja": "[MPLS-DS]ルFaucheur、F.、ウー、L.、デイビー、B.、Davari、S.、Vaananen、P.、クリシュナン、R.、シュヴァル、P.及びJ. Heinanen、「マルチプロトコルラベル差別化サービスの（MPLS）サポート」、RFC 3270、2002年5月を切り替えます。"
    },
    {
      "indent": 0,
      "text": "6.2. Informative References",
      "section_title": true,
      "ja": "6.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[MPLS-LDP] Andersson, L., Doolan, P., Feldman, N., Fredette, A. and B. Thomas, \"LDP Specification\", RFC 3036, January 2001.",
      "ja": "[MPLS-LDP]アンダーソン、L.、Doolan、P.、フェルドマン、N.、Fredette、A.及びB.トーマス、 \"LDP仕様\"、RFC 3036、2001年1月。"
    },
    {
      "indent": 3,
      "text": "[MPLS-RSVP] Awduche, D., Berger, L., Gan, D., Li, T., Srinivasan, V. and G. Swallow, \"RSVP-TE: Extensions to RSVP for LSP Tunnels\", RFC 3209, December 2001.",
      "ja": "[MPLS-RSVP] Awduche、D.、バーガー、L.、ガン、D.、李、T.、スリニバサン、V.およびG.ツバメ、 \"RSVP-TE：ExtensionsがLSPトンネルのためのRSVPへ\"、RFC 3209、 2001年12月。"
    },
    {
      "indent": 0,
      "text": "7. Acknowledgements",
      "section_title": true,
      "ja": "7.謝辞"
    },
    {
      "indent": 3,
      "text": "The authors would like to thank the members of the MPLS working group for their feedback. We would especially like to thank Shahram Davari and Loa Andersson for their careful review of the document and their comments.",
      "ja": "著者は彼らのフィードバックのためのMPLSワーキンググループのメンバーに感謝したいと思います。我々は、特に、文書のその慎重に検討し、彼らのコメントのためにShahram Davariとロア・アンダーソンに感謝したいと思います。"
    },
    {
      "indent": 0,
      "text": "8. Author's Addresses",
      "section_title": true,
      "ja": "8.著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Puneet Agarwal Brocade Communications Systems, Inc. 1745 Technology Drive San Jose, CA 95110",
      "ja": "Puneet Agarwalさんブロケードコミュニケーションズシステムズ株式会社1745年テクノロジー・ドライブサンノゼ、CA 95110"
    },
    {
      "indent": 3,
      "text": "EMail: puneet@acm.org",
      "ja": "メールアドレス：puneet@acm.org"
    },
    {
      "indent": 3,
      "text": "Bora Akyol Cisco Systems 170 W. Tasman Drive San Jose, CA 95134",
      "ja": "ボラAkyolシスコシステムズ170 W.タスマン・ドライブサンノゼ、CA 95134"
    },
    {
      "indent": 3,
      "text": "EMail: bora@cisco.com",
      "ja": "メールアドレス：bora@cisco.com"
    },
    {
      "indent": 0,
      "text": "9. Full Copyright Statement",
      "section_title": true,
      "ja": "9.完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2003). All Rights Reserved.",
      "ja": "著作権（C）インターネット協会（2003）。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the Internet Society or other Internet organizations, except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed, or as required to translate it into languages other than English.",
      "ja": "この文書とその翻訳は、コピーして他の人に提供し、それ以外についてはコメントまたは派生物は、いかなる種類の制限もなく、全体的にまたは部分的に、準備コピーし、公表して配布することができることを説明したり、その実装を支援することができます、上記の著作権表示とこの段落は、すべてのそのようなコピーや派生物に含まれていることを条件とします。しかし、この文書自体は著作権のための手順はで定義されている場合には、インターネット標準を開発するために必要なものを除き、インターネットソサエティもしくは他のインターネット関連団体に著作権情報や参照を取り除くなど、どのような方法で変更されないかもしれませんインターネット標準化プロセスが続く、または英語以外の言語に翻訳するために、必要に応じなければなりません。"
    },
    {
      "indent": 3,
      "text": "The limited permissions granted above are perpetual and will not be revoked by the Internet Society or its successors or assigns.",
      "ja": "上記の制限は永久で、インターネット学会やその後継者や譲渡者によって取り消されることはありません。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein is provided on an \"AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書とここに含まれている情報は、基礎とインターネットソサエティおよびインターネットエンジニアリングタスクフォースはすべての保証を否認し、明示または黙示、その情報の利用がない任意の保証を含むがこれらに限定されない「として、」上に設けられています特定の目的への権利または商品性または適合性の黙示の保証を侵害します。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "了承"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "ja": "RFC Editor機能のための基金は現在、インターネット協会によって提供されます。"
    }
  ]
}