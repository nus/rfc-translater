{
  "title": {
    "text": "RFC 2279 - UTF-8, a transformation format of ISO 10646",
    "ja": "RFC 2279 - UTF-8、ISO 10646の変換フォーマット"
  },
  "number": 2279,
  "created_at": "2019-10-22 14:35:53.610748+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                       F. Yergeau\nRequest for Comments: 2279                           Alis Technologies\nObsoletes: 2044                                           January 1998\nCategory: Standards Track",
      "raw": true
    },
    {
      "indent": 14,
      "text": "UTF-8, a transformation format of ISO 10646",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "このメモの位置付け"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "ja": "この文書は、インターネットコミュニティのためのインターネット標準トラックプロトコルを指定し、改善のための議論と提案を要求します。このプロトコルの標準化状態と状態への「インターネット公式プロトコル標準」（STD 1）の最新版を参照してください。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (1998). All Rights Reserved.",
      "ja": "著作権（C）インターネット協会（1998）。全著作権所有。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "ISO/IEC 10646-1 defines a multi-octet character set called the Universal Character Set (UCS) which encompasses most of the world's writing systems. Multi-octet characters, however, are not compatible with many current applications and protocols, and this has led to the development of a few so-called UCS transformation formats (UTF), each with different characteristics. UTF-8, the object of this memo, has the characteristic of preserving the full US-ASCII range, providing compatibility with file systems, parsers and other software that rely on US-ASCII values but are transparent to other values. This memo updates and replaces RFC 2044, in particular addressing the question of versions of the relevant standards.",
      "ja": "ISO / IEC 10646-1は、世界の書記体系の大部分を含むユニバーサル文字セット（UCS）と呼ばれるマルチオクテット文字セットを定義します。マルチオクテット文字、しかし、異なる特性を有するそれぞれ、現在の多くのアプリケーションとプロトコルと互換性がない、これはいくつかの、いわゆるUCS変換フォーマット（UTF）の開発につながりました。 UTF-8、このメモの目的は、ファイルシステム、パーサとUS-ASCII値に依存しているが、他の値に対して透明である他のソフトウェアとの互換性を提供し、完全なUS-ASCIIの範囲を維持する特性を有しています。このメモはアップデートと特に関連する規格のバージョンの問題に対処し、RFC 2044に置き換えられます。"
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "ISO/IEC 10646-1 [ISO-10646] defines a multi-octet character set called the Universal Character Set (UCS), which encompasses most of the world's writing systems. Two multi-octet encodings are defined, a four-octet per character encoding called UCS-4 and a two-octet per character encoding called UCS-2, able to address only the first 64K characters of the UCS (the Basic Multilingual Plane, BMP), outside of which there are currently no assignments.",
      "ja": "ISO / IEC 10646-1 [ISO-10646]世界の書記体系のほとんどを網羅ユニバーサル文字セット（UCS）と呼ばれるマルチオクテット文字セットを定義します。 2つのマルチオクテット符号化が定義され、UCSの最初の64K文字に対処することがUCS-4と呼ばれる文字エンコードごとに4つのオクテットとUCS-2と呼ばれる文字エンコードごとに2つのオクテット、（基本多言語面、BMP ）、その外現在のところ割り当てがありません。"
    },
    {
      "indent": 3,
      "text": "It is noteworthy that the same set of characters is defined by the Unicode standard [UNICODE], which further defines additional character properties and other application details of great interest to implementors, but does not have the UCS-4 encoding. Up to the present time, changes in Unicode and amendments to ISO/IEC 10646 have tracked each other, so that the character repertoires and code point assignments have remained in sync. The relevant standardization committees have committed to maintain this very useful synchronism.",
      "ja": "文字の同じセットは、追加の文字特性および実装に大きな関心のある他のアプリケーションの詳細を定義するUnicode標準[UNICODE]、によって定義されるが、UCS-4エンコーディングを有していないことは注目に値します。文字レパートリーとコードポイントの割り当てが同期に残っているように、現在までに、ISO / IEC 10646にユニコードに変更および修正は、互いを追跡しました。関連する標準化委員会は、この非常に便利な同期を維持するためにコミットしています。"
    },
    {
      "indent": 3,
      "text": "The UCS-2 and UCS-4 encodings, however, are hard to use in many current applications and protocols that assume 8 or even 7 bit characters. Even newer systems able to deal with 16 bit characters cannot process UCS-4 data. This situation has led to the development of so-called UCS transformation formats (UTF), each with different characteristics.",
      "ja": "UCS-2及びUCS-4エンコーディングは、しかし、8つのあるいは7ビット文字を想定現在の多くのアプリケーションとプロトコルに使用することが困難です。 16ビット文字を扱うことができても、新しいシステムは、UCS-4のデータを処理することができません。この状況は、いわゆるUCS変換形式（UTF）、異なる特性を持つそれぞれの発展につながっています。"
    },
    {
      "indent": 3,
      "text": "UTF-1 has only historical interest, having been removed from ISO/IEC 10646. UTF-7 has the quality of encoding the full BMP repertoire using only octets with the high-order bit clear (7 bit US-ASCII values, [US-ASCII]), and is thus deemed a mail-safe encoding ([RFC2152]). UTF-8, the object of this memo, uses all bits of an octet, but has the quality of preserving the full US-ASCII range: US-ASCII characters are encoded in one octet having the normal US-ASCII value, and any octet with such a value can only stand for an US-ASCII character, and nothing else.",
      "ja": "UTF-1は、歴史的関心を持っている、ISO / IEC 10646 UTF-7 US- [（7ビットUS-ASCII値の上位ビットのクリアのみオクテットを使用して完全なBMPレパートリーをコードの品質を有しているから除去されましたASCII]）、したがってメール安全な符号化（[RFC2152]）をみなされます。 UTF-8は、このメモの目的は、オクテットのすべてのビットを使用しますが、完全なUS-ASCIIの範囲を維持する品質を持っている：US-ASCII文字は、通常のUS-ASCII値を持つ1つのオクテットで符号化され、任意のオクテットされていますそのような値でのみUS-ASCII文字、そして他には何のために立つことができます。"
    },
    {
      "indent": 3,
      "text": "UTF-16 is a scheme for transforming a subset of the UCS-4 repertoire into pairs of UCS-2 values from a reserved range. UTF-16 impacts UTF-8 in that UCS-2 values from the reserved range must be treated specially in the UTF-8 transformation.",
      "ja": "UTF-16は、予約された範囲からUCS-2値の対にUCS-4レパートリーのサブセットを変換する方式です。予約された範囲からのUCS-2値のUTF-16の影響UTF-8、UTF-8変換に特別に処理されなければなりません。"
    },
    {
      "indent": 3,
      "text": "UTF-8 encodes UCS-2 or UCS-4 characters as a varying number of octets, where the number of octets, and the value of each, depend on the integer value assigned to the character in ISO/IEC 10646. This transformation format has the following characteristics (all values are in hexadecimal):",
      "ja": "UTF-8は、オクテットの数、及びそれぞれの値は、この変換フォーマットが有するISO / IEC 10646の文字に割り当てられた整数値に依存オクテットの可変数としてUCS-2またはUCS-4文字をエンコードします以下の特性（すべての値は16進数です）。"
    },
    {
      "indent": 3,
      "text": "- Character values from 0000 0000 to 0000 007F (US-ASCII repertoire) correspond to octets 00 to 7F (7 bit US-ASCII values). A direct consequence is that a plain ASCII string is also a valid UTF-8 string.",
      "ja": " -  0000 0000から0000までの文字値007F（US-ASCIIレパートリー）が7F（7ビットUS-ASCII値）オクテット00に対応します。直接の結果は、プレーンなASCII文字列も有効なUTF-8文字列であるということです。"
    },
    {
      "indent": 3,
      "text": "- US-ASCII values do not appear otherwise in a UTF-8 encoded character stream. This provides compatibility with file systems or other software (e.g. the printf() function in C libraries) that parse based on US-ASCII values but are transparent to other values.",
      "ja": " -  US-ASCII値はUTF-8でエンコードされた文字ストリームにはそれ以外の場合は表示されません。これは、US-ASCII値に基づいて、他の値に対して透明で解析ファイルシステムまたは他のソフトウェア（Cライブラリ内の例えばのprintf（）関数）との互換性を提供します。"
    },
    {
      "indent": 3,
      "text": "- Round-trip conversion is easy between UTF-8 and either of UCS-4, UCS-2.",
      "ja": " - ラウンドトリップ変換は、UTF-8およびUCS-4、UCS-2のいずれかの間に容易です。"
    },
    {
      "indent": 3,
      "text": "- The first octet of a multi-octet sequence indicates the number of octets in the sequence.",
      "ja": " - マルチオクテットシーケンスの最初のオクテットは、シーケンス内のオクテットの数を示します。"
    },
    {
      "indent": 3,
      "text": "- The octet values FE and FF never appear.",
      "ja": " - オクテット値FEとFFは表示されません。"
    },
    {
      "indent": 3,
      "text": "- Character boundaries are easily found from anywhere in an octet stream.",
      "ja": " - 文字の境界はどこでも手軽オクテットストリームの中から発見されました。"
    },
    {
      "indent": 3,
      "text": "- The lexicographic sorting order of UCS-4 strings is preserved. Of course this is of limited interest since the sort order is not culturally valid in either case.",
      "ja": " -  UCS-4文字列の辞書ソート順序は保持されます。ソート順は、いずれの場合も文化的に有効ではありませんので、もちろん、これは限られた関心があります。"
    },
    {
      "indent": 3,
      "text": "- The Boyer-Moore fast search algorithm can be used with UTF-8 data.",
      "ja": " - ボイヤー - ムーア高速検索アルゴリズムがUTF-8のデータを使用することができます。"
    },
    {
      "indent": 3,
      "text": "- UTF-8 strings can be fairly reliably recognized as such by a simple algorithm, i.e. the probability that a string of characters in any other encoding appears as valid UTF-8 is low, diminishing with increasing string length.",
      "ja": " -  UTF-8文字列は、かなり確実、簡単なアルゴリズムによってなど、他のエンコーディングの文字列が有効なUTF-8が増加文字列の長さと減少、低い出現、すなわち確率を認識することができます。"
    },
    {
      "indent": 3,
      "text": "UTF-8 was originally a project of the X/Open Joint Internationalization Group XOJIG with the objective to specify a File System Safe UCS Transformation Format [FSS-UTF] that is compatible with UNIX systems, supporting multilingual text in a single encoding. The original authors were Gary Miller, Greger Leijonhufvud and John Entenmann. Later, Ken Thompson and Rob Pike did significant work for the formal UTF-8.",
      "ja": "UTF-8は、もともと単一のエンコーディングで多言語テキストをサポートする、UNIXシステムとの互換性があるファイルシステムの安全なUCS変換フォーマット[FSS-UTF]を指定することを目的としたX / Openの共同国際グループXOJIGのプロジェクトでした。原作者はゲイリー・ミラー、Greger LeijonhufvudとジョンEntenmannました。その後、ケン・トンプソンとロブ・パイクは、正式なUTF-8のための重要な仕事をしました。"
    },
    {
      "indent": 3,
      "text": "A description can also be found in Unicode Technical Report #4 and in the Unicode Standard, version 2.0 [UNICODE]. The definitive reference, including provisions for UTF-16 data within UTF-8, is Annex R of ISO/IEC 10646-1 [ISO-10646].",
      "ja": "説明は、ユニコードテクニカルレポート＃4およびUnicode規格、バージョン2.0 [UNICODE]に見出すことができます。 UTF-8内でUTF-16データの規定を含む決定的な基準は、ISO / IEC 10646-1の附属書R [ISO-10646]です。"
    },
    {
      "indent": 0,
      "text": "2. UTF-8 definition",
      "section_title": true,
      "ja": "2. UTF-8の定義"
    },
    {
      "indent": 3,
      "text": "In UTF-8, characters are encoded using sequences of 1 to 6 octets. The only octet of a \"sequence\" of one has the higher-order bit set to 0, the remaining 7 bits being used to encode the character value. In a sequence of n octets, n>1, the initial octet has the n higher-order bits set to 1, followed by a bit set to 0. The remaining bit(s) of that octet contain bits from the value of the character to be encoded. The following octet(s) all have the higher-order bit set to 1 and the following bit set to 0, leaving 6 bits in each to contain bits from the character to be encoded.",
      "ja": "UTF-8では、文字は1〜6オクテットのシーケンスを用いて符号化されます。一方の「配列」の唯一のオクテットは0に設定上位ビット、文字値をエンコードするために使用され、残りの7ビットを有します。 nオクテットのシーケンス、N> 1において、最初のオクテットは、オクテットの残りのビット（s）は、文字の値からビットを含む0に設定ビットに続く1にセットN上位ビットを有しますエンコードします。次のオクテット（S）すべてが符号化されるキャラクタからのビットを含むように各6ビットを残し、1に設定され、上位ビットが0に設定され、次のビットを有します。"
    },
    {
      "indent": 3,
      "text": "The table below summarizes the format of these different octet types. The letter x indicates bits available for encoding bits of the UCS-4 character value.",
      "ja": "下の表は、これらの異なるオクテットタイプのフォーマットをまとめました。文字xは、UCS-4文字の値のビットを符号化するために利用可能なビットを示しています。"
    },
    {
      "indent": 3,
      "text": "UCS-4 range (hex.) UTF-8 octet sequence (binary) 0000 0000-0000 007F 0xxxxxxx 0000 0080-0000 07FF 110xxxxx 10xxxxxx 0000 0800-0000 FFFF 1110xxxx 10xxxxxx 10xxxxxx",
      "ja": "UCS-4範囲（16進）UTF-8オクテット配列（バイナリ）0000 0000-0000 007F 0xxxxxxx 0000 0080から0000 07FF 110xxxxx 10xxxxxxに0000 0800から0000 FFFF 1110xxxx 10xxxxxxに10xxxxxxに"
    },
    {
      "indent": 3,
      "text": "0001 0000-001F FFFF 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx 0020 0000-03FF FFFF 111110xx 10xxxxxx 10xxxxxx 10xxxxxx 10xxxxxx 0400 0000-7FFF FFFF 1111110x 10xxxxxx ... 10xxxxxx",
      "ja": "0001 0000-001F FFFF 11110xxx 10xxxxxxに10xxxxxxに10xxxxxxに0020 0000-03FF FFFF 111110xx 10xxxxxxに10xxxxxxに10xxxxxxに10xxxxxxに0400 0000-7FFF FFFF 1111110x 10xxxxxxに... 10xxxxxxに"
    },
    {
      "indent": 3,
      "text": "Encoding from UCS-4 to UTF-8 proceeds as follows:",
      "ja": "次のようにUTF-8移行にUCS-4からコード："
    },
    {
      "indent": 3,
      "text": "1) Determine the number of octets required from the character value and the first column of the table above. It is important to note that the rows of the table are mutually exclusive, i.e. there is only one valid way to encode a given UCS-4 character.",
      "ja": "1）文字値と上記の表の最初の列から必要なオクテットの数を決定します。テーブルの行が与えられたUCS-4文字をエンコードする唯一つの有効な方法があり、すなわち、相互に排他的であることに注意することが重要です。"
    },
    {
      "indent": 3,
      "text": "2) Prepare the high-order bits of the octets as per the second column of the table.",
      "ja": "2）表の第2列に従ってオクテットの上位ビットを準備します。"
    },
    {
      "indent": 3,
      "text": "3) Fill in the bits marked x from the bits of the character value, starting from the lower-order bits of the character value and putting them first in the last octet of the sequence, then the next to last, etc. until all x bits are filled in.",
      "ja": "まですべてのx等、最後に、次いで、次の、文字値の下位ビットから始まり、シーケンスの最後のオクテットで最初にそれらを入れて、文字値のビットからXのマーク3）ビットを記入ビットが埋められます。"
    },
    {
      "indent": 6,
      "text": "The algorithm for encoding UCS-2 (or Unicode) to UTF-8 can be obtained from the above, in principle, by simply extending each UCS-2 character with two zero-valued octets. However, pairs of UCS-2 values between D800 and DFFF (surrogate pairs in Unicode parlance), being actually UCS-4 characters transformed through UTF-16, need special treatment: the UTF-16 transformation must be undone, yielding a UCS-4 character that is then transformed as above.",
      "ja": "UTF-8とUCS-2（またはUnicode）を符号化するためのアルゴリズムは、単純に2つのゼロ値のオクテットで各UCS-2文字を拡張することにより、原理的には、上から得ることができます。しかし、UTF-16を形質実際UCS-4文字であるD800とDFFF（Unicodeの用語でサロゲートペア）との間のUCS-2の値のペアは、特別な処理を必要とする：UTF-16変換を元に戻すことが必要があり、UCS-4を得ましたその後、上記のように変換された文字。"
    },
    {
      "indent": 6,
      "text": "Decoding from UTF-8 to UCS-4 proceeds as follows:",
      "ja": "次のようにUCS-4進むにUTF-8からデコード："
    },
    {
      "indent": 3,
      "text": "1) Initialize the 4 octets of the UCS-4 character with all bits set to 0.",
      "ja": "1）0に設定されたすべてのビットのUCS-4文字の4つのオクテットを初期化します。"
    },
    {
      "indent": 3,
      "text": "2) Determine which bits encode the character value from the number of octets in the sequence and the second column of the table above (the bits marked x).",
      "ja": "2）配列と上記の表の第2列のオクテット数（ビットXをマーク）から文字値をコードするビットを決定します。"
    },
    {
      "indent": 3,
      "text": "3) Distribute the bits from the sequence to the UCS-4 character, first the lower-order bits from the last octet of the sequence and proceeding to the left until no x bits are left.",
      "ja": "NO xビットが残っていないまで3）UCS-4文字、左に配列及び手続の最後のオクテットから第1の下位ビットにシーケンスからのビットを配布。"
    },
    {
      "indent": 6,
      "text": "If the UTF-8 sequence is no more than three octets long, decoding can proceed directly to UCS-2.",
      "ja": "UTF-8シーケンスが3つ以下のオクテット長である場合、復号化は、UCS-2に直接進むこともできます。"
    },
    {
      "indent": 8,
      "text": "NOTE -- actual implementations of the decoding algorithm above should protect against decoding invalid sequences. For instance, a naive implementation may (wrongly) decode the invalid UTF-8 sequence C0 80 into the character U+0000, which may have security consequences and/or cause other problems. See the Security Considerations section below.",
      "ja": "注 - 上記の復号アルゴリズムの実際の実装は、デコード無効な配列に対して保護する必要があります。例えば、ナイーブな実装は（誤って）セキュリティへの影響を有し、および/または他の問題を引き起こす可能性がある、文字U + 0000に無効なUTF-8シーケンスC0 80を復号することができます。以下のセキュリティの考慮事項のセクションを参照してください。"
    },
    {
      "indent": 3,
      "text": "A more detailed algorithm and formulae can be found in [FSS_UTF], [UNICODE] or Annex R to [ISO-10646].",
      "ja": "詳細なアルゴリズム及び数式は[ISO-10646]と[FSS_UTF]、[UNICODE]またはアネックスRに見出すことができます。"
    },
    {
      "indent": 0,
      "text": "3. Versions of the standards",
      "section_title": true,
      "ja": "標準の3バージョン"
    },
    {
      "indent": 3,
      "text": "ISO/IEC 10646 is updated from time to time by published amendments; similarly, different versions of the Unicode standard exist: 1.0, 1.1 and 2.0 as of this writing. Each new version obsoletes and replaces the previous one, but implementations, and more significantly data, are not updated instantly.",
      "ja": "ISO / IEC 10646は、時間から公表改正により、時刻に更新されます。同様に、ユニコード規格の異なるバージョンが存在する：1.0、1.1および2.0をこの書き込みのように。それぞれの新しいバージョンでは廃止と前のものに置き換えられますが、実装、およびより大幅データは、即座に更新されません。"
    },
    {
      "indent": 3,
      "text": "In general, the changes amount to adding new characters, which does not pose particular problems with old data. Amendment 5 to ISO/IEC 10646, however, has moved and expanded the Korean Hangul block, thereby making any previous data containing Hangul characters invalid under the new version. Unicode 2.0 has the same difference from Unicode 1.1. The official justification for allowing such an incompatible change was that no implementations and no data containing Hangul existed, a statement that is likely to be true but remains unprovable. The incident has been dubbed the \"Korean mess\", and the relevant committees have pledged to never, ever again make such an incompatible change.",
      "ja": "一般的には、変更が古いデータで特定の問題を提起しない、新しい文字を追加することに達します。 ISO / IEC 10646への改正5は、しかし、移動したことにより、新しいバージョンで無効ハングル文字を含む任意の以前のデータを作り、韓国語ハングルのブロックを拡大しました。ユニコード2.0は、Unicode 1.1から同じ違いがあります。こうした互換性のない変更を可能にするための公式の正当化は何の実装とハングルを含むデータがないが、真である可能性が高いですが、unprovableまま声明を存在しないということでした。事件は「韓国の混乱」と呼ばれており、関連する委員会は、決して、二度とこうした互換性のない変更を行うことを約束しています。"
    },
    {
      "indent": 3,
      "text": "New versions, and in particular any incompatible changes, have q conseuences regarding MIME character encoding labels, to be discussed in section 5.",
      "ja": "新バージョンでは、特定の任意の互換性のない変更では、セクション5で議論されるように、MIME文字エンコーディングのラベルについてのQ conseuencesを持っています。"
    },
    {
      "indent": 0,
      "text": "4. Examples",
      "section_title": true,
      "ja": "4.例"
    },
    {
      "indent": 3,
      "text": "The UCS-2 sequence \"A<NOT IDENTICAL TO><ALPHA>.\" (0041, 2262, 0391, 002E) may be encoded in UTF-8 as follows:",
      "ja": "UCS-2配列 \"<ALPHA> A <と同一ではありません>。\"次のように（0041、2262、0391、002E）は、UTF-8でエンコードされてもよいです。"
    },
    {
      "indent": 3,
      "text": "41 E2 89 A2 CE 91 2E",
      "ja": "41 E2 89 A2 EC 91 2E"
    },
    {
      "indent": 3,
      "text": "The UCS-2 sequence representing the Hangul characters for the Korean word \"hangugo\" (D55C, AD6D, C5B4) may be encoded as follows:",
      "ja": "次のように韓国語「hangugo」（D55C、AD6D、C5B4）のためのハングル文字を表わすUCS-2配列は、符号化されてもよいです。"
    },
    {
      "indent": 3,
      "text": "ED 95 9C EA B5 AD EC 96 B4",
      "ja": "ED：B4のEC 96 95 9C B5"
    },
    {
      "indent": 3,
      "text": "The UCS-2 sequence representing the Han characters for the Japanese word \"nihongo\" (65E5, 672C, 8A9E) may be encoded as follows:",
      "ja": "次のように日本語の単語「日本語」（65E5、672C、8A9E）のための漢字を表わすUCS-2配列は、符号化されてもよいです。"
    },
    {
      "indent": 3,
      "text": "E6 97 A5 E6 9C AC E8 AA 9E",
      "ja": "私の真の兄弟、私の任意のRをかむ楽器など"
    },
    {
      "indent": 0,
      "text": "5. MIME registration",
      "section_title": true,
      "ja": "5. MIME登録"
    },
    {
      "indent": 3,
      "text": "This memo is meant to serve as the basis for registration of a MIME character set parameter (charset) [CHARSET-REG]. The proposed charset parameter value is \"UTF-8\". This string labels media types containing text consisting of characters from the repertoire of ISO/IEC 10646 including all amendments at least up to amendment 5 (Korean block), encoded to a sequence of octets using the encoding scheme outlined above. UTF-8 is suitable for use in MIME content types under the \"text\" top-level type.",
      "ja": "このメモは、MIME文字セットパラメータ（文字セット）[CHARSET-REG]の登録のための基礎として役立つことを意図しています。提案されたcharsetパラメータ値は「UTF-8」です。この文字列は、少なくとも上記で概説した符号化方式を使用して、オクテットの配列にコードされる改正5（韓国のブロック）までのすべての修正を含むISO / IEC 10646のレパートリーの文字からなるテキストを含むメディアタイプをラベル。 UTF-8は、「テキスト」のトップレベルタイプ下のMIMEコンテンツタイプでの使用に適しています。"
    },
    {
      "indent": 3,
      "text": "It is noteworthy that the label \"UTF-8\" does not contain a version identification, referring generically to ISO/IEC 10646. This is intentional, the rationale being as follows:",
      "ja": "ISO / IEC 10646に一般的に参照する。これは、次のように根拠があること、意図的である、ラベル「UTF-8」バージョンIDが含まれていないことは注目に値します。"
    },
    {
      "indent": 3,
      "text": "A MIME charset label is designed to give just the information needed to interpret a sequence of bytes received on the wire into a sequence of characters, nothing more (see RFC 2045, section 2.2, in [MIME]). As long as a character set standard does not change incompatibly, version numbers serve no purpose, because one gains nothing by learning from the tag that newly assigned characters may be received that one doesn't know about. The tag itself doesn't teach anything about the new characters, which are going to be received anyway.",
      "ja": "MIME文字セットのラベルは、バイトのシーケンスを解釈するために必要な情報だけを提供するように設計された（[MIME]で、RFC 2045、セクション2.2を参照）、文字の列にワイヤ上でより多くの何も受け取っていません。新しく割り当てられた文字は、1が知らないことを受信することができ、タグから学ぶずつゲイン何ので、限り文字集合規格は互換性のない変更されないように、バージョン番号が、何の目的を果たしていません。タグ自体はとにかく受信されようとしている新しい文字、については何も教えていません。"
    },
    {
      "indent": 3,
      "text": "Hence, as long as the standards evolve compatibly, the apparent advantage of having labels that identify the versions is only that, apparent. But there is a disadvantage to such version-dependent labels: when an older application receives data accompanied by a newer, unknown label, it may fail to recognize the label and be completely unable to deal with the data, whereas a generic, known label would have triggered mostly correct processing of the data, which may well not contain any new characters.",
      "ja": "したがって、限り標準が互換性進化として、バージョンを識別するラベルを有するの見かけの利点はそれだけで、明らかです。しかし、このようなバージョン依存のラベルに欠点がある：古いアプリケーションが新しい、未知のラベルを伴ってデータを受信したとき、それはラベルを認識し、データを扱うことが完全にできないことに失敗する可能性があり、一般的な、知られているラベルのに対しでしょうよく、新しい文字を含めることはできませんデータの大部分は正しい処理を引き起こしました。"
    },
    {
      "indent": 3,
      "text": "Now the \"Korean mess\" (ISO/IEC 10646 amendment 5) is an incompatible change, in principle contradicting the appropriateness of a version independent MIME charset label as described above. But the compatibility problem can only appear with data containing Korean Hangul characters encoded according to Unicode 1.1 (or equivalently ISO/IEC 10646 before amendment 5), and there is arguably no such data to worry about, this being the very reason the incompatible change was deemed acceptable.",
      "ja": "上記のように今、「韓国の混乱」（ISO / IEC 10646改正5）は、バージョン独立したMIME文字セットラベルの妥当性を矛盾原則的に互換性のない変更、です。しかし、互換性の問題は（修正5の前または同等にISO / IEC 10646）は、Unicode 1.1に基づいてエンコードされた韓国語のハングル文字を含むデータを表示することができ、そして心配するようなデータが間違いなくありません、これは互換性のない変更だった非常に理由であること許容できるとみなされます。"
    },
    {
      "indent": 3,
      "text": "In practice, then, a version-independent label is warranted, provided the label is understood to refer to all versions after Amendment 5, and provided no incompatible change actually occurs. Should incompatible changes occur in a later version of ISO/IEC 10646, the MIME charset label defined here will stay aligned with the previous version until and unless the IETF specifically decides otherwise.",
      "ja": "実際には、次に、バージョンに依存しないラベルが保証され、ラベルが改正5後のすべてのバージョンを指すと理解し、実際に発生全く互換性のない変更が設けられていないが提供されます。 ISO / IEC 10646の以降のバージョンでの変更を互換性のない必要があります発生IETFは、特にそうでないことを決定するまでとしない限り、ここで定義されたMIME文字セットラベルは、以前のバージョンに合わせたままになります。"
    },
    {
      "indent": 3,
      "text": "It is also proposed to register the charset parameter value \"UNICODE-1-1-UTF-8\", for the exclusive purpose of labelling text data containing Hangul syllables encoded to UTF-8 without taking into account Amendment 5 of ISO/IEC 10646 (i.e. using the pre-amendment 5 code point assignments). Any other UTF-8 data SHOULD NOT use this label, in particular data not containing any Hangul syllables, and it is felt important to strongly recommend against creating any new Hangul-containing data without taking Amendment 5 of ISO/IEC 10646 into account.",
      "ja": "また、「UNICODE-1-1-UTF-8」、UTF-8にエンコードされたハングルの音節を含むラベリングテキストデータの排他的な目的のためにISO / IEC 10646のアカウントの改正5を考慮せずに（charsetパラメータ値を登録することが提案されていますIE）プレ改正5コードポイント割り当てを使用。その他のUTF-8のデータは、任意のハングル音節を含まない特定のデータでは、このラベルを使用してはならず、強く考慮にISO / IEC 10646の改正5を取ることなく、新しいハングルを含むデータを作成に対してお勧めすることが重要と感じています。"
    },
    {
      "indent": 0,
      "text": "6. Security Considerations",
      "section_title": true,
      "ja": "6.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "Implementors of UTF-8 need to consider the security aspects of how they handle illegal UTF-8 sequences. It is conceivable that in some circumstances an attacker would be able to exploit an incautious UTF-8 parser by sending it an octet sequence that is not permitted by the UTF-8 syntax.",
      "ja": "UTF-8の実装者は、彼らが違法なUTF-8シーケンスをどのように処理するかのセキュリティ面を考慮する必要があります。いくつかの状況で、攻撃者はそれをUTF-8構文によって許可されていないオクテットのシーケンスを送信することにより、事も無げUTF-8パーサを利用することができるだろうと考えられます。"
    },
    {
      "indent": 3,
      "text": "A particularly subtle form of this attack could be carried out against a parser which performs security-critical validity checks against the UTF-8 encoded form of its input, but interprets certain illegal octet sequences as characters. For example, a parser might prohibit the NUL character when encoded as the single-octet sequence 00, but allow the illegal two-octet sequence C0 80 and interpret it as a NUL character. Another example might be a parser which prohibits the octet sequence 2F 2E 2E 2F (\"/../\"), yet permits the illegal octet sequence 2F C0 AE 2E 2F.",
      "ja": "この攻撃の特に微妙な形は、その入力のUTF-8でエンコードされたフォームに対するセキュリティが重要な妥当性チェックを実行するが、文字などの特定の違法オクテットシーケンスを解釈するパーサに対して行うことができます。たとえば、パーサは単一オクテット列00としてエンコードされたときにNUL文字を禁止しますが、C0 80不法2オクテットのシーケンスを許可するとNUL文字としてそれを解釈することがあります。別の例は、オクテット列2F 2E 2E 2F（「/../」）を禁止し、まだ違法オクテット配列2F C0 AE 2E 2Fを可能にするパーサであるかもしれません。"
    },
    {
      "indent": 0,
      "text": "Acknowledgments",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "The following have participated in the drafting and discussion of this memo:",
      "ja": "以下は、このメモの起草と議論に参加しています："
    },
    {
      "indent": 3,
      "text": "James E. Agenbroad Andries Brouwer Martin J. D|rst Ned Freed David Goldsmith Edwin F. Hart Kent Karlsson Markus Kuhn Michael Kung Alain LaBonte John Gardiner Myers Murray Sargent Keld Simonsen Arnold Winkler",
      "ja": "ジェームズ・E. Agenbroadアンドリーズ・ブラウワーマーティンJ. D |最初ネッドフリードデビッド・ゴールドスミスエドウィン・F.ハートケント・カールソンマーカス・クーンマイケル・クンアラン・ラボンテジョン・ガーディナーマイヤーズマレー・サージェントKeldシモンセンアーノルド・ウィンクラー"
    },
    {
      "indent": 0,
      "text": "Bibliography",
      "ja": "参考文献"
    },
    {
      "indent": 3,
      "text": "[CHARSET-REG] Freed, N., and J. Postel, \"IANA Charset Registration Procedures\", BCP 19, RFC 2278, January 1998.",
      "ja": "[CHARSET-REG]解放され、N.、およびJ.ポステル、 \"IANA文字セット登録手順\"、BCP 19、RFC 2278、1998年1月。"
    },
    {
      "indent": 3,
      "text": "[FSS_UTF] X/Open CAE Specification C501 ISBN 1-85912-082-2 28cm. 22p. pbk. 172g. 4/95, X/Open Company Ltd., \"File System Safe UCS Transformation Format (FSS_UTF)\", X/Open Preleminary Specification, Document Number P316. Also published in Unicode Technical Report #4.",
      "ja": "【FSS_UTF]は、X / Open CAE仕様C501 ISBN 1-85912-082-2 28センチメートル。 22P。 PBK。 172グラム。 95分の4、X / Openカンパニーリミテッド、X / OpenのPreleminary仕様、文書番号P316、 \"システム安全UCS変換フォーマット（FSS_UTFを）ファイル\"。また、Unicodeのテクニカルレポート＃4に掲載されました。"
    },
    {
      "indent": 3,
      "text": "[ISO-10646] ISO/IEC 10646-1:1993. International Standard -- Information technology -- Universal Multiple-Octet Coded Character Set (UCS) -- Part 1: Architecture and Basic Multilingual Plane. Five amendments and a technical corrigendum have been published up to now. UTF-8 is described in Annex R, published as Amendment 2. UTF-16 is described in Annex Q, published as Amendment 1. 17 other amendments are currently at various stages of standardization.",
      "ja": "[ISO-10646] ISO / IEC 10646-1：1993。国際規格 - 情報技術 - ユニバーサルマルチオクテット符号化文字セット（UCS） - 第1部：アーキテクチャと基本多言語面。五の改正や技術正誤表は、今までに発表されています。 UTF-8、UTF-16は、17の他の修正は、標準化の様々な段階で現在の改正1として公開された附属書Qに記載されている改正2として公開され、附属書Rに記載されています。"
    },
    {
      "indent": 3,
      "text": "[MIME] Freed, N., and N. Borenstein, \"Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies\", RFC 2045. N. Freed, N. Borenstein, \"Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types\", RFC 2046. K. Moore, \"MIME (Multipurpose Internet Mail Extensions) Part Three: Message Header Extensions for Non-ASCII Text\", RFC 2047. N. Freed, J. Klensin, J. Postel, \"Multipurpose Internet Mail Extensions (MIME) Part Four: Registration Procedures\", RFC 2048. N. Freed, N. Borenstein, \" Multipurpose Internet Mail Extensions (MIME) Part Five: Conformance Criteria and Examples\", RFC 2049. All November 1996.",
      "ja": "[MIME]解放され、N.、およびN. Borenstein、 \"マルチパーパスインターネットメールエクステンション（MIME）第一部：インターネットメッセージ本体のフォーマット\"、RFC 2045 N.フリード、N. Borenstein、「マルチパーパスインターネットメールエクステンション（MIME）第二部：メディアタイプ」、RFC 2046 K.ムーア、 『MIME（多目的インターネットメール拡張）パート3：』非ASCIIテキストのためのメッセージヘッダの拡張、RFC 2047 N.フリード、J. Klensin、J.ポステル、 「多目的インターネットメール拡張（MIME）第四部：登録手順」、RFC 2048 N.フリード、N. Borenstein、「マルチパーパスインターネットメールエクステンション（MIME）パート5：適合基準と例」、RFC 2049のすべての1996年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC2152] Goldsmith, D., and M. Davis, \"UTF-7: A Mail-safe Transformation Format of Unicode\", RFC 1642, Taligent inc., May 1997. (Obsoletes RFC1642)",
      "ja": "[RFC2152]ゴールドスミス、D.、およびM.デイヴィス、 \"UTF-7：ユニコードのメールセーフ変換フォーマット\"、RFC 1642、Taligent incは、月1997年（RFC1642を時代遅れ）"
    },
    {
      "indent": 3,
      "text": "[UNICODE] The Unicode Consortium, \"The Unicode Standard -- Version 2.0\", Addison-Wesley, 1996.",
      "ja": "[UNICODE]ユニコードコンソーシアム、 \"Unicode規格 - バージョン2.0\"、アディソン・ウェズリー、1996。"
    },
    {
      "indent": 3,
      "text": "[US-ASCII] Coded Character Set--7-bit American Standard Code for Information Interchange, ANSI X3.4-1986.",
      "ja": "[US-ASCII]コード化文字セット -  7ビットの米国標準コード情報交換、ANSI X3.4-1986ため。"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Francois Yergeau Alis Technologies 100, boul. Alexis-Nihon Suite 600 Montreal QC H4M 2P2 Canada",
      "ja": "フランソワYergeauアリス・テクノロジーズ100、BOUL。アレクシス日本スイート600モントリオールQC H4L 2P2カナダ"
    },
    {
      "indent": 3,
      "text": "Phone: +1 (514) 747-2547 Fax: +1 (514) 747-2561 EMail: fyergeau@alis.com",
      "ja": "電話：+1（514）747-2547ファックス：+1（514）747-2561 Eメール：fyergeau@alis.com"
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (1998). All Rights Reserved.",
      "ja": "著作権（C）インターネット協会（1998）。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the Internet Society or other Internet organizations, except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed, or as required to translate it into languages other than English.",
      "ja": "この文書とその翻訳は、コピーして他の人に提供し、それ以外についてはコメントまたは派生物は、いかなる種類の制限もなく、全体的にまたは部分的に、準備コピーし、公表して配布することができることを説明したり、その実装を支援することができます、上記の著作権表示とこの段落は、すべてのそのようなコピーや派生物に含まれていることを条件とします。しかし、この文書自体は著作権のための手順はで定義されている場合には、インターネット標準を開発するために必要なものを除き、インターネットソサエティもしくは他のインターネット関連団体に著作権情報や参照を取り除くなど、どのような方法で変更されないかもしれませんインターネット標準化プロセスが続く、または英語以外の言語に翻訳するために、必要に応じなければなりません。"
    },
    {
      "indent": 3,
      "text": "The limited permissions granted above are perpetual and will not be revoked by the Internet Society or its successors or assigns.",
      "ja": "上記の制限は永久で、インターネット学会やその後継者や譲渡者によって取り消されることはありません。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein is provided on an \"AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書とここに含まれている情報は、基礎とインターネットソサエティおよびインターネットエンジニアリングタスクフォースはすべての保証を否認し、明示または黙示、その情報の利用がない任意の保証を含むがこれらに限定されない「として、」上に設けられています特定の目的への権利または商品性または適合性の黙示の保証を侵害します。"
    }
  ]
}