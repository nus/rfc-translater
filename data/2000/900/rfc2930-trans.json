{
  "title": {
    "text": "RFC 2930 - Secret Key Establishment for DNS (TKEY RR)",
    "ja": "RFC 2930 - DNSのための秘密鍵確立（TKEYのRR）"
  },
  "number": 2930,
  "created_at": "2019-11-01 12:58:59.446578+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                   D. Eastlake, 3rd\nRequest for Comments: 2930                                      Motorola\nCategory: Standards Track                                 September 2000",
      "raw": true
    },
    {
      "indent": 15,
      "text": "Secret Key Establishment for DNS (TKEY RR)",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "このメモの位置付け"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "ja": "この文書は、インターネットコミュニティのためのインターネット標準トラックプロトコルを指定し、改善のための議論と提案を要求します。このプロトコルの標準化状態と状態への「インターネット公式プロトコル標準」（STD 1）の最新版を参照してください。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2000). All Rights Reserved.",
      "ja": "著作権（C）インターネット協会（2000）。全著作権所有。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "[RFC 2845] provides a means of authenticating Domain Name System (DNS) queries and responses using shared secret keys via the Transaction Signature (TSIG) resource record (RR). However, it provides no mechanism for setting up such keys other than manual exchange. This document describes a Transaction Key (TKEY) RR that can be used in a number of different modes to establish shared secret keys between a DNS resolver and server.",
      "ja": "[RFC 2845]はトランザクション署名（TSIG）リソースレコード（RR）を介して共有された秘密鍵を使用して、ドメインネームシステム（DNS）クエリと応答を認証する手段を提供します。しかし、それは手動の為替以外の、このようなキーを設定するためのメカニズムを提供しません。この文書では、DNSリゾルバとサーバ間の共有秘密鍵を確立するために、多数の異なるモードで使用することができ、トランザクションキー（TKEY）RRを説明しています。"
    },
    {
      "indent": 0,
      "text": "Acknowledgments",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "The comments and ideas of the following persons (listed in alphabetic order) have been incorporated herein and are gratefully acknowledged:",
      "ja": "（アルファベット順）次の者のコメントやアイデアは、本明細書に組み込まれていると深く感謝しています。"
    },
    {
      "indent": 9,
      "text": "Olafur Gudmundsson (TIS)",
      "ja": "オラフルグドムンソン（CIS）"
    },
    {
      "indent": 9,
      "text": "Stuart Kwan (Microsoft)",
      "ja": "スチュアート・クワン（マイクロソフト）"
    },
    {
      "indent": 9,
      "text": "Ed Lewis (TIS)",
      "ja": "ESボイラー（OF）"
    },
    {
      "indent": 9,
      "text": "Erik Nordmark (SUN)",
      "ja": "エリックNordmarkと（SUN）"
    },
    {
      "indent": 9,
      "text": "Brian Wellington (Nominum)",
      "ja": "ブライアン・ウェリントン（名）"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction...............................................  2\n1.1 Overview of Contents......................................  3\n2. The TKEY Resource Record...................................  4\n2.1 The Name Field............................................  4\n2.2 The TTL Field.............................................  5\n2.3 The Algorithm Field.......................................  5\n2.4 The Inception and Expiration Fields.......................  5\n2.5 The Mode Field............................................  5\n2.6 The Error Field...........................................  6\n2.7 The Key Size and Data Fields..............................  6\n2.8 The Other Size and Data Fields............................  6\n3. General TKEY Considerations................................  7\n4. Exchange via Resolver Query................................  8\n4.1 Query for Diffie-Hellman Exchanged Keying.................  8\n4.2 Query for TKEY Deletion...................................  9\n4.3 Query for GSS-API Establishment........................... 10\n4.4 Query for Server Assigned Keying.......................... 10\n4.5 Query for Resolver Assigned Keying........................ 11\n5. Spontaneous Server Inclusion............................... 12\n5.1 Spontaneous Server Key Deletion........................... 12\n6. Methods of Encryption...................................... 12\n7. IANA Considerations........................................ 13\n8. Security Considerations.................................... 13\nReferences.................................................... 14\nAuthor's Address.............................................. 15\nFull Copyright Statement...................................... 16",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "The Domain Name System (DNS) is a hierarchical, distributed, highly available database used for bi-directional mapping between domain names and addresses, for email routing, and for other information [RFC 1034, 1035]. It has been extended to provide for public key security and dynamic update [RFC 2535, RFC 2136]. Familiarity with these RFCs is assumed.",
      "ja": "ドメインネームシステム（DNS）は、ドメイン名とアドレス間の双方向マッピングのため、電子メールのルーティングのために、およびその他の情報のために使用される階層、分散、高可用性データベース[RFC 1034、1035]です。公開鍵セキュリティ、および動的更新[RFC 2535、RFC 2136]を提供するために拡張されました。これらのRFCに精通が想定されます。"
    },
    {
      "indent": 3,
      "text": "[RFC 2845] provides a means of efficiently authenticating DNS messages using shared secret keys via the TSIG resource record (RR) but provides no mechanism for setting up such keys other than manual exchange. This document specifies a TKEY RR that can be used in a number of different modes to establish and delete such shared secret keys between a DNS resolver and server.",
      "ja": "[RFC 2845]は効率的TSIGリソースレコード（RR）を介して共有された秘密鍵を使用してDNSメッセージを認証する手段を提供するが、手動交換以外のそのようなキーを設定するためのメカニズムを提供しません。この文書では、DNSリゾルバとサーバの間で、共有秘密鍵を確立し、削除するために多数の異なるモードで使用することができTKEY RRを指定します。"
    },
    {
      "indent": 3,
      "text": "Note that TKEY established keying material and TSIGs that use it are associated with DNS servers or resolvers. They are not associated with zones. They may be used to authenticate queries and responses but they do not provide zone based DNS data origin or denial authentication [RFC 2535].",
      "ja": "TKEYが鍵材料を確立し、それを使用TSIGsは、DNSサーバやリゾルバと関連していることに注意してください。これらは、ゾーンに関連付けられていません。彼らは、クエリと応答を認証するために使用することができるが、これらは、ゾーンベースのDNSデータの起源または拒否認証[RFC 2535]を提供していません。"
    },
    {
      "indent": 3,
      "text": "Certain modes of TKEY perform encryption which may affect their export or import status for some countries. The affected modes specified in this document are the server assigned mode and the resolver assigned mode.",
      "ja": "TKEYの特定のモードは、いくつかの国のために自分の輸出入状況に影響を与える可能性があり、暗号化を行います。この文書で指定された影響を受けるモードは、サーバ割り当てモードとリゾルバ割り当てモードです。"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC 2119].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はあります[RFC 2119]に記載されているように解釈されます。"
    },
    {
      "indent": 3,
      "text": "In all cases herein, the term \"resolver\" includes that part of a server which may make full and incremental [RFC 1995] zone transfer queries, forwards recursive queries, etc.",
      "ja": "本明細書において全ての場合において、用語「リゾルバ」は、完全かつインクリメンタル[RFC 1995]ゾーン転送クエリを行うことができるサーバの一部を含む、等再帰クエリを転送します"
    },
    {
      "indent": 0,
      "text": "1.1 Overview of Contents",
      "section_title": true,
      "ja": "内容の概要1.1"
    },
    {
      "indent": 3,
      "text": "Section 2 below specifies the TKEY RR and provides a description of and considerations for its constituent fields.",
      "ja": "セクション2は、以下の処理鍵RRを指定し、その構成フィールドのための説明および考察を提供します。"
    },
    {
      "indent": 3,
      "text": "Section 3 describes general principles of operations with TKEY.",
      "ja": "第3節では処理鍵と操作の一般原則を説明しています。"
    },
    {
      "indent": 3,
      "text": "Section 4 discusses key agreement and deletion via DNS requests with the Query opcode for RR type TKEY. This method is applicable to all currently defined TKEY modes, although in some cases it is not what would intuitively be called a \"query\".",
      "ja": "第4章では、RRタイプTKEYのためのクエリオペコードとDNS要求を介した鍵合意と削除について説明します。いくつかのケースでは、それは直感的に「クエリ」と呼ばれるものではありませんが、この方法では、現在定義されているすべてのTKEYモードに適用されます。"
    },
    {
      "indent": 3,
      "text": "Section 5 discusses spontaneous inclusion of TKEY RRs in responses by servers which is currently used only for key deletion.",
      "ja": "第5節では、現在、唯一のキー削除のために使用されているサーバによって応答のTKEY RRの自発的な含めることを説明します。"
    },
    {
      "indent": 3,
      "text": "Section 6 describes encryption methods for transmitting secret key information. In this document these are used only for the server assigned mode and the resolver assigned mode.",
      "ja": "第6節は、秘密鍵情報を送信するための暗号化方法を説明します。この文書では、これらはサーバのみ割り当てモードとリゾルバ割り当てモードのために使用されています。"
    },
    {
      "indent": 3,
      "text": "Section 7 covers IANA considerations in assignment of TKEY modes.",
      "ja": "第7節はTKEYモードの割り当てにIANA問題をカバーしています。"
    },
    {
      "indent": 3,
      "text": "Finally, Section 8 provides the required security considerations section.",
      "ja": "最後に、第8節は、必要なセキュリティの考慮事項のセクションを提供します。"
    },
    {
      "indent": 0,
      "text": "2. The TKEY Resource Record",
      "section_title": true,
      "ja": "2. TKEYリソースレコードに"
    },
    {
      "indent": 3,
      "text": "The TKEY resource record (RR) has the structure given below. Its RR type code is 249.",
      "ja": "TKEYリソースレコード（RR）は、下記の構造を有しています。そのRRのタイプコードは249です。"
    },
    {
      "indent": 6,
      "text": "Field       Type         Comment\n-----       ----         -------",
      "raw": true
    },
    {
      "indent": 6,
      "text": "NAME domain see description below TTYPE u_int16_t TKEY = 249 CLASS u_int16_t ignored, SHOULD be 255 (ANY) TTL u_int32_t ignored, SHOULD be zero RDLEN u_int16_t size of RDATA RDATA: Algorithm: domain Inception: u_int32_t Expiration: u_int32_t Mode: u_int16_t Error: u_int16_t Key Size: u_int16_t Key Data: octet-stream Other Size: u_int16_t Other Data: octet-stream undefined by this specification",
      "ja": "アルゴリズム：：ドメインインセプション：u_int32_t有効期限：モードu_int32_t：u_int16_tエラー：u_int16_tキー名のドメインは、あるべきである255（ANY）TTL u_int32_t、ゼロRDLENのu_int16_tのRDATA RDATAのサイズである必要があり、無視無視TKEY = 249 CLASSのu_int16_t u_int16_t TTYPE、以下の説明を参照してくださいサイズ：octet-streamのその他サイズ：u_int16_tその他のデータ：この仕様で未定義のオクテットストリームキーデータu_int16_t"
    },
    {
      "indent": 0,
      "text": "2.1 The Name Field",
      "section_title": true,
      "ja": "2.1名フィールド"
    },
    {
      "indent": 3,
      "text": "The Name field relates to naming keys. Its meaning differs somewhat with mode and context as explained in subsequent sections.",
      "ja": "[名前]フィールドには、キーを命名することに関する。次のセクションで説明したように、その意味は、モードとコンテキストと多少異なります。"
    },
    {
      "indent": 3,
      "text": "At any DNS server or resolver only one octet string of keying material may be in place for any particular key name. An attempt to establish another set of keying material at a server for an existing name returns a BADNAME error.",
      "ja": "任意のDNSサーバやリゾルバで鍵材料の一つだけオクテット文字列は、任意の特定のキーの名前のための場所であってもよいです。既存の名前をサーバーで鍵材料の別のセットを確立しようとする試みは、BADNAMEエラーを返します。"
    },
    {
      "indent": 3,
      "text": "For a TKEY with a non-root name appearing in a query, the TKEY RR name SHOULD be a domain locally unique at the resolver, less than 128 octets long in wire encoding, and meaningful to the resolver to assist in distinguishing keys and/or key agreement sessions. For TKEY(s) appearing in a response to a query, the TKEY RR name SHOULD be a globally unique server assigned domain.",
      "ja": "クエリに現れる非ルート名を持つTKEYため、処理鍵RR名は区別キーを支援するためにレゾルバにワイヤエンコーディング未満128オクテット長リゾルバで局所的に一意のドメイン、および有意義でなければならない、および/または鍵合意セッション。クエリに応答して表示される処理鍵（複数可）について、TKEYのRR名は、グローバルに一意のサーバーに割り当てられたドメインであるべきです。"
    },
    {
      "indent": 3,
      "text": "A reasonable key naming strategy is as follows:",
      "ja": "次のように合理的なキーの命名戦略は次のとおりです。"
    },
    {
      "indent": 6,
      "text": "If the key is generated as the result of a query with root as its owner name, then the server SHOULD create a globally unique domain name, to be the key name, by suffixing a pseudo-random [RFC 1750] label with a domain name of the server. For example 89n3mDgX072pp.server1.example.com. If generation of a new pseudo-random name in each case is an excessive computation load or entropy drain, a serial number prefix can be added to a fixed pseudo-random name generated an DNS server start time, such as 1001.89n3mDgX072pp.server1.example.com.",
      "ja": "キーはその所有者名として根を持つクエリの結果として生成されている場合、サーバーは、グローバルに一意のドメイン名を作成する必要があり、ドメイン名と擬似ランダム[RFC 1750]のラベルを接尾辞を付けることで、キーの名前であることをサーバーの。たとえば89n3mDgX072pp.server1.example.com。それぞれの場合において、新しい擬似ランダム名の生成は、過剰な計算負荷やエントロピードレインである場合、シリアル番号のプレフィックスは、固定擬似ランダム名に付加することができるDNSサーバーの開始時刻を生成し、そのような1001.89n3mDgX072pp.server1.exampleとして.COM。"
    },
    {
      "indent": 6,
      "text": "If the key is generated as the result of a query with a non-root name, say 789.resolver.example.net, then use the concatenation of that with a name of the server. For example 789.resolver.example.net.server1.example.com.",
      "ja": "キーが非ルート名のクエリの結果として生成されている場合は、789.resolver.example.netは、サーバの名前とその連結を使用しますと言います。例789.resolver.example.net.server1.example.comため。"
    },
    {
      "indent": 0,
      "text": "2.2 The TTL Field",
      "section_title": true,
      "ja": "2.2 TTLフィールド"
    },
    {
      "indent": 3,
      "text": "The TTL field is meaningless in TKEY RRs. It SHOULD always be zero to be sure that older DNS implementations do not cache TKEY RRs.",
      "ja": "TTLフィールドは処理鍵のRRで無意味です。それは、常に古いDNS実装がTKEYのRRをキャッシュしていないことを確認するためにゼロであるべきです。"
    },
    {
      "indent": 0,
      "text": "2.3 The Algorithm Field",
      "section_title": true,
      "ja": "2.3アルゴリズムのフィールドに"
    },
    {
      "indent": 3,
      "text": "The algorithm name is in the form of a domain name with the same meaning as in [RFC 2845]. The algorithm determines how the secret keying material agreed to using the TKEY RR is actually used to derive the algorithm specific key.",
      "ja": "アルゴリズム名は、[RFC 2845]と同じ意味を持つドメイン名の形式です。このアルゴリズムは、TKEYのRRを使用することで合意秘密鍵情報は、実際にアルゴリズムの特定のキーを導出するために使用される方法を決定します。"
    },
    {
      "indent": 0,
      "text": "2.4 The Inception and Expiration Fields",
      "section_title": true,
      "ja": "2.4インセプションと有効期限のフィールド"
    },
    {
      "indent": 3,
      "text": "The inception time and expiration times are in number of seconds since the beginning of 1 January 1970 GMT ignoring leap seconds treated as modulo 2**32 using ring arithmetic [RFC 1982]. In messages between a DNS resolver and a DNS server where these fields are meaningful, they are either the requested validity interval for the keying material asked for or specify the validity interval of keying material provided.",
      "ja": "開始時間および満了時間はリング算術[RFC 1982]を用いてモジュロ2 ** 32として扱わうるう秒を無視して1970年1月1日GMTの開始からの秒数です。 DNSリゾルバと、これらのフィールドは意味のあるDNSサーバ間のメッセージでは、彼らはを求めたか、提供素材をキーイングの有効間隔を指定キーイング材料のための要求された有効期間のいずれかです。"
    },
    {
      "indent": 3,
      "text": "To avoid different interpretations of the inception and expiration times in TKEY RRs, resolvers and servers exchanging them must have the same idea of what time it is. One way of doing this is with the NTP protocol [RFC 2030] but that or any other time synchronization used for this purpose MUST be done securely.",
      "ja": "TKEYのRRでの開始と有効期限の異なる解釈を避けるために、それらを交換するリゾルバとサーバは、それが何であるか、時間の同じ考えを持っている必要があります。これを行う1つの方法は、NTPプロトコル[RFC 2030]であるが、そのまたはこの目的のために使用される任意の他の時刻同期が確実に行わなければなりません。"
    },
    {
      "indent": 0,
      "text": "2.5 The Mode Field",
      "section_title": true,
      "ja": "2.5モードフィールド"
    },
    {
      "indent": 3,
      "text": "The mode field specifies the general scheme for key agreement or the purpose of the TKEY DNS message. Servers and resolvers supporting this specification MUST implement the Diffie-Hellman key agreement mode and the key deletion mode for queries. All other modes are OPTIONAL. A server supporting TKEY that receives a TKEY request with a mode it does not support returns the BADMODE error. The following values of the Mode octet are defined, available, or reserved:",
      "ja": "モードフィールドは、キー契約または処理鍵DNSメッセージの目的のための一般的なスキームを指定します。サーバーおよびDiffie-Hellman鍵合意モードとクエリのキー削除モードを実装しなければならないこの仕様をサポートするリゾルバ。他のすべてのモードはオプションです。それが戻ってBADMODEエラーをサポートしていないモードでの処理鍵要求を受信TKEYをサポートするサーバ。モードオクテットの次の値は、利用可能な、定義された、または予約されています。"
    },
    {
      "indent": 9,
      "text": "Value    Description\n-----    -----------\n 0        - reserved, see section 7\n 1       server assignment\n 2       Diffie-Hellman exchange\n 3       GSS-API negotiation\n 4       resolver assignment\n 5       key deletion\n6-65534   - available, see section 7\n65535     - reserved, see section 7",
      "raw": true
    },
    {
      "indent": 0,
      "text": "2.6 The Error Field",
      "section_title": true,
      "ja": "2.6エラー・フィールド"
    },
    {
      "indent": 3,
      "text": "The error code field is an extended RCODE. The following values are defined:",
      "ja": "エラーコードフィールドは、拡張RCODEあります。次の値が定義されています。"
    },
    {
      "indent": 9,
      "text": "Value   Description\n-----   -----------\n 0       - no error\n 1-15   a non-extended RCODE\n 16     BADSIG   (TSIG)\n 17     BADKEY   (TSIG)\n 18     BADTIME  (TSIG)\n 19     BADMODE\n 20     BADNAME\n 21     BADALG",
      "raw": true
    },
    {
      "indent": 3,
      "text": "When the TKEY Error Field is non-zero in a response to a TKEY query, the DNS header RCODE field indicates no error. However, it is possible if a TKEY is spontaneously included in a response the TKEY RR and DNS header error field could have unrelated non-zero error codes.",
      "ja": "処理鍵エラーフィールドが処理鍵クエリに応答して非ゼロである場合、DNSヘッダRCODEフィールドにエラーがないことを示します。しかし、処理鍵が自発的に応答に含まれていれば処理鍵RRとDNSヘッダエラーフィールドは無関係の非ゼロのエラーコードを有することが可能です。"
    },
    {
      "indent": 0,
      "text": "2.7 The Key Size and Data Fields",
      "section_title": true,
      "ja": "2.7キーサイズとデータフィールド"
    },
    {
      "indent": 3,
      "text": "The key data size field is an unsigned 16 bit integer in network order which specifies the size of the key exchange data field in octets. The meaning of this data depends on the mode.",
      "ja": "鍵データサイズフィールドは、オクテットで鍵交換データフィールドのサイズを指定し、ネットワーク順に符号なし16ビット整数です。このデータの意味は、モードによって異なります。"
    },
    {
      "indent": 0,
      "text": "2.8 The Other Size and Data Fields",
      "section_title": true,
      "ja": "2.8その他のサイズとデータフィールド"
    },
    {
      "indent": 3,
      "text": "The Other Size and Other Data fields are not used in this specification but may be used in future extensions. The RDLEN field MUST equal the length of the RDATA section through the end of Other Data or the RR is to be considered malformed and rejected.",
      "ja": "その他サイズおよびその他のデータフィールドは、この明細書中で使用されていないが、将来の拡張に使用することができます。 RDLENフィールドは、他のデータまたはRRの端部を通ってRDATA部の長さを等しくなければならない不正な考慮し、拒否されるべきです。"
    },
    {
      "indent": 0,
      "text": "3. General TKEY Considerations",
      "section_title": true,
      "ja": "3.一般的な処理鍵の考慮事項"
    },
    {
      "indent": 3,
      "text": "TKEY is a meta-RR that is not stored or cached in the DNS and does not appear in zone files. It supports a variety of modes for the establishment and deletion of shared secret keys information between DNS resolvers and servers. The establishment of such a shared key requires that state be maintained at both ends and the allocation of the resources to maintain such state may require mutual agreement. In the absence of willingness to provide such state, servers MUST return errors such as NOTIMP or REFUSED for an attempt to use TKEY and resolvers are free to ignore any TKEY RRs they receive.",
      "ja": "処理鍵はDNSに保存されているか、キャッシュされていないメタRRで、ゾーンファイルには表示されません。これは、DNSリゾルバとサーバ間の共有秘密鍵情報の確立および削除のための様々なモードをサポートしています。そのような共有鍵の確立状態は終了し、相互の合意を必要とするかもしれないような状態を維持するためのリソースの割り当ての両方で維持されることを要求します。このような状態を提供する意欲がない場合には、サーバは、NOTIMPなどのエラーを返さなければならないか、彼らが受け取る任意の処理鍵RRを無視するのは自由ですTKEYとリゾルバを使用しようとする試みのために拒否しました。"
    },
    {
      "indent": 3,
      "text": "The shared secret keying material developed by using TKEY is a plain octet sequence. The means by which this shared secret keying material, exchanged via TKEY, is actually used in any particular TSIG algorithm is algorithm dependent and is defined in connection with that algorithm. For example, see [RFC 2104] for how TKEY agreed shared secret keying material is used in the HMAC-MD5 algorithm or other HMAC algorithms.",
      "ja": "TKEYを使用して開発された共有秘密鍵情報は、プレーンオクテット配列です。この共有秘密鍵材料は、TKEYを介して交換する手段は、実際に任意の特定のTSIGアルゴリズムで使用されるアルゴリズムに依存し、そのアルゴリズムに関連して定義されています。例えば、処理鍵は、共有秘密鍵材料が、HMAC-MD5アルゴリズムまたは他のHMACアルゴリズムで使用され合意された方法については、[RFC 2104]参照。"
    },
    {
      "indent": 3,
      "text": "There MUST NOT be more than one TKEY RR in a DNS query or response.",
      "ja": "DNSクエリまたは応答で複数の処理鍵RRがあってはなりません。"
    },
    {
      "indent": 3,
      "text": "Except for GSS-API mode, TKEY responses MUST always have DNS transaction authentication to protect the integrity of any keying data, error codes, etc. This authentication MUST use a previously established secret (TSIG) or public (SIG(0) [RFC 2931]) key and MUST NOT use any key that the response to be verified is itself providing.",
      "ja": "GSS-APIモードを除き、TKEYの応答は常に等の任意のキーイングデータ、エラーコードの整合性を保護するためのDNSトランザクション認証を持たなければならない以前に確立された秘密（TSIG）またはパブリック（SIG（0）[RFC 2931を使用しなければならない。この認証]）キーを検証する応答を提供そのものであることを、任意のキーを使用してはいけません。"
    },
    {
      "indent": 3,
      "text": "TKEY queries MUST be authenticated for all modes except GSS-API and, under some circumstances, server assignment mode. In particular, if the query for a server assigned key is for a key to assert some privilege, such as update authority, then the query must be authenticated to avoid spoofing. However, if the key is just to be used for transaction security, then spoofing will lead at worst to denial of service. Query authentication SHOULD use an established secret (TSIG) key authenticator if available. Otherwise, it must use a public (SIG(0)) key signature. It MUST NOT use any key that the query is itself providing.",
      "ja": "TKEYクエリは、GSS-APIと、いくつかの状況下で、サーバ割り当てモードを除くすべてのモードのために認証される必要があります。キーは、このような更新権限として、いくつかの特権を表明するために、サーバに割り当てられたキーのクエリがある場合は特に、クエリは、なりすましを防ぐために認証を受ける必要があります。キーは、トランザクションセキュリティのために使用されるだけである場合は、その後、なりすましは最悪でサービス拒否につながります。可能な場合は、クエリの認証が確立秘密（TSIG）キー認証を使用すべきです。それ以外の場合は、パブリック（SIG（0））キー署名を使用する必要があります。これは、クエリ自体が提供していることを任意のキーを使用してはなりません。"
    },
    {
      "indent": 3,
      "text": "In the absence of required TKEY authentication, a NOTAUTH error MUST be returned.",
      "ja": "必要な処理鍵認証がない場合には、NOTAUTHエラーが返されなければなりません。"
    },
    {
      "indent": 3,
      "text": "To avoid replay attacks, it is necessary that a TKEY response or query not be valid if replayed on the order of 2**32 second (about 136 years), or a multiple thereof, later. To accomplish this, the keying material used in any TSIG or SIG(0) RR that authenticates a TKEY message MUST NOT have a lifetime of more then 2**31 - 1 seconds (about 68 years). Thus, on attempted replay, the authenticating TSIG or SIG(0) RR will not be verifiable due to key expiration and the replay will fail.",
      "ja": "リプレイ攻撃を回避するために、後に、2 ** 32秒（約136年）の順番で再生場合TKEY応答またはクエリが有効でないことが必要である、またはその倍数。 1秒（約68年） - これを実現するために、TKEYのメッセージを認証する任意のTSIGまたはSIG（0）RRで使用される鍵素材をもっとして2 ** 31の寿命を持ってはいけません。このように、未遂リプレイに、認証TSIGまたはSIG（0）RRが原因キーの有効期限に検証されず、再生が失敗します。"
    },
    {
      "indent": 0,
      "text": "4. Exchange via Resolver Query",
      "section_title": true,
      "ja": "リゾルバクエリ経由4.取引所"
    },
    {
      "indent": 3,
      "text": "One method for a resolver and a server to agree about shared secret keying material for use in TSIG is through DNS requests from the resolver which are syntactically DNS queries for type TKEY. Such queries MUST be accompanied by a TKEY RR in the additional information section to indicate the mode in use and accompanied by other information where required.",
      "ja": "リゾルバとTSIGで使用する共有秘密鍵情報について合意するためのサーバーのための一つの方法は、タイプTKEYのための構文上のDNSクエリですリゾルバからのDNSリクエストを介して行われます。このようなクエリは、使用中のモードを示すための追加情報セクションの処理鍵RRを伴う、必要な他の情報を添付しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Type TKEY queries SHOULD NOT be flagged as recursive and servers MAY ignore the recursive header bit in TKEY queries they receive.",
      "ja": "タイプTKEYクエリは、再帰的としてフラグを設定するべきではなく、サーバーは、受信処理鍵クエリで再帰的なヘッダービットを無視するかもしれません。"
    },
    {
      "indent": 0,
      "text": "4.1 Query for Diffie-Hellman Exchanged Keying",
      "section_title": true,
      "ja": "Diffie-Hellmanのための4.1クエリは、キーイングを交わし"
    },
    {
      "indent": 3,
      "text": "Diffie-Hellman (DH) key exchange is a means whereby two parties can derive some shared secret information without requiring any secrecy of the messages they exchange [Schneier]. Provisions have been made for the storage of DH public keys in the DNS [RFC 2539].",
      "ja": "ディフィー・ヘルマン（DH）鍵交換は、二つの当事者が、それらが交換するメッセージ[シュナイアー]のいずれかの秘密を必要とすることなく、いくつかの共有秘密情報を導出することができる手段です。引当金は、DNS [RFC 2539]でDH公開鍵の保管のために作られてきました。"
    },
    {
      "indent": 3,
      "text": "A resolver sends a query for type TKEY accompanied by a TKEY RR in the additional information section specifying the Diffie-Hellman mode and accompanied by a KEY RR also in the additional information section specifying a resolver Diffie-Hellman key. The TKEY RR algorithm field is set to the authentication algorithm the resolver plans to use. The \"key data\" provided in the TKEY is used as a random [RFC 1750] nonce to avoid always deriving the same keying material for the same pair of DH KEYs.",
      "ja": "レゾルバは、レゾルバのDiffie-Hellmanキーを指定する追加情報セクションものDiffie-Hellmanモードを指定し、KEYのRRを伴う付加情報セクションにおける処理鍵RRを伴うタイプTKEYのためのクエリを送信します。 TKEYのRRアルゴリズムフィールドはリゾルバが使用する予定の認証アルゴリズムに設定されています。処理鍵に設けられた「鍵データ」はDH鍵の同一のペアに対して同一の鍵材料を導出常に避けるためにランダム[RFC 1750]ナンスとして使用されます。"
    },
    {
      "indent": 3,
      "text": "The server response contains a TKEY in its answer section with the Diffie-Hellman mode. The \"key data\" provided in this TKEY is used as an additional nonce to avoid always deriving the same keying material for the same pair of DH KEYs. If the TKEY error field is non-zero, the query failed for the reason given. FORMERR is given if the query included no DH KEY and BADKEY is given if the query included an incompatible DH KEY.",
      "ja": "サーバーの応答はのDiffie-Hellmanモードとの回答セクションの処理鍵が含まれています。この処理鍵で提供「キーデータは、」DHキーの同じペアに同じ鍵素材を導出常に避けるために、追加のナンスとして使用されています。処理鍵エラーフィールドがゼロでない場合、クエリが与えられた理由で失敗しました。クエリがDH KEYを含まず、クエリが互換性のないDH KEYが含まれている場合BADKEYが指定されている場合FORMERRが与えられています。"
    },
    {
      "indent": 3,
      "text": "If the TKEY error field is zero, the resolver supplied Diffie-Hellman KEY RR SHOULD be echoed in the additional information section and a server Diffie-Hellman KEY RR will also be present in the answer section of the response. Both parties can then calculate the same shared secret quantity from the pair of Diffie-Hellman (DH) keys used [Schneier] (provided these DH keys use the same generator and modulus) and the data in the TKEY RRs. The TKEY RR data is mixed with the DH result as follows:",
      "ja": "処理鍵エラーフィールドがゼロである場合、リゾルバは、ディフィー・ヘルマン鍵RRは、追加情報セクションにエコーされるべきで供給され、サーバのDiffie-Hellman鍵RRは、応答の解答セクションに存在するであろう。両当事者は、その後、ディフィー・ヘルマン（DH）[シュナイアー（これらDHキーが同一のジェネレータとモジュラスを使用提供される）使用されるキーと処理鍵資源レコードのデータの組から同じ共有秘密量を算出することができます。次のように処理鍵RRデータはDH結果と混合されます。"
    },
    {
      "indent": 6,
      "text": "keying material = XOR ( DH value, MD5 ( query data | DH value ) | MD5 ( server data | DH value ) )",
      "ja": "鍵材料= XOR（DH値、MD5（クエリデータ| DH値）| MD5（サーバ・データ| DH値））"
    },
    {
      "indent": 3,
      "text": "Where XOR is an exclusive-OR operation and \"|\" is byte-stream concatenation. The shorter of the two operands to XOR is byte-wise left justified and padded with zero-valued bytes to match the length of the other operand. \"DH value\" is the Diffie-Hellman value derived from the KEY RRs. Query data and server data are the values sent in the TKEY RR data fields. These \"query data\" and \"server data\" nonces are suffixed by the DH value, digested by MD5, the results concatenated, and then XORed with the DH value.",
      "ja": "XORは、排他的論理和演算であり、ここで、「|」バイトストリーム連結したものです。 XORには2つのオペランドの短い方は、バイト単位の左の他のオペランドの長さに一致するように正当化し、ゼロ値のバイトで埋められます。 「DH値は」KEYのRRに由来のDiffie-Hellman値です。クエリデータとサーバーのデータが処理鍵RRデータフィールドで送信された値です。これらの「クエリデータ」および「サーバデータ」ナンスは、DH値サフィックスMD5で消化し、結果を連結し、[DH値とXORされます。"
    },
    {
      "indent": 3,
      "text": "The inception and expiry times in the query TKEY RR are those requested for the keying material. The inception and expiry times in the response TKEY RR are the maximum period the server will consider the keying material valid. Servers may pre-expire keys so this is not a guarantee.",
      "ja": "クエリ処理鍵資源レコードの開始時刻と有効期限は鍵材料に要求されるものです。応答処理鍵資源レコードの開始時刻と有効期限はサーバがキーイング材料が有効検討する最大時間です。これが保証するものではありませんので、サーバーは鍵を事前に期限切れになることがあります。"
    },
    {
      "indent": 0,
      "text": "4.2 Query for TKEY Deletion",
      "section_title": true,
      "ja": "TKEY削除4.2クエリ"
    },
    {
      "indent": 3,
      "text": "Keys established via TKEY can be treated as soft state. Since DNS transactions are originated by the resolver, the resolver can simply toss keys, although it may have to go through another key exchange if it later needs one. Similarly, the server can discard keys although that will result in an error on receiving a query with a TSIG using the discarded key.",
      "ja": "TKEYを介して確立されたキーがソフト状態として扱うことができます。 DNSトランザクションがリゾルバによって発信されているので、それが後のものを必要とする場合、別の鍵交換を通過する必要がありますが、リゾルバは、単純に、キーを投げることができます。それは廃棄キーを使用してTSIGでクエリを受信するとエラーになりますが、同様に、サーバは、鍵を破棄することができます。"
    },
    {
      "indent": 3,
      "text": "To avoid attempted reliance in requests on keys no longer in effect, servers MUST implement key deletion whereby the server \"discards\" a key on receipt from a resolver of an authenticated delete request for a TKEY RR with the key's name. If the server has no record of a key with that name, it returns BADNAME.",
      "ja": "これにより、サーバ「破棄」効果で、もはやキーのリクエストで未遂依存を避けるために、サーバは、キーの名前を持つTKEYのRRのために認証された削除要求のリゾルバからの領収書のキーをキーの削除を実装しなければなりません。サーバがその名前を持つキーのレコードがない場合、それはBADNAMEを返します。"
    },
    {
      "indent": 3,
      "text": "Key deletion TKEY queries MUST be authenticated. This authentication MAY be a TSIG RR using the key to be deleted.",
      "ja": "キーの削除TKEYクエリが認証される必要があります。この認証は、削除するキーを使用してTSIG RRのかもしれ。"
    },
    {
      "indent": 3,
      "text": "For querier assigned and Diffie-Hellman keys, the server MUST truly \"discard\" all active state associated with the key. For server assigned keys, the server MAY simply mark the key as no longer retained by the client and may re-send it in response to a future query for server assigned keying material.",
      "ja": "割り当てられたクエリアおよびDiffie-Hellman鍵の場合、サーバーは本当にキーに関連付けられたすべてのアクティブな状態を「破棄」しなければなりません。もはやクライアントによって保持されていないと、サーバーに割り当てられキーイング材料の将来のクエリに応答して、それを再送信することができ、サーバに割り当てられたキーの場合、サーバは単にキーにマークを付けることができます。"
    },
    {
      "indent": 0,
      "text": "4.3 Query for GSS-API Establishment",
      "section_title": true,
      "ja": "GSS-APIの確立のための4.3クエリ"
    },
    {
      "indent": 3,
      "text": "This mode is described in a separate document under preparation which should be seen for the full description. Basically the resolver and server can exchange queries and responses for type TKEY with a TKEY RR specifying the GSS-API mode in the additional information section and a GSS-API token in the key data portion of the TKEY RR.",
      "ja": "このモードは完全な説明のために見るべきで調製下別の文書に記載されています。基本的にリゾルバサーバは、付加情報部とTKEY RRの鍵データ部分にGSS-APIトークンにGSS-APIモードを指定処理鍵RRとタイプTKEYのためのクエリおよび応答を交換することができます。"
    },
    {
      "indent": 3,
      "text": "Any issues of possible encryption of parts the GSS-API token data being transmitted are handled by the GSS-API level. In addition, the GSS-API level provides its own authentication so that this mode of TKEY query and response MAY be, but do not need to be, authenticated with TSIG RR or SIG(0) RR [RFC 2931].",
      "ja": "GSS-APIトークンのデータが送信されている部品の可能暗号化のいずれかの問題は、GSS-APIレベルで処理されます。処理鍵クエリ及び応答のこのモードがあってもよく、しかし、TSIGのRRまたはSIG（0）RR [RFC 2931]で認証される必要がないように、また、GSS-APIレベルは、独自の認証を提供します。"
    },
    {
      "indent": 3,
      "text": "The inception and expiry times in a GSS-API mode TKEY RR are ignored.",
      "ja": "GSS-APIモードの処理鍵資源レコードの開始時刻と有効期限は無視されます。"
    },
    {
      "indent": 0,
      "text": "4.4 Query for Server Assigned Keying",
      "section_title": true,
      "ja": "サーバーが割り当てたキーイングのための4.4クエリ"
    },
    {
      "indent": 3,
      "text": "Optionally, the server can assign keying for the resolver. It is sent to the resolver encrypted under a resolver public key. See section 6 for description of encryption methods.",
      "ja": "必要に応じて、サーバは、リゾルバのためにキーイング割り当てることができます。これは、リゾルバの公開鍵で暗号化されたレゾルバに送信されます。暗号化方式の説明については、セクション6を参照してください。"
    },
    {
      "indent": 3,
      "text": "A resolver sends a query for type TKEY accompanied by a TKEY RR specifying the \"server assignment\" mode and a resolver KEY RR to be used in encrypting the response, both in the additional information section. The TKEY algorithm field is set to the authentication algorithm the resolver plans to use. It is RECOMMENDED that any \"key data\" provided in the query TKEY RR by the resolver be strongly mixed by the server with server generated randomness [RFC 1750] to derive the keying material to be used. The KEY RR that appears in the query need not be accompanied by a SIG(KEY) RR. If the query is authenticated by the resolver with a TSIG RR [RFC 2845] or SIG(0) RR and that authentication is verified, then any SIG(KEY) provided in the query SHOULD be ignored. The KEY RR in such a query SHOULD have a name that corresponds to the resolver but it is only essential that it be a public key for which the resolver has the corresponding private key so it can decrypt the response data.",
      "ja": "リゾルバは、付加情報部の両方において、「サーバの割り当て」モードとレゾルバKEY RRを特定する処理鍵RRを伴うタイプTKEYのクエリ応答の暗号化に使用される送信します。処理鍵アルゴリズムフィールドはリゾルバが使用する予定の認証アルゴリズムに設定されています。リゾルバによりクエリ処理鍵RRに設けられた任意の「キーデータ」が強く、使用するキーイングマテリアルを導出するためにサーバ生成された乱数[RFC 1750]と、サーバによって混合することが推奨されます。クエリで表示されるKEY RRはSIG（KEY）RRが付随する必要はありません。クエリがTSIG RR [RFC 2845]またはSIG（0）RRとレゾルバによって認証され、認証が確認された場合、クエリに設けられ、次いで任意SIG（KEY）は無視されるべきです。このような問合せでKEY RRはリゾルバに対応する名前を持つ必要がありますが、それが応答データを復号化できるように、リゾルバは、対応する秘密鍵を持っている公開鍵であることだけが重要です。"
    },
    {
      "indent": 3,
      "text": "The server response contains a TKEY RR in its answer section with the server assigned mode and echoes the KEY RR provided in the query in its additional information section.",
      "ja": "サーバーの応答は、サーバ割り当てモードとその解答セクションのTKEY RRを含んでおり、その追加情報セクションにクエリで提供KEY RRをエコーし​​ます。"
    },
    {
      "indent": 3,
      "text": "If the response TKEY error field is zero, the key data portion of the response TKEY RR will be the server assigned keying data encrypted under the public key in the resolver provided KEY RR. In this case, the owner name of the answer TKEY RR will be the server assigned name of the key.",
      "ja": "応答処理鍵エラーフィールドがゼロである場合、応答処理鍵RRの鍵データ部分は、KEY RRを提供リゾルバ内の公開鍵で暗号化サーバ割り当て鍵データです。この場合、回答TKEY RRの所有者名はキーのサーバーに割り当てられた名前になります。"
    },
    {
      "indent": 3,
      "text": "If the error field of the response TKEY is non-zero, the query failed for the reason given. FORMERR is given if the query specified no encryption key.",
      "ja": "応答処理鍵のエラーフィールドがゼロでない場合、クエリが与えられた理由で失敗しました。クエリが暗号化キーを指定しない場合FORMERRが与えられています。"
    },
    {
      "indent": 3,
      "text": "The inception and expiry times in the query TKEY RR are those requested for the keying material. The inception and expiry times in the response TKEY are the maximum period the server will consider the keying material valid. Servers may pre-expire keys so this is not a guarantee.",
      "ja": "クエリ処理鍵資源レコードの開始時刻と有効期限は鍵材料に要求されるものです。応答のTKEYで開始時刻と有効期限はサーバがキーイング材料が有効検討する最大時間です。これが保証するものではありませんので、サーバーは鍵を事前に期限切れになることがあります。"
    },
    {
      "indent": 3,
      "text": "The resolver KEY RR MUST be authenticated, through the authentication of this query with a TSIG or SIG(0) or the signing of the resolver KEY with a SIG(KEY). Otherwise, an attacker can forge a resolver KEY for which they know the private key, and thereby the attacker could obtain a valid shared secret key from the server.",
      "ja": "レゾルバKEY RRはTSIGまたはSIGこのクエリの認証（0）またはSIG（KEY）とレゾルバ鍵の署名を介して、認証されなければなりません。そうしないと、攻撃者は、彼らが秘密鍵を知っているリゾルバのKEYを偽造することができ、これにより攻撃者がサーバーから有効な共有秘密鍵を得ることができました。"
    },
    {
      "indent": 0,
      "text": "4.5 Query for Resolver Assigned Keying",
      "section_title": true,
      "ja": "リゾルバ割り当てられたキーイングのための4.5クエリ"
    },
    {
      "indent": 3,
      "text": "Optionally, a server can accept resolver assigned keys. The keying material MUST be encrypted under a server key for protection in transmission as described in Section 6.",
      "ja": "必要に応じて、サーバは、リゾルバ割り当てられたキーを受け入れることができます。第6節で説明したように鍵材料は、伝送中の保護のためにサーバ鍵で暗号化されなければなりません。"
    },
    {
      "indent": 3,
      "text": "The resolver sends a TKEY query with a TKEY RR that specifies the encrypted keying material and a KEY RR specifying the server public key used to encrypt the data, both in the additional information section. The name of the key and the keying data are completely controlled by the sending resolver so a globally unique key name SHOULD be used. The KEY RR used MUST be one for which the server has the corresponding private key, or it will not be able to decrypt the keying material and will return a FORMERR. It is also important that no untrusted party (preferably no other party than the server) has the private key corresponding to the KEY RR because, if they do, they can capture the messages to the server, learn the shared secret, and spoof valid TSIGs.",
      "ja": "リゾルバは、追加情報セクションの両方で、暗号化鍵材料とデータを暗号化するために使用されるサーバーの公開鍵を指定するKEY RRを指定するTKEYのRRとTKEYクエリを送信します。キーとキーのデータの名前が完全にそうグローバルに一意のキー名を使用すべき送信リゾルバによって制御されています。使用KEY RRは、サーバが対応する秘密鍵を持っている1でなければならない、または鍵を解読することはできませんとFORMERRを返します。彼らがしなければ、彼らは、サーバーにメッセージをキャプチャし、共有秘密を学び、そして有効なTSIGsを偽造することができ、ので、全く信頼できないパーティ（サーバー以外好ましくは相手が）KEY RRに対応する秘密鍵を持っていないことも重要です。"
    },
    {
      "indent": 3,
      "text": "The query TKEY RR inception and expiry give the time period the querier intends to consider the keying material valid. The server can return a lesser time interval to advise that it will not maintain state for that long and can pre-expire keys in any case.",
      "ja": "クエリ処理鍵RRの開始と有効期限は、クエリアがキーイング材料が有効検討する意向期間を与えます。サーバは、それが長いために状態を維持しないであろうと、どのような場合に鍵を事前に期限切れになることを助言するあまり時間間隔を返すことができます。"
    },
    {
      "indent": 3,
      "text": "This mode of query MUST be authenticated with a TSIG or SIG(0). Otherwise, an attacker can forge a resolver assigned TKEY query, and thereby the attacker could specify a shared secret key that would be accepted, used, and honored by the server.",
      "ja": "クエリのこのモードは、TSIGまたはSIG（0）で認証されなければなりません。そうしないと、攻撃者は、リゾルバ割り当てられた処理鍵の問合せを偽造することができ、これにより攻撃者は、受け入れ使用、およびサーバによって名誉を与えられる共有秘密鍵を指定することができます。"
    },
    {
      "indent": 0,
      "text": "5. Spontaneous Server Inclusion",
      "section_title": true,
      "ja": "5.自発的なサーバーのインクルージョン"
    },
    {
      "indent": 3,
      "text": "A DNS server may include a TKEY RR spontaneously as additional information in responses. This SHOULD only be done if the server knows the querier understands TKEY and has this option implemented. This technique can be used to delete a key and may be specified for modes defined in the future. A disadvantage of this technique is that there is no way for the server to get any error or success indication back and, in the case of UDP, no way to even know if the DNS response reached the resolver.",
      "ja": "DNSサーバは、応答に付加情報として自発的にTKEY RRを含んでもよいです。サーバがクエリアがTKEYを理解し、実装し、このオプションを持って知っている場合にのみ行われるべきです。この技術は、キーを削除するために使用することができ、将来的に定義されたモードのために指定することができます。この技術の欠点は、サーバがエラーや成功の裏適応症と、UDPの場合は、DNS応答がリゾルバに達した場合でも知る方法を取得するための方法がないということです。"
    },
    {
      "indent": 0,
      "text": "5.1 Spontaneous Server Key Deletion",
      "section_title": true,
      "ja": "5.1自発的なサーバキーの削除"
    },
    {
      "indent": 3,
      "text": "A server can optionally tell a client that it has deleted a secret key by spontaneously including a TKEY RR in the additional information section of a response with the key's name and specifying the key deletion mode. Such a response SHOULD be authenticated. If authenticated, it \"deletes\" the key with the given name. The inception and expiry times of the delete TKEY RR are ignored. Failure by a client to receive or properly process such additional information in a response would mean that the client might use a key that the server had discarded and would then get an error indication.",
      "ja": "サーバは、必要に応じて、それが自然に、キーの名前を持つ応答の追加情報セクションでTKEY RRを含め、キーの削除モードを指定することで、秘密鍵を削除したことをクライアントに伝えることができます。このような応答は認証される必要があります。認証された場合は、指定された名前のキーを「削除します」。削除TKEY RRの開始時刻と有効期限は無視されます。応じて、このような追加の情報を受信したり、適切に処理するためにクライアントが失敗すると、クライアントはサーバーが廃棄されていたことを、キーを使用するかもしれないし、エラー表示になるだろうことを意味します。"
    },
    {
      "indent": 3,
      "text": "For server assigned and Diffie-Hellman keys, the client MUST \"discard\" active state associated with the key. For querier assigned keys, the querier MAY simply mark the key as no longer retained by the server and may re-send it in a future query specifying querier assigned keying material.",
      "ja": "割り当てられたサーバーとのDiffie-Hellman鍵の場合、クライアントは、キーに関連付けられたアクティブな状態を「破棄」しなければなりません。クエリア割り当てられたキーの場合、クエリアは、もはやサーバーによって保持されず、クエリア割り当てられた鍵材料を指定して、将来のクエリでそれを再送信することとしてキーをマークするだけかもしれません。"
    },
    {
      "indent": 0,
      "text": "6. Methods of Encryption",
      "section_title": true,
      "ja": "暗号化の方法6。"
    },
    {
      "indent": 3,
      "text": "For the server assigned and resolver assigned key agreement modes, the keying material is sent within the key data field of a TKEY RR encrypted under the public key in an accompanying KEY RR [RFC 2535]. This KEY RR MUST be for a public key algorithm where the public and private keys can be used for encryption and the corresponding decryption which recovers the originally encrypted data. The KEY RR SHOULD correspond to a name for the decrypting resolver/server such that the decrypting process has access to the corresponding private key to decrypt the data. The secret keying material being sent will generally be fairly short, usually less than 256 bits, because that is adequate for very strong protection with modern keyed hash or symmetric algorithms.",
      "ja": "鍵合意モードを割り当てる割り当てサーバとリゾルバのために、鍵材料は、添付の凡例RR [RFC 2535]で公開鍵で暗号化処理鍵RRの鍵データフィールド内で送信されます。このKEY RRは、公開鍵と秘密鍵を暗号化し、本来は暗号化されたデータを復元し、対応する復号化に使用することができ、公開鍵アルゴリズムのためでなければなりません。 KEY RRは復号処理は、データを復号化する対応する秘密鍵へのアクセスを有するように復号化レゾルバ/サーバの名前に対応しなければなりません。それは現代の鍵付きハッシュまたは対称アルゴリズムと非常に強力な保護のために適切であるため、送信されている秘密鍵情報は、一般的に、通常より少ない256ビットかなり短くなります。"
    },
    {
      "indent": 3,
      "text": "If the KEY RR specifies the RSA algorithm, then the keying material is encrypted as per the description of RSAES-PKCS1-v1_5 encryption in PKCS#1 [RFC 2437]. (Note, the secret keying material being sent is directly RSA encrypted in PKCS#1 format. It is not \"enveloped\" under some other symmetric algorithm.) In the unlikely event that the keying material will not fit within one RSA modulus of the chosen public key, additional RSA encryption blocks are included. The length of each block is clear from the public RSA key specified and the RSAES-PKCS1-v1_5 padding makes it clear what part of the encrypted data is actually keying material and what part is formatting or the required at least eight bytes of random [RFC 1750] padding.",
      "ja": "KEY RRがRSAアルゴリズムを指定する場合、鍵材料は、PKCS＃1 [RFC 2437]でRSAES-PKCS1-v1_5の暗号化の説明に従って暗号化されています。 （注、送信されている秘密鍵情報は、直接RSAは、PKCS＃1形式で暗号化されている。それは、他のいくつかの対称アルゴリズムの下に「包ま」されていません。）万一の鍵材料が選ばれたの1つのRSAモジュラス内に収まらないことを公開鍵は、追加のRSA暗号化ブロックが含まれています。各ブロックの長さは、指定されたRSA公開鍵から明らかであるとRSAES-PKCS1-v1_5のパディングが実際に材料キーイングされているもの、暗号化されたデータの一部が明らかになり、どのような部分は書式又はランダム[RFCの少なくとも8つのバイトを必要とされます1750]パディング。"
    },
    {
      "indent": 0,
      "text": "7. IANA Considerations",
      "section_title": true,
      "ja": "7. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "This section is to be interpreted as provided in [RFC 2434].",
      "ja": "このセクションでは、[RFC 2434]に提供されるように解釈されるべきです。"
    },
    {
      "indent": 3,
      "text": "Mode field values 0x0000 and 0xFFFF are reserved.",
      "ja": "Modeフィールドの値は0x0000と0xFFFFでは予約されています。"
    },
    {
      "indent": 3,
      "text": "Mode field values 0x0001 through 0x00FF, and 0XFF00 through 0XFFFE can only be assigned by an IETF Standards Action.",
      "ja": "Modeフィールドは0x00FFに通過0x0001の値、および0xFFFEという通じは0xFF00はIETF標準化行動によって割り当てることができます。"
    },
    {
      "indent": 3,
      "text": "Mode field values 0x0100 through 0x0FFF and 0xF0000 through 0xFEFF are allocated by IESG approval or IETF consensus.",
      "ja": "0xFEFFスルー0x0FFFと0xF0000スルーモードフィールドの値は0x0100がIESG承認またはIETFコンセンサスによって割り当てられます。"
    },
    {
      "indent": 3,
      "text": "Mode field values 0x1000 through 0xEFFF are allocated based on Specification Required as defined in [RFC 2434].",
      "ja": "[RFC 2434]で定義されるようにモードフィールド値は0xEFFF介して0x1000番地は、仕様が必要に基づいて割り当てられます。"
    },
    {
      "indent": 3,
      "text": "Mode values should not be changed when the status of their use changes. For example, a mode value assigned based just on providing a specification should not be changed later just because that use's status is changed to standards track.",
      "ja": "モードの値は変更すべきではないとき、その使用の状況が変化します。その利用者の状況が基準トラックに変更されたという理由だけで例えば、単に仕様を提供することに基づいて、割り当てられたモード値は後で変更すべきではありません。"
    },
    {
      "indent": 3,
      "text": "The following assignments are documented herein:",
      "ja": "以下の割り当ては、本明細書に記載されています："
    },
    {
      "indent": 6,
      "text": "RR Type 249 for TKEY.",
      "ja": "RR TKEYのために249を入力します。"
    },
    {
      "indent": 6,
      "text": "TKEY Modes 1 through 5 as listed in section 2.5.",
      "ja": "TKEYモード1〜5のセクション2.5に記載されています。"
    },
    {
      "indent": 6,
      "text": "Extended RCODE Error values of 19, 20, and 21 as listed in section 2.6.",
      "ja": "セクション2.6に記載されている19、20、及び21のRCODEエラー値を拡張しました。"
    },
    {
      "indent": 0,
      "text": "8. Security Considerations",
      "section_title": true,
      "ja": "8.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "The entirety of this specification is concerned with the secure establishment of a shared secret between DNS clients and servers in support of TSIG [RFC 2845].",
      "ja": "この仕様の全体は、TSIG [RFC 2845]のサポートでDNSクライアントとサーバ間の共有秘密を安全に確立すると懸念しています。"
    },
    {
      "indent": 3,
      "text": "Protection against denial of service via the use of TKEY is not provided.",
      "ja": "処理鍵の使用を介したサービス拒否に対する保護が提供されていません。"
    },
    {
      "indent": 0,
      "text": "References",
      "ja": "リファレンス"
    },
    {
      "indent": 3,
      "text": "[Schneier] Bruce Schneier, \"Applied Cryptography: Protocols, Algorithms, and Source Code in C\", 1996, John Wiley and Sons",
      "ja": "[シュナイアー]ブルース・シュナイアー、「応用暗号：プロトコル、アルゴリズム、およびソースコードCの」1996年、ジョン・ワイリー・アンド・サンズ"
    },
    {
      "indent": 3,
      "text": "[RFC 1034] Mockapetris, P., \"Domain Names - Concepts and Facilities\", STD 13, RFC 1034, November 1987.",
      "ja": "[RFC 1034] Mockapetris、P.、 \"ドメイン名 - 概念および機能\"、STD 13、RFC 1034、1987年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC 1035] Mockapetris, P., \"Domain Names - Implementation and Specifications\", STD 13, RFC 1035, November 1987.",
      "ja": "[RFC 1035] Mockapetris、P.、 \"ドメイン名 - 実装と仕様\"、STD 13、RFC 1035、1987年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC 1750] Eastlake, D., Crocker, S. and J. Schiller, \"Randomness Recommendations for Security\", RFC 1750, December 1994.",
      "ja": "[RFC 1750]イーストレイク、D.、クロッカー、S.とJ.シラー、 \"セキュリティのためのランダム性に関する推奨事項\"、RFC 1750、1994年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC 1982] Elz, R. and R. Bush, \"Serial Number Arithmetic\", RFC 1982, September 1996.",
      "ja": "[RFC 1982]エルツ、R.とR.ブッシュ大統領、 \"シリアル番号演算\"、RFC 1982、1996年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC 1995] Ohta, M., \"Incremental Zone Transfer in DNS\", RFC 1995, August 1996.",
      "ja": "[RFC 1995]太田、M.、 \"DNSにおける増分ゾーン転送\"、RFC 1995、1996年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC 2030] Mills, D., \"Simple Network Time Protocol (SNTP) Version 4 for IPv4, IPv6 and OSI\", RFC 2030, October 1996.",
      "ja": "[RFC 2030]ミルズ、D.、 \"IPv4、IPv6、およびOSIのため簡易ネットワークタイムプロトコル（SNTP）バージョン4\"、RFC 2030、1996年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC 2104] Krawczyk, H., Bellare, M. and R. Canetti, \"HMAC: Keyed-Hashing for Message Authentication\", RFC 2104, February 1997.",
      "ja": "[RFC 2104] Krawczyk、H.、ベラー、M。およびR.カネッティ、 \"HMAC：メッセージ認証のための鍵付きハッシュ化\"、RFC 2104、1997年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC 2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC 2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC 2136] Vixie, P., Thomson, S., Rekhter, Y. and J. Bound, \"Dynamic Updates in the Domain Name System (DNS UPDATE)\", RFC 2136, April 1997.",
      "ja": "[RFC 2136]いるVixie、P.、トムソン、S.、Rekhter、Y.、およびJ.はバウンド、 \"ドメインネームシステムにおける動的更新（DNS更新）\"、RFC 2136、1997年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC 2434] Narten, T. and H. Alvestrand, \"Guidelines for Writing an IANA Considerations Section in RFCs\", BCP 26, RFC 2434, October 1998.",
      "ja": "[RFC 2434] Narten氏、T.とH. Alvestrand、 \"RFCsにIANA問題部に書くためのガイドライン\"、BCP 26、RFC 2434、1998年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC 2437] Kaliski, B. and J. Staddon, \"PKCS #1: RSA Cryptography Specifications Version 2.0\", RFC 2437, October 1998.",
      "ja": "[RFC 2437] Kaliski、B.及びJ. Staddon、 \"PKCS＃1：RSA暗号仕様バージョン2.0\"、RFC 2437、1998年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC 2535] Eastlake, D., \"Domain Name System Security Extensions\", RFC 2535, March 1999.",
      "ja": "[RFC 2535]イーストレイク、D.、 \"ドメインネームシステムのセキュリティ拡張機能\"、RFC 2535、1999年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC 2539] Eastlake, D., \"Storage of Diffie-Hellman Keys in the Domain Name System (DNS)\", RFC 2539, March 1999.",
      "ja": "[RFC 2539]イーストレイク、D.、RFC 2539 \"ドメインネームシステム（DNS）でのDiffie-Hellmanの鍵の保管\"、1999年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC 2845] Vixie, P., Gudmundsson, O., Eastlake, D. and B. Wellington, \"Secret Key Transaction Authentication for DNS (TSIG)\", RFC 2845, May 2000.",
      "ja": "[RFC 2845]いるVixie、P.、グドムンソン、O.、イーストレイク、D.とB.ウェリントン、 \"DNSのための秘密鍵トランザクション認証（TSIG）\"、RFC 2845、2000年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC 2931] Eastlake, D., \"DNS Request and Transaction Signatures (SIG(0)s )\", RFC 2931, September 2000.",
      "ja": "[RFC 2931]イーストレイク、D.、 \"DNS要求とトランザクション署名（SIG（0）S）\"、RFC 2931、2000年9月。"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Donald E. Eastlake 3rd Motorola 140 Forest Avenue Hudson, MA 01749 USA",
      "ja": "ドナルドE.イーストレーク第3モトローラ140森アベニューハドソン、MA 01749 USA"
    },
    {
      "indent": 3,
      "text": "Phone: +1 978-562-2827 (h) +1 508-261-5434 (w) Fax: +1 508-261-4447 (w) EMail: Donald.Eastlake@motorola.com",
      "ja": "電話：+1 978-562-2827（H）+1 508-261-5434（W）FAX番号：+1 508-261-4447（W）メール：Donald.Eastlake@motorola.com"
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2000). All Rights Reserved.",
      "ja": "著作権（C）インターネット協会（2000）。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the Internet Society or other Internet organizations, except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed, or as required to translate it into languages other than English.",
      "ja": "この文書とその翻訳は、コピーして他の人に提供し、それ以外についてはコメントまたは派生物は、いかなる種類の制限もなく、全体的にまたは部分的に、準備コピーし、公表して配布することができることを説明したり、その実装を支援することができます、上記の著作権表示とこの段落は、すべてのそのようなコピーや派生物に含まれていることを条件とします。しかし、この文書自体は著作権のための手順はで定義されている場合には、インターネット標準を開発するために必要なものを除き、インターネットソサエティもしくは他のインターネット関連団体に著作権情報や参照を取り除くなど、どのような方法で変更されないかもしれませんインターネット標準化プロセスが続く、または英語以外の言語に翻訳するために、必要に応じなければなりません。"
    },
    {
      "indent": 3,
      "text": "The limited permissions granted above are perpetual and will not be revoked by the Internet Society or its successors or assigns.",
      "ja": "上記の制限は永久で、インターネット学会やその後継者や譲渡者によって取り消されることはありません。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein is provided on an \"AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書とここに含まれている情報は、基礎とインターネットソサエティおよびインターネットエンジニアリングタスクフォースはすべての保証を否認し、明示または黙示、その情報の利用がない任意の保証を含むがこれらに限定されない「として、」上に設けられています特定の目的への権利または商品性または適合性の黙示の保証を侵害します。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "了承"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "ja": "RFC Editor機能のための基金は現在、インターネット協会によって提供されます。"
    }
  ]
}