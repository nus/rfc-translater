{
  "title": {
    "text": "RFC 2433 - Microsoft PPP CHAP Extensions",
    "ja": "RFC 2433 - マイクロソフトPPP CHAP拡張"
  },
  "number": 2433,
  "created_at": "2019-10-24 13:56:43.957103+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                            G. Zorn\nRequest for Comments: 2433                                       S. Cobb\nCategory: Informational                            Microsoft Corporation\n                                                            October 1998",
      "raw": true
    },
    {
      "indent": 21,
      "text": "Microsoft PPP CHAP Extensions",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "このメモの位置付け"
    },
    {
      "indent": 3,
      "text": "This memo provides information for the Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited.",
      "ja": "このメモはインターネットコミュニティのための情報を提供します。それはどんな種類のインターネット標準を指定しません。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (1998). All Rights Reserved.",
      "ja": "著作権（C）インターネット協会（1998）。全著作権所有。"
    },
    {
      "indent": 0,
      "text": "IESG Note",
      "ja": "IESG注意"
    },
    {
      "indent": 3,
      "text": "The protocol described here has significant vulnerabilities. People planning on implementing or using this protocol should read section 12, \"Security Considerations\".",
      "ja": "ここで説明するプロトコルは、重大な脆弱性があります。このプロトコルを実装するか、使用して計画の人々は、セクション12、「セキュリティの考慮事項」をお読みください。"
    },
    {
      "indent": 0,
      "text": "1. Abstract",
      "section_title": true,
      "ja": "1.要約"
    },
    {
      "indent": 3,
      "text": "The Point-to-Point Protocol (PPP) [1] provides a standard method for transporting multi-protocol datagrams over point-to-point links. PPP defines an extensible Link Control Protocol and a family of Network Control Protocols (NCPs) for establishing and configuring different network-layer protocols.",
      "ja": "ポイントツーポイントプロトコル（PPP）[1]は、ポイントツーポイントリンク上でマルチプロトコルデータグラムを輸送するための標準的な方法を提供します。 PPPは、拡張リンク制御プロトコルと異なるネットワーク層プロトコルを確立し、構成するためのネットワーク制御プロトコル（NCP）のファミリを定義します。"
    },
    {
      "indent": 3,
      "text": "This document describes Microsoft's PPP CHAP dialect (MS-CHAP), which extends the user authentication functionality provided on Windows networks to remote workstations. MS-CHAP is closely derived from the PPP Challenge Handshake Authentication Protocol described in RFC 1994 [2], which the reader should have at hand.",
      "ja": "この文書は、リモートワークステーションにWindowsネットワーク上で提供されたユーザー認証機能を拡張し、マイクロソフトのPPP CHAP方言（MS-CHAP）を、説明しています。 MS-CHAPは密接PPPチャレンジハンドシェイク認証プロトコルに由来するリーダーが手に持っているはずである、[2] RFC 1994に記載。"
    },
    {
      "indent": 3,
      "text": "The algorithms used in the generation of various MS-CHAP protocol fields are described in an appendix.",
      "ja": "種々のMS-CHAPプロトコルフィールドの生成に使用されるアルゴリズムは、付録に記載されています。"
    },
    {
      "indent": 0,
      "text": "2. Introduction",
      "section_title": true,
      "ja": "2.はじめに"
    },
    {
      "indent": 3,
      "text": "Microsoft created MS-CHAP to authenticate remote Windows workstations, providing the functionality to which LAN-based users are accustomed while integrating the encryption and hashing algorithms used on Windows networks.",
      "ja": "Microsoftは、暗号化を統合し、Windowsネットワーク上で使用されるハッシュアルゴリズムながら、LANベースのユーザーが慣れている先の機能を提供する、リモートのWindowsワークステーションを認証するために、MS-CHAPを作成しました。"
    },
    {
      "indent": 3,
      "text": "Where possible, MS-CHAP is consistent with standard CHAP. Briefly, the differences between MS-CHAP and standard CHAP are:",
      "ja": "可能であれば、MS-CHAPは、標準のCHAPと一致しています。簡単に言えば、MS-CHAPと標準のCHAPの違いは以下のとおりです。"
    },
    {
      "indent": 6,
      "text": "* MS-CHAP is enabled by negotiating CHAP Algorithm 0x80 in LCP option 3, Authentication Protocol.",
      "ja": "* MS-CHAPは、LCPオプション3、認証プロトコルでCHAPアルゴリズムは0x80を交渉することによって有効になります。"
    },
    {
      "indent": 6,
      "text": "* The MS-CHAP Response packet is in a format designed for compatibility with Microsoft's Windows NT 3.5, 3.51 and 4.0, and Windows95 networking products. The MS-CHAP format does not require the authenticator to store a clear-text or reversibly encrypted password.",
      "ja": "* MS-CHAP Responseパケットは、MicrosoftのWindows NT 3.5、3.51および4.0、およびWindows95のネットワーク製品との互換性のために設計されたフォーマットです。 MS-CHAP形式では、クリアテキストまたは可逆暗号化されたパスワードを保存するために、認証を必要としません。"
    },
    {
      "indent": 6,
      "text": "* MS-CHAP provides authenticator-controlled authentication retry and password changing mechanisms.",
      "ja": "* MS-CHAPは、認証制御の認証試行とパスワード変更のメカニズムを提供します。"
    },
    {
      "indent": 6,
      "text": "* MS-CHAP defines a set of reason-for-failure codes returned in the Failure packet Message field.",
      "ja": "* MS-CHAP失敗パケットメッセージフィールドに返さ理由-FOR-故障コードのセットを定義します。"
    },
    {
      "indent": 0,
      "text": "3. Specification of Requirements",
      "section_title": true,
      "ja": "要件の3仕様"
    },
    {
      "indent": 3,
      "text": "In this document, the key words \"MAY\", \"MUST, \"MUST NOT\", \"optional\", \"recommended\", \"SHOULD\", and \"SHOULD NOT\" are to be interpreted as described in [2].",
      "ja": "この文書に記載されている、キーワード \"MAY\"、「MUST、 \"MUST NOT\"、 \"オプション\"、 \"推奨\"、 \"SHOULD\"、および \"the\" [2]で説明されるように解釈されるべきではありません。"
    },
    {
      "indent": 0,
      "text": "4. LCP Configuration",
      "section_title": true,
      "ja": "4. LCP設定"
    },
    {
      "indent": 3,
      "text": "The LCP configuration for MS-CHAP is identical to that for standard CHAP, except that the Algorithm field has value 0x80, rather than the MD5 value 0x05. PPP implementations which do not support MS-CHAP, but correctly implement LCP Config-Rej, should have no problem dealing with this non-standard option.",
      "ja": "MS-CHAPのためのLCP構成は、アルゴリズムフィールドではなくMD5値0x05のよりも、値は0x80を有していることを除いて、標準のCHAPの場合と同じです。 MS-CHAPをサポートしていますが、正しくLCPコンフィグ-レジを実装していないPPP実装は、この非標準オプションを扱う問題はないはずです。"
    },
    {
      "indent": 0,
      "text": "5. Challenge Packet",
      "section_title": true,
      "ja": "5.チャレンジパケット"
    },
    {
      "indent": 3,
      "text": "The MS-CHAP Challenge packet is identical in format to the standard CHAP Challenge packet.",
      "ja": "MS-CHAPチャレンジパケットは、標準的なCHAPチャレンジパケットのフォーマットと同一です。"
    },
    {
      "indent": 3,
      "text": "MS-CHAP authenticators send an 8-octet challenge Value field. Peers need not duplicate Microsoft's algorithm for selecting the 8-octet value, but the standard guidelines on randomness [1,2,7] SHOULD be observed.",
      "ja": "MS-CHAPオーセンティケータは、8オクテットチャレンジ値フィールドを送信します。ピアは8オクテットの値を選択するためのMicrosoftのアルゴリズムを複製する必要はないが、ランダム[1,2,7]上の標準的なガイドラインが観察されなければなりません。"
    },
    {
      "indent": 3,
      "text": "Microsoft authenticators do not currently provide information in the Name field. This may change in the future.",
      "ja": "マイクロソフトオーセンティケータは、現在、[名前]フィールドに情報を提供していません。これは、将来的に変更されることがあります。"
    },
    {
      "indent": 0,
      "text": "6. Response Packet",
      "section_title": true,
      "ja": "6.応答パケット"
    },
    {
      "indent": 3,
      "text": "The MS-CHAP Response packet is identical in format to the standard CHAP Response packet. However, the Value field is sub-formatted differently as follows:",
      "ja": "MS-CHAP応答パケットが標準CHAP応答パケットのフォーマットと同一です。ただし、値フィールドは、以下の異なったように、サブフォーマットされます。"
    },
    {
      "indent": 6,
      "text": "24 octets: LAN Manager compatible challenge response 24 octets: Windows NT compatible challenge response 1 octet : \"Use Windows NT compatible challenge response\" flag",
      "ja": "24オクテット：LAN Managerの互換性のあるチャレンジレスポンス24オクテット：のWindows NT互換性のあるチャレンジレスポンス1つのオクテット：「使用のWindows NT互換の挑戦応答」フラグ"
    },
    {
      "indent": 3,
      "text": "The LAN Manager compatible challenge response is an encoded function of the password and the received challenge as output by the routine LmChallengeResponse() (see section A.1, below). LAN Manager passwords are limited to 14 case-insensitive OEM characters. Note that use of the LAN Manager compatible challenge response has been deprecated; peers SHOULD NOT generate it, and the sub-field SHOULD be zero-filled. The algorithm used in the generation of the LAN Manager compatible challenge response is described here for informational purposes only.",
      "ja": "LANマネージャコンパチブルチャレンジレスポンスは、（）（以下、セクションA.1を参照）パスワードの符号化機能及びルーチンLmChallengeResponseによる出力として受信したチャレンジです。 LAN Managerのパスワードは14大文字と小文字を区別しないOEM文字に制限されています。 LAN Managerの互換性のあるチャレンジレスポンスの使用が推奨されていません注意してください。ピアは、それを生成しません。また、サブフィールドはゼロで埋めであるべきです。 LAN Managerの互換性のあるチャレンジレスポンスの生成に使用されるアルゴリズムは、情報提供のみを目的としてここに記載されています。"
    },
    {
      "indent": 3,
      "text": "The Windows NT compatible challenge response is an encoded function of the password and the received challenge as output by the routine NTChallengeResponse() (see section A.5, below). The Windows NT password is a string of 0 to (theoretically) 256 case-sensitive Unicode [8] characters. Current versions of Windows NT limit passwords to 14 characters, mainly for compatibility reasons; this may change in the future.",
      "ja": "Windows NTの互換性のチャレンジレスポンスは、（）（以下、セクションA.5を参照）、パスワードのエンコード機能と日常NTChallengeResponseによって出力として受信したチャレンジです。 Windows NTのパスワードは（理論的に）256大文字と小文字を区別ユニコード[8]文字0の文字列です。主に互換性の理由のために、14文字までのWindows NT制限のパスワードの現在のバージョン、。これは将来的に変更されることがあります。"
    },
    {
      "indent": 3,
      "text": "The \"use Windows NT compatible challenge response\" flag, if 1, indicates that the Windows NT response is provided and should be used in preference to the LAN Manager response. The LAN Manager response will still be used if the account does not have a Windows NT password hash, e.g. if the password has not been changed since the account was uploaded from a LAN Manager 2.x account database. If the flag is 0, the Windows NT response is ignored and the LAN Manager response is used. Since the use of LAN Manager authentication has been deprecated, this flag SHOULD always be set (1) and the LAN Manager compatible challenge response field SHOULD be zero-filled.",
      "ja": "1場合は、フラグの「Windows NT互換性のあるチャレンジレスポンスを使用する」、Windows NTの応答が提供され、LAN Managerの応答に優先して使用する必要があることを示します。アカウントは、例えば、Windows NTのパスワードのハッシュを持っていない場合、LAN Managerの応答がまだ使用されますアカウントがLANマネージャ2.xのアカウントデータベースからアップロードされたので、パスワードが変更されていない場合。フラグが0である場合は、Windows NTの応答は無視され、LAN Managerの応答が使用されています。 LAN Manager認証の使用は推奨されているので、このフラグは常に（1）に設定されるべきであり、LANマネージャコンパチブルチャレンジレスポンスフィールドはゼロ充填であるべきです。"
    },
    {
      "indent": 3,
      "text": "The Name field identifies the peer's user account name. The Windows NT domain name may prefix the user's account name (e.g. \"BIGCO\\johndoe\" where \"BIGCO\" is a Windows NT domain containing the user account \"john-doe\"). If a domain is not provided, the backslash should also be omitted, (e.g. \"johndoe\").",
      "ja": "[名前]フィールドには、ピアのユーザーアカウント名を識別します。 Windows NTドメイン名は、ユーザーのアカウント名（「BIGCOは、」ユーザーアカウント「JOHNDOE」を含むWindows NTドメインである、例えば「BIGCO \\ JOHNDOEを」）の接頭辞があります。ドメインが提供されていない場合、バックスラッシュは、（例えば、「JOHNDOE」）、省略すべきです。"
    },
    {
      "indent": 0,
      "text": "7. Success Packet",
      "section_title": true,
      "ja": "7.成功パケット"
    },
    {
      "indent": 3,
      "text": "The Success packet is identical in format to the standard CHAP Success packet.",
      "ja": "Successパケットは、標準のCHAP成功パケットにフォーマットと同一です。"
    },
    {
      "indent": 0,
      "text": "8. Failure Packet",
      "section_title": true,
      "ja": "8.失敗パケット"
    },
    {
      "indent": 3,
      "text": "The Failure packet is identical in format to the standard CHAP Failure packet. There is, however, formatted text stored in the Message field which, contrary to the standard CHAP rules, affects the protocol. The Message field format is:",
      "ja": "失敗パケットは、標準のCHAP失敗パケットのフォーマットと同一です。 、プロトコルに影響を与え、標準のCHAPのルールに反して、メッセージフィールドに格納されている、しかし、フォーマットされたテキストがあります。メッセージフィールドの形式は次のとおりです。"
    },
    {
      "indent": 9,
      "text": "\"E=eeeeeeeeee R=r C=cccccccccccccccc V=vvvvvvvvvv\"",
      "ja": "\"E = eeeeeeeeee R = R C = cccccccccccccccc V = vvvvvvvvvv\""
    },
    {
      "indent": 6,
      "text": "where",
      "ja": "どこ"
    },
    {
      "indent": 9,
      "text": "The \"eeeeeeeeee\" is the decimal error code (need not be 10 digits) corresponding to one of those listed below, though implementations should deal with codes not on this list gracefully.",
      "ja": "実装が正常にこのリストに載っていないコードを扱うべきであるのに「eeeeeeeeee」は、以下に列挙したもののうちの1つに対応する10進数のエラーコード（10桁である必要はない）です。"
    },
    {
      "indent": 12,
      "text": "646 ERROR_RESTRICTED_LOGON_HOURS 647 ERROR_ACCT_DISABLED 648 ERROR_PASSWD_EXPIRED 649 ERROR_NO_DIALIN_PERMISSION 691 ERROR_AUTHENTICATION_FAILURE 709 ERROR_CHANGING_PASSWORD",
      "ja": "646 ERROR_RESTRICTED_LOGON_HOURS 647 ERROR_ACCT_DISABLED 648 ERROR_PASSWD_EXPIRED 649 ERROR_NO_DIALIN_PERMISSION 691 ERROR_AUTHENTICATION_FAILURE 709 ERROR_CHANGING_PASSWORD"
    },
    {
      "indent": 9,
      "text": "The \"r\" is a flag set to \"1\" if a retry is allowed, and \"0\" if not. When the authenticator sets this flag to \"1\" it disables short timeouts, expecting the peer to prompt the user for new credentials and resubmit the response.",
      "ja": "「R」は再試行が許可されている場合、「1」、「0」でない場合に設定するフラグです。オーセンティケータは、このフラグを設定すると、「1」、それは新しい資格情報をユーザーに要求し、応答を再送信するためにピアを期待して、短いタイムアウトを無効にします。"
    },
    {
      "indent": 9,
      "text": "The \"cccccccccccccccc\" is 16 hexadecimal digits representing an ASCII representation of a new challenge value. This field is optional. If it is not sent, the authenticator expects the resubmitted response to be calculated based on the previous challenge value plus decimal 23 in the first octet, i.e. the one immediately following the Value Size field. Windows 95 authenticators may send this field. Windows NT authenticators do not, but may in the future. Both systems implement peer support of this field.",
      "ja": "「ccccccccccccccccは、」新たな挑戦値のASCII表現を表す16桁の16進数です。このフィールドはオプションです。それが送信されない場合は、オーセンティケータは再提出応答がすなわちすぐに値Sizeフィールドに続く1、前回のチャレンジ値に基づいてプラス最初のオクテットの23進計算することを期待しています。 Windows 95のオーセンティケータは、このフィールドを送信することができます。 Windows NTのオーセンティケータはありませんが、将来的にしてもよいです。両方のシステムは、この分野のピア・サポートを実装します。"
    },
    {
      "indent": 9,
      "text": "The \"vvvvvvvvvv\" is the decimal version code (need not be 10 digits) indicating the MS-CHAP protocol version supported on the server. Currently, this is interesting only in selecting a Change Password packet type. If the field is not present the version should be assumed to be 1; since use of the version 1",
      "ja": "「vvvvvvvvvv」は、サーバ上でサポートMS-CHAPプロトコルバージョンを示す小数点バージョンのコード（10桁である必要はない）です。現時点では、これが唯一のパスワードの変更、パケットの種類を選択して面白いです。フィールドが存在しない場合はバージョンが1であると想定されるべきです。バージョン1の使用以来、"
    },
    {
      "indent": 9,
      "text": "Change Password packet has been deprecated, this field SHOULD always contain a value greater than or equal to 2.",
      "ja": "パスワードの変更パケットは、このフィールドは常に2以上の値が含まれているべきで、廃止されました。"
    },
    {
      "indent": 3,
      "text": "Implementations should accept but ignore additional text they do not recognize.",
      "ja": "実装は受け入れるが、彼らは認識していない追加のテキストを無視すべきです。"
    },
    {
      "indent": 0,
      "text": "9. Change Password Packet (version 1)",
      "section_title": true,
      "ja": "9. [パスワードの変更]パケット（バージョン1）"
    },
    {
      "indent": 3,
      "text": "The version 1 Change Password packet does not appear in standard CHAP. It allows the peer to change the password on the account specified in the previous Response packet. The version 1 Change Password packet should be sent only if the authenticator reports ERROR_PASSWD_EXPIRED (E=648) and V is either missing or equal to one in the Message field of the Failure packet.",
      "ja": "バージョン1パスワードの変更パケットは、標準のCHAPには表示されません。これは、ピアが前回の応答パケットに指定されたアカウントのパスワードを変更することができます。バージョン1パスワード変更パケットは、オーセンティケータがERROR_PASSWD_EXPIRED（E = 648）とVが欠落または失敗パケットのメッセージフィールド内の1に等しいのいずれかで報告された場合にのみ送信する必要があります。"
    },
    {
      "indent": 3,
      "text": "The use of the Change Password Packet (version 1) has been deprecated; the format of the packet is described here for informational purposes, but peers SHOULD NOT transmit it.",
      "ja": "パスワード変更パケット（バージョン1）の使用が推奨されていません。パケットのフォーマットは、情報提供を目的とし、ここで説明するが、ピアは、それを送信すべきではありません。"
    },
    {
      "indent": 3,
      "text": "The format of this packet is as follows:",
      "ja": "次のようにこのパケットのフォーマットは次のとおりです。"
    },
    {
      "indent": 6,
      "text": " 1 octet : Code (=5) 1 octet : Identifier 2 octets: Length (=72) 16 octets: Encrypted LAN Manager Old password Hash 16 octets: Encrypted LAN Manager New Password Hash 16 octets: Encrypted Windows NT Old Password Hash 16 octets: Encrypted Windows NT New Password Hash 2 octets: Password Length 2 octets: Flags",
      "ja": "1つのオクテット：コード（= 5）1オクテット：識別子2つのオクテット：長さ（= 72）16オクテット：暗号化されたLAN Managerの古いパスワードハッシュ16オクテット：暗号化されたLAN Managerの新しいパスワードハッシュ16オクテット：暗号化されたWindows NTの古いパスワードハッシュ16オクテット：暗号化されたWindows NTの新しいパスワードハッシュ2つのオクテット：パスワードの長さ2つのオクテット：フラグ"
    },
    {
      "indent": 6,
      "text": "Code 5",
      "ja": "コード5"
    },
    {
      "indent": 6,
      "text": "Identifier The Identifier field is one octet and aids in matching requests and replies. The value is the Identifier of the received Failure packet to which this packet responds plus 1.",
      "ja": "識別子ザ識別子フィールドは、要求と応答のマッチングに1オクテットおよびAIDSです。値は、このパケットが応答プラス1の受信失敗パケットの識別子です。"
    },
    {
      "indent": 6,
      "text": "Length 72",
      "ja": "長さ72"
    },
    {
      "indent": 6,
      "text": "Encrypted LAN Manager New Password Hash Encrypted LAN Manager Old Password Hash These fields contain the LAN Manager password hash of the new and old passwords encrypted with the last received challenge value, as output by the routine LmEncryptedPasswordHash() (see section A.8, below).",
      "ja": "暗号化されたLAN Managerの新しいパスワードハッシュ暗号化されたLAN Managerの古いパスワードハッシュは、これらのフィールドは、以下のルーチンLmEncryptedPasswordHash（）によって出力として（セクションA.8を参照してください、最後に受信したチャレンジ値を暗号化し、新旧のパスワードのLAN Managerパスワードハッシュを含んでい）。"
    },
    {
      "indent": 6,
      "text": "Encrypted Windows NT New Password Hash Encrypted Windows NT Old Password Hash These fields contain the Windows NT password hash of the new and old passwords encrypted with the last received challenge value, as output by the pseudo-code routine NtEncryptedPasswordHash() (see section A.10, below).",
      "ja": "暗号化されたWindows NTの新しいパスワードハッシュ暗号化されたWindows NTの古いパスワードハッシュこれらのフィールドは、擬似コードルーチンNtEncryptedPasswordHash（によって出力として、最後に受信したチャレンジ値を暗号化し、新旧のパスワードのWindows NTパスワードハッシュを含ん）（セクションAを参照してください。 10、以下）。"
    },
    {
      "indent": 6,
      "text": "Password Length The length in octets of the LAN Manager compatible form of the new password. If this value is greater than or equal to zero and less than or equal to 14 it is assumed that the encrypted LAN Manager password hash fields are valid. Otherwise, it is assumed these fields are not valid, in which case the Windows NT compatible passwords MUST be provided.",
      "ja": "パスワードの長さの新しいパスワードのLAN Managerの互換性のある形式のオクテットの長さ。この値が14にゼロ以上と以下であれば、暗号化されたLAN Managerパスワードハッシュフィールドが有効であることを想定しています。それ以外の場合は、Windows NT互換のパスワードを提供する必要がある場合には、これらのフィールドが有効でないと想定されます。"
    },
    {
      "indent": 6,
      "text": "Flags This field is two octets in length. It is a bit field of option flags where 0 is the least significant bit of the 16-bit quantity:",
      "ja": "フラグこのフィールドの長さは2つのオクテットです。これは、0が16ビット量の最下位ビットであり、オプションフラグのビットフィールドです。"
    },
    {
      "indent": 12,
      "text": "Bit 0\n   If this bit is set (1), it indicates that the encrypted\n   Windows NT hashed passwords are valid and should be used.\n   If this bit is cleared (0), the Windows NT fields are not\n   used and the LAN Manager fields must be provided.",
      "raw": true
    },
    {
      "indent": 12,
      "text": "Bits 1-15 Reserved, always clear (0).",
      "ja": "ビット1-15予約済み、常にクリア（0）。"
    },
    {
      "indent": 0,
      "text": "10. Change Password Packet (version 2)",
      "section_title": true,
      "ja": "10.パスワード変更パケット（バージョン2）"
    },
    {
      "indent": 3,
      "text": "The version 2 Change Password packet does not appear in standard CHAP. It allows the peer to change the password on the account specified in the preceding Response packet. The version 2 Change Password packet should be sent only if the authenticator reports ERROR_PASSWD_EXPIRED (E=648) and a version of 2 or greater in the Message field of the Failure packet.",
      "ja": "バージョン2のパスワード変更パケットは、標準のCHAPには表示されません。これは、ピアが、先行する応答パケットに指定されたアカウントのパスワードを変更することができます。バージョン2のパスワード変更パケットは、オーセンティケータがERROR_PASSWD_EXPIRED（E = 648）と障害パケットのメッセージフィールド内の2以上のバージョンを報告した場合にのみ送信する必要があります。"
    },
    {
      "indent": 3,
      "text": "This packet type is supported by Windows NT 3.51, 4.0 and recent versions of Windows 95. It is not supported by Windows NT 3.5 or early versions of Windows 95.",
      "ja": "このパケットタイプは、これがWindows NT 3.5またはWindows 95の初期のバージョンでサポートされていないのWindows NT 3.51、4.0およびWindows 95の最近のバージョンでサポートされています。"
    },
    {
      "indent": 6,
      "text": "The format of this packet is as follows:",
      "ja": "次のようにこのパケットのフォーマットは次のとおりです。"
    },
    {
      "indent": 9,
      "text": " 1 octet : Code 1 octet : Identifier 2 octets : Length 516 octets : Password Encrypted with Old NT Hash",
      "ja": "1つのオクテット：コード1オクテット：識別子2つのオクテット：長さ516オクテット：旧NTハッシュで暗号化したパスワード"
    },
    {
      "indent": 9,
      "text": " 16 octets : Old NT Hash Encrypted with New NT Hash 516 octets : Password Encrypted with Old LM Hash 16 octets : Old LM Hash Encrypted With New NT Hash 24 octets : LAN Manager compatible challenge response 24 octets : Windows NT compatible challenge response 2-octet : Flags",
      "ja": "旧LMハッシュ16オクテットで暗号化パスワード：：16オクテット：新NTハッシュ516オクテットのある旧NTハッシュ暗号化された新しいNTハッシュ24オクテットで、古いLMハッシュ暗号化：LAN Managerの互換性のあるチャレンジレスポンス24オクテット：のWindows NT互換性のあるチャレンジレスポンス2オクテット：フラグ"
    },
    {
      "indent": 6,
      "text": "Code 6",
      "ja": "コード6"
    },
    {
      "indent": 6,
      "text": "Identifier The Identifier field is one octet and aids in matching requests and replies. The value is the Identifier of the received Failure packet to which this packet responds plus 1.",
      "ja": "識別子ザ識別子フィールドは、要求と応答のマッチングに1オクテットおよびAIDSです。値は、このパケットが応答プラス1の受信失敗パケットの識別子です。"
    },
    {
      "indent": 6,
      "text": "Length 1118",
      "ja": "長さ1118"
    },
    {
      "indent": 6,
      "text": "Password Encrypted with Old NT Hash This field contains the PWBLOCK form of the new Windows NT password encrypted with the old Windows NT password hash, as output by the NewPasswordEncryptedWithOldNtPasswordHash() routine (see section A.11, below).",
      "ja": "このフィールドは旧NTハッシュで暗号化されたパスワードが（以下、セクションA.11を参照してください）NewPasswordEncryptedWithOldNtPasswordHash（）ルーチンによって出力として、古いのWindows NTパスワードハッシュで暗号化された新しいWindows NTパスワードのPWBLOCKフォームが含まれています。"
    },
    {
      "indent": 6,
      "text": "Old NT Hash Encrypted with New NT Hash This field contains the old Windows NT password hash encrypted with the new Windows NT password hash, as output by the OldNtPasswordHashEncryptedWithNewNtPasswordHash() routine (see section A.14, below).",
      "ja": "新しいNTハッシュと旧NTハッシュ暗号化は、このフィールドには、新しいWindows NTパスワードハッシュで暗号化された古いWindows NTのパスワードのハッシュ、OldNtPasswordHashEncryptedWithNewNtPasswordHash（）ルーチンによって出力として（以下、セクションA.14を参照）が含まれています。"
    },
    {
      "indent": 6,
      "text": "Password Encrypted with Old LM Hash This field contains the PWBLOCK form of the new Windows NT password encrypted with the old LAN Manager password hash, as output by the NewPasswordEncryptedWithOldLmPasswordHash() routine described in section A.15, below. Note, however, that the use of this field has been deprecated: peers SHOULD NOT generate it, and this field SHOULD be zero-filled.",
      "ja": "このフィールドは旧LMハッシュで暗号化したパスワードは、以下のセクションA.15で説明NewPasswordEncryptedWithOldLmPasswordHash（）ルーチンによって出力として、古いLAN Managerパスワードハッシュで暗号化された新しいWindows NTパスワードのPWBLOCKフォームが含まれています。ピアがそれを生成するべきではありませんし、このフィールドはゼロ埋めする必要があります。このフィールドの使用は推奨されていること、しかし、注意してください。"
    },
    {
      "indent": 6,
      "text": "Old LM Hash Encrypted With New NT Hash This field contains the old LAN Manager password hash encrypted with the new Windows NT password hash, as output by the OldLmPasswordHashEncryptedWithNewNtPasswordHash() routine (see section A.16, below). Note, however, that the use of this field has been deprecated: peers SHOULD NOT generate it, and this field SHOULD be zero-filled.",
      "ja": "新しいNTハッシュで古いLMハッシュ暗号化は、このフィールドには（以下、セクションA.16を参照してください）OldLmPasswordHashEncryptedWithNewNtPasswordHash（）ルーチンによって出力として、新しいWindows NTパスワードハッシュで暗号化された古いLAN Managerパスワードハッシュが含まれています。ピアがそれを生成するべきではありませんし、このフィールドはゼロ埋めする必要があります。このフィールドの使用は推奨されていること、しかし、注意してください。"
    },
    {
      "indent": 6,
      "text": "LAN Manager compatible challenge response Windows NT compatible challenge response The challenge response field (as described in the Response packet description), but calculated on the new password and the same challenge used in the last response. Note that use of the LAN Manager compatible challenge response has been deprecated; peers SHOULD NOT generate it, and the field SHOULD be zero-filled.",
      "ja": "LAN Managerの互換性のあるチャレンジレスポンスのWindows NT互換性のあるチャレンジレスポンス（Responseパケットの説明で説明したように）チャレンジレスポンスフィールドは、新しいパスワードと最後の応答に使用したのと同じ課題に基づいて計算します。 LAN Managerの互換性のあるチャレンジレスポンスの使用が推奨されていません注意してください。ピアは、それを生成しません。また、フィールドはゼロで埋めであるべきです。"
    },
    {
      "indent": 6,
      "text": "Flags This field is two octets in length. It is a bit field of option flags where 0 is the least significant bit of the 16-bit quantity. The format of this field is illustrated in the following diagram:",
      "ja": "フラグこのフィールドの長さは2つのオクテットです。これは、0が16ビット量の最下位ビットであり、オプションフラグのビットフィールドです。このフィールドのフォーマットは、次の図に示されています。"
    },
    {
      "indent": 9,
      "text": "          1\n5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                           | |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 12,
      "text": "Bit 0 The \"use Windows NT compatible challenge response\" flag as described in the Response packet.",
      "ja": "ビット0応答パケットに記載されている「Windows NTの互換性のチャレンジレスポンスを使用する」のフラグ。"
    },
    {
      "indent": 12,
      "text": "Bit 1 Set (1) indicates that the \"Password Encrypted with Old LM Hash\" and \"Old LM Hash Encrypted With New NT Hash\" fields are valid and should be used. Clear (0) indicates these fields are not valid. This bit SHOULD always be clear (0).",
      "ja": "ビット1セット（1）フィールド「新しいNTハッシュで古いLMハッシュ暗号化」と「オールド・LMハッシュで暗号化したパスワードは、」有効であり、使用されるべきであることを示しています。クリア（0）は、これらのフィールドが有効でない示します。このビットは、常に（0）明確にする必要があります。"
    },
    {
      "indent": 12,
      "text": "Bits 2-15 Reserved, always clear (0).",
      "ja": "ビット2-15予約済み、常にクリア（0）。"
    },
    {
      "indent": 0,
      "text": "11. Security Considerations",
      "section_title": true,
      "ja": "11.セキュリティについての考慮事項"
    },
    {
      "indent": 3,
      "text": "As an implementation detail, the authenticator SHOULD limit the number of password retries allowed to make brute-force password guessing attacks more difficult.",
      "ja": "実装の詳細としては、オーセンティケータは、ブルートフォースパスワード推測攻撃をより困難にするために許可され、パスワードの再試行の回数を制限する必要があります。"
    },
    {
      "indent": 3,
      "text": "Because the challenge value is encrypted using the password hash to form the response and the challenge is transmitted in clear-text form, both passive known-plaintext and active chosen-plaintext attacks against the password hash are possible. Suitable precautions (i.e., frequent password changes) SHOULD be taken in environments where eavesdropping is likely.",
      "ja": "チャレンジ値が応答を形成するためにパスワードハッシュを使用して暗号化され、チャレンジはクリアテキスト形式で送信されるため、パスワードハッシュに対する既知平文パッシブとアクティブの両方の選択平文攻撃が可能です。適切な予防措置（すなわち、頻繁にパスワードの変更）が盗聴の可能性がある環境で取られるべきです。"
    },
    {
      "indent": 3,
      "text": "The Change Password (version 1) packet is vulnerable to a passive eavesdropping attack which can easily reveal the new password hash. For this reason, it MUST NOT be sent if eavesdropping is possible.",
      "ja": "パスワードの変更（バージョン1）パケットは、簡単に新しいパスワードハッシュを明らかにすることができ、受動的な盗聴攻撃に対して脆弱です。盗聴が可能であればこのような理由から、それは送ってはいけません。"
    },
    {
      "indent": 0,
      "text": "12. References",
      "section_title": true,
      "ja": "12.参考文献"
    },
    {
      "indent": 3,
      "text": "[1] Simpson, W., \"The Point-to-Point Protocol (PPP)\", STD 51, RFC 1661, July 1994.",
      "ja": "[1]シンプソン、W.、 \"ポイントツーポイントプロトコル（PPP）\"、STD 51、RFC 1661、1994年7月。"
    },
    {
      "indent": 3,
      "text": "[2] Simpson, W., \"PPP Challenge Handshake Authentication Protocol (CHAP)\", RFC 1994, August 1996.",
      "ja": "[2]シンプソン、W.、 \"PPPチャレンジハンドシェイク認証プロトコル（CHAP）\"、RFC 1994、1996年8月。"
    },
    {
      "indent": 3,
      "text": "[3] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[3]ブラドナーのは、S.は、BCP 14、RFC 2119、1997年3月の \"RFCsにおける使用のためのレベルを示すために\"。"
    },
    {
      "indent": 3,
      "text": "[4] \"Data Encryption Standard (DES)\", Federal Information Processing Standard Publication 46-2, National Institute of Standards and Technology, December 1993.",
      "ja": "[4]「データ暗号化規格（DES）」、連邦情報処理標準出版46-2、米国国立標準技術研究所、1993年12月。"
    },
    {
      "indent": 3,
      "text": "[5] Rivest, R., \"MD4 Message Digest Algorithm\", RFC 1320, April 1992.",
      "ja": "[5]のRivest、R.、 \"MD4メッセージダイジェストアルゴリズム\"、RFC 1320、1992年4月。"
    },
    {
      "indent": 3,
      "text": "[6] RC4 is a proprietary encryption algorithm available under license from RSA Data Security Inc. For licensing information, contact: RSA Data Security, Inc. 100 Marine Parkway Redwood City, CA 94065-1031",
      "ja": "[6] RC4は情報、接触のライセンスについては、RSAデータセキュリティ社からライセンスの下で利用可能な独自の暗号化アルゴリズムです：RSA Data Security社の100マリンパークウェイレッドウッドシティー、カリフォルニア州94065から1031"
    },
    {
      "indent": 3,
      "text": "[7] Eastlake, D., Crocker, S., and J. Schiller, \"Randomness Recomnendations for Security\", RFC 1750, December 1994.",
      "ja": "[7]イーストレイク、D.、クロッカー、S.、およびJ.シラー、 \"セキュリティのためのランダム性Recomnendations\"、RFC 1750、1994年12月。"
    },
    {
      "indent": 3,
      "text": "[8] \"The Unicode Standard, Version 2.0\", The Unicode Consortium, Addison-Wesley, 1996. ISBN 0-201-48345-9.",
      "ja": "[8] \"Unicode規格、バージョン2.0\"、ユニコードコンソーシアム、アディソン・ウェズリー、1996 ISBN 0-201-48345-9。"
    },
    {
      "indent": 3,
      "text": "[9] \"DES Modes of Operation\", Federal Information Processing Standards Publication 81, National Institute of Standards and Technology, December 1980",
      "ja": "[9]「動作のDESモード」、連邦情報処理規格出版81、米国国立標準技術研究所、1980年12月"
    },
    {
      "indent": 0,
      "text": "13. Acknowledgements",
      "section_title": true,
      "ja": "13.謝辞"
    },
    {
      "indent": 3,
      "text": "Thanks (in no particular order) to Jeff Haag (Jeff_Haag@3com.com), Bill Palter (palter@network-alchemy.com), Bruce Johnson (bjohnson@microsoft.com), Tony Bell (tonybe@microsoft.com), Benoit Martin (ehlija@vircom.com), and Joe Davies (josephd@microsoft.com) for useful suggestions and feedback.",
      "ja": "ジェフ・ハーグ（Jeff_Haag@3com.com）に感謝（順不同）、ビル・Palter（palter@network-alchemy.com）、ブルース・ジョンソン（bjohnson@microsoft.com）、トニー・ベル（tonybe@microsoft.com）、ブノワ・マーティン（ehlija@vircom.com）、そして有用な提案やフィードバックのためのジョー・デイヴィス（josephd@microsoft.com）。"
    },
    {
      "indent": 0,
      "text": "14. Chair's Address",
      "section_title": true,
      "ja": "14.議長の住所"
    },
    {
      "indent": 3,
      "text": "The PPP Extensions Working Group can be contacted via the current chair:",
      "ja": "PPP拡張ワーキンググループは、現在のいすを介して接触させることができます。"
    },
    {
      "indent": 3,
      "text": "Karl Fox Ascend Communications 3518 Riverside Drive Suite 101 Columbus, OH 43221",
      "ja": "カール・フォックスアセンドコミュニケーションズ3518リバーサイドドライブスイート101コロンバス、オハイオ43221"
    },
    {
      "indent": 3,
      "text": "Phone: +1 614 326 6841 EMail: karl@ascend.com",
      "ja": "電話：+1 614 326 6841 Eメール：karl@ascend.com"
    },
    {
      "indent": 0,
      "text": "15. Authors' Addresses",
      "section_title": true,
      "ja": "15.著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Questions about this memo can also be directed to:",
      "ja": "このメモに関する質問も対象とすることができます。"
    },
    {
      "indent": 3,
      "text": "Glen Zorn Microsoft Corporation One Microsoft Way Redmond, Washington 98052",
      "ja": "グレンツォルンマイクロソフト社1つのマイクロソフト道、レッドモンド、ワシントン98052"
    },
    {
      "indent": 3,
      "text": "Phone: +1 425 703 1559 Fax: +1 425 936 7329 EMail: glennz@microsoft.com",
      "ja": "電話：+1 425 703 1559ファックス：+1 425 936 7329 Eメール：glennz@microsoft.com"
    },
    {
      "indent": 3,
      "text": "Steve Cobb Microsoft Corporation One Microsoft Way Redmond, Washington 98052",
      "ja": "スティーブ・コブマイクロソフト社1つのマイクロソフト道、レッドモンド、ワシントン98052"
    },
    {
      "indent": 3,
      "text": "EMail: stevec@microsoft.com",
      "ja": "メールアドレス：stevec@microsoft.com"
    },
    {
      "indent": 0,
      "text": "Appendix A - Pseudocode",
      "ja": "付録A  - 擬似コード"
    },
    {
      "indent": 3,
      "text": "The routines mentioned in the text are described in pseudocode below.",
      "ja": "本文中で言及したルーチンは、以下の擬似コードに記述されています。"
    },
    {
      "indent": 0,
      "text": "A.1 LmChallengeResponse()",
      "ja": "A.1 LmChallengeResponse（）"
    },
    {
      "indent": 3,
      "text": "LmChallengeResponse( IN 8-octet Challenge, IN 0-to-14-oem-char Password, OUT 24-octet Response ) { LmPasswordHash( Password, giving PasswordHash ) ChallengeResponse( Challenge, PasswordHash, giving Response ) }",
      "ja": "LmChallengeResponse（8オクテットのチャレンジ、0対14-OEM-チャーパスワードIN、OUT 24オクテット応答）{LmPasswordHash（パスワード、与えPasswordHash）チャレンジ - レスポンス（チャレンジ、PasswordHash、与え応答）}"
    },
    {
      "indent": 0,
      "text": "A.2 LmPasswordHash()",
      "ja": "A.2 LmPasswordHash（）"
    },
    {
      "indent": 3,
      "text": "LmPasswordHash( IN 0-to-14-oem-char Password, OUT 16-octet PasswordHash ) { Set UcasePassword to the uppercased Password Zero pad UcasePassword to 14 characters",
      "ja": "LmPasswordHash（0対14-OEM-チャーパスワードIN、OUT 16オクテットPasswordHash）{セットUcasePassword大文字パスワードゼロパッドUcasePasswordに14の文字"
    },
    {
      "indent": 6,
      "text": "DesHash( 1st 7-octets of UcasePassword, giving 1st 8-octets of PasswordHash )",
      "ja": "DesHash（PasswordHashの第一の8オクテットを与えるUcasePasswordの第一7オクテット）"
    },
    {
      "indent": 3,
      "text": " DesHash( 2nd 7-octets of UcasePassword, giving 2nd 8-octets of PasswordHash ) }",
      "ja": "DesHash（PasswordHashの第2の8オクテットを与えるUcasePasswordの2 7オクテット）}"
    },
    {
      "indent": 0,
      "text": "A.3 DesHash()",
      "ja": "）（0.3 Deshsを受け"
    },
    {
      "indent": 3,
      "text": "DesHash(\nIN  7-octet Clear,\nOUT 8-octet Cypher )\n{\n   /*\n    * Make Cypher an irreversibly encrypted form of Clear by\n    * encrypting known text using Clear as the secret key.\n    * The known text consists of the string\n    *\n    *              KGS!@#$%\n    */",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Set StdText to \"KGS!@#$%\"",
      "ja": "StdTextを設定するには、 \"KGS！@の＃$％\""
    },
    {
      "indent": 3,
      "text": " DesEncrypt( StdText, Clear, giving Cypher ) }",
      "ja": "DESENCRYPT（サイファーを与えるStdText、クリア）}"
    },
    {
      "indent": 0,
      "text": "A.4 DesEncrypt()",
      "ja": "A.4 DESENCRYPT（）"
    },
    {
      "indent": 3,
      "text": "DesEncrypt(\nIN  8-octet Clear,\nIN  7-octet Key,\nOUT 8-octet Cypher )\n{\n   /*\n    * Use the DES encryption algorithm [4] in ECB mode [9]\n    * to encrypt Clear into Cypher such that Cypher can\n    * only be decrypted back to Clear by providing Key.\n    * Note that the DES algorithm takes as input a 64-bit\n    * stream where the 8th, 16th, 24th, etc.  bits are\n    * parity bits ignored by the encrypting algorithm.\n    * Unless you write your own DES to accept 56-bit input\n    * without parity, you will need to insert the parity bits\n    * yourself.\n    */\n}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "A.5 NtChallengeResponse()",
      "ja": "A.5 NtChallengeResponse（）"
    },
    {
      "indent": 3,
      "text": "NtChallengeResponse( IN 8-octet Challenge, IN 0-to-256-unicode-char Password, OUT 24-octet Response ) { NtPasswordHash( Password, giving PasswordHash ) ChallengeResponse( Challenge, PasswordHash, giving Response ) }",
      "ja": "NtChallengeResponse（8オクテットのチャレンジ、0から256のUnicode文字のパスワードIN、OUT 24オクテット応答）{NtPasswordHash（パスワード、与えPasswordHash）チャレンジ - レスポンス（チャレンジ、PasswordHash、与え応答）}"
    },
    {
      "indent": 0,
      "text": "A.6 NtPasswordHash()",
      "ja": "A.6 NtPasswordHash（）"
    },
    {
      "indent": 3,
      "text": "NtPasswordHash(\nIN  0-to-256-unicode-char Password,\nOUT 16-octet              PasswordHash )\n{\n   /*\n    * Use the MD4 algorithm [5] to irreversibly hash Password\n    * into PasswordHash.  Only the password is hashed without\n    * including any terminating 0.\n    */",
      "raw": true
    },
    {
      "indent": 3,
      "text": "}",
      "ja": "｝"
    },
    {
      "indent": 0,
      "text": "A.7 ChallengeResponse()",
      "ja": "A.7チャレンジ - レスポンス（）"
    },
    {
      "indent": 3,
      "text": "ChallengeResponse( IN 8-octet Challenge, IN 16-octet PasswordHash, OUT 24-octet Response ) { Set ZPasswordHash to PasswordHash zero-padded to 21 octets",
      "ja": "チャレンジ - レスポンス（8オクテットチャレンジIN、16オクテットPasswordHash IN、OUT 24オクテット応答）{セットZPasswordHash 21オクテットまでゼロパディングをPasswordHashします"
    },
    {
      "indent": 6,
      "text": "DesEncrypt( Challenge, 1st 7-octets of ZPasswordHash, giving 1st 8-octets of Response )",
      "ja": "DESENCRYPT（チャレンジ、ZPasswordHashの第一7オクテット、レスポンスの与える第一の8オクテット）"
    },
    {
      "indent": 6,
      "text": "DesEncrypt( Challenge, 2nd 7-octets of ZPasswordHash, giving 2nd 8-octets of Response )",
      "ja": "DESENCRYPT（応答の第2の8オクテットを与えるZPasswordHashのチャレンジ、第2 7オクテット）"
    },
    {
      "indent": 3,
      "text": " DesEncrypt( Challenge, 3rd 7-octets of ZPasswordHash, giving 3rd 8-octets of Response ) }",
      "ja": "DESENCRYPT（チャレンジ、応答の第3の8オクテットを与えるZPasswordHashの3 7オクテット）}"
    },
    {
      "indent": 0,
      "text": "A.8 LmEncryptedPasswordHash()",
      "ja": "A.8 LmEncryptedPasswordHash（）"
    },
    {
      "indent": 3,
      "text": "LmEncryptedPasswordHash( IN 0-to-14-oem-char Password, IN 8-octet KeyValue, OUT 16-octet Cypher ) { LmPasswordHash( Password, giving PasswordHash )",
      "ja": "LmEncryptedPasswordHash（0対14-OEM-チャーパスワードIN、8オクテットです。KeyValue IN、OUT 16オクテットサイファー）{LmPasswordHash（PasswordHashを与えるパスワード）"
    },
    {
      "indent": 3,
      "text": " PasswordHashEncryptedWithBlock( PasswordHash, KeyValue, giving Cypher ) }",
      "ja": "PasswordHashEncryptedWithBlock（サイファーを与えるPasswordHash、です。KeyValue）}"
    },
    {
      "indent": 0,
      "text": "A.9 PasswordHashEncryptedWithBlock()",
      "ja": "A.9 PasswordHashEncryptedWithBlock（）"
    },
    {
      "indent": 3,
      "text": "PasswordHashEncryptedWithBlock( IN 16-octet PasswordHash, IN 8-octet Block, OUT 16-octet Cypher ) {",
      "ja": "（8オクテットブロック内の16オクテットPasswordHash IN、OUT 16オクテットサイファー）PasswordHashEncryptedWithBlock {"
    },
    {
      "indent": 6,
      "text": "DesEncrypt( 1st 8-octets PasswordHash, 1st 7-octets Block, giving 1st 8-octets Cypher )",
      "ja": "DESENCRYPT（第一の8オクテットPasswordHash、第一7オクテットブロック、与える第一の8オクテットサイファー）"
    },
    {
      "indent": 3,
      "text": " DesEncrypt( 2nd 8-octets PasswordHash, 1st 7-octets Block, giving 2nd 8-octets Cypher ) }",
      "ja": "DESENCRYPT（2 8オクテットPasswordHash、第7オクテットブロック、与え2 8オクテットサイファー）}"
    },
    {
      "indent": 0,
      "text": "A.10 NtEncryptedPasswordHash()",
      "ja": "A.10 NtEncryptedPasswordHash（）"
    },
    {
      "indent": 3,
      "text": "NtEncryptedPasswordHash( IN 0-to-14-oem-char Password IN 8-octet Challenge OUT 16-octet Cypher ) { NtPasswordHash( Password, giving PasswordHash )",
      "ja": "NtEncryptedPasswordHash（0対14-OEM-チャーパスワード8オクテットチャレンジOUT 16オクテットサイファーIN）{NtPasswordHash（パスワード、PasswordHashを与えます）"
    },
    {
      "indent": 3,
      "text": " PasswordHashEncryptedWithBlock( PasswordHash, Challenge, giving Cypher ) }",
      "ja": "PasswordHashEncryptedWithBlock（サイファーを与えるPasswordHash、チャレンジ）}"
    },
    {
      "indent": 0,
      "text": "A.11 NewPasswordEncryptedWithOldNtPasswordHash()",
      "ja": "A.11 NewPasswordEncryptedWithOldNtPasswordHash（）"
    },
    {
      "indent": 3,
      "text": "datatype-PWBLOCK { 256-unicode-char Password 4-octets PasswordLength }",
      "ja": "データ型-PWBLOCK {256ユニコード文字パスワード4オクテットPasswordLength}"
    },
    {
      "indent": 3,
      "text": "NewPasswordEncryptedWithOldNtPasswordHash( IN 0-to-256-unicode-char NewPassword, IN 0-to-256-unicode-char OldPassword, OUT datatype-PWBLOCK EncryptedPwBlock ) { NtPasswordHash( OldPassword, giving PasswordHash )",
      "ja": "{NtPasswordHash（OldPassword、PasswordHashを与える）（0から256ユニコード文字OldPassword、OUTデータ型-PWBLOCK EncryptedPwBlock IN 0対256ユニコード文字NEWPASSWORD、IN）NewPasswordEncryptedWithOldNtPasswordHash"
    },
    {
      "indent": 3,
      "text": " EncryptPwBlockWithPasswordHash( NewPassword, PasswordHash, giving EncryptedPwBlock ) }",
      "ja": "EncryptPwBlockWithPasswordHash（NEWPASSWORD、PasswordHash、与えEncryptedPwBlock）}"
    },
    {
      "indent": 0,
      "text": "A.12 EncryptPwBlockWithPasswordHash()",
      "ja": "A.12 EncryptPwBlockWithPasswordHash（）"
    },
    {
      "indent": 3,
      "text": "EncryptPwBlockWithPasswordHash( IN 0-to-256-unicode-char Password, IN 16-octet PasswordHash,",
      "ja": "EncryptPwBlockWithPasswordHash（0・ツー・256・ユニコード・文字のパスワードでは、16オクテットのPasswordHash、"
    },
    {
      "indent": 3,
      "text": "OUT datatype-PWBLOCK PwBlock ) {",
      "ja": "OUTデータ型P BLOCK Pブロック）{"
    },
    {
      "indent": 3,
      "text": " Fill ClearPwBlock with random octet values PwSize = lstrlenW( Password ) * sizeof( unicode-char ) PwOffset = sizeof( ClearPwBlock.Password ) - PwSize Move PwSize octets to (ClearPwBlock.Password + PwOffset ) from Password ClearPwBlock.PasswordLength = PwSize Rc4Encrypt( ClearPwBlock, sizeof( ClearPwBlock ), PasswordHash, sizeof( PasswordHash ), giving PwBlock ) }",
      "ja": "PwSize移動PwSizeオクテット（ClearPwBlock.Password + PwOffset）へのパスワードからClearPwBlock.PasswordLength = PwSize Rc4Encrypt（ClearPwBlock  - ランダムオクテット値PwSize = lstrlenW（パスワード）*はsizeof（ユニコード-CHAR）PwOffset =はsizeof（ClearPwBlock.Password）とClearPwBlockを記入、はsizeof（ClearPwBlock）、PasswordHash、はsizeof（PasswordHash）、PwBlockを与えます）}"
    },
    {
      "indent": 0,
      "text": "A.13 Rc4Encrypt()",
      "ja": "A.13 Rc4Encrypt（）"
    },
    {
      "indent": 3,
      "text": "Rc4Encrypt(\nIN  x-octet Clear,\nIN  integer ClearLength,\nIN  y-octet Key,\nIN  integer KeyLength,\nOUT x-octet Cypher )\n{\n   /*\n    * Use the RC4 encryption algorithm [6] to encrypt Clear of\n    * length ClearLength octets into a Cypher of the same length\n    * such that the Cypher can only be decrypted back to Clear\n    * by providing a Key of length KeyLength octets.\n    */\n}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "A.14 OldNtPasswordHashEncryptedWithNewNtPasswordHash()",
      "ja": "A.14 OldNtPasswordHashEncryptedWithNewNtPasswordHash（）"
    },
    {
      "indent": 3,
      "text": "OldNtPasswordHashEncryptedWithNewNtPasswordHash( IN 0-to-256-unicode-char NewPassword, IN 0-to-256-unicode-char OldPassword, OUT 16-octet EncryptedPasswordHash ) { NtPasswordHash( OldPassword, giving OldPasswordHash ) NtPasswordHash( NewPassword, giving NewPasswordHash ) NtPasswordHashEncryptedWithBlock( OldPasswordHash, NewPasswordHash, giving EncryptedPasswordHash ) }",
      "ja": "{NtPasswordHash（OldPassword、OldPasswordHash与える）（NewPasswordHashを与えるNEWPASSWORD）NtPasswordHashをNtPasswordHashEncryptedWithBlock（OldPasswordHash（0対256ユニコード文字OldPassword、OUT 16オクテットEncryptedPasswordHash IN 0対256ユニコード文字NEWPASSWORD、IN）OldNtPasswordHashEncryptedWithNewNtPasswordHash 、NewPasswordHash、与えEncryptedPasswordHash）}"
    },
    {
      "indent": 0,
      "text": "A.15 NewPasswordEncryptedWithOldLmPasswordHash()",
      "ja": "A.15 NewPasswordEncryptedWithOldLmPasswordHash（）"
    },
    {
      "indent": 3,
      "text": "NewPasswordEncryptedWithOldLmPasswordHash( IN 0-to-256-unicode-char NewPassword, IN 0-to-256-unicode-char OldPassword, OUT datatype-PWBLOCK EncryptedPwBlock ) { LmPasswordHash( OldPassword, giving PasswordHash )",
      "ja": "{LmPasswordHash（OldPassword、PasswordHashを与える）（0から256ユニコード文字OldPassword、OUTデータ型-PWBLOCK EncryptedPwBlock IN 0対256ユニコード文字NEWPASSWORD、IN）NewPasswordEncryptedWithOldLmPasswordHash"
    },
    {
      "indent": 3,
      "text": " EncryptPwBlockWithPasswordHash( NewPassword, PasswordHash, giving EncryptedPwBlock ) }",
      "ja": "EncryptPwBlockWithPasswordHash（NEWPASSWORD、PasswordHash、与えEncryptedPwBlock）}"
    },
    {
      "indent": 0,
      "text": "A.16 OldLmPasswordHashEncryptedWithNewNtPasswordHash()",
      "ja": "A.16 OldLmPasswordHashEncryptedWithNewNtPasswordHash（）"
    },
    {
      "indent": 3,
      "text": "OldLmPasswordHashEncryptedWithNewNtPasswordHash( IN 0-to-256-unicode-char NewPassword, IN 0-to-256-unicode-char OldPassword, OUT 16-octet EncryptedPasswordHash ) { LmPasswordHash( OldPassword, giving OldPasswordHash )",
      "ja": "{LmPasswordHash（OldPasswordHashを与えるOldPassword）（0から256ユニコード文字OldPassword、OUT 16オクテットEncryptedPasswordHash IN 0対256ユニコード文字NEWPASSWORD、IN）OldLmPasswordHashEncryptedWithNewNtPasswordHash"
    },
    {
      "indent": 6,
      "text": "NtPasswordHash( NewPassword, giving NewPasswordHash )",
      "ja": "NtPasswordHash（NEWPASSWORD、与えNewPasswordHash）"
    },
    {
      "indent": 3,
      "text": " NtPasswordHashEncryptedWithBlock( OldPasswordHash, NewPasswordHash, giving EncrytptedPasswordHash ) }",
      "ja": "NtPasswordHashEncryptedWithBlock（OldPasswordHash、NewPasswordHash、与えEncrytptedPasswordHash）}"
    },
    {
      "indent": 0,
      "text": "A.17 NtPasswordHashEncryptedWithBlock()",
      "ja": "A.17 NtPasswordHashEncryptedWithBlock（）"
    },
    {
      "indent": 3,
      "text": "NtPasswordHashEncryptedWithBlock( IN 16-octet PasswordHash, IN 16-octet Block, OUT 16-octet Cypher ) { DesEncrypt( 1st 8-octets PasswordHash, 1st 7-octets Block, giving 1st 8-octets Cypher )",
      "ja": "NtPasswordHashEncryptedWithBlock（16オクテットIN PasswordHash、16オクテットのブロック、OUT 16オクテットサイファー）{DESENCRYPT（第8オクテットPasswordHash、第7オクテットブロック、与える第8オクテットサイファー）"
    },
    {
      "indent": 3,
      "text": " DesEncrypt( 2nd 8-octets PasswordHash, 2nd 7-octets Block, giving 2nd 8-octets Cypher ) }",
      "ja": "DESENCRYPT（2 8オクテットPasswordHash、2 7オクテットブロック、与え2 8オクテットサイファー）}"
    },
    {
      "indent": 0,
      "text": "Appendix B - Examples",
      "ja": "付録B  - 例"
    },
    {
      "indent": 0,
      "text": "B.1 Negotiation Examples",
      "ja": "B.1ネゴシエーション例"
    },
    {
      "indent": 3,
      "text": "Here are some examples of typical negotiations. The peer is on the left and the authenticator is on the right.",
      "ja": "ここでは代表的な交渉のいくつかの例があります。ピアは左側にあり、オーセンティケータは右側にあります。"
    },
    {
      "indent": 3,
      "text": "The packet sequence ID is incremented on each authentication retry Response and on the change password response. All cases where the packet sequence ID is updated are noted below.",
      "ja": "パケットシーケンスIDは各認証試行応答にと変更パスワード応答にインクリメントされます。パケットシーケンスIDが更新されるすべての例を以下に示します。"
    },
    {
      "indent": 3,
      "text": "Response retry is never allowed after Change Password. Change Password may occur after Response retry. The implied challenge form is shown in the examples, though all cases of \"first challenge+23\" should be replaced by the \"C=cccccccccccccccc\" challenge if authenticator supplies it in the Failure packet.",
      "ja": "レスポンスの再試行は、パスワードの変更後に許されることはありません。パスワードの変更は、応答の再試行の後に発生する可能性があります。オーセンティケータは失敗パケットに供給する場合は、「最初のチャレンジ+ 23」のすべての場合は、「C = cccccccccccccccc」チャレンジによって置換されたい暗黙チャレンジ形態は、実施例に示されています。"
    },
    {
      "indent": 0,
      "text": "B.1.1 Successful authentication",
      "ja": "B.1.1成功した認証"
    },
    {
      "indent": 8,
      "text": "    <- Challenge\nResponse ->\n    <- Success",
      "raw": true
    },
    {
      "indent": 0,
      "text": "B.1.2 Failed authentication with no retry allowed",
      "ja": "B.1.2は不可、再試行して認証を失敗しました。"
    },
    {
      "indent": 8,
      "text": "    <- Challenge\nResponse ->\n    <- Failure (E=691 R=0)",
      "raw": true
    },
    {
      "indent": 0,
      "text": "B.1.3 Successful authentication after retry",
      "ja": "B.1.3成功認証試行の後"
    },
    {
      "indent": 8,
      "text": "    <- Challenge\nResponse ->\n    <- Failure (E=691 R=1), disable short timeout\nResponse (++ID) to first challenge+23 ->\n    <- Success",
      "raw": true
    },
    {
      "indent": 0,
      "text": "B.1.4 Failed hack attack with 3 attempts allowed",
      "ja": "3回の試行で失敗しましたB.1.4ハッキング攻撃は許さ"
    },
    {
      "indent": 8,
      "text": "    <- Challenge\nResponse ->\n    <- Failure (E=691 R=1), disable short timeout\nResponse (++ID) to first challenge+23 ->\n    <- Failure (E=691 R=1), disable short timeout\nResponse (++ID) to first challenge+23+23 ->",
      "raw": true
    },
    {
      "indent": 12,
      "text": "<- Failure (E=691 R=0)",
      "ja": "< - 失敗（E = 691、R = 0）"
    },
    {
      "indent": 0,
      "text": "B.1.5 Successful authentication with password change",
      "ja": "パスワードの変更とB.1.5成功した認証"
    },
    {
      "indent": 8,
      "text": "    <- Challenge\nResponse ->\n    <- Failure (E=648 R=0 V=2), disable short timeout\nChangePassword (++ID) to first challenge ->\n    <- Success",
      "raw": true
    },
    {
      "indent": 0,
      "text": "B.1.6 Successful authentication with retry and password change",
      "ja": "再試行とパスワード変更を伴うB.1.6成功した認証"
    },
    {
      "indent": 8,
      "text": "    <- Challenge\nResponse ->\n    <- Failure (E=691 R=1), disable short timeout\nResponse (++ID) to first challenge+23 ->\n    <- Failure (E=648 R=0 V=2), disable short timeout\nChangePassword (++ID) to first challenge+23 ->\n    <- Success",
      "raw": true
    },
    {
      "indent": 0,
      "text": "B.2 Hash Example",
      "ja": "B.2ハッシュ例"
    },
    {
      "indent": 0,
      "text": "Intermediate values for password \"MyPw\".",
      "ja": "パスワード「MyPw」の中間値。"
    },
    {
      "indent": 3,
      "text": "8-octet Challenge: 10 2D B5 DF 08 5D 30 41",
      "ja": "8オクテットチャレンジ：10 2D B5 DF 08（d）30 41"
    },
    {
      "indent": 3,
      "text": "0-to-256-unicode-char NtPassword: 4D 00 79 00 50 00 77 00",
      "ja": "0から256ユニコード文字NtPassword：4D 00 79 00 50 00 77 00"
    },
    {
      "indent": 3,
      "text": "16-octet NtPasswordHash: FC 15 6A F7 ED CD 6C 0E DD E3 33 7D 42 7F 4E AC",
      "ja": "16 otstet Ntpasvordhash：FC 15 IIIA Fsht ED CD SHTS 0E DエズHH US $ 42 SHTF AC"
    },
    {
      "indent": 3,
      "text": "24-octet NtChallengeResponse: 4E 9D 3C 8F 9C FD 38 5D 5B F4 D3 24 67 91 95 6C A4 C3 51 AB 40 9A 3D 61",
      "ja": "24 otstet Ntchalengeresponse：R、R ZTS 8U植物PD 38（d）（b）FCH私はZZその24 91 95 SHTSああMCD 51 AB 40のYaa TA 61"
    },
    {
      "indent": 0,
      "text": "B.3 Example of DES Key Generation",
      "ja": "DES鍵生成のB.3例"
    },
    {
      "indent": 0,
      "text": "DES uses 56-bit keys, expanded to 64 bits by the insertion of parity bits. After the parity of the key has been fixed, every eighth bit is a parity bit and the number of bits that are set (1) in each octet is odd; i.e., odd parity. Note that many DES engines do not check parity, however, simply stripping the parity bits. The following example illustrates the values resulting from the use of the 16-octet NTPasswordHash shown in Appendix B.2 to generate a pair of DES keys",
      "ja": "DESは、パリティビットを挿入することによって64ビットに拡張56ビットキーを使用します。キーのパリティが固定された後、すべての8番目のビットは、パリティビットであり、各オクテット（1）に設定されるビットの数は奇数です。すなわち、奇数パリティ。多くのDESエンジンは単純にパリティビットを除去、しかし、パリティをチェックしないことに注意してください。次の例は、DES鍵のペアを生成するために、付録B.2に示す16オクテットNTPasswordHashの使用から得られる値を示します"
    },
    {
      "indent": 0,
      "text": "(e.g., for use in the NtPasswordHashEncryptedWithBlock() described in Appendix A.17).",
      "ja": "（例えば、付録A.17に記載NtPasswordHashEncryptedWithBlock（）で使用するため）。"
    },
    {
      "indent": 3,
      "text": "16-octet NtPasswordHash: FC 15 6A F7 ED CD 6C 0E DD E3 33 7D 42 7F 4E AC",
      "ja": "16 otstet Ntpasvordhash：FC 15 IIIA Fsht ED CD SHTS 0E DエズHH US $ 42 SHTF AC"
    },
    {
      "indent": 3,
      "text": "First \"raw\" DES key (initial 7 octets of password hash): FC 15 6A F7 ED CD 6C",
      "ja": "まず \"生\" のDESキー（パスワードハッシュの初期7つのオクテット）：FC 15 6A F7 ED CD 6C"
    },
    {
      "indent": 3,
      "text": "First parity-corrected DES key (eight octets): FD 0B 5B 5E 7F 6E 34 D9",
      "ja": "まずパリティ訂正DESキー（8つのオクテット）：FD 0B 5B 5E 7F 6E 34 D9"
    },
    {
      "indent": 3,
      "text": "Second \"raw\" DES key (second 7 octets of password hash) 0E DD E3 33 7D 42 7F",
      "ja": "第二に、 \"生\" のDESキー（パスワードハッシュの第二の7つのオクテット）0E DD E3 33 7D 42 7F"
    },
    {
      "indent": 3,
      "text": "Second parity-corrected DES key (eight octets): 0E 6E 79 67 37 EA 08 FE",
      "ja": "第二にパリティ訂正DESキー（8つのオクテット）：0E 6E 79 67 37 EA 08 FE"
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (1998). All Rights Reserved.",
      "ja": "著作権（C）インターネット協会（1998）。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the Internet Society or other Internet organizations, except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed, or as required to translate it into languages other than English.",
      "ja": "この文書とその翻訳は、コピーして他の人に提供し、それ以外についてはコメントまたは派生物は、いかなる種類の制限もなく、全体的にまたは部分的に、準備コピーし、公表して配布することができることを説明したり、その実装を支援することができます、上記の著作権表示とこの段落は、すべてのそのようなコピーや派生物に含まれていることを条件とします。しかし、この文書自体は著作権のための手順はで定義されている場合には、インターネット標準を開発するために必要なものを除き、インターネットソサエティもしくは他のインターネット関連団体に著作権情報や参照を取り除くなど、どのような方法で変更されないかもしれませんインターネット標準化プロセスが続く、または英語以外の言語に翻訳するために、必要に応じなければなりません。"
    },
    {
      "indent": 3,
      "text": "The limited permissions granted above are perpetual and will not be revoked by the Internet Society or its successors or assigns.",
      "ja": "上記の制限は永久で、インターネット学会やその後継者や譲渡者によって取り消されることはありません。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein is provided on an \"AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書とここに含まれている情報は、基礎とインターネットソサエティおよびインターネットエンジニアリングタスクフォースはすべての保証を否認し、明示または黙示、その情報の利用がない任意の保証を含むがこれらに限定されない「として、」上に設けられています特定の目的への権利または商品性または適合性の黙示の保証を侵害します。"
    }
  ]
}