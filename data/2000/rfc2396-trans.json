{
  "title": {
    "text": "RFC 2396 - Uniform Resource Identifiers (URI): Generic Syntax",
    "ja": "RFC 2396 - 統一資源識別子（URI）：一般的な構文"
  },
  "number": 2396,
  "created_at": "2019-10-24 02:28:04.434825+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                     T. Berners-Lee\nRequest for Comments: 2396                                       MIT/LCS\nUpdates: 1808, 1738                                          R. Fielding\nCategory: Standards Track                                    U.C. Irvine\n                                                             L. Masinter\n                                                       Xerox Corporation\n                                                             August 1998",
      "raw": true
    },
    {
      "indent": 11,
      "text": "Uniform Resource Identifiers (URI): Generic Syntax",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "このメモの位置付け"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "ja": "この文書は、インターネットコミュニティのためのインターネット標準トラックプロトコルを指定し、改善のための議論と提案を要求します。このプロトコルの標準化状態と状態への「インターネット公式プロトコル標準」（STD 1）の最新版を参照してください。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (1998). All Rights Reserved.",
      "ja": "著作権（C）インターネット協会（1998）。全著作権所有。"
    },
    {
      "indent": 0,
      "text": "IESG Note",
      "ja": "IESG注意"
    },
    {
      "indent": 3,
      "text": "This paper describes a \"superset\" of operations that can be applied to URI. It consists of both a grammar and a description of basic functionality for URI. To understand what is a valid URI, both the grammar and the associated description have to be studied. Some of the functionality described is not applicable to all URI schemes, and some operations are only possible when certain media types are retrieved using the URI, regardless of the scheme used.",
      "ja": "本論文では、URIに適用できる操作の「スーパーセット」を説明しています。これは、文法やURIのための基本的な機能の説明の両方で構成されています。有効なURIであるかを理解するには、文法と関連する記述の両方を検討する必要があります。説明した機能の一部は、すべてのURIスキームに適用されず、特定のメディアタイプに関係なく使用されるスキームの、URIを使用して取得された場合、一部の操作のみ可能です。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "A Uniform Resource Identifier (URI) is a compact string of characters for identifying an abstract or physical resource. This document defines the generic syntax of URI, including both absolute and relative forms, and guidelines for their use; it revises and replaces the generic definitions in RFC 1738 and RFC 1808.",
      "ja": "URI（Uniform Resource Identifier）は、抽象又は物理リソースを識別するためのコンパクトな文字列です。この文書は、絶対と相対の両方の形態を含むURIの一般的な構文を定義し、それらの使用のためのガイドライン。それは、RFC 1738およびRFC 1808での一般的な定義を修正して置き換えます。"
    },
    {
      "indent": 3,
      "text": "This document defines a grammar that is a superset of all valid URI, such that an implementation can parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier type. This document does not define a generative grammar for URI; that task will be performed by the individual specifications of each URI scheme.",
      "ja": "この文書では、実装はURI参照の共通の成分を解析することができるように、すべての可能な識別子タイプの方式固有の要件を知らなくても、すべての有効なURIのスーパーセットである文法を定義します。この文書は、URIの生成文法を定義していません。そのタスクは、各URIスキームの個々の仕様によって実行されます。"
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "Uniform Resource Identifiers (URI) provide a simple and extensible means for identifying a resource. This specification of URI syntax and semantics is derived from concepts introduced by the World Wide Web global information initiative, whose use of such objects dates from 1990 and is described in \"Universal Resource Identifiers in WWW\" [RFC1630]. The specification of URI is designed to meet the recommendations laid out in \"Functional Recommendations for Internet Resource Locators\" [RFC1736] and \"Functional Requirements for Uniform Resource Names\" [RFC1737].",
      "ja": "ユニフォームリソース識別子（URI）リソースを識別するための単純で拡張可能な手段を提供します。 URIの構文と意味のこの仕様は、その使用は、そのようなオブジェクトの1990年まで遡り、「WWWにおけるユニバーサルリソース識別子」[RFC1630]に記述されているワールド・ワイド・ウェブグローバル情報イニシアティブによって導入概念から導き出されます。 URIの仕様は、「インターネットリソースロケータのための機能の提言」[RFC1736]および「ユニフォームリソース名の機能要件」[RFC1737]でレイアウトされた勧告を満たすように設計されています。"
    },
    {
      "indent": 3,
      "text": "This document updates and merges \"Uniform Resource Locators\" [RFC1738] and \"Relative Uniform Resource Locators\" [RFC1808] in order to define a single, generic syntax for all URI. It excludes those portions of RFC 1738 that defined the specific syntax of individual URL schemes; those portions will be updated as separate documents, as will the process for registration of new URI schemes. This document does not discuss the issues and recommendation for dealing with characters outside of the US-ASCII character set [ASCII]; those recommendations are discussed in a separate document.",
      "ja": "このドキュメントの更新と、すべてのURIのための単一の、一般的な構文を定義するために「ユニフォームリソースロケータ」[RFC1738]と「相対ユニフォーム・リソース・ロケータ」[RFC1808]をマージします。これは、個々のURLスキームの特定のシンタックスを定義RFC 1738の部分を除外する。新しいURIスキームの登録のためのプロセスは意志としてそれらの部分は、別の文書として更新されます。この文書では、[ASCII] US-ASCII文字セットの外の文字に対応するための課題と勧告については説明しません。これらの勧告は、別の文書で説明されています。"
    },
    {
      "indent": 3,
      "text": "All significant changes from the prior RFCs are noted in Appendix G.",
      "ja": "前のRFCからのすべての重要な変更は、付録G.に記載されています"
    },
    {
      "indent": 0,
      "text": "1.1 Overview of URI",
      "section_title": true,
      "ja": "URIの1.1の概要"
    },
    {
      "indent": 3,
      "text": "URI are characterized by the following definitions:",
      "ja": "URIは以下の定義によって特徴付けられます："
    },
    {
      "indent": 6,
      "text": "Uniform Uniformity provides several benefits: it allows different types of resource identifiers to be used in the same context, even when the mechanisms used to access those resources may differ; it allows uniform semantic interpretation of common syntactic conventions across different types of resource identifiers; it allows introduction of new types of resource identifiers without interfering with the way that existing identifiers are used; and, it allows the identifiers to be reused in many different contexts, thus permitting new applications or protocols to leverage a pre-existing, large, and widely-used set of resource identifiers.",
      "ja": "一様な均一性はいくつかの利点を提供する：それは、これらのリソースにアクセスするために使用されるメカニズムが異なる場合があっても、リソース識別子の異なるタイプが同じ文脈で使用されることを可能にします。それは、リソース識別子の異なるタイプに共通の構文規則の均一な意味解釈することができます。それは、既存の識別子が使用されている方法と干渉することなく、リソース識別子の新しいタイプの導入を可能にします。そして、それは、このようにリソース識別子の既存の、大規模な、そして広く使用されているセットを活用するために、新しいアプリケーションやプロトコルを許可する、識別子は、多くの異なる文脈で再利用することができます。"
    },
    {
      "indent": 6,
      "text": "Resource A resource can be anything that has identity. Familiar examples include an electronic document, an image, a service (e.g., \"today's weather report for Los Angeles\"), and a collection of other resources. Not all resources are network \"retrievable\"; e.g., human beings, corporations, and bound books in a library can also be considered resources.",
      "ja": "リソースはアイデンティティを持って何でもできるリソース。身近な例では、電子文書、画像、サービス（例えば、「ロサンゼルスのために今日の天気予報」）、およびその他のリソースの集合が含まれます。いないすべてのリソースがネットワーク「検索可能」です。例えば、ライブラリ内の人間、企業、および結合した本ものリソースとみなすことができます。"
    },
    {
      "indent": 9,
      "text": "The resource is the conceptual mapping to an entity or set of\nentities, not necessarily the entity which corresponds to that\nmapping at any particular instance in time.  Thus, a resource\ncan remain constant even when its content---the entities to\nwhich it currently corresponds---changes over time, provided\nthat the conceptual mapping is not changed in the process.",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Identifier An identifier is an object that can act as a reference to something that has identity. In the case of URI, the object is a sequence of characters with a restricted syntax.",
      "ja": "識別子を識別子のアイデンティティを持っているものを基準として動作することができるオブジェクトです。 URIの場合は、オブジェクトは、制限された構文を持つ文字列が表示されます。"
    },
    {
      "indent": 3,
      "text": "Having identified a resource, a system may perform a variety of operations on the resource, as might be characterized by such words as `access', `update', `replace', or `find attributes'.",
      "ja": "`アクセス、`更新「 `」属性を見つける`、またはを置換などの言葉で特徴づけられるようなリソースを識別すると、システムは、リソース上でさまざまな操作を行うことができます。"
    },
    {
      "indent": 0,
      "text": "1.2. URI, URL, and URN",
      "section_title": true,
      "ja": "1.2。 URI、URL、およびURN"
    },
    {
      "indent": 3,
      "text": "A URI can be further classified as a locator, a name, or both. The term \"Uniform Resource Locator\" (URL) refers to the subset of URI that identify resources via a representation of their primary access mechanism (e.g., their network \"location\"), rather than identifying the resource by name or by some other attribute(s) of that resource. The term \"Uniform Resource Name\" (URN) refers to the subset of URI that are required to remain globally unique and persistent even when the resource ceases to exist or becomes unavailable.",
      "ja": "URIはさらに、ロケータ、名前、またはその両方として分類することができます。用語「ユニフォームリソースロケータ」（URL）は、（例えば、それらのネットワーク「場所」）、リソースを特定するのではなく名前によって、または何らかの他の属性によってそのプライマリアクセスメカニズムの表現を介してリソースを特定するURIの部分集合を指し、（そのリソースの秒）。用語「ユニフォームリソース名」（URN）は、リソースが存在しなくなるか、使用不能になった場合でも、グローバルにユニークかつ永続的なままに要求されるURIのサブセットを指します。"
    },
    {
      "indent": 3,
      "text": "The URI scheme (Section 3.1) defines the namespace of the URI, and thus may further restrict the syntax and semantics of identifiers using that scheme. This specification defines those elements of the URI syntax that are either required of all URI schemes or are common to many URI schemes. It thus defines the syntax and semantics that are needed to implement a scheme-independent parsing mechanism for URI references, such that the scheme-dependent handling of a URI can be postponed until the scheme-dependent semantics are needed. We use the term URL below when describing syntax or semantics that only apply to locators.",
      "ja": "URIスキーム（3.1節）はURIの名前空間を定義し、したがって、さらにその方式を使用して識別子の構文およびセマンティクスを制限してもよいです。この仕様は、どちらかのすべてのURIスキームの必要や多くのURIスキームに共通しているされているURI構文のこれらの要素を定義します。したがって、スキーム依存のセマンティクスが必要になるまでURIのスキームに依存する処理を延期することができるようなURI参照のためのスキームに依存しない解析メカニズムを、実装するために必要な構文とセマンティクスを定義します。私たちは、ロケータに適用され、構文や意味を記述する際に、以下の用語のURLを使用します。"
    },
    {
      "indent": 3,
      "text": "Although many URL schemes are named after protocols, this does not imply that the only way to access the URL's resource is via the named protocol. Gateways, proxies, caches, and name resolution services might be used to access some resources, independent of the protocol of their origin, and the resolution of some URL may require the use of more than one protocol (e.g., both DNS and HTTP are typically used to access an \"http\" URL's resource when it can't be found in a local cache).",
      "ja": "多くのURLスキームはプロトコルにちなんで命名されているが、これはURLのリソースにアクセスするための唯一の方法は、名前のプロトコルを介してであることを意味するものではありません。ゲートウェイ、プロキシ、キャッシュ、および名前解決サービスは、その起源のプロトコルに依存しないいくつかのリソースにアクセスするために使用されるかもしれない、といくつかのURLの解像度は、複数のプロトコルの使用を必要とするかもしれない（例えば、DNSおよびHTTPの両方は、典型的にはそれがローカルキャッシュに見つからないとき）に「http」URLのリソースにアクセスするために使用されます。"
    },
    {
      "indent": 3,
      "text": "A URN differs from a URL in that it's primary purpose is persistent labeling of a resource with an identifier. That identifier is drawn from one of a set of defined namespaces, each of which has its own set name structure and assignment procedures. The \"urn\" scheme has been reserved to establish the requirements for a standardized URN namespace, as defined in \"URN Syntax\" [RFC2141] and its related specifications.",
      "ja": "識別子と資源の持続的な標識はURNはそのことの主な目的でのURLと異なっています。その識別子は、それ自身のセット名の構造及び割り当て手順をそれぞれ有する定義された名前空間のセット、のいずれかから引き出されます。 「URN構文」[RFC2141]及びその関連仕様書に定義されるような「URN」方式は、標準化されたURN名前空間のための要件を確立するために予約されています。"
    },
    {
      "indent": 3,
      "text": "Most of the examples in this specification demonstrate URL, since they allow the most varied use of the syntax and often have a hierarchical namespace. A parser of the URI syntax is capable of parsing both URL and URN references as a generic URI; once the scheme is determined, the scheme-specific parsing can be performed on the generic URI components. In other words, the URI syntax is a superset of the syntax of all URI schemes.",
      "ja": "彼らは、構文の最も多様な利用が可能となり、多くの場合、階層的な名前空間を持っているので、この仕様のほとんどの例では、URLを示しています。 URI構文のパーサは、一般的なURIとしての両方のURLとURNの参照を解析することができ、方式が決定されると、スキーマ固有の解析は、一般的なURIコンポーネント上で実行することができます。言い換えれば、URIの構文は、すべてのURIスキームの構文のスーパーセットです。"
    },
    {
      "indent": 0,
      "text": "1.3. Example URI",
      "section_title": true,
      "ja": "1.3。例URI"
    },
    {
      "indent": 3,
      "text": "The following examples illustrate URI that are in common use.",
      "ja": "次の例は、一般に使用されているURIを示しています。"
    },
    {
      "indent": 3,
      "text": "ftp://ftp.is.co.za/rfc/rfc1808.txt -- ftp scheme for File Transfer Protocol services",
      "ja": "ftp://ftp.is.co.za/rfc/rfc1808.txt  - ファイル転送プロトコルのサービスのためのftpスキーム"
    },
    {
      "indent": 3,
      "text": "gopher://spinaltap.micro.umn.edu/00/Weather/California/Los%20Angeles -- gopher scheme for Gopher and Gopher+ Protocol services",
      "ja": "ジリス：//spinaltap.micro.umn.edu/00/Weather/California/Los%20Angeles  - のGopherとGopherの+プロトコルのサービスのためのGopherスキーム"
    },
    {
      "indent": 3,
      "text": "http://www.math.uio.no/faq/compression-faq/part1.html -- http scheme for Hypertext Transfer Protocol services",
      "ja": "http://www.math.uio.no/faq/compression-faq/part1.html  - ハイパーテキスト転送プロトコルサービスのためのhttpスキーム"
    },
    {
      "indent": 3,
      "text": "mailto:mduerst@ifi.unizh.ch -- mailto scheme for electronic mail addresses",
      "ja": "mailto：mduerst@ifi.unizh.ch  - 電子メールアドレスのためのmailtoスキーム"
    },
    {
      "indent": 3,
      "text": "news:comp.infosystems.www.servers.unix -- news scheme for USENET news groups and articles",
      "ja": "ニュース：comp.infosystems.www.servers.unix  -  USENETニュースグループと記事のためのニューススキーム"
    },
    {
      "indent": 3,
      "text": "telnet://melvyl.ucop.edu/ -- telnet scheme for interactive services via the TELNET Protocol",
      "ja": "telnetの：//melvyl.ucop.edu/  -  TELNETプロトコルを介した双方向サービス用のtelnetスキーム"
    },
    {
      "indent": 0,
      "text": "1.4. Hierarchical URI and Relative Forms",
      "section_title": true,
      "ja": "1.4。階層URIと相対フォーム"
    },
    {
      "indent": 3,
      "text": "An absolute identifier refers to a resource independent of the context in which the identifier is used. In contrast, a relative identifier refers to a resource by describing the difference within a hierarchical namespace between the current context and an absolute identifier of the resource.",
      "ja": "絶対的識別子は識別子が使用されるコンテキストに依存しないリソースを指します。対照的に、相対的な識別子は、現在のコンテキスト及びリソースの絶対的識別子との間の階層的な名前空間内の差を説明することにより、リソースを指します。"
    },
    {
      "indent": 3,
      "text": "Some URI schemes support a hierarchical naming system, where the hierarchy of the name is denoted by a \"/\" delimiter separating the components in the scheme. This document defines a scheme-independent `relative' form of URI reference that can be used in conjunction with a `base' URI (of a hierarchical scheme) to produce another URI. The syntax of hierarchical URI is described in Section 3; the relative URI calculation is described in Section 5.",
      "ja": "いくつかのURIスキームは、名前の階層がスキームに成分を分離する「/」区切り文字で表記される階層的な命名システムをサポートしています。この文書は、別のURIを生成する（階層スキームの）URIスキームに依存し `相対「'塩基と組み合わせて使用​​することができるURI参照の形式を」定義します。階層URIの構文はセクション3に記載されています。相対URIの計算は、セクション5に記載されています。"
    },
    {
      "indent": 0,
      "text": "1.5. URI Transcribability",
      "section_title": true,
      "ja": "1.5。 URI Transcribability"
    },
    {
      "indent": 3,
      "text": "The URI syntax was designed with global transcribability as one of its main concerns. A URI is a sequence of characters from a very limited set, i.e. the letters of the basic Latin alphabet, digits, and a few special characters. A URI may be represented in a variety of ways: e.g., ink on paper, pixels on a screen, or a sequence of octets in a coded character set. The interpretation of a URI depends only on the characters used and not how those characters are represented in a network protocol.",
      "ja": "URIの構文は、その主な懸念事項の一つとして、グローバルtranscribabilityて設計されました。 URIは非常に限られたセットからの文字のシーケンス、すなわち、基本的なラテンアルファベット、数字の文字、およびいくつかの特殊文字です。 URIは、様々な方法で表すことができる：紙、スクリーン上の画素、または符号化された文字セット内のオクテットの順序で、例えば、インク。 URIの解釈は、それらの文字がネットワークプロトコルで表現されている方法を使用していない文字のみに依存します。"
    },
    {
      "indent": 3,
      "text": "The goal of transcribability can be described by a simple scenario. Imagine two colleagues, Sam and Kim, sitting in a pub at an international conference and exchanging research ideas. Sam asks Kim for a location to get more information, so Kim writes the URI for the research site on a napkin. Upon returning home, Sam takes out the napkin and types the URI into a computer, which then retrieves the information to which Kim referred.",
      "ja": "transcribabilityの目標は、単純なシナリオで記述することができます。 2人の同僚、サム・キム、国際会議でパブに座って、研究のアイデアの交換を想像してみてください。サムはより多くの情報を取得するための場所のキムを要求するので、キムはナプキンの研究サイトのURIを書き込みます。帰宅すると、サムはその後、キムが呼ばれた情報を取得し、コンピュータの中にナプキンや種類URIを取り出します。"
    },
    {
      "indent": 3,
      "text": "There are several design concerns revealed by the scenario:",
      "ja": "シナリオによって明らかにされたいくつかの設計上の問題があります。"
    },
    {
      "indent": 6,
      "text": "o A URI is a sequence of characters, which is not always represented as a sequence of octets.",
      "ja": "O URIは常にオクテットのシーケンスとして表現されていない文字の配列です。"
    },
    {
      "indent": 6,
      "text": "o A URI may be transcribed from a non-network source, and thus should consist of characters that are most likely to be able to be typed into a computer, within the constraints imposed by keyboards (and related input devices) across languages and locales.",
      "ja": "URIは、非ネットワークソースから転写することができるので、キーボード（及び関連する入力装置）によって課される制約内で、コンピュータに入力することができるようにする可能性が最も高い文字で構成する必要があり言語およびロケールを横切っO。"
    },
    {
      "indent": 6,
      "text": "o A URI often needs to be remembered by people, and it is easier for people to remember a URI when it consists of meaningful components.",
      "ja": "O URIは、多くの場合、人によって覚えする必要があり、意味のあるコンポーネントで構成されていたとき、人々はURIを覚えておくために簡単です。"
    },
    {
      "indent": 3,
      "text": "These design concerns are not always in alignment. For example, it is often the case that the most meaningful name for a URI component would require characters that cannot be typed into some systems. The ability to transcribe the resource identifier from one medium to another was considered more important than having its URI consist of the most meaningful of components. In local and regional contexts and with improving technology, users might benefit from being able to use a wider range of characters; such use is not defined in this document.",
      "ja": "これらの設計上の問題は一直線上に常にではありません。例えば、それは多くの場合、URIコンポーネントの最も意味のある名前にはいくつかのシステムに入力できない文字を必要とする場合です。別の媒体からリソース識別子を転写する能力は、そのURIは、構成要素の最も有意義で構成有するよりも重要であると考えられました。地元や地域の状況では、技術を向上させることで、ユーザーが文字の広い範囲を使用することができることから恩恵を受けるかもしれません。そのような使用は、この文書で定義されていません。"
    },
    {
      "indent": 0,
      "text": "1.6. Syntax Notation and Common Elements",
      "section_title": true,
      "ja": "1.6。構文記法と共通要素"
    },
    {
      "indent": 3,
      "text": "This document uses two conventions to describe and define the syntax for URI. The first, called the layout form, is a general description of the order of components and component separators, as in",
      "ja": "この文書では、URIの構文を説明し、定義するために2つの規則を使用しています。まず、レイアウトと呼ばれる形態は、同様に、コンポーネントとコンポーネントセパレータのオーダーの一般的な説明であります"
    },
    {
      "indent": 6,
      "text": "<first>/<second>;<third>?<fourth>",
      "ja": "<第一> / <第二>; <？第> <第4>"
    },
    {
      "indent": 3,
      "text": "The component names are enclosed in angle-brackets and any characters outside angle-brackets are literal separators. Whitespace should be ignored. These descriptions are used informally and do not define the syntax requirements.",
      "ja": "コンポーネント名は、角括弧で囲まれており、角括弧外の文字は、リテラルセパレータです。空白は無視されるべきです。これらの記述は、非公式に使用され、構文の要件を定義していません。"
    },
    {
      "indent": 3,
      "text": "The second convention is a BNF-like grammar, used to define the formal URI syntax. The grammar is that of [RFC822], except that \"|\" is used to designate alternatives. Briefly, rules are separated from definitions by an equal \"=\", indentation is used to continue a rule definition over more than one line, literals are quoted with \"\", parentheses \"(\" and \")\" are used to group elements, optional elements are enclosed in \"[\" and \"]\" brackets, and elements may be preceded with <n>* to designate n or more repetitions of the following element; n defaults to 0.",
      "ja": "第二条約は正式なURI構文を定義するために使用されるBNFに似た文法、です。 「|」文法ことを除いて、[RFC822]のものです選択肢を指定するために使用されます。簡潔には、ルールが等しいによって定義から分離されている「=」、インデントは複数行にわたってルール定義を継続するために使用され、リテラル「は、括弧「（」および「）」で引用された」グループ要素に使用される、任意要素は、「[」と「]」括弧で囲まれており、要素は<N> * nまたは次の要素の複数の繰り返し指定することが先行されてもよいです。 nは0にデフォルト設定されています。"
    },
    {
      "indent": 3,
      "text": "Unlike many specifications that use a BNF-like grammar to define the bytes (octets) allowed by a protocol, the URI grammar is defined in terms of characters. Each literal in the grammar corresponds to the character it represents, rather than to the octet encoding of that character in any particular coded character set. How a URI is represented in terms of bits and bytes on the wire is dependent upon the character encoding of the protocol used to transport it, or the charset of the document which contains it.",
      "ja": "プロトコルによって許さバイト（オクテット）を定義するBNFのような文法を使用する多くの仕様と異なり、URIの文法は文字で定義されています。文法内の各リテラルは、それが表す文字にではなく、任意の特定の符号化文字集合におけるその文字のオク​​テット符号化に対応します。 URIは、ワイヤ上のビット、バイトで表現されているどのようにそれを輸送するために使用されるプロトコル、またはそれを含む文書の文字セットの文字エンコーディングに依存します。"
    },
    {
      "indent": 3,
      "text": "The following definitions are common to many elements:",
      "ja": "以下の定義は、多くの要素に共通です。"
    },
    {
      "indent": 6,
      "text": "alpha = lowalpha | upalpha",
      "ja": "アルファ= lowalpha | upalpha"
    },
    {
      "indent": 6,
      "text": "lowalpha = \"a\" | \"b\" | \"c\" | \"d\" | \"e\" | \"f\" | \"g\" | \"h\" | \"i\" | \"j\" | \"k\" | \"l\" | \"m\" | \"n\" | \"o\" | \"p\" | \"q\" | \"r\" | \"s\" | \"t\" | \"u\" | \"v\" | \"w\" | \"x\" | \"y\" | \"z\"",
      "ja": "lowalpha = \"\" | \"B\" | \"C\" | \"D\" | \"E\" | \"F\" | \"G\" | \"H\" | \"I\" | \"J\" | \"K\" | \"L\" | \"M\" | \"n\" は| \"O\" | \"P\" | \"Q\" | \"R\" | \"S\" | \"T\" | \"U\" | \"V\" | \"W\" | \"X\" | \"Y\" | \"Z\""
    },
    {
      "indent": 6,
      "text": "upalpha = \"A\" | \"B\" | \"C\" | \"D\" | \"E\" | \"F\" | \"G\" | \"H\" | \"I\" | \"J\" | \"K\" | \"L\" | \"M\" | \"N\" | \"O\" | \"P\" | \"Q\" | \"R\" | \"S\" | \"T\" | \"U\" | \"V\" | \"W\" | \"X\" | \"Y\" | \"Z\"",
      "ja": "upalpha = \"A\" | \"B\" | \"C\" | \"D\" | \"E\" | \"F\" | \"G\" | \"H\" | \"I\" | \"J\" | \"K\" | \"L\" | \"M\" | \"N\" | \"O\" | \"P\" | \"Q\" | \"R\" | \"S\" | \"T\" | \"U\" | \"V\" | \"W\" | \"X\" | \"Y\" | \"Z\""
    },
    {
      "indent": 6,
      "text": "digit = \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\"",
      "ja": "桁= \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\""
    },
    {
      "indent": 6,
      "text": "alphanum = alpha | digit",
      "ja": "alphanum =アルファ|桁"
    },
    {
      "indent": 3,
      "text": "The complete URI syntax is collected in Appendix A.",
      "ja": "完全なURI構文は、付録Aに収集されます"
    },
    {
      "indent": 0,
      "text": "2. URI Characters and Escape Sequences",
      "section_title": true,
      "ja": "2. URI文字とエスケープシーケンス"
    },
    {
      "indent": 3,
      "text": "URI consist of a restricted set of characters, primarily chosen to aid transcribability and usability both in computer systems and in non-computer communications. Characters used conventionally as delimiters around URI were excluded. The restricted set of characters consists of digits, letters, and a few graphic symbols were chosen from those common to most of the character encodings and input facilities available to Internet users.",
      "ja": "URIは、文字の制限されたセットで構成され、主にコンピュータシステムに非コンピュータ通信の両方transcribabilityとユーザビリティを支援するために選ばれました。 URIの周りの区切り文字は除外されたような文字は、従来使用していました。文字の制限されたセットは、数字、英字、およびいくつかのグラフィックシンボルは、文字エンコーディングおよびインターネットユーザーに利用可能な入力機能のほとんどに共通するものから選択された構成されています。"
    },
    {
      "indent": 6,
      "text": "uric = reserved | unreserved | escaped",
      "ja": "尿=予約|予約されていません|エスケープ"
    },
    {
      "indent": 3,
      "text": "Within a URI, characters are either used as delimiters, or to represent strings of data (octets) within the delimited portions. Octets are either represented directly by a character (using the US-ASCII character for that octet [ASCII]) or by an escape encoding. This representation is elaborated below.",
      "ja": "URIの中に、文字がいずれかの区切り文字として使用され、または区切られた部分内のデータ（オクテット）の文字列を表すために。オクテットはどちらか（そのオクテットのためのUS-ASCII文字を使用して、[ASCII]）文字またはエスケープエンコーディングで直接表現されています。この表現は、以下詳述されます。"
    },
    {
      "indent": 0,
      "text": "2.1 URI and non-ASCII characters",
      "section_title": true,
      "ja": "2.1 URIと非ASCII文字"
    },
    {
      "indent": 3,
      "text": "The relationship between URI and characters has been a source of confusion for characters that are not part of US-ASCII. To describe the relationship, it is useful to distinguish between a \"character\" (as a distinguishable semantic entity) and an \"octet\" (an 8-bit byte). There are two mappings, one from URI characters to octets, and a second from octets to original characters:",
      "ja": "URIと文字の間の関係は、US-ASCIIの一部ではない文字の混乱の源となっています。関係を説明するために、（識別可能な意味論的エンティティのような）「文字」および「オクテット」（8ビットバイト）を区別することは有用です。 2つのマッピング、オクテットURI文字から1、およびオクテットから元の文字に2番目があります。"
    },
    {
      "indent": 3,
      "text": "URI character sequence->octet sequence->original character sequence",
      "ja": "URI文字配列 - >オクテット配列 - >元の文字列"
    },
    {
      "indent": 3,
      "text": "A URI is represented as a sequence of characters, not as a sequence of octets. That is because URI might be \"transported\" by means that are not through a computer network, e.g., printed on paper, read over the radio, etc.",
      "ja": "URIはないオクテットのシーケンスとして、文字の並びとして表現されます。 URI等のコンピュータネットワークを介していない手段、例えば、無線で読み取り、紙に印刷され、によって「輸送」されるかもしれないからです"
    },
    {
      "indent": 3,
      "text": "A URI scheme may define a mapping from URI characters to octets; whether this is done depends on the scheme. Commonly, within a delimited component of a URI, a sequence of characters may be used to represent a sequence of octets. For example, the character \"a\" represents the octet 97 (decimal), while the character sequence \"%\", \"0\", \"a\" represents the octet 10 (decimal).",
      "ja": "URIスキームはオクテットURI文字のマッピングを定義することができます。これが行われるかどうかはスキームに依存します。一般に、URIの区切りコンポーネント内、文字のシーケンスはオクテットのシーケンスを表すために使用されてもよいです。例えば、文字「A」オクテット97（10進数）を表し、文字列、一方、「％」は、「0」、「」オクテット10（10進数）を表します。"
    },
    {
      "indent": 3,
      "text": "There is a second translation for some resources: the sequence of octets defined by a component of the URI is subsequently used to represent a sequence of characters. A 'charset' defines this mapping. There are many charsets in use in Internet protocols. For example, UTF-8 [UTF-8] defines a mapping from sequences of octets to sequences of characters in the repertoire of ISO 10646.",
      "ja": "いくつかのリソースのための第2の翻訳があります：URIのコンポーネントによって定義されたオクテットのシーケンスが、その後の文字列を表すために使用されます。 「文字セット」は、このマッピングを定義します。インターネットプロトコルで使用されている多くの文字セットがあります。例えば、UTF-8 [UTF-8]は、ISO 10646のレパートリーにおける文字の配列にオクテットの配列からのマッピングを定義します。"
    },
    {
      "indent": 3,
      "text": "In the simplest case, the original character sequence contains only characters that are defined in US-ASCII, and the two levels of mapping are simple and easily invertible: each 'original character' is represented as the octet for the US-ASCII code for it, which is, in turn, represented as either the US-ASCII character, or else the \"%\" escape sequence for that octet.",
      "ja": "最も単純なケースでは、元の文字列は、US-ASCIIで定義されている文字のみが含まれ、マッピングの2つのレベルがシンプルかつ簡単に可逆です：それぞれのオリジナルキャラクターが「それのためのUS-ASCIIコードのオクテットとして表現されますであり、これは、今度は、US-ASCII文字、または他のそのオクテットのための「％」エスケープ・シーケンスのいずれかのように表さ。"
    },
    {
      "indent": 3,
      "text": "For original character sequences that contain non-ASCII characters, however, the situation is more difficult. Internet protocols that transmit octet sequences intended to represent character sequences are expected to provide some way of identifying the charset used, if there might be more than one [RFC2277]. However, there is currently no provision within the generic URI syntax to accomplish this identification. An individual URI scheme may require a single charset, define a default charset, or provide a way to indicate the charset used.",
      "ja": "非ASCII文字が含まれている元の文字列の場合は、しかし、状況はより困難です。文字シーケンスを表すように意図オクテットのシーケンスを送信するインターネット・プロトコルは、複数の[RFC2277]があるかもしれない場合は、使用文字セットを識別するいくつかの方法を提供することが期待されています。しかし、この識別を達成するために、一般的なURI構文内の規定は現在ありません。個々のURIスキームは、単一文字セットを必要とデフォルトの文字セットを定義する、または使用文字セットを示すための方法を提供することができます。"
    },
    {
      "indent": 3,
      "text": "It is expected that a systematic treatment of character encoding within URI will be developed as a future modification of this specification.",
      "ja": "URI内の文字エンコーディングの体系的な治療は、この仕様の今後の修正として開発されると予想されます。"
    },
    {
      "indent": 0,
      "text": "2.2. Reserved Characters",
      "section_title": true,
      "ja": "2.2。予約文字"
    },
    {
      "indent": 3,
      "text": "Many URI include components consisting of or delimited by, certain special characters. These characters are called \"reserved\", since their usage within the URI component is limited to their reserved purpose. If the data for a URI component would conflict with the reserved purpose, then the conflicting data must be escaped before forming the URI.",
      "ja": "多くのURIコンポーネントがからなるか、特定の特殊文字で区切られています。 URIコンポーネント内でのそれらの使用は、その予約された目的に限定されているので、これらの文字は、「予約済み」と呼ばれています。 URIコンポーネントのデータが予約目的と競合する場合には、矛盾するデータはURIを形成する前にエスケープする必要があります。"
    },
    {
      "indent": 6,
      "text": "reserved = \";\" | \"/\" | \"?\" | \":\" | \"@\" | \"&\" | \"=\" | \"+\" | \"$\" | \",\"",
      "ja": "=予約 \";\" | \"/\" | \"？\" | \"：\" | \"@\" | \"＆\" | \"=\" | \"+\" | \"$\" | \"\""
    },
    {
      "indent": 3,
      "text": "The \"reserved\" syntax class above refers to those characters that are allowed within a URI, but which may not be allowed within a particular component of the generic URI syntax; they are used as delimiters of the components described in Section 3.",
      "ja": "「予約」構文クラスは、上記URI内で許可されているこれらの文字を意味するが、これは、一般的なURI構文の特定のコンポーネント内で許可されなくてもよいです。彼らは、セクション3で説明した構成要素の区切り文字として使用されています。"
    },
    {
      "indent": 3,
      "text": "Characters in the \"reserved\" set are not reserved in all contexts. The set of characters actually reserved within any given URI component is defined by that component. In general, a character is reserved if the semantics of the URI changes if the character is replaced with its escaped US-ASCII encoding.",
      "ja": "「予約」セットの文字は、すべてのコンテキストで予約されていません。実際に任意のURIコンポーネント内に予約文字の集合は、その成分によって定義されます。一般的には、文字は文字がエスケープUS-ASCIIエンコーディングに置き換えている場合は、URIのセマンティクスが変更された場合に予約されています。"
    },
    {
      "indent": 0,
      "text": "2.3. Unreserved Characters",
      "section_title": true,
      "ja": "2.3。非予約文字"
    },
    {
      "indent": 3,
      "text": "Data characters that are allowed in a URI but do not have a reserved purpose are called unreserved. These include upper and lower case letters, decimal digits, and a limited set of punctuation marks and symbols.",
      "ja": "URIで許可されていますが予約の目的を持っていないデータ文字は予約されていないと呼ばれています。これらは、大文字と小文字、桁、および句読点や記号の限られたセットを含みます。"
    },
    {
      "indent": 6,
      "text": "unreserved = alphanum | mark",
      "ja": "予約されていない= alphanum |マーク"
    },
    {
      "indent": 6,
      "text": "mark = \"-\" | \"_\" | \".\" | \"!\" | \"~\" | \"*\" | \"'\" | \"(\" | \")\"",
      "ja": "マーク= \" - \" | \"_\" | \"\" | \"！\" | \"〜\" | \"*\" | \"'\" | \"（\" | \"）\""
    },
    {
      "indent": 3,
      "text": "Unreserved characters can be escaped without changing the semantics of the URI, but this should not be done unless the URI is being used in a context that does not allow the unescaped character to appear.",
      "ja": "非予約文字は、URIのセマンティクスを変更せずにエスケープすることができますが、URIはエスケープ文字が表示されるように許可していないコンテキストで使用されていない限り、これは行うべきではありません。"
    },
    {
      "indent": 0,
      "text": "2.4. Escape Sequences",
      "section_title": true,
      "ja": "2.4。エスケープシーケンス"
    },
    {
      "indent": 3,
      "text": "Data must be escaped if it does not have a representation using an unreserved character; this includes data that does not correspond to a printable character of the US-ASCII coded character set, or that corresponds to any US-ASCII character that is disallowed, as explained below.",
      "ja": "それは予約されていない文字を使って表現を持っていない場合、データはエスケープする必要があります。これは、US-ASCII符号化文字セットの印刷可能な文字に対応しないデータを含む、またはそれは、以下に説明するように、禁止されている任意のUS-ASCII文字に対応しています。"
    },
    {
      "indent": 0,
      "text": "2.4.1. Escaped Encoding",
      "section_title": true,
      "ja": "2.4.1。エスケープされたエンコーディング"
    },
    {
      "indent": 3,
      "text": "An escaped octet is encoded as a character triplet, consisting of the percent character \"%\" followed by the two hexadecimal digits representing the octet code. For example, \"%20\" is the escaped encoding for the US-ASCII space character.",
      "ja": "エスケープオクテットは、オクテットコードを表す2桁の16進数が続くパーセント文字「％」からなる文字トリプレットとして符号化されます。たとえば、「％20」は、US-ASCIIスペース文字のエスケープエンコーディングです。"
    },
    {
      "indent": 6,
      "text": "escaped = \"%\" hex hex hex = digit | \"A\" | \"B\" | \"C\" | \"D\" | \"E\" | \"F\" | \"a\" | \"b\" | \"c\" | \"d\" | \"e\" | \"f\"",
      "ja": "エスケープ=「％」の六角六角六角=数字| \"A\" | \"B\" | \"C\" | \"D\" | \"E\" | \"F\" | 「」| \"B\" | \"C\" | \"D\" | \"E\" | \"F\""
    },
    {
      "indent": 0,
      "text": "2.4.2. When to Escape and Unescape",
      "section_title": true,
      "ja": "2.4.2。ときにエスケープとアンエスケープします"
    },
    {
      "indent": 3,
      "text": "A URI is always in an \"escaped\" form, since escaping or unescaping a completed URI might change its semantics. Normally, the only time escape encodings can safely be made is when the URI is being created from its component parts; each component may have its own set of characters that are reserved, so only the mechanism responsible for generating or interpreting that component can determine whether or not escaping a character will change its semantics. Likewise, a URI must be separated into its components before the escaped characters within those components can be safely decoded.",
      "ja": "URIはエスケープまたは完了URIは、その意味を変えるかもしれないアンエスケープするので、「エスケープ」の形で常にあります。 URIは、その構成部品から作成されている場合、通常、エスケープエンコーディングを安全に行うことができる唯一の時間です。その成分を生成または解釈する責任唯一のメカニズムは、その意味を変更します文字をエスケープするかどうかを判断することができるように、各コンポーネントは、予約されている文字の独自のセットを有することができます。これらのコンポーネント内のエスケープ文字は安全にデコードすることができる前に、同様に、URIは、その成分に分離する必要があります。"
    },
    {
      "indent": 3,
      "text": "In some cases, data that could be represented by an unreserved character may appear escaped; for example, some of the unreserved \"mark\" characters are automatically escaped by some systems. If the given URI scheme defines a canonicalization algorithm, then unreserved characters may be unescaped according to that algorithm. For example, \"%7e\" is sometimes used instead of \"~\" in an http URL path, but the two are equivalent for an http URL.",
      "ja": "いくつかのケースでは、予約されていない文字で表すことができるデータがエスケープ表示されることがあります。例えば、予約されていない「マーク」の文字の一部が自動的にいくつかのシステムでエスケープされています。与えられたURIスキームは、正規化アルゴリズムを定義した場合、非予約文字は、そのアルゴリズムに従ってエスケープを解除することができます。たとえば、「％7eが」時々のhttp URLパスに「〜」の代わりに使用されますが、2は、http URLに対して等価です。"
    },
    {
      "indent": 3,
      "text": "Because the percent \"%\" character always has the reserved purpose of being the escape indicator, it must be escaped as \"%25\" in order to be used as data within a URI. Implementers should be careful not to escape or unescape the same string more than once, since unescaping an already unescaped string might lead to misinterpreting a percent data character as another escaped character, or vice versa in the case of escaping an already escaped string.",
      "ja": "パーセント「％」文字は常にエスケープ指標であることの予約された目的を持っているので、それはURI内のデータとして使用するためには「％25」としてエスケープする必要があります。他はすでにエスケープされた文字列をエスケープする場合には、文字、またはその逆を免れたとして、既にエスケープされていない文字列をアンエスケープすると、パーセントのデータ文字を誤って解釈につながる可能性があるため、実装者は、複数回エスケープするか、同じ文字列をアンエスケープしないように注意する必要があります。"
    },
    {
      "indent": 0,
      "text": "2.4.3. Excluded US-ASCII Characters",
      "section_title": true,
      "ja": "2.4.3。除外されたUS-ASCII文字"
    },
    {
      "indent": 3,
      "text": "Although they are disallowed within the URI syntax, we include here a description of those US-ASCII characters that have been excluded and the reasons for their exclusion.",
      "ja": "彼らはURI構文内禁止されていますが、ここでは除外されているものをUS-ASCII文字の説明とその除外の理由があります。"
    },
    {
      "indent": 3,
      "text": "The control characters in the US-ASCII coded character set are not used within a URI, both because they are non-printable and because they are likely to be misinterpreted by some control mechanisms.",
      "ja": "彼らは非印字されている両方のために、彼らはいくつかの制御機構によって誤解される可能性が高いので、US-ASCII符号化文字集合での制御文字は、URI内で使用されていません。"
    },
    {
      "indent": 3,
      "text": "control = <US-ASCII coded characters 00-1F and 7F hexadecimal>",
      "ja": "コントロール= <US-ASCIIコード化された文字00〜1Fと7F進数>"
    },
    {
      "indent": 3,
      "text": "The space character is excluded because significant spaces may disappear and insignificant spaces may be introduced when URI are transcribed or typeset or subjected to the treatment of word-processing programs. Whitespace is also used to delimit URI in many contexts.",
      "ja": "大きなスペースが消える可能性があるため、空白文字が除外され、URIが転写またはタイプセットまたはワード処理プログラムの処理を行っている際に重要でないスペースが導入されてもよいです。空白はまた、多くの状況でURIを区切るために使用されます。"
    },
    {
      "indent": 3,
      "text": "space = <US-ASCII coded character 20 hexadecimal>",
      "ja": "スペース= <US-ASCIIコード文字20進数>"
    },
    {
      "indent": 3,
      "text": "The angle-bracket \"<\" and \">\" and double-quote (\") characters are excluded because they are often used as the delimiters around URI in text documents and protocol fields. The character \"#\" is excluded because it is used to delimit a URI from a fragment identifier in URI references (Section 4). The percent character \"%\" is excluded because it is used for the encoding of escaped characters.",
      "ja": "角括弧「<」と「>」と二重引用符（ \"）彼らは多くの場合、テキスト文書やプロトコルフィールドにおけるURIの周りの区切り文字として使用されているので、文字が除外されている。文字『それが使用されているので、＃』が除外されていますそれはエスケープ文字の符号化に使用されているため、URI参照（セクション4）におけるフラグメント識別子からURIを区切る。パーセント文字「％」は除外されます。"
    },
    {
      "indent": 3,
      "text": "delims = \"<\" | \">\" | \"#\" | \"%\" | <\">",
      "ja": "delims = \"<\" | \">\" | \"＃\" | \"％\" | <「>"
    },
    {
      "indent": 3,
      "text": "Other characters are excluded because gateways and other transport agents are known to sometimes modify such characters, or they are used as delimiters.",
      "ja": "ゲートウェイや他のトランスポートエージェントが、時にはそのような文字を変更することが知られているので、他の文字は除外されている、またはそれらを区切り文字として使用されています。"
    },
    {
      "indent": 3,
      "text": "unwise = \"{\" | \"}\" | \"|\" | \"\\\" | \"^\" | \"[\" | \"]\" | \"`\"",
      "ja": "賢明= \"{\" | \"}\" | \"|\" | \"\\\" | \"^\" | \"[\" | \"]\" | \"`\""
    },
    {
      "indent": 3,
      "text": "Data corresponding to excluded characters must be escaped in order to be properly represented within a URI.",
      "ja": "除外された文字に対応するデータは適切にURIの中に表現されるためにエスケープする必要があります。"
    },
    {
      "indent": 0,
      "text": "3. URI Syntactic Components",
      "section_title": true,
      "ja": "3. URI構文コンポーネント"
    },
    {
      "indent": 3,
      "text": "The URI syntax is dependent upon the scheme. In general, absolute URI are written as follows:",
      "ja": "URIの構文はスキームに依存しています。次のように一般的には、絶対URIが書かれています。"
    },
    {
      "indent": 6,
      "text": "<scheme>:<scheme-specific-part>",
      "ja": "<スキーム>：<スキーム固有の部分>"
    },
    {
      "indent": 3,
      "text": "An absolute URI contains the name of the scheme being used (<scheme>) followed by a colon (\":\") and then a string (the <scheme-specific-part>) whose interpretation depends on the scheme.",
      "ja": "次に、その解釈スキームに依存する文字列（<スキーム固有部分>）：絶対URIは、コロン（「」）に続いて使用されているスキームの名前を（<スキーム>）を含みます。"
    },
    {
      "indent": 3,
      "text": "The URI syntax does not require that the scheme-specific-part have any general structure or set of semantics which is common among all URI. However, a subset of URI do share a common syntax for representing hierarchical relationships within the namespace. This \"generic URI\" syntax consists of a sequence of four main components:",
      "ja": "URIの構文は、スキーム固有の部分は、すべてのURIの間で共通である任意の一般的な構造や意味のセットを持っている必要はありません。しかし、URIのサブセットは、名前空間内の階層関係を表現するための共通構文を共有してください。この「一般的なURI」構文は、4つの主要コンポーネントのシーケンスで構成されています。"
    },
    {
      "indent": 6,
      "text": "<scheme>://<authority><path>?<query>",
      "ja": "<スキーム>：// <オーソリティ> <パス> <問い合わせ>"
    },
    {
      "indent": 3,
      "text": "each of which, except <scheme>, may be absent from a particular URI. For example, some URI schemes do not allow an <authority> component, and others do not use a <query> component.",
      "ja": "<スキーム>除くこれらの各々は、特定のURIから存在しなくてもよいです。例えば、いくつかのURIスキームは<権威>コンポーネントを許可しない、などが<問い合わせ>コンポーネントを使用しないでください。"
    },
    {
      "indent": 6,
      "text": "absoluteURI = scheme \":\" ( hier_part | opaque_part )",
      "ja": "absoluteURIで=スキーム \"：\"（hier_part | opaque_part）"
    },
    {
      "indent": 3,
      "text": "URI that are hierarchical in nature use the slash \"/\" character for separating hierarchical components. For some file systems, a \"/\" character (used to denote the hierarchical structure of a URI) is the delimiter used to construct a file name hierarchy, and thus the URI path will look similar to a file pathname. This does NOT imply that the resource is a file or that the URI maps to an actual filesystem pathname.",
      "ja": "自然の中で階層的であるURIは、階層的な成分を分離するためのスラッシュ「/」文字を使用します。一部のファイルシステムでは、（URIの階層構造を示すために使用される）、「/」の文字は、ファイル名の階層を構築するために使用される区切り文字であるため、URIのパスは、ファイルのパス名のようになります。これは、リソースがファイルであることやURIは、実際のファイルシステムのパス名にマップすることを意味するものではありません。"
    },
    {
      "indent": 6,
      "text": "hier_part = ( net_path | abs_path ) [ \"?\" query ]",
      "ja": "hier_part =（net_path |腹筋_経路）[ \"？\"クエリ]"
    },
    {
      "indent": 6,
      "text": "net_path = \"//\" authority [ abs_path ]",
      "ja": "net_path = \"//\" 権威[腹筋_経路]"
    },
    {
      "indent": 6,
      "text": "abs_path = \"/\" path_segments",
      "ja": "腹筋_経路= \"/\" path_segments"
    },
    {
      "indent": 3,
      "text": "URI that do not make use of the slash \"/\" character for separating hierarchical components are considered opaque by the generic URI parser.",
      "ja": "階層的な成分を分離するためにスラッシュ「/」文字を使用しないURIは、一般的なURIパーサによって不透明と考えられています。"
    },
    {
      "indent": 6,
      "text": "opaque_part = uric_no_slash *uric",
      "ja": "opaque_part = uric_no_slash *尿"
    },
    {
      "indent": 6,
      "text": "uric_no_slash = unreserved | escaped | \";\" | \"?\" | \":\" | \"@\" | \"&\" | \"=\" | \"+\" | \"$\" | \",\"",
      "ja": "uric_no_slash =予約されていません|エスケープ| \";\" | \"？\" | \"：\" | \"@\" | \"＆\" | \"=\" | \"+\" | \"$\" | \"\""
    },
    {
      "indent": 3,
      "text": "We use the term <path> to refer to both the <abs_path> and <opaque_part> constructs, since they are mutually exclusive for any given URI and can be parsed as a single component.",
      "ja": "我々は、彼らは、任意のURIのために相互に排他的であり、単一の構成要素として解析することができるので、両方の<腹筋_経路>と<opaque_part>構築物を指すために用語の<path>を使用します。"
    },
    {
      "indent": 0,
      "text": "3.1. Scheme Component",
      "section_title": true,
      "ja": "3.1。スキームコンポーネント"
    },
    {
      "indent": 3,
      "text": "Just as there are many different methods of access to resources, there are a variety of schemes for identifying such resources. The URI syntax consists of a sequence of components separated by reserved characters, with the first component defining the semantics for the remainder of the URI string.",
      "ja": "リソースへのアクセスの多くの異なる方法があるのと同様に、そのようなリソースを識別するための様々なスキームがあります。 URIの構文は、URIストリングの残りのセマンティクスを定義する第1の成分と、予約文字によって分離された成分の配列からなります。"
    },
    {
      "indent": 3,
      "text": "Scheme names consist of a sequence of characters beginning with a lower case letter and followed by any combination of lower case letters, digits, plus (\"+\"), period (\".\"), or hyphen (\"-\"). For resiliency, programs interpreting URI should treat upper case letters as equivalent to lower case in scheme names (e.g., allow \"HTTP\" as well as \"http\").",
      "ja": "スキーム名は小文字で始まり、小文字、数字の任意の組み合わせに続いて、プラス（「+」）、ピリオド（「 『）、またはハイフン（』  - 」）文字の配列からなります。弾力性のために、URIを解釈するプログラムはスキーム名に小文字と同等として大文字を扱うべきである（例えば、「HTTP」ならびに「HTTP」を可能にします）。"
    },
    {
      "indent": 6,
      "text": "scheme = alpha *( alpha | digit | \"+\" | \"-\" | \".\" )",
      "ja": "スキーム=アルファ*（アルファ|数字| \"+\" | \" - \" | \"\"）"
    },
    {
      "indent": 3,
      "text": "Relative URI references are distinguished from absolute URI in that they do not begin with a scheme name. Instead, the scheme is inherited from the base URI, as described in Section 5.2.",
      "ja": "彼らはスキーム名で始まらないという点で、相対URI参照は絶対URIと区別されています。セクション5.2で説明したように代わりに、スキームは、基底URIから継承されています。"
    },
    {
      "indent": 0,
      "text": "3.2. Authority Component",
      "section_title": true,
      "ja": "3.2。権限コンポーネント"
    },
    {
      "indent": 3,
      "text": "Many URI schemes include a top hierarchical element for a naming authority, such that the namespace defined by the remainder of the URI is governed by that authority. This authority component is typically defined by an Internet-based server or a scheme-specific registry of naming authorities.",
      "ja": "多くのURIスキームは、URIの残りの部分で定義された名前空間はその機関によって支配されるように、命名機関のトップの階層の要素が含まれます。この権限コンポーネントは、一般的にインターネットベースのサーバーまたは命名当局のスキーム固有のレジストリで定義されています。"
    },
    {
      "indent": 6,
      "text": "authority = server | reg_name",
      "ja": "権威=サーバー| reg_name"
    },
    {
      "indent": 3,
      "text": "The authority component is preceded by a double slash \"//\" and is terminated by the next slash \"/\", question-mark \"?\", or by the end of the URI. Within the authority component, the characters \";\", \":\", \"@\", \"?\", and \"/\" are reserved.",
      "ja": "権限コンポーネントは、「//」ダブルスラッシュが先行すると、次のスラッシュ「/」、疑問符で終了し、「？」、あるいはURIの終わりまでに。権限コンポーネント内では、文字 \";\"、 \"：\"、 \"@\"、および \"/\" に予約されています \"？\"。"
    },
    {
      "indent": 3,
      "text": "An authority component is not required for a URI scheme to make use of relative references. A base URI without an authority component implies that any relative reference will also be without an authority component.",
      "ja": "権限コンポーネントは、相対参照を使用するためにURIスキームのために必要とされていません。権限コンポーネントなしのベースURIは、任意の相対的な基準も権限コンポーネントなしであろうことを意味します。"
    },
    {
      "indent": 0,
      "text": "3.2.1. Registry-based Naming Authority",
      "section_title": true,
      "ja": "3.2.1。レジストリベースの命名機関"
    },
    {
      "indent": 3,
      "text": "The structure of a registry-based naming authority is specific to the URI scheme, but constrained to the allowed characters for an authority component.",
      "ja": "レジストリベース命名機関の構造は、URIスキームに固有のものですが、権限コンポーネントのために使用できる文字に制限します。"
    },
    {
      "indent": 6,
      "text": "reg_name = 1*( unreserved | escaped | \"$\" | \",\" | \";\" | \":\" | \"@\" | \"&\" | \"=\" | \"+\" )",
      "ja": "reg_name = 1 *（予約されていない|エスケープ| \"$\" | \"\" | \";\" | \"：\" | \"@\" | \"＆\" | \"=\" | \"+\"）"
    },
    {
      "indent": 0,
      "text": "3.2.2. Server-based Naming Authority",
      "section_title": true,
      "ja": "3.2.2。サーバーベースの命名機関"
    },
    {
      "indent": 3,
      "text": "URL schemes that involve the direct use of an IP-based protocol to a specified server on the Internet use a common syntax for the server component of the URI's scheme-specific data:",
      "ja": "インターネット上の指定されたサーバへのIPベースのプロトコルを直接使用することを含むURLスキームは、URIのスキーム固有のデータのサーバー・コンポーネントのための共通の構文を使用します。"
    },
    {
      "indent": 6,
      "text": "<userinfo>@<host>:<port>",
      "ja": "<のuserinfo> @ <ホスト>：<ポート>"
    },
    {
      "indent": 3,
      "text": "where <userinfo> may consist of a user name and, optionally, scheme-specific information about how to gain authorization to access the server. The parts \"<userinfo>@\" and \":<port>\" may be omitted.",
      "ja": "ここで、<ユーザー情報>は、ユーザー名とサーバーにアクセスする権限を取得する方法については、必要に応じて、スキーム固有の情報から構成されてもよいです。部品 \"<のuserinfo> @\" と \"：<ポート>\" は省略することができます。"
    },
    {
      "indent": 6,
      "text": "server = [ [ userinfo \"@\" ] hostport ]",
      "ja": "サーバー= [[userinfoを \"@\"]ホスト側]"
    },
    {
      "indent": 3,
      "text": "The user information, if present, is followed by a commercial at-sign \"@\".",
      "ja": "ユーザー情報は、存在する場合、アットマーク商用続いて「@」。"
    },
    {
      "indent": 6,
      "text": "userinfo = *( unreserved | escaped | \";\" | \":\" | \"&\" | \"=\" | \"+\" | \"$\" | \",\" )",
      "ja": "userinfo = *（予約されていない|エスケープ| \";\" | \"：\" | \"＆\" | \"=\" | \"+\" | \"$\" | \"\"）"
    },
    {
      "indent": 3,
      "text": "Some URL schemes use the format \"user:password\" in the userinfo field. This practice is NOT RECOMMENDED, because the passing of authentication information in clear text (such as URI) has proven to be a security risk in almost every case where it has been used.",
      "ja": "UserInfoフィールドに：「パスワードのユーザー」一部のURLスキームはフォーマットを使用します。 （URIなど）クリアテキストでの認証情報の受け渡しは、それが使用されているほぼすべてのケースではセキュリティ上のリスクがあることが証明されているので、このような行為は、推奨されません。"
    },
    {
      "indent": 3,
      "text": "The host is a domain name of a network host, or its IPv4 address as a set of four decimal digit groups separated by \".\". Literal IPv6 addresses are not supported.",
      "ja": "ホストは、ネットワークホスト、またはで区切られた4つの10進数グループのセットとしてのIPv4アドレスのドメイン名です「」。リテラルIPv6アドレスはサポートされていません。"
    },
    {
      "indent": 6,
      "text": "hostport = host [ \":\" port ] host = hostname | IPv4address hostname = *( domainlabel \".\" ) toplabel [ \".\" ] domainlabel = alphanum | alphanum *( alphanum | \"-\" ) alphanum toplabel = alpha | alpha *( alphanum | \"-\" ) alphanum",
      "ja": "ホスト側=ホスト[ \"：\" ポート]ホスト=ホスト名| IPv4Addressをホスト名= *（domainlabel \"\"）toplabelの[ \"\" ] domainlabel = alphanum | alphanum *（alphanum | \" - \"）alphanum toplabel =アルファ|アルファ*（alphanum | \" - \"）alphanum"
    },
    {
      "indent": 6,
      "text": "IPv4address = 1*digit \".\" 1*digit \".\" 1*digit \".\" 1*digit port = *digit",
      "ja": "IPv4Addressを= 1 *数字 \"\" 1 *数字 \"\" 1 *数字 \"\" 1 * 2桁のポート= *桁"
    },
    {
      "indent": 3,
      "text": "Hostnames take the form described in Section 3 of [RFC1034] and Section 2.1 of [RFC1123]: a sequence of domain labels separated by \".\", each domain label starting and ending with an alphanumeric character and possibly also containing \"-\" characters. The rightmost domain label of a fully qualified domain name will never start with a digit, thus syntactically distinguishing domain names from IPv4 addresses, and may be followed by a single \".\" if it is necessary to distinguish between the complete domain name and any local domain. To actually be \"Uniform\" as a resource locator, a URL hostname should be a fully qualified domain name. In practice, however, the host component may be a local domain literal.",
      "ja": "ホスト名は、[RFC1034]及び[RFC1123]のセクション2.1のセクション3に記載の形取る：で区切られたドメインラベルのシーケンスを、各ドメインラベルが起動し、英数字で終わる、おそらくも含む 『 - 』の文字を「」。完全修飾ドメイン名の一番右のドメインラベルは、IPv4アドレスから区別ドメイン名したがって文法的に、数字で始まることはありませんし、単一が続くことがあり、「」完全なドメイン名と任意のローカルドメインを区別する必要がある場合。実際にリソースロケータとして「制服」であるためには、URLのホスト名が完全修飾ドメイン名でなければなりません。しかし、実際には、ホストコンポーネントは、ローカルドメインリテラルであってもよいです。"
    },
    {
      "indent": 6,
      "text": "Note: A suitable representation for including a literal IPv6 address as the host part of a URL is desired, but has not yet been determined or implemented in practice.",
      "ja": "注：URLのホスト部としてリテラルIPv6アドレスを含むのに適した表現が望まれているが、まだ実際に決定され、または実装されていません。"
    },
    {
      "indent": 3,
      "text": "The port is the network port number for the server. Most schemes designate protocols that have a default port number. Another port number may optionally be supplied, in decimal, separated from the host by a colon. If the port is omitted, the default port number is assumed.",
      "ja": "ポートは、サーバのネットワークポート番号です。ほとんどのスキームは、デフォルトのポート番号を持っているプロトコルを指定します。別のポート番号は、必要に応じてコロンでホストから分離し、小数で、供給することができます。ポートが省略された場合、デフォルトのポート番号が想定されます。"
    },
    {
      "indent": 0,
      "text": "3.3. Path Component",
      "section_title": true,
      "ja": "3.3。パスコンポーネント"
    },
    {
      "indent": 3,
      "text": "The path component contains data, specific to the authority (or the scheme if there is no authority component), identifying the resource within the scope of that scheme and authority.",
      "ja": "パスコンポーネントは、その方式及び権限の範囲内でリソースを識別する、（無権限コンポーネントが存在しない場合又はスキーム）権限に特定のデータを含みます。"
    },
    {
      "indent": 6,
      "text": "path = [ abs_path | opaque_part ]",
      "ja": "パス= [腹筋_経路| opaque_part]"
    },
    {
      "indent": 6,
      "text": "path_segments = segment *( \"/\" segment ) segment = *pchar *( \";\" param ) param = *pchar",
      "ja": "path_segments =セグメント*（ \"/\" セグメント）セグメント= * PChar型*（ \";\" PARAM）PARAM = * PChar型"
    },
    {
      "indent": 6,
      "text": "pchar = unreserved | escaped | \":\" | \"@\" | \"&\" | \"=\" | \"+\" | \"$\" | \",\"",
      "ja": "PChar型=予約されていません|エスケープ| \"：\" | \"@\" | \"＆\" | \"=\" | \"+\" | \"$\" | \"\""
    },
    {
      "indent": 3,
      "text": "The path may consist of a sequence of path segments separated by a single slash \"/\" character. Within a path segment, the characters \"/\", \";\", \"=\", and \"?\" are reserved. Each path segment may include a sequence of parameters, indicated by the semicolon \";\" character. The parameters are not significant to the parsing of relative references.",
      "ja": "パスは、単一のスラッシュ「/」文字で区切られたパスセグメントの配列からなることができます。経路セグメント内で、文字 \"/\"、 \";\"、 \"？\"、 \"=\"、及び予約されています。各パスセグメントは、セミコロンによって示されるパラメータの配列を含んでいてもよいです「;」キャラクター。パラメータは、相対参照の構文解析に重要ではありません。"
    },
    {
      "indent": 0,
      "text": "3.4. Query Component",
      "section_title": true,
      "ja": "3.4。クエリコンポーネント"
    },
    {
      "indent": 3,
      "text": "The query component is a string of information to be interpreted by the resource.",
      "ja": "クエリコンポーネントは、情報の文字列はリソースによって解釈されるべきです。"
    },
    {
      "indent": 6,
      "text": "query = *uric",
      "ja": "クエリ= *尿"
    },
    {
      "indent": 3,
      "text": "Within a query component, the characters \";\", \"/\", \"?\", \":\", \"@\", \"&\", \"=\", \"+\", \",\", and \"$\" are reserved.",
      "ja": "クエリコンポーネントの中で、文字 \";\"、 \"/\"、 \"：\"、 \"@\"、 \"＆\"、 \"=\"、 \"+\"、 \"\"、および \"$\" 予約されています \"？\"。"
    },
    {
      "indent": 0,
      "text": "4. URI References",
      "section_title": true,
      "ja": "4. URI参照"
    },
    {
      "indent": 3,
      "text": "The term \"URI-reference\" is used here to denote the common usage of a resource identifier. A URI reference may be absolute or relative, and may have additional information attached in the form of a fragment identifier. However, \"the URI\" that results from such a reference includes only the absolute URI after the fragment identifier (if any) is removed and after any relative URI is resolved to its absolute form. Although it is possible to limit the discussion of URI syntax and semantics to that of the absolute result, most usage of URI is within general URI references, and it is impossible to obtain the URI from such a reference without also parsing the fragment and resolving the relative form.",
      "ja": "用語「URI参照は、」リソース識別子の一般的な使用法を示すためにここで使用されます。 URI参照は、絶対的または相対的であってもよく、フラグメント識別子の形で取り付けられた付加情報を有していてもよいです。しかしながら、そのような基準から生じる「URI」が除去される断片識別子（もしあれば）の後に、任意の相対URIは、その絶対形式に解決された後にのみ、絶対URIを含んでいます。絶対的な結果のものにURIの構文およびセマンティクスの議論を制限することは可能であるが、URIの最も使用量は、一般的なURI参照内にあり、また、断片を解析し、解決することなく、そのような基準からURIを取得することは不可能です相対的なフォーム。"
    },
    {
      "indent": 6,
      "text": "URI-reference = [ absoluteURI | relativeURI ] [ \"#\" fragment ]",
      "ja": "URI参照= [absoluteURIで| relativeURI] [ \"＃\" フラグメント]"
    },
    {
      "indent": 3,
      "text": "The syntax for relative URI is a shortened form of that for absolute URI, where some prefix of the URI is missing and certain path components (\".\" and \"..\") have a special meaning when, and only when, interpreting a relative path. The relative URI syntax is defined in Section 5.",
      "ja": "相対URIの構文はURIの一部の接頭辞が欠落している絶対URI、および特定のパスコンポーネントのその短縮形である（「」および「..」）相対解釈、ときにのみときに特別な意味を持ち、そして道。相対URIの構文はセクション5で定義されています。"
    },
    {
      "indent": 0,
      "text": "4.1. Fragment Identifier",
      "section_title": true,
      "ja": "4.1。フラグメント識別子"
    },
    {
      "indent": 3,
      "text": "When a URI reference is used to perform a retrieval action on the identified resource, the optional fragment identifier, separated from the URI by a crosshatch (\"#\") character, consists of additional reference information to be interpreted by the user agent after the retrieval action has been successfully completed. As such, it is not part of a URI, but is often used in conjunction with a URI.",
      "ja": "URI参照が識別されたリソース上で検索動作を実行するために使用される場合、クロスハッチ（「＃」）文字でURIから分離任意フラグメント識別子は、検索した後、ユーザエージェントによって解釈されるべき追加の参照情報から構成されアクションが正常に完了しました。このように、それは、URIの一部ではありませんが、多くの場合、URIと組み合わせて使用​​されます。"
    },
    {
      "indent": 6,
      "text": "fragment = *uric",
      "ja": "フラグメント= *尿"
    },
    {
      "indent": 3,
      "text": "The semantics of a fragment identifier is a property of the data resulting from a retrieval action, regardless of the type of URI used in the reference. Therefore, the format and interpretation of fragment identifiers is dependent on the media type [RFC2046] of the retrieval result. The character restrictions described in Section 2",
      "ja": "フラグメント識別子の意味論に関係なく、関連して使用されるURIの種類の、検索行動から生じるデータの特性です。したがって、フラグメント識別子のフォーマット及び解釈は、検索結果のメディアタイプ[RFC2046]に依存します。第2節で説明した文字の制限"
    },
    {
      "indent": 3,
      "text": "for URI also apply to the fragment in a URI-reference. Individual media types may define additional restrictions or structure within the fragment for specifying different types of \"partial views\" that can be identified within that media type.",
      "ja": "URIに対してもURI参照に断片に適用されます。個々のメディアタイプは、メディアタイプ内で識別することができる「部分ビュー」の種類を特定するための断片内に追加の制限又は構造を定義することができます。"
    },
    {
      "indent": 3,
      "text": "A fragment identifier is only meaningful when a URI reference is intended for retrieval and the result of that retrieval is a document for which the identified fragment is consistently defined.",
      "ja": "URI参照を検索するために意図される場合、フラグメント識別子のみ意味があり、その検索結果は、識別されたフラグメントが一貫して定義されている文書です。"
    },
    {
      "indent": 0,
      "text": "4.2. Same-document References",
      "section_title": true,
      "ja": "4.2。同じドキュメントの参照"
    },
    {
      "indent": 3,
      "text": "A URI reference that does not contain a URI is a reference to the current document. In other words, an empty URI reference within a document is interpreted as a reference to the start of that document, and a reference containing only a fragment identifier is a reference to the identified fragment of that document. Traversal of such a reference should not result in an additional retrieval action. However, if the URI reference occurs in a context that is always intended to result in a new request, as in the case of HTML's FORM element, then an empty URI reference represents the base URI of the current document and should be replaced by that URI when transformed into a request.",
      "ja": "URIが含まれていないURI参照は、現在の文書への参照です。換言すれば、ドキュメント内の空のURI参照は、その文書の先頭への参照として解釈され、断片のみの識別子を含む参照は、その文書の識別されたフラグメントへの参照です。そのような基準のトラバーサルは、追加の検索行動をもたらすべきではありません。 URI参照は、HTMLのフォーム要素の場合のように、常に新たな要求をもたらすことが意図されているコンテキスト内で発生した場合は、空のURI参照は、現在のドキュメントのベースURIを表し、そのURIに置き換えなければなりませんリクエストに変換するとき。"
    },
    {
      "indent": 0,
      "text": "4.3. Parsing a URI Reference",
      "section_title": true,
      "ja": "4.3。 URI参照の構文解析"
    },
    {
      "indent": 3,
      "text": "A URI reference is typically parsed according to the four main components and fragment identifier in order to determine what components are present and whether the reference is relative or absolute. The individual components are then parsed for their subparts and, if not opaque, to verify their validity.",
      "ja": "URI参照は、典型的には、本基準は、相対的または絶対的であるかどうかであるかの成分を決定するために4つの主要コンポーネントとフラグメント識別子に従って解析されます。個々のコンポーネントは、その有効性を検証するために、不透明でない場合は、そのサブパーツのために解析されています。"
    },
    {
      "indent": 3,
      "text": "Although the BNF defines what is allowed in each component, it is ambiguous in terms of differentiating between an authority component and a path component that begins with two slash characters. The greedy algorithm is used for disambiguation: the left-most matching rule soaks up as much of the URI reference string as it is capable of matching. In other words, the authority component wins.",
      "ja": "BNFは、各コンポーネントに許可されているかを定義しているが、それは権限コンポーネント二スラッシュ文字で始まるパス成分を区別の点で曖昧です。貪欲アルゴリズムは曖昧さ回避のために使用されている：それはマッチングが可能であるとして、一番左のマッチングルールは、URI参照文字列の多くを浸します。つまり、権限コンポーネントが勝ち。"
    },
    {
      "indent": 3,
      "text": "Readers familiar with regular expressions should see Appendix B for a concrete parsing example and test oracle.",
      "ja": "正規表現に精通している読者は、具体的な解析例とテストオラクルについては、付録Bを参照してくださいする必要があります。"
    },
    {
      "indent": 0,
      "text": "5. Relative URI References",
      "section_title": true,
      "ja": "5.相対URI参照"
    },
    {
      "indent": 3,
      "text": "It is often the case that a group or \"tree\" of documents has been constructed to serve a common purpose; the vast majority of URI in these documents point to resources within the tree rather than outside of it. Similarly, documents located at a particular site are much more likely to refer to other resources at that site than to resources at remote sites.",
      "ja": "それは多くの場合、グループまたは「木」は、文書の共通の目的を果たすために構築されている場合です。これらの文書におけるURIの大半は、ツリー内ではなく、それの外のリソースを指します。同様に、特定のサイトにある文書がよりリモートサイトのリソースにはるかにそのサイトの他のリソースを参照してくださいする可能性があります。"
    },
    {
      "indent": 3,
      "text": "Relative addressing of URI allows document trees to be partially independent of their location and access scheme. For instance, it is possible for a single set of hypertext documents to be simultaneously accessible and traversable via each of the \"file\", \"http\", and \"ftp\" schemes if the documents refer to each other using relative URI. Furthermore, such document trees can be moved, as a whole, without changing any of the relative references. Experience within the WWW has demonstrated that the ability to perform relative referencing is necessary for the long-term usability of embedded URI.",
      "ja": "相対URIのアドレス指定は、文書の木がその場所とアクセス方式の部分的に独立することができます。文書は、相対URIを使用して相互に参照する場合例えば、それはハイパーテキスト文書の単一のセットは、「ファイル」のそれぞれを経由して同時にアクセスやトラバースであるために、可能である「HTTP」、および「FTP」のスキーム。さらに、そのような文書ツリーは、相対参照のいずれかを変更することなく、全体として移動させることができます。 WWW内の経験が相対参照を実行する能力は、埋め込みURIの長期ユーザビリティのために必要であることを実証しています。"
    },
    {
      "indent": 3,
      "text": "The syntax for relative URI takes advantage of the <hier_part> syntax of <absoluteURI> (Section 3) in order to express a reference that is relative to the namespace of another hierarchical URI.",
      "ja": "相対URIの構文は、他の階層URIの名前空間への相対的な基準を表現するために<absoluteURIで>（第3）の<hier_part>構文を利用します。"
    },
    {
      "indent": 6,
      "text": "relativeURI = ( net_path | abs_path | rel_path ) [ \"?\" query ]",
      "ja": "relativeURI =（net_path |腹筋_経路| rel_path）[ \"？\"クエリ]"
    },
    {
      "indent": 3,
      "text": "A relative reference beginning with two slash characters is termed a network-path reference, as defined by <net_path> in Section 3. Such references are rarely used.",
      "ja": "めったに使用されない第3のような参考文献に<net_path>によって定義されるように、2つのスラッシュ文字で始まる相対参照は、ネットワークパス参照と呼ばれます。"
    },
    {
      "indent": 3,
      "text": "A relative reference beginning with a single slash character is termed an absolute-path reference, as defined by <abs_path> in Section 3.",
      "ja": "第3の<腹筋_経路>によって定義されるような単一のスラッシュ文字で始まる相対参照は、絶対パス参照と呼ばれます。"
    },
    {
      "indent": 3,
      "text": "A relative reference that does not begin with a scheme name or a slash character is termed a relative-path reference.",
      "ja": "スキーム名やスラッシュ文字で始まらない相対参照は、相対パス参照と呼ばれています。"
    },
    {
      "indent": 6,
      "text": "rel_path = rel_segment [ abs_path ]",
      "ja": "rel_path = rel_segment [腹筋_経路]"
    },
    {
      "indent": 6,
      "text": "rel_segment = 1*( unreserved | escaped | \";\" | \"@\" | \"&\" | \"=\" | \"+\" | \"$\" | \",\" )",
      "ja": "rel_segment = 1 *（予約されていない|エスケープ| \";\" | \"@\" | \"＆\" | \"=\" | \"+\" | \"$\" | \"\"）"
    },
    {
      "indent": 3,
      "text": "Within a relative-path reference, the complete path segments \".\" and \"..\" have special meanings: \"the current hierarchy level\" and \"the level above this hierarchy level\", respectively. Although this is very similar to their use within Unix-based filesystems to indicate directory levels, these path components are only considered special when resolving a relative-path reference to its absolute form (Section 5.2).",
      "ja": "相対パス参照、完全なパスセグメント内の「」 『現在の階層レベル』とはそれぞれ、 『この階層レベルの上のレベル』：と「..」特別な意味を持っています。これは、ディレクトリレベルを示すために、UNIXベースのファイルシステム内での使用に非常に類似しているものの、その絶対形式（セクション5.2）への相対パス参照を解決するときに、これらのパス成分は、特殊な考慮されます。"
    },
    {
      "indent": 3,
      "text": "Authors should be aware that a path segment which contains a colon character cannot be used as the first segment of a relative URI path (e.g., \"this:that\"), because it would be mistaken for a scheme name.",
      "ja": "それはスキーム名と間違えられることになるため、（例えば、「その本」）著者らは、コロンが含まれているパスセグメントが相対URIパスの最初のセグメントとして使用することができないことに注意すべきです。"
    },
    {
      "indent": 3,
      "text": "It is therefore necessary to precede such segments with other segments (e.g., \"./this:that\") in order for them to be referenced as a relative path.",
      "ja": "彼らが相対パスとして参照するために他のセグメント（例えば、「./this:that」）を有するこのようなセグメントを先行する必要があります。"
    },
    {
      "indent": 3,
      "text": "It is not necessary for all URI within a given scheme to be restricted to the <hier_part> syntax, since the hierarchical properties of that syntax are only necessary when relative URI are used within a particular document. Documents can only make use of relative URI when their base URI fits within the <hier_part> syntax. It is assumed that any document which contains a relative reference will also have a base URI that obeys the syntax. In other words, relative URI cannot be used within a document that has an unsuitable base URI.",
      "ja": "与えられたスキーム内のすべてのURIが<hier_part>構文に限定されることは、相対URIは、特定の文書内で使用される場合、その構文の階層的な性質のみ必要であるので、必要ではありません。そのベースURIは、<hier_part>構文内に収まるとき、ドキュメントにのみ、相対URIを利用することができます。相対参照を含む任意の文書はまた、構文に従う基底URIを持っていることが想定されます。換言すれば、相対URIは不適切ベースURIを持つ文書内で使用することができません。"
    },
    {
      "indent": 3,
      "text": "Some URI schemes do not allow a hierarchical syntax matching the <hier_part> syntax, and thus cannot use relative references.",
      "ja": "いくつかのURIスキームは<hier_part>構文に一致する階層的な構文を許可していないので、相対参照を使用することはできません。"
    },
    {
      "indent": 0,
      "text": "5.1. Establishing a Base URI",
      "section_title": true,
      "ja": "5.1。ベースURIを確立"
    },
    {
      "indent": 3,
      "text": "The term \"relative URI\" implies that there exists some absolute \"base URI\" against which the relative reference is applied. Indeed, the base URI is necessary to define the semantics of any relative URI reference; without it, a relative reference is meaningless. In order for relative URI to be usable within a document, the base URI of that document must be known to the parser.",
      "ja": "用語「相対URIは、」相対的基準が適用され、それに対していくつかの絶対的な「ベースURI」が存在することを意味します。実際、ベースURIは、任意の相対URI参照のセマンティクスを定義する必要があります。それなしで、相対参照は無意味です。相対URIは、文書内で使用可能にするために、その文書のベースURIがパーサーに知られていなければなりません。"
    },
    {
      "indent": 3,
      "text": "The base URI of a document can be established in one of four ways, listed below in order of precedence. The order of precedence can be thought of in terms of layers, where the innermost defined base URI has the highest precedence. This can be visualized graphically as:",
      "ja": "ドキュメントのベースURIは、優先順位の順に下記の4つの方法で確立することができます。優先順位は、最も内側の定義されたベースURIは、最も高い優先順位を有する場合、層の観点で考えることができます。これをグラフとして可視化することができます。"
    },
    {
      "indent": 6,
      "text": ".----------------------------------------------------------.\n|  .----------------------------------------------------.  |\n|  |  .----------------------------------------------.  |  |\n|  |  |  .----------------------------------------.  |  |  |\n|  |  |  |  .----------------------------------.  |  |  |  |\n|  |  |  |  |       <relative_reference>       |  |  |  |  |\n|  |  |  |  `----------------------------------'  |  |  |  |\n|  |  |  | (5.1.1) Base URI embedded in the       |  |  |  |\n|  |  |  |         document's content             |  |  |  |\n|  |  |  `----------------------------------------'  |  |  |\n|  |  | (5.1.2) Base URI of the encapsulating entity |  |  |\n|  |  |         (message, document, or none).        |  |  |\n|  |  `----------------------------------------------'  |  |\n|  | (5.1.3) URI used to retrieve the entity            |  |\n|  `----------------------------------------------------'  |\n| (5.1.4) Default Base URI is application-dependent        |\n`----------------------------------------------------------'",
      "raw": true
    },
    {
      "indent": 0,
      "text": "5.1.1. Base URI within Document Content",
      "section_title": true,
      "ja": "5.1.1。ドキュメントコンテンツ内のベースURI"
    },
    {
      "indent": 3,
      "text": "Within certain document media types, the base URI of the document can be embedded within the content itself such that it can be readily obtained by a parser. This can be useful for descriptive documents, such as tables of content, which may be transmitted to others through protocols other than their usual retrieval context (e.g., E-Mail or USENET news).",
      "ja": "特定のドキュメントのメディアタイプの中に、文書のベースURIは、それが容易にパーサによって得ることができるようにコンテンツ自体の中に埋め込むことができます。これは、それらの通常の検索のコンテキスト（例えば、EメールまたはUSENETニュース）以外のプロトコルを介して他人に送信することができるような内容のテーブルとして記述文書、のために有用であり得ます。"
    },
    {
      "indent": 3,
      "text": "It is beyond the scope of this document to specify how, for each media type, the base URI can be embedded. It is assumed that user agents manipulating such media types will be able to obtain the appropriate syntax from that media type's specification. An example of how the base URI can be embedded in the Hypertext Markup Language (HTML) [RFC1866] is provided in Appendix D.",
      "ja": "これは、各メディアタイプのために、ベースURIを埋め込むことができる方法を指定するには、この文書の範囲外です。このようなメディアタイプを操作するユーザエージェントは、そのメディアタイプの仕様から適切な構文を得ることができるようになりますと仮定されます。ベースURIは、ハイパーテキストマークアップ言語（HTML）[RFC1866]に埋め込むことができる方法の例は、付録Dに設けられています。"
    },
    {
      "indent": 3,
      "text": "A mechanism for embedding the base URI within MIME container types (e.g., the message and multipart types) is defined by MHTML [RFC2110]. Protocols that do not use the MIME message header syntax, but which do allow some form of tagged metainformation to be included within messages, may define their own syntax for defining the base URI as part of a message.",
      "ja": "MIMEコンテナタイプ内のベースURIを埋め込むための機構（例えば、メッセージとマルチパートタイプ）はMHTML [RFC2110]で定義されます。 MIMEメッセージヘッダ構文を使用しますが、ないプロトコルは、メッセージの一部としてベースURIを定義するための独自の構文を定義することができる、タグ付けされたメタ情報のいくつかの形態がメッセージ内に含まれることが可能です。"
    },
    {
      "indent": 0,
      "text": "5.1.2. Base URI from the Encapsulating Entity",
      "section_title": true,
      "ja": "5.1.2。カプセル化エンティティからベースURI"
    },
    {
      "indent": 3,
      "text": "If no base URI is embedded, the base URI of a document is defined by the document's retrieval context. For a document that is enclosed within another entity (such as a message or another document), the retrieval context is that entity; thus, the default base URI of the document is the base URI of the entity in which the document is encapsulated.",
      "ja": "何ベースURIが埋め込まれていない場合、ドキュメントのベースURIは、文書の検索コンテキストによって定義されます。 （このようなメッセージや他の文書のような）別のエンティティ内に封入されている文書に対して、検索コンテキストは、エンティティです。従って、ドキュメントのデフォルトのベースURIは、文書がカプセル化されたエンティティのベースURIです。"
    },
    {
      "indent": 0,
      "text": "5.1.3. Base URI from the Retrieval URI",
      "section_title": true,
      "ja": "5.1.3。検索URIからベースURI"
    },
    {
      "indent": 3,
      "text": "If no base URI is embedded and the document is not encapsulated within some other entity (e.g., the top level of a composite entity), then, if a URI was used to retrieve the base document, that URI shall be considered the base URI. Note that if the retrieval was the result of a redirected request, the last URI used (i.e., that which resulted in the actual retrieval of the document) is the base URI.",
      "ja": "何ベースURIが埋め込まれていないと、文書が他のエンティティ内にカプセル化されていない場合（例えば、複合エンティティの最上位）、次いで、URIは、URIベースURI考慮しなければならないことを、基本文書を取得するために使用された場合。検索がリダイレクトされた要求の結果であった場合、最後のURI（すなわち、文書の実際の検索をもたらしたもの）は、ベースURIが使用されことに留意されたいです。"
    },
    {
      "indent": 0,
      "text": "5.1.4. Default Base URI",
      "section_title": true,
      "ja": "5.1.4。デフォルトのベースURI"
    },
    {
      "indent": 3,
      "text": "If none of the conditions described in Sections 5.1.1--5.1.3 apply, then the base URI is defined by the context of the application. Since this definition is necessarily application-dependent, failing to define the base URI using one of the other methods may result in the same content being interpreted differently by different types of application.",
      "ja": "セクション5.1.1--5.1.3に記載されている条件のいずれにも該当しない場合は、次にベースURIは、アプリケーションのコンテキストによって定義されます。この定義は必ずしもアプリケーション依存であるため、同じコンテンツをもたらすことができる他の方法のいずれかを使用して、ベースURIを定義することができないと、アプリケーションの異なる種類によって異なって解釈されます。"
    },
    {
      "indent": 3,
      "text": "It is the responsibility of the distributor(s) of a document containing relative URI to ensure that the base URI for that document can be established. It must be emphasized that relative URI cannot be used reliably in situations where the document's base URI is not well-defined.",
      "ja": "その文書のベースURIを確立することができることを保証するために、相対URIを含む文書の分配器（単数または複数）の責任です。相対URIは、文書のベースURIは、明確に定義されていない状況で確実に使用することはできないことを強調しなければなりません。"
    },
    {
      "indent": 0,
      "text": "5.2. Resolving Relative References to Absolute Form",
      "section_title": true,
      "ja": "5.2。絶対形式への相対参照の解決"
    },
    {
      "indent": 3,
      "text": "This section describes an example algorithm for resolving URI references that might be relative to a given base URI.",
      "ja": "このセクションでは、所与のベースURIに対して相対かもしれないURI参照を解決するための例示的アルゴリズムを記載しています。"
    },
    {
      "indent": 3,
      "text": "The base URI is established according to the rules of Section 5.1 and parsed into the four main components as described in Section 3. Note that only the scheme component is required to be present in the base URI; the other components may be empty or undefined. A component is undefined if its preceding separator does not appear in the URI reference; the path component is never undefined, though it may be empty. The base URI's query component is not used by the resolution algorithm and may be discarded.",
      "ja": "第3注記に記載されているように、ベースURIは、スキーム成分がベースURI中に存在することが必要であることセクション5.1の規則に従って確立され、4つの主要コンポーネントに解析されます。他の成分は、空または未定義であってもよいです。その前のセパレータはURI参照に表示されない場合、コンポーネントは未定義です。それが空であるかもしれませんが、パスの構成要素は、決して未定義です。ベースURIのクエリコンポーネントは、解像度アルゴリズムによって使用されず、廃棄されてもよいです。"
    },
    {
      "indent": 3,
      "text": "For each URI reference, the following steps are performed in order:",
      "ja": "各URI参照のために、以下のステップを順に実行されます。"
    },
    {
      "indent": 3,
      "text": "1) The URI reference is parsed into the potential four components and fragment identifier, as described in Section 4.3.",
      "ja": "セクション4.3で説明したように1）URI参照は、潜在的な四つの成分とフラグメント識別子に解析されます。"
    },
    {
      "indent": 3,
      "text": "2) If the path component is empty and the scheme, authority, and query components are undefined, then it is a reference to the current document and we are done. Otherwise, the reference URI's query and fragment components are defined as found (or not found) within the URI reference and not inherited from the base URI.",
      "ja": "パスコンポーネントが空であり、スキーム、権限、およびクエリコンポーネントが未定義である場合2）、それは現在の文書への参照であり、我々が行われます。見つかった（または見つかりません）URI参照内および基地URIから継承されないようにそうでなければ、参照URIのクエリーおよびフラグメントコンポーネントが定義されています。"
    },
    {
      "indent": 3,
      "text": "3) If the scheme component is defined, indicating that the reference starts with a scheme name, then the reference is interpreted as an absolute URI and we are done. Otherwise, the reference URI's scheme is inherited from the base URI's scheme component.",
      "ja": "スキーマコンポーネントが定義されている場合、参照はスキーム名で始まることを示している3）、その後、基準は、絶対URIとして解釈され、我々が行われます。そうでなければ、参照URIのスキームは基底URIのスキームコンポーネントから継承されています。"
    },
    {
      "indent": 6,
      "text": "Due to a loophole in prior specifications [RFC1630], some parsers allow the scheme name to be present in a relative URI if it is the same as the base URI scheme. Unfortunately, this can conflict with the correct parsing of non-hierarchical URI. For backwards compatibility, an implementation may work around such references by removing the scheme if it matches that of the base URI and the scheme is known to always use the <hier_part> syntax. The parser can then continue with the steps below for the remainder of the reference components. Validating parsers should mark such a misformed relative reference as an error.",
      "ja": "前仕様[RFC1630]で抜け穴に、いくつかのパーサは、それがベースURIスキームと同じであればスキーム名は、相対URI中に存在することを可能にします。残念ながら、これは非階層URIの正しい構文解析と競合することができます。それがベースURIのものと一致するとスキームは常に<hier_part>構文を使用することが知られている場合は下位互換性のために、実装はスキームを除去することによって、このような参照を回避することができます。パーサは、基準成分の残りについては、以下の手順を続行することができます。検証パーサはエラー等misformed相対基準をマークすべきです。"
    },
    {
      "indent": 3,
      "text": "4) If the authority component is defined, then the reference is a network-path and we skip to step 7. Otherwise, the reference URI's authority is inherited from the base URI's authority component, which will also be undefined if the URI scheme does not use an authority component.",
      "ja": "権限コンポーネントが定義されている場合4）、次いで、参照は、ネットワークパスであり、我々はそれ以外の場合は7に進み、参照URIの権限は、URIスキームがない場合も不定となり、ベースURIの権限コンポーネントから継承され権限コンポーネントを使用します。"
    },
    {
      "indent": 3,
      "text": "5) If the path component begins with a slash character (\"/\"), then the reference is an absolute-path and we skip to step 7.",
      "ja": "パスコンポーネントがスラッシュ（「/」）で始まる場合は5）、次いで基準は絶対パスであり、我々は7に進み。"
    },
    {
      "indent": 3,
      "text": "6) If this step is reached, then we are resolving a relative-path reference. The relative path needs to be merged with the base URI's path. Although there are many ways to do this, we will describe a simple method using a separate string buffer.",
      "ja": "このステップに到達した場合6）、我々は、相対パス参照を解決しています。相対パスは、ベースURIのパスと合併する必要があります。これを行うには多くの方法がありますが、私たちは別の文字列バッファを使用して簡単な方法を説明します。"
    },
    {
      "indent": 6,
      "text": "a) All but the last segment of the base URI's path component is copied to the buffer. In other words, any characters after the last (right-most) slash character, if any, are excluded.",
      "ja": "A）ベースURIのパスコンポーネントの最後のセグメントが、すべてがバッファにコピーされます。言い換えれば、もしあれば（一番右）最後に、文字をスラッシュの後に任意の文字は、除外されています。"
    },
    {
      "indent": 6,
      "text": "b) The reference's path component is appended to the buffer string.",
      "ja": "B）参照のパスコンポーネントは、バッファ文字列に付加されます。"
    },
    {
      "indent": 6,
      "text": "c) All occurrences of \"./\", where \".\" is a complete path segment, are removed from the buffer string.",
      "ja": "C） \"./\"、のすべての出現 \"を。\"完全なパスセグメントは、バッファ文字列から削除されます。"
    },
    {
      "indent": 6,
      "text": "d) If the buffer string ends with \".\" as a complete path segment, that \".\" is removed.",
      "ja": "d）のバッファ文字列がで終わる場合、「」完全なパスセグメントとして、その「」削除されます。"
    },
    {
      "indent": 6,
      "text": "e) All occurrences of \"<segment>/../\", where <segment> is a complete path segment not equal to \"..\", are removed from the buffer string. Removal of these path segments is performed iteratively, removing the leftmost matching pattern on each iteration, until no matching pattern remains.",
      "ja": "E）「<セグメント> /../」のすべてのオカレンスが、ここで、<セグメント>等しくない完全なパスセグメントである「..」、バッファ文字列から除去されます。一致するパターンがなくなるまで、これらの経路セグメントの除去は、反復ごとに、左端のマッチングパターンを除去し、繰り返し行われます。"
    },
    {
      "indent": 6,
      "text": "f) If the buffer string ends with \"<segment>/..\", where <segment> is a complete path segment not equal to \"..\", that \"<segment>/..\" is removed.",
      "ja": "F）バッファ文字列が有する「<セグメント> / ..」終了した場合、ここで、<セグメント>等しくない完全なパスセグメントである「..」、除去されることを 『<セグメント> / ..』。"
    },
    {
      "indent": 6,
      "text": "g) If the resulting buffer string still begins with one or more complete path segments of \"..\", then the reference is considered to be in error. Implementations may handle this error by retaining these components in the resolved path (i.e., treating them as part of the final URI), by removing them from the resolved path (i.e., discarding relative levels above the root), or by avoiding traversal of the reference.",
      "ja": "G得られたバッファ文字列がまだ「..」の一つまたはそれ以上の完全なパスセグメントで始まる場合）、その後の参照はエラーであると考えられます。実装（すなわち、最終的なURIの一部としてそれらを処理する）分解経路でこれらの成分を保持することによって、解決されたパス（すなわち、ルート上記相対レベルを破棄）からそれらを除去することによって、またはトラバーサルを回避することによって、このエラーを処理することができます参照。"
    },
    {
      "indent": 6,
      "text": "h) The remaining buffer string is the reference URI's new path component.",
      "ja": "H）残りのバッファ文字列がURIの新しいパス成分基準です。"
    },
    {
      "indent": 3,
      "text": "7) The resulting URI components, including any inherited from the base URI, are recombined to give the absolute form of the URI reference. Using pseudocode, this would be",
      "ja": "7）基底URIから継承されたいずれかを含む、得られたURIコンポーネントは、URI参照の絶対的な形を与えるために再結合されます。擬似コードを使用して、これは次のようになります"
    },
    {
      "indent": 9,
      "text": "result = \"\"",
      "ja": "結果=「」"
    },
    {
      "indent": 9,
      "text": "if scheme is defined then append scheme to result append \":\" to result",
      "ja": "「：」起因するスキームが定義されている場合、その後追加起因するスキームを追加"
    },
    {
      "indent": 9,
      "text": "if authority is defined then append \"//\" to result append authority to result",
      "ja": "権限が定義されている場合、結果する権限を追加生じるように「//」を追加"
    },
    {
      "indent": 9,
      "text": "append path to result",
      "ja": "もたらすためにパスを追加"
    },
    {
      "indent": 9,
      "text": "if query is defined then append \"?\" to result append query to result",
      "ja": "クエリが定義されている場合、その後追加「？」もたらすために、クエリを追加した結果に"
    },
    {
      "indent": 9,
      "text": "if fragment is defined then append \"#\" to result append fragment to result",
      "ja": "フラグメントが定義されている場合、結果するフラグメントを追加生じるように「＃」を追加"
    },
    {
      "indent": 9,
      "text": "return result",
      "ja": "リターン結果"
    },
    {
      "indent": 6,
      "text": "Note that we must be careful to preserve the distinction between a component that is undefined, meaning that its separator was not present in the reference, and a component that is empty, meaning that the separator was present and was immediately followed by the next component separator or the end of the reference.",
      "ja": "我々は、そのセパレータは、参照中に存在しなかったことを意味し、未定義である成分及びセパレータが存在し、直ちに次の成分分離を行ったことを意味し、空であるコンポーネント間の区別を維持するために注意しなければならないことに注意してくださいまたは基準の終わり。"
    },
    {
      "indent": 3,
      "text": "The above algorithm is intended to provide an example by which the output of implementations can be tested -- implementation of the algorithm itself is not required. For example, some systems may find it more efficient to implement step 6 as a pair of segment stacks being merged, rather than as a series of string pattern replacements.",
      "ja": "アルゴリズム自体の実装が必要とされない - 上記のアルゴリズムは、実装の出力を試験することが可能な例を提供することを目的とします。例えば、いくつかのシステムは、マージされたセグメントスタックのペアとしてではなく、文字列パターン置換一連のステップ6を実装することがより効率的に見つけることができます。"
    },
    {
      "indent": 6,
      "text": "Note: Some WWW client applications will fail to separate the reference's query component from its path component before merging the base and reference paths in step 6 above. This may result in a loss of information if the query component contains the strings \"/../\" or \"/./\".",
      "ja": "注：一部のWWWクライアントアプリケーションは、上記の手順6でベースと参照パスをマージする前に、そのパスコンポーネントから参照のクエリコンポーネントを分離するために失敗します。クエリコンポーネントが文字列「/../」や「/./」が含まれている場合、これは情報の損失をもたらすことができます。"
    },
    {
      "indent": 3,
      "text": "Resolution examples are provided in Appendix C.",
      "ja": "解像度の例は、付録Cで提供されています"
    },
    {
      "indent": 0,
      "text": "6. URI Normalization and Equivalence",
      "section_title": true,
      "ja": "6. URI正規化と等価"
    },
    {
      "indent": 3,
      "text": "In many cases, different URI strings may actually identify the identical resource. For example, the host names used in URL are actually case insensitive, and the URL <http://www.XEROX.com> is equivalent to <http://www.xerox.com>. In general, the rules for equivalence and definition of a normal form, if any, are scheme dependent. When a scheme uses elements of the common syntax, it will also use the common syntax equivalence rules, namely that the scheme and hostname are case insensitive and a URL with an explicit \":port\", where the port is the default for the scheme, is equivalent to one where the port is elided.",
      "ja": "多くの場合、異なるURI文字列は、実際に同じリソースを識別することができます。例えば、URLで使用されるホスト名は、実際には大文字と小文字を区別しませんで、URLは<http://www.XEROX.com> <http://www.xerox.com>に相当します。一般的に、通常の形態の等価と定義するためのルールは、もしあれば、スキームに依存しています。 、ポートはスキームのデフォルトです：「ポート」、スキームは共通の構文の要素を使用すると、それはまた、小文字を区別しないと明示的でURLスキームとホスト名は大文字ですすなわちことを、一般的な構文同値規則を使用します。ポートが省略されているものと同等です。"
    },
    {
      "indent": 0,
      "text": "7. Security Considerations",
      "section_title": true,
      "ja": "7.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "A URI does not in itself pose a security threat. Users should beware that there is no general guarantee that a URL, which at one time located a given resource, will continue to do so. Nor is there any guarantee that a URL will not locate a different resource at some later point in time, due to the lack of any constraint on how a given authority apportions its namespace. Such a guarantee can only be obtained from the person(s) controlling that namespace and the resource in question. A specific URI scheme may include additional semantics, such as name persistence, if those semantics are required of all naming authorities for that scheme.",
      "ja": "URIは、それ自体がセキュリティ上の脅威をもたらすことはありません。ユーザーが一度に与えられたリソースを設置URLは、そうし続けるだろうという一般的な保証がないことに注意する必要があります。 NOR URLが原因与えられた権限は、その名前空間を配分する方法上の任意の制約がないため、時間内にいくつかの後の時点で別のリソースを見つけられないだろういかなる保証もあります。このような保証は唯一その名前空間と当該のリソースを支配する者（複数可）から入手することができます。これらのセマンティクスは、そのスキームのすべての命名当局に要求される場合は、特定のURIスキームは、そのような名前の永続性などの追加の意味を含んでいてもよいです。"
    },
    {
      "indent": 3,
      "text": "It is sometimes possible to construct a URL such that an attempt to perform a seemingly harmless, idempotent operation, such as the retrieval of an entity associated with the resource, will in fact cause a possibly damaging remote operation to occur. The unsafe URL is typically constructed by specifying a port number other than that reserved for the network protocol in question. The client unwittingly contacts a site that is in fact running a different protocol. The content of the URL contains instructions that, when interpreted according to this other protocol, cause an unexpected operation. An example has been the use of a gopher URL to cause an unintended or impersonating message to be sent via a SMTP server.",
      "ja": "そのようなリソースに関連付けられたエンティティの検索のような一見無害、冪等操作を実行しようとする試みは、実際にはおそらく損傷遠隔操作が発生する原因となるようなURLを構築することができる場合があります。安全でないURLは、典型的には、当該ネットワークプロトコルのために予約以外のポート番号を指定することによって構成されています。クライアント無意識のうちに連絡異なるプロトコルを実行しているという事実にあるサイト。 URLの内容は、この他のプロトコルに従って解釈する場合、予期しない動作を引き起こす命令が含まれています。例では、ゴーファーURLの使用を意図または偽装メッセージがSMTPサーバを経由して送信させるようになっています。"
    },
    {
      "indent": 3,
      "text": "Caution should be used when using any URL that specifies a port number other than the default for the protocol, especially when it is a number within the reserved space.",
      "ja": "プロトコルのデフォルト以外のポート番号を指定する任意のURLを使用する場合は注意がそれが予約された領域内の数である場合は特に、使用すべきです。"
    },
    {
      "indent": 3,
      "text": "Care should be taken when a URL contains escaped delimiters for a given protocol (for example, CR and LF characters for telnet protocols) that these are not unescaped before transmission. This might violate the protocol, but avoids the potential for such characters to be used to simulate an extra operation or parameter in that protocol, which might lead to an unexpected and possibly harmful remote operation to be performed.",
      "ja": "URLエスケープ特定のプロトコルのための区切り文字（テルネットプロトコルについては、例えば、CRやLF文字）が含まれている場合、注意は、これらは、送信前にエスケープを解除されないように注意すべきです。これはプロトコルに違反しますが、実行されるべき予期せぬ多分有害な遠隔操作につながる可能性があるそのプロトコル内の余分な操作やパラメータを、シミュレートするために使用されるような文字の可能性を回避できるかもしれません。"
    },
    {
      "indent": 3,
      "text": "It is clearly unwise to use a URL that contains a password which is intended to be secret. In particular, the use of a password within the 'userinfo' component of a URL is strongly disrecommended except in those rare cases where the 'password' parameter is intended to be public.",
      "ja": "秘密であることを意図されたパスワードが含まれているURLを使用することが明らかに賢明ではありません。具体的には、URLの「userinfoを」コンポーネント内のパスワードの使用を強く「パスワード」パラメータは、公開することを意図しているようなまれな場合を除いてdisrecommendedされます。"
    },
    {
      "indent": 0,
      "text": "8. Acknowledgements",
      "section_title": true,
      "ja": "8.謝辞"
    },
    {
      "indent": 3,
      "text": "This document was derived from RFC 1738 [RFC1738] and RFC 1808 [RFC1808]; the acknowledgements in those specifications still apply. In addition, contributions by Gisle Aas, Martin Beet, Martin Duerst, Jim Gettys, Martijn Koster, Dave Kristol, Daniel LaLiberte, Foteos Macrides, James Marshall, Ryan Moats, Keith Moore, and Lauren Wood are gratefully acknowledged.",
      "ja": "この文書は、RFC 1738 [RFC1738]及びRFC 1808 [RFC1808]に由来しました。これらの仕様の確認応答が適用されます。また、Gisle Aasが、マーティン・ビート、マーティンDuerst、ジム・ゲティーズ、マーテホン・コスター、デイブ・クリストル、ダニエル・リベルテ、Foteos Macridesの貢献は、ジェームズ・マーシャル、ライアン・モーツ、キースムーア、とローレン・ウッドは深く感謝しています。"
    },
    {
      "indent": 0,
      "text": "9. References",
      "section_title": true,
      "ja": "9.参考文献"
    },
    {
      "indent": 3,
      "text": "[RFC2277] Alvestrand, H., \"IETF Policy on Character Sets and Languages\", BCP 18, RFC 2277, January 1998.",
      "ja": "[RFC2277] Alvestrand、H.、 \"文字セットと言語のIETF方針\"、BCP 18、RFC 2277、1998年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC1630] Berners-Lee, T., \"Universal Resource Identifiers in WWW: A Unifying Syntax for the Expression of Names and Addresses of Objects on the Network as used in the World-Wide Web\", RFC 1630, June 1994.",
      "ja": "[RFC1630]バーナーズ=リー、T.、「WWWにおけるユニバーサルリソース識別子：統一構文名およびワールド・ワイド・ウェブで使用されるネットワーク上のオブジェクトのアドレスの発現のために」、RFC 1630、1994年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC1738] Berners-Lee, T., Masinter, L., and M. McCahill, Editors, \"Uniform Resource Locators (URL)\", RFC 1738, December 1994.",
      "ja": "[RFC1738]バーナーズ=リー、T.、Masinter、L.、およびM. McCahill、編集者、 \"ユニフォームリソースロケータ（URL）\"、RFC 1738、1994年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC1866] Berners-Lee T., and D. Connolly, \"HyperText Markup Language Specification -- 2.0\", RFC 1866, November 1995.",
      "ja": "[RFC1866]バーナーズ=リーT.、およびD.コノリー、 \"ハイパーテキストマークアップ言語仕様 -  2.0\"、RFC 1866、1995年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC1123] Braden, R., Editor, \"Requirements for Internet Hosts -- Application and Support\", STD 3, RFC 1123, October 1989.",
      "ja": "[RFC1123]ブレーデン、R.、エディタ、 \"インターネットホストのための要件 - 、アプリケーションとサポート\"、STD 3、RFC 1123、1989年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC822] Crocker, D., \"Standard for the Format of ARPA Internet Text Messages\", STD 11, RFC 822, August 1982.",
      "ja": "[RFC822]クロッカー、D.、 \"ARPAインターネットテキストメッセージの形式の規格\"、STD 11、RFC 822、1982年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC1808] Fielding, R., \"Relative Uniform Resource Locators\", RFC 1808, June 1995.",
      "ja": "[RFC1808]フィールディング、R.、 \"相対的なユニフォームリソースロケータ\"、RFC 1808、1995年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC2046] Freed, N., and N. Borenstein, \"Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types\", RFC 2046, November 1996.",
      "ja": "[RFC2046]解放され、N.、およびN. Borenstein、 \"マルチパーパスインターネットメールエクステンション（MIME）パート2：メディアタイプ\"、RFC 2046、1996年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC1736] Kunze, J., \"Functional Recommendations for Internet Resource Locators\", RFC 1736, February 1995.",
      "ja": "[RFC1736]クンツェ、J.、 \"インターネットリソースロケータのための機能の提言\"、RFC 1736、1995年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC2141] Moats, R., \"URN Syntax\", RFC 2141, May 1997.",
      "ja": "[RFC2141]堀、R.、 \"URN構文\"、RFC 2141、1997年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC1034] Mockapetris, P., \"Domain Names - Concepts and Facilities\", STD 13, RFC 1034, November 1987.",
      "ja": "[RFC1034] Mockapetris、P.、 \"ドメイン名 - 概念および機能\"、STD 13、RFC 1034、1987年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC2110] Palme, J., and A. Hopmann, \"MIME E-mail Encapsulation of Aggregate Documents, such as HTML (MHTML)\", RFC 2110, March 1997.",
      "ja": "[RFC2110]パルメ、J.、およびA. Hopmann、 \"そのようなHTML（MHTML）として集約文書のMIME電子メールカプセル化\"、RFC 2110、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC1737] Sollins, K., and L. Masinter, \"Functional Requirements for Uniform Resource Names\", RFC 1737, December 1994.",
      "ja": "[RFC1737] Sollins、K.、およびL. Masinter、 \"統一リソース名のための機能要件\"、RFC 1737、1994年12月。"
    },
    {
      "indent": 3,
      "text": "[ASCII] US-ASCII. \"Coded Character Set -- 7-bit American Standard Code for Information Interchange\", ANSI X3.4-1986.",
      "ja": "[ASCII] US-ASCII。 「コード化文字セット -  7ビットの情報交換用米国標準コード」、ANSI X3.4-1986。"
    },
    {
      "indent": 3,
      "text": "[UTF-8] Yergeau, F., \"UTF-8, a transformation format of ISO 10646\", RFC 2279, January 1998.",
      "ja": "[UTF-8] Yergeau、F.、 \"UTF-8、ISO 10646の変換フォーマット\"、RFC 2279、1998年1月。"
    },
    {
      "indent": 0,
      "text": "10. Authors' Addresses",
      "section_title": true,
      "ja": "10.著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Tim Berners-Lee World Wide Web Consortium MIT Laboratory for Computer Science, NE43-356 545 Technology Square Cambridge, MA 02139",
      "ja": "コンピュータサイエンスのためのティム・バーナーズ=リーのWorld Wide Web ConsortiumのMIT研究所、NE43-356 545テクノロジースクエアケンブリッジ、MA 02139"
    },
    {
      "indent": 3,
      "text": "Fax: +1(617)258-8682 EMail: timbl@w3.org",
      "ja": "ファックス：+1(617)258-8682 Eメール：timbl@w3.org"
    },
    {
      "indent": 3,
      "text": "Roy T. Fielding Department of Information and Computer Science University of California, Irvine Irvine, CA 92697-3425",
      "ja": "情報のロイ・T.フィールディング部門とカリフォルニアのコンピュータサイエンス大学、アーヴァイン、CA 92697-3425"
    },
    {
      "indent": 3,
      "text": "Fax: +1(949)824-1715 EMail: fielding@ics.uci.edu",
      "ja": "ファックス：+1(949)824-1715 Eメール：fielding@ics.uci.edu"
    },
    {
      "indent": 3,
      "text": "Larry Masinter Xerox PARC 3333 Coyote Hill Road Palo Alto, CA 94034",
      "ja": "ラリーMasinterゼロックスPARC 3333コヨーテヒルロードパロアルト、CA 94034"
    },
    {
      "indent": 3,
      "text": "Fax: +1(415)812-4333 EMail: masinter@parc.xerox.com",
      "ja": "ファックス：+1(415)812-4333 Eメール：masinter@parc.xerox.com"
    },
    {
      "indent": 0,
      "text": "A. Collected BNF for URI",
      "ja": "URIのためのBNF収集A."
    },
    {
      "indent": 6,
      "text": "URI-reference = [ absoluteURI | relativeURI ] [ \"#\" fragment ]\nabsoluteURI   = scheme \":\" ( hier_part | opaque_part )\nrelativeURI   = ( net_path | abs_path | rel_path ) [ \"?\" query ]",
      "raw": true
    },
    {
      "indent": 6,
      "text": "hier_part = ( net_path | abs_path ) [ \"?\" query ] opaque_part = uric_no_slash *uric",
      "ja": "hier_part =（net_path |腹筋_経路）[ \"？\"クエリ] opaque_part = uric_no_slash *尿"
    },
    {
      "indent": 6,
      "text": "uric_no_slash = unreserved | escaped | \";\" | \"?\" | \":\" | \"@\" | \"&\" | \"=\" | \"+\" | \"$\" | \",\"",
      "ja": "uric_no_slash =予約されていません|エスケープ| \";\" | \"？\" | \"：\" | \"@\" | \"＆\" | \"=\" | \"+\" | \"$\" | \"\""
    },
    {
      "indent": 6,
      "text": "net_path = \"//\" authority [ abs_path ] abs_path = \"/\" path_segments rel_path = rel_segment [ abs_path ]",
      "ja": "net_path = \"//\" 権威[腹筋_経路]腹筋_経路= \"/\" path_segments rel_path = rel_segment [腹筋_経路]"
    },
    {
      "indent": 6,
      "text": "rel_segment = 1*( unreserved | escaped | \";\" | \"@\" | \"&\" | \"=\" | \"+\" | \"$\" | \",\" )",
      "ja": "rel_segment = 1 *（予約されていない|エスケープ| \";\" | \"@\" | \"＆\" | \"=\" | \"+\" | \"$\" | \"\"）"
    },
    {
      "indent": 6,
      "text": "scheme = alpha *( alpha | digit | \"+\" | \"-\" | \".\" )",
      "ja": "スキーム=アルファ*（アルファ|数字| \"+\" | \" - \" | \"\"）"
    },
    {
      "indent": 6,
      "text": "authority = server | reg_name",
      "ja": "権威=サーバー| reg_name"
    },
    {
      "indent": 6,
      "text": "reg_name = 1*( unreserved | escaped | \"$\" | \",\" | \";\" | \":\" | \"@\" | \"&\" | \"=\" | \"+\" )",
      "ja": "reg_name = 1 *（予約されていない|エスケープ| \"$\" | \"\" | \";\" | \"：\" | \"@\" | \"＆\" | \"=\" | \"+\"）"
    },
    {
      "indent": 6,
      "text": "server = [ [ userinfo \"@\" ] hostport ] userinfo = *( unreserved | escaped | \";\" | \":\" | \"&\" | \"=\" | \"+\" | \"$\" | \",\" )",
      "ja": "サーバー= [[ \"@\" のuserinfo]ホスト側]のuserinfo = *（予約されていない|エスケープ| \";\" | \"：\" | \"＆\" | \"=\" | \"+\" | \"$\" | \"\"）"
    },
    {
      "indent": 6,
      "text": "hostport = host [ \":\" port ] host = hostname | IPv4address hostname = *( domainlabel \".\" ) toplabel [ \".\" ] domainlabel = alphanum | alphanum *( alphanum | \"-\" ) alphanum toplabel = alpha | alpha *( alphanum | \"-\" ) alphanum IPv4address = 1*digit \".\" 1*digit \".\" 1*digit \".\" 1*digit port = *digit",
      "ja": "ホスト側=ホスト[ \"：\" ポート]ホスト=ホスト名| IPv4Addressをホスト名= *（domainlabel \"\"）toplabelの[ \"\" ] domainlabel = alphanum | alphanum *（alphanum | \" - \"）alphanum toplabel =アルファ|アルファ*（alphanum | \" - \"）alphanum IPv4Addressを= 1 *数字 \"\" 1 *数字 \"\" 1 *数字 \"\" 1 * 2桁のポート= *桁"
    },
    {
      "indent": 6,
      "text": "path = [ abs_path | opaque_part ] path_segments = segment *( \"/\" segment ) segment = *pchar *( \";\" param ) param = *pchar pchar = unreserved | escaped | \":\" | \"@\" | \"&\" | \"=\" | \"+\" | \"$\" | \",\"",
      "ja": "パス= [腹筋_経路| opaque_part] path_segments =セグメント*（ \"/\" セグメント）セグメント= * PChar型*（ \";\" PARAM）PARAM = * PChar型PChar型=未予約|エスケープ| \"：\" | \"@\" | \"＆\" | \"=\" | \"+\" | \"$\" | \"\""
    },
    {
      "indent": 6,
      "text": "query = *uric",
      "ja": "クエリ= *尿"
    },
    {
      "indent": 6,
      "text": "fragment = *uric uric = reserved | unreserved | escaped reserved = \";\" | \"/\" | \"?\" | \":\" | \"@\" | \"&\" | \"=\" | \"+\" | \"$\" | \",\" unreserved = alphanum | mark mark = \"-\" | \"_\" | \".\" | \"!\" | \"~\" | \"*\" | \"'\" | \"(\" | \")\"",
      "ja": "フラグメント= *尿尿=予約|予約されていません| 「;」=予約エスケープ| \"/\" | \"？\" | \"：\" | \"@\" | \"＆\" | \"=\" | \"+\" | \"$\" | \"\" 予約されていない= alphanum |マークマーク= \" - \" | \"_\" | \"\" | \"！\" | \"〜\" | \"*\" | \"'\" | \"（\" | \"）\""
    },
    {
      "indent": 6,
      "text": "escaped = \"%\" hex hex hex = digit | \"A\" | \"B\" | \"C\" | \"D\" | \"E\" | \"F\" | \"a\" | \"b\" | \"c\" | \"d\" | \"e\" | \"f\"",
      "ja": "エスケープ=「％」の六角六角六角=数字| \"A\" | \"B\" | \"C\" | \"D\" | \"E\" | \"F\" | 「」| \"B\" | \"C\" | \"D\" | \"E\" | \"F\""
    },
    {
      "indent": 6,
      "text": "alphanum = alpha | digit alpha = lowalpha | upalpha",
      "ja": "alphanum =アルファ|桁のアルファ= lowalpha | upalpha"
    },
    {
      "indent": 6,
      "text": "lowalpha = \"a\" | \"b\" | \"c\" | \"d\" | \"e\" | \"f\" | \"g\" | \"h\" | \"i\" | \"j\" | \"k\" | \"l\" | \"m\" | \"n\" | \"o\" | \"p\" | \"q\" | \"r\" | \"s\" | \"t\" | \"u\" | \"v\" | \"w\" | \"x\" | \"y\" | \"z\" upalpha = \"A\" | \"B\" | \"C\" | \"D\" | \"E\" | \"F\" | \"G\" | \"H\" | \"I\" | \"J\" | \"K\" | \"L\" | \"M\" | \"N\" | \"O\" | \"P\" | \"Q\" | \"R\" | \"S\" | \"T\" | \"U\" | \"V\" | \"W\" | \"X\" | \"Y\" | \"Z\" digit = \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\"",
      "ja": "lowalpha = \"\" | \"B\" | \"C\" | \"D\" | \"E\" | \"F\" | \"G\" | \"H\" | \"I\" | \"J\" | \"K\" | \"L\" | \"M\" | \"n\" は| \"O\" | \"P\" | \"Q\" | \"R\" | \"S\" | \"T\" | \"U\" | \"V\" | \"W\" | \"X\" | \"Y\" | \"Z\" upalpha = \"A\" | \"B\" | \"C\" | \"D\" | \"E\" | \"F\" | \"G\" | \"H\" | \"I\" | \"J\" | \"K\" | \"L\" | \"M\" | \"N\" | \"O\" | \"P\" | \"Q\" | \"R\" | \"S\" | \"T\" | \"U\" | \"V\" | \"W\" | \"X\" | \"Y\" | \"Z\" の数字= \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\""
    },
    {
      "indent": 0,
      "text": "B. Parsing a URI Reference with a Regular Expression",
      "ja": "正規表現でURI参照を解析B."
    },
    {
      "indent": 3,
      "text": "As described in Section 4.3, the generic URI syntax is not sufficient to disambiguate the components of some forms of URI. Since the \"greedy algorithm\" described in that section is identical to the disambiguation method used by POSIX regular expressions, it is natural and commonplace to use a regular expression for parsing the potential four components and fragment identifier of a URI reference.",
      "ja": "4.3節で述べたように、一般的なURI構文はURIのいくつかの形態の構成を明確にするために十分ではありません。そのセクションに記載された「貪欲アルゴリズム」はPOSIX正規表現で使用される非曖昧化方法と同一であるので、URI参照の電位四つの成分とフラグメント識別子を解析するための正規表現を使用することが自然で一般的です。"
    },
    {
      "indent": 3,
      "text": "The following line is the regular expression for breaking-down a URI reference into its components.",
      "ja": "次の行は破壊ダウンURI参照をその成分にするための正規表現です。"
    },
    {
      "indent": 6,
      "text": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))? 12 3 4 5 6 7 8 9",
      "ja": "＾（（「＾：／？＃」＋）：）？（／／（「＾／？＃」＊））？（「＾？＃」＊）（￥？（「＾＃」＊））？（＃（。＊））？ １２ ３ ４ ５ ６ ７ ８ ９"
    },
    {
      "indent": 3,
      "text": "The numbers in the second line above are only to assist readability; they indicate the reference points for each subexpression (i.e., each paired parenthesis). We refer to the value matched for subexpression <n> as $<n>. For example, matching the above expression to",
      "ja": "2行目の数字は、上記の可読性を支援するだけです。彼らは、各部分式（すなわち、各ペア括弧）のための基準点を示します。私たちは、$ <N>として<n>の部分式のために一致した値を参照してください。例えば、上記の式に一致します"
    },
    {
      "indent": 6,
      "text": "http://www.ics.uci.edu/pub/ietf/uri/#Related",
      "ja": "ｈっｔｐ：／／ｗっｗ。いｃｓ。うし。えづ／ぷｂ／いえｔｆ／うり／＃れぁてｄ"
    },
    {
      "indent": 3,
      "text": "results in the following subexpression matches:",
      "ja": "以下の部分式の試合で結果："
    },
    {
      "indent": 6,
      "text": "$1 = http: $2 = http $3 = //www.ics.uci.edu $4 = www.ics.uci.edu $5 = /pub/ietf/uri/ $6 = <undefined> $7 = <undefined> $8 = #Related $9 = Related",
      "ja": "$ 1 = HTTP：$ 2 = HTTP $ 3 = //www.ics.uci.edu $ 4 = www.ics.uci.edu $ = 5 /パブ/ IETF / URI / $ 6 = <不定> $ J = <不定> $ 8 = #Related関連$ 9 ="
    },
    {
      "indent": 3,
      "text": "where <undefined> indicates that the component is not present, as is the case for the query component in the above example. Therefore, we can determine the value of the four components and fragment as",
      "ja": "ここで、<不定>上記の例では、クエリコンポーネントの場合のようにコンポーネントが存在しないことを示します。したがって、我々は、4つの成分およびフラグメントとしての値を決定することができます"
    },
    {
      "indent": 6,
      "text": "scheme = $2 authority = $4 path = $5 query = $7 fragment = $9",
      "ja": "スキーム= $ 2権限= $ 4パス= $ 5クエリ= $ 7断片= $ 9"
    },
    {
      "indent": 3,
      "text": "and, going in the opposite direction, we can recreate a URI reference from its components using the algorithm in step 7 of Section 5.2.",
      "ja": "そして、反対方向に向かう、我々は、セクション5.2のステップ7において、アルゴリズムを使用してそのコンポーネントからURI参照を再作成することができます。"
    },
    {
      "indent": 0,
      "text": "C. Examples of Resolving Relative URI References",
      "ja": "相対URI参照を解決するC.例"
    },
    {
      "indent": 3,
      "text": "Within an object with a well-defined base URI of",
      "ja": "明確に定義されたベースのURIを持つオブジェクト内"
    },
    {
      "indent": 6,
      "text": "http://a/b/c/d;p?q",
      "ja": "http：// A / B / C / D、P、Q"
    },
    {
      "indent": 3,
      "text": "the relative URI would be resolved as follows:",
      "ja": "次のように相対URIを解決することになります。"
    },
    {
      "indent": 0,
      "text": "C.1. Normal Examples",
      "ja": "C.1。通常の例"
    },
    {
      "indent": 6,
      "text": "g:h           =  g:h\ng             =  http://a/b/c/g\n./g           =  http://a/b/c/g\ng/            =  http://a/b/c/g/\n/g            =  http://a/g\n//g           =  http://g\n?y            =  http://a/b/c/?y\ng?y           =  http://a/b/c/g?y\n#s            =  (current document)#s\ng#s           =  http://a/b/c/g#s\ng?y#s         =  http://a/b/c/g?y#s\n;x            =  http://a/b/c/;x\ng;x           =  http://a/b/c/g;x\ng;x?y#s       =  http://a/b/c/g;x?y#s\n.             =  http://a/b/c/\n./            =  http://a/b/c/\n..            =  http://a/b/\n../           =  http://a/b/\n../g          =  http://a/b/g\n../..         =  http://a/\n../../        =  http://a/\n../../g       =  http://a/g",
      "raw": true
    },
    {
      "indent": 0,
      "text": "C.2. Abnormal Examples",
      "ja": "C.2。異常例"
    },
    {
      "indent": 3,
      "text": "Although the following abnormal examples are unlikely to occur in normal practice, all URI parsers should be capable of resolving them consistently. Each example uses the same base as above.",
      "ja": "以下の異常な例は通常の練習で発生する可能性は低いですが、すべてのURIパーサは一貫して、それらを解決することが可能であるべきです。各実施例は、上記と同じ塩基を使用します。"
    },
    {
      "indent": 3,
      "text": "An empty reference refers to the start of the current document.",
      "ja": "空の参照は、現在のドキュメントの開始を指します。"
    },
    {
      "indent": 6,
      "text": "<> = (current document)",
      "ja": "<> =（現在のドキュメント）"
    },
    {
      "indent": 3,
      "text": "Parsers must be careful in handling the case where there are more relative path \"..\" segments than there are hierarchical levels in the base URI's path. Note that the \"..\" syntax cannot be used to change the authority component of a URI.",
      "ja": "パーサは、より多くの相対パスがある場合の取り扱いには注意しなければならない「..」セグメントベースURIのパスに階層があるより。 「..」構文はURIの権限コンポーネントを変更するために使用することはできないことに注意してください。"
    },
    {
      "indent": 6,
      "text": "../../../g = http://a/../g ../../../../g = http://a/../../g",
      "ja": "../../../g =のhttp：//a/../g ../../../../g =のhttp：//a/../../g"
    },
    {
      "indent": 3,
      "text": "In practice, some implementations strip leading relative symbolic elements (\".\", \"..\") after applying a relative URI calculation, based on the theory that compensating for obvious author errors is better than allowing the request to fail. Thus, the above two references will be interpreted as \"http://a/g\" by some implementations.",
      "ja": "実際には、いくつかの実装は、（「 『』 ..」）大手相対シンボリック要素を取り除く明らかに作者の誤差を補償すると、要求が失敗することができますよりも優れているという理論に基づいて、相対URI計算を適用した後。いくつかの実装形態によって：このように、上記2つの参照は、「// A / G HTTP」と解釈されるであろう。"
    },
    {
      "indent": 3,
      "text": "Similarly, parsers must avoid treating \".\" and \"..\" as special when they are not complete components of a relative path.",
      "ja": "同様に、パーサは治療避けなければなりません「」そして、「..」などの特殊な彼らは、相対パスの完全な構成要素ではないとき。"
    },
    {
      "indent": 6,
      "text": "/./g = http://a/./g /../g = http://a/../g g. = http://a/b/c/g. .g = http://a/b/c/.g g.. = http://a/b/c/g.. ..g = http://a/b/c/..g",
      "ja": "/./g =のhttp：//a/./g /../g =のhttp：//a/../gグラム。 =のhttp：// A / B / C / gです。 .G = HTTP：//a/b/c/.g G .. = HTTP：// A / B / C / G .. ..g = HTTP：//a/b/c/..g"
    },
    {
      "indent": 3,
      "text": "Less likely are cases where the relative URI uses unnecessary or nonsensical forms of the \".\" and \"..\" complete path segments.",
      "ja": "可能性が低い相対URIは、不要なまたは無意味なフォーム使用例です「が。」そして、「..」の完全なパスセグメント。"
    },
    {
      "indent": 6,
      "text": "./../g = http://a/b/g ./g/. = http://a/b/c/g/ g/./h = http://a/b/c/g/h g/../h = http://a/b/c/h g;x=1/./y = http://a/b/c/g;x=1/y g;x=1/../y = http://a/b/c/y",
      "ja": "./../g =のhttp：// A / b / g対応./g/。 = HTTP：// A / B / C / G / G /./ H = HTTP：//a/b/c/g/hg/../h = HTTP：// A / B / C / HG。 X = 1、Y = /./のhttp：// A / B / C / G; X = 1 / YG; X = 1、Y = /../のhttp：// A / B / C / Y"
    },
    {
      "indent": 3,
      "text": "All client applications remove the query component from the base URI before resolving relative URI. However, some applications fail to separate the reference's query and/or fragment components from a relative path before merging it with the base path. This error is rarely noticed, since typical usage of a fragment never includes the hierarchy (\"/\") character, and the query component is not normally used within relative references.",
      "ja": "すべてのクライアントアプリケーションは、相対URIを解決する前に、ベースURIからクエリコンポーネントを削除します。しかし、一部のアプリケーションでは、ベースパスでそれをマージする前に、相対パスからの基準のクエリおよび/またはそのフラグメントの成分を分離することができません。フラグメントの典型的な使用法は、決して階層（「/」）文字が含まれていないため、このエラーはほとんど、気づいていない、とクエリコンポーネントは、通常は相対参照内で使用されていません。"
    },
    {
      "indent": 6,
      "text": "g?y/./x = http://a/b/c/g?y/./x g?y/../x = http://a/b/c/g?y/../x g#s/./x = http://a/b/c/g#s/./x g#s/../x = http://a/b/c/g#s/../x",
      "ja": "G Y /./ X = HTTP：// A / B / C / G Y /./ XG Y /../ X = HTTP：// A / B / C / G Y /../ XG＃秒/./ X =のhttp：//a/b/c/g#s/./xg#s/../x =のhttp：//a/b/c/g#s/../バツ"
    },
    {
      "indent": 3,
      "text": "Some parsers allow the scheme name to be present in a relative URI if it is the same as the base URI scheme. This is considered to be a loophole in prior specifications of partial URI [RFC1630]. Its use should be avoided.",
      "ja": "一部のパーサは、それがベースURIスキームと同じであればスキーム名は、相対URI中に存在することを可能にします。これは、部分的なURI [RFC1630]の前仕様の抜け穴であると考えられます。その使用は避けるべきです。"
    },
    {
      "indent": 6,
      "text": "http:g = http:g ; for validating parsers | http://a/b/c/g ; for backwards compatibility",
      "ja": "http：グラム=のhttp：グラム。パーサを検証します| http：// A / B / C / G;後方互換性のために"
    },
    {
      "indent": 0,
      "text": "D. Embedding the Base URI in HTML documents",
      "ja": "D.は、HTML文書のベースURIを埋め込みます"
    },
    {
      "indent": 3,
      "text": "It is useful to consider an example of how the base URI of a document can be embedded within the document's content. In this appendix, we describe how documents written in the Hypertext Markup Language (HTML) [RFC1866] can include an embedded base URI. This appendix does not form a part of the URI specification and should not be considered as anything more than a descriptive example.",
      "ja": "文書のベースURIは、文書のコンテンツ内に埋め込むことができる方法の例を考慮することが有用です。この付録では、ハイパーテキストマークアップ言語（HTML）[RFC1866]で書かれた文書が埋め込まれたベースURIを含めることができる方法について説明します。この付録では、URIの仕様の一部を形成しないと記述例以上のものと考えるべきではありません。"
    },
    {
      "indent": 3,
      "text": "HTML defines a special element \"BASE\" which, when present in the \"HEAD\" portion of a document, signals that the parser should use the BASE element's \"HREF\" attribute as the base URI for resolving any relative URI. The \"HREF\" attribute must be an absolute URI. Note that, in HTML, element and attribute names are case-insensitive. For example:",
      "ja": "HTMLは、文書の「頭部」部分に存在する、パーサーは、任意の相対URIを解決するためのベースURIとしてBASE要素の「HREF」属性を使用すべき信号の特別な要素「BASE」を定義します。 「HREF」属性は、絶対URIでなければなりません。 HTMLで、要素および属性名は大文字と小文字を区別しない、ということに注意してください。例えば："
    },
    {
      "indent": 6,
      "text": "<!doctype html public \"-//IETF//DTD HTML//EN\"> <HTML><HEAD> <TITLE>An example HTML document</TITLE> <BASE href=\"http://www.ics.uci.edu/Test/a/b/c\"> </HEAD><BODY> ... <A href=\"../x\">a hypertext anchor</A> ... </BODY></HTML>",
      "ja": "<！DOCTYPE htmlの公開 \" -  // IETF // DTD HTML // EN\"> <HTML> <HEAD> <TITLE>たとえば、HTMLドキュメント</ TITLE> <BASEのHREF = \"のhttp：//www.ics.uci .eduの/テスト/ A / B / C \"> </ HEAD> <BODY> ... <Aが...ハイパーテキスト・アンカー</A>をhref=\"../x\"> </ BODY> </ HTML >"
    },
    {
      "indent": 3,
      "text": "A parser reading the example document should interpret the given relative URI \"../x\" as representing the absolute URI",
      "ja": "例えば、原稿の読み取りパーサは絶対URIを表すものとして指定された相対URI「../x」を解釈しなければなりません"
    },
    {
      "indent": 6,
      "text": "<http://www.ics.uci.edu/Test/a/x>",
      "ja": "＜ｈっｔｐ：／／ｗっｗ。いｃｓ。うし。えづ／てｓｔ／あ／ｘ＞"
    },
    {
      "indent": 3,
      "text": "regardless of the context in which the example document was obtained.",
      "ja": "かかわらず、例えば、文書が取得されたコンテキストの。"
    },
    {
      "indent": 0,
      "text": "E. Recommendations for Delimiting URI in Context",
      "ja": "コンテキストでURIを区切るためのE.勧告"
    },
    {
      "indent": 3,
      "text": "URI are often transmitted through formats that do not provide a clear context for their interpretation. For example, there are many occasions when URI are included in plain text; examples include text sent in electronic mail, USENET news messages, and, most importantly, printed on paper. In such cases, it is important to be able to delimit the URI from the rest of the text, and in particular from punctuation marks that might be mistaken for part of the URI.",
      "ja": "URIは、多くの場合、それらの解釈のための明確なコンテキストを提供していないフォーマットを介して送信されます。たとえば、URIがプレーンテキストに含まれている多くの機会があります。例は、電子メールで送信されたテキスト、USENETニュースメッセージ、そして、最も重要なのは、紙に印刷が含まれます。このような場合には、テキストの残りの部分から、特にURIの一部と誤解されるかもしれない句読点からURIを区切ることができることが重要です。"
    },
    {
      "indent": 3,
      "text": "In practice, URI are delimited in a variety of ways, but usually within double-quotes \"http://test.com/\", angle brackets <http://test.com/>, or just using whitespace",
      "ja": "実際には、URIは、さまざまな方法で区切られますが、通常は二重引用符「http://test.com/」内で、山括弧<http://test.com/>、または単に空白を使用しています"
    },
    {
      "indent": 29,
      "text": "http://test.com/",
      "ja": "ｈっｔｐ：／／てｓｔ。こｍ／"
    },
    {
      "indent": 3,
      "text": "These wrappers do not form part of the URI.",
      "ja": "これらのラッパーは、URIの一部を形成するものではありません。"
    },
    {
      "indent": 3,
      "text": "In the case where a fragment identifier is associated with a URI reference, the fragment would be placed within the brackets as well (separated from the URI with a \"#\" character).",
      "ja": "フラグメント識別子はURI参照に関連付けられている場合には、断片は、（「＃」文字でURIから分離）も括弧内に配置されることになります。"
    },
    {
      "indent": 3,
      "text": "In some cases, extra whitespace (spaces, linebreaks, tabs, etc.) may need to be added to break long URI across lines. The whitespace should be ignored when extracting the URI.",
      "ja": "いくつかのケースでは、余分な空白（スペース、改行、タブなど）が行にわたって長いURIを破るために追加する必要があります。 URIを抽出する際、空白は無視されるべきです。"
    },
    {
      "indent": 3,
      "text": "No whitespace should be introduced after a hyphen (\"-\") character. Because some typesetters and printers may (erroneously) introduce a hyphen at the end of line when breaking a line, the interpreter of a URI containing a line break immediately after a hyphen should ignore all unescaped whitespace around the line break, and should be aware that the hyphen may or may not actually be part of the URI.",
      "ja": "文字 - いいえ、空白はハイフン（「」）の後に導入すべきではありません。ラインを破ったときに、いくつかのタイプセッタやプリンタが（誤って）行の最後にハイフンを導入することができるので、ハイフンの直後に改行を含むURIのインタプリタは、改行の周りのすべてのエスケープされていない空白を無視すべきで、その認識しておく必要がありハイフンは、または実際にURIの一部であってもなくてもよいです。"
    },
    {
      "indent": 3,
      "text": "Using <> angle brackets around each URI is especially recommended as a delimiting style for URI that contain whitespace.",
      "ja": "各URIの周り<>山括弧を使用することで、特に空白文字が含まれているURIの区切りスタイルとして推奨されます。"
    },
    {
      "indent": 3,
      "text": "The prefix \"URL:\" (with or without a trailing space) was recommended as a way to used to help distinguish a URL from other bracketed designators, although this is not common in practice.",
      "ja": "接頭辞「URLは：」これは実際には一般的ではありませんが、（または末尾にスペースなし）、他の括弧指定子からURLを区別しやすくするために使用するための方法として推奨されていました。"
    },
    {
      "indent": 3,
      "text": "For robustness, software that accepts user-typed URI should attempt to recognize and strip both delimiters and embedded whitespace.",
      "ja": "堅牢性のために、ユーザが入力したURIを受け入れソフトウェアは、区切り文字と埋め込まれた空白の両方を認識し、ストリップを試みる必要があります。"
    },
    {
      "indent": 3,
      "text": "For example, the text:",
      "ja": "たとえば、テキスト："
    },
    {
      "indent": 6,
      "text": "Yes, Jim, I found it under \"http://www.w3.org/Addressing/\", but you can probably pick it up from <ftp://ds.internic. net/rfc/>. Note the warning in <http://www.ics.uci.edu/pub/ ietf/uri/historical.html#WARNING>.",
      "ja": "はい、ジムは、私が「http://www.w3.org/Addressing/」の下でそれを見つけましたが、あなたはおそらく、<FTPからそれを拾うことができます。//ds.internic。ネット/ RFC />。 <http://www.ics.uci.edu/pub/ IETF / URI / historical.html＃警告>での警告に注意してください。"
    },
    {
      "indent": 3,
      "text": "contains the URI references",
      "ja": "URI参照が含まれています"
    },
    {
      "indent": 6,
      "text": "http://www.w3.org/Addressing/ ftp://ds.internic.net/rfc/ http://www.ics.uci.edu/pub/ietf/uri/historical.html#WARNING",
      "ja": "ｈっｔｐ：／／ｗっｗ。ｗ３。おｒｇ／あっｄれっしんｇ／ ｆｔｐ：／／ｄｓ。いんてｒにｃ。ねｔ／ｒｆｃ／ ｈっｔｐ：／／ｗっｗ。いｃｓ。うし。えづ／ぷｂ／いえｔｆ／うり／ひｓとりかｌ。ｈｔｍｌ＃わＲにんＧ"
    },
    {
      "indent": 0,
      "text": "F. Abbreviated URLs",
      "ja": "F.短縮URLを"
    },
    {
      "indent": 3,
      "text": "The URL syntax was designed for unambiguous reference to network resources and extensibility via the URL scheme. However, as URL identification and usage have become commonplace, traditional media (television, radio, newspapers, billboards, etc.) have increasingly used abbreviated URL references. That is, a reference consisting of only the authority and path portions of the identified resource, such as",
      "ja": "URLの構文は、URLスキームを介してネットワークリソースおよび拡張性への明確な参照のために設計されました。 URL識別および使用が一般的になってきたようしかし、従来のメディア（テレビ、ラジオ、新聞、看板等）は、ますます略記URL参照を使用しています。すなわち、例えば、識別されたリソースの唯一の権限とパス部分から成る参照、です"
    },
    {
      "indent": 6,
      "text": "www.w3.org/Addressing/",
      "ja": "ｗっｗ。ｗ３。おｒｇ／あっｄれっしんｇ／"
    },
    {
      "indent": 3,
      "text": "or simply the DNS hostname on its own. Such references are primarily intended for human interpretation rather than machine, with the assumption that context-based heuristics are sufficient to complete the URL (e.g., most hostnames beginning with \"www\" are likely to have a URL prefix of \"http://\"). Although there is no standard set of heuristics for disambiguating abbreviated URL references, many client implementations allow them to be entered by the user and heuristically resolved. It should be noted that such heuristics may change over time, particularly when new URL schemes are introduced.",
      "ja": "あるいは単に自分自身でDNSホスト名。このような参照は、主に例えば、「WWW」で始まるほとんどのホスト名が「http：//」にのURL接頭辞を持っている可能性があり（コンテキストベースのヒューリスティックは、URLを完了するのに十分であることを前提に、人間の解釈ではなく、マシンのために意図されています）。省略URL参照を一義化のためのヒューリスティクスのない標準セットはありませんが、多くのクライアントの実装では、彼らは、ユーザーが入力したと発見的に解決することができます。このような経験則は、新しいURLスキームが導入されている場合は特に、時間の経過とともに変化することに留意すべきです。"
    },
    {
      "indent": 3,
      "text": "Since an abbreviated URL has the same syntax as a relative URL path, abbreviated URL references cannot be used in contexts where relative URLs are expected. This limits the use of abbreviated URLs to places where there is no defined base URL, such as dialog boxes and off-line advertisements.",
      "ja": "略記URLが相対URLパスと同じシンタックスを有するため、略称URL参照が相対URLが予想される状況で使用することができません。これは、ダイアログボックスとオフライン広告などなしベースURLが定義されている場所と略記するURLの使用を制限します。"
    },
    {
      "indent": 0,
      "text": "G. Summary of Non-editorial Changes",
      "ja": "非編集上の変更のG.概要"
    },
    {
      "indent": 0,
      "text": "G.1. Additions",
      "ja": "G.1。追加"
    },
    {
      "indent": 3,
      "text": "Section 4 (URI References) was added to stem the confusion regarding \"what is a URI\" and how to describe fragment identifiers given that they are not part of the URI, but are part of the URI syntax and parsing concerns. In addition, it provides a reference definition for use by other IETF specifications (HTML, HTTP, etc.) that have previously attempted to redefine the URI syntax in order to account for the presence of fragment identifiers in URI references.",
      "ja": "第4節（URI参照）は、「どのようなURIである」とどのように彼らはURIの一部ではありませんが、URIの構文と解析の問題の一部であることを考えるとフラグメント識別子を記述するために関する混乱を食い止めるために追加されました。また、以前にURI参照におけるフラグメント識別子の存在を考慮するために、URIの構文を再定義しようと試みてきた他のIETF仕様（等HTML、HTTP）で使用するための基準の定義を提供します。"
    },
    {
      "indent": 3,
      "text": "Section 2.4 was rewritten to clarify a number of misinterpretations and to leave room for fully internationalized URI.",
      "ja": "2.4節は、誤解の数を明らかにし、完全に国際URIのための余地を残すために書き直されました。"
    },
    {
      "indent": 3,
      "text": "Appendix F on abbreviated URLs was added to describe the shortened references often seen on television and magazine advertisements and explain why they are not used in other contexts.",
      "ja": "略しURLの付録Fは、多くの場合、テレビや雑誌広告で見短縮参照を記述し、それらが他の文脈で使用されていない理由を説明するために追加されました。"
    },
    {
      "indent": 1,
      "text": "G.2. Modifications from both and",
      "ja": "G.2。両方からの変更と"
    },
    {
      "indent": 3,
      "text": "Changed to URI syntax instead of just URL.",
      "ja": "URI構文だけではなくURLを変更しました。"
    },
    {
      "indent": 3,
      "text": "Confusion regarding the terms \"character encoding\", the URI \"character set\", and the escaping of characters with %<hex><hex> equivalents has (hopefully) been reduced. Many of the BNF rule names regarding the character sets have been changed to more accurately describe their purpose and to encompass all \"characters\" rather than just US-ASCII octets. Unless otherwise noted here, these modifications do not affect the URI syntax.",
      "ja": "用語「文字エンコーディング」、URI「文字セット」に関する混乱、および％<進> <進>当量の文字のエスケープは、（たぶん）減少しています。文字セットに関するBNF規則の名前の多くは、より正確にその目的を記述するために、すべての「文字」だけではなく、US-ASCIIオクテットを包含するように変更されました。そうでない場合は、ここで言及しない限り、これらの変更は、URIの構文には影響を与えません。"
    },
    {
      "indent": 3,
      "text": "Both RFC 1738 and RFC 1808 refer to the \"reserved\" set of characters as if URI-interpreting software were limited to a single set of characters with a reserved purpose (i.e., as meaning something other than the data to which the characters correspond), and that this set was fixed by the URI scheme. However, this has not been true in practice; any character that is interpreted differently when it is escaped is, in effect, reserved. Furthermore, the interpreting engine on a HTTP server is often dependent on the resource, not just the URI scheme. The description of reserved characters has been changed accordingly.",
      "ja": "URI-解釈するソフトウェアは、（文字が対応するデータ以外のものを意味するものとして、すなわち）の予約を目的と文字の単一のセットに限定されていたかのようにRFC 1738およびRFC 1808の両方が文字のセット「予約」を参照してください。そして、このセットは、URIスキームによって修正されました。しかし、これは実際には真されていません。それがエスケープされたときに異なって解釈されている任意の文字が、実際には、予約されています。さらに、HTTPサーバー上の解釈エンジンは、多くの場合、リソースだけでなく、URIスキームに依存しています。予約文字の説明は適宜変更されました。"
    },
    {
      "indent": 3,
      "text": "The plus \"+\", dollar \"$\", and comma \",\" characters have been added to those in the \"reserved\" set, since they are treated as reserved within the query component.",
      "ja": "プラス「+」、ドルの「$」、およびコンマそれらはクエリコンポーネント内に予約として扱われるので、「」の文字は、 『予約済み』セットのものに追加されました。"
    },
    {
      "indent": 3,
      "text": "The tilde \"~\" character was added to those in the \"unreserved\" set, since it is extensively used on the Internet in spite of the difficulty to transcribe it with some keyboards.",
      "ja": "広く、いくつかのキーボードでそれを転写する難しさにもかかわらず、インターネット上で使用されているので、チルダ「〜」の文字は、「予約されていない」セットのものに追加されました。"
    },
    {
      "indent": 3,
      "text": "The syntax for URI scheme has been changed to require that all schemes begin with an alpha character.",
      "ja": "URIスキームの構文は、すべてのスキームは、英字で始まることを要求するように変更されました。"
    },
    {
      "indent": 3,
      "text": "The \"user:password\" form in the previous BNF was changed to a \"userinfo\" token, and the possibility that it might be \"user:password\" made scheme specific. In particular, the use of passwords in the clear is not even suggested by the syntax.",
      "ja": "「ユーザー：パスワード」：スキーム特定作られた形以前のBNFでは「userinfoを」トークン、そしてそれは「パスワードのユーザー」であるかもしれないという可能性に変更されました。具体的には、明確でパスワードを使用することでも、構文によって示唆されていません。"
    },
    {
      "indent": 3,
      "text": "The question-mark \"?\" character was removed from the set of allowed characters for the userinfo in the authority component, since testing showed that many applications treat it as reserved for separating the query component from the rest of the URI.",
      "ja": "疑問符「？」テストは、URIの残りの部分からクエリコンポーネントを分離するために予約として多くのアプリケーションがそれを扱うことが示されたので、文字は、権限コンポーネントでのuserinfoに許可された文字の集合から削除されました。"
    },
    {
      "indent": 3,
      "text": "The semicolon \";\" character was added to those stated as being reserved within the authority component, since several new schemes are using it as a separator within userinfo to indicate the type of user authentication.",
      "ja": "セミコロン「;」文字は、いくつかの新しいスキームが、ユーザ認証の種類を示すために、ユーザー情報内のセパレータとして使用されているので、権限コンポーネント内に予約されているものとして記載されたものに加えました。"
    },
    {
      "indent": 3,
      "text": "RFC 1738 specified that the path was separated from the authority portion of a URI by a slash. RFC 1808 followed suit, but with a fudge of carrying around the separator as a \"prefix\" in order to describe the parsing algorithm. RFC 1630 never had this problem, since it considered the slash to be part of the path. In writing this specification, it was found to be impossible to accurately describe and retain the difference between the two URI <foo:/bar> and <foo:bar> without either considering the slash to be part of the path (as corresponds to actual practice) or creating a separate component just to hold that slash. We chose the former.",
      "ja": "RFC 1738は、パスがスラッシュによってURIの権限部分から分離されたことを指定しました。 RFC 1808は構文解析アルゴリズムを記述するためではなく、「接頭語」としてのセパレータを持ち歩くのファッジと、スーツに続きました。それはスラッシュがパスの一部であると考えられて以来、RFC 1630は、この問題を抱えていたことはありません。 <：/バーFOO>と<FOO：バー>この明細書を書面で、それを正確に2 URIの違いを説明し、保持することは不可能であることが見出された経路の一部であるスラッシュを考慮いずれかせず（実際に対応するように練習）、または単にそのスラッシュを保持するための別個の構成要素を作成します。私たちは、かつてのを選びました。"
    },
    {
      "indent": 1,
      "text": "G.3. Modifications from",
      "ja": "G.3。からの変更"
    },
    {
      "indent": 3,
      "text": "The definition of specific URL schemes and their scheme-specific syntax and semantics has been moved to separate documents.",
      "ja": "特定のURLスキームとそのスキーム固有の構文とセマンティクスの定義は、別のドキュメントに移動されました。"
    },
    {
      "indent": 3,
      "text": "The URL host was defined as a fully-qualified domain name. However, many URLs are used without fully-qualified domain names (in contexts for which the full qualification is not necessary), without any host (as in some file URLs), or with a host of \"localhost\".",
      "ja": "URLのホストは完全修飾ドメイン名として定義しました。しかし、多くのURLは（いくつかのファイルのURLのように）任意のホストせずに、（完全な資格が必要されていない状況では）完全修飾ドメイン名なしで使用、または「localhost」をホストしています。"
    },
    {
      "indent": 3,
      "text": "The URL port is now *digit instead of 1*digit, since systems are expected to handle the case where the \":\" separator between host and port is supplied without a port.",
      "ja": "ホストとポートの間にセパレータがポートなしで供給されます。「」システムはケースを扱うことが期待されるので、URLポートは、今*数字の代わりに1 *桁です。"
    },
    {
      "indent": 3,
      "text": "The recommendations for delimiting URI in context (Appendix E) have been adjusted to reflect current practice.",
      "ja": "コンテキスト（付録E）でURIを区切るための推奨事項は、現在の慣行を反映するために調整されています。"
    },
    {
      "indent": 1,
      "text": "G.4. Modifications from",
      "ja": "G.4。からの変更"
    },
    {
      "indent": 3,
      "text": "RFC 1808 (Section 4) defined an empty URL reference (a reference containing nothing aside from the fragment identifier) as being a reference to the base URL. Unfortunately, that definition could be interpreted, upon selection of such a reference, as a new retrieval action on that resource. Since the normal intent of such references is for the user agent to change its view of the current document to the beginning of the specified fragment within that document, not to make an additional request of the resource, a description of how to correctly interpret an empty reference has been added in Section 4.",
      "ja": "RFC 1808（セクション4）は、ベースURLを参照するものとして、空のURL参照（フラグメント識別子は別に何も含まない基準）を定義しました。残念ながら、その定義は、そのリソース上の新たな検索動作として、そのような基準を選択すると、解釈することができます。このような参照の正常な意図は、その文書内の指定されたフラグメントの先頭に現在のドキュメントのビューを変更するには、リソースの追加要求、正しく空を解釈する方法についての説明をしないように、ユーザエージェント用であるので、参照は、セクション4で追加されています。"
    },
    {
      "indent": 3,
      "text": "The description of the mythical Base header field has been replaced with a reference to the Content-Location header field defined by MHTML [RFC2110].",
      "ja": "神話の基本ヘッダフィールドの記述は、MHTML [RFC2110]で定義されたコンテンツ・ロケーション・ヘッダ・フィールドを参照して置き換えられています。"
    },
    {
      "indent": 3,
      "text": "RFC 1808 described various schemes as either having or not having the properties of the generic URI syntax. However, the only requirement is that the particular document containing the relative references have a base URI that abides by the generic URI syntax, regardless of the URI scheme, so the associated description has been updated to reflect that.",
      "ja": "RFC 1808は、一般的なURI構文の特性を有する有するかのいずれかとして、様々なスキームが記載されています。しかし、唯一の要件は、相対的な参照を含む特定の文書に関係なくURIスキームの、一般的なURIの構文を遵守ベースURIを有することであるので、関連する記述は、それを反映するように更新されました。"
    },
    {
      "indent": 3,
      "text": "The BNF term <net_loc> has been replaced with <authority>, since the latter more accurately describes its use and purpose. Likewise, the authority is no longer restricted to the IP server syntax.",
      "ja": "後者は、より正確に、その使用と目的を説明するのでBNFの用語<net_loc>は、<権威>に置き換えられました。同様に、当局は、もはやIPサーバ構文に限定されません。"
    },
    {
      "indent": 3,
      "text": "Extensive testing of current client applications demonstrated that the majority of deployed systems do not use the \";\" character to indicate trailing parameter information, and that the presence of a semicolon in a path segment does not affect the relative parsing of that segment. Therefore, parameters have been removed as a separate component and may now appear in any path segment. Their influence has been removed from the algorithm for resolving a relative URI reference. The resolution examples in Appendix C have been modified to reflect this change.",
      "ja": "現在のクライアントアプリケーションの広範な試験は、展開システムの大半は使用しないことを証明しました「;」文字は、後続のパラメータ情報を示すために、パスセグメントにセミコロンが存在すると、そのセグメントの相対的解析に影響を及ぼさないこと。したがって、パラメータは、別個の構成要素として削除されており、任意の経路セグメントに表示されてもよいです。彼らの影響力は相対URI参照を解決するためのアルゴリズムから削除されました。付録Cの解像度の例は、この変更を反映するように変更されました。"
    },
    {
      "indent": 3,
      "text": "Implementations are now allowed to work around misformed relative references that are prefixed by the same scheme as the base URI, but only for schemes known to use the <hier_part> syntax.",
      "ja": "実装は今、ベースURIとしてではなく、唯一の<hier_part>構文を使用することが知られている方式に対して同じスキームで接頭辞misformedの相対参照を回避することが許可されています。"
    },
    {
      "indent": 0,
      "text": "H. Full Copyright Statement",
      "ja": "H.完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (1998). All Rights Reserved.",
      "ja": "著作権（C）インターネット協会（1998）。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the Internet Society or other Internet organizations, except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed, or as required to translate it into languages other than English.",
      "ja": "この文書とその翻訳は、コピーして他の人に提供し、それ以外についてはコメントまたは派生物は、いかなる種類の制限もなく、全体的にまたは部分的に、準備コピーし、公表して配布することができることを説明したり、その実装を支援することができます、上記の著作権表示とこの段落は、すべてのそのようなコピーや派生物に含まれていることを条件とします。しかし、この文書自体は著作権のための手順はで定義されている場合には、インターネット標準を開発するために必要なものを除き、インターネットソサエティもしくは他のインターネット関連団体に著作権情報や参照を取り除くなど、どのような方法で変更されないかもしれませんインターネット標準化プロセスが続く、または英語以外の言語に翻訳するために、必要に応じなければなりません。"
    },
    {
      "indent": 3,
      "text": "The limited permissions granted above are perpetual and will not be revoked by the Internet Society or its successors or assigns.",
      "ja": "上記の制限は永久で、インターネット学会やその後継者や譲渡者によって取り消されることはありません。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein is provided on an \"AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書とここに含まれている情報は、基礎とインターネットソサエティおよびインターネットエンジニアリングタスクフォースはすべての保証を否認し、明示または黙示、その情報の利用がない任意の保証を含むがこれらに限定されない「として、」上に設けられています特定の目的への権利または商品性または適合性の黙示の保証を侵害します。"
    }
  ]
}