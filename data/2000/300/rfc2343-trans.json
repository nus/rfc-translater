{
  "title": {
    "text": "RFC 2343 - RTP Payload Format for Bundled MPEG",
    "ja": "RFC 2343 - バンドルMPEGのためのRTPペイロードフォーマット"
  },
  "number": 2343,
  "created_at": "2019-10-23 12:10:02.306130+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                          M. Civanlar\nRequest for Comments: 2343                                         G. Cash\nCategory: Experimental                                          B. Haskell\n                                                        AT&T Labs-Research\n                                                                  May 1998",
      "raw": true
    },
    {
      "indent": 18,
      "text": "RTP Payload Format for Bundled MPEG",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "このメモの位置付け"
    },
    {
      "indent": 3,
      "text": "This memo defines an Experimental Protocol for the Internet community. This memo does not specify an Internet standard of any kind. Discussion and suggestions for improvement are requested. Distribution of this memo is unlimited.",
      "ja": "このメモはインターネットコミュニティのためにExperimentalプロトコルを定義します。このメモはどんな種類のインターネット標準を指定しません。改善のための議論や提案が要求されています。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (1998). All Rights Reserved.",
      "ja": "著作権（C）インターネット協会（1998）。全著作権所有。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document describes a payload type for bundled, MPEG-2 encoded video and audio data that may be used with RTP, version 2. Bundling has some advantages for this payload type particularly when it is used for video-on-demand applications. This payload type may be used when its advantages are important enough to sacrifice the modularity of having separate audio and video streams.",
      "ja": "このドキュメントは、RTPで使用することができるバンドル、MPEG-2エンコードされたビデオ及びオーディオデータのためのペイロードタイプを記載し、バージョン2バンドリングは、それがビデオオンデマンドアプリケーションに使用され、特に、このペイロード・タイプのためのいくつかの利点を有します。その利点は、別個のオーディオストリーム及びビデオストリームを有するのモジュール性を犠牲にするのに十分に重要である場合、このペイロードタイプが使用されてもよいです。"
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "This document describes a bundled packetization scheme for MPEG-2 encoded audio and video streams using the Real-time Transport Protocol (RTP), version 2 [1].",
      "ja": "この文書は、リアルタイムトランスポートプロトコル（RTP）、バージョン2を使用してMPEG-2エンコードされたオーディオ及びビデオストリームのバンドルされたパケット化スキーム[1]記載されています。"
    },
    {
      "indent": 3,
      "text": "The MPEG-2 International standard consists of three layers: audio, video and systems [2]. The audio and the video layers define the syntax and semantics of the corresponding \"elementary streams.\" The systems layer supports synchronization and interleaving of multiple compressed streams, buffer initialization and management, and time identification. RFC 2250 [3] describes packetization techniques to transport individual audio and video elementary streams as well as the transport stream, which is defined at the system layer, using the RTP.",
      "ja": "オーディオ、ビデオ及びシステム[2]：MPEG-2国際標準は、3つの層から構成されています。オーディオとビデオの層は、対応するのシンタックスとセマンティクスを定義「エレメンタリーストリームを。」システム層は、複数の圧縮ストリームバッファの初期化および管理、および時間識別子の同期化及びインターリービングをサポートします。 RFC 2250 [3] RTPを使用して、個々のオーディオおよびビデオエレメンタリストリームと同様に、システムレイヤで定義されたトランスポートストリームを搬送するパケット化技術を説明します。"
    },
    {
      "indent": 3,
      "text": "The bundled packetization scheme is needed because it has several advantages over other schemes for some important applications including video-on-demand (VOD) where, audio and video are always used together. Its advantages over independent packetization of audio and video are:",
      "ja": "それはビデオ・オン・デマンド（VOD）、オーディオとビデオが常に一緒に使用されているなど、いくつかの重要なアプリケーションのための他の方式に比べていくつかの利点を持っているので、同梱パケット化スキームが必要とされています。オーディオとビデオの独立したパケットを超えるその利点は以下のとおりです。"
    },
    {
      "indent": 5,
      "text": "1. Uses a single port per \"program\" (i.e. bundled A/V). This may increase the number of streams that can be served e.g., from a VOD server. Also, it eliminates the performance hit when two ports are used for the separate audio and video streams on the client side.",
      "ja": "1. \"プログラム\"（すなわち、バンドルA / V）ごとに単一のポートを使用します。これは、VODサーバから、例えば配信できるストリームの数を増加させることができます。また、2つのポートがクライアント側で別々のオーディオおよびビデオストリーム用に使用されているパフォーマンスヒットがなくなります。"
    },
    {
      "indent": 5,
      "text": "2. Provides implicit synchronization of audio and video. This is particularly convenient when the A/V data is stored in an interleaved format at the server.",
      "ja": "2.オーディオとビデオの暗黙の同期を提供します。 A / Vデータがサーバにインターリーブ形式で格納されている場合、これは特に便利です。"
    },
    {
      "indent": 5,
      "text": "3. Reduces the header overhead. Since using large packets increases the effects of losses and delay, audio only packets need to be smaller increasing the overhead. An A/V bundled format can provide about 1% overall overhead reduction. Considering the high bitrates used for MPEG-2 encoded material, e.g. 4 Mbps, the number of bits saved, e.g. 40 Kbps, may provide noticeable audio or video quality improvement.",
      "ja": "3.ヘッダのオーバーヘッドを削減します。大きなパケットを使用して損失および遅延の影響を増大させるため、オーディオパケットのみがオーバーヘッドを増加小さくする必要があります。 A / Vバンドル形式は、約1％の全体的なオーバーヘッドの減少を提供することができます。 MPEG-2符号化された材料のために使用される高ビットレートを考慮すると、例えば4 Mbpsの、保存されたビット数、例えば40 Kbpsのは、顕著なオーディオやビデオの品質の向上を提供することができます。"
    },
    {
      "indent": 5,
      "text": "4. May reduce overall receiver buffer size. Audio and video streams may experience different delays when transmitted separately. The receiver buffers need to be designed for the longest of these delays. For example, let's assume that using two buffers, each with a size B, is sufficient with probability P when each stream is transmitted individually. The probability that the same buffer size will be sufficient when both streams need to be received is P times the conditional probability of B being sufficient for the second stream given that it was sufficient for the first one. This conditional probability is, generally, less than one requiring use of a larger buffer size to achieve the same probability level.",
      "ja": "4.全体の受信バッファのサイズを減らすことができます。別々に送信する場合、オーディオおよびビデオストリームは、異なる遅延が発生することがあります。受信バッファは、これらの遅延の最長のために設計する必要があります。例えば、の各ストリームを個別に送信する場合、二つのバッファサイズBとのそれぞれを使用して、確率Pで十分であると仮定する。両方のストリームを受信する必要がある場合、同じバッファサイズが十分である確率は、P時間はBの条件付き確率は、それが最初のもののために十分であったことを考えると第二の流れのために十分です。この条件付き確率は、一般に、同じ確率のレベルを達成するために、より大きなバッファサイズを使用する必要が1未満です。"
    },
    {
      "indent": 5,
      "text": "5. May help with the control of the overall bandwidth used by an A/V program.",
      "ja": "5. A / Vプログラムによって使用される全体的な帯域幅の制御に役立つかもしれません。"
    },
    {
      "indent": 3,
      "text": "And, the advantages over packetization of the transport layer streams are:",
      "ja": "そして、トランスポート層ストリームのパケットを超える利点は以下のとおりです。"
    },
    {
      "indent": 5,
      "text": "1. Reduced overhead. It does not contain systems layer information which is redundant for the RTP (essentially they address similar issues).",
      "ja": "1.削減のオーバーヘッド。これは、RTP（基本的に、彼らは同様の問題に対処する）ための冗長であるシステム層の情報が含まれていません。"
    },
    {
      "indent": 5,
      "text": "2. Easier error recovery. Because of the structured packetization consistent with the application layer framing (ALF) principle, loss concealment and error recovery can be made simpler and more effective.",
      "ja": "2.簡単エラー回復。そのため、アプリケーション層のフレーミング（ALF）の原則と矛盾構造化されたパケットの損失の隠蔽とエラー回復は簡単でより効果的にすることができます。"
    },
    {
      "indent": 0,
      "text": "2. Encapsulation of Bundled MPEG Video and Audio",
      "section_title": true,
      "ja": "同梱MPEGビデオとオーディオの2カプセル化"
    },
    {
      "indent": 3,
      "text": "Video encapsulation follows rules similar to the ones described in [3] for encapsulation of MPEG elementary streams. Specifically,",
      "ja": "ビデオカプセル化は、MPEGエレメンタリストリームのカプセル化のために、[3]に記載のものと同様の規則に従います。具体的には、"
    },
    {
      "indent": 5,
      "text": "1. The MPEG Video_Sequence_Header, when present, will always be at the beginning of an RTP payload.",
      "ja": "1. MPEG Video_Sequence_Header、存在する場合、常にRTPペイロードの先頭にあるであろう。"
    },
    {
      "indent": 5,
      "text": "2. An MPEG GOP_header, when present, will always be at the beginning of the RTP payload, or will follow a Video_Sequence_Header.",
      "ja": "【請求項2】MPEGまた、GOP_headerは、存在する場合、常にRTPペイロードの先頭であるか、またはVideo_Sequence_Headerに従います。"
    },
    {
      "indent": 5,
      "text": "3. An MPEG Picture_Header, when present, will always be at the beginning of a RTP payload, or will follow a GOP_header.",
      "ja": "3.アンMPEG Picture_Headerは、存在する場合、常にRTPペイロードの先頭になり、あるいはまた、GOP_headerに従います。"
    },
    {
      "indent": 3,
      "text": "In addition to these, it is required that:",
      "ja": "これらに加えて、次のことが必要です。"
    },
    {
      "indent": 5,
      "text": "4. Each packet must contain an integral number of video slices.",
      "section_title": true,
      "ja": "4.各パケットは、ビデオスライスの整数を含んでいなければなりません。"
    },
    {
      "indent": 3,
      "text": "It is the application's responsibility to adjust the slice sizes and the number of slices put in each RTP packet so that lower level fragmentation does not occur. This approach simplifies the receivers while somewhat increasing the complexity of the transmitter's packetizer. Considering that a slice can be as small as a single macroblock, it is possible to prevent fragmentation for most of the cases. If a packet size exceeds the path maximum transmission unit (path-MTU) [4], this payload type depends on the lower protocol layers for fragmentation although, this may cause problems with packet classification for integrated services (e.g. with RSVP).",
      "ja": "スライスのサイズと低いレベルの断片化が発生しないように、各RTPパケットに入れスライスの数を調整するために、アプリケーションの責任です。このアプローチはややトランスミッタのパケタイザの複雑さを増大させながら受信機を簡素化します。スライスは、単一のマクロブロックと同じくらい小さくすることができることを考えると、ほとんどの場合のための断片化を防止することができます。パケットサイズが[4]、このペイロードタイプがあるがフラグメンテーションのために下位プロトコル層に依存経路最大送信ユニット（経路MTU）を超える場合、これは統合サービス（例えばRSVP付き）のパケット分類の問題を引き起こす可能性があります。"
    },
    {
      "indent": 3,
      "text": "The video data is followed by a sufficient number of integral audio frames to cover the duration of the video segment included in a packet. For example, if the first packet contains three 1/900 seconds long slices of video, and Layer I audio coding is used at a 44.1kHz sampling rate, only one audio frame covering 384/44100 seconds of audio need be included in this packet. Since the length of this audio frame (8.71 msec.) is longer than that of the video segment contained in this packet (3.33 msec), the next few packets may not contain any audio frames until the packet in which the covered video time extends outside the length of the previously transmitted audio frames. Alternatively, it is possible, in this proposal, to repeat the latest audio frame in \"no-audio\" packets for packet loss resilience. Again, it is the application's responsibility to adjust the bundled packet size according to the minimum MTU size to prevent fragmentation.",
      "ja": "ビデオデータは、パケットに含まれるビデオセグメントの期間をカバーするように積分オーディオフレームの十分な数が続きます。例えば、最初のパケットは3 900分の1秒にビデオの長いスライスが含まれている場合、およびレイヤIオーディオ符号化は、44.1kHzのサンプリングレートで使用され、オーディオの44100分の384秒をカバーする唯一のオーディオフレームは、このパケットに含まれる必要があります。このオーディオフレーム（8.71ミリ秒）の長さがこのパケット（3.33ミリ秒）に含まれるビデオセグメントのそれよりもあるので、次のいくつかのパケットが覆わビデオ時間が外側に延びているパケットまでの任意のオーディオフレームを含んでいてもよいです以前に送信された音声フレームの長さ。また、それは、パケットロス回復力のための「無音声」パケットで最新のオーディオフレームを繰り返すために、この提案では、可能です。ここでも、断片化を防止するための最小MTUサイズに応じて同梱パケットサイズを調整するために、アプリケーションの責任です。"
    },
    {
      "indent": 0,
      "text": "2.1. RTP Fixed Header for BMPEG Encapsulation",
      "section_title": true,
      "ja": "2.1。 BMPEGカプセル化のためのRTP固定ヘッダ"
    },
    {
      "indent": 3,
      "text": "The following RTP header fields are used:",
      "ja": "次のRTPヘッダフィールドが使用されます。"
    },
    {
      "indent": 5,
      "text": "Payload Type: A distinct payload type number, which may be dynamic, should be assigned to BMPEG.",
      "ja": "ペイロードタイプ：動的であってもよい別個のペイロードタイプ番号は、BMPEGに割り当てなければなりません。"
    },
    {
      "indent": 5,
      "text": "M Bit: Set for packets containing end of a picture.",
      "ja": "Mビット：絵の終わりを含むパケットのために設定してください。"
    },
    {
      "indent": 5,
      "text": "timestamp: 32-bit 90 kHz timestamp representing sampling time of the MPEG picture. May not be monotonically increasing if B pictures are present. Same for all packets belonging to the same picture. For packets that contain only a sequence, extension and/or GOP header, the timestamp is that of the subsequent picture.",
      "ja": "タイムスタンプ：MPEG映像のサンプリング時間を表す32ビット90 kHzのタイムスタンプ。 B画像が存在している場合は単調に増加することはできません。同じ絵に属するすべてのパケットに対して同じ。配列のみ、伸長および/またはGOPヘッダを含むパケットの場合、タイムスタンプは次のピクチャのことです。"
    },
    {
      "indent": 0,
      "text": "2.2. BMPEG Specific Header:",
      "section_title": true,
      "ja": "2.2。 BMPEG特定のヘッダ："
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| P |N|MBZ|    Audio Length   | |         Audio Offset          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                              MBZ",
      "raw": true
    },
    {
      "indent": 4,
      "text": "P: Picture type (2 bits). I (0), P (1), B (2).",
      "ja": "P：ピクチャタイプ（2ビット）。 I（0）、P（1）、B（2）。"
    },
    {
      "indent": 4,
      "text": "N: Header data changed (1 bit). Set if any part of the video sequence, extension, GOP and picture header data is different than that of the previously sent headers. It gets reset when all the header data gets repeated (see Appendix 1).",
      "ja": "Nは：ヘッダデータ（1ビット）を変更しました。ビデオシーケンスの任意の部分場合に設定、拡張、GOPピクチャヘッダデータは、以前に送信されたヘッダーのものとは異なります。すべてのヘッダデータを繰り返し取得した時点では、リセットされる（付録1を参照）。"
    },
    {
      "indent": 4,
      "text": "MBZ: Must be zero. Reserved for future use.",
      "ja": "MBZはゼロでなければなりません。将来の使用のために予約されています。"
    },
    {
      "indent": 4,
      "text": "Audio Length: (10 bits) Length of the audio data in this packet in bytes. Start of the audio data is found by subtracting \"Audio Length\" from the total length of the received packet.",
      "ja": "オーディオの長さ：バイト単位でこのパケットの音声データ（10ビット）の長さ。オーディオデータの開始は、受信したパケットの合計長さから「オーディオの長さを」減算することによって見出されます。"
    },
    {
      "indent": 4,
      "text": "Audio Offset: (16 bits) The offset between the start of the audio frame and the RTP timestamp for this packet in number of audio samples (for multi-channel sources, a set of samples covering all channels is counted as one sample for this purpose.)",
      "ja": "オーディオオフセット（16ビット）を、この目的のために一つのサンプルとしてカウントされたオーディオフレームの開始とマルチチャンネルソースのオーディオサンプルの数でこのパケットのRTPタイムスタンプ（全てのチャンネルをカバーするサンプルのセットとの間のオフセット。）"
    },
    {
      "indent": 4,
      "text": "Audio offset is a signed integer in two's complement form. It allows a ~ +/- 750 msec offset at 44.1 KHz audio sampling rate. For a very low video frame rate (e.g., a frame per second), this offset may not be sufficient and this payload format may not be usable.",
      "ja": "オーディオオフセットは、2の補数形式で符号付き整数です。これは、44.1 kHzのオーディオサンプリングレートでオフセット〜+/- 750ミリ秒を可能にします。非常に低いビデオフレームレート（毎秒例えば、フレーム）のために、このオフセットは十分ではないかもしれないし、このペイロードフォーマットが利用可能ではないかもしれません。"
    },
    {
      "indent": 4,
      "text": "If B frames are present, audio frames are not re-ordered along with video. Instead, they are packetized along with video frames in their transmission order (e.g., an audio segment packetized with a video segment corresponding to a P picture may belong to a B picture, which will be transmitted later and should be rendered at the same time with this audio segment.) Even though the video segments are reordered, the audio offset for a particular audio segment is still relative to the RTP timestamp in the packet containing that audio segment.",
      "ja": "Bフレームが存在している場合は、オーディオフレームは、ビデオと一緒に並べ替えではありません。その代わりに、彼らは、それらの送信順序でビデオフレーム（例えば、Pピクチャに対応するビデオセグメントとパケット化オーディオセグメントが後に送信され、同じ時間とでレンダリングされるべきであるBピクチャに属することができると共にパケット化されていますこのオーディオセグメントビデオセグメントが並べ替えられるにもかかわらず。）、特定の音声セグメントのオフセットオーディオは、オーディオセグメントを含むパケットに依然としてRTPタイムスタンプに対するものです。"
    },
    {
      "indent": 4,
      "text": "Since a special picture counter, such as the \"temporal reference (TR)\" field of [3], is not included in this payload format, lost GOP headers may not be detected. The only effect of this may be incorrect decoding of the B pictures immediately following the lost GOP header for some edited video material.",
      "ja": "このような「時間参照（TR）」のような特殊な画像カウンタは、[3]のフィールドは、このペイロードフォーマットに含まれていないため、GOPヘッダが検出されないことが失いました。これの唯一の効果はすぐにいくつかの編集映像素材のために失われたGOPヘッダに続くBピクチャの誤った復号化してもよいです。"
    },
    {
      "indent": 0,
      "text": "3. Security Considerations",
      "section_title": true,
      "ja": "3.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "RTP packets using the payload format defined in this specification are subject to the security considerations discussed in the RTP specification [1]. This implies that confidentiality of the media streams is achieved by encryption. Because the data compression used with this payload format is applied end-to-end, encryption may be performed after compression so there is no conflict between the two operations.",
      "ja": "本明細書で定義されたペイロードフォーマットを使用して、RTPパケットは、RTP仕様[1]で説明したセキュリティ上の考慮の対象となっています。これは、メディアストリームの機密性は、暗号化によって達成されることを意味します。このペイロードフォーマットに使用されるデータ圧縮は、エンドツーエンドで適用されるので、二つの操作の間に競合がないので、暗号化は、圧縮後に行ってもよいです。"
    },
    {
      "indent": 3,
      "text": "This payload type does not exhibit any significant non-uniformity in the receiver side computational complexity for packet processing to cause a potential denial-of-service threat.",
      "ja": "このペイロードタイプは、潜在的なサービス拒否の脅威を引き起こすために、パケット処理のために受信機側計算の複雑さに重大な不均一性を示しません。"
    },
    {
      "indent": 3,
      "text": "A security review of this payload format found no additional considerations beyond those in the RTP specification.",
      "ja": "このペイロード形式のセキュリティレビューは、RTP仕様のものを超えて追加の考慮事項は認められませんでした。"
    },
    {
      "indent": 0,
      "text": "Appendix 1. Error Recovery",
      "ja": "付録1.エラー回復"
    },
    {
      "indent": 3,
      "text": "Packet losses can be detected from a combination of the sequence number and the timestamp fields of the RTP fixed header. The extent of the loss can be determined from the timestamp, the slice number and the horizontal location of the first slice in the packet. The slice number and the horizontal location can be determined from the slice header and the first macroblock address increment, which are located at fixed bit positions.",
      "ja": "パケット損失は、シーケンス番号及びRTPの固定ヘッダのタイムスタンプ・フィールドの組み合わせを検出することができます。損失の程度は、タイムスタンプ、スライス番号とパケットの最初のスライスの水平位置から決定することができます。スライス番号と水平位置は、スライスヘッダと固定ビット位置に配置された第1のマクロブロックアドレスインクリメントから決定することができます。"
    },
    {
      "indent": 3,
      "text": "If lost data consists of slices all from the same picture, new data following the loss may simply be given to the video decoder which will normally repeat missing pixels from a previous picture. The next audio frame must be played at the appropriate time determined by the timestamp and the audio offset contained in the received packet. Appropriate audio frames (e.g., representing background noise) may need to be fed to the audio decoder in place of the lost audio frames to keep the lip-synch and/or to conceal the effects of the losses.",
      "ja": "失われたデータがすべて同じ画像からのスライスで構成されている場合、損失を次の新しいデータは、単に、通常、前のピクチャから欠落画素を繰り返すビデオデコーダに与えられてもよいです。次のオーディオフレームが受信されたパケットに含まれるタイムスタンプとオフセットオーディオによって決定される適切な時間で再生されなければなりません。適切なオーディオフレーム（例えば、バックグラウンドノイズを表す）はリップシンクを維持する及び/又は損失の影響を隠すために、失われた音声フレームの代わりに、オーディオデコーダに供給する必要があるかもしれません。"
    },
    {
      "indent": 3,
      "text": "If the received new data after a loss is from the next picture (i.e. no complete picture loss) and the N bit is not set, previously received headers for the particular picture type (determined from the P bits) can be given to the video decoder followed by the new data. If N is set, data deletion until a new picture start code is advisable unless headers are made available to the receiver through some other channel.",
      "ja": "損失後の受信新しいデータ（すなわちない完全な画像損失）次のピクチャからのものであり、Nビットが設定されていない場合、（Pビットから決定される）特定のピクチャタイプのための以前に受信されたヘッダは、ビデオデコーダに与えることができます新しいデータが続きます。 Nが設定されている場合、ヘッダーは、いくつかの他のチャネルを介して受信機に利用できるようにされていない限り、新しいピクチャスタートコードまでのデータの削除はお勧めです。"
    },
    {
      "indent": 3,
      "text": "If data for more than one picture is lost and headers are not available, unless N is zero and at least one packet has been received for every intervening picture of the same type and that the N bit was 0 for each of those pictures, resynchronization to a new video sequence header is advisable.",
      "ja": "複数の画像のデータが失われ、Nがゼロでない限り、ヘッダは、利用可能ではなく、少なくとも1つのパケットは、同じタイプのすべての介在画像およびNビットはこれらの写真のそれぞれについて0に再同期したことを受信されたされた場合新しいビデオシーケンスヘッダが賢明です。"
    },
    {
      "indent": 3,
      "text": "In all cases of heavy packet losses, if the correct headers for the missing Pictures are available, they can be given to the video decoder and the received data can be used irrespective of the N bit value or the number of lost pictures.",
      "ja": "欠落している画像の正しいヘッダが利用可能である場合重いパケットロスのすべての場合において、それらはビデオデコーダに与えることができ、受信したデータに関係なくNビット値又は失われたピクチャの数のに使用することができます。"
    },
    {
      "indent": 0,
      "text": "Appendix 2. Resynchronization",
      "ja": "付録2.再同期"
    },
    {
      "indent": 3,
      "text": "As described in [3], use of frequent video sequence headers makes it possible to join in a program at arbitrary times. Also, it reduces the resynchronization time after severe losses.",
      "ja": "[3]に記載のように、頻繁にビデオシーケンスヘッダの使用は、任意の時点でプログラムに参加することができます。また、それは深刻な損失後の再同期時間を短縮します。"
    },
    {
      "indent": 0,
      "text": "References",
      "ja": "リファレンス"
    },
    {
      "indent": 3,
      "text": "[1] Schulzrinne, H., Casner, S., Frederick, R., and V. Jacobson, \"RTP: A Transport Protocol for Real-Time Applications\", RFC 1889, January 1996.",
      "ja": "[1] Schulzrinneと、H.、Casner、S.、フレデリック、R.、およびV.ヤコブソン、 \"RTP：リアルタイムアプリケーションのためのトランスポートプロトコル\"、RFC 1889、1996年1月。"
    },
    {
      "indent": 3,
      "text": "[2] ISO/IEC International Standard 13818; \"Generic coding of moving pictures and associated audio information,\" November 1994.",
      "ja": "[2] ISO / IEC国際規格13818。 1994年11月、「動画と関連オーディオ情報のジェネリックコーディング」。"
    },
    {
      "indent": 3,
      "text": "[3] Hoffman, D., Fernando, G., Goyal, V., and M. Civanlar, \"RTP Payload Format for MPEG1/MPEG2 Video\", RFC 2250, January 1998.",
      "ja": "[3]ホフマン、D.、フェルナンド、G.、Goyal氏、V.、およびM. Civanlar、 \"MPEG1 / MPEG2ビデオのためのRTPペイロードフォーマット\"、RFC 2250、1998年1月。"
    },
    {
      "indent": 3,
      "text": "[4] Mogul, J., and S. Deering, \"Path MTU Discovery\", RFC 1191, November 1990.",
      "ja": "[4]モーグル、J.、およびS.デアリング、 \"パスMTUディスカバリ\"、RFC 1191、1990年11月。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "M. Reha Civanlar AT&T Labs-Research 100 Schultz Drive Red Bank, NJ 07701 USA",
      "ja": "M.レハCivanlar AT＆T Labsの研究-100シュルツドライブレッドバンク、NJ 07701 USA"
    },
    {
      "indent": 3,
      "text": "EMail: civanlar@research.att.com",
      "ja": "メールアドレス：civanlar@research.att.com"
    },
    {
      "indent": 3,
      "text": "Glenn L. Cash AT&T Labs-Research 100 Schultz Drive Red Bank, NJ 07701 USA",
      "ja": "グレン・L.現金AT＆T Labsの研究-100シュルツドライブレッドバンク、NJ 07701 USA"
    },
    {
      "indent": 3,
      "text": "EMail: glenn@research.att.com",
      "ja": "メールアドレス：glenn@research.att.com"
    },
    {
      "indent": 3,
      "text": "Barry G. Haskell AT&T Labs-Research 100 Schultz Drive Red Bank, NJ 07701 USA",
      "ja": "バリー・G. HaskellのAT＆T Labsの研究-100シュルツドライブレッドバンク、NJ 07701 USA"
    },
    {
      "indent": 3,
      "text": "EMail: bgh@research.att.com",
      "ja": "メールアドレス：bgh@research.att.com"
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (1998). All Rights Reserved.",
      "ja": "著作権（C）インターネット協会（1998）。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the Internet Society or other Internet organizations, except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed, or as required to translate it into languages other than English.",
      "ja": "この文書とその翻訳は、コピーして他の人に提供し、それ以外についてはコメントまたは派生物は、いかなる種類の制限もなく、全体的にまたは部分的に、準備コピーし、公表して配布することができることを説明したり、その実装を支援することができます、上記の著作権表示とこの段落は、すべてのそのようなコピーや派生物に含まれていることを条件とします。しかし、この文書自体は著作権のための手順はで定義されている場合には、インターネット標準を開発するために必要なものを除き、インターネットソサエティもしくは他のインターネット関連団体に著作権情報や参照を取り除くなど、どのような方法で変更されないかもしれませんインターネット標準化プロセスが続く、または英語以外の言語に翻訳するために、必要に応じなければなりません。"
    },
    {
      "indent": 3,
      "text": "The limited permissions granted above are perpetual and will not be revoked by the Internet Society or its successors or assigns.",
      "ja": "上記の制限は永久で、インターネット学会やその後継者や譲渡者によって取り消されることはありません。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein is provided on an \"AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書とここに含まれている情報は、基礎とインターネットソサエティおよびインターネットエンジニアリングタスクフォースはすべての保証を否認し、明示または黙示、その情報の利用がない任意の保証を含むがこれらに限定されない「として、」上に設けられています特定の目的への権利または商品性または適合性の黙示の保証を侵害します。"
    }
  ]
}