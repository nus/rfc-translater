{
  "title": {
    "text": "RFC 2633 - S/MIME Version 3 Message Specification",
    "ja": "RFC 2633 - S / MIMEバージョン3メッセージ仕様"
  },
  "number": 2633,
  "created_at": "2019-10-28 00:46:31.237938+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                               B. Ramsdell, Editor\nRequest for Comments: 2633                                    Worldtalk\nCategory: Standards Track                                     June 1999",
      "raw": true
    },
    {
      "indent": 17,
      "text": "S/MIME Version 3 Message Specification",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "このメモの位置付け"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "ja": "この文書は、インターネットコミュニティのためのインターネット標準トラックプロトコルを指定し、改善のための議論と提案を要求します。このプロトコルの標準化状態と状態への「インターネット公式プロトコル標準」（STD 1）の最新版を参照してください。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (1999). All Rights Reserved.",
      "ja": "著作権（C）インターネット協会（1999）。全著作権所有。"
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "S/MIME (Secure/Multipurpose Internet Mail Extensions) provides a consistent way to send and receive secure MIME data. Based on the popular Internet MIME standard, S/MIME provides the following cryptographic security services for electronic messaging applications: authentication, message integrity and non-repudiation of origin (using digital signatures) and privacy and data security (using encryption).",
      "ja": "S / MIMEは、（安全な/マルチパーパスインターネットメールエクステンション）セキュアなMIMEデータを送受信するための一貫性のある方法を提供します。 （デジタル署名を使用）、プライバシーとデータセキュリティ（暗号化を使用して）、認証、メッセージの整合性と起源の否認防止：人気のインターネットMIME標準に基づいて、S / MIMEは、電子メッセージングアプリケーションのために、以下の暗号化セキュリティサービスを提供します。"
    },
    {
      "indent": 3,
      "text": "S/MIME can be used by traditional mail user agents (MUAs) to add cryptographic security services to mail that is sent, and to interpret cryptographic security services in mail that is received. However, S/MIME is not restricted to mail; it can be used with any transport mechanism that transports MIME data, such as HTTP. As such, S/MIME takes advantage of the object-based features of MIME and allows secure messages to be exchanged in mixed-transport systems.",
      "ja": "S / MIMEが送られるメールに暗号化セキュリティサービスを追加すると、受信したメール内の暗号化セキュリティサービスを解釈するために、伝統的なメールユーザエージェント（MUA）で使用することができます。しかし、S / MIMEはメールに限られるものではありません。これは、HTTPなどのMIMEデータを搬送する任意のトランスポート機構を使用することができます。このように、S / MIMEは、MIMEのオブジェクトベースの機能を利用して、安全なメッセージが混在輸送システムに交換することを可能にします。"
    },
    {
      "indent": 3,
      "text": "Further, S/MIME can be used in automated message transfer agents that use cryptographic security services that do not require any human intervention, such as the signing of software-generated documents and the encryption of FAX messages sent over the Internet.",
      "ja": "さらに、S / MIMEは、このようなソフトウェアで生成された文書の署名と、インターネット経由で送信されたFAXメッセージの暗号化などの任意の人間の介入を必要としない暗号化セキュリティサービスを使用する自動化されたメッセージ転送エージェントで使用することができます。"
    },
    {
      "indent": 0,
      "text": "1.1 Specification Overview",
      "section_title": true,
      "ja": "1.1の仕様概要"
    },
    {
      "indent": 3,
      "text": "This document describes a protocol for adding cryptographic signature and encryption services to MIME data. The MIME standard [MIME-SPEC] provides a general structure for the content type of Internet messages and allows extensions for new content type applications.",
      "ja": "この文書は、MIMEデータに暗号化署名および暗号化サービスを追加するためのプロトコルを記述しています。 MIME標準[MIME-SPEC]は、インターネットメッセージのコンテンツタイプの一般的な構造を提供し、新しいコンテンツタイプのアプリケーションのための拡張を可能にします。"
    },
    {
      "indent": 3,
      "text": "This memo defines how to create a MIME body part that has been cryptographically enhanced according to CMS [CMS], which is derived from PKCS #7 [PKCS-7]. This memo also defines the application/pkcs7- mime MIME type that can be used to transport those body parts.",
      "ja": "このメモは、暗号PKCS＃7 [PKCS-7]から誘導されるCMS [CMS]に記載の拡張されたMIME本体部分を作成する方法を定義します。また、このメモは、これらの身体部分を輸送するために使用することができるアプリケーション/ pkcs7- MIME MIMEタイプを定義します。"
    },
    {
      "indent": 3,
      "text": "This memo also discusses how to use the multipart/signed MIME type defined in [MIME-SECURE] to transport S/MIME signed messages. This memo also defines the application/pkcs7-signature MIME type, which is also used to transport S/MIME signed messages.",
      "ja": "また、このメモはS / MIMEを輸送するために、[MIME-SECURE]で定義されたMIMEタイプを締結/マルチパートを使用する方法について説明したメッセージに署名しました。このメモはまた、S / MIMEを輸送するために使用されるアプリケーション/ PKCS7署名のMIMEタイプは、メッセージに署名した定義します。"
    },
    {
      "indent": 3,
      "text": "In order to create S/MIME messages, an S/MIME agent has to follow specifications in this memo, as well as the specifications listed in the Cryptographic Message Syntax [CMS].",
      "ja": "S / MIMEメッセージを作成するためには、S / MIMEエージェントは、このメモでは仕様だけでなく、暗号メッセージ構文[CMS]に記載された仕様に従っています。"
    },
    {
      "indent": 3,
      "text": "Throughout this memo, there are requirements and recommendations made for how receiving agents handle incoming messages. There are separate requirements and recommendations for how sending agents create outgoing messages. In general, the best strategy is to \"be liberal in what you receive and conservative in what you send\". Most of the requirements are placed on the handling of incoming messages while the recommendations are mostly on the creation of outgoing messages.",
      "ja": "このメモを通じて、受信エージェントが受信メッセージを処理する方法のために作られた要件と推奨事項があります。送信エージェントが送信メッセージの作成方法については、個別の要件と推奨事項があります。一般的には、最善の戦略は、「あなたが送る何であなたが受け取るものにリベラルと保守的である」ことです。勧告は送信メッセージの作成時に、ほとんどありながら、要件のほとんどは、着信メッセージの取り扱いに置かれています。"
    },
    {
      "indent": 3,
      "text": "The separation for requirements on receiving agents and sending agents also derives from the likelihood that there will be S/MIME systems that involve software other than traditional Internet mail clients. S/MIME can be used with any system that transports MIME data. An automated process that sends an encrypted message might not be able to receive an encrypted message at all, for example. Thus, the requirements and recommendations for the two types of agents are listed separately when appropriate.",
      "ja": "エージェントのエージェントを受信し、送信上の要件のための分離はまた、伝統的なインターネットメールクライアント以外のソフトウェアを必要とするS / MIMEシステムがあるだろうという可能性に由来します。 S / MIMEは、MIMEデータを搬送する任意のシステムで使用することができます。暗号化されたメッセージを送信し、自動化処理は、例えば、すべての暗号化されたメッセージを受信することができない場合があります。適切な場合にこのように、エージェントの2種類の要件と推奨事項は、別途記載されています。"
    },
    {
      "indent": 0,
      "text": "1.2 Terminology",
      "section_title": true,
      "ja": "1.2用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [MUSTSHOULD].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はあります【MUSTSHOULD]に記載されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "1.3 Definitions",
      "section_title": true,
      "ja": "1.3定義"
    },
    {
      "indent": 3,
      "text": "For the purposes of this memo, the following definitions apply.",
      "ja": "このメモの目的のために、以下の定義が適用されます。"
    },
    {
      "indent": 3,
      "text": "ASN.1: Abstract Syntax Notation One, as defined in CCITT X.208.",
      "ja": "ASN.1：抽象構文記法1、CCITT X.208で定義されています。"
    },
    {
      "indent": 3,
      "text": "BER: Basic Encoding Rules for ASN.1, as defined in CCITT X.209.",
      "ja": "BER：ASN.1のための基本的な符号化規則、CCITTのX. 209で定義されています。"
    },
    {
      "indent": 3,
      "text": "Certificate: A type that binds an entity's distinguished name to a public key with a digital signature.",
      "ja": "証明書：デジタル署名付き公開鍵にエンティティの識別名をバインドタイプ。"
    },
    {
      "indent": 3,
      "text": "DER: Distinguished Encoding Rules for ASN.1, as defined in CCITT X.509.",
      "ja": "DER：ASN.1の識別符号化規則、CCITTのX.509で定義されています。"
    },
    {
      "indent": 3,
      "text": "7-bit data: Text data with lines less than 998 characters long, where none of the characters have the 8th bit set, and there are no NULL characters. <CR> and <LF> occur only as part of a <CR><LF> end of line delimiter.",
      "ja": "7ビットのデータ：文字のいずれも8ビットが設定されていない、およびNO NULL文字が含まれていない未満998の文字行とテキストデータ。 <CR>と<LF>のみ行区切り文字の<CR> <LF>端の一部として起こります。"
    },
    {
      "indent": 3,
      "text": "8-bit data: Text data with lines less than 998 characters, and where none of the characters are NULL characters. <CR> and <LF> occur only as part of a <CR><LF> end of line delimiter.",
      "ja": "8ビットのデータ：テキストラインを有するデータ未満998の文字、文字のいずれもNULL文字ではありません。 <CR>と<LF>のみ行区切り文字の<CR> <LF>端の一部として起こります。"
    },
    {
      "indent": 3,
      "text": "Binary data: Arbitrary data.",
      "ja": "バイナリデータ：任意のデータ。"
    },
    {
      "indent": 3,
      "text": "Transfer Encoding: A reversible transformation made on data so 8-bit or binary data may be sent via a channel that only transmits 7-bit data.",
      "ja": "転送エンコーディング：データ上で行わ可逆変換ので、8ビットまたはバイナリデータは、7ビットのデータを送信するチャネルを介して送信されても​​よいです。"
    },
    {
      "indent": 3,
      "text": "Receiving agent: software that interprets and processes S/MIME CMS objects, MIME body parts that contain CMS objects, or both.",
      "ja": "受信エージェント：S / MIME CMSオブジェクト、CMSオブジェクト、またはその両方が含まれているMIMEボディパーツを解釈し、処理するソフトウェア。"
    },
    {
      "indent": 3,
      "text": "Sending agent: software that creates S/MIME CMS objects, MIME body parts that contain CMS objects, or both.",
      "ja": "CMSオブジェクト、またはその両方が含まれているS / MIME CMSオブジェクト、MIMEボディパーツを作成するソフトウェア：エージェントを送信します。"
    },
    {
      "indent": 3,
      "text": "S/MIME agent: user software that is a receiving agent, a sending agent, or both.",
      "ja": "S / MIMEエージェント：受信エージェント、送信エージェント、またはその両方をあるユーザソフトウェア。"
    },
    {
      "indent": 0,
      "text": "1.4 Compatibility with Prior Practice of S/MIME",
      "section_title": true,
      "ja": "S / MIMEの前の練習と1.4の互換性"
    },
    {
      "indent": 3,
      "text": "S/MIME version 3 agents should attempt to have the greatest interoperability possible with S/MIME version 2 agents. S/MIME version 2 is described in RFC 2311 through RFC 2315, inclusive. RFC 2311 also has historical information about the development of S/MIME.",
      "ja": "S / MIMEバージョン3つのエージェントは、S / MIMEバージョン2の薬剤との可能な最大の相互運用性を持つように試みるべきです。 S / MIMEバージョン2 RFC 2315、包括を通してRFC 2311に記載されています。 RFC 2311はまた、S / MIMEの開発に関する履歴情報を持っています。"
    },
    {
      "indent": 0,
      "text": "2. CMS Options",
      "section_title": true,
      "ja": "2. CMSオプション"
    },
    {
      "indent": 3,
      "text": "CMS allows for a wide variety of options in content and algorithm support. This section puts forth a number of support requirements and recommendations in order to achieve a base level of interoperability among all S/MIME implementations. [CMS] provides additional details regarding the use of the cryptographic algorithms.",
      "ja": "CMSは、コンテンツと、アルゴリズムのサポートのオプションの多種多様なことができます。このセクションでは、すべてのS / MIME実装間の相互運用性の基本レベルを達成するために、サポート要件と推奨事項の数を記載置きます。 [CMS]は、暗号アルゴリズムの使用に関する追加の詳細を提供します。"
    },
    {
      "indent": 0,
      "text": "2.1 DigestAlgorithmIdentifier",
      "section_title": true,
      "ja": "2.1 DigestAlgorithmIdentifier"
    },
    {
      "indent": 3,
      "text": "Sending and receiving agents MUST support SHA-1 [SHA1]. Receiving agents SHOULD support MD5 [MD5] for the purpose of providing backward compatibility with MD5-digested S/MIME v2 SignedData objects.",
      "ja": "送受信剤はSHA1 [SHA1]サポートしなければなりません。受信エージェントは、MD5消化S / MIME V2のSignedDataオブジェクトとの下位互換性を提供する目的のためにMD5 [MD5]をサポートしなければなりません。"
    },
    {
      "indent": 0,
      "text": "2.2 SignatureAlgorithmIdentifier",
      "section_title": true,
      "ja": "2.2署名アルゴリズム識別子"
    },
    {
      "indent": 3,
      "text": "Sending and receiving agents MUST support id-dsa defined in [DSS]. The algorithm parameters MUST be absent (not encoded as NULL).",
      "ja": "送信側と受信側エージェントは、[DSS]で定義されたID-DSAをサポートしなければなりません。アルゴリズムのパラメータは、（NULLとしてエンコードされていない）に存在してはなりません。"
    },
    {
      "indent": 3,
      "text": "Receiving agents SHOULD support rsaEncryption, defined in [PKCS-1].",
      "ja": "受信エージェントは、[PKCS-1]で定義rsaEncryptionをサポートすべきです。"
    },
    {
      "indent": 3,
      "text": "Sending agents SHOULD support rsaEncryption. Outgoing messages are signed with a user's private key. The size of the private key is determined during key generation.",
      "ja": "送付エージェントはrsaEncryptionをサポートする必要があります。送信メッセージは、ユーザの秘密鍵で署名されています。秘密鍵のサイズは、鍵の生成時に決定されます。"
    },
    {
      "indent": 3,
      "text": "Note that S/MIME v2 clients are only capable of verifying digital signatures using the rsaEncryption algorithm.",
      "ja": "そのS / MIME v2のクライアントがrsaEncryptionアルゴリズムを使用してデジタル署名を検証することができるだけであることに注意してください。"
    },
    {
      "indent": 0,
      "text": "2.3 KeyEncryptionAlgorithmIdentifier",
      "section_title": true,
      "ja": "2.3 KeyEncryptionAlgorithmIdentifier"
    },
    {
      "indent": 3,
      "text": "Sending and receiving agents MUST support Diffie-Hellman defined in [DH].",
      "ja": "送信およびエージェントを受信する[DH]で定義されたディフィー - ヘルマンをサポートしなければなりません。"
    },
    {
      "indent": 3,
      "text": "Receiving agents SHOULD support rsaEncryption. Incoming encrypted messages contain symmetric keys which are to be decrypted with a user's private key. The size of the private key is determined during key generation.",
      "ja": "受信エージェントはrsaEncryptionをサポートする必要があります。着信暗号化されたメッセージは、ユーザの秘密鍵で復号化される対称鍵を含んでいます。秘密鍵のサイズは、鍵の生成時に決定されます。"
    },
    {
      "indent": 3,
      "text": "Sending agents SHOULD support rsaEncryption.",
      "ja": "送付エージェントはrsaEncryptionをサポートする必要があります。"
    },
    {
      "indent": 3,
      "text": "Note that S/MIME v2 clients are only capable of decrypting content encryption keys using the rsaEncryption algorithm.",
      "ja": "そのS / MIME v2のクライアントがrsaEncryptionアルゴリズムを使用して、コンテンツ暗号化キーを解読することができるだけであることに注意してください。"
    },
    {
      "indent": 0,
      "text": "2.4 General Syntax",
      "section_title": true,
      "ja": "2.4一般的な構文"
    },
    {
      "indent": 3,
      "text": "CMS defines multiple content types. Of these, only the Data, SignedData, and EnvelopedData content types are currently used for S/MIME.",
      "ja": "CMSは、複数のコンテンツタイプを定義します。このうち、データのみ、のSignedData、およびEnvelopedDataのコンテンツタイプは、現在、S / MIMEのために使用されています。"
    },
    {
      "indent": 0,
      "text": "2.4.1 Data Content Type",
      "section_title": true,
      "ja": "2.4.1データのコンテンツタイプ"
    },
    {
      "indent": 3,
      "text": "Sending agents MUST use the id-data content type identifier to indicate the message content which has had security services applied to it. For example, when applying a digital signature to MIME data, the CMS signedData encapContentInfo eContentType MUST include the id-data object identifier and the MIME content MUST be stored in the SignedData encapContentInfo eContent OCTET STRING (unless the sending agent is using multipart/signed, in which case the eContent is absent, per section 3.4.3 of this document). As another example, when applying encryption to MIME data, the CMS EnvelopedData encryptedContentInfo ContentType MUST include the id-data object identifier and the encrypted MIME content MUST be stored in the envelopedData encryptedContentInfo encryptedContent OCTET STRING.",
      "ja": "送付エージェントは、それに適用されるセキュリティ・サービスを持っていたメッセージの内容を示すために、IDデータのコンテンツタイプ識別子を使用しなければなりません。 MIMEデータにデジタル署名を適用する場合、例えば、CMSたsignedData encapContentInfoのeContentTypeは、IDデータオブジェクト識別子とMIMEコンテンツを含まなければなりません送信エージェントが署名/マルチパートを使用していない限り、（のSignedData encapContentInfo e-コンテンツOCTET文字列に格納する必要がありますその場合、e-コンテンツ）は、この文書のセクション3.4.3あたり、不在です。 MIMEデータに暗号化を適用するときに、別の例として、CMS EnvelopedDataのencryptedContentInfoのContentTypeは、IDデータオブジェクトの識別子及び暗号化されたMIMEコンテンツを含まなければなりませんEnvelopedDataのencryptedContentInfo暗号化コンテンツオクテット文字列に格納されなければなりません。"
    },
    {
      "indent": 0,
      "text": "2.4.2 SignedData Content Type",
      "section_title": true,
      "ja": "2.4.2のSignedDataコンテンツタイプ"
    },
    {
      "indent": 3,
      "text": "Sending agents MUST use the signedData content type to apply a digital signature to a message or, in a degenerate case where there is no signature information, to convey certificates.",
      "ja": "送信エージェントは、証明書を伝えるために、何の署名情報が存在しない縮退した場合に、メッセージにデジタル署名を適用するたsignedDataコンテンツタイプを使用するかしなければなりません。"
    },
    {
      "indent": 0,
      "text": "2.4.3 EnvelopedData Content Type",
      "section_title": true,
      "ja": "2.4.3 EnvelopedDataのコンテンツタイプ"
    },
    {
      "indent": 3,
      "text": "This content type is used to apply privacy protection to a message. A sender needs to have access to a public key for each intended message recipient to use this service. This content type does not provide authentication.",
      "ja": "このコンテンツタイプは、メッセージにプライバシー保護を適用するために使用されます。送信者は、このサービスを使用するために意図された各メッセージ受信者の公開鍵へのアクセス権を持っている必要があります。このコンテンツタイプは、認証を提供しません。"
    },
    {
      "indent": 0,
      "text": "2.5 Attribute SignerInfo Type",
      "section_title": true,
      "ja": "2.5属性のSignerInfoタイプ"
    },
    {
      "indent": 3,
      "text": "The SignerInfo type allows the inclusion of unsigned and signed attributes to be included along with a signature.",
      "ja": "SignerInfoタイプは、署名と共に含まれるように符号なしの符号付き属性の包含を可能にします。"
    },
    {
      "indent": 3,
      "text": "Receiving agents MUST be able to handle zero or one instance of each of the signed attributes listed here. Sending agents SHOULD generate one instance of each of the following signed attributes in each S/MIME message:",
      "ja": "受信エージェントは、ここに記載されて署名した属性ごとにゼロまたは1つのインスタンスを扱うことができなければなりません。送信エージェントは、各S / MIMEメッセージの次の署名された属性のそれぞれの1つのインスタンスを生成する必要があります。"
    },
    {
      "indent": 3,
      "text": "- signingTime (section 2.5.1 in this document) - sMIMECapabilities (section 2.5.2 in this document) - sMIMEEncryptionKeyPreference (section 2.5.3 in this document)",
      "ja": " -  signingTime（この文書のセクション2.5.1） -  SMIMEケーパビリティ（この文書のセクション2.5.2） -  sMIMEEncryptionKeyPreference（この文書のセクション2.5.3）"
    },
    {
      "indent": 3,
      "text": "Further, receiving agents SHOULD be able to handle zero or one instance in the signed attributes of the signingCertificate attribute (section 5 in [ESS]).",
      "ja": "さらに、受信剤がsigningCertificate属性（[ESS]セクション5）の署名された属性にゼロまたは1つのインスタンスを扱うことができるべきです。"
    },
    {
      "indent": 3,
      "text": "Sending agents SHOULD generate one instance of the signingCertificate signed attribute in each S/MIME message.",
      "ja": "送信剤はsigningCertificateの1つのインスタンスが各S / MIMEメッセージに属性を締結生成する必要があります。"
    },
    {
      "indent": 3,
      "text": "Additional attributes and values for these attributes may be defined in the future. Receiving agents SHOULD handle attributes or values that it does not recognize in a graceful manner.",
      "ja": "これらの属性のための追加の属性と値は、将来的に定義されてもよいです。受信エージェントは、それは優雅な方法で認識されない属性または値を処理する必要があります。"
    },
    {
      "indent": 3,
      "text": "Sending agents that include signed attributes that are not listed here SHOULD display those attributes to the user, so that the user is aware of all of the data being signed.",
      "ja": "ユーザーが署名されているデータのすべてを知っているように、ここに記載されていない署名属性を含め送付エージェントは、ユーザーにこれらの属性が表示されます。"
    },
    {
      "indent": 0,
      "text": "2.5.1 Signing-Time Attribute",
      "section_title": true,
      "ja": "2.5.1署名時刻属性"
    },
    {
      "indent": 3,
      "text": "The signing-time attribute is used to convey the time that a message was signed. Until there are trusted timestamping services, the time of signing will most likely be created by a message originator and therefore is only as trustworthy as the originator.",
      "ja": "署名時の属性は、メッセージが署名された時間を伝えるために使用されます。信頼できるタイムスタンプサービスがあるまでは、署名の時間が最も可能性の高いメッセージの発信によって作成されたため、オリジネーターとしてだけとして信頼できるものであることになります。"
    },
    {
      "indent": 3,
      "text": "Sending agents MUST encode signing time through the year 2049 as UTCTime; signing times in 2050 or later MUST be encoded as GeneralizedTime. When the UTCTime CHOICE is used, S/MIME agents MUST interpret the year field (YY) as follows:",
      "ja": "送付エージェントは、UTC時刻として2049年署名時間を符号化しなければなりません。署名倍2050年以降はGeneralizedTimeとして符号化されなければなりません。 UTC時刻CHOICEを使用する場合は、次のように、S / MIMEエージェントは、年フィールド（YY）を解釈する必要があります："
    },
    {
      "indent": 3,
      "text": "if YY is greater than or equal to 50, the year is interpreted as 19YY; if YY is less than 50, the year is interpreted as 20YY.",
      "ja": "YYが50以上である場合、年は19YYとして解釈されます。 YYが50未満の場合、年は20YYとして解釈されます。"
    },
    {
      "indent": 0,
      "text": "2.5.2 SMIMECapabilities Attribute",
      "section_title": true,
      "ja": "2.5.2 SMIMEケーパビリティは、属性"
    },
    {
      "indent": 3,
      "text": "The SMIMECapabilities attribute includes signature algorithms (such as \"sha1WithRSAEncryption\"), symmetric algorithms (such as \"DES-EDE3-CBC\"), and key encipherment algorithms (such as \"rsaEncryption\"). It also includes a non-algorithm capability which is the preference for signedData. The SMIMECapabilities were designed to be flexible and extensible so that, in the future, a means of identifying other capabilities and preferences such as certificates can be added in a way that will not cause current clients to break.",
      "ja": "SMIMEケーパビリティ属性は、署名（例えば「sha1WithRSAEncryption」という）アルゴリズム（例えば「DES-EDE3-CBC」という）対称アルゴリズム、および（例えば「rsaEncryption」など）の鍵暗号化アルゴリズムを含みます。またたsignedDataの優先非アルゴリズムの能力を含みます。 SMIMEケーパビリティは、将来的には、証明書など、他の能力や嗜好を識別する手段は、現在のクライアントが破損することはありません方法で追加することができるように、柔軟で拡張できるように設計されました。"
    },
    {
      "indent": 3,
      "text": "If present, the SMIMECapabilities attribute MUST be a SignedAttribute; it MUST NOT be an UnsignedAttribute. CMS defines SignedAttributes as a SET OF Attribute. The SignedAttributes in a signerInfo MUST NOT include multiple instances of the SMIMECapabilities attribute. CMS defines the ASN.1 syntax for Attribute to include attrValues SET OF AttributeValue. A SMIMECapabilities attribute MUST only include a single instance of AttributeValue. There MUST NOT be zero or multiple instances of AttributeValue present in the attrValues SET OF AttributeValue.",
      "ja": "存在する場合、SMIMEケーパビリティ属性がSignedAttributeでなければなりません。それはUnsignedAttributeにすることはできません。 CMSは、属性の集合としてsignedAttributesのを定義します。 SignerInfoでsignedAttributesのはSMIMEケーパビリティ属性の複数のインスタンスを含んではいけません。 CMSはAttributeValueの一連のattrValuesを含むように属性のためのASN.1構文を定義します。 SMIMEケーパビリティの属性はAttributeValueの単一のインスタンスを含まなければなりません。 AttributeValueのOF attrValuesセットに存在するAttributeValueのゼロか複数のインスタンスがあってはなりません。"
    },
    {
      "indent": 3,
      "text": "The semantics of the SMIMECapabilites attribute specify a partial list as to what the client announcing the SMIMECapabilites can support. A client does not have to list every capability it supports, and probably should not list all its capabilities so that the capabilities list doesn't get too long. In an SMIMECapabilities attribute, the OIDs are listed in order of their preference, but SHOULD be logically separated along the lines of their categories (signature algorithms, symmetric algorithms, key encipherment algorithms, etc.)",
      "ja": "SMIMECapabilitesのセマンティクスはSMIMECapabilitesを発表し、クライアントがサポートできるものに、部分リストを指定する属性。クライアントは、それがサポートするすべての機能を一覧表示する必要がない、と能力リストが長すぎるを取得しないように、おそらくそのすべての機能をリストしてはいけません。 SMIMEケーパビリティ属性に、OIDは、その優先順にリストされているが、論理的にそのカテゴリの行（署名アルゴリズム、対称アルゴリズム、鍵暗号化アルゴリズム、等）に沿って分離されてください"
    },
    {
      "indent": 3,
      "text": "The structure of the SMIMECapabilities attribute is to facilitate simple table lookups and binary comparisons in order to determine matches. For instance, the DER-encoding for the SMIMECapability for DES EDE3 CBC MUST be identically encoded regardless of the implementation.",
      "ja": "SMIMEケーパビリティ属性の構造は、マッチを決定するために、簡単なテーブルルックアップとバイナリ比較を容易にすることです。例えば、DES EDE3 CBC用SMIMECapabilityためのDER符号化は、同一に関わらず、実装の符号化されなければなりません。"
    },
    {
      "indent": 3,
      "text": "In the case of symmetric algorithms, the associated parameters for the OID MUST specify all of the parameters necessary to differentiate between two instances of the same algorithm. For instance, the number of rounds and block size for RC5 must be specified in addition to the key length.",
      "ja": "対称アルゴリズムの場合には、OIDのための関連するパラメータは、同じアルゴリズムの2つのインスタンスを区別するために必要なすべてのパラメータを指定しなければなりません。例えば、ラウンドおよびRC5のブロックサイズの数は鍵長に加えて、指定しなければなりません。"
    },
    {
      "indent": 3,
      "text": "There is a list of OIDs (OIDs Used with S/MIME) that is centrally maintained and is separate from this memo. The list of OIDs is maintained by the Internet Mail Consortium at <http://www.imc.org/ietf-smime/oids.html>. Note that all OIDs associated with the MUST and SHOULD implement algorithms are included in section A of this document.",
      "ja": "集中管理し、このメモから分離されているのOID（S / MIMEを使用したOID）のリストがあります。 OIDの一覧は、<http://www.imc.org/ietf-smime/oids.html>でインターネットメールコンソーシアムによって維持されています。すべてのOIDがMUSTに関連付けられ、アルゴリズムは、このドキュメントのセクションAに含まれている実施すべきであることに留意されたいです。"
    },
    {
      "indent": 3,
      "text": "The OIDs that correspond to algorithms SHOULD use the same OID as the actual algorithm, except in the case where the algorithm usage is ambiguous from the OID. For instance, in an earlier draft, rsaEncryption was ambiguous because it could refer to either a signature algorithm or a key encipherment algorithm. In the event that an OID is ambiguous, it needs to be arbitrated by the maintainer of the registered SMIMECapabilities list as to which type of algorithm will use the OID, and a new OID MUST be allocated under the smimeCapabilities OID to satisfy the other use of the OID.",
      "ja": "アルゴリズムに対応するOIDは、アルゴリズムの使用は、OIDから曖昧である場合を除いて、実際のアルゴリズムと同一のOIDを使用すべきです。それは署名アルゴリズムや鍵暗号化アルゴリズムのいずれかを参照してください可能性があるため、例えば、以前のドラフトでは、rsaEncryptionはあいまいでした。 OIDがあいまいである場合には、そのアルゴリズムのタイプはOIDを使用するために、新たなOIDが他の用途を満たすためにSMIMEケーパビリティOIDの下に割り当てなければならないとして登録SMIMEケーパビリティリストの保守によって調停される必要がありますOID。"
    },
    {
      "indent": 3,
      "text": "The registered SMIMECapabilities list specifies the parameters for OIDs that need them, most notably key lengths in the case of variable-length symmetric ciphers. In the event that there are no differentiating parameters for a particular OID, the parameters MUST be omitted, and MUST NOT be encoded as NULL.",
      "ja": "登録SMIMEケーパビリティリストは、それらを必要とするOID、可変長対称暗号の場合に最も顕著なキーの長さのパラメータを指定します。特定のOIDには微分パラメータが存在しないことをイベントでは、パラメータは省略しなければなりません、そしてNULLとして符号化してはいけません。"
    },
    {
      "indent": 3,
      "text": "Additional values for the SMIMECapabilities attribute may be defined in the future. Receiving agents MUST handle a SMIMECapabilities object that has values that it does not recognize in a graceful manner.",
      "ja": "SMIMEケーパビリティ属性の追加の値は、将来的に定義されてもよいです。受信エージェントは、それは優雅な方法で認識されない値を持つSMIMEケーパビリティのオブジェクトを処理する必要があります。"
    },
    {
      "indent": 0,
      "text": "2.5.3 Encryption Key Preference Attribute",
      "section_title": true,
      "ja": "2.5.3暗号化キーの好みの属性"
    },
    {
      "indent": 3,
      "text": "The encryption key preference attribute allows the signer to unambiguously describe which of the signer's certificates has the signer's preferred encryption key. This attribute is designed to enhance behavior for interoperating with those clients which use separate keys for encryption and signing. This attribute is used to convey to anyone viewing the attribute which of the listed certificates should be used for encrypting a session key for future encrypted messages.",
      "ja": "暗号化キーの優先属性は、署名者が明確に署名者の優先暗号化キーを持つ署名者の証明書のどの記述することができます。この属性は、暗号化と署名のための独立したキーを使用し、それらのクライアントとの相互運用のための行動を強化するために設計されています。この属性は、将来の暗号化されたメッセージのためのセッションキーを暗号化するために使用する必要があります記載されている証明書の属性を見て誰に伝えるために使用されます。"
    },
    {
      "indent": 3,
      "text": "If present, the SMIMEEncryptionKeyPreference attribute MUST be a SignedAttribute; it MUST NOT be an UnsignedAttribute. CMS defines SignedAttributes as a SET OF Attribute. The SignedAttributes in a signerInfo MUST NOT include multiple instances of the SMIMEEncryptionKeyPreference attribute. CMS defines the ASN.1 syntax for Attribute to include attrValues SET OF AttributeValue. A SMIMEEncryptionKeyPreference attribute MUST only include a single instance of AttributeValue. There MUST NOT be zero or multiple instances of AttributeValue present in the attrValues SET OF AttributeValue.",
      "ja": "存在する場合、SMIMEEncryptionKeyPreference属性がSignedAttributeでなければなりません。それはUnsignedAttributeにすることはできません。 CMSは、属性の集合としてsignedAttributesのを定義します。 SignerInfoでsignedAttributesのはSMIMEEncryptionKeyPreference属性の複数のインスタンスを含んではいけません。 CMSはAttributeValueの一連のattrValuesを含むように属性のためのASN.1構文を定義します。 SMIMEEncryptionKeyPreference属性はAttributeValueの単一のインスタンスを含まなければなりません。 AttributeValueのOF attrValuesセットに存在するAttributeValueのゼロか複数のインスタンスがあってはなりません。"
    },
    {
      "indent": 3,
      "text": "The sending agent SHOULD include the referenced certificate in the set of certificates included in the signed message if this attribute is used. The certificate may be omitted if it has been previously made available to the receiving agent. Sending agents SHOULD use this attribute if the commonly used or preferred encryption certificate is not the same as the certificate used to sign the message.",
      "ja": "この属性が使用されている場合、送信エージェントは、署名されたメッセージに含まれる証明書のセットで参照された証明書を含むべきです。それは以前に受信エージェントに提供されている場合、証明書を省略することができます。一般的に使用されるまたは優先暗号化証明書は、メッセージの署名に使用される証明書と同じでない場合、送信エージェントは、この属性を使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "Receiving agents SHOULD store the preference data if the signature on the message is valid and the signing time is greater than the currently stored value. (As with the SMIMECapabilities, the clock skew should be checked and the data not used if the skew is too great.) Receiving agents SHOULD respect the sender's encryption key preference attribute if possible. This however represents only a preference and the receiving agent may use any certificate in replying to the sender that is valid.",
      "ja": "メッセージの署名が有効であり、署名時刻が現在格納されている値よりも大きい場合、受信剤は、嗜好データを格納する必要があります。 （SMIMEケーパビリティと同様に、クロック・スキューをチェックする必要がありますし、スキューが大きすぎる場合、データは使用されません。）可能であれば受信エージェントは、送信者の暗号鍵の好みの属性を尊重しなければなりません。しかし、これは唯一の好みを表し、受信エージェントは有効な送信者に返信するにはすべての証明書を使用することができます。"
    },
    {
      "indent": 0,
      "text": "2.5.3.1 Selection of Recipient Key Management Certificate",
      "section_title": true,
      "ja": "受信者の鍵管理証明書の2.5.3.1選択"
    },
    {
      "indent": 3,
      "text": "In order to determine the key management certificate to be used when sending a future CMS envelopedData message for a particular recipient, the following steps SHOULD be followed:",
      "ja": "特定の受信者の将来CMS EnvelopedDataのメッセージを送信するときに使用する鍵管理証明書を決定するために、以下のステップに従ってください。"
    },
    {
      "indent": 3,
      "text": " - If an SMIMEEncryptionKeyPreference attribute is found in a signedData object received from the desired recipient, this identifies the X.509 certificate that should be used as the X.509 key management certificate for the recipient.",
      "ja": " -  SMIMEEncryptionKeyPreference属性が所望の受信者から受信したSignedDataオブジェクトで見つかった場合、これは、受信者のX.509鍵管理証明書として使用されるべきであるX.509証明書を識別する。"
    },
    {
      "indent": 3,
      "text": "- If an SMIMEEncryptionKeyPreference attribute is not found in a signedData object received from the desired recipient, the set of X.509 certificates should be searched for a X.509 certificate with the same subject name as the signing X.509 certificate which can be used for key management.",
      "ja": " -  SMIMEEncryptionKeyPreference属性が所望の受信者から受信したSignedDataオブジェクトで見つからない場合、X.509証明書のセットを使用することができる署名X.509証明書と同じサブジェクト名を持つX.509証明書を検索しなければなりません鍵管理のため。"
    },
    {
      "indent": 3,
      "text": "- Or use some other method of determining the user's key management key. If a X.509 key management certificate is not found, then encryption cannot be done with the signer of the message. If multiple X.509 key management certificates are found, the S/MIME agent can make an arbitrary choice between them.",
      "ja": " - あるいは、ユーザの鍵管理キーを決定するためのいくつかの他の方法を使用します。 X.509鍵管理証明書が見つからない場合は、暗号化は、メッセージの署名者で行うことはできません。複数のX.509鍵管理証明書が見つかった場合は、S / MIMEエージェントは、それらの間の任意の選択を行うことができます。"
    },
    {
      "indent": 0,
      "text": "2.6 SignerIdentifier SignerInfo Type",
      "section_title": true,
      "ja": "2.6 SignerIdentifierのSignerInfoタイプ"
    },
    {
      "indent": 3,
      "text": "S/MIME v3 requires the use of SignerInfo version 1, that is the issuerAndSerialNumber CHOICE MUST be used for SignerIdentifier.",
      "ja": "S / MIME V3はissuerAndSerialNumber CHOICEがSignerIdentifierに使用しなければなりませんであるのSignerInfoバージョン1の使用を必要とします。"
    },
    {
      "indent": 0,
      "text": "2.7 ContentEncryptionAlgorithmIdentifier",
      "section_title": true,
      "ja": "2.7コンテンツ暗号化アルゴリズムの識別子"
    },
    {
      "indent": 3,
      "text": "Sending and receiving agents MUST support encryption and decryption with DES EDE3 CBC, hereinafter called \"tripleDES\" [3DES] [DES]. Receiving agents SHOULD support encryption and decryption using the RC2 [RC2] or a compatible algorithm at a key size of 40 bits, hereinafter called \"RC2/40\".",
      "ja": "送信とDES EDE3 CBCで暗号化と復号化をサポートしなければならない薬を受け、以下「トリプルDES」[3DES] [DES]と呼ばれます。受信エージェントは、以下、「RC2 / 40」と呼ばれる、RC2を使用して[RC2]または40ビットの鍵サイズで互換性アルゴリズムを暗号化及び復号化をサポートする必要があります。"
    },
    {
      "indent": 0,
      "text": "2.7.1 Deciding Which Encryption Method To Use",
      "section_title": true,
      "ja": "2.7.1暗号化方式を使用するかを決定"
    },
    {
      "indent": 3,
      "text": "When a sending agent creates an encrypted message, it has to decide which type of encryption to use. The decision process involves using information garnered from the capabilities lists included in messages received from the recipient, as well as out-of-band information such as private agreements, user preferences, legal restrictions, and so on.",
      "ja": "送信エージェントが暗号化されたメッセージを作成するときに、暗号化の種類を使用するかを決定する必要があります。決定プロセスは、情報を使用することを含む機能リストから獲得し、そのようなので、上の民間協定、ユーザーの好み、法的規制、およびなどのアウトオブバンドの受信者から受信したメッセージだけでなく、情報に含まれます。"
    },
    {
      "indent": 3,
      "text": "Section 2.5 defines a method by which a sending agent can optionally announce, among other things, its decrypting capabilities in its order of preference. The following method for processing and remembering the encryption capabilities attribute in incoming signed messages SHOULD be used.",
      "ja": "セクション2.5は、送信側エージェントは、必要に応じて優先そのために、とりわけ、その復号化能力をアナウンスすることができる方法を定義します。処理能力とは、着信署名されたメッセージに属性の暗号化を覚えるための以下の方法を使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "- If the receiving agent has not yet created a list of capabilities for the sender's public key, then, after verifying the signature on the incoming message and checking the timestamp, the receiving agent SHOULD create a new list containing at least the signing time and the symmetric capabilities.",
      "ja": " - 受信エージェントは、まだ送信者の公開鍵のための能力のリストを作成していない場合は、着信メッセージに署名を検証し、タイムスタンプをチェックした後、受信エージェントは、少なくとも署名時刻を含む新しいリストを作成し、すべきです対称機能を提供します。"
    },
    {
      "indent": 4,
      "text": "- If such a list already exists, the receiving agent SHOULD verify that the signing time in the incoming message is greater than the signing time stored in the list and that the signature is valid. If so, the receiving agent SHOULD update both the signing time and capabilities in the list. Values of the signing time that lie far in the future (that is, a greater discrepancy than any reasonable clock skew), or a capabilities list in messages whose signature could not be verified, MUST NOT be accepted.",
      "ja": " - そのようなリストがすでに存在する場合、受信エージェントは、受信メッセージに署名時刻がリストにし、署名が有効であることを記憶された署名時間より大きいことを確認する必要があります。もしそうなら、受信エージェントは、署名時間と、リスト内の機能の両方を更新する必要があります。将来的には遠くにある署名時間（つまり、任意の合理的なクロック・スキューよりも大きい不一致である）、または署名を検証することができませんでしたメッセージに能力リストの値は、受け入れてはなりません。"
    },
    {
      "indent": 3,
      "text": "The list of capabilities SHOULD be stored for future use in creating messages.",
      "ja": "機能のリストは、メッセージを作成する際に、将来の使用のために保存しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Before sending a message, the sending agent MUST decide whether it is willing to use weak encryption for the particular data in the message. If the sending agent decides that weak encryption is unacceptable for this data, then the sending agent MUST NOT use a weak algorithm such as RC2/40. The decision to use or not use weak encryption overrides any other decision in this section about which encryption algorithm to use.",
      "ja": "メッセージを送信する前に、送信エージェントは、メッセージ内の特定のデータのために、弱い暗号化を使用する意思があるかどうかを決定する必要があります。送信エージェントが弱い暗号化は、このデータには受け入れられないと判断した場合、送信エージェントは、RC2 / 40として弱いアルゴリズムを使用してはなりません。弱い暗号化を使用使用かどうかの決定は、暗号化アルゴリズムを使用するかについては、このセクションの他の決定をオーバーライドします。"
    },
    {
      "indent": 3,
      "text": "Sections 2.7.2.1 through 2.7.2.4 describe the decisions a sending agent SHOULD use in deciding which type of encryption should be applied to a message. These rules are ordered, so the sending agent SHOULD make its decision in the order given.",
      "ja": "セクション2.7.2.1 2.7.2.4までは、送信エージェントはメッセージに適用されなければならない暗号化の種類を決定する際に使用すべき決定事項について説明します。送信エージェントは、与えられた順序で、その決定をしなければならないので、これらのルールは、順序付けされます。"
    },
    {
      "indent": 0,
      "text": "2.7.1.1 Rule 1: Known Capabilities",
      "section_title": true,
      "ja": "2.7.1.1ルール1：既知の機能"
    },
    {
      "indent": 3,
      "text": "If the sending agent has received a set of capabilities from the recipient for the message the agent is about to encrypt, then the sending agent SHOULD use that information by selecting the first capability in the list (that is, the capability most preferred by the intended recipient) for which the sending agent knows how to encrypt. The sending agent SHOULD use one of the capabilities in the list if the agent reasonably expects the recipient to be able to decrypt the message.",
      "ja": "送信エージェントはメッセージの受信者からの機能のセットを受信した場合、エージェントは暗号化しようとし、その後、送信エージェントは、リスト内の最初の能力を選択することにより、その情報を使用すべきである（すなわち、ほとんどの意図によって好ま能力であります送信エージェントは、暗号化する方法を知っている受信者）。エージェントが合理的に受信者がメッセージを解読できることを期待している場合、送信エージェントは、リスト内の機能のいずれかを使用すべきです。"
    },
    {
      "indent": 0,
      "text": "2.7.1.2 Rule 2: Unknown Capabilities, Known Use of Encryption",
      "section_title": true,
      "ja": "2.7.1.2ルール2：不明な機能、暗号化の使用が知られています"
    },
    {
      "indent": 3,
      "text": "If: - the sending agent has no knowledge of the encryption capabilities of the recipient, - and the sending agent has received at least one message from the recipient, - and the last encrypted message received from the recipient had a trusted signature on it,",
      "ja": "場合： - 送付エージェントは、受信者の暗号化機能の知識がない、 - 、および受信者から受け取った最後の暗号化されたメッセージは、それに信頼された署名を持っていた - と送信エージェントは、受信者から少なくとも一つのメッセージを受信しました"
    },
    {
      "indent": 3,
      "text": "then the outgoing message SHOULD use the same encryption algorithm as was used on the last signed and encrypted message received from the recipient.",
      "ja": "受信者から受け取った最後の署名および暗号化されたメッセージで使用されたとして、その後、送信メッセージは、同じ暗号化アルゴリズムを使用すべきです。"
    },
    {
      "indent": 0,
      "text": "2.7.1.3 Rule 3: Unknown Capabilities, Unknown Version of S/MIME",
      "section_title": true,
      "ja": "2.7.1.3ルール3：不明な機能、S / MIMEの不明なバージョン"
    },
    {
      "indent": 3,
      "text": "If:",
      "ja": "もし："
    },
    {
      "indent": 4,
      "text": "- the sending agent has no knowledge of the encryption capabilities of the recipient, - and the sending agent has no knowledge of the version of S/MIME of the recipient,",
      "ja": " - 送付エージェントは、受信者の暗号化機能の知識がない、 - および送信エージェントは、受信者のS / MIMEのバージョンの知識を持ちません"
    },
    {
      "indent": 3,
      "text": "then the sending agent SHOULD use tripleDES because it is a stronger algorithm and is required by S/MIME v3. If the sending agent chooses not to use tripleDES in this step, it SHOULD use RC2/40.",
      "ja": "それは強力なアルゴリズムで、S / MIME v3ので必要とされるため、送信側エージェントはトリプルDESを使用すべきです。送信エージェントは、このステップでのTripleDESを使用しないことを選択した場合、それはRC2 / 40を使用すべきです。"
    },
    {
      "indent": 0,
      "text": "2.7.2 Choosing Weak Encryption",
      "section_title": true,
      "ja": "2.7.2弱い暗号化を選択します"
    },
    {
      "indent": 3,
      "text": "Like all algorithms that use 40 bit keys, RC2/40 is considered by many to be weak encryption. A sending agent that is controlled by a human SHOULD allow a human sender to determine the risks of sending data using RC2/40 or a similarly weak encryption algorithm before sending the data, and possibly allow the human to use a stronger encryption method such as tripleDES.",
      "ja": "40ビットキーを使用するすべてのアルゴリズムと同様に、RC2 / 40は、弱い暗号化であることを多くの人に考えられています。人間によって制御される送信エージェントは、データを送信する前に、RC2 / 40または同様に弱い暗号化アルゴリズムを使用してデータを送信するリスクを決定するために人間の送信者を許可、およびおそらくヒトは、トリプルDESなどの強力な暗号化方式を使用できるようにする必要があります。"
    },
    {
      "indent": 0,
      "text": "2.7.3 Multiple Recipients",
      "section_title": true,
      "ja": "2.7.3複数の受信者"
    },
    {
      "indent": 3,
      "text": "If a sending agent is composing an encrypted message to a group of recipients where the encryption capabilities of some of the recipients do not overlap, the sending agent is forced to send more than one message. It should be noted that if the sending agent chooses to send a message encrypted with a strong algorithm, and then send the same message encrypted with a weak algorithm, someone watching the communications channel may be able to learn the contents of the strongly-encrypted message simply by decrypting the weakly-encrypted message.",
      "ja": "送信エージェントは、受信者の一部の暗号化機能が重複していない受信者のグループに暗号化されたメッセージを作成している場合、送信エージェントは、複数のメッセージを送ることを余儀なくされます。送信エージェントが弱いアルゴリズムで暗号化された同じメッセージを送信し、その後、強力なアルゴリズムで暗号化されたメッセージを送信し、することを選択した場合、通信チャンネルを見て、誰かが強力に暗号化されたメッセージの内容を学ぶことができることに留意すべきです単に弱暗号化されたメッセージを復号化することもできます。"
    },
    {
      "indent": 0,
      "text": "3. Creating S/MIME Messages",
      "section_title": true,
      "ja": "3. S / MIMEメッセージの作成"
    },
    {
      "indent": 3,
      "text": "This section describes the S/MIME message formats and how they are created. S/MIME messages are a combination of MIME bodies and CMS objects. Several MIME types as well as several CMS objects are used. The data to be secured is always a canonical MIME entity. The MIME entity and other data, such as certificates and algorithm identifiers, are given to CMS processing facilities which produces a CMS object. The CMS object is then finally wrapped in MIME. The Enhanced Security Services for S/MIME [ESS] document provides examples of how nested, secured S/MIME messages are formatted. ESS provides an example of how a triple-wrapped S/MIME message is formatted using multipart/signed and application/pkcs7-mime for the signatures.",
      "ja": "このセクションでは、S / MIMEメッセージのフォーマットを説明し、それらがどのように作成されます。 S / MIMEメッセージはMIMEボディとCMSのオブジェクトを組み合わせたものです。いくつかのMIMEタイプだけでなく、いくつかのCMSのオブジェクトが使用されています。確保するためのデータは、必ず正規のMIMEエンティティです。 MIMEエンティティと、そのような証明書やアルゴリズム識別子などの他のデータは、CMSオブジェクトを生成するCMS処理施設に与えられます。 CMSオブジェクトは、最終的にMIMEに包まれています。 S / MIME [ESS]文書のための強化されたセキュリティサービスを確保し、S / MIMEメッセージがフォーマットされ、どのようにネストされた例を提供します。 ESSは、トリプルラップされたS / MIMEメッセージがマルチパート/署名され、署名のアプリケーション/ PKCS7-MIMEを使用してフォーマットされている方法の例を提供します。"
    },
    {
      "indent": 3,
      "text": "S/MIME provides one format for enveloped-only data, several formats for signed-only data, and several formats for signed and enveloped data. Several formats are required to accommodate several environments, in particular for signed messages. The criteria for choosing among these formats are also described.",
      "ja": "S / MIMEは、エンベロープのみのデータ、署名された専用データのためのいくつかの形式、及び署名され、エンベロープデータのためのいくつかのフォーマットのための1つのフォーマットを提供します。いくつかの形式は、署名されたメッセージのための特定のいくつかの環境を、対応するために必要とされます。これらのフォーマットの中から選択するための判断基準についても説明されています。"
    },
    {
      "indent": 3,
      "text": "The reader of this section is expected to understand MIME as described in [MIME-SPEC] and [MIME-SECURE].",
      "ja": "このセクションの読者は、[MIME-SPEC]に記載の[MIME-SECURE]としてMIMEを理解することが期待されています。"
    },
    {
      "indent": 0,
      "text": "3.1 Preparing the MIME Entity for Signing or Enveloping",
      "section_title": true,
      "ja": "3.1署名または包み込むMIMEエンティティの準備"
    },
    {
      "indent": 3,
      "text": "S/MIME is used to secure MIME entities. A MIME entity may be a sub-part, sub-parts of a message, or the whole message with all its sub-parts. A MIME entity that is the whole message includes only the MIME headers and MIME body, and does not include the RFC-822 headers. Note that S/MIME can also be used to secure MIME entities used in applications other than Internet mail.",
      "ja": "S / MIMEは、MIMEエンティティを固定するために使用されます。 MIMEエンティティは、メッセージのサブ部分、サブ部分、またはすべてのサブ部分と全体のメッセージであってもよいです。メッセージ全体であるMIMEエンティティは、MIMEヘッダとMIME本体を含み、RFC-822ヘッダを含みません。そのS / MIMEは、イン​​ターネットメール以外のアプリケーションで使用されるMIME実体を確保するためにも使用できることに注意してください。"
    },
    {
      "indent": 3,
      "text": "The MIME entity that is secured and described in this section can be thought of as the \"inside\" MIME entity. That is, it is the \"innermost\" object in what is possibly a larger MIME message. Processing \"outside\" MIME entities into CMS objects is described in Section 3.2, 3.4 and elsewhere.",
      "ja": "このセクションで固定し、記載されているMIMEエンティティは、「内部」MIMEエンティティと考えることができます。それはそれはおそらく大きなMIMEメッセージが何であるかで「最も内側」オブジェクトである、です。 CMSオブジェクトに処理する「外部」MIMEエンティティは、セクション3.2、3.4、他の場所に記載されています。"
    },
    {
      "indent": 3,
      "text": "The procedure for preparing a MIME entity is given in [MIME-SPEC]. The same procedure is used here with some additional restrictions when signing. Description of the procedures from [MIME-SPEC] are repeated here, but the reader should refer to that document for the exact procedure. This section also describes additional requirements.",
      "ja": "MIMEエンティティを調製するための手順は、[MIME-SPEC]で与えられます。同じ手順が署名するいくつかの追加の制限付きで、ここで使用されています。 [MIME-SPEC]からの手順の説明はここで繰り返されているが、読者は、正確な手順についてはその文書を参照するべきです。このセクションでは、追加の要件について説明します。"
    },
    {
      "indent": 3,
      "text": "A single procedure is used for creating MIME entities that are to be signed, enveloped, or both signed and enveloped. Some additional steps are recommended to defend against known corruptions that can occur during mail transport that are of particular importance for clear- signing using the multipart/signed format. It is recommended that these additional steps be performed on enveloped messages, or signed and enveloped messages in order that the message can be forwarded to any environment without modification.",
      "ja": "単一の手順が署名されるMIMEエンティティを作成するために使用される、エンベロープ、または両方の符号付きおよびエンベロープ。いくつかの追加の手順はマルチパート/署名の形式を使用してclear-署名用に特に重要であるメール輸送中に発生する可能性が知られて破損を防御することをお勧めします。これらの追加手順は、エンベロープメッセージ上で実行、または署名とメッセージを変更することなく、あらゆる環境に転送できるようにするために、メッセージを包まれることをお勧めします。"
    },
    {
      "indent": 3,
      "text": "These steps are descriptive rather than prescriptive. The implementor is free to use any procedure as long as the result is the same.",
      "ja": "これらのステップは、記述ではなく、規範的です。実装者は、限り、結果は同じであるとして任意の手順を使用して自由です。"
    },
    {
      "indent": 3,
      "text": "Step 1. The MIME entity is prepared according to the local conventions",
      "ja": "ステップ1. MIMEエンティティは、地元の慣習に従って製造されます"
    },
    {
      "indent": 3,
      "text": "Step 2. The leaf parts of the MIME entity are converted to canonical form",
      "ja": "ステップ2. MIMEエンティティの葉の部分は、標準的な形式に変換され、"
    },
    {
      "indent": 3,
      "text": "Step 3. Appropriate transfer encoding is applied to the leaves of the MIME entity",
      "ja": "ステップ3.適切な転送符号化は、MIMEエンティティの葉に適用されます"
    },
    {
      "indent": 3,
      "text": "When an S/MIME message is received, the security services on the message are processed, and the result is the MIME entity. That MIME entity is typically passed to a MIME-capable user agent where, it is further decoded and presented to the user or receiving application.",
      "ja": "S / MIMEメッセージを受信した場合、メッセージのセキュリティサービスが処理され、その結果は、MIMEエンティティです。そのMIMEエンティティは、典型的には、それはさらに復号され、ユーザ又は受信アプリケーションに提示されているMIME-可能なユーザエージェントに渡されます。"
    },
    {
      "indent": 0,
      "text": "3.1.1 Canonicalization",
      "section_title": true,
      "ja": "3.1.1正規化"
    },
    {
      "indent": 3,
      "text": "Each MIME entity MUST be converted to a canonical form that is uniquely and unambiguously representable in the environment where the signature is created and the environment where the signature will be verified. MIME entities MUST be canonicalized for enveloping as well as signing.",
      "ja": "各MIMEエンティティは、一意かつ明確表現署名が作成された環境と、署名が検証される環境にある標準形式に変換されなければなりません。 MIMEエンティティは、包むだけでなく、署名のために正規化されなければなりません。"
    },
    {
      "indent": 3,
      "text": "The exact details of canonicalization depend on the actual MIME type and subtype of an entity, and are not described here. Instead, the standard for the particular MIME type should be consulted. For example, canonicalization of type text/plain is different from canonicalization of audio/basic. Other than text types, most types have only one representation regardless of computing platform or environment which can be considered their canonical representation. In general, canonicalization will be performed by the non-security part of the sending agent rather than the S/MIME implementation.",
      "ja": "正規化の正確な詳細は、エンティティの実際のMIMEタイプとサブタイプに依存し、ここでは説明されません。代わりに、特定のMIMEタイプのための標準は、相談する必要があります。例えば、タイプtext / plainでの正規化は、基本/オーディオの標準化と異なっています。テキストタイプ以外に、ほとんどの種類に関係なく標準的な表現と考えることができるコンピューティング・プラットフォームや環境の単なる1つの表現を持っています。一般に、正規化は、送信側エージェントのセキュリティ以外の部分ではなく、S / MIME実装によって実行されます。"
    },
    {
      "indent": 3,
      "text": "The most common and important canonicalization is for text, which is often represented differently in different environments. MIME entities of major type \"text\" must have both their line endings and character set canonicalized. The line ending must be the pair of characters <CR><LF>, and the charset should be a registered charset [CHARSETS]. The details of the canonicalization are specified in [MIME-SPEC]. The chosen charset SHOULD be named in the charset parameter so that the receiving agent can unambiguously determine the charset used.",
      "ja": "最も一般的で重要な正規化は、多くの場合、異なる環境では異なる表現されたテキストのためのものです。主要なタイプ「テキスト」のMIMEエンティティは、正規化された彼らの行末と文字セットの両方を持っている必要があります。終了ラインは、文字の対<CR> <LF>でなければならず、文字セットは、登録された文字セット[CHARSETS]であるべきです。正規化の詳細については、[MIME-SPEC]で指定されています。受信エージェントは、明確に使用する文字セットを決定することができるように選択された文字セットは、charsetパラメータで指定されるべきです。"
    },
    {
      "indent": 3,
      "text": "Note that some charsets such as ISO-2022 have multiple representations for the same characters. When preparing such text for signing, the canonical representation specified for the charset MUST be used.",
      "ja": "このようISO-2022などの一部の文字セットは、同じ文字を複数の表現を持っていることに注意してください。署名のためのそのようなテキストを調製する際、文字セットに指定された正規表現を使用しなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.1.2 Transfer Encoding",
      "section_title": true,
      "ja": "3.1.2転送エンコード"
    },
    {
      "indent": 3,
      "text": "When generating any of the secured MIME entities below, except the signing using the multipart/signed format, no transfer encoding at all is required. S/MIME implementations MUST be able to deal with binary MIME objects. If no Content-Transfer-Encoding header is present, the transfer encoding should be considered 7BIT.",
      "ja": "マルチパート/署名されたフォーマットを使用して署名を除いて、以下の保護されたMIMEエンティティのいずれかを生成する際に、全く転送符号化が必要とされません。 S / MIME実装は、バイナリMIMEオブジェクトを扱うことができなければなりません。いかなるコンテンツ転送符号化ヘッダが存在しない場合、転送符号化は7BIT考慮すべきです。"
    },
    {
      "indent": 3,
      "text": "S/MIME implementations SHOULD however use transfer encoding described in section 3.1.3 for all MIME entities they secure. The reason for securing only 7-bit MIME entities, even for enveloped data that are not exposed to the transport, is that it allows the MIME entity to be handled in any environment without changing it. For example, a trusted gateway might remove the envelope, but not the signature, of a message, and then forward the signed message on to the end recipient so that they can verify the signatures directly. If the transport internal to the site is not 8-bit clean, such as on a wide-area network with a single mail gateway, verifying the signature will not be possible unless the original MIME entity was only 7-bit data.",
      "ja": "S / MIMEの実装は、しかし、それらは固定すべてのMIMEエンティティのセクション3.1.3に記載の転送符号化を使用すべきです。唯一の7ビットのMIMEエンティティを固定する理由は、偶数輸送にさらされていないエンベロープデータのために、それはMIMEエンティティはそれを変更することなく、任意の環境で取り扱うことを可能にすることです。例えば、信頼できるゲートウェイは、エンベロープを削除ではなく、署名を、メッセージ、およびそれらが直接署名を検証することができるように端レシピエント上に署名されたメッセージを転送するかもしれません。サイト内部の輸送は、単一のメールゲートウェイと広域ネットワーク上のように、8ビットクリーンでない場合、元のMIMEエンティティのみ7ビットのデータでない限り、署名を検証することはできません。"
    },
    {
      "indent": 0,
      "text": "3.1.3 Transfer Encoding for Signing Using multipart/signed",
      "section_title": true,
      "ja": "マルチパート/署名の使用署名のための3.1.3転送エンコード"
    },
    {
      "indent": 3,
      "text": "If a multipart/signed entity is EVER to be transmitted over the standard Internet SMTP infrastructure or other transport that is constrained to 7-bit text, it MUST have transfer encoding applied so that it is represented as 7-bit text. MIME entities that are 7-bit data already need no transfer encoding. Entities such as 8-bit text and binary data can be encoded with quoted-printable or base-64 transfer encoding.",
      "ja": "マルチパート/署名されたエンティティがEVER標準インターネットSMTPインフラ又は7ビットのテキストに制限され、他のトランスポートを介して送信される場合、それは7ビットのテキストとして表現されるように、転送符号化が適用されなければなりません。 7ビットのデータであるMIME実体は既に転送符号化を必要としません。例えば8ビットのテキストおよびバイナリデータなどのエンティティは、引用符で囲まれた印刷可能な又はベース64の転送符号化で符号化することができます。"
    },
    {
      "indent": 3,
      "text": "The primary reason for the 7-bit requirement is that the Internet mail transport infrastructure cannot guarantee transport of 8-bit or binary data. Even though many segments of the transport infrastructure now handle 8-bit and even binary data, it is sometimes not possible to know whether the transport path is 8-bit clear. If a mail message with 8-bit data were to encounter a message transfer agent that can not transmit 8-bit or binary data, the agent has three options, none of which are acceptable for a clear-signed message:",
      "ja": "7ビットの要件のための主な理由は、インターネットメール輸送インフラは、8ビットまたはバイナリデータの転送を保証することができないということです。輸送インフラの多くのセグメントが現在の8ビットともバイナリデータを扱うにもかかわらず、搬送経路は、8ビットのクリアであるかどうかを知るために、時には不可能です。 8ビットデータとメールメッセージは、8ビットまたはバイナリデータを送信することができないメッセージ転送エージェントに遭遇した場合、エージェントはクリア署名されたメッセージのために許容可能であるいずれも3つのオプションを持っています。"
    },
    {
      "indent": 3,
      "text": "- The agent could change the transfer encoding; this would invalidate the signature. - The agent could transmit the data anyway, which would most likely result in the 8th bit being corrupted; this too would invalidate the signature. - The agent could return the message to the sender.",
      "ja": " - エージェントは、転送エンコードを変えることができます。これは、署名を無効にします。 - エージェントは、8ビット目の中で最も可能性の高い結果が破壊されることになる、とにかくデータを送信することができます。これはあまりにも署名が無効になります。 - エージェントは、送信者にメッセージを返すことができます。"
    },
    {
      "indent": 3,
      "text": "[MIME-SECURE] prohibits an agent from changing the transfer encoding of the first part of a multipart/signed message. If a compliant agent that can not transmit 8-bit or binary data encounters a multipart/signed message with 8-bit or binary data in the first part, it would have to return the message to the sender as undeliverable.",
      "ja": "[MIME-SECURE]マルチパート/署名されたメッセージの最初の部分の転送エンコーディングを変更剤を禁止します。 8ビットまたはバイナリデータを送信することができないコンプライアント剤が最初の部分に8ビットまたはバイナリデータを持つマルチパート/署名されたメッセージを検出した場合には、配信不能として送信者にメッセージを返却しなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.1.4 Sample Canonical MIME Entity",
      "section_title": true,
      "ja": "3.1.4サンプルの正規MIMEエンティティ"
    },
    {
      "indent": 3,
      "text": "This example shows a multipart/mixed message with full transfer encoding. This message contains a text part and an attachment. The sample message text includes characters that are not US-ASCII and thus must be transfer encoded. Though not shown here, the end of each line is <CR><LF>. The line ending of the MIME headers, the text, and transfer encoded parts, all must be <CR><LF>.",
      "ja": "この例では、完全な転送エンコードと混合/マルチパートメッセージを示します。このメッセージは、テキスト部分と添付ファイルが含まれています。サンプルメッセージのテキストは、転送をエンコードする必要がありますので、US-ASCIIでない文字が含まれています。ここでは図示していないが、各ラインの端部は、<CR> <LF>です。 MIMEヘッダ、テキスト、および転送符号化された部品のライン終了は、すべて、<CR> <LF>でなければなりません。"
    },
    {
      "indent": 3,
      "text": "Note that this example is not of an S/MIME message.",
      "ja": "この例では、S / MIMEメッセージではないことに留意されたいです。"
    },
    {
      "indent": 5,
      "text": "Content-Type: multipart/mixed; boundary=bar",
      "ja": "コンテンツタイプ：マルチパート/混合。境界=バー"
    },
    {
      "indent": 5,
      "text": "--bar Content-Type: text/plain; charset=iso-8859-1 Content-Transfer-Encoding: quoted-printable",
      "ja": "--barのContent-Type：text / plainの。文字セット= ISO-8859-1コンテンツ転送 - エンコード：quoted-printableの"
    },
    {
      "indent": 5,
      "text": "=A1Hola Michael!",
      "ja": "= A1Holaマイケル！"
    },
    {
      "indent": 5,
      "text": "How do you like the new S/MIME specification?",
      "ja": "どのように新しいS / MIME仕様を好きですか？"
    },
    {
      "indent": 5,
      "text": "I agree. It's generally a good idea to encode lines that begin with From=20 because some mail transport agents will insert a greater-than (>) sign, thus invalidating the signature.",
      "ja": "同意する。それは一般的にいくつかのメール転送エージェントは、したがって、署名を無効に、より大（>）記号を挿入するので、20 =から始まる行を符号化することをお勧めします。"
    },
    {
      "indent": 5,
      "text": "Also, in some cases it might be desirable to encode any =20 trailing whitespace that occurs on lines in order to ensure =20 that the message signature is not invalidated when passing =20 a gateway that modifies such whitespace (like BITNET). =20",
      "ja": "また、いくつかのケースでは（BITNETのような）そのような空白を修正= 20ゲートウェイを通過するときにメッセージの署名が無効にされていないこと= 20確実にするために、ライン上で発生する任意= 20末尾の空白を符号化することが望ましいかもしれません。 = 20"
    },
    {
      "indent": 5,
      "text": "--bar Content-Type: image/jpeg Content-Transfer-Encoding: base64",
      "ja": "--barのContent-Type：画像/ jpegのコンテンツ転送 - エンコード：BASE64"
    },
    {
      "indent": 5,
      "text": "iQCVAwUBMJrRF2N9oWBghPDJAQE9UQQAtl7LuRVndBjrk4EqYBIb3h5QXIX/LC// jJV5bNvkZIGPIcEmI5iFd9boEgvpirHtIREEqLQRkYNoBActFBZmh9GC3C041WGq uMbrbxc+nIs1TIKlA08rVi9ig/2Yh7LFrK5Ein57U/W72vgSxLhe/zhdfolT9Brn HOxEa44b+EI=",
      "ja": "iQCVAwUBMJrRF2N9oWBghPDJAQE9UQQAtl7LuRVndBjrk4EqYBIb3h5QXIX / LC // jJV5bNvkZIGPIcEmI5iFd9boEgvpirHtIREEqLQRkYNoBActFBZmh9GC3C041WGq uMbrbxc + nIs1TIKlA08rVi9ig / 2Yh7LFrK5Ein57U / W72vgSxLhe / zhdfolT9Brn HOxEa44b + NO ="
    },
    {
      "indent": 5,
      "text": "--bar--",
      "ja": " - バー - "
    },
    {
      "indent": 0,
      "text": "3.2 The application/pkcs7-mime Type",
      "section_title": true,
      "ja": "3.2アプリケーション/ PKCS7-MIMEタイプ"
    },
    {
      "indent": 3,
      "text": "The application/pkcs7-mime type is used to carry CMS objects of several types including envelopedData and signedData. The details of constructing these entities is described in subsequent sections. This section describes the general characteristics of the application/pkcs7-mime type.",
      "ja": "アプリケーション/ PKCS7-MIMEタイプはEnvelopedDataのとたsignedDataを含むいくつかのタイプのCMSオブジェクトを搬送するために使用されます。これらの事業体の構築についての詳細は、次のセクションで説明されています。このセクションでは、アプリケーション/ PKCS7-MIMEタイプの一般的な特性を記述する。"
    },
    {
      "indent": 3,
      "text": "The carried CMS object always contains a MIME entity that is prepared as described in section 3.1 if the eContentType is id-data. Other contents may be carried when the eContentType contains different values. See [ESS] for an example of this with signed receipts.",
      "ja": "実施CMSオブジェクトは常にのeContentTypeは、IDデータである場合のセクション3.1に記載のように調製されたMIMEエンティティを含んでいます。 eContentTypeは異なる値が含まれている場合、他の内容が実行されてもよいです。署名された領収書を使用してこの例のために[ESS]を参照。"
    },
    {
      "indent": 3,
      "text": "Since CMS objects are binary data, in most cases base-64 transfer encoding is appropriate, in particular when used with SMTP transport. The transfer encoding used depends on the transport through which the object is to be sent, and is not a characteristic of the MIME type.",
      "ja": "CMSオブジェクトはバイナリデータであるので、SMTPトランスポートと共に使用される場合、ほとんどの場合、ベース64転送符号化は、特に、適切です。使用される転送符号化は、オブジェクトが送信されるを通して輸送に依存し、MIMEタイプの特性ではありません。"
    },
    {
      "indent": 3,
      "text": "Note that this discussion refers to the transfer encoding of the CMS object or \"outside\" MIME entity. It is completely distinct from, and unrelated to, the transfer encoding of the MIME entity secured by the CMS object, the \"inside\" object, which is described in section 3.1.",
      "ja": "この議論は、CMSオブジェクトまたは「外側」MIMEエンティティの転送エンコーディングを意味することに留意されたいです。それは完全に区別し、CMSオブジェクト、セクション3.1に記載されている「内部」オブジェクトによって固定MIMEエンティティの転送エンコーディングとは無関係です。"
    },
    {
      "indent": 3,
      "text": "Because there are several types of application/pkcs7-mime objects, a sending agent SHOULD do as much as possible to help a receiving agent know about the contents of the object without forcing the receiving agent to decode the ASN.1 for the object. The MIME headers of all application/pkcs7-mime objects SHOULD include the optional \"smime-type\" parameter, as described in the following sections.",
      "ja": "アプリケーション/ PKCS7-MIMEオブジェクトのいくつかの種類がありますので、送信エージェントは、オブジェクトのASN.1をデコードするために受信エージェントを強制することなく受信エージェントは、オブジェクトの内容を知っていただくため、できるだけ多くを行う必要があります。次のセクションで説明したようにすべてのアプリケーション/ PKCS7-MIMEオブジェクトのMIMEヘッダは、オプションの「SMIME型」パラメータを含むべきです。"
    },
    {
      "indent": 0,
      "text": "3.2.1 The name and filename Parameters",
      "section_title": true,
      "ja": "名前とファイル名パラメータを3.2.1"
    },
    {
      "indent": 3,
      "text": "For the application/pkcs7-mime, sending agents SHOULD emit the optional \"name\" parameter to the Content-Type field for compatibility with older systems. Sending agents SHOULD also emit the optional Content-Disposition field [CONTDISP] with the \"filename\" parameter. If a sending agent emits the above parameters, the value of the parameters SHOULD be a file name with the appropriate extension:",
      "ja": "アプリケーション/ PKCS7-パントマイムのために、送信エージェントは、古いシステムとの互換性のためのContent-Typeフィールドにオプションの「名前」パラメータを発するべきです。送信エージェントは、「ファイル名」パラメータでオプションコンテンツの廃棄フィールド[CONTDISP]を発するべきです。送信エージェントは、上記のパラメータを発する場合は、パラメータの値は、適切な拡張子を持つファイル名にする必要があります。"
    },
    {
      "indent": 3,
      "text": "MIME Type File Extension",
      "ja": "MIMEタイプファイルの拡張子"
    },
    {
      "indent": 3,
      "text": "Application/pkcs7-mime (signedData, .p7m envelopedData)",
      "ja": "アプリケーション/ PKCS7-MIME（たsignedData、.p7m EnvelopedDataの）"
    },
    {
      "indent": 3,
      "text": "Application/pkcs7-mime (degenerate .p7c signedData \"certs-only\" message)",
      "ja": "アプリケーション/ PKCS7-MIME（縮重.p7cたsignedData \"本命のみ\" メッセージ）"
    },
    {
      "indent": 3,
      "text": "Application/pkcs7-signature .p7s",
      "ja": "アプリケーション/ PKCS7署名.p7s"
    },
    {
      "indent": 3,
      "text": "In addition, the file name SHOULD be limited to eight characters followed by a three letter extension. The eight character filename base can be any distinct name; the use of the filename base \"smime\" SHOULD be used to indicate that the MIME entity is associated with S/MIME.",
      "ja": "また、ファイル名は3つの文字の拡張子が続く8つの文字に制限する必要があります。 8文字のファイル名のベースは、任意の明確な名前にすることができます。ファイル名ベース「SMIME」の使用は、MIMEエンティティがS / MIMEに関連付けられていることを示すために使用されるべきです。"
    },
    {
      "indent": 3,
      "text": "Including a file name serves two purposes. It facilitates easier use of S/MIME objects as files on disk. It also can convey type information across gateways. When a MIME entity of type application/pkcs7-mime (for example) arrives at a gateway that has no special knowledge of S/MIME, it will default the entity's MIME type to application/octet-stream and treat it as a generic attachment, thus losing the type information. However, the suggested filename for an attachment is often carried across a gateway. This often allows the receiving systems to determine the appropriate application to hand the attachment off to, in this case a stand-alone S/MIME processing application. Note that this mechanism is provided as a convenience for implementations in certain environments. A proper S/MIME implementation MUST use the MIME types and MUST NOT rely on the file extensions.",
      "ja": "ファイル名を含めると、2つの目的があります。これは、ディスク上のファイルとしてS / MIMEオブジェクトのより容易な使用を容易にします。また、ゲートウェイ間で型情報を伝えることができます。タイプapplication / PKCS7-パントマイムのMIMEエンティティは（例えば）S / MIMEの特別な知識を持っていないゲートウェイに到着すると、それはアプリケーション/オクテットストリームにエンティティのMIMEタイプをデフォルトとし、一般的な添付ファイルとして扱います、これ型情報を失います。ただし、添付ファイルの推奨ファイル名は、多くの場合、ゲートウェイ間で行われます。これはしばしばスタンドアロンこの場合、S / MIME処理アプリケーションにおいて、受信システムはオフに添付ファイルを渡すために適切なアプリケーションを決定することを可能にします。この機構は、特定の環境における実装のための便宜として提供されることに留意されたいです。適切なS / MIME実装は、MIMEタイプを使用しなければならないとファイル拡張子当てにしてはいけません。"
    },
    {
      "indent": 0,
      "text": "3.2.2 The smime-type parameter",
      "section_title": true,
      "ja": "SMIME型パラメータを3.2.2"
    },
    {
      "indent": 3,
      "text": "The application/pkcs7-mime content type defines the optional \"smime-type\" parameter. The intent of this parameter is to convey details about the security applied (signed or enveloped) along with infomation about the contained content. This memo defines the following smime-types.",
      "ja": "アプリケーション/ PKCS7-MIMEコンテンツタイプは、オプションの「SMIME型」パラメータを定義します。このパラメータの目的は、含まれるコンテンツ約INFOMATIONとともにセキュリティ適用（署名またはエンベロープ）の詳細を伝えることです。このメモは、次のSMIME-タイプを定義します。"
    },
    {
      "indent": 3,
      "text": "Name Security Inner Content",
      "ja": "セキュリティインナーコンテンツの名前"
    },
    {
      "indent": 3,
      "text": "enveloped-data EnvelopedData id-data",
      "ja": "包まデータEnvelopedDataのIDのデータ"
    },
    {
      "indent": 3,
      "text": "signed-data SignedData id-data",
      "ja": "署名されたデータのSignedData IDデータ"
    },
    {
      "indent": 3,
      "text": "certs-only SignedData none",
      "ja": "本命専用のSignedDataなし"
    },
    {
      "indent": 3,
      "text": "In order that consistency can be obtained with future, the following guidelines should be followed when assigning a new smime-type parameter.",
      "ja": "新しいSMIME-typeパラメータを割り当てる際に一貫性が将来を得ることができるようにするために、以下のガイドラインに従わなければなりません。"
    },
    {
      "indent": 3,
      "text": "1. If both signing and encryption can be applied to the content, then two values for smime-type SHOULD be assigned \"signed-*\" and \"encrypted-*\". If one operation can be assigned then this may be omitted. Thus since \"certs-only\" can only be signed, \"signed-\" is omitted.",
      "ja": "署名と暗号化の両方がコンテンツに適用することができる場合は1を、次いでSMIME型のための2つの値は「signed- *」および「encrypted- *」割り当てられるべきです。一つの操作を割り当てることができる場合、これは省略することができます。したがって以降「本命のみ」のみ署名することができ、「signed-」が省略されています。"
    },
    {
      "indent": 3,
      "text": "2. A common string for a content oid should be assigned. We use \"data\" for the id-data content OID when MIME is the inner content.",
      "ja": "2.コンテンツのOIDのための共通の文字列を割り当てる必要があります。 MIMEは、内部コンテンツであるとき、私たちは、ID-データ内容OIDのための「データ」を使用しています。"
    },
    {
      "indent": 3,
      "text": "3. If no common string is assigned. Then the common string of \"OID.<oid>\" is recommended (for example, \"OID.1.3.6.1.5.5.7.6.1\" would be DES40).",
      "ja": "3.共通の文字列が割り当てられていない場合。その後の一般的な文字列「OID。<OID>」（例えば、「OID.1.3.6.1.5.5.7.6.1」DES40だろう）をお勧めします。"
    },
    {
      "indent": 0,
      "text": "3.3 Creating an Enveloped-only Message",
      "section_title": true,
      "ja": "3.3エンベロープのみのメッセージを作成します"
    },
    {
      "indent": 3,
      "text": "This section describes the format for enveloping a MIME entity without signing it. It is important to note that sending enveloped but not signed messages does not provide for data integrity. It is possible to replace ciphertext in such a way that the processed message will still be valid, but the meaning may be altered.",
      "ja": "このセクションでは、それに署名せずにMIMEエンティティを包むための形式について説明します。エンベロープが、署名されていないメッセージを送信すると、データの整合性を提供しないことに注意することが重要です。処理されたメッセージがまだ有効になりますように暗号文を置き換えることが可能であるが、意味は変更することができます。"
    },
    {
      "indent": 3,
      "text": "Step 1. The MIME entity to be enveloped is prepared according to section 3.1.",
      "ja": "ステップ1セクション3.1に従って製造される包まれるべきMIMEエンティティ。"
    },
    {
      "indent": 3,
      "text": "Step 2. The MIME entity and other required data is processed into a CMS object of type envelopedData. In addition to encrypting a copy of the content-encryption key for each recipient, a copy of the content encryption key SHOULD be encrypted for the originator and included in the envelopedData (see CMS Section 6).",
      "ja": "ステップ2. MIME実体と他の必要なデータは、タイプEnvelopedDataののCMSオブジェクトに処理されます。受信者ごとにコンテンツの暗号化キーのコピーを暗号化することに加えて、コンテンツの暗号化キーのコピーは、発信のために暗号化する必要があり、（CMSのセクション6を参照）EnvelopedDataの中に含まれています。"
    },
    {
      "indent": 3,
      "text": "Step 3. The CMS object is inserted into an application/pkcs7-mime MIME entity.",
      "ja": "ステップ3は、CMSオブジェクトは、アプリケーション/ PKCS7-MIMEのMIME実体に挿入されます。"
    },
    {
      "indent": 3,
      "text": "The smime-type parameter for enveloped-only messages is \"enveloped-data\". The file extension for this type of message is \".p7m\".",
      "ja": "包まのみのメッセージのためのSMIME型パラメータは、「包まデータ」です。このタイプのメッセージファイルの拡張子は「.p7m」です。"
    },
    {
      "indent": 3,
      "text": "A sample message would be:",
      "ja": "サンプルメッセージは次のようになります。"
    },
    {
      "indent": 7,
      "text": "Content-Type: application/pkcs7-mime; smime-type=enveloped-data;\n     name=smime.p7m\nContent-Transfer-Encoding: base64\nContent-Disposition: attachment; filename=smime.p7m",
      "raw": true
    },
    {
      "indent": 7,
      "text": "rfvbnj756tbBghyHhHUujhJhjH77n8HHGT9HG4VQpfyF467GhIGfHfYT6 7n8HHGghyHhHUujhJh4VQpfyF467GhIGfHfYGTrfvbnjT6jH7756tbB9H f8HHGTrfvhJhjH776tbB9HG4VQbnj7567GhIGfHfYT6ghyHhHUujpfyF4 0GhIGfHfQbnj756YT64V",
      "ja": "rfvbnj756tbBghyHhHUujhJhjH77n8HHGT9HG4VQpfyF467GhIGfHfYT6 7n8HHGghyHhHUujhJh4VQpfyF467GhIGfHfYGTrfvbnjT6jH7756tbB9H f8HHGTrfvhJhjH776tbB9HG4VQbnj7567GhIGfHfYT6ghyHhHUujpfyF4 0GhIGfHfQbnj756YT64V"
    },
    {
      "indent": 0,
      "text": "3.4 Creating a Signed-only Message",
      "section_title": true,
      "ja": "3.4署名のみのメッセージを作成します"
    },
    {
      "indent": 3,
      "text": "There are two formats for signed messages defined for S/MIME: application/pkcs7-mime with SignedData, and multipart/signed. In general, the multipart/signed form is preferred for sending, and receiving agents SHOULD be able to handle both.",
      "ja": "署名されたアプリケーション/のSignedDataとPKCS7-パントマイム、およびマルチパート/：S / MIME用に定義された署名されたメッセージには2つの形式があります。一般的には、マルチパート/署名されたフォームは、送信のために好ましい、及び受信剤は両方を扱うことができるべきです。"
    },
    {
      "indent": 0,
      "text": "3.4.1 Choosing a Format for Signed-only Messages",
      "section_title": true,
      "ja": "署名のみのメッセージのフォーマットを選択する3.4.1"
    },
    {
      "indent": 3,
      "text": "There are no hard-and-fast rules when a particular signed-only format should be chosen because it depends on the capabilities of all the receivers and the relative importance of receivers with S/MIME facilities being able to verify the signature versus the importance of receivers without S/MIME software being able to view the message.",
      "ja": "それは、S / MIME設備は、の重要性に対する署名を検証することができると共に、すべての受信機と受信機の相対的な重要性の能力に依存するため、特定の署名された専用フォーマットが選択されるべきであるハードと高速のルールが全くありません。 S / MIMEソフトウェアなしの受信機は、メッセージを表示することができるという。"
    },
    {
      "indent": 3,
      "text": "Messages signed using the multipart/signed format can always be viewed by the receiver whether they have S/MIME software or not. They can also be viewed whether they are using a MIME-native user agent or they have messages translated by a gateway. In this context, \"be viewed\" means the ability to process the message essentially as if it were not a signed message, including any other MIME structure the message might have.",
      "ja": "マルチパート/署名の形式を使用して署名されたメッセージは、常に彼らはS / MIMEソフトウェアを持っているかどうかを受信して​​表示することができます。彼らはまた、彼らはMIME-ネイティブ・ユーザー・エージェントを使用しているか、彼らはゲートウェイによって翻訳されたメッセージを持っているかどうかを見ることができます。この文脈において、それはメッセージが持つかもしれない任意の他のMIME構造を含む署名されたメッセージではなかったかのように本質的にメッセージを処理する能力を意味し、「見ること」。"
    },
    {
      "indent": 3,
      "text": "Messages signed using the signedData format cannot be viewed by a recipient unless they have S/MIME facilities. However, if they have S/MIME facilities, these messages can always be verified if they were not changed in transit.",
      "ja": "彼らはS / MIME機能を持っている場合を除きたsignedDataフォーマットを使用して署名されたメッセージは、受信者が見ることができません。彼らはS / MIME機能を持っている場合、彼らは途中で変更されていない場合は、これらのメッセージを常に確認することができます。"
    },
    {
      "indent": 0,
      "text": "3.4.2 Signing Using application/pkcs7-mime with SignedData",
      "section_title": true,
      "ja": "SignedDataとアプリケーション/ PKCS7-MIMEを使用3.4.2署名"
    },
    {
      "indent": 3,
      "text": "This signing format uses the application/pkcs7-mime MIME type. The steps to create this format are:",
      "ja": "この署名フォーマットは、アプリケーション/ PKCS7-パントマイムのMIMEタイプを使用しています。このフォーマットを作成する手順は以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "Step 1. The MIME entity is prepared according to section 3.1",
      "ja": "ステップ1. MIMEエンティティは、セクション3.1に従って製造されます"
    },
    {
      "indent": 3,
      "text": "Step 2. The MIME entity and other required data is processed into a CMS object of type signedData",
      "ja": "ステップ2. MIME実体と他の必要なデータは、タイプたsignedDataのCMSオブジェクトに処理され"
    },
    {
      "indent": 3,
      "text": "Step 3. The CMS object is inserted into an application/pkcs7-mime MIME entity",
      "ja": "ステップ3. CMSオブジェクトは、アプリケーション/ PKCS7-MIME MIMEエンティティに挿入されます"
    },
    {
      "indent": 3,
      "text": "The smime-type parameter for messages using application/pkcs7-mime with SignedData is \"signed-data\". The file extension for this type of message is \".p7m\".",
      "ja": "SignedDataとアプリケーション/ PKCS7-MIMEを使用してメッセージのSMIME型パラメータは、「署名されたデータを」されています。このタイプのメッセージファイルの拡張子は「.p7m」です。"
    },
    {
      "indent": 3,
      "text": "A sample message would be:",
      "ja": "サンプルメッセージは次のようになります。"
    },
    {
      "indent": 7,
      "text": "Content-Type: application/pkcs7-mime; smime-type=signed-data;\n     name=smime.p7m\nContent-Transfer-Encoding: base64\nContent-Disposition: attachment; filename=smime.p7m",
      "raw": true
    },
    {
      "indent": 7,
      "text": "567GhIGfHfYT6ghyHhHUujpfyF4f8HHGTrfvhJhjH776tbB9HG4VQbnj7 77n8HHGT9HG4VQpfyF467GhIGfHfYT6rfvbnj756tbBghyHhHUujhJhjH HUujhJh4VQpfyF467GhIGfHfYGTrfvbnjT6jH7756tbB9H7n8HHGghyHh 6YT64V0GhIGfHfQbnj75",
      "ja": "567GhIGfHfYT6ghyHhHUujpfyF4f8HHGTrfvhJhjH776tbB9HG4VQbnj7 77n8HHGT9HG4VQpfyF467GhIGfHfYT6rfvbnj756tbBghyHhHUujhJhjH HUujhJh4VQpfyF467GhIGfHfYGTrfvbnjT6jH7756tbB9H7n8HHGghyHh 6YT64V0GhIGfHfQbnj75"
    },
    {
      "indent": 0,
      "text": "3.4.3 Signing Using the multipart/signed Format",
      "section_title": true,
      "ja": "マルチパート/署名フォーマットを使用した3.4.3署名"
    },
    {
      "indent": 3,
      "text": "This format is a clear-signing format. Recipients without any S/MIME or CMS processing facilities are able to view the message. It makes use of the multipart/signed MIME type described in [MIME-SECURE]. The multipart/signed MIME type has two parts. The first part contains the MIME entity that is signed; the second part contains the \"detached signature\" CMS SignedData object in which the encapContentInfo eContent field is absent.",
      "ja": "このフォーマットは、クリア署名形式です。任意のS / MIMEまたはCMS処理施設のない受信者がメッセージを表示することができます。これは、[MIME-SECURE]に記載のマルチパート/署名されたMIMEタイプを使用します。マルチパート/署名されたMIMEタイプは、2つの部分を有します。最初の部分は、署名されたMIMEエンティティを含んでいます。第二部分はencapContentInfo e-コンテンツフィールドが不在である「分離署名」CMS SignedDataオブジェクトを含んでいます。"
    },
    {
      "indent": 0,
      "text": "3.4.3.1 The application/pkcs7-signature MIME Type",
      "section_title": true,
      "ja": "アプリケーション/ PKCS7署名MIMEタイプ3.4.3.1"
    },
    {
      "indent": 3,
      "text": "This MIME type always contains a single CMS object of type signedData. The signedData encapContentInfo eContent field MUST be absent. The signerInfos field contains the signatures for the MIME entity.",
      "ja": "このMIMEタイプは常にタイプsignedDataでの単一CMSオブジェクトが含まれています。たsignedData encapContentInfoのeContent分野は存在してはなりません。 signerInfosフィールドは、MIMEエンティティの署名が含まれています。"
    },
    {
      "indent": 3,
      "text": "The file extension for signed-only messages using application/pkcs7- signature is \".p7s\".",
      "ja": "アプリケーション/ pkcs7-署名を用いて署名された専用メッセージのためのファイル拡張子は「.p7s」です。"
    },
    {
      "indent": 0,
      "text": "3.4.3.2 Creating a multipart/signed Message",
      "section_title": true,
      "ja": "マルチパート/署名されたメッセージの作成3.4.3.2"
    },
    {
      "indent": 3,
      "text": "Step 1. The MIME entity to be signed is prepared according to section 3.1, taking special care for clear-signing.",
      "ja": "ステップ1クリア署名のための特別な注意しながら、セクション3.1に従って調製され署名されるべきMIMEエンティティ。"
    },
    {
      "indent": 3,
      "text": "Step 2. The MIME entity is presented to CMS processing in order to obtain an object of type signedData in which the encapContentInfo eContent field is absent.",
      "ja": "ステップ2は、MIMEエンティティはencapContentInfo e-コンテンツフィールドが存在しないタイプたsignedDataのオブジェクトを取得するためにCMS処理に提示されます。"
    },
    {
      "indent": 3,
      "text": "Step 3. The MIME entity is inserted into the first part of a multipart/signed message with no processing other than that described in section 3.1.",
      "ja": "ステップ3は、MIMEエンティティは、セクション3.1で説明した以外の処理とマルチパート/署名されたメッセージの最初の部分に挿入されます。"
    },
    {
      "indent": 3,
      "text": "Step 4. Transfer encoding is applied to the \"detached signature\" CMS SignedData object and it is inserted into a MIME entity of type application/pkcs7-signature.",
      "ja": "ステップ4.転送符号化は、「分離署名」CMS SignedDataオブジェクトに適用され、それはタイプapplication / PKCS7署名のMIME実体に挿入されます。"
    },
    {
      "indent": 3,
      "text": "Step 5. The MIME entity of the application/pkcs7-signature is inserted into the second part of the multipart/signed entity.",
      "ja": "ステップ5.アプリケーション/ PKCS7署名のMIMEエンティティは、マルチパート/署名されたエンティティの第二の部分に挿入されます。"
    },
    {
      "indent": 3,
      "text": "The multipart/signed Content type has two required parameters: the protocol parameter and the micalg parameter.",
      "ja": "プロトコルパラメータとmicalgパラメータ：マルチパート/署名されたコンテンツタイプは、2つの必須パラメータを有します。"
    },
    {
      "indent": 3,
      "text": "The protocol parameter MUST be \"application/pkcs7-signature\". Note that quotation marks are required around the protocol parameter because MIME requires that the \"/\" character in the parameter value MUST be quoted.",
      "ja": "プロトコルのパラメータは、「アプリケーション/ PKCS7署名」されなければなりません。 MIMEは、パラメータ値の「/」文字を引用しなければならないことを必要とするため、引用符は、プロトコルパラメータの周りに必要とされていることに注意してください。"
    },
    {
      "indent": 3,
      "text": "The micalg parameter allows for one-pass processing when the signature is being verified. The value of the micalg parameter is dependent on the message digest algorithm(s) used in the calculation of the Message Integrity Check. If multiple message digest algorithms are used they MUST be separated by commas per [MIME-SECURE]. The values to be placed in the micalg parameter SHOULD be from the following:",
      "ja": "署名が検証されているときmicalgパラメータはワンパス処理を可能にします。 micalgパラメータの値は、メッセージ整合性チェックの計算に使用されるメッセージダイジェストアルゴリズム（複数可）に依存しています。複数のメッセージダイジェストアルゴリズムが使用される場合、それらはあたりカンマで区切る必要があり[MIME-SECURE]。値は以下であるべきであるmicalgパラメータに配置します。"
    },
    {
      "indent": 3,
      "text": "Algorithm Value used",
      "ja": "アルゴリズムの値が使用しました"
    },
    {
      "indent": 3,
      "text": "MD5 md5 SHA-1 sha1 Any other unknown",
      "ja": "MD5 MD5、SHA-1 SHA1不明その他"
    },
    {
      "indent": 3,
      "text": "(Historical note: some early implementations of S/MIME emitted and expected \"rsa-md5\" and \"rsa-sha1\" for the micalg parameter.) Receiving agents SHOULD be able to recover gracefully from a micalg parameter value that they do not recognize.",
      "ja": "（ヒストリカルノート：S / MIMEのいくつかの初期の実装が放出され、micalgパラメータの「RSA-MD5」や「RSA-SHA1」を期待）エージェントは、彼らが認識しないことをmicalgパラメータ値から優雅に回復することができべきで受信。"
    },
    {
      "indent": 0,
      "text": "3.4.3.3 Sample multipart/signed Message",
      "section_title": true,
      "ja": "3.4.3.3サンプルマルチパート/署名されたメッセージ"
    },
    {
      "indent": 7,
      "text": "Content-Type: multipart/signed;\n   protocol=\"application/pkcs7-signature\";\n   micalg=sha1; boundary=boundary42",
      "raw": true
    },
    {
      "indent": 7,
      "text": "--boundary42 Content-Type: text/plain",
      "ja": "--boundary42のContent-Type：text / plainの"
    },
    {
      "indent": 7,
      "text": "This is a clear-signed message.",
      "ja": "これは、クリア署名付きメッセージです。"
    },
    {
      "indent": 7,
      "text": "--boundary42 Content-Type: application/pkcs7-signature; name=smime.p7s Content-Transfer-Encoding: base64 Content-Disposition: attachment; filename=smime.p7s",
      "ja": "--boundary42のContent-Type：アプリケーション/ PKCS7署名。名前= smime.p7sコンテンツ転送 - エンコード：base64でコンテンツディスポジション：添付ファイル;ファイル名= smime.p7s"
    },
    {
      "indent": 7,
      "text": "ghyHhHUujhJhjH77n8HHGTrfvbnj756tbB9HG4VQpfyF467GhIGfHfYT6 4VQpfyF467GhIGfHfYT6jH77n8HHGghyHhHUujhJh756tbB9HGTrfvbnj n8HHGTrfvhJhjH776tbB9HG4VQbnj7567GhIGfHfYT6ghyHhHUujpfyF4 7GhIGfHfYT64VQbnj756",
      "ja": "ghyHhHUujhJhjH77n8HHGTrfvbnj756tbB9HG4VQpfyF467GhIGfHfYT6 4VQpfyF467GhIGfHfYT6jH77n8HHGghyHhHUujhJh756tbB9HGTrfvbnj n8HHGTrfvhJhjH776tbB9HG4VQbnj7567GhIGfHfYT6ghyHhHUujpfyF4 7GhIGfHfYT64VQbnj756"
    },
    {
      "indent": 7,
      "text": "--boundary42--",
      "ja": "--boundary42--"
    },
    {
      "indent": 0,
      "text": "3.5 Signing and Encrypting",
      "section_title": true,
      "ja": "3.5署名と暗号化"
    },
    {
      "indent": 3,
      "text": "To achieve signing and enveloping, any of the signed-only and encrypted-only formats may be nested. This is allowed because the above formats are all MIME entities, and because they all secure MIME entities.",
      "ja": "署名およびエンベロープを達成するために、署名のみのいずれかと暗号化された専用のフォーマットは入れ子にすることができます。上記フォーマットは、すべてのMIMEエンティティであるため、これが許可され、それらはすべて安全なMIME実体ので。"
    },
    {
      "indent": 3,
      "text": "An S/MIME implementation MUST be able to receive and process arbitrarily nested S/MIME within reasonable resource limits of the recipient computer.",
      "ja": "S / MIMEの実装では、受信者コンピュータの合理的なリソース制限内で任意のネストされたS / MIMEを受信し、処理できなければなりません。"
    },
    {
      "indent": 3,
      "text": "It is possible to either sign a message first, or to envelope the message first. It is up to the implementor and the user to choose. When signing first, the signatories are then securely obscured by the enveloping. When enveloping first the signatories are exposed, but it is possible to verify signatures without removing the enveloping. This may be useful in an environment were automatic signature verification is desired, as no private key material is required to verify a signature.",
      "ja": "最初のメッセージに署名するか、または最初のメッセージを包むことが可能です。これは、選択し実装し、ユーザー次第です。最初に署名すると、署名者は、その後しっかりと包み込むによって隠されています。包み込むとき最初の署名が露出し、エンベロープを除去せずに署名を検証することができるされています。いかなる秘密鍵材料が署名を検証するために必要とされないので、これは、自動署名検証が望まれた環境において有用であり得ます。"
    },
    {
      "indent": 3,
      "text": "There are security ramifications to choosing whether to sign first or encrypt first. A recipient of a message that is encrypted and then signed can validate that the encrypted block was unaltered, but cannot determine any relationship between the signer and the unencrypted contents of the message. A recipient of a message that is signed-then-encrypted can assume that the signed message itself has not been altered, but that a careful attacker may have changed the unauthenticated portions of the encrypted message.",
      "ja": "最初の署名または最初に暗号化するかどうかを選択することにセキュリティ悪影響があります。暗号化され、その後、署名されたメッセージの受信者は、暗号化されたブロックは不変であったことを検証することができるが、メッセージの署名と暗号化されていないコンテンツとの間の関係を決定することができません。 - その後署名暗号化されたメッセージの受信者は、署名されたメッセージ自体は変更され、しかし慎重に、攻撃者が暗号化されたメッセージの認証されていない部分を変更したことをしていないと仮定することができます。"
    },
    {
      "indent": 0,
      "text": "3.6 Creating a Certificates-only Message",
      "section_title": true,
      "ja": "3.6証明書専用メッセージの作成"
    },
    {
      "indent": 3,
      "text": "The certificates only message or MIME entity is used to transport certificates, such as in response to a registration request. This format can also be used to convey CRLs.",
      "ja": "証明書のみメッセージまたはMIMEエンティティは、登録要求に応答として証明書を輸送するために使用されます。このフォーマットは、CRLを伝えるために使用することができます。"
    },
    {
      "indent": 3,
      "text": "Step 1. The certificates are made available to the CMS generating process which creates a CMS object of type signedData. The signedData encapContentInfo eContent field MUST be absent and signerInfos field MUST be empty.",
      "ja": "ステップ1証明書は、タイプたsignedDataのCMSオブジェクトを作成CMS生成処理に利用可能にされます。たsignedData encapContentInfoのeContent分野は存在してはならないとsignerInfosフィールドが空である必要があります。"
    },
    {
      "indent": 3,
      "text": "Step 2. The CMS signedData object is enclosed in an application/pkcs7-mime MIME entity",
      "ja": "ステップ2は、CMS SignedDataオブジェクトは、アプリケーション/ PKCS7-MIME MIMEエンティティで囲まれています"
    },
    {
      "indent": 3,
      "text": "The smime-type parameter for a certs-only message is \"certs-only\". The file extension for this type of message is \".p7c\".",
      "ja": "本命だけメッセージのSMIME型パラメータが「本命のみ」です。このタイプのメッセージファイルの拡張子は「.p7c」です。"
    },
    {
      "indent": 0,
      "text": "3.7 Registration Requests",
      "section_title": true,
      "ja": "3.7登録要求"
    },
    {
      "indent": 3,
      "text": "A sending agent that signs messages MUST have a certificate for the signature so that a receiving agent can verify the signature. There are many ways of getting certificates, such as through an exchange with a certificate authority, through a hardware token or diskette, and so on.",
      "ja": "受信エージェントが署名を検証できるように、メッセージに署名する送信エージェントは、署名のために証明書が必要。ようにハードウェアトークンまたはディスケットを通じて、認証局で、このような交流を通じた証明書を、取得、および多くの方法があります。"
    },
    {
      "indent": 3,
      "text": "S/MIME v2 [SMIMEV2] specified a method for \"registering\" public keys with certificate authorities using an application/pkcs10 body part. The IETF's PKIX Working Group is preparing another method for requesting certificates; however, that work was not finished at the time of this memo. S/MIME v3 does not specify how to request a",
      "ja": "S / MIME v2の[SMIMEV2]アプリケーション/ PKCS10の身体の部分を使用して証明書当局と公開鍵を「登録」するための方法を指定しました。 IETFのPKIXワーキンググループは、証明書を要求するための別の方法を準備しています。しかし、その仕事はこのメモの時点で終了していませんでした。 S / MIME v3は要求する方法を指定しません。"
    },
    {
      "indent": 3,
      "text": "certificate, but instead mandates that every sending agent already has a certificate. Standardization of certificate management is being pursued separately in the IETF.",
      "ja": "証明書には、代わりにすべての送信エージェントがすでに証明書を持っていることを義務付け。証明書管理の標準化は、IETFで別々に進められています。"
    },
    {
      "indent": 0,
      "text": "3.8 Identifying an S/MIME Message",
      "section_title": true,
      "ja": "3.8 S / MIMEメッセージの識別"
    },
    {
      "indent": 3,
      "text": "Because S/MIME takes into account interoperation in non-MIME environments, several different mechanisms are employed to carry the type information, and it becomes a bit difficult to identify S/MIME messages. The following table lists criteria for determining whether or not a message is an S/MIME message. A message is considered an S/MIME message if it matches any below.",
      "ja": "S / MIMEは、非MIME環境でアカウント相互運用にかかるため、いくつかの異なるメカニズムは、タイプ情報を運ぶために使用され、それがS / MIMEメッセージを識別するためにビットが困難となるれます。次の表は、メッセージがS / MIMEメッセージであるか否かを判定するための基準を示しています。それは任意の下に一致した場合にメッセージがS / MIMEメッセージと考えられています。"
    },
    {
      "indent": 3,
      "text": "The file suffix in the table below comes from the \"name\" parameter in the content-type header, or the \"filename\" parameter on the content-disposition header. These parameters that give the file suffix are not listed below as part of the parameter section.",
      "ja": "以下の表のファイル拡張子はContent-Typeヘッダの「名前」パラメータ、またはコンテンツ-dispositionヘッダーの「ファイル名」のパラメータから来ています。ファイル拡張子を与えるこれらのパラメータは、パラメータセクションの一部として、以下に列挙されていません。"
    },
    {
      "indent": 3,
      "text": "MIME type: application/pkcs7-mime parameters: any file suffix: any",
      "ja": "MIMEタイプ：application / PKCS7-MIMEパラメータ：任意のファイルの接尾辞：任意の"
    },
    {
      "indent": 3,
      "text": "MIME type: multipart/signed parameters: protocol=\"application/pkcs7-signature\" file suffix: any",
      "ja": "MIMEタイプ：マルチパート/署名されたパラメータ：プロトコル=「アプリケーション/ PKCS7署名」ファイルサフィックス：任意"
    },
    {
      "indent": 3,
      "text": "MIME type: application/octet-stream parameters: any file suffix: p7m, p7s, p7c",
      "ja": "MIMEタイプ：application / octet-streamのパラメータ：任意のファイル拡張子：P7M、P7S、p7c"
    },
    {
      "indent": 0,
      "text": "4. Certificate Processing",
      "section_title": true,
      "ja": "4.証明書の処理"
    },
    {
      "indent": 3,
      "text": "A receiving agent MUST provide some certificate retrieval mechanism in order to gain access to certificates for recipients of digital envelopes. This memo does not cover how S/MIME agents handle certificates, only what they do after a certificate has been validated or rejected. S/MIME certification issues are covered in [CERT3].",
      "ja": "受信エージェントは、デジタルエンベロープの受信者の証明書へのアクセスを得るために、いくつかの証明書取得メカニズムを提供しなければなりません。このメモは、証明書が検証または拒否された後、彼らがやるものだけを、S / MIMEエージェントが証明書を処理する方法をカバーしていません。 S / MIME証明書の問題は、[CERT3]で覆われています。"
    },
    {
      "indent": 3,
      "text": "At a minimum, for initial S/MIME deployment, a user agent could automatically generate a message to an intended recipient requesting that recipient's certificate in a signed return message. Receiving and sending agents SHOULD also provide a mechanism to allow a user to \"store and protect\" certificates for correspondents in such a way so as to guarantee their later retrieval.",
      "ja": "最低でも、初期のS / MIMEの展開のために、ユーザエージェントは自動的に署名したリターン・メッセージにその受信者の証明書を要求することを意図した受信者へのメッセージを生成することができます。受信と送信の薬剤はまた、彼らの後に検索を保証するようにユーザーに「ストアおよび保護」できるような方法で特派ための証明書をするためのメカニズムを提供する必要があります。"
    },
    {
      "indent": 0,
      "text": "4.1 Key Pair Generation",
      "section_title": true,
      "ja": "4.1鍵ペアの生成"
    },
    {
      "indent": 3,
      "text": "If an S/MIME agent needs to generate a key pair, then the S/MIME agent or some related administrative utility or function MUST be capable of generating separate DH and DSS public/private key pairs on behalf of the user. Each key pair MUST be generated from a good source of non-deterministic random input [RANDOM] and the private key MUST be protected in a secure fashion.",
      "ja": "S / MIMEエージェントは鍵のペアを生成する必要がある場合は、S / MIMEエージェントまたはいくつかの関連する管理ユーティリティや機能がユーザーに代わって別のDHとDSSの公開鍵/秘密鍵のペアを生成することができなければなりません。各キーのペアは、非決定論的ランダム入力[RANDOM]の良い情報源から生成されなければならないと秘密鍵は安全な方法で保護しなければなりません。"
    },
    {
      "indent": 3,
      "text": "If an S/MIME agent needs to generate a key pair, then the S/MIME agent or some related administrative utility or function SHOULD generate RSA key pairs.",
      "ja": "S / MIMEエージェントは鍵のペアを生成する必要がある場合は、S / MIMEエージェントまたはいくつかの関連する管理ユーティリティや機能はRSA鍵ペアを生成する必要があります。"
    },
    {
      "indent": 3,
      "text": "A user agent SHOULD generate RSA key pairs at a minimum key size of 768 bits. A user agent MUST NOT generate RSA key pairs less than 512 bits long. Creating keys longer than 1024 bits may cause some older S/MIME receiving agents to not be able to verify signatures, but gives better security and is therefore valuable. A receiving agent SHOULD be able to verify signatures with keys of any size over 512 bits. Some agents created in the United States have chosen to create 512 bit keys in order to get more advantageous export licenses. However, 512 bit keys are considered by many to be cryptographically insecure. Implementors should be aware that multiple (active) key pairs may be associated with a single individual. For example, one key pair may be used to support confidentiality, while a different key pair may be used for authentication.",
      "ja": "ユーザエージェントは、768ビットの最小キーサイズでRSA鍵ペアを生成する必要があります。ユーザエージェントは、512ビット長未満のRSA鍵ペアを生成してはいけません。 1024ビットより長いキーを作成すると、署名を検証することはできないために薬を受け、一部の古いS / MIMEを引き起こすが、より高いセキュリティを提供しますので、価値があることがあります。受信エージェントは、512ビットを超える任意のサイズのキーを使用して署名を検証することができるべきです。米国で作成されたいくつかの薬剤は、より有利な輸出ライセンスを取得するために、512ビットキーを作成することを選択しました。しかし、512ビットの鍵は、暗号安全でないことを多くの人に考えられています。実装者は、複数の（アクティブな）鍵ペアは、単一の個体に関連付けることができることを認識すべきです。例えば、一つの鍵ペアは異なる鍵ペアは、認証のために使用することができるが、秘密性をサポートするために使用されてもよいです。"
    },
    {
      "indent": 0,
      "text": "5. Security",
      "section_title": true,
      "ja": "5.セキュリティ"
    },
    {
      "indent": 3,
      "text": "This entire memo discusses security. Security issues not covered in other parts of the memo include:",
      "ja": "この全体のメモは、セキュリティについて説明します。メモの他の部分に記載されていないセキュリティの問題が含まれます："
    },
    {
      "indent": 3,
      "text": "40-bit encryption is considered weak by most cryptographers. Using weak cryptography in S/MIME offers little actual security over sending plaintext. However, other features of S/MIME, such as the specification of tripleDES and the ability to announce stronger cryptographic capabilities to parties with whom you communicate, allow senders to create messages that use strong encryption. Using weak cryptography is never recommended unless the only alternative is no cryptography. When feasible, sending and receiving agents should inform senders and recipients the relative cryptographic strength of messages.",
      "ja": "40ビットの暗号化は、ほとんどの暗号によって弱いと考えられています。 S / MIMEで弱い暗号を使用すると、プレーンテキストを送信する上で少し実際のセキュリティを提供しています。しかし、そのようなトリプルDESの仕様とあなたは誰と通信する相手に強力な暗号化機能を発表する能力として、S / MIMEの他の特徴は、送信者が強力な暗号化を使用してメッセージを作成することができます。唯一の選択肢は何の暗号ではない場合を除き、弱い暗号を使用することは推奨されることはありません。可能な場合、送信側と受信側のエージェントは、送信者と受信者にメッセージの相対的な暗号強度を通知する必要があります。"
    },
    {
      "indent": 3,
      "text": "It is impossible for most software or people to estimate the value of a message. Further, it is impossible for most software or people to estimate the actual cost of decrypting a message that is encrypted with a key of a particular size. Further, it is quite difficult to determine the cost of a failed decryption if a recipient cannot decode a message. Thus, choosing between different key sizes (or choosing whether to just use plaintext) is also impossible. However, decisions based on these criteria are made all the time, and therefore this memo gives a framework for using those estimates in choosing algorithms.",
      "ja": "ほとんどのソフトウェアや人々がメッセージの値を推定することは不可能です。さらに、それはほとんどのソフトウェアまたは特定のサイズのキーで暗号化されたメッセージを復号化の実際のコストを推定する人々のために不可能です。さらに、受信者がメッセージをデコードすることができない場合は失敗した復号化のコストを決定することは非常に困難です。このように、異なる鍵のサイズの間で選択（または単に平文を使用するかどうかを選択すること）も不可能です。しかし、これらの基準に基づいた決定は、すべての時間を作っているので、このメモはアルゴリズムを選択する際に、これらの推定値を使用するためのフレームワークを提供します。"
    },
    {
      "indent": 3,
      "text": "If a sending agent is sending the same message using different strengths of cryptography, an attacker watching the communications channel may be able to determine the contents of the strongly-encrypted message by decrypting the weakly-encrypted version. In other words, a sender should not send a copy of a message using weaker cryptography than they would use for the original of the message.",
      "ja": "送信エージェントは暗号の異なる強度を使用して同じメッセージを送信している場合は、通信チャネルを監視して攻撃者が弱く暗号化されたバージョンを復号することにより強力に暗号化されたメッセージの内容を決定することができます。言い換えれば、送信者は、彼らがメッセージの元に使用するよりも弱い暗号を使用したメッセージのコピーを送るべきではありません。"
    },
    {
      "indent": 3,
      "text": "Modification of the ciphertext can go undetected if authentication is not also used, which is the case when sending EnvelopedData without wrapping it in SignedData or enclosing SignedData within it.",
      "ja": "認証も使用されていない場合、暗号文の修正はSignedDataの中でそれを包むか、それ内のSignedDataを囲むことなく、EnvelopedDataのを送信するときにそうである、検出されないことができます。"
    },
    {
      "indent": 0,
      "text": "A. ASN.1 Module",
      "ja": "A. ASN.1モジュール"
    },
    {
      "indent": 0,
      "text": "SecureMimeMessageV3 { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) modules(0) smime(4) }",
      "ja": "SecureMimeMessageV3 {ISO（1）部材本体（2）米国（840）RSADSI（113549）PKCS（1）PKCS-9（9）SMIME（16）モジュール（0）SMIME（4）}"
    },
    {
      "indent": 0,
      "text": "DEFINITIONS IMPLICIT TAGS ::=\nBEGIN",
      "raw": true
    },
    {
      "indent": 0,
      "text": "IMPORTS -- Cryptographic Message Syntax SubjectKeyIdentifier, IssuerAndSerialNumber, RecipientKeyIdentifier FROM CryptographicMessageSyntax { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) modules(0) cms(1) };",
      "ja": "輸入 - 暗号メッセージ構文SubjectKeyIdentifier、IssuerAndSerialNumber、RecipientKeyIdentifier暗号メッセージ構文FROM {ISO（1）部材本体（2）米国（840）RSADSI（113549）PKCS（1）PKCS-9（9）SMIME（16）モジュール（0） CMS（1）}。"
    },
    {
      "indent": 0,
      "text": "-- id-aa is the arc with all new authenticated and unauthenticated -- attributes produced the by S/MIME Working Group",
      "ja": " -  ID-AAは、すべての認証新しく認証されていないと、アークである - 属性は、S / MIMEワーキンググループによって作成しました"
    },
    {
      "indent": 0,
      "text": "id-aa OBJECT IDENTIFIER ::= {iso(1) member-body(2) usa(840)\nrsadsi(113549)\n        pkcs(1) pkcs-9(9) smime(16) attributes(2)}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "-- S/MIME Capabilities provides a method of broadcasting the symetric -- capabilities understood. Algorithms should be ordered by preference -- and grouped by type",
      "ja": " - 理解機能 -  S / MIME機能は、対称型をブロードキャストする方法を提供します。アルゴリズムは、好みによって注文されなければならない - とタイプごとにグループ化"
    },
    {
      "indent": 0,
      "text": "smimeCapabilities OBJECT IDENTIFIER ::=\n   {iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9) 15}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "SMIMECapability ::= SEQUENCE {\n   capabilityID OBJECT IDENTIFIER,\n   parameters ANY DEFINED BY capabilityID OPTIONAL }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "SMIMECapabilities ::= SEQUENCE OF SMIMECapability",
      "raw": true
    },
    {
      "indent": 0,
      "text": "-- Encryption Key Preference provides a method of broadcasting the -- preferred encryption certificate.",
      "ja": " - 優先暗号化証明書 - 暗号化キー選好は放送する方法を提供します。"
    },
    {
      "indent": 0,
      "text": "id-aa-encrypKeyPref OBJECT IDENTIFIER ::= {id-aa 11}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "SMIMEEncryptionKeyPreference ::= CHOICE {\n   issuerAndSerialNumber   [0] IssuerAndSerialNumber,\n   receipentKeyId          [1] RecipientKeyIdentifier,\n   subjectAltKeyIdentifier [2] SubjectKeyIdentifier\n}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "-- The Content Encryption Algorithms defined for SMIME are:",
      "ja": " -  SMIME用に定義されたコンテンツの暗号化アルゴリズムは、以下のとおりです。"
    },
    {
      "indent": 0,
      "text": "-- Triple-DES is the manditory algorithm with CBCParameter being the -- parameters",
      "ja": " - パラメータ - トリプルDESは、CBCパラメータであると必須のアルゴリズムであります"
    },
    {
      "indent": 0,
      "text": "dES-EDE3-CBC OBJECT IDENTIFIER ::=\n   {iso(1) member-body(2) us(840) rsadsi(113549)\nencryptionAlgorithm(3) 7}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "CBCParameter ::= IV",
      "raw": true
    },
    {
      "indent": 0,
      "text": "IV ::= OCTET STRING (SIZE (8..8))",
      "raw": true
    },
    {
      "indent": 0,
      "text": "-- RC2 (or compatable) is an optional algorithm w/ RC2-CBC-paramter -- as the parameter",
      "ja": " -  RC2（又はコンパチブル）RC2-CBCパラメータ/ W最適アルゴリズムである - パラメータとして"
    },
    {
      "indent": 0,
      "text": "rC2-CBC OBJECT IDENTIFIER ::=\n   {iso(1) member-body(2) us(840) rsadsi(113549)\nencryptionAlgorithm(3) 2}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "-- For the effective-key-bits (key size) greater than 32 and less than -- 256, the RC2-CBC algorithm parameters are encoded as:",
      "ja": " - 有効なキービット（キーサイズ）32より大きく、より少ないために -  256、RC2-CBCアルゴリズムパラメータは以下のように符号化されます。"
    },
    {
      "indent": 0,
      "text": "RC2-CBC-parameter ::=  SEQUENCE {\n   rc2ParameterVersion  INTEGER,\n   iv                   IV}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "-- For the effective-key-bits of 40, 64, and 128, the -- rc2ParameterVersion values are 160, 120, 58 respectively.",
      "ja": " -  40、64、及び128の実効キー・ビットについては、 -  rc2ParameterVersion値は、それぞれ160、120、58です。"
    },
    {
      "indent": 0,
      "text": "-- The following list the OIDs to be used with S/MIME V3",
      "ja": " - 以下のリストのOIDは、S / MIME V3で使用されます"
    },
    {
      "indent": 0,
      "text": "-- Digest Algorithms:",
      "ja": " - ダイジェストアルゴリズム："
    },
    {
      "indent": 0,
      "text": "-- md5 OBJECT IDENTIFIER ::=\n--    {iso(1) member-body(2) us(840) rsadsi(113549)\n-- digestAlgorithm(2) 5}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "-- sha-1 OBJECT IDENTIFIER ::=\n--    {iso(1) identified-organization(3) oiw(14) secsig(3)\n-- algorithm(2) 26}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "-- Asymmetric Encryption Algorithms\n--\n-- rsaEncryption OBJECT IDENTIFIER ::=\n--    {iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-1(1)\n-- 1}\n--",
      "raw": true
    },
    {
      "indent": 0,
      "text": "-- rsa OBJECT IDENTIFIER ::=\n--    {joint-iso-ccitt(2) ds(5) algorithm(8) encryptionAlgorithm(1) 1}\n--\n-- id-dsa OBJECT IDENTIFIER ::=\n--    {iso(1) member-body(2) us(840) x9-57(10040) x9cm(4) 1 }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "-- Signature Algorithms\n--\n-- md2WithRSAEncryption OBJECT IDENTIFIER ::=\n--    {iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-1(1)\n-- 2}\n--\n-- md5WithRSAEncryption OBJECT IDENTIFIER ::=\n--    {iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-1(1)\n-- 4}\n--\n-- sha-1WithRSAEncryption OBJECT IDENTIFIER ::=\n--    {iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-1(1)\n-- 5}\n--\n-- id-dsa-with-sha1 OBJECT IDENTIFIER ::=\n--    {iso(1) member-body(2) us(840) x9-57(10040) x9cm(4) 3}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "-- Other Signed Attributes\n--\n-- signingTime OBJECT IDENTIFIER ::=\n--    {iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n-- 5}\n--    See [CMS] for a description of how to encode the attribute\n--    value.",
      "raw": true
    },
    {
      "indent": 0,
      "text": "END",
      "ja": "終わり"
    },
    {
      "indent": 0,
      "text": "B. References",
      "ja": "B.リファレンス"
    },
    {
      "indent": 3,
      "text": "[3DES] ANSI X9.52-1998, \"Triple Data Encryption Algorithm Modes of Operation\", American National Standards Institute, 1998.",
      "ja": "[3DES] ANSI X9.52-1998、「操作のトリプルデータ暗号化アルゴリズムモード」、米国規格協会、1998。"
    },
    {
      "indent": 3,
      "text": "[CERT3] Ramsdell, B., Editor, \"S/MIME Version 3 Certificate Handling\", RFC 2632, June 1999.",
      "ja": "[CERT3] Ramsdell、B.、エディタ、 \"S / MIMEバージョン3証明書の取り扱い\"、RFC 2632、1999年6月。"
    },
    {
      "indent": 3,
      "text": "[CHARSETS] Character sets assigned by IANA. See <ftp://ftp.isi.edu/in-notes/iana/assignments/character-sets>.",
      "ja": "IANAによって割り当てられた[CHARSETS】文字セット。 <ftp://ftp.isi.edu/in-notes/iana/assignments/character-sets>を参照してください。"
    },
    {
      "indent": 3,
      "text": "[CMS] Housley, R., \"Cryptographic Message Syntax\", RFC 2630, June 1999.",
      "ja": "[CMS] Housley氏、R.、 \"暗号メッセージ構文\"、RFC 2630、1999年6月。"
    },
    {
      "indent": 3,
      "text": "[CONTDISP] Troost, R., Dorner, S. and K. Moore, \"Communicating Presentation Information in Internet Messages: The Content-Disposition Header Field\", RFC 2183, August 1997.",
      "ja": "[CONTDISP] Troost、R.、ドルナー、S.とK.ムーア、 \"インターネット・メッセージでプレゼンテーション情報を伝える：コンテンツ-Dispositionヘッダーフィールド\"、RFC 2183、1997年8月。"
    },
    {
      "indent": 3,
      "text": "[DES] ANSI X3.106, \"American National Standard for Information Systems- Data Link Encryption,\" American National Standards Institute, 1983.",
      "ja": "[DES] ANSI X3.106、「アメリカの国家規格情報Systems-データリンク暗号化のため、」米国規格協会、1983。"
    },
    {
      "indent": 3,
      "text": "[DH] Rescorla, E., \"Diffie-Hellman Key Agreement Method\", RFC 2631, June 1999.",
      "ja": "[DH]レスコラ、E.、 \"ディフィー・ヘルマン鍵共有方式\"、RFC 2631、1999年6月。"
    },
    {
      "indent": 3,
      "text": "[DSS] NIST FIPS PUB 186, \"Digital Signature Standard\", 18 May 1994.",
      "ja": "[DSS] NIST FIPS PUBの186、 \"デジタル署名標準\"、1994年5月18日。"
    },
    {
      "indent": 3,
      "text": "[ESS] Hoffman, P., Editor \"Enhanced Security Services for S/MIME\", RFC 2634, June 1999.",
      "ja": "[ESS]ホフマン、P.、エディタ \"S / MIMEのためのセキュリティサービスの強化\"、RFC 2634、1999年6月。"
    },
    {
      "indent": 3,
      "text": "[MD5] Rivest, R., \"The MD5 Message Digest Algorithm\", RFC 1321, April 1992.",
      "ja": "[MD5] Rivest氏、R.、 \"MD5メッセージダイジェストアルゴリズム\"、RFC 1321、1992年4月。"
    },
    {
      "indent": 3,
      "text": "[MIME-SPEC] The primary definition of MIME. \"MIME Part 1: Format of Internet Message Bodies\", RFC 2045; \"MIME Part 2: Media Types\", RFC 2046; \"MIME Part 3: Message Header Extensions for Non-ASCII Text\", RFC 2047; \"MIME Part 4: Registration Procedures\", RFC 2048; \"MIME Part 5: Conformance Criteria and Examples\", RFC 2049, September 1993.",
      "ja": "[MIME-SPEC] MIMEの主要な定義。 \"MIMEパート1：インターネットメッセージ本体のフォーマット\"、RFC 2045; \"MIMEパート2：メディアタイプ\"、RFC 2046; 「MIMEパート3：非ASCIIテキストのためのメッセージヘッダの拡張」、RFC 2047; \"MIMEパート4：登録手順\"、RFC 2048; \"MIMEパート5：適合基準と例\"、RFC 2049、1993年9月。"
    },
    {
      "indent": 3,
      "text": "[MIME-SECURE] Galvin, J., Murphy, S., Crocker, S. and N. Freed, \"Security Multiparts for MIME: Multipart/Signed and Multipart/Encrypted\", RFC 1847, October 1995.",
      "ja": "[MIME-SECURE]ガルビン、J.、マーフィー、S.、クロッカー、S.およびN.フリード、 \"MIMEマルチパートのセキュリティ：マルチパート/署名およびマルチパート/暗号化\"、RFC 1847、1995年10月。"
    },
    {
      "indent": 3,
      "text": "[MUSTSHOULD] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP14, RFC 2119, March 1997.",
      "ja": "[MUSTSHOULD]ブラドナーの、S.、 \"重要な要件レベルを示すためのRFCでの使用のための言葉\"、BCP14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[PKCS-1] Kaliski, B., \"PKCS #1: RSA Encryption Version 2.0\", RFC 2437, October 1998.",
      "ja": "[PKCS-1] Kaliski、B.、 \"PKCS＃1：RSA暗号化バージョン2.0\"、RFC 2437、1998年10月。"
    },
    {
      "indent": 3,
      "text": "[PKCS-7] Kaliski, B., \"PKCS #7: Cryptographic Message Syntax Version 1.5\", RFC 2315, March 1998.",
      "ja": "[PKCS-7] Kaliski、B.、 \"PKCS＃7：暗号メッセージ構文バージョン1.5\"、RFC 2315、1998年3月。"
    },
    {
      "indent": 3,
      "text": "[RANDOM] Eastlake, 3rd, D., Crocker, S. and J. Schiller, \"Randomness Recommendations for Security\", RFC 1750, December 1994.",
      "ja": "[RANDOM]イーストレイク、第三、D.、クロッカー、S.とJ.シラー、 \"セキュリティのためのランダム性に関する推奨事項\"、RFC 1750、1994年12月。"
    },
    {
      "indent": 3,
      "text": "[RC2] Rivest, R., \"A Description of the RC2 (r) Encryption Algorithm\", RFC 2268, January 1998.",
      "ja": "[RC2]リベスト、R.、 \"RC2（R）暗号化アルゴリズムの説明\"、RFC 2268、1998年1月。"
    },
    {
      "indent": 3,
      "text": "[SHA1] NIST FIPS PUB 180-1, \"Secure Hash Standard,\" National Institute of Standards and Technology, U.S. Department of Commerce, DRAFT, 31May 1994.",
      "ja": "[SHA1] NIST FIPS PUB 180-1の、 \"セキュアハッシュ標準、\" アメリカ国立標準技術研究所、米国商務省が、DRAFT、31May 1994。"
    },
    {
      "indent": 3,
      "text": "[SMIMEV2] Dusse, S., Hoffman, P., Ramsdell, B., Lundblade, L. and L. Repka, \"S/MIME Version 2 Message Specification\", RFC 2311, March 1998.",
      "ja": "【SMIMEV2] Dusse、S.、ホフマン、P.、Ramsdell、B.、Lundblade、L.及びL. Repka、 \"S / MIMEバージョン2メッセージ仕様\"、RFC 2311、1998年3月。"
    },
    {
      "indent": 0,
      "text": "C. Acknowledgements",
      "ja": "C.謝辞"
    },
    {
      "indent": 3,
      "text": "Many thanks go out to the other authors of the S/MIME Version 2 Message Specification RFC: Steve Dusse, Paul Hoffman, Laurence Lundblade and Lisa Repka. Without v2, there wouldn't be a v3.",
      "ja": "スティーブDusse、ポール・ホフマン、ローレンスLundbladeとリサRepka：多くのおかげでは、S / MIMEバージョン2メッセージ仕様のRFCの他の作家に出かけます。 v2とせずに、V3がないでしょう。"
    },
    {
      "indent": 3,
      "text": "A number of the members of the S/MIME Working Group have also worked very hard and contributed to this document. Any list of people is doomed to omission, and for that I apologize. In alphabetical order, the following people stand out in my mind due to the fact that they made direct contributions to this document.",
      "ja": "S / MIME作業部会のメンバーの数も非常に懸命に働いたと、この文書に貢献しています。人々の任意のリストを省略する運命にある、そしてそのために私は謝罪します。アルファベット順に、以下の人々は、それらが本文書に直接貢献をしたという事実のために私の心の中で目立ちます。"
    },
    {
      "indent": 3,
      "text": "Dave Crocker Bill Flanigan Paul Hoffman Russ Housley John Pawling Jim Schaad",
      "ja": "デイブ・クロッカービル・フラニガンポール・ホフマンラスHousleyジョンPawlingジムSchaad"
    },
    {
      "indent": 0,
      "text": "Editor's Address",
      "ja": "編集者の住所"
    },
    {
      "indent": 3,
      "text": "Blake Ramsdell Worldtalk 17720 NE 65th St Ste 201 Redmond, WA 98052",
      "ja": "ブレイクRamsdell Worldtalk 17720 NE第65回セントマリー201レドモンド、WA 98052"
    },
    {
      "indent": 3,
      "text": "Phone: +1 425 376 0225 EMail: blaker@deming.com",
      "ja": "電話：+1 425 376 0225 Eメール：blaker@deming.com"
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (1999). All Rights Reserved.",
      "ja": "著作権（C）インターネット協会（1999）。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the Internet Society or other Internet organizations, except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed, or as required to translate it into languages other than English.",
      "ja": "この文書とその翻訳は、コピーして他の人に提供し、それ以外についてはコメントまたは派生物は、いかなる種類の制限もなく、全体的にまたは部分的に、準備コピーし、公表して配布することができることを説明したり、その実装を支援することができます、上記の著作権表示とこの段落は、すべてのそのようなコピーや派生物に含まれていることを条件とします。しかし、この文書自体は著作権のための手順はで定義されている場合には、インターネット標準を開発するために必要なものを除き、インターネットソサエティもしくは他のインターネット関連団体に著作権情報や参照を取り除くなど、どのような方法で変更されないかもしれませんインターネット標準化プロセスが続く、または英語以外の言語に翻訳するために、必要に応じなければなりません。"
    },
    {
      "indent": 3,
      "text": "The limited permissions granted above are perpetual and will not be revoked by the Internet Society or its successors or assigns.",
      "ja": "上記の制限は永久で、インターネット学会やその後継者や譲渡者によって取り消されることはありません。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein is provided on an \"AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書とここに含まれている情報は、基礎とインターネットソサエティおよびインターネットエンジニアリングタスクフォースはすべての保証を否認し、明示または黙示、その情報の利用がない任意の保証を含むがこれらに限定されない「として、」上に設けられています特定の目的への権利または商品性または適合性の黙示の保証を侵害します。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "ja": "RFC Editor機能のための基金は現在、インターネット協会によって提供されます。"
    }
  ]
}