{
  "title": {
    "text": "RFC 2478 - The Simple and Protected GSS-API Negotiation Mechanism",
    "ja": "RFC 2478 - 単純で保護されたGSS-API交渉メカニズム"
  },
  "number": 2478,
  "created_at": "2019-10-26 23:55:54.156519+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                         E. Baize\nRequest for Comments: 2478                                   D. Pinkas\nCategory: Standards Track                                         Bull\n                                                         December 1998",
      "raw": true
    },
    {
      "indent": 9,
      "text": "The Simple and Protected GSS-API Negotiation Mechanism",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "このメモの位置付け"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "ja": "この文書は、インターネットコミュニティのためのインターネット標準トラックプロトコルを指定し、改善のための議論と提案を要求します。このプロトコルの標準化状態と状態への「インターネット公式プロトコル標準」（STD 1）の最新版を参照してください。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (1998). All Rights Reserved.",
      "ja": "著作権（C）インターネット協会（1998）。全著作権所有。"
    },
    {
      "indent": 0,
      "text": "1. ABSTRACT",
      "section_title": true,
      "ja": "1. ABSTRACT"
    },
    {
      "indent": 3,
      "text": "This document specifies a Security Negotiation Mechanism for the Generic Security Service Application Program Interface (GSS-API) which is described in [1].",
      "ja": "この文書では、[1]に記述されている一般的なセキュリティサービスアプリケーションプログラムインタフェース（GSS-API）のセキュリティネゴシエーションメカニズムを指定します。"
    },
    {
      "indent": 3,
      "text": "The GSS-API provides a generic interface which can be layered atop different security mechanisms such that if communicating peers acquire GSS-API credentials for the same security mechanism, then a security context may be established between them (subject to policy). However, GSS-API doesn't prescribe the method by which GSS-API peers can establish whether they have a common security mechanism.",
      "ja": "GSS-APIは、通信ピアが同じセキュリティ・メカニズムのGSS-API資格を取得した場合、セキュリティコンテキストは、それらの間に確立され得るように、異なるセキュリティ機構（ポリシーに従う）の上に積層することができる汎用的なインタフェースを提供します。ただし、GSS-APIは、GSS-APIピアは、彼らが共通のセキュリティ・メカニズムを持っているかどうかを確立することができる方法を規定していません。"
    },
    {
      "indent": 3,
      "text": "The Simple and Protected GSS-API Negotiation Mechanism defined here is a pseudo-security mechanism, represented by the object identifier iso.org.dod.internet.security.mechanism.snego (1.3.6.1.5.5.2) which enables GSS-API peers to determine in-band whether their credentials share common GSS-API security mechanism(s), and if so, to invoke normal security context establishment for a selected common security mechanism. This is most useful for applications that are based on GSS-API implementations which support multiple security mechanisms.",
      "ja": "ここで定義されたシンプルで保護されたGSS-API交渉メカニズムは、GSS-APIを可能オブジェクト識別子iso.org.dod.internet.security.mechanism.snego（1.3.6.1.5.5.2）で表される、擬似セキュリティメカニズムでありますピアは、それらの資格情報が共通のGSS-APIのセキュリティ機構（単数または複数）を共有するかどうかに帯域を決定し、もしそうであれば、選択された共通のセキュリティメカニズムのための通常のセキュリティコンテキストの確立を起動します。これは、複数のセキュリティ・メカニズムをサポートするGSS-APIの実装に基づいているアプリケーションのために最も有用です。"
    },
    {
      "indent": 3,
      "text": "This allows to negotiate different security mechanisms, different options within a given security mechanism or different options from several security mechanisms.",
      "ja": "これは、いくつかのセキュリティメカニズムとは異なるセキュリティメカニズム、特定のセキュリティ機構内の異なるオプションまたは別のオプションを交渉することを可能にします。"
    },
    {
      "indent": 3,
      "text": "Once the common security mechanism is identified, the security mechanism may also negotiate mechanism-specific options during its context establishment. This will be inside the mechanism tokens, and invisible to the SPNEGO protocol.",
      "ja": "共通のセキュリティメカニズムが識別されると、セキュリティ・メカニズムも、そのコンテキスト確立時メカニズム固有のオプションを交渉することができます。これは、メカニズムトークン内側にある、とSPNEGOプロトコルには見えないだろう。"
    },
    {
      "indent": 3,
      "text": "The simple and protected GSS-API mechanism negotiation is based on the following negotiation model : the initiator proposes one security mechanism or an ordered list of security mechanisms, the target either accepts the proposed security mechanism, or chooses one from an offered set, or rejects the proposed value(s). The target then informs the initiator of its choice.",
      "ja": "シンプルで保護されたGSS-API機構のネゴシエーションは、次の交渉モデルに基づいています：イニシエータが1つのセキュリティ・メカニズムやセキュリティ・メカニズムの順序付きリストを提案し、ターゲットが提案されているセキュリティ・メカニズムを受け入れる、または提供するセットから1を選択し、または拒否のいずれか提案された値（S）。ターゲットは、その選択肢のイニシエータに通知します。"
    },
    {
      "indent": 3,
      "text": "In its basic form this protocol requires an extra-round trip. Network connection setup is a critical performance characteristic of any network infrastructure and extra round trips over WAN links, packet radio networks, etc. really make a difference. In order to avoid such an extra round trip the initial security token of the preferred mechanism for the initiator may be embedded in the initial token. If the target preferred mechanism matches the initiator's preferred mechanism, no additional round trips are incurred by using the negotiation protocol.",
      "ja": "その基本的な形式では、このプロトコルは、余分なラウンドトリップが必要です。ネットワーク接続設定は、WANリンク、パケット無線ネットワーク上で任意のネットワークインフラストラクチャと余分なラウンドトリップの重要な性能特性など本当に違いを作ることです。このような余分なラウンドトリップを回避するために、開始剤のための好ましい機構の初期のセキュリティトークンは、初期トークンに埋め込まれていてもよいです。ターゲット好適なメカニズムは、イニシエータの優先メカニズムと一致する場合、追加のラウンドトリップは、ネゴシエーションプロトコルを使用して発生していません。"
    },
    {
      "indent": 3,
      "text": "The simple and protected GSS-API mechanism negotiation provides a technique to protect the negotiation that must be used when the underlying mechanism selected by the target is capable of integrity protection.",
      "ja": "シンプルで保護されたGSS-API機構のネゴシエーションは、ターゲットによって選択された基本的なメカニズムが完全性保護が可能であるときに使用する必要がありますネゴシエーションを保護するための技術を提供します。"
    },
    {
      "indent": 3,
      "text": "When all the mechanisms proposed by the initiator support integrity protection or when the selected mechanism supports integrity protection, then the negotiation mechanism becomes protected since this guarantees that the appropriate mechanism supported by both peers has been selected.",
      "ja": "選択された機構は、完全性保護をサポートしている場合、これは両方のピアでサポートされている適切なメカニズムが選択されていることを保証するので、イニシエータ・サポート・完全性保護によって提案されたすべてのメカニズムは、または、その後、交渉メカニズムは、保護された状態になると。"
    },
    {
      "indent": 3,
      "text": "The Simple and Protected GSS-API Negotiation Mechanism uses the concepts developed in the GSS-API specification [1]. The negotiation data is encapsulated in context-level tokens. Therefore, callers of the GSS-API do not need to be aware of the existence of the negotiation tokens but only of the new pseudo-security mechanism. A failure in the negotiation phase causes a major status code to be returned: GSS_S_BAD_MECH.",
      "ja": "単純で保護GSS-APIネゴシエーションメカニズムはGSS-API仕様[1]で開発された概念を使用します。ネゴシエーションデータは、コンテキストレベルトークンにカプセル化されます。したがって、GSS-APIの呼び出し側は、しかし、唯一の新しい擬似セキュリティメカニズムの交渉トークンの存在を意識する必要はありません。 GSS_S_BAD_MECH：ネゴシエーションフェーズでの失敗が返される主要なステータスコードの原因となります。"
    },
    {
      "indent": 0,
      "text": "2. NEGOTIATION MODEL",
      "section_title": true,
      "ja": "2.交渉モデル"
    },
    {
      "indent": 0,
      "text": "2.1. Negotiation description",
      "section_title": true,
      "ja": "2.1。交渉の説明"
    },
    {
      "indent": 3,
      "text": "The model for security mechanism negotiation reuses a subset of the concepts specified in [2].",
      "ja": "セキュリティ・メカニズムのネゴシエーションのためのモデル[2]で指定された概念のサブセットを再利用します。"
    },
    {
      "indent": 3,
      "text": "Each OID represents one GSS-API mechanism or one variant of it.",
      "ja": "各OIDは1 GSS-API機構やそれの一の変形を表しています。"
    },
    {
      "indent": 4,
      "text": "- When one security mechanism is proposed by the initiator, it represents the only security mechanism supported or selected (when the additional APIs defined in the Annex A are used) by the initiator.",
      "ja": " - つのセキュリティ機構がイニシエータによって提案されている場合には、イニシエータによって（付録Aで定義される追加のAPIが使用されている）がサポートまたは選択された唯一のセキュリティ・メカニズムを表します。"
    },
    {
      "indent": 4,
      "text": "- When several security mechanisms are proposed by the initiator, they represent a set of security mechanisms supported or selected (when the additional APIs defined in the Annex A are used) by the initiator.",
      "ja": " - いくつかのセキュリティメカニズムは、イニシエータが提案されている場合、それらは担持またはイニシエータによって（付録Aで定義される追加のAPIを使用する場合）選択されたセキュリティメカニズムのセットを表します。"
    },
    {
      "indent": 3,
      "text": "The first negotiation token sent by the initiator contains an ordered list of mechanisms, a set of options (e.g. deleg, replay, conf flags) that should be supported by the selected mechanism and optionally the initial security token for the desired mechanism of the initiator (i.e. the first of the list).",
      "ja": "イニシエータによって送信された最初のネゴシエーショントークン機構の順序付きリストが含まれ、オプションの組（例えばdeleg、リプレイ、CONFフラグ）を選択機構によって支持され、開始剤の所望の機構のための初期のセキュリティトークンを任意にすべきです（ ）リストの最初の、すなわち。"
    },
    {
      "indent": 3,
      "text": "The first negotiation token sent by the target contains the result of the negotiation (accept_completed, accept_incomplete or reject) and, in case of accept, the agreed security mechanism. It may also include the response to the initial security token from the initiator, when the first proposed mechanism of the initiator has been selected. When the first mechanism is acceptable to the target,it should respond to the initial security token for the desired mechanism of the initiator when it is present. However, if this is not possible, the target can simply ignore it and omit the responseToken from the first reply.",
      "ja": "ターゲットによって送信された最初のネゴシエーショントークンをネゴシエーション（accept_completed、accept_incompleteまたは拒否）の結果が含まれており、受け入れた場合に、合意されたセキュリティメカニズム。それはまた、開始剤の最初の提案された機構が選択された開始剤からの初期のセキュリティトークンへの応答を含むことができます。最初のメカニズムはターゲットに受け入れられるとき、それが存在する場合、それは開始剤の所望の機構のための初期のセキュリティトークンに応答しなければなりません。これが不可能な場合は、ターゲットは、単にそれを無視し、最初の応答からresponseTokenを省略することができます。"
    },
    {
      "indent": 3,
      "text": "Implementations that can piggyback the initial token will be rewarded by faster connection setup.",
      "ja": "最初のトークンを背負うことができます実装は、より高速な接続設定によって報われる。"
    },
    {
      "indent": 3,
      "text": "In case of a successful negotiation, the security mechanism represents the value suitable for the target, and picked up from the list offered by the initiator. The policy by which the target chooses a mechanism is an implementation-specific local matter. In the absence of other policy, the target should chose the first mechanism in the list for which valid credentials are available.",
      "ja": "成功した交渉の場合には、セキュリティ・メカニズムは、ターゲットに適した値を表し、イニシエータによって提供されるリストからピックアップ。ターゲット機構を選択したことにより、ポリシーが実装固有のローカルな問題です。他のポリシーが存在しない場合には、ターゲットは、有効な資格情報が入手可能なリストの最初のメカニズムを選択したはずです。"
    },
    {
      "indent": 3,
      "text": "Once a mechanism has been selected, the tokens specific to the selected mechanism are carried within the negotiation tokens (in the mechToken for the initiator and in the responseToken for the target).",
      "ja": "機構が選択されると、選択された機構に固有のトークンは、（ターゲットのイニシエータのmechTokenおよびresponseTokenに）ネゴシエーショントークン内に運ばれます。"
    },
    {
      "indent": 0,
      "text": "2.2. Negotiation procedure",
      "section_title": true,
      "ja": "2.2。ネゴシエーション手順"
    },
    {
      "indent": 3,
      "text": "The negotiation procedure is summarised as follows:",
      "ja": "次のようにネゴシエーション手順が要約されます。"
    },
    {
      "indent": 3,
      "text": "(a) the GSS-API initiator invokes GSS_Init_sec_context as normal, but requests (either explicitly, with the negotiation mechanism, or through accepting a default, when the default is the negotiation mechanism) that the Simple and Protected GSS-API Negotiation Mechanism be used;",
      "ja": "（a）はGSS-APIのイニシエータは、単純で保護GSS-APIネゴシエーションメカニズムを使用すること（デフォルトはネゴシエーション機構である場合、明示的に、ネゴシエーションメカニズムを有する、またはデフォルトを受け入れる介して）通常通りもしGSS_Init_sec_contextを呼び出すが、要求;"
    },
    {
      "indent": 3,
      "text": "(b) the initiator GSS-API implementation emits a negotiation token containing a list of supported security mechanisms for the credentials used for this context establishment, and optionally an initial security token for the first mechanism from that list (i.e. the preferred mechanism), and indicates GSS_S_CONTINUE_NEEDED status;",
      "ja": "（b）は、イニシエータGSS-APIの実装は、このコンテキストの確立のために使用される資格情報のためにサポートされるセキュリティメカニズムのリストを含むネゴシエーショントークンを放出し、そのリストから最初の機構（すなわち好ましい機構）のための初期のセキュリティトークンを必要に応じて、及びGSS_S_CONTINUE_NEEDED状態を示します。"
    },
    {
      "indent": 3,
      "text": "(c) The GSS-API initiator sends the token to the target application;",
      "ja": "（c）はGSS-APIのイニシエータは、ターゲット・アプリケーションにトークンを送信します。"
    },
    {
      "indent": 3,
      "text": "(d) The GSS-API target deposits the token through invoking GSS_Accept_sec_context. The target GSS-API implementation emits a negotiation token containing which if any of the proposed mechanisms it supports (or has selected).",
      "ja": "（D）場合gss_accept_sec_contextの呼び出しを介してGSS-APIの目標預金トークン。ターゲットGSS-APIの実装は、それがサポートする（または選択した）提案の機構の存在する場合を含むネゴシエーショントークンを放出します。"
    },
    {
      "indent": 3,
      "text": "If the mechanism selected by the target matches the preferred mechanism identified by the initiator and the initiator provides a mechToken, the negotiation token response may contain also an initial security token from that mechanism.",
      "ja": "ターゲットによって選択された機構は、イニシエータによって識別好適メカニズムと一致し、イニシエータがmechTokenを提供する場合、ネゴシエーショントークン応答はまた、その機構から初期のセキュリティトークンを含んでいてもよいです。"
    },
    {
      "indent": 3,
      "text": "If the preferred mechanism is accepted, GSS_Accept_sec_context() indicates GSS_S_COMPLETE when unilateral or mutual authentication has been performed and involves a single token in either direction.",
      "ja": "好ましい機構が受け入れられる場合、片側又は相互認証が行われ、いずれかの方向に単一のトークンを含むされている場合、場合gss_accept_sec_context（）はGSS_S_COMPLETEを示しています。"
    },
    {
      "indent": 3,
      "text": "If a proposed mechanism is accepted, and it was not the preferred mechanism, or if the first negotiation token sent by the initiator did not included a mechToken, then the negotiation token response sent by the target may contain also a response token from that mechanism which transmits mechanism-specific information (e.g. to transmit a certificate). The initiator may ignore such an initial token if it is not prepared to process it.",
      "ja": "提案されたメカニズムが受け入れられた場合、それは好適な機構ではなかった、またはイニシエータによって送信された最初のネゴシエーショントークンはmechTokenが含まれていなかった場合、ターゲットによって送信されたネゴシエーショントークン応答は、そのメカニズムからも応答トークンを含んでいてもよいです（例えば、証明書を送信する）メカニズム固有の情報を送信します。それを処理する準備ができていない場合、イニシエータは、初期トークンを無視することができます。"
    },
    {
      "indent": 3,
      "text": "If a proposed mechanism other than the preferred mechanism is accepted, or the preferred mechanism is accepted but involves multiple exchanges (e.g. challenge-response authentication), then GSS_Accept_sec_context() indicates GSS_S_CONTINUE_NEEDED status.",
      "ja": "好ましい機構以外の提案されたメカニズムが受け入れられ、または好ましい機構が受け付けられたが、複数の交換（例えば、チャレンジレスポンス認証）を含む場合、場合gss_accept_sec_context（）GSS_S_CONTINUE_NEEDED状態を示しています。"
    },
    {
      "indent": 3,
      "text": "If the proposed mechanism(s) are rejected, GSS_Accept_sec_context() indicates GSS_S_BAD_MECH status. The security context initialisation has failed.",
      "ja": "提案されたメカニズム（複数可）が拒否された場合、場合gss_accept_sec_context（）はGSS_S_BAD_MECH状態を示しています。セキュリティコンテキストの初期化に失敗しました。"
    },
    {
      "indent": 3,
      "text": "(e) The GSS-API target returns the token to the initiator application;",
      "ja": "（e）はGSS-APIのターゲットは、イニシエータ・アプリケーションにトークンを返します。"
    },
    {
      "indent": 3,
      "text": "(f) The GSS-API initiator deposits the token through invoking GSS_Init_sec_context.",
      "ja": "（f）はGSS-APIのイニシエータ沈着もしGSS_Init_sec_contextの呼び出しを介してトークン。"
    },
    {
      "indent": 3,
      "text": "GSS_Init_sec_context() may then indicate GSS_S_CONTINUE_NEEDED, GSS_S_COMPLETE or GSS_S_BAD_MECH status.",
      "ja": "もしGSS_Init_sec_context（）はGSS_S_CONTINUE_NEEDED、GSS_S_COMPLETEまたはGSS_S_BAD_MECHステータスを示すことができます。"
    },
    {
      "indent": 6,
      "text": "The GSS_S_BAD_MECH status is returned when the negotiation token carries a reject result or when the negotiation token carries an accept result and the mechanism selected by the target is not included in the initial list sent by the initiator.",
      "ja": "ネゴシエーショントークンは、結果を拒否するか、ネゴシエーショントークンを受け入れる結果を搬送したときにターゲットによって選択された機構は、イニシエータによって送信された初期リストに含まれていない搬送する場合GSS_S_BAD_MECHステータスが返されます。"
    },
    {
      "indent": 6,
      "text": "The GSS_S_BAD_MIC status is returned when the selected mechanism supports a MIC token but the MIC computed over the list of mechanisms sent by the initiator is missing or incorrect.",
      "ja": "選択された機構は、MICトークンをサポートしている場合GSS_S_BAD_MICステータスが返されますが、イニシエータによって送信されたメカニズムのリストの上に計算されたMICが見つからないか、間違っています。"
    },
    {
      "indent": 6,
      "text": "If the negotiation token carries a reject result, the context establishment is impossible. For example, a rejection will occur if the target doesn't support the initiator's proposed mechanism type(s). Upon failure of the mechanism negotiation procedure, the mech_type output parameter value is the negotiation mechanism type.",
      "ja": "交渉トークンが拒否結果を運ぶ場合は、コンテキストの確立が不可能です。ターゲットがイニシエータの提案されたメカニズムのタイプ（複数可）をサポートしていない場合、例えば、拒絶反応が発生します。機構ネゴシエーション手順の故障時に、メカニズム種別出力パラメータ値は、ネゴシエーションメカニズム型です。"
    },
    {
      "indent": 6,
      "text": "The GSS_S_CONTINUE_NEEDED status is returned when the negotiation token carries an accept result and further tokens must be transferred in order to complete context establishment for the selected mechanism. In that case GSS_Init_sec_context() returns an initial context token as output_token (with the selected mechanism's context token encapsulated within that output_token).",
      "ja": "ネゴシエーショントークンを受け入れる結果を搬送し、さらにトークンを選択機構のためのコンテキストの確立を完了するために転送されなければならないときにGSS_S_CONTINUE_NEEDED状態が返されます。その場合、もしGSS_Init_sec_context（）は（その内に封入されたoutput_token選択機構のコンテキストトークンで）たoutput_tokenとして初期コンテキストトークンを返します。"
    },
    {
      "indent": 6,
      "text": "The initiator then sends the output_token to the target. The security context initialisation is then continued according to the standard GSS-API conventions for the selected mechanism, where the tokens of the selected mechanism are encapsulated until the GSS_S_COMPLETE is returned for both the initiator and the target. When GSS_S_CONTINUE_NEEDED is returned, the mech_type output parameter is not yet valid.",
      "ja": "イニシエータは、ターゲットにたoutput_tokenを送ります。セキュリティ・コンテキストの初期化は、その後GSS_S_COMPLETEは、イニシエータとターゲットの両方のために戻されるまで、選択された機構のトークンが封入されている選択された機構のための標準的なGSS-APIの規則に従って続けられます。 GSS_S_CONTINUE_NEEDEDが返されると、メカニズム種別出力パラメータがまだ有効ではありません。"
    },
    {
      "indent": 6,
      "text": "When GSS_S_COMPLETE is returned, the mech_type output parameter indicates the selected mechanism. When the final negotiation token does not contain a MIC, the initiator GSS-API implementation must check the returned/selected mechanism is on the originally submitted list of mechanisms and also verify that the selected mechanism is not able to support a MIC. When the final negotiation token contains a MIC over the initial mechanisms list sent by the initiator, the MIC must be verified.",
      "ja": "GSS_S_COMPLETEが返されると、メカニズム種別の出力パラメータは、選択された機構を示しています。最終交渉トークンはMICが含まれていない場合は、イニシエータGSS-APIの実装では、返された/選択された機構は、メカニズムの元々提出リスト上でチェックしても、選択したメカニズムがMICをサポートすることができないことを確認する必要があります。最終交渉トークンがイニシエータによって送信された初期のメカニズムのリストの上にMICが含まれている場合は、MICを確認する必要があります。"
    },
    {
      "indent": 3,
      "text": "Note that the *_req_flag input parameters for context establishment are relative to the selected mechanism, as are the *_state output parameters. i.e., these parameters are not applicable to the negotiation process per se.",
      "ja": "* _state出力パラメータがそうであるようにコンテキストを確立するため* _req_flag入力パラメータは、選択された機構に対するものであることに留意されたいです。すなわち、これらのパラメータは、交渉プロセス自体には適用されません。"
    },
    {
      "indent": 3,
      "text": "The initiator GSS-API calling application may need to know when the negotiation exchanges were protected or not. For this, when GSS_S_COMPLETE is returned, it can simply test the integ_avail flag. When this flag is set it indicates that the negotiation was protected.",
      "ja": "イニシエータGSS-APIの呼び出し側のアプリケーションは、交渉のやり取りが保護たりいなかった時に知っておく必要があるかもしれません。 GSS_S_COMPLETEが返されたときに、このために、それは単にinteg_availフラグをテストすることができます。このフラグがセットされている場合には、交渉が保護されていたことを示しています。"
    },
    {
      "indent": 3,
      "text": "On receipt of a negotiation token on the target side, a GSS-API implementation that does not support negotiation would indicate the GSS_S_BAD_MECH status as if a particular basic security mechanism had been requested but was not supported.",
      "ja": "特定の基本的なセキュリティメカニズムが要求されていたが、サポートされていなかったかのように、ターゲット側の交渉トークンを受信すると、ネゴシエーションをサポートしていないGSS-APIの実装はGSS_S_BAD_MECHの状態を示すことになります。"
    },
    {
      "indent": 3,
      "text": "When GSS_Acquire_cred is invoked with the negotiation mechanism as desired_mechs, an implementation-specific default credential is used to carry on the negotiation. A set of mechanisms as specified locally by the system administrator is then available for negotiation. If there is a desire for the caller to make its own choice, then an additional API has to be used (see Appendix A).",
      "ja": "gss_acquire_credがdesired_mechsとして交渉メカニズムで呼び出された場合、実装固有のデフォルトの資格は、交渉に運ぶために使用されています。システム管理者がローカルに指定されるようにメカニズムのセットは、ネゴシエーションのために利用可能です。独自の選択をするの呼び出し元に対する欲求が存在する場合、追加のAPIは（付録Aを参照）を使用する必要があります。"
    },
    {
      "indent": 0,
      "text": "3. DATA ELEMENTS",
      "section_title": true,
      "ja": "3.データ要素"
    },
    {
      "indent": 0,
      "text": "3.1. Mechanism Type",
      "section_title": true,
      "ja": "3.1。メカニズムタイプ"
    },
    {
      "indent": 3,
      "text": "MechType::= OBJECT IDENTIFIER",
      "raw": true
    },
    {
      "indent": 3,
      "text": "mechType Each security mechanism is as defined in [1].",
      "ja": "[1]で定義されるようmechType各セキュリティ機構です。"
    },
    {
      "indent": 0,
      "text": "3.2. Negotiation Tokens",
      "section_title": true,
      "ja": "3.2。交渉のトークン"
    },
    {
      "indent": 3,
      "text": "The syntax of the negotiation tokens follows the InitialContextToken syntax defined in [1]. The security mechanism of the initial negotiation token is identified by the Object Identifier iso.org.dod.internet.security.mechanism.snego (1.3.6.1.5.5.2).",
      "ja": "交渉トークンの構文は、[1]で定義されInitialContextTokenの構文に従います。初期ネゴシエーショントークンのセキュリティメカニズムは、オブジェクト識別子iso.org.dod.internet.security.mechanism.snego（1.3.6.1.5.5.2）によって識別されます。"
    },
    {
      "indent": 0,
      "text": "3.2.1. Syntax",
      "section_title": true,
      "ja": "3.2.1。構文"
    },
    {
      "indent": 3,
      "text": "This section specifies the syntax of the corresponding \"innerContextToken\" field for the first token and subsequent negotiation tokens. During the mechanism negociation, the \"innerContextToken\" field contains the ASN.1 structure \"NegociationToken\" given below, encoded using the DER encoding conventions.",
      "ja": "このセクションでは、最初のトークンとその後の交渉のトークンに対応する「innerContextToken」フィールドの構文を指定します。機構の交渉中、「innerContextToken」フィールドは「NegociationTokenは」DER符号化規則を用いて符号化、下記のASN.1構造を含んでいます。"
    },
    {
      "indent": 0,
      "text": "NegotiationToken ::= CHOICE {\n                              negTokenInit  [0]  NegTokenInit,\n                              negTokenTarg  [1]  NegTokenTarg }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "MechTypeList ::= SEQUENCE OF MechType",
      "raw": true
    },
    {
      "indent": 0,
      "text": "NegTokenInit ::= SEQUENCE {\n                            mechTypes       [0] MechTypeList  OPTIONAL,\n                            reqFlags        [1] ContextFlags  OPTIONAL,\n                            mechToken       [2] OCTET STRING  OPTIONAL,\n                            mechListMIC     [3] OCTET STRING  OPTIONAL\n                         }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "ContextFlags ::= BIT STRING {\n        delegFlag       (0),\n        mutualFlag      (1),\n        replayFlag      (2),\n        sequenceFlag    (3),\n        anonFlag        (4),\n        confFlag        (5),\n        integFlag       (6)\n}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "negTokenInit Negotiation token sent by the initiator to the target, which contains, for the first token sent, one or more security mechanisms supported by the initiator (as indicated in the field mechTypes) and the service options (reqFlags) that are requested to establish the context. The context flags should be filled in from the req_flags parameter of init_sec_context().",
      "ja": "送信された最初のトークンのために含まれているターゲットにイニシエータによって送信されたnegTokenInitネゴシエーショントークン、、、確立するために要求されているイニシエータによってサポートされる1つのまたは複数のセキュリティ・メカニズム（フィールドmechTypesに示されるように）、サービスオプション（reqFlags）状況。コンテキストフラグがinit_sec_contextのreq_flagsを使用パラメータから充填されるべきです（）。"
    },
    {
      "indent": 5,
      "text": "The mechToken field is optional for the first token sent that all\ntarget implementations would not have to support. However for those\ntargets that do support piggybacking the initial mechToken, an\noptimistic negotiation response is possible. Otherwise the\nmechToken is used to carry the tokens specific to the mechanism\nselected.",
      "raw": true
    },
    {
      "indent": 5,
      "text": "The mechListMIC is an optional field. In the case that the chosen mechanism supports integrity, the initiator may optionally include a mechListMIC which is the result of a GetMIC of the MechTypes in the initial NegTokenInit and return GSS_S_COMPLETE.",
      "ja": "mechListMICはオプションのフィールドです。選択された機構は、完全性をサポートしている場合には、開始剤は、必要に応じて初期NegTokenInitにおけるMechTypesののgetMICの結果であるmechListMICを含み、GSS_S_COMPLETEを返すことができます。"
    },
    {
      "indent": 5,
      "text": "When the chosen mechanism uses an odd number of messages, the final mechanism token will be sent from the initiator to the acceptor. In this case, there is a tradeoff between using the optimal number of messages, or using an additional message from the acceptor to the initiator in order to give the initiator assurance that no modification of the initiator's mechanism list occurred. The implementation can choose which tradeoff to make (see section 4.2.2 for further details for the processing of that field).",
      "ja": "選択された機構は、メッセージの奇数を使用する場合、最終的なメカニズムトークンがアクセプターにイニシエータから送信されます。この場合、メッセージの最適な数を使用して、または開始の機構リストの修正が発生していないことイニシエータ保証を与えるためにイニシエータにアクセプタから追加のメッセージを使用しての間にトレードオフが存在します。実装は（そのフィールドを処理するための更なる詳細については、セクション4.2.2を参照）を作るためにどのトレードオフを選択することができます。"
    },
    {
      "indent": 0,
      "text": "NegTokenTarg ::= SEQUENCE {\n    negResult      [0] ENUMERATED {\n                            accept_completed    (0),\n                            accept_incomplete   (1),\n                            reject              (2) }          OPTIONAL,\n    supportedMech  [1] MechType                                OPTIONAL,\n    responseToken  [2] OCTET STRING                            OPTIONAL,\n    mechListMIC    [3] OCTET STRING                            OPTIONAL\n}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "negTokenTarg Negotiation token returned by the target to the initiator which contains, for the first token returned, a global negotiation result and the security mechanism selected (if any).",
      "ja": "negTokenTargネゴシエーションは、最初のトークンが返されるため、含有開始剤、グローバルネゴシエーション結果と選択されたセキュリティメカニズム（もしあれば）にターゲットによって返されたトークン。"
    },
    {
      "indent": 0,
      "text": "negResult The result accept_completed indicates that a context has been successfully established, while the result accept_incomplete indicates that additional token exchanges are needed.",
      "ja": "negResult accept_completed結果は結果accept_incompleteが追加トークンの交換が必要とされていることを示しているコンテキストが正常に確立されたことを示しています。"
    },
    {
      "indent": 10,
      "text": "Note: For the case where (a) a single-token context setup is\nused and (b) the preferred mechanism does not support the\nintegrity facility which would cause a mechListMIC to be\ngenerated and enclosed, this feature allows to make a\ndifference between a mechToken sent by the initiator but not\nprocessed by the target (accept_incomplete) and a mechToken\nsent by the initiator and processed by the target\n(accept_completed).",
      "raw": true
    },
    {
      "indent": 5,
      "text": "For those targets that support piggybacking the initial mechToken, an optimistic negotiation response is possible and includes in that case a responseToken which may continue the authentication exchange (e.g. when mutual authentication has been requested or when unilateral authentication requires several round trips). Otherwise the responseToken is used to carry the tokens specific to the mechanism selected. For subsequent tokens (if any) returned by the target, negResult, and supportedMech are not present.",
      "ja": "初期mechTokenを便乗サポートするターゲットでは、楽観的な交渉応答が可能であり、認証交換を（相互認証が要求されているか、一方的な認証は、いくつかのラウンドトリップを必要とするとき、例えばとき）続けることができる場合responseTokenには含まれています。そうでなければresponseTokenは、選択された機構に固有のトークンを運ぶために使用されます。ターゲットによって返され、後続のトークン（もしあれば）のために、negResult、及びsupportedMechは存在しません。"
    },
    {
      "indent": 5,
      "text": "For the last token returned by the target, the mechListMIC, when present, is a MIC computed over the MechTypes using the selected mechanism.",
      "ja": "ターゲット、mechListMICによって返された最後のトークンのために、存在する場合、選択された機構を使用してMechTypesにわたって計算MICです。"
    },
    {
      "indent": 0,
      "text": "negResult Result of the negotiation exchange, specified by the target.",
      "ja": "ターゲットで指定された交渉交換の結果negResult。"
    },
    {
      "indent": 5,
      "text": "This can be either :",
      "ja": "これは、いずれかになります。"
    },
    {
      "indent": 10,
      "text": "accept_completed\n     The target accepts the preferred security mechanism,\n      and the context is established for the target or,",
      "raw": true
    },
    {
      "indent": 10,
      "text": "accept_incomplete The target accepts one of the proposed security mechanisms and further exchanges are necessary, or,",
      "ja": "ターゲットが提案されているセキュリティメカニズムのいずれかを受け入れ、さらに交換が必要である、またはaccept_incomplete、"
    },
    {
      "indent": 10,
      "text": "reject The target rejects all the proposed security mechanisms.",
      "ja": "ターゲットは、すべての提案のセキュリティ・メカニズムを拒否拒否。"
    },
    {
      "indent": 0,
      "text": "supportedMech This field has to be present when negResult is \"accept_completed\" or \"accept_incomplete\". It is a choice from the mechanisms offered by the initiator.",
      "ja": "supportedMechこのフィールドはnegResultが「accept_completed」または「accept_incomplete」されたときに存在しなければなりません。これは、イニシエータによって提供されるメカニズムからの選択です。"
    },
    {
      "indent": 0,
      "text": "responseToken This field may be used either to transmit the response to the mechToken when sent by the initiator and when the first mechanism from the list has been selected by the target or to carry the tokens specific to the selected security mechanism.",
      "ja": "イニシエータによって送信された場合、リストから最初のメカニズムはターゲットによって選択された場合、または選択されたセキュリティメカニズムに固有のトークンを運ぶためにresponseTokenこのフィールドはmechTokenへの応答を送信するために使用することができます。"
    },
    {
      "indent": 0,
      "text": "mechListMIC If the selected mechanism is capable of integrity protection, this field must be present in the last message of the negotiation, (i.e., when the underlying mechanism returns a non-empty token and a major status of GSS_S_COMPLETE); it contains the result of a GetMIC of the MechTypes field in the initial NegTokenInit. It allows to verify that the list initially sent by the initiator has been received unmodified by the target.",
      "ja": "選択された機構は、完全性保護が可能である場合mechListMICは、このフィールドは、交渉の最後のメッセージに存在しなければならない、（すなわち、基礎となるメカニズムは、非空のトークンとGSS_S_COMPLETEの主要なステータスを返した場合）。それは最初のNegTokenInitでMechTypesフィールドののgetMICの結果が含まれています。これは、最初に、イニシエータによって送信されたリストは、ターゲットによって修飾されていない受信されたことを確認することを可能にします。"
    },
    {
      "indent": 0,
      "text": "3.2.2. Processing of mechListMIC.",
      "section_title": true,
      "ja": "3.2.2。 mechListMICの処理。"
    },
    {
      "indent": 3,
      "text": "If the mechanism selected by the negotiation does not support integrity, then no mechListMIC is included, otherwise a mechListMIC must be used and validated as indicated below.",
      "ja": "整合性をサポートしていない交渉によって選択された機構は、その後、何mechListMICが含まれていない場合は、そうでない場合mechListMICを使用し、以下に示すように検証する必要があります。"
    },
    {
      "indent": 3,
      "text": "If the mechanism supports integrity and uses an even number of messages, then the target must compute a MIC as described above, and send this in the final NegTokenTarg along with the final mechToken. The initiator when receiving the last token must require that the mechListMIC field be present and valid. In the absence of a valid mechListMIC, the negotiation must fail as if the last context establishment token was invalid.",
      "ja": "メカニズムは、整合性をサポートし、メッセージの偶数を使用している場合は、そのターゲットは、上記のようにMICを計算し、最終的なmechTokenと一緒に最終NegTokenTargでこれを送信する必要があります。最後のトークンを受信イニシエータはmechListMICフィールドが存在し、有効であることを要求しなければなりません。最後のコンテキスト確立トークンが無効であるかのように、有効なmechListMICがない場合には、交渉は失敗しなければなりません。"
    },
    {
      "indent": 3,
      "text": "In the case that the chosen mechanism supports integrity and uses an odd number of messages, the final mechanism token will be sent from the initiator to the target. In this case, there is a tradeoff between using the optimal number of messages, or using an additional message from the target to the initiator in order to give the initiator assurance that no modification of the initiator's mechanism list occurred. The implementation can choose which tradeoff to make.",
      "ja": "選択された機構は、完全性をサポートし、メッセージの奇数を使用する場合には、最終的なメカニズムトークンは、イニシエータからターゲットに送信されます。この場合、メッセージの最適な数を使用して、または開始の機構リストの修正が発生していないことイニシエータ保証を与えるために、ターゲットからイニシエータに追加のメッセージを使用しての間にトレードオフが存在します。実装は作るためにどのトレードオフを選択することができます。"
    },
    {
      "indent": 3,
      "text": "When generating the final NegTokenInit message, the NegTokenInit may optionally include a mechListMIC which is the result of a GetMIC of the MechTypes in the initial NegTokenInit and return GSS_S_COMPLETE. The target must check the presence of the MIC computed over the mechList sent in the initial NegTokenInit. Three cases may then be considered:",
      "ja": "最終NegTokenInitメッセージを生成するとき、NegTokenInitは、必要に応じて初期NegTokenInitにおけるMechTypesののgetMICの結果であり、GSS_S_COMPLETEを返すmechListMICを含むことができます。ターゲットは初期NegTokenInitに送らmechListにわたって計算されたMICの存在を確認する必要があります。三つの場合は、考慮されることがあります。"
    },
    {
      "indent": 6,
      "text": "1) If the mechListMIC is present and correct, then GSS_S_COMPLETE is returned to the target with no token; the context is established by the target.",
      "ja": "mechListMICが存在し、正しい場合は1）、次いでGSS_S_COMPLETEはないトークンと目標に戻されます。コンテキストは、ターゲットによって確立されます。"
    },
    {
      "indent": 6,
      "text": "2) If the mechListMIC is present but invalid, then the context establishment must fail. An error major status code is returned to the target.",
      "ja": "mechListMICが存在していても無効である場合2）、その後、コンテキストの確立が失敗しなければなりません。エラーの主要なステータスコードは、ターゲットに返されます。"
    },
    {
      "indent": 6,
      "text": "3) If the mechListMIC is not included in the final NegTokenInit, then GSS_S_COMPLETE must be returned to the target with a token. This token must be a NegTokenTarg, with a MIC included as described above, and no responseToken. The application will then send this token back to the initiator, which must verify that the mechListMIC field is present and valid.",
      "ja": "mechListMIC最終NegTokenInitに含まれていない場合3）、次いでGSS_S_COMPLETEは、トークンを使用してターゲットに戻さなければなりません。上述ず、何らresponseTokenとしてMICが含まれると、このトークンは、NegTokenTargなければなりません。その後、アプリケーションはバックmechListMICフィールドが存在し、有効であることを確認しなければならないイニシエータ、このトークンを送信します。"
    },
    {
      "indent": 9,
      "text": "Note: If the MIC was originally sent by the initiator, but thenafter deleted by an attacker, the target will send back a token according to the description above, but the initiator will be unable to process that returned token and the context establishment must then fail.",
      "ja": "MICは、もともとイニシエータによって送信された場合、攻撃者によって削除、thenafterターゲットは、上記の説明によれば、トークンを返送しますが、イニシエータはトークン返却処理することができなくなり、コンテキストの確立は、次に失敗する必要があります。注意してください。"
    },
    {
      "indent": 0,
      "text": "4. EXAMPLES : SECURITY MECHANISM NEGOTIATION",
      "section_title": true,
      "ja": "4.例：セキュリティ・メカニズムのNEGOTIATION"
    },
    {
      "indent": 3,
      "text": "Here are some examples of security mechanism negotiation between an initiator (I) and a target (T).",
      "ja": "ここで開始剤（I）およびターゲット（T）との間のセキュリティメカニズムネゴシエーションのいくつかの例です。"
    },
    {
      "indent": 0,
      "text": "4.1. Initial steps",
      "section_title": true,
      "ja": "4.1。初期段階"
    },
    {
      "indent": 3,
      "text": "(I) supports two security mechanism types (GSS-MECH1 and GSS-MECH2).",
      "ja": "（I）は、2つのセキュリティメカニズムのタイプ（GSS-MECH1とGSS-MECH2）をサポートしています。"
    },
    {
      "indent": 3,
      "text": "(I) invokes GSS_Init_sec_context() with :",
      "ja": "（私は）ともしGSS_Init_sec_context（）呼び出します："
    },
    {
      "indent": 3,
      "text": "Input mech_type = OID for negotiation mechanism or NULL, if the negotiation mechanism is the default mechanism.",
      "ja": "交渉メカニズムまたはNULLの入力メカニズム種別= OID、交渉メカニズムは、デフォルトのメカニズムがある場合。"
    },
    {
      "indent": 3,
      "text": "Output major_status = GSS_S_CONTINUE_NEEDED output_token = negTokenInit",
      "ja": "出力major_status = GSS_S_CONTINUE_NEEDEDたoutput_token = negTokenInit"
    },
    {
      "indent": 3,
      "text": "The negotiation token (negTokenInit) contains two security mechanisms with : mechType = GSS-MECH1 or mechType = GSS-MECH2",
      "ja": "mechType = GSS-MECH1又はmechType = GSS-MECH2：ネゴシエーショントークン（negTokenInit）は、2つのセキュリティメカニズムを含んでいます"
    },
    {
      "indent": 3,
      "text": "(I) sends to (T) the negotiation token.",
      "ja": "（I）（T）への交渉トークンを送信します。"
    },
    {
      "indent": 0,
      "text": "4.2 Successful negotiation steps",
      "section_title": true,
      "ja": "4.2成功した交渉の手順"
    },
    {
      "indent": 3,
      "text": "(T) supports GSS-MECH2 (T) receives the negotiation token (negTokenInit) from (I) (T) invokes GSS_Accept_sec_context() with :",
      "ja": "（T）は、GSS-MECH2（T）が（私は）（T）を持つ場合gss_accept_sec_context（）呼び出しから交渉トークン（negTokenInit）を受け取りサポートしています。"
    },
    {
      "indent": 3,
      "text": "Input input_token = negTokenInit",
      "ja": "入力入力トークン= negTokenInit"
    },
    {
      "indent": 3,
      "text": "Output major_status = GSS_S_CONTINUE_NEEDED output_token = negTokenTarg",
      "ja": "出力major_status = GSS_S_CONTINUE_NEEDEDたoutput_token = negTokenTarg"
    },
    {
      "indent": 3,
      "text": "The negotiation token (negTokenTarg) contains : negResult = accept (the negotiation result) supportedMech : mechType = GSS-MECH2",
      "ja": "交渉トークン（negTokenTarg）が含まれていますnegResult =（交渉結果を）受け入れるsupportedMech：mechType = GSS-MECH2"
    },
    {
      "indent": 3,
      "text": "(T) returns the negotiation token (negTokenTarg) to (I) (I) invokes GSS_Init_sec_context() with :",
      "ja": "（T）は、交渉トークンへ（negTokenTarg）（I）（I）もしGSS_Init_sec_contextを（呼び出し）とを返します。"
    },
    {
      "indent": 3,
      "text": "Input input_token = negTokenTarg",
      "ja": "入力入力トークン= negTokenTarg"
    },
    {
      "indent": 3,
      "text": "Output major_status = GSS_S_COMPLETE output_token = initialContextToken (initial context token for GSS-MECH2) mech_type = GSS-MECH2",
      "ja": "出力major_status = GSS_S_COMPLETEたoutput_token = initialContextToken（GSS-MECH2の初期コンテキストトークン）メカニズム種別= GSS-MECH2"
    },
    {
      "indent": 3,
      "text": "The subsequent steps are security mechanism specific, and work as specified in [1]. The output tokens from the security mechanism are encapsulated in a NegTokenTarg message (with the supportedMech field omitted, and the mechListMIC included with the last token).",
      "ja": "その後の工程は、特定のセキュリティメカニズムであり、[1]で指定されるように働きます。セキュリティ・メカニズムからの出力トークンは（supportedMechフィールドを省略して、そしてmechListMICは最後のトークンに含まれている）NegTokenTargメッセージ内にカプセル化されます。"
    },
    {
      "indent": 0,
      "text": "4.3. Failed negotiation steps",
      "section_title": true,
      "ja": "4.3。失敗したネゴシエーション手順"
    },
    {
      "indent": 3,
      "text": "(T) supports GSS-MECH3. (T) receives the negotiation token (negTokenInit) from (I) (T) invokes GSS_Accept_sec_context() with :",
      "ja": "（T）は、GSS-MECH3をサポートしています。 （T）は、（I）が（T）を有する場合gss_accept_sec_context（）呼び出しからのネゴシエーショントークン（negTokenInit）を受信します。"
    },
    {
      "indent": 3,
      "text": "Input input_token = negTokenInit",
      "ja": "入力入力トークン= negTokenInit"
    },
    {
      "indent": 3,
      "text": "Output major_status = GSS_S_BAD_MECH output_token = negTokenTarg",
      "ja": "出力major_status = GSS_S_BAD_MECHたoutput_token = negTokenTarg"
    },
    {
      "indent": 3,
      "text": "The negotiation token (negTokenTarg) contains :",
      "ja": "交渉トークン（negTokenTarg）が含まれています："
    },
    {
      "indent": 8,
      "text": "negResult = reject (the negotiation result)",
      "ja": "negResult =拒否（交渉結果）"
    },
    {
      "indent": 3,
      "text": "(T) returns the negotiation token (negTokenTarg) to (I) (I) invokes GSS_Init_sec_context() with :",
      "ja": "（T）は、交渉トークンへ（negTokenTarg）（I）（I）もしGSS_Init_sec_contextを（呼び出し）とを返します。"
    },
    {
      "indent": 3,
      "text": "Input input_token = negTokenTarg",
      "ja": "入力入力トークン= negTokenTarg"
    },
    {
      "indent": 3,
      "text": "Output major_status = GSS_S_BAD_MECH",
      "ja": "出力major_status = GSS_S_BAD_MECH"
    },
    {
      "indent": 3,
      "text": "The security context establishment has failed.",
      "ja": "セキュリティコンテキストの確立に失敗しました。"
    },
    {
      "indent": 0,
      "text": "4.4 Successful Negotiation with preferred mechanism info",
      "section_title": true,
      "ja": "推奨メカニズム情報と4.4ネゴシエーション成功"
    },
    {
      "indent": 3,
      "text": "(I) supports two security mechanism types (GSS-MECH1 and GSS-MECH2).",
      "ja": "（I）は、2つのセキュリティメカニズムのタイプ（GSS-MECH1とGSS-MECH2）をサポートしています。"
    },
    {
      "indent": 3,
      "text": "(I) invokes GSS_Init_sec_context() with :",
      "ja": "（私は）ともしGSS_Init_sec_context（）呼び出します："
    },
    {
      "indent": 3,
      "text": "Input mech_type = OID for negotiation mechanism or NULL, if the negotiation mechanism is the default mechanism.",
      "ja": "交渉メカニズムまたはNULLの入力メカニズム種別= OID、交渉メカニズムは、デフォルトのメカニズムがある場合。"
    },
    {
      "indent": 3,
      "text": "Output major_status = GSS_S_CONTINUE_NEEDED output_token = negTokenInit",
      "ja": "出力major_status = GSS_S_CONTINUE_NEEDEDたoutput_token = negTokenInit"
    },
    {
      "indent": 3,
      "text": "The negotiation token (negTokenInit) contains two security mechanisms with : mechType = GSS-MECH1 or mechType = GSS-MECH2",
      "ja": "mechType = GSS-MECH1又はmechType = GSS-MECH2：ネゴシエーショントークン（negTokenInit）は、2つのセキュリティメカニズムを含んでいます"
    },
    {
      "indent": 7,
      "text": " mechToken = output_token from GSS_Init_sec_context\n( first mechType) as described in [1]",
      "raw": true
    },
    {
      "indent": 3,
      "text": "(I) sends to (T) the negotiation token.",
      "ja": "（I）（T）への交渉トークンを送信します。"
    },
    {
      "indent": 3,
      "text": "(T) supports GSS-MECH1. (T) receives the negotiation token (negTokenInit) from (I) (T) invokes GSS_Accept_sec_context() with :",
      "ja": "（T）は、GSS-MECH1をサポートしています。 （T）は、（I）が（T）を有する場合gss_accept_sec_context（）呼び出しからのネゴシエーショントークン（negTokenInit）を受信します。"
    },
    {
      "indent": 3,
      "text": "Input input_token = negTokenInit",
      "ja": "入力入力トークン= negTokenInit"
    },
    {
      "indent": 3,
      "text": "Output major_status = GSS_S_CONTINUE_NEEDED output_token = negTokenTarg",
      "ja": "出力major_status = GSS_S_CONTINUE_NEEDEDたoutput_token = negTokenTarg"
    },
    {
      "indent": 3,
      "text": "The negotiation token (negTokenTarg) contains : negResult = accept (the negotiation result) supportedMech : mechType = GSS-MECH1",
      "ja": "交渉トークン（negTokenTarg）が含まれていますnegResult =（交渉結果を）受け入れるsupportedMech：mechType = GSS-MECH1"
    },
    {
      "indent": 8,
      "text": "mechToken = output_token from\n                 GSS_Accept_sec_context(mechToken )",
      "raw": true
    },
    {
      "indent": 3,
      "text": "(T) returns the negotiation token (negTokenTarg) to (I) (I) invokes GSS_Init_sec_context() with :",
      "ja": "（T）は、交渉トークンへ（negTokenTarg）（I）（I）もしGSS_Init_sec_contextを（呼び出し）とを返します。"
    },
    {
      "indent": 3,
      "text": "Input input_token = negTokenTarg",
      "ja": "入力入力トークン= negTokenTarg"
    },
    {
      "indent": 3,
      "text": "Output major_status = GSS_S_COMPLETE or GSS_S_CONTINUE_NEEDED as needed output_token = ContextToken (initial or subsequent context token for GSS-MECH1) mech_type = GSS-MECH1",
      "ja": "たoutput_token必要= ContextToken（初期またはGSS-MECH1ための後続のコンテキストトークン）として出力major_status = GSS_S_COMPLETEまたはGSS_S_CONTINUE_NEEDEDメカニズム種別= GSS-MECH1"
    },
    {
      "indent": 3,
      "text": "Specific implementations of the protocol can support the optimistic negotiation by completing the security context establishment using the agreed upon mechanism as described in [1]. As described above in section 5.2, the output tokens from the security mechanisms are encapsulated in a NegTokenTarg message (with the negResult and supportedMech fields omitted, and the mechListMIC included with the last token).",
      "ja": "プロトコルの特定の実装は、[1]に記載のように機構合意使用してセキュリティコンテキストの確立を完了することによって、楽観的ネゴシエーションをサポートすることができます。セクション5.2で上述したように、セキュリティ・メカニズムからの出力トークンはNegTokenTargメッセージ内にカプセル化されている（省略negResultとsupportedMechフィールドを持つ、及びmechListMICは最後のトークンに含まれています）。"
    },
    {
      "indent": 0,
      "text": "5. SECURITY CONSIDERATIONS",
      "section_title": true,
      "ja": "5.セキュリティの考察"
    },
    {
      "indent": 3,
      "text": "When the mechanism selected by the target from the list supplied by the initiator supports integrity protection, then the negotiation is protected.",
      "ja": "イニシエータにより供給されたリストからターゲットによって選択された機構は、完全性保護をサポートしている場合、その交渉は保護されています。"
    },
    {
      "indent": 3,
      "text": "When one of the mechanisms proposed by the initiator does not support integrity protection, then the negotiation is exposed to all threats a non secured service is exposed. In particular, an active attacker can force to use a security mechanism which is not the common preferred one (when multiple security mechanisms are shared between peers) but which is acceptable anyway to the target.",
      "ja": "完全性保護をサポートしていないイニシエータによって提案されたメカニズムの一つは、その後、交渉はすべての脅威にさらされている場合は非セキュアなサービスが露出しています。特に、活発な攻撃者は、（複数のセキュリティメカニズムは、ピア間で共有される）共通好ましいものではなく、ターゲットにとにかく許容されるセキュリティメカニズムを使用するように強制することができます。"
    },
    {
      "indent": 3,
      "text": "In any case, the communicating peers may be exposed to the denial of service threat.",
      "ja": "いずれの場合においても、通信ピアは、サービスの脅威の拒否にさらされてもよいです。"
    },
    {
      "indent": 0,
      "text": "6. ACKNOWLEDGMENTS",
      "section_title": true,
      "ja": "6.謝辞"
    },
    {
      "indent": 3,
      "text": "Acknowledgments are due to Stephen Farrell of SSE, Marc Horowitz of Stonecast, John Linn of RSA Laboratories, Piers McMahon of Platinum Technology, Tom Parker of ICL and Doug Rosenthal of EINet, for reviewing earlier versions of this document and for providing useful inputs. Acknowledgments are also due to Peter Brundrett of Microsoft for his proposal for an optimistic negotiation, and for Bill Sommerfeld of Epilogue Technology for his proposal for protecting the negotiation.",
      "ja": "謝辞このドキュメントの以前のバージョンを検討するために、有用な入力を提供するため、SSEのスティーブン・ファレル、Stonecastのマーク・ホロウィッツ、RSA研究所のジョン・リン、プラチナ技術の埠頭マクマホン、ICLのトム・パーカーとEINetのダグ・ローゼンタールによるものです。謝辞は楽観的交渉のための彼の提案のためにも、マイクロソフトのピーター・Brundrettによるものであり、そしてエピローグ技術のビル・ゾンマーフェルトのためのネゴシエーションを保護するための彼の提案のため。"
    },
    {
      "indent": 0,
      "text": "APPENDIX A",
      "ja": "付録A"
    },
    {
      "indent": 3,
      "text": "GSS-API NEGOTIATION SUPPORT API",
      "ja": "GSS-API交渉サポートAPI"
    },
    {
      "indent": 3,
      "text": "In order to provide to a GSS-API caller (either the initiator or the target or both) the ability to choose among the set of supported mechanisms a reduced set of mechanisms for negotiation, two additional APIs are defined:",
      "ja": "GSS-APIの呼び出し元（イニシエータまたはターゲットのいずれか、または両方）に支持機構のセットネゴシエーションのための機構の縮小セットの中から選択する能力を提供するために、二つの追加のAPIが定義されています。"
    },
    {
      "indent": 3,
      "text": "GSS_Get_neg_mechs() indicates the set of security mechanisms available on the local system to the caller for negotiation.",
      "ja": "GSS_Get_neg_mechs（）は、ネゴシエーションのための呼び出し元に、ローカルシステム上で利用可能なセキュリティメカニズムのセットを示しています。"
    },
    {
      "indent": 3,
      "text": "GSS_Set_neg_mechs() specifies the set of security mechanisms to be used on the local system by the caller for negotiation.",
      "ja": "GSS_Set_neg_mechs（）は、ネゴシエーションのための発信者がローカル・システムで使用されるセキュリティメカニズムのセットを指定します。"
    },
    {
      "indent": 0,
      "text": "A.1. GSS_Set_neg_mechs call",
      "ja": "A.1。 GSS_Set_neg_mechsコール"
    },
    {
      "indent": 3,
      "text": "Input: cred_handle CREDENTIAL HANDLE - NULL specifies default credentials mech_set SET OF OBJECT IDENTIFIER",
      "ja": "入力：cred_handle資格HANDLE  -  NULLはオブジェクト識別子の既定の資格情報mech_set SETを指定します"
    },
    {
      "indent": 3,
      "text": "Outputs: major_status INTEGER, minor_status INTEGER,",
      "ja": "出力：major_status INTEGER、minor_status INTEGER、"
    },
    {
      "indent": 3,
      "text": "Return major_status codes : GSS_S_COMPLETE indicates that the set of security mechanisms available for negotiation has been set to mech_set. GSS_S_FAILURE indicates that the requested operation could not be performed for reasons unspecified at the GSS-API level.",
      "ja": "major_status戻りコード：GSS_S_COMPLETEは、交渉のために利用可能なセキュリティメカニズムのセットがmech_setに設定されていることを示しています。 GSS_S_FAILUREは、要求された操作は、GSS-APIレベルに指定されていない理由で実行できなかったことを示します。"
    },
    {
      "indent": 3,
      "text": "Allows callers to specify the set of security mechanisms that may be negotiated with the credential identified by cred_handle. This call is intended for support of specialised callers who need to restrict the set of negotiable security mechanisms from the set of all security mechanisms available to the caller (based on available credentials). Note that if more than one mechanism is specified in mech_set, the order in which those mechanisms are specified implies a relative mechanism preference for the target.",
      "ja": "発信者がcred_handleによって識別クレデンシャルと交渉することができるセキュリティ機構のセットを指定することを可能にします。この呼び出しは（利用可能な資格情報に基づいて）、発信者が利用可能なすべてのセキュリティ・メカニズムのセットから交渉のセキュリティメカニズムのセットを制限する必要があり、特殊な発信者の支援を目的としています。複数の機構がmech_setで指定されている場合、これらのメカニズムが指定される順序は、ターゲットの相対機構の優先を含意することに注意してください。"
    },
    {
      "indent": 0,
      "text": "A.2. GSS_Get_neg_mechs call",
      "ja": "A.2。 GSS_Get_neg_mechsコール"
    },
    {
      "indent": 3,
      "text": "Input: cred_handle CREDENTIAL HANDLE - NULL specifies default credentials",
      "ja": "入力：cred_handle資格HANDLE  -  NULLがデフォルトの資格情報を指定します"
    },
    {
      "indent": 3,
      "text": "Outputs: major_status INTEGER, minor_status INTEGER, mech_set SET OF OBJECT IDENTIFIER",
      "ja": "出力：major_status INTEGER、minor_status INTEGER、オブジェクト識別子OF mech_set SET"
    },
    {
      "indent": 3,
      "text": "Return major_status codes : GSS_S_COMPLETE indicates that the set of security mechanisms available for negotiation has been returned in mech_option_set. GSS_S_FAILURE indicates that the requested operation could not be performed for reasons unspecified at the GSS-API level.",
      "ja": "major_status戻りコード：GSS_S_COMPLETEは、交渉のために利用可能なセキュリティメカニズムのセットがmech_option_setに戻ってきたことを示しています。 GSS_S_FAILUREは、要求された操作は、GSS-APIレベルに指定されていない理由で実行できなかったことを示します。"
    },
    {
      "indent": 3,
      "text": "Allows callers to determine the set of security mechanisms available for negotiation with the credential identified by cred_handle. This call is intended for support of specialised callers who need to reduce the set of negotiable security mechanisms from the set of supported security mechanisms available to the caller (based on available credentials).",
      "ja": "発信者がcred_handleで識別資格との交渉のために利用可能なセキュリティメカニズムのセットを決定することができます。この呼び出しは（利用可能な資格情報に基づいて）、発信者が利用可能なサポートされているセキュリティ・メカニズムのセットから交渉のセキュリティメカニズムのセットを削減する必要があり、特殊な発信者の支援を目的としています。"
    },
    {
      "indent": 3,
      "text": "Note: The GSS_Indicate_mechs() function indicates the full set of mechanism types available on the local system. Since this call has no input parameter, the returned set is not necessarily available for all credentials.",
      "ja": "注：は、gss_indicate_mechs（）関数は、ローカルシステム上で利用可能なメカニズムのタイプのフルセットを示しています。この呼び出しは何も入力パラメータを持っていないので、返されたセットは、必ずしもすべての資格情報では使用できません。"
    },
    {
      "indent": 0,
      "text": "REFERENCES",
      "ja": "REFERENCES"
    },
    {
      "indent": 3,
      "text": "[1] Linn, J., \"Generic Security Service Application Program Interface\", RFC 2078, January 1997.",
      "ja": "[1]リン、J.、 \"ジェネリックセキュリティーサービス適用業務プログラムインタフェース\"、RFC 2078、1997年1月。"
    },
    {
      "indent": 3,
      "text": "[2] Standard ECMA-206, \"Association Context Management including Security Context Management\", December 1993. Available on http://www.ecma.ch",
      "ja": "[2]標準ECMA-206、「アソシエーションコンテキスト管理などのセキュリティコンテキストの管理」、1993年12月には利用可能なhttp://www.ecma.chに"
    },
    {
      "indent": 0,
      "text": "AUTHORS' ADDRESSES",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Eric Baize Bull - 300 Concord Road Billerica, MA 01821 - USA",
      "ja": "エリック・ベーズブル -  300コンコードロードビレリカ、MA 01821  -  USA"
    },
    {
      "indent": 3,
      "text": "Phone: +1 978 294 61 37 Fax: +1 978 294 61 09 EMail: Eric.Baize@bull.com",
      "ja": "電話：+1 978 294 61 37ファックス：+1 978 294 61 09 Eメール：Eric.Baize@bull.com"
    },
    {
      "indent": 3,
      "text": "Denis Pinkas Bull Rue Jean-Jaures BP 68 78340 Les Clayes-sous-Bois - FRANCE",
      "ja": "デニスピンカスブルルージャンJauresのBP 68 78340レClayes-スーボワ -  FRANCE"
    },
    {
      "indent": 3,
      "text": "Phone: +33 1 30 80 34 87 Fax: +33 1 30 80 33 21 EMail: Denis.Pinkas@bull.net",
      "ja": "電話：+33 1 30 80 34 87ファックス：+33 1 30 80 33 21 Eメール：Denis.Pinkas@bull.net"
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (1998). All Rights Reserved.",
      "ja": "著作権（C）インターネット協会（1998）。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the Internet Society or other Internet organizations, except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed, or as required to translate it into languages other than English.",
      "ja": "この文書とその翻訳は、コピーして他の人に提供し、それ以外についてはコメントまたは派生物は、いかなる種類の制限もなく、全体的にまたは部分的に、準備コピーし、公表して配布することができることを説明したり、その実装を支援することができます、上記の著作権表示とこの段落は、すべてのそのようなコピーや派生物に含まれていることを条件とします。しかし、この文書自体は著作権のための手順はで定義されている場合には、インターネット標準を開発するために必要なものを除き、インターネットソサエティもしくは他のインターネット関連団体に著作権情報や参照を取り除くなど、どのような方法で変更されないかもしれませんインターネット標準化プロセスが続く、または英語以外の言語に翻訳するために、必要に応じなければなりません。"
    },
    {
      "indent": 3,
      "text": "The limited permissions granted above are perpetual and will not be revoked by the Internet Society or its successors or assigns.",
      "ja": "上記の制限は永久で、インターネット学会やその後継者や譲渡者によって取り消されることはありません。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein is provided on an \"AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書とここに含まれている情報は、基礎とインターネットソサエティおよびインターネットエンジニアリングタスクフォースはすべての保証を否認し、明示または黙示、その情報の利用がない任意の保証を含むがこれらに限定されない「として、」上に設けられています特定の目的への権利または商品性または適合性の黙示の保証を侵害します。"
    }
  ]
}