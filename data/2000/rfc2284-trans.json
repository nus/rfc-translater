{
  "title": {
    "text": "RFC 2284 - PPP Extensible Authentication Protocol (EAP)",
    "ja": "RFC 2284 - PPP拡張認証プロトコル（EAP）"
  },
  "number": 2284,
  "created_at": "2019-10-22 15:58:43.408777+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                          L. Blunk\nRequest for Comments: 2284                                J. Vollbrecht\nCategory: Standards Track                           Merit Network, Inc.\n                                                             March 1998",
      "raw": true
    },
    {
      "indent": 14,
      "text": "PPP Extensible Authentication Protocol (EAP)",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "このメモの位置付け"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "ja": "この文書は、インターネットコミュニティのためのインターネット標準トラックプロトコルを指定し、改善のための議論と提案を要求します。このプロトコルの標準化状態と状態への「インターネット公式プロトコル標準」（STD 1）の最新版を参照してください。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (1998). All Rights Reserved.",
      "ja": "著作権（C）インターネット協会（1998）。全著作権所有。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "The Point-to-Point Protocol (PPP) [1] provides a standard method for transporting multi-protocol datagrams over point-to-point links.",
      "ja": "ポイントツーポイントプロトコル（PPP）[1]は、ポイントツーポイントリンク上でマルチプロトコルデータグラムを輸送するための標準的な方法を提供します。"
    },
    {
      "indent": 3,
      "text": "PPP also defines an extensible Link Control Protocol, which allows negotiation of an Authentication Protocol for authenticating its peer before allowing Network Layer protocols to transmit over the link.",
      "ja": "また、PPPはネットワーク層プロトコルがリンクの上の送信を許可する前に、そのピアを認証するための認証プロトコルのネゴシエーションを可能にする拡張可能なリンク制御プロトコルを定義します。"
    },
    {
      "indent": 3,
      "text": "This document defines the PPP Extensible Authentication Protocol.",
      "ja": "このドキュメントは、PPP拡張認証プロトコルを定義します。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.     Introduction ..........................................    2\n   1.1       Specification of Requirements ...................    2\n   1.2       Terminology .....................................    2\n2.     PPP Extensible Authentication Protocol (EAP) ..........    3\n   2.1       Configuration Option Format .....................    4\n   2.2       Packet Format ...................................    6\n      2.2.1  Request and Response ............................    6\n      2.2.2  Success and Failure .............................    7\n3.     Initial EAP Request/Response Types ....................    8\n   3.1       Identity ........................................    9\n   3.2       Notification ....................................   10\n   3.3       Nak .............................................   10",
      "raw": true
    },
    {
      "indent": 3,
      "text": "   3.4       MD5-Challenge ...................................   11\n   3.5       One-Time Password (OTP) .........................   11\n   3.6       Generic Token Card ..............................   12\nREFERENCES ...................................................   13\nACKNOWLEDGEMENTS .............................................   14\nCHAIR'S ADDRESS ..............................................   14\nAUTHORS' ADDRESSES ...........................................   14\nFull Copyright Statement .....................................   15",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "In order to establish communications over a point-to-point link, each end of the PPP link must first send LCP packets to configure the data link during Link Establishment phase. After the link has been established, PPP provides for an optional Authentication phase before proceeding to the Network-Layer Protocol phase.",
      "ja": "ポイントツーポイントリンクを介して通信を確立するために、PPPリンクの各端は、最初のリンク確立フェーズの間にデータリンクを設定するためにLCPパケットを送信しなければなりません。リンクが確立された後、PPPはネットワーク層プロトコルフェーズに進む前に、オプションの認証フェーズのために用意されています。"
    },
    {
      "indent": 3,
      "text": "By default, authentication is not mandatory. If authentication of the link is desired, an implementation MUST specify the Authentication-Protocol Configuration Option during Link Establishment phase.",
      "ja": "デフォルトでは、認証は必須ではありません。リンクの認証が必要な場合は、実装は、リンク確立フェーズ認証・プロトコル設定オプションを指定する必要があります。"
    },
    {
      "indent": 3,
      "text": "These authentication protocols are intended for use primarily by hosts and routers that connect to a PPP network server via switched circuits or dial-up lines, but might be applied to dedicated links as well. The server can use the identification of the connecting host or router in the selection of options for network layer negotiations.",
      "ja": "これらの認証プロトコルは、主に切り替え回路またはダイヤルアップ回線を介してPPPネットワークサーバーに接続ホストとルータでの使用を目的としているが、同様に、専用のリンクに適用される可能性があります。サーバは、ネットワーク層のネゴシエーションのためのオプションの選択に接続ホスト又はルータの識別を使用することができます。"
    },
    {
      "indent": 3,
      "text": "This document defines the PPP Extensible Authentication Protocol (EAP). The Link Establishment and Authentication phases, and the Authentication-Protocol Configuration Option, are defined in The Point-to-Point Protocol (PPP) [1].",
      "ja": "この文書では、PPP拡張認証プロトコル（EAP）を定義します。リンク確立および認証段階、及び認証・プロトコル設定オプションは、ポイントツーポイントプロトコル（PPP）で定義されている[1]。"
    },
    {
      "indent": 0,
      "text": "1.1. Specification of Requirements",
      "section_title": true,
      "ja": "1.1. 要件の仕様"
    },
    {
      "indent": 3,
      "text": "In this document, several words are used to signify the requirements of the specification. These words are often capitalized. The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119 [6].",
      "ja": "このドキュメントでは、いくつかの単語は、仕様の要件を意味するために使用されています。これらの言葉は、多くの場合、資産計上されます。この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はありますRFC 2119に記載されるように解釈される[6]。"
    },
    {
      "indent": 0,
      "text": "1.2. Terminology",
      "section_title": true,
      "ja": "1.2. 用語"
    },
    {
      "indent": 3,
      "text": "This document frequently uses the following terms: authenticator The end of the link requiring the authentication. The authenticator specifies the authentication protocol to be used in the Configure-Request during Link Establishment phase.",
      "ja": "このドキュメントは頻繁に次の用語を使用しています：認証を必要とするリンクの終端をオーセンティケータ。オーセンティケータは、リンク確立フェーズ設定要求で使用する認証プロトコルを指定します。"
    },
    {
      "indent": 3,
      "text": "peer The other end of the point-to-point link; the end which is being authenticated by the authenticator.",
      "ja": "ポイントツーポイントリンクのもう一方の端をピア。オーセンティケータによって認証されて終わり。"
    },
    {
      "indent": 3,
      "text": "silently discard This means the implementation discards the packet without further processing. The implementation SHOULD provide the capability of logging the error, including the contents of the silently discarded packet, and SHOULD record the event in a statistics counter.",
      "ja": "黙ってこれは実装がさらに処理せずにパケットを破棄する意味捨てます。実装は静かに廃棄されたパケットの内容を含め、エラーをログに記録する機能を提供すべきである、と統計カウンターにイベントを記録する必要があります。"
    },
    {
      "indent": 3,
      "text": "displayable message This is interpreted to be a human readable string of characters, and MUST NOT affect operation of the protocol. The message encoding MUST follow the UTF-8 transformation format [5].",
      "ja": "表示メッセージは、この文字の人間が読める文字列であると解釈され、プロトコルの動作に影響してはいけません。メッセージのエンコーディングはUTF-8の変換フォーマットに従わなければならない[5]。"
    },
    {
      "indent": 0,
      "text": "2. PPP Extensible Authentication Protocol (EAP)",
      "section_title": true,
      "ja": "2. PPP拡張認証プロトコル（EAP）"
    },
    {
      "indent": 3,
      "text": "The PPP Extensible Authentication Protocol (EAP) is a general protocol for PPP authentication which supports multiple authentication mechanisms. EAP does not select a specific authentication mechanism at Link Control Phase, but rather postpones this until the Authentication Phase. This allows the authenticator to request more information before determining the specific authentication mechanism. This also permits the use of a \"back-end\" server which actually implements the various mechanisms while the PPP authenticator merely passes through the authentication exchange.",
      "ja": "PPP拡張認証プロトコル（EAP）は、複数の認証メカニズムをサポートするPPP認証のための一般的なプロトコルです。 EAPは、リンク制御フェーズで特定の認証メカニズムを選択するのではなく、認証フェーズまでこれを延期しません。これは、オーセンティケータは特定の認証メカニズムを決定する前に、より多くの情報を要求することができます。これはまた、PPP認証は、単に認証交換を通過する間に、実際に様々なメカニズムを実装し、「バックエンド」サーバーの使用を可能にします。"
    },
    {
      "indent": 3,
      "text": "1. After the Link Establishment phase is complete, the authenticator sends one or more Requests to authenticate the peer. The Request has a type field to indicate what is being requested. Examples of Request types include Identity, MD5-challenge, One-Time Passwords, Generic Token Card, etc. The MD5-challenge type corresponds closely to the CHAP authentication protocol. Typically, the authenticator will send an initial Identity Request followed by one or more Requests for authentication information. However, an initial Identity Request is not required, and MAY be bypassed in cases where the identity is presumed (leased lines, dedicated dial-ups, etc.).",
      "ja": "リンク確立フェーズが完了すると1は、オーセンティケータはピアを認証するために1つまたは複数の要求を送信します。要求は、要求されているものを示すためのタイプフィールドがあります。リクエストタイプの例は、MD5チャレンジタイプはCHAP認証プロトコルに密接に対応アイデンティティ、MD5チャレンジ、ワンタイムパスワード、ジェネリックトークンカードなどが含まれます。一般的に、オーセンティケータは、認証情報の1つまたは複数の要求に続いて、最初のアイデンティティ・リクエストを送信します。しかし、初期アイデンティティ要求が必要とされない、そしてアイデンティティが推定される場合には（専用回線、専用ダイヤルアップなど）をバイパスすることができます。"
    },
    {
      "indent": 3,
      "text": "2. The peer sends a Response packet in reply to each Request. As with the Request packet, the Response packet contains a type field which corresponds to the type field of the Request.",
      "ja": "2.ピアは、各要求に応答して応答パケットを送信します。リクエストパケットと同様に、応答パケットは、要求のタイプフィールドに対応するタイプフィールドが含まれています。"
    },
    {
      "indent": 3,
      "text": "3. The authenticator ends the authentication phase with a Success or Failure packet.",
      "ja": "3.オーセンティケータは、成功または失敗パケットと認証フェーズを終了します。"
    },
    {
      "indent": 0,
      "text": "Advantages",
      "ja": "メリット"
    },
    {
      "indent": 3,
      "text": "The EAP protocol can support multiple authentication mechanisms without having to pre-negotiate a particular one during LCP Phase.",
      "ja": "EAPプロトコルは、LCPフェーズ中に予め交渉する特定の1つに持つことなく、複数の認証メカニズムをサポートすることができます。"
    },
    {
      "indent": 3,
      "text": "Certain devices (e.g. a NAS) do not necessarily have to understand each request type and may be able to simply act as a passthrough agent for a \"back-end\" server on a host. The device only need look for the success/failure code to terminate the authentication phase.",
      "ja": "特定のデバイス（例えばNAS）は、必ずしも各要求タイプを理解する必要はありませんし、単にホスト上の「バックエンド」サーバ用のパススルー剤として作用することができるかもしれません。デバイスが唯一の認証フェーズを終了するための成功/失敗コードを探してください。"
    },
    {
      "indent": 0,
      "text": "Disadvantages",
      "ja": "デメリット"
    },
    {
      "indent": 3,
      "text": "EAP does require the addition of a new authentication type to LCP and thus PPP implementations will need to be modified to use it. It also strays from the previous PPP authentication model of negotiating a specific authentication mechanism during LCP.",
      "ja": "EAPは、それを使用するように変更する必要がありますので、LCP及びPPPの実装をする新しい認証タイプを追加する必要がありません。また、LCP中に特定の認証メカニズムを交渉の前のPPP認証モデルから外れます。"
    },
    {
      "indent": 0,
      "text": "2.1. Configuration Option Format",
      "section_title": true,
      "ja": "2.1. 構成オプションのフォーマット"
    },
    {
      "indent": 3,
      "text": "A summary of the Authentication-Protocol Configuration Option format to negotiate the EAP Authentication Protocol is shown below. The fields are transmitted from left to right.",
      "ja": "EAP認証プロトコルを交渉するために認証、プロトコル設定オプションフォーマットの概要は以下に示されています。フィールドは左から右に送信されます。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Type      |    Length     |     Authentication-Protocol   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Type",
      "ja": "タイプ"
    },
    {
      "indent": 6,
      "text": "3",
      "ja": "３"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "4",
      "ja": "４"
    },
    {
      "indent": 3,
      "text": "Authentication-Protocol",
      "ja": "認証プロトコル"
    },
    {
      "indent": 6,
      "text": "C227 (Hex) for PPP Extensible Authentication Protocol (EAP)",
      "ja": "PPP拡張認証プロトコル（EAP）のためのC227（16進数）"
    },
    {
      "indent": 0,
      "text": "2.2. Packet Format",
      "section_title": true,
      "ja": "2.2. パケットフォーマット"
    },
    {
      "indent": 3,
      "text": "Exactly one PPP EAP packet is encapsulated in the Information field of a PPP Data Link Layer frame where the protocol field indicates type hex C227 (PPP EAP). A summary of the EAP packet format is shown below. The fields are transmitted from left to right.",
      "ja": "正確に一つのPPP EAPパケットは、プロトコルフィールドは、六角C227（PPP EAP）を入力示しPPPデータリンク層フレームの情報フィールドにカプセル化されます。 EAPパケットフォーマットの概要は以下に示されています。フィールドは左から右に送信されます。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Code      |  Identifier   |            Length             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|    Data ...\n+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Code",
      "ja": "コード"
    },
    {
      "indent": 6,
      "text": "The Code field is one octet and identifies the type of EAP packet. EAP Codes are assigned as follows:",
      "ja": "コードフィールドは1つのオクテットで、EAPパケットの種類を識別します。次のようにEAPコードが割り当てられています。"
    },
    {
      "indent": 9,
      "text": "1 Request 2 Response 3 Success 4 Failure",
      "ja": "1つのリクエスト2応答3つの成功4失敗"
    },
    {
      "indent": 3,
      "text": "Identifier",
      "ja": "識別"
    },
    {
      "indent": 10,
      "text": "The Identifier field is one octet and aids in matching\nresponses with requests.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 10,
      "text": "The Length field is two octets and indicates the length of the\nEAP packet including the Code, Identifier, Length and Data\nfields.  Octets outside the range of the Length field should\nbe treated as Data Link Layer padding and should be ignored on\nreception.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Data",
      "ja": "データ"
    },
    {
      "indent": 10,
      "text": "The Data field is zero or more octets.  The format of the Data\nfield is determined by the Code field.",
      "raw": true
    },
    {
      "indent": 0,
      "text": "2.2.1. Request and Response",
      "section_title": true,
      "ja": "2.2.1. リクエストとレスポンス"
    },
    {
      "indent": 3,
      "text": "Description",
      "ja": "説明"
    },
    {
      "indent": 6,
      "text": "The Request packet is sent by the authenticator to the peer. Each Request has a type field which serves to indicate what is being requested. The authenticator MUST transmit an EAP packet with the Code field set to 1 (Request). Additional Request packets MUST be sent until a valid Response packet is received, or an optional retry counter expires. Retransmitted Requests MUST be sent with the same Identifier value in order to distinguish them from new Requests. The contents of the data field is dependent on the Request type. The peer MUST send a Response packet in reply to a Request packet. Responses MUST only be sent in reply to a received Request and never retransmitted on a timer. The Identifier field of the Response MUST match that of the Request.",
      "ja": "Requestパケットをピアに認証者によって送信されます。各要求は要求されているかを示すのに役立つ種類のフィールドがあります。オーセンティケータは1（要求）にセットコードフィールドにEAPパケットを送信しなければなりません。有効な応答パケットが受信されるまで、追加要求パケットを送らなければなりません、またはオプションの再試行カウンタが満了します。再送された要求は、新しい要求と区別するために、同じ識別子の値を送らなければなりません。データフィールドの内容は、要求のタイプに依存しています。ピアはRequestパケットに応答して応答パケットを送らなければなりません。応答が唯一の受信要求に応答して送信され、タイマーで再送信しませんしなければなりません。レスポンスの識別子フィールドは、リクエストのものと一致しなければなりません。"
    },
    {
      "indent": 9,
      "text": "Implementation Note: Because the authentication process will often involve user input, some care must be taken when deciding upon retransmission strategies and authentication timeouts. It is suggested a retransmission timer of 6 seconds with a maximum of 10 retransmissions be used as default. One may wish to make these timeouts longer in certain cases (e.g. where Token Cards are involved). Additionally, the peer must be prepared to silently discard received retransmissions while waiting for user input.",
      "ja": "実装上の注意：認証プロセスは、多くの場合、ユーザー入力を必要とするだろうので、再送戦略と認証タイムアウト時に決定するときに、いくつかの注意が必要です。これは、デフォルトとして使用する10回の再送信の最大6秒の再送タイマを示唆しています。一つは、特定の場合には長いこれらのタイムアウトをしたいことがあり（例えば、トークン・カードが含まれている場合）。また、ピアは、ユーザ入力を待っている間静かに受信された再送を破棄するように準備されなければなりません。"
    },
    {
      "indent": 3,
      "text": "A summary of the Request and Response packet format is shown below. The fields are transmitted from left to right.",
      "ja": "要求と応答のパケットフォーマットの概要は以下の通りです。フィールドは左から右に送信されます。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Code      |  Identifier   |            Length             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Type      |  Type-Data ...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Code",
      "ja": "コード"
    },
    {
      "indent": 6,
      "text": "1 for Request;",
      "ja": "リクエストのための1。"
    },
    {
      "indent": 6,
      "text": "2 for Response.",
      "ja": "レスポンスのため2。"
    },
    {
      "indent": 3,
      "text": "Identifier",
      "ja": "識別"
    },
    {
      "indent": 6,
      "text": "The Identifier field is one octet. The Identifier field MUST be the same if a Request packet is retransmitted due to a timeout while waiting for a Response. Any new (non-retransmission) Requests MUST modify the Identifier field. If a peer recieves a duplicate Request for which it has already sent a Response, it MUST resend it's Response. If a peer receives a duplicate Request before it has sent a Response to the initial Request (i.e. it's waiting for user input), it MUST silently discard the duplicate Request.",
      "ja": "識別子フィールドは1つのオクテットです。応答を待っている間に識別子フィールドがタイムアウトのためRequestパケットを再送した場合と同じでなければなりません。すべての新しい（非再）要求は、識別子フィールドを変更する必要があります。ピアは、それがすでにレスポンスを送信しているため、重複要求をrecieves場合、それはレスポンスの再送信する必要があります。ピアは、それが（すなわち、それはユーザーの入力を待っています）最初の要求に対する応答を送信した前に、重複した要求を受信した場合、それは静かに重複要求を捨てなければなりません。"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "The Length field is two octets and indicates the length of the EAP packet including the Code, Identifier, Length, Type, and Type-Data fields. Octets outside the range of the Length field should be treated as Data Link Layer padding and should be ignored on reception.",
      "ja": "長さフィールドは、2つのオクテットであり、コード、識別子、長さ、タイプ、およびタイプデータフィールドを含むEAPパケットの長さを示します。長さフィールドの範囲外のオクテットは、データリンク層のパディングとして扱われるべきで、レセプションで無視しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Type",
      "ja": "タイプ"
    },
    {
      "indent": 6,
      "text": "The Type field is one octet. This field indicates the Type of Request or Response. Only one Type MUST be specified per EAP Request or Response. Normally, the Type field of the Response will be the same as the Type of the Request. However, there is also a Nak Response Type for indicating that a Request type is unacceptable to the peer. When sending a Nak in response to a Request, the peer MAY indicate an alternative desired authentication Type which it supports. An initial specification of Types follows in a later section of this document.",
      "ja": "Typeフィールドは1つのオクテットです。このフィールドは、要求または応答のタイプを示します。 1種類のみのEAP要求または応答ごとに指定されなければなりません。通常、レスポンスのTypeフィールドは、要求のタイプと同じになります。しかしながら、要求タイプがピアに受け入れられないことを示すNAK応答の種類があります。リクエストに応じてNAKを送信する場合、ピアは、それがサポートする認証タイプ必要な代替がある可能性があります。タイプの初期仕様は、このドキュメントの後のセクションで、次の。"
    },
    {
      "indent": 3,
      "text": "Type-Data",
      "ja": "タイプデータ"
    },
    {
      "indent": 6,
      "text": "The Type-Data field varies with the Type of Request and the associated Response.",
      "ja": "タイプのデータフィールドには、要求と関連付けられている応答のタイプによって異なります。"
    },
    {
      "indent": 0,
      "text": "2.2.2. Success and Failure",
      "section_title": true,
      "ja": "2.2.2. 成功と失敗"
    },
    {
      "indent": 3,
      "text": "Description",
      "ja": "説明"
    },
    {
      "indent": 6,
      "text": "The Success packet is sent by the authenticator to the peer to acknowledge successful authentication. The authenticator MUST transmit an EAP packet with the Code field set to 3 (Success).",
      "ja": "Successパケットは、成功した認証を確認するためにピアに認証者によって送信されます。オーセンティケータは、3〜コードフィールドセット（成功）でEAPパケットを送信しなければなりません。"
    },
    {
      "indent": 6,
      "text": "If the authenticator cannot authenticate the peer (unacceptable Responses to one or more Requests) then the implementation MUST transmit an EAP packet with the Code field set to 4 (Failure). An authenticator MAY wish to issue multiple Requests before sending a Failure response in order to allow for human typing mistakes.",
      "ja": "オーセンティケータがピア（1つまたは複数の要求に許容できないレスポンス）を認証できない場合、実装は、4（失敗）に設定するコードフィールドとEAPパケットを送信しなければなりません。オーセンティケータは、人間のタイプミスを可能にするために、失敗応答を送信する前に複数の要求を発行することを望むかもしれません。"
    },
    {
      "indent": 9,
      "text": "Implementation Note: Because the Success and Failure packets are not acknowledged, they may be potentially lost. A peer MUST allow for this circumstance. The peer can use a Network Protocol packet as an alternative indication of Success. Likewise, the receipt of a LCP Terminate-Request can be taken as a Failure.",
      "ja": "実装上の注意：成功と失敗のパケットが確認されていないので、彼らは潜在的に失われることがあります。ピアは、このような状況を考慮しなければなりません。ピアは成功の代替指標としてネットワークプロトコルのパケットを使用することができます。同様に、LCP終了要求の受信は失敗とみなすことができます。"
    },
    {
      "indent": 3,
      "text": "A summary of the Success and Failure packet format is shown below. The fields are transmitted from left to right.",
      "ja": "成功と失敗のパケットフォーマットの概要は以下の通りです。フィールドは左から右に送信されます。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Code      |  Identifier   |            Length             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Code",
      "ja": "コード"
    },
    {
      "indent": 6,
      "text": "3 for Success;",
      "ja": "成功のための3。"
    },
    {
      "indent": 6,
      "text": "4 for Failure.",
      "ja": "故障のため4。"
    },
    {
      "indent": 3,
      "text": "Identifier",
      "ja": "識別"
    },
    {
      "indent": 6,
      "text": "The Identifier field is one octet and aids in matching replies to Responses. The Identifier field MUST match the Indentifier field of the Response packet that it is sent in response to.",
      "ja": "識別子フィールドは、応答に応答をマッチングで1オクテットおよびAIDSです。識別子フィールドは、それがに応答して送信された応答パケットのIndentifierフィールドと一致する必要があります。"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "4",
      "ja": "４"
    },
    {
      "indent": 0,
      "text": "3. Initial EAP Request/Response Types",
      "section_title": true,
      "ja": "3.最初のEAP要求/応答タイプ"
    },
    {
      "indent": 3,
      "text": "This section defines the initial set of EAP Types used in Request/Response exchanges. More Types may be defined in follow-on documents. The Type field is one octet and identifies the structure of an EAP Request or Response packet. The first 3 Types are considered special case Types. The remaining Types define authentication exchanges. The Nak Type is valid only for Response packets, it MUST NOT be sent in a Request. The Nak Type MUST only be sent in repsonse to a Request which uses an authentication Type code. All EAP implementatins MUST support Types 1-4. These Types, as well as types 5 and 6, are defined in this document. Follow-on RFCs will define additional EAP Types.",
      "ja": "このセクションでは、要求/応答の交換に使用されるEAPタイプの初期セットを定義します。より多くの種類は、後続の文書で定義されていてもよいです。タイプフィールドは1つのオクテットであり、EAPリクエスト又は応答パケットの構造を識別する。最初の3つのタイプは、特殊なケースの種類と考えられています。残りのタイプは、認証交換を定義します。 Nakのタイプは、それが要求に送ってはいけません、唯一の応答パケットのために有効です。 Nakのタイプのみ認証タイプのコードを使用して要求にrepsonseに送らなければなりません。すべてのEAP implementatinsは、タイプ1〜4をサポートしなければなりません。これらのタイプだけでなく、タイプ5と6は、この文書で定義されています。フォローのRFCは、追加のEAPタイプを定義します。"
    },
    {
      "indent": 6,
      "text": "1 Identity 2 Notification 3 Nak (Response only) 4 MD5-Challenge 5 One-Time Password (OTP) (RFC 1938) 6 Generic Token Card",
      "ja": "1人のアイデンティティー2の通知3ナック（応答のみ）4 MD5チャレンジ5ワンタイムパスワード（OTP）（RFC 1938）6一般的なトークンカード"
    },
    {
      "indent": 0,
      "text": "3.1. Identity",
      "section_title": true,
      "ja": "3.1. 身元"
    },
    {
      "indent": 3,
      "text": "Description",
      "ja": "説明"
    },
    {
      "indent": 6,
      "text": "The Identity Type is used to query the identity of the peer. Generally, the authenticator will issue this as the initial Request. An optional displayable message MAY be included to prompt the peer in the case where there expectation of interaction with a user. A Response MUST be sent to this Request with a Type of 1 (Identity).",
      "ja": "アイデンティティのタイプは、ピアの識別情報を照会するために使用されます。一般的に、オーセンティケータは、最初の要求としてこれを発行します。オプションの表示メッセージは、ユーザとの相互作用が期待場合にピアを促すために含まれるかもしれません。レスポンスは、1（アイデンティティ）のタイプと、このリクエストに送らなければなりません。"
    },
    {
      "indent": 9,
      "text": "Implementation Note: The peer MAY obtain the Identity via user input. It is suggested that the authenticator retry the Indentity Request in the case of an invalid Identity or authentication failure to allow for potential typos on the part of the user. It is suggested that the Identity Request be retried a minimum of 3 times before terminating the authentication phase with a Failure reply. The Notification Request MAY be used to indicate an invalid authentication attempt prior to transmitting a new Identity Request (optionally, the failure MAY be indicated within the message of the new Identity Request itself).",
      "ja": "実装上の注意：ピアは、ユーザ入力を介してアイデンティティを得ることができます。オーセンティケータは、ユーザ側の潜在的なタイプミスを許容するために、無効なアイデンティティや認証失敗の場合にはIndentity要求を再試行することが示唆されます。アイデンティティ・リクエストが失敗リプライで認証フェーズを終了する前に3回の最小値を再試行することを示唆しています。通知要求は、（必要に応じて、障害が新たな識別要求自体のメッセージ内で示すことができる）、新たな識別要求を送信する前に無効な認証の試みを示すために使用され得ます。"
    },
    {
      "indent": 3,
      "text": "Type",
      "ja": "タイプ"
    },
    {
      "indent": 6,
      "text": "1",
      "ja": "１"
    },
    {
      "indent": 3,
      "text": "Type-Data",
      "ja": "タイプデータ"
    },
    {
      "indent": 6,
      "text": "This field MAY contain a displayable message in the Request. The Response uses this field to return the Identity. If the Identity is unknown, this field should be zero bytes in length. The field MUST NOT be null terminated. The length of this field is derived from the Length field of the Request/Response packet and hence a null is not required.",
      "ja": "このフィールドは、リクエストに表示可能メッセージを含むかもしれません。レスポンスは、アイデンティティを返すために、このフィールドを使用しています。アイデンティティが不明な場合は、このフィールドは、長さがゼロバイトである必要があります。フィールドがnullで終了してはなりません。このフィールドの長さは、要求/応答パケットのLengthフィールドから導出され、したがって、ヌルが必要とされません。"
    },
    {
      "indent": 0,
      "text": "3.2. Notification",
      "section_title": true,
      "ja": "3.2. 通知"
    },
    {
      "indent": 3,
      "text": "Description",
      "ja": "説明"
    },
    {
      "indent": 6,
      "text": "The Notification Type is optionally used to convey a displayable message from the authenticator to the peer. The peer SHOULD display this message to the user or log it if it cannot be displayed. It is intended to provide an acknowledged notification of some imperative nature. Examples include a password with an expiration time that is about to expire, an OTP sequence integer which is nearing 0, an authentication failure warning, etc. In most circumstances, notification should not be required.",
      "ja": "通知タイプは、任意のピアにオーセンティケータから表示メッセージを伝えるために使用されます。ピアは、ユーザにこのメッセージを表示するか、表示することができない場合、それを記録すべきです。いくつかの不可欠な性質の定評の通知を提供することを意図しています。例としては、ほとんどの状況では0、認証失敗警告などに近づいているOTPシーケンス整数は、通知が必要とされるべきではない期限切れしようとしている有効期限とパスワードが含まれます。"
    },
    {
      "indent": 3,
      "text": "Type",
      "ja": "タイプ"
    },
    {
      "indent": 6,
      "text": "2",
      "ja": "２"
    },
    {
      "indent": 3,
      "text": "Type-Data",
      "ja": "タイプデータ"
    },
    {
      "indent": 6,
      "text": "The Type-Data field in the Request contains a displayable message greater than zero octets in length. The length of the message is determined by Length field of the Request packet. The message MUST not be null terminated. A Response MUST be sent in reply to the Request with a Type field of 2 (Notification). The Type-Data field of the Response is zero octets in length. The Response should be sent immediately (independent of how the message is displayed or logged).",
      "ja": "要求にタイプデータフィールドの長さはゼロオクテットより大きい表示メッセージを含みます。メッセージの長さは、リクエストパケットのLengthフィールドによって決定されます。メッセージはnullで終了してはいけません。応答2（通知）のタイプフィールドと要求に対する応答で送信されなければなりません。応答のタイプ、データフィールドの長さはゼロオクテットです。レスポンスは（メッセージが表示されたり、ログに記録されるかとは無関係に）すぐに送信されなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.3. Nak",
      "section_title": true,
      "ja": "3.3. 坊や"
    },
    {
      "indent": 3,
      "text": "Description",
      "ja": "説明"
    },
    {
      "indent": 6,
      "text": "The Nak Type is valid only in Response messages. It is sent in reply to a Request where the desired authentication Type is unacceptable. Authentication Types are numbered 4 and above. The Response contains the authentication Type desired by the peer.",
      "ja": "Nakタイプのみ応答メッセージで有効です。これは、所望の認証タイプが受け入れられない要求に対する応答で送信されます。認証タイプは4と上記の番号が付けられています。応答は、ピアが希望する認証の種類が含まれています。"
    },
    {
      "indent": 3,
      "text": "Type",
      "ja": "タイプ"
    },
    {
      "indent": 6,
      "text": "3",
      "ja": "３"
    },
    {
      "indent": 3,
      "text": "Type-Data",
      "ja": "タイプデータ"
    },
    {
      "indent": 6,
      "text": "This field MUST contain a single octet indicating the desired authentication type.",
      "ja": "このフィールドは、所望の認証タイプを示す単一のオクテットを含まなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.4. MD5-Challenge",
      "section_title": true,
      "ja": "3.4.  MD5チャレンジ"
    },
    {
      "indent": 3,
      "text": "Description",
      "ja": "説明"
    },
    {
      "indent": 6,
      "text": "The MD5-Challenge Type is analagous to the PPP CHAP protocol [3] (with MD5 as the specified algorithm). The PPP Challenge Handshake Authentication Protocol RFC [3] should be referred to for further implementation specifics. The Request contains a \"challenge\" message to the peer. A Repsonse MUST be sent in reply to the Request. The Response MAY be either of Type 4 (MD5- Challenge) or Type 3 (Nak). The Nak reply indicates the peer's desired authentication mechanism Type. All EAP implementations MUST support the MD5-Challenge mechanism.",
      "ja": "MD5チャレンジタイプはCHAP PPPプロトコルにanalagous [3]（指定されたアルゴリズムとしてMD5を使用）。 PPPチャレンジハンドシェイク認証プロトコルRFC [3]さらに、実装の仕様のために参照されるべきです。リクエストは、ピアへの「挑戦」というメッセージが含まれています。 Repsonseは、要求に対する応答を送らなければなりません。応答タイプ4（MD5-チャレンジ）またはタイプ3（NAK）のいずれであってもよいです。 Nak応答はピアの必要な認証メカニズムのタイプを示します。すべてのEAP実装はMD5チャレンジ・メカニズムをサポートしなければなりません。"
    },
    {
      "indent": 3,
      "text": "Type",
      "ja": "タイプ"
    },
    {
      "indent": 6,
      "text": "4",
      "ja": "４"
    },
    {
      "indent": 3,
      "text": "Type-Data",
      "ja": "タイプデータ"
    },
    {
      "indent": 6,
      "text": "The contents of the Type-Data field is summarized below. For reference on the use of this fields see the PPP Challenge Handshake Authentication Protocol [3].",
      "ja": "タイプデータフィールドの内容は、以下に要約されます。このフィールドの使用に関する参照用PPPチャレンジハンドシェイク認証プロトコル[3]を参照。"
    },
    {
      "indent": 6,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Value-Size   |  Value ...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Name ...\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 0,
      "text": "3.5. One-Time Password (OTP)",
      "section_title": true,
      "ja": "3.5. ワンタイムパスワード（OTP）"
    },
    {
      "indent": 3,
      "text": "Description",
      "ja": "説明"
    },
    {
      "indent": 6,
      "text": "The One-Time Password system is defined in \"A One-Time Password System\" [4]. The Request contains a displayable message containing an OTP challenge. A Repsonse MUST be sent in reply to the Request. The Response MUST be of Type 5 (OTP) or Type 3 (Nak). The Nak reply indicates the peer's desired authentication mechanism Type.",
      "ja": "ワンタイムパスワードシステムは、「ワンタイムパスワードシステム」に定義されている[4]。リクエストは、OTPチャレンジを含む表示可能メッセージが含まれています。 Repsonseは、要求に対する応答を送らなければなりません。応答は、タイプ5（OTP）またはタイプ3（NAK）でなければなりません。 Nak応答はピアの必要な認証メカニズムのタイプを示します。"
    },
    {
      "indent": 3,
      "text": "Type",
      "ja": "タイプ"
    },
    {
      "indent": 6,
      "text": "5",
      "ja": "５"
    },
    {
      "indent": 3,
      "text": "Type-Data",
      "ja": "タイプデータ"
    },
    {
      "indent": 6,
      "text": "The Type-Data field contains the OTP \"challenge\" as a displayable message in the Request. In the Response, this field is used for the 6 words from the OTP dictionary [4]. The messages MUST not be null terminated. The length of the field is derived from the Length field of the Request/Reply packet.",
      "ja": "タイプのデータフィールドには、要求で表示可能メッセージとしてOTP「挑戦」が含まれています。これに応答して、このフィールドはOTP辞書[4]から6つのワードのために使用されます。メッセージはnullで終了してはいけません。フィールドの長さは、要求/応答パケットの長さフィールドから導出されます。"
    },
    {
      "indent": 0,
      "text": "3.6. Generic Token Card",
      "section_title": true,
      "ja": "3.6. 一般的なトークンカード"
    },
    {
      "indent": 3,
      "text": "Description",
      "ja": "説明"
    },
    {
      "indent": 6,
      "text": "The Generic Token Card Type is defined for use with various Token Card implementations which require user input. The Request contains an ASCII text message and the Reply contains the Token Card information necessary for authentication. Typically, this would be information read by a user from the Token card device and entered as ASCII text.",
      "ja": "ジェネリックトークンカードの種類は、ユーザーの入力を必要とする様々なトークンカードの実装で使用するために定義されています。リクエストは、ASCIIテキスト・メッセージが含まれていると返信は、認証のために必要なトークンカード情報が含まれています。通常、これはトークンカードデバイスからユーザーによって読み取られ、ASCIIテキストとして入力した情報になります。"
    },
    {
      "indent": 3,
      "text": "Type",
      "ja": "タイプ"
    },
    {
      "indent": 6,
      "text": "6",
      "ja": "６"
    },
    {
      "indent": 3,
      "text": "Type-Data",
      "ja": "タイプデータ"
    },
    {
      "indent": 6,
      "text": "The Type-Data field in the Request contains a displayable message greater than zero octets in length. The length of the message is determined by Length field of the Request packet. The message MUST not be null terminated. A Response MUST be sent in reply to the Request with a Type field of 6 (Generic Token Card). The Response contains data from the Token Card required for authentication. The length is of the data is determined by the Length field of the Response packet.",
      "ja": "要求にタイプデータフィールドの長さはゼロオクテットより大きい表示メッセージを含みます。メッセージの長さは、リクエストパケットのLengthフィールドによって決定されます。メッセージはnullで終了してはいけません。レスポンスは、6（ジェネリックトークンカード）のTypeフィールドで要求に応答して送らなければなりません。レスポンスは、トークンカードからのデータは、認証に必要な含まれています。データ応答パケットのLengthフィールドによって決定されるの長さです。"
    },
    {
      "indent": 0,
      "text": "Security Considerations",
      "ja": "セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "Security issues are the primary topic of this RFC.",
      "ja": "セキュリティの問題は、このRFCの主なトピックです。"
    },
    {
      "indent": 3,
      "text": "The interaction of the authentication protocols within PPP are highly implementation dependent.",
      "ja": "PPP内の認証プロトコルの相互作用は非常に実装に依存しています。"
    },
    {
      "indent": 3,
      "text": "For example, upon failure of authentication, some implementations do not terminate the link. Instead, the implementation limits the kind of traffic in the Network-Layer Protocols to a filtered subset, which in turn allows the user opportunity to update secrets or send mail to the network administrator indicating a problem.",
      "ja": "例えば、認証が失敗したときに、いくつかの実装は、リンクを終了しません。その代わり、実装が順番に秘密を更新したり、問題を示すネットワーク管理者にメールを送信するユーザーの機会を可能にするフィルタサブセットへのネットワークレイヤプロトコルにおけるトラフィックの種類を制限します。"
    },
    {
      "indent": 3,
      "text": "There is no provision for retries of failed authentication. However, the LCP state machine can renegotiate the authentication protocol at any time, thus allowing a new attempt. It is recommended that any counters used for authentication failure not be reset until after successful authentication, or subsequent termination of the failed link.",
      "ja": "失敗した認証の再試行のための規定はありません。しかし、LCPのステートマシンは、このように新しい試みを許可する、任意の時点で認証プロトコルを再交渉することができます。認証失敗のために使用されるすべてのカウンタが認証に成功、または失敗したリンクのその後の終了後までリセットされないことをお勧めします。"
    },
    {
      "indent": 3,
      "text": "There is no requirement that authentication be full duplex or that the same protocol be used in both directions. It is perfectly acceptable for different protocols to be used in each direction. This will, of course, depend on the specific protocols negotiated.",
      "ja": "認証が全二重または同一のプロトコルが両方向で使用することである必要はありません。異なるプロトコルは、各方向で使用することが完全に許容可能です。これは、当然のことながら、交渉し、特定のプロトコルに依存します。"
    },
    {
      "indent": 3,
      "text": "In practice, within or associated with each PPP server, it is not anticipated that a particular named user would be authenticated by multiple methods. This would make the user vulnerable to attacks which negotiate the least secure method from among a set (such as PAP rather than EAP). Instead, for each named user there should be an indication of exactly one method used to authenticate that user name. If a user needs to make use of different authentication methods under different circumstances, then distinct identities SHOULD be employed, each of which identifies exactly one authentication method.",
      "ja": "実際には、内部又は各PPPサーバに関連付けられ、特定の名前のユーザーが複数の方法で認証されることが予想されません。これは、（むしろEAPよりPAPなどの）セットの中から最も安全な方法を交渉する攻撃に対してユーザが脆弱になるだろう。代わりに、それぞれの名前のユーザーのために、そのユーザー名を認証するために使用される、正確に1つの方法の兆候があるはずです。ユーザは、異なる状況下で異なる認証方法を利用する必要がある場合、別個のアイデンティティは、1つの認証方式を識別するそれぞれが、使用されるべきです。"
    },
    {
      "indent": 0,
      "text": "References",
      "ja": "リファレンス"
    },
    {
      "indent": 3,
      "text": "[1] Simpson, W., \"The Point-to-Point Protocol (PPP)\", STD 51, RFC 1661, July 1994.",
      "ja": "[1]シンプソン、W.、 \"ポイントツーポイントプロトコル（PPP）\"、STD 51、RFC 1661、1994年7月。"
    },
    {
      "indent": 3,
      "text": "[2] Reynolds, J. and J. Postel, \"Assigned Numbers\", STD 2, RFC 1700, October 1994.",
      "ja": "[2]レイノルズ、J.およびJ.ポステル、 \"割り当て番号\"、STD 2、RFC 1700、1994年10月。"
    },
    {
      "indent": 3,
      "text": "[3] Simpson, W., \"PPP Challenge Handshake Authentication Protocol (CHAP)\", RFC 1994, August 1996.",
      "ja": "[3]シンプソン、W.、 \"PPPチャレンジハンドシェイク認証プロトコル（CHAP）\"、RFC 1994、1996年8月。"
    },
    {
      "indent": 3,
      "text": "[4] Haller, N. and C. Metz, \"A One-Time Password System\", RFC 1938, May 1996.",
      "ja": "[4]ハラー、N.およびC.メッツ、 \"ワンタイムパスワードシステム\"、RFC 1938、1996年5月。"
    },
    {
      "indent": 3,
      "text": "[5] Yergeau, F., \"UTF-8, a transformation format of Unicode and ISO 10646\", RFC 2044, October 1996.",
      "ja": "[5] Yergeau、F.、 \"UTF-8、UnicodeとISO 10646の変換フォーマット\"、RFC 2044、1996年10月。"
    },
    {
      "indent": 3,
      "text": "[6] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", RFC 2119, March 1997.",
      "ja": "[6]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、RFC 2119、1997年3月を。"
    },
    {
      "indent": 0,
      "text": "Acknowledgments",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "This protocol derives much of its inspiration from Dave Carrel's AHA draft as well as the PPP CHAP protocol [3]. Bill Simpson provided much of the boilerplate used throughout this document. Al Rubens (Merit) also provided valuable feedback.",
      "ja": "このプロトコルは、デイブ・カレルのAHAのドラフトからのインスピレーションの多くと同様にPPP CHAPプロトコルを導出[3]。ビル・シンプソンは、この文書全体で使用される定型の多くを提供します。アルルーベンス（メリット）も、貴重なフィードバックを提供します。"
    },
    {
      "indent": 0,
      "text": "Chair's Address",
      "ja": "議長の住所"
    },
    {
      "indent": 3,
      "text": "The working group can be contacted via the current chair:",
      "ja": "現在のいすを通してワーキンググループに連絡することができます。"
    },
    {
      "indent": 3,
      "text": "Karl F. Fox Ascend Communications, Inc. 655 Metro Place South, Suite 370 Dublin, Ohio 43017",
      "ja": "カールF.フォックスアセンドコミュニケーションズ株式会社655メトロ・プレイス南、スイート370ダブリン、オハイオ州43017"
    },
    {
      "indent": 3,
      "text": "EMail: karl@ascend.com Phone: +1 614 760 4041 Fax: +1 614 760 4050",
      "ja": "メールアドレス：karl@ascend.com電話：+1 614 760 4041ファックス：+1 614 760 4050"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Larry J. Blunk Merit Network, Inc. 4251 Plymouth Rd., Suite C Ann Arbor, MI 48105",
      "ja": "ラリーJ.ブルンクのメリットネットワーク株式会社4251プリマスRdを。、スイートCアナーバー、MI 48105"
    },
    {
      "indent": 3,
      "text": "EMail: ljb@merit.edu Phone: 734-763-6056 FAX: 734-647-3185",
      "ja": "メールアドレス：ljb@merit.edu電話：734-763-6056 FAX：734-647-3185"
    },
    {
      "indent": 3,
      "text": "John R. Vollbrecht Merit Network, Inc. 4251 Plymouth Rd., Suite C Ann Arbor, MI 48105",
      "ja": "ジョンR. Vollbrechtメリットネットワーク株式会社4251プリマスRdを。、スイートCアナーバー、MI 48105"
    },
    {
      "indent": 3,
      "text": "EMail: jrv@merit.edu Phone: +1-313-763-1206 FAX: +1-734-647-3185",
      "ja": "メールアドレス：jrv@merit.edu電話：+ 1-313-763-1206ファックス：+ 1-734-647-3185"
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (1998). All Rights Reserved.",
      "ja": "著作権（C）インターネット協会（1998）。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the Internet Society or other Internet organizations, except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed, or as required to translate it into languages other than English.",
      "ja": "この文書とその翻訳は、コピーして他の人に提供し、それ以外についてはコメントまたは派生物は、いかなる種類の制限もなく、全体的にまたは部分的に、準備コピーし、公表して配布することができることを説明したり、その実装を支援することができます、上記の著作権表示とこの段落は、すべてのそのようなコピーや派生物に含まれていることを条件とします。しかし、この文書自体は著作権のための手順はで定義されている場合には、インターネット標準を開発するために必要なものを除き、インターネットソサエティもしくは他のインターネット関連団体に著作権情報や参照を取り除くなど、どのような方法で変更されないかもしれませんインターネット標準化プロセスが続く、または英語以外の言語に翻訳するために、必要に応じなければなりません。"
    },
    {
      "indent": 3,
      "text": "The limited permissions granted above are perpetual and will not be revoked by the Internet Society or its successors or assigns.",
      "ja": "上記の制限は永久で、インターネット学会やその後継者や譲渡者によって取り消されることはありません。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein is provided on an \"AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書とここに含まれている情報は、基礎とインターネットソサエティおよびインターネットエンジニアリングタスクフォースはすべての保証を否認し、明示または黙示、その情報の利用がない任意の保証を含むがこれらに限定されない「として、」上に設けられています特定の目的への権利または商品性または適合性の黙示の保証を侵害します。"
    }
  ]
}