{
  "title": {
    "text": "RFC 2510 - Internet X.509 Public Key Infrastructure Certificate Management Protocols",
    "ja": "RFC 2510 - インターネットX.509公開鍵基盤証明書管理プロトコル"
  },
  "number": 2510,
  "created_at": "2019-10-21 22:25:56.598176+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                            C. Adams\nRequest for Comments: 2510                           Entrust Technologies\nCategory: Standards Track                                      S. Farrell\n                                                                      SSE\n                                                               March 1999",
      "raw": true
    },
    {
      "indent": 16,
      "text": "Internet X.509 Public Key Infrastructure\n    Certificate Management Protocols",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "このメモの位置付け"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "ja": "この文書は、インターネットコミュニティのためのインターネット標準トラックプロトコルを指定し、改善のための議論と提案を要求します。このプロトコルの標準化状態と状態への「インターネット公式プロトコル標準」（STD 1）の最新版を参照してください。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (1999). All Rights Reserved.",
      "ja": "著作権（C）インターネット協会（1999）。全著作権所有。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document describes the Internet X.509 Public Key Infrastructure (PKI) Certificate Management Protocols. Protocol messages are defined for all relevant aspects of certificate creation and management. Note that \"certificate\" in this document refers to an X.509v3 Certificate as defined in [COR95, X509-AM].",
      "ja": "このドキュメントはインターネットX.509公開鍵基盤（PKI）証明書管理プロトコルを記述しています。プロトコルメッセージは、証明書の作成と管理の関連するすべての側面のために定義されています。 [COR95、X509-AM]で定義されるように本書で「証明書」のX.509v3証明書をいいます。"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document (in uppercase, as shown) are to be interpreted as described in [RFC2119].",
      "ja": "キーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、（図示のように、大文字で）この文書では、 \"SHOULD\"、 \"推奨\" \"NOT SHOULD\"、 \"MAY\"、 \"OPTIONAL\" は可能になっています[RFC2119]で説明されるように解釈されます。"
    },
    {
      "indent": 0,
      "text": "Introduction",
      "ja": "はじめに"
    },
    {
      "indent": 3,
      "text": "The layout of this document is as follows:",
      "ja": "次のようにこの文書のレイアウトは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "- Section 1 contains an overview of PKI management;\n- Section 2 contains discussion of assumptions and restrictions;\n- Section 3 contains data structures used for PKI management messages;\n- Section 4 defines the functions that are to be carried out in PKI\n  management by conforming implementations;\n- Section 5 describes a simple protocol for transporting PKI messages;\n- the Appendices specify profiles for conforming implementations and\n  provide an ASN.1 module containing the syntax for all messages\n  defined in this specification.",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1 PKI Management Overview",
      "ja": "1 PKI管理の概要"
    },
    {
      "indent": 3,
      "text": "The PKI must be structured to be consistent with the types of individuals who must administer it. Providing such administrators with unbounded choices not only complicates the software required but also increases the chances that a subtle mistake by an administrator or software developer will result in broader compromise. Similarly, restricting administrators with cumbersome mechanisms will cause them not to use the PKI.",
      "ja": "PKIは、それを管理する必要があり、個人のタイプと一致するように構成されなければなりません。無限の選択肢が、このような管理者に提供するだけでなく、必要なソフトウェアを複雑にするだけでなく、管理者やソフトウェア開発者によって微妙なミスはより広範な妥協につながる可能性が高くなり。同様に、面倒なメカニズムを管理者に制限すると、彼らはPKIを使用しない原因となります。"
    },
    {
      "indent": 3,
      "text": "Management protocols are REQUIRED to support on-line interactions between Public Key Infrastructure (PKI) components. For example, a management protocol might be used between a Certification Authority (CA) and a client system with which a key pair is associated, or between two CAs that issue cross-certificates for each other.",
      "ja": "管理プロトコルは、公開鍵基盤（PKI）コンポーネント間のオンライン対話をサポートする必要があります。例えば、管理プロトコルは、認証局（CA）と鍵ペアが関連付けられた、または、互いに相互証明書を発行2つのCA間しているクライアントシステムの間で使用されるかもしれません。"
    },
    {
      "indent": 0,
      "text": "1.1 PKI Management Model",
      "section_title": true,
      "ja": "1.1 PKI管理モデル"
    },
    {
      "indent": 3,
      "text": "Before specifying particular message formats and procedures we first define the entities involved in PKI management and their interactions (in terms of the PKI management functions required). We then group these functions in order to accommodate different identifiable types of end entities.",
      "ja": "特定のメッセージフォーマット、我々は最初のPKI管理及びそれらの相互作用に関与するエンティティを定義する手順を指定する前に、（必要なPKI管理機能の点で）。私たちは、グループの順序でこれらの機能は、エンドエンティティの異なる識別可能なタイプに対応します。"
    },
    {
      "indent": 0,
      "text": "1.2 Definitions of PKI Entities",
      "section_title": true,
      "ja": "PKIエンティティの1.2定義"
    },
    {
      "indent": 3,
      "text": "The entities involved in PKI management include the end entity (i.e., the entity to be named in the subject field of a certificate) and the certification authority (i.e., the entity named in the issuer field of a certificate). A registration authority MAY also be involved in PKI management.",
      "ja": "PKI管理に関与するエンティティは、エンドエンティティ（証明書のサブジェクトフィールドで指定される、すなわち、エンティティ）と認証局（証明書の発行者フィールドで指定され、すなわち、エンティティ）が挙げられます。登録機関はまた、PKI管理に関与している可能性があります。"
    },
    {
      "indent": 0,
      "text": "1.2.1 Subjects and End Entities",
      "section_title": true,
      "ja": "1.2.1被験者およびエンドエンティティ"
    },
    {
      "indent": 3,
      "text": "The term \"subject\" is used here to refer to the entity named in the subject field of a certificate; when we wish to distinguish the tools and/or software used by the subject (e.g., a local certificate management module) we will use the term \"subject equipment\". In general, the term \"end entity\" (EE) rather than subject is preferred in order to avoid confusion with the field name.",
      "ja": "「対象」という用語は、証明書のサブジェクトフィールドで指定されたエンティティを参照するためにここで使用されます。我々は（例えば、ローカル証明書管理モジュール）を被験者によって使用されるツールおよび/またはソフトウェアを区別したいときに我々は、用語「対象機器」を使用します。一般に、用語「エンドエンティティ」（EE）よりもむしろ主題は、フィールド名との混同を避けるために好ましいです。"
    },
    {
      "indent": 3,
      "text": "It is important to note that the end entities here will include not only human users of applications, but also applications themselves (e.g., for IP security). This factor influences the protocols which the PKI management operations use; for example, application software is far more likely to know exactly which certificate extensions are required than are human users. PKI management entities are also end entities in the sense that they are sometimes named in the subject field of a certificate or cross-certificate. Where appropriate, the term \"end-entity\" will be used to refer to end entities who are not PKI management entities.",
      "ja": "（IPセキュリティのために、例えば）ここでは、エンドエンティティだけでなく、人間のアプリケーションのユーザーだけでなく、アプリケーション自体が含まれることに注意することが重要です。この要因は、PKI管理操作が使用するプロトコルに影響を与えます。例えば、アプリケーションソフトウェアは、証明書の拡張は、人間のユーザーよりも必要とされているかを正確に知ることがはるかに可能性が高いです。 PKI管理エンティティはまた、彼らは時々証明書またはクロス証明書のサブジェクトフィールドに指定されているという意味でエンティティを終了しています。適切な場合には、用語「エンドエンティティは、」PKI管理エンティティでないエンティティを終了するために参照するために使用されます。"
    },
    {
      "indent": 3,
      "text": "All end entities require secure local access to some information -- at a minimum, their own name and private key, the name of a CA which is directly trusted by this entity and that CA's public key (or a fingerprint of the public key where a self-certified version is available elsewhere). Implementations MAY use secure local storage for more than this minimum (e.g., the end entity's own certificate or application-specific information). The form of storage will also vary -- from files to tamper-resistant cryptographic tokens. Such local trusted storage is referred to here as the end entity's Personal Security Environment (PSE).",
      "ja": "すべてのエンドエンティティは、いくつかの情報へのローカルアクセス確保が必要です - 最低でも、自分の名前と秘密鍵、直接CAの公開鍵このエンティティによって、その信頼されたCAの名前（または公開鍵のフィンガープリントをどこ自己認定バージョン）他の場所で使用可能です。実装は、この最小値以上（例えば、エンドエンティティ自身の証明書またはアプリケーション固有の情報）のために安全なローカルストレージを使用するかもしれません。ストレージの形も変化します - 暗号化トークン耐性を改ざんするファイルから。このような信頼できるローカルストレージは、エンドエンティティのパーソナルセキュリティ環境（PSE）としてここで呼ばれます。"
    },
    {
      "indent": 3,
      "text": "Though PSE formats are beyond the scope of this document (they are very dependent on equipment, et cetera), a generic interchange format for PSEs is defined here - a certification response message MAY be used.",
      "ja": "PSE形式はこのドキュメントの範囲を超えていますが（彼らは機器に非常に依存している、とcetera）、のPSEのための一般的な交換形式はここで定義された - 認証応答メッセージが使用されるかもしれません。"
    },
    {
      "indent": 0,
      "text": "1.2.2 Certification Authority",
      "section_title": true,
      "ja": "1.2.2認証局"
    },
    {
      "indent": 3,
      "text": "The certification authority (CA) may or may not actually be a real \"third party\" from the end entity's point of view. Quite often, the CA will actually belong to the same organization as the end entities it supports.",
      "ja": "認証局（CA）は、あるいは、実際にビューのエンドエンティティの視点から本当の「第三者」であってもなくてもよいです。かなり頻繁に、CAは、実際にそれがサポートするエンド・エンティティと同じ組織に属しています。"
    },
    {
      "indent": 3,
      "text": "Again, we use the term CA to refer to the entity named in the issuer field of a certificate; when it is necessary to distinguish the software or hardware tools used by the CA we use the term \"CA equipment\".",
      "ja": "ここでも、我々は、証明書の発行人欄に名前付きエンティティを参照するために用語のCAを使用します。我々が用語「CA機器」を使用したCAが使用するソフトウェアやハードウェアのツールを区別する必要があるとき。"
    },
    {
      "indent": 3,
      "text": "The CA equipment will often include both an \"off-line\" component and an \"on-line\" component, with the CA private key only available to the \"off-line\" component. This is, however, a matter for implementers (though it is also relevant as a policy issue).",
      "ja": "CA機器は、多くの場合、「オフライン」コンポーネントにのみ利用可能CA秘密鍵で、「オフライン」コンポーネントおよび「オンライン」コンポーネントの両方が含まれます。 （それはまた、政策課題として適切であるが）これは、しかし、実装の問題です。"
    },
    {
      "indent": 3,
      "text": "We use the term \"root CA\" to indicate a CA that is directly trusted by an end entity; that is, securely acquiring the value of a root CA public key requires some out-of-band step(s). This term is not meant to imply that a root CA is necessarily at the top of any hierarchy, simply that the CA in question is trusted directly.",
      "ja": "私たちは直接エンドエンティティによって信頼されるCAを示すために、用語「ルートCA」を使用します。それは確実に、ルートCAの公開鍵の値を取得することは、いくつかのアウトオブバンドの工程（単数または複数）が必要です。この用語は、ルートCAは、問題のCAが直接信頼されていることだけで、あらゆる階層の最上位に必然であることを意味するものではありません。"
    },
    {
      "indent": 3,
      "text": "A \"subordinate CA\" is one that is not a root CA for the end entity in question. Often, a subordinate CA will not be a root CA for any entity but this is not mandatory.",
      "ja": "「下位CAは、」問題のエンドエンティティのルートCAではないものです。多くの場合、下位CAは、任意のエンティティのルートCAではありませんが、これは必須ではありません。"
    },
    {
      "indent": 0,
      "text": "1.2.3 Registration Authority",
      "section_title": true,
      "ja": "1.2.3登録機関"
    },
    {
      "indent": 3,
      "text": "In addition to end-entities and CAs, many environments call for the existence of a Registration Authority (RA) separate from the Certification Authority. The functions which the registration authority may carry out will vary from case to case but MAY include personal authentication, token distribution, revocation reporting, name assignment, key generation, archival of key pairs, et cetera.",
      "ja": "およびCAS-エンドエンティティに加えて、多くの環境では、認証局とは別の登録機関（RA）の存在を呼び出します。登録機関が行うことができる機能がケースにケースによって異なりますが、エトセトラ個人認証、トークン配布、失効レポート、名前の割り当て、キー生成、キーペアのアーカイブを含むことができます。"
    },
    {
      "indent": 3,
      "text": "This document views the RA as an OPTIONAL component - when it is not present the CA is assumed to be able to carry out the RA's functions so that the PKI management protocols are the same from the end-entity's point of view.",
      "ja": "この文書では、任意成分としてRAを見て -  CAがPKI管理プロトコルは、ビューのエンドエンティティの点から同じであるように、RAの機能を実行することを想定している存在しない場合。"
    },
    {
      "indent": 3,
      "text": "Again, we distinguish, where necessary, between the RA and the tools used (the \"RA equipment\").",
      "ja": "ここでも、我々はRAと使用するツール（「RA機器」）との間で、必要に応じ区別します。"
    },
    {
      "indent": 3,
      "text": "Note that an RA is itself an end entity. We further assume that all RAs are in fact certified end entities and that RAs have private keys that are usable for signing. How a particular CA equipment identifies some end entities as RAs is an implementation issue (i.e., this document specifies no special RA certification operation). We do not mandate that the RA is certified by the CA with which it is interacting at the moment (so one RA may work with more than one CA whilst only being certified once).",
      "ja": "RAはエンドエンティティそのものであることに注意してください。我々はさらに、すべてのRASが実際にエンドエンティティを認定し、RASが署名のために使用可能な秘密鍵を持っていることをしていることを前提としています。 Rasは、実装の問題であるように、特定のCA機器は、いくつかのエンドエンティティを特定する方法（すなわち、この文書には、特別なRA認証操作を指定していません）。私たちは、RAが、それは現時点で対話しているCAによって認定されていることを強制しません（その1 RAは一度しか認定されている間に複数のCAで動作可能）。"
    },
    {
      "indent": 3,
      "text": "In some circumstances end entities will communicate directly with a CA even where an RA is present. For example, for initial registration and/or certification the subject may use its RA, but communicate directly with the CA in order to refresh its certificate.",
      "ja": "いくつかの状況ではエンティティはRAが存在してもCAと直接通信する終わります。例えば、初期登録および/または認証のために、被験体は、RAを使用することができるが、その証明書をリフレッシュするためにCAと直接通信します。"
    },
    {
      "indent": 0,
      "text": "1.3 PKI Management Requirements",
      "section_title": true,
      "ja": "1.3 PKI管理の要件"
    },
    {
      "indent": 3,
      "text": "The protocols given here meet the following requirements on PKI management.",
      "ja": "ここで与えられたプロトコルは、PKI管理に関する次の要件を満たしています。"
    },
    {
      "indent": 6,
      "text": "1. PKI management must conform to the ISO 9594-8 standard and the associated amendments (certificate extensions)",
      "ja": "1. PKI管理は、ISO 9594から8標準および関連する改正（証明書の拡張）に準拠する必要があります"
    },
    {
      "indent": 6,
      "text": "2. PKI management must conform to the other parts of this series.",
      "section_title": true,
      "ja": "2. PKI管理は、このシリーズの他の部分に適合しなければなりません。"
    },
    {
      "indent": 6,
      "text": "3. It must be possible to regularly update any key pair without affecting any other key pair.",
      "ja": "3.定期的に他のキーのペアに影響を与えることなく、任意のキーのペアを更新することが可能でなければなりません。"
    },
    {
      "indent": 6,
      "text": "4. The use of confidentiality in PKI management protocols must be kept to a minimum in order to ease regulatory problems.",
      "ja": "4. PKI管理プロトコルにおける機密性の使用は規制の問題を緩和するために、最小限に抑える必要があります。"
    },
    {
      "indent": 6,
      "text": "5. PKI management protocols must allow the use of different industry-standard cryptographic algorithms, (specifically including RSA, DSA, MD5, SHA-1) -- this means that any given CA, RA, or end entity may, in principle, use whichever algorithms suit it for its own key pair(s).",
      "ja": "5. PKI管理プロトコルは、（具体的にはRSA、DSA、MD5、SHA-1を含む）異なる業界標準の暗号化アルゴリズムの使用を可能にしなければならない - これは、任意のCA、RA、またはエンドエンティティが、原則として、使用することを意味しますどちらのアルゴリズムは、独自の鍵のペア（S）のためにそれに合います。"
    },
    {
      "indent": 6,
      "text": "6. PKI management protocols must not preclude the generation of key pairs by the end-entity concerned, by an RA, or by a CA -- key generation may also occur elsewhere, but for the purposes of PKI management we can regard key generation as occurring wherever the key is first present at an end entity, RA, or CA.",
      "ja": "6. PKI管理プロトコルはRAにより、当該エンドエンティティによって鍵ペアの生成を妨げてはならない、またはCAによって - 鍵の生成はまた、他の場所で発生する可能性が、PKI管理の目的のために我々は、鍵生成とみなすことができますキーは、エンドエンティティに最初存在しているところはどこでも起こる、RA、またはCA."
    },
    {
      "indent": 6,
      "text": "7. PKI management protocols must support the publication of certificates by the end-entity concerned, by an RA, or by a CA. Different implementations and different environments may choose any of the above approaches.",
      "ja": "7. PKI管理プロトコルはRAにより、またはCAによって、当該エンドエンティティによって証明書の公開をサポートしなければなりません異なる実装と異なる環境は、上記のアプローチのいずれかを選択できます。"
    },
    {
      "indent": 6,
      "text": "8. PKI management protocols must support the production of Certificate Revocation Lists (CRLs) by allowing certified end entities to make requests for the revocation of certificates - this must be done in such a way that the denial-of-service attacks which are possible are not made simpler.",
      "ja": "8. PKI管理プロトコルは、証明書の失効の要求を行うために、認定エンドエンティティを可能にすることにより、証明書失効リスト（CRL）の生産をサポートしている必要があります - これは可能であり、サービス拒否攻撃があるような方法で行われなければなりません単純なされていません。"
    },
    {
      "indent": 6,
      "text": "9. PKI management protocols must be usable over a variety of \"transport\" mechanisms, specifically including mail, http, TCP/IP and ftp.",
      "ja": "9. PKI管理プロトコルは、具体的には、メール、HTTP、TCP / IPおよびFTPなどの「輸送」のメカニズム、各種超える使用可能でなければなりません。"
    },
    {
      "indent": 6,
      "text": "10. Final authority for certification creation rests with the CA; no RA or end-entity equipment can assume that any certificate issued by a CA will contain what was requested -- a CA may alter certificate field values or may add, delete or alter extensions according to its operating policy. In other words, all PKI entities (end-entities, RAs, and CAs) must be capable of handling responses to requests for certificates in which the actual certificate issued is different from that requested (for example, a CA may shorten the validity period requested). Note that policy may dictate that the CA must not publish or otherwise distribute the certificate until the requesting entity has reviewed and accepted the newly-created certificate (typically through use of the PKIConfirm message).",
      "ja": "認定を作成するための10。最終的な権限はCAにかかっています。何RAまたはエンドエンティティ機器は、CAが発行した証明書が要求されたものを含むことを前提とすることはできません -  CAは、証明書のフィールド値を変更したり、追加、削除またはその運用方針に応じた拡張を変更することができます。言い換えれば、すべてのPKIエンティティ（エンドエンティティ、RAS、およびCAS）が発行され、実際の証明書が要求されたものとは異なるとした証明書の要求に応答を扱うことができなければならない（例えば、CAは、要求された有効期間を短縮することが）。そのポリシーは、要求エンティティがレビューし、（通常はPKIConfirmメッセージを使用して）新しく作成された証明書を受け入れたまではCAが証明書を発行するか、そうでない場合は、配布してはならないことを指示することがあります。"
    },
    {
      "indent": 6,
      "text": "11. A graceful, scheduled change-over from one non-compromised CA key pair to the next (CA key update) must be supported (note that if the CA key is compromised, re-initialization must be performed for all entities in the domain of that CA). An end entity whose PSE contains the new CA public key (following a CA key update) must also be able to verify certificates verifiable using the old public key. End entities who directly trust the old CA key pair must also be able to verify certificates signed using the new CA private key. (Required for situations where the old CA public key is \"hardwired\" into the end entity's cryptographic equipment).",
      "ja": "次（CAの鍵更新）への1つの非妥協CA鍵ペアから11優雅な、スケジュールされた切換はサポートされなければならない（CA鍵が危険にさらされた場合、再初期化は、ドメイン内のすべてのエンティティに対して実行されなければならないことに注意してくださいそのCAの）。そのPSE（CA鍵の更新以下）の新しいCA公開鍵を含むエンドエンティティは、古い公開鍵を使って検証可能な証明書を検証できなければなりません。直接古いCA鍵ペアを信頼してエンドエンティティは、新しいCAの秘密鍵を使って署名された証明書を検証できなければなりません。 （古いCA公開鍵は、エンドエンティティの暗号化機器への「ハードワイヤード」である状況のために必要です）。"
    },
    {
      "indent": 6,
      "text": "12. The Functions of an RA may, in some implementations or environments, be carried out by the CA itself. The protocols must be designed so that end entities will use the same protocol (but, of course, not the same key!) regardless of whether the communication is with an RA or CA.",
      "ja": "RAの12機能は、いくつかの実装形態または環境では、CA自体によって行うことができます。プロトコルは（もちろん、ない同じキー、しかし！）エンドエンティティが同じプロトコルを使用するように設計されなければならないにかかわらず、通信がRAまたはCAであるかどうかの"
    },
    {
      "indent": 6,
      "text": "13. Where an end entity requests a certificate containing a given public key value, the end entity must be ready to demonstrate possession of the corresponding private key value. This may be accomplished in various ways, depending on the type of certification request. See Section 2.3, \"Proof of Possession of Private Key\", for details of the in-band methods defined for the PKIX-CMP (i.e., Certificate Management Protocol) messages.",
      "ja": "13.エンド・エンティティは、指定された公開鍵値を含む証明書を要求した場合、エンドエンティティが対応する秘密鍵の値の所有を証明する準備ができなければなりません。これは、認証要求のタイプに応じて、様々な方法で達成することができます。 PKIX-CMP（すなわち、証明書管理プロトコル）メッセージのために定義された帯域内のメソッドの詳細については、セクション2.3、「秘密鍵の所有の証明」を参照してください。"
    },
    {
      "indent": 0,
      "text": "PKI Management Operations",
      "ja": "PKI管理操作"
    },
    {
      "indent": 3,
      "text": "The following diagram shows the relationship between the entities defined above in terms of the PKI management operations. The letters in the diagram indicate \"protocols\" in the sense that a defined set of PKI management messages can be sent along each of the lettered lines.",
      "ja": "次の図は、PKI管理操作の点で上記定義されたエンティティとの関係を示しています。図中の文字は、PKI管理メッセージの定義されたセットは、文字の線の各々に沿って送信することができるという意味で、「プロトコル」を示します。"
    },
    {
      "indent": 6,
      "text": "+---+     cert. publish        +------------+      j\n|   |  <---------------------  | End Entity | <-------\n| C |             g            +------------+      \"out-of-band\"\n|   |                            | ^                loading\n| e |                            | |      initial\n| r |                          a | | b     registration/\n| t |                            | |       certification\n|   |                            | |      key pair recovery\n| / |                            | |      key pair update\n|   |                            | |      certificate update\n| C |  PKI \"USERS\"               V |      revocation request\n| R | -------------------+-+-----+-+------+-+-------------------\n| L |  PKI MANAGEMENT    | ^              | ^\n|   |    ENTITIES      a | | b          a | | b\n|   |                    V |              | |\n| R |             g   +------+    d       | |\n| e |   <------------ | RA   | <-----+    | |\n| p |      cert.      |      | ----+ |    | |\n| o |       publish   +------+   c | |    | |\n| s |                              | |    | |\n| i |                              V |    V |\n| t |          g                 +------------+   i\n| o |   <------------------------|     CA     |------->\n| r |          h                 +------------+  \"out-of-band\"\n| y |      cert. publish              | ^         publication\n|   |      CRL publish                | |\n+---+                                 | |    cross-certification\n                                    e | | f  cross-certificate\n                                      | |       update\n                                      | |\n                                      V |\n                                    +------+\n                                    | CA-2 |\n                                    +------+",
      "raw": true
    },
    {
      "indent": 27,
      "text": "Figure 1 - PKI Entities",
      "ja": "図1  -  PKIエンティティ"
    },
    {
      "indent": 3,
      "text": "At a high level the set of operations for which management messages are defined can be grouped as follows.",
      "ja": "次のようにハイレベルで管理メッセージが定義されている操作のセットをグループ化することができます。"
    },
    {
      "indent": 6,
      "text": "1 CA establishment: When establishing a new CA, certain steps are required (e.g., production of initial CRLs, export of CA public key).",
      "ja": "1個のCAの確立：新しいCAを確立するとき、特定の手順が必要とされている（例えば、初期のCRLの生産、CA公開鍵のエクスポート）。"
    },
    {
      "indent": 6,
      "text": "2 End entity initialization: this includes importing a root CA public key and requesting information about the options supported by a PKI management entity.",
      "ja": "2エンドエンティティの初期化：これは、ルートCAの公開鍵をインポートし、PKI管理エンティティによってサポートされているオプションについての情報を要求しています。"
    },
    {
      "indent": 6,
      "text": "3 Certification: various operations result in the creation of new certificates:",
      "ja": "3認証：さまざまな操作は、新しい証明書が作成されます。"
    },
    {
      "indent": 8,
      "text": "3.1 initial registration/certification: This is the process whereby an end entity first makes itself known to a CA or RA, prior to the CA issuing a certificate or certificates for that end entity. The end result of this process (when it is successful) is that a CA issues a certificate for an end entity's public key, and returns that certificate to the end entity and/or posts that certificate in a public repository. This process may, and typically will, involve multiple \"steps\", possibly including an initialization of the end entity's equipment. For example, the end entity's equipment must be securely initialized with the public key of a CA, to be used in validating certificate paths. Furthermore, an end entity typically needs to be initialized with its own key pair(s).",
      "ja": "3.1初期登録/認証：これは、エンドエンティティが最初の前、エンドエンティティの証明書または証明書を発行するCAには、それ自体CAまたはRAに知られていることができるれるプロセスです。このプロセスの最終結果は、（それが成功した場合）CAは、エンドエンティティの公開鍵の証明書を発行し、エンドエンティティおよび/または公開リポジトリ内の証明書ポストにその証明書を返すことです。このプロセスは、一般的に、おそらくエンドエンティティの機器の初期化を含む複数の「手順」を、含むことになることがあります。例えば、エンドエンティティの機器はしっかりと証明書パスの検証に使用するCAの公開鍵で初期化する必要があります。また、エンドエンティティは、典型的には、自身の鍵ペア（S）で初期化する必要があります。"
    },
    {
      "indent": 8,
      "text": "3.2 key pair update: Every key pair needs to be updated regularly (i.e., replaced with a new key pair), and a new certificate needs to be issued.",
      "ja": "3.2鍵ペアの更新：すべての鍵のペアを定期的に更新する必要がある（つまり、新しい鍵ペアに置き換え）、および新しい証明書を発行する必要があります。"
    },
    {
      "indent": 8,
      "text": "3.3 certificate update: As certificates expire they may be \"refreshed\" if nothing relevant in the environment has changed.",
      "ja": "3.3証明書の更新：証明書が失効したような環境で関連するものは何も変わっていない場合、彼らは「リフレッシュ」であってもよいです。"
    },
    {
      "indent": 8,
      "text": "3.4 CA key pair update: As with end entities, CA key pairs need to be updated regularly; however, different mechanisms are required.",
      "ja": "3.4 CA鍵ペア更新：エンドエンティティと同じように、CA鍵ペアは定期的に更新する必要があります。しかし、別のメカニズムが必要とされています。"
    },
    {
      "indent": 8,
      "text": "3.5 cross-certification request: One CA requests issuance of a cross-certificate from another CA. For the purposes of this standard, the following terms are defined. A \"cross-certificate\" is a certificate in which the subject CA and the issuer CA are distinct and SubjectPublicKeyInfo contains a verification key (i.e., the certificate has been issued for the subject CA's signing key pair). When it is necessary to distinguish more finely, the following terms may be used: a cross-certificate is called an \"inter-domain cross-certificate\" if the subject and issuer CAs belong to different administrative domains; it is called an \"intra-domain cross-certificate\" otherwise.",
      "ja": "3.5相互認証要求は：一つのCAが別のCAからクロス証明書の発行を依頼しますこの規格の目的のために、以下の用語が定義されています。 「相互認証」とは、対象のCAと発行者のCAは別個であり、SubjectPublicKeyInfoでは、検証鍵（すなわち、証明書がサブジェクトCAの署名鍵ペアに対して発行された）が含まれた証明書です。それはより細かく区別する必要がある場合、以下の用語が使用されてもよい：件名と発行者CAは異なる管理ドメインに属している場合、クロス証明書「は、ドメイン間相互認証」と呼ばれています。それは、そうでない場合は、「ドメイン内のクロス証明書」と呼ばれています。"
    },
    {
      "indent": 3,
      "text": "Notes:",
      "ja": "ノート："
    },
    {
      "indent": 3,
      "text": "Note 1. The above definition of \"cross-certificate\" aligns with the defined term \"CA-certificate\" in X.509. Note that this term is not to be confused with the X.500 \"cACertificate\" attribute type, which is unrelated.",
      "ja": "注1.「相互認証」の上記の定義は、X.509で定義された用語「CA証明書」と整列します。この用語は無関係であるX.500「のcaCertificate」属性タイプと混同すべきではないことに注意してください。"
    },
    {
      "indent": 3,
      "text": "Note 2. In many environments the term \"cross-certificate\", unless further qualified, will be understood to be synonymous with \"inter-domain cross-certificate\" as defined above.",
      "ja": "多くの環境でのノート2は、用語「相互認証」は、さらに修飾されていない限り、上記で定義した「ドメイン間相互認証」と同義であると理解されるであろう。"
    },
    {
      "indent": 3,
      "text": "Note 3. Issuance of cross-certificates may be, but is not necessarily, mutual; that is, two CAs may issue cross-certificates for each other.",
      "ja": "相互認証の発行3はであってもよい注意、必ずしもではないが、相互。つまり、2つのCAはお互いのクロス証明書を発行することができます。"
    },
    {
      "indent": 8,
      "text": "3.6 cross-certificate update: Similar to a normal certificate\n    update but involving a cross-certificate.",
      "raw": true
    },
    {
      "indent": 6,
      "text": "4 Certificate/CRL discovery operations: some PKI management operations result in the publication of certificates or CRLs:",
      "ja": "4証明書/ CRL発見動作：一部のPKI管理操作が証明書やCRLの公表につながります："
    },
    {
      "indent": 8,
      "text": "4.1 certificate publication: Having gone to the trouble of producing a certificate, some means for publishing it is needed. The \"means\" defined in PKIX MAY involve the messages specified in Sections 3.3.13 - 3.3.16, or MAY involve other methods (LDAP, for example) as described in the \"Operational Protocols\" documents of the PKIX series of specifications.",
      "ja": "4.1証明書発行：証明書を生成するトラブルに行ったので、それを公開するための何らかの手段が必要とされています。 「オペレーショナル・プロトコル」仕様のPKIXシリーズの文献に記載されているよう3.3.16、または（例えばLDAP、）他の方法を含むことができる -  PKIXで定義された「とは、」セクション3.3.13に指定されたメッセージを含むことができます。"
    },
    {
      "indent": 8,
      "text": "4.2 CRL publication: As for certificate publication.",
      "section_title": true,
      "ja": "4.2 CRL公開：証明書の出版について。"
    },
    {
      "indent": 6,
      "text": "5 Recovery operations: some PKI management operations are used when an end entity has \"lost\" its PSE:",
      "ja": "5つのリカバリ操作：エンドエンティティは、そのPSEを「失われた」したときに、いくつかのPKI管理操作が使用されます。"
    },
    {
      "indent": 8,
      "text": "5.1 key pair recovery: As an option, user client key materials (e.g., a user's private key used for decryption purposes) MAY be backed up by a CA, an RA, or a key backup system associated with a CA or RA. If an entity needs to recover these backed up key materials (e.g., as a result of a forgotten password or a lost key chain file), a protocol exchange may be needed to support such recovery.",
      "ja": "5.1鍵ペアの回復：オプションとして、ユーザクライアントキー材料（例えば、復号化の目的のために使用されるユーザの秘密鍵）はCA、RA、またはCAまたはRAに関連付けられたキーのバックアップシステムによってバックアップされていてもよいです。エンティティは、これらのバックアップキー材料（例えば、パスワードを忘れた場合や紛失キーチェーンファイルの結果として）を回収する必要がある場合、プロトコル交換は、このような回復をサポートするために必要とすることができます。"
    },
    {
      "indent": 6,
      "text": "6 Revocation operations: some PKI operations result in the creation of new CRL entries and/or new CRLs:",
      "ja": "6つの失効操作：いくつかのPKI操作が新しいCRLエントリおよび/または新規のCRLが作成されます。"
    },
    {
      "indent": 8,
      "text": "6.1 revocation request: An authorized person advises a CA of an abnormal situation requiring certificate revocation.",
      "ja": "6.1失効要求：許可者は、証明書の失効を必要とする異常な状況のCAを助言します。"
    },
    {
      "indent": 6,
      "text": "7 PSE operations: whilst the definition of PSE operations (e.g., moving a PSE, changing a PIN, etc.) are beyond the scope of this specification, we do define a PKIMessage (CertRepMessage) which can form the basis of such operations.",
      "ja": "7つのPSE操作：PSE操作（例えば、PSEを移動、PINを変更する、など）の定義一方は、本明細書の範囲を超えて、我々は、そのような操作の基礎を形成することができるPKIMessage（CertRepMessage）を定義行います。"
    },
    {
      "indent": 3,
      "text": "Note that on-line protocols are not the only way of implementing the above operations. For all operations there are off-line methods of achieving the same result, and this specification does not mandate use of on-line protocols. For example, when hardware tokens are used, many of the operations MAY be achieved as part of the physical token delivery.",
      "ja": "オンラインプロトコルは上記の動作を実現するための唯一の方法ではないことに注意してください。すべての操作のためにそこに同じ結果を達成するためのオフラインの方法があり、この仕様はオンラインプロトコルの使用を強制しません。ハードウェアトークンが使用される場合、例えば、動作の多くは、物理的なトークンの配信の一部として実現することができます。"
    },
    {
      "indent": 3,
      "text": "Later sections define a set of standard messages supporting the above operations. The protocols for conveying these exchanges in different environments (file based, on-line, E-mail, and WWW) is also specified.",
      "ja": "その後のセクションでは、上記の操作をサポートする標準メッセージのセットを定義します。異なる環境で、これらの交流を搬送するためのプロトコル（ファイルベース、オンライン、Eメール、およびWWW）も指定されています。"
    },
    {
      "indent": 0,
      "text": "2. Assumptions and restrictions",
      "section_title": true,
      "ja": "2.前提条件と制限"
    },
    {
      "indent": 0,
      "text": "2.1 End entity initialization",
      "section_title": true,
      "ja": "2.1エンドエンティティの初期化"
    },
    {
      "indent": 3,
      "text": "The first step for an end entity in dealing with PKI management entities is to request information about the PKI functions supported and to securely acquire a copy of the relevant root CA public key(s).",
      "ja": "PKI管理エンティティに対処するエンドエンティティの最初のステップは、サポートされているPKI機能に関する情報を要求するために、かつ確実に、関連するルートCAの公開鍵（単数または複数）のコピーを取得することです。"
    },
    {
      "indent": 0,
      "text": "2.2 Initial registration/certification",
      "section_title": true,
      "ja": "2.2初期登録/認証"
    },
    {
      "indent": 3,
      "text": "There are many schemes that can be used to achieve initial registration and certification of end entities. No one method is suitable for all situations due to the range of policies which a CA may implement and the variation in the types of end entity which can occur.",
      "ja": "エンドエンティティの初期登録と認証を達成するために使用することができる多くの方式があります。誰の方法は、CAが実施することができるポリシーの範囲と発生することができ、エンドエンティティの種類の変化に起因するすべての状況に適していません。"
    },
    {
      "indent": 3,
      "text": "We can however, classify the initial registration / certification schemes that are supported by this specification. Note that the word \"initial\", above, is crucial - we are dealing with the situation where the end entity in question has had no previous contact with the PKI. Where the end entity already possesses certified keys then some simplifications/alternatives are possible.",
      "ja": "私たちは、しかし、この仕様でサポートされている初期登録/認証制度を分類することができます。 「最初の」という言葉は、上記の、非常に重要であることに注意してください - 私たちは、問題のエンドエンティティがPKIとは、以前の接触を持っていない状況を扱っています。エンドエンティティは、すでに認定キーを所有している場合は、その後、いくつかの単純化が/代替が可能です。"
    },
    {
      "indent": 3,
      "text": "Having classified the schemes that are supported by this specification we can then specify some as mandatory and some as optional. The goal is that the mandatory schemes cover a sufficient number of the cases which will arise in real use, whilst the optional schemes are available for special cases which arise less frequently. In this way we achieve a balance between flexibility and ease of implementation.",
      "ja": "私たちは、その後、いくつかの必須として、いくつかなどのオプションを指定することができ、この仕様でサポートされているスキームを分類しました。目標は、オプションのスキームはそれほど頻繁に発生する特別な場合のために用意されていながら、必須のスキームは、実際の使用中に起きる例に十分な数をカバーしていることです。このようにして、我々は柔軟性と実装の容易さを両立します。"
    },
    {
      "indent": 3,
      "text": "We will now describe the classification of initial registration / certification schemes.",
      "ja": "私たちは今、初期登録/認証制度の分類を説明します。"
    },
    {
      "indent": 0,
      "text": "2.2.1 Criteria used",
      "section_title": true,
      "ja": "使用2.2.1基準"
    },
    {
      "indent": 0,
      "text": "2.2.1.1 Initiation of registration / certification",
      "section_title": true,
      "ja": "登録/認証の2.2.1.1開始"
    },
    {
      "indent": 3,
      "text": "In terms of the PKI messages which are produced we can regard the initiation of the initial registration / certification exchanges as occurring wherever the first PKI message relating to the end entity is produced. Note that the real-world initiation of the registration / certification procedure may occur elsewhere (e.g., a personnel department may telephone an RA operator).",
      "ja": "生成されたPKIメッセージの面では、我々は、エンドエンティティに関連する第一のPKIメッセージが生成されている場所に生じるような初期登録/認証交換の開始とみなすことができます。登録/認証手順の現実世界の開始が他の場所で発生する可能性があることに注意してください（例えば、人事部は、RAのオペレータに電話してもよいです）。"
    },
    {
      "indent": 3,
      "text": "The possible locations are at the end entity, an RA, or a CA.",
      "ja": "可能な場所は、エンドエンティティ、RA、またはCA.であります"
    },
    {
      "indent": 0,
      "text": "2.2.1.2 End entity message origin authentication",
      "section_title": true,
      "ja": "2.2.1.2エンドエンティティのメッセージ発信元認証"
    },
    {
      "indent": 3,
      "text": "The on-line messages produced by the end entity that requires a certificate may be authenticated or not. The requirement here is to authenticate the origin of any messages from the end entity to the PKI (CA/RA).",
      "ja": "証明書を必要とするエンドエンティティによって生成されたオンラインメッセージが認証してもしなくてもよいです。ここでの要件は、PKI（CA / RA）へのエンドエンティティからのメッセージの発信元を認証することです。"
    },
    {
      "indent": 3,
      "text": "In this specification, such authentication is achieved by the PKI (CA/RA) issuing the end entity with a secret value (initial authentication key) and reference value (used to identify the transaction) via some out-of-band means. The initial authentication key can then be used to protect relevant PKI messages.",
      "ja": "本明細書では、そのような認証は、いくつかのアウトオブバンド手段を介して（トランザクションを識別するために使用される）秘密の値（初期認証キー）と基準値とエンドエンティティを発行するPKI（CA / RA）によって達成されます。初期認証キーは、関連するPKIメッセージを保護するために使用することができます。"
    },
    {
      "indent": 3,
      "text": "We can thus classify the initial registration/certification scheme according to whether or not the on-line end entity -> PKI messages are authenticated or not.",
      "ja": "> PKIメッセージ認証したりしていない - 私たちは、このようにオンラインエンドエンティティがいるか否かに応じて初期登録/認証スキームを分類することができます。"
    },
    {
      "indent": 3,
      "text": "Note 1: We do not discuss the authentication of the PKI -> end entity messages here as this is always REQUIRED. In any case, it can be achieved simply once the root-CA public key has been installed at the end entity's equipment or it can be based on the initial authentication key.",
      "ja": "注1：我々は、PKIの認証を議論していない - >ここでは、このようにエンドエンティティメッセージは常に必要です。ルートCAの公開鍵は、エンドエンティティの機器にインストールされているか、それが初期認証キーに基づくことができたら、どのような場合には、それは簡単に達成することができます。"
    },
    {
      "indent": 3,
      "text": "Note 2: An initial registration / certification procedure can be secure where the messages from the end entity are authenticated via some out- of-band means (e.g., a subsequent visit).",
      "ja": "注2：エンドエンティティからのメッセージは、いくつかのアウトオブバンド手段（例えば、その後の訪問）を介して認証されている場合、初期登録/認証手順がセキュアであることができます。"
    },
    {
      "indent": 0,
      "text": "2.2.1.3 Location of key generation",
      "section_title": true,
      "ja": "鍵生成の2.2.1.3場所"
    },
    {
      "indent": 3,
      "text": "In this specification, \"key generation\" is regarded as occurring wherever either the public or private component of a key pair first occurs in a PKIMessage. Note that this does not preclude a centralized key generation service - the actual key pair MAY have been generated elsewhere and transported to the end entity, RA, or CA using a (proprietary or standardized) key generation request/response protocol (outside the scope of this specification).",
      "ja": "本明細書において、「鍵生成」は、いずれかの鍵ペアの公開またはプライベートコンポーネントが最初PKIMessageで起こるどこ生じると考えられます。の範囲外（（独自仕様または標準化された）鍵生成要求/応答プロトコルを使用して、実際の鍵ペアは、他の場所で生成され、エンドエンティティに輸送されていてもよいRA、またはCA  - これは、集中型キー生成サービスを排除しないことに注意してくださいこの仕様）。"
    },
    {
      "indent": 3,
      "text": "There are thus three possibilities for the location of \"key generation\": the end entity, an RA, or a CA.",
      "ja": "エンドエンティティ、RA、またはCA.：「鍵生成」の場所のための3つの可能性がありますので、"
    },
    {
      "indent": 0,
      "text": "2.2.1.4 Confirmation of successful certification",
      "section_title": true,
      "ja": "成功した認証の2.2.1.4確認"
    },
    {
      "indent": 3,
      "text": "Following the creation of an initial certificate for an end entity, additional assurance can be gained by having the end entity explicitly confirm successful receipt of the message containing (or indicating the creation of) the certificate. Naturally, this confirmation message must be protected (based on the initial authentication key or other means).",
      "ja": "エンドエンティティの最初の証明書の作成後、追加の保証は、エンドエンティティが明示的に含む（または作成示す）証明書をメッセージの正常な受信を確認有することによって得ることができます。当然のことながら、この確認メッセージは、（初期認証キーまたは他の手段に基づいて）保護されなければなりません。"
    },
    {
      "indent": 3,
      "text": "This gives two further possibilities: confirmed or not.",
      "ja": "確認したかどうか：これは、さらに2つの可能性を提供します。"
    },
    {
      "indent": 0,
      "text": "2.2.2 Mandatory schemes",
      "section_title": true,
      "ja": "2.2.2必須のスキーム"
    },
    {
      "indent": 3,
      "text": "The criteria above allow for a large number of initial registration / certification schemes. This specification mandates that conforming CA equipment, RA equipment, and EE equipment MUST support the second scheme listed below. Any entity MAY additionally support other schemes, if desired.",
      "ja": "上記の基準は、初期登録/認証制度の多数を可能とします。 CA機器、RA機器、およびEE機器を準拠この仕様の義務は、以下に示す第2の方式をサポートしなければなりません。必要に応じて任意のエンティティは、さらに、他のスキームをサポートするかもしれません。"
    },
    {
      "indent": 0,
      "text": "2.2.2.1 Centralized scheme",
      "section_title": true,
      "ja": "2.2.2.1集中化スキーム"
    },
    {
      "indent": 3,
      "text": "In terms of the classification above, this scheme is, in some ways, the simplest possible, where:",
      "ja": "上記分類の観点で、このスキームは、ここで、最も単純な、いくつかの方法では、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "- initiation occurs at the certifying CA;\n- no on-line message authentication is required;\n- \"key generation\" occurs at the certifying CA (see Section 2.2.1.3);\n- no confirmation message is required.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "In terms of message flow, this scheme means that the only message required is sent from the CA to the end entity. The message must contain the entire PSE for the end entity. Some out-of-band means must be provided to allow the end entity to authenticate the message received and decrypt any encrypted values.",
      "ja": "メッセージフローの点で、このスキームは、必要なメッセージのみがエンドエンティティにCAから送信されたことを意味します。メッセージは、エンドエンティティの全体PSEが含まれている必要があります。いくつかのアウトオブバンド手段は、エンドエンティティが受信したメッセージを認証し、任意の暗号化された値を復号化できるようにするために提供されなければなりません。"
    },
    {
      "indent": 0,
      "text": "2.2.2.2 Basic authenticated scheme",
      "section_title": true,
      "ja": "2.2.2.2基本認証されたスキーム"
    },
    {
      "indent": 3,
      "text": "In terms of the classification above, this scheme is where:",
      "ja": "上記分類の観点で、このスキームは、ここです。"
    },
    {
      "indent": 3,
      "text": "- initiation occurs at the end entity;\n- message authentication is REQUIRED;\n- \"key generation\" occurs at the end entity (see Section 2.2.1.3);\n- a confirmation message is REQUIRED.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "In terms of message flow, the basic authenticated scheme is as follows:",
      "ja": "次のようにメッセージ・フローに関しては、基本的な認証方式です。"
    },
    {
      "indent": 6,
      "text": "End entity                                          RA/CA\n==========                                      =============\n     out-of-band distribution of Initial Authentication\n     Key (IAK) and reference value (RA/CA -> EE)\nKey generation\nCreation of certification request\nProtect request with IAK\n              -->>--certification request-->>--\n                                               verify request\n                                               process request\n                                               create response\n              --<<--certification response--<<--\nhandle response\ncreate confirmation\n              -->>--confirmation message-->>--\n                                               verify confirmation",
      "raw": true
    },
    {
      "indent": 3,
      "text": "(Where verification of the confirmation message fails, the RA/CA MUST revoke the newly issued certificate if it has been published or otherwise made available.)",
      "ja": "（確認メッセージの検証が失敗した場合は、それが公開またはそうでなければ利用可能になっている場合には、RA / CAは、新たに発行された証明書を取り消す必要があります。）"
    },
    {
      "indent": 0,
      "text": "2.3 Proof of Possession (POP) of Private Key",
      "section_title": true,
      "ja": "秘密鍵の所有（POP）の2.3証明"
    },
    {
      "indent": 3,
      "text": "In order to prevent certain attacks and to allow a CA/RA to properly check the validity of the binding between an end entity and a key pair, the PKI management operations specified here make it possible for an end entity to prove that it has possession of (i.e., is able to use) the private key corresponding to the public key for which a certificate is requested. A given CA/RA is free to choose how to enforce POP (e.g., out-of-band procedural means versus PKIX-CMP in-band messages) in its certification exchanges (i.e., this may be a policy issue). However, it is REQUIRED that CAs/RAs MUST enforce POP by some means because there are currently many non-PKIX operational protocols in use (various electronic mail protocols are one example) that do not explicitly check the binding between the end entity and the private key. Until operational protocols that do verify the binding (for signature, encryption, and key agreement key pairs) exist, and are ubiquitous, this binding can only be assumed to have been verified by the CA/RA. Therefore, if the binding is not verified by the CA/RA, certificates in the Internet Public-Key Infrastructure end up being somewhat less meaningful.",
      "ja": "特定の攻撃を防止し、CA / RAが適切にエンドエンティティと鍵ペア間の結合の有効性を確認できるようにするために、ここで指定したPKI管理操作は、それがの所持を持っていることを証明するために、エンドエンティティのためにそれを可能にします証明書が要求されている公開鍵に対応する秘密鍵（すなわち、使用することができます）。 （すなわち、これは、ポリシーの問題であってもよい）、その認証交換に（PKIX-CMPインバンドメッセージに対して、例えば、アウト・オブ・バンド手続き手段）CA / RAがPOPを適用する方法を自由に選択することが与えられました。しかし、現在使用中の多くの非PKIX運用プロトコル（様々な電子メールプロトコルは一例です）明示的にエンドエンティティとプライベートの間の結合をチェックしないことがあるので、CAは/ RASが何らかの手段でPOPを施行しなければならないことが必要とされますキー。 （署名、暗号化、および鍵合意鍵ペアのための）結合を確認するん運用プロトコルが存在し、かつユビキタスになるまで、この結合はCA / RAによって検証されているものとすることができます。結合がCA / RAによって検証されていない場合はそのため、インターネット公開鍵インフラストラクチャ内の証明書はややあまり意味になってしまいます。"
    },
    {
      "indent": 3,
      "text": "POP is accomplished in different ways depending upon the type of key for which a certificate is requested. If a key can be used for multiple purposes (e.g., an RSA key) then any appropriate method MAY be used (e.g., a key which may be used for signing, as well as other purposes, SHOULD NOT be sent to the CA/RA in order to prove possession).",
      "ja": "POPは、証明書が要求されたキーの種類に応じて異なる方法で達成されます。キーは、その後、任意の適切な方法を使用することができる複数の目的（例えば、RSA鍵）のために使用することができる場合（例えば、署名のために使用することができるキー、ならびに他の目的は、CA / RAに送信しません）所有を証明するためです。"
    },
    {
      "indent": 3,
      "text": "This specification explicitly allows for cases where an end entity supplies the relevant proof to an RA and the RA subsequently attests to the CA that the required proof has been received (and validated!). For example, an end entity wishing to have a signing key certified could send the appropriate signature to the RA which then simply notifies the relevant CA that the end entity has supplied the required proof. Of course, such a situation may be disallowed by some policies (e.g., CAs may be the only entities permitted to verify POP during certification).",
      "ja": "この仕様は、明示的にエンドエンティティがその後RAとRAに関連する証拠を提供し、必要な証拠が受信されたことをCAに証明（および検証！）例が可能になります。例えば、認定署名鍵を持っていることを望むエンドエンティティは、単にエンドエンティティは、必要な証拠を提供したことの関連CAを通知RAに適切な署名を送信することができます。もちろん、このような状況は、いくつかのポリシーで禁止することができる（例えば、CAはエンティティのみが認証中にPOPを検証できるようにしてもよいです）。"
    },
    {
      "indent": 0,
      "text": "2.3.1 Signature Keys",
      "section_title": true,
      "ja": "2.3.1署名鍵"
    },
    {
      "indent": 3,
      "text": "For signature keys, the end entity can sign a value to prove possession of the private key.",
      "ja": "署名鍵の場合、エンドエンティティは秘密鍵の所有を証明するために値を署名することができます。"
    },
    {
      "indent": 0,
      "text": "2.3.2 Encryption Keys",
      "section_title": true,
      "ja": "2.3.2暗号化キー"
    },
    {
      "indent": 3,
      "text": "For encryption keys, the end entity can provide the private key to the CA/RA, or can be required to decrypt a value in order to prove possession of the private key (see Section 3.2.8). Decrypting a value can be achieved either directly or indirectly.",
      "ja": "暗号化キーの場合は、エンドエンティティがCA / RAに秘密鍵を提供することができ、または（3.2.8項を参照）、秘密鍵の所有を証明するために、値を復号化するために必要なことができます。値を復号化する直接的または間接的に達成することができます。"
    },
    {
      "indent": 3,
      "text": "The direct method is for the RA/CA to issue a random challenge to which an immediate response by the EE is required.",
      "ja": "RA / CAがEEによって即時応答が必要とされているランダムなチャレンジを発行するための直接的な方法です。"
    },
    {
      "indent": 3,
      "text": "The indirect method is to issue a certificate which is encrypted for the end entity (and have the end entity demonstrate its ability to decrypt this certificate in the confirmation message). This allows a CA to issue a certificate in a form which can only be used by the intended end entity.",
      "ja": "間接的な方法は、エンドエンティティのために暗号化された証明書を発行（およびエンドエンティティが確認メッセージにこの証明書を復号化する能力を実証してい）することです。これは、CAが唯一の目的とするエンドエンティティで使用できる形式で証明書を発行することができます。"
    },
    {
      "indent": 3,
      "text": "This specification encourages use of the indirect method because this requires no extra messages to be sent (i.e., the proof can be demonstrated using the {request, response, confirmation} triple of messages).",
      "ja": "これは（すなわち、証明メッセージのトリプル{要求、応答、確認}を使用して実証することができる）送信する余分なメッセージを必要としないので、この仕様では、間接的な方法の使用を奨励します。"
    },
    {
      "indent": 0,
      "text": "2.3.3 Key Agreement Keys",
      "section_title": true,
      "ja": "2.3.3鍵共有キー"
    },
    {
      "indent": 3,
      "text": "For key agreement keys, the end entity and the PKI management entity (i.e., CA or RA) must establish a shared secret key in order to prove that the end entity has possession of the private key.",
      "ja": "鍵合意鍵の場合、エンドエンティティおよびPKI管理エンティティ（すなわち、CAまたはRA）は、エンドエンティティは秘密鍵の所有を持っていることを証明するために、共有秘密鍵を確立する必要があります。"
    },
    {
      "indent": 3,
      "text": "Note that this need not impose any restrictions on the keys that can be certified by a given CA -- in particular, for Diffie-Hellman keys the end entity may freely choose its algorithm parameters -- provided that the CA can generate a short-term (or one-time) key pair with the appropriate parameters when necessary.",
      "ja": "CAは、短期的に生成できることを提供 - 特に、のDiffie-Hellman鍵のためのエンドエンティティは自由にそのアルゴリズムのパラメータを選択することができます - これは、与えられたCAによって認証可能なキーに制限を課す必要はないことに注意してください必要なときに適切なパラメータを使用して（または1時間）鍵ペア。"
    },
    {
      "indent": 0,
      "text": "2.4 Root CA key update",
      "section_title": true,
      "ja": "2.4ルートCA鍵の更新"
    },
    {
      "indent": 3,
      "text": "This discussion only applies to CAs that are a root CA for some end entity.",
      "ja": "この議論は、いくつかのエンドエンティティのルートCAあるCASに適用されます。"
    },
    {
      "indent": 3,
      "text": "The basis of the procedure described here is that the CA protects its new public key using its previous private key and vice versa. Thus when a CA updates its key pair it must generate two extra cACertificate attribute values if certificates are made available using an X.500 directory (for a total of four: OldWithOld; OldWithNew; NewWithOld; and NewWithNew).",
      "ja": "ここで説明する手順の基本は、CAがその前の秘密鍵およびその逆を使用して、その新しい公開鍵を保護することです。 CAがその鍵ペアを更新したときにこのように、2つの追加のcaCertificateを生成しなければならない証明書場合は属性値が（4の合計：OldWithOld; OldWithNew; NewWithOld;およびNewWithNew）X.500ディレクトリを使用して利用可能となります。"
    },
    {
      "indent": 3,
      "text": "When a CA changes its key pair those entities who have acquired the old CA public key via \"out-of-band\" means are most affected. It is these end entities who will need access to the new CA public key protected with the old CA private key. However, they will only require this for a limited period (until they have acquired the new CA public key via the \"out-of-band\" mechanism). This will typically be easily achieved when these end entities' certificates expire.",
      "ja": "CAがその鍵ペアを変更する場合は、「アウトオブバンド」手段を介して、古いCA公開鍵を取得しているそれらのエンティティが最も影響を受けています。それは昔のCA秘密鍵で保護された新しいCA公開鍵にアクセスする必要がありますこれらのエンドエンティティです。 （彼らは「アウトオブバンド」機構を介して新しいCA公開鍵を取得するまで）しかし、彼らは限られた期間のためにこれが必要になります。これらのエンドエンティティの証明書の有効期限が切れるとき、これは一般的に容易に達成されます。"
    },
    {
      "indent": 3,
      "text": "The data structure used to protect the new and old CA public keys is a standard certificate (which may also contain extensions). There are no new data structures required.",
      "ja": "新旧CA公開鍵を保護するために使用されるデータ構造は、（また、拡張子を含んでいてもよい）の標準的な証明書です。必要な新しいデータ構造がありません。"
    },
    {
      "indent": 3,
      "text": "Note 1. This scheme does not make use of any of the X.509 v3 extensions as it must be able to work even for version 1 certificates. The presence of the KeyIdentifier extension would make for efficiency improvements.",
      "ja": "それも、バージョン1つの証明書のために働くことができなければならないよう注意1.この方式は、X.509 v3の拡張のいずれかを使用しません。 KeyIdentifier拡張の存在は、効率改善のためになるだろう。"
    },
    {
      "indent": 3,
      "text": "Note 2. While the scheme could be generalized to cover cases where the CA updates its key pair more than once during the validity period of one of its end entities' certificates, this generalization seems of dubious value. Not having this generalization simply means that the validity period of a CA key pair must be greater than the validity period of any certificate issued by that CA using that key pair.",
      "ja": "スキームは、CAはそのエンドエンティティの証明書の一つの有効期間中に何度もその鍵ペアの詳細を更新し、この一般化は、怪しげな値のようだ例をカバーするために一般化することができますが2に注意してください。この一般化は、単にCAの有効期間は、鍵のペアがその鍵ペアを使用して、そのCAが発行する証明書の有効期間よりも大きくなければならないことを意味したわけではありません。"
    },
    {
      "indent": 3,
      "text": "Note 3.This scheme forces end entities to acquire the new CA public key on the expiry of the last certificate they owned that was signed with the old CA private key (via the \"out-of-band\" means). Certificate and/or key update operations occurring at other times do not necessarily require this (depending on the end entity's equipment).",
      "ja": "彼らはそれが（「アウトオブバンド」手段を介して）古いCA秘密鍵で署名された所有最後の証明書の有効期限に関する新しいCA公開鍵を取得する3.このスキーム力のエンドエンティティに注意してください。他の時に発生した証明書および/または鍵の更新操作が必ずしも（エンドエンティティの機器に応じて）これを必要としません。"
    },
    {
      "indent": 0,
      "text": "2.4.1 CA Operator actions",
      "section_title": true,
      "ja": "2.4.1 CAオペレータの操作"
    },
    {
      "indent": 3,
      "text": "To change the key of the CA, the CA operator does the following:",
      "ja": "CAのキーを変更するには、CAオペレータは次のことを行います。"
    },
    {
      "indent": 6,
      "text": "1. Generate a new key pair;",
      "section_title": true,
      "ja": "1.新しい鍵ペアを生成します。"
    },
    {
      "indent": 6,
      "text": "2. Create a certificate containing the old CA public key signed with the new private key (the \"old with new\" certificate);",
      "ja": "2.（証明書「の新しいと古い」）新しい秘密鍵で署名した古いCA公開鍵を含む証明書を作成します。"
    },
    {
      "indent": 6,
      "text": "3. Create a certificate containing the new CA public key signed with the old private key (the \"new with old\" certificate);",
      "ja": "3.古い秘密鍵（証明書「古いと新しい」）に署名した新しいCA公開鍵を含む証明書を作成します。"
    },
    {
      "indent": 6,
      "text": "4. Create a certificate containing the new CA public key signed with the new private key (the \"new with new\" certificate);",
      "ja": "4.新しい秘密鍵で署名した新しいCA公開鍵を含む証明書を作成します（証明書「新持つ新しいです」）;"
    },
    {
      "indent": 6,
      "text": "5. Publish these new certificates via the directory and/or other means (perhaps using a CAKeyUpdAnn message);",
      "ja": "5.ディレクトリ及び/又は（おそらくCAKeyUpdAnnメッセージを使用して）他の手段を介して、これらの新しい証明書を公開します。"
    },
    {
      "indent": 6,
      "text": "6. Export the new CA public key so that end entities may acquire it using the \"out-of-band\" mechanism (if required).",
      "ja": "6.エクスポートエンドエンティティが（必要な場合）、「アウトオブバンド」のメカニズムを使用してそれを取得することができるように、新しいCA公開鍵。"
    },
    {
      "indent": 3,
      "text": "The old CA private key is then no longer required. The old CA public key will however remain in use for some time. The time when the old CA public key is no longer required (other than for non-repudiation) will be when all end entities of this CA have securely acquired the new CA public key.",
      "ja": "旧CA秘密鍵は、もはや必要とされません。古いCA公開鍵は、しかし、いくつかの時間のために使用中のままになります。このCAのすべてのエンドエンティティがしっかりと新しいCA公開鍵を取得しているとき（否認防止用以外の）古いCA公開鍵はもはや必要とされる時間になります。"
    },
    {
      "indent": 3,
      "text": "The \"old with new\" certificate must have a validity period starting at the generation time of the old key pair and ending at the expiry date of the old public key.",
      "ja": "「古いと新しい」証明書は、有効期間の古い鍵ペアの生成時に始まり、古い公開鍵の有効期限で終了している必要があります。"
    },
    {
      "indent": 3,
      "text": "The \"new with old\" certificate must have a validity period starting at the generation time of the new key pair and ending at the time by which all end entities of this CA will securely possess the new CA public key (at the latest, the expiry date of the old public key).",
      "ja": "「新しい古い」証明書は、有効期間、新しい鍵ペアの生成時に始まり、このCAのすべてのエンドエンティティは、遅くとも（新しいCA公開鍵を持って安全になることによって、時間で終了、有効期限を持っている必要があります古い公開鍵の日付）。"
    },
    {
      "indent": 3,
      "text": "The \"new with new\" certificate must have a validity period starting at the generation time of the new key pair and ending at the time by which the CA will next update its key pair.",
      "ja": "「新しい持つ新しい」証明書は、有効期間、新しい鍵ペアの生成時に始まり、CAは、次の鍵ペアを更新することにより、その時点で終了している必要があります。"
    },
    {
      "indent": 0,
      "text": "2.4.2 Verifying Certificates.",
      "section_title": true,
      "ja": "2.4.2確認証明書。"
    },
    {
      "indent": 3,
      "text": "Normally when verifying a signature, the verifier verifies (among other things) the certificate containing the public key of the signer. However, once a CA is allowed to update its key there are a range of new possibilities. These are shown in the table below.",
      "ja": "（とりわけ）、通常の署名を検証する、検証の検証署名者の公開鍵を含む証明書。しかし、一度CAは、新しい可能性の範囲があり、そのキーを更新することが許可されています。これらは、以下の表に示されています。"
    },
    {
      "indent": 15,
      "text": "Repository contains NEW     Repository contains only OLD\n  and OLD public keys        public key (due to, e.g.,\n                              delay in publication)",
      "raw": true
    },
    {
      "indent": 14,
      "text": " PSE PSE Contains PSE Contains PSE Contains Contains OLD public NEW public OLD public NEW public key key key key",
      "ja": "PSE PSEは、PSEは、PSEが含まれて含まれていOLD公共NEW OLD公共、公開NEW公開鍵キーキーキーが含まれています含まれてい"
    },
    {
      "indent": 3,
      "text": "Signer's Case 1: Case 3: Case 5: Case 7: certifi- This is In this case Although the In this case cate is the the verifier CA operator the CA protected standard must access has not operator has using NEW case where the updated the not updated public the directory in directory the the directory key verifier order to get verifier can and so the can the value of verify the verification directly the NEW certificate will FAIL verify the public key directly - certificate this is thus without the same as using the case 1. directory",
      "ja": "署名者のケース1：ケース3：ケース5：ケース7：この場合、ケイトは、CAは、標準の必須アクセスは、オペレータが更新されていないところNEWケースを使用しているしていない保護された検証のCAオペレータであるが、このcertifi-はこの場合でありますディレクトリができ、検証を取得するので、インクルードが検証を確認の値が直接新しい証明書を直接公開鍵を検証失敗することができ、ディレクトリキー検証のために更新され、公開ディレクトリ - この証明書はなしのでケース1を使用するのと同じです。ディレクトリ"
    },
    {
      "indent": 3,
      "text": "Signer's Case 2: Case 4: Case 6: Case 8: certifi- In this In this case The verifier Although the cate is case the the verifier thinks this CA operator protected verifier can directly is the has not using OLD must verify the situation of updated the public access the certificate case 2 and directory the key directory without will access verifier can in order using the the verify the to get the directory directory; certificate value of however, the directly - the OLD verification this is thus public key will FAIL the same as case 4.",
      "ja": "署名者のケース2：ケース4：ケース6：ケース8：この中certifi-この場合は、ケイトが、検証者は、検証者が保護された検証者が直接OLDを使用していないされてすることができ、このCAのオペレータは、更新の状況を検証しなければならないと考えた場合でありますパブリックアクセス証明書ケース2及びディレクトリキーディレクトリなしでは検証にアクセスすることができます順序でディレクトリのディレクトリを取得するために確認してください使用。しかしの証明書の値は、直接 - この古い検証は、公開鍵は、ケース4と同じように失敗することです。"
    },
    {
      "indent": 0,
      "text": "2.4.2.1 Verification in cases 1, 4, 5 and 8.",
      "section_title": true,
      "ja": "ケース1、図4、図5及び8で2.4.2.1検証。"
    },
    {
      "indent": 3,
      "text": "In these cases the verifier has a local copy of the CA public key which can be used to verify the certificate directly. This is the same as the situation where no key change has occurred.",
      "ja": "これらのケースでは、検証は、直接証明書を検証するために使用することができるCAの公開鍵のローカルコピーを持っています。これは何のキーの変更が発生していない状況と同じです。"
    },
    {
      "indent": 3,
      "text": "Note that case 8 may arise between the time when the CA operator has generated the new key pair and the time when the CA operator stores the updated attributes in the directory. Case 5 can only arise if the CA operator has issued both the signer's and verifier's certificates during this \"gap\" (the CA operator SHOULD avoid this as it leads to the failure cases described below).",
      "ja": "CAのオペレータは、新しいキーペアとCAオペレータが、ディレクトリ内の更新属性を格納する時間を生成したときの時間の間に生じることがあり、その場合8に注意してください。 CAのオペレータは、この「ギャップ」中に署名者と検証者の両方の証明書を発行した場合のケース5は（それが下記の失敗例につながるとして、CAのオペレータがこれを避ける必要があります）発生する可能性があります。"
    },
    {
      "indent": 0,
      "text": "2.4.2.2 Verification in case 2.",
      "section_title": true,
      "ja": "ケース2で2.4.2.2検証。"
    },
    {
      "indent": 3,
      "text": "In case 2 the verifier must get access to the old public key of the CA. The verifier does the following:",
      "ja": "ケース2では検証は、CAの古い公開鍵へのアクセスを取得する必要があります検証者は、次のことを行います。"
    },
    {
      "indent": 6,
      "text": "1. Look up the caCertificate attribute in the directory and pick\n   the OldWithNew certificate (determined based on validity\n   periods);\n2. Verify that this is correct using the new CA key (which the\n   verifier has locally);\n3. If correct, check the signer's certificate using the old CA\n   key.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Case 2 will arise when the CA operator has issued the signer's certificate, then changed key and then issued the verifier's certificate, so it is quite a typical case.",
      "ja": "CAのオペレータは、署名者の証明書を発行した際にケース2は、キーに変更して、検証の証明書を発行し、発生しますので、それは非常に典型的なケースです。"
    },
    {
      "indent": 0,
      "text": "2.4.2.3 Verification in case 3.",
      "section_title": true,
      "ja": "2.4.2.3検証ケース3インチ"
    },
    {
      "indent": 3,
      "text": "In case 3 the verifier must get access to the new public key of the CA. The verifier does the following:",
      "ja": "ケース3では検証は、CAの新しい公開鍵へのアクセスを取得する必要があります検証者は、次のことを行います。"
    },
    {
      "indent": 6,
      "text": "1. Look up the CACertificate attribute in the directory and pick\n   the NewWithOld certificate (determined based on validity\n   periods);\n2. Verify that this is correct using the old CA key (which the\n   verifier has stored locally);\n3. If correct, check the signer's certificate using the new CA\n   key.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Case 3 will arise when the CA operator has issued the verifier's certificate, then changed key and then issued the signer's certificate, so it is also quite a typical case.",
      "ja": "CAのオペレータが検証の証明書を発行した際にケース3は、キーに変更して、署名者の証明書を発行し、発生しますので、それはまた、非常に典型的なケースです。"
    },
    {
      "indent": 0,
      "text": "2.4.2.4 Failure of verification in case 6.",
      "section_title": true,
      "ja": "ケース6における検証の2.4.2.4失敗。"
    },
    {
      "indent": 3,
      "text": "In this case the CA has issued the verifier's PSE containing the new key without updating the directory attributes. This means that the verifier has no means to get a trustworthy version of the CA's old key and so verification fails.",
      "ja": "この場合、CAは、ディレクトリ属性を更新せずに新しい鍵を含む検証のPSEを発行しています。これは、検証がCAの古いキーの信頼できるバージョンを取得するための手段を持たないので、検証が失敗したことを意味します。"
    },
    {
      "indent": 3,
      "text": "Note that the failure is the CA operator's fault.",
      "ja": "障害がCAオペレータの障害であることに注意してください。"
    },
    {
      "indent": 0,
      "text": "2.4.2.5 Failure of verification in case 7.",
      "section_title": true,
      "ja": "ケース7における検証の2.4.2.5失敗。"
    },
    {
      "indent": 3,
      "text": "In this case the CA has issued the signer's certificate protected with the new key without updating the directory attributes. This means that the verifier has no means to get a trustworthy version of the CA's new key and so verification fails.",
      "ja": "この場合、CAは、ディレクトリ属性を更新せずに新しいキーで保護された署名者の証明書を発行しました。これは、検証がCAの新しいキーの信頼できるバージョンを取得するための手段を持たないので、検証が失敗したことを意味します。"
    },
    {
      "indent": 3,
      "text": "Note that the failure is again the CA operator's fault.",
      "ja": "障害が再びCAオペレータの障害であることに注意してください。"
    },
    {
      "indent": 0,
      "text": "2.4.3 Revocation - Change of CA key",
      "section_title": true,
      "ja": "2.4.3失効 -  CAキーの変更"
    },
    {
      "indent": 3,
      "text": "As we saw above the verification of a certificate becomes more complex once the CA is allowed to change its key. This is also true for revocation checks as the CA may have signed the CRL using a newer private key than the one that is within the user's PSE.",
      "ja": "CAは、そのキーを変更することが許可された後、我々は、証明書の検証の上に見たように、より複雑になります。 CAは、ユーザーのPSE内にあるものよりも新しい秘密鍵を使用してCRLに署名したことがあり、これは、失効チェックのためにも当てはまります。"
    },
    {
      "indent": 3,
      "text": "The analysis of the alternatives is as for certificate verification.",
      "ja": "代替案の分析は、証明書の検証のためのようです。"
    },
    {
      "indent": 0,
      "text": "3. Data Structures",
      "section_title": true,
      "ja": "3.データ構造"
    },
    {
      "indent": 3,
      "text": "This section contains descriptions of the data structures required for PKI management messages. Section 4 describes constraints on their values and the sequence of events for each of the various PKI management operations. Section 5 describes how these may be encapsulated in various transport mechanisms.",
      "ja": "このセクションでは、PKI管理メッセージのために必要なデータ構造の記述が含まれています。第4節では、それらの値の制約や、様々なPKI管理操作のそれぞれのイベントのシーケンスを説明します。セクション5は、これらは、様々な輸送メカニズムの中にカプセル化することができる方法を記載しています。"
    },
    {
      "indent": 0,
      "text": "3.1 Overall PKI Message",
      "section_title": true,
      "ja": "3.1全体的なPKIのメッセージ"
    },
    {
      "indent": 3,
      "text": "All of the messages used in this specification for the purposes of PKI management use the following structure:",
      "ja": "PKI管理の目的のために本明細書中で使用されるすべてのメッセージは、次の構造を使用します。"
    },
    {
      "indent": 5,
      "text": "PKIMessage ::= SEQUENCE {\n    header           PKIHeader,\n    body             PKIBody,\n    protection   [0] PKIProtection OPTIONAL,\n    extraCerts   [1] SEQUENCE SIZE (1..MAX) OF Certificate OPTIONAL\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The PKIHeader contains information which is common to many PKI messages.",
      "ja": "PKIHeaderは、多くのPKIメッセージに共通する情報が含まれています。"
    },
    {
      "indent": 3,
      "text": "The PKIBody contains message-specific information.",
      "ja": "PKIBodyは、メッセージ固有の情報が含まれています。"
    },
    {
      "indent": 3,
      "text": "The PKIProtection, when used, contains bits that protect the PKI message.",
      "ja": "使用PKIProtectionは、PKIメッセージを保護ビットを含みます。"
    },
    {
      "indent": 3,
      "text": "The extraCerts field can contain certificates that may be useful to the recipient. For example, this can be used by a CA or RA to present an end entity with certificates that it needs to verify its own new certificate (if, for example, the CA that issued the end entity's certificate is not a root CA for the end entity). Note that this field does not necessarily contain a certification path - the recipient may have to sort, select from, or otherwise process the extra certificates in order to use them.",
      "ja": "extraCertsフィールドは、受信者に有用である可能性がある証明書を含めることができます。例えば、エンドエンティティの証明書を発行したCAがエンドのルートCAではないが、たとえば、これは、独自の新しい証明書を検証する必要がある証明書を使用して、エンドエンティティ（存在するCAまたはRAで使用することができますエンティティ）。このフィールドは、必ずしも証明書パスが含まれていないことに注意してください - 受信者は、並べ替えから選択するか、そうでない場合はそれらを使用するためには、余分な証明書を処理する必要があります。"
    },
    {
      "indent": 0,
      "text": "3.1.1 PKI Message Header",
      "section_title": true,
      "ja": "3.1.1 PKIメッセージヘッダ"
    },
    {
      "indent": 3,
      "text": "All PKI messages require some header information for addressing and transaction identification. Some of this information will also be present in a transport-specific envelope; however, if the PKI message is protected then this information is also protected (i.e., we make no assumption about secure transport).",
      "ja": "すべてのPKIメッセージアドレッシングとトランザクション識別のためのいくつかのヘッダ情報を必要としています。この情報の一部はまた、トランスポート固有の封筒で存在するであろう。 PKIメッセージが保護されている場合しかし、その後、この情報も（すなわち、私たちは安全な輸送についての仮定をしない）保護されています。"
    },
    {
      "indent": 3,
      "text": "The following data structure is used to contain this information:",
      "ja": "次のようなデータ構造は、この情報を格納するために使用されます。"
    },
    {
      "indent": 5,
      "text": "PKIHeader ::= SEQUENCE {\n    pvno                INTEGER     { ietf-version2 (1) },\n    sender              GeneralName,\n    -- identifies the sender\n    recipient           GeneralName,\n    -- identifies the intended recipient\n    messageTime     [0] GeneralizedTime         OPTIONAL,\n    -- time of production of this message (used when sender\n    -- believes that the transport will be \"suitable\"; i.e.,\n    -- that the time will still be meaningful upon receipt)\n    protectionAlg   [1] AlgorithmIdentifier     OPTIONAL,\n    -- algorithm used for calculation of protection bits\n    senderKID       [2] KeyIdentifier           OPTIONAL,\n    recipKID        [3] KeyIdentifier           OPTIONAL,\n    -- to identify specific keys used for protection\n    transactionID   [4] OCTET STRING            OPTIONAL,\n    -- identifies the transaction; i.e., this will be the same in\n    -- corresponding request, response and confirmation messages\n    senderNonce     [5] OCTET STRING            OPTIONAL,\n    recipNonce      [6] OCTET STRING            OPTIONAL,\n    -- nonces used to provide replay protection, senderNonce",
      "raw": true
    },
    {
      "indent": 5,
      "text": " -- is inserted by the creator of this message; recipNonce -- is a nonce previously inserted in a related message by -- the intended recipient of this message freeText [7] PKIFreeText OPTIONAL, -- this may be used to indicate context-specific instructions -- (this field is intended for human consumption) generalInfo [8] SEQUENCE SIZE (1..MAX) OF InfoTypeAndValue OPTIONAL -- this may be used to convey context-specific information -- (this field not primarily intended for human consumption) }",
      "ja": " - このメッセージの作成者によって挿入されます。 recipNonce  - 以前にすることによって、関連するメッセージに挿入されたナンス - このメッセージフリーテキストの意図された受信者は、[7] PKIFreeText OPTIONALを、 - このコンテキスト固有の命令を示すために使用されてもよい - （このフィールドは、人間の消費のために意図されていますInfoTypeAndValue OPTIONAL OF）generalInfo [8] SEQUENCEサイズ（1..MAX） - このコンテキスト固有の情報を伝えるために使用されてもよい - （このフィールドは、主に人間の消費のために意図されていません）}"
    },
    {
      "indent": 5,
      "text": "PKIFreeText ::= SEQUENCE SIZE (1..MAX) OF UTF8String\n    -- text encoded as UTF-8 String (note:  each UTF8String SHOULD\n    -- include an RFC 1766 language tag to indicate the language\n    -- of the contained text)",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The pvno field is fixed (at one) for this version of this specification.",
      "ja": "PVNOフィールドは、この明細書のこのバージョンのために（1に）固定されています。"
    },
    {
      "indent": 3,
      "text": "The sender field contains the name of the sender of the PKIMessage. This name (in conjunction with senderKID, if supplied) should be usable to verify the protection on the message. If nothing about the sender is known to the sending entity (e.g., in the init. req. message, where the end entity may not know its own Distinguished Name (DN), e-mail name, IP address, etc.), then the \"sender\" field MUST contain a \"NULL\" value; that is, the SEQUENCE OF relative distinguished names is of zero length. In such a case the senderKID field MUST hold an identifier (i.e., a reference number) which indicates to the receiver the appropriate shared secret information to use to verify the message.",
      "ja": "送信者フィールドはPKIMessageの送信者の名前が含まれています。この名前は、（senderKIDと一緒に供給された場合）メッセージに保護を検証するために使用可能であるべきです。送信者に関する何も送信エンティティに知られていない場合（initの中など、。REQエンドエンティティは、など、独自の識別名（DN）、電子メール名、IPアドレスを知らないかもしれない。メッセージ、）、その後、 「送信者」欄には、「NULL」値を含まなければなりません。つまり、相対識別名のシーケンスは、長さがゼロです。このような場合にsenderKIDフィールドは、メッセージを検証するために使用する受信機に適切な共有秘密情報を示している（すなわち、参照番号）識別子を保持しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The recipient field contains the name of the recipient of the PKIMessage. This name (in conjunction with recipKID, if supplied) should be usable to verify the protection on the message.",
      "ja": "受信者フィールドはPKIMessageの受信者の名前が含まれています。この名前は、（recipKIDと一緒に供給された場合）メッセージに保護を検証するために使用可能であるべきです。"
    },
    {
      "indent": 3,
      "text": "The protectionAlg field specifies the algorithm used to protect the message. If no protection bits are supplied (note that PKIProtection is OPTIONAL) then this field MUST be omitted; if protection bits are supplied then this field MUST be supplied.",
      "ja": "protectionAlgフィールドは、メッセージを保護するために使用するアルゴリズムを指定します。いかなる保護ビットが供給されていない場合、このフィールドを省略しなければならない（PKIProtectionがオプションであることに留意されたいです）。保護ビットが供給されている場合は、このフィールドを指定する必要があります。"
    },
    {
      "indent": 3,
      "text": "senderKID and recipKID are usable to indicate which keys have been used to protect the message (recipKID will normally only be required where protection of the message uses Diffie-Hellman (DH) keys).",
      "ja": "senderKIDとrecipKIDは、（メッセージの保護は、ディフィー・ヘルマン（DH）鍵が使用recipKIDが正常にのみ必要とされる）メッセージを保護するために使用されているキーを示すために使用可能です。"
    },
    {
      "indent": 3,
      "text": "The transactionID field within the message header MAY be used to allow the recipient of a response message to correlate this with a previously issued request. For example, in the case of an RA there may be many requests \"outstanding\" at a given moment.",
      "ja": "メッセージヘッダ内のトランザクションIDフィールドは、応答メッセージの受信者が以前に発行されたリクエストでこれを相関できるようにするために使用されるかもしれません。例えば、RAの場合に与えられた瞬間に「優れた」多くの要求があるかもしれません。"
    },
    {
      "indent": 3,
      "text": "The senderNonce and recipNonce fields protect the PKIMessage against replay attacks.",
      "ja": "senderNonceとrecipNonceフィールドは、リプレイ攻撃に対するPKIMessageを保護します。"
    },
    {
      "indent": 3,
      "text": "The messageTime field contains the time at which the sender created the message. This may be useful to allow end entities to correct their local time to be consistent with the time on a central system.",
      "ja": "messageTimeフィールドは、送信者がメッセージを作成した時刻が含まれています。これは、エンドエンティティが中央システム上の時間と一致するように自分のローカル時間を修正することを可能にするために有用であり得ます。"
    },
    {
      "indent": 3,
      "text": "The freeText field may be used to send a human-readable message to the recipient (in any number of languages). The first language used in this sequence indicates the desired language for replies.",
      "ja": "フリーテキストフィールドは、（言語の任意の数の）受信者に人間が読めるメッセージを送信するために使用されてもよいです。このシーケンスで使用される第1言語は、応答のための所望の言語を示します。"
    },
    {
      "indent": 3,
      "text": "The generalInfo field may be used to send machine-processable additional data to the recipient.",
      "ja": "generalInfoフィールドは、受信者に機械処理の追加データを送信するために使用することができます。"
    },
    {
      "indent": 0,
      "text": "3.1.2 PKI Message Body",
      "section_title": true,
      "ja": "3.1.2 PKIメッセージ本文"
    },
    {
      "indent": 5,
      "text": "PKIBody ::= CHOICE {       -- message-specific body elements\n    ir      [0]  CertReqMessages,        --Initialization Request\n    ip      [1]  CertRepMessage,         --Initialization Response\n    cr      [2]  CertReqMessages,        --Certification Request\n    cp      [3]  CertRepMessage,         --Certification Response\n    p10cr   [4]  CertificationRequest,   --PKCS #10 Cert. Req.\n      -- the PKCS #10 certification request (see [PKCS10])\n    popdecc [5]  POPODecKeyChallContent, --pop Challenge\n    popdecr [6]  POPODecKeyRespContent,  --pop Response\n    kur     [7]  CertReqMessages,        --Key Update Request\n    kup     [8]  CertRepMessage,         --Key Update Response\n    krr     [9]  CertReqMessages,        --Key Recovery Request\n    krp     [10] KeyRecRepContent,       --Key Recovery Response\n    rr      [11] RevReqContent,          --Revocation Request\n    rp      [12] RevRepContent,          --Revocation Response\n    ccr     [13] CertReqMessages,        --Cross-Cert. Request\n    ccp     [14] CertRepMessage,         --Cross-Cert. Response\n    ckuann  [15] CAKeyUpdAnnContent,     --CA Key Update Ann.\n    cann    [16] CertAnnContent,         --Certificate Ann.\n    rann    [17] RevAnnContent,          --Revocation Ann.\n    crlann  [18] CRLAnnContent,          --CRL Announcement\n    conf    [19] PKIConfirmContent,      --Confirmation\n    nested  [20] NestedMessageContent,   --Nested Message\n    genm    [21] GenMsgContent,          --General Message\n    genp    [22] GenRepContent,          --General Response\n    error   [23] ErrorMsgContent         --Error Message\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The specific types are described in Section 3.3 below.",
      "ja": "特定のタイプは、以下のセクション3.3に記載されています。"
    },
    {
      "indent": 0,
      "text": "3.1.3 PKI Message Protection",
      "section_title": true,
      "ja": "3.1.3 PKIメッセージ保護"
    },
    {
      "indent": 3,
      "text": "Some PKI messages will be protected for integrity. (Note that if an asymmetric algorithm is used to protect a message and the relevant public component has been certified already, then the origin of message can also be authenticated. On the other hand, if the public component is uncertified then the message origin cannot be automatically authenticated, but may be authenticated via out-of-band means.)",
      "ja": "一部のPKIメッセージは、完全性のために保護されます。 （非対称アルゴリズムは、メッセージを保護するために使用され、関連するパブリックコンポーネントが既に認証された場合、パブリックコンポーネントは、メッセージの起源をすることはできません未承認である場合、メッセージの起源はまた、一方、認証することができることに注意してください自動的に認証が、アウトオブバンドの手段を介して認証することができます。）"
    },
    {
      "indent": 3,
      "text": "When protection is applied the following structure is used:",
      "ja": "保護が適用されると、以下の構造が使用されます。"
    },
    {
      "indent": 5,
      "text": "PKIProtection ::= BIT STRING",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The input to the calculation of PKIProtection is the DER encoding of the following data structure:",
      "ja": "PKIProtectionの計算への入力は、次のデータ構造のDER符号化です。"
    },
    {
      "indent": 5,
      "text": "ProtectedPart ::= SEQUENCE {\n    header    PKIHeader,\n    body      PKIBody\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "There MAY be cases in which the PKIProtection BIT STRING is deliberately not used to protect a message (i.e., this OPTIONAL field is omitted) because other protection, external to PKIX, will instead be applied. Such a choice is explicitly allowed in this specification. Examples of such external protection include PKCS #7 [PKCS7] and Security Multiparts [RFC1847] encapsulation of the PKIMessage (or simply the PKIBody (omitting the CHOICE tag), if the relevant PKIHeader information is securely carried in the external mechanism); specification of external protection using PKCS #7 will be provided in a separate document. It is noted, however, that many such external mechanisms require that the end entity already possesses a public-key certificate, and/or a unique Distinguished Name, and/or other such infrastructure-related information. Thus, they may not be appropriate for initial registration, key-recovery, or any other process with \"boot-strapping\" characteristics. For those cases it may be necessary that the PKIProtection parameter be used. In the future, if/when external mechanisms are modified to accommodate boot-strapping scenarios, the use of PKIProtection may become rare or non-existent.",
      "ja": "PKIX外部の他の保護が、代わりに適用されるので、PKIProtectionビット列は、意図的にメッセージを保護するために使用されない場合がある（すなわち、このオプションのフィールドは省略されます）。このような選択は、明示的にこの仕様で許可されています。 （関連PKIHeader情報が確実に外部機構で搬送された場合、または単にPKIBody（CHOICEタグを省略））、このような外部保護の例は、PKCS＃7 [PKCS7]とPKIMessageのセキュリティマルチパート[RFC1847]カプセル化を含みます。 PKCS＃7を使用して外部保護の仕様は別の文書で提供されます。多くのそのような外部のメカニズムは、エンドエンティティがすでに公開鍵証明書、および/または固有の識別名、および/またはその他などのインフラ関連の情報を保有することを要求すること、しかし、注意すべきです。このように、彼らは初期登録、キー・リカバリー、または「ブートストラップ」の特性を持つ他のプロセスのために適切でないかもしれません。そのような場合のために、PKIProtectionパラメータが使用されることが必要かもしれません。外部メカニズムはブートストラップのシナリオに対応するために変更されたとき/場合、将来的に、PKIProtectionの使用は稀なまたは非存在になることができます。"
    },
    {
      "indent": 3,
      "text": "Depending on the circumstances the PKIProtection bits may contain a Message Authentication Code (MAC) or signature. Only the following cases can occur:",
      "ja": "状況に応じてPKIProtectionビットは、メッセージ認証コード（MAC）または署名を含んでいてもよいです。次の場合のみが発生する可能性があります。"
    },
    {
      "indent": 3,
      "text": "- shared secret information",
      "ja": " - 共有秘密情報"
    },
    {
      "indent": 3,
      "text": "In this case the sender and recipient share secret information (established via out-of-band means or from a previous PKI management operation). PKIProtection will contain a MAC value and the protectionAlg will be the following:",
      "ja": "この場合、送信者と受信者の共有秘密情報（意味アウトオブバンドを介して、または以前のPKI管理操作から確立）。 PKIProtectionは、MAC値が含まれていますし、protectionAlgは次のようになります。"
    },
    {
      "indent": 5,
      "text": "PasswordBasedMac ::= OBJECT IDENTIFIER --{1 2 840 113533 7 66 13}\nPBMParameter ::= SEQUENCE {\n    salt                OCTET STRING,\n    owf                 AlgorithmIdentifier,\n    -- AlgId for a One-Way Function (SHA-1 recommended)\n    iterationCount      INTEGER,\n    -- number of times the OWF is applied\n    mac                 AlgorithmIdentifier\n    -- the MAC AlgId (e.g., DES-MAC, Triple-DES-MAC [PKCS11],\n}   -- or HMAC [RFC2104, RFC2202])",
      "raw": true
    },
    {
      "indent": 3,
      "text": "In the above protectionAlg the salt value is appended to the shared secret input. The OWF is then applied iterationCount times, where the salted secret is the input to the first iteration and, for each successive iteration, the input is set to be the output of the previous iteration. The output of the final iteration (called \"BASEKEY\" for ease of reference, with a size of \"H\") is what is used to form the symmetric key. If the MAC algorithm requires a K-bit key and K <= H, then the most significant K bits of BASEKEY are used. If K > H, then all of BASEKEY is used for the most significant H bits of the key, OWF(\"1\" || BASEKEY) is used for the next most significant H bits of the key, OWF(\"2\" || BASEKEY) is used for the next most significant H bits of the key, and so on, until all K bits have been derived. [Here \"N\" is the ASCII byte encoding the number N and \"||\" represents concatenation.]",
      "ja": "上記protectionAlgにソルト値は、共有シークレットの入力に付加されます。 OWFは、各連続する反復について、入力は前の反復の出力に設定され、塩漬け秘密は最初の反復に入力さiterationCount回印加されます。最後の反復（「H」の大きさで、参照を容易にするための「BASEKEY」と呼ばれる）の出力は、対称鍵を形成するために使用されるものです。 MACアルゴリズムは、Kビットの鍵とK <= Hを必要とする場合、次にBASEKEYの上位kビットが使用されます。 K> Hは、次いでBASEKEYの全てがキーの最上位Hビットに使用される場合、OWF（「1」|| BASEKEY）は、キー、OWF（「2」の次の最上位Hビットのために使用される||すべてのKビットが導出されるまでBASEKEY）が、ようにキーの次の最上位Hビットのために使用され、以下同様です。 [ここで、「N」は、数Nと「||」をコードするASCIIバイトであります連結を表します。]"
    },
    {
      "indent": 3,
      "text": "- DH key pairs",
      "ja": " -  DH鍵のペア"
    },
    {
      "indent": 3,
      "text": "Where the sender and receiver possess Diffie-Hellman certificates with compatible DH parameters, then in order to protect the message the end entity must generate a symmetric key based on its private DH key value and the DH public key of the recipient of the PKI message. PKIProtection will contain a MAC value keyed with this derived symmetric key and the protectionAlg will be the following:",
      "ja": "どこ送信者と受信者は、エンドエンティティは、その秘密DH鍵の値とPKIメッセージの受信者のDH公開鍵に基づいて対称鍵を生成しなければならないメッセージを保護するために、その後、互換性のDHパラメータとのDiffie-Hellman証明書を持っています。 PKIProtectionは、この導出対称鍵をキーMAC値が含まれていますし、protectionAlgは次のようになります。"
    },
    {
      "indent": 5,
      "text": "DHBasedMac ::= OBJECT IDENTIFIER --{1 2 840 113533 7 66 30}",
      "raw": true
    },
    {
      "indent": 5,
      "text": "DHBMParameter ::= SEQUENCE {\n    owf                 AlgorithmIdentifier,\n    -- AlgId for a One-Way Function (SHA-1 recommended)\n    mac                 AlgorithmIdentifier\n    -- the MAC AlgId (e.g., DES-MAC, Triple-DES-MAC [PKCS11],\n}   -- or HMAC [RFC2104, RFC2202])",
      "raw": true
    },
    {
      "indent": 3,
      "text": "In the above protectionAlg OWF is applied to the result of the Diffie-Hellman computation. The OWF output (called \"BASEKEY\" for ease of reference, with a size of \"H\") is what is used to form the symmetric key. If the MAC algorithm requires a K-bit key and K <= H, then the most significant K bits of BASEKEY are used. If K > H, then all of BASEKEY is used for the most significant H bits of the key, OWF(\"1\" || BASEKEY) is used for the next most significant H bits of the key, OWF(\"2\" || BASEKEY) is used for the next most significant H bits of the key, and so on, until all K bits have been derived. [Here \"N\" is the ASCII byte encoding the number N and \"||\" represents concatenation.]",
      "ja": "上記protectionAlg OWFでのDiffie-Hellman計算の結果に適用されます。 （「H」の大きさで、参照を容易にするため、「BASEKEY」と呼ばれる）OWF出力は、対称鍵を形成するために使用されるものです。 MACアルゴリズムは、Kビットの鍵とK <= Hを必要とする場合、次にBASEKEYの上位kビットが使用されます。 K> Hは、次いでBASEKEYの全てがキーの最上位Hビットに使用される場合、OWF（「1」|| BASEKEY）は、キー、OWF（「2」の次の最上位Hビットのために使用される||すべてのKビットが導出されるまでBASEKEY）が、ようにキーの次の最上位Hビットのために使用され、以下同様です。 [ここで、「N」は、数Nと「||」をコードするASCIIバイトであります連結を表します。]"
    },
    {
      "indent": 3,
      "text": "- signature",
      "ja": " - 署名"
    },
    {
      "indent": 3,
      "text": "Where the sender possesses a signature key pair it may simply sign the PKI message. PKIProtection will contain the signature value and the protectionAlg will be an AlgorithmIdentifier for a digital signature (e.g., md5WithRSAEncryption or dsaWithSha-1).",
      "ja": "送信者が署名鍵ペアを所有している場合は、それは単にPKIメッセージに署名することができます。 PKIProtectionは、署名値を含むであろうとprotectionAlgは、デジタル署名（例えば、md5WithRSAEncryption又はdsaWithSha-1）のためのAlgorithmIdentifierであろう。"
    },
    {
      "indent": 3,
      "text": "- multiple protection",
      "ja": " - 複数の保護"
    },
    {
      "indent": 3,
      "text": "In cases where an end entity sends a protected PKI message to an RA, the RA MAY forward that message to a CA, attaching its own protection (which MAY be a MAC or a signature, depending on the information and certificates shared between the RA and the CA). This is accomplished by nesting the entire message sent by the end entity within a new PKI message. The structure used is as follows.",
      "ja": "エンドエンティティは、RAに保護されたPKIメッセージを送信する場合には、RAはRAとの間で共有される情報と証明書に応じて、MAC又は署名することができる（独自の保護を取り付ける、CAにそのメッセージを転送することができるとCA）。これは、新しいPKIメッセージ内のエンドエンティティによって送信されたメッセージ全体を入れ子にすることによって達成されます。次のように使用された構造です。"
    },
    {
      "indent": 5,
      "text": "NestedMessageContent ::= PKIMessage",
      "raw": true
    },
    {
      "indent": 0,
      "text": "3.2 Common Data Structures",
      "section_title": true,
      "ja": "3.2一般的なデータ構造"
    },
    {
      "indent": 3,
      "text": "Before specifying the specific types that may be placed in a PKIBody we define some data structures that are used in more than one case.",
      "ja": "PKIBodyに配置することができる特定のタイプを指定する前に、我々は、複数のケースで使用されるいくつかのデータ構造を定義します。"
    },
    {
      "indent": 0,
      "text": "3.2.1 Requested Certificate Contents",
      "section_title": true,
      "ja": "3.2.1要求された証明書の内容"
    },
    {
      "indent": 3,
      "text": "Various PKI management messages require that the originator of the message indicate some of the fields that are required to be present in a certificate. The CertTemplate structure allows an end entity or RA to specify as much as it wishes about the certificate it requires. CertTemplate is identical to a Certificate but with all fields optional.",
      "ja": "様々なPKI管理メッセージは、メッセージの発信者が証明書に存在することが要求されるフィールドの一部を示していることを必要とします。 CertTemplateの構造は、エンドエンティティまたはRAは、それが必要となる証明書についての希望な限り多くを指定することができます。 CertTemplateの証明書ではなく、オプションのすべてのフィールドと同じです。"
    },
    {
      "indent": 3,
      "text": "Note that even if the originator completely specifies the contents of a certificate it requires, a CA is free to modify fields within the certificate actually issued. If the modified certificate is unacceptable to the requester, the Confirmation message may be withheld, or an Error Message may be sent (with a PKIStatus of \"rejection\").",
      "ja": "発信元が完全にそれが必要とする証明書の内容を指定した場合でも、CAは、実際に発行された証明書内のフィールドを自由に変更することに注意してください。修飾された証明書が要求者に受け入れられない場合、確認メッセージが保留されてもよいし、エラーメッセージ（「拒否」のPKIStatusで）送信することができます。"
    },
    {
      "indent": 3,
      "text": "See [CRMF] for CertTemplate syntax.",
      "ja": "CertTemplateの構文については、[CRMF]を参照してください。"
    },
    {
      "indent": 0,
      "text": "3.2.2 Encrypted Values",
      "section_title": true,
      "ja": "3.2.2暗号化された値"
    },
    {
      "indent": 3,
      "text": "Where encrypted values (restricted, in this specification, to be either private keys or certificates) are sent in PKI messages the EncryptedValue data structure is used.",
      "ja": "暗号化された値（秘密鍵や証明書のいずれかであることを、本明細書では、制限された）がEncryptedValueデータ構造が使用されているPKIメッセージで送信されている場合。"
    },
    {
      "indent": 3,
      "text": "See [CRMF] for EncryptedValue syntax.",
      "ja": "EncryptedValueの構文については、[CRMF]を参照してください。"
    },
    {
      "indent": 3,
      "text": "Use of this data structure requires that the creator and intended recipient respectively be able to encrypt and decrypt. Typically, this will mean that the sender and recipient have, or are able to generate, a shared secret key.",
      "ja": "このデータ構造を使用すると、作成者と受信者が、それぞれの暗号化と復号化できる必要があります。通常、これは、送信者と受信者が持っている、または、共有秘密鍵を生成することが可能であることを意味します。"
    },
    {
      "indent": 3,
      "text": "If the recipient of the PKIMessage already possesses a private key usable for decryption, then the encSymmKey field MAY contain a session key encrypted using the recipient's public key.",
      "ja": "PKIMessageの受信者がすでに解読のために使用可能な秘密鍵を所有している場合は、encSymmKeyフィールドは、受信者の公開鍵を使って暗号化されたセッション鍵を含むかもしれません。"
    },
    {
      "indent": 0,
      "text": "3.2.3 Status codes and Failure Information for PKI messages",
      "section_title": true,
      "ja": "PKIメッセージの3.2.3ステータスコードと障害情報"
    },
    {
      "indent": 3,
      "text": "All response messages will include some status information. The following values are defined.",
      "ja": "すべての応答メッセージは、一部のステータス情報が含まれます。次の値が定義されています。"
    },
    {
      "indent": 5,
      "text": "PKIStatus ::= INTEGER {\n    granted                (0),\n    -- you got exactly what you asked for\n    grantedWithMods        (1),\n    -- you got something like what you asked for; the\n    -- requester is responsible for ascertaining the differences\n    rejection              (2),\n    -- you don't get it, more information elsewhere in the message waiting                (3),\n    -- the request body part has not yet been processed,\n    -- expect to hear more later\n    revocationWarning      (4),\n    -- this message contains a warning that a revocation is\n    -- imminent\n    revocationNotification (5),\n    -- notification that a revocation has occurred\n    keyUpdateWarning       (6)\n    -- update already done for the oldCertId specified in\n    -- the key update request message\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Responders may use the following syntax to provide more information about failure cases.",
      "ja": "レスポンダは失敗例に関する詳細な情報を提供するために、次の構文を使用することができます。"
    },
    {
      "indent": 5,
      "text": "PKIFailureInfo ::= BIT STRING {\n-- since we can fail in more than one way!\n-- More codes may be added in the future if/when required.\n    badAlg           (0),\n    -- unrecognized or unsupported Algorithm Identifier\n    badMessageCheck  (1),\n    -- integrity check failed (e.g., signature did not verify)\n    badRequest       (2),\n    -- transaction not permitted or supported\n    badTime          (3),\n    -- messageTime was not sufficiently close to the system time,\n    -- as defined by local policy\n    badCertId        (4),\n    -- no certificate could be found matching the provided criteria\n    badDataFormat    (5),\n    -- the data submitted has the wrong format\n    wrongAuthority   (6),\n    -- the authority indicated in the request is different from the\n    -- one creating the response token\n    incorrectData    (7),\n    -- the requester's data is incorrect (used for notary services)\n    missingTimeStamp (8),\n    -- when the timestamp is missing but should be there (by policy)\n    badPOP           (9)\n    -- the proof-of-possession failed\n}\nPKIStatusInfo ::= SEQUENCE {\n    status        PKIStatus,\n    statusString  PKIFreeText     OPTIONAL,\n    failInfo      PKIFailureInfo  OPTIONAL\n}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "3.2.4 Certificate Identification",
      "section_title": true,
      "ja": "3.2.4証明書識別"
    },
    {
      "indent": 3,
      "text": "In order to identify particular certificates the CertId data structure is used.",
      "ja": "特定の証明書を識別するためにCertIdデータ構造が使用されます。"
    },
    {
      "indent": 3,
      "text": "See [CRMF] for CertId syntax.",
      "ja": "CertIdの構文については、[CRMF]を参照してください。"
    },
    {
      "indent": 0,
      "text": "3.2.5 \"Out-of-band\" root CA public key",
      "section_title": true,
      "ja": "3.2.5「アウト・オブ・バンド」ルートCAの公開鍵"
    },
    {
      "indent": 3,
      "text": "Each root CA must be able to publish its current public key via some \"out-of-band\" means. While such mechanisms are beyond the scope of this document, we define data structures which can support such mechanisms.",
      "ja": "各ルートCAは、いくつかの「アウトオブバンド」手段を介して、現在の公開鍵を公開することができなければなりません。そのようなメカニズムはこのドキュメントの範囲を超えていますが、我々はそのようなメカニズムをサポートすることが可能なデータ構造を定義します。"
    },
    {
      "indent": 3,
      "text": "There are generally two methods available: either the CA directly publishes its self-signed certificate; or this information is available via the Directory (or equivalent) and the CA publishes a hash of this value to allow verification of its integrity before use.",
      "ja": "一般的に二つの方法があります利用可能：いずれかのCAは、直接、その自己署名証明書を発行し、あるいは、この情報は、ディレクトリ（または同等）を介して利用可能であり、CAは使用前にその完全性の検証をできるようにするには、この値のハッシュを発行しています。"
    },
    {
      "indent": 5,
      "text": "OOBCert ::= Certificate",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The fields within this certificate are restricted as follows:",
      "ja": "次のようにこの証明書内のフィールドが制限されています："
    },
    {
      "indent": 3,
      "text": "- The certificate MUST be self-signed  (i.e., the signature must be\n  verifiable using the SubjectPublicKeyInfo field);\n- The subject and issuer fields MUST be identical;\n- If the subject field is NULL then both subjectAltNames and\n  issuerAltNames extensions MUST be present and have exactly the same\n  value;\n- The values of all other extensions must be suitable for a self-\n  signed certificate (e.g., key identifiers for subject and issuer\n  must be the same).",
      "raw": true
    },
    {
      "indent": 5,
      "text": "OOBCertHash ::= SEQUENCE {\n    hashAlg     [0] AlgorithmIdentifier     OPTIONAL,\n    certId      [1] CertId                  OPTIONAL,\n    hashVal         BIT STRING\n    -- hashVal is calculated over the self-signed\n    -- certificate with the identifier certID.\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The intention of the hash value is that anyone who has securely received the hash value (via the out-of-band means) can verify a self- signed certificate for that CA.",
      "ja": "ハッシュ値の意図は、そのCAの証明書に署名した（アウトオブバンド手段を介して）確実にハッシュ値を受信した誰もが自己を確認することができるということです"
    },
    {
      "indent": 0,
      "text": "3.2.6 Archive Options",
      "section_title": true,
      "ja": "3.2.6アーカイブのオプション"
    },
    {
      "indent": 3,
      "text": "Requesters may indicate that they wish the PKI to archive a private key value using the PKIArchiveOptions structure",
      "ja": "リクエスタは、彼らがPKIArchiveOptions構造を使用してプライベートキーの値をアーカイブするPKIを望むことを示してもよいです"
    },
    {
      "indent": 3,
      "text": "See [CRMF] for PKIArchiveOptions syntax.",
      "ja": "PKIArchiveOptionsの構文については、[CRMF]を参照してください。"
    },
    {
      "indent": 0,
      "text": "3.2.7 Publication Information",
      "section_title": true,
      "ja": "3.2.7出版情報"
    },
    {
      "indent": 3,
      "text": "Requesters may indicate that they wish the PKI to publish a certificate using the PKIPublicationInfo structure.",
      "ja": "リクエスタは、彼らがPKIPublicationInfo構造を使用して証明書を発行するPKIを望むことを示してもよいです。"
    },
    {
      "indent": 3,
      "text": "See [CRMF] for PKIPublicationInfo syntax.",
      "ja": "PKIPublicationInfoの構文については、[CRMF]を参照してください。"
    },
    {
      "indent": 0,
      "text": "3.2.8 Proof-of-Possession Structures",
      "section_title": true,
      "ja": "3.2.8実証の所有構造"
    },
    {
      "indent": 3,
      "text": "If the certification request is for a signing key pair (i.e., a request for a verification certificate), then the proof of possession of the private signing key is demonstrated through use of the POPOSigningKey structure.",
      "ja": "認証要求が署名鍵ペアのためのものである場合（すなわち、検証証明書の要求）を、次いで、秘密署名鍵の所有の証明はPOPOSigningKey構造を使用することによって実証されています。"
    },
    {
      "indent": 3,
      "text": "See [CRMF] for POPOSigningKey syntax, but note that POPOSigningKeyInput has the following semantic stipulations in this specification.",
      "ja": "POPOSigningKeyの構文については、[CRMF]を参照してください、しかしPOPOSigningKeyInputは、この仕様では、以下の意味上の規定を持っていることに注意してください。"
    },
    {
      "indent": 5,
      "text": "POPOSigningKeyInput ::= SEQUENCE {\n    authInfo            CHOICE {\n        sender              [0] GeneralName,\n        -- from PKIHeader (used only if an authenticated identity\n        -- has been established for the sender (e.g., a DN from a\n        -- previously-issued and currently-valid certificate))\n        publicKeyMAC        [1] PKMACValue\n        -- used if no authenticated GeneralName currently exists for\n        -- the sender; publicKeyMAC contains a password-based MAC\n        -- (using the protectionAlg AlgId from PKIHeader) on the\n        -- DER-encoded value of publicKey\n    },\n    publicKey           SubjectPublicKeyInfo    -- from CertTemplate\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "On the other hand, if the certification request is for an encryption key pair (i.e., a request for an encryption certificate), then the proof of possession of the private decryption key may be demonstrated in one of three ways.",
      "ja": "認証要求は、暗号鍵ペアのためのものである一方、（すなわち、暗号化証明書の要求が）、その後、秘密復号鍵の所有の証拠は、3つの方法のいずれかで示すことができます。"
    },
    {
      "indent": 6,
      "text": "1) By the inclusion of the private key (encrypted) in the CertRequest (in the PKIArchiveOptions control structure).",
      "ja": "1）PKIArchiveOptions制御構造におけるcertrequestコマンドで暗号化された秘密鍵（）（）を含めることによって。"
    },
    {
      "indent": 6,
      "text": "2) By having the CA return not the certificate, but an encrypted certificate (i.e., the certificate encrypted under a randomly-generated symmetric key, and the symmetric key encrypted under the public key for which the certification request is being made) -- this is the \"indirect\" method mentioned previously in Section 2.3.2. The end entity proves knowledge of the private decryption key to the CA by MACing the PKIConfirm message using a key derived from this symmetric key. [Note that if more than one CertReqMsg is included in the PKIMessage, then the CA uses a different symmetric key for each CertReqMsg and the MAC uses a key derived from the concatenation of all these keys.] The MACing procedure uses the PasswordBasedMac AlgId defined in Section 3.1.",
      "ja": "2）（CAないリターン証明書が、暗号化された証明書を有することにより、すなわち、ランダムに生成された対称鍵で暗号化証明書、および認証要求が行われている公開鍵で暗号化対称鍵） - このセクション2.3.2で前述した「間接的な」方法があります。エンドエンティティは、この対称鍵から派生鍵を使用してPKIConfirmメッセージをMACingことにより、CAに秘密復号鍵の知識を証明しています。 [複数CertReqMsgがPKIMessageに含まれている場合、CAは、各CertReqMsgに異なる対称鍵を使用し、MACは、すべてのこれらのキーの連結から導出鍵を使用することに注意してください。] MACing手順はで定義されたPasswordBasedMac AlgIdを使用3.1節。"
    },
    {
      "indent": 6,
      "text": "3) By having the end entity engage in a challenge-response protocol (using the messages POPODecKeyChall and POPODecKeyResp; see below) between CertReqMessages and CertRepMessage -- this is the \"direct\" method mentioned previously in Section 2.3.2. [This method would typically be used in an environment in which an RA verifies POP and then makes a certification request to the CA on behalf of the end entity. In such a scenario, the CA trusts the RA to have done POP correctly before the RA requests a certificate for the end entity.] The complete protocol then looks as follows (note that req' does not necessarily encapsulate req as a nested message):",
      "ja": "3）エンドエンティティを有することによってメッセージPOPODecKeyChallとPOPODecKeyRespを使用して（チャレンジ - レスポンスプロトコルに従事する;以下を参照のこと）CertReqMessagesとCertRepMessage間 - これは、セクション2.3.2に前述の「直接」法です。 [この方法は、典型的には、RAがPOPを検証して、エンドエンティティに代わってCAに証明書要求を行うする環境で使用されるだろう。このようなシナリオでは、CAは、RAは、エンドエンティティの証明書を要求する前に正しく行わPOPを持つようにRAを信頼する]（必ずしもネストされたメッセージとしてREQをカプセル化しないことREQ」に注意してください）以下のように完全なプロトコルは、その後に見えます。："
    },
    {
      "indent": 24,
      "text": "EE            RA            CA\n ---- req ---->\n <--- chall ---\n ---- resp --->\n               ---- req' --->\n               <--- rep -----\n               ---- conf --->\n <--- rep -----\n ---- conf --->",
      "raw": true
    },
    {
      "indent": 3,
      "text": "This protocol is obviously much longer than the 3-way exchange given in choice (2) above, but allows a local Registration Authority to be involved and has the property that the certificate itself is not actually created until the proof of possession is complete.",
      "ja": "このプロトコルは、はるかに長い上記の選択肢（2）で与えられた3ウェイ交換よりも明らかですが、地元の登録機関が関与することを可能にすると所持の証明が完了するまで、証明書自体は実際に作成されていない性質を持っています。"
    },
    {
      "indent": 3,
      "text": "If the cert. request is for a key agreement key (KAK) pair, then the POP can use any of the 3 ways described above for enc. key pairs, with the following changes: (1) the parenthetical text of bullet 2) is replaced with \"(i.e., the certificate encrypted under the symmetric key derived from the CA's private KAK and the public key for which the certification request is being made)\"; (2) the first parenthetical text of the challenge field of \"Challenge\" below is replaced with \"(using PreferredSymmAlg (see Appendix B6) and a symmetric key derived from the CA's private KAK and the public key for which the certification request is being made)\". Alternatively, the POP can use the POPOSigningKey structure given in [CRMF] (where the alg field is DHBasedMAC and the signature field is the MAC) as a fourth alternative for demonstrating POP if the CA already has a D-H certificate that is known to the EE.",
      "ja": "証明書の場合。要求が鍵合意鍵（KAK）ペアのためのものである場合、POPは、ENCのために、上述の3つの方法のいずれかを使用することができます。弾丸2の（1）の括弧のテキスト）に置き換えられている「（すなわち、CAの秘密KAK由来対称鍵と公開鍵で暗号化された証明書はそのための認証要求が行われている：次のように変更とキーのペア、 ） \"; （2）以下に置き換えている「チャレンジ」「のチャレンジフィールドの最初のカッコ内のテキストは（PreferredSymmAlgを使用して（付録B6）と認証要求が行われてされているCAの秘密KAKと公開鍵から導出対称鍵見ます）」。代替的に、POPは、CAが既にEEにはよく知られているDH証明書を持っている場合POPを実証するための第4の代替として（ALGフィールドがDHBasedMACと署名フィールドであるMACである）[CRMF]で与えられるPOPOSigningKey構造を使用することができ。"
    },
    {
      "indent": 3,
      "text": "The challenge-response messages for proof of possession of a private decryption key are specified as follows (see [MvOV97, p.404] for details). Note that this challenge-response exchange is associated with the preceding cert. request message (and subsequent cert. response and confirmation messages) by the nonces used in the PKIHeader and by the protection (MACing or signing) applied to the PKIMessage.",
      "ja": "秘密復号鍵を所有していることの証明のためのチャレンジ・レスポンス・メッセージは以下のように（詳細については、[MvOV97、p.404]を参照）が指定されています。このチャレンジ・レスポンス交換は、先行する証明書に関連付けられていることに注意してください。 PKIHeaderで使用されるノンスによって保護（MACingまたは署名）によって要求メッセージ（およびその後のCERT。応答及び確認メッセージ）PKIMessageに適用しました。"
    },
    {
      "indent": 5,
      "text": "POPODecKeyChallContent ::= SEQUENCE OF Challenge\n-- One Challenge per encryption key certification request (in the\n-- same order as these requests appear in CertReqMessages).",
      "raw": true
    },
    {
      "indent": 5,
      "text": "Challenge ::= SEQUENCE {\n    owf                 AlgorithmIdentifier  OPTIONAL,\n    -- MUST be present in the first Challenge; MAY be omitted in any\n    -- subsequent Challenge in POPODecKeyChallContent (if omitted,\n    -- then the owf used in the immediately preceding Challenge is\n    -- to be used).\n    witness             OCTET STRING,\n    -- the result of applying the one-way function (owf) to a\n    -- randomly-generated INTEGER, A.  [Note that a different\n    -- INTEGER MUST be used for each Challenge.]\n    challenge           OCTET STRING\n    -- the encryption (under the public key for which the cert.\n    -- request is being made) of Rand, where Rand is specified as\n    --   Rand ::= SEQUENCE {\n    --      int      INTEGER,\n    --       - the randomly-generated INTEGER A (above)\n    --      sender   GeneralName\n    --       - the sender's name (as included in PKIHeader)\n    --   }\n}",
      "raw": true
    },
    {
      "indent": 5,
      "text": "POPODecKeyRespContent ::= SEQUENCE OF INTEGER\n-- One INTEGER per encryption key certification request (in the\n-- same order as these requests appear in CertReqMessages).  The\n-- retrieved INTEGER A (above) is returned to the sender of the\n-- corresponding Challenge.",
      "raw": true
    },
    {
      "indent": 0,
      "text": "3.3 Operation-Specific Data Structures",
      "section_title": true,
      "ja": "3.3操作固有のデータ構造"
    },
    {
      "indent": 0,
      "text": "3.3.1 Initialization Request",
      "section_title": true,
      "ja": "3.3.1初期化要求"
    },
    {
      "indent": 3,
      "text": "An Initialization request message contains as the PKIBody an CertReqMessages data structure which specifies the requested certificate(s). Typically, SubjectPublicKeyInfo, KeyId, and Validity are the template fields which may be supplied for each certificate requested (see Appendix B profiles for further information). This message is intended to be used for entities first initializing into the PKI.",
      "ja": "初期化要求メッセージは、要求された証明書（複数可）を指定PKIBody CertReqMessagesデータ構造として含有します。典型的には、SubjectPublicKeyInfoで、鍵ID、および有効性は、要求された各証明書（詳細については、付録Bのプロファイルを参照）供給することができるテンプレートのフィールドがあります。このメッセージは、エンティティが最初にPKIに初期化するために使用されることを意図しています。"
    },
    {
      "indent": 3,
      "text": "See [CRMF] for CertReqMessages syntax.",
      "ja": "CertReqMessagesの構文については、[CRMF]を参照してください。"
    },
    {
      "indent": 0,
      "text": "3.3.2 Initialization Response",
      "section_title": true,
      "ja": "3.3.2初期応答"
    },
    {
      "indent": 3,
      "text": "An Initialization response message contains as the PKIBody an CertRepMessage data structure which has for each certificate requested a PKIStatusInfo field, a subject certificate, and possibly a private key (normally encrypted with a session key, which is itself encrypted with the protocolEncKey).",
      "ja": "初期化応答メッセージは、各証明書PKIStatusInfoフィールド、対象証明書、および場合によっては秘密鍵（通常はそれ自体がprotocolEncKeyで暗号化されたセッション鍵を用いて暗号化された）要求したPKIBody CertRepMessageデータ構造として含有します。"
    },
    {
      "indent": 3,
      "text": "See Section 3.3.4 for CertRepMessage syntax. Note that if the PKI Message Protection is \"shared secret information\" (see Section 3.1.3), then any certificate transported in the caPubs field may be directly trusted as a root CA certificate by the initiator.",
      "ja": "CertRepMessageの構文については、セクション3.3.4を参照してください。 PKIメッセージ保護は、その後caPubsフィールドに運ばすべての証明書は、直接イニシエータによってルートCA証明書として信頼することができる、（3.1.3項を参照してください）「秘密情報を共有」されている場合があります。"
    },
    {
      "indent": 0,
      "text": "3.3.3 Registration/Certification Request",
      "section_title": true,
      "ja": "3.3.3登録/証明書要求"
    },
    {
      "indent": 3,
      "text": "A Registration/Certification request message contains as the PKIBody a CertReqMessages data structure which specifies the requested certificates. This message is intended to be used for existing PKI entities who wish to obtain additional certificates.",
      "ja": "登録/認証要求メッセージはPKIBodyとして要求された証明書を指定するCertReqMessagesデータ構造が含まれています。このメッセージは、追加の証明書を取得したい既存のPKIエンティティのために使用されることを意図しています。"
    },
    {
      "indent": 3,
      "text": "See [CRMF] for CertReqMessages syntax.",
      "ja": "CertReqMessagesの構文については、[CRMF]を参照してください。"
    },
    {
      "indent": 3,
      "text": "Alternatively, the PKIBody MAY be a CertificationRequest (this structure is fully specified by the ASN.1 structure CertificationRequest given in [PKCS10]). This structure may be required for certificate requests for signing key pairs when interoperation with legacy systems is desired, but its use is strongly discouraged whenever not absolutely necessary.",
      "ja": "あるいは、PKIBodyはCertificationRequest（この構造は完全[PKCS10]で与えられたASN.1構造CertificationRequestによって指定されている）であってもよいです。この構造は、レガシーシステムとの相互運用が望まれますが、いつでも絶対に必要ではない、その使用が強く推奨されたときに鍵ペアに署名するための証明書要求のために必要となる場合があります。"
    },
    {
      "indent": 0,
      "text": "3.3.4 Registration/Certification Response",
      "section_title": true,
      "ja": "3.3.4登録/認証応答"
    },
    {
      "indent": 3,
      "text": "A registration response message contains as the PKIBody a CertRepMessage data structure which has a status value for each certificate requested, and optionally has a CA public key, failure information, a subject certificate, and an encrypted private key.",
      "ja": "登録応答メッセージはPKIBodyように要求された各証明書のステータス値を有するCertRepMessageデータ構造を含み、必要に応じてCA公開鍵、故障情報、対象証明書、及び暗号化された秘密鍵を有しています。"
    },
    {
      "indent": 2,
      "text": "CertRepMessage ::= SEQUENCE {\n    caPubs          [1] SEQUENCE SIZE (1..MAX) OF Certificate OPTIONAL,\n    response            SEQUENCE OF CertResponse\n}",
      "raw": true
    },
    {
      "indent": 2,
      "text": "CertResponse ::= SEQUENCE {\n    certReqId           INTEGER,\n    -- to match this response with corresponding request (a value\n    -- of -1 is to be used if certReqId is not specified in the\n    -- corresponding request)\n    status              PKIStatusInfo,\n    certifiedKeyPair    CertifiedKeyPair    OPTIONAL,\n    rspInfo             OCTET STRING        OPTIONAL\n    -- analogous to the id-regInfo-asciiPairs OCTET STRING defined\n    -- for regInfo in CertReqMsg [CRMF]\n}",
      "raw": true
    },
    {
      "indent": 2,
      "text": "CertifiedKeyPair ::= SEQUENCE {\n    certOrEncCert       CertOrEncCert,\n    privateKey      [0] EncryptedValue      OPTIONAL,\n    publicationInfo [1] PKIPublicationInfo  OPTIONAL\n}",
      "raw": true
    },
    {
      "indent": 2,
      "text": "CertOrEncCert ::= CHOICE {\n    certificate     [0] Certificate,\n    encryptedCert   [1] EncryptedValue\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Only one of the failInfo (in PKIStatusInfo) and certificate (in CertifiedKeyPair) fields can be present in each CertResponse (depending on the status). For some status values (e.g., waiting) neither of the optional fields will be present.",
      "ja": "のみ（PKIStatusInfoで）failInfo及び（CertifiedKeyPairで）証明書のいずれかのフィールドは、各CertResponse（状況に応じて）で存在することができます。一部のステータス値（例えば、待機中）のためのオプションフィールドのどちらが存在するであろう。"
    },
    {
      "indent": 3,
      "text": "Given an EncryptedCert and the relevant decryption key the certificate may be obtained. The purpose of this is to allow a CA to return the value of a certificate, but with the constraint that only the intended recipient can obtain the actual certificate. The benefit of this approach is that a CA may reply with a certificate even in the absence of a proof that the requester is the end entity which can use the relevant private key (note that the proof is not obtained until the PKIConfirm message is received by the CA). Thus the CA will not have to revoke that certificate in the event that something goes wrong with the proof of possession.",
      "ja": "EncryptedCertと証明書を取得することができる、関連する復号鍵が与えられました。この目的はなく、対象とする受信者だけが、実際の証明書を取得することができ制約と、CAは証明書の値を返すことができるようにすることです。このアプローチの利点は、CAも要求者が、関連する秘密鍵を使用することができ、エンドエンティティであることの証明が存在しない場合に証明書を使用して応答することができるということである（PKIConfirmメッセージがによって受信されるまで証拠が得られないことに注意してくださいCA）。したがって、CAは何かが所持の証拠とうまくいかないことをイベントでその証明書を失効させる必要はありません。"
    },
    {
      "indent": 0,
      "text": "3.3.5 Key update request content",
      "section_title": true,
      "ja": "3.3.5鍵更新要求内容"
    },
    {
      "indent": 3,
      "text": "For key update requests the CertReqMessages syntax is used. Typically, SubjectPublicKeyInfo, KeyId, and Validity are the template fields which may be supplied for each key to be updated. This message is intended to be used to request updates to existing (non-revoked and non-expired) certificates.",
      "ja": "鍵の更新要求の場合CertReqMessages構文が使用されています。典型的には、SubjectPublicKeyInfoで、鍵ID、および有効性は各キーを更新するために供給することができるテンプレートのフィールドがあります。このメッセージは、既存の（非取り消さおよび非期限切れの）証明書の更新を要求するために使用されることを意図しています。"
    },
    {
      "indent": 3,
      "text": "See [CRMF] for CertReqMessages syntax.",
      "ja": "CertReqMessagesの構文については、[CRMF]を参照してください。"
    },
    {
      "indent": 0,
      "text": "3.3.6 Key Update response content",
      "section_title": true,
      "ja": "3.3.6鍵更新応答内容"
    },
    {
      "indent": 3,
      "text": "For key update responses the CertRepMessage syntax is used. The response is identical to the initialization response.",
      "ja": "キー更新応答についてCertRepMessageの構文が使用されています。応答は、初期化応答と同じです。"
    },
    {
      "indent": 3,
      "text": "See Section 3.3.4 for CertRepMessage syntax.",
      "ja": "CertRepMessageの構文については、セクション3.3.4を参照してください。"
    },
    {
      "indent": 0,
      "text": "3.3.7 Key Recovery Request content",
      "section_title": true,
      "ja": "3.3.7キー回復要求内容"
    },
    {
      "indent": 3,
      "text": "For key recovery requests the syntax used is identical to the initialization request CertReqMessages. Typically, SubjectPublicKeyInfo and KeyId are the template fields which may be used to supply a signature public key for which a certificate is required (see Appendix B profiles for further information).",
      "ja": "キー回復要求に使用する構文は、初期化要求CertReqMessagesと同じです。典型的には、SubjectPublicKeyInfoで及び鍵IDは（詳細については、付録Bのプロファイルを参照）証明書が要求される署名公開鍵を供給するために使用することができるテンプレートフィールドです。"
    },
    {
      "indent": 3,
      "text": "See [CRMF] for CertReqMessages syntax. Note that if a key history is required, the requester must supply a Protocol Encryption Key control in the request message.",
      "ja": "CertReqMessagesの構文については、[CRMF]を参照してください。キー履歴が必要な場合は、要求者は、要求メッセージ内のプロトコルの暗号化キーコントロールを供給しなければならないことに注意してください。"
    },
    {
      "indent": 0,
      "text": "3.3.8 Key recovery response content",
      "section_title": true,
      "ja": "3.3.8キー回復応答内容"
    },
    {
      "indent": 3,
      "text": "For key recovery responses the following syntax is used. For some status values (e.g., waiting) none of the optional fields will be present.",
      "ja": "キー回復応答では、次の構文が使用されています。一部のステータス値のため（例えば、待機）オプションフィールドのいずれも存在しないであろう。"
    },
    {
      "indent": 5,
      "text": "KeyRecRepContent ::= SEQUENCE {\n    status          PKIStatusInfo,\n    newSigCert  [0] Certificate                   OPTIONAL,\n    caCerts     [1] SEQUENCE SIZE (1..MAX) OF\n                                 Certificate      OPTIONAL,\n    keyPairHist [2] SEQUENCE SIZE (1..MAX) OF\n                                 CertifiedKeyPair OPTIONAL\n}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "3.3.9 Revocation Request Content",
      "section_title": true,
      "ja": "3.3.9失効要求内容"
    },
    {
      "indent": 3,
      "text": "When requesting revocation of a certificate (or several certificates) the following data structure is used. The name of the requester is present in the PKIHeader structure.",
      "ja": "証明書（またはいくつかの証明書）の失効を要求するとき、次のデータ構造が使用されます。依頼者の名前がPKIHeader構造中に存在しています。"
    },
    {
      "indent": 5,
      "text": "RevReqContent ::= SEQUENCE OF RevDetails",
      "raw": true
    },
    {
      "indent": 5,
      "text": "RevDetails ::= SEQUENCE {\n    certDetails         CertTemplate,\n    -- allows requester to specify as much as they can about\n    -- the cert. for which revocation is requested\n    -- (e.g., for cases in which serialNumber is not available)\n    revocationReason    ReasonFlags      OPTIONAL,\n    -- the reason that revocation is requested\n    badSinceDate        GeneralizedTime  OPTIONAL,\n    -- indicates best knowledge of sender\n    crlEntryDetails     Extensions       OPTIONAL\n    -- requested crlEntryExtensions\n}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "3.3.10 Revocation Response Content",
      "section_title": true,
      "ja": "3.3.10失効応答内容"
    },
    {
      "indent": 3,
      "text": "The response to the above message. If produced, this is sent to the requester of the revocation. (A separate revocation announcement message MAY be sent to the subject of the certificate for which revocation was requested.)",
      "ja": "上記メッセージに対する応答。生成した場合、これは、失効の要求者に送信されます。 （別失効通知メッセージが失効要求された証明書のサブジェクトに送ってもよいです。）"
    },
    {
      "indent": 2,
      "text": "RevRepContent ::= SEQUENCE {\n    status        SEQUENCE SIZE (1..MAX) OF PKIStatusInfo,\n    -- in same order as was sent in RevReqContent\n    revCerts  [0] SEQUENCE SIZE (1..MAX) OF CertId OPTIONAL,\n    -- IDs for which revocation was requested (same order as status)\n    crls      [1] SEQUENCE SIZE (1..MAX) OF CertificateList  OPTIONAL\n    -- the resulting CRLs (there may be more than one)\n}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "3.3.11 Cross certification request content",
      "section_title": true,
      "ja": "3.3.11相互認証の要求内容"
    },
    {
      "indent": 3,
      "text": "Cross certification requests use the same syntax (CertReqMessages) as for normal certification requests with the restriction that the key pair MUST have been generated by the requesting CA and the private key MUST NOT be sent to the responding CA.",
      "ja": "相互認証要求は鍵のペアが要求するCAによって生成されている必要がありますし、プライベートキーが応答CAに送ってはいけません制限と通常の認証要求のためのと同じ構文（CertReqMessages）を使用します"
    },
    {
      "indent": 3,
      "text": "See [CRMF] for CertReqMessages syntax.",
      "ja": "CertReqMessagesの構文については、[CRMF]を参照してください。"
    },
    {
      "indent": 0,
      "text": "3.3.12 Cross certification response content",
      "section_title": true,
      "ja": "3.3.12相互認証応答内容"
    },
    {
      "indent": 3,
      "text": "Cross certification responses use the same syntax (CertRepMessage) as for normal certification responses with the restriction that no encrypted private key can be sent.",
      "ja": "相互認証応答には暗号化された秘密鍵が送信されないことができる制限付きの通常の認証応答のためのと同じ構文（CertRepMessage）を使用します。"
    },
    {
      "indent": 3,
      "text": "See Section 3.3.4 for CertRepMessage syntax.",
      "ja": "CertRepMessageの構文については、セクション3.3.4を参照してください。"
    },
    {
      "indent": 0,
      "text": "3.3.13 CA Key Update Announcement content",
      "section_title": true,
      "ja": "3.3.13 CA鍵の更新アナウンス内容"
    },
    {
      "indent": 3,
      "text": "When a CA updates its own key pair the following data structure MAY be used to announce this event.",
      "ja": "CAは、独自の鍵のペアを更新すると、次のデータ構造は、このイベントを発表するために使用されるかもしれません。"
    },
    {
      "indent": 2,
      "text": "CAKeyUpdAnnContent ::= SEQUENCE {\n    oldWithNew          Certificate, -- old pub signed with new priv\n    newWithOld          Certificate, -- new pub signed with old priv\n    newWithNew          Certificate  -- new pub signed with new priv\n}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "3.3.14 Certificate Announcement",
      "section_title": true,
      "ja": "3.3.14証明書のお知らせ"
    },
    {
      "indent": 3,
      "text": "This structure MAY be used to announce the existence of certificates.",
      "ja": "この構造は、証明書の存在を発表するために使用されるかもしれません。"
    },
    {
      "indent": 3,
      "text": "Note that this message is intended to be used for those cases (if any) where there is no pre-existing method for publication of certificates; it is not intended to be used where, for example, X.500 is the method for publication of certificates.",
      "ja": "証明書の公開のための既存の方法が存在しない場合、このメッセージは、（もしあれば）そのような場合に使用されることが意図されていることに注意してください。たとえば、X.500証明書の公開のための方法であり、使用されるものではありません。"
    },
    {
      "indent": 5,
      "text": "CertAnnContent ::= Certificate",
      "raw": true
    },
    {
      "indent": 0,
      "text": "3.3.15 Revocation Announcement",
      "section_title": true,
      "ja": "3.3.15失効お知らせ"
    },
    {
      "indent": 3,
      "text": "When a CA has revoked, or is about to revoke, a particular certificate it MAY issue an announcement of this (possibly upcoming) event.",
      "ja": "CAが失効し、または取り消すしようとしたとき、特定の証明書には、この（おそらく今後の）イベントの告知を発行することができます。"
    },
    {
      "indent": 5,
      "text": "RevAnnContent ::= SEQUENCE {\n    status              PKIStatus,\n    certId              CertId,\n    willBeRevokedAt     GeneralizedTime,\n    badSinceDate        GeneralizedTime,\n    crlDetails          Extensions  OPTIONAL\n    -- extra CRL details(e.g., crl number, reason, location, etc.)\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "A CA MAY use such an announcement to warn (or notify) a subject that its certificate is about to be (or has been) revoked. This would typically be used where the request for revocation did not come from the subject concerned.",
      "ja": "CAは、証明書がされようとしている（またはされている）失効被験者に警告（または通知）するためにそのようなアナウンスを使用するかもしれません。失効の要求が懸念対象から来ていなかったところでは、一般的に使用されます。"
    },
    {
      "indent": 3,
      "text": "The willBeRevokedAt field contains the time at which a new entry will be added to the relevant CRLs.",
      "ja": "willBeRevokedAtフィールドには、新しいエントリが、関連のCRLに追加する時刻が含まれています。"
    },
    {
      "indent": 0,
      "text": "3.3.16 CRL Announcement",
      "section_title": true,
      "ja": "3.3.16 CRLのお知らせ"
    },
    {
      "indent": 3,
      "text": "When a CA issues a new CRL (or set of CRLs) the following data structure MAY be used to announce this event.",
      "ja": "CAは新しいCRL（またはCRLのセット）を発行すると次のようなデータ構造、このイベントを発表するために使用されるかもしれません。"
    },
    {
      "indent": 5,
      "text": "CRLAnnContent ::= SEQUENCE OF CertificateList",
      "raw": true
    },
    {
      "indent": 0,
      "text": "3.3.17 PKI Confirmation content",
      "section_title": true,
      "ja": "3.3.17 PKI確認コンテンツ"
    },
    {
      "indent": 3,
      "text": "This data structure is used in three-way protocols as the final PKIMessage. Its content is the same in all cases - actually there is no content since the PKIHeader carries all the required information.",
      "ja": "このデータ構造は、最終PKIMessageとして三方プロトコルで使用されています。その内容は、すべての場合に同じである - 実際にPKIHeaderは、すべての必要な情報を運ぶので、何のコンテンツがありません。"
    },
    {
      "indent": 5,
      "text": "PKIConfirmContent ::= NULL",
      "raw": true
    },
    {
      "indent": 0,
      "text": "3.3.18 PKI General Message content",
      "section_title": true,
      "ja": "3.3.18 PKI一般的なメッセージの内容"
    },
    {
      "indent": 2,
      "text": "InfoTypeAndValue ::= SEQUENCE {\n    infoType               OBJECT IDENTIFIER,\n    infoValue              ANY DEFINED BY infoType  OPTIONAL\n}\n-- Example InfoTypeAndValue contents include, but are not limited to:\n--  { CAProtEncCert    = {id-it 1}, Certificate                     }\n--  { SignKeyPairTypes = {id-it 2}, SEQUENCE OF AlgorithmIdentifier }\n--  { EncKeyPairTypes  = {id-it 3}, SEQUENCE OF AlgorithmIdentifier }\n--  { PreferredSymmAlg = {id-it 4}, AlgorithmIdentifier             }\n--  { CAKeyUpdateInfo  = {id-it 5}, CAKeyUpdAnnContent              }\n--  { CurrentCRL       = {id-it 6}, CertificateList                 }\n-- where {id-it} = {id-pkix 4} = {1 3 6 1 5 5 7 4}\n-- This construct MAY also be used to define new PKIX Certificate\n-- Management Protocol request and response messages, or general-\n-- purpose (e.g., announcement) messages for future needs or for\n-- specific environments.",
      "raw": true
    },
    {
      "indent": 2,
      "text": "GenMsgContent ::= SEQUENCE OF InfoTypeAndValue\n-- May be sent by EE, RA, or CA (depending on message content).\n-- The OPTIONAL infoValue parameter of InfoTypeAndValue will typically\n-- be omitted for some of the examples given above.  The receiver is",
      "raw": true
    },
    {
      "indent": 2,
      "text": "-- free to ignore any contained OBJ. IDs that it does not recognize. -- If sent from EE to CA, the empty set indicates that the CA may send -- any/all information that it wishes.",
      "ja": " - どんな含まれているOBJを無視して自由に。それは認識していないIDを。 - 任意の/それは希望するすべての情報を -  EEからCAに送信された場合は、空のセットは、CAが送ることを示しています。"
    },
    {
      "indent": 0,
      "text": "3.3.19 PKI General Response content",
      "section_title": true,
      "ja": "3.3.19 PKI一般的な応答内容"
    },
    {
      "indent": 2,
      "text": "GenRepContent ::= SEQUENCE OF InfoTypeAndValue\n-- The receiver is free to ignore any contained OBJ. IDs that it does\n-- not recognize.",
      "raw": true
    },
    {
      "indent": 0,
      "text": "3.3.20 Error Message content",
      "section_title": true,
      "ja": "3.3.20エラーメッセージの内容"
    },
    {
      "indent": 5,
      "text": "ErrorMsgContent ::= SEQUENCE {\n    pKIStatusInfo          PKIStatusInfo,\n    errorCode              INTEGER           OPTIONAL,\n    -- implementation-specific error codes\n    errorDetails           PKIFreeText       OPTIONAL\n    -- implementation-specific error details\n}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "4. Mandatory PKI Management functions",
      "section_title": true,
      "ja": "4.必須PKI管理機能"
    },
    {
      "indent": 3,
      "text": "The PKI management functions outlined in Section 1 above are described in this section.",
      "ja": "上記のセクション1で概説PKI管理機能は、このセクションに記載されています。"
    },
    {
      "indent": 3,
      "text": "This section deals with functions that are \"mandatory\" in the sense that all end entity and CA/RA implementations MUST be able to provide the functionality described (perhaps via one of the transport mechanisms defined in Section 5). This part is effectively the profile of the PKI management functionality that MUST be supported.",
      "ja": "すべてのエンドエンティティおよびCA / RA実装は、（おそらくセクション5で定義された移送機構のうちの1つを介して）説明した機能を提供できなければならないという意味で「必須」である機能を有するこのセクションでは、ディール。この部分は、効果的にサポートしなければならないPKI管理機能のプロファイルです。"
    },
    {
      "indent": 3,
      "text": "Note that not all PKI management functions result in the creation of a PKI message.",
      "ja": "すべてではないPKI管理機能は、PKIメッセージが作成されることに注意してください。"
    },
    {
      "indent": 0,
      "text": "4.1 Root CA initialization",
      "section_title": true,
      "ja": "4.1ルートCAの初期化"
    },
    {
      "indent": 3,
      "text": "[See Section 1.2.2 for this document's definition of \"root CA\".]",
      "ja": "[「ルートCA」のこのドキュメントの定義については1.2.2項を参照してください。]"
    },
    {
      "indent": 3,
      "text": "A newly created root CA must produce a \"self-certificate\" which is a Certificate structure with the profile defined for the \"newWithNew\" certificate issued following a root CA key update.",
      "ja": "新しく作成されたルートCAは、ルートCA鍵の更新次発行の「newWithNew」証明書用に定義されたプロファイルを使用して証明書の構造である「自己証明書」を生成しなければなりません。"
    },
    {
      "indent": 3,
      "text": "In order to make the CA's self certificate useful to end entities that do not acquire the self certificate via \"out-of-band\" means, the CA must also produce a fingerprint for its public key. End entities that acquire this fingerprint securely via some \"out-of-band\" means can then verify the CA's self-certificate and hence the other attributes contained therein.",
      "ja": "「アウトオブバンド」手段を介して自己証明書を取得していないエンドエンティティにCAの自己証明書を有用にするために、CAはまた、その公開鍵のフィンガープリントを生成しなければなりません。いくつかの「アウトオブバンド」手段を介して安全にこのフィンガープリントを取得し、エンドエンティティは、CAの自己証明書とそれに含まれるので、他の属性を確認することができます。"
    },
    {
      "indent": 3,
      "text": "The data structure used to carry the fingerprint is the OOBCertHash.",
      "ja": "指紋を運ぶために使用されるデータ構造はOOBCertHashです。"
    },
    {
      "indent": 0,
      "text": "4.2 Root CA key update",
      "section_title": true,
      "ja": "4.2ルートCA鍵の更新"
    },
    {
      "indent": 3,
      "text": "CA keys (as all other keys) have a finite lifetime and will have to be updated on a periodic basis. The certificates NewWithNew, NewWithOld, and OldWithNew (see Section 2.4.1) are issued by the CA to aid existing end entities who hold the current self-signed CA certificate (OldWithOld) to transition securely to the new self-signed CA certificate (NewWithNew), and to aid new end entities who will hold NewWithNew to acquire OldWithOld securely for verification of existing data.",
      "ja": "（他のすべてのキーなど）CAキーは有限の寿命を持っており、定期的に更新する必要があります。証明書NewWithNew、NewWithOld、およびOldWithNewはNewWithNew（現在の自己署名CA証明書（OldWithOld）の新しい自己署名CA証明書を安全に移行するための保持既存のエンドエンティティを支援するためにCAによって発行されている（2.4.1項を参照してください） ）、および既存のデータの検証のためにしっかりOldWithOld取得するNewWithNewを保持する新しいエンドエンティティを支援します。"
    },
    {
      "indent": 0,
      "text": "4.3 Subordinate CA initialization",
      "section_title": true,
      "ja": "4.3下位CAの初期化"
    },
    {
      "indent": 3,
      "text": "[See Section 1.2.2 for this document's definition of \"subordinate CA\".]",
      "ja": "[「下位CA」のこのドキュメントの定義については1.2.2項を参照してください。]"
    },
    {
      "indent": 3,
      "text": "From the perspective of PKI management protocols the initialization of a subordinate CA is the same as the initialization of an end entity. The only difference is that the subordinate CA must also produce an initial revocation list.",
      "ja": "PKI管理の観点から下位CAの初期化が終了エンティティの初期設定と同じであるプロトコル。唯一の違いは、下位のCAはまた、最初の失効リストを生成しなければならないということです。"
    },
    {
      "indent": 0,
      "text": "4.4 CRL production",
      "section_title": true,
      "ja": "4.4 CRLの生産"
    },
    {
      "indent": 3,
      "text": "Before issuing any certificates a newly established CA (which issues CRLs) must produce \"empty\" versions of each CRL which is to be periodically produced.",
      "ja": "すべての証明書（CRLを発行）新しく設立されたCAを発行する前に、定期的に生産しようとする各CRLの「空」のバージョンを生成しなければなりません。"
    },
    {
      "indent": 0,
      "text": "4.5 PKI information request",
      "section_title": true,
      "ja": "4.5 PKI情報要求"
    },
    {
      "indent": 3,
      "text": "When a PKI entity (CA, RA, or EE) wishes to acquire information about the current status of a CA it MAY send that CA a request for such information.",
      "ja": "PKIエンティティ（CA、RA、またはEE）はCAの現在のステータスに関する情報を取得したい場合には、そのような情報のためにCAその要求を送信することができます。"
    },
    {
      "indent": 3,
      "text": "The CA must respond to the request by providing (at least) all of the information requested by the requester. If some of the information cannot be provided then an error must be conveyed to the requester.",
      "ja": "CAは、（少なくとも）依頼者から要求された情報のすべてを提供することにより、要求に応答しなければなりません。情報の一部はその後、提供することができない場合は、エラーが要求者に伝えなければなりません。"
    },
    {
      "indent": 3,
      "text": "If PKIMessages are used to request and supply this PKI information, then the request must be the GenMsg message, the response must be the GenRep message, and the error must be the Error message. These messages are protected using a MAC based on shared secret information (i.e., PasswordBasedMAC) or any other authenticated means (if the end entity has an existing certificate).",
      "ja": "PKIMessagesこのPKI情報要求と供給するために使用される場合、要求はGenMsgメッセージである必要があり、応答はGenRepメッセージでなければならず、エラーがエラーメッセージでなければなりません。これらのメッセージは、共有秘密情報（すなわち、PasswordBasedMAC）または任意の他の認証手段（エンドエンティティは、既存の証明書を持っている場合）に基づいたMACを使用して保護されています。"
    },
    {
      "indent": 0,
      "text": "4.6 Cross certification",
      "section_title": true,
      "ja": "4.6相互認証"
    },
    {
      "indent": 3,
      "text": "The requester CA is the CA that will become the subject of the cross-certificate; the responder CA will become the issuer of the cross-certificate.",
      "ja": "リクエスタCAは、相互認証の対象となるであろうCAです。レスポンダーCAは、相互認証の発行者となります。"
    },
    {
      "indent": 3,
      "text": "The requester CA must be \"up and running\" before initiating the cross-certification operation.",
      "ja": "依頼者CAは、相互認証作業を開始する前に「起動して実行」でなければなりません。"
    },
    {
      "indent": 0,
      "text": "4.6.1 One-way request-response scheme:",
      "section_title": true,
      "ja": "4.6.1一方向要求応答スキーム："
    },
    {
      "indent": 3,
      "text": "The cross-certification scheme is essentially a one way operation; that is, when successful, this operation results in the creation of one new cross-certificate. If the requirement is that cross-certificates be created in \"both directions\" then each CA in turn must initiate a cross-certification operation (or use another scheme).",
      "ja": "相互認証方式は、本質的に一方向の動作です。つまり、とき1新しいクロス証明書の作成に成功し、この操作は結果。要件は、相互認証が「両方向」で作成されることがある場合、順番に各CAは、相互認証の動作を開始（または別のスキームを使用）しなければなりません。"
    },
    {
      "indent": 3,
      "text": "This scheme is suitable where the two CAs in question can already verify each other's signatures (they have some common points of trust) or where there is an out-of-band verification of the origin of the certification request.",
      "ja": "このスキームは、問題の2つのCAは、すでにお互いの署名を検証することができます（彼らは信頼のいくつかの共通点を持っている）、または証明書要求の起源のアウトオブバンドの検証がある場合には適切な場合です。"
    },
    {
      "indent": 3,
      "text": "Detailed Description:",
      "ja": "詳細な説明："
    },
    {
      "indent": 3,
      "text": "Cross certification is initiated at one CA known as the responder. The CA administrator for the responder identifies the CA it wants to cross certify and the responder CA equipment generates an authorization code. The responder CA administrator passes this authorization code by out-of-band means to the requester CA administrator. The requester CA administrator enters the authorization code at the requester CA in order to initiate the on-line exchange.",
      "ja": "相互認証は、レスポンダとして知られている1つのCAで開始されます。応答者のためのCAの管理者は、それが証明横断したいCAを識別し、応答CA機器は、認証コードを生成します。応答CA管理者は、要求元CA管理者に意味アウト・オブ・バンドによるこの認証コードを渡します。要求元CAの管理者は、オンライン交換を開始するために、リクエスタCAの認証コードを入力します。"
    },
    {
      "indent": 3,
      "text": "The authorization code is used for authentication and integrity purposes. This is done by generating a symmetric key based on the authorization code and using the symmetric key for generating Message Authentication Codes (MACs) on all messages exchanged.",
      "ja": "認証コードは、認証と完全性の目的のために使用されます。これは、認証コードに基づいて対称鍵を生成し、交換されるすべてのメッセージにメッセージ認証コード（MAC）を生成するための対称鍵を用いて行われます。"
    },
    {
      "indent": 3,
      "text": "The requester CA initiates the exchange by generating a random number (requester random number). The requester CA then sends to the responder CA the cross certification request (ccr) message. The fields in this message are protected from modification with a MAC based on the authorization code.",
      "ja": "リクエスタCAは、乱数（リクエスタ乱数）を生成することにより、交換を開始します。リクエスタCAは、レスポンダCA相互認証要求（CCR）メッセージを送信します。このメッセージ内のフィールドは、認証コードに基づいてMACとの変更から保護されています。"
    },
    {
      "indent": 3,
      "text": "Upon receipt of the ccr message, the responder CA checks the protocol version, saves the requester random number, generates its own random number (responder random number) and validates the MAC. It then generates (and archives, if desired) a new requester certificate that contains the requester CA public key and is signed with the responder CA signature private key. The responder CA responds with the cross certification response (ccp) message. The fields in this message are protected from modification with a MAC based on the authorization code.",
      "ja": "CCRメッセージ、CAプロトコルのバージョンをチェックし、応答を受信すると、それ自身の乱数（レスポンダ乱数）を生成し、MACを検証し、要求元の乱数を保存します。 （必要に応じて、およびアーカイブ）その後、リクエスタCAの公開鍵が含まれており、レスポンダCA署名秘密鍵で署名された新しい要求者証明書が生成されます。レスポンダCAは、相互認証応答（CCP）メッセージで応答します。このメッセージ内のフィールドは、認証コードに基づいてMACとの変更から保護されています。"
    },
    {
      "indent": 3,
      "text": "Upon receipt of the ccp message, the requester CA checks that its own system time is close to the responder CA system time, checks the received random numbers and validates the MAC. The requester CA responds with the PKIConfirm message. The fields in this message are protected from modification with a MAC based on the authorization code. The requester CA writes the requester certificate to the Repository.",
      "ja": "CCPメッセージを受信すると、CAは、独自のシステム時刻がレスポンダCAシステム時間に近いことを確認リクエスタは、受信した乱数をチェックし、MACを検証します。依頼者CAはPKIConfirmメッセージで応答します。このメッセージ内のフィールドは、認証コードに基づいてMACとの変更から保護されています。依頼者CAは、リポジトリに依頼者証明書を書き込みます。"
    },
    {
      "indent": 3,
      "text": "Upon receipt of the PKIConfirm message, the responder CA checks the random numbers and validates the MAC.",
      "ja": "PKIConfirmメッセージを受信すると、レスポンダCAは、乱数をチェックし、MACを検証します。"
    },
    {
      "indent": 3,
      "text": "Notes:",
      "ja": "ノート："
    },
    {
      "indent": 3,
      "text": "1. The ccr message must contain a \"complete\" certification request, that is, all fields (including, e.g., a BasicConstraints extension) must be specified by the requester CA. 2. The ccp message SHOULD contain the verification certificate of the responder CA - if present, the requester CA must then verify this certificate (for example, via the \"out-of-band\" mechanism).",
      "ja": "1. CCRメッセージは、（BasicConstraints拡張機能などを含む）すべてのフィールドが要求元CAによって指定されなければならない、すなわち、「完全な」証明書要求を含んでいなければなりません2. CCPメッセージは、レスポンダCAの検証証明書を含む必要があります - 存在する場合、リクエスタCAは、次に、（例えば、「アウトオブバンド」機構を介して）、この証明書を検証しなければなりません。"
    },
    {
      "indent": 0,
      "text": "4.7 End entity initialization",
      "section_title": true,
      "ja": "4.7エンドエンティティの初期化"
    },
    {
      "indent": 3,
      "text": "As with CAs, end entities must be initialized. Initialization of end entities requires at least two steps:",
      "ja": "CAのと同じように、エンドエンティティは初期化する必要があります。エンドエンティティの初期化は、少なくとも2つの手順が必要です。"
    },
    {
      "indent": 6,
      "text": "- acquisition of PKI information - out-of-band verification of one root-CA public key",
      "ja": " -  PKI情報の取得 -  1ルートCAの公開鍵のアウトオブバンドの検証"
    },
    {
      "indent": 3,
      "text": "(other possible steps include the retrieval of trust condition information and/or out-of-band verification of other CA public keys).",
      "ja": "（他の可能な手順は、信託条件情報の検索及び/又は他のCAの公開鍵の帯域外検証を含みます）。"
    },
    {
      "indent": 0,
      "text": "4.7.1 Acquisition of PKI information",
      "section_title": true,
      "ja": "PKI情報の取得4.7.1"
    },
    {
      "indent": 3,
      "text": "The information REQUIRED is:",
      "ja": "必要な情報は以下のとおりです。"
    },
    {
      "indent": 6,
      "text": "- the current root-CA public key - (if the certifying CA is not a root-CA) the certification path from the root CA to the certifying CA together with appropriate revocation lists - the algorithms and algorithm parameters which the certifying CA supports for each relevant usage",
      "ja": " - 現在のルートCAの公開鍵 - 証明する（証明CAがルートCAでない場合）、ルートCAから証明書パスは一緒に適切な失効リストをCA  - 証明CAがごとにサポートするアルゴリズムとアルゴリズムパラメータ関連使い方"
    },
    {
      "indent": 3,
      "text": "Additional information could be required (e.g., supported extensions or CA policy information) in order to produce a certification request which will be successful. However, for simplicity we do not mandate that the end entity acquires this information via the PKI messages. The end result is simply that some certification requests may fail (e.g., if the end entity wants to generate its own encryption key but the CA doesn't allow that).",
      "ja": "追加情報は、成功する証明書要求を生成するために（例えば、拡張やCAポリシー情報をサポート）要求される可能性があります。しかし、簡単にするために、我々は、エンドエンティティがPKIメッセージを介してこの情報を取得することを強制しません。最終結果は（エンドエンティティは、独自の暗号化キーを生成したいが、CAはそれを許可しない場合、例えば）いくつかの認証要求が失敗する可能性があることだけです。"
    },
    {
      "indent": 3,
      "text": "The required information MAY be acquired as described in Section 4.5.",
      "ja": "4.5節で説明したように必要な情報を取得することができます。"
    },
    {
      "indent": 0,
      "text": "4.7.2 Out-of-Band Verification of Root-CA Key",
      "section_title": true,
      "ja": "4.7.2アウトオブバンドルート-CA鍵の検証"
    },
    {
      "indent": 3,
      "text": "An end entity must securely possess the public key of its root CA. One method to achieve this is to provide the end entity with the CA's self-certificate fingerprint via some secure \"out-of-band\" means. The end entity can then securely use the CA's self-certificate.",
      "ja": "エンドエンティティは、しっかりとそのルートCAの公開鍵を持っていなければなりませんこれを達成するための一つの方法は、いくつかの安全な「アウトオブバンド」手段を介してCAの自己証明書のフィンガープリントをエンドエンティティを提供することです。エンドエンティティは、しっかりとCAの自己証明書を使用することができます。"
    },
    {
      "indent": 3,
      "text": "See Section 4.1 for further details.",
      "ja": "詳細については、セクション4.1を参照してください。"
    },
    {
      "indent": 0,
      "text": "4.8 Certificate Request",
      "section_title": true,
      "ja": "4.8証明書要求"
    },
    {
      "indent": 3,
      "text": "An initialized end entity MAY request a certificate at any time (as part of an update procedure, or for any other purpose). This request will be made using the certification request (cr) message. If the end entity already possesses a signing key pair (with a corresponding verification certificate), then this cr message will typically be protected by the entity's digital signature. The CA returns the new certificate (if the request is successful) in a CertRepMessage.",
      "ja": "初期化エンドエンティティは（更新手順の一部として、または他の任意の目的のために）いつでも証明書を要求することができます。この要求は、認証要求（CR）メッセージを使用して行われます。エンドエンティティが既に（対応する検証証明書を使用して）署名鍵ペアを所有している場合、このCRメッセージは、典型的には、エンティティのデジタル署名によって保護されます。 CertRepMessageに（要求が成功した場合）、CAは新しい証明書を返します。"
    },
    {
      "indent": 0,
      "text": "4.9 Key Update",
      "section_title": true,
      "ja": "4.9キー更新"
    },
    {
      "indent": 3,
      "text": "When a key pair is due to expire the relevant end entity MAY request a key update - that is, it MAY request that the CA issue a new certificate for a new key pair. The request is made using a key update request (kur) message. If the end entity already possesses a signing key pair (with a corresponding verification certificate), then this message will typically be protected by the entity's digital signature. The CA returns the new certificate (if the request is successful) in a key update response (kup) message, which is syntactically identical to a CertRepMessage.",
      "ja": "鍵ペアは、関連するエンドエンティティを期限切れになると、キーの更新を要求することができる - つまり、それは、そのCAの問題新しい鍵ペアの新しい証明書を要求することができます。要求は鍵更新要求（KUR）メッセージを用いて行われます。エンドエンティティが既に（対応する検証証明書を使用して）署名鍵ペアを所有している場合、このメッセージは、典型的には、エンティティのデジタル署名によって保護されます。 CAが新しい証明書を返すCertRepMessageと構文的に同一である鍵更新応答（KUP）メッセージで（要求が成功した場合）。"
    },
    {
      "indent": 0,
      "text": "5. Transports",
      "section_title": true,
      "ja": "5.交通"
    },
    {
      "indent": 3,
      "text": "The transport protocols specified below allow end entities, RAs and CAs to pass PKI messages between them. There is no requirement for specific security mechanisms to be applied at this level if the PKI messages are suitably protected (that is, if the OPTIONAL PKIProtection parameter is used as specified for each message).",
      "ja": "下記の指定されたトランスポートプロトコルは、エンドエンティティ、RASおよびCAは、それらの間のPKIメッセージを渡すことができます。 PKIメッセージが適切に保護されている場合は、このレベルで適用される特定のセキュリティメカニズムのための要件は、（各メッセージに指定されたような任意PKIProtectionパラメータが使用されている場合には、である）がありません。"
    },
    {
      "indent": 0,
      "text": "5.1 File based protocol",
      "section_title": true,
      "ja": "5.1ファイルベースのプロトコル"
    },
    {
      "indent": 3,
      "text": "A file containing a PKI message MUST contain only the DER encoding of one PKI message, i.e., there MUST be no extraneous header or trailer information in the file.",
      "ja": "PKIメッセージを含むファイル、すなわち、ファイルには無関係ヘッダ又はトレーラ情報があってはならない、1つのPKIメッセージの唯一のDER符号化を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "Such files can be used to transport PKI messages using, e.g., FTP.",
      "ja": "このようなファイルは、例えば、FTPを使用したPKIメッセージを転送するために使用することができます。"
    },
    {
      "indent": 0,
      "text": "5.2 Direct TCP-Based Management Protocol",
      "section_title": true,
      "ja": "5.2直接TCPベースの管理プロトコル"
    },
    {
      "indent": 3,
      "text": "The following simple TCP-based protocol is to be used for transport of PKI messages. This protocol is suitable for cases where an end entity (or an RA) initiates a transaction and can poll to pick up the results.",
      "ja": "次のような単純なTCPベースのプロトコルは、PKIメッセージの輸送のために使用されるべきです。このプロトコルは、エンドエンティティ（またはRA）は、トランザクションを開始し、その結果を拾うためにポーリングすることができる場合に適しています。"
    },
    {
      "indent": 3,
      "text": "If a transaction is initiated by a PKI entity (RA or CA) then an end entity must either supply a listener process or be supplied with a polling reference (see below) in order to allow it to pick up the PKI message from the PKI management component.",
      "ja": "トランザクションがPKIエンティティ（RAまたはCA）によって開始される場合、エンドエンティティは、リスナー・プロセスを提供する必要がありますいずれかまたはポーリング基準を供給すること（下記参照）がPKI管理からPKIメッセージを拾うことを可能にするために成分。"
    },
    {
      "indent": 3,
      "text": "The protocol basically assumes a listener process on an RA or CA which can accept PKI messages on a well-defined port (port number 829). Typically an initiator binds to this port and submits the initial PKI message for a given transaction ID. The responder replies with a PKI message and/or with a reference number to be used later when polling for the actual PKI message response.",
      "ja": "プロトコルは、基本的に明確に定義されたポート（ポート番号829）にPKIメッセージを受け入れることができRAまたはCA上のリスナー・プロセスを想定しています。通常、イニシエータは、このポートに結合し、与えられたトランザクションIDの初期PKIメッセージを送信します。 PKIメッセージおよび/または実際のPKIメッセージ応答の際にポーリング後に使用する参照番号を有する応答返信。"
    },
    {
      "indent": 3,
      "text": "If a number of PKI response messages are to be produced for a given request (say if some part of the request is handled more quickly than another) then a new polling reference is also returned.",
      "ja": "PKI応答メッセージの数が与えられたリクエストのために生成する場合（要求の一部が他のよりも迅速に処理されている場合たとえば）、新しいポーリングリファレンスも返されます。"
    },
    {
      "indent": 3,
      "text": "When the final PKI response message has been picked up by the initiator then no new polling reference is supplied.",
      "ja": "最終的なPKI応答メッセージは、イニシエータによってピックアップされたときに新しいポーリング参照が供給されません。"
    },
    {
      "indent": 3,
      "text": "The initiator of a transaction sends a \"direct TCP-based PKI message\" to the recipient. The recipient responds with a similar message.",
      "ja": "トランザクションのイニシエータは、受信者に「直接TCPベースのPKIメッセージ」を送信します。受信者は、同様のメッセージで応答します。"
    },
    {
      "indent": 3,
      "text": "A \"direct TCP-based PKI message\" consists of:",
      "ja": "「直接TCPベースのPKIメッセージは」から構成されています。"
    },
    {
      "indent": 9,
      "text": "length (32-bits), flag (8-bits), value (defined below)",
      "ja": "長さ（32ビット）、フラグ（8ビット）、値（以下に定義）"
    },
    {
      "indent": 3,
      "text": "The length field contains the number of octets of the remainder of the message (i.e., number of octets of \"value\" plus one). All 32-bit values in this protocol are specified to be in network byte order.",
      "ja": "長さフィールドは、メッセージの残りのオクテット数を含み（すなわち、「値」を加えた一方のオクテットの数）。このプロトコルのすべての32ビット値は、ネットワークバイト順であることが規定されています。"
    },
    {
      "indent": 4,
      "text": "Message name flag value",
      "ja": "メッセージ名フラグ値"
    },
    {
      "indent": 4,
      "text": "pkiMsg '00'H DER-encoded PKI message",
      "ja": "pkiMsg「00'H DERでエンコードされたPKIのメッセージ"
    },
    {
      "indent": 4,
      "text": " -- PKI message pollRep '01'H polling reference (32 bits), time-to-check-back (32 bits) -- poll response where no PKI message response ready; use polling -- reference value (and estimated time value) for later polling pollReq '02'H polling reference (32 bits) -- request for a PKI message response to initial message negPollRep '03'H '00'H -- no further polling responses (i.e., transaction complete) partialMsgRep '04'H next polling reference (32 bits), time-to-check-back (32 bits), DER-encoded PKI message -- partial response to initial message plus new polling reference -- (and estimated time value) to use to get next part of response finalMsgRep '05'H DER-encoded PKI message -- final (and possibly sole) response to initial message errorMsgRep '06'H human readable error message -- produced when an error is detected (e.g., a polling reference is -- received which doesn't exist or is finished with)",
      "ja": " -  PKIメッセージpollRep「01'Hポーリングリファレンス（32ビット）、タイム・ツー・チェックバック（32ビット） - ポーリング応答なしPKIメッセージ応答準備。後ポーリングpollReqの基準値（推定時刻値） - ポーリングを使用する「02'Hポーリングリファレンス（32ビット） - 最初のメッセージnegPollRepにPKIメッセージ応答要求」03'H「00'H  - なし、さらにポーリング応答（すなわち、トランザクション完了）partialMsgRep「04'H次のポーリングリファレンス（32ビット）、タイム・トゥ・チェックバック（32ビット）、DERでエンコードされたPKIのメッセージ - 最初のメッセージに加えて、新たなポーリングの参照にパーシャルレスポンス -  - 「 - 最終の（そしておそらく唯一の）初期メッセージerrorMsgRepに応答05'H DER符号化されたPKIメッセージ」06'H人間が読めるエラーメッセージ - （推定時間値）は、次の応答finalMsgRepの一部を取得するために使用するときに生成しますエラーが検出された（例えば、ポーリング基準は、 - 存在しないかで終了した受信）"
    },
    {
      "indent": 3,
      "text": "Where a PKIConfirm message is to be transported (always from the initiator to the responder) then a pkiMsg message is sent and a negPollRep is returned.",
      "ja": "PKIConfirmメッセージは（常にイニシエータからレスポンダに）輸送される場合、次いでpkiMsgメッセージが送信され、negPollRepが返されます。"
    },
    {
      "indent": 3,
      "text": "The sequence of messages which can occur is then:",
      "ja": "発生する可能性がありますメッセージの順序は次のようになります。"
    },
    {
      "indent": 3,
      "text": "a) end entity sends pkiMsg and receives one of pollRep, negPollRep, partialMsgRep or finalMsgRep in response. b) end entity sends pollReq message and receives one of negPollRep, partialMsgRep, finalMsgRep or errorMsgRep in response.",
      "ja": "A）エンドエンティティがpkiMsgを送信し、応答pollRep、negPollRep、partialMsgRep又はfinalMsgRepのいずれかを受信します。 B）エンドエンティティがpollReqメッセージを送信し、応答negPollRep、partialMsgRep、finalMsgRep又はerrorMsgRepのいずれかを受信します。"
    },
    {
      "indent": 3,
      "text": "The \"time-to-check-back\" parameter is a 32-bit integer, defined to be the number of seconds which have elapsed since midnight, January 1, 1970, coordinated universal time. It provides an estimate of the time that the end entity should send its next pollReq.",
      "ja": "「タイム・トゥ・チェック・バック」パラメータは真夜中、1970年1月1日から経過した秒数、協定世界時であることを定義されている32ビットの整数、です。これは、エンドエンティティは、その次のpollReqを送信する必要があり、時間の推定値を提供します。"
    },
    {
      "indent": 0,
      "text": "5.3 Management Protocol via E-mail",
      "section_title": true,
      "ja": "Eメール経由で5.3管理プロトコル"
    },
    {
      "indent": 3,
      "text": "This subsection specifies a means for conveying ASN.1-encoded messages for the protocol exchanges described in Section 4 via Internet mail.",
      "ja": "ここでは、インターネットメールを介して、第4章に記載されているプロトコル交換のためのASN.1符号化されたメッセージを搬送するための手段を指定します。"
    },
    {
      "indent": 3,
      "text": "A simple MIME object is specified as follows.",
      "ja": "次のようにシンプルなMIMEオブジェクトが指定されています。"
    },
    {
      "indent": 6,
      "text": "Content-Type: application/pkixcmp Content-Transfer-Encoding: base64",
      "ja": "コンテンツタイプ：アプリケーション/ pkixcmpコンテンツ転送 - エンコード：BASE64"
    },
    {
      "indent": 6,
      "text": "<<the ASN.1 DER-encoded PKIX-CMP message, base64-encoded>>",
      "ja": "<< ASN.1 DERでエンコードされたPKIX-CMPメッセージ、base64エンコード>>"
    },
    {
      "indent": 3,
      "text": "This MIME object can be sent and received using common MIME processing engines and provides a simple Internet mail transport for PKIX-CMP messages. Implementations MAY wish to also recognize and use the \"application/x-pkixcmp\" MIME type (specified in earlier versions of this document) in order to support backward compatibility wherever applicable.",
      "ja": "このMIMEオブジェクトが送信され、受信した共通MIME処理エンジンを使用し、PKIX-CMPメッセージのためのシンプルなインターネットメールトランスポートを提供することができます。また、実装はどこに該当する下位互換性をサポートするために、（このドキュメントの以前のバージョンで指定）「アプリケーション/ X-pkixcmp」MIMEタイプを認識して使用することもできます。"
    },
    {
      "indent": 0,
      "text": "5.4 Management Protocol via HTTP",
      "section_title": true,
      "ja": "HTTP経由で5.4管理プロトコル"
    },
    {
      "indent": 3,
      "text": "This subsection specifies a means for conveying ASN.1-encoded messages for the protocol exchanges described in Section 4 via the HyperText Transfer Protocol.",
      "ja": "ここでは、ハイパーテキスト転送プロトコルを介して、第4章に記載されているプロトコル交換のためのASN.1符号化されたメッセージを搬送するための手段を指定します。"
    },
    {
      "indent": 3,
      "text": "A simple MIME object is specified as follows.",
      "ja": "次のようにシンプルなMIMEオブジェクトが指定されています。"
    },
    {
      "indent": 6,
      "text": "Content-Type: application/pkixcmp",
      "ja": "コンテンツタイプ：アプリケーション/ pkixcmp"
    },
    {
      "indent": 6,
      "text": "<<the ASN.1 DER-encoded PKIX-CMP message>>",
      "ja": "<< ASN.1 DERでエンコードされたPKIX-CMPメッセージ>>"
    },
    {
      "indent": 3,
      "text": "This MIME object can be sent and received using common HTTP processing engines over WWW links and provides a simple browser-server transport for PKIX-CMP messages. Implementations MAY wish to also recognize and use the \"application/x-pkixcmp\" MIME type (specified in earlier versions of this document) in order to support backward compatibility wherever applicable.",
      "ja": "このMIMEオブジェクトは、送受信されたWWWリンクを介して、共通のHTTP処理エンジンを使用し、PKIX-CMPメッセージのためのシンプルなブラウザとサーバ間の輸送を提供することができます。また、実装はどこに該当する下位互換性をサポートするために、（このドキュメントの以前のバージョンで指定）「アプリケーション/ X-pkixcmp」MIMEタイプを認識して使用することもできます。"
    },
    {
      "indent": 0,
      "text": "SECURITY CONSIDERATIONS",
      "ja": "セキュリティの考察"
    },
    {
      "indent": 3,
      "text": "This entire memo is about security mechanisms.",
      "ja": "この全体のメモは、セキュリティ・メカニズムについてです。"
    },
    {
      "indent": 3,
      "text": "One cryptographic consideration is worth explicitly spelling out. In the protocols specified above, when an end entity is required to prove possession of a decryption key, it is effectively challenged to decrypt something (its own certificate). This scheme (and many others!) could be vulnerable to an attack if the possessor of the decryption key in question could be fooled into decrypting an arbitrary challenge and returning the cleartext to an attacker. Although in this specification a number of other failures in security are required in order for this attack to succeed, it is conceivable that some future services (e.g., notary, trusted time) could potentially be vulnerable to such attacks. For this reason we re-iterate the general rule that implementations should be very careful about decrypting arbitrary \"ciphertext\" and revealing recovered \"plaintext\" since such a practice can lead to serious security vulnerabilities.",
      "ja": "一つの暗号化の考慮事項は、明示的に綴る価値があります。エンドエンティティは、復号鍵の所有を証明するために必要とされる時には、上記指定されたプロトコルで、それを効果的に何か（自身の証明書）を復号化するために挑戦しています。問題の復号鍵の所有者は、任意のチャレンジを復号化し、攻撃者に平文を返すにだまされることができれば、このスキーム（および他の多くは！）攻撃に対して脆弱である可能性があります。この仕様では、セキュリティの他の失敗の数が成功するには、この攻撃のために必要とされるが、いくつかの将来のサービス（例えば、公証人、信頼できる時間）は、潜在的な攻撃に対して脆弱であることが考えられます。このような理由から、私たちは、実装は、そのような練習は重大なセキュリティ上の脆弱性につながることができますので、「平文」を回復し、任意の「暗号文」を解読し、明らかに非常に注意しなければならない一般的なルールを、反復再。"
    },
    {
      "indent": 3,
      "text": "Note also that exposing a private key to the CA/RA as a proof-of-possession technique can carry some security risks (depending upon whether or not the CA/RA can be trusted to handle such material appropriately). Implementers are advised to exercise caution in selecting and using this particular POP mechanism.",
      "ja": "ノートも実証の所有技術としてCA / RAに秘密鍵を露出する（CA / RAが適切にそのような材料を処理するために信頼できるか否かに応じて）いくつかのセキュリティ上のリスクを運ぶことができます。実装者は、この特定のPOPメカニズムを選択し、使用する際に注意を払うことをお勧めします。"
    },
    {
      "indent": 0,
      "text": "References",
      "ja": "リファレンス"
    },
    {
      "indent": 3,
      "text": "[COR95] ISO/IEC JTC 1/SC 21, Technical Corrigendum 2 to ISO/IEC 9594-8: 1990 & 1993 (1995:E), July 1995.",
      "ja": "[COR95] ISO / IEC JTC 1 / SC 21、ISO / IECの技術的正誤表2 9594から8：1990＆1993（1995：E）、1995年7月。"
    },
    {
      "indent": 3,
      "text": "[CRMF] Myers, M., Adams, C., Solo, D. and D. Kemp, \"Certificate Request Message Format\", RFC 2511, March 1999.",
      "ja": "[CRMF]マイヤーズ、M.、アダムス、C.、ソロ、D.とD.ケンプ、 \"証明書要求メッセージ・フォーマット\"、RFC 2511、1999年3月。"
    },
    {
      "indent": 3,
      "text": "[MvOV97] A. Menezes, P. van Oorschot, S. Vanstone, \"Handbook of Applied Cryptography\", CRC Press, 1997.",
      "ja": "【MvOV97] A.メネゼス、P.バンOorschot、S. Vanstone著、 \"応用暗号のハンドブック\"、CRCプレス、1997。"
    },
    {
      "indent": 3,
      "text": "[PKCS7] RSA Laboratories, \"The Public-Key Cryptography Standards (PKCS)\", RSA Data Security Inc., Redwood City, California, November 1993 Release.",
      "ja": "[PKCS7] RSA Laboratories社、 \"公開鍵暗号規格（PKCS）\"、RSAデータセキュリティ社は、カリフォルニア州レッドウッド・シティ、1993年11月リリース。"
    },
    {
      "indent": 3,
      "text": "[PKCS10] RSA Laboratories, \"The Public-Key Cryptography Standards (PKCS)\", RSA Data Security Inc., Redwood City, California, November 1993 Release.",
      "ja": "[PKCS10] RSA Laboratories社、 \"公開鍵暗号規格（PKCS）\"、RSAデータセキュリティ社は、カリフォルニア州レッドウッド・シティ、1993年11月リリース。"
    },
    {
      "indent": 3,
      "text": "[PKCS11] RSA Laboratories, \"The Public-Key Cryptography Standards - PKCS #11: Cryptographic token interface standard\", RSA Data Security Inc., Redwood City, California, April 28, 1995.",
      "ja": "[PKCS11] RSA Laboratories社、 \"公開鍵暗号規格 -  PKCS＃11：暗号トークンインタフェース標準\"、RSAデータセキュリティ社は、カリフォルニア州レッドウッド・シティ、1995年4月28日。"
    },
    {
      "indent": 3,
      "text": "[RFC1847] Galvin, J., Murphy, S. Crocker, S. and N. Freed, \"Security Multiparts for MIME: Multipart/Signed and Multipart/ Encrypted\", RFC 1847, October 1995.",
      "ja": "[RFC1847]ガルビン、J.、マーフィー、S.クロッカー、S.およびN.フリード、 \"MIMEマルチパートのセキュリティ：マルチパート/署名およびマルチパート/暗号化\"、RFC 1847、1995年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC2104] Krawczyk, H., Bellare, M. and R. Canetti, \"HMAC: Keyed Hashing for Message Authentication\", RFC 2104, February 1997.",
      "ja": "[RFC2104] Krawczyk、H.、ベラー、M。およびR.カネッティ、 \"HMAC：メッセージ認証のための鍵付きハッシュ\"、RFC 2104、1997年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC2202] Cheng, P. and R. Glenn, \"Test Cases for HMAC-MD5 and HMAC-SHA-1\", RFC 2202, September 1997.",
      "ja": "[RFC2202]チェン、P.およびR.グレン、 \"HMAC-MD5とHMAC-SHA-1のテストケース\"、RFC 2202、1997年9月。"
    },
    {
      "indent": 3,
      "text": "[X509-AM] ISO/IEC JTC1/SC 21, Draft Amendments DAM 4 to ISO/IEC 9594-2, DAM 2 to ISO/IEC 9594-6, DAM 1 to ISO/IEC 9594-7, and DAM 1 to ISO/IEC 9594-8 on Certificate Extensions, 1 December, 1996.",
      "ja": "[X509-AM] ISO / IEC JTC1 / SC 21、改正案ダム4は、ISO / IEC 9594から2、DAM 2にISO / IEC 9594から6、DAM 1にISO / IEC 9594から7、およびISOへDAM 1〜証明書の拡張機能のオン/ IEC 9594から8、1996年12月1日。"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "The authors gratefully acknowledge the contributions of various members of the PKIX Working Group. Many of these contributions significantly clarified and improved the utility of this specification.",
      "ja": "作者は感謝してPKIXワーキンググループの様々なメンバーの貢献を認めます。これらの貢献の多くは、大幅にこの仕様の有用性を明らかにし、改善されました。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Carlisle Adams Entrust Technologies 750 Heron Road, Suite E08, Ottawa, Ontario Canada K1V 1A7",
      "ja": "カーライルアダムスエントラストテクノロジーズ750ヘロン道路、スイートE08、オタワ、オンタリオカナダK1V 1A7"
    },
    {
      "indent": 3,
      "text": "EMail: cadams@entrust.com",
      "ja": "メールアドレス：cadams@entrust.com"
    },
    {
      "indent": 3,
      "text": "Stephen Farrell Software and Systems Engineering Ltd. Fitzwilliam Court Leeson Close Dublin 2 IRELAND",
      "ja": "スティーブン・ファレルソフトウェアおよびシステムエンジニアリング株式会社フィッツウィリアム裁判所リーソン閉じるダブリンアイルランド"
    },
    {
      "indent": 3,
      "text": "EMail: stephen.farrell@sse.ie",
      "ja": "メールアドレス：stephen.farrell@sse.ie"
    },
    {
      "indent": 0,
      "text": "APPENDIX A: Reasons for the presence of RAs",
      "ja": "付録A：Rasの存在理由"
    },
    {
      "indent": 3,
      "text": "The reasons which justify the presence of an RA can be split into those which are due to technical factors and those which are organizational in nature. Technical reasons include the following.",
      "ja": "RAの存在を正当化する理由は技術的要因と自然の中で組織的なものに起因しているものに分けることができます。技術的な理由は以下のものが挙げられます。"
    },
    {
      "indent": 5,
      "text": "-If hardware tokens are in use, then not all end entities will have the equipment needed to initialize these; the RA equipment can include the necessary functionality (this may also be a matter of policy).",
      "ja": "ハードウェア・トークンが使用されている-IF、そしてないすべてのエンドエンティティは、これらを初期化するために必要な設備を持っています。 RA機器は、必要な機能を（これはまた、ポリシーの問題かもしれない）含めることができます。"
    },
    {
      "indent": 5,
      "text": "-Some end entities may not have the capability to publish certificates; again, the RA may be suitably placed for this.",
      "ja": " - 一部のエンドエンティティ証明書を発行する機能を持っていないかもしれません。再び、RAは、適切にこれを配置することができます。"
    },
    {
      "indent": 5,
      "text": "-The RA will be able to issue signed revocation requests on behalf of end entities associated with it, whereas the end entity may not be able to do this (if the key pair is completely lost).",
      "ja": "エンドエンティティは、これを行うことができない場合がある（鍵ペアが完全に失われた場合）-The RAは、それに関連付けられたエンドエンティティに代わって署名した失効要求を発行することができるようになります。"
    },
    {
      "indent": 3,
      "text": "Some of the organizational reasons which argue for the presence of an RA are the following.",
      "ja": "RAの存在を主張する組織的な理由のいくつかは、以下の通りです。"
    },
    {
      "indent": 5,
      "text": "-It may be more cost effective to concentrate functionality in the RA equipment than to supply functionality to all end entities (especially if special token initialization equipment is to be used).",
      "ja": " - それは、（特殊トークン初期化装置を使用する場合は特に）すべてのエンドエンティティに機能を供給するよりも、RA機器に機能を集中するために有効な、よりコストとすることができます。"
    },
    {
      "indent": 5,
      "text": "-Establishing RAs within an organization can reduce the number of CAs required, which is sometimes desirable.",
      "ja": "組織内のRAS -Establishingすることが望ましい場合がある必要なCAの数を減らすことができます。"
    },
    {
      "indent": 5,
      "text": "-RAs may be better placed to identify people with their \"electronic\" names, especially if the CA is physically remote from the end entity.",
      "ja": "-RASは良くCAは、エンドエンティティから物理的に離れている場合は特に、彼らの「電子」の名前を持つ人々を識別するために配置することができます。"
    },
    {
      "indent": 5,
      "text": "-For many applications there will already be in place some administrative structure so that candidates for the role of RA are easy to find (which may not be true of the CA).",
      "ja": "RAの役割のための候補は（CAの真実ではない場合もある）を見つけることは容易になるように、多くのアプリケーション-forすでに場所にいくつかの行政構造が存在します。"
    },
    {
      "indent": 0,
      "text": "Appendix B. PKI Management Message Profiles.",
      "ja": "付録B. PKI管理メッセージプロファイル。"
    },
    {
      "indent": 3,
      "text": "This appendix contains detailed profiles for those PKIMessages which MUST be supported by conforming implementations (see Section 4).",
      "ja": "この付録では、準拠した実装（セクション4を参照）によって支持されなければならないものPKIMessagesの詳細なプロファイルを含みます。"
    },
    {
      "indent": 3,
      "text": "Profiles for the PKIMessages used in the following PKI management operations are provided:",
      "ja": "以下のPKI管理操作で使用PKIMessagesのプロファイルが用意されています。"
    },
    {
      "indent": 3,
      "text": "- root CA key update - information request/response - cross-certification request/response (1-way) - initial registration/certification - basic authenticated scheme - certificate request - key update",
      "ja": " - ルートCAの鍵更新 - 情報の要求/応答 - 相互認証要求/応答（1ウェイ） - 初期登録/認証 - ベーシック認証方式 - 証明書要求 - 鍵更新"
    },
    {
      "indent": 3,
      "text": "<<Later versions of this document may extend the above to include profiles for the operations listed below (along with other operations, if desired).>>",
      "ja": "（所望であれば、他の操作と一緒に）<<以降この文書のバージョンは、以下の操作のプロファイルを含むように上記を延長することができる。>>"
    },
    {
      "indent": 3,
      "text": "- revocation request - certificate publication - CRL publication",
      "ja": " - 失効要求 - 証明書の出版 -  CRLの発行"
    },
    {
      "indent": 0,
      "text": "B1. General Rules for interpretation of these profiles.",
      "ja": "B1。これらのプロファイルの解釈のための一般的なルール。"
    },
    {
      "indent": 3,
      "text": "1. Where OPTIONAL or DEFAULT fields are not mentioned in individual profiles, they SHOULD be absent from the relevant message (i.e., a receiver can validly reject a message containing such fields as being syntactically incorrect). Mandatory fields are not mentioned if they have an obvious value (e.g., pvno). 2. Where structures occur in more than one message, they are separately profiled as appropriate. 3. The algorithmIdentifiers from PKIMessage structures are profiled separately. 4. A \"special\" X.500 DN is called the \"NULL-DN\"; this means a DN containing a zero-length SEQUENCE OF RelativeDistinguishedNames (its DER encoding is then '3000'H). 5. Where a GeneralName is required for a field but no suitable value is available (e.g., an end entity produces a request before knowing its name) then the GeneralName is to be an X.500 NULL-DN (i.e., the Name field of the CHOICE is to contain a NULL-DN). This special value can be called a \"NULL-GeneralName\". 6. Where a profile omits to specify the value for a GeneralName then the NULL-GeneralName value is to be present in the relevant PKIMessage field. This occurs with the sender field of the PKIHeader for some messages.",
      "ja": "1.オプションまたはDEFAULTフィールドは、個々のプロファイルで言及されていない場合、それらは、関連するメッセージ（即ち、受信機が有効に構文的に正しくないものとして、そのようなフィールドを含むメッセージを拒否することができる）から不在であるべきです。彼らは明らか値（例えば、PVNO）を持っている場合、必須のフィールドが言及されていません。 2.構造は複数のメッセージで発生した場合、それらは個別に適切に紹介されます。 3. PKIMessage構造からalgorithmIdentifiersは個別に紹介されます。 4.「特別」X.500 DNは、「NULL-DN」と呼ばれています。これはする相対識別名（そのDERエンコーディングが次にある「3000'H）のゼロ長の配列を含むDNを意味します。 GeneralNameが（例えば、エンドエンティティは、その名前を知っている前に、要求を生成）フィールドに必要なく、もし適切な値が利用できません5.その後のGeneralNameはX.500のNULL-DN（のすなわち、[名前]フィールドになることですCHOICEは、NULL-DN）を含むことになります。この特別な値は「NULL-のGeneralName」と呼ぶことができます。プロファイルは、その後NULL-のGeneralName値のGeneralNameの値を指定するために省略6.関連PKIMessageフィールドに存在することがあります。これは、いくつかのメッセージのPKIHeaderの差出人フィールドで発生します。"
    },
    {
      "indent": 3,
      "text": "7. Where any ambiguity arises due to naming of fields, the profile names these using a \"dot\" notation (e.g., \"certTemplate.subject\" means the subject field within a field called certTemplate). 8. Where a \"SEQUENCE OF types\" is part of a message, a zero-based array notation is used to describe fields within the SEQUENCE OF (e.g., crm[0].certReq.certTemplate.subject refers to a subfield of the first CertReqMsg contained in a request message). 9. All PKI message exchanges in Sections B7-B10 require a PKIConfirm message to be sent by the initiating entity. This message is not included in some of the profiles given since its body is NULL and its header contents are clear from the context. Any authenticated means can be used for the protectionAlg (e.g., password-based MAC, if shared secret information is known, or signature).",
      "ja": "任意のあいまいさは、フィールドの名称により生じる7は、プロファイル名「ドット」表記法を使用して、これら（例えば、「certTemplate.subject」はCertTemplateのと呼ばれるフィールド内のサブジェクトフィールドを意味します）。 「タイプの配列は、」メッセージの一部である8は、ゼロベースの配列表記（例えば、CRMのシーケンス内のフィールドを記述するために使用される[0] .certReq.certTemplate.subjectは、最初のサブフィールドを指し要求メッセージに含まCertReqMsg）。セクションB7-B10 9.すべてのPKIメッセージ交換はPKIConfirmメッセージは、開始エンティティによって送信される必要があります。その本体はNULLであり、そのヘッダの内容が文脈から明らかであるので、このメッセージは、指定されたプロファイルの一部に含まれていません。任意の認証手段がprotectionAlg（例えば、パスワードベースのMAC、共有秘密情報が既知である場合、または署名）のために使用することができます。"
    },
    {
      "indent": 0,
      "text": "B2. Algorithm Use Profile",
      "ja": "B2。アルゴリズムを使用するプロファイル"
    },
    {
      "indent": 3,
      "text": "The following table contains definitions of algorithm uses within PKI management protocols.",
      "ja": "次の表は、アルゴリズムの定義は、PKI管理プロトコルの中に使用していますが含まれています。"
    },
    {
      "indent": 3,
      "text": "The columns in the table are:",
      "ja": "表の列は、次のとおりです。"
    },
    {
      "indent": 0,
      "text": "Name: an identifier used for message profiles Use: description of where and for what the algorithm is used Mandatory: an AlgorithmIdentifier which MUST be supported by conforming implementations Others: alternatives to the mandatory AlgorithmIdentifier",
      "ja": "名前：メッセージに使用する識別子が使用プロファイル：の記述をどこで、アルゴリズムが必須に使用されているもののために：選択肢を必須のAlgorithmIdentifierに：実装のその他の準拠によりサポートされなければならないのAlgorithmIdentifier"
    },
    {
      "indent": 1,
      "text": "Name Use Mandatory Others",
      "ja": "必須のその他の使用に名前を付けます"
    },
    {
      "indent": 1,
      "text": "MSG_SIG_ALG Protection of PKI DSA/SHA-1 RSA/MD5... messages using signature MSG_MAC_ALG protection of PKI PasswordBasedMac HMAC, messages using MACing X9.9... SYM_PENC_ALG symmetric encryption of 3-DES (3-key- RC5, an end entity's private EDE, CBC mode) CAST-128... key where symmetric key is distributed out-of-band PROT_ENC_ALG asymmetric algorithm D-H RSA used for encryption of (symmetric keys for encryption of) private keys transported in PKIMessages PROT_SYM_ALG symmetric encryption 3-DES (3-key- RC5, algorithm used for EDE, CBC mode) CAST-128... encryption of private key bits (a key of this type is encrypted using PROT_ENC_ALG)",
      "ja": "PKI DSA / SHA-1のMSG_SIG_ALG保護RSA / MD5 ... PKI PasswordBasedMac HMACの署名MSG_MAC_ALG保護を使用してメッセージ、MACing X9.9を使用してメッセージ... 3-DES（3-KEY- RC5のSYM_PENC_ALG対称暗号化、エンドPROT_ENC_ALG非対称アルゴリズムのDH RSAがPKIMessages PROT_SYM_ALG対称暗号化の3-で輸送（の暗号化のための対称鍵）秘密鍵の暗号化に使用されるアウトオブバンド対称鍵が配布されているキー、企業のプライベートEDE、CBCモード）CAST-128 ... DES（3-KEY- RC5、EDE、CBCモードのために用いられるアルゴリズム）CAST-128 ...秘密鍵のビット（このタイプのキーはPROT_ENC_ALGを使用して暗号化される）の暗号化"
    },
    {
      "indent": 0,
      "text": "Mandatory AlgorithmIdentifiers and Specifications:",
      "ja": "必須AlgorithmIdentifiersと仕様："
    },
    {
      "indent": 0,
      "text": "DSA/SHA-1:\n  AlgId:  {1 2 840 10040 4 3};\n  NIST, FIPS PUB 186: Digital Signature Standard, 1994;\n  Public Modulus size:  1024 bits.",
      "raw": true
    },
    {
      "indent": 0,
      "text": "PasswordBasedMac:\n  {1 2 840 113533 7 66 13}, with SHA-1 {1 3 14 3 2 26} as the owf\n    parameter and HMAC-SHA1 {1 3 6 1 5 5 8 1 2} as the mac parameter;\n  (this specification), along with\n  NIST, FIPS PUB 180-1: Secure Hash Standard, April 1995;\n  H. Krawczyk, M. Bellare, R. Canetti, \"HMAC:  Keyed-Hashing for Message\n    Authentication\", Internet Request for Comments 2104, February 1997.",
      "raw": true
    },
    {
      "indent": 0,
      "text": "3-DES: {1 2 840 113549 3 7}; (used in RSA's BSAFE and in S/MIME).",
      "ja": "3-DES：{1 2 840 113549 3 7}。 （RSA BSAFEの中やS / MIMEで使用）。"
    },
    {
      "indent": 0,
      "text": "D-H:\n  AlgId:  {1 2 840 10046 2 1};\n  ANSI X9.42;\n  Public Modulus Size:  1024 bits.\n  DHParameter ::= SEQUENCE {\n    prime INTEGER, -- p\n    base  INTEGER  -- g\n  }",
      "raw": true
    },
    {
      "indent": 0,
      "text": "B3. \"Self-signed\" certificates",
      "ja": "B3。 「自己署名」証明書"
    },
    {
      "indent": 3,
      "text": "Profile of how a Certificate structure may be \"self-signed\". These structures are used for distribution of \"root\" CA public keys. This can occur in one of three ways (see Section 2.4 above for a description of the use of these structures):",
      "ja": "証明書の構造は、「自己署名」することができる方法のプロフィール。これらの構造は、「ルート」CA公開鍵の配布のために使用されています。これは、次の3つの方法（これらの構造体の使用の説明については、上記のセクション2.4を参照）のいずれかで発生する可能性があります。"
    },
    {
      "indent": 1,
      "text": "Type Function",
      "ja": "タイプ機能"
    },
    {
      "indent": 1,
      "text": "newWithNew a true \"self-signed\" certificate; the contained public key MUST be usable to verify the signature (though this provides only integrity and no authentication whatsoever) oldWithNew previous root CA public key signed with new private key newWithOld new root CA public key signed with previous private key",
      "ja": "newWithNew真の「自己署名」証明書。 （これが唯一の整合性と全く認証を提供しますが）含まれる公開鍵は、前の秘密鍵で署名した新しい秘密鍵newWithOld新しいルートCAの公開鍵を用いて署名oldWithNew以前のルートCA公開鍵署名を検証するために使用可能でなければなりません"
    },
    {
      "indent": 3,
      "text": "<<Such certificates (including relevant extensions) must contain \"sensible\" values for all fields. For example, when present subjectAltName MUST be identical to issuerAltName, and when present keyIdentifiers must contain appropriate values, et cetera.>>",
      "ja": "<<（関連する拡張を含む）このような証明書は、すべてのフィールドの「賢明な」値が含まれている必要があります。例えば、存在する場合のsubjectAltNameはissuerAltNameと同じである必要があり、本keyIdentifiersは、エトセトラ適切な値を含んでいなければならない場合。>>"
    },
    {
      "indent": 0,
      "text": "B4. Proof of Possession Profile",
      "ja": "B4。ボール支配率プロファイルの証明"
    },
    {
      "indent": 3,
      "text": "POP fields for use (in signature field of pop field of ProofOfPossession structure) when proving possession of a private signing key which corresponds to a public verification key for which a certificate has been requested.",
      "ja": "（ProofOfPossession構造のポップ・フィールドの署名フィールドで）使用するPOPフィールド証明書が要求された公開検証鍵に対応する秘密署名鍵の所有を証明します。"
    },
    {
      "indent": 4,
      "text": "Field Value Comment",
      "ja": "フィールド値コメント"
    },
    {
      "indent": 4,
      "text": "algorithmIdentifier MSG_SIG_ALG only signature protection is allowed for this proof signature present bits calculated using MSG_SIG_ALG",
      "ja": "AlgorithmIdentifier MSG_SIG_ALGのみ署名保護がMSG_SIG_ALGを使用して計算この証明署名本ビットに許可されています"
    },
    {
      "indent": 3,
      "text": "<<Proof of possession of a private decryption key which corresponds to a public encryption key for which a certificate has been requested does not use this profile; instead the method given in protectionAlg for PKIConfirm in Section B8 is used.>>",
      "ja": "証明書は、このプロファイルを使用していません要求された公開暗号鍵に対応する秘密復号鍵の所持の証明<<;代わりに、セクションB8にPKIConfirmためprotectionAlgに与えられた方法が使用されている。>>"
    },
    {
      "indent": 3,
      "text": "Not every CA/RA will do Proof-of-Possession (of signing key, decryption key, or key agreement key) in the PKIX-CMP in-band certification request protocol (how POP is done MAY ultimately be a policy issue which is made explicit for any given CA in its publicized Policy OID and Certification Practice Statement). However, this specification MANDATES that CA/RA entities MUST do POP (by some means) as part of the certification process. All end entities MUST be prepared to provide POP (i.e., these components of the PKIX-CMP protocol MUST be supported).",
      "ja": "すべてのCA / RAは、帯域内の認証要求プロトコルPKIX-CMPにおける実証の所持（署名鍵、復号鍵、または鍵合意キーのを）やるわけではありません（POPがどのように行われるか、最終的に行われている政策課題かもしれその公表ポリシーOIDと認証実施規定）内の任意のCAを明示的に。しかし、CA / RAエンティティが認証プロセスの一環として、（何らかの手段で）POPを行う必要があります、この仕様の義務。すべてのエンドエンティティ（すなわち、PKIX-CMPプロトコルのこれらの構成要素がサポートしなければならない）POPを提供するために準備しなければなりません。"
    },
    {
      "indent": 0,
      "text": "B5. Root CA Key Update",
      "ja": "B5。ルートCAキー更新"
    },
    {
      "indent": 3,
      "text": "A root CA updates its key pair. It then produces a CA key update announcement message which can be made available (via one of the transport mechanisms) to the relevant end entities. A PKIConfirm message is NOT REQUIRED from the end entities.",
      "ja": "ルートCAは、その鍵ペアを更新します。これは、関連するエンドエンティティに（搬送機構のうちの1つを介して）利用可能にすることができるCA鍵更新通知メッセージを生成します。 PKIConfirmメッセージは、エンドエンティティから必要ありません。"
    },
    {
      "indent": 3,
      "text": "ckuann message:",
      "ja": "ckuannメッセージ："
    },
    {
      "indent": 4,
      "text": "Field Value Comment",
      "ja": "フィールド値コメント"
    },
    {
      "indent": 4,
      "text": "sender CA name responding CA name body ckuann(CAKeyUpdAnnContent) oldWithNew present see Section B3 above newWithOld present see Section B3 above newWithNew present see Section B3 above extraCerts optionally present can be used to \"publish\" certificates (e.g., certificates signed using the new private key)",
      "ja": "任意に存在するextraCerts上記newWithNew存在を参照してくださいセクションB3以上newWithOld存在を参照してくださいセクションB3上記のCA名ボディckuann（CAKeyUpdAnnContent）oldWithNew存在を参照してくださいセクションB3の応答送信者CAの名前は、証明書を（例えば、証明書が新しい秘密鍵を使って署名した「公開」するために使用することができます）"
    },
    {
      "indent": 0,
      "text": "B6. PKI Information request/response",
      "ja": "B6。 PKI情報リクエスト/レスポンス"
    },
    {
      "indent": 3,
      "text": "The end entity sends general message to the PKI requesting details which will be required for later PKI management operations. RA/CA responds with general response. If an RA generates the response then it will simply forward the equivalent message which it previously received from the CA, with the possible addition of the certificates to the extraCerts fields of the PKIMessage. A PKIConfirm message is NOT REQUIRED from the end entity.",
      "ja": "エンドエンティティは、後にPKI管理操作のために必要とされるPKI要求内容に一般的なメッセージを送信します。 RA / CAは、一般的な応答で応答します。 RAレスポンスを生成する場合、それは単にPKIMessageのextraCertsフィールドに証明書の可能加えて、それは以前にCAから受信した同等のメッセージを転送します。 PKIConfirmメッセージは、エンドエンティティから必要ありません。"
    },
    {
      "indent": 0,
      "text": "Message Flows:",
      "ja": "メッセージ・フロー："
    },
    {
      "indent": 0,
      "text": "Step# End entity PKI",
      "ja": "ステップ＃エンドエンティティPKI"
    },
    {
      "indent": 2,
      "text": "1 format genm 2 -> genm -> 3 handle genm 4 produce genp 5 <- genp <- 6 handle genp",
      "ja": "1フォーマットgenm 2  - > genm  - > 3ハンドルgenm 4農産物genp 5 < -  genp < -  6ハンドルgenp"
    },
    {
      "indent": 0,
      "text": "genm:",
      "ja": "genm："
    },
    {
      "indent": 0,
      "text": "Field Value",
      "ja": "フィールド値"
    },
    {
      "indent": 0,
      "text": "recipient CA name -- the name of the CA as contained in issuerAltName extensions or -- issuer fields within certificates protectionAlg MSG_MAC_ALG or MSG_SIG_ALG -- any authenticated protection alg. SenderKID present if required -- must be present if required for verification of message protection freeText any valid value body genr (GenReqContent) GenMsgContent empty SEQUENCE -- all relevant information requested protection present -- bits calculated using MSG_MAC_ALG or MSG_SIG_ALG",
      "ja": "受信者CA名 - 証明書protectionAlg MSG_MAC_ALGまたはMSG_SIG_ALG内の発行者フィールド -   - 任意の認証された保護ALG issuerAltName拡張やに含まれるCAの名前。必要であれば、本SenderKID  - メッセージ保護の検証に必要な場合に存在しなければならない任意の有効な値本体GENR（GenReqContent）が空のシーケンスをGenMsgContentフリーテキスト - すべての関連情報は、保護現在の要求 -  MSG_MAC_ALG又はMSG_SIG_ALGを用いて算出ビット"
    },
    {
      "indent": 0,
      "text": "genp:",
      "ja": "GENP："
    },
    {
      "indent": 0,
      "text": "Field Value",
      "ja": "フィールド値"
    },
    {
      "indent": 0,
      "text": "sender CA name -- name of the CA which produced the message protectionAlg MSG_MAC_ALG or MSG_SIG_ALG -- any authenticated protection alg. senderKID present if required -- must be present if required for verification of message protection body genp (GenRepContent) CAProtEncCert present (object identifier one of PROT_ENC_ALG), with relevant value -- to be used if end entity needs to encrypt information for the CA -- (e.g., private key for recovery purposes) SignKeyPairTypes present, with relevant value -- the set of signature algorithm identifiers which this CA will -- certify for subject public keys EncKeyPairTypes present, with relevant value -- the set of encryption/key agreement algorithm identifiers which -- this CA will certify for subject public keys PreferredSymmAlg present (object identifier one of PROT_SYM_ALG) , with relevant value -- the symmetric algorithm which this CA expects to be used in later -- PKI messages (for encryption) CAKeyUpdateInfo optionally present, with relevant value -- the CA MAY provide information about a relevant root CA key pair -- using this field (note that this does not imply that the responding -- CA is the root CA in question) CurrentCRL optionally present, with relevant value -- the CA MAY provide a copy of a complete CRL (i.e., fullest possible -- one) protection present -- bits calculated using MSG_MAC_ALG or MSG_SIG_ALG extraCerts optionally present -- can be used to send some certificates to the end entity. An RA MAY -- add its certificate here.",
      "ja": "送信者CA名 - 任意の認証された保護ALG  - メッセージprotectionAlg MSG_MAC_ALGまたはMSG_SIG_ALGを生産したCAの名前。必要であれば、本senderKID  - メッセージ保護体genpの検証（GenRepContent）CAProtEncCert存在する（オブジェクト識別子PROT_ENC_ALGのもの）のために必要であれば、関連する値で、存在しなければならない - エンドエンティティがCAの情報を暗号化する必要がある場合に使用されます -  - 関連する値と、現在（例えば、復旧のための秘密鍵）SignKeyPairTypes  - 暗号化/鍵合意のセット - 関連する値で、対象の公開鍵EncKeyPairTypes存在のための証明 - このCAがします署名アルゴリズム識別子のセットこのCAは、関連する値と、対象の公開鍵PreferredSymmAlg存在する（オブジェクト識別子PROT_SYM_ALGのもの）のために認定する -   - アルゴリズム識別子このCAは、後に使用されることを期待する対称アルゴリズム - （暗号化）PKIメッセージは、必要に応じてCAKeyUpdateInfo現在、関連する値で -  CAは、関連するルートCAの鍵ペアについての情報を提供することができる - このフィールドを使用して（これがあることを意味するものではないことに注意してください応答 -  CAは、関連する値を有する当該ルートCA）任意に存在CurrentCRL、ある -  MSG_MAC_ALG又はMSG_SIG_ALG extraCertsを用いて算出ビット - オン）保護存在 -  CAは、完全なCRL（すなわち、最大限可能のコピーを提供するかもしれ任意に存在する - エンドエンティティに、いくつかの証明書を送信するために使用することができます。 RA MAY  - ここではその証明書を追加します。"
    },
    {
      "indent": 0,
      "text": "B7. Cross certification request/response (1-way)",
      "ja": "B7。相互認証要求/応答（1ウェイ）"
    },
    {
      "indent": 3,
      "text": "Creation of a single cross-certificate (i.e., not two at once). The requesting CA MAY choose who is responsible for publication of the cross-certificate created by the responding CA through use of the PKIPublicationInfo control.",
      "ja": "単一のクロス証明書の作成（すなわち、しない2で1回）。要求CAはPKIPublicationInfoコントロールを使用して応答CAによって作成されたクロス証明書の発行責任者選ぶかもしれません。"
    },
    {
      "indent": 3,
      "text": "Preconditions:",
      "ja": "前提条件："
    },
    {
      "indent": 3,
      "text": "1. Responding CA can verify the origin of the request (possibly requiring out-of-band means) before processing the request. 2. Requesting CA can authenticate the authenticity of the origin of the response (possibly requiring out-of-band means) before processing the response",
      "ja": "要求の発信元を確認することができる。1.応答CAは要求を処理する前に（おそらく、帯域外の意味必要）。 2. CAを要求する応答を処理する前に（おそらく帯域外要求手段）応答の起源の真正性を認証することができます"
    },
    {
      "indent": 0,
      "text": "Message Flows:",
      "ja": "メッセージ・フロー："
    },
    {
      "indent": 0,
      "text": "Step# Requesting CA Responding CA 1 format ccr 2 -> ccr -> 3 handle ccr 4 produce ccp 5 <- ccp <- 6 handle ccp 7 format conf 8 -> conf -> 9 handle conf",
      "ja": "> CCR  -   - > 3ハンドルCCR 4農産物CCP 5 < -  CCP < - > CONF  -   - > 9ハンドルCONF 6ハンドルCCP 7形式CONF 8ステップ＃CA 1フォーマットCCR 2を応答CAの要求"
    },
    {
      "indent": 0,
      "text": "ccr: Field Value",
      "ja": "CCR：フィールド値"
    },
    {
      "indent": 0,
      "text": "sender Requesting CA name -- the name of the CA who produced the message recipient Responding CA name -- the name of the CA who is being asked to produce a certificate messageTime time of production of message -- current time at requesting CA protectionAlg MSG_SIG_ALG -- only signature protection is allowed for this request senderKID present if required -- must be present if required for verification of message protection transactionID present -- implementation-specific value, meaningful to requesting CA. -- [If already in use at responding CA then a rejection message -- MUST be produced by responding CA] senderNonce present -- 128 (pseudo-)random bits freeText any valid value body ccr (CertReqMessages) only one CertReqMsg allowed -- if multiple cross certificates are required they MUST be packaged -- in separate PKIMessages certTemplate present",
      "ja": "CA名を対応メッセージの受信者を作成したCAの名前 -   -  CA protectionAlg MSG_SIG_ALGを要求する現在時刻 - メッセージの生産の証明書messageTime時間を生成するように要求されているCAの名前CA名を要求する送信者 -  - 必要であれば、この要求は、本senderKIDのみ署名保護が許可されている - メッセージ保護トランザクションIDの存在を検証するために必要な場合に存在しなければならない -  CAを要求する意味の実装固有の値、 senderNonce本 -  [CA応答することによって生成されなければならない既に次に拒否メッセージをCA応答での使用に場合]  -   -  128（擬似）ランダムビットは任意の有効な値体CCR（CertReqMessages）をフリーテキストのみCertReqMsgが許可 - 場合複数のクロス証明書が必要とされるそれらは、パッケージ化されなければならない - 別PKIMessages CertTemplateの存在に"
    },
    {
      "indent": 0,
      "text": " -- details follow version v1 or v3 -- <<v3 STRONGLY RECOMMENDED>> signingAlg present -- the requesting CA must know in advance with which algorithm it -- wishes the certificate to be signed subject present -- may be NULL-DN only if subjectAltNames extension value proposed validity present -- MUST be completely specified (i.e., both fields present) issuer present -- may be NULL-DN only if issuerAltNames extension value proposed publicKey present -- the key to be certified (which must be for a signing algorithm) extensions optionally present -- a requesting CA must propose values for all extensions which it -- requires to be in the cross-certificate",
      "ja": " - 詳細はバージョンV1またはV3に従っ -  <<強く推奨v3は>> signingAlg存在 - 要求CAは、アルゴリズムそれと事前に知っていなければならない - 証明書がサブジェクト存在を締結することを望む - のみNULL-DNであってもよいですもしsubjectAltNamesを拡張値が有効存在を提案 - のものである必要があり、認定されるべきキー（ -  issuerAltNames拡張値が公開鍵存在を提案した場合にのみNULL-DNであってもよい - 完全に（すなわち、本両方のフィールド）発行者の存在を指定する必要があります必要に応じて本アルゴリズム）拡張に署名 - クロス証明書であることが必要 - 要求CAは、すべての拡張機能の値を提案しなければなりません"
    },
    {
      "indent": 0,
      "text": "POPOSigningKey present -- see \"Proof of possession profile\" (Section B4)",
      "ja": "POPOSigningKey現在は - 「所持プロファイルの証明」を参照してください（セクションB4）"
    },
    {
      "indent": 0,
      "text": "protection present -- bits calculated using MSG_SIG_ALG extraCerts optionally present -- MAY contain any additional certificates that requester wishes -- to include",
      "ja": "保護存在する - 必要に応じてMSG_SIG_ALG extraCerts本を使用して計算したビット - 含めるように - 要求者が希望する任意の追加の証明書を含むかもしれ"
    },
    {
      "indent": 0,
      "text": "ccp: Field Value",
      "ja": "CCP：フィールド値"
    },
    {
      "indent": 0,
      "text": "sender Responding CA name -- the name of the CA who produced the message recipient Requesting CA name -- the name of the CA who asked for production of a certificate messageTime time of production of message -- current time at responding CA protectionAlg MSG_SIG_ALG -- only signature protection is allowed for this message senderKID present if required -- must be present if required for verification of message -- protection recipKID present if required transactionID present -- value from corresponding ccr message senderNonce present -- 128 (pseudo-)random bits recipNonce present",
      "ja": "送信側の対応CA名 - メッセージの生産の証明書messageTime時間の生産のために尋ねたCAの名前 -   -  CA名を要求するメッセージの受信者を作成したCAの名前CA protectionAlg MSG_SIG_ALG応答における現在の時間 - メッセージの検証に必要な場合に存在しなければならない -   - 値に対応するCCRメッセージsenderNonce存在から -   - 保護が存在TRANSACTIONID必要であれば、本recipKID必要な場合にのみ署名保護がこのメッセージに存在senderKID許可さ128（擬似）ランダムビットrecipNonce存在"
    },
    {
      "indent": 0,
      "text": " -- senderNonce from corresponding ccr message freeText any valid value body ccp (CertRepMessage) only one CertResponse allowed -- if multiple cross certificates are required they MUST be packaged -- in separate PKIMessages response present status present PKIStatusInfo.status present -- if PKIStatusInfo.status is one of: -- granted, or -- grantedWithMods, -- then certifiedKeyPair MUST be present and failInfo MUST be absent failInfo present depending on PKIStatusInfo.status -- if PKIStatusInfo.status is: -- rejection -- then certifiedKeyPair MUST be absent and failInfo MUST be present -- and contain appropriate bit settings",
      "ja": " - 対応するCCRメッセージからsenderNonceは、任意の有効な値体CCP（CertRepMessageに）許容つのみCertResponseをフリーテキスト - 複数のクロス証明書が必要な場合、それらはパッケージ化されなければならない - 別PKIMessages本ステータス本PKIStatusInfo.status存在を応答 -  PKIStatusInfo場合。ステータスは次のいずれかである： - 、grantedWithMods  -   - 付与された、またはその後certifiedKeyPairが存在していなければなりませんとfailInfoがPKIStatusInfo.statusに応じfailInfo本存在してはならない -  PKIStatusInfo.statusである場合： - 拒否 - 次いでcertifiedKeyPairでなければなりません存在しないとfailInfoが存在しなければならない - と、適切なビット設定を含みます"
    },
    {
      "indent": 0,
      "text": "certifiedKeyPair present depending on PKIStatusInfo.status certificate present depending on certifiedKeyPair -- content of actual certificate must be examined by requesting CA -- before publication",
      "ja": "certifiedKeyPair存在certifiedKeyPairに応じPKIStatusInfo.status証明書存在に応じて - 実際の証明書の内容は、CAを要求することによって検討されなければならない - 出版前"
    },
    {
      "indent": 0,
      "text": "protection present -- bits calculated using MSG_SIG_ALG extraCerts optionally present -- MAY contain any additional certificates that responder wishes -- to include",
      "ja": "保護存在する - 必要に応じてMSG_SIG_ALG extraCerts本を使用して計算したビット - 願いをレスポンダ任意の追加の証明書を含むかもしれ - 含めることが"
    },
    {
      "indent": 0,
      "text": "B8. Initial Registration/Certification (Basic Authenticated Scheme)",
      "ja": "B8。初期登録/認証（基本認証スキーム）"
    },
    {
      "indent": 3,
      "text": "An (uninitialized) end entity requests a (first) certificate from a CA. When the CA responds with a message containing a certificate, the end entity replies with a confirmation. All messages are authenticated.",
      "ja": "（初期化されていない）エンドエンティティがCAから（最初の）証明書を要求しますCAが証明書を含むメッセージで応答する場合、エンドエンティティが確認で応答します。すべてのメッセージが認証されます。"
    },
    {
      "indent": 3,
      "text": "This scheme allows the end entity to request certification of a locally-generated public key (typically a signature key). The end entity MAY also choose to request the centralized generation and certification of another key pair (typically an encryption key pair).",
      "ja": "このスキームは、エンドエンティティがローカルで生成された公開鍵（通常は署名鍵）の認証を要求することを可能にします。エンドエンティティは、別の鍵ペア（通常、暗号鍵ペア）の中央集中生成と認証を要求するために選ぶかもしれません。"
    },
    {
      "indent": 3,
      "text": "Certification may only be requested for one locally generated public key (for more, use separate PKIMessages).",
      "ja": "認定は、唯一のローカルで生成された公開鍵のために要求することができる（詳細について、個別のPKIMessagesを使用します）。"
    },
    {
      "indent": 3,
      "text": "The end entity MUST support proof-of-possession of the private key associated with the locally-generated public key.",
      "ja": "エンドエンティティは、プルーフ・オブ・所持ローカルに生成した公開鍵に関連付けられた秘密鍵のをサポートしなければなりません。"
    },
    {
      "indent": 3,
      "text": "Preconditions:",
      "ja": "前提条件："
    },
    {
      "indent": 3,
      "text": "1. The end entity can authenticate the CA's signature based on out-of-band means 2. The end entity and the CA share a symmetric MACing key",
      "ja": "1.エンドエンティティは、アウトオブバンドに基づいたCAの署名が対称MACingキーを2エンドエンティティとCAのシェアを意味し、認証することができます"
    },
    {
      "indent": 3,
      "text": "Message flow:",
      "ja": "メッセージフロー："
    },
    {
      "indent": 3,
      "text": "Step# End entity PKI 1 format ir 2 -> ir -> 3 handle ir 4 format ip 5 <- ip <- 6 handle ip 7 format conf 8 -> conf -> 9 handle conf",
      "ja": "ステップ＃エンドエンティティPKI 1つのフォーマットIR 2  - > IR  - > 3ハンドルIR 4フォーマットIP 5 < -  IP < -  6ハンドルIP 7形式CONF 8  - > CONF  - > 9ハンドルCONF"
    },
    {
      "indent": 3,
      "text": "For this profile, we mandate that the end entity MUST include all (i.e., one or two) CertReqMsg in a single PKIMessage and that the PKI (CA) MUST produce a single response PKIMessage which contains the complete response (i.e., including the OPTIONAL second key pair, if it was requested and if centralized key generation is supported). For simplicity, we also mandate that this message MUST be the final one (i.e., no use of \"waiting\" status value).",
      "ja": "このプロファイルのために、我々は、エンドエンティティが単一PKIMessageにし、PKI（CA）はオプション秒を含む完全な応答（すなわち、含まれている単一の応答PKIMessageを生成しなければならないことを、すべての（すなわち、1または2）CertReqMsgを含まなければならないことを義務付けます鍵のペア、それは要求された場合と集中鍵の生成がサポートされている場合）。簡単にするために、我々はまた、このメッセージは、最終的な1でなければならないことを義務付ける（すなわち、「待機中」のステータス値を用いません）。"
    },
    {
      "indent": 0,
      "text": "ir: Field Value",
      "ja": "IR：フィールド値"
    },
    {
      "indent": 0,
      "text": "recipient CA name -- the name of the CA who is being asked to produce a certificate protectionAlg MSG_MAC_ALG -- only MAC protection is allowed for this request, based on -- initial authentication key senderKID referenceNum -- the reference number which the CA has previously issued to -- the end entity (together with the MACing key) transactionID present -- implementation-specific value, meaningful to end entity. -- [If already in use at the CA then a rejection message MUST be -- produced by the CA] senderNonce present -- 128 (pseudo-)random bits freeText any valid value body ir (CertReqMessages) only one or two CertReqMsg are allowed -- if more certificates are required requests MUST be packaged in -- separate PKIMessages CertReqMsg one or two present -- see below for details, note: crm[0] means the first (which MUST -- be present), crm[1] means the second (which is OPTIONAL, and used -- to ask for a centrally-generated key)",
      "ja": "受信者CA名 - のみMAC保護はこの要求に対して許可されている、に基づいて -   - 初期認証キーsenderKID referenceNum  - 証明書protectionAlg MSG_MAC_ALGを生成するように要求されているCAの名前CAが以前持っている参照番号発行された - エンドエンティティに意味のある実装に固有の値、 - エンドエンティティ（共にMACingキーで）存在するTRANSACTIONID。 -  senderNonce存在 -  [CAによって生成拒絶メッセージでなければなりません、その後、既に使用中のCAでの場合]  -  128（擬似）ランダムビットは、任意の有効な値本体IR（CertReqMessages）1つまたは2つCertReqMsgが許可されているフリーテキスト - 別PKIMessages CertReqMsg一つまた​​は二つ存在する -   - 複数の証明書が必要な場合の要求がでパッケージ化する必要があり、詳細は下記の注を参照：CRM [0]第一の手段（しなければならない - 存在する）を、CRM [1] （ - 中央に生成されたキーを要求するオプションであり、使用される）は、第2の手段"
    },
    {
      "indent": 0,
      "text": "crm[0].certReq. fixed value of zero certReqId -- this is the index of the template within the message crm[0].certReq present certTemplate -- MUST include subject public key value, otherwise unconstrained crm[0].pop... optionally present if public key POPOSigningKey from crm[0].certReq.certTemplate is a signing key -- proof of possession MAY be required in this exchange (see Section -- B4 for details) crm[0].certReq. optionally present controls.archiveOptions -- the end entity MAY request that the locally-generated private key -- be archived crm[0].certReq. optionally present controls.publicationInfo -- the end entity MAY ask for publication of resulting cert.",
      "ja": "CRMは、[0] .certReq。ゼロcertReqIdの固定値 - これは[0] .certReq本CertTemplateのメッセージCRM内のテンプレートの指標である - サブジェクト公開鍵の値、そうでなければ非拘束CRMを含まなければなりません[0] .pop ...任意に存在する公開鍵場合CRMからPOPOSigningKey [0] .certReq.certTemplateは、署名鍵は -  CRM [0] .certReq  - 所有の証明は（詳細については、B4の章を参照）、この交換に必要とされ得ます。任意に存在controls.archiveOptionsは -  CRM [0] .certReqをアーカイブする - エンドエンティティは、ローカルに生成された秘密鍵は、その要求してもよいです。任意に存在controls.publicationInfo  - エンドエンティティの証明書を得られたの出版を求めることができます。"
    },
    {
      "indent": 0,
      "text": "crm[1].certReq fixed value of one certReqId -- the index of the template within the message crm[1].certReq present certTemplate -- MUST NOT include actual public key bits, otherwise unconstrained -- (e.g., the names need not be the same as in crm[0]) crm[0].certReq. present [object identifier MUST be PROT_ENC_ALG] controls.protocolEncKey -- if centralized key generation is supported by this CA, this -- short-term asymmetric encryption key (generated by the end entity) -- will be used by the CA to encrypt (a symmetric key used to encrypt) -- a private key generated by the CA on behalf of the end entity crm[1].certReq. optionally present controls.archiveOptions crm[1].certReq. optionally present controls.publicationInfo protection present -- bits calculated using MSG_MAC_ALG",
      "ja": "1 certReqIdのCRM [1] .certReq固定値 - メッセージCRM [1] .certReq本CertTemplateの内のテンプレートのインデックス - 実際の公開鍵のビットを含んではいけません、そうでなければ非拘束 - （例えば、名前は必要はありません[0] .certReq [0]）CRM CRMのと同じです。本controls.protocolEncKey [オブジェクト識別子はPROT_ENC_ALGなければなりません]  - 集中鍵生成は、このCAによってサポートされている場合、この - （エンドエンティティによって生成された）短期非対称暗号化キーは、 - （暗号化するためにCAによって使用されます暗号化に使用される対称鍵） - エンドエンティティCRMに代わってCAによって生成された秘密鍵[1] .certReq。任意に存在controls.archiveOptionsのCRM [1] .certReq。任意に存在controls.publicationInfo保護現在 -  MSG_MAC_ALGを用いて算出ビット"
    },
    {
      "indent": 0,
      "text": "ip: Field Value",
      "ja": "IP：フィールド値"
    },
    {
      "indent": 0,
      "text": "sender CA name -- the name of the CA who produced the message messageTime present -- time at which CA produced message protectionAlg MS_MAC_ALG -- only MAC protection is allowed for this response recipKID referenceNum -- the reference number which the CA has previously issued to the -- end entity (together with the MACing key) transactionID present -- value from corresponding ir message senderNonce present -- 128 (pseudo-)random bits recipNonce present -- value from senderNonce in corresponding ir message freeText any valid value body ir (CertRepMessage) contains exactly one response for each request -- The PKI (CA) responds to either one or two requests as appropriate. -- crc[0] denotes the first (always present); crc[1] denotes the -- second (only present if the ir message contained two requests and -- if the CA supports centralized key generation). crc[0]. fixed value of zero certReqId -- MUST contain the response to the first request in the corresponding -- ir message crc[0].status. present, positive values allowed: status \"granted\", \"grantedWithMods\" negative values allowed: \"rejection\" crc[0].status. present if and only if failInfo crc[0].status.status is \"rejection\" crc[0]. present if and only if certifiedKeyPair crc[0].status.status is \"granted\" or \"grantedWithMods\" certificate present unless end entity's public key is an encryption key and POP is done in this in-band exchange encryptedCert present if and only if end entity's public key is an encryption key and POP done in this in-band exchange publicationInfo optionally present -- indicates where certificate has been published (present at -- discretion of CA)",
      "ja": "送信者CA名 - メッセージmessageTimeの存在を作り出したCAの名前 -  CAがメッセージprotectionAlg MS_MAC_ALGを生成する時間 - のみMAC保護は、この応答recipKID referenceNumのために許可されている -  CAが以前に発行された参照番号 - 対応するIRメッセージsenderNonce存在から値 -   -  128（擬似）ランダムビットrecipNonce存在 -  IRメッセージを対応でsenderNonceから値任意の有効な値本体IRをFREETEXT（エンドエンティティは（一緒にMACingキーで）存在するTRANSACTIONID PKI（CA）必要に応じて、1つのまたは2つの要求に応答する -  CertRepMessage）は、要求ごとに正確に一つの応答が含まれています。 -  CRC [0]（常に存在する）最初を示し、 （ -  CA集中キー生成をサポートしている場合、IRメッセージは2つの要求を含み、場合にのみ存在する）第二 -  CRC [1]です。 CRC [0]。ゼロcertReqIdの固定値 -  IRメッセージのCRC [0] .status  - 対応の最初の要求に対する応答を含まなければなりません。現在、正の値は許さ：ステータス \"許可され​​\"、 \"grantedWithMods\" 負の値は許され： \"拒否\" CRC [0] .status。存在する場合とfailInfoのCRC [0] .status.statusである場合にのみ、 \"拒否\"、CRC [0]。存在する場合にのみcertifiedKeyPairのCRC [0] .status.statusは、「付与」されている場合、または「grantedWithMods」証明書の存在エンドエンティティの公開鍵は、暗号化キーがあるとPOPが存在する場合、このインバンド交換encryptedCertで行われない限り、端部のみの場合エンティティの公開鍵は、インバンド交換が必要に応じて存在publicationInfoこの中で行われた暗号鍵とPOPである - （ -  CAの裁量で存在）証明書が公表されている場所を示します"
    },
    {
      "indent": 0,
      "text": "crc[1]. fixed value of one certReqId -- MUST contain the response to the second request in the -- corresponding ir message crc[1].status. present, positive values allowed: status \"granted\", \"grantedWithMods\" negative values allowed: \"rejection\" crc[1].status. present if and only if failInfo crc[0].status.status is \"rejection\" crc[1]. present if and only if certifiedKeyPair crc[0].status.status is \"granted\" or \"grantedWithMods\" certificate present privateKey present publicationInfo optionally present -- indicates where certificate has been published (present at -- discretion of CA) protection present -- bits calculated using MSG_MAC_ALG extraCerts optionally present -- the CA MAY provide additional certificates to the end entity",
      "ja": "CRC [1]。 1 certReqIdの固定値 -  [1] .status対応するIRメッセージのCRC  - で第2の要求に対する応答を含まなければなりません。現在、正の値は許さ：ステータス \"許可され​​\"、 \"grantedWithMods\" 負の値は許され： \"拒否\" CRC [1] .status。存在する場合とfailInfoのCRC [0] .status.statusである場合にのみ、 \"拒否\"、CRC [1]。存在する場合とcertifiedKeyPairのCRC [0] .status.status「が付与される」または「grantedWithMods」証明書本のPrivateKey本publicationInfo任意に存在する場合にのみ、 - 保護現在 - 証明書が公開されている場合（CAの裁量で存在する）を示しています - ビットは任意に存在MSG_MAC_ALG extraCertsを用いて計算 -  CAは、エンドエンティティに追加の証明書を提供MAY"
    },
    {
      "indent": 0,
      "text": "conf: Field Value",
      "ja": "CONF：フィールド値"
    },
    {
      "indent": 0,
      "text": "recipient CA name -- the name of the CA who was asked to produce a certificate transactionID present -- value from corresponding ir and ip messages senderNonce present -- value from recipNonce in corresponding ip message recipNonce present -- value from senderNonce in corresponding ip message protectionAlg MSG_MAC_ALG -- only MAC protection is allowed for this message. The MAC is -- based on the initial authentication key if only a signing key -- pair has been sent in ir for certification, or if POP is not -- done in this in-band exchange. Otherwise, the MAC is based on -- a key derived from the symmetric key used to decrypt the -- returned encryptedCert. senderKID referenceNum -- the reference number which the CA has previously issued to the -- end entity (together with the MACing key) body conf (PKIConfirmContent) -- this is an ASN.1 NULL protection present -- bits calculated using MSG_MAC_ALG",
      "ja": "受信者CA名 - 証明書のトランザクションIDの存在を生産するように頼まれたCAの名前 - 対応するIPメッセージrecipNonceの存在にrecipNonceから値 -   - 値をsenderNonceからIPメッセージを対応のIRとIPメッセージsenderNonce存在に対応するから値protectionAlg MSG_MAC_ALG  - のみMAC保護は、このメッセージのために許可されています。 MACは - ペアは、認証のためにIRに送られてきた、またはPOPでない場合 -   - このインバンド交換で行わ場合のみ署名鍵初期認証キーに基づきます。 encryptedCert返さ - 解読するために使用される対称鍵から導出鍵 - そうでなければ、MACは基づいています。 senderKID referenceNum  -  CAが以前に発行された参照番号 - エンドエンティティ（共にMACingキーで）本体CONF（PKIConfirmContent） - これはASN.1 NULL保護存在する -  MSG_MAC_ALGを用いて算出ビット"
    },
    {
      "indent": 0,
      "text": "B9. Certificate Request",
      "ja": "B9。証明書要求"
    },
    {
      "indent": 3,
      "text": "An (initialized) end entity requests a certificate from a CA (for any reason). When the CA responds with a message containing a certificate, the end entity replies with a confirmation. All messages are authenticated.",
      "ja": "（初期化）エンドエンティティが（何らかの理由で）CAから証明書を要求します。 CAが証明書を含むメッセージで応答する場合、エンドエンティティが確認で応答します。すべてのメッセージが認証されます。"
    },
    {
      "indent": 3,
      "text": "The profile for this exchange is identical to that given in Section B8 with the following exceptions:",
      "ja": "この交換のためのプロファイルは、次の例外を除いて、セクションのB8に与えられたものと同一であります："
    },
    {
      "indent": 5,
      "text": "- protectionAlg may be MSG_MAC_ALG or MSG_SIG_ALG in request,\n  response, and confirm messages (the determination in the confirm\n  message being dependent upon POP considerations for key-\n  encipherment and key- agreement certificate requests);\n- senderKID and recipKID are only present if required for message\n  verification;\n- body is cr or cp;\n  - protocolEncKey is not present;\n- protection bits are calculated according to the protectionAlg\n  field.",
      "raw": true
    },
    {
      "indent": 0,
      "text": "B10. Key Update Request",
      "ja": "B10。鍵更新要求"
    },
    {
      "indent": 3,
      "text": "An (initialized) end entity requests a certificate from a CA (to update the key pair and corresponding certificate that it already possesses). When the CA responds with a message containing a certificate, the end entity replies with a confirmation. All messages are authenticated.",
      "ja": "（初期化）エンドエンティティが（それが既に所有している鍵ペアと対応する証明書を更新する）CAから証明書を要求します。 CAが証明書を含むメッセージで応答する場合、エンドエンティティが確認で応答します。すべてのメッセージが認証されます。"
    },
    {
      "indent": 3,
      "text": "The profile for this exchange is identical to that given in Section B8 with the following exceptions:",
      "ja": "この交換のためのプロファイルは、次の例外を除いて、セクションのB8に与えられたものと同一であります："
    },
    {
      "indent": 5,
      "text": "- protectionAlg may be MSG_MAC_ALG or MSG_SIG_ALG in request,\n  response, and confirm messages (the determination in the confirm\n  message being dependent upon POP considerations for key-\n  encipherment and key- agreement certificate requests);\n- senderKID and recipKID are only present if required for message\n  verification;\n- body is kur or kup;\n- protection bits are calculated according to the protectionAlg\n  field.",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Appendix C: \"Compilable\" ASN.1 Module using 1988 Syntax",
      "ja": "付録C：1988構文を使用して「コンパイル可能」ASN.1モジュール"
    },
    {
      "indent": 2,
      "text": "PKIXCMP {iso(1) identified-organization(3) dod(6) internet(1) security(5) mechanisms(5) pkix(7) id-mod(0) id-mod-cmp(9)}",
      "ja": "PKIXCMP {ISO（1）同定された組織（3）DOD（6）インターネット（1）セキュリティ（5）メカニズム（5）PKIX（7）ID-MOD（0）ID-MOD-CMP（9）}"
    },
    {
      "indent": 2,
      "text": "DEFINITIONS EXPLICIT TAGS ::=",
      "raw": true
    },
    {
      "indent": 2,
      "text": "BEGIN",
      "ja": "ベギン"
    },
    {
      "indent": 2,
      "text": "-- EXPORTS ALL --",
      "ja": " - すべてのエクスポート - "
    },
    {
      "indent": 2,
      "text": "IMPORTS",
      "ja": "輸入"
    },
    {
      "indent": 6,
      "text": "Certificate, CertificateList, Extensions, AlgorithmIdentifier\n       FROM PKIX1Explicit88 {iso(1) identified-organization(3)\n       dod(6) internet(1) security(5) mechanisms(5) pkix(7)\n       id-mod(0) id-pkix1-explicit-88(1)}}",
      "raw": true
    },
    {
      "indent": 6,
      "text": "GeneralName, KeyIdentifier, ReasonFlags FROM PKIX1Implicit88 {iso(1) identified-organization(3) dod(6) internet(1) security(5) mechanisms(5) pkix(7) id-mod(0) id-pkix1-implicit-88(2)}",
      "ja": "GeneralName、KeyIdentifier、PKIX1Implicit88 FROM ReasonFlags {ISO（1）同定された組織（3）DOD（6）インターネット（1）セキュリティ（5）メカニズム（5）PKIX（7）ID-MOD（0）ID-pkix1-implicit- 88（2）}"
    },
    {
      "indent": 6,
      "text": "CertTemplate, PKIPublicationInfo, EncryptedValue, CertId, CertReqMessages FROM PKIXCRMF {iso(1) identified-organization(3) dod(6) internet(1) security(5) mechanisms(5) pkix(7) id-mod(0) id-mod-crmf(5)}}",
      "ja": "CertTemplateの、PKIPublicationInfo、EncryptedValue、CertId、PKIXCRMF FROM CertReqMessages {ISO（1）同定された組織（3）DOD（6）インターネット（1）セキュリティ（5）メカニズム（5）PKIX（7）ID-MOD（0）ID- MOD-CRMF（5）}}"
    },
    {
      "indent": 6,
      "text": "-- CertificationRequest -- FROM PKCS10 {no standard ASN.1 module defined; -- implementers need to create their own module to import -- from, or directly include the PKCS10 syntax in this module}",
      "ja": " -  CertificationRequest  -  PKCS10 {定義されていない標準のASN.1モジュールから。 - }このモジュールのPKCS10構文を含んから直接、または - 実装をインポートするために、独自のモジュールを作成する必要があります"
    },
    {
      "indent": 23,
      "text": "-- Locally defined OIDs --",
      "ja": " - ローカルに定義されたOID  - "
    },
    {
      "indent": 2,
      "text": "PKIMessage ::= SEQUENCE {\n    header           PKIHeader,\n    body             PKIBody,\n    protection   [0] PKIProtection OPTIONAL,\n    extraCerts   [1] SEQUENCE SIZE (1..MAX) OF Certificate OPTIONAL\n}",
      "raw": true
    },
    {
      "indent": 2,
      "text": "PKIHeader ::= SEQUENCE {\n    pvno                INTEGER     { ietf-version2 (1) },\n    sender              GeneralName,\n    -- identifies the sender\n    recipient           GeneralName,",
      "raw": true
    },
    {
      "indent": 2,
      "text": " -- identifies the intended recipient messageTime [0] GeneralizedTime OPTIONAL, -- time of production of this message (used when sender -- believes that the transport will be \"suitable\"; i.e., -- that the time will still be meaningful upon receipt) protectionAlg [1] AlgorithmIdentifier OPTIONAL, -- algorithm used for calculation of protection bits senderKID [2] KeyIdentifier OPTIONAL, recipKID [3] KeyIdentifier OPTIONAL, -- to identify specific keys used for protection transactionID [4] OCTET STRING OPTIONAL, -- identifies the transaction; i.e., this will be the same in -- corresponding request, response and confirmation messages senderNonce [5] OCTET STRING OPTIONAL, recipNonce [6] OCTET STRING OPTIONAL, -- nonces used to provide replay protection, senderNonce -- is inserted by the creator of this message; recipNonce -- is a nonce previously inserted in a related message by -- the intended recipient of this message freeText [7] PKIFreeText OPTIONAL, -- this may be used to indicate context-specific instructions -- (this field is intended for human consumption) generalInfo [8] SEQUENCE SIZE (1..MAX) OF InfoTypeAndValue OPTIONAL -- this may be used to convey context-specific information -- (this field not primarily intended for human consumption) }",
      "ja": " - このメッセージの製造時（送信用い -   -  messageTime [0] GeneralizedTimeのOPTIONAL、意図された受信者を識別するトランスポートが「適切な」であろうと考えている、すなわち、 - 時間がまだ受信時に有意義であろうこと）protectionAlg [1]のAlgorithmIdentifier OPTIONAL、 - 保護ビットsenderKIDの計算に使用されるアルゴリズム[2] KeyIdentifier OPTIONAL、recipKID [3] KeyIdentifierオプション、 - 保護トランザクションIDのために使用される特定のキーを識別するための[4] OCTET STRINGをOPTIONAL、 - トランザクションを識別します。 、対応する要求、応答、確認メッセージsenderNonce [5] OCTET STRINGをOPTIONAL、recipNonce [6] OCTET STRINGのOPTIONAL  -   - すなわち、これは同じになり、リプレイ保護、senderNonceを提供するために使用されるノンスは - 作成者によって挿入されますこのメッセージの。 recipNonce  - 以前にすることによって、関連するメッセージに挿入されたナンス - このメッセージフリーテキストの意図された受信者は、[7] PKIFreeText OPTIONALを、 - このコンテキスト固有の命令を示すために使用されてもよい - （このフィールドは、人間の消費のために意図されていますInfoTypeAndValue OPTIONAL OF）generalInfo [8] SEQUENCEサイズ（1..MAX） - このコンテキスト固有の情報を伝えるために使用されてもよい - （このフィールドは、主に人間の消費のために意図されていません）}"
    },
    {
      "indent": 2,
      "text": "PKIFreeText ::= SEQUENCE SIZE (1..MAX) OF UTF8String\n    -- text encoded as UTF-8 String (note:  each UTF8String SHOULD\n    -- include an RFC 1766 language tag to indicate the language\n    -- of the contained text)",
      "raw": true
    },
    {
      "indent": 2,
      "text": "PKIBody ::= CHOICE {       -- message-specific body elements\n    ir      [0]  CertReqMessages,        --Initialization Request\n    ip      [1]  CertRepMessage,         --Initialization Response\n    cr      [2]  CertReqMessages,        --Certification Request\n    cp      [3]  CertRepMessage,         --Certification Response\n    p10cr   [4]  CertificationRequest,   --imported from [PKCS10]\n    popdecc [5]  POPODecKeyChallContent, --pop Challenge\n    popdecr [6]  POPODecKeyRespContent,  --pop Response\n    kur     [7]  CertReqMessages,        --Key Update Request\n    kup     [8]  CertRepMessage,         --Key Update Response\n    krr     [9]  CertReqMessages,        --Key Recovery Request\n    krp     [10] KeyRecRepContent,       --Key Recovery Response\n    rr      [11] RevReqContent,          --Revocation Request\n    rp      [12] RevRepContent,          --Revocation Response ccr     [13] CertReqMessages,        --Cross-Cert. Request\n    ccp     [14] CertRepMessage,         --Cross-Cert. Response\n    ckuann  [15] CAKeyUpdAnnContent,     --CA Key Update Ann.\n    cann    [16] CertAnnContent,         --Certificate Ann.\n    rann    [17] RevAnnContent,          --Revocation Ann.\n    crlann  [18] CRLAnnContent,          --CRL Announcement\n    conf    [19] PKIConfirmContent,      --Confirmation\n    nested  [20] NestedMessageContent,   --Nested Message\n    genm    [21] GenMsgContent,          --General Message\n    genp    [22] GenRepContent,          --General Response\n    error   [23] ErrorMsgContent         --Error Message\n}",
      "raw": true
    },
    {
      "indent": 2,
      "text": "PKIProtection ::= BIT STRING",
      "raw": true
    },
    {
      "indent": 2,
      "text": "ProtectedPart ::= SEQUENCE {\n    header    PKIHeader,\n    body      PKIBody\n}",
      "raw": true
    },
    {
      "indent": 2,
      "text": "PasswordBasedMac ::= OBJECT IDENTIFIER --{1 2 840 113533 7 66 13}",
      "raw": true
    },
    {
      "indent": 2,
      "text": "PBMParameter ::= SEQUENCE {\n    salt                OCTET STRING,\n    owf                 AlgorithmIdentifier,\n    -- AlgId for a One-Way Function (SHA-1 recommended)\n    iterationCount      INTEGER,\n    -- number of times the OWF is applied\n    mac                 AlgorithmIdentifier\n    -- the MAC AlgId (e.g., DES-MAC, Triple-DES-MAC [PKCS11],\n}   -- or HMAC [RFC2104, RFC2202])",
      "raw": true
    },
    {
      "indent": 2,
      "text": "DHBasedMac ::= OBJECT IDENTIFIER --{1 2 840 113533 7 66 30}",
      "raw": true
    },
    {
      "indent": 2,
      "text": "DHBMParameter ::= SEQUENCE {\n    owf                 AlgorithmIdentifier,\n    -- AlgId for a One-Way Function (SHA-1 recommended)\n    mac                 AlgorithmIdentifier\n    -- the MAC AlgId (e.g., DES-MAC, Triple-DES-MAC [PKCS11],\n}   -- or HMAC [RFC2104, RFC2202])",
      "raw": true
    },
    {
      "indent": 2,
      "text": "NestedMessageContent ::= PKIMessage",
      "raw": true
    },
    {
      "indent": 2,
      "text": "PKIStatus ::= INTEGER {\n    granted                (0),\n    -- you got exactly what you asked for\n    grantedWithMods        (1),",
      "raw": true
    },
    {
      "indent": 2,
      "text": " -- you got something like what you asked for; the -- requester is responsible for ascertaining the differences rejection (2), -- you don't get it, more information elsewhere in the message waiting (3), -- the request body part has not yet been processed, -- expect to hear more later revocationWarning (4), -- this message contains a warning that a revocation is -- imminent revocationNotification (5), -- notification that a revocation has occurred keyUpdateWarning (6) -- update already done for the oldCertId specified in -- CertReqMsg }",
      "ja": " - あなたはあなたが求めて何のようなものを得ました。 - 依頼者は、差異の除去（2）を確認する責任がある - 、リクエストボディの部分がまだ処理されていない -   - あなたは（3）、メッセージ待ちの他の場所で、より多くの情報を、それを得ることはありません期待しますこのメッセージが失効であるという警告が含まれてい -   - 切迫revocationNotification（5）、 -  oldCertIdで指定の更新既に行わ - 失効keyUpdateWarning（6）が発生した旨の通知より後revocationWarning（4）を、聞いて -  CertReqMsg}"
    },
    {
      "indent": 2,
      "text": "PKIFailureInfo ::= BIT STRING {\n-- since we can fail in more than one way!\n-- More codes may be added in the future if/when required.\n    badAlg           (0),\n    -- unrecognized or unsupported Algorithm Identifier\n    badMessageCheck  (1),\n    -- integrity check failed (e.g., signature did not verify)\n    badRequest       (2),\n    -- transaction not permitted or supported\n    badTime          (3),\n    -- messageTime was not sufficiently close to the system time,\n    -- as defined by local policy\n    badCertId        (4),\n    -- no certificate could be found matching the provided criteria\n    badDataFormat    (5),\n    -- the data submitted has the wrong format\n    wrongAuthority   (6),\n    -- the authority indicated in the request is different from the\n    -- one creating the response token\n    incorrectData    (7),\n    -- the requester's data is incorrect (for notary services)\n    missingTimeStamp (8),\n    -- when the timestamp is missing but should be there (by policy)\n    badPOP           (9)\n    -- the proof-of-possession failed\n}",
      "raw": true
    },
    {
      "indent": 2,
      "text": "PKIStatusInfo ::= SEQUENCE {\n    status        PKIStatus,\n    statusString  PKIFreeText     OPTIONAL,\n    failInfo      PKIFailureInfo  OPTIONAL",
      "raw": true
    },
    {
      "indent": 2,
      "text": "}",
      "ja": "｝"
    },
    {
      "indent": 2,
      "text": "OOBCert ::= Certificate",
      "raw": true
    },
    {
      "indent": 2,
      "text": "OOBCertHash ::= SEQUENCE {\n    hashAlg     [0] AlgorithmIdentifier     OPTIONAL,\n    certId      [1] CertId                  OPTIONAL,\n    hashVal         BIT STRING\n    -- hashVal is calculated over DER encoding of the\n    -- subjectPublicKey field of the corresponding cert.\n}",
      "raw": true
    },
    {
      "indent": 2,
      "text": "POPODecKeyChallContent ::= SEQUENCE OF Challenge\n-- One Challenge per encryption key certification request (in the\n-- same order as these requests appear in CertReqMessages).",
      "raw": true
    },
    {
      "indent": 2,
      "text": "Challenge ::= SEQUENCE {\n    owf                 AlgorithmIdentifier  OPTIONAL,\n    -- MUST be present in the first Challenge; MAY be omitted in any\n    -- subsequent Challenge in POPODecKeyChallContent (if omitted,\n    -- then the owf used in the immediately preceding Challenge is\n    -- to be used).\n    witness             OCTET STRING,\n    -- the result of applying the one-way function (owf) to a\n    -- randomly-generated INTEGER, A.  [Note that a different\n    -- INTEGER MUST be used for each Challenge.]\n    challenge           OCTET STRING\n    -- the encryption (under the public key for which the cert.\n    -- request is being made) of Rand, where Rand is specified as\n    --   Rand ::= SEQUENCE {\n    --      int      INTEGER,\n    --       - the randomly-generated INTEGER A (above)\n    --      sender   GeneralName\n    --       - the sender's name (as included in PKIHeader)\n    --   }\n}",
      "raw": true
    },
    {
      "indent": 2,
      "text": "POPODecKeyRespContent ::= SEQUENCE OF INTEGER\n-- One INTEGER per encryption key certification request (in the\n-- same order as these requests appear in CertReqMessages).  The\n-- retrieved INTEGER A (above) is returned to the sender of the\n-- corresponding Challenge.",
      "raw": true
    },
    {
      "indent": 2,
      "text": "CertRepMessage ::= SEQUENCE {\n    caPubs       [1] SEQUENCE SIZE (1..MAX) OF Certificate OPTIONAL,\n    response         SEQUENCE OF CertResponse\n}",
      "raw": true
    },
    {
      "indent": 2,
      "text": "CertResponse ::= SEQUENCE {\n    certReqId           INTEGER,\n    -- to match this response with corresponding request (a value\n    -- of -1 is to be used if certReqId is not specified in the\n    -- corresponding request)\n    status              PKIStatusInfo,\n    certifiedKeyPair    CertifiedKeyPair    OPTIONAL,\n    rspInfo             OCTET STRING        OPTIONAL\n    -- analogous to the id-regInfo-asciiPairs OCTET STRING defined\n    -- for regInfo in CertReqMsg [CRMF]\n}",
      "raw": true
    },
    {
      "indent": 2,
      "text": "CertifiedKeyPair ::= SEQUENCE {\n    certOrEncCert       CertOrEncCert,\n    privateKey      [0] EncryptedValue      OPTIONAL,\n    publicationInfo [1] PKIPublicationInfo  OPTIONAL\n}",
      "raw": true
    },
    {
      "indent": 2,
      "text": "CertOrEncCert ::= CHOICE {\n    certificate     [0] Certificate,\n    encryptedCert   [1] EncryptedValue\n}",
      "raw": true
    },
    {
      "indent": 2,
      "text": "KeyRecRepContent ::= SEQUENCE {\n    status                  PKIStatusInfo,\n    newSigCert          [0] Certificate                   OPTIONAL,\n    caCerts             [1] SEQUENCE SIZE (1..MAX) OF\n                                        Certificate       OPTIONAL,\n    keyPairHist         [2] SEQUENCE SIZE (1..MAX) OF\n                                        CertifiedKeyPair  OPTIONAL\n}",
      "raw": true
    },
    {
      "indent": 2,
      "text": "RevReqContent ::= SEQUENCE OF RevDetails",
      "raw": true
    },
    {
      "indent": 2,
      "text": "RevDetails ::= SEQUENCE {\n    certDetails         CertTemplate,\n    -- allows requester to specify as much as they can about\n    -- the cert. for which revocation is requested\n    -- (e.g., for cases in which serialNumber is not available)\n    revocationReason    ReasonFlags      OPTIONAL,\n    -- the reason that revocation is requested\n    badSinceDate        GeneralizedTime  OPTIONAL,\n    -- indicates best knowledge of sender\n    crlEntryDetails     Extensions       OPTIONAL\n    -- requested crlEntryExtensions\n}",
      "raw": true
    },
    {
      "indent": 2,
      "text": "RevRepContent ::= SEQUENCE {",
      "raw": true
    },
    {
      "indent": 2,
      "text": " status SEQUENCE SIZE (1..MAX) OF PKIStatusInfo, -- in same order as was sent in RevReqContent revCerts [0] SEQUENCE SIZE (1..MAX) OF CertId OPTIONAL, -- IDs for which revocation was requested (same order as status) crls [1] SEQUENCE SIZE (1..MAX) OF CertificateList OPTIONAL -- the resulting CRLs (there may be more than one) }",
      "ja": "PKIStatusInfoの状態シーケンスSIZE（1..MAX）、 - 同じ順序でRevReqContent revCertsで送信されたようにCertId OPTIONAL [0] SEQUENCEサイズ（1..MAX）、 - 失効が要求されたIDが（同じ順序とステータス）のCRL CertificateListのOPTIONAL [1] SEQUENCEサイズ（1..MAX） - 得られたCRL（複数あってもよいです）}"
    },
    {
      "indent": 2,
      "text": "CAKeyUpdAnnContent ::= SEQUENCE {\n    oldWithNew          Certificate, -- old pub signed with new priv\n    newWithOld          Certificate, -- new pub signed with old priv\n    newWithNew          Certificate  -- new pub signed with new priv\n}",
      "raw": true
    },
    {
      "indent": 2,
      "text": "CertAnnContent ::= Certificate",
      "raw": true
    },
    {
      "indent": 0,
      "text": "  RevAnnContent ::= SEQUENCE {\n      status              PKIStatus,\n      certId              CertId,\n      willBeRevokedAt     GeneralizedTime,\n      badSinceDate        GeneralizedTime,\n      crlDetails          Extensions  OPTIONAL\n      -- extra CRL details(e.g., crl number, reason, location, etc.)\n}",
      "raw": true
    },
    {
      "indent": 2,
      "text": "CRLAnnContent ::= SEQUENCE OF CertificateList",
      "raw": true
    },
    {
      "indent": 2,
      "text": "PKIConfirmContent ::= NULL",
      "raw": true
    },
    {
      "indent": 2,
      "text": "InfoTypeAndValue ::= SEQUENCE {\n    infoType               OBJECT IDENTIFIER,\n    infoValue              ANY DEFINED BY infoType  OPTIONAL\n}\n-- Example InfoTypeAndValue contents include, but are not limited to:\n--  { CAProtEncCert    = {id-it 1}, Certificate                     }\n--  { SignKeyPairTypes = {id-it 2}, SEQUENCE OF AlgorithmIdentifier }\n--  { EncKeyPairTypes  = {id-it 3}, SEQUENCE OF AlgorithmIdentifier }\n--  { PreferredSymmAlg = {id-it 4}, AlgorithmIdentifier             }\n--  { CAKeyUpdateInfo  = {id-it 5}, CAKeyUpdAnnContent              }\n--  { CurrentCRL       = {id-it 6}, CertificateList                 }\n-- where {id-it} = {id-pkix 4} = {1 3 6 1 5 5 7 4}\n-- This construct MAY also be used to define new PKIX Certificate\n-- Management Protocol request and response messages, or general-\n-- purpose (e.g., announcement) messages for future needs or for\n-- specific environments.",
      "raw": true
    },
    {
      "indent": 2,
      "text": "GenMsgContent ::= SEQUENCE OF InfoTypeAndValue",
      "raw": true
    },
    {
      "indent": 2,
      "text": "-- May be sent by EE, RA, or CA (depending on message content). -- The OPTIONAL infoValue parameter of InfoTypeAndValue will typically -- be omitted for some of the examples given above. The receiver is -- free to ignore any contained OBJ. IDs that it does not recognize. -- If sent from EE to CA, the empty set indicates that the CA may send -- any/all information that it wishes.",
      "ja": " -  EE、RA、またはCA（メッセージの内容に応じて）によって送信されても​​よいです。 -  InfoTypeAndValueのOPTIONAL infoValueパラメータは、典型的には - 上記の例のいくつかのために省略されます。受信機は - どんな含まOBJを無視して自由に。それは認識していないIDを。 - 任意の/それは希望するすべての情報を -  EEからCAに送信された場合は、空のセットは、CAが送ることを示しています。"
    },
    {
      "indent": 2,
      "text": "GenRepContent ::= SEQUENCE OF InfoTypeAndValue\n-- The receiver is free to ignore any contained OBJ. IDs that it does\n-- not recognize.",
      "raw": true
    },
    {
      "indent": 2,
      "text": "ErrorMsgContent ::= SEQUENCE {\n    pKIStatusInfo          PKIStatusInfo,\n    errorCode              INTEGER           OPTIONAL,\n    -- implementation-specific error codes\n    errorDetails           PKIFreeText       OPTIONAL\n    -- implementation-specific error details\n}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "-- The following definition is provided for compatibility reasons with -- 1988 and 1993 ASN.1 compilers which allow the use of UNIVERSAL class -- tags (not a part of formal ASN.1); 1997 and subsequent compilers -- SHOULD comment out this line.",
      "ja": " -  UNIVERSALクラスの使用を可能に1988年から1993 ASN.1コンパイラ -   - 以下の定義は、互換性の理由のために提供されるタグ（正式ASN.1の一部ではありません）。 1997年とそれ以降のコンパイラは - この行をコメントアウトすべきです。"
    },
    {
      "indent": 0,
      "text": "UTF8String ::= [UNIVERSAL 12] IMPLICIT OCTET STRING",
      "raw": true
    },
    {
      "indent": 0,
      "text": "END",
      "ja": "終わり"
    },
    {
      "indent": 0,
      "text": "Appendix D: Registration of MIME Type for Section 5",
      "ja": "付録D：第5節のためのMIMEタイプの登録"
    },
    {
      "indent": 3,
      "text": "To: ietf-types@iana.org Subject: Registration of MIME media type application/pkixcmp",
      "ja": "To：ietf-types@iana.org件名：MIMEメディアタイプapplication / pkixcmpの登録"
    },
    {
      "indent": 3,
      "text": "MIME media type name: application",
      "ja": "MIMEメディアタイプ名：application"
    },
    {
      "indent": 3,
      "text": "MIME subtype name: pkixcmp",
      "ja": "MIMEサブタイプ名：pkixcmp"
    },
    {
      "indent": 3,
      "text": "Required parameters: -",
      "ja": "必須パラメータ： - "
    },
    {
      "indent": 3,
      "text": "Optional parameters: -",
      "ja": "オプションのパラメータ： - "
    },
    {
      "indent": 3,
      "text": "Encoding considerations: Content may contain arbitrary octet values (the ASN.1 DER encoding of a PKI message, as defined in the IETF PKIX Working Group specifications). base64 encoding is required for MIME e-mail; no encoding is necessary for HTTP.",
      "ja": "考察をコードする：（IETF PKIXワーキンググループ仕様で定義されているように、PKIメッセージのASN.1のDER符号化）コンテンツは、任意のオクテット値を含んでいてもよいです。 base64エンコードがMIME電子メールのために必要とされます。何のエンコーディングは、HTTPのために必要ではありません。"
    },
    {
      "indent": 3,
      "text": "Security considerations: This MIME type may be used to transport Public-Key Infrastructure (PKI) messages between PKI entities. These messages are defined by the IETF PKIX Working Group and are used to establish and maintain an Internet X.509 PKI. There is no requirement for specific security mechanisms to be applied at this level if the PKI messages themselves are protected as defined in the PKIX specifications.",
      "ja": "セキュリティの考慮事項：このMIMEタイプは、公開鍵基盤（PKI）PKIエンティティ間でメッセージを転送するために使用することができます。これらのメッセージは、IETF PKIXワーキンググループによって定義されており、インターネットX.509 PKIを確立し、維持するために使用されています。 PKIX仕様で定義されているPKIのメッセージ自体が保護されている場合は、このレベルで適用される特定のセキュリティ・メカニズムのための要件はありません。"
    },
    {
      "indent": 3,
      "text": "Interoperability considerations: -",
      "ja": "相互運用性の考慮事項： - "
    },
    {
      "indent": 3,
      "text": "Published specification: this document",
      "ja": "公開された仕様：このドキュメント"
    },
    {
      "indent": 3,
      "text": "Applications which use this media type: Applications using certificate management, operational, or ancillary protocols (as defined by the IETF PKIX Working Group) to send PKI messages via E-Mail or HTTP.",
      "ja": "EメールまたはHTTP経由でPKIメッセージを送信するために、証明書の管理、運用、または（IETF PKIXワーキンググループによって定義される）補助的なプロトコルを使用しているアプリケーション：このメディアタイプを使用するアプリケーション。"
    },
    {
      "indent": 3,
      "text": "Additional information:",
      "ja": "追加情報："
    },
    {
      "indent": 5,
      "text": "Magic number (s): - File extension (s): \".PKI\" Macintosh File Type Code (s): -",
      "ja": "マジックナンバー（S）： - ファイルの拡張子（S）： \".PKI\" Macintoshファイルタイプコード（S）： - "
    },
    {
      "indent": 3,
      "text": "Person and email address to contact for further information: Carlisle Adams, cadams@entrust.com",
      "ja": "Personと詳細のために連絡する電子メールアドレス：カーライル・アダムス、cadams@entrust.com"
    },
    {
      "indent": 3,
      "text": "Intended usage: COMMON",
      "ja": "意図している用法：COMMON"
    },
    {
      "indent": 3,
      "text": "Author/Change controller: Carlisle Adams",
      "ja": "著者/変更コントローラ：カーライル・アダムス"
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (1999). All Rights Reserved.",
      "ja": "著作権（C）インターネット協会（1999）。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the Internet Society or other Internet organizations, except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed, or as required to translate it into languages other than English.",
      "ja": "この文書とその翻訳は、コピーして他の人に提供し、それ以外についてはコメントまたは派生物は、いかなる種類の制限もなく、全体的にまたは部分的に、準備コピーし、公表して配布することができることを説明したり、その実装を支援することができます、上記の著作権表示とこの段落は、すべてのそのようなコピーや派生物に含まれていることを条件とします。しかし、この文書自体は著作権のための手順はで定義されている場合には、インターネット標準を開発するために必要なものを除き、インターネットソサエティもしくは他のインターネット関連団体に著作権情報や参照を取り除くなど、どのような方法で変更されないかもしれませんインターネット標準化プロセスが続く、または英語以外の言語に翻訳するために、必要に応じなければなりません。"
    },
    {
      "indent": 3,
      "text": "The limited permissions granted above are perpetual and will not be revoked by the Internet Society or its successors or assigns.",
      "ja": "上記の制限は永久で、インターネット学会やその後継者や譲渡者によって取り消されることはありません。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein is provided on an \"AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書とここに含まれている情報は、基礎とインターネットソサエティおよびインターネットエンジニアリングタスクフォースはすべての保証を否認し、明示または黙示、その情報の利用がない任意の保証を含むがこれらに限定されない「として、」上に設けられています特定の目的への権利または商品性または適合性の黙示の保証を侵害します。"
    }
  ]
}