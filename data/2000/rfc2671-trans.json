{
  "title": {
    "text": "RFC 2671 - Extension Mechanisms for DNS (EDNS0)",
    "ja": "RFC 2671 - DNS用拡張メカニズム（EDNS0）"
  },
  "number": 2671,
  "created_at": "2019-10-28 15:05:20.902532+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                            P. Vixie\nRequest for Comments: 2671                                            ISC\nCategory: Standards Track                                     August 1999",
      "raw": true
    },
    {
      "indent": 18,
      "text": "Extension Mechanisms for DNS (EDNS0)",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "このメモの位置付け"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "ja": "この文書は、インターネットコミュニティのためのインターネット標準トラックプロトコルを指定し、改善のための議論と提案を要求します。このプロトコルの標準化状態と状態への「インターネット公式プロトコル標準」（STD 1）の最新版を参照してください。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (1999). All Rights Reserved.",
      "ja": "著作権（C）インターネット協会（1999）。全著作権所有。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "The Domain Name System's wire protocol includes a number of fixed fields whose range has been or soon will be exhausted and does not allow clients to advertise their capabilities to servers. This document describes backward compatible mechanisms for allowing the protocol to grow.",
      "ja": "ドメインネームシステムのワイヤプロトコルは、範囲となっているか、すぐに排出され、クライアントがサーバにその機能を宣伝することはできません固定フィールドの数を含んでいます。このドキュメントは、プロトコルが成長することを可能にするための後方互換性のメカニズムについて説明します。"
    },
    {
      "indent": 0,
      "text": "1 - Rationale and Scope",
      "ja": "1  - 論理的根拠とスコープ"
    },
    {
      "indent": 0,
      "text": "1.1. DNS (see []) specifies a Message Format and within such messages there are standard formats for encoding options, errors, and name compression. The maximum allowable size of a DNS Message is fixed. Many of DNS's protocol limits are too small for uses which are or which are desired to become common. There is no way for implementations to advertise their capabilities.",
      "ja": "1.1。 DNS（[]を参照）は、メッセージフォーマットを指定し、このようなメッセージの中にエンコードオプション、エラー、名前の圧縮のための標準フォーマットがあります。 DNSメッセージの最大許容サイズが固定されています。 DNSのプロトコルの制限の多くは、一般的になることが望まれているかの用途のためには小さすぎます。実装はその機能を宣伝する方法はありません。"
    },
    {
      "indent": 0,
      "text": "1.2. Existing clients will not know how to interpret the protocol extensions detailed here. In practice, these clients will be upgraded when they have need of a new feature, and only new features will make use of the extensions. We must however take account of client behaviour in the face of extra fields, and design a fallback scheme for interoperability with these clients.",
      "ja": "1.2。既存のクライアントは、ここで詳細なプロトコル拡張をどのように解釈するかを知ることができません。彼らは新しい機能の必要性を持っている場合、実際には、これらのクライアントがアップグレードされ、かつ唯一の新機能、拡張機能を利用します。私たちは、しかし、余分なフィールドの顔にクライアントの動作を考慮し、これらのクライアントとの相互運用性のためのフォールバックスキームを設計する必要があります。"
    },
    {
      "indent": 0,
      "text": "2 - Affected Protocol Elements",
      "ja": "2  - プロトコル要素の影響を受けます"
    },
    {
      "indent": 0,
      "text": "2.1. The DNS Message Header's (see [RFC1035 4.1.1]) second full 16-bit word is divided into a 4-bit OPCODE, a 4-bit RCODE, and a number of 1-bit flags. The original reserved Z bits have been allocated to various purposes, and most of the RCODE values are now in use. More flags and more possible RCODEs are needed.",
      "ja": "2.1。 DNSメッセージヘッダの（[RFC1035 4.1.1]参照）は、第2の完全な16ビット・ワードは、4ビットのオペコード、4ビットのRCODE、及び1ビットのフラグの数に分割されます。元の予約Zビットは、様々な目的に割り当てられており、RCODE値のほとんどが現在使用中です。より多くのフラグとより多くの可能性RCODEsが必要とされています。"
    },
    {
      "indent": 0,
      "text": "2.2. The first two bits of a wire format domain label are used to denote the type of the label. [RFC1035 4.1.4] allocates two of the four possible types and reserves the other two. Proposals for use of the remaining types far outnumber those available. More label types are needed.",
      "ja": "2.2。ワイヤ形式ドメインラベルの最初の2ビットは、ラベルの種類を示すために使用されます。 [RFC1035 4.1.4] 4種類のうちの2つを割り当て、他の二つを留保します。残りのタイプを使用するための提案はこれまで、これらの利用可能数を上回ります。その他のラベルタイプが必要とされています。"
    },
    {
      "indent": 0,
      "text": "2.3. DNS Messages are limited to 512 octets in size when sent over UDP. While the minimum maximum reassembly buffer size still allows a limit of 512 octets of UDP payload, most of the hosts now connected to the Internet are able to reassemble larger datagrams. Some mechanism must be created to allow requestors to advertise larger buffer sizes to responders.",
      "ja": "2.3。 UDP経由で送信される際にDNSメッセージのサイズが512オクテットに制限されています。最小最大再アセンブリバッファサイズは依然としてUDPペイロードの512オクテットの制限を可能にしながら、今インターネットに接続されたホストのほとんどは、より大きなデータグラムを再構築することができます。いくつかのメカニズムは、リクエスタがレスポンダに大きなバッファサイズを宣伝できるようにするために作成する必要があります。"
    },
    {
      "indent": 0,
      "text": "3 - Extended Label Types",
      "ja": "3  - 拡張ラベルタイプ"
    },
    {
      "indent": 0,
      "text": "3.1. The \"0 1\" label type will now indicate an extended label type, whose value is encoded in the lower six bits of the first octet of a label. All subsequently developed label types should be encoded using an extended label type.",
      "ja": "3.1。 「0 1」のラベルの種類は、現在値がラベルの最初のオクテットの下位6ビットで符号化された拡張ラベルタイプを示すことになります。すべての後に開発されたラベルタイプは、拡張ラベルタイプを使用してエンコードする必要があります。"
    },
    {
      "indent": 0,
      "text": "3.2. The \"1 1 1 1 1 1\" extended label type will be reserved for future expansion of the extended label type code space.",
      "ja": "3.2。 「1 1 1 1 1 1」拡張ラベルタイプは、拡張ラベルタイプコード空間の将来の拡張のために予約されます。"
    },
    {
      "indent": 0,
      "text": "4 - OPT pseudo-RR",
      "ja": "4  -  OPT疑似RR"
    },
    {
      "indent": 0,
      "text": "4.1. One OPT pseudo-RR can be added to the additional data section of either a request or a response. An OPT is called a pseudo-RR because it pertains to a particular transport level message and not to any actual DNS data. OPT RRs shall never be cached, forwarded, or stored in or loaded from master files. The quantity of OPT pseudo-RRs per message shall be either zero or one, but not greater.",
      "ja": "4.1。一のOPT疑似RRは、要求または応答のいずれかの追加データセクションに追加することができます。それは特定のトランスポートレベルメッセージになく、任意の実際のDNSデータに関係するため、OPT疑似RRと呼ばれます。 OPT RRは、キャッシュされていない転送、またはに保存されているか、マスターファイルからロードされることはないものとします。メッセージあたりOPT疑似RRの量は、0または1のいずれかであるが、大きくはなりません。"
    },
    {
      "indent": 0,
      "text": "4.2. An OPT RR has a fixed part and a variable set of options expressed as {attribute, value} pairs. The fixed part holds some DNS meta data and also a small collection of new protocol elements which we expect to be so popular that it would be a waste of wire space to encode them as {attribute, value} pairs.",
      "ja": "4.2。 OPT RRは固定部分と{属性、値}の対として表現オプションの変数セットを有しています。固定部分は、いくつかのDNSのメタデータとも我々は{属性、値}のペアとしてそれらをエンコードするワイヤスペースの無駄になるほど人気が​​あることを期待し、新しいプロトコル要素の小さなコレクションを保持しています。"
    },
    {
      "indent": 0,
      "text": "4.3. The fixed part of an OPT RR is structured as follows:",
      "section_title": true,
      "ja": "4.3。次のようにOPT RRの固定部が構成されています。"
    },
    {
      "indent": 5,
      "text": "Field Name   Field Type     Description\n------------------------------------------------------\nNAME         domain name    empty (root domain)\nTYPE         u_int16_t      OPT\nCLASS        u_int16_t      sender's UDP payload size\nTTL          u_int32_t      extended RCODE and flags\nRDLEN        u_int16_t      describes RDATA\nRDATA        octet stream   {attribute,value} pairs",
      "raw": true
    },
    {
      "indent": 0,
      "text": "4.4. The variable part of an OPT RR is encoded in its RDATA and is structured as zero or more of the following:",
      "ja": "4.4。 OPT RRの可変部は、RDATAに符号化され、次のゼロ以上のように構成されています。"
    },
    {
      "indent": 2,
      "text": "              +0 (MSB)                            +1 (LSB)\n   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n0: |                          OPTION-CODE                          |\n   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n2: |                         OPTION-LENGTH                         |\n   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n4: |                                                               |\n   /                          OPTION-DATA                          /\n   /                                                               /\n   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "OPTION-CODE (Assigned by IANA.)",
      "ja": "OPTION-CODE（IANAによって割り当てられます。）"
    },
    {
      "indent": 3,
      "text": "OPTION-LENGTH Size (in octets) of OPTION-DATA.",
      "ja": "OPTION-DATAのOPTION-LENGTHサイズ（オクテットで）。"
    },
    {
      "indent": 3,
      "text": "OPTION-DATA Varies per OPTION-CODE.",
      "ja": "OPTION-DATAは、OPTION-CODEごとに異なります。"
    },
    {
      "indent": 0,
      "text": "4.5. The sender's UDP payload size (which OPT stores in the RR CLASS field) is the number of octets of the largest UDP payload that can be reassembled and delivered in the sender's network stack. Note that path MTU, with or without fragmentation, may be smaller than this.",
      "ja": "4.5。 （RRクラスフィールドに格納するOPT）送信者のUDPペイロードサイズは、送信者のネットワークスタックで再構築し、送達することができる最大UDPペイロードのオクテットの数です。これより小さくてもよく、又は断片化することなく、そのパスMTUに留意されたいです。"
    },
    {
      "indent": 0,
      "text": "4.5.1. Note that a 512-octet UDP payload requires a 576-octet IP reassembly buffer. Choosing 1280 on an Ethernet connected requestor would be reasonable. The consequence of choosing too large a value may be an ICMP message from an intermediate gateway, or even a silent drop of the response message.",
      "ja": "4.5.1。 512オクテットUDPペイロードが576オクテットのIP再アセンブリバッファを必要とすることに留意されたいです。イーサネット接続要求元に1280を選択することが合理的です。大きすぎる値を選択した結果は、中間ゲートウェイからICMPメッセージまたは応答メッセージの偶数サイレントドロップしてもよいです。"
    },
    {
      "indent": 0,
      "text": "4.5.2. Both requestors and responders are advised to take account of the path's discovered MTU (if already known) when considering message sizes.",
      "ja": "4.5.2。要求側と応答の両方が（すでに知られている場合）は、メッセージのサイズを検討する際に、パスの発見MTUを考慮することをお勧めします。"
    },
    {
      "indent": 0,
      "text": "4.5.3. The requestor's maximum payload size can change over time, and should therefore not be cached for use beyond the transaction in which it is advertised.",
      "ja": "4.5.3。要求者の最大ペイロードサイズは、時間の経過とともに変化することができますので、それが宣伝されているトランザクションを越えて使用するためにキャッシュするべきではありません。"
    },
    {
      "indent": 0,
      "text": "4.5.4. The responder's maximum payload size can change over time, but can be reasonably expected to remain constant between two sequential transactions; for example, a meaningless QUERY to discover a responder's maximum UDP payload size, followed immediately by an UPDATE which takes advantage of this size. (This is considered preferrable to the outright use of TCP for oversized requests, if there is any reason to suspect that the responder implements EDNS, and if a request will not fit in the default 512 payload size limit.)",
      "ja": "4.5.4。応答の最大ペイロードサイズは、時間の経過とともに変化することができますが、合理的に二つの連続トランザクション間で一定に維持することが期待できます。例えば、応答者の最大UDPペイロードサイズを発見する意味のないQUERYは、このサイズを活用するUPDATE直後。 （レスポンダがEDNSを実装し、要求はデフォルトの512ペイロードサイズ制限に収まらない場合はと疑うに何らかの理由がある場合には、特大の要求のためのTCPのあからさまな使用にpreferrableと考えられています。）"
    },
    {
      "indent": 0,
      "text": "4.5.5. Due to transaction overhead, it is unwise to advertise an architectural limit as a maximum UDP payload size. Just because your stack can reassemble 64KB datagrams, don't assume that you want to spend more than about 4KB of state memory per ongoing transaction.",
      "ja": "4.5.5。トランザクションのオーバーヘッドに、最大のUDPペイロードサイズなどの建築制限を宣伝することは賢明ではありません。あなたのスタックが64キロバイトのデータグラムを再構築することができますという理由だけで、あなたはおよそ4キロバイト継続中のトランザクションごとに状態メモリのより多くを過ごしたいことを前提としていません。"
    },
    {
      "indent": 0,
      "text": "4.6. The extended RCODE and flags (which OPT stores in the RR TTL field) are structured as follows:",
      "ja": "4.6。次のように拡張RCODEと（RRのTTLフィールドに格納するOPT）のフラグが構成されています。"
    },
    {
      "indent": 3,
      "text": "              +0 (MSB)                            +1 (LSB)\n   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n0: |         EXTENDED-RCODE        |            VERSION            |\n   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n2: |                               Z                               |\n   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "EXTENDED-RCODE Forms upper 8 bits of extended 12-bit RCODE. Note that EXTENDED-RCODE value \"0\" indicates that an unextended RCODE is in use (values \"0\" through \"15\").",
      "ja": "拡張RCODEフォーム拡張12ビットRCODEの上位8ビット。拡張RCODE値「0」は非伸長RCODEが使用中であることを示していることに注意してください（値「15」から「0」）。"
    },
    {
      "indent": 3,
      "text": "VERSION Indicates the implementation level of whoever sets it. Full conformance with this specification is indicated by version \"0.\" Requestors are encouraged to set this to the lowest implemented level capable of expressing a transaction, to minimize the responder and network load of discovering the greatest common implementation level between requestor and responder. A requestor's version numbering strategy should ideally be a run time configuration option.",
      "ja": "VERSIONは、それを設定し、誰の実装レベルを示します。この仕様に完全準拠し、バージョン「0」で表示されますリクエスタは、リクエスタとレスポンダとの間の最大公約数実装レベルを発見する応答及びネットワーク負荷を最小にするために、トランザクションを発現することができる最も低い実施レベルにこれを設定することが推奨されています。要求元のバージョン番号の戦略は、理想的には、実行時の設定オプションでなければなりません。"
    },
    {
      "indent": 19,
      "text": "If a responder does not implement the VERSION level\nof the request, then it answers with RCODE=BADVERS.\nAll responses will be limited in format to the",
      "raw": true
    },
    {
      "indent": 19,
      "text": "VERSION level of the request, but the VERSION of each response will be the highest implementation level of the responder. In this way a requestor will learn the implementation level of a responder as a side effect of every response, including error responses, including RCODE=BADVERS.",
      "ja": "バージョン要求のレベルが、各応答のバージョンがレスポンダの最高実装レベルであろう。このように、リクエスタはRCODE = BADVERS含むエラー応答を含め、すべての応答の副作用としてレスポンダの実装レベルを学びます。"
    },
    {
      "indent": 3,
      "text": "Z Set to zero by senders and ignored by receivers, unless modified in a subsequent specification.",
      "ja": "Zは、送信者によってゼロに設定し、その後の仕様に変更しない限り、受信機によって無視します。"
    },
    {
      "indent": 0,
      "text": "5 - Transport Considerations",
      "ja": "5  - トランスポートの考慮事項"
    },
    {
      "indent": 0,
      "text": "5.1. The presence of an OPT pseudo-RR in a request should be taken as an indication that the requestor fully implements the given version of EDNS, and can correctly understand any response that conforms to that feature's specification.",
      "ja": "5.1。要求にOPT疑似RRの存在は、リクエスタが完全EDNSの所与のバージョンを実装し、正しくその機能の仕様に準拠する任意の応答を理解することができることを示すものとして解釈されるべきです。"
    },
    {
      "indent": 0,
      "text": "5.2. Lack of use of these features in a request must be taken as an indication that the requestor does not implement any part of this specification and that the responder may make no use of any protocol extension described here in its response.",
      "ja": "5.2。要求におけるこれらの機能の使用の欠如は、リクエスタは、本明細書の任意の部分を実装していないと応答が応答してここに記載される任意のプロトコル拡張を全く利用しないかもしれないことを示すと解釈されなければなりません。"
    },
    {
      "indent": 0,
      "text": "5.3. Responders who do not understand these protocol extensions are expected to send a response with RCODE NOTIMPL, FORMERR, or SERVFAIL. Therefore use of extensions should be \"probed\" such that a responder who isn't known to support them be allowed a retry with no extensions if it responds with such an RCODE. If a responder's capability level is cached by a requestor, a new probe should be sent periodically to test for changes to responder capability.",
      "ja": "5.3。これらのプロトコル拡張を理解していないレスポンダはRCODE NOTIMPL、FORMERR、またはSERVFAILとの応答を送信することが期待されています。それは、このようなRCODEで応答した場合そのため、「精査」しなければならない拡張子の使用が知られていない応答者がそれらをサポートするようにはいない拡張子の再試行を許可します。応答者の能力レベルが要求者によってキャッシュされている場合、新しいプローブが応答機能への変更をテストするために定期的に送信する必要があります。"
    },
    {
      "indent": 0,
      "text": "6 - Security Considerations",
      "ja": "6  - セキュリティの考慮事項"
    },
    {
      "indent": 5,
      "text": "Requestor-side specification of the maximum buffer size may open a\nnew DNS denial of service attack if responders can be made to send\nmessages which are too large for intermediate gateways to forward,\nthus leading to potential ICMP storms between gateways and\nresponders.",
      "raw": true
    },
    {
      "indent": 0,
      "text": "7 - IANA Considerations",
      "ja": "7  -  IANAの考慮事項"
    },
    {
      "indent": 5,
      "text": "The IANA has assigned RR type code 41 for OPT.",
      "ja": "IANAは、OPTのためのRRタイプコード41が割り当てられています。"
    },
    {
      "indent": 5,
      "text": "It is the recommendation of this document and its working group that IANA create a registry for EDNS Extended Label Types, for EDNS Option Codes, and for EDNS Version Numbers.",
      "ja": "これは、IANAがEDNSオプションコードのため、およびEDNSバージョン番号のために、EDNS拡張ラベルタイプのレジストリを作成し、この文書とその作業部会の勧告です。"
    },
    {
      "indent": 5,
      "text": "This document assigns label type 0b01xxxxxx as \"EDNS Extended Label Type.\" We request that IANA record this assignment.",
      "ja": "この文書では、とラベルタイプの0b01xxxxxxを割り当て「EDNS拡張ラベルタイプ。」私たちは、IANAは、この割り当てを記録することを要求します。"
    },
    {
      "indent": 5,
      "text": "This document assigns extended label type 0bxx111111 as \"Reserved for future extended label types.\" We request that IANA record this assignment.",
      "ja": "「将来の拡張ラベルタイプのために予約されています。」とこの文書は、拡張ラベルタイプ0bxx111111を割り当て私たちは、IANAは、この割り当てを記録することを要求します。"
    },
    {
      "indent": 5,
      "text": "This document assigns option code 65535 to \"Reserved for future expansion.\"",
      "ja": "この文書は、「将来の拡張のために予約されています。」にオプションコード65535を割り当て"
    },
    {
      "indent": 5,
      "text": "This document expands the RCODE space from 4 bits to 12 bits. This will allow IANA to assign more than the 16 distinct RCODE values allowed in [RFC1035].",
      "ja": "この文書では、12ビットに4ビットからRCODE空間を拡張します。これは、IANAは[RFC1035]で許可さ16個の異なるRCODE値以上に割り当てることができます。"
    },
    {
      "indent": 5,
      "text": "This document assigns EDNS Extended RCODE \"16\" to \"BADVERS\".",
      "ja": "この文書では、EDNS拡張RCODE「16」に「BADVERS」を割り当てます。"
    },
    {
      "indent": 5,
      "text": "IESG approval should be required to create new entries in the EDNS Extended Label Type or EDNS Version Number registries, while any published RFC (including Informational, Experimental, or BCP) should be grounds for allocation of an EDNS Option Code.",
      "ja": "（情報、実験、またはBCPを含む）任意の公表RFCがEDNSオプションコードの割り当ての根拠である必要がありながら、IESGの承認は、EDNS拡張ラベルタイプまたはEDNSバージョン番号のレジストリに新しいエントリを作成するために必要とされるべきです。"
    },
    {
      "indent": 0,
      "text": "8 - Acknowledgements",
      "ja": "8  - 謝辞"
    },
    {
      "indent": 5,
      "text": "Paul Mockapetris, Mark Andrews, Robert Elz, Don Lewis, Bob Halley,\nDonald Eastlake, Rob Austein, Matt Crawford, Randy Bush, and Thomas\nNarten were each instrumental in creating and refining this\nspecification.",
      "raw": true
    },
    {
      "indent": 0,
      "text": "9 - References",
      "ja": "9  - 参考文献"
    },
    {
      "indent": 4,
      "text": "[RFC1035]  Mockapetris, P., \"Domain Names - Implementation and\n           Specification\", STD 13, RFC 1035, November 1987.",
      "raw": true
    },
    {
      "indent": 0,
      "text": "10 - Author's Address",
      "ja": "10  - 著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Paul Vixie Internet Software Consortium 950 Charter Street Redwood City, CA 94063",
      "ja": "ポール・ヴィクシーインターネットSoftware Consortiumの950憲章通りカリフォルニア州レッドウッドシティー94063"
    },
    {
      "indent": 3,
      "text": "Phone: +1 650 779 7001 EMail: vixie@isc.org",
      "ja": "電話：+1 650 779 7001 Eメール：vixie@isc.org"
    },
    {
      "indent": 0,
      "text": "11 - Full Copyright Statement",
      "ja": "11  - 完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (1999). All Rights Reserved.",
      "ja": "著作権（C）インターネット協会（1999）。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the Internet Society or other Internet organizations, except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed, or as required to translate it into languages other than English.",
      "ja": "この文書とその翻訳は、コピーして他の人に提供し、それ以外についてはコメントまたは派生物は、いかなる種類の制限もなく、全体的にまたは部分的に、準備コピーし、公表して配布することができることを説明したり、その実装を支援することができます、上記の著作権表示とこの段落は、すべてのそのようなコピーや派生物に含まれていることを条件とします。しかし、この文書自体は著作権のための手順はで定義されている場合には、インターネット標準を開発するために必要なものを除き、インターネットソサエティもしくは他のインターネット関連団体に著作権情報や参照を取り除くなど、どのような方法で変更されないかもしれませんインターネット標準化プロセスが続く、または英語以外の言語に翻訳するために、必要に応じなければなりません。"
    },
    {
      "indent": 3,
      "text": "The limited permissions granted above are perpetual and will not be revoked by the Internet Society or its successors or assigns.",
      "ja": "上記の制限は永久で、インターネット学会やその後継者や譲渡者によって取り消されることはありません。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein is provided on an \"AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書とここに含まれている情報は、基礎とインターネットソサエティおよびインターネットエンジニアリングタスクフォースはすべての保証を否認し、明示または黙示、その情報の利用がない任意の保証を含むがこれらに限定されない「として、」上に設けられています特定の目的への権利または商品性または適合性の黙示の保証を侵害します。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "ja": "RFC Editor機能のための基金は現在、インターネット協会によって提供されます。"
    }
  ]
}