{
  "title": {
    "text": "RFC 2845 - Secret Key Transaction Authentication for DNS (TSIG)",
    "ja": "RFC 2845 - DNSのための秘密鍵トランザクション認証（TSIG）"
  },
  "number": 2845,
  "created_at": "2019-10-31 05:34:44.230943+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                             P. Vixie\nRequest for Comments: 2845                                             ISC\nCategory: Standards Track                                   O. Gudmundsson\nUpdates: 1035                                                     NAI Labs\n                                                           D. Eastlake 3rd\n                                                                  Motorola\n                                                             B. Wellington\n                                                                   Nominum\n                                                                  May 2000",
      "raw": true
    },
    {
      "indent": 10,
      "text": "Secret Key Transaction Authentication for DNS (TSIG)",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "このメモの位置付け"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "ja": "この文書は、インターネットコミュニティのためのインターネット標準トラックプロトコルを指定し、改善のための議論と提案を要求します。このプロトコルの標準化状態と状態への「インターネット公式プロトコル標準」（STD 1）の最新版を参照してください。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2000). All Rights Reserved.",
      "ja": "著作権（C）インターネット協会（2000）。全著作権所有。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This protocol allows for transaction level authentication using shared secrets and one way hashing. It can be used to authenticate dynamic updates as coming from an approved client, or to authenticate responses as coming from an approved recursive name server.",
      "ja": "このプロトコルは、共有秘密と一方向ハッシュを使用して、トランザクション・レベルの認証が可能になります。承認されたクライアントから来るとして動的更新を認証するために、または承認された再帰ネームサーバからの応答としての認証に使用することができます。"
    },
    {
      "indent": 3,
      "text": "No provision has been made here for distributing the shared secrets; it is expected that a network administrator will statically configure name servers and clients using some out of band mechanism such as sneaker-net until a secure automated mechanism for key distribution is available.",
      "ja": "規定は、共有秘密を配信するために、ここで行われていません。鍵の配布のための安全な自動化されたメカニズムが使用可能になるまで、ネットワーク管理者は、静的なスニーカー・ネットとしてバンドメカニズムのうちのいくつかを使用してネームサーバとクライアントを構成することが期待されます。"
    },
    {
      "indent": 0,
      "text": "1 - Introduction",
      "ja": "1  - はじめに"
    },
    {
      "indent": 3,
      "text": "1.1. The Domain Name System (DNS) [RFC1034, RFC1035] is a replicated hierarchical distributed database system that provides information fundamental to Internet operations, such as name <=> address translation and mail handling information. DNS has recently been extended [RFC2535] to provide for data origin authentication, and public key distribution, all based on public key cryptography and public key based digital signatures. To be practical, this form of security generally requires extensive local caching of keys and tracing of authentication through multiple keys and signatures to a pre-trusted locally configured key.",
      "ja": "1.1. ドメインネームシステム（DNS）[RFC1034、RFC1035]は、名前<=>情報を処理するアドレス変換やメールなどのインターネット操作に基本情報を提供するレプリケート階層型分散データベースシステムです。 DNSは最近、データ発信元認証、公開鍵配布を提供する[RFC2535]を拡張された、すべての公開鍵暗号と公開鍵ベースのデジタル署名に基づきます。実用的には、セキュリティのこの形態は、一般的にプリ信頼ローカルに設定されたキーに複数の鍵と署名を介してキーおよび認証のトレースの広範なローカルキャッシングを必要とします。"
    },
    {
      "indent": 3,
      "text": "1.2. One difficulty with the [RFC2535] scheme is that common DNS implementations include simple \"stub\" resolvers which do not have caches. Such resolvers typically rely on a caching DNS server on another host. It is impractical for these stub resolvers to perform general [RFC2535] authentication and they would naturally depend on their caching DNS server to perform such services for them. To do so securely requires secure communication of queries and responses. [RFC2535] provides public key transaction signatures to support this, but such signatures are very expensive computationally to generate. In general, these require the same complex public key logic that is impractical for stubs. This document specifies use of a message authentication code (MAC), specifically HMAC-MD5 (a keyed hash function), to provide an efficient means of point-to-point authentication and integrity checking for transactions.",
      "ja": "1.2.  [RFC2535]のスキームの一つの難しさは、一般的なDNS実装がキャッシュを持たないシンプルな「スタブ」リゾルバが含まれていることです。このようなリゾルバは通常、別のホスト上のキャッシュDNSサーバーに依存しています。これらのスタブリゾルバは、一般的な[RFC2535]認証を実行するために、彼らは自然に彼らのためにこのようなサービスを実行するために彼らのキャッシュDNSサーバに依存するのは非現実的です。そうするためには、しっかりとクエリと応答の安全な通信を必要とします。 [RFC2535]はこれをサポートするために、公開鍵トランザクション署名を提供しますが、そのような署名が生成する非常に高価な計算があります。一般的に、これらは、スタブのは非現実的であると同じ複雑な公開鍵ロジックが必要です。この文書は、トランザクションのチェックポイント・ツー・ポイントの認証と完全性の効率的な手段を提供するために、メッセージ認証コード（MAC）、具体的にはHMAC-MD5（鍵付きハッシュ関数）の使用を指定します。"
    },
    {
      "indent": 3,
      "text": "1.3. A second area where use of straight [RFC2535] public key based mechanisms may be impractical is authenticating dynamic update [RFC2136] requests. [RFC2535] provides for request signatures but with [RFC2535] they, like transaction signatures, require computationally expensive public key cryptography and complex authentication logic. Secure Domain Name System Dynamic Update ([RFC2137]) describes how different keys are used in dynamically updated zones. This document's secret key based MACs can be used to authenticate DNS update requests as well as transaction responses, providing a lightweight alternative to the protocol described by [RFC2137].",
      "ja": "1.3. 直[RFC2535]公開鍵ベースの機構の使用が非実用的であってもよい第2の領域は、動的更新[RFC2136]の要求を認証しています。 [RFC2535]は、要求の署名のためではなく、[RFC2535]彼らに提供し、トランザクション署名と同様に、計算コストの高い公開鍵暗号と複雑な認証ロジックが必要になります。セキュアドメインネームシステム動的な更新（[RFC2137]）は、動的に更新されたゾーンでどのように使用されるかの異なるキーについて説明します。このドキュメントの秘密鍵ベースのMacには、[RFC2137]で説明されたプロトコルに軽量な代替手段を提供し、DNSの更新要求だけでなく、トランザクション応答を認証するために使用することができます。"
    },
    {
      "indent": 3,
      "text": "1.4. A further use of this mechanism is to protect zone transfers. In this case the data covered would be the whole zone transfer including any glue records sent. The protocol described by [RFC2535] does not protect glue records and unsigned records unless SIG(0) (transaction signature) is used.",
      "ja": "1.4. このメカニズムのさらなる使用は、ゾーン転送を保護することです。この場合、カバーされたデータは、送信されたグルーレコードを含む全ゾーン転送になります。 SIG（0）（トランザクション署名）が使用されない限り、[RFC2535]で説明されたプロトコルは、グルーレコードと符号なしのレコードを保護しません。"
    },
    {
      "indent": 3,
      "text": "1.5. The authentication mechanism proposed in this document uses shared secret keys to establish a trust relationship between two entities. Such keys must be protected in a fashion similar to private keys, lest a third party masquerade as one of the intended parties (forge MACs). There is an urgent need to provide simple and efficient authentication between clients and local servers and this proposal addresses that need. This proposal is unsuitable for general server to server authentication for servers which speak with many other servers, since key management would become unwieldy with the number of shared keys going up quadratically. But it is suitable for many resolvers on hosts that only talk to a few recursive servers.",
      "ja": "1.5. この文書で提案されている認証メカニズムは、2つのエンティティ間の信頼関係を確立するために共有秘密鍵を使用しています。第三者が意図した政党（MACを偽造）の一つとして装うないような鍵は、秘密鍵と同様の方法で保護されなければなりません。クライアントとローカルサーバと必要なこの提案アドレス間のシンプルで効率的な認証を提供することが急務となっています。この提案は、鍵管理、共有キーの数は、二次上がっていくと手に負えなくなることから、多くの他のサーバーと話すサーバのサーバ認証への一般的なサーバには不向きです。しかし、それはほんの数再帰的なサーバに話をホスト上の多くのリゾルバに適しています。"
    },
    {
      "indent": 3,
      "text": "1.6. A server acting as an indirect caching resolver -- a \"forwarder\" in common usage -- might use transaction-based authentication when communicating with its small number of preconfigured \"upstream\" servers. Other uses of DNS secret key authentication and possible systems for automatic secret key distribution may be proposed in separate future documents.",
      "ja": "1.6. 間接的なキャッシュリゾルバとして動作するサーバー - 一般的な用法「フォワーダは、」 - 設定済みの「上流」のサーバのその小さな数と通信する際にトランザクションベースの認証を使用する場合があります。自動秘密鍵の配布のためのDNS秘密鍵認証や可能性システムの他の用途には、別々の将来の文書で提案することができます。"
    },
    {
      "indent": 3,
      "text": "1.7. New Assigned Numbers",
      "section_title": true,
      "ja": "1.7. 新しい割り当て番号"
    },
    {
      "indent": 6,
      "text": "RRTYPE = TSIG (250) ERROR = 0..15 (a DNS RCODE) ERROR = 16 (BADSIG) ERROR = 17 (BADKEY) ERROR = 18 (BADTIME)",
      "ja": "RRTYPE = TSIG（250）ERROR = 0..15（DNSのRCODE）ERROR = 16（BADSIG）ERROR = 17（BADKEY）ERROR = 18（BADTIME）"
    },
    {
      "indent": 3,
      "text": "1.8. The key words \"MUST\", \"REQUIRED\", \"SHOULD\", \"RECOMMENDED\", and \"MAY\" in this document are to be interpreted as described in [RFC 2119].",
      "ja": "1.8. キーワード「MUST」、「REQUIRED」は、「推奨」、「SHOULD」、および本書では[RFC 2119]で説明されるように解釈される「場合があります」。"
    },
    {
      "indent": 0,
      "text": "2 - TSIG RR Format",
      "ja": "2  -  RR形式の下"
    },
    {
      "indent": 3,
      "text": "2.1 TSIG RR Type",
      "section_title": true,
      "ja": "2.1 RRタイプに下位"
    },
    {
      "indent": 3,
      "text": "To provide secret key authentication, we use a new RR type whose mnemonic is TSIG and whose type code is 250. TSIG is a meta-RR and MUST not be cached. TSIG RRs are used for authentication between DNS entities that have established a shared secret key. TSIG RRs are dynamically computed to cover a particular DNS transaction and are not DNS RRs in the usual sense.",
      "ja": "秘密鍵認証を提供するために、我々は、そのニーモニックTSIGとタイプコード250 TSIGであるメタRRで、キャッシュされてはいけません新しいRRタイプを使用します。 TSIG RRは共有秘密鍵を確立しているDNSエンティティ間の認証に使用されています。 TSIG RRは動的に特定のDNSトランザクションをカバーするために計算され、通常の意味でのDNS RRはありません。"
    },
    {
      "indent": 3,
      "text": "2.2 TSIG Calculation",
      "section_title": true,
      "ja": "2.2計算に低いです"
    },
    {
      "indent": 3,
      "text": "As the TSIG RRs are related to one DNS request/response, there is no value in storing or retransmitting them, thus the TSIG RR is discarded once it has been used to authenticate a DNS message. The only message digest algorithm specified in this document is \"HMAC-MD5\" (see [RFC1321], [RFC2104]). The \"HMAC-MD5\" algorithm is mandatory to implement for interoperability. Other algorithms can be specified at a later date. Names and definitions of new algorithms MUST be registered with IANA. All multi-octet integers in the TSIG record are sent in network byte order (see [RFC1035 2.3.2]).",
      "ja": "TSIG資源レコードは、1つのDNS要求/応答に関連しているように、DNSメッセージを認証するために使用された後従ってTSIG RRが破棄されるそれらを保存または再送信には値が存在しません。本書で指定された唯一のメッセージダイジェストアルゴリズムは、（[RFC1321]、[RFC2104]を参照）、 \"HMAC-MD5\" です。 「HMAC-MD5」アルゴリズムは、相互運用性のための実装が必須です。他のアルゴリズムは後日指定することができます。新しいアルゴリズムの名称及び定義は、IANAに登録しなければなりません。 TSIGレコードのすべてのマルチオクテット整数はネットワークバイト順序で送信されます（[RFC1035 2.3.2]を参照）。"
    },
    {
      "indent": 3,
      "text": "2.3. Record Format",
      "section_title": true,
      "ja": "2.3. レコード形式"
    },
    {
      "indent": 4,
      "text": "NAME The name of the key used in domain name syntax. The name should reflect the names of the hosts and uniquely identify the key among a set of keys these two hosts may share at any given time. If hosts A.site.example and B.example.net share a key, possibilities for the key name include <id>.A.site.example, <id>.B.example.net, and <id>.A.site.example.B.example.net. It should be possible for more than one key to be in simultaneous use among a set of interacting hosts. The name only needs to be meaningful to the communicating hosts but a meaningful mnemonic name as above is strongly recommended.",
      "ja": "ドメイン名の構文で使用されるキーの名前です。名前は、ホストの名前を反映して一意にこれら2つのホストが任意の時点で共有することができるキーのセットのうちの鍵を識別すべきです。ホストA.site.exampleとB.example.netが鍵を共有する場合は、キー名の可能性が、<ID> .A.site.example、<id>の.B.example.net、および<ID> .Aが含まれます。 site.example.B.example.net。複数のキーが相互作用するホストの集合の中同時使用であることが可能でなければなりません。名前は唯一の通信ホストに有意義にする必要があるが、上記のように意味のあるニーモニック名を強くお勧めします。"
    },
    {
      "indent": 9,
      "text": "The name may be used as a local index to the key involved and\nit is recommended that it be globally unique.  Where a key is\njust shared between two hosts, its name actually only need\nonly be meaningful to them but it is recommended that the key\nname be mnemonic and incorporate the resolver and server host\nnames in that order.",
      "raw": true
    },
    {
      "indent": 4,
      "text": "TYPE TSIG (250: Transaction SIGnature)",
      "ja": "TYPE高いレベル（250：トランザクション署名）"
    },
    {
      "indent": 4,
      "text": "CLASS ANY",
      "ja": "CLASS ANY"
    },
    {
      "indent": 4,
      "text": "TTL 0",
      "ja": "TTL 0"
    },
    {
      "indent": 4,
      "text": "RdLen (variable)",
      "ja": "RdLen（変数）"
    },
    {
      "indent": 4,
      "text": "RDATA",
      "ja": "RDATA"
    },
    {
      "indent": 6,
      "text": "Field Name       Data Type      Notes\n--------------------------------------------------------------\nAlgorithm Name   domain-name    Name of the algorithm\n                                in domain name syntax.\nTime Signed      u_int48_t      seconds since 1-Jan-70 UTC.\nFudge            u_int16_t      seconds of error permitted\n                                in Time Signed.\nMAC Size         u_int16_t      number of octets in MAC.\nMAC              octet stream   defined by Algorithm Name.\nOriginal ID      u_int16_t      original message ID\nError            u_int16_t      expanded RCODE covering\n                                TSIG processing.\nOther Len        u_int16_t      length, in octets, of\n                                Other Data.\nOther Data       octet stream   empty unless Error == BADTIME",
      "raw": true
    },
    {
      "indent": 3,
      "text": "2.4. Example",
      "section_title": true,
      "ja": "2.4. 例"
    },
    {
      "indent": 6,
      "text": "NAME HOST.EXAMPLE.",
      "ja": "NAMEのHOST.EXAMPLE。"
    },
    {
      "indent": 6,
      "text": "TYPE TSIG",
      "ja": "より高いレベルを入力"
    },
    {
      "indent": 6,
      "text": "CLASS ANY",
      "ja": "CLASS ANY"
    },
    {
      "indent": 6,
      "text": "TTL 0",
      "ja": "TTL 0"
    },
    {
      "indent": 6,
      "text": "RdLen as appropriate",
      "ja": "必要に応じてRdLen"
    },
    {
      "indent": 6,
      "text": "RDATA",
      "ja": "RDATA"
    },
    {
      "indent": 9,
      "text": "Field Name       Contents\n-------------------------------------\nAlgorithm Name   SAMPLE-ALG.EXAMPLE.\nTime Signed      853804800\nFudge            300\nMAC Size         as appropriate\nMAC              as appropriate\nOriginal ID      as appropriate\nError            0 (NOERROR)\nOther Len        0\nOther Data       empty",
      "raw": true
    },
    {
      "indent": 0,
      "text": "3 - Protocol Operation",
      "ja": "3  - プロトコル動作"
    },
    {
      "indent": 3,
      "text": "3.1. Effects of adding TSIG to outgoing message",
      "section_title": true,
      "ja": "3.1. 送信メッセージにTSIGを添加効果"
    },
    {
      "indent": 3,
      "text": "Once the outgoing message has been constructed, the keyed message digest operation can be performed. The resulting message digest will then be stored in a TSIG which is appended to the additional data section (the ARCOUNT is incremented to reflect this). If the TSIG record cannot be added without causing the message to be truncated, the server MUST alter the response so that a TSIG can be included. This response consists of only the question and a TSIG record, and has the TC bit set and RCODE 0 (NOERROR). The client SHOULD at this point retry the request using TCP (per [RFC1035 4.2.2]).",
      "ja": "送信メッセージが構築されたら、鍵付きメッセージが操作を行うことができるダイジェスト。得られたメッセージダイジェストは、次いで、追加のデータセクション（ARCOUNTはこれを反映するようにインクリメントされる）に追加されTSIGに格納されます。 TSIGレコードが切り捨てられるべきメッセージを発生させることなく添加することができない場合、サーバはTSIGを含めることができるように応答を変更する必要があります。この応答は、質問とTSIGレコードで構成され、TCビットがセットとRCODE 0（NOERROR）を持っています。クライアントは、この時点で（[RFC1035 4.2.2]あたり）TCPを使用して要求を再試行すべきです。"
    },
    {
      "indent": 3,
      "text": "3.2. TSIG processing on incoming messages",
      "section_title": true,
      "ja": "3.2. 受信メッセージにTSIG処理"
    },
    {
      "indent": 3,
      "text": "If an incoming message contains a TSIG record, it MUST be the last record in the additional section. Multiple TSIG records are not allowed. If a TSIG record is present in any other position, the packet is dropped and a response with RCODE 1 (FORMERR) MUST be returned. Upon receipt of a message with a correctly placed TSIG RR, the TSIG RR is copied to a safe location, removed from the DNS",
      "ja": "着信メッセージがTSIGレコードが含まれている場合、それは追加のセクションの最後のレコードでなければなりません。複数のTSIGレコードは許可されていません。 TSIGレコードが他の位置に存在する場合、パケットはドロップされ、RCODE 1（FORMERR）との応答が返されなければなりません。正しく配置TSIG RRを有するメッセージを受信すると、TSIG RRは、DNSから除去、安全な場所にコピーされ"
    },
    {
      "indent": 3,
      "text": "Message, and decremented out of the DNS message header's ARCOUNT. At this point the keyed message digest operation is performed. If the algorithm name or key name is unknown to the recipient, or if the message digests do not match, the whole DNS message MUST be discarded. If the message is a query, a response with RCODE 9 (NOTAUTH) MUST be sent back to the originator with TSIG ERROR 17 (BADKEY) or TSIG ERROR 16 (BADSIG). If no key is available to sign this message it MUST be sent unsigned (MAC size == 0 and empty MAC). A message to the system operations log SHOULD be generated, to warn the operations staff of a possible security incident in progress. Care should be taken to ensure that logging of this type of event does not open the system to a denial of service attack.",
      "ja": "メッセージ、およびDNSメッセージヘッダのARCOUNTの外に減らさ。この時点で鍵付きメッセージダイジェスト動作が行われます。アルゴリズム名またはキー名が受信者に不明な場合はメッセージダイジェストが一致しない場合、または、全体のDNSメッセージを捨てなければなりません。メッセージがクエリである場合、RCODE 9（NOTAUTH）との応答がTSIGエラー17（BADKEY）またはTSIGエラー16（BADSIG）で逆発信者に送信されなければなりません。どのキーがこのメッセージに署名するために使用できない場合には（MACサイズ== 0と空MAC）の符号なし送らなければなりません。システム操作ログにメッセージが進行中の可能なセキュリティインシデントの運用スタッフに警告するために、生成されるべきです。ケアは、このタイプのイベントのロギングがサービス拒否攻撃にシステムを開かないように注意する必要があります。"
    },
    {
      "indent": 3,
      "text": "3.3. Time values used in TSIG calculations",
      "section_title": true,
      "ja": "3.3.  TSIGの計算に使用される時間値"
    },
    {
      "indent": 3,
      "text": "The data digested includes the two timer values in the TSIG header in order to defend against replay attacks. If this were not done, an attacker could replay old messages but update the \"Time Signed\" and \"Fudge\" fields to make the message look new. This data is named \"TSIG Timers\", and for the purpose of digest calculation they are invoked in their \"on the wire\" format, in the following order: first Time Signed, then Fudge. For example:",
      "ja": "消化されたデータは、リプレイ攻撃を防御するためにTSIGヘッダ内の2つのタイマー値を含みます。これが行われなかった場合、攻撃者は古いメッセージを再生するが、メッセージは、新しい見えるように「タイム署名」と「ファッジ」フィールドを更新することができます。このデータは「TSIGタイマ」と命名され、そしてダイジェスト計算の目的のために、彼らは次の順序で、彼らの「ワイヤー上」の形式で呼び出されます：最初の時間は、その後、ファッジを締結します。例えば："
    },
    {
      "indent": 0,
      "text": "Field Name    Value       Wire Format         Meaning\n----------------------------------------------------------------------\nTime Signed   853804800   00 00 32 e4 07 00   Tue Jan 21 00:00:00 1997\nFudge         300         01 2C               5 minutes",
      "raw": true
    },
    {
      "indent": 3,
      "text": "3.4. TSIG Variables and Coverage",
      "section_title": true,
      "ja": "3.4.  TSIG変数とカバレッジ"
    },
    {
      "indent": 3,
      "text": "When generating or verifying the contents of a TSIG record, the following data are digested, in network byte order or wire format, as appropriate:",
      "ja": "生成またはTSIGレコードの内容を確認する場合、以下のデータが必要に応じて、ネットワークバイト順またはワイヤフォーマットで、消化されます。"
    },
    {
      "indent": 3,
      "text": "3.4.1. DNS Message",
      "section_title": true,
      "ja": "3.4.1.  DNSメッセージ"
    },
    {
      "indent": 3,
      "text": "A whole and complete DNS message in wire format, before the TSIG RR has been added to the additional data section and before the DNS Message Header's ARCOUNT field has been incremented to contain the TSIG RR. If the message ID differs from the original message ID, the original message ID is substituted for the message ID. This could happen when forwarding a dynamic update request, for example.",
      "ja": "TSIG RRは、追加のデータセクション及びDNSメッセージヘッダーのARCOUNTフィールドがTSIG RRを含むようにインクリメントされる前に添加される前にワイヤフォーマットで、全体で完全なDNSメッセージ、。メッセージIDは、元のメッセージIDと異なる場合、元のメッセージIDは、メッセージIDを代入します。例えば、動的更新要求を転送するときに発生することがあります。"
    },
    {
      "indent": 3,
      "text": "3.4.2. TSIG Variables",
      "section_title": true,
      "ja": "3.4.2. 変数の痕跡"
    },
    {
      "indent": 0,
      "text": "Source       Field Name       Notes\n-----------------------------------------------------------------------\nTSIG RR      NAME             Key name, in canonical wire format\nTSIG RR      CLASS            (Always ANY in the current specification)\nTSIG RR      TTL              (Always 0 in the current specification)\nTSIG RDATA   Algorithm Name   in canonical wire format\nTSIG RDATA   Time Signed      in network byte order\nTSIG RDATA   Fudge            in network byte order\nTSIG RDATA   Error            in network byte order\nTSIG RDATA   Other Len        in network byte order\nTSIG RDATA   Other Data       exactly as transmitted",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The RR RDLEN and RDATA MAC Length are not included in the hash since they are not guaranteed to be knowable before the MAC is generated.",
      "ja": "彼らはMACが生成される前に知り得ることが保証されていないので、RR RDLENとRDATA MAC長は、ハッシュに含まれていません。"
    },
    {
      "indent": 3,
      "text": "The Original ID field is not included in this section, as it has already been substituted for the message ID in the DNS header and hashed.",
      "ja": "既にDNSヘッダーにメッセージIDに置換し、ハッシュ化されているように、元のIDフィールドは、このセクションに含まれていません。"
    },
    {
      "indent": 3,
      "text": "For each label type, there must be a defined \"Canonical wire format\" that specifies how to express a label in an unambiguous way. For label type 00, this is defined in [RFC2535], for label type 01, this is defined in [RFC2673]. The use of label types other than 00 and 01 is not defined for this specification.",
      "ja": "各ラベルの種類については、明確な方法でラベルを表現する方法を指定する定義された「標準的なワイヤフォーマット」がなければなりません。ラベルタイプ00のために、これは、これは[RFC2673]で定義された、ラベルタイプ01のために、[RFC2535]で定義されています。 00および01以外のラベルタイプの使用は、本明細書に定義されていません。"
    },
    {
      "indent": 3,
      "text": "3.4.3. Request MAC",
      "section_title": true,
      "ja": "3.4.3. リクエストMAC"
    },
    {
      "indent": 3,
      "text": "When generating the MAC to be included in a response, the request MAC must be included in the digest. The request's MAC is digested in wire format, including the following fields:",
      "ja": "応答に含まれるMACを生成する場合、リクエストMACがダイジェストに含まれなければなりません。リクエストのMACは、次のフィールドを含む、ワイヤフォーマットで消化されています。"
    },
    {
      "indent": 3,
      "text": "Field        Type           Description\n---------------------------------------------------\nMAC Length   u_int16_t      in network byte order\nMAC Data     octet stream   exactly as transmitted",
      "raw": true
    },
    {
      "indent": 3,
      "text": "3.5. Padding",
      "section_title": true,
      "ja": "3.5. パディング"
    },
    {
      "indent": 3,
      "text": "Digested components are fed into the hashing function as a continuous octet stream with no interfield padding.",
      "ja": "消化された構成要素はないフィールド間パディングと連続オクテットストリームとしてハッシュ関数に供給されます。"
    },
    {
      "indent": 0,
      "text": "4 - Protocol Details",
      "ja": "4  - プロトコルの詳細"
    },
    {
      "indent": 3,
      "text": "4.1. TSIG generation on requests",
      "section_title": true,
      "ja": "4.1. リクエストにTSIG世代"
    },
    {
      "indent": 3,
      "text": "Client performs the message digest operation and appends a TSIG record to the additional data section and transmits the request to the server. The client MUST store the message digest from the request while awaiting an answer. The digest components for a request are:",
      "ja": "クライアントは、メッセージが操作ダイジェスト行い、追加のデータセクションにTSIGレコードを追加し、サーバに要求を送信します。クライアントは答えを待っている間、メッセージがリクエストからダイジェストを格納する必要があります。リクエストのダイジェストコンポーネントは次のとおりです。"
    },
    {
      "indent": 6,
      "text": "DNS Message (request) TSIG Variables (request)",
      "ja": "DNSメッセージ（リクエスト）TSIG変数（リクエスト）"
    },
    {
      "indent": 3,
      "text": "Note that some older name servers will not accept requests with a nonempty additional data section. Clients SHOULD only attempt signed transactions with servers who are known to support TSIG and share some secret key with the client -- so, this is not a problem in practice.",
      "ja": "一部の古いネームサーバが空でない追加データセクションとの要求を受け入れないことに注意してください。クライアントは、唯一TSIGをサポートし、クライアントとのいくつかの秘密鍵を共有することが知られているサーバで署名されたトランザクションを試みるべきである - そう、これは実際には問題ではありません。"
    },
    {
      "indent": 3,
      "text": "4.2. TSIG on Answers",
      "section_title": true,
      "ja": "4.2. 回答のより高いレベル"
    },
    {
      "indent": 3,
      "text": "When a server has generated a response to a signed request, it signs the response using the same algorithm and key. The server MUST not generate a signed response to an unsigned request. The digest components are:",
      "ja": "サーバが署名した要求に対する応答を生成したとき、それは同じアルゴリズムとキーを使用して応答に署名します。サーバは、符号なしの要求に署名した応答を生成してはなりません。ダイジェストコンポーネントは次のとおりです。"
    },
    {
      "indent": 6,
      "text": "Request MAC DNS Message (response) TSIG Variables (response)",
      "ja": "MAC DNSメッセージ（応答）TSIG変数（応答）を要求"
    },
    {
      "indent": 3,
      "text": "4.3. TSIG on TSIG Error returns",
      "section_title": true,
      "ja": "4.3. エラーリターンの高いレベルでのより高いレベル"
    },
    {
      "indent": 3,
      "text": "When a server detects an error relating to the key or MAC, the server SHOULD send back an unsigned error message (MAC size == 0 and empty MAC). If an error is detected relating to the TSIG validity period, the server SHOULD send back a signed error message. The digest components are:",
      "ja": "サーバは、キーまたはMACに関連するエラーを検出した場合、サーバは、符号なしのエラーメッセージ（MACサイズ== 0と空のMAC）を送り返すべきです。エラーがTSIG有効期間に関連する検出された場合は、サーバーは、署名されたエラーメッセージを送り返すべきです。ダイジェストコンポーネントは次のとおりです。"
    },
    {
      "indent": 6,
      "text": "Request MAC (if the request MAC validated) DNS Message (response) TSIG Variables (response)",
      "ja": "MAC（リクエストMACが検証されている場合）DNSメッセージ（応答）TSIG変数（応答）を要求"
    },
    {
      "indent": 3,
      "text": "The reason that the request is not included in this digest in some cases is to make it possible for the client to verify the error. If the error is not a TSIG error the response MUST be generated as specified in [4.2].",
      "ja": "要求は、いくつかのケースでは、このダイジェストに含まれていないことを理由は、それが可能なクライアントがエラーを検証できるようにすることです。エラーがTSIGエラーでない場合は[4.2]で指定されるように応答が生成されなければなりません。"
    },
    {
      "indent": 3,
      "text": "4.4. TSIG on TCP connection",
      "section_title": true,
      "ja": "4.4.  TCPコネクション上のより高いレベル"
    },
    {
      "indent": 3,
      "text": "A DNS TCP session can include multiple DNS envelopes. This is, for example, commonly used by zone transfer. Using TSIG on such a connection can protect the connection from hijacking and provide data integrity. The TSIG MUST be included on the first and last DNS envelopes. It can be optionally placed on any intermediary envelopes. It is expensive to include it on every envelopes, but it MUST be placed on at least every 100'th envelope. The first envelope is processed as a standard answer, and subsequent messages have the following digest components:",
      "ja": "DNSのTCPセッションが複数のDNS封筒を含めることができます。これは、例えば、一般にゾーン転送によって使用されます。このような接続にTSIGを使用すると、ハイジャックからの接続を保護し、データの整合性を提供することができます。 TSIGは最初と最後のDNS封筒に含まれなければなりません。それは、必要に応じて任意の中間封筒に配置することができます。すべての封筒にそれを含めるように高価ですが、それは、少なくともすべての100'th封筒に置かなければなりません。最初のエンベロープは、標準的な答えとして処理され、その後のメッセージは、次のダイジェストのコンポーネントを持っているされています。"
    },
    {
      "indent": 6,
      "text": "Prior Digest (running) DNS Messages (any unsigned messages since the last TSIG) TSIG Timers (current message)",
      "ja": "前ダイジェスト（ランニング）DNSメッセージ（最後のTSIG以降の任意の符号なしのメッセージ）TSIGタイマ（現在のメッセージ）"
    },
    {
      "indent": 3,
      "text": "This allows the client to rapidly detect when the session has been altered; at which point it can close the connection and retry. If a client TSIG verification fails, the client MUST close the connection. If the client does not receive TSIG records frequently enough (as specified above) it SHOULD assume the connection has been hijacked and it SHOULD close the connection. The client SHOULD treat this the same way as they would any other interrupted transfer (although the exact behavior is not specified).",
      "ja": "これは、セッションが変更されたときにクライアントが急速に検出することができます。その時点で、それは接続を閉じて再試行することができます。クライアントのTSIG検証が失敗した場合、クライアントは接続を閉じる必要があります。クライアントは、（上記のよう）十分な頻度でTSIGレコードを受信しない場合には、接続がハイジャックされたと仮定すべきであり、それは、接続を閉じる必要があります。クライアントは、この彼らは、他の中断された転送（正確な動作が指定されていないが）同じように同じように扱うべきです。"
    },
    {
      "indent": 3,
      "text": "4.5. Server TSIG checks",
      "section_title": true,
      "ja": "4.5. サーバーをチェックする前に"
    },
    {
      "indent": 3,
      "text": "Upon receipt of a message, server will check if there is a TSIG RR. If one exists, the server is REQUIRED to return a TSIG RR in the response. The server MUST perform the following checks in the following order, check KEY, check TIME values, check MAC.",
      "ja": "TSIG RRが存在する場合にメッセージを受信すると、サーバがチェックします。 1が存在する場合は、サーバが応答にTSIG RRを返すために必要です。サーバーは、次の順序で、次のチェックを実行KEYを確認し、TIME値をチェックし、MACをチェックしなければなりません。"
    },
    {
      "indent": 3,
      "text": "4.5.1. KEY check and error handling",
      "section_title": true,
      "ja": "4.5.1.  KEYチェックとエラー処理"
    },
    {
      "indent": 3,
      "text": "If a non-forwarding server does not recognize the key used by the client, the server MUST generate an error response with RCODE 9 (NOTAUTH) and TSIG ERROR 17 (BADKEY). This response MUST be unsigned as specified in [4.3]. The server SHOULD log the error.",
      "ja": "非転送サーバは、クライアントが使用するキーを認識しない場合、サーバはRCODE 9（NOTAUTH）とTSIGエラー17（BADKEY）でエラー応答を生成しなければなりません。 [4.3]で指定されたこの応答は、符号なしでなければなりません。サーバーはエラーをログに記録すべきです。"
    },
    {
      "indent": 3,
      "text": "4.5.2. TIME check and error handling",
      "section_title": true,
      "ja": "4.5.2.  TIMEチェックとエラー処理"
    },
    {
      "indent": 3,
      "text": "If the server time is outside the time interval specified by the request (which is: Time Signed, plus/minus Fudge), the server MUST generate an error response with RCODE 9 (NOTAUTH) and TSIG ERROR 18 (BADTIME). The server SHOULD also cache the most recent time signed value in a message generated by a key, and SHOULD return BADTIME if a message received later has an earlier time signed value. A response indicating a BADTIME error MUST be signed by the same key as the request. It MUST include the client's current time in the time signed field, the server's current time (a u_int48_t) in the other data field, and 6 in the other data length field. This is done so that the client can verify a message with a BADTIME error without the verification failing due to another BADTIME error. The data signed is specified in [4.3]. The server SHOULD log the error.",
      "ja": "サーバ時間（ある：時間署名され、プラス/マイナスファッジ）要求で指定された時間間隔外にある場合、サーバはRCODE 9（NOTAUTH）とTSIGエラー18（BADTIME）とエラー応答を生成しなければなりません。また、サーバは、キーによって生成されたメッセージの中で最も最近の時間符号付きの値をキャッシュすべきである、と後から受信したメッセージが早い時間符号付きの値を持つ場合BADTIMEを返すべきです。 BADTIMEエラーを示す応答を要求と同じ鍵によって署名されなければなりません。それは時間署名フィールド、他のデータ長フィールドに、サーバの現在の時間、他のデータフィールド内（u_int48_t）、および6で、クライアントの現在の時刻を含まなければなりません。クライアントは検証が別のBADTIME誤差による失敗することなくBADTIMEエラーとメッセージを確認できるようにこれが行われます。署名されたデータは、[4.3]で指定されています。サーバーはエラーをログに記録すべきです。"
    },
    {
      "indent": 3,
      "text": "4.5.3. MAC check and error handling",
      "section_title": true,
      "ja": "4.5.3.  MACチェックとエラー処理"
    },
    {
      "indent": 3,
      "text": "If a TSIG fails to verify, the server MUST generate an error response as specified in [4.3] with RCODE 9 (NOTAUTH) and TSIG ERROR 16 (BADSIG). This response MUST be unsigned as specified in [4.3]. The server SHOULD log the error.",
      "ja": "TSIGが検証に失敗した場合RCODE 9（NOTAUTH）とTSIGエラー16（BADSIG）と[4.3]で指定されるように、サーバはエラー応答を生成しなければなりません。 [4.3]で指定されたこの応答は、符号なしでなければなりません。サーバーはエラーをログに記録すべきです。"
    },
    {
      "indent": 3,
      "text": "4.6. Client processing of answer",
      "section_title": true,
      "ja": "4.6. 解答のクライアントの処理"
    },
    {
      "indent": 3,
      "text": "When a client receives a response from a server and expects to see a TSIG, it first checks if the TSIG RR is present in the response. Otherwise, the response is treated as having a format error and discarded. The client then extracts the TSIG, adjusts the ARCOUNT, and calculates the keyed digest in the same way as the server. If the TSIG does not validate, that response MUST be discarded, unless the RCODE is 9 (NOTAUTH), in which case the client SHOULD attempt to verify the response as if it were a TSIG Error response, as specified in [4.3]. A message containing an unsigned TSIG record or a TSIG record which fails verification SHOULD not be considered an acceptable response; the client SHOULD log an error and continue to wait for a signed response until the request times out.",
      "ja": "クライアントがサーバからの応答を受信し、TSIGを見ることを期待すると、それはTSIG RRが応答に存在する最初のかどうかをチェックします。そうでなければ、応答は、フォーマットエラーを有するものとして扱われ、廃棄されます。クライアントはその後、TSIGを抽出し、ARCOUNTを調整し、キーサーバと同じ方法で、ダイジェストを計算します。 TSIGが検証されない場合RCODEは、クライアントは[4.3]で指定され、それがTSIGエラー応答であるかのような応答を確認するために試みる必要がある場合には、図9（NOTAUTH）、でない限り、その応答は、捨てなければなりません。符号なしTSIGレコードまたは検証に失敗TSIGレコードを含むメッセージは、許容可能な応答とみなされるべきではありません。クライアントはエラーをログに記録し、要求がタイムアウトするまで署名応答を待つし続けるべきです。"
    },
    {
      "indent": 3,
      "text": "4.6.1. Key error handling",
      "section_title": true,
      "ja": "4.6.1. 主なエラー処理"
    },
    {
      "indent": 3,
      "text": "If an RCODE on a response is 9 (NOTAUTH), and the response TSIG validates, and the TSIG key is different from the key used on the request, then this is a KEY error. The client MAY retry the request using the key specified by the server. This should never occur, as a server MUST NOT sign a response with a different key than signed the request.",
      "ja": "応答にRCODE 9（NOTAUTH）であり、応答TSIGが検証し、TSIGキーは要求に使用されるキーと異なる場合、これはキー・エラーです。クライアントは、サーバによって指定されたキーを使用して要求を再試行することができます。サーバが要求に署名したとは別のキーで応答に署名してはならないので、これは、発生することはありません。"
    },
    {
      "indent": 3,
      "text": "4.6.2. Time error handling",
      "section_title": true,
      "ja": "4.6.2. タイムエラー処理"
    },
    {
      "indent": 3,
      "text": "If the response RCODE is 9 (NOTAUTH) and the TSIG ERROR is 18 (BADTIME), or the current time does not fall in the range specified in the TSIG record, then this is a TIME error. This is an indication that the client and server clocks are not synchronized. In this case the client SHOULD log the event. DNS resolvers MUST NOT adjust any clocks in the client based on BADTIME errors, but the server's time in the other data field SHOULD be logged.",
      "ja": "応答RCODEが9（NOTAUTH）で、TSIGエラーが18（BADTIME）である、または現在時刻がTSIGレコードで指定した範囲内に収まっていない場合、これはTIMEエラーです。これは、クライアントとサーバーのクロックが同期されていないことを示しています。この場合、クライアントは、イベントをログに記録すべきです。 DNSリゾルバはBADTIMEエラーに基づいてクライアントに任意のクロックを調整してはならないが、他のデータフィールドに、サーバの時刻が記録されるべきです。"
    },
    {
      "indent": 3,
      "text": "4.6.3. MAC error handling",
      "section_title": true,
      "ja": "4.6.3.  MACのエラー処理"
    },
    {
      "indent": 3,
      "text": "If the response RCODE is 9 (NOTAUTH) and TSIG ERROR is 16 (BADSIG), this is a MAC error, and client MAY retry the request with a new request ID but it would be better to try a different shared key if one is available. Client SHOULD keep track of how many MAC errors are associated with each key. Clients SHOULD log this event.",
      "ja": "応答RCODEが9（NOTAUTH）で、TSIGエラーが16（BADSIG）であれば、これはMACエラーであり、クライアントは新しいリクエストIDで要求を再試行するかもしれないが、1が利用可能な場合は、別の共有キーをしようとする方が良いだろう。クライアントがMACエラーが各キーに関連付けられているどのように多くのトラックを維持する必要があります。クライアントは、このイベントをログに記録すべきです。"
    },
    {
      "indent": 3,
      "text": "4.7. Special considerations for forwarding servers",
      "section_title": true,
      "ja": "4.7. 転送サーバのための特別な考慮事項"
    },
    {
      "indent": 3,
      "text": "A server acting as a forwarding server of a DNS message SHOULD check for the existence of a TSIG record. If the name on the TSIG is not of a secret that the server shares with the originator the server MUST forward the message unchanged including the TSIG. If the name of the TSIG is of a key this server shares with the originator, it MUST process the TSIG. If the TSIG passes all checks, the forwarding server MUST, if possible, include a TSIG of his own, to the destination or the next forwarder. If no transaction security is available to the destination and the response has the AD flag (see [RFC2535]), the forwarder MUST unset the AD flag before adding the TSIG to the answer.",
      "ja": "DNSメッセージの転送サーバとして動作するサーバは、TSIGレコードの存在を確認する必要があります。 TSIGの名前が発信元でサーバを共有することを秘密ではない場合、サーバーはTSIGを含め変わらないメッセージを転送する必要があります。 TSIGの名前が発信元とキーこのサーバー共有である場合、それはTSIGを処理しなければなりません。 TSIGは、すべてのチェックを通過した場合、転送サーバは、可能な場合は、先に彼自身のTSIG、または次のフォワーダを含まなければなりません。トランザクション・セキュリティは先に利用できないとの応答がADフラグを持っている場合、フォワーダは答えにTSIGを追加する前にADフラグの設定を解除しなければならない（[RFC2535]参照）。"
    },
    {
      "indent": 0,
      "text": "5 - Shared Secrets",
      "ja": "5  - 共有の秘密"
    },
    {
      "indent": 3,
      "text": "5.1. Secret keys are very sensitive information and all available steps should be taken to protect them on every host on which they are stored. Generally such hosts need to be physically protected. If they are multi-user machines, great care should be taken that unprivileged users have no access to keying material. Resolvers often run unprivileged, which means all users of a host would be able to see whatever configuration data is used by the resolver.",
      "ja": "5.1. 秘密鍵は、非常に機密性の高い情報であり、利用可能なすべての手順は、それらが格納されているすべてのホスト上でそれらを保護するために取られるべきです。一般に、このようなホストは、物理的に保護する必要があります。彼らは、マルチユーザマシンの場合は、細心の注意は、非特権ユーザーが材料キーイングにはアクセスできませんように注意しなければなりません。リゾルバは、多くの場合、ホストのすべてのユーザーがリゾルバによって使用されているものは何でもコンフィギュレーションデータを参照することができるだろうことを意味する、非特権実行します。"
    },
    {
      "indent": 3,
      "text": "5.2. A name server usually runs privileged, which means its configuration data need not be visible to all users of the host. For this reason, a host that implements transaction-based authentication should probably be configured with a \"stub resolver\" and a local caching and forwarding name server. This presents a special problem for [RFC2136] which otherwise depends on clients to communicate only with a zone's authoritative name servers.",
      "ja": "5.2. ネームサーバは通常、その構成データは、ホストのすべてのユーザーに表示する必要はないことを意味する、特権で実行されます。このため、トランザクションベースの認証を実装したホストは、おそらく「スタブリゾルバ」とローカルキャッシュとフォワーディングネームサーバを設定する必要があります。これは、そうでない場合にのみ、ゾーンの権威ネームサーバと通信するために、クライアントに依存して、[RFC2136]のための特別な問題を提示しています。"
    },
    {
      "indent": 3,
      "text": "5.3. Use of strong random shared secrets is essential to the security of TSIG. See [RFC1750] for a discussion of this issue. The secret should be at least as long as the keyed message digest, i.e. 16 bytes for HMAC-MD5 or 20 bytes for HMAC-SHA1.",
      "ja": "5.3. 強いランダム共有秘密の使用はTSIGのセキュリティに不可欠です。この問題の議論のための[RFC1750]を参照してください。秘密は、少なくとも限り、鍵付きメッセージダイジェストとしてHMAC-MD5またはHMAC-SHA1のための20バイトのため、すなわち16バイトでなければなりません。"
    },
    {
      "indent": 0,
      "text": "6 - Security Considerations",
      "ja": "6  - セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "6.1. The approach specified here is computationally much less expensive than the signatures specified in [RFC2535]. As long as the shared secret key is not compromised, strong authentication is provided for the last hop from a local name server to the user resolver.",
      "ja": "6.1. ここで指定されたアプローチは、計算はるかに安価で[RFC2535]で指定された署名を超えています。限り共有秘密鍵が損なわれないよう、強力な認証は、ユーザーリゾルバにローカルネームサーバからの最後のホップのために提供されます。"
    },
    {
      "indent": 3,
      "text": "6.2. Secret keys should be changed periodically. If the client host has been compromised, the server should suspend the use of all secrets known to that client. If possible, secrets should be stored in encrypted form. Secrets should never be transmitted in the clear over any network. This document does not address the issue on how to distribute secrets. Secrets should never be shared by more than two entities.",
      "ja": "6.2. 秘密鍵は定期的に変更する必要があります。クライアントホストが侵害された場合、サーバーはそのクライアントに知られているすべての秘密の使用を停止する必要があります。可能であれば、秘密は暗号化された形式で格納する必要があります。秘密は、任意のネットワークを介して平文で送信されるべきではありません。この文書は、秘密を配布する方法の問題に対処しません。秘密は、以上の2つのエンティティで共有すべきではありません。"
    },
    {
      "indent": 3,
      "text": "6.3. This mechanism does not authenticate source data, only its transmission between two parties who share some secret. The original source data can come from a compromised zone master or can be corrupted during transit from an authentic zone master to some \"caching forwarder.\" However, if the server is faithfully performing the full [RFC2535] security checks, then only security checked data will be available to the client.",
      "ja": "6.3. このメカニズムは、いくつかの秘密を共有する2つの当事者間だけその送信をソースデータを認証しません。元のソース・データが損なわゾーンマスターから来ることができ、またはいくつかの本物のゾーンマスターから輸送中に破損することができ、「キャッシングフォワーダ。」サーバが忠実にフル[RFC2535]のセキュリティチェックを実行している場合は、その後、唯一のセキュリティはチェックされたデータは、クライアントが利用可能になります。"
    },
    {
      "indent": 3,
      "text": "6.4. A fudge value that is too large may leave the server open to replay attacks. A fudge value that is too small may cause failures if machines are not time synchronized or there are unexpected network delays. The recommended value in most situation is 300 seconds.",
      "ja": "6.4. 大きすぎるファッジ値は、リプレイ攻撃するために、オープンサーバに残すことができます。マシンは、時間同期化されていないか、予期しないネットワークの遅延がある場合、小さすぎるファッジ値は、障害が発生することがあります。ほとんどの状況で推奨値は300秒です。"
    },
    {
      "indent": 0,
      "text": "7 - IANA Considerations",
      "ja": "7  -  IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "IANA is expected to create and maintain a registry of algorithm names to be used as \"Algorithm Names\" as defined in Section 2.3. The initial value should be \"HMAC-MD5.SIG-ALG.REG.INT\". Algorithm names are text strings encoded using the syntax of a domain name. There is no structure required other than names for different algorithms must be unique when compared as DNS names, i.e., comparison is case insensitive. Note that the initial value mentioned above is not a domain name, and therefore need not be a registered name within the DNS. New algorithms are assigned using the IETF Consensus policy defined in RFC 2434. The algorithm name HMAC-MD5.SIG-ALG.REG.INT looks like a FQDN for historical reasons; future algorithm names are expected to be simple (i.e., single-component) names.",
      "ja": "IANAはセクション2.3で定義された「アルゴリズム名」として使用するアルゴリズム名のレジストリを作成し、維持することが期待されます。初期値は「HMAC-MD5.SIG-ALG.REG.INT」でなければなりません。アルゴリズム名は、ドメイン名の構文を使用してエンコードされたテキスト文字列です。すなわち、DNS名として、比較は大文字と小文字を区別しないで比較した場合、一意である必要があり、異なるアルゴリズムの名前以外必要ない構造は存在しません。上記の初期値は、ドメイン名ではないことに注意してくださいので、DNS内に登録された名前である必要はありません。新しいアルゴリズムは、アルゴリズム名のHMAC-MD5.SIG-ALG.REG.INTは歴史的な理由のためにFQDNのように見えるRFC 2434で定義されているIETFコンセンサスポリシーを使用して割り当てられます。将来のアルゴリズム名は、単純な（すなわち、単一成分）の名前であることが期待されます。"
    },
    {
      "indent": 3,
      "text": "IANA is expected to create and maintain a registry of \"TSIG Error values\" to be used for \"Error\" values as defined in section 2.3. Initial values should be those defined in section 1.7. New TSIG error codes for the TSIG error field are assigned using the IETF Consensus policy defined in RFC 2434.",
      "ja": "IANAはセクション2.3で定義された「エラー」の値に使用する「TSIGエラー値」のレジストリを作成し、維持することが期待されます。初期値はセクション1.7で定義されたものでなければなりません。 TSIGエラーフィールドのための新しいTSIGエラーコードは、RFC 2434で定義されたIETFコンセンサスポリシーを使用して割り当てられます。"
    },
    {
      "indent": 0,
      "text": "8 - References",
      "ja": "8  - 参考文献"
    },
    {
      "indent": 3,
      "text": "[RFC1034] Mockapetris, P., \"Domain Names - Concepts and Facilities\", STD 13, RFC 1034, November 1987.",
      "ja": "[RFC1034] Mockapetris、P.、 \"ドメイン名 - 概念および機能\"、STD 13、RFC 1034、1987年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC1035] Mockapetris, P., \"Domain Names - Implementation and Specification\", STD 13, RFC 1034, November 1987.",
      "ja": "[RFC1035] Mockapetris、P.、 \"ドメイン名 - 実装と仕様\"、STD 13、RFC 1034、1987年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC1321] Rivest, R., \"The MD5 Message-Digest Algorithm\", RFC 1321, April 1992.",
      "ja": "[RFC1321]のRivest、R.、 \"MD5メッセージダイジェストアルゴリズム\"、RFC 1321、1992年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC1750] Eastlake, D., Crocker, S. and J. Schiller, \"Randomness Recommendations for Security\", RFC 1750, December 1995.",
      "ja": "[RFC1750]イーストレイク、D.、クロッカー、S.とJ.シラー、 \"セキュリティのためのランダム性に関する推奨事項\"、RFC 1750、1995年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC2104] Krawczyk, H., Bellare, M. and R. Canetti, \"HMAC-MD5: Keyed-MD5 for Message Authentication\", RFC 2104, February 1997.",
      "ja": "[RFC2104] Krawczyk、H.、ベラー、M。およびR.カネッティ、 \"HMAC-MD5：メッセージ認証のための鍵付きMD5\"、RFC 2104、1997年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC2136] Vixie, P., Thomson, S., Rekhter, Y. and J. Bound \"Dynamic Updates in the Domain Name System\", RFC 2136, April 1997.",
      "ja": "\"ドメインネームシステムにおける動的更新\" 結合した[RFC2136]いるVixie、P.、トムソン、S.、Rekhter、Y.、およびJ.、RFC 2136、1997年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC2137] Eastlake 3rd, D., \"Secure Domain Name System Dynamic Update\", RFC 2137, April 1997.",
      "ja": "[RFC2137]イーストレーク第3、D.は、RFC 2137、1997年4月、 \"ドメインネームシステム動的な更新を固定します\"。"
    },
    {
      "indent": 3,
      "text": "[RFC2535] Eastlake, D., \"Domain Name System Security Extensions\", RFC 2535, March 1999.",
      "ja": "[RFC2535]イーストレイク、D.、 \"ドメインネームシステムのセキュリティ拡張機能\"、RFC 2535、1999年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC2673] Crawford, M., \"Binary Labels in the Domain Name System\", RFC 2673, August 1999.",
      "ja": "[RFC2673]クロフォード、M.、 \"ドメインネームシステムにおけるバイナリラベル\"、RFC 2673、1999年8月。"
    },
    {
      "indent": 0,
      "text": "9 - Authors' Addresses",
      "ja": "9  - 著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Paul Vixie Internet Software Consortium 950 Charter Street Redwood City, CA 94063",
      "ja": "ポール・ヴィクシーインターネットSoftware Consortiumの950憲章通りカリフォルニア州レッドウッドシティー94063"
    },
    {
      "indent": 3,
      "text": "Phone: +1 650 779 7001 EMail: vixie@isc.org",
      "ja": "電話：+1 650 779 7001 Eメール：vixie@isc.org"
    },
    {
      "indent": 3,
      "text": "Olafur Gudmundsson NAI Labs 3060 Washington Road, Route 97 Glenwood, MD 21738",
      "ja": "オラフルグドムンソンNAI Labsの3060ワシントンロード、ルート97グレンウッド、MD 21738"
    },
    {
      "indent": 3,
      "text": "Phone: +1 443 259 2389 EMail: ogud@tislabs.com",
      "ja": "電話：+1 443 259 2389 Eメール：ogud@tislabs.com"
    },
    {
      "indent": 3,
      "text": "Donald E. Eastlake 3rd Motorola 140 Forest Avenue Hudson, MA 01749 USA",
      "ja": "ドナルドE.イーストレーク第3モトローラ140森アベニューハドソン、MA 01749 USA"
    },
    {
      "indent": 3,
      "text": "Phone: +1 508 261 5434 EMail: dee3@torque.pothole.com",
      "ja": "電話：+1 508 261 5434 Eメール：dee3@torque.pothole.com"
    },
    {
      "indent": 3,
      "text": "Brian Wellington Nominum, Inc. 950 Charter Street Redwood City, CA 94063",
      "ja": "ブライアンウェリントンノミナム社950憲章通りカリフォルニア州レッドウッドシティー94063"
    },
    {
      "indent": 3,
      "text": "Phone: +1 650 779 6022 EMail: Brian.Wellington@nominum.com",
      "ja": "電話：+1 650 779 6022 Eメール：Brian.Wellington@nominum.com"
    },
    {
      "indent": 0,
      "text": "10 Full Copyright Statement",
      "ja": "10完全な著作権に関する声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2000). All Rights Reserved.",
      "ja": "著作権（C）インターネット協会（2000）。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the Internet Society or other Internet organizations, except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed, or as required to translate it into languages other than English.",
      "ja": "この文書とその翻訳は、コピーして他の人に提供し、それ以外についてはコメントまたは派生物は、いかなる種類の制限もなく、全体的にまたは部分的に、準備コピーし、公表して配布することができることを説明したり、その実装を支援することができます、上記の著作権表示とこの段落は、すべてのそのようなコピーや派生物に含まれていることを条件とします。しかし、この文書自体は著作権のための手順はで定義されている場合には、インターネット標準を開発するために必要なものを除き、インターネットソサエティもしくは他のインターネット関連団体に著作権情報や参照を取り除くなど、どのような方法で変更されないかもしれませんインターネット標準化プロセスが続く、または英語以外の言語に翻訳するために、必要に応じなければなりません。"
    },
    {
      "indent": 3,
      "text": "The limited permissions granted above are perpetual and will not be revoked by the Internet Society or its successors or assigns.",
      "ja": "上記の制限は永久で、インターネット学会やその後継者や譲渡者によって取り消されることはありません。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein is provided on an \"AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書とここに含まれている情報は、基礎とインターネットソサエティおよびインターネットエンジニアリングタスクフォースはすべての保証を否認し、明示または黙示、その情報の利用がない任意の保証を含むがこれらに限定されない「として、」上に設けられています特定の目的への権利または商品性または適合性の黙示の保証を侵害します。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "ja": "RFC Editor機能のための基金は現在、インターネット協会によって提供されます。"
    }
  ]
}