{
  "title": {
    "text": "RFC 2430 - A Provider Architecture for Differentiated Services and Traffic Engineering (PASTE)",
    "ja": "RFC 2430 - 差別化サービスおよびトラフィックエンジニアリングのためのプロバイダのアーキテクチャ（PASTE）"
  },
  "number": 2430,
  "created_at": "2019-10-24 13:17:45.774024+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                              T. Li\nRequest for Comments: 2430                              Juniper Networks\nCategory: Informational                                       Y. Rekhter\n                                                           Cisco Systems\n                                                            October 1998",
      "raw": true
    },
    {
      "indent": 12,
      "text": "          A Provider Architecture for\nDifferentiated Services and Traffic Engineering\n                    (PASTE)",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "このメモの位置付け"
    },
    {
      "indent": 3,
      "text": "This memo provides information for the Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited.",
      "ja": "このメモはインターネットコミュニティのための情報を提供します。それはどんな種類のインターネット標準を指定しません。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (1998). All Rights Reserved.",
      "ja": "著作権（C）インターネット協会（1998）。全著作権所有。"
    },
    {
      "indent": 0,
      "text": "1.0 Abstract",
      "section_title": true,
      "ja": "1.0抽象"
    },
    {
      "indent": 3,
      "text": "This document describes the Provider Architecture for Differentiated Services and Traffic Engineering (PASTE) for Internet Service Providers (ISPs). Providing differentiated services in ISPs is a challenge because the scaling problems presented by the sheer number of flows present in large ISPs makes the cost of maintaining per-flow state unacceptable. Coupled with this, large ISPs need the ability to perform traffic engineering by directing aggregated flows of traffic along specific paths.",
      "ja": "この文書は、インターネットサービスプロバイダ（ISP）のための差別化サービスおよびトラフィックエンジニアリング（PASTE）用プロバイダのアーキテクチャについて説明します。大ISPの中に存在する流れの膨大な数によって提示スケーリングの問題はフロー毎の状態が許容できない保守のコストを行うためのISPに差別化サービスを提供することが課題です。これと相まって、大きなISPは、特定の経路に沿ってトラフィックの集約フローを向けることによって、トラフィック・エンジニアリングを実行する能力を必要とします。"
    },
    {
      "indent": 3,
      "text": "PASTE addresses these issues by using Multiprotocol Label Switching (MPLS) [1] and the Resource Reservation Protocol (RSVP) [2] to create a scalable traffic management architecture that supports differentiated services. This document assumes that the reader has at least some familiarity with both of these technologies.",
      "ja": "PASTEは、[1]とリソース予約プロトコル（RSVP）[2]差別化されたサービスをサポートして、スケーラブルなトラフィック管理アーキテクチャを作成するために、マルチプロトコルラベルスイッチング（MPLS）を使用することにより、これらの問題に対処しています。この文書では、読者がこれらの技術の両方で少なくともある程度の知識を持っていることを前提としています。"
    },
    {
      "indent": 0,
      "text": "2.0 Terminology",
      "section_title": true,
      "ja": "2.0用語"
    },
    {
      "indent": 3,
      "text": "In common usage, a packet flow, or a flow, refers to a unidirectional stream of packets, distributed over time. Typically a flow has very fine granularity and reflects a single interchange between hosts, such as a TCP connection. An aggregated flow is a number of flows that share forwarding state and a single resource reservation along a sequence of routers.",
      "ja": "一般的な用法では、パケットの流れ、または流れは、時間にわたって分散パケットの一方向の流れを指します。典型的には、流れは非常に細かい粒度を有しており、TCP接続などのホスト間の単一の交換を反映しています。集約フローの状態とルータの配列に沿って単一のリソース予約を転送共有するフローの数です。"
    },
    {
      "indent": 3,
      "text": "One mechanism for supporting aggregated flows is Multiprotocol Label Switching (MPLS). In MPLS, packets are tunneled by wrapping them in a minimal header [3]. Each such header contains a label, that carries both forwarding and resource reservation semantics. MPLS defines mechanisms to install label-based forwarding information along a series of Label Switching Routers (LSRs) to construct a Label Switched Path (LSP). LSPs can also be associated with resource reservation information.",
      "ja": "集約フローをサポートするための1つのメカニズムは、マルチプロトコルラベルスイッチング（MPLS）です。 MPLSにおいて、パケットは、最小ヘッダ[3]でそれらを包むことによってトンネリングされます。このような各ヘッダの両方の転送およびリソース予約セマンティクスを担持するラベルを含んでいます。 MPLSは、ラベルスイッチパス（LSP）を構築するためのラベルスイッチングルータ（LSRの）の系列に沿ったラベルベースの転送情報をインストールするためのメカニズムを定義します。 LSPは、リソース予約情報に関連付けることができます。"
    },
    {
      "indent": 3,
      "text": "One protocol for constructing such LSPs is the Resource Reservation Protocol (RSVP) [4]. When used with the Explicit Route Object (ERO) [5], RSVP can be used to construct an LSP along an explicit route [6].",
      "ja": "そのようなLSPを構築するためのプロトコルは、リソース予約プロトコル（RSVP）である[4]。明示的ルート・オブジェクト（ERO）と共に使用した場合、[5]、RSVPは、明示的な経路に沿ってLSPを構築するために使用することができる[6]。"
    },
    {
      "indent": 3,
      "text": "To support differentiated services, packets are divided into separate traffic classes. For conceptual purposes, we will discuss three different traffic classes: Best Effort, Priority, and Network Control. The exact number of subdivisions within each class is to be defined.",
      "ja": "差別化サービスをサポートするために、パケットが別のトラフィッククラスに分かれています。ベストエフォート、優先順位、およびネットワーク制御：概念の目的のために、我々は、3つの異なるトラフィック・クラスについて説明します。各クラス内のサブディビジョンの正確な数は、定義されるべきです。"
    },
    {
      "indent": 3,
      "text": "Network Control traffic primarily consists of routing protocols and network management traffic. If Network Control traffic is dropped, routing protocols can fail or flap, resulting in network instability. Thus, Network Control must have very low drop preference. However, Network Control traffic is generally insensitive to moderate delays and requires a relatively small amount of bandwidth. A small bandwidth guarantee is sufficient to insure that Network Control traffic operates correctly.",
      "ja": "ネットワーク制御トラフィックは、主にルーティングプロトコルおよびネットワーク管理トラフィックで構成されています。ネットワーク制御トラフィックがドロップされる場合は、ルーティングプロトコルは、ネットワークが不安定で、その結果、失敗するかフラップすることができます。このように、ネットワーク制御は非常に低いドロップ優先順位を持っている必要があります。しかし、ネットワーク制御トラフィックは、一般的な遅延を緩和するために鈍感であると帯域幅の比較的少量を必要とします。小さな帯域幅保証は、ネットワーク制御トラフィックが正しく動作することを保証するのに十分です。"
    },
    {
      "indent": 3,
      "text": "Priority traffic is likely to come in many flavors, depending on the application. Particular flows may require bandwidth guarantees, jitter guarantees, or upper bounds on delay. For the purposes of this memo, we will not distinguish the subdivisions of priority traffic. All priority traffic is assumed to have an explicit resource reservation.",
      "ja": "優先順位トラフィックは、用途に応じて、多くの種類がありそうです。特定のフローは、帯域幅保証、ジッタの保証、または遅延の上限を必要とするかもしれません。このメモの目的のために、私たちは優先トラフィックの下位区分を区別しません。すべてのプライオリティトラフィックは明示的なリソース予約を有するものとします。"
    },
    {
      "indent": 3,
      "text": "Currently, the vast majority of traffic in ISPs is Best Effort traffic. This traffic is, for the most part, delay insensitive and reasonably adaptive to congestion.",
      "ja": "現在、ISPのトラフィックの大半は、ベストエフォートトラフィックです。このトラフィックは、ほとんどの部分は、小文字を区別しないと渋滞に合理的に適応遅延されます。"
    },
    {
      "indent": 3,
      "text": "When flows are aggregated according to their traffic class and then the aggregated flow is placed inside a LSP, we call the result a traffic trunk, or simply a trunk. The traffic class of a packet is orthogonal to the LSP that it is on, so many different trunks, each with its own traffic class, may share an LSP if they have different traffic classes.",
      "ja": "フローは、そのトラフィッククラスに基づいて集計され、その後、集約フローはLSPの内部に配置されている場合、我々は、トラフィックトランク、または単にトランク結果を呼び出します。彼らは異なるトラフィッククラスを持っている場合、パケットのトラフィッククラスは、それが上にあることをLSPに直交するように多くの異なるトランク、独自のトラフィッククラスとそれぞれ、LSPを共有することがあります。"
    },
    {
      "indent": 0,
      "text": "3.0 Introduction",
      "section_title": true,
      "ja": "3.0はじめに"
    },
    {
      "indent": 3,
      "text": "The next generation of the Internet presents special challenges that must be addressed by a single, coordinated architecture. While this architecture allows for distinction between ISPs, it also defines a framework within which ISPs may provide end-to-end differentiated services in a coordinated and reliable fashion. With such an architecture, an ISP would be able to craft common agreements for the handling of differentiated services in a consistent fashion, facilitating end-to-end differentiated services via a composition of these agreements. Thus, the goal of this document is to describe an architecture for providing differentiated services within the ISPs of the Internet, while including support for other forthcoming needs such as traffic engineering. While this document addresses the needs of the ISPs, its applicability is not limited to the ISPs. The same architecture could be used in any large, multiprovider catenet needing differentiated services.",
      "ja": "インターネットの次の世代は、単一の、協調アーキテクチャによって対処されなければならない特別な課題を提示します。このアーキテクチャは、ISP間の区別を可能にするが、それはまたISPが協調的かつ信頼性の高い方法でエンドツーエンドの差別化サービスを提供することができる枠組みを規定します。このようなアーキテクチャでは、ISPは、これらの契約の組成物を介してエンド・ツー・エンドのサービス差別化を容易にする、一貫した方法で差別化サービスの処理のための共通の合意を作ることができるであろう。したがって、このドキュメントの目的は、このようなトラフィック・エンジニアリングなどの他の今後のニーズのためのサポートを含めて、インターネットのISPの中に差別化されたサービスを提供するためのアーキテクチャを記述することです。この文書はのISPのニーズに対応しながら、その適用は、ISPに限定されるものではありません。同じアーキテクチャは、差別化されたサービスを必要とする任意の大規模な、multiproviderのCATENETに使用することができます。"
    },
    {
      "indent": 3,
      "text": "This document only discusses unicast services. Extensions to the architecture to support multicast are a subject for future research.",
      "ja": "この文書では、ユニキャストサービスについて説明します。マルチキャストをサポートするためのアーキテクチャの拡張は、今後の研究のために対象となっています。"
    },
    {
      "indent": 3,
      "text": "One of the primary considerations in any ISP architecture is scalability. Solutions that have state growth proportional to the size of the Internet result in growth rates exceeding Moore's law, making such solutions intractable in the long term. Thus, solutions that use mechanisms with very limited growth rates are strongly preferred.",
      "ja": "任意のISPアーキテクチャの主な検討事項の一つは、スケーラビリティです。長期的には難治なソリューションを作り、ムーアの法則を上回る成長率でインターネット結果の大きさに比例した状態の成長を持っているソリューション。このように、非常に限られた成長率とメカニズムを使用するソリューションが強く好まれます。"
    },
    {
      "indent": 3,
      "text": "Discussions of differentiated services to date have frequently resulted in solutions that require per-flow state or per-flow queuing. As the number of flows in an ISP within the \"default-free zone of the Internet\" scales with the size of the Internet, the growth rate is difficult to support and argues strongly for a solution with lower state requirements. Simultaneously, supporting differentiated services is a significant benefit to most ISPs. Such support would allow providers to offer special services such as priority for bandwidth for mission critical services for users willing to pay a service premium. Customers would contract with ISPs for these services under Service Level Agreements (SLAs). Such an agreement may specify the traffic volume, how the traffic is handled, either in an absolute or relative manner, and the compensation that the ISP receives.",
      "ja": "これまでの差別化サービスの議論が頻繁にフローごとの状態やフローごとのキューイングを必要とするソリューションをもたらしています。 「インターネットのデフォルトフリーゾーン」内のISPにおけるフローの数は、インターネットの大きさに比例したように、成長率がサポートするのは困難であると下の状態の要件とソリューションを強く主張しています。同時に、差別化されたサービスをサポートすることはほとんどのISPへの重要な利点です。このようなサポートは、プロバイダはサービス料を支払うことをいとわないユーザーのために、ミッションクリティカルなサービスのための帯域幅のための優先順位などの特別なサービスを提供できるようになります。お客様は、サービスレベル契約（SLA）の下で、これらのサービスのためのISPと契約するだろう。そのような絶対的または相対的な方法のいずれかで、トラフィックの処理方法、トラフィック量を指定することができる契約、およびISPが受け取る報酬。"
    },
    {
      "indent": 3,
      "text": "Differentiated services are likely to be deployed across a single ISP to support applications such as a single enterprise's Virtual Private Network (VPN). However, this is only the first wave of service implementation. Closely following this will be the need for differentiated services to support extranets, enterprise VPNs that span ISPs, or industry interconnection networks such as the ANX [7]. Because such applications span enterprises and thus span ISPs, there is a clear need for inter-domain SLAs. This document discusses the technical architecture that would allow the creation of such inter-domain SLAs.",
      "ja": "差別化されたサービスは、このような単一の企業の仮想プライベートネットワーク（VPN）などのアプリケーションをサポートするために、単一のISPに配備される可能性が高いです。しかし、これはサービスの実装の唯一の最初の波です。差別化されたサービスは、エクストラネット、などANXなどのISP、または業界の相互接続ネットワークをまたがる企業のVPNをサポートするために密接にこれを、次のことが必要になります[7]。このようなアプリケーションは、企業やので、スパンのISPにまたがるので、ドメイン間のSLAが明らかに必要です。この文書では、このようなドメイン間のSLAの作成を可能にする技術的なアーキテクチャについて説明します。"
    },
    {
      "indent": 3,
      "text": "Another important consideration in this architecture is the advent of traffic engineering within ISPs. Traffic engineering is the ability to move trunks away from the path selected by the ISP's IGP and onto a different path. This allows an ISP to route traffic around known points of congestion in its network, thereby making more efficient use of the available bandwidth. In turn, this makes the ISP more competitive within its market by allowing the ISP to pass lower costs and better service on to its customers.",
      "ja": "このアーキテクチャのもう一つの重要な考慮事項は、ISPの内のトラフィックエンジニアリングの登場です。トラフィックエンジニアリングは、ISPのIGPによって、異なるパスに選択したパスから離れてトランクを移動する機能です。これにより、利用可能な帯域幅をより効率的に利用し、そのネットワークの輻輳の既知の点の周りのトラフィックをルーティングするISPを可能にします。ターンでは、これは、ISPがその顧客にコスト削減とより良いサービスを通過させることによって、その市場内のISPは、より競争力になります。"
    },
    {
      "indent": 3,
      "text": "Finally, the need to provide end-to-end differentiated services implies that the architecture must support consistent inter-provider differentiated services. Most flows in the Internet today traverse multiple ISPs, making a consistent description and treatment of priority flows across ISPs a necessity.",
      "ja": "最後に、エンドツーエンドの差別化サービスを提供する必要はアーキテクチャが一貫性の間のプロバイダ差別化されたサービスをサポートしなければならないことを意味します。今日は、複数のISPを横断し、一貫した説明と優先順位の治療を行うインターネットでほとんどのフローは、ISPの間で必要性を流します。"
    },
    {
      "indent": 0,
      "text": "4.0 Components of the Architecture",
      "section_title": true,
      "ja": "アーキテクチャの4.0コンポーネント"
    },
    {
      "indent": 3,
      "text": "The Differentiated Services Backbone architecture is the integration of several different mechanisms that, when used in a coordinated way, achieve the goals outlined above. This section describes each of the mechanisms used in some detail. Subsequent sections will then detail the interoperation of these mechanisms.",
      "ja": "差別化サービスのバックボーン・アーキテクチャは、上記で概説した目標を達成するため、協調して使用され、いくつかの異なるメカニズムの統合です。このセクションでは、いくつかの詳細に使用されるメカニズムの各々を記述する。後続のセクションでは、詳細これらのメカニズムの相互運用を次にします。"
    },
    {
      "indent": 0,
      "text": "4.1 Traffic classes",
      "section_title": true,
      "ja": "4.1トラフィッククラス"
    },
    {
      "indent": 3,
      "text": "As described above, packets may fall into a variety of different traffic classes. For ISP operations, it is essential that packets be accurately classified before entering the ISP and that it is very easy for an ISP device to determine the traffic class for a particular packet.",
      "ja": "上述したように、パケットは、異なるトラフィッククラスの多様に分類することができます。 ISP事業の場合は、パケットが正確にISPに入る前とISPデバイスは、特定のパケットのトラフィッククラスを決定することが非常に容易であることに分類することが不可欠です。"
    },
    {
      "indent": 3,
      "text": "The traffic class of MPLS packets can be encoded in the three bits reserved for CoS within the MPLS label header. In addition, traffic classes for IPv4 packets can be classified via the IPv4 ToS byte, possibly within the three precedence bits within that byte. Note that the consistent interpretation of the traffic class, regardless of the bits used to indicate this class, is an important feature of PASTE.",
      "ja": "MPLSパケットのトラフィッククラスは、MPLSラベルヘッダ内のCoSのために予約さ3ビットで符号化することができます。また、IPv4パケットのトラフィック・クラスは、おそらくそのバイト内の3個の優先順位ビット内に、IPv4のToSバイトを介して分類することができます。トラフィッククラスの一貫した解釈は、関係なく、このクラスを示すために使用されるビットの、PASTEの重要な特徴であることに注意してください。"
    },
    {
      "indent": 3,
      "text": "In this architecture it is not overly important to control which packets entering the ISP have a particular traffic class. From the ISP's perspective, each Priority packet should involve some economic premium for delivery. As a result the ISP need not pass judgment as to the appropriateness of the traffic class for the application.",
      "ja": "このアーキテクチャでは、ISPに入るパケットを制御するために過度に重要ではありません特定のトラフィッククラスを持っています。 ISPの観点から、各優先パケットは、配信のためのいくつかの経済的な保険料を関与させるべきです。その結果、ISPは、アプリケーションのトラフィッククラスの妥当性の判断を渡す必要はありません。"
    },
    {
      "indent": 3,
      "text": "It is important that any Network Control traffic entering an ISP be handled carefully. The contents of such traffic must also be carefully authenticated. Currently, there is no need for traffic generated external to a domain to transit a border router of the ISP.",
      "ja": "ISPに入る任意のネットワーク制御トラフィックは慎重に処理することが重要です。そのようなトラフィックの内容も慎重に認証される必要があります。現在、トランジットにドメインにISPの境界ルータを外部生成されるトラフィックのための必要はありません。"
    },
    {
      "indent": 0,
      "text": "4.2 Trunks",
      "section_title": true,
      "ja": "4.2トランクス"
    },
    {
      "indent": 3,
      "text": "As described above, traffic of a single traffic class that is aggregated into a single LSP is called a traffic trunk, or simply a trunk. Trunks are essential to the architecture because they allow the overhead in the infrastructure to be decoupled from the size of the network and the amount of traffic in the network. Instead, as the traffic scales up, the amount of traffic in the trunks increases; not the number of trunks.",
      "ja": "上述したように、単一のLSPに集約されている単一のトラフィッククラスのトラフィックは、トラフィックトランク、または単にトランクと呼ばれます。彼らは、インフラストラクチャ内のオーバーヘッドは、ネットワークの規模と、ネットワーク内のトラフィック量から切り離すことを可能にするため、トランクは、アーキテクチャに不可欠です。代わりに、トラフィックのように、トランク増加におけるトラフィック量をスケールアップ。トランクの数ではありません。"
    },
    {
      "indent": 3,
      "text": "The number of trunks within a given topology has a worst case of one trunk per traffic class from each entry router to each exit router. If there are N routers in the topology and C classes of service, this would be (N * (N-1) * C) trunks. Fortunately, instantiating this many trunks is not always necessary.",
      "ja": "与えられたトポロジ内のトランクの数は、それぞれの出口ルータに各エントリのルータからのトラフィッククラスごとに1つのトランクの最悪のケースを持っています。 Nルータは、サービスのトポロジとCクラスである場合、これは（N *（N-1）* C）トランクになります。幸いなことに、この多くのトランクをインスタンス化することは必ずしも必要ではありません。"
    },
    {
      "indent": 3,
      "text": "Trunks with a single exit point which share a common internal path can be merged to form a single sink tree. The computation necessary to determine if two trunks can be merged is straightforward. If, when a trunk is being established, it intersects an existing trunk with the same traffic class and the same remaining explicit route, the new trunk can be spliced into the existing trunk at the point of intersection. The splice itself is straightforward: both incoming trunks will perform a standard label switching operation, but will result in the same outbound label. Since each sink tree created this way touches each router at most once and there is one sink tree per exit router, the result is N * C sink trees.",
      "ja": "共通の内部パスを共有する単一の出口点とトランクは単一シンクツリーを形成するために併合することができます。 2つのトランクをマージできるかどうかを判断するために必要な計算は簡単です。トランクが確立されているとき、それは同じトラフィッククラスと同じ残りの明示的なルートを持つ既存のトランクと交差する場合は、新しいトランクが交差する点で、既存のトランクにスプライスすることができます。スプライス自体は単純です：両方の着信トランクは、標準ラベルスイッチング動作を行いますが、同じアウトバウンドのラベルになります。この方法で作成された各シンクツリーは高々一度各ルータに触れると出口ルータごとに1本のシンクの木があるので、結果は、N * Cシンクの木です。"
    },
    {
      "indent": 3,
      "text": "The number of trunks or sink trees can also be reduced if multiple trunks or sink trees for different classes follow the same path. This works because the traffic class of a trunk or sink tree is orthogonal to the path defined by its LSP. Thus, two trunks with different traffic classes can share a label for any part of the topology that is shared and ends in the exit router. Thus, the entire topology can be overlaid with N trunks.",
      "ja": "異なるクラスのための複数のトランクまたはシンク木が同じ経路をたどる場合トランクまたはシンクの木の数も削減することができます。トランクまたはシンクツリーのトラフィッククラスは、そのLSPで定義されたパスに直交するので、これは動作します。このように、異なるトラフィッククラスを持つ2つのトランクは、共有と出口ルータに終了されるトポロジの任意の部分のラベルを共有することができます。このように、全体のトポロジは、Nトランクでオーバーレイすることができます。"
    },
    {
      "indent": 3,
      "text": "Further, if Best Effort trunks and individual Best Effort flows are treated identically, there is no need to instantiate any Best Effort trunk that would follow the IGP computed path. This is because the packets can be directly forwarded without an LSP. However, traffic engineering may require Best Effort trunks to be treated differently from the individual Best Effort flows, thus requiring the instantiation of LSPs for Best Effort trunks. Note that Priority trunks must be instantiated because end-to-end RSVP packets to support the aggregated Priority flows must be tunneled.",
      "ja": "ベストエフォートトランクと個々のベストエフォートフローが同じように処理されている場合はさらに、IGP計算パスをたどる任意のベストエフォートトランクをインスタンス化する必要はありません。パケットが直接LSPずに転送することができるからです。しかし、トラフィックエンジニアリングは、このようにベストエフォートトランクのLSPのインスタンス化を必要とし、個々のベストエフォートフローとは異なる処理するベストエフォートトランクが必要な場合があります。なお、集約された優先順位のフローをサポートするためのエンドツーエンドのRSVPパケットがトンネル化されなければならないので、その優先順位トランクがインスタンス化されなければなりません。"
    },
    {
      "indent": 3,
      "text": "Trunks can also be aggregated with other trunks by adding a new label to the stack of labels for each trunk, effectively bundling the trunks into a single tunnel. For the purposes of this document, this is also considered a trunk, or if we need to be specific, this will be called an aggregated trunk. Two trunks can be aggregated if they share a portion of their path. There is no requirement on the exact length of the common portion of the path, and thus the exact requirements for forming an aggregated trunk are beyond the scope of this document. Note that traffic class (i.e., QoS indication) is propagated when an additional label is added to a trunk, so trunks of different classes may be aggregated.",
      "ja": "トランクはまた、効果的に単一のトンネルにトランクを束ね、各トランクのラベルのスタックに新しいラベルを追加することによって、他のトランクで集約することができます。このドキュメントの目的のために、これはまた、トランクとみなされ、あるいは我々が特定する必要がある場合、これは集約されたトランクと呼ばれます。彼らは彼らのパスの一部を共有する場合、2つのトランクを集約することができます。そこ経路の共通部分の正確な長さには必要がなく、従って凝集トランクを形成するための正確な要件は、この文書の範囲を超えています。注追加のラベルがトランクに追加されたときに異なるクラスのトランクを集約することができるように、トラフィッククラス（すなわち、QoSの表示が）、伝播していること。"
    },
    {
      "indent": 3,
      "text": "Trunks can be terminated at any point, resulting in a deaggregation of traffic. The obvious consequence is that there needs to be sufficient switching capacity at the point of deaggregation to deal with the resultant traffic.",
      "ja": "トランクは、トラフィックの脱凝集が生じ、任意の時点で終了することができます。明白な結果は、得られたトラフィックに対処するための脱凝集の時点で十分なスイッチング容量が必要であるということです。"
    },
    {
      "indent": 3,
      "text": "High reliability for a trunk can be provided through the use of one or more backup trunks. Backup trunks can be initiated either by the same router that would initiate the primary trunk or by another backup router. The status of the primary trunk can be ascertained by the router that initiated the backup trunk (note that this may be either the same or a different router as the router that initiated the primary trunk) through out of band information, such as the IGP. If a backup trunk is established and the primary trunk returns to service, the backup trunk can be deactivated and the primary trunk used instead.",
      "ja": "トランクの高い信頼性が1つまたは複数のバックアップトランクの使用を介して提供することができます。バックアップトランクは主要幹線を開始するのと同じルーターまたは別のバックアップルータのいずれかによって開始することができます。プライマリトランクのステータスは、IGPとして帯域情報のうち介してバックアップトランク（これは同じかまたはプライマリトランクを開始し、ルータ等の異なるルータのいずれであってもよいことに留意されたい）、開始ルータによって確認することができます。バックアップトランクが確立され、サービスへの主要幹線戻っている場合は、バックアップトランクは非アクティブにし、主要幹線が代わりに使用することができます。"
    },
    {
      "indent": 0,
      "text": "4.3 RSVP",
      "section_title": true,
      "ja": "4.3 RSVP"
    },
    {
      "indent": 3,
      "text": "Originally RSVP was designed as a protocol to install state associated with resource reservations for individual flows originated/destined to hosts, where path was determined by destination-based routing. Quoting directly from the RSVP specifications, \"The RSVP protocol is used by a host, on behalf of an application data stream, to request a specific quality of service (QoS) from the network for particular data streams or flows\" [RFC2205].",
      "ja": "個々のフローのためのリソース予約に関連した状態をインストールするためのプロトコルがパスを宛先ベースのルーティングにより決定されたホストに宛て/発信として本来RSVPを設計しました。 RSVP仕様から直接引用し、[RFC2205]「RSVPプロトコルは、サービスの特定品質、特定のデータストリームまたはフローのネットワークから（QoS）を要求するために、アプリケーション・データ・ストリームの代わりに、ホストによって使用されます」。"
    },
    {
      "indent": 3,
      "text": "The usage of RSVP in PASTE is quite different from the usage of RSVP as it was originally envisioned by its designers. The first difference is that RSVP is used in PASTE to install state that applies to a collection of flows that all share a common path and common pool of reserved resources. The second difference is that RSVP is used in PASTE to install state related to forwarding, including label switching information, in addition to resource reservations. The third difference is that the path that this state is installed along is no longer constrained by the destination-based routing.",
      "ja": "それは、もともとその設計者が想定されたようPASTEでRSVPの使用は、RSVPの使用方法とは全く異なります。第1の相違点は、RSVPフロー全て共通の経路と予約されたリソースの共通プールのコレクションに適用される状態をインストールするためにペーストに使用されることです。第2の相違点は、RSVPの予約リソースに加えて、ラベルスイッチング情報を含む、転送に関連する状態をインストールするためにペーストに使用されることです。第三の違いは、この状態に沿って設置されているパスがもはや宛先ベースのルーティングによって制約されることはありません。"
    },
    {
      "indent": 3,
      "text": "The key factor that makes RSVP suitable for PASTE is the set of mechanisms provided by RSVP. Quoting from the RSVP specifications, \"RSVP protocol mechanisms provide a general facility for creating and maintaining distributed reservation state across a mesh of multicast or unicast delivery paths.\" Moreover, RSVP provides a straightforward extensibility mechanism by allowing for the creation of new RSVP Objects. This flexibility allows us to also use the mechanisms provided by RSVP to create and maintain distributed state for information other than pure resource reservation, as well as allowing the creation of forwarding state in conjunction with resource reservation state.",
      "ja": "ペースト用RSVPは適したものとなる重要な要因は、RSVPによって提供されるメカニズムのセットです。 RSVP仕様から引用、「RSVPプロトコルメカニズムは、マルチキャストまたはユニキャスト配信経路のメッシュに分散予約状態を作成し、維持するための一般的な機能を提供します。」また、RSVPは、新たなRSVPオブジェクトの作成を可能にすることによって直接的拡張メカニズムを提供します。この柔軟性は、私たちはまた、作成し、純粋なリソース予約以外の情報、並びにリソース予約状態と連動して状態を転送するの作成を可能にするための分散状態を維持するために、RSVPによって提供されるメカニズムを使用することを可能にします。"
    },
    {
      "indent": 3,
      "text": "The original RSVP design, in which \"RSVP itself transfers and manipulates QoS control parameters as opaque data, passing them to the appropriate traffic control modules for interpretation\" can thus be extended to include explicit route parameters and label binding parameters. Just as with QoS parameters, RSVP can transfer and manipulate explicit route parameters and label binding parameters as opaque data, passing explicit route parameters to the appropriate forwarding module, and label parameters to the appropriate MPLS module.",
      "ja": "「転送自体をRSVPと解釈のために適切なトラフィック制御モジュールに渡す不透明なデータとしてQoS制御パラメータは、操作」従って、明示的ルート・パラメータおよびラベルバインディングパラメータを含むように拡張することができる元のRSVP設計、。単にQoSパラメータと同様に、RSVPは、適切なMPLSモジュールに明示的に適切な転送モジュールへのルートパラメータ、及びラベルパラメータを渡し、明示的経路パラメータと不透明なデータとしてラベルバインディングパラメータを転送し、操作することができます。"
    },
    {
      "indent": 3,
      "text": "Moreover, an RSVP session in PASTE is not constrained to be only between a pair of hosts, but is also used between pairs of routers that act as the originator and the terminator of a traffic trunk.",
      "ja": "また、ペースト中のRSVPセッションは、ホストのペアの間になるように制約されないだけでなく、発信元とトラフィックトランクのターミネーターとして作用するルータのペアの間で使用されています。"
    },
    {
      "indent": 3,
      "text": "Using RSVP in PASTE helps consolidate procedures for several tasks: (a) procedures for establishing forwarding along an explicit route, (b) procedures for establishing a label switched path, and (c) RSVP's existing procedures for resource reservation. In addition, these functions can be cleanly combined in any manner. The main advantage of this consolidation comes from an observation that the above three tasks are not independent, but inter-related. Any alternative that accomplished each of these functions via independent sets of procedures, would require additional coordination between functions, adding more complexity to the system.",
      "ja": "明示的なルートに沿って転送を確立するための（a）の手順、（b）のラベルを確立するための手順は、パスを切り替え、およびリソース予約のための（c）のRSVPの既存の手順：PASTEでRSVPを使用すると、複数のタスクのための手続きを統合するのに役立ちます。加えて、これらの機能は、きれいに任意の方法で組み合わせることができます。この統合の主な利点は、上記の3つのタスクは、独立したが、相互に関連していないという観察から来ています。手順の独立したセットを介して、これらの機能の各々を達成する任意の代替は、システムに複雑さを追加すること、機能の間に追加の調整を必要とするであろう。"
    },
    {
      "indent": 0,
      "text": "4.4 Traffic Engineering",
      "section_title": true,
      "ja": "4.4トラフィックエンジニアリング"
    },
    {
      "indent": 3,
      "text": "The purpose of traffic engineering is to give the ISP precise control over the flow of traffic within its network. Traffic engineering is necessary because standard IGPs compute the shortest path across the ISP's network based solely on the metric that has been administratively assigned to each link. This computation does not take into account the loading of each link. If the ISP's network is not a full mesh of physical links, the result is that there may not be an obvious way to assign metrics to the existing links such that no congestion will occur given known traffic patterns. Traffic engineering can be viewed as assistance to the routing infrastructure that provides additional information in routing traffic along specific paths, with the end goal of more efficient utilization of networking resources.",
      "ja": "トラフィックエンジニアリングの目的は、そのネットワーク内のトラフィックの流れを超えるISP正確な制御を与えることです。標準のIGPが管理上の各リンクに割り当てられているメトリックのみに基づいてISPのネットワークを介して最短経路を計算するため、トラフィックエンジニアリングが必要です。この計算は、アカウントに、各リンクの負荷がかかりません。 ISPのネットワークは、物理リンクのフルメッシュでない場合、結果は輻輳が知られているトラフィックパターンを与えられていないが発生するように、既存のリンクにメトリックを割り当てるための明確な方法がないかもしれないということです。トラフィックエンジニアリングは、ネットワークリソースのより効率的な利用の最終目標で、特定のパスに沿ってトラフィックのルーティングに追加情報を提供ルーティングインフラストラクチャへの支援とみなすことができます。"
    },
    {
      "indent": 3,
      "text": "Traffic engineering is performed by directing trunks along explicit paths within the ISP's topology. This diverts the traffic away from the shortest path computed by the IGP and presumably onto uncongested links, eventually arriving at the same destination. Specification of the explicit route is done by enumerating an explicit list of the routers in the path. Given this list, traffic engineering trunks can be constructed in a variety of ways. For example, a trunk could be manually configured along the explicit path. This would involve configuring each router along the path with state information for forwarding the particular label. Such techniques are currently used for traffic engineering in some ISPs today.",
      "ja": "トラフィックエンジニアリングは、ISPのトポロジ内の明示的なパスに沿ってトランクを向けることによって行われます。これは、最終的には同じ目的地に到着し、離れIGPによっておそらく非輻輳リンク上に計算された最短経路からのトラフィックを迂回させます。明示的なルートの仕様は、パス内のルータの明示的なリストを列挙することによって行われます。このリストを考えると、トラフィックエンジニアリングトランクは、さまざまな方法で構築することができます。例えば、トランクを手動で明示的なパスに沿って構成することができます。これは、特定のラベルを転送するための状態情報をパスに沿って各ルータの設定を伴うだろう。このような技術は、現在、いくつかのISPにおけるトラフィックエンジニアリング、今日のために使用されています。"
    },
    {
      "indent": 3,
      "text": "Alternately, a protocol such as RSVP can be used with an Explicit Route Object (ERO) so that the first router in the path can establish the trunk. The computation of the explicit route is beyond the scope of this document but may include considerations of policy, static and dynamic bandwidth allocation, congestion in the topology and manually configured alternatives.",
      "ja": "パス内の最初のルータがトランクを確立することができるように、交互に、例えばRSVPのようなプロトコルは、明示的ルート・オブジェクト（ERO）と共に使用することができます。明示的なルートの計算は、この文書の範囲外であるが、ポリシーの考慮、静的および動的帯域割当、トポロジーの輻輳と手動で設定代替物を含むことができます。"
    },
    {
      "indent": 0,
      "text": "4.5 Resource reservation",
      "section_title": true,
      "ja": "4.5リソース予約"
    },
    {
      "indent": 3,
      "text": "Priority traffic has certain requirements on capacity and traffic handling. To provide differentiated services, the ISP's infrastructure must know of, and support these requirements. The mechanism used to communicate these requirements dynamically is RSVP. The flow specification within RSVP can describe many characteristics of the flow or trunk. An LSR receiving RSVP information about a flow or trunk has the ability to look at this information and either accept or reject the reservation based on its local policy. This policy is likely to include constraints about the traffic handling functions that can be supported by the network and the aggregate capacity that the network is willing to provide for Priority traffic.",
      "ja": "優先順位トラフィックは、容量とトラフィックの取り扱いに関する一定の要件があります。差別化サービスを提供するには、ISPのインフラストラクチャはを知って、そしてこれらの要件をサポートする必要があります。これらの要件を通信するために使用されるメカニズムは、動的にRSVPです。 RSVP内のフロー仕様は、フローまたはトランクの多くの特性を記述することができます。流れまたはトランクに関するRSVP情報を受信LSRは、この情報を見て、どちらかのローカルポリシーに基づいて予約を受け入れるか拒否する能力を持っています。このポリシーは、ネットワークとネットワークが優先順位トラフィックのために提供する意思があることを総容量がサポートできるトラフィック処理機能についての制約が含まれている可能性が高いです。"
    },
    {
      "indent": 0,
      "text": "4.6 Inter-Provider SLAs (IPSs)",
      "section_title": true,
      "ja": "4.6インタープロバイダのSLA（IPSは）"
    },
    {
      "indent": 3,
      "text": "Trunks that span multiple ISPs are likely to be based on legal agreements and some other external considerations. As a result, one of the common functions that we would expect to see in this type of architecture is a bilateral agreement between ISPs to support differentiated services. In addition to the obvious compensation, this agreement is likely to spell out the acceptable traffic handling policies and capacities to be used by both parties.",
      "ja": "複数のISPにまたがるトランクは、法的契約および他のいくつかの外部の考慮事項に基づいてされる可能性が高いです。その結果、我々はこの種のアーキテクチャでは見ることが期待される一般的な機能の一つは、差別化サービスをサポートするために、ISP間の二国間協定です。明白な補償に加えて、本契約は、両当事者によって使用されるように許容可能なトラフィック処理ポリシーと能力を綴るする可能性があります。"
    },
    {
      "indent": 3,
      "text": "Documents similar to this exist today on behalf of Best Effort traffic and are known as peering agreements. Extending a peering agreement to support differentiated services would effectively create an Inter-Provider SLA (IPS). Such agreements may include the types of differentiated services that one ISP provides to the other ISP, as well as the upper bound on the amount of traffic associated with each such service that the ISP would be willing to accept and carry from the other ISP. Further, an IPS may limit the types of differentiated services and an upper bound on the amount of traffic that may originate from a third party ISP and be passed from one signer of the IPS to the other.",
      "ja": "これに類似した文書は、ベストエフォートトラフィックに代わって、今日存在するとの合意をピアリングとして知られています。差別化サービスをサポートするピアリング契約を拡張することは効果的にインタープロバイダSLA（IPS）を作成します。そのような契約は、一ISPは他のISPに提供する差別化サービスの種類、ならびにISPを受け入れ、他のISPから運ぶことをいとわないような各サービスに関連付けられたトラフィックの量に上限を含んでいてもよいです。さらに、IPSは、差別化サービスの種類及びサードパーティISPに由来してもよいし、他のIPSの署名者から渡されるトラフィックの量の上限を制限することができます。"
    },
    {
      "indent": 3,
      "text": "If the expected costs associated with the IPS are not symmetric, the parties may agree that one ISP will provide the other ISP with appropriate compensation. Such costs may be due to inequality of traffic exchange, costs in delivering the exchanged traffic, or the overhead involved in supporting the protocols exchanged between the two ISPs.",
      "ja": "IPSに関連した予想コストが対称でない場合、当事者は1つのISPが適切な補償と他のISPに提供することを合意することができます。このようなコストは、トラフィック交換の不平等が原因である可能性があり、交換のトラフィックを提供する上で、コスト、またはプロトコルをサポートするに関与オーバーヘッドは2つのISP間で交換しました。"
    },
    {
      "indent": 3,
      "text": "Note that the PASTE architecture provides a technical basis to establish IPSs, while the procedures necessary to create such IPSs are outside the scope of PASTE.",
      "ja": "必要な手順は、ペーストの範囲外であるようなのIPSを作成しながら、PASTEアーキテクチャはのIPSを確立するために技術的基礎を提供することに留意されたいです。"
    },
    {
      "indent": 0,
      "text": "4.7 Traffic shaping and policing",
      "section_title": true,
      "ja": "4.7トラフィックシェーピングとポリシング"
    },
    {
      "indent": 3,
      "text": "To help support IPSs, special facilities must be available at the interconnect between ISPs. These mechanisms are necessary to insure that the network transmitting a trunk of Priority traffic does so within the agreed traffic characterization and capacity. A simplistic example of such a mechanism might be a token bucket system, implemented on a per-trunk basis. Similarly, there need to be mechanisms to insure, on a per trunk basis, that an ISP receiving a trunk receives only the traffic that is in compliance with the agreement between ISPs.",
      "ja": "IPSはサポートを支援するために、特別な設備は、ISP間の相互接続で利用可能でなければなりません。これらのメカニズムは、プライオリティトラフィックのトランクを送信するネットワークが合意されたトラフィックの特性および容量の範囲内でそうしていることを保証するために必要です。そのような機構の単純な例は、トランクごとのベースで実施トークンバケットシステム、であるかもしれません。同様に、トランクを受信ISPは、ISP間の合意に準拠しているだけのトラフィックを受信し、トランク毎に、保証するためのメカニズムであることが必要です。"
    },
    {
      "indent": 0,
      "text": "4.8 Multilateral IPSs",
      "section_title": true,
      "ja": "4.8多国間のIPS"
    },
    {
      "indent": 3,
      "text": "Trunks may span multiple ISPs. As a result, establishing a particular trunk may require more than two ISPs. The result would be a multilateral IPS. This type of agreement is unusual with respect to existing Internet business practices in that it requires multiple participating parties for a useful result. This is also challenging because without a commonly accepted service level definition, there will need to be a multilateral definition, and this definition may not be compatible used in IPSs between the same parties.",
      "ja": "トランクは、複数のISPにまたがることがあります。その結果、特定のトランクを確立することが二つ以上のISPが必要な場合があります。結果は、多国間IPSだろう。契約のこのタイプは、それが有用な結果のために複数の参加の当事者が必要なことで既存のインターネットビジネス慣行に関しては珍しいです。一般的に受け入れられて、サービスレベルの定義なしで、そこに多国間の定義が必要になりますが、この定義は、同じ当事者間のIPSで使用される互換性がない場合がありますので、これも困難です。"
    },
    {
      "indent": 3,
      "text": "Because this new type of agreement may be a difficulty, it may in some cases be simpler for certain ISPs to establish aggregated trunks through other ISPs and then contract with customers to aggregate their trunks. In this way, trunks can span multiple ISPs without requiring multilateral IPSs.",
      "ja": "契約のこの新しいタイプのが困難である可能性があるので、いくつかのケースで他のISPを通じて集約されたトランクを確立し、その後、彼らのトランクを集約し、顧客と契約するために、特定のISPのために単純かもしれません。このように、トランクは多国間のIPSを必要とすることなく、複数のISPにまたがることができます。"
    },
    {
      "indent": 3,
      "text": "Either or both of these two alternatives are possible and acceptable within this architecture, and the choice is left for the the participants to make on a case-by-case basis.",
      "ja": "これらの二つの選択肢のいずれかまたは両方が、このアーキテクチャ内で可能と許容され、参加者は、ケースバイケースで作るための選択肢が残されています。"
    },
    {
      "indent": 0,
      "text": "5.0 The Provider Architecture for differentiated Services and Traffic Engineering (PASTE)",
      "ja": "差別化サービスおよびトラフィックエンジニアリングのための5.0プロバイダアーキテクチャ（PASTE）"
    },
    {
      "indent": 3,
      "text": "The Provider Architecture for differentiated Services and Traffic Engineering (PASTE) is based on the usage of MPLS and RSVP as mechanisms to establish differentiated service connections across ISPs. This is done in a scalable way by aggregating differentiated flows into traffic class specific MPLS tunnels, also known as traffic trunks.",
      "ja": "差別化サービスおよびトラフィックエンジニアリング（PASTE）用プロバイダアーキテクチャは、ISPの間で差別化されたサービスの接続を確立するためのメカニズムとして、MPLSとRSVPの使用法に基づいています。これは、トラフィックトランクとして知られているトラフィッククラス特定のMPLSトンネルに分化フローを集約することにより、スケーラブルな方法で行われます。"
    },
    {
      "indent": 3,
      "text": "Such trunks can be given an explicit route by an ISP to define the placement of the trunk within the ISP's infrastructure, allowing the ISP to traffic engineer its own network. Trunks can also be aggregated and merged, which helps the scalability of the architecture by minimizing the number of individual trunks that intermediate systems must support.",
      "ja": "このようなトランクは、トラフィックのISPは独自のネットワークを設計できるように、ISPのインフラストラクチャ内のトランクの配置を定義するためにISPによって明示的なルートを与えることができます。トランクは、中間システムがサポートしなければならない個々のトランクの数を最小化することによってアーキテクチャのスケーラビリティを助ける、凝集とマージすることができます。"
    },
    {
      "indent": 3,
      "text": "Special traffic handling operations, such as specific queuing algorithms or drop computations, can be supported by a network on a per-trunk basis, allowing these services to scale with the number of trunks in the network.",
      "ja": "このような特定のキューイングアルゴリズムまたはドロップ計算などの特殊なトラフィック処理動作は、毎トランクに基づいてネットワークによってサポートすることができ、これらのサービスは、ネットワーク内のトランクの数に拡張することを可能にします。"
    },
    {
      "indent": 3,
      "text": "Agreements for handling of trunks between ISPs require both legal documentation and conformance mechanisms on both sides of the agreement. As a trunk is unidirectional, it is sufficient for the transmitter to monitor and shape outbound traffic, while the receiver polices the traffic profile.",
      "ja": "ISP間トランクの取り扱いのための契約は、契約の両側に法的文書との適合性メカニズムの両方が必要です。トランクが一方向であるように、送信機は、アウトバウンドトラフィックを監視し、整形するための受信機がトラフィックプロファイルをポリシングしながら、それは、十分です。"
    },
    {
      "indent": 3,
      "text": "Trunks can either be aggregated across other ISPs or can be the subject of a multilateral agreement for the carriage of the trunk. RSVP information about individual flows is tunneled in the trunk to provide an end-to-end reservation. To insure that the return RSVP traffic is handled properly, each trunk must also have another tunnel running in the opposite direction. Note that the reverse tunnel may be a different trunk or it may be an independent tunnel terminating at the same routers as the trunk. Routing symmetry between a trunk and its return is not assumed.",
      "ja": "トランクは、いずれかの他のISPを横切って集約することができ、またはトランクのキャリッジのための多国間合意の対象とすることができます。個々のフローについてのRSVPの情報は、エンド・ツー・エンドの予約を提供するために、トランクにトンネリングされます。リターンRSVPトラフィックが適切に処理されることを保証するために、各トランクにも逆方向に実行している別のトンネルを持っている必要があります。逆方向トンネルが異なるトランクであってもよく、またはそれはトランクと同じルータで終端独立トンネルであってもよいことに留意されたいです。トランクとそのリターン間のルーティングの対称性が想定されていません。"
    },
    {
      "indent": 3,
      "text": "RSVP already contains the ability to do local path repair. In the event of a trunk failure, this capability, along with the ability to specify abstractions in the ERO, allows RSVP to re-establish the trunk in many failure scenarios.",
      "ja": "RSVPは、既にローカルパスの修復を行う能力が含まれています。トランク障害が発生した場合には、この機能は、EROに抽象化を指定する機能とともに、多くの障害シナリオでの再確立トランクにRSVPすることができます。"
    },
    {
      "indent": 0,
      "text": "6.0 Traffic flow in the PASTE architecture",
      "section_title": true,
      "ja": "PASTEアーキテクチャの6.0交通の流れ"
    },
    {
      "indent": 3,
      "text": "As an example of the operation of this architecture, we consider an example of a single differentiated flow. Suppose that a user wishes to make a telephone call using a Voice over IP service. While this call is full duplex, we can consider the data flow in each direction in a half duplex fashion because the architecture operates symmetrically.",
      "ja": "このアーキテクチャの動作の一例として、我々は、単一の差別化の流れの例を考えてみましょう。ユーザーがボイスオーバーIPサービスを利用して電話をかけることを望んでいることとします。この呼び出しは、全二重ですがアーキテクチャは対称的に動作するため、我々は半二重方式で各方向のデータの流れを考慮することができます。"
    },
    {
      "indent": 3,
      "text": "Suppose that the data packets for this voice call are created at a node S and need to traverse to node D. Because this is a voice call, the data packets are encoded as Priority packets. If there is more granularity within the traffic classes, these packets might be encoded as wanting low jitter and having low drop preference. Initially this is encoded into the precedence bits of the IPv4 ToS byte.",
      "ja": "この音声通話のためのデータパケットがノードSで作成され、これは、データパケットが優先パケットとしてエンコードされている音声通話であるため、ノードDするトラバースする必要があると仮定します。トラフィッククラス内のより細かがある場合は、これらのパケットは、低ジッタを望むと低ドロップの嗜好を持つものとしてエンコードされる可能性があります。当初これは、IPv4のToSバイトの優先順位ビットに符号化されます。"
    },
    {
      "indent": 0,
      "text": "6.1 Propagation of RSVP messages",
      "section_title": true,
      "ja": "RSVPメッセージの6.1伝播"
    },
    {
      "indent": 3,
      "text": "To establish the flow to node D, node S first generates an RSVP PATH message which describes the flow in more detail. For example, the flow might require 3kbps of bandwidth, be insensitive to jitter of less than 50ms, and require a delay of less than 200ms. This message is passed through node S's local network and eventually appears in node S's ISP. Suppose that this is ISP F.",
      "ja": "Dノードへの流れを確立するために、ノードSは、まずより詳細に流れを説明RSVP PATHメッセージを生成します。例えば、フローは、帯域幅の3kbpsを必要未満50ミリ秒のジッタの影響を受けないこと、および未満200msの遅延が必要な場合があります。このメッセージは、ノードSのローカルネットワークを通過し、最終的にはノードSのISPに表示されます。これはISP Fであると仮定"
    },
    {
      "indent": 3,
      "text": "ISP F has considerable latitude in its options at this point. The requirement on F is to place the flow into a trunk before it exits F's infrastructure. One thing that F might do is to perform the admission control function at the first hop router. At this point, F would determine if it had the capacity and capability of carrying the flow across its own infrastructure to an exit router E. If the admission control decision is negative, the first hop router can inform node S using RSVP. Alternately, it can propagate the RSVP PATH message along the path to exit router E. This is simply normal operation of RSVP on a differentiated flow.",
      "ja": "ISP Fは、この時点でそのオプションにかなりの自由度を有しています。 F上の要件は、Fのインフラストラクチャを終了する前に、トランクに流れを配置することです。 Fが行う可能性があることの一つは、最初のホップルータでアドミッション制御機能を実行することです。この時点で、Fは、アドミッション制御決定が否定的である場合、出口ルータEに独自のインフラストラクチャ全体の流れを運ぶ能力と能力を持っていた場合、最初のホップルータがRSVPを使用して、ノードSに通知することができる決定するであろう。あるいは、これは単に分化フローでRSVPの正常動作であるルータE.を終了する経路に沿ってRSVP PATHメッセージを伝播することができます。"
    },
    {
      "indent": 3,
      "text": "At exit router E, there is a trunk that ISP F maintains that transits ISP X, Y, and Z and terminates in ISP L. Based on BGP path information or on out of band information, Node D is known to be a customer of ISP L. Exit router E matches the flow requirements in the RSVP PATH message to the characteristics (e.g., remaining capacity) of the trunk to ISP L. Assuming that the requirements are compatible, it then notes that the flow should be aggregated into the trunk.",
      "ja": "出口ルータEでは、ISP Fがオン遷移ISP X、Y、及びZとBGPパス情報にISP L.ベースで終了するかは、帯域情報のうち、ノードDは、ISPの顧客であることが知られていることを維持するトランクがありますL.出口ルータEは、要件に互換性があると仮定すると、ISP L.にトランクの特性にRSVP PATHメッセージ（例えば、残り容量）でのフロー要件に合致する、それがその後の流れはトランクに集約されるべきであると指摘しています。"
    },
    {
      "indent": 3,
      "text": "To insure that the flow reservation happens end to end, the RSVP PATH message is then encapsulated into the trunk itself, where it is transmitted to ISP L. It eventually reaches the end of the trunk, where it is decapsulated by router U. PATH messages are then propagated all the way to the ultimate destination D.",
      "ja": "流れの予約がエンドツーエンドを起こることを保証するために、RSVP PATHメッセージは、それがISP L.それに伝達され、トランク自体の中にカプセル化され、最終的にそれがルータのU.のPATHメッセージによってデカプセル化されたトランクの終わりに達しましたその後、最終目的地Dにすべての方法を伝播されます"
    },
    {
      "indent": 3,
      "text": "Note that the end-to-end RSVP RESV messages must be carefully handled by router U. The RESV messages from router U to E must return via a tunnel back to router E.",
      "ja": "エンドツーエンドのRSVP RESVメッセージを注意深くEにルータUからルータU.ザRESVメッセージによって処理されなければならないことに注意すると、バックルータE.へのトンネルを介して返さなければなりません"
    },
    {
      "indent": 3,
      "text": "RSVP is also used by exit router E to initialize and maintain the trunk to ISP L. The RSVP messages for this trunk are not placed within the trunk itself but the end-to-end RSVP messages are. The existence of multiple overlapping RSVP sessions in PASTE is straightforward, but requires explicit enumeration when discussing particular RSVP sessions.",
      "ja": "RSVPはまた、初期化し、このトランクのためのRSVPメッセージがトランク内に配置されていないそのものではなく、エンドツーエンドのRSVPメッセージがあるのISP L.へのトランクを維持するために、出口ルータEで使用されています。 PASTEで複数の重複RSVPセッションの存在は単純であるが、特定のRSVPセッションを議論するときに、明示的列挙が必要です。"
    },
    {
      "indent": 0,
      "text": "6.2 Propagation of user data",
      "section_title": true,
      "ja": "ユーザデータの6.2伝播"
    },
    {
      "indent": 3,
      "text": "Data packets created by S flow through ISP F's network following the flow reservation and eventually make it to router E. At that point, they are given an MPLS label and placed in the trunk. Normal MPLS switching will propagate this packet across ISP X's network. Note that the same traffic class still applies because the class encoding is propagated from the precedence bits of the IPv4 header to the CoS bits in the MPLS label. As the packet exits ISP X's network, it can be aggregated into another trunk for the express purpose of tranisiting ISP Y.",
      "ja": "その時点でE.をルータにそれを作る最終的にフローの予約以下とISP Fのネットワークを介して、Sの流れによって作成されたデータパケットは、彼らがMPLSラベルを与えられ、トランクに配置されています。通常のMPLSスイッチングは、ISP Xのネットワークを介してこのパケットを伝搬します。クラス符号化はMPLSラベルのCoSビットにIPv4ヘッダの優先順位ビットから伝播されるので、同じトラフィッククラスがまだ適用されます。パケットがISP Xのネットワークを出ると、それはISP Y.をtranisitingという明確な目的のために別のトランクに集約することができます"
    },
    {
      "indent": 3,
      "text": "Again, label switching is used to bring the packet across ISP Y's network and then the aggregated trunk terminates at a router in ISP Z's network. This router deaggregates the trunk, and forwards the resulting trunk towards ISP L. This trunk transits ISP Z and terminates in ISP L at router U. At this point, the data packets are removed from the trunk and forwarded along the path computed by RSVP.",
      "ja": "ここでも、ラベルスイッチングは、ISP Yのネットワークを介してパケットをもたらすために使用され、その後、集約されたトランクはISP Zのネットワーク内のルータで終端します。このルータは、トランクをdeaggregates、そしてこのトランクがISP Zを通過し、この時点で、ルータU.でISP Lで終端ISP L.向かっ得トランクを転送し、データパケットがトランクから削除され、RSVPによって計算された経路に沿って転送されます。"
    },
    {
      "indent": 0,
      "text": "6.3 Trunk establishment and maintenance",
      "section_title": true,
      "ja": "6.3トランクの確立と維持"
    },
    {
      "indent": 3,
      "text": "In this example, there are two trunks in use. One trunk runs from ISP F, through ISPs X, Y and Z, and then terminates in ISP L. The other aggregated trunk begins in ISP X, transits ISP Y and terminates in ISP Z.",
      "ja": "この例では、使用中の2つのトランクがあります。 1つのトランクはISPsのX、Y及びZを介して、ISP Fから実行され、その後、他の集約トランクがISP Xで始まるISP L.で終端し、ISP Y遷移とISP Z.で終端"
    },
    {
      "indent": 3,
      "text": "The first trunk may be established based on a multilateral agreement between ISPs F, X, Z and L. Note that ISP Y is not part of this multilateral agreement, and ISP X is contractually responsible for providing carriage of the trunk into ISP Z. Also per this agreement, the tunnel is maintained by ISP F and is initialized and maintained through the use of RSVP and an explicit route object that lists ISP's X, Z, and L. Within this explicit route, ISP X and ISP L are given as strict hops, thus constraining the path so that there may not be other ISPs intervening between the pair of ISPs F and X and the pair Z and L. However, no constraint is placed on the path between ISPs X and Z. Further, there is no constraint placed on which router terminates the trunk within L's infrastructure.",
      "ja": "最初のトランクがISPのF、X、ZおよびLの間の多国間合意に基づいて確立することができるISP Yはこの多角契約の一部ではなく、ISP XはまたISP Z.にトランクのキャリッジを提供するための契約責任があることに注意してくださいこの契約ごと、トンネルがISP Fによって維持され、RSVPを使用すると、この明示的経路内ISPのX、Z、およびL.を一覧表示し、明示的なルートオブジェクトを介して初期化され、維持され、ISP X及びISP Lは厳密として与えられますISPのFとXの対と対ZとLの間に介在する他のISPが存在しないように、従ってパスを拘束ホップが、しかし、制約がさらにISPsのXとZの間の経路上に配置されていない、ないあります制約は、L'sのインフラストラクチャ内トランクを終端するルータ上に置きます。"
    },
    {
      "indent": 3,
      "text": "Normally this trunk is maintained by one of ISP F's routers adjacent to ISP X. For robustness, ISP F has a second router adjacent to ISP X, and that provides a backup trunk.",
      "ja": "通常、このトランクは、堅牢性ISP Xに隣接ISP Fのルータの1つによって維持され、ISP FはISP Xに隣接する第2のルータを有し、それはバックアップトランクを提供します。"
    },
    {
      "indent": 3,
      "text": "The second trunk may be established by a bilateral agreement between ISP X and Y. ISP Z is not involved. The second trunk is constrained so that it terminates on the last hop router within Y's infrastructure. This tunnel is initialized and maintained through the use of RSVP and an explicit route that lists the last hop router within ISP Y's infrastructure. In order to provide redundancy in the case of the failure of the last hop router, there are multiple explicit routes configured into ISP X's routers. These routers can select one working explicit route from their configured list. Further, in order to provide redundancy against the failure of X's primary router, X provides a backup router with a backup trunk.",
      "ja": "第二のトランクは、ISP XとY ISP Zとの間の二国間の合意によって確立することができる関与しません。それはYのインフラストラクチャ内の最後のホップルータで終端するように、第2トランクが制約されています。このトンネルは初期化され、RSVPを使用すると、ISP Yのインフラストラクチャ内の最後のホップルータを示しています明示的なルートを通じて維持されています。ラストホップルータの障害が発生した場合に冗長性を提供するために、ISP Xのルータに設定された複数の明示的なルートがあります。これらのルータは自分の設定されたリストから1作業のルートを明示的に選択することができます。さらに、Xのプライマリルータの故障に対する冗長性を提供するために、Xは、バックアップトランクでバックアップルータを提供します。"
    },
    {
      "indent": 0,
      "text": "6.4 Robustness",
      "section_title": true,
      "ja": "6.4堅牢性"
    },
    {
      "indent": 3,
      "text": "Note that in this example, there are no single points of failure once the traffic is within ISP F's network. Each trunk has a backup trunk to protect against the failure of the primary trunk. To protect against the failure of any particular router, each trunk can be configured with multiple explicit route objects that terminate at one of several acceptable routers.",
      "ja": "トラフィックはISP Fのネットワーク内で一度、この例では、単一障害点が存在しないことに注意してください。各トランクは主要幹線の障害から保護するためのバックアップトランクを持っています。任意の特定のルータの障害から保護するために、各トランクには、いくつかの許容されるルータの1つで終端する複数の明示的経路オブジェクトで構成することができます。"
    },
    {
      "indent": 0,
      "text": "7.0 Security Considerations",
      "section_title": true,
      "ja": "7.0セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "Because Priority traffic intrinsically has more 'value' than Best Effort traffic, the ability to inject Priority traffic into a network must be carefully controlled. Further, signaling concerning Priority traffic has to be authenticated because it is likely that the signaling information will result in specific accounting and eventually billing for the Priority services. ISPs are cautioned to insure that the Priority traffic that they accept is in fact from a known previous hop. Note that this is a simple requirement to fulfill at private peerings, but it is much more difficult at public interconnects. For this reason, exchanging Priority traffic at public interconnects should be done with great care.",
      "ja": "優先順位トラフィックは本質的にベストエフォートトラフィックよりも「の値」を持っているので、ネットワークに優先順位トラフィックを注入する能力を慎重に制御しなければなりません。シグナリング情報は、特定の会計になり、最終的に優先順位サービスに課金する可能性があるので、さらに、関連する優先順位シグナリングトラフィックは認証される必要があります。 ISPは、彼らが受け入れる優先順位トラフィックが知られている前のホップから実際にあることを保証するために注意を促しています。これはプライベートピアリングで満たすために、単純な要件ですが、それははるかに困難公共の相互接続であることに注意してください。このため、公共の相互接続に優先順位トラフィックを交換することは細心の注意を払って行われるべきです。"
    },
    {
      "indent": 3,
      "text": "RSVP traffic needs to be authenticated. This can possibly be done through the use of the Integrity Object.",
      "ja": "RSVPトラフィックが認証される必要があります。これは、おそらく完全性オブジェクトを使用して行うことができます。"
    },
    {
      "indent": 0,
      "text": "8.0 Conclusion",
      "section_title": true,
      "ja": "8.0おわりに"
    },
    {
      "indent": 3,
      "text": "The Provider Architecture for differentiated Services and Traffic Engineering (PASTE) provides a robust, scalable means of deploying differentiated services in the Internet. It provides scalability by aggregating flows into class specific MPLS tunnels. These tunnels, also called trunks, can in turn be aggregated, thus leading to a hierarchical aggregation of traffic.",
      "ja": "差別化サービスおよびトラフィックエンジニアリング（PASTE）用プロバイダアーキテクチャは、インターネットで差別化されたサービスを展開する堅牢でスケーラブルな手段を提供します。これは、クラスの特定のMPLSトンネルの中への流れを集約することによって、スケーラビリティを提供します。また、トランクと呼ばれるこれらのトンネルは、今度はこれトラフィックの階層的集約につながる、集約することができます。"
    },
    {
      "indent": 3,
      "text": "Trunk establishment and maintenance is done with RSVP, taking advantage of existing work in differentiated services. Explicit routes within the RSVP signaling structure allow providers to perform traffic engineering by placing trunks on particular links in their network.",
      "ja": "トランクの確立と維持は、差別化サービスに既存の作業の利点を生かし、RSVPで行われます。 RSVPシグナリング構造内の明示的なルートは、プロバイダがネットワーク内の特定のリンクにトランクを配置することによって、トラフィックエンジニアリングを行うことを可能にします。"
    },
    {
      "indent": 3,
      "text": "The result is an architecture that is sufficient to scale to meet ISP needs and can provide differentiated services in the large, support traffic engineering, and continue to grow with the Internet.",
      "ja": "結果は、ISPのニーズを満たすために拡張するのに十分であると、大きな、サポートトラフィックエンジニアリングで差別化されたサービスを提供し、インターネットで成長を続けることができますアーキテクチャです。"
    },
    {
      "indent": 0,
      "text": "8.1 Acknowledgments",
      "section_title": true,
      "ja": "8.1謝辞"
    },
    {
      "indent": 3,
      "text": "Inspiration and comments about this document came from Noel Chiappa, Der-Hwa Gan, Robert Elz, Lisa Bourgeault, and Paul Ferguson.",
      "ja": "インスピレーションとこの文書についてのコメントはクリスマスChiappa、デア・ファガン、ロバート・エルツ、リサBourgeault、そしてポール・ファーガソンから来ました。"
    },
    {
      "indent": 0,
      "text": "9.0 References",
      "section_title": true,
      "ja": "9.0参考資料"
    },
    {
      "indent": 3,
      "text": "[1] Rosen, E., Viswanathan, A., and R. Callon, \"A Proposed Architecture for MPLS\", Work in Progress.",
      "ja": "[1]ローゼン、E.、Viswanathanの、A.、およびR. Callon、 \"MPLSのために提案されたアーキテクチャ\"、ProgressのWork。"
    },
    {
      "indent": 3,
      "text": "[2] Braden, R., Zhang, L., Berson, S., Herzog, S., and S. Jamin, \"Resource ReSerVation Protocol (RSVP) -- Version 1 Functional Specification\", RFC 2205, September 1997.",
      "ja": "[2]ブレーデン、R.、チャン、L.、Berson氏、S.、ハーツォグ、S.、およびS.ヤミン、 \"リソース予約プロトコル（RSVP） - バージョン1機能仕様\"、RFC 2205、1997年9月。"
    },
    {
      "indent": 3,
      "text": "[3] Rosen, E., Rekhter, Y., Tappan, D., Farinacci, D., Fedorkow,, G., Li, T., and A. Conta, \"MPLS Label Stack Encoding\", Work in Progress.",
      "ja": "[3]ローゼン、E.、Rekhter、Y.、タッパン、D.、ファリナッチ、D.、Fedorkow ,, G.、李、T.、およびA.コンタ、 \"MPLSラベルスタックエンコーディング\"、ProgressのWork。"
    },
    {
      "indent": 3,
      "text": "[4] Davie, B., Rekhter, Y., Rosen, E., Viswanathan, A., and V. Srinivasan, \"Use of Label Switching With RSVP\", Work in Progress.",
      "ja": "[4]デイビー、B.、Rekhter、Y.、ローゼン、E.、Viswanathanの、A.、およびV.スリニバサン、 \"RSVPとラベルスイッチングを使用する\"、ProgressのWork。"
    },
    {
      "indent": 3,
      "text": "[5] Gan, D.-H., Guerin, R., Kamat, S., Li, T., and E. Rosen, \"Setting up Reservations on Explicit Paths using RSVP\", Work in Progress.",
      "ja": "[5]ガン、D.-H.、ゲラン、R.、Kamat、S.、李、T.、およびE.ローゼンを、進行中の作業 \"RSVPを使用して明示的なパスの予約の設定\"。"
    },
    {
      "indent": 3,
      "text": "[6] Davie, B., Li, T., Rosen, E., and Y. Rekhter, \"Explicit Route Support in MPLS\", Work in Progress.",
      "ja": "[6]デイビー、B.、李、T.、ローゼン、E.、およびY. Rekhter、 \"MPLSにおける明示的経路サポート\"、ProgressのWork。"
    },
    {
      "indent": 3,
      "text": "[7] http://www.anxo.com/",
      "ja": "「７」 ｈっｔｐ：／／ｗっｗ。あんぉ。こｍ／"
    },
    {
      "indent": 0,
      "text": "10.0 Authors' Addresses",
      "section_title": true,
      "ja": "10.0著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Tony Li Juniper Networks, Inc. 385 Ravendale Dr. Mountain View, CA 94043",
      "ja": "トニー・リージュニパーネットワークス株式会社385 Ravendale博士はマウンテンビュー、CA 94043"
    },
    {
      "indent": 3,
      "text": "Phone: +1 650 526 8006 Fax: +1 650 526 8001 EMail: tli@juniper.net",
      "ja": "電話：+1 650 526 8006ファックス：+1 650 526 8001 Eメール：tli@juniper.net"
    },
    {
      "indent": 3,
      "text": "Yakov Rekhter cisco Systems, Inc. 170 W. Tasman Dr. San Jose, CA 95134",
      "ja": "ヤコフ・レックターシスコシステムズ社170 W.タスマン博士はカリフォルニア州サンノゼ95134"
    },
    {
      "indent": 3,
      "text": "EMail: yakov@cisco.com",
      "ja": "メールアドレス：yakov@cisco.com"
    },
    {
      "indent": 0,
      "text": "11. Full Copyright Statement",
      "section_title": true,
      "ja": "11.完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (1998). All Rights Reserved.",
      "ja": "著作権（C）インターネット協会（1998）。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the Internet Society or other Internet organizations, except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed, or as required to translate it into languages other than English.",
      "ja": "この文書とその翻訳は、コピーして他の人に提供し、それ以外についてはコメントまたは派生物は、いかなる種類の制限もなく、全体的にまたは部分的に、準備コピーし、公表して配布することができることを説明したり、その実装を支援することができます、上記の著作権表示とこの段落は、すべてのそのようなコピーや派生物に含まれていることを条件とします。しかし、この文書自体は著作権のための手順はで定義されている場合には、インターネット標準を開発するために必要なものを除き、インターネットソサエティもしくは他のインターネット関連団体に著作権情報や参照を取り除くなど、どのような方法で変更されないかもしれませんインターネット標準化プロセスが続く、または英語以外の言語に翻訳するために、必要に応じなければなりません。"
    },
    {
      "indent": 3,
      "text": "The limited permissions granted above are perpetual and will not be revoked by the Internet Society or its successors or assigns.",
      "ja": "上記の制限は永久で、インターネット学会やその後継者や譲渡者によって取り消されることはありません。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein is provided on an \"AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書とここに含まれている情報は、基礎とインターネットソサエティおよびインターネットエンジニアリングタスクフォースはすべての保証を否認し、明示または黙示、その情報の利用がない任意の保証を含むがこれらに限定されない「として、」上に設けられています特定の目的への権利または商品性または適合性の黙示の保証を侵害します。"
    }
  ]
}