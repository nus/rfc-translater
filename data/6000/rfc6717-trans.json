{
  "title": {
    "text": "RFC 6717 - kx509 Kerberized Certificate Issuance Protocol in Use in 2012",
    "ja": "RFC 6717 - 2012年に使用中のkx509 Kerberos対応の証明書発行プロトコル"
  },
  "number": 6717,
  "created_at": "2019-10-29 20:00:30.508626+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Independent Submission                                           H. Hotz\nRequest for Comments: 6717                   Jet Propulsion Lab, Caltech\nCategory: Informational                                       R. Allbery\nISSN: 2070-1721                                      Stanford University\n                                                             August 2012",
      "raw": true
    },
    {
      "indent": 5,
      "text": "kx509 Kerberized Certificate Issuance Protocol in Use in 2012",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document describes a protocol, called kx509, for using Kerberos tickets to acquire X.509 certificates. These certificates may be used for many of the same purposes as X.509 certificates acquired by other means, but if a Kerberos infrastructure already exists, then the overhead of using kx509 may be much less.",
      "ja": "このドキュメントでは、X.509証明書を取得するためにKerberosチケットを使用するため、プロトコルと呼ばれるkx509を説明しています。これらの証明書は、他の手段により取得されたX.509証明書と同じ目的の多くのために使用することができるが、ケルベロスインフラが既に存在する場合は、kx509を使用してのオーバーヘッドがずっと少なくてもよいです。"
    },
    {
      "indent": 3,
      "text": "While not standardized, this protocol is already in use at several large organizations, and certificates issued with this protocol are recognized by the International Grid Trust Federation.",
      "ja": "標準化されていないが、このプロトコルは、いくつかの大規模な組織ですでに使用されており、このプロトコルで発行された証明書は、国際グリッド信託連盟によって認識されています。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for informational purposes.",
      "ja": "このドキュメントはインターネット標準化過程仕様ではありません。それは、情報提供の目的のために公開されています。"
    },
    {
      "indent": 3,
      "text": "This is a contribution to the RFC Series, independently of any other RFC stream. The RFC Editor has chosen to publish this document at its discretion and makes no statement about its value for implementation or deployment. Documents approved for publication by the RFC Editor are not a candidate for any level of Internet Standard; see Section 2 of RFC 5741.",
      "ja": "これは、独立して、他のRFCストリームの、RFCシリーズへの貢献です。 RFC Editorはその裁量でこの文書を公開することを選択し、実装や展開のためにその値についての声明を出すていません。 RFC編集者によって公表のために承認されたドキュメントは、インターネット標準の任意のレベルの候補ではありません。 RFC 5741のセクション2を参照してください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc6717.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc6717で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2012 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2012 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................2\n   1.1. Requirements Language ......................................3\n2. Protocol Data ...................................................3\n  2.1.  Request Packet .............................................3\n  2.2.  Reply Packet ...............................................4\n3. Protocol Operation ..............................................7\n4. Acknowledgements ................................................8\n5. IANA Considerations .............................................8\n6. Security Considerations .........................................9\n7. References .....................................................10\n   7.1. Normative References ......................................10\n   7.2. Informative References ....................................10\nAppendix A.  Certificate Caching and Deployment Considerations ....12\nAppendix B.  Historic Extensions ..................................12\nAppendix C.  Example Exchange .....................................12",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "The two primary ways of providing cryptographically secure identification on the Internet are Kerberos tickets [RFC4120] and X.509 [RFC5280] [X.509] certificates.",
      "ja": "インターネット上で暗号的に安全な識別を提供する2つの主要な方法は、Kerberosチケット[RFC4120]及び509 [RFC5280] [X.509]証明書です。"
    },
    {
      "indent": 3,
      "text": "In practical IT infrastructure where both are in use, it's highly desirable to deploy their support in a way that guarantees they both authoritatively refer to the same entities. There is already a widely adopted standard for using X.509 certificates to acquire corresponding Kerberos tickets called Public Key Cryptography for Initial Authentication in Kerberos (PKINIT) [RFC4556]. This document describes the kx509 protocol for supporting the symmetric operation of acquiring X.509 certificates using Kerberos tickets.",
      "ja": "両方が使用されている実践的なITインフラストラクチャでは、それは彼らの両方が正式に同じエンティティを参照する保証方法で彼らのサポートを展開することが非常に望ましいです。ケルベロスにおける初期の認証（PKINIT）のための公開鍵暗号と呼ばれる、対応するKerberosチケットを取得するためにX.509証明書を使用するための広く採用されている標準は、[RFC4556]はすでに存在します。この文書では、Kerberosチケットを使用してX.509証明書を取得するの対称操作をサポートするためのkx509プロトコルを記述します。"
    },
    {
      "indent": 3,
      "text": "Preparing and reviewing this document exposed a number of issues that are discussed in the security considerations. Unfortunately, some of them can only be addressed with an incompatible upgrade to this protocol. The IETF's Kerberos working group has an expected work item to address these issues.",
      "ja": "この文書を準備し、見直すことは、セキュリティ上の考慮事項で説明されている多くの問題を露呈しました。残念ながら、それらのいくつかは、このプロトコルに互換性のないバージョンアップで対処することができます。 IETFのKerberosワーキンググループは、これらの問題に対処するため、予想される作業項目があります。"
    },
    {
      "indent": 3,
      "text": "The International Grid Trust Federation [IGTF] supports the use of Short Lived Credential Services [SLCS] as a means to authenticate for resource usage based on other, native identity stores that an organization maintains. X.509 certificates issued using the kx509 protocol based on a Kerberos identity is one of the recognized credential services. The certificate profile for that use is outside the scope of this RFC but is described in [GRID-prof].",
      "ja": "国際グリッド信託連盟[IGTF]はショートの使用は、組織が管理し、他の、ネイティブのIDストアに基づいて、リソース使用量のために認証するための手段として、資格サービス[SLCS]に住んでいたサポートしています。ケルベロスのアイデンティティに基づいてkx509プロトコルを使用して発行されたX.509証明書が認識資格サービスの1つです。その使用のための証明書プロファイルは、このRFCの範囲外であるが、[GRID-PROF]に記載されています。"
    },
    {
      "indent": 3,
      "text": "In normal operation, kx509 can be used after a Kerberos ticket-granting-ticket (TGT) is acquired, which is most likely during user login. First, the client generates an RSA public/private key pair. Next, using the Kerberos ticket-granting-ticket, it acquires a Kerberos service ticket for the KCA (Kerberized Certificate Authority) and uses this to send the public half of its key pair. The KCA will decrypt the service ticket, verify the integrity of the incoming packet, determine the identity of the user, and use the session key to send back a corresponding X.509 certificate.",
      "ja": "通常の操作では、kx509は、ユーザのログイン時に最も可能性があります取得されたKerberosチケット許可チケット（TGT）、後に使用することができます。まず、クライアントは、RSA公開鍵/秘密鍵のペアを生成します。次に、Kerberosチケット認可チケットを使用して、それがKCA（Kerberos対応認証局）のKerberosサービスチケットを取得し、その鍵ペアの公開半分を送信するために、これを使用しています。 KCAは、着信パケットの整合性を検証、サービスチケットを復号化するユーザの識別を決定し、対応するX.509証明書を返送するためにセッションキーを使用します。"
    },
    {
      "indent": 0,
      "text": "1.1. Requirements Language",
      "section_title": true,
      "ja": "1.1。要件言語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119 [RFC2119].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はありますRFC 2119 [RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "2. Protocol Data",
      "section_title": true,
      "ja": "2.プロトコルデータ"
    },
    {
      "indent": 3,
      "text": "The protocol consists of a single request/reply exchange using UDP.",
      "ja": "プロトコルはUDPを使用して、単一の要求/応答の交換から成ります。"
    },
    {
      "indent": 3,
      "text": "Both the request and the reply packet begin with four bytes of version ID information, followed by a DER-encoded ASN.1 message. The first two bytes of the version ID are reserved. They MUST be set to zero when sent and SHOULD be ignored when received. The third and fourth bytes are the major and minor version numbers, respectively. The version of the protocol described in this document is designated 2.0, so the first four bytes of the packet are 0, 0, 2, and 0.",
      "ja": "要求と応答パケットの両方が、DER符号化されたASN.1メッセージ続くバージョンID情報の4つのバイトから始まります。バージョンIDの最初の2つのバイトは予約されています。彼らは、送信されたときにゼロに設定しなければならなくて、受信時に無視されるべきです。第三及び第四のバイトは、それぞれ、メジャーバージョンとマイナーバージョン番号です。この文書に記載されているプロトコルのバージョン2.0を指定しているので、パケットの最初の4つのバイトは、0、0、2、及び0です。"
    },
    {
      "indent": 3,
      "text": "Incompatible variations of this protocol MUST use a different major version number.",
      "ja": "このプロトコルの互換性のないバリエーションが異なるメジャーバージョン番号を使用しなければなりません。"
    },
    {
      "indent": 0,
      "text": "2.1. Request Packet",
      "section_title": true,
      "ja": "2.1。要求パケット"
    },
    {
      "indent": 3,
      "text": "The request consists of a version ID, followed by a DER-encoded ASN.1 message containing a Kerberos AP-REQ, integrity check data on the request, and public key generated by the client. The ASN.1 encoding is:",
      "ja": "リクエストは、リクエストに応じてケルベロスAP-REQ、インテグリティチェックデータを含むDERエンコードASN.1メッセージ、およびクライアントによって生成された公開鍵に続くバージョンID、から成ります。 ASN.1エンコードは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "KX509Request ::= SEQUENCE {\n        AP-REQ  OCTET STRING,\n        pk-hash OCTET STRING,\n        pk-key  OCTET STRING\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The AP-REQ is as described in [RFC4120], Section 5.5.1.",
      "ja": "[RFC4120]、セクション5.5.1に記載されるようにAP-REQです。"
    },
    {
      "indent": 3,
      "text": "The pk-hash is Hashed Message Authentication Code (HMAC) using SHA-1 as the underlying hash. All 160 bits are sent. The key used is the Kerberos session key. The data to be hashed is the concatenation of the following:",
      "ja": "PK-ハッシュは、基礎となるハッシュとしてSHA-1を用いてメッセージ認証コード（HMAC）、ハッシュされます。すべての160ビットが送信されます。使用されるキーは、Kerberosセッションキーです。ハッシュされるデータは、以下の連結したものです："
    },
    {
      "indent": 3,
      "text": "o 4-byte version ID at the beginning of the packet.",
      "ja": "パケットの先頭のO 4バイトのバージョンID。"
    },
    {
      "indent": 3,
      "text": "o OCTET STRING of the AP-REQ.",
      "ja": "AP-REQのOオクテットSTRING。"
    },
    {
      "indent": 3,
      "text": "o OCTET STRING of the pk-key.",
      "ja": "PK-キーのOオクテット文字列。"
    },
    {
      "indent": 3,
      "text": "The pk-key contains a public key. This key and its corresponding private key are generated by the client before contacting the server. Implementations of this protocol MUST support RSA keys, in which case the key is a DER-encoded RSAPublicKey as defined in [RFC3447], Section A.1.1, and then it is stored in this octet string in the request. Its encoding as an OCTET STRING starts with the 0x30 byte sequence at the beginning of a DER-encoded RSAPublicKey. Use of other public-key types is not defined.",
      "ja": "PK-鍵は公開鍵が含まれています。このキーとそれに対応する秘密鍵は、サーバーに連絡する前に、クライアントによって生成されます。このプロトコルの実装は、[RFC3447]で定義されるようにキーがDERエンコードのRSAPublicKeyである場合にはRSAキーを、サポートセクションA.1.1、そしてそれは、要求におけるこのオクテット文字列に格納されなければなりません。オクテット文字列としてそのエンコーディングはDERでエンコードされたのRSAPublicKeyの先頭に0x30をバイトシーケンスで始まります。他の公開鍵のタイプの使用は定義されていません。"
    },
    {
      "indent": 3,
      "text": "Appendix C shows an example request packet.",
      "ja": "付録Cは、例えば、要求パケットを示しています。"
    },
    {
      "indent": 0,
      "text": "2.2. Reply Packet",
      "section_title": true,
      "ja": "2.2。パケットを返信"
    },
    {
      "indent": 3,
      "text": "The reply consists of a version ID, followed by a DER-encoded ASN.1 message containing an error code, an optional authentication hash, optional certificate, and optional error text. The service SHOULD return replies of the same version as the request where possible.",
      "ja": "応答は、エラーコード、オプションの認証ハッシュ、任意の証明書、およびオプションのエラーテキストを含むDERエンコードASN.1メッセージ続くバージョンID、から成ります。サービスは、可能なリクエストと同じバージョンの応答を返すべきです。"
    },
    {
      "indent": 3,
      "text": "KX509Response ::= SEQUENCE {\n        error-code[0]  INTEGER DEFAULT 0,\n        hash[1]        OCTET STRING OPTIONAL,\n        certificate[2] OCTET STRING OPTIONAL,\n        e-text[3]      VisibleString OPTIONAL\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Although the format of the reply contains independently optional objects, the server MUST only generate replies with one of the following allowed combinations.",
      "ja": "応答の形式は、独立して任意のオブジェクトが含まれているが、サーバは、以下の許可の組み合わせのいずれかで応答を生成しなければなりません。"
    },
    {
      "indent": 15,
      "text": "+------------+------+-------------+--------+\n|            | hash | certificate |        |\n| error-code | hash |             | e-text |\n| error-code |      |             | e-text |\n+------------+------+-------------+--------+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The first case is returned when the server successfully generates a certificate for the user. The certificate is a DER-encoded certificate as defined in [RFC5280], Appendix A, page 116. Its encoding as an OCTET STRING starts with the 0x30 byte sequence that is at the beginning of a DER-encoded certificate.",
      "ja": "サーバーが正常にユーザーの証明書を生成するときに最初のケースが返されます。証明書は、[RFC5280]で定義されるようにDER符号化された証明書であり、付録Aは、OCTET STRINGとしてページ116そのコードは、DER符号化された証明書の冒頭にある0x30のバイトシーケンスで始まります。"
    },
    {
      "indent": 3,
      "text": "The second case is returned when the server successfully authenticates the user and their key, but is unable for some other reason to generate a certificate.",
      "ja": "後者の場合は、サーバーが正常にユーザーとそのキーを認証しますが、証明書を生成するためにいくつかの他の理由でできない場合に返されます。"
    },
    {
      "indent": 3,
      "text": "The third case MAY be returned if the server is unable to successfully authenticate the user and intends to return some unauthenticated information to the client.",
      "ja": "サーバーが正常にユーザを認証することができず、クライアントにいくつかの認証されていない情報を返すようにしようとする場合第三の場合は、返されることがあります。"
    },
    {
      "indent": 3,
      "text": "The hash on a response is computed using SHA-1 HMAC as for the request.",
      "ja": "応答に対するハッシュを要求に対するとしてSHA-1 HMACを使用して計算されます。"
    },
    {
      "indent": 3,
      "text": "The data that is hashed is the concatenation of the following things:",
      "ja": "ハッシュされたデータは、以下のものを連結したものです："
    },
    {
      "indent": 3,
      "text": "o 4-byte version ID at the beginning of the packet.",
      "ja": "パケットの先頭のO 4バイトのバージョンID。"
    },
    {
      "indent": 3,
      "text": "o DER representation of the error-code exclusive of the tag and length, if it is present.",
      "ja": "タグと長さのエラーコードの排他的のO DER表現、それが存在する場合。"
    },
    {
      "indent": 3,
      "text": "o OCTET STRING of the certificate, if it is present.",
      "ja": "証明書のOオクテット文字列は、それが存在する場合。"
    },
    {
      "indent": 3,
      "text": "o VisibleString representation of the e-text exclusive of the tag and length, if it is present.",
      "ja": "それが存在する場合にO、タグと長さの電子テキスト排他的な表現をVisibleString。"
    },
    {
      "indent": 3,
      "text": "In other words, the hash is computed on the data in the fields that are present, exclusive of the overall ASN.1 wrapping.",
      "ja": "換言すれば、ハッシュは、全体的なASN.1ラッピングの排他的に存在するフィールドのデータに基づいて計算されます。"
    },
    {
      "indent": 3,
      "text": "The e-text MAY be translated into other character sets for display purposes, but the hash is computed on the e-text in its VisibleString representation. If the e-text contains NUL characters, the client MAY ignore any part of the error message after the first NUL character for display purposes.",
      "ja": "電子テキストは表示目的のために他の文字セットに変換することもできるが、ハッシュは、そのVisibleString表現における電子テキストに基づいて計算されます。電子テキストはNUL文字が含まれている場合、クライアントは表示目的のために最初のヌル文字の後に、エラーメッセージの任意の部分を無視するかもしれません。"
    },
    {
      "indent": 3,
      "text": "As implied by the above table, if the reply does not contain a certificate, it MUST contain an error message and a non-zero error code. Conversely, if a certificate is returned, then the error-code MUST be zero. The server SHOULD use the DEFAULT encoding for a zero error-code value by omitting any explicit error-code from the reply.",
      "ja": "上記の表によって示唆されるように応答が証明書を含まない場合、それはエラーメッセージと非ゼロのエラーコードを含まなければなりません。証明書が返された場合、逆に、エラーコードがゼロでなければなりません。サーバは、応答からの明示的なエラーコードを省略することにより、ゼロのエラーコード値のデフォルトエンコーディングを使用すべきです。"
    },
    {
      "indent": 3,
      "text": "The defined values for error-code are as follows:",
      "ja": "以下のようにエラーコードのために定義された値は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "+------------+-----------------------------+------------------------+\n| error-code | Condition                   | Example                |\n+------------+-----------------------------+------------------------+\n| 1          | Permanent problem with      | Incompatible version   |\n|            | client request              |                        |\n| 2          | Solvable problem with       | Expired Kerberos       |\n|            | client request              | credentials            |\n| 3          | Temporary problem with      | Packet loss            |\n|            | client request              |                        |\n| 4          | Permanent problem with the  | Internal               |\n|            | server                      | misconfiguration       |\n| 5          | Temporary problem with the  | Server overloaded      |\n|            | server                      |                        |\n+------------+-----------------------------+------------------------+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "If a client error is returned, the client SHOULD NOT retry the request unless some remedial action is first taken, although if error-code 3 is returned, the client MAY retry with other servers before giving up.",
      "ja": "クライアントのエラーが返された場合、いくつかの是正措置が最初に取られない限り、エラーコード3が返された場合、クライアントは、あきらめる前に、他のサーバーに再試行するかもしれないが、クライアントは、要求を再試行すべきではありません。"
    },
    {
      "indent": 3,
      "text": "If a server error is returned, it is RECOMMENDED that the client retry the request with a different server if one is known.",
      "ja": "サーバーエラーが返された場合、1が知られている場合、クライアントは別のサーバーで要求を再試行することが推奨されます。"
    },
    {
      "indent": 3,
      "text": "Since all KCAs serving a Kerberos realm are intended to be equivalent, in accordance with Section 4.1.2.2 of [RFC5280], the certificates returned from different KCAs serving the same Kerberos realm MUST NOT contain duplicate serial numbers.",
      "ja": "Kerberos領域にサービスを提供するすべてのKCASは同等であることが意図されているので、[RFC5280]のセクション4.1.2.2に応じて、証明書が同じKerberos領域が重複シリアル番号を含んではならないサービング異なるKCASから返されます。"
    },
    {
      "indent": 3,
      "text": "This protocol and document do not address certificate verification or path construction. There are no provisions for returning any additional certificates that might be needed. Any application using a returned certificate must be configured independently to address these issues. An incompatible upgrade to this protocol will provide options to address this issue.",
      "ja": "このプロトコルおよび文書は、証明書の検証やパスの構築に取り組んでいません。必要になる可能性があるいかなる追加の証明書を返送についての規定はありません。返された証明書を使用して任意のアプリケーションは、これらの問題に対処するために個別に設定する必要があります。このプロトコルに互換性のないアップグレードは、この問題に対処するためのオプションを提供します。"
    },
    {
      "indent": 3,
      "text": "The returned certificate MUST identify the Kerberos client principal from the AP-REQ in the original KX509Request in the subject of the certificate or in a subjectAltName extension. The identification MUST be unique within the organization's deployed infrastructure. It is RECOMMENDED that a subjectAltName extension be included of type id-pkinit-san as described in [RFC4556], Section 3.2.2. Note that the id-pkinit-san is simply a standard representation of a Kerberos principal and has no other implications with respect to PKINIT.",
      "ja": "返された証明書は、証明書のサブジェクトまたはsubjectAltName拡張の元KX509RequestにおけるAP-REQからKerberosクライアントプリンシパルを識別しなければなりません。識別は、組織の展開インフラストラクチャ内で一意でなければなりません。 [RFC4556]に記載されているようにsubjectAltName拡張は、タイプID-PKINITさんのセクション3.2.2に含まれることが推奨されます。 ID-PKINITさん単にKerberosプリンシパルの標準的な表現であり、PKINITに対する他の意味を持っていないことに留意されたいです。"
    },
    {
      "indent": 3,
      "text": "Other extensions MAY be added according to local policy.",
      "ja": "その他の拡張機能は、ローカルポリシーに従って追加される場合があります。"
    },
    {
      "indent": 3,
      "text": "Appendix C shows an example reply packet.",
      "ja": "付録Cは、例えば、応答パケットを示します。"
    },
    {
      "indent": 0,
      "text": "3. Protocol Operation",
      "section_title": true,
      "ja": "3.プロトコル動作"
    },
    {
      "indent": 3,
      "text": "Absent errors, the protocol consists of a single request, sent via UDP, and a single reply, also sent via UDP.",
      "ja": "存在しないエラーは、プロトコルは、UDPを介して送信されるUDPを介して送信された単一の要求、および単一応答からなります。"
    },
    {
      "indent": 3,
      "text": "There is no special provision for requests or replies that exceed the allowable size of a UDP packet. Also, some implementations have imposed hard size limits that are smaller than a typical UDP MTU and will limit the use of extensions and the supportable key size. Even without hard limits, if the request or reply exceeds the MTU size of a UDP packet for the infrastructure in use, then the reliability of the exchange will decrease significantly.",
      "ja": "UDPパケットの許容サイズを超えた要求や回答のために特別な規定はありません。また、いくつかの実装は、一般的なUDP MTUよりも小さく、拡張機能やサポート可能なキーサイズの使用を制限するハードサイズ制限を課しています。要求又は応答が、使用中のインフラストラクチャのUDPパケットのMTUサイズを超えた場合であってもハード制限することなく、次に交換の信頼性が著しく低下します。"
    },
    {
      "indent": 3,
      "text": "For \"normal\" Kerberos AP-REQ structures, and \"normal\" X.509 certificates, this is unlikely unless the Kerberos service ticket contains large amounts of authorization data. For this reason, it is RECOMMENDED that service tickets for the KCA be issued without authorization data. If the KCA performs authorization, it should do so by other means.",
      "ja": "Kerberosサービスチケットが承認大量のデータが含まれていない限り、「ノーマル」のKerberos AP-REQ構造、および「通常の」X.509証明書の場合、これはほとんどありません。このため、KCAのためのサービスチケットが承認データなしで発行することが推奨されます。 KCAが認証を実行する場合、それは他の手段でそれを行う必要があります。"
    },
    {
      "indent": 3,
      "text": "Before constructing the request, the client must know the canonical name(s) and port(s) of the server(s) to contact. It MAY determine them by looking up the service's SRV record as described in [RFC2782]. The entry to be used is _kca._udp._realm_, where _realm_ is the Kerberos realm, used as part of the DNS name.",
      "ja": "リクエストを作成する前に、クライアントは連絡するサーバー（複数可）の正規名（複数可）とポート（複数可）を知っている必要があります。これは、[RFC2782]で説明したように、サービスのSRVレコードを検索することによって、それらを決定することができます。使用されるエントリは_realm_は、DNS名の一部として使用するKerberos領域である_kca._udp._realm_あります。"
    },
    {
      "indent": 3,
      "text": "The client has to acquire a service ticket in order to construct the AP-REQ for the service. Conventionally, the Kerberos service principal name to use for this service has a first component of \"kca_service\". Absent local configuration or other external knowledge of the correct principal to use, the second and final component is conventionally the canonical name of the KCA server being contacted, and the realm of the principal is determined following normal Kerberos domain-to-realm mapping conventions, as discussed in [RFC4120], Section 1.3.",
      "ja": "クライアントは、サービスのためのAP-REQを構築するためにサービスチケットを取得する必要があります。従来、このサービスのために使用するKerberosサービスプリンシパル名は「kca_service」の最初の成分を有します。ローカル構成または使用する正しい主の他の外部知識存在しない、第二及び最後の構成要素は、従来接触さKCAサーバーの正規名であり、そして主の領域は、通常Kerberosドメイン対レルムマッピング規則に従って決定され、 [RFC4120]で説明したように、セクション1.3。"
    },
    {
      "indent": 3,
      "text": "When the server receives a request, it MUST verify the following properties of the request before issuing a certificate:",
      "ja": "サーバがリクエストを受信すると、証明書を発行する前に、要求の次のプロパティを確認する必要があります。"
    },
    {
      "indent": 3,
      "text": "o The AP-REQ can be decoded and is not expired.",
      "ja": "O AP-REQをデコードすることができ、有効期限が切れていません。"
    },
    {
      "indent": 3,
      "text": "o If the request uses cross-realm authentication, then it satisfies the requirements of local policy and [RFC4120], Sections 1.2 and 2.7.",
      "ja": "要求は、クロスレルム認証を使用する場合、O、それはローカルポリシーと[RFC4120]セクション1.2および2.7の要件を満足します。"
    },
    {
      "indent": 3,
      "text": "o The request's hash is valid.",
      "ja": "O要求のハッシュが有効です。"
    },
    {
      "indent": 3,
      "text": "The server SHOULD make other sanity checks, such as a minimum public key length, to the extent feasible.",
      "ja": "サーバは、実行可能な程度に、そのような最小の公開鍵の長さのような他の健全性チェックを行う必要があります。"
    },
    {
      "indent": 3,
      "text": "The server MAY decline to respond to an erroneous request. If it does not receive a response, a client MAY retry its request, but the client SHOULD wait at least one second before doing so.",
      "ja": "サーバーは、誤った要求に応答して低下する可能性があります。それが応答を受信しない場合、クライアントはその要求を再試行するかもしれが、クライアントはそうする前に少なくとも1秒を待つ必要があります。"
    },
    {
      "indent": 3,
      "text": "The client MUST verify any hash in the reply and MUST NOT use any certificate in a reply whose hash does not verify. The client MAY display the e-text if the hash is absent or does not verify but SHOULD indicate the message is not authenticated.",
      "ja": "クライアントは応答で任意のハッシュを確かめなければなりませんし、そのハッシュを検証しません応答ですべての証明書を使用してはなりません。ハッシュが存在しないか確認しませんが、メッセージが認証されていないことを示す必要がある場合、クライアントは、電子テキストを表示することがあります。"
    },
    {
      "indent": 0,
      "text": "4. Acknowledgements",
      "section_title": true,
      "ja": "4.謝辞"
    },
    {
      "indent": 3,
      "text": "The original version of kx509 was implemented using Kerberos 4 at the University of Michigan and was nicely documented in [KX509]. Many thanks to them for their original work, as well as the subsequent updates.",
      "ja": "kx509の元のバージョンは、ミシガン大学ケルベロス4を使用して実装し、うまく[KX509]に記載しました。元の仕事のためにそれらに感謝だけでなく、その後の更新。"
    },
    {
      "indent": 3,
      "text": "While developing this document, important corrections and comments were provided by Jeffrey Altman and Love Hornquist Astrand. The following people also provided many helpful comments and corrections: Doug Engert, Jeffrey Hutzelman, Sam Hartman, Timothy J. Miller, Chaskiel Grundman, and Jim Schaad. Alan Sill provided the references to the International Grid Trust Federation and its acceptable credential services. Example network traffic was provided by Doug Engert, Marcus Watts, Matt Crawford, and Chaskiel Grundman from their deployments and was extremely useful for verifying the reality of this specification.",
      "ja": "この文書を開発している間、重要な修正とコメントはジェフリー・アルトマンと愛Hornquist Astrandによって提供されました。ダグEngert、ジェフリーHutzelman、サム・ハートマン、ティモシー・J.・ミラー、Chaskiel Grundman、とジムSchaad：以下の人々はまた、多くの有益なコメントと訂正を提供します。アラン・シルは、国際グリッドトラスト連盟とその許容可能な資格サービスへの参照を提供します。例のネットワークトラフィックはその展開からダグEngert、マーカス・ワッツ、マット・クロフォード、およびChaskiel Grundmanによって提供され、この仕様の現実を検証するために非常に有用でした。"
    },
    {
      "indent": 0,
      "text": "5. IANA Considerations",
      "section_title": true,
      "ja": "5. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "This service is conventionally run on UDP port 9878. IANA has registered that port in the Service Name and Transport Port Number Registry as follows:",
      "ja": "このサービスは、従来、IANAはサービス名とトランスポートのポート番号レジストリのポートは次のようにすることを登録した9878. UDPポート上で実行されます。"
    },
    {
      "indent": 5,
      "text": "Service Name: kca-service Transport Protocol: UDP Assignee: IESG <iesg@ietf.org> Contact: IETF Chair <chair@ietf.org> Description: The kx509 Kerberized Certificate Issuance Protocol in Use in 2012 Reference: RFC 6717 Port Number: 9878 Assignment Notes: Historically, this service has been referred to as \"kca_service\", but this service name does not meet the registry requirements.",
      "ja": "サービス名：KCA-サービストランスポートプロトコル：UDP譲受人：IESG <iesg@ietf.org>連絡先：IETF議長<chair@ietf.org>説明：2012リファレンスの使用でkx509 Kerberos対応の証明書発行プロトコル：RFC 6717のポート番号： 9878割り当て注：歴史的に、このサービスは「kca_service」と呼ばれていますが、このサービス名は、レジストリの要件を満たしていません。"
    },
    {
      "indent": 3,
      "text": "The Generic Security Service Application Program Interface (GSS-API) / Kerberos / Simple Authentication and Security Layer (SASL) service name currently in use for this protocol is \"kca_service\". This does not meet the naming requirements for IANA's GSS-API/Kerberos/SASL service name registry, so no registration has been requested. The conflict between the conventional service name and the registry rules is expected to be addressed in a future version of this protocol. Appropriate registrations will be requested at that time.",
      "ja": "一般的なセキュリティサービス現在、このプロトコルの使用中のアプリケーション・プログラム・インターフェース（GSS-API）/ケルベロス/簡易認証セキュリティー層（SASL）サービス名は「kca_service」です。これは、IANAのGSS-API /ケルベロス/ SASLサービス名レジストリの命名要件を満たしていないので、何も登録が要求されていません。従来のサービス名とレジストリのルール間の競合は、このプロトコルの将来のバージョンで対処することが期待されています。適切な登録は、その時点で要求されます。"
    },
    {
      "indent": 0,
      "text": "6. Security Considerations",
      "section_title": true,
      "ja": "6.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "The only encrypted information in the protocol is that used by Kerberos itself. The considerations for any Kerberized service apply here.",
      "ja": "プロトコルにのみ暗号化された情報は、Kerberos単独で使用することです。すべてのKerberos対応サービスの考慮事項が適用されます。"
    },
    {
      "indent": 3,
      "text": "The public key in the request is sent in the clear and without any guarantees that the requester actually possesses the corresponding private key. Therefore, the only appropriate uses of the returned certificate are those where the identity of the requester is unimportant or the subsequent use independently guarantees that the user possesses the private key. This issue is expected to be addressed in a future version of this protocol.",
      "ja": "リクエスト内の公開鍵は、依頼者が実際に対応する秘密鍵を所有していることを明らかにし、いかなる保証なしで送信されます。そのため、返された証明書の唯一の適切な使用は、要求者の身元が重要でないか、その後の使用は、独立して、ユーザーが秘密鍵を所有していることを保証あるものです。この問題は、このプロトコルの将来のバージョンで対処することが期待されています。"
    },
    {
      "indent": 3,
      "text": "For example, if the kx509-issued certificate is used for a digital signature in a way that does not independently demonstrate proof-of-possession of the private key, then an eavesdropper could request their own valid certificate via kx509 and claim to have originated material signed by the legitimate, original requester. [RFC4211], Appendix C, contains a more detailed discussion of why proof-of-possession is important.",
      "ja": "kx509発行の証明書は、独立して実証の所持秘密鍵のを示さない方法でデジタル署名に使用された場合、その後、盗聴者は、kx509を経由して、独自の有効な証明書を要求し、材料を発していると主張する可能性が合法的な、オリジナルの要求者が署名しました。 [RFC4211]は、付録Cは、実証の所持が重要である理由のより詳細な議論が含まれています。"
    },
    {
      "indent": 3,
      "text": "An example that should be safe is initial client authentication with Transport Layer Security (TLS) [RFC5246] connections. If a client certificate is used, then a Certificate Verify message (Section 7.4.8 of [RFC5246]) is added to the handshake exchange. It includes a signature of the handshake messages to that point. Those messages depend on data known only to the client and server ends of the specific connection, so computing the signature proves possession of the private key. This application was the original intended use case for kx509.",
      "ja": "安全なはずの例では、トランスポート層セキュリティ（TLS）[RFC5246]接続で最初のクライアント認証です。クライアント証明書が使用される場合、証明書は、メッセージを確認し（[RFC5246]のセクション7.4.8）がハンドシェイク交換に追加されます。これは、その時点までのハンドシェイクメッセージの署名を含んでいます。これらのメッセージは、特定の接続のクライアントとサーバの終了に知られているデータに依存するので、署名を計算することは秘密鍵の所有を証明しています。このアプリケーションは、kx509の元の意図された使用のケースでした。"
    },
    {
      "indent": 3,
      "text": "Some information, such as the public key and certificate, is transmitted in the clear but (as the name implies) is generally intended to be publicly available. However, its visibility could still raise privacy concerns. The hash is used to protect the integrity of this information.",
      "ja": "公開鍵や証明書などの一部の情報は、平文で送信されますが（名前が示すように）一般的に公に利用可能であることを意図しています。しかし、その可視性は、まだプライバシーの懸念を上げることができます。ハッシュはこの情報の完全性を保護するために使用されます。"
    },
    {
      "indent": 3,
      "text": "The policies for issuing Kerberos tickets and X.509 certificates are usually expressed very differently. An implementation of this protocol should not provide a mechanism for bypassing ticket or certificate policies.",
      "ja": "KerberosチケットとX.509証明書を発行するためのポリシーは、通常は非常に異なって発現されています。このプロトコルの実装では、チケットや証明書ポリシーをバイパスするためのメカニズムを提供するべきではありません。"
    },
    {
      "indent": 3,
      "text": "In particular, if the issued certificate can be used with PKINIT, this authentication loop SHOULD NOT bypass policy limits for either X.509 certificates or Kerberos tickets.",
      "ja": "発行された証明書はPKINITで使用することができるならば特に、この認証ループは、X.509証明書またはKerberosチケットのいずれかのポリシーの制限をバイパスすべきではありません。"
    },
    {
      "indent": 3,
      "text": "X.509 certificates are usually issued with considerably longer validity times than Kerberos tickets. Care should be taken that the issued certificate is not valid for longer than the intended policy should allow. Note that Section 3.2.3 of [RFC4556] REQUIRES that the lifetime of an issued ticket not exceed the lifetime of the predecessor certificate. By analogy, it is RECOMMENDED that the lifetime of an issued certificate not exceed the lifetime of the predecessor Kerberos ticket unless the implications with respect to local policy and supporting infrastructure are clearly understood and allow it.",
      "ja": "X.509証明書は通常、Kerberosチケットよりもかなり長い有効時間で発行されています。ケアは、発行された証明書が意図したポリシーが許可する必要がありますよりも長いために有効ではないことに注意しなければなりません。 [RFC4556]のセクション3.2.3が発行されたチケットの有効期間は、前任者の証明書の有効期間を超えないことが必要であることに注意してください。類推すると、ローカルポリシーおよびサポートするインフラストラクチャに関して意義が明確に理解し、それを許可している場合を除き。発行された証明書の有効期間は、前身Kerberosチケットの有効期間を超えないことが推奨されます"
    },
    {
      "indent": 0,
      "text": "7. References",
      "section_title": true,
      "ja": "7.参考"
    },
    {
      "indent": 0,
      "text": "7.1. Normative References",
      "section_title": true,
      "ja": "7.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC3447] Jonsson, J. and B. Kaliski, \"Public-Key Cryptography Standards (PKCS) #1: RSA Cryptography Specifications Version 2.1\", RFC 3447, February 2003.",
      "ja": "[RFC3447]ジョンソン、J.とB. Kaliski、 \"公開鍵暗号規格（PKCS）＃1：RSA暗号仕様バージョン2.1\"、RFC 3447、2003年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC4120] Neuman, C., Yu, T., Hartman, S., and K. Raeburn, \"The Kerberos Network Authentication Service (V5)\", RFC 4120, July 2005.",
      "ja": "[RFC4120]ノイマン、C.、ゆう、T.、ハルトマン、S.、およびK.レイバーン、 \"ケルベロスネットワーク認証サービス（V5）\"、RFC 4120、2005年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC5280] Cooper, D., Santesson, S., Farrell, S., Boeyen, S., Housley, R., and W. Polk, \"Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile\", RFC 5280, May 2008.",
      "ja": "[RFC5280]クーパー、D.、Santesson、S.、ファレル、S.、Boeyen、S.、Housley氏、R.、およびW.ポーク、「インターネットX.509公開鍵暗号基盤証明書と証明書失効リスト（CRL）のプロフィール」、RFC 5280、2008年5月。"
    },
    {
      "indent": 0,
      "text": "7.2. Informative References",
      "section_title": true,
      "ja": "7.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[GRID-prof] \"Grid Certificate Profile\", March 2008, <http://www.ogf.org/documents/GFD.125.pdf>.",
      "ja": "[GRID-教授] \"グリッド証明書プロファイル\"、2008年3月、<http://www.ogf.org/documents/GFD.125.pdf>。"
    },
    {
      "indent": 3,
      "text": "[IGTF] \"The International Grid Trust Federation\", <http://www.igtf.net/>.",
      "ja": "[IGTF] \"国際グリッドトラスト連盟\"、<http://www.igtf.net/>。"
    },
    {
      "indent": 3,
      "text": "[KX509] Doster, W., Watts, M., and D. Hyde, \"The KX.509 Protocol\", September 2001, <http://www.citi.umich.edu/ techreports/reports/citi-tr-01-2.pdf>.",
      "ja": "[KX509] Doster、W.、ワッツ、M.、およびD.ハイド、 \"KX.509議定書\"、2001年9月、<http://www.citi.umich.edu/ techreports /レポート/シティ-TR- 01-2.pdf>。"
    },
    {
      "indent": 3,
      "text": "[RFC2782] Gulbrandsen, A., Vixie, P., and L. Esibov, \"A DNS RR for specifying the location of services (DNS SRV)\", RFC 2782, February 2000.",
      "ja": "[RFC2782] Gulbrandsenの、A.、いるVixie、P.、およびL. Esibov、 \"サービスの場所を特定するためのDNS RR（DNSのSRV）\"、RFC 2782、2000年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC4211] Schaad, J., \"Internet X.509 Public Key Infrastructure Certificate Request Message Format (CRMF)\", RFC 4211, September 2005.",
      "ja": "[RFC4211] Schaad、J.、 \"インターネットX.509公開鍵暗号基盤証明書要求メッセージ・フォーマット（CRMF）\"、RFC 4211、2005年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC4556] Zhu, L. and B. Tung, \"Public Key Cryptography for Initial Authentication in Kerberos (PKINIT)\", RFC 4556, June 2006.",
      "ja": "\"ケルベロス（PKINIT）における初期認証のための公開鍵暗号\" [RFC4556]朱、L.とB.桐、RFC 4556、2006年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC5246] Dierks, T. and E. Rescorla, \"The Transport Layer Security (TLS) Protocol Version 1.2\", RFC 5246, August 2008.",
      "ja": "[RFC5246]ダークス、T.およびE.レスコラ、 \"トランスポート層セキュリティ（TLS）プロトコルバージョン1.2\"、RFC 5246、2008年8月。"
    },
    {
      "indent": 3,
      "text": "[SLCS] \"Short Lived Credential Services\", February 2009, <http://tagpma.org/authn_profiles/slcs>.",
      "ja": "[SLCS] \"短命資格サービス\"、2009年2月、<http://tagpma.org/authn_profiles/slcs>。"
    },
    {
      "indent": 3,
      "text": "[X.509] International Telecommunications Union, \"Recommendation X.509: The Directory: Public-key and attribute certificate framework\", November 2008.",
      "ja": "[X.509]国際電気通信連合、「勧告X.509：ディレクトリ：公開鍵と属性証明書の枠組み」、2008年11月。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Certificate Caching and Deployment Considerations",
      "ja": "付録A.証明書のキャッシングと展開に関する考慮事項"
    },
    {
      "indent": 3,
      "text": "As noted in the Security Considerations section, the functional lifetime of the acquired X.509 certificate should usually match the lifetime of its predecessor Kerberos ticket. Therefore, it is likely that X.509 certificates issued with this protocol should be deleted when the supporting Kerberos tickets are deleted. That makes the Kerberos ticket cache a reasonable location to store the certificate (and its private key).",
      "ja": "セキュリティの考慮事項のセクションで述べたように、得られたX.509証明書の機能的寿命は通常、その前身Kerberosチケットの有効期間と一致する必要があります。そのため、支持Kerberosチケットが削除されると、このプロトコルで発行されるX.509証明書を削除すべきと思われます。これは、Kerberosチケットキャッシュに証明書（およびその秘密鍵）を格納するための合理的な場所になります。"
    },
    {
      "indent": 3,
      "text": "On the other hand, applications, such as web browsers, probably expect certificates in different stores.",
      "ja": "一方、Webブラウザなどのアプリケーションは、おそらく異なるストア内の証明書を期待しています。"
    },
    {
      "indent": 3,
      "text": "A widely used solution to this dichotomy is to implement a PKCS11 library that supports the kx509-acquired credentials. The credentials remain stored in the Kerberos credentials cache, but full PKI functionality is still available via a standard interface for PKI credentials.",
      "ja": "この二分法に広く使われているソリューションは、kx509、取得した資格情報をサポートしているPKCS11ライブラリを実装することです。資格情報は、Kerberos証明書キャッシュに格納されたまま、しかし、完全なPKI機能は、PKI資格のための標準インタフェースを介して、まだ入手可能です。"
    },
    {
      "indent": 0,
      "text": "Appendix B. Historic Extensions",
      "ja": "付録B.歴史的な拡張機能"
    },
    {
      "indent": 3,
      "text": "This appendix documents extensions to the kx509 protocol that are either no longer in use or are expected to be dropped.",
      "ja": "使用しなくなっているか、またはドロップされると予想されているkx509プロトコルにこの付録文書の拡張子。"
    },
    {
      "indent": 3,
      "text": "A subjectAltName othername extension of type kcaAuthRealm (OID value 1.3.6.1.4.1.250.42.1) is frequently used to include the client's realm as an ASN.1 octet string.",
      "ja": "タイプkcaAuthRealm（OID値1.3.6.1.4.1.250.42.1）のothernameのsubjectAltName拡張はしばしばASN.1オクテットストリングとしてクライアントの領域を含むように使用されます。"
    },
    {
      "indent": 3,
      "text": "The Microsoft-defined userPrincipalName has frequently been used for the same purpose as the id-pkinit-san.",
      "ja": "マイクロソフト定義のuserPrincipalNameのは、頻繁にID-PKINITさんと同じ目的のために使用されてきました。"
    },
    {
      "indent": 3,
      "text": "The historic implementations of this protocol included provisions for DSA keys in place of RSA. DSA does not appear to be in use. A future version of this protocol will use a standard certificate request structure that will provide algorithm agility.",
      "ja": "このプロトコルの歴史的な実装は、RSAの代わりにDSAキーの条項が含まれています。 DSAは使用中ではありません。このプロトコルの将来のバージョンでは、アルゴリズムの俊敏性を提供します標準の証明書要求の構造を使用します。"
    },
    {
      "indent": 3,
      "text": "The historic implementations of this protocol allowed an optional client-version field (at the end of the request) of type VisibleString. If present, the KCA copied it into the issued certificate as an extension with the OID 1.3.6.1.4.1.250.42.2. This feature does not appear to be in use.",
      "ja": "このプロトコルの歴史的な実装は、型VisibleStringの（リクエストの終了時に）任意のクライアントバージョンフィールドを可能にしました。存在する場合、KCAはOID 1.3.6.1.4.1.250.42.2との延長として発行された証明書にそれをコピーします。この機能は、使用中ではありません。"
    },
    {
      "indent": 0,
      "text": "Appendix C. Example Exchange",
      "ja": "付録C.例所"
    },
    {
      "indent": 3,
      "text": "The request and reply are from the same exchange. The Ethernet, IP, and UDP headers, and the 4-byte version string at the beginning of the request and reply packets are all omitted. Only the ASN.1- encoded portions are shown.",
      "ja": "要求と応答が同じExchangeからです。イーサネット、IP、およびUDPヘッダ、および要求と応答パケットの先頭の4バイトのバージョン文字列はすべて省略されています。のみASN.1-符号化された部分が示されています。"
    },
    {
      "indent": 4,
      "text": " 0:d=0 hl=4 l= 678 cons: SEQUENCE 4:d=1 hl=4 l= 509 prim: OCTET STRING [HEX DUMP]:6E8201F9308201F5A003... (AP-REQ) 517:d=1 hl=2 l= 20 prim: OCTET STRING [HEX DUMP]:ECFF1C922300D0E9DD02... (pk-hash) 539:d=1 hl=3 l= 140 prim: OCTET STRING [HEX DUMP]:30818902818100B70F46... (pk-key)",
      "ja": "0：D = 0 HL = 4、L = 678の短所：SEQUENCE 4：D = 1つのHL = 4、L = 509プリム：OCTET STRING [HEXダンプ]：6E8201F9308201F5A003 ...（AP-REQ）517：D = 1 HL = 2リットル= 20プリム：OCTET STRING [HEXダンプ]：OCTET STRING [HEXダンプ]：30818902818100B70F46 ...（PK鍵ECFF1C922300D0E9DD02 ...（PK-ハッシュ）539：= 3、L = 140プリムD = 1つのHL ）"
    },
    {
      "indent": 24,
      "text": "Request Packet ASN.1 Decode",
      "ja": "リクエストパケットASN.1デコード"
    },
    {
      "indent": 4,
      "text": " 0:d=0 hl=4 l= 870 cons: SEQUENCE 4:d=1 hl=2 l= 22 cons: cont [ 1 ] 6:d=2 hl=2 l= 20 prim: OCTET STRING [HEX DUMP]:F3A844834C26D843B6FD... (hash) 28:d=1 hl=4 l= 842 cons: cont [ 2 ] 32:d=2 hl=4 l= 838 prim: OCTET STRING [HEX DUMP]:308203423082022AA003... (certificate)",
      "ja": "0：D = 0 HL = 4、L = 870の短所：SEQUENCE 4：OCTET STRING [HEXダンプ] D = 1 HL = 2、L = 22の短所：CONT [1] 6：= 2リットルプリム= 20、D = 2 HL ：F3A844834C26D843B6FD ...（ハッシュ）28：D = 1つのHL = 4、L = 842の短所：CONT [2] 32 D = 2 HL = 4、L = 838プリム：OCTET STRING [HEXダンプ]：308203423082022AA003 ...（証明書）"
    },
    {
      "indent": 25,
      "text": "Reply Packet ASN.1 Decode",
      "ja": "パケットASN.1デコードに返信"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Henry B. Hotz Jet Propulsion Laboratory, California Institute of Technology 4800 Oak Grove Dr. Pasadena, CA 91109 USA",
      "ja": "ヘンリー・B・ホッツジェット推進研究所、カリフォルニア工科大学4800オークグローブ博士はパサデナ、CA 91109 USA"
    },
    {
      "indent": 3,
      "text": "Phone: +01 818 354-4880 EMail: hotz@jpl.nasa.gov",
      "ja": "電話：+01 818 354-4880 Eメール：hotz@jpl.nasa.gov"
    },
    {
      "indent": 3,
      "text": "Russ Allbery Stanford University P.O. Box 20066 Stanford, CA 94309 USA",
      "ja": "ラスAllberyスタンフォード大学の私書箱ボックス20066スタンフォード、CA 94309 USA"
    },
    {
      "indent": 3,
      "text": "EMail: rra@stanford.edu URI: http://www.eyrie.org/~eagle/",
      "ja": "電子メール：rra@stanford.edu URI：http://www.eyrie.org/~eagle/"
    }
  ]
}