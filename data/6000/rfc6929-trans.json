{
  "title": {
    "text": "RFC 6929 - Remote Authentication Dial In User Service (RADIUS) Protocol Extensions",
    "ja": "RFC 6929 - ユーザーサービス（RADIUS）プロトコルの拡張機能でリモート認証ダイヤル"
  },
  "number": 6929,
  "created_at": "2019-11-01 16:43:41.269042+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                          A. DeKok\nRequest for Comments: 6929                                Network RADIUS\nUpdates: 2865, 3575, 6158                                        A. Lior\nCategory: Standards Track                                     April 2013\nISSN: 2070-1721",
      "raw": true
    },
    {
      "indent": 10,
      "text": "Remote Authentication Dial-In User Service (RADIUS)\n                Protocol Extensions",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "The Remote Authentication Dial-In User Service (RADIUS) protocol is nearing exhaustion of its current 8-bit Attribute Type space. In addition, experience shows a growing need for complex grouping, along with attributes that can carry more than 253 octets of data. This document defines changes to RADIUS that address all of the above problems.",
      "ja": "リモート認証ダイヤルインユーザーサービス（RADIUS）プロトコルは、現在の8ビット属性タイプ空間の枯渇に近づいています。また、経験は、以上のデータ253個のオクテットを運ぶことができる属性とともに、複雑なグループ化のニーズの高まりを示しています。この文書では、上記の問題のすべてを解決するRADIUSへの変更を定義します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 5741のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc6929.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc6929で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2013 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2013 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................3\n   1.1. Caveats and Limitations ....................................5\n        1.1.1. Failure to Meet Certain Goals .......................5\n        1.1.2. Implementation Recommendations ......................5\n   1.2. Terminology ................................................6\n   1.3. Requirements Language ......................................7\n2. Extensions to RADIUS ............................................7\n   2.1. Extended Type ..............................................8\n   2.2. Long Extended Type .........................................9\n   2.3. TLV Data Type .............................................12\n        2.3.1. TLV Nesting ........................................14\n   2.4. EVS Data Type .............................................14\n   2.5. Integer64 Data Type .......................................16\n   2.6. Vendor-Id Field ...........................................16\n   2.7. Attribute Naming and Type Identifiers .....................17\n        2.7.1. Attribute and TLV Naming ...........................17\n        2.7.2. Attribute Type Identifiers .........................18\n        2.7.3. TLV Identifiers ....................................18\n        2.7.4. VSA Identifiers ....................................18\n   2.8. Invalid Attributes ........................................19\n3. Attribute Definitions ..........................................21\n   3.1. Extended-Type-1 ...........................................21\n   3.2. Extended-Type-2 ...........................................22\n   3.3. Extended-Type-3 ...........................................23\n   3.4. Extended-Type-4 ...........................................24\n   3.5. Long-Extended-Type-1 ......................................25\n   3.6. Long-Extended-Type-2 ......................................26\n4. Vendor-Specific Attributes .....................................27\n   4.1. Extended-Vendor-Specific-1 ................................28\n   4.2. Extended-Vendor-Specific-2 ................................29\n   4.3. Extended-Vendor-Specific-3 ................................30\n   4.4. Extended-Vendor-Specific-4 ................................31\n   4.5. Extended-Vendor-Specific-5 ................................32\n   4.6. Extended-Vendor-Specific-6 ................................34\n5. Compatibility with Traditional RADIUS ..........................35\n   5.1. Attribute Allocation ......................................35\n   5.2. Proxy Servers .............................................36",
      "raw": true
    },
    {
      "indent": 3,
      "text": "6. Guidelines .....................................................37\n   6.1. Updates to RFC 6158 .......................................37\n   6.2. Guidelines for Simple Data Types ..........................38\n   6.3. Guidelines for Complex Data Types .........................38\n   6.4. Design Guidelines for the New Types .......................39\n   6.5. TLV Guidelines ............................................40\n   6.6. Allocation Request Guidelines .............................40\n   6.7. Allocation Request Guidelines for TLVs ....................41\n   6.8. Implementation Guidelines .................................42\n   6.9. Vendor Guidelines .........................................42\n7. Rationale for This Design ......................................42\n   7.1. Attribute Audit ...........................................43\n8. Diameter Considerations ........................................44\n9. Examples .......................................................44\n   9.1. Extended Type .............................................46\n   9.2. Long Extended Type ........................................47\n10. IANA Considerations ...........................................50\n   10.1. Attribute Allocations ....................................50\n   10.2. RADIUS Attribute Type Tree ...............................50\n   10.3. Allocation Instructions ..................................52\n        10.3.1. Requested Allocation from the Standard Space ......52\n        10.3.2. Requested Allocation from the Short\n                Extended Space ....................................52\n        10.3.3. Requested Allocation from the Long\n                Extended Space ....................................52\n        10.3.4. Allocation Preferences ............................52\n        10.3.5. Extending the Type Space via the TLV Data Type ....53\n        10.3.6. Allocation within a TLV ...........................53\n        10.3.7. Allocation of Other Data Types ....................54\n11. Security Considerations .......................................54\n12. References ....................................................54\n   12.1. Normative References .....................................54\n   12.2. Informative References ...................................55\n13. Acknowledgments ...............................................55\nAppendix A. Extended Attribute Generator Program ..................56",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "Under current allocation pressure, we expect that the RADIUS Attribute Type space will be exhausted by 2014 or 2015. We therefore need a way to extend the type space so that new specifications may continue to be developed. Other issues have also been shown with RADIUS. The attribute grouping method defined in [RFC2868] has been shown to be impractical, and a more powerful mechanism is needed. Multiple Attributes have been defined that transport more than the 253 octets of data originally envisioned with the protocol. Each of these attributes is handled as a \"special case\" inside of RADIUS implementations, instead of as a general method. We therefore also need a standardized method of transporting large quantities of data. Finally, some vendors are close to allocating all of the Attributes within their Vendor-Specific Attribute space. It would be useful to leverage changes to the base protocol for extending the Vendor-Specific Attribute space.",
      "ja": "現在の割り当ての圧力下で、我々は新しい仕様を開発し続けることができるように、我々はそのため型スペースを拡張する方法を必要とするRADIUS属性タイプスペースは2014年または2015年までに排出されることを期待しています。その他の問題は、RADIUSで示されています。 [RFC2868]で定義された属性グループ化方法は非実用的であることが示されており、そしてより強力な機構が必要です。複数の属性は、もともとプロトコルで想定されるデータの253オクテットよりもそのトランスポートを定義されています。これらの属性のそれぞれは、RADIUS実装の内部、代わりに一般的な方法として、「特殊なケース」として扱われます。したがって、我々はまた、大量のデータを輸送する標準化された方法が必要になります。最後に、いくつかのベンダーは、ベンダー固有の属性空間内の属性のすべてを割り当てるに近いです。ベンダー固有の属性空間を拡張するための基本プロトコルへの変更を活用するために有用であろう。"
    },
    {
      "indent": 3,
      "text": "We satisfy all of these requirements through the following changes given in this document:",
      "ja": "私たちは、この文書で与えられた次の変更により、これらの要件のすべてを満たします。"
    },
    {
      "indent": 3,
      "text": "* Defining an \"Extended Type\" format, which adds 8 bits of \"Extended Type\" to the RADIUS Attribute Type space, by using one octet of the \"Value\" field. This method gives us a general way of extending the Attribute Type space (Section 2.1).",
      "ja": "*「値」フィールドの1つのオクテットを使用して、RADIUS属性タイプ空間に「拡張型」の8ビットを付加し、「拡張型」の形式を定義します。この方法では、私たちに属性タイプ空間（2.1節）を拡張する一般的な方法を提供します。"
    },
    {
      "indent": 3,
      "text": "* Allocating 4 attributes as using the format of \"Extended Type\". This allocation extends the RADIUS Attribute Type space by approximately 1000 values (Sections 3.1, 3.2, 3.3, and 3.4).",
      "ja": "*「拡張型」の形式を使用して4つの属性を割り当てます。この割り当ては、約1000個の値（セクション3.1、3.2、3.3、3.4）によってRADIUS属性タイプ空間を拡張します。"
    },
    {
      "indent": 3,
      "text": "* Defining a \"Long Extended Type\" format, which inserts an additional octet between the \"Extended Type\" octet and the \"Value\" field. This method gives us a general way of adding more functionality to the protocol (Section 2.2).",
      "ja": "*「拡張型」オクテットと「値」フィールドの間に追加のオクテットを挿入する「ロング拡張型」のフォーマットを、定義します。この方法では、私たちのプロトコル（2.2節）に多くの機能を追加する一般的な方法を提供します。"
    },
    {
      "indent": 3,
      "text": "* Defining a method that uses the additional octet in the \"Long Extended Type\" to indicate data fragmentation across multiple Attributes. This method provides a standard way for an Attribute to carry more than 253 octets of data (Section 2.2).",
      "ja": "*複数の属性間でのデータの断片化を示すために、「ロング拡張型」に追加オクテットを使用する方法を定義します。この方法では、以上のデータ253個のオクテット（2.2節）を運ぶための属性のための標準的な方法を提供します。"
    },
    {
      "indent": 3,
      "text": "* Allocating 2 attributes as using the format \"Long Extended Type\". This allocation extends the RADIUS Attribute Type space by an additional 500 values (Sections 3.5 and 3.6).",
      "ja": "*フォーマット「ロング拡張型」を使用したとして、2つの属性を割り当てます。この割り当ては、追加の500個の値（セクション3.5および3.6）によってRADIUS属性タイプ空間を拡張します。"
    },
    {
      "indent": 3,
      "text": "* Defining a new \"Type-Length-Value\" (TLV) data type. This data type allows an attribute to carry TLVs as \"sub-Attributes\", which can in turn encapsulate other TLVs as \"sub-sub-Attributes\". This change creates a standard way to group a set of Attributes (Section 2.3).",
      "ja": "*新しい \"なType-Length-バリュー\"（TLV）のデータ型を定義します。このデータ型は、属性が順番に「サブサブ属性」として、他のTLVをカプセル化することができ、「サブ属性」、とTLVを運ぶことができます。この変更は、グループ属性のセット（2.3節）への標準的な方法を作成します。"
    },
    {
      "indent": 3,
      "text": "* Defining a new \"Extended-Vendor-Specific\" (EVS) data type. This data type allows an attribute to carry Vendor-Specific Attributes (VSAs) inside of the new Attribute formats (Section 2.4).",
      "ja": "*新しい「拡張-ベンダー固有」（EVS）のデータ型を定義します。このデータ型は、属性は新しい属性フォーマット（2.4節）の内側にベンダー固有の属性（VSAを）実行することができます。"
    },
    {
      "indent": 3,
      "text": "* Defining a new \"integer64\" data type. This data type allows counters that track more than 2^32 octets of data (Section 2.5).",
      "ja": "*新しい「integer64」データ型を定義します。このデータタイプは、データの以上2 ^ 32オクテット（セクション2.5）を追跡するカウンタを可能にします。"
    },
    {
      "indent": 3,
      "text": "* Allocating 6 attributes using the new EVS data type. This allocation extends the Vendor-Specific Attribute Type space by over 1500 values (Sections 4.1 through 4.6).",
      "ja": "*新しいEVSデータ型を使用して6つの属性を割り当てます。この割り当ては、1500以上の値（セクション4.6を介して4.1）によってベンダー固有属性タイプのスペースを拡張します。"
    },
    {
      "indent": 3,
      "text": "* Defining the \"Vendor-Id\" for Vendor-Specific Attributes to encompass the entire 4 octets of the Vendor field. [RFC2865] Section 5.26 defined it to be 3 octets, with the fourth octet being zero (Section 2.6).",
      "ja": "*ベンダーフィールドの全体の4つのオクテットを包含するベンダー固有の属性は、「ベンダーID」を定義します。 [RFC2865]セクション5.26は、第四オクテットがゼロ（セクション2.6）であると、3つのオクテットであることを定義しました。"
    },
    {
      "indent": 3,
      "text": "* Describing compatibility with existing RADIUS systems (Section 5).",
      "ja": "*既存のRADIUSシステム（第5節）との互換性を記述する。"
    },
    {
      "indent": 3,
      "text": "* Defining guidelines for the use of these changes for IANA, implementations of this specification, and for future RADIUS specifications (Section 6).",
      "ja": "* IANAのため、これらの変更を使用するためのガイドラインを定義し、この仕様の実装、および将来のRADIUSの仕様について（第6節）。"
    },
    {
      "indent": 3,
      "text": "As with any protocol change, the changes defined here are the result of a series of compromises. We have tried to find a balance between flexibility, space in the RADIUS message, compatibility with existing deployments, and difficulty of implementation.",
      "ja": "任意のプロトコルの変更と同じように、ここで定義された変更は、妥協のシリーズの結果です。私たちは、柔軟性、RADIUSメッセージ内のスペース、既存の展開との互換性、および実装の難易度のバランスを見つけることを試みてきました。"
    },
    {
      "indent": 0,
      "text": "1.1. Caveats and Limitations",
      "section_title": true,
      "ja": "1.1。注意事項と制限事項"
    },
    {
      "indent": 3,
      "text": "This section describes some caveats and limitations of the proposal.",
      "ja": "このセクションでは、提案のいくつかの注意事項と制限事項について説明します。"
    },
    {
      "indent": 0,
      "text": "1.1.1. Failure to Meet Certain Goals",
      "section_title": true,
      "ja": "1.1.1。特定の目標を達成するために失敗"
    },
    {
      "indent": 3,
      "text": "One goal that was not met by the above modifications is to have an incentive for standards to use the new space. That incentive is being provided by the exhaustion of the standard space.",
      "ja": "上記の変更によって満たされていなかった一つの目標は、基準が新たにスペースを使用するためのインセンティブを持つことです。その動機は、標準的な空間の枯渇によって提供されています。"
    },
    {
      "indent": 0,
      "text": "1.1.2. Implementation Recommendations",
      "section_title": true,
      "ja": "1.1.2。実装の推奨事項"
    },
    {
      "indent": 3,
      "text": "It is RECOMMENDED that implementations support this specification. It is RECOMMENDED that new specifications use the formats defined in this specification.",
      "ja": "実装がこの仕様をサポートすることが推奨されます。新しい仕様はこの仕様で定義されたフォーマットを使用することをお勧めします。"
    },
    {
      "indent": 3,
      "text": "The alternative to the above recommendations is a circular argument of not implementing this specification because no other standards reference it, and also not defining new standards referencing this specification because no implementations exist.",
      "ja": "いかなる実装が存在しないため、上記の推奨事項の代わりに、他の基準がそれを参照しないので、この仕様を実装していない円形の引数であり、また本明細書を参照する新しい基準を定義しません。"
    },
    {
      "indent": 3,
      "text": "As noted earlier, the standard space is almost entirely allocated. Ignoring the looming crisis benefits no one.",
      "ja": "先に述べたように、標準のスペースがほぼ完全に割り当てられています。迫り来る危機を無視することは誰に利益をもたらしていません。"
    },
    {
      "indent": 0,
      "text": "1.2. Terminology",
      "section_title": true,
      "ja": "1.2。用語"
    },
    {
      "indent": 3,
      "text": "This document uses the following terms:",
      "ja": "このドキュメントでは、次の用語を使用しています："
    },
    {
      "indent": 3,
      "text": "Silently discard",
      "ja": "サイレント破棄"
    },
    {
      "indent": 6,
      "text": "This means the implementation discards the packet without further processing. The implementation MAY provide the capability of logging the error, including the contents of the silently discarded packet, and SHOULD record the event in a statistics counter.",
      "ja": "これは、実装がさらに処理せずにパケットを破棄する意味します。実装は静かに廃棄されたパケットの内容を含め、エラーをログに記録する能力を提供することができる、および統計カウンタにイベントを記録する必要があります。"
    },
    {
      "indent": 3,
      "text": "Invalid attribute",
      "ja": "無効な属性"
    },
    {
      "indent": 6,
      "text": "This means that the Length field of an Attribute is valid (as per [RFC2865], Section 5, top of page 25) but the contents of the Attribute do not follow the correct format, for example, an Attribute of type \"address\" that encapsulates more than four, or less than four, octets of data. See Section 2.8 for a more complete definition.",
      "ja": "これは、属性の長さフィールドは、（[RFC2865]、セクション5、25ページの一番上あたりとして）有効であるが、属性の内容は、例えば、タイプ「住所」の属性を正しい形式に従わないことを意味しています以上4未満、または4、データのオクテットをカプセル化します。より完全な定義については2.8節を参照してください。"
    },
    {
      "indent": 3,
      "text": "Standard space",
      "ja": "スタンダード・スペース"
    },
    {
      "indent": 6,
      "text": "This refers to codes in the RADIUS Attribute Type space that are allocated by IANA and that follow the format defined in Section 5 of [RFC2865].",
      "ja": "これは、IANAによって割り当てられて、その[RFC2865]のセクション5で定義されたフォーマットに従っれるRADIUS属性タイプ空間にコードを指します。"
    },
    {
      "indent": 3,
      "text": "Extended space",
      "ja": "拡張スペース"
    },
    {
      "indent": 6,
      "text": "This refers to codes in the RADIUS Attribute Type space that require the extensions defined in this document and are an extension of the standard space, but that cannot be represented within the standard space.",
      "ja": "これは、この文書で定義された拡張を必要とし、標準的なスペースの拡張であるRADIUS属性タイプ空間のコードを指し、それは標準の空間内で表現することはできません。"
    },
    {
      "indent": 3,
      "text": "Short extended space",
      "ja": "ショート拡張スペース"
    },
    {
      "indent": 6,
      "text": "This refers to codes in the extended space that use the \"Extended Type\" format.",
      "ja": "これは、「拡張型」の形式を使用し、拡張空間でコードを指します。"
    },
    {
      "indent": 3,
      "text": "Long extended space",
      "ja": "ロング拡張スペース"
    },
    {
      "indent": 6,
      "text": "This refers to codes in the extended space that use the \"Long Extended Type\" format.",
      "ja": "これは、「ロング拡張型」の形式を使用し、拡張空間でのコードを参照します。"
    },
    {
      "indent": 3,
      "text": "The following terms are used here with the meanings defined in BCP 26 [RFC5226]: \"namespace\", \"assigned value\", \"registration\", \"Private Use\", \"Reserved\", \"Unassigned\", \"IETF Review\", and \"Standards Action\".",
      "ja": "「「名前空間」、「割り当てられた値」、「登録」、「私用」、「予約済み」、「未割り当て」、「IETFレビュー」、および：次の用語は、BCP 26 [RFC5226]で定義された意味で、ここで使用されています標準アクション」。"
    },
    {
      "indent": 0,
      "text": "1.3. Requirements Language",
      "section_title": true,
      "ja": "1.3。要件言語"
    },
    {
      "indent": 3,
      "text": "In this document, several words are used to signify the requirements of the specification. The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "このドキュメントでは、いくつかの単語は、仕様の要件を意味するために使用されています。この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はあります[RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "2. Extensions to RADIUS",
      "section_title": true,
      "ja": "RADIUS 2.拡張"
    },
    {
      "indent": 3,
      "text": "This section defines two new Attribute formats: \"Extended Type\" and \"Long Extended Type\". It defines a new Type-Length-Value (TLV) data type, an Extended-Vendor-Specific (EVS) data type, and an Integer64 data type. It defines a new method for naming attributes and identifying Attributes using the new Attribute formats. It finally defines the new term \"invalid attribute\" and describes how it affects implementations.",
      "ja": "「拡張型」と「ロング拡張型」：このセクションでは、2つの新しい属性のフォーマットを定義します。これは、新しいタイプレングス値（TLV）データタイプ、拡張、ベンダー固有（EVS）データタイプ、及びInteger64データ型を定義します。これは、属性を命名して、新しい属性の形式を使用して属性を識別するための新しい方法を定義します。それは最終的に新しい用語「無効な属性」を定義し、それが実装にどのように影響するかを説明します。"
    },
    {
      "indent": 3,
      "text": "The new Attribute formats are designed to be compatible with the Attribute format given in [RFC2865] Section 5. The meaning and interpretation of the Type and Length fields are unchanged from that specification. This reuse allows the new formats to be compatible with RADIUS implementations that do not implement this specification. Those implementations can simply ignore the \"Value\" field of an attribute or forward it verbatim.",
      "ja": "新しい属性の形式は[RFC2865]第5節の意味とタイプと長さフィールドの解釈に与えられた属性のフォーマットと互換性があるように設計されている仕様からの変更はありません。この再利用は新しいフォーマットがこの仕様を実装していないRADIUSの実装と互換性ができるようになります。これらの実装は、単に属性の「値」フィールドを無視するか、そのままそれを転送することができます。"
    },
    {
      "indent": 3,
      "text": "The changes to the Attribute format come about by \"stealing\" one or more octets from the \"Value\" field. This change has the effect that the \"Value\" field of [RFC2865] Section 5 contains both the new octets given here and any attribute-specific Value. The result is that \"Value\"s in this specification are limited to less than 253 octets in size. This limitation is overcome through the use of the \"Long Extended Type\" format.",
      "ja": "属性のフォーマットへの変更は、「値」フィールドから1つ以上のオクテットを「盗む」約来ます。この変更は、[RFC2865]のセクション5の「値」フィールドには、ここに与えられた新しいオクテットと任意の属性固有の値の両方が含まれている効果を持っています。結果は、本明細書における「価値」Sサイズが未満253オクテットに制限されていることです。この制限は、「ロング拡張型」の形式を使用して克服されます。"
    },
    {
      "indent": 3,
      "text": "We reiterate that the formats given in this document do not insert new data into an attribute. Instead, we \"steal\" one octet of Value, so that the definition of the Length field remains unchanged. The new Attribute formats are designed to be compatible with the Attribute format given in [RFC2865] Section 5. The meaning and interpretation of the Type and Length fields is unchanged from that specification. This reuse allows the new formats to be compatible with RADIUS implementations that do not implement this specification. Those implementations can simply ignore the \"Value\" field of an attribute or forward it verbatim.",
      "ja": "私たちは、この文書に与えられたフォーマットは、属性に新しいデータを挿入していないことを改めて表明する。 Lengthフィールドの定義は変わらないので、代わりに、我々は、値の1つのオクテットを「盗みます」。新しい属性のフォーマットがタイプと長さフィールドの意味と解釈5.セクション[RFC2865]で与えられた属性のフォーマットと互換性があるように設計されている仕様から変更されていません。この再利用は新しいフォーマットがこの仕様を実装していないRADIUSの実装と互換性ができるようになります。これらの実装は、単に属性の「値」フィールドを無視するか、そのままそれを転送することができます。"
    },
    {
      "indent": 0,
      "text": "2.1. Extended Type",
      "section_title": true,
      "ja": "2.1。拡張型"
    },
    {
      "indent": 3,
      "text": "This section defines a new Attribute format, called \"Extended Type\". A summary of the Attribute format is shown below. The fields are transmitted from left to right.",
      "ja": "このセクションでは、「拡張型」と呼ばれる新しい属性のフォーマットを定義します。属性のフォーマットの概要は以下に示されています。フィールドは左から右に送信されます。"
    },
    {
      "indent": 4,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Type      |    Length     | Extended-Type |  Value ...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Type",
      "ja": "タイプ"
    },
    {
      "indent": 6,
      "text": "This field is identical to the Type field of the Attribute format defined in [RFC2865] Section 5.",
      "ja": "このフィールドは、[RFC2865]セクション5で定義された属性の形式のTypeフィールドと同一です。"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "The Length field is one octet and indicates the length of this Attribute, including the Type, Length, \"Extended-Type\", and \"Value\" fields. Permitted values are between 4 and 255. If a client or server receives an Extended Attribute with a Length of 2 or 3, then that Attribute MUST be considered to be an \"invalid attribute\" and handled as per Section 2.8, below.",
      "ja": "長さフィールドは1つのオクテットで、タイプ、長さ、「拡張型」、および「値」フィールドを含めて、この属性の長さを示します。クライアントまたはサーバが2または3の長さと拡張属性を受信した場合に許可される値は、4〜255の間であり、その属性は「無効な属性」であると考えられ節以下2.8、あたりとして扱われなければなりません。"
    },
    {
      "indent": 3,
      "text": "Extended-Type",
      "ja": "拡張型"
    },
    {
      "indent": 6,
      "text": "The Extended-Type field is one octet. Up-to-date values of this field are specified according to the policies and rules described in Section 10. Unlike the Type field defined in [RFC2865] Section 5, no values are allocated for experimental or implementation-specific use. Values 241-255 are reserved and MUST NOT be used.",
      "ja": "拡張-Typeフィールドは1つのオクテットです。この分野の最新の値は[RFC2865]で定義されたタイプフィールドとは異なり項10に記載のポリシーおよびルールに従って指定された第5、何の値は、実験や実装固有の使用のために割り当てられていません。値241から255は予約されており、使用してはいけません。"
    },
    {
      "indent": 6,
      "text": "The Extended-Type is meaningful only within a context defined by the Type field. That is, this field may be thought of as defining a new type space of the form \"Type.Extended-Type\". See Section 3.5, below, for additional discussion.",
      "ja": "拡張タイプは、タイプフィールドによって定義されたコンテキスト内で有意義です。つまり、このフィールドはフォーム「Type.Extended型」の新しいタイプのスペースを定義するものとして考えることができる、です。追加の議論については、以下のセクション3.5を参照してください。"
    },
    {
      "indent": 6,
      "text": "A RADIUS server MAY ignore Attributes with an unknown \"Type.Extended-Type\".",
      "ja": "RADIUSサーバは不明「Type.Extended型」との属性を無視するかもしれません。"
    },
    {
      "indent": 6,
      "text": "A RADIUS client MAY ignore Attributes with an unknown \"Type.Extended-Type\".",
      "ja": "RADIUSクライアントが不明「Type.Extended型」との属性を無視するかもしれません。"
    },
    {
      "indent": 3,
      "text": "Value",
      "ja": "値"
    },
    {
      "indent": 6,
      "text": "This field is similar to the \"Value\" field of the Attribute format defined in [RFC2865] Section 5. The format of the data MUST be a valid RADIUS data type.",
      "ja": "このフィールドは、[RFC2865]で定義された属性の形式の「値」フィールドに類似している第5データのフォーマットは、有効半径データ型でなければなりません。"
    },
    {
      "indent": 6,
      "text": "The \"Value\" field is one or more octets.",
      "ja": "「値」フィールドには、一個の以上のオクテットです。"
    },
    {
      "indent": 6,
      "text": "Implementations supporting this specification MUST use the identifier of \"Type.Extended-Type\" to determine the interpretation of the \"Value\" field.",
      "ja": "この仕様をサポートする実装は、「値」フィールドの解釈を決定するために、「Type.Extended型」の識別子を使用しなければなりません。"
    },
    {
      "indent": 6,
      "text": "The addition of the Extended-Type field decreases the maximum length for attributes of type \"text\" or \"string\" from 253 to 252 octets. Where an Attribute needs to carry more than 252 octets of data, the \"Long Extended Type\" format MUST be used.",
      "ja": "拡張-Typeフィールドの追加はタイプ「テキスト」または253〜252オクテットから「文字列」の属性の最大長を減少させます。属性は、データの以上252個のオクテットを運ぶために必要がある場合、「ロング拡張型」の形式を使用しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Experience has shown that the \"experimental\" and \"implementation-specific\" attributes defined in [RFC2865] Section 5 have had little practical value. We therefore do not continue that practice here with the Extended-Type field.",
      "ja": "経験が[RFC2865]のセクション5で定義された「実験」と「実装固有の」属性は少し実用的な価値を持っていることが示されています。したがって、我々は、拡張-Typeフィールドで、ここでその練習を続けないでください。"
    },
    {
      "indent": 0,
      "text": "2.2. Long Extended Type",
      "section_title": true,
      "ja": "2.2。ロング拡張型"
    },
    {
      "indent": 3,
      "text": "This section defines a new Attribute format, called \"Long Extended Type\". It leverages the \"Extended Type\" format in order to permit the transport of attributes encapsulating more than 253 octets of data. A summary of the Attribute format is shown below. The fields are transmitted from left to right.",
      "ja": "このセクションでは、「ロング拡張型」と呼ばれる新しい属性のフォーマットを定義します。これは、データの以上253個のオクテットをカプセル化する属性の輸送を可能にするために「拡張型」のフォーマットを活用しています。属性のフォーマットの概要は以下に示されています。フィールドは左から右に送信されます。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Type      |    Length     | Extended-Type |M|  Reserved   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Value ...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Type",
      "ja": "タイプ"
    },
    {
      "indent": 6,
      "text": "This field is identical to the Type field of the Attribute format defined in [RFC2865] Section 5.",
      "ja": "このフィールドは、[RFC2865]セクション5で定義された属性の形式のTypeフィールドと同一です。"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "The Length field is one octet and indicates the length of this Attribute, including the Type, Length, Extended-Type, and \"Value\" fields. Permitted values are between 5 and 255. If a client or server receives a \"Long Extended Type\" with a Length of 2, 3, or 4, then that Attribute MUST be considered to be an \"invalid attribute\" and handled as per Section 2.8, below.",
      "ja": "長さフィールドは1つのオクテットであり、この属性の長さ、タイプ、長さ、拡張型を含めて、「値」フィールドを示します。クライアントまたはサーバが2、3、または4の長さを持つ「ロング拡張タイプ」を受信した場合に許可される値は5〜255の間であり、その属性は「無効な属性」であると考えられ、2.8節に従って処理しなければなりません、 未満。"
    },
    {
      "indent": 6,
      "text": "Note that this Length is limited to the length of this fragment. There is no field that gives an explicit value for the total size of the fragmented attribute.",
      "ja": "この長さは、この断片の長さに制限されることに留意されたいです。断片化された属性の合計サイズの明示的な値を与える何のフィールドがありません。"
    },
    {
      "indent": 3,
      "text": "Extended-Type",
      "ja": "拡張型"
    },
    {
      "indent": 6,
      "text": "This field is identical to the Extended-Type field defined above in Section 2.1.",
      "ja": "このフィールドは、セクション2.1で上記で定義された拡張型フィールドと同じです。"
    },
    {
      "indent": 3,
      "text": "M (More)",
      "ja": "M（詳細）"
    },
    {
      "indent": 6,
      "text": "The More field is one (1) bit in length and indicates whether or not the current attribute contains \"more\" than 251 octets of data. The More field MUST be clear (0) if the Length field has a value of less than 255. The More field MAY be set (1) if the Length field has a value of 255.",
      "ja": "複数のフィールドは、長さが1ビットであり、現在の属性は、データの251オクテットよりも「より」を含むか否かを示します。複数のフィールドは、明確でなければならない（0）長さフィールドは、より多くのフィールドが設定されるかもしれ未満255の値を有する場合、（1）長さフィールド255の値を有する場合。"
    },
    {
      "indent": 6,
      "text": "If the More field is set (1), it indicates that the \"Value\" field has been fragmented across multiple RADIUS attributes. When the More field is set (1), the Attribute MUST have a Length field of value 255, there MUST be an attribute following this one, and the next attribute MUST have both the same Type and \"Extended Type\". That is, multiple fragments of the same value MUST be in order and MUST be consecutive attributes in the packet, and the last attribute in a packet MUST NOT have the More field set (1).",
      "ja": "その他のフィールドは（1）設定されている場合は、「値」フィールドには、複数のRADIUS属性間で断片化されたことを示しています。その他のフィールドは（1）、属性値255の長さフィールドを持っていなければならない設定されている場合は、そこにこの1次の属性でなければならない、と次の属性は、同じタイプと「拡張型」の両方を持たなければなりません。これは、同じ値の複数の断片が順番にでなければなりませんし、パケット内の連続属性でなければならない、とパケット内の最後の属性は、複数のフィールドセット（1）を持つことはできません。"
    },
    {
      "indent": 6,
      "text": "That is, a packet containing a fragmented attribute needs to contain all fragments of the Attribute, and those fragments need to be contiguous in the packet. RADIUS does not support inter-packet fragmentation, which means that fragmenting an attribute across multiple packets is impossible.",
      "ja": "それは断片化された属性を含むパケットは、属性のすべてのフラグメントが含まれている必要があり、そしてそれらのフラグメントは、パケット内の連続している必要があります。 RADIUSは、複数のパケット間で属性を断片化することは不可能であることを意味し、パケット間の断片化をサポートしていません。"
    },
    {
      "indent": 6,
      "text": "If a client or server receives an attribute fragment with the \"More\" field set (1) but for which no subsequent fragment can be found, then the fragmented attribute is considered to be an \"invalid attribute\" and handled as per Section 2.8, below.",
      "ja": "クライアント又はサーバは、「詳細」フィールドのセット（1）と属性フラグメントを受信するが、後続のフラグメントが見つからないことができ、その後、断片化された属性が「無効な属性」であると考えられ、以下のセクション2.8に従って処理されるため場合。"
    },
    {
      "indent": 3,
      "text": "Reserved",
      "ja": "予約済み"
    },
    {
      "indent": 6,
      "text": "This field is 7 bits long and is reserved for future use. Implementations MUST set it to zero (0) when encoding an attribute for sending in a packet. The contents SHOULD be ignored on reception.",
      "ja": "このフィールドは、7ビット長で、将来の使用のために予約されています。パケットで送信するための属性を符号化する際の実装（0）はゼロに設定しなければなりません。内容は、受信時に無視されるべきです。"
    },
    {
      "indent": 6,
      "text": "Future specifications may define additional meaning for this field. Implementations therefore MUST NOT treat this field as invalid if it is non-zero.",
      "ja": "将来の仕様は、このフィールドの追加の意味を定義することができます。実装は、それゆえ、このフィールドにそれがゼロでない場合は無効として扱うてはなりません。"
    },
    {
      "indent": 3,
      "text": "Value",
      "ja": "値"
    },
    {
      "indent": 6,
      "text": "This field is similar to the \"Value\" field of the Attribute format defined in [RFC2865] Section 5. It may contain a complete set of data (when the Length field has a value of less than 255), or it may contain a fragment of data.",
      "ja": "このフィールドは、[RFC2865]で定義された属性の形式の「値」フィールドに類似している第5これは、データの完全なセット（長さフィールドは、255未満の値を有する場合）、またはフラグメントを含むことができるが含まれていてもよいですデータの。"
    },
    {
      "indent": 6,
      "text": "The \"Value\" field is one or more octets.",
      "ja": "「値」フィールドには、一個の以上のオクテットです。"
    },
    {
      "indent": 6,
      "text": "Implementations supporting this specification MUST use the identifier of \"Type.Extended-Type\" to determine the interpretation of the \"Value\" field.",
      "ja": "この仕様をサポートする実装は、「値」フィールドの解釈を決定するために、「Type.Extended型」の識別子を使用しなければなりません。"
    },
    {
      "indent": 6,
      "text": "Any interpretation of the resulting data MUST occur after the fragments have been reassembled. The length of the data MUST be taken as the sum of the lengths of the fragments (i.e., \"Value\" fields) from which it is constructed. The format of the data SHOULD be a valid RADIUS data type. If the reassembled data does not match the expected format, all fragments MUST be treated as \"invalid attributes\", and the reassembled data MUST be discarded.",
      "ja": "フラグメントが再組み立てされた後、その結果得られたデータの任意の解釈が行われなければなりません。データの長さは、それが構築されたフラグメント（すなわち、「値」フィールド）の長さの和として払わなければなりません。データの形式は、有効なRADIUSデータタイプでなければなりません。再組立データが予想形式と一致しない場合、すべてのフラグメントは、「無効な属性」として扱わなければならない、と再組立データを捨てなければなりません。"
    },
    {
      "indent": 6,
      "text": "We note that the maximum size of a fragmented attribute is limited only by the RADIUS packet length limitation (i.e., 4096 octets, not counting various headers and overhead). Implementations MUST be able to handle the case where one fragmented attribute completely fills the packet.",
      "ja": "我々は、断片化された属性の最大サイズのみ（即ち、4096個のオクテットは、各種ヘッダオーバーヘッドをカウントしない）RADIUSパケット長の制限によって制限されることに注意してください。実装は1つの断片化された属性が完全にパケットを満たす場合を扱うことができなければなりません。"
    },
    {
      "indent": 3,
      "text": "This definition increases the RADIUS Attribute Type space as above but also provides for transport of Attributes that could contain more than 253 octets of data.",
      "ja": "この定義は、上記のようにRADIUS属性タイプのスペースを増加だけでなく、より多くのデータ253個のオクテットを含むことができ、属性の輸送のために用意されています。"
    },
    {
      "indent": 3,
      "text": "Note that [RFC2865] Section 5 says:",
      "ja": "[RFC2865]第5節が言うことに注意してください："
    },
    {
      "indent": 6,
      "text": "If multiple Attributes with the same Type are present, the order of Attributes with the same Type MUST be preserved by any proxies. The order of Attributes of different Types is not required to be preserved. A RADIUS server or client MUST NOT have any dependencies on the order of attributes of different types. A RADIUS server or client MUST NOT require attributes of the same type to be contiguous.",
      "ja": "同じタイプの複数の属性が存在する場合、同じタイプの属性の順序は、任意のプロキシによって保護されなければなりません。異なる種類の属性の順序は維持される必要はありません。 RADIUSサーバまたはクライアントは、異なる種類の属性の順序に依存関係を持ってはいけません。 RADIUSサーバまたはクライアントが連続して同じタイプの属性を要求してはなりません。"
    },
    {
      "indent": 3,
      "text": "These requirements also apply to the \"Long Extended Type\" Attribute, including fragments. Implementations MUST be able to process non-contiguous fragments -- that is, fragments that are mixed together with other attributes of a different Type. This will allow them to accept packets, so long as the Attributes can be correctly decoded.",
      "ja": "これらの要件はまた、断片を含む「ロング拡張type」属性に適用されます。実装は、非連続フラグメントを処理できなければならない - それは、異なるタイプの他の属性と一緒に混合されるフラグメントです。これは、彼らは長い間属性が正しく復号することができますように、パケットを受け入れることができます。"
    },
    {
      "indent": 0,
      "text": "2.3. TLV Data Type",
      "section_title": true,
      "ja": "2.3。 TLVデータタイプ"
    },
    {
      "indent": 3,
      "text": "We define a new data type in RADIUS, called \"tlv\". The \"tlv\" data type is an encapsulation layer that permits the \"Value\" field of an Attribute to contain new sub-Attributes. These sub-Attributes can in turn contain \"Value\"s of data type TLV. This capability both extends the Attribute space and permits \"nested\" attributes to be used. This nesting can be used to encapsulate or group data into one or more logical containers.",
      "ja": "私たちは、「TLV」と呼ばれ、RADIUSでの新しいデータ型を定義します。 「TLV」データ型は、新しいサブ属性を含むように属性の「値」フィールドを許可する封止層です。これらのサブ属性は、順番にデータタイプTLVの「価値」のを含めることができます。この機能は、使用する属性属性空間を拡張し、「ネストされた」許可の両方。このネストは、一つ以上の論理コンテナにデータをカプセル化またはグループに使用することができます。"
    },
    {
      "indent": 3,
      "text": "The \"tlv\" data type reuses the RADIUS Attribute format, as given below:",
      "ja": "下記の通り「TLV」データ型は、RADIUS属性のフォーマットを再利用します："
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   TLV-Type    |  TLV-Length   |     TLV-Value ...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "TLV-Type",
      "ja": "TLV-タイプ"
    },
    {
      "indent": 6,
      "text": "The TLV-Type field is one octet. Up-to-date values of this field are specified according to the policies and rules described in Section 10. Values 254-255 are \"Reserved\" for use by future extensions to RADIUS. The value 26 has no special meaning and MUST NOT be treated as a Vendor-Specific Attribute.",
      "ja": "TLV-Typeフィールドは1つのオクテットです。この分野の最新の値が10の値254から255はRADIUSへの将来の拡張で使用するために「予約」されているセクションで説明したポリシーとルールに従って指定されています。値26は特別な意味を持ちませんし、ベンダー固有の属性として扱われてはなりません。"
    },
    {
      "indent": 6,
      "text": "As with the Extended-Type field defined above, the TLV-Type is meaningful only within the context defined by \"Type\" fields of the encapsulating Attributes. That is, the field may be thought of as defining a new type space of the form \"Type.Extended-Type.TLV-Type\". Where TLVs are nested, the type space is of the form \"Type.Extended-Type.TLV-Type.TLV-Type\", etc.",
      "ja": "上記で定義された拡張タイプフィールドを有するように、TLVタイプは、カプセル化属性の「タイプ」フィールドによって定義されたコンテキスト内で有意義です。これは、フィールドがフォーム「Type.Extended-Type.TLV型」の新しいタイプのスペースを定義するものとして考えることができる、です。 TLVがネストされている場合は、タイプ空間がフォーム「Type.Extended-Type.TLV-Type.TLV型」、などであります"
    },
    {
      "indent": 6,
      "text": "A RADIUS server MAY ignore Attributes with an unknown \"TLV-Type\".",
      "ja": "RADIUSサーバは、未知の「TLV-タイプ」と属性を無視するかもしれません。"
    },
    {
      "indent": 6,
      "text": "A RADIUS client MAY ignore Attributes with an unknown \"TLV-Type\".",
      "ja": "RADIUSクライアントが不明な「TLV-タイプ」と属性を無視するかもしれません。"
    },
    {
      "indent": 6,
      "text": "A RADIUS proxy SHOULD forward Attributes with an unknown \"TLV-Type\" verbatim.",
      "ja": "RADIUSプロキシは、逐語的に未知の「TLV-タイプ」と属性を転送する必要があります。"
    },
    {
      "indent": 3,
      "text": "TLV-Length",
      "ja": "TLV-長"
    },
    {
      "indent": 6,
      "text": "The TLV-Length field is one octet and indicates the length of this TLV, including the TLV-Type, TLV-Length, and TLV-Value fields. It MUST have a value between 3 and 255. If a client or server receives a TLV with an invalid TLV-Length, then the Attribute that encapsulates that TLV MUST be considered to be an \"invalid attribute\" and handled as per Section 2.8, below.",
      "ja": "TLV-Lengthフィールドは1つのオクテットであり、TLVタイプ、TLV長、及びTLV値フィールドを含む、このTLVの長さを示します。クライアントまたはサーバーが無効TLV-長とTLVを受信した場合には、以下の、TLVは「無効な属性」であると考えられ、2.8節に従って処理しなければならないことをカプセル化する属性、その後、3〜255の値を持つ必要があります。"
    },
    {
      "indent": 3,
      "text": "TLV-Value",
      "ja": "TLV-値"
    },
    {
      "indent": 6,
      "text": "The TLV-Value field is one or more octets and contains information specific to the Attribute. The format and length of the TLV-Value field are determined by the TLV-Type and TLV-Length fields.",
      "ja": "TLV-Valueフィールドは、一個の以上のオクテットで、属性に固有の情報が含まれています。 TLV値フィールドのフォーマットと長さは、TLVタイプとTLV長フィールドによって決定されます。"
    },
    {
      "indent": 6,
      "text": "The TLV-Value field SHOULD encapsulate a standard RADIUS data type. Non-standard data types SHOULD NOT be used within TLV-Value fields. We note that the TLV-Value field MAY also contain one or more attributes of data type TLV; data type TLV allows for simple grouping and multiple layers of nesting.",
      "ja": "TLV-Valueフィールドは、標準のRADIUSデータ型をカプセル化する必要があります。非標準のデータ型は、TLV値フィールド内で使用されるべきではありません。我々はTLV-Value]フィールドには、データタイプTLVの1つ以上の属性が含まれていることに注意してください。データ型TLVは、単純なグループ化とネストの複数の層を可能にします。"
    },
    {
      "indent": 6,
      "text": "The TLV-Value field is limited to containing 253 or fewer octets of data. Specifications that require a TLV to contain more than 253 octets of data are incompatible with RADIUS and need to be redesigned. Specifications that require the transport of empty \"Value\"s (i.e., Length = 2) are incompatible with RADIUS and need to be redesigned.",
      "ja": "TLV-Valueフィールドは、データの253個のまたは少ないオクテットを含むに限定されています。以上のデータ253個のオクテットを含むようにTLVを必要な仕様は、RADIUSと互換性がないと再設計する必要があります。空の「値」S（すなわち、長さ= 2）の輸送を必要とする仕様は、RADIUSと互換性があり、再設計される必要があります。"
    },
    {
      "indent": 6,
      "text": "The TLV-Value field MUST NOT contain data using the \"Extended Type\" formats defined in this document. The base Extended Attributes format allows for sufficient flexibility that nesting them inside of a TLV offers little additional value.",
      "ja": "TLV-Valueフィールドは、この文書で定義された「拡張型」の形式を使用してデータを含んではなりません。ベース拡張属性フォーマットはTLVの内部でそれらを入れ子にすることはほとんどない付加価値を提供しています十分な柔軟性が可能になります。"
    },
    {
      "indent": 3,
      "text": "This TLV definition is compatible with the suggested format of the \"String\" field of the Vendor-Specific Attribute, as defined in [RFC2865] Section 5.26, though that specification does not discuss nesting.",
      "ja": "[RFC2865]のセクション5.26で定義されるように、その仕様はネストを説明しませんが、このTLVの定義は、ベンダー固有の属性の「文字列」フィールドの推奨される形式と互換性があります。"
    },
    {
      "indent": 3,
      "text": "Vendors MAY use attributes of type \"TLV\" in any Vendor-Specific Attribute. It is RECOMMENDED to use type \"TLV\" for VSAs, in preference to any other format.",
      "ja": "ベンダーはどのベンダー固有の属性タイプ「TLV」の属性を使用するかもしれません。任意の他の形式に優先して、VSAのためのタイプ「TLV」を使用することが推奨されます。"
    },
    {
      "indent": 3,
      "text": "If multiple TLVs with the same TLV-Type are present, the order of TLVs with the same TLV-Type MUST be preserved by any proxies. The order of TLVs of different TLV-Types is not required to be preserved. A RADIUS server or client MUST NOT have any dependencies on the order of TLVs of different TLV-Types. A RADIUS server or client MUST NOT require TLVs of the same TLV-Type to be contiguous.",
      "ja": "同じTLVタイプを有する複数のTLVが存在する場合、同一のTLVタイプとのTLVの順序は、任意のプロキシによって保護されなければなりません。異なるTLV-タイプののTLVの順序は維持される必要はありません。 RADIUSサーバまたはクライアントが異なるTLV-タイプのTLVの程度の依存関係を持ってはいけません。 RADIUSサーバまたはクライアントが連続して同じTLV-タイプのTLVを要求してはなりません。"
    },
    {
      "indent": 3,
      "text": "The interpretation of multiple TLVs of the same TLV-Type MUST be that of a logical \"and\", unless otherwise specified. That is, multiple TLVs are interpreted as specifying an unordered set of values. Specifications SHOULD NOT define TLVs to be interpreted as a logical \"or\". Doing so would mean that a RADIUS client or server would make an arbitrary and non-deterministic choice among the values.",
      "ja": "特に指定がない限り同じTLV-タイプの複数のTLVの解釈は、論理「と」のものでなければなりません。つまり、複数のTLVは、値の非順序集合を指定するものとして解釈されます。仕様は、論理的な「または」と解釈されるTLVを定義するべきではありません。そうすることで、RADIUSクライアントまたはサーバが値のうち、任意の非決定論的な選択肢になるだろうことを意味します。"
    },
    {
      "indent": 0,
      "text": "2.3.1. TLV Nesting",
      "section_title": true,
      "ja": "2.3.1。 TLVのネスト"
    },
    {
      "indent": 3,
      "text": "TLVs may contain other TLVs. When this occurs, the \"container\" TLV MUST be completely filled by the \"contained\" TLVs. That is, the \"container\" TLV-Length field MUST be exactly two (2) more than the sum of the \"contained\" TLV-Length fields. If the \"contained\" TLVs overfill the \"container\" TLV, the \"container\" TLV MUST be considered to be an \"invalid attribute\" and handled as described in Section 2.8, below.",
      "ja": "TLVが他のTLVが含まれていてもよいです。これが発生すると、「容器」TLVは完全に「含まれる」のTLVによって満たされなければなりません。つまり、「コンテナ」TLV-Lengthフィールドは、「含まれる」TLV長フィールドの和よりも正確に、2つ（2）以上でなければなりません。 「含まれる」場合のTLVは、「コンテナ」TLVを入れすぎ、「容器」TLVは以下のセクション2.8に記載されているように、「無効な属性」と取り扱いであると見なされなければなりません。"
    },
    {
      "indent": 3,
      "text": "The depth of TLV nesting is limited only by the restrictions on the TLV-Length field. The limit of 253 octets of data results in a limit of 126 levels of nesting. However, nesting depths of more than 4 are NOT RECOMMENDED. They have not been demonstrated to be necessary in practice, and they appear to make implementations more complex. Reception of packets with such deeply nested TLVs may indicate implementation errors or deliberate attacks. Where implementations do not support deep nesting of TLVs, it is RECOMMENDED that the unsupported layers are treated as \"invalid attributes\".",
      "ja": "TLVのネストの深さは、唯一のTLV-Lengthフィールド上の制約によって制限されています。ネスト126のレベルの限界でのデータ結果の253オクテットの限界。しかし、4つ以上のネストの深さが推奨されていません。彼らは実際には必要であることが実証されていない、と彼らは実装がより複雑にするために表示されます。そのような深くネストされたTLVを持つパケットの受信は、実装エラーや意図的な攻撃を示すかもしれません。実装はのTLVの深いネストをサポートしていない場合、サポートされていない層が「無効な属性」として扱われることが推奨されます。"
    },
    {
      "indent": 0,
      "text": "2.4. EVS Data Type",
      "section_title": true,
      "ja": "2.4。 EVSデータ型"
    },
    {
      "indent": 3,
      "text": "We define a new data type in RADIUS, called \"evs\", for \"Extended-Vendor-Specific\". The \"evs\" data type is an encapsulation layer that permits the EVS-Value field of an Attribute to contain a Vendor-Id, followed by an EVS-Type, and then vendor-defined data. This data can in turn contain valid RADIUS data types or any other data as determined by the vendor.",
      "ja": "私たちは、「拡張-ベンダー固有」のために、「EVS」と呼ばれるRADIUSでの新しいデータ型を定義します。 「EVS」データ・タイプは、EVS型続くベンダーID、およびその後ベンダー定義データを格納するための属性のEVS値フィールドを許可する封止層です。ベンダーによって決定される。このデータは、順番に有効なRADIUSデータ型やその他のデータを含めることができます。"
    },
    {
      "indent": 3,
      "text": "This data type is intended for use in attributes that carry vendor-specific information, as is done with the Vendor-Specific Attribute (Attribute number 26). It is RECOMMENDED that this data type be used by a vendor only when the Vendor-Specific Attribute Type space has been fully allocated.",
      "ja": "ベンダー固有の属性（アトリビュート番号26）を用いて行われているように、このデータ・タイプは、ベンダー固有の情報を搬送する属性で使用するために意図されています。このデータ型は、ベンダー固有の属性タイプのスペースが完全に割り当てられている唯一のベンダーで使用することをお勧めします。"
    },
    {
      "indent": 3,
      "text": "Where [RFC2865] Section 5.26 makes a recommendation for the format of the data following the Vendor-Id, we give a strict definition. Experience has shown that many vendors have not followed the [RFC2865] recommendations, leading to interoperability issues. We hope here to give vendors sufficient flexibility as to meet their needs while minimizing the use of non-standard VSA formats.",
      "ja": "[RFC2865]セクション5.26は、ベンダーID、次のデータのフォーマットのための勧告を行った場合、私たちは厳格な定義を与えます。経験は、多くのベンダーが相互運用性の問題につながる、[RFC2865]の勧告に従っていないことが示されています。私たちは、ベンダーに非標準のVSAフォーマットの使用を最小限に抑えながら、彼らのニーズを満たすために十分な柔軟性を与えるためにここに願っています。"
    },
    {
      "indent": 3,
      "text": "The \"evs\" data type MAY be used in Attributes having the format of \"Extended Type\" or \"Long Extended Type\". It MUST NOT be used in any other Attribute definition, including standard RADIUS attributes, TLVs, and VSAs.",
      "ja": "「EVS」データ・タイプは、「拡張型」または「ロング拡張型」のフォーマットの属性に使用されるかもしれません。これは、標準のRADIUS属性、TLVの、とVSAを含め、他の属性の定義に使用してはいけません。"
    },
    {
      "indent": 3,
      "text": "A summary of the \"evs\" data type format is shown below. The fields are transmitted from left to right.",
      "ja": "「EVS」データタイプフォーマットの概要は以下に示されています。フィールドは左から右に送信されます。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                            Vendor-Id                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  EVS-Type      |  EVS-Value ....\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Vendor-Id",
      "ja": "ベンダーID"
    },
    {
      "indent": 6,
      "text": "The 4 octets of the Vendor-Id field are the Network Management Private Enterprise Code [PEN] of the vendor in network byte order.",
      "ja": "ベンダーIDフィールドの4つのオクテットはネットワークバイトオーダーにベンダーのネットワーク管理プライベートエンタープライズコード[PEN]です。"
    },
    {
      "indent": 3,
      "text": "EVS-Type",
      "ja": "EVS-タイプ"
    },
    {
      "indent": 6,
      "text": "The EVS-Type field is one octet. Values are assigned at the sole discretion of the vendor.",
      "ja": "EVS-Typeフィールドは1つのオクテットです。値は、ベンダーの裁量で割り当てられています。"
    },
    {
      "indent": 3,
      "text": "EVS-Value",
      "ja": "EVS-値"
    },
    {
      "indent": 6,
      "text": "The EVS-Value field is one or more octets. It SHOULD encapsulate a standard RADIUS data type. Using non-standard data types is NOT RECOMMENDED. We note that the EVS-Value field may be of data type TLV. However, it MUST NOT be of data type \"evs\", as the use cases are unclear for one vendor delegating Attribute Type space to another vendor.",
      "ja": "EVS-Valueフィールドは、一個の以上のオクテットです。これは、標準のRADIUSデータ型をカプセル化する必要があります。非標準のデータ型を使用することは推奨されません。私たちは、EVS-Valueフィールドは、データ型TLVのものであってもよいことに注意してください。ユースケースは、1つのベンダーが他のベンダーに属性タイプのスペースを委任するため不明であるとして、しかし、それは、データ種別「EVS」としているはずがありません。"
    },
    {
      "indent": 6,
      "text": "The actual format of the information is site or application specific, and a robust implementation SHOULD support the field as undistinguished octets. While we recognize that vendors have complete control over the contents and format of the EVS-Value field, we recommend that good practices be followed.",
      "ja": "情報の実際のフォーマットは、サイトまたはアプリケーション固有であり、かつ強固な実装が平凡なオクテットとしてフィールドをサポートする必要があります。私たちは、ベンダーがEVS-Valueフィールドの内容と形式を完全に制御を持っていることを認識しながら、我々は良いプラクティスに従うことをお勧めします。"
    },
    {
      "indent": 6,
      "text": "Further codification of the range of allowed usage of this field is outside the scope of this specification.",
      "ja": "このフィールドの許容使用量の範囲のさらなる成文化はこの仕様の範囲外です。"
    },
    {
      "indent": 3,
      "text": "Note that unlike the format described in [RFC2865] Section 5.26, this data type has no \"Vendor-Length\" field. The length of the EVS-Value field is implicit and is determined by taking the \"Length\" of the encapsulating RADIUS attribute and then subtracting the length of the",
      "ja": "[RFC2865]セクション5.26に記載のフォーマットとは異なり、このデータ型がない「ベンダー長」フィールドを有していないことに留意されたいです。 EVS値フィールドの長さは、暗黙的であり、封入RA​​DIUS属性の「長さ」を取り、その後の長さを減算することによって決定されます"
    },
    {
      "indent": 3,
      "text": "Attribute header (2 octets), the \"Extended Type\" (1 octet), the Vendor-Id (4 octets), and the EVS-Type (1 octet). That is, for \"Extended Type\" Attributes the length of the EVS-Value field is eight (8) less than the value of the Length field, and for \"Long Extended Type\" Attributes the length of the EVS-Value field is nine (9) less than the value of the Length field.",
      "ja": "ヘッダ属性（2つのオクテット）、 \"拡張型\"（1つのオクテット）、ベンダーID（4つのオクテット）、およびEVS型（1つのオクテット）。すなわち、（「拡張型」のEVS値フィールドの長さが8（8）、および「ロング拡張型」のLengthフィールドの値未満のEVS値フィールドの長さが9である属性である属性であります9）長さフィールドの値よりも小さいです。"
    },
    {
      "indent": 0,
      "text": "2.5. Integer64 Data Type",
      "section_title": true,
      "ja": "2.5。 Integer64データ型"
    },
    {
      "indent": 3,
      "text": "We define a new data type in RADIUS, called \"integer64\", which carries a 64-bit unsigned integer in network byte order.",
      "ja": "私たちは、ネットワークバイト順で64ビットの符号なし整数を担持し、「integer64」と呼ばれ、RADIUSでの新しいデータ型を定義します。"
    },
    {
      "indent": 3,
      "text": "This data type is intended to be used in any situation where there is a need to have counters that can count past 2^32. The expected use of this data type is within Accounting-Request packets, but this data type SHOULD be used in any packet where 32-bit integers are expected to be insufficient.",
      "ja": "このデータ型は2 ^ 32を過ぎて数えることができるカウンターを持ってする必要があるどのような状況で使用されることを意図しています。このデータタイプの予想される使用は、アカウンティング要求パケット内にあるが、このデータ・タイプは、32ビット整数が不十分であると予想される任意のパケットで使用されるべきです。"
    },
    {
      "indent": 3,
      "text": "The \"integer64\" data type can be used in Attributes of any format, standard space, extended attributes, TLVs, and VSAs.",
      "ja": "「integer64」データ・タイプは、任意のフォーマット、標準スペース、拡張属性、のTLV、とVSAの属性で使用することができます。"
    },
    {
      "indent": 3,
      "text": "A summary of the \"integer64\" data type format is shown below. The fields are transmitted from left to right.",
      "ja": "「integer64」データタイプのフォーマットの概要は以下に示されています。フィールドは左から右に送信されます。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                  Value ...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                                                                |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Attributes having data type \"integer64\" MUST have the relevant Length field set to eight more than the length of the Attribute header. For standard space Attributes and TLVs, this means that the Length field MUST be set to ten (10). For \"Extended Type\" Attributes, the Length field MUST be set to eleven (11). For \"Long Extended Type\" Attributes, the Length field MUST be set to twelve (12).",
      "ja": "複数の属性ヘッダの長さよりも8個に関連する長さフィールドを設定する必要があります「integer64」データ型を有する属性。標準のスペース属性とのTLVのために、これは、長さフィールドが10（10）に設定しなければならないことを意味しています。 「拡張型」属性の場合、長さフィールドは、11（11）に設定しなければなりません。属性「ロング拡張型」の場合は、長さフィールドは、12（12）に設定しなければなりません。"
    },
    {
      "indent": 0,
      "text": "2.6. Vendor-Id Field",
      "section_title": true,
      "ja": "2.6。ベンダーIDフィールド"
    },
    {
      "indent": 3,
      "text": "We define the Vendor-Id field of Vendor-Specific Attributes to encompass the entire 4 octets of the Vendor field. [RFC2865] Section 5.26 defined it to be 3 octets, with the fourth octet being zero. This change has no immediate impact on RADIUS, as the maximum Private Enterprise Code defined is still within 16 bits.",
      "ja": "私たちは、ベンダーフィールドの全体の4つのオクテットを包含するベンダー固有の属性のベンダーIDフィールドを定義します。 [RFC2865]セクション5.26は、第四オクテットがゼロであると、3つのオクテットであることを定義しました。定義された最大の民間企業コードは16ビット内にあるように、この変更は、RADIUSには直接的な影響を与えません。"
    },
    {
      "indent": 3,
      "text": "However, it is best to make advance preparations for changes in the protocol. As such, it is RECOMMENDED that all implementations support four (4) octets for the Vendor-Id field, instead of three (3).",
      "ja": "しかし、それは、プロトコルの変更のための事前準備を行うのがベストです。このように、すべての実装は、4つ（4）ベンダーIDフィールドのオクテット、代わりの三（3）をサポートすることが推奨されます。"
    },
    {
      "indent": 0,
      "text": "2.7. Attribute Naming and Type Identifiers",
      "section_title": true,
      "ja": "2.7。ネーミング属性と識別子を入力"
    },
    {
      "indent": 3,
      "text": "Attributes have traditionally been identified by a unique name and number. For example, the Attribute \"User-Name\" has been allocated number one (1). This scheme needs to be extended in order to be able to refer to attributes of \"Extended Type\", and to TLVs. It will also be used by IANA for allocating RADIUS Attribute Type values.",
      "ja": "属性には、伝統的に一意の名前と番号で識別されています。例えば、属性「ユーザ名」ナンバーワン（1）が割り当てられています。この方式は、「拡張型」の属性を参照することができるようにするために、とのTLVに拡張する必要があります。また、RADIUS属性タイプの値を割り当てるためのIANAによって使用されます。"
    },
    {
      "indent": 3,
      "text": "The names and identifiers given here are intended to be used only in specifications. The system presented here may not be useful when referring to the contents of a RADIUS packet. It imposes no requirements on implementations, as implementations are free to reference RADIUS attributes via any method they choose.",
      "ja": "ここに与えられた名前と識別子は唯一の仕様で使用されることを意図しています。 RADIUSパケットの内容を参照するときにここで紹介するシステムは有用ではないかもしれません。実装はRADIUSは、彼らが選択した任意のメソッドを介して属性を参照するのは自由ですように、それは、実装には何の要件を課していません。"
    },
    {
      "indent": 0,
      "text": "2.7.1. Attribute and TLV Naming",
      "section_title": true,
      "ja": "2.7.1。属性とTLVの命名"
    },
    {
      "indent": 3,
      "text": "RADIUS specifications traditionally use names consisting of one or more words, separated by hyphens, e.g., \"User-Name\". However, these names are not allocated from a registry, and there is no restriction other than convention on their global uniqueness.",
      "ja": "RADIUSの仕様は、伝統的に、例えば、「ユーザー名」、ハイフンで区切られた1つの以上の単語からなる名前を使用します。しかし、これらの名前は、レジストリから割り当てられ、そして、グローバルな一意性に関する条約以外の制限はありませんされていません。"
    },
    {
      "indent": 3,
      "text": "Similarly, vendors have often used their company name as the prefix for VSA names, though this practice is not universal. For example, for a vendor named \"Example\", the name \"Example-Attribute-Name\" SHOULD be used instead of \"Attribute-Name\". The second form can conflict with attributes from other vendors, whereas the first form cannot.",
      "ja": "この練習は普遍的ではないですが、同様に、ベンダーは多くの場合、VSA名の接頭辞として自分の会社名を使用しています。たとえば、「例」という名前のベンダーのために、名前「例 - 属性名は、」「属性名」の代わりに使用する必要があります。最初のフォームができないのに対し、第2の形態は、他のベンダーからの属性と競合することができます。"
    },
    {
      "indent": 3,
      "text": "It is therefore RECOMMENDED that specifications give names to Attributes that attempt to be globally unique across all RADIUS Attributes. It is RECOMMENDED that a vendor use its name as a unique prefix for attribute names, e.g., Livingston-IP-Pool instead of IP-Pool. It is RECOMMENDED that implementations enforce uniqueness on names; not doing so would lead to ambiguity and problems.",
      "ja": "したがって、仕様がすべてのRADIUS属性全体でグローバルに一意であることを試み属性に名前を付けることが推奨されます。ベンダーが属性名、例えば、リビングストン-IP-プールの代わりに、IP-プールのためのユニークな接頭辞としてその名前を使用することをお勧めします。実装が名前の一意性を強制することをお勧めします。曖昧さや問題につながるそうではありません。"
    },
    {
      "indent": 3,
      "text": "We recognize that these suggestions may sometimes be difficult to implement in practice.",
      "ja": "私たちは、これらの提案は、時には実際には実施が困難であり得ることを認識しています。"
    },
    {
      "indent": 3,
      "text": "TLVs SHOULD be named with a unique prefix that is shared among related attributes. For example, a specification that defines a set of TLVs related to time could create attributes called \"Time-Zone\", \"Time-Day\", \"Time-Hour\", \"Time-Minute\", etc.",
      "ja": "TLVが関連する属性の間で共有される固有の接頭辞で名前を付ける必要があります。例えば、「タイムゾーン」と呼ばれる属性を作成することができ、時間に関係のTLVのセットを、定義する仕様「タイム・デイ」、「タイム・アワー」、「タイム・ミニッツ」など"
    },
    {
      "indent": 0,
      "text": "2.7.2. Attribute Type Identifiers",
      "section_title": true,
      "ja": "2.7.2。属性タイプ識別子"
    },
    {
      "indent": 3,
      "text": "The RADIUS Attribute Type space defines a context for a particular \"Extended-Type\" field. The \"Extended-Type\" field allows for 256 possible type code values, with values 1 through 240 available for allocation. We define here an identification method that uses a \"dotted number\" notation similar to that used for Object Identifiers (OIDs), formatted as \"Type.Extended-Type\".",
      "ja": "RADIUS属性タイプスペースは、特定の「拡張型」フィールドのコンテキストを定義します。 「拡張型」フィールドは、割り当てのために利用できる240を介して値1と、256の可能なタイプのコード値を可能にします。ここでは、「Type.Extended型」としてフォーマットされたオブジェクト識別子（OID）のために使用されるものと同様の「点線数」表記を使用する識別方法を定義します。"
    },
    {
      "indent": 3,
      "text": "For example, an attribute within the Type space of 241, having Extended-Type of one (1), is uniquely identified as \"241.1\". Similarly, an attribute within the Type space of 246, having Extended-Type of ten (10), is uniquely identified as \"246.10\".",
      "ja": "例えば、241のタイプ空間内の属性は、一方の（1）型を拡張した、一意に「241.1」として識別されます。同様に、246のタイプ空間内の属性、10（10）の有する拡張タイプは、一意に「246.10」として識別されます。"
    },
    {
      "indent": 0,
      "text": "2.7.3. TLV Identifiers",
      "section_title": true,
      "ja": "2.7.3。 TLV識別子"
    },
    {
      "indent": 3,
      "text": "We can extend the Attribute reference scheme defined above for TLVs. This is done by leveraging the \"dotted number\" notation. As above, we define an additional TLV Type space, within the \"Extended Type\" space, by appending another \"dotted number\" in order to identify the TLV. This method can be repeated in sequence for nested TLVs.",
      "ja": "私たちは、TLVのために上記で定義された属性の参照方式を拡張することができます。これは、「点線の数」表記を活用することで行われます。上記のように、我々は、TLVを特定するために、別の「点線番号」を付加することにより、「拡張型」空間内に、追加のTLVタイプ空間を画定します。この方法は、ネストされたのTLVのために順番に繰り返すことができます。"
    },
    {
      "indent": 3,
      "text": "For example, let us say that \"245.1\" identifies RADIUS Attribute Type 245, containing an \"Extended Type\" of one (1), which is of type \"TLV\". That attribute will contain 256 possible TLVs, one for each value of the TLV-Type field. The first TLV-Type value of one (1) can then be identified by appending a \".1\" to the number of the encapsulating attribute (\"241.1\"), to yield \"241.1.1\". Similarly, the sequence \"245.2.3.4\" identifies RADIUS attribute 245, containing an \"Extended Type\" of two (2), which is of type \"TLV\", which in turn contains a TLV with TLV-Type number three (3), which in turn contains another TLV, with TLV-Type number four (4).",
      "ja": "たとえば、私たちは「245.1」はRADIUSを特定したとするタイプの「TLV」である1の「拡張型」（1）を含む、245属性タイプ。その属性は256の可能のTLV、TLV-Typeフィールドの値ごとに1が含まれています。 1（1）の最初のTLVタイプの値は、 『241.1.1』を得るために、カプセル化属性（ 『241.1』）の数に「.1\" を追加することによって同定することができます。同様に、シーケンス「245.2.3.4」は、RADIUSタイプの順番でTLVタイプ番号とTLVを含む「TLV」、2つ（2）の「拡張型」を含む、245属性識別する3（3）、今度はTLVタイプ4番（4）と、別のTLVを含んでいます。"
    },
    {
      "indent": 0,
      "text": "2.7.4. VSA Identifiers",
      "section_title": true,
      "ja": "2.7.4。すべての識別子"
    },
    {
      "indent": 3,
      "text": "There has historically been no method for numerically addressing VSAs. The \"dotted number\" method defined here can also be leveraged to create such an addressing scheme. However, as the VSAs are completely under the control of each individual vendor, this section provides a suggested practice but does not define a standard of any kind.",
      "ja": "歴史的に数値的にVSAを対処するための方法がなかったです。ここで定義された「点線数」方法は、そのようなアドレス指定スキームを作成するために活用することができます。 VSAを完全に各個々のベンダの制御下にあるようしかし、このセクションでは、提案の練習を提供するが、任意の種類の標準を定義していません。"
    },
    {
      "indent": 3,
      "text": "The Vendor-Specific Attribute has been assigned the Attribute number 26. It in turn carries a 32-bit Vendor-Id, and possibly additional VSAs. Where the VSAs follow the format recommended by [RFC2865] Section 5.26, a VSA can be identified as \"26.Vendor-Id.Vendor-Type\".",
      "ja": "ベンダー固有の属性は、それが今度は、32ビットのベンダーID、およびおそらく追加のVSAを運ぶ属性番号26が割り当てられています。 VSAのは、[RFC2865]のセクション5.26で推奨されたフォーマットに従った場合、VSAは「26.Vendor-Id.Vendor型」として識別することができます。"
    },
    {
      "indent": 3,
      "text": "For example, Livingston has Vendor-Id 307 and has defined an attribute \"IP-Pool\" as number 6. This VSA can be uniquely identified as 26.307.6, but it cannot be uniquely identified by name, as other vendors may have used the same name.",
      "ja": "例えば、リビングストンは、ベンダーID 307を持ち、このVSAが一意26.307.6として同定することができる番号6として属性「IP-プール」に定義しているが、他のベンダーが使用しているかもしれませんが、それは独自に、名前で識別することができません同名。"
    },
    {
      "indent": 3,
      "text": "Note that there are few restrictions on the size of the numerical values in this notation. The Vendor-Id is a 32-bit number, and the VSA may have been assigned from a 16-bit Vendor-Specific Attribute Type space. Implementations SHOULD be capable of handling 32-bit numbers at each level of the \"dotted number\" notation.",
      "ja": "この表記の数値の大きさには、いくつかの制限があることに注意してください。ベンダーIDは32ビットの数であり、VSAは16ビットのベンダー固有属性タイプ空間から割り当てられていてもよいです。実装は「点線数」表記の各レベルで32ビット数を扱うことができるべきです。"
    },
    {
      "indent": 3,
      "text": "For example, the company USR has historically used Vendor-Id 429 and has defined a \"Version-Id\" attribute as number 32768. This VSA can be uniquely identified as 26.429.32768 but again cannot be uniquely identified by name.",
      "ja": "たとえば、会社USRは、歴史的にベンダーID 429を使用しており、このVSAが一意に26.429.32768として識別することができますが、再度、一意の名前で識別することができない番号32768として「バージョン-id」属性を定義しています。"
    },
    {
      "indent": 3,
      "text": "Where a VSA is a TLV, the \"dotted number\" notation can be used as above: 26.Vendor-Id.Vendor-Type.TLV1.TLV2.TLV3, where the \"TLVn\" values are the numerical values assigned by the vendor to the different nested TLVs.",
      "ja": "「TLVn」の値は、ベンダーによって数値が割り当てられ26.Vendor-Id.Vendor-Type.TLV1.TLV2.TLV3：VSAはTLVである場合、「点線数」表記は、上記のように使用することができます別のネストされたのTLV。"
    },
    {
      "indent": 0,
      "text": "2.8. Invalid Attributes",
      "section_title": true,
      "ja": "2.8。無効な属性"
    },
    {
      "indent": 3,
      "text": "The term \"invalid attribute\" is new to this specification. It is defined to mean that the Length field of an Attribute permits the packet to be accepted as not being \"malformed\". However, the \"Value\" field of the Attribute does not follow the format required by the data type defined for that Attribute, and therefore the Attribute is \"malformed\". In order to distinguish the two cases, we refer to \"malformed\" packets and \"invalid attributes\".",
      "ja": "用語「無効な属性が」この仕様に新しいです。属性の長さフィールドが「奇形」されていないとして受け入れられるために、パケットを許可することを意味すると定義されます。しかし、属性の「値」フィールドには、その属性の定義されたデータタイプによって必要とされるフォーマットに従わないので、属性が「不正な」です。 2例を区別するために、我々は、「不正な」パケットと「無効な属性」を参照してください。"
    },
    {
      "indent": 3,
      "text": "For example, an implementation receives a packet that is well formed. That packet contains an Attribute allegedly of data type \"address\" but that has Length not equal to four. In that situation, the packet is well formed, but the Attribute is not. Therefore, it is an \"invalid attribute\".",
      "ja": "例えば、実装がうまく形成されているパケットを受信します。そのパケットは、伝えられるところでは、「アドレス」のデータ型の属性が含まれていますが、それは4に等しくない長さを有しています。そのような状況では、パケットがうまく形成されておりますが、属性ではありません。したがって、それは「無効な属性」です。"
    },
    {
      "indent": 3,
      "text": "A similar analysis can be performed when an attribute carries TLVs. The encapsulating attribute may be well formed, but the TLV may be an \"invalid attribute\". The existence of an \"invalid attribute\" in a packet or attribute MUST NOT result in the implementation discarding the entire packet or treating the packet as a negative acknowledgment. Instead, only the \"invalid attribute\" is treated specially.",
      "ja": "属性はTLVを運ぶときに同様の解析を行うことができます。カプセル化属性がうまく形成されてもよいが、TLVは、「無効な属性」であってもよいです。パケットまたは属性で「無効な属性」の存在は、パケット全体を破棄するか、否定応答などのパケットを処理する実装につながるなりません。その代わり、唯一の「無効な属性は」特別扱いされます。"
    },
    {
      "indent": 3,
      "text": "When an implementation receives an \"invalid attribute\", it SHOULD be silently discarded, except when the implementation is acting as a proxy (see Section 5.2 for discussion of proxy servers). If it is",
      "ja": "実装が「無効な属性」を受信すると、それは静かに実装が（プロキシサーバの議論については、セクション5.2を参照）プロキシとして機能している場合を除き、廃棄すべき。もしそれが"
    },
    {
      "indent": 3,
      "text": "not discarded, it MUST NOT be handled in the same manner as a well-formed attribute. For example, receiving an Attribute of data type \"address\" containing either less than four octets or more than four octets of data means that the Attribute MUST NOT be treated as being of data type \"address\". The reason here is that if the Attribute does not carry an IPv4 address, the receiver has no idea what format the data is in, and it is therefore not an IPv4 address.",
      "ja": "廃棄されていない、それが整形式属性と同じように扱われてはなりません。例えば、以下4つのオクテットまたはデータのより4つのオクテットのいずれかを含有する「アドレス」データ型の属性を受信する属性をデータ型の「アドレス」として扱われてはならないことを意味します。ここではその理由は、属性はIPv4アドレスを運ばない場合、受信機はデータが入っているどのような形式は考えていないということであり、それゆえ、IPv4アドレスではありません。"
    },
    {
      "indent": 3,
      "text": "For Attributes of type \"Long Extended Type\", an Attribute is considered to be an \"invalid attribute\" when it does not match the criteria set out in Section 2.2, above.",
      "ja": "タイプ「ロング拡張型」の属性の場合、属性は、それが上記セクション2.2に定める基準に一致しない場合に、「無効な属性」であると考えられています。"
    },
    {
      "indent": 3,
      "text": "For Attributes of type \"TLV\", an Attribute is considered to be an \"invalid attribute\" when the TLV-Length field allows the encapsulating Attribute to be parsed but the TLV-Value field does not match the criteria for that TLV. Implementations SHOULD NOT treat the \"invalid attribute\" property as being transitive. That is, the Attribute encapsulating the \"invalid attribute\" SHOULD NOT be treated as an \"invalid attribute\". That encapsulating Attribute might contain multiple TLVs, only one of which is an \"invalid attribute\".",
      "ja": "タイプの属性「TLV」の場合、属性はTLV-Lengthフィールドをカプセル化する属性を解析することを可能にするが、TLV-Valueフィールドは、そのTLVの基準と一致しない「無効な属性」であると考えられています。実装は推移であるとして「無効な属性」プロパティを扱うべきではありません。それは、「無効な属性」をカプセル化する属性は、「無効な属性」として扱われるべきではない、です。そのカプセル化属性は、「無効な属性」であるだけそのうちの一つ、複数のTLVが含まれる可能性があります。"
    },
    {
      "indent": 3,
      "text": "However, a TLV definition may require particular sub-TLVs to be present and/or to have specific values. If a sub-TLV is missing or contains incorrect value(s), or if it is an \"invalid attribute\", then the encapsulating TLV SHOULD be treated as an \"invalid attribute\". This requirement ensures that strongly connected TLVs are either handled as a coherent whole or ignored entirely.",
      "ja": "しかし、TLV定義が存在すること、および/または特定の値を持つ特定のサブTLVを必要とするかもしれません。サブTLVがないか、不正な値（複数可）が含まれている場合は、「無効な属性」である場合、または、その後、カプセル化TLVは、「無効な属性」として扱われるべきです。この要件は、強連結のTLVは、いずれかのコヒーレント全体として処理または完全に無視されることが保証されます。"
    },
    {
      "indent": 3,
      "text": "It is RECOMMENDED that Attributes with unknown Type, Extended-Type, TLV-Type, or EVS-Type are treated as \"invalid attributes\". This recommendation is compatible with the suggestion in [RFC2865] Section 5 that implementations \"MAY ignore Attributes with an unknown Type\".",
      "ja": "「無効な属性」として扱われ、未知のタイプ、拡張型、TLV-タイプ、またはEVS-タイプと属性のことをお勧めします。この勧告は、実装は、「未知のタイプと属性を無視するかもしれ」の提案で、[RFC2865]のセクション5と互換性があります。"
    },
    {
      "indent": 0,
      "text": "3. Attribute Definitions",
      "section_title": true,
      "ja": "3.属性の定義"
    },
    {
      "indent": 3,
      "text": "We define four (4) attributes of \"Extended Type\", which are allocated from the \"Reserved\" Attribute Type codes of 241, 242, 243, and 244. We also define two (2) attributes of \"Long Extended Type\", which are allocated from the \"Reserved\" Attribute Type codes of 245 and 246.",
      "ja": "我々は、我々はまた、「ロング拡張型」の2つ（2）属性を定義する「予約済み」属性タイプ241のコード、242、243、および244から割り当てられている「拡張型」の4つの属性を定義します245と246の「予約済み」属性タイプコードから割り当てられます。"
    },
    {
      "indent": 6,
      "text": "Type  Name\n----  ----\n241   Extended-Type-1\n242   Extended-Type-2\n243   Extended-Type-3\n244   Extended-Type-4\n245   Long-Extended-Type-1\n246   Long-Extended-Type-2",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The rest of this section gives detailed definitions for each Attribute based on the above summary.",
      "ja": "このセクションの残りの部分は、上記の概要に基づいて、各属性の詳細な定義を与えます。"
    },
    {
      "indent": 0,
      "text": "3.1. Extended-Type-1",
      "section_title": true,
      "ja": "3.1。拡張型-1"
    },
    {
      "indent": 3,
      "text": "Description",
      "ja": "説明"
    },
    {
      "indent": 6,
      "text": "This attribute encapsulates attributes of the \"Extended Type\" format, in the RADIUS Attribute Type space of 241.{1-255}.",
      "ja": "この属性は、241 {1〜255}のRADIUS属性タイプ空間で、「拡張型」形式の属性をカプセル化します。"
    },
    {
      "indent": 3,
      "text": "A summary of the Extended-Type-1 Attribute format is shown below. The fields are transmitted from left to right.",
      "ja": "拡張型a-1項目のフォーマットの概要は以下に示されています。フィールドは左から右に送信されます。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Type      |    Length     | Extended-Type |  Value ...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Type",
      "ja": "タイプ"
    },
    {
      "indent": 6,
      "text": "241 for Extended-Type-1.",
      "ja": "拡張型-1のための241。"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": ">= 4",
      "ja": "＞＝ ４"
    },
    {
      "indent": 3,
      "text": "Extended-Type",
      "ja": "拡張型"
    },
    {
      "indent": 6,
      "text": "The Extended-Type field is one octet. Up-to-date values of this field are specified in the 241.{1-255} RADIUS Attribute Type space, according to the policies and rules described in Section 10. Further definition of this field is given in Section 2.1, above.",
      "ja": "拡張-Typeフィールドは1つのオクテットです。この分野の最新の値は、この分野のさらなる定義は、上記のセクション2.1に記載されている項10に記載のポリシーおよびルールに従って、241 {1-255} RADIUS属性タイプ空間で指定されています。"
    },
    {
      "indent": 3,
      "text": "Value",
      "ja": "値"
    },
    {
      "indent": 6,
      "text": "The \"Value\" field is one or more octets.",
      "ja": "「値」フィールドには、一個の以上のオクテットです。"
    },
    {
      "indent": 6,
      "text": "Implementations supporting this specification MUST use the identifier of \"Type.Extended-Type\" to determine the interpretation of the \"Value\" field.",
      "ja": "この仕様をサポートする実装は、「値」フィールドの解釈を決定するために、「Type.Extended型」の識別子を使用しなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.2. Extended-Type-2",
      "section_title": true,
      "ja": "3.2。拡張型-2"
    },
    {
      "indent": 3,
      "text": "Description",
      "ja": "説明"
    },
    {
      "indent": 6,
      "text": "This attribute encapsulates attributes of the \"Extended Type\" format, in the RADIUS Attribute Type space of 242.{1-255}.",
      "ja": "この属性は242 {1-255}のRADIUS属性タイプ空間で、「拡張型」の形式の属性をカプセル化します。"
    },
    {
      "indent": 3,
      "text": "A summary of the Extended-Type-2 Attribute format is shown below. The fields are transmitted from left to right.",
      "ja": "拡張型a-2属性のフォーマットの概要は以下に示されています。フィールドは左から右に送信されます。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Type      |    Length     | Extended-Type |  Value ...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Type",
      "ja": "タイプ"
    },
    {
      "indent": 6,
      "text": "242 for Extended-Type-2.",
      "ja": "拡張型-2のための242。"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": ">= 4",
      "ja": "＞＝ ４"
    },
    {
      "indent": 3,
      "text": "Extended-Type",
      "ja": "拡張型"
    },
    {
      "indent": 6,
      "text": "The Extended-Type field is one octet. Up-to-date values of this field are specified in the 242.{1-255} RADIUS Attribute Type space, according to the policies and rules described in Section 10. Further definition of this field is given in Section 2.1, above.",
      "ja": "拡張-Typeフィールドは1つのオクテットです。最新のこのフィールドの値は、この分野のさらなる定義は、上記のセクション2.1に記載されている10項に記載のポリシーおよびルールに従って、242 {1-255} RADIUS属性タイプ空間で指定されています。"
    },
    {
      "indent": 3,
      "text": "Value",
      "ja": "値"
    },
    {
      "indent": 6,
      "text": "The \"Value\" field is one or more octets.",
      "ja": "「値」フィールドには、一個の以上のオクテットです。"
    },
    {
      "indent": 6,
      "text": "Implementations supporting this specification MUST use the identifier of \"Type.Extended-Type\" to determine the interpretation of the \"Value\" field.",
      "ja": "この仕様をサポートする実装は、「値」フィールドの解釈を決定するために、「Type.Extended型」の識別子を使用しなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.3. Extended-Type-3",
      "section_title": true,
      "ja": "3.3。拡張型-3"
    },
    {
      "indent": 3,
      "text": "Description",
      "ja": "説明"
    },
    {
      "indent": 6,
      "text": "This attribute encapsulates attributes of the \"Extended Type\" format, in the RADIUS Attribute Type space of 243.{1-255}.",
      "ja": "この属性は、243 {1〜255}のRADIUS属性タイプ空間で、「拡張型」形式の属性をカプセル化します。"
    },
    {
      "indent": 3,
      "text": "A summary of the Extended-Type-3 Attribute format is shown below. The fields are transmitted from left to right.",
      "ja": "拡張型a-3属性のフォーマットの概要は以下に示されています。フィールドは左から右に送信されます。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Type      |    Length     | Extended-Type |  Value ...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Type",
      "ja": "タイプ"
    },
    {
      "indent": 6,
      "text": "243 for Extended-Type-3.",
      "ja": "拡張型-3の243。"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": ">= 4",
      "ja": "＞＝ ４"
    },
    {
      "indent": 3,
      "text": "Extended-Type",
      "ja": "拡張型"
    },
    {
      "indent": 6,
      "text": "The Extended-Type field is one octet. Up-to-date values of this field are specified in the 243.{1-255} RADIUS Attribute Type space, according to the policies and rules described in Section 10. Further definition of this field is given in Section 2.1, above.",
      "ja": "拡張-Typeフィールドは1つのオクテットです。この分野の最新の値は、この分野のさらなる定義は、上記のセクション2.1に記載されている項10に記載のポリシーおよびルールに従って、243 {1-255} RADIUS属性タイプ空間で指定されています。"
    },
    {
      "indent": 3,
      "text": "Value",
      "ja": "値"
    },
    {
      "indent": 6,
      "text": "The \"Value\" field is one or more octets.",
      "ja": "「値」フィールドには、一個の以上のオクテットです。"
    },
    {
      "indent": 6,
      "text": "Implementations supporting this specification MUST use the identifier of \"Type.Extended-Type\" to determine the interpretation of the \"Value\" field.",
      "ja": "この仕様をサポートする実装は、「値」フィールドの解釈を決定するために、「Type.Extended型」の識別子を使用しなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.4. Extended-Type-4",
      "section_title": true,
      "ja": "3.4。拡張型-4"
    },
    {
      "indent": 3,
      "text": "Description",
      "ja": "説明"
    },
    {
      "indent": 6,
      "text": "This attribute encapsulates attributes of the \"Extended Type\" format, in the RADIUS Attribute Type space of 244.{1-255}.",
      "ja": "この属性は、244 {1〜255}のRADIUS属性タイプ空間で、「拡張型」形式の属性をカプセル化します。"
    },
    {
      "indent": 3,
      "text": "A summary of the Extended-Type-4 Attribute format is shown below. The fields are transmitted from left to right.",
      "ja": "拡張型a-4属性のフォーマットの概要は以下に示されています。フィールドは左から右に送信されます。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Type      |    Length     | Extended-Type |  Value ...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Type",
      "ja": "タイプ"
    },
    {
      "indent": 6,
      "text": "244 for Extended-Type-4.",
      "ja": "拡張型a-4 244。"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": ">= 4",
      "ja": "＞＝ ４"
    },
    {
      "indent": 3,
      "text": "Extended-Type",
      "ja": "拡張型"
    },
    {
      "indent": 6,
      "text": "The Extended-Type field is one octet. Up-to-date values of this field are specified in the 244.{1-255} RADIUS Attribute Type space, according to the policies and rules described in Section 10. Further definition of this field is given in Section 2.1, above.",
      "ja": "拡張-Typeフィールドは1つのオクテットです。この分野の最新の値は、この分野のさらなる定義は、上記のセクション2.1に記載されている項10に記載のポリシーおよびルールに従って、244 {1-255} RADIUS属性タイプ空間で指定されています。"
    },
    {
      "indent": 3,
      "text": "Value",
      "ja": "値"
    },
    {
      "indent": 6,
      "text": "The \"Value\" field is one or more octets.",
      "ja": "「値」フィールドには、一個の以上のオクテットです。"
    },
    {
      "indent": 6,
      "text": "Implementations supporting this specification MUST use the identifier of \"Type.Extended-Type\" to determine the interpretation of the Value Field.",
      "ja": "この仕様をサポートする実装は、Valueフィールドの解釈を決定するために、「Type.Extended型」の識別子を使用しなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.5. Long-Extended-Type-1",
      "section_title": true,
      "ja": "3.5。ロング・拡張型-1"
    },
    {
      "indent": 3,
      "text": "Description",
      "ja": "説明"
    },
    {
      "indent": 6,
      "text": "This attribute encapsulates attributes of the \"Long Extended Type\" format, in the RADIUS Attribute Type space of 245.{1-255}.",
      "ja": "この属性は、245 {1〜255}のRADIUS属性タイプ空間で、「ロング拡張型」形式の属性をカプセル化します。"
    },
    {
      "indent": 3,
      "text": "A summary of the Long-Extended-Type-1 Attribute format is shown below. The fields are transmitted from left to right.",
      "ja": "ロング拡張型a-1項目のフォーマットの概要は以下に示されています。フィールドは左から右に送信されます。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Type      |    Length     | Extended-Type |M|  Reserved   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Value ...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Type",
      "ja": "タイプ"
    },
    {
      "indent": 6,
      "text": "245 for Long-Extended-Type-1",
      "ja": "ロング・拡張型-1のための245"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": ">= 5",
      "ja": "＞＝ ５"
    },
    {
      "indent": 3,
      "text": "Extended-Type",
      "ja": "拡張型"
    },
    {
      "indent": 6,
      "text": "The Extended-Type field is one octet. Up-to-date values of this field are specified in the 245.{1-255} RADIUS Attribute Type space, according to the policies and rules described in Section 10. Further definition of this field is given in Section 2.1, above.",
      "ja": "拡張-Typeフィールドは1つのオクテットです。この分野の最新の値は、この分野のさらなる定義は、上記のセクション2.1に記載されている項10に記載のポリシーおよびルールに従って、245 {1-255} RADIUS属性タイプ空間で指定されています。"
    },
    {
      "indent": 3,
      "text": "M (More)",
      "ja": "M（詳細）"
    },
    {
      "indent": 6,
      "text": "The More field is one (1) bit in length and indicates whether or not the current attribute contains \"more\" than 251 octets of data. Further definition of this field is given in Section 2.2, above.",
      "ja": "複数のフィールドは、長さが1ビットであり、現在の属性は、データの251オクテットよりも「より」を含むか否かを示します。この分野のさらなる定義は、上記セクション2.2に記載されています。"
    },
    {
      "indent": 3,
      "text": "Reserved",
      "ja": "予約済み"
    },
    {
      "indent": 6,
      "text": "This field is 7 bits long and is reserved for future use. Implementations MUST set it to zero (0) when encoding an attribute for sending in a packet. The contents SHOULD be ignored on reception.",
      "ja": "このフィールドは、7ビット長で、将来の使用のために予約されています。パケットで送信するための属性を符号化する際の実装（0）はゼロに設定しなければなりません。内容は、受信時に無視されるべきです。"
    },
    {
      "indent": 3,
      "text": "Value",
      "ja": "値"
    },
    {
      "indent": 6,
      "text": "The \"Value\" field is one or more octets.",
      "ja": "「値」フィールドには、一個の以上のオクテットです。"
    },
    {
      "indent": 6,
      "text": "Implementations supporting this specification MUST use the identifier of \"Type.Extended-Type\" to determine the interpretation of the \"Value\" field.",
      "ja": "この仕様をサポートする実装は、「値」フィールドの解釈を決定するために、「Type.Extended型」の識別子を使用しなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.6. Long-Extended-Type-2",
      "section_title": true,
      "ja": "3.6。ロング・拡張型-2"
    },
    {
      "indent": 3,
      "text": "Description",
      "ja": "説明"
    },
    {
      "indent": 6,
      "text": "This attribute encapsulates attributes of the \"Long Extended Type\" format, in the RADIUS Attribute Type space of 246.{1-255}.",
      "ja": "この属性は、246 {1〜255}のRADIUS属性タイプ空間で、「ロング拡張型」形式の属性をカプセル化します。"
    },
    {
      "indent": 3,
      "text": "A summary of the Long-Extended-Type-2 Attribute format is shown below. The fields are transmitted from left to right.",
      "ja": "ロング拡張型a-2属性のフォーマットの概要は以下に示されています。フィールドは左から右に送信されます。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Type      |    Length     | Extended-Type |M|  Reserved   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Value ...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Type",
      "ja": "タイプ"
    },
    {
      "indent": 6,
      "text": "246 for Long-Extended-Type-2",
      "ja": "ロング・拡張型-2のための246"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": ">= 5",
      "ja": "＞＝ ５"
    },
    {
      "indent": 3,
      "text": "Extended-Type",
      "ja": "拡張型"
    },
    {
      "indent": 6,
      "text": "The Extended-Type field is one octet. Up-to-date values of this field are specified in the 246.{1-255} RADIUS Attribute Type space, according to the policies and rules described in Section 10. Further definition of this field is given in Section 2.1, above.",
      "ja": "拡張-Typeフィールドは1つのオクテットです。この分野の最新の値は、この分野のさらなる定義は、上記のセクション2.1に記載されている項10に記載のポリシーおよびルールに従って、246 {1-255} RADIUS属性タイプ空間で指定されています。"
    },
    {
      "indent": 3,
      "text": "M (More)",
      "ja": "M（詳細）"
    },
    {
      "indent": 6,
      "text": "The More field is one (1) bit in length and indicates whether or not the current attribute contains \"more\" than 251 octets of data. Further definition of this field is given in Section 2.2, above.",
      "ja": "複数のフィールドは、長さが1ビットであり、現在の属性は、データの251オクテットよりも「より」を含むか否かを示します。この分野のさらなる定義は、上記セクション2.2に記載されています。"
    },
    {
      "indent": 3,
      "text": "Reserved",
      "ja": "予約済み"
    },
    {
      "indent": 6,
      "text": "This field is 7 bits long and is reserved for future use. Implementations MUST set it to zero (0) when encoding an attribute for sending in a packet. The contents SHOULD be ignored on reception.",
      "ja": "このフィールドは、7ビット長で、将来の使用のために予約されています。パケットで送信するための属性を符号化する際の実装（0）はゼロに設定しなければなりません。内容は、受信時に無視されるべきです。"
    },
    {
      "indent": 3,
      "text": "Value",
      "ja": "値"
    },
    {
      "indent": 6,
      "text": "The \"Value\" field is one or more octets.",
      "ja": "「値」フィールドには、一個の以上のオクテットです。"
    },
    {
      "indent": 6,
      "text": "Implementations supporting this specification MUST use the identifier of \"Type.Extended-Type\" to determine the interpretation of the \"Value\" field.",
      "ja": "この仕様をサポートする実装は、「値」フィールドの解釈を決定するために、「Type.Extended型」の識別子を使用しなければなりません。"
    },
    {
      "indent": 0,
      "text": "4. Vendor-Specific Attributes",
      "section_title": true,
      "ja": "4.ベンダー固有の属性"
    },
    {
      "indent": 3,
      "text": "We define six new attributes that can carry vendor-specific information. We define four (4) attributes of the \"Extended Type\" format, with Type codes (241.26, 242.26, 243.26, 244.26), using the \"evs\" data type. We also define two (2) attributes using \"Long Extended Type\" format, with Type codes (245.26, 246.26), which are of the \"evs\" data type.",
      "ja": "私たちは、ベンダー固有の情報を運ぶことができる6つの新しい属性を定義します。我々は、4つ（4）「EVS」データ型を使用して、タイプコード（241.26、242.26、243.26、244.26）と、「拡張型」の形式の属性を定義します。我々はまた、2つの（2）「EVS」データ型であるタイプコード（245.26、246.26）、と、「長い拡張型」の形式を使用して属性を定義します。"
    },
    {
      "indent": 6,
      "text": "Type.Extended-Type  Name\n------------------  ----\n241.26              Extended-Vendor-Specific-1\n242.26              Extended-Vendor-Specific-2\n243.26              Extended-Vendor-Specific-3\n244.26              Extended-Vendor-Specific-4\n245.26              Extended-Vendor-Specific-5\n246.26              Extended-Vendor-Specific-6",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The rest of this section gives detailed definitions for each Attribute based on the above summary.",
      "ja": "このセクションの残りの部分は、上記の概要に基づいて、各属性の詳細な定義を与えます。"
    },
    {
      "indent": 0,
      "text": "4.1. Extended-Vendor-Specific-1",
      "section_title": true,
      "ja": "4.1。拡張-ベンダー固有-1"
    },
    {
      "indent": 3,
      "text": "Description",
      "ja": "説明"
    },
    {
      "indent": 6,
      "text": "This attribute defines a RADIUS Type Code of 241.26, using the \"evs\" data type.",
      "ja": "この属性は、「EVS」データ型を使用して、241.26のRADIUSタイプコードを定義します。"
    },
    {
      "indent": 3,
      "text": "A summary of the Extended-Vendor-Specific-1 Attribute format is shown below. The fields are transmitted from left to right.",
      "ja": "拡張-ベンダー固有-1項目のフォーマットの概要は以下に示されています。フィールドは左から右に送信されます。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Type      |    Length     | Extended-Type |  Vendor-Id ...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   ... Vendor-Id  (cont)                        |  Vendor-Type  |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Value ....\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Type.Extended-Type",
      "ja": "Type.Extended型"
    },
    {
      "indent": 6,
      "text": "241.26 for Extended-Vendor-Specific-1",
      "section_title": true,
      "ja": "拡張ベンダー固有-1の241.26"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": ">= 9",
      "ja": "＞＝ ９"
    },
    {
      "indent": 3,
      "text": "Vendor-Id",
      "ja": "ベンダーID"
    },
    {
      "indent": 6,
      "text": "The 4 octets of the Vendor-Id field are the Network Management Private Enterprise Code [PEN] of the vendor in network byte order.",
      "ja": "ベンダーIDフィールドの4つのオクテットはネットワークバイトオーダーにベンダーのネットワーク管理プライベートエンタープライズコード[PEN]です。"
    },
    {
      "indent": 3,
      "text": "Vendor-Type",
      "ja": "ベンダータイプ"
    },
    {
      "indent": 6,
      "text": "The Vendor-Type field is one octet. Values are assigned at the sole discretion of the vendor.",
      "ja": "ベンダー-Typeフィールドは1つのオクテットです。値は、ベンダーの裁量で割り当てられています。"
    },
    {
      "indent": 3,
      "text": "Value",
      "ja": "値"
    },
    {
      "indent": 6,
      "text": "The \"Value\" field is one or more octets. The actual format of the information is site or application specific, and a robust implementation SHOULD support the field as undistinguished octets.",
      "ja": "「値」フィールドには、一個の以上のオクテットです。情報の実際のフォーマットは、サイトまたはアプリケーション固有であり、かつ強固な実装が平凡なオクテットとしてフィールドをサポートする必要があります。"
    },
    {
      "indent": 6,
      "text": "The codification of the range of allowed usage of this field is outside the scope of this specification.",
      "ja": "このフィールドの許容使用量の範囲の成文化はこの仕様の範囲外です。"
    },
    {
      "indent": 6,
      "text": "The length of the \"Value\" field is eight (8) less than the value of the Length field.",
      "ja": "「値」フィールドの長さは、長さフィールドの値よりも8個以下です。"
    },
    {
      "indent": 6,
      "text": "Implementations supporting this specification MUST use the identifier of \"Type.Extended-Type.Vendor-Id.Vendor-Type\" to determine the interpretation of the \"Value\" field.",
      "ja": "この仕様をサポートする実装は、「値」フィールドの解釈を決定するために、「Type.Extended-Type.Vendor-Id.Vendor型」の識別子を使用しなければなりません。"
    },
    {
      "indent": 0,
      "text": "4.2. Extended-Vendor-Specific-2",
      "section_title": true,
      "ja": "4.2。拡張-ベンダー固有-2"
    },
    {
      "indent": 3,
      "text": "Description",
      "ja": "説明"
    },
    {
      "indent": 6,
      "text": "This attribute defines a RADIUS Type Code of 242.26, using the \"evs\" data type.",
      "ja": "この属性は、「EVS」データ型を使用して、242.26のRADIUSタイプコードを定義します。"
    },
    {
      "indent": 3,
      "text": "A summary of the Extended-Vendor-Specific-2 Attribute format is shown below. The fields are transmitted from left to right.",
      "ja": "拡張-ベンダー固有-2属性のフォーマットの概要は以下に示されています。フィールドは左から右に送信されます。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Type      |    Length     | Extended-Type |  Vendor-Id ...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   ... Vendor-Id  (cont)                        |  Vendor-Type  |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Value ....\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Type.Extended-Type",
      "ja": "Type.Extended型"
    },
    {
      "indent": 6,
      "text": "242.26 for Extended-Vendor-Specific-2",
      "section_title": true,
      "ja": "拡張ベンダー固有-2の242.26"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": ">= 9",
      "ja": "＞＝ ９"
    },
    {
      "indent": 3,
      "text": "Vendor-Id",
      "ja": "ベンダーID"
    },
    {
      "indent": 6,
      "text": "The 4 octets of the Vendor-Id field are the Network Management Private Enterprise Code [PEN] of the vendor in network byte order.",
      "ja": "ベンダーIDフィールドの4つのオクテットはネットワークバイトオーダーにベンダーのネットワーク管理プライベートエンタープライズコード[PEN]です。"
    },
    {
      "indent": 3,
      "text": "Vendor-Type",
      "ja": "ベンダータイプ"
    },
    {
      "indent": 6,
      "text": "The Vendor-Type field is one octet. Values are assigned at the sole discretion of the vendor.",
      "ja": "ベンダー-Typeフィールドは1つのオクテットです。値は、ベンダーの裁量で割り当てられています。"
    },
    {
      "indent": 3,
      "text": "Value",
      "ja": "値"
    },
    {
      "indent": 6,
      "text": "The \"Value\" field is one or more octets. The actual format of the information is site or application specific, and a robust implementation SHOULD support the field as undistinguished octets.",
      "ja": "「値」フィールドには、一個の以上のオクテットです。情報の実際のフォーマットは、サイトまたはアプリケーション固有であり、かつ強固な実装が平凡なオクテットとしてフィールドをサポートする必要があります。"
    },
    {
      "indent": 6,
      "text": "The codification of the range of allowed usage of this field is outside the scope of this specification.",
      "ja": "このフィールドの許容使用量の範囲の成文化はこの仕様の範囲外です。"
    },
    {
      "indent": 6,
      "text": "The length of the \"Value\" field is eight (8) less than the value of the Length field.",
      "ja": "「値」フィールドの長さは、長さフィールドの値よりも8個以下です。"
    },
    {
      "indent": 6,
      "text": "Implementations supporting this specification MUST use the identifier of \"Type.Extended-Type.Vendor-Id.Vendor-Type\" to determine the interpretation of the \"Value\" field.",
      "ja": "この仕様をサポートする実装は、「値」フィールドの解釈を決定するために、「Type.Extended-Type.Vendor-Id.Vendor型」の識別子を使用しなければなりません。"
    },
    {
      "indent": 0,
      "text": "4.3. Extended-Vendor-Specific-3",
      "section_title": true,
      "ja": "4.3。拡張-ベンダー固有-3"
    },
    {
      "indent": 3,
      "text": "Description",
      "ja": "説明"
    },
    {
      "indent": 6,
      "text": "This attribute defines a RADIUS Type Code of 243.26, using the \"evs\" data type.",
      "ja": "この属性は、「EVS」データ型を使用して、243.26のRADIUSタイプコードを定義します。"
    },
    {
      "indent": 3,
      "text": "A summary of the Extended-Vendor-Specific-3 Attribute format is shown below. The fields are transmitted from left to right.",
      "ja": "拡張-ベンダー固有-3属性のフォーマットの概要は以下に示されています。フィールドは左から右に送信されます。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Type      |    Length     | Extended-Type |  Vendor-Id ...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   ... Vendor-Id  (cont)                        |  Vendor-Type  |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Value ....\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Type.Extended-Type",
      "ja": "Type.Extended型"
    },
    {
      "indent": 6,
      "text": "243.26 for Extended-Vendor-Specific-3",
      "section_title": true,
      "ja": "拡張ベンダー固有-3の243.26"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": ">= 9",
      "ja": "＞＝ ９"
    },
    {
      "indent": 3,
      "text": "Vendor-Id",
      "ja": "ベンダーID"
    },
    {
      "indent": 6,
      "text": "The 4 octets of the Vendor-Id field are the Network Management Private Enterprise Code [PEN] of the vendor in network byte order.",
      "ja": "ベンダーIDフィールドの4つのオクテットはネットワークバイトオーダーにベンダーのネットワーク管理プライベートエンタープライズコード[PEN]です。"
    },
    {
      "indent": 3,
      "text": "Vendor-Type",
      "ja": "ベンダータイプ"
    },
    {
      "indent": 6,
      "text": "The Vendor-Type field is one octet. Values are assigned at the sole discretion of the vendor.",
      "ja": "ベンダー-Typeフィールドは1つのオクテットです。値は、ベンダーの裁量で割り当てられています。"
    },
    {
      "indent": 3,
      "text": "Value",
      "ja": "値"
    },
    {
      "indent": 6,
      "text": "The \"Value\" field is one or more octets. The actual format of the information is site or application specific, and a robust implementation SHOULD support the field as undistinguished octets.",
      "ja": "「値」フィールドには、一個の以上のオクテットです。情報の実際のフォーマットは、サイトまたはアプリケーション固有であり、かつ強固な実装が平凡なオクテットとしてフィールドをサポートする必要があります。"
    },
    {
      "indent": 6,
      "text": "The codification of the range of allowed usage of this field is outside the scope of this specification.",
      "ja": "このフィールドの許容使用量の範囲の成文化はこの仕様の範囲外です。"
    },
    {
      "indent": 6,
      "text": "The length of the \"Value\" field is eight (8) less than the value of the Length field.",
      "ja": "「値」フィールドの長さは、長さフィールドの値よりも8個以下です。"
    },
    {
      "indent": 6,
      "text": "Implementations supporting this specification MUST use the identifier of \"Type.Extended-Type.Vendor-Id.Vendor-Type\" to determine the interpretation of the \"Value\" field.",
      "ja": "この仕様をサポートする実装は、「値」フィールドの解釈を決定するために、「Type.Extended-Type.Vendor-Id.Vendor型」の識別子を使用しなければなりません。"
    },
    {
      "indent": 0,
      "text": "4.4. Extended-Vendor-Specific-4",
      "section_title": true,
      "ja": "4.4。拡張-ベンダー固有-4"
    },
    {
      "indent": 3,
      "text": "Description",
      "ja": "説明"
    },
    {
      "indent": 6,
      "text": "This attribute defines a RADIUS Type Code of 244.26, using the \"evs\" data type.",
      "ja": "この属性は、「EVS」データ型を使用して、244.26のRADIUSタイプコードを定義します。"
    },
    {
      "indent": 3,
      "text": "A summary of the Extended-Vendor-Specific-4 Attribute format is shown below. The fields are transmitted from left to right.",
      "ja": "拡張-ベンダー固有-4属性のフォーマットの概要は以下に示されています。フィールドは左から右に送信されます。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Type      |    Length     | Extended-Type |  Vendor-Id ...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   ... Vendor-Id  (cont)                        |  Vendor-Type  |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Value ....\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Type.Extended-Type",
      "ja": "Type.Extended型"
    },
    {
      "indent": 6,
      "text": "244.26 for Extended-Vendor-Specific-4",
      "section_title": true,
      "ja": "拡張ベンダー固有-4 244.26"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": ">= 9",
      "ja": "＞＝ ９"
    },
    {
      "indent": 3,
      "text": "Vendor-Id",
      "ja": "ベンダーID"
    },
    {
      "indent": 6,
      "text": "The 4 octets of the Vendor-Id field are the Network Management Private Enterprise Code [PEN] of the vendor in network byte order.",
      "ja": "ベンダーIDフィールドの4つのオクテットはネットワークバイトオーダーにベンダーのネットワーク管理プライベートエンタープライズコード[PEN]です。"
    },
    {
      "indent": 3,
      "text": "Vendor-Type",
      "ja": "ベンダータイプ"
    },
    {
      "indent": 6,
      "text": "The Vendor-Type field is one octet. Values are assigned at the sole discretion of the vendor.",
      "ja": "ベンダー-Typeフィールドは1つのオクテットです。値は、ベンダーの裁量で割り当てられています。"
    },
    {
      "indent": 3,
      "text": "Value",
      "ja": "値"
    },
    {
      "indent": 6,
      "text": "The \"Value\" field is one or more octets. The actual format of the information is site or application specific, and a robust implementation SHOULD support the field as undistinguished octets.",
      "ja": "「値」フィールドには、一個の以上のオクテットです。情報の実際のフォーマットは、サイトまたはアプリケーション固有であり、かつ強固な実装が平凡なオクテットとしてフィールドをサポートする必要があります。"
    },
    {
      "indent": 6,
      "text": "The codification of the range of allowed usage of this field is outside the scope of this specification.",
      "ja": "このフィールドの許容使用量の範囲の成文化はこの仕様の範囲外です。"
    },
    {
      "indent": 6,
      "text": "The length of the \"Value\" field is eight (8) less than the value of the Length field.",
      "ja": "「値」フィールドの長さは、長さフィールドの値よりも8個以下です。"
    },
    {
      "indent": 6,
      "text": "Implementations supporting this specification MUST use the identifier of \"Type.Extended-Type.Vendor-Id.Vendor-Type\" to determine the interpretation of the \"Value\" field.",
      "ja": "この仕様をサポートする実装は、「値」フィールドの解釈を決定するために、「Type.Extended-Type.Vendor-Id.Vendor型」の識別子を使用しなければなりません。"
    },
    {
      "indent": 0,
      "text": "4.5. Extended-Vendor-Specific-5",
      "section_title": true,
      "ja": "4.5。拡張-ベンダー固有-5"
    },
    {
      "indent": 3,
      "text": "Description",
      "ja": "説明"
    },
    {
      "indent": 6,
      "text": "This attribute defines a RADIUS Type Code of 245.26, using the \"evs\" data type.",
      "ja": "この属性は、「EVS」データ型を使用して、245.26のRADIUSタイプコードを定義します。"
    },
    {
      "indent": 3,
      "text": "A summary of the Extended-Vendor-Specific-5 Attribute format is shown below. The fields are transmitted from left to right.",
      "ja": "拡張-ベンダー固有-5属性のフォーマットの概要は以下に示されています。フィールドは左から右に送信されます。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Type      |    Length     | Extended-Type |M|  Reserved   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                            Vendor-Id                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Vendor-Type   |  Value ....\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Type.Extended-Type",
      "ja": "Type.Extended型"
    },
    {
      "indent": 6,
      "text": "245.26 for Extended-Vendor-Specific-5",
      "section_title": true,
      "ja": "拡張-ベンダー固有-5のための245.26"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": ">= 10 (first fragment) >= 5 (subsequent fragments)",
      "ja": "> = 10（最初の断片）> = 5（後続の断片）"
    },
    {
      "indent": 6,
      "text": "When a VSA is fragmented across multiple Attributes, only the first Attribute contains the Vendor-Id and Vendor-Type fields. Subsequent Attributes contain fragments of the \"Value\" field only.",
      "ja": "VSAは、複数の属性間で断片化された場合、最初の属性は、ベンダーIDとベンダータイプのフィールドが含まれています。後続の属性は、唯一の「価値」フィールドの断片を含んでいます。"
    },
    {
      "indent": 3,
      "text": "M (More)",
      "ja": "M（詳細）"
    },
    {
      "indent": 6,
      "text": "The More field is one (1) bit in length and indicates whether or not the current attribute contains \"more\" than 251 octets of data. Further definition of this field is given in Section 2.2, above.",
      "ja": "複数のフィールドは、長さが1ビットであり、現在の属性は、データの251オクテットよりも「より」を含むか否かを示します。この分野のさらなる定義は、上記セクション2.2に記載されています。"
    },
    {
      "indent": 3,
      "text": "Reserved",
      "ja": "予約済み"
    },
    {
      "indent": 6,
      "text": "This field is 7 bits long and is reserved for future use. Implementations MUST set it to zero (0) when encoding an attribute for sending in a packet. The contents SHOULD be ignored on reception.",
      "ja": "このフィールドは、7ビット長で、将来の使用のために予約されています。パケットで送信するための属性を符号化する際の実装（0）はゼロに設定しなければなりません。内容は、受信時に無視されるべきです。"
    },
    {
      "indent": 3,
      "text": "Vendor-Id",
      "ja": "ベンダーID"
    },
    {
      "indent": 6,
      "text": "The 4 octets of the Vendor-Id field are the Network Management Private Enterprise Code [PEN] of the vendor in network byte order.",
      "ja": "ベンダーIDフィールドの4つのオクテットはネットワークバイトオーダーにベンダーのネットワーク管理プライベートエンタープライズコード[PEN]です。"
    },
    {
      "indent": 3,
      "text": "Vendor-Type",
      "ja": "ベンダータイプ"
    },
    {
      "indent": 6,
      "text": "The Vendor-Type field is one octet. Values are assigned at the sole discretion of the vendor.",
      "ja": "ベンダー-Typeフィールドは1つのオクテットです。値は、ベンダーの裁量で割り当てられています。"
    },
    {
      "indent": 3,
      "text": "Value",
      "ja": "値"
    },
    {
      "indent": 6,
      "text": "The \"Value\" field is one or more octets. The actual format of the information is site or application specific, and a robust implementation SHOULD support the field as undistinguished octets.",
      "ja": "「値」フィールドには、一個の以上のオクテットです。情報の実際のフォーマットは、サイトまたはアプリケーション固有であり、かつ強固な実装が平凡なオクテットとしてフィールドをサポートする必要があります。"
    },
    {
      "indent": 6,
      "text": "The codification of the range of allowed usage of this field is outside the scope of this specification.",
      "ja": "このフィールドの許容使用量の範囲の成文化はこの仕様の範囲外です。"
    },
    {
      "indent": 6,
      "text": "Implementations supporting this specification MUST use the identifier of \"Type.Extended-Type.Vendor-Id.Vendor-Type\" to determine the interpretation of the \"Value\" field.",
      "ja": "この仕様をサポートする実装は、「値」フィールドの解釈を決定するために、「Type.Extended-Type.Vendor-Id.Vendor型」の識別子を使用しなければなりません。"
    },
    {
      "indent": 0,
      "text": "4.6. Extended-Vendor-Specific-6",
      "section_title": true,
      "ja": "4.6。拡張-ベンダー固有-6"
    },
    {
      "indent": 3,
      "text": "Description",
      "ja": "説明"
    },
    {
      "indent": 6,
      "text": "This attribute defines a RADIUS Type Code of 246.26, using the \"evs\" data type.",
      "ja": "この属性は、「EVS」データ型を使用して、246.26のRADIUSタイプコードを定義します。"
    },
    {
      "indent": 3,
      "text": "A summary of the Extended-Vendor-Specific-6 Attribute format is shown below. The fields are transmitted from left to right.",
      "ja": "拡張-ベンダー固有-6属性のフォーマットの概要は以下に示されています。フィールドは左から右に送信されます。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Type      |    Length     | Extended-Type |M|  Reserved   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                            Vendor-Id                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Vendor-Type   |  Value ....\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Type.Extended-Type",
      "ja": "Type.Extended型"
    },
    {
      "indent": 6,
      "text": "246.26 for Extended-Vendor-Specific-6",
      "section_title": true,
      "ja": "拡張ベンダー固有-6 246.26"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": ">= 10 (first fragment) >= 5 (subsequent fragments)",
      "ja": "> = 10（最初の断片）> = 5（後続の断片）"
    },
    {
      "indent": 6,
      "text": "When a VSA is fragmented across multiple Attributes, only the first Attribute contains the Vendor-Id and Vendor-Type fields. Subsequent Attributes contain fragments of the \"Value\" field only.",
      "ja": "VSAは、複数の属性間で断片化された場合、最初の属性は、ベンダーIDとベンダータイプのフィールドが含まれています。後続の属性は、唯一の「価値」フィールドの断片を含んでいます。"
    },
    {
      "indent": 3,
      "text": "M (More)",
      "ja": "M（詳細）"
    },
    {
      "indent": 6,
      "text": "The More field is one (1) bit in length and indicates whether or not the current attribute contains \"more\" than 251 octets of data. Further definition of this field is given in Section 2.2, above.",
      "ja": "複数のフィールドは、長さが1ビットであり、現在の属性は、データの251オクテットよりも「より」を含むか否かを示します。この分野のさらなる定義は、上記セクション2.2に記載されています。"
    },
    {
      "indent": 3,
      "text": "Reserved",
      "ja": "予約済み"
    },
    {
      "indent": 6,
      "text": "This field is 7 bits long and is reserved for future use. Implementations MUST set it to zero (0) when encoding an attribute for sending in a packet. The contents SHOULD be ignored on reception.",
      "ja": "このフィールドは、7ビット長で、将来の使用のために予約されています。パケットで送信するための属性を符号化する際の実装（0）はゼロに設定しなければなりません。内容は、受信時に無視されるべきです。"
    },
    {
      "indent": 3,
      "text": "Vendor-Id",
      "ja": "ベンダーID"
    },
    {
      "indent": 6,
      "text": "The 4 octets of the Vendor-Id field are the Network Management Private Enterprise Code [PEN] of the vendor in network byte order.",
      "ja": "ベンダーIDフィールドの4つのオクテットはネットワークバイトオーダーにベンダーのネットワーク管理プライベートエンタープライズコード[PEN]です。"
    },
    {
      "indent": 3,
      "text": "Vendor-Type",
      "ja": "ベンダータイプ"
    },
    {
      "indent": 6,
      "text": "The Vendor-Type field is one octet. Values are assigned at the sole discretion of the vendor.",
      "ja": "ベンダー-Typeフィールドは1つのオクテットです。値は、ベンダーの裁量で割り当てられています。"
    },
    {
      "indent": 3,
      "text": "Value",
      "ja": "値"
    },
    {
      "indent": 6,
      "text": "The \"Value\" field is one or more octets. The actual format of the information is site or application specific, and a robust implementation SHOULD support the field as undistinguished octets.",
      "ja": "「値」フィールドには、一個の以上のオクテットです。情報の実際のフォーマットは、サイトまたはアプリケーション固有であり、かつ強固な実装が平凡なオクテットとしてフィールドをサポートする必要があります。"
    },
    {
      "indent": 6,
      "text": "The codification of the range of allowed usage of this field is outside the scope of this specification.",
      "ja": "このフィールドの許容使用量の範囲の成文化はこの仕様の範囲外です。"
    },
    {
      "indent": 6,
      "text": "Implementations supporting this specification MUST use the identifier of \"Type.Extended-Type.Vendor-Id.Vendor-Type\" to determine the interpretation of the \"Value\" field.",
      "ja": "この仕様をサポートする実装は、「値」フィールドの解釈を決定するために、「Type.Extended-Type.Vendor-Id.Vendor型」の識別子を使用しなければなりません。"
    },
    {
      "indent": 0,
      "text": "5. Compatibility with Traditional RADIUS",
      "section_title": true,
      "ja": "伝統RADIUS 5.互換性"
    },
    {
      "indent": 3,
      "text": "There are a number of potential compatibility issues with traditional RADIUS, as defined in [RFC6158] and earlier. This section describes them.",
      "ja": "先に[RFC6158]で定義されたとして、伝統的なRADIUSによる潜在的な互換性の問題の数があります。このセクションでは、それらを説明します。"
    },
    {
      "indent": 0,
      "text": "5.1. Attribute Allocation",
      "section_title": true,
      "ja": "5.1。割り当ての属性"
    },
    {
      "indent": 3,
      "text": "Some vendors have used Attribute Type codes from the \"Reserved\" space as part of vendor-defined dictionaries. This practice is considered antisocial behavior, as noted in [RFC6158]. These vendor definitions conflict with the Attributes in the RADIUS Attribute Type space. The conflicting definitions may make it difficult for implementations to support both those Vendor Attributes, and the new Extended Attribute formats.",
      "ja": "一部のベンダーは、ベンダー定義の辞書の一環として、「予約済み」空間からの属性タイプコードを使用していました。 [RFC6158]で述べたようにこのような行為は、反社会的行動と考えられています。これらのベンダーはRADIUS属性タイプ空間の属性との競合を定義します。競合の定義は、それが困難な実装は、これらのベンダーの属性、および新しい拡張属性フォーマットの両方をサポートするために作ることがあります。"
    },
    {
      "indent": 3,
      "text": "We RECOMMEND that RADIUS client and server implementations delete all references to these improperly defined attributes. Failing that, we RECOMMEND that RADIUS server implementations have a per-client configurable flag that indicates which type of attributes are being sent from the client. If the flag is set to \"Non-Standard Attributes\", the conflicting attributes can be interpreted as being improperly defined Vendor-Specific Attributes. If the flag is set to",
      "ja": "私たちは、RADIUSクライアントとサーバの実装はこれらの不適切に定義された属性への参照をすべて削除することをお勧めします。その失敗、我々は、RADIUSサーバの実装は、属性のタイプがクライアントから送信されているかを示しているクライアントごとの設定可能なフラグを持っていることをお勧めします。フラグは「非標準属性」に設定されている場合は、競合する属性が不適切に定義されたベンダー固有の属性であると解釈することができます。フラグが設定されている場合"
    },
    {
      "indent": 3,
      "text": "\"IETF Attributes\", the Attributes MUST be interpreted as being of the Extended Attributes format. The default SHOULD be to interpret the Attributes as being of the Extended Attributes format.",
      "ja": "「IETF属性」は、属性は、拡張属性のフォーマットであると解釈されなければなりません。デフォルトでは、拡張属性形式のものとして属性を解釈するのであるべきです。"
    },
    {
      "indent": 3,
      "text": "Other methods of determining how to decode the Attributes into a \"correct\" form are NOT RECOMMENDED. Those methods are likely to be fragile and prone to error.",
      "ja": "「正しい」フォームに属性をデコードする方法を決定する他の方法が推奨されていません。これらの方法は脆弱でエラーを起こしやすい可能性が高いです。"
    },
    {
      "indent": 3,
      "text": "We RECOMMEND that RADIUS server implementations reuse the above flag to determine which types of attributes to send in a reply message. If the request is expected to contain the improperly defined attributes, the reply SHOULD NOT contain Extended Attributes. If the request is expected to contain Extended Attributes, the reply MUST NOT contain the improper Attributes.",
      "ja": "我々は、RADIUSサーバの実装は、属性の種類が応答メッセージで送信するかを決定するために上記フラグを再利用することをお勧めします。要求が正しく定義された属性を含むことが期待されている場合は、応答は拡張属性を含めることはできません。要求が拡張属性を含むことが期待されている場合は、応答は不適切な属性を含めることはできません。"
    },
    {
      "indent": 3,
      "text": "RADIUS clients will have fewer issues than servers. Clients MUST NOT send improperly defined Attributes in a request. For replies, clients MUST interpret attributes as being of the Extended Attributes format, instead of the improper definitions. These requirements impose no change in the RADIUS specifications, as such usage by vendors has always been in conflict with the standard requirements and the standards process.",
      "ja": "RADIUSクライアントは、サーバよりも少ない問題を持っています。クライアントは、要求に不適切に定義された属性を送ってはいけません。回答の場合、クライアントではなく、不適切な定義で、拡張属性形式のものとしての属性を解釈する必要があります。ベンダーによって、このような使い方は常に標準的な要件と標準化プロセスと競合してきたように、これらの要件は、RADIUSの仕様に変化を課していません。"
    },
    {
      "indent": 3,
      "text": "Existing clients that send these improperly defined attributes usually have a configuration setting that can disable this behavior. We RECOMMEND that vendors ship products with the default set to \"disabled\". We RECOMMEND that administrators set this flag to \"disabled\" on all equipment that they manage.",
      "ja": "これらの不適切に定義された属性を送る既存のクライアントは通常、この動作を無効にすることができ、構成設定を持っています。私たちは「無効」に設定されたデフォルトを持つベンダーの船製品ことをお勧めします。私たちは、管理者が管理するすべての機器に「無効」に、このフラグを設定することをお勧めします。"
    },
    {
      "indent": 0,
      "text": "5.2. Proxy Servers",
      "section_title": true,
      "ja": "5.2。プロキシサーバ"
    },
    {
      "indent": 3,
      "text": "RADIUS proxy servers will need to forward Attributes having the new format, even if they do not implement support for the encoding and decoding of those attributes. We remind implementers of the following text in [RFC2865] Section 2.3:",
      "ja": "彼らはこれらの属性のエンコードとデコードのサポートを実装していない場合でも、RADIUSプロキシサーバは、新しい形式の属性を転送する必要があります。私たちは、[RFC2865]セクション2.3に次のテキストの実装を思い出させます："
    },
    {
      "indent": 6,
      "text": "The forwarding server MUST NOT change the order of any attributes of the same type, including Proxy-State.",
      "ja": "転送サーバーがプロキシ状態を含む同じタイプのすべての属性の順序を変更しないでください。"
    },
    {
      "indent": 3,
      "text": "This requirement solves some of the issues related to proxying of the new format, but not all. The reason is that proxy servers are permitted to examine the contents of the packets that they forward. Many proxy implementations not only examine the Attributes, but they refuse to forward attributes that they do not understand (i.e., attributes for which they have no local dictionary definitions).",
      "ja": "この要件は、すべてではありませんが、新しい形式のプロキシに関連する問題の一部を解決します。その理由は、そのプロキシサーバは、それらが転送するパケットの内容を検討することが許可されています。多くのプロキシの実装だけでなく、属性を調べるが、彼らは、彼らが理解していない属性（すなわち、彼らは地元の辞書の定義を持っていないどの属性）を転送することを拒否します。"
    },
    {
      "indent": 3,
      "text": "This practice is NOT RECOMMENDED. Proxy servers SHOULD forward attributes, even attributes that they do not understand or that are not in a local dictionary. When forwarded, these attributes SHOULD be sent verbatim, with no modifications or changes. This requirement includes \"invalid attributes\", as there may be some other system in the network that understands them.",
      "ja": "このような行為はお勧めしません。プロキシサーバーも、彼らは理解していないか、そのローカル辞書にないかという属性、属性を転送する必要があります。転送された場合、これらの属性は、修正や変更なしで、そのまま送ってください。それらを理解し、ネットワーク内の他のシステムがあるかもしれないとして、この要件は、「無効な属性」が含まれます。"
    },
    {
      "indent": 3,
      "text": "The only exception to this recommendation is when local site policy dictates that filtering of attributes has to occur. For example, a filter at a visited network may require removal of certain authorization rules that apply to the home network but not to the visited network. This filtering can sometimes be done even when the contents of the Attributes are unknown, such as when all Vendor-Specific Attributes are designated for removal.",
      "ja": "ローカルサイトのポリシー属性のフィルタリングが発生していることを指示したときに、この勧告への唯一の例外はあります。例えば、訪問先ネットワークにおけるフィルタは、ホームネットワークにではなく、訪問先ネットワークに適用される特定の認可規則の除去が必要な場合があります。属性の内容が不明な場合でも、このフィルタリングは、時々、このようなすべてのベンダー固有の属性を除去するために指定されているときのように、行うことができます。"
    },
    {
      "indent": 3,
      "text": "As seen during testing performed in 2010 via the EDUcation ROAMing (EDUROAM) service (A. DeKok, unpublished data), many proxies do not follow these practices for unknown Attributes. Some proxies filter out unknown attributes or attributes that have unexpected lengths (24%, 17/70), some truncate the Attributes to the \"expected\" length (11%, 8/70), some discard the request entirely (1%, 1/70), and the rest (63%, 44/70) follow the recommended practice of passing the Attributes verbatim. It will be difficult to widely use the Extended Attributes format until all non-conformant proxies are fixed. We therefore RECOMMEND that all proxies that do not support the Extended Attributes (241 through 246) define them as being of data type \"string\" and delete all other local definitions for those attributes.",
      "ja": "教育ローミング（EDUROAM）サービス（A. DeKok、未発表データ）を経て、2010年に実施したテストの間に見られるように、多くのプロキシは、未知の属性のためにこれらの慣行に従っていません。いくつかのプロキシは、1％、1いくつかは、「期待」の長さ（11％、70分の8）に属性を切り捨てる、いくつかは（完全にリクエストを破棄し、予想外の長さ（24％、70分の17）を有し、未知の属性または属性をフィルタリング/ 70）、残り（63％、70分の44）逐語的に属性を渡すの推奨プラクティスに従ってください。すべての非準拠のプロキシが固定されるまで、幅広く拡張属性の形式を使用するのは難しいだろう。したがって、我々は、拡張属性（246を通じて241）をサポートしていないすべてのプロキシが、データ型「string」のものとしてそれらを定義し、それらの属性のために他のすべてのローカル定義を削除することをお勧めします。"
    },
    {
      "indent": 3,
      "text": "This last change should enable wider usage of the Extended Attributes format.",
      "ja": "この最後の変更は、拡張属性フォーマットのより広い使用を有効にする必要があります。"
    },
    {
      "indent": 0,
      "text": "6. Guidelines",
      "section_title": true,
      "ja": "6.ガイドライン"
    },
    {
      "indent": 3,
      "text": "This specification proposes a number of changes to RADIUS and therefore requires a set of guidelines, as has been done in [RFC6158]. These guidelines include suggestions related to design, interaction with IANA, usage, and implementation of attributes using the new formats.",
      "ja": "この仕様は、RADIUSへの変更の数を提案し、したがって、[RFC6158]で行われているように、ガイドラインのセットを必要とします。これらのガイドラインは、新しいフォーマットを使用して属性のIANA、使用方法、および実装との相互作用を設計するために関連する提案が含まれています。"
    },
    {
      "indent": 1,
      "text": "6.1. Updates to",
      "section_title": true,
      "ja": "6.1。への更新"
    },
    {
      "indent": 3,
      "text": "This specification updates [RFC6158] by adding the data types \"evs\", \"tlv\", and \"integer64\"; defining them to be \"basic\" data types; and permitting their use subject to the restrictions outlined below.",
      "ja": "データタイプ「EVS」、「TLV」、および「integer64」を追加することにより本明細書の更新[RFC6158]。 「基本的な」データ型であることを、それらを定義します。そして以下の通り制限の対象とその使用を許可します。"
    },
    {
      "indent": 3,
      "text": "The recommendations for the use of the new data types and Attribute formats are given below.",
      "ja": "新しいデータ型と属性のフォーマットの使用のための提言は以下の通りです。"
    },
    {
      "indent": 0,
      "text": "6.2. Guidelines for Simple Data Types",
      "section_title": true,
      "ja": "6.2。単純データ型のためのガイドライン"
    },
    {
      "indent": 3,
      "text": "[RFC6158] Section A.2.1 says in part:",
      "ja": "[RFC6158]セクションA.2.1は、部分的に述べています："
    },
    {
      "indent": 3,
      "text": "* Unsigned integers of size other than 32 bits. SHOULD be replaced by an unsigned integer of 32 bits. There is insufficient justification to define a new size of integer.",
      "ja": "* 32ビット以外のサイズの符号なし整数。 32ビットの符号なし整数に置き換えてください。整数の新しいサイズを定義するのに十分な正当性があります。"
    },
    {
      "indent": 3,
      "text": "We update that specification to permit unsigned integers of 64 bits, for the reasons defined above in Section 2.5. The updated text is as follows:",
      "ja": "我々は、セクション2.5で上記で定義の理由から、64ビットの符号なし整数を可能にするために、その仕様を更新します。次のように更新されたテキストは、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "* Unsigned integers of size other than 32 or 64 bits. SHOULD be replaced by an unsigned integer of 32 or 64 bits. There is insufficient justification to define a new size of integer.",
      "ja": "* 32または64ビット以外のサイズの符号なし整数。 32ビットまたは64ビットの符号なし整数に置き換えてください。整数の新しいサイズを定義するのに十分な正当性があります。"
    },
    {
      "indent": 3,
      "text": "That section later continues with the following list item:",
      "ja": "そのセクションでは、後に、次のリスト項目を続行します："
    },
    {
      "indent": 3,
      "text": "* Nested attribute-value pairs (AVPs). Attributes should be defined in a flat typespace.",
      "ja": "*ネストされた属性値ペア（AVPの）。属性は、フラットtypespaceで定義する必要があります。"
    },
    {
      "indent": 3,
      "text": "We update that specification to permit nested TLVs, as defined in this document:",
      "ja": "私たちは、この文書で定義されるように、ネストされたTLVを可能にするために、その仕様を更新します。"
    },
    {
      "indent": 3,
      "text": "* Nested attribute-value pairs (AVPs) using the extended Attribute format MAY be used. All other nested AVP or TLV formats MUST NOT be used.",
      "ja": "*拡張属性フォーマットを使用して、ネストされた属性値ペア（AVPの）を使用することができます。その他のすべてのネストされたAVPまたはTLV形式を使用してはいけません。"
    },
    {
      "indent": 3,
      "text": "The [RFC6158] recommendations for \"basic\" data types apply to the three types listed above. All other recommendations given in [RFC6158] for \"basic\" data types remain unchanged.",
      "ja": "「基本的な」データ型の[RFC6158]勧告は上記の3つのタイプに適用されます。 「基本的な」データ型のために[RFC6158]で与えられた他のすべての勧告は変更されません。"
    },
    {
      "indent": 0,
      "text": "6.3. Guidelines for Complex Data Types",
      "section_title": true,
      "ja": "6.3。複雑なデータ型のためのガイドライン"
    },
    {
      "indent": 3,
      "text": "[RFC6158] Section 2.1 says:",
      "ja": "[RFC6158]セクション2.1は述べています："
    },
    {
      "indent": 6,
      "text": "Complex data types MAY be used in situations where they reduce complexity in non-RADIUS systems or where using the basic data types would be awkward (such as where grouping would be required in order to link related attributes).",
      "ja": "複合データ型は、それらが非RADIUSシステムに複雑さを軽減又は基本データ型を使用して（例えば、グループ化は関連の属性をリンクするために必要とされる場合など）、厄介であろう状況で使用されるかもしれません。"
    },
    {
      "indent": 3,
      "text": "Since the extended Attribute format allows for grouping of complex types via TLVs, the guidelines for complex data types need to be updated as follows:",
      "ja": "拡張属性フォーマットはTLVを介して、複合型のグループ化を可能にしているので、複雑なデータ型のためのガイドラインは、次のように更新する必要があります。"
    },
    {
      "indent": 6,
      "text": "[RFC6158], Section 3.2.4, describes situations in which complex data types might be appropriate. They SHOULD NOT be used even in those situations, without careful consideration of the described limitations. In all other cases not covered by the complex data type exceptions, complex data types MUST NOT be used. Instead, complex data types MUST be decomposed into TLVs.",
      "ja": "[RFC6158]、セクション3.2.4は、複合データ型が適切である可能性のある状況を説明しています。彼らは、説明の限界を慎重に考慮せずに、でもそのような状況では使用しないでください。複合データ型の例外によってカバーされていない他のすべてのケースでは、複雑なデータ型を使用してはいけません。代わりに、複雑なデータ型は、TLVのに分解されなければなりません。"
    },
    {
      "indent": 3,
      "text": "The checklist in [RFC6158] Appendix A.2.2 is similarly updated to add a new requirement at the top of that section, as follows:",
      "ja": "次のように[RFC6158]の付録A.2.2でのチェックリストは、同様に、そのセクションの上部に新しい要件を追加するために更新されます。"
    },
    {
      "indent": 6,
      "text": "Does the Attribute",
      "ja": "属性をい"
    },
    {
      "indent": 6,
      "text": "* define a complex type that can be represented via TLVs?",
      "ja": "* TLVを経由して表現することができる複合型を定義しますか？"
    },
    {
      "indent": 6,
      "text": "If so, this data type MUST be represented via TLVs.",
      "ja": "もしそうなら、このデータ型は、TLVを経由して表現されなければなりません。"
    },
    {
      "indent": 3,
      "text": "Note that this requirement does not override [RFC6158] Appendix A.1, which permits the transport of complex types in certain situations.",
      "ja": "この要件は、特定の状況で複合型の輸送を可能にする[RFC6158]付録A.1をオーバーライドしないことに留意されたいです。"
    },
    {
      "indent": 3,
      "text": "All other recommendations given in [RFC6158] for \"complex\" data types remain unchanged.",
      "ja": "「複合体」のデータ型に[RFC6158]で与えられた他のすべての勧告は変更されません。"
    },
    {
      "indent": 0,
      "text": "6.4. Design Guidelines for the New Types",
      "section_title": true,
      "ja": "6.4。新しいタイプのための設計ガイドライン"
    },
    {
      "indent": 3,
      "text": "This section gives design guidelines for specifications defining attributes using the new format. The items listed below are not exhaustive. As experience is gained with the new formats, later specifications may define additional guidelines.",
      "ja": "このセクションでは、新しい形式を使用して属性を定義する仕様のための設計指針を与えます。以下の項目が網羅しているわけではありません。経験は新しいフォーマットで得られるとして、後に仕様が追加のガイドラインを定義することもできます。"
    },
    {
      "indent": 3,
      "text": "* The data type \"evs\" MUST NOT be used for standard RADIUS Attributes, or for TLVs, or for VSAs.",
      "ja": "*データ型「EVSは、」標準のRADIUS属性のため、またはTLVのために、またはVSAのために使用してはいけません。"
    },
    {
      "indent": 3,
      "text": "* The data type TLV SHOULD NOT be used for standard RADIUS attributes.",
      "ja": "*データ型TLVは、標準のRADIUS属性には使用しないでください。"
    },
    {
      "indent": 3,
      "text": "* [RFC2866] \"tagged\" attributes MUST NOT be defined in the Extended-Type space. The \"tlv\" data type should be used instead to group attributes.",
      "ja": "* [RFC2866]は、「タグ付け」属性は、拡張型空間で定義されてはなりません。 「TLV」データ型は、属性グループに代わりに使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "* The \"integer64\" data type MAY be used in any RADIUS attribute. The use of 64-bit integers was not recommended in [RFC6158], but their utility is now evident.",
      "ja": "*「integer64」データ型は、任意のRADIUS属性で使用されるかもしれません。 64ビット整数の使用は[RFC6158]で推奨されていなかったが、その有用性は今明らかです。"
    },
    {
      "indent": 3,
      "text": "* Any attribute that is allocated from the long extended space of data type \"text\", \"string\", or \"tlv\" can potentially carry more than 251 octets of data. Specifications defining such attributes SHOULD define a maximum length to guide implementations.",
      "ja": "*データタイプ「テキスト」、「文字列」、または「TLV」の長い延長空間から割り当てられた任意の属性は、潜在的にデータの以上251個のオクテットを運ぶことができます。そのような属性を定義する仕様の実装を導くために最大の長さを定義する必要があります。"
    },
    {
      "indent": 3,
      "text": "All other recommendations given in [RFC6158] for attribute design guidelines apply to attributes using the short extended space and long extended space.",
      "ja": "属性の設計ガイドラインのために[RFC6158]で与えられた他のすべての推奨事項は、短い拡張スペースと長い拡張スペースを使用して属性に適用されます。"
    },
    {
      "indent": 0,
      "text": "6.5. TLV Guidelines",
      "section_title": true,
      "ja": "6.5。 TLVのガイドライン"
    },
    {
      "indent": 3,
      "text": "The following items give design guidelines for specifications using TLVs.",
      "ja": "以下の項目は、TLVを使用して仕様の設計指針を与えます。"
    },
    {
      "indent": 3,
      "text": "* When multiple Attributes are intended to be grouped or managed together, the use of TLVs to group related attributes is RECOMMENDED.",
      "ja": "複数の属性をまとめてグループ化または管理することが意図されている*場合は、グループ関連の属性へのTLVの使用が推奨されます。"
    },
    {
      "indent": 3,
      "text": "* More than 4 layers (depth) of TLV nesting is NOT RECOMMENDED.",
      "ja": "* TLVネスティングの以上4層（深さ）が推奨されません。"
    },
    {
      "indent": 3,
      "text": "* Interpretation of an attribute depends only on its type definition (e.g., Type.Extended-Type.TLV-Type) and not on its encoding or location in the RADIUS packet.",
      "ja": "*属性の解釈は、RADIUSパケット内の符号化または場所にのみ、その型定義（例えば、Type.Extended-Type.TLVタイプ）に依存しません。"
    },
    {
      "indent": 3,
      "text": "* Where a group of TLVs is strictly defined, and not expected to change, and totals less than 247 octets of data, the specifications SHOULD request allocation from the short extended space.",
      "ja": "*のTLVのグループは厳密に定義され、変更することは期待できない、とのデータ未満の247個のオクテットを合計する場合には、仕様が短い拡張空間から割り当てを要求すべきです。"
    },
    {
      "indent": 3,
      "text": "* Where a group of TLVs is loosely defined or is expected to change, the specifications SHOULD request allocation from the long extended space.",
      "ja": "*のTLVのグループが緩く定義されているか、変更することが予想され、仕様が長い拡張空間から割り当てを要求すべきです。"
    },
    {
      "indent": 3,
      "text": "All other recommendations given in [RFC6158] for attribute design guidelines apply to attributes using the TLV format.",
      "ja": "属性の設計ガイドラインのために[RFC6158]で与えられた他のすべての勧告はTLV形式を使用して属性に適用されます。"
    },
    {
      "indent": 0,
      "text": "6.6. Allocation Request Guidelines",
      "section_title": true,
      "ja": "6.6。割り当て要求ガイドライン"
    },
    {
      "indent": 3,
      "text": "The following items give guidelines for allocation requests made in a RADIUS specification.",
      "ja": "以下の項目は、RADIUS仕様で作られた割り当て要求のための指針を与えます。"
    },
    {
      "indent": 3,
      "text": "* Discretion is recommended when requesting allocation of attributes. The new space is much larger than the old one, but it is not infinite.",
      "ja": "*属性の割り当てを要求する際に裁量をお勧めします。新しいスペースは、古いものよりもはるかに大きいですが、それは無限ではありません。"
    },
    {
      "indent": 3,
      "text": "* Specifications that allocate many attributes MUST NOT request that allocation be made from the standard space. That space is under allocation pressure, and the extended space is more suitable for large allocations. As a guideline, we suggest that one specification allocating twenty percent (20%) or more of the standard space would meet the above criteria.",
      "ja": "*割り当てが標準空間から作られることを要求してはならない多くの属性を割り当てる仕様。そのスペースは、割り当て圧力下にある、拡張空間が大きい割り当てのために適しています。ガイドラインとして、我々は標準スペースの1割（20％）を割り当てる仕様以上が上記の基準を満たしていることを示唆する。"
    },
    {
      "indent": 3,
      "text": "* Specifications that allocate many related attributes SHOULD define one or more TLVs to contain related attributes.",
      "ja": "多くの関連する属性を割り当てる*仕様は関連の属性が含まれているために、1つ以上のTLVを定義する必要があります。"
    },
    {
      "indent": 3,
      "text": "* Specifications SHOULD request allocation from a specific space. The IANA considerations given in Section 10, below, give instructions to IANA, but authors should assist IANA where possible.",
      "ja": "*仕様は、特定の空間から割り当てを要求すべきです。第10節で与えられたIANAの考慮事項は、以下の、IANAに指示を与えるが、可能な場合、著者はIANAを支援する必要があります。"
    },
    {
      "indent": 3,
      "text": "* Specifications of an attribute that encodes 252 octets or less of data MAY request allocation from the short extended space.",
      "ja": "*データの252オクテット以下が短い拡張空間から割り当てを要求することができるエンコード属性の仕様。"
    },
    {
      "indent": 3,
      "text": "* Specifications of an attribute that always encode less than 253 octets of data MUST NOT request allocation from the long extended space. The standard space or the short extended space MUST be used instead.",
      "ja": "常にデータ未満の253個のオクテットをエンコード属性の*仕様は、長い延長空間から割り当てを要求してはなりません。標準スペースまたは短い拡張スペースを代わりに使用しなければなりません。"
    },
    {
      "indent": 3,
      "text": "* Specifications of an attribute that encodes 253 octets or more of data MUST request allocation from the long extended space.",
      "ja": "*長い拡張空間から割り当てを要求しなければならない253オクテット以上のデータを符号化する属性の仕様。"
    },
    {
      "indent": 3,
      "text": "* When the extended space is nearing exhaustion, a new specification will have to be written that requests allocation of one or more RADIUS attributes from the \"Reserved\" portion of the standard space, values 247-255, using an appropriate format (\"Short Extended Type\", or \"Long Extended Type\").",
      "ja": "*拡張空間が枯渇に近づいている場合、新しい仕様はRADIUSは、適切なフォーマットを使用して、247-255値、標準的な空間の「Reserved」の部分から属性が一つ以上の割り当てを要求する書かなければならない（「ショート拡張タイプ」、または 『ロング拡張型』）。"
    },
    {
      "indent": 3,
      "text": "An allocation request made in a specification SHOULD use one of the following formats when allocating an attribute type code:",
      "ja": "属性タイプ・コードを割り当てるとき仕様で作られた割当要求は、次のいずれかの形式を使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "* TBDn - request allocation of an attribute from the standard space. The value \"n\" should be 1 or more, to track individual attributes that are to be allocated.",
      "ja": "* TBDn  - 標準宇宙からの属性の割り当てを要求。値「N」が割り振られる個々の属性を追跡するために、1またはそれ以上であるべきです。"
    },
    {
      "indent": 3,
      "text": "* SHORT-TBDn - request allocation of an attribute from the short extended space. The value \"n\" should be 1 or more, to track individual attributes that are to be allocated.",
      "ja": "* SHORT-TBDn  - ショート拡張宇宙からの属性の要求の割り当て。値「N」が割り振られる個々の属性を追跡するために、1またはそれ以上であるべきです。"
    },
    {
      "indent": 3,
      "text": "* LONG-TBDn - request allocation of an attribute from the long extended space. The value \"n\" should be 1 or more, to track individual attributes that are to be allocated.",
      "ja": "* LONG-TBDn  - 長い拡張宇宙からの属性の要求の割り当て。値「N」が割り振られる個々の属性を追跡するために、1またはそれ以上であるべきです。"
    },
    {
      "indent": 3,
      "text": "These guidelines should help specification authors and IANA communicate effectively and clearly.",
      "ja": "これらのガイドラインは、仕様作成者を助けなければならないし、IANAは、効果的かつ明確に通信します。"
    },
    {
      "indent": 0,
      "text": "6.7. Allocation Request Guidelines for TLVs",
      "section_title": true,
      "ja": "6.7。 TLVのための割り当て要求ガイドライン"
    },
    {
      "indent": 3,
      "text": "Specifications may allocate a new attribute of type TLV and at the same time allocate sub-Attributes within that TLV. These specifications SHOULD request allocation of specific values for the sub-TLV. The \"dotted number\" notation MUST be used.",
      "ja": "仕様タイプTLVの新しい属性を割り当てると同時に、そのTLV内のサブ属性を割り当てることができます。これらの仕様は、サブTLVの特定の値の割り当てを要求すべきです。 「点線数」表記が使用されなければなりません。"
    },
    {
      "indent": 3,
      "text": "For example, a specification may request allocation of a TLV as SHORT-TBD1. Within that attribute, it could request allocation of three sub-TLVs, as SHORT-TBD1.1, SHORT-TBD1.2, and SHORT-TBD1.3.",
      "ja": "例えば、明細書はTLVとしてSHORT-TBD1の割り当てを要求することができます。その属性の中で、それはSHORT-TBD1.1、SHORT-TBD1.2、およびSHORT-TBD1.3など三つのサブのTLVの割り当てを、要求することができます。"
    },
    {
      "indent": 3,
      "text": "Specifications may request allocation of additional sub-TLVs within an existing attribute of type TLV. Those specifications SHOULD use the \"TBDn\" format for every entry in the \"dotted number\" notation.",
      "ja": "仕様タイプTLVの既存の属性内に追加のサブのTLVの割り当てを要求することができます。これらの仕様は、「点線の数」表記内のすべてのエントリの「TBDn」形式を使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "For example, a specification may request allocation within an existing TLV, with \"dotted number\" notation MM.NN. Within that attribute, the specification could request allocation of three sub-TLVs, as MM.NN.TBD1, MM.NN.TBD2, and MM.NN.TBD3.",
      "ja": "例えば、明細書は「点線数」表記と、既存のTLV内の割り当てを要求することができるMM.NN.その属性内、仕様はMM.NN.TBD1、MM.NN.TBD2、及びMM.NN.TBD3として、三つのサブのTLVの割り当てを要求することができます。"
    },
    {
      "indent": 0,
      "text": "6.8. Implementation Guidelines",
      "section_title": true,
      "ja": "6.8。実装のガイドライン"
    },
    {
      "indent": 3,
      "text": "* RADIUS client implementations SHOULD support this specification in order to permit the easy deployment of specifications using the changes defined herein.",
      "ja": "* RADIUSクライアントの実装は、本明細書に定義された変更を使用して仕様の容易な導入を可能にするために、この仕様をサポートする必要があります。"
    },
    {
      "indent": 3,
      "text": "* RADIUS server implementations SHOULD support this specification in order to permit the easy deployment of specifications using the changes defined herein.",
      "ja": "* RADIUSサーバの実装は、本明細書に定義された変更を使用して仕様の容易な導入を可能にするために、この仕様をサポートする必要があります。"
    },
    {
      "indent": 3,
      "text": "* RADIUS proxy servers MUST follow the specifications in Section 5.2.",
      "ja": "* RADIUSプロキシサーバーは、5.2節で仕様に従わなければなりません。"
    },
    {
      "indent": 0,
      "text": "6.9. Vendor Guidelines",
      "section_title": true,
      "ja": "6.9。ベンダーのガイドライン"
    },
    {
      "indent": 3,
      "text": "* Vendors SHOULD use the existing Vendor-Specific Attribute Type space in preference to the new Extended-Vendor-Specific Attributes, as this specification may take time to become widely deployed.",
      "ja": "この仕様は広く展開になるには時間がかかる場合がありますよう*ベンダーは、新しい拡張-ベンダー固有の属性に優先して、既存のベンダー固有の属性タイプのスペースを使用すべきです。"
    },
    {
      "indent": 3,
      "text": "* Vendors SHOULD implement this specification. The changes to RADIUS are relatively small and are likely to quickly be used in new specifications.",
      "ja": "*ベンダーは、この仕様を実装する必要があります。 RADIUSへの変更は比較的小さく、すぐに新しい仕様で使用される可能性が高いです。"
    },
    {
      "indent": 0,
      "text": "7. Rationale for This Design",
      "section_title": true,
      "ja": "この設計のための理論的根拠7."
    },
    {
      "indent": 3,
      "text": "The path to extending the RADIUS protocol has been long and arduous. A number of proposals have been made and discarded by the RADEXT working group. These proposals have been judged to be either too bulky, too complex, too simple, or unworkable in practice. We do not otherwise explain here why earlier proposals did not obtain working group consensus.",
      "ja": "RADIUSプロトコルを拡張へのパスが長く、困難でした。多数の提案が行われ、RADEXTワーキンググループによって破棄されています。これらの提案は、複雑すぎる、あまりにもかさばる単純すぎる、または実際には実行不可能のいずれかであると判断されました。以前の提案は、ワーキンググループのコンセンサスを得られなかった理由を我々はそうでない場合は、ここで説明されていません。"
    },
    {
      "indent": 3,
      "text": "The changes outlined here have the benefit of being simple, as the \"Extended Type\" format requires only a one-octet change to the Attribute format. The downside is that the \"Long Extended Type\" format is awkward, and the 7 Reserved bits will likely never be used for anything.",
      "ja": "「拡張型」フォーマットは属性形式にのみ1オクテットの変更を必要とするため、ここで概説変更は、シンプルであるという利点を持っています。欠点は、「ロング拡張型」フォーマットが厄介で、7つの予約ビットは、おそらく何のために使用されることはありませんということです。"
    },
    {
      "indent": 0,
      "text": "7.1. Attribute Audit",
      "section_title": true,
      "ja": "7.1。監査属性"
    },
    {
      "indent": 3,
      "text": "An audit of almost five thousand publicly available attributes [ATTR] (2010) shows the statistics summarized below. The Attributes include over 100 Vendor dictionaries, along with the IANA-assigned attributes:",
      "ja": "ほとんど5000公に利用可能な属性[ATTR]（2010）の監査をまとめると以下の統計情報が表示されます。属性はIANAによって割り当てられた属性とともに、100を超えるベンダーの辞書を、次のとおりです。"
    },
    {
      "indent": 6,
      "text": "Count    Data Type\n-----    ---------\n2257     integer\n1762     text\n273      IPv4 Address\n225      string\n96       other data types\n35       IPv6 Address\n18       date\n10       integer64\n4        Interface Id\n3        IPv6 Prefix",
      "raw": true
    },
    {
      "indent": 6,
      "text": "4683 Total",
      "ja": "4683合計"
    },
    {
      "indent": 3,
      "text": "The entries in the \"Data Type\" column are data types recommended by [RFC6158], along with \"integer64\". The \"other data types\" row encompasses all other data types, including complex data types and data types transporting opaque data.",
      "ja": "「データ種別」欄のエントリは、「integer64」とともに、[RFC6158]によって推奨されるデータ型です。 「他のデータ・タイプ」列は、不透明なデータを転送する複合データ型およびデータ・タイプを含む他のすべてのデータ型を包含する。"
    },
    {
      "indent": 3,
      "text": "We see that over half of the Attributes encode less than 16 octets of data. It is therefore important to have an extension mechanism that adds as little as possible to the size of these attributes. Another result is that the overwhelming majority of attributes use simple data types.",
      "ja": "私たちは、属性の半分以上が、データの16個の未満のオクテットをコードすることを参照してください。これらの属性のサイズにできるだけを追加する拡張メカニズムを持つことが重要です。別の結果は、属性の圧倒的多数は、単純なデータ型を使用することです。"
    },
    {
      "indent": 3,
      "text": "Of the Attributes defined above, 177 were declared as being inside of a TLV. This is approximately 4% of the total. We did not investigate whether additional attributes were defined in a flat namespace but could have been defined as being inside of a TLV. We expect that the number could be as high as 10% of attributes.",
      "ja": "上記で定義された属性の、177はTLVの内側にあるものとして宣言されました。これは、全体の約4％です。私たちは、追加の属性がフラットな名前空間で定義されたが、TLVの内側にあるものとして定義されていることができるかどうかを調査していませんでした。私たちは、数は、属性の10％と高くなることができると期待しています。"
    },
    {
      "indent": 3,
      "text": "Manual inspection of the dictionaries shows that approximately 20 (or 0.5%) attributes have the ability to transport more than 253 octets of data. These attributes are divided between VSAs and a small number of standard Attributes such as EAP-Message.",
      "ja": "辞書の手動検査は、約20（0.5％）属性は以上のデータ253個のオクテットを輸送する能力を有することを示します。これらの属性は、VSAのそのようなEAP-メッセージのような標準的な属性の少数の間で分割されます。"
    },
    {
      "indent": 3,
      "text": "The results of this audit and analysis are reflected in the design of the extended attributes. The extended format has minimal overhead, permits TLVs, and has support for \"long\" attributes.",
      "ja": "この監査および分析の結果は、拡張属性の設計に反映されます。拡張フォーマットは、最小のオーバーヘッドを持っているTLVを可能にし、「長い」属性をサポートしています。"
    },
    {
      "indent": 0,
      "text": "8. Diameter Considerations",
      "section_title": true,
      "ja": "8.直径の考慮事項"
    },
    {
      "indent": 3,
      "text": "The Attribute formats defined in this specification need to be transported in Diameter. While Diameter supports attributes longer than 253 octets and grouped attributes, we do not use that functionality here. Instead, we define the simplest possible encapsulation method.",
      "ja": "この仕様で定義された属性の形式は、直径で輸送する必要があります。直径が253オクテットとグループ化された属性よりも長い属性をサポートしていますが、我々はここでその機能を使用しないでください。代わりに、私たちは、最も簡単なカプセル化方式を定義します。"
    },
    {
      "indent": 3,
      "text": "The new formats MUST be treated the same as traditional RADIUS attributes when converting from RADIUS to Diameter, or vice versa. That is, the new attribute space is not converted to any \"extended\" Diameter attribute space. Fragmented attributes are not converted to a single long Diameter attribute. The new EVS data types are not converted to Diameter attributes with the \"V\" bit set.",
      "ja": "直径、またはその逆にRADIUSから変換するとき、伝統的なRADIUS属性として新しいフォーマットは同じに扱わなければなりません。それは、新しい属性空間は、任意の「拡張」直径属性空間に変換されていない、です。断片化された属性は、単一の長径属性に変換されません。データ型は直径に変換されていない新しいEVSは、「V」ビットが設定された属性。"
    },
    {
      "indent": 3,
      "text": "In short, this document mandates no changes for existing RADIUS-to-Diameter or Diameter-to-RADIUS gateways.",
      "ja": "短い、この文書は義務でRADIUS対直径又は直径対RADIUSゲートウェイを既存の変更なし。"
    },
    {
      "indent": 0,
      "text": "9. Examples",
      "section_title": true,
      "ja": "9.例"
    },
    {
      "indent": 3,
      "text": "A few examples are presented here in order to illustrate the encoding of the new Attribute formats. These examples are not intended to be exhaustive, as many others are possible. For simplicity, we do not show complete packets, but only attributes.",
      "ja": "いくつかの例は、新しい属性形式のエンコーディングを説明するためにここに提示されています。多くの人が可能であり、これらの例は、網羅するものではありません。簡単にするために、我々は完全なパケットを示したが、唯一の属性がありません。"
    },
    {
      "indent": 3,
      "text": "The examples are given using a domain-specific language implemented by the program given in Appendix A of this document. The language is line oriented and composed of a sequence of lines matching the ABNF grammar ([RFC5234]) given below:",
      "ja": "実施例は、この文書の付録Aで与えられたプログラムによって実現ドメイン固有の言語を使用して与えられています。言語は、行指向及び下記ABNF文法を（[RFC5234]）に一致する行の配列で構成されています。"
    },
    {
      "indent": 6,
      "text": "Identifier = 1*DIGIT *( \".\" 1*DIGIT )",
      "ja": "識別子= 1 * DIGIT×（ \"\" 1 * DIGIT）"
    },
    {
      "indent": 6,
      "text": "HEXCHAR = HEXDIG HEXDIG",
      "ja": "HEXCHAR = HEXDIG HEXDIG"
    },
    {
      "indent": 6,
      "text": "STRING = DQUOTE 1*CHAR DQUOTE",
      "ja": "STRING = DQUOTE 1 * CHAR DQUOTE"
    },
    {
      "indent": 6,
      "text": "TLV = \"{\" SP 1*DIGIT SP DATA SP \"}\"",
      "ja": "TLV = \"{\" SP 1 * DIGIT SP DATA SP \"}\""
    },
    {
      "indent": 6,
      "text": "DATA = (HEXCHAR *(SP HEXCHAR)) / (TLV *(SP TLV)) / STRING",
      "ja": "DATA =（HEXCHAR×（SP HEXCHAR））/（TLV *（SP TLV））/ STRING"
    },
    {
      "indent": 6,
      "text": "LINE = Identifier SP DATA",
      "ja": "LINE =識別子SP DATA"
    },
    {
      "indent": 3,
      "text": "The program has additional restrictions on its input that are not reflected in the above grammar. For example, the portions of the identifier that refer to Type and Extended-Type are limited to values between 1 and 255. We trust that the source code in Appendix A is clear and that these restrictions do not negatively affect the comprehensibility of the examples.",
      "ja": "プログラムは、上記の文法には反映されていない、その入力に追加の制限を有しています。例えば、入力および拡張型参照識別子の部分は、我々は、付録Aにおけるソースコードは明らかであり、これらの制約は、負例の理解度に影響を及ぼさないことをことを信頼1と255の間の値に制限されています。"
    },
    {
      "indent": 3,
      "text": "The program reads the input text and interprets it as a set of instructions to create RADIUS attributes. It then prints the hex encoding of those attributes. It implements the minimum set of functionality that achieves that goal. This minimalism means that it does not use attribute dictionaries; it does not implement support for RADIUS data types; it can be used to encode attributes with invalid data fields; and there is no requirement for consistency from one example to the next. For example, it can be used to encode a User-Name attribute that contains non-UTF8 data or a Framed-IP-Address that contains 253 octets of ASCII data. As a result, it MUST NOT be used to create RADIUS attributes for transport in a RADIUS message.",
      "ja": "プログラムは、入力されたテキストを読み込み、RADIUS属性を作成するための一連の命令として解釈します。その後、それらの属性の進エンコーディングを出力します。これは、その目標を達成した機能の最小セットを実装しています。このミニマリズムは、属性辞書を使用していないことを意味します。それは、RADIUSのデータ型のサポートを実装していません。無効なデータフィールドを持つ属性をエンコードするために使用することができます。そして一つの例から次への一貫性のための必要はありません。例えば、非UTF8データまたはASCIIデータの253個のオクテットが含まれているフレームを選ぶ-IP-アドレスが含まれているUser-Name属性をエンコードするために使用することができます。その結果、RADIUSは、RADIUSメッセージに輸送するために属性を作成するために使用してはいけません。"
    },
    {
      "indent": 3,
      "text": "However, the program correctly encodes the RADIUS attribute fields of \"Type\", \"Length\", \"Extended-Type\", \"More\", \"Reserved\", \"Vendor-Id\", \"Vendor-Type\", and \"Vendor-Length\". It encodes RADIUS attribute data types \"evs\" and \"tlv\". It can therefore be used to encode example attributes from inputs that are human readable.",
      "ja": "しかし、プログラムが正しくRADIUS「種類」、「長さ」、「拡張型」の属性フィールドを符号化し、「詳細」、「予約済み」、「ベンダーID」、「ベンダータイプ」、および「ベンダー長」。これは、RADIUSをデータ型「EVS」と「TLV」を属性コードしています。したがって、例では、人間が読める形式である入力から属性を符号化するために使用することができます。"
    },
    {
      "indent": 3,
      "text": "We do not give examples of \"invalid attributes\". We also note that the examples show format, rather than consistent meaning. A particular Attribute Type code may be used to demonstrate two different formats. In real specifications, attributes have a static definitions based on their type code.",
      "ja": "私たちは、「無効な属性」の例を与えることはありません。我々はまた、例ではなく、一貫した意味よりも形式を示すことに注意してください。特定の属性タイプコードは2つの異なるフォーマットを示すために使用されてもよいです。実際の仕様では、属性は、そのタイプコードに基づいて、静的な定義を持っています。"
    },
    {
      "indent": 3,
      "text": "The examples given below are strictly for demonstration purposes only and do not provide a standard of any kind.",
      "ja": "下記の例では、唯一のデモの目的のために厳密であり、あらゆる種類の標準を提供していません。"
    },
    {
      "indent": 0,
      "text": "9.1. Extended Type",
      "section_title": true,
      "ja": "9.1。拡張型"
    },
    {
      "indent": 3,
      "text": "The following is a series of examples of the \"Extended Type\" format.",
      "ja": "以下は、「拡張型」形式の一連の例です。"
    },
    {
      "indent": 3,
      "text": "Attribute encapsulating textual data:",
      "ja": "テキストデータをカプセル化する属性："
    },
    {
      "indent": 5,
      "text": "241.1 \"bob\" -> f1 06 01 62 6f 62",
      "ja": "241.1 \"ボブ\"  - > F1 06 01 62 6F 62"
    },
    {
      "indent": 3,
      "text": "Attribute encapsulating a TLV with TLV-Type of one (1):",
      "ja": "一方のTLVタイプとTLVをカプセル化属性（1）："
    },
    {
      "indent": 5,
      "text": "241.2 { 1 23 45 } -> f1 07 02 01 04 23 45",
      "ja": "241.2 1月23日{45}  - > F1 07 02 01 04 23 45"
    },
    {
      "indent": 3,
      "text": "Attribute encapsulating two TLVs, one after the other:",
      "ja": "2つのTLV、次々にカプセル化する属性："
    },
    {
      "indent": 5,
      "text": "241.2 { 1 23 45 } { 2 67 89 } -> f1 0b 02 01 04 23 45 02 04 67 89",
      "ja": "241.2 {1 23 45} {2 67 89}  - > F1 0B 02 01 04 23 45 02 04 67 89"
    },
    {
      "indent": 3,
      "text": "Attribute encapsulating two TLVs, where the second TLV is itself encapsulating a TLV:",
      "ja": "第TLVは、TLVを封入自体2つのTLVを、カプセル化属性："
    },
    {
      "indent": 5,
      "text": "241.2 { 1 23 45 } { 3 { 1 ab cd } } -> f1 0d 02 01 04 23 45 03 06 01 04 ab cd",
      "ja": "２４１。２ ｛ １ ２３ ４５ ｝ ｛ ３ ｛ １ あｂ ｃｄ ｝ ｝ ー＞ ｆ１ ０ｄ ０２ ０１ ０４ ２３ ４５ ０３ ０６ ０１ ０４ あｂ ｃｄ"
    },
    {
      "indent": 3,
      "text": "Attribute encapsulating two TLVs, where the second TLV is itself encapsulating two TLVs:",
      "ja": "第TLVは、2つのTLVを封入自体2つのTLVを、カプセル化属性："
    },
    {
      "indent": 5,
      "text": "241.2 { 1 23 45 } { 3 { 1 ab cd } { 2 \"foo\" } } -> f1 12 02 01 04 23 45 03 0b 01 04 ab cd 02 05 66 6f 6f",
      "ja": "241.o {12} 345 {P {1} {ABダム \"偽\"}}  - > F1 12 02 01 04 23 45 03 0B 01 04 ABのCD 02 05 66 6F 6F"
    },
    {
      "indent": 3,
      "text": "Attribute encapsulating a TLV, which in turn encapsulates a TLV, to a depth of 5 nestings:",
      "ja": "5つのネストの深さに、順番にTLVをカプセル化TLVを、カプセル化する属性："
    },
    {
      "indent": 5,
      "text": "241.1 { 1 { 2 { 3 { 4 { 5 cd ef } } } } } -> f1 0f 01 01 0c 02 0a 03 08 04 06 05 04 cd ef",
      "ja": "241.1 1 {{2- {3- {4- {5 CDなら}}}}}  - > 01 01 0C 02 0A 03 08 04 06 05 04 CD 0F F1なら"
    },
    {
      "indent": 3,
      "text": "Attribute encapsulating an Extended-Vendor-Specific Attribute, with Vendor-Id of 1 and Vendor-Type of 4, which in turn encapsulates textual data:",
      "ja": "1のベンダーIDと順番にテキストデータをカプセル化し4のベンダータイプと、拡張、ベンダー固有の属性をカプセル化属性："
    },
    {
      "indent": 5,
      "text": "241.26.1.4 \"test\" -> f1 0c 1a 00 00 00 01 04 74 65 73 74",
      "ja": "241.26.1.4 \"テスト\"  - > F1の0C 1aの00 00 00 01 04 74 65 73 74"
    },
    {
      "indent": 3,
      "text": "Attribute encapsulating an Extended-Vendor-Specific Attribute, with Vendor-Id of 1 and Vendor-Type of 5, which in turn encapsulates a TLV with TLV-Type of 3, which encapsulates textual data:",
      "ja": "1のベンダーIDと順番にテキストデータをカプセル化し3のTLVタイプとTLVをカプセル化5のベンダータイプと、拡張、ベンダー固有の属性をカプセル化属性："
    },
    {
      "indent": 5,
      "text": "241.26.1.5 { 3 \"test\" } -> f1 0e 1a 00 00 00 01 05 03 06 74 65 73 74",
      "ja": "241.26.1.5 {3 \"テスト\"}  - > F1の0E 1A 00 00 00 01 05 03 06 74 65 73 74"
    },
    {
      "indent": 0,
      "text": "9.2. Long Extended Type",
      "section_title": true,
      "ja": "9.2。ロング拡張型"
    },
    {
      "indent": 3,
      "text": "The following is a series of examples of the \"Long Extended Type\" format.",
      "ja": "以下は、「ロング拡張型」形式の一連の例です。"
    },
    {
      "indent": 3,
      "text": "Attribute encapsulating textual data:",
      "ja": "テキストデータをカプセル化する属性："
    },
    {
      "indent": 5,
      "text": "245.1 \"bob\" -> f5 07 01 00 62 6f 62",
      "ja": "245.1 \"ボブ\"  - > F5 07 01 00 62 6F 62"
    },
    {
      "indent": 3,
      "text": "Attribute encapsulating a TLV with TLV-Type of one (1):",
      "ja": "一方のTLVタイプとTLVをカプセル化属性（1）："
    },
    {
      "indent": 5,
      "text": "245.2 { 1 23 45 } -> f5 08 02 00 01 04 23 45",
      "ja": "245.2 {1 23 45}  - > F5 08 02 00 01 04 23 45"
    },
    {
      "indent": 3,
      "text": "Attribute encapsulating two TLVs, one after the other:",
      "ja": "2つのTLV、次々にカプセル化する属性："
    },
    {
      "indent": 5,
      "text": "245.2 { 1 23 45 } { 2 67 89 } -> f5 0c 02 00 01 04 23 45 02 04 67 89",
      "ja": "245.2 {1 23 45} {2 67 89}  - > F5 0C 02 00 01 04 23 45 02 04 67 89"
    },
    {
      "indent": 3,
      "text": "Attribute encapsulating two TLVs, where the second TLV is itself encapsulating a TLV:",
      "ja": "第TLVは、TLVを封入自体2つのTLVを、カプセル化属性："
    },
    {
      "indent": 5,
      "text": "245.2 { 1 23 45 } { 3 { 1 ab cd } } -> f5 0e 02 00 01 04 23 45 03 06 01 04 ab cd",
      "ja": "２４５。２ ｛ １ ２３ ４５ ｝ ｛ ３ ｛ １ あｂ ｃｄ ｝ ｝ ー＞ ｆ５ ０え ０２ ００ ０１ ０４ ２３ ４５ ０３ ０６ ０１ ０４ あｂ ｃｄ"
    },
    {
      "indent": 3,
      "text": "Attribute encapsulating two TLVs, where the second TLV is itself encapsulating two TLVs:",
      "ja": "第TLVは、2つのTLVを封入自体2つのTLVを、カプセル化属性："
    },
    {
      "indent": 5,
      "text": "245.2 { 1 23 45 } { 3 { 1 ab cd } { 2 \"foo\" } } -> f5 13 02 00 01 04 23 45 03 0b 01 04 ab cd 02 05 66 6f 6f",
      "ja": "245.2 {1 23 45}、{3 {1のAB、CD} {2 \"FOO\"}}  - > F5 13 02 00 01 04 23 45 03 0B 01 04 AB CD 02 05 66 6F 6F"
    },
    {
      "indent": 3,
      "text": "Attribute encapsulating a TLV, which in turn encapsulates a TLV, to a depth of 5 nestings:",
      "ja": "5つのネストの深さに、順番にTLVをカプセル化TLVを、カプセル化する属性："
    },
    {
      "indent": 5,
      "text": "245.1 { 1 { 2 { 3 { 4 { 5 cd ef } } } } } -> f5 10 01 00 01 0c 02 0a 03 08 04 06 05 04 cd ef",
      "ja": "245.1 1 {{2- {3- {4- {5 CDなら}}}}}  - > F5 10 01 00 01 0C 02 0A 03 08 04 06 05 04 CD場合"
    },
    {
      "indent": 3,
      "text": "Attribute encapsulating an Extended-Vendor-Specific Attribute, with Vendor-Id of 1 and Vendor-Type of 4, which in turn encapsulates textual data:",
      "ja": "1のベンダーIDと順番にテキストデータをカプセル化し4のベンダータイプと、拡張、ベンダー固有の属性をカプセル化属性："
    },
    {
      "indent": 5,
      "text": "245.26.1.4 \"test\" -> f5 0d 1a 00 00 00 00 01 04 74 65 73 74",
      "ja": "245.26.1.4 \"テスト\"  - > F5の0D 1aの00 00 00 00 01 04 74 65 73 74"
    },
    {
      "indent": 3,
      "text": "Attribute encapsulating an Extended-Vendor-Specific Attribute, with Vendor-Id of 1 and Vendor-Type of 5, which in turn encapsulates a TLV with TLV-Type of 3, which encapsulates textual data:",
      "ja": "1のベンダーIDと順番にテキストデータをカプセル化し3のTLVタイプとTLVをカプセル化5のベンダータイプと、拡張、ベンダー固有の属性をカプセル化属性："
    },
    {
      "indent": 5,
      "text": "245.26.1.5 { 3 \"test\" } -> f5 0f 1a 00 00 00 00 01 05 03 06 74 65 73 74",
      "ja": "245.26.1.5 {3 \"テスト\"}  - > F5の0F 1A 00 00 00 00 01 05 03 06 74 65 73 74"
    },
    {
      "indent": 3,
      "text": "Attribute encapsulating more than 251 octets of data. The \"Data\" portions are indented for readability:",
      "ja": "以上のデータ251個のオクテットをカプセル化する属性。 「データ」の部分は、読みやすくするためにインデントされています。"
    },
    {
      "indent": 5,
      "text": "245.4 \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbcccccccccccccccccccc ccccccccccc\" -> f5 ff 04 80 aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ab bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb f5 13 04 00 cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc",
      "ja": "245.4 \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbcccccccccccccccccccc ccccccccccc\"  -  04 80のAA AA AA AAのAAのAAのAAのAA AA AAのAAのAAのAAのAA AA AAのAAのAAのAA AA AAのAAのAAのAAのAAのAA AA AAのAAのAAのAA FF> F5 AAのAA AA AAのAAのAAのAA AA AAのAAのAAのAAのAA AA AAのAAのAAのAA AA AAのAAのAAのAAのAA AA AAのAAのAAのAA AA AAのAAのAAのAAのAAのAA AA AAのAAのAAのAAのAA AAのAAのAA AA AAのAAのAAのAA AAのAA AA AA AAのAAのAAのAAのAA AA AAのAAのAAのAAのAA AA AAの単三AA AA AAのAAのAAのAAのAA AA AAのAAのAAのAAのAA AA AAのAAのAAのAA AAのAAのAA AA AAのAAのAAのAA AB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB F5 13 04 00 CC CC CC CCはCCのCCのCCのCCのCC CC CC CCのCCのCCのCC"
    },
    {
      "indent": 3,
      "text": "Below is an example of an attribute encapsulating an Extended-Vendor-Specific Attribute, with Vendor-Id of 1 and Vendor-Type of 6, which in turn encapsulates more than 251 octets of data.",
      "ja": "以下順番にデータの以上251個のオクテットをカプセル化1と6のベンダータイプのベンダーIDで拡張・ベンダー固有の属性を、カプセル化属性の一例です。"
    },
    {
      "indent": 3,
      "text": "As the VSA encapsulates more than 251 octets of data, it is split into two RADIUS attributes. The first attribute has the More field set, and it carries the Vendor-Id and Vendor-Type. The second attribute has the More field clear and carries the rest of the data portion of the VSA. Note that the second attribute does not include the Vendor-Id ad Vendor-Type fields.",
      "ja": "VSAは、以上のデータ251個のオクテットをカプセル化したように、2台のRADIUS属性に分割されます。最初の属性は、より多くのフィールドが設定されている、そしてそれはベンダーIDとベンダータイプを運びます。第二の属性は、明確な複数のフィールドを持ち、VSAのデータ部分の残りの部分を運びます。第二の属性は、ベンダーID、広告のベンダータイプのフィールドが含まれていないことに注意してください。"
    },
    {
      "indent": 3,
      "text": "The \"Data\" portions are indented for readability:",
      "ja": "「データ」の部分は、読みやすくするためにインデントされています。"
    },
    {
      "indent": 5,
      "text": "245.26.1.6 \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbccccccccccccc ccccccccccccccccc\" -> f5 ff 1a 80 00 00 00 01 06 aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ab bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb f5 18 1a 00 bb bb bb bb bb cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc",
      "ja": "245.26.1.6 \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbccccccccccccc ccccccccccccccccc\"  - > F5 FF 1A 80 00 00 00 01 06のAA、AAのAA、AA、AAのAAのAAのAAのAA、AA、AAのAAのAAのAAのAA、AA、AAのAAのAAのAA、AA、AAのAAのAA AAのAA AA AAのAAのAAのAA AA AAのAAのAAのAAのAA AA AAのAAのAAのAA AA AAのAAのAAのAAのAA AA AAのAAのAAのAA AA AAのAAのAAのAAのAAのAA AA AAのAAのAAのAAのAA AAのAAのAA AA AAのAAのAAのAA AAのAA AA AAのAAのAAのAA AA AAのAAのAAのAAのAA AA AAのAAのAAのAA AA AAのAAのAAのAAのAA AA AAのAAのAAのAA AA AAのAAのAAのAAのAAのAA AA AAのAAのAAのAAのAA AAのAAのAA AA AAのAAのAAのAA AA AB BB bbのbbのbbのbbのbbのbbのbbのbbのbbのbbのbbのB B BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB BB F5 18 1A 00 BB BB BB BB BBのCC CC CCのCCのCC CC CC CCのCCのCCのCC CC CC CCはCC"
    },
    {
      "indent": 0,
      "text": "10. IANA Considerations",
      "section_title": true,
      "ja": "10. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "This document updates [RFC3575] in that it adds new IANA considerations for RADIUS attributes. These considerations modify and extend the IANA considerations for RADIUS, rather than replacing them.",
      "ja": "このドキュメントの更新[RFC3575] RADIUS属性のそれは新しいIANAの考慮事項が追加されている中で。これらの考慮事項は、むしろそれらを交換するよりも、RADIUSのためのIANA問題を修正し、拡張します。"
    },
    {
      "indent": 3,
      "text": "The IANA considerations of this document are limited to the \"RADIUS Attribute Types\" registry. Some Attribute Type values that were previously marked \"Reserved\" are now allocated, and the registry is extended from a simple 8-bit array to a tree-like structure, up to a maximum depth of 125 nodes. Detailed instructions are given below.",
      "ja": "このドキュメントのIANA問題は、「RADIUS属性タイプ」のレジストリに制限されています。以前にマークされた「予約」されたいくつかの属性タイプ値は、現在割り当てられており、レジストリ125個のノードの最大深さまで、ツリー状の構造に単純な8ビットアレイから延長されます。詳細な手順は以下の通りです。"
    },
    {
      "indent": 0,
      "text": "10.1. Attribute Allocations",
      "section_title": true,
      "ja": "10.1。割り当て属性"
    },
    {
      "indent": 3,
      "text": "IANA has moved the following Attribute Type values from \"Reserved\" to \"Allocated\" with the corresponding names:",
      "ja": "IANAは、対応する名前の「割り当て」に「予約」から次の属性タイプの値を移動しました："
    },
    {
      "indent": 6,
      "text": "* 241 Extended-Type-1 * 242 Extended-Type-2 * 243 Extended-Type-3 * 244 Extended-Type-4 * 245 Long-Extended-Type-1 * 246 Long-Extended-Type-2",
      "ja": "* 241拡張型a-1 * 242拡張型a-2 * 243拡張型a-3 * 244拡張型a-4 * 245ロング拡張型a-1 * 246ロング拡張型a-2"
    },
    {
      "indent": 3,
      "text": "These values serve as an encapsulation layer for the new RADIUS Attribute Type tree.",
      "ja": "これらの値は、新しいRADIUS属性タイプの木のカプセル化層として機能します。"
    },
    {
      "indent": 0,
      "text": "10.2. RADIUS Attribute Type Tree",
      "section_title": true,
      "ja": "10.2。 RADIUS属性タイプツリー"
    },
    {
      "indent": 3,
      "text": "Each of the Attribute Type values allocated above extends the \"RADIUS Attribute Types\" to an N-ary tree, via a \"dotted number\" notation. Allocation of an Attribute Type value \"TYPE\" using the new \"Extended Type\" format results in allocation of 255 new Attribute Type values of format \"TYPE.1\" through \"TYPE.255\". Value twenty-six (26) is assigned as \"Extended-Vendor-Specific-*\". Values \"TYPE.241\" through \"TYPE.255\" are marked \"Reserved\". All other values are \"Unassigned\".",
      "ja": "上記割り当てられた属性タイプ値の各々は、「点線数」表記を介して、N進ツリーに「RADIUSは、タイプ属性」延びています。 「TYPE.255」を介してフォーマット「TYPE.1」の255の新しい属性タイプ値の割り当てに新しい「拡張型」形式の結果を使用して、属性タイプ値「TYPE」の割り当て。値二十から六（26）は、 \"拡張-ベンダーSpecific- *\" として割り当てられます。 「TYPE.255」による値「TYPE.241は、」「予約」とマークされています。他のすべての値は、「未割り当て」です。"
    },
    {
      "indent": 3,
      "text": "The initial set of Attribute Type values and names assigned by this document is given below.",
      "ja": "この文書によって割り当てられた属性タイプ値と名前の最初のセットは以下のとおりです。"
    },
    {
      "indent": 6,
      "text": "* 241 Extended-Attribute-1 * 241.{1-25} Unassigned * 241.26 Extended-Vendor-Specific-1 * 241.{27-240} Unassigned * 241.{241-255} Reserved * 242 Extended-Attribute-2 * 242.{1-25} Unassigned * 242.26 Extended-Vendor-Specific-2 * 242.{27-240} Unassigned * 242.{241-255} Reserved * 243 Extended-Attribute-3 * 243.{1-25} Unassigned * 243.26 Extended-Vendor-Specific-3 * 243.{27-240} Unassigned * 243.{241-255} Reserved * 244 Extended-Attribute-4 * 244.{1-25} Unassigned * 244.26 Extended-Vendor-Specific-4 * 244.{27-240} Unassigned * 244.{241-255} Reserved * 245 Extended-Attribute-5 * 245.{1-25} Unassigned * 245.26 Extended-Vendor-Specific-5 * 245.{27-240} Unassigned * 245.{241-255} Reserved * 246 Extended-Attribute-6 * 246.{1-25} Unassigned * 246.26 Extended-Vendor-Specific-6 * 246.{27-240} Unassigned * 246.{241-255} Reserved",
      "ja": "* 241の拡張属性-1 * 241 {1-25}未割り当て* 241.26拡張-ベンダー固有-1 * 241 {27から240}未割り当て* 241 {241-255} *予約済み242拡張属性-2 * 242 {1-25}未割り当て* 242.26拡張-ベンダー固有-2 * 242 {27から240}未割り当て* 242 {241-255}予約* 243拡張属性-3 * 243 {1~25 }未割り当て* 243.26拡張-ベンダー固有-3 * 243 {27から240}未割り当て* 243 {241-255}予約* 244拡張属性-4 * 244 {1-25}未割り当て* 244.26拡張ベンダ特異的-4 * 244 {27から240}未割り当て* 244 {241-255は} 245.26拡張-ベンダー固有-5 * 245 * 245の拡張属性-5 * 245 {1-25}未割り当て*予約済み。 {27から240}未割り当て* 245 {241-255} * 246拡張属性-6 * 246 {1-25}未割り当て* 246.26拡張-ベンダー固有-6 * 246 {27から240}未割り当て*予約済み246 {241-255}予約"
    },
    {
      "indent": 3,
      "text": "As per [RFC5226], the values marked \"Unassigned\" above are available for assignment by IANA in future RADIUS specifications. The values marked \"Reserved\" are reserved for future use.",
      "ja": "[RFC5226]あたりのとおり、上記の「未割り当て」と記された値は、将来のRADIUS仕様でIANAによって割り当て可能です。 「予約済み」とマークされた値は、将来の使用のために予約されています。"
    },
    {
      "indent": 3,
      "text": "The Extended-Vendor-Specific spaces (TYPE.26) are for Private Use, and allocations are not managed by IANA.",
      "ja": "拡張-ベンダー固有のスペース（TYPE.26）私的使用のためであり、割り当てはIANAによって管理されていません。"
    },
    {
      "indent": 3,
      "text": "Allocation of Reserved entries in the extended space requires Standards Action.",
      "ja": "拡張された空間での予約のエントリの割り当ては標準アクションが必要です。"
    },
    {
      "indent": 3,
      "text": "All other allocations in the extended space require IETF Review.",
      "ja": "拡大されたスペース内の他のすべての割り当てはIETFレビューが必要です。"
    },
    {
      "indent": 0,
      "text": "10.3. Allocation Instructions",
      "section_title": true,
      "ja": "10.3。割り当て手順"
    },
    {
      "indent": 3,
      "text": "This section defines what actions IANA needs to take when allocating new attributes. Different actions are required when allocating attributes from the standard space, attributes of the \"Extended Type\" format, attributes of the \"Long Extended Type\" format, preferential allocations, attributes of data type TLV, attributes within a TLV, and attributes of other data types.",
      "ja": "このセクションでは、アクションIANAは新しい属性を割り当てるとき取るために必要なものを定義します。さまざまなアクションは、標準のスペース、「拡張型」形式の属性が、「ロング拡張型」形式の属性、優先配分から属性を割り当てる際に、データタイプTLVの属性は、TLV内の属性、およびその他のデータの属性が要求されますタイプ。"
    },
    {
      "indent": 0,
      "text": "10.3.1. Requested Allocation from the Standard Space",
      "section_title": true,
      "ja": "10.3.1。標準宇宙から要求された割り当て"
    },
    {
      "indent": 3,
      "text": "Specifications can request allocation of an Attribute from within the standard space (e.g., Attribute Type Codes 1 through 255), subject to the considerations of [RFC3575] and this document.",
      "ja": "仕様は、標準空間内からの属性の割り当てを要求することができる[RFC3575]の考察及び本文書の対象（例えば、タイプ・コード255を介して1項目）。"
    },
    {
      "indent": 0,
      "text": "10.3.2. Requested Allocation from the Short Extended Space",
      "section_title": true,
      "ja": "10.3.2。ショート拡張宇宙から要求された割り当て"
    },
    {
      "indent": 3,
      "text": "Specifications can request allocation of an Attribute that requires the format \"Extended Type\", by specifying the short extended space. In that case, IANA should assign the lowest Unassigned number from the Attribute Type space with the relevant format.",
      "ja": "仕様は、短い拡張スペースを指定することで、フォーマット「拡張型」を必要と属性の割り当てを要求することができます。その場合に、IANAは、関連するフォーマットの属性タイプ空間から最も低い未割り当て番号を割り当てなければなりません。"
    },
    {
      "indent": 0,
      "text": "10.3.3. Requested Allocation from the Long Extended Space",
      "section_title": true,
      "ja": "10.3.3。ロング拡張宇宙から要求された割り当て"
    },
    {
      "indent": 3,
      "text": "Specifications can request allocation of an Attribute that requires the format \"Long Extended Type\", by specifying the extended space (long). In that case, IANA should assign the lowest Unassigned number from the Attribute Type space with the relevant format.",
      "ja": "仕様は、拡張スペース（長い）を指定することで、フォーマット「ロング拡張タイプ」を必要と属性の割り当てを要求することができます。その場合に、IANAは、関連するフォーマットの属性タイプ空間から最も低い未割り当て番号を割り当てなければなりません。"
    },
    {
      "indent": 0,
      "text": "10.3.4. Allocation Preferences",
      "section_title": true,
      "ja": "10.3.4。割り当ての設定"
    },
    {
      "indent": 3,
      "text": "Specifications that make no request for allocation from a specific type space should have Attributes allocated using the following criteria:",
      "ja": "特定の種類の空間から割り当てのための要求をしない仕様は、以下の基準を使用して割り当てられた属性を持っている必要があります。"
    },
    {
      "indent": 3,
      "text": "* When the standard space has no more Unassigned attributes, all allocations should be performed from the extended space.",
      "ja": "標準のスペースがこれ以上割り当てられていない属性を持っていない場合は*、すべての割り当ては、拡張空間から実行する必要があります。"
    },
    {
      "indent": 3,
      "text": "* Specifications that allocate a small number of attributes (i.e., less than ten) should have all allocations made from the standard space.",
      "ja": "*属性の小さな数を割り当てる仕様（すなわち、10未満）、標準的な空間から作られたすべての割り当てを有するべきです。"
    },
    {
      "indent": 3,
      "text": "* Specifications that would allocate more than twenty percent of the remaining standard space attributes should have all allocations made from the extended space.",
      "ja": "残りの標準スペース属性の20以上％に割り当てます*仕様は、拡張された空間から作られたすべての割り当てを持っている必要があります。"
    },
    {
      "indent": 3,
      "text": "* Specifications that request allocation of an attribute of data type TLV should have that attribute allocated from the extended space.",
      "ja": "*データタイプTLVの属性の割り当てを要求仕様が拡張された空間から割り当て、その属性を持つ必要があります。"
    },
    {
      "indent": 3,
      "text": "* Specifications that request allocation of an attribute that can transport 253 or more octets of data should have that attribute allocated from within the long extended space. We note that Section 6.5 above makes recommendations related to this allocation.",
      "ja": "*長い拡張スペース内から割り当てられ、その属性を持つ必要があり、データの253個の以上のオクテットを輸送することができる属性の割り当てを要求仕様。私たちは、6.5節は、上記のこの割り当てに関連する勧告を行うことに注意してください。"
    },
    {
      "indent": 3,
      "text": "There is otherwise no requirement that all attributes within a specification be allocated from one type space or another. Specifications can simultaneously allocate attributes from both the standard space and the extended space.",
      "ja": "仕様内のすべての属性が1種類のスペースや他から割り当てられる要件はそうありません。仕様は、同時に標準スペースと拡張スペースの両方から属性を割り当てることができます。"
    },
    {
      "indent": 0,
      "text": "10.3.5. Extending the Type Space via the TLV Data Type",
      "section_title": true,
      "ja": "10.3.5。 TLVデータタイプを経由してタイプのスペースを拡張"
    },
    {
      "indent": 3,
      "text": "When specifications request allocation of an attribute of data type TLV, that allocation extends the Attribute Type tree by one more level. Allocation of an Attribute Type value \"TYPE.TLV\", with data type TLV, results in allocation of 255 new Attribute Type values, of format \"TYPE.TLV.1\" through \"TYPE.TLV.255\". Values 254-255 are marked \"Reserved\". All other values are \"Unassigned\". Value 26 has no special meaning.",
      "ja": "仕様は、データ型TLVの属性の割り当てを要求すると、その割り当ては1つの以上のレベルで属性タイプのツリーを拡張します。 「TYPE.TLV.255」スルーフォーマット「TYPE.TLV.1」のデータ種別TLVを持つ属性タイプ値の割当て「TYPE.TLV」、255の新しい属性タイプ値の割り当てをもたらします。値は254から255には、「予約済み」とマークされています。他のすべての値は、「未割り当て」です。値26は特別な意味を持ちません。"
    },
    {
      "indent": 3,
      "text": "For example, if a new attribute \"Example-TLV\" of data type TLV is assigned the identifier \"245.1\", then the extended tree will be allocated as below:",
      "ja": "データタイプTLVの新しい属性「例-TLVが」識別子「245.1」が割り当てられている場合、例えば、その後、拡張ツリーは以下のように割り当てられます。"
    },
    {
      "indent": 6,
      "text": "* 245.1 Example-TLV * 245.1.{1-253} Unassigned * 245.1.{254-255} Reserved",
      "ja": "* 245.1実施例-TLV * 245.1。{1-253}未割り当て* 245.1。{254-255}予約"
    },
    {
      "indent": 3,
      "text": "Note that this example does not define an \"Example-TLV\" attribute.",
      "ja": "この例では、「例 -  TLV」属性を定義していないことに注意してください。"
    },
    {
      "indent": 3,
      "text": "The Attribute Type tree can be extended multiple levels in one specification when the specification requests allocation of nested TLVs, as discussed below.",
      "ja": "属性タイプのツリーは、後述するように仕様は、ネストされたのTLVの割り当てを要求する1つの仕様で複数のレベルを拡張することができます。"
    },
    {
      "indent": 0,
      "text": "10.3.6. Allocation within a TLV",
      "section_title": true,
      "ja": "10.3.6。 TLV内の割り当て"
    },
    {
      "indent": 3,
      "text": "Specifications can request allocation of Attribute Type values within an Attribute of data type TLV. The encapsulating TLV can be allocated in the same specification, or it can have been previously allocated.",
      "ja": "仕様は、データタイプTLVの属性の中に属性タイプ値の割り当てを要求することができます。カプセル化TLVは同じ仕様に割り当てることができ、またはそれは、以前に割り当てられていることができます。"
    },
    {
      "indent": 3,
      "text": "Specifications need to request allocation within a specific Attribute Type value (e.g., \"TYPE.TLV.*\"). Allocations are performed from the smallest Unassigned value, proceeding to the largest Unassigned value.",
      "ja": "仕様は、特定の属性タイプの値の範囲内割り当てを要求する必要があります（例えば、「TYPE.TLV。*」）。割り当ては、最大未割り当ての値に進み、最小の未使用値から行われます。"
    },
    {
      "indent": 3,
      "text": "Where the Attribute being allocated is of data type TLV, the Attribute Type tree is extended by one level, as given in the previous section. Allocations can then be made within that level.",
      "ja": "割り当てられている属性はデータ型TLVである場合、前のセクションで与えられたように、属性タイプのツリーは、一の段階によって拡張されます。配分は、そのレベル内で行うことができます。"
    },
    {
      "indent": 0,
      "text": "10.3.7. Allocation of Other Data Types",
      "section_title": true,
      "ja": "10.3.7。他のデータ型の割り当て"
    },
    {
      "indent": 3,
      "text": "Attribute Type value allocations are otherwise allocated from the smallest Unassigned value, proceeding to the largest Unassigned value, e.g., starting from 241.1, proceeding through 241.255, then to 242.1, through 242.255, etc.",
      "ja": "タイプ値の割り当ては、そうでない場合等、242.255を通じて、242.1に次いで、241.255を通じて進行、241.1から出発して、例えば、最大未割り当ての値に進み、最小の未割り当ての値から割り当てられている属性"
    },
    {
      "indent": 0,
      "text": "11. Security Considerations",
      "section_title": true,
      "ja": "11.セキュリティについての考慮事項"
    },
    {
      "indent": 3,
      "text": "This document defines new formats for data carried inside of RADIUS but otherwise makes no changes to the security of the RADIUS protocol.",
      "ja": "このドキュメントでは、RADIUSの内部で搬送されるデータのための新しいフォーマットを定義しますが、そうでない場合は、RADIUSプロトコルのセキュリティを変更しません。"
    },
    {
      "indent": 3,
      "text": "Attacks on cryptographic hashes are well known and are getting better with time, as discussed in [RFC4270]. The security of the RADIUS protocol is dependent on MD5 [RFC1321], which has security issues as discussed in [RFC6151]. It is not known if the issues described in [RFC6151] apply to RADIUS. For other issues, we incorporate by reference the security considerations of [RFC6158] Section 5.",
      "ja": "[RFC4270]で説明したように暗号化ハッシュに対する攻撃は、よく知られており、時間の経過とともに良くなっています。 RADIUSプロトコルのセキュリティは、[RFC6151]で説明したようにセキュリティ上の問題を有しているMD5 [RFC1321]に依存します。 [RFC6151]に記載されている問題は、RADIUSに適用するかどうかは知られていません。その他の問題については、我々は、参照することによって、[RFC6158]のセクション5のセキュリティ上の配慮を組み込みます。"
    },
    {
      "indent": 3,
      "text": "As with any protocol change, code changes are required in order to implement the new features. These code changes have the potential to introduce new vulnerabilities in the software. Since the RADIUS server performs network authentication, it is an inviting target for attackers. We RECOMMEND that access to RADIUS servers be kept to a minimum.",
      "ja": "任意のプロトコルの変更と同じように、コードの変更は、新しい機能を実装するために必要とされます。これらのコードの変更は、ソフトウェアに新たな脆弱性を導入する可能性を秘めています。 RADIUSサーバがネットワーク認証を実行するので、それが攻撃者のための魅力的なターゲットです。私たちは、RADIUSサーバへのアクセスを最小限に抑えることをお勧めします。"
    },
    {
      "indent": 0,
      "text": "12. References",
      "section_title": true,
      "ja": "12.参考文献"
    },
    {
      "indent": 0,
      "text": "12.1. Normative References",
      "section_title": true,
      "ja": "12.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC2865] Rigney, C., Willens, S., Rubens, A., and W. Simpson, \"Remote Authentication Dial In User Service (RADIUS)\", RFC 2865, June 2000.",
      "ja": "[RFC2865] Rigney、C.、ウィレンス、S.、ルーベン、A.、およびW.シンプソン、RFC 2865、2000年6月 \"ユーザーサービス（RADIUS）でリモート認証ダイヤル\"。"
    },
    {
      "indent": 3,
      "text": "[RFC2866] Rigney, C., \"RADIUS Accounting\", RFC 2866, June 2000.",
      "ja": "[RFC2866] Rigney、C.、 \"RADIUSアカウンティング\"、RFC 2866、2000年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC3575] Aboba, B., \"IANA Considerations for RADIUS (Remote Authentication Dial In User Service)\", RFC 3575, July 2003.",
      "ja": "[RFC3575] Aboba、B.、 \"RADIUSのためのIANAの考慮事項（ユーザサービスにおけるリモート認証ダイヤル）\"、RFC 3575、2003年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC5226] Narten, T. and H. Alvestrand, \"Guidelines for Writing an IANA Considerations Section in RFCs\", BCP 26, RFC 5226, May 2008.",
      "ja": "[RFC5226] Narten氏、T.とH. Alvestrand、 \"RFCsにIANA問題部に書くためのガイドライン\"、BCP 26、RFC 5226、2008年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC6158] DeKok, A., Ed., and G. Weber, \"RADIUS Design Guidelines\", BCP 158, RFC 6158, March 2011.",
      "ja": "[RFC6158] DeKok、A.編、およびG.ウェーバー、 \"RADIUS設計ガイドライン\"、BCP 158、RFC 6158、2011年3月。"
    },
    {
      "indent": 3,
      "text": "[PEN] IANA, \"PRIVATE ENTERPRISE NUMBERS\", <http://www.iana.org/assignments/enterprise-numbers>.",
      "ja": "[PEN] IANA、 \"民間企業番号\"、<http://www.iana.org/assignments/enterprise-numbers>。"
    },
    {
      "indent": 0,
      "text": "12.2. Informative References",
      "section_title": true,
      "ja": "12.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[RFC1321] Rivest, R., \"The MD5 Message-Digest Algorithm\", RFC 1321, April 1992.",
      "ja": "[RFC1321]のRivest、R.、 \"MD5メッセージダイジェストアルゴリズム\"、RFC 1321、1992年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC2868] Zorn, G., Leifer, D., Rubens, A., Shriver, J., Holdrege, M., and I. Goyret, \"RADIUS Attributes for Tunnel Protocol Support\", RFC 2868, June 2000.",
      "ja": "[RFC2868]ゾルン、G.、Leifer、D.、ルーベンス、A.、シュライバー、J.、ホールドレッジ、M.、およびI. Goyret、RFC 2868、2000年6月 \"RADIUSトンネルプロトコルサポートのための属性\"。"
    },
    {
      "indent": 3,
      "text": "[RFC4270] Hoffman, P. and B. Schneier, \"Attacks on Cryptographic Hashes in Internet Protocols\", RFC 4270, November 2005.",
      "ja": "[RFC4270]ホフマン、P.とB.シュナイアー、 \"インターネットプロトコルで暗号化ハッシュに対する攻撃\"、RFC 4270、2005年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC5234] Crocker, D., Ed., and P. Overell, \"Augmented BNF for Syntax Specifications: ABNF\", STD 68, RFC 5234, January 2008.",
      "ja": "\"構文仕様のための増大しているBNF：ABNF\" [RFC5234]クロッカー、D.、エド、およびP. Overell、。、STD 68、RFC 5234、2008年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC6151] Turner, S. and L. Chen, \"Updated Security Considerations for the MD5 Message-Digest and the HMAC-MD5 Algorithms\", RFC 6151, March 2011.",
      "ja": "[RFC6151]ターナー、S.とL.チェン、 \"MD5メッセージダイジェストとHMAC-MD5アルゴリズムのための更新されたセキュリティ上の考慮事項\"、RFC 6151、2011年3月。"
    },
    {
      "indent": 3,
      "text": "[ATTR] \"alandekok/freeradius-server\", available from GitHub, data retrieved September 2010, <http://github.com/alandekok/ freeradius-server/tree/master/share/>.",
      "ja": "GitHubのから入手可能[ATTR \"alandekok / FreeRADIUSのサーバー\"、2010年9月取得したデータ、<http://github.com/alandekok/ FreeRADIUSのサーバ/ツリー/マスター/共有/>。"
    },
    {
      "indent": 0,
      "text": "13. Acknowledgments",
      "section_title": true,
      "ja": "13.謝辞"
    },
    {
      "indent": 3,
      "text": "This document is the result of long discussions in the IETF RADEXT working group. The authors would like to thank all of the participants who contributed various ideas over the years. Their feedback has been invaluable and has helped to make this specification better.",
      "ja": "この文書は、IETF RADEXTワーキンググループでの長い議論の結果です。著者は長年にわたって、さまざまなアイデアを貢献した参加者のすべてに感謝したいと思います。彼らのフィードバックは非常に貴重となっており、この仕様を改善するために役立っています。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Extended Attribute Generator Program",
      "ja": "付録A.拡張属性の生成プログラム"
    },
    {
      "indent": 3,
      "text": "This section contains \"C\" program source code that can be used for testing. It reads a line-oriented text file, parses it to create RADIUS formatted attributes, and prints the hex version of those attributes to standard output.",
      "ja": "このセクションでは、試験のために使用することができ、「C」プログラムのソースコードを含みます。これは、行指向のテキストファイルを読み込み、RADIUSフォーマットされた属性を作成し、それを解析し、標準出力にこれらの属性の六角バージョンを表示します。"
    },
    {
      "indent": 3,
      "text": "The input accepts grammar similar to that given in Section 9, with some modifications for usability. For example, blank lines are allowed, lines beginning with a '#' character are interpreted as comments, numbers (RADIUS Types, etc.) are checked for minimum/ maximum values, and RADIUS attribute lengths are enforced.",
      "ja": "入力は、ユーザビリティのためのいくつかの修正を加えたセクション9で与えられたものと同様の文法を、受け入れます。たとえば、空白行は「＃」文字で始まる行は、最小/最大値がチェックされているコメントは、数字（RADIUSタイプなど）として解釈され、許可されている、およびRADIUSは、長さが施行されている属性。"
    },
    {
      "indent": 3,
      "text": "The program is included here for demonstration purposes only, and does not define a standard of any kind.",
      "ja": "プログラムは、デモの目的のためにここに含まれ、そしてどのような種類の標準を定義していません。"
    },
    {
      "indent": 3,
      "text": "------------------------------------------------------------\n/*\n * Copyright (c) 2013 IETF Trust and the persons identified as\n * authors of the code.  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * - Redistributions of source code must retain the above copyright\n *   notice, this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above\n *   copyright notice, this list of conditions and the following\n *   disclaimer in the documentation and/or other materials provided\n *   with the distribution.\n *\n * - Neither the name of Internet Society, IETF or IETF Trust, nor\n *   the names of specific contributors, may be used to endorse or\n *   promote products derived from this software without specific\n *   prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n * CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS\n * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,",
      "raw": true
    },
    {
      "indent": 3,
      "text": " * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF * SUCH DAMAGE. * * Author: Alan DeKok <aland@networkradius.com> */ #include <stdlib.h> #include <stdio.h> #include <stdint.h> #include <string.h> #include <errno.h> #include <ctype.h>",
      "ja": "*または不法行為そのような損害*の可能性について知らされていた場合でも、一切WAY OUT *本ソフトウェアの使用の損失、データの損失（過失またはその他を含みます）。 * *著者：アランDeKok <aland@networkradius.com> * /書式#include <stdlib.h>に含まする#include <stdio.hに>する#include <stdint.h>の#include <string.hの>の#include <ERRNO.H>書式#include <のctype.h>"
    },
    {
      "indent": 3,
      "text": "static int encode_tlv(char *buffer, uint8_t *output, size_t outlen);",
      "ja": "静的INT encode_tlv（CHAR *バッファ、uint8_tの*の出力、size_tのoutlenは）。"
    },
    {
      "indent": 3,
      "text": "static const char *hextab = \"0123456789abcdef\";",
      "ja": "静的のconstのchar * hextab = \"0123456789ABCDEF\"。"
    },
    {
      "indent": 3,
      "text": "static int encode_data_string(char *buffer,\n                     uint8_t *output, size_t outlen)\n{\n     int length = 0;\n     char *p;",
      "raw": true
    },
    {
      "indent": 8,
      "text": "p = buffer + 1;",
      "ja": "P =バッファー+ 1。"
    },
    {
      "indent": 8,
      "text": "while (*p && (outlen > 0)) { if (*p == '\"') { return length; }",
      "ja": "一方、（* P &&（outlenは> 0））{IF（* P == '\"'）{戻り長;}"
    },
    {
      "indent": 13,
      "text": "if (*p != '\\\\') {\n     *(output++) = *(p++);\n     outlen--;\n     length++;\n     continue;\n}",
      "raw": true
    },
    {
      "indent": 13,
      "text": "switch (p[1]) {\ndefault:\n     *(output++) = p[1];\n     break;",
      "raw": true
    },
    {
      "indent": 13,
      "text": "case 'n':\n     *(output++) = '\\n';\n     break;",
      "raw": true
    },
    {
      "indent": 13,
      "text": "case 'r':\n     *(output++) = '\\r';\n     break;",
      "raw": true
    },
    {
      "indent": 13,
      "text": "case 't':\n     *(output++) = '\\t';\n     break;\n}",
      "raw": true
    },
    {
      "indent": 8,
      "text": "     outlen--;\n     length++;\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "     fprintf(stderr, \"String is not terminated\\n\");\n     return 0;\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "static int encode_data_tlv(char *buffer, char **endptr,\n                  uint8_t *output, size_t outlen)\n{\n     int depth = 0;\n     int length;\n     char *p;",
      "raw": true
    },
    {
      "indent": 8,
      "text": "for (p = buffer; *p != '\\0'; p++) {\n     if (*p == '{') depth++;\n     if (*p == '}') {\n          depth--;\n          if (depth == 0) break;\n     }\n}",
      "raw": true
    },
    {
      "indent": 8,
      "text": "if (*p != '}') {\n     fprintf(stderr, \"No trailing '}' in string starting \"\n          \"with \\\"%s\\\"\\n\",\n          buffer);\n     return 0;\n}",
      "raw": true
    },
    {
      "indent": 8,
      "text": "*endptr = p + 1;\n*p = '\\0';",
      "raw": true
    },
    {
      "indent": 8,
      "text": "p = buffer + 1;\nwhile (isspace((int) *p)) p++;",
      "raw": true
    },
    {
      "indent": 8,
      "text": "length = encode_tlv(p, output, outlen);\nif (length == 0) return 0;",
      "raw": true
    },
    {
      "indent": 3,
      "text": " return length; }",
      "ja": "長さを返します。 }"
    },
    {
      "indent": 3,
      "text": "static int encode_data(char *p, uint8_t *output, size_t outlen) { int length;",
      "ja": "静的INT encode_data（チャー* pを、uint8_tの*の出力、size_tのoutlenは）{int型の長さ;"
    },
    {
      "indent": 8,
      "text": "if (!isspace((int) *p)) {\n     fprintf(stderr, \"Invalid character following attribute \"\n          \"definition\\n\");\n     return 0;\n}",
      "raw": true
    },
    {
      "indent": 8,
      "text": "while (isspace((int) *p)) p++;",
      "ja": "しばらく（isspace（（int型）* P））のp ++;"
    },
    {
      "indent": 8,
      "text": "if (*p == '{') {\n     int sublen;\n     char *q;",
      "raw": true
    },
    {
      "indent": 13,
      "text": "length = 0;",
      "ja": "長さ= 0。"
    },
    {
      "indent": 13,
      "text": "do {\n     while (isspace((int) *p)) p++;\n     if (!*p) {\n          if (length == 0) {\n               fprintf(stderr, \"No data\\n\");\n               return 0;\n          }",
      "raw": true
    },
    {
      "indent": 18,
      "text": "     break;\n}",
      "raw": true
    },
    {
      "indent": 18,
      "text": "sublen = encode_data_tlv(p, &q, output, outlen);\nif (sublen == 0) return 0;",
      "raw": true
    },
    {
      "indent": 13,
      "text": "     length += sublen;\n     output += sublen;\n     outlen -= sublen;\n     p = q;\n} while (*q);",
      "raw": true
    },
    {
      "indent": 8,
      "text": "     return length;\n} if (*p == '\"') {\n     length = encode_data_string(p, output, outlen);\n     return length;\n}",
      "raw": true
    },
    {
      "indent": 8,
      "text": "length = 0; while (*p) {",
      "ja": "長さ= 0。一方、（* P）{"
    },
    {
      "indent": 13,
      "text": "char *c1, *c2;",
      "ja": "するchar * C1、C2 *;"
    },
    {
      "indent": 13,
      "text": "while (isspace((int) *p)) p++;",
      "ja": "しばらく（isspace（（int型）* P））のp ++;"
    },
    {
      "indent": 13,
      "text": "if (!*p) break;",
      "ja": "もし（！* p）を破ります。"
    },
    {
      "indent": 13,
      "text": "if(!(c1 = memchr(hextab, tolower((int) p[0]), 16)) ||\n   !(c2 = memchr(hextab, tolower((int)  p[1]), 16))) {\n     fprintf(stderr, \"Invalid data starting at \"\n          \"\\\"%s\\\"\\n\", p);\n     return 0;\n}",
      "raw": true
    },
    {
      "indent": 13,
      "text": "*output = ((c1 - hextab) << 4) + (c2 - hextab);\noutput++;\nlength++;\np += 2;",
      "raw": true
    },
    {
      "indent": 8,
      "text": "     outlen--;\n     if (outlen == 0) {\n          fprintf(stderr, \"Too much data\\n\");\n          return 0;\n     }\n}",
      "raw": true
    },
    {
      "indent": 8,
      "text": "if (length == 0) {\n     fprintf(stderr, \"Empty string\\n\");\n     return 0;\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "     return length;\n} static int decode_attr(char *buffer, char **endptr)\n{\n     long attr;",
      "raw": true
    },
    {
      "indent": 8,
      "text": "attr = strtol(buffer, endptr, 10);\nif (*endptr == buffer) {\n     fprintf(stderr, \"No valid number found in string \"\n          \"starting with \\\"%s\\\"\\n\", buffer);\n     return 0;\n}",
      "raw": true
    },
    {
      "indent": 8,
      "text": "if (!**endptr) {\n     fprintf(stderr, \"Nothing follows attribute number\\n\");\n     return 0;\n}",
      "raw": true
    },
    {
      "indent": 8,
      "text": "if ((attr <= 0) || (attr > 256)) {\n     fprintf(stderr, \"Attribute number is out of valid \"\n          \"range\\n\");\n     return 0;\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": " return (int) attr; }",
      "ja": "リターン（INT）ATTR。 }"
    },
    {
      "indent": 3,
      "text": "static int decode_vendor(char *buffer, char **endptr) { long vendor;",
      "ja": "静的INT decode_vendor（CHAR *バッファ、チャー** endptrを）{長いベンダー。"
    },
    {
      "indent": 8,
      "text": "if (*buffer != '.') {\n     fprintf(stderr, \"Invalid separator before vendor id\\n\");\n     return 0;\n}",
      "raw": true
    },
    {
      "indent": 8,
      "text": "vendor = strtol(buffer + 1, endptr, 10);\nif (*endptr == (buffer + 1)) {\n     fprintf(stderr, \"No valid vendor number found\\n\");\n     return 0;\n}",
      "raw": true
    },
    {
      "indent": 8,
      "text": "if (!**endptr) {\n     fprintf(stderr, \"Nothing follows vendor number\\n\");\n     return 0;\n} if ((vendor <= 0) || (vendor > (1 << 24))) {\n     fprintf(stderr, \"Vendor number is out of valid range\\n\");\n     return 0;\n}",
      "raw": true
    },
    {
      "indent": 8,
      "text": "if (**endptr != '.') {\n     fprintf(stderr, \"Invalid data following vendor number\\n\");\n     return 0;\n}\n(*endptr)++;",
      "raw": true
    },
    {
      "indent": 3,
      "text": " return (int) vendor; }",
      "ja": "（INT）のベンダーを返します。 }"
    },
    {
      "indent": 3,
      "text": "static int encode_tlv(char *buffer, uint8_t *output, size_t outlen)\n{\n     int attr;\n     int length;\n     char *p;",
      "raw": true
    },
    {
      "indent": 8,
      "text": "attr = decode_attr(buffer, &p);\nif (attr == 0) return 0;",
      "raw": true
    },
    {
      "indent": 8,
      "text": "output[0] = attr;\noutput[1] = 2;",
      "raw": true
    },
    {
      "indent": 8,
      "text": "if (*p == '.') {\n     p++;\n     length = encode_tlv(p, output + 2, outlen - 2);",
      "raw": true
    },
    {
      "indent": 8,
      "text": "} else { length = encode_data(p, output + 2, outlen - 2); }",
      "ja": "}他{長さ= encode_data（P、出力+ 2、outlenは -  2）。 }"
    },
    {
      "indent": 8,
      "text": "if (length == 0) return 0;\nif (length > (255 - 2)) {\n     fprintf(stderr, \"TLV data is too long\\n\");\n     return 0;\n}",
      "raw": true
    },
    {
      "indent": 8,
      "text": "output[1] += length;",
      "ja": "出力[1] + =長さ。"
    },
    {
      "indent": 3,
      "text": "     return length + 2;\n} static int encode_vsa(char *buffer, uint8_t *output, size_t outlen)\n{\n     int vendor;\n     int attr;\n     int length;\n     char *p;",
      "raw": true
    },
    {
      "indent": 8,
      "text": "vendor = decode_vendor(buffer, &p);\nif (vendor == 0) return 0;",
      "raw": true
    },
    {
      "indent": 8,
      "text": "output[0] = 0;\noutput[1] = (vendor >> 16) & 0xff;\noutput[2] = (vendor >> 8) & 0xff;\noutput[3] = vendor & 0xff;",
      "raw": true
    },
    {
      "indent": 8,
      "text": "length = encode_tlv(p, output + 4, outlen - 4);\nif (length == 0) return 0;\nif (length > (255 - 6)) {\n     fprintf(stderr, \"VSA data is too long\\n\");\n     return 0;\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": " return length + 4; }",
      "ja": "戻り長+ 4。 }"
    },
    {
      "indent": 3,
      "text": "static int encode_evs(char *buffer, uint8_t *output, size_t outlen)\n{\n     int vendor;\n     int attr;\n     int length;\n     char *p;",
      "raw": true
    },
    {
      "indent": 8,
      "text": "vendor = decode_vendor(buffer, &p);\nif (vendor == 0) return 0;",
      "raw": true
    },
    {
      "indent": 8,
      "text": "attr = decode_attr(p, &p);\nif (attr == 0) return 0;",
      "raw": true
    },
    {
      "indent": 8,
      "text": "output[0] = 0;\noutput[1] = (vendor >> 16) & 0xff;\noutput[2] = (vendor >> 8) & 0xff;\noutput[3] = vendor & 0xff;\noutput[4] = attr;",
      "raw": true
    },
    {
      "indent": 8,
      "text": "length = encode_data(p, output + 5, outlen - 5);\nif (length == 0) return 0;",
      "raw": true
    },
    {
      "indent": 3,
      "text": " return length + 5; }",
      "ja": "リターン長さ+ 5。 }"
    },
    {
      "indent": 3,
      "text": "static int encode_extended(char *buffer,\n                  uint8_t *output, size_t outlen)\n{\n     int attr;\n     int length;\n     char *p;",
      "raw": true
    },
    {
      "indent": 8,
      "text": "attr = decode_attr(buffer, &p);\nif (attr == 0) return 0;",
      "raw": true
    },
    {
      "indent": 8,
      "text": "output[0] = attr;",
      "ja": "出力[0] ATTRを=。"
    },
    {
      "indent": 8,
      "text": "if (attr == 26) {\n     length = encode_evs(p, output + 1, outlen - 1);\n} else {\n     length = encode_data(p, output + 1, outlen - 1);\n}\nif (length == 0) return 0;\nif (length > (255 - 3)) {\n     fprintf(stderr, \"Extended Attr data is too long\\n\");",
      "raw": true
    },
    {
      "indent": 8,
      "text": " return 0; }",
      "ja": "0を返します。 }"
    },
    {
      "indent": 3,
      "text": " return length + 1; }",
      "ja": "戻り長さ+ 1。 }"
    },
    {
      "indent": 3,
      "text": "static int encode_extended_flags(char *buffer,\n                     uint8_t *output, size_t outlen)\n{\n     int attr;\n     int length, total;\n     char *p;",
      "raw": true
    },
    {
      "indent": 8,
      "text": "attr = decode_attr(buffer, &p);\nif (attr == 0) return 0;",
      "raw": true
    },
    {
      "indent": 8,
      "text": "/* output[0] is the extended attribute */\noutput[1] = 4;\noutput[2] = attr;\noutput[3] = 0;",
      "raw": true
    },
    {
      "indent": 8,
      "text": "if (attr == 26) {\n     length = encode_evs(p, output + 4, outlen - 4);\n     if (length == 0) return 0;",
      "raw": true
    },
    {
      "indent": 8,
      "text": "     output[1] += 5;\n     length -= 5;\n} else {\n     length = encode_data(p, output + 4, outlen - 4);\n}\nif (length == 0) return 0;",
      "raw": true
    },
    {
      "indent": 8,
      "text": "total = 0;\nwhile (1) {\n     int sublen = 255 - output[1];",
      "raw": true
    },
    {
      "indent": 13,
      "text": "if (length <= sublen) {\n     output[1] += length;\n     total += output[1];\n     break;\n}",
      "raw": true
    },
    {
      "indent": 13,
      "text": "length -= sublen;",
      "ja": "長さ -  = sublen。"
    },
    {
      "indent": 13,
      "text": "memmove(output + 255 + 4, output + 255, length);\nmemcpy(output + 255, output, 4);",
      "raw": true
    },
    {
      "indent": 13,
      "text": "output[1] = 255;",
      "ja": "出力[1] = 255。"
    },
    {
      "indent": 13,
      "text": "output[3] |= 0x80;",
      "ja": "出力[3] | = 0x80を;"
    },
    {
      "indent": 8,
      "text": "     output += 255;\n     output[1] = 4;\n     total += 255;\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": " return total; }",
      "ja": "総返します。 }"
    },
    {
      "indent": 3,
      "text": "static int encode_rfc(char *buffer, uint8_t *output, size_t outlen)\n{\n     int attr;\n     int length, sublen;\n     char *p;",
      "raw": true
    },
    {
      "indent": 8,
      "text": "attr = decode_attr(buffer, &p);\nif (attr == 0) return 0;",
      "raw": true
    },
    {
      "indent": 8,
      "text": "length = 2;\noutput[0] = attr;\noutput[1] = 2;",
      "raw": true
    },
    {
      "indent": 8,
      "text": "if (attr == 26) { sublen = encode_vsa(p, output + 2, outlen - 2);",
      "ja": "IF（ATTR == 26）{sublen = encode_vsa（P、出力+ 2、outlenは -  2）。"
    },
    {
      "indent": 8,
      "text": "} else if ((*p == ' ') || ((attr < 241) || (attr > 246))) { sublen = encode_data(p, output + 2, outlen - 2);",
      "ja": "}他（（* P == '「）||（（ATTR <241）||（ATTR> 246）））{sublen = encode_data（P、出力+ 2、outlenは -  2）であれば、"
    },
    {
      "indent": 8,
      "text": "} else {\n     if (*p != '.') {\n          fprintf(stderr, \"Invalid data following \"\n               \"attribute number\\n\");\n          return 0;\n     }",
      "raw": true
    },
    {
      "indent": 13,
      "text": "if (attr < 245) {\n     sublen = encode_extended(p + 1,\n                     output + 2, outlen - 2);\n} else {",
      "raw": true
    },
    {
      "indent": 8,
      "text": "          /*\n           *   Not like the others!\n           */\n          return encode_extended_flags(p + 1, output, outlen);\n     }\n}\nif (sublen == 0) return 0;",
      "raw": true
    },
    {
      "indent": 8,
      "text": "if (sublen > (255 -2)) {\n     fprintf(stderr, \"RFC Data is too long\\n\");\n     return 0;\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "     output[1] += sublen;\n     return length + sublen;\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "int main(int argc, char *argv[])\n{\n     int lineno;\n     size_t i, outlen;\n     FILE *fp;\n     char input[8192], buffer[8192];\n     uint8_t output[4096];",
      "raw": true
    },
    {
      "indent": 8,
      "text": "if ((argc < 2) || (strcmp(argv[1], \"-\") == 0)) {\n     fp = stdin;\n} else {\n     fp = fopen(argv[1], \"r\");\n     if (!fp) {\n          fprintf(stderr, \"Error opening %s: %s\\n\",\n               argv[1], strerror(errno));\n          exit(1);\n     }\n}",
      "raw": true
    },
    {
      "indent": 8,
      "text": "lineno = 0;\nwhile (fgets(buffer, sizeof(buffer), fp) != NULL) {\n     char *p = strchr(buffer, '\\n');",
      "raw": true
    },
    {
      "indent": 13,
      "text": "lineno++;",
      "ja": "LINENO ++;"
    },
    {
      "indent": 13,
      "text": "if (!p) {\n     if (!feof(fp)) {\n          fprintf(stderr, \"Line %d too long in %s\\n\",\n               lineno, argv[1]);\n          exit(1);\n     }\n} else {\n     *p = '\\0';\n}",
      "raw": true
    },
    {
      "indent": 13,
      "text": "p = strchr(buffer, '#');\nif (p) *p = '\\0';",
      "raw": true
    },
    {
      "indent": 13,
      "text": "p = buffer;",
      "ja": "P =バッファと"
    },
    {
      "indent": 13,
      "text": "while (isspace((int) *p)) p++;\nif (!*p) continue;",
      "raw": true
    },
    {
      "indent": 13,
      "text": "strcpy(input, p);\noutlen = encode_rfc(input, output, sizeof(output));\nif (outlen == 0) {\n     fprintf(stderr, \"Parse error in line %d of %s\\n\",\n          lineno, input);\n     exit(1);\n}",
      "raw": true
    },
    {
      "indent": 8,
      "text": "     printf(\"%s -> \", buffer);\n     for (i = 0; i < outlen; i++) {\n          printf(\"%02x \", output[i]);\n     } printf(\"\\n\");\n}",
      "raw": true
    },
    {
      "indent": 8,
      "text": "if (fp != stdin) fclose(fp);",
      "ja": "（もし！FP = STDIN）fcloseを（FP）;"
    },
    {
      "indent": 3,
      "text": "     return 0;\n}\n------------------------------------------------------------",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Alan DeKok Network RADIUS SARL 57bis blvd des Alpes 38240 Meylan France",
      "ja": "ブルバード38240のメイランフランスアルプのアランDeKokネットワークRADIUS SARL 57A"
    },
    {
      "indent": 3,
      "text": "EMail: aland@networkradius.com URI: http://networkradius.com",
      "ja": "電子メール：aland@networkradius.com URI：http://networkradius.com"
    },
    {
      "indent": 3,
      "text": "Avi Lior",
      "ja": "aviファイルLIOR"
    },
    {
      "indent": 3,
      "text": "EMail: avi.ietf@lior.org",
      "ja": "メールアドレス：avi.ietf@lior.org"
    }
  ]
}