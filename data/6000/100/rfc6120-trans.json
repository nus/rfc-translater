{
  "title": {
    "text": "RFC 6120 - Extensible Messaging and Presence Protocol (XMPP): Core",
    "ja": "RFC 6120 - 拡張可能なメッセージングおよびプレゼンスプロトコル（XMPP）：コア"
  },
  "number": 6120,
  "created_at": "2019-10-28 13:19:34.649361+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                    P. Saint-Andre\nRequest for Comments: 6120                                         Cisco\nObsoletes: 3920                                               March 2011\nCategory: Standards Track\nISSN: 2070-1721",
      "raw": true
    },
    {
      "indent": 8,
      "text": "Extensible Messaging and Presence Protocol (XMPP): Core",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "The Extensible Messaging and Presence Protocol (XMPP) is an application profile of the Extensible Markup Language (XML) that enables the near-real-time exchange of structured yet extensible data between any two or more network entities. This document defines XMPP's core protocol methods: setup and teardown of XML streams, channel encryption, authentication, error handling, and communication primitives for messaging, network availability (\"presence\"), and request-response interactions. This document obsoletes RFC 3920.",
      "ja": "拡張メッセージングおよびプレゼンスプロトコル（XMPP）は、任意の2つの以上のネットワークエンティティとの間の構造はまだ拡張可能データのほぼリアルタイムの交換を可能にする拡張マークアップ言語（XML）のアプリケーションプロファイルです。メッセージング、ネットワークアベイラビリティ（「プレゼンス」）、および要求 - 応答インタラクションのためのセットアップおよびティアダウンXMLストリームの、チャネル暗号化、認証、エラー処理、および通信プリミティブ：この文書では、XMPPのコアプロトコルのメソッドを定義します。この文書はRFC 3920を廃止します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 5741のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc6120.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc6120で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2011 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2011 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   8\n  1.1.   Overview . . . . . . . . . . . . . . . . . . . . . . . .   8\n  1.2.   History  . . . . . . . . . . . . . . . . . . . . . . . .   8\n  1.3.   Functional Summary . . . . . . . . . . . . . . . . . . .   9\n  1.4.   Terminology  . . . . . . . . . . . . . . . . . . . . . .  11\n2.  Architecture  . . . . . . . . . . . . . . . . . . . . . . . .  13\n  2.1.   Global Addresses . . . . . . . . . . . . . . . . . . . .  13\n  2.2.   Presence . . . . . . . . . . . . . . . . . . . . . . . .  14\n  2.3.   Persistent Streams . . . . . . . . . . . . . . . . . . .  14\n  2.4.   Structured Data  . . . . . . . . . . . . . . . . . . . .  14\n  2.5.   Distributed Network of Clients and Servers . . . . . . .  14\n3.  TCP Binding . . . . . . . . . . . . . . . . . . . . . . . . .  16\n  3.1.   Scope  . . . . . . . . . . . . . . . . . . . . . . . . .  16\n  3.2.   Resolution of Fully Qualified Domain Names . . . . . . .  17\n    3.2.1.   Preferred Process: SRV Lookup  . . . . . . . . . . .  17\n    3.2.2.   Fallback Processes . . . . . . . . . . . . . . . . .  18\n    3.2.3.   When Not to Use SRV  . . . . . . . . . . . . . . . .  18\n    3.2.4.   Use of SRV Records with Add-On Services  . . . . . .  19\n  3.3.   Reconnection . . . . . . . . . . . . . . . . . . . . . .  19\n  3.4.   Reliability  . . . . . . . . . . . . . . . . . . . . . .  20\n4.  XML Streams . . . . . . . . . . . . . . . . . . . . . . . . .  20\n  4.1.   Stream Fundamentals  . . . . . . . . . . . . . . . . . .  20\n  4.2.   Opening a Stream . . . . . . . . . . . . . . . . . . . .  23\n  4.3.   Stream Negotiation . . . . . . . . . . . . . . . . . . .  24\n    4.3.1.   Basic Concepts . . . . . . . . . . . . . . . . . . .  24\n    4.3.2.   Stream Features Format . . . . . . . . . . . . . . .  25\n    4.3.3.   Restarts . . . . . . . . . . . . . . . . . . . . . .  27\n    4.3.4.   Resending Features . . . . . . . . . . . . . . . . .  27\n    4.3.5.   Completion of Stream Negotiation . . . . . . . . . .  27\n    4.3.6.   Determination of Addresses . . . . . . . . . . . . .  28\n    4.3.7.   Flow Chart . . . . . . . . . . . . . . . . . . . . .  29\n  4.4.   Closing a Stream . . . . . . . . . . . . . . . . . . . .  31\n  4.5.   Directionality . . . . . . . . . . . . . . . . . . . . .  32\n  4.6.   Handling of Silent Peers . . . . . . . . . . . . . . . .  33\n    4.6.1.   Dead Connection  . . . . . . . . . . . . . . . . . .  34\n    4.6.2.   Broken Stream  . . . . . . . . . . . . . . . . . . .  34\n    4.6.3.   Idle Peer  . . . . . . . . . . . . . . . . . . . . .  34\n    4.6.4.   Use of Checking Methods  . . . . . . . . . . . . . .  35\n  4.7.   Stream Attributes  . . . . . . . . . . . . . . . . . . .  35\n    4.7.1.   from . . . . . . . . . . . . . . . . . . . . . . . .  35\n    4.7.2.   to . . . . . . . . . . . . . . . . . . . . . . . . .  37\n    4.7.3.   id . . . . . . . . . . . . . . . . . . . . . . . . .  38\n    4.7.4.   xml:lang . . . . . . . . . . . . . . . . . . . . . .  39\n    4.7.5.   version  . . . . . . . . . . . . . . . . . . . . . .  41\n    4.7.6.   Summary of Stream Attributes . . . . . . . . . . . .  43\n  4.8.   XML Namespaces . . . . . . . . . . . . . . . . . . . . .  43",
      "raw": true
    },
    {
      "indent": 3,
      "text": "    4.8.1.   Stream Namespace . . . . . . . . . . . . . . . . . .  43\n    4.8.2.   Content Namespace  . . . . . . . . . . . . . . . . .  43\n    4.8.3.   XMPP Content Namespaces  . . . . . . . . . . . . . .  44\n    4.8.4.   Other Namespaces . . . . . . . . . . . . . . . . . .  46\n    4.8.5.   Namespace Declarations and Prefixes  . . . . . . . .  47\n  4.9.   Stream Errors  . . . . . . . . . . . . . . . . . . . . .  48\n    4.9.1.   Rules  . . . . . . . . . . . . . . . . . . . . . . .  48\n      4.9.1.1.  Stream Errors Are Unrecoverable . . . . . . . . .  48\n      4.9.1.2.  Stream Errors Can Occur During Setup  . . . . . .  49\n      4.9.1.3.  Stream Errors When the Host Is Unspecified or\n                Unknown . . . . . . . . . . . . . . . . . . . . .  50\n      4.9.1.4.  Where Stream Errors Are Sent  . . . . . . . . . .  50\n    4.9.2.   Syntax . . . . . . . . . . . . . . . . . . . . . . .  51\n    4.9.3.   Defined Stream Error Conditions  . . . . . . . . . .  52\n      4.9.3.1.  bad-format  . . . . . . . . . . . . . . . . . . .  52\n      4.9.3.2.  bad-namespace-prefix  . . . . . . . . . . . . . .  52\n      4.9.3.3.  conflict  . . . . . . . . . . . . . . . . . . . .  53\n      4.9.3.4.  connection-timeout  . . . . . . . . . . . . . . .  54\n      4.9.3.5.  host-gone . . . . . . . . . . . . . . . . . . . .  54\n      4.9.3.6.  host-unknown  . . . . . . . . . . . . . . . . . .  55\n      4.9.3.7.  improper-addressing . . . . . . . . . . . . . . .  56\n      4.9.3.8.  internal-server-error . . . . . . . . . . . . . .  56\n      4.9.3.9.  invalid-from  . . . . . . . . . . . . . . . . . .  56\n      4.9.3.10. invalid-namespace . . . . . . . . . . . . . . . .  57\n      4.9.3.11. invalid-xml . . . . . . . . . . . . . . . . . . .  57\n      4.9.3.12. not-authorized  . . . . . . . . . . . . . . . . .  58\n      4.9.3.13. not-well-formed . . . . . . . . . . . . . . . . .  59\n      4.9.3.14. policy-violation  . . . . . . . . . . . . . . . .  59\n      4.9.3.15. remote-connection-failed  . . . . . . . . . . . .  60\n      4.9.3.16. reset . . . . . . . . . . . . . . . . . . . . . .  60\n      4.9.3.17. resource-constraint . . . . . . . . . . . . . . .  61\n      4.9.3.18. restricted-xml  . . . . . . . . . . . . . . . . .  61\n      4.9.3.19. see-other-host  . . . . . . . . . . . . . . . . .  62\n      4.9.3.20. system-shutdown . . . . . . . . . . . . . . . . .  64\n      4.9.3.21. undefined-condition . . . . . . . . . . . . . . .  64\n      4.9.3.22. unsupported-encoding  . . . . . . . . . . . . . .  64\n      4.9.3.23. unsupported-feature . . . . . . . . . . . . . . .  65\n      4.9.3.24. unsupported-stanza-type . . . . . . . . . . . . .  65\n      4.9.3.25. unsupported-version . . . . . . . . . . . . . . .  66\n    4.9.4.   Application-Specific Conditions  . . . . . . . . . .  67\n  4.10.  Simplified Stream Examples . . . . . . . . . . . . . . .  68\n5.  STARTTLS Negotiation  . . . . . . . . . . . . . . . . . . . .  69\n  5.1.   Fundamentals . . . . . . . . . . . . . . . . . . . . . .  69\n  5.2.   Support  . . . . . . . . . . . . . . . . . . . . . . . .  70\n  5.3.   Stream Negotiation Rules . . . . . . . . . . . . . . . .  70\n    5.3.1.   Mandatory-to-Negotiate . . . . . . . . . . . . . . .  70\n    5.3.2.   Restart  . . . . . . . . . . . . . . . . . . . . . .  70\n    5.3.3.   Data Formatting  . . . . . . . . . . . . . . . . . .  70",
      "raw": true
    },
    {
      "indent": 3,
      "text": "    5.3.4.   Order of TLS and SASL Negotiations . . . . . . . . .  71\n    5.3.5.   TLS Renegotiation  . . . . . . . . . . . . . . . . .  71\n    5.3.6.   TLS Extensions . . . . . . . . . . . . . . . . . . .  72\n  5.4.   Process  . . . . . . . . . . . . . . . . . . . . . . . .  72\n    5.4.1.   Exchange of Stream Headers and Stream Features . . .  72\n    5.4.2.   Initiation of STARTTLS Negotiation . . . . . . . . .  73\n      5.4.2.1.  STARTTLS Command  . . . . . . . . . . . . . . . .  73\n      5.4.2.2.  Failure Case  . . . . . . . . . . . . . . . . . .  73\n      5.4.2.3.  Proceed Case  . . . . . . . . . . . . . . . . . .  74\n    5.4.3.   TLS Negotiation  . . . . . . . . . . . . . . . . . .  74\n      5.4.3.1.  Rules . . . . . . . . . . . . . . . . . . . . . .  74\n      5.4.3.2.  TLS Failure . . . . . . . . . . . . . . . . . . .  75\n      5.4.3.3.  TLS Success . . . . . . . . . . . . . . . . . . .  76\n6.  SASL Negotiation  . . . . . . . . . . . . . . . . . . . . . .  77\n  6.1.   Fundamentals . . . . . . . . . . . . . . . . . . . . . .  77\n  6.2.   Support  . . . . . . . . . . . . . . . . . . . . . . . .  77\n  6.3.   Stream Negotiation Rules . . . . . . . . . . . . . . . .  77\n    6.3.1.   Mandatory-to-Negotiate . . . . . . . . . . . . . . .  77\n    6.3.2.   Restart  . . . . . . . . . . . . . . . . . . . . . .  78\n    6.3.3.   Mechanism Preferences  . . . . . . . . . . . . . . .  78\n    6.3.4.   Mechanism Offers . . . . . . . . . . . . . . . . . .  78\n    6.3.5.   Data Formatting  . . . . . . . . . . . . . . . . . .  79\n    6.3.6.   Security Layers  . . . . . . . . . . . . . . . . . .  80\n    6.3.7.   Simple User Name . . . . . . . . . . . . . . . . . .  80\n    6.3.8.   Authorization Identity . . . . . . . . . . . . . . .  80\n    6.3.9.   Realms . . . . . . . . . . . . . . . . . . . . . . .  81\n    6.3.10.  Round Trips  . . . . . . . . . . . . . . . . . . . .  81\n  6.4.   Process  . . . . . . . . . . . . . . . . . . . . . . . .  82\n    6.4.1.   Exchange of Stream Headers and Stream Features . . .  82\n    6.4.2.   Initiation . . . . . . . . . . . . . . . . . . . . .  83\n    6.4.3.   Challenge-Response Sequence  . . . . . . . . . . . .  84\n    6.4.4.   Abort  . . . . . . . . . . . . . . . . . . . . . . .  84\n    6.4.5.   SASL Failure . . . . . . . . . . . . . . . . . . . .  85\n    6.4.6.   SASL Success . . . . . . . . . . . . . . . . . . . .  86\n  6.5.   SASL Errors  . . . . . . . . . . . . . . . . . . . . . .  87\n    6.5.1.   aborted  . . . . . . . . . . . . . . . . . . . . . .  88\n    6.5.2.   account-disabled . . . . . . . . . . . . . . . . . .  88\n    6.5.3.   credentials-expired  . . . . . . . . . . . . . . . .  88\n    6.5.4.   encryption-required  . . . . . . . . . . . . . . . .  89\n    6.5.5.   incorrect-encoding . . . . . . . . . . . . . . . . .  89\n    6.5.6.   invalid-authzid  . . . . . . . . . . . . . . . . . .  89\n    6.5.7.   invalid-mechanism  . . . . . . . . . . . . . . . . .  90\n    6.5.8.   malformed-request  . . . . . . . . . . . . . . . . .  90\n    6.5.9.   mechanism-too-weak . . . . . . . . . . . . . . . . .  90\n    6.5.10.  not-authorized . . . . . . . . . . . . . . . . . . .  91\n    6.5.11.  temporary-auth-failure . . . . . . . . . . . . . . .  91\n  6.6.   SASL Definition  . . . . . . . . . . . . . . . . . . . .  91\n7.  Resource Binding  . . . . . . . . . . . . . . . . . . . . . .  92",
      "raw": true
    },
    {
      "indent": 3,
      "text": "  7.1.   Fundamentals . . . . . . . . . . . . . . . . . . . . . .  92\n  7.2.   Support  . . . . . . . . . . . . . . . . . . . . . . . .  93\n  7.3.   Stream Negotiation Rules . . . . . . . . . . . . . . . .  93\n    7.3.1.   Mandatory-to-Negotiate . . . . . . . . . . . . . . .  93\n    7.3.2.   Restart  . . . . . . . . . . . . . . . . . . . . . .  93\n  7.4.   Advertising Support  . . . . . . . . . . . . . . . . . .  93\n  7.5.   Generation of Resource Identifiers . . . . . . . . . . .  94\n  7.6.   Server-Generated Resource Identifier . . . . . . . . . .  94\n    7.6.1.   Success Case . . . . . . . . . . . . . . . . . . . .  94\n    7.6.2.   Error Cases  . . . . . . . . . . . . . . . . . . . .  95\n      7.6.2.1.  Resource Constraint . . . . . . . . . . . . . . .  95\n      7.6.2.2.  Not Allowed . . . . . . . . . . . . . . . . . . .  96\n  7.7.   Client-Submitted Resource Identifier . . . . . . . . . .  96\n    7.7.1.   Success Case . . . . . . . . . . . . . . . . . . . .  96\n    7.7.2.   Error Cases  . . . . . . . . . . . . . . . . . . . .  97\n      7.7.2.1.  Bad Request . . . . . . . . . . . . . . . . . . .  97\n      7.7.2.2.  Conflict  . . . . . . . . . . . . . . . . . . . .  97\n    7.7.3.   Retries  . . . . . . . . . . . . . . . . . . . . . .  99\n8.  XML Stanzas . . . . . . . . . . . . . . . . . . . . . . . . .  99\n  8.1.   Common Attributes  . . . . . . . . . . . . . . . . . . . 100\n    8.1.1.   to . . . . . . . . . . . . . . . . . . . . . . . . . 100\n      8.1.1.1.  Client-to-Server Streams  . . . . . . . . . . . . 100\n      8.1.1.2.  Server-to-Server Streams  . . . . . . . . . . . . 101\n    8.1.2.   from . . . . . . . . . . . . . . . . . . . . . . . . 101\n      8.1.2.1.  Client-to-Server Streams  . . . . . . . . . . . . 101\n      8.1.2.2.  Server-to-Server Streams  . . . . . . . . . . . . 102\n    8.1.3.   id . . . . . . . . . . . . . . . . . . . . . . . . . 103\n    8.1.4.   type . . . . . . . . . . . . . . . . . . . . . . . . 103\n    8.1.5.   xml:lang . . . . . . . . . . . . . . . . . . . . . . 103\n  8.2.   Basic Semantics  . . . . . . . . . . . . . . . . . . . . 105\n    8.2.1.   Message Semantics  . . . . . . . . . . . . . . . . . 105\n    8.2.2.   Presence Semantics . . . . . . . . . . . . . . . . . 105\n    8.2.3.   IQ Semantics . . . . . . . . . . . . . . . . . . . . 105\n  8.3.   Stanza Errors  . . . . . . . . . . . . . . . . . . . . . 107\n    8.3.1.   Rules  . . . . . . . . . . . . . . . . . . . . . . . 108\n    8.3.2.   Syntax . . . . . . . . . . . . . . . . . . . . . . . 109\n    8.3.3.   Defined Conditions . . . . . . . . . . . . . . . . . 110\n      8.3.3.1.  bad-request . . . . . . . . . . . . . . . . . . . 110\n      8.3.3.2.  conflict  . . . . . . . . . . . . . . . . . . . . 111\n      8.3.3.3.  feature-not-implemented . . . . . . . . . . . . . 111\n      8.3.3.4.  forbidden . . . . . . . . . . . . . . . . . . . . 112\n      8.3.3.5.  gone  . . . . . . . . . . . . . . . . . . . . . . 113\n      8.3.3.6.  internal-server-error . . . . . . . . . . . . . . 113\n      8.3.3.7.  item-not-found  . . . . . . . . . . . . . . . . . 114\n      8.3.3.8.  jid-malformed . . . . . . . . . . . . . . . . . . 114\n      8.3.3.9.  not-acceptable  . . . . . . . . . . . . . . . . . 115\n      8.3.3.10. not-allowed . . . . . . . . . . . . . . . . . . . 116\n      8.3.3.11. not-authorized  . . . . . . . . . . . . . . . . . 116",
      "raw": true
    },
    {
      "indent": 3,
      "text": "      8.3.3.12. policy-violation  . . . . . . . . . . . . . . . . 117\n      8.3.3.13. recipient-unavailable . . . . . . . . . . . . . . 117\n      8.3.3.14. redirect  . . . . . . . . . . . . . . . . . . . . 118\n      8.3.3.15. registration-required . . . . . . . . . . . . . . 119\n      8.3.3.16. remote-server-not-found . . . . . . . . . . . . . 119\n      8.3.3.17. remote-server-timeout . . . . . . . . . . . . . . 120\n      8.3.3.18. resource-constraint . . . . . . . . . . . . . . . 121\n      8.3.3.19. service-unavailable . . . . . . . . . . . . . . . 121\n      8.3.3.20. subscription-required . . . . . . . . . . . . . . 122\n      8.3.3.21. undefined-condition . . . . . . . . . . . . . . . 123\n      8.3.3.22. unexpected-request  . . . . . . . . . . . . . . . 123\n    8.3.4.   Application-Specific Conditions  . . . . . . . . . . 124\n  8.4.   Extended Content . . . . . . . . . . . . . . . . . . . . 125\n9.  Detailed Examples . . . . . . . . . . . . . . . . . . . . . . 128\n  9.1.   Client-to-Server Examples  . . . . . . . . . . . . . . . 128\n    9.1.1.   TLS  . . . . . . . . . . . . . . . . . . . . . . . . 128\n    9.1.2.   SASL . . . . . . . . . . . . . . . . . . . . . . . . 130\n    9.1.3.   Resource Binding . . . . . . . . . . . . . . . . . . 132\n    9.1.4.   Stanza Exchange  . . . . . . . . . . . . . . . . . . 133\n    9.1.5.   Close  . . . . . . . . . . . . . . . . . . . . . . . 134\n  9.2.   Server-to-Server Examples  . . . . . . . . . . . . . . . 134\n    9.2.1.   TLS  . . . . . . . . . . . . . . . . . . . . . . . . 134\n    9.2.2.   SASL . . . . . . . . . . . . . . . . . . . . . . . . 136\n    9.2.3.   Stanza Exchange  . . . . . . . . . . . . . . . . . . 137\n    9.2.4.   Close  . . . . . . . . . . . . . . . . . . . . . . . 137\n10. Server Rules for Processing XML Stanzas . . . . . . . . . . . 138\n  10.1.  In-Order Processing  . . . . . . . . . . . . . . . . . . 138\n  10.2.  General Considerations . . . . . . . . . . . . . . . . . 140\n  10.3.  No 'to' Address  . . . . . . . . . . . . . . . . . . . . 141\n    10.3.1.  Message  . . . . . . . . . . . . . . . . . . . . . . 141\n    10.3.2.  Presence . . . . . . . . . . . . . . . . . . . . . . 141\n    10.3.3.  IQ . . . . . . . . . . . . . . . . . . . . . . . . . 141\n  10.4.  Remote Domain  . . . . . . . . . . . . . . . . . . . . . 142\n    10.4.1.  Existing Stream  . . . . . . . . . . . . . . . . . . 142\n    10.4.2.  No Existing Stream . . . . . . . . . . . . . . . . . 142\n    10.4.3.  Error Handling . . . . . . . . . . . . . . . . . . . 143\n  10.5.  Local Domain . . . . . . . . . . . . . . . . . . . . . . 143\n    10.5.1.  domainpart . . . . . . . . . . . . . . . . . . . . . 143\n    10.5.2.  domainpart/resourcepart  . . . . . . . . . . . . . . 143\n    10.5.3.  localpart@domainpart . . . . . . . . . . . . . . . . 143\n      10.5.3.1. No Such User  . . . . . . . . . . . . . . . . . . 144\n      10.5.3.2. User Exists . . . . . . . . . . . . . . . . . . . 144\n    10.5.4.  localpart@domainpart/resourcepart  . . . . . . . . . 144\n11. XML Usage . . . . . . . . . . . . . . . . . . . . . . . . . . 145\n  11.1.  XML Restrictions . . . . . . . . . . . . . . . . . . . . 145\n  11.2.  XML Namespace Names and Prefixes . . . . . . . . . . . . 146\n  11.3.  Well-Formedness  . . . . . . . . . . . . . . . . . . . . 146\n  11.4.  Validation . . . . . . . . . . . . . . . . . . . . . . . 147",
      "raw": true
    },
    {
      "indent": 3,
      "text": "  11.5.  Inclusion of XML Declaration . . . . . . . . . . . . . . 147\n  11.6.  Character Encoding . . . . . . . . . . . . . . . . . . . 147\n  11.7.  Whitespace . . . . . . . . . . . . . . . . . . . . . . . 148\n  11.8.  XML Versions . . . . . . . . . . . . . . . . . . . . . . 148\n12. Internationalization Considerations . . . . . . . . . . . . . 148\n13. Security Considerations . . . . . . . . . . . . . . . . . . . 148\n  13.1.  Fundamentals . . . . . . . . . . . . . . . . . . . . . . 148\n  13.2.  Threat Model . . . . . . . . . . . . . . . . . . . . . . 149\n  13.3.  Order of Layers  . . . . . . . . . . . . . . . . . . . . 150\n  13.4.  Confidentiality and Integrity  . . . . . . . . . . . . . 150\n  13.5.  Peer Entity Authentication . . . . . . . . . . . . . . . 151\n  13.6.  Strong Security  . . . . . . . . . . . . . . . . . . . . 151\n  13.7.  Certificates . . . . . . . . . . . . . . . . . . . . . . 152\n    13.7.1.  Certificate Generation . . . . . . . . . . . . . . . 152\n      13.7.1.1. General Considerations  . . . . . . . . . . . . . 152\n      13.7.1.2. Server Certificates . . . . . . . . . . . . . . . 153\n      13.7.1.3. Client Certificates . . . . . . . . . . . . . . . 156\n      13.7.1.4. XmppAddr Identifier Type  . . . . . . . . . . . . 156\n    13.7.2.  Certificate Validation . . . . . . . . . . . . . . . 157\n      13.7.2.1. Server Certificates . . . . . . . . . . . . . . . 158\n      13.7.2.2. Client Certificates . . . . . . . . . . . . . . . 158\n      13.7.2.3. Checking of Certificates in Long-Lived Streams  . 160\n      13.7.2.4. Use of Certificates in XMPP Extensions  . . . . . 160\n  13.8.  Mandatory-to-Implement TLS and SASL Technologies . . . . 160\n    13.8.1.  For Authentication Only  . . . . . . . . . . . . . . 161\n    13.8.2.  For Confidentiality Only . . . . . . . . . . . . . . 161\n    13.8.3.  For Confidentiality and Authentication with\n             Passwords  . . . . . . . . . . . . . . . . . . . . . 162\n    13.8.4.  For Confidentiality and Authentication without\n             Passwords  . . . . . . . . . . . . . . . . . . . . . 163\n  13.9.  Technology Reuse . . . . . . . . . . . . . . . . . . . . 163\n    13.9.1.  Use of Base 64 in SASL . . . . . . . . . . . . . . . 163\n    13.9.2.  Use of DNS . . . . . . . . . . . . . . . . . . . . . 163\n    13.9.3.  Use of Hash Functions  . . . . . . . . . . . . . . . 164\n    13.9.4.  Use of SASL  . . . . . . . . . . . . . . . . . . . . 164\n    13.9.5.  Use of TLS . . . . . . . . . . . . . . . . . . . . . 165\n    13.9.6.  Use of UTF-8 . . . . . . . . . . . . . . . . . . . . 165\n    13.9.7.  Use of XML . . . . . . . . . . . . . . . . . . . . . 166\n  13.10. Information Leaks  . . . . . . . . . . . . . . . . . . . 166\n    13.10.1. IP Addresses . . . . . . . . . . . . . . . . . . . . 166\n    13.10.2. Presence Information . . . . . . . . . . . . . . . . 166\n  13.11. Directory Harvesting . . . . . . . . . . . . . . . . . . 166\n  13.12. Denial of Service  . . . . . . . . . . . . . . . . . . . 167\n  13.13. Firewalls  . . . . . . . . . . . . . . . . . . . . . . . 169\n  13.14. Interdomain Federation . . . . . . . . . . . . . . . . . 169\n  13.15. Non-Repudiation  . . . . . . . . . . . . . . . . . . . . 169\n14. IANA Considerations . . . . . . . . . . . . . . . . . . . . . 170\n  14.1.  XML Namespace Name for TLS Data  . . . . . . . . . . . . 170",
      "raw": true
    },
    {
      "indent": 3,
      "text": "  14.2.  XML Namespace Name for SASL Data . . . . . . . . . . . . 170\n  14.3.  XML Namespace Name for Stream Errors . . . . . . . . . . 170\n  14.4.  XML Namespace Name for Resource Binding  . . . . . . . . 171\n  14.5.  XML Namespace Name for Stanza Errors . . . . . . . . . . 171\n  14.6.  GSSAPI Service Name  . . . . . . . . . . . . . . . . . . 171\n  14.7.  Port Numbers and Service Names . . . . . . . . . . . . . 171\n15. Conformance Requirements  . . . . . . . . . . . . . . . . . . 172\n16. References  . . . . . . . . . . . . . . . . . . . . . . . . . 181\n  16.1.  Normative References . . . . . . . . . . . . . . . . . . 181\n  16.2.  Informative References . . . . . . . . . . . . . . . . . 184\nAppendix A.  XML Schemas  . . . . . . . . . . . . . . . . . . . . 190\n  A.1.   Stream Namespace . . . . . . . . . . . . . . . . . . . . 190\n  A.2.   Stream Error Namespace . . . . . . . . . . . . . . . . . 192\n  A.3.   STARTTLS Namespace . . . . . . . . . . . . . . . . . . . 193\n  A.4.   SASL Namespace . . . . . . . . . . . . . . . . . . . . . 194\n  A.5.   Client Namespace . . . . . . . . . . . . . . . . . . . . 196\n  A.6.   Server Namespace . . . . . . . . . . . . . . . . . . . . 201\n  A.7.   Resource Binding Namespace . . . . . . . . . . . . . . . 206\n  A.8.   Stanza Error Namespace . . . . . . . . . . . . . . . . . 206\nAppendix B.  Contact Addresses  . . . . . . . . . . . . . . . . . 208\nAppendix C.  Account Provisioning . . . . . . . . . . . . . . . . 208\nAppendix D.  Differences from RFC 3920  . . . . . . . . . . . . . 208\nAppendix E.  Acknowledgements . . . . . . . . . . . . . . . . . . 210",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 0,
      "text": "1.1. Overview",
      "section_title": true,
      "ja": "1.1。概要"
    },
    {
      "indent": 3,
      "text": "The Extensible Messaging and Presence Protocol (XMPP) is an application profile of the Extensible Markup Language [XML] that enables the near-real-time exchange of structured yet extensible data between any two or more network entities. This document defines XMPP's core protocol methods: setup and teardown of XML streams, channel encryption, authentication, error handling, and communication primitives for messaging, network availability (\"presence\"), and request-response interactions.",
      "ja": "拡張メッセージングおよびプレゼンスプロトコル（XMPP）は、任意の2つの以上のネットワークエンティティとの間の構造はまだ拡張可能データのほぼリアルタイムの交換を可能にする拡張可能なマークアップ言語[XML]のアプリケーションプロファイルです。メッセージング、ネットワークアベイラビリティ（「プレゼンス」）、および要求 - 応答インタラクションのためのセットアップおよびティアダウンXMLストリームの、チャネル暗号化、認証、エラー処理、および通信プリミティブ：この文書では、XMPPのコアプロトコルのメソッドを定義します。"
    },
    {
      "indent": 0,
      "text": "1.2. History",
      "section_title": true,
      "ja": "1.2。歴史"
    },
    {
      "indent": 3,
      "text": "The basic syntax and semantics of XMPP were developed originally within the Jabber open-source community, mainly in 1999. In late 2002, the XMPP Working Group was chartered with developing an adaptation of the base Jabber protocol that would be suitable as an IETF instant messaging (IM) and presence technology in accordance with [IMP-REQS]. In October 2004, [RFC3920] and [RFC3921] were published, representing the most complete definition of XMPP at that time.",
      "ja": "XMPPの基本的な構文とセマンティクスは、2002年後半には、主に1999年に、もともとJabberのオープンソース・コミュニティ内で開発された、XMPPワーキンググループは、IETFインスタントメッセージングとして適しているであろうベースのJabberプロトコルの適応を開発したチャーター（IM）および[IMP-REQS]に従ってプレゼンス技術。 2004年10月には、[RFC3920]と[RFC3921]はその時点でのXMPPの最も完全な定義を表し、発表されました。"
    },
    {
      "indent": 3,
      "text": "Since 2004 the Internet community has gained extensive implementation and deployment experience with XMPP, including formal interoperability testing carried out under the auspices of the XMPP Standards Foundation (XSF). This document incorporates comprehensive feedback from software developers and XMPP service providers, including a number of backward-compatible modifications summarized under Appendix D. As a result, this document reflects the rough consensus of the Internet community regarding the core features of XMPP 1.0, thus obsoleting RFC 3920.",
      "ja": "2004年以来のインターネットコミュニティは、正式な相互運用性テストを含め、XMPPとの広範な実装および展開の経験を得ていXMPP規格財団（XSF）の後援の下に行わ。このドキュメントは、ソフトウェア開発者からの総合的なフィードバックを内蔵しており、その結果、付録D.の下にまとめ下位互換性修正の番号を含むXMPPサービスプロバイダー、本書は、このように時代遅れ、XMPP 1.0のコア機能に関するインターネットコミュニティのラフコンセンサスを反映していますRFC 3920。"
    },
    {
      "indent": 0,
      "text": "1.3. Functional Summary",
      "section_title": true,
      "ja": "1.3。機能概要"
    },
    {
      "indent": 3,
      "text": "This non-normative section provides a developer-friendly, functional summary of XMPP; refer to the sections that follow for a normative definition of XMPP.",
      "ja": "この非標準セクションには、XMPPの開発者に優しい、機能的な概要を提供します。 XMPPの規範的な定義については、以下のセクションを参照してください。"
    },
    {
      "indent": 3,
      "text": "The purpose of XMPP is to enable the exchange of relatively small pieces of structured data (called \"XML stanzas\") over a network between any two (or more) entities. XMPP is typically implemented using a distributed client-server architecture, wherein a client needs to connect to a server in order to gain access to the network and thus be allowed to exchange XML stanzas with other entities (which can be associated with other servers). The process whereby a client connects to a server, exchanges XML stanzas, and ends the connection is:",
      "ja": "XMPPの目的は、任意の2つ（またはそれ以上）のエンティティ間のネットワークを介して（「XMLスタンザ」と呼ばれる）構造化データの比較的小さな断片の交換を可能にすることです。 XMPPは、典型的には、ネットワークへのアクセスを得るために、したがって、（他のサーバに関連付けることができる）他のエンティティとのXMLスタンザを交換させてもためにクライアントがサーバーに接続する必要が前記分散型クライアント - サーバアーキテクチャを用いて実装されます。クライアントがサーバに接続するプロセスは、XMLスタンザを交換し、接続が終了します。"
    },
    {
      "indent": 3,
      "text": "1. Determine the IP address and port at which to connect, typically based on resolution of a fully qualified domain name (Section 3.2)",
      "ja": "1.通常、完全修飾ドメイン名（3.2節）の解像度に基づいて、接続するのIPアドレスとポートを決定します"
    },
    {
      "indent": 3,
      "text": "2. Open a Transmission Control Protocol [TCP] connection",
      "section_title": true,
      "ja": "2.伝送制御プロトコル[TCP]コネクションを開きます。"
    },
    {
      "indent": 3,
      "text": "3. Open an XML stream over TCP (Section 4.2)",
      "section_title": true,
      "ja": "3. TCP（4.2節）を介してXMLストリームを開きます。"
    },
    {
      "indent": 3,
      "text": "4. Preferably negotiate Transport Layer Security [TLS] for channel encryption (Section 5)",
      "ja": "4.好ましくは交渉トランスポート層セキュリティ[TLS]チャネル暗号化のための（第5節）"
    },
    {
      "indent": 3,
      "text": "5. Authenticate using a Simple Authentication and Security Layer [SASL] mechanism (Section 6)",
      "ja": "簡易認証およびセキュリティ層を用いた5認証[SASL]メカニズム（第6節）"
    },
    {
      "indent": 3,
      "text": "6. Bind a resource to the stream (Section 7)",
      "section_title": true,
      "ja": "6.ストリーム（第7節）にリソースをバインド"
    },
    {
      "indent": 3,
      "text": "7. Exchange an unbounded number of XML stanzas with other entities on the network (Section 8)",
      "ja": "7.交流ネットワーク上の他のエンティティとXMLスタンザの無制限の数（8節）"
    },
    {
      "indent": 3,
      "text": "8. Close the XML stream (Section 4.4)",
      "section_title": true,
      "ja": "8. XMLストリーム（セクション4.4）を閉じ"
    },
    {
      "indent": 3,
      "text": "9. Close the TCP connection",
      "section_title": true,
      "ja": "9. TCPコネクションを閉じます"
    },
    {
      "indent": 3,
      "text": "Within XMPP, one server can optionally connect to another server to enable inter-domain or inter-server communication. For this to happen, the two servers need to negotiate a connection between themselves and then exchange XML stanzas; the process for doing so is:",
      "ja": "XMPP内、1台のサーバが必要に応じて、ドメイン間またはサーバ間の通信を可能にするために、別のサーバーに接続することができます。そのためには、2台のサーバが自分自身と、その後の為替XMLスタンザの間の接続をネゴシエートする必要があります。そうするためのプロセスは、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "1. Determine the IP address and port at which to connect, typically based on resolution of a fully qualified domain name (Section 3.2)",
      "ja": "1.通常、完全修飾ドメイン名（3.2節）の解像度に基づいて、接続するのIPアドレスとポートを決定します"
    },
    {
      "indent": 3,
      "text": "2. Open a TCP connection",
      "section_title": true,
      "ja": "2. TCPコネクション"
    },
    {
      "indent": 3,
      "text": "3. Open an XML stream (Section 4.2)",
      "section_title": true,
      "ja": "3. [XMLストリーム（4.2節）"
    },
    {
      "indent": 3,
      "text": "4. Preferably negotiate TLS for channel encryption (Section 5)",
      "section_title": true,
      "ja": "4.好ましくは、チャネル暗号化（セクション5）のためのTLSをネゴシエート"
    },
    {
      "indent": 3,
      "text": "5. Authenticate using a Simple Authentication and Security Layer [SASL] mechanism (Section 6) *",
      "ja": "簡易認証およびセキュリティ層[SASL]メカニズムを使用して5.認証（第6節）*"
    },
    {
      "indent": 3,
      "text": "6. Exchange an unbounded number of XML stanzas both directly for the servers and indirectly on behalf of entities associated with each server, such as connected clients (Section 8)",
      "ja": "6.交換直接サーバーおよび間接的に接続しているクライアント（セクション8）として、各サーバに関連付けられたエンティティに代わって、両方のXMLスタンザの無制限数"
    },
    {
      "indent": 3,
      "text": "7. Close the XML stream (Section 4.4)",
      "section_title": true,
      "ja": "XMLストリームを閉じます7.（4.4節）"
    },
    {
      "indent": 3,
      "text": "8. Close the TCP connection",
      "section_title": true,
      "ja": "8. TCPコネクションを閉じます"
    },
    {
      "indent": 6,
      "text": "* Interoperability Note: At the time of writing, most deployed servers still use the Server Dialback protocol [XEP-0220] to provide weak identity verification instead of using SASL with PKIX certificates to provide strong authentication, especially in cases where SASL negotiation would not result in strong authentication anyway (e.g., because TLS negotiation was not mandated by the peer server, or because the PKIX certificate presented by the peer server during TLS negotiation is self-signed and has not been previously accepted); for details, see [XEP-0220]. The solutions specified in this document offer a significantly stronger level of security (see also Section 13.6).",
      "ja": "*相互運用注：執筆時点では、ほとんど展開されたサーバーは、まだ特にSASL交渉が生じない場合には、代わりに強力な認証を提供するために、PKIX証明書を使用してSASLを使用しての弱い本人確認を提供するために、サーバーのダイアルバックプロトコル[XEP-0220]を使用しますとにかく強力な認証（例えば、TLSネゴシエーションがピア・サーバーで義務付けられていなかったため、またはTLSネゴシエーション中にピアサーバから提示さPKIX証明書が自己署名であると以前に受け入れられていないため）。詳細については、[XEP-0220]を参照してください。この文書で指定されたソリューションは、セキュリティの有意に強いレベルを提供します（セクション13.6を参照してください）。"
    },
    {
      "indent": 3,
      "text": "This document specifies how clients connect to servers and specifies the basic semantics of XML stanzas. However, this document does not define the \"payloads\" of the XML stanzas that might be exchanged once a connection is successfully established; instead, those payloads are defined by various XMPP extensions. For example, [XMPP-IM] defines extensions for basic instant messaging and presence functionality. In addition, various specifications produced in the XSF's XEP series [XEP-0001] define extensions for a wide range of applications.",
      "ja": "この文書では、クライアントがサーバに接続する方法を指定し、XMLスタンザの基本的な意味論を指定します。しかし、この文書では、接続が正常に確立された後に交換されることがありますXMLスタンザの「ペイロード」を定義していません。代わりに、これらのペイロードは、様々なXMPPの拡張によって定義されています。例えば、[XMPP-IM]は基本的なインスタントメッセージングおよびプレゼンス機能の拡張を定義します。加えて、XSFのXEPシリーズ[XEP-0001]において産生さ様々な仕様は、アプリケーションの広い範囲のための拡張機能を定義します。"
    },
    {
      "indent": 0,
      "text": "1.4. Terminology",
      "section_title": true,
      "ja": "1.4。用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119 [KEYWORDS].",
      "ja": "キーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、 \"SHALL\"、 \"SHOULD\"、 \"ないもの\"、 \"推奨\" \"ない（SHOULD NOT）\"、 \"MAY\"、 \"推奨NOT\"、および「OPTIONAL RFC 2119に記載されているように「この文書の[KEYWORDS]解釈されるべきです。"
    },
    {
      "indent": 3,
      "text": "Certain security-related terms are to be understood in the sense defined in [SEC-TERMS]; such terms include, but are not limited to, \"assurance\", \"attack\", \"authentication\", \"authorization\", \"certificate\", \"certification authority\", \"certification path\", \"confidentiality\", \"credential\", \"downgrade\", \"encryption\", \"hash value\", \"identity\", \"integrity\", \"signature\", \"self-signed certificate\", \"sign\", \"spoof\", \"tamper\", \"trust\", \"trust anchor\", \"validate\", and \"verify\".",
      "ja": "特定のセキュリティ関連の用語は[SEC-TERMS]で定義された意味で理解されるべきです。このような用語には、それだけ、「保証」、「攻撃」、「認証」、「認証」、「証明書」、「認証局」、「証明書パス」、「機密性」、「資格」、「ダウングレードに限定されないが、 」、 『暗号化』、 『ハッシュ値』、 『アイデンティティ』、 『完全性』、 『署名』、 『自己署名証明書』、 『記号』、 『なりすまし』、 『改ざん』、 『信頼』、 『トラストアンカー』 、「検証」、および「検証」。"
    },
    {
      "indent": 3,
      "text": "Certain terms related to certificates, domains, and application service identity are to be understood in the sense defined in [TLS-CERTS]; these include, but are not limited to, \"PKIX certificate\", \"source domain\", \"derived domain\", and the identifier types \"CN-ID\", \"DNS-ID\", and \"SRV-ID\".",
      "ja": "証明書は、ドメイン、およびアプリケーション・サービス・アイデンティティに関連する特定の用語は、[TLS-CERTS]で定義された意味で理解されるべきです。これらとしては、 \"PKIX証明書\"、 \"ソースドメイン\"、 \"誘導されたドメイン\"、および識別子タイプ \"CN-ID\"、 \"DNS-ID\"、および \"SRV-ID\" に限定されるものではありません。"
    },
    {
      "indent": 3,
      "text": "Other security-related terms are to be understood in the sense defined in the referenced specifications (for example, \"denial of service\" as described in [DOS] or \"end entity certificate\" as described in [PKIX]).",
      "ja": "（[DOS]または[PKIX]に記載されているように、「エンドエンティティ証明書」に記載されているように、例えば、「サービスの拒否」）他のセキュリティ関連の用語が参照される仕様で定義された意味で理解されるべきです。"
    },
    {
      "indent": 3,
      "text": "The term \"whitespace\" is used to refer to any character or characters matching the \"S\" production from [XML], i.e., one or more instances of the SP, HTAB, CR, or LF rules defined in [ABNF].",
      "ja": "用語「空白」はSP、HTAB、CR、または[ABNF]で定義されたLFルールの[XML]、即ち、1つ以上のインスタンスから「S」の生産に一致する文字または文字を指すために使用されます。"
    },
    {
      "indent": 3,
      "text": "The terms \"localpart\", \"domainpart\", and \"resourcepart\" are defined in [XMPP-ADDR].",
      "ja": "用語 \"ローカル部分\"、 \"domainpart\"、および \"resourcepartは\" [XMPP-ADDR]で定義されています。"
    },
    {
      "indent": 3,
      "text": "The term \"bare JID\" refers to an XMPP address of the form <localpart@domainpart> (for an account at a server) or of the form <domainpart> (for a server).",
      "ja": "用語「裸JIDは」フォームのXMPPアドレスを指す<ローカル部分@ domainpart>（サーバのアカウントの場合）またはフォームの<domainpart>（サーバ用）。"
    },
    {
      "indent": 3,
      "text": "The term \"full JID\" refers to an XMPP address of the form <localpart@domainpart/resourcepart> (for a particular authorized client or device associated with an account) or of the form <domainpart/resourcepart> (for a particular resource or script associated with a server).",
      "ja": "用語「完全JIDは」（アカウントに関連付けられた特定の許可クライアントまたはデバイスのための）フォームのXMPPアドレス<ローカル部分@ domainpart / resourcepart>を指すか、または特定のリソースまたはスクリプトの形<domainpart / resourcepart>（の）サーバーに関連付けられています。"
    },
    {
      "indent": 3,
      "text": "The term \"XML stream\" (also \"stream\") is defined under Section 4.1.",
      "ja": "用語「XMLストリーム」（また、「ストリーム」）は、セクション4.1の下に定義されます。"
    },
    {
      "indent": 3,
      "text": "The term \"XML stanza\" (also \"stanza\") is defined under Section 4.1. There are three kinds of stanzas: message, presence, and IQ (short for \"Info/Query\"). These communication primitives are defined under Sections 8.2.1, 8.2.2, and 8.2.3, respectively.",
      "ja": "用語「XMLスタンザ」（また、「スタンザ」）は、セクション4.1の下に定義されます。メッセージ、プレゼンス、およびIQ（「情報/クエリ」の略）：スタンザの3種類があります。これらの通信プリミティブは、それぞれ、セクション8.2.1、8.2.2の下で定義され、および8.2.3れます。"
    },
    {
      "indent": 3,
      "text": "The term \"originating entity\" refers to the entity that first generates a stanza that is sent over an XMPP network (e.g., a connected client, an add-on service, or a server). The term \"generated stanza\" refers to the stanza so generated.",
      "ja": "「エンティティを発信する」という用語は、第XMPPネットワーク（例えば、接続されたクライアント、アドオンサービス、またはサーバ）を介して送信されたスタンザを生成するエンティティを指します。用語「生成されたスタンザは、」そのように生成スタンザを指します。"
    },
    {
      "indent": 3,
      "text": "The term \"input stream\" designates an XML stream over which a server receives data from a connected client or remote server, and the term \"output stream\" designates an XML stream over which a server sends data to a connected client or remote server. The following terms designate some of the actions that a server can perform when processing data received over an input stream:",
      "ja": "用語「入力ストリーム」は、サーバーが接続されたクライアントまたはリモートサーバーからデータを受信し、そして用語「出力ストリーム」は、サーバーが接続されたクライアントまたはリモートサーバーにデータを送信する上XMLストリームを指定した上にXMLストリームを指定します。以下の用語は、処理データが入力ストリームを介して受信したときに、サーバが実行できるアクションのいくつかを指定します。"
    },
    {
      "indent": 6,
      "text": "route: pass the data to a remote server for direct processing by the remote server or eventual delivery to a client associated with the remote server",
      "ja": "ルートは、リモートサーバに関連するクライアントにリモートのサーバもしくは最終的な送達によって直接処理のためにリモート・サーバにデータを渡します"
    },
    {
      "indent": 6,
      "text": "deliver: pass the data to a connected client",
      "ja": "提供：接続されたクライアントにデータを渡します"
    },
    {
      "indent": 6,
      "text": "ignore: discard the data without acting upon it or returning an error to the sender",
      "ja": "無視：それに作用するか、送信者にエラーを返さずにデータを破棄"
    },
    {
      "indent": 3,
      "text": "When the term \"ignore\" is used with regard to client processing of data it receives, the phrase \"without acting upon it\" explicitly includes not presenting the data to a human user.",
      "ja": "用語「無視」を「それに作用することなく、」それは、フレーズ受信データのクライアント処理に関連して使用されている場合は、明示的に人間のユーザにデータを提示していないが含まれます。"
    },
    {
      "indent": 3,
      "text": "Following the \"XML Notation\" used in [IRI] to represent characters that cannot be rendered in ASCII-only documents, some examples in this document use the form \"&#x....\" as a notational device to represent [UNICODE] characters (e.g., the string \"&#x0159;\" stands for the Unicode character LATIN SMALL LETTER R WITH CARON); this form is definitely not to be sent over the wire in XMPP systems.",
      "ja": "ASCIIのみの文書にレンダリングすることができない文字を表すために[IRI]で使用される「XML表記」以下、この文書のいくつかの例は、フォームを使用し、「＆＃1 X ...」[UNICODE]を表すために表記装置として文字（例えば、文字列「＆＃x0159のは、」Unicode文字キャロン付きラテン小文字Rの略）。このフォームは間違いないXMPPシステムにおけるワイヤ上で送信されます。"
    },
    {
      "indent": 3,
      "text": "Consistent with the convention used in [URI] to represent Uniform Resource Identifiers, XMPP addresses in running text are enclosed between '<' and '>' (although natively they are not URIs).",
      "ja": "統一資源識別子を表すために[URI]で使用される慣例と一致し、テキストを実行中のXMPPアドレスが間に封入されている「<」と「>」（ネイティブそれらはURIのではないが）。"
    },
    {
      "indent": 3,
      "text": "In examples, lines have been wrapped for improved readability, \"[...]\" means elision, and the following prepended strings are used (these prepended strings are not to be sent over the wire):",
      "ja": "実施例では、ラインは読みやすくするためにラップされている、「[...]」エリジオンを意味し、次の前置文字列は、（これらの付加文字列がないワイヤを介して送信されるように）使用されています。"
    },
    {
      "indent": 3,
      "text": "o C: = a client",
      "ja": "O C：クライアントを="
    },
    {
      "indent": 3,
      "text": "o E: = any XMPP entity o I: = an initiating entity",
      "ja": "O E：I oを任意のXMPP実体を=：開始するエンティティを="
    },
    {
      "indent": 3,
      "text": "o P: = a peer server",
      "ja": "O P：=ピアサーバ"
    },
    {
      "indent": 3,
      "text": "o R: = a receiving entity",
      "ja": "R O：受信エンティティ="
    },
    {
      "indent": 3,
      "text": "o S: = a server",
      "ja": "O S：=サーバー"
    },
    {
      "indent": 3,
      "text": "o S1: = server1",
      "ja": "O S1：= SERVER1"
    },
    {
      "indent": 3,
      "text": "o S2: = server2",
      "ja": "O S2：= SERVER2"
    },
    {
      "indent": 3,
      "text": "Readers need to be aware that the examples are not exhaustive and that, in examples for some protocol flows, the alternate steps shown would not necessarily be triggered by the exact data sent in the previous step; in all cases the protocol definitions specified in this document or in normatively referenced documents rule over any examples provided here. All examples are fictional and the information exchanged (e.g., usernames and passwords) does not represent any existing users or servers.",
      "ja": "読者は、いくつかのプロトコル・フローの例において、示され、代替の手順は、必ずしも前のステップで送信された正確なデータによってトリガされないであろう、例は網羅的ではなく、そのことを認識する必要があります。すべての場合には、この文書や規範的に参照文書で指定されたプロトコルの定義は、ここで提供される任意の例を治めます。すべての例は架空であり、情報が（例えば、ユーザ名とパスワード）を交換し、既存のユーザーやサーバーを表すものではありません。"
    },
    {
      "indent": 0,
      "text": "2. Architecture",
      "section_title": true,
      "ja": "2.アーキテクチャ"
    },
    {
      "indent": 3,
      "text": "XMPP provides a technology for the asynchronous, end-to-end exchange of structured data by means of direct, persistent XML streams among a distributed network of globally addressable, presence-aware clients and servers. Because this architectural style involves ubiquitous knowledge of network availability and a conceptually unlimited number of concurrent information transactions in the context of a given client-to-server or server-to-server session, we label it \"Availability for Concurrent Transactions\" (ACT) to distinguish it from the \"Representational State Transfer\" [REST] architectural style familiar from the World Wide Web. Although the architecture of XMPP is similar in important ways to that of email (see [EMAIL-ARCH]), it introduces several modifications to facilitate communication in close to real time. The salient features of this ACTive architectural style are as follows.",
      "ja": "XMPPは、グローバルにアドレス、プレゼンス対応のクライアントとサーバの分散ネットワーク間で直接、永続的なXMLストリームによる構造化データの非同期、エンド・ツー・エンドの交換のための技術を提供します。この建築様式は、ネットワークの可用性と特定のクライアント - サーバまたはサーバ間のセッションのコンテキストで同時情報取引の概念的無制限の数のユビキタスな知識を必要とするので、私たちは「並行トランザクションの入手可能性」（ACT）、それにラベルを付けますワールド・ワイド・ウェブからのお馴染みの「のRepresentational State転送」[REST]の建築様式と区別するため。 XMPPのアーキテクチャは、電子メールの場合と重要な方法（[EMAIL-ARCH]を参照）に類似しているが、それはリアルタイムに近いにおける通信を容易にするためにいくつかの変更を導入します。次のようにこのアクティブな建築様式の顕著な特徴があります。"
    },
    {
      "indent": 0,
      "text": "2.1. Global Addresses",
      "section_title": true,
      "ja": "2.1。グローバルアドレス"
    },
    {
      "indent": 3,
      "text": "As with email, XMPP uses globally unique addresses (based on the Domain Name System) in order to route and deliver messages over the network. All XMPP entities are addressable on the network, most particularly clients and servers but also various additional services that can be accessed by clients and servers. In general, server addresses are of the form <domainpart> (e.g., <im.example.com>), accounts hosted at a server are of the form <localpart@domainpart> (e.g., <juliet@im.example.com>, called a \"bare JID\"), and a particular connected device or resource that is currently authorized for interaction on behalf of an account is of the form <localpart@domainpart/resourcepart> (e.g., <juliet@im.example.com/balcony>, called a \"full JID\"). For historical reasons, XMPP addresses are often called Jabber IDs or JIDs. Because the formal specification of the XMPP address format depends on internationalization technologies that are in flux at the time of writing, the format is defined in [XMPP-ADDR] instead of this document. The terms \"localpart\", \"domainpart\", and \"resourcepart\" are defined more formally in [XMPP-ADDR].",
      "ja": "電子メールと同じように、XMPPをルーティングするために、（ドメイン名システムに基づいて）グローバルに一意のアドレスを使用して、ネットワーク上でメッセージを配信します。すべてのXMPP実体は、ネットワーク上のクライアントとサーバがアクセスすることができ、最も特に、クライアントとサーバだけでなく、様々な付加サービスのアドレス指定可能です。一般的には、サーバーのアドレスは<domainpart>（例えば、<im.example.com>）の形のものであり、サーバーでホストされているアカウントは<ローカル部@ domainpart>（例えば、<juliet@im.example.com>の形式です。 、）「裸のJID」と呼ばれ、現在のアカウントに代わって相互作用のために許可されている特定の接続されたデバイスまたはリソースの形式は、<ローカル部分@ domainpart / resourcepart>（例えば、<juliet@im.example.com/バルコニー>、） \"完全なJID\" と呼ばれます。歴史的な理由のために、XMPPアドレスは、多くの場合、JabberのIDやたJIDと呼ばれています。 XMPPアドレス形式の正式な仕様は執筆時点で流動的である国際化技術に依存するため、形式は[XMPP-ADDR]の代わりに、このドキュメントで定義されています。用語 \"ローカル部分\"、 \"domainpart\"、および \"resourcepartは、\" [XMPP-ADDR]により正式に定義されています。"
    },
    {
      "indent": 0,
      "text": "2.2. Presence",
      "section_title": true,
      "ja": "2.2。存在"
    },
    {
      "indent": 3,
      "text": "XMPP includes the ability for an entity to advertise its network availability or \"presence\" to other entities. In XMPP, this availability for communication is signaled end-to-end by means of a dedicated communication primitive: the <presence/> stanza. Although knowledge of network availability is not strictly necessary for the exchange of XMPP messages, it facilitates real-time interaction because the originator of a message can know before initiating communication that the intended recipient is online and available. End-to-end presence is defined in [XMPP-IM].",
      "ja": "XMPPは、そのネットワークの可用性や他のエンティティへの「プレゼンス」を宣伝するエンティティのための機能が含まれています。 <存在/>スタンザ：XMPPでは、通信のためのこの可用性は、プリミティブ専用の通信により、エンドツーエンドのシグナリングされます。ネットワークの可用性の知識はXMPPメッセージの交換のために厳密に必要ではないが、メッセージの発信者が意図した受信者がオンラインで利用可能である通信を開始する前に知ることができるので、それはリアルタイムの相互作用を促進します。エンドツーエンドの存在は[XMPP-IM]で定義されています。"
    },
    {
      "indent": 0,
      "text": "2.3. Persistent Streams",
      "section_title": true,
      "ja": "2.3。永続的なストリーム"
    },
    {
      "indent": 3,
      "text": "Availability for communication is also built into each point-to-point \"hop\" through the use of persistent XML streams over long-lived TCP connections. These \"always-on\" client-to-server and server-to-server streams enable each party to push data to the other party at any time for immediate routing or delivery. XML streams are defined under Section 4.",
      "ja": "通信の入手可能性は、また、長寿命のTCP接続上で永続的なXMLストリームを使用して、各ポイント・ツー・ポイントの「ホップ」に組み込まれています。これらは、「常時オン」へのサーバー、クライアントとサーバー間のストリームの即時ルーティングまたは配信のためにいつでも相手方にデータをプッシュするために各当事者が可能になります。 XMLストリームは、第4の下で定義されています。"
    },
    {
      "indent": 0,
      "text": "2.4. Structured Data",
      "section_title": true,
      "ja": "2.4。構造化データ"
    },
    {
      "indent": 3,
      "text": "The basic protocol data unit in XMPP is not an XML stream (which simply provides the transport for point-to-point communication) but an XML \"stanza\", which is essentially a fragment of XML that is sent over a stream. The root element of a stanza includes routing attributes (such as \"from\" and \"to\" addresses), and the child elements of the stanza contain a payload for delivery to the intended recipient. XML stanzas are defined under Section 8.",
      "ja": "XMPPにおける基本的なプロトコルデータユニット（単に、ポイント・ツー・ポイント通信のためのトランスポートを提供する）XMLストリームではなく、本質的にストリームを介して送信されるXMLの断片であるXML「スタンザ」。スタンザのルート要素は、ルーティング（例えば「から」などと「から」アドレス）属性、及びスタンザの子要素を含むことを意図した受信者への配信のためのペイロードを含んでいます。 XMLスタンザは、セクション8の下で定義されています。"
    },
    {
      "indent": 0,
      "text": "2.5. Distributed Network of Clients and Servers",
      "section_title": true,
      "ja": "2.5。クライアントとサーバーの分散ネットワーク"
    },
    {
      "indent": 3,
      "text": "In practice, XMPP consists of a network of clients and servers that inter-communicate (however, communication between any two given deployed servers is strictly discretionary and a matter of local service policy). Thus, for example, the user <juliet@im.example.com> associated with the server <im.example.com> might be able to exchange messages, presence, and other structured data with the user <romeo@example.net> associated with the server <example.net>. This pattern is familiar from messaging protocols that make use of global addresses, such as the email network (see [SMTP] and [EMAIL-ARCH]). As a result, end-to-end communication in XMPP is logically peer-to-peer but physically client-to-server-to-server-to-client, as illustrated in the following diagram.",
      "ja": "実際には、XMPPは、相互に通信クライアントとサーバのネットワークで構成されています（ただし、任意の与えられた二つの展開サーバー間の通信は、厳密に一任され、ローカルサービスポリシーの問題）。したがって、例えば、ユーザ<juliet@im.example.com>サーバに関連付けられた<im.example.com>ユーザとメッセージ、プレゼンス、および他の構造化データを交換することができるかもしれない<romeo@example.net>サーバー<example.net>に関連付けられています。このパターンは、（[SMTP]と[EMAIL-ARCH]参照）、このような電子メールネットワークなどのグローバルアドレス、を利用するメッセージング・プロトコルからよく知られています。結果として、XMPPにエンド・ツー・エンド通信は、論理的ピア・ツー・ピアであるが、物理的にクライアントとサーバ間からクライアントへ、以下の図に示すように。"
    },
    {
      "indent": 3,
      "text": "  example.net <--------------> im.example.com\n     ^                                ^\n     |                                |\n     v                                v\nromeo@example.net           juliet@im.example.com",
      "raw": true
    },
    {
      "indent": 13,
      "text": "Figure 1: Distributed Client-Server Architecture",
      "ja": "図1：分散クライアントサーバーアーキテクチャ"
    },
    {
      "indent": 6,
      "text": "Informational Note: Architectures that employ XML streams (Section 4) and XML stanzas (Section 8) but that establish peer-to-peer connections directly between clients using technologies based on [LINKLOCAL] have been deployed, but such architectures are not defined in this specification and are best described as \"XMPP-like\"; for details, see [XEP-0174]. In addition, XML streams can be established end-to-end over any reliable transport, including extensions to XMPP itself; however, such methods are out of scope for this specification.",
      "ja": "情報注：XMLストリーム（第4章）とXMLスタンザ（セクション8）しかし、それは[LINKLOCAL]に基づく技術を使用しているクライアント間で直接ピア・ツー・ピア接続を確立を使用するアーキテクチャが展開されているが、そのようなアーキテクチャは、この中で定義されていません仕様とは、最高の「XMPP様」と記載されています。詳細については、[XEP-0174]を参照してください。また、XMLストリームはXMPP自体の拡張を含め、任意の信頼できるトランスポート上でのエンドツーエンドを確立することができます。しかしながら、このような方法は、本明細書の範囲外です。"
    },
    {
      "indent": 3,
      "text": "The following paragraphs describe the responsibilities of clients and servers on the network.",
      "ja": "次の段落では、ネットワーク上のクライアントとサーバの責任を記述する。"
    },
    {
      "indent": 3,
      "text": "A client is an entity that establishes an XML stream with a server by authenticating using the credentials of a registered account (via SASL negotiation (Section 6)) and that then completes resource binding (Section 7) in order to enable delivery of XML stanzas between the server and the client over the negotiated stream. The client then uses XMPP to communicate with its server, other clients, and any other entities on the network, where the server is responsible for delivering stanzas to other connected clients at the same server or routing them to remote servers. Multiple clients can connect simultaneously to a server on behalf of the same registered account, where each client is differentiated by the resourcepart of an XMPP address (e.g., <juliet@im.example.com/balcony> vs. <juliet@im.example.com/chamber>), as defined under [XMPP-ADDR] and Section 7.",
      "ja": "クライアントが（SASLネゴシエーション（セクション6）を介して）登録されたアカウントの資格情報を使用して認証することによって、その後の間のXMLスタンザの送達を可能にするために、リソース結合（セクション7）を完了したことをサーバとXMLストリームを確立するエンティティであります交渉されたストリームを介してサーバとクライアント。次に、クライアントは、サーバが同じサーバに接続された他のクライアントへのスタンザを送達またはリモートサーバーにそれらをルーティングする責任があり、サーバー、他のクライアント、およびネットワーク上の他のエンティティと通信するXMPPを使用しています。複数のクライアントは、各クライアントがXMPPアドレス（例えば、<juliet@im.example.com/balcony>対<juliet@im.exampleのresourcepartによって区別されているのと同じ登録アカウントに代わってサーバーに同時に接続することができます.COM /チャンバー>）、[XMPP-ADDR]およびセクション7で定義しました。"
    },
    {
      "indent": 3,
      "text": "A server is an entity whose primary responsibilities are to:",
      "ja": "サーバーは、その主要な責任にされているエンティティです。"
    },
    {
      "indent": 3,
      "text": "o Manage XML streams (Section 4) with connected clients and deliver XML stanzas (Section 8) to those clients over the negotiated streams; this includes responsibility for ensuring that a client authenticates with the server before being granted access to the XMPP network.",
      "ja": "O接続されたクライアントとXMLストリーム（第4章）を管理し、ネゴシエートされたストリーム上にこれらのクライアントにXMLスタンザ（セクション8）を送達します。これは、クライアントがXMPPネットワークへのアクセスが許可される前に、サーバーで認証することを確保するための責任が含まれています。"
    },
    {
      "indent": 3,
      "text": "o Subject to local service policies on server-to-server communication, manage XML streams (Section 4) with remote servers and route XML stanzas (Section 8) to those servers over the negotiated streams.",
      "ja": "サーバ間通信のローカルサービスポリシーにO件名、XMLストリームを管理するリモートサーバとネゴシエートストリーム上にこれらのサーバーへのルートのXMLスタンザ（セクション8）と（第4章）。"
    },
    {
      "indent": 3,
      "text": "Depending on the application, the secondary responsibilities of an XMPP server can include:",
      "ja": "アプリケーションに応じて、XMPPサーバーの二次責任を含めることができます。"
    },
    {
      "indent": 3,
      "text": "o Storing data that is used by clients (e.g., contact lists for users of XMPP-based instant messaging and presence applications as defined in [XMPP-IM]); in this case, the relevant XML stanza is handled directly by the server itself on behalf of the client and is not routed to a remote server or delivered to a connected client.",
      "ja": "クライアント（例えば、で定義されているXMPPベースのインスタントメッセージングとプレゼンスアプリケーションのユーザのための連絡先リスト[XMPP-IM]）によって使用されるデータを格納Oであり;この場合には、関連するXMLスタンザは、クライアントに代わってサーバ自体によって直接処理され、リモートサーバにルーティングまたは接続されたクライアントに配信されていません。"
    },
    {
      "indent": 3,
      "text": "o Hosting add-on services that also use XMPP as the basis for communication but that provide additional functionality beyond that defined in this document or in [XMPP-IM]; examples include multi-user conferencing services as specified in [XEP-0045] and publish-subscribe services as specified in [XEP-0060].",
      "ja": "アドオンもコミュニケーションの基礎としてXMPPを使用するが、それは、本文書にまたは[XMPP-IM]で定義されたものを超えて追加機能を提供するサービスホスティングO;例として、[XEP-0060]で指定されている[XEP-0045]で指定されたマルチユーザ会議サービスを含め、パブリッシュ・サブスクライブ・サービス。"
    },
    {
      "indent": 0,
      "text": "3. TCP Binding",
      "section_title": true,
      "ja": "バインディング3. TCP"
    },
    {
      "indent": 0,
      "text": "3.1. Scope",
      "section_title": true,
      "ja": "3.1。範囲"
    },
    {
      "indent": 3,
      "text": "As XMPP is defined in this specification, an initiating entity (client or server) MUST open a Transmission Control Protocol [TCP] connection to the receiving entity (server) before it negotiates XML streams with the receiving entity. The parties then maintain that TCP connection for as long as the XML streams are in use. The rules specified in the following sections apply to the TCP binding.",
      "ja": "XMPPは、本明細書で定義されたように、発信側エンティティ（クライアントまたはサーバ）は、受信エンティティにXMLストリームをネゴシエートする前に、受信エンティティ（サーバ）に伝送制御プロトコル[TCP]接続を開く必要があります。その後、締約国は限りXMLストリームが使用されているようのためにそのTCPコネクションを維持します。次のセクションで指定されたルールは、TCPバインディングに適用されます。"
    },
    {
      "indent": 6,
      "text": "Informational Note: There is no necessary coupling of XML streams to TCP, and other transports are possible. For example, two entities could connect to each other by means of [HTTP] as specified in [XEP-0124] and [XEP-0206]. However, this specification defines only a binding of XMPP to TCP.",
      "ja": "情報注：そこTCPへのXMLストリームのない必要な結合はなく、他のトランスポートが可能です。例えば、2つのエンティティは、[XEP-0124]及び[XEP-0206]で指定されるように[HTTP]によって互いに接続することができます。しかし、この仕様は、TCPへのXMPPの唯一のバインディングを定義します。"
    },
    {
      "indent": 0,
      "text": "3.2. Resolution of Fully Qualified Domain Names",
      "section_title": true,
      "ja": "3.2。完全修飾ドメイン名の決議"
    },
    {
      "indent": 3,
      "text": "Because XML streams are sent over TCP, the initiating entity needs to determine the IPv4 or IPv6 address (and port) of the receiving entity before it can attempt to open an XML stream. Typically this is done by resolving the receiving entity's fully qualified domain name or FQDN (see [DNS-CONCEPTS]).",
      "ja": "XMLストリームがTCPを介して送信されるため、開始エンティティは、XMLストリームを開こうとする前に、受信側エンティティのIPv4またはIPv6アドレス（およびポート）を決定する必要があります。典型的には、これは、（[DNS-CONCEPTS]を参照）受信エンティティの完全修飾ドメイン名またはFQDNを解決することによって行われます。"
    },
    {
      "indent": 0,
      "text": "3.2.1. Preferred Process: SRV Lookup",
      "section_title": true,
      "ja": "3.2.1。好ましい方法：SRV検索"
    },
    {
      "indent": 3,
      "text": "The preferred process for FQDN resolution is to use [DNS-SRV] records as follows:",
      "ja": "FQDNを解決するための好ましい方法は、以下のようにDNS-SRV]レコードを使用することです。"
    },
    {
      "indent": 3,
      "text": "1. The initiating entity constructs a DNS SRV query whose inputs are:",
      "ja": "1.開始エンティティは、その入力されたDNS SRVクエリを構築します。"
    },
    {
      "indent": 7,
      "text": "*  a Service of \"xmpp-client\" (for client-to-server connections)\n   or \"xmpp-server\" (for server-to-server connections)",
      "raw": true
    },
    {
      "indent": 7,
      "text": "* a Proto of \"tcp\"",
      "ja": "*「TCP」のプロト"
    },
    {
      "indent": 7,
      "text": "* a Name corresponding to the \"origin domain\" [TLS-CERTS] of the XMPP service to which the initiating entity wishes to connect (e.g., \"example.net\" or \"im.example.com\")",
      "ja": "開始エンティティ（例えば、「example.net」または「im.example.com」）に接続することを希望するXMPPサービスの「原点ドメイン」[TLS-CERTS]に対応*名前"
    },
    {
      "indent": 3,
      "text": "2. The result is a query such as \"_xmpp-client._tcp.example.net.\" or \"_xmpp-server._tcp.im.example.com.\".",
      "ja": "2.結果は、次のようなクエリである「_xmpp-client._tcp.example.net。」または \"_xmpp-server._tcp.im.example.com。\"。"
    },
    {
      "indent": 3,
      "text": "3. If a response is received, it will contain one or more combinations of a port and FDQN, each of which is weighted and prioritized as described in [DNS-SRV]. (However, if the result of the SRV lookup is a single resource record with a Target of \".\", i.e., the root domain, then the initiating entity MUST abort SRV processing at this point because according to [DNS-SRV] such a Target \"means that the service is decidedly not available at this domain\".)",
      "ja": "応答が受信された場合3.、それは[DNS-SRV]で説明されるように重み付け優先さ各々がポートとFDQNの1つ以上の組み合わせを含有するであろう。 SRVルックアップの結果は、の「」は、標的と単一のリソース・レコード、すなわち、ルートドメインである場合、[DNS-SRV]によるため（ただし、その後、開始エンティティは、この時点でSRV処理を中止しなければならないようターゲットは「サービスはこのドメインでは明らかにできないことを意味します」。）"
    },
    {
      "indent": 3,
      "text": "4. The initiating entity chooses at least one of the returned FQDNs to resolve (following the rules in [DNS-SRV]), which it does by performing DNS \"A\" or \"AAAA\" lookups on the FDQN; this will result in an IPv4 or IPv6 address.",
      "ja": "4.開始エンティティが返さのFQDNの少なくとも一つは、それがDNS「A」又はFDQNの「AAAA」のルックアップを実行することによって行いれる（[DNS-SRV]の規則に従う）を解決することを選択しました。これは、IPv4またはIPv6アドレスになります。"
    },
    {
      "indent": 3,
      "text": "5. The initiating entity uses the IP address(es) from the successfully resolved FDQN (with the corresponding port number returned by the SRV lookup) as the connection address for the receiving entity.",
      "ja": "5.開始エンティティは、受信エンティティのための接続アドレスとして（SRV検索によって返された対応するポート番号を使用）正常に解決FDQNからIPアドレスを使用します。"
    },
    {
      "indent": 3,
      "text": "6. If the initiating entity fails to connect using that IP address but the \"A\" or \"AAAA\" lookups returned more than one IP address, then the initiating entity uses the next resolved IP address for that FDQN as the connection address.",
      "ja": "開始エンティティは、そのIPアドレスが、「A」または「AAAA」検索複数のIPアドレスを返さを使用して接続に失敗した場合6.は、その後、開始エンティティは、接続アドレスとしてそのFDQNについては、次の解決したIPアドレスを使用しています。"
    },
    {
      "indent": 3,
      "text": "7. If the initiating entity fails to connect using all resolved IP addresses for a given FDQN, then it repeats the process of resolution and connection for the next FQDN returned by the SRV lookup based on the priority and weight as defined in [DNS-SRV].",
      "ja": "[DNS-SRVに定義されている7は、開始実体が与えられたFDQNのためのすべて解決されたIPアドレスを使用して接続に失敗した場合、それは次のFQDNのための解像度と接続のプロセスを繰り返し、優先度と重みに基づいてSRVルックアップによって返さ]。"
    },
    {
      "indent": 3,
      "text": "8. If the initiating entity receives a response to its SRV query but it is not able to establish an XMPP connection using the data received in the response, it SHOULD NOT attempt the fallback process described in the next section (this helps to prevent a state mismatch between inbound and outbound connections).",
      "ja": "開始エンティティは、そのSRVクエリに対する応答を受信するが、応答で受信したデータを使用してXMPP接続を確立できない場合8.、それは次のセクションで説明する代替プロセスを試みるべきではありません（これは状態を防ぐことができますインバウンドとアウトバウンド接続の間のミスマッチ）。"
    },
    {
      "indent": 3,
      "text": "9. If the initiating entity does not receive a response to its SRV query, it SHOULD attempt the fallback process described in the next section.",
      "ja": "9.開始エンティティは、そのSRVのクエリに対する応答を受信しない場合、それは次のセクションで説明する代替プロセスを試みるべきです。"
    },
    {
      "indent": 0,
      "text": "3.2.2. Fallback Processes",
      "section_title": true,
      "ja": "3.2.2。フォールバックプロセス"
    },
    {
      "indent": 3,
      "text": "The fallback process SHOULD be a normal \"A\" or \"AAAA\" address record resolution to determine the IPv4 or IPv6 address of the origin domain, where the port used is the \"xmpp-client\" port of 5222 for client-to-server connections or the \"xmpp-server\" port of 5269 for server-to-server connections (these are the default ports as registered with the IANA as described under Section 14.7).",
      "ja": "フォールバックプロセスが使用するポートは、「XMPPクライアント」は、クライアントからサーバーへの接続のための5222のポートである原点ドメインのIPv4またはIPv6アドレスを決定するために、通常「A」または「AAAA」アドレス記録解像度であるべきですまたはサーバー間の接続のための5269の「XMPPサーバ」のポート（これらは、セクション14.7で説明したようにIANAに登録されたデフォルトのポートです）。"
    },
    {
      "indent": 3,
      "text": "If connections via TCP are unsuccessful, the initiating entity might attempt to find and use alternative connection methods such as the HTTP binding (see [XEP-0124] and [XEP-0206]), which might be discovered using [DNS-TXT] records as described in [XEP-0156].",
      "ja": "TCPを介した接続が失敗した場合、開始エンティティは、[DNS-TXT]レコードを使用して発見されるかもしれない、（[XEP-0124]と[XEP-0206]を参照）などHTTPバインディングなどの代替接続方法を見つけて、使用しようとするかもしれません[XEP-0156]に記載されているように。"
    },
    {
      "indent": 0,
      "text": "3.2.3. When Not to Use SRV",
      "section_title": true,
      "ja": "3.2.3。 SRVを使用しない場合には"
    },
    {
      "indent": 3,
      "text": "If the initiating entity has been explicitly configured to associate a particular FQDN (and potentially port) with the origin domain of the receiving entity (say, to \"hardcode\" an association from an origin domain of example.net to a configured FQDN of apps.example.com), the initiating entity is encouraged to use the configured name instead of performing the preferred SRV resolution process on the origin domain.",
      "ja": "開始実体が明示的に受信エンティティの元のドメインに（潜在的およびポート）特定のFQDNを関連付けるように構成されている場合（たとえば、アプリケーションの構成されたFQDNにexample.netの元のドメインからの関連付けを「ハードコーディング」します。 example.com）、開始エンティティは、元のドメインに好ましいSRV解像度処理を行うのではなく、設定した名前を使用することが推奨されます。"
    },
    {
      "indent": 0,
      "text": "3.2.4. Use of SRV Records with Add-On Services",
      "section_title": true,
      "ja": "3.2.4。アドオンサービスとSRVレコードの使用"
    },
    {
      "indent": 3,
      "text": "Many XMPP servers are implemented in such a way that they can host add-on services (beyond those defined in this specification and [XMPP-IM]) at DNS domain names that typically are \"subdomains\" of the main XMPP service (e.g., conference.example.net for a [XEP-0045] service associated with the example.net XMPP service) or \"subdomains\" of the first-level domain of the underlying service (e.g., muc.example.com for a [XEP-0045] service associated with the im.example.com XMPP service). If an entity associated with a remote XMPP server wishes to communicate with such an add-on service, it would generate an appropriate XML stanza and the remote server would attempt to resolve the add-on service's DNS domain name via an SRV lookup on resource records such as \"_xmpp-server._tcp.conference.example.net.\" or \"_xmpp-server._tcp.muc.example.com.\". Therefore, if the administrators of an XMPP service wish to enable entities associated with remote servers to access such add-on services, they need to advertise the appropriate \"_xmpp-server\" SRV records in addition to the \"_xmpp-server\" record for their main XMPP service. In case SRV records are not available, the fallback methods described under Section 3.2.2 can be used to resolve the DNS domain names of add-on services.",
      "ja": "多くのXMPPサーバは、彼らがアドオンサービス（この仕様書と[XMPP-IM]で定義されたものを超えて）一般的に、メインXMPPサービス（例えば、会議の「サブドメイン」ですDNSドメイン名でホストできるように実装されています.example.net [XEP-0045] example.netのXMPPサービスに関連するサービス）、または基礎となるサービスの第一レベルドメインの「サブドメイン」（例えば、muc.example.com [XEP-0045]のためのim.example.comのXMPPサービスに関連するサービス）。リモートXMPPサーバーに関連付けられたエンティティは、そのようなアドオンサービスと通信したい場合は、適切なXMLスタンザを生成すると、リモートサーバーは、リソースレコードのSRVルックアップからアドオンサービスのDNSドメイン名を解決しようとこうした「_xmpp-server._tcp.conference.example.net。」などまたは \"_xmpp-server._tcp.muc.example.com。\"。 XMPPサービスの管理者は、このようなアドオンサービスにアクセスするためにリモートサーバーに関連付けられたエンティティを有効にしたい場合はそのため、彼らは彼らのために、「_xmpp・サーバー」のレコードに加えて、適切な「_xmppサーバ」SRVレコードを宣伝する必要がありますメインXMPPサービス。場合SRVレコードは、3.2.2項で説明フォールバック方法はアドオンサービスのDNSドメイン名を解決するために使用することができ、使用できません。"
    },
    {
      "indent": 0,
      "text": "3.3. Reconnection",
      "section_title": true,
      "ja": "3.3。リコネクション"
    },
    {
      "indent": 3,
      "text": "It can happen that an XMPP server goes offline unexpectedly while servicing TCP connections from connected clients and remote servers. Because the number of such connections can be quite large, the reconnection algorithm employed by entities that seek to reconnect can have a significant impact on software performance and network congestion. If an entity chooses to reconnect, it:",
      "ja": "接続されたクライアントとリモートサーバーからのTCP接続にサービスを提供しながら、XMPPサーバーが突然オフラインになることが起こりできます。このような接続の数が非常に大きくなる可能性があるため、再接続しようとするエンティティによって使用される再接続アルゴリズムは、ソフトウェアの性能やネットワークの混雑に大きな影響を与えることができます。エンティティは、それを再接続することを選択した場合："
    },
    {
      "indent": 3,
      "text": "o SHOULD set the number of seconds that expire before reconnecting to an unpredictable number between 0 and 60 (this helps to ensure that not all entities attempt to reconnect at exactly the same number of seconds after being disconnected).",
      "ja": "oは0と60の間で予測不可能な数（これがすべてではないエンティティが切断された後の秒正確に同じ数で再接続しようとしていることを確認するのに役立ちます）に再接続する前に期限切れになる秒数を設定する必要があります。"
    },
    {
      "indent": 3,
      "text": "o SHOULD back off increasingly on the time between subsequent reconnection attempts (e.g., in accordance with \"truncated binary exponential backoff\" as described in [ETHERNET]) if the first reconnection attempt does not succeed.",
      "ja": "最初の再接続の試みが成功しなかった場合、Oは、その後の再接続の試行（例えば、[ETHERNET]に記載されているように「切り捨てバイナリ指数バックオフ」に応じて）との間の時間にますますバックオフすべきです。"
    },
    {
      "indent": 3,
      "text": "It is RECOMMENDED to make use of TLS session resumption [TLS-RESUME] when reconnecting. A future version of this document, or a separate specification, might provide more detailed guidelines regarding methods for speeding the reconnection process.",
      "ja": "再接続時にTLSセッション再開[TLS-RESUME]を利用することをお勧めします。このドキュメントの将来のバージョン、または別の仕様では、再接続処理を高速化するための方法に関するより詳細なガイドラインを提供するかもしれません。"
    },
    {
      "indent": 0,
      "text": "3.4. Reliability",
      "section_title": true,
      "ja": "3.4。確実"
    },
    {
      "indent": 3,
      "text": "The use of long-lived TCP connections in XMPP implies that the sending of XML stanzas over XML streams can be unreliable, since the parties to a long-lived TCP connection might not discover a connectivity disruption in a timely manner. At the XMPP application layer, long connectivity disruptions can result in undelivered stanzas. Although the core XMPP technology defined in this specification does not contain features to overcome this lack of reliability, there exist XMPP extensions for doing so (e.g., [XEP-0198]).",
      "ja": "XMPPで長寿命のTCP接続の使用は、長寿命のTCPコネクションの当事者が適時に接続の中断を検出しない場合がありますので、XMLストリーム上のXMLスタンザの送信は、信頼できないことを意味しています。 XMPPアプリケーション層では、長い接続の中断は未提供のスタンザをもたらす可能性があります。この仕様で定義されたコアXMPP技術は信頼性の欠如を克服するための機能が含まれていませんが、そうするためにXMPPの拡張が存在する（例えば、[XEP-0198]）。"
    },
    {
      "indent": 0,
      "text": "4. XML Streams",
      "section_title": true,
      "ja": "時間。CMLストリーム"
    },
    {
      "indent": 0,
      "text": "4.1. Stream Fundamentals",
      "section_title": true,
      "ja": "4.1。ストリームの基礎"
    },
    {
      "indent": 3,
      "text": "Two fundamental concepts make possible the rapid, asynchronous exchange of relatively small payloads of structured information between XMPP entities: XML streams and XML stanzas. These terms are defined as follows.",
      "ja": "XMLストリームおよびXMLスタンザ：二つの基本的な概念は、XMPPのエンティティ間の構造化された情報の比較的小さなペイロードの急速な、非同期の交換を可能にします。次のようにこれらの用語が定義されています。"
    },
    {
      "indent": 3,
      "text": "Definition of XML Stream: An XML stream is a container for the exchange of XML elements between any two entities over a network. The start of an XML stream is denoted unambiguously by an opening \"stream header\" (i.e., an XML <stream> tag with appropriate attributes and namespace declarations), while the end of the XML stream is denoted unambiguously by a closing XML </stream> tag. During the life of the stream, the entity that initiated it can send an unbounded number of XML elements over the stream, either elements used to negotiate the stream (e.g., to complete TLS negotiation (Section 5) or SASL negotiation (Section 6)) or XML stanzas. The \"initial stream\" is negotiated from the initiating entity (typically a client or server) to the receiving entity (typically a server), and can be seen as corresponding to the initiating entity's \"connection to\" or \"session with\" the receiving entity. The initial stream enables unidirectional communication from the initiating entity to the receiving entity; in order to enable exchange of stanzas from the receiving entity to the initiating entity, the receiving entity MUST negotiate a stream in the opposite direction (the \"response stream\").",
      "ja": "XMLストリームの定義：XMLストリームは、ネットワーク上の任意の2つのエンティティ間のXML要素を交換するためのコンテナです。 XMLストリームの端部が閉鎖XML </ストリームによって明確に示されている間、XMLストリームの開始は、開口部「ストリームヘッダ」（すなわち、XML <ストリーム>適切な属性とネームスペース宣言とタグ）によって明確に示され>タグ。ストリームの生活の間に、開始エンティティは、それは、ストリーム上でストリームを交渉するために使用されるいずれかの要素をXML要素の無制限数を送ることができる（例えば、TLSネゴシエーション（第5節）やSASLネゴシエーションを完了し（第6節））またはXMLスタンザ。 「最初のストリームは、」受信エンティティ（通常はサーバー）に開始するエンティティ（通常、クライアントまたはサーバ）から交渉され、受信エンティティ「とのセッション」を開始エンティティの「への接続」またはに対応するものとして見ることができます。最初のストリームは、受信エンティティに開始エンティティからの単方向通信を可能にします。開始エンティティに受信エンティティからスタンザの交換を可能にするために、受信エンティティは反対方向に流れ（「応答ストリーム」）をネゴシエートする必要があります。"
    },
    {
      "indent": 3,
      "text": "Definition of XML Stanza: An XML stanza is the basic unit of meaning in XMPP. A stanza is a first-level element (at depth=1 of the stream) whose element name is \"message\", \"presence\", or \"iq\" and whose qualifying namespace is 'jabber:client' or 'jabber:server'. By contrast, a first-level element qualified by any other namespace is not an XML stanza (stream errors, stream features, TLS-related elements, SASL-related elements, etc.), nor is a",
      "ja": "XMLスタンザの定義：XMLスタンザは、XMPPで意味の基本単位です。 「：クライアントおしゃべり」または「おしゃべり：サーバ」スタンザは、その要素名修飾名前空間である「メッセージ」、「存在」、または「IQ」とある第一レベル要素（流れの深さで= 1）です。対照的に、他の名前空間で修飾最初のレベルの要素は、XMLスタンザ（ストリームエラー、ストリーム機能、TLS関連要素、SASL関連要素、等）ではない、またあります"
    },
    {
      "indent": 6,
      "text": "<message/>, <presence/>, or <iq/> element that is qualified by the 'jabber:client' or 'jabber:server' namespace but that occurs at a depth other than one (e.g., a <message/> element contained within an extension element (Section 8.4) for reporting purposes), nor is a <message/>, <presence/>, or <iq/> element that is qualified by a namespace other than 'jabber:client' or 'jabber:server'. An XML stanza typically contains one or more child elements (with accompanying attributes, elements, and XML character data) as necessary in order to convey the desired information, which MAY be qualified by any XML namespace (see [XML-NAMES] as well as Section 8.4 in this specification).",
      "ja": "「：クライアントおしゃべり」または「おしゃべり：サーバ」で修飾された<メッセージ/>、<存在/>、または<IQ />要素の名前空間が、それ以外の深さで発生するもの（例えば、<メッセージ/> 「：クライアントおしゃべり」または「ジャバー以外の名前空間で修飾された拡張要素の目的を報告するため（8.4節））内に含まれる要素が、またある<メッセージ/>、<存在/>、または<IQ />要素：サーバ'。 XMLスタンザは、典型的には、任意のXML名前空間によって修飾することができ、所望の情報を伝達するために、必要に応じて、（付随する属性、要素、およびXML文字データを有する）1つ以上の子要素を含む（[XML-NAMES]を参照、ならびにこの仕様では8.4節）。"
    },
    {
      "indent": 3,
      "text": "There are three kinds of stanzas: message, presence, and IQ (short for \"Info/Query\"). These stanza types provide three different communication primitives: a \"push\" mechanism for generalized messaging, a specialized \"publish-subscribe\" mechanism for broadcasting information about network availability, and a \"request-response\" mechanism for more structured exchanges of data (similar to [HTTP]). Further explanations are provided under Section 8.2.1, Section 8.2.2, and Section 8.2.3, respectively.",
      "ja": "メッセージ、プレゼンス、およびIQ（「情報/クエリ」の略）：スタンザの3種類があります。これらのスタンザの種類は、3つの異なる通信プリミティブを提供します。一般的なメッセージングのための「プッシュ」メカニズム、ネットワークの可用性に関する情報を放送するための特殊な「パブリッシュ・サブスクライブ」のメカニズム、およびに類似したデータのより構造化された交換のための「要求 - 応答」メカニズムを（ [HTTP]）。更なる説明は、それぞれ、セクション8.2.1、セクション8.2.2および8.2.3の下に設けられています。"
    },
    {
      "indent": 3,
      "text": "Consider the example of a client's connection to a server. The client initiates an XML stream by sending a stream header to the server, preferably preceded by an XML declaration specifying the XML version and the character encoding supported (see Section 11.5 and Section 11.6). Subject to local policies and service provisioning, the server then replies with a second XML stream back to the client, again preferably preceded by an XML declaration. Once the client has completed SASL negotiation (Section 6) and resource binding (Section 7), the client can send an unbounded number of XML stanzas over the stream. When the client desires to close the stream, it simply sends a closing </stream> tag to the server as further described under Section 4.4.",
      "ja": "サーバーへのクライアントの接続の例を考えてみましょう。クライアントは、好ましくは、XMLバージョンとサポートされている文字コードを指定するXML宣言が先行サーバにストリームヘッダを送信することによって、XMLストリームを開始する（セクション11.5および11.6節を参照）。ローカルポリシーとサービスプロビジョニングを条件として、サーバは再び、好ましくは、XML宣言が先行し、クライアントに戻す第二XMLストリームで応答します。クライアントは、SASLネゴシエーション（第6節）と資源結合（第7節）を完了すると、クライアントは、ストリーム上のXMLスタンザの無制限数を送ることができます。クライアントがストリームをクローズしたい場合、それは単にさらに4.4節で説明したサーバに終了</ストリーム>タグを送信します。"
    },
    {
      "indent": 3,
      "text": "In essence, then, one XML stream functions as an envelope for the XML stanzas sent during a session and another XML stream functions as an envelope for the XML stanzas received during a session. We can represent this in a simplistic fashion as follows.",
      "ja": "本質的には、次に、セッションとセッションの間に受信したXMLスタンザのための封筒などの別のXMLストリーム機能中に送信されるXMLスタンザ用封筒として1つのXMLストリーム機能します。次のように私たちは、単純なやり方でこれを表現することができます。"
    },
    {
      "indent": 3,
      "text": "+--------------------+--------------------+\n| INITIAL STREAM     |  RESPONSE STREAM   |\n+--------------------+--------------------+\n| <stream>           |                    |\n|--------------------|--------------------|\n|                    | <stream>           |\n|--------------------|--------------------|\n| <presence>         |                    |\n|   <show/>          |                    |\n| </presence>        |                    |\n|--------------------|--------------------|\n| <message to='foo'> |                    |\n|   <body/>          |                    |\n| </message>         |                    |\n|--------------------|--------------------|\n| <iq to='bar'       |                    |\n|     type='get'>    |                    |\n|   <query/>         |                    |\n| </iq>              |                    |\n|--------------------|--------------------|\n|                    | <iq from='bar'     |\n|                    |     type='result'> |\n|                    |   <query/>         |\n|                    | </iq>              |\n|--------------------|--------------------|\n| [ ... ]            |                    |\n|--------------------|--------------------|\n|                    | [ ... ]            |\n|--------------------|--------------------|\n| </stream>          |                    |\n|--------------------|--------------------|\n|                    | </stream>          |\n+--------------------+--------------------+",
      "raw": true
    },
    {
      "indent": 16,
      "text": "Figure 2: A Simplistic View of Two Streams",
      "ja": "図2：二つのストリームの単純化したビュー"
    },
    {
      "indent": 3,
      "text": "Those who are accustomed to thinking of XML in a document-centric manner might find the following analogies useful:",
      "ja": "ドキュメント中心の方法でXMLの思考に慣れている方は、以下のアナロジーが役立つかもしれません。"
    },
    {
      "indent": 3,
      "text": "o The two XML streams are like two \"documents\" (matching the \"document\" production from [XML]) that are built up through the accumulation of XML stanzas.",
      "ja": "2つのXMLストリームO XMLスタンザの蓄積を介して構築される（[XML]から「文書」の生産にマッチ）は、2つの「文書」のようです。"
    },
    {
      "indent": 3,
      "text": "o The root <stream/> element is like the \"document entity\" for each \"document\" (as described in Section 4.8 of [XML]).",
      "ja": "ルート0 <ストリーム/>要素は、（[XML]のセクション4.8で説明したように）各「文書」の「文書実体」のようなものです。"
    },
    {
      "indent": 3,
      "text": "o The XML stanzas sent over the streams are like \"fragments\" of the \"documents\" (as described in [XML-FRAG]).",
      "ja": "oをストリームを介して送信されるXMLスタンザは（[XML-FRAG]に記載されているように）、「文書」の「断片」と同様です。"
    },
    {
      "indent": 3,
      "text": "However, these descriptions are merely analogies, because XMPP does not deal in documents and fragments but in streams and stanzas.",
      "ja": "XMPPは、文書や断片ではなく、ストリームやスタンザでは扱っていないので、しかし、これらの記述は、単なるアナロジーです。"
    },
    {
      "indent": 3,
      "text": "The remainder of this section defines the following aspects of XML streams (along with related topics):",
      "ja": "このセクションの残りの部分は、（関連するトピックとともに）XMLストリームの次の側面を定義します。"
    },
    {
      "indent": 3,
      "text": "o How to open a stream (Section 4.2)",
      "ja": "ストリームを開く方法O（4.2節）"
    },
    {
      "indent": 3,
      "text": "o The stream negotiation process (Section 4.3)",
      "ja": "ストリームの交渉プロセスO（4.3節）"
    },
    {
      "indent": 3,
      "text": "o How to close a stream (Section 4.4)",
      "ja": "ストリームを閉じる方法O（4.4節）"
    },
    {
      "indent": 3,
      "text": "o The directionality of XML streams (Section 4.5)",
      "ja": "O XMLストリームの方向性（4.5節）"
    },
    {
      "indent": 3,
      "text": "o How to handle peers that are silent (Section 4.6)",
      "ja": "O沈黙しているピア（4.6節）を処理する方法"
    },
    {
      "indent": 3,
      "text": "o The XML attributes of a stream (Section 4.7)",
      "ja": "ストリームのXML属性O（4.7節）"
    },
    {
      "indent": 3,
      "text": "o The XML namespaces of a stream (Section 4.8)",
      "ja": "ストリームのXML名前空間O（4.8節）"
    },
    {
      "indent": 3,
      "text": "o Error handling related to XML streams (Section 4.9)",
      "ja": "OエラーがXMLストリーム（4.9節）に関連する取り扱い"
    },
    {
      "indent": 0,
      "text": "4.2. Opening a Stream",
      "section_title": true,
      "ja": "4.2。ストリームを開きます"
    },
    {
      "indent": 3,
      "text": "After connecting to the appropriate IP address and port of the receiving entity, the initiating entity opens a stream by sending a stream header (the \"initial stream header\") to the receiving entity.",
      "ja": "受信エンティティの適切なIPアドレスとポートに接続した後、開始エンティティは、受信エンティティにストリームヘッダ（「初期ストリームヘッダ」）を送信することにより、ストリームを開きます。"
    },
    {
      "indent": 3,
      "text": "I: <?xml version='1.0'?> <stream:stream from='juliet@im.example.com' to='im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "I：<？xmlのバージョン= '1.0'？> <ストリーム：im.example.com 'バージョン= '1.0' のxml：LANG = '「=' にストリームfrom='juliet@im.example.comのxmlns' EN = 「おしゃべり：クライアントののxmlns：ストリーム= 'のhttp：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "The receiving entity then replies by sending a stream header of its own (the \"response stream header\") to the initiating entity.",
      "ja": "受信エンティティは、開始エンティティに、自身の（「応答ストリームヘッダ」）のストリーム・ヘッダを送信することによって応答します。"
    },
    {
      "indent": 3,
      "text": "R: <?xml version='1.0'?> <stream:stream from='im.example.com' id='++TR84Sm6A3hnt3Q065SnAbbk3Y=' to='juliet@im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "R：<？xmlのバージョン= '1.0'？> <ストリーム：= 'im.example.com' ID = '++ TR84Sm6A3hnt3Q065SnAbbk3Y =' to='juliet@im.example.comからのストリーム」バージョン= '1.0' のXML ：LANG =のxmlns = 'おしゃべり：クライアント' 'en' とのxmlns：ストリーム= 'のhttp：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "The entities can then proceed with the remainder of the stream negotiation process.",
      "ja": "エンティティは、ストリームの交渉プロセスの残りの部分に進むことができます。"
    },
    {
      "indent": 0,
      "text": "4.3. Stream Negotiation",
      "section_title": true,
      "ja": "4.3。ストリーム交渉"
    },
    {
      "indent": 0,
      "text": "4.3.1. Basic Concepts",
      "section_title": true,
      "ja": "4.3.1。基本概念"
    },
    {
      "indent": 3,
      "text": "Because the receiving entity for a stream acts as a gatekeeper to the domains it services, it imposes certain conditions for connecting as a client or as a peer server. At a minimum, the initiating entity needs to authenticate with the receiving entity before it is allowed to send stanzas to the receiving entity (for client-to-server streams this means using SASL as described under Section 6). However, the receiving entity can consider conditions other than authentication to be mandatory-to-negotiate, such as encryption using TLS as described under Section 5. The receiving entity informs the initiating entity about such conditions by communicating \"stream features\": the set of particular protocol interactions that the initiating entity needs to complete before the receiving entity will accept XML stanzas from the initiating entity, as well as any protocol interactions that are voluntary-to-negotiate but that might improve the handling of an XML stream (e.g., establishment of application-layer compression as described in [XEP-0138]).",
      "ja": "ストリームのための受信エンティティは、それがサービスドメインにゲートキーパーとして機能するので、クライアントとして、またはピア・サーバーとして接続するための特定の条件を課します。最低でも、開始エンティティは、（第6節で述べたように、クライアントからサーバーへのストリームのために、これはSASLを使用することを意味）受信エンティティへのスタンザを送信することが許可される前に、受信エンティティで認証する必要があります。のセットを：第5節で説明したようしかし、受信エンティティは、受信エンティティは、「ストリーム機能」を通信することによって、このような状況について、開始エンティティに知らせるようにTLSを使用して暗号化など、認証以外の条件は必須ツー交渉であると考えることができます開始エンティティは、受信エンティティは、例えばを開始エンティティからXMLスタンザを受け入れるだけでなく、自主的なツー交渉されている任意のプロトコルの相互作用が、それは（XMLストリームのハンドリングが向上する可能性があります前に完了する必要があり、特定のプロトコルの相互作用が、設立[XEP-0138]）に記載されているように、アプリケーション層の圧縮。"
    },
    {
      "indent": 3,
      "text": "The existence of conditions for connecting implies that streams need to be negotiated. The order of layers (TCP, then TLS, then SASL, then XMPP as described under Section 13.3) implies that stream negotiation is a multi-stage process. Further structure is imposed by two factors: (1) a given stream feature might be offered only to certain entities or only after certain other features have been negotiated (e.g., resource binding is offered only after SASL authentication), and (2) stream features can be either mandatory-to-negotiate or voluntary-to-negotiate. Finally, for security reasons the parties to a stream need to discard knowledge that they gained during the negotiation process after successfully completing the protocol interactions defined for certain features (e.g., TLS in all cases and SASL in the case when a security layer might be established, as defined in the specification for the relevant SASL mechanism). This is done by flushing the old stream context and exchanging new stream headers over the existing TCP connection.",
      "ja": "接続するための条件の存在は、ストリームが交渉する必要があることを意味します。 （セクション13.3で説明したように、TCPは、TLS、次いでSASL、次にXMPP）層の順序は、ストリームネゴシエーションは多段階プロセスであることを意味します。 （1）指定されたストリーム機能のみ特定のエンティティに提供されるか、または特定の他の特徴は、ネゴシエートされた後にのみ（例えば、結合リソースのみSASL認証の後に提供される）、および（2）ストリームの特徴：さらなる構造は、二つの要因によって課されます交渉、必須または自主的なツー交渉のいずれかになります。最後に、セキュリティ上の理由から、ストリームの当事者が正常例えば、TLSはケース内のすべての例とSASLのセキュリティ層が確立されるかもしれない特定の機能（のために定義されたプロトコルの相互作用を完了した後、彼らは交渉プロセスの間に得たという知識を破棄する必要があります、関連するSASL機構の仕様で定義されています）。これは、古いストリームコンテキストをフラッシュし、既存のTCP接続を介して新しいストリームヘッダを交換することによって行われます。"
    },
    {
      "indent": 0,
      "text": "4.3.2. Stream Features Format",
      "section_title": true,
      "ja": "4.3.2。ストリームフォーマット機能します"
    },
    {
      "indent": 3,
      "text": "If the initiating entity includes in the initial stream header the 'version' attribute set to a value of at least \"1.0\" (see Section 4.7.5), after sending the response stream header the receiving entity MUST send a <features/> child element (typically prefixed by the stream namespace prefix as described under Section 4.8.5) to the initiating entity in order to announce any conditions for continuation of the stream negotiation process. Each condition takes the form of a child element of the <features/> element, qualified by a namespace that is different from the stream namespace and the content namespace. The <features/> element can contain one child, contain multiple children, or be empty.",
      "ja": "開始エンティティは、初期ストリームヘッダに少なくとも「1.0」の値に設定「バージョン」属性が含まれている場合、応答ストリームヘッダを送信後、受信エンティティは、<特長/>子を送らなければなりません、（4.7.5項を参照してください）ストリームネゴシエーションプロセスの継続のための任意の条件を発表するために、開始エンティティへの要素（セクション4.8.5で説明したように、典型的には、ストリームの名前空間接頭辞が付け）。各条件は、ストリームの名前空間とコンテンツの名前空間と異なる名前空間で修飾<特長/>要素の子要素の形式をとります。 <特長/>要素は、一人の子供を含む複数の子供が含まれている、または空にすることができます。"
    },
    {
      "indent": 6,
      "text": "Implementation Note: The order of child elements contained in any given <features/> element is not significant.",
      "ja": "実装上の注意：任意に含まれる子要素の順序<特徴は/>要素は重要ではありません。"
    },
    {
      "indent": 3,
      "text": "If a particular stream feature is or can be mandatory-to-negotiate, the definition of that feature needs to do one of the following:",
      "ja": "特定のストリーム機能があるか必須ツー交渉することができた場合は、その機能の定義は、以下のいずれかを実行する必要があります。"
    },
    {
      "indent": 3,
      "text": "1. Declare that the feature is always mandatory-to-negotiate (e.g., this is true of resource binding for XMPP clients); or",
      "ja": "1.機能は常に強制的にネゴシエートであることを宣言し（例えば、これはXMPPクライアントのバインディングリソースも同様です）。または"
    },
    {
      "indent": 3,
      "text": "2. Specify a way for the receiving entity to flag the feature as mandatory-to-negotiate for this interaction (e.g., for STARTTLS, this is done by including an empty <required/> element in the advertisement for that stream feature, but that is not a generic format for all stream features); it is RECOMMENDED that stream feature definitions for new mandatory-to-negotiate features do so by including an empty <required/> element as is done for STARTTLS.",
      "ja": "2.例えば、STARTTLSのために、これはそのストリーム機能のための広告で空の<必要/>要素を含むことによって行われますが、ということです（必須ツー交渉、この相互作用のためとしてフラグに機能を受信エンティティのための方法を指定します。 ）すべてのストリームの機能のための一般的な形式ではありません。新しい必須ツー交渉機能のためのストリーム機能の定義はSTARTTLSのために行われているように、空の<必要/>要素を含めることによって、そうすることが推奨されます。"
    },
    {
      "indent": 6,
      "text": "Informational Note: Because there is no generic format for indicating that a feature is mandatory-to-negotiate, it is possible that a feature that is not understood by the initiating entity might be considered mandatory-to-negotiate by the receiving entity, resulting in failure of the stream negotiation process. Although such an outcome would be undesirable, the working group deemed it rare enough that a generic format was not needed.",
      "ja": "情報注：この機能は強制的にネゴシエートされたことを示すための一般的なフォーマットが存在しないので、開始エンティティによって理解されていない機能は、その結果、強制的にネゴシエート受信エンティティによって考慮されるかもしれないことが可能ですストリームの交渉プロセスの失敗。そのような結果は望ましくないであろうが、ワーキンググループは、十分な汎用的なフォーマットが必要とされなかったこと、それは稀であるとみなさ。"
    },
    {
      "indent": 3,
      "text": "For security reasons, certain stream features necessitate the initiating entity to send a new initial stream header upon successful negotiation of the feature (e.g., TLS in all cases and SASL in the case when a security layer might be established). If this is true of a given stream feature, the definition of that feature needs to specify that a stream restart is expected after negotiation of the feature.",
      "ja": "セキュリティ上の理由から、特定のストリームの特徴は、機能（例えば、TLS場合は、すべての場合にとSASLセキュリティ層が確立されるかもしれない）のネゴシエーション成功時に新しい初期ストリームヘッダを送信するために開始する事業体を必要とします。これは、指定されたストリーム機能のtrueの場合、その機能の定義は、ストリームの再起動が機能の交渉の後に予想されるように指定する必要があります。"
    },
    {
      "indent": 3,
      "text": "A <features/> element that contains at least one mandatory-to-negotiate feature indicates that the stream negotiation is not complete and that the initiating entity MUST negotiate further features.",
      "ja": "少なくとも1つの必須ツー交渉機能が含まれています。<特長/>要素は、ストリームネゴシエーションが完了し、開始エンティティは、さらに機能を交渉しなければならないということではないことを示しています。"
    },
    {
      "indent": 3,
      "text": "R: <stream:features> <starttls xmlns='urn:ietf:params:xml:ns:xmpp-tls'> <required/> </starttls> </stream:features>",
      "ja": "R：<ストリーム：機能> <STARTTLS用のxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-TLS'> <必須/> </ STARTTLS> </ストリーム：機能>"
    },
    {
      "indent": 3,
      "text": "A <features/> element MAY contain more than one mandatory-to-negotiate feature. This means that the initiating entity can choose among the mandatory-to-negotiate features at this stage of the stream negotiation process. As an example, perhaps a future technology will perform roughly the same function as TLS, so the receiving entity might advertise support for both TLS and the future technology at the same stage of the stream negotiation process. However, this applies only at a given stage of the stream negotiation process and does not apply to features that are mandatory-to-negotiate at different stages (e.g., the receiving entity would not advertise both STARTTLS and SASL as mandatory-to-negotiate, or both SASL and resource binding as mandatory-to-negotiate, because TLS would need to be negotiated before SASL and because SASL would need to be negotiated before resource binding).",
      "ja": "<特長/>要素は、複数の必須ツー交渉機能を含むかもしれません。これは、開始エンティティは、ストリームネゴシエーションプロセスのこの段階で必須ツー交渉機能の中から選択できることを意味します。受信エンティティは、ストリームネゴシエーションプロセスの同じ段階でTLSおよび将来の技術の両方のサポートを広告するかもしれないので、一例として、おそらく将来の技術は、TLSとほぼ同じ機能を実行します。しかし、これは、ストリームの交渉プロセスの特定の段階でのみ適用され、必須ツー交渉異なる段階にある機能には適用されません（例えば、受信エンティティは必須としてツー交渉の両方STARTTLSとSASLを宣伝しませんTLSはSASL前とSASLバインディングリソース）の前にネゴシエートする必要があるためにネゴシエートする必要があるため、またはSASLとリソースの両方が、のように強制的にネゴシエート結合。"
    },
    {
      "indent": 3,
      "text": "A <features/> element that contains both mandatory-to-negotiate and voluntary-to-negotiate features indicates that the negotiation is not complete but that the initiating entity MAY complete the voluntary-to-negotiate feature(s) before it attempts to negotiate the mandatory-to-negotiate feature(s).",
      "ja": "<特長/>への交渉-必須と自発的なツー交渉機能の両方が含まれている要素は、交渉が完了していないが、それは交渉しようとする前に開始する事業体が自発的・ツー・交渉機能（複数可）を完成さかもしれないことにあることを示し必須ツー交渉機能（複数可）。"
    },
    {
      "indent": 3,
      "text": "R: <stream:features> <bind xmlns='urn:ietf:params:xml:ns:xmpp-bind'/> <compression xmlns='http://jabber.org/features/compress'> <method>zlib</method> <method>lzw</method> </compression> </stream:features>",
      "ja": "R：<ストリーム：特長> <のxmlns =バインド 'URNを：IETF：paramsは：XML：NS：XMPPバインド' /> <圧縮のxmlns = 'HTTP：//jabber.org/features/compress'> <方法> ZLIB </方法> <方法> LZW </方法> </圧縮> </ストリーム：機能>"
    },
    {
      "indent": 3,
      "text": "A <features/> element that contains only voluntary-to-negotiate features indicates that the stream negotiation is complete and that the initiating entity is cleared to send XML stanzas, but that the initiating entity MAY negotiate further features if desired.",
      "ja": "唯一の自主的な-にネゴシエーション機能が含まれています。<特長/>要素は、ストリームのネゴシエーションが完了したことと、開始​​実体はXMLスタンザを送信するためにクリアされていることが、必要に応じて開始するエンティティは、さらに機能を交渉することができることを示しています。"
    },
    {
      "indent": 3,
      "text": "R: <stream:features> <compression xmlns='http://jabber.org/features/compress'> <method>zlib</method> <method>lzw</method> </compression> </stream:features>",
      "ja": "R：<ストリーム：特長> <圧縮のxmlns = 'HTTPを：//jabber.org/features/compress'> <方法> ZLIB </方法> <方法> LZW </方法> </圧縮> </ストリーム：機能>"
    },
    {
      "indent": 3,
      "text": "An empty <features/> element indicates that the stream negotiation is complete and that the initiating entity is cleared to send XML stanzas.",
      "ja": "空の<特長/>要素は、ストリームネゴシエーションが完了し、開始実体はXMLスタンザを送信するためにクリアされていることであることを示しています。"
    },
    {
      "indent": 3,
      "text": "R: <stream:features/>",
      "ja": "R：<ストリーム：機能/>"
    },
    {
      "indent": 0,
      "text": "4.3.3. Restarts",
      "section_title": true,
      "ja": "4.3.3。再起動"
    },
    {
      "indent": 3,
      "text": "On successful negotiation of a feature that necessitates a stream restart, both parties MUST consider the previous stream to be replaced but MUST NOT send a closing </stream> tag and MUST NOT terminate the underlying TCP connection; instead, the parties MUST reuse the existing connection, which might be in a new state (e.g., encrypted as a result of TLS negotiation). The initiating entity then MUST send a new initial stream header, which SHOULD be preceded by an XML declaration as described under Section 11.5. When the receiving entity receives the new initial stream header, it MUST generate a new stream ID (instead of reusing the old stream ID) before sending a new response stream header (which SHOULD be preceded by an XML declaration as described under Section 11.5).",
      "ja": "ストリームの再起動が必要となる機能を正しく交渉で、双方の当事者が交換する前のストリームを考慮しなければならないが、終了</ストリーム>タグを送ってはいけませんし、基本的なTCP接続を終了してはなりません。代わりに、当事者は、新しい状態（例えば、TLS交渉の結果として、暗号化された）であるかもしれない既存の接続を再利用しなければなりません。開始エンティティは、セクション11.5で説明したようにXML宣言が先行されるべきである新たな初期ストリームヘッダを送信しなければなりません。受信エンティティは、新たな初期ストリームヘッダを受信すると、それは（セクション11.5で説明したようにXML宣言が先行されるべきである）新しい応答ストリームヘッダを送信する前に（代わりに、古いストリームIDを再利用する）新しいストリームIDを生成しなければなりません。"
    },
    {
      "indent": 0,
      "text": "4.3.4. Resending Features",
      "section_title": true,
      "ja": "4.3.4。再送機能"
    },
    {
      "indent": 3,
      "text": "The receiving entity MUST send an updated list of stream features to the initiating entity after a stream restart. The list of updated features MAY be empty if there are no further features to be advertised or MAY include any combination of features.",
      "ja": "受信エンティティは、ストリームの再起動後に開始する事業体へのストリームの機能の最新リストを送らなければなりません。宣伝するかの特徴の任意の組合せを含むことができるそれ以上の機能が存在しない場合は、更新機能のリストは、空であってもよいです。"
    },
    {
      "indent": 0,
      "text": "4.3.5. Completion of Stream Negotiation",
      "section_title": true,
      "ja": "4.3.5。ストリームネゴシエーションが完了"
    },
    {
      "indent": 3,
      "text": "The receiving entity indicates completion of the stream negotiation process by sending to the initiating entity either an empty <features/> element or a <features/> element that contains only voluntary-to-negotiate features. After doing so, the receiving entity MAY send an empty <features/> element (e.g., after negotiation of such voluntary-to-negotiate features) but MUST NOT send additional stream features to the initiating entity (if the receiving entity has new features to offer, preferably limited to mandatory-to-negotiate or security-critical features, it can simply close the stream with a <reset/> stream error (Section 4.9.3.16) and then advertise the new features when the initiating entity reconnects, preferably closing existing streams in a staggered way so that not all of the initiating entities reconnect at once). Once stream negotiation is complete, the initiating entity is cleared to send XML stanzas over the stream for as long as the stream is maintained by both parties.",
      "ja": "受信エンティティは、開始エンティティに空の<機能/>要素のみ自発ツーネゴシエーション機能が含まれ<機能/>要素のいずれかを送信することにより、ストリームネゴシエーションプロセスが完了したことを示しています。そうした後、受信エンティティは、（自主ツー交渉機能の交渉の後、例えば）空の<特長/>要素を送るかもしれませんが、受信エンティティはに新しい機能を持っている場合は開始エンティティ（への追加ストリーム機能を送ってはいけませんオファーは、好ましくは、交渉-必須またはセキュリティ上重要な機能に制限され、それは単に<リセット/>ストリームエラー（セクション4.9.3.16）でストリームを閉じ、開始エンティティが再接続したときの新機能を宣伝、好ましくはクローズすることができます千鳥の方法で、既存のストリームではない全ての開始エンティティのは、一度に再接続するように）。ストリームのネゴシエーションが完了すると、開始実体は限りストリームは、両当事者によって維持されるようするために、ストリーム上のXMLスタンザを送信するためにクリアされます。"
    },
    {
      "indent": 6,
      "text": "Informational Note: Resource binding as specified under Section 7 is an historical exception to the foregoing rule, since it is mandatory-to-negotiate for clients but uses XML stanzas for negotiation purposes.",
      "ja": "情報注：それは必須ツー交渉のクライアント用ですが、交渉のためにXMLスタンザを使用しているため、リソース第7項の下に指定されている結合は、上記のルールに歴史的な例外です。"
    },
    {
      "indent": 3,
      "text": "The initiating entity MUST NOT attempt to send XML stanzas (Section 8) to entities other than itself (i.e., the client's connected resource or any other authenticated resource of the client's account) or the server to which it is connected until stream negotiation has been completed. Even if the initiating entity does attempt to do so, the receiving entity MUST NOT accept such stanzas and MUST close the stream with a <not-authorized/> stream error (Section 4.9.3.12). This rule applies to XML stanzas only (i.e., <message/>, <presence/>, and <iq/> elements qualified by the content namespace) and not to XML elements used for stream negotiation (e.g., elements used to complete TLS negotiation (Section 5) or SASL negotiation (Section 6)).",
      "ja": "ストリームのネゴシエーションが完了するまで開始エンティティは、自分以外のエンティティにXMLスタンザ（セクション8）を送信しようとする（すなわち、クライアントの接続リソースまたはクライアントのアカウントの任意の他の認証されたリソース）、またはその接続先のサーバーはならない（MUST NOT） 。開始実体がそうしようとする試みをした場合でも、受信エンティティは、そのようなスタンザを受け入れてはいけませんし、<-許可されていない/>ストリームエラー（セクション4.9.3.12）でストリームを閉じる必要があります。このルールは、（すなわち、<メッセージ/>、<存在/>、および<IQ />コンテンツの名前空間で修飾要素）のみXMLスタンザに適用されていないストリームのネゴシエーション（例えば、TLSネゴシエーションを完了するために使用される要素に使用されるXML要素に（セクション5）またはSASLネゴシエーション（セクション6））。"
    },
    {
      "indent": 0,
      "text": "4.3.6. Determination of Addresses",
      "section_title": true,
      "ja": "4.3.6。アドレスの決定"
    },
    {
      "indent": 3,
      "text": "After the parties to an XML stream have completed the appropriate aspects of stream negotiation, the receiving entity for a stream MUST determine the initiating entity's JID.",
      "ja": "XMLストリームへの当事者は、ストリームネゴシエーションの適切な側面を完了した後は、ストリームの受信エンティティは、開始エンティティのJIDを決定する必要があります。"
    },
    {
      "indent": 3,
      "text": "For client-to-server communication, both SASL negotiation (Section 6) and resource binding (Section 7) MUST be completed before the server can determine the client's address. The client's bare JID (<localpart@domainpart>) MUST be the authorization identity (as defined by [SASL]), either (1) as directly communicated by the client during SASL negotiation (Section 6) or (2) as derived by the server from the authentication identity if no authorization identity was specified during SASL negotiation. The resourcepart of the full JID (<localpart@domainpart/resourcepart>) MUST be the resource negotiated by the client and server during resource binding (Section 7). A client MUST NOT attempt to guess at its JID but instead MUST consider its JID to be whatever the server returns to it during resource binding. The server MUST ensure that the resulting JID (including localpart, domainpart, resourcepart, and separator characters) conforms to the canonical format for XMPP addresses defined in [XMPP-ADDR]; to meet this restriction, the server MAY replace the JID sent by the client with the canonicalized JID as determined by the server and communicate that JID to the client during resource binding.",
      "ja": "クライアントからサーバーへの通信のために、両方のSASL交渉（第6節）と資源結合（第7節）は、サーバがクライアントのアドレスを決定する前に完了しなければなりません。クライアントの裸JID（<ローカル部分@ domainpart>）（1）として直接SASLネゴシエーション（第6節）中にクライアントによって通信又は（2）によって誘導されるのいずれかとして、承認のアイデンティティ（[SASL]によって定義される）でなければなりません認証アイデンティティからサーバ一切認可IDはSASLネゴシエーション中に指定されていない場合。フルJID（<ローカル部分@ domainpart / resourcepart>）のresourcepartはリソース結合（第7節）の間に、クライアントとサーバによって交渉のリソースでなければなりません。クライアントは、そのJIDを推測しようと試みてはなりませんが、代わりにリソースの結合時に、それまで何でもサーバーリターンであることをそのJIDを考慮しなければなりません。サーバは、（ローカル部分、domainpart、resourcepart、および区切り文字を含む）を得JIDは[XMPP-ADDR]で定義されたXMPPアドレスの正規のフォーマットに準拠していることを確認しなければなりません。この制約を満たすために、サーバは、サーバによって決定された正規化されたJIDとクライアントから送信されたJIDを交換し、リソースの結合の際にクライアントにJIDことを通信することができます。"
    },
    {
      "indent": 3,
      "text": "For server-to-server communication, the initiating server's bare JID (<domainpart>) MUST be the authorization identity (as defined by [SASL]), either (1) as directly communicated by the initiating server during SASL negotiation (Section 6) or (2) as derived by the receiving server from the authentication identity if no authorization identity was specified during SASL negotiation. In the absence of SASL negotiation, the receiving server MAY consider the authorization identity to be an identity negotiated within the relevant verification protocol (e.g., the 'from' attribute of the <result/> element in Server Dialback [XEP-0220]).",
      "ja": "サーバー間の通信のために、開始サーバの裸JID（<domainpart>）、（[SASL]によって定義されるような）認可IDいずれかでなければなりません（1）として直接SASLネゴシエーション時に開始サーバによって通信（第6節）何の認可IDはSASLネゴシエーション中に指定されていない場合または（2）認証アイデンティティから受信サーバーによって導出されます。 SASLネゴシエーションの非存在下では、受信側サーバは、関連する検証プロトコル内ネゴシエートアイデンティティ（例えば、サーバダイアルバック[XEP-0220】内の<結果/>要素の属性「から」）であることが認可アイデンティティを考慮することができます。"
    },
    {
      "indent": 6,
      "text": "Security Warning: Because it is possible for a third party to tamper with information that is sent over the stream before a security layer such as TLS is successfully negotiated, it is advisable for the receiving server to treat any such unprotected information with caution; this applies especially to the 'from' and 'to' addresses on the first initial stream header sent by the initiating entity.",
      "ja": "セキュリティ警告：第三者がTLSが正常にネゴシエートされているようなセキュリティ層の前にストリームを介して送信される情報を改ざんすることが可能ですので、それは注意してどのように保護されていない情報を処理する受信サーバのための賢明です。これは特に、開始エンティティによって送信された第1の初期ストリームヘッダ上のアドレス「に」「から」とに適用されます。"
    },
    {
      "indent": 0,
      "text": "4.3.7. Flow Chart",
      "section_title": true,
      "ja": "4.3.7。フロー・チャート"
    },
    {
      "indent": 3,
      "text": "We summarize the foregoing rules in the following non-normative flow chart for the stream negotiation process, presented from the perspective of the initiating entity.",
      "ja": "私たちは、開始エンティティの観点から提示され、ストリームネゴシエーションプロセスのための以下の非規範的なフローチャートで上記のルールをまとめます。"
    },
    {
      "indent": 3,
      "text": "                +---------------------+\n                | open TCP connection |\n                +---------------------+\n                           |\n                           v\n                    +---------------+\n                    | send initial  |<-------------------------+\n                    | stream header |                          ^\n                    +---------------+                          |\n                           |                                   |\n                           v                                   |\n                   +------------------+                        |\n                   | receive response |                        |\n                   | stream header    |                        |\n                   +------------------+                        |\n                           |                                   |\n                           v                                   |\n                    +----------------+                         |\n                    | receive stream |                         |\n+------------------>| features       |                         |\n^   {OPTIONAL}      +----------------+                         |\n|                          |                                   |\n|                          v                                   |\n|       +<-----------------+                                   |\n|       |                                                      |\n|    {empty?} ----> {all voluntary?} ----> {some mandatory?}   |\n|       |      no          |          no         |             |\n|       | yes              | yes                 | yes         |\n|       |                  v                     v             |\n|       |           +---------------+    +----------------+    |\n|       |           | MAY negotiate |    | MUST negotiate |    |\n|       |           | any or none   |    | one feature    |    |\n|       |           +---------------+    +----------------+    |\n|       v                  |                     |             |\n|   +---------+            v                     |             |\n|   |  DONE   |<----- {negotiate?}               |             |\n|   +---------+   no       |                     |             |\n|                     yes  |                     |             |\n|                          v                     v             |\n|                          +--------->+<---------+             |\n|                                     |                        |\n|                                     v                        |\n+<-------------------------- {restart mandatory?} ------------>+\n               no                                     yes",
      "raw": true
    },
    {
      "indent": 18,
      "text": "Figure 3: Stream Negotiation Flow Chart",
      "ja": "図3：ストリーム交渉フロー・チャート"
    },
    {
      "indent": 0,
      "text": "4.4. Closing a Stream",
      "section_title": true,
      "ja": "4.4。ストリームを閉じます"
    },
    {
      "indent": 3,
      "text": "An XML stream from one entity to another can be closed at any time, either because a specific stream error (Section 4.9) has occurred or in the absence of an error (e.g., when a client simply ends its session).",
      "ja": "別のエンティティからXMLストリームは、いずれかの特定のストリームエラー（セクション4.9）が発生したため、またはエラーの非存在下で（例えば、クライアントは、単に、そのセッションを終了したとき）、任意の時点で閉じることができます。"
    },
    {
      "indent": 3,
      "text": "A stream is closed by sending a closing </stream> tag.",
      "ja": "ストリームが閉じる</ストリーム>タグを送信することによって閉じられます。"
    },
    {
      "indent": 3,
      "text": "E: </stream:stream>",
      "ja": "E：</ストリーム：ストリーム>"
    },
    {
      "indent": 3,
      "text": "If the parties are using either two streams over a single TCP connection or two streams over two TCP connections, the entity that sends the closing stream tag MUST behave as follows:",
      "ja": "当事者は、単一のTCP接続を介してのいずれか二つのストリームまたは2つのTCP接続を介して2つのストリーム、次のように振る舞わなければならない（MUST）決算ストリームタグを送信したエンティティを使用している場合："
    },
    {
      "indent": 3,
      "text": "1. Wait for the other party to also close its outbound stream before terminating the underlying TCP connection(s); this gives the other party an opportunity to finish transmitting any outbound data to the closing entity before the termination of the TCP connection(s).",
      "ja": "1.また、基本的なTCPコネクション（複数可）を終了する前に、そのアウトバウンドストリームを閉じるために、相手を待ちます。これは、相手にTCPコネクション（S）の終了前に決算エンティティへのすべての送信データを送信終了する機会を与えてくれます。"
    },
    {
      "indent": 3,
      "text": "2. Refrain from sending any further data over its outbound stream to the other entity, but continue to process data received from the other entity (and, if necessary, process such data).",
      "ja": "他のエンティティへのアウトバウンドストリーム上の任意のさらなるデータを送信し、他のエンティティから受信したデータを処理し続ける2.リフレイン（必要に応じて、及び、プロセスようなデータ）。"
    },
    {
      "indent": 3,
      "text": "3. Consider both streams to be void if the other party does not send its closing stream tag within a reasonable amount of time (where the definition of \"reasonable\" is a matter of implementation or deployment).",
      "ja": "3.相手が（「合理的」の定義は、実装または配備の問題です）妥当な時間内閉ストリームタグを送信しない場合、両方のストリームが無効であることを考えてみましょう。"
    },
    {
      "indent": 3,
      "text": "4. After receiving a reciprocal closing stream tag from the other party or waiting a reasonable amount of time with no response, terminate the underlying TCP connection(s).",
      "ja": "4.他の当事者からの往復終値ストリームのタグを受け取るか、または無応答で妥当な時間を待機した後、基本的なTCPコネクション（複数可）を終了します。"
    },
    {
      "indent": 6,
      "text": "Security Warning: In accordance with Section 7.2.1 of [TLS], to help prevent a truncation attack the party that is closing the stream MUST send a TLS close_notify alert and MUST receive a responding close_notify alert from the other party before terminating the underlying TCP connection(s).",
      "ja": "セキュリティ警告：[TLS]の7.2.1項に従い、ストリームを閉じている当事者がTLSは、close_notifyを送らなければなりませんし、基本的なTCPを終了する前に、相手からの応答は、close_notifyを受けなければならない切り捨て攻撃を防ぐために接続（複数可）。"
    },
    {
      "indent": 3,
      "text": "If the parties are using multiple streams over multiple TCP connections, there is no defined pairing of streams and therefore the behavior is a matter for implementation.",
      "ja": "当事者が複数のTCP接続を介して複数のストリームを使用している場合は、そこに流れのない定義されたペアリングされていないため、動作は実装の問題です。"
    },
    {
      "indent": 0,
      "text": "4.5. Directionality",
      "section_title": true,
      "ja": "4.5。方向性"
    },
    {
      "indent": 3,
      "text": "An XML stream is always unidirectional, by which is meant that XML stanzas can be sent in only one direction over the stream (either from the initiating entity to the receiving entity or from the receiving entity to the initiating entity).",
      "ja": "XMLストリームは、XMLスタンザを（いずれかの開始エンティティに受信エンティティまたは受信エンティティから開始エンティティから）ストリーム上に一方向のみに送信することができることを意味していることにより、常に一方向です。"
    },
    {
      "indent": 3,
      "text": "Depending on the type of session that has been negotiated and the nature of the entities involved, the entities might use:",
      "ja": "ネゴシエートされたセッションの種類及び関与するエンティティの性質に応じて、エンティティが使用する可能性があります："
    },
    {
      "indent": 3,
      "text": "o Two streams over a single TCP connection, where the security context negotiated for the first stream is applied to the second stream. This is typical for client-to-server sessions, and a server MUST allow a client to use the same TCP connection for both streams.",
      "ja": "第一の流れのために交渉セキュリティコンテキストは第二のストリームに適用される単一のTCP接続を、上の2つのストリームO。これは、クライアントからサーバーへのセッションのために典型的であり、サーバは、クライアントが両方のストリームに同じTCP接続を使用することができるようにしなければなりません。"
    },
    {
      "indent": 3,
      "text": "o Two streams over two TCP connections, where each stream is separately secured. In this approach, one TCP connection is used for the stream in which stanzas are sent from the initiating entity to the receiving entity, and the other TCP connection is used for the stream in which stanzas are sent from the receiving entity to the initiating entity. This is typical for server-to-server sessions.",
      "ja": "各ストリームは個別に確保されている2つのTCP接続、上の2つのストリームO。このアプローチでは、1つのTCP接続は、スタンザは、受信エンティティに開始エンティティから送信されたストリームのために使用され、他のTCP接続がスタンザを開始エンティティに受信エンティティから送信されたストリームのために使用されます。これは、サーバー間のセッションのための典型的なものです。"
    },
    {
      "indent": 3,
      "text": "o Multiple streams over two or more TCP connections, where each stream is separately secured. This approach is sometimes used for server-to-server communication between two large XMPP service providers; however, this can make it difficult to maintain coherence of data received over multiple streams in situations described under Section 10.1, which is why a server MAY close the stream with a <conflict/> stream error (Section 4.9.3.3) if a remote server attempts to negotiate more than one stream (as described under Section 4.9.3.3).",
      "ja": "各ストリームは別々に固定されている二つ以上のTCP接続、オーバーO複数のストリーム。このアプローチは、時には二つの大きなXMPPサービスプロバイダとの間のサーバー間の通信のために使用されます。しかし、これは困難なデータの一貫性を維持するために行うことができ、リモートサーバー場合、サーバーは<衝突/>ストリームエラー（セクション4.9.3.3）でストリームを閉じれる理由である、セクション10.1で説明状況では複数のストリームを介して受信（セクション4.9.3.3で説明されているように）複数のストリームを交渉しようと試みます。"
    },
    {
      "indent": 3,
      "text": "This concept of directionality applies only to stanzas and explicitly does not apply to first-level children of the stream root that are used to bootstrap or manage the stream (e.g., first-level elements used for TLS negotiation, SASL negotiation, Server Dialback [XEP-0220], and Stream Management [XEP-0198]).",
      "ja": "方向性のこの概念は、ストリーム（例えば、TLSネゴシエーション、SASLネゴシエーション、サーバーダイアルバックに用いられる第1レベル要素[XEPをブートストラップまたは管理するために使用されているストリームのルートの最初のレベルの子には適用されません明示的スタンザにのみ適用され、 -0220]、およびストリーム管理[XEP-0198]）。"
    },
    {
      "indent": 3,
      "text": "The foregoing considerations imply that while completing STARTTLS negotiation (Section 5) and SASL negotiation (Section 6) two servers would use one TCP connection, but after the stream negotiation process is done that original TCP connection would be used only for the initiating server to send XML stanzas to the receiving server. In order for the receiving server to send XML stanzas to the initiating server, the receiving server would need to reverse the roles and negotiate an XML stream from the receiving server to the initiating server over a separate TCP connection. This separate TCP connection is then secured using a new round of TLS and/or SASL negotiation.",
      "ja": "上記の注意事項は、STARTTLSネゴシエーション（第5節）とSASLネゴシエーション（第6節）を完成しながら、2台のサーバーが1つのTCP接続を使用することを意味するものではなく、ストリームの交渉プロセスが完了された後に、元のTCP接続が開始するサーバが送信するためにのみ使用されますXMLは、受信側サーバーへのスタンザ。開始サーバにXMLスタンザを送信するために受信サーバためには、受信側サーバーの役割を逆にし、別のTCP接続を介して開始するサーバーに受信側サーバーからXMLストリームを交渉する必要があります。この別個のTCP接続は、その後、TLSおよび/またはSASL交渉の新ラウンドを使用して固定されます。"
    },
    {
      "indent": 6,
      "text": "Implementation Note: For historical reasons, a server-to-server session always uses two TCP connections. While that approach remains the standard behavior described in this document, extensions such as [XEP-0288] enable servers to negotiate the use of a single TCP connection for bidirectional stanza exchange.",
      "ja": "実装上の注意：歴史的な理由により、サーバー間のセッションは、常に2つのTCP接続を使用しています。そのアプローチは、この文書に記載された標準的な振る舞いのままが、そのような[XEP-0288]などの拡張機能は、双方向のスタンザ交換のための単一のTCP接続の使用を交渉するためにサーバを有効にします。"
    },
    {
      "indent": 6,
      "text": "Informational Note: Although XMPP developers sometimes apply the terms \"unidirectional\" and \"bidirectional\" to the underlying TCP connection (e.g., calling the TCP connection for a client-to-server session \"bidirectional\" and the TCP connection for a server-to-server session \"unidirectional\"), strictly speaking a stream is always unidirectional (because the initiating entity and receiving entity always have a minimum of two streams, one in each direction) and a TCP connection is always bidirectional (because TCP traffic can be sent in both directions). Directionality applies to the application-layer traffic sent over the TCP connection, not to the transport-layer traffic sent over the TCP connection itself.",
      "ja": "情報注：基礎となるTCP接続（例えば、「双方向」のクライアントからサーバーへのセッションのためのTCPコネクションを呼び出すと、サーバ・ツーのためのTCP接続にXMPPの開発者は時々条項を適用されますが、「単一指向性」と「双方向」 ）「単方向」のサーバー・セッションは、厳密にストリームを言えば、開始エンティティと受信エンティティは常に2つのストリーム、各方向に1つずつ）とのTCP接続の最小値を持っているので、TCPトラフィックはに送ることができるので、（常に双方向です（常に一方向であります両方向）。方向性は、TCP接続を介して送信されたアプリケーション層のトラフィックに、いないTCP接続自体を介して送信されるトランスポート層のトラフィックに適用されます。"
    },
    {
      "indent": 0,
      "text": "4.6. Handling of Silent Peers",
      "section_title": true,
      "ja": "4.6。サイレント・ピアの取り扱い"
    },
    {
      "indent": 3,
      "text": "When an entity that is a party to a stream has not received any XMPP traffic from its stream peer for some period of time, the peer might appear to be silent. There are several reasons why this might happen:",
      "ja": "ストリームにパーティをあるエンティティがしばらくの間そのストリームピアから任意のXMPPトラフィックを受信して​​いない場合は、ピアは、サイレントのように見えるかもしれません。これが起こるかもしれないいくつかの理由があります："
    },
    {
      "indent": 3,
      "text": "1. The underlying TCP connection is dead.",
      "section_title": true,
      "ja": "1.基本的なTCP接続が死んでいます。"
    },
    {
      "indent": 3,
      "text": "2. The XML stream is broken despite the fact that the underlying TCP connection is alive.",
      "ja": "2. XMLストリームは、基本的なTCP接続が生きているという事実にもかかわらず、壊れています。"
    },
    {
      "indent": 3,
      "text": "3. The peer is idle and simply has not sent any XMPP traffic over its XML stream to the entity.",
      "ja": "3.ピアがアイドル状態で、単にエンティティへのXMLストリームを介して任意のXMPPトラフィックを送信していません。"
    },
    {
      "indent": 3,
      "text": "These three conditions are best handled separately, as described in the following sections.",
      "ja": "次のセクションで説明するように、これらの3つの条件が最高、別々に処理されています。"
    },
    {
      "indent": 6,
      "text": "Implementation Note: For the purpose of handling silent peers, we treat a two unidirectional TCP connections as conceptually equivalent to a single bidirectional TCP connection (see Section 4.5); however, implementers need to be aware that, in the case of two unidirectional TCP connections, responses to traffic at the XMPP application layer will come back from the peer on the second TCP connection. In addition, the use of multiple streams in each direction (which is a somewhat frequent deployment choice for server-to-server connectivity among large XMPP service providers) further complicates application-level checking of XMPP streams and their underlying TCP connections, because there is no necessary correlation between any given initial stream and any given response stream.",
      "ja": "実装上の注意：サイレントピアを処理するために、我々は単一の双方向のTCP接続と概念的に同等として、2つの単方向のTCP接続を処理する（4.5節を参照）。しかし、実装者は2つの単方向のTCP接続の場合には、XMPPのアプリケーション層でのトラフィックに対する応答が戻って2番目のTCPコネクション上のピアから来る、ということを認識する必要があります。あるので他に、（大XMPPサービスプロバイダの間でサーバー間の接続のために幾分頻繁展開選択である）、各方向における複数のストリームを使用することは、さらに、XMPPストリームとその基礎となるTCP接続のアプリケーションレベルのチェックを複雑任意の与えられた初期ストリーム及び任意の応答ストリームの間に必要な相関はありません。"
    },
    {
      "indent": 0,
      "text": "4.6.1. Dead Connection",
      "section_title": true,
      "ja": "4.6.1。デッド接続"
    },
    {
      "indent": 3,
      "text": "If the underlying TCP connection is dead, stream-level checks (e.g., [XEP-0199] and [XEP-0198]) are ineffective. Therefore, it is unnecessary to close the stream with or without an error, and it is appropriate instead to simply terminate the TCP connection.",
      "ja": "基礎となるTCP接続が死んでいる場合、ストリームレベルのチェック（例えば、[XEP-0199]及び[XEP-0198】）は無効です。したがって、エラーの有無にかかわらずストリームをクローズする必要があり、それは単にTCP接続を終了する代わりに適切です。"
    },
    {
      "indent": 3,
      "text": "One common method for checking the TCP connection is to send a space character (U+0020) between XML stanzas, which is allowed for XML streams as described under Section 11.7; the sending of such a space character is properly called a \"whitespace keepalive\" (the term \"whitespace ping\" is often used, despite the fact that it is not a ping since no \"pong\" is possible). However, this is not allowed during TLS negotiation or SASL negotiation, as described under Section 5.3.3 and Section 6.3.5.",
      "ja": "TCP接続を確認するための1つの一般的な方法は、セクション11.7で説明したようにXMLストリームのために許可されているXMLスタンザ、間にスペース文字（U + 0020）を送信することです。そのようなスペース文字の送信を適切に（「ピンポン」は可能ではないため、pingのではないという事実にもかかわらず、用語「空白ピング」が用いられることが多い）、「ホワイトスペースキープアライブ」と呼ばれています。セクション5.3.3と6.3.5項で説明したようしかし、これは、TLS交渉やSASLネゴシエーション中に許可されていません。"
    },
    {
      "indent": 0,
      "text": "4.6.2. Broken Stream",
      "section_title": true,
      "ja": "4.6.2。ブロークン・ストリーム"
    },
    {
      "indent": 3,
      "text": "Even if the underlying TCP connection is alive, the peer might never respond to XMPP traffic that the entity sends, whether normal stanzas or specialized stream-checking traffic such as the application-level pings defined in [XEP-0199] or the more comprehensive Stream Management protocol defined in [XEP-0198]. In this case, it is appropriate for the entity to close a broken stream with a <connection-timeout/> stream error (Section 4.9.3.4).",
      "ja": "基本的なTCPコネクションが生きている場合でも、ピアは、[XEP-0199]で定義されたアプリケーションレベルのpingを実行したり、より包括的なストリームとして、通常のスタンザまたは特殊ストリームチェックトラフィックかどうか、エンティティが送信するXMPPトラフィックへの対応はありませんかもしれません[XEP-0198]で定義された管理プロトコル。エンティティは、<接続タイムアウト/>ストリームエラー（セクション4.9.3.4）で壊れたストリームを閉じ、この場合には、それが適切です。"
    },
    {
      "indent": 0,
      "text": "4.6.3. Idle Peer",
      "section_title": true,
      "ja": "4.6.3。アイドルピア"
    },
    {
      "indent": 3,
      "text": "Even if the underlying TCP connection is alive and the stream is not broken, the peer might have sent no stanzas for a certain period of time. In this case, the peer itself MAY close the stream (as described under Section 4.4) rather than leaving an unused stream open. If the idle peer does not close the stream, the other party MAY either close the stream using the handshake described under Section 4.4 or close the stream with a stream error (e.g., <resource-constraint/> (Section 4.9.3.17) if the entity has reached a limit on the number of open TCP connections or <policy-violation/> (Section 4.9.3.14) if the connection has exceeded a local timeout policy). However, consistent with the order of layers (specified under Section 13.3), the other party is advised to verify that the underlying TCP connection is alive and the stream is unbroken (as described above) before concluding that the peer is idle. Furthermore, it is preferable to be liberal in accepting idle peers, since experience has shown that doing so improves the reliability of communication over XMPP networks and that it is typically more efficient to maintain a stream between two servers than to aggressively time out such a stream.",
      "ja": "基本的なTCP接続が生きているとストリームが壊れていない場合でも、ピアは一定時間何のスタンザを送らなかったかもしれません。この場合には、ピア自体がストリームを閉じる（セクション4.4で説明したように）よりむしろオープン未使用のストリームを残してもしれ。アイドルピアがストリームを閉じていない場合は、他の当事者は、4.4節で述べたハンドシェイクを使用してストリームを閉じるMAYいずれか、または例えば、<リソース制約/>（セクション4.9.3.17）であれば（ストリームエラーでストリームを閉じますエンティティが開いているTCP接続の数または接続がローカルのタイムアウトポリシーを超えている場合は、<ポリシー違反/>（セクション4.9.3.14））の上限に達しました。しかし、層（13.3節で指定）の順と一致し、他の当事者は、ピアがアイドル状態であることを結論付ける前に、（上記のように）基本的なTCPコネクションが生きていると、ストリームが脈々とであることを確認することをお勧めします。経験はそうすることがXMPPネットワーク上で通信の信頼性を向上させることが示されており、積極的にそのようなストリームをタイムアウトするよりも、2つのサーバー間の流れを維持するために、典型的には、より効率的であることがので、アイドル状態のピアを受け入れるにリベラルであることが好ましいです。 。"
    },
    {
      "indent": 0,
      "text": "4.6.4. Use of Checking Methods",
      "section_title": true,
      "ja": "4.6.4。チェック方法の使用"
    },
    {
      "indent": 3,
      "text": "Implementers are advised to support whichever stream-checking and connection-checking methods they deem appropriate, but to carefully weigh the network impact of such methods against the benefits of discovering broken streams and dead TCP connections in a timely manner. The length of time between the use of any particular check is very much a matter of local service policy and depends strongly on the network environment and usage scenarios of a given deployment and connection type. At the time of writing, it is RECOMMENDED that any such check be performed not more than once every 5 minutes and that, ideally, such checks will be initiated by clients rather than servers. Those who implement XMPP software and deploy XMPP services are encouraged to seek additional advice regarding appropriate timing of stream-checking and connection-checking methods, particularly when power-constrained devices are being used (e.g., in mobile environments).",
      "ja": "実装者は、彼らが適切と思わ方ストリームチェックし、接続チェック方法をサポートするために、しかし慎重にタイムリーに壊れたストリームと死んでTCPコネクションを発見することの利点に対するこのような方法のネットワークへの影響を比較検討することをお勧めします。いずれかの特定のチェックの使用との間の時間の長さは、非常に多くのローカルサービスポリシーの問題であり、与えられた展開と接続タイプのネットワーク環境や使用シナリオに強く依存します。執筆時点では、どのようにチェックが5分に1回、理想的には、このようなチェックは、クライアントではなく、サーバによって開始されますが、それ以上ではない実行することをお勧めします。 XMPPソフトウェアを実装し、XMPPサービスを展開者は、電力に制約のあるデバイスは、（モバイル環境において、例えば、）使用されている場合は特に、ストリームチェックと接続チェック方法の適切なタイミングに関する追加的助言を求めることが奨励されます。"
    },
    {
      "indent": 0,
      "text": "4.7. Stream Attributes",
      "section_title": true,
      "ja": "4.7。ストリーム属性"
    },
    {
      "indent": 3,
      "text": "The attributes of the root <stream/> element are defined in the following sections.",
      "ja": "ルート<ストリーム/>要素の属性は、以下のセクションで定義されています。"
    },
    {
      "indent": 6,
      "text": "Security Warning: Until and unless the confidentiality and integrity of the stream are protected via TLS as described under Section 5 or an equivalent security layer (such as the SASL GSSAPI mechanism), the attributes provided in a stream header could be tampered with by an attacker.",
      "ja": "セキュリティ警告：セクション5または（例えばSASL GSSAPIメカニズムなど）等価なセキュリティ層の下に記載したようにストリームの機密性と完全性がTLSを介して保護されるまでしない限り、ストリームのヘッダに設けられた属性は攻撃者によって改ざんされる可能性が。"
    },
    {
      "indent": 6,
      "text": "Implementation Note: The attributes of the root <stream/> element are not prepended by a namespace prefix because, as explained in [XML-NAMES], \"[d]efault namespace declarations do not apply directly to attribute names; the interpretation of unprefixed attributes is determined by the element on which they appear.\"",
      "ja": "実装上の注意：ルートの属性は[XML-NAMES]で説明したように、これは、<ストリーム/>要素は、名前空間接頭辞によって先頭に付加されていない、「[D] EFAULT名前空間宣言は、属性名に直接適用されません。接頭辞の解釈属性は、それらが表示されている要素によって決定されます。」"
    },
    {
      "indent": 0,
      "text": "4.7.1. from",
      "section_title": true,
      "ja": "4.7.1。から"
    },
    {
      "indent": 3,
      "text": "The 'from' attribute specifies an XMPP identity of the entity sending the stream element.",
      "ja": "属性「から」ストリーム要素を送信エンティティのXMPPのIDを指定します。"
    },
    {
      "indent": 3,
      "text": "For initial stream headers in client-to-server communication, the 'from' attribute is the XMPP identity of the principal controlling the client, i.e., a JID of the form <localpart@domainpart>. The client might not know the XMPP identity, e.g., because the XMPP identity is assigned at a level other than the XMPP application layer (as in the Generic Security Service Application Program Interface [GSS-API]) or is derived by the server from information provided by the client (as in some deployments of end-user certificates with the SASL EXTERNAL mechanism). Furthermore, if the client considers the XMPP identity to be private information then it is advised not to include a 'from' attribute before the confidentiality and integrity of the stream are protected via TLS or an equivalent security layer. However, if the client knows the XMPP identity then it SHOULD include the 'from' attribute after the confidentiality and integrity of the stream are protected via TLS or an equivalent security layer.",
      "ja": "クライアントからサーバーへの通信における初期ストリームヘッダは、属性「から」、すなわちクライアントを制御する主のXMPP同一であり、フォームのJID <ローカル部分@ domainpart>。 XMPPのアイデンティティは（一般的なセキュリティサービスアプリケーションプログラムインタフェース[GSS-API]のように）XMPPアプリケーション層以外のレベルで割り当てられているかの情報から、サーバによって導出されるため、クライアントは、例えば、XMPPの身元を知らないかもしれません（SASL EXTERNAL機構を備えたエンドユーザ証明書のいくつかの展開のように）クライアントが提供します。クライアントは、XMPPのアイデンティティを考える場合さらに、TLSまたは同等のセキュリティ層を介して保護されたストリームの機密性と完全性の前に「から」属性を含めるしないことをお勧めしている個人情報であることを。クライアントは、XMPPの身元を知っている場合しかし、それはTLSまたは同等のセキュリティ層を介して保護されたストリームの機密性と整合性の後「から」属性を含むべきです。"
    },
    {
      "indent": 3,
      "text": "I: <?xml version='1.0'?> <stream:stream from='juliet@im.example.com' to='im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "I：<？xmlのバージョン= '1.0'？> <ストリーム：im.example.com 'バージョン= '1.0' のxml：LANG = '「=' にストリームfrom='juliet@im.example.comのxmlns' EN = 「おしゃべり：クライアントののxmlns：ストリーム= 'のhttp：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "For initial stream headers in server-to-server communication, the 'from' attribute is one of the configured FQDNs of the server, i.e., a JID of the form <domainpart>. The initiating server might have more than one XMPP identity, e.g., in the case of a server that provides virtual hosting, so it will need to choose an identity that is associated with this output stream (e.g., based on the 'to' attribute of the stanza that triggered the stream negotiation attempt). Because a server is a \"public entity\" on the XMPP network, it MUST include the 'from' attribute after the confidentiality and integrity of the stream are protected via TLS or an equivalent security layer.",
      "ja": "サーバ間通信における初期ストリームヘッダは、属性「から」サーバーの構成のFQDNの一つ、すなわち、フォーム<domainpart>のJID。それはの「から」属性に基づいて、この出力ストリーム（例えば、関連付けられているIDを選択する必要がありますので、開始サーバは、仮想ホスティングを提供するサーバの場合には、例えば、複数のXMPPのアイデンティティを持っているかもしれませんストリームの交渉の試みをトリガースタンザ）。サーバはXMPPネットワーク上の「公器」であるため、ストリームの機密性と整合性の後にそれが含まなければならない「から」属性は、TLSまたは同等のセキュリティ層を介して保護されています。"
    },
    {
      "indent": 3,
      "text": "I: <?xml version='1.0'?> <stream:stream from='example.net' to='im.example.com' version='1.0' xml:lang='en' xmlns='jabber:server' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "I：<ストリーム<XMLバージョン= '1.0'？>：のxmlns = \"おしゃべり 'エン' LANG =：= 'im.example.com' バージョン= '1.0' XMLへ= 'example.net' からストリームサーバー'のxmlns：ストリーム=' のhttp：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "For response stream headers in both client-to-server and server-to-server communication, the receiving entity MUST include the 'from' attribute and MUST set its value to one of the receiving entity's FQDNs (which MAY be an FQDN other than that specified in the 'to' attribute of the initial stream header, as described under Section 4.9.1.3 and Section 4.9.3.6).",
      "ja": "クライアントとサーバの両方とサーバー間の通信に応答ストリームのヘッダに、受信エンティティは、属性「から」と比べFQDNその他することができる受信エンティティのFQDNでの（その値を設定しなければなりませんを含まなければなりませんセクション4.9.1.3およびセクション4.9.3.6）で説明したように、初期ストリームヘッダの「」の属性で指定されました。"
    },
    {
      "indent": 3,
      "text": "R: <?xml version='1.0'?> <stream:stream from='im.example.com' id='++TR84Sm6A3hnt3Q065SnAbbk3Y=' to='juliet@im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "R：<？xmlのバージョン= '1.0'？> <ストリーム：= 'im.example.com' ID = '++ TR84Sm6A3hnt3Q065SnAbbk3Y =' to='juliet@im.example.comからのストリーム」バージョン= '1.0' のXML ：LANG =のxmlns = 'おしゃべり：クライアント' 'en' とのxmlns：ストリーム= 'のhttp：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "Whether or not the 'from' attribute is included, each entity MUST verify the identity of the other entity before exchanging XML stanzas with it, as described under Section 13.5.",
      "ja": "「から」属性が含まれているかどうかは、セクション13.5で説明したように、各エンティティは、それをXMLスタンザを交換する前に、他のエンティティの身元を確かめなければなりません。"
    },
    {
      "indent": 6,
      "text": "Interoperability Note: It is possible that implementations based on [RFC3920] will not include the 'from' address on any stream headers (even ones whose confidentiality and integrity are protected); an entity SHOULD be liberal in accepting such stream headers.",
      "ja": "相互運用注：[RFC3920]に基づく実装は、任意のストリームヘッダ（その機密性と完全性保護されているものも含め）上のアドレス「から」含まないことが可能です。エンティティは、ストリームヘッダを受け入れるにリベラルであるべきです。"
    },
    {
      "indent": 0,
      "text": "4.7.2. to",
      "section_title": true,
      "ja": "４。７。２。 と"
    },
    {
      "indent": 3,
      "text": "For initial stream headers in both client-to-server and server-to-server communication, the initiating entity MUST include the 'to' attribute and MUST set its value to a domainpart that the initiating entity knows or expects the receiving entity to service. (The same information can be provided in other ways, such as a Server Name Indication during TLS negotiation as described in [TLS-EXT].)",
      "ja": "両方のクライアントからサーバーへとサーバー間の通信における初期のストリームヘッダの場合、開始実体は「から」属性を含まなければならないし、開始エンティティが知っているか、サービスへの受信エンティティを見込んでいるdomainpartにその値を設定しなければなりません。 （[TLS-EXT]に記載のものと同じ情報がTLSネゴシエーション中に、サーバ名の表示のような他の方法で提供することができます。）"
    },
    {
      "indent": 3,
      "text": "I: <?xml version='1.0'?> <stream:stream from='juliet@im.example.com' to='im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "I：<？xmlのバージョン= '1.0'？> <ストリーム：im.example.com 'バージョン= '1.0' のxml：LANG = '「=' にストリームfrom='juliet@im.example.comのxmlns' EN = 「おしゃべり：クライアントののxmlns：ストリーム= 'のhttp：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "For response stream headers in client-to-server communication, if the client included a 'from' attribute in the initial stream header then the server MUST include a 'to' attribute in the response stream header and MUST set its value to the bare JID specified in the 'from' attribute of the initial stream header. If the client did not include a 'from' attribute in the initial stream header then the server MUST NOT include a 'to' attribute in the response stream header.",
      "ja": "クライアントが含まれている場合、クライアントからサーバーへの通信に応答ストリームのヘッダに、初期ストリームヘッダ内の属性「から」サーバは応答ストリームのヘッダに「」の属性を含まなければならないと裸JIDにその値を設定する必要があります初期ストリームヘッダの「から」属性で指定されました。クライアントが初期ストリームヘッダ内の「から」属性が含まれていなかった場合、サーバは応答ストリームのヘッダ内の「から」属性を含めることはできません。"
    },
    {
      "indent": 3,
      "text": "R: <?xml version='1.0'?> <stream:stream from='im.example.com' id='++TR84Sm6A3hnt3Q065SnAbbk3Y=' to='juliet@im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "R：<？xmlのバージョン= '1.0'？> <ストリーム：= 'im.example.com' ID = '++ TR84Sm6A3hnt3Q065SnAbbk3Y =' to='juliet@im.example.comからのストリーム」バージョン= '1.0' のXML ：LANG =のxmlns = 'おしゃべり：クライアント' 'en' とのxmlns：ストリーム= 'のhttp：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "For response stream headers in server-to-server communication, the receiving entity MUST include a 'to' attribute in the response stream header and MUST set its value to the domainpart specified in the 'from' attribute of the initial stream header.",
      "ja": "サーバ間通信に応答ストリームヘッダは、受信エンティティは、応答ストリームのヘッダに「」の属性を含まなければなりませんとで指定domainpartにその値を設定する必要があり、初期ストリームヘッダの属性「から」。"
    },
    {
      "indent": 3,
      "text": "R: <?xml version='1.0'?> <stream:stream from='im.example.com' id='g4qSvGvBxJ+xeAd7QKezOQJFFlw=' to='example.net' version='1.0' xml:lang='en' xmlns='jabber:server' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "R：<？xmlのバージョン= '1.0'？> <ストリーム：= 'im.example.com' ID = 'g4qSvGvBxJ + xeAd7QKezOQJFFlw =' = 'example.net' のバージョンからストリーム= '1.0' のxml：langの=」 en」とのxmlns = 'おしゃべり：サーバののxmlns：ストリーム= 'のhttp：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "Whether or not the 'to' attribute is included, each entity MUST verify the identity of the other entity before exchanging XML stanzas with it, as described under Section 13.5.",
      "ja": "「から」属性が含まれているかどうかは、セクション13.5で説明したように、各エンティティは、それをXMLスタンザを交換する前に、他のエンティティの身元を確かめなければなりません。"
    },
    {
      "indent": 6,
      "text": "Interoperability Note: It is possible that implementations based on [RFC3920] will not include the 'to' address on stream headers; an entity SHOULD be liberal in accepting such stream headers.",
      "ja": "相互運用注：[RFC3920]に基づく実装はストリームヘッダーに「」のアドレスが含まれないことが可能です。エンティティは、ストリームヘッダを受け入れるにリベラルであるべきです。"
    },
    {
      "indent": 0,
      "text": "4.7.3. id",
      "section_title": true,
      "ja": "4.7.3。 ID"
    },
    {
      "indent": 3,
      "text": "The 'id' attribute specifies a unique identifier for the stream, called a \"stream ID\". The stream ID MUST be generated by the receiving entity when it sends a response stream header and MUST BE unique within the receiving application (normally a server).",
      "ja": "「ID」属性は、「ストリームID」と呼ばれるストリームの一意の識別子を指定します。ストリームIDは、それが応答ストリームのヘッダを送信し、受信側のアプリケーション（通常はサーバー）内で一意である必要があり、受信エンティティによって生成されなければなりません。"
    },
    {
      "indent": 6,
      "text": "Security Warning: The stream ID MUST be both unpredictable and non-repeating because it can be security-critical when reused by an authentication mechanisms, as is the case for Server Dialback [XEP-0220] and the \"XMPP 0.9\" authentication mechanism used before RFC 3920 defined the use of SASL in XMPP; for recommendations regarding randomness for security purposes, see [RANDOM].",
      "ja": "セキュリティ警告：認証メカニズムによって再利用する際サーバーダイアルバック[XEP-0220】そして前に使用される「XMPP 0.9」認証機構の場合のように、それは、セキュリティが重要である可能性があるため、ストリームIDが予測不能および非反復の両方でなければなりませんRFC 3920はXMPPでSASLの使用を定義しました。セキュリティ目的のためにランダム性に関する推奨事項については、[RANDOM]を参照してください。"
    },
    {
      "indent": 3,
      "text": "For initial stream headers, the initiating entity MUST NOT include the 'id' attribute; however, if the 'id' attribute is included, the receiving entity MUST ignore it.",
      "ja": "初期のストリームヘッダの場合、開始エンティティは、「ID」属性を含めることはできません。 「ID」属性が含まれている場合は、受信エンティティは、それを無視しなければなりません。"
    },
    {
      "indent": 3,
      "text": "For response stream headers, the receiving entity MUST include the 'id' attribute.",
      "ja": "応答ストリームのヘッダには、受信エンティティは、「ID」属性を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "R: <?xml version='1.0'?> <stream:stream from='im.example.com' id='++TR84Sm6A3hnt3Q065SnAbbk3Y=' to='juliet@im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "R：<？xmlのバージョン= '1.0'？> <ストリーム：= 'im.example.com' ID = '++ TR84Sm6A3hnt3Q065SnAbbk3Y =' to='juliet@im.example.comからのストリーム」バージョン= '1.0' のXML ：LANG =のxmlns = 'おしゃべり：クライアント' 'en' とのxmlns：ストリーム= 'のhttp：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 6,
      "text": "Interoperability Note: In RFC 3920, the text regarding inclusion of the 'id' attribute was ambiguous, leading some implementations to leave the attribute off the response stream header.",
      "ja": "相互運用注：RFC 3920には、「ID」属性を含めることに関するテキストが応答ストリームヘッダオフ属性を残すために、いくつかの実装をリードする、曖昧でした。"
    },
    {
      "indent": 0,
      "text": "4.7.4. xml:lang",
      "section_title": true,
      "ja": "4.7.4。 XML：LANG"
    },
    {
      "indent": 3,
      "text": "The 'xml:lang' attribute specifies an entity's preferred or default language for any human-readable XML character data to be sent over the stream (an XML stanza can also possess an 'xml:lang' attribute, as discussed under Section 8.1.5). The syntax of this attribute is defined in Section 2.12 of [XML]; in particular, the value of the 'xml:lang' attribute MUST conform to the NMTOKEN datatype (as defined in Section 2.3 of [XML]) and MUST conform to the language identifier format defined in [LANGTAGS].",
      "ja": "「XML：LANG」：セクション8.1.5の下で議論したように、属性属性はどんな人間が読み取り可能なXMLの文字データのエンティティの優先またはデフォルトの言語を指定するには、XMLスタンザも「LANGのxml」を持つことができる（ストリームを介して送信します）。この属性の構文は、[XML]のセクション2.12で定義されています。具体的には、「XML：langの」の値属性がNMTOKENデータ型に一致しなければなりません（[XML]のセクション2.3で定義されるように）と[LANGTAGS]で定義された言語識別子のフォーマットに準拠しなければなりません。"
    },
    {
      "indent": 3,
      "text": "For initial stream headers, the initiating entity SHOULD include the 'xml:lang' attribute.",
      "ja": "属性：初期のストリームヘッダの場合、開始実体は「LANGのxml」を含むべきです。"
    },
    {
      "indent": 3,
      "text": "I: <?xml version='1.0'?> <stream:stream from='juliet@im.example.com' to='im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "I：<？xmlのバージョン= '1.0'？> <ストリーム：im.example.com 'バージョン= '1.0' のxml：LANG = '「=' にストリームfrom='juliet@im.example.comのxmlns' EN = 「おしゃべり：クライアントののxmlns：ストリーム= 'のhttp：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "For response stream headers, the receiving entity MUST include the 'xml:lang' attribute. The following rules apply:",
      "ja": "属性：応答ストリームのヘッダには、受信エンティティは、「LANGのxml」を含まなければなりません。次の規則が適用されます。"
    },
    {
      "indent": 3,
      "text": "o If the initiating entity included an 'xml:lang' attribute in its initial stream header and the receiving entity supports that language in the human-readable XML character data that it generates and sends to the initiating entity (e.g., in the <text/> element for stream and stanza errors), the value of the 'xml:lang' attribute MUST be the identifier for the initiating entity's preferred language (e.g., \"de-CH\").",
      "ja": "O開始エンティティは、「XMLを：LANG」含まれている場合は、その最初のストリームヘッダおよび受信エンティティ内の属性は、それが生成し、/ <テキストで、例えば（開始エンティティに送信する人間が読めるXML文字データで、その言語をサポートしていますストリームとスタンザエラーについて>要素）、「XML：LANG」の値属性は、開始エンティティの優先言語（例えば、「脱CH」）のための識別子でなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If the receiving entity supports a language that matches the initiating entity's preferred language according to the \"lookup scheme\" specified in Section 3.4 of [LANGMATCH] (e.g., \"de\" instead of \"de-CH\"), then the value of the 'xml:lang' attribute SHOULD be the identifier for the matching language.",
      "ja": "O受信エンティティは[LANGMATCH（例えば、「ド」の代わりに「脱CH」の）のセクション3.4で指定された「ルックアップ方式」によると、開始エンティティの言語と一致する言語のその値をサポートしている場合「XML：LANG」属性は、一致する言語の識別子であるべきです。"
    },
    {
      "indent": 3,
      "text": "o If the receiving entity does not support the initiating entity's preferred language or a matching language according to the lookup scheme (or if the initiating entity did not include the 'xml:lang' attribute in its initial stream header), then the value of the 'xml:lang' attribute MUST be the identifier for the default language of the receiving entity (e.g., \"en\").",
      "ja": "O受信エンティティは、ルックアップ方式に従って開始するエンティティの優先言語やマッチングの言語をサポートしていない場合（または開始エンティティは、「XML：LANG」含まれていなかった場合は、その最初のストリームヘッダ内の属性）、の後、値を「XML：LANG」属性は、受信エンティティ（例えば、「EN」）のデフォルト言語の識別子でなければなりません。"
    },
    {
      "indent": 3,
      "text": "R: <?xml version='1.0'?> <stream:stream from='im.example.com' id='++TR84Sm6A3hnt3Q065SnAbbk3Y=' to='juliet@im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "R：<？xmlのバージョン= '1.0'？> <ストリーム：= 'im.example.com' ID = '++ TR84Sm6A3hnt3Q065SnAbbk3Y =' to='juliet@im.example.comからのストリーム」バージョン= '1.0' のXML ：LANG =のxmlns = 'おしゃべり：クライアント' 'en' とのxmlns：ストリーム= 'のhttp：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "If the initiating entity included the 'xml:lang' attribute in its initial stream header, the receiving entity SHOULD remember that value as the default xml:lang for all stanzas sent by the initiating entity over the current stream. As described under Section 8.1.5,",
      "ja": "開始エンティティは「XML：LANG」含まれている場合：LANG現在のストリーム上で開始エンティティから送信されたすべてのスタンザのためにその初期ストリームヘッダ内の属性を、受信エンティティは、デフォルトのXMLとしてその値を覚えておいてください。セクション8.1.5で説明したよう、"
    },
    {
      "indent": 3,
      "text": "the initiating entity MAY include the 'xml:lang' attribute in any XML stanzas it sends over the stream. If the initiating entity does not include the 'xml:lang' attribute in any such stanza, the receiving entity SHOULD add the 'xml:lang' attribute to the stanza when routing it to a remote server or delivering it to a connected client, where the value of the attribute MUST be the identifier for the language preferred by the initiating entity (even if the receiving entity does not support that language for human-readable XML character data it generates and sends to the initiating entity, such as in stream or stanza errors). If the initiating entity includes the 'xml:lang' attribute in any such stanza, the receiving entity MUST NOT modify or delete it when routing it to a remote server or delivering it to a connected client.",
      "ja": "それは、ストリーム上で送信するすべてのXMLスタンザ内の属性：開始エンティティは、「LANGのxml」を含むかもしれません。開始エンティティは「XML：LANG」が含まれていない場合：場合は、リモートサーバーにルーティングまたは接続されたクライアントに配信スタンザに属性、そのようなスタンザ内の属性を、受信エンティティは、「LANGのxml」を追加すべきです属性の値は、受信エンティティは、それが発生し、かつ、ストリームやスタンザのように、開始エンティティに送信し、人間が読み取り可能なXML文字データについて、その言語をサポートしていない場合でも開始するエンティティ（で優先言語の識別子でなければなりませんエラー）。開始エンティティは「XML：LANG」を含む場合は、そのようなスタンザ内の属性をリモートサーバーにルーティングまたは接続されたクライアントに配信する際、受信エンティティは、それを変更したり、削除してはなりません。"
    },
    {
      "indent": 0,
      "text": "4.7.5. version",
      "section_title": true,
      "ja": "4.7.5。版"
    },
    {
      "indent": 3,
      "text": "The inclusion of the version attribute set to a value of at least \"1.0\" signals support for the stream-related protocols defined in this specification, including TLS negotiation (Section 5), SASL negotiation (Section 6), stream features (Section 4.3.2), and stream errors (Section 4.9).",
      "ja": "少なくとも「1.0」信号の値に設定し、バージョン属性の包含は、TLSネゴシエーション（セクション5）、SASLネゴシエーション（第6節）、ストリーム機能（セクション4.3を含む本明細書で定義されるストリームに関連するプロトコルのサポート。 2）、及びストリームエラー（セクション4.9）。"
    },
    {
      "indent": 3,
      "text": "The version of XMPP specified in this specification is \"1.0\"; in particular, XMPP 1.0 encapsulates the stream-related protocols as well as the basic semantics of the three defined XML stanza types (<message/>, <presence/>, and <iq/> as described under Sections 8.2.1, 8.2.2, and 8.2.3, respectively).",
      "ja": "この仕様書で指定されたXMPPのバージョンは「1.0」です。セクション8.2.1、8.2で説明したように、特に、XMPP 1.0ストリームに関連するプロトコルと3つの定義されたXMLスタンザタイプ（<メッセージ/>、<存在/>、および<IQ />の基本的なセマンティクスをカプセル化します。 2、および8.2.3、それぞれ）。"
    },
    {
      "indent": 3,
      "text": "The numbering scheme for XMPP versions is \"<major>.<minor>\". The major and minor numbers MUST be treated as separate integers and each number MAY be incremented higher than a single digit. Thus, \"XMPP 2.4\" would be a lower version than \"XMPP 2.13\", which in turn would be lower than \"XMPP 12.3\". Leading zeros (e.g., \"XMPP 6.01\") MUST be ignored by recipients and MUST NOT be sent.",
      "ja": "XMPPバージョンの番号付けスキームは、「<主要な>。<マイナー>」です。メジャー番号とマイナー番号は、別々の整数として扱わなければならないと、それぞれ番号が一桁以上高い増分することができます。このように、「XMPP 2.4は、」今度は「XMPP 12.3」よりも低くなる「XMPP 2.13」よりも低いバージョン、だろう。先頭のゼロは（例えば、「XMPP 6.01」）は、受信者によって無視されなければならないと送ってはいけません。"
    },
    {
      "indent": 3,
      "text": "The major version number will be incremented only if the stream and stanza formats or obligatory actions have changed so dramatically that an older version entity would not be able to interoperate with a newer version entity if it simply ignored the elements and attributes it did not understand and took the actions defined in the older specification.",
      "ja": "ストリームおよびスタンザ形式または義務のアクションが、それは単に要素を無視して、それは理解していなかった属性とあれば、古いバージョンのエンティティは、新しいバージョンのエンティティと相互運用することができないほど劇的に変化した場合、メジャーバージョン番号はインクリメントされます古い仕様で定義されたアクションを取りました。"
    },
    {
      "indent": 3,
      "text": "The minor version number will be incremented only if significant new capabilities have been added to the core protocol (e.g., a newly defined value of the 'type' attribute for message, presence, or IQ stanzas). The minor version number MUST be ignored by an entity with a smaller minor version number, but MAY be used for informational purposes by the entity with the larger minor version number (e.g., the entity with the larger minor version number would simply note that its correspondent would not be able to understand that value of the 'type' attribute and therefore would not send it).",
      "ja": "マイナーバージョン番号は、重要な新機能がコアプロトコル（例えば、メッセージ、プレゼンス、またはIQスタンザのための「タイプ」属性の新たに定義された値）に追加された場合にのみインクリメントされます。マイナーバージョン番号が小さいマイナーバージョン番号を持つエンティティによって無視されなければならないが、より大きなマイナーバージョン番号を持つ大きなマイナーバージョン番号（例えば、実体は単にその通信員ことに注意してしまうと、エンティティによって情報の目的のために使用されるかもしれ）「タイプ」属性の値を理解することはできませんので、それを送信しません。"
    },
    {
      "indent": 3,
      "text": "The following rules apply to the generation and handling of the 'version' attribute within stream headers:",
      "ja": "次のルールは、世代とのストリームヘッダ内の「バージョン」属性の取り扱いに適用されます。"
    },
    {
      "indent": 3,
      "text": "1. The initiating entity MUST set the value of the 'version' attribute in the initial stream header to the highest version number it supports (e.g., if the highest version number it supports is that defined in this specification, it MUST set the value to \"1.0\").",
      "ja": "それがサポートする最大のバージョン番号がこの仕様で定義され、それが値を設定しなければならないということであれば1.開始エンティティは、それがサポートする最大のバージョン番号（例えば、への初期ストリームヘッダに「バージョン」属性の値を設定しなければなりません\"1.0\"）。"
    },
    {
      "indent": 3,
      "text": "2. The receiving entity MUST set the value of the 'version' attribute in the response stream header to either the value supplied by the initiating entity or the highest version number supported by the receiving entity, whichever is lower. The receiving entity MUST perform a numeric comparison on the major and minor version numbers, not a string match on \"<major>.<minor>\".",
      "ja": "前記受信エンティティは、開始エンティティにより供給された値以下である方受信エンティティによってサポートされる最も高いバージョン番号のいずれかに応答ストリームヘッダ内の「バージョン」属性の値を設定しなければなりません。受信エンティティは、「<主要な>。<マイナー>」のメジャーバージョン番号とマイナーバージョン番号ではなく、文字列一致の数値比較を実行しなければなりません。"
    },
    {
      "indent": 3,
      "text": "3. If the version number included in the response stream header is at least one major version lower than the version number included in the initial stream header and newer version entities cannot interoperate with older version entities as described, the initiating entity SHOULD close the stream with an <unsupported-version/> stream error (Section 4.9.3.25).",
      "ja": "3.応答ストリームのヘッダに含まれるバージョン番号が記載されているように古いバージョンのエンティティと相互運用することができない初期ストリームヘッダと新しいバージョンのエンティティに含まれるバージョン番号よりも少なくとも1つのメジャーバージョン低い場合、開始エンティティが有するストリームを閉じる必要があります<サポートされていないバージョン/>ストリームエラー（セクション4.9.3.25）。"
    },
    {
      "indent": 3,
      "text": "4. If either entity receives a stream header with no 'version' attribute, the entity MUST consider the version supported by the other entity to be \"0.9\" and SHOULD NOT include a 'version' attribute in the response stream header.",
      "ja": "どちらかの実体が無い「バージョン」属性を持つストリームヘッダーを受信した場合4.は、エンティティが他のエンティティによってサポートされるバージョンは「0.9」であることを考慮しなければならないと応答ストリームのヘッダに「バージョン」属性を含めるべきではありません。"
    },
    {
      "indent": 0,
      "text": "4.7.6. Summary of Stream Attributes",
      "section_title": true,
      "ja": "4.7.6。ストリーム属性の概要"
    },
    {
      "indent": 3,
      "text": "The following table summarizes the attributes of the root <stream/> element.",
      "ja": "次の表は、ルート<ストリーム/>要素の属性をまとめたものです。"
    },
    {
      "indent": 3,
      "text": "+----------+--------------------------+-------------------------+\n|          | initiating to receiving  | receiving to initiating |\n+----------+--------------------------+-------------------------+\n| to       | JID of receiver          | JID of initiator        |\n| from     | JID of initiator         | JID of receiver         |\n| id       | ignored                  | stream identifier       |\n| xml:lang | default language         | default language        |\n| version  | XMPP 1.0+ supported      | XMPP 1.0+ supported     |\n+----------+--------------------------+-------------------------+",
      "raw": true
    },
    {
      "indent": 24,
      "text": "Figure 4: Stream Attributes",
      "ja": "図4：ストリーム属性"
    },
    {
      "indent": 0,
      "text": "4.8. XML Namespaces",
      "section_title": true,
      "ja": "4.8。 XML名前空間"
    },
    {
      "indent": 3,
      "text": "Readers are referred to the specification of XML namespaces [XML-NAMES] for a full understanding of the concepts used in this section, especially the concept of a \"default namespace\" as provided in Section 3 and Section 6.2 of that specification.",
      "ja": "第3節とその仕様のセクション6.2で提供される読者は、「デフォルトの名前空間」の概念は特に、このセクションで使用される概念を完全に理解するために[XML-NAMES] XML名前空間の仕様と呼ばれています。"
    },
    {
      "indent": 0,
      "text": "4.8.1. Stream Namespace",
      "section_title": true,
      "ja": "4.8.1。ストリームの名前空間"
    },
    {
      "indent": 3,
      "text": "The root <stream/> element (\"stream header\") MUST be qualified by the namespace 'http://etherx.jabber.org/streams' (the \"stream namespace\"). If this rule is violated, the entity that receives the offending stream header MUST close the stream with a stream error, which SHOULD be <invalid-namespace/> (Section 4.9.3.10), although some existing implementations send <bad-format/> (Section 4.9.3.1) instead.",
      "ja": "ルート<ストリーム/>要素（「ストリームヘッダが」）、名前空間「http://etherx.jabber.org/streams」（「ストリーム名前空間」）で修飾されなければなりません。この規則に違反した場合であるべきストリームエラーでストリームを閉じる必要があり、問題のストリーム・ヘッダを受信するエンティティ、<無効な名前空間/>（セクション4.9.3.10）、いくつかの既存の実装は、送信が<悪いフォーマット/> （セクション4.9.3.1）の代わりに。"
    },
    {
      "indent": 0,
      "text": "4.8.2. Content Namespace",
      "section_title": true,
      "ja": "4.8.2。コンテンツの名前空間"
    },
    {
      "indent": 3,
      "text": "An entity MAY declare a \"content namespace\" as the default namespace for data sent over the stream (i.e., data other than elements qualified by the stream namespace). If so, (1) the content namespace MUST be other than the stream namespace, and (2) the content namespace MUST be the same for the initial stream and the response stream so that both streams are qualified consistently. The content namespace applies to all first-level child elements sent over the stream unless explicitly qualified by another namespace (i.e., the content namespace is the default namespace).",
      "ja": "エンティティは、ストリーム（ストリーム名前空間で修飾された要素以外の、すなわち、データ）を介して送信されるデータのデフォルトの名前空間として「コンテンツの名前空間」を宣言することができます。もしそうであれば、（1）コンテンツの名前空間は、ストリームの名前空間以外でなければならない、そして（2）コンテンツの名前空間は、初期ストリームと応答ストリームの両方のストリームが一貫して認定されるように、同じでなければなりません。コンテンツの名前空間は、明示的に別の名前空間（すなわち、コンテンツの名前空間がデフォルトの名前空間である）で修飾しない限り、ストリームを介して送信される全ての第1レベルの子要素に適用されます。"
    },
    {
      "indent": 3,
      "text": "Alternatively (i.e., instead of declaring the content namespace as the default namespace), an entity MAY explicitly qualify the namespace for each first-level child element of the stream, using so-called \"prefix-free canonicalization\". These two styles are shown in the following examples.",
      "ja": "代わりに（すなわち、代わりにデフォルトの名前空間としてのコンテンツの名前空間を宣言する）、エンティティは、明示的に、いわゆる「接頭辞のない正規化」を使用して、ストリームの各最初のレベルの子要素の名前空間を修飾するかもしれません。これらの2つのスタイルは、以下の例に示されています。"
    },
    {
      "indent": 3,
      "text": "When a content namespace is declared as the default namespace, in rough outline a stream will look something like the following.",
      "ja": "コンテンツの名前空間がデフォルトの名前空間として宣言されている場合には、大まかなアウトラインにストリームには、次のようになります。"
    },
    {
      "indent": 3,
      "text": "<stream:stream from='juliet@im.example.com' to='im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'> <message> <body>foo</body> </message> </stream:stream>",
      "ja": "クライアント： 'のxmlns = 'ジャバーエン<ストリーム：im.example.com 'バージョン= '1.0' LANG = XML' '=' にストリームfrom='juliet@im.example.com' のxmlns：ストリーム=' のhttp： //etherx.jabber.org/streams'> <メッセージ> <身体>のfoo </ BODY> </メッセージ> </ストリーム：ストリーム>"
    },
    {
      "indent": 3,
      "text": "When a content namespace is not declared as the default namespace and so-called \"prefix-free canonicalization\" is used instead, in rough outline a stream will look something like the following.",
      "ja": "コンテンツの名前空間がデフォルトの名前空間として宣言されていないと、いわゆる「接頭辞のない正規化」が代わりに使用されている場合には、大まかなアウトラインにストリームには、次のようになります。"
    },
    {
      "indent": 3,
      "text": "<stream from='juliet@im.example.com' to='im.example.com' version='1.0' xml:lang='en' xmlns='http://etherx.jabber.org/streams'> <message xmlns='jabber:client'> <body>foo</body> </message> </stream>",
      "ja": "< 'のxmlns = 'HTTPエンim.example.com 'バージョン= '1.0' LANG =のxml'：「=' にストリームfrom='juliet@im.example.com //etherx.jabber.org/streams'> <メッセージのxmlns = 'おしゃべり：クライアント'> <身体>のfoo </ BODY> </メッセージ> </ストリーム>"
    },
    {
      "indent": 3,
      "text": "Traditionally, most XMPP implementations have used the content-namespace-as-default-namespace style rather than the prefix-free canonicalization style for stream headers; however, both styles are acceptable since they are semantically equivalent.",
      "ja": "伝統的に、ほとんどのXMPP実装はストリームヘッダーのコンテンツ-名前空間として、デフォルトの名前空間のスタイルではなく、接頭辞なしの正規化のスタイルを使用していました。彼らは意味的に等価であるため、しかし、両方のスタイルが許容されています。"
    },
    {
      "indent": 0,
      "text": "4.8.3. XMPP Content Namespaces",
      "section_title": true,
      "ja": "4.8.3。 XMPPコンテンツの名前空間"
    },
    {
      "indent": 3,
      "text": "XMPP as defined in this specification uses two content namespaces: 'jabber:client' and 'jabber:server'. These namespaces are nearly identical but are used in different contexts (client-to-server communication for 'jabber:client' and server-to-server communication for 'jabber:server'). The only difference between the two is that the 'to' and 'from' attributes are OPTIONAL on stanzas sent over XML streams qualified by the 'jabber:client' namespace, whereas they are REQUIRED on stanzas sent over XML streams qualified by the 'jabber: server' namespace. Support for these content namespaces implies support for the common attributes (Section 8.1) and basic semantics (Section 8.2) of all three core stanza types (message, presence, and IQ).",
      "ja": "「ジャバー：クライアント」と 'おしゃべり：サーバのこの仕様で定義されているXMPPは、2つのコンテンツの名前空間を使用しています。これらの名前空間は、（：「：サーバージャバー」の「クライアントのおしゃべり」とサーバー間の通信のためのクライアントからサーバーへの通信）はほぼ同じですが、異なるコンテキストで使用されています。両者の唯一の違いは、「から」と属性は「おしゃべり：クライアント」で修飾されたXMLストリームを介して送信されるスタンザにオプションである「から」彼ら「がジャバーで修飾XMLストリームを介して送信されスタンザで必要とされているのに対し、名前空間：サーバの名前空間。これらのコンテンツの名前空間のサポートは、共通の属性（8.1節）とすべての3つのコアスタンザの種類（メッセージ、プレゼンス、およびIQ）の基本的な意味論（セクション8.2）のサポートを意味します。"
    },
    {
      "indent": 3,
      "text": "An implementation MAY support content namespaces other than 'jabber: client' or 'jabber:server'. However, because such namespaces would define applications other than XMPP, they are to be defined in separate specifications.",
      "ja": "「：クライアントおしゃべり」または 'おしゃべり：サーバの実装は、以外のコンテンツの名前空間をサポートするかもしれません。そのような名前空間がXMPP以外のアプリケーションを定義しているためしかし、彼らは別の仕様で定義されるべきです。"
    },
    {
      "indent": 3,
      "text": "An implementation MAY refuse to support any other content namespaces as default namespaces. If an entity receives a first-level child element qualified by a content namespace it does not support, it MUST close the stream with an <invalid-namespace/> stream error (Section 4.9.3.10).",
      "ja": "実装では、デフォルトの名前空間など、他のコンテンツの名前空間をサポートするために拒否することができます。エンティティが、それはサポートしていないコンテンツの名前空間で修飾された最初のレベルの子要素を受信した場合、それは<無効な名前空間/>ストリームエラー（セクション4.9.3.10）でストリームを閉じる必要があります。"
    },
    {
      "indent": 3,
      "text": "Client implementations MUST support the 'jabber:client' content namespace as a default namespace. The 'jabber:server' content namespace is out of scope for an XMPP client, and a client MUST NOT send stanzas qualified by the 'jabber:server' namespace.",
      "ja": "デフォルトの名前空間としてのコンテンツの名前空間：クライアントの実装は、「クライアントジャバー」をサポートしなければなりません。 「おしゃべり：サーバのコンテンツの名前空間は、XMPPクライアントの範囲外であり、クライアントは「ジャバー：サーバー」で修飾スタンザ送ってはならない名前空間を。"
    },
    {
      "indent": 3,
      "text": "Server implementations MUST support as default content namespaces both the 'jabber:client' namespace (when the stream is used for communication between a client and a server) and the 'jabber:server' namespace (when the stream is used for communication between two servers). When communicating with a connected client, a server MUST NOT send stanzas qualified by the 'jabber:server' namespace; when communicating with a peer server, a server MUST NOT send stanzas qualified by the 'jabber:client' namespace.",
      "ja": "（ストリームがクライアントとサーバ間の通信に使用される）名前空間と 'おしゃべり：サーバのストリームは2つのサーバー間の通信に使用される名前空間（：サーバーの実装は、デフォルトのコンテンツの名前空間の両方のクライアントジャバー」としてサポートしなければなりません）。接続されたクライアントと通信する場合、サーバは「ジャバー：サーバー」で修飾スタンザ送ってはならない名前空間を。名前空間：ピア・サーバーと通信するとき、サーバは、「クライアントジャバー」によって修飾スタンザを送ってはいけません。"
    },
    {
      "indent": 6,
      "text": "Implementation Note: Because a client sends stanzas over a stream whose content namespace is 'jabber:client', if a server routes to a peer server a stanza it has received from a connected client then it needs to \"re-scope\" the stanza so that its content namespace is 'jabber:server'. Similarly, if a server delivers to a connected client a stanza it has received from a peer server then it needs to \"re-scope\" the stanza so that its content namespace is 'jabber:client'. This rule applies to XML stanzas as defined under Section 4.1 (i.e., a first-level <message/>, <presence/>, or <iq/> element qualified by the 'jabber:client' or 'jabber:server' namespace), and by namespace inheritance to all child elements of a stanza. However, the rule does not apply to elements qualified by namespaces other than 'jabber:client' and 'jabber:server' nor to any children of such elements (e.g., a <message/> element contained within an extension element (Section 8.4) for reporting purposes). Although it is not forbidden for an entity to generate stanzas in which an extension element contains a child element qualified by the 'jabber:client' or 'jabber:server' namespace, existing implementations handle such stanzas inconsistently; therefore, implementers are advised to weigh the likely lack of interoperability against the possible utility of such stanzas. Finally, servers are advised to apply stanza re-scoping to other stream connection methods and alternative XMPP connection methods, such as those specified in [XEP-0124], [XEP-0206], [XEP-0114], and [XEP-0225].",
      "ja": "実装上の注意：これは、接続されたクライアントから受け取ったスタンザが、それはそう、「再スコープ」にスタンザを必要とするピア・サーバーへのサーバーのルート場合、 'クライアントジャバーのクライアントは、そのコンテンツの名前空間であるストリーム上でスタンザを送信するので「：サーバーおしゃべり」は、そのコンテンツの名前空間であること。サーバが接続されたクライアントには、ピア・サーバーから受信したスタンザを提供している場合、そのコンテンツの名前空間は、「：クライアントおしゃべり」になるように、同様に、それは「再スコープ」にスタンザを必要とします。セクション4.1の下で定義されるようにこのルールはXMLスタンザに適用される（すなわち、最初のレベルの<メッセージ/>、<存在/>、または<IQ />で修飾要素「おしゃべり：クライアント」または 'おしゃべり：サーバの名前空間） 、とスタンザのすべての子要素に名前空間の継承によります。しかし、ルールは以外の名前空間で修飾された要素には適用されません。「おしゃべり：クライアント」と 'おしゃべり：サーバのも、そのような要素のすべての子に拡張要素内に含まれる（例えば、<メッセージ/>要素（8.4節）報告目的のために）。 「：クライアントおしゃべり」または 'おしゃべり：サーバのそれは、拡張要素がで修飾子要素が含まれているスタンザ生成するエンティティのために禁止されていないが、名前空間を、既存の実装には一貫性がない、このようなスタンザを扱います。そのため、実装者は、このようなスタンザが有用である可能性に対する相互運用性のありそうな欠如を量ることをお勧めします。最後に、サーバは、[XEP-0124]、[XEP-0206]、[XEP-0114]、および[XEP-0225で指定されたもののような他のストリームの接続方法及び代替XMPP接続方法にスタンザ再スコープを適用することをお勧めします]。"
    },
    {
      "indent": 0,
      "text": "4.8.4. Other Namespaces",
      "section_title": true,
      "ja": "4.8.4。他の名前空間"
    },
    {
      "indent": 3,
      "text": "Either party to a stream MAY send data qualified by namespaces other than the content namespace and the stream namespace. For example, this is how data related to TLS negotiation and SASL negotiation are exchanged, as well as XMPP extensions such as Stream Management [XEP-0198] and Server Dialback [XEP-0220].",
      "ja": "ストリームへのいずれの当事者は、コンテンツの名前空間とストリームの名前空間以外の名前空間で修飾されたデータを送信することができます。例えば、これは、TLSネゴシエーションとSASL交渉に関連したデータは、ストリーム管理[XEP-0198]およびサーバーダイアルバック[XEP-0220]としてXMPPの拡張だけでなく、交換されている方法です。"
    },
    {
      "indent": 6,
      "text": "Interoperability Note: For historical reasons, some server implementations expect a declaration of the 'jabber:server: dialback' namespace on server-to-server streams, as explained in [XEP-0220].",
      "ja": "[XEP-0220]で説明したように、サーバー間のストリーム上の名前空間の相互運用性注意：歴史的な理由により、いくつかのサーバの実装は、「ダイヤルバック：サーバジャバー」の宣言を期待します。"
    },
    {
      "indent": 3,
      "text": "However, an XMPP server MUST NOT route or deliver data received over an input stream if that data is (a) qualified by another namespace and (b) addressed to an entity other than the server, unless the other party to the output stream over which the server would send the data has explicitly negotiated or advertised support for receiving arbitrary data from the server. This rule is included because XMPP is designed for the exchange of XML stanzas (not arbitrary XML data), and because allowing an entity to send arbitrary data to other entities could significantly increase the potential for exchanging malicious information. As an example of this rule, the server hosting the example.net domain would not route the following first-level XML element from <romeo@example.net> to <juliet@example.com>:",
      "ja": "しかしながら、データが（a）は、別の名前空間で修飾されている場合、XMPPサーバは経路ではない必要がある、またはデータを配信する入力ストリームを介して受信し、（b）は、上の出力ストリームに相手しない限り、サーバ以外のエンティティ宛てデータを送信し、サーバは、明示的に交渉したり、サーバーから任意のデータを受信するためのサポートを宣伝しています。 XMPPは、XMLスタンザ（ない任意のXMLデータ）の交換のために設計されているため、およびエンティティが他のエンティティに任意のデータを送信することを可能にすることは著しく悪質な情報を交換するための可能性を増大させる可能性があるため、このルールが含まれています。このルールの例として、example.netドメインをホストしているサーバーは、<juliet@example.com>へのルート<romeo@example.net>から以下の最初のレベルのXML要素はないだろう。"
    },
    {
      "indent": 5,
      "text": "<ns1:foo xmlns:ns1='http://example.org/ns1' from='romeo@example.net/resource1' to='juliet@example.com'> <ns1:bar/> </ns1:foo>",
      "ja": "<NS1：fooというのxmlns：NS1 = 'のhttp：//example.org/ns1' from='romeo@example.net/resource1' to='juliet@example.com '> <NS1：バー/> </ NS1： FOO>"
    },
    {
      "indent": 3,
      "text": "This rule also applies to first-level elements that look like stanzas but that are improperly namespaced and therefore really are not stanzas at all (see also Section 4.8.5), for example:",
      "ja": "このルールは、スタンザのように見える最初のレベル要素に適用されるが、それは不適切な名前空間されているので、本当にすべてのスタンザには、例えば、（も参照のセクション4.8.5）ではありません。"
    },
    {
      "indent": 5,
      "text": "<ns2:message xmlns:ns2='http://example.org/ns2' from='romeo@example.net/resource1' to='juliet@example.com'> <body>hi</body> </ns2:message>",
      "ja": "<NS2：メッセージのxmlns：NS2 = 'のhttp：//example.org/ns2' from='romeo@example.net/resource1' to='juliet@example.com '> <身体>こんにちは</ BODY> </ NS2：メッセージ>"
    },
    {
      "indent": 3,
      "text": "Upon receiving arbitrary first-level XML elements over an input stream, a server MUST either ignore the data or close the stream with a stream error, which SHOULD be <unsupported-stanza-type/> (Section 4.9.3.24).",
      "ja": "<サポートされていない-スタンザ型/>（セクション4.9.3.24）すべき、入力ストリーム上の任意の第一のレベルのXML要素を受信すると、サーバは、データを無視しなければならないのいずれかまたはストリームエラーでストリームを閉じます。"
    },
    {
      "indent": 0,
      "text": "4.8.5. Namespace Declarations and Prefixes",
      "section_title": true,
      "ja": "4.8.5。名前空間宣言と接頭辞"
    },
    {
      "indent": 3,
      "text": "Because the content namespace is other than the stream namespace, if a content namespace is declared as the default namespace then the following statements are true:",
      "ja": "コンテンツの名前空間がデフォルトの名前空間として宣言されている場合、コンテンツの名前空間は、ストリームの名前空間以外であるので、次の文は真であります："
    },
    {
      "indent": 3,
      "text": "1. The stream header needs to contain a namespace declaration for both the content namespace and the stream namespace.",
      "ja": "1.ストリームヘッダは、コンテンツの名前空間と名前空間ストリームの両方の名前空間宣言を含む必要があります。"
    },
    {
      "indent": 3,
      "text": "2. The stream namespace declaration needs to include a namespace prefix for the stream namespace.",
      "ja": "2.ストリームの名前空間宣言は、ストリームの名前空間の名前空間接頭辞を含める必要があります。"
    },
    {
      "indent": 6,
      "text": "Interoperability Note: For historical reasons, an implementation MAY accept only the prefix 'stream' for the stream namespace (resulting in prefixed names such as <stream:stream> and <stream: features>); this specification retains that allowance from [RFC3920] for the purpose of backward compatibility. Implementations are advised that using a prefix other than 'stream' for the stream namespace might result in interoperability problems. If an entity receives a stream header with a stream namespace prefix it does not accept, it MUST close the stream with a stream error, which SHOULD be <bad-namespace-prefix/> (Section 4.9.3.2), although some existing implementations send <bad-format/> (Section 4.9.3.1) instead.",
      "ja": "相互運用注：歴史的な理由のため、実装が（<：ストリーミングストリーム>と<ストリーム：機能>などの接頭辞名を生じる）ストリーム名前空間の接頭辞のみ「ストリーム」を受け入れるかもしれ。この仕様は、下位互換性のために[RFC3920]からその余裕を保持します。実装は、ストリームの名前空間のための「ストリーム」以外のプレフィックスを使用すると、相互運用性の問題が発生する可能性があることをお勧めします。エンティティは、ストリームの名前空間接頭辞ストリームヘッダを受信した場合、それは受け入れていないいくつかの既存の実装が送るが、それは、<不良名前空間接頭辞/>（セクション4.9.3.2）であるべきであるストリームのエラーでストリームを閉じる必要があります<悪いフォーマット/>（セクション4.9.3.1）の代わり。"
    },
    {
      "indent": 3,
      "text": "An implementation MUST NOT generate namespace prefixes for elements qualified by the content namespace (i.e., the default namespace for data sent over the stream) if the content namespace is 'jabber: client' or 'jabber:server'. For example, the following is illegal:",
      "ja": "実装は、コンテンツの名前空間で修飾要素の名前空間接頭辞を生成してはならない（すなわち、ストリームを介して送信されるデータのデフォルトの名前空間）コンテンツの名前空間が「おしゃべり：クライアント」または 'おしゃべり：サーバの。例えば、以下は違法です。"
    },
    {
      "indent": 3,
      "text": "<stream:stream from='juliet@im.example.com' to='im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "クライアント： 'のxmlns = 'ジャバーエン<ストリーム：im.example.com 'バージョン= '1.0' LANG = XML' '=' にストリームfrom='juliet@im.example.com' のxmlns：ストリーム=' のhttp： //etherx.jabber.org/streams'>"
    },
    {
      "indent": 5,
      "text": "<foo:message xmlns:foo='jabber:client'> <foo:body>foo</foo:body> </foo:message>",
      "ja": "<FOO：メッセージのxmlns：FOO = 'おしゃべり：クライアント'> <FOO：ボディ> FOO </ FOO：ボディ> <：/ fooのメッセージ>"
    },
    {
      "indent": 3,
      "text": "An XMPP entity SHOULD NOT accept data that violates this rule (in particular, an XMPP server MUST NOT route or deliver such data to another entity without first correcting the error); instead it SHOULD either ignore the data or close the stream with a stream error, which SHOULD be <bad-namespace-prefix/> (Section 4.9.3.2).",
      "ja": "XMPPエンティティ（特に、XMPPサーバはルートNOTないと、最初のエラーを補正することなく、別のエンティティにそのようなデータを配信）この規則に違反するデータを受け入れるべきではありません。代わりに、データを無視するか、<悪い名前空間接頭辞/>（セクション4.9.3.2）であるべき、ストリームエラーでストリームを閉じる必要がありますどちらか。"
    },
    {
      "indent": 3,
      "text": "Namespaces declared in a stream header MUST apply only to that stream (e.g., the 'jabber:server:dialback' namespace used in Server Dialback [XEP-0220]). In particular, because XML stanzas intended for routing or delivery over streams with other entities will lose the namespace context declared in the header of the stream in which those stanzas originated, namespaces for extended content within such stanzas MUST NOT be declared in that stream header (see also Section 8.4). If either party to a stream declares such namespaces, the other party to the stream SHOULD close the stream with an <invalid-namespace/> stream error (Section 4.9.3.10). In any case, an entity MUST ensure that such namespaces are properly declared (according to this section) when routing or delivering stanzas from an input stream to an output stream.",
      "ja": "（サーバダイアルバック[XEP-0220】で使用される名前空間、例えば、「：サーバーダイヤルバックジャバー」）ストリームヘッダで宣言された名前空間は、そのストリームに適用しなければなりません。具体的には、他のエンティティとのストリーム上ルーティングまたは配信のために意図されたXMLスタンザがそれらスタンザが発信されたストリームのヘッダで宣言された名前空間コンテキストを失うことになるので、そのようなスタンザ内の拡張コンテンツの名前空間（すなわち、ストリーム・ヘッダ内で宣言してはいけません）8.4節も参照してください。ストリームへのいずれかの当事者がそのような名前空間を宣言している場合、ストリームに他の当事者は、<無効な名前空間/>ストリームエラー（セクション4.9.3.10）でストリームを閉じる必要があります。いずれの場合においても、企業は、そのような名前空間が正しくルーティングまたは出力ストリームに入力ストリームからスタンザを配信する場合（このセクションに記載）に宣言されていることを確認しなければなりません。"
    },
    {
      "indent": 0,
      "text": "4.9. Stream Errors",
      "section_title": true,
      "ja": "4.9。ストリームのエラー"
    },
    {
      "indent": 3,
      "text": "The root stream element MAY contain an <error/> child element that is qualified by the stream namespace. The error child SHALL be sent by a compliant entity if it perceives that a stream-level error has occurred.",
      "ja": "ルートストリーム要素は、ストリームの名前空間で修飾された<エラー/>子要素を含むかもしれません。それは、ストリームレベルのエラーが発生したことを認識する場合は、エラーの子は、対応するエンティティによって送付されなければなりません。"
    },
    {
      "indent": 0,
      "text": "4.9.1. Rules",
      "section_title": true,
      "ja": "4.9.1。ルール"
    },
    {
      "indent": 3,
      "text": "The following rules apply to stream-level errors.",
      "ja": "次の規則は、ストリーム・レベルのエラーに適用されます。"
    },
    {
      "indent": 0,
      "text": "4.9.1.1. Stream Errors Are Unrecoverable",
      "section_title": true,
      "ja": "4.9.1.1。ストリームのエラーは回復不能です"
    },
    {
      "indent": 3,
      "text": "Stream-level errors are unrecoverable. Therefore, if an error occurs at the level of the stream, the entity that detects the error MUST send an <error/> element with an appropriate child element specifying the error condition and then immediately close the stream as described under Section 4.4.",
      "ja": "ストリームレベルのエラーは回復不能です。誤差ストリームのレベルで発生した場合そのため、エラーを検出したエンティティは、エラー条件を指定する適切な子要素と<誤り/>要素を送らなければなりません、セクション4.4で説明したように直ちにストリームを閉じます。"
    },
    {
      "indent": 3,
      "text": "C: <message><body>No closing tag!</message>",
      "ja": "C：<メッセージ> <body>のない終了タグ</メッセージ>！"
    },
    {
      "indent": 3,
      "text": "S: <stream:error> <not-well-formed xmlns='urn:ietf:params:xml:ns:xmpp-streams'/> </stream:error> </stream:stream>",
      "ja": "S：<ストリーム：エラー> <未整形のxmlns = 'URN：IETF：paramsは：XML：NS：XMPPストリーム' /> </ストリームは：エラー> </ストリーム：ストリーム>"
    },
    {
      "indent": 3,
      "text": "The entity that receives the stream error then SHALL close the stream as explained under Section 4.4.",
      "ja": "4.4節の下で説明したように、ストリームエラーを受信エンティティは、ストリームを閉じSHALL。"
    },
    {
      "indent": 3,
      "text": "C: </stream:stream>",
      "ja": "C：</ストリーム：ストリーム>"
    },
    {
      "indent": 0,
      "text": "4.9.1.2. Stream Errors Can Occur During Setup",
      "section_title": true,
      "ja": "4.9.1.2。ストリームのエラーは、セットアップ中に発生する可能性"
    },
    {
      "indent": 3,
      "text": "If the error is triggered by the initial stream header, the receiving entity MUST still send the opening <stream> tag, include the <error/> element as a child of the stream element, and send the closing </stream> tag (preferably in the same TCP packet).",
      "ja": "エラーが初期ストリームヘッダによってトリガされた場合、受信エンティティは、さらに好ましくは（開口を送信<ストリーム>タグ、ストリーム要素の子として<誤り/>要素を含み、閉鎖</ストリーム>タグを送らなければなりません同じTCPパケットで）。"
    },
    {
      "indent": 3,
      "text": "C: <?xml version='1.0'?> <stream:stream from='juliet@im.example.com' to='im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://wrong.namespace.example.org/'>",
      "ja": "C：<？xmlのバージョン= '1.0'？> <ストリーム：im.example.com 'バージョン= '1.0' のxml：LANG = '「=' にストリームfrom='juliet@im.example.comのxmlns' EN = 「おしゃべり：クライアントののxmlns：ストリーム= 'のhttp：//wrong.namespace.example.org/'>"
    },
    {
      "indent": 3,
      "text": "S: <?xml version='1.0'?> <stream:stream from='im.example.com' id='++TR84Sm6A3hnt3Q065SnAbbk3Y=' to='juliet@im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'> <stream:error> <invalid-namespace xmlns='urn:ietf:params:xml:ns:xmpp-streams'/> </stream:error> </stream:stream>",
      "ja": "S：<？xmlのバージョン= '1.0'？> <ストリーム：= 'im.example.com' IDからのストリーム= '++ TR84Sm6A3hnt3Q065SnAbbk3Y =' to='juliet@im.example.com」バージョン= '1.0' のXML ：LANG =のxmlns = 'おしゃべり：クライアント' 'en' とのxmlns：ストリーム= 'のhttp：//etherx.jabber.org/streams'> <ストリーム：エラー> <無効名前空間のxmlns = \"壷：IETF：のparams：XML ：NS：XMPPストリーム/> </ストリーム：エラー> </ストリーム：ストリーム>"
    },
    {
      "indent": 0,
      "text": "4.9.1.3. Stream Errors When the Host Is Unspecified or Unknown",
      "section_title": true,
      "ja": "4.9.1.3。ホストが指定されていないか、不明な場合にエラーをストリーミング"
    },
    {
      "indent": 3,
      "text": "If the initiating entity provides no 'to' attribute or provides an unknown host in the 'to' attribute and the error occurs during stream setup, the value of the 'from' attribute returned by the receiving entity in the stream header sent before closing the stream MUST be either an authoritative FQDN for the receiving entity or the empty string.",
      "ja": "開始実体は、属性「に」はを提供していないか、属性とエラーがストリームのセットアップ時に発生する「に」、属性「からの」の値が閉じる前に送信されたストリームのヘッダに受信エンティティによって返された未知のホストを提供している場合ストリームは、受信エンティティに対して権限のFQDNまたは空の文字列のいずれかでなければなりません。"
    },
    {
      "indent": 3,
      "text": "C: <?xml version='1.0'?> <stream:stream from='juliet@im.example.com' to='unknown.host.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "C：<？xmlのバージョン= '1.0'？> <ストリーム：unknown.host.example.com「=に 'ストリームfrom='juliet@im.example.com' バージョン= '1.0' のxml：LANG = 'en' とxmlns = 'おしゃべり：クライアントののxmlns：ストリーム= 'のhttp：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "S: <?xml version='1.0'?> <stream:stream from='im.example.com' id='++TR84Sm6A3hnt3Q065SnAbbk3Y=' to='juliet@im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'> <stream:error> <host-unknown xmlns='urn:ietf:params:xml:ns:xmpp-streams'/> </stream:error> </stream:stream>",
      "ja": "S：<？xmlのバージョン= '1.0'？> <ストリーム：= 'im.example.com' IDからのストリーム= '++ TR84Sm6A3hnt3Q065SnAbbk3Y =' to='juliet@im.example.com」バージョン= '1.0' のXML ：LANG =のxmlns = 'おしゃべり：クライアント' 'en' とのxmlns：ストリーム= 'のhttp：//etherx.jabber.org/streams'> <ストリーム：エラー> <ホスト不明のxmlns = \"壷：IETF：のparams：XML ：NS：XMPPストリーム/> </ストリーム：エラー> </ストリーム：ストリーム>"
    },
    {
      "indent": 0,
      "text": "4.9.1.4. Where Stream Errors Are Sent",
      "section_title": true,
      "ja": "4.9.1.4。ストリームのエラーが送信されますどこ"
    },
    {
      "indent": 3,
      "text": "When two TCP connections are used between the initiating entity and the receiving entity (one in each direction) rather than using a single bidirectional connection, the following rules apply:",
      "ja": "2つのTCP接続がなく、単一の双方向接続を使用するより開始エンティティと受信エンティティ（各方向に1つずつ）との間で使用される場合、以下の規則が適用されます。"
    },
    {
      "indent": 3,
      "text": "o Stream-level errors related to the initial stream are returned by the receiving entity on the response stream via the same TCP connection.",
      "ja": "O初期ストリームに関連するストリーム・レベルのエラーは、同じTCP接続を介して応答ストリームに受信エンティティによって返されます。"
    },
    {
      "indent": 3,
      "text": "o Stanza errors triggered by outbound stanzas sent from the initiating entity over the initial stream via the same TCP connection are returned by the receiving entity on the response stream via the other (\"return\") TCP connection, since they are inbound stanzas from the perspective of the initiating entity.",
      "ja": "彼らは視点からのインバウンドスタンザがあるので、同じTCP接続を介して最初のストリーム上で開始エンティティから送信されたアウトバウンドスタンザによってトリガOスタンザ・エラーは、他の（「リターン」）TCP接続を介して応答ストリームの受信エンティティによって返されます開始実体の。"
    },
    {
      "indent": 0,
      "text": "4.9.2. Syntax",
      "section_title": true,
      "ja": "4.9.2。構文"
    },
    {
      "indent": 3,
      "text": "The syntax for stream errors is as follows, where XML data shown within the square brackets '[' and ']' is OPTIONAL.",
      "ja": "ストリームエラーの構文は、XMLデータが「[」と「]」OPTIONALである角括弧内に示される場合、以下の通りです。"
    },
    {
      "indent": 3,
      "text": "<stream:error> <defined-condition xmlns='urn:ietf:params:xml:ns:xmpp-streams'/> [<text xmlns='urn:ietf:params:xml:ns:xmpp-streams' xml:lang='langcode'> OPTIONAL descriptive text </text>] [OPTIONAL application-specific condition element] </stream:error>",
      "ja": "<ストリーム：エラー> <定義された条件のxmlns = 'URN：IETF：paramsは：XML：NS：XMPPストリーム' /> <テキストのxmlns = 'URN：IETF：paramsは：XML：NS：XMPPストリーム' XML： LANG = 'langcode'> OPTIONAL説明文</テキスト>] [オプションのアプリケーション固有の条件要素</ストリーム：エラー>"
    },
    {
      "indent": 3,
      "text": "The \"defined-condition\" MUST correspond to one of the stream error conditions defined under Section 4.9.3. However, because additional error conditions might be defined in the future, if an entity receives a stream error condition that it does not understand then it MUST treat the unknown condition as equivalent to <undefined-condition/> (Section 4.9.3.21). If the designers of an XMPP protocol extension or the developers of an XMPP implementation need to communicate a stream error condition that is not defined in this specification, they can do so by defining an application-specific error condition element qualified by an application-specific namespace.",
      "ja": "「定義された条件」セクション4.9.3の下で定義されたストリームのエラー状態の1つに対応しなければなりません。しかし、実体はそれはそれは、<未定義条件/>（セクション4.9.3.21）と同等に、未知の状態を扱わなければなりません理解していないことをストリームエラー状態を受信した場合、追加のエラー条件は、将来的に定義される可能性がありますので。 XMPPプロトコル拡張の設計者またはXMPP実装の開発者は、この仕様で定義されていないストリームのエラー状態を通信する必要がある場合は、アプリケーション固有の名前空間で修飾アプリケーション固有のエラー条件の要素を定義することによって行うことができます。"
    },
    {
      "indent": 3,
      "text": "The <error/> element:",
      "ja": "<エラー/>要素："
    },
    {
      "indent": 3,
      "text": "o MUST contain a child element corresponding to one of the defined stream error conditions (Section 4.9.3); this element MUST be qualified by the 'urn:ietf:params:xml:ns:xmpp-streams' namespace.",
      "ja": "Oは、定義されたストリームのエラー条件（セクション4.9.3）の1つに対応する子要素を含まなければなりません。名前空間この要素は「：IETF：のparams：XML：：NS XMPPストリーム壷」によって修飾する必要があります。"
    },
    {
      "indent": 3,
      "text": "o MAY contain a <text/> child element containing XML character data that describes the error in more detail; this element MUST be qualified by the 'urn:ietf:params:xml:ns:xmpp-streams' namespace and SHOULD possess an 'xml:lang' attribute specifying the natural language of the XML character data.",
      "ja": "Oより詳細にエラーを記述するXML文字データを含む<テキスト/>子要素を含む可能性があります。名前空間と「XML：LANG」持っていなければならないXML文字データの自然言語を指定する属性を、この要素は、「：IETF：のparams：XML：：NS XMPPストリーム壷」によって修飾する必要があります。"
    },
    {
      "indent": 3,
      "text": "o MAY contain a child element for an application-specific error condition; this element MUST be qualified by an application-defined namespace, and its structure is defined by that namespace (see Section 4.9.4).",
      "ja": "Oアプリケーション固有のエラー条件のために子要素を含む可能性があります。この要素は、アプリケーションで定義された名前空間によって修飾されている必要があり、その構造は（セクション4.9.4を参照）、その名前空間によって定義されます。"
    },
    {
      "indent": 3,
      "text": "The <text/> element is OPTIONAL. If included, it MUST be used only to provide descriptive or diagnostic information that supplements the meaning of a defined condition or application-specific condition. It MUST NOT be interpreted programmatically by an application. It MUST NOT be used as the error message presented to a human user, but MAY be shown in addition to the error message associated with the defined condition element (and, optionally, the application-specific condition element).",
      "ja": "<テキスト/>要素はオプションです。含まれている場合、定義された条件や、アプリケーション固有の条件の意味を補足する記述や診断情報を提供するためにのみ使用しなければなりません。これは、アプリケーションによってプログラム的に解釈してはなりません。これは、人間のユーザに提示エラーメッセージとして使用してはいけませんが、定義された条件要素（及び、必要に応じて、アプリケーション固有の条件要素）に関連付けられたエラーメッセージに加えてで示すことができます。"
    },
    {
      "indent": 0,
      "text": "4.9.3. Defined Stream Error Conditions",
      "section_title": true,
      "ja": "4.9.3。定義ストリームのエラー状態"
    },
    {
      "indent": 3,
      "text": "The following stream-level error conditions are defined.",
      "ja": "次のストリームレベルのエラー条件が定義されています。"
    },
    {
      "indent": 0,
      "text": "4.9.3.1. bad-format",
      "section_title": true,
      "ja": "4.9.3.1。悪いフォーマット"
    },
    {
      "indent": 3,
      "text": "The entity has sent XML that cannot be processed.",
      "ja": "エンティティが処理できないXMLを送信しました。"
    },
    {
      "indent": 3,
      "text": "(In the following example, the client sends an XMPP message that is not well-formed XML, which alternatively might trigger a <not-well-formed/> stream error (Section 4.9.3.13).)",
      "ja": "（以下の例では、クライアントは、代わりに<ウェルに形成されていない/>ストリームエラー（セクション4.9.3.13）をトリガする可能性があるXMLを、十分に形成されていないXMPPメッセージを送信します。）"
    },
    {
      "indent": 3,
      "text": "C: <message> <body>No closing tag! </message>",
      "ja": "C：<メッセージ> <body>のない終了タグ！ </メッセージ>"
    },
    {
      "indent": 3,
      "text": "S: <stream:error> <bad-format xmlns='urn:ietf:params:xml:ns:xmpp-streams'/> </stream:error> </stream:stream>",
      "ja": "S：<ストリーム：エラー> <悪い形式のxmlns = 'URN：IETF：paramsは：XML：NS：XMPPストリーム' /> </ストリーム：エラー> </ストリーム：ストリーム>"
    },
    {
      "indent": 3,
      "text": "This error can be used instead of the more specific XML-related errors, such as <bad-namespace-prefix/>, <invalid-xml/>, <not-well-formed/>, <restricted-xml/>, and <unsupported-encoding/>. However, the more specific errors are RECOMMENDED.",
      "ja": "このエラーは、代わりに、このような<悪い名前空間接頭辞/>、<無効-XML />、<ない-整形/>、<制限-XML />など、より具体的なXML関連のエラー、を用いることができ、 <サポートされていないエンコード/>。しかし、より具体的なエラーが推奨されています。"
    },
    {
      "indent": 0,
      "text": "4.9.3.2. bad-namespace-prefix",
      "section_title": true,
      "ja": "4.9.3.2。悪い名前空間接頭辞"
    },
    {
      "indent": 3,
      "text": "The entity has sent a namespace prefix that is unsupported, or has sent no namespace prefix on an element that needs such a prefix (see Section 11.2).",
      "ja": "エンティティはサポートされていない、または、そのような接頭辞を（11.2節を参照）を必要とする要素の名前空間接頭辞を送信していない名前空間接頭辞を送りました。"
    },
    {
      "indent": 3,
      "text": "(In the following example, the client specifies a namespace prefix of \"foobar\" for the XML stream namespace.)",
      "ja": "（以下の例では、クライアントは、XMLストリームの名前空間の「foobarに」の名前空間接頭辞を指定します。）"
    },
    {
      "indent": 3,
      "text": "C: <?xml version='1.0'?> <foobar:stream from='juliet@im.example.com' to='im.example.com' version='1.0' xmlns='jabber:client' xmlns:foobar='http://etherx.jabber.org/streams'>",
      "ja": "C：<？xmlのバージョン= '1.0'？> <foobarに：im.example.com「= 'にfrom='juliet@im.example.comストリーム' バージョン= '1.0' のxmlns = 'おしゃべり：クライアントののxmlns： foob​​arに= 'のhttp：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "S: <?xml version='1.0'?> <stream:stream from='im.example.com' id='++TR84Sm6A3hnt3Q065SnAbbk3Y=' to='juliet@im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'> <stream:error> <bad-namespace-prefix xmlns='urn:ietf:params:xml:ns:xmpp-streams'/> </stream:error> </stream:stream>",
      "ja": "S：<？xmlのバージョン= '1.0'？> <ストリーム：= 'im.example.com' IDからのストリーム= '++ TR84Sm6A3hnt3Q065SnAbbk3Y =' to='juliet@im.example.com」バージョン= '1.0' のXML ：LANG =のxmlns = 'おしゃべり：クライアント' 'en' とのxmlns：ストリーム= 'のhttp：//etherx.jabber.org/streams'> <ストリーム：エラー> <悪い名前空間接頭辞のxmlns = \"壷：IETF：のparams ：XML：NS：XMPPストリーム/> </ストリーム：エラー> </ストリーム：ストリーム>"
    },
    {
      "indent": 0,
      "text": "4.9.3.3. conflict",
      "section_title": true,
      "ja": "4.9.3.3。コンフリクト"
    },
    {
      "indent": 3,
      "text": "The server either (1) is closing the existing stream for this entity because a new stream has been initiated that conflicts with the existing stream, or (2) is refusing a new stream for this entity because allowing the new stream would conflict with an existing stream (e.g., because the server allows only a certain number of connections from the same IP address or allows only one server-to-server stream for a given domain pair as a way of helping to ensure in-order processing as described under Section 10.1).",
      "ja": "新しいストリームを許可すると、既存のと競合するため、新しいストリームが既存のストリームと競合、または（2）このエンティティのための新しいストリームを拒否していることが開始されたため、サーバーは、（1）このエンティティのための既存のストリームをクローズされますか、ストリーム（例えば、サーバは、同じIPアドレスからの接続のみを一定数を許可または可能にするため、セクション10.1で説明したように次の処理を確実にするために支援する方法として、所与のドメインペアの一方のみサーバー間のストリーム）。"
    },
    {
      "indent": 3,
      "text": "C: <?xml version='1.0'?> <stream:stream from='juliet@im.example.com' to='im.example.com' version='1.0' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "C：<？xmlのバージョン= '1.0'？> <ストリーム：im.example.com「=に 'ストリームfrom='juliet@im.example.com' バージョン= '1.0' のxmlns = 'おしゃべり：クライアントののxmlnsを：ストリーム= 'のhttp：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "S: <?xml version='1.0'?> <stream:stream from='im.example.com' id='++TR84Sm6A3hnt3Q065SnAbbk3Y=' to='juliet@im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'> <stream:error> <conflict xmlns='urn:ietf:params:xml:ns:xmpp-streams'/> </stream:error> </stream:stream>",
      "ja": "S：<？xmlのバージョン= '1.0'？> <ストリーム：= 'im.example.com' IDからのストリーム= '++ TR84Sm6A3hnt3Q065SnAbbk3Y =' to='juliet@im.example.com」バージョン= '1.0' のXML ：LANG =のxmlns = 'おしゃべり：クライアント' 'en' とのxmlns：ストリーム= 'のhttp：//etherx.jabber.org/streams'> <ストリーム：エラー> <紛争のxmlns = \"壷：IETF：のparams：XML：NS ：XMPPストリーム/> </ストリーム：エラー> </ストリーム：ストリーム>"
    },
    {
      "indent": 3,
      "text": "If a client receives a <conflict/> stream error (Section 4.9.3.3), during the resource binding aspect of its reconnection attempt it MUST NOT blindly request the resourcepart it used during the former session but instead MUST choose a different resourcepart; details are provided under Section 7.",
      "ja": "クライアントは、<紛争/>ストリームエラー（セクション4.9.3.3）を受信し、その再接続試行のリソース結合面の間にそれは盲目的にそれはかつてのセッション中に使用されるが、代わりに別のresourcepartを選択する必要がありresourcepartを要求してはならない場合は、詳細は、第7の下で提供されています。"
    },
    {
      "indent": 0,
      "text": "4.9.3.4. connection-timeout",
      "section_title": true,
      "ja": "4.9.3.4。接続タイムアウト"
    },
    {
      "indent": 3,
      "text": "One party is closing the stream because it has reason to believe that the other party has permanently lost the ability to communicate over the stream. The lack of ability to communicate can be discovered using various methods, such as whitespace keepalives as specified under Section 4.4, XMPP-level pings as defined in [XEP-0199], and XMPP Stream Management as defined in [XEP-0198].",
      "ja": "それは相手が永続的にストリームを介して通信する能力を失っていることを信じる理由を持っているので、一方の当事者は、ストリームを閉じています。セクション4.4で指定されたような空白キープアライブなどの様々な方法を用いて発見することができる通信する能力の欠如、[XEP-0198]で定義されるように[XEP-0199]で定義されるようXMPPレベルピング、およびXMPPストリーム管理。"
    },
    {
      "indent": 3,
      "text": "P: <stream:error> <connection-timeout xmlns='urn:ietf:params:xml:ns:xmpp-streams'/> </stream:error> </stream:stream>",
      "ja": "P：<ストリーム：エラー> <接続タイムアウトのxmlns = 'URN：IETF：paramsは：XML：NS：XMPPストリーム' /> </ストリーム：エラー> </ストリーム：ストリーム>"
    },
    {
      "indent": 6,
      "text": "Interoperability Note: RFC 3920 specified that the <connection-timeout/> stream error (Section 4.9.3.4) is to be used if the peer has not generated any traffic over the stream for some period of time. That behavior is no longer recommended; instead, the error SHOULD be used only if the connected client or peer server has not responded to data sent over the stream.",
      "ja": "相互運用注：RFC 3920 <接続タイムアウト/>ストリームエラー（セクション4.9.3.4）は、ピアがある期間にわたってストリームトラフィックを生成していない場合に使用されることを指定しました。その行動はもはや推奨されません。代わりに、エラーが接続されたクライアントまたはピアサーバーはストリーム経由で送信されるデータに応答しなかった場合にのみ使用されるべきです。"
    },
    {
      "indent": 0,
      "text": "4.9.3.5. host-gone",
      "section_title": true,
      "ja": "4.9.3.5。ホスト・ゴーン"
    },
    {
      "indent": 3,
      "text": "The value of the 'to' attribute provided in the initial stream header corresponds to an FQDN that is no longer serviced by the receiving entity.",
      "ja": "初期ストリームヘッダに設けられた「」の属性の値は、もはや受信エンティティによってサービスされるFQDNに対応します。"
    },
    {
      "indent": 3,
      "text": "(In the following example, the peer specifies a 'to' address of \"foo.im.example.com\" when connecting to the \"im.example.com\" server, but the server no longer hosts a service at that address.)",
      "ja": "（「im.example.com」サーバに接続するときに、以下の例では、ピアは「foo.im.example.com」の「」のアドレスを指定していないが、サーバーは、もはや、そのアドレスにサービスをホストします。）"
    },
    {
      "indent": 3,
      "text": "P: <?xml version='1.0'?> <stream:stream from='example.net' to='foo.im.example.com' version='1.0' xmlns='jabber:server' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "P：<？xmlのバージョン= '1.0'？> <ストリーム：= 'foo.im.example.com' バージョンへ= 'example.net' からストリーム= '1.0' のxmlns = 'おしゃべり：サーバののxmlns：ストリームを= 'http://etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "S: <?xml version='1.0'?> <stream:stream from='im.example.com' id='g4qSvGvBxJ+xeAd7QKezOQJFFlw=' to='example.net' version='1.0' xml:lang='en' xmlns='jabber:server' xmlns:stream='http://etherx.jabber.org/streams'> <stream:error> <host-gone xmlns='urn:ietf:params:xml:ns:xmpp-streams'/> </stream:error> </stream:stream>",
      "ja": "S：<？xmlのバージョン= '1.0'？> <ストリーム：= 'im.example.com' IDからのストリーム= 'g4qSvGvBxJ + xeAd7QKezOQJFFlw =' = 'example.net' へのバージョン= '1.0' のxml：LANG =」 en 'とのxmlns ='おしゃべり：サーバののxmlns：ストリーム= 'のhttp：//etherx.jabber.org/streams'> <ストリーム：エラー> <ホスト・ゴーンのxmlns =' 壷：IETF：のparams：XML：NS：XMPP -streams' /> </ストリーム：エラー> </ストリーム：ストリーム>"
    },
    {
      "indent": 0,
      "text": "4.9.3.6. host-unknown",
      "section_title": true,
      "ja": "4.9.3.6。ホスト不明"
    },
    {
      "indent": 3,
      "text": "The value of the 'to' attribute provided in the initial stream header does not correspond to an FQDN that is serviced by the receiving entity.",
      "ja": "初期ストリームヘッダに設けられた「」の属性の値は、受信エンティティによってサービスされるFQDNに対応していません。"
    },
    {
      "indent": 3,
      "text": "(In the following example, the peer specifies a 'to' address of \"example.org\" when connecting to the \"im.example.com\" server, but the server knows nothing of that address.)",
      "ja": "（以下の例では、「im.example.com」サーバーに接続するときに、ピアは、「example.org」の「から」アドレスを指定しますが、サーバーはそのアドレスの何も知りません。）"
    },
    {
      "indent": 3,
      "text": "P: <?xml version='1.0'?> <stream:stream from='example.net' to='example.org' version='1.0' xmlns='jabber:server' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "P：<？xmlのバージョン= '1.0'？> <ストリーム：= 'example.org' へ= 'example.net' バージョンからのストリーム= '1.0' のxmlns = 'おしゃべり：サーバののxmlns：ストリーム='のhttp：/ /etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "S: <?xml version='1.0'?> <stream:stream from='im.example.com' id='g4qSvGvBxJ+xeAd7QKezOQJFFlw=' to='example.net' version='1.0' xml:lang='en' xmlns='jabber:server' xmlns:stream='http://etherx.jabber.org/streams'> <stream:error> <host-unknown xmlns='urn:ietf:params:xml:ns:xmpp-streams'/> </stream:error> </stream:stream>",
      "ja": "S：<？xmlのバージョン= '1.0'？> <ストリーム：= 'im.example.com' IDからのストリーム= 'g4qSvGvBxJ + xeAd7QKezOQJFFlw =' = 'example.net' へのバージョン= '1.0' のxml：LANG =」 en 'とのxmlns ='おしゃべり：サーバののxmlns：ストリーム= 'のhttp：//etherx.jabber.org/streams'> <ストリーム：エラー> <ホスト不明のxmlns =' 壷：IETF：のparams：XML：NS：XMPP -streams' /> </ストリーム：エラー> </ストリーム：ストリーム>"
    },
    {
      "indent": 0,
      "text": "4.9.3.7. improper-addressing",
      "section_title": true,
      "ja": "4.9.3.7。不適切なアドレッシング"
    },
    {
      "indent": 3,
      "text": "A stanza sent between two servers lacks a 'to' or 'from' attribute, the 'from' or 'to' attribute has no value, or the value violates the rules for XMPP addresses [XMPP-ADDR].",
      "ja": "2つのサーバー間で送信されるスタンザは属性「に」「から」や、「と」または「から」属性が欠けている値がない、または値がXMPPアドレス[XMPP-ADDR]のための規則に違反します。"
    },
    {
      "indent": 3,
      "text": "(In the following example, the peer sends a stanza without a 'to' address over a server-to-server stream.)",
      "ja": "（以下の例では、ピアは、サーバからサーバへのストリーム上「」のアドレスなしスタンザを送信します）。"
    },
    {
      "indent": 3,
      "text": "P: <message from='juliet@im.example.com'> <body>Wherefore art thou?</body> </message>",
      "ja": "P：？<メッセージfrom='juliet@im.example.com '> <身体>それゆえアート汝</ BODY> </メッセージ>"
    },
    {
      "indent": 3,
      "text": "S: <stream:error> <improper-addressing xmlns='urn:ietf:params:xml:ns:xmpp-streams'/> </stream:error> </stream:stream>",
      "ja": "S：<ストリーム：エラー> <不適切なアドレッシングのxmlns = 'URN：IETF：paramsは：XML：NS：XMPPストリーム' /> </ストリーム：エラー> </ストリーム：ストリーム>"
    },
    {
      "indent": 0,
      "text": "4.9.3.8. internal-server-error",
      "section_title": true,
      "ja": "4.9.3.8。内部サーバーエラー"
    },
    {
      "indent": 3,
      "text": "The server has experienced a misconfiguration or other internal error that prevents it from servicing the stream.",
      "ja": "サーバーは、ストリームをサービスするのを防止する設定ミスやその他の内部エラーが発生しました。"
    },
    {
      "indent": 3,
      "text": "S: <stream:error> <internal-server-error xmlns='urn:ietf:params:xml:ns:xmpp-streams'/> </stream:error> </stream:stream>",
      "ja": "S：<ストリーム：エラー> <サーバ内蔵エラーのxmlns = 'URN：IETF：paramsは：XML：NS：XMPPストリーム' /> </ストリーム：エラー> </ストリーム：ストリーム>"
    },
    {
      "indent": 0,
      "text": "4.9.3.9. invalid-from",
      "section_title": true,
      "ja": "4.9.3.9。無効-から"
    },
    {
      "indent": 3,
      "text": "The data provided in a 'from' attribute does not match an authorized JID or validated domain as negotiated (1) between two servers using SASL or Server Dialback, or (2) between a client and a server via SASL authentication and resource binding.",
      "ja": "属性「から」で提供されたデータは、SASL認証とリソースの結合を経由して交渉してSASLまたはサーバーダイアルバックを使用して2つのサーバー間で（1）認可JIDか検証ドメインと一致、または（2）クライアントとサーバの間ではありません。"
    },
    {
      "indent": 3,
      "text": "(In the following example, a peer that has authenticated only as \"example.net\" attempts to send a stanza from an address at \"example.org\".)",
      "ja": "（以下の例では、唯一の「example.net」として認証されたピアが「example.org」のアドレスからスタンザを送信しようとします。）"
    },
    {
      "indent": 3,
      "text": "P: <message from='romeo@example.org' to='juliet@im.example.com'> <body>Neither, fair saint, if either thee dislike.</body> </message>",
      "ja": "P：<メッセージfrom='romeo@example.org 'to='juliet@im.example.com'> <身体>どちらも、公正聖人、どちらかあなたが嫌い​​ならば、</ body> </メッセージ>。"
    },
    {
      "indent": 3,
      "text": "S: <stream:error> <invalid-from xmlns='urn:ietf:params:xml:ns:xmpp-streams'/> </stream:error> </stream:stream>",
      "ja": "S：<ストリーム：エラー> <無効からのxmlns = 'URN：IETF：paramsは：XML：NS：XMPPストリーム' /> </ストリーム：エラー> </ストリーム：ストリーム>"
    },
    {
      "indent": 0,
      "text": "4.9.3.10. invalid-namespace",
      "section_title": true,
      "ja": "4.9.3.10。無効な名前空間"
    },
    {
      "indent": 3,
      "text": "The stream namespace name is something other than \"http://etherx.jabber.org/streams\" (see Section 11.2) or the content namespace declared as the default namespace is not supported (e.g., something other than \"jabber:client\" or \"jabber:server\").",
      "ja": "「：クライアントジャバー」またはストリームの名前空間名は「http://etherx.jabber.org/streams」以外のもの（11.2節を参照）または、デフォルトの名前空間として宣言されたコンテンツの名前空間がサポートされていない（以外の例えば、何かであります\"ジャバー：サーバ\"）。"
    },
    {
      "indent": 3,
      "text": "(In the following example, the client specifies a namespace of 'http://wrong.namespace.example.org/' for the stream.)",
      "ja": "（以下の例では、クライアントがストリームのための「http://wrong.namespace.example.org/」の名前空間を指定します。）"
    },
    {
      "indent": 3,
      "text": "C: <?xml version='1.0'?> <stream:stream from='juliet@im.example.com' to='im.example.com' version='1.0' xmlns='jabber:client' xmlns:stream='http://wrong.namespace.example.org/'>",
      "ja": "C：<？xmlのバージョン= '1.0'？> <ストリーム：im.example.com「=に 'ストリームfrom='juliet@im.example.com' バージョン= '1.0' のxmlns = 'おしゃべり：クライアントののxmlnsを：ストリーム= 'のhttp：//wrong.namespace.example.org/'>"
    },
    {
      "indent": 3,
      "text": "S: <?xml version='1.0'?> <stream:stream from='im.example.com' id='++TR84Sm6A3hnt3Q065SnAbbk3Y=' to='juliet@im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'> <stream:error> <invalid-namespace xmlns='urn:ietf:params:xml:ns:xmpp-streams'/> </stream:error> </stream:stream>",
      "ja": "S：<？xmlのバージョン= '1.0'？> <ストリーム：= 'im.example.com' IDからのストリーム= '++ TR84Sm6A3hnt3Q065SnAbbk3Y =' to='juliet@im.example.com」バージョン= '1.0' のXML ：LANG =のxmlns = 'おしゃべり：クライアント' 'en' とのxmlns：ストリーム= 'のhttp：//etherx.jabber.org/streams'> <ストリーム：エラー> <無効名前空間のxmlns = \"壷：IETF：のparams：XML ：NS：XMPPストリーム/> </ストリーム：エラー> </ストリーム：ストリーム>"
    },
    {
      "indent": 0,
      "text": "4.9.3.11. invalid-xml",
      "section_title": true,
      "ja": "4.9.3.11。無効なXML"
    },
    {
      "indent": 3,
      "text": "The entity has sent invalid XML over the stream to a server that performs validation (see Section 11.4).",
      "ja": "エンティティが検証を実行するサーバーにストリーム上で無効なXMLを送信している（11.4節を参照してください）。"
    },
    {
      "indent": 3,
      "text": "(In the following example, the peer attempts to send an IQ stanza of type \"subscribe\", but the XML schema defines no such value for the 'type' attribute.)",
      "ja": "（以下の例では、ピアは、「購読」タイプのIQスタンザを送信しようとするが、XMLスキーマは、「タイプ」属性には、このような値を定義していません。）"
    },
    {
      "indent": 3,
      "text": "P: <iq from='example.net' id='l3b1vs75' to='im.example.com' type='subscribe'> <ping xmlns='urn:xmpp:ping'/> </iq>",
      "ja": "P：<= 'example.net' からIQ ID = 'l3b1vs75' へ= 'im.example.com' TYPE = '加入'> <ピングのxmlns = 'URN：XMPP：ピング' /> </ IQ>"
    },
    {
      "indent": 3,
      "text": "S: <stream:error> <invalid-xml xmlns='urn:ietf:params:xml:ns:xmpp-streams'/> </stream:error> </stream:stream>",
      "ja": "S：<ストリーム：エラー> <無効のXMLのxmlns = 'URN：IETF：paramsは：XML：NS：XMPPストリーム' /> </ストリーム：エラー> </ストリーム：ストリーム>"
    },
    {
      "indent": 0,
      "text": "4.9.3.12. not-authorized",
      "section_title": true,
      "ja": "4.9.3.12。許可されていません"
    },
    {
      "indent": 3,
      "text": "The entity has attempted to send XML stanzas or other outbound data before the stream has been authenticated, or otherwise is not authorized to perform an action related to stream negotiation; the receiving entity MUST NOT process the offending data before sending the stream error.",
      "ja": "エンティティは、ストリームが認証された前に、XMLスタンザまたは他のアウトバウンドのデータを送信しようとしたか、そうでなければ交渉をストリーミングするために関連するアクションを実行する権限がないですしています。受信エンティティは、ストリームエラーを送信する前に問題のあるデータを処理してはいけません。"
    },
    {
      "indent": 3,
      "text": "(In the following example, the client attempts to send XML stanzas before authenticating with the server.)",
      "ja": "（以下の例では、クライアントがサーバーとの認証前にXMLスタンザを送信しようとします。）"
    },
    {
      "indent": 3,
      "text": "C: <?xml version='1.0'?> <stream:stream from='juliet@im.example.com' to='im.example.com' version='1.0' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "C：<？xmlのバージョン= '1.0'？> <ストリーム：im.example.com「=に 'ストリームfrom='juliet@im.example.com' バージョン= '1.0' のxmlns = 'おしゃべり：クライアントののxmlnsを：ストリーム= 'のhttp：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "S: <?xml version='1.0'?> <stream:stream from='im.example.com' id='++TR84Sm6A3hnt3Q065SnAbbk3Y=' to='juliet@im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "S：<？xmlのバージョン= '1.0'？> <ストリーム：= 'im.example.com' IDからのストリーム= '++ TR84Sm6A3hnt3Q065SnAbbk3Y =' to='juliet@im.example.com」バージョン= '1.0' のXML ：LANG =のxmlns = 'おしゃべり：クライアント' 'en' とのxmlns：ストリーム= 'のhttp：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "C: <message to='romeo@example.net'> <body>Wherefore art thou?</body> </message>",
      "ja": "C：？<メッセージto='romeo@example.net '> <身体>芸術それゆえ汝</ BODY> </メッセージ>"
    },
    {
      "indent": 3,
      "text": "S: <stream:error> <not-authorized xmlns='urn:ietf:params:xml:ns:xmpp-streams'/> </stream:error> </stream:stream>",
      "ja": "S：<ストリーム：エラー> <許可しないのxmlns = 'URN：IETF：paramsは：XML：NS：XMPPストリーム' /> </ストリームは：エラー> </ストリーム：ストリーム>"
    },
    {
      "indent": 0,
      "text": "4.9.3.13. not-well-formed",
      "section_title": true,
      "ja": "4.9.3.13。ない-整形"
    },
    {
      "indent": 3,
      "text": "The initiating entity has sent XML that violates the well-formedness rules of [XML] or [XML-NAMES].",
      "ja": "開始エンティティは、[XML]または[XML-NAMES]の整形のルールに違反するXMLを送信しました。"
    },
    {
      "indent": 3,
      "text": "(In the following example, the client sends an XMPP message that is not namespace-well-formed.)",
      "ja": "（以下の例では、クライアントは、名前空間整形式でないXMPPメッセージを送信します。）"
    },
    {
      "indent": 3,
      "text": "C: <message> <foo:body>What is this foo?</foo:body> </message>",
      "ja": "C：<メッセージ> <FOO：ボディ>このfooのある内容</ FOO：ボディ>？</メッセージ>"
    },
    {
      "indent": 3,
      "text": "S: <stream:error> <not-well-formed xmlns='urn:ietf:params:xml:ns:xmpp-streams'/> </stream:error> </stream:stream>",
      "ja": "S：<ストリーム：エラー> <未整形のxmlns = 'URN：IETF：paramsは：XML：NS：XMPPストリーム' /> </ストリームは：エラー> </ストリーム：ストリーム>"
    },
    {
      "indent": 6,
      "text": "Interoperability Note: In RFC 3920, the name of this error condition was \"xml-not-well-formed\" instead of \"not-well-formed\". The name was changed because the element name <xml-not-well-formed/> violates the constraint from Section 3 of [XML] that \"names beginning with a match to (('X'|'x')('M'|'m')('L'|'l')) are reserved for standardization in this or future versions of this specification\".",
      "ja": "相互運用性注意：RFC 3920では、このエラー条件の名前ではなく、「ない-整形」の「XML-ない-整形」でした。 『X』）（ 『M』 |要素名は<XML-ない-整形/>が、名前は（（ 『X』に一致するで始まる」という[XML]のセクション3からの制約に違反するため、名前が変更されました|「M」）（「L」|「L」が））「は、本明細書のこの又は今後のバージョンでの標準化のために予約されています。"
    },
    {
      "indent": 0,
      "text": "4.9.3.14. policy-violation",
      "section_title": true,
      "ja": "4.9.3.14。ポリシー違反"
    },
    {
      "indent": 3,
      "text": "The entity has violated some local service policy (e.g., a stanza exceeds a configured size limit); the server MAY choose to specify the policy in the <text/> element or in an application-specific condition element.",
      "ja": "エンティティ（例えば、スタンザに構成されたサイズ制限を超える）、いくつかのローカルサービスポリシーに違反しました。サーバーは、<テキスト/>要素またはアプリケーション固有の条件要素内でポリシーを指定することもできます。"
    },
    {
      "indent": 3,
      "text": "(In the following example, the client sends an XMPP message that is too large according to the server's local service policy.)",
      "ja": "（以下の例では、クライアントは、サーバーのローカルサービスポリシーに応じて大きすぎるXMPPメッセージを送信します。）"
    },
    {
      "indent": 3,
      "text": "C: <message to='juliet@im.example.com' id='foo'> <body>[ ... the-emacs-manual ... ]</body> </message>",
      "ja": "C：<メッセージto='juliet@im.example.com」ID = 'FOO'> <BODY> [...-のemacs-手動...] </ body> </メッセージ>"
    },
    {
      "indent": 3,
      "text": "S: <stream:error> <policy-violation xmlns='urn:ietf:params:xml:ns:xmpp-streams'/> <stanza-too-big xmlns='urn:xmpp:errors'/> </stream:error>",
      "ja": "S：<ストリーム：エラー> <ポリシー違反のxmlns = '壷：IETF：のparams：XML：NS：XMPPストリーム' /> <スタンザ-あまりにも大きいのxmlns = '壷：XMPP：エラー' /> </ストリーム：エラー>"
    },
    {
      "indent": 3,
      "text": "S: </stream:stream>",
      "ja": "S：</ストリーム：ストリーム>"
    },
    {
      "indent": 0,
      "text": "4.9.3.15. remote-connection-failed",
      "section_title": true,
      "ja": "4.9.3.15。リモート接続に失敗しました"
    },
    {
      "indent": 3,
      "text": "The server is unable to properly connect to a remote entity that is needed for authentication or authorization (e.g., in certain scenarios related to Server Dialback [XEP-0220]); this condition is not to be used when the cause of the error is within the administrative domain of the XMPP service provider, in which case the <internal-server-error/> condition is more appropriate.",
      "ja": "サーバは適切に（例えば、サーバダイアルバック[XEP-0220】に関連する特定のシナリオで）認証または認可するために必要とされるリモートエンティティに接続することができません。エラーの原因は、<サーバ内蔵のエラー/>条件がより適切である場合には、XMPPサービスプロバイダの管理ドメイン内にある場合、この条件は、使用されるものではありません。"
    },
    {
      "indent": 3,
      "text": "C: <?xml version='1.0'?> <stream:stream from='juliet@im.example.com' to='im.example.com' version='1.0' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "C：<？xmlのバージョン= '1.0'？> <ストリーム：im.example.com「=に 'ストリームfrom='juliet@im.example.com' バージョン= '1.0' のxmlns = 'おしゃべり：クライアントののxmlnsを：ストリーム= 'のhttp：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "S: <?xml version='1.0'?> <stream:stream from='im.example.com' id='++TR84Sm6A3hnt3Q065SnAbbk3Y=' to='juliet@im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'> <stream:error> <remote-connection-failed xmlns='urn:ietf:params:xml:ns:xmpp-streams'/> </stream:error> </stream:stream>",
      "ja": "S：<？xmlのバージョン= '1.0'？> <ストリーム：= 'im.example.com' IDからのストリーム= '++ TR84Sm6A3hnt3Q065SnAbbk3Y =' to='juliet@im.example.com」バージョン= '1.0' のXML ：LANG =のxmlns = 'おしゃべり：クライアント' 'en' とのxmlns：ストリーム= 'のhttp：//etherx.jabber.org/streams'> <ストリーム：エラー> <リモート接続に失敗したのxmlns = \"壷：IETF：のparams ：XML：NS：XMPPストリーム/> </ストリーム：エラー> </ストリーム：ストリーム>"
    },
    {
      "indent": 0,
      "text": "4.9.3.16. reset",
      "section_title": true,
      "ja": "4.9.3.16。リセット"
    },
    {
      "indent": 3,
      "text": "The server is closing the stream because it has new (typically security-critical) features to offer, because the keys or certificates used to establish a secure context for the stream have expired or have been revoked during the life of the stream (Section 13.7.2.3), because the TLS sequence number has wrapped (Section 5.3.5), etc. The reset applies to the stream and to any",
      "ja": "それは（通常はセキュリティ上重要な）新しいを持っているため、サーバーはストリームを閉じているストリームのための安全なコンテキストを確立するために使用されるキーまたは証明書の期限が切れたか、ストリーム（セクション13.7の寿命の間に失効しているため、提供していただけます。 2.3）、TLSシーケンス番号がラップされているため（セクション5.3.5）、等リセットストリームに任意に適用されます"
    },
    {
      "indent": 3,
      "text": "security context established for that stream (e.g., via TLS and SASL), which means that encryption and authentication need to be negotiated again for the new stream (e.g., TLS session resumption cannot be used).",
      "ja": "暗号化と認証が新しいストリーム（例えば、TLSセッション再開を使用することはできません）のために再度交渉しなければならないことを意味し、そのストリームのために確立されたセキュリティコンテキスト（例えば、TLSおよびSASL経由）、。"
    },
    {
      "indent": 3,
      "text": "S: <stream:error> <reset xmlns='urn:ietf:params:xml:ns:xmpp-streams'/> </stream:error> </stream:stream>",
      "ja": "S：<ストリーム：エラー> <のxmlns =リセット 'URNを：IETF：paramsは：XML：NS：XMPPストリーム' /> </ストリーム：エラー> </ストリーム：ストリーム>"
    },
    {
      "indent": 0,
      "text": "4.9.3.17. resource-constraint",
      "section_title": true,
      "ja": "4.9.3.17。資源制約"
    },
    {
      "indent": 3,
      "text": "The server lacks the system resources necessary to service the stream.",
      "ja": "サーバーは、ストリームにサービスを提供するために必要なシステムリソースが不足しています。"
    },
    {
      "indent": 3,
      "text": "C: <?xml version='1.0'?> <stream:stream from='juliet@im.example.com' to='im.example.com' version='1.0' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "C：<？xmlのバージョン= '1.0'？> <ストリーム：im.example.com「=に 'ストリームfrom='juliet@im.example.com' バージョン= '1.0' のxmlns = 'おしゃべり：クライアントののxmlnsを：ストリーム= 'のhttp：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "S: <?xml version='1.0'?> <stream:stream from='im.example.com' id='++TR84Sm6A3hnt3Q065SnAbbk3Y=' to='juliet@im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'> <stream:error> <resource-constraint xmlns='urn:ietf:params:xml:ns:xmpp-streams'/> </stream:error> </stream:stream>",
      "ja": "S：<？xmlのバージョン= '1.0'？> <ストリーム：= 'im.example.com' IDからのストリーム= '++ TR84Sm6A3hnt3Q065SnAbbk3Y =' to='juliet@im.example.com」バージョン= '1.0' のXML ：LANG =のxmlns = 'おしゃべり：クライアント' 'en' とのxmlns：ストリーム= 'のhttp：//etherx.jabber.org/streams'> <ストリーム：エラー> <リソース制約のxmlns = \"壷：IETF：のparams：XML ：NS：XMPPストリーム/> </ストリーム：エラー> </ストリーム：ストリーム>"
    },
    {
      "indent": 0,
      "text": "4.9.3.18. restricted-xml",
      "section_title": true,
      "ja": "4.9.3.18。制限されたXML"
    },
    {
      "indent": 3,
      "text": "The entity has attempted to send restricted XML features such as a comment, processing instruction, DTD subset, or XML entity reference (see Section 11.1).",
      "ja": "エンティティは、そのようなコメント、処理命令、DTDサブセット、またはXML実体参照（11.1節を参照）などの制限されたXML機能を送信しようとしました。"
    },
    {
      "indent": 3,
      "text": "(In the following example, the client sends an XMPP message containing an XML comment.)",
      "ja": "（以下の例では、クライアントは、XMLコメントを含むXMPPメッセージを送信します。）"
    },
    {
      "indent": 3,
      "text": "C: <message to='juliet@im.example.com'> <!--<subject/>--> <body>This message has no subject.</body> </message>",
      "ja": "C：<メッセージto='juliet@im.example.com '> <！ -  <件名/>  - > <身体>このメッセージは何の件名を持っていない</ BODY> </メッセージ>"
    },
    {
      "indent": 3,
      "text": "S: <stream:error> <restricted-xml xmlns='urn:ietf:params:xml:ns:xmpp-streams'/> </stream:error> </stream:stream>",
      "ja": "S：<ストリーム：エラー> <制限付きのXMLのxmlns = 'URN：IETF：paramsは：XML：NS：XMPPストリーム' /> </ストリーム：エラー> </ストリーム：ストリーム>"
    },
    {
      "indent": 0,
      "text": "4.9.3.19. see-other-host",
      "section_title": true,
      "ja": "4.9.3.19。参照 - 他のホスト"
    },
    {
      "indent": 3,
      "text": "The server will not provide service to the initiating entity but is redirecting traffic to another host under the administrative control of the same service provider. The XML character data of the <see-other-host/> element returned by the server MUST specify the alternate FQDN or IP address at which to connect, which MUST be a valid domainpart or a domainpart plus port number (separated by the ':' character in the form \"domainpart:port\"). If the domainpart is the same as the source domain, derived domain, or resolved IPv4 or IPv6 address to which the initiating entity originally connected (differing only by the port number), then the initiating entity SHOULD simply attempt to reconnect at that address. (The format of an IPv6 address MUST follow [IPv6-ADDR], which includes the enclosing the IPv6 address in square brackets '[' and ']' as originally defined by [URI].) Otherwise, the initiating entity MUST resolve the FQDN specified in the <see-other-host/> element as described under Section 3.2.",
      "ja": "サーバーは、開始エンティティにサービスを提供することはありませんが、同じサービスプロバイダの管理下に別のホストにトラフィックをリダイレクトしています。 ：サーバーから返された<参照-他のホスト/>要素のXML文字データが有効domainpartか」で区切られたdomainpartプラスポート番号（しなければならない、接続する時の代替FQDNまたはIPアドレスを指定する必要がありますフォームの「文字 『domainpart：ポート』）。 domainpartは元々（ポート番号によってのみ異なる）接続開始エンティティは、その後、開始エンティティは単にそのアドレスに再接続を試みる必要があるために、ソースドメイン由来のドメイン、または解決IPv4またはIPv6アドレスと同じである場合。 （IPv6アドレスのフォーマットは、もともと[URI]によって定義されるように「[」と「]」角括弧で囲んで、IPv6アドレスを含む、〔のIPv6-ADDR]を従わなければならない。）それ以外の場合は、開始エンティティはFQDNを解決する必要があります<参照-他のホスト/>要素で指定されたセクション3.2で説明したように。"
    },
    {
      "indent": 3,
      "text": "C: <?xml version='1.0'?> <stream:stream from='juliet@im.example.com' to='im.example.com' version='1.0' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "C：<？xmlのバージョン= '1.0'？> <ストリーム：im.example.com「=に 'ストリームfrom='juliet@im.example.com' バージョン= '1.0' のxmlns = 'おしゃべり：クライアントののxmlnsを：ストリーム= 'のhttp：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "S: <?xml version='1.0'?> <stream:stream from='im.example.com' id='++TR84Sm6A3hnt3Q065SnAbbk3Y=' to='juliet@im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'> <stream:error> <see-other-host xmlns='urn:ietf:params:xml:ns:xmpp-streams'> [2001:41D0:1:A49b::1]:9222 </see-other-host> </stream:error> </stream:stream>",
      "ja": "S：<？xmlのバージョン= '1.0'？> <ストリーム：= 'im.example.com' IDからのストリーム= '++ TR84Sm6A3hnt3Q065SnAbbk3Y =' to='juliet@im.example.com」バージョン= '1.0' のXML ：LANG =のxmlns = 'おしゃべり：クライアント' 'en' とのxmlns：ストリーム= 'のhttp：//etherx.jabber.org/streams'> <ストリーム：エラー> <参照-他のホストのxmlns = \"壷：IETF：のparams ：XML：NS：XMPPストリーム> [2001：41D0：1：A49b :: 1]：9222 </参照、他のホスト> </ストリーム：エラー> </ストリーム：ストリーム>"
    },
    {
      "indent": 3,
      "text": "When negotiating a stream with the host to which it has been redirected, the initiating entity MUST apply the same policies it would have applied to the original connection attempt (e.g., a policy requiring TLS), MUST specify the same 'to' address on the initial stream header, and MUST verify the identity of the new host using the same reference identifier(s) it would have used for the original connection attempt (in accordance with [TLS-CERTS]). Even if the receiving entity returns a <see-other-host/> error before the confidentiality and integrity of the stream have been established (thus introducing the possibility of a denial-of-service attack), the fact that the initiating entity needs to verify the identity of the XMPP service based on the same reference identifiers implies that the initiating entity will not connect to a malicious entity. To reduce the possibility of a denial-of-service attack, (a) the receiving entity SHOULD NOT close the stream with a <see-other-host/> stream error until after the confidentiality and integrity of the stream have been protected via TLS or an equivalent security layer (such as the SASL GSSAPI mechanism), and (b) the receiving entity MAY have a policy of following redirects only if it has authenticated the receiving entity. In addition, the initiating entity SHOULD abort the connection attempt after a certain number of successive redirects (e.g., at least 2 but no more than 5).",
      "ja": "それがリダイレクトされた先のホストとのストリームを交渉するとき、開始エンティティは、上の同じ「から」アドレスを指定する必要があり、元の接続の試み（例えば、TLSを要求するポリシー）には適用されているのと同じポリシーを適用しなければなりません初期ストリームヘッダ、それは（[TLS-CERTS]に従って）元の接続の試行のために使用したのと同じ参照識別子（複数可）を使用して、新しいホストのIDを確認しなければなりません。ストリームの機密性と整合性は、（したがってサービス拒否攻撃の可能性を導入する）を開始実体がする必要があるという事実を確立してきた前に、受信エンティティは、<参照-他のホスト/>エラーを返した場合でも同じ参照識別子に基づいて、XMPPサービスの身元を確認すると、開始エンティティは、悪意のあるエンティティに接続できないことを意味します。ストリームの機密性と整合性の後にTLSによって保護されるまで、サービス拒否攻撃の可能性を減らすために、（a）は受信エンティティは、<参照-他のホスト/>ストリームエラーでストリームを閉じるべきではありませんまたは同等のセキュリティ（例えばSASL GSSAPIメカニズムとして）層、及​​び（b）は、受信エンティティは、受信エンティティを認証した場合のみ、リダイレクトを次のポリシーを持っているかもしれません。また、開始エンティティ（例えば、少なくとも2つが、これ以上5以下）の連続したリダイレクトの特定の番号の後に接続試行を中止すべきです。"
    },
    {
      "indent": 0,
      "text": "4.9.3.20. system-shutdown",
      "section_title": true,
      "ja": "4.9.3.20。システムシャットダウン"
    },
    {
      "indent": 3,
      "text": "The server is being shut down and all active streams are being closed.",
      "ja": "サーバがシャットダウンされると、すべてのアクティブストリームが閉じられています。"
    },
    {
      "indent": 3,
      "text": "S: <stream:error> <system-shutdown xmlns='urn:ietf:params:xml:ns:xmpp-streams'/> </stream:error> </stream:stream>",
      "ja": "S：<ストリーム：エラー> <システムシャットダウンのxmlns = 'URN：IETF：paramsは：XML：NS：XMPPストリーム' /> </ストリーム：エラー> </ストリーム：ストリーム>"
    },
    {
      "indent": 0,
      "text": "4.9.3.21. undefined-condition",
      "section_title": true,
      "ja": "4.9.3.21。未定義の条件"
    },
    {
      "indent": 3,
      "text": "The error condition is not one of those defined by the other conditions in this list; this error condition SHOULD NOT be used except in conjunction with an application-specific condition.",
      "ja": "エラー状態は、このリスト内の他の条件によって定義されたものではありません。このエラー状態は、アプリケーション固有の条件と組み合わせ以外で使用されるべきではありません。"
    },
    {
      "indent": 3,
      "text": "S: <stream:error> <undefined-condition xmlns='urn:ietf:params:xml:ns:xmpp-streams'/> <app-error xmlns='http://example.org/ns'/> </stream:error> </stream:stream>",
      "ja": "S：<ストリーム：エラー> <不定条件のxmlns = 'URN：IETF：paramsは：XML：NS：XMPPストリーム' /> <APP-エラーのxmlns = 'HTTP：//example.org/ns'/> < /ストリーム：エラー> </ストリーム：ストリーム>"
    },
    {
      "indent": 0,
      "text": "4.9.3.22. unsupported-encoding",
      "section_title": true,
      "ja": "4.9.3.22。サポートされていないエンコード"
    },
    {
      "indent": 3,
      "text": "The initiating entity has encoded the stream in an encoding that is not supported by the server (see Section 11.6) or has otherwise improperly encoded the stream (e.g., by violating the rules of the [UTF-8] encoding).",
      "ja": "開始エンティティはサーバでサポートされていない符号化でストリームを符号化された（セクション11.6を参照）、または不適切（例えば、[UTF-8]符号化の規則に違反することにより）ストリームを符号化され、さもなければました。"
    },
    {
      "indent": 3,
      "text": "(In the following example, the client attempts to encode data using UTF-16 instead of UTF-8.)",
      "ja": "（以下の例では、クライアントは、UTF-16の代わりに、UTF-8を使用してデータを符号化しようとします。）"
    },
    {
      "indent": 3,
      "text": "C: <?xml version='1.0' encoding='UTF-16'?> <stream:stream from='juliet@im.example.com' to='im.example.com' version='1.0' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "C：<？xmlのバージョン= '1.0' エンコード= 'UTF-16'？> <ストリーム：im.example.com「= 'のストリームfrom='juliet@im.example.com' バージョン= '1.0' のxmlns = 「おしゃべり：クライアントののxmlns：ストリーム= 'のhttp：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "S: <?xml version='1.0'?> <stream:stream from='im.example.com' id='++TR84Sm6A3hnt3Q065SnAbbk3Y=' to='juliet@im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'> <stream:error> <unsupported-encoding xmlns='urn:ietf:params:xml:ns:xmpp-streams'/> </stream:error> </stream:stream>",
      "ja": "S：<？xmlのバージョン= '1.0'？> <ストリーム：= 'im.example.com' IDからのストリーム= '++ TR84Sm6A3hnt3Q065SnAbbk3Y =' to='juliet@im.example.com」バージョン= '1.0' のXML ：LANG =のxmlns = 'おしゃべり：クライアント' 'en' とのxmlns：ストリーム= 'のhttp：//etherx.jabber.org/streams'> <ストリーム：エラー> <サポートされていないエンコードのxmlns = \"壷：IETF：のparams：XML ：NS：XMPPストリーム/> </ストリーム：エラー> </ストリーム：ストリーム>"
    },
    {
      "indent": 0,
      "text": "4.9.3.23. unsupported-feature",
      "section_title": true,
      "ja": "4.9.3.23。サポートされていない、機能"
    },
    {
      "indent": 3,
      "text": "The receiving entity has advertised a mandatory-to-negotiate stream feature that the initiating entity does not support, and has offered no other mandatory-to-negotiate feature alongside the unsupported feature.",
      "ja": "受信エンティティは、開始エンティティがサポートされていないことを必須ツー交渉ストリーム機能を宣伝している、とサポートされていない機能と一緒に他の必須ツー交渉機能を提供していません。"
    },
    {
      "indent": 3,
      "text": "(In the following example, the receiving entity requires negotiation of an example feature, but the initiating entity does not support the feature.)",
      "ja": "（以下の例では、受信エンティティは、例えば、機能のネゴシエーションを必要としますが、開始エンティティは、機能をサポートしていません。）"
    },
    {
      "indent": 3,
      "text": "R: <stream:features> <example xmlns='urn:xmpp:example'> <required/> </example> </stream:features>",
      "ja": "R：<ストリーム：特長> <例のxmlns = 'URNを：XMPP：例えば'> <必須/> </例> </ストリーム：機能>"
    },
    {
      "indent": 3,
      "text": "I: <stream:error> <unsupported-feature xmlns='urn:ietf:params:xml:ns:xmpp-streams'/> </stream:error> </stream:stream>",
      "ja": "I：<ストリーム：エラー> <サポートされていない-フィーチャーのxmlns = '壷：IETF：のparams：XML：NS：XMPPストリーム' /> </ストリーム：エラー> </ストリーム：ストリーム>"
    },
    {
      "indent": 0,
      "text": "4.9.3.24. unsupported-stanza-type",
      "section_title": true,
      "ja": "4.9.3.24。サポートされていない-スタンザ型"
    },
    {
      "indent": 3,
      "text": "The initiating entity has sent a first-level child of the stream that is not supported by the server, either because the receiving entity does not understand the namespace or because the receiving entity does not understand the element name for the applicable namespace (which might be the content namespace declared as the default namespace).",
      "ja": "であるかもしれない（開始エンティティは、サーバーでサポートされていないストリームの最初のレベルの子を送った、いずれかの受信エンティティは、名前空間を理解していないためか、受信エンティティは、該当する名前空間の要素名を理解していないので、デフォルトの名前空間として宣言されたコンテンツの名前空間）。"
    },
    {
      "indent": 3,
      "text": "(In the following example, the client attempts to send a first-level child element of <pubsub/> qualified by the 'jabber:client' namespace, but the schema for that namespace defines no such element.)",
      "ja": "（以下の例では、クライアントが「おしゃべり：クライアント」によって修飾<のpubsub />の最初のレベルの子要素に送信しようとする名前空間が、その名前空間のためのスキーマは、そのような要素を定義していません。）"
    },
    {
      "indent": 3,
      "text": "C: <pubsub xmlns='jabber:client'> <publish node='princely_musings'> <item id='ae890ac52d0df67ed7cfdf51b644e901'> <entry xmlns='http://www.w3.org/2005/Atom'> <title>Soliloquy</title> <summary> To be, or not to be: that is the question: Whether 'tis nobler in the mind to suffer The slings and arrows of outrageous fortune, Or to take arms against a sea of troubles, And by opposing end them? </summary> <link rel='alternate' type='text/html' href='http://denmark.example/2003/12/13/atom03'/> <id>tag:denmark.example,2003:entry-32397</id> <published>2003-12-13T18:30:02Z</published> <updated>2003-12-13T18:30:02Z</updated> </entry> </item> </publish> </pubsub>",
      "ja": "C：<のpubsubのxmlns = 'おしゃべり：クライアント'> <公開ノード= 'princely_musings'> <項目のid = 'ae890ac52d0df67ed7cfdf51b644e901'> <エントリーのxmlns = 'のhttp：//www.w3.org/2005/Atom'> <タイトル>独り言</ TITLE> <概要>的には、またはではない：それは質問です：「はとんでもない幸運のスリングと矢を苦しむこと、またはトラブルの海に対して武器を取るために念頭に貴をTISかどうか、そして、対向してそれらを終了？ </要約> <リンクREL = '代替' TYPE = 'text / htmlの' HREF = 'HTTP：//denmark.example/2003/12/13/atom03'/> <ID>タグ：denmark.example、2003年エントリー-32397 </ ID> <公表> 2003-12-13T18：30：02Z </公表> 2003-12-13T18 <更新>：30：02Z </更新> </ entry>の</ item>の</パブリッシュ> </のpubsub>"
    },
    {
      "indent": 3,
      "text": "S: <stream:error> <unsupported-stanza-type xmlns='urn:ietf:params:xml:ns:xmpp-streams'/> </stream:error> </stream:stream>",
      "ja": "S：<ストリーム：エラー> <サポートされていない-スタンザ型のxmlns = 'URN：IETF：paramsは：XML：NS：XMPPストリーム' /> </ストリーム：エラー> </ストリーム：ストリーム>"
    },
    {
      "indent": 0,
      "text": "4.9.3.25. unsupported-version",
      "section_title": true,
      "ja": "4.9.3.25。サポートされていないバージョン"
    },
    {
      "indent": 3,
      "text": "The 'version' attribute provided by the initiating entity in the stream header specifies a version of XMPP that is not supported by the server.",
      "ja": "ストリームヘッダに開始する事業体が提供する「バージョン」属性は、サーバーによってサポートされていないXMPPのバージョンを指定します。"
    },
    {
      "indent": 3,
      "text": "C: <?xml version='1.0'?> <stream:stream from='juliet@im.example.com' to='im.example.com' version='11.0' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "C：<？xmlのバージョン= '1.0'？> <ストリーム：im.example.com「= 'にfrom='juliet@im.example.comストリーム' バージョン= '11 .0' のxmlns = 'おしゃべり：クライアントののxmlns：ストリーム= 'のhttp：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "S: <?xml version='1.0'?> <stream:stream from='im.example.com' id='++TR84Sm6A3hnt3Q065SnAbbk3Y=' to='juliet@im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'> <stream:error> <unsupported-version xmlns='urn:ietf:params:xml:ns:xmpp-streams'/> </stream:error> </stream:stream>",
      "ja": "S：<？xmlのバージョン= '1.0'？> <ストリーム：= 'im.example.com' IDからのストリーム= '++ TR84Sm6A3hnt3Q065SnAbbk3Y =' to='juliet@im.example.com」バージョン= '1.0' のXML ：LANG =のxmlns = 'おしゃべり：クライアント' 'en' とのxmlns：ストリーム= 'のhttp：//etherx.jabber.org/streams'> <ストリーム：エラー> <サポートされていないバージョンののxmlns = \"壷：IETF：のparams：XML ：NS：XMPPストリーム/> </ストリーム：エラー> </ストリーム：ストリーム>"
    },
    {
      "indent": 0,
      "text": "4.9.4. Application-Specific Conditions",
      "section_title": true,
      "ja": "4.9.4。アプリケーション固有の条件"
    },
    {
      "indent": 3,
      "text": "As noted, an application MAY provide application-specific stream error information by including a properly namespaced child in the error element. The application-specific element SHOULD supplement or further qualify a defined element. Thus, the <error/> element will contain two or three child elements.",
      "ja": "述べたように、アプリケーションがエラー要素に適切に名前空間子を含めることによって、アプリケーション固有のストリームのエラー情報を提供することができます。アプリケーション固有の要素を補完またはさらに定義された要素を修飾する必要があります。このように、<誤り/>要素は、2つまたは3つの子要素が含まれます。"
    },
    {
      "indent": 3,
      "text": "C: <message> <body> My keyboard layout is:",
      "ja": "C：<メッセージ> <身体>私のキーボードレイアウトは次のとおりです。"
    },
    {
      "indent": 6,
      "text": " QWERTYUIOP{}| ASDFGHJKL:\" ZXCVBNM<>? </body> </message>",
      "ja": "QWERTYUIOP {} | ASDFGHJKL「ZXCVBNM <> </ BODY> </メッセージ>"
    },
    {
      "indent": 3,
      "text": "S: <stream:error> <not-well-formed xmlns='urn:ietf:params:xml:ns:xmpp-streams'/> <text xml:lang='en' xmlns='urn:ietf:params:xml:ns:xmpp-streams'> Some special application diagnostic information! </text> <escape-your-data xmlns='http://example.org/ns'/> </stream:error> </stream:stream>",
      "ja": "S：<ストリーム：エラー> <未整形のxmlns = 'URN：IETF：paramsは：XML：NS：XMPPストリーム' /> <テキストXML：LANG =のxmlns = 'URN 'EN'：IETF：paramsは： XML：NS：XMPPストリーム>いくつかの特別なアプリケーションの診断情報！ </テキスト> <エスケープ - あなたのデータのxmlns = 'のhttp：//example.org/ns'/> </ストリーム：エラー> </ストリーム：ストリーム>"
    },
    {
      "indent": 0,
      "text": "4.10. Simplified Stream Examples",
      "section_title": true,
      "ja": "4.10。簡素化されたストリームの例"
    },
    {
      "indent": 3,
      "text": "This section contains two highly simplified examples of a stream-based connection between a client and a server; these examples are included for the purpose of illustrating the concepts introduced thus far, but the reader needs to be aware that these examples elide many details (see Section 9 for more complete examples).",
      "ja": "このセクションでは、クライアントとサーバの間のストリームベースの接続の2つの高度に簡略化された例が含まれています。これらの例は、これまでに紹介した概念を説明する目的のために含まれていますが、読者はこれらの例は多くの詳細を（より完全な例については、セクション9を参照）Elideのことに注意する必要があります。"
    },
    {
      "indent": 3,
      "text": "A basic connection:",
      "ja": "基本的な接続："
    },
    {
      "indent": 3,
      "text": "C: <?xml version='1.0'?> <stream:stream from='juliet@im.example.com' to='im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "C：<？xmlのバージョン= '1.0'？> <ストリーム：im.example.com 'バージョン= '1.0' のxml：LANG = '「=' にストリームfrom='juliet@im.example.comのxmlns' EN = 「おしゃべり：クライアントののxmlns：ストリーム= 'のhttp：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "S: <?xml version='1.0'?> <stream:stream from='im.example.com' id='++TR84Sm6A3hnt3Q065SnAbbk3Y=' to='juliet@im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "S：<？xmlのバージョン= '1.0'？> <ストリーム：= 'im.example.com' IDからのストリーム= '++ TR84Sm6A3hnt3Q065SnAbbk3Y =' to='juliet@im.example.com」バージョン= '1.0' のXML ：LANG =のxmlns = 'おしゃべり：クライアント' 'en' とのxmlns：ストリーム= 'のhttp：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "[ ... stream negotiation ... ]",
      "ja": "[...ストリームの交渉...]"
    },
    {
      "indent": 3,
      "text": "C: <message from='juliet@im.example.com/balcony' to='romeo@example.net' xml:lang='en'> <body>Art thou not Romeo, and a Montague?</body> </message>",
      "ja": "C：<メッセージfrom='juliet@im.example.com/balcony 'to='romeo@example.net' のxml：LANG = 'EN'> <身体>アート汝ないロミオ、そしてモンタギュー</ body>の？ </メッセージ>"
    },
    {
      "indent": 3,
      "text": "S: <message from='romeo@example.net/orchard' to='juliet@im.example.com/balcony' xml:lang='en'> <body>Neither, fair saint, if either thee dislike.</body> </message>",
      "ja": "S：<メッセージfrom='romeo@example.net/orchard 'to='juliet@im.example.com/balcony' のxml：langは= 'EN'>。<ボディ>どちらも、公正聖人、どちらかあなたが嫌い​​ならば< / BODY> </メッセージ>"
    },
    {
      "indent": 3,
      "text": "C: </stream:stream>",
      "ja": "C：</ストリーム：ストリーム>"
    },
    {
      "indent": 3,
      "text": "S: </stream:stream>",
      "ja": "S：</ストリーム：ストリーム>"
    },
    {
      "indent": 3,
      "text": "A connection gone bad:",
      "ja": "接続が悪いなくなって："
    },
    {
      "indent": 3,
      "text": "C: <?xml version='1.0'?> <stream:stream from='juliet@im.example.com' to='im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "C：<？xmlのバージョン= '1.0'？> <ストリーム：im.example.com 'バージョン= '1.0' のxml：LANG = '「=' にストリームfrom='juliet@im.example.comのxmlns' EN = 「おしゃべり：クライアントののxmlns：ストリーム= 'のhttp：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "S: <?xml version='1.0'?> <stream:stream from='im.example.com' id='++TR84Sm6A3hnt3Q065SnAbbk3Y=' to='juliet@im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "S：<？xmlのバージョン= '1.0'？> <ストリーム：= 'im.example.com' IDからのストリーム= '++ TR84Sm6A3hnt3Q065SnAbbk3Y =' to='juliet@im.example.com」バージョン= '1.0' のXML ：LANG =のxmlns = 'おしゃべり：クライアント' 'en' とのxmlns：ストリーム= 'のhttp：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "[ ... stream negotiation ... ]",
      "ja": "[...ストリームの交渉...]"
    },
    {
      "indent": 3,
      "text": "C: <message from='juliet@im.example.com/balcony' to='romeo@example.net' xml:lang='en'> <body>No closing tag! </message>",
      "ja": "C：<メッセージfrom='juliet@im.example.com/balcony 'to='romeo@example.net' のxml：LANG = 'EN'> <body>のない終了タグ！ </メッセージ>"
    },
    {
      "indent": 3,
      "text": "S: <stream:error> <not-well-formed xmlns='urn:ietf:params:xml:ns:xmpp-streams'/> </stream:error> </stream:stream>",
      "ja": "S：<ストリーム：エラー> <未整形のxmlns = 'URN：IETF：paramsは：XML：NS：XMPPストリーム' /> </ストリームは：エラー> </ストリーム：ストリーム>"
    },
    {
      "indent": 3,
      "text": "More detailed examples are provided under Section 9.",
      "ja": "より詳細な例は、セクション9の下に設けられています。"
    },
    {
      "indent": 0,
      "text": "5. STARTTLS Negotiation",
      "section_title": true,
      "ja": "5. STARTTLSネゴシエーション"
    },
    {
      "indent": 0,
      "text": "5.1. Fundamentals",
      "section_title": true,
      "ja": "5.1。基礎編"
    },
    {
      "indent": 3,
      "text": "XMPP includes a method for securing the stream from tampering and eavesdropping. This channel encryption method makes use of the Transport Layer Security [TLS] protocol, specifically a \"STARTTLS\" extension that is modeled after similar extensions for the [IMAP],",
      "ja": "XMPPは改ざんや盗聴からの流れを確保するための方法を含みます。このチャネルの暗号化方式は、トランスポート層セキュリティ[TLS]プロトコルの使用、[IMAP]について同様の拡張機能をモデルにして、具体的「STARTTLS」の拡張子を作ります"
    },
    {
      "indent": 3,
      "text": "[POP3], and [ACAP] protocols as described in [USINGTLS]. The XML namespace name for the STARTTLS extension is 'urn:ietf:params:xml:ns:xmpp-tls'.",
      "ja": "【USINGTLS]に記載されているように、[POP3]、および[ACAP]プロトコル。 STARTTLS拡張のためのXML名前空間名は 'URN：IETF：のparams：XML：NS：XMPP-TLS' です。"
    },
    {
      "indent": 0,
      "text": "5.2. Support",
      "section_title": true,
      "ja": "5.2。サポート"
    },
    {
      "indent": 3,
      "text": "Support for STARTTLS is REQUIRED in XMPP client and server implementations. An administrator of a given deployment MAY specify that TLS is mandatory-to-negotiate for client-to-server communication, server-to-server communication, or both. An initiating entity SHOULD use TLS to secure its stream with the receiving entity before proceeding with SASL authentication.",
      "ja": "STARTTLSのサポートは、XMPPクライアントとサーバ実装で必要とされます。与えられた展開の管理者は、TLSが必須ツー交渉クライアントからサーバーへの通信、サーバー間通信、またはその両方のためであることを指定してもよいです。開始実体はSASL認証を進める前に、受信エンティティとの流れを確保するためにTLSを使用すべきです。"
    },
    {
      "indent": 0,
      "text": "5.3. Stream Negotiation Rules",
      "section_title": true,
      "ja": "5.3。ストリーム交渉ルール"
    },
    {
      "indent": 0,
      "text": "5.3.1. Mandatory-to-Negotiate",
      "section_title": true,
      "ja": "5.3.1。必須ツーネゴシエート"
    },
    {
      "indent": 3,
      "text": "If the receiving entity advertises only the STARTTLS feature or if the receiving entity includes the <required/> child element as explained under Section 5.4.1, the parties MUST consider TLS as mandatory-to-negotiate. If TLS is mandatory-to-negotiate, the receiving entity SHOULD NOT advertise support for any stream feature except STARTTLS during the initial stage of the stream negotiation process, because further stream features might depend on prior negotiation of TLS given the order of layers in XMPP (e.g., the particular SASL mechanisms offered by the receiving entity will likely depend on whether TLS has been negotiated).",
      "ja": "受信エンティティはSTARTTLS機能をアドバタイズしたり、5.4.1項の下で説明したように、受信エンティティは、<必要な/>子要素が含まれている場合、当事者は、TLSが必須としてツー交渉考慮しなければなりません。場合TLSが必須ツー交渉であれば、さらにストリームの特徴は、層の順序XMPP内の指定されたTLSの事前折衝に依存する可能性があるため、受信エンティティは、ストリームの交渉プロセスの初期段階でSTARTTLSを除く任意のストリーム機能をサポートすることを通知すべきではありません（例えば、受信エンティティによって提供される特定のSASLメカニズムはおそらくTLSが交渉されているかどうかに依存します）。"
    },
    {
      "indent": 0,
      "text": "5.3.2. Restart",
      "section_title": true,
      "ja": "5.3.2。再起動"
    },
    {
      "indent": 3,
      "text": "After TLS negotiation, the parties MUST restart the stream.",
      "ja": "TLS交渉の後、当事者は、ストリームを再起動する必要があります。"
    },
    {
      "indent": 0,
      "text": "5.3.3. Data Formatting",
      "section_title": true,
      "ja": "5.3.3。データフォーマット"
    },
    {
      "indent": 3,
      "text": "During STARTTLS negotiation, the entities MUST NOT send any whitespace as separators between XML elements (i.e., from the last character of the first-level <starttls/> element qualified by the 'urn:ietf:params:xml:ns:xmpp-tls' namespace as sent by the initiating entity, until the last character of the first-level <proceed/> element qualified by the 'urn:ietf:params:xml:ns:xmpp-tls' namespace as sent by the receiving entity). This prohibition helps to ensure proper security layer byte precision. Any such whitespace shown in the STARTTLS examples provided in this document is included only for the sake of readability.",
      "ja": "IETF：：のparams：XML：NS：XMPP-TLS STARTTLSネゴシエーションの間、実体は「壷で修飾最初のレベルの<STARTTLS />要素の最後の文字から、すなわち（XML要素間の区切りとして空白を送ってはいけませんURN「第一レベルの最後の文字まで、開始エンティティによって送信されたとして、名前空間で修飾要素</続行> 『：IETF：のparamsを：XML：NS：受信エンティティによって送信されたとしてXMPP-TLS』の名前空間）。この禁止は、適切なセキュリティレイヤバイト精度を確保するのに役立ちます。本書で提供されるSTARTTLS例に示すような任意の空白のみ読みやすさのために含まれています。"
    },
    {
      "indent": 0,
      "text": "5.3.4. Order of TLS and SASL Negotiations",
      "section_title": true,
      "ja": "5.3.4。 TLSおよびSASL交渉の注文"
    },
    {
      "indent": 3,
      "text": "If the initiating entity chooses to use TLS, STARTTLS negotiation MUST be completed before proceeding to SASL negotiation (Section 6); this order of negotiation is necessary to help safeguard authentication information sent during SASL negotiation, as well as to make it possible to base the use of the SASL EXTERNAL mechanism on a certificate (or other credentials) provided during prior TLS negotiation.",
      "ja": "開始実体がTLSを使用することを選択した場合、STARTTLSネゴシエーションはSASL交渉（第6節）に進む前に完了しなければなりません。交渉のこの順序は、SASLネゴシエーション中に送信されたセーフガードの認証情報を助けるために、だけでなく、それが可能前TLSネゴシエーション中に提供される証明書（またはその他の資格情報）にSASL EXTERNALメカニズムの使用をベースにする必要があります。"
    },
    {
      "indent": 0,
      "text": "5.3.5. TLS Renegotiation",
      "section_title": true,
      "ja": "5.3.5。 TLSの再ネゴシエーション"
    },
    {
      "indent": 3,
      "text": "The TLS protocol allows either party in a TLS-protected channel to initiate a new handshake that establishes new cryptographic parameters (see [TLS-NEG]). The cases most commonly mentioned are:",
      "ja": "TLSプロトコルは、新しい暗号化パラメータ（[TLS-NEG]を参照）を確立する新しいハンドシェイクを開始するためにTLSで保護されたチャネルのいずれかの当事者ができます。最も一般的に言及した例は以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "1. Refreshing encryption keys.",
      "section_title": true,
      "ja": "1.爽やかな暗号化キー。"
    },
    {
      "indent": 3,
      "text": "2. Wrapping the TLS sequence number as explained in Section 6.1 of [TLS].",
      "ja": "[TLS]のセクション6.1で説明したように2 TLSシーケンス番号をラッピング。"
    },
    {
      "indent": 3,
      "text": "3. Protecting client credentials by completing server authentication first and then completing client authentication over the protected channel.",
      "ja": "3.最初のサーバー認証を完了して、保護されたチャネルを介してクライアント認証を完了することによって、クライアントの資格情報を保護します。"
    },
    {
      "indent": 3,
      "text": "Because it is relatively inexpensive to establish streams in XMPP, for the first two cases it is preferable to use an XMPP stream reset (as described under Section 4.9.3.16) instead of performing TLS renegotiation.",
      "ja": "それは最初の二つの場合について、XMPPにストリームを確立することは比較的安価であるので（セクション4.9.3.16の下に記載されるように）代わりに、TLS再ネゴシエーションを行うXMPPストリームリセットを使用することが好ましいです。"
    },
    {
      "indent": 3,
      "text": "The third case has improved security characteristics when the TLS client (which might be an XMPP server) presents credentials to the TLS server. If communicating such credentials to an unauthenticated TLS server might leak private information, it can be appropriate to complete TLS negotiation for the purpose of authenticating the TLS server to the TLS client and then attempt TLS renegotiation for the purpose of authenticating the TLS client to the TLS server. However, this case is extremely rare because the credentials presented by an XMPP server or XMPP client acting as a TLS client are almost always public (i.e., a PKIX certificate), and therefore providing those credentials before authenticating the XMPP server acting as a TLS server would not in general leak private information.",
      "ja": "（XMPPサーバであるかもしれない）TLSクライアントはTLSサーバーに資格証明書を提示したときに第三の場合は、セキュリティ特性を改善しました。認証されていないTLSサーバに、このような資格情報を伝達することは、個人情報を漏洩する可能性がある場合は、TLSクライアントにTLSサーバーを認証するために、TLSネゴシエーションを完了することが適切で、その後、TLSにTLSクライアントを認証するために、TLSの再交渉を試みることができますサーバ。ただし、この場合は、TLSクライアントとして動作するXMPPサーバーまたはXMPPクライアントが提示した資格情報は、ほとんど公開されているため（すなわち、PKIX証明書）非常にまれであるため、TLSサーバーとして動作するXMPPサーバーを認証する前に、これらの資格情報を提供しますではない一般的なリーク個人情報になります。"
    },
    {
      "indent": 3,
      "text": "As a result, implementers are encouraged to carefully weigh the costs and benefits of TLS renegotiation before supporting it in their software, and XMPP entities that act as TLS clients are discouraged from attempting TLS renegotiation unless the certificate (or other credential information) sent during TLS negotiation is known to be private.",
      "ja": "その結果、実装者は慎重に彼らのソフトウェアでそれをサポートする前に、TLSの再交渉の費用と便益を比較検討することを奨励、およびTLSクライアントが証明書（またはその他の資格情報）をしない限り、TLSの再交渉を試みてからがっかりしているとして機能XMPP実体TLSの間に送信されます交渉は、プライベートであることが知られています。"
    },
    {
      "indent": 3,
      "text": "Support for TLS renegotiation is strictly OPTIONAL. However, implementations that support TLS renegotiation MUST implement and use the TLS Renegotiation Extension [TLS-NEG].",
      "ja": "TLS再ネゴシエーションのサポートは厳密にはオプションです。しかしながら、TLS再ネゴシエーションをサポートする実装は、TLS再ネゴシエーション拡張[TLS-NEG]を実装して使用しなければなりません。"
    },
    {
      "indent": 3,
      "text": "If an entity that does not support TLS renegotiation detects a renegotiation attempt, then it MUST immediately close the underlying TCP connection without returning a stream error (since the violation has occurred at the TLS layer, not the XMPP layer, as described under Section 13.3).",
      "ja": "TLS再ネゴシエーションをサポートしていないエンティティが再交渉の試みを検出した場合、それはすぐに（項13.3で説明したよう違反は、TLS層ではなく、XMPP層で発生しているので）ストリームエラーを返さずに基礎となるTCP接続を閉じる必要があります。"
    },
    {
      "indent": 3,
      "text": "If an entity that supports TLS renegotiation detects a TLS renegotiation attempt that does not use the TLS Renegotiation Extension [TLS-NEG], then it MUST immediately close the underlying TCP connection without returning a stream error (since the violation has occurred at the TLS layer, not the XMPP layer as described under Section 13.3).",
      "ja": "TLS再ネゴシエーションをサポートするエンティティがTLS再ネゴシエーション拡張[TLS-NEG]を使用していないTLS再ネゴシエーションの試みを検出した場合、それはすぐに違反がTLS層で発生しているので、（ストリームエラーを返さずに基本的なTCP接続を閉じる必要がありますセクション13.3で説明したように、XMPPない層）。"
    },
    {
      "indent": 0,
      "text": "5.3.6. TLS Extensions",
      "section_title": true,
      "ja": "5.3.6。 TLS拡張機能"
    },
    {
      "indent": 3,
      "text": "Either party to a stream MAY include any TLS extension during the TLS negotiation itself. This is a matter for the TLS layer, not the XMPP layer.",
      "ja": "ストリームへのいずれの当事者は、TLS交渉自体の間に任意のTLS拡張を含むかもしれません。これは、TLS層ではなく、XMPP層のための問題です。"
    },
    {
      "indent": 0,
      "text": "5.4. Process",
      "section_title": true,
      "ja": "5.4。処理する"
    },
    {
      "indent": 0,
      "text": "5.4.1. Exchange of Stream Headers and Stream Features",
      "section_title": true,
      "ja": "5.4.1。ストリームヘッダとストリーム機能の交換"
    },
    {
      "indent": 3,
      "text": "The initiating entity resolves the FQDN of the receiving entity as specified under Section 3, opens a TCP connection to the advertised port at the resolved IP address, and sends an initial stream header to the receiving entity.",
      "ja": "第3の下に指定されるように、開始エンティティは、受信エンティティのFQDNを解決し、解決されたIPアドレスのアドバタイズポートへのTCP接続を開き、そして受信エンティティに初期ストリームヘッダを送信します。"
    },
    {
      "indent": 3,
      "text": "I: <stream:stream from='juliet@im.example.com' to='im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "I：<ストリーム： 'のxmlns = 'のjabberエン：クライアント：im.example.com 'バージョンは、= '1.0' LANG = XML' '=' にfrom='juliet@im.example.comストリーム' のxmlns：ストリーム=' http://etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "The receiving entity MUST send a response stream header to the initiating entity over the TCP connection opened by the initiating entity.",
      "ja": "受信エンティティは、開始エンティティによって開かれたTCP接続を介して開始エンティティに応答ストリームヘッダを送信しなければなりません。"
    },
    {
      "indent": 3,
      "text": "R: <stream:stream from='im.example.com' id='t7AMCin9zjMNwQKDnplntZPIDEI=' to='juliet@im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "R：<ストリーム：ストリームから= 'im.example.com' ID = 't7AMCin9zjMNwQKDnplntZPIDEI =' to='juliet@im.example.com 'バージョンは、= '1.0' のxml：langの= '' のxmlns =' のjabber EN：クライアント'のxmlns：ストリーム=' のhttp：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "The receiving entity then MUST send stream features to the initiating entity. If the receiving entity supports TLS, the stream features MUST include an advertisement for support of STARTTLS negotiation, i.e., a <starttls/> element qualified by the 'urn:ietf:params:xml:ns:xmpp-tls' namespace.",
      "ja": "次に、受信エンティティは、開始エンティティにストリーム機能を送らなければなりません。受信エンティティは、TLSをサポートしている場合、ストリーム機能はSTARTTLSネゴシエーションのサポートのために広告を含まなければならない、すなわち、「URN：IETF：のparams：XML：NS：XMPP-TLS」によって修飾<STARTTLS />要素の名前空間。"
    },
    {
      "indent": 3,
      "text": "If the receiving entity considers STARTTLS negotiation to be mandatory-to-negotiate, the <starttls/> element MUST contain an empty <required/> child element.",
      "ja": "受信エンティティは、STARTTLSネゴシエーションが必須ツー交渉であると考える場合は、<STARTTLS />要素は、空の<必要/>子要素を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "R: <stream:features> <starttls xmlns='urn:ietf:params:xml:ns:xmpp-tls'> <required/> </starttls> </stream:features>",
      "ja": "R：<ストリーム：機能> <STARTTLS用のxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-TLS'> <必須/> </ STARTTLS> </ストリーム：機能>"
    },
    {
      "indent": 0,
      "text": "5.4.2. Initiation of STARTTLS Negotiation",
      "section_title": true,
      "ja": "5.4.2。 STARTTLSネゴシエーションの開始"
    },
    {
      "indent": 0,
      "text": "5.4.2.1. STARTTLS Command",
      "section_title": true,
      "ja": "5.4.2.1。 STARTTLSコマンド"
    },
    {
      "indent": 3,
      "text": "In order to begin the STARTTLS negotiation, the initiating entity issues the STARTTLS command (i.e., a <starttls/> element qualified by the 'urn:ietf:params:xml:ns:xmpp-tls' namespace) to instruct the receiving entity that it wishes to begin a STARTTLS negotiation to secure the stream.",
      "ja": "STARTTLSネゴシエーションを開始するためには、開始実体はSTARTTLSコマンドを発行する（すなわち、「URN：IETF：のparams：XML：NS：XMPP-TLS」によって修飾<STARTTLS />要素の名前空間）は、受信エンティティを指示することそれは流れを確保するためにSTARTTLSネゴシエーションを開始することを希望します。"
    },
    {
      "indent": 3,
      "text": "I: <starttls xmlns='urn:ietf:params:xml:ns:xmpp-tls'/>",
      "ja": "I：<STARTTLSののxmlns = '壷：IETF：のparams：XML：NS：XMPP-TLS' />"
    },
    {
      "indent": 3,
      "text": "The receiving entity MUST reply with either a <proceed/> element (proceed case) or a <failure/> element (failure case) qualified by the 'urn:ietf:params:xml:ns:xmpp-tls' namespace.",
      "ja": "名前空間受信エンティティは、 '：IETF：paramsは：XML：NS XMPP-TLS URN' によって修飾<進行/>要素（進行場合）または<故障/>要素（障害ケース）のいずれかで応答しなければなりません。"
    },
    {
      "indent": 0,
      "text": "5.4.2.2. Failure Case",
      "section_title": true,
      "ja": "5.4.2.2。障害ケース"
    },
    {
      "indent": 3,
      "text": "If the failure case occurs, the receiving entity MUST return a <failure/> element qualified by the 'urn:ietf:params:xml:ns:xmpp-tls' namespace, close the XML stream, and terminate the underlying TCP connection.",
      "ja": "、名前空間XMLストリームを閉じて、基礎となるTCP接続を終了失敗事例が発生した場合、受信エンティティは、「XMPP-TLS：IETF：のparams：XML：：NS壷」によって修飾<失敗/>要素を返さなければなりません。"
    },
    {
      "indent": 3,
      "text": "R: <failure xmlns='urn:ietf:params:xml:ns:xmpp-tls'/>",
      "ja": "R <故障のxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-TLS' />"
    },
    {
      "indent": 3,
      "text": "R: </stream:stream>",
      "ja": "R：</ストリーム：ストリーム>"
    },
    {
      "indent": 3,
      "text": "Causes for the failure case include but are not limited to:",
      "ja": "障害の場合の原因は、これらに限定されません："
    },
    {
      "indent": 3,
      "text": "1. The initiating entity has sent a malformed STARTTLS command.",
      "section_title": true,
      "ja": "1.開始エンティティは、不正な形式のSTARTTLSコマンドを送信しました。"
    },
    {
      "indent": 3,
      "text": "2. The receiving entity did not offer the STARTTLS feature in its stream features.",
      "ja": "2.受信エンティティは、そのストリーム機能でSTARTTLS機能を提供していませんでした。"
    },
    {
      "indent": 3,
      "text": "3. The receiving entity cannot complete STARTTLS negotiation because of an internal error.",
      "ja": "3.受信エンティティは、内部エラーのため、STARTTLSネゴシエーションを完了することはできません。"
    },
    {
      "indent": 6,
      "text": "Informational Note: STARTTLS failure is not triggered by TLS errors such as bad_certificate or handshake_failure, which are generated and handled during the TLS negotiation itself as described in [TLS].",
      "ja": "情報注：STARTTLS障害が[TLS]で説明されるように生成され、TLSネゴシエーション自体の中に処理されるようbad_certificateや握手_としてTLSエラーによりトリガされません。"
    },
    {
      "indent": 3,
      "text": "If the failure case occurs, the initiating entity MAY attempt to reconnect as explained under Section 3.3.",
      "ja": "障害ケースが発生した場合は、セクション3.3の下で説明したように、開始エンティティは、再接続しようとすることができます。"
    },
    {
      "indent": 0,
      "text": "5.4.2.3. Proceed Case",
      "section_title": true,
      "ja": "5.4.2.3。ケースを進んで"
    },
    {
      "indent": 3,
      "text": "If the proceed case occurs, the receiving entity MUST return a <proceed/> element qualified by the 'urn:ietf:params:xml:ns:xmpp-tls' namespace.",
      "ja": "名前空間進むケースが発生した場合、受信エンティティは、「：IETF：のparams：XML：：NS XMPP-TLS壷」によって修飾<続行/>要素を返さなければなりません。"
    },
    {
      "indent": 3,
      "text": "R: <proceed xmlns='urn:ietf:params:xml:ns:xmpp-tls'/>",
      "ja": "R：< 'URN：IETF：paramsは：XML：NS：XMPP-TLSを' のxmlns =進行/>"
    },
    {
      "indent": 3,
      "text": "The receiving entity MUST consider the TLS negotiation to have begun immediately after sending the closing '>' character of the <proceed/> element to the initiating entity. The initiating entity MUST consider the TLS negotiation to have begun immediately after receiving the closing '>' character of the <proceed/> element from the receiving entity.",
      "ja": "TLSネゴシエーションを考慮しなければならない受信エンティティは、クロージング開始エンティティへの<進む/>要素の「>」文字を送信した直後に開始しています。開始エンティティは、TLS交渉はすぐに受信エンティティから<続行/>要素の終了「>」文字を受け取った後に始まったと考えなければなりません。"
    },
    {
      "indent": 3,
      "text": "The entities now proceed to TLS negotiation as explained in the next section.",
      "ja": "次のセクションで説明したように、エンティティは現在、TLSネゴシエーションに進みます。"
    },
    {
      "indent": 0,
      "text": "5.4.3. TLS Negotiation",
      "section_title": true,
      "ja": "5.4.3。 TLSネゴシエーション"
    },
    {
      "indent": 0,
      "text": "5.4.3.1. Rules",
      "section_title": true,
      "ja": "5.4.3.1。ルール"
    },
    {
      "indent": 3,
      "text": "In order to complete TLS negotiation over the TCP connection, the entities MUST follow the process defined in [TLS].",
      "ja": "TCP接続を介してTLSネゴシエーションを完了するために、エンティティは、[TLS]で定義されたプロセスに従わなければなりません。"
    },
    {
      "indent": 3,
      "text": "The following rules apply:",
      "ja": "次の規則が適用されます。"
    },
    {
      "indent": 3,
      "text": "1. The entities MUST NOT send any further XML data until the TLS negotiation is complete.",
      "ja": "TLSネゴシエーションが完了するまで1エンティティは、任意の更なるXMLデータを送ってはいけません。"
    },
    {
      "indent": 3,
      "text": "2. When using any of the mandatory-to-implement (MTI) ciphersuites specified under Section 13.8, the receiving entity MUST present a certificate.",
      "ja": "2.セクション13.8で指定された強制的に実装（MTI）暗号スイートのいずれかを使用する場合、受信エンティティは、証明書を提示しなければなりません。"
    },
    {
      "indent": 3,
      "text": "3. So that mutual certificate authentication will be possible, the receiving entity SHOULD send a certificate request to the initiating entity, and the initiating entity SHOULD send a certificate to the receiving entity (but for privacy reasons might opt not to send a certificate until after the receiving entity has authenticated to the initiating entity).",
      "ja": "3.相互証明書の認証が可能になるように、受信エンティティは、開始エンティティに証明書要求を送信する必要があり、開始エンティティは受信エンティティに証明書を送るべきである（ただし、プライバシーのために理由は後まで証明書を送信しないように選ぶかもしれません受信エンティティ）は、開始エンティティに認証されています。"
    },
    {
      "indent": 3,
      "text": "4. The receiving entity SHOULD choose which certificate to present based on the domainpart contained in the 'to' attribute of the initial stream header (in essence, this domainpart is functionally equivalent to the Server Name Indication defined for TLS in [TLS-EXT]).",
      "ja": "前記受信エンティティは、（本質的に、このdomainpartは[TLS-EXT]でTLS用に定義されたサーバー名の表示と機能的に同等である初期ストリームヘッダの属性「」の中に含まれるdomainpartに基づいて提示する証明書を選択する必要があります）。"
    },
    {
      "indent": 3,
      "text": "5. To determine if the TLS negotiation will succeed, the initiating entity MUST attempt to validate the receiving entity's certificate in accordance with the certificate validation procedures specified under Section 13.7.2.",
      "ja": "TLSネゴシエーションが成功するかどうかを判断するために5.開始エンティティは、セクション13.7.2の下で指定された証明書の検証手順に従って受信エンティティの証明書を検証しようとしなければなりません。"
    },
    {
      "indent": 3,
      "text": "6. If the initiating entity presents a certificate, the receiving entity too MUST attempt to validate the initiating entity's certificate in accordance with the certificate validation procedures specified under Section 13.7.2.",
      "ja": "6.開始エンティティが証明書を提示した場合、受信エンティティは、あまりにも、セクション13.7.2の下で指定された証明書の検証手順に従って開始するエンティティの証明書を検証しようとしなければなりません。"
    },
    {
      "indent": 3,
      "text": "7. Following successful TLS negotiation, all further data transmitted by either party MUST be protected with the negotiated algorithms, keys, and secrets (i.e., encrypted, integrity-protected, or both depending on the ciphersuite used).",
      "ja": "7.成功したTLS交渉の後、いずれかの当事者によって送信される全ての更なるデータが交渉されたアルゴリズム、キー、および秘密で保護されなければならない（すなわち、暗号化され、整合性が保護、またはその両方を使用暗号スイートによって異なります）。"
    },
    {
      "indent": 6,
      "text": "Security Warning: See Section 13.8 regarding ciphersuites that MUST be supported for TLS; naturally, other ciphersuites MAY be supported as well.",
      "ja": "セキュリティ警告：TLSのためにサポートしなければならない暗号スイートに関してセクション13.8を参照してください。当然、他の暗号スイートも同様にサポートされるかもしれません。"
    },
    {
      "indent": 0,
      "text": "5.4.3.2. TLS Failure",
      "section_title": true,
      "ja": "5.4.3.2。 TLSの失敗"
    },
    {
      "indent": 3,
      "text": "If the TLS negotiation results in failure, the receiving entity MUST terminate the TCP connection.",
      "ja": "故障でTLSネゴシエーション結果ならば、受信エンティティは、TCP接続を終えなければなりません。"
    },
    {
      "indent": 3,
      "text": "The receiving entity MUST NOT send a closing </stream> tag before terminating the TCP connection (since the failure has occurred at the TLS layer, not the XMPP layer as described under Section 13.3).",
      "ja": "受信エンティティはTCP接続終了前に閉じる</ストリーム>タグを送ってはいけません（障害がTLS層で発生したために、セクション13.3で説明したようにしないXMPP層）。"
    },
    {
      "indent": 3,
      "text": "The initiating entity MAY attempt to reconnect as explained under Section 3.3, with or without attempting TLS negotiation (in accordance with local service policy, user-configured preferences, etc.).",
      "ja": "開始エンティティは、ASまたは（ローカルサービスポリシー、ユーザが設定した好みなどに応じて）TLSネゴシエーションを試みることなく、3.3節の下で説明再接続を試みることができます。"
    },
    {
      "indent": 0,
      "text": "5.4.3.3. TLS Success",
      "section_title": true,
      "ja": "5.4.3.3。 TLS成功"
    },
    {
      "indent": 3,
      "text": "If the TLS negotiation is successful, then the entities MUST proceed as follows.",
      "ja": "TLSネゴシエーションが成功した場合は、次のように実体を進める必要があります。"
    },
    {
      "indent": 3,
      "text": "1. The initiating entity MUST discard any information transmitted in layers above TCP that it obtained from the receiving entity in an insecure manner before TLS took effect (e.g., the receiving entity's 'from' address or the stream ID and stream features received from the receiving entity).",
      "ja": "1.開始エンティティは、TLSが発効する前に、それが安全でない方法で、受信エンティティから得られたTCP上記層に送信された情報を破棄しなければならない（例えば、受信エンティティのアドレス「から」またはストリームID及びストリームが受信から受信した特徴エンティティ）。"
    },
    {
      "indent": 3,
      "text": "2. The receiving entity MUST discard any information transmitted in layers above TCP that it obtained from the initiating entity in an insecure manner before TLS took effect (e.g., the initiating entity's 'from' address).",
      "ja": "TLSが発効する前に、前記受信エンティティは、それが安全でない方法で開始エンティティから得られたTCP上記層に送信された情報を破棄しなければならない（例えば、アドレス「」から開始エンティティの）。"
    },
    {
      "indent": 3,
      "text": "3. The initiating entity MUST send a new initial stream header to the receiving entity over the encrypted connection (as specified under Section 4.3.3, the initiating entity MUST NOT send a closing </stream> tag before sending the new initial stream header, since the receiving entity and initiating entity MUST consider the original stream to be replaced upon success of the TLS negotiation).",
      "ja": "3.開始エンティティは、4.3.3の下に指定されているように、開始エンティティは、新たな初期ストリームヘッダを送信する前に終了</ストリーム>タグを送ってはいけません（暗号化された接続を介して受信エンティティに新しい初期ストリームヘッダを送らなければなりません元のストリームを考慮しなければならないエンティティを受信し、開始実体）はTLS交渉の成功を交換するからです。"
    },
    {
      "indent": 3,
      "text": "I: <stream:stream from='juliet@im.example.com' to='im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "I：<ストリーム： 'のxmlns = 'のjabberエン：クライアント：im.example.com 'バージョンは、= '1.0' LANG = XML' '=' にfrom='juliet@im.example.comストリーム' のxmlns：ストリーム=' http://etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "4. The receiving entity MUST respond with a new response stream header over the encrypted connection (for which it MUST generate a new stream ID instead of reusing the old stream ID).",
      "ja": "前記受信エンティティは、（それが代わりに古いストリームIDを再利用の新しいストリームIDを生成しなければならないため）暗号化接続を介して新しい応答ストリームヘッダで応答しなければなりません。"
    },
    {
      "indent": 3,
      "text": "R: <stream:stream from='im.example.com' id='vgKi/bkYME8OAj4rlXMkpucAqe4=' to='juliet@im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "R：<ストリーム：= 'im.example.com' ID = 'vgKi / bkYME8OAj4rlXMkpucAqe4 =' to='juliet@im.example.com 'バージョン= '1.0' のxml：langの= 'からのストリームEN' のxmlns =' ジャバー：クライアントののxmlns：ストリーム= 'のhttp：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "5. The receiving entity also MUST send stream features to the initiating entity, which MUST NOT include the STARTTLS feature but which SHOULD include the SASL stream feature as described under Section 6 (see especially Section 6.4.1 regarding the few reasons why the SASL stream feature would not be offered here).",
      "ja": "5.受信エンティティはまた、第6節で説明したようSTARTTLS機能を含んではいけませんが、これはSASLストリーム機能を含むべきである開始エンティティにストリーム機能を送らなければなりません（いくつかの理由については、特に6.4.1項を参照してくださいなぜSASLストリーム機能が）、ここで提供されていないでしょう。"
    },
    {
      "indent": 3,
      "text": "R: <stream:features> <mechanisms xmlns='urn:ietf:params:xml:ns:xmpp-sasl'> <mechanism>EXTERNAL</mechanism> <mechanism>SCRAM-SHA-1-PLUS</mechanism> <mechanism>SCRAM-SHA-1</mechanism> <mechanism>PLAIN</mechanism> </mechanisms> </stream:features>",
      "ja": "R：<ストリーム：機能> <機構のxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-SASL'> <メカニズム> EXTERNAL </機構> <メカニズム> SCRAM-SHA-1-PLUS </機構> <機構> SCRAM-SHA-1 </機構> <メカニズム> PLAIN </機構> </メカニズム> </ストリーム：機能>"
    },
    {
      "indent": 0,
      "text": "6. SASL Negotiation",
      "section_title": true,
      "ja": "6. SASLネゴシエーション"
    },
    {
      "indent": 0,
      "text": "6.1. Fundamentals",
      "section_title": true,
      "ja": "6.1。基礎編"
    },
    {
      "indent": 3,
      "text": "XMPP includes a method for authenticating a stream by means of an XMPP-specific profile of the Simple Authentication and Security Layer protocol (see [SASL]). SASL provides a generalized method for adding authentication support to connection-based protocols, and XMPP uses an XML namespace profile of SASL that conforms to the profiling requirements of [SASL]. The XML namespace name for the SASL extension is 'urn:ietf:params:xml:ns:xmpp-sasl'.",
      "ja": "XMPPは（[SASL]参照）、簡易認証およびセキュリティレイヤプロトコルのXMPP固有のプロファイルを用いてストリームを認証するための方法を含みます。 SASLは、接続ベースのプロトコルに認証サポートを追加するための一般的な方法を提供し、XMPPは[SASL]のプロファイリング要件に準拠SASLのXML名前空間プロファイルを使用します。 SASL拡張のためのXML名前空間名は 'URN：IETF：のparams：XML：NS：XMPP-SASL' です。"
    },
    {
      "indent": 0,
      "text": "6.2. Support",
      "section_title": true,
      "ja": "6.2。サポート"
    },
    {
      "indent": 3,
      "text": "Support for SASL negotiation is REQUIRED in XMPP client and server implementations.",
      "ja": "SASL交渉のサポートは、XMPPクライアントとサーバ実装で必要とされます。"
    },
    {
      "indent": 0,
      "text": "6.3. Stream Negotiation Rules",
      "section_title": true,
      "ja": "6.3。ストリーム交渉ルール"
    },
    {
      "indent": 0,
      "text": "6.3.1. Mandatory-to-Negotiate",
      "section_title": true,
      "ja": "6.3.1。必須ツーネゴシエート"
    },
    {
      "indent": 3,
      "text": "The parties to a stream MUST consider SASL as mandatory-to-negotiate.",
      "ja": "ストリームへの当事者は必須ツー交渉としてSASLを考慮する必要があります。"
    },
    {
      "indent": 0,
      "text": "6.3.2. Restart",
      "section_title": true,
      "ja": "6.3.2。再起動"
    },
    {
      "indent": 3,
      "text": "After SASL negotiation, the parties MUST restart the stream.",
      "ja": "SASL交渉の後、当事者は、ストリームを再起動する必要があります。"
    },
    {
      "indent": 0,
      "text": "6.3.3. Mechanism Preferences",
      "section_title": true,
      "ja": "6.3.3。メカニズムの設定"
    },
    {
      "indent": 3,
      "text": "Any entity that will act as a SASL client or a SASL server MUST maintain an ordered list of its preferred SASL mechanisms according to the client or server, where the list is ordered according to local policy or user configuration (which SHOULD be in order of perceived strength to enable the strongest authentication possible). The initiating entity MUST maintain its own preference order independent of the preference order of the receiving entity. A client MUST try SASL mechanisms in its preference order. For example, if the server offers the ordered list \"PLAIN SCRAM-SHA-1 GSSAPI\" or \"SCRAM-SHA-1 GSSAPI PLAIN\" but the client's ordered list is \"GSSAPI SCRAM-SHA-1\", the client MUST try GSSAPI first and then SCRAM-SHA-1 but MUST NOT try PLAIN (since PLAIN is not on its list).",
      "ja": "SASLクライアントまたはSASLサーバとして動作する任意のエンティティは、リストが知覚の順序でなければならないローカルポリシーまたはユーザ設定（に従って順序付けされているクライアントまたはサーバによれば、その好ましいSASLメカニズムの順序付けられたリストを維持しなければなりません可能な最も強力な認証を有効にする強さ）。開始エンティティは、受信エンティティの優先順位とは無関係に、独自の優先順位を維持しなければなりません。クライアントは、その優先順位にSASLメカニズムを試みなければなりません。例えば、サーバは順序付けられたリスト \"PLAIN SCRAM-SHA-1 GSSAPI\" または \"SCRAM-SHA-1 GSSAPI PLAIN\" を提供していますが、のリストを命じたクライアントは、 \"GSSAPI SCRAM-SHA-1\" で、クライアントが最初にGSSAPIを試みなければならない場合（PLAINはそのリストに載っていないので）、その後、SCRAM-SHA-1が、PLAINを試してはなりません。"
    },
    {
      "indent": 0,
      "text": "6.3.4. Mechanism Offers",
      "section_title": true,
      "ja": "6.3.4。メカニズムオファー"
    },
    {
      "indent": 3,
      "text": "If the receiving entity considers TLS negotiation (Section 5) to be mandatory-to-negotiate before it will accept authentication with a particular SASL mechanism, it MUST NOT advertise that mechanism in its list of available SASL mechanisms before TLS negotiation has been completed.",
      "ja": "受信エンティティは、それが特定のSASL機構による認証を受け入れる前に、TLSネゴシエーション（第5節）が必須ツー交渉であると考える場合はTLS交渉が完了する前に、それが可能なSASLメカニズムのリストにそのメカニズムを広告してはなりません。"
    },
    {
      "indent": 3,
      "text": "The receiving entity SHOULD offer the SASL EXTERNAL mechanism if both of the following conditions hold:",
      "ja": "次の両方の条件が保持している場合、受信エンティティは、SASL EXTERNALメカニズムを提供する必要があります："
    },
    {
      "indent": 3,
      "text": "1. During TLS negotiation the initiating entity presented a certificate that is acceptable to the receiving entity for purposes of strong identity verification in accordance with local service policies (e.g., because said certificate is unexpired, is unrevoked, and is anchored to a root trusted by the receiving entity).",
      "ja": "1. TLSネゴシエーション中に開始する事業体は、証明書は、期限が切れていないですUNREVOKEDあり、かつによって信頼されたルートに固定されていると言ったので、ローカルサービスポリシー（例えば、に従い、強力な本人確認のために受信エンティティに受け入れられる証明書を提示しました受信エンティティ）。"
    },
    {
      "indent": 3,
      "text": "2. The receiving entity expects that the initiating entity will be able to authenticate and authorize as the identity provided in the certificate; in the case of a server-to-server stream, the receiving entity might have such an expectation because a DNS domain name presented in the initiating entity's certificate matches the domain referenced in the 'from' attribute of the initial stream header, where the matching rules of [TLS-CERTS] apply; in the case of a client-to-server stream, the receiving entity might have such an expectation because the bare JID presented in the initiating entity's certificate matches a user account that is registered with the server or because other information contained in the initiating entity's certificate matches that of an entity that has permission to use the server for access to an XMPP network.",
      "ja": "前記受信エンティティは、開始エンティティは、認証および証明書に提供される識別情報として許可することができるであろうことを期待します。開始エンティティの証明書で提示DNSドメイン名は、初期ストリームヘッダの属性、マッチング「から」で参照ドメインと一致するため、サーバー間のストリームの場合には、受信エンティティは、そのような期待を持っているかもしれません[TLS-CERTS]適用のルール。開始エンティティの証明書で提示裸JIDは、サーバーまたは他の情報は、開始エンティティの証明書に含まれているため、登録されたユーザーアカウントと一致するため、クライアントからサーバへのストリームの場合には、受信エンティティは、そのような期待を持っているかもしれませんXMPPネットワークにアクセスするためのサーバを使用する権限を持っているエンティティのと一致します。"
    },
    {
      "indent": 3,
      "text": "However, the receiving entity MAY offer the SASL EXTERNAL mechanism under other circumstances, as well.",
      "ja": "しかしながら、受信エンティティは、同様に、他の状況下でSASL EXTERNAL機構を提供することができます。"
    },
    {
      "indent": 3,
      "text": "When the receiving entity offers the SASL EXTERNAL mechanism, the receiving entity SHOULD list the EXTERNAL mechanism first among its offered SASL mechanisms and the initiating entity SHOULD attempt SASL negotiation using the EXTERNAL mechanism first (this preference will tend to increase the likelihood that the parties can negotiate mutual certificate authentication).",
      "ja": "受信エンティティは、SASL EXTERNALメカニズムを提供しています場合は、受信エンティティは、その提供するSASLメカニズムの中で最初の外部機構をリストする必要がありますし、開始エンティティは、最初の外部機構を使用してSASL交渉を試みるべきである（この設定は、当事者ができると可能性を増加させる傾向があるだろう）相互証明書認証を交渉します。"
    },
    {
      "indent": 3,
      "text": "Section 13.8 specifies SASL mechanisms that MUST be supported; naturally, other SASL mechanisms MAY be supported as well.",
      "ja": "セクション13.8をサポートしなければなりませんSASLメカニズムを指定します。当然、他のSASLメカニズムも同様にサポートされるかもしれません。"
    },
    {
      "indent": 6,
      "text": "Informational Note: Best practices for the use of SASL in the context of XMPP are described in [XEP-0175] for the ANONYMOUS mechanism and in [XEP-0178] for the EXTERNAL mechanism.",
      "ja": "情報注：XMPPの文脈においてSASLの使用のためのベスト・プラクティスは、外部機構に[XEP-0178】ANONYMOUS機構およびの[XEP-0175]に記載されています。"
    },
    {
      "indent": 0,
      "text": "6.3.5. Data Formatting",
      "section_title": true,
      "ja": "6.3.5。データフォーマット"
    },
    {
      "indent": 3,
      "text": "The following data formatting rules apply to the SASL negotiation:",
      "ja": "以下のデータフォーマットの規則はSASL交渉に適用されます。"
    },
    {
      "indent": 3,
      "text": "1. During SASL negotiation, the entities MUST NOT send any whitespace as separators between XML elements (i.e., from the last character of the first-level <auth/> element qualified by the 'urn:ietf:params:xml:ns:xmpp-sasl' namespace as sent by the initiating entity, until the last character of the first-level <success/> element qualified by the 'urn:ietf:params:xml:ns:xmpp-sasl' namespace as sent by the receiving entity). This prohibition helps to ensure proper security layer byte precision. Any such whitespace shown in the SASL examples provided in this document is included only for the sake of readability.",
      "ja": "1. SASLネゴシエーションの間、実体は「壷によって修飾第一レベルの<auth />要素の最後の文字から、すなわち（XML要素間の区切りとして空白を送ってはいけません：IETFを：のparams：XML：NS：XMPP -sasl」名前空間で修飾された最初のレベルの<成功/>要素の最後の文字まで、開始エンティティによって送信されたとして 『URN：受信エンティティによって送信されたとしてXMPP-SASL』名前空間：IETF：のparams：XML：NS ）。この禁止は、適切なセキュリティレイヤバイト精度を確保するのに役立ちます。本書で提供されるSASLの例に示すような任意の空白のみ読みやすさのために含まれています。"
    },
    {
      "indent": 3,
      "text": "2. Any XML character data contained within the XML elements MUST be encoded using base 64, where the encoding adheres to the definition in Section 4 of [BASE64] and where the padding bits are set to zero.",
      "ja": "2. XML要素内に含まれる任意のXML文字データを符号化する[BASE64]のセクション4で定義に付着し、パディングビットがゼロに設定されるベース64を使用して符号化されなければなりません。"
    },
    {
      "indent": 3,
      "text": "3. As formally specified in the XML schema for the 'urn:ietf:params:xml:ns:xmpp-sasl' namespace under Appendix A.4, the receiving entity MAY include one or more application-specific child elements inside the <mechanisms/> element to provide information that might be needed by the initiating entity in order to complete successful SASL negotiation using one or more of the offered mechanisms; however, the syntax and semantics of all such elements are out of scope for this specification (see [XEP-0233] for one example).",
      "ja": "3.として正式のためのXMLスキーマで指定した「URN：IETF：のparams：XML：NS：XMPP-SASL」付録A.4、受信エンティティ下の名前空間には、<メカニズム内部の一つ以上のアプリケーション固有の子要素を含んでもよいです/>要素は、提供メカニズムの一つ以上を使用して成功したSASL交渉を完了するために開始するエンティティによって必要とされるかもしれない情報を提供します。しかしながら、全てのこのような要素の構文およびセマンティクスは、（一例として[XEP-0233]を参照）は、この明細書の範囲外です。"
    },
    {
      "indent": 0,
      "text": "6.3.6. Security Layers",
      "section_title": true,
      "ja": "6.3.6。セキュリティ層"
    },
    {
      "indent": 3,
      "text": "Upon successful SASL negotiation that involves negotiation of a security layer, both the initiating entity and the receiving entity MUST discard any application-layer state (i.e, state from the XMPP layer, excluding state from the TLS negotiation or SASL negotiation).",
      "ja": "セキュリティ層のネゴシエーションを伴う成功SASLネゴシエーション時に、開始エンティティ及び受信エンティティの両方が任意のアプリケーション層の状態を破棄しなければならない（すなわち、XMPP層から状態、TLSネゴシエーションまたはSASLネゴシエーションの状態を除きます）。"
    },
    {
      "indent": 0,
      "text": "6.3.7. Simple User Name",
      "section_title": true,
      "ja": "6.3.7。シンプルなユーザー名"
    },
    {
      "indent": 3,
      "text": "Some SASL mechanisms (e.g., CRAM-MD5, DIGEST-MD5, and SCRAM) specify that the authentication identity used in the context of such mechanisms is a \"simple user name\" (see Section 2 of [SASL] as well as [SASLPREP]). The exact form of the simple user name in any particular mechanism or deployment thereof is a local matter, and a simple user name does not necessarily map to an application identifier such as a JID or JID component (e.g., a localpart). However, in the absence of local information provided by the server, an XMPP client SHOULD assume that the authentication identity for such a SASL mechanism is a simple user name equal to the localpart of the user's JID.",
      "ja": "いくつかのSASL機構（例えば、CRAM-MD5、DIGEST-MD5、およびSCRAM）[SASL]のセクション2と同様に[SASLPREP]を参照（そのような機構の文脈で使用される認証IDが「単純なユーザ名」であることを指定）。任意の特定の機構または配置が単純ユーザ名の正確な形態は、ローカルの問題である、簡単なユーザー名は、必ずしもそのようなJIDまたはJID成分（例えば、ローカル部分）としてアプリケーション識別子にマッピングされません。ただし、サーバーによって提供されるローカル情報がない場合には、XMPPクライアントは、SASLメカニズム用の認証IDは、ユーザーのJIDのローカル部分に等しい、単純なユーザー名であることを前提とすべきです。"
    },
    {
      "indent": 0,
      "text": "6.3.8. Authorization Identity",
      "section_title": true,
      "ja": "6.3.8。認証アイデンティティ"
    },
    {
      "indent": 3,
      "text": "An authorization identity is an OPTIONAL identity included by the initiating entity to specify an identity to act as (see Section 2 of [SASL]). In client-to-server streams, it would most likely be used by an administrator to perform some management task on behalf of another user, whereas in server-to-server streams it would most likely be used to specify a particular add-on service at an XMPP service (e.g., a multi-user chat server at conference.example.com that is hosted by the example.com XMPP service). If the initiating entity wishes to act on behalf of another entity and the selected SASL mechanism supports transmission of an authorization identity, the initiating entity MUST provide an authorization identity during SASL negotiation. If the initiating entity does not wish to act on behalf of another entity, it MUST NOT provide an authorization identity.",
      "ja": "認可IDは、（[SASL]の第2節を参照）として機能するようにIDを指定するために開始するエンティティによって含まオプションのアイデンティティです。サーバー間で最も可能性の高い特定のアドオンサービスを指定するために使用されるストリームに対し、クライアントからサーバーへのストリームでは、最も可能性が高い、別のユーザーに代わって、いくつかの管理タスクを実行するには、管理者によって使用されますXMPPサービス（例えば、example.comのXMPPサービスによってホストされているconference.example.comでマルチユーザチャットサーバ）で。開始エンティティが別のエンティティを代表して行動することを希望すると、選択したSASLメカニズムは認証アイデンティティの伝送をサポートしている場合、開始実体はSASLネゴシエーション中に、承認のアイデンティティを提供しなければなりません。開始エンティティが別のエンティティを代表して行動したくない場合は、認証アイデンティティを提供してはなりません。"
    },
    {
      "indent": 3,
      "text": "In the case of client-to-server communication, the value of an authorization identity MUST be a bare JID (<localpart@domainpart>) rather than a full JID (<localpart@domainpart/resourcepart>).",
      "ja": "クライアントからサーバへの通信の場合には、承認のアイデンティティの値は、裸JID（<ローカル部分@ domainpart>）よりもむしろ完全なJID（<ローカル部分@ domainpart / resourcepart>）でなければなりません。"
    },
    {
      "indent": 3,
      "text": "In the case of server-to-server communication, the value of an authorization identity MUST be a domainpart only (<domainpart>).",
      "ja": "サーバ間通信の場合には、承認のアイデンティティの値のみ（<domainpart>）domainpartなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the initiating entity provides an authorization identity during SASL negotiation, the receiving entity is responsible for verifying that the initiating entity is in fact allowed to assume the specified authorization identity; if not, the receiving entity MUST return an <invalid-authzid/> SASL error as described under Section 6.5.6.",
      "ja": "開始実体はSASLネゴシエーション中に認可IDを提供する場合、受信エンティティは、開始実体が実際に指定された認可IDとさせていることを確認する責任があります。ない場合は、セクション6.5.6で説明したように、受信エンティティは、<無効authzidは/> SASLエラーを返さなければなりません。"
    },
    {
      "indent": 0,
      "text": "6.3.9. Realms",
      "section_title": true,
      "ja": "6.3.9。レルム"
    },
    {
      "indent": 3,
      "text": "The receiving entity MAY include a realm when negotiating certain SASL mechanisms (e.g., both the GSSAPI and DIGEST-MD5 mechanisms allow the authentication exchange to include a realm, though in different ways, whereas the EXTERNAL, SCRAM, and PLAIN mechanisms do not). If the receiving entity does not communicate a realm, the initiating entity MUST NOT assume that any realm exists. The realm MUST be used only for the purpose of authentication; in particular, an initiating entity MUST NOT attempt to derive an XMPP domainpart from the realm information provided by the receiving entity.",
      "ja": "特定のSASLメカニズムを（異なる方法でもEXTERNAL、SCRAM、およびPLAINメカニズムがないのに対し、例えば、両方のGSSAPIとDIGEST-MD5機構は、領域が含まれるように、認証情報の交換を可能にする）ネゴシエートするとき受信エンティティは、レルムを含むかもしれません。受信エンティティは、レルムを通信しない場合は、開始エンティティは、任意の領域が存在すると仮定してはいけません。レルムは、認証だけの目的のために使用されなければなりません。具体的には、開始エンティティは、受信エンティティが提供するレルム情報からXMPPのdomainpartを導き出すのを試みてはいけません。"
    },
    {
      "indent": 0,
      "text": "6.3.10. Round Trips",
      "section_title": true,
      "ja": "6.3.10。往復"
    },
    {
      "indent": 3,
      "text": "[SASL] specifies that a using protocol such as XMPP can define two methods by which the protocol can save round trips where allowed for the SASL mechanism:",
      "ja": "[SASLようなXMPPとして使用プロトコルはSASL機構に許可ここプロトコルはラウンドトリップを保存することが可能な2つのメソッドを定義することができることを指定します。"
    },
    {
      "indent": 3,
      "text": "1. When the SASL client (the XMPP \"initiating entity\") requests an authentication exchange, it can include \"initial response\" data with its request if appropriate for the SASL mechanism in use. In XMPP, this is done by including the initial response as the XML character data of the <auth/> element.",
      "ja": "SASLクライアント（XMPP「エンティティを開始するには」）認証交換を要求すると1は、それが使用されているSASLメカニズムのために適切であれば、その要求に「初期応答」のデータを含めることができます。 XMPPでは、これは<AUTH />要素のXML文字データとして初期応答を含むことによって行われます。"
    },
    {
      "indent": 3,
      "text": "2. At the end of the authentication exchange, the SASL server (the XMPP \"receiving entity\") can include \"additional data with success\" if appropriate for the SASL mechanism in use. In XMPP, this is done by including the additional data as the XML character data of the <success/> element.",
      "ja": "認証交換の終了時2.使用中のSASL機構に適している場合、SASLサーバ（「受信エンティティ」XMPP）は、「成功と追加データ」を含むことができます。 XMPPでは、これは<成功/>要素のXML文字データなどの追加データを含むことによって行われます。"
    },
    {
      "indent": 3,
      "text": "For the sake of protocol efficiency, it is REQUIRED for clients and servers to support these methods and RECOMMENDED to use them; however, clients and servers MUST support the less efficient modes as well.",
      "ja": "プロトコル効率のために、これらのメソッドをサポートするために、クライアントとサーバーに必要とそれらを使用することをお勧めします。ただし、クライアントとサーバは、同様に効率の低いモードをサポートしなければなりません。"
    },
    {
      "indent": 0,
      "text": "6.4. Process",
      "section_title": true,
      "ja": "6.4。処理する"
    },
    {
      "indent": 3,
      "text": "The process for SASL negotiation is as follows.",
      "ja": "次のようにSASLネゴシエーションのためのプロセスがあります。"
    },
    {
      "indent": 0,
      "text": "6.4.1. Exchange of Stream Headers and Stream Features",
      "section_title": true,
      "ja": "6.4.1。ストリームヘッダとストリーム機能の交換"
    },
    {
      "indent": 3,
      "text": "If SASL negotiation follows successful STARTTLS negotiation (Section 5), then the SASL negotiation occurs over the protected stream that has already been negotiated. If not, the initiating entity resolves the FQDN of the receiving entity as specified under Section 3, opens a TCP connection to the advertised port at the resolved IP address, and sends an initial stream header to the receiving entity. In either case, the receiving entity will receive an initial stream from the initiating entity.",
      "ja": "SASL交渉が成功STARTTLSネゴシエーション（第5節）以下の場合は、SASL交渉はすでに交渉されている保護されたストリーム上で発生します。ない場合は、開始エンティティは、第3節の下に指定されているように、受信エンティティのFQDNを解決する解決されたIPアドレスのアドバタイズされたポートへのTCP接続をオープンし、受信エンティティに初期ストリームヘッダを送信します。いずれの場合においても、受信エンティティは、開始エンティティから最初のストリームを受信します。"
    },
    {
      "indent": 3,
      "text": "I: <stream:stream from='juliet@im.example.com' to='im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "I：<ストリーム： 'のxmlns = 'のjabberエン：クライアント：im.example.com 'バージョンは、= '1.0' LANG = XML' '=' にfrom='juliet@im.example.comストリーム' のxmlns：ストリーム=' http://etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "When the receiving entity processes an initial stream header from the initiating entity, it MUST send a response stream header to the initiating entity (for which it MUST generate a unique stream ID. If TLS negotiation has already succeeded, then this stream ID MUST be different from the stream ID sent before TLS negotiation succeeded).",
      "ja": "受信エンティティは、開始エンティティから初期ストリームヘッダを処理するとき、それは一意のストリームIDを生成する必要のある（開始エンティティに応答ストリームヘッダを送信しなければならない。TLSネゴシエーションが既に成功した場合、このストリームIDが異なっていなければなりません）TLS交渉の前に送られたストリームIDが成功したから。"
    },
    {
      "indent": 3,
      "text": "R: <stream:stream from='im.example.com' id='vgKi/bkYME8OAj4rlXMkpucAqe4=' to='juliet@im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "R：<ストリーム：= 'im.example.com' ID = 'vgKi / bkYME8OAj4rlXMkpucAqe4 =' to='juliet@im.example.com 'バージョン= '1.0' のxml：langの= 'からのストリームEN' のxmlns =' ジャバー：クライアントののxmlns：ストリーム= 'のhttp：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "The receiving entity also MUST send stream features to the initiating entity. The stream features SHOULD include an advertisement for support of SASL negotiation, i.e., a <mechanisms/> element qualified by the 'urn:ietf:params:xml:ns:xmpp-sasl' namespace. Typically there are only three cases in which support for SASL negotiation would not be advertised here: o TLS negotiation needs to happen before SASL can be offered (i.e., TLS is required and the receiving entity is responding to the very first initial stream header it has received for this connection attempt).",
      "ja": "受信エンティティは、開始エンティティにストリーム機能を送らなければなりません。名前空間ストリーム機能は、「：IETF：のparams：XML：：NS XMPP-SASL壷」によって修飾、すなわち、<メカニズム/>要素、SASL交渉のサポートのための広告を含むべきです。一般的に宣伝されないSASLネゴシエーションをサポートする唯一の3例はここにあります：TLS交渉が起こる必要があるoをSASLが提供される前に（すなわち、TLSが必要とされ、受信エンティティは、それが持っている一番最初の初期ストリームヘッダに応答しています）この接続の試行のために受け取りました。"
    },
    {
      "indent": 3,
      "text": "o SASL negotiation is impossible for a server-to-server connection (i.e., the initiating server has not provided a certificate that would enable strong authentication and therefore the receiving server is falling back to weak identity verification using the Server Dialback protocol [XEP-0220]).",
      "ja": "O SASL交渉は（すなわち、開始サーバはXEP-0220 [強力な認証を可能にするため、受信側サーバーはサーバーのダイアルバックプロトコルを使用して、弱い本人確認にフォールバックされた証明書を提供していないサーバー間の接続には不可能です]）。"
    },
    {
      "indent": 3,
      "text": "o SASL has already been negotiated (i.e., the receiving entity is responding to an initial stream header sent as a stream restart after successful SASL negotiation).",
      "ja": "O SASLは既に（すなわち、受信エンティティは、成功したSASLネゴシエーションの後流再開として送信される初期ストリームヘッダに応答して）交渉されました。"
    },
    {
      "indent": 3,
      "text": "The <mechanisms/> element MUST contain one <mechanism/> child element for each authentication mechanism the receiving entity offers to the initiating entity. As noted, the order of <mechanism/> elements in the XML indicates the preference order of the SASL mechanisms according to the receiving entity (which is not necessarily the preference order according to the initiating entity).",
      "ja": "<メカニズム/>要素は、受信エンティティは、開始エンティティに提供する各認証機構のための1つの<メカニズム/>子要素を含まなければなりません。述べたように、順<機構は/> XMLの要素は、（必ずしも開始エンティティに係る優先順位はない）受信エンティティによるSASLメカニズムの優先順位を示しています。"
    },
    {
      "indent": 3,
      "text": "R: <stream:features> <mechanisms xmlns='urn:ietf:params:xml:ns:xmpp-sasl'> <mechanism>EXTERNAL</mechanism> <mechanism>SCRAM-SHA-1-PLUS</mechanism> <mechanism>SCRAM-SHA-1</mechanism> <mechanism>PLAIN</mechanism> </mechanisms> </stream:features>",
      "ja": "R：<ストリーム：機能> <機構のxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-SASL'> <メカニズム> EXTERNAL </機構> <メカニズム> SCRAM-SHA-1-PLUS </機構> <機構> SCRAM-SHA-1 </機構> <メカニズム> PLAIN </機構> </メカニズム> </ストリーム：機能>"
    },
    {
      "indent": 0,
      "text": "6.4.2. Initiation",
      "section_title": true,
      "ja": "6.4.2。イニシエーション"
    },
    {
      "indent": 3,
      "text": "In order to begin the SASL negotiation, the initiating entity sends an <auth/> element qualified by the 'urn:ietf:params:xml:ns:xmpp-sasl' namespace and includes an appropriate value for the 'mechanism' attribute, thus starting the handshake for that particular authentication mechanism. This element MAY contain XML character data (in SASL terminology, the \"initial response\") if the mechanism supports or requires it. If the initiating entity needs to send a zero-length initial response, it MUST transmit the response as a single equals sign character (\"=\"), which indicates that the response is present but contains no data.",
      "ja": "このように、名前空間と「メカニズム」属性の適切な値を含んでSASL交渉を開始するためには、開始実体は「XMPP-SASL：IETF：のparams：XML：：NS壷」によって修飾の<auth />要素を送りますその特定の認証機構のためのハンドシェイクを開始します。メカニズムがサポートしているか、それを必要とする場合、この要素は（SASLの用語、「初期応答」で）XML文字データを含むかもしれません。開始エンティティが長さゼロの初期応答を送信する必要がある場合、単一の等号は、応答が存在することを示しているが、データを含まない文字（「=」）、記号として、それが応答を送信しなければなりません。"
    },
    {
      "indent": 3,
      "text": "I: <auth xmlns='urn:ietf:params:xml:ns:xmpp-sasl' mechanism='PLAIN'>AGp1bGlldAByMG0zMG15cjBtMzA=</auth>",
      "ja": "I：<AUTHのxmlns = '壷：IETF：のparams：XML：NS：XMPP-SASL' メカニズム= 'PLAIN'> AGp1bGlldAByMG0zMG15cjBtMzA = </ AUTH>"
    },
    {
      "indent": 3,
      "text": "If the initiating entity subsequently sends another <auth/> element and the ongoing authentication handshake has not yet completed, the receiving entity MUST discard the ongoing handshake and MUST process a new handshake for the subsequently requested SASL mechanism.",
      "ja": "その後、別の<auth />要素と継続的な認証ハンドシェイクを送信開始するエンティティがまだ完了していない場合は、受信エンティティは、継続的なハンドシェイクを捨てなければなりませんし、その後要求されたSASLメカニズムのための新たなハンドシェイクを処理しなければなりません。"
    },
    {
      "indent": 0,
      "text": "6.4.3. Challenge-Response Sequence",
      "section_title": true,
      "ja": "6.4.3。チャレンジ応答シーケンス"
    },
    {
      "indent": 3,
      "text": "If necessary, the receiving entity challenges the initiating entity by sending a <challenge/> element qualified by the 'urn:ietf:params:xml:ns:xmpp-sasl' namespace; this element MAY contain XML character data (which MUST be generated in accordance with the definition of the SASL mechanism chosen by the initiating entity).",
      "ja": "必要であれば、受信エンティティは、送信することにより、開始エンティティに挑む<挑戦を/>「URN：IETF：のparams：XML：NS：XMPP-SASL」によって修飾要素の名前空間。この要素は、（開始エンティティによって選ばれたSASL機構の定義に従って生成されなければならない）XML文字データを含むかもしれません。"
    },
    {
      "indent": 3,
      "text": "The initiating entity responds to the challenge by sending a <response/> element qualified by the 'urn:ietf:params:xml:ns:xmpp-sasl' namespace; this element MAY contain XML character data (which MUST be generated in accordance with the definition of the SASL mechanism chosen by the initiating entity).",
      "ja": "開始エンティティは、「：IETF：のparams：XML：NS：URN XMPP-SASL」によって修飾<応答/>要素送ることによって、課題に対応した名前空間を。この要素は、（開始エンティティによって選ばれたSASL機構の定義に従って生成されなければならない）XML文字データを含むかもしれません。"
    },
    {
      "indent": 3,
      "text": "If necessary, the receiving entity sends more challenges and the initiating entity sends more responses.",
      "ja": "必要であれば、受信エンティティは、多くの課題を送信し、開始エンティティは、より多くのレスポンスを送信します。"
    },
    {
      "indent": 3,
      "text": "This series of challenge/response pairs continues until one of three things happens:",
      "ja": "3つのいずれかが起こるまで、チャレンジ/レスポンスのペアのこのシリーズは継続します："
    },
    {
      "indent": 3,
      "text": "o The initiating entity aborts the handshake for this authentication mechanism.",
      "ja": "O開始エンティティは、この認証機構のためのハンドシェイクを中止します。"
    },
    {
      "indent": 3,
      "text": "o The receiving entity reports failure of the handshake.",
      "ja": "O受信エンティティは、ハンドシェイクの失敗を報告します。"
    },
    {
      "indent": 3,
      "text": "o The receiving entity reports success of the handshake.",
      "ja": "O受信エンティティは、ハンドシェイクの成功を報告します。"
    },
    {
      "indent": 3,
      "text": "These scenarios are described in the following sections.",
      "ja": "これらのシナリオは、以下のセクションで説明されています。"
    },
    {
      "indent": 0,
      "text": "6.4.4. Abort",
      "section_title": true,
      "ja": "6.4.4。中絶"
    },
    {
      "indent": 3,
      "text": "The initiating entity aborts the handshake for this authentication mechanism by sending an <abort/> element qualified by the 'urn:ietf:params:xml:ns:xmpp-sasl' namespace.",
      "ja": "名前空間開始エンティティは、「：IETF：のparams：XML：：NS XMPP-SASL壷」によって修飾<アボート/>要素を送信することにより、この認証メカニズムのためのハンドシェイクを中止します。"
    },
    {
      "indent": 3,
      "text": "I: <abort xmlns='urn:ietf:params:xml:ns:xmpp-sasl'/>",
      "ja": "I：<のxmlns = '壷：IETF：のparams：XML：NS：XMPP-SASL' 中止/を>"
    },
    {
      "indent": 3,
      "text": "Upon receiving an <abort/> element, the receiving entity MUST return a <failure/> element qualified by the 'urn:ietf:params:xml:ns:xmpp-sasl' namespace and containing an <aborted/> child element.",
      "ja": "<中止さ/>子要素を含む名前空間と「XMPP-SASL：IETF：のparams：XML：：NS壷」<アボート/>要素を受信すると、受信エンティティは、<失敗/>によって修飾要素を返さなければなりません。"
    },
    {
      "indent": 3,
      "text": "R: <failure xmlns='urn:ietf:params:xml:ns:xmpp-sasl'> <aborted/> </failure>",
      "ja": "R <障害のxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-SASL'> <中止/> </障害>"
    },
    {
      "indent": 0,
      "text": "6.4.5. SASL Failure",
      "section_title": true,
      "ja": "6.4.5。 SASLの失敗"
    },
    {
      "indent": 3,
      "text": "The receiving entity reports failure of the handshake for this authentication mechanism by sending a <failure/> element qualified by the 'urn:ietf:params:xml:ns:xmpp-sasl' namespace (the particular cause of failure MUST be communicated in an appropriate child element of the <failure/> element as defined under Section 6.5).",
      "ja": "受信エンティティは、「：IETF：のparams：XML：NS：URN XMPP-SASL」によって修飾<失敗/>要素送信することにより、この認証メカニズムのためのハンドシェイクの失敗を報告する名前空間を（故障の特定の原因がに伝えなければなりませんセクション6.5で定義した<故障/>要素の適切な子要素）。"
    },
    {
      "indent": 3,
      "text": "R: <failure xmlns='urn:ietf:params:xml:ns:xmpp-sasl'> <not-authorized/> </failure>",
      "ja": "R <障害のxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-SASL'> <未承認/> </障害>"
    },
    {
      "indent": 3,
      "text": "Where appropriate for the chosen SASL mechanism, the receiving entity SHOULD allow a configurable but reasonable number of retries (at least 2 and no more than 5); this enables the initiating entity (e.g., an end-user client) to tolerate incorrectly provided credentials (e.g., a mistyped password) without being forced to reconnect (which it would if the receiving entity immediately returned a SASL failure and closed the stream).",
      "ja": "選択されたSASL機構のために適切な場合、受信エンティティは、リトライ（少なくとも2つ、それ以上5以下）の構成が、合理的な数を可能にすべきです。これは、開始エンティティ（例えば、エンドユーザクライアント）（それは受信エンティティはすぐにSASLの失敗を返し、ストリームを閉じてしまう場合がある）に再接続することを余儀なくされることなく、誤って提供された資格情報（例えば、入力ミスパスワード）を容認することができます。"
    },
    {
      "indent": 3,
      "text": "If the initiating entity attempts a reasonable number of retries with the same SASL mechanism and all attempts fail, it MAY fall back to the next mechanism in its ordered list by sending a new <auth/> request to the receiving entity, thus starting a new handshake for that authentication mechanism. If all handshakes fail and there are no remaining mechanisms in the initiating entity's list of supported and acceptable mechanisms, the initiating entity SHOULD simply close the stream as described under Section 4.4 (instead of waiting for the stream to time out).",
      "ja": "開始実体が同じSASLメカニズムで再試行の合理的な数を試み、すべての試みが失敗した場合、それはこのように新を開始、受信エンティティへの新しいの<auth />リクエストを送信することにより、その順序付きリスト内の次の機構に戻って落ちる可能性がありその認証メカニズムのためのハンドシェイク。すべてのハンドシェイクが失敗し、サポートされており、許容可能なメカニズムの開始エンティティのリストには、残りのメカニズムが存在しない場合（代わりにタイムアウトにストリームを待つの）4.4節で説明したように、開始エンティティは、単にストリームを閉じる必要があります。"
    },
    {
      "indent": 3,
      "text": "If the initiating entity exceeds the number of retries, the receiving entity MUST close the stream with a stream error, which SHOULD be <policy-violation/> (Section 4.9.3.14), although some existing implementations send <not-authorized/> (Section 4.9.3.12) instead.",
      "ja": "開始エンティティは、再試行回数を超えた場合、いくつかの既存の実装を送信するが、受信エンティティは、<ポリシー違反/>（セクション4.9.3.14）であるべき、ストリームエラーでストリームを閉じる必要があり、<許可しません/>（セクション4.9.3.12）の代わりに。"
    },
    {
      "indent": 6,
      "text": "Implementation Note: For server-to-server streams, if the receiving entity cannot offer the SASL EXTERNAL mechanism or any other SASL mechanism based on the security context established during TLS negotiation, the receiving entity MAY attempt to complete weak identity verification using the Server Dialback protocol [XEP-0220]; however, if according to local service policies weak identity verification is insufficient then the receiving entity SHOULD instead close the stream with a <policy-violation/> stream error (Section 4.9.3.14) instead of waiting for the stream to time out.",
      "ja": "実装上の注意：サーバー間のストリームの場合、SASL EXTERNAL機構やTLSネゴシエーション中に確立されたセキュリティコンテキストに基づいて、他のSASLメカニズムを提供することはできません受信エンティティは、受信エンティティは、サーバーのダイアルバックを使用して、弱い本人確認を完了しよう可能性がある場合プロトコル[XEP-0220]。ローカル・サービス・ポリシーに従って弱アイデンティティ検証が不十分である場合は、次に、受信エンティティは代わり代わりタイムアウトにストリーム待ち<ポリシー違反/>ストリームエラー（セクション4.9.3.14）でストリームを閉じる必要があります。"
    },
    {
      "indent": 0,
      "text": "6.4.6. SASL Success",
      "section_title": true,
      "ja": "6.4.6。 SASL成功"
    },
    {
      "indent": 3,
      "text": "Before considering the SASL handshake to be a success, if the initiating entity provided a 'from' attribute on an initial stream header whose confidentiality and integrity were protected via TLS or an equivalent security layer (such as the SASL GSSAPI mechanism) then the receiving entity SHOULD correlate the authentication identity resulting from the SASL negotiation with that 'from' address; if the two identities do not match then the receiving entity SHOULD terminate the connection attempt (however, the receiving entity might have legitimate reasons not to terminate the connection attempt, for example, because it has overridden a connecting client's address to correct the JID format or assign a JID based on information presented in an end-user certificate).",
      "ja": "開始エンティティは機密性と完全性TLS又は（例えばSASL GSSAPIメカニズムなど）等価なセキュリティ層を介して保護されていた初期ストリームヘッダの属性「から」は、受信エンティティが提供されている場合、成功であるとSASLハンドシェイクを考慮前アドレス「から」それとSASL交渉の結果、認証IDを関連付けるべきです。 2人のアイデンティティが一致しない場合は、それがまたはJID形式を修正するために接続するクライアントのアドレスをオーバーライドしているので、受信エンティティは、しかし、受信エンティティは、例えば、接続試行を終了しない正当な理由があるかもしれない（接続試行を終了すべきですエンドユーザ証明書に提示された情報）に基づいて、JIDを割り当てます。"
    },
    {
      "indent": 3,
      "text": "The receiving entity reports success of the handshake by sending a <success/> element qualified by the 'urn:ietf:params:xml:ns:xmpp-sasl' namespace; this element MAY contain XML character data (in SASL terminology, \"additional data with success\") if the chosen SASL mechanism supports or requires it. If the receiving entity needs to send additional data of zero length, it MUST transmit the data as a single equals sign character (\"=\").",
      "ja": "受信エンティティは、「：IETF：のparams：XML：NS：URN XMPP-SASL」によって修飾<成功/>要素送信することにより、ハンドシェイクの成功を報告名前空間を。選ばれたSASLメカニズムがサポートしているか、それを必要とする場合、この要素は（SASLの用語、「成功と追加データ」で）XML文字データを含むかもしれません。受信エンティティは、長さゼロの追加のデータを送信する必要がある場合、単一の等号が文字（「=」）記号のように、それがデータを送信しなければなりません。"
    },
    {
      "indent": 3,
      "text": "R: <success xmlns='urn:ietf:params:xml:ns:xmpp-sasl'/>",
      "ja": "R：<成功のxmlns = '壷：IETF：のparams：XML：NS：XMPP-SASL' />"
    },
    {
      "indent": 6,
      "text": "Informational Note: For client-to-server streams, the authorization identity communicated during SASL negotiation is used to determine the canonical address for the initiating client according to the receiving server, as described under Section 4.3.6.",
      "ja": "情報注：4.3.6項で述べたように、クライアントからサーバーへのストリームの場合、SASLネゴシエーション中に通信認可IDは、受信サーバに応じて開始したクライアントのための正規のアドレスを決定するために使用されます。"
    },
    {
      "indent": 3,
      "text": "Upon receiving the <success/> element, the initiating entity MUST initiate a new stream over the existing TCP connection by sending a new initial stream header to the receiving entity (as specified under Section 4.3.3, the initiating entity MUST NOT send a closing </stream> tag before sending the new initial stream header, since the receiving entity and initiating entity MUST consider the original stream to be replaced upon success of the SASL negotiation).",
      "ja": "<成功/>要素を受信すると、開始エンティティは、受信エンティティに新しい初期ストリームヘッダを送信することにより、既存のTCP接続を介して新しいストリームを開始しなければなりません（セクション4.3.3の下に指定されているように、開始エンティティは、閉鎖を送ってはいけません</ストリーム>受信エンティティいるので、新しい初期ストリームヘッダを送信し、エンティティを開始する前に、タグ）は、元のストリームがSASL交渉の成功を交換することが考慮しなければなりません。"
    },
    {
      "indent": 3,
      "text": "I: <stream:stream from='juliet@im.example.com' to='im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "I：<ストリーム： 'のxmlns = 'のjabberエン：クライアント：im.example.com 'バージョンは、= '1.0' LANG = XML' '=' にfrom='juliet@im.example.comストリーム' のxmlns：ストリーム=' http://etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "Upon receiving the new initial stream header from the initiating entity, the receiving entity MUST respond by sending a new response stream header to the initiating entity (for which it MUST generate a new stream ID instead of reusing the old stream ID).",
      "ja": "開始エンティティから新たな初期ストリームヘッダを受信すると、受信エンティティは、（それが代わりに古いストリームIDを再利用の新しいストリームIDを生成しなければならないため）開始エンティティに新しい応答ストリームヘッダを送信することによって応答しなければなりません。"
    },
    {
      "indent": 3,
      "text": "R: <stream:stream from='im.example.com' id='gPybzaOzBmaADgxKXu9UClbprp0=' to='juliet@im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "R：<ストリーム：ストリームから= 'im.example.com' ID = 'gPybzaOzBmaADgxKXu9UClbprp0 =' to='juliet@im.example.com 'バージョンは、= '1.0' のxml：langの= '' のxmlns =' のjabber EN：クライアント'のxmlns：ストリーム=' のhttp：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "The receiving entity MUST also send stream features, containing any further available features or containing no features (via an empty <features/> element).",
      "ja": "受信エンティティは、（空の<機能/>要素を介して）、任意のさらなる利用可能な機能を含む、または全く機能を含まない、ストリーム機能を送らなければなりません。"
    },
    {
      "indent": 3,
      "text": "R: <stream:features> <bind xmlns='urn:ietf:params:xml:ns:xmpp-bind'/> </stream:features>",
      "ja": "Rは：<ストリームは：特徴> <バインドのxmlns = 'URN：IETF：paramsは：XML：NS：XMPPバインド' /> </ストリーム：機能>"
    },
    {
      "indent": 0,
      "text": "6.5. SASL Errors",
      "section_title": true,
      "ja": "6.5。 SASLエラー"
    },
    {
      "indent": 3,
      "text": "The syntax of SASL errors is as follows, where the XML data shown within the square brackets '[' and ']' is OPTIONAL.",
      "ja": "SASLエラーの構文は、「[」と「]」次のようにXMLデータは角括弧内に示される場合、ある任意です。"
    },
    {
      "indent": 3,
      "text": "<failure xmlns='urn:ietf:params:xml:ns:xmpp-sasl'> <defined-condition/> [<text xml:lang='langcode'> OPTIONAL descriptive text </text>] </failure>",
      "ja": "<障害のxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-SASL'> <定義された条件/> <テキストのxml：langの= 'langcode'> OPTIONAL説明文</テキスト> </障害>"
    },
    {
      "indent": 3,
      "text": "The \"defined-condition\" MUST be one of the SASL-related error conditions defined in the following sections. However, because additional error conditions might be defined in the future, if an entity receives a SASL error condition that it does not understand then it MUST treat the unknown condition as a generic authentication failure, i.e., as equivalent to <not-authorized/> (Section 6.5.10).",
      "ja": "「定義された条件」は、以下のセクションで定義されたSASL関連のエラー状態のいずれかでなければなりません。しかし、エンティティは、<-許可していない/>と同等に、すなわち、それはそれは、一般的な認証失敗として、未知の状態を扱わなければなりません理解していないことをSASLエラー状態を受信した場合、追加のエラー条件は、将来的に定義される可能性がありますので、 （6.5.10）。"
    },
    {
      "indent": 3,
      "text": "Inclusion of the <text/> element is OPTIONAL, and can be used to provide application-specific information about the error condition, which information MAY be displayed to a human but only as a supplement to the defined condition.",
      "ja": "<テキスト/>要素の包含は任意であり、ヒトにだけ規定される条件を補完するものとして表示され得る情報のエラー状態、約アプリケーション固有の情報を提供するために使用することができます。"
    },
    {
      "indent": 3,
      "text": "Because XMPP itself defines an application profile of SASL and there is no expectation that more specialized XMPP applications will be built on top of SASL, the SASL error format does not provide extensibility for application-specific error conditions as is done for XML streams (Section 4.9.4) and XML stanzas (Section 8.3.4).",
      "ja": "XMPP自体がSASLのアプリケーションプロファイルを定義し、より専門的なXMPPアプリケーションがSASLの上に構築されない期待がないので、セクション4.9（XMLストリームのために行われているように、SASLエラー形式は、アプリケーション固有のエラー状態のための拡張性を提供しません0.4）およびXMLスタンザ（8.3.4項）。"
    },
    {
      "indent": 0,
      "text": "6.5.1. aborted",
      "section_title": true,
      "ja": "6.5.1。中止され"
    },
    {
      "indent": 3,
      "text": "The receiving entity acknowledges that the authentication handshake has been aborted by the initiating entity; sent in reply to the <abort/> element.",
      "ja": "受信エンティティは、認証ハンドシェイクを開始するエンティティによって中断されたことを認め、 <アボート/>要素に応答して送信。"
    },
    {
      "indent": 3,
      "text": "I: <abort xmlns='urn:ietf:params:xml:ns:xmpp-sasl'/>",
      "ja": "I：<のxmlns = '壷：IETF：のparams：XML：NS：XMPP-SASL' 中止/を>"
    },
    {
      "indent": 3,
      "text": "R: <failure xmlns='urn:ietf:params:xml:ns:xmpp-sasl'> <aborted/> </failure>",
      "ja": "R <障害のxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-SASL'> <中止/> </障害>"
    },
    {
      "indent": 0,
      "text": "6.5.2. account-disabled",
      "section_title": true,
      "ja": "6.5.2。アカウント無効"
    },
    {
      "indent": 3,
      "text": "The account of the initiating entity has been temporarily disabled; sent in reply to an <auth/> element (with or without initial response data) or a <response/> element.",
      "ja": "開始実体のアカウントは一時的に無効にされています。 （初期応答データの有無にかかわらず）<AUTH />要素又は<応答/>要素への応答で送信されました。"
    },
    {
      "indent": 3,
      "text": "I: <auth xmlns='urn:ietf:params:xml:ns:xmpp-sasl' mechanism='PLAIN'>AGp1bGlldAByMG0zMG15cjBtMzA=</auth>",
      "ja": "I：<AUTHのxmlns = '壷：IETF：のparams：XML：NS：XMPP-SASL' メカニズム= 'PLAIN'> AGp1bGlldAByMG0zMG15cjBtMzA = </ AUTH>"
    },
    {
      "indent": 3,
      "text": "R: <failure xmlns='urn:ietf:params:xml:ns:xmpp-sasl'> <account-disabled/> <text xml:lang='en'>Call 212-555-1212 for assistance.</text> </failure>",
      "ja": "R：<失敗のxmlns = '壷：IETF：のparams：XML：NS：XMPP-SASL'> <アカウント無効/> <テキストXML：LANG = 'EN'>援助のため212-555-1212を呼び出し</テキスト。 > </失敗>"
    },
    {
      "indent": 0,
      "text": "6.5.3. credentials-expired",
      "section_title": true,
      "ja": "6.5.3。資格証明書期限切れ"
    },
    {
      "indent": 3,
      "text": "The authentication failed because the initiating entity provided credentials that have expired; sent in reply to a <response/> element or an <auth/> element with initial response data.",
      "ja": "開始実体の期限が切れている資格情報を提供するため、認証に失敗しました。 <応答/>要素または初期応答データと<AUTH />要素への応答で送信されました。"
    },
    {
      "indent": 3,
      "text": "I: <response xmlns='urn:ietf:params:xml:ns:xmpp-sasl'> [ ... ] </response>",
      "ja": "I：<応答のxmlns = '壷：IETF：のparams：XML：NS：XMPP-SASL'> [...] </レスポンス>"
    },
    {
      "indent": 3,
      "text": "R: <failure xmlns='urn:ietf:params:xml:ns:xmpp-sasl'> <credentials-expired/> </failure>",
      "ja": "R：<障害のxmlns = '壷：IETF：のparams：XML：NS：XMPP-SASL'> <資格証明書期限切れ/> </失敗>"
    },
    {
      "indent": 0,
      "text": "6.5.4. encryption-required",
      "section_title": true,
      "ja": "6.5.4。暗号化に必要な"
    },
    {
      "indent": 3,
      "text": "The mechanism requested by the initiating entity cannot be used unless the confidentiality and integrity of the underlying stream are protected (typically via TLS); sent in reply to an <auth/> element (with or without initial response data).",
      "ja": "基本となるストリームの機密性と完全性を（通常はTLS経由）で保護されていない限り、開始するエンティティによって要求されたメカニズムを使用することはできません。 <AUTH />要素（持つ又は初期応答データなし）に対する応答として送信されます。"
    },
    {
      "indent": 3,
      "text": "I: <auth xmlns='urn:ietf:params:xml:ns:xmpp-sasl' mechanism='PLAIN'>AGp1bGlldAByMG0zMG15cjBtMzA=</auth>",
      "ja": "I：<AUTHのxmlns = '壷：IETF：のparams：XML：NS：XMPP-SASL' メカニズム= 'PLAIN'> AGp1bGlldAByMG0zMG15cjBtMzA = </ AUTH>"
    },
    {
      "indent": 3,
      "text": "R: <failure xmlns='urn:ietf:params:xml:ns:xmpp-sasl'> <encryption-required/> </failure>",
      "ja": "R：<障害のxmlns = '壷：IETF：のparams：XML：NS：XMPP-SASL'> <暗号化に必要な/> </失敗>"
    },
    {
      "indent": 0,
      "text": "6.5.5. incorrect-encoding",
      "section_title": true,
      "ja": "6.5.5。間違ったエンコーディング"
    },
    {
      "indent": 3,
      "text": "The data provided by the initiating entity could not be processed because the base 64 encoding is incorrect (e.g., because the encoding does not adhere to the definition in Section 4 of [BASE64]); sent in reply to a <response/> element or an <auth/> element with initial response data.",
      "ja": "ベース64符号化が正しくないため、開始エンティティによって提供されたデータを処理することができなかった（例えば、符号化は[BASE64]のセクション4における定義に準拠していないため）。 <応答/>要素または初期応答データと<AUTH />要素への応答で送信されました。"
    },
    {
      "indent": 3,
      "text": "I: <auth xmlns='urn:ietf:params:xml:ns:xmpp-sasl' mechanism='DIGEST-MD5'>[ ... ]</auth>",
      "ja": "I：<AUTHのxmlns = '壷：IETF：のparams：XML：NS：XMPP-SASL' メカニズム= 'DIGEST-MD5'> [...] </ AUTH>"
    },
    {
      "indent": 3,
      "text": "R: <failure xmlns='urn:ietf:params:xml:ns:xmpp-sasl'> <incorrect-encoding/> </failure>",
      "ja": "R <故障のxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-SASL'> <誤った符号化/> </障害>"
    },
    {
      "indent": 0,
      "text": "6.5.6. invalid-authzid",
      "section_title": true,
      "ja": "6.5.6。無効authzidは"
    },
    {
      "indent": 3,
      "text": "The authzid provided by the initiating entity is invalid, either because it is incorrectly formatted or because the initiating entity does not have permissions to authorize that ID; sent in reply to a <response/> element or an <auth/> element with initial response data.",
      "ja": "開始エンティティがそのIDを承認する権限を持っていないので、それが正しくフォーマットされているためか、開始実体によって提供さauthzidはどちらか、無効です。 <応答/>要素または初期応答データと<AUTH />要素への応答で送信されました。"
    },
    {
      "indent": 3,
      "text": "I: <response xmlns='urn:ietf:params:xml:ns:xmpp-sasl'> [ ... ] </response>",
      "ja": "I：<応答のxmlns = '壷：IETF：のparams：XML：NS：XMPP-SASL'> [...] </レスポンス>"
    },
    {
      "indent": 3,
      "text": "R: <failure xmlns='urn:ietf:params:xml:ns:xmpp-sasl'> <invalid-authzid/> </failure>",
      "ja": "R：<障害のxmlns = '壷：IETF：のparams：XML：NS：XMPP-SASL'> <無効-authzidは/> </失敗>"
    },
    {
      "indent": 0,
      "text": "6.5.7. invalid-mechanism",
      "section_title": true,
      "ja": "6.5.7。無効機構"
    },
    {
      "indent": 3,
      "text": "The initiating entity did not specify a mechanism, or requested a mechanism that is not supported by the receiving entity; sent in reply to an <auth/> element.",
      "ja": "開始エンティティは、メカニズムを指定するか、または受信エンティティによってサポートされていないメカニズムを要求しませんでした。 <AUTH />要素に応答して送信。"
    },
    {
      "indent": 3,
      "text": "I: <auth xmlns='urn:ietf:params:xml:ns:xmpp-sasl' mechanism='CRAM-MD5'/>",
      "ja": "I：<AUTHのxmlns = '壷：IETF：のparams：XML：NS：XMPP-SASL' メカニズム= 'CRAM-MD5' />"
    },
    {
      "indent": 3,
      "text": "R: <failure xmlns='urn:ietf:params:xml:ns:xmpp-sasl'> <invalid-mechanism/> </failure>",
      "ja": "R <故障のxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-SASL'> <無効機構/> </障害>"
    },
    {
      "indent": 0,
      "text": "6.5.8. malformed-request",
      "section_title": true,
      "ja": "6.5.8。不正なリクエスト"
    },
    {
      "indent": 3,
      "text": "The request is malformed (e.g., the <auth/> element includes initial response data but the mechanism does not allow that, or the data sent violates the syntax for the specified SASL mechanism); sent in reply to an <abort/>, <auth/>, <challenge/>, or <response/> element.",
      "ja": "要求は、（例えば、<AUTH />要素は、初期応答データを含むが、機構がそれを許可しない、または送信されたデータは、指定されたSASL機構の構文に違反する）不正な形式です。 <アボート/>、<AUTH />、<チャレンジ/>、または<応答/>要素に応答して送信。"
    },
    {
      "indent": 3,
      "text": "(In the following example, the XML character data of the <auth/> element contains more than 255 UTF-8-encoded Unicode characters and therefore violates the \"token\" production for the SASL ANONYMOUS mechanism as specified in [ANONYMOUS].)",
      "ja": "（以下の例では、<AUTH />要素のXML文字データは、255を超えるUTF-8でエンコードされたUnicode文字が含まれているため、[匿名]で指定されるようにSASL ANONYMOUSメカニズムのための「トークン」の生産に違反します。）"
    },
    {
      "indent": 3,
      "text": "I: <auth xmlns='urn:ietf:params:xml:ns:xmpp-sasl' mechanism='ANONYMOUS'>[ ... some-long-token ... ]</auth>",
      "ja": "I：<AUTHのxmlns = '壷：IETF：のparams：XML：NS：XMPP-SASL' メカニズム= 'ANONYMOUS'> [...いくつかの長いトークン...] </ AUTH>"
    },
    {
      "indent": 3,
      "text": "R: <failure xmlns='urn:ietf:params:xml:ns:xmpp-sasl'> <malformed-request/> </failure>",
      "ja": "R <故障のxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-SASL'> <不正要求/> </障害>"
    },
    {
      "indent": 0,
      "text": "6.5.9. mechanism-too-weak",
      "section_title": true,
      "ja": "6.5.9。メカニズムがあまりに弱いです"
    },
    {
      "indent": 3,
      "text": "The mechanism requested by the initiating entity is weaker than server policy permits for that initiating entity; sent in reply to an <auth/> element (with or without initial response data).",
      "ja": "開始エンティティによって要求されたメカニズムは、その開始エンティティのサーバーポリシーで許可さよりも弱いです。 <AUTH />要素（持つ又は初期応答データなし）に対する応答として送信されます。"
    },
    {
      "indent": 3,
      "text": "I: <auth xmlns='urn:ietf:params:xml:ns:xmpp-sasl' mechanism='PLAIN'>AGp1bGlldAByMG0zMG15cjBtMzA=</auth>",
      "ja": "I：<AUTHのxmlns = '壷：IETF：のparams：XML：NS：XMPP-SASL' メカニズム= 'PLAIN'> AGp1bGlldAByMG0zMG15cjBtMzA = </ AUTH>"
    },
    {
      "indent": 3,
      "text": "R: <failure xmlns='urn:ietf:params:xml:ns:xmpp-sasl'> <mechanism-too-weak/> </failure>",
      "ja": "R <故障のxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-SASL'> <機構-すぎる弱/> </障害>"
    },
    {
      "indent": 0,
      "text": "6.5.10. not-authorized",
      "section_title": true,
      "ja": "6.5.10。許可されていません"
    },
    {
      "indent": 3,
      "text": "The authentication failed because the initiating entity did not provide proper credentials, or because some generic authentication failure has occurred but the receiving entity does not wish to disclose specific information about the cause of the failure; sent in reply to a <response/> element or an <auth/> element with initial response data.",
      "ja": "開始実体が適切な資格情報を提供しなかったため、認証に失敗した、またはいくつかの一般的な認証エラーが発生しましたので、しかし、受信エンティティは、障害の原因についての具体的な情報を開示したくありません。 <応答/>要素または初期応答データと<AUTH />要素への応答で送信されました。"
    },
    {
      "indent": 3,
      "text": "I: <response xmlns='urn:ietf:params:xml:ns:xmpp-sasl'> [ ... ] </response>",
      "ja": "I：<応答のxmlns = '壷：IETF：のparams：XML：NS：XMPP-SASL'> [...] </レスポンス>"
    },
    {
      "indent": 3,
      "text": "R: <failure xmlns='urn:ietf:params:xml:ns:xmpp-sasl'> <not-authorized/> </failure>",
      "ja": "R <障害のxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-SASL'> <未承認/> </障害>"
    },
    {
      "indent": 6,
      "text": "Security Warning: This error condition includes but is not limited to the case of incorrect credentials or a nonexistent username. In order to discourage directory harvest attacks, no differentiation is made between incorrect credentials and a nonexistent username.",
      "ja": "セキュリティ警告：このエラー条件が含まれますが、誤った資格情報の場合または存在しないユーザ名に限定されるものではありません。ディレクトリハーベスト攻撃を阻止するためには、何の分化は不正な資格情報と、存在しないユーザ名の間で行われていません。"
    },
    {
      "indent": 0,
      "text": "6.5.11. temporary-auth-failure",
      "section_title": true,
      "ja": "6.5.11。一時的-AUTH-失敗"
    },
    {
      "indent": 3,
      "text": "The authentication failed because of a temporary error condition within the receiving entity, and it is advisable for the initiating entity to try again later; sent in reply to an <auth/> element or a <response/> element.",
      "ja": "認証があるため、受信エンティティ内の一時的なエラー条件の失敗、および開始エンティティは、後で再試行してくださいすることが賢明です。 <AUTH />要素又は<応答/>要素への応答で送信されました。"
    },
    {
      "indent": 3,
      "text": "I: <response xmlns='urn:ietf:params:xml:ns:xmpp-sasl'> [ ... ] </response>",
      "ja": "I：<応答のxmlns = '壷：IETF：のparams：XML：NS：XMPP-SASL'> [...] </レスポンス>"
    },
    {
      "indent": 3,
      "text": "R: <failure xmlns='urn:ietf:params:xml:ns:xmpp-sasl'> <temporary-auth-failure/> </failure>",
      "ja": "R：<障害のxmlns = '壷：IETF：のparams：XML：NS：XMPP-SASL'> <一時的-AUTH-失敗/> </失敗>"
    },
    {
      "indent": 0,
      "text": "6.6. SASL Definition",
      "section_title": true,
      "ja": "6.6。 SASLの定義"
    },
    {
      "indent": 3,
      "text": "The profiling requirements of [SASL] require that the following information be supplied by the definition of a using protocol.",
      "ja": "[SASL]のプロファイルの要件は、次の情報を使用してプロトコルの定義によって供給されることを必要とします。"
    },
    {
      "indent": 3,
      "text": "service name: \"xmpp\"",
      "ja": "サービス名：「XMPP」"
    },
    {
      "indent": 3,
      "text": "initiation sequence: After the initiating entity provides an opening XML stream header and the receiving entity replies in kind, the receiving entity provides a list of acceptable authentication methods. The initiating entity chooses one method from the list and sends it to the receiving entity as the value of the 'mechanism' attribute possessed by an <auth/> element, optionally including an initial response to avoid a round trip.",
      "ja": "開始配列：開始エンティティは、開口XMLストリームヘッダを提供し、受信エンティティは、種類に返信した後、受信エンティティは、許容される認証方式のリストを提供します。開始エンティティは、リストから1つの方法を選択し、必要に応じてラウンドトリップを回避するために、初期応答を含む<AUTH />要素が持つ「機構」属性の値として受信エンティティに送信します。"
    },
    {
      "indent": 3,
      "text": "exchange sequence: Challenges and responses are carried through the exchange of <challenge/> elements from receiving entity to initiating entity and <response/> elements from initiating entity to receiving entity. The receiving entity reports failure by sending a <failure/> element and success by sending a <success/> element; the initiating entity aborts the exchange by sending an <abort/> element. Upon successful negotiation, both sides consider the original XML stream to be closed and new stream headers are sent by both entities.",
      "ja": "交換シーケンス：課題と応答は、エンティティと受信エンティティにエンティティを開始するから、<応答/>要素を開始するエンティティを受信して​​から<チャレンジ/>要素の交換により実施されています。受信エンティティは、<成功/>要素を送信することによって、<失敗/>要素と成功を送信することにより、障害を報告します。開始エンティティは、<アボート/>要素を送信することにより、交換を中止します。成功した交渉の際に、双方は、元のXMLストリームが閉じられるように考慮し、新しいストリームヘッダは、両方のエンティティによって送信されます。"
    },
    {
      "indent": 3,
      "text": "security layer negotiation: The security layer takes effect immediately after sending the closing '>' character of the <success/> element for the receiving entity, and immediately after receiving the closing '>' character of the <success/> element for the initiating entity. The order of layers is first [TCP], then [TLS], then [SASL], then XMPP.",
      "ja": "セキュリティ層の交渉：<成功/>要素の受信エンティティのための<成功/>要素のセキュリティ層がすぐに閉鎖を送った後に有効になります「>」文字、そしてすぐに閉鎖を受信した後、「>」文字開始するためのエンティティ。層の順序は、最初の[TCP]、次いで[TLS]、次に[SASL]、次にXMPP。"
    },
    {
      "indent": 3,
      "text": "use of the authorization identity: The authorization identity can be used in XMPP to denote the non-default <localpart@domainpart> of a client; an empty string is equivalent to an absent authorization identity.",
      "ja": "認可IDの使用：承認アイデンティティがクライアントのデフォルト以外の<ローカル部@ domainpart>示すためにXMPPに使用することができます。空の文字列は存在しない認証アイデンティティに相当します。"
    },
    {
      "indent": 0,
      "text": "7. Resource Binding",
      "section_title": true,
      "ja": "7.リソースバインディング"
    },
    {
      "indent": 0,
      "text": "7.1. Fundamentals",
      "section_title": true,
      "ja": "7.1。基礎編"
    },
    {
      "indent": 3,
      "text": "After a client authenticates with a server, it MUST bind a specific resource to the stream so that the server can properly address the client. That is, there MUST be an XMPP resource associated with the bare JID (<localpart@domainpart>) of the client, so that the address for use over that stream is a full JID of the form <localpart@domainpart/resource> (including the resourcepart). This ensures that the server can deliver XML stanzas to and receive XML stanzas from the client in relation to entities other than the server itself or the client's account, as explained under Section 10.",
      "ja": "クライアントがサーバーを認証した後、サーバーが正しくクライアントに対処できるように、それがストリームに特定のリソースをバインドする必要があります。すなわち、そのストリーム上の使用のためのアドレスは、フォームの完全なJID <ローカル部分@ domainpart /リソース>（などとなるように、クライアントの裸JID（<ローカル部分@ domainpart>）に関連付けられたXMPPリソースが存在しなければなりませんresourcepart）。これは、第10章の下で説明したように、サーバは、サーバ自体またはクライアントのアカウント以外のエンティティに関連して、クライアントからXMLスタンザをするXMLスタンザを提供し、受信できることを保証します。"
    },
    {
      "indent": 6,
      "text": "Informational Note: The client could exchange stanzas with the server itself or the client's account before binding a resource since the full JID is needed only for addressing outside the context of the stream negotiated between the client and the server, but this is not commonly done.",
      "ja": "情報注：クライアントは、サーバー自体、または完全なJIDのみ、クライアントとサーバーの間で取り決めストリームのコンテキスト外対処するために必要とされるため、リソースを結合する前に、クライアントのアカウントでスタンザ交換することができますが、これは一般的に行われていません。"
    },
    {
      "indent": 3,
      "text": "After a client has bound a resource to the stream, it is referred to as a \"connected resource\". A server SHOULD allow an entity to maintain multiple connected resources simultaneously, where each connected resource is associated with a distinct XML stream and is differentiated from the other connected resources by a distinct resourcepart.",
      "ja": "クライアントがストリームにリソースを結合した後、それは「接続リソース」と呼ばれています。サーバは、企業がそれぞれ接続されたリソースが異なるXMLストリームに関連付けられ、異なるresourcepartによって他の接続されたリソースと区別され、同時に複数の接続されたリソースを維持することを可能にするべきです。"
    },
    {
      "indent": 6,
      "text": "Security Warning: A server SHOULD enable the administrator of an XMPP service to limit the number of connected resources in order to prevent certain denial-of-service attacks as described under Section 13.12.",
      "ja": "セキュリティ警告：サーバはセクション13.12で説明したように、特定のサービス拒否攻撃を防ぐために、接続されているリソースの数を制限するために、XMPPサービスの管理者を有効にする必要があります。"
    },
    {
      "indent": 3,
      "text": "If, before completing the resource binding step, the client attempts to send an XML stanza to an entity other than the server itself or the client's account, the server MUST NOT process the stanza and MUST close the stream with a <not-authorized/> stream error (Section 4.9.3.12).",
      "ja": "リソース結合ステップを完了する前に、クライアントはサーバ自体またはクライアントのアカウント以外のエンティティにXMLスタンザを送信しようとし、場合、サーバーはスタンザを処理してはならないと<-許可されていない/>でストリームを閉じる必要がありますストリームエラー（セクション4.9.3.12）。"
    },
    {
      "indent": 3,
      "text": "The XML namespace name for the resource binding extension is 'urn:ietf:params:xml:ns:xmpp-bind'.",
      "ja": "リソースバインディング拡張のためのXML名前空間名は 'URN：IETF：のparams：XML：NS：XMPP-バインド' です。"
    },
    {
      "indent": 0,
      "text": "7.2. Support",
      "section_title": true,
      "ja": "7.2。サポート"
    },
    {
      "indent": 3,
      "text": "Support for resource binding is REQUIRED in XMPP client and server implementations.",
      "ja": "結合リソースのサポートは、XMPPクライアントとサーバ実装で必要とされます。"
    },
    {
      "indent": 0,
      "text": "7.3. Stream Negotiation Rules",
      "section_title": true,
      "ja": "7.3。ストリーム交渉ルール"
    },
    {
      "indent": 0,
      "text": "7.3.1. Mandatory-to-Negotiate",
      "section_title": true,
      "ja": "7.3.1。必須ツーネゴシエート"
    },
    {
      "indent": 3,
      "text": "The parties to a stream MUST consider resource binding as mandatory-to-negotiate.",
      "ja": "ストリームへの当事者は必須としてツー交渉結合リソースを考慮しなければなりません。"
    },
    {
      "indent": 0,
      "text": "7.3.2. Restart",
      "section_title": true,
      "ja": "7.3.2。再起動"
    },
    {
      "indent": 3,
      "text": "After resource binding, the parties MUST NOT restart the stream.",
      "ja": "リソースが結合した後、当事者は、ストリームを再開してはなりません。"
    },
    {
      "indent": 0,
      "text": "7.4. Advertising Support",
      "section_title": true,
      "ja": "7.4。広告サポート"
    },
    {
      "indent": 3,
      "text": "Upon sending a new response stream header to the client after successful SASL negotiation, the server MUST include a <bind/> element qualified by the 'urn:ietf:params:xml:ns:xmpp-bind' namespace in the stream features it presents to the client.",
      "ja": "それが提示ストリーム機能では、名前空間成功SASL交渉の後、クライアントに新しい応答ストリームのヘッダを送信すると、サーバーは、「：IETF：のparams：XML：：NS XMPP-バインド壷」によって修飾<バインド/>要素を含まなければなりませんクライアントへ。"
    },
    {
      "indent": 3,
      "text": "The server MUST NOT include the resource binding stream feature until after the client has authenticated, typically by means of successful SASL negotiation.",
      "ja": "サーバは、一般的に成功したSASL交渉によって、クライアントが認証された後まで、ストリームの機能を結合リソースを含んではいけません。"
    },
    {
      "indent": 3,
      "text": "S: <stream:stream from='im.example.com' id='gPybzaOzBmaADgxKXu9UClbprp0=' to='juliet@im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "S：<ストリーム：= 'im.example.com' からのストリームID = 'gPybzaOzBmaADgxKXu9UClbprp0 =' to='juliet@im.example.com 'バージョン= '1.0' のxml：LANG = '' のxmlns =' のjabber EN：クライアント'のxmlns：ストリーム=' のhttp：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "S: <stream:features> <bind xmlns='urn:ietf:params:xml:ns:xmpp-bind'/> </stream:features>",
      "ja": "Sは：<ストリーム：特長> <バインドのxmlns = '壷：IETF：のparams：XML：NS：XMPP-バインド' /> </ストリーム：特長>"
    },
    {
      "indent": 3,
      "text": "Upon being informed that resource binding is mandatory-to-negotiate, the client MUST bind a resource to the stream as described in the following sections.",
      "ja": "次のセクションで説明するように、リソース結合が必須ツー交渉であることを通知されると、クライアントがストリームにリソースをバインドする必要があります。"
    },
    {
      "indent": 0,
      "text": "7.5. Generation of Resource Identifiers",
      "section_title": true,
      "ja": "7.5。リソース識別子の生成"
    },
    {
      "indent": 3,
      "text": "A resourcepart MUST at a minimum be unique among the connected resources for that <localpart@domainpart>. Enforcement of this policy is the responsibility of the server.",
      "ja": "resourcepartは最低でも<ローカル部@ domainpart>そのための接続リソースの中で一意でなければなりません。このポリシーの施行は、サーバの責任です。"
    },
    {
      "indent": 6,
      "text": "Security Warning: A resourcepart can be security-critical. For example, if a malicious entity can guess a client's resourcepart then it might be able to determine if the client (and therefore the controlling principal) is online or offline, thus resulting in a presence leak as described under Section 13.10.2. To prevent that possibility, a client can either (1) generate a random resourcepart on its own or (2) ask the server to generate a resourcepart on its behalf. One method for ensuring that the resourcepart is random is to generate a Universally Unique Identifier (UUID) as specified in [UUID].",
      "ja": "セキュリティ警告：resourcepartは、セキュリティが重要なことができます。悪意のあるエンティティはクライアントのresourcepartを推測できる場合、クライアント（および従って制御プリンシパル）がオンラインまたはオフラインである場合、例えば、セクション13.10.2の下で説明したように、プレゼンス漏れを生じる、決定することができるかもしれません。その可能性を防ぐために、クライアントは、（1）独自にランダムresourcepartを生成するか、（2）その代わってresourcepartを生成するサーバーを頼むことができます。 resourcepartがランダムであることを確実にするための一つの方法は、[UUID]で指定されるように汎用一意識別子（UUID）を生成することです。"
    },
    {
      "indent": 0,
      "text": "7.6. Server-Generated Resource Identifier",
      "section_title": true,
      "ja": "7.6。サーバー生成リソース識別子"
    },
    {
      "indent": 3,
      "text": "A server MUST be able to generate an XMPP resourcepart on behalf of a client. The resourcepart generated by the server MUST be random (see [RANDOM]).",
      "ja": "サーバーは、クライアントの代わりにXMPPのresourcepartを生成できなければなりません。サーバによって生成resourcepartは（[ランダム]を参照）ランダムでなければなりません。"
    },
    {
      "indent": 0,
      "text": "7.6.1. Success Case",
      "section_title": true,
      "ja": "7.6.1。成功事例"
    },
    {
      "indent": 3,
      "text": "A client requests a server-generated resourcepart by sending an IQ stanza of type \"set\" (see Section 8.2.3) containing an empty <bind/> element qualified by the 'urn:ietf:params:xml:ns:xmpp-bind' namespace.",
      "ja": "IETF：：のparams：XML：NS：XMPP-バインドクライアントがタイプ「セット」のIQスタンザを送信することにより、サーバー生成resourcepartを要求した「壷で修飾空の<バインド/>要素を含む（8.2.3項を参照してください） 「名前空間。"
    },
    {
      "indent": 3,
      "text": "C: <iq id='tn281v37' type='set'> <bind xmlns='urn:ietf:params:xml:ns:xmpp-bind'/> </iq>",
      "ja": "C：<IQ ID = 'tn281v37' TYPE = 'セット'> <バインドのxmlns = 'URN：IETF：paramsは：XML：NS：XMPPバインド' /> </ IQ>"
    },
    {
      "indent": 3,
      "text": "Once the server has generated an XMPP resourcepart for the client, it MUST return an IQ stanza of type \"result\" to the client, which MUST include a <jid/> child element that specifies the full JID for the connected resource as determined by the server.",
      "ja": "サーバがクライアントのXMPPのresourcepartを生成したら、それはによって決定される接続リソースのための完全なJIDを指定する<JID />子要素を含める必要があり、クライアントにタイプ「結果」のIQスタンザを返さなければなりませんサーバ。"
    },
    {
      "indent": 3,
      "text": "S: <iq id='tn281v37' type='result'> <bind xmlns='urn:ietf:params:xml:ns:xmpp-bind'> <jid> juliet@im.example.com/4db06f06-1ea4-11dc-aca3-000bcd821bfb </jid> </bind> </iq>",
      "ja": "S：<IQのID = 'tn281v37' TYPE = '結果'> <バインドのxmlns = 'URN：IETF：paramsは：XML：NS：XMPPバインド'> <JID> juliet@im.example.com/4db06f06-1ea4- 11dc-aca3-000bcd821bfb </ JID> </バインド> </ IQ>"
    },
    {
      "indent": 0,
      "text": "7.6.2. Error Cases",
      "section_title": true,
      "ja": "7.6.2。エラーケース"
    },
    {
      "indent": 3,
      "text": "When a client asks the server to generate a resourcepart during resource binding, the following stanza error conditions are defined:",
      "ja": "クライアントはリソースの結合時にresourcepartを生成するためにサーバーを要求すると、以下のスタンザエラー条件が定義されています。"
    },
    {
      "indent": 3,
      "text": "o The account has reached a limit on the number of simultaneous connected resources allowed.",
      "ja": "Oアカウントが許可される同時接続リソースの数の上限に達しました。"
    },
    {
      "indent": 3,
      "text": "o The client is otherwise not allowed to bind a resource to the stream.",
      "ja": "Oクライアントは、それ以外の場合は、ストリームにリソースをバインドすることはできません。"
    },
    {
      "indent": 3,
      "text": "Naturally, it is possible that error conditions not specified here might occur, as described under Section 8.3.",
      "ja": "8.3節で説明したようもちろん、ここで指定されていないエラー条件が発生する可能性があります。"
    },
    {
      "indent": 0,
      "text": "7.6.2.1. Resource Constraint",
      "section_title": true,
      "ja": "7.6.2.1。リソース制約"
    },
    {
      "indent": 3,
      "text": "If the account has reached a limit on the number of simultaneous connected resources allowed, the server MUST return a <resource-constraint/> stanza error (Section 8.3.3.18).",
      "ja": "アカウントが許可される同時接続リソースの数の上限に達している場合、サーバーは<リソース制約/>スタンザ誤り（セクション8.3.3.18）を返さなければなりません。"
    },
    {
      "indent": 3,
      "text": "S: <iq id='tn281v37' type='error'> <error type='wait'> <resource-constraint xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/> </error> </iq>",
      "ja": "S：<IQ ID = 'tn281v37' TYPE = 'エラー'> <エラーの種類= 'ウェイト'> <リソース制約のxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-スタンザ' /> </エラー> </ IQ>"
    },
    {
      "indent": 0,
      "text": "7.6.2.2. Not Allowed",
      "section_title": true,
      "ja": "7.6.2.2。禁じられている"
    },
    {
      "indent": 3,
      "text": "If the client is otherwise not allowed to bind a resource to the stream, the server MUST return a <not-allowed/> stanza error (Section 8.3.3.10).",
      "ja": "クライアントは、それ以外のストリームにリソースをバインドするために許可されていない場合、サーバーは<-許可されていません/>スタンザ誤り（セクション8.3.3.10）を返さなければなりません。"
    },
    {
      "indent": 3,
      "text": "S: <iq id='tn281v37' type='error'> <error type='cancel'> <not-allowed xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/> </error> </iq>",
      "ja": "S：<IQ IDが= 'tn281v37' TYPE = 'エラー'> <エラーの種類は= 'キャンセル'> <許容しないのxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-スタンザ' /> </エラー> </ IQ>"
    },
    {
      "indent": 0,
      "text": "7.7. Client-Submitted Resource Identifier",
      "section_title": true,
      "ja": "7.7。クライアント提出リソース識別子"
    },
    {
      "indent": 3,
      "text": "Instead of asking the server to generate a resourcepart on its behalf, a client MAY attempt to submit a resourcepart that it has generated or that the controlling user has provided.",
      "ja": "代わりに、その代わってresourcepartを生成するサーバーを尋ねると、クライアントは、それが生成されたか、または制御するユーザーが提供していることをresourcepartを提出しようとすることができます。"
    },
    {
      "indent": 0,
      "text": "7.7.1. Success Case",
      "section_title": true,
      "ja": "7.7.1。成功事例"
    },
    {
      "indent": 3,
      "text": "A client asks its server to accept a client-submitted resourcepart by sending an IQ stanza of type \"set\" containing a <bind/> element with a child <resource/> element containing non-zero-length XML character data.",
      "ja": "クライアントは、非ゼロ長のXML文字データを含む子供<リソース/>要素と<バインド/>要素を含むタイプ「セット」のIQスタンザを送信することにより、クライアントに提出resourcepartを受け入れるために、そのサーバーを要求します。"
    },
    {
      "indent": 3,
      "text": "C: <iq id='wy2xa82b4' type='set'> <bind xmlns='urn:ietf:params:xml:ns:xmpp-bind'> <resource>balcony</resource> </bind> </iq>",
      "ja": "C：<IQのID = 'wy2xa82b4' TYPE = 'セット'> <バインドのxmlns = 'URN：IETF：paramsは：XML：NS：XMPPバインド'> <リソース>バルコニー</リソース> </バインド> </ IQ >"
    },
    {
      "indent": 3,
      "text": "The server SHOULD accept the client-submitted resourcepart. It does so by returning an IQ stanza of type \"result\" to the client, including a <jid/> child element that specifies the full JID for the connected resource and contains without modification the client-submitted text.",
      "ja": "サーバーは、クライアントが送信しresourcepartを受け入れる必要があります。これは、接続されているリソースのための完全なJIDを指定し、変更することなく、クライアントが送信したテキストが含まれている<JID />子要素を含め、クライアントにタイプ「結果」のIQスタンザを返すことによってそうします。"
    },
    {
      "indent": 3,
      "text": "S: <iq id='wy2xa82b4' type='result'> <bind xmlns='urn:ietf:params:xml:ns:xmpp-bind'> <jid>juliet@im.example.com/balcony</jid> </bind> </iq>",
      "ja": "S：<IQ ID = 'wy2xa82b4' TYPE = '結果'> <バインドのxmlns = 'URN：IETF：paramsは：XML：NS：XMPPバインド'> <JID> juliet@im.example.com/balcony </ JID > </バインド> </ IQ>"
    },
    {
      "indent": 3,
      "text": "Alternatively, in accordance with local service policies the server MAY refuse the client-submitted resourcepart and override it with a resourcepart that the server generates.",
      "ja": "また、ローカルサービスポリシーに従って、サーバは、クライアントが送信しresourcepartを拒否することができ、サーバが生成resourcepartでそれを上書きします。"
    },
    {
      "indent": 3,
      "text": "S: <iq id='wy2xa82b4' type='result'> <bind xmlns='urn:ietf:params:xml:ns:xmpp-bind'> <jid> juliet@im.example.com/balcony 4db06f06-1ea4-11dc-aca3-000bcd821bfb </jid> </bind> </iq>",
      "ja": "S：<IQのID = 'wy2xa82b4' TYPE = '結果'> <バインドのxmlns = 'URN：IETF：paramsは：XML：NS：XMPPバインド'> <JID> juliet@im.example.com/balcony 4db06f06-1ea4 -11dc-aca3-000bcd821bfb </ JID> </バインド> </ IQ>"
    },
    {
      "indent": 0,
      "text": "7.7.2. Error Cases",
      "section_title": true,
      "ja": "7.7.2。エラーケース"
    },
    {
      "indent": 3,
      "text": "When a client attempts to submit its own XMPP resourcepart during resource binding, the following stanza error conditions are defined in addition to those described under Section 7.6.2:",
      "ja": "クライアントはリソースの結合の際に、独自のXMPPのresourcepartを提出しようとすると、以下のスタンザのエラー条件は、セクション7.6.2で説明したものに加えて定義されています。"
    },
    {
      "indent": 3,
      "text": "o The provided resourcepart cannot be processed by the server.",
      "ja": "O提供resourcepartは、サーバーで処理することはできません。"
    },
    {
      "indent": 3,
      "text": "o The provided resourcepart is already in use.",
      "ja": "O提供resourcepartはすでに使用されています。"
    },
    {
      "indent": 3,
      "text": "Naturally, it is possible that error conditions not specified here might occur, as described under Section 8.3.",
      "ja": "8.3節で説明したようもちろん、ここで指定されていないエラー条件が発生する可能性があります。"
    },
    {
      "indent": 0,
      "text": "7.7.2.1. Bad Request",
      "section_title": true,
      "ja": "7.7.2.1。要求の形式が正しくありません"
    },
    {
      "indent": 3,
      "text": "If the provided resourcepart cannot be processed by the server (e.g., because it is of zero length or because it otherwise violates the rules for resourceparts specified in [XMPP-ADDR]), the server can return a <bad-request/> stanza error (Section 8.3.3.1) but SHOULD instead process the resourcepart so that it is in conformance.",
      "ja": "（それはゼロ長さであるか、そうでなければ[XMPP-ADDR]で指定resourcepartsための規則に違反しているためため、例えば）、サーバーは<悪い要求/>スタンザエラーを返すことができ提供resourcepartは、サーバによって処理することができない場合（セクション8.3.3.1）、それは適合であるように代わりresourcepartを処理しなければなりません。"
    },
    {
      "indent": 3,
      "text": "S: <iq id='wy2xa82b4' type='error'> <error type='modify'> <bad-request xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/> </error> </iq>",
      "ja": "S：<IQ ID = 'wy2xa82b4' TYPE = 'エラー'> <エラータイプ= 'は修正'> <悪い要求のxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-スタンザ' /> </エラー> </ IQ>"
    },
    {
      "indent": 0,
      "text": "7.7.2.2. Conflict",
      "section_title": true,
      "ja": "7.7.2.2。コンフリクト"
    },
    {
      "indent": 3,
      "text": "If there is a currently connected client whose session has the resourcepart being requested by the newly connecting client, the server MUST do one of the following (which of these the server does is a matter for implementation or local service policy, although suggestions are provided below).",
      "ja": "そのセッション新しく接続するクライアントによって要求されているresourcepartがあり、現在接続しているクライアントがある場合は、サーバが提案を以下に提供されているが、サーバーは、実装やローカルサービスポリシーの問題であるんこれらの次のいずれかを（行う必要があります）。"
    },
    {
      "indent": 3,
      "text": "1. Override the resourcepart provided by the newly connecting client with a server-generated resourcepart. This behavior is encouraged, because it simplifies the resource binding process for client implementations.",
      "ja": "1.サーバー生成resourcepartで、新たに接続しているクライアントによって提供さresourcepartをオーバーライドします。それはクライアントの実装のためのリソースバインディングプロセスを簡素化するため、この動作は、奨励されます。"
    },
    {
      "indent": 3,
      "text": "2. Disallow the resource binding attempt of the newly connecting client and maintain the session of the currently connected client. This behavior is neither encouraged nor discouraged, despite the fact that it was implicitly encouraged in RFC 3920; however, note that handling of the <conflict/> error is unevenly supported among existing client implementations, which often treat it as an authentication error and have been observed to discard cached credentials when receiving it.",
      "ja": "2.新規に接続しているクライアントのリソース結合の試みを禁止し、現在接続されたクライアントのセッションを維持します。この動作は、それが暗黙のうちにRFC 3920に励まされたという事実にもかかわらず、奨励も落胆もありません。しかし、<紛争/>エラーが偏って多くの場合、認証エラーとして処理し、それを受信したときにキャッシュされた資格情報を破棄することが観察されている既存のクライアントの実装、の間でサポートされているの取り扱いに注意してください。"
    },
    {
      "indent": 3,
      "text": "3. Terminate the session of the currently connected client and allow the resource binding attempt of the newly connecting client. Although this was the traditional behavior of early XMPP server implementations, it is now discouraged because it can lead to a never-ending cycle of two clients effectively disconnecting each other; however, note that this behavior can be appropriate in some deployment scenarios or if the server knows that the currently connected client has a dead connection or broken stream as described under Section 4.6.",
      "ja": "3.現在接続されたクライアントのセッションを終了し、新たに接続するクライアントのリソース結合の試行を許可します。これは初期のXMPPサーバーの実装の伝統的な行動だったが、それは2つのクライアント互いに効果的に切断するの終わることのないサイクルにつながる可能性があるため、それが今で推奨され、しかし、この動作は、いくつかの展開シナリオやサーバが、4.6節で説明したように、現在接続しているクライアントが死んで接続または壊れたストリームを持っていることを知っている場合には適切なものとすることができることに注意してください。"
    },
    {
      "indent": 3,
      "text": "If the server follows behavior #1, it returns an <iq/> stanza of type \"result\" to the newly connecting client, where the <jid/> child of the <bind/> element contains XML character data that indicates the full JID of the client, including the resourcepart that was generated by the server.",
      "ja": "サーバが動作＃1を以下の場合は、新たに接続しているクライアント、完全なJIDを示し、<バインド/>要素は、XMLの文字データが含まれているの<JID />子供にタイプ「結果」の<IQ />スタンザを返します。サーバーによって生成されたresourcepartを含むクライアントの。"
    },
    {
      "indent": 3,
      "text": "S: <iq id='wy2xa82b4' type='result'> <bind xmlns='urn:ietf:params:xml:ns:xmpp-bind'> <jid> juliet@im.example.com/balcony 4db06f06-1ea4-11dc-aca3-000bcd821bfb </jid> </bind> </iq>",
      "ja": "S：<IQのID = 'wy2xa82b4' TYPE = '結果'> <バインドのxmlns = 'URN：IETF：paramsは：XML：NS：XMPPバインド'> <JID> juliet@im.example.com/balcony 4db06f06-1ea4 -11dc-aca3-000bcd821bfb </ JID> </バインド> </ IQ>"
    },
    {
      "indent": 3,
      "text": "If the server follows behavior #2, it sends a <conflict/> stanza error (Section 8.3.3.2) in response to the resource binding attempt of the newly connecting client but maintains the XML stream so that the newly connecting client has an opportunity to negotiate a non-conflicting resourcepart (i.e., the newly connecting client needs to choose a different resourcepart before making another attempt to bind a resource).",
      "ja": "サーバが動作＃2を以下の場合は、新たに接続するクライアントの試みを結合リソースに応じて、<紛争/>スタンザ誤り（セクション8.3.3.2）を送信しますが、新たに接続しているクライアントがする機会を持つようにXMLストリームを維持します競合しないresourcepartを交渉する（すなわち、新たに接続しているクライアントがリソースをバインドする別の試みを行う前に、別のresourcepartを選択する必要があります）。"
    },
    {
      "indent": 3,
      "text": "S: <iq id='wy2xa82b4' type='error'> <error type='modify'> <conflict xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/> </error> </iq>",
      "ja": "S：<IQのID = 'wy2xa82b4' TYPE = 'エラー'> <エラーの種類= '変更'> <競合のxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-スタンザ' /> </エラー> </ IQ>"
    },
    {
      "indent": 3,
      "text": "If the server follows behavior #3, it returns a <conflict/> stream error (Section 4.9.3.3) to the currently connected client (as described under Section 4.9.3.3) and returns an IQ stanza of type \"result\" (indicating success) in response to the resource binding attempt of the newly connecting client.",
      "ja": "サーバが動作＃3を、以下の場合には、成功を示す（現在接続されているクライアントに<コンフリクト/>ストリームエラー（セクション4.9.3.3）を返す（セクション4.9.3.3で説明したように）とタイプ「結果」のIQスタンザを返します）、新たに接続するクライアントのリソース結合の試みに応答しました。"
    },
    {
      "indent": 3,
      "text": "S: <iq id='wy2xa82b4' type='result'> <bind xmlns='urn:ietf:params:xml:ns:xmpp-bind'> <jid> juliet@im.example.com/balcony </jid> </bind> </iq>",
      "ja": "S：<IQ ID = 'wy2xa82b4' TYPE = '結果'> <バインドのxmlns = 'URN：IETF：paramsは：XML：NS：XMPPバインド'> <JID> juliet@im.example.com/balcony </ JID > </バインド> </ IQ>"
    },
    {
      "indent": 0,
      "text": "7.7.3. Retries",
      "section_title": true,
      "ja": "7.7.3。再試行"
    },
    {
      "indent": 3,
      "text": "If an error occurs when a client submits a resourcepart, the server SHOULD allow a configurable but reasonable number of retries (at least 5 and no more than 10); this enables the client to tolerate incorrectly provided resourceparts (e.g., bad data formats or duplicate text strings) without being forced to reconnect.",
      "ja": "クライアントはresourcepartを送信時にエラーが発生した場合、サーバは、再試行（少なくとも5と10を超えない）の設定が、合理的な数を可能にすべきです。これは、再接続することを余儀なくされることなく、（テキスト文字列を、例えば、不正なデータ形式または重複）が誤ってresourcepartsを許容するようにクライアントを可能にします。"
    },
    {
      "indent": 3,
      "text": "After the client has reached the retry limit, the server MUST close the stream with a <policy-violation/> stream error (Section 4.9.3.14).",
      "ja": "クライアントが再試行制限に達した後、サーバーは<ポリシー違反/>ストリームエラー（セクション4.9.3.14）でストリームを閉じる必要があります。"
    },
    {
      "indent": 0,
      "text": "8. XML Stanzas",
      "section_title": true,
      "ja": "8. XMLスタンザ"
    },
    {
      "indent": 3,
      "text": "After a client and a server (or two servers) have completed stream negotiation, either party can send XML stanzas. Three kinds of XML stanza are defined for the 'jabber:client' and 'jabber:server' namespaces: <message/>, <presence/>, and <iq/>. In addition, there are five common attributes for these stanza types. These common attributes, as well as the basic semantics of the three stanza types, are defined in this specification; more detailed information regarding the syntax of XML stanzas for instant messaging and presence applications is provided in [XMPP-IM], and for other applications in the relevant XMPP extension specifications.",
      "ja": "クライアントとサーバ（または2台のサーバーが）ストリームのネゴシエーションを完了した後、いずれかの当事者は、XMLスタンザを送ることができます。 「：クライアントおしゃべり」と 'おしゃべり：サーバの名前空間：XMLスタンザ3種類のために定義されている<メッセージ/>、<存在/>、および<IQ />。また、これらのスタンザタイプのための5つの共通の属性があります。これらの共通の属性だけでなく、3連タイプの基本的な意味は、この仕様で定義されています。インスタントメッセージングとプレゼンスアプリケーションのためのXMLスタンザの構文についての詳細な情報は[XMPP-IM]で、該当するXMPPの拡張仕様で、他のアプリケーションのために提供されます。"
    },
    {
      "indent": 3,
      "text": "Support for the XML stanza syntax and semantics defined in this specification is REQUIRED in XMPP client and server implementations.",
      "ja": "この仕様で定義されたXMLスタンザの構文およびセマンティクスのサポートは、XMPPクライアントとサーバ実装で必要とされます。"
    },
    {
      "indent": 6,
      "text": "Security Warning: A server MUST NOT process a partial stanza and MUST NOT attach meaning to the transmission timing of any part of a stanza (before receipt of the closing tag).",
      "ja": "セキュリティ警告：サーバは、部分的スタンザを処理してはならないと（終了タグを受信する前に）スタンザのどの部分の送信タイミングに意味を添付してはなりません。"
    },
    {
      "indent": 0,
      "text": "8.1. Common Attributes",
      "section_title": true,
      "ja": "8.1。共通属性"
    },
    {
      "indent": 3,
      "text": "The following five attributes are common to message, presence, and IQ stanzas.",
      "ja": "以下の5つの属性は、メッセージ、プレゼンス、およびIQスタンザに共通しています。"
    },
    {
      "indent": 0,
      "text": "8.1.1. to",
      "section_title": true,
      "ja": "８。１。１。 と"
    },
    {
      "indent": 3,
      "text": "The 'to' attribute specifies the JID of the intended recipient for the stanza.",
      "ja": "「から」属性がスタンザのために意図された受取人のJIDを指定します。"
    },
    {
      "indent": 3,
      "text": "<message to='romeo@example.net'> <body>Art thou not Romeo, and a Montague?</body> </message>",
      "ja": "<メッセージto='romeo@example.net '> <身体>アート汝ないロミオ、そしてモンタギュー？</ BODY> </メッセージ>"
    },
    {
      "indent": 3,
      "text": "For information about server processing of inbound and outbound XML stanzas based on the 'to' address, refer to Section 10.",
      "ja": "「から」アドレスに基づいて、インバウンドとアウトバウンドのXMLスタンザのサーバ処理の詳細については、セクション10を参照してください。"
    },
    {
      "indent": 0,
      "text": "8.1.1.1. Client-to-Server Streams",
      "section_title": true,
      "ja": "8.1.1.1。クライアントからサーバへのストリーム"
    },
    {
      "indent": 3,
      "text": "The following rules apply to inclusion of the 'to' attribute in stanzas sent from a connected client to its server over an XML stream qualified by the 'jabber:client' namespace.",
      "ja": "名前空間：以下のルールでは「クライアントジャバー」によって修飾されたXMLストリームを介してサーバーに接続されたクライアントから送信されたスタンザで「と」属性を含めることに適用されます。"
    },
    {
      "indent": 3,
      "text": "1. A stanza with a specific intended recipient (e.g., a conversation partner, a remote service, the server itself, even another resource associated with the user's bare JID) MUST possess a 'to' attribute whose value is an XMPP address.",
      "ja": "1.特定の意図された受信者とのスタンザ（例えば、会話パートナー、リモート・サービス、サーバ自体、ユーザの裸JIDに関連付けられても別のリソース）は、その値がXMPPアドレスである属性「に」を有していなければなりません。"
    },
    {
      "indent": 3,
      "text": "2. A stanza sent from a client to a server for direct processing by the server (e.g., roster processing as described in [XMPP-IM] or presence sent to the server for broadcasting to other entities) MUST NOT possess a 'to' attribute.",
      "ja": "2.（他のエンティティへの放送のためにサーバーに送信された[XMPP-IM]または存在下で説明するように、例えば名簿処理）サーバが直接処理するためにクライアントからサーバに送られたスタンザは「から」属性を持ってはなりません。"
    },
    {
      "indent": 3,
      "text": "The following rules apply to inclusion of the 'to' attribute in stanzas sent from a server to a connected client over an XML stream qualified by the 'jabber:client' namespace.",
      "ja": "名前空間：以下のルールでは「クライアントジャバー」によって修飾されたXMLストリームを介して接続されたサーバからクライアントに送られたスタンザで「と」属性を含めることに適用されます。"
    },
    {
      "indent": 3,
      "text": "1. If the server has received the stanza from another connected client or from a peer server, the server MUST NOT modify the 'to' address before delivering the stanza to the client.",
      "ja": "サーバが別の接続されたクライアントから、またはピアサーバーからのスタンザを受け取った。1.場合、サーバはクライアントにスタンザを配信する前に「から」のアドレスを変更してはいけません。"
    },
    {
      "indent": 3,
      "text": "2. If the server has itself generated the stanza (e.g., a response to an IQ stanza of type \"get\" or \"set\", even if the stanza did not include a 'to' address), the stanza MAY include a 'to' address, which MUST be the full JID of the client; however, if the stanza does not include a 'to' address then the client MUST treat it as if the 'to' address were included with a value of the client's full JID.",
      "ja": "2.サーバー自体が（例えば、タイプのIQスタンザへの応答は、「取得」またはスタンザは「から」のアドレスが含まれていない場合でも、「設定」）スタンザを生成した場合、スタンザは「に含まMAYクライアントの完全なJIDでなければならない \"アドレス、; 「から」アドレスは、クライアントの完全なJIDの値に含まれていたかのようにしかし、スタンザが含まれていない場合は、アドレス「に」をクライアントはそれを扱わなければなりません。"
    },
    {
      "indent": 6,
      "text": "Implementation Note: It is the server's responsibility to deliver only stanzas that are addressed to the client's full JID or the user's bare JID; thus, there is no need for the client to check the 'to' address of incoming stanzas. However, if the client does check the 'to' address then it is suggested to check at most the bare JID portion (not the full JID), since the 'to' address might be the user's bare JID, the client's current full JID, or even a full JID with a different resourcepart (e.g., in the case of so-called \"offline messages\" as described in [XEP-0160]).",
      "ja": "実装上の注意：クライアントの完全なJIDまたはユーザーの裸のJIDに宛てているだけのスタンザを提供するために、サーバの責任です。したがって、クライアントが着信スタンザの「から」アドレスを確認するために必要はありません。しかし、クライアントは、ほとんどの裸JID部分（ない完全なJID）を確認することが提案されているアドレス「に」アドレスがあるかもしれない「から」利用者の裸のJID以来、クライアントの現在の完全なJIDをチェックしない場合は、あるいは、完全なJID異なるresourcepart有する（に記載されているように、いわゆる「オフラインメッセージ」の場合には、例えば、[XEP-0160】）。"
    },
    {
      "indent": 0,
      "text": "8.1.1.2. Server-to-Server Streams",
      "section_title": true,
      "ja": "8.1.1.2。サーバー間のストリーム"
    },
    {
      "indent": 3,
      "text": "The following rules apply to inclusion of the 'to' attribute in the context of XML streams qualified by the 'jabber:server' namespace (i.e., server-to-server streams).",
      "ja": "名前空間（すなわち、サーバ間ストリーム）：以下の規則は、「サーバおしゃべり」によって修飾されたXMLストリームの文脈における「へ」属性の包含に適用されます。"
    },
    {
      "indent": 3,
      "text": "1. A stanza MUST possess a 'to' attribute whose value is an XMPP address; if a server receives a stanza that does not meet this restriction, it MUST close the stream with an <improper-addressing/> stream error (Section 4.9.3.7).",
      "ja": "1.スタンザは、その値がXMPPアドレスである「」の属性を有していなければなりません。サーバーは、この制限を満たしていないスタンザを受信した場合、それは<不適切なアドレッシング/>ストリームエラー（セクション4.9.3.7）でストリームを閉じる必要があります。"
    },
    {
      "indent": 3,
      "text": "2. The domainpart of the JID contained in the stanza's 'to' attribute MUST match the FQDN of the receiving server (or any validated domain thereof) as communicated via SASL negotiation (see Section 6), Server Dialback (see [XEP-0220]), or similar means; if a server receives a stanza that does not meet this restriction, it MUST close the stream with a <host-unknown/> stream error (Section 4.9.3.6) or a <host-gone/> stream error (Section 4.9.3.5).",
      "ja": "SASLネゴシエーションを介して通信2.属性「」のスタンザの中に含まれるJIDのdomainpartは、受信サーバ（またはそれらの任意の検証ドメイン）のFQDNと一致しなければならない（セクション6を参照）、サーバダイアルバックは、（[XEP-0220]を参照してください）、又は同様の手段。サーバーは、この制限を満たしていないスタンザを受信した場合、それは、<ホスト不明/>ストリームエラー（セクション4.9.3.6）または<ホストなくなっ/>ストリームエラー（セクション4.9.3.5）でストリームを閉じる必要があります。"
    },
    {
      "indent": 0,
      "text": "8.1.2. from",
      "section_title": true,
      "ja": "8.1.2。から"
    },
    {
      "indent": 3,
      "text": "The 'from' attribute specifies the JID of the sender.",
      "ja": "「から」属性は、送信者のJIDを指定します。"
    },
    {
      "indent": 3,
      "text": "<message from='juliet@im.example.com/balcony' to='romeo@example.net'> <body>Art thou not Romeo, and a Montague?</body> </message>",
      "ja": "<メッセージfrom='juliet@im.example.com/balcony 'to='romeo@example.net'> <身体>アート汝ないロミオ、そしてモンタギュー？</ BODY> </メッセージ>"
    },
    {
      "indent": 0,
      "text": "8.1.2.1. Client-to-Server Streams",
      "section_title": true,
      "ja": "8.1.2.1。クライアントからサーバへのストリーム"
    },
    {
      "indent": 3,
      "text": "The following rules apply to the 'from' attribute in the context of XML streams qualified by the 'jabber:client' namespace (i.e., client-to-server streams).",
      "ja": "名前空間（すなわち、クライアントからサーバーへのストリーム）：以下のルールでは「クライアントジャバー」によって修飾されたXMLストリームのコンテキストの属性「から」に適用されます。"
    },
    {
      "indent": 3,
      "text": "1. When a server receives an XML stanza from a connected client, the server MUST add a 'from' attribute to the stanza or override the 'from' attribute specified by the client, where the value of the",
      "ja": "1.サーバーが接続されたクライアントからのXMLスタンザを受信すると、サーバは属性「から」スタンザに追加するかの値がクライアントによって指定された属性「から」オーバーライドする必要があります"
    },
    {
      "indent": 7,
      "text": "'from' attribute MUST be the full JID\n(<localpart@domainpart/resource>) determined by the server for\nthe connected resource that generated the stanza (see\nSection 4.3.6), or the bare JID (<localpart@domainpart>) in the\ncase of subscription-related presence stanzas (see [XMPP-IM]).",
      "raw": true
    },
    {
      "indent": 3,
      "text": "2. When the server generates a stanza on its own behalf for delivery to the client from the server itself, the stanza MUST include a 'from' attribute whose value is the bare JID (i.e., <domainpart>) of the server as agreed upon during stream negotiation (e.g., based on the 'to' attribute of the initial stream header).",
      "ja": "2.サーバーは、サーバー自体からクライアントへの配信のために、独自の代理でスタンザを生成すると合意したとして、スタンザは、サーバーの値がある属性裸JID（すなわち、<domainpart>「）から」含まなければなりませんストリームのネゴシエーション中に（例えば、初期ストリームヘッダの「から」属性に基づいて）。"
    },
    {
      "indent": 3,
      "text": "3. When the server generates a stanza from the server for delivery to the client on behalf of the account of the connected client (e.g., in the context of data storage services provided by the server on behalf of the client), the stanza MUST either (a) not include a 'from' attribute or (b) include a 'from' attribute whose value is the account's bare JID (<localpart@domainpart>).",
      "ja": "サーバが接続されたクライアントのアカウントに代わってクライアントに配信するために、サーバからのスタンザを生成3.（例えば、クライアントに代わってサーバーが提供するデータ・ストレージ・サービスの文脈で）、スタンザはどちらかMUST （A）「から」属性または含まない（b）に含まれ、その値は、アカウントの裸JIDある属性「から」（<ローカル部@ domainpart>）。"
    },
    {
      "indent": 3,
      "text": "4. A server MUST NOT send to the client a stanza without a 'from' attribute if the stanza was not generated by the server on its own behalf (e.g., if it was generated by another client or a peer server and the server is merely delivering it to the client on behalf of some other entity); therefore, when a client receives a stanza that does not include a 'from' attribute, it MUST assume that the stanza is from the user's account on the server.",
      "ja": "4.サーバーは、それが別のクライアントまたはピアサーバーによって生成された場合スタンザは、例えば、自身の代理として（上のサーバによって生成されなかった場合、属性「から」サーバーが単にあるなしにクライアントにスタンザを送ってはいけませんいくつかの他のエンティティに代わってクライアントに配信）。クライアントは「から」属性が含まれていないスタンザを受信したときので、それはスタンザは、サーバー上のユーザーのアカウントからであると仮定しなければなりません。"
    },
    {
      "indent": 0,
      "text": "8.1.2.2. Server-to-Server Streams",
      "section_title": true,
      "ja": "8.1.2.2。サーバー間のストリーム"
    },
    {
      "indent": 3,
      "text": "The following rules apply to the 'from' attribute in the context of XML streams qualified by the 'jabber:server' namespace (i.e., server-to-server streams).",
      "ja": "名前空間（すなわち、サーバ間ストリーム）：以下の規則は、「サーバおしゃべり」によって修飾されたXMLストリームの文脈における「から」属性に適用されます。"
    },
    {
      "indent": 3,
      "text": "1. A stanza MUST possess a 'from' attribute whose value is an XMPP address; if a server receives a stanza that does not meet this restriction, it MUST close the stream with an <improper-addressing/> stream error (Section 4.9.3.7).",
      "ja": "1.スタンザを有していなければならない属性値がXMPPアドレスである「から」。サーバーは、この制限を満たしていないスタンザを受信した場合、それは<不適切なアドレッシング/>ストリームエラー（セクション4.9.3.7）でストリームを閉じる必要があります。"
    },
    {
      "indent": 3,
      "text": "2. The domainpart of the JID contained in the stanza's 'from' attribute MUST match the FQDN of the sending server (or any validated domain thereof) as communicated via SASL negotiation (see Section 6), Server Dialback (see [XEP-0220]), or similar means; if a server receives a stanza that does not meet this restriction, it MUST close the stream with an <invalid-from/> stream error (Section 4.9.3.9).",
      "ja": "SASLネゴシエーションを介して通信2.属性「から」スタンザの中に含まれるJIDのdomainpartは、送信サーバ（またはそれらの任意の検証ドメイン）のFQDNと一致しなければならない（セクション6を参照）、サーバダイアルバックは、（[XEP-0220]を参照してください）、又は同様の手段。サーバーは、この制限を満たしていないスタンザを受信した場合、それは<無効-から/>ストリームエラー（セクション4.9.3.9）でストリームを閉じる必要があります。"
    },
    {
      "indent": 3,
      "text": "Enforcement of these rules helps to prevent certain denial-of-service attacks as described under Section 13.12.",
      "ja": "これらの規則の施行は、セクション13.12の下で説明するように、特定のサービス拒否攻撃を防ぐのに役立ちます。"
    },
    {
      "indent": 0,
      "text": "8.1.3. id",
      "section_title": true,
      "ja": "8.1.3。 ID"
    },
    {
      "indent": 3,
      "text": "The 'id' attribute is used by the originating entity to track any response or error stanza that it might receive in relation to the generated stanza from another entity (such as an intermediate server or the intended recipient).",
      "ja": "「ID」属性は、（例えば、中間サーバまたは意図された受信者として）、それは別のエンティティから生成されたスタンザに関連して受けるかもしれない任意の応答又はエラースタンザを追跡するために、元のエンティティによって使用されます。"
    },
    {
      "indent": 3,
      "text": "It is up to the originating entity whether the value of the 'id' attribute is unique only within its current stream or unique globally.",
      "ja": "「ID」属性の値がグローバルにのみ、現在のストリームまたは独特内で一意であるかどうかは、元のエンティティまでです。"
    },
    {
      "indent": 3,
      "text": "For <message/> and <presence/> stanzas, it is RECOMMENDED for the originating entity to include an 'id' attribute; for <iq/> stanzas, it is REQUIRED.",
      "ja": "<メッセージ/>と<存在/>スタンザのためには、「ID」属性を含むように発信エンティティに推奨されます。 <IQ />スタンザのために、それが必要です。"
    },
    {
      "indent": 3,
      "text": "If the generated stanza includes an 'id' attribute then it is REQUIRED for the response or error stanza to also include an 'id' attribute, where the value of the 'id' attribute MUST match that of the generated stanza.",
      "ja": "生成されたスタンザの「ID」属性を含む場合、それはまた、「ID」属性の値が生成されるスタンザのものと一致しなければならない「ID」属性を含むように応答またはエラースタンザに必要とされます。"
    },
    {
      "indent": 3,
      "text": "The semantics of IQ stanzas impose additional restrictions as described under Section 8.2.3.",
      "ja": "セクション8.2.3で説明したようIQスタンザの意味は、追加の制限を課します。"
    },
    {
      "indent": 0,
      "text": "8.1.4. type",
      "section_title": true,
      "ja": "8.1.4。タイプ"
    },
    {
      "indent": 3,
      "text": "The 'type' attribute specifies the purpose or context of the message, presence, or IQ stanza. The particular allowable values for the 'type' attribute vary depending on whether the stanza is a message, presence, or IQ stanza. The defined values for message and presence stanzas are specific to instant messaging and presence applications and therefore are defined in [XMPP-IM], whereas the values for IQ stanzas specify the part of the semantics for all structured request-response exchanges (no matter what the payload) and therefore are specified under Section 8.2.3. The only 'type' value common to all three kinds of stanzas is \"error\" as described under Section 8.3.",
      "ja": "「タイプ」属性には、メッセージ、プレゼンス、またはIQスタンザの目的やコンテキストを指定します。 「タイプ」属性の特定の許容値は、スタンザがメッセージ、プレゼンス、またはIQスタンザであるかどうかに依存して変化します。 IQスタンザの値は関係なく、すべての構成要求 - 応答交換のセマンティクス（の一部を指定しないのに対し、メッセージ及びプレゼンススタンザのための定義された値は、インスタントメッセージングおよびプレゼンスアプリケーションに固有であり、したがって[XMPP-IM]で定義されているものしたがって、ペイロード）とはセクション8.2.3で指定されています。 8.3節で説明したようスタンザのすべての3つの種類に共通する唯一の「タイプ」値が「エラー」です。"
    },
    {
      "indent": 0,
      "text": "8.1.5. xml:lang",
      "section_title": true,
      "ja": "8.1.5。 XML：LANG"
    },
    {
      "indent": 3,
      "text": "A stanza SHOULD possess an 'xml:lang' attribute (as defined in Section 2.12 of [XML]) if the stanza contains XML character data that is intended to be presented to a human user (as explained in [CHARSETS], \"internationalization is for humans\"). The value of the 'xml:lang' attribute specifies the default language of any such human-readable XML character data.",
      "ja": "国際化がある」、スタンザは、[CHARSETS]で説明したように人間のユーザ（に提示されることを意図されたXML文字データが含まれている場合は、属性（[XML]のセクション2.12で定義されている）：スタンザは「LANGのxml」を有していなければなりません人間のために」）。 「XML：LANG」の値属性がどのように人間が読めるXML文字データのデフォルト言語を指定します。"
    },
    {
      "indent": 3,
      "text": "<presence from='romeo@example.net/orchard' xml:lang='en'> <show>dnd</show> <status>Wooing Juliet</status> </presence>",
      "ja": "<プレゼンスfrom='romeo@example.net/orchard」XML：LANG = 'EN'> <表示> DND </表示> <状態>ジュリエット求愛</ステータス> </プレゼンス>"
    },
    {
      "indent": 3,
      "text": "The value of the 'xml:lang' attribute MAY be overridden by the 'xml: lang' attribute of a specific child element.",
      "ja": "「XML：LANG」の値：特定の子要素の属性属性は「LANGのxml」で上書きすることができます。"
    },
    {
      "indent": 3,
      "text": "<presence from='romeo@example.net/orchard' xml:lang='en'> <show>dnd</show> <status>Wooing Juliet</status> <status xml:lang='cs'>Dvo&#x0159;&#x00ED;m se Julii</status> </presence>",
      "ja": "<プレゼンスfrom='romeo@example.net/orchard」XML：LANG = 'EN'> <ショー> DND </表示し> <状態>求愛ジュリエット</ステータス> <ステータスXML：LANG = 'CS'> DVO＆＃ x0159;＆＃x00ED; M SE Julii </ステータス> </プレゼンス>"
    },
    {
      "indent": 3,
      "text": "If an outbound stanza generated by a client does not possess an 'xml: lang' attribute, the client's server SHOULD add an 'xml:lang' attribute whose value is that specified for the client's output stream as defined under Section 4.7.4.",
      "ja": "クライアントによって生成されたアウトバウンドスタンザは「XML：LANG」所有していない場合は、次の値が4.7.4の下で定義されるように、クライアントの出力ストリームに指定したことにある属性の属性を、クライアントのサーバーは、「LANGのxml」を追加する必要があります。"
    },
    {
      "indent": 3,
      "text": "C: <presence from='romeo@example.net/orchard'> <show>dnd</show> <status>Wooing Juliet</status> </presence>",
      "ja": "C：<存在from='romeo@example.net/orchard '> <ショー> DND </表示し> <状態>ジュリエット求愛</ステータス> </プレゼンス>"
    },
    {
      "indent": 3,
      "text": "S: <presence from='romeo@example.net/orchard' to='juliet@im.example.com' xml:lang='en'> <show>dnd</show> <status>Wooing Juliet</status> </presence>",
      "ja": "S：<存在from='romeo@example.net/orchard 'to='juliet@im.example.com' のxml：LANG = 'EN'> <ショー> DND </表示し> <状態>求愛ジュリエット</ステータス> </プレゼンス>"
    },
    {
      "indent": 3,
      "text": "If an inbound stanza received by a client or server does not possess an 'xml:lang' attribute, an implementation MUST assume that the default language is that specified for the entity's input stream as defined under Section 4.7.4.",
      "ja": "クライアントまたはサーバが受信したインバウンドスタンザは「XML：LANG」所有していない場合は、属性を、実装がデフォルトの言語は、セクション4.7.4で定義したエンティティの入力ストリームに指定したことにあると仮定しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The value of the 'xml:lang' attribute MUST conform to the NMTOKEN datatype (as defined in Section 2.3 of [XML]) and MUST conform to the format defined in [LANGTAGS].",
      "ja": "「XML：langの」の値属性がNMTOKENデータ型に一致しなければなりません（[XML]のセクション2.3で定義されるように）と[LANGTAGS]で定義されたフォーマットに従わなければなりません。"
    },
    {
      "indent": 3,
      "text": "A server MUST NOT modify or delete 'xml:lang' attributes on stanzas it receives from other entities.",
      "ja": "サーバーは、「XMLを：LANG」を変更または削除してはならない、それは他のエンティティから受け取るスタンザの属性を。"
    },
    {
      "indent": 0,
      "text": "8.2. Basic Semantics",
      "section_title": true,
      "ja": "8.2。基本的なセマンティクス"
    },
    {
      "indent": 0,
      "text": "8.2.1. Message Semantics",
      "section_title": true,
      "ja": "8.2.1。メッセージセマンティクス"
    },
    {
      "indent": 3,
      "text": "The <message/> stanza is a \"push\" mechanism whereby one entity pushes information to another entity, similar to the communications that occur in a system such as email. All message stanzas will possess a 'to' attribute that specifies the intended recipient of the message (see Section 8.1.1 and Section 10.3), unless the message is being sent to the bare JID of a connected client's account. Upon receiving a message stanza with a 'to' address, a server SHOULD attempt to route or deliver it to the intended recipient (see Section 10 for general routing and delivery rules related to XML stanzas).",
      "ja": "<メッセージ/>スタンザは、一つのエンティティが、電子メールのようなシステムで発生する通信と同様の別のエンティティに情報をプッシュすることにより、「プッシュ」メカニズムです。すべてのメッセージは、メッセージは、接続されたクライアントのアカウントの裸のJIDに送信されていない限り、（8.1.1項および10.3を参照）、メッセージの意図された受信者を指定する「から」属性を保有しますスタンザ。 「」のアドレスを持つメッセージスタンザを受信すると、サーバは、ルートを試みる必要があり、または意図された受信者に配信（XMLスタンザに関連する一般的なルーティングと配信ルールのセクション10を参照）。"
    },
    {
      "indent": 0,
      "text": "8.2.2. Presence Semantics",
      "section_title": true,
      "ja": "8.2.2。プレゼンスセマンティクス"
    },
    {
      "indent": 3,
      "text": "The <presence/> stanza is a specialized \"broadcast\" or \"publish-subscribe\" mechanism, whereby multiple entities receive information (in this case, network availability information) about an entity to which they have subscribed. In general, a publishing client SHOULD send a presence stanza with no 'to' attribute, in which case the server to which the client is connected will broadcast that stanza to all subscribed entities. However, a publishing client MAY also send a presence stanza with a 'to' attribute, in which case the server will route or deliver that stanza to the intended recipient. Although the <presence/> stanza is most often used by XMPP clients, it can also be used by servers, add-on services, and any other kind of XMPP entity. See Section 10 for general routing and delivery rules related to XML stanzas, and [XMPP-IM] for rules specific to presence applications.",
      "ja": "<存在/>スタンザは、特殊な「ブロードキャスト」または「パブリッシュ・サブスクライブ」機構は、複数のエンティティがエンティティに関する（この場合には、ネットワークの可用性情報）情報を受信することにより、彼らが加入していることです。一般的には、出版クライアントは、クライアントが接続しているサーバがすべてのサブスクライブエンティティにそのスタンザを放送します。その場合には、属性、「に」ノーと存在スタンザを送るべきです。しかし、出版クライアントは、サーバーが目的の受信者にそのスタンザをルートまたはお届けします。その場合には「と」属性を持つ存在スタンザを送信することができます。 <存在/>スタンザは、ほとんどの場合、XMPPクライアントによって使用されているが、それはまた、サーバーで使用することができ、サービスのアドオン、およびXMPP実体の他の種類。 XMLスタンザ、およびプレゼンスアプリケーションに固有のルールの[XMPP-IM]に関連する一般的なルーティングと配信ルールのセクション10を参照。"
    },
    {
      "indent": 0,
      "text": "8.2.3. IQ Semantics",
      "section_title": true,
      "ja": "8.2.3。 IQのセマンティクス"
    },
    {
      "indent": 3,
      "text": "Info/Query, or IQ, is a \"request-response\" mechanism, similar in some ways to the Hypertext Transfer Protocol [HTTP]. The semantics of IQ enable an entity to make a request of, and receive a response from, another entity. The data content of the request and response is defined by the schema or other structural definition associated with the XML namespace that qualifies the direct child element of the IQ element (see Section 8.4), and the interaction is tracked by the requesting entity through use of the 'id' attribute. Thus, IQ interactions follow a common pattern of structured data exchange such as get/result or set/result (although an error can be returned in reply to a request if appropriate):",
      "ja": "情報/クエリ、またはIQは、ハイパーテキスト転送プロトコル[HTTP]にいくつかの点で類似した「要求 - 応答」のメカニズム、です。 IQのセマンティクスはの要求を行うエンティティを有効にし、別のエンティティからの応答を受け取ります。要求および応答のデータ内容は、（セクション8.4を参照）スキーマまたはIQ要素の直接の子要素を修飾するXML名前空間に関連する他の構造的定義によって定義され、そして相互作用がの使用を介して要求エンティティによって追跡されます「ID」属性。したがって、IQの相互作用は、（適切な場合は、エラーが要求に対する応答で返すことができるが）、このような取得/結果としての構造化データ交換の一般的なパターンまたはセット/結果は、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "Requesting                  Responding\n  Entity                      Entity\n----------                  ----------\n    |                            |\n    | <iq id='1' type='get'>     |\n    |   [ ... payload ... ]      |\n    | </iq>                      |\n    | -------------------------> |\n    |                            |\n    | <iq id='1' type='result'>  |\n    |   [ ... payload ... ]      |\n    | </iq>                      |\n    | <------------------------- |\n    |                            |\n    | <iq id='2' type='set'>     |\n    |   [ ... payload ... ]      |\n    | </iq>                      |\n    | -------------------------> |\n    |                            |\n    | <iq id='2' type='error'>   |\n    |   [ ... condition ... ]    |\n    | </iq>                      |\n    | <------------------------- |\n    |                            |",
      "raw": true
    },
    {
      "indent": 21,
      "text": "Figure 5: Semantics of IQ Stanzas",
      "ja": "図5：IQスタンザのセマンティクス"
    },
    {
      "indent": 3,
      "text": "To enforce these semantics, the following rules apply:",
      "ja": "これらのセマンティクスを強制するには、以下のルールが適用されます。"
    },
    {
      "indent": 3,
      "text": "1. The 'id' attribute is REQUIRED for IQ stanzas.",
      "section_title": true,
      "ja": "1.「ID」属性はIQスタンザのために必要です。"
    },
    {
      "indent": 3,
      "text": "2. The 'type' attribute is REQUIRED for IQ stanzas. The value MUST be one of the following; if not, the recipient or an intermediate router MUST return a <bad-request/> stanza error (Section 8.3.3.1).",
      "ja": "2.「タイプ」属性はIQスタンザのために必要です。値は以下のいずれかでなければなりません。ない場合は、受信者または中間ルータは、<悪い要求/>スタンザ誤り（セクション8.3.3.1）を返さなければなりません。"
    },
    {
      "indent": 7,
      "text": "*  get -- The stanza requests information, inquires about what\n   data is needed in order to complete further operations, etc.",
      "raw": true
    },
    {
      "indent": 7,
      "text": "* set -- The stanza provides data that is needed for an operation to be completed, sets new values, replaces existing values, etc.",
      "ja": "*セットは - スタンザは、操作が完了するために必要なデータを提供し、新しい値を設定し、など既存の値を置き換え"
    },
    {
      "indent": 7,
      "text": "* result -- The stanza is a response to a successful get or set request.",
      "ja": "*結果 - スタンザが成功取得または設定要求への応答です。"
    },
    {
      "indent": 7,
      "text": "* error -- The stanza reports an error that has occurred regarding processing or delivery of a get or set request (see Section 8.3).",
      "ja": "*エラー - スタンザは、取得または設定要求（8.3節を参照）の処理や配信に関して発生したエラーを報告します。"
    },
    {
      "indent": 3,
      "text": "3. An entity that receives an IQ request of type \"get\" or \"set\" MUST reply with an IQ response of type \"result\" or \"error\". The response MUST preserve the 'id' attribute of the request (or be empty if the generated stanza did not include an 'id' attribute).",
      "ja": "3.「GET」または「セット」タイプ「結果」または「エラー」のIQ応答で応答しなければならないのIQ要求を受信するエンティティ。応答は、要求の「ID」属性を保存する（または生成スタンザは、「ID」属性が含まれていなかった場合は空である）しなければなりません。"
    },
    {
      "indent": 3,
      "text": "4. An entity that receives a stanza of type \"result\" or \"error\" MUST NOT respond to the stanza by sending a further IQ response of type \"result\" or \"error\"; however, the requesting entity MAY send another request (e.g., an IQ of type \"set\" to provide obligatory information discovered through a get/result pair).",
      "ja": "タイプ「結果」または「エラー」のスタンザを受信4.エンティティは、タイプ「結果」または「エラー」のさらなるIQ応答を送信することによって、スタンザに応答してはいけません。しかし、要求側エンティティが別の要求を送信することができる（例えば、タイプ「セット」のIQは、get /結果の対を介して発見された必須情報を提供します）。"
    },
    {
      "indent": 3,
      "text": "5. An IQ stanza of type \"get\" or \"set\" MUST contain exactly one child element, which specifies the semantics of the particular request.",
      "ja": "5種類のIQスタンザは、「設定」「取得」または正確に特定の要求のセマンティクスを指定する1つの要素を含んでいなければなりません。"
    },
    {
      "indent": 3,
      "text": "6. An IQ stanza of type \"result\" MUST include zero or one child elements.",
      "ja": "6.「結果」のIQスタンザは、ゼロまたは1つの子要素を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "7. An IQ stanza of type \"error\" MAY include the child element contained in the associated \"get\" or \"set\" and MUST include an <error/> child; for details, see Section 8.3.",
      "ja": "7種類のIQスタンザ「エラー」とは、関連する「取得」または「セット」および<誤り/>子を含まなければなりませんに含まれる子要素を含んでいてもよいです。詳細については、8.3節を参照してください。"
    },
    {
      "indent": 0,
      "text": "8.3. Stanza Errors",
      "section_title": true,
      "ja": "8.3。エラールーム"
    },
    {
      "indent": 3,
      "text": "Stanza-related errors are handled in a manner similar to stream errors (Section 4.9). Unlike stream errors, stanza errors are recoverable; therefore, they do not result in termination of the XML stream and underlying TCP connection. Instead, the entity that discovers the error condition returns an error stanza, which is a stanza that:",
      "ja": "スタンザ関連のエラーは、エラー（セクション4.9）ストリームと同様に処理されます。ストリームのエラーとは異なり、スタンザエラーは回復可能です。そのため、彼らはXMLストリームと基本的なTCP接続の終了にはなりません。代わりに、エラー状態を検出したエンティティは、そのスタンザでエラースタンザを返します。"
    },
    {
      "indent": 3,
      "text": "o is of the same kind (message, presence, or IQ) as the generated stanza that triggered the error",
      "ja": "oは、エラーを引き起こし生成スタンザと同じ種類（メッセージ、プレゼンス、またはIQ）であります"
    },
    {
      "indent": 3,
      "text": "o has a 'type' attribute set to a value of \"error\"",
      "ja": "oが「エラー」の値に設定する「タイプ」属性を持っています"
    },
    {
      "indent": 3,
      "text": "o typically swaps the 'from' and 'to' addresses of the generated stanza",
      "ja": "O一般的に生成されたスタンザのアドレス「に」「から」スワップと"
    },
    {
      "indent": 3,
      "text": "o mirrors the 'id' attribute (if any) of the generated stanza that triggered the error",
      "ja": "oは、エラーを引き起こした生成スタンザの「ID」属性を（もしあれば）ミラー"
    },
    {
      "indent": 3,
      "text": "o contains an <error/> child element that specifies the error condition and therefore provides a hint regarding actions that the sender might be able to take in an effort to remedy the error (however, it is not always possible to remedy the error)",
      "ja": "oは（ただし、エラーを修正することができるとは限らない）エラー条件を指定するため、送信者がエラーを修正するための努力に取ることができるかもしれないことを行動に関するヒントを提供します。<エラー/>子要素が含まれています"
    },
    {
      "indent": 0,
      "text": "8.3.1. Rules",
      "section_title": true,
      "ja": "8.3.1。ルール"
    },
    {
      "indent": 3,
      "text": "The following rules apply to stanza errors:",
      "ja": "次の規則がスタンザ・エラーに適用されます。"
    },
    {
      "indent": 3,
      "text": "1. The receiving or processing entity that detects an error condition in relation to a stanza SHOULD return an error stanza (and MUST do so for IQ stanzas).",
      "ja": "1スタンザに関連してエラー状態を検出する受信又は処理エンティティはエラースタンザを返すべきである（及びIQスタンザのためにそうしなければなりません）。"
    },
    {
      "indent": 3,
      "text": "2. The error stanza SHOULD simply swap the 'from' and 'to' addresses from the generated stanza, unless doing so would (1) result in an information leak (see under Section 13.10) or other breach of security, or (2) force the sender of the error stanza to include a malformed JID in the 'from' or 'to' address of the error stanza.",
      "ja": "2.エラースタンザが「から」スワップとアドレス「」の発生スタンザから、（1）情報漏洩につながるようにすることがない限り（セクション13.10下を参照）または他のセキュリティ違反、または（2）単にSHOULDエラースタンザのアドレス「に」「から」またはで不正な形式のJIDを含めるようにエラースタンザの送信者を強制します。"
    },
    {
      "indent": 3,
      "text": "3. If the generated stanza was <message/> or <presence/> and included an 'id' attribute then it is REQUIRED for the error stanza to also include an 'id' attribute. If the generated stanza was <iq/> then the error stanza MUST include an 'id' attribute. In all cases, the value of the 'id' attribute MUST match that of the generated stanza (or be empty if the generated stanza did not include an 'id' attribute).",
      "ja": "生成されたスタンザがあった<メッセージ/>または<存在/>と「ID」属性が含まれている場合3.それはまた、「ID」属性を含むようにエラースタンザのために必要とされます。生成されたスタンザが<IQ />だった場合、エラー・スタンザは、「ID」属性を含まなければなりません。すべての場合において、「ID」属性の値は、生成されたスタンザと一致（または生成スタンザは、「ID」属性が含まれていなかった場合は空である）しなければなりません。"
    },
    {
      "indent": 3,
      "text": "4. An error stanza MUST contain an <error/> child element.",
      "section_title": true,
      "ja": "4.エラースタンザは<エラー/>子要素を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "5. The entity that returns an error stanza MAY pass along its JID to the sender of the generated stanza (e.g., for diagnostic or tracking purposes) through the addition of a 'by' attribute to the <error/> child element.",
      "ja": "5. <誤り/>子要素の属性「で」の添加により生成スタンザ（例えば、診断または追跡目的のために）の送信者にそのJIDに沿って通過することができるエラースタンザを返すエンティティ。"
    },
    {
      "indent": 3,
      "text": "6. The entity that returns an error stanza MAY include the original XML sent so that the sender can inspect and, if necessary, correct the XML before attempting to resend (however, this is a courtesy only and the originating entity MUST NOT depend on receiving the original payload). Naturally, the entity MUST NOT include the original data if it not well-formed XML, violates the XML restrictions of XMPP (see under Section 11.1), or is otherwise harmful (e.g., exceeds a size limit).",
      "ja": "必要であれば、送信者は、検査とすることができるように送信された元のXMLを含む可能性のあるエラースタンザを返すエンティティが、再送信を試みる前にXMLを修正6（但し、これは礼儀だけで、発信エンティティが受信に依存してはなりませんオリジナルのペイロード）。それは、XMLを整形XMPPのXML制約に違反する（セクション11.1の下を参照）、または（例えば、サイズ制限を超えて）、そうでなければ有害でない場合は自然に、エンティティは、元のデータを含んではいけません。"
    },
    {
      "indent": 3,
      "text": "7. An <error/> child MUST NOT be included if the 'type' attribute has a value other than \"error\" (or if there is no 'type' attribute).",
      "ja": "「タイプ」属性が「エラー」以外の値を持っている場合（または、「タイプ」属性が存在しない場合）7.アン<エラー/>子供は含んではいけません。"
    },
    {
      "indent": 3,
      "text": "8. An entity that receives an error stanza MUST NOT respond to the stanza with a further error stanza; this helps to prevent looping.",
      "ja": "8.エラースタンザを受信エンティティは、さらにエラースタンザとスタンザに応答してはいけません。これはループを防ぐことができます。"
    },
    {
      "indent": 0,
      "text": "8.3.2. Syntax",
      "section_title": true,
      "ja": "8.3.2。構文"
    },
    {
      "indent": 3,
      "text": "The syntax for stanza-related errors is as follows, where XML data shown within the square brackets '[' and ']' is OPTIONAL, 'intended-recipient' is the JID of the entity to which the original stanza was addressed, 'sender' is the JID of the originating entity, and 'error-generator' is the entity that detects the fact that an error has occurred and thus returns an error stanza.",
      "ja": "スタンザ関連エラーの構文「[」と「]」次のようにXMLデータは角括弧内に示される場合、ある任意であり、「意図し、受信者が」元のスタンザがアドレス指定されたためにエンティティのJIDであり、「差出人「発信エンティティのJIDであり、 『エラー発生』は、エラーが発生したことを検出し、従ってエラースタンザを返すエンティティです。"
    },
    {
      "indent": 3,
      "text": "<stanza-kind from='intended-recipient' to='sender' type='error'> [OPTIONAL to include sender XML here] <error [by='error-generator'] type='error-type'> <defined-condition xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/> [<text xmlns='urn:ietf:params:xml:ns:xmpp-stanzas' xml:lang='langcode'> OPTIONAL descriptive text </text>] [OPTIONAL application-specific condition element] </error> </stanza-kind>",
      "ja": "<スタンザ現物=から「意図受信者」=「送信側」にTYPE =「エラー」> [ここで送信者XMLを含むことがOPTIONAL] <[=「エラー発生」による]エラーは=「エラータイプを」タイプ> <定義された条件のxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-スタンザ' /> <テキストのxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-スタンザ' XML：LANG = 'langcode'>オプションの記述テキスト</テキスト>] [オプションのアプリケーション固有の条件要素</エラー> </スタンザ種>"
    },
    {
      "indent": 3,
      "text": "The \"stanza-kind\" MUST be one of message, presence, or iq.",
      "ja": "「スタンザ種」はメッセージ、存在、またはIQのいずれかでなければなりません。"
    },
    {
      "indent": 3,
      "text": "The \"error-type\" MUST be one of the following:",
      "ja": "「エラー・タイプ」は、以下のいずれかである必要があります"
    },
    {
      "indent": 3,
      "text": "o auth -- retry after providing credentials",
      "ja": "O AUTH  - 資格情報を提供した後に再試行"
    },
    {
      "indent": 3,
      "text": "o cancel -- do not retry (the error cannot be remedied)",
      "ja": "Oキャンセル - （エラーが改善することはできません）再試行しません。"
    },
    {
      "indent": 3,
      "text": "o continue -- proceed (the condition was only a warning)",
      "ja": "O続ける - 進む（条件は警告だけでした）"
    },
    {
      "indent": 3,
      "text": "o modify -- retry after changing the data sent",
      "ja": "O変更 - 送信されたデータを変更した後に再試行"
    },
    {
      "indent": 3,
      "text": "o wait -- retry after waiting (the error is temporary)",
      "ja": "O待つ - （エラーが一時的なものである）待ってから再試行"
    },
    {
      "indent": 3,
      "text": "The \"defined-condition\" MUST correspond to one of the stanza error conditions defined under Section 8.3.3. However, because additional error conditions might be defined in the future, if an entity receives a stanza error condition that it does not understand then it MUST treat the unknown condition as equivalent to <undefined-condition/> (Section 8.3.3.21). If the designers of an XMPP protocol extension or the developers of an XMPP implementation need to communicate a stanza error condition that is not defined in this specification, they can do so by defining an application-specific error condition element qualified by an application-specific namespace.",
      "ja": "「定義された条件」セクション8.3.3の下で定義されたスタンザエラー条件の1つに対応しなければなりません。しかし、実体はそれはそれは、<未定義条件/>（セクション8.3.3.21）と同等に、未知の状態を扱わなければなりません理解していないことをスタンザのエラー状態を受信した場合、追加のエラー条件は、将来的に定義される可能性がありますので。 XMPPプロトコル拡張の設計者またはXMPP実装の開発者は、この仕様で定義されていないスタンザ・エラー状態を通信する必要がある場合は、アプリケーション固有の名前空間で修飾アプリケーション固有のエラー条件の要素を定義することによって行うことができます。"
    },
    {
      "indent": 3,
      "text": "The <error/> element:",
      "ja": "<エラー/>要素："
    },
    {
      "indent": 3,
      "text": "o MUST contain a defined condition element.",
      "ja": "oは定義された条件の要素を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "o MAY contain a <text/> child element containing XML character data that describes the error in more detail; this element MUST be qualified by the 'urn:ietf:params:xml:ns:xmpp-stanzas' namespace and SHOULD possess an 'xml:lang' attribute specifying the natural language of the XML character data.",
      "ja": "Oより詳細にエラーを記述するXML文字データを含む<テキスト/>子要素を含む可能性があります。名前空間と「XML：LANG」持っていなければならないXML文字データの自然言語を指定する属性を、この要素は、「：IETF：のparams：XML：：NS-XMPPスタンザ壷」によって修飾する必要があります。"
    },
    {
      "indent": 3,
      "text": "o MAY contain a child element for an application-specific error condition; this element MUST be qualified by an application-specific namespace that defines the syntax and semantics of the element.",
      "ja": "Oアプリケーション固有のエラー条件のために子要素を含む可能性があります。この要素は、要素の構文とセマンティクスを定義して、アプリケーション固有の名前空間で修飾する必要があります。"
    },
    {
      "indent": 3,
      "text": "The <text/> element is OPTIONAL. If included, it is to be used only to provide descriptive or diagnostic information that supplements the meaning of a defined condition or application-specific condition. It MUST NOT be interpreted programmatically by an application. It SHOULD NOT be used as the error message presented to a human user, but MAY be shown in addition to the error message associated with the defined condition element (and, optionally, the application-specific condition element).",
      "ja": "<テキスト/>要素はオプションです。含まれている場合、それは定義された条件や、アプリケーション固有の条件の意味を補足する記述や診断情報を提供するためにのみ使用されるべきです。これは、アプリケーションによってプログラム的に解釈してはなりません。これは、人間のユーザに提示エラーメッセージとして使用されるべきではなく、定義された条件要素（及び、必要に応じて、アプリケーション固有の条件要素）に関連付けられたエラーメッセージに加えてで示すことができます。"
    },
    {
      "indent": 6,
      "text": "Interoperability Note: The syntax defined in [RFC3920] included a legacy 'code' attribute, whose semantics have been replaced by the defined condition elements; information about mapping defined condition elements to values of the legacy 'code' attribute can be found in [XEP-0086].",
      "ja": "相互運用性注：[RFC3920]で定義された構文は、セマンティクス定義された条件要素に置き換えられているレガシー「コード」属性を含みます。レガシー「コード」属性の値にマッピングする定義された条件要素についての情報は、[XEP-0086]において見出すことができます。"
    },
    {
      "indent": 0,
      "text": "8.3.3. Defined Conditions",
      "section_title": true,
      "ja": "8.3.3。定義された条件"
    },
    {
      "indent": 3,
      "text": "The following conditions are defined for use in stanza errors.",
      "ja": "以下の条件をスタンザ・エラーでの使用のために定義されています。"
    },
    {
      "indent": 3,
      "text": "The error-type value that is RECOMMENDED for each defined condition is the usual expected type; however, in some circumstances a different type might be more appropriate.",
      "ja": "各定義された条件に推奨されるエラータイプ値は、通常予想されるタイプです。しかし、いくつかの状況で異なるタイプの方が適切かもしれません。"
    },
    {
      "indent": 0,
      "text": "8.3.3.1. bad-request",
      "section_title": true,
      "ja": "8.3.3.1。要求の形式が正しくありません"
    },
    {
      "indent": 3,
      "text": "The sender has sent a stanza containing XML that does not conform to the appropriate schema or that cannot be processed (e.g., an IQ stanza that includes an unrecognized value of the 'type' attribute, or an element that is qualified by a recognized namespace but that violates the defined syntax for the element); the associated error type SHOULD be \"modify\".",
      "ja": "例えば、（「type」属性、または認識の名前空間で修飾された要素の認識できない値が含まIQスタンザを送信者が適切なスキーマに準拠していないXMLを含むスタンザを送信したか、それが処理することはできませんが、それは）要素の定義された構文に違反します。関連するエラーのタイプは、「変更」であるべきです。"
    },
    {
      "indent": 3,
      "text": "C: <iq from='juliet@im.example.com/balcony' id='zj3v142b' to='im.example.com' type='subscribe'> <ping xmlns='urn:xmpp:ping'/> </iq>",
      "ja": "C：<IQのfrom='juliet@im.example.com/balcony」ID = 'zj3v142b' へ= 'im.example.com' TYPE = '加入'> <ピングのxmlns = 'URN：XMPP：ピング' /> </ IQ>"
    },
    {
      "indent": 3,
      "text": "S: <iq from='im.example.com' id='zj3v142b' to='juliet@im.example.com/balcony' type='error'> <error type='modify'> <bad-request xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/> </error> </iq>",
      "ja": "S：<= 'im.example.com' ID = 'zj3v142b' to='juliet@im.example.com/balcony」TYPE = 'エラーからIQ'> <エラーの種類は= '' 変更> <悪い要求のxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-スタンザ' /> </エラー> </ IQ>"
    },
    {
      "indent": 0,
      "text": "8.3.3.2. conflict",
      "section_title": true,
      "ja": "8.3.3.2。コンフリクト"
    },
    {
      "indent": 3,
      "text": "Access cannot be granted because an existing resource exists with the same name or address; the associated error type SHOULD be \"cancel\".",
      "ja": "既存のリソースが同じ名前またはアドレスで存在しているため、アクセスが許可されません。関連するエラーのタイプは、「キャンセル」であるべきです。"
    },
    {
      "indent": 3,
      "text": "C: <iq id='wy2xa82b4' type='set'> <bind xmlns='urn:ietf:params:xml:ns:xmpp-bind'> <resource>balcony</resource> </bind> </iq>",
      "ja": "C：<IQのID = 'wy2xa82b4' TYPE = 'セット'> <バインドのxmlns = 'URN：IETF：paramsは：XML：NS：XMPPバインド'> <リソース>バルコニー</リソース> </バインド> </ IQ >"
    },
    {
      "indent": 3,
      "text": "S: <iq id='wy2xa82b4' type='error'> <error type='cancel'> <conflict xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/> </error> </iq>",
      "ja": "S：<IQ IDが= 'wy2xa82b4' TYPE = 'エラー'> <エラーの種類は= 'キャンセル'> <競合のxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-スタンザ' /> </エラー> </ IQ>"
    },
    {
      "indent": 0,
      "text": "8.3.3.3. feature-not-implemented",
      "section_title": true,
      "ja": "8.3.3.3。機能はなく、実装"
    },
    {
      "indent": 3,
      "text": "The feature represented in the XML stanza is not implemented by the intended recipient or an intermediate server and therefore the stanza cannot be processed (e.g., the entity understands the namespace but does not recognize the element name); the associated error type SHOULD be \"cancel\" or \"modify\".",
      "ja": "XMLスタンザで表される特徴（例えば、エンティティは、名前空間を理解するが、要素名を認識しない）意図された受信者又は中間サーバによって実装されておらず、従ってスタンザを処理できません。関連するエラーのタイプは、「変更」「キャンセル」またはであるべきです。"
    },
    {
      "indent": 3,
      "text": "C: <iq from='juliet@im.example.com/balcony' id='9u2bax16' to='pubsub.example.com' type='get'> <pubsub xmlns='http://jabber.org/protocol/pubsub'> <subscriptions/> </pubsub> </iq>",
      "ja": "C：<pubsub.example.com '= 'にIQのfrom='juliet@im.example.com/balcony 'idは=' 9u2bax16' タイプ= '取得'> <のpubsubのxmlns =' のhttp：//jabber.org/プロトコル/のpubsub '> <サブスクリプション/> </のpubsub> </ IQ>"
    },
    {
      "indent": 3,
      "text": "E: <iq from='pubsub.example.com' id='9u2bax16' to='juliet@im.example.com/balcony' type='error'> <error type='cancel'> <feature-not-implemented xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/> <unsupported xmlns='http://jabber.org/protocol/pubsub#errors' feature='retrieve-subscriptions'/> </error> </iq>",
      "ja": "E：<IQ = 'からpubsub.example.com' のid = '9u2bax16' to='juliet@im.example.com/balcony」TYPE = 'エラー'> <エラータイプ= '' キャンセル> <特徴not-実装のxmlns = '壷：IETF：のparams：XML：NS：XMPP-スタンザ' /> <サポートされていないのxmlns = 'のhttp：//jabber.org/protocol/pubsub#errors' 機能= '検索 - サブスクリプション' /> </エラー> </ IQ>"
    },
    {
      "indent": 0,
      "text": "8.3.3.4. forbidden",
      "section_title": true,
      "ja": "8.3.3.4。禁じられました"
    },
    {
      "indent": 3,
      "text": "The requesting entity does not possess the necessary permissions to perform an action that only certain authorized roles or individuals are allowed to complete (i.e., it typically relates to authorization rather than authentication); the associated error type SHOULD be \"auth\".",
      "ja": "要求側エンティティ（すなわち、それは典型的に許可なく認証に関連する）だけ、特定の認可役割または個人を完了するために許可されているアクションを実行するために必要な権限を有していません。関連するエラーのタイプは、「認証」する必要があります。"
    },
    {
      "indent": 3,
      "text": "C: <presence from='juliet@im.example.com/balcony' id='y2bs71v4' to='characters@muc.example.com/JulieC'> <x xmlns='http://jabber.org/protocol/muc'/> </presence>",
      "ja": "C：<プレゼンスfrom='juliet@im.example.com/balcony」ID = 'y2bs71v4' to='characters@muc.example.com/JulieC '> <Xのxmlns =' HTTP：//jabber.org/protocol / MUC '/> </プレゼンス>"
    },
    {
      "indent": 3,
      "text": "E: <presence from='characters@muc.example.com/JulieC' id='y2bs71v4' to='juliet@im.example.com/balcony' type='error'> <error type='auth'> <forbidden xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/> </error> </presence>",
      "ja": "E：<存在from='characters@muc.example.com/JulieC 'ID = 'y2bs71v4' to='juliet@im.example.com/balcony' TYPE = 'エラー'> <エラーの種類= 'AUTH'> <禁断のxmlns = '壷：IETF：のparams：XML：NS：XMPP-スタンザ' /> </エラー> </プレゼンス>"
    },
    {
      "indent": 0,
      "text": "8.3.3.5. gone",
      "section_title": true,
      "ja": "8.3.3.5。ゴーン"
    },
    {
      "indent": 3,
      "text": "The recipient or server can no longer be contacted at this address, typically on a permanent basis (as opposed to the <redirect/> error condition, which is used for temporary addressing failures); the associated error type SHOULD be \"cancel\" and the error stanza SHOULD include a new address (if available) as the XML character data of the <gone/> element (which MUST be a Uniform Resource Identifier [URI] or Internationalized Resource Identifier [IRI] at which the entity can be contacted, typically an XMPP IRI as specified in [XMPP-URI]).",
      "ja": "（一時的なアドレス指定の障害のために使用される<リダイレクト/>エラー状態、とは対照的に）受信者またはサーバは、もはや一般的に永久的に、このアドレスに連絡することができません。関連するエラータイプが「キャンセル」であるべきであり、エラースタンザは、ユニフォームリソース識別子[URI]または国際リソース識別子[なければなりません<行っ/>要素のXML文字データとして新しいアドレスを（可能な場合）（含むべきです[XMPP-URI]で指定されたエンティティは、XMPP IRIは、典型的には、接触可能なIRI]）。"
    },
    {
      "indent": 3,
      "text": "C: <message from='juliet@im.example.com/churchyard' id='sj2b371v' to='romeo@example.net' type='chat'> <body>Thy lips are warm.</body> </message>",
      "ja": "C：<メッセージfrom='juliet@im.example.com/churchyard 'ID = 'sj2b371v' to='romeo@example.net' タイプ= 'チャット'> <身体>汝の唇が暖かいです。</ BODY> < /メッセージ>"
    },
    {
      "indent": 3,
      "text": "S: <message from='romeo@example.net' id='sj2b371v' to='juliet@im.example.com/churchyard' type='error'> <error by='example.net' type='cancel'> <gone xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'> xmpp:romeo@afterlife.example.net </gone> </error> </message>",
      "ja": "S：<メッセージfrom='romeo@example.net 'ID = 'sj2b371v' to='juliet@im.example.com/churchyard' TYPE = 'エラー'> <= 'example.net' TYPE =によるエラー「キャンセル'> <行っのxmlns =' URN：IETF：paramsは：XML：NS：XMPP-スタンザ> XMPP：romeo@afterlife.example.net </なくなっ> </エラー> </メッセージ>"
    },
    {
      "indent": 0,
      "text": "8.3.3.6. internal-server-error",
      "section_title": true,
      "ja": "8.3.3.6。内部サーバーエラー"
    },
    {
      "indent": 3,
      "text": "The server has experienced a misconfiguration or other internal error that prevents it from processing the stanza; the associated error type SHOULD be \"cancel\".",
      "ja": "サーバはスタンザを処理するのを防ぐ設定ミスまたは他の内部エラーが発生しました。関連するエラーのタイプは、「キャンセル」であるべきです。"
    },
    {
      "indent": 3,
      "text": "C: <presence from='juliet@im.example.com/balcony' id='y2bs71v4' to='characters@muc.example.com/JulieC'> <x xmlns='http://jabber.org/protocol/muc'/> </presence>",
      "ja": "C：<プレゼンスfrom='juliet@im.example.com/balcony」ID = 'y2bs71v4' to='characters@muc.example.com/JulieC '> <Xのxmlns =' HTTP：//jabber.org/protocol / MUC '/> </プレゼンス>"
    },
    {
      "indent": 3,
      "text": "E: <presence from='characters@muc.example.com/JulieC' id='y2bs71v4' to='juliet@im.example.com/balcony' type='error'> <error type='cancel'> <internal-server-error xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/> </error> </presence>",
      "ja": "E：<存在from='characters@muc.example.com/JulieC 'のid = 'y2bs71v4' to='juliet@im.example.com/balcony' TYPE = 'エラー'> <エラータイプ= 'キャンセル'> <サーバ内蔵のエラーのxmlns = '壷：IETF：のparams：XML：NS：XMPP-スタンザ' /> </エラー> </プレゼンス>"
    },
    {
      "indent": 0,
      "text": "8.3.3.7. item-not-found",
      "section_title": true,
      "ja": "8.3.3.7。アイテム-見つかりません"
    },
    {
      "indent": 3,
      "text": "The addressed JID or item requested cannot be found; the associated error type SHOULD be \"cancel\".",
      "ja": "要求された対処JIDまたは項目が見つかりません。関連するエラーのタイプは、「キャンセル」であるべきです。"
    },
    {
      "indent": 3,
      "text": "C: <presence from='userfoo@example.com/bar' id='pwb2n78i' to='nosuchroom@conference.example.org/foo'/>",
      "ja": "C：<存在from='userfoo@example.com/bar 'ID = 'pwb2n78i' to='nosuchroom@conference.example.org/foo' />"
    },
    {
      "indent": 3,
      "text": "S: <presence from='nosuchroom@conference.example.org/foo' id='pwb2n78i' to='userfoo@example.com/bar' type='error'> <error type='cancel'> <item-not-found xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/> </error> </presence>",
      "ja": "S：<プレゼンスfrom='nosuchroom@conference.example.org/foo 'のid = 'pwb2n78i' to='userfoo@example.com/bar' TYPE = 'エラー'> <エラータイプ= 'キャンセル'> <アイテム - -見つからないのxmlns = '壷：IETF：のparams：XML：NS：XMPP-スタンザ' /> </エラー> </プレゼンス>"
    },
    {
      "indent": 6,
      "text": "Security Warning: An application MUST NOT return this error if doing so would provide information about the intended recipient's network availability to an entity that is not authorized to know such information (for a more detailed discussion of presence authorization, refer to the discussion of presence subscriptions in [XMPP-IM]); instead it MUST return a <service-unavailable/> stanza error (Section 8.3.3.19).",
      "ja": "セキュリティ警告：そうすることが、プレゼンスサブスクリプションの説明を参照してください、プレゼンス認証のより詳細な議論のために（そのような情報を知ることが許可されていないエンティティに受信者のネットワークの可用性に関する情報を提供する場合、アプリケーションはこのエラーを返してはなりません[XMPP-IM]）で、代わりに、それは、<サービス利用できません/>スタンザ誤り（セクション8.3.3.19）を返さなければなりません。"
    },
    {
      "indent": 0,
      "text": "8.3.3.8. jid-malformed",
      "section_title": true,
      "ja": "8.3.3.8。 JID-不正な形式"
    },
    {
      "indent": 3,
      "text": "The sending entity has provided (e.g., during resource binding) or communicated (e.g., in the 'to' address of a stanza) an XMPP address or aspect thereof that violates the rules defined in [XMPP-ADDR]; the associated error type SHOULD be \"modify\".",
      "ja": "送信側エンティティ（例えば、リソース結合時）に設けまたはそのXMPPアドレスまたは態様[XMPP-ADDR]で定義された規則に違反（例えば、スタンザのアドレス「には」に）伝えました。関連するエラーのタイプは、「変更」であるべきです。"
    },
    {
      "indent": 3,
      "text": "C: <presence from='juliet@im.example.com/balcony' id='y2bs71v4' to='ch@r@cters@muc.example.com/JulieC'> <x xmlns='http://jabber.org/protocol/muc'/> </presence>",
      "ja": "C：//ジャバー： '<Xのxmlns = HTTP <CH @ R @ cters @ muc.example.com / JulieC '=' のプレゼンスfrom='juliet@im.example.com/balcony 'ID =' y2bs71v4>' .ORG /プロトコル/ MUC '/> </プレゼンス>"
    },
    {
      "indent": 3,
      "text": "E: <presence from='ch@r@cters@muc.example.com/JulieC' id='y2bs71v4' to='juliet@im.example.com/balcony' type='error'> <error by='muc.example.com' type='modify'> <jid-malformed xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/> </error> </presence>",
      "ja": "E：<プレゼンス= 'CH @ R @ cters @ muc.example.com / JulieC' のid = 'y2bs71v4' to='juliet@im.example.com/balcony 'TYPE = 'エラーから'> <エラーによる=' muc.example.com」TYPE = '変更'> <JID-奇形のxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-スタンザ' /> </エラー> </プレゼンス>"
    },
    {
      "indent": 6,
      "text": "Implementation Note: Enforcement of the format for XMPP localparts is primarily the responsibility of the service at which the associated account or entity is located (e.g., the example.com service is responsible for returning <jid-malformed/> errors related to all JIDs of the form <localpart@example.com>), whereas enforcement of the format for XMPP domainparts is primarily the responsibility of the service that seeks to route a stanza to the service identified by that domainpart (e.g., the example.org service is responsible for returning <jid-malformed/> errors related to stanzas that users of that service have to tried send to JIDs of the form <localpart@example.com>). However, any entity that detects a malformed JID MAY return this error.",
      "ja": "実装上の注意：XMPPのローカル部分のフォーマットの施行は、主に関連付けられたアカウントまたはエンティティが配置されているサービス（例えばの責任である、example.comサービスは、すべてのたJIDに関連する<JID-不正な形式/>エラーを返すための責任がありますフォーム<localpart@example.com>）XMPPのフォーマットの施行は、主にそのdo​​mainpart（例えばによって識別されるサービスへのルートスタンザをしようとするサービスの責任であるdomainpartsのに対し、example.orgサービスは責任があります<JID-不正な形式は、/>そのサービスの利用者が試しに持っているスタンザに関連したエラーは、フォームのたJIDに送信戻っ<localpart@example.com>）。しかし、不正な形式のJIDを検出する任意のエンティティは、このエラーが返されることがあります。"
    },
    {
      "indent": 0,
      "text": "8.3.3.9. not-acceptable",
      "section_title": true,
      "ja": "8.3.3.9。受け付けできません"
    },
    {
      "indent": 3,
      "text": "The recipient or server understands the request but cannot process it because the request does not meet criteria defined by the recipient or server (e.g., a request to subscribe to information that does not simultaneously include configuration parameters needed by the recipient); the associated error type SHOULD be \"modify\".",
      "ja": "受信者またはサーバは、要求を理解が、要求が受信者またはサーバ（例えば、同時に受信者によって必要とされる構成パラメータが含まれていない情報を購読するための要求）によって定義された基準を満たしていないため、それを処理することができません。関連するエラーのタイプは、「変更」であるべきです。"
    },
    {
      "indent": 3,
      "text": "C: <message to='juliet@im.example.com' id='yt2vs71m'> <body>[ ... the-emacs-manual ... ]</body> </message>",
      "ja": "C：<メッセージto='juliet@im.example.com」ID = 'yt2vs71m'> <BODY> [...-のemacs-手動...] </ body> </メッセージ>"
    },
    {
      "indent": 3,
      "text": "S: <message from='juliet@im.example.com' id='yt2vs71m'> <error type='modify'> <not-acceptable xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/> </error> </message>",
      "ja": "S：<メッセージfrom='juliet@im.example.com」ID = 'yt2vs71m'> <エラータイプ= '変更'> <的に許容されないのxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-スタンザ' /> </エラー> </メッセージ>"
    },
    {
      "indent": 0,
      "text": "8.3.3.10. not-allowed",
      "section_title": true,
      "ja": "8.3.3.10。禁じられている"
    },
    {
      "indent": 3,
      "text": "The recipient or server does not allow any entity to perform the action (e.g., sending to entities at a blacklisted domain); the associated error type SHOULD be \"cancel\".",
      "ja": "受信者またはサーバは、任意のエンティティ（例えば、ブラックリストにドメインのエンティティに送信）アクションを実行することはできません。関連するエラーのタイプは、「キャンセル」であるべきです。"
    },
    {
      "indent": 3,
      "text": "C: <presence from='juliet@im.example.com/balcony' id='y2bs71v4' to='characters@muc.example.com/JulieC'> <x xmlns='http://jabber.org/protocol/muc'/> </presence>",
      "ja": "C：<プレゼンスfrom='juliet@im.example.com/balcony」ID = 'y2bs71v4' to='characters@muc.example.com/JulieC '> <Xのxmlns =' HTTP：//jabber.org/protocol / MUC '/> </プレゼンス>"
    },
    {
      "indent": 3,
      "text": "E: <presence from='characters@muc.example.com/JulieC' id='y2bs71v4' to='juliet@im.example.com/balcony' type='error'> <error type='cancel'> <not-allowed xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/> </error> </presence>",
      "ja": "E：<存在from='characters@muc.example.com/JulieC 'のid = 'y2bs71v4' to='juliet@im.example.com/balcony' TYPE = 'エラー'> <エラータイプ= 'キャンセル'> < xmlns = '：IETF：のparams：XML：NS：URNのXMPPスタンザ'-許可されていません/> </エラー> </プレゼンス>"
    },
    {
      "indent": 0,
      "text": "8.3.3.11. not-authorized",
      "section_title": true,
      "ja": "8.3.3.11。許可されていません"
    },
    {
      "indent": 3,
      "text": "The sender needs to provide credentials before being allowed to perform the action, or has provided improper credentials (the name \"not-authorized\", which was borrowed from the \"401 Unauthorized\" error of [HTTP], might lead the reader to think that this condition relates to authorization, but instead it is typically used in relation to authentication); the associated error type SHOULD be \"auth\".",
      "ja": "送信者は、アクションを実行するために許可される前に資格情報を提供する必要がある、または不適切な認証情報を提供してきました（[HTTP]の「401権限」のエラーから借りた名前「許可しない」、と考えるのは、読者を導くかもしれませんこの条件は、認可に関し、その代わりに、それは、典型的には）、認証に関連して使用されます。関連するエラーのタイプは、「認証」する必要があります。"
    },
    {
      "indent": 3,
      "text": "C: <presence from='juliet@im.example.com/balcony' id='y2bs71v4' to='characters@muc.example.com/JulieC'> <x xmlns='http://jabber.org/protocol/muc'/> </presence>",
      "ja": "C：<プレゼンスfrom='juliet@im.example.com/balcony」ID = 'y2bs71v4' to='characters@muc.example.com/JulieC '> <Xのxmlns =' HTTP：//jabber.org/protocol / MUC '/> </プレゼンス>"
    },
    {
      "indent": 3,
      "text": "E: <presence from='characters@muc.example.com/JulieC' id='y2bs71v4' to='juliet@im.example.com/balcony'> <error type='auth'> <not-authorized xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/> </error> </presence>",
      "ja": "E：<存在from='characters@muc.example.com/JulieC 'ID = 'y2bs71v4' to='juliet@im.example.com/balcony '> <エラーの種類=' AUTH'> <未承認のxmlns = 'URN：IETF：のparams：XML：NS：XMPP-スタンザ' /> </エラー> </プレゼンス>"
    },
    {
      "indent": 0,
      "text": "8.3.3.12. policy-violation",
      "section_title": true,
      "ja": "8.3.3.12。ポリシー違反"
    },
    {
      "indent": 3,
      "text": "The entity has violated some local service policy (e.g., a message contains words that are prohibited by the service) and the server MAY choose to specify the policy in the <text/> element or in an application-specific condition element; the associated error type SHOULD be \"modify\" or \"wait\" depending on the policy being violated.",
      "ja": "エンティティは、いくつかのローカルサービスポリシーに違反した（例えば、メッセージは、サービスによって禁止されている単語が含ま）、サーバは、<テキスト/>要素またはアプリケーション固有の条件要素内にポリシーを指定することを選択するかもしれません。関連するエラーのタイプは、「変更」または侵害されたポリシーに応じて、「待機」であるべきです。"
    },
    {
      "indent": 3,
      "text": "(In the following example, the client sends an XMPP message containing words that are forbidden according to the server's local service policy.)",
      "ja": "（以下の例では、クライアントは、サーバーのローカルサービスポリシーに基づいて禁止されている単語を含むXMPPメッセージを送信します。）"
    },
    {
      "indent": 3,
      "text": "C: <message from='romeo@example.net/foo' to='bill@im.example.com' id='vq71f4nb'> <body>%#&@^!!!</body> </message>",
      "ja": "C：<メッセージfrom='romeo@example.net/foo 'to='bill@im.example.com' ID = 'vq71f4nb'> <身体>％＃＆@ ^ !!! </ BODY> </メッセージ>"
    },
    {
      "indent": 3,
      "text": "S: <message from='bill@im.example.com' id='vq71f4nb' to='romeo@example.net/foo'> <error by='example.net' type='modify'> <policy-violation xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/> </error> </message>",
      "ja": "S：<メッセージfrom='bill@im.example.com 'ID = 'vq71f4nb' to='romeo@example.net/foo '> <=' example.net' によってエラータイプ= '変更'> <政策違反のxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-スタンザ' /> </エラー> </メッセージ>"
    },
    {
      "indent": 0,
      "text": "8.3.3.13. recipient-unavailable",
      "section_title": true,
      "ja": "8.3.3.13。受信者、利用できません"
    },
    {
      "indent": 3,
      "text": "The intended recipient is temporarily unavailable, undergoing maintenance, etc.; the associated error type SHOULD be \"wait\".",
      "ja": "目的の受信者は、など、メンテナンスを受けて、一時的に利用できないです;関連するエラーのタイプは、「待機」であるべきです。"
    },
    {
      "indent": 3,
      "text": "C: <presence from='juliet@im.example.com/balcony' id='y2bs71v4' to='characters@muc.example.com/JulieC'> <x xmlns='http://jabber.org/protocol/muc'/> </presence>",
      "ja": "C：<プレゼンスfrom='juliet@im.example.com/balcony」ID = 'y2bs71v4' to='characters@muc.example.com/JulieC '> <Xのxmlns =' HTTP：//jabber.org/protocol / MUC '/> </プレゼンス>"
    },
    {
      "indent": 3,
      "text": "E: <presence from='characters@muc.example.com/JulieC' id='y2bs71v4' to='juliet@im.example.com/balcony'> <error type='wait'> <recipient-unavailable xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/> </error> </presence>",
      "ja": "E：<存在from='characters@muc.example.com/JulieC 'ID = 'y2bs71v4' to='juliet@im.example.com/balcony '> <エラーの種類=' 待ち'> <受信者-利用できないのxmlns = 'URN：IETF：のparams：XML：NS：XMPP-スタンザ' /> </エラー> </プレゼンス>"
    },
    {
      "indent": 6,
      "text": "Security Warning: An application MUST NOT return this error if doing so would provide information about the intended recipient's network availability to an entity that is not authorized to know such information (for a more detailed discussion of presence authorization, refer to the discussion of presence subscriptions in [XMPP-IM]); instead it MUST return a <service-unavailable/> stanza error (Section 8.3.3.19).",
      "ja": "セキュリティ警告：そうすることが、プレゼンスサブスクリプションの説明を参照してください、プレゼンス認証のより詳細な議論のために（そのような情報を知ることが許可されていないエンティティに受信者のネットワークの可用性に関する情報を提供する場合、アプリケーションはこのエラーを返してはなりません[XMPP-IM]）で、代わりに、それは、<サービス利用できません/>スタンザ誤り（セクション8.3.3.19）を返さなければなりません。"
    },
    {
      "indent": 0,
      "text": "8.3.3.14. redirect",
      "section_title": true,
      "ja": "8.3.3.14。リダイレクト"
    },
    {
      "indent": 3,
      "text": "The recipient or server is redirecting requests for this information to another entity, typically in a temporary fashion (as opposed to the <gone/> error condition, which is used for permanent addressing failures); the associated error type SHOULD be \"modify\" and the error stanza SHOULD contain the alternate address in the XML character data of the <redirect/> element (which MUST be a URI or IRI with which the sender can communicate, typically an XMPP IRI as specified in [XMPP-URI]).",
      "ja": "（永久アドレッシング障害のために使用される<行っ/>エラー状態、とは対照的に）受信者またはサーバは、典型的には、一時的なやり方で、別のエンティティにこの情報に対する要求をリダイレクトされます。関連するエラータイプが通りで「修正」とエラースタンザは、送信者が通信可能なURIまたはIRIでなければなりません<リダイレクト/>要素（のXML文字データに代替アドレスを含むべきで、典型的にはXMPP IRI SHOULD [XMPP-URI]）で指定されました。"
    },
    {
      "indent": 3,
      "text": "C: <presence from='juliet@im.example.com/balcony' id='y2bs71v4' to='characters@muc.example.com/JulieC'> <x xmlns='http://jabber.org/protocol/muc'/> </presence>",
      "ja": "C：<プレゼンスfrom='juliet@im.example.com/balcony」ID = 'y2bs71v4' to='characters@muc.example.com/JulieC '> <Xのxmlns =' HTTP：//jabber.org/protocol / MUC '/> </プレゼンス>"
    },
    {
      "indent": 3,
      "text": "E: <presence from='characters@muc.example.com/JulieC' id='y2bs71v4' to='juliet@im.example.com/balcony' type='error'> <error type='modify'> <redirect xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'> xmpp:characters@conference.example.org </redirect> </error> </presence>",
      "ja": "E：<存在from='characters@muc.example.com/JulieC 'のid = 'y2bs71v4' to='juliet@im.example.com/balcony' TYPE = 'エラー'> <エラーの種類= '変更'> < xmlns = 'URNを：IETF：paramsは：XML：NS：XMPP-スタンザ' がリダイレクト> XMPP：characters@conference.example.org </リダイレクト> </エラー> </プレゼンス>"
    },
    {
      "indent": 6,
      "text": "Security Warning: An application receiving a stanza-level redirect SHOULD warn a human user of the redirection attempt and request approval before proceeding to communicate with the entity whose address is contained in the XML character data of the <redirect/> element, because that entity might have a different identity or might enforce different security policies. The end-to-end authentication or signing of XMPP stanzas could help to mitigate this risk, since it would enable the sender to determine if the entity to which it has been redirected has the same identity as the entity it originally attempted to contact. An application MAY have a policy of following redirects only if it has authenticated the receiving entity. In addition, an application SHOULD abort the communication attempt after a certain number of successive redirects (e.g., at least 2 but no more than 5).",
      "ja": "セキュリティ警告：スタンザレベルのリダイレクトを受けるアプリケーションがその実体ので、そのアドレス<リダイレクト/>要素のXML文字データに含まれているエンティティと通信するために進む前にリダイレクトしようと要求の承認の人間のユーザに警告すべきです異なるIDを持っている可能性があるか、異なるセキュリティポリシーを適用することがあります。それがリダイレクトされたために、エンティティが、それは元々連絡しようとしたエンティティと同じIDを持っているかどうかを判断するために、送信者を可能にするため、XMPPスタンザのエンド・ツー・エンドの認証や署名は、このリスクを軽減するために役立つ可能性があります。アプリケーションは、受信エンティティを認証した場合にのみ、次のリダイレクトのポリシーを持っているかもしれません。加えて、アプリケーションは、（例えば、少なくとも2つが、これ以上5以下）の連続したリダイレクトの特定の数の後の通信の試行を中止すべきです。"
    },
    {
      "indent": 0,
      "text": "8.3.3.15. registration-required",
      "section_title": true,
      "ja": "8.3.3.15。登録に必要な"
    },
    {
      "indent": 3,
      "text": "The requesting entity is not authorized to access the requested service because prior registration is necessary (examples of prior registration include members-only rooms in XMPP multi-user chat [XEP-0045] and gateways to non-XMPP instant messaging services, which traditionally required registration in order to use the gateway [XEP-0100]); the associated error type SHOULD be \"auth\".",
      "ja": "事前登録が必要であるため、要求エンティティは、要求されたサービスにアクセスすることを許可されていない（事前登録の例としては、会員専用の伝統に必要な非XMPPインスタントメッセージングサービスへのXMPPマルチユーザーチャット[XEP-0045]の客室とゲートウェイゲートウェイ[XEP-0100]）を使用するために登録。関連するエラーのタイプは、「認証」する必要があります。"
    },
    {
      "indent": 3,
      "text": "C: <presence from='juliet@im.example.com/balcony' id='y2bs71v4' to='characters@muc.example.com/JulieC'> <x xmlns='http://jabber.org/protocol/muc'/> </presence>",
      "ja": "C：<プレゼンスfrom='juliet@im.example.com/balcony」ID = 'y2bs71v4' to='characters@muc.example.com/JulieC '> <Xのxmlns =' HTTP：//jabber.org/protocol / MUC '/> </プレゼンス>"
    },
    {
      "indent": 3,
      "text": "E: <presence from='characters@muc.example.com/JulieC' id='y2bs71v4' to='juliet@im.example.com/balcony'> <error type='auth'> <registration-required xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/> </error> </presence>",
      "ja": "E：<存在from='characters@muc.example.com/JulieC 'ID = 'y2bs71v4' to='juliet@im.example.com/balcony '> <エラーの種類=' AUTH'> <登録必須のxmlns = 'URN：IETF：のparams：XML：NS：XMPP-スタンザ' /> </エラー> </プレゼンス>"
    },
    {
      "indent": 0,
      "text": "8.3.3.16. remote-server-not-found",
      "section_title": true,
      "ja": "8.3.3.16。リモート・サーバ・見つかりません"
    },
    {
      "indent": 3,
      "text": "A remote server or service specified as part or all of the JID of the intended recipient does not exist or cannot be resolved (e.g., there is no _xmpp-server._tcp DNS SRV record, the A or AAAA fallback resolution fails, or A/AAAA lookups succeed but there is no response on the IANA-registered port 5269); the associated error type SHOULD be \"cancel\".",
      "ja": "一部として指定されたリモートサーバーまたはサービスまたは意図された受信者のJIDのすべてが（存在しないか、解決できないなど、何_xmpp-server._tcp DNS SRVレコード、AまたはAAAAフォールバック解決が失敗、またはAが/ありませんAAAAルックアップは成功したがIANA登録ポート5269）に応答がありません。関連するエラーのタイプは、「キャンセル」であるべきです。"
    },
    {
      "indent": 3,
      "text": "C: <message from='romeo@example.net/home' id='ud7n1f4h' to='bar@example.org' type='chat'> <body>yt?</body> </message>",
      "ja": "C：<？メッセージfrom='romeo@example.net/home 'ID = 'ud7n1f4h' to='bar@example.org' TYPE = 'チャット'> <BODY> YT </ body> </メッセージ>"
    },
    {
      "indent": 3,
      "text": "E: <message from='bar@example.org' id='ud7n1f4h' to='romeo@example.net/home' type='error'> <error type='cancel'> <remote-server-not-found xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/> </error> </message>",
      "ja": "E：<エラータイプ= 'キャンセル'> <メッセージが 'ID = 'ud7n1f4h' to='romeo@example.net/home' TYPE = 'エラー' from='bar@example.org> <リモートサーバnot- /> </エラー> </メッセージ>のxmlns = '：IETF：paramsは：XML：NS-XMPPスタンザURN' になってい"
    },
    {
      "indent": 0,
      "text": "8.3.3.17. remote-server-timeout",
      "section_title": true,
      "ja": "8.3.3.17。リモート・サーバのタイムアウト"
    },
    {
      "indent": 3,
      "text": "A remote server or service specified as part or all of the JID of the intended recipient (or needed to fulfill a request) was resolved but communications could not be established within a reasonable amount of time (e.g., an XML stream cannot be established at the resolved IP address and port, or an XML stream can be established but stream negotiation fails because of problems with TLS, SASL, Server Dialback, etc.); the associated error type SHOULD be \"wait\" (unless the error is of a more permanent nature, e.g., the remote server is found but it cannot be authenticated or it violates security policies).",
      "ja": "目的の受信者（または、要求を満たすために必要な）のJIDの一部または全部として指定されたリモートサーバーまたはサービスが解決されましたが、通信はXMLストリームがで確立することができない妥当な時間（例えば、内に設置することができませんでした解決したIPアドレスとポート、またはXMLストリームを確立することができるが、ストリームネゴシエーションが理由TLS、SASL、サーバーダイアルバックなど）に問題の障害が発生しました。関連するエラーのタイプは、（エラーがより恒久的な性質のものでない限り、例えば、リモートサーバーが検出されたが、それは認証できないか、それがセキュリティポリシーに違反する）「待つ」である必要があります。"
    },
    {
      "indent": 3,
      "text": "C: <message from='romeo@example.net/home' id='ud7n1f4h' to='bar@example.org' type='chat'> <body>yt?</body> </message>",
      "ja": "C：<？メッセージfrom='romeo@example.net/home 'ID = 'ud7n1f4h' to='bar@example.org' TYPE = 'チャット'> <BODY> YT </ body> </メッセージ>"
    },
    {
      "indent": 3,
      "text": "E: <message from='bar@example.org' id='ud7n1f4h' to='romeo@example.net/home' type='error'> <error type='wait'> <remote-server-timeout xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/> </error> </message>",
      "ja": "E：<メッセージfrom='bar@example.org 'ID = 'ud7n1f4h' to='romeo@example.net/home' TYPE = 'エラー'> <エラーの種類= 'ウェイト'> <リモートサーバタイムアウトのxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-スタンザ' /> </エラー> </メッセージ>"
    },
    {
      "indent": 0,
      "text": "8.3.3.18. resource-constraint",
      "section_title": true,
      "ja": "8.3.3.18。資源制約"
    },
    {
      "indent": 3,
      "text": "The server or recipient is busy or lacks the system resources necessary to service the request; the associated error type SHOULD be \"wait\".",
      "ja": "サーバーまたは受信者がビジー状態であるか、要求を処理するために必要なシステムリソースを欠い。関連するエラーのタイプは、「待機」であるべきです。"
    },
    {
      "indent": 3,
      "text": "C: <iq from='romeo@example.net/foo' id='kj4vz31m' to='pubsub.example.com' type='get'> <pubsub xmlns='http://jabber.org/protocol/pubsub'> <items node='my_musings'/> </pubsub> </iq>",
      "ja": "C：//jabber.org/protocol/： '<のpubsubのxmlns =のhttp <pubsub.example.com 'タイプ=' 取得 '=' にIQのfrom='romeo@example.net/foo 'ID =' kj4vz31m>' pubsub '> <商品ノード=' my_musings' /> </のpubsub> </ IQ>"
    },
    {
      "indent": 3,
      "text": "E: <iq from='pubsub.example.com' id='kj4vz31m' to='romeo@example.net/foo' type='error'> <error type='wait'> <resource-constraint xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/> </error> </iq>",
      "ja": "E：<IQ =から 'pubsub.example.com' のid = 'kj4vz31m' to='romeo@example.net/foo 'タイプ= 'エラー'> <エラーの種類= '待つ'> <リソース制約のxmlns =' URN：IETF：のparams：XML：NS：XMPP-スタンザ/> </エラー> </ IQ>"
    },
    {
      "indent": 0,
      "text": "8.3.3.19. service-unavailable",
      "section_title": true,
      "ja": "8.3.3.19。サービスは利用できません"
    },
    {
      "indent": 3,
      "text": "The server or recipient does not currently provide the requested service; the associated error type SHOULD be \"cancel\".",
      "ja": "サーバーまたは受信者は、現在、要求されたサービスを提供していません。関連するエラーのタイプは、「キャンセル」であるべきです。"
    },
    {
      "indent": 3,
      "text": "C: <message from='romeo@example.net/foo' to='juliet@im.example.com'> <body>Hello?</body> </message>",
      "ja": "C：？<メッセージfrom='romeo@example.net/foo 'to='juliet@im.example.com'> <身体>こんにちは</ BODY> </メッセージ>"
    },
    {
      "indent": 3,
      "text": "S: <message from='juliet@im.example.com/foo' to='romeo@example.net'> <error type='cancel'> <service-unavailable xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/> </error> </message>",
      "ja": "S：<メッセージfrom='juliet@im.example.com/foo」to='romeo@example.net '> <エラーの種類=' キャンセル '> <サービス利用不能のxmlns =' 壷：IETF：のparams：XML： NS：XMPP-スタンザ/> </エラー> </メッセージ>"
    },
    {
      "indent": 6,
      "text": "Security Warning: An application MUST return a <service-unavailable/> stanza error (Section 8.3.3.19) instead of <item-not-found/> (Section 8.3.3.7) or <recipient-unavailable/> (Section 8.3.3.13) if sending one of the latter errors would provide information about the intended recipient's network availability to an entity that is not authorized to know such information (for a more detailed discussion of presence authorization, refer to [XMPP-IM]).",
      "ja": "セキュリティ警告：アプリケーションは、<サービス利用できません/>を返さなければならないスタンザ・エラー（セクション8.3.3.19）の代わりの<item--見つからない/>（セクション8.3.3.7）または<受信-利用できません/>（セクション8.3.3.13 ）[XMPP-IM]）を参照して、プレゼンス認可のより詳細な議論のために（そのような情報を知ることが許可されていないエンティティに意図された受信者のネットワーク利用可能性に関する情報を提供する後者のいずれかのエラーを送信した場合。"
    },
    {
      "indent": 0,
      "text": "8.3.3.20. subscription-required",
      "section_title": true,
      "ja": "8.3.3.20。サブスクリプション必要"
    },
    {
      "indent": 3,
      "text": "The requesting entity is not authorized to access the requested service because a prior subscription is necessary (examples of prior subscription include authorization to receive presence information as defined in [XMPP-IM] and opt-in data feeds for XMPP publish-subscribe as defined in [XEP-0060]); the associated error type SHOULD be \"auth\".",
      "ja": "事前申し込みが必要であるため、要求エンティティは、要求されたサービスにアクセスすることを許可されていない（前のサブスクリプションの例は、認可[XMPP-IM]で定義されたプレゼンス情報を受信し、オプトインのデータには、XMPPのフィードが含まパブリッシュ・サブスクライブで定義されています[XEP-0060]）。関連するエラーのタイプは、「認証」する必要があります。"
    },
    {
      "indent": 3,
      "text": "C: <message from='romeo@example.net/orchard' id='pa73b4n7' to='playwright@shakespeare.example.com' type='chat'> <subject>ACT II, SCENE II</subject> <body>help, I forgot my lines!</body> </message>",
      "ja": "C：<メッセージfrom='romeo@example.net/orchard 'ID = 'pa73b4n7' to='playwright@shakespeare.example.com' TYPE = 'チャット'> <被験者> ACT II、SCENE II </被験者> <ボディ>ヘルプ、私は私のラインを忘れてしまった！</ body> </メッセージ>"
    },
    {
      "indent": 3,
      "text": "E: <message from='playwright@shakespeare.example.com' id='pa73b4n7' to='romeo@example.net/orchard' type='error'> <error type='auth'> <subscription-required xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/> </error> </message>",
      "ja": "E：<メッセージfrom='playwright@shakespeare.example.com 'ID = 'pa73b4n7' to='romeo@example.net/orchard' TYPE = 'エラー'> <エラーの種類= 'AUTH'> <サブスクリプション必要のxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-スタンザ' /> </エラー> </メッセージ>"
    },
    {
      "indent": 0,
      "text": "8.3.3.21. undefined-condition",
      "section_title": true,
      "ja": "8.3.3.21。未定義の条件"
    },
    {
      "indent": 3,
      "text": "The error condition is not one of those defined by the other conditions in this list; any error type can be associated with this condition, and it SHOULD NOT be used except in conjunction with an application-specific condition.",
      "ja": "エラー状態は、このリスト内の他の条件によって定義されたものではありません。エラータイプは、この状態に関連することができ、アプリケーション固有の状態に連動して除き、使用されるべきではありません。"
    },
    {
      "indent": 3,
      "text": "C: <message from='northumberland@shakespeare.example' id='richard2-4.1.247' to='kingrichard@royalty.england.example'> <body>My lord, dispatch; read o'er these articles.</body> <amp xmlns='http://jabber.org/protocol/amp'> <rule action='notify' condition='deliver' value='stored'/> </amp> </message>",
      "ja": "C：<メッセージfrom='northumberland@shakespeare.example 'ID = 'richard2-4.1.247' to='kingrichard@royalty.england.example'> <BODY>私の主、ディスパッチ。これらの記事を読んでのo'er </ BODY> <アンペアのxmlns = 'のhttp：//jabber.org/protocol/amp'>。<ルールアクション= 'notify' は条件= '提供' の値= '保存' /> </アンプ> </メッセージ>"
    },
    {
      "indent": 3,
      "text": "S: <message from='example.org' id='amp1' to='northumberland@example.net/field' type='error'> <amp xmlns='http://jabber.org/protocol/amp' from='kingrichard@example.org' status='error' to='northumberland@example.net/field'> <rule action='error' condition='deliver' value='stored'/> </amp> <error type='modify'> <undefined-condition xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/> <failed-rules xmlns='http://jabber.org/protocol/amp#errors'> <rule action='error' condition='deliver' value='stored'/> </failed-rules> </error> </message>",
      "ja": "S：<メッセージ= 'example.org' のid = 'AMP1' to='northumberland@example.net/fieldから」TYPE = 'エラー'> <アンプのxmlns = 'HTTP：//jabber.org/protocol/amp' from='kingrichard@example.org 'ステータス= 'エラー' to='northumberland@example.net/field '> <ルールアクション=' エラー' 状態= '提供' 値= '保存された' /> </アンプ> <エラーの種類=> '変更' <未定義条件のxmlns = '壷：IETF：のparams：XML：NS：XMPP-スタンザ' /> <失敗・ルールのxmlns = 'のhttp：//jabber.org/protocol/amp#errors '> <ルールアクション=' エラー」状態= '提供' 値= '保存された' /> </失敗-ルール> </エラー> </メッセージ>"
    },
    {
      "indent": 0,
      "text": "8.3.3.22. unexpected-request",
      "section_title": true,
      "ja": "8.3.3.22。予期しない要求"
    },
    {
      "indent": 3,
      "text": "The recipient or server understood the request but was not expecting it at this time (e.g., the request was out of order); the associated error type SHOULD be \"wait\" or \"modify\".",
      "ja": "受信者またはサーバが要求を理解しますが、この時点でそれを期待していなかった（例えば、リクエストは、順不同でした）。関連するエラーのタイプは、「待機」または「変更」する必要があります。"
    },
    {
      "indent": 3,
      "text": "C: <iq from='romeo@example.net/foo' id='o6hsv25z' to='pubsub.example.com' type='set'> <pubsub xmlns='http://jabber.org/protocol/pubsub'> <unsubscribe node='my_musings' jid='romeo@example.net'/> </pubsub> </iq>",
      "ja": "C：<IQ from='romeo@example.net/foo 'ID = 'o6hsv25z' へ= 'pubsub.example.com' タイプ= 'セット'> <のpubsubのxmlns =' HTTP：//jabber.org/protocol/ pubsub '> <解除ノード=' my_musings' jid='romeo@example.net '/> </のpubsub> </ IQ>"
    },
    {
      "indent": 3,
      "text": "E: <iq from='pubsub.example.com' id='o6hsv25z' to='romeo@example.net/foo' type='error'> <error type='modify'> <unexpected-request xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/> <not-subscribed xmlns='http://jabber.org/protocol/pubsub#errors'/> </error> </iq>",
      "ja": "E：<= 'pubsub.example.com' からIQ ID = to='romeo@example.net/foo 'TYPE = 'エラー 'o6hsv25z''> <エラーの種類は= '変更'> <予期しない要求のxmlns =' URN：IETF：のparams：XML：NS：XMPP-スタンザ '/> <-加入していないのxmlns =' のhttp：//jabber.org/protocol/pubsub#errors'/> </エラー> </ IQ>"
    },
    {
      "indent": 0,
      "text": "8.3.4. Application-Specific Conditions",
      "section_title": true,
      "ja": "8.3.4。アプリケーション固有の条件"
    },
    {
      "indent": 3,
      "text": "As noted, an application MAY provide application-specific stanza error information by including a properly namespaced child within the error element. Typically, the application-specific element supplements or further qualifies a defined element. Thus, the <error/> element will contain two or three child elements.",
      "ja": "述べたように、アプリケーションがエラー要素内で適切に名前空間子を含めることによって、アプリケーション固有のスタンザエラー情報を提供することができます。典型的には、アプリケーション固有の要素サプリメント、またはさらには、定義された要素を修飾します。このように、<誤り/>要素は、2つまたは3つの子要素が含まれます。"
    },
    {
      "indent": 3,
      "text": "<iq id='ixc3v1b9' type='error'> <error type='modify'> <bad-request xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/> <too-many-parameters xmlns='http://example.org/ns'/> </error> </iq>",
      "ja": "<IQのid = 'ixc3v1b9' タイプ= 'エラー'> <エラーの種類= '変更'> <悪い要求のxmlns = '壷：IETF：のparams：XML：NS：XMPP-スタンザ' /> <あまりにも多くのパラメータxmlns = 'のhttp：//example.org/ns'/> </エラー> </ IQ>"
    },
    {
      "indent": 3,
      "text": "<message type='error' id='7h3baci9'> <error type='modify'> <undefined-condition xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/> <text xml:lang='en' xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'> [ ... application-specific information ... ] </text> <too-many-parameters xmlns='http://example.org/ns'/> </error> </message>",
      "ja": "<メッセージタイプ= 'エラー' ID = '7h3baci9'> <エラーの種類= '変更'> <不定条件のxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-スタンザ' /> <テキストXML：LANG = （EN）のxmlns = '壷：IETF：のparams：XML：NS：XMPP-スタンザ'> [...アプリケーション固有の情報...] </テキスト> <あまりにも多くのパラメータのxmlns = 'のhttp：// example.org/ns' /> </エラー> </メッセージ>"
    },
    {
      "indent": 3,
      "text": "An entity that receives an application-specific error condition it does not understand MUST ignore that condition but appropriately process the rest of the error stanza.",
      "ja": "それは理解していないアプリケーション固有のエラー状態を受信エンティティは、その条件を無視なく、適宜エラースタンザの残りの部分を処理しなければなりません。"
    },
    {
      "indent": 0,
      "text": "8.4. Extended Content",
      "section_title": true,
      "ja": "8.4。拡張コンテンツ"
    },
    {
      "indent": 3,
      "text": "Although the message, presence, and IQ stanzas provide basic semantics for messaging, availability, and request-response interactions, XMPP uses XML namespaces (see [XML-NAMES]) to extend the basic stanza syntax for the purpose of providing additional functionality.",
      "ja": "メッセージ、プレゼンス、およびIQスタンザメッセージング、可用性、および要求 - 応答インタラクションのための基本的なセマンティクスを提供するが、XMPPは、追加機能を提供する目的のために基本的なスタンザの構文を拡張する（[XML-NAMES]参照）XML名前空間を使用します。"
    },
    {
      "indent": 3,
      "text": "A message or presence stanza MAY contain one or more optional child elements specifying content that extends the meaning of the message (e.g., an XHTML-formatted version of the message body as described in [XEP-0071]), and an IQ stanza of type \"get\" or \"set\" MUST contain one such child element. Such a child element MAY have any name and MUST possess a namespace declaration (other than \"jabber:client\", \"jabber: server\", or \"http://etherx.jabber.org/streams\") that defines the data contained within the child element. Such a child element is called an \"extension element\". An extension element can be included either at the direct child level of the stanza or in any mix of levels.",
      "ja": "メッセージまたは存在スタンザは、メッセージの意味を拡張するコンテンツを指定する1つ以上の任意の子要素を含む（例えば、[XEPは-0071]に記載されているように、メッセージ本文のXHTMLフォーマットのバージョン）タイプの、およびIQスタンザ「取得」またはそのような子要素を含まなければならない「設定」。このような子要素は、任意の名前を持っているかもしれませんし、名前空間宣言所有していなければならない内に含まれるデータを定義します（以外の、または「http://etherx.jabber.org/streams」「のjabber：クライアント」、「サーバージャバー」）子要素。このような子要素は、「拡張要素」と呼ばれています。拡張要素は、スタンザの直接の子レベルで、またはレベルのいずれかの組み合わせのいずれかに含めることができます。"
    },
    {
      "indent": 3,
      "text": "Similarly, \"extension attributes\" are allowed. That is: a stanza itself (i.e., an <iq/>, <message/>, or <presence/> element qualified by the \"jabber:client\" or \"jabber:server\" content namespace) or any child element of such a stanza (whether an extension element or a child element qualified by the content namespace) MAY also include one or more attributes qualified by XML namespaces other than the content namespace or the reserved \"http://www.w3.org/XML/1998/namespace\" namespace (including the so-called \"empty namespace\" if the attribute is not prefixed as described under [XML-NAMES]).",
      "ja": "同様に、許可されている「拡張属性」。それは次のとおりです。スタンザ自体（すなわち、<IQ />、<メッセージ/>、または<存在/>によって修飾要素「ジャバー：クライアント」または「ジャバー：サーバー」コンテンツの名前空間）等のいずれかの子要素スタンザまた、1つ以上の属性を含んでいてもよい（拡張要素やコンテンツの名前空間で修飾子要素かどうか）、コンテンツの名前空間以外のXML名前空間で修飾または予約「http://www.w3.org/XML/1998/名前空間」名前空間（いわゆる含む 『[XML-NAMES]の下で説明するように属性が前置されていない場合は、空の名前空間を』）。"
    },
    {
      "indent": 6,
      "text": "Interoperability Note: For the sake of backward compatibility and maximum interoperability, an entity that generates a stanza SHOULD NOT include such attributes in the stanza itself or in child elements of the stanza that are qualified by the content namespaces \"jabber:client\" or \"jabber:server\" (e.g., the <body/> child of the <message/> stanza).",
      "ja": "相互運用性注：「：クライアントジャバー」または「ジャバー下位互換性と最大の相互運用性、スタンザ自体またはコンテンツの名前空間で修飾されているスタンザの子要素で、このような属性を含むべきではないスタンザを生成するエンティティのためのために：サーバ」（例えば、<メッセージ/>スタンザの<ボディ/>子）。"
    },
    {
      "indent": 3,
      "text": "An extension element or extension attribute is said to be \"extended content\" and the qualifying namespace for such an element or attribute is said to be an \"extended namespace\".",
      "ja": "拡張要素または拡張属性が「拡張されたコンテンツ」であると言われ、そのような要素または属性の修飾名前空間が「拡張された名前空間」であると言われます。"
    },
    {
      "indent": 6,
      "text": "Informational Note: Although extended namespaces for XMPP are commonly defined by the XMPP Standards Foundation (XSF) and by the IETF, no specification or IETF standards action is necessary to define extended namespaces, and any individual or organization is free to define XMPP extensions.",
      "ja": "情報注：XMPPの拡張名前空間は、一般的にXMPP規格財団（XSF）によっておよびIETFによって定義されていますが、何の仕様やIETFの標準アクションが拡張された名前空間を定義する必要がなく、任意の個人または組織は、XMPPの拡張を定義して自由です。"
    },
    {
      "indent": 3,
      "text": "To illustrate these concepts, several examples follow.",
      "ja": "これらの概念を説明するために、いくつかの例を以下に示します。"
    },
    {
      "indent": 3,
      "text": "The following stanza contains one direct child element whose extended namespace is 'jabber:iq:roster':",
      "ja": "以下のスタンザは、その拡張された名前空間「：IQ：名簿ジャバー」ですつの直接の子要素が含まれています。"
    },
    {
      "indent": 3,
      "text": "<iq from='juliet@capulet.com/balcony' id='h83vxa4c' type='get'> <query xmlns='jabber:iq:roster'/> </iq>",
      "ja": "<IQ from='juliet@capulet.com/balcony」ID = 'h83vxa4c' タイプ= '取得'> <クエリのxmlns = 'ジャバー：IQ：名簿' /> </ IQ>"
    },
    {
      "indent": 3,
      "text": "The following stanza contains two direct child elements with two different extended namespaces.",
      "ja": "以下のスタンザは、二つの異なる拡張の名前空間を持つ2つの直接の子要素が含まれています。"
    },
    {
      "indent": 3,
      "text": "<presence from='juliet@capulet.com/balcony'> <c xmlns='http://jabber.org/protocol/caps' hash='sha-1' node='http://code.google.com/p/exodus' ver='QgayPKawpkPSDYmwT/WM94uAlu0='/> <x xmlns='vcard-temp:x:update'> <photo>sha1-hash-of-image</photo> </x> </presence>",
      "ja": "<プレゼンスfrom='juliet@capulet.com/balcony '> <C言語のxmlns =' HTTP：//jabber.org/protocol/caps'ハッシュ= 'SHA-1' ノード= 'HTTP：//code.google.com / P /エクソダス版= 'QgayPKawpkPSDYmwT / WM94uAlu0 =' /> <Xのxmlns = 'のvCard-TEMP：X：更新'> <フォト> SHA1ハッシュの画像</写真> </ X> </プレゼンス>"
    },
    {
      "indent": 3,
      "text": "The following stanza contains two child elements, one of which is qualified by the \"jabber:client\" or \"jabber:server\" content namespace and one of which is qualified by an extended namespace; the extension element in turn contains a child element that is qualified by a different extended namespace.",
      "ja": "「：クライアントジャバー」または「ジャバー：サーバー」次スタンザがで修飾されたそのうちの一つの2つのつの子要素、含まれているコンテンツの名前空間との1つの拡張名前空間で修飾されたが、順番に拡張要素は、異なる拡張名前空間で修飾された子要素が含まれています。"
    },
    {
      "indent": 3,
      "text": "<message to='juliet@capulet.com'> <body>Hello?</body> <html xmlns='http://jabber.org/protocol/xhtml-im'> <body xmlns='http://www.w3.org/1999/xhtml'> <p style='font-weight:bold'>Hello?</p> </body> </html> </message>",
      "ja": "<メッセージto='juliet@capulet.com '> <身体>こんにちは</ BODY> <HTMLのxmlns =？' のhttp：//jabber.org/protocol/xhtml-im '> <身体のxmlns =' のhttp：// www.w3.org/1999/xhtml '> <Pスタイル=' フォント重量：？太字 '>こんにちは</ P> </ BODY> </ HTML> </メッセージ>"
    },
    {
      "indent": 3,
      "text": "It is conventional in the XMPP community for implementations to not generate namespace prefixes for elements that are qualified by extended namespaces (in the XML community, this convention is sometimes called \"prefix-free canonicalization\"). However, if an implementation generates such namespace prefixes then it MUST include the namespace declaration in the stanza itself or a child element of the stanza, not in the stream header (see Section 4.8.4).",
      "ja": "実装が拡張された名前空間で修飾されている要素の名前空間接頭辞を生成しないことが（XMLコミュニティで、この大会は時々、「接頭辞のない正規化」と呼ばれる）XMPPコミュニティにおいて一般的です。実装は、名前空間接頭辞を生成する場合は、それはスタンザ自体又はスタンザの子要素ではなく、ストリームヘッダ内の名前空間宣言（セクション4.8.4を参照）を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "Routing entities (typically servers) SHOULD try to maintain prefixes when serializing XML stanzas for processing, but receiving entities MUST NOT depend on the prefix strings to have any particular value (the allowance for the 'stream' prefix, described under Section 4.8.5, is an exception to this rule, albeit for streams rather than stanzas).",
      "ja": "、ルーティングエンティティ（通常はサーバ）は、処理のためのXMLスタンザをシリアル化するときのプレフィックスを維持しようとする必要がありますが、受信エンティティは、4.8.5項で述べた任意の特定の値（「ストリーム」プレフィックス引当金を、持っているプレフィックス文字列に依存してはなりません）のストリームではなく、スタンザのためとはいえ、この規則の例外です。"
    },
    {
      "indent": 3,
      "text": "Support for any given extended namespace is OPTIONAL on the part of any implementation. If an entity does not understand such a namespace, the entity's expected behavior depends on whether the entity is (1) the recipient or (2) a server that is routing or delivering the stanza to the recipient.",
      "ja": "任意の拡張名前空間のサポートは任意の実装の一部ではオプションです。エンティティは、そのような名前空間を理解していない場合は、エンティティの期待される動作は、企業は（1）受信者または受信者にスタンザをルーティングまたは配信している（2）サーバーであるかどうかに依存します。"
    },
    {
      "indent": 3,
      "text": "If a recipient receives a stanza that contains an element or attribute it does not understand, it MUST NOT attempt to process that XML data and instead MUST proceed as follows.",
      "ja": "受信者が要素を含んでいるか、それが理解できない属性スタンザを受信した場合、そのXMLデータを処理することを試みてはいけませんし、代わりに次のように操作しなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If an intended recipient receives a message stanza whose only child element is qualified by a namespace it does not understand, then depending on the XMPP application it MUST either ignore the entire stanza or return a stanza error, which SHOULD be <service-unavailable/> (Section 8.3.3.19).",
      "ja": "O目的の受信者があるべきその唯一の子要素、それは全体のスタンザを無視するか、スタンザ・エラーを返さなければならないのいずれかXMPPのアプリケーションに応じて、その後、それは理解していない名前空間で修飾されたメッセージのスタンザを、受信した場合、<サービス利用できません/ >（セクション8.3.3.19）。"
    },
    {
      "indent": 3,
      "text": "o If an intended recipient receives a presence stanza whose only child element is qualified by a namespace it does not understand, then it MUST ignore the child element by treating the presence stanza as if it contained no child element.",
      "ja": "意図した受信者が、その唯一の子要素、それは理解していない名前空間で修飾されたプレゼンススタンザを受信した場合、O、それはそれは、子要素を含んでいなかったかのように存在スタンザを処理することにより、子要素を無視しなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If an intended recipient receives a message or presence stanza that contains XML data qualified by a namespace it does not understand, then it MUST ignore the portion of the stanza qualified by the unknown namespace.",
      "ja": "意図した受信者が、それは理解していない名前空間で修飾されたXMLデータを含むメッセージやプレゼンススタンザを受信した場合、O、それは未知の名前空間で修飾スタンザの部分を無視しなければなりません。"
    },
    {
      "indent": 3,
      "text": "o If an intended recipient receives an IQ stanza of type \"get\" or \"set\" containing a child element qualified by a namespace it does not understand, then the entity MUST return an IQ stanza of type \"error\" with an error condition of <service-unavailable/>.",
      "ja": "意図した受信者がタイプのIQスタンザを受信した場合O「GET」またはそれは理解していない名前空間で修飾子要素を含む「設定」、企業はのエラー状態でタイプ「エラー」のIQスタンザを返さなければなりません<サービス利用できません/>。"
    },
    {
      "indent": 3,
      "text": "If a server handles a stanza that is intended for delivery to another entity and that contains a child element it does not understand, it MUST route the stanza unmodified to a remote server or deliver the stanza unmodified to a connected client associated with a local account.",
      "ja": "サーバが別のエンティティへの配信のために意図されたスタンザを処理し、それはそれは、リモートサーバへのルートスタンザをそのままMUSTまたはローカルアカウントに関連付けられている接続されたクライアントへの未修正のスタンザを提供し、それは理解していない子要素が含まれている場合。"
    },
    {
      "indent": 0,
      "text": "9. Detailed Examples",
      "section_title": true,
      "ja": "9.詳細な例"
    },
    {
      "indent": 3,
      "text": "The detailed examples in this section further illustrate the protocols defined in this specification.",
      "ja": "このセクションの詳細な実施例は、さらに本明細書で定義されたプロトコルを示します。"
    },
    {
      "indent": 0,
      "text": "9.1. Client-to-Server Examples",
      "section_title": true,
      "ja": "9.1。クライアントとサーバーの例"
    },
    {
      "indent": 3,
      "text": "The following examples show the XMPP data flow for a client negotiating an XML stream with a server, exchanging XML stanzas, and closing the negotiated stream. The server is \"im.example.com\", the server requires use of TLS, the client authenticates via the SASL SCRAM-SHA-1 mechanism as <juliet@im.example.com> with a password of \"r0m30myr0m30\", and the client binds a client-submitted resource to the stream. It is assumed that before sending the initial stream header, the client has already resolved an SRV record of _xmpp-client._tcp.im.example.com and has opened a TCP connection to the advertised port at the resolved IP address.",
      "ja": "次の例では、クライアントは、サーバとXMLストリームを交渉XMLスタンザを交換し、交渉したストリームを閉じるためのXMPPデータフローを示します。サーバはサーバがTLSを使用する必要があり、「im.example.com」で、クライアントが「r0m30myr0m30」のパスワードで、<juliet@im.example.com>としてSASL SCRAM-SHA-1機構を介して認証し、クライアントがストリームにクライアント提出リソースをバインドします。初期ストリームヘッダを送信する前に、クライアントがすでに_xmpp-client._tcp.im.example.comのSRVレコードを解決したものとすると解決されたIPアドレスのアドバタイズされたポートへのTCP接続をオープンしました。"
    },
    {
      "indent": 0,
      "text": "9.1.1. TLS",
      "section_title": true,
      "ja": "9.1.1。 TLS"
    },
    {
      "indent": 3,
      "text": "Step 1: Client initiates stream to server:",
      "ja": "ステップ1：クライアントがサーバーにストリームを開始します。"
    },
    {
      "indent": 3,
      "text": "C: <stream:stream from='juliet@im.example.com' to='im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "C：<ストリーム：クライアント： 'のxmlns = 'ジャバーエン：im.example.com 'バージョン= '1.0' LANG = XML' '=' にストリームfrom='juliet@im.example.com' のxmlns：ストリーム=' http://etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "Step 2: Server responds by sending a response stream header to client:",
      "ja": "ステップ2：サーバは、クライアントへの応答ストリームヘッダを送信することで応答します。"
    },
    {
      "indent": 3,
      "text": "S: <stream:stream from='im.example.com' id='t7AMCin9zjMNwQKDnplntZPIDEI=' to='juliet@im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "S：<ストリーム：ストリームから= 'im.example.com' ID = 't7AMCin9zjMNwQKDnplntZPIDEI =' to='juliet@im.example.com 'バージョンは、= '1.0' のxml：LANG = '' のxmlns =' のjabber EN：クライアント'のxmlns：ストリーム=' のhttp：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "Step 3: Server sends stream features to client (only the STARTTLS extension at this point, which is mandatory-to-negotiate):",
      "ja": "ステップ3：サーバーは、（必須ツー交渉している、この時点でのみSTARTTLS拡張）クライアントにストリーム機能を送信します。"
    },
    {
      "indent": 3,
      "text": "S: <stream:features> <starttls xmlns='urn:ietf:params:xml:ns:xmpp-tls'> <required/> </starttls> </stream:features>",
      "ja": "S：<ストリーム：機能> <STARTTLS用のxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-TLS'> <必須/> </ STARTTLS> </ストリーム：機能>"
    },
    {
      "indent": 3,
      "text": "Step 4: Client sends STARTTLS command to server:",
      "ja": "ステップ4：クライアントは、サーバーへのSTARTTLSコマンドを送信します。"
    },
    {
      "indent": 3,
      "text": "C: <starttls xmlns='urn:ietf:params:xml:ns:xmpp-tls'/>",
      "ja": "C：<STARTTLS用のxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-TLS' />"
    },
    {
      "indent": 3,
      "text": "Step 5: Server informs client that it is allowed to proceed:",
      "ja": "ステップ5：サーバーは、進行させているクライアントに通知："
    },
    {
      "indent": 3,
      "text": "S: <proceed xmlns='urn:ietf:params:xml:ns:xmpp-tls'/>",
      "ja": "S：<のxmlns =続行 '壷を：IETF：のparams：XML：NS：XMPP-TLS' />"
    },
    {
      "indent": 3,
      "text": "Step 5 (alt): Server informs client that STARTTLS negotiation has failed, closes the XML stream, and terminates the TCP connection (thus, the stream negotiation process ends unsuccessfully and the parties do not move on to the next step):",
      "ja": "ステップ5（ALT）：サーバーは（したがって、ストリームネゴシエーションプロセスが失敗し終了し、当事者が次のステップに移動しない）、STARTTLSネゴシエーションが失敗したことをクライアントに通知XMLストリームを閉じ、TCP接続を終了します。"
    },
    {
      "indent": 3,
      "text": "S: <failure xmlns='urn:ietf:params:xml:ns:xmpp-tls'/> </stream:stream>",
      "ja": "S：<障害のxmlns = '壷：IETF：のparams：XML：NS：XMPP-TLS' /> </ストリーム：ストリーム>"
    },
    {
      "indent": 3,
      "text": "Step 6: Client and server attempt to complete TLS negotiation over the existing TCP connection (see [TLS] for details).",
      "ja": "ステップ6：既存のTCP接続を介してTLSネゴシエーションを完了するためにクライアントとサーバーの試み（詳細については、[TLS]を参照）。"
    },
    {
      "indent": 3,
      "text": "Step 7: If TLS negotiation is successful, client initiates a new stream to server over the TLS-protected TCP connection:",
      "ja": "ステップ7：TLSネゴシエーションが成功すると、クライアントはTLSで保護されたTCP接続を介してサーバーに新しいストリームを開始します。"
    },
    {
      "indent": 3,
      "text": "C: <stream:stream from='juliet@im.example.com' to='im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "C：<ストリーム：クライアント： 'のxmlns = 'ジャバーエン：im.example.com 'バージョン= '1.0' LANG = XML' '=' にストリームfrom='juliet@im.example.com' のxmlns：ストリーム=' http://etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "Step 7 (alt): If TLS negotiation is unsuccessful, server closes TCP connection (thus, the stream negotiation process ends unsuccessfully and the parties do not move on to the next step):",
      "ja": "ステップ7（ALT）：TLSネゴシエーションが失敗した場合、サーバーは、TCP接続を（したがって、ストリームネゴシエーションプロセスが失敗し終了し、当事者が次のステップに移動しない）閉じます。"
    },
    {
      "indent": 0,
      "text": "9.1.2. SASL",
      "section_title": true,
      "ja": "9.1.2。 SASL"
    },
    {
      "indent": 3,
      "text": "Step 8: Server responds by sending a stream header to client along with any available stream features:",
      "ja": "ステップ8：サーバーは使用可能な任意のストリーム機能と一緒にクライアントにストリームヘッダを送信することで応答します。"
    },
    {
      "indent": 3,
      "text": "S: <stream:stream from='im.example.com' id='vgKi/bkYME8OAj4rlXMkpucAqe4=' to='juliet@im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "S：<ストリーム：ストリームから= 'im.example.com' ID = 'vgKi / bkYME8OAj4rlXMkpucAqe4 =' to='juliet@im.example.com 'バージョンは、= '1.0' のxml：langの= '' のxmlns =' おしゃべりEN ：クライアントののxmlns：ストリーム= 'のhttp：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "S: <stream:features> <mechanisms xmlns='urn:ietf:params:xml:ns:xmpp-sasl'> <mechanism>SCRAM-SHA-1-PLUS</mechanism> <mechanism>SCRAM-SHA-1</mechanism> <mechanism>PLAIN</mechanism> </mechanisms> </stream:features>",
      "ja": "S：<ストリーム：機能> <機構のxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-SASL'> <メカニズム> SCRAM-SHA-1-PLUS </機構> <メカニズム> SCRAM-SHA-1 < /機構> <メカニズム> PLAIN </機構> </メカニズム> </ストリーム：機能>"
    },
    {
      "indent": 3,
      "text": "Step 9: Client selects an authentication mechanism (in this case, SCRAM-SHA-1), including initial response data:",
      "ja": "ステップ9：クライアントが、認証機構を選択する（この場合、SCRAM-SHA-1）、初期応答データを含みます。"
    },
    {
      "indent": 3,
      "text": "C: <auth xmlns=\"urn:ietf:params:xml:ns:xmpp-sasl\" mechanism=\"SCRAM-SHA-1\"> biwsbj1qdWxpZXQscj1vTXNUQUF3QUFBQU1BQUFBTlAwVEFBQUFBQUJQVTBBQQ== </auth>",
      "ja": "C：<AUTHのxmlns = \"URN：IETF：paramsは：XML：NS：XMPP-SASL\" メカニズム= \"SCRAM-SHA-1\"> biwsbj1qdWxpZXQscj1vTXNUQUF3QUFBQU1BQUFBTlAwVEFBQUFBQUJQVTBBQQ == </ AUTH>"
    },
    {
      "indent": 3,
      "text": "The decoded base 64 data is \"n,,n=juliet,r=oMsTAAwAAAAMAAAANP0TAAAAAABPU0AA\".",
      "ja": "\",, = onstavvaamaamp 0をtaaabpuジュリエットの、凛= 0の\" dekodedベース64のデータアイス。"
    },
    {
      "indent": 3,
      "text": "Step 10: Server sends a challenge:",
      "ja": "ステップ10：サーバがチャレンジを送信します。"
    },
    {
      "indent": 3,
      "text": "S: <challenge xmlns=\"urn:ietf:params:xml:ns:xmpp-sasl\"> cj1vTXNUQUF3QUFBQU1BQUFBTlAwVEFBQUFBQUJQVTBBQWUxMjQ2OTViLTY5Y TktNGRlNi05YzMwLWI1MWIzODA4YzU5ZSxzPU5qaGtZVE0wTURndE5HWTBaaT AwTmpkbUxUa3hNbVV0TkRsbU5UTm1ORE5rTURNeixpPTQwOTY= </challenge>",
      "ja": "S：<チャレンジのxmlns = \"壷：IETF：のparams：XML：NS：XMPP-SASL\"> cj1vTXNUQUF3QUFBQU1BQUFBTlAwVEFBQUFBQUJQVTBBQWUxMjQ2OTViLTY5Y TktNGRlNi05YzMwLWI1MWIzODA4YzU5ZSxzPU5qaGtZVE0wTURndE5HWTBaaT AwTmpkbUxUa3hNbVV0TkRsbU5UTm1ORE5rTURNeixpPTQwOTY = </挑戦>"
    },
    {
      "indent": 3,
      "text": "The decoded base 64 data is \"r=oMsTAAwAAAAMAAAANP0TAAAAAABPU0AAe12469 5b-69a9-4de6-9c30- b51b3808c59e,s=NjhkYTM0MDgtNGY0Zi00NjdmLTkxMmUtNDlmNTNmNDNkMDMz,i=409 6\" (line breaks not included in actual data).",
      "ja": "デコードされたベース64のデータは、（線は実際のデータに含まれていないブレーク） \"R = oMsTAAwAAAAMAAAANP0TAAAAAABPU0AAe12469 5B-69a9-4de6-9c30- b51b3808c59e、S = NjhkYTM0MDgtNGY0Zi00NjdmLTkxMmUtNDlmNTNmNDNkMDMz、I = 409 6\" です。"
    },
    {
      "indent": 3,
      "text": "Step 11: Client sends a response:",
      "ja": "ステップ11：クライアントが応答を送信します。"
    },
    {
      "indent": 3,
      "text": "C: <response xmlns=\"urn:ietf:params:xml:ns:xmpp-sasl\"> Yz1iaXdzLHI9b01zVEFBd0FBQUFNQUFBQU5QMFRBQUFBQUFCUFUwQUFlMTI0N jk1Yi02OWE5LTRkZTYtOWMzMC1iNTFiMzgwOGM1OWUscD1VQTU3dE0vU3ZwQV RCa0gyRlhzMFdEWHZKWXc9 </response>",
      "ja": "C：<応答のxmlns = \"URN：IETF：paramsは：XML：NS：XMPP-SASL\"> Yz1iaXdzLHI9b01zVEFBd0FBQUFNQUFBQU5QMFRBQUFBQUFCUFUwQUFlMTI0N jk1Yi02OWE5LTRkZTYtOWMzMC1iNTFiMzgwOGM1OWUscD1VQTU3dE0vU3ZwQV RCa0gyRlhzMFdEWHZKWXc9 </レスポンス>"
    },
    {
      "indent": 3,
      "text": "The decoded base 64 data is \"c=biws,r=oMsTAAwAAAAMAAAANP0TAAAAAABPU0 AAe124695b-69a9-4de6-9c30-b51b3808c59e,p=UA57tM/ SvpATBkH2FXs0WDXvJYw=\" (line breaks not included in actual data).",
      "ja": "デコードされたベース64のデータが \"C = biws、R = oMsTAAwAAAAMAAAANP0TAAAAAABPU0 AAe124695b-69a9-4de6-9c30-b51b3808c59e、P = UA57tM / SvpATBkH2FXs0WDXvJYw =\"（行は、実際のデータには含まれない破壊）。"
    },
    {
      "indent": 3,
      "text": "Step 12: Server informs client of success, including additional data with success:",
      "ja": "ステップ12：サーバは、成功して追加データを含め、成功のクライアントに通知します："
    },
    {
      "indent": 3,
      "text": "S: <success xmlns='urn:ietf:params:xml:ns:xmpp-sasl'> dj1wTk5ERlZFUXh1WHhDb1NFaVc4R0VaKzFSU289 </success>",
      "ja": "S：<成功のxmlns = '壷：IETF：のparams：XML：NS：XMPP-SASL'> dj1wTk5ERlZFUXh1WHhDb1NFaVc4R0VaKzFSU289 </成功>"
    },
    {
      "indent": 3,
      "text": "The decoded base 64 data is \"v=pNNDFVEQxuXxCoSEiW8GEZ+1RSo=\".",
      "ja": "デコードされたベース64のデータは、 \"V = pNNDFVEQxuXxCoSEiW8GEZ + 1RSo =\" です。"
    },
    {
      "indent": 3,
      "text": "Step 12 (alt): Server returns a SASL error to client (thus, the stream negotiation process ends unsuccessfully and the parties do not move on to the next step):",
      "ja": "ステップ12（ALT）：サーバーがクライアントにSASLエラーを返します（したがって、ストリームネゴシエーションプロセスが失敗し終了し、当事者が次のステップに移動しません）："
    },
    {
      "indent": 3,
      "text": "S: <failure xmlns='urn:ietf:params:xml:ns:xmpp-sasl'> <not-authorized/> </failure> </stream>",
      "ja": "S：<障害のxmlns = '壷：IETF：のparams：XML：NS：XMPP-SASL'> <-許可されていません/> </失敗> </ストリーム>"
    },
    {
      "indent": 3,
      "text": "Step 13: Client initiates a new stream to server:",
      "ja": "ステップ13：クライアントがサーバに新しいストリームを開始します。"
    },
    {
      "indent": 3,
      "text": "C: <stream:stream from='juliet@im.example.com' to='im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "C：<ストリーム：クライアント： 'のxmlns = 'ジャバーエン：im.example.com 'バージョン= '1.0' LANG = XML' '=' にストリームfrom='juliet@im.example.com' のxmlns：ストリーム=' http://etherx.jabber.org/streams'>"
    },
    {
      "indent": 0,
      "text": "9.1.3. Resource Binding",
      "section_title": true,
      "ja": "9.1.3。リソースバインディング"
    },
    {
      "indent": 3,
      "text": "Step 14: Server responds by sending a stream header to client along with supported features (in this case, resource binding):",
      "ja": "ステップ14：サーバがサポートされている機能と一緒にクライアントにストリームヘッダを送信することによって応答する（この場合、リソース結合）："
    },
    {
      "indent": 3,
      "text": "S: <stream:stream from='im.example.com' id='gPybzaOzBmaADgxKXu9UClbprp0=' to='juliet@im.example.com' version='1.0' xml:lang='en' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "S：<ストリーム：= 'im.example.com' からのストリームID = 'gPybzaOzBmaADgxKXu9UClbprp0 =' to='juliet@im.example.com 'バージョン= '1.0' のxml：LANG = '' のxmlns =' のjabber EN：クライアント'のxmlns：ストリーム=' のhttp：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "S: <stream:features> <bind xmlns='urn:ietf:params:xml:ns:xmpp-bind'/> </stream:features>",
      "ja": "Sは：<ストリーム：特長> <バインドのxmlns = '壷：IETF：のparams：XML：NS：XMPP-バインド' /> </ストリーム：特長>"
    },
    {
      "indent": 3,
      "text": "Upon being informed that resource binding is mandatory-to-negotiate, the client needs to bind a resource to the stream; here we assume that the client submits a human-readable text string.",
      "ja": "リソース結合が必須ツー交渉であることを通知されると、クライアントがストリームにリソースをバインドする必要があります。ここでは、クライアントは、人間が読み取り可能なテキスト文字列を送信することを前提としています。"
    },
    {
      "indent": 3,
      "text": "Step 15: Client binds a resource:",
      "ja": "ステップ15：クライアントがリソースをバインドします。"
    },
    {
      "indent": 3,
      "text": "C: <iq id='yhc13a95' type='set'> <bind xmlns='urn:ietf:params:xml:ns:xmpp-bind'> <resource>balcony</resource> </bind> </iq>",
      "ja": "C：<IQのID = 'yhc13a95' TYPE = 'セット'> <バインドのxmlns = 'URN：IETF：paramsは：XML：NS：XMPPバインド'> <リソース>バルコニー</リソース> </バインド> </ IQ >"
    },
    {
      "indent": 3,
      "text": "Step 16: Server accepts submitted resourcepart and informs client of successful resource binding:",
      "ja": "ステップ16：サーバが送信resourcepartを受け入れ、結合に成功したリソースのクライアントに通知："
    },
    {
      "indent": 3,
      "text": "S: <iq id='yhc13a95' type='result'> <bind xmlns='urn:ietf:params:xml:ns:xmpp-bind'> <jid> juliet@im.example.com/balcony </jid> </bind> </iq>",
      "ja": "S：<IQ ID = 'yhc13a95' TYPE = '結果'> <バインドのxmlns = 'URN：IETF：paramsは：XML：NS：XMPPバインド'> <JID> juliet@im.example.com/balcony </ JID > </バインド> </ IQ>"
    },
    {
      "indent": 3,
      "text": "Step 16 (alt): Server returns error to client (thus, the stream negotiation process ends unsuccessfully and the parties do not move on to the next step):",
      "ja": "手順16（ALT）：サーバーがクライアントにエラーを返します（したがって、ストリームネゴシエーションプロセスが失敗し終了し、当事者が次のステップに移動しません）："
    },
    {
      "indent": 3,
      "text": "S: <iq id='yhc13a95' type='error'> <error type='cancel'> <conflict xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/> </error> </iq>",
      "ja": "S：<IQ IDが= 'yhc13a95' TYPE = 'エラー'> <エラーの種類は= 'キャンセル'> <競合のxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-スタンザ' /> </エラー> </ IQ>"
    },
    {
      "indent": 0,
      "text": "9.1.4. Stanza Exchange",
      "section_title": true,
      "ja": "9.1.4。スタンザ交換"
    },
    {
      "indent": 3,
      "text": "Now the client is allowed to send XML stanzas over the negotiated stream.",
      "ja": "今、クライアントが交渉されたストリーム上のXMLスタンザを送信することが許可されています。"
    },
    {
      "indent": 3,
      "text": "C: <message from='juliet@im.example.com/balcony' id='ju2ba41c' to='romeo@example.net' type='chat' xml:lang='en'> <body>Art thou not Romeo, and a Montague?</body> </message>",
      "ja": "C：<メッセージfrom='juliet@im.example.com/balcony 'ID = 'ju2ba41c' to='romeo@example.net' TYPE = 'チャット' のxml：langの= 'EN'> <BODY>アートなたありませんロミオ、そしてモンタギュー？</ BODY> </メッセージ>"
    },
    {
      "indent": 3,
      "text": "If necessary, sender's server negotiates XML streams with intended recipient's server (see Section 9.2).",
      "ja": "必要に応じて、送信者のサーバーは、受信者のサーバにXMLストリームを交渉した場合（9.2節を参照してください）。"
    },
    {
      "indent": 3,
      "text": "The intended recipient replies, and the message is delivered to the client.",
      "ja": "意図した受信者が返信し、メッセージがクライアントに配信されます。"
    },
    {
      "indent": 3,
      "text": "E: <message from='romeo@example.net/orchard' id='ju2ba41c' to='juliet@im.example.com/balcony' type='chat' xml:lang='en'> <body>Neither, fair saint, if either thee dislike.</body> </message>",
      "ja": "E：<メッセージ 'ID = 'ju2ba41c' to='juliet@im.example.com/balcony' タイプ= from='romeo@example.net/orchard xmlの 'チャット'： 'en' とLANG => <body>をどちらも、公正な聖人、どちらかあなたが嫌い​​ならば。</ BODY> </メッセージ>"
    },
    {
      "indent": 3,
      "text": "The client can subsequently send and receive an unbounded number of subsequent XML stanzas over the stream.",
      "ja": "クライアントはその後、ストリーム上で、その後のXMLスタンザの無制限数を送受信することができます。"
    },
    {
      "indent": 0,
      "text": "9.1.5. Close",
      "section_title": true,
      "ja": "9.1.5。閉じる"
    },
    {
      "indent": 3,
      "text": "Desiring to send no further messages, the client closes its stream to the server but waits for incoming data from the server.",
      "ja": "それ以上のメッセージを送信しないことを望む、クライアントはサーバーにそのストリームをクローズしますが、サーバーからの着信データを待ちます。"
    },
    {
      "indent": 3,
      "text": "C: </stream:stream>",
      "ja": "C：</ストリーム：ストリーム>"
    },
    {
      "indent": 3,
      "text": "Consistent with Section 4.4, the server might send additional data to the client and then closes its stream to the client.",
      "ja": "4.4節と一致して、サーバがクライアントに追加のデータを送信し、クライアントにそのストリームをクローズすることがあります。"
    },
    {
      "indent": 3,
      "text": "S: </stream:stream>",
      "ja": "S：</ストリーム：ストリーム>"
    },
    {
      "indent": 3,
      "text": "The client now sends a TLS close_notify alert, receives a responding close_notify alert from the server, and then terminates the underlying TCP connection.",
      "ja": "クライアントは、TLSは、close_notifyを送信し、サーバからの応答は、close_notifyを受信し、基本的なTCP接続を終了します。"
    },
    {
      "indent": 0,
      "text": "9.2. Server-to-Server Examples",
      "section_title": true,
      "ja": "9.2。サーバー間の例"
    },
    {
      "indent": 3,
      "text": "The following examples show the data flow for a server negotiating an XML stream with a peer server, exchanging XML stanzas, and closing the negotiated stream. The initiating server (\"Server1\") is im.example.com; the receiving server (\"Server2\") is example.net and it requires use of TLS; im.example.com presents a certificate and authenticates via the SASL EXTERNAL mechanism. It is assumed that before sending the initial stream header, Server1 has already resolved an SRV record of _xmpp-server._tcp.example.net and has opened a TCP connection to the advertised port at the resolved IP address. Note how Server1 declares the content namespace \"jabber: server\" as the default namespace and uses prefixes for stream-related elements, whereas Server2 uses prefix-free canonicalization.",
      "ja": "以下の例は、XMLスタンザを交換し、ネゴシエートストリームを閉じ、ピア・サーバとXMLストリームを交渉サーバのデータフローを示します。開始サーバー（「サーバー1」）im.example.comです。受信サーバ（「サーバ2」）はexample.netであり、それはTLSの使用を必要とします。 im.example.comは、証明書を提示してSASL EXTERNAL機構を介して認証します。初期ストリームヘッダを送信する前に、サーバ1はすでに_xmpp-server._tcp.example.netのSRVレコードを解決したものとすると解決されたIPアドレスのアドバタイズされたポートへのTCP接続をオープンしました。サーバー2は、接頭辞なしの正規化を使用するのに対し、デフォルトの名前空間として：「サーバージャバー」とストリームに関連した要素のプレフィックスを使用してサーバ1は、コンテンツの名前空間を宣言してどのように注意してください。"
    },
    {
      "indent": 0,
      "text": "9.2.1. TLS",
      "section_title": true,
      "ja": "9.2.1。 TLS"
    },
    {
      "indent": 3,
      "text": "Step 1: Server1 initiates stream to Server2:",
      "ja": "ステップ1：サーバ1は、サーバー2にストリームを開始します。"
    },
    {
      "indent": 3,
      "text": "S1: <stream:stream from='im.example.com' to='example.net' version='1.0' xmlns='jabber:server' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "S1：<ストリーム：= 'example.net' へ= 'im.example.com' からストリームバージョン= '1.0' のxmlns = 'おしゃべり：サーバののxmlns：ストリーム='のhttp：//etherx.jabber.org/streams 「>"
    },
    {
      "indent": 3,
      "text": "Step 2: Server2 responds by sending a response stream header to Server1:",
      "ja": "ステップ2：サーバー2は、サーバ1への応答ストリームのヘッダを送信することによって応答します。"
    },
    {
      "indent": 3,
      "text": "S2: <stream from='example.net' id='hTiXkW+ih9k2SqdGkk/AZi0OJ/Q=' to='im.example.com' version='1.0' xmlns='http://etherx.jabber.org/streams'>",
      "ja": "S2：<= 'example.net' からのストリームID = 'hTiXkW + ih9k2SqdGkk / AZi0OJ / Q =' = 'im.example.com' バージョンへ= '1.0' のxmlns = 'HTTP：//etherx.jabber.org/ストリーム>"
    },
    {
      "indent": 3,
      "text": "Step 3: Server2 sends stream features to Server1 (only the STARTTLS extension at this point, which is mandatory-to-negotiate):",
      "ja": "ステップ3：サーバ2は、（強制的にネゴシエートされており、この時点でのみSTARTTLS拡張）サーバ1へのストリームの機能を送信します。"
    },
    {
      "indent": 3,
      "text": "S2: <features xmlns='http://etherx.jabber.org/streams'> <starttls xmlns='urn:ietf:params:xml:ns:xmpp-tls'> <required/> </starttls> </features>",
      "ja": "S2：<のxmlns =備え 'HTTP：//etherx.jabber.org/streams'> <STARTTLS用のxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-TLS'> <必須/> </ STARTTLS> </を機能>"
    },
    {
      "indent": 3,
      "text": "Step 4: Server1 sends the STARTTLS command to Server2:",
      "ja": "ステップ4：サーバ1は、サーバー2にSTARTTLSコマンドを送信します。"
    },
    {
      "indent": 3,
      "text": "S1: <starttls xmlns='urn:ietf:params:xml:ns:xmpp-tls'/>",
      "ja": "S1：<STARTTLSのxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-TLS' />"
    },
    {
      "indent": 3,
      "text": "Step 5: Server2 informs Server1 that it is allowed to proceed:",
      "ja": "ステップ5：サーバー2は、進行させることのServer1に知らせます："
    },
    {
      "indent": 3,
      "text": "S2: <proceed xmlns='urn:ietf:params:xml:ns:xmpp-tls'/>",
      "ja": "S2：<のxmlns =進む 'URNを：IETF：paramsは：XML：NS：XMPP-TLS' />"
    },
    {
      "indent": 3,
      "text": "Step 5 (alt): Server2 informs Server1 that STARTTLS negotiation has failed, closes the stream, and terminates the TCP connection (thus, the stream negotiation process ends unsuccessfully and the parties do not move on to the next step):",
      "ja": "ステップ5（ALT）：Server2が（したがって、ストリームネゴシエーションプロセスが失敗し終了し、当事者が次のステップに移動しない）、STARTTLSネゴシエーションが失敗したことのServer1に通知ストリームを閉じ、TCP接続を終了します。"
    },
    {
      "indent": 3,
      "text": "S2: <failure xmlns='urn:ietf:params:xml:ns:xmpp-tls'/> </stream>",
      "ja": "S2：<障害のxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-TLS' /> </ストリーム>"
    },
    {
      "indent": 3,
      "text": "Step 6: Server1 and Server2 attempt to complete TLS negotiation via TCP (see [TLS] for details).",
      "ja": "ステップ6：TCP経由でTLSネゴシエーションを完了するためにServer1とServer2の試み（詳細については、[TLS]を参照）。"
    },
    {
      "indent": 3,
      "text": "Step 7: If TLS negotiation is successful, Server1 initiates a new stream to Server2 over the TLS-protected TCP connection:",
      "ja": "ステップ7：TLSネゴシエーションが成功した場合、Server1がTLSで保護されたTCP接続を介してサーバー2への新しいストリームを開始します。"
    },
    {
      "indent": 3,
      "text": "S1: <stream:stream from='im.example.com' to='example.net' version='1.0' xmlns='jabber:server' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "S1：<ストリーム：= 'example.net' へ= 'im.example.com' からストリームバージョン= '1.0' のxmlns = 'おしゃべり：サーバののxmlns：ストリーム='のhttp：//etherx.jabber.org/streams 「>"
    },
    {
      "indent": 3,
      "text": "Step 7 (alt): If TLS negotiation is unsuccessful, Server2 closes the TCP connection (thus, the stream negotiation process ends unsuccessfully and the parties do not move on to the next step).",
      "ja": "ステップ7（ALT）：TLSネゴシエーションが失敗した場合、Server2がTCP接続を（したがって、ストリームネゴシエーションプロセスが失敗し終了し、当事者が次のステップに移動しない）閉じます。"
    },
    {
      "indent": 0,
      "text": "9.2.2. SASL",
      "section_title": true,
      "ja": "9.2.2。 SASL"
    },
    {
      "indent": 3,
      "text": "Step 8: Server2 sends a response stream header to Server1 along with available stream features (including a preference for the SASL EXTERNAL mechanism):",
      "ja": "ステップ8：サーバー2は（SASL EXTERNAL機構の優先を含む）利用可能なストリーム機能とともにサーバ1に応答ストリームヘッダを送信します。"
    },
    {
      "indent": 3,
      "text": "S2: <stream from='example.net' id='RChdjlgj/TIBcbT9Keu31zDihH4=' to='im.example.com' version='1.0' xmlns='http://etherx.jabber.org/streams'>",
      "ja": "S2：<= 'im.example.com' バージョンへ= 'example.net' からのストリームID = 'RChdjlgj / TIBcbT9Keu31zDihH4 =' = '1.0' のxmlns = 'HTTP：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "S2: <features xmlns='http://etherx.jabber.org/streams'> <mechanisms xmlns='urn:ietf:params:xml:ns:xmpp-sasl'> <mechanism>EXTERNAL</mechanism> </mechanisms> </features>",
      "ja": "S2：<特長のxmlns = 'HTTP：//etherx.jabber.org/streams'> <機構のxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-SASL'> <メカニズム> EXTERNAL </機構> </メカニズム> </機能>"
    },
    {
      "indent": 3,
      "text": "Step 9: Server1 selects the EXTERNAL mechanism (including an empty response of \"=\"):",
      "ja": "ステップ9：サーバ1は、（「=」の空の応答を含む）外部機構を選択します。"
    },
    {
      "indent": 3,
      "text": "S1: <auth xmlns='urn:ietf:params:xml:ns:xmpp-sasl' mechanism='EXTERNAL'>=</auth>",
      "ja": "S1：<AUTHのxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-SASL' メカニズム= 'EXTERNAL'> = </ AUTH>"
    },
    {
      "indent": 3,
      "text": "Step 10: Server2 returns success:",
      "ja": "ステップ10：Server2のが成功を返します。"
    },
    {
      "indent": 3,
      "text": "S2: <success xmlns='urn:ietf:params:xml:ns:xmpp-sasl'/>",
      "ja": "S2：<成功のxmlns = '壷：IETF：のparams：XML：NS：XMPP-SASL' />"
    },
    {
      "indent": 3,
      "text": "Step 10 (alt): Server2 informs Server1 of failed authentication (thus, the stream negotiation process ends unsuccessfully and the parties do not move on to the next step):",
      "ja": "ステップ10（ALT）：Server2が失敗した認証のサーバ1を（したがって、ストリームネゴシエーションプロセスが失敗し終了し、当事者が次のステップに移動しない）に通知します："
    },
    {
      "indent": 3,
      "text": "S2: <failure xmlns='urn:ietf:params:xml:ns:xmpp-sasl'> <not-authorized/> </failure> </stream>",
      "ja": "S2 <故障のxmlns = 'URN：IETF：paramsは：XML：NS：XMPP-SASL'> <許可しない/> </失敗> </ストリーミング>"
    },
    {
      "indent": 3,
      "text": "Step 11: Server1 initiates a new stream to Server2:",
      "ja": "ステップ11：サーバ1は、サーバー2に新しいストリームを開始します。"
    },
    {
      "indent": 3,
      "text": "S1: <stream:stream from='im.example.com' to='example.net' version='1.0' xmlns='jabber:server' xmlns:stream='http://etherx.jabber.org/streams'>",
      "ja": "S1：<ストリーム：= 'example.net' へ= 'im.example.com' からストリームバージョン= '1.0' のxmlns = 'おしゃべり：サーバののxmlns：ストリーム='のhttp：//etherx.jabber.org/streams 「>"
    },
    {
      "indent": 3,
      "text": "Step 12: Server2 responds by sending a stream header to Server1 along with any additional features (or, in this case, an empty features element):",
      "ja": "ステップ12：サーバ2（この場合、空の機能要素に、または）任意の追加機能とともにサーバ1へのストリーム・ヘッダを送信することによって応答します。"
    },
    {
      "indent": 3,
      "text": "S2: <stream from='example.net' id='MbbV2FeojySpUIP6J91qaa+TWHM=' to='im.example.com' version='1.0' xmlns='http://etherx.jabber.org/streams'>",
      "ja": "S2：<= 'example.net' からのストリームID = 'MbbV2FeojySpUIP6J91qaa + TWHM =' = 'im.example.com' バージョンへ= '1.0' のxmlns = 'HTTP：//etherx.jabber.org/streams'>"
    },
    {
      "indent": 3,
      "text": "S2: <features xmlns='http://etherx.jabber.org/streams'/>",
      "ja": "S2：<フィーチャーのxmlns = 'のhttp：//etherx.jabber.org/streams'/>"
    },
    {
      "indent": 0,
      "text": "9.2.3. Stanza Exchange",
      "section_title": true,
      "ja": "9.2.3。スタンザ交換"
    },
    {
      "indent": 3,
      "text": "Now Server1 is allowed to send XML stanzas to Server2 over the negotiated stream from im.example.com to example.net; here we assume that the transferred stanzas are those shown earlier for client-to-server communication, albeit over a server-to-server stream qualified by the 'jabber:server' namespace.",
      "ja": "今、Server1がexample.netへim.example.comから交渉されたストリームを介してサーバー2にXMLスタンザを送信することが許可されます。名前空間：ここでは、「サーバージャバー」によって修飾サーバー間のストリームを超えるにもかかわらず、転送スタンザは、クライアントからサーバーへの通信のために以前に示したものであることを前提としています。"
    },
    {
      "indent": 3,
      "text": "Server1 sends XML stanza to Server2:",
      "ja": "Server1がサーバー2にXMLスタンザを送信します。"
    },
    {
      "indent": 3,
      "text": "S1: <message from='juliet@im.example.com/balcony' id='ju2ba41c' to='romeo@example.net' type='chat' xml:lang='en'> <body>Art thou not Romeo, and a Montague?</body> </message>",
      "ja": "S1：<メッセージfrom='juliet@im.example.com/balcony 'ID = 'ju2ba41c' to='romeo@example.net' タイプは= XMLを[チャット]：langは= 'EN'> <身体>アート汝ありませんロミオ、そしてモンタギュー？</ BODY> </メッセージ>"
    },
    {
      "indent": 0,
      "text": "9.2.4. Close",
      "section_title": true,
      "ja": "9.2.4。閉じる"
    },
    {
      "indent": 3,
      "text": "Desiring to send no further messages, Server1 closes its stream to Server2 but waits for incoming data from Server2. (In practice, the stream would most likely remain open for some time, since Server1 and Server2 do not immediately know if the stream will be needed for further communication.)",
      "ja": "それ以上のメッセージを送信しないことを望む、Server1がサーバー2にそのストリームを閉じますが、Server2のからの入力データを待ちます。 （実際には、ストリームは、最も可能性の高いストリームは、さらに通信のために必要となる場合Server1とServer2のがすぐに分からないことから、いくつかの時間のために開いたままになります。）"
    },
    {
      "indent": 3,
      "text": "S1: </stream:stream>",
      "ja": "S1：</ストリーム：ストリーム>"
    },
    {
      "indent": 3,
      "text": "Consistent with the recommended stream closing handshake, Server2 closes the stream as well:",
      "ja": "推奨ストリーム閉鎖握手と一致して、サーバー2は、同様にストリームを閉じます。"
    },
    {
      "indent": 3,
      "text": "S2: </stream>",
      "ja": "S2：</ストリーム>"
    },
    {
      "indent": 3,
      "text": "Server1 now sends a TLS close_notify alert, receives a responding close_notify alert from Server2, and then terminates the underlying TCP connection.",
      "ja": "Server1が今、TLSは、close_notifyを送信サーバ2からの応答は、close_notifyを受信し、基本的なTCP接続を終了します。"
    },
    {
      "indent": 0,
      "text": "10. Server Rules for Processing XML Stanzas",
      "section_title": true,
      "ja": "処理XMLスタンザ10.サーバルール"
    },
    {
      "indent": 3,
      "text": "Each server implementation will contain its own logic for processing stanzas it receives. Such logic determines whether the server needs to route a given stanza to another domain, deliver it to a local entity (typically a connected client associated with a local account), or handle it directly within the server itself. This section provides general rules for processing XML stanzas. However, particular XMPP applications MAY specify delivery rules that modify or supplement the following rules (e.g., a set of delivery rules for instant messaging and presence applications is defined in [XMPP-IM]).",
      "ja": "各サーバの実装では、受信処理スタンザのための独自のロジックが含まれています。そのようなロジックは、サーバがローカル・エンティティ（ローカルアカウントに関連付けられた、典型的に接続されたクライアント）に配信、又はサーバ自体の中にそれを直接扱う、別のドメインにルーティングするように指定されたスタンザが必要か否かを判定する。このセクションでは、XMLスタンザを処理するための一般的なルールを提供します。しかし、特定のXMPPアプリケーションが変更配信ルールを指定するか、次のルールを補う（例えば、インスタントメッセージングとプレゼンスアプリケーションの配信ルールのセットが定義されている[XMPP-IM]）。"
    },
    {
      "indent": 0,
      "text": "10.1. In-Order Processing",
      "section_title": true,
      "ja": "10.1。で、注文処理"
    },
    {
      "indent": 3,
      "text": "An XMPP server MUST ensure in-order processing of the stanzas and other XML elements it receives over a given input stream from a connected client or remote server.",
      "ja": "XMPPサーバはスタンザと、それが接続されたクライアントまたはリモートサーバーから指定された入力ストリームを介し受信する他のXML要素の順序正しい処理を確実にしなければなりません。"
    },
    {
      "indent": 3,
      "text": "In-order processing applies (a) to any XML elements used to negotiate and manage XML streams, and (b) to all uses of XML stanzas, including but not limited to the following:",
      "ja": "インオーダー処理は、XMLストリームを交渉および管理するために使用される任意のXML要素に（a）の適用、および（b）XMLスタンザのすべての使用に対して、以下を含むがこれらに限定されません。"
    },
    {
      "indent": 3,
      "text": "1. Stanzas sent by a client to its server or to its own bare JID for direct processing by the server (e.g., in-order processing of a roster get and initial presence as described in [XMPP-IM]).",
      "ja": "（[XMPP-IM]に記載されているように名簿を取得し、初期存在例えば、インオーダー処理）サーバによって直接処理するために、そのサーバまたは独自裸JIDにクライアントによって送信された1スタンザ。"
    },
    {
      "indent": 3,
      "text": "2. Stanzas sent by a connected client and intended for delivery to another entity associated with the server (e.g., stanzas addressed from <juliet@im.example.com> to <nurse@im.example.com>). The server MUST ensure that it delivers stanzas addressed to the intended recipient in the order it receives them over the input stream from the sending client, treating stanzas addressed to the bare JID and the full JID of the intended recipient as equivalent for delivery purposes.",
      "ja": "2.スタンザは、接続されたクライアントによって送信され、（例えば、スタンザが<nurse@im.example.com>から<juliet@im.example.com>からアドレス指定）サーバに関連付けられている別のエンティティへの送達のために意図しました。サーバは、スタンザはそれはスタンザが裸JIDと配信の目的のために同等として意図された受信者の完全なJID宛治療、送信クライアントからの入力ストリーム上にそれらを受け取るために、目的の受信者に宛て提供していることを保証しなければなりません。"
    },
    {
      "indent": 3,
      "text": "3. Stanzas sent by a connected client and intended for delivery to an entity located at a remote domain (e.g., stanzas addressed from <juliet@im.example.com> to <romeo@example.net>). The routing server MUST ensure that it routes stanzas addressed to the intended recipient in the order it receives them over the input stream from the sending client, treating stanzas addressed to the bare JID and the full JID of the intended recipient as equivalent for routing purposes. To help ensure in-order processing, the routing server MUST route such stanzas over a single output stream to the remote domain, rather than sending some stanzas over one server-to-server stream and other stanzas over another server-to-server stream.",
      "ja": "3.スタンザは、接続されたクライアントによって送信され、（例えば、スタンザが<romeo@example.net>から<juliet@im.example.com>からアドレス指定）リモートドメインに位置するエンティティへの送達のために意図しました。ルーティングサーバはルート・スタンザは、それがスタンザは裸JIDとルーティングの目的のために同等として意図された受信者の完全なJID宛治療、送信クライアントからの入力ストリーム上にそれらを受け取るために意図された受取人に宛てていることを保証しなければなりません。インオーダー処理を確保するために、ルーティングサーバMUST経路ではなく、別のサーバー間のストリーム上のサーバからサーバへのストリーム及び他のスタンザ上にいくつかのスタンザを送信するよりも、リモート・ドメインへの単一の出力ストリーム上にそのようなスタンザ、。"
    },
    {
      "indent": 3,
      "text": "4. Stanzas routed from one server to another server for delivery to an entity associated with the remote domain (e.g., stanzas addressed from <juliet@im.example.com> to <romeo@example.net> and routed by <im.example.com> over a server-to-server stream to <example.net>). The delivering server MUST ensure that it delivers stanzas to the intended recipient in the order it receives them over the input stream from the routing server, treating stanzas addressed to the bare JID and the full JID of the intended recipient as equivalent for delivery purposes.",
      "ja": "4.スタンザ（例えば、スタンザが<romeo@example.net>から<juliet@im.example.com>からアドレス指定し、<im.exampleによってルーティングリモート・ドメインに関連付けられたエンティティへの配信のために別のサーバーにルーティングされます.COM> <example.net>）へのサーバー間のストリームを超えます。配信サーバは、それがスタンザ裸JIDと送達目的のために等価として意図された受取人の完全なJID宛処理、ルーティングサーバーからの入力ストリームを介してそれらを受信するために意図された受信者にスタンザを送達することを保証しなければなりません。"
    },
    {
      "indent": 3,
      "text": "5. Stanzas sent by one server to another server for direct processing by the server that is hosting the remote domain (e.g., stanzas addressed from <im.example.com> to <example.net>).",
      "ja": "（例えば、スタンザが<example.net>から<im.example.com>からアドレス指定）リモートドメインをホストしているサーバによって直接処理するために別のサーバにあるサーバによって送信された5スタンザ。"
    },
    {
      "indent": 3,
      "text": "If the server's processing of a particular request could have an effect on its processing of subsequent data it might receive over that input stream (e.g., enforcement of communication policies), it MUST suspend processing of subsequent data until it has processed the request.",
      "ja": "特定のリクエストのサーバの処理は、それがその入力ストリームを介して受信する場合があります、その後のデータのその処理に影響を与えることができれば、それは要求を処理するまで（例えば、通信政策の執行は）、それ以降のデータの処理を中断しなければなりません。"
    },
    {
      "indent": 3,
      "text": "In-order processing applies only to a single input stream. Therefore, a server is not responsible for ensuring the coherence of data it receives across multiple input streams associated with the same local account (e.g., stanzas received over two different input streams from <juliet@im.example.com/balcony> and <juliet@im.example.com/chamber>) or the same remote domain (e.g., two different input streams negotiated by a remote domain; however, a server MAY close the stream with a <conflict/> stream error (Section 4.9.3.3) if a remote server attempts to negotiate more than one stream, as described under Section 4.9.3.3).",
      "ja": "インオーダー処理は、単一の入力ストリームに適用されます。したがって、サーバは、それが同じローカルアカウントに関連付けられた複数の入力ストリームを横切って受信データの一貫性を確保する責任がありません（例えば、二つの異なる入力を介して受信スタンザは<juliet@im.example.com/balcony>と<ジュリエットからストリーム@ im.example.com /チャンバー>）または同じリモートドメイン（例えば、二つの異なる入力がリモートドメインによってネゴシエートストリームが、サーバーは<競合/>ストリームエラー（セクション4.9.3.3とストリームを閉じる場合があります）リモートサーバ）は、セクション4.9.3.3で説明されているように、複数のストリームを交渉しようとした場合。"
    },
    {
      "indent": 0,
      "text": "10.2. General Considerations",
      "section_title": true,
      "ja": "10.2。概論"
    },
    {
      "indent": 3,
      "text": "At high level, there are three primary considerations at play in server processing of XML stanzas, which sometimes are at odds but need to be managed in a consistent way:",
      "ja": "ハイレベルで、時には対立しているが、一貫性のある方法で管理する必要のあるXMLスタンザのサーバ処理で遊んで、3つの主要な考慮事項があります。"
    },
    {
      "indent": 3,
      "text": "1. It is good to deliver a stanza to the intended recipient if possible.",
      "ja": "1.可能な場合は目的の受信者にスタンザを提供するために良いです。"
    },
    {
      "indent": 3,
      "text": "2. If a stanza cannot be delivered, it is helpful to inform the sender.",
      "ja": "スタンザが配信できない場合2.、送信者に通知するために有用です。"
    },
    {
      "indent": 3,
      "text": "3. It is bad to facilitate directory harvesting attacks (Section 13.11) and presence leaks (Section 13.10.2).",
      "ja": "3.ディレクトリハーベスト攻撃（セクション13.11）とプレゼンス漏れ（セクション13.10.2）を容易にするために悪いです。"
    },
    {
      "indent": 3,
      "text": "With regard to possible delivery-related attacks, the following points need to be kept in mind:",
      "ja": "可能な配達に関連した攻撃に関しては、以下の点を念頭に置いておく必要があります。"
    },
    {
      "indent": 3,
      "text": "1. From the perspective of an attacker, there is little if any effective difference between the server's (i) delivering the stanza or storing it offline for later delivery (see [XMPP-IM]) and (ii) silently ignoring it (because an error is not returned immediately in any of those cases); therefore, in scenarios where a server delivers a stanza or places the stanza into offline storage for later delivery, it needs to silently ignore the stanza if that account does not exist.",
      "ja": "任意の有効なサーバの（I）との差スタンザを提供するか、後で配信するためにそれをオフラインで保存する（参照[XMPP-IM]）及び（ii）は黙って（それを無視した場合、攻撃者の視点から1.は、少しありますので、エラーは、これらのいずれかの場合）には、すぐに返されません。そのため、サーバはスタンザを提供するか、後で配信するために、オフラインストレージにスタンザを配置シナリオでは、そのアカウントが存在しない場合は黙っスタンザを無視する必要があります。"
    },
    {
      "indent": 3,
      "text": "2. How a server processes stanzas sent to the bare JID <localpart@domainpart> has implications for directory harvesting, because an attacker could determine whether an account exists if the server responds differently depending on whether there is an account for a given bare JID.",
      "ja": "攻撃者は、サーバーが指定された裸のJIDのアカウントがあるかどうかに応じて異なる応答するかどうかのアカウントが存在するかどうかを決定することができるため、サーバーは、裸JID <ローカル部@ domainpart>ディレクトリハーベストのための意味を持っているに送信されたスタンザの処理方法2。"
    },
    {
      "indent": 3,
      "text": "3. How a server processes stanzas sent to a full JID has implications for presence leaks, because an attacker could send requests to multiple full JIDs and receive different replies depending on whether the user has a device currently online at that full JID. The use of randomized resourceparts (whether generated by the client or the server as described under Section 7) significantly helps to mitigate this attack, so it is of somewhat lesser concern than the directory harvesting attack.",
      "ja": "攻撃者は、複数のフルたJIDに要求を送信し、ユーザーがその完全なJIDで現在オンラインのデバイスを持っているかどうかに応じて異なる応答を受け取ることができるため、サーバーは、完全なJIDに送信されたスタンザの処理方法3.プレゼンスリークの意味を持ちます。 （第7節で述べたように、クライアントまたはサーバによって生成されたかどうか）の無作為化resourcepartsの使用が大幅にこの攻撃を軽減するのに役立ちますので、ディレクトリハーベスト攻撃よりもやや低い懸念されています。"
    },
    {
      "indent": 3,
      "text": "Naturally, presence is not leaked if the entity to which a user's server returns an error already knows the user's presence or is authorized to do so (e.g., by means of a presence subscription or directed presence), and a server does not enable a directory harvesting attack if it returns an error to an entity that already knows if a user exists (e.g., because the entity is in the user's contact list); these matters are discussed more fully in [XMPP-IM].",
      "ja": "ユーザーのサーバーが既にエラーを返したエンティティは、ユーザーのプレゼンスを知っているか（プレゼンスサブスクリプションまたは監督の存在によって、例えば）そうすることを許可され、サーバがディレクトリを有効にしない場合、当然のことながら、存在が漏洩することはありませんそれは（エンティティは、ユーザーの連絡先リストにあるため、例えば）は、ユーザが存在する場合は、すでに知っている実体にエラーを返した場合、攻撃を収穫。これらの問題は、[XMPP-IM]で詳しく説明されています。"
    },
    {
      "indent": 0,
      "text": "10.3. No 'to' Address",
      "section_title": true,
      "ja": "10.3。アドレス「に」いいえ"
    },
    {
      "indent": 3,
      "text": "If the stanza possesses no 'to' attribute, the server MUST handle it directly on behalf of the entity that sent it, where the meaning of \"handle it directly\" depends on whether the stanza is message, presence, or IQ. Because all stanzas received from other servers MUST possess a 'to' attribute, this rule applies only to stanzas received from a local entity (typically a client) that is connected to the server.",
      "ja": "スタンザはNO「に」属性を持っていない場合、サーバは「それを直接扱う」の意味はスタンザがメッセージ、プレゼンス、またはIQであるかどうかに依存し、それを送信したエンティティに代わってそれを直接処理する必要があります。他のサーバから受信したすべてのスタンザが「と」属性を持っていなければならないので、このルールは、スタンザは、サーバーに接続されているローカルエンティティ（通常はクライアント）から受信のみに適用されます。"
    },
    {
      "indent": 0,
      "text": "10.3.1. Message",
      "section_title": true,
      "ja": "10.3.1。メッセージ"
    },
    {
      "indent": 3,
      "text": "If the server receives a message stanza with no 'to' attribute, it MUST treat the message as if the 'to' address were the bare JID <localpart@domainpart> of the sending entity.",
      "ja": "サーバーが属性「に」いいえでメッセージスタンザを受信した場合「から」アドレスが送信側エンティティの裸JID <ローカル部@ domainpart>であるかのように、それはメッセージを扱わなければなりません。"
    },
    {
      "indent": 0,
      "text": "10.3.2. Presence",
      "section_title": true,
      "ja": "10.3.2。存在"
    },
    {
      "indent": 3,
      "text": "If the server receives a presence stanza with no 'to' attribute, it MUST broadcast it to the entities that are subscribed to the sending entity's presence, if applicable ([XMPP-IM] defines the semantics of such broadcasting for presence applications).",
      "ja": "サーバーが属性「に」いいえで存在スタンザを受信した場合、それは送信側エンティティのプレゼンスを購読しているエンティティにそれを放送しなければならない、該当する場合（[XMPP-IMは、プレゼンスアプリケーションのために、このような放送の意味を定義します）。"
    },
    {
      "indent": 0,
      "text": "10.3.3. IQ",
      "section_title": true,
      "ja": "10.3.3。 IQ"
    },
    {
      "indent": 3,
      "text": "If the server receives an IQ stanza with no 'to' attribute, it MUST process the stanza on behalf of the account from which received the stanza, as follows:",
      "ja": "サーバーが属性「に」はとIQスタンザを受信しない場合は、次のように、それは、スタンザを受け、そこからアカウントに代わってスタンザを処理しなければなりません："
    },
    {
      "indent": 3,
      "text": "1. If the IQ stanza is of type \"get\" or \"set\" and the server understands the namespace that qualifies the payload, the server MUST handle the stanza on behalf of the sending entity or return an appropriate error to the sending entity. Although the meaning of \"handle\" is determined by the semantics of the qualifying namespace, in general the server will respond to the IQ stanza of type \"get\" or \"set\" by returning an appropriate IQ stanza of type \"result\" or \"error\", responding as if the server were the bare JID of the sending entity. As an example, if the sending entity sends an IQ stanza of type \"get\" where the payload is qualified by the 'jabber:iq:roster' namespace (as described in [XMPP-IM]), then the server will return the roster associated with the sending entity's bare JID to the particular resource of the sending entity that requested the roster.",
      "ja": "1. IQスタンザは、「取得」または「設定」タイプのものであり、サーバはペイロードを修飾する名前空間を理解している場合、サーバーは、送信側エンティティに代わってスタンザを処理または送信エンティティに適切なエラーを返さなければなりません。 「ハンドル」の意味は予選名前空間のセマンティクスによって決定されるが、一般的にサーバがタイプ「結果」または「エラーの適切なIQスタンザを返すことで、「取得」または「設定」タイプのIQスタンザに応答しますサーバが送信側エンティティの裸JIDであるかのように」、応答。送信側エンティティタイプのIQスタンザを送信した場合、一例として、ペイロードが「：IQ：おしゃべり名簿」により修飾される「GET」の名前空間（[XMPP-IM]に記載されているように）、サーバは名簿を戻します名簿を要求された送信側エンティティの特定のリソースへの送信エンティティの裸JIDに関連付けられています。"
    },
    {
      "indent": 3,
      "text": "2. If the IQ stanza is of type \"get\" or \"set\" and the server does not understand the namespace that qualifies the payload, the server MUST return an error to the sending entity, which MUST be <service-unavailable/>.",
      "ja": "2. IQスタンザのタイプがある場合は、「取得」または「設定」とペイロードを修飾する名前空間を理解していないサーバは、サーバは、<サービス利用不能/>でなければならない送信側エンティティにエラーを返さなければなりません。"
    },
    {
      "indent": 3,
      "text": "3. If the IQ stanza is of type \"error\" or \"result\", the server MUST handle the error or result in accordance with the payload of the associated IQ stanza or type \"get\" or \"set\" (if there is no such associated stanza, the server MUST ignore the error or result stanza).",
      "ja": "3. IQスタンザは、タイプ「エラー」または「結果」である場合、サーバはエラーを処理または関連IQスタンザまたはタイプそのような存在しない場合（「セット」「GET」またはペイロードに従ってもたらさなければなりませんスタンザを関連付けられている、サーバーは）エラーを無視するか、スタンザをもたらさなければなりません。"
    },
    {
      "indent": 0,
      "text": "10.4. Remote Domain",
      "section_title": true,
      "ja": "10.4。リモートドメイン"
    },
    {
      "indent": 3,
      "text": "If the domainpart of the JID contained in the 'to' attribute does not match one of the configured FQDNs of the server, the server SHOULD attempt to route the stanza to the remote domain (subject to local service provisioning and security policies regarding inter-domain communication, since such communication is OPTIONAL for any given deployment). As described in the following sections, there are two possible cases.",
      "ja": "属性「から」に含まれるJIDのdomainpartは、サーバーの構成されたFQDNのものと一致しない場合は、サーバーは、ドメイン間に関するローカルサービスのプロビジョニングとセキュリティポリシーへのリモートドメイン（対象にルートスタンザをを試みる必要があります通信、そのような通信は、任意の所与の配備のためにオプションであるため）。以下のセクションで説明したように、二つの可能な場合があります。"
    },
    {
      "indent": 6,
      "text": "Security Warning: These rules apply only client-to-server streams. As described under Section 8.1.1.2, a server MUST NOT accept a stanza over a server-to-server stream if the domainpart of the JID in the 'to' attribute does not match an FQDN serviced by the receiving server.",
      "ja": "セキュリティ警告：これらのルールは唯一のクライアントからサーバーへのストリームを適用します。セクション8.1.1.2で説明したよう属性が受信サーバによってサービスFQDNと一致していない「から」中JIDのdomainpart場合、サーバは、サーバからサーバへのストリーム上でスタンザを受け入れてはいけません。"
    },
    {
      "indent": 0,
      "text": "10.4.1. Existing Stream",
      "section_title": true,
      "ja": "10.4.1。既存のストリーム"
    },
    {
      "indent": 3,
      "text": "If a server-to-server stream already exists between the two domains, the sender's server SHOULD attempt to route the stanza to the authoritative server for the remote domain over the existing stream.",
      "ja": "サーバー間のストリームはすでに2つのドメイン間に存在する場合は、送信者のサーバーは、既存のストリームを介してリモートドメインの権威サーバにルーティングするスタンザを試みるべきです。"
    },
    {
      "indent": 0,
      "text": "10.4.2. No Existing Stream",
      "section_title": true,
      "ja": "10.4.2。既存のストリームません"
    },
    {
      "indent": 3,
      "text": "If there exists no server-to-server stream between the two domains, the sender's server will proceed as follows:",
      "ja": "二つのドメイン間のサーバー間のストリームが存在しない場合は、次のように、送信者のサーバーが続行されます："
    },
    {
      "indent": 3,
      "text": "1. Resolve the FQDN of the remote domain (as described under Section 13.9.2).",
      "ja": "（セクション13.9.2で説明したように）1リモートドメインのFQDNを解決します。"
    },
    {
      "indent": 3,
      "text": "2. Negotiate a server-to-server stream between the two domains (as defined under Section 5 and Section 6).",
      "ja": "2.（第5及び第6の下に定義されるような）は、2つのドメイン間のサーバー間ストリームをネゴシエート。"
    },
    {
      "indent": 3,
      "text": "3. Route the stanza to the authoritative server for the remote domain over the newly established stream.",
      "ja": "3.ルート新設されたストリームを介してリモートドメインの権威サーバへのスタンザ。"
    },
    {
      "indent": 0,
      "text": "10.4.3. Error Handling",
      "section_title": true,
      "ja": "10.4.3。エラー処理"
    },
    {
      "indent": 3,
      "text": "If routing of a stanza to the intended recipient's server is unsuccessful, the sender's server MUST return an error to the sender. If resolution of the remote domain is unsuccessful, the stanza error MUST be <remote-server-not-found/> (Section 8.3.3.16). If resolution succeeds but streams cannot be negotiated, the stanza error MUST be <remote-server-timeout/> (Section 8.3.3.17).",
      "ja": "意図した受信者のサーバーへのスタンザのルーティングが失敗した場合、送信者のサーバーは、送信者にエラーを返さなければなりません。リモートドメインの解決に失敗した場合、スタンザ・エラーは、<リモートサーバー-見つからない/>（セクション8.3.3.16）でなければなりません。解決が成功してストリームをネゴシエートすることができない場合、スタンザエラーが<リモートサーバタイムアウト/>（セクション8.3.3.17）でなければなりません。"
    },
    {
      "indent": 3,
      "text": "If stream negotiation with the intended recipient's server is successful but the remote server cannot deliver the stanza to the recipient, the remote server MUST return an appropriate error to the sender by way of the sender's server.",
      "ja": "意図した受信者のサーバーとのストリームのネゴシエーションが成功したが、リモートサーバーが受信者にスタンザをお届けできない場合は、リモートサーバーは、送信者のサーバーを経由して送信者に適切なエラーを返さなければなりません。"
    },
    {
      "indent": 0,
      "text": "10.5. Local Domain",
      "section_title": true,
      "ja": "10.5。ローカルドメイン"
    },
    {
      "indent": 3,
      "text": "If the domainpart of the JID contained in the 'to' attribute matches one of the configured FQDNs of the server, the server MUST first determine if the FQDN is serviced by the server itself or by a specialized local service. If the latter, the server MUST route the stanza to that service. If the former, the server MUST proceed as follows. However, the server MUST NOT route or \"forward\" the stanza to another domain, because it is the server's responsibility to process all stanzas for which the domainpart of the 'to' address matches one of the configured FQDNs of the server (among other things, this helps to prevent looping).",
      "ja": "JIDのdomainpartが含まれている場合は「から」属性は、サーバーの構成されたFQDNのいずれかに一致してFQDNをサーバ自体でまたは専門のローカルサービスによってサービスされている場合、サーバは、最初に決定する必要があります。後者の場合は、サーバーMUSTルートそのサービスへのスタンザ。かつての場合は、次のように、サーバは続行しなければなりません。 「から」アドレスのdomainpartは、とりわけ（サーバーの構成されたFQDNのいずれかと一致するすべてのスタンザを処理するために、サーバの責任ですので、しかし、サーバーは、別のドメインへのルートまたは「前方」スタンザてはなりません、これは）ループを防ぐことができます。"
    },
    {
      "indent": 0,
      "text": "10.5.1. domainpart",
      "section_title": true,
      "ja": "10.5.1。 domainpart"
    },
    {
      "indent": 3,
      "text": "If the JID contained in the 'to' attribute is of the form <domainpart>, then the server MUST either (a) handle the stanza as appropriate for the stanza kind or (b) return an error stanza to the sender.",
      "ja": "属性「から」に含まれるJIDは、フォーム<domainpart>である場合、サーバーは、（a）はスタンザの種類に応じて適切にスタンザを扱うか、（b）の送信者にエラースタンザを返さなければならないのいずれか。"
    },
    {
      "indent": 0,
      "text": "10.5.2. domainpart/resourcepart",
      "section_title": true,
      "ja": "10.5.2。 domainpart / resourcepart"
    },
    {
      "indent": 3,
      "text": "If the JID contained in the 'to' attribute is of the form <domainpart/resourcepart>, then the server MUST either (a) handle the stanza as appropriate for the stanza kind or (b) return an error stanza to the sender.",
      "ja": "属性「」の中に含まれるJIDフォーム<domainpart / resourcepart>である場合、サーバは、（a）は、スタンザの種類に応じてスタンザを処理または（b）の送信者にエラースタンザを返す必要があります。"
    },
    {
      "indent": 0,
      "text": "10.5.3. localpart@domainpart",
      "section_title": true,
      "ja": "10.5.3。ローカル部@ domainpart"
    },
    {
      "indent": 3,
      "text": "An address of this type is normally associated with an account on the server. The following rules provide some general guidelines; more detailed rules in the context of instant messaging and presence applications are provided in [XMPP-IM].",
      "ja": "このタイプのアドレスは、通常、サーバー上のアカウントに関連付けられています。次の規則は、いくつかの一般的なガイドラインを提供すること。インスタントメッセージングとプレゼンスアプリケーションの文脈においてより詳細規則は[XMPP-IM]で提供されます。"
    },
    {
      "indent": 0,
      "text": "10.5.3.1. No Such User",
      "section_title": true,
      "ja": "10.5.3.1。ユーザーが存在しません"
    },
    {
      "indent": 3,
      "text": "If there is no local account associated with the <localpart@domainpart>, how the stanza is processed depends on the stanza type.",
      "ja": "<ローカル部@ domainpart>に関連付けられているローカルアカウントが存在しない場合、スタンザがどのように処理されるかスタンザの種類によって異なります。"
    },
    {
      "indent": 3,
      "text": "o For a message stanza, the server MUST either (a) silently ignore the stanza or (b) return a <service-unavailable/> stanza error (Section 8.3.3.19) to the sender.",
      "ja": "Oメッセージスタンザの場合、サーバは、（a）はサイレントスタンザを無視しなければならない、または（b）の送信者に、<サービス利用不可/>スタンザエラー（セクション8.3.3.19）を返します。"
    },
    {
      "indent": 3,
      "text": "o For a presence stanza, the server SHOULD ignore the stanza (or behave as described in [XMPP-IM]).",
      "ja": "Oプレゼンススタンザの場合、サーバはスタンザを無視（またはに記載されているように振る舞う[XMPP-IM]）すべきです。"
    },
    {
      "indent": 3,
      "text": "o For an IQ stanza, the server MUST return a <service-unavailable/> stanza error (Section 8.3.3.19) to the sender.",
      "ja": "O IQスタンザの場合、サーバーは、送信者へ<サービス利用できません/>スタンザ誤り（セクション8.3.3.19）を返さなければなりません。"
    },
    {
      "indent": 0,
      "text": "10.5.3.2. User Exists",
      "section_title": true,
      "ja": "10.5.3.2。ユーザーが存在します"
    },
    {
      "indent": 3,
      "text": "If the JID contained in the 'to' attribute is of the form <localpart@domainpart>, how the stanza is processed depends on the stanza type.",
      "ja": "属性「から」に含まれるJIDの形式である場合は、<ローカル部@ domainpart>、スタンザがどのように処理されるかスタンザの種類によって異なります。"
    },
    {
      "indent": 3,
      "text": "o For a message stanza, if there exists at least one connected resource for the account then the server SHOULD deliver it to at least one of the connected resources. If there exists no connected resource then the server MUST either (a) store the message offline for delivery when the account next has a connected resource or (b) return a <service-unavailable/> stanza error (Section 8.3.3.19).",
      "ja": "アカウントの少なくとも1つの接続されたリソースが存在する場合、Oメッセージスタンザの場合、サーバは接続されているリソースの少なくとも一つに配信すべきです。いかなる接続リソースが存在しない場合、アカウントは、次の接続リソースを有するか、または（b）の<サービス利用不可/>スタンザエラー（セクション8.3.3.19）を返す場合、サーバは、（a）は、配信のためにメッセージをオフラインで格納しなければなりません。"
    },
    {
      "indent": 3,
      "text": "o For a presence stanza, if there exists at least one connected resource that has sent initial presence (i.e., has a \"presence session\" as defined in [XMPP-IM]) then the server SHOULD deliver it to such resources. If there exists no connected resource then the server SHOULD ignore the stanza (or behave as described in [XMPP-IM]).",
      "ja": "プレゼンススタンザについてO、初期プレゼンスを送信した少なくとも一つの接続リソース（[XMPP-IM]で定義されるように、すなわち、「プレゼンス・セッション」を有する）が存在する場合、サーバはそのようなリソースに配信すべきです。いかなる接続リソースが存在しない場合、サーバはスタンザを無視すべきである（または[XMPP-IM]に記載されているように振る舞います）。"
    },
    {
      "indent": 3,
      "text": "o For an IQ stanza, the server MUST handle it directly on behalf of the intended recipient.",
      "ja": "O IQスタンザの場合、サーバーは、目的の受信者に代わってそれを直接処理する必要があります。"
    },
    {
      "indent": 0,
      "text": "10.5.4. localpart@domainpart/resourcepart",
      "section_title": true,
      "ja": "10.5.4。ローカル部分@ domainpart / resourcepart"
    },
    {
      "indent": 3,
      "text": "If the JID contained in the 'to' attribute is of the form <localpart@domainpart/resourcepart> and the user exists but there is no connected resource that exactly matches the full JID, the stanza SHOULD be processed as if the JID were of the form <localpart@domainpart> as described under Section 10.5.3.2.",
      "ja": "属性「から」に含まれるJIDは、<ローカル部分@ domainpart / resourcepart>であり、ユーザーが存在しますが、正確、完全なJIDと一致して何の接続リソースがないJIDがあったかのように、スタンザは、処理すべきかフォーム<ローカル部@ domainpart>セクション10.5.3.2で説明したよう。"
    },
    {
      "indent": 3,
      "text": "If the JID contained in the 'to' attribute is of the form <localpart@domainpart/resourcepart>, the user exists, and there is a connected resource that exactly matches the full JID, the server MUST deliver the stanza to that connected resource.",
      "ja": "JIDは、属性の形式は「に」<ローカル部分@ domainpart / resourcepart>に含まれている場合は、ユーザーが存在し、かつ正確に完全なJIDに一致する接続リソースがあると、サーバはその接続されているリソースへのスタンザを提供しなければなりません。"
    },
    {
      "indent": 0,
      "text": "11. XML Usage",
      "section_title": true,
      "ja": "11. XMLの使用"
    },
    {
      "indent": 0,
      "text": "11.1. XML Restrictions",
      "section_title": true,
      "ja": "11.1。 XMLの制限"
    },
    {
      "indent": 3,
      "text": "XMPP defines a class of data objects called XML streams as well as the behavior of computer programs that process XML streams. XMPP is an application profile or restricted form of the Extensible Markup Language [XML], and a complete XML stream (including start and end stream tags) is a conforming XML document.",
      "ja": "XMPPは、XMLと呼ばれるデータオブジェクトのクラスは、XMLストリームを処理するコンピュータプログラムの動作だけでなく、ストリームを定義します。 XMPPは、アプリケーションプロファイルまたは拡張マークアップ言語[XML]の制限された形であり、そして（開始および終了ストリームタグを含む）完全なXMLストリームが準拠するXMLドキュメントです。"
    },
    {
      "indent": 3,
      "text": "However, XMPP does not deal with XML documents but with XML streams. Because XMPP does not require the parsing of arbitrary and complete XML documents, there is no requirement that XMPP needs to support the full feature set of [XML]. Furthermore, XMPP uses XML to define protocol data structures and extensions for the purpose of structured interactions between network entities and therefore adheres to the recommendations provided in [XML-GUIDE] regarding restrictions on the use of XML in IETF protocols. As a result, the following features of XML are prohibited in XMPP:",
      "ja": "しかし、XMPPは、XML文書ではなくXMLストリームを扱っていません。 XMPPは任意と、完全なXML文書の構文解析を必要としないので、XMPPは[XML]の完全な機能セットをサポートする必要がある必要はありません。さらに、XMPPは、IETFプロトコルにおけるXMLの使用制限に関する[XML-GUIDE]内に設けられた勧告に準拠し、したがってネットワークエンティティとの間の構造的相互作用のためにプロトコル・データ構造および拡張を定義するためにXMLを使用して。その結果、XMLの次の機能は、XMPPで禁止されています。"
    },
    {
      "indent": 3,
      "text": "o comments (as defined in Section 2.5 of [XML])",
      "ja": "Oコメント（[XML]のセクション2.5で定義されるように）"
    },
    {
      "indent": 3,
      "text": "o processing instructions (Section 2.6 therein)",
      "ja": "O処理手順（その中の2.6節）"
    },
    {
      "indent": 3,
      "text": "o internal or external DTD subsets (Section 2.8 therein)",
      "ja": "O内部または外部DTDサブセット（その中の2.8節）"
    },
    {
      "indent": 3,
      "text": "o internal or external entity references (Section 4.2 therein) with the exception of the predefined entities (Section 4.6 therein)",
      "ja": "O予め定義されたエンティティ（その中の4.6節）を除いて、内部または外部のエンティティ参照（その中の4.2節）"
    },
    {
      "indent": 3,
      "text": "An XMPP implementation MUST behave as follows with regard to these features:",
      "ja": "これらの機能に関連して、以下のようにXMPPの実装は振る舞う必要があります："
    },
    {
      "indent": 3,
      "text": "1. An XMPP implementation MUST NOT inject characters matching such features into an XML stream.",
      "ja": "1.アンXMPPの実装では、XMLストリームにこのような特徴に一致する文字を注入してはなりません。"
    },
    {
      "indent": 3,
      "text": "2. If an XMPP implementation receives characters matching such features over an XML stream, it MUST close the stream with a stream error, which SHOULD be <restricted-xml/> (Section 4.9.3.18), although some existing implementations send <bad-format/> (Section 4.9.3.1) instead.",
      "ja": "2. XMPP実装がXMLストリーム上にそのような特徴に一致する文字を受信した場合、いくつかの既存の実装を送信するが、それはbad- <、<制限-XML />（セクション4.9.3.18）であるべきであるストリームのエラーでストリームを閉じる必要がありますフォーマットの代わりに/>（セクション4.9.3.1）。"
    },
    {
      "indent": 0,
      "text": "11.2. XML Namespace Names and Prefixes",
      "section_title": true,
      "ja": "11.2。 XML名前空間名と接頭辞"
    },
    {
      "indent": 3,
      "text": "XML namespaces (see [XML-NAMES]) are used within XMPP streams to create strict boundaries of data ownership. The basic function of namespaces is to separate different vocabularies of XML elements that are structurally mixed together. Ensuring that XMPP streams are namespace-aware enables any allowable XML to be structurally mixed with any data element within XMPP. XMPP-specific rules for XML namespace names and prefixes are defined under Section 4.8 for XML streams and Section 8.4 for XML stanzas.",
      "ja": "XML名前空間は、（[XML-NAMES]参照）XMPP内で使用されるデータの所有権の厳密な境界を作成するストリーム。名前空間の基本的な機能は、構造的に一緒に混合されるXML要素の異なる語彙を分離することです。 XMPPストリームは名前空間を認識していることを保証することは、任意の許容XMLは、XMPP内の任意のデータ要素と構造的に混合することができます。 XML名前空間の名前とプレフィックスのXMPP固有のルールは、XMLストリームおよびXMLスタンザについては、セクション8.4のためのセクション4.8の下に定義されています。"
    },
    {
      "indent": 0,
      "text": "11.3. Well-Formedness",
      "section_title": true,
      "ja": "11.3。整形式"
    },
    {
      "indent": 3,
      "text": "In XML, there are two varieties of well-formedness:",
      "ja": "XMLでは、整形式の2種類があります。"
    },
    {
      "indent": 3,
      "text": "o \"XML-well-formedness\" in accordance with the definition of \"well-formed\" from Section 2.1 of [XML].",
      "ja": "[XML]のセクション2.1から「整形式」の定義に応じてO「XML-整形式」。"
    },
    {
      "indent": 3,
      "text": "o \"Namespace-well-formedness\" in accordance with the definition of \"namespace-well-formed\" from Section 7 of [XML-NAMES].",
      "ja": "「名前空間整形式」[XML-NAMES]のセクション7からの定義に従ってO「名前空間整形式」。"
    },
    {
      "indent": 3,
      "text": "The following rules apply:",
      "ja": "次の規則が適用されます。"
    },
    {
      "indent": 3,
      "text": "1. An XMPP entity MUST NOT generate data that is not XML-well-formed.",
      "ja": "1.アンXMPP実体はXML-よく形成されていないデータを生成してはなりません。"
    },
    {
      "indent": 3,
      "text": "2. An XMPP entity MUST NOT accept data that is not XML-well-formed; instead it MUST close the stream over which the data was received with a <not-well-formed/> stream error (Section 4.9.3.13).",
      "ja": "2.アンXMPP実体はXML-整形式でないデータを受け入れてはいけません。代わりに、データは、<未整形/>ストリームエラー（セクション4.9.3.13）で受信された先のストリームを閉じる必要があります。"
    },
    {
      "indent": 3,
      "text": "3. An XMPP entity MUST NOT generate data that is not namespace-well-formed.",
      "ja": "3.アンXMPPエンティティは、名前空間整形式でないデータを生成してはなりません。"
    },
    {
      "indent": 3,
      "text": "4. An XMPP entity MUST NOT accept data that is not namespace-well-formed (in particular, an XMPP server MUST NOT route or deliver data that is not namespace-well-formed); instead it MUST return either a <not-acceptable/> stanza error (Section 8.3.3.9) or close the stream with a <not-well-formed/> stream error (Section 4.9.3.13), where it is preferable to close the stream with a stream error because accepting such data can open an entity to certain denial-of-service attacks.",
      "ja": "4.アンXMPPエンティティは、名前空間、よく形成されていない（具体的には、XMPPサーバはルートNOT MUSTまたは名前空間-よく形成されていないデータを配信する）データを受け入れてはいけません。代わりに、閉鎖することが望ましい場合、<的に許容されない/>スタンザエラー（セクション8.3.3.9）のいずれかを返すか、<未整形/>ストリームエラー（セクション4.9.3.13）でストリームを閉じる必要がありますそのようなデータを受け入れることは、特定のサービス拒否攻撃のエンティティを開くことができるので、ストリームエラーでストリーム。"
    },
    {
      "indent": 6,
      "text": "Interoperability Note: Because these restrictions were underspecified in [RFC3920], it is possible that implementations based on that specification will send data that does not comply with these restrictions.",
      "ja": "相互運用性の注：これらの制限は、[RFC3920]でunderspecifiedされたので、それはその仕様に基づいて実装がこれらの制限に準拠していないデータを送信することも可能です。"
    },
    {
      "indent": 0,
      "text": "11.4. Validation",
      "section_title": true,
      "ja": "11.4。バリデーション"
    },
    {
      "indent": 3,
      "text": "A server is not responsible for ensuring that XML data delivered to a connected client or routed to a peer server is valid, in accordance with the definition of \"valid\" provided in Section 2.8 of [XML]. An implementation MAY choose to accept or send only data that has been explicitly validated against the schemas provided in this document, but such behavior is OPTIONAL. Clients are advised not to rely on the ability to send data that does not conform to the schemas, and SHOULD ignore any non-conformant elements or attributes on the incoming XML stream.",
      "ja": "サーバーは、そのXMLデータ[XML]のセクション2.8で提供「有効」の定義に従って、有効なピア・サーバーに接続されたクライアントに配信またはルーティングを確保するための責任を負いません。実装は受け入れるか、明示的にこのドキュメントに記載されているスキーマに対して検証されたデータのみを送信することを選択することができるが、そのような行動はオプションです。クライアントは、スキーマに準拠していないデータを送信する機能に依存しないことをお勧めされ、着信XMLストリーム上の任意の非準拠の要素や属性を無視します。"
    },
    {
      "indent": 6,
      "text": "Informational Note: The terms \"valid\" and \"well-formed\" are distinct in XML.",
      "ja": "情報注：用語「有効」と「整形」XMLで異なっています。"
    },
    {
      "indent": 0,
      "text": "11.5. Inclusion of XML Declaration",
      "section_title": true,
      "ja": "11.5。 XML宣言を含めます"
    },
    {
      "indent": 3,
      "text": "Before sending a stream header, an implementation SHOULD send an XML declaration (matching the \"XMLDecl\" production from [XML]). Applications MUST follow the rules provided in [XML] regarding the format of the XML declaration and the circumstances under which the XML declaration is included.",
      "ja": "ストリームヘッダを送信する前に、実装は、（[XML]から「XMLDeclが」生産と一致）XML宣言を送信すべきです。アプリケーションは、XML宣言の形式とXML宣言が含まれれる状況について[XML]に設けられたルールに従わなければなりません。"
    },
    {
      "indent": 3,
      "text": "Because external markup declarations are prohibited in XMPP (as described under Section 11.1), the standalone document declaration (matching the \"SDDecl\" production from [XML]) would have no meaning and therefore MUST NOT be included in an XML declaration sent over an XML stream. If an XMPP entity receives an XML declaration containing a standalone document declaration set to a value of \"no\", the entity MUST either ignore the standalone document declaration or close the stream with a stream error, which SHOULD be <restricted-xml/> (Section 4.9.3.18).",
      "ja": "（項11.1で説明したように）外部マークアップ宣言は、XMPPで禁止されているので、（[XML]から「SDDecl」の生産をマッチング）、スタンドアロン文書宣言は意味を持たないだろうので、XMLを介して送信されるXML宣言に含まれてはいけませんストリーム。 XMPPエンティティが「NO」の値に設定され、スタンドアロン文書宣言を含むXML宣言を受信した場合、エンティティが（<制限-XML />すべき、スタンドアロン文書宣言を無視するか、ストリームエラーでストリームを閉じる必要がありますいずれかセクション4.9.3.18）。"
    },
    {
      "indent": 0,
      "text": "11.6. Character Encoding",
      "section_title": true,
      "ja": "11.6。文字コード"
    },
    {
      "indent": 3,
      "text": "Implementations MUST support the UTF-8 transformation of Universal Character Set [UCS2] characters, as needed for conformance with [CHARSETS] and as defined in [UTF-8]. Implementations MUST NOT attempt to use any other encoding. If one party to an XML stream detects that the other party has attempted to send XML data with an encoding other than UTF-8, it MUST close the stream with a stream error, which SHOULD be <unsupported-encoding/> (Section 4.9.3.22), although some existing implementations send <bad-format/> (Section 4.9.3.1) instead.",
      "ja": "【CHARSETS]とし、[UTF-8]で定義されるように適合するために必要な実装は、ユニバーサル・キャラクター[UCS2]設定文字のUTF-8の変換をサポートしなければなりません。実装は他のエンコーディングを使用するのを試みてはいけません。 XMLストリームへの一方の当事者が他の当事者がUTF-8以外のエンコーディングでXMLデータを送信しようとしたことを検出した場合、それは、<サポートされていないエンコード/>（セクション4.9であるべき、ストリームエラーでストリームを閉じる必要があります。 3.22）、いくつかの既存の実装ではなく、<悪いフォーマット/>（セクション4.9.3.1）を送信しません。"
    },
    {
      "indent": 3,
      "text": "Because it is mandatory for an XMPP implementation to support all and only the UTF-8 encoding and because UTF-8 always has the same byte order, an implementation MUST NOT send a byte order mark (\"BOM\") at the beginning of the data stream. If an entity receives the [UNICODE] character U+FEFF anywhere in an XML stream (including as the first character of the stream), it MUST interpret that character as a zero width no-break space, not as a byte order mark.",
      "ja": "それがすべてとのみUTF-8エンコーディングをサポートするために、XMPPの実装のために必須であり、UTF-8が常に同じバイト順序を持っているので、実装は、データの先頭にバイトオーダーマーク（「BOM」）を送ってはいけませんのでストリーム。エンティティは、（ストリームの最初の文字として含む）XMLストリーム内の任意の場所に[UNICODE]の文字U + FEFFを受信した場合、それはゼロ幅ノーブレークスペースではなく、バイトオーダーマークとしてその文字を解釈する必要があります。"
    },
    {
      "indent": 0,
      "text": "11.7. Whitespace",
      "section_title": true,
      "ja": "11.7。空白"
    },
    {
      "indent": 3,
      "text": "Except where explicitly disallowed (e.g., during TLS negotiation (Section 5) and SASL negotiation (Section 6)), either entity MAY send whitespace as separators between XML stanzas or between any other first-level elements sent over the stream. One common use for sending such whitespace is explained under Section 4.4.",
      "ja": "明示的に、（TLSネゴシエーション（セクション5）とSASLネゴシエーション（第6節）中に、例えば）許可されない場合を除き、いずれかのエンティティは、XMLスタンザ間又はストリームを介して送信される任意の他の第一レベルの要素間のセパレータとして空白を送信することができます。そのような空白を送信するための一般的な用途の1つは、セクション4.4の下で説明されています。"
    },
    {
      "indent": 0,
      "text": "11.8. XML Versions",
      "section_title": true,
      "ja": "11.8。 XMLのバージョン"
    },
    {
      "indent": 3,
      "text": "XMPP is an application profile of XML 1.0. A future version of XMPP might be defined in terms of higher versions of XML, but this specification defines XMPP only in terms of XML 1.0.",
      "ja": "XMPPは、XML 1.0のアプリケーションプロファイルです。 XMPPの将来のバージョンでは、XMLの高いバージョンで定義されるかもしれないが、この仕様はXML 1.0の面でXMPPを定義します。"
    },
    {
      "indent": 0,
      "text": "12. Internationalization Considerations",
      "section_title": true,
      "ja": "12.国際化に関する注意事項"
    },
    {
      "indent": 3,
      "text": "As specified under Section 11.6, XML streams MUST be encoded in UTF-8.",
      "ja": "11.6節の下に指定されているように、XMLストリームは、UTF-8でエンコードされなければなりません。"
    },
    {
      "indent": 3,
      "text": "As specified under Section 4.7, an XML stream SHOULD include an 'xml: lang' attribute specifying the default language for any XML character data that is intended to be presented to a human user. As specified under Section 8.1.5, an XML stanza SHOULD include an 'xml:lang' attribute if the stanza contains XML character data that is intended to be presented to a human user. A server SHOULD apply the default 'xml:lang' attribute to stanzas it routes or delivers on behalf of connected entities, and MUST NOT modify or delete 'xml:lang' attributes on stanzas it receives from other entities.",
      "ja": "属性人間のユーザに提示されることを意図された任意のXML文字データのデフォルトの言語を指定する：4.7節の下に指定されているように、XMLストリームは、「LANGのxml」を含むべきです。スタンザは、人間のユーザに提示されることを意図されたXML文字データが含まれている場合、属性：セクション8.1.5の下で規定されているように、XMLスタンザは「LANGのxml」を含むべきです。それがルートスタンザに属性または接続されたエンティティに代わって配信し、変更または削除しないようにしてください：サーバは、デフォルトの「LANGのxml」を適用すべきである「XMLを：LANG」が他のエンティティから受け取るスタンザの属性。"
    },
    {
      "indent": 3,
      "text": "Internationalization of XMPP addresses is specified in [XMPP-ADDR].",
      "ja": "XMPPアドレスの国際化は、[XMPP-ADDR]で指定されています。"
    },
    {
      "indent": 0,
      "text": "13. Security Considerations",
      "section_title": true,
      "ja": "13.セキュリティの考慮事項"
    },
    {
      "indent": 0,
      "text": "13.1. Fundamentals",
      "section_title": true,
      "ja": "13.1。基礎編"
    },
    {
      "indent": 3,
      "text": "XMPP technologies are typically deployed using a decentralized client-server architecture. As a result, several paths are possible when two XMPP entities need to communicate:",
      "ja": "XMPP技術は、一般的に、分散型クライアントサーバアーキテクチャを使用して展開されています。 2つのXMPP実体が通信する必要がある場合その結果、いくつかの経路が考えられます。"
    },
    {
      "indent": 3,
      "text": "1. Both entities are servers. In this case, the entities can establish a direct server-to-server stream between themselves.",
      "ja": "1.両方のエンティティはサーバです。この場合、エンティティは、それらの間の直接のサーバー間のストリームを確立することができます。"
    },
    {
      "indent": 3,
      "text": "2. One entity is a server and the other entity is a client whose account is hosted on that server. In this case, the entities can establish a direct client-to-server stream between themselves.",
      "ja": "2.一つのエンティティはサーバであり、他のエンティティは、そのアカウント、そのサーバー上でホストされているクライアントです。この場合、エンティティは、それらの間の直接のクライアントからサーバーへのストリームを確立することができます。"
    },
    {
      "indent": 3,
      "text": "3. Both entities are clients whose accounts are hosted on the same server. In this case, the entities cannot establish a direct stream between themselves, but there is only one intermediate entity between them, whose policies they might understand and in which they might have some level of trust (e.g., the server might require the use of Transport Layer Security for all client connections).",
      "ja": "3.両方のエンティティは、アカウントが同じサーバーでホストされているクライアントです。この場合、そのポリシー彼らが理解可能性があり、それらが信頼のいくつかのレベルを持っているかもしれません（例えば、サーバは交通の使用を必要とするかもしれない、実体は自身との間に直接的な流れを確立することはできませんが、それらの間の唯一の中間エンティティがありますすべてのクライアント接続のためのレイヤーセキュリティ）。"
    },
    {
      "indent": 3,
      "text": "4. Both entities are clients but their accounts are hosted on different servers. In this case, the entities cannot establish a direct stream between themselves and there are two intermediate entities between them; each client might have some trust in the server that hosts its account but might know nothing about the policies of the server to which the other client connects.",
      "ja": "4.両方のエンティティはクライアントであるが、そのアカウントが別のサーバーでホストされています。この場合、エンティティは、自身との間に直接的な流れを確立することはできませんし、それらの間に2つの中間エンティティがあります。各クライアントは、そのアカウントをホストするサーバーでいくつかの信頼を持っているかもしれませんが、他のクライアントが接続するサーバーのポリシーについて何も知らないかもしれません。"
    },
    {
      "indent": 3,
      "text": "This specification covers only the security of a direct XML stream between two servers or between a client and a server (cases #1 and #2), where each stream can be considered a single \"hop\" along a communication path. The goal of security for a multi-hop path (cases #3 and #4), although very desirable, is out of scope for this specification.",
      "ja": "この仕様は、2つのサーバー間の各ストリームは、単一の通信経路に沿って「ホップ」と考えることができ、クライアントとサーバー（ケース＃1及び＃2）、との間の直接的なXMLストリームの唯一のセキュリティをカバーします。マルチホップ経路（ケース＃3、＃4）のセキュリティの目標は、非常に望ましいが、本明細書の範囲外です。"
    },
    {
      "indent": 3,
      "text": "In accordance with [SEC-GUIDE], this specification covers communication security (confidentiality, data integrity, and peer entity authentication), non-repudiation, and systems security (unauthorized usage, inappropriate usage, and denial of service). We also discuss common security issues such as information leaks, firewalls, and directory harvesting, as well as best practices related to the reuse of technologies such as base 64, DNS, cryptographic hash functions, SASL, TLS, UTF-8, and XML.",
      "ja": "[SEC-GUIDE]によれば、本明細書では、通信のセキュリティ（機密性、データ完全性、及びピアエンティティ認証）、否認防止、およびシステムのセキュリティ（不正使用、不適切な使用、及びサービス拒否）を覆っています。我々はまた、このような情報漏洩、ファイアウォール、およびディレクトリハーベスト、ならびにベース64、DNS、暗号学的ハッシュ関数、SASL、TLS、UTF-8、およびXMLなどの技術の再利用に関連するベストプラクティスなどの一般的なセキュリティの問題を議論します。"
    },
    {
      "indent": 0,
      "text": "13.2. Threat Model",
      "section_title": true,
      "ja": "13.2。脅威モデル"
    },
    {
      "indent": 3,
      "text": "The threat model for XMPP is in essence the standard \"Internet Threat Model\" described in [SEC-GUIDE]. Attackers are assumed to be interested in and capable of launching the following attacks against unprotected XMPP systems:",
      "ja": "XMPPのための脅威モデルは、本質的には、[SEC-GUIDE]に記載された標準的な「インターネット脅威モデル」です。攻撃者は保護されていないXMPPシステムに対して、次の攻撃をすることに興味と可能であると想定されています。"
    },
    {
      "indent": 3,
      "text": "o Eavesdropping",
      "ja": "盗聴O"
    },
    {
      "indent": 3,
      "text": "o Sniffing passwords",
      "ja": "Oパスワードを盗聴"
    },
    {
      "indent": 3,
      "text": "o Breaking passwords through dictionary attacks o Discovering usernames through directory harvesting attacks",
      "ja": "ディレクトリハーベスト攻撃を通じてユーザ名を発見oを辞書攻撃によってパスワードを破るO"
    },
    {
      "indent": 3,
      "text": "o Replaying, inserting, deleting, or modifying stanzas",
      "ja": "Oリプレイ、挿入、削除、または変更スタンザ"
    },
    {
      "indent": 3,
      "text": "o Spoofing users",
      "ja": "Oなりすましユーザー"
    },
    {
      "indent": 3,
      "text": "o Gaining unauthorized entry to a server or account",
      "ja": "Oサーバーまたはアカウントへの不正侵入を獲得"
    },
    {
      "indent": 3,
      "text": "o Using a server or account inappropriately",
      "ja": "不適切サーバーまたはアカウントを使用してO"
    },
    {
      "indent": 3,
      "text": "o Denying service to other entities",
      "ja": "他のエンティティへのサービス拒否攻撃O"
    },
    {
      "indent": 3,
      "text": "o Subverting communication streams through man-in-the-middle attacks",
      "ja": "man-in-the-middle攻撃を介した通信ストリームを破壊するO"
    },
    {
      "indent": 3,
      "text": "o Gaining control over on-path servers",
      "ja": "上のパスのサーバーコントロールの上に獲得O"
    },
    {
      "indent": 3,
      "text": "Where appropriate, the following sections describe methods for protecting against these threats.",
      "ja": "適切な場合には、次のセクションでは、これらの脅威から保護するための方法について説明します。"
    },
    {
      "indent": 0,
      "text": "13.3. Order of Layers",
      "section_title": true,
      "ja": "13.3。層の順序"
    },
    {
      "indent": 3,
      "text": "The order of layers in which protocols MUST be stacked is as follows:",
      "ja": "次のようなプロトコルが積層されなければならない層の順序であります："
    },
    {
      "indent": 3,
      "text": "1. TCP",
      "section_title": true,
      "ja": "1. TCP"
    },
    {
      "indent": 3,
      "text": "2. TLS",
      "section_title": true,
      "ja": "2. TLS"
    },
    {
      "indent": 3,
      "text": "3. SASL",
      "section_title": true,
      "ja": "3. SASL"
    },
    {
      "indent": 3,
      "text": "4. XMPP",
      "section_title": true,
      "ja": "4. XMPP"
    },
    {
      "indent": 3,
      "text": "This order has important security implications, as described throughout these security considerations.",
      "ja": "これらのセキュリティの考慮を通じて説明したようにこの順序は、重要なセキュリティ意味を持っています。"
    },
    {
      "indent": 3,
      "text": "Within XMPP, XML stanzas are further ordered on top of XML streams, as described under Section 4.",
      "ja": "セクション4で説明したようにXMPP内、XMLスタンザはさらに、XMLストリームの上部に順序付けられます。"
    },
    {
      "indent": 0,
      "text": "13.4. Confidentiality and Integrity",
      "section_title": true,
      "ja": "13.4。機密性と完全性"
    },
    {
      "indent": 3,
      "text": "The use of Transport Layer Security (TLS) with appropriate ciphersuites provides a reliable mechanism to ensure the confidentiality and integrity of data exchanged between a client and a server or between two servers. Therefore, TLS can help to protect against eavesdropping, password sniffing, man-in-the-middle attacks, and stanza replays, insertion, deletion, and modification over an XML stream. XMPP clients and servers MUST support TLS as defined under Section 5.",
      "ja": "適切な暗号スイートとトランスポート層セキュリティ（TLS）を使用すると、クライアントとサーバー間または2つのサーバー間で交換されるデータの機密性と整合性を確保するための信頼性の高いメカニズムを提供します。そのため、TLSは、XMLストリーム上での盗聴、パスワードスニッフィング、man-in-the-middle攻撃、およびスタンザリプレイ、挿入、削除、および変更から保護するのに役立ちます。第5節の下で定義されているXMPPクライアントとサーバはTLSをサポートしなければなりません。"
    },
    {
      "indent": 6,
      "text": "Informational Note: The confidentiality and integrity of a stream can be protected by methods other than TLS, e.g., by means of a SASL mechanism that involves negotiation of a security layer.",
      "ja": "情報注：ストリームの機密性と完全性は、セキュリティ層の交渉を含むSASL機構によって、例えば、TLS以外の方法で保護することができます。"
    },
    {
      "indent": 6,
      "text": "Security Warning: The use of TLS in XMPP applies to a single stream. Because XMPP is typically deployed using a distributed client-server architecture (as explained under Section 2.5), a stanza might traverse multiple streams, and not all of those streams might be TLS-protected. For example, a stanza sent from a client with a session at one server (e.g., <romeo@example.net/orchard>) and intended for delivery to a client with a session at another server (e.g., <juliet@example.com/balcony>) will traverse three streams: (1) the stream from the sender's client to its server, (2) the stream from the sender's server to the recipient's server, and (3) the stream from the recipient's server to the recipient's client. Furthermore, the stanza will be processed as cleartext within the sender's server and the recipient's server. Therefore, even if the stream from the sender's client to its server is protected, the confidentiality and integrity of a stanza sent over that protected stream cannot be guaranteed when the stanza is processed by the sender's server, sent from the sender's server to the recipient's server, processed by the recipient's server, or sent from the recipient's server to the recipient's client. Only a robust technology for end-to-end encryption could ensure the confidentiality and integrity of a stanza as it traverses all of the \"hops\" along a communication path (e.g., a technology that meets the requirements defined in [E2E-REQS]). Unfortunately, the XMPP community has so far failed to produce an end-to-end encryption technology that might be suitable for widespread implementation and deployment, and definition of such a technology is out of scope for this document.",
      "ja": "セキュリティ警告：XMPPでのTLSの使用は、単一のストリームに適用されます。 （セクション2.5の下で説明したように）XMPPは、典型的には、分散型クライアント - サーバアーキテクチャを使用して展開されているので、スタンザはTLSで保護されたかもしれない、これらのストリームの全てを複数のストリームを横断し、しないかもしれません。例えば、一つのサーバでのセッションで、クライアントから送信されたスタンザ（たとえば、<romeo@example.net/orchard>）と、別のサーバ（例えば、<juliet@example.comでセッションを使用してクライアントに配信するためのもの3つのストリームを横断する/バルコニー>）：（1）送信者のクライアントからのストリームをそのサーバに、（2）受信者のクライアントへの受信者のサーバーから送信者、受信者のサーバーにサーバー、および（3）ストリームからのストリーム。さらに、スタンザは、送信者のサーバーと受信者のサーバー内でクリアテキストとして処理されます。そのため、そのサーバへの送信者のクライアントからのストリームが保護されていても、スタンザの機密性と完全性が保護されたストリームはスタンザは、送信者のサーバで処理されている場合、保証受信者のサーバーに送信者のサーバーから送信できないことを介して送信さ、受信者のサーバーが処理し、または受信者のクライアントに受信者のサーバーから送信されます。それは、通信経路に沿って「ホップ」の全てを横断するときに、エンドツーエンドの暗号化のための唯一の強力な技術は（例えば、[E2E-REQS]で定義された要件を満たしている技術）スタンザの機密性と完全性を保証することができ。残念ながら、XMPPコミュニティは、これまで広範囲の実装と展開に適したかもしれない、エンドツーエンドの暗号化技術を生産するために失敗した、とこのような技術の定義は、この文書の範囲外です。"
    },
    {
      "indent": 0,
      "text": "13.5. Peer Entity Authentication",
      "section_title": true,
      "ja": "13.5。エンティティ認証ピア"
    },
    {
      "indent": 3,
      "text": "The use of the Simple Authentication and Security Layer (SASL) for authentication provides a reliable mechanism for peer entity authentication. Therefore, SASL helps to protect against user spoofing, unauthorized usage, and man-in-the middle attacks. XMPP clients and servers MUST support SASL as defined under Section 6.",
      "ja": "認証のための簡易認証セキュリティー層（SASL）の使用は、ピアエンティティ認証のための信頼性の高いメカニズムを提供します。したがって、SASLは、ユーザーのなりすまし、不正使用、およびマン・イン・ミドル攻撃から保護するのに役立ちます。第6節の下で定義されているXMPPクライアントとサーバは、SASLをサポートしなければなりません。"
    },
    {
      "indent": 0,
      "text": "13.6. Strong Security",
      "section_title": true,
      "ja": "13.6。強固なセキュリティ"
    },
    {
      "indent": 3,
      "text": "[STRONGSEC] defines \"strong security\" and its importance to communication over the Internet. For the purpose of XMPP communication over client-to-server and server-to-server streams, the term \"strong security\" refers to the use of security technologies that provide both mutual authentication and integrity checking (e.g., a combination of TLS encryption and SASL authentication using appropriate SASL mechanisms).",
      "ja": "[STRONGSEC]インターネットを介した通信に「強力なセキュリティ」とその重要性を定義します。クライアントからサーバーへとサーバー間のストリームを超えるXMPP通信の目的のために、用語「強力なセキュリティは、」チェック相互認証と整合性の両方を提供するセキュリティ技術（例えば、TLS暗号化の組み合わせの使用を意味し、適切なSASL機構を使用してSASL認証）。"
    },
    {
      "indent": 3,
      "text": "Implementations MUST support strong security. Service provisioning SHOULD use strong security.",
      "ja": "実装は、強力なセキュリティをサポートしなければなりません。サービスプロビジョニングは、強力なセキュリティを使用すべきです。"
    },
    {
      "indent": 3,
      "text": "An implementation SHOULD make it possible for an end user or service administrator to provision a deployment with specific trust anchors for the certificate presented by a connecting entity (either client or server); when an application is thus provisioned, it MUST NOT use a generic PKI trust store to authenticate the connecting entity. More detailed rules and guidelines regarding certificate validation are provided in the next section.",
      "ja": "実装が提供するエンド・ユーザーまたはサービス管理者の接続エンティティ（クライアントまたはサーバーのいずれか）が提示した証明書のための特定のトラストアンカーと展開のためのことを可能にするべきです。アプリケーションがこのようにプロビジョニングされたとき、それは接続実体を認証するために、一般的なPKIのトラストストアを使用してはなりません。証明書の検証に関するより詳細なルールとガイドラインについては、次のセクションで提供されています。"
    },
    {
      "indent": 3,
      "text": "The initial stream and the response stream MUST be secured separately, although security in both directions MAY be established via mechanisms that provide mutual authentication.",
      "ja": "両方向のセキュリティが相互認証を提供するメカニズムを介して確立することができるが、最初のストリームと応答ストリームは、別々に確保しなければなりません。"
    },
    {
      "indent": 0,
      "text": "13.7. Certificates",
      "section_title": true,
      "ja": "13.7。証明書"
    },
    {
      "indent": 3,
      "text": "Channel encryption of an XML stream using Transport Layer Security as described under Section 5, and in some cases also authentication as described under Section 6, is commonly based on a PKIX certificate presented by the receiving entity (or, in the case of mutual certificate authentication, both the receiving entity and the initiating entity). This section describes best practices regarding the generation of PKIX certificates to be presented by XMPP entities and the verification of PKIX certificates presented by XMPP entities.",
      "ja": "トランスポート層セキュリティを使用してXMLストリームのチャネルの暗号化は、第5節で説明し、いくつかのケースでも、第6節で説明したように、一般的に相互証明書認証の場合には、受信エンティティが提示PKIX証明書に基づいて（あるいはされる認証など、受信エンティティと開始エンティティの両方）。このセクションでは、XMPPエンティティによって提示されるPKIX証明書の生成とXMPPエンティティによって提示PKIX証明書の検証に関するベストプラクティスについて説明します。"
    },
    {
      "indent": 3,
      "text": "In general, the following sections rely on and extend the rules and guidelines provided in the [PKIX] profile of [X509], and in [TLS-CERTS]. The reader is referred to those specifications for a detailed understanding of PKIX certificates and their use in TLS.",
      "ja": "一般的に、以下のセクションでは、に依存し、[X509]の[PKIX]プロフィールに設けられたルールおよびガイドラインを拡張し、そしてにおける[TLS-CERTS]。読者は、PKIX証明書とTLSでの使用を詳細に理解するために、これらの仕様に呼ばれています。"
    },
    {
      "indent": 0,
      "text": "13.7.1. Certificate Generation",
      "section_title": true,
      "ja": "13.7.1。証明書の生成"
    },
    {
      "indent": 0,
      "text": "13.7.1.1. General Considerations",
      "section_title": true,
      "ja": "13.7.1.1。概論"
    },
    {
      "indent": 3,
      "text": "The following rules apply to end entity public key certificates that are issued to XMPP servers or clients:",
      "ja": "次の規則がXMPPサーバーまたはクライアントに発行されたエンティティの公開鍵証明書を終了するには適用されます。"
    },
    {
      "indent": 3,
      "text": "1. The certificate MUST conform to [PKIX].",
      "section_title": true,
      "ja": "1.証明書は、[PKIX]に従わなければなりません。"
    },
    {
      "indent": 3,
      "text": "2. The certificate MUST NOT contain a basicConstraints extension with the cA boolean set to TRUE.",
      "ja": "2.証明書がTRUEに設定されたCAブールでbasicConstraintsの拡張子を含めることはできません。"
    },
    {
      "indent": 3,
      "text": "3. The subject field MUST NOT be null.",
      "section_title": true,
      "ja": "3.サブジェクトフィールドはNULLであってはなりません。"
    },
    {
      "indent": 3,
      "text": "4. The signatureAlgorithm SHOULD be the PKCS #1 version 1.5 signature algorithm with SHA-256 as defined by [PKIX-ALGO], or a stronger algorithm if available.",
      "ja": "可能な場合は[PKIX-ALGO]、またはより強力なアルゴリズムによって定義されるような4のsignatureAlgorithmはSHA-256とPKCS＃1バージョン1.5署名アルゴリズムであるべきです。"
    },
    {
      "indent": 3,
      "text": "5. The certificate SHOULD include an Authority Information Access (AIA) extension that specifies the address of an Online Certificate Status Protocol [OCSP] responder (if not, a relying party would need to fall back on the use of Certificate Revocation Lists (CRLs) as described in [PKIX]).",
      "ja": "5.証明書は、オンライン証明書状態プロトコル[OCSP]レスポンダー（ない場合は、証明書利用者は、証明書失効リスト（CRLの使用にフォールバックする必要があるだろう）のアドレスを指定する機関情報アクセス（AIA）の拡張子を含むべきです）[PKIX]に記載されているように。"
    },
    {
      "indent": 3,
      "text": "The following rules apply to certification authority (CA) certificates that are used by issuers of XMPP end entity certificates:",
      "ja": "次の規則がXMPPエンドエンティティ証明書の発行者によって使用されている認証局（CA）の証明書に適用されます。"
    },
    {
      "indent": 3,
      "text": "1. The certificate MUST conform to [PKIX].",
      "section_title": true,
      "ja": "1.証明書は、[PKIX]に従わなければなりません。"
    },
    {
      "indent": 3,
      "text": "2. The certificate MUST contain a keyUsage extension with the digitalSignature bit set.",
      "ja": "2.証明書は、デジタル署名のビットセットでkeyUsage拡張子を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "3. The subject field MUST NOT be null.",
      "section_title": true,
      "ja": "3.サブジェクトフィールドはNULLであってはなりません。"
    },
    {
      "indent": 3,
      "text": "4. The signatureAlgorithm SHOULD be the PKCS #1 version 1.5 signature algorithm with SHA-256 as defined by [PKIX-ALGO], or a stronger algorithm if available.",
      "ja": "可能な場合は[PKIX-ALGO]、またはより強力なアルゴリズムによって定義されるような4のsignatureAlgorithmはSHA-256とPKCS＃1バージョン1.5署名アルゴリズムであるべきです。"
    },
    {
      "indent": 3,
      "text": "5. For issuers of public key certificates, the issuer's certificate MUST contain a basicConstraints extension with the cA boolean set to TRUE.",
      "ja": "5.公開鍵証明書の発行体については、発行者の証明書がTRUEに設定されたCAブールとbasicConstraintsの拡張を含まなければなりません。"
    },
    {
      "indent": 0,
      "text": "13.7.1.2. Server Certificates",
      "section_title": true,
      "ja": "13.7.1.2。サーバー証明書"
    },
    {
      "indent": 0,
      "text": "13.7.1.2.1. Rules",
      "section_title": true,
      "ja": "13.7.1.2.1。ルール"
    },
    {
      "indent": 3,
      "text": "In a PKIX certificate to be presented by an XMPP server (i.e., a \"server certificate\"), the certificate SHOULD include one or more XMPP addresses (i.e., domainparts) associated with XMPP services hosted at the server. The rules and guidelines defined in [TLS-CERTS] apply to XMPP server certificates, with the following XMPP-specific considerations:",
      "ja": "PKIX証明書内のXMPPサーバ（すなわち、「サーバ証明書」）によって提示されるように、証明書がサーバでホストされているXMPPサービスに関連する1つまたは複数のXMPPアドレス（すなわち、domainparts）を含むべきです。 [TLS-CERTS]で定義されたルールやガイドラインは以下のXMPP固有の考慮事項と、XMPPサーバ証明書に適用されます。"
    },
    {
      "indent": 3,
      "text": "o Support for the DNS-ID identifier type [PKIX] is REQUIRED in XMPP client and server software implementations. Certification authorities that issue XMPP-specific certificates MUST support the DNS-ID identifier type. XMPP service providers SHOULD include the DNS-ID identifier type in certificate requests.",
      "ja": "O DNS-IDの識別子タイプのサポート[PKIX]は、XMPPクライアントとサーバソフトウェアの実装で必要とされます。問題XMPP固有の証明書がDNS-IDの識別子タイプをサポートしなければならないことを証明機関。 XMPPサービスプロバイダは、証明書の要求でDNS-IDの識別子タイプを含むべきです。"
    },
    {
      "indent": 3,
      "text": "o Support for the SRV-ID identifier type [PKIX-SRV] is REQUIRED for XMPP client and server software implementations (for verification purposes XMPP client implementations need to support only the \"_xmpp-client\" service type, whereas XMPP server implementations need to support both the \"_xmpp-client\" and \"_xmpp-server\" service types). Certification authorities that issue XMPP-specific certificates SHOULD support the SRV-ID identifier type. XMPP service providers SHOULD include the SRV-ID identifier type in certificate requests.",
      "ja": "O SRV-IDの識別子タイプ[PKIX-SRV]のサポートは、XMPPクライアントとサーバソフトウェアの実装のために必要とされるXMPPサーバーの実装がサポートする必要があるのに対し、（検証目的のためにXMPPクライアントの実装では、唯一の「_xmppクライアント」サービスタイプをサポートする必要があります「_xmpp・クライアント」および「_xmppサーバ」サービスタイプ）の両方。問題XMPP固有の証明書がSRV-IDの識別子タイプをサポートする必要がある証明機関。 XMPPサービスプロバイダは、証明書の要求でSRV-IDの識別子タイプを含むべきです。"
    },
    {
      "indent": 3,
      "text": "o Support for the XmppAddr identifier type (specified under Section 13.7.1.4) is encouraged in XMPP client and server software implementations for the sake of backward-compatibility, but is no longer encouraged in certificates issued by certification authorities or requested by XMPP service providers.",
      "ja": "O（セクション13.7.1.4で指定）XmppAddr識別子タイプのサポートは、下位互換性のためにXMPPクライアントとサーバソフトウェアの実装に奨励されていないが、もはや証明機関によって発行された証明書に奨励またはXMPPサービスプロバイダによって要求されています。"
    },
    {
      "indent": 3,
      "text": "o DNS domain names in server certificates MAY contain the wildcard character '*' as the complete left-most label within the identifier.",
      "ja": "サーバ証明書中のO DNSドメイン名には、ワイルドカード文字を含むかもしれ「*」識別子以内に完了し、一番左のラベルとして。"
    },
    {
      "indent": 0,
      "text": "13.7.1.2.2. Examples",
      "section_title": true,
      "ja": "13.7.1.2.2。例"
    },
    {
      "indent": 3,
      "text": "For our first (relatively simple) example, consider a company called \"Example Products, Inc.\" It hosts an XMPP service at \"im.example.com\" (i.e., user addresses at the service are of the form \"user@im.example.com\"), and SRV lookups for the xmpp-client and xmpp-server services at \"im.example.com\" yield one machine, called \"x.example.com\", as follows:",
      "ja": "私たちの最初の（比較的単純な）たとえば、「例プロダクツ社」という会社を考えますそれは「im.example.com」でXMPPサービスをホストする（すなわち、サービスの利用者アドレスの形式は「user@im.example.com」である）のXMPPクライアントとXMPPサーバーのサービスのため、およびSRVルックアップで「x.example.com」と呼ばれる「im.example.com」歩留まり一台のマシン、次のように："
    },
    {
      "indent": 3,
      "text": "_xmpp-client._tcp.im.example.com. 400 IN SRV 20 0 5222 x.example.com _xmpp-server._tcp.im.example.com. 400 IN SRV 20 0 5269 x.example.com",
      "ja": "_xmpp-client._tcp.im.example.com。 SRV 20 0 5222 x.example.com _xmpp-server._tcp.im.example.com 400。 SRV 400 20 0 5269 x.example.com"
    },
    {
      "indent": 3,
      "text": "The certificate presented by x.example.com contains the following representations:",
      "ja": "x.example.comによって提示された証明書には、以下の表現が含まれています。"
    },
    {
      "indent": 3,
      "text": "o An otherName type of SRVName (id-on-dnsSRV) containing an IA5String (ASCII) string of \"_xmpp-client.im.example.com\"",
      "ja": "\"_xmpp-client.im.example.com\" のIA5String（ASCII）文字列を含むSRVNAMEのotherName種類（ID-オンdnsSRV）O"
    },
    {
      "indent": 3,
      "text": "o An otherName type of SRVName (id-on-dnsSRV) containing an IA5String (ASCII) string of \"_xmpp-server.im.example.com\"",
      "ja": "\"_xmpp-server.im.example.com\" のIA5String（ASCII）文字列を含むSRVNAMEのotherName種類（ID-オンdnsSRV）O"
    },
    {
      "indent": 3,
      "text": "o A dNSName containing an ASCII string of \"im.example.com\"",
      "ja": "OのASCII文字列を含むのdNSName「im.example.com」"
    },
    {
      "indent": 3,
      "text": "o An otherName type of XmppAddr (id-on-xmppAddr) containing a UTF-8 string of \"im.example.com\"",
      "ja": "\"im.example.com\" のUTF-8文字列を含むXmppAddrのotherName種類（ID-オンxmppAddr）O"
    },
    {
      "indent": 3,
      "text": "o A CN containing an ASCII string of \"Example Products, Inc.\"",
      "ja": "「例プロダクツ社」のASCII文字列を含むCN O"
    },
    {
      "indent": 3,
      "text": "For our second (more complex) example, consider an ISP called \"Example Internet Services\". It hosts an XMPP service at \"example.net\" (i.e., user addresses at the service are of the form \"user@example.net\"), but SRV lookups for the xmpp-client and xmpp-server services at \"example.net\" yield two machines (\"x1.example.net\" and \"x2.example.net\"), as follows:",
      "ja": "私たちの第二（より複雑な）たとえば、「例インターネットサービス」と呼ばれるISPを検討してください。それは「example.net」（すなわち、サービスの利用者のアドレスがフォーム「user@example.net」である）でXMPPサービスをホストしているが、XMPPクライアントとXMPPサーバーのサービスのSRVルックアップexample.net」で次のように、「（x1.example.net」および 『x2.example.net』）は、2台のマシンを得ます」："
    },
    {
      "indent": 3,
      "text": "_xmpp-client._tcp.example.net. 68400 IN SRV 20 0 5222 x1.example.net. _xmpp-client._tcp.example.net. 68400 IN SRV 20 0 5222 x2.example.net. _xmpp-server._tcp.example.net. 68400 IN SRV 20 0 5269 x1.example.net. _xmpp-server._tcp.example.net. 68400 IN SRV 20 0 5269 x2.example.net.",
      "ja": "_xmpp-client._tcp.example.net。 SRV 20 0 5222 x1.example.net、IN 68400。 _xmpp-client._tcp.example.net。 SRV 20 0 5222 x2.example.net、IN 68400。 _xmpp-server._tcp.example.net。 SRV 20 0 5269 x1.example.net、IN 68400。 _xmpp-server._tcp.example.net。 SRV 20 0 5269 x2.example.net、IN 68400。"
    },
    {
      "indent": 3,
      "text": "Example Internet Services also hosts chatrooms at chat.example.net, and provides an xmpp-server SRV record for that service as well (thus enabling entities from remote domains to access that service). It also might provide other such services in the future, so it wishes to represent a wildcard in its certificate to handle such growth.",
      "ja": "例えばインターネットサービスもchat.example.netにチャットルームをホストし、そして同様に、そのサービスのためのXMPPサーバSRVレコードを提供する（従って、そのサービスにアクセスするためのリモートドメインからエンティティを可能にします）。それは、このような成長を処理するために、その証明書でワイルドカードを表現したいので、それはまた、将来的には他のそのようなサービスを提供するかもしれません。"
    },
    {
      "indent": 3,
      "text": "The certificate presented by either x1.example.net or x2.example.net contains the following representations:",
      "ja": "x1.example.netまたはx2.example.netいずれかによって提示された証明書には、以下の表現が含まれています。"
    },
    {
      "indent": 3,
      "text": "o An otherName type of SRVName (id-on-dnsSRV) containing an IA5String (ASCII) string of \"_xmpp-client.example.net\"",
      "ja": "\"_xmpp-client.example.net\" のIA5String（ASCII）文字列を含むSRVNAMEのotherName種類（ID-オンdnsSRV）O"
    },
    {
      "indent": 3,
      "text": "o An otherName type of SRVName (id-on-dnsSRV) containing an IA5String (ASCII) string of \"_xmpp-server.example.net\"",
      "ja": "\"_xmpp-server.example.net\" のIA5String（ASCII）文字列を含むSRVNAMEのotherName種類（ID-オンdnsSRV）O"
    },
    {
      "indent": 3,
      "text": "o An otherName type of SRVName (id-on-dnsSRV) containing an IA5String (ASCII) string of \"_xmpp-server.chat.example.net\"",
      "ja": "\"_xmpp-server.chat.example.net\" のIA5String（ASCII）文字列を含むSRVNAMEのotherName種類（ID-オンdnsSRV）O"
    },
    {
      "indent": 3,
      "text": "o A dNSName containing an ASCII string of \"example.net\"",
      "ja": "「example.net」のASCII文字列を含むのdNSName O"
    },
    {
      "indent": 3,
      "text": "o A dNSName containing an ASCII string of \"*.example.net\"",
      "ja": "「* .example.net」のASCII文字列を含むのdNSName O"
    },
    {
      "indent": 3,
      "text": "o An otherName type of XmppAddr (id-on-xmppAddr) containing a UTF-8 string of \"example.net\"",
      "ja": "\"example.net\" のUTF-8文字列を含むXmppAddrのotherName種類（ID-オンxmppAddr）O"
    },
    {
      "indent": 3,
      "text": "o An otherName type of XmppAddr (id-on-xmppAddr) containing a UTF-8 string of \"chat.example.net\"",
      "ja": "\"chat.example.net\" のUTF-8文字列を含むXmppAddrのotherName種類（ID-オンxmppAddr）O"
    },
    {
      "indent": 3,
      "text": "o A CN containing an ASCII string of \"Example Internet Services\"",
      "ja": "「例インターネットサービス」のASCII文字列を含むCN O"
    },
    {
      "indent": 0,
      "text": "13.7.1.3. Client Certificates",
      "section_title": true,
      "ja": "13.7.1.3。クライアント証明書"
    },
    {
      "indent": 3,
      "text": "In a PKIX certificate to be presented by an XMPP client controlled by a human user (i.e., a \"client certificate\"), it is RECOMMENDED for the certificate to include one or more JIDs associated with an XMPP user. If included, a JID MUST be represented as an XmppAddr as specified under Section 13.7.1.4.",
      "ja": "PKIX証明書に人間のユーザ（すなわち、「クライアント証明書」）によって制御されるXMPPクライアントによって提示されるように、XMPPユーザに関連する1つ以上たJIDを含むように証明書をお勧めします。含まれている場合、セクション13.7.1.4の下で指定されるように、JIDはXmppAddrとして表現されなければなりません。"
    },
    {
      "indent": 0,
      "text": "13.7.1.4. XmppAddr Identifier Type",
      "section_title": true,
      "ja": "13.7.1.4。 XmppAddr識別子タイプ"
    },
    {
      "indent": 3,
      "text": "The XmppAddr identifier type is a UTF8String within an otherName entity inside the subjectAltName, using the [ASN.1] Object Identifier \"id-on-xmppAddr\" specified below.",
      "ja": "XmppAddr識別子タイプは、以下に指定された[ASN.1]オブジェクト識別子「IDオンxmppAddr」を用いて、内部のsubjectAltName otherNameエンティティ内UTF8Stringをです。"
    },
    {
      "indent": 3,
      "text": "id-pkix OBJECT IDENTIFIER ::= { iso(1) identified-organization(3)\n        dod(6) internet(1) security(5) mechanisms(5) pkix(7) }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "id-on  OBJECT IDENTIFIER ::= { id-pkix 8 }  -- other name forms",
      "raw": true
    },
    {
      "indent": 3,
      "text": "id-on-xmppAddr  OBJECT IDENTIFIER ::= { id-on 5 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "XmppAddr ::= UTF8String",
      "raw": true
    },
    {
      "indent": 3,
      "text": "As an alternative to the \"id-on-xmppAddr\" notation, this Object Identifier MAY be represented in dotted display format (i.e., \"1.3.6.1.5.5.7.8.5\") or in the Uniform Resource Name notation specified in [URN-OID] (i.e., \"urn:oid:1.3.6.1.5.5.7.8.5\").",
      "ja": "「IDオンxmppAddr」表記の代替として、このオブジェクト識別子は点線表示形式で表現することができる（すなわち、「1.3.6.1.5.5.7.8.5」）または[URNで指定されたユニフォームリソース名表記-oid]（すなわち、 \"URN：OID：1.3.6.1.5.5.7.8.5\"）。"
    },
    {
      "indent": 3,
      "text": "Thus for example the JID <juliet@im.example.com> as included in a certificate could be formatted in any of the following three ways:",
      "ja": "従って、例えば、証明書に含まれるJID <juliet@im.example.com>は、次の3つのいずれかの方法でフォーマットすることができます。"
    },
    {
      "indent": 3,
      "text": "id-on-xmppAddr: subjectAltName=otherName:id-on-xmppAddr;UTF8:juliet@im.example.com",
      "ja": "IDオンxmppAddr：のsubjectAltName = otherName：IDオンxmppAddr; UTF8：juliet@im.example.com"
    },
    {
      "indent": 3,
      "text": "dotted display format: subjectAltName=otherName: 1.3.6.1.5.5.7.8.5;UTF8:juliet@im.example.com",
      "ja": "点線の表示フォーマット：のsubjectAltName = otherName：1.3.6.1.5.5.7.8.5; UTF8：juliet@im.example.com"
    },
    {
      "indent": 3,
      "text": "URN notation: subjectAltName=otherName:urn:oid: 1.3.6.1.5.5.7.8.5;UTF8:juliet@im.example.com",
      "ja": "URN表記：のsubjectAltName = otherName：URN：OID：1.3.6.1.5.5.7.8.5; UTF8：juliet@im.example.com"
    },
    {
      "indent": 3,
      "text": "Use of the \"id-on-xmppAddr\" format is RECOMMENDED in the generation of certificates, but all three formats MUST be supported for the purpose of certificate validation.",
      "ja": "「ID-オンxmppAddr」フォーマットの使用は、証明書の生成に推奨されるが、すべての3つの形式は、証明書の検証のためにサポートしなければなりません。"
    },
    {
      "indent": 3,
      "text": "The \"id-on-xmppAddr\" object identifier MAY be used in conjunction with the extended key usage extension specified in Section 4.2.1.12 of [PKIX] in order to explicitly define and limit the intended use of a certificate to the XMPP network.",
      "ja": "「IDオンxmppAddr」オブジェクト識別子は、明示的に定義し、XMPPネットワークへの証明書の使用目的を制限するために、[PKIX]のセクション4.2.1.12で指定された拡張鍵使用拡張と併せて使用することができます。"
    },
    {
      "indent": 0,
      "text": "13.7.2. Certificate Validation",
      "section_title": true,
      "ja": "13.7.2。証明書の検証"
    },
    {
      "indent": 3,
      "text": "When an XMPP entity is presented with a server certificate or client certificate by a peer for the purpose of encryption or authentication of XML streams as described under Section 5 and Section 6, the entity MUST attempt to validate the certificate to determine if the certificate will be considered a \"trusted certificate\", i.e., a certificate that is acceptable for encryption and/or authentication in accordance with the XMPP entity's local service policies or configured settings.",
      "ja": "第5及び第6の下に記載したようにXMPPエンティティが暗号化またはXMLストリームの認証のためにピアによってサーバ証明書またはクライアント証明書が提示されるとき、エンティティは、証明書がされるかどうかを決定するために証明書を検証しようとしなければなりません「信頼できる証明書」、すなわち、XMPPエンティティのローカルサービスポリシーまたは設定した内容に従って暗号化および/または認証のために許容可能であると考えられた証明書。"
    },
    {
      "indent": 3,
      "text": "For both server certificates and client certificates, the validating entity MUST do the following:",
      "ja": "サーバ証明書とクライアント証明書の両方について、検証したエンティティは、以下を行う必要があります。"
    },
    {
      "indent": 3,
      "text": "1. Attempt to verify the integrity of the certificate.",
      "section_title": true,
      "ja": "証明書の完全性を検証する1.試み。"
    },
    {
      "indent": 3,
      "text": "2. Attempt to verify that the certificate has been properly signed by the issuing Certificate Authority.",
      "ja": "2.試みは、証明書が正しく発行する認証局によって署名されていることを確認します。"
    },
    {
      "indent": 3,
      "text": "3. Attempt to validate the full certification path.",
      "section_title": true,
      "ja": "完全な証明書パスを検証する3.試み。"
    },
    {
      "indent": 3,
      "text": "4. Check the rules for end entity public key certificates and certification authority certificates specified under Section 13.7.1.1 for the general case and under either Section 13.7.1.2 or Section 13.7.1.3 for XMPP server or client certificates, respectively.",
      "ja": "4.一般的なケースのためにと、それぞれXMPPサーバーまたはクライアント証明書のためのいずれかのセクション13.7.1.2または13.7.1.3セクションの下のセクション13.7.1.1の下に指定されたエンドエンティティの公開鍵証明書と認証局証明書の規則を確認してください。"
    },
    {
      "indent": 3,
      "text": "5. Check certificate revocation messages via Certificate Revocation Lists (CRLs), the Online Certificate Status Protocol [OCSP], or both.",
      "ja": "5.証明書失効リストを経由して確認証明書失効メッセージ（CRL）の、オンライン証明書状態プロトコル[OCSP]、またはその両方。"
    },
    {
      "indent": 3,
      "text": "If any of those validation attempts fail, the validating entity MUST unilaterally terminate the session.",
      "ja": "これらの検証の試みのいずれかが失敗した場合、有効実体は一方的にセッションを終えなければなりません。"
    },
    {
      "indent": 3,
      "text": "The following sections describe the additional identity verification rules that apply to server-to-server and client-to-server streams.",
      "ja": "次のセクションでは、サーバー、サーバーへとクライアントからサーバーへのストリームに適用される追加の本人確認ルールを記述します。"
    },
    {
      "indent": 3,
      "text": "Once the identity of the stream peer has been validated, the validating entity SHOULD also correlate the validated identity with the 'from' address (if any) of the stream header it received from the peer. If the two identities do not match, the validating entity SHOULD terminate the connection attempt (however, there might be good reasons why the identities do not match, as described under Section 4.7.1).",
      "ja": "ストリームピアのアイデンティティが検証された後、検証エンティティはまた、ピアから受信したストリームのヘッダのアドレス（もしあれば）「から」で検証IDを相関するはずです。 2人のアイデンティティが一致しない場合は、有効実体は（セクション4.7.1で説明したようアイデンティティが、一致していない理由を正当な理由があるかもしれません、しかし）接続の試行を終了する必要があります。"
    },
    {
      "indent": 0,
      "text": "13.7.2.1. Server Certificates",
      "section_title": true,
      "ja": "13.7.2.1。サーバー証明書"
    },
    {
      "indent": 3,
      "text": "For server certificates, the rules and guidelines defined in [TLS-CERTS] apply, with the proviso that the XmppAddr identifier specified under Section 13.7.1.4 is allowed as a reference identifier.",
      "ja": "[TLS-CERTS]で定義されたサーバ証明書、ルールおよびガイドラインについては、セクション13.7.1.4で指定XmppAddr識別子を参照識別子として許可されている条件で、適用します。"
    },
    {
      "indent": 3,
      "text": "The identities to be checked are set as follows:",
      "ja": "次のようにチェックするアイデンティティが設定されています。"
    },
    {
      "indent": 3,
      "text": "o The initiating entity sets the source domain of its reference identifiers to the 'to' address it communicates in the initial stream header; i.e., this is the identity it expects the receiving entity to provide in a PKIX certificate.",
      "ja": "O開始エンティティは、初期ストリームヘッダに通信アドレス「に」への参照識別子のソース領域を設定します。すなわち、これは受信エンティティは、PKIX証明書に提供する期待同一です。"
    },
    {
      "indent": 3,
      "text": "o The receiving entity sets the source domain of its reference identifiers to the 'from' address communicated by the initiating entity in the initial stream header; i.e., this is the identity that the initiating entity is trying to assert.",
      "ja": "受信エンティティは、初期ストリームヘッダで開始エンティティによって通信「」からアドレスへの参照識別子のソース領域を設定し、Oであり;すなわち、これは、開始エンティティが主張しようとしているアイデンティティがあります。"
    },
    {
      "indent": 3,
      "text": "In the case of server-to-server communication, the matching procedure described in [TLS-CERTS] can be performed by an application server (receiving entity) when verifying an incoming server-to-server connection from a peer server (initiating entity). In this case, the receiving entity verifies the identity of the initiating entity and uses as the source domain of its reference identifiers the DNS domain name asserted by the initiating entity in the 'from' attribute of the initial stream header. However, the matching procedure described in [TLS-CERTS] remains unchanged and is applied in the same way.",
      "ja": "サーバ間通信の場合には、[TLS-CERTS]に記載のマッチング手順は、アプリケーションサーバによって実行することができる（受信エンティティ）ピア・サーバー（開始エンティティ）からの着信サーバー間の接続を検証するとき。この場合、受信エンティティは、開始エンティティのアイデンティティを検証し、その参照識別子のソースドメインとして初期ストリームヘッダの「から」属性で開始エンティティによってアサートされたDNSドメイン名を使用します。しかし、[TLS-CERTS]に記載のマッチング手順は変更されないままと同様に適用されます。"
    },
    {
      "indent": 0,
      "text": "13.7.2.2. Client Certificates",
      "section_title": true,
      "ja": "13.7.2.2。クライアント証明書"
    },
    {
      "indent": 3,
      "text": "When an XMPP server validates a certificate presented by a client, there are three possible cases, as discussed in the following sections.",
      "ja": "XMPPサーバーは、クライアントによって提示された証明書を検証すると、次のセクションで説明したように、三つの可能な場合があります。"
    },
    {
      "indent": 3,
      "text": "The identities to be checked are set as follows:",
      "ja": "次のようにチェックするアイデンティティが設定されています。"
    },
    {
      "indent": 3,
      "text": "o The client sets the source domain of its reference identifiers to the 'to' address it communicates in the initial stream header; i.e., this is the identity it expects the server to provide in a PKIX certificate.",
      "ja": "クライアントは、それが初期ストリームヘッダに通信アドレス「に」への参照識別子のソース領域を設定し、Oであり;すなわち、これは、サーバーがPKIX証明書に提供する予定のアイデンティティです。"
    },
    {
      "indent": 3,
      "text": "o The server sets the bare JID of its reference identifiers to the 'from' address communicated by the initiating entity in the initial stream header; i.e., this is the identity that the client is trying to assert.",
      "ja": "Oサーバがその参照識別子の裸JIDを設定する初期ストリームヘッダで開始エンティティによって通信アドレス「から」。すなわち、これは、クライアントが主張しようとしているIDです。"
    },
    {
      "indent": 0,
      "text": "13.7.2.2.1. Case #1",
      "section_title": true,
      "ja": "13.7.2.2.1。ケース＃1"
    },
    {
      "indent": 3,
      "text": "If the client certificate appears to be certified by a certification path terminating in a trust anchor (as described in Section 6.1 of [PKIX]), the server MUST check the certificate for any instances of the XmppAddr as described under Section 13.7.1.4. There are three possible sub-cases:",
      "ja": "クライアント証明書は、（[PKIX]の6.1節で説明したように）トラストアンカーで終了する証明書パスによって認定されるように表示された場合は、セクション13.7.1.4で述べたように、サーバはXmppAddrのすべてのインスタンスのための証明書をチェックしなければなりません。 3可能なサブケースがあります。"
    },
    {
      "indent": 3,
      "text": "Sub-Case #1: The server finds one XmppAddr for which the domainpart of the represented JID matches one of the configured FQDNs of the server; the server SHOULD use this represented JID as the validated identity of the client.",
      "ja": "サブケース＃1：サーバーは示さJIDのdomainpartサーバの構成のFQDNのいずれかと一致するための一XmppAddrを見出します。これを使用するサーバーは、クライアントの検証アイデンティティとしてJIDを表します。"
    },
    {
      "indent": 3,
      "text": "Sub-Case #2: The server finds more than one XmppAddr for which the domainpart of the represented JID matches one of the configured FQDNs of the server; the server SHOULD use one of these represented JIDs as the validated identity of the client, choosing among them based on the bare JID contained in the 'from' address of the initial stream header (if any), based on the domainpart contained in the 'to' address of the initial stream header, or in accordance with local service policies (such as a lookup in a user database based on other information contained in the client certificate).",
      "ja": "サブケース＃2：サーバーは示さJIDのdomainpartサーバの構成のFQDNのいずれかと一致するため、複数のXmppAddrを見出します。サーバは、「に含まれるdomainpartに基づいて、初期ストリームヘッダ（もしあれば）の「From」アドレスに含まれる裸のJIDに基づいてそれらの中から選択、クライアントの検証アイデンティティとしてこれら表さたJIDのいずれかを使用する必要があり初期ストリームヘッダのアドレス、または（例えば、クライアント証明書に含まれる他の情報に基づいて、ユーザ・データベース内のルックアップなど）ローカルサービスポリシーに従って「へ。"
    },
    {
      "indent": 3,
      "text": "Sub-Case #3: The server finds no XmppAddrs, or finds at least one XmppAddr but the domainpart of the represented JID does not match one of the configured FQDNs of the server; the server MUST NOT use the represented JID (if any) as the validated identity of the client but instead MUST validate the identity of the client using other means in accordance with local service policies (such as a lookup in a user database based on other information contained in the client certificate). If the identity cannot be so validated, the server MAY abort the validation process and terminate the TLS negotiation.",
      "ja": "サブケース＃3：サーバーにはXmppAddrsを見つけていない、または少なくとも一つのXmppAddrが、サーバの構成のFQDNのいずれかと一致しない表されるJIDのdomainpartを見出します。サーバーは、クライアントの検証アイデンティティとして表さJID（もしあれば）を使用してはならないが、代わりに他の情報に基づいて、ユーザデータベース内のルックアップなどのローカルサービスポリシー（に従い、他の手段を使用してクライアントのIDを検証しなければなりませんクライアント証明書に含まれます）。アイデンティティがそのように検証することができない場合は、サーバが検証プロセスを中止し、TLS交渉を終了することができます。"
    },
    {
      "indent": 0,
      "text": "13.7.2.2.2. Case #2",
      "section_title": true,
      "ja": "13.7.2.2.2。ケース＃2"
    },
    {
      "indent": 3,
      "text": "If the client certificate is certified by a Certificate Authority not known to the server, the server MUST proceed as under Case #1, Sub-Case #3.",
      "ja": "クライアント証明書をサーバーに知られていない証明機関によって認定された場合、サーバはケース＃1、サブケース＃3の下のように進行しなければなりません。"
    },
    {
      "indent": 0,
      "text": "13.7.2.2.3. Case #3",
      "section_title": true,
      "ja": "13.7.2.2.3。ケース＃3"
    },
    {
      "indent": 3,
      "text": "If the client certificate is self-signed, the server MUST proceed as under Case #1, Sub-Case #3.",
      "ja": "クライアント証明書が自己署名されている場合、サーバーは、ケース＃1、サブケース＃3の下のように進行しなければなりません。"
    },
    {
      "indent": 0,
      "text": "13.7.2.3. Checking of Certificates in Long-Lived Streams",
      "section_title": true,
      "ja": "13.7.2.3。長期性ストリーム内の証明書のチェック"
    },
    {
      "indent": 3,
      "text": "Because XMPP uses long-lived XML streams, it is possible that a certificate presented during stream negotiation might expire or be revoked while the stream is still live (this is especially relevant in the context of server-to-server streams). Therefore, each party to a long-lived stream SHOULD:",
      "ja": "XMPPは、長寿命のXMLストリームを使用しているので、（これは、サーバからサーバへのストリームの文脈では特に関連性がある）、ストリームネゴシエーション中に提示された証明書の有効期限が切れる可能性があるか、ストリームがまだ生きている間に取り消されている可能性があります。そのため、長寿命のストリームに各当事者必要があります。"
    },
    {
      "indent": 3,
      "text": "1. Cache the expiration date of the certificate presented by the other party and any certificates on which that certificate depends (such as a root or intermediate certificate for a certification authority), and close the stream when any such certificate expires, with a stream error of <reset/> (Section 4.9.3.16).",
      "ja": "1.他の党と（例えば認証局のルートや中間証明書など）、その証明書が依存するすべての証明書が提示した証明書のキャッシュ有効期限、およびそのような証明書の有効期限が切れたとき、ストリームのエラーで、ストリームを閉じます（セクション4.9.3.16）</リセット>をします。"
    },
    {
      "indent": 3,
      "text": "2. Periodically query the Online Certificate Status Protocol [OCSP] responder listed in the Authority Information Access (AIA) extension of the certificate presented by the other party and any certificates on which that certificate depends (such as a root or intermediate certificate for a certification authority), and close the stream if any such certificate has been revoked, with a stream error of <reset/> (Section 4.9.3.16). It is RECOMMENDED to query the OSCP responder at or near the time communicated via the nextUpdate field received in the OCSP response or, if the nextUpdate field is not set, to query every 24 hours.",
      "ja": "2.定期的に[OCSP]応答、相手が提示した証明書の機関情報アクセス（AIA）拡張と、このような認証のためのルート証明書または中間証明書としてその証明書が依存するすべての証明書（に記載されているオンライン証明書状態プロトコルを問い合わせます権威）、およびそのような証明書が失効している場合は、<リセット/>（セクション4.9.3.16）のストリームエラーで、ストリームを閉じます。 nextUpdateのフィールドが24時間ごとに照会し、設定されていない場合nextUpdateのフィールドを介して通信時間は、OCSP応答で受信またはまたはその付近OSCPレスポンダを照会することをお勧めします。"
    },
    {
      "indent": 3,
      "text": "After the stream is closed, the initiating entity from the closed stream will need to reconnect and the receiving entity will need to authenticate the initiating entity based on whatever certificate it presents during negotiation of the new stream.",
      "ja": "ストリームが閉じられた後、閉じられたストリームから開始するエンティティは、再接続する必要がありますし、受信エンティティは、新しいストリームのネゴシエーション時に提示どんな証明書に基づいて開始するエンティティを認証する必要があります。"
    },
    {
      "indent": 0,
      "text": "13.7.2.4. Use of Certificates in XMPP Extensions",
      "section_title": true,
      "ja": "13.7.2.4。 XMPP Extensionsの証明書の使用"
    },
    {
      "indent": 3,
      "text": "Certificates MAY be used in extensions to XMPP for the purpose of application-layer encryption or authentication above the level of XML streams (e.g., for end-to-end encryption). Such extensions will define their own certificate handling rules. At a minimum, such extensions are encouraged to remain consistent with the rules defined in this specification, specifying additional rules only when necessary.",
      "ja": "証明書は、（エンドツーエンド暗号化のために、例えば）XMLストリームのレベルより上のアプリケーション層の暗号化または認証の目的のためにXMPPへの拡張に使用されるかもしれません。このような拡張は、独自の証明書の処理ルールを定義します。最低でも、そのような拡張が必要な​​場合にのみ、追加のルールを指定して、本明細書で定義された規則と一貫性を維持することが奨励されます。"
    },
    {
      "indent": 0,
      "text": "13.8. Mandatory-to-Implement TLS and SASL Technologies",
      "section_title": true,
      "ja": "13.8。実装に必須のTLSおよびSASLテクノロジーズ"
    },
    {
      "indent": 3,
      "text": "The following TLS ciphersuites and SASL mechanisms are mandatory-to-implement (naturally, implementations MAY support other ciphersuites and mechanisms as well). For security considerations related to TLS ciphersuites, see Section 13.9.4 and [TLS]. For security",
      "ja": "以下のTLS暗号スイートとSASLメカニズムは（当然、実装は、他の暗号スイートおよびメカニズムをサポートする場合があります）強制的に実装されています。 TLS暗号群に関連するセキュリティ上の考慮事項については、項13.9.4および[TLS]を参照してください。セキュリティのために"
    },
    {
      "indent": 3,
      "text": "considerations related to SASL mechanisms, see Section 13.9.4, [SASL], and specifications for particular SASL mechanisms such as [SCRAM], [DIGEST-MD5], and [PLAIN].",
      "ja": "SASL機構に関する考察は、セクション13.9.4、[SASL]、及びそのような[SCRAM]、[DIGEST-MD5]、および[PLAIN]のような特定のSASLメカニズムの仕様を参照してください。"
    },
    {
      "indent": 0,
      "text": "13.8.1. For Authentication Only",
      "section_title": true,
      "ja": "13.8.1。認証のためにのみ"
    },
    {
      "indent": 3,
      "text": "For authentication only, servers and clients MUST support the SASL Salted Challenge Response Authentication Mechanism [SCRAM] -- in particular, the SCRAM-SHA-1 and SCRAM-SHA-1-PLUS variants.",
      "ja": "特に、SCRAM-SHA-1およびSCRAM-SHA-1-PLUSバリアント - 認証のみの場合は、サーバーとクライアントはSASL塩漬けチャレンジレスポンス認証メカニズム[SCRAM]をサポートしなければなりません。"
    },
    {
      "indent": 6,
      "text": "Security Warning: Even though it is possible to complete authentication only without confidentiality, it is RECOMMENDED for servers and clients to protect the stream with TLS before attempting authentication with SASL, both to help protect the information exchanged during SASL negotiation and to help prevent certain downgrade attacks as described under Section 13.9.4 and Section 13.9.5. Even if TLS is used, implementations SHOULD also enforce channel binding as described under Section 13.9.4.",
      "ja": "セキュリティ警告：それだけで機密性なしに認証を完了することが可能であるにもかかわらず、それはSASLで認証を試みる前に、TLSでストリームを保護するために、サーバーとクライアントのために推奨され、SASLネゴシエーションの間に交換される情報を保護するために、一定のダウングレードを防ぐために、両方のセクション13.9.4および項13.9.5で説明したような攻撃。 TLSを使用しても、実装はまた、セクション13.9.4に記載したように、結合チャネルを強制します。"
    },
    {
      "indent": 6,
      "text": "Interoperability Note: The SCRAM-SHA-1 or SASL-SCRAM-SHA-1-PLUS variants of the SCRAM mechanism replace the SASL DIGEST-MD5 mechanism as XMPP's mandatory-to-implement password-based method for authentication only. For backward-compatibility with existing deployed infrastructure, implementations are encouraged to continue supporting the DIGEST-MD5 mechanism as specified in [DIGEST-MD5]; however, there are known interoperability issues with DIGEST-MD5 that make it impractical in the long term.",
      "ja": "相互運用性注：SCRAM-SHA-1またはSCRAMメカニズムのSASL-SCRAM-SHA-1-PLUSの変異体は認証のみのためにXMPPの実装に必須のパスワードベースの方法としてSASL DIGEST-MD5メカニズムを交換してください。既存の展開インフラストラクチャとの下位互換性のために、実装は[DIGEST-MD5]で指定されるようにDIGEST-MD5機構をサポート継続することが奨励されます。しかし、長期的には、それは非現実的DIGEST-MD5で知られている相互運用性の問題があります。"
    },
    {
      "indent": 0,
      "text": "13.8.2. For Confidentiality Only",
      "section_title": true,
      "ja": "13.8.2。機密保持のためにのみ"
    },
    {
      "indent": 3,
      "text": "For confidentiality only, servers MUST support TLS with the TLS_RSA_WITH_AES_128_CBC_SHA ciphersuite.",
      "ja": "唯一の機密保持のために、サーバは、TLS_RSA_WITH_AES_128_CBC_SHA暗号スイートとTLSをサポートしなければなりません。"
    },
    {
      "indent": 6,
      "text": "Security Warning: Because a connection with confidentiality only has weaker security properties than a connection with both confidentiality and authentication, it is RECOMMENDED for servers and clients to prefer connections with both qualities (e.g., by protecting the stream with TLS before attempting authentication with SASL). In practice, confidentiality only is employed merely for server-to-server connections when the peer server does not present a trusted certificate and the servers use Server Dialback [XEP-0220] for weak identity verification, but TLS with confidentiality only is still desirable to protect the connection against casual eavesdropping.",
      "ja": "セキュリティ警告：守秘義務との接続が唯一の機密性と認証の両方に関連してより弱いセキュリティプロパティを持っているので、（SASLによる認証を試みる前に、TLSでストリームを保護することにより、例えば）の両方の資質との接続を好むようにサーバーとクライアントのために推奨され。実際には、ピア・サーバーは、信頼できる証明書を提示していないとサーバーが弱い本人確認のためのサーバーダイアルバック[XEP-0220]を使用する場合、機密性は、サーバー間の接続のためだけに採用されていますが、機密性を持つTLSはまだすることが望ましいですカジュアルな盗聴に対する接続を保護します。"
    },
    {
      "indent": 0,
      "text": "13.8.3. For Confidentiality and Authentication with Passwords",
      "section_title": true,
      "ja": "13.8.3。パスワードと機密性および認証のための"
    },
    {
      "indent": 3,
      "text": "For both confidentiality and authentication with passwords, servers and clients MUST implement TLS with the TLS_RSA_WITH_AES_128_CBC_SHA ciphersuite plus SASL SCRAM, in particular the SCRAM-SHA-1 and SCRAM-SHA-1-PLUS variants (with SCRAM-SHA1-PLUS being preferred, as described under Section 13.9.4).",
      "ja": "SCRAM-SHA1-PLUSが好ましいとTLS_RSA_WITH_AES_128_CBC_SHA暗号スイートプラスSASL SCRAMでTLSを実装しなければならないパスワード、サーバーとクライアントの両方機密性と認証の場合、特にSCRAM-SHA1とSCRAM-SHA1-PLUSは、として、（バリアントセクション13.9.4で説明）。"
    },
    {
      "indent": 3,
      "text": "As further explained in the following Security Warning, in certain circumstances a server MAY offer TLS with the TLS_RSA_WITH_AES_128_CBC_SHA ciphersuite plus SASL PLAIN when it is not possible to offer more secure alternatives; in addition, clients SHOULD implement PLAIN over TLS in order to maximize interoperability with servers that are not able to deploy more secure alternatives.",
      "ja": "さらにより安全な代替手段を提供することができないときに、サーバーがTLS_RSA_WITH_AES_128_CBC_SHA暗号スイートプラスSASL PLAINでTLSを提供するかもしれない特定の状況では、以下のセキュリティ警告で説明しました。加えて、クライアントがより安全な代替手段を配備することができませんサーバーとの相互運用性を最大にするためにTLS上PLAINを実装する必要があります。"
    },
    {
      "indent": 6,
      "text": "Security Warning: In practice, many servers offer, and many clients use, TLS plus SASL PLAIN. The SCRAM-SHA-1 and especially SCRAM-SHA-1-PLUS variants of the SCRAM mechanism are strongly preferred over the PLAIN mechanism because of their superior security properties (including for SCRAM-SHA-1-PLUS the ability to enforce channel binding as described under Section 13.9.4). A client SHOULD treat TLS plus SASL PLAIN as a technology of last resort to be used only when interacting with a server that does not offer SCRAM (or other alternatives that are more secure than TLS plus SASL PLAIN), MUST prefer more secure mechanisms (e.g., EXTERNAL, SCRAM-SHA-1-PLUS, SCRAM-SHA-1, or the older DIGEST-MD5 mechanism) to the PLAIN mechanism, and MUST NOT use the PLAIN mechanism if the stream does not at a minimum have confidentiality and integrity protection via TLS with full certificate validation as described under Section 13.7.2.1. A server MUST NOT offer SASL PLAIN if the confidentiality and integrity of the stream are not protected via TLS or an equivalent security layer. A server SHOULD NOT offer TLS plus SASL PLAIN unless it is unable to offer some variant of SASL SCRAM (or other alternatives that are more secure than TLS plus SASL PLAIN), e.g., because the XMPP service depends for authentication purposes on a database or directory that is not under the control of the XMPP administrators, such as Pluggable Authentication Modules (PAM), an Lightweight Directory Access Protocol (LDAP) directory [LDAP], or an Authentication, Authorization, and Accounting (AAA) key management protocol (for guidance, refer to [AAA]). However, offering TLS plus SASL PLAIN even when the server supports more secure alternatives might be appropriate if the server needs to enable interoperability with an installed base of clients that do not yet support SCRAM or other alternatives that are more secure than TLS plus SASL PLAIN.",
      "ja": "セキュリティ警告：実際、多くのサーバーを提供し、多くのクライアントが使用して、TLSプラスSASL PLAINで。 SCRAM-SHA-1とSCRAM機構の特にSCRAM-SHA-1-PLUS変異体は強くためSCRAM-SHA-1-PLUSのような結合チャネルを強制する能力を含むその優れたセキュリティ特性（の平面機構よりも好まれますセクション13.9.4で説明）。クライアントは、より安全なメカニズムを好むしなければならない、SCRAM（またはTLSプラスSASL PLAINよりも安全です他の選択肢）を提供していないサーバーとやり取りする場合にのみに使用する最後の技術としてTLSプラスSASL PLAINを扱うべきである（たとえば、 、EXTERNAL、SCRAM-SHA-1-PLUS、SCRAM-SHA-1、または古いDIGEST-MD5メカニズム）PLAINメカニズムに、ストリームは、最低で機密性と完全性の保護を持っていない場合はPLAINメカニズムを使用してはなりませんTLS経由のセクション13.7.2.1の下に説明するように、完全な証明書の検証と。ストリームの機密性と整合性がTLSまたは同等のセキュリティ層を介して保護されていない場合、サーバーは、SASL PLAINを提供してはいけません。例えば、（TLSプラスSASL PLAINよりも安全であるか、他の選択肢）SASL SCRAMのいくつかの変種を提供することができない場合を除きXMPPサービスは、データベースまたはディレクトリに認証用に依存しているため、サーバーは、TLSプラスSASL PLAINを申し出てはなりませんそれは指導のために（例えばのPAM（Pluggable Authentication Modules）、LDAP（Lightweight Directory Access Protocol）ディレクトリ[LDAP]、または認証、許可、およびアカウンティング（AAA）の鍵管理プロトコルとしてXMPP管理者の制御下ではありません、[AAA]を参照）。サーバーがまだSCRAMまたはTLSプラスSASL PLAINよりも安全な他の選択肢をサポートしていないクライアントのインストールベースとの相互運用性を有効にする必要がある場合ただし、サーバはより安全な代替手段をサポートしている場合でも、TLSプラスSASL PLAINを提供することは適切であるかもしれません。"
    },
    {
      "indent": 0,
      "text": "13.8.4. For Confidentiality and Authentication without Passwords",
      "section_title": true,
      "ja": "13.8.4。パスワードなしで機密性および認証のための"
    },
    {
      "indent": 3,
      "text": "For both confidentiality and authentication without passwords, servers MUST and clients SHOULD implement TLS with the TLS_RSA_WITH_AES_128_CBC_SHA ciphersuite plus the SASL EXTERNAL mechanism (see Appendix A of [SASL]) with PKIX certificates.",
      "ja": "パスワードなしの両方の機密性と認証の場合、サーバは、クライアントがTLS_RSA_WITH_AES_128_CBC_SHA暗号スイートプラスSASL EXTERNAL機構をTLSを実装する必要がありますしなければならないPKIX証明書を使用して（[SASL]の付録Aを参照してください）。"
    },
    {
      "indent": 0,
      "text": "13.9. Technology Reuse",
      "section_title": true,
      "ja": "13.9。テクノロジーリユース"
    },
    {
      "indent": 0,
      "text": "13.9.1. Use of Base 64 in SASL",
      "section_title": true,
      "ja": "13.9.1。 SASLにおけるベース64の使用"
    },
    {
      "indent": 3,
      "text": "Both the client and the server MUST verify any base 64 data received during SASL negotiation (Section 6). An implementation MUST reject (not ignore) any characters that are not explicitly allowed by the base 64 alphabet; this helps to guard against creation of a covert channel that could be used to \"leak\" information.",
      "ja": "クライアントとサーバーの両方は、64個のデータはSASLネゴシエーション（第6節）の間に受信任意の塩基を確認しなければなりません。実装は、（無視しない）、明示的にベース64のアルファベットによって許可されていない任意の文字を拒絶しなければなりません。これは「漏れ」の情報を使用することができ隠れチャネルの作成を防ぐのに役立ちます。"
    },
    {
      "indent": 3,
      "text": "An implementation MUST NOT break on invalid input and MUST reject any sequence of base 64 characters containing the pad ('=') character if that character is included as something other than the last character of the data (e.g., \"=AAA\" or \"BBBB=CCC\"); this helps to guard against buffer overflow attacks and other attacks on the implementation.",
      "ja": "その文字が \"最後のデータの文字（例えば、「= AAA」または以外のものとして含まれている場合、実装は、無効な入力に壊してはならないとパッド（「=」）文字を含むベース64文字の任意のシーケンスを拒絶しなければなりませんBBBB = CCC \"）;これは、バッファオーバーフロー攻撃や実装上の他の攻撃から保護するのに役立ちます。"
    },
    {
      "indent": 3,
      "text": "While base 64 encoding visually hides otherwise easily recognized information (such as passwords), it does not provide any computational confidentiality.",
      "ja": "ベース64符号化は、視覚的に（パスワードなど）、そうでなければ容易に認識情報を隠している間、それは任意の計算機密性を提供しません。"
    },
    {
      "indent": 3,
      "text": "All uses of base 64 encoding MUST follow the definition in Section 4 of [BASE64] and padding bits MUST be set to zero.",
      "ja": "ベース64符号化のすべての使用は、[BASE64]のセクション4で定義に従わなければならないし、パディングビットがゼロに設定されなければなりません。"
    },
    {
      "indent": 0,
      "text": "13.9.2. Use of DNS",
      "section_title": true,
      "ja": "13.9.2。 DNSの使用"
    },
    {
      "indent": 3,
      "text": "XMPP typically relies on the Domain Name System (specifically [DNS-SRV] records) to resolve a fully qualified domain name to an IP address before a client connects to a server or before a peer server connects to another server. Before attempting to negotiate an XML stream, the initiating entity MUST NOT proceed until it has resolved the DNS domain name of the receiving entity as specified under Section 3 (although it is not necessary to resolve the DNS domain name before each connection attempt, because DNS resolution results can be temporarily cached in accordance with time-to-live values). However, in the absence of a secure DNS option (e.g., as provided by [DNSSEC]), a malicious attacker with access to the DNS server data, or able to cause spoofed answers to be cached in a recursive resolver, can potentially cause the initiating entity to connect to any XMPP server chosen by the attacker. Deployment and validation of server certificates help to prevent such attacks.",
      "ja": "XMPPは、通常、クライアントがサーバにまたはピアサーバーが別のサーバーに接続する前に接続する前のIPアドレスに完全修飾ドメイン名を解決するために、ドメインネームシステム（特に[DNS-SRV]記録）に依存しています。第3節の下に指定されている、それが受信エンティティのDNSドメイン名を解決するまで、各接続試行の前にDNSドメイン名を解決する必要はありませんが、XMLストリームを交渉しようとする前に、開始実体はDNSので、（進んではならない（MUST NOT）解像度の結果は、一時的に）生存時間値に応じてキャッシュすることができます。しかし、安全なDNSオプションが存在しない場合に（例えば、[DNSSEC]によって提供されるように）、悪質なDNSサーバのデータへのアクセス権を持つ攻撃者は、再帰的なリゾルバにキャッシュすることが偽装された答えを引き起こすことができる、潜在的に引き起こす可能性があります攻撃者が選択した任意のXMPPサーバーに接続するエンティティを開始します。サーバ証明書の展開と検証は、このような攻撃を防ぐのに役立ちます。"
    },
    {
      "indent": 0,
      "text": "13.9.3. Use of Hash Functions",
      "section_title": true,
      "ja": "13.9.3。ハッシュ関数の使用"
    },
    {
      "indent": 3,
      "text": "XMPP itself does not directly mandate the use of any particular cryptographic hash function. However, technologies on which XMPP depends (e.g., TLS and particular SASL mechanisms), as well as various XMPP extensions, might make use of cryptographic hash functions. Those who implement XMPP technologies or who develop XMPP extensions are advised to closely monitor the state of the art regarding attacks against cryptographic hash functions in Internet protocols as they relate to XMPP. For helpful guidance, refer to [HASHES].",
      "ja": "XMPP自身が直接、特定の暗号化ハッシュ関数の使用を強制しません。しかしながら、XMPPが依存している技術は、（例えば、TLSおよび特定のSASL機構）、ならびに様々なXMPP拡張機能は、暗号ハッシュ関数を利用するかもしれません。 XMPP技術を実装する人やXMPPの拡張機能を開発者たちは密接に彼らはXMPPに関連して、インターネット・プロトコルにおける暗号ハッシュ関数に対する攻撃に関する技術の状況を監視することをお勧めします。役立つガイダンスについては、[HASHES]を参照してください。"
    },
    {
      "indent": 0,
      "text": "13.9.4. Use of SASL",
      "section_title": true,
      "ja": "13.9.4。 SASLの使用"
    },
    {
      "indent": 3,
      "text": "Because the initiating entity chooses an acceptable SASL mechanism from the list presented by the receiving entity, the initiating entity depends on the receiving entity's list for authentication. This dependency introduces the possibility of a downgrade attack if an attacker can gain control of the channel and therefore present a weak list of mechanisms. To mitigate this attack, the parties SHOULD protect the channel using TLS before attempting SASL negotiation and either perform full certificate validation as described under Section 13.7.2.1 or use a SASL mechanism that provides channel bindings, such as SCRAM-SHA-1-PLUS. (Protecting the channel via TLS with full certificate validation can help to ensure the confidentiality and integrity of the information exchanged during SASL negotiation.)",
      "ja": "開始エンティティは、受信エンティティによって提示されたリストから許容SASLメカニズムを選択しているため、開始エンティティは、認証のための受信エンティティのリストに依存します。攻撃者がチャネルの制御を取得し、それゆえ機構の弱いリストを提示することができる場合には、この依存性は、ダウングレード攻撃の可能性を導入します。この攻撃を軽減するために、当事者はSASL交渉を試みる前にTLSを使用してチャネルを保護し、いずれかのセクション13.7.2.1で説明したり、そのようなSCRAM-SHA-1-PLUSなどのチャネルバインディングを提供SASLメカニズムを使用して、完全な証明書の検証を実行する必要があります。 （SASLネゴシエーションの間に交換された情報の機密性と完全性を保証するために助けることができる完全な証明書の検証でTLS経由のチャネルを保護します。）"
    },
    {
      "indent": 3,
      "text": "The SASL framework itself does not provide a method for binding SASL authentication to a security layer providing confidentiality and integrity protection that was negotiated at a lower layer (e.g., TLS). Such a binding is known as a \"channel binding\" (see [CHANNEL]). Some SASL mechanisms provide channel bindings, which in the case of XMPP would typically be a binding to TLS (see [CHANNEL-TLS]). If a SASL mechanism provides a channel binding (e.g., this is true of [SCRAM]), then XMPP entities using that mechanism SHOULD prefer the channel binding variant (e.g., preferring \"SCRAM-SHA-1-PLUS\" over \"SCRAM-SHA-1\"). If a SASL mechanism does not provide a channel binding, then the mechanism cannot provide a way to verify that the source and destination end points to which the lower layer's security is bound are equivalent to the end points that SASL is authenticating; furthermore, if the end points are not identical, then the lower layer's security cannot be trusted to protect data transmitted between the SASL-authenticated entities. In such a situation, a SASL security layer SHOULD be negotiated that effectively ignores the presence of the lower-layer security.",
      "ja": "SASLフレームワーク自体は、下位層（例えば、TLS）でネゴシエートされた機密性と完全性保護を提供するセキュリティ層にSASL認証を結合するための方法を提供しません。そのような「チャネル結合」として知られている結合（参照[CHANNEL]）。いくつかのSASLメカニズムはXMPPの場合には、典型的にはTLS（[CHANNEL-TLS]を参照）に結合されるチャネルバインディングを提供します。 SASL機構は、結合チャネルを提供する場合（例えば、これは真である[SCRAM]）、次いで（例えば、「上「SCRAM-SHA-1-PLUS」好むSCRAM-SHAをチャネル結合変異体を好むべきであると機構を使用してXMPPエンティティ-1\" ）。 SASL機構は、結合チャネルを提供しない場合、機構は、下位層のセキュリティがバインドされているソースと宛先エンドポイントはSASLが認証されたエンドポイントに等価であることを確認する方法を提供することができません。エンドポイントが同一でない場合は、さらに、その後、下位層のセキュリティは、SASL認証エンティティ間で送信されるデータを保護するために信頼することはできません。このような状況では、SASLセキュリティ層を効果的に下層セキュリティの存在を無視することが交渉されるべきです。"
    },
    {
      "indent": 3,
      "text": "Many deployed XMPP services authenticate client connections by means of passwords. It is well known that most human users choose relatively weak passwords. Although service provisioning is out of scope for this document, XMPP servers that allow password-based authentication SHOULD enforce minimal criteria for password strength to help prevent dictionary attacks. Because all password-based authentication mechanisms are susceptible to password guessing attacks, XMPP servers MUST limit the number of retries allowed during SASL authentication, as described under Section 6.4.5.",
      "ja": "多くの展開XMPPサービスは、パスワードによるクライアント接続を認証します。よく、ほとんどの人間のユーザが比較的弱いパスワードを選択することが知られています。サービスプロビジョニングは、このドキュメントの範囲外ですが、パスワードベースの認証を許可するXMPPサーバーでは、辞書攻撃を防ぐためにパスワードの強度のための最小限の基準を強制する必要があります。すべてのパスワードベースの認証メカニズムは、パスワード推測攻撃を受けやすいので、XMPPサーバは、6.4.5項で述べたように、SASL認証中に許可される再試行回数を制限しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Some SASL mechanisms (e.g., [ANONYMOUS]) do not provide strong peer entity authentication of the client to the server. Service administrators are advised to enable such mechanisms with caution. Best practices for the use of the SASL ANONYMOUS mechanism in XMPP are described in [XEP-0175].",
      "ja": "いくつかのSASL機構（例えば、[匿名]）は、サーバにクライアントの強いピアエンティティの認証を提供しません。サービス管理者は注意して、このようなメカニズムを有効にすることをお勧めします。 XMPPにSASL ANONYMOUSメカニズムを使用するためのベストプラクティスは、[XEP-0175]に記載されています。"
    },
    {
      "indent": 0,
      "text": "13.9.5. Use of TLS",
      "section_title": true,
      "ja": "13.9.5。 TLSの使用"
    },
    {
      "indent": 3,
      "text": "Implementations of TLS typically support multiple versions of the Transport Layer Security protocol as well as the older Secure Sockets Layer (SSL) protocol. Because of known security vulnerabilities, XMPP servers and clients MUST NOT request, offer, or use SSL 2.0. For further details, see Appendix E.2 of [TLS] along with [TLS-SSL2].",
      "ja": "TLSの実装は通常、複数のトランスポート層セキュリティプロトコルのバージョンと同様に古いのSecure Sockets Layer（SSL）プロトコルをサポートしています。そのため、既知のセキュリティの脆弱性を、XMPPサーバとクライアントは、提供を要求し、またはSSL 2.0を使用してはなりません。詳細については、[TLS-SSL2]と一緒[TLS]の付録E.2を参照。"
    },
    {
      "indent": 3,
      "text": "To prevent man-in-the-middle attacks, the TLS client (which might be an XMPP client or an XMPP server) MUST verify the certificate of the TLS server and MUST check its understanding of the server FQDN against the server's identity as presented in the TLS Certificate message as described under Section 13.7.2.1 (for further details, see [TLS-CERTS].",
      "ja": "man-in-the-middle攻撃を防ぐために、（XMPPクライアントまたはXMPPサーバーであるかもしれない）TLSクライアントはTLSサーバーの証明書を検証しなければならないとして提示されるサーバーのIDに対するサーバーFQDNのその理解をチェックしなければなりませんセクション13.7.2.1で説明したようにTLS証明書メッセージ（詳細については、[TLS-CERTS]を参照。"
    },
    {
      "indent": 3,
      "text": "Support for TLS renegotiation is strictly OPTIONAL. However, implementations that support TLS renegotiation MUST implement and use the TLS Renegotiation Extension [TLS-NEG]. Further details are provided under Section 5.3.5.",
      "ja": "TLS再ネゴシエーションのサポートは厳密にはオプションです。しかしながら、TLS再ネゴシエーションをサポートする実装は、TLS再ネゴシエーション拡張[TLS-NEG]を実装して使用しなければなりません。詳細は、セクション5.3.5の下で提供されています。"
    },
    {
      "indent": 0,
      "text": "13.9.6. Use of UTF-8",
      "section_title": true,
      "ja": "13.9.6。 UTF-8の使用"
    },
    {
      "indent": 3,
      "text": "The use of UTF-8 makes it possible to transport non-ASCII characters, and thus enables character \"spoofing\" scenarios, in which a displayed value appears to be something other than it is. Furthermore, there are known attack scenarios related to the decoding of UTF-8 data. On both of these points, refer to [UTF-8] for more information.",
      "ja": "UTF-8を使用することは、非ASCII文字を輸送することが可能となり、ひいては表示される値は、それがある以外のものであるように思われる文字「なりすまし」のシナリオを、可能にします。また、UTF-8データの復号に関連する既知の攻撃のシナリオが存在します。これらの点の両方で、詳細については[UTF-8]を参照してください。"
    },
    {
      "indent": 0,
      "text": "13.9.7. Use of XML",
      "section_title": true,
      "ja": "13.9.7。 XMLの使用"
    },
    {
      "indent": 3,
      "text": "Because XMPP is an application profile of the Extensible Markup Language [XML], many of the security considerations described in [XML-MEDIA] and [XML-GUIDE] also apply to XMPP. Several aspects of XMPP mitigate the risks described there, such as the prohibitions specified under Section 11.1 and the lack of external references to style sheets or transformations, but these mitigating factors are by no means comprehensive.",
      "ja": "XMPPは、拡張マークアップ言語[XML]のアプリケーションプロファイルであるため、[XML-MEDIA]と[XML-GUIDE]で説明されているセキュリティの考慮事項の多くはまた、XMPPに適用されます。 XMPPのいくつかの態様は、このようなセクション11.1とスタイルシートや変換への外部参照の欠如の下で指定された禁止事項などが記載リスクを軽減するが、これらの問題を緩和する要素は、包括的でないことです。"
    },
    {
      "indent": 0,
      "text": "13.10. Information Leaks",
      "section_title": true,
      "ja": "13.10。情報漏えい"
    },
    {
      "indent": 0,
      "text": "13.10.1. IP Addresses",
      "section_title": true,
      "ja": "13.10.1。 IPアドレス"
    },
    {
      "indent": 3,
      "text": "A client's IP address and method of access MUST NOT be made public by a server (e.g., as typically occurs in [IRC]).",
      "ja": "（通常は[IRC]で発生したとして、例えば、）クライアントのIPアドレスとアクセスの方法は、サーバによって公開されてはなりません。"
    },
    {
      "indent": 0,
      "text": "13.10.2. Presence Information",
      "section_title": true,
      "ja": "13.10.2。プレゼンス情報"
    },
    {
      "indent": 3,
      "text": "One of the core aspects of XMPP is presence: information about the network availability of an XMPP entity (i.e., whether the entity is currently online or offline). A \"presence leak\" occurs when an entity's network availability is inadvertently and involuntarily revealed to a second entity that is not authorized to know the first entity's network availability.",
      "ja": "XMPPのコア側面の一つは存在である：XMPPエンティティ（すなわち、エンティティが現在オンラインかオフラインであるかどうか）のネットワークの可用性に関する情報。企業のネットワークの可用性が誤っと思わず最初のエンティティのネットワーク状況を知ることが許可されていない第二のエンティティに明らかにされたときに「プレゼンスリーク」が発生します。"
    },
    {
      "indent": 3,
      "text": "Although presence is discussed more fully in [XMPP-IM], it is important to note that an XMPP server MUST NOT leak presence. In particular at the core XMPP level, real-time addressing and network availability is associated with a specific connected resource; therefore, any disclosure of a connected resource's full JID comprises a presence leak. To help prevent such a presence leak, a server MUST NOT return different stanza errors depending on whether a potential attacker sends XML stanzas to the entity's bare JID (<localpart@domainpart>) or full JID (<localpart@domainpart/resourcepart>).",
      "ja": "存在は[XMPP-IM]で詳しく説明されているが、XMPPサーバーが存在することを漏洩してはならないことに注意することが重要です。コアXMPPレベルで、特に、リアルタイムアドレッシングおよびネットワーク利用可能性は、特定の接続リソースに関連付けられています。したがって、接続されたリソースの完全なJIDの開示は、プレゼンス・リークを含みます。そのようなプレゼンス漏れを防ぐために、サーバは、潜在的な攻撃者が企業の裸JID（<ローカル部@ domainpart>）、または完全なJID（<ローカル部分@ domainpart / resourcepart>）にXMLスタンザを送信するかどうかに応じて、異なるスタンザエラーを返してはなりません。"
    },
    {
      "indent": 0,
      "text": "13.11. Directory Harvesting",
      "section_title": true,
      "ja": "13.11。ディレクトリ収穫"
    },
    {
      "indent": 3,
      "text": "If a server generates an error stanza in response to receiving a stanza for a user account that does not exist, using the <service-unavailable/> stanza error condition (Section 8.3.3.19) can help protect against directory harvesting attacks, since this is the same error condition that is returned if, for instance, the namespace of an IQ child element is not understood, or if \"offline message storage\" ([XEP-0160]) or message forwarding is not enabled for a domain. However, subtle differences in the exact XML of error stanzas, as well as in the timing with which such errors are returned, can enable an attacker to determine the network presence of a user when more advanced blocking technologies are not used (see for instance [XEP-0016] and [XEP-0191]). Therefore, a server that exercises a higher level of caution might not return any error at all in response to certain kinds of received stanzas, so that a non-existent user appears to behave like a user that has no interest in conversing with the sender.",
      "ja": "サーバが存在していないユーザーアカウントのスタンザを受信することに応答して、エラーのスタンザを生成した場合、これがあることから、<サービス利用できません/>スタンザのエラー条件（セクション8.3.3.19）を使用すると、ディレクトリハーベスト攻撃から保護することができます例えば、IQ子要素の名前空間が理解されていない場合、または「オフラインメッセージ記憶」（[XEP-0160】）、またはメッセージ転送がドメインに対して有効になっていない、場合に返される同じエラー条件。より高度なブロッキング技術が使用されていない場合しかし、エラースタンザ、ならびにそのようなエラーが返されるタイミングでの正確なXMLの微妙な違いは、ユーザのネットワークの存在を決定するために攻撃を可能にすることができる（[例えば参照XEP-0016および[XEP-0191】）。存在しないユーザーが送信者と会話には関心を持っていないユーザーのように動作するように見えるそのため、注意のより高いレベルを行使するサーバは、受信スタンザの特定の種類に応じて、すべてのエラーが返されない場合があります。"
    },
    {
      "indent": 0,
      "text": "13.12. Denial of Service",
      "section_title": true,
      "ja": "13.12。サービス拒否"
    },
    {
      "indent": 3,
      "text": "[DOS] defines denial of service as follows:",
      "ja": "次のように[DOS]はサービスの拒否を定義します。"
    },
    {
      "indent": 6,
      "text": "A denial-of-service (DoS) attack is an attack in which one or more machines target a victim and attempt to prevent the victim from doing useful work. The victim can be a network server, client or router, a network link or an entire network, an individual Internet user or a company doing business using the Internet, an Internet Service Provider (ISP), country, or any combination of or variant on these.",
      "ja": "サービス拒否（DoS）攻撃1台以上のマシンが被害者を対象とし、有益な仕事をしてから被害者を防ぐためにしようとしている攻撃です。被害者は、ネットワーク・サーバ、クライアントまたはルータ、ネットワークリンクまたはネットワーク全体、個々のインターネットユーザまたはインターネット、インターネットサービスプロバイダ（ISP）を使用してビジネスを行う企業、国、または上の任意の組み合わせまたは変異体とすることができますこれら。"
    },
    {
      "indent": 3,
      "text": "Some considerations discussed in this document help to prevent denial-of-service attacks (e.g., the mandate that a server MUST NOT process XML stanzas from clients that have not yet provided appropriate authentication credentials and MUST NOT process XML stanzas from peer servers whose identity it has not either authenticated via SASL or weakly verified via Server Dialback).",
      "ja": "このドキュメントのヘルプで説明いくつかの考慮事項は、（サービス拒否攻撃を防ぐために例えば、まだ適切な認証資格情報を提供していないとアイデンティティをピア・サーバーからXMLスタンザを処理してはならない、サーバーがクライアントからのXMLスタンザを処理してはならない任務どちらか）SASLを介して認証または弱サーバーダイアルバックを経由して検証していません。"
    },
    {
      "indent": 3,
      "text": "In addition, [XEP-0205] provides a detailed discussion of potential denial-of-service attacks against XMPP systems along with best practices for preventing such attacks. The recommendations include:",
      "ja": "また、[XEP-0205]そのような攻撃を防止するためのベストプラクティスに沿ってXMPPシステムに対する潜在的なサービス拒否攻撃の詳細な説明を提供します。推奨事項は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "1. A server implementation SHOULD enable a server administrator to limit the number of TCP connections that it will accept from a given IP address at any one time. If an entity attempts to connect but the maximum number of TCP connections has been reached, the receiving server MUST NOT allow the new connection to proceed.",
      "ja": "1.サーバーの実装は、それがいずれかの時点で特定のIPアドレスから受け付けるTCP接続の数を制限するために、サーバ管理者を有効にする必要があります。エンティティが接続しようとしたが、TCP接続の最大数に達した場合は、受信側サーバーは、新しい接続を進行させてはなりません。"
    },
    {
      "indent": 3,
      "text": "2. A server implementation SHOULD enable a server administrator to limit the number of TCP connection attempts that it will accept from a given IP address in a given time period. If an entity attempts to connect but the maximum number of connection attempts has been reached, the receiving server MUST NOT allow the new connection to proceed.",
      "ja": "TCPコネクションの数を制限するために、サーバ管理者を有効にする必要があります。2.サーバーの実装は、それが与えられた時間内に特定のIPアドレスから受け付けることを試みます。エンティティが接続しようとしたが、接続試行の最大数に達した場合は、受信側サーバーは、新しい接続を進行させてはなりません。"
    },
    {
      "indent": 3,
      "text": "3. A server implementation SHOULD enable a server administrator to limit the number of connected resources it will allow an account to bind at any one time. If a client attempts to bind a resource but it has already reached the configured number of allowable resources, the receiving server MUST return a <resource-constraint/> stanza error (Section 8.3.3.18).",
      "ja": "3.サーバーの実装は、それは、アカウントが一度にバインドすることができます接続されているリソースの数を制限するために、サーバ管理者を有効にする必要があります。クライアントがリソースをバインドしようとするが、それはすでに許容リソースの構成された数に達した場合、受信側サーバーは、<リソース制約/>スタンザ誤り（セクション8.3.3.18）を返さなければなりません。"
    },
    {
      "indent": 3,
      "text": "4. A server implementation SHOULD enable a server administrator to limit the size of stanzas it will accept from a connected client or peer server (where \"size\" is inclusive of all XML markup as defined in Section 2.4 of [XML], from the opening \"<\" character of the stanza to the closing \">\" character). A deployed server's maximum stanza size MUST NOT be smaller than 10000 bytes, which reflects a reasonable compromise between the benefits of expressiveness for originating entities and the costs of stanza processing for servers. A server implementation SHOULD NOT blindly set 10000 bytes as the value for all deployments but instead SHOULD enable server administrators to set their own limits. If a connected resource or peer server sends a stanza that violates the upper limit, the receiving server MUST either return a <policy-violation/> stanza error (Section 8.3.3.12), thus allowing the sender to recover, or close the stream with a <policy-violation/> stream error (Section 4.9.3.14).",
      "ja": "開口部から、[XML]のセクション2.4で定義されるように前記サーバの実装は、それが接続されたクライアントまたはピアサーバから受け入れるスタンザの大きさを制限するために、サーバ管理者を有効にする必要があり（「サイズ」は、すべてのXMLマークアップを含む場合があります「<」クロージングへのスタンザの文字「>」文字）。展開サーバーの最大スタンザのサイズは、サーバー用のエンティティとスタンザ処理のコストを発信するための表現の利点間の妥当な妥協を反映して、10000バイトよりも小さくてはなりません。サーバの実装は、盲目的にすべての展開のための値として10000のバイトを設定すべきではありませんが、代わりに自分の限界を設定するには、サーバー管理者を有効にする必要があります。接続リソースまたはピアサーバが上限に違反スタンザを送信する場合、受信側サーバは、このように送信者が回復できるように、<ポリシー違反/>スタンザエラー（セクション8.3.3.12）を返す、または有するストリームを閉じる必要がありますいずれか<ポリシー違反/>ストリームエラー（セクション4.9.3.14）。"
    },
    {
      "indent": 3,
      "text": "5. A server implementation SHOULD enable a server administrator to limit the number of XML stanzas that a connected client is allowed to send to distinct recipients within a given time period. If a connected client sends too many stanzas to distinct recipients in a given time period, the receiving server SHOULD NOT process the stanza and instead SHOULD return a <policy-violation/> stanza error (Section 8.3.3.12).",
      "ja": "5.サーバの実装は、XMLの数を制限するために、サーバ管理者を有効にする必要が接続されたクライアントは、所定の時間内に別個の受信者に送信することを許可されていることをスタンザ。接続されたクライアントは、与えられた時間内に個別の受信者にあまりにも多くのスタンザを送信すると、受信側サーバーは、スタンザを処理すべきではなく、代わりに<ポリシー違反/>スタンザ誤り（セクション8.3.3.12）を返すべきです。"
    },
    {
      "indent": 3,
      "text": "6. A server implementation SHOULD enable a server administrator to limit the amount of bandwidth it will allow a connected client or peer server to use in a given time period.",
      "ja": "6.サーバーの実装は、それが接続されたクライアントまたはピアサーバーは、与えられた時間内に使用することができます帯域幅の量を制限するために、サーバ管理者を有効にする必要があります。"
    },
    {
      "indent": 3,
      "text": "7. A server implementation MAY enable a server administrator to limit the types of stanzas (based on the extended content \"payload\") that it will allow a connected resource or peer server send over an active connection. Such limits and restrictions are a matter of deployment policy.",
      "ja": "7.サーバの実装は、それが接続されたリソースまたはピアサーバがアクティブな接続を介して送信可能にすること（拡張コンテンツ「ペイロード」に基づいて）スタンザのタイプを制限するために、サーバ管理者を可能にすることができます。このような制限と制限は、展開方針の問題です。"
    },
    {
      "indent": 3,
      "text": "8. A server implementation MAY refuse to route or deliver any stanza that it considers to be abusive, with or without returning an error to the sender.",
      "ja": "8.サーバーの実装は、ルートへの拒否またはそれがでたり、送信者にエラーを返さず、虐待的であると考えていることを任意のスタンザを配信することができます。"
    },
    {
      "indent": 3,
      "text": "For more detailed recommendations regarding denial-of-service attacks in XMPP systems, refer to [XEP-0205].",
      "ja": "XMPPシステムにおけるサービス拒否攻撃に関するより詳細な推奨事項については、[XEP-0205]を参照してください。"
    },
    {
      "indent": 0,
      "text": "13.13. Firewalls",
      "section_title": true,
      "ja": "13.13。ファイアウォール"
    },
    {
      "indent": 3,
      "text": "Although DNS SRV records can instruct connecting entities to use TCP ports other than 5222 (client-to-server) and 5269 (server-to-server), communication using XMPP typically occurs over those ports, which are registered with the IANA (see Section 14). Use of these well-known ports allows administrators to easily enable or disable XMPP activity through existing and commonly deployed firewalls.",
      "ja": "DNS SRVレコードは、5222（クライアントからサーバー）と5269（サーバー間）以外のTCPポートを使用することを企業に接続するよう指示することができますが、XMPPを用いた通信は、一般的に（セクションを参照してくださいIANAに登録されているそれらのポート上で発生しました14）。これらのよく知られたポートを使用すると、管理者が簡単に既存および一般的に展開ファイアウォールを介しXMPPアクティビティを有効または無効にすることができます。"
    },
    {
      "indent": 0,
      "text": "13.14. Interdomain Federation",
      "section_title": true,
      "ja": "13.14。ドメイン間連盟"
    },
    {
      "indent": 3,
      "text": "The term \"federation\" is commonly used to describe communication between two servers.",
      "ja": "用語「フェデレーション」は、一般的に2つのサーバー間の通信を記述するために使用されます。"
    },
    {
      "indent": 3,
      "text": "Because service provisioning is a matter of policy, it is OPTIONAL for any given server to support federation. If a particular server enables federation, it SHOULD enable strong security as previously described to ensure both authentication and confidentiality; compliant implementations SHOULD support TLS and SASL for this purpose.",
      "ja": "サービスプロビジョニングは、ポリシーの問題であるので、それは、フェデレーションをサポートする任意のサーバーではオプションです。特定のサーバーがフェデレーションを有効にした場合、それが以前に認証と機密性の両方を確保するために説明するように、強力なセキュリティを有効にする必要があります。準拠した実装は、この目的のためにTLSとSASLをサポートする必要があります。"
    },
    {
      "indent": 3,
      "text": "Before RFC 3920 defined TLS plus SASL EXTERNAL with certificates for encryption and authentication of server-to-server streams, the only method for weak identity verification of a peer server was Server Dialback as defined in [XEP-0220]. Even when [DNSSEC] is used, Server Dialback provides only weak identity verification and provides no confidentiality or integrity. At the time of writing, Server Dialback is still the most widely used technique for some level of assurance over server-to-server streams. This reality introduces the possibility of a downgrade attack from TLS + SASL EXTERNAL to Server Dialback if an attacker can gain control of the channel and therefore convince the initiating server that the receiving server does not support TLS or does not have an appropriate certificate. To help prevent this attack, the parties SHOULD protect the channel using TLS before proceeding, even if the presented certificates are self-signed or otherwise untrusted.",
      "ja": "サーバー間のストリームの暗号化と認証用の証明書とRFC 3920に定義TLSプラスSASL EXTERNALする前に、ピア・サーバーの弱い本人確認のための唯一の方法は、[XEP-0220]で定義されているサーバーのダイアルバックでした。 [DNSSEC]を使用する場合でも、サーバーのダイアルバックが弱い本人確認を提供し、何の機密性や完全性を提供していません。執筆時点では、サーバーのダイアルバックは、まだサーバー間のストリームを超える保証のいくつかのレベルのために最も広く使用されている技術です。攻撃者はチャンネルのコントロールを得るため、受信サーバーがTLSをサポートしていないか、適切な証明書を持っていません開始するサーバーを納得させることができれば、この現実は、サーバーダイアルバックにTLS + SASL EXTERNALからダウングレード攻撃の可能性を紹介します。この攻撃を防ぐには、当事者が提示した証明書が自己署名またはその他の信頼されていない場合であっても、先に進む前にTLSを使用してチャネルを保護する必要があります。"
    },
    {
      "indent": 0,
      "text": "13.15. Non-Repudiation",
      "section_title": true,
      "ja": "13.15。否認防止"
    },
    {
      "indent": 3,
      "text": "Systems that provide both peer entity authentication and data integrity have the potential to enable an entity to prove to a third party that another entity intended to send particular data. Although XMPP systems can provide both peer entity authentication and data integrity, XMPP was never designed to provide non-repudiation.",
      "ja": "ピアエンティティ認証とデータの整合性の両方を提供するシステムは、他のエンティティが特定のデータを送信することを目的と第三者に証明するために、エンティティを有効にする可能性を秘めています。 XMPPシステムはピアエンティティの認証とデータの整合性の両方を提供することができるが、XMPPは、否認防止を提供するために設計されていませんでした。"
    },
    {
      "indent": 0,
      "text": "14. IANA Considerations",
      "section_title": true,
      "ja": "14. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "The following subsections update the registrations provided in [RFC3920]. This section is to be interpreted according to [IANA-GUIDE].",
      "ja": "以下のサブセクションでは、[RFC3920]に設けられた登録を更新します。このセクションでは、[IANA-GUIDE]に従って解釈されるべきです。"
    },
    {
      "indent": 0,
      "text": "14.1. XML Namespace Name for TLS Data",
      "section_title": true,
      "ja": "14.1。 TLSデータのXML名前空間名"
    },
    {
      "indent": 3,
      "text": "A URN sub-namespace for STARTTLS negotiation data in the Extensible Messaging and Presence Protocol (XMPP) is defined as follows. (This namespace name adheres to the format defined in [XML-REG].)",
      "ja": "次のように拡張メッセージングおよびプレゼンスプロトコル（XMPP）でSTARTTLSネゴシエーションデータのURNサブ名前空間が定義されています。 （この名前空間名は[XML-REG]で定義されたフォーマットに準拠します）。"
    },
    {
      "indent": 3,
      "text": "URI: urn:ietf:params:xml:ns:xmpp-tls Specification: RFC 6120 Description: This is the XML namespace name for STARTTLS negotiation data in the Extensible Messaging and Presence Protocol (XMPP) as defined by RFC 6120. Registrant Contact: IESG <iesg@ietf.org>",
      "ja": "URI：URN：IETF：のparams：XML：NS：XMPP-TLS仕様：RFC 6120の説明：RFC 6120登録者の接触によって定義されている。これは、拡張可能なメッセージングおよびプレゼンスプロトコル（XMPP）でSTARTTLSネゴシエーションデータのXML名前空間名です。 IESG <iesg@ietf.org>"
    },
    {
      "indent": 0,
      "text": "14.2. XML Namespace Name for SASL Data",
      "section_title": true,
      "ja": "14.2。 SASLデータ用のXML名前空間名"
    },
    {
      "indent": 3,
      "text": "A URN sub-namespace for SASL negotiation data in the Extensible Messaging and Presence Protocol (XMPP) is defined as follows. (This namespace name adheres to the format defined in [XML-REG].)",
      "ja": "次のように拡張メッセージングおよびプレゼンスプロトコル（XMPP）でSASLネゴシエーションデータのURNサブ名前空間が定義されています。 （この名前空間名は[XML-REG]で定義されたフォーマットに準拠します）。"
    },
    {
      "indent": 3,
      "text": "URI: urn:ietf:params:xml:ns:xmpp-sasl Specification: RFC 6120 Description: This is the XML namespace name for SASL negotiation data in the Extensible Messaging and Presence Protocol (XMPP) as defined by RFC 6120. Registrant Contact: IESG <iesg@ietf.org>",
      "ja": "URI：URN：IETF：のparams：XML：NS：XMPP-SASL仕様：RFC 6120の説明：RFC 6120登録者の接触によって定義されている。これは、拡張可能なメッセージングおよびプレゼンスプロトコル（XMPP）でSASLネゴシエーションデータのXML名前空間名です。 IESG <iesg@ietf.org>"
    },
    {
      "indent": 0,
      "text": "14.3. XML Namespace Name for Stream Errors",
      "section_title": true,
      "ja": "14.3。ストリームのエラーのためのXML名前空間名"
    },
    {
      "indent": 3,
      "text": "A URN sub-namespace for stream error data in the Extensible Messaging and Presence Protocol (XMPP) is defined as follows. (This namespace name adheres to the format defined in [XML-REG].)",
      "ja": "次のように拡張メッセージングおよびプレゼンスプロトコル（XMPP）でストリームエラーデータのURNサブ名前空間が定義されています。 （この名前空間名は[XML-REG]で定義されたフォーマットに準拠します）。"
    },
    {
      "indent": 3,
      "text": "URI: urn:ietf:params:xml:ns:xmpp-streams Specification: RFC 6120 Description: This is the XML namespace name for stream error data in the Extensible Messaging and Presence Protocol (XMPP) as defined by RFC 6120. Registrant Contact: IESG <iesg@ietf.org>",
      "ja": "URI：URN：IETF：のparams：XML：NS：RFC 6120登録者の接触によって定義されている。これは、拡張可能なメッセージングおよびプレゼンスプロトコル（XMPP）でストリームエラーデータのXML名前空間名です：XMPPストリーム仕様：RFC 6120の説明： IESG <iesg@ietf.org>"
    },
    {
      "indent": 0,
      "text": "14.4. XML Namespace Name for Resource Binding",
      "section_title": true,
      "ja": "14.4。リソースの結合のためのXML名前空間名"
    },
    {
      "indent": 3,
      "text": "A URN sub-namespace for resource binding in the Extensible Messaging and Presence Protocol (XMPP) is defined as follows. (This namespace name adheres to the format defined in [XML-REG].)",
      "ja": "次のように拡張メッセージングおよびプレゼンスプロトコル（XMPP）に結合リソースのURNサブ名前空間が定義されています。 （この名前空間名は[XML-REG]で定義されたフォーマットに準拠します）。"
    },
    {
      "indent": 3,
      "text": "URI: urn:ietf:params:xml:ns:xmpp-bind Specification: RFC 6120 Description: This is the XML namespace name for resource binding in the Extensible Messaging and Presence Protocol (XMPP) as defined by RFC 6120. Registrant Contact: IESG <iesg@ietf.org>",
      "ja": "URI：URN：IETF：のparams：XML：NS：XMPP-バインド仕様：RFC 6120の説明：IESG：これはRFC 6120登録者の接触によって定義されている拡張メッセージングおよびプレゼンスプロトコル（XMPP）に結合リソースのXML名前空間名です。 <iesg@ietf.org>"
    },
    {
      "indent": 0,
      "text": "14.5. XML Namespace Name for Stanza Errors",
      "section_title": true,
      "ja": "14.5。スタンザ・エラーのためのXML名前空間名"
    },
    {
      "indent": 3,
      "text": "A URN sub-namespace for stanza error data in the Extensible Messaging and Presence Protocol (XMPP) is defined as follows. (This namespace name adheres to the format defined in [XML-REG].)",
      "ja": "次のように拡張メッセージングおよびプレゼンスプロトコル（XMPP）でスタンザエラーデータ用のURNサブ名前空間が定義されています。 （この名前空間名は[XML-REG]で定義されたフォーマットに準拠します）。"
    },
    {
      "indent": 3,
      "text": "URI: urn:ietf:params:xml:ns:xmpp-stanzas Specification: RFC 6120 Description: This is the XML namespace name for stanza error data in the Extensible Messaging and Presence Protocol (XMPP) as defined by RFC 6120. Registrant Contact: IESG <iesg@ietf.org>",
      "ja": "URI：URN：IETF：のparams：XML：NS：XMPP-スタンザ仕様：RFC 6120の説明：RFC 6120登録者の接触によって定義されている。これは、拡張可能なメッセージングおよびプレゼンスプロトコル（XMPP）でスタンザエラーデータのXML名前空間名です。 IESG <iesg@ietf.org>"
    },
    {
      "indent": 0,
      "text": "14.6. GSSAPI Service Name",
      "section_title": true,
      "ja": "14.6。 GSSAPIサービス名"
    },
    {
      "indent": 3,
      "text": "The IANA has registered \"xmpp\" as a [GSS-API] service name, as defined under Section 6.6.",
      "ja": "セクション6.6の下で定義されるようにIANAは、[GSS-API]サービス名として「XMPP」を登録しました。"
    },
    {
      "indent": 0,
      "text": "14.7. Port Numbers and Service Names",
      "section_title": true,
      "ja": "14.7。ポート番号とサービス名"
    },
    {
      "indent": 3,
      "text": "The IANA has registered \"xmpp-client\" and \"xmpp-server\" as keywords for [TCP] ports 5222 and 5269, respectively. In accordance with [IANA-PORTS], this document updates the existing registration, as follows.",
      "ja": "IANAは、[TCP]ポートはそれぞれ5222と5269、のためのキーワードとして \"XMPPクライアント\" および \"XMPP-server\" を登録しました。次のように[IANA-PORTS]によれば、この文書は、既存の登録を更新します。"
    },
    {
      "indent": 3,
      "text": "Service Name: xmpp-client Transport Protocol: TCP Description: A service offering support for connections by XMPP client applications Registrant: IETF XMPP Working Group Contact: IESG <iesg@ietf.org> Reference: RFC 6120 Port Number: 5222",
      "ja": "サービス名：XMPPクライアントのトランスポートプロトコル：TCP説明：XMPPクライアントアプリケーションの登録者による接続のためのサポートを提供するサービス：IETF XMPPワーキンググループ連絡先：IESG <iesg@ietf.org>参考：RFC 6120ポート番号：5222"
    },
    {
      "indent": 3,
      "text": "Service Name: xmpp-server Transport Protocol: TCP Description: A service offering support for connections by XMPP server applications Registrant: IETF XMPP Working Group Contact: IESG <iesg@ietf.org> Reference: RFC 6120 Port Number: 5269",
      "ja": "サービス名：XMPPサーバートランスポートプロトコル：TCP説明：XMPPサーバーアプリケーションの登録者による接続のためのサポートを提供するサービス：IETF XMPPワーキンググループ連絡先：IESG <iesg@ietf.org>参考：RFC 6120ポート番号：5269"
    },
    {
      "indent": 0,
      "text": "15. Conformance Requirements",
      "section_title": true,
      "ja": "15.適合性要件"
    },
    {
      "indent": 3,
      "text": "This section describes a protocol feature set that summarizes the conformance requirements of this specification. This feature set is appropriate for use in software certification, interoperability testing, and implementation reports. For each feature, this section provides the following information:",
      "ja": "このセクションでは、この仕様の適合性要件をまとめたプロトコル機能セットを記述する。この機能セットは、ソフトウェアの認証、相互運用性テスト、および実装レポートでの使用に適しています。各機能については、このセクションでは、次の情報を提供します。"
    },
    {
      "indent": 3,
      "text": "o A human-readable name",
      "ja": "人間可読な名前O"
    },
    {
      "indent": 3,
      "text": "o An informational description",
      "ja": "情報説明O"
    },
    {
      "indent": 3,
      "text": "o A reference to the particular section of this document that normatively defines the feature",
      "ja": "規範的特徴を定義するこの文書の特定のセクションを参照O"
    },
    {
      "indent": 3,
      "text": "o Whether the feature applies to the Client role, the Server role, or both (where \"N/A\" signifies that the feature is not applicable to the specified role)",
      "ja": "機能は、クライアントの役割、サーバーの役割、またはその両方（「N / A」は機能が指定されたロールには適用されないことを意味している）に適用されるかどうかO"
    },
    {
      "indent": 3,
      "text": "o Whether the feature MUST or SHOULD be implemented, where the capitalized terms are to be understood as described in [KEYWORDS]",
      "ja": "特徴は、または大文字用語で記載されるように理解されるべきである場合、実装されるべき必要があるかどうかをO [KEYWORDS]"
    },
    {
      "indent": 3,
      "text": "The feature set specified here attempts to adhere to the concepts and formats proposed by Larry Masinter within the IETF's NEWTRK Working Group in 2005, as captured in [INTEROP]. Although this feature set is more detailed than called for by [REPORTS], it provides a suitable basis for the generation of implementation reports to be submitted in support of advancing this specification from Proposed Standard to Draft Standard in accordance with [PROCESS].",
      "ja": "ここで指定された機能セットは、[INTEROP]で撮影して、2005年にIETFのワーキンググループNEWTRK内ラリーMasinterによって提案された概念とフォーマットを遵守しようとします。この機能セットは[REPORTS]によって要求されるよりも詳細であるが、それは[PROCESS]に従って標準ドラフトすることが提案標準からこの仕様を前進をサポートするために提出する実装レポートの生成のための適切な基礎を提供します。"
    },
    {
      "indent": 3,
      "text": "Feature: bind-gen Description: Generate a random resource on demand. Section: Section 7.6 Roles: Client N/A, Server MUST.",
      "ja": "特集：バインド-GEN説明：オンデマンドでランダムなリソースを生成します。セクション：7.6節の役割：クライアントN / A、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: bind-mtn Description: Consider resource binding as mandatory-to-negotiate. Section: Section 7.3.1 Roles: Client MUST, Server MUST.",
      "ja": "特集：バインド-MTN説明：リソースは必須としてツー交渉結合考えてみましょう。セクション：セクション7.3.1役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: bind-restart Description: Do not restart the stream after negotiation of resource binding. Section: Section 7.3.2 Roles: Client MUST, Server MUST.",
      "ja": "特集：バインド・リスタートの概要：結合リソースの交渉の後、ストリームを再起動しないでください。セクション：セクション7.3.2役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: bind-support Description: Support binding of client resources to an authenticated stream. Section: Section 7 Roles: Client MUST, Server MUST.",
      "ja": "特集：バインド・サポートの説明：認証されたストリームにクライアントリソースの結合をサポートしています。セクション：セクション7つの役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: sasl-correlate Description: When authenticating a stream peer using SASL, correlate the authentication identifier resulting from SASL negotiation with the 'from' address (if any) of the stream header it received from the peer. Section: Section 6.4.6 Roles: Client SHOULD, Server SHOULD.",
      "ja": "機能：SASL-相関説明：SASLを使用してストリームピアを認証する場合、それはピアから受信したストリームのヘッダのアドレス（もしあれば）「から」でSASLネゴシエーションから得られる認証識別子を関連付けます。セクション：セクション6.4.6役割：クライアントSHOULD、サーバSHOULD。"
    },
    {
      "indent": 3,
      "text": "Feature: sasl-errors Description: Support SASL errors during the negotiation process. Section: Section 6.5 Roles: Client MUST, Server MUST.",
      "ja": "特集：SASL-エラー説明：サポートSASLエラー交渉プロセス中。セクション：セクション6.5役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: sasl-mtn Description: Consider SASL as mandatory-to-negotiate. Section: Section 6.3.1 Roles: Client MUST, Server MUST.",
      "ja": "特集：SASL-MTN説明：SASLが必須としてツー交渉考えてみましょう。セクション：セクション6.3.1役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: sasl-restart Description: Initiate or handle a stream restart after SASL negotiation. Section: Section 6.3.2 Roles: Client MUST, Server MUST.",
      "ja": "特集：SASL再始動説明：開始またはSASL交渉後のストリームの再起動を扱います。セクション：セクション6.3.2役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: sasl-support Description: Support the Simple Authentication and Security Layer for stream authentication. Section: Section 6 Roles: Client MUST, Server MUST.",
      "ja": "特集：SASLサポート説明：ストリーム認証用の簡易認証セキュリティー層をサポートしています。章：第6節の役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: security-mti-auth-scram Description: Support the SASL SCRAM mechanism for authentication only (this implies support for both the SCRAM-SHA-1 and SCRAM-SHA-1-PLUS variants). Section: Section 13.8 Roles: Client MUST, Server MUST.",
      "ja": "特集：セキュリティ-MTI-AUTH-スクラム説明：認証だけのためにSASL SCRAMメカニズムをサポートしています（これはSCRAM-SHA-1の両方をサポートすることを意味し、SCRAM-SHA-1-PLUSは、変異体）。セクション：セクション13.8役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: security-mti-both-external Description: Support TLS with SASL EXTERNAL for confidentiality and authentication. Section: Section 13.8 Roles: Client SHOULD, Server MUST.",
      "ja": "特集：セキュリティ-MTI-両方-外部説明：SASL EXTERNALとサポートTLS機密性と認証のため。セクション：セクション13.8役割：クライアントSHOULD、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: security-mti-both-plain Description: Support TLS using the TLS_RSA_WITH_AES_128_CBC_SHA ciphersuite plus the SASL PLAIN mechanism for confidentiality and authentication. Section: Section 13.8 Roles: Client SHOULD, Server MAY.",
      "ja": "特集：セキュリティ-MTI-両平野説明：TLS_RSA_WITH_AES_128_CBC_SHA暗号スイートプラス機密性および認証のためのSASL PLAINメカニズムを使用してサポートTLS。セクション：セクション13.8役割：クライアントSHOULD、MAYサーバー。"
    },
    {
      "indent": 3,
      "text": "Feature: security-mti-both-scram Description: Support TLS using the TLS_RSA_WITH_AES_128_CBC_SHA ciphersuite plus the SCRAM-SHA-1 and SCRAM-SHA-1-PLUS variants of the SASL SCRAM mechanism for confidentiality and authentication. Section: Section 13.8 Roles: Client MUST, Server MUST.",
      "ja": "特集：セキュリティ-MTI-両スクラム説明：TLS_RSA_WITH_AES_128_CBC_SHA暗号スイートプラスSCRAM-SHA-1および機密性と認証のためのSASL SCRAM機構のSCRAM-SHA-1-PLUS変異体を使用してサポートTLS。セクション：セクション13.8役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: security-mti-confidentiality Description: Support TLS using the TLS_RSA_WITH_AES_128_CBC_SHA ciphersuite for confidentiality only. Section: Section 13.8 Roles: Client N/A, Server SHOULD.",
      "ja": "特集：セキュリティ-MTI-機密説明：サポートTLSのみ機密保持のためにTLS_RSA_WITH_AES_128_CBC_SHA暗号スイートを使用しました。セクション：セクション13.8役割：クライアントN / A、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: stanza-attribute-from Description: Support the common 'from' attribute for all stanza kinds. Section: Section 8.1.2 Roles: Client MUST, Server MUST.",
      "ja": "特集：スタンザ属性-からの説明：すべてのスタンザの種類の属性「から」共通をサポートしています。セクション：セクション8.1.2役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: stanza-attribute-from-stamp Description: Stamp or rewrite the 'from' address of all stanzas received from connected clients. Section: Section 8.1.2.1 Roles: Client N/A, Server MUST.",
      "ja": "特集：スタンザ属性-からスタンプ説明：スタンプまたは接続されたクライアントから受信したすべてのスタンザの「から」のアドレスを書き換えます。セクション：セクション8.1.2.1役割：クライアントN / A、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: stanza-attribute-from-validate Description: Validate the 'from' address of all stanzas received from peer servers. Section: Section 8.1.2.2 Roles: Client N/A, Server MUST.",
      "ja": "特集：スタンザ属性-から-検証説明：ピア・サーバーから受信したすべてのスタンザの「から」アドレスを検証します。セクション：セクション8.1.2.2役割：クライアントN / A、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: stanza-attribute-id Description: Support the common 'id' attribute for all stanza kinds. Section: Section 8.1.3 Roles: Client MUST, Server MUST.",
      "ja": "特集：スタンザ属性-ID説明：すべてのスタンザの種類に共通の「ID」属性をサポートしています。セクション：セクション8.1.3役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: stanza-attribute-to Description: Support the common 'to' attribute for all stanza kinds. Section: Section 8.1.1 Roles: Client MUST, Server MUST.",
      "ja": "特集：スタンザ・属性への説明：すべてのスタンザの種類の属性「から」共通をサポートしています。セクション：セクション8.1.1役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: stanza-attribute-to-validate Description: Ensure that all stanzas received from peer servers include a 'to' address. Section: Section 8.1.1 Roles: Client N/A, Server MUST.",
      "ja": "特集：スタンザ属性ツー検証説明：ピア・サーバーから受信したすべてのスタンザがアドレス「に」が含まれていることを確認してください。セクション：セクション8.1.1役割：クライアントN / A、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: stanza-attribute-type Description: Support the common 'type' attribute for all stanza kinds. Section: Section 8.1.4 Roles: Client MUST, Server MUST.",
      "ja": "特集：スタンザ属性型説明：すべてのスタンザの種類に共通の「タイプ」属性をサポートしています。セクション：セクション8.1.4役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: stanza-attribute-xmllang Description: Support the common 'xml:lang' attribute for all stanza kinds. Section: Section 8.1.5 Roles: Client MUST, Server MUST.",
      "ja": "特集：スタンザ属性-xmllang説明：すべてのスタンザの種類の属性：共通の「LANGのxml」をサポートしています。セクション：セクション8.1.5役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: stanza-error Description: Generate and handle stanzas of type \"error\" for all stanza kinds. Section: Section 8.3 Roles: Client MUST, Server MUST.",
      "ja": "特集：スタンザ・エラーの説明：すべてのスタンザの種類のタイプのスタンザ「エラー」を生成し、処理します。セクション：セクション8.3役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: stanza-error-child Description: Ensure that stanzas of type \"error\" include an <error/> child element. Section: Section 8.3 Roles: Client MUST, Server MUST.",
      "ja": "特集：スタンザ誤り子説明：タイプのスタンザ「エラーは」<エラー/>子要素が含まれていることを確認してください。セクション：セクション8.3役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: stanza-error-id Description: Ensure that stanzas of type \"error\" preserve the 'id' provided in the triggering stanza. Section: Section 8.3 Roles: Client MUST, Server MUST.",
      "ja": "特集：スタンザ誤りID説明：タイプのスタンザ「エラー」トリガースタンザで提供「ID」を維持することを確認してください。セクション：セクション8.3役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: stanza-error-reply Description: Do not reply to a stanza of type \"error\" with another stanza of type \"error\". Section: Section 8.3 Roles: Client MUST, Server MUST.",
      "ja": "特集：スタンザ誤り返信説明：タイプ「エラー」の別のスタンザとタイプ「エラー」のスタンザに返信しないでください。セクション：セクション8.3役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: stanza-extension Description: Correctly process XML data qualified by an unsupported XML namespace, where \"correctly process\" means to ignore that portion of the stanza in the case of a message or presence stanza and return an error in the case of an IQ stanza (for the intended recipient), and to route or deliver the stanza (for a routing entity such as a server). Section: Section 8.4 Roles: Client MUST, Server MUST.",
      "ja": "機能：スタンザ拡張説明：正しく「正しく処理」メッセージまたは存在スタンザの場合にスタンザの部分を無視して、IQの場合にエラーを返すことを意味し、サポートされていないXML名前空間によって修飾されたXMLデータを処理スタンザ（意図された受信者のための）、および（サーバ等のルーティングエンティティの）経路またはスタンザを送達します。セクション：セクション8.4役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: stanza-iq-child Description: Include exactly one child element in an <iq/> stanza of type \"get\" or \"set\", zero or one child elements in an <iq/> stanza of type \"result\", and one or two child elements in an <iq/> stanza of type \"error\". Section: Section 8.2.3 Roles: Client MUST, Server MUST.",
      "ja": "特集：スタンザ-IQ-子説明：<IQ />タイプのスタンザ「取得」または「設定」、<IQ />スタンザタイプの「結果」で、ゼロまたは1子要素で正確に一つの子要素を含めると、 <IQ />タイプのスタンザ「エラー」中の1つのまたは2つの子要素。セクション：セクション8.2.3役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: stanza-iq-id Description: Ensure that all <iq/> stanzas include an 'id' attribute. Section: Section 8.2.3 Roles: Client MUST, Server MUST.",
      "ja": "特集：スタンザ-IQ-ID説明：すべての<IQ />スタンザは、 'ID' 属性が含まれていることを確認してください。セクション：セクション8.2.3役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: stanza-iq-reply Description: Reply to an <iq/> stanza of type \"get\" or \"set\" with an <iq/> stanza of type \"result\" or \"error\". Section: Section 8.2.3 Roles: Client MUST, Server MUST.",
      "ja": "特集：スタンザ-IQ-返信説明：タイプの<IQ />スタンザ「取得」またはタイプ「結果」または「エラー」の<IQ />スタンザで「設定」に返信します。セクション：セクション8.2.3役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: stanza-iq-type Description: Ensure that all <iq/> stanzas include a 'type' attribute whose value is \"get\", \"set\", \"result\", or \"error\". Section: Section 8.2.3 Roles: Client MUST, Server MUST.",
      "ja": "特集：スタンザ-IQ-タイプの説明：すべての<IQ />スタンザは、その値が「取得」、「セット」、「結果」、または「エラー」である「タイプ」属性が含まれていることを確認してください。セクション：セクション8.2.3役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: stanza-kind-iq Description: Support the <iq/> stanza. Section: Section 8.2.3 Roles: Client MUST, Server MUST.",
      "ja": "特集：スタンザ-種類-IQ説明：<IQ />スタンザをサポートしています。セクション：セクション8.2.3役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: stanza-kind-message Description: Support the <message/> stanza. Section: Section 8.2.1 Roles: Client MUST, Server MUST.",
      "ja": "特集：スタンザ・親切・メッセージの説明：<メッセージ/>スタンザをサポートしています。セクション：セクション8.2.1役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: stanza-kind-presence Description: Support the <presence/> stanza. Section: Section 8.2.2 Roles: Client MUST, Server MUST.",
      "ja": "特集：スタンザ・親切・プレゼンスの説明：<存在/>スタンザをサポートしています。セクション：セクション8.2.2役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: stream-attribute-initial-from Description: Include a 'from' attribute in the initial stream header. Section: Section 4.7.1 Roles: Client SHOULD, Server MUST.",
      "ja": "特集：ストリーム属性初期からの説明：初期ストリームヘッダ内の「から」属性を含めます。セクション：セクション4.7.1役割：クライアントSHOULD、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: stream-attribute-initial-lang Description: Include an 'xml:lang' attribute in the initial stream header. Section: Section 4.7.4 Roles: Client SHOULD, Server SHOULD.",
      "ja": "特集：ストリーム属性初期LANG説明：初期ストリームヘッダ内の属性：「LANGのxml」を含めます。セクション：4.7.4役割：クライアントSHOULD、サーバSHOULD。"
    },
    {
      "indent": 3,
      "text": "Feature: stream-attribute-initial-to Description: Include a 'to' attribute in the initial stream header. Section: Section 4.7.2 Roles: Client MUST, Server MUST.",
      "ja": "特集：ストリーム属性初期の説明：初期ストリームヘッダ内の「から」属性を含めます。セクション：セクション4.7.2役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: stream-attribute-response-from Description: Include a 'from' attribute in the response stream header. Section: Section 4.7.1 Roles: Client N/A, Server MUST.",
      "ja": "特集：ストリーム属性・レスポンスからの説明：応答ストリームのヘッダ内の「から」属性を含めます。セクション：セクション4.7.1役割：クライアントN / A、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: stream-attribute-response-id Description: Include an 'id' attribute in the response stream header. Section: Section 4.7.3 Roles: Client N/A, Server MUST.",
      "ja": "機能：ストリーム属性応答ID説明：応答ストリームのヘッダに「ID」属性を含めます。セクション：セクション4.7.3役割：クライアントN / A、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: stream-attribute-response-id-unique Description: Ensure that the 'id' attribute in the response stream header is unique within the context of the receiving entity. Section: Section 4.7.3 Roles: Client N/A, Server MUST.",
      "ja": "機能：ストリーム属性応答ID固有の説明：応答ストリームのヘッダに「ID」属性は、受信エンティティのコンテキスト内で一意であることを確認してください。セクション：セクション4.7.3役割：クライアントN / A、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: stream-attribute-response-to Description: Include a 'to' attribute in the response stream header. Section: Section 4.7.2 Roles: Client N/A, Server SHOULD.",
      "ja": "特集：ストリーム属性・レスポンスへの説明：応答ストリームヘッダ内の「から」属性を含めます。セクション：セクション4.7.2役割：クライアントN / A、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: stream-error-generate Description: Generate a stream error (followed by a closing stream tag and termination of the TCP connection) upon detecting a stream-related error condition. Section: Section 4.9 Roles: Client MUST, Server MUST.",
      "ja": "機能：説明ストリーム誤り生成：ストリームに関連したエラー状態を検出すると（TCPコネクションの閉鎖ストリームタグと終了に続いて）ストリームのエラーを生成します。セクション：セクション4.9役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: stream-fqdn-resolution Description: Resolve FQDNs before opening a TCP connection to the receiving entity. Section: Section 3.2 Roles: Client MUST, Server MUST.",
      "ja": "特集：ストリーム-FQDN解像度説明：受信エンティティへのTCP接続を開く前のFQDNを解決します。セクション：セクション3.2役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: stream-negotiation-complete Description: Do not consider the stream negotiation process to be complete until the receiving entity sends a stream features advertisement that is empty or that contains only voluntary-to-negotiate features. Section: Section 4.3.5 Roles: Client MUST, Server MUST.",
      "ja": "特集：ストリームネゴシエーション-完全な説明：受信エンティティは、ストリームが空であるか、それが唯一の自主的なツー交渉の機能が含まれている広告を備え送るまで完了することがストリーム交渉プロセスを考慮しないでください。セクション：4.3.5役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: stream-negotiation-features Description: Send stream features after sending a response stream header. Section: Section 4.3.2 Roles: Client N/A, Server MUST.",
      "ja": "特集：ストリーム・交渉・機能説明：応答ストリームヘッダを送信した後に、ストリーム機能を送ります。セクション：セクション4.3.2役割：クライアントN / A、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: stream-negotiation-restart Description: Consider the previous stream to be replaced upon negotiation of a stream feature that necessitates a stream restart, and send or receive a new initial stream header after negotiation of such a stream feature. Section: Section 4.3.3 Roles: Client MUST, Server MUST.",
      "ja": "特集：ストリームネゴシエーション再始動説明：前のストリームは、ストリームの再起動が必要となるストリーム機能の交渉時に交換する考えてみましょう、そして、そのようなストリーム機能の交渉の後、新たな初期ストリームヘッダを送信または受信します。セクション：4.3.3役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: stream-reconnect Description: Reconnect with exponential backoff if a TCP connection is terminated unexpectedly. Section: Section 3.3 Roles: Client MUST, Server MUST.",
      "ja": "特集：ストリーム再接続説明：TCP接続が予期せず終了した場合、指数バックオフして再接続します。セクション：3.3節の役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: stream-tcp-binding Description: Bind an XML stream to a TCP connection. Section: Section 3 Roles: Client MUST, Server MUST.",
      "ja": "特集：ストリーム-TCP結合の説明：TCP接続にXMLストリームをバインドします。セクション：セクション3つの役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: tls-certs Description: Check the identity specified in a certificate that is presented during TLS negotiation. Section: Section 13.7.2 Roles: Client MUST, Server MUST.",
      "ja": "特集：TLS-certsの説明：TLSネゴシエーション中に提示された証明書で指定されたアイデンティティを確認してください。セクション：セクション13.7.2役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: tls-mtn Description: Consider TLS as mandatory-to-negotiate if STARTTLS is the only feature advertised or if the STARTTLS feature advertisement includes an empty <required/> element. Section: Section 5.3.1 Roles: Client MUST, Server MUST.",
      "ja": "特集：TLS-MTN説明：STARTTLSは宣伝のみの機能である場合やSTARTTLS機能広告は、空の<必要/>要素が含まれている場合、TLSが必須としてツー交渉考えてみましょう。セクション：セクション5.3.1役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: tls-restart Description: Initiate or handle a stream restart after TLS negotiation. Section: Section 5.3.2 Roles: Client MUST, Server MUST.",
      "ja": "特集：TLS-再起動の説明：TLSネゴシエーション後にストリームの再起動を開始またはハンドル。セクション：セクション5.3.2役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: tls-support Description: Support Transport Layer Security for stream encryption. Section: Section 5 Roles: Client MUST, Server MUST.",
      "ja": "特集：TLS-サポート説明：ストリームの暗号化のサポートトランスポート層セキュリティ。セクション：セクション5つの役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: tls-correlate Description: When validating a certificate presented by a stream peer during TLS negotiation, correlate the validated identity with the 'from' address (if any) of the stream header it received from the peer. Section: Section 13.7.2 Roles: Client SHOULD, Server SHOULD.",
      "ja": "機能：TLS-相関説明：TLSネゴシエーション中にストリームピアによって提示された証明書を検証するとき、それはピアから受信したストリームのヘッダのアドレス（もしあれば）「から」と検証IDを関連付けます。セクション：セクション13.7.2役割：クライアントSHOULD、サーバSHOULD。"
    },
    {
      "indent": 3,
      "text": "Feature: xml-namespace-content-client Description: Support 'jabber:client' as a content namespace. Section: Section 4.8.2 Roles: Client MUST, Server MUST.",
      "ja": "特集：XML名前空間 - コンテンツ・クライアントの説明：サポート \"のjabber：クライアントのコンテンツの名前空間として。セクション：セクション4.8.2役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: xml-namespace-content-server Description: Support 'jabber:server' as a content namespace. Section: Section 4.8.2 Roles: Client N/A, Server MUST.",
      "ja": "特集：XML名前空間をコンテンツサーバー説明：サポート \"のjabber：サーバーのコンテンツの名前空間として。セクション：セクション4.8.2役割：クライアントN / A、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: xml-namespace-streams-declaration Description: Ensure that there is a namespace declaration for the 'http://etherx.jabber.org/streams' namespace. Section: Section 4.8.1 Roles: Client MUST, Server MUST.",
      "ja": "特集：XML名前空間ストリーム宣言の説明：「http://etherx.jabber.org/streams」名前空間の名前空間宣言があることを確認してください。セクション：セクション4.8.1役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: xml-namespace-streams-prefix Description: Ensure that all elements qualified by the 'http://etherx.jabber.org/streams' namespace are prefixed by the prefix (if any) defined in the namespace declaration. Section: Section 4.8.1 Roles: Client MUST, Server MUST.",
      "ja": "特集：XML名前空間ストリーム接頭辞の説明：「http://etherx.jabber.org/streams」名前空間で修飾されたすべての要素が名前空間宣言で定義された接頭辞（もしあれば）が付けていることを確認します。セクション：セクション4.8.1役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: xml-restriction-comment Description: Do not generate or accept XML comments. Section: Section 11.1 Roles: Client MUST, Server MUST.",
      "ja": "特集：XML-制限 - コメントの説明：XMLコメントを生成するか、受け入れないでください。セクション：セクション11.1役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: xml-restriction-dtd Description: Do not generate or accept internal or external DTD subsets. Section: Section 11.1 Roles: Client MUST, Server MUST.",
      "ja": "特集：XML-制限-DTDの説明：内部または外部DTDサブセットを生成したり、承認しないでください。セクション：セクション11.1役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: xml-restriction-pi Description: Do not generate or accept XML processing instructions. Section: Section 11.1 Roles: Client MUST, Server MUST.",
      "ja": "特集：XML-制限-π説明：XML処理命令を生成したり、承認しないでください。セクション：セクション11.1役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: xml-restriction-ref Description: Do not generate or accept internal or external entity references with the exception of the predefined entities. Section: Section 11.1 Roles: Client MUST, Server MUST.",
      "ja": "特集：XML-制限-refの説明：定義済みエンティティを除いて、内部または外部実体参照を生成したり、承認しないでください。セクション：セクション11.1役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: xml-wellformed-xml Description: Do not generate or accept data that is not XML-well-formed. Section: Section 11.3 Roles: Client MUST, Server MUST.",
      "ja": "特集：XMLウェルに形成され、XML記述：XML-整形式でないデータを生成したり、承認しないでください。セクション：セクション11.3ほくろ：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 3,
      "text": "Feature: xml-wellformed-ns Description: Do not generate or accept data that is not namespace-well-formed. Section: Section 11.3 Roles: Client MUST, Server MUST.",
      "ja": "特集：XML-WELLFORMED-NSの説明：名前空間-WELLFORMEDでないデータを生成したり、承認しないでください。セクション：セクション11.3役割：クライアントMUST、サーバー必要があります。"
    },
    {
      "indent": 0,
      "text": "16. References",
      "section_title": true,
      "ja": "16.参考文献"
    },
    {
      "indent": 0,
      "text": "16.1. Normative References",
      "section_title": true,
      "ja": "16.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[BASE64] Josefsson, S., \"The Base16, Base32, and Base64 Data Encodings\", RFC 4648, October 2006.",
      "ja": "[BASE64] Josefsson氏、S.、 \"Base16、Base32、およびBase64でデータエンコーディング\"、RFC 4648、2006年10月。"
    },
    {
      "indent": 3,
      "text": "[CHANNEL] Williams, N., \"On the Use of Channel Bindings to Secure Channels\", RFC 5056, November 2007.",
      "ja": "\"チャネルを確保するチャネルバインディングの使用について\" [CHANNEL]ウィリアムズ、N.、RFC 5056、2007年11月。"
    },
    {
      "indent": 3,
      "text": "[CHANNEL-TLS] Altman, J., Williams, N., and L. Zhu, \"Channel Bindings for TLS\", RFC 5929, July 2010.",
      "ja": "[CHANNEL-TLS]アルトマン、J.、ウィリアムズ、N.、およびL.朱、 \"TLSのチャネルバインディング\"、RFC 5929、2010年7月。"
    },
    {
      "indent": 3,
      "text": "[CHARSETS] Alvestrand, H., \"IETF Policy on Character Sets and Languages\", BCP 18, RFC 2277, January 1998.",
      "ja": "[CHARSETS] Alvestrand、H.、 \"文字セットと言語のIETF方針\"、BCP 18、RFC 2277、1998年1月。"
    },
    {
      "indent": 3,
      "text": "[DNS-CONCEPTS] Mockapetris, P., \"Domain names - concepts and facilities\", STD 13, RFC 1034, November 1987.",
      "ja": "[DNS-CONCEPTS] Mockapetris、P.、 \"ドメイン名 - 概念と施設\"、STD 13、RFC 1034、1987年11月。"
    },
    {
      "indent": 3,
      "text": "[DNS-SRV] Gulbrandsen, A., Vixie, P., and L. Esibov, \"A DNS RR for specifying the location of services (DNS SRV)\", RFC 2782, February 2000.",
      "ja": "[DNS-SRV] Gulbrandsenの、A.、いるVixie、P.、およびL. Esibov、 \"（DNSのSRV）サービスの位置を特定するためのDNS RR\"、RFC 2782、2000年2月。"
    },
    {
      "indent": 3,
      "text": "[IPv6-ADDR] Kawamura, S. and M. Kawashima, \"A Recommendation for IPv6 Address Text Representation\", RFC 5952, August 2010.",
      "ja": "[IPv6の-ADDR]川村、S.とM.川島、RFC 5952、2010年8月、 \"IPv6アドレスのテキスト表現のための勧告\"。"
    },
    {
      "indent": 3,
      "text": "[KEYWORDS] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[キーワード]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[LANGMATCH] Phillips, A. and M. Davis, \"Matching of Language Tags\", BCP 47, RFC 4647, September 2006.",
      "ja": "[LANGMATCH]フィリップス、A.とM.デイヴィス、 \"言語タグのマッチング\"、BCP 47、RFC 4647、2006年9月。"
    },
    {
      "indent": 3,
      "text": "[LANGTAGS] Phillips, A. and M. Davis, \"Tags for Identifying Languages\", BCP 47, RFC 5646, September 2009.",
      "ja": "[LANGTAGS]フィリップス、A.とM.デイヴィス、 \"言語を識別するためのタグ\"、BCP 47、RFC 5646、2009年9月。"
    },
    {
      "indent": 3,
      "text": "[OCSP] Myers, M., Ankney, R., Malpani, A., Galperin, S., and C. Adams, \"X.509 Internet Public Key Infrastructure Online Certificate Status Protocol - OCSP\", RFC 2560, June 1999.",
      "ja": "[OCSP]マイヤーズ、M.、Ankney、R.、Malpani、A.、Galperin、S.、およびC.アダムス、 \"X.509のインターネット公開鍵暗号基盤のオンライン証明書状態プロトコル -  OCSP\"、RFC 2560、1999年6月。"
    },
    {
      "indent": 3,
      "text": "[PKIX] Cooper, D., Santesson, S., Farrell, S., Boeyen, S., Housley, R., and W. Polk, \"Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile\", RFC 5280, May 2008.",
      "ja": "[PKIX]クーパー、D.、Santesson、S.、ファレル、S.、Boeyen、S.、Housley氏、R.、およびW.ポーク、「インターネットX.509公開鍵暗号基盤証明書と証明書失効リスト（CRL）のプロフィール」、RFC 5280、2008年5月。"
    },
    {
      "indent": 3,
      "text": "[PKIX-ALGO] Jonsson, J. and B. Kaliski, \"Public-Key Cryptography Standards (PKCS) #1: RSA Cryptography Specifications Version 2.1\", RFC 3447, February 2003.",
      "ja": "[PKIX-ALGO]ジョンソン、J.とB. Kaliski、 \"公開鍵暗号規格（PKCS）＃1：RSA暗号仕様バージョン2.1\"、RFC 3447、2003年2月。"
    },
    {
      "indent": 3,
      "text": "[PKIX-SRV] Santesson, S., \"Internet X.509 Public Key Infrastructure Subject Alternative Name for Expression of Service Name\", RFC 4985, August 2007.",
      "ja": "[PKIX-SRV] Santesson、S.、 \"インターネットX.509公開鍵インフラストラクチャサービス名の発現のためのサブジェクトの別名\"、RFC 4985、2007年8月。"
    },
    {
      "indent": 3,
      "text": "[PLAIN] Zeilenga, K., \"The PLAIN Simple Authentication and Security Layer (SASL) Mechanism\", RFC 4616, August 2006.",
      "ja": "[PLAIN] Zeilenga、K.、 \"PLAIN簡易認証セキュリティー層（SASL）メカニズム\"、RFC 4616、2006年8月。"
    },
    {
      "indent": 3,
      "text": "[RANDOM] Eastlake, D., Schiller, J., and S. Crocker, \"Randomness Requirements for Security\", BCP 106, RFC 4086, June 2005.",
      "ja": "[ランダム]イーストレーク、D.、シラー、J.、およびS.クロッカー、 \"セキュリティのためのランダム要件\"、BCP 106、RFC 4086、2005年6月。"
    },
    {
      "indent": 3,
      "text": "[SASL] Melnikov, A. and K. Zeilenga, \"Simple Authentication and Security Layer (SASL)\", RFC 4422, June 2006.",
      "ja": "[SASL]メルニコフ、A.およびK. Zeilenga、 \"簡易認証セキュリティー層（SASL）\"、RFC 4422、2006年6月。"
    },
    {
      "indent": 3,
      "text": "[SCRAM] Newman, C., Menon-Sen, A., Melnikov, A., and N. Williams, \"Salted Challenge Response Authentication Mechanism (SCRAM) SASL and GSS-API Mechanisms\", RFC 5802, July 2010.",
      "ja": "【SCRAM]ニューマン、C.、メノンセン、A.、メルニコフ、A.、およびN.ウィリアムズ、 \"塩蔵チャレンジレスポンス認証メカニズム（SCRAM）SASLとGSS-APIメカニズム\"、RFC 5802、2010年7月。"
    },
    {
      "indent": 3,
      "text": "[STRONGSEC] Schiller, J., \"Strong Security Requirements for Internet Engineering Task Force Standard Protocols\", BCP 61, RFC 3365, August 2002.",
      "ja": "[STRONGSEC]シラー、J.、BCP 61、RFC 3365、2002年8月 \"インターネットエンジニアリングタスクフォース標準プロトコルのための強力なセキュリティ要件\"。"
    },
    {
      "indent": 3,
      "text": "[TCP] Postel, J., \"Transmission Control Protocol\", STD 7, RFC 793, September 1981.",
      "ja": "[TCP]ポステル、J.、 \"伝送制御プロトコル\"、STD 7、RFC 793、1981年9月。"
    },
    {
      "indent": 3,
      "text": "[TLS] Dierks, T. and E. Rescorla, \"The Transport Layer Security (TLS) Protocol Version 1.2\", RFC 5246, August 2008.",
      "ja": "[TLS]ダークス、T.およびE.レスコラ、 \"トランスポート層セキュリティ（TLS）プロトコルバージョン1.2\"、RFC 5246、2008年8月。"
    },
    {
      "indent": 3,
      "text": "[TLS-CERTS] Saint-Andre, P. and J. Hodges, \"Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)\", RFC 6125, March 2011.",
      "ja": "[TLS-CERTS]サンアンドレ、P.およびJ.ホッジス、「表現とドメインベースのアプリケーションサービスのアイデンティティの検証、インターネット公開鍵インフラストラクチャ内のトランスポート層セキュリティ（TLS）のコンテキストでX.​​509（PKIX）証明書を使用しました」、RFC 6125、2011年3月。"
    },
    {
      "indent": 3,
      "text": "[TLS-NEG] Rescorla, E., Ray, M., Dispensa, S., and N. Oskov, \"Transport Layer Security (TLS) Renegotiation Indication Extension\", RFC 5746, February 2010.",
      "ja": "[TLS-NEG]レスコラ、E.、レイ、M.、Dispensa、S.、およびN. Oskov、 \"トランスポート層セキュリティ（TLS）再ネゴシエーション指示拡張子\"、RFC 5746、2010年2月。"
    },
    {
      "indent": 3,
      "text": "[TLS-SSL2] Turner, S. and T. Polk, \"Prohibiting Secure Sockets Layer (SSL) Version 2.0\", RFC 6176, March 2011.",
      "ja": "[TLS-SSL2]ターナー、S.とT.ポーク、RFC 6176、2011年3月 \"のSecure Sockets Layer（SSL）バージョン2.0を禁止します\"。"
    },
    {
      "indent": 3,
      "text": "[UCS2] International Organization for Standardization, \"Information Technology - Universal Multiple-octet coded Character Set (UCS) - Amendment 2: UCS Transformation Format 8 (UTF-8)\", ISO Standard 10646-1 Addendum 2, October 1996.",
      "ja": "[UCS2]国際標準化機構、 \"情報技術 - ユニバーサルマルチオクテット符号化文字集合（UCS） - 修正2：UCS変換形式8（UTF-8）\"、ISO規格10646-1補遺2、1996年10月。"
    },
    {
      "indent": 3,
      "text": "[UNICODE] The Unicode Consortium, \"The Unicode Standard, Version 6.0\", 2010, <http://www.unicode.org/versions/Unicode6.0.0/>.",
      "ja": "[UNICODE]ユニコードコンソーシアム、 \"Unicode規格、バージョン6.0\" 2010年、<http://www.unicode.org/versions/Unicode6.0.0/>。"
    },
    {
      "indent": 3,
      "text": "[UTF-8] Yergeau, F., \"UTF-8, a transformation format of ISO 10646\", STD 63, RFC 3629, November 2003.",
      "ja": "[UTF-8] Yergeau、F.、 \"UTF-8、ISO 10646の変換フォーマット\"、STD 63、RFC 3629、2003年11月。"
    },
    {
      "indent": 3,
      "text": "[URI] Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform Resource Identifier (URI): Generic Syntax\", STD 66, RFC 3986, January 2005.",
      "ja": "[URI]バーナーズ - リー、T.、フィールディング、R.、およびL. Masinter、 \"ユニフォームリソース識別子（URI）：汎用構文\"、STD 66、RFC 3986、2005年1月。"
    },
    {
      "indent": 3,
      "text": "[X509] International Telecommunications Union, \"Information technology - Open Systems Interconnection - The Directory: Public-key and attribute certificate frameworks\", ITU-T Recommendation X.509, ISO Standard 9594-8, March 2000.",
      "ja": "[X509]国際電気通信連合、「情報技術 - 開放型システム間相互接続 - ディレクトリ：公開鍵と属性証明書の枠組み」、ITU-T勧告X.509、ISO規格9594から8、2000年3月。"
    },
    {
      "indent": 3,
      "text": "[XML] Maler, E., Yergeau, F., Sperberg-McQueen, C., Paoli, J., and T. Bray, \"Extensible Markup Language (XML) 1.0 (Fifth Edition)\", World Wide Web Consortium Recommendation REC-xml-20081126, November 2008, <http://www.w3.org/TR/2008/REC-xml-20081126>.",
      "ja": "[XML] MALER、E.、Yergeau、F.、Sperberg-マックィーン、C.、パオリ、J.、およびT.ブレイ、 \"拡張マークアップ言語（XML）1.0（第5版）\"、ワールドワイドウェブコンソーシアム推薦REC -xml-20081126、2008年11月、<http://www.w3.org/TR/2008/REC-xml-20081126>。"
    },
    {
      "indent": 3,
      "text": "[XML-GUIDE] Hollenbeck, S., Rose, M., and L. Masinter, \"Guidelines for the Use of Extensible Markup Language (XML) within IETF Protocols\", BCP 70, RFC 3470, January 2003.",
      "ja": "[XML-GUIDE]ホレンベック、S.、ローズ、M.、およびL. Masinter、 \"IETFプロトコル内の拡張マークアップ言語（XML）の使用のためのガイドライン\"、BCP 70、RFC 3470、2003年1月。"
    },
    {
      "indent": 3,
      "text": "[XML-MEDIA] Murata, M., St. Laurent, S., and D. Kohn, \"XML Media Types\", RFC 3023, January 2001.",
      "ja": "[XML-MEDIA]村田、M.、サンローラン、S.、およびD.コーン、 \"XMLのメディアタイプ\"、RFC 3023、2001年1月。"
    },
    {
      "indent": 3,
      "text": "[XML-NAMES] Thompson, H., Hollander, D., Layman, A., Bray, T., and R. Tobin, \"Namespaces in XML 1.0 (Third Edition)\", World Wide Web Consortium Recommendation REC-xml-names-20091208, December 2009, <http://www.w3.org/TR/2009/REC-xml-names-20091208>.",
      "ja": "[XML-NAMES]トンプソン、H.、オランダ、D.、素人、A.、ブレイ、T.、およびR.トビン、 \"XML 1.0での名前空間（第3版）\"、ワールドワイドウェブコンソーシアム勧告REC-XML-名前-20091208、2009年12月、<http://www.w3.org/TR/2009/REC-xml-names-20091208>。"
    },
    {
      "indent": 3,
      "text": "[XMPP-ADDR] Saint-Andre, P., \"Extensible Messaging and Presence Protocol (XMPP): Address Format\", RFC 6122, March 2011.",
      "ja": "[XMPP-ADDR]サンアンドレ、P.、 \"拡張メッセージングおよびプレゼンスプロトコル（XMPP）：アドレス形式\"、RFC 6122、2011年3月。"
    },
    {
      "indent": 3,
      "text": "[XMPP-IM] Saint-Andre, P., \"Extensible Messaging and Presence Protocol (XMPP): Instant Messaging and Presence\", RFC 6121, March 2011.",
      "ja": "[XMPP-IM]サンアンドレ、P.、 \"拡張メッセージングおよびプレゼンスプロトコル（XMPP）：インスタントメッセージングとプレゼンス\"、RFC 6121、2011年3月。"
    },
    {
      "indent": 0,
      "text": "16.2. Informative References",
      "section_title": true,
      "ja": "16.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[AAA] Housley, R. and B. Aboba, \"Guidance for Authentication, Authorization, and Accounting (AAA) Key Management\", BCP 132, RFC 4962, July 2007.",
      "ja": "[AAA] Housley氏、R。およびB. Aboba、 \"認証、許可、アカウンティング（AAA）キー管理のための指針\"、BCP 132、RFC 4962、2007年7月。"
    },
    {
      "indent": 3,
      "text": "[ABNF] Crocker, D. and P. Overell, \"Augmented BNF for Syntax Specifications: ABNF\", STD 68, RFC 5234, January 2008.",
      "ja": "、STD 68、RFC 5234、2008年1月： \"ABNF構文仕様のための増大しているBNF\" [ABNF]クロッカー、D.、およびP. Overell、。"
    },
    {
      "indent": 3,
      "text": "[ACAP] Newman, C. and J. Myers, \"ACAP -- Application Configuration Access Protocol\", RFC 2244, November 1997.",
      "ja": "[ACAP]ニューマン、C.及びJ.マイヤーズ、 \"ACAP  - アプリケーション構成アクセスプロトコル\"、RFC 2244、1997年11月。"
    },
    {
      "indent": 3,
      "text": "[ANONYMOUS] Zeilenga, K., \"Anonymous Simple Authentication and Security Layer (SASL) Mechanism\", RFC 4505, June 2006.",
      "ja": "[ANONYMOUS] Zeilenga、K.、 \"匿名簡易認証セキュリティー層（SASL）メカニズム\"、RFC 4505、2006年6月。"
    },
    {
      "indent": 3,
      "text": "[ASN.1] CCITT, \"Recommendation X.208: Specification of Abstract Syntax Notation One (ASN.1)\", 1988.",
      "ja": "[ASN.1] CCITT、 \"勧告X.208：抽象構文記法1（ASN.1）の仕様\"、1988。"
    },
    {
      "indent": 3,
      "text": "[DIGEST-MD5] Leach, P. and C. Newman, \"Using Digest Authentication as a SASL Mechanism\", RFC 2831, May 2000.",
      "ja": "[DIGEST-MD5]リーチ、P.とC.ニューマン、RFC 2831、2000年5月 \"SASLメカニズムとしてダイジェスト認証を使用します\"。"
    },
    {
      "indent": 3,
      "text": "[DNSSEC] Arends, R., Austein, R., Larson, M., Massey, D., and S. Rose, \"DNS Security Introduction and Requirements\", RFC 4033, March 2005.",
      "ja": "[DNSSEC]アレンズ、R.、Austeinと、R.、ラーソン、M.、マッシー、D.、およびS.ローズ、 \"DNSセキュリティ序論と要件\"、RFC 4033、2005年3月。"
    },
    {
      "indent": 3,
      "text": "[DNS-TXT] Rosenbaum, R., \"Using the Domain Name System To Store Arbitrary String Attributes\", RFC 1464, May 1993.",
      "ja": "[DNS-TXT]ローゼンバウム、R.、 \"任意の文字列は、属性を格納するためにドメインネームシステムを使用する\"、RFC 1464、1993年5月。"
    },
    {
      "indent": 3,
      "text": "[DOS] Handley, M., Rescorla, E., and IAB, \"Internet Denial-of-Service Considerations\", RFC 4732, December 2006.",
      "ja": "[DOS]ハンドリー、M.、レスコラ、E.、およびIAB、 \"インターネットサービス拒否の注意事項\"、RFC 4732、2006年12月。"
    },
    {
      "indent": 3,
      "text": "[E2E-REQS] Saint-Andre, P., \"Requirements for End-to-End Encryption in the Extensible Messaging and Presence Protocol (XMPP)\", Work in Progress, March 2010.",
      "ja": "[E2E-REQS]サンアンドレ、P.、「拡張メッセージングおよびプレゼンスプロトコル（XMPP）でのエンド・ツー・エンドの暗号化のための要件」、進歩、2010年3月での作業。"
    },
    {
      "indent": 3,
      "text": "[EMAIL-ARCH] Crocker, D., \"Internet Mail Architecture\", RFC 5598, July 2009.",
      "ja": "[EMAIL-ARCH]クロッカー、D.、 \"インターネットメールのアーキテクチャ\"、RFC 5598、2009年7月。"
    },
    {
      "indent": 3,
      "text": "[ETHERNET] \"Information technology - Telecommunications and information exchange between systems - Local and metropolitan area networks - Specific requirements - Part 3: Carrier sense multiple access with collision detection (CSMA/CD) access method and physical layer specifications\", IEEE Standard 802.3, September 1998.",
      "ja": "[ETHERNET]「情報技術 - 地方とメトロポリタンエリアネットワーク -   - 電気通信及びシステム間の情報交換の具体的な要件 - パート3：衝突検出（CSMA / CD）アクセス方式および物理層仕様とキャリア検知多重アクセス」、IEEE規格802.​​3、 1998年9月。"
    },
    {
      "indent": 3,
      "text": "[GSS-API] Linn, J., \"Generic Security Service Application Program Interface Version 2, Update 1\", RFC 2743, January 2000.",
      "ja": "[GSS-API]リン、J.、 \"ジェネリックセキュリティーサービス適用業務プログラムインタフェースバージョン2、アップデート1\"、RFC 2743、2000年1月。"
    },
    {
      "indent": 3,
      "text": "[HASHES] Hoffman, P. and B. Schneier, \"Attacks on Cryptographic Hashes in Internet Protocols\", RFC 4270, November 2005.",
      "ja": "[HASHES]ホフマン、P.とB.シュナイアー、 \"インターネットプロトコルで暗号化ハッシュに対する攻撃\"、RFC 4270、2005年11月。"
    },
    {
      "indent": 3,
      "text": "[HTTP] Fielding, R., Gettys, J., Mogul, J., Frystyk, H., Masinter, L., Leach, P., and T. Berners-Lee, \"Hypertext Transfer Protocol -- HTTP/1.1\", RFC 2616, June 1999.",
      "ja": "[HTTP]フィールディング、R.、ゲティス、J.、モーグル、J.、Frystyk、H.、Masinter、L.、リーチ、P.、およびT.バーナーズ - リー、 \"ハイパーテキスト転送プロトコル -  HTTP / 1.1\" 、RFC 2616、1999年6月。"
    },
    {
      "indent": 3,
      "text": "[IANA-GUIDE] Narten, T. and H. Alvestrand, \"Guidelines for Writing an IANA Considerations Section in RFCs\", BCP 26, RFC 5226, May 2008.",
      "ja": "[IANA-GUIDE] Narten氏、T.とH. Alvestrand、 \"RFCsにIANA問題部に書くためのガイドライン\"、BCP 26、RFC 5226、2008年5月。"
    },
    {
      "indent": 3,
      "text": "[IANA-PORTS] Cotton, M., Eggert, L., Touch, J., Westerlund, M., and S. Cheshire, \"Internet Assigned Numbers Authority (IANA) Procedures for the Management of the Transport Protocol Port Number and Service Name Registry\", Work in Progress, February 2011.",
      "ja": "[IANA-PORTS]綿、M.、Eggertの、L.、タッチ、J.、ウェスター、M.、およびS.チェシャー、「IANA（Internet Assigned Numbers Authority）のトランスポートプロトコルのポート番号とサービスの管理のための手順レジストリ」、進歩、2011年2月における作業に名前を付けます。"
    },
    {
      "indent": 3,
      "text": "[IMAP] Crispin, M., \"INTERNET MESSAGE ACCESS PROTOCOL - VERSION 4rev1\", RFC 3501, March 2003.",
      "ja": "[IMAP]クリスピン、M.、 \"インターネットメッセージアクセスプロトコル - バージョン4rev1\"、RFC 3501、2003年3月。"
    },
    {
      "indent": 3,
      "text": "[IMP-REQS] Day, M., Aggarwal, S., and J. Vincent, \"Instant Messaging / Presence Protocol Requirements\", RFC 2779, February 2000.",
      "ja": "[IMP-REQS]日、M.、アガルワル、S.、およびJ.ヴィンセント、 \"インスタントメッセージング/プレゼンスプロトコル要件\"、RFC 2779、2000年2月。"
    },
    {
      "indent": 3,
      "text": "[INTEROP] Masinter, L., \"Formalizing IETF Interoperability Reporting\", Work in Progress, October 2005.",
      "ja": "\"IETFの相互運用性のレポート形式化\" [INTEROP] Masinter、L.、進歩、2005年10月に作業。"
    },
    {
      "indent": 3,
      "text": "[IRC] Kalt, C., \"Internet Relay Chat: Architecture\", RFC 2810, April 2000.",
      "ja": "[IRC] Kalt、C.は、 \"インターネットリレーチャット：アーキテクチャ\"、RFC 2810、2000年4月を。"
    },
    {
      "indent": 3,
      "text": "[IRI] Duerst, M. and M. Suignard, \"Internationalized Resource Identifiers (IRIs)\", RFC 3987, January 2005.",
      "ja": "[IRI] Duerst、M.およびM. Suignard、 \"国際化リソース識別Fiers（IRI）\"、RFC 3987、2005年1月。"
    },
    {
      "indent": 3,
      "text": "[LDAP] Zeilenga, K., \"Lightweight Directory Access Protocol (LDAP): Technical Specification Road Map\", RFC 4510, June 2006.",
      "ja": "[LDAP] Zeilenga、K.、 \"ライトウェイトディレクトリアクセスプロトコル（LDAP）：技術仕様ロードマップ\"、RFC 4510、2006年6月。"
    },
    {
      "indent": 3,
      "text": "[LINKLOCAL] Cheshire, S., Aboba, B., and E. Guttman, \"Dynamic Configuration of IPv4 Link-Local Addresses\", RFC 3927, May 2005.",
      "ja": "[LINKLOCAL]チェシャー、S.、Aboba、B.、およびE.ガットマン、 \"IPv4のリンクローカルアドレスの動的構成\"、RFC 3927、2005年5月。"
    },
    {
      "indent": 3,
      "text": "[MAILBOXES] Crocker, D., \"MAILBOX NAMES FOR COMMON SERVICES, ROLES AND FUNCTIONS\", RFC 2142, May 1997.",
      "ja": "[MAILBOXES]クロッカー、D.、 \"COMMON SERVICES FORメールボックス名、役割・機能\"、RFC 2142、1997年5月。"
    },
    {
      "indent": 3,
      "text": "[POP3] Myers, J. and M. Rose, \"Post Office Protocol - Version 3\", STD 53, RFC 1939, May 1996.",
      "ja": "[POP3]マイヤーズ、J.とM.ローズ、 \"ポストオフィスプロトコル - バージョン3\"、STD 53、RFC 1939、1996年5月。"
    },
    {
      "indent": 3,
      "text": "[PROCESS] Bradner, S., \"The Internet Standards Process -- Revision 3\", BCP 9, RFC 2026, October 1996.",
      "ja": "[プロセス]ブラドナーの、S.、 \"インターネット標準化プロセス - リビジョン3\"、BCP 9、RFC 2026、1996年10月。"
    },
    {
      "indent": 3,
      "text": "[REPORTS] Dusseault, L. and R. Sparks, \"Guidance on Interoperation and Implementation Reports for Advancement to Draft Standard\", BCP 9, RFC 5657, September 2009.",
      "ja": "[REPORTS] Dusseault、L.およびR.スパークス、 \"標準を起草する推進のための相互運用上の指針と実装レポート\"、BCP 9、RFC 5657、2009年9月。"
    },
    {
      "indent": 3,
      "text": "[REST] Fielding, R., \"Architectural Styles and the Design of Network-based Software Architectures\", 2000.",
      "ja": "[REST]フィールディング、R.、「建築スタイルとネットワークベースのソフトウェアアーキテクチャの設計」、2000年。"
    },
    {
      "indent": 3,
      "text": "[RFC3920] Saint-Andre, P., Ed., \"Extensible Messaging and Presence Protocol (XMPP): Core\", RFC 3920, October 2004.",
      "ja": "[RFC3920]サンアンドレ、P.、エド、 \"拡張メッセージングおよびプレゼンスプロトコル（XMPP）：コア\"。、RFC 3920、2004年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC3921] Saint-Andre, P., Ed., \"Extensible Messaging and Presence Protocol (XMPP): Instant Messaging and Presence\", RFC 3921, October 2004.",
      "ja": "[RFC3921]サンアンドレ、P.、エド、 \"拡張メッセージングおよびプレゼンスプロトコル（XMPP）：インスタントメッセージングとプレゼンス\"。、RFC 3921、2004年10月。"
    },
    {
      "indent": 3,
      "text": "[SASLPREP] Zeilenga, K., \"SASLprep: Stringprep Profile for User Names and Passwords\", RFC 4013, February 2005.",
      "ja": "[SASLPREP] Zeilenga、K.、：、RFC 4013、2005年2月 \"SASLprepユーザ名とパスワードのためのstringprepプロフィール\"。"
    },
    {
      "indent": 3,
      "text": "[SEC-TERMS] Shirey, R., \"Internet Security Glossary, Version 2\", RFC 4949, August 2007.",
      "ja": "[SEC-TERMS] Shirey、R.、 \"インターネットセキュリティ用語集、バージョン2\"、RFC 4949、2007年8月。"
    },
    {
      "indent": 3,
      "text": "[SMTP] Klensin, J., \"Simple Mail Transfer Protocol\", RFC 5321, October 2008.",
      "ja": "[SMTP] Klensin、J.、 \"簡易メール転送プロトコル\"、RFC 5321、2008年10月。"
    },
    {
      "indent": 3,
      "text": "[SEC-GUIDE] Rescorla, E. and B. Korver, \"Guidelines for Writing RFC Text on Security Considerations\", BCP 72, RFC 3552, July 2003.",
      "ja": "、BCP 72、RFC 3552、2003年7月[SEC-GUIDE]レスコラ、E.とB.コーバー、 \"セキュリティの考慮事項の書き方RFCテキストのためのガイドライン\"。"
    },
    {
      "indent": 3,
      "text": "[TLS-EXT] Eastlake 3rd, D., \"Transport Layer Security (TLS) Extensions: Extension Definitions\", RFC 6066, January 2011.",
      "ja": "[TLS-EXT]イーストレイク3日、D.、 \"トランスポート層セキュリティ（TLS）拡張機能：拡張定義\"、RFC 6066、2011年1月。"
    },
    {
      "indent": 3,
      "text": "[TLS-RESUME] Salowey, J., Zhou, H., Eronen, P., and H. Tschofenig, \"Transport Layer Security (TLS) Session Resumption without Server-Side State\", RFC 5077, January 2008.",
      "ja": "[TLS-RESUME] Salowey、J.、周、H.、Eronen、P.、およびH. Tschofenig、 \"サーバー側の状態なしのトランスポート層セキュリティ（TLS）セッション再開\"、RFC 5077、2008年1月。"
    },
    {
      "indent": 3,
      "text": "[URN-OID] Mealling, M., \"A URN Namespace of Object Identifiers\", RFC 3061, February 2001.",
      "ja": "[URN-OID] Mealling、M.、 \"オブジェクト識別子のURN名前空間\"、RFC 3061、2001年2月。"
    },
    {
      "indent": 3,
      "text": "[USINGTLS] Newman, C., \"Using TLS with IMAP, POP3 and ACAP\", RFC 2595, June 1999.",
      "ja": "[USINGTLS]ニューマン、C.、 \"IMAP、POP3およびACAPとTLSを使用する\"、RFC 2595、1999年6月。"
    },
    {
      "indent": 3,
      "text": "[UUID] Leach, P., Mealling, M., and R. Salz, \"A Universally Unique IDentifier (UUID) URN Namespace\", RFC 4122, July 2005.",
      "ja": "[UUID]リーチ、P.、Mealling、M.、およびR. Salzの、 \"汎用一意識別子（UUID）URN名前空間\"、RFC 4122、2005年7月。"
    },
    {
      "indent": 3,
      "text": "[XEP-0001] Saint-Andre, P., \"XMPP Extension Protocols\", XSF XEP 0001, March 2010.",
      "ja": "[XEP-0001]サンアンドレ、P.、 \"XMPP拡張プロトコル\"、XSF XEP 0001、2010年3月。"
    },
    {
      "indent": 3,
      "text": "[XEP-0016] Millard, P. and P. Saint-Andre, \"Privacy Lists\", XSF XEP 0016, February 2007.",
      "ja": "[XEP-0016]ミラード、P.およびP.サンアンドレ、 \"個人情報保護リスト\"、XSF XEP 0016、2007年2月。"
    },
    {
      "indent": 3,
      "text": "[XEP-0045] Saint-Andre, P., \"Multi-User Chat\", XSF XEP 0045, July 2007.",
      "ja": "[XEP-0045]サンアンドレ、P.、 \"マルチユーザーチャット\"、XSF XEP 0045、2007年7月。"
    },
    {
      "indent": 3,
      "text": "[XEP-0060] Millard, P., Saint-Andre, P., and R. Meijer, \"Publish-Subscribe\", XSF XEP 0060, July 2010.",
      "ja": "[XEP-0060]ミラード、P.、サン・アンドレ、P.、およびR. Meijer氏、 \"パブリッシュ・サブスクライブ\"、XSF XEP 0060、2010年7月。"
    },
    {
      "indent": 3,
      "text": "[XEP-0071] Saint-Andre, P., \"XHTML-IM\", XSF XEP 0071, September 2008.",
      "ja": "[XEP-0071]サンアンドレ、P.、 \"XHTML-IM\"、XSF XEP 0071、2008年9月。"
    },
    {
      "indent": 3,
      "text": "[XEP-0077] Saint-Andre, P., \"In-Band Registration\", XSF XEP 0077, September 2009.",
      "ja": "[XEP-0077]サンアンドレ、P.、 \"インバンド登録\"、XSFのXEP 0077、2009年9月。"
    },
    {
      "indent": 3,
      "text": "[XEP-0086] Norris, R. and P. Saint-Andre, \"Error Condition Mappings\", XSF XEP 0086, February 2004.",
      "ja": "[XEP-0086]ノリス、R.とP.サンアンドレ、 \"エラー状態マッピング\"、XSF XEP 0086、2004年2月。"
    },
    {
      "indent": 3,
      "text": "[XEP-0100] Saint-Andre, P. and D. Smith, \"Gateway Interaction\", XSF XEP 0100, October 2005.",
      "ja": "[XEP-0100]サンアンドレ、P.およびD.スミス、 \"ゲートウェイの対話\"、XSF XEP 0100、2005年10月。"
    },
    {
      "indent": 3,
      "text": "[XEP-0114] Saint-Andre, P., \"Jabber Component Protocol\", XSF XEP 0114, March 2005.",
      "ja": "[XEP-0114]サンアンドレ、P.、 \"Jabberのコンポーネント・プロトコル\"、XSF XEP 0114、2005年3月。"
    },
    {
      "indent": 3,
      "text": "[XEP-0124] Paterson, I., Smith, D., and P. Saint-Andre, \"Bidirectional-streams Over Synchronous HTTP (BOSH)\", XSF XEP 0124, July 2010.",
      "ja": "[XEP-0124]パターソン、I.、XSF XEP 0124、2010年7月 \"同期HTTP（BOSH）以上の双方向ストリーム\" スミス、D.、およびP.サンアンドレ、。"
    },
    {
      "indent": 3,
      "text": "[XEP-0138] Hildebrand, J. and P. Saint-Andre, \"Stream Compression\", XSF XEP 0138, May 2009.",
      "ja": "[XEP-0138]ヒルデブラント、J.とP.サンアンドレ、 \"ストリームの圧縮\"、XSF XEP 0138、2009年5月。"
    },
    {
      "indent": 3,
      "text": "[XEP-0156] Hildebrand, J. and P. Saint-Andre, \"Discovering Alternative XMPP Connection Methods\", XSF XEP 0156, June 2007.",
      "ja": "[XEP-0156]ヒルデブラント、J.とP.サンアンドレ、 \"ディスカバー代替XMPPの接続方法\"、XSF XEP 0156、2007年6月。"
    },
    {
      "indent": 3,
      "text": "[XEP-0160] Saint-Andre, P., \"Best Practices for Handling Offline Messages\", XSF XEP 0160, January 2006.",
      "ja": "[XEP-0160]サンアンドレ、P.、 \"オフラインメッセージを処理するためのベストプラクティス\"、XSF XEP 0160、2006年1月。"
    },
    {
      "indent": 3,
      "text": "[XEP-0174] Saint-Andre, P., \"Link-Local Messaging\", XSF XEP 0174, November 2008.",
      "ja": "[XEP-0174]サンアンドレ、P.、 \"リンクローカルメッセージング\"、XSF XEP 0174、2008年11月。"
    },
    {
      "indent": 3,
      "text": "[XEP-0175] Saint-Andre, P., \"Best Practices for Use of SASL ANONYMOUS\", XSF XEP 0175, September 2009.",
      "ja": "[XEP-0175]サンアンドレ、P.、 \"SASL ANONYMOUSの使用のためのベスト・プラクティス\"、XSF XEP 0175、2009年9月。"
    },
    {
      "indent": 3,
      "text": "[XEP-0178] Saint-Andre, P. and P. Millard, \"Best Practices for Use of SASL EXTERNAL with Certificates\", XSF XEP 0178, February 2007.",
      "ja": "[XEP-0178]サンアンドレ、P.およびP.ミラード、 \"証明書とSASL EXTERNALを使用するためのベスト・プラクティス\"、XSF XEP 0178、2007年2月。"
    },
    {
      "indent": 3,
      "text": "[XEP-0191] Saint-Andre, P., \"Simple Communications Blocking\", XSF XEP 0191, February 2007.",
      "ja": "[XEP-0191]サンアンドレ、P.、 \"ブロッキングシンプル通信\"、XSF XEP 0191、2007年2月。"
    },
    {
      "indent": 3,
      "text": "[XEP-0198] Karneges, J., Hildebrand, J., Saint-Andre, P., Forno, F., Cridland, D., and M. Wild, \"Stream Management\", XSF XEP 0198, February 2011.",
      "ja": "[XEP-0198】Karneges、J.、ヒルデブランド、J.、サンアンドレ、P.、Fornoの、F.、Cridland、D.、およびM.ワイルド、 \"ストリーム管理\"、XSF XEP 0198、2011年2月。"
    },
    {
      "indent": 3,
      "text": "[XEP-0199] Saint-Andre, P., \"XMPP Ping\", XSF XEP 0199, June 2009.",
      "ja": "[XEP-0199]サンアンドレ、P.、 \"XMPPのPing\"、XSF XEP 0199、2009年6月。"
    },
    {
      "indent": 3,
      "text": "[XEP-0205] Saint-Andre, P., \"Best Practices to Discourage Denial of Service Attacks\", XSF XEP 0205, January 2009.",
      "ja": "[XEP-0205]サンアンドレ、P.、XSF XEP 0205、2009年1月 \"サービス拒否攻撃を阻止するためのベストプラクティス\"。"
    },
    {
      "indent": 3,
      "text": "[XEP-0206] Paterson, I. and P. Saint-Andre, \"XMPP Over BOSH\", XSF XEP 0206, July 2010.",
      "ja": "[XEP-0206]パターソン、I.およびP.サンアンドレ、 \"XMPPオーバーBOSH\"、XSF XEP 0206、2010年7月。"
    },
    {
      "indent": 3,
      "text": "[XEP-0220] Miller, J., Saint-Andre, P., and P. Hancke, \"Server Dialback\", XSF XEP 0220, March 2010.",
      "ja": "[XEP-0220]ミラー、J.、サン・アンドレ、P.、およびP. Hancke、 \"サーバーのダイアルバック\"、XSF XEP 0220、2010年3月。"
    },
    {
      "indent": 3,
      "text": "[XEP-0225] Saint-Andre, P., \"Component Connections\", XSF XEP 0225, October 2008.",
      "ja": "[XEP-0225]サンアンドレ、P.、 \"コンポーネントの接続\"、XSF XEP 0225、2008年10月。"
    },
    {
      "indent": 3,
      "text": "[XEP-0233] Miller, M., Saint-Andre, P., and J. Hildebrand, \"Domain-Based Service Names in XMPP SASL Negotiation\", XSF XEP 0233, June 2010.",
      "ja": "[XEP-0233】ミラー、M.、サンアンドレ、P.、およびJ.ヒルデブランド、 \"XMPP SASLネゴシエーションにおけるドメインベースのサービス名\"、XSF XEP 0233 2010年6月。"
    },
    {
      "indent": 3,
      "text": "[XEP-0288] Hancke, P. and D. Cridland, \"Bidirectional Server-to-Server Connections\", XSF XEP 0288, October 2010.",
      "ja": "[XEP-0288] Hancke、P。およびD. Cridland、 \"双方向サーバー間接続\"、XSF XEP 0288、2010年10月。"
    },
    {
      "indent": 3,
      "text": "[XML-FRAG] Grosso, P. and D. Veillard, \"XML Fragment Interchange\", World Wide Web Consortium CR CR-xml-fragment-20010212, February 2001, <http://www.w3.org/TR/2001/CR-xml-fragment-20010212>.",
      "ja": "[XML-FRAG]グロッソ、P。およびD. Veillard、 \"XMLフラグメントインターチェンジ\"、ワールドワイドウェブコンソーシアムCR CR-XMLフラグメント-20010212、2001年2月、<http://www.w3.org/TR/2001 / CR-XMLフラグメント-20010212>。"
    },
    {
      "indent": 3,
      "text": "[XML-REG] Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688, January 2004.",
      "ja": "[XML-REG] Mealling、M.、 \"IETF XMLレジストリ\"、BCP 81、RFC 3688、2004年1月。"
    },
    {
      "indent": 3,
      "text": "[XML-SCHEMA] Thompson, H., Maloney, M., Mendelsohn, N., and D. Beech, \"XML Schema Part 1: Structures Second Edition\", World Wide Web Consortium Recommendation REC-xmlschema-1-20041028, October 2004, <http://www.w3.org/TR/2004/REC-xmlschema-1-20041028>.",
      "ja": "[XML-SCHEMA]トンプソン、H.、マロニー、M.、メンデルゾーン、N.、およびD.ブナ、 \"XMLスキーマパート1：構造第二版\"、World Wide Web Consortium（W3C）の勧告REC-XMLSCHEMA-1から20041028、10月2004年、<http://www.w3.org/TR/2004/REC-xmlschema-1-20041028>。"
    },
    {
      "indent": 3,
      "text": "[XMPP-URI] Saint-Andre, P., \"Internationalized Resource Identifiers (IRIs) and Uniform Resource Identifiers (URIs) for the Extensible Messaging and Presence Protocol (XMPP)\", RFC 5122, February 2008.",
      "ja": "[XMPP-URI]サンアンドレ、P.、 \"国際化資源識別子（IRIを）および拡張メッセージングおよびプレゼンスプロトコル（XMPP）のためのユニフォームリソース識別子（URI）\"、RFC 5122、2008年2月。"
    },
    {
      "indent": 0,
      "text": "Appendix A. XML Schemas",
      "ja": "付録A. XMLスキーマ"
    },
    {
      "indent": 3,
      "text": "The following schemas formally define various namespaces used in this document, in conformance with [XML-SCHEMA]. Because validation of XML streams and stanzas is optional, these schemas are not normative and are provided for descriptive purposes only.",
      "ja": "次のスキーマは、正式[XML-SCHEMA]に準拠して、本書で使用される様々な名前空間を定義します。 XMLストリームとスタンザの検証がオプションであるので、これらのスキーマは規範的ではなく、説明の目的でのみ提供されています。"
    },
    {
      "indent": 0,
      "text": "A.1. Stream Namespace",
      "ja": "A.1。ストリームの名前空間"
    },
    {
      "indent": 3,
      "text": "<?xml version='1.0' encoding='UTF-8'?>",
      "ja": "<？xmlのバージョン= '1.0' エンコーディング= 'UTF-8'？>"
    },
    {
      "indent": 3,
      "text": "<xs:schema xmlns:xs='http://www.w3.org/2001/XMLSchema' targetNamespace='http://etherx.jabber.org/streams' xmlns='http://etherx.jabber.org/streams' elementFormDefault='unqualified'>",
      "ja": "<XS：スキーマのxmlns：XSの= 'のhttp：//www.w3.org/2001/XMLSchema' のtargetNamespace = 'のhttp：//etherx.jabber.org/streams' のxmlns = 'のhttp：//etherx.jabber.org /ストリームのelementFormDefault = '' 修飾されていません>"
    },
    {
      "indent": 5,
      "text": "<xs:import namespace='jabber:client'/> <xs:import namespace='jabber:server'/> <xs:import namespace='urn:ietf:params:xml:ns:xmpp-sasl'/> <xs:import namespace='urn:ietf:params:xml:ns:xmpp-streams'/> <xs:import namespace='urn:ietf:params:xml:ns:xmpp-tls'/>",
      "ja": "<XS：インポート名前空間= 'おしゃべり：クライアント' /> <XS：インポート名前空間= 'おしゃべり：サーバ' /> <XS：インポート名前空間= 'URN：IETF：のparams：XML：NS：XMPP-SASL' /> < XS：=インポート名前空間 'URN：IETF：paramsは：XML：NS：XMPPストリーム' /> <XS：=インポート名前空間 'URN：IETF：paramsは：XML：NS：XMPP-TLS' />"
    },
    {
      "indent": 5,
      "text": "<xs:element name='stream'> <xs:complexType> <xs:sequence xmlns:client='jabber:client' xmlns:server='jabber:server'> <xs:element ref='features' minOccurs='0' maxOccurs='1'/> <xs:any namespace='urn:ietf:params:xml:ns:xmpp-tls' minOccurs='0' maxOccurs='1'/> <xs:any namespace='urn:ietf:params:xml:ns:xmpp-sasl' minOccurs='0' maxOccurs='1'/> <xs:any namespace='##other' minOccurs='0' maxOccurs='unbounded' processContents='lax'/> <xs:choice minOccurs='0' maxOccurs='1'> <xs:choice minOccurs='0' maxOccurs='unbounded'> <xs:element ref='client:message'/> <xs:element ref='client:presence'/> <xs:element ref='client:iq'/> </xs:choice>",
      "ja": "<XS：要素名= '流れ'> <XS：complexTypeの> <XS：シーケンスのxmlns：クライアント= 'おしゃべり：クライアントののxmlns：サーバー= 'おしゃべり：サーバ'> <XS：= '機能' minOccurs属性ref要素=」 0' のmaxOccurs = '1' /> <XS：任意の名前空間= 'URN：IETF：paramsは：XML：NS：XMPP-TLS' のminOccurs = '0' のmaxOccurs = '1' /> <XS：任意の名前空間= 'URN ：IETF：paramsは：XML：NS：XMPP-SASL 'のminOccurs = '0' のmaxOccurs属性の= '1'/> <XS：=任意の名前空間 '##その他' のminOccurs = '0' は、maxOccurs属性の= '無限' のprocessContents =' LAX '/> <XS：選択肢のminOccurs =' 0' をmaxOccursの= '1'> <XS：選択肢のminOccurs = '0' のmaxOccurs = '無制限'> <XS：要素REF = 'クライアント：メッセージ' /> <XS：要素REF = 'クライアント：存在' /> <XS：要素REF = 'クライアント：IQ' /> </ XS：選択>"
    },
    {
      "indent": 5,
      "text": " <xs:choice minOccurs='0' maxOccurs='unbounded'> <xs:element ref='server:message'/> <xs:element ref='server:presence'/> <xs:element ref='server:iq'/> </xs:choice> </xs:choice> <xs:element ref='error' minOccurs='0' maxOccurs='1'/> </xs:sequence> <xs:attribute name='from' type='xs:string' use='optional'/> <xs:attribute name='id' type='xs:string' use='optional'/> <xs:attribute name='to' type='xs:string' use='optional'/> <xs:attribute name='version' type='xs:decimal' use='optional'/> <xs:attribute ref='xml:lang' use='optional'/> <xs:anyAttribute namespace='##other' processContents='lax'/> </xs:complexType> </xs:element>",
      "ja": "<XS：選択のminOccurs = '0' のmaxOccurs = '無制限'> <XS：要素REF = 'サーバー：メッセージ' /> <XS：要素REF = 'サーバー：プレゼンス' /> <XS：要素REF = 'サーバー。 IQ '/> </ XS：選択> </ XS：選択> <XS：要素REF =' エラー 'のminOccurs = '0' ののmaxOccurs = '1'/> </ XS：シーケンス> <XS：属性名=' 「タイプ= 'XSから：文字列' 使用= 'オプション' /> <XS：属性名= 'ID' タイプ= 'のxs：文字列' 使用= 'オプション' /> <XS：属性名= '型' へ= 'XS：文字列' 使用= 'オプション' /> <XS：属性名= 'バージョン' タイプ= 'のxs：小数点以下' 使用= 'オプション' /> <XS：属性REF = 'のxml：langの' 使用= 'オプション'/> <XS：anyAttributeは名前空間=' ##他の」のprocessContents = 'LAXを' /> </ XS：complexTypeの> </ XS：要素>"
    },
    {
      "indent": 5,
      "text": "<xs:element name='features'> <xs:complexType> <xs:sequence> <xs:any namespace='##other' minOccurs='0' maxOccurs='unbounded' processContents='lax'/> </xs:sequence> </xs:complexType> </xs:element>",
      "ja": "<：complexTypeのXS> <XS：シーケンス> <XS：任意の名前空間= '##他の' のminOccurs = '0' ののmaxOccurs = '無制限' のprocessContents = '緩い' /> </：<XS要素名= 'を特徴と'> XS：シーケンス> </ XS：complexTypeの> </ XS：要素>"
    },
    {
      "indent": 5,
      "text": "<xs:element name='error'> <xs:complexType> <xs:sequence xmlns:err='urn:ietf:params:xml:ns:xmpp-streams'> <xs:group ref='err:streamErrorGroup'/> <xs:element ref='err:text' minOccurs='0' maxOccurs='1'/> <xs:any namespace='##other' minOccurs='0' maxOccurs='1' processContents='lax'/> </xs:sequence> </xs:complexType> </xs:element>",
      "ja": "<XS：要素名= 'エラー'> <XS：complexTypeの> <XS：配列のxmlns：=誤る 'URNを：IETF：paramsは：XML：NS：XMPPストリーム'> <XS：グループREF = 'ERR：streamErrorGroup' /> <XS：要素REF = 'ERR：テキスト' のminOccurs = '0' のmaxOccurs属性の= '1' /> <XS：任意の名前空間は= '##他の' = '1' のprocessContents = \"LAXのminOccurs = '0' のmaxOccurs属性「/> </ XS：シーケンス> </ XS：complexTypeの> </ XS：要素>"
    },
    {
      "indent": 3,
      "text": "</xs:schema>",
      "ja": "</ XS：スキーマ>"
    },
    {
      "indent": 0,
      "text": "A.2. Stream Error Namespace",
      "ja": "A.2。ストリームエラーの名前空間"
    },
    {
      "indent": 3,
      "text": "<?xml version='1.0' encoding='UTF-8'?>",
      "ja": "<？xmlのバージョン= '1.0' エンコーディング= 'UTF-8'？>"
    },
    {
      "indent": 3,
      "text": "<xs:schema xmlns:xs='http://www.w3.org/2001/XMLSchema' targetNamespace='urn:ietf:params:xml:ns:xmpp-streams' xmlns='urn:ietf:params:xml:ns:xmpp-streams' elementFormDefault='qualified'>",
      "ja": "<XS：スキーマのxmlns：XS = 'HTTP：//www.w3.org/2001/XMLSchema' のtargetNamespace = 'URN：IETF：paramsは：XML：NS：XMPPストリーム' のxmlns = 'URN：IETF：paramsは：XML ：NS：XMPPストリームのelementFormDefault = '資格'>"
    },
    {
      "indent": 5,
      "text": "<xs:element name='bad-format' type='empty'/> <xs:element name='bad-namespace-prefix' type='empty'/> <xs:element name='conflict' type='empty'/> <xs:element name='connection-timeout' type='empty'/> <xs:element name='host-gone' type='empty'/> <xs:element name='host-unknown' type='empty'/> <xs:element name='improper-addressing' type='empty'/> <xs:element name='internal-server-error' type='empty'/> <xs:element name='invalid-from' type='empty'/> <xs:element name='invalid-id' type='empty'/> <xs:element name='invalid-namespace' type='empty'/> <xs:element name='invalid-xml' type='empty'/> <xs:element name='not-authorized' type='empty'/> <xs:element name='not-well-formed' type='empty'/> <xs:element name='policy-violation' type='empty'/> <xs:element name='remote-connection-failed' type='empty'/> <xs:element name='reset' type='empty'/> <xs:element name='resource-constraint' type='empty'/> <xs:element name='restricted-xml' type='empty'/> <xs:element name='see-other-host' type='xs:string'/> <xs:element name='system-shutdown' type='empty'/> <xs:element name='undefined-condition' type='empty'/> <xs:element name='unsupported-encoding' type='empty'/> <xs:element name='unsupported-stanza-type' type='empty'/> <xs:element name='unsupported-version' type='empty'/>",
      "ja": "<XS：要素名= '悪い-フォーマット' タイプ= '空' /> <XS：要素名= '悪い-名前空間接頭辞' タイプ= '空' /> <XS：要素名= '葛藤' タイプ=」空「/> <XS：要素名=」接続タイムアウト「タイプ= 『空』 /> <XS：要素名= 『ホストなくなっ』タイプ= 『空』 /> <XS：要素名=」ホスト不明'TYPE =' 空 '/> <XS：要素名=' 不適切アドレッシング」TYPE = '空' /> <XS：要素名= 'サーバ内蔵エラー' TYPE = '空' /> <XS：要素NAME = '無効から' TYPE = '空' /> <XS：要素名= '無効-ID' TYPE = '空' /> <XS：要素名= '無効な名前空間' TYPE = '空' /> <XS：要素名= '無効なXML' TYPE = '空' /> <XS：要素名= '許可しない' タイプ= '空の' /> <XS：要素名= '不整形' 型= '空' /> <XS：要素名= 'ポリシー違反' TYPE = '空' /> <XS：要素名= 'リモート接続に失敗しました' TYPE = '空' /> <XS：要素名=要素名= 'リソース制約' タイプ= '空' /> <XS：：要素名= '制限-XML' タイプ= '空' /> <XS：要素タイプ= '空' /> <XSを 'リセット'名前= '参照-他のホスト' タイプ= 'のxs：文字列' /> <XS：elemはENT名= 'システムシャットダウン' TYPE = '空' /> <XS：要素名= '不定状態' TYPE = '空' /> <XS：要素名= 'サポートされていないエンコード' TYPE = '空' / > <XS：要素名= 'サポートされていない-スタンザ型' TYPE = '空' /> <XS：要素名= 'サポートされていないバージョン' TYPE = '空' />"
    },
    {
      "indent": 5,
      "text": "<xs:group name='streamErrorGroup'> <xs:choice> <xs:element ref='bad-format'/> <xs:element ref='bad-namespace-prefix'/> <xs:element ref='conflict'/> <xs:element ref='connection-timeout'/> <xs:element ref='host-gone'/> <xs:element ref='host-unknown'/> <xs:element ref='improper-addressing'/> <xs:element ref='internal-server-error'/> <xs:element ref='invalid-from'/> <xs:element ref='invalid-id'/>",
      "ja": "<XS：グループ名= 'streamErrorGroup'> <XS：選択> <XS：要素REF = '悪いフォーマット' /> <XS：要素REF = '悪い名前空間接頭辞' /> <XS：要素REF =」紛争 '/> <XS：要素REF =' 接続タイムアウト '/> <XS：= ref要素'：ホスト - 不明なホスト-なくなっ '= ref要素/> <XS' '/> <XS：要素REF ='不適切なアドレッシング '/> <XS：要素REF =' 内部サーバーエラー '/> <XS：要素REF =' 無効から '/> <XS：要素REF =' 無効-ID '/>"
    },
    {
      "indent": 5,
      "text": " <xs:element ref='invalid-namespace'/> <xs:element ref='invalid-xml'/> <xs:element ref='not-authorized'/> <xs:element ref='not-well-formed'/> <xs:element ref='policy-violation'/> <xs:element ref='remote-connection-failed'/> <xs:element ref='reset'/> <xs:element ref='resource-constraint'/> <xs:element ref='restricted-xml'/> <xs:element ref='see-other-host'/> <xs:element ref='system-shutdown'/> <xs:element ref='undefined-condition'/> <xs:element ref='unsupported-encoding'/> <xs:element ref='unsupported-stanza-type'/> <xs:element ref='unsupported-version'/> </xs:choice> </xs:group>",
      "ja": "<XS：要素REF = '無効な名前空間' /> <XS：要素REF = '無効なXML' /> <XS：要素REF = '許可しない' /> <XS：要素REF = '未よく形成された '/> <XS：要素REF =' ポリシー違反 '/> <XS：要素REF =' リモート接続に失敗しました '/> <XS：要素REF =' リセット '/> <XS：要素REF ='資源制約 '/> <XS：要素REF =' 制限-XML '/> <XS：要素REF =' 参照-他のホスト '/> <XS：要素REF =' システムシャットダウン '/> <XS：素子REF = '不定状態' /> <XS：要素REF = 'サポートされていないエンコード' /> <XS：要素REF = 'サポートされていない-スタンザ型' /> <XS：要素REF = 'サポートされていないバージョン' / > </ XS：選択> </ XS：グループ>"
    },
    {
      "indent": 5,
      "text": "<xs:element name='text'> <xs:complexType> <xs:simpleContent> <xs:extension base='xs:string'> <xs:attribute ref='xml:lang' use='optional'/> </xs:extension> </xs:simpleContent> </xs:complexType> </xs:element>",
      "ja": "<XS：要素名= 'テキスト'> <XS：complexTypeの> <XS：simpleContentを> <XS：増設ベース= 'のxs：文字列'> <XS：属性REF = 'のxml：langの' 使用= 'オプション' /> </ XS：拡張> </ XS：simpleContentを> </ XS：complexTypeの> </ XS：要素>"
    },
    {
      "indent": 5,
      "text": "<xs:simpleType name='empty'> <xs:restriction base='xs:string'> <xs:enumeration value=''/> </xs:restriction> </xs:simpleType>",
      "ja": "<XS：単純名= '空'> <XS：制限基地= 'XS：文字列'> <XS：列挙値= '' /> </ XS：制限> </ XS：simpleTypeの>"
    },
    {
      "indent": 3,
      "text": "</xs:schema>",
      "ja": "</ XS：スキーマ>"
    },
    {
      "indent": 0,
      "text": "A.3. STARTTLS Namespace",
      "ja": "A.3。 STARTTLS名前空間"
    },
    {
      "indent": 3,
      "text": "<?xml version='1.0' encoding='UTF-8'?>",
      "ja": "<？xmlのバージョン= '1.0' エンコーディング= 'UTF-8'？>"
    },
    {
      "indent": 3,
      "text": "<xs:schema xmlns:xs='http://www.w3.org/2001/XMLSchema' targetNamespace='urn:ietf:params:xml:ns:xmpp-tls' xmlns='urn:ietf:params:xml:ns:xmpp-tls' elementFormDefault='qualified'>",
      "ja": "<XS：スキーマのxmlns：XS = 'HTTP：//www.w3.org/2001/XMLSchema' のtargetNamespace = 'URN：IETF：paramsは：XML：NS：XMPP-TLS' のxmlns = 'URN：IETF：paramsは：XML ：NS：XMPP-TLS'のelementFormDefault = '資格'>"
    },
    {
      "indent": 5,
      "text": "<xs:element name='starttls'> <xs:complexType> <xs:choice minOccurs='0' maxOccurs='1'> <xs:element name='required' type='empty'/> </xs:choice> </xs:complexType> </xs:element>",
      "ja": "<XS：要素名= 'STARTTLS'> <XS：complexTypeの> <XS：選択のminOccurs = '0' のmaxOccurs = '1'> <XS：要素名= '必要' TYPE = '空' /> </ XS：選択肢> </ XS：complexTypeの> </ XS：要素>"
    },
    {
      "indent": 5,
      "text": "<xs:element name='proceed' type='empty'/>",
      "ja": "<XS：要素名= '進む' タイプ= '空' />"
    },
    {
      "indent": 5,
      "text": "<xs:element name='failure' type='empty'/>",
      "ja": "<XS：要素名= '失敗' タイプ= '空' />"
    },
    {
      "indent": 5,
      "text": "<xs:simpleType name='empty'> <xs:restriction base='xs:string'> <xs:enumeration value=''/> </xs:restriction> </xs:simpleType>",
      "ja": "<XS：単純名= '空'> <XS：制限基地= 'XS：文字列'> <XS：列挙値= '' /> </ XS：制限> </ XS：simpleTypeの>"
    },
    {
      "indent": 3,
      "text": "</xs:schema>",
      "ja": "</ XS：スキーマ>"
    },
    {
      "indent": 0,
      "text": "A.4. SASL Namespace",
      "ja": "A.4。 SASL名前空間"
    },
    {
      "indent": 3,
      "text": "<?xml version='1.0' encoding='UTF-8'?>",
      "ja": "<？xmlのバージョン= '1.0' エンコーディング= 'UTF-8'？>"
    },
    {
      "indent": 3,
      "text": "<xs:schema xmlns:xs='http://www.w3.org/2001/XMLSchema' targetNamespace='urn:ietf:params:xml:ns:xmpp-sasl' xmlns='urn:ietf:params:xml:ns:xmpp-sasl' elementFormDefault='qualified'>",
      "ja": "<XS：スキーマのxmlns：XSの= 'HTTP：//www.w3.org/2001/XMLSchema' のtargetNamespace = 'URN：IETF：paramsは：XML：NS：XMPP-SASL' のxmlns = 'URN：IETF：paramsは：XML ：NS：XMPP-SASL」のelementFormDefault = '資格'>"
    },
    {
      "indent": 5,
      "text": "<xs:element name='mechanisms'> <xs:complexType> <xs:sequence> <xs:element name='mechanism' minOccurs='1' maxOccurs='unbounded' type='xs:NMTOKEN'/> <xs:any namespace='##other' minOccurs='0' maxOccurs='unbounded' processContents='lax'/> </xs:sequence> </xs:complexType> </xs:element>",
      "ja": "<XS：要素名= '機構'> <XS：complexTypeの> <XS：配列> <XS：要素名= '機構' のminOccurs = '1' のmaxOccurs = '無限' タイプ= 'XS：NMTOKEN' /> <XS ：任意の名前空間= '##その他' のminOccurs = '0' のmaxOccurs属性の= '無限' のprocessContents = '緩い' /> </ XS：配列> </ XS：complexTypeの> </ XS：要素>"
    },
    {
      "indent": 5,
      "text": "<xs:element name='abort' type='empty'/>",
      "ja": "<XS：要素名= /タイプ= '空' '中止'>"
    },
    {
      "indent": 5,
      "text": "<xs:element name='auth'> <xs:complexType> <xs:simpleContent> <xs:extension base='xs:string'> <xs:attribute name='mechanism' type='xs:NMTOKEN' use='required'/> </xs:extension> </xs:simpleContent> </xs:complexType> </xs:element>",
      "ja": "<XS：要素名= 'AUTH'> <XS：complexTypeの> <XS：simpleContentを> <XS：拡張ベース= 'のxs：string' は> <XS：属性名= 'メカニズム' TYPE = 'のxs：NMTOKEN' 使用= '必要な' /> </ XS：拡張> </ XS：simpleContentを> </ XS：complexTypeの> </ XS：要素>"
    },
    {
      "indent": 5,
      "text": "<xs:element name='challenge' type='xs:string'/>",
      "ja": "<XS：要素名= '挑戦' タイプ= 'のxs：文字列' />"
    },
    {
      "indent": 5,
      "text": "<xs:element name='response' type='xs:string'/>",
      "ja": "<XS：要素名= '応答' タイプの= 'XS：文字列' />"
    },
    {
      "indent": 5,
      "text": "<xs:element name='success' type='xs:string'/>",
      "ja": "<XS：要素名= '成功' タイプ= 'XS：文字列' />"
    },
    {
      "indent": 5,
      "text": "<xs:element name='failure'> <xs:complexType> <xs:sequence> <xs:choice minOccurs='0'> <xs:element name='aborted' type='empty'/> <xs:element name='account-disabled' type='empty'/> <xs:element name='credentials-expired' type='empty'/> <xs:element name='encryption-required' type='empty'/> <xs:element name='incorrect-encoding' type='empty'/> <xs:element name='invalid-authzid' type='empty'/> <xs:element name='invalid-mechanism' type='empty'/> <xs:element name='malformed-request' type='empty'/> <xs:element name='mechanism-too-weak' type='empty'/> <xs:element name='not-authorized' type='empty'/> <xs:element name='temporary-auth-failure' type='empty'/> </xs:choice> <xs:element ref='text' minOccurs='0' maxOccurs='1'/> </xs:sequence> </xs:complexType> </xs:element>",
      "ja": "<XS：要素名= '失敗'> <XS：complexTypeの> <XS：シーケンス> <XS：選択肢のminOccurs = '0'> <XS：要素名= '中止に' タイプ= '空' /> <XS：要素=「アカウント無効」タイプに名前を付ける=「空」/> <XS：要素名=「資格証明書期限切れ」タイプ=「空」/> <XS：要素名=「暗号化に必要な」タイプ=「空」/> <XS：要素名= '間違ったエンコード' TYPE = '空' /> <XS：要素名= '無効authzidは' TYPE = '空' /> <XS：要素名= '無効メカニズム' TYPE =」空 '/> <XS：要素名=' 不正要求 'TYPE = '空'/> <XS：要素名= 'メカニズムがあまりに弱い' TYPE = '空'/> <XS：要素名=' ではありません-authorized」タイプ= '空' /> <XS：要素名= '一時的-AUTH-失敗' タイプ= '空' /> </ XS：選択> <XS：要素REF = 'text' ののminOccurs =の '0' maxOccurs = '1' /> </ XS：配列> </ XS：complexTypeの> </ XS：要素>"
    },
    {
      "indent": 5,
      "text": "<xs:element name='text'> <xs:complexType> <xs:simpleContent> <xs:extension base='xs:string'> <xs:attribute ref='xml:lang' use='optional'/> </xs:extension> </xs:simpleContent> </xs:complexType> </xs:element>",
      "ja": "<XS：要素名= 'テキスト'> <XS：complexTypeの> <XS：simpleContentを> <XS：増設ベース= 'のxs：文字列'> <XS：属性REF = 'のxml：langの' 使用= 'オプション' /> </ XS：拡張> </ XS：simpleContentを> </ XS：complexTypeの> </ XS：要素>"
    },
    {
      "indent": 5,
      "text": "<xs:simpleType name='empty'> <xs:restriction base='xs:string'> <xs:enumeration value=''/> </xs:restriction> </xs:simpleType>",
      "ja": "<XS：単純名= '空'> <XS：制限基地= 'XS：文字列'> <XS：列挙値= '' /> </ XS：制限> </ XS：simpleTypeの>"
    },
    {
      "indent": 3,
      "text": "</xs:schema>",
      "ja": "</ XS：スキーマ>"
    },
    {
      "indent": 0,
      "text": "A.5. Client Namespace",
      "ja": "A.5。クライアントの名前空間"
    },
    {
      "indent": 3,
      "text": "<?xml version='1.0' encoding='UTF-8'?>",
      "ja": "<？xmlのバージョン= '1.0' エンコーディング= 'UTF-8'？>"
    },
    {
      "indent": 3,
      "text": "<xs:schema xmlns:xs='http://www.w3.org/2001/XMLSchema' targetNamespace='jabber:client' xmlns='jabber:client' elementFormDefault='qualified'>",
      "ja": "<XS：スキーマのxmlns：XSの= 'のhttp：//www.w3.org/2001/XMLSchema' のtargetNamespace = 'おしゃべり：クライアントののxmlns ='おしゃべり：クライアントのelementFormDefault要素= '資格'>"
    },
    {
      "indent": 5,
      "text": "<xs:import namespace='urn:ietf:params:xml:ns:xmpp-stanzas'/>",
      "ja": "<XS：インポート名前空間= 'URN：IETF：のparams：XML：NS：XMPP-スタンザ' />"
    },
    {
      "indent": 5,
      "text": "<xs:element name='message'> <xs:complexType> <xs:sequence> <xs:choice minOccurs='0' maxOccurs='unbounded'> <xs:element ref='subject'/> <xs:element ref='body'/> <xs:element ref='thread'/> </xs:choice> <xs:any namespace='##other' minOccurs='0' maxOccurs='unbounded' processContents='lax'/> <xs:element ref='error' minOccurs='0'/> </xs:sequence> <xs:attribute name='from' type='xs:string' use='optional'/> <xs:attribute name='id' type='xs:NMTOKEN' use='optional'/> <xs:attribute name='to' type='xs:string' use='optional'/> <xs:attribute name='type' use='optional' default='normal'>",
      "ja": "<XS：要素名= 'メッセージ'> <XS：complexTypeの> <XS：配列> <XS：選択のminOccurs = '0' のmaxOccurs = '無制限'> <XS：要素REF = '主題' /> <XS：要素REF = '体' /> <XS：要素REF = 'スレッド' /> </ XS：選択が> <XS：=任意の名前空間 '##他の' のminOccurs = '0' のmaxOccursの= '無制限' のprocessContents = 'LAX' /> <XS：要素REF = 'エラー' のminOccurs = '0' /> </ XS：シーケンス> <XS：タイプ= 'から' 属性名= 'のxs：文字列' 使用= 'オプション' /> <XS：名前= 'ID' タイプ=属性 'XSは：NMTOKEN' 使用= 'オプション' /> <XS：属性名=タイプ= 'に' 'のxs：文字列' 使用= 'オプション' /> <XS：属性名=」型」使用= 『オプションの』デフォルト= 『通常』>"
    },
    {
      "indent": 5,
      "text": " <xs:simpleType> <xs:restriction base='xs:NMTOKEN'> <xs:enumeration value='chat'/> <xs:enumeration value='error'/> <xs:enumeration value='groupchat'/> <xs:enumeration value='headline'/> <xs:enumeration value='normal'/> </xs:restriction> </xs:simpleType> </xs:attribute> <xs:attribute ref='xml:lang' use='optional'/> </xs:complexType> </xs:element>",
      "ja": "<XS：単純> <XS：制限基地= 'XS：NMTOKEN'> <XS：列挙値= 'チャット' /> <XS：列挙値= 'エラー' /> <XS：列挙値= 'グループチャット' /> <XS：列挙値= '見出し' /> <XS：列挙値= '通常' /> </ XS：制限> </ XS：単純> </ XS：属性> <XS：属性REF = 'のxml：langの'使用=' 任意 '/> </ XS：complexTypeの> </ XS：要素>"
    },
    {
      "indent": 5,
      "text": "<xs:element name='body'> <xs:complexType> <xs:simpleContent> <xs:extension base='xs:string'> <xs:attribute ref='xml:lang' use='optional'/> </xs:extension> </xs:simpleContent> </xs:complexType> </xs:element>",
      "ja": "<XS：要素名= '体'> <XS：complexTypeの> <XS：simpleContentを> <XS：増設ベース= 'XS：文字列'> <XS：属性REF = 'のxml：langの' 使用= 'オプション' /> </ XS：拡張> </ XS：simpleContentを> </ XS：complexTypeの> </ XS：要素>"
    },
    {
      "indent": 5,
      "text": "<xs:element name='subject'> <xs:complexType> <xs:simpleContent> <xs:extension base='xs:string'> <xs:attribute ref='xml:lang' use='optional'/> </xs:extension> </xs:simpleContent> </xs:complexType> </xs:element>",
      "ja": "<XS：要素名= '被験者'> <XS：complexTypeの> <XS：simpleContentを> <XS：拡張ベース= 'のxs：string' は> <XS：属性REF = 'のxml：langの' 使用= '任意' /> </ XS：拡張> </ XS：simpleContentを> </ XS：complexTypeの> </ XS：要素>"
    },
    {
      "indent": 5,
      "text": "<xs:element name='thread'> <xs:complexType> <xs:simpleContent> <xs:extension base='xs:NMTOKEN'> <xs:attribute name='parent' type='xs:NMTOKEN' use='optional'/> </xs:extension> </xs:simpleContent> </xs:complexType> </xs:element>",
      "ja": "<XS：要素名= 'スレッド'> <XS：complexTypeの> <XS：simpleContentを> <XS：増設ベース= 'XS：NMTOKEN'> <XS：属性名= '親' タイプ= 'XS：NMTOKEN' 使用= 'オプション' /> </ XS：拡張> </ XS：simpleContentを> </ XS：complexTypeの> </ XS：要素>"
    },
    {
      "indent": 5,
      "text": "<xs:element name='presence'> <xs:complexType> <xs:sequence> <xs:choice minOccurs='0' maxOccurs='unbounded'> <xs:element ref='show'/> <xs:element ref='status'/> <xs:element ref='priority'/> </xs:choice> <xs:any namespace='##other' minOccurs='0' maxOccurs='unbounded' processContents='lax'/> <xs:element ref='error' minOccurs='0'/> </xs:sequence> <xs:attribute name='from' type='xs:string' use='optional'/> <xs:attribute name='id' type='xs:NMTOKEN' use='optional'/> <xs:attribute name='to' type='xs:string' use='optional'/> <xs:attribute name='type' use='optional'> <xs:simpleType> <xs:restriction base='xs:NMTOKEN'> <xs:enumeration value='error'/> <xs:enumeration value='probe'/> <xs:enumeration value='subscribe'/> <xs:enumeration value='subscribed'/> <xs:enumeration value='unavailable'/> <xs:enumeration value='unsubscribe'/> <xs:enumeration value='unsubscribed'/> </xs:restriction> </xs:simpleType> </xs:attribute> <xs:attribute ref='xml:lang' use='optional'/> </xs:complexType> </xs:element>",
      "ja": "<XS：要素名= '存在'> <XS：complexTypeの> <XS：シーケンス> <XS：選択肢のminOccurs = '0' のmaxOccurs = '無制限'> <XS：要素REF = 'ショー' /> <XS：要素REF = '状態' /> <XS：要素REF = '優先' /> </ XS：選択が> <XS：=任意の名前空間 '##他の' のminOccurs = '0' のmaxOccursの= '無制限' のprocessContents = 'LAX' /> <XS：要素REF = 'エラー' のminOccurs = '0' /> </ XS：シーケンス> <XS：タイプ= 'から' 属性名= 'のxs：文字列' 使用= 'オプション' /> <XS：名前= 'ID' タイプ=属性 'XSは：NMTOKEN' 使用= 'オプション' /> <XS：属性名=タイプ= 'に' 'のxs：文字列' 使用= 'オプション' /> <XS：属性名=」タイプ」使用= '任意'> <XS：単純> <XS：制限基地= 'のxs：NMTOKEN'> <XS：列挙値= 'エラー' /> <XS：列挙値= 'プローブ' /> <XS：列挙値= '購読' /> <XS：列挙値= '加入' /> <XS：列挙値= '使用できません' /> <XS：列挙値= '退会' /> <XS：列挙値は= '解除' /> </ XS：制限> </ XS：単純> </ XS：属性> <XS：属性REF = 'のxml：langの' 使用= '任意' /> </ XS：complexTypeの> </ XS：要素>"
    },
    {
      "indent": 5,
      "text": "<xs:element name='show'> <xs:simpleType> <xs:restriction base='xs:NMTOKEN'> <xs:enumeration value='away'/> <xs:enumeration value='chat'/> <xs:enumeration value='dnd'/> <xs:enumeration value='xa'/> </xs:restriction> </xs:simpleType> </xs:element>",
      "ja": "<XS：要素名= '表示'> <XS：単純> <XS：制限基地= 'XS：NMTOKEN'> <XS：列挙値= '離れる' /> <XS：列挙値= 'チャット' /> < XS：列挙値= 'DND' /> <XS：列挙値= 'XA' /> </ XS：制限> </ XS：単純> </ XS：要素>"
    },
    {
      "indent": 5,
      "text": "<xs:element name='status'> <xs:complexType> <xs:simpleContent> <xs:extension base='string1024'> <xs:attribute ref='xml:lang' use='optional'/> </xs:extension> </xs:simpleContent> </xs:complexType> </xs:element>",
      "ja": "<XS：要素名= 'ステータス'> <XS：complexTypeの> <XS：simpleContentを> <XS：拡張ベース= 'string1024'> <XS：属性REF = 'のxml：langの' 使用= '任意' /> </ XS：拡張機能> </ XS：simpleContentを> </ XS：complexTypeの> </ XS：要素>"
    },
    {
      "indent": 5,
      "text": "<xs:simpleType name='string1024'> <xs:restriction base='xs:string'> <xs:minLength value='1'/> <xs:maxLength value='1024'/> </xs:restriction> </xs:simpleType>",
      "ja": "<XS：単純名= 'string1024'> <XS：制限基地= 'XS：文字列'> <XS：はminLength値= '1' /> <XS：maxLengthの値= '1024' /> </ XS：制限> </ XS：単純>"
    },
    {
      "indent": 5,
      "text": "<xs:element name='priority' type='xs:byte'/>",
      "ja": "<XS：要素名= '優先' タイプの= 'XS：バイト' />"
    },
    {
      "indent": 5,
      "text": "<xs:element name='iq'> <xs:complexType> <xs:sequence> <xs:any namespace='##other' minOccurs='0' maxOccurs='1' processContents='lax'/> <xs:element ref='error' minOccurs='0'/> </xs:sequence> <xs:attribute name='from' type='xs:string' use='optional'/> <xs:attribute name='id' type='xs:NMTOKEN' use='required'/>",
      "ja": "<XS：要素名= 'IQ'> <XS：complexTypeの> <XS：配列> <XS：任意の名前空間= '##その他' のminOccurs = '0' のmaxOccurs = '1' のprocessContents = '緩い' /> <XS ：要素REF = 'エラー' のminOccurs = '0' /> </ XS：シーケンス> <XS：属性名=タイプ= 'から' 'XS：文字列' 使用= 'オプション' /> <XS：属性名=」 ID」タイプ= 'のxs：NMTOKEN' 使用= '必要' />"
    },
    {
      "indent": 5,
      "text": " <xs:attribute name='to' type='xs:string' use='optional'/> <xs:attribute name='type' use='required'> <xs:simpleType> <xs:restriction base='xs:NMTOKEN'> <xs:enumeration value='error'/> <xs:enumeration value='get'/> <xs:enumeration value='result'/> <xs:enumeration value='set'/> </xs:restriction> </xs:simpleType> </xs:attribute> <xs:attribute ref='xml:lang' use='optional'/> </xs:complexType> </xs:element>",
      "ja": "<XS：属性名= 'に' TYPE = 'のxs：string' は使用= '任意' /> <XS： '必須' 属性名= 'タイプ' 使用=> <XS：単純> <XS：制限塩基=」 XS：NMTOKEN '> <XS：列挙値=' エラー '/> <XS：列挙値=' 取得 '/> <XS：列挙値=' 結果 '/> <XS：列挙値=' 設定 '/> < / XS：制限> </ XS：単純> </ XS：属性> <XS：属性REF = 'のxml：langの' 使用= '任意' /> </ XS：complexTypeの> </ XS：要素>"
    },
    {
      "indent": 5,
      "text": "<xs:element name='error'> <xs:complexType> <xs:sequence xmlns:err='urn:ietf:params:xml:ns:xmpp-stanzas'> <xs:group ref='err:stanzaErrorGroup'/> <xs:element ref='err:text' minOccurs='0'/> </xs:sequence> <xs:attribute name='by' type='xs:string' use='optional'/> <xs:attribute name='type' use='required'> <xs:simpleType> <xs:restriction base='xs:NMTOKEN'> <xs:enumeration value='auth'/> <xs:enumeration value='cancel'/> <xs:enumeration value='continue'/> <xs:enumeration value='modify'/> <xs:enumeration value='wait'/> </xs:restriction> </xs:simpleType> </xs:attribute> </xs:complexType> </xs:element>",
      "ja": "<XS：要素名= 'エラー'> <XS：complexTypeの> <XS：配列のxmlns：誤る= 'URN：IETF：paramsは：XML：NS：XMPP-スタンザ'> <XS：グループREF = 'ERR：stanzaErrorGroup' /> <XS：要素REF = 'ERR：テキスト' のminOccurs = '0' /> </ XS：シーケンス> <XS：タイプ= 'による' 属性名= 'のxs：文字列' 使用= 'オプション' /> < XS：属性名= 'タイプ' 使用= '必要'> <XS：単純> <XS：制限基地= 'のxs：NMTOKEN'> <XS：列挙値= 'AUTH' /> <XS：列挙値= 'キャンセル'/> <XS：列挙値=' 継続 '/> <XS：列挙値を=' 変更：待っ '/> <XS =列挙値を' '/> </ XS：制限> </ XS：単純> </ XS：属性> </ XS：complexTypeの> </ XS：要素>"
    },
    {
      "indent": 3,
      "text": "</xs:schema>",
      "ja": "</ XS：スキーマ>"
    },
    {
      "indent": 0,
      "text": "A.6. Server Namespace",
      "ja": "A.6。サーバーの名前空間"
    },
    {
      "indent": 3,
      "text": "<?xml version='1.0' encoding='UTF-8'?>",
      "ja": "<？xmlのバージョン= '1.0' エンコーディング= 'UTF-8'？>"
    },
    {
      "indent": 3,
      "text": "<xs:schema xmlns:xs='http://www.w3.org/2001/XMLSchema' targetNamespace='jabber:server' xmlns='jabber:server' elementFormDefault='qualified'>",
      "ja": "<XS：スキーマのxmlns：XSの= 'のhttp：//www.w3.org/2001/XMLSchema' のtargetNamespace = 'おしゃべり：サーバののxmlns ='おしゃべり：サーバのelementFormDefault要素= '資格'>"
    },
    {
      "indent": 5,
      "text": "<xs:import namespace='urn:ietf:params:xml:ns:xmpp-stanzas'/>",
      "ja": "<XS：インポート名前空間= 'URN：IETF：のparams：XML：NS：XMPP-スタンザ' />"
    },
    {
      "indent": 5,
      "text": "<xs:element name='message'> <xs:complexType> <xs:sequence> <xs:choice minOccurs='0' maxOccurs='unbounded'> <xs:element ref='subject'/> <xs:element ref='body'/> <xs:element ref='thread'/> </xs:choice> <xs:any namespace='##other' minOccurs='0' maxOccurs='unbounded' processContents='lax'/> <xs:element ref='error' minOccurs='0'/> </xs:sequence> <xs:attribute name='from' type='xs:string' use='required'/> <xs:attribute name='id' type='xs:NMTOKEN' use='optional'/> <xs:attribute name='to' type='xs:string' use='required'/> <xs:attribute name='type' use='optional' default='normal'> <xs:simpleType> <xs:restriction base='xs:NMTOKEN'> <xs:enumeration value='chat'/> <xs:enumeration value='error'/> <xs:enumeration value='groupchat'/> <xs:enumeration value='headline'/> <xs:enumeration value='normal'/> </xs:restriction>",
      "ja": "<XS：要素名= 'メッセージ'> <XS：complexTypeの> <XS：配列> <XS：選択のminOccurs = '0' のmaxOccurs = '無制限'> <XS：要素REF = '主題' /> <XS：要素REF = '体' /> <XS：要素REF = 'スレッド' /> </ XS：選択が> <XS：=任意の名前空間 '##他の' のminOccurs = '0' のmaxOccursの= '無制限' のprocessContents = 'LAX' /> <XS：要素REF = 'エラー' のminOccurs = '0' /> </ XS：シーケンス> <XS：属性名=タイプ= 'XS：文字列' 'から' 使用= '必要' /> <XS：属性名= 'ID' タイプ= 'のxs：NMTOKEN' 使用= 'オプション' /> <XS：タイプ= 'に' 属性名= 'のxs：文字列' 使用= '必要' /> <XS：属性名=」タイプ」使用= '任意' デフォルト= '正常'> <XS：単純> <XS：制限基地= 'XS：NMTOKEN'> <XS：列挙値= 'チャット' /> <XS：列挙値= 'エラー' /> <XS：列挙値= 'グループチャット' /> <XS：列挙値= '見出し' /> <XS：列挙値= '正常' /> </ XS：制限>"
    },
    {
      "indent": 5,
      "text": " </xs:simpleType> </xs:attribute> <xs:attribute ref='xml:lang' use='optional'/> </xs:complexType> </xs:element>",
      "ja": "</ XS：単純> </ XS：属性> <XS：属性REF = 'のxml：langの' 使用= '任意' /> </ XS：complexTypeの> </ XS：要素>"
    },
    {
      "indent": 5,
      "text": "<xs:element name='body'> <xs:complexType> <xs:simpleContent> <xs:extension base='xs:string'> <xs:attribute ref='xml:lang' use='optional'/> </xs:extension> </xs:simpleContent> </xs:complexType> </xs:element>",
      "ja": "<XS：要素名= '体'> <XS：complexTypeの> <XS：simpleContentを> <XS：増設ベース= 'XS：文字列'> <XS：属性REF = 'のxml：langの' 使用= 'オプション' /> </ XS：拡張> </ XS：simpleContentを> </ XS：complexTypeの> </ XS：要素>"
    },
    {
      "indent": 5,
      "text": "<xs:element name='subject'> <xs:complexType> <xs:simpleContent> <xs:extension base='xs:string'> <xs:attribute ref='xml:lang' use='optional'/> </xs:extension> </xs:simpleContent> </xs:complexType> </xs:element>",
      "ja": "<XS：要素名= '被験者'> <XS：complexTypeの> <XS：simpleContentを> <XS：拡張ベース= 'のxs：string' は> <XS：属性REF = 'のxml：langの' 使用= '任意' /> </ XS：拡張> </ XS：simpleContentを> </ XS：complexTypeの> </ XS：要素>"
    },
    {
      "indent": 5,
      "text": "<xs:element name='thread'> <xs:complexType> <xs:simpleContent> <xs:extension base='xs:NMTOKEN'> <xs:attribute name='parent' type='xs:NMTOKEN' use='optional'/> </xs:extension> </xs:simpleContent> </xs:complexType> </xs:element>",
      "ja": "<XS：要素名= 'スレッド'> <XS：complexTypeの> <XS：simpleContentを> <XS：増設ベース= 'XS：NMTOKEN'> <XS：属性名= '親' タイプ= 'XS：NMTOKEN' 使用= 'オプション' /> </ XS：拡張> </ XS：simpleContentを> </ XS：complexTypeの> </ XS：要素>"
    },
    {
      "indent": 5,
      "text": "<xs:element name='subject'> <xs:complexType> <xs:simpleContent> <xs:extension base='xs:NMTOKEN'> <xs:attribute name='parent' type='xs:NMTOKEN' use='optional'/> </xs:extension> </xs:simpleContent> </xs:complexType> </xs:element>",
      "ja": "<XS：要素名= '被験者'> <XS：complexTypeの> <XS：simpleContentを> <XS：拡張ベース= 'のxs：NMTOKEN'> <XS：属性名= '親' タイプ= 'のxs：NMTOKEN' 使用= 'オプション' /> </ XS：拡張> </ XS：simpleContentを> </ XS：complexTypeの> </ XS：要素>"
    },
    {
      "indent": 5,
      "text": "<xs:element name='presence'> <xs:complexType> <xs:sequence> <xs:choice minOccurs='0' maxOccurs='unbounded'> <xs:element ref='show'/> <xs:element ref='status'/> <xs:element ref='priority'/> </xs:choice> <xs:any namespace='##other' minOccurs='0' maxOccurs='unbounded' processContents='lax'/> <xs:element ref='error' minOccurs='0'/> </xs:sequence> <xs:attribute name='from' type='xs:string' use='required'/> <xs:attribute name='id' type='xs:NMTOKEN' use='optional'/> <xs:attribute name='to' type='xs:string' use='required'/> <xs:attribute name='type' use='optional'> <xs:simpleType> <xs:restriction base='xs:NMTOKEN'> <xs:enumeration value='error'/> <xs:enumeration value='probe'/> <xs:enumeration value='subscribe'/> <xs:enumeration value='subscribed'/> <xs:enumeration value='unavailable'/> <xs:enumeration value='unsubscribe'/> <xs:enumeration value='unsubscribed'/> </xs:restriction> </xs:simpleType>",
      "ja": "<XS：要素名= '存在'> <XS：complexTypeの> <XS：シーケンス> <XS：選択肢のminOccurs = '0' のmaxOccurs = '無制限'> <XS：要素REF = 'ショー' /> <XS：要素REF = '状態' /> <XS：要素REF = '優先' /> </ XS：選択が> <XS：=任意の名前空間 '##他の' のminOccurs = '0' のmaxOccursの= '無制限' のprocessContents = 'LAX' /> <XS：要素REF = 'エラー' のminOccurs = '0' /> </ XS：シーケンス> <XS：属性名=タイプ= 'XS：文字列' 'から' 使用= '必要' /> <XS：属性名= 'ID' タイプ= 'のxs：NMTOKEN' 使用= 'オプション' /> <XS：タイプ= 'に' 属性名= 'のxs：文字列' 使用= '必要' /> <XS：属性名=」タイプ」使用= '任意'> <XS：単純> <XS：制限基地= 'のxs：NMTOKEN'> <XS：列挙値= 'エラー' /> <XS：列挙値= 'プローブ' /> <XS：列挙値= '購読' /> <XS：列挙値= '加入' /> <XS：列挙値= '使用できません' /> <XS：列挙値= '退会' /> <XS：列挙値は= '解除' /> </ XS：制限> </ XS：単純>"
    },
    {
      "indent": 5,
      "text": " </xs:attribute> <xs:attribute ref='xml:lang' use='optional'/> </xs:complexType> </xs:element>",
      "ja": "</ XS：属性> <XS：属性REF = 'のxml：langの' 使用= '任意' /> </ XS：complexTypeの> </ XS：要素>"
    },
    {
      "indent": 5,
      "text": "<xs:element name='show'> <xs:simpleType> <xs:restriction base='xs:NMTOKEN'> <xs:enumeration value='away'/> <xs:enumeration value='chat'/> <xs:enumeration value='dnd'/> <xs:enumeration value='xa'/> </xs:restriction> </xs:simpleType> </xs:element>",
      "ja": "<XS：要素名= '表示'> <XS：単純> <XS：制限基地= 'XS：NMTOKEN'> <XS：列挙値= '離れる' /> <XS：列挙値= 'チャット' /> < XS：列挙値= 'DND' /> <XS：列挙値= 'XA' /> </ XS：制限> </ XS：単純> </ XS：要素>"
    },
    {
      "indent": 5,
      "text": "<xs:element name='status'> <xs:complexType> <xs:simpleContent> <xs:extension base='string1024'> <xs:attribute ref='xml:lang' use='optional'/> </xs:extension> </xs:simpleContent> </xs:complexType> </xs:element>",
      "ja": "<XS：要素名= 'ステータス'> <XS：complexTypeの> <XS：simpleContentを> <XS：拡張ベース= 'string1024'> <XS：属性REF = 'のxml：langの' 使用= '任意' /> </ XS：拡張機能> </ XS：simpleContentを> </ XS：complexTypeの> </ XS：要素>"
    },
    {
      "indent": 5,
      "text": "<xs:simpleType name='string1024'> <xs:restriction base='xs:string'> <xs:minLength value='1'/> <xs:maxLength value='1024'/> </xs:restriction> </xs:simpleType>",
      "ja": "<XS：単純名= 'string1024'> <XS：制限基地= 'XS：文字列'> <XS：はminLength値= '1' /> <XS：maxLengthの値= '1024' /> </ XS：制限> </ XS：単純>"
    },
    {
      "indent": 5,
      "text": "<xs:element name='priority' type='xs:byte' default='0'/>",
      "ja": "<XS：要素名= '優先' タイプ= 'のxs：バイトのデフォルト= '0'/>"
    },
    {
      "indent": 5,
      "text": "<xs:element name='iq'> <xs:complexType> <xs:sequence> <xs:any namespace='##other' minOccurs='0' maxOccurs='1' processContents='lax'/> <xs:element ref='error' minOccurs='0'/> </xs:sequence> <xs:attribute name='from' type='xs:string' use='required'/>",
      "ja": "<XS：要素名= 'IQ'> <XS：complexTypeの> <XS：配列> <XS：任意の名前空間= '##その他' のminOccurs = '0' のmaxOccurs = '1' のprocessContents = '緩い' /> <XS ：要素のREF = 'エラー' のminOccurs = '0' /> </ XS：シーケンス> <XS：属性名=タイプ= 'XS：文字列' 'から' 使用= '必要' />"
    },
    {
      "indent": 5,
      "text": " <xs:attribute name='id' type='xs:NMTOKEN' use='required'/> <xs:attribute name='to' type='xs:string' use='required'/> <xs:attribute name='type' use='required'> <xs:simpleType> <xs:restriction base='xs:NMTOKEN'> <xs:enumeration value='error'/> <xs:enumeration value='get'/> <xs:enumeration value='result'/> <xs:enumeration value='set'/> </xs:restriction> </xs:simpleType> </xs:attribute> <xs:attribute ref='xml:lang' use='optional'/> </xs:complexType> </xs:element>",
      "ja": "<XS：属性名= 'ID' タイプ= 'のxs：NMTOKEN' 使用= '必要' /> <XS：タイプ= 'に' 属性名= 'のxs：文字列' 使用= '必要' /> <XS：属性名前= '型' の使用は、= '必要'> <XS：単純> <XS：制限ベース= 'XS：NMTOKEN'> <XS：列挙値= 'エラー' /> <XS：列挙値= '取得' /> <XS：列挙値= '結果' /> </ XS：制限> <XS列挙値= / 'セット'> </ XS：単純> </ XS：属性> <XS：属性REF = 'XML：langの'使用=' 任意 '/> </ XS：complexTypeの> </ XS：要素>"
    },
    {
      "indent": 5,
      "text": "<xs:element name='error'> <xs:complexType> <xs:sequence xmlns:err='urn:ietf:params:xml:ns:xmpp-stanzas'> <xs:group ref='err:stanzaErrorGroup'/> <xs:element ref='err:text' minOccurs='0'/> </xs:sequence> <xs:attribute name='by' type='xs:string' use='optional'/> <xs:attribute name='type' use='required'> <xs:simpleType> <xs:restriction base='xs:NMTOKEN'> <xs:enumeration value='auth'/> <xs:enumeration value='cancel'/> <xs:enumeration value='continue'/> <xs:enumeration value='modify'/> <xs:enumeration value='wait'/> </xs:restriction> </xs:simpleType> </xs:attribute> </xs:complexType> </xs:element>",
      "ja": "<XS：要素名= 'エラー'> <XS：complexTypeの> <XS：配列のxmlns：誤る= 'URN：IETF：paramsは：XML：NS：XMPP-スタンザ'> <XS：グループREF = 'ERR：stanzaErrorGroup' /> <XS：要素REF = 'ERR：テキスト' のminOccurs = '0' /> </ XS：シーケンス> <XS：タイプ= 'による' 属性名= 'のxs：文字列' 使用= 'オプション' /> < XS：属性名= 'タイプ' 使用= '必要'> <XS：単純> <XS：制限基地= 'のxs：NMTOKEN'> <XS：列挙値= 'AUTH' /> <XS：列挙値= 'キャンセル'/> <XS：列挙値=' 継続 '/> <XS：列挙値を=' 変更：待っ '/> <XS =列挙値を' '/> </ XS：制限> </ XS：単純> </ XS：属性> </ XS：complexTypeの> </ XS：要素>"
    },
    {
      "indent": 3,
      "text": "</xs:schema>",
      "ja": "</ XS：スキーマ>"
    },
    {
      "indent": 0,
      "text": "A.7. Resource Binding Namespace",
      "ja": "A.7。バインディング名前空間をリソース"
    },
    {
      "indent": 3,
      "text": "<?xml version='1.0' encoding='UTF-8'?>",
      "ja": "<？xmlのバージョン= '1.0' エンコーディング= 'UTF-8'？>"
    },
    {
      "indent": 3,
      "text": "<xs:schema xmlns:xs='http://www.w3.org/2001/XMLSchema' targetNamespace='urn:ietf:params:xml:ns:xmpp-bind' xmlns='urn:ietf:params:xml:ns:xmpp-bind' elementFormDefault='qualified'>",
      "ja": "<XS：スキーマのxmlns：XS = 'のhttp：//www.w3.org/2001/XMLSchema' のtargetNamespace = 'URN：IETF：のparams：XML：NS：XMPP-バインド' のxmlns = \"壷：IETF：のparams：XML ：NS：XMPP-バインド」のelementFormDefault = '資格'>"
    },
    {
      "indent": 5,
      "text": "<xs:element name='bind'> <xs:complexType> <xs:choice> <xs:element name='resource' type='resourceType'/> <xs:element name='jid' type='fullJIDType'/> </xs:choice> </xs:complexType> </xs:element>",
      "ja": "<XS：要素名= 'バインド'> <XS：complexTypeの> <XS：選択> <XS：要素名= 'リソース' タイプ= 'resourcetypeの' /> <XS：要素名= 'JID' タイプ= 'fullJIDType' /> </ XS：選択> </ XS：complexTypeの> </ XS：要素>"
    },
    {
      "indent": 5,
      "text": "<xs:simpleType name='fullJIDType'> <xs:restriction base='xs:string'> <xs:minLength value='8'/> <xs:maxLength value='3071'/> </xs:restriction> </xs:simpleType>",
      "ja": "<XS：simpleTypeの名前= 'fullJIDType'> <XS：制限基地= 'のxs：string' は> <XS：はminLength値= '8' /> <XS：maxLengthの値= '3071' /> </ XS：制限> </ XS：単純>"
    },
    {
      "indent": 5,
      "text": "<xs:simpleType name='resourceType'> <xs:restriction base='xs:string'> <xs:minLength value='1'/> <xs:maxLength value='1023'/> </xs:restriction> </xs:simpleType>",
      "ja": "<XS：simpleTypeの名前= 'resourcetypeの'> <XS：制限基地= 'のxs：string' は> <XS：はminLength値= '1' /> <XS：maxLengthの値= '1023' /> </ XS：制限> </ XS：単純>"
    },
    {
      "indent": 3,
      "text": "</xs:schema>",
      "ja": "</ XS：スキーマ>"
    },
    {
      "indent": 0,
      "text": "A.8. Stanza Error Namespace",
      "ja": "A.8。スタンザエラー名前空間"
    },
    {
      "indent": 3,
      "text": "<?xml version='1.0' encoding='UTF-8'?>",
      "ja": "<？xmlのバージョン= '1.0' エンコーディング= 'UTF-8'？>"
    },
    {
      "indent": 3,
      "text": "<xs:schema xmlns:xs='http://www.w3.org/2001/XMLSchema' targetNamespace='urn:ietf:params:xml:ns:xmpp-stanzas' xmlns='urn:ietf:params:xml:ns:xmpp-stanzas' elementFormDefault='qualified'>",
      "ja": "<XS：スキーマのxmlns：XS = 'HTTP：//www.w3.org/2001/XMLSchema' のtargetNamespace = 'URN：IETF：paramsは：XML：NS：XMPP-スタンザ' のxmlns = 'URN：IETF：paramsは：XML ：NS：XMPP-スタンザのelementFormDefault = '資格'>"
    },
    {
      "indent": 5,
      "text": "<xs:element name='bad-request' type='empty'/> <xs:element name='conflict' type='empty'/> <xs:element name='feature-not-implemented' type='empty'/>",
      "ja": "<XS：要素名= '悪い要求' タイプ= '空' /> <XS：要素名= '葛藤' タイプ= '空' /> <XS：要素名= '機能-実装されていません' タイプ=」空 '/>"
    },
    {
      "indent": 5,
      "text": "<xs:element name='forbidden' type='empty'/> <xs:element name='gone' type='xs:string'/> <xs:element name='internal-server-error' type='empty'/> <xs:element name='item-not-found' type='empty'/> <xs:element name='jid-malformed' type='empty'/> <xs:element name='not-acceptable' type='empty'/> <xs:element name='not-allowed' type='empty'/> <xs:element name='not-authorized' type='empty'/> <xs:element name='policy-violation' type='empty'/> <xs:element name='recipient-unavailable' type='empty'/> <xs:element name='redirect' type='xs:string'/> <xs:element name='registration-required' type='empty'/> <xs:element name='remote-server-not-found' type='empty'/> <xs:element name='remote-server-timeout' type='empty'/> <xs:element name='resource-constraint' type='empty'/> <xs:element name='service-unavailable' type='empty'/> <xs:element name='subscription-required' type='empty'/> <xs:element name='undefined-condition' type='empty'/> <xs:element name='unexpected-request' type='empty'/>",
      "ja": "<XS：要素名= '禁断の' タイプ= '空' /> <XS：要素名= 'ゴーン' タイプ= 'のxs：文字列' /> <XS：要素名= 'サーバ内蔵エラー' タイプ=」空 '/> <XS：要素名=' アイテム-見つかりません 'TYPE = '空'/> <XS：要素名= 'JID-奇形' TYPE = '空'/> <XS：要素名=' ではありません-acceptable」TYPE = '空' /> <XS：要素名= '許可されていない' TYPE = '空' /> <XS：要素名= '許可しない' タイプ= '空の' /> <XS：要素NAME = 'ポリシー違反' TYPE = '空' /> <XS：要素名= '受信者利用不可' TYPE = '空' /> <XS：要素名= 'リダイレクト' TYPE = 'XS：文字列' /> <XS：要素名= '登録必要' TYPE = '空' /> <XS：要素名= 'リモートサーバ-見つからない' TYPE = '空' /> <XS：要素名=「リモートサーバー-timeout」TYPE = '空' /> <XS：要素名= 'リソース制約' TYPE = '空' /> <XS：要素名= 'サービス利用不可' タイプ= '空の' /> <XS：要素=「サブスクリプション必要」タイプに名前を付ける=「空」/> <XS：要素名=「未定義条件」タイプ=「空」/> <XS：要素名=「予期しない要求」タイプ=「空」/>"
    },
    {
      "indent": 5,
      "text": "<xs:group name='stanzaErrorGroup'> <xs:choice> <xs:element ref='bad-request'/> <xs:element ref='conflict'/> <xs:element ref='feature-not-implemented'/> <xs:element ref='forbidden'/> <xs:element ref='gone'/> <xs:element ref='internal-server-error'/> <xs:element ref='item-not-found'/> <xs:element ref='jid-malformed'/> <xs:element ref='not-acceptable'/> <xs:element ref='not-authorized'/> <xs:element ref='not-allowed'/> <xs:element ref='policy-violation'/> <xs:element ref='recipient-unavailable'/> <xs:element ref='redirect'/> <xs:element ref='registration-required'/> <xs:element ref='remote-server-not-found'/> <xs:element ref='remote-server-timeout'/> <xs:element ref='resource-constraint'/> <xs:element ref='service-unavailable'/> <xs:element ref='subscription-required'/> <xs:element ref='undefined-condition'/> <xs:element ref='unexpected-request'/> </xs:choice> </xs:group>",
      "ja": "<XS：グループ名= 'stanzaErrorGroup'> <XS：選択> <XS：要素REF = '悪い要求' /> <XS：要素REF = '葛藤' /> <XS：要素REF = '機能-not-実装 '/> <XS：要素REF =' 禁断の '/> <XS：要素REF =' なくなっ '/> <XS：要素REF =' サーバ内蔵エラー '/> <XS：要素REF =' アイテム - '/> <XS：要素REF ='、見つからないJID-奇形 '/> <XS：要素REF ='、許容できない '/> <XS：要素REF =' 許可しない」/> <XS：要素REF = XS /> < '許容しない'：要素REF = 'ポリシー違反' /> <XS：要素REF = '受取人利用不可' /> <XS：要素REF = 'リダイレクト' /> <XS：要素REF = '登録必要' /> <XS：要素REF = 'リモートサーバ-見つかりません' /> <XS：要素REF = 'リモートサーバタイムアウト' /> <XS：要素REF = 'リソース制約'/> <XS：要素REF =' サービス利用できません '/> <XS：要素REF =' サブスクリプションに必要な '/> <XS：要素REF =' 未定義条件 '/> <XS：要素REF =' 予期しません-request '/> </ XS：選択> </ XS：グループ>"
    },
    {
      "indent": 5,
      "text": "<xs:element name='text'> <xs:complexType> <xs:simpleContent> <xs:extension base='xs:string'> <xs:attribute ref='xml:lang' use='optional'/> </xs:extension> </xs:simpleContent> </xs:complexType> </xs:element>",
      "ja": "<XS：要素名= 'テキスト'> <XS：complexTypeの> <XS：simpleContentを> <XS：増設ベース= 'のxs：文字列'> <XS：属性REF = 'のxml：langの' 使用= 'オプション' /> </ XS：拡張> </ XS：simpleContentを> </ XS：complexTypeの> </ XS：要素>"
    },
    {
      "indent": 5,
      "text": "<xs:simpleType name='empty'> <xs:restriction base='xs:string'> <xs:enumeration value=''/> </xs:restriction> </xs:simpleType>",
      "ja": "<XS：単純名= '空'> <XS：制限基地= 'XS：文字列'> <XS：列挙値= '' /> </ XS：制限> </ XS：simpleTypeの>"
    },
    {
      "indent": 3,
      "text": "</xs:schema>",
      "ja": "</ XS：スキーマ>"
    },
    {
      "indent": 0,
      "text": "Appendix B. Contact Addresses",
      "ja": "付録B.連絡先"
    },
    {
      "indent": 3,
      "text": "Consistent with [MAILBOXES], organization that offer XMPP services are encouraged to provide an Internet mailbox of \"XMPP\" for inquiries related to that service, where the host portion of the resulting mailto URI is the organization's domain, not the domain of the XMPP service itself (e.g., the XMPP service might be offered at im.example.com but the Internet mailbox would be <xmpp@example.com>).",
      "ja": "結果としてのmailto URIのホスト部分は、組織のドメインではなく、XMPPサービスのドメインである[MAILBOXES]、XMPPサービスは、そのサービスに関連するお問い合わせは、「XMPP」のインターネットメールボックスを提供することが奨励されています組織と一致して、自体（例えば、XMPPサービスはim.example.comで提供される可能性がありますが、インターネットのメールボックスが<xmpp@example.com>になります）。"
    },
    {
      "indent": 0,
      "text": "Appendix C. Account Provisioning",
      "ja": "付録C.アカウントの準備"
    },
    {
      "indent": 3,
      "text": "Account provisioning is out of scope for this specification. Possible methods for account provisioning include account creation by a server administrator and in-band account registration using the 'jabber:iq:register' namespace as documented in [XEP-0077]. An XMPP server implementation or administrative function MUST ensure that any JID assigned during account provisioning (including localpart, domainpart, resourcepart, and separator characters) conforms to the canonical format for XMPP addresses defined in [XMPP-ADDR].",
      "ja": "アカウントプロビジョニングは、この仕様の範囲外です。 [XEP-0077]に記載されているように、名前空間アカウントプロビジョニングのための可能な方法は、「登録します：IQジャバー」を使用して、サーバ管理者とインバンドアカウント登録してアカウントの作成が含まれます。 XMPPサーバ実装または管理機能が（ローカル部分、domainpart、resourcepart、および区切り文字を含む）アカウントのプロビジョニング中に割り当てられた任意のJIDは[XMPP-ADDR]で定義されたXMPPアドレスの正規のフォーマットに準拠していることを確実にしなければなりません。"
    },
    {
      "indent": 1,
      "text": "Appendix D. Differences from",
      "ja": "からの付録D.の違い"
    },
    {
      "indent": 3,
      "text": "Based on consensus derived from implementation and deployment experience as well as formal interoperability testing, the following substantive modifications were made from RFC 3920 (in addition to numerous changes of an editorial nature).",
      "ja": "実装と展開の経験だけでなく、フォーマルな相互運用性テストから得られるコンセンサスに基づいて、以下の実質的な変更は、（社説自然の数多くの変更に加えて）RFC 3920で作られました。"
    },
    {
      "indent": 3,
      "text": "o Moved specification of the XMPP address format to a separate document.",
      "ja": "O別の文書へのXMPPアドレス形式の仕様を動かしました。"
    },
    {
      "indent": 3,
      "text": "o Recommended or mandated use of the 'from' and 'to' attributes on stream headers.",
      "ja": "O推奨か「から」と「から」の使用ストリームヘッダーに属性を義務付け。"
    },
    {
      "indent": 3,
      "text": "o More fully specified the stream closing handshake.",
      "ja": "Oより完全にストリーム閉鎖握手を指定。"
    },
    {
      "indent": 3,
      "text": "o Specified the recommended stream reconnection algorithm.",
      "ja": "O推奨ストリーム再接続アルゴリズムを指定しました。"
    },
    {
      "indent": 3,
      "text": "o Changed the name of the <xml-not-well-formed/> stream error condition to <not-well-formed/> for compliance with the XML specification.",
      "ja": "O XML仕様に準拠して</不整形>から<XML-ウェルに形成されていない/>ストリームのエラー状態の名前を変更しました。"
    },
    {
      "indent": 3,
      "text": "o Removed the unnecessary and unused <invalid-id/> stream error (see RFC 3920 for historical documentation).",
      "ja": "O削除不要と未使用<無効-ID />ストリームエラー（歴史的文書のためのRFC 3920を参照）。"
    },
    {
      "indent": 3,
      "text": "o Specified return of the <restricted-xml/> stream error in response to receipt of prohibited XML features.",
      "ja": "O禁止XML機能の受信に応答して、<制限-XML />ストリームエラーの戻り値を指定しました。"
    },
    {
      "indent": 3,
      "text": "o More completely specified the format and handling of the <see-other-host/> stream error, including consistency with RFC 3986 and RFC 5952 with regard to IPv6 addresses (e.g., enclosing the IPv6 address in square brackets '[' and ']').",
      "ja": "Oより完全IPv6アドレス（例えば、角括弧内のIPv6アドレスを囲むに関してRFC 3986及びRFC 5952との整合性を含め、<参照-他のホスト/>ストリームエラーのフォーマットおよび処理を指定した「[」と「] 「）。"
    },
    {
      "indent": 3,
      "text": "o Specified that the SASL SCRAM mechanism is a mandatory-to-implement technology for client-to-server streams.",
      "ja": "O SASL SCRAMメカニズムは、クライアントからサーバーへのストリームのための実装に必須の技術であることを指定しました。"
    },
    {
      "indent": 3,
      "text": "o Specified that TLS plus the SASL PLAIN mechanism is a mandatory-to-implement technology for client-to-server streams.",
      "ja": "O TLSプラスSASL PLAINメカニズムは、クライアントからサーバーへのストリームのための実装に必須の技術であることを指定しました。"
    },
    {
      "indent": 3,
      "text": "o Specified that support for the SASL EXTERNAL mechanism is required for servers but only recommended for clients (since end-user X.509 certificates are difficult to obtain and not yet widely deployed).",
      "ja": "指定されたO SASL EXTERNALメカニズムのサポートは、サーバーに必要なだけ（エンドユーザーのX.509証明書を得ることが困難であり、まだ広く展開されていないため）クライアントのために推奨されます。"
    },
    {
      "indent": 3,
      "text": "o Removed the hard two-connection rule for server-to-server streams.",
      "ja": "Oサーバー間のストリームのためのハード2-接続ルールを削除しました。"
    },
    {
      "indent": 3,
      "text": "o More clearly specified the certificate profile for both public key certificates and issuer certificates.",
      "ja": "Oより明確に公開鍵証明書と発行者証明書の両方のための証明書プロファイルを指定しました。"
    },
    {
      "indent": 3,
      "text": "o Added the <reset/> stream error (Section 4.9.3.16) condition to handle expired/revoked certificates or the addition of security-critical features to an existing stream.",
      "ja": "Oを追加しました期限切れの/失効した証明書または既存のストリームにセキュリティ上重要な機能の追加を処理するためにストリームエラー（セクション4.9.3.16）条件</リセット>を。"
    },
    {
      "indent": 3,
      "text": "o Added the <account-disabled/>, <credentials-expired/>, <encryption-required/>, and <malformed-request/> SASL error conditions to handle error flows mistakenly left out of RFC 3920 or discussed in RFC 4422 but not in RFC 2222.",
      "ja": "O <アカウント不可/>、<資格証明書期限切れ/>、<暗号化に必要な/>を追加し、<不正要求/> SASLエラー条件がエラーを処理するために誤ってRFC 3920のうち、左またはRFC 4422で説明したフローが、ないRFC 2222インチ"
    },
    {
      "indent": 3,
      "text": "o Removed the unused <payment-required/> stanza error.",
      "ja": "O未使用<支払-必要/>スタンザ誤りを削除しました。"
    },
    {
      "indent": 3,
      "text": "o Removed the unnecessary requirement for escaping of characters that map to certain predefined entities, since they do not need to be escaped in XML.",
      "ja": "O彼らはXMLでエスケープする必要がないので、特定の定義済みエンティティにマッピング文字のエスケープのために不必要な要件を削除しました。"
    },
    {
      "indent": 3,
      "text": "o Clarified the process of DNS SRV lookups and fallbacks.",
      "ja": "OのDNS SRVルックアップとフォールバックのプロセスを明らかにしました。"
    },
    {
      "indent": 3,
      "text": "o Clarified the handling of SASL security layers.",
      "ja": "O SASLのセキュリティ層の取扱いを明確化。"
    },
    {
      "indent": 3,
      "text": "o Clarified that a SASL simple user name is the localpart, not the bare JID.",
      "ja": "O SASLシンプルなユーザー名がローカル部分ではなく、裸のJIDであることを明らかにしました。"
    },
    {
      "indent": 3,
      "text": "o Clarified the stream negotiation process and associated flow chart.",
      "ja": "Oストリームネゴシエーションプロセスと関連するフローチャートを明らかにしました。"
    },
    {
      "indent": 3,
      "text": "o Clarified the handling of stream features.",
      "ja": "Oストリーム機能の取り扱いを明確化。"
    },
    {
      "indent": 3,
      "text": "o Added a 'by' attribute to the <error/> element for stanza errors so that the entity that has detected the error can include its JID for diagnostic or tracking purposes.",
      "ja": "エラーを検出したエンティティは、診断または追跡目的のためにそのJIDを含むことができるように、Oスタンザエラーの<誤り/>要素の属性「で」を追加しました。"
    },
    {
      "indent": 3,
      "text": "o Clarified the handling of data that violates the well-formedness definitions for XML 1.0 and XML namespaces.",
      "ja": "O XML 1.0およびXML名前空間の整形式の定義に違反したデータの取り扱いを明確化。"
    },
    {
      "indent": 3,
      "text": "o Specified the security considerations in more detail, especially with regard to presence leaks and denial-of-service attacks.",
      "ja": "O特にプレゼンス漏れやサービス拒否攻撃に関連して、より詳細にセキュリティ上の考慮事項を指定しました。"
    },
    {
      "indent": 3,
      "text": "o Moved documentation of the Server Dialback protocol from this specification to a separate specification maintained by the XMPP Standards Foundation.",
      "ja": "O XMPP規格財団によって維持別々の仕様にこの仕様書からサーバのダイアルバックプロトコルのドキュメントを移動しました。"
    },
    {
      "indent": 0,
      "text": "Appendix E. Acknowledgements",
      "ja": "付録E.謝辞"
    },
    {
      "indent": 3,
      "text": "This document is an update to, and derived from, RFC 3920. This document would have been impossible without the work of the contributors and commenters acknowledged there.",
      "ja": "この文書はに更新され、由来、RFC 3920このドキュメントでは、そこに認め貢献者やコメンテーターの仕事なしには不可能だったでしょう。"
    },
    {
      "indent": 3,
      "text": "Hundreds of people have provided implementation feedback, bug reports, requests for clarification, and suggestions for improvement since publication of RFC 3920. Although the document editor has endeavored to address all such feedback, he is solely responsible for any remaining errors and ambiguities.",
      "ja": "文書エディタは、すべてのそのようなフィードバックに対処するために努めてきましたが、何百人もの人々が、RFC 3920の出版以来、実装のフィードバック、バグレポート、明確化のための要求、および改善のための提案を提供している、彼は残りのエラーや曖昧さのために責任を負うものとします。"
    },
    {
      "indent": 3,
      "text": "Special thanks are due to Kevin Smith, Matthew Wild, Dave Cridland, Philipp Hancke, Waqas Hussain, Florian Zeitz, Ben Campbell, Jehan Pages, Paul Aurich, Justin Karneges, Kurt Zeilenga, Simon Josefsson, Ralph Meijer, Curtis King, and others for their comments during Working Group Last Call.",
      "ja": "特別な感謝はケビン・スミス、マシュー・ワイルド、デイブCridland、フィリップHancke、Waqasフセイン、フロリアン・ツァイツ、ベン・キャンベル、ジェハンページ、ポール・アウリッヒ、ジャスティンKarneges、クルトZeilenga、サイモンJosefsson氏、ラルフ・マイヤー、カーティス・キングによるものであり、そして他の人のためにワーキンググループラストコール中に彼らのコメント。"
    },
    {
      "indent": 3,
      "text": "Thanks also to Yaron Sheffer and Elwyn Davies for their reviews on behalf of the Security Directorate and the General Area Review Team, respectively.",
      "ja": "それぞれのセキュリティ総局と一般エリアレビューチームに代わって彼らのレビューにもヤロン・シェイファーとエルウィン・デイヴィスに感謝します。"
    },
    {
      "indent": 3,
      "text": "The Working Group chairs were Ben Campbell and Joe Hildebrand. The responsible Area Director was Gonzalo Camarillo.",
      "ja": "ワーキンググループの議長はベン・キャンベルとジョー・ヒルデブラントました。責任エリアディレクターはゴンサロ・カマリロました。"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Peter Saint-Andre Cisco 1899 Wyknoop Street, Suite 600 Denver, CO 80202 USA",
      "ja": "ピーターサンアンドレのCisco 1899 Wyknoopストリート、スイート600デンバー、CO 80202 USA"
    },
    {
      "indent": 3,
      "text": "Phone: +1-303-308-3282 EMail: psaintan@cisco.com",
      "ja": "電話：+ 1-303-308-3282 Eメール：psaintan@cisco.com"
    }
  ]
}