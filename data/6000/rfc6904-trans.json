{
  "title": {
    "text": "RFC 6904 - Encryption of Header Extensions in the Secure Real-time Transport Protocol (SRTP)",
    "ja": "RFC 6904 - セキュアリアルタイムトランスポートプロトコルのヘッダの拡張の暗号化（SRTP）"
  },
  "number": 6904,
  "created_at": "2019-11-01 09:43:19.215547+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                         J. Lennox\nRequest for Comments: 6904                                         Vidyo\nUpdates: 3711                                                 April 2013\nCategory: Standards Track\nISSN: 2070-1721",
      "raw": true
    },
    {
      "indent": 11,
      "text": "         Encryption of Header Extensions\nin the Secure Real-time Transport Protocol (SRTP)",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "The Secure Real-time Transport Protocol (SRTP) provides authentication, but not encryption, of the headers of Real-time Transport Protocol (RTP) packets. However, RTP header extensions may carry sensitive information for which participants in multimedia sessions want confidentiality. This document provides a mechanism, extending the mechanisms of SRTP, to selectively encrypt RTP header extensions in SRTP.",
      "ja": "セキュアリアルタイム転送プロトコル（SRTP）は、リアルタイムトランスポートプロトコル（RTP）パケットのヘッダの認証ではなく、暗号化を提供します。しかし、RTPヘッダの拡張機能は、マルチメディアセッションの参加者は、機密性の対象となる機密情報を運ぶことができます。この文書は、選択SRTPでRTPヘッダ拡張を暗号化するために、SRTPのメカニズムを拡張する機構を提供します。"
    },
    {
      "indent": 3,
      "text": "This document updates RFC 3711, the Secure Real-time Transport Protocol specification, to require that all future SRTP encryption transforms specify how RTP header extensions are to be encrypted.",
      "ja": "このドキュメントの更新RFC 3711、セキュアリアルタイムトランスポートプロトコル仕様は、将来のすべてのSRTP暗号化は、RTPヘッダの拡張を暗号化する方法を指定変えることを要求します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 5741のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc6904.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc6904で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2013 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2013 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3\n2.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   4\n3.  Encryption Mechanism  . . . . . . . . . . . . . . . . . . . .   4\n  3.1.  Example Encryption Mask . . . . . . . . . . . . . . . . .   6\n  3.2.  Header Extension Keystream Generation for Existing\n        Encryption Transforms . . . . . . . . . . . . . . . . . .   7\n  3.3.  Header Extension Keystream Generation for Future\n        Encryption Transforms . . . . . . . . . . . . . . . . . .   8\n4.  Signaling (Setup) Information . . . . . . . . . . . . . . . .   8\n  4.1.  Backward Compatibility  . . . . . . . . . . . . . . . . .   9\n5.  Security Considerations . . . . . . . . . . . . . . . . . . .  10\n6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  11\n7.  Acknowledgments . . . . . . . . . . . . . . . . . . . . . . .  11\n8.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  11\n  8.1.  Normative References  . . . . . . . . . . . . . . . . . .  11\n  8.2.  Informative References  . . . . . . . . . . . . . . . . .  12\nAppendix A.  Test Vectors . . . . . . . . . . . . . . . . . . . .  13\n  A.1.  Key Derivation Test Vectors . . . . . . . . . . . . . . .  13\n  A.2.  Header Encryption Test Vectors Using AES-CM . . . . . . .  14",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "The Secure Real-time Transport Protocol [RFC3711] specification provides confidentiality, message authentication, and replay protection for multimedia payloads sent using the Real-time Protocol (RTP) [RFC3550]. However, in order to preserve RTP header compression efficiency, SRTP provides only authentication and replay protection for the headers of RTP packets, not confidentiality.",
      "ja": "セキュアリアルタイムトランスポートプロトコル[RFC3711]仕様は、リアルタイムプロトコル（RTP）[RFC3550]を使用して送信されたマルチメディアペイロードの機密性、メッセージ認証、および再生保護を提供します。しかし、RTPヘッダ圧縮効率を維持するために、SRTPは、RTPパケットではなく、機密性のヘッダの認証のみとリプレイ保護を提供します。"
    },
    {
      "indent": 3,
      "text": "For the standard portions of an RTP header, providing only authentication and replay protection does not normally present a problem, as the information carried in an RTP header does not provide much information beyond that which an attacker could infer by observing the size and timing of RTP packets. Thus, there is little need for confidentiality of the header information.",
      "ja": "RTPヘッダの標準的な部分、RTPヘッダで運ばれた情報は、攻撃者がRTPの大きさとタイミングを観察することによって推測することができたものを超えて多くの情報を提供しないように、通常は問題とならない唯一の認証および再生保護を提供するためパケット。このように、ヘッダ情報の機密保持のための必要はほとんどありません。"
    },
    {
      "indent": 3,
      "text": "However, the security requirements can be different for information carried in RTP header extensions. A number of recent proposals for header extensions using the mechanism described in \"A General Mechanism for RTP Header Extensions\" [RFC5285] carry information for which confidentiality could be desired or essential. Notably, two recent specifications ([RFC6464] and [RFC6465]) contain information about per-packet sound levels of the media data carried in the RTP payload and specify that exposing this information to an eavesdropper is unacceptable in many circumstances (as described in the Security Considerations sections of those RFCs).",
      "ja": "ただし、セキュリティ要件は、RTPヘッダの拡張で運ばれた情報については異なる場合があります。 「RTPヘッダ拡張のための一般的なメカニズム」で説明されたメカニズムを使用して、ヘッダ拡張のための最近の提案の数は、[RFC5285]機密性が所望または必須である可能性があるための情報を運びます。特に、最近の二つの仕様（[RFC6464]及び[RFC6465]）は、RTPペイロードで運ばれたメディアデータのパケットごとの音のレベルに関する情報を含み、に記載されているように盗聴者にこの情報を露出する（多くの状況では受け入れられないことを指定しますセキュリティの考慮事項これらのRFCのセクション）。"
    },
    {
      "indent": 3,
      "text": "This document, therefore, defines a mechanism by which encryption can be applied to RTP header extensions when they are transported using SRTP. As an RTP sender may wish some extension information to be sent in the clear (for example, it may be useful for a network monitoring device to be aware of RTP transmission time offsets [RFC5450]), this mechanism can be selectively applied to a subset of the header extension elements carried in an SRTP packet.",
      "ja": "この文書は、それゆえ、それらはSRTPを用いて輸送されるときに暗号化がRTPヘッダの拡張に適用することができるメカニズムを定義します。いくつかの拡張情報を望むかもしれないRTPの送信者が平文で送信されるように（たとえば、ネットワーク監視装置は、RTP送信時間オフセットを認識するために、それは有用であるかもしれない[RFC5450]）、このメカニズムを選択的サブセットに適用することができますSRTPパケットで運ばれたヘッダ拡張要素。"
    },
    {
      "indent": 3,
      "text": "The mechanism defined by this document encrypts packets' header extensions using the same cryptographic algorithms and parameters as are used to encrypt the packets' RTP payloads. This document defines how this is done for the encryption transforms defined in [RFC3711], [RFC5669], and [RFC6188], which are the SRTP encryption transforms defined by Standards Track RFCs at the time of this writing. It also updates [RFC3711] to indicate that specifications of future SRTP encryption transforms must define how header extension encryption is to be performed.",
      "ja": "このドキュメントによって定義されたメカニズムは、RTPペイロードパケットを暗号化するために使用されるのと同じ暗号化アルゴリズムおよびパラメータを使用して、ヘッダ拡張はパケットを暗号化します。この文書では、暗号化は、この記事の執筆時点で標準化過程のRFCで定義された変換SRTP暗号化されている[RFC3711]、[RFC5669]、および[RFC6188]で定義された変換のためにこれがどのように行われるかを定義します。それはまた、将来のSRTP暗号化変換の仕様はヘッダ拡張の暗号化が実行される方法を定義する必要があることを示すために、[RFC3711]を更新します。"
    },
    {
      "indent": 0,
      "text": "2. Terminology",
      "section_title": true,
      "ja": "2.用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119 [RFC2119] and indicate requirement levels for compliant implementations.",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はありますRFC 2119 [RFC2119]に記載され、対応する実装の要求レベルを示すものと解釈されます。"
    },
    {
      "indent": 0,
      "text": "3. Encryption Mechanism",
      "section_title": true,
      "ja": "3.暗号化メカニズム"
    },
    {
      "indent": 3,
      "text": "Encrypted header extension elements are carried in the same manner as non-encrypted header extension elements, as defined by [RFC5285]. The one- or two-byte header of the extension elements is not encrypted, nor is any of the header extension padding. If multiple different header extension elements are being encrypted, they have separate element identifier values, just as they would if they were not encrypted. Similarly, encrypted and non-encrypted header extension elements have separate identifier values.",
      "ja": "[RFC5285]で定義されるように暗号化されたヘッダ拡張要素は、非暗号化ヘッダ拡張要素と同様に行われます。拡張要素の1バイトまたは2バイトのヘッダが暗号化されていない、またヘッダ拡張パディングのいずれかです。複数の異なるヘッダ拡張要素が暗号化されている場合、それらはそれらが暗号化されていなかったであろう場合と同じように、別個の要素識別子の値を有します。同様に、暗号化および非暗号化ヘッダ拡張要素は、別個の識別子値を有します。"
    },
    {
      "indent": 3,
      "text": "Encrypted header extension elements are carried only in packets encrypted using the Secure Real-time Transport Protocol [RFC3711]. To encrypt (or decrypt) encrypted header extension elements, an SRTP participant first uses the SRTP key derivation algorithm, specified in Section 4.3.1 of [RFC3711], to generate header encryption and header salting keys, using the same pseudorandom function family as is used for the key derivation for the SRTP session. These keys are derived as follows:",
      "ja": "暗号化されたヘッダ拡張要素は、セキュアリアルタイムトランスポートプロトコル[RFC3711]を用いて暗号化されたパケットにのみ行われます。そのまま暗号化（又は復号化）暗号化されたヘッダ拡張要素に、SRTP参加者は最初、同じ擬似ランダム関数ファミリを使用して、ヘッダの暗号化とヘッダ塩析キーを生成するために、[RFC3711]のセクション4.3.1で指定されたSRTP鍵導出アルゴリズムを使用しますSRTPセッションのためのキー派生に使用されます。次のようにこれらのキーは、導出されています。"
    },
    {
      "indent": 3,
      "text": "o k_he (SRTP header encryption): <label> = 0x06, n=n_e.",
      "ja": "O k_he（SRTPヘッダ暗号化）：<ラベル> = 0x06で、N = n_e。"
    },
    {
      "indent": 3,
      "text": "o k_hs (SRTP header salting key): <label> = 0x07, n=n_s.",
      "ja": "O k_hs（SRTPキー塩析ヘッダ）：<ラベル> = 0x07の、N = n_s。"
    },
    {
      "indent": 3,
      "text": "where n_e and n_s are from the cryptographic context: the same size encryption key and salting key are used as are used for the SRTP payload. Additionally, the same master key, master salt, index, and key_derivation_rate are used as for the SRTP payload. (Note that since RTP headers, including header extensions, are authenticated in SRTP, no new authentication key is needed for header extensions.)",
      "ja": "n_eとn_sは、暗号コンテキストから次のとおりです。同じサイズの暗号化キーと塩漬けキーは、SRTPペイロードのために使用されているとして使用されています。また、同一のマスターキー、マスター塩、指数、及び主要な_派生_レートは、SRTPペイロード用として使用されます。 （ヘッダ拡張を含むRTPヘッダが、SRTPで認証されているので、新たな認証キーがヘッダ拡張のために必要とされないことに注意してください。）"
    },
    {
      "indent": 3,
      "text": "A header extension keystream is generated for each packet containing encrypted header extension elements. The details of how this header extension keystream is generated depend on the encryption transform that is used for the SRTP packet. For encryption transforms that have been standardized as of the date of publication of this document, see Section 3.2; for requirements for new transforms, see Section 3.3.",
      "ja": "ヘッダ拡張キーストリームは、暗号化ヘッダ拡張要素を含むパケットごとに生成されます。このヘッダ拡張キーストリームの生成方法の詳細については、暗号化に依存することは、SRTPパケットのために使用される変換。このドキュメントの発行日の時点で標準化されている暗号化変換については、3.2節を参照してください。新しい変換のための要件については、3.3節を参照してください。"
    },
    {
      "indent": 3,
      "text": "After the header extension keystream is generated, the SRTP participant then computes an encryption mask for the header extension, identifying the portions of the header extension that are, or are to be, encrypted. (For an example of this procedure, see Section 3.1.) This encryption mask corresponds to the entire payload of each header extension element that is encrypted. It does not include any non-encrypted header extension elements, any extension element headers, or any padding octets. The encryption mask has all-bits-1 octets (i.e., hexadecimal 0xff) for header extension octets that are to be encrypted and all-bits-0 octets for header extension octets that are not to be encrypted. The set of extension elements to be encrypted is communicated between the sender and the receiver using the signaling mechanisms described in Section 4.",
      "ja": "ヘッダ拡張キーストリームが生成された後、SRTP参加者は、次にであるか、または、暗号化するヘッダ拡張の部分を識別、ヘッダ拡張のための暗号化マスクを計算します。 （この手順の例については、セクション3.1を参照。）この暗号化マスクは、暗号化された各ヘッダ拡張要素の全体のペイロードに相当します。これは、任意の非暗号化ヘッダ拡張要素を、任意の延長要素ヘッダー、または任意のパディングオクテットを含んでいません。暗号化マスクは、すべてのビット-1オクテット（すなわち、進数の0xFF）ヘッダ拡張暗号化されるべきオクテットと全ビット0暗号化されるべきではないヘッダ拡張オクテットのためのオクテットのためを有します。暗号化される拡張要素のセットは、セクション4で説明シグナリングメカニズムを使用して送信者と受信者との間で通信されます。"
    },
    {
      "indent": 3,
      "text": "This encryption mask is computed separately for every packet that carries a header extension. Based on the non-encrypted portions of the headers and the signaled list of encrypted extension elements, a receiver can always determine the correct encryption mask for any encrypted header extension.",
      "ja": "この暗号化マスクがヘッダの拡張子を運ぶパケットごとに別々に計算されます。ヘッダと暗号化された拡張要素の合図リストの非暗号化部分に基づいて、受信機は常に暗号化されたヘッダ拡張のための正しい暗号化マスクを決定することができます。"
    },
    {
      "indent": 3,
      "text": "The SRTP participant bitwise-ANDs the encryption mask with the keystream to produce a masked keystream. It then bitwise exclusive-ORs the header extension with this masked keystream to produce the ciphertext version of the header extension. (Thus, octets indicated as all-bits-1 in the encrypted mask are encrypted, whereas those indicated as all-bits-0 are not.)",
      "ja": "SRTP参加ビット単位の論理積、マスクされたキーストリームを生成するキーストリームと暗号化マスク。次に、ヘッダ拡張の暗号文バージョンを生成するために、このマスクされた鍵ストリームと排他的論理和にヘッダ拡張をビット単位。 （すべてのビット0として示されるものではない一方であるため、すべてのビット-1暗号化されたマスクと同様に示されるオクテットは、暗号化されています）"
    },
    {
      "indent": 3,
      "text": "The header extension encryption process does not include the \"defined by profile\" or \"length\" fields of the header extension, only the field that Section 5.3.1 of [RFC3550] calls \"header extension\" proper, starting with the first [RFC5285] ID and length. Thus, both the encryption mask and the keystream begin at this point.",
      "ja": "ヘッダ拡張暗号化処理は、ヘッダ拡張子の「プロファイルで定義された」または「長さ」フィールドのセクション5.3.1は、[RFC3550]は、「ヘッダ拡張」を呼び出すことのみフィールドを含まない適切な、最初の[RFC5285]で始まりますIDと長さ。このように、暗号化マスクとキーストリームの両方が、この時点で開始します。"
    },
    {
      "indent": 3,
      "text": "This header extension encryption process could, equivalently, be computed by considering the encryption mask as a mixture of the encrypted and unencrypted headers, i.e., as",
      "ja": "このヘッダー拡張暗号化プロセスは、等価的に、のように、すなわち、暗号化および非暗号化ヘッダの混合物として暗号化マスクを考慮することによって計算することができます"
    },
    {
      "indent": 7,
      "text": "EncryptedHeader = (Encrypt(Key, Plaintext) AND MASK) OR\n                  (Plaintext AND (NOT MASK))",
      "raw": true
    },
    {
      "indent": 3,
      "text": "where Encrypt is the encryption function, MASK is the encryption mask, and AND, OR, and NOT are bitwise operations. This formulation of the encryption process might be preferred by implementations for which encryption is performed by a separate module and cannot be modified easily.",
      "ja": "暗号化は、暗号化関数であり、MASKは、暗号化マスクで、AND、OR、およびビット演算されているわけではありません。暗号化処理のこの製剤は、暗号化は、別個のモジュールによって実行され、容易に変更できないの実装によって好まれるかもしれません。"
    },
    {
      "indent": 3,
      "text": "The SRTP authentication tag is computed across the encrypted header extension, i.e., the data that is actually transmitted on the wire. Thus, header extension encryption MUST be done before the authentication tag is computed, and authentication tag validation MUST be done on the encrypted header extensions. For receivers, header extension decryption SHOULD be done only after the receiver has validated the packet's message authentication tag, and the receiver MUST NOT take any actions based on decrypted headers, prior to validating the authentication tag, that could affect the security or proper functioning of the system.",
      "ja": "SRTP認証タグが暗号化されたヘッダ拡張、即ち、実際にワイヤ上で送信されるデータを横切って計算されます。このように、ヘッダ拡張の暗号化は、認証タグが計算される前に行われなければならない、と認証タグの検証は、暗号化されたヘッダ拡張で行う必要があります。受信機のための受信機は、パケットのメッセージ認証タグを検証した後にのみ、ヘッダ拡張復号化が行われるべきである、と復号化されたヘッダーに基づいて何らかの行動をとるならない（MUST NOT）受信機、事前認証タグを有効に、それはセキュリティやの適切な機能に影響を与える可能性がありますシステム。"
    },
    {
      "indent": 0,
      "text": "3.1. Example Encryption Mask",
      "section_title": true,
      "ja": "3.1。例暗号化マスク"
    },
    {
      "indent": 3,
      "text": "If a sender wished to send a header extension containing an encrypted SMPTE timecode [RFC5484] with ID 1, a plaintext transmission time offset [RFC5450] with ID 2, an encrypted audio level indication [RFC6464] with ID 3, and an encrypted NTP timestamp [RFC6051] with ID 4, the plaintext RTP header extension might look like this:",
      "ja": "送信者は、IDが1の暗号化されたSMPTEタイムコード[RFC5484]を含むヘッダ拡張を送信したい場合、平文の送信時間は、ID 2、ID 3との暗号化されたオーディオレベル表示[RFC6464]、および暗号化されたNTPタイムスタンプと[RFC5450]オフセット[RFC6051] ID 4と、平文RTPヘッダ拡張は、次のようになります。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  ID=1 | len=7 |     SMTPE timecode (long form)                |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|       SMTPE timecode (continued)                              |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| SMTPE (cont'd)|  ID=2 | len=2 | toffset                       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| toffset (ct'd)|  ID=3 | len=0 | audio level   |  ID=4 | len=6 |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|       NTP timestamp (Variant B)                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|       NTP timestamp (Variant B, cont'd)       | padding = 0   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 9,
      "text": "Figure 1: Structure of Plaintext Example Header Extension",
      "ja": "図1：平文例ヘッダ拡張の構造"
    },
    {
      "indent": 3,
      "text": "The corresponding encryption mask would then be:",
      "ja": "対応する暗号化マスクは次のようになります。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|0 0 0 0 0 0 0 0|1 1 1 1 1 1 1 1|1 1 1 1 1 1 1 1|1 1 1 1 1 1 1 1|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|1 1 1 1 1 1 1 1|1 1 1 1 1 1 1 1|1 1 1 1 1 1 1 1|1 1 1 1 1 1 1 1|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|1 1 1 1 1 1 1 1|0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0|1 1 1 1 1 1 1 1|0 0 0 0 0 0 0 0|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|1 1 1 1 1 1 1 1|1 1 1 1 1 1 1 1|1 1 1 1 1 1 1 1|1 1 1 1 1 1 1 1|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|1 1 1 1 1 1 1 1|1 1 1 1 1 1 1 1|1 1 1 1 1 1 1 1|0 0 0 0 0 0 0 0|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 10,
      "text": "Figure 2: Encryption Mask for Example Header Extension",
      "ja": "図2：例ヘッダー拡張のための暗号化マスク"
    },
    {
      "indent": 3,
      "text": "In the mask, the octets corresponding to the payloads of the encrypted header extension elements are set to all-1 values, and the octets corresponding to non-encrypted header extension elements, element headers, and header extension padding are set to all-zero values.",
      "ja": "マスクにおいて、暗号化されたヘッダ拡張要素のペイロードに対応するオクテットは全て1の値に設定され、非暗号化ヘッダ拡張要素、要素ヘッダ、およびヘッダ拡張パディングに対応するオクテットは全てゼロ値に設定されています。"
    },
    {
      "indent": 0,
      "text": "3.2. Header Extension Keystream Generation for Existing Encryption Transforms",
      "ja": "3.2。既存の暗号化トランスフォームのヘッダ拡張キーストリームの生成"
    },
    {
      "indent": 3,
      "text": "For the AES-CM and AES-f8 transforms [RFC3711], the SEED-CTR transform [RFC5669], and the AES_192_CM and AES_256_CM transforms [RFC6188], the header extension keystream SHALL be generated for each packet containing encrypted header extension elements using the same encryption transform and Initialization Vector (IV) as are used for that packet's SRTP payload, except that the SRTP encryption and salting keys k_e and k_s are replaced by the SRTP header encryption and header salting keys k_he and k_hs, respectively, as defined above.",
      "ja": "AES-CMおよびAES-F8変換[RFC3711]のために、SEED-CTRは、[RFC5669]変換、及びAES_192_CMとAES_256_CM変換[RFC6188]は、ヘッダ拡張キーストリームを使用して暗号化ヘッダ拡張要素を含むパケットごとに発生するもの同じ暗号化は、のように変換し、初期化ベクトル（IV）SRTP暗号化および上で定義した通り、それぞれ、キーk_heとk_hsを塩析SRTPヘッダの暗号化とヘッダによって置換されk_eそしてたK_sキーを塩析ことを除いて、そのパケットのSRTPのペイロードに使用されます。"
    },
    {
      "indent": 3,
      "text": "For the SEED-CCM and SEED-GCM transforms [RFC5669], the header extension keystream SHALL be generated using the algorithm specified above for the SEED-CTR algorithm. (Because the Authenticated Encryption with Associated Data (AEAD) transform used on the payload in these algorithms includes the RTP header, including the RTP header extension, in its Associated Authenticated Data (AAD), counter-mode encryption for the header extension is believed to be of equivalent cryptographic strength to the CCM and GCM transforms.)",
      "ja": "SEED-CCM及びSEED-GCMの変換[RFC5669]のために、ヘッダ拡張キーストリームは、SEED-CTRアルゴリズムについて上記で指定されたアルゴリズムを用いて生成されなければなりません。これらのアルゴリズムでペイロードに使用される関連するデータを使用して認証暗号化（AEAD）変換は、ヘッダ拡張のためにそれに関連する認証されたデータ（AAD）、カウンタモード暗号化でRTPヘッダ拡張を含むRTPヘッダを含んでいるので（と考えられていますCCMおよびGCM変換と同等の暗号強度であること。）"
    },
    {
      "indent": 3,
      "text": "For the NULL encryption transform [RFC3711], the header extension keystream SHALL be all-zero.",
      "ja": "NULL暗号化のために[RFC3711]を変換、ヘッダ拡張キーストリームは、すべてゼロでなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.3. Header Extension Keystream Generation for Future Encryption Transforms",
      "ja": "3.3。今後の暗号化トランスフォームのヘッダ拡張キーストリームの生成"
    },
    {
      "indent": 3,
      "text": "When new SRTP encryption transforms are defined, this document updates [RFC3711] as follows: in addition to the rules specified in Section 6 of RFC 3711, the Standards Track RFC defining the new transform MUST specify how the encryption transform is to be used with header extension encryption.",
      "ja": "新しいSRTP暗号化変換が定義されている場合、この文書の更新[RFC3711]を次のようにRFC 3711のセクション6で指定された規則に加えて、標準化過程RFCは、暗号化は、ヘッダと一緒に使用する変換方法を指定する必要があり、変換新を定義拡張暗号化。"
    },
    {
      "indent": 3,
      "text": "It is RECOMMENDED that new transformations follow the same mechanisms as are defined in Section 3.2 of this document if they are applicable and are believed to be cryptographically adequate for the transform in question.",
      "ja": "彼らが適用可能であり、問​​題に変換するために、暗号適切であると考えられている場合は、このドキュメントのセクション3.2で定義されているように、新しい変換は同じメカニズムに従うことをお勧めします。"
    },
    {
      "indent": 0,
      "text": "4. Signaling (Setup) Information",
      "section_title": true,
      "ja": "4.シグナリング（セットアップ）情報"
    },
    {
      "indent": 3,
      "text": "Encrypted header extension elements are signaled in the Session Description Protocol (SDP) extmap attribute using the URI \"urn:ietf:params:rtp-hdrext:encrypt\" followed by the URI of the header extension element being encrypted, as well as any extensionattributes that extension normally takes. Figure 3 gives a formal Augmented Backus-Naur Form (ABNF) [RFC5234] showing this grammar extension, extending the grammar defined in [RFC5285].",
      "ja": "暗号化されたヘッダ拡張要素は、URI使用してセッション記述プロトコル（SDP）extmap属性でシグナリングされる「URNを：IETF：paramsは：RTP-hdrextを：暗号化」とは、暗号化されたヘッダ拡張要素のURIに続く、ならびに任意extensionattributes拡張子は通常かかります。図3は、[RFC5234]この文法拡張を示し、[RFC5285]で定義された文法を拡張フォーマルた拡張バッカス・ナウアフォーム（ABNF）を与えます。"
    },
    {
      "indent": 3,
      "text": "enc-extensionname = %x75.72.6e.3a.69.65.74.66.3a.70.61.72.61.6d.73.3a %x72.74.70.2d.68.64.72.65.78.74.3a.65.6e.63.72.79.70.74 ; \"urn:ietf:params:rtp-hdrext:encrypt\" in lower case",
      "ja": "ENC-がextensionName =％x75.72.6e.3a.69.65.74.66.3a.70.61.72.61.6d.73.3a％x72.74.70.2d.68.64.72.65.78.74.3a.65.6e.63.72.79.70.74。小文字で \"URN：IETF：のparams：RTP-hdrext暗号化\""
    },
    {
      "indent": 3,
      "text": "extmap =/ mapentry SP enc-extensionname SP extensionname [SP extensionattributes]",
      "ja": "extmap = / mapentry SP ENC-がextensionName SPのがextensionName [SPのextensionattributes]"
    },
    {
      "indent": 3,
      "text": "; extmap, mapentry, extensionname, and extensionattributes ; are defined in [RFC5285]",
      "ja": "; extmap、mapentry、がextensionName、およびextensionattributes。 [RFC5285]で定義されています"
    },
    {
      "indent": 17,
      "text": "Figure 3: Syntax of the \"encrypt\" extmap",
      "ja": "図3：「暗号化」extmapの構文"
    },
    {
      "indent": 3,
      "text": "Thus, for example, to signal an SRTP session using encrypted SMPTE timecodes [RFC5484], while simultaneously signaling plaintext transmission time offsets [RFC5450], an SDP document could contain the text shown in Figure 4 (line breaks have been added for formatting).",
      "ja": "したがって、例えば、同時に平文伝送時間オフセット[RFC5450]をシグナリングしながら、SDP文書が（改行をフォーマットするために追加されている）は、図4に示されているテキストを含むことができ、暗号化されたSMPTEタイムコード[RFC5484]を使用して、SRTPセッションを通知します。"
    },
    {
      "indent": 3,
      "text": "m=audio 49170 RTP/SAVP 0 a=crypto:1 AES_CM_128_HMAC_SHA1_32 \\ inline:NzB4d1BINUAvLEw6UzF3WSJ+PSdFcGdUJShpX1Zj|2^20|1:32 a=extmap:1 urn:ietf:params:rtp-hdrext:encrypt \\ urn:ietf:params:rtp-hdrext:smpte-tc 25@600/24 a=extmap:2 urn:ietf:params:rtp-hdrext:toffset",
      "ja": "M =オーディオ49170 RTP / SAVP 0 A =暗号：1 AES_CM_128_HMAC_SHA1_32 \\インライン：NzB4d1BINUAvLEw6UzF3WSJ + PSdFcGdUJShpX1Zj | ^ 20 2 | 1：32 = extmap：1 URN：IETF：paramsは：RTP-hdrext：\\ URNを暗号化：IETF：paramsは：RTP-hdrext：SMPTE-TC 25 24分の600 = extmap @：2 URN：IETF：paramsは：RTP-hdrext：TOFFSET"
    },
    {
      "indent": 9,
      "text": "Figure 4: Sample SDP Document Offering Encrypted Headers",
      "ja": "図4：サンプルSDPドキュメント売出し暗号化されたヘッダ"
    },
    {
      "indent": 3,
      "text": "This example uses SDP security descriptions [RFC4568] for SRTP keying, but this is merely for illustration. Any SRTP keying mechanism to establish session keys will work.",
      "ja": "この例では、SRTPキーイングのためのSDPセキュリティ記述[RFC4568]を使用するが、これは例示のために過ぎません。セッションキーを確立するために、任意のSRTPのキーイングメカニズムが動作します。"
    },
    {
      "indent": 3,
      "text": "The extmap SDP attribute is defined in [RFC5285] as being either a session or media attribute. If the extmap for an encrypted header extension is specified as a media attribute, it MUST be specified only for media that use SRTP-based RTP profiles. If such an extmap is specified as a session attribute, there MUST be at least one media in the SDP session that uses an SRTP-based RTP profile. The session-level extmap applies to all the SRTP-based media in the session and MUST be ignored for all other (non-SRTP or non-RTP) media.",
      "ja": "extmapのSDP属性は、セッション又はメディア属性のいずれかであると[RFC5285]で定義されています。暗号化されたヘッダ拡張のextmapがメディア属性として指定されている場合は、それだけSRTPベースのRTPプロファイルを使用してメディアに指定しなければなりません。そのようなextmapセッション属性として指定されている場合、SRTPベースのRTPプロファイルを使用してSDPセッションにおける少なくとも1つのメディアが存在していなければなりません。セッションレベルextmapは、セッション内のすべてのSRTPベースのメディアに適用され、他のすべての（非SRTPまたは非RTP）メディアでは無視されなければなりません。"
    },
    {
      "indent": 3,
      "text": "The \"urn:ietf:params:rtp-hdrext:encrypt\" extension MUST NOT be recursively applied to itself.",
      "ja": "\"URN：IETF：のparams：RTP-hdrext：暗号化\" の拡張子が再帰的に自分自身に適用してはなりません。"
    },
    {
      "indent": 0,
      "text": "4.1. Backward Compatibility",
      "section_title": true,
      "ja": "4.1。下位互換性"
    },
    {
      "indent": 3,
      "text": "Following the procedures in [RFC5285], an SDP endpoint that does not understand the \"urn:ietf:params:rtp-hdrext:encrypt\" extension URI will ignore the extension and, for SDP offer/answer, will negotiate not to use it.",
      "ja": "[RFC5285]の手順、理解していないSDPエンドポイント以下の「：IETF：のparams：RTP-hdrext：URNを暗号化する」拡張URIはSDPのオファー/アンサーのために、拡張子を無視しますが、それを使用しないように交渉します。"
    },
    {
      "indent": 3,
      "text": "For backward compatibility with endpoints that do not implement this specification, in a negotiated session (whether using offer/answer or some other means), best-effort encryption of a header extension element is possible: an endpoint MAY offer the same header extension element both encrypted and unencrypted. An offerer MUST offer only best-effort negotiation when lack of confidentiality would be acceptable in the backward-compatible case. Answerers (or equivalent peers in a negotiation) that understand header extension encryption SHOULD choose the encrypted form of the offered header extension element and mark the unencrypted form \"inactive\", unless they have an explicit reason to prefer the unencrypted form. In all cases, answerers MUST NOT negotiate the use of, and senders MUST NOT send, both encrypted and unencrypted forms of the same header extension.",
      "ja": "この仕様を実装していないエンドポイントとの後方互換性のために、交渉されたセッション（オファー/アンサーまたはいくつかの他の手段を使用してかどうか）で、ヘッダ拡張要素のベストエフォート型の暗号化が可能である：エンドポイントが両方とも同じヘッダ拡張要素を提供することがあります暗号化と暗号化されていません。機密性の欠如は、下位互換性の場合には許容可能であるとき、オファー側はベストエフォート型の交渉を提供しなければなりません。彼らは暗号化されていない形式を好むための明示的な理由がない限り、ヘッダ拡張暗号化を理解する回答（または交渉における同等のピア）は、提供されたヘッダ拡張要素の暗号化された形式を選択して、暗号化されていない形「非アクティブ」とマークすべきです。全ての場合において、回答は、の使用を交渉してはいけません、そして送信者は、同一のヘッダ拡張の暗号化と暗号化されていない両方の形態を送ってはいけません。"
    },
    {
      "indent": 3,
      "text": "Note that, as always, users of best-effort encryption MUST be cautious of bid-down attacks, where a man-in-the-middle attacker removes a higher-security option, forcing endpoints to negotiate a lower-security one. Appropriate countermeasures depend on the signaling protocol in use, but users can ensure, for example, that signaling is integrity-protected.",
      "ja": "いつものように、ベストエフォート型の暗号化のユーザはのman-in-the-middle攻撃者は低セキュリティ1を交渉するために、エンドポイントを強制的に、より高いセキュリティオプションを削除し、入札ダウン攻撃、の慎重でなければならない、ということに注意してください。例えば、そのシグナル伝達が完全性保護され、適切な対策が使用されているシグナリングプロトコルに依存するが、ユーザーが確保することができます。"
    },
    {
      "indent": 0,
      "text": "5. Security Considerations",
      "section_title": true,
      "ja": "5.セキュリティについての考慮事項"
    },
    {
      "indent": 3,
      "text": "The security properties of header extension elements protected by the mechanism in this document are equivalent to those for SRTP payloads.",
      "ja": "この文書に記載されている機構によって保護ヘッダ拡張要素のセキュリティプロパティは、SRTPペイロードのためのものと同等です。"
    },
    {
      "indent": 3,
      "text": "The mechanism defined in this document does not provide confidentiality about which header extension elements are used for a given SRTP packet, only for the content of those header extension elements. This appears to be in the spirit of SRTP itself, which does not encrypt RTP headers. If this is a concern, an alternate mechanism would be needed to provide confidentiality.",
      "ja": "この文書で定義された機構は、ヘッダ拡張要素をのみヘッダ拡張要素のコンテンツを、所定のSRTPパケットのために使用されるかについての機密性を提供しません。これは、RTPヘッダを暗号化しないSRTP自体、の精神であるように思われます。これが懸念される場合は、別のメカニズムは、機密性を提供するために必要とされるであろう。"
    },
    {
      "indent": 3,
      "text": "For the two-byte-header form of header extension elements (0x100N, where \"N\" is the appbits field), this mechanism does not provide any protection to zero-length header extension elements (for which their presence or absence is the only information they carry). It also does not provide any protection for the appbits (field 256, the lowest four bits of the \"defined by profile\" field) of the two-byte headers. Neither of these features is present in the one-byte-header form of header extension elements (0xBEDE), so these limitations do not apply in that case.",
      "ja": "（「N」は0x100N、appbitsフィールド）ヘッダ拡張要素の二バイトのヘッダ形式のために、この機構は、そのため、それらの有無情報のみである（ゼロ長ヘッダ拡張要素への保護を提供しません彼らは運ぶ）。また、2つのバイトヘッダのappbitsための任意の保護（フィールド256、「プロファイルによって定義された」フィールドの最下位4ビット）を提供しません。これらの特徴のいずれも、ヘッダ拡張要素（0xBEDE）の1バイトヘッダの形で存在するので、これらの制限は、その場合には適用されません。"
    },
    {
      "indent": 3,
      "text": "This mechanism cannot protect RTP header extensions that do not use the mechanism defined in [RFC5285].",
      "ja": "このメカニズムは[RFC5285]で定義されたメカニズムを使用していないRTPヘッダ拡張を保護することはできません。"
    },
    {
      "indent": 3,
      "text": "This document does not specify the circumstances in which extension header encryption should be used. Documents defining specific header extension elements should provide guidance on when encryption is appropriate for these elements.",
      "ja": "この文書では、拡張ヘッダの暗号化を使用すべき状況を指定していません。特定ヘッダ拡張要素を定義文書は、暗号化は、これらの要素のために適切である場合にガイダンスを提供すべきです。"
    },
    {
      "indent": 3,
      "text": "If a middlebox does not have access to the SRTP authentication keys, it has no way to verify the authenticity of unencrypted RTP header extension elements (or the unencrypted RTP header), even though it can monitor them. Therefore, such middleboxes MUST treat such headers as untrusted and potentially generated by an attacker, in the same way as they treat unauthenticated traffic. (This does not mean that middleboxes cannot view and interpret such traffic, of course, only that appropriate skepticism needs to be maintained about the results of such interpretation.)",
      "ja": "ミドルは、SRTP認証キーへのアクセスを持っていない場合、それはそれらを監視することができていても、暗号化されていないRTPヘッダ拡張要素（または暗号化されていないRTPヘッダ）の信憑性を検証する方法はありません。したがって、このようなミドルボックスは、彼らが認証されていないトラフィックを扱うのと同じ方法で、信頼されていないと、攻撃者によって生成されたようなヘッダを扱わなければなりません。 （これは、適切な懐疑論は、そのような解釈の結果については維持する必要があるだけで、ミドルボックスはもちろん、そのようなトラフィックを表示して解釈することができないことを意味するものではありません。）"
    },
    {
      "indent": 3,
      "text": "There is no mechanism defined to protect header extensions with different algorithms or encryption keys than are used to protect the RTP payloads. In particular, it is not possible to provide confidentiality for a header extension while leaving the payload in cleartext.",
      "ja": "RTPペイロードを保護するために使用されているとは異なるアルゴリズムや暗号化キーを持つヘッダ拡張を保護するために定義されたメカニズムはありません。特に、平文ペイロードを残しつつヘッダ拡張のための機密性を提供することは不可能です。"
    },
    {
      "indent": 3,
      "text": "The dangers of using weak or NULL authentication with SRTP, described in Section 9.5 of [RFC3711], apply to encrypted header extensions as well. In particular, since some header extension elements will have some easily guessed plaintext bits, strong authentication is REQUIRED if an attacker setting such bits could have a meaningful effect on the behavior of the system.",
      "ja": "[RFC3711]のセクション9.5に記載SRTPで弱いまたはNULL認証を使用しての危険性は、同様に暗号化されたヘッダの拡張にも適用されます。いくつかのヘッダ拡張要素がいくつかの容易に推測平文ビットを有するので、このようなビットを設定する攻撃者がシステムの動作に意味のある効果を有することができれば、特に、強力な認証が必要となります。"
    },
    {
      "indent": 3,
      "text": "The technique defined in this document can be applied only to encryption transforms that work by generating a pseudorandom keystream and bitwise exclusive-ORing it with the plaintext, such as CTR or f8. It will not work with ECB, CBC, or any other encryption method that does not use a keystream.",
      "ja": "この文書で定義されている技術は、暗号化に適用することができるようなCTR又はF8として、排他的論理和平文でそれを擬似ランダム鍵ストリームとビット単位を生成することによって、その仕事を変換します。それはECB、CBC、またはキーストリームを使用していない他の暗号化方式では動作しません。"
    },
    {
      "indent": 0,
      "text": "6. IANA Considerations",
      "section_title": true,
      "ja": "6. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "This document defines a new extension URI to the RTP Compact Header Extensions subregistry of the Real-Time Transport Protocol (RTP) Parameters registry, according to the following data:",
      "ja": "このドキュメントでは、次のデータによると、リアルタイムトランスポートプロトコル（RTP）パラメータレジストリのRTPコンパクトヘッダー拡張副登録に新しい拡張URIを定義します。"
    },
    {
      "indent": 6,
      "text": "Extension URI: urn:ietf:params:rtp-hdrext:encrypt Description: Encrypted header extension element Contact: jonathan@vidyo.com Reference: RFC 6904",
      "ja": "拡張URI：URN：IETF：paramsは：RTP-hdrext：暗号化説明：暗号化されたヘッダ拡張要素の接触：jonathan@vidyo.com参照：RFC 6904"
    },
    {
      "indent": 0,
      "text": "7. Acknowledgments",
      "section_title": true,
      "ja": "7.謝辞"
    },
    {
      "indent": 3,
      "text": "Thanks to Benoit Claise, Roni Even, Stephen Farrell, Kevin Igoe, Joel Jaeggli, David McGrew, David Singer, Robert Sparks, Magnus Westerlund, Qin Wu, and Felix Wyss for their comments and suggestions in the development of this specification.",
      "ja": "ブノワClaiseのおかげで、ロニでも、この仕様の開発における彼らのコメントや提案のためのスティーブン・ファレル、ケビンIgoe、ジョエルJaeggli、デビッドマグリュー、デビッド・シンガー、ロバートスパークス、マグヌスウェスター、秦呉、とフェリックスWyssの。"
    },
    {
      "indent": 0,
      "text": "8. References",
      "section_title": true,
      "ja": "8.参照文献"
    },
    {
      "indent": 0,
      "text": "8.1. Normative References",
      "section_title": true,
      "ja": "8.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC3550] Schulzrinne, H., Casner, S., Frederick, R., and V. Jacobson, \"RTP: A Transport Protocol for Real-Time Applications\", STD 64, RFC 3550, July 2003.",
      "ja": "[RFC3550] Schulzrinneと、H.、Casner、S.、フレデリック、R.、およびV.ヤコブソン、 \"RTP：リアルタイムアプリケーションのためのトランスポートプロトコル\"、STD 64、RFC 3550、2003月。"
    },
    {
      "indent": 3,
      "text": "[RFC3711] Baugher, M., McGrew, D., Naslund, M., Carrara, E., and K. Norrman, \"The Secure Real-time Transport Protocol (SRTP)\", RFC 3711, March 2004.",
      "ja": "[RFC3711] Baugher、M.、マグリュー、D.、Naslund、M.、カララ、E.、およびK. Norrman、 \"セキュアリアルタイム転送プロトコル（SRTP）\"、RFC 3711、2004年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC5234] Crocker, D. and P. Overell, \"Augmented BNF for Syntax Specifications: ABNF\", STD 68, RFC 5234, January 2008.",
      "ja": "[RFC5234]クロッカー、D.、およびP. Overell、 \"構文仕様のための増大しているBNF：ABNF\"、STD 68、RFC 5234、2008年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC5285] Singer, D. and H. Desineni, \"A General Mechanism for RTP Header Extensions\", RFC 5285, July 2008.",
      "ja": "[RFC5285]歌手、D.およびH. Desineni、 \"RTPヘッダー拡張のための一般的なメカニズム\"、RFC 5285、2008年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC5669] Yoon, S., Kim, J., Park, H., Jeong, H., and Y. Won, \"The SEED Cipher Algorithm and Its Use with the Secure Real-Time Transport Protocol (SRTP)\", RFC 5669, August 2010.",
      "ja": "[RFC5669]ユン、S.、金、J.、公園、H.、チョン、H.、およびY.ウォン、 \"SEED暗号アルゴリズムおよびセキュアリアルタイムトランスポートプロトコル（SRTP）での使用\"、RFC 5669、2010年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC6188] McGrew, D., \"The Use of AES-192 and AES-256 in Secure RTP\", RFC 6188, March 2011.",
      "ja": "[RFC6188]マグリュー、D.、 \"セキュアRTPにおけるAES-192およびAES-256を使用する\"、RFC 6188、2011年3月。"
    },
    {
      "indent": 0,
      "text": "8.2. Informative References",
      "section_title": true,
      "ja": "8.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[RFC4568] Andreasen, F., Baugher, M., and D. Wing, \"Session Description Protocol (SDP) Security Descriptions for Media Streams\", RFC 4568, July 2006.",
      "ja": "[RFC4568]アンドレア、F.、Baugher、M.、およびD.翼、 \"メディア・ストリームのセッション記述プロトコル（SDP）のセキュリティの説明\"、RFC 4568、2006年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC5450] Singer, D. and H. Desineni, \"Transmission Time Offsets in RTP Streams\", RFC 5450, March 2009.",
      "ja": "[RFC5450]歌手、D.およびH. Desineni、 \"RTPストリームで伝送時間オフセット\"、RFC 5450、2009年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC5484] Singer, D., \"Associating Time-Codes with RTP Streams\", RFC 5484, March 2009.",
      "ja": "[RFC5484]歌手、D.、 \"RTPストリームとの関連付けタイムコード\"、RFC 5484、2009年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC6051] Perkins, C. and T. Schierl, \"Rapid Synchronisation of RTP Flows\", RFC 6051, November 2010.",
      "ja": "[RFC6051]パーキンス、C.及びT. Schierl、 \"RTPの迅速な同期化はフロー\"、RFC 6051、2010年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC6464] Lennox, J., Ivov, E., and E. Marocco, \"A Real-time Transport Protocol (RTP) Header Extension for Client-to-Mixer Audio Level Indication\", RFC 6464, December 2011.",
      "ja": "[RFC6464]レノックス、J.、Ivov、E.、およびE. Marocco、 \"クライアント・ツー・ミキサーオーディオレベル表示のた​​めのリアルタイムトランスポートプロトコル（RTP）ヘッダ拡張\"、RFC 6464、2011年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC6465] Ivov, E., Marocco, E., and J. Lennox, \"A Real-time Transport Protocol (RTP) Header Extension for Mixer-to-Client Audio Level Indication\", RFC 6465, December 2011.",
      "ja": "[RFC6465] Ivov、E.、Marocco、E.、およびJ.レノックス、 \"リアルタイム転送プロトコルミキサーからクライアントへのオーディオレベル表示について（RTP）ヘッダ拡張\"、RFC 6465、2011年12月。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Test Vectors",
      "ja": "付録A.テストベクトル"
    },
    {
      "indent": 0,
      "text": "A.1. Key Derivation Test Vectors",
      "ja": "A.1。鍵導出テストベクトル"
    },
    {
      "indent": 3,
      "text": "This section provides test data for the header extension key derivation function, using AES-128 in Counter Mode. (The algorithms and keys used are the same as those for the test vectors in Appendix B.3 of [RFC3711].)",
      "ja": "このセクションでは、カウンタモードでAES-128を使用して、ヘッダ拡張キー導出関数のためのテストデータを提供します。 （使用されるアルゴリズムと鍵は、[RFC3711]の付録B.3のテストベクトルに対するものと同じです。）"
    },
    {
      "indent": 3,
      "text": "The inputs to the key derivation function are the 16-octet master key and the 14-octet master salt:",
      "ja": "鍵導出関数への入力は16オクテットのマスターキーと14オクテットのマスター塩であります："
    },
    {
      "indent": 6,
      "text": "master key: E1F97A0D3E018BE0D64FA32C06DE4139",
      "ja": "マスターキー：E1F97A0D3E018BE0D64FA32C06DE4139"
    },
    {
      "indent": 6,
      "text": "master salt: 0EC675AD498AFEEBB6960B3AABE6",
      "ja": "マスター塩：0EC675AD498AFEEBB6960B3AABE6"
    },
    {
      "indent": 3,
      "text": "Following [RFC3711], the input block for AES-CM is generated by exclusive-ORing the master salt with the concatenation of the encryption key label 0x06 with (index DIV kdr), then padding on the right with two null octets, which implements the multiply-by-2^16 operation (see Section 4.3.3 of [RFC3711]). The resulting value is then AES-CM-encrypted using the master key to get the cipher key.",
      "ja": "[RFC3711]以下、AES-CMの入力ブロックが実装（インデックスDIVのKDR）、2つのヌルオクテット右側にパディング付き暗号鍵ラベル0x06での連結との排他的論理和により、マスター塩を生成さ^ 16の操作により-2-乗算（[RFC3711]のセクション4.3.3を参照）。結果の値は、暗号鍵を取得するには、マスターキーを使用してAES-CM-暗号化されます。"
    },
    {
      "indent": 5,
      "text": "index DIV kdr:                    000000000000\nlabel:                          06\nmaster salt:      0EC675AD498AFEEBB6960B3AABE6\n--------------------------------------------------\nXOR:              0EC675AD498AFEEDB6960B3AABE6     (x, PRF input)",
      "raw": true
    },
    {
      "indent": 5,
      "text": "x*2^16: 0EC675AD498AFEEDB6960B3AABE60000 (AES-CM input)",
      "ja": "X * 2 ^ 16：0EC675AD498AFEEDB6960B3AABE60000（AES-CM入力）"
    },
    {
      "indent": 5,
      "text": "hdr. cipher key: 549752054D6FB708622C4A2E596A1B93 (AES-CM output)",
      "ja": "HDR。暗号鍵：549752054D6FB708622C4A2E596A1B93（AES-CM出力）"
    },
    {
      "indent": 3,
      "text": "Next, we show how the cipher salt is generated. The input block for AES-CM is generated by exclusive-ORing the master salt with the concatenation of the encryption salt label. That value is padded and encrypted as above.",
      "ja": "次に、我々は暗号塩が生成される方法を示します。 AES-CMの入力ブロックは、排他的論理和により暗号化塩ラベルの連結とマスター塩が生成されます。この値は、パディングされ、上記のように暗号化されています。"
    },
    {
      "indent": 5,
      "text": "index DIV kdr: 000000000000 label: 07 master salt: 0EC675AD498AFEEBB6960B3AABE6",
      "ja": "インデックスDIVのKDR：000000000000ラベル：07マスター塩：0EC675AD498AFEEBB6960B3AABE6"
    },
    {
      "indent": 5,
      "text": "--------------------------------------------------\nXOR:              0EC675AD498AFEECB6960B3AABE6     (x, PRF input)",
      "raw": true
    },
    {
      "indent": 5,
      "text": "x*2^16: 0EC675AD498AFEECB6960B3AABE60000 (AES-CM input)",
      "ja": "X * 2 ^ 16：0EC675AD498AFEECB6960B3AABE60000（AES-CM入力）"
    },
    {
      "indent": 23,
      "text": "AB01818174C40D39A3781F7C2D270733 (AES-CM ouptut)",
      "ja": "AB01818174C40D39A3781F7C2D270733（AES-GCM出力）"
    },
    {
      "indent": 5,
      "text": "hdr. cipher salt: AB01818174C40D39A3781F7C2D27",
      "ja": "HDR。暗号塩：AB01818174C40D39A3781F7C2D27"
    },
    {
      "indent": 0,
      "text": "A.2. Header Encryption Test Vectors Using AES-CM",
      "ja": "A.2。 AES-CMを使用してヘッダーの暗号化テストベクトル"
    },
    {
      "indent": 3,
      "text": "This section provides test vectors for the encryption of a header extension using the AES_CM cryptographic transform.",
      "ja": "このセクションでは、AES_CMの暗号変換を使用してヘッダ拡張の暗号化のためのテストベクトルを提供します。"
    },
    {
      "indent": 3,
      "text": "The header extension is encrypted using the header cipher key and header cipher salt computed in Appendix A.1. The header extension is carried in an SRTP-encrypted RTP packet with SSRC 0xCAFEBABE, sequence number 0x1234, and an all-zero rollover counter.",
      "ja": "ヘッダ拡張ヘッダは暗号鍵および付録A.1で計算ヘッダ暗号塩を使用して暗号化されます。ヘッダ拡張はSSRC 0xCAFEBABE、配列番号0x1234の、及び全ゼロロールオーバーカウンターでSRTPで暗号化されたRTPパケットで運ばれます。"
    },
    {
      "indent": 7,
      "text": "Session Key:      549752054D6FB708622C4A2E596A1B93\nSession Salt:     AB01818174C40D39A3781F7C2D27",
      "raw": true
    },
    {
      "indent": 7,
      "text": "SSRC:                     CAFEBABE\nRollover Counter:                 00000000\nSequence Number:                          1234\n----------------------------------------------\nInit. Counter:    AB018181BE3AB787A3781F7C3F130000",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The SRTP session was negotiated to indicate that header extension ID values 1, 3, and 4 are encrypted.",
      "ja": "SRTPセッションは、そのヘッダ拡張ID値1を示すためにネゴシエート3、および4は暗号化されました。"
    },
    {
      "indent": 3,
      "text": "In hexadecimal, the header extension being encrypted is as follows (spaces have been added to show the internal structure of the header extension):",
      "ja": "進数では、暗号化されたヘッダ拡張は、（スペースがヘッダ拡張の内部構造を示すために追加されている）以下の通りであります："
    },
    {
      "indent": 5,
      "text": "17 414273A475262748 22 0000C8 30 8E 46 55996386B395FB 00",
      "ja": "17 414273A475262748 22 0000C8 30 8E 46 00 55996386B395FB"
    },
    {
      "indent": 3,
      "text": "This header extension is 24 bytes long. (Its values are intended to represent plausible values of the header extension elements shown in Section 3.1, but their specific meaning is not important for the example.) The header extension \"defined by profile\" and \"length\" fields, which in this case are BEDE 0006 in hexadecimal, are not included in the encryption process.",
      "ja": "このヘッダー拡張は24バイト長です。この場合には「長さ」フィールド、「プロファイルによって定義された」（その値は3.1で示したヘッダ拡張要素のもっともらしい値を表すことを意図し、それらの具体的な意味は、例えば重要ではないれている。）ヘッダ拡張16進数でビード0006は、暗号化プロセスに含まれていません。"
    },
    {
      "indent": 3,
      "text": "In hexadecimal, the corresponding encryption mask selecting the bodies of header extensions 1, 2, and 4 (corresponding to the mask in Figure 2) is:",
      "ja": "進数では、対応する暗号化マスクがヘッダ拡張の体を選択1、2、および4（図2のマスクに対応する）です。"
    },
    {
      "indent": 6,
      "text": "00 FFFFFFFFFFFFFFFF 00 000000 00 FF 00 FFFFFFFFFFFFFF 00",
      "ja": "00 FFFFFFFFFFFFFFFF 00 000000 00 FF 00 FFFFFFFFFFFFFF 00"
    },
    {
      "indent": 3,
      "text": "Finally, we compute the keystream from the session key and the initial counter, apply the mask to the keystream, and then exclusive-OR the keystream with the plaintext:",
      "ja": "最後に、我々は、セッションキーと初期カウンターからキーストリームを計算する鍵ストリームにマスクを適用し、排他的論理和平文とキーストリーム："
    },
    {
      "indent": 7,
      "text": "Initial keystream:  1E19C8E1D481C779549ED1617AAA1B7A\n                    FC0D933AE7ED6CC8\nMask (hex):         00FFFFFFFFFFFFFFFF0000000000FF00\n                    FFFFFFFFFFFFFF00\nMasked keystream:   0019C8E1D481C7795400000000001B00\n                    FC0D933AE7ED6C00\nPlaintext:          17414273A475262748220000C8308E46\n                    55996386B395FB00\nCiphertext:         17588A9270F4E15E1C220000C8309546\n                    A994F0BC54789700",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Jonathan Lennox Vidyo, Inc. 433 Hackensack Avenue Seventh Floor Hackensack, NJ 07601 US",
      "ja": "ジョナサン・レノックスにVidyo社433ハッケンサックアベニュー7階ハッケンサック、NJ 07601米国"
    },
    {
      "indent": 3,
      "text": "EMail: jonathan@vidyo.com",
      "ja": "メールアドレス：jonathan@vidyo.com"
    }
  ]
}